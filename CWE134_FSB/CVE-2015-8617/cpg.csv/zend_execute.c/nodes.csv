command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3968865	File	data/converged/CVE-2015-8617_php-src/zend_execute.c								
ANR	3968866	DeclStmt									
ANR	3968867	Decl							void	"void ( const zend_extension * extension , zend_op_array * op_array )"	zend_extension_statement_handler
ANR	3968868	DeclStmt									
ANR	3968869	Decl							void	"void ( const zend_extension * extension , zend_op_array * op_array )"	zend_extension_fcall_begin_handler
ANR	3968870	DeclStmt									
ANR	3968871	Decl							void	"void ( const zend_extension * extension , zend_op_array * op_array )"	zend_extension_fcall_end_handler
ANR	3968872	DeclStmt									
ANR	3968873	Decl							const zend_internal_function	const zend_internal_function	zend_pass_function
ANR	3968874	DeclStmt									
ANR	3968875	Decl							zval	zval *	__zv
ANR	3968876	Function	zend_vm_stack_new_page	150:0:6160:6429							
ANR	3968877	FunctionDef	"zend_vm_stack_new_page (size_t size , zend_vm_stack prev)"		3968876	0					
ANR	3968878	CompoundStatement		150:96:6256:6429	3968876	0					
ANR	3968879	IdentifierDeclStatement	zend_vm_stack page = ( zend_vm_stack ) emalloc ( size ) ;	151:1:6259:6308	3968876	0	True				
ANR	3968880	IdentifierDecl	page = ( zend_vm_stack ) emalloc ( size )		3968876	0					
ANR	3968881	IdentifierDeclType	zend_vm_stack		3968876	0					
ANR	3968882	Identifier	page		3968876	1					
ANR	3968883	AssignmentExpression	page = ( zend_vm_stack ) emalloc ( size )		3968876	2		=			
ANR	3968884	Identifier	page		3968876	0					
ANR	3968885	CastExpression	( zend_vm_stack ) emalloc ( size )		3968876	1					
ANR	3968886	CastTarget	zend_vm_stack		3968876	0					
ANR	3968887	CallExpression	emalloc ( size )		3968876	1					
ANR	3968888	Callee	emalloc		3968876	0					
ANR	3968889	Identifier	emalloc		3968876	0					
ANR	3968890	ArgumentList	size		3968876	1					
ANR	3968891	Argument	size		3968876	0					
ANR	3968892	Identifier	size		3968876	0					
ANR	3968893	ExpressionStatement	page -> top = ZEND_VM_STACK_ELEMETS ( page )	153:1:6312:6351	3968876	1	True				
ANR	3968894	AssignmentExpression	page -> top = ZEND_VM_STACK_ELEMETS ( page )		3968876	0		=			
ANR	3968895	PtrMemberAccess	page -> top		3968876	0					
ANR	3968896	Identifier	page		3968876	0					
ANR	3968897	Identifier	top		3968876	1					
ANR	3968898	CallExpression	ZEND_VM_STACK_ELEMETS ( page )		3968876	1					
ANR	3968899	Callee	ZEND_VM_STACK_ELEMETS		3968876	0					
ANR	3968900	Identifier	ZEND_VM_STACK_ELEMETS		3968876	0					
ANR	3968901	ArgumentList	page		3968876	1					
ANR	3968902	Argument	page		3968876	0					
ANR	3968903	Identifier	page		3968876	0					
ANR	3968904	ExpressionStatement	page -> end = ( zval * ) ( ( char * ) page + size )	154:1:6354:6393	3968876	2	True				
ANR	3968905	AssignmentExpression	page -> end = ( zval * ) ( ( char * ) page + size )		3968876	0		=			
ANR	3968906	PtrMemberAccess	page -> end		3968876	0					
ANR	3968907	Identifier	page		3968876	0					
ANR	3968908	Identifier	end		3968876	1					
ANR	3968909	CastExpression	( zval * ) ( ( char * ) page + size )		3968876	1					
ANR	3968910	CastTarget	zval *		3968876	0					
ANR	3968911	AdditiveExpression	( char * ) page + size		3968876	1		+			
ANR	3968912	CastExpression	( char * ) page		3968876	0					
ANR	3968913	CastTarget	char *		3968876	0					
ANR	3968914	Identifier	page		3968876	1					
ANR	3968915	Identifier	size		3968876	1					
ANR	3968916	ExpressionStatement	page -> prev = prev	155:1:6396:6413	3968876	3	True				
ANR	3968917	AssignmentExpression	page -> prev = prev		3968876	0		=			
ANR	3968918	PtrMemberAccess	page -> prev		3968876	0					
ANR	3968919	Identifier	page		3968876	0					
ANR	3968920	Identifier	prev		3968876	1					
ANR	3968921	Identifier	prev		3968876	1					
ANR	3968922	ReturnStatement	return page ;	156:1:6416:6427	3968876	4	True				
ANR	3968923	Identifier	page		3968876	0					
ANR	3968924	ReturnType	static zend_always_inline zend_vm_stack		3968876	1					
ANR	3968925	Identifier	zend_vm_stack_new_page		3968876	2					
ANR	3968926	ParameterList	"size_t size , zend_vm_stack prev"		3968876	3					
ANR	3968927	Parameter	size_t size	150:63:6223:6233	3968876	0	True				
ANR	3968928	ParameterType	size_t		3968876	0					
ANR	3968929	Identifier	size		3968876	1					
ANR	3968930	Parameter	zend_vm_stack prev	150:76:6236:6253	3968876	1	True				
ANR	3968931	ParameterType	zend_vm_stack		3968876	0					
ANR	3968932	Identifier	prev		3968876	1					
ANR	3968933	CFGEntryNode	ENTRY		3968876		True				
ANR	3968934	CFGExitNode	EXIT		3968876		True				
ANR	3968935	Symbol	page -> end		3968876						
ANR	3968936	Symbol	emalloc		3968876						
ANR	3968937	Symbol	size		3968876						
ANR	3968938	Symbol	prev		3968876						
ANR	3968939	Symbol	* page		3968876						
ANR	3968940	Symbol	page		3968876						
ANR	3968941	Symbol	page -> top		3968876						
ANR	3968942	Symbol	ZEND_VM_STACK_ELEMETS		3968876						
ANR	3968943	Symbol	page -> prev		3968876						
ANR	3968944	Function	zend_vm_stack_init	159:0:6432:6664							
ANR	3968945	FunctionDef	zend_vm_stack_init ()		3968944	0					
ANR	3968946	CompoundStatement		160:0:6471:6664	3968944	0					
ANR	3968947	ExpressionStatement	"EG ( vm_stack ) = zend_vm_stack_new_page ( ZEND_VM_STACK_PAGE_SIZE ( 0 ) , NULL )"	161:1:6474:6562	3968944	0	True				
ANR	3968948	AssignmentExpression	"EG ( vm_stack ) = zend_vm_stack_new_page ( ZEND_VM_STACK_PAGE_SIZE ( 0 ) , NULL )"		3968944	0		=			
ANR	3968949	CallExpression	EG ( vm_stack )		3968944	0					
ANR	3968950	Callee	EG		3968944	0					
ANR	3968951	Identifier	EG		3968944	0					
ANR	3968952	ArgumentList	vm_stack		3968944	1					
ANR	3968953	Argument	vm_stack		3968944	0					
ANR	3968954	Identifier	vm_stack		3968944	0					
ANR	3968955	CallExpression	"zend_vm_stack_new_page ( ZEND_VM_STACK_PAGE_SIZE ( 0 ) , NULL )"		3968944	1					
ANR	3968956	Callee	zend_vm_stack_new_page		3968944	0					
ANR	3968957	Identifier	zend_vm_stack_new_page		3968944	0					
ANR	3968958	ArgumentList	ZEND_VM_STACK_PAGE_SIZE ( 0 )		3968944	1					
ANR	3968959	Argument	ZEND_VM_STACK_PAGE_SIZE ( 0 )		3968944	0					
ANR	3968960	CallExpression	ZEND_VM_STACK_PAGE_SIZE ( 0 )		3968944	0					
ANR	3968961	Callee	ZEND_VM_STACK_PAGE_SIZE		3968944	0					
ANR	3968962	Identifier	ZEND_VM_STACK_PAGE_SIZE		3968944	0					
ANR	3968963	ArgumentList	0		3968944	1					
ANR	3968964	Argument	0		3968944	0					
ANR	3968965	PrimaryExpression	0		3968944	0					
ANR	3968966	Argument	NULL		3968944	1					
ANR	3968967	Identifier	NULL		3968944	0					
ANR	3968968	ExpressionStatement	EG ( vm_stack ) -> top ++	162:1:6565:6584	3968944	1	True				
ANR	3968969	PostIncDecOperationExpression	EG ( vm_stack ) -> top ++		3968944	0					
ANR	3968970	PtrMemberAccess	EG ( vm_stack ) -> top		3968944	0					
ANR	3968971	CallExpression	EG ( vm_stack )		3968944	0					
ANR	3968972	Callee	EG		3968944	0					
ANR	3968973	Identifier	EG		3968944	0					
ANR	3968974	ArgumentList	vm_stack		3968944	1					
ANR	3968975	Argument	vm_stack		3968944	0					
ANR	3968976	Identifier	vm_stack		3968944	0					
ANR	3968977	Identifier	top		3968944	1					
ANR	3968978	IncDec	++		3968944	1					
ANR	3968979	ExpressionStatement	EG ( vm_stack_top ) = EG ( vm_stack ) -> top	163:1:6587:6623	3968944	2	True				
ANR	3968980	AssignmentExpression	EG ( vm_stack_top ) = EG ( vm_stack ) -> top		3968944	0		=			
ANR	3968981	CallExpression	EG ( vm_stack_top )		3968944	0					
ANR	3968982	Callee	EG		3968944	0					
ANR	3968983	Identifier	EG		3968944	0					
ANR	3968984	ArgumentList	vm_stack_top		3968944	1					
ANR	3968985	Argument	vm_stack_top		3968944	0					
ANR	3968986	Identifier	vm_stack_top		3968944	0					
ANR	3968987	PtrMemberAccess	EG ( vm_stack ) -> top		3968944	1					
ANR	3968988	CallExpression	EG ( vm_stack )		3968944	0					
ANR	3968989	Callee	EG		3968944	0					
ANR	3968990	Identifier	EG		3968944	0					
ANR	3968991	ArgumentList	vm_stack		3968944	1					
ANR	3968992	Argument	vm_stack		3968944	0					
ANR	3968993	Identifier	vm_stack		3968944	0					
ANR	3968994	Identifier	top		3968944	1					
ANR	3968995	ExpressionStatement	EG ( vm_stack_end ) = EG ( vm_stack ) -> end	164:1:6626:6662	3968944	3	True				
ANR	3968996	AssignmentExpression	EG ( vm_stack_end ) = EG ( vm_stack ) -> end		3968944	0		=			
ANR	3968997	CallExpression	EG ( vm_stack_end )		3968944	0					
ANR	3968998	Callee	EG		3968944	0					
ANR	3968999	Identifier	EG		3968944	0					
ANR	3969000	ArgumentList	vm_stack_end		3968944	1					
ANR	3969001	Argument	vm_stack_end		3968944	0					
ANR	3969002	Identifier	vm_stack_end		3968944	0					
ANR	3969003	PtrMemberAccess	EG ( vm_stack ) -> end		3968944	1					
ANR	3969004	CallExpression	EG ( vm_stack )		3968944	0					
ANR	3969005	Callee	EG		3968944	0					
ANR	3969006	Identifier	EG		3968944	0					
ANR	3969007	ArgumentList	vm_stack		3968944	1					
ANR	3969008	Argument	vm_stack		3968944	0					
ANR	3969009	Identifier	vm_stack		3968944	0					
ANR	3969010	Identifier	end		3968944	1					
ANR	3969011	ReturnType	ZEND_API void		3968944	1					
ANR	3969012	Identifier	zend_vm_stack_init		3968944	2					
ANR	3969013	ParameterList			3968944	3					
ANR	3969014	CFGEntryNode	ENTRY		3968944		True				
ANR	3969015	CFGExitNode	EXIT		3968944		True				
ANR	3969016	Symbol	vm_stack_top		3968944						
ANR	3969017	Symbol	EG		3968944						
ANR	3969018	Symbol	NULL		3968944						
ANR	3969019	Symbol	EG ( vm_stack ) -> end		3968944						
ANR	3969020	Symbol	EG ( vm_stack ) -> top		3968944						
ANR	3969021	Symbol	vm_stack		3968944						
ANR	3969022	Symbol	vm_stack_end		3968944						
ANR	3969023	Symbol	* EG		3968944						
ANR	3969024	Symbol	zend_vm_stack_new_page		3968944						
ANR	3969025	Symbol	ZEND_VM_STACK_PAGE_SIZE		3968944						
ANR	3969026	Function	zend_vm_stack_destroy	167:0:6667:6839							
ANR	3969027	FunctionDef	zend_vm_stack_destroy ()		3969026	0					
ANR	3969028	CompoundStatement		168:0:6709:6839	3969026	0					
ANR	3969029	IdentifierDeclStatement	zend_vm_stack stack = EG ( vm_stack ) ;	169:1:6712:6746	3969026	0	True				
ANR	3969030	IdentifierDecl	stack = EG ( vm_stack )		3969026	0					
ANR	3969031	IdentifierDeclType	zend_vm_stack		3969026	0					
ANR	3969032	Identifier	stack		3969026	1					
ANR	3969033	AssignmentExpression	stack = EG ( vm_stack )		3969026	2		=			
ANR	3969034	Identifier	stack		3969026	0					
ANR	3969035	CallExpression	EG ( vm_stack )		3969026	1					
ANR	3969036	Callee	EG		3969026	0					
ANR	3969037	Identifier	EG		3969026	0					
ANR	3969038	ArgumentList	vm_stack		3969026	1					
ANR	3969039	Argument	vm_stack		3969026	0					
ANR	3969040	Identifier	vm_stack		3969026	0					
ANR	3969041	WhileStatement	while ( stack != NULL )		3969026	1					
ANR	3969042	Condition	stack != NULL	171:8:6757:6769	3969026	0	True				
ANR	3969043	EqualityExpression	stack != NULL		3969026	0		!=			
ANR	3969044	Identifier	stack		3969026	0					
ANR	3969045	Identifier	NULL		3969026	1					
ANR	3969046	CompoundStatement		5:2:66:95	3969026	1					
ANR	3969047	IdentifierDeclStatement	zend_vm_stack p = stack -> prev ;	172:2:6776:6805	3969026	0	True				
ANR	3969048	IdentifierDecl	p = stack -> prev		3969026	0					
ANR	3969049	IdentifierDeclType	zend_vm_stack		3969026	0					
ANR	3969050	Identifier	p		3969026	1					
ANR	3969051	AssignmentExpression	p = stack -> prev		3969026	2		=			
ANR	3969052	Identifier	p		3969026	0					
ANR	3969053	PtrMemberAccess	stack -> prev		3969026	1					
ANR	3969054	Identifier	stack		3969026	0					
ANR	3969055	Identifier	prev		3969026	1					
ANR	3969056	ExpressionStatement	efree ( stack )	173:2:6809:6821	3969026	1	True				
ANR	3969057	CallExpression	efree ( stack )		3969026	0					
ANR	3969058	Callee	efree		3969026	0					
ANR	3969059	Identifier	efree		3969026	0					
ANR	3969060	ArgumentList	stack		3969026	1					
ANR	3969061	Argument	stack		3969026	0					
ANR	3969062	Identifier	stack		3969026	0					
ANR	3969063	ExpressionStatement	stack = p	174:2:6825:6834	3969026	2	True				
ANR	3969064	AssignmentExpression	stack = p		3969026	0		=			
ANR	3969065	Identifier	stack		3969026	0					
ANR	3969066	Identifier	p		3969026	1					
ANR	3969067	ReturnType	ZEND_API void		3969026	1					
ANR	3969068	Identifier	zend_vm_stack_destroy		3969026	2					
ANR	3969069	ParameterList			3969026	3					
ANR	3969070	CFGEntryNode	ENTRY		3969026		True				
ANR	3969071	CFGExitNode	EXIT		3969026		True				
ANR	3969072	Symbol	p		3969026						
ANR	3969073	Symbol	stack		3969026						
ANR	3969074	Symbol	EG		3969026						
ANR	3969075	Symbol	NULL		3969026						
ANR	3969076	Symbol	vm_stack		3969026						
ANR	3969077	Symbol	* stack		3969026						
ANR	3969078	Symbol	stack -> prev		3969026						
ANR	3969079	Function	zend_vm_stack_extend	178:0:6842:7282							
ANR	3969080	FunctionDef	zend_vm_stack_extend (size_t size)		3969079	0					
ANR	3969081	CompoundStatement		179:0:6891:7282	3969079	0					
ANR	3969082	IdentifierDeclStatement	zend_vm_stack stack ;	180:1:6894:6913	3969079	0	True				
ANR	3969083	IdentifierDecl	stack		3969079	0					
ANR	3969084	IdentifierDeclType	zend_vm_stack		3969079	0					
ANR	3969085	Identifier	stack		3969079	1					
ANR	3969086	IdentifierDeclStatement	void * ptr ;	181:1:6916:6925	3969079	1	True				
ANR	3969087	IdentifierDecl	* ptr		3969079	0					
ANR	3969088	IdentifierDeclType	void *		3969079	0					
ANR	3969089	Identifier	ptr		3969079	1					
ANR	3969090	ExpressionStatement	stack = EG ( vm_stack )	183:1:6929:6949	3969079	2	True				
ANR	3969091	AssignmentExpression	stack = EG ( vm_stack )		3969079	0		=			
ANR	3969092	Identifier	stack		3969079	0					
ANR	3969093	CallExpression	EG ( vm_stack )		3969079	1					
ANR	3969094	Callee	EG		3969079	0					
ANR	3969095	Identifier	EG		3969079	0					
ANR	3969096	ArgumentList	vm_stack		3969079	1					
ANR	3969097	Argument	vm_stack		3969079	0					
ANR	3969098	Identifier	vm_stack		3969079	0					
ANR	3969099	ExpressionStatement	stack -> top = EG ( vm_stack_top )	184:1:6952:6981	3969079	3	True				
ANR	3969100	AssignmentExpression	stack -> top = EG ( vm_stack_top )		3969079	0		=			
ANR	3969101	PtrMemberAccess	stack -> top		3969079	0					
ANR	3969102	Identifier	stack		3969079	0					
ANR	3969103	Identifier	top		3969079	1					
ANR	3969104	CallExpression	EG ( vm_stack_top )		3969079	1					
ANR	3969105	Callee	EG		3969079	0					
ANR	3969106	Identifier	EG		3969079	0					
ANR	3969107	ArgumentList	vm_stack_top		3969079	1					
ANR	3969108	Argument	vm_stack_top		3969079	0					
ANR	3969109	Identifier	vm_stack_top		3969079	0					
ANR	3969110	ExpressionStatement	"EG ( vm_stack ) = stack = zend_vm_stack_new_page ( EXPECTED ( size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 0 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 0 , size ) , stack )"	185:1:6984:7166	3969079	4	True				
ANR	3969111	AssignmentExpression	"EG ( vm_stack ) = stack = zend_vm_stack_new_page ( EXPECTED ( size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 0 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 0 , size ) , stack )"		3969079	0		=			
ANR	3969112	CallExpression	EG ( vm_stack )		3969079	0					
ANR	3969113	Callee	EG		3969079	0					
ANR	3969114	Identifier	EG		3969079	0					
ANR	3969115	ArgumentList	vm_stack		3969079	1					
ANR	3969116	Argument	vm_stack		3969079	0					
ANR	3969117	Identifier	vm_stack		3969079	0					
ANR	3969118	AssignmentExpression	"stack = zend_vm_stack_new_page ( EXPECTED ( size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 0 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 0 , size ) , stack )"		3969079	1		=			
ANR	3969119	Identifier	stack		3969079	0					
ANR	3969120	CallExpression	"zend_vm_stack_new_page ( EXPECTED ( size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 0 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 0 , size ) , stack )"		3969079	1					
ANR	3969121	Callee	zend_vm_stack_new_page		3969079	0					
ANR	3969122	Identifier	zend_vm_stack_new_page		3969079	0					
ANR	3969123	ArgumentList	"EXPECTED ( size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 0 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 0 , size )"		3969079	1					
ANR	3969124	Argument	"EXPECTED ( size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 0 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 0 , size )"		3969079	0					
ANR	3969125	ConditionalExpression	"EXPECTED ( size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 0 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 0 , size )"		3969079	0					
ANR	3969126	Condition	EXPECTED ( size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 ) )		3969079	0					
ANR	3969127	CallExpression	EXPECTED ( size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 ) )		3969079	0					
ANR	3969128	Callee	EXPECTED		3969079	0					
ANR	3969129	Identifier	EXPECTED		3969079	0					
ANR	3969130	ArgumentList	size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 )		3969079	1					
ANR	3969131	Argument	size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 )		3969079	0					
ANR	3969132	RelationalExpression	size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 )		3969079	0		<			
ANR	3969133	Identifier	size		3969079	0					
ANR	3969134	CallExpression	ZEND_VM_STACK_FREE_PAGE_SIZE ( 0 )		3969079	1					
ANR	3969135	Callee	ZEND_VM_STACK_FREE_PAGE_SIZE		3969079	0					
ANR	3969136	Identifier	ZEND_VM_STACK_FREE_PAGE_SIZE		3969079	0					
ANR	3969137	ArgumentList	0		3969079	1					
ANR	3969138	Argument	0		3969079	0					
ANR	3969139	PrimaryExpression	0		3969079	0					
ANR	3969140	CallExpression	ZEND_VM_STACK_PAGE_SIZE ( 0 )		3969079	1					
ANR	3969141	Callee	ZEND_VM_STACK_PAGE_SIZE		3969079	0					
ANR	3969142	Identifier	ZEND_VM_STACK_PAGE_SIZE		3969079	0					
ANR	3969143	ArgumentList	0		3969079	1					
ANR	3969144	Argument	0		3969079	0					
ANR	3969145	PrimaryExpression	0		3969079	0					
ANR	3969146	CallExpression	"ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 0 , size )"		3969079	2					
ANR	3969147	Callee	ZEND_VM_STACK_PAGE_ALIGNED_SIZE		3969079	0					
ANR	3969148	Identifier	ZEND_VM_STACK_PAGE_ALIGNED_SIZE		3969079	0					
ANR	3969149	ArgumentList	0		3969079	1					
ANR	3969150	Argument	0		3969079	0					
ANR	3969151	PrimaryExpression	0		3969079	0					
ANR	3969152	Argument	size		3969079	1					
ANR	3969153	Identifier	size		3969079	0					
ANR	3969154	Argument	stack		3969079	1					
ANR	3969155	Identifier	stack		3969079	0					
ANR	3969156	ExpressionStatement	ptr = stack -> top	189:1:7169:7185	3969079	5	True				
ANR	3969157	AssignmentExpression	ptr = stack -> top		3969079	0		=			
ANR	3969158	Identifier	ptr		3969079	0					
ANR	3969159	PtrMemberAccess	stack -> top		3969079	1					
ANR	3969160	Identifier	stack		3969079	0					
ANR	3969161	Identifier	top		3969079	1					
ANR	3969162	ExpressionStatement	EG ( vm_stack_top ) = ( void * ) ( ( ( char * ) ptr ) + size )	190:1:7188:7235	3969079	6	True				
ANR	3969163	AssignmentExpression	EG ( vm_stack_top ) = ( void * ) ( ( ( char * ) ptr ) + size )		3969079	0		=			
ANR	3969164	CallExpression	EG ( vm_stack_top )		3969079	0					
ANR	3969165	Callee	EG		3969079	0					
ANR	3969166	Identifier	EG		3969079	0					
ANR	3969167	ArgumentList	vm_stack_top		3969079	1					
ANR	3969168	Argument	vm_stack_top		3969079	0					
ANR	3969169	Identifier	vm_stack_top		3969079	0					
ANR	3969170	CastExpression	( void * ) ( ( ( char * ) ptr ) + size )		3969079	1					
ANR	3969171	CastTarget	void *		3969079	0					
ANR	3969172	AdditiveExpression	( ( char * ) ptr ) + size		3969079	1		+			
ANR	3969173	CastExpression	( char * ) ptr		3969079	0					
ANR	3969174	CastTarget	char *		3969079	0					
ANR	3969175	Identifier	ptr		3969079	1					
ANR	3969176	Identifier	size		3969079	1					
ANR	3969177	ExpressionStatement	EG ( vm_stack_end ) = stack -> end	191:1:7238:7267	3969079	7	True				
ANR	3969178	AssignmentExpression	EG ( vm_stack_end ) = stack -> end		3969079	0		=			
ANR	3969179	CallExpression	EG ( vm_stack_end )		3969079	0					
ANR	3969180	Callee	EG		3969079	0					
ANR	3969181	Identifier	EG		3969079	0					
ANR	3969182	ArgumentList	vm_stack_end		3969079	1					
ANR	3969183	Argument	vm_stack_end		3969079	0					
ANR	3969184	Identifier	vm_stack_end		3969079	0					
ANR	3969185	PtrMemberAccess	stack -> end		3969079	1					
ANR	3969186	Identifier	stack		3969079	0					
ANR	3969187	Identifier	end		3969079	1					
ANR	3969188	ReturnStatement	return ptr ;	192:1:7270:7280	3969079	8	True				
ANR	3969189	Identifier	ptr		3969079	0					
ANR	3969190	ReturnType	ZEND_API void *		3969079	1					
ANR	3969191	Identifier	zend_vm_stack_extend		3969079	2					
ANR	3969192	ParameterList	size_t size		3969079	3					
ANR	3969193	Parameter	size_t size	178:36:6878:6888	3969079	0	True				
ANR	3969194	ParameterType	size_t		3969079	0					
ANR	3969195	Identifier	size		3969079	1					
ANR	3969196	CFGEntryNode	ENTRY		3969079		True				
ANR	3969197	CFGExitNode	EXIT		3969079		True				
ANR	3969198	Symbol	stack		3969079						
ANR	3969199	Symbol	EG		3969079						
ANR	3969200	Symbol	stack -> end		3969079						
ANR	3969201	Symbol	ZEND_VM_STACK_PAGE_ALIGNED_SIZE		3969079						
ANR	3969202	Symbol	ZEND_VM_STACK_FREE_PAGE_SIZE		3969079						
ANR	3969203	Symbol	ptr		3969079						
ANR	3969204	Symbol	ZEND_VM_STACK_PAGE_SIZE		3969079						
ANR	3969205	Symbol	vm_stack_top		3969079						
ANR	3969206	Symbol	size		3969079						
ANR	3969207	Symbol	vm_stack		3969079						
ANR	3969208	Symbol	* stack		3969079						
ANR	3969209	Symbol	vm_stack_end		3969079						
ANR	3969210	Symbol	stack -> top		3969079						
ANR	3969211	Symbol	zend_vm_stack_new_page		3969079						
ANR	3969212	Symbol	EXPECTED		3969079						
ANR	3969213	Function	zend_get_compiled_variable_value	195:0:7285:7409							
ANR	3969214	FunctionDef	"zend_get_compiled_variable_value (const zend_execute_data * execute_data , uint32_t var)"		3969213	0					
ANR	3969215	CompoundStatement		196:0:7386:7409	3969213	0					
ANR	3969216	ReturnStatement	return EX_VAR ( var ) ;	197:1:7389:7407	3969213	0	True				
ANR	3969217	CallExpression	EX_VAR ( var )		3969213	0					
ANR	3969218	Callee	EX_VAR		3969213	0					
ANR	3969219	Identifier	EX_VAR		3969213	0					
ANR	3969220	ArgumentList	var		3969213	1					
ANR	3969221	Argument	var		3969213	0					
ANR	3969222	Identifier	var		3969213	0					
ANR	3969223	ReturnType	ZEND_API zval *		3969213	1					
ANR	3969224	Identifier	zend_get_compiled_variable_value		3969213	2					
ANR	3969225	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3969213	3					
ANR	3969226	Parameter	const zend_execute_data * execute_data	195:48:7333:7369	3969213	0	True				
ANR	3969227	ParameterType	const zend_execute_data *		3969213	0					
ANR	3969228	Identifier	execute_data		3969213	1					
ANR	3969229	Parameter	uint32_t var	195:87:7372:7383	3969213	1	True				
ANR	3969230	ParameterType	uint32_t		3969213	0					
ANR	3969231	Identifier	var		3969213	1					
ANR	3969232	CFGEntryNode	ENTRY		3969213		True				
ANR	3969233	CFGExitNode	EXIT		3969213		True				
ANR	3969234	Symbol	var		3969213						
ANR	3969235	Symbol	EX_VAR		3969213						
ANR	3969236	Symbol	execute_data		3969213						
ANR	3969237	Function	_get_zval_ptr_tmp	200:0:7412:7651							
ANR	3969238	FunctionDef	"_get_zval_ptr_tmp (uint32_t var , const zend_execute_data * execute_data , zend_free_op * should_free)"		3969237	0					
ANR	3969239	CompoundStatement		201:0:7542:7651	3969237	0					
ANR	3969240	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	202:1:7545:7568	3969237	0	True				
ANR	3969241	IdentifierDecl	* ret = EX_VAR ( var )		3969237	0					
ANR	3969242	IdentifierDeclType	zval *		3969237	0					
ANR	3969243	Identifier	ret		3969237	1					
ANR	3969244	AssignmentExpression	* ret = EX_VAR ( var )		3969237	2		=			
ANR	3969245	Identifier	ret		3969237	0					
ANR	3969246	CallExpression	EX_VAR ( var )		3969237	1					
ANR	3969247	Callee	EX_VAR		3969237	0					
ANR	3969248	Identifier	EX_VAR		3969237	0					
ANR	3969249	ArgumentList	var		3969237	1					
ANR	3969250	Argument	var		3969237	0					
ANR	3969251	Identifier	var		3969237	0					
ANR	3969252	ExpressionStatement	* should_free = ret	203:1:7571:7589	3969237	1	True				
ANR	3969253	AssignmentExpression	* should_free = ret		3969237	0		=			
ANR	3969254	UnaryOperationExpression	* should_free		3969237	0					
ANR	3969255	UnaryOperator	*		3969237	0					
ANR	3969256	Identifier	should_free		3969237	1					
ANR	3969257	Identifier	ret		3969237	1					
ANR	3969258	ExpressionStatement	ZEND_ASSERT ( Z_TYPE_P ( ret ) != IS_REFERENCE )	205:1:7593:7635	3969237	2	True				
ANR	3969259	CallExpression	ZEND_ASSERT ( Z_TYPE_P ( ret ) != IS_REFERENCE )		3969237	0					
ANR	3969260	Callee	ZEND_ASSERT		3969237	0					
ANR	3969261	Identifier	ZEND_ASSERT		3969237	0					
ANR	3969262	ArgumentList	Z_TYPE_P ( ret ) != IS_REFERENCE		3969237	1					
ANR	3969263	Argument	Z_TYPE_P ( ret ) != IS_REFERENCE		3969237	0					
ANR	3969264	EqualityExpression	Z_TYPE_P ( ret ) != IS_REFERENCE		3969237	0		!=			
ANR	3969265	CallExpression	Z_TYPE_P ( ret )		3969237	0					
ANR	3969266	Callee	Z_TYPE_P		3969237	0					
ANR	3969267	Identifier	Z_TYPE_P		3969237	0					
ANR	3969268	ArgumentList	ret		3969237	1					
ANR	3969269	Argument	ret		3969237	0					
ANR	3969270	Identifier	ret		3969237	0					
ANR	3969271	Identifier	IS_REFERENCE		3969237	1					
ANR	3969272	ReturnStatement	return ret ;	207:1:7639:7649	3969237	3	True				
ANR	3969273	Identifier	ret		3969237	0					
ANR	3969274	ReturnType	static zend_always_inline zval *		3969237	1					
ANR	3969275	Identifier	_get_zval_ptr_tmp		3969237	2					
ANR	3969276	ParameterList	"uint32_t var , const zend_execute_data * execute_data , zend_free_op * should_free"		3969237	3					
ANR	3969277	Parameter	uint32_t var	200:50:7462:7473	3969237	0	True				
ANR	3969278	ParameterType	uint32_t		3969237	0					
ANR	3969279	Identifier	var		3969237	1					
ANR	3969280	Parameter	const zend_execute_data * execute_data	200:64:7476:7512	3969237	1	True				
ANR	3969281	ParameterType	const zend_execute_data *		3969237	0					
ANR	3969282	Identifier	execute_data		3969237	1					
ANR	3969283	Parameter	zend_free_op * should_free	200:103:7515:7539	3969237	2	True				
ANR	3969284	ParameterType	zend_free_op *		3969237	0					
ANR	3969285	Identifier	should_free		3969237	1					
ANR	3969286	CFGEntryNode	ENTRY		3969237		True				
ANR	3969287	CFGExitNode	EXIT		3969237		True				
ANR	3969288	Symbol	should_free		3969237						
ANR	3969289	Symbol	ret		3969237						
ANR	3969290	Symbol	IS_REFERENCE		3969237						
ANR	3969291	Symbol	var		3969237						
ANR	3969292	Symbol	EX_VAR		3969237						
ANR	3969293	Symbol	Z_TYPE_P		3969237						
ANR	3969294	Symbol	execute_data		3969237						
ANR	3969295	Symbol	* should_free		3969237						
ANR	3969296	Function	_get_zval_ptr_var	210:0:7654:7847							
ANR	3969297	FunctionDef	"_get_zval_ptr_var (uint32_t var , const zend_execute_data * execute_data , zend_free_op * should_free)"		3969296	0					
ANR	3969298	CompoundStatement		211:0:7784:7847	3969296	0					
ANR	3969299	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	212:1:7787:7810	3969296	0	True				
ANR	3969300	IdentifierDecl	* ret = EX_VAR ( var )		3969296	0					
ANR	3969301	IdentifierDeclType	zval *		3969296	0					
ANR	3969302	Identifier	ret		3969296	1					
ANR	3969303	AssignmentExpression	* ret = EX_VAR ( var )		3969296	2		=			
ANR	3969304	Identifier	ret		3969296	0					
ANR	3969305	CallExpression	EX_VAR ( var )		3969296	1					
ANR	3969306	Callee	EX_VAR		3969296	0					
ANR	3969307	Identifier	EX_VAR		3969296	0					
ANR	3969308	ArgumentList	var		3969296	1					
ANR	3969309	Argument	var		3969296	0					
ANR	3969310	Identifier	var		3969296	0					
ANR	3969311	ExpressionStatement	* should_free = ret	214:1:7814:7832	3969296	1	True				
ANR	3969312	AssignmentExpression	* should_free = ret		3969296	0		=			
ANR	3969313	UnaryOperationExpression	* should_free		3969296	0					
ANR	3969314	UnaryOperator	*		3969296	0					
ANR	3969315	Identifier	should_free		3969296	1					
ANR	3969316	Identifier	ret		3969296	1					
ANR	3969317	ReturnStatement	return ret ;	215:1:7835:7845	3969296	2	True				
ANR	3969318	Identifier	ret		3969296	0					
ANR	3969319	ReturnType	static zend_always_inline zval *		3969296	1					
ANR	3969320	Identifier	_get_zval_ptr_var		3969296	2					
ANR	3969321	ParameterList	"uint32_t var , const zend_execute_data * execute_data , zend_free_op * should_free"		3969296	3					
ANR	3969322	Parameter	uint32_t var	210:50:7704:7715	3969296	0	True				
ANR	3969323	ParameterType	uint32_t		3969296	0					
ANR	3969324	Identifier	var		3969296	1					
ANR	3969325	Parameter	const zend_execute_data * execute_data	210:64:7718:7754	3969296	1	True				
ANR	3969326	ParameterType	const zend_execute_data *		3969296	0					
ANR	3969327	Identifier	execute_data		3969296	1					
ANR	3969328	Parameter	zend_free_op * should_free	210:103:7757:7781	3969296	2	True				
ANR	3969329	ParameterType	zend_free_op *		3969296	0					
ANR	3969330	Identifier	should_free		3969296	1					
ANR	3969331	CFGEntryNode	ENTRY		3969296		True				
ANR	3969332	CFGExitNode	EXIT		3969296		True				
ANR	3969333	Symbol	should_free		3969296						
ANR	3969334	Symbol	ret		3969296						
ANR	3969335	Symbol	var		3969296						
ANR	3969336	Symbol	EX_VAR		3969296						
ANR	3969337	Symbol	execute_data		3969296						
ANR	3969338	Symbol	* should_free		3969296						
ANR	3969339	Function	_get_zval_ptr_var_deref	218:0:7850:8067							
ANR	3969340	FunctionDef	"_get_zval_ptr_var_deref (uint32_t var , const zend_execute_data * execute_data , zend_free_op * should_free)"		3969339	0					
ANR	3969341	CompoundStatement		219:0:7986:8067	3969339	0					
ANR	3969342	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	220:1:7989:8012	3969339	0	True				
ANR	3969343	IdentifierDecl	* ret = EX_VAR ( var )		3969339	0					
ANR	3969344	IdentifierDeclType	zval *		3969339	0					
ANR	3969345	Identifier	ret		3969339	1					
ANR	3969346	AssignmentExpression	* ret = EX_VAR ( var )		3969339	2		=			
ANR	3969347	Identifier	ret		3969339	0					
ANR	3969348	CallExpression	EX_VAR ( var )		3969339	1					
ANR	3969349	Callee	EX_VAR		3969339	0					
ANR	3969350	Identifier	EX_VAR		3969339	0					
ANR	3969351	ArgumentList	var		3969339	1					
ANR	3969352	Argument	var		3969339	0					
ANR	3969353	Identifier	var		3969339	0					
ANR	3969354	ExpressionStatement	* should_free = ret	222:1:8016:8034	3969339	1	True				
ANR	3969355	AssignmentExpression	* should_free = ret		3969339	0		=			
ANR	3969356	UnaryOperationExpression	* should_free		3969339	0					
ANR	3969357	UnaryOperator	*		3969339	0					
ANR	3969358	Identifier	should_free		3969339	1					
ANR	3969359	Identifier	ret		3969339	1					
ANR	3969360	ExpressionStatement	ZVAL_DEREF ( ret )	223:1:8037:8052	3969339	2	True				
ANR	3969361	CallExpression	ZVAL_DEREF ( ret )		3969339	0					
ANR	3969362	Callee	ZVAL_DEREF		3969339	0					
ANR	3969363	Identifier	ZVAL_DEREF		3969339	0					
ANR	3969364	ArgumentList	ret		3969339	1					
ANR	3969365	Argument	ret		3969339	0					
ANR	3969366	Identifier	ret		3969339	0					
ANR	3969367	ReturnStatement	return ret ;	224:1:8055:8065	3969339	3	True				
ANR	3969368	Identifier	ret		3969339	0					
ANR	3969369	ReturnType	static zend_always_inline zval *		3969339	1					
ANR	3969370	Identifier	_get_zval_ptr_var_deref		3969339	2					
ANR	3969371	ParameterList	"uint32_t var , const zend_execute_data * execute_data , zend_free_op * should_free"		3969339	3					
ANR	3969372	Parameter	uint32_t var	218:56:7906:7917	3969339	0	True				
ANR	3969373	ParameterType	uint32_t		3969339	0					
ANR	3969374	Identifier	var		3969339	1					
ANR	3969375	Parameter	const zend_execute_data * execute_data	218:70:7920:7956	3969339	1	True				
ANR	3969376	ParameterType	const zend_execute_data *		3969339	0					
ANR	3969377	Identifier	execute_data		3969339	1					
ANR	3969378	Parameter	zend_free_op * should_free	218:109:7959:7983	3969339	2	True				
ANR	3969379	ParameterType	zend_free_op *		3969339	0					
ANR	3969380	Identifier	should_free		3969339	1					
ANR	3969381	CFGEntryNode	ENTRY		3969339		True				
ANR	3969382	CFGExitNode	EXIT		3969339		True				
ANR	3969383	Symbol	should_free		3969339						
ANR	3969384	Symbol	ret		3969339						
ANR	3969385	Symbol	var		3969339						
ANR	3969386	Symbol	EX_VAR		3969339						
ANR	3969387	Symbol	execute_data		3969339						
ANR	3969388	Symbol	* should_free		3969339						
ANR	3969389	Function	zval_undefined_cv	227:0:8070:8297							
ANR	3969390	FunctionDef	"zval_undefined_cv (uint32_t var , const zend_execute_data * execute_data)"		3969389	0					
ANR	3969391	CompoundStatement		228:0:8181:8297	3969389	0					
ANR	3969392	IdentifierDeclStatement	zend_string * cv = CV_DEF_OF ( EX_VAR_TO_NUM ( var ) ) ;	229:1:8184:8231	3969389	0	True				
ANR	3969393	IdentifierDecl	* cv = CV_DEF_OF ( EX_VAR_TO_NUM ( var ) )		3969389	0					
ANR	3969394	IdentifierDeclType	zend_string *		3969389	0					
ANR	3969395	Identifier	cv		3969389	1					
ANR	3969396	AssignmentExpression	* cv = CV_DEF_OF ( EX_VAR_TO_NUM ( var ) )		3969389	2		=			
ANR	3969397	Identifier	cv		3969389	0					
ANR	3969398	CallExpression	CV_DEF_OF ( EX_VAR_TO_NUM ( var ) )		3969389	1					
ANR	3969399	Callee	CV_DEF_OF		3969389	0					
ANR	3969400	Identifier	CV_DEF_OF		3969389	0					
ANR	3969401	ArgumentList	EX_VAR_TO_NUM ( var )		3969389	1					
ANR	3969402	Argument	EX_VAR_TO_NUM ( var )		3969389	0					
ANR	3969403	CallExpression	EX_VAR_TO_NUM ( var )		3969389	0					
ANR	3969404	Callee	EX_VAR_TO_NUM		3969389	0					
ANR	3969405	Identifier	EX_VAR_TO_NUM		3969389	0					
ANR	3969406	ArgumentList	var		3969389	1					
ANR	3969407	Argument	var		3969389	0					
ANR	3969408	Identifier	var		3969389	0					
ANR	3969409	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( cv ) )"	231:1:8235:8295	3969389	1	True				
ANR	3969410	CallExpression	"zend_error ( E_NOTICE , ""Undefined variable: %s"" , ZSTR_VAL ( cv ) )"		3969389	0					
ANR	3969411	Callee	zend_error		3969389	0					
ANR	3969412	Identifier	zend_error		3969389	0					
ANR	3969413	ArgumentList	E_NOTICE		3969389	1					
ANR	3969414	Argument	E_NOTICE		3969389	0					
ANR	3969415	Identifier	E_NOTICE		3969389	0					
ANR	3969416	Argument	"""Undefined variable: %s"""		3969389	1					
ANR	3969417	PrimaryExpression	"""Undefined variable: %s"""		3969389	0					
ANR	3969418	Argument	ZSTR_VAL ( cv )		3969389	2					
ANR	3969419	CallExpression	ZSTR_VAL ( cv )		3969389	0					
ANR	3969420	Callee	ZSTR_VAL		3969389	0					
ANR	3969421	Identifier	ZSTR_VAL		3969389	0					
ANR	3969422	ArgumentList	cv		3969389	1					
ANR	3969423	Argument	cv		3969389	0					
ANR	3969424	Identifier	cv		3969389	0					
ANR	3969425	ReturnType	static zend_never_inline ZEND_COLD void		3969389	1					
ANR	3969426	Identifier	zval_undefined_cv		3969389	2					
ANR	3969427	ParameterList	"uint32_t var , const zend_execute_data * execute_data"		3969389	3					
ANR	3969428	Parameter	uint32_t var	227:58:8128:8139	3969389	0	True				
ANR	3969429	ParameterType	uint32_t		3969389	0					
ANR	3969430	Identifier	var		3969389	1					
ANR	3969431	Parameter	const zend_execute_data * execute_data	227:72:8142:8178	3969389	1	True				
ANR	3969432	ParameterType	const zend_execute_data *		3969389	0					
ANR	3969433	Identifier	execute_data		3969389	1					
ANR	3969434	CFGEntryNode	ENTRY		3969389		True				
ANR	3969435	CFGExitNode	EXIT		3969389		True				
ANR	3969436	Symbol	cv		3969389						
ANR	3969437	Symbol	var		3969389						
ANR	3969438	Symbol	CV_DEF_OF		3969389						
ANR	3969439	Symbol	E_NOTICE		3969389						
ANR	3969440	Symbol	execute_data		3969389						
ANR	3969441	Symbol	EX_VAR_TO_NUM		3969389						
ANR	3969442	Symbol	ZSTR_VAL		3969389						
ANR	3969443	Function	_get_zval_cv_lookup	234:0:8300:8780							
ANR	3969444	FunctionDef	"_get_zval_cv_lookup (zval * ptr , uint32_t var , int type , const zend_execute_data * execute_data)"		3969443	0					
ANR	3969445	CompoundStatement		235:0:8425:8780	3969443	0					
ANR	3969446	SwitchStatement	switch ( type )		3969443	0					
ANR	3969447	Condition	type	236:9:8436:8439	3969443	0	True				
ANR	3969448	Identifier	type		3969443	0					
ANR	3969449	CompoundStatement		2:15:16:16	3969443	1					
ANR	3969450	Label	case BP_VAR_R :	237:2:8446:8459	3969443	0	True				
ANR	3969451	Identifier	BP_VAR_R		3969443	0					
ANR	3969452	Label	case BP_VAR_UNSET :	238:2:8463:8480	3969443	1	True				
ANR	3969453	Identifier	BP_VAR_UNSET		3969443	0					
ANR	3969454	ExpressionStatement	"zval_undefined_cv ( var , execute_data )"	239:3:8485:8521	3969443	2	True				
ANR	3969455	CallExpression	"zval_undefined_cv ( var , execute_data )"		3969443	0					
ANR	3969456	Callee	zval_undefined_cv		3969443	0					
ANR	3969457	Identifier	zval_undefined_cv		3969443	0					
ANR	3969458	ArgumentList	var		3969443	1					
ANR	3969459	Argument	var		3969443	0					
ANR	3969460	Identifier	var		3969443	0					
ANR	3969461	Argument	execute_data		3969443	1					
ANR	3969462	Identifier	execute_data		3969443	0					
ANR	3969463	Label	case BP_VAR_IS :	241:2:8562:8576	3969443	3	True				
ANR	3969464	Identifier	BP_VAR_IS		3969443	0					
ANR	3969465	ExpressionStatement	ptr = & EG ( uninitialized_zval )	242:3:8581:8610	3969443	4	True				
ANR	3969466	AssignmentExpression	ptr = & EG ( uninitialized_zval )		3969443	0		=			
ANR	3969467	Identifier	ptr		3969443	0					
ANR	3969468	UnaryOperationExpression	& EG ( uninitialized_zval )		3969443	1					
ANR	3969469	UnaryOperator	&		3969443	0					
ANR	3969470	CallExpression	EG ( uninitialized_zval )		3969443	1					
ANR	3969471	Callee	EG		3969443	0					
ANR	3969472	Identifier	EG		3969443	0					
ANR	3969473	ArgumentList	uninitialized_zval		3969443	1					
ANR	3969474	Argument	uninitialized_zval		3969443	0					
ANR	3969475	Identifier	uninitialized_zval		3969443	0					
ANR	3969476	BreakStatement	break ;	243:3:8615:8620	3969443	5	True				
ANR	3969477	Label	case BP_VAR_RW :	244:2:8624:8638	3969443	6	True				
ANR	3969478	Identifier	BP_VAR_RW		3969443	0					
ANR	3969479	ExpressionStatement	"zval_undefined_cv ( var , execute_data )"	245:3:8643:8679	3969443	7	True				
ANR	3969480	CallExpression	"zval_undefined_cv ( var , execute_data )"		3969443	0					
ANR	3969481	Callee	zval_undefined_cv		3969443	0					
ANR	3969482	Identifier	zval_undefined_cv		3969443	0					
ANR	3969483	ArgumentList	var		3969443	1					
ANR	3969484	Argument	var		3969443	0					
ANR	3969485	Identifier	var		3969443	0					
ANR	3969486	Argument	execute_data		3969443	1					
ANR	3969487	Identifier	execute_data		3969443	0					
ANR	3969488	Label	case BP_VAR_W :	247:2:8720:8733	3969443	8	True				
ANR	3969489	Identifier	BP_VAR_W		3969443	0					
ANR	3969490	ExpressionStatement	ZVAL_NULL ( ptr )	248:3:8738:8752	3969443	9	True				
ANR	3969491	CallExpression	ZVAL_NULL ( ptr )		3969443	0					
ANR	3969492	Callee	ZVAL_NULL		3969443	0					
ANR	3969493	Identifier	ZVAL_NULL		3969443	0					
ANR	3969494	ArgumentList	ptr		3969443	1					
ANR	3969495	Argument	ptr		3969443	0					
ANR	3969496	Identifier	ptr		3969443	0					
ANR	3969497	BreakStatement	break ;	249:3:8757:8762	3969443	10	True				
ANR	3969498	ReturnStatement	return ptr ;	251:1:8768:8778	3969443	1	True				
ANR	3969499	Identifier	ptr		3969443	0					
ANR	3969500	ReturnType	static zend_never_inline zval *		3969443	1					
ANR	3969501	Identifier	_get_zval_cv_lookup		3969443	2					
ANR	3969502	ParameterList	"zval * ptr , uint32_t var , int type , const zend_execute_data * execute_data"		3969443	3					
ANR	3969503	Parameter	zval * ptr	234:51:8351:8359	3969443	0	True				
ANR	3969504	ParameterType	zval *		3969443	0					
ANR	3969505	Identifier	ptr		3969443	1					
ANR	3969506	Parameter	uint32_t var	234:62:8362:8373	3969443	1	True				
ANR	3969507	ParameterType	uint32_t		3969443	0					
ANR	3969508	Identifier	var		3969443	1					
ANR	3969509	Parameter	int type	234:76:8376:8383	3969443	2	True				
ANR	3969510	ParameterType	int		3969443	0					
ANR	3969511	Identifier	type		3969443	1					
ANR	3969512	Parameter	const zend_execute_data * execute_data	234:86:8386:8422	3969443	3	True				
ANR	3969513	ParameterType	const zend_execute_data *		3969443	0					
ANR	3969514	Identifier	execute_data		3969443	1					
ANR	3969515	CFGEntryNode	ENTRY		3969443		True				
ANR	3969516	CFGExitNode	EXIT		3969443		True				
ANR	3969517	Symbol	uninitialized_zval		3969443						
ANR	3969518	Symbol	var		3969443						
ANR	3969519	Symbol	type		3969443						
ANR	3969520	Symbol	& EG		3969443						
ANR	3969521	Symbol	execute_data		3969443						
ANR	3969522	Symbol	ptr		3969443						
ANR	3969523	Function	_get_zval_cv_lookup_BP_VAR_R	254:0:8783:8982							
ANR	3969524	FunctionDef	"_get_zval_cv_lookup_BP_VAR_R (zval * ptr , uint32_t var , const zend_execute_data * execute_data)"		3969523	0					
ANR	3969525	CompoundStatement		255:0:8908:8982	3969523	0					
ANR	3969526	ExpressionStatement	"zval_undefined_cv ( var , execute_data )"	256:1:8911:8947	3969523	0	True				
ANR	3969527	CallExpression	"zval_undefined_cv ( var , execute_data )"		3969523	0					
ANR	3969528	Callee	zval_undefined_cv		3969523	0					
ANR	3969529	Identifier	zval_undefined_cv		3969523	0					
ANR	3969530	ArgumentList	var		3969523	1					
ANR	3969531	Argument	var		3969523	0					
ANR	3969532	Identifier	var		3969523	0					
ANR	3969533	Argument	execute_data		3969523	1					
ANR	3969534	Identifier	execute_data		3969523	0					
ANR	3969535	ReturnStatement	return & EG ( uninitialized_zval ) ;	257:1:8950:8980	3969523	1	True				
ANR	3969536	UnaryOperationExpression	& EG ( uninitialized_zval )		3969523	0					
ANR	3969537	UnaryOperator	&		3969523	0					
ANR	3969538	CallExpression	EG ( uninitialized_zval )		3969523	1					
ANR	3969539	Callee	EG		3969523	0					
ANR	3969540	Identifier	EG		3969523	0					
ANR	3969541	ArgumentList	uninitialized_zval		3969523	1					
ANR	3969542	Argument	uninitialized_zval		3969523	0					
ANR	3969543	Identifier	uninitialized_zval		3969523	0					
ANR	3969544	ReturnType	static zend_always_inline zval *		3969523	1					
ANR	3969545	Identifier	_get_zval_cv_lookup_BP_VAR_R		3969523	2					
ANR	3969546	ParameterList	"zval * ptr , uint32_t var , const zend_execute_data * execute_data"		3969523	3					
ANR	3969547	Parameter	zval * ptr	254:61:8844:8852	3969523	0	True				
ANR	3969548	ParameterType	zval *		3969523	0					
ANR	3969549	Identifier	ptr		3969523	1					
ANR	3969550	Parameter	uint32_t var	254:72:8855:8866	3969523	1	True				
ANR	3969551	ParameterType	uint32_t		3969523	0					
ANR	3969552	Identifier	var		3969523	1					
ANR	3969553	Parameter	const zend_execute_data * execute_data	254:86:8869:8905	3969523	2	True				
ANR	3969554	ParameterType	const zend_execute_data *		3969523	0					
ANR	3969555	Identifier	execute_data		3969523	1					
ANR	3969556	CFGEntryNode	ENTRY		3969523		True				
ANR	3969557	CFGExitNode	EXIT		3969523		True				
ANR	3969558	Symbol	uninitialized_zval		3969523						
ANR	3969559	Symbol	var		3969523						
ANR	3969560	Symbol	& EG		3969523						
ANR	3969561	Symbol	execute_data		3969523						
ANR	3969562	Symbol	ptr		3969523						
ANR	3969563	Function	_get_zval_cv_lookup_BP_VAR_UNSET	260:0:8985:9188							
ANR	3969564	FunctionDef	"_get_zval_cv_lookup_BP_VAR_UNSET (zval * ptr , uint32_t var , const zend_execute_data * execute_data)"		3969563	0					
ANR	3969565	CompoundStatement		261:0:9114:9188	3969563	0					
ANR	3969566	ExpressionStatement	"zval_undefined_cv ( var , execute_data )"	262:1:9117:9153	3969563	0	True				
ANR	3969567	CallExpression	"zval_undefined_cv ( var , execute_data )"		3969563	0					
ANR	3969568	Callee	zval_undefined_cv		3969563	0					
ANR	3969569	Identifier	zval_undefined_cv		3969563	0					
ANR	3969570	ArgumentList	var		3969563	1					
ANR	3969571	Argument	var		3969563	0					
ANR	3969572	Identifier	var		3969563	0					
ANR	3969573	Argument	execute_data		3969563	1					
ANR	3969574	Identifier	execute_data		3969563	0					
ANR	3969575	ReturnStatement	return & EG ( uninitialized_zval ) ;	263:1:9156:9186	3969563	1	True				
ANR	3969576	UnaryOperationExpression	& EG ( uninitialized_zval )		3969563	0					
ANR	3969577	UnaryOperator	&		3969563	0					
ANR	3969578	CallExpression	EG ( uninitialized_zval )		3969563	1					
ANR	3969579	Callee	EG		3969563	0					
ANR	3969580	Identifier	EG		3969563	0					
ANR	3969581	ArgumentList	uninitialized_zval		3969563	1					
ANR	3969582	Argument	uninitialized_zval		3969563	0					
ANR	3969583	Identifier	uninitialized_zval		3969563	0					
ANR	3969584	ReturnType	static zend_always_inline zval *		3969563	1					
ANR	3969585	Identifier	_get_zval_cv_lookup_BP_VAR_UNSET		3969563	2					
ANR	3969586	ParameterList	"zval * ptr , uint32_t var , const zend_execute_data * execute_data"		3969563	3					
ANR	3969587	Parameter	zval * ptr	260:65:9050:9058	3969563	0	True				
ANR	3969588	ParameterType	zval *		3969563	0					
ANR	3969589	Identifier	ptr		3969563	1					
ANR	3969590	Parameter	uint32_t var	260:76:9061:9072	3969563	1	True				
ANR	3969591	ParameterType	uint32_t		3969563	0					
ANR	3969592	Identifier	var		3969563	1					
ANR	3969593	Parameter	const zend_execute_data * execute_data	260:90:9075:9111	3969563	2	True				
ANR	3969594	ParameterType	const zend_execute_data *		3969563	0					
ANR	3969595	Identifier	execute_data		3969563	1					
ANR	3969596	CFGEntryNode	ENTRY		3969563		True				
ANR	3969597	CFGExitNode	EXIT		3969563		True				
ANR	3969598	Symbol	uninitialized_zval		3969563						
ANR	3969599	Symbol	var		3969563						
ANR	3969600	Symbol	& EG		3969563						
ANR	3969601	Symbol	execute_data		3969563						
ANR	3969602	Symbol	ptr		3969563						
ANR	3969603	Function	_get_zval_cv_lookup_BP_VAR_RW	266:0:9191:9388							
ANR	3969604	FunctionDef	"_get_zval_cv_lookup_BP_VAR_RW (zval * ptr , uint32_t var , const zend_execute_data * execute_data)"		3969603	0					
ANR	3969605	CompoundStatement		267:0:9317:9388	3969603	0					
ANR	3969606	ExpressionStatement	ZVAL_NULL ( ptr )	268:1:9320:9334	3969603	0	True				
ANR	3969607	CallExpression	ZVAL_NULL ( ptr )		3969603	0					
ANR	3969608	Callee	ZVAL_NULL		3969603	0					
ANR	3969609	Identifier	ZVAL_NULL		3969603	0					
ANR	3969610	ArgumentList	ptr		3969603	1					
ANR	3969611	Argument	ptr		3969603	0					
ANR	3969612	Identifier	ptr		3969603	0					
ANR	3969613	ExpressionStatement	"zval_undefined_cv ( var , execute_data )"	269:1:9337:9373	3969603	1	True				
ANR	3969614	CallExpression	"zval_undefined_cv ( var , execute_data )"		3969603	0					
ANR	3969615	Callee	zval_undefined_cv		3969603	0					
ANR	3969616	Identifier	zval_undefined_cv		3969603	0					
ANR	3969617	ArgumentList	var		3969603	1					
ANR	3969618	Argument	var		3969603	0					
ANR	3969619	Identifier	var		3969603	0					
ANR	3969620	Argument	execute_data		3969603	1					
ANR	3969621	Identifier	execute_data		3969603	0					
ANR	3969622	ReturnStatement	return ptr ;	270:1:9376:9386	3969603	2	True				
ANR	3969623	Identifier	ptr		3969603	0					
ANR	3969624	ReturnType	static zend_always_inline zval *		3969603	1					
ANR	3969625	Identifier	_get_zval_cv_lookup_BP_VAR_RW		3969603	2					
ANR	3969626	ParameterList	"zval * ptr , uint32_t var , const zend_execute_data * execute_data"		3969603	3					
ANR	3969627	Parameter	zval * ptr	266:62:9253:9261	3969603	0	True				
ANR	3969628	ParameterType	zval *		3969603	0					
ANR	3969629	Identifier	ptr		3969603	1					
ANR	3969630	Parameter	uint32_t var	266:73:9264:9275	3969603	1	True				
ANR	3969631	ParameterType	uint32_t		3969603	0					
ANR	3969632	Identifier	var		3969603	1					
ANR	3969633	Parameter	const zend_execute_data * execute_data	266:87:9278:9314	3969603	2	True				
ANR	3969634	ParameterType	const zend_execute_data *		3969603	0					
ANR	3969635	Identifier	execute_data		3969603	1					
ANR	3969636	CFGEntryNode	ENTRY		3969603		True				
ANR	3969637	CFGExitNode	EXIT		3969603		True				
ANR	3969638	Symbol	var		3969603						
ANR	3969639	Symbol	execute_data		3969603						
ANR	3969640	Symbol	ptr		3969603						
ANR	3969641	Function	_get_zval_cv_lookup_BP_VAR_W	273:0:9391:9548							
ANR	3969642	FunctionDef	"_get_zval_cv_lookup_BP_VAR_W (zval * ptr , uint32_t var , const zend_execute_data * execute_data)"		3969641	0					
ANR	3969643	CompoundStatement		274:0:9516:9548	3969641	0					
ANR	3969644	ExpressionStatement	ZVAL_NULL ( ptr )	275:1:9519:9533	3969641	0	True				
ANR	3969645	CallExpression	ZVAL_NULL ( ptr )		3969641	0					
ANR	3969646	Callee	ZVAL_NULL		3969641	0					
ANR	3969647	Identifier	ZVAL_NULL		3969641	0					
ANR	3969648	ArgumentList	ptr		3969641	1					
ANR	3969649	Argument	ptr		3969641	0					
ANR	3969650	Identifier	ptr		3969641	0					
ANR	3969651	ReturnStatement	return ptr ;	276:1:9536:9546	3969641	1	True				
ANR	3969652	Identifier	ptr		3969641	0					
ANR	3969653	ReturnType	static zend_always_inline zval *		3969641	1					
ANR	3969654	Identifier	_get_zval_cv_lookup_BP_VAR_W		3969641	2					
ANR	3969655	ParameterList	"zval * ptr , uint32_t var , const zend_execute_data * execute_data"		3969641	3					
ANR	3969656	Parameter	zval * ptr	273:61:9452:9460	3969641	0	True				
ANR	3969657	ParameterType	zval *		3969641	0					
ANR	3969658	Identifier	ptr		3969641	1					
ANR	3969659	Parameter	uint32_t var	273:72:9463:9474	3969641	1	True				
ANR	3969660	ParameterType	uint32_t		3969641	0					
ANR	3969661	Identifier	var		3969641	1					
ANR	3969662	Parameter	const zend_execute_data * execute_data	273:86:9477:9513	3969641	2	True				
ANR	3969663	ParameterType	const zend_execute_data *		3969641	0					
ANR	3969664	Identifier	execute_data		3969641	1					
ANR	3969665	CFGEntryNode	ENTRY		3969641		True				
ANR	3969666	CFGExitNode	EXIT		3969641		True				
ANR	3969667	Symbol	var		3969641						
ANR	3969668	Symbol	execute_data		3969641						
ANR	3969669	Symbol	ptr		3969641						
ANR	3969670	Function	_get_zval_ptr_cv	279:0:9551:9814							
ANR	3969671	FunctionDef	"_get_zval_ptr_cv (const zend_execute_data * execute_data , uint32_t var , int type)"		3969670	0					
ANR	3969672	CompoundStatement		280:0:9663:9814	3969670	0					
ANR	3969673	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	281:1:9666:9689	3969670	0	True				
ANR	3969674	IdentifierDecl	* ret = EX_VAR ( var )		3969670	0					
ANR	3969675	IdentifierDeclType	zval *		3969670	0					
ANR	3969676	Identifier	ret		3969670	1					
ANR	3969677	AssignmentExpression	* ret = EX_VAR ( var )		3969670	2		=			
ANR	3969678	Identifier	ret		3969670	0					
ANR	3969679	CallExpression	EX_VAR ( var )		3969670	1					
ANR	3969680	Callee	EX_VAR		3969670	0					
ANR	3969681	Identifier	EX_VAR		3969670	0					
ANR	3969682	ArgumentList	var		3969670	1					
ANR	3969683	Argument	var		3969670	0					
ANR	3969684	Identifier	var		3969670	0					
ANR	3969685	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF ) )		3969670	1					
ANR	3969686	Condition	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )	283:5:9697:9733	3969670	0	True				
ANR	3969687	CallExpression	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )		3969670	0					
ANR	3969688	Callee	UNEXPECTED		3969670	0					
ANR	3969689	Identifier	UNEXPECTED		3969670	0					
ANR	3969690	ArgumentList	Z_TYPE_P ( ret ) == IS_UNDEF		3969670	1					
ANR	3969691	Argument	Z_TYPE_P ( ret ) == IS_UNDEF		3969670	0					
ANR	3969692	EqualityExpression	Z_TYPE_P ( ret ) == IS_UNDEF		3969670	0		==			
ANR	3969693	CallExpression	Z_TYPE_P ( ret )		3969670	0					
ANR	3969694	Callee	Z_TYPE_P		3969670	0					
ANR	3969695	Identifier	Z_TYPE_P		3969670	0					
ANR	3969696	ArgumentList	ret		3969670	1					
ANR	3969697	Argument	ret		3969670	0					
ANR	3969698	Identifier	ret		3969670	0					
ANR	3969699	Identifier	IS_UNDEF		3969670	1					
ANR	3969700	CompoundStatement		4:44:72:72	3969670	1					
ANR	3969701	ReturnStatement	"return _get_zval_cv_lookup ( ret , var , type , execute_data ) ;"	284:2:9740:9796	3969670	0	True				
ANR	3969702	CallExpression	"_get_zval_cv_lookup ( ret , var , type , execute_data )"		3969670	0					
ANR	3969703	Callee	_get_zval_cv_lookup		3969670	0					
ANR	3969704	Identifier	_get_zval_cv_lookup		3969670	0					
ANR	3969705	ArgumentList	ret		3969670	1					
ANR	3969706	Argument	ret		3969670	0					
ANR	3969707	Identifier	ret		3969670	0					
ANR	3969708	Argument	var		3969670	1					
ANR	3969709	Identifier	var		3969670	0					
ANR	3969710	Argument	type		3969670	2					
ANR	3969711	Identifier	type		3969670	0					
ANR	3969712	Argument	execute_data		3969670	3					
ANR	3969713	Identifier	execute_data		3969670	0					
ANR	3969714	ReturnStatement	return ret ;	286:1:9802:9812	3969670	2	True				
ANR	3969715	Identifier	ret		3969670	0					
ANR	3969716	ReturnType	static zend_always_inline zval *		3969670	1					
ANR	3969717	Identifier	_get_zval_ptr_cv		3969670	2					
ANR	3969718	ParameterList	"const zend_execute_data * execute_data , uint32_t var , int type"		3969670	3					
ANR	3969719	Parameter	const zend_execute_data * execute_data	279:49:9600:9636	3969670	0	True				
ANR	3969720	ParameterType	const zend_execute_data *		3969670	0					
ANR	3969721	Identifier	execute_data		3969670	1					
ANR	3969722	Parameter	uint32_t var	279:88:9639:9650	3969670	1	True				
ANR	3969723	ParameterType	uint32_t		3969670	0					
ANR	3969724	Identifier	var		3969670	1					
ANR	3969725	Parameter	int type	279:102:9653:9660	3969670	2	True				
ANR	3969726	ParameterType	int		3969670	0					
ANR	3969727	Identifier	type		3969670	1					
ANR	3969728	CFGEntryNode	ENTRY		3969670		True				
ANR	3969729	CFGExitNode	EXIT		3969670		True				
ANR	3969730	Symbol	ret		3969670						
ANR	3969731	Symbol	UNEXPECTED		3969670						
ANR	3969732	Symbol	_get_zval_cv_lookup		3969670						
ANR	3969733	Symbol	var		3969670						
ANR	3969734	Symbol	EX_VAR		3969670						
ANR	3969735	Symbol	type		3969670						
ANR	3969736	Symbol	Z_TYPE_P		3969670						
ANR	3969737	Symbol	execute_data		3969670						
ANR	3969738	Symbol	IS_UNDEF		3969670						
ANR	3969739	Function	_get_zval_ptr_cv_undef	289:0:9817:9948							
ANR	3969740	FunctionDef	"_get_zval_ptr_cv_undef (const zend_execute_data * execute_data , uint32_t var)"		3969739	0					
ANR	3969741	CompoundStatement		290:0:9925:9948	3969739	0					
ANR	3969742	ReturnStatement	return EX_VAR ( var ) ;	291:1:9928:9946	3969739	0	True				
ANR	3969743	CallExpression	EX_VAR ( var )		3969739	0					
ANR	3969744	Callee	EX_VAR		3969739	0					
ANR	3969745	Identifier	EX_VAR		3969739	0					
ANR	3969746	ArgumentList	var		3969739	1					
ANR	3969747	Argument	var		3969739	0					
ANR	3969748	Identifier	var		3969739	0					
ANR	3969749	ReturnType	static zend_always_inline zval *		3969739	1					
ANR	3969750	Identifier	_get_zval_ptr_cv_undef		3969739	2					
ANR	3969751	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3969739	3					
ANR	3969752	Parameter	const zend_execute_data * execute_data	289:55:9872:9908	3969739	0	True				
ANR	3969753	ParameterType	const zend_execute_data *		3969739	0					
ANR	3969754	Identifier	execute_data		3969739	1					
ANR	3969755	Parameter	uint32_t var	289:94:9911:9922	3969739	1	True				
ANR	3969756	ParameterType	uint32_t		3969739	0					
ANR	3969757	Identifier	var		3969739	1					
ANR	3969758	CFGEntryNode	ENTRY		3969739		True				
ANR	3969759	CFGExitNode	EXIT		3969739		True				
ANR	3969760	Symbol	var		3969739						
ANR	3969761	Symbol	EX_VAR		3969739						
ANR	3969762	Symbol	execute_data		3969739						
ANR	3969763	Function	_get_zval_ptr_cv_deref	294:0:9951:10238							
ANR	3969764	FunctionDef	"_get_zval_ptr_cv_deref (const zend_execute_data * execute_data , uint32_t var , int type)"		3969763	0					
ANR	3969765	CompoundStatement		295:0:10069:10238	3969763	0					
ANR	3969766	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	296:1:10072:10095	3969763	0	True				
ANR	3969767	IdentifierDecl	* ret = EX_VAR ( var )		3969763	0					
ANR	3969768	IdentifierDeclType	zval *		3969763	0					
ANR	3969769	Identifier	ret		3969763	1					
ANR	3969770	AssignmentExpression	* ret = EX_VAR ( var )		3969763	2		=			
ANR	3969771	Identifier	ret		3969763	0					
ANR	3969772	CallExpression	EX_VAR ( var )		3969763	1					
ANR	3969773	Callee	EX_VAR		3969763	0					
ANR	3969774	Identifier	EX_VAR		3969763	0					
ANR	3969775	ArgumentList	var		3969763	1					
ANR	3969776	Argument	var		3969763	0					
ANR	3969777	Identifier	var		3969763	0					
ANR	3969778	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF ) )		3969763	1					
ANR	3969779	Condition	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )	298:5:10103:10139	3969763	0	True				
ANR	3969780	CallExpression	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )		3969763	0					
ANR	3969781	Callee	UNEXPECTED		3969763	0					
ANR	3969782	Identifier	UNEXPECTED		3969763	0					
ANR	3969783	ArgumentList	Z_TYPE_P ( ret ) == IS_UNDEF		3969763	1					
ANR	3969784	Argument	Z_TYPE_P ( ret ) == IS_UNDEF		3969763	0					
ANR	3969785	EqualityExpression	Z_TYPE_P ( ret ) == IS_UNDEF		3969763	0		==			
ANR	3969786	CallExpression	Z_TYPE_P ( ret )		3969763	0					
ANR	3969787	Callee	Z_TYPE_P		3969763	0					
ANR	3969788	Identifier	Z_TYPE_P		3969763	0					
ANR	3969789	ArgumentList	ret		3969763	1					
ANR	3969790	Argument	ret		3969763	0					
ANR	3969791	Identifier	ret		3969763	0					
ANR	3969792	Identifier	IS_UNDEF		3969763	1					
ANR	3969793	CompoundStatement		4:44:72:72	3969763	1					
ANR	3969794	ReturnStatement	"return _get_zval_cv_lookup ( ret , var , type , execute_data ) ;"	299:2:10146:10202	3969763	0	True				
ANR	3969795	CallExpression	"_get_zval_cv_lookup ( ret , var , type , execute_data )"		3969763	0					
ANR	3969796	Callee	_get_zval_cv_lookup		3969763	0					
ANR	3969797	Identifier	_get_zval_cv_lookup		3969763	0					
ANR	3969798	ArgumentList	ret		3969763	1					
ANR	3969799	Argument	ret		3969763	0					
ANR	3969800	Identifier	ret		3969763	0					
ANR	3969801	Argument	var		3969763	1					
ANR	3969802	Identifier	var		3969763	0					
ANR	3969803	Argument	type		3969763	2					
ANR	3969804	Identifier	type		3969763	0					
ANR	3969805	Argument	execute_data		3969763	3					
ANR	3969806	Identifier	execute_data		3969763	0					
ANR	3969807	ExpressionStatement	ZVAL_DEREF ( ret )	301:1:10208:10223	3969763	2	True				
ANR	3969808	CallExpression	ZVAL_DEREF ( ret )		3969763	0					
ANR	3969809	Callee	ZVAL_DEREF		3969763	0					
ANR	3969810	Identifier	ZVAL_DEREF		3969763	0					
ANR	3969811	ArgumentList	ret		3969763	1					
ANR	3969812	Argument	ret		3969763	0					
ANR	3969813	Identifier	ret		3969763	0					
ANR	3969814	ReturnStatement	return ret ;	302:1:10226:10236	3969763	3	True				
ANR	3969815	Identifier	ret		3969763	0					
ANR	3969816	ReturnType	static zend_always_inline zval *		3969763	1					
ANR	3969817	Identifier	_get_zval_ptr_cv_deref		3969763	2					
ANR	3969818	ParameterList	"const zend_execute_data * execute_data , uint32_t var , int type"		3969763	3					
ANR	3969819	Parameter	const zend_execute_data * execute_data	294:55:10006:10042	3969763	0	True				
ANR	3969820	ParameterType	const zend_execute_data *		3969763	0					
ANR	3969821	Identifier	execute_data		3969763	1					
ANR	3969822	Parameter	uint32_t var	294:94:10045:10056	3969763	1	True				
ANR	3969823	ParameterType	uint32_t		3969763	0					
ANR	3969824	Identifier	var		3969763	1					
ANR	3969825	Parameter	int type	294:108:10059:10066	3969763	2	True				
ANR	3969826	ParameterType	int		3969763	0					
ANR	3969827	Identifier	type		3969763	1					
ANR	3969828	CFGEntryNode	ENTRY		3969763		True				
ANR	3969829	CFGExitNode	EXIT		3969763		True				
ANR	3969830	Symbol	ret		3969763						
ANR	3969831	Symbol	UNEXPECTED		3969763						
ANR	3969832	Symbol	_get_zval_cv_lookup		3969763						
ANR	3969833	Symbol	var		3969763						
ANR	3969834	Symbol	EX_VAR		3969763						
ANR	3969835	Symbol	type		3969763						
ANR	3969836	Symbol	Z_TYPE_P		3969763						
ANR	3969837	Symbol	execute_data		3969763						
ANR	3969838	Symbol	IS_UNDEF		3969763						
ANR	3969839	Function	_get_zval_ptr_cv_BP_VAR_R	305:0:10241:10506							
ANR	3969840	FunctionDef	"_get_zval_ptr_cv_BP_VAR_R (const zend_execute_data * execute_data , uint32_t var)"		3969839	0					
ANR	3969841	CompoundStatement		306:0:10352:10506	3969839	0					
ANR	3969842	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	307:1:10355:10378	3969839	0	True				
ANR	3969843	IdentifierDecl	* ret = EX_VAR ( var )		3969839	0					
ANR	3969844	IdentifierDeclType	zval *		3969839	0					
ANR	3969845	Identifier	ret		3969839	1					
ANR	3969846	AssignmentExpression	* ret = EX_VAR ( var )		3969839	2		=			
ANR	3969847	Identifier	ret		3969839	0					
ANR	3969848	CallExpression	EX_VAR ( var )		3969839	1					
ANR	3969849	Callee	EX_VAR		3969839	0					
ANR	3969850	Identifier	EX_VAR		3969839	0					
ANR	3969851	ArgumentList	var		3969839	1					
ANR	3969852	Argument	var		3969839	0					
ANR	3969853	Identifier	var		3969839	0					
ANR	3969854	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF ) )		3969839	1					
ANR	3969855	Condition	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )	309:5:10386:10422	3969839	0	True				
ANR	3969856	CallExpression	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )		3969839	0					
ANR	3969857	Callee	UNEXPECTED		3969839	0					
ANR	3969858	Identifier	UNEXPECTED		3969839	0					
ANR	3969859	ArgumentList	Z_TYPE_P ( ret ) == IS_UNDEF		3969839	1					
ANR	3969860	Argument	Z_TYPE_P ( ret ) == IS_UNDEF		3969839	0					
ANR	3969861	EqualityExpression	Z_TYPE_P ( ret ) == IS_UNDEF		3969839	0		==			
ANR	3969862	CallExpression	Z_TYPE_P ( ret )		3969839	0					
ANR	3969863	Callee	Z_TYPE_P		3969839	0					
ANR	3969864	Identifier	Z_TYPE_P		3969839	0					
ANR	3969865	ArgumentList	ret		3969839	1					
ANR	3969866	Argument	ret		3969839	0					
ANR	3969867	Identifier	ret		3969839	0					
ANR	3969868	Identifier	IS_UNDEF		3969839	1					
ANR	3969869	CompoundStatement		4:44:72:72	3969839	1					
ANR	3969870	ReturnStatement	"return _get_zval_cv_lookup_BP_VAR_R ( ret , var , execute_data ) ;"	310:2:10429:10488	3969839	0	True				
ANR	3969871	CallExpression	"_get_zval_cv_lookup_BP_VAR_R ( ret , var , execute_data )"		3969839	0					
ANR	3969872	Callee	_get_zval_cv_lookup_BP_VAR_R		3969839	0					
ANR	3969873	Identifier	_get_zval_cv_lookup_BP_VAR_R		3969839	0					
ANR	3969874	ArgumentList	ret		3969839	1					
ANR	3969875	Argument	ret		3969839	0					
ANR	3969876	Identifier	ret		3969839	0					
ANR	3969877	Argument	var		3969839	1					
ANR	3969878	Identifier	var		3969839	0					
ANR	3969879	Argument	execute_data		3969839	2					
ANR	3969880	Identifier	execute_data		3969839	0					
ANR	3969881	ReturnStatement	return ret ;	312:1:10494:10504	3969839	2	True				
ANR	3969882	Identifier	ret		3969839	0					
ANR	3969883	ReturnType	static zend_always_inline zval *		3969839	1					
ANR	3969884	Identifier	_get_zval_ptr_cv_BP_VAR_R		3969839	2					
ANR	3969885	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3969839	3					
ANR	3969886	Parameter	const zend_execute_data * execute_data	305:58:10299:10335	3969839	0	True				
ANR	3969887	ParameterType	const zend_execute_data *		3969839	0					
ANR	3969888	Identifier	execute_data		3969839	1					
ANR	3969889	Parameter	uint32_t var	305:97:10338:10349	3969839	1	True				
ANR	3969890	ParameterType	uint32_t		3969839	0					
ANR	3969891	Identifier	var		3969839	1					
ANR	3969892	CFGEntryNode	ENTRY		3969839		True				
ANR	3969893	CFGExitNode	EXIT		3969839		True				
ANR	3969894	Symbol	ret		3969839						
ANR	3969895	Symbol	UNEXPECTED		3969839						
ANR	3969896	Symbol	_get_zval_cv_lookup_BP_VAR_R		3969839						
ANR	3969897	Symbol	var		3969839						
ANR	3969898	Symbol	EX_VAR		3969839						
ANR	3969899	Symbol	Z_TYPE_P		3969839						
ANR	3969900	Symbol	execute_data		3969839						
ANR	3969901	Symbol	IS_UNDEF		3969839						
ANR	3969902	Function	_get_zval_ptr_cv_deref_BP_VAR_R	315:0:10509:10798							
ANR	3969903	FunctionDef	"_get_zval_ptr_cv_deref_BP_VAR_R (const zend_execute_data * execute_data , uint32_t var)"		3969902	0					
ANR	3969904	CompoundStatement		316:0:10626:10798	3969902	0					
ANR	3969905	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	317:1:10629:10652	3969902	0	True				
ANR	3969906	IdentifierDecl	* ret = EX_VAR ( var )		3969902	0					
ANR	3969907	IdentifierDeclType	zval *		3969902	0					
ANR	3969908	Identifier	ret		3969902	1					
ANR	3969909	AssignmentExpression	* ret = EX_VAR ( var )		3969902	2		=			
ANR	3969910	Identifier	ret		3969902	0					
ANR	3969911	CallExpression	EX_VAR ( var )		3969902	1					
ANR	3969912	Callee	EX_VAR		3969902	0					
ANR	3969913	Identifier	EX_VAR		3969902	0					
ANR	3969914	ArgumentList	var		3969902	1					
ANR	3969915	Argument	var		3969902	0					
ANR	3969916	Identifier	var		3969902	0					
ANR	3969917	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF ) )		3969902	1					
ANR	3969918	Condition	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )	319:5:10660:10696	3969902	0	True				
ANR	3969919	CallExpression	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )		3969902	0					
ANR	3969920	Callee	UNEXPECTED		3969902	0					
ANR	3969921	Identifier	UNEXPECTED		3969902	0					
ANR	3969922	ArgumentList	Z_TYPE_P ( ret ) == IS_UNDEF		3969902	1					
ANR	3969923	Argument	Z_TYPE_P ( ret ) == IS_UNDEF		3969902	0					
ANR	3969924	EqualityExpression	Z_TYPE_P ( ret ) == IS_UNDEF		3969902	0		==			
ANR	3969925	CallExpression	Z_TYPE_P ( ret )		3969902	0					
ANR	3969926	Callee	Z_TYPE_P		3969902	0					
ANR	3969927	Identifier	Z_TYPE_P		3969902	0					
ANR	3969928	ArgumentList	ret		3969902	1					
ANR	3969929	Argument	ret		3969902	0					
ANR	3969930	Identifier	ret		3969902	0					
ANR	3969931	Identifier	IS_UNDEF		3969902	1					
ANR	3969932	CompoundStatement		4:44:72:72	3969902	1					
ANR	3969933	ReturnStatement	"return _get_zval_cv_lookup_BP_VAR_R ( ret , var , execute_data ) ;"	320:2:10703:10762	3969902	0	True				
ANR	3969934	CallExpression	"_get_zval_cv_lookup_BP_VAR_R ( ret , var , execute_data )"		3969902	0					
ANR	3969935	Callee	_get_zval_cv_lookup_BP_VAR_R		3969902	0					
ANR	3969936	Identifier	_get_zval_cv_lookup_BP_VAR_R		3969902	0					
ANR	3969937	ArgumentList	ret		3969902	1					
ANR	3969938	Argument	ret		3969902	0					
ANR	3969939	Identifier	ret		3969902	0					
ANR	3969940	Argument	var		3969902	1					
ANR	3969941	Identifier	var		3969902	0					
ANR	3969942	Argument	execute_data		3969902	2					
ANR	3969943	Identifier	execute_data		3969902	0					
ANR	3969944	ExpressionStatement	ZVAL_DEREF ( ret )	322:1:10768:10783	3969902	2	True				
ANR	3969945	CallExpression	ZVAL_DEREF ( ret )		3969902	0					
ANR	3969946	Callee	ZVAL_DEREF		3969902	0					
ANR	3969947	Identifier	ZVAL_DEREF		3969902	0					
ANR	3969948	ArgumentList	ret		3969902	1					
ANR	3969949	Argument	ret		3969902	0					
ANR	3969950	Identifier	ret		3969902	0					
ANR	3969951	ReturnStatement	return ret ;	323:1:10786:10796	3969902	3	True				
ANR	3969952	Identifier	ret		3969902	0					
ANR	3969953	ReturnType	static zend_always_inline zval *		3969902	1					
ANR	3969954	Identifier	_get_zval_ptr_cv_deref_BP_VAR_R		3969902	2					
ANR	3969955	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3969902	3					
ANR	3969956	Parameter	const zend_execute_data * execute_data	315:64:10573:10609	3969902	0	True				
ANR	3969957	ParameterType	const zend_execute_data *		3969902	0					
ANR	3969958	Identifier	execute_data		3969902	1					
ANR	3969959	Parameter	uint32_t var	315:103:10612:10623	3969902	1	True				
ANR	3969960	ParameterType	uint32_t		3969902	0					
ANR	3969961	Identifier	var		3969902	1					
ANR	3969962	CFGEntryNode	ENTRY		3969902		True				
ANR	3969963	CFGExitNode	EXIT		3969902		True				
ANR	3969964	Symbol	ret		3969902						
ANR	3969965	Symbol	UNEXPECTED		3969902						
ANR	3969966	Symbol	_get_zval_cv_lookup_BP_VAR_R		3969902						
ANR	3969967	Symbol	var		3969902						
ANR	3969968	Symbol	EX_VAR		3969902						
ANR	3969969	Symbol	Z_TYPE_P		3969902						
ANR	3969970	Symbol	execute_data		3969902						
ANR	3969971	Symbol	IS_UNDEF		3969902						
ANR	3969972	Function	_get_zval_ptr_cv_BP_VAR_UNSET	326:0:10801:11074							
ANR	3969973	FunctionDef	"_get_zval_ptr_cv_BP_VAR_UNSET (const zend_execute_data * execute_data , uint32_t var)"		3969972	0					
ANR	3969974	CompoundStatement		327:0:10916:11074	3969972	0					
ANR	3969975	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	328:1:10919:10942	3969972	0	True				
ANR	3969976	IdentifierDecl	* ret = EX_VAR ( var )		3969972	0					
ANR	3969977	IdentifierDeclType	zval *		3969972	0					
ANR	3969978	Identifier	ret		3969972	1					
ANR	3969979	AssignmentExpression	* ret = EX_VAR ( var )		3969972	2		=			
ANR	3969980	Identifier	ret		3969972	0					
ANR	3969981	CallExpression	EX_VAR ( var )		3969972	1					
ANR	3969982	Callee	EX_VAR		3969972	0					
ANR	3969983	Identifier	EX_VAR		3969972	0					
ANR	3969984	ArgumentList	var		3969972	1					
ANR	3969985	Argument	var		3969972	0					
ANR	3969986	Identifier	var		3969972	0					
ANR	3969987	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF ) )		3969972	1					
ANR	3969988	Condition	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )	330:5:10950:10986	3969972	0	True				
ANR	3969989	CallExpression	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )		3969972	0					
ANR	3969990	Callee	UNEXPECTED		3969972	0					
ANR	3969991	Identifier	UNEXPECTED		3969972	0					
ANR	3969992	ArgumentList	Z_TYPE_P ( ret ) == IS_UNDEF		3969972	1					
ANR	3969993	Argument	Z_TYPE_P ( ret ) == IS_UNDEF		3969972	0					
ANR	3969994	EqualityExpression	Z_TYPE_P ( ret ) == IS_UNDEF		3969972	0		==			
ANR	3969995	CallExpression	Z_TYPE_P ( ret )		3969972	0					
ANR	3969996	Callee	Z_TYPE_P		3969972	0					
ANR	3969997	Identifier	Z_TYPE_P		3969972	0					
ANR	3969998	ArgumentList	ret		3969972	1					
ANR	3969999	Argument	ret		3969972	0					
ANR	3970000	Identifier	ret		3969972	0					
ANR	3970001	Identifier	IS_UNDEF		3969972	1					
ANR	3970002	CompoundStatement		4:44:72:72	3969972	1					
ANR	3970003	ReturnStatement	"return _get_zval_cv_lookup_BP_VAR_UNSET ( ret , var , execute_data ) ;"	331:2:10993:11056	3969972	0	True				
ANR	3970004	CallExpression	"_get_zval_cv_lookup_BP_VAR_UNSET ( ret , var , execute_data )"		3969972	0					
ANR	3970005	Callee	_get_zval_cv_lookup_BP_VAR_UNSET		3969972	0					
ANR	3970006	Identifier	_get_zval_cv_lookup_BP_VAR_UNSET		3969972	0					
ANR	3970007	ArgumentList	ret		3969972	1					
ANR	3970008	Argument	ret		3969972	0					
ANR	3970009	Identifier	ret		3969972	0					
ANR	3970010	Argument	var		3969972	1					
ANR	3970011	Identifier	var		3969972	0					
ANR	3970012	Argument	execute_data		3969972	2					
ANR	3970013	Identifier	execute_data		3969972	0					
ANR	3970014	ReturnStatement	return ret ;	333:1:11062:11072	3969972	2	True				
ANR	3970015	Identifier	ret		3969972	0					
ANR	3970016	ReturnType	static zend_always_inline zval *		3969972	1					
ANR	3970017	Identifier	_get_zval_ptr_cv_BP_VAR_UNSET		3969972	2					
ANR	3970018	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3969972	3					
ANR	3970019	Parameter	const zend_execute_data * execute_data	326:62:10863:10899	3969972	0	True				
ANR	3970020	ParameterType	const zend_execute_data *		3969972	0					
ANR	3970021	Identifier	execute_data		3969972	1					
ANR	3970022	Parameter	uint32_t var	326:101:10902:10913	3969972	1	True				
ANR	3970023	ParameterType	uint32_t		3969972	0					
ANR	3970024	Identifier	var		3969972	1					
ANR	3970025	CFGEntryNode	ENTRY		3969972		True				
ANR	3970026	CFGExitNode	EXIT		3969972		True				
ANR	3970027	Symbol	ret		3969972						
ANR	3970028	Symbol	UNEXPECTED		3969972						
ANR	3970029	Symbol	var		3969972						
ANR	3970030	Symbol	EX_VAR		3969972						
ANR	3970031	Symbol	Z_TYPE_P		3969972						
ANR	3970032	Symbol	_get_zval_cv_lookup_BP_VAR_UNSET		3969972						
ANR	3970033	Symbol	execute_data		3969972						
ANR	3970034	Symbol	IS_UNDEF		3969972						
ANR	3970035	Function	_get_zval_ptr_cv_deref_BP_VAR_UNSET	336:0:11077:11374							
ANR	3970036	FunctionDef	"_get_zval_ptr_cv_deref_BP_VAR_UNSET (const zend_execute_data * execute_data , uint32_t var)"		3970035	0					
ANR	3970037	CompoundStatement		337:0:11198:11374	3970035	0					
ANR	3970038	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	338:1:11201:11224	3970035	0	True				
ANR	3970039	IdentifierDecl	* ret = EX_VAR ( var )		3970035	0					
ANR	3970040	IdentifierDeclType	zval *		3970035	0					
ANR	3970041	Identifier	ret		3970035	1					
ANR	3970042	AssignmentExpression	* ret = EX_VAR ( var )		3970035	2		=			
ANR	3970043	Identifier	ret		3970035	0					
ANR	3970044	CallExpression	EX_VAR ( var )		3970035	1					
ANR	3970045	Callee	EX_VAR		3970035	0					
ANR	3970046	Identifier	EX_VAR		3970035	0					
ANR	3970047	ArgumentList	var		3970035	1					
ANR	3970048	Argument	var		3970035	0					
ANR	3970049	Identifier	var		3970035	0					
ANR	3970050	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF ) )		3970035	1					
ANR	3970051	Condition	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )	340:5:11232:11268	3970035	0	True				
ANR	3970052	CallExpression	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )		3970035	0					
ANR	3970053	Callee	UNEXPECTED		3970035	0					
ANR	3970054	Identifier	UNEXPECTED		3970035	0					
ANR	3970055	ArgumentList	Z_TYPE_P ( ret ) == IS_UNDEF		3970035	1					
ANR	3970056	Argument	Z_TYPE_P ( ret ) == IS_UNDEF		3970035	0					
ANR	3970057	EqualityExpression	Z_TYPE_P ( ret ) == IS_UNDEF		3970035	0		==			
ANR	3970058	CallExpression	Z_TYPE_P ( ret )		3970035	0					
ANR	3970059	Callee	Z_TYPE_P		3970035	0					
ANR	3970060	Identifier	Z_TYPE_P		3970035	0					
ANR	3970061	ArgumentList	ret		3970035	1					
ANR	3970062	Argument	ret		3970035	0					
ANR	3970063	Identifier	ret		3970035	0					
ANR	3970064	Identifier	IS_UNDEF		3970035	1					
ANR	3970065	CompoundStatement		4:44:72:72	3970035	1					
ANR	3970066	ReturnStatement	"return _get_zval_cv_lookup_BP_VAR_UNSET ( ret , var , execute_data ) ;"	341:2:11275:11338	3970035	0	True				
ANR	3970067	CallExpression	"_get_zval_cv_lookup_BP_VAR_UNSET ( ret , var , execute_data )"		3970035	0					
ANR	3970068	Callee	_get_zval_cv_lookup_BP_VAR_UNSET		3970035	0					
ANR	3970069	Identifier	_get_zval_cv_lookup_BP_VAR_UNSET		3970035	0					
ANR	3970070	ArgumentList	ret		3970035	1					
ANR	3970071	Argument	ret		3970035	0					
ANR	3970072	Identifier	ret		3970035	0					
ANR	3970073	Argument	var		3970035	1					
ANR	3970074	Identifier	var		3970035	0					
ANR	3970075	Argument	execute_data		3970035	2					
ANR	3970076	Identifier	execute_data		3970035	0					
ANR	3970077	ExpressionStatement	ZVAL_DEREF ( ret )	343:1:11344:11359	3970035	2	True				
ANR	3970078	CallExpression	ZVAL_DEREF ( ret )		3970035	0					
ANR	3970079	Callee	ZVAL_DEREF		3970035	0					
ANR	3970080	Identifier	ZVAL_DEREF		3970035	0					
ANR	3970081	ArgumentList	ret		3970035	1					
ANR	3970082	Argument	ret		3970035	0					
ANR	3970083	Identifier	ret		3970035	0					
ANR	3970084	ReturnStatement	return ret ;	344:1:11362:11372	3970035	3	True				
ANR	3970085	Identifier	ret		3970035	0					
ANR	3970086	ReturnType	static zend_always_inline zval *		3970035	1					
ANR	3970087	Identifier	_get_zval_ptr_cv_deref_BP_VAR_UNSET		3970035	2					
ANR	3970088	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3970035	3					
ANR	3970089	Parameter	const zend_execute_data * execute_data	336:68:11145:11181	3970035	0	True				
ANR	3970090	ParameterType	const zend_execute_data *		3970035	0					
ANR	3970091	Identifier	execute_data		3970035	1					
ANR	3970092	Parameter	uint32_t var	336:107:11184:11195	3970035	1	True				
ANR	3970093	ParameterType	uint32_t		3970035	0					
ANR	3970094	Identifier	var		3970035	1					
ANR	3970095	CFGEntryNode	ENTRY		3970035		True				
ANR	3970096	CFGExitNode	EXIT		3970035		True				
ANR	3970097	Symbol	ret		3970035						
ANR	3970098	Symbol	UNEXPECTED		3970035						
ANR	3970099	Symbol	var		3970035						
ANR	3970100	Symbol	EX_VAR		3970035						
ANR	3970101	Symbol	Z_TYPE_P		3970035						
ANR	3970102	Symbol	_get_zval_cv_lookup_BP_VAR_UNSET		3970035						
ANR	3970103	Symbol	execute_data		3970035						
ANR	3970104	Symbol	IS_UNDEF		3970035						
ANR	3970105	Function	_get_zval_ptr_cv_BP_VAR_IS	347:0:11377:11531							
ANR	3970106	FunctionDef	"_get_zval_ptr_cv_BP_VAR_IS (const zend_execute_data * execute_data , uint32_t var)"		3970105	0					
ANR	3970107	CompoundStatement		348:0:11489:11531	3970105	0					
ANR	3970108	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	349:1:11492:11515	3970105	0	True				
ANR	3970109	IdentifierDecl	* ret = EX_VAR ( var )		3970105	0					
ANR	3970110	IdentifierDeclType	zval *		3970105	0					
ANR	3970111	Identifier	ret		3970105	1					
ANR	3970112	AssignmentExpression	* ret = EX_VAR ( var )		3970105	2		=			
ANR	3970113	Identifier	ret		3970105	0					
ANR	3970114	CallExpression	EX_VAR ( var )		3970105	1					
ANR	3970115	Callee	EX_VAR		3970105	0					
ANR	3970116	Identifier	EX_VAR		3970105	0					
ANR	3970117	ArgumentList	var		3970105	1					
ANR	3970118	Argument	var		3970105	0					
ANR	3970119	Identifier	var		3970105	0					
ANR	3970120	ReturnStatement	return ret ;	351:1:11519:11529	3970105	1	True				
ANR	3970121	Identifier	ret		3970105	0					
ANR	3970122	ReturnType	static zend_always_inline zval *		3970105	1					
ANR	3970123	Identifier	_get_zval_ptr_cv_BP_VAR_IS		3970105	2					
ANR	3970124	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3970105	3					
ANR	3970125	Parameter	const zend_execute_data * execute_data	347:59:11436:11472	3970105	0	True				
ANR	3970126	ParameterType	const zend_execute_data *		3970105	0					
ANR	3970127	Identifier	execute_data		3970105	1					
ANR	3970128	Parameter	uint32_t var	347:98:11475:11486	3970105	1	True				
ANR	3970129	ParameterType	uint32_t		3970105	0					
ANR	3970130	Identifier	var		3970105	1					
ANR	3970131	CFGEntryNode	ENTRY		3970105		True				
ANR	3970132	CFGExitNode	EXIT		3970105		True				
ANR	3970133	Symbol	ret		3970105						
ANR	3970134	Symbol	var		3970105						
ANR	3970135	Symbol	EX_VAR		3970105						
ANR	3970136	Symbol	execute_data		3970105						
ANR	3970137	Function	_get_zval_ptr_cv_deref_BP_VAR_IS	354:0:11534:11712							
ANR	3970138	FunctionDef	"_get_zval_ptr_cv_deref_BP_VAR_IS (const zend_execute_data * execute_data , uint32_t var)"		3970137	0					
ANR	3970139	CompoundStatement		355:0:11652:11712	3970137	0					
ANR	3970140	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	356:1:11655:11678	3970137	0	True				
ANR	3970141	IdentifierDecl	* ret = EX_VAR ( var )		3970137	0					
ANR	3970142	IdentifierDeclType	zval *		3970137	0					
ANR	3970143	Identifier	ret		3970137	1					
ANR	3970144	AssignmentExpression	* ret = EX_VAR ( var )		3970137	2		=			
ANR	3970145	Identifier	ret		3970137	0					
ANR	3970146	CallExpression	EX_VAR ( var )		3970137	1					
ANR	3970147	Callee	EX_VAR		3970137	0					
ANR	3970148	Identifier	EX_VAR		3970137	0					
ANR	3970149	ArgumentList	var		3970137	1					
ANR	3970150	Argument	var		3970137	0					
ANR	3970151	Identifier	var		3970137	0					
ANR	3970152	ExpressionStatement	ZVAL_DEREF ( ret )	358:1:11682:11697	3970137	1	True				
ANR	3970153	CallExpression	ZVAL_DEREF ( ret )		3970137	0					
ANR	3970154	Callee	ZVAL_DEREF		3970137	0					
ANR	3970155	Identifier	ZVAL_DEREF		3970137	0					
ANR	3970156	ArgumentList	ret		3970137	1					
ANR	3970157	Argument	ret		3970137	0					
ANR	3970158	Identifier	ret		3970137	0					
ANR	3970159	ReturnStatement	return ret ;	359:1:11700:11710	3970137	2	True				
ANR	3970160	Identifier	ret		3970137	0					
ANR	3970161	ReturnType	static zend_always_inline zval *		3970137	1					
ANR	3970162	Identifier	_get_zval_ptr_cv_deref_BP_VAR_IS		3970137	2					
ANR	3970163	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3970137	3					
ANR	3970164	Parameter	const zend_execute_data * execute_data	354:65:11599:11635	3970137	0	True				
ANR	3970165	ParameterType	const zend_execute_data *		3970137	0					
ANR	3970166	Identifier	execute_data		3970137	1					
ANR	3970167	Parameter	uint32_t var	354:104:11638:11649	3970137	1	True				
ANR	3970168	ParameterType	uint32_t		3970137	0					
ANR	3970169	Identifier	var		3970137	1					
ANR	3970170	CFGEntryNode	ENTRY		3970137		True				
ANR	3970171	CFGExitNode	EXIT		3970137		True				
ANR	3970172	Symbol	ret		3970137						
ANR	3970173	Symbol	var		3970137						
ANR	3970174	Symbol	EX_VAR		3970137						
ANR	3970175	Symbol	execute_data		3970137						
ANR	3970176	Function	_get_zval_ptr_cv_BP_VAR_RW	362:0:11715:11982							
ANR	3970177	FunctionDef	"_get_zval_ptr_cv_BP_VAR_RW (const zend_execute_data * execute_data , uint32_t var)"		3970176	0					
ANR	3970178	CompoundStatement		363:0:11827:11982	3970176	0					
ANR	3970179	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	364:1:11830:11853	3970176	0	True				
ANR	3970180	IdentifierDecl	* ret = EX_VAR ( var )		3970176	0					
ANR	3970181	IdentifierDeclType	zval *		3970176	0					
ANR	3970182	Identifier	ret		3970176	1					
ANR	3970183	AssignmentExpression	* ret = EX_VAR ( var )		3970176	2		=			
ANR	3970184	Identifier	ret		3970176	0					
ANR	3970185	CallExpression	EX_VAR ( var )		3970176	1					
ANR	3970186	Callee	EX_VAR		3970176	0					
ANR	3970187	Identifier	EX_VAR		3970176	0					
ANR	3970188	ArgumentList	var		3970176	1					
ANR	3970189	Argument	var		3970176	0					
ANR	3970190	Identifier	var		3970176	0					
ANR	3970191	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF ) )		3970176	1					
ANR	3970192	Condition	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )	366:5:11861:11897	3970176	0	True				
ANR	3970193	CallExpression	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )		3970176	0					
ANR	3970194	Callee	UNEXPECTED		3970176	0					
ANR	3970195	Identifier	UNEXPECTED		3970176	0					
ANR	3970196	ArgumentList	Z_TYPE_P ( ret ) == IS_UNDEF		3970176	1					
ANR	3970197	Argument	Z_TYPE_P ( ret ) == IS_UNDEF		3970176	0					
ANR	3970198	EqualityExpression	Z_TYPE_P ( ret ) == IS_UNDEF		3970176	0		==			
ANR	3970199	CallExpression	Z_TYPE_P ( ret )		3970176	0					
ANR	3970200	Callee	Z_TYPE_P		3970176	0					
ANR	3970201	Identifier	Z_TYPE_P		3970176	0					
ANR	3970202	ArgumentList	ret		3970176	1					
ANR	3970203	Argument	ret		3970176	0					
ANR	3970204	Identifier	ret		3970176	0					
ANR	3970205	Identifier	IS_UNDEF		3970176	1					
ANR	3970206	CompoundStatement		4:44:72:72	3970176	1					
ANR	3970207	ReturnStatement	"return _get_zval_cv_lookup_BP_VAR_RW ( ret , var , execute_data ) ;"	367:2:11904:11964	3970176	0	True				
ANR	3970208	CallExpression	"_get_zval_cv_lookup_BP_VAR_RW ( ret , var , execute_data )"		3970176	0					
ANR	3970209	Callee	_get_zval_cv_lookup_BP_VAR_RW		3970176	0					
ANR	3970210	Identifier	_get_zval_cv_lookup_BP_VAR_RW		3970176	0					
ANR	3970211	ArgumentList	ret		3970176	1					
ANR	3970212	Argument	ret		3970176	0					
ANR	3970213	Identifier	ret		3970176	0					
ANR	3970214	Argument	var		3970176	1					
ANR	3970215	Identifier	var		3970176	0					
ANR	3970216	Argument	execute_data		3970176	2					
ANR	3970217	Identifier	execute_data		3970176	0					
ANR	3970218	ReturnStatement	return ret ;	369:1:11970:11980	3970176	2	True				
ANR	3970219	Identifier	ret		3970176	0					
ANR	3970220	ReturnType	static zend_always_inline zval *		3970176	1					
ANR	3970221	Identifier	_get_zval_ptr_cv_BP_VAR_RW		3970176	2					
ANR	3970222	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3970176	3					
ANR	3970223	Parameter	const zend_execute_data * execute_data	362:59:11774:11810	3970176	0	True				
ANR	3970224	ParameterType	const zend_execute_data *		3970176	0					
ANR	3970225	Identifier	execute_data		3970176	1					
ANR	3970226	Parameter	uint32_t var	362:98:11813:11824	3970176	1	True				
ANR	3970227	ParameterType	uint32_t		3970176	0					
ANR	3970228	Identifier	var		3970176	1					
ANR	3970229	CFGEntryNode	ENTRY		3970176		True				
ANR	3970230	CFGExitNode	EXIT		3970176		True				
ANR	3970231	Symbol	ret		3970176						
ANR	3970232	Symbol	UNEXPECTED		3970176						
ANR	3970233	Symbol	var		3970176						
ANR	3970234	Symbol	_get_zval_cv_lookup_BP_VAR_RW		3970176						
ANR	3970235	Symbol	EX_VAR		3970176						
ANR	3970236	Symbol	Z_TYPE_P		3970176						
ANR	3970237	Symbol	execute_data		3970176						
ANR	3970238	Symbol	IS_UNDEF		3970176						
ANR	3970239	Function	_get_zval_ptr_cv_deref_BP_VAR_RW	372:0:11985:12276							
ANR	3970240	FunctionDef	"_get_zval_ptr_cv_deref_BP_VAR_RW (const zend_execute_data * execute_data , uint32_t var)"		3970239	0					
ANR	3970241	CompoundStatement		373:0:12103:12276	3970239	0					
ANR	3970242	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	374:1:12106:12129	3970239	0	True				
ANR	3970243	IdentifierDecl	* ret = EX_VAR ( var )		3970239	0					
ANR	3970244	IdentifierDeclType	zval *		3970239	0					
ANR	3970245	Identifier	ret		3970239	1					
ANR	3970246	AssignmentExpression	* ret = EX_VAR ( var )		3970239	2		=			
ANR	3970247	Identifier	ret		3970239	0					
ANR	3970248	CallExpression	EX_VAR ( var )		3970239	1					
ANR	3970249	Callee	EX_VAR		3970239	0					
ANR	3970250	Identifier	EX_VAR		3970239	0					
ANR	3970251	ArgumentList	var		3970239	1					
ANR	3970252	Argument	var		3970239	0					
ANR	3970253	Identifier	var		3970239	0					
ANR	3970254	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF ) )		3970239	1					
ANR	3970255	Condition	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )	376:5:12137:12173	3970239	0	True				
ANR	3970256	CallExpression	UNEXPECTED ( Z_TYPE_P ( ret ) == IS_UNDEF )		3970239	0					
ANR	3970257	Callee	UNEXPECTED		3970239	0					
ANR	3970258	Identifier	UNEXPECTED		3970239	0					
ANR	3970259	ArgumentList	Z_TYPE_P ( ret ) == IS_UNDEF		3970239	1					
ANR	3970260	Argument	Z_TYPE_P ( ret ) == IS_UNDEF		3970239	0					
ANR	3970261	EqualityExpression	Z_TYPE_P ( ret ) == IS_UNDEF		3970239	0		==			
ANR	3970262	CallExpression	Z_TYPE_P ( ret )		3970239	0					
ANR	3970263	Callee	Z_TYPE_P		3970239	0					
ANR	3970264	Identifier	Z_TYPE_P		3970239	0					
ANR	3970265	ArgumentList	ret		3970239	1					
ANR	3970266	Argument	ret		3970239	0					
ANR	3970267	Identifier	ret		3970239	0					
ANR	3970268	Identifier	IS_UNDEF		3970239	1					
ANR	3970269	CompoundStatement		4:44:72:72	3970239	1					
ANR	3970270	ReturnStatement	"return _get_zval_cv_lookup_BP_VAR_RW ( ret , var , execute_data ) ;"	377:2:12180:12240	3970239	0	True				
ANR	3970271	CallExpression	"_get_zval_cv_lookup_BP_VAR_RW ( ret , var , execute_data )"		3970239	0					
ANR	3970272	Callee	_get_zval_cv_lookup_BP_VAR_RW		3970239	0					
ANR	3970273	Identifier	_get_zval_cv_lookup_BP_VAR_RW		3970239	0					
ANR	3970274	ArgumentList	ret		3970239	1					
ANR	3970275	Argument	ret		3970239	0					
ANR	3970276	Identifier	ret		3970239	0					
ANR	3970277	Argument	var		3970239	1					
ANR	3970278	Identifier	var		3970239	0					
ANR	3970279	Argument	execute_data		3970239	2					
ANR	3970280	Identifier	execute_data		3970239	0					
ANR	3970281	ExpressionStatement	ZVAL_DEREF ( ret )	379:1:12246:12261	3970239	2	True				
ANR	3970282	CallExpression	ZVAL_DEREF ( ret )		3970239	0					
ANR	3970283	Callee	ZVAL_DEREF		3970239	0					
ANR	3970284	Identifier	ZVAL_DEREF		3970239	0					
ANR	3970285	ArgumentList	ret		3970239	1					
ANR	3970286	Argument	ret		3970239	0					
ANR	3970287	Identifier	ret		3970239	0					
ANR	3970288	ReturnStatement	return ret ;	380:1:12264:12274	3970239	3	True				
ANR	3970289	Identifier	ret		3970239	0					
ANR	3970290	ReturnType	static zend_always_inline zval *		3970239	1					
ANR	3970291	Identifier	_get_zval_ptr_cv_deref_BP_VAR_RW		3970239	2					
ANR	3970292	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3970239	3					
ANR	3970293	Parameter	const zend_execute_data * execute_data	372:65:12050:12086	3970239	0	True				
ANR	3970294	ParameterType	const zend_execute_data *		3970239	0					
ANR	3970295	Identifier	execute_data		3970239	1					
ANR	3970296	Parameter	uint32_t var	372:104:12089:12100	3970239	1	True				
ANR	3970297	ParameterType	uint32_t		3970239	0					
ANR	3970298	Identifier	var		3970239	1					
ANR	3970299	CFGEntryNode	ENTRY		3970239		True				
ANR	3970300	CFGExitNode	EXIT		3970239		True				
ANR	3970301	Symbol	ret		3970239						
ANR	3970302	Symbol	UNEXPECTED		3970239						
ANR	3970303	Symbol	var		3970239						
ANR	3970304	Symbol	_get_zval_cv_lookup_BP_VAR_RW		3970239						
ANR	3970305	Symbol	EX_VAR		3970239						
ANR	3970306	Symbol	Z_TYPE_P		3970239						
ANR	3970307	Symbol	execute_data		3970239						
ANR	3970308	Symbol	IS_UNDEF		3970239						
ANR	3970309	Function	_get_zval_ptr_cv_BP_VAR_W	383:0:12279:12532							
ANR	3970310	FunctionDef	"_get_zval_ptr_cv_BP_VAR_W (const zend_execute_data * execute_data , uint32_t var)"		3970309	0					
ANR	3970311	CompoundStatement		384:0:12390:12532	3970309	0					
ANR	3970312	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	385:1:12393:12416	3970309	0	True				
ANR	3970313	IdentifierDecl	* ret = EX_VAR ( var )		3970309	0					
ANR	3970314	IdentifierDeclType	zval *		3970309	0					
ANR	3970315	Identifier	ret		3970309	1					
ANR	3970316	AssignmentExpression	* ret = EX_VAR ( var )		3970309	2		=			
ANR	3970317	Identifier	ret		3970309	0					
ANR	3970318	CallExpression	EX_VAR ( var )		3970309	1					
ANR	3970319	Callee	EX_VAR		3970309	0					
ANR	3970320	Identifier	EX_VAR		3970309	0					
ANR	3970321	ArgumentList	var		3970309	1					
ANR	3970322	Argument	var		3970309	0					
ANR	3970323	Identifier	var		3970309	0					
ANR	3970324	IfStatement	if ( Z_TYPE_P ( ret ) == IS_UNDEF )		3970309	1					
ANR	3970325	Condition	Z_TYPE_P ( ret ) == IS_UNDEF	387:5:12424:12448	3970309	0	True				
ANR	3970326	EqualityExpression	Z_TYPE_P ( ret ) == IS_UNDEF		3970309	0		==			
ANR	3970327	CallExpression	Z_TYPE_P ( ret )		3970309	0					
ANR	3970328	Callee	Z_TYPE_P		3970309	0					
ANR	3970329	Identifier	Z_TYPE_P		3970309	0					
ANR	3970330	ArgumentList	ret		3970309	1					
ANR	3970331	Argument	ret		3970309	0					
ANR	3970332	Identifier	ret		3970309	0					
ANR	3970333	Identifier	IS_UNDEF		3970309	1					
ANR	3970334	CompoundStatement		4:32:60:60	3970309	1					
ANR	3970335	ReturnStatement	"return _get_zval_cv_lookup_BP_VAR_W ( ret , var , execute_data ) ;"	388:2:12455:12514	3970309	0	True				
ANR	3970336	CallExpression	"_get_zval_cv_lookup_BP_VAR_W ( ret , var , execute_data )"		3970309	0					
ANR	3970337	Callee	_get_zval_cv_lookup_BP_VAR_W		3970309	0					
ANR	3970338	Identifier	_get_zval_cv_lookup_BP_VAR_W		3970309	0					
ANR	3970339	ArgumentList	ret		3970309	1					
ANR	3970340	Argument	ret		3970309	0					
ANR	3970341	Identifier	ret		3970309	0					
ANR	3970342	Argument	var		3970309	1					
ANR	3970343	Identifier	var		3970309	0					
ANR	3970344	Argument	execute_data		3970309	2					
ANR	3970345	Identifier	execute_data		3970309	0					
ANR	3970346	ReturnStatement	return ret ;	390:1:12520:12530	3970309	2	True				
ANR	3970347	Identifier	ret		3970309	0					
ANR	3970348	ReturnType	static zend_always_inline zval *		3970309	1					
ANR	3970349	Identifier	_get_zval_ptr_cv_BP_VAR_W		3970309	2					
ANR	3970350	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3970309	3					
ANR	3970351	Parameter	const zend_execute_data * execute_data	383:58:12337:12373	3970309	0	True				
ANR	3970352	ParameterType	const zend_execute_data *		3970309	0					
ANR	3970353	Identifier	execute_data		3970309	1					
ANR	3970354	Parameter	uint32_t var	383:97:12376:12387	3970309	1	True				
ANR	3970355	ParameterType	uint32_t		3970309	0					
ANR	3970356	Identifier	var		3970309	1					
ANR	3970357	CFGEntryNode	ENTRY		3970309		True				
ANR	3970358	CFGExitNode	EXIT		3970309		True				
ANR	3970359	Symbol	ret		3970309						
ANR	3970360	Symbol	_get_zval_cv_lookup_BP_VAR_W		3970309						
ANR	3970361	Symbol	var		3970309						
ANR	3970362	Symbol	EX_VAR		3970309						
ANR	3970363	Symbol	Z_TYPE_P		3970309						
ANR	3970364	Symbol	execute_data		3970309						
ANR	3970365	Symbol	IS_UNDEF		3970309						
ANR	3970366	Function	_get_zval_ptr_cv_undef_BP_VAR_W	393:0:12535:12675							
ANR	3970367	FunctionDef	"_get_zval_ptr_cv_undef_BP_VAR_W (const zend_execute_data * execute_data , uint32_t var)"		3970366	0					
ANR	3970368	CompoundStatement		394:0:12652:12675	3970366	0					
ANR	3970369	ReturnStatement	return EX_VAR ( var ) ;	395:1:12655:12673	3970366	0	True				
ANR	3970370	CallExpression	EX_VAR ( var )		3970366	0					
ANR	3970371	Callee	EX_VAR		3970366	0					
ANR	3970372	Identifier	EX_VAR		3970366	0					
ANR	3970373	ArgumentList	var		3970366	1					
ANR	3970374	Argument	var		3970366	0					
ANR	3970375	Identifier	var		3970366	0					
ANR	3970376	ReturnType	static zend_always_inline zval *		3970366	1					
ANR	3970377	Identifier	_get_zval_ptr_cv_undef_BP_VAR_W		3970366	2					
ANR	3970378	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3970366	3					
ANR	3970379	Parameter	const zend_execute_data * execute_data	393:64:12599:12635	3970366	0	True				
ANR	3970380	ParameterType	const zend_execute_data *		3970366	0					
ANR	3970381	Identifier	execute_data		3970366	1					
ANR	3970382	Parameter	uint32_t var	393:103:12638:12649	3970366	1	True				
ANR	3970383	ParameterType	uint32_t		3970366	0					
ANR	3970384	Identifier	var		3970366	1					
ANR	3970385	CFGEntryNode	ENTRY		3970366		True				
ANR	3970386	CFGExitNode	EXIT		3970366		True				
ANR	3970387	Symbol	var		3970366						
ANR	3970388	Symbol	EX_VAR		3970366						
ANR	3970389	Symbol	execute_data		3970366						
ANR	3970390	Function	_get_zval_ptr_cv_undef_BP_VAR_RW	398:0:12678:12819							
ANR	3970391	FunctionDef	"_get_zval_ptr_cv_undef_BP_VAR_RW (const zend_execute_data * execute_data , uint32_t var)"		3970390	0					
ANR	3970392	CompoundStatement		399:0:12796:12819	3970390	0					
ANR	3970393	ReturnStatement	return EX_VAR ( var ) ;	400:1:12799:12817	3970390	0	True				
ANR	3970394	CallExpression	EX_VAR ( var )		3970390	0					
ANR	3970395	Callee	EX_VAR		3970390	0					
ANR	3970396	Identifier	EX_VAR		3970390	0					
ANR	3970397	ArgumentList	var		3970390	1					
ANR	3970398	Argument	var		3970390	0					
ANR	3970399	Identifier	var		3970390	0					
ANR	3970400	ReturnType	static zend_always_inline zval *		3970390	1					
ANR	3970401	Identifier	_get_zval_ptr_cv_undef_BP_VAR_RW		3970390	2					
ANR	3970402	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3970390	3					
ANR	3970403	Parameter	const zend_execute_data * execute_data	398:65:12743:12779	3970390	0	True				
ANR	3970404	ParameterType	const zend_execute_data *		3970390	0					
ANR	3970405	Identifier	execute_data		3970390	1					
ANR	3970406	Parameter	uint32_t var	398:104:12782:12793	3970390	1	True				
ANR	3970407	ParameterType	uint32_t		3970390	0					
ANR	3970408	Identifier	var		3970390	1					
ANR	3970409	CFGEntryNode	ENTRY		3970390		True				
ANR	3970410	CFGExitNode	EXIT		3970390		True				
ANR	3970411	Symbol	var		3970390						
ANR	3970412	Symbol	EX_VAR		3970390						
ANR	3970413	Symbol	execute_data		3970390						
ANR	3970414	Function	_get_zval_ptr_cv_deref_BP_VAR_W	403:0:12822:13099							
ANR	3970415	FunctionDef	"_get_zval_ptr_cv_deref_BP_VAR_W (const zend_execute_data * execute_data , uint32_t var)"		3970414	0					
ANR	3970416	CompoundStatement		404:0:12939:13099	3970414	0					
ANR	3970417	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	405:1:12942:12965	3970414	0	True				
ANR	3970418	IdentifierDecl	* ret = EX_VAR ( var )		3970414	0					
ANR	3970419	IdentifierDeclType	zval *		3970414	0					
ANR	3970420	Identifier	ret		3970414	1					
ANR	3970421	AssignmentExpression	* ret = EX_VAR ( var )		3970414	2		=			
ANR	3970422	Identifier	ret		3970414	0					
ANR	3970423	CallExpression	EX_VAR ( var )		3970414	1					
ANR	3970424	Callee	EX_VAR		3970414	0					
ANR	3970425	Identifier	EX_VAR		3970414	0					
ANR	3970426	ArgumentList	var		3970414	1					
ANR	3970427	Argument	var		3970414	0					
ANR	3970428	Identifier	var		3970414	0					
ANR	3970429	IfStatement	if ( Z_TYPE_P ( ret ) == IS_UNDEF )		3970414	1					
ANR	3970430	Condition	Z_TYPE_P ( ret ) == IS_UNDEF	407:5:12973:12997	3970414	0	True				
ANR	3970431	EqualityExpression	Z_TYPE_P ( ret ) == IS_UNDEF		3970414	0		==			
ANR	3970432	CallExpression	Z_TYPE_P ( ret )		3970414	0					
ANR	3970433	Callee	Z_TYPE_P		3970414	0					
ANR	3970434	Identifier	Z_TYPE_P		3970414	0					
ANR	3970435	ArgumentList	ret		3970414	1					
ANR	3970436	Argument	ret		3970414	0					
ANR	3970437	Identifier	ret		3970414	0					
ANR	3970438	Identifier	IS_UNDEF		3970414	1					
ANR	3970439	CompoundStatement		4:32:60:60	3970414	1					
ANR	3970440	ReturnStatement	"return _get_zval_cv_lookup_BP_VAR_W ( ret , var , execute_data ) ;"	408:2:13004:13063	3970414	0	True				
ANR	3970441	CallExpression	"_get_zval_cv_lookup_BP_VAR_W ( ret , var , execute_data )"		3970414	0					
ANR	3970442	Callee	_get_zval_cv_lookup_BP_VAR_W		3970414	0					
ANR	3970443	Identifier	_get_zval_cv_lookup_BP_VAR_W		3970414	0					
ANR	3970444	ArgumentList	ret		3970414	1					
ANR	3970445	Argument	ret		3970414	0					
ANR	3970446	Identifier	ret		3970414	0					
ANR	3970447	Argument	var		3970414	1					
ANR	3970448	Identifier	var		3970414	0					
ANR	3970449	Argument	execute_data		3970414	2					
ANR	3970450	Identifier	execute_data		3970414	0					
ANR	3970451	ExpressionStatement	ZVAL_DEREF ( ret )	410:1:13069:13084	3970414	2	True				
ANR	3970452	CallExpression	ZVAL_DEREF ( ret )		3970414	0					
ANR	3970453	Callee	ZVAL_DEREF		3970414	0					
ANR	3970454	Identifier	ZVAL_DEREF		3970414	0					
ANR	3970455	ArgumentList	ret		3970414	1					
ANR	3970456	Argument	ret		3970414	0					
ANR	3970457	Identifier	ret		3970414	0					
ANR	3970458	ReturnStatement	return ret ;	411:1:13087:13097	3970414	3	True				
ANR	3970459	Identifier	ret		3970414	0					
ANR	3970460	ReturnType	static zend_always_inline zval *		3970414	1					
ANR	3970461	Identifier	_get_zval_ptr_cv_deref_BP_VAR_W		3970414	2					
ANR	3970462	ParameterList	"const zend_execute_data * execute_data , uint32_t var"		3970414	3					
ANR	3970463	Parameter	const zend_execute_data * execute_data	403:64:12886:12922	3970414	0	True				
ANR	3970464	ParameterType	const zend_execute_data *		3970414	0					
ANR	3970465	Identifier	execute_data		3970414	1					
ANR	3970466	Parameter	uint32_t var	403:103:12925:12936	3970414	1	True				
ANR	3970467	ParameterType	uint32_t		3970414	0					
ANR	3970468	Identifier	var		3970414	1					
ANR	3970469	CFGEntryNode	ENTRY		3970414		True				
ANR	3970470	CFGExitNode	EXIT		3970414		True				
ANR	3970471	Symbol	ret		3970414						
ANR	3970472	Symbol	_get_zval_cv_lookup_BP_VAR_W		3970414						
ANR	3970473	Symbol	var		3970414						
ANR	3970474	Symbol	EX_VAR		3970414						
ANR	3970475	Symbol	Z_TYPE_P		3970414						
ANR	3970476	Symbol	execute_data		3970414						
ANR	3970477	Symbol	IS_UNDEF		3970414						
ANR	3970478	Function	_get_zval_ptr	414:0:13102:13721							
ANR	3970479	FunctionDef	"_get_zval_ptr (int op_type , znode_op node , const zend_execute_data * execute_data , zend_free_op * should_free , int type)"		3970478	0					
ANR	3970480	CompoundStatement		415:0:13252:13721	3970478	0					
ANR	3970481	IfStatement	if ( op_type & ( IS_TMP_VAR | IS_VAR ) )		3970478	0					
ANR	3970482	Condition	op_type & ( IS_TMP_VAR | IS_VAR )	416:5:13259:13287	3970478	0	True				
ANR	3970483	BitAndExpression	op_type & ( IS_TMP_VAR | IS_VAR )		3970478	0		&			
ANR	3970484	Identifier	op_type		3970478	0					
ANR	3970485	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		3970478	1		|			
ANR	3970486	Identifier	IS_TMP_VAR		3970478	0					
ANR	3970487	Identifier	IS_VAR		3970478	1					
ANR	3970488	CompoundStatement		2:36:37:37	3970478	1					
ANR	3970489	IfStatement	if ( op_type == IS_TMP_VAR )		3970478	0					
ANR	3970490	Condition	op_type == IS_TMP_VAR	417:6:13298:13318	3970478	0	True				
ANR	3970491	EqualityExpression	op_type == IS_TMP_VAR		3970478	0		==			
ANR	3970492	Identifier	op_type		3970478	0					
ANR	3970493	Identifier	IS_TMP_VAR		3970478	1					
ANR	3970494	CompoundStatement		3:29:68:68	3970478	1					
ANR	3970495	ReturnStatement	"return _get_zval_ptr_tmp ( node . var , execute_data , should_free ) ;"	418:3:13326:13387	3970478	0	True				
ANR	3970496	CallExpression	"_get_zval_ptr_tmp ( node . var , execute_data , should_free )"		3970478	0					
ANR	3970497	Callee	_get_zval_ptr_tmp		3970478	0					
ANR	3970498	Identifier	_get_zval_ptr_tmp		3970478	0					
ANR	3970499	ArgumentList	node . var		3970478	1					
ANR	3970500	Argument	node . var		3970478	0					
ANR	3970501	MemberAccess	node . var		3970478	0					
ANR	3970502	Identifier	node		3970478	0					
ANR	3970503	Identifier	var		3970478	1					
ANR	3970504	Argument	execute_data		3970478	1					
ANR	3970505	Identifier	execute_data		3970478	0					
ANR	3970506	Argument	should_free		3970478	2					
ANR	3970507	Identifier	should_free		3970478	0					
ANR	3970508	ElseStatement	else		3970478	0					
ANR	3970509	CompoundStatement		5:9:145:145	3970478	0					
ANR	3970510	ExpressionStatement	ZEND_ASSERT ( op_type == IS_VAR )	420:3:13403:13433	3970478	0	True				
ANR	3970511	CallExpression	ZEND_ASSERT ( op_type == IS_VAR )		3970478	0					
ANR	3970512	Callee	ZEND_ASSERT		3970478	0					
ANR	3970513	Identifier	ZEND_ASSERT		3970478	0					
ANR	3970514	ArgumentList	op_type == IS_VAR		3970478	1					
ANR	3970515	Argument	op_type == IS_VAR		3970478	0					
ANR	3970516	EqualityExpression	op_type == IS_VAR		3970478	0		==			
ANR	3970517	Identifier	op_type		3970478	0					
ANR	3970518	Identifier	IS_VAR		3970478	1					
ANR	3970519	ReturnStatement	"return _get_zval_ptr_var ( node . var , execute_data , should_free ) ;"	421:3:13438:13499	3970478	1	True				
ANR	3970520	CallExpression	"_get_zval_ptr_var ( node . var , execute_data , should_free )"		3970478	0					
ANR	3970521	Callee	_get_zval_ptr_var		3970478	0					
ANR	3970522	Identifier	_get_zval_ptr_var		3970478	0					
ANR	3970523	ArgumentList	node . var		3970478	1					
ANR	3970524	Argument	node . var		3970478	0					
ANR	3970525	MemberAccess	node . var		3970478	0					
ANR	3970526	Identifier	node		3970478	0					
ANR	3970527	Identifier	var		3970478	1					
ANR	3970528	Argument	execute_data		3970478	1					
ANR	3970529	Identifier	execute_data		3970478	0					
ANR	3970530	Argument	should_free		3970478	2					
ANR	3970531	Identifier	should_free		3970478	0					
ANR	3970532	ElseStatement	else		3970478	0					
ANR	3970533	CompoundStatement		9:8:260:260	3970478	0					
ANR	3970534	ExpressionStatement	* should_free = NULL	424:2:13517:13536	3970478	0	True				
ANR	3970535	AssignmentExpression	* should_free = NULL		3970478	0		=			
ANR	3970536	UnaryOperationExpression	* should_free		3970478	0					
ANR	3970537	UnaryOperator	*		3970478	0					
ANR	3970538	Identifier	should_free		3970478	1					
ANR	3970539	Identifier	NULL		3970478	1					
ANR	3970540	IfStatement	if ( op_type == IS_CONST )		3970478	1					
ANR	3970541	Condition	op_type == IS_CONST	425:6:13544:13562	3970478	0	True				
ANR	3970542	EqualityExpression	op_type == IS_CONST		3970478	0		==			
ANR	3970543	Identifier	op_type		3970478	0					
ANR	3970544	Identifier	IS_CONST		3970478	1					
ANR	3970545	CompoundStatement		11:27:312:312	3970478	1					
ANR	3970546	ReturnStatement	return EX_CONSTANT ( node ) ;	426:3:13570:13594	3970478	0	True				
ANR	3970547	CallExpression	EX_CONSTANT ( node )		3970478	0					
ANR	3970548	Callee	EX_CONSTANT		3970478	0					
ANR	3970549	Identifier	EX_CONSTANT		3970478	0					
ANR	3970550	ArgumentList	node		3970478	1					
ANR	3970551	Argument	node		3970478	0					
ANR	3970552	Identifier	node		3970478	0					
ANR	3970553	ElseStatement	else		3970478	0					
ANR	3970554	IfStatement	if ( op_type == IS_CV )		3970478	0					
ANR	3970555	Condition	op_type == IS_CV	427:13:13609:13624	3970478	0	True				
ANR	3970556	EqualityExpression	op_type == IS_CV		3970478	0		==			
ANR	3970557	Identifier	op_type		3970478	0					
ANR	3970558	Identifier	IS_CV		3970478	1					
ANR	3970559	CompoundStatement		13:31:374:374	3970478	1					
ANR	3970560	ReturnStatement	"return _get_zval_ptr_cv ( execute_data , node . var , type ) ;"	428:3:13632:13685	3970478	0	True				
ANR	3970561	CallExpression	"_get_zval_ptr_cv ( execute_data , node . var , type )"		3970478	0					
ANR	3970562	Callee	_get_zval_ptr_cv		3970478	0					
ANR	3970563	Identifier	_get_zval_ptr_cv		3970478	0					
ANR	3970564	ArgumentList	execute_data		3970478	1					
ANR	3970565	Argument	execute_data		3970478	0					
ANR	3970566	Identifier	execute_data		3970478	0					
ANR	3970567	Argument	node . var		3970478	1					
ANR	3970568	MemberAccess	node . var		3970478	0					
ANR	3970569	Identifier	node		3970478	0					
ANR	3970570	Identifier	var		3970478	1					
ANR	3970571	Argument	type		3970478	2					
ANR	3970572	Identifier	type		3970478	0					
ANR	3970573	ElseStatement	else		3970478	0					
ANR	3970574	CompoundStatement		15:9:443:443	3970478	0					
ANR	3970575	ReturnStatement	return NULL ;	430:3:13701:13712	3970478	0	True				
ANR	3970576	Identifier	NULL		3970478	0					
ANR	3970577	ReturnType	static zend_always_inline zval *		3970478	1					
ANR	3970578	Identifier	_get_zval_ptr		3970478	2					
ANR	3970579	ParameterList	"int op_type , znode_op node , const zend_execute_data * execute_data , zend_free_op * should_free , int type"		3970478	3					
ANR	3970580	Parameter	int op_type	414:46:13148:13158	3970478	0	True				
ANR	3970581	ParameterType	int		3970478	0					
ANR	3970582	Identifier	op_type		3970478	1					
ANR	3970583	Parameter	znode_op node	414:59:13161:13173	3970478	1	True				
ANR	3970584	ParameterType	znode_op		3970478	0					
ANR	3970585	Identifier	node		3970478	1					
ANR	3970586	Parameter	const zend_execute_data * execute_data	414:74:13176:13212	3970478	2	True				
ANR	3970587	ParameterType	const zend_execute_data *		3970478	0					
ANR	3970588	Identifier	execute_data		3970478	1					
ANR	3970589	Parameter	zend_free_op * should_free	414:113:13215:13239	3970478	3	True				
ANR	3970590	ParameterType	zend_free_op *		3970478	0					
ANR	3970591	Identifier	should_free		3970478	1					
ANR	3970592	Parameter	int type	414:140:13242:13249	3970478	4	True				
ANR	3970593	ParameterType	int		3970478	0					
ANR	3970594	Identifier	type		3970478	1					
ANR	3970595	CFGEntryNode	ENTRY		3970478		True				
ANR	3970596	CFGExitNode	EXIT		3970478		True				
ANR	3970597	Symbol	should_free		3970478						
ANR	3970598	Symbol	IS_CONST		3970478						
ANR	3970599	Symbol	NULL		3970478						
ANR	3970600	Symbol	IS_CV		3970478						
ANR	3970601	Symbol	EX_CONSTANT		3970478						
ANR	3970602	Symbol	_get_zval_ptr_tmp		3970478						
ANR	3970603	Symbol	_get_zval_ptr_cv		3970478						
ANR	3970604	Symbol	type		3970478						
ANR	3970605	Symbol	execute_data		3970478						
ANR	3970606	Symbol	node . var		3970478						
ANR	3970607	Symbol	* should_free		3970478						
ANR	3970608	Symbol	node		3970478						
ANR	3970609	Symbol	_get_zval_ptr_var		3970478						
ANR	3970610	Symbol	op_type		3970478						
ANR	3970611	Symbol	IS_VAR		3970478						
ANR	3970612	Symbol	IS_TMP_VAR		3970478						
ANR	3970613	Function	_get_zval_ptr_r	435:0:13724:14338							
ANR	3970614	FunctionDef	"_get_zval_ptr_r (int op_type , znode_op node , const zend_execute_data * execute_data , zend_free_op * should_free)"		3970613	0					
ANR	3970615	CompoundStatement		436:0:13866:14338	3970613	0					
ANR	3970616	IfStatement	if ( op_type & ( IS_TMP_VAR | IS_VAR ) )		3970613	0					
ANR	3970617	Condition	op_type & ( IS_TMP_VAR | IS_VAR )	437:5:13873:13901	3970613	0	True				
ANR	3970618	BitAndExpression	op_type & ( IS_TMP_VAR | IS_VAR )		3970613	0		&			
ANR	3970619	Identifier	op_type		3970613	0					
ANR	3970620	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		3970613	1		|			
ANR	3970621	Identifier	IS_TMP_VAR		3970613	0					
ANR	3970622	Identifier	IS_VAR		3970613	1					
ANR	3970623	CompoundStatement		2:36:37:37	3970613	1					
ANR	3970624	IfStatement	if ( op_type == IS_TMP_VAR )		3970613	0					
ANR	3970625	Condition	op_type == IS_TMP_VAR	438:6:13912:13932	3970613	0	True				
ANR	3970626	EqualityExpression	op_type == IS_TMP_VAR		3970613	0		==			
ANR	3970627	Identifier	op_type		3970613	0					
ANR	3970628	Identifier	IS_TMP_VAR		3970613	1					
ANR	3970629	CompoundStatement		3:29:68:68	3970613	1					
ANR	3970630	ReturnStatement	"return _get_zval_ptr_tmp ( node . var , execute_data , should_free ) ;"	439:3:13940:14001	3970613	0	True				
ANR	3970631	CallExpression	"_get_zval_ptr_tmp ( node . var , execute_data , should_free )"		3970613	0					
ANR	3970632	Callee	_get_zval_ptr_tmp		3970613	0					
ANR	3970633	Identifier	_get_zval_ptr_tmp		3970613	0					
ANR	3970634	ArgumentList	node . var		3970613	1					
ANR	3970635	Argument	node . var		3970613	0					
ANR	3970636	MemberAccess	node . var		3970613	0					
ANR	3970637	Identifier	node		3970613	0					
ANR	3970638	Identifier	var		3970613	1					
ANR	3970639	Argument	execute_data		3970613	1					
ANR	3970640	Identifier	execute_data		3970613	0					
ANR	3970641	Argument	should_free		3970613	2					
ANR	3970642	Identifier	should_free		3970613	0					
ANR	3970643	ElseStatement	else		3970613	0					
ANR	3970644	CompoundStatement		5:9:145:145	3970613	0					
ANR	3970645	ExpressionStatement	ZEND_ASSERT ( op_type == IS_VAR )	441:3:14017:14047	3970613	0	True				
ANR	3970646	CallExpression	ZEND_ASSERT ( op_type == IS_VAR )		3970613	0					
ANR	3970647	Callee	ZEND_ASSERT		3970613	0					
ANR	3970648	Identifier	ZEND_ASSERT		3970613	0					
ANR	3970649	ArgumentList	op_type == IS_VAR		3970613	1					
ANR	3970650	Argument	op_type == IS_VAR		3970613	0					
ANR	3970651	EqualityExpression	op_type == IS_VAR		3970613	0		==			
ANR	3970652	Identifier	op_type		3970613	0					
ANR	3970653	Identifier	IS_VAR		3970613	1					
ANR	3970654	ReturnStatement	"return _get_zval_ptr_var ( node . var , execute_data , should_free ) ;"	442:3:14052:14113	3970613	1	True				
ANR	3970655	CallExpression	"_get_zval_ptr_var ( node . var , execute_data , should_free )"		3970613	0					
ANR	3970656	Callee	_get_zval_ptr_var		3970613	0					
ANR	3970657	Identifier	_get_zval_ptr_var		3970613	0					
ANR	3970658	ArgumentList	node . var		3970613	1					
ANR	3970659	Argument	node . var		3970613	0					
ANR	3970660	MemberAccess	node . var		3970613	0					
ANR	3970661	Identifier	node		3970613	0					
ANR	3970662	Identifier	var		3970613	1					
ANR	3970663	Argument	execute_data		3970613	1					
ANR	3970664	Identifier	execute_data		3970613	0					
ANR	3970665	Argument	should_free		3970613	2					
ANR	3970666	Identifier	should_free		3970613	0					
ANR	3970667	ElseStatement	else		3970613	0					
ANR	3970668	CompoundStatement		9:8:260:260	3970613	0					
ANR	3970669	ExpressionStatement	* should_free = NULL	445:2:14131:14150	3970613	0	True				
ANR	3970670	AssignmentExpression	* should_free = NULL		3970613	0		=			
ANR	3970671	UnaryOperationExpression	* should_free		3970613	0					
ANR	3970672	UnaryOperator	*		3970613	0					
ANR	3970673	Identifier	should_free		3970613	1					
ANR	3970674	Identifier	NULL		3970613	1					
ANR	3970675	IfStatement	if ( op_type == IS_CONST )		3970613	1					
ANR	3970676	Condition	op_type == IS_CONST	446:6:14158:14176	3970613	0	True				
ANR	3970677	EqualityExpression	op_type == IS_CONST		3970613	0		==			
ANR	3970678	Identifier	op_type		3970613	0					
ANR	3970679	Identifier	IS_CONST		3970613	1					
ANR	3970680	CompoundStatement		11:27:312:312	3970613	1					
ANR	3970681	ReturnStatement	return EX_CONSTANT ( node ) ;	447:3:14184:14208	3970613	0	True				
ANR	3970682	CallExpression	EX_CONSTANT ( node )		3970613	0					
ANR	3970683	Callee	EX_CONSTANT		3970613	0					
ANR	3970684	Identifier	EX_CONSTANT		3970613	0					
ANR	3970685	ArgumentList	node		3970613	1					
ANR	3970686	Argument	node		3970613	0					
ANR	3970687	Identifier	node		3970613	0					
ANR	3970688	ElseStatement	else		3970613	0					
ANR	3970689	IfStatement	if ( op_type == IS_CV )		3970613	0					
ANR	3970690	Condition	op_type == IS_CV	448:13:14223:14238	3970613	0	True				
ANR	3970691	EqualityExpression	op_type == IS_CV		3970613	0		==			
ANR	3970692	Identifier	op_type		3970613	0					
ANR	3970693	Identifier	IS_CV		3970613	1					
ANR	3970694	CompoundStatement		13:31:374:374	3970613	1					
ANR	3970695	ReturnStatement	"return _get_zval_ptr_cv_BP_VAR_R ( execute_data , node . var ) ;"	449:3:14246:14302	3970613	0	True				
ANR	3970696	CallExpression	"_get_zval_ptr_cv_BP_VAR_R ( execute_data , node . var )"		3970613	0					
ANR	3970697	Callee	_get_zval_ptr_cv_BP_VAR_R		3970613	0					
ANR	3970698	Identifier	_get_zval_ptr_cv_BP_VAR_R		3970613	0					
ANR	3970699	ArgumentList	execute_data		3970613	1					
ANR	3970700	Argument	execute_data		3970613	0					
ANR	3970701	Identifier	execute_data		3970613	0					
ANR	3970702	Argument	node . var		3970613	1					
ANR	3970703	MemberAccess	node . var		3970613	0					
ANR	3970704	Identifier	node		3970613	0					
ANR	3970705	Identifier	var		3970613	1					
ANR	3970706	ElseStatement	else		3970613	0					
ANR	3970707	CompoundStatement		15:9:446:446	3970613	0					
ANR	3970708	ReturnStatement	return NULL ;	451:3:14318:14329	3970613	0	True				
ANR	3970709	Identifier	NULL		3970613	0					
ANR	3970710	ReturnType	static zend_always_inline zval *		3970613	1					
ANR	3970711	Identifier	_get_zval_ptr_r		3970613	2					
ANR	3970712	ParameterList	"int op_type , znode_op node , const zend_execute_data * execute_data , zend_free_op * should_free"		3970613	3					
ANR	3970713	Parameter	int op_type	435:48:13772:13782	3970613	0	True				
ANR	3970714	ParameterType	int		3970613	0					
ANR	3970715	Identifier	op_type		3970613	1					
ANR	3970716	Parameter	znode_op node	435:61:13785:13797	3970613	1	True				
ANR	3970717	ParameterType	znode_op		3970613	0					
ANR	3970718	Identifier	node		3970613	1					
ANR	3970719	Parameter	const zend_execute_data * execute_data	435:76:13800:13836	3970613	2	True				
ANR	3970720	ParameterType	const zend_execute_data *		3970613	0					
ANR	3970721	Identifier	execute_data		3970613	1					
ANR	3970722	Parameter	zend_free_op * should_free	435:115:13839:13863	3970613	3	True				
ANR	3970723	ParameterType	zend_free_op *		3970613	0					
ANR	3970724	Identifier	should_free		3970613	1					
ANR	3970725	CFGEntryNode	ENTRY		3970613		True				
ANR	3970726	CFGExitNode	EXIT		3970613		True				
ANR	3970727	Symbol	should_free		3970613						
ANR	3970728	Symbol	IS_CONST		3970613						
ANR	3970729	Symbol	NULL		3970613						
ANR	3970730	Symbol	IS_CV		3970613						
ANR	3970731	Symbol	EX_CONSTANT		3970613						
ANR	3970732	Symbol	_get_zval_ptr_tmp		3970613						
ANR	3970733	Symbol	_get_zval_ptr_cv_BP_VAR_R		3970613						
ANR	3970734	Symbol	execute_data		3970613						
ANR	3970735	Symbol	node . var		3970613						
ANR	3970736	Symbol	* should_free		3970613						
ANR	3970737	Symbol	node		3970613						
ANR	3970738	Symbol	_get_zval_ptr_var		3970613						
ANR	3970739	Symbol	op_type		3970613						
ANR	3970740	Symbol	IS_VAR		3970613						
ANR	3970741	Symbol	IS_TMP_VAR		3970613						
ANR	3970742	Function	_get_zval_ptr_deref	456:0:14341:14978							
ANR	3970743	FunctionDef	"_get_zval_ptr_deref (int op_type , znode_op node , const zend_execute_data * execute_data , zend_free_op * should_free , int type)"		3970742	0					
ANR	3970744	CompoundStatement		457:0:14497:14978	3970742	0					
ANR	3970745	IfStatement	if ( op_type & ( IS_TMP_VAR | IS_VAR ) )		3970742	0					
ANR	3970746	Condition	op_type & ( IS_TMP_VAR | IS_VAR )	458:5:14504:14532	3970742	0	True				
ANR	3970747	BitAndExpression	op_type & ( IS_TMP_VAR | IS_VAR )		3970742	0		&			
ANR	3970748	Identifier	op_type		3970742	0					
ANR	3970749	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		3970742	1		|			
ANR	3970750	Identifier	IS_TMP_VAR		3970742	0					
ANR	3970751	Identifier	IS_VAR		3970742	1					
ANR	3970752	CompoundStatement		2:36:37:37	3970742	1					
ANR	3970753	IfStatement	if ( op_type == IS_TMP_VAR )		3970742	0					
ANR	3970754	Condition	op_type == IS_TMP_VAR	459:6:14543:14563	3970742	0	True				
ANR	3970755	EqualityExpression	op_type == IS_TMP_VAR		3970742	0		==			
ANR	3970756	Identifier	op_type		3970742	0					
ANR	3970757	Identifier	IS_TMP_VAR		3970742	1					
ANR	3970758	CompoundStatement		3:29:68:68	3970742	1					
ANR	3970759	ReturnStatement	"return _get_zval_ptr_tmp ( node . var , execute_data , should_free ) ;"	460:3:14571:14632	3970742	0	True				
ANR	3970760	CallExpression	"_get_zval_ptr_tmp ( node . var , execute_data , should_free )"		3970742	0					
ANR	3970761	Callee	_get_zval_ptr_tmp		3970742	0					
ANR	3970762	Identifier	_get_zval_ptr_tmp		3970742	0					
ANR	3970763	ArgumentList	node . var		3970742	1					
ANR	3970764	Argument	node . var		3970742	0					
ANR	3970765	MemberAccess	node . var		3970742	0					
ANR	3970766	Identifier	node		3970742	0					
ANR	3970767	Identifier	var		3970742	1					
ANR	3970768	Argument	execute_data		3970742	1					
ANR	3970769	Identifier	execute_data		3970742	0					
ANR	3970770	Argument	should_free		3970742	2					
ANR	3970771	Identifier	should_free		3970742	0					
ANR	3970772	ElseStatement	else		3970742	0					
ANR	3970773	CompoundStatement		5:9:145:145	3970742	0					
ANR	3970774	ExpressionStatement	ZEND_ASSERT ( op_type == IS_VAR )	462:3:14648:14678	3970742	0	True				
ANR	3970775	CallExpression	ZEND_ASSERT ( op_type == IS_VAR )		3970742	0					
ANR	3970776	Callee	ZEND_ASSERT		3970742	0					
ANR	3970777	Identifier	ZEND_ASSERT		3970742	0					
ANR	3970778	ArgumentList	op_type == IS_VAR		3970742	1					
ANR	3970779	Argument	op_type == IS_VAR		3970742	0					
ANR	3970780	EqualityExpression	op_type == IS_VAR		3970742	0		==			
ANR	3970781	Identifier	op_type		3970742	0					
ANR	3970782	Identifier	IS_VAR		3970742	1					
ANR	3970783	ReturnStatement	"return _get_zval_ptr_var_deref ( node . var , execute_data , should_free ) ;"	463:3:14683:14750	3970742	1	True				
ANR	3970784	CallExpression	"_get_zval_ptr_var_deref ( node . var , execute_data , should_free )"		3970742	0					
ANR	3970785	Callee	_get_zval_ptr_var_deref		3970742	0					
ANR	3970786	Identifier	_get_zval_ptr_var_deref		3970742	0					
ANR	3970787	ArgumentList	node . var		3970742	1					
ANR	3970788	Argument	node . var		3970742	0					
ANR	3970789	MemberAccess	node . var		3970742	0					
ANR	3970790	Identifier	node		3970742	0					
ANR	3970791	Identifier	var		3970742	1					
ANR	3970792	Argument	execute_data		3970742	1					
ANR	3970793	Identifier	execute_data		3970742	0					
ANR	3970794	Argument	should_free		3970742	2					
ANR	3970795	Identifier	should_free		3970742	0					
ANR	3970796	ElseStatement	else		3970742	0					
ANR	3970797	CompoundStatement		9:8:266:266	3970742	0					
ANR	3970798	ExpressionStatement	* should_free = NULL	466:2:14768:14787	3970742	0	True				
ANR	3970799	AssignmentExpression	* should_free = NULL		3970742	0		=			
ANR	3970800	UnaryOperationExpression	* should_free		3970742	0					
ANR	3970801	UnaryOperator	*		3970742	0					
ANR	3970802	Identifier	should_free		3970742	1					
ANR	3970803	Identifier	NULL		3970742	1					
ANR	3970804	IfStatement	if ( op_type == IS_CONST )		3970742	1					
ANR	3970805	Condition	op_type == IS_CONST	467:6:14795:14813	3970742	0	True				
ANR	3970806	EqualityExpression	op_type == IS_CONST		3970742	0		==			
ANR	3970807	Identifier	op_type		3970742	0					
ANR	3970808	Identifier	IS_CONST		3970742	1					
ANR	3970809	CompoundStatement		11:27:318:318	3970742	1					
ANR	3970810	ReturnStatement	return EX_CONSTANT ( node ) ;	468:3:14821:14845	3970742	0	True				
ANR	3970811	CallExpression	EX_CONSTANT ( node )		3970742	0					
ANR	3970812	Callee	EX_CONSTANT		3970742	0					
ANR	3970813	Identifier	EX_CONSTANT		3970742	0					
ANR	3970814	ArgumentList	node		3970742	1					
ANR	3970815	Argument	node		3970742	0					
ANR	3970816	Identifier	node		3970742	0					
ANR	3970817	ElseStatement	else		3970742	0					
ANR	3970818	IfStatement	if ( op_type == IS_CV )		3970742	0					
ANR	3970819	Condition	op_type == IS_CV	469:13:14860:14875	3970742	0	True				
ANR	3970820	EqualityExpression	op_type == IS_CV		3970742	0		==			
ANR	3970821	Identifier	op_type		3970742	0					
ANR	3970822	Identifier	IS_CV		3970742	1					
ANR	3970823	CompoundStatement		13:31:380:380	3970742	1					
ANR	3970824	ReturnStatement	"return _get_zval_ptr_cv_deref ( execute_data , node . var , type ) ;"	470:3:14883:14942	3970742	0	True				
ANR	3970825	CallExpression	"_get_zval_ptr_cv_deref ( execute_data , node . var , type )"		3970742	0					
ANR	3970826	Callee	_get_zval_ptr_cv_deref		3970742	0					
ANR	3970827	Identifier	_get_zval_ptr_cv_deref		3970742	0					
ANR	3970828	ArgumentList	execute_data		3970742	1					
ANR	3970829	Argument	execute_data		3970742	0					
ANR	3970830	Identifier	execute_data		3970742	0					
ANR	3970831	Argument	node . var		3970742	1					
ANR	3970832	MemberAccess	node . var		3970742	0					
ANR	3970833	Identifier	node		3970742	0					
ANR	3970834	Identifier	var		3970742	1					
ANR	3970835	Argument	type		3970742	2					
ANR	3970836	Identifier	type		3970742	0					
ANR	3970837	ElseStatement	else		3970742	0					
ANR	3970838	CompoundStatement		15:9:455:455	3970742	0					
ANR	3970839	ReturnStatement	return NULL ;	472:3:14958:14969	3970742	0	True				
ANR	3970840	Identifier	NULL		3970742	0					
ANR	3970841	ReturnType	static zend_always_inline zval *		3970742	1					
ANR	3970842	Identifier	_get_zval_ptr_deref		3970742	2					
ANR	3970843	ParameterList	"int op_type , znode_op node , const zend_execute_data * execute_data , zend_free_op * should_free , int type"		3970742	3					
ANR	3970844	Parameter	int op_type	456:52:14393:14403	3970742	0	True				
ANR	3970845	ParameterType	int		3970742	0					
ANR	3970846	Identifier	op_type		3970742	1					
ANR	3970847	Parameter	znode_op node	456:65:14406:14418	3970742	1	True				
ANR	3970848	ParameterType	znode_op		3970742	0					
ANR	3970849	Identifier	node		3970742	1					
ANR	3970850	Parameter	const zend_execute_data * execute_data	456:80:14421:14457	3970742	2	True				
ANR	3970851	ParameterType	const zend_execute_data *		3970742	0					
ANR	3970852	Identifier	execute_data		3970742	1					
ANR	3970853	Parameter	zend_free_op * should_free	456:119:14460:14484	3970742	3	True				
ANR	3970854	ParameterType	zend_free_op *		3970742	0					
ANR	3970855	Identifier	should_free		3970742	1					
ANR	3970856	Parameter	int type	456:146:14487:14494	3970742	4	True				
ANR	3970857	ParameterType	int		3970742	0					
ANR	3970858	Identifier	type		3970742	1					
ANR	3970859	CFGEntryNode	ENTRY		3970742		True				
ANR	3970860	CFGExitNode	EXIT		3970742		True				
ANR	3970861	Symbol	should_free		3970742						
ANR	3970862	Symbol	IS_CONST		3970742						
ANR	3970863	Symbol	NULL		3970742						
ANR	3970864	Symbol	IS_CV		3970742						
ANR	3970865	Symbol	EX_CONSTANT		3970742						
ANR	3970866	Symbol	_get_zval_ptr_tmp		3970742						
ANR	3970867	Symbol	type		3970742						
ANR	3970868	Symbol	execute_data		3970742						
ANR	3970869	Symbol	node . var		3970742						
ANR	3970870	Symbol	* should_free		3970742						
ANR	3970871	Symbol	node		3970742						
ANR	3970872	Symbol	_get_zval_ptr_cv_deref		3970742						
ANR	3970873	Symbol	_get_zval_ptr_var_deref		3970742						
ANR	3970874	Symbol	op_type		3970742						
ANR	3970875	Symbol	IS_VAR		3970742						
ANR	3970876	Symbol	IS_TMP_VAR		3970742						
ANR	3970877	Function	_get_zval_ptr_r_deref	477:0:14981:15613							
ANR	3970878	FunctionDef	"_get_zval_ptr_r_deref (int op_type , znode_op node , const zend_execute_data * execute_data , zend_free_op * should_free)"		3970877	0					
ANR	3970879	CompoundStatement		478:0:15129:15613	3970877	0					
ANR	3970880	IfStatement	if ( op_type & ( IS_TMP_VAR | IS_VAR ) )		3970877	0					
ANR	3970881	Condition	op_type & ( IS_TMP_VAR | IS_VAR )	479:5:15136:15164	3970877	0	True				
ANR	3970882	BitAndExpression	op_type & ( IS_TMP_VAR | IS_VAR )		3970877	0		&			
ANR	3970883	Identifier	op_type		3970877	0					
ANR	3970884	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		3970877	1		|			
ANR	3970885	Identifier	IS_TMP_VAR		3970877	0					
ANR	3970886	Identifier	IS_VAR		3970877	1					
ANR	3970887	CompoundStatement		2:36:37:37	3970877	1					
ANR	3970888	IfStatement	if ( op_type == IS_TMP_VAR )		3970877	0					
ANR	3970889	Condition	op_type == IS_TMP_VAR	480:6:15175:15195	3970877	0	True				
ANR	3970890	EqualityExpression	op_type == IS_TMP_VAR		3970877	0		==			
ANR	3970891	Identifier	op_type		3970877	0					
ANR	3970892	Identifier	IS_TMP_VAR		3970877	1					
ANR	3970893	CompoundStatement		3:29:68:68	3970877	1					
ANR	3970894	ReturnStatement	"return _get_zval_ptr_tmp ( node . var , execute_data , should_free ) ;"	481:3:15203:15264	3970877	0	True				
ANR	3970895	CallExpression	"_get_zval_ptr_tmp ( node . var , execute_data , should_free )"		3970877	0					
ANR	3970896	Callee	_get_zval_ptr_tmp		3970877	0					
ANR	3970897	Identifier	_get_zval_ptr_tmp		3970877	0					
ANR	3970898	ArgumentList	node . var		3970877	1					
ANR	3970899	Argument	node . var		3970877	0					
ANR	3970900	MemberAccess	node . var		3970877	0					
ANR	3970901	Identifier	node		3970877	0					
ANR	3970902	Identifier	var		3970877	1					
ANR	3970903	Argument	execute_data		3970877	1					
ANR	3970904	Identifier	execute_data		3970877	0					
ANR	3970905	Argument	should_free		3970877	2					
ANR	3970906	Identifier	should_free		3970877	0					
ANR	3970907	ElseStatement	else		3970877	0					
ANR	3970908	CompoundStatement		5:9:145:145	3970877	0					
ANR	3970909	ExpressionStatement	ZEND_ASSERT ( op_type == IS_VAR )	483:3:15280:15310	3970877	0	True				
ANR	3970910	CallExpression	ZEND_ASSERT ( op_type == IS_VAR )		3970877	0					
ANR	3970911	Callee	ZEND_ASSERT		3970877	0					
ANR	3970912	Identifier	ZEND_ASSERT		3970877	0					
ANR	3970913	ArgumentList	op_type == IS_VAR		3970877	1					
ANR	3970914	Argument	op_type == IS_VAR		3970877	0					
ANR	3970915	EqualityExpression	op_type == IS_VAR		3970877	0		==			
ANR	3970916	Identifier	op_type		3970877	0					
ANR	3970917	Identifier	IS_VAR		3970877	1					
ANR	3970918	ReturnStatement	"return _get_zval_ptr_var_deref ( node . var , execute_data , should_free ) ;"	484:3:15315:15382	3970877	1	True				
ANR	3970919	CallExpression	"_get_zval_ptr_var_deref ( node . var , execute_data , should_free )"		3970877	0					
ANR	3970920	Callee	_get_zval_ptr_var_deref		3970877	0					
ANR	3970921	Identifier	_get_zval_ptr_var_deref		3970877	0					
ANR	3970922	ArgumentList	node . var		3970877	1					
ANR	3970923	Argument	node . var		3970877	0					
ANR	3970924	MemberAccess	node . var		3970877	0					
ANR	3970925	Identifier	node		3970877	0					
ANR	3970926	Identifier	var		3970877	1					
ANR	3970927	Argument	execute_data		3970877	1					
ANR	3970928	Identifier	execute_data		3970877	0					
ANR	3970929	Argument	should_free		3970877	2					
ANR	3970930	Identifier	should_free		3970877	0					
ANR	3970931	ElseStatement	else		3970877	0					
ANR	3970932	CompoundStatement		9:8:266:266	3970877	0					
ANR	3970933	ExpressionStatement	* should_free = NULL	487:2:15400:15419	3970877	0	True				
ANR	3970934	AssignmentExpression	* should_free = NULL		3970877	0		=			
ANR	3970935	UnaryOperationExpression	* should_free		3970877	0					
ANR	3970936	UnaryOperator	*		3970877	0					
ANR	3970937	Identifier	should_free		3970877	1					
ANR	3970938	Identifier	NULL		3970877	1					
ANR	3970939	IfStatement	if ( op_type == IS_CONST )		3970877	1					
ANR	3970940	Condition	op_type == IS_CONST	488:6:15427:15445	3970877	0	True				
ANR	3970941	EqualityExpression	op_type == IS_CONST		3970877	0		==			
ANR	3970942	Identifier	op_type		3970877	0					
ANR	3970943	Identifier	IS_CONST		3970877	1					
ANR	3970944	CompoundStatement		11:27:318:318	3970877	1					
ANR	3970945	ReturnStatement	return EX_CONSTANT ( node ) ;	489:3:15453:15477	3970877	0	True				
ANR	3970946	CallExpression	EX_CONSTANT ( node )		3970877	0					
ANR	3970947	Callee	EX_CONSTANT		3970877	0					
ANR	3970948	Identifier	EX_CONSTANT		3970877	0					
ANR	3970949	ArgumentList	node		3970877	1					
ANR	3970950	Argument	node		3970877	0					
ANR	3970951	Identifier	node		3970877	0					
ANR	3970952	ElseStatement	else		3970877	0					
ANR	3970953	IfStatement	if ( op_type == IS_CV )		3970877	0					
ANR	3970954	Condition	op_type == IS_CV	490:13:15492:15507	3970877	0	True				
ANR	3970955	EqualityExpression	op_type == IS_CV		3970877	0		==			
ANR	3970956	Identifier	op_type		3970877	0					
ANR	3970957	Identifier	IS_CV		3970877	1					
ANR	3970958	CompoundStatement		13:31:380:380	3970877	1					
ANR	3970959	ReturnStatement	"return _get_zval_ptr_cv_deref_BP_VAR_R ( execute_data , node . var ) ;"	491:3:15515:15577	3970877	0	True				
ANR	3970960	CallExpression	"_get_zval_ptr_cv_deref_BP_VAR_R ( execute_data , node . var )"		3970877	0					
ANR	3970961	Callee	_get_zval_ptr_cv_deref_BP_VAR_R		3970877	0					
ANR	3970962	Identifier	_get_zval_ptr_cv_deref_BP_VAR_R		3970877	0					
ANR	3970963	ArgumentList	execute_data		3970877	1					
ANR	3970964	Argument	execute_data		3970877	0					
ANR	3970965	Identifier	execute_data		3970877	0					
ANR	3970966	Argument	node . var		3970877	1					
ANR	3970967	MemberAccess	node . var		3970877	0					
ANR	3970968	Identifier	node		3970877	0					
ANR	3970969	Identifier	var		3970877	1					
ANR	3970970	ElseStatement	else		3970877	0					
ANR	3970971	CompoundStatement		15:9:458:458	3970877	0					
ANR	3970972	ReturnStatement	return NULL ;	493:3:15593:15604	3970877	0	True				
ANR	3970973	Identifier	NULL		3970877	0					
ANR	3970974	ReturnType	static zend_always_inline zval *		3970877	1					
ANR	3970975	Identifier	_get_zval_ptr_r_deref		3970877	2					
ANR	3970976	ParameterList	"int op_type , znode_op node , const zend_execute_data * execute_data , zend_free_op * should_free"		3970877	3					
ANR	3970977	Parameter	int op_type	477:54:15035:15045	3970877	0	True				
ANR	3970978	ParameterType	int		3970877	0					
ANR	3970979	Identifier	op_type		3970877	1					
ANR	3970980	Parameter	znode_op node	477:67:15048:15060	3970877	1	True				
ANR	3970981	ParameterType	znode_op		3970877	0					
ANR	3970982	Identifier	node		3970877	1					
ANR	3970983	Parameter	const zend_execute_data * execute_data	477:82:15063:15099	3970877	2	True				
ANR	3970984	ParameterType	const zend_execute_data *		3970877	0					
ANR	3970985	Identifier	execute_data		3970877	1					
ANR	3970986	Parameter	zend_free_op * should_free	477:121:15102:15126	3970877	3	True				
ANR	3970987	ParameterType	zend_free_op *		3970877	0					
ANR	3970988	Identifier	should_free		3970877	1					
ANR	3970989	CFGEntryNode	ENTRY		3970877		True				
ANR	3970990	CFGExitNode	EXIT		3970877		True				
ANR	3970991	Symbol	should_free		3970877						
ANR	3970992	Symbol	IS_CONST		3970877						
ANR	3970993	Symbol	NULL		3970877						
ANR	3970994	Symbol	IS_CV		3970877						
ANR	3970995	Symbol	EX_CONSTANT		3970877						
ANR	3970996	Symbol	_get_zval_ptr_tmp		3970877						
ANR	3970997	Symbol	_get_zval_ptr_cv_deref_BP_VAR_R		3970877						
ANR	3970998	Symbol	execute_data		3970877						
ANR	3970999	Symbol	node . var		3970877						
ANR	3971000	Symbol	* should_free		3970877						
ANR	3971001	Symbol	node		3970877						
ANR	3971002	Symbol	_get_zval_ptr_var_deref		3970877						
ANR	3971003	Symbol	op_type		3970877						
ANR	3971004	Symbol	IS_VAR		3970877						
ANR	3971005	Symbol	IS_TMP_VAR		3970877						
ANR	3971006	Function	_get_zval_ptr_undef	498:0:15616:16241							
ANR	3971007	FunctionDef	"_get_zval_ptr_undef (int op_type , znode_op node , const zend_execute_data * execute_data , zend_free_op * should_free , int type)"		3971006	0					
ANR	3971008	CompoundStatement		499:0:15772:16241	3971006	0					
ANR	3971009	IfStatement	if ( op_type & ( IS_TMP_VAR | IS_VAR ) )		3971006	0					
ANR	3971010	Condition	op_type & ( IS_TMP_VAR | IS_VAR )	500:5:15779:15807	3971006	0	True				
ANR	3971011	BitAndExpression	op_type & ( IS_TMP_VAR | IS_VAR )		3971006	0		&			
ANR	3971012	Identifier	op_type		3971006	0					
ANR	3971013	InclusiveOrExpression	IS_TMP_VAR | IS_VAR		3971006	1		|			
ANR	3971014	Identifier	IS_TMP_VAR		3971006	0					
ANR	3971015	Identifier	IS_VAR		3971006	1					
ANR	3971016	CompoundStatement		2:36:37:37	3971006	1					
ANR	3971017	IfStatement	if ( op_type == IS_TMP_VAR )		3971006	0					
ANR	3971018	Condition	op_type == IS_TMP_VAR	501:6:15818:15838	3971006	0	True				
ANR	3971019	EqualityExpression	op_type == IS_TMP_VAR		3971006	0		==			
ANR	3971020	Identifier	op_type		3971006	0					
ANR	3971021	Identifier	IS_TMP_VAR		3971006	1					
ANR	3971022	CompoundStatement		3:29:68:68	3971006	1					
ANR	3971023	ReturnStatement	"return _get_zval_ptr_tmp ( node . var , execute_data , should_free ) ;"	502:3:15846:15907	3971006	0	True				
ANR	3971024	CallExpression	"_get_zval_ptr_tmp ( node . var , execute_data , should_free )"		3971006	0					
ANR	3971025	Callee	_get_zval_ptr_tmp		3971006	0					
ANR	3971026	Identifier	_get_zval_ptr_tmp		3971006	0					
ANR	3971027	ArgumentList	node . var		3971006	1					
ANR	3971028	Argument	node . var		3971006	0					
ANR	3971029	MemberAccess	node . var		3971006	0					
ANR	3971030	Identifier	node		3971006	0					
ANR	3971031	Identifier	var		3971006	1					
ANR	3971032	Argument	execute_data		3971006	1					
ANR	3971033	Identifier	execute_data		3971006	0					
ANR	3971034	Argument	should_free		3971006	2					
ANR	3971035	Identifier	should_free		3971006	0					
ANR	3971036	ElseStatement	else		3971006	0					
ANR	3971037	CompoundStatement		5:9:145:145	3971006	0					
ANR	3971038	ExpressionStatement	ZEND_ASSERT ( op_type == IS_VAR )	504:3:15923:15953	3971006	0	True				
ANR	3971039	CallExpression	ZEND_ASSERT ( op_type == IS_VAR )		3971006	0					
ANR	3971040	Callee	ZEND_ASSERT		3971006	0					
ANR	3971041	Identifier	ZEND_ASSERT		3971006	0					
ANR	3971042	ArgumentList	op_type == IS_VAR		3971006	1					
ANR	3971043	Argument	op_type == IS_VAR		3971006	0					
ANR	3971044	EqualityExpression	op_type == IS_VAR		3971006	0		==			
ANR	3971045	Identifier	op_type		3971006	0					
ANR	3971046	Identifier	IS_VAR		3971006	1					
ANR	3971047	ReturnStatement	"return _get_zval_ptr_var ( node . var , execute_data , should_free ) ;"	505:3:15958:16019	3971006	1	True				
ANR	3971048	CallExpression	"_get_zval_ptr_var ( node . var , execute_data , should_free )"		3971006	0					
ANR	3971049	Callee	_get_zval_ptr_var		3971006	0					
ANR	3971050	Identifier	_get_zval_ptr_var		3971006	0					
ANR	3971051	ArgumentList	node . var		3971006	1					
ANR	3971052	Argument	node . var		3971006	0					
ANR	3971053	MemberAccess	node . var		3971006	0					
ANR	3971054	Identifier	node		3971006	0					
ANR	3971055	Identifier	var		3971006	1					
ANR	3971056	Argument	execute_data		3971006	1					
ANR	3971057	Identifier	execute_data		3971006	0					
ANR	3971058	Argument	should_free		3971006	2					
ANR	3971059	Identifier	should_free		3971006	0					
ANR	3971060	ElseStatement	else		3971006	0					
ANR	3971061	CompoundStatement		9:8:260:260	3971006	0					
ANR	3971062	ExpressionStatement	* should_free = NULL	508:2:16037:16056	3971006	0	True				
ANR	3971063	AssignmentExpression	* should_free = NULL		3971006	0		=			
ANR	3971064	UnaryOperationExpression	* should_free		3971006	0					
ANR	3971065	UnaryOperator	*		3971006	0					
ANR	3971066	Identifier	should_free		3971006	1					
ANR	3971067	Identifier	NULL		3971006	1					
ANR	3971068	IfStatement	if ( op_type == IS_CONST )		3971006	1					
ANR	3971069	Condition	op_type == IS_CONST	509:6:16064:16082	3971006	0	True				
ANR	3971070	EqualityExpression	op_type == IS_CONST		3971006	0		==			
ANR	3971071	Identifier	op_type		3971006	0					
ANR	3971072	Identifier	IS_CONST		3971006	1					
ANR	3971073	CompoundStatement		11:27:312:312	3971006	1					
ANR	3971074	ReturnStatement	return EX_CONSTANT ( node ) ;	510:3:16090:16114	3971006	0	True				
ANR	3971075	CallExpression	EX_CONSTANT ( node )		3971006	0					
ANR	3971076	Callee	EX_CONSTANT		3971006	0					
ANR	3971077	Identifier	EX_CONSTANT		3971006	0					
ANR	3971078	ArgumentList	node		3971006	1					
ANR	3971079	Argument	node		3971006	0					
ANR	3971080	Identifier	node		3971006	0					
ANR	3971081	ElseStatement	else		3971006	0					
ANR	3971082	IfStatement	if ( op_type == IS_CV )		3971006	0					
ANR	3971083	Condition	op_type == IS_CV	511:13:16129:16144	3971006	0	True				
ANR	3971084	EqualityExpression	op_type == IS_CV		3971006	0		==			
ANR	3971085	Identifier	op_type		3971006	0					
ANR	3971086	Identifier	IS_CV		3971006	1					
ANR	3971087	CompoundStatement		13:31:374:374	3971006	1					
ANR	3971088	ReturnStatement	"return _get_zval_ptr_cv_undef ( execute_data , node . var ) ;"	512:3:16152:16205	3971006	0	True				
ANR	3971089	CallExpression	"_get_zval_ptr_cv_undef ( execute_data , node . var )"		3971006	0					
ANR	3971090	Callee	_get_zval_ptr_cv_undef		3971006	0					
ANR	3971091	Identifier	_get_zval_ptr_cv_undef		3971006	0					
ANR	3971092	ArgumentList	execute_data		3971006	1					
ANR	3971093	Argument	execute_data		3971006	0					
ANR	3971094	Identifier	execute_data		3971006	0					
ANR	3971095	Argument	node . var		3971006	1					
ANR	3971096	MemberAccess	node . var		3971006	0					
ANR	3971097	Identifier	node		3971006	0					
ANR	3971098	Identifier	var		3971006	1					
ANR	3971099	ElseStatement	else		3971006	0					
ANR	3971100	CompoundStatement		15:9:443:443	3971006	0					
ANR	3971101	ReturnStatement	return NULL ;	514:3:16221:16232	3971006	0	True				
ANR	3971102	Identifier	NULL		3971006	0					
ANR	3971103	ReturnType	static zend_always_inline zval *		3971006	1					
ANR	3971104	Identifier	_get_zval_ptr_undef		3971006	2					
ANR	3971105	ParameterList	"int op_type , znode_op node , const zend_execute_data * execute_data , zend_free_op * should_free , int type"		3971006	3					
ANR	3971106	Parameter	int op_type	498:52:15668:15678	3971006	0	True				
ANR	3971107	ParameterType	int		3971006	0					
ANR	3971108	Identifier	op_type		3971006	1					
ANR	3971109	Parameter	znode_op node	498:65:15681:15693	3971006	1	True				
ANR	3971110	ParameterType	znode_op		3971006	0					
ANR	3971111	Identifier	node		3971006	1					
ANR	3971112	Parameter	const zend_execute_data * execute_data	498:80:15696:15732	3971006	2	True				
ANR	3971113	ParameterType	const zend_execute_data *		3971006	0					
ANR	3971114	Identifier	execute_data		3971006	1					
ANR	3971115	Parameter	zend_free_op * should_free	498:119:15735:15759	3971006	3	True				
ANR	3971116	ParameterType	zend_free_op *		3971006	0					
ANR	3971117	Identifier	should_free		3971006	1					
ANR	3971118	Parameter	int type	498:146:15762:15769	3971006	4	True				
ANR	3971119	ParameterType	int		3971006	0					
ANR	3971120	Identifier	type		3971006	1					
ANR	3971121	CFGEntryNode	ENTRY		3971006		True				
ANR	3971122	CFGExitNode	EXIT		3971006		True				
ANR	3971123	Symbol	should_free		3971006						
ANR	3971124	Symbol	IS_CONST		3971006						
ANR	3971125	Symbol	NULL		3971006						
ANR	3971126	Symbol	IS_CV		3971006						
ANR	3971127	Symbol	EX_CONSTANT		3971006						
ANR	3971128	Symbol	_get_zval_ptr_cv_undef		3971006						
ANR	3971129	Symbol	_get_zval_ptr_tmp		3971006						
ANR	3971130	Symbol	type		3971006						
ANR	3971131	Symbol	execute_data		3971006						
ANR	3971132	Symbol	node . var		3971006						
ANR	3971133	Symbol	* should_free		3971006						
ANR	3971134	Symbol	node		3971006						
ANR	3971135	Symbol	_get_zval_ptr_var		3971006						
ANR	3971136	Symbol	op_type		3971006						
ANR	3971137	Symbol	IS_VAR		3971006						
ANR	3971138	Symbol	IS_TMP_VAR		3971006						
ANR	3971139	Function	_get_zval_ptr_ptr_var	519:0:16244:16552							
ANR	3971140	FunctionDef	"_get_zval_ptr_ptr_var (uint32_t var , const zend_execute_data * execute_data , zend_free_op * should_free)"		3971139	0					
ANR	3971141	CompoundStatement		520:0:16378:16552	3971139	0					
ANR	3971142	IdentifierDeclStatement	zval * ret = EX_VAR ( var ) ;	521:1:16381:16404	3971139	0	True				
ANR	3971143	IdentifierDecl	* ret = EX_VAR ( var )		3971139	0					
ANR	3971144	IdentifierDeclType	zval *		3971139	0					
ANR	3971145	Identifier	ret		3971139	1					
ANR	3971146	AssignmentExpression	* ret = EX_VAR ( var )		3971139	2		=			
ANR	3971147	Identifier	ret		3971139	0					
ANR	3971148	CallExpression	EX_VAR ( var )		3971139	1					
ANR	3971149	Callee	EX_VAR		3971139	0					
ANR	3971150	Identifier	EX_VAR		3971139	0					
ANR	3971151	ArgumentList	var		3971139	1					
ANR	3971152	Argument	var		3971139	0					
ANR	3971153	Identifier	var		3971139	0					
ANR	3971154	IfStatement	if ( EXPECTED ( Z_TYPE_P ( ret ) == IS_INDIRECT ) )		3971139	1					
ANR	3971155	Condition	EXPECTED ( Z_TYPE_P ( ret ) == IS_INDIRECT )	523:5:16412:16449	3971139	0	True				
ANR	3971156	CallExpression	EXPECTED ( Z_TYPE_P ( ret ) == IS_INDIRECT )		3971139	0					
ANR	3971157	Callee	EXPECTED		3971139	0					
ANR	3971158	Identifier	EXPECTED		3971139	0					
ANR	3971159	ArgumentList	Z_TYPE_P ( ret ) == IS_INDIRECT		3971139	1					
ANR	3971160	Argument	Z_TYPE_P ( ret ) == IS_INDIRECT		3971139	0					
ANR	3971161	EqualityExpression	Z_TYPE_P ( ret ) == IS_INDIRECT		3971139	0		==			
ANR	3971162	CallExpression	Z_TYPE_P ( ret )		3971139	0					
ANR	3971163	Callee	Z_TYPE_P		3971139	0					
ANR	3971164	Identifier	Z_TYPE_P		3971139	0					
ANR	3971165	ArgumentList	ret		3971139	1					
ANR	3971166	Argument	ret		3971139	0					
ANR	3971167	Identifier	ret		3971139	0					
ANR	3971168	Identifier	IS_INDIRECT		3971139	1					
ANR	3971169	CompoundStatement		4:45:73:73	3971139	1					
ANR	3971170	ExpressionStatement	* should_free = NULL	524:2:16456:16475	3971139	0	True				
ANR	3971171	AssignmentExpression	* should_free = NULL		3971139	0		=			
ANR	3971172	UnaryOperationExpression	* should_free		3971139	0					
ANR	3971173	UnaryOperator	*		3971139	0					
ANR	3971174	Identifier	should_free		3971139	1					
ANR	3971175	Identifier	NULL		3971139	1					
ANR	3971176	ExpressionStatement	ret = Z_INDIRECT_P ( ret )	525:2:16479:16502	3971139	1	True				
ANR	3971177	AssignmentExpression	ret = Z_INDIRECT_P ( ret )		3971139	0		=			
ANR	3971178	Identifier	ret		3971139	0					
ANR	3971179	CallExpression	Z_INDIRECT_P ( ret )		3971139	1					
ANR	3971180	Callee	Z_INDIRECT_P		3971139	0					
ANR	3971181	Identifier	Z_INDIRECT_P		3971139	0					
ANR	3971182	ArgumentList	ret		3971139	1					
ANR	3971183	Argument	ret		3971139	0					
ANR	3971184	Identifier	ret		3971139	0					
ANR	3971185	ElseStatement	else		3971139	0					
ANR	3971186	CompoundStatement		7:8:133:133	3971139	0					
ANR	3971187	ExpressionStatement	* should_free = ret	527:2:16516:16534	3971139	0	True				
ANR	3971188	AssignmentExpression	* should_free = ret		3971139	0		=			
ANR	3971189	UnaryOperationExpression	* should_free		3971139	0					
ANR	3971190	UnaryOperator	*		3971139	0					
ANR	3971191	Identifier	should_free		3971139	1					
ANR	3971192	Identifier	ret		3971139	1					
ANR	3971193	ReturnStatement	return ret ;	529:1:16540:16550	3971139	2	True				
ANR	3971194	Identifier	ret		3971139	0					
ANR	3971195	ReturnType	static zend_always_inline zval *		3971139	1					
ANR	3971196	Identifier	_get_zval_ptr_ptr_var		3971139	2					
ANR	3971197	ParameterList	"uint32_t var , const zend_execute_data * execute_data , zend_free_op * should_free"		3971139	3					
ANR	3971198	Parameter	uint32_t var	519:54:16298:16309	3971139	0	True				
ANR	3971199	ParameterType	uint32_t		3971139	0					
ANR	3971200	Identifier	var		3971139	1					
ANR	3971201	Parameter	const zend_execute_data * execute_data	519:68:16312:16348	3971139	1	True				
ANR	3971202	ParameterType	const zend_execute_data *		3971139	0					
ANR	3971203	Identifier	execute_data		3971139	1					
ANR	3971204	Parameter	zend_free_op * should_free	519:107:16351:16375	3971139	2	True				
ANR	3971205	ParameterType	zend_free_op *		3971139	0					
ANR	3971206	Identifier	should_free		3971139	1					
ANR	3971207	CFGEntryNode	ENTRY		3971139		True				
ANR	3971208	CFGExitNode	EXIT		3971139		True				
ANR	3971209	Symbol	should_free		3971139						
ANR	3971210	Symbol	ret		3971139						
ANR	3971211	Symbol	NULL		3971139						
ANR	3971212	Symbol	var		3971139						
ANR	3971213	Symbol	EX_VAR		3971139						
ANR	3971214	Symbol	Z_INDIRECT_P		3971139						
ANR	3971215	Symbol	Z_TYPE_P		3971139						
ANR	3971216	Symbol	EXPECTED		3971139						
ANR	3971217	Symbol	execute_data		3971139						
ANR	3971218	Symbol	* should_free		3971139						
ANR	3971219	Symbol	IS_INDIRECT		3971139						
ANR	3971220	Function	_get_zval_ptr_ptr	532:0:16555:16949							
ANR	3971221	FunctionDef	"_get_zval_ptr_ptr (int op_type , znode_op node , const zend_execute_data * execute_data , zend_free_op * should_free , int type)"		3971220	0					
ANR	3971222	CompoundStatement		533:0:16697:16949	3971220	0					
ANR	3971223	IfStatement	if ( op_type == IS_CV )		3971220	0					
ANR	3971224	Condition	op_type == IS_CV	534:5:16704:16719	3971220	0	True				
ANR	3971225	EqualityExpression	op_type == IS_CV		3971220	0		==			
ANR	3971226	Identifier	op_type		3971220	0					
ANR	3971227	Identifier	IS_CV		3971220	1					
ANR	3971228	CompoundStatement		2:23:24:24	3971220	1					
ANR	3971229	ExpressionStatement	* should_free = NULL	535:2:16726:16745	3971220	0	True				
ANR	3971230	AssignmentExpression	* should_free = NULL		3971220	0		=			
ANR	3971231	UnaryOperationExpression	* should_free		3971220	0					
ANR	3971232	UnaryOperator	*		3971220	0					
ANR	3971233	Identifier	should_free		3971220	1					
ANR	3971234	Identifier	NULL		3971220	1					
ANR	3971235	ReturnStatement	"return _get_zval_ptr_cv ( execute_data , node . var , type ) ;"	536:2:16749:16802	3971220	1	True				
ANR	3971236	CallExpression	"_get_zval_ptr_cv ( execute_data , node . var , type )"		3971220	0					
ANR	3971237	Callee	_get_zval_ptr_cv		3971220	0					
ANR	3971238	Identifier	_get_zval_ptr_cv		3971220	0					
ANR	3971239	ArgumentList	execute_data		3971220	1					
ANR	3971240	Argument	execute_data		3971220	0					
ANR	3971241	Identifier	execute_data		3971220	0					
ANR	3971242	Argument	node . var		3971220	1					
ANR	3971243	MemberAccess	node . var		3971220	0					
ANR	3971244	Identifier	node		3971220	0					
ANR	3971245	Identifier	var		3971220	1					
ANR	3971246	Argument	type		3971220	2					
ANR	3971247	Identifier	type		3971220	0					
ANR	3971248	ElseStatement	else		3971220	0					
ANR	3971249	CompoundStatement		5:37:143:143	3971220	0					
ANR	3971250	ExpressionStatement	ZEND_ASSERT ( op_type == IS_VAR )	538:2:16845:16875	3971220	0	True				
ANR	3971251	CallExpression	ZEND_ASSERT ( op_type == IS_VAR )		3971220	0					
ANR	3971252	Callee	ZEND_ASSERT		3971220	0					
ANR	3971253	Identifier	ZEND_ASSERT		3971220	0					
ANR	3971254	ArgumentList	op_type == IS_VAR		3971220	1					
ANR	3971255	Argument	op_type == IS_VAR		3971220	0					
ANR	3971256	EqualityExpression	op_type == IS_VAR		3971220	0		==			
ANR	3971257	Identifier	op_type		3971220	0					
ANR	3971258	Identifier	IS_VAR		3971220	1					
ANR	3971259	ReturnStatement	"return _get_zval_ptr_ptr_var ( node . var , execute_data , should_free ) ;"	539:2:16879:16944	3971220	1	True				
ANR	3971260	CallExpression	"_get_zval_ptr_ptr_var ( node . var , execute_data , should_free )"		3971220	0					
ANR	3971261	Callee	_get_zval_ptr_ptr_var		3971220	0					
ANR	3971262	Identifier	_get_zval_ptr_ptr_var		3971220	0					
ANR	3971263	ArgumentList	node . var		3971220	1					
ANR	3971264	Argument	node . var		3971220	0					
ANR	3971265	MemberAccess	node . var		3971220	0					
ANR	3971266	Identifier	node		3971220	0					
ANR	3971267	Identifier	var		3971220	1					
ANR	3971268	Argument	execute_data		3971220	1					
ANR	3971269	Identifier	execute_data		3971220	0					
ANR	3971270	Argument	should_free		3971220	2					
ANR	3971271	Identifier	should_free		3971220	0					
ANR	3971272	ReturnType	static inline zval *		3971220	1					
ANR	3971273	Identifier	_get_zval_ptr_ptr		3971220	2					
ANR	3971274	ParameterList	"int op_type , znode_op node , const zend_execute_data * execute_data , zend_free_op * should_free , int type"		3971220	3					
ANR	3971275	Parameter	int op_type	532:38:16593:16603	3971220	0	True				
ANR	3971276	ParameterType	int		3971220	0					
ANR	3971277	Identifier	op_type		3971220	1					
ANR	3971278	Parameter	znode_op node	532:51:16606:16618	3971220	1	True				
ANR	3971279	ParameterType	znode_op		3971220	0					
ANR	3971280	Identifier	node		3971220	1					
ANR	3971281	Parameter	const zend_execute_data * execute_data	532:66:16621:16657	3971220	2	True				
ANR	3971282	ParameterType	const zend_execute_data *		3971220	0					
ANR	3971283	Identifier	execute_data		3971220	1					
ANR	3971284	Parameter	zend_free_op * should_free	532:105:16660:16684	3971220	3	True				
ANR	3971285	ParameterType	zend_free_op *		3971220	0					
ANR	3971286	Identifier	should_free		3971220	1					
ANR	3971287	Parameter	int type	532:132:16687:16694	3971220	4	True				
ANR	3971288	ParameterType	int		3971220	0					
ANR	3971289	Identifier	type		3971220	1					
ANR	3971290	CFGEntryNode	ENTRY		3971220		True				
ANR	3971291	CFGExitNode	EXIT		3971220		True				
ANR	3971292	Symbol	should_free		3971220						
ANR	3971293	Symbol	node		3971220						
ANR	3971294	Symbol	IS_CV		3971220						
ANR	3971295	Symbol	NULL		3971220						
ANR	3971296	Symbol	op_type		3971220						
ANR	3971297	Symbol	_get_zval_ptr_cv		3971220						
ANR	3971298	Symbol	_get_zval_ptr_ptr_var		3971220						
ANR	3971299	Symbol	type		3971220						
ANR	3971300	Symbol	IS_VAR		3971220						
ANR	3971301	Symbol	execute_data		3971220						
ANR	3971302	Symbol	* should_free		3971220						
ANR	3971303	Symbol	node . var		3971220						
ANR	3971304	Function	_get_obj_zval_ptr_unused	543:0:16952:17064							
ANR	3971305	FunctionDef	_get_obj_zval_ptr_unused (zend_execute_data * execute_data)		3971304	0					
ANR	3971306	CompoundStatement		544:0:17042:17064	3971304	0					
ANR	3971307	ReturnStatement	return & EX ( This ) ;	545:1:17046:17062	3971304	0	True				
ANR	3971308	UnaryOperationExpression	& EX ( This )		3971304	0					
ANR	3971309	UnaryOperator	&		3971304	0					
ANR	3971310	CallExpression	EX ( This )		3971304	1					
ANR	3971311	Callee	EX		3971304	0					
ANR	3971312	Identifier	EX		3971304	0					
ANR	3971313	ArgumentList	This		3971304	1					
ANR	3971314	Argument	This		3971304	0					
ANR	3971315	Identifier	This		3971304	0					
ANR	3971316	ReturnType	static zend_always_inline zval *		3971304	1					
ANR	3971317	Identifier	_get_obj_zval_ptr_unused		3971304	2					
ANR	3971318	ParameterList	zend_execute_data * execute_data		3971304	3					
ANR	3971319	Parameter	zend_execute_data * execute_data	543:57:17009:17039	3971304	0	True				
ANR	3971320	ParameterType	zend_execute_data *		3971304	0					
ANR	3971321	Identifier	execute_data		3971304	1					
ANR	3971322	CFGEntryNode	ENTRY		3971304		True				
ANR	3971323	CFGExitNode	EXIT		3971304		True				
ANR	3971324	Symbol	This		3971304						
ANR	3971325	Symbol	& EX		3971304						
ANR	3971326	Symbol	execute_data		3971304						
ANR	3971327	Function	_get_obj_zval_ptr	548:0:17067:17346							
ANR	3971328	FunctionDef	"_get_obj_zval_ptr (int op_type , znode_op op , zend_execute_data * execute_data , zend_free_op * should_free , int type)"		3971327	0					
ANR	3971329	CompoundStatement		549:0:17201:17346	3971327	0					
ANR	3971330	IfStatement	if ( op_type == IS_UNUSED )		3971327	0					
ANR	3971331	Condition	op_type == IS_UNUSED	550:5:17208:17227	3971327	0	True				
ANR	3971332	EqualityExpression	op_type == IS_UNUSED		3971327	0		==			
ANR	3971333	Identifier	op_type		3971327	0					
ANR	3971334	Identifier	IS_UNUSED		3971327	1					
ANR	3971335	CompoundStatement		2:27:28:28	3971327	1					
ANR	3971336	ExpressionStatement	* should_free = NULL	551:2:17234:17253	3971327	0	True				
ANR	3971337	AssignmentExpression	* should_free = NULL		3971327	0		=			
ANR	3971338	UnaryOperationExpression	* should_free		3971327	0					
ANR	3971339	UnaryOperator	*		3971327	0					
ANR	3971340	Identifier	should_free		3971327	1					
ANR	3971341	Identifier	NULL		3971327	1					
ANR	3971342	ReturnStatement	return & EX ( This ) ;	552:2:17257:17273	3971327	1	True				
ANR	3971343	UnaryOperationExpression	& EX ( This )		3971327	0					
ANR	3971344	UnaryOperator	&		3971327	0					
ANR	3971345	CallExpression	EX ( This )		3971327	1					
ANR	3971346	Callee	EX		3971327	0					
ANR	3971347	Identifier	EX		3971327	0					
ANR	3971348	ArgumentList	This		3971327	1					
ANR	3971349	Argument	This		3971327	0					
ANR	3971350	Identifier	This		3971327	0					
ANR	3971351	ReturnStatement	"return get_zval_ptr ( op_type , op , execute_data , should_free , type ) ;"	554:1:17279:17344	3971327	1	True				
ANR	3971352	CallExpression	"get_zval_ptr ( op_type , op , execute_data , should_free , type )"		3971327	0					
ANR	3971353	Callee	get_zval_ptr		3971327	0					
ANR	3971354	Identifier	get_zval_ptr		3971327	0					
ANR	3971355	ArgumentList	op_type		3971327	1					
ANR	3971356	Argument	op_type		3971327	0					
ANR	3971357	Identifier	op_type		3971327	0					
ANR	3971358	Argument	op		3971327	1					
ANR	3971359	Identifier	op		3971327	0					
ANR	3971360	Argument	execute_data		3971327	2					
ANR	3971361	Identifier	execute_data		3971327	0					
ANR	3971362	Argument	should_free		3971327	3					
ANR	3971363	Identifier	should_free		3971327	0					
ANR	3971364	Argument	type		3971327	4					
ANR	3971365	Identifier	type		3971327	0					
ANR	3971366	ReturnType	static inline zval *		3971327	1					
ANR	3971367	Identifier	_get_obj_zval_ptr		3971327	2					
ANR	3971368	ParameterList	"int op_type , znode_op op , zend_execute_data * execute_data , zend_free_op * should_free , int type"		3971327	3					
ANR	3971369	Parameter	int op_type	548:38:17105:17115	3971327	0	True				
ANR	3971370	ParameterType	int		3971327	0					
ANR	3971371	Identifier	op_type		3971327	1					
ANR	3971372	Parameter	znode_op op	548:51:17118:17128	3971327	1	True				
ANR	3971373	ParameterType	znode_op		3971327	0					
ANR	3971374	Identifier	op		3971327	1					
ANR	3971375	Parameter	zend_execute_data * execute_data	548:64:17131:17161	3971327	2	True				
ANR	3971376	ParameterType	zend_execute_data *		3971327	0					
ANR	3971377	Identifier	execute_data		3971327	1					
ANR	3971378	Parameter	zend_free_op * should_free	548:97:17164:17188	3971327	3	True				
ANR	3971379	ParameterType	zend_free_op *		3971327	0					
ANR	3971380	Identifier	should_free		3971327	1					
ANR	3971381	Parameter	int type	548:124:17191:17198	3971327	4	True				
ANR	3971382	ParameterType	int		3971327	0					
ANR	3971383	Identifier	type		3971327	1					
ANR	3971384	CFGEntryNode	ENTRY		3971327		True				
ANR	3971385	CFGExitNode	EXIT		3971327		True				
ANR	3971386	Symbol	should_free		3971327						
ANR	3971387	Symbol	op		3971327						
ANR	3971388	Symbol	NULL		3971327						
ANR	3971389	Symbol	This		3971327						
ANR	3971390	Symbol	op_type		3971327						
ANR	3971391	Symbol	get_zval_ptr		3971327						
ANR	3971392	Symbol	type		3971327						
ANR	3971393	Symbol	& EX		3971327						
ANR	3971394	Symbol	execute_data		3971327						
ANR	3971395	Symbol	* should_free		3971327						
ANR	3971396	Symbol	IS_UNUSED		3971327						
ANR	3971397	Function	_get_obj_zval_ptr_undef	557:0:17349:17640							
ANR	3971398	FunctionDef	"_get_obj_zval_ptr_undef (int op_type , znode_op op , zend_execute_data * execute_data , zend_free_op * should_free , int type)"		3971397	0					
ANR	3971399	CompoundStatement		558:0:17489:17640	3971397	0					
ANR	3971400	IfStatement	if ( op_type == IS_UNUSED )		3971397	0					
ANR	3971401	Condition	op_type == IS_UNUSED	559:5:17496:17515	3971397	0	True				
ANR	3971402	EqualityExpression	op_type == IS_UNUSED		3971397	0		==			
ANR	3971403	Identifier	op_type		3971397	0					
ANR	3971404	Identifier	IS_UNUSED		3971397	1					
ANR	3971405	CompoundStatement		2:27:28:28	3971397	1					
ANR	3971406	ExpressionStatement	* should_free = NULL	560:2:17522:17541	3971397	0	True				
ANR	3971407	AssignmentExpression	* should_free = NULL		3971397	0		=			
ANR	3971408	UnaryOperationExpression	* should_free		3971397	0					
ANR	3971409	UnaryOperator	*		3971397	0					
ANR	3971410	Identifier	should_free		3971397	1					
ANR	3971411	Identifier	NULL		3971397	1					
ANR	3971412	ReturnStatement	return & EX ( This ) ;	561:2:17545:17561	3971397	1	True				
ANR	3971413	UnaryOperationExpression	& EX ( This )		3971397	0					
ANR	3971414	UnaryOperator	&		3971397	0					
ANR	3971415	CallExpression	EX ( This )		3971397	1					
ANR	3971416	Callee	EX		3971397	0					
ANR	3971417	Identifier	EX		3971397	0					
ANR	3971418	ArgumentList	This		3971397	1					
ANR	3971419	Argument	This		3971397	0					
ANR	3971420	Identifier	This		3971397	0					
ANR	3971421	ReturnStatement	"return get_zval_ptr_undef ( op_type , op , execute_data , should_free , type ) ;"	563:1:17567:17638	3971397	1	True				
ANR	3971422	CallExpression	"get_zval_ptr_undef ( op_type , op , execute_data , should_free , type )"		3971397	0					
ANR	3971423	Callee	get_zval_ptr_undef		3971397	0					
ANR	3971424	Identifier	get_zval_ptr_undef		3971397	0					
ANR	3971425	ArgumentList	op_type		3971397	1					
ANR	3971426	Argument	op_type		3971397	0					
ANR	3971427	Identifier	op_type		3971397	0					
ANR	3971428	Argument	op		3971397	1					
ANR	3971429	Identifier	op		3971397	0					
ANR	3971430	Argument	execute_data		3971397	2					
ANR	3971431	Identifier	execute_data		3971397	0					
ANR	3971432	Argument	should_free		3971397	3					
ANR	3971433	Identifier	should_free		3971397	0					
ANR	3971434	Argument	type		3971397	4					
ANR	3971435	Identifier	type		3971397	0					
ANR	3971436	ReturnType	static inline zval *		3971397	1					
ANR	3971437	Identifier	_get_obj_zval_ptr_undef		3971397	2					
ANR	3971438	ParameterList	"int op_type , znode_op op , zend_execute_data * execute_data , zend_free_op * should_free , int type"		3971397	3					
ANR	3971439	Parameter	int op_type	557:44:17393:17403	3971397	0	True				
ANR	3971440	ParameterType	int		3971397	0					
ANR	3971441	Identifier	op_type		3971397	1					
ANR	3971442	Parameter	znode_op op	557:57:17406:17416	3971397	1	True				
ANR	3971443	ParameterType	znode_op		3971397	0					
ANR	3971444	Identifier	op		3971397	1					
ANR	3971445	Parameter	zend_execute_data * execute_data	557:70:17419:17449	3971397	2	True				
ANR	3971446	ParameterType	zend_execute_data *		3971397	0					
ANR	3971447	Identifier	execute_data		3971397	1					
ANR	3971448	Parameter	zend_free_op * should_free	557:103:17452:17476	3971397	3	True				
ANR	3971449	ParameterType	zend_free_op *		3971397	0					
ANR	3971450	Identifier	should_free		3971397	1					
ANR	3971451	Parameter	int type	557:130:17479:17486	3971397	4	True				
ANR	3971452	ParameterType	int		3971397	0					
ANR	3971453	Identifier	type		3971397	1					
ANR	3971454	CFGEntryNode	ENTRY		3971397		True				
ANR	3971455	CFGExitNode	EXIT		3971397		True				
ANR	3971456	Symbol	should_free		3971397						
ANR	3971457	Symbol	op		3971397						
ANR	3971458	Symbol	get_zval_ptr_undef		3971397						
ANR	3971459	Symbol	NULL		3971397						
ANR	3971460	Symbol	This		3971397						
ANR	3971461	Symbol	op_type		3971397						
ANR	3971462	Symbol	type		3971397						
ANR	3971463	Symbol	& EX		3971397						
ANR	3971464	Symbol	execute_data		3971397						
ANR	3971465	Symbol	* should_free		3971397						
ANR	3971466	Symbol	IS_UNUSED		3971397						
ANR	3971467	Function	_get_obj_zval_ptr_ptr	566:0:17643:17934							
ANR	3971468	FunctionDef	"_get_obj_zval_ptr_ptr (int op_type , znode_op node , zend_execute_data * execute_data , zend_free_op * should_free , int type)"		3971467	0					
ANR	3971469	CompoundStatement		567:0:17783:17934	3971467	0					
ANR	3971470	IfStatement	if ( op_type == IS_UNUSED )		3971467	0					
ANR	3971471	Condition	op_type == IS_UNUSED	568:5:17790:17809	3971467	0	True				
ANR	3971472	EqualityExpression	op_type == IS_UNUSED		3971467	0		==			
ANR	3971473	Identifier	op_type		3971467	0					
ANR	3971474	Identifier	IS_UNUSED		3971467	1					
ANR	3971475	CompoundStatement		2:27:28:28	3971467	1					
ANR	3971476	ExpressionStatement	* should_free = NULL	569:2:17816:17835	3971467	0	True				
ANR	3971477	AssignmentExpression	* should_free = NULL		3971467	0		=			
ANR	3971478	UnaryOperationExpression	* should_free		3971467	0					
ANR	3971479	UnaryOperator	*		3971467	0					
ANR	3971480	Identifier	should_free		3971467	1					
ANR	3971481	Identifier	NULL		3971467	1					
ANR	3971482	ReturnStatement	return & EX ( This ) ;	570:2:17839:17855	3971467	1	True				
ANR	3971483	UnaryOperationExpression	& EX ( This )		3971467	0					
ANR	3971484	UnaryOperator	&		3971467	0					
ANR	3971485	CallExpression	EX ( This )		3971467	1					
ANR	3971486	Callee	EX		3971467	0					
ANR	3971487	Identifier	EX		3971467	0					
ANR	3971488	ArgumentList	This		3971467	1					
ANR	3971489	Argument	This		3971467	0					
ANR	3971490	Identifier	This		3971467	0					
ANR	3971491	ReturnStatement	"return get_zval_ptr_ptr ( op_type , node , execute_data , should_free , type ) ;"	572:1:17861:17932	3971467	1	True				
ANR	3971492	CallExpression	"get_zval_ptr_ptr ( op_type , node , execute_data , should_free , type )"		3971467	0					
ANR	3971493	Callee	get_zval_ptr_ptr		3971467	0					
ANR	3971494	Identifier	get_zval_ptr_ptr		3971467	0					
ANR	3971495	ArgumentList	op_type		3971467	1					
ANR	3971496	Argument	op_type		3971467	0					
ANR	3971497	Identifier	op_type		3971467	0					
ANR	3971498	Argument	node		3971467	1					
ANR	3971499	Identifier	node		3971467	0					
ANR	3971500	Argument	execute_data		3971467	2					
ANR	3971501	Identifier	execute_data		3971467	0					
ANR	3971502	Argument	should_free		3971467	3					
ANR	3971503	Identifier	should_free		3971467	0					
ANR	3971504	Argument	type		3971467	4					
ANR	3971505	Identifier	type		3971467	0					
ANR	3971506	ReturnType	static inline zval *		3971467	1					
ANR	3971507	Identifier	_get_obj_zval_ptr_ptr		3971467	2					
ANR	3971508	ParameterList	"int op_type , znode_op node , zend_execute_data * execute_data , zend_free_op * should_free , int type"		3971467	3					
ANR	3971509	Parameter	int op_type	566:42:17685:17695	3971467	0	True				
ANR	3971510	ParameterType	int		3971467	0					
ANR	3971511	Identifier	op_type		3971467	1					
ANR	3971512	Parameter	znode_op node	566:55:17698:17710	3971467	1	True				
ANR	3971513	ParameterType	znode_op		3971467	0					
ANR	3971514	Identifier	node		3971467	1					
ANR	3971515	Parameter	zend_execute_data * execute_data	566:70:17713:17743	3971467	2	True				
ANR	3971516	ParameterType	zend_execute_data *		3971467	0					
ANR	3971517	Identifier	execute_data		3971467	1					
ANR	3971518	Parameter	zend_free_op * should_free	566:103:17746:17770	3971467	3	True				
ANR	3971519	ParameterType	zend_free_op *		3971467	0					
ANR	3971520	Identifier	should_free		3971467	1					
ANR	3971521	Parameter	int type	566:130:17773:17780	3971467	4	True				
ANR	3971522	ParameterType	int		3971467	0					
ANR	3971523	Identifier	type		3971467	1					
ANR	3971524	CFGEntryNode	ENTRY		3971467		True				
ANR	3971525	CFGExitNode	EXIT		3971467		True				
ANR	3971526	Symbol	should_free		3971467						
ANR	3971527	Symbol	node		3971467						
ANR	3971528	Symbol	NULL		3971467						
ANR	3971529	Symbol	This		3971467						
ANR	3971530	Symbol	get_zval_ptr_ptr		3971467						
ANR	3971531	Symbol	op_type		3971467						
ANR	3971532	Symbol	type		3971467						
ANR	3971533	Symbol	& EX		3971467						
ANR	3971534	Symbol	execute_data		3971467						
ANR	3971535	Symbol	* should_free		3971467						
ANR	3971536	Symbol	IS_UNUSED		3971467						
ANR	3971537	Function	zend_assign_to_variable_reference	575:0:17937:18305							
ANR	3971538	FunctionDef	"zend_assign_to_variable_reference (zval * variable_ptr , zval * value_ptr)"		3971537	0					
ANR	3971539	CompoundStatement		576:0:18027:18305	3971537	0					
ANR	3971540	IdentifierDeclStatement	zend_reference * ref ;	577:1:18030:18049	3971537	0	True				
ANR	3971541	IdentifierDecl	* ref		3971537	0					
ANR	3971542	IdentifierDeclType	zend_reference *		3971537	0					
ANR	3971543	Identifier	ref		3971537	1					
ANR	3971544	IfStatement	if ( EXPECTED ( ! Z_ISREF_P ( value_ptr ) ) )		3971537	1					
ANR	3971545	Condition	EXPECTED ( ! Z_ISREF_P ( value_ptr ) )	579:5:18057:18087	3971537	0	True				
ANR	3971546	CallExpression	EXPECTED ( ! Z_ISREF_P ( value_ptr ) )		3971537	0					
ANR	3971547	Callee	EXPECTED		3971537	0					
ANR	3971548	Identifier	EXPECTED		3971537	0					
ANR	3971549	ArgumentList	! Z_ISREF_P ( value_ptr )		3971537	1					
ANR	3971550	Argument	! Z_ISREF_P ( value_ptr )		3971537	0					
ANR	3971551	UnaryOperationExpression	! Z_ISREF_P ( value_ptr )		3971537	0					
ANR	3971552	UnaryOperator	!		3971537	0					
ANR	3971553	CallExpression	Z_ISREF_P ( value_ptr )		3971537	1					
ANR	3971554	Callee	Z_ISREF_P		3971537	0					
ANR	3971555	Identifier	Z_ISREF_P		3971537	0					
ANR	3971556	ArgumentList	value_ptr		3971537	1					
ANR	3971557	Argument	value_ptr		3971537	0					
ANR	3971558	Identifier	value_ptr		3971537	0					
ANR	3971559	CompoundStatement		4:38:62:62	3971537	1					
ANR	3971560	ExpressionStatement	"ZVAL_NEW_REF ( value_ptr , value_ptr )"	580:2:18094:18128	3971537	0	True				
ANR	3971561	CallExpression	"ZVAL_NEW_REF ( value_ptr , value_ptr )"		3971537	0					
ANR	3971562	Callee	ZVAL_NEW_REF		3971537	0					
ANR	3971563	Identifier	ZVAL_NEW_REF		3971537	0					
ANR	3971564	ArgumentList	value_ptr		3971537	1					
ANR	3971565	Argument	value_ptr		3971537	0					
ANR	3971566	Identifier	value_ptr		3971537	0					
ANR	3971567	Argument	value_ptr		3971537	1					
ANR	3971568	Identifier	value_ptr		3971537	0					
ANR	3971569	ElseStatement	else		3971537	0					
ANR	3971570	IfStatement	if ( UNEXPECTED ( variable_ptr == value_ptr ) )		3971537	0					
ANR	3971571	Condition	UNEXPECTED ( variable_ptr == value_ptr )	581:12:18142:18178	3971537	0	True				
ANR	3971572	CallExpression	UNEXPECTED ( variable_ptr == value_ptr )		3971537	0					
ANR	3971573	Callee	UNEXPECTED		3971537	0					
ANR	3971574	Identifier	UNEXPECTED		3971537	0					
ANR	3971575	ArgumentList	variable_ptr == value_ptr		3971537	1					
ANR	3971576	Argument	variable_ptr == value_ptr		3971537	0					
ANR	3971577	EqualityExpression	variable_ptr == value_ptr		3971537	0		==			
ANR	3971578	Identifier	variable_ptr		3971537	0					
ANR	3971579	Identifier	value_ptr		3971537	1					
ANR	3971580	CompoundStatement		6:51:153:153	3971537	1					
ANR	3971581	ReturnStatement	return ;	582:2:18185:18191	3971537	0	True				
ANR	3971582	ExpressionStatement	ref = Z_REF_P ( value_ptr )	585:1:18198:18222	3971537	2	True				
ANR	3971583	AssignmentExpression	ref = Z_REF_P ( value_ptr )		3971537	0		=			
ANR	3971584	Identifier	ref		3971537	0					
ANR	3971585	CallExpression	Z_REF_P ( value_ptr )		3971537	1					
ANR	3971586	Callee	Z_REF_P		3971537	0					
ANR	3971587	Identifier	Z_REF_P		3971537	0					
ANR	3971588	ArgumentList	value_ptr		3971537	1					
ANR	3971589	Argument	value_ptr		3971537	0					
ANR	3971590	Identifier	value_ptr		3971537	0					
ANR	3971591	ExpressionStatement	GC_REFCOUNT ( ref ) ++	586:1:18225:18243	3971537	3	True				
ANR	3971592	PostIncDecOperationExpression	GC_REFCOUNT ( ref ) ++		3971537	0					
ANR	3971593	CallExpression	GC_REFCOUNT ( ref )		3971537	0					
ANR	3971594	Callee	GC_REFCOUNT		3971537	0					
ANR	3971595	Identifier	GC_REFCOUNT		3971537	0					
ANR	3971596	ArgumentList	ref		3971537	1					
ANR	3971597	Argument	ref		3971537	0					
ANR	3971598	Identifier	ref		3971537	0					
ANR	3971599	IncDec	++		3971537	1					
ANR	3971600	ExpressionStatement	zval_ptr_dtor ( variable_ptr )	587:1:18246:18273	3971537	4	True				
ANR	3971601	CallExpression	zval_ptr_dtor ( variable_ptr )		3971537	0					
ANR	3971602	Callee	zval_ptr_dtor		3971537	0					
ANR	3971603	Identifier	zval_ptr_dtor		3971537	0					
ANR	3971604	ArgumentList	variable_ptr		3971537	1					
ANR	3971605	Argument	variable_ptr		3971537	0					
ANR	3971606	Identifier	variable_ptr		3971537	0					
ANR	3971607	ExpressionStatement	"ZVAL_REF ( variable_ptr , ref )"	588:1:18276:18303	3971537	5	True				
ANR	3971608	CallExpression	"ZVAL_REF ( variable_ptr , ref )"		3971537	0					
ANR	3971609	Callee	ZVAL_REF		3971537	0					
ANR	3971610	Identifier	ZVAL_REF		3971537	0					
ANR	3971611	ArgumentList	variable_ptr		3971537	1					
ANR	3971612	Argument	variable_ptr		3971537	0					
ANR	3971613	Identifier	variable_ptr		3971537	0					
ANR	3971614	Argument	ref		3971537	1					
ANR	3971615	Identifier	ref		3971537	0					
ANR	3971616	ReturnType	static inline void		3971537	1					
ANR	3971617	Identifier	zend_assign_to_variable_reference		3971537	2					
ANR	3971618	ParameterList	"zval * variable_ptr , zval * value_ptr"		3971537	3					
ANR	3971619	Parameter	zval * variable_ptr	575:53:17990:18007	3971537	0	True				
ANR	3971620	ParameterType	zval *		3971537	0					
ANR	3971621	Identifier	variable_ptr		3971537	1					
ANR	3971622	Parameter	zval * value_ptr	575:73:18010:18024	3971537	1	True				
ANR	3971623	ParameterType	zval *		3971537	0					
ANR	3971624	Identifier	value_ptr		3971537	1					
ANR	3971625	CFGEntryNode	ENTRY		3971537		True				
ANR	3971626	CFGExitNode	EXIT		3971537		True				
ANR	3971627	Symbol	UNEXPECTED		3971537						
ANR	3971628	Symbol	value_ptr		3971537						
ANR	3971629	Symbol	ref		3971537						
ANR	3971630	Symbol	variable_ptr		3971537						
ANR	3971631	Symbol	EXPECTED		3971537						
ANR	3971632	Symbol	GC_REFCOUNT		3971537						
ANR	3971633	Symbol	Z_ISREF_P		3971537						
ANR	3971634	Symbol	Z_REF_P		3971537						
ANR	3971635	Function	make_real_object	592:0:18359:18786							
ANR	3971636	FunctionDef	make_real_object (zval * object)		3971635	0					
ANR	3971637	CompoundStatement		593:0:18408:18786	3971635	0					
ANR	3971638	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		3971635	0					
ANR	3971639	Condition	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	594:5:18415:18455	3971635	0	True				
ANR	3971640	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		3971635	0					
ANR	3971641	Callee	UNEXPECTED		3971635	0					
ANR	3971642	Identifier	UNEXPECTED		3971635	0					
ANR	3971643	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		3971635	1					
ANR	3971644	Argument	Z_TYPE_P ( object ) != IS_OBJECT		3971635	0					
ANR	3971645	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		3971635	0		!=			
ANR	3971646	CallExpression	Z_TYPE_P ( object )		3971635	0					
ANR	3971647	Callee	Z_TYPE_P		3971635	0					
ANR	3971648	Identifier	Z_TYPE_P		3971635	0					
ANR	3971649	ArgumentList	object		3971635	1					
ANR	3971650	Argument	object		3971635	0					
ANR	3971651	Identifier	object		3971635	0					
ANR	3971652	Identifier	IS_OBJECT		3971635	1					
ANR	3971653	CompoundStatement		2:48:49:49	3971635	1					
ANR	3971654	IfStatement	if ( EXPECTED ( Z_TYPE_P ( object ) <= IS_FALSE ) )		3971635	0					
ANR	3971655	Condition	EXPECTED ( Z_TYPE_P ( object ) <= IS_FALSE )	595:6:18466:18503	3971635	0	True				
ANR	3971656	CallExpression	EXPECTED ( Z_TYPE_P ( object ) <= IS_FALSE )		3971635	0					
ANR	3971657	Callee	EXPECTED		3971635	0					
ANR	3971658	Identifier	EXPECTED		3971635	0					
ANR	3971659	ArgumentList	Z_TYPE_P ( object ) <= IS_FALSE		3971635	1					
ANR	3971660	Argument	Z_TYPE_P ( object ) <= IS_FALSE		3971635	0					
ANR	3971661	RelationalExpression	Z_TYPE_P ( object ) <= IS_FALSE		3971635	0		<=			
ANR	3971662	CallExpression	Z_TYPE_P ( object )		3971635	0					
ANR	3971663	Callee	Z_TYPE_P		3971635	0					
ANR	3971664	Identifier	Z_TYPE_P		3971635	0					
ANR	3971665	ArgumentList	object		3971635	1					
ANR	3971666	Argument	object		3971635	0					
ANR	3971667	Identifier	object		3971635	0					
ANR	3971668	Identifier	IS_FALSE		3971635	1					
ANR	3971669	CompoundStatement		3:46:97:97	3971635	1					
ANR	3971670	ElseStatement	else		3971635	0					
ANR	3971671	IfStatement	if ( EXPECTED ( ( Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0 ) ) )		3971635	0					
ANR	3971672	Condition	EXPECTED ( ( Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0 ) )	597:13:18549:18616	3971635	0	True				
ANR	3971673	CallExpression	EXPECTED ( ( Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0 ) )		3971635	0					
ANR	3971674	Callee	EXPECTED		3971635	0					
ANR	3971675	Identifier	EXPECTED		3971635	0					
ANR	3971676	ArgumentList	Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0		3971635	1					
ANR	3971677	Argument	Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0		3971635	0					
ANR	3971678	AndExpression	Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0		3971635	0		&&			
ANR	3971679	EqualityExpression	Z_TYPE_P ( object ) == IS_STRING		3971635	0		==			
ANR	3971680	CallExpression	Z_TYPE_P ( object )		3971635	0					
ANR	3971681	Callee	Z_TYPE_P		3971635	0					
ANR	3971682	Identifier	Z_TYPE_P		3971635	0					
ANR	3971683	ArgumentList	object		3971635	1					
ANR	3971684	Argument	object		3971635	0					
ANR	3971685	Identifier	object		3971635	0					
ANR	3971686	Identifier	IS_STRING		3971635	1					
ANR	3971687	EqualityExpression	Z_STRLEN_P ( object ) == 0		3971635	1		==			
ANR	3971688	CallExpression	Z_STRLEN_P ( object )		3971635	0					
ANR	3971689	Callee	Z_STRLEN_P		3971635	0					
ANR	3971690	Identifier	Z_STRLEN_P		3971635	0					
ANR	3971691	ArgumentList	object		3971635	1					
ANR	3971692	Argument	object		3971635	0					
ANR	3971693	Identifier	object		3971635	0					
ANR	3971694	PrimaryExpression	0		3971635	1					
ANR	3971695	CompoundStatement		5:83:210:210	3971635	1					
ANR	3971696	ExpressionStatement	zval_ptr_dtor_nogc ( object )	598:3:18624:18650	3971635	0	True				
ANR	3971697	CallExpression	zval_ptr_dtor_nogc ( object )		3971635	0					
ANR	3971698	Callee	zval_ptr_dtor_nogc		3971635	0					
ANR	3971699	Identifier	zval_ptr_dtor_nogc		3971635	0					
ANR	3971700	ArgumentList	object		3971635	1					
ANR	3971701	Argument	object		3971635	0					
ANR	3971702	Identifier	object		3971635	0					
ANR	3971703	ElseStatement	else		3971635	0					
ANR	3971704	CompoundStatement		7:9:252:252	3971635	0					
ANR	3971705	ReturnStatement	return 0 ;	600:3:18666:18674	3971635	0	True				
ANR	3971706	PrimaryExpression	0		3971635	0					
ANR	3971707	ExpressionStatement	object_init ( object )	602:2:18682:18701	3971635	1	True				
ANR	3971708	CallExpression	object_init ( object )		3971635	0					
ANR	3971709	Callee	object_init		3971635	0					
ANR	3971710	Identifier	object_init		3971635	0					
ANR	3971711	ArgumentList	object		3971635	1					
ANR	3971712	Argument	object		3971635	0					
ANR	3971713	Identifier	object		3971635	0					
ANR	3971714	ExpressionStatement	"zend_error ( E_WARNING , ""Creating default object from empty value"" )"	603:2:18705:18770	3971635	2	True				
ANR	3971715	CallExpression	"zend_error ( E_WARNING , ""Creating default object from empty value"" )"		3971635	0					
ANR	3971716	Callee	zend_error		3971635	0					
ANR	3971717	Identifier	zend_error		3971635	0					
ANR	3971718	ArgumentList	E_WARNING		3971635	1					
ANR	3971719	Argument	E_WARNING		3971635	0					
ANR	3971720	Identifier	E_WARNING		3971635	0					
ANR	3971721	Argument	"""Creating default object from empty value"""		3971635	1					
ANR	3971722	PrimaryExpression	"""Creating default object from empty value"""		3971635	0					
ANR	3971723	ReturnStatement	return 1 ;	605:1:18776:18784	3971635	1	True				
ANR	3971724	PrimaryExpression	1		3971635	0					
ANR	3971725	ReturnType	static inline int		3971635	1					
ANR	3971726	Identifier	make_real_object		3971635	2					
ANR	3971727	ParameterList	zval * object		3971635	3					
ANR	3971728	Parameter	zval * object	592:35:18394:18405	3971635	0	True				
ANR	3971729	ParameterType	zval *		3971635	0					
ANR	3971730	Identifier	object		3971635	1					
ANR	3971731	CFGEntryNode	ENTRY		3971635		True				
ANR	3971732	CFGExitNode	EXIT		3971635		True				
ANR	3971733	Symbol	UNEXPECTED		3971635						
ANR	3971734	Symbol	E_WARNING		3971635						
ANR	3971735	Symbol	Z_STRLEN_P		3971635						
ANR	3971736	Symbol	IS_STRING		3971635						
ANR	3971737	Symbol	IS_OBJECT		3971635						
ANR	3971738	Symbol	Z_TYPE_P		3971635						
ANR	3971739	Symbol	EXPECTED		3971635						
ANR	3971740	Symbol	IS_FALSE		3971635						
ANR	3971741	Symbol	object		3971635						
ANR	3971742	Function	zend_verify_internal_arg_class_kind	608:0:18789:19401							
ANR	3971743	FunctionDef	"zend_verify_internal_arg_class_kind (const zend_internal_arg_info * cur_arg_info , char * * class_name , zend_class_entry * * pce)"		3971742	0					
ANR	3971744	CompoundStatement		609:0:18926:19401	3971742	0					
ANR	3971745	IdentifierDeclStatement	zend_string * key ;	610:1:18929:18945	3971742	0	True				
ANR	3971746	IdentifierDecl	* key		3971742	0					
ANR	3971747	IdentifierDeclType	zend_string *		3971742	0					
ANR	3971748	Identifier	key		3971742	1					
ANR	3971749	ExpressionStatement	ALLOCA_FLAG ( use_heap )	611:1:18948:18969	3971742	1	True				
ANR	3971750	CallExpression	ALLOCA_FLAG ( use_heap )		3971742	0					
ANR	3971751	Callee	ALLOCA_FLAG		3971742	0					
ANR	3971752	Identifier	ALLOCA_FLAG		3971742	0					
ANR	3971753	ArgumentList	use_heap		3971742	1					
ANR	3971754	Argument	use_heap		3971742	0					
ANR	3971755	Identifier	use_heap		3971742	0					
ANR	3971756	ExpressionStatement	"ZSTR_ALLOCA_INIT ( key , cur_arg_info -> class_name , strlen ( cur_arg_info -> class_name ) , use_heap )"	613:1:18973:19064	3971742	2	True				
ANR	3971757	CallExpression	"ZSTR_ALLOCA_INIT ( key , cur_arg_info -> class_name , strlen ( cur_arg_info -> class_name ) , use_heap )"		3971742	0					
ANR	3971758	Callee	ZSTR_ALLOCA_INIT		3971742	0					
ANR	3971759	Identifier	ZSTR_ALLOCA_INIT		3971742	0					
ANR	3971760	ArgumentList	key		3971742	1					
ANR	3971761	Argument	key		3971742	0					
ANR	3971762	Identifier	key		3971742	0					
ANR	3971763	Argument	cur_arg_info -> class_name		3971742	1					
ANR	3971764	PtrMemberAccess	cur_arg_info -> class_name		3971742	0					
ANR	3971765	Identifier	cur_arg_info		3971742	0					
ANR	3971766	Identifier	class_name		3971742	1					
ANR	3971767	Argument	strlen ( cur_arg_info -> class_name )		3971742	2					
ANR	3971768	CallExpression	strlen ( cur_arg_info -> class_name )		3971742	0					
ANR	3971769	Callee	strlen		3971742	0					
ANR	3971770	Identifier	strlen		3971742	0					
ANR	3971771	ArgumentList	cur_arg_info -> class_name		3971742	1					
ANR	3971772	Argument	cur_arg_info -> class_name		3971742	0					
ANR	3971773	PtrMemberAccess	cur_arg_info -> class_name		3971742	0					
ANR	3971774	Identifier	cur_arg_info		3971742	0					
ANR	3971775	Identifier	class_name		3971742	1					
ANR	3971776	Argument	use_heap		3971742	3					
ANR	3971777	Identifier	use_heap		3971742	0					
ANR	3971778	ExpressionStatement	"* pce = zend_fetch_class ( key , ( ZEND_FETCH_CLASS_AUTO | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"	614:1:19067:19151	3971742	3	True				
ANR	3971779	AssignmentExpression	"* pce = zend_fetch_class ( key , ( ZEND_FETCH_CLASS_AUTO | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"		3971742	0		=			
ANR	3971780	UnaryOperationExpression	* pce		3971742	0					
ANR	3971781	UnaryOperator	*		3971742	0					
ANR	3971782	Identifier	pce		3971742	1					
ANR	3971783	CallExpression	"zend_fetch_class ( key , ( ZEND_FETCH_CLASS_AUTO | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"		3971742	1					
ANR	3971784	Callee	zend_fetch_class		3971742	0					
ANR	3971785	Identifier	zend_fetch_class		3971742	0					
ANR	3971786	ArgumentList	key		3971742	1					
ANR	3971787	Argument	key		3971742	0					
ANR	3971788	Identifier	key		3971742	0					
ANR	3971789	Argument	ZEND_FETCH_CLASS_AUTO | ZEND_FETCH_CLASS_NO_AUTOLOAD		3971742	1					
ANR	3971790	InclusiveOrExpression	ZEND_FETCH_CLASS_AUTO | ZEND_FETCH_CLASS_NO_AUTOLOAD		3971742	0		|			
ANR	3971791	Identifier	ZEND_FETCH_CLASS_AUTO		3971742	0					
ANR	3971792	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		3971742	1					
ANR	3971793	ExpressionStatement	"ZSTR_ALLOCA_FREE ( key , use_heap )"	615:1:19154:19185	3971742	4	True				
ANR	3971794	CallExpression	"ZSTR_ALLOCA_FREE ( key , use_heap )"		3971742	0					
ANR	3971795	Callee	ZSTR_ALLOCA_FREE		3971742	0					
ANR	3971796	Identifier	ZSTR_ALLOCA_FREE		3971742	0					
ANR	3971797	ArgumentList	key		3971742	1					
ANR	3971798	Argument	key		3971742	0					
ANR	3971799	Identifier	key		3971742	0					
ANR	3971800	Argument	use_heap		3971742	1					
ANR	3971801	Identifier	use_heap		3971742	0					
ANR	3971802	ExpressionStatement	* class_name = ( * pce ) ? ZSTR_VAL ( ( * pce ) -> name ) : ( char * ) cur_arg_info -> class_name	617:1:19189:19268	3971742	5	True				
ANR	3971803	AssignmentExpression	* class_name = ( * pce ) ? ZSTR_VAL ( ( * pce ) -> name ) : ( char * ) cur_arg_info -> class_name		3971742	0		=			
ANR	3971804	UnaryOperationExpression	* class_name		3971742	0					
ANR	3971805	UnaryOperator	*		3971742	0					
ANR	3971806	Identifier	class_name		3971742	1					
ANR	3971807	ConditionalExpression	( * pce ) ? ZSTR_VAL ( ( * pce ) -> name ) : ( char * ) cur_arg_info -> class_name		3971742	1					
ANR	3971808	Condition	* pce		3971742	0					
ANR	3971809	UnaryOperationExpression	* pce		3971742	0					
ANR	3971810	UnaryOperator	*		3971742	0					
ANR	3971811	Identifier	pce		3971742	1					
ANR	3971812	CallExpression	ZSTR_VAL ( ( * pce ) -> name )		3971742	1					
ANR	3971813	Callee	ZSTR_VAL		3971742	0					
ANR	3971814	Identifier	ZSTR_VAL		3971742	0					
ANR	3971815	ArgumentList	( * pce ) -> name		3971742	1					
ANR	3971816	Argument	( * pce ) -> name		3971742	0					
ANR	3971817	PtrMemberAccess	( * pce ) -> name		3971742	0					
ANR	3971818	UnaryOperationExpression	* pce		3971742	0					
ANR	3971819	UnaryOperator	*		3971742	0					
ANR	3971820	Identifier	pce		3971742	1					
ANR	3971821	Identifier	name		3971742	1					
ANR	3971822	CastExpression	( char * ) cur_arg_info -> class_name		3971742	2					
ANR	3971823	CastTarget	char *		3971742	0					
ANR	3971824	PtrMemberAccess	cur_arg_info -> class_name		3971742	1					
ANR	3971825	Identifier	cur_arg_info		3971742	0					
ANR	3971826	Identifier	class_name		3971742	1					
ANR	3971827	IfStatement	if ( * pce && ( * pce ) -> ce_flags & ZEND_ACC_INTERFACE )		3971742	6					
ANR	3971828	Condition	* pce && ( * pce ) -> ce_flags & ZEND_ACC_INTERFACE	618:5:19275:19319	3971742	0	True				
ANR	3971829	AndExpression	* pce && ( * pce ) -> ce_flags & ZEND_ACC_INTERFACE		3971742	0		&&			
ANR	3971830	UnaryOperationExpression	* pce		3971742	0					
ANR	3971831	UnaryOperator	*		3971742	0					
ANR	3971832	Identifier	pce		3971742	1					
ANR	3971833	BitAndExpression	( * pce ) -> ce_flags & ZEND_ACC_INTERFACE		3971742	1		&			
ANR	3971834	PtrMemberAccess	( * pce ) -> ce_flags		3971742	0					
ANR	3971835	UnaryOperationExpression	* pce		3971742	0					
ANR	3971836	UnaryOperator	*		3971742	0					
ANR	3971837	Identifier	pce		3971742	1					
ANR	3971838	Identifier	ce_flags		3971742	1					
ANR	3971839	Identifier	ZEND_ACC_INTERFACE		3971742	1					
ANR	3971840	CompoundStatement		10:52:395:395	3971742	1					
ANR	3971841	ReturnStatement	"return ""implement interface "" ;"	619:2:19326:19355	3971742	0	True				
ANR	3971842	PrimaryExpression	"""implement interface """		3971742	0					
ANR	3971843	ElseStatement	else		3971742	0					
ANR	3971844	CompoundStatement		12:8:438:438	3971742	0					
ANR	3971845	ReturnStatement	"return ""be an instance of "" ;"	621:2:19369:19396	3971742	0	True				
ANR	3971846	PrimaryExpression	"""be an instance of """		3971742	0					
ANR	3971847	ReturnType	static char *		3971742	1					
ANR	3971848	Identifier	zend_verify_internal_arg_class_kind		3971742	2					
ANR	3971849	ParameterList	"const zend_internal_arg_info * cur_arg_info , char * * class_name , zend_class_entry * * pce"		3971742	3					
ANR	3971850	Parameter	const zend_internal_arg_info * cur_arg_info	608:50:18839:18880	3971742	0	True				
ANR	3971851	ParameterType	const zend_internal_arg_info *		3971742	0					
ANR	3971852	Identifier	cur_arg_info		3971742	1					
ANR	3971853	Parameter	char * * class_name	608:94:18883:18899	3971742	1	True				
ANR	3971854	ParameterType	char * *		3971742	0					
ANR	3971855	Identifier	class_name		3971742	1					
ANR	3971856	Parameter	zend_class_entry * * pce	608:113:18902:18923	3971742	2	True				
ANR	3971857	ParameterType	zend_class_entry * *		3971742	0					
ANR	3971858	Identifier	pce		3971742	1					
ANR	3971859	CFGEntryNode	ENTRY		3971742		True				
ANR	3971860	CFGExitNode	EXIT		3971742		True				
ANR	3971861	Symbol	zend_fetch_class		3971742						
ANR	3971862	Symbol	( * pce ) -> ce_flags		3971742						
ANR	3971863	Symbol	ZEND_FETCH_CLASS_AUTO		3971742						
ANR	3971864	Symbol	* class_name		3971742						
ANR	3971865	Symbol	( * pce ) -> name		3971742						
ANR	3971866	Symbol	* * pce		3971742						
ANR	3971867	Symbol	ZEND_FETCH_CLASS_NO_AUTOLOAD		3971742						
ANR	3971868	Symbol	cur_arg_info -> class_name		3971742						
ANR	3971869	Symbol	cur_arg_info		3971742						
ANR	3971870	Symbol	ZSTR_VAL		3971742						
ANR	3971871	Symbol	strlen		3971742						
ANR	3971872	Symbol	* cur_arg_info		3971742						
ANR	3971873	Symbol	pce		3971742						
ANR	3971874	Symbol	ZEND_ACC_INTERFACE		3971742						
ANR	3971875	Symbol	* pce		3971742						
ANR	3971876	Symbol	class_name		3971742						
ANR	3971877	Symbol	key		3971742						
ANR	3971878	Symbol	use_heap		3971742						
ANR	3971879	Function	zend_verify_arg_class_kind	625:0:19404:19620							
ANR	3971880	FunctionDef	zend_verify_arg_class_kind (const zend_arg_info * cur_arg_info)		3971879	0					
ANR	3971881	CompoundStatement		626:0:19510:19620	3971879	0					
ANR	3971882	ReturnStatement	"return zend_fetch_class ( cur_arg_info -> class_name , ( ZEND_FETCH_CLASS_AUTO | ZEND_FETCH_CLASS_NO_AUTOLOAD ) ) ;"	627:1:19513:19618	3971879	0	True				
ANR	3971883	CallExpression	"zend_fetch_class ( cur_arg_info -> class_name , ( ZEND_FETCH_CLASS_AUTO | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"		3971879	0					
ANR	3971884	Callee	zend_fetch_class		3971879	0					
ANR	3971885	Identifier	zend_fetch_class		3971879	0					
ANR	3971886	ArgumentList	cur_arg_info -> class_name		3971879	1					
ANR	3971887	Argument	cur_arg_info -> class_name		3971879	0					
ANR	3971888	PtrMemberAccess	cur_arg_info -> class_name		3971879	0					
ANR	3971889	Identifier	cur_arg_info		3971879	0					
ANR	3971890	Identifier	class_name		3971879	1					
ANR	3971891	Argument	ZEND_FETCH_CLASS_AUTO | ZEND_FETCH_CLASS_NO_AUTOLOAD		3971879	1					
ANR	3971892	InclusiveOrExpression	ZEND_FETCH_CLASS_AUTO | ZEND_FETCH_CLASS_NO_AUTOLOAD		3971879	0		|			
ANR	3971893	Identifier	ZEND_FETCH_CLASS_AUTO		3971879	0					
ANR	3971894	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		3971879	1					
ANR	3971895	ReturnType	static zend_always_inline zend_class_entry *		3971879	1					
ANR	3971896	Identifier	zend_verify_arg_class_kind		3971879	2					
ANR	3971897	ParameterList	const zend_arg_info * cur_arg_info		3971879	3					
ANR	3971898	Parameter	const zend_arg_info * cur_arg_info	625:71:19475:19507	3971879	0	True				
ANR	3971899	ParameterType	const zend_arg_info *		3971879	0					
ANR	3971900	Identifier	cur_arg_info		3971879	1					
ANR	3971901	CFGEntryNode	ENTRY		3971879		True				
ANR	3971902	CFGExitNode	EXIT		3971879		True				
ANR	3971903	Symbol	zend_fetch_class		3971879						
ANR	3971904	Symbol	* cur_arg_info		3971879						
ANR	3971905	Symbol	ZEND_FETCH_CLASS_AUTO		3971879						
ANR	3971906	Symbol	ZEND_FETCH_CLASS_NO_AUTOLOAD		3971879						
ANR	3971907	Symbol	cur_arg_info -> class_name		3971879						
ANR	3971908	Symbol	cur_arg_info		3971879						
ANR	3971909	Function	zend_verify_arg_error	630:0:19623:20800							
ANR	3971910	FunctionDef	"zend_verify_arg_error (const zend_function * zf , uint32_t arg_num , const char * need_msg , const char * need_kind , const char * given_msg , const char * given_kind , zval * arg)"		3971909	0					
ANR	3971911	CompoundStatement		631:0:19813:20800	3971909	0					
ANR	3971912	IdentifierDeclStatement	zend_execute_data * ptr = EG ( current_execute_data ) -> prev_execute_data ;	632:1:19816:19884	3971909	0	True				
ANR	3971913	IdentifierDecl	* ptr = EG ( current_execute_data ) -> prev_execute_data		3971909	0					
ANR	3971914	IdentifierDeclType	zend_execute_data *		3971909	0					
ANR	3971915	Identifier	ptr		3971909	1					
ANR	3971916	AssignmentExpression	* ptr = EG ( current_execute_data ) -> prev_execute_data		3971909	2		=			
ANR	3971917	Identifier	ptr		3971909	0					
ANR	3971918	PtrMemberAccess	EG ( current_execute_data ) -> prev_execute_data		3971909	1					
ANR	3971919	CallExpression	EG ( current_execute_data )		3971909	0					
ANR	3971920	Callee	EG		3971909	0					
ANR	3971921	Identifier	EG		3971909	0					
ANR	3971922	ArgumentList	current_execute_data		3971909	1					
ANR	3971923	Argument	current_execute_data		3971909	0					
ANR	3971924	Identifier	current_execute_data		3971909	0					
ANR	3971925	Identifier	prev_execute_data		3971909	1					
ANR	3971926	IdentifierDeclStatement	const char * fname = ZSTR_VAL ( zf -> common . function_name ) ;	633:1:19887:19941	3971909	1	True				
ANR	3971927	IdentifierDecl	* fname = ZSTR_VAL ( zf -> common . function_name )		3971909	0					
ANR	3971928	IdentifierDeclType	const char *		3971909	0					
ANR	3971929	Identifier	fname		3971909	1					
ANR	3971930	AssignmentExpression	* fname = ZSTR_VAL ( zf -> common . function_name )		3971909	2		=			
ANR	3971931	Identifier	fname		3971909	0					
ANR	3971932	CallExpression	ZSTR_VAL ( zf -> common . function_name )		3971909	1					
ANR	3971933	Callee	ZSTR_VAL		3971909	0					
ANR	3971934	Identifier	ZSTR_VAL		3971909	0					
ANR	3971935	ArgumentList	zf -> common . function_name		3971909	1					
ANR	3971936	Argument	zf -> common . function_name		3971909	0					
ANR	3971937	MemberAccess	zf -> common . function_name		3971909	0					
ANR	3971938	PtrMemberAccess	zf -> common		3971909	0					
ANR	3971939	Identifier	zf		3971909	0					
ANR	3971940	Identifier	common		3971909	1					
ANR	3971941	Identifier	function_name		3971909	1					
ANR	3971942	IdentifierDeclStatement	const char * fsep ;	634:1:19944:19960	3971909	2	True				
ANR	3971943	IdentifierDecl	* fsep		3971909	0					
ANR	3971944	IdentifierDeclType	const char *		3971909	0					
ANR	3971945	Identifier	fsep		3971909	1					
ANR	3971946	IdentifierDeclStatement	const char * fclass ;	635:1:19963:19981	3971909	3	True				
ANR	3971947	IdentifierDecl	* fclass		3971909	0					
ANR	3971948	IdentifierDeclType	const char *		3971909	0					
ANR	3971949	Identifier	fclass		3971909	1					
ANR	3971950	IfStatement	if ( zf -> common . scope )		3971909	4					
ANR	3971951	Condition	zf -> common . scope	637:5:19989:20004	3971909	0	True				
ANR	3971952	MemberAccess	zf -> common . scope		3971909	0					
ANR	3971953	PtrMemberAccess	zf -> common		3971909	0					
ANR	3971954	Identifier	zf		3971909	0					
ANR	3971955	Identifier	common		3971909	1					
ANR	3971956	Identifier	scope		3971909	1					
ANR	3971957	CompoundStatement		7:23:193:193	3971909	1					
ANR	3971958	ExpressionStatement	"fsep = ""::"""	638:2:20011:20023	3971909	0	True				
ANR	3971959	AssignmentExpression	"fsep = ""::"""		3971909	0		=			
ANR	3971960	Identifier	fsep		3971909	0					
ANR	3971961	PrimaryExpression	"""::"""		3971909	1					
ANR	3971962	ExpressionStatement	fclass = ZSTR_VAL ( zf -> common . scope -> name )	639:2:20027:20068	3971909	1	True				
ANR	3971963	AssignmentExpression	fclass = ZSTR_VAL ( zf -> common . scope -> name )		3971909	0		=			
ANR	3971964	Identifier	fclass		3971909	0					
ANR	3971965	CallExpression	ZSTR_VAL ( zf -> common . scope -> name )		3971909	1					
ANR	3971966	Callee	ZSTR_VAL		3971909	0					
ANR	3971967	Identifier	ZSTR_VAL		3971909	0					
ANR	3971968	ArgumentList	zf -> common . scope -> name		3971909	1					
ANR	3971969	Argument	zf -> common . scope -> name		3971909	0					
ANR	3971970	PtrMemberAccess	zf -> common . scope -> name		3971909	0					
ANR	3971971	MemberAccess	zf -> common . scope		3971909	0					
ANR	3971972	PtrMemberAccess	zf -> common		3971909	0					
ANR	3971973	Identifier	zf		3971909	0					
ANR	3971974	Identifier	common		3971909	1					
ANR	3971975	Identifier	scope		3971909	1					
ANR	3971976	Identifier	name		3971909	1					
ANR	3971977	ElseStatement	else		3971909	0					
ANR	3971978	CompoundStatement		10:8:264:264	3971909	0					
ANR	3971979	ExpressionStatement	"fsep = """""	641:2:20082:20092	3971909	0	True				
ANR	3971980	AssignmentExpression	"fsep = """""		3971909	0		=			
ANR	3971981	Identifier	fsep		3971909	0					
ANR	3971982	PrimaryExpression	""""""		3971909	1					
ANR	3971983	ExpressionStatement	"fclass = """""	642:2:20096:20107	3971909	1	True				
ANR	3971984	AssignmentExpression	"fclass = """""		3971909	0		=			
ANR	3971985	Identifier	fclass		3971909	0					
ANR	3971986	PrimaryExpression	""""""		3971909	1					
ANR	3971987	IfStatement	if ( zf -> common . type == ZEND_USER_FUNCTION )		3971909	5					
ANR	3971988	Condition	zf -> common . type == ZEND_USER_FUNCTION	645:5:20118:20154	3971909	0	True				
ANR	3971989	EqualityExpression	zf -> common . type == ZEND_USER_FUNCTION		3971909	0		==			
ANR	3971990	MemberAccess	zf -> common . type		3971909	0					
ANR	3971991	PtrMemberAccess	zf -> common		3971909	0					
ANR	3971992	Identifier	zf		3971909	0					
ANR	3971993	Identifier	common		3971909	1					
ANR	3971994	Identifier	type		3971909	1					
ANR	3971995	Identifier	ZEND_USER_FUNCTION		3971909	1					
ANR	3971996	CompoundStatement		15:44:343:343	3971909	1					
ANR	3971997	IfStatement	if ( ptr && ptr -> func && ZEND_USER_CODE ( ptr -> func -> common . type ) )		3971909	0					
ANR	3971998	Condition	ptr && ptr -> func && ZEND_USER_CODE ( ptr -> func -> common . type )	646:6:20165:20222	3971909	0	True				
ANR	3971999	AndExpression	ptr && ptr -> func && ZEND_USER_CODE ( ptr -> func -> common . type )		3971909	0		&&			
ANR	3972000	Identifier	ptr		3971909	0					
ANR	3972001	AndExpression	ptr -> func && ZEND_USER_CODE ( ptr -> func -> common . type )		3971909	1		&&			
ANR	3972002	PtrMemberAccess	ptr -> func		3971909	0					
ANR	3972003	Identifier	ptr		3971909	0					
ANR	3972004	Identifier	func		3971909	1					
ANR	3972005	CallExpression	ZEND_USER_CODE ( ptr -> func -> common . type )		3971909	1					
ANR	3972006	Callee	ZEND_USER_CODE		3971909	0					
ANR	3972007	Identifier	ZEND_USER_CODE		3971909	0					
ANR	3972008	ArgumentList	ptr -> func -> common . type		3971909	1					
ANR	3972009	Argument	ptr -> func -> common . type		3971909	0					
ANR	3972010	MemberAccess	ptr -> func -> common . type		3971909	0					
ANR	3972011	PtrMemberAccess	ptr -> func -> common		3971909	0					
ANR	3972012	PtrMemberAccess	ptr -> func		3971909	0					
ANR	3972013	Identifier	ptr		3971909	0					
ANR	3972014	Identifier	func		3971909	1					
ANR	3972015	Identifier	common		3971909	1					
ANR	3972016	Identifier	type		3971909	1					
ANR	3972017	CompoundStatement		16:66:411:411	3971909	1					
ANR	3972018	ExpressionStatement	"zend_type_error ( ""Argument %d passed to %s%s%s() must %s%s, %s%s given, called in %s on line %d"" , arg_num , fclass , fsep , fname , need_msg , need_kind , given_msg , given_kind , ZSTR_VAL ( ptr -> func -> op_array . filename ) , ptr -> opline -> lineno )"	647:3:20230:20471	3971909	0	True				
ANR	3972019	CallExpression	"zend_type_error ( ""Argument %d passed to %s%s%s() must %s%s, %s%s given, called in %s on line %d"" , arg_num , fclass , fsep , fname , need_msg , need_kind , given_msg , given_kind , ZSTR_VAL ( ptr -> func -> op_array . filename ) , ptr -> opline -> lineno )"		3971909	0					
ANR	3972020	Callee	zend_type_error		3971909	0					
ANR	3972021	Identifier	zend_type_error		3971909	0					
ANR	3972022	ArgumentList	"""Argument %d passed to %s%s%s() must %s%s, %s%s given, called in %s on line %d"""		3971909	1					
ANR	3972023	Argument	"""Argument %d passed to %s%s%s() must %s%s, %s%s given, called in %s on line %d"""		3971909	0					
ANR	3972024	PrimaryExpression	"""Argument %d passed to %s%s%s() must %s%s, %s%s given, called in %s on line %d"""		3971909	0					
ANR	3972025	Argument	arg_num		3971909	1					
ANR	3972026	Identifier	arg_num		3971909	0					
ANR	3972027	Argument	fclass		3971909	2					
ANR	3972028	Identifier	fclass		3971909	0					
ANR	3972029	Argument	fsep		3971909	3					
ANR	3972030	Identifier	fsep		3971909	0					
ANR	3972031	Argument	fname		3971909	4					
ANR	3972032	Identifier	fname		3971909	0					
ANR	3972033	Argument	need_msg		3971909	5					
ANR	3972034	Identifier	need_msg		3971909	0					
ANR	3972035	Argument	need_kind		3971909	6					
ANR	3972036	Identifier	need_kind		3971909	0					
ANR	3972037	Argument	given_msg		3971909	7					
ANR	3972038	Identifier	given_msg		3971909	0					
ANR	3972039	Argument	given_kind		3971909	8					
ANR	3972040	Identifier	given_kind		3971909	0					
ANR	3972041	Argument	ZSTR_VAL ( ptr -> func -> op_array . filename )		3971909	9					
ANR	3972042	CallExpression	ZSTR_VAL ( ptr -> func -> op_array . filename )		3971909	0					
ANR	3972043	Callee	ZSTR_VAL		3971909	0					
ANR	3972044	Identifier	ZSTR_VAL		3971909	0					
ANR	3972045	ArgumentList	ptr -> func -> op_array . filename		3971909	1					
ANR	3972046	Argument	ptr -> func -> op_array . filename		3971909	0					
ANR	3972047	MemberAccess	ptr -> func -> op_array . filename		3971909	0					
ANR	3972048	PtrMemberAccess	ptr -> func -> op_array		3971909	0					
ANR	3972049	PtrMemberAccess	ptr -> func		3971909	0					
ANR	3972050	Identifier	ptr		3971909	0					
ANR	3972051	Identifier	func		3971909	1					
ANR	3972052	Identifier	op_array		3971909	1					
ANR	3972053	Identifier	filename		3971909	1					
ANR	3972054	Argument	ptr -> opline -> lineno		3971909	10					
ANR	3972055	PtrMemberAccess	ptr -> opline -> lineno		3971909	0					
ANR	3972056	PtrMemberAccess	ptr -> opline		3971909	0					
ANR	3972057	Identifier	ptr		3971909	0					
ANR	3972058	Identifier	opline		3971909	1					
ANR	3972059	Identifier	lineno		3971909	1					
ANR	3972060	ElseStatement	else		3971909	0					
ANR	3972061	CompoundStatement		20:9:668:668	3971909	0					
ANR	3972062	ExpressionStatement	"zend_type_error ( ""Argument %d passed to %s%s%s() must %s%s, %s%s given"" , arg_num , fclass , fsep , fname , need_msg , need_kind , given_msg , given_kind )"	651:3:20487:20632	3971909	0	True				
ANR	3972063	CallExpression	"zend_type_error ( ""Argument %d passed to %s%s%s() must %s%s, %s%s given"" , arg_num , fclass , fsep , fname , need_msg , need_kind , given_msg , given_kind )"		3971909	0					
ANR	3972064	Callee	zend_type_error		3971909	0					
ANR	3972065	Identifier	zend_type_error		3971909	0					
ANR	3972066	ArgumentList	"""Argument %d passed to %s%s%s() must %s%s, %s%s given"""		3971909	1					
ANR	3972067	Argument	"""Argument %d passed to %s%s%s() must %s%s, %s%s given"""		3971909	0					
ANR	3972068	PrimaryExpression	"""Argument %d passed to %s%s%s() must %s%s, %s%s given"""		3971909	0					
ANR	3972069	Argument	arg_num		3971909	1					
ANR	3972070	Identifier	arg_num		3971909	0					
ANR	3972071	Argument	fclass		3971909	2					
ANR	3972072	Identifier	fclass		3971909	0					
ANR	3972073	Argument	fsep		3971909	3					
ANR	3972074	Identifier	fsep		3971909	0					
ANR	3972075	Argument	fname		3971909	4					
ANR	3972076	Identifier	fname		3971909	0					
ANR	3972077	Argument	need_msg		3971909	5					
ANR	3972078	Identifier	need_msg		3971909	0					
ANR	3972079	Argument	need_kind		3971909	6					
ANR	3972080	Identifier	need_kind		3971909	0					
ANR	3972081	Argument	given_msg		3971909	7					
ANR	3972082	Identifier	given_msg		3971909	0					
ANR	3972083	Argument	given_kind		3971909	8					
ANR	3972084	Identifier	given_kind		3971909	0					
ANR	3972085	ElseStatement	else		3971909	0					
ANR	3972086	CompoundStatement		23:8:832:832	3971909	0					
ANR	3972087	ExpressionStatement	"zend_type_error ( ""Argument %d passed to %s%s%s() must %s%s, %s%s given"" , arg_num , fclass , fsep , fname , need_msg , need_kind , given_msg , given_kind )"	654:2:20650:20795	3971909	0	True				
ANR	3972088	CallExpression	"zend_type_error ( ""Argument %d passed to %s%s%s() must %s%s, %s%s given"" , arg_num , fclass , fsep , fname , need_msg , need_kind , given_msg , given_kind )"		3971909	0					
ANR	3972089	Callee	zend_type_error		3971909	0					
ANR	3972090	Identifier	zend_type_error		3971909	0					
ANR	3972091	ArgumentList	"""Argument %d passed to %s%s%s() must %s%s, %s%s given"""		3971909	1					
ANR	3972092	Argument	"""Argument %d passed to %s%s%s() must %s%s, %s%s given"""		3971909	0					
ANR	3972093	PrimaryExpression	"""Argument %d passed to %s%s%s() must %s%s, %s%s given"""		3971909	0					
ANR	3972094	Argument	arg_num		3971909	1					
ANR	3972095	Identifier	arg_num		3971909	0					
ANR	3972096	Argument	fclass		3971909	2					
ANR	3972097	Identifier	fclass		3971909	0					
ANR	3972098	Argument	fsep		3971909	3					
ANR	3972099	Identifier	fsep		3971909	0					
ANR	3972100	Argument	fname		3971909	4					
ANR	3972101	Identifier	fname		3971909	0					
ANR	3972102	Argument	need_msg		3971909	5					
ANR	3972103	Identifier	need_msg		3971909	0					
ANR	3972104	Argument	need_kind		3971909	6					
ANR	3972105	Identifier	need_kind		3971909	0					
ANR	3972106	Argument	given_msg		3971909	7					
ANR	3972107	Identifier	given_msg		3971909	0					
ANR	3972108	Argument	given_kind		3971909	8					
ANR	3972109	Identifier	given_kind		3971909	0					
ANR	3972110	ReturnType	static ZEND_COLD void		3971909	1					
ANR	3972111	Identifier	zend_verify_arg_error		3971909	2					
ANR	3972112	ParameterList	"const zend_function * zf , uint32_t arg_num , const char * need_msg , const char * need_kind , const char * given_msg , const char * given_kind , zval * arg"		3971909	3					
ANR	3972113	Parameter	const zend_function * zf	630:44:19667:19689	3971909	0	True				
ANR	3972114	ParameterType	const zend_function *		3971909	0					
ANR	3972115	Identifier	zf		3971909	1					
ANR	3972116	Parameter	uint32_t arg_num	630:69:19692:19707	3971909	1	True				
ANR	3972117	ParameterType	uint32_t		3971909	0					
ANR	3972118	Identifier	arg_num		3971909	1					
ANR	3972119	Parameter	const char * need_msg	630:87:19710:19729	3971909	2	True				
ANR	3972120	ParameterType	const char *		3971909	0					
ANR	3972121	Identifier	need_msg		3971909	1					
ANR	3972122	Parameter	const char * need_kind	630:109:19732:19752	3971909	3	True				
ANR	3972123	ParameterType	const char *		3971909	0					
ANR	3972124	Identifier	need_kind		3971909	1					
ANR	3972125	Parameter	const char * given_msg	630:132:19755:19775	3971909	4	True				
ANR	3972126	ParameterType	const char *		3971909	0					
ANR	3972127	Identifier	given_msg		3971909	1					
ANR	3972128	Parameter	const char * given_kind	630:155:19778:19799	3971909	5	True				
ANR	3972129	ParameterType	const char *		3971909	0					
ANR	3972130	Identifier	given_kind		3971909	1					
ANR	3972131	Parameter	zval * arg	630:179:19802:19810	3971909	6	True				
ANR	3972132	ParameterType	zval *		3971909	0					
ANR	3972133	Identifier	arg		3971909	1					
ANR	3972134	CFGEntryNode	ENTRY		3971909		True				
ANR	3972135	CFGExitNode	EXIT		3971909		True				
ANR	3972136	Symbol	arg_num		3971909						
ANR	3972137	Symbol	ptr -> func -> op_array		3971909						
ANR	3972138	Symbol	* * ptr		3971909						
ANR	3972139	Symbol	ptr -> opline		3971909						
ANR	3972140	Symbol	need_msg		3971909						
ANR	3972141	Symbol	current_execute_data		3971909						
ANR	3972142	Symbol	ptr -> func -> op_array . filename		3971909						
ANR	3972143	Symbol	fsep		3971909						
ANR	3972144	Symbol	* EG		3971909						
ANR	3972145	Symbol	zf -> common		3971909						
ANR	3972146	Symbol	* ptr -> func		3971909						
ANR	3972147	Symbol	ptr -> func		3971909						
ANR	3972148	Symbol	zf -> common . type		3971909						
ANR	3972149	Symbol	* ptr -> opline		3971909						
ANR	3972150	Symbol	ZEND_USER_FUNCTION		3971909						
ANR	3972151	Symbol	arg		3971909						
ANR	3972152	Symbol	* zf -> common . scope		3971909						
ANR	3972153	Symbol	* ptr		3971909						
ANR	3972154	Symbol	ptr -> opline -> lineno		3971909						
ANR	3972155	Symbol	* * zf		3971909						
ANR	3972156	Symbol	zf -> common . scope		3971909						
ANR	3972157	Symbol	fname		3971909						
ANR	3972158	Symbol	fclass		3971909						
ANR	3972159	Symbol	EG		3971909						
ANR	3972160	Symbol	given_msg		3971909						
ANR	3972161	Symbol	EG ( current_execute_data ) -> prev_execute_data		3971909						
ANR	3972162	Symbol	zf		3971909						
ANR	3972163	Symbol	* zf -> common		3971909						
ANR	3972164	Symbol	ptr		3971909						
ANR	3972165	Symbol	ZSTR_VAL		3971909						
ANR	3972166	Symbol	zf -> common . function_name		3971909						
ANR	3972167	Symbol	* zf		3971909						
ANR	3972168	Symbol	given_kind		3971909						
ANR	3972169	Symbol	need_kind		3971909						
ANR	3972170	Symbol	ZEND_USER_CODE		3971909						
ANR	3972171	Symbol	ptr -> func -> common . type		3971909						
ANR	3972172	Symbol	zf -> common . scope -> name		3971909						
ANR	3972173	Symbol	ptr -> func -> common		3971909						
ANR	3972174	Function	is_null_constant	658:0:20803:21138							
ANR	3972175	FunctionDef	is_null_constant (zval * default_value)		3972174	0					
ANR	3972176	CompoundStatement		659:0:20852:21138	3972174	0					
ANR	3972177	IfStatement	if ( Z_CONSTANT_P ( default_value ) )		3972174	0					
ANR	3972178	Condition	Z_CONSTANT_P ( default_value )	660:5:20859:20885	3972174	0	True				
ANR	3972179	CallExpression	Z_CONSTANT_P ( default_value )		3972174	0					
ANR	3972180	Callee	Z_CONSTANT_P		3972174	0					
ANR	3972181	Identifier	Z_CONSTANT_P		3972174	0					
ANR	3972182	ArgumentList	default_value		3972174	1					
ANR	3972183	Argument	default_value		3972174	0					
ANR	3972184	Identifier	default_value		3972174	0					
ANR	3972185	CompoundStatement		3:2:39:52	3972174	1					
ANR	3972186	IdentifierDeclStatement	zval constant ;	661:2:20892:20905	3972174	0	True				
ANR	3972187	IdentifierDecl	constant		3972174	0					
ANR	3972188	IdentifierDeclType	zval		3972174	0					
ANR	3972189	Identifier	constant		3972174	1					
ANR	3972190	ExpressionStatement	"ZVAL_COPY_VALUE ( & constant , default_value )"	663:2:20910:20951	3972174	1	True				
ANR	3972191	CallExpression	"ZVAL_COPY_VALUE ( & constant , default_value )"		3972174	0					
ANR	3972192	Callee	ZVAL_COPY_VALUE		3972174	0					
ANR	3972193	Identifier	ZVAL_COPY_VALUE		3972174	0					
ANR	3972194	ArgumentList	& constant		3972174	1					
ANR	3972195	Argument	& constant		3972174	0					
ANR	3972196	UnaryOperationExpression	& constant		3972174	0					
ANR	3972197	UnaryOperator	&		3972174	0					
ANR	3972198	Identifier	constant		3972174	1					
ANR	3972199	Argument	default_value		3972174	1					
ANR	3972200	Identifier	default_value		3972174	0					
ANR	3972201	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( & constant , 0 , NULL ) != SUCCESS ) )"		3972174	2					
ANR	3972202	Condition	"UNEXPECTED ( zval_update_constant_ex ( & constant , 0 , NULL ) != SUCCESS )"	664:6:20959:21024	3972174	0	True				
ANR	3972203	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( & constant , 0 , NULL ) != SUCCESS )"		3972174	0					
ANR	3972204	Callee	UNEXPECTED		3972174	0					
ANR	3972205	Identifier	UNEXPECTED		3972174	0					
ANR	3972206	ArgumentList	"zval_update_constant_ex ( & constant , 0 , NULL ) != SUCCESS"		3972174	1					
ANR	3972207	Argument	"zval_update_constant_ex ( & constant , 0 , NULL ) != SUCCESS"		3972174	0					
ANR	3972208	EqualityExpression	"zval_update_constant_ex ( & constant , 0 , NULL ) != SUCCESS"		3972174	0		!=			
ANR	3972209	CallExpression	"zval_update_constant_ex ( & constant , 0 , NULL )"		3972174	0					
ANR	3972210	Callee	zval_update_constant_ex		3972174	0					
ANR	3972211	Identifier	zval_update_constant_ex		3972174	0					
ANR	3972212	ArgumentList	& constant		3972174	1					
ANR	3972213	Argument	& constant		3972174	0					
ANR	3972214	UnaryOperationExpression	& constant		3972174	0					
ANR	3972215	UnaryOperator	&		3972174	0					
ANR	3972216	Identifier	constant		3972174	1					
ANR	3972217	Argument	0		3972174	1					
ANR	3972218	PrimaryExpression	0		3972174	0					
ANR	3972219	Argument	NULL		3972174	2					
ANR	3972220	Identifier	NULL		3972174	0					
ANR	3972221	Identifier	SUCCESS		3972174	1					
ANR	3972222	CompoundStatement		6:74:174:174	3972174	1					
ANR	3972223	ReturnStatement	return 0 ;	665:3:21032:21040	3972174	0	True				
ANR	3972224	PrimaryExpression	0		3972174	0					
ANR	3972225	IfStatement	if ( Z_TYPE ( constant ) == IS_NULL )		3972174	3					
ANR	3972226	Condition	Z_TYPE ( constant ) == IS_NULL	667:6:21052:21078	3972174	0	True				
ANR	3972227	EqualityExpression	Z_TYPE ( constant ) == IS_NULL		3972174	0		==			
ANR	3972228	CallExpression	Z_TYPE ( constant )		3972174	0					
ANR	3972229	Callee	Z_TYPE		3972174	0					
ANR	3972230	Identifier	Z_TYPE		3972174	0					
ANR	3972231	ArgumentList	constant		3972174	1					
ANR	3972232	Argument	constant		3972174	0					
ANR	3972233	Identifier	constant		3972174	0					
ANR	3972234	Identifier	IS_NULL		3972174	1					
ANR	3972235	CompoundStatement		9:35:228:228	3972174	1					
ANR	3972236	ReturnStatement	return 1 ;	668:3:21086:21094	3972174	0	True				
ANR	3972237	PrimaryExpression	1		3972174	0					
ANR	3972238	ExpressionStatement	zval_dtor ( & constant )	670:2:21102:21122	3972174	4	True				
ANR	3972239	CallExpression	zval_dtor ( & constant )		3972174	0					
ANR	3972240	Callee	zval_dtor		3972174	0					
ANR	3972241	Identifier	zval_dtor		3972174	0					
ANR	3972242	ArgumentList	& constant		3972174	1					
ANR	3972243	Argument	& constant		3972174	0					
ANR	3972244	UnaryOperationExpression	& constant		3972174	0					
ANR	3972245	UnaryOperator	&		3972174	0					
ANR	3972246	Identifier	constant		3972174	1					
ANR	3972247	ReturnStatement	return 0 ;	672:1:21128:21136	3972174	1	True				
ANR	3972248	PrimaryExpression	0		3972174	0					
ANR	3972249	ReturnType	static int		3972174	1					
ANR	3972250	Identifier	is_null_constant		3972174	2					
ANR	3972251	ParameterList	zval * default_value		3972174	3					
ANR	3972252	Parameter	zval * default_value	658:28:20831:20849	3972174	0	True				
ANR	3972253	ParameterType	zval *		3972174	0					
ANR	3972254	Identifier	default_value		3972174	1					
ANR	3972255	CFGEntryNode	ENTRY		3972174		True				
ANR	3972256	CFGExitNode	EXIT		3972174		True				
ANR	3972257	Symbol	UNEXPECTED		3972174						
ANR	3972258	Symbol	& constant		3972174						
ANR	3972259	Symbol	Z_CONSTANT_P		3972174						
ANR	3972260	Symbol	constant		3972174						
ANR	3972261	Symbol	NULL		3972174						
ANR	3972262	Symbol	SUCCESS		3972174						
ANR	3972263	Symbol	IS_NULL		3972174						
ANR	3972264	Symbol	Z_TYPE		3972174						
ANR	3972265	Symbol	default_value		3972174						
ANR	3972266	Symbol	zval_update_constant_ex		3972174						
ANR	3972267	Function	zend_verify_weak_scalar_type_hint	675:0:21141:21968							
ANR	3972268	FunctionDef	"zend_verify_weak_scalar_type_hint (zend_uchar type_hint , zval * arg)"		3972267	0					
ANR	3972269	CompoundStatement		676:0:21225:21968	3972267	0					
ANR	3972270	SwitchStatement	switch ( type_hint )		3972267	0					
ANR	3972271	Condition	type_hint	677:9:21236:21244	3972267	0	True				
ANR	3972272	Identifier	type_hint		3972267	0					
ANR	3972273	CompoundStatement		2:20:21:21	3972267	1					
ANR	3972274	Label	case _IS_BOOL :	678:2:21251:21264	3972267	0	True				
ANR	3972275	Identifier	_IS_BOOL		3972267	0					
ANR	3972276	CompoundStatement		4:3:45:59	3972267	1					
ANR	3972277	IdentifierDeclStatement	zend_bool dest ;	679:3:21271:21285	3972267	0	True				
ANR	3972278	IdentifierDecl	dest		3972267	0					
ANR	3972279	IdentifierDeclType	zend_bool		3972267	0					
ANR	3972280	Identifier	dest		3972267	1					
ANR	3972281	IfStatement	"if ( ! zend_parse_arg_bool_weak ( arg , & dest ) )"		3972267	1					
ANR	3972282	Condition	"! zend_parse_arg_bool_weak ( arg , & dest )"	681:7:21295:21331	3972267	0	True				
ANR	3972283	UnaryOperationExpression	"! zend_parse_arg_bool_weak ( arg , & dest )"		3972267	0					
ANR	3972284	UnaryOperator	!		3972267	0					
ANR	3972285	CallExpression	"zend_parse_arg_bool_weak ( arg , & dest )"		3972267	1					
ANR	3972286	Callee	zend_parse_arg_bool_weak		3972267	0					
ANR	3972287	Identifier	zend_parse_arg_bool_weak		3972267	0					
ANR	3972288	ArgumentList	arg		3972267	1					
ANR	3972289	Argument	arg		3972267	0					
ANR	3972290	Identifier	arg		3972267	0					
ANR	3972291	Argument	& dest		3972267	1					
ANR	3972292	UnaryOperationExpression	& dest		3972267	0					
ANR	3972293	UnaryOperator	&		3972267	0					
ANR	3972294	Identifier	dest		3972267	1					
ANR	3972295	CompoundStatement		6:46:108:108	3972267	1					
ANR	3972296	ReturnStatement	return 0 ;	682:4:21340:21348	3972267	0	True				
ANR	3972297	PrimaryExpression	0		3972267	0					
ANR	3972298	ExpressionStatement	zval_ptr_dtor ( arg )	684:3:21358:21376	3972267	2	True				
ANR	3972299	CallExpression	zval_ptr_dtor ( arg )		3972267	0					
ANR	3972300	Callee	zval_ptr_dtor		3972267	0					
ANR	3972301	Identifier	zval_ptr_dtor		3972267	0					
ANR	3972302	ArgumentList	arg		3972267	1					
ANR	3972303	Argument	arg		3972267	0					
ANR	3972304	Identifier	arg		3972267	0					
ANR	3972305	ExpressionStatement	"ZVAL_BOOL ( arg , dest )"	685:3:21381:21401	3972267	3	True				
ANR	3972306	CallExpression	"ZVAL_BOOL ( arg , dest )"		3972267	0					
ANR	3972307	Callee	ZVAL_BOOL		3972267	0					
ANR	3972308	Identifier	ZVAL_BOOL		3972267	0					
ANR	3972309	ArgumentList	arg		3972267	1					
ANR	3972310	Argument	arg		3972267	0					
ANR	3972311	Identifier	arg		3972267	0					
ANR	3972312	Argument	dest		3972267	1					
ANR	3972313	Identifier	dest		3972267	0					
ANR	3972314	ReturnStatement	return 1 ;	686:3:21406:21414	3972267	4	True				
ANR	3972315	PrimaryExpression	1		3972267	0					
ANR	3972316	Label	case IS_LONG :	688:2:21422:21434	3972267	2	True				
ANR	3972317	Identifier	IS_LONG		3972267	0					
ANR	3972318	CompoundStatement		14:3:215:229	3972267	3					
ANR	3972319	IdentifierDeclStatement	zend_long dest ;	689:3:21441:21455	3972267	0	True				
ANR	3972320	IdentifierDecl	dest		3972267	0					
ANR	3972321	IdentifierDeclType	zend_long		3972267	0					
ANR	3972322	Identifier	dest		3972267	1					
ANR	3972323	IfStatement	"if ( ! zend_parse_arg_long_weak ( arg , & dest ) )"		3972267	1					
ANR	3972324	Condition	"! zend_parse_arg_long_weak ( arg , & dest )"	691:7:21465:21501	3972267	0	True				
ANR	3972325	UnaryOperationExpression	"! zend_parse_arg_long_weak ( arg , & dest )"		3972267	0					
ANR	3972326	UnaryOperator	!		3972267	0					
ANR	3972327	CallExpression	"zend_parse_arg_long_weak ( arg , & dest )"		3972267	1					
ANR	3972328	Callee	zend_parse_arg_long_weak		3972267	0					
ANR	3972329	Identifier	zend_parse_arg_long_weak		3972267	0					
ANR	3972330	ArgumentList	arg		3972267	1					
ANR	3972331	Argument	arg		3972267	0					
ANR	3972332	Identifier	arg		3972267	0					
ANR	3972333	Argument	& dest		3972267	1					
ANR	3972334	UnaryOperationExpression	& dest		3972267	0					
ANR	3972335	UnaryOperator	&		3972267	0					
ANR	3972336	Identifier	dest		3972267	1					
ANR	3972337	CompoundStatement		16:46:278:278	3972267	1					
ANR	3972338	ReturnStatement	return 0 ;	692:4:21510:21518	3972267	0	True				
ANR	3972339	PrimaryExpression	0		3972267	0					
ANR	3972340	ExpressionStatement	zval_ptr_dtor ( arg )	694:3:21528:21546	3972267	2	True				
ANR	3972341	CallExpression	zval_ptr_dtor ( arg )		3972267	0					
ANR	3972342	Callee	zval_ptr_dtor		3972267	0					
ANR	3972343	Identifier	zval_ptr_dtor		3972267	0					
ANR	3972344	ArgumentList	arg		3972267	1					
ANR	3972345	Argument	arg		3972267	0					
ANR	3972346	Identifier	arg		3972267	0					
ANR	3972347	ExpressionStatement	"ZVAL_LONG ( arg , dest )"	695:3:21551:21571	3972267	3	True				
ANR	3972348	CallExpression	"ZVAL_LONG ( arg , dest )"		3972267	0					
ANR	3972349	Callee	ZVAL_LONG		3972267	0					
ANR	3972350	Identifier	ZVAL_LONG		3972267	0					
ANR	3972351	ArgumentList	arg		3972267	1					
ANR	3972352	Argument	arg		3972267	0					
ANR	3972353	Identifier	arg		3972267	0					
ANR	3972354	Argument	dest		3972267	1					
ANR	3972355	Identifier	dest		3972267	0					
ANR	3972356	ReturnStatement	return 1 ;	696:3:21576:21584	3972267	4	True				
ANR	3972357	PrimaryExpression	1		3972267	0					
ANR	3972358	Label	case IS_DOUBLE :	698:2:21592:21606	3972267	4	True				
ANR	3972359	Identifier	IS_DOUBLE		3972267	0					
ANR	3972360	CompoundStatement		24:3:387:398	3972267	5					
ANR	3972361	IdentifierDeclStatement	double dest ;	699:3:21613:21624	3972267	0	True				
ANR	3972362	IdentifierDecl	dest		3972267	0					
ANR	3972363	IdentifierDeclType	double		3972267	0					
ANR	3972364	Identifier	dest		3972267	1					
ANR	3972365	IfStatement	"if ( ! zend_parse_arg_double_weak ( arg , & dest ) )"		3972267	1					
ANR	3972366	Condition	"! zend_parse_arg_double_weak ( arg , & dest )"	701:7:21634:21672	3972267	0	True				
ANR	3972367	UnaryOperationExpression	"! zend_parse_arg_double_weak ( arg , & dest )"		3972267	0					
ANR	3972368	UnaryOperator	!		3972267	0					
ANR	3972369	CallExpression	"zend_parse_arg_double_weak ( arg , & dest )"		3972267	1					
ANR	3972370	Callee	zend_parse_arg_double_weak		3972267	0					
ANR	3972371	Identifier	zend_parse_arg_double_weak		3972267	0					
ANR	3972372	ArgumentList	arg		3972267	1					
ANR	3972373	Argument	arg		3972267	0					
ANR	3972374	Identifier	arg		3972267	0					
ANR	3972375	Argument	& dest		3972267	1					
ANR	3972376	UnaryOperationExpression	& dest		3972267	0					
ANR	3972377	UnaryOperator	&		3972267	0					
ANR	3972378	Identifier	dest		3972267	1					
ANR	3972379	CompoundStatement		26:48:449:449	3972267	1					
ANR	3972380	ReturnStatement	return 0 ;	702:4:21681:21689	3972267	0	True				
ANR	3972381	PrimaryExpression	0		3972267	0					
ANR	3972382	ExpressionStatement	zval_ptr_dtor ( arg )	704:3:21699:21717	3972267	2	True				
ANR	3972383	CallExpression	zval_ptr_dtor ( arg )		3972267	0					
ANR	3972384	Callee	zval_ptr_dtor		3972267	0					
ANR	3972385	Identifier	zval_ptr_dtor		3972267	0					
ANR	3972386	ArgumentList	arg		3972267	1					
ANR	3972387	Argument	arg		3972267	0					
ANR	3972388	Identifier	arg		3972267	0					
ANR	3972389	ExpressionStatement	"ZVAL_DOUBLE ( arg , dest )"	705:3:21722:21744	3972267	3	True				
ANR	3972390	CallExpression	"ZVAL_DOUBLE ( arg , dest )"		3972267	0					
ANR	3972391	Callee	ZVAL_DOUBLE		3972267	0					
ANR	3972392	Identifier	ZVAL_DOUBLE		3972267	0					
ANR	3972393	ArgumentList	arg		3972267	1					
ANR	3972394	Argument	arg		3972267	0					
ANR	3972395	Identifier	arg		3972267	0					
ANR	3972396	Argument	dest		3972267	1					
ANR	3972397	Identifier	dest		3972267	0					
ANR	3972398	ReturnStatement	return 1 ;	706:3:21749:21757	3972267	4	True				
ANR	3972399	PrimaryExpression	1		3972267	0					
ANR	3972400	Label	case IS_STRING :	708:2:21765:21779	3972267	6	True				
ANR	3972401	Identifier	IS_STRING		3972267	0					
ANR	3972402	CompoundStatement		34:3:560:577	3972267	7					
ANR	3972403	IdentifierDeclStatement	zend_string * dest ;	709:3:21786:21803	3972267	0	True				
ANR	3972404	IdentifierDecl	* dest		3972267	0					
ANR	3972405	IdentifierDeclType	zend_string *		3972267	0					
ANR	3972406	Identifier	dest		3972267	1					
ANR	3972407	IfStatement	"if ( ! zend_parse_arg_str_weak ( arg , & dest ) )"		3972267	1					
ANR	3972408	Condition	"! zend_parse_arg_str_weak ( arg , & dest )"	712:7:21865:21900	3972267	0	True				
ANR	3972409	UnaryOperationExpression	"! zend_parse_arg_str_weak ( arg , & dest )"		3972267	0					
ANR	3972410	UnaryOperator	!		3972267	0					
ANR	3972411	CallExpression	"zend_parse_arg_str_weak ( arg , & dest )"		3972267	1					
ANR	3972412	Callee	zend_parse_arg_str_weak		3972267	0					
ANR	3972413	Identifier	zend_parse_arg_str_weak		3972267	0					
ANR	3972414	ArgumentList	arg		3972267	1					
ANR	3972415	Argument	arg		3972267	0					
ANR	3972416	Identifier	arg		3972267	0					
ANR	3972417	Argument	& dest		3972267	1					
ANR	3972418	UnaryOperationExpression	& dest		3972267	0					
ANR	3972419	UnaryOperator	&		3972267	0					
ANR	3972420	Identifier	dest		3972267	1					
ANR	3972421	CompoundStatement		37:45:677:677	3972267	1					
ANR	3972422	ReturnStatement	return 0 ;	713:4:21909:21917	3972267	0	True				
ANR	3972423	PrimaryExpression	0		3972267	0					
ANR	3972424	ReturnStatement	return 1 ;	715:3:21927:21935	3972267	2	True				
ANR	3972425	PrimaryExpression	1		3972267	0					
ANR	3972426	Label	default :	717:2:21943:21950	3972267	8	True				
ANR	3972427	Identifier	default		3972267	0					
ANR	3972428	ReturnStatement	return 0 ;	718:3:21955:21963	3972267	9	True				
ANR	3972429	PrimaryExpression	0		3972267	0					
ANR	3972430	ReturnType	static zend_bool		3972267	1					
ANR	3972431	Identifier	zend_verify_weak_scalar_type_hint		3972267	2					
ANR	3972432	ParameterList	"zend_uchar type_hint , zval * arg"		3972267	3					
ANR	3972433	Parameter	zend_uchar type_hint	675:51:21192:21211	3972267	0	True				
ANR	3972434	ParameterType	zend_uchar		3972267	0					
ANR	3972435	Identifier	type_hint		3972267	1					
ANR	3972436	Parameter	zval * arg	675:73:21214:21222	3972267	1	True				
ANR	3972437	ParameterType	zval *		3972267	0					
ANR	3972438	Identifier	arg		3972267	1					
ANR	3972439	CFGEntryNode	ENTRY		3972267		True				
ANR	3972440	CFGExitNode	EXIT		3972267		True				
ANR	3972441	Symbol	zend_parse_arg_long_weak		3972267						
ANR	3972442	Symbol	type_hint		3972267						
ANR	3972443	Symbol	zend_parse_arg_double_weak		3972267						
ANR	3972444	Symbol	& dest		3972267						
ANR	3972445	Symbol	zend_parse_arg_bool_weak		3972267						
ANR	3972446	Symbol	arg		3972267						
ANR	3972447	Symbol	dest		3972267						
ANR	3972448	Symbol	zend_parse_arg_str_weak		3972267						
ANR	3972449	Function	zend_verify_scalar_type_hint	722:0:21971:22451							
ANR	3972450	FunctionDef	"zend_verify_scalar_type_hint (zend_uchar type_hint , zval * arg , zend_bool strict)"		3972449	0					
ANR	3972451	CompoundStatement		723:0:22068:22451	3972449	0					
ANR	3972452	IfStatement	if ( UNEXPECTED ( strict ) )		3972449	0					
ANR	3972453	Condition	UNEXPECTED ( strict )	724:5:22075:22092	3972449	0	True				
ANR	3972454	CallExpression	UNEXPECTED ( strict )		3972449	0					
ANR	3972455	Callee	UNEXPECTED		3972449	0					
ANR	3972456	Identifier	UNEXPECTED		3972449	0					
ANR	3972457	ArgumentList	strict		3972449	1					
ANR	3972458	Argument	strict		3972449	0					
ANR	3972459	Identifier	strict		3972449	0					
ANR	3972460	CompoundStatement		2:25:26:26	3972449	1					
ANR	3972461	IfStatement	if ( type_hint != IS_DOUBLE || Z_TYPE_P ( arg ) != IS_LONG )		3972449	0					
ANR	3972462	Condition	type_hint != IS_DOUBLE || Z_TYPE_P ( arg ) != IS_LONG	726:6:22176:22225	3972449	0	True				
ANR	3972463	OrExpression	type_hint != IS_DOUBLE || Z_TYPE_P ( arg ) != IS_LONG		3972449	0		||			
ANR	3972464	EqualityExpression	type_hint != IS_DOUBLE		3972449	0		!=			
ANR	3972465	Identifier	type_hint		3972449	0					
ANR	3972466	Identifier	IS_DOUBLE		3972449	1					
ANR	3972467	EqualityExpression	Z_TYPE_P ( arg ) != IS_LONG		3972449	1		!=			
ANR	3972468	CallExpression	Z_TYPE_P ( arg )		3972449	0					
ANR	3972469	Callee	Z_TYPE_P		3972449	0					
ANR	3972470	Identifier	Z_TYPE_P		3972449	0					
ANR	3972471	ArgumentList	arg		3972449	1					
ANR	3972472	Argument	arg		3972449	0					
ANR	3972473	Identifier	arg		3972449	0					
ANR	3972474	Identifier	IS_LONG		3972449	1					
ANR	3972475	CompoundStatement		4:58:159:159	3972449	1					
ANR	3972476	ReturnStatement	return 0 ;	727:3:22233:22241	3972449	0	True				
ANR	3972477	PrimaryExpression	0		3972449	0					
ANR	3972478	ElseStatement	else		3972449	0					
ANR	3972479	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) )		3972449	0					
ANR	3972480	Condition	UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )	729:12:22259:22294	3972449	0	True				
ANR	3972481	CallExpression	UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3972449	0					
ANR	3972482	Callee	UNEXPECTED		3972449	0					
ANR	3972483	Identifier	UNEXPECTED		3972449	0					
ANR	3972484	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		3972449	1					
ANR	3972485	Argument	Z_TYPE_P ( arg ) == IS_NULL		3972449	0					
ANR	3972486	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3972449	0		==			
ANR	3972487	CallExpression	Z_TYPE_P ( arg )		3972449	0					
ANR	3972488	Callee	Z_TYPE_P		3972449	0					
ANR	3972489	Identifier	Z_TYPE_P		3972449	0					
ANR	3972490	ArgumentList	arg		3972449	1					
ANR	3972491	Argument	arg		3972449	0					
ANR	3972492	Identifier	arg		3972449	0					
ANR	3972493	Identifier	IS_NULL		3972449	1					
ANR	3972494	CompoundStatement		7:50:228:228	3972449	1					
ANR	3972495	ReturnStatement	return 0 ;	731:2:22379:22387	3972449	0	True				
ANR	3972496	PrimaryExpression	0		3972449	0					
ANR	3972497	ReturnStatement	"return zend_verify_weak_scalar_type_hint ( type_hint , arg ) ;"	733:1:22393:22449	3972449	1	True				
ANR	3972498	CallExpression	"zend_verify_weak_scalar_type_hint ( type_hint , arg )"		3972449	0					
ANR	3972499	Callee	zend_verify_weak_scalar_type_hint		3972449	0					
ANR	3972500	Identifier	zend_verify_weak_scalar_type_hint		3972449	0					
ANR	3972501	ArgumentList	type_hint		3972449	1					
ANR	3972502	Argument	type_hint		3972449	0					
ANR	3972503	Identifier	type_hint		3972449	0					
ANR	3972504	Argument	arg		3972449	1					
ANR	3972505	Identifier	arg		3972449	0					
ANR	3972506	ReturnType	static zend_bool		3972449	1					
ANR	3972507	Identifier	zend_verify_scalar_type_hint		3972449	2					
ANR	3972508	ParameterList	"zend_uchar type_hint , zval * arg , zend_bool strict"		3972449	3					
ANR	3972509	Parameter	zend_uchar type_hint	722:46:22017:22036	3972449	0	True				
ANR	3972510	ParameterType	zend_uchar		3972449	0					
ANR	3972511	Identifier	type_hint		3972449	1					
ANR	3972512	Parameter	zval * arg	722:68:22039:22047	3972449	1	True				
ANR	3972513	ParameterType	zval *		3972449	0					
ANR	3972514	Identifier	arg		3972449	1					
ANR	3972515	Parameter	zend_bool strict	722:79:22050:22065	3972449	2	True				
ANR	3972516	ParameterType	zend_bool		3972449	0					
ANR	3972517	Identifier	strict		3972449	1					
ANR	3972518	CFGEntryNode	ENTRY		3972449		True				
ANR	3972519	CFGExitNode	EXIT		3972449		True				
ANR	3972520	Symbol	UNEXPECTED		3972449						
ANR	3972521	Symbol	type_hint		3972449						
ANR	3972522	Symbol	IS_NULL		3972449						
ANR	3972523	Symbol	IS_LONG		3972449						
ANR	3972524	Symbol	arg		3972449						
ANR	3972525	Symbol	IS_DOUBLE		3972449						
ANR	3972526	Symbol	zend_verify_weak_scalar_type_hint		3972449						
ANR	3972527	Symbol	strict		3972449						
ANR	3972528	Symbol	Z_TYPE_P		3972449						
ANR	3972529	Function	zend_verify_internal_arg_type	736:0:22454:24425							
ANR	3972530	FunctionDef	"zend_verify_internal_arg_type (zend_function * zf , uint32_t arg_num , zval * arg)"		3972529	0					
ANR	3972531	CompoundStatement		737:0:22543:24425	3972529	0					
ANR	3972532	IdentifierDeclStatement	zend_internal_arg_info * cur_arg_info ;	738:1:22546:22582	3972529	0	True				
ANR	3972533	IdentifierDecl	* cur_arg_info		3972529	0					
ANR	3972534	IdentifierDeclType	zend_internal_arg_info *		3972529	0					
ANR	3972535	Identifier	cur_arg_info		3972529	1					
ANR	3972536	IdentifierDeclStatement	"char * need_msg , * class_name ;"	739:1:22585:22612	3972529	1	True				
ANR	3972537	IdentifierDecl	* need_msg		3972529	0					
ANR	3972538	IdentifierDeclType	char *		3972529	0					
ANR	3972539	Identifier	need_msg		3972529	1					
ANR	3972540	IdentifierDecl	* class_name		3972529	1					
ANR	3972541	IdentifierDeclType	char *		3972529	0					
ANR	3972542	Identifier	class_name		3972529	1					
ANR	3972543	IdentifierDeclStatement	zend_class_entry * ce ;	740:1:22615:22635	3972529	2	True				
ANR	3972544	IdentifierDecl	* ce		3972529	0					
ANR	3972545	IdentifierDeclType	zend_class_entry *		3972529	0					
ANR	3972546	Identifier	ce		3972529	1					
ANR	3972547	IfStatement	if ( EXPECTED ( arg_num <= zf -> internal_function . num_args ) )		3972529	3					
ANR	3972548	Condition	EXPECTED ( arg_num <= zf -> internal_function . num_args )	742:5:22643:22693	3972529	0	True				
ANR	3972549	CallExpression	EXPECTED ( arg_num <= zf -> internal_function . num_args )		3972529	0					
ANR	3972550	Callee	EXPECTED		3972529	0					
ANR	3972551	Identifier	EXPECTED		3972529	0					
ANR	3972552	ArgumentList	arg_num <= zf -> internal_function . num_args		3972529	1					
ANR	3972553	Argument	arg_num <= zf -> internal_function . num_args		3972529	0					
ANR	3972554	RelationalExpression	arg_num <= zf -> internal_function . num_args		3972529	0		<=			
ANR	3972555	Identifier	arg_num		3972529	0					
ANR	3972556	MemberAccess	zf -> internal_function . num_args		3972529	1					
ANR	3972557	PtrMemberAccess	zf -> internal_function		3972529	0					
ANR	3972558	Identifier	zf		3972529	0					
ANR	3972559	Identifier	internal_function		3972529	1					
ANR	3972560	Identifier	num_args		3972529	1					
ANR	3972561	CompoundStatement		6:58:152:152	3972529	1					
ANR	3972562	ExpressionStatement	cur_arg_info = & zf -> internal_function . arg_info [ arg_num - 1 ]	743:2:22700:22757	3972529	0	True				
ANR	3972563	AssignmentExpression	cur_arg_info = & zf -> internal_function . arg_info [ arg_num - 1 ]		3972529	0		=			
ANR	3972564	Identifier	cur_arg_info		3972529	0					
ANR	3972565	UnaryOperationExpression	& zf -> internal_function . arg_info [ arg_num - 1 ]		3972529	1					
ANR	3972566	UnaryOperator	&		3972529	0					
ANR	3972567	ArrayIndexing	zf -> internal_function . arg_info [ arg_num - 1 ]		3972529	1					
ANR	3972568	MemberAccess	zf -> internal_function . arg_info		3972529	0					
ANR	3972569	PtrMemberAccess	zf -> internal_function		3972529	0					
ANR	3972570	Identifier	zf		3972529	0					
ANR	3972571	Identifier	internal_function		3972529	1					
ANR	3972572	Identifier	arg_info		3972529	1					
ANR	3972573	AdditiveExpression	arg_num - 1		3972529	1		-			
ANR	3972574	Identifier	arg_num		3972529	0					
ANR	3972575	PrimaryExpression	1		3972529	1					
ANR	3972576	ElseStatement	else		3972529	0					
ANR	3972577	IfStatement	if ( zf -> internal_function . fn_flags & ZEND_ACC_VARIADIC )		3972529	0					
ANR	3972578	Condition	zf -> internal_function . fn_flags & ZEND_ACC_VARIADIC	744:12:22771:22820	3972529	0	True				
ANR	3972579	BitAndExpression	zf -> internal_function . fn_flags & ZEND_ACC_VARIADIC		3972529	0		&			
ANR	3972580	MemberAccess	zf -> internal_function . fn_flags		3972529	0					
ANR	3972581	PtrMemberAccess	zf -> internal_function		3972529	0					
ANR	3972582	Identifier	zf		3972529	0					
ANR	3972583	Identifier	internal_function		3972529	1					
ANR	3972584	Identifier	fn_flags		3972529	1					
ANR	3972585	Identifier	ZEND_ACC_VARIADIC		3972529	1					
ANR	3972586	CompoundStatement		8:64:279:279	3972529	1					
ANR	3972587	ExpressionStatement	cur_arg_info = & zf -> internal_function . arg_info [ zf -> internal_function . num_args ]	745:2:22827:22905	3972529	0	True				
ANR	3972588	AssignmentExpression	cur_arg_info = & zf -> internal_function . arg_info [ zf -> internal_function . num_args ]		3972529	0		=			
ANR	3972589	Identifier	cur_arg_info		3972529	0					
ANR	3972590	UnaryOperationExpression	& zf -> internal_function . arg_info [ zf -> internal_function . num_args ]		3972529	1					
ANR	3972591	UnaryOperator	&		3972529	0					
ANR	3972592	ArrayIndexing	zf -> internal_function . arg_info [ zf -> internal_function . num_args ]		3972529	1					
ANR	3972593	MemberAccess	zf -> internal_function . arg_info		3972529	0					
ANR	3972594	PtrMemberAccess	zf -> internal_function		3972529	0					
ANR	3972595	Identifier	zf		3972529	0					
ANR	3972596	Identifier	internal_function		3972529	1					
ANR	3972597	Identifier	arg_info		3972529	1					
ANR	3972598	MemberAccess	zf -> internal_function . num_args		3972529	1					
ANR	3972599	PtrMemberAccess	zf -> internal_function		3972529	0					
ANR	3972600	Identifier	zf		3972529	0					
ANR	3972601	Identifier	internal_function		3972529	1					
ANR	3972602	Identifier	num_args		3972529	1					
ANR	3972603	ElseStatement	else		3972529	0					
ANR	3972604	CompoundStatement		10:8:371:371	3972529	0					
ANR	3972605	ReturnStatement	return 1 ;	747:2:22919:22927	3972529	0	True				
ANR	3972606	PrimaryExpression	1		3972529	0					
ANR	3972607	IfStatement	if ( cur_arg_info -> type_hint )		3972529	4					
ANR	3972608	Condition	cur_arg_info -> type_hint	750:5:22938:22960	3972529	0	True				
ANR	3972609	PtrMemberAccess	cur_arg_info -> type_hint		3972529	0					
ANR	3972610	Identifier	cur_arg_info		3972529	0					
ANR	3972611	Identifier	type_hint		3972529	1					
ANR	3972612	CompoundStatement		14:30:419:419	3972529	1					
ANR	3972613	ExpressionStatement	ZVAL_DEREF ( arg )	751:2:22967:22982	3972529	0	True				
ANR	3972614	CallExpression	ZVAL_DEREF ( arg )		3972529	0					
ANR	3972615	Callee	ZVAL_DEREF		3972529	0					
ANR	3972616	Identifier	ZVAL_DEREF		3972529	0					
ANR	3972617	ArgumentList	arg		3972529	1					
ANR	3972618	Argument	arg		3972529	0					
ANR	3972619	Identifier	arg		3972529	0					
ANR	3972620	IfStatement	if ( EXPECTED ( cur_arg_info -> type_hint == Z_TYPE_P ( arg ) ) )		3972529	1					
ANR	3972621	Condition	EXPECTED ( cur_arg_info -> type_hint == Z_TYPE_P ( arg ) )	752:6:22990:23039	3972529	0	True				
ANR	3972622	CallExpression	EXPECTED ( cur_arg_info -> type_hint == Z_TYPE_P ( arg ) )		3972529	0					
ANR	3972623	Callee	EXPECTED		3972529	0					
ANR	3972624	Identifier	EXPECTED		3972529	0					
ANR	3972625	ArgumentList	cur_arg_info -> type_hint == Z_TYPE_P ( arg )		3972529	1					
ANR	3972626	Argument	cur_arg_info -> type_hint == Z_TYPE_P ( arg )		3972529	0					
ANR	3972627	EqualityExpression	cur_arg_info -> type_hint == Z_TYPE_P ( arg )		3972529	0		==			
ANR	3972628	PtrMemberAccess	cur_arg_info -> type_hint		3972529	0					
ANR	3972629	Identifier	cur_arg_info		3972529	0					
ANR	3972630	Identifier	type_hint		3972529	1					
ANR	3972631	CallExpression	Z_TYPE_P ( arg )		3972529	1					
ANR	3972632	Callee	Z_TYPE_P		3972529	0					
ANR	3972633	Identifier	Z_TYPE_P		3972529	0					
ANR	3972634	ArgumentList	arg		3972529	1					
ANR	3972635	Argument	arg		3972529	0					
ANR	3972636	Identifier	arg		3972529	0					
ANR	3972637	CompoundStatement		16:58:498:498	3972529	1					
ANR	3972638	IfStatement	if ( cur_arg_info -> class_name )		3972529	0					
ANR	3972639	Condition	cur_arg_info -> class_name	753:7:23051:23074	3972529	0	True				
ANR	3972640	PtrMemberAccess	cur_arg_info -> class_name		3972529	0					
ANR	3972641	Identifier	cur_arg_info		3972529	0					
ANR	3972642	Identifier	class_name		3972529	1					
ANR	3972643	CompoundStatement		17:33:533:533	3972529	1					
ANR	3972644	ExpressionStatement	"need_msg = zend_verify_internal_arg_class_kind ( ( zend_internal_arg_info * ) cur_arg_info , & class_name , & ce )"	754:4:23083:23186	3972529	0	True				
ANR	3972645	AssignmentExpression	"need_msg = zend_verify_internal_arg_class_kind ( ( zend_internal_arg_info * ) cur_arg_info , & class_name , & ce )"		3972529	0		=			
ANR	3972646	Identifier	need_msg		3972529	0					
ANR	3972647	CallExpression	"zend_verify_internal_arg_class_kind ( ( zend_internal_arg_info * ) cur_arg_info , & class_name , & ce )"		3972529	1					
ANR	3972648	Callee	zend_verify_internal_arg_class_kind		3972529	0					
ANR	3972649	Identifier	zend_verify_internal_arg_class_kind		3972529	0					
ANR	3972650	ArgumentList	( zend_internal_arg_info * ) cur_arg_info		3972529	1					
ANR	3972651	Argument	( zend_internal_arg_info * ) cur_arg_info		3972529	0					
ANR	3972652	CastExpression	( zend_internal_arg_info * ) cur_arg_info		3972529	0					
ANR	3972653	CastTarget	zend_internal_arg_info *		3972529	0					
ANR	3972654	Identifier	cur_arg_info		3972529	1					
ANR	3972655	Argument	& class_name		3972529	1					
ANR	3972656	UnaryOperationExpression	& class_name		3972529	0					
ANR	3972657	UnaryOperator	&		3972529	0					
ANR	3972658	Identifier	class_name		3972529	1					
ANR	3972659	Argument	& ce		3972529	2					
ANR	3972660	UnaryOperationExpression	& ce		3972529	0					
ANR	3972661	UnaryOperator	&		3972529	0					
ANR	3972662	Identifier	ce		3972529	1					
ANR	3972663	IfStatement	"if ( ! ce || ! instanceof_function ( Z_OBJCE_P ( arg ) , ce ) )"		3972529	1					
ANR	3972664	Condition	"! ce || ! instanceof_function ( Z_OBJCE_P ( arg ) , ce )"	755:8:23196:23242	3972529	0	True				
ANR	3972665	OrExpression	"! ce || ! instanceof_function ( Z_OBJCE_P ( arg ) , ce )"		3972529	0		||			
ANR	3972666	UnaryOperationExpression	! ce		3972529	0					
ANR	3972667	UnaryOperator	!		3972529	0					
ANR	3972668	Identifier	ce		3972529	1					
ANR	3972669	UnaryOperationExpression	"! instanceof_function ( Z_OBJCE_P ( arg ) , ce )"		3972529	1					
ANR	3972670	UnaryOperator	!		3972529	0					
ANR	3972671	CallExpression	"instanceof_function ( Z_OBJCE_P ( arg ) , ce )"		3972529	1					
ANR	3972672	Callee	instanceof_function		3972529	0					
ANR	3972673	Identifier	instanceof_function		3972529	0					
ANR	3972674	ArgumentList	Z_OBJCE_P ( arg )		3972529	1					
ANR	3972675	Argument	Z_OBJCE_P ( arg )		3972529	0					
ANR	3972676	CallExpression	Z_OBJCE_P ( arg )		3972529	0					
ANR	3972677	Callee	Z_OBJCE_P		3972529	0					
ANR	3972678	Identifier	Z_OBJCE_P		3972529	0					
ANR	3972679	ArgumentList	arg		3972529	1					
ANR	3972680	Argument	arg		3972529	0					
ANR	3972681	Identifier	arg		3972529	0					
ANR	3972682	Argument	ce		3972529	1					
ANR	3972683	Identifier	ce		3972529	0					
ANR	3972684	CompoundStatement		19:57:701:701	3972529	1					
ANR	3972685	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , need_msg , class_name , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name ) , arg )"	756:5:23252:23361	3972529	0	True				
ANR	3972686	CallExpression	"zend_verify_arg_error ( zf , arg_num , need_msg , class_name , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name ) , arg )"		3972529	0					
ANR	3972687	Callee	zend_verify_arg_error		3972529	0					
ANR	3972688	Identifier	zend_verify_arg_error		3972529	0					
ANR	3972689	ArgumentList	zf		3972529	1					
ANR	3972690	Argument	zf		3972529	0					
ANR	3972691	Identifier	zf		3972529	0					
ANR	3972692	Argument	arg_num		3972529	1					
ANR	3972693	Identifier	arg_num		3972529	0					
ANR	3972694	Argument	need_msg		3972529	2					
ANR	3972695	Identifier	need_msg		3972529	0					
ANR	3972696	Argument	class_name		3972529	3					
ANR	3972697	Identifier	class_name		3972529	0					
ANR	3972698	Argument	"""instance of """		3972529	4					
ANR	3972699	PrimaryExpression	"""instance of """		3972529	0					
ANR	3972700	Argument	ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name )		3972529	5					
ANR	3972701	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name )		3972529	0					
ANR	3972702	Callee	ZSTR_VAL		3972529	0					
ANR	3972703	Identifier	ZSTR_VAL		3972529	0					
ANR	3972704	ArgumentList	Z_OBJCE_P ( arg ) -> name		3972529	1					
ANR	3972705	Argument	Z_OBJCE_P ( arg ) -> name		3972529	0					
ANR	3972706	PtrMemberAccess	Z_OBJCE_P ( arg ) -> name		3972529	0					
ANR	3972707	CallExpression	Z_OBJCE_P ( arg )		3972529	0					
ANR	3972708	Callee	Z_OBJCE_P		3972529	0					
ANR	3972709	Identifier	Z_OBJCE_P		3972529	0					
ANR	3972710	ArgumentList	arg		3972529	1					
ANR	3972711	Argument	arg		3972529	0					
ANR	3972712	Identifier	arg		3972529	0					
ANR	3972713	Identifier	name		3972529	1					
ANR	3972714	Argument	arg		3972529	6					
ANR	3972715	Identifier	arg		3972529	0					
ANR	3972716	ReturnStatement	return 0 ;	757:5:23368:23376	3972529	1	True				
ANR	3972717	PrimaryExpression	0		3972529	0					
ANR	3972718	ElseStatement	else		3972529	0					
ANR	3972719	IfStatement	if ( Z_TYPE_P ( arg ) != IS_NULL || ! cur_arg_info -> allow_null )		3972529	0					
ANR	3972720	Condition	Z_TYPE_P ( arg ) != IS_NULL || ! cur_arg_info -> allow_null	760:13:23402:23454	3972529	0	True				
ANR	3972721	OrExpression	Z_TYPE_P ( arg ) != IS_NULL || ! cur_arg_info -> allow_null		3972529	0		||			
ANR	3972722	EqualityExpression	Z_TYPE_P ( arg ) != IS_NULL		3972529	0		!=			
ANR	3972723	CallExpression	Z_TYPE_P ( arg )		3972529	0					
ANR	3972724	Callee	Z_TYPE_P		3972529	0					
ANR	3972725	Identifier	Z_TYPE_P		3972529	0					
ANR	3972726	ArgumentList	arg		3972529	1					
ANR	3972727	Argument	arg		3972529	0					
ANR	3972728	Identifier	arg		3972529	0					
ANR	3972729	Identifier	IS_NULL		3972529	1					
ANR	3972730	UnaryOperationExpression	! cur_arg_info -> allow_null		3972529	1					
ANR	3972731	UnaryOperator	!		3972529	0					
ANR	3972732	PtrMemberAccess	cur_arg_info -> allow_null		3972529	1					
ANR	3972733	Identifier	cur_arg_info		3972529	0					
ANR	3972734	Identifier	allow_null		3972529	1					
ANR	3972735	CompoundStatement		24:68:913:913	3972529	1					
ANR	3972736	IfStatement	if ( cur_arg_info -> class_name )		3972529	0					
ANR	3972737	Condition	cur_arg_info -> class_name	761:7:23466:23489	3972529	0	True				
ANR	3972738	PtrMemberAccess	cur_arg_info -> class_name		3972529	0					
ANR	3972739	Identifier	cur_arg_info		3972529	0					
ANR	3972740	Identifier	class_name		3972529	1					
ANR	3972741	CompoundStatement		25:33:948:948	3972529	1					
ANR	3972742	ExpressionStatement	"need_msg = zend_verify_internal_arg_class_kind ( ( zend_internal_arg_info * ) cur_arg_info , & class_name , & ce )"	762:4:23498:23601	3972529	0	True				
ANR	3972743	AssignmentExpression	"need_msg = zend_verify_internal_arg_class_kind ( ( zend_internal_arg_info * ) cur_arg_info , & class_name , & ce )"		3972529	0		=			
ANR	3972744	Identifier	need_msg		3972529	0					
ANR	3972745	CallExpression	"zend_verify_internal_arg_class_kind ( ( zend_internal_arg_info * ) cur_arg_info , & class_name , & ce )"		3972529	1					
ANR	3972746	Callee	zend_verify_internal_arg_class_kind		3972529	0					
ANR	3972747	Identifier	zend_verify_internal_arg_class_kind		3972529	0					
ANR	3972748	ArgumentList	( zend_internal_arg_info * ) cur_arg_info		3972529	1					
ANR	3972749	Argument	( zend_internal_arg_info * ) cur_arg_info		3972529	0					
ANR	3972750	CastExpression	( zend_internal_arg_info * ) cur_arg_info		3972529	0					
ANR	3972751	CastTarget	zend_internal_arg_info *		3972529	0					
ANR	3972752	Identifier	cur_arg_info		3972529	1					
ANR	3972753	Argument	& class_name		3972529	1					
ANR	3972754	UnaryOperationExpression	& class_name		3972529	0					
ANR	3972755	UnaryOperator	&		3972529	0					
ANR	3972756	Identifier	class_name		3972529	1					
ANR	3972757	Argument	& ce		3972529	2					
ANR	3972758	UnaryOperationExpression	& ce		3972529	0					
ANR	3972759	UnaryOperator	&		3972529	0					
ANR	3972760	Identifier	ce		3972529	1					
ANR	3972761	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , need_msg , class_name , zend_zval_type_name ( arg ) , """" , arg )"	763:4:23607:23698	3972529	1	True				
ANR	3972762	CallExpression	"zend_verify_arg_error ( zf , arg_num , need_msg , class_name , zend_zval_type_name ( arg ) , """" , arg )"		3972529	0					
ANR	3972763	Callee	zend_verify_arg_error		3972529	0					
ANR	3972764	Identifier	zend_verify_arg_error		3972529	0					
ANR	3972765	ArgumentList	zf		3972529	1					
ANR	3972766	Argument	zf		3972529	0					
ANR	3972767	Identifier	zf		3972529	0					
ANR	3972768	Argument	arg_num		3972529	1					
ANR	3972769	Identifier	arg_num		3972529	0					
ANR	3972770	Argument	need_msg		3972529	2					
ANR	3972771	Identifier	need_msg		3972529	0					
ANR	3972772	Argument	class_name		3972529	3					
ANR	3972773	Identifier	class_name		3972529	0					
ANR	3972774	Argument	zend_zval_type_name ( arg )		3972529	4					
ANR	3972775	CallExpression	zend_zval_type_name ( arg )		3972529	0					
ANR	3972776	Callee	zend_zval_type_name		3972529	0					
ANR	3972777	Identifier	zend_zval_type_name		3972529	0					
ANR	3972778	ArgumentList	arg		3972529	1					
ANR	3972779	Argument	arg		3972529	0					
ANR	3972780	Identifier	arg		3972529	0					
ANR	3972781	Argument	""""""		3972529	5					
ANR	3972782	PrimaryExpression	""""""		3972529	0					
ANR	3972783	Argument	arg		3972529	6					
ANR	3972784	Identifier	arg		3972529	0					
ANR	3972785	ReturnStatement	return 0 ;	764:4:23704:23712	3972529	2	True				
ANR	3972786	PrimaryExpression	0		3972529	0					
ANR	3972787	ElseStatement	else		3972529	0					
ANR	3972788	IfStatement	if ( cur_arg_info -> type_hint == IS_CALLABLE )		3972529	0					
ANR	3972789	Condition	cur_arg_info -> type_hint == IS_CALLABLE	765:14:23728:23765	3972529	0	True				
ANR	3972790	EqualityExpression	cur_arg_info -> type_hint == IS_CALLABLE		3972529	0		==			
ANR	3972791	PtrMemberAccess	cur_arg_info -> type_hint		3972529	0					
ANR	3972792	Identifier	cur_arg_info		3972529	0					
ANR	3972793	Identifier	type_hint		3972529	1					
ANR	3972794	Identifier	IS_CALLABLE		3972529	1					
ANR	3972795	CompoundStatement		29:54:1224:1224	3972529	1					
ANR	3972796	IfStatement	"if ( ! zend_is_callable ( arg , IS_CALLABLE_CHECK_SILENT , NULL ) )"		3972529	0					
ANR	3972797	Condition	"! zend_is_callable ( arg , IS_CALLABLE_CHECK_SILENT , NULL )"	766:8:23778:23831	3972529	0	True				
ANR	3972798	UnaryOperationExpression	"! zend_is_callable ( arg , IS_CALLABLE_CHECK_SILENT , NULL )"		3972529	0					
ANR	3972799	UnaryOperator	!		3972529	0					
ANR	3972800	CallExpression	"zend_is_callable ( arg , IS_CALLABLE_CHECK_SILENT , NULL )"		3972529	1					
ANR	3972801	Callee	zend_is_callable		3972529	0					
ANR	3972802	Identifier	zend_is_callable		3972529	0					
ANR	3972803	ArgumentList	arg		3972529	1					
ANR	3972804	Argument	arg		3972529	0					
ANR	3972805	Identifier	arg		3972529	0					
ANR	3972806	Argument	IS_CALLABLE_CHECK_SILENT		3972529	1					
ANR	3972807	Identifier	IS_CALLABLE_CHECK_SILENT		3972529	0					
ANR	3972808	Argument	NULL		3972529	2					
ANR	3972809	Identifier	NULL		3972529	0					
ANR	3972810	CompoundStatement		30:64:1290:1290	3972529	1					
ANR	3972811	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , ""be callable"" , """" , zend_zval_type_name ( arg ) , """" , arg )"	767:5:23841:23929	3972529	0	True				
ANR	3972812	CallExpression	"zend_verify_arg_error ( zf , arg_num , ""be callable"" , """" , zend_zval_type_name ( arg ) , """" , arg )"		3972529	0					
ANR	3972813	Callee	zend_verify_arg_error		3972529	0					
ANR	3972814	Identifier	zend_verify_arg_error		3972529	0					
ANR	3972815	ArgumentList	zf		3972529	1					
ANR	3972816	Argument	zf		3972529	0					
ANR	3972817	Identifier	zf		3972529	0					
ANR	3972818	Argument	arg_num		3972529	1					
ANR	3972819	Identifier	arg_num		3972529	0					
ANR	3972820	Argument	"""be callable"""		3972529	2					
ANR	3972821	PrimaryExpression	"""be callable"""		3972529	0					
ANR	3972822	Argument	""""""		3972529	3					
ANR	3972823	PrimaryExpression	""""""		3972529	0					
ANR	3972824	Argument	zend_zval_type_name ( arg )		3972529	4					
ANR	3972825	CallExpression	zend_zval_type_name ( arg )		3972529	0					
ANR	3972826	Callee	zend_zval_type_name		3972529	0					
ANR	3972827	Identifier	zend_zval_type_name		3972529	0					
ANR	3972828	ArgumentList	arg		3972529	1					
ANR	3972829	Argument	arg		3972529	0					
ANR	3972830	Identifier	arg		3972529	0					
ANR	3972831	Argument	""""""		3972529	5					
ANR	3972832	PrimaryExpression	""""""		3972529	0					
ANR	3972833	Argument	arg		3972529	6					
ANR	3972834	Identifier	arg		3972529	0					
ANR	3972835	ReturnStatement	return 0 ;	768:5:23936:23944	3972529	1	True				
ANR	3972836	PrimaryExpression	0		3972529	0					
ANR	3972837	ElseStatement	else		3972529	0					
ANR	3972838	IfStatement	if ( cur_arg_info -> type_hint == _IS_BOOL && EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE ) )		3972529	0					
ANR	3972839	Condition	cur_arg_info -> type_hint == _IS_BOOL && EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE )	770:14:23966:24081	3972529	0	True				
ANR	3972840	AndExpression	cur_arg_info -> type_hint == _IS_BOOL && EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE )		3972529	0		&&			
ANR	3972841	EqualityExpression	cur_arg_info -> type_hint == _IS_BOOL		3972529	0		==			
ANR	3972842	PtrMemberAccess	cur_arg_info -> type_hint		3972529	0					
ANR	3972843	Identifier	cur_arg_info		3972529	0					
ANR	3972844	Identifier	type_hint		3972529	1					
ANR	3972845	Identifier	_IS_BOOL		3972529	1					
ANR	3972846	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE )		3972529	1					
ANR	3972847	Callee	EXPECTED		3972529	0					
ANR	3972848	Identifier	EXPECTED		3972529	0					
ANR	3972849	ArgumentList	Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE		3972529	1					
ANR	3972850	Argument	Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE		3972529	0					
ANR	3972851	OrExpression	Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE		3972529	0		||			
ANR	3972852	EqualityExpression	Z_TYPE_P ( arg ) == IS_FALSE		3972529	0		==			
ANR	3972853	CallExpression	Z_TYPE_P ( arg )		3972529	0					
ANR	3972854	Callee	Z_TYPE_P		3972529	0					
ANR	3972855	Identifier	Z_TYPE_P		3972529	0					
ANR	3972856	ArgumentList	arg		3972529	1					
ANR	3972857	Argument	arg		3972529	0					
ANR	3972858	Identifier	arg		3972529	0					
ANR	3972859	Identifier	IS_FALSE		3972529	1					
ANR	3972860	EqualityExpression	Z_TYPE_P ( arg ) == IS_TRUE		3972529	1		==			
ANR	3972861	CallExpression	Z_TYPE_P ( arg )		3972529	0					
ANR	3972862	Callee	Z_TYPE_P		3972529	0					
ANR	3972863	Identifier	Z_TYPE_P		3972529	0					
ANR	3972864	ArgumentList	arg		3972529	1					
ANR	3972865	Argument	arg		3972529	0					
ANR	3972866	Identifier	arg		3972529	0					
ANR	3972867	Identifier	IS_TRUE		3972529	1					
ANR	3972868	CompoundStatement		35:79:1540:1540	3972529	1					
ANR	3972869	ElseStatement	else		3972529	0					
ANR	3972870	IfStatement	"if ( UNEXPECTED ( ! zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_CALL_USES_STRICT_TYPES ( EG ( current_execute_data ) ) ) ) )"		3972529	0					
ANR	3972871	Condition	"UNEXPECTED ( ! zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_CALL_USES_STRICT_TYPES ( EG ( current_execute_data ) ) ) )"	773:14:24115:24240	3972529	0	True				
ANR	3972872	CallExpression	"UNEXPECTED ( ! zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_CALL_USES_STRICT_TYPES ( EG ( current_execute_data ) ) ) )"		3972529	0					
ANR	3972873	Callee	UNEXPECTED		3972529	0					
ANR	3972874	Identifier	UNEXPECTED		3972529	0					
ANR	3972875	ArgumentList	"! zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_CALL_USES_STRICT_TYPES ( EG ( current_execute_data ) ) )"		3972529	1					
ANR	3972876	Argument	"! zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_CALL_USES_STRICT_TYPES ( EG ( current_execute_data ) ) )"		3972529	0					
ANR	3972877	UnaryOperationExpression	"! zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_CALL_USES_STRICT_TYPES ( EG ( current_execute_data ) ) )"		3972529	0					
ANR	3972878	UnaryOperator	!		3972529	0					
ANR	3972879	CallExpression	"zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_CALL_USES_STRICT_TYPES ( EG ( current_execute_data ) ) )"		3972529	1					
ANR	3972880	Callee	zend_verify_scalar_type_hint		3972529	0					
ANR	3972881	Identifier	zend_verify_scalar_type_hint		3972529	0					
ANR	3972882	ArgumentList	cur_arg_info -> type_hint		3972529	1					
ANR	3972883	Argument	cur_arg_info -> type_hint		3972529	0					
ANR	3972884	PtrMemberAccess	cur_arg_info -> type_hint		3972529	0					
ANR	3972885	Identifier	cur_arg_info		3972529	0					
ANR	3972886	Identifier	type_hint		3972529	1					
ANR	3972887	Argument	arg		3972529	1					
ANR	3972888	Identifier	arg		3972529	0					
ANR	3972889	Argument	ZEND_CALL_USES_STRICT_TYPES ( EG ( current_execute_data ) )		3972529	2					
ANR	3972890	CallExpression	ZEND_CALL_USES_STRICT_TYPES ( EG ( current_execute_data ) )		3972529	0					
ANR	3972891	Callee	ZEND_CALL_USES_STRICT_TYPES		3972529	0					
ANR	3972892	Identifier	ZEND_CALL_USES_STRICT_TYPES		3972529	0					
ANR	3972893	ArgumentList	EG ( current_execute_data )		3972529	1					
ANR	3972894	Argument	EG ( current_execute_data )		3972529	0					
ANR	3972895	CallExpression	EG ( current_execute_data )		3972529	0					
ANR	3972896	Callee	EG		3972529	0					
ANR	3972897	Identifier	EG		3972529	0					
ANR	3972898	ArgumentList	current_execute_data		3972529	1					
ANR	3972899	Argument	current_execute_data		3972529	0					
ANR	3972900	Identifier	current_execute_data		3972529	0					
ANR	3972901	CompoundStatement		37:142:1699:1699	3972529	1					
ANR	3972902	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , ""be of the type "" , zend_get_type_by_const ( cur_arg_info -> type_hint ) , zend_zval_type_name ( arg ) , """" , arg )"	774:4:24249:24386	3972529	0	True				
ANR	3972903	CallExpression	"zend_verify_arg_error ( zf , arg_num , ""be of the type "" , zend_get_type_by_const ( cur_arg_info -> type_hint ) , zend_zval_type_name ( arg ) , """" , arg )"		3972529	0					
ANR	3972904	Callee	zend_verify_arg_error		3972529	0					
ANR	3972905	Identifier	zend_verify_arg_error		3972529	0					
ANR	3972906	ArgumentList	zf		3972529	1					
ANR	3972907	Argument	zf		3972529	0					
ANR	3972908	Identifier	zf		3972529	0					
ANR	3972909	Argument	arg_num		3972529	1					
ANR	3972910	Identifier	arg_num		3972529	0					
ANR	3972911	Argument	"""be of the type """		3972529	2					
ANR	3972912	PrimaryExpression	"""be of the type """		3972529	0					
ANR	3972913	Argument	zend_get_type_by_const ( cur_arg_info -> type_hint )		3972529	3					
ANR	3972914	CallExpression	zend_get_type_by_const ( cur_arg_info -> type_hint )		3972529	0					
ANR	3972915	Callee	zend_get_type_by_const		3972529	0					
ANR	3972916	Identifier	zend_get_type_by_const		3972529	0					
ANR	3972917	ArgumentList	cur_arg_info -> type_hint		3972529	1					
ANR	3972918	Argument	cur_arg_info -> type_hint		3972529	0					
ANR	3972919	PtrMemberAccess	cur_arg_info -> type_hint		3972529	0					
ANR	3972920	Identifier	cur_arg_info		3972529	0					
ANR	3972921	Identifier	type_hint		3972529	1					
ANR	3972922	Argument	zend_zval_type_name ( arg )		3972529	4					
ANR	3972923	CallExpression	zend_zval_type_name ( arg )		3972529	0					
ANR	3972924	Callee	zend_zval_type_name		3972529	0					
ANR	3972925	Identifier	zend_zval_type_name		3972529	0					
ANR	3972926	ArgumentList	arg		3972529	1					
ANR	3972927	Argument	arg		3972529	0					
ANR	3972928	Identifier	arg		3972529	0					
ANR	3972929	Argument	""""""		3972529	5					
ANR	3972930	PrimaryExpression	""""""		3972529	0					
ANR	3972931	Argument	arg		3972529	6					
ANR	3972932	Identifier	arg		3972529	0					
ANR	3972933	ReturnStatement	return 0 ;	775:4:24392:24400	3972529	1	True				
ANR	3972934	PrimaryExpression	0		3972529	0					
ANR	3972935	ReturnStatement	return 1 ;	779:1:24415:24423	3972529	5	True				
ANR	3972936	PrimaryExpression	1		3972529	0					
ANR	3972937	ReturnType	static int		3972529	1					
ANR	3972938	Identifier	zend_verify_internal_arg_type		3972529	2					
ANR	3972939	ParameterList	"zend_function * zf , uint32_t arg_num , zval * arg"		3972529	3					
ANR	3972940	Parameter	zend_function * zf	736:41:22495:22511	3972529	0	True				
ANR	3972941	ParameterType	zend_function *		3972529	0					
ANR	3972942	Identifier	zf		3972529	1					
ANR	3972943	Parameter	uint32_t arg_num	736:60:22514:22529	3972529	1	True				
ANR	3972944	ParameterType	uint32_t		3972529	0					
ANR	3972945	Identifier	arg_num		3972529	1					
ANR	3972946	Parameter	zval * arg	736:78:22532:22540	3972529	2	True				
ANR	3972947	ParameterType	zval *		3972529	0					
ANR	3972948	Identifier	arg		3972529	1					
ANR	3972949	CFGEntryNode	ENTRY		3972529		True				
ANR	3972950	CFGExitNode	EXIT		3972529		True				
ANR	3972951	Symbol	arg_num		3972529						
ANR	3972952	Symbol	instanceof_function		3972529						
ANR	3972953	Symbol	need_msg		3972529						
ANR	3972954	Symbol	current_execute_data		3972529						
ANR	3972955	Symbol	& class_name		3972529						
ANR	3972956	Symbol	zend_zval_type_name		3972529						
ANR	3972957	Symbol	cur_arg_info -> class_name		3972529						
ANR	3972958	Symbol	& ce		3972529						
ANR	3972959	Symbol	cur_arg_info -> allow_null		3972529						
ANR	3972960	Symbol	cur_arg_info		3972529						
ANR	3972961	Symbol	UNEXPECTED		3972529						
ANR	3972962	Symbol	* cur_arg_info		3972529						
ANR	3972963	Symbol	_IS_BOOL		3972529						
ANR	3972964	Symbol	ZEND_CALL_USES_STRICT_TYPES		3972529						
ANR	3972965	Symbol	IS_NULL		3972529						
ANR	3972966	Symbol	arg		3972529						
ANR	3972967	Symbol	zf -> internal_function		3972529						
ANR	3972968	Symbol	zf -> internal_function . arg_info		3972529						
ANR	3972969	Symbol	Z_OBJCE_P		3972529						
ANR	3972970	Symbol	cur_arg_info -> type_hint		3972529						
ANR	3972971	Symbol	class_name		3972529						
ANR	3972972	Symbol	IS_FALSE		3972529						
ANR	3972973	Symbol	* Z_OBJCE_P		3972529						
ANR	3972974	Symbol	IS_CALLABLE		3972529						
ANR	3972975	Symbol	zend_get_type_by_const		3972529						
ANR	3972976	Symbol	ce		3972529						
ANR	3972977	Symbol	EG		3972529						
ANR	3972978	Symbol	NULL		3972529						
ANR	3972979	Symbol	zf -> internal_function . num_args		3972529						
ANR	3972980	Symbol	zend_is_callable		3972529						
ANR	3972981	Symbol	IS_TRUE		3972529						
ANR	3972982	Symbol	zend_verify_internal_arg_class_kind		3972529						
ANR	3972983	Symbol	zf		3972529						
ANR	3972984	Symbol	Z_TYPE_P		3972529						
ANR	3972985	Symbol	ZSTR_VAL		3972529						
ANR	3972986	Symbol	* zf		3972529						
ANR	3972987	Symbol	ZEND_ACC_VARIADIC		3972529						
ANR	3972988	Symbol	zend_verify_scalar_type_hint		3972529						
ANR	3972989	Symbol	Z_OBJCE_P ( arg ) -> name		3972529						
ANR	3972990	Symbol	IS_CALLABLE_CHECK_SILENT		3972529						
ANR	3972991	Symbol	EXPECTED		3972529						
ANR	3972992	Symbol	zf -> internal_function . fn_flags		3972529						
ANR	3972993	Function	zend_verify_arg_type	782:0:24428:27401							
ANR	3972994	FunctionDef	"zend_verify_arg_type (zend_function * zf , uint32_t arg_num , zval * arg , zval * default_value , void * * cache_slot)"		3972993	0					
ANR	3972995	CompoundStatement		783:0:24567:27401	3972993	0					
ANR	3972996	IdentifierDeclStatement	zend_arg_info * cur_arg_info ;	784:1:24570:24597	3972993	0	True				
ANR	3972997	IdentifierDecl	* cur_arg_info		3972993	0					
ANR	3972998	IdentifierDeclType	zend_arg_info *		3972993	0					
ANR	3972999	Identifier	cur_arg_info		3972993	1					
ANR	3973000	IdentifierDeclStatement	char * need_msg ;	785:1:24600:24614	3972993	1	True				
ANR	3973001	IdentifierDecl	* need_msg		3972993	0					
ANR	3973002	IdentifierDeclType	char *		3972993	0					
ANR	3973003	Identifier	need_msg		3972993	1					
ANR	3973004	IdentifierDeclStatement	zend_class_entry * ce ;	786:1:24617:24637	3972993	2	True				
ANR	3973005	IdentifierDecl	* ce		3972993	0					
ANR	3973006	IdentifierDeclType	zend_class_entry *		3972993	0					
ANR	3973007	Identifier	ce		3972993	1					
ANR	3973008	IfStatement	if ( EXPECTED ( arg_num <= zf -> common . num_args ) )		3972993	3					
ANR	3973009	Condition	EXPECTED ( arg_num <= zf -> common . num_args )	788:5:24645:24684	3972993	0	True				
ANR	3973010	CallExpression	EXPECTED ( arg_num <= zf -> common . num_args )		3972993	0					
ANR	3973011	Callee	EXPECTED		3972993	0					
ANR	3973012	Identifier	EXPECTED		3972993	0					
ANR	3973013	ArgumentList	arg_num <= zf -> common . num_args		3972993	1					
ANR	3973014	Argument	arg_num <= zf -> common . num_args		3972993	0					
ANR	3973015	RelationalExpression	arg_num <= zf -> common . num_args		3972993	0		<=			
ANR	3973016	Identifier	arg_num		3972993	0					
ANR	3973017	MemberAccess	zf -> common . num_args		3972993	1					
ANR	3973018	PtrMemberAccess	zf -> common		3972993	0					
ANR	3973019	Identifier	zf		3972993	0					
ANR	3973020	Identifier	common		3972993	1					
ANR	3973021	Identifier	num_args		3972993	1					
ANR	3973022	CompoundStatement		6:47:119:119	3972993	1					
ANR	3973023	ExpressionStatement	cur_arg_info = & zf -> common . arg_info [ arg_num - 1 ]	789:2:24691:24737	3972993	0	True				
ANR	3973024	AssignmentExpression	cur_arg_info = & zf -> common . arg_info [ arg_num - 1 ]		3972993	0		=			
ANR	3973025	Identifier	cur_arg_info		3972993	0					
ANR	3973026	UnaryOperationExpression	& zf -> common . arg_info [ arg_num - 1 ]		3972993	1					
ANR	3973027	UnaryOperator	&		3972993	0					
ANR	3973028	ArrayIndexing	zf -> common . arg_info [ arg_num - 1 ]		3972993	1					
ANR	3973029	MemberAccess	zf -> common . arg_info		3972993	0					
ANR	3973030	PtrMemberAccess	zf -> common		3972993	0					
ANR	3973031	Identifier	zf		3972993	0					
ANR	3973032	Identifier	common		3972993	1					
ANR	3973033	Identifier	arg_info		3972993	1					
ANR	3973034	AdditiveExpression	arg_num - 1		3972993	1		-			
ANR	3973035	Identifier	arg_num		3972993	0					
ANR	3973036	PrimaryExpression	1		3972993	1					
ANR	3973037	ElseStatement	else		3972993	0					
ANR	3973038	IfStatement	if ( UNEXPECTED ( zf -> common . fn_flags & ZEND_ACC_VARIADIC ) )		3972993	0					
ANR	3973039	Condition	UNEXPECTED ( zf -> common . fn_flags & ZEND_ACC_VARIADIC )	790:12:24751:24801	3972993	0	True				
ANR	3973040	CallExpression	UNEXPECTED ( zf -> common . fn_flags & ZEND_ACC_VARIADIC )		3972993	0					
ANR	3973041	Callee	UNEXPECTED		3972993	0					
ANR	3973042	Identifier	UNEXPECTED		3972993	0					
ANR	3973043	ArgumentList	zf -> common . fn_flags & ZEND_ACC_VARIADIC		3972993	1					
ANR	3973044	Argument	zf -> common . fn_flags & ZEND_ACC_VARIADIC		3972993	0					
ANR	3973045	BitAndExpression	zf -> common . fn_flags & ZEND_ACC_VARIADIC		3972993	0		&			
ANR	3973046	MemberAccess	zf -> common . fn_flags		3972993	0					
ANR	3973047	PtrMemberAccess	zf -> common		3972993	0					
ANR	3973048	Identifier	zf		3972993	0					
ANR	3973049	Identifier	common		3972993	1					
ANR	3973050	Identifier	fn_flags		3972993	1					
ANR	3973051	Identifier	ZEND_ACC_VARIADIC		3972993	1					
ANR	3973052	CompoundStatement		8:65:236:236	3972993	1					
ANR	3973053	ExpressionStatement	cur_arg_info = & zf -> common . arg_info [ zf -> common . num_args ]	791:2:24808:24864	3972993	0	True				
ANR	3973054	AssignmentExpression	cur_arg_info = & zf -> common . arg_info [ zf -> common . num_args ]		3972993	0		=			
ANR	3973055	Identifier	cur_arg_info		3972993	0					
ANR	3973056	UnaryOperationExpression	& zf -> common . arg_info [ zf -> common . num_args ]		3972993	1					
ANR	3973057	UnaryOperator	&		3972993	0					
ANR	3973058	ArrayIndexing	zf -> common . arg_info [ zf -> common . num_args ]		3972993	1					
ANR	3973059	MemberAccess	zf -> common . arg_info		3972993	0					
ANR	3973060	PtrMemberAccess	zf -> common		3972993	0					
ANR	3973061	Identifier	zf		3972993	0					
ANR	3973062	Identifier	common		3972993	1					
ANR	3973063	Identifier	arg_info		3972993	1					
ANR	3973064	MemberAccess	zf -> common . num_args		3972993	1					
ANR	3973065	PtrMemberAccess	zf -> common		3972993	0					
ANR	3973066	Identifier	zf		3972993	0					
ANR	3973067	Identifier	common		3972993	1					
ANR	3973068	Identifier	num_args		3972993	1					
ANR	3973069	ElseStatement	else		3972993	0					
ANR	3973070	CompoundStatement		10:8:306:306	3972993	0					
ANR	3973071	ReturnStatement	return 1 ;	793:2:24878:24886	3972993	0	True				
ANR	3973072	PrimaryExpression	1		3972993	0					
ANR	3973073	IfStatement	if ( cur_arg_info -> type_hint )		3972993	4					
ANR	3973074	Condition	cur_arg_info -> type_hint	796:5:24897:24919	3972993	0	True				
ANR	3973075	PtrMemberAccess	cur_arg_info -> type_hint		3972993	0					
ANR	3973076	Identifier	cur_arg_info		3972993	0					
ANR	3973077	Identifier	type_hint		3972993	1					
ANR	3973078	CompoundStatement		14:30:354:354	3972993	1					
ANR	3973079	ExpressionStatement	ZVAL_DEREF ( arg )	797:2:24926:24941	3972993	0	True				
ANR	3973080	CallExpression	ZVAL_DEREF ( arg )		3972993	0					
ANR	3973081	Callee	ZVAL_DEREF		3972993	0					
ANR	3973082	Identifier	ZVAL_DEREF		3972993	0					
ANR	3973083	ArgumentList	arg		3972993	1					
ANR	3973084	Argument	arg		3972993	0					
ANR	3973085	Identifier	arg		3972993	0					
ANR	3973086	IfStatement	if ( EXPECTED ( cur_arg_info -> type_hint == Z_TYPE_P ( arg ) ) )		3972993	1					
ANR	3973087	Condition	EXPECTED ( cur_arg_info -> type_hint == Z_TYPE_P ( arg ) )	798:6:24949:24998	3972993	0	True				
ANR	3973088	CallExpression	EXPECTED ( cur_arg_info -> type_hint == Z_TYPE_P ( arg ) )		3972993	0					
ANR	3973089	Callee	EXPECTED		3972993	0					
ANR	3973090	Identifier	EXPECTED		3972993	0					
ANR	3973091	ArgumentList	cur_arg_info -> type_hint == Z_TYPE_P ( arg )		3972993	1					
ANR	3973092	Argument	cur_arg_info -> type_hint == Z_TYPE_P ( arg )		3972993	0					
ANR	3973093	EqualityExpression	cur_arg_info -> type_hint == Z_TYPE_P ( arg )		3972993	0		==			
ANR	3973094	PtrMemberAccess	cur_arg_info -> type_hint		3972993	0					
ANR	3973095	Identifier	cur_arg_info		3972993	0					
ANR	3973096	Identifier	type_hint		3972993	1					
ANR	3973097	CallExpression	Z_TYPE_P ( arg )		3972993	1					
ANR	3973098	Callee	Z_TYPE_P		3972993	0					
ANR	3973099	Identifier	Z_TYPE_P		3972993	0					
ANR	3973100	ArgumentList	arg		3972993	1					
ANR	3973101	Argument	arg		3972993	0					
ANR	3973102	Identifier	arg		3972993	0					
ANR	3973103	CompoundStatement		16:58:433:433	3972993	1					
ANR	3973104	IfStatement	if ( cur_arg_info -> class_name )		3972993	0					
ANR	3973105	Condition	cur_arg_info -> class_name	799:7:25010:25033	3972993	0	True				
ANR	3973106	PtrMemberAccess	cur_arg_info -> class_name		3972993	0					
ANR	3973107	Identifier	cur_arg_info		3972993	0					
ANR	3973108	Identifier	class_name		3972993	1					
ANR	3973109	CompoundStatement		17:33:468:468	3972993	1					
ANR	3973110	IfStatement	if ( EXPECTED ( * cache_slot ) )		3972993	0					
ANR	3973111	Condition	EXPECTED ( * cache_slot )	800:8:25046:25066	3972993	0	True				
ANR	3973112	CallExpression	EXPECTED ( * cache_slot )		3972993	0					
ANR	3973113	Callee	EXPECTED		3972993	0					
ANR	3973114	Identifier	EXPECTED		3972993	0					
ANR	3973115	ArgumentList	* cache_slot		3972993	1					
ANR	3973116	Argument	* cache_slot		3972993	0					
ANR	3973117	UnaryOperationExpression	* cache_slot		3972993	0					
ANR	3973118	UnaryOperator	*		3972993	0					
ANR	3973119	Identifier	cache_slot		3972993	1					
ANR	3973120	CompoundStatement		18:31:501:501	3972993	1					
ANR	3973121	ExpressionStatement	ce = ( zend_class_entry * ) * cache_slot	801:5:25076:25111	3972993	0	True				
ANR	3973122	AssignmentExpression	ce = ( zend_class_entry * ) * cache_slot		3972993	0		=			
ANR	3973123	Identifier	ce		3972993	0					
ANR	3973124	CastExpression	( zend_class_entry * ) * cache_slot		3972993	1					
ANR	3973125	CastTarget	zend_class_entry *		3972993	0					
ANR	3973126	UnaryOperationExpression	* cache_slot		3972993	1					
ANR	3973127	UnaryOperator	*		3972993	0					
ANR	3973128	Identifier	cache_slot		3972993	1					
ANR	3973129	ElseStatement	else		3972993	0					
ANR	3973130	CompoundStatement		20:11:556:556	3972993	0					
ANR	3973131	ExpressionStatement	ce = zend_verify_arg_class_kind ( cur_arg_info )	803:5:25131:25176	3972993	0	True				
ANR	3973132	AssignmentExpression	ce = zend_verify_arg_class_kind ( cur_arg_info )		3972993	0		=			
ANR	3973133	Identifier	ce		3972993	0					
ANR	3973134	CallExpression	zend_verify_arg_class_kind ( cur_arg_info )		3972993	1					
ANR	3973135	Callee	zend_verify_arg_class_kind		3972993	0					
ANR	3973136	Identifier	zend_verify_arg_class_kind		3972993	0					
ANR	3973137	ArgumentList	cur_arg_info		3972993	1					
ANR	3973138	Argument	cur_arg_info		3972993	0					
ANR	3973139	Identifier	cur_arg_info		3972993	0					
ANR	3973140	IfStatement	if ( UNEXPECTED ( ! ce ) )		3972993	1					
ANR	3973141	Condition	UNEXPECTED ( ! ce )	804:9:25187:25201	3972993	0	True				
ANR	3973142	CallExpression	UNEXPECTED ( ! ce )		3972993	0					
ANR	3973143	Callee	UNEXPECTED		3972993	0					
ANR	3973144	Identifier	UNEXPECTED		3972993	0					
ANR	3973145	ArgumentList	! ce		3972993	1					
ANR	3973146	Argument	! ce		3972993	0					
ANR	3973147	UnaryOperationExpression	! ce		3972993	0					
ANR	3973148	UnaryOperator	!		3972993	0					
ANR	3973149	Identifier	ce		3972993	1					
ANR	3973150	CompoundStatement		22:26:636:636	3972993	1					
ANR	3973151	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , ""be an instance of "" , ZSTR_VAL ( cur_arg_info -> class_name ) , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name ) , arg )"	805:6:25212:25357	3972993	0	True				
ANR	3973152	CallExpression	"zend_verify_arg_error ( zf , arg_num , ""be an instance of "" , ZSTR_VAL ( cur_arg_info -> class_name ) , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name ) , arg )"		3972993	0					
ANR	3973153	Callee	zend_verify_arg_error		3972993	0					
ANR	3973154	Identifier	zend_verify_arg_error		3972993	0					
ANR	3973155	ArgumentList	zf		3972993	1					
ANR	3973156	Argument	zf		3972993	0					
ANR	3973157	Identifier	zf		3972993	0					
ANR	3973158	Argument	arg_num		3972993	1					
ANR	3973159	Identifier	arg_num		3972993	0					
ANR	3973160	Argument	"""be an instance of """		3972993	2					
ANR	3973161	PrimaryExpression	"""be an instance of """		3972993	0					
ANR	3973162	Argument	ZSTR_VAL ( cur_arg_info -> class_name )		3972993	3					
ANR	3973163	CallExpression	ZSTR_VAL ( cur_arg_info -> class_name )		3972993	0					
ANR	3973164	Callee	ZSTR_VAL		3972993	0					
ANR	3973165	Identifier	ZSTR_VAL		3972993	0					
ANR	3973166	ArgumentList	cur_arg_info -> class_name		3972993	1					
ANR	3973167	Argument	cur_arg_info -> class_name		3972993	0					
ANR	3973168	PtrMemberAccess	cur_arg_info -> class_name		3972993	0					
ANR	3973169	Identifier	cur_arg_info		3972993	0					
ANR	3973170	Identifier	class_name		3972993	1					
ANR	3973171	Argument	"""instance of """		3972993	4					
ANR	3973172	PrimaryExpression	"""instance of """		3972993	0					
ANR	3973173	Argument	ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name )		3972993	5					
ANR	3973174	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name )		3972993	0					
ANR	3973175	Callee	ZSTR_VAL		3972993	0					
ANR	3973176	Identifier	ZSTR_VAL		3972993	0					
ANR	3973177	ArgumentList	Z_OBJCE_P ( arg ) -> name		3972993	1					
ANR	3973178	Argument	Z_OBJCE_P ( arg ) -> name		3972993	0					
ANR	3973179	PtrMemberAccess	Z_OBJCE_P ( arg ) -> name		3972993	0					
ANR	3973180	CallExpression	Z_OBJCE_P ( arg )		3972993	0					
ANR	3973181	Callee	Z_OBJCE_P		3972993	0					
ANR	3973182	Identifier	Z_OBJCE_P		3972993	0					
ANR	3973183	ArgumentList	arg		3972993	1					
ANR	3973184	Argument	arg		3972993	0					
ANR	3973185	Identifier	arg		3972993	0					
ANR	3973186	Identifier	name		3972993	1					
ANR	3973187	Argument	arg		3972993	6					
ANR	3973188	Identifier	arg		3972993	0					
ANR	3973189	ReturnStatement	return 0 ;	806:6:25365:25373	3972993	1	True				
ANR	3973190	PrimaryExpression	0		3972993	0					
ANR	3973191	ExpressionStatement	* cache_slot = ( void * ) ce	808:5:25387:25410	3972993	2	True				
ANR	3973192	AssignmentExpression	* cache_slot = ( void * ) ce		3972993	0		=			
ANR	3973193	UnaryOperationExpression	* cache_slot		3972993	0					
ANR	3973194	UnaryOperator	*		3972993	0					
ANR	3973195	Identifier	cache_slot		3972993	1					
ANR	3973196	CastExpression	( void * ) ce		3972993	1					
ANR	3973197	CastTarget	void *		3972993	0					
ANR	3973198	Identifier	ce		3972993	1					
ANR	3973199	IfStatement	"if ( UNEXPECTED ( ! instanceof_function ( Z_OBJCE_P ( arg ) , ce ) ) )"		3972993	1					
ANR	3973200	Condition	"UNEXPECTED ( ! instanceof_function ( Z_OBJCE_P ( arg ) , ce ) )"	810:8:25426:25477	3972993	0	True				
ANR	3973201	CallExpression	"UNEXPECTED ( ! instanceof_function ( Z_OBJCE_P ( arg ) , ce ) )"		3972993	0					
ANR	3973202	Callee	UNEXPECTED		3972993	0					
ANR	3973203	Identifier	UNEXPECTED		3972993	0					
ANR	3973204	ArgumentList	"! instanceof_function ( Z_OBJCE_P ( arg ) , ce )"		3972993	1					
ANR	3973205	Argument	"! instanceof_function ( Z_OBJCE_P ( arg ) , ce )"		3972993	0					
ANR	3973206	UnaryOperationExpression	"! instanceof_function ( Z_OBJCE_P ( arg ) , ce )"		3972993	0					
ANR	3973207	UnaryOperator	!		3972993	0					
ANR	3973208	CallExpression	"instanceof_function ( Z_OBJCE_P ( arg ) , ce )"		3972993	1					
ANR	3973209	Callee	instanceof_function		3972993	0					
ANR	3973210	Identifier	instanceof_function		3972993	0					
ANR	3973211	ArgumentList	Z_OBJCE_P ( arg )		3972993	1					
ANR	3973212	Argument	Z_OBJCE_P ( arg )		3972993	0					
ANR	3973213	CallExpression	Z_OBJCE_P ( arg )		3972993	0					
ANR	3973214	Callee	Z_OBJCE_P		3972993	0					
ANR	3973215	Identifier	Z_OBJCE_P		3972993	0					
ANR	3973216	ArgumentList	arg		3972993	1					
ANR	3973217	Argument	arg		3972993	0					
ANR	3973218	Identifier	arg		3972993	0					
ANR	3973219	Argument	ce		3972993	1					
ANR	3973220	Identifier	ce		3972993	0					
ANR	3973221	CompoundStatement		28:62:912:912	3972993	1					
ANR	3973222	ExpressionStatement	"need_msg = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """	811:5:25487:25593	3972993	0	True				
ANR	3973223	AssignmentExpression	"need_msg = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """		3972993	0		=			
ANR	3973224	Identifier	need_msg		3972993	0					
ANR	3973225	ConditionalExpression	"( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """		3972993	1					
ANR	3973226	Condition	ce -> ce_flags & ZEND_ACC_INTERFACE		3972993	0					
ANR	3973227	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		3972993	0		&			
ANR	3973228	PtrMemberAccess	ce -> ce_flags		3972993	0					
ANR	3973229	Identifier	ce		3972993	0					
ANR	3973230	Identifier	ce_flags		3972993	1					
ANR	3973231	Identifier	ZEND_ACC_INTERFACE		3972993	1					
ANR	3973232	PrimaryExpression	"""implement interface """		3972993	1					
ANR	3973233	PrimaryExpression	"""be an instance of """		3972993	2					
ANR	3973234	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , need_msg , ZSTR_VAL ( ce -> name ) , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name ) , arg )"	814:5:25600:25717	3972993	1	True				
ANR	3973235	CallExpression	"zend_verify_arg_error ( zf , arg_num , need_msg , ZSTR_VAL ( ce -> name ) , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name ) , arg )"		3972993	0					
ANR	3973236	Callee	zend_verify_arg_error		3972993	0					
ANR	3973237	Identifier	zend_verify_arg_error		3972993	0					
ANR	3973238	ArgumentList	zf		3972993	1					
ANR	3973239	Argument	zf		3972993	0					
ANR	3973240	Identifier	zf		3972993	0					
ANR	3973241	Argument	arg_num		3972993	1					
ANR	3973242	Identifier	arg_num		3972993	0					
ANR	3973243	Argument	need_msg		3972993	2					
ANR	3973244	Identifier	need_msg		3972993	0					
ANR	3973245	Argument	ZSTR_VAL ( ce -> name )		3972993	3					
ANR	3973246	CallExpression	ZSTR_VAL ( ce -> name )		3972993	0					
ANR	3973247	Callee	ZSTR_VAL		3972993	0					
ANR	3973248	Identifier	ZSTR_VAL		3972993	0					
ANR	3973249	ArgumentList	ce -> name		3972993	1					
ANR	3973250	Argument	ce -> name		3972993	0					
ANR	3973251	PtrMemberAccess	ce -> name		3972993	0					
ANR	3973252	Identifier	ce		3972993	0					
ANR	3973253	Identifier	name		3972993	1					
ANR	3973254	Argument	"""instance of """		3972993	4					
ANR	3973255	PrimaryExpression	"""instance of """		3972993	0					
ANR	3973256	Argument	ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name )		3972993	5					
ANR	3973257	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name )		3972993	0					
ANR	3973258	Callee	ZSTR_VAL		3972993	0					
ANR	3973259	Identifier	ZSTR_VAL		3972993	0					
ANR	3973260	ArgumentList	Z_OBJCE_P ( arg ) -> name		3972993	1					
ANR	3973261	Argument	Z_OBJCE_P ( arg ) -> name		3972993	0					
ANR	3973262	PtrMemberAccess	Z_OBJCE_P ( arg ) -> name		3972993	0					
ANR	3973263	CallExpression	Z_OBJCE_P ( arg )		3972993	0					
ANR	3973264	Callee	Z_OBJCE_P		3972993	0					
ANR	3973265	Identifier	Z_OBJCE_P		3972993	0					
ANR	3973266	ArgumentList	arg		3972993	1					
ANR	3973267	Argument	arg		3972993	0					
ANR	3973268	Identifier	arg		3972993	0					
ANR	3973269	Identifier	name		3972993	1					
ANR	3973270	Argument	arg		3972993	6					
ANR	3973271	Identifier	arg		3972993	0					
ANR	3973272	ReturnStatement	return 0 ;	815:5:25724:25732	3972993	2	True				
ANR	3973273	PrimaryExpression	0		3972993	0					
ANR	3973274	ElseStatement	else		3972993	0					
ANR	3973275	IfStatement	if ( Z_TYPE_P ( arg ) != IS_NULL || ! ( cur_arg_info -> allow_null || ( default_value && is_null_constant ( default_value ) ) ) )		3972993	0					
ANR	3973276	Condition	Z_TYPE_P ( arg ) != IS_NULL || ! ( cur_arg_info -> allow_null || ( default_value && is_null_constant ( default_value ) ) )	818:13:25758:25866	3972993	0	True				
ANR	3973277	OrExpression	Z_TYPE_P ( arg ) != IS_NULL || ! ( cur_arg_info -> allow_null || ( default_value && is_null_constant ( default_value ) ) )		3972993	0		||			
ANR	3973278	EqualityExpression	Z_TYPE_P ( arg ) != IS_NULL		3972993	0		!=			
ANR	3973279	CallExpression	Z_TYPE_P ( arg )		3972993	0					
ANR	3973280	Callee	Z_TYPE_P		3972993	0					
ANR	3973281	Identifier	Z_TYPE_P		3972993	0					
ANR	3973282	ArgumentList	arg		3972993	1					
ANR	3973283	Argument	arg		3972993	0					
ANR	3973284	Identifier	arg		3972993	0					
ANR	3973285	Identifier	IS_NULL		3972993	1					
ANR	3973286	UnaryOperationExpression	! ( cur_arg_info -> allow_null || ( default_value && is_null_constant ( default_value ) ) )		3972993	1					
ANR	3973287	UnaryOperator	!		3972993	0					
ANR	3973288	OrExpression	cur_arg_info -> allow_null || ( default_value && is_null_constant ( default_value ) )		3972993	1		||			
ANR	3973289	PtrMemberAccess	cur_arg_info -> allow_null		3972993	0					
ANR	3973290	Identifier	cur_arg_info		3972993	0					
ANR	3973291	Identifier	allow_null		3972993	1					
ANR	3973292	AndExpression	default_value && is_null_constant ( default_value )		3972993	1		&&			
ANR	3973293	Identifier	default_value		3972993	0					
ANR	3973294	CallExpression	is_null_constant ( default_value )		3972993	1					
ANR	3973295	Callee	is_null_constant		3972993	0					
ANR	3973296	Identifier	is_null_constant		3972993	0					
ANR	3973297	ArgumentList	default_value		3972993	1					
ANR	3973298	Argument	default_value		3972993	0					
ANR	3973299	Identifier	default_value		3972993	0					
ANR	3973300	CompoundStatement		36:124:1301:1301	3972993	1					
ANR	3973301	IfStatement	if ( cur_arg_info -> class_name )		3972993	0					
ANR	3973302	Condition	cur_arg_info -> class_name	819:7:25878:25901	3972993	0	True				
ANR	3973303	PtrMemberAccess	cur_arg_info -> class_name		3972993	0					
ANR	3973304	Identifier	cur_arg_info		3972993	0					
ANR	3973305	Identifier	class_name		3972993	1					
ANR	3973306	CompoundStatement		37:33:1336:1336	3972993	1					
ANR	3973307	IfStatement	if ( EXPECTED ( * cache_slot ) )		3972993	0					
ANR	3973308	Condition	EXPECTED ( * cache_slot )	820:8:25914:25934	3972993	0	True				
ANR	3973309	CallExpression	EXPECTED ( * cache_slot )		3972993	0					
ANR	3973310	Callee	EXPECTED		3972993	0					
ANR	3973311	Identifier	EXPECTED		3972993	0					
ANR	3973312	ArgumentList	* cache_slot		3972993	1					
ANR	3973313	Argument	* cache_slot		3972993	0					
ANR	3973314	UnaryOperationExpression	* cache_slot		3972993	0					
ANR	3973315	UnaryOperator	*		3972993	0					
ANR	3973316	Identifier	cache_slot		3972993	1					
ANR	3973317	CompoundStatement		38:31:1369:1369	3972993	1					
ANR	3973318	ExpressionStatement	ce = ( zend_class_entry * ) * cache_slot	821:5:25944:25979	3972993	0	True				
ANR	3973319	AssignmentExpression	ce = ( zend_class_entry * ) * cache_slot		3972993	0		=			
ANR	3973320	Identifier	ce		3972993	0					
ANR	3973321	CastExpression	( zend_class_entry * ) * cache_slot		3972993	1					
ANR	3973322	CastTarget	zend_class_entry *		3972993	0					
ANR	3973323	UnaryOperationExpression	* cache_slot		3972993	1					
ANR	3973324	UnaryOperator	*		3972993	0					
ANR	3973325	Identifier	cache_slot		3972993	1					
ANR	3973326	ElseStatement	else		3972993	0					
ANR	3973327	CompoundStatement		40:11:1424:1424	3972993	0					
ANR	3973328	ExpressionStatement	ce = zend_verify_arg_class_kind ( cur_arg_info )	823:5:25999:26044	3972993	0	True				
ANR	3973329	AssignmentExpression	ce = zend_verify_arg_class_kind ( cur_arg_info )		3972993	0		=			
ANR	3973330	Identifier	ce		3972993	0					
ANR	3973331	CallExpression	zend_verify_arg_class_kind ( cur_arg_info )		3972993	1					
ANR	3973332	Callee	zend_verify_arg_class_kind		3972993	0					
ANR	3973333	Identifier	zend_verify_arg_class_kind		3972993	0					
ANR	3973334	ArgumentList	cur_arg_info		3972993	1					
ANR	3973335	Argument	cur_arg_info		3972993	0					
ANR	3973336	Identifier	cur_arg_info		3972993	0					
ANR	3973337	IfStatement	if ( UNEXPECTED ( ! ce ) )		3972993	1					
ANR	3973338	Condition	UNEXPECTED ( ! ce )	824:9:26055:26069	3972993	0	True				
ANR	3973339	CallExpression	UNEXPECTED ( ! ce )		3972993	0					
ANR	3973340	Callee	UNEXPECTED		3972993	0					
ANR	3973341	Identifier	UNEXPECTED		3972993	0					
ANR	3973342	ArgumentList	! ce		3972993	1					
ANR	3973343	Argument	! ce		3972993	0					
ANR	3973344	UnaryOperationExpression	! ce		3972993	0					
ANR	3973345	UnaryOperator	!		3972993	0					
ANR	3973346	Identifier	ce		3972993	1					
ANR	3973347	CompoundStatement		42:26:1504:1504	3972993	1					
ANR	3973348	IfStatement	if ( Z_TYPE_P ( arg ) == IS_OBJECT )		3972993	0					
ANR	3973349	Condition	Z_TYPE_P ( arg ) == IS_OBJECT	825:10:26084:26109	3972993	0	True				
ANR	3973350	EqualityExpression	Z_TYPE_P ( arg ) == IS_OBJECT		3972993	0		==			
ANR	3973351	CallExpression	Z_TYPE_P ( arg )		3972993	0					
ANR	3973352	Callee	Z_TYPE_P		3972993	0					
ANR	3973353	Identifier	Z_TYPE_P		3972993	0					
ANR	3973354	ArgumentList	arg		3972993	1					
ANR	3973355	Argument	arg		3972993	0					
ANR	3973356	Identifier	arg		3972993	0					
ANR	3973357	Identifier	IS_OBJECT		3972993	1					
ANR	3973358	CompoundStatement		43:38:1544:1544	3972993	1					
ANR	3973359	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , ""be an instance of "" , ZSTR_VAL ( cur_arg_info -> class_name ) , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name ) , arg )"	826:7:26121:26266	3972993	0	True				
ANR	3973360	CallExpression	"zend_verify_arg_error ( zf , arg_num , ""be an instance of "" , ZSTR_VAL ( cur_arg_info -> class_name ) , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name ) , arg )"		3972993	0					
ANR	3973361	Callee	zend_verify_arg_error		3972993	0					
ANR	3973362	Identifier	zend_verify_arg_error		3972993	0					
ANR	3973363	ArgumentList	zf		3972993	1					
ANR	3973364	Argument	zf		3972993	0					
ANR	3973365	Identifier	zf		3972993	0					
ANR	3973366	Argument	arg_num		3972993	1					
ANR	3973367	Identifier	arg_num		3972993	0					
ANR	3973368	Argument	"""be an instance of """		3972993	2					
ANR	3973369	PrimaryExpression	"""be an instance of """		3972993	0					
ANR	3973370	Argument	ZSTR_VAL ( cur_arg_info -> class_name )		3972993	3					
ANR	3973371	CallExpression	ZSTR_VAL ( cur_arg_info -> class_name )		3972993	0					
ANR	3973372	Callee	ZSTR_VAL		3972993	0					
ANR	3973373	Identifier	ZSTR_VAL		3972993	0					
ANR	3973374	ArgumentList	cur_arg_info -> class_name		3972993	1					
ANR	3973375	Argument	cur_arg_info -> class_name		3972993	0					
ANR	3973376	PtrMemberAccess	cur_arg_info -> class_name		3972993	0					
ANR	3973377	Identifier	cur_arg_info		3972993	0					
ANR	3973378	Identifier	class_name		3972993	1					
ANR	3973379	Argument	"""instance of """		3972993	4					
ANR	3973380	PrimaryExpression	"""instance of """		3972993	0					
ANR	3973381	Argument	ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name )		3972993	5					
ANR	3973382	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( arg ) -> name )		3972993	0					
ANR	3973383	Callee	ZSTR_VAL		3972993	0					
ANR	3973384	Identifier	ZSTR_VAL		3972993	0					
ANR	3973385	ArgumentList	Z_OBJCE_P ( arg ) -> name		3972993	1					
ANR	3973386	Argument	Z_OBJCE_P ( arg ) -> name		3972993	0					
ANR	3973387	PtrMemberAccess	Z_OBJCE_P ( arg ) -> name		3972993	0					
ANR	3973388	CallExpression	Z_OBJCE_P ( arg )		3972993	0					
ANR	3973389	Callee	Z_OBJCE_P		3972993	0					
ANR	3973390	Identifier	Z_OBJCE_P		3972993	0					
ANR	3973391	ArgumentList	arg		3972993	1					
ANR	3973392	Argument	arg		3972993	0					
ANR	3973393	Identifier	arg		3972993	0					
ANR	3973394	Identifier	name		3972993	1					
ANR	3973395	Argument	arg		3972993	6					
ANR	3973396	Identifier	arg		3972993	0					
ANR	3973397	ElseStatement	else		3972993	0					
ANR	3973398	CompoundStatement		45:13:1713:1713	3972993	0					
ANR	3973399	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , ""be an instance of "" , ZSTR_VAL ( cur_arg_info -> class_name ) , """" , zend_zval_type_name ( arg ) , arg )"	828:7:26290:26417	3972993	0	True				
ANR	3973400	CallExpression	"zend_verify_arg_error ( zf , arg_num , ""be an instance of "" , ZSTR_VAL ( cur_arg_info -> class_name ) , """" , zend_zval_type_name ( arg ) , arg )"		3972993	0					
ANR	3973401	Callee	zend_verify_arg_error		3972993	0					
ANR	3973402	Identifier	zend_verify_arg_error		3972993	0					
ANR	3973403	ArgumentList	zf		3972993	1					
ANR	3973404	Argument	zf		3972993	0					
ANR	3973405	Identifier	zf		3972993	0					
ANR	3973406	Argument	arg_num		3972993	1					
ANR	3973407	Identifier	arg_num		3972993	0					
ANR	3973408	Argument	"""be an instance of """		3972993	2					
ANR	3973409	PrimaryExpression	"""be an instance of """		3972993	0					
ANR	3973410	Argument	ZSTR_VAL ( cur_arg_info -> class_name )		3972993	3					
ANR	3973411	CallExpression	ZSTR_VAL ( cur_arg_info -> class_name )		3972993	0					
ANR	3973412	Callee	ZSTR_VAL		3972993	0					
ANR	3973413	Identifier	ZSTR_VAL		3972993	0					
ANR	3973414	ArgumentList	cur_arg_info -> class_name		3972993	1					
ANR	3973415	Argument	cur_arg_info -> class_name		3972993	0					
ANR	3973416	PtrMemberAccess	cur_arg_info -> class_name		3972993	0					
ANR	3973417	Identifier	cur_arg_info		3972993	0					
ANR	3973418	Identifier	class_name		3972993	1					
ANR	3973419	Argument	""""""		3972993	4					
ANR	3973420	PrimaryExpression	""""""		3972993	0					
ANR	3973421	Argument	zend_zval_type_name ( arg )		3972993	5					
ANR	3973422	CallExpression	zend_zval_type_name ( arg )		3972993	0					
ANR	3973423	Callee	zend_zval_type_name		3972993	0					
ANR	3973424	Identifier	zend_zval_type_name		3972993	0					
ANR	3973425	ArgumentList	arg		3972993	1					
ANR	3973426	Argument	arg		3972993	0					
ANR	3973427	Identifier	arg		3972993	0					
ANR	3973428	Argument	arg		3972993	6					
ANR	3973429	Identifier	arg		3972993	0					
ANR	3973430	ReturnStatement	return 0 ;	830:6:26433:26441	3972993	1	True				
ANR	3973431	PrimaryExpression	0		3972993	0					
ANR	3973432	ExpressionStatement	* cache_slot = ( void * ) ce	832:5:26455:26478	3972993	2	True				
ANR	3973433	AssignmentExpression	* cache_slot = ( void * ) ce		3972993	0		=			
ANR	3973434	UnaryOperationExpression	* cache_slot		3972993	0					
ANR	3973435	UnaryOperator	*		3972993	0					
ANR	3973436	Identifier	cache_slot		3972993	1					
ANR	3973437	CastExpression	( void * ) ce		3972993	1					
ANR	3973438	CastTarget	void *		3972993	0					
ANR	3973439	Identifier	ce		3972993	1					
ANR	3973440	ExpressionStatement	"need_msg = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """	834:4:26490:26594	3972993	1	True				
ANR	3973441	AssignmentExpression	"need_msg = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """		3972993	0		=			
ANR	3973442	Identifier	need_msg		3972993	0					
ANR	3973443	ConditionalExpression	"( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """		3972993	1					
ANR	3973444	Condition	ce -> ce_flags & ZEND_ACC_INTERFACE		3972993	0					
ANR	3973445	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		3972993	0		&			
ANR	3973446	PtrMemberAccess	ce -> ce_flags		3972993	0					
ANR	3973447	Identifier	ce		3972993	0					
ANR	3973448	Identifier	ce_flags		3972993	1					
ANR	3973449	Identifier	ZEND_ACC_INTERFACE		3972993	1					
ANR	3973450	PrimaryExpression	"""implement interface """		3972993	1					
ANR	3973451	PrimaryExpression	"""be an instance of """		3972993	2					
ANR	3973452	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , need_msg , ZSTR_VAL ( ce -> name ) , zend_zval_type_name ( arg ) , """" , arg )"	837:4:26600:26699	3972993	2	True				
ANR	3973453	CallExpression	"zend_verify_arg_error ( zf , arg_num , need_msg , ZSTR_VAL ( ce -> name ) , zend_zval_type_name ( arg ) , """" , arg )"		3972993	0					
ANR	3973454	Callee	zend_verify_arg_error		3972993	0					
ANR	3973455	Identifier	zend_verify_arg_error		3972993	0					
ANR	3973456	ArgumentList	zf		3972993	1					
ANR	3973457	Argument	zf		3972993	0					
ANR	3973458	Identifier	zf		3972993	0					
ANR	3973459	Argument	arg_num		3972993	1					
ANR	3973460	Identifier	arg_num		3972993	0					
ANR	3973461	Argument	need_msg		3972993	2					
ANR	3973462	Identifier	need_msg		3972993	0					
ANR	3973463	Argument	ZSTR_VAL ( ce -> name )		3972993	3					
ANR	3973464	CallExpression	ZSTR_VAL ( ce -> name )		3972993	0					
ANR	3973465	Callee	ZSTR_VAL		3972993	0					
ANR	3973466	Identifier	ZSTR_VAL		3972993	0					
ANR	3973467	ArgumentList	ce -> name		3972993	1					
ANR	3973468	Argument	ce -> name		3972993	0					
ANR	3973469	PtrMemberAccess	ce -> name		3972993	0					
ANR	3973470	Identifier	ce		3972993	0					
ANR	3973471	Identifier	name		3972993	1					
ANR	3973472	Argument	zend_zval_type_name ( arg )		3972993	4					
ANR	3973473	CallExpression	zend_zval_type_name ( arg )		3972993	0					
ANR	3973474	Callee	zend_zval_type_name		3972993	0					
ANR	3973475	Identifier	zend_zval_type_name		3972993	0					
ANR	3973476	ArgumentList	arg		3972993	1					
ANR	3973477	Argument	arg		3972993	0					
ANR	3973478	Identifier	arg		3972993	0					
ANR	3973479	Argument	""""""		3972993	5					
ANR	3973480	PrimaryExpression	""""""		3972993	0					
ANR	3973481	Argument	arg		3972993	6					
ANR	3973482	Identifier	arg		3972993	0					
ANR	3973483	ReturnStatement	return 0 ;	838:4:26705:26713	3972993	3	True				
ANR	3973484	PrimaryExpression	0		3972993	0					
ANR	3973485	ElseStatement	else		3972993	0					
ANR	3973486	IfStatement	if ( cur_arg_info -> type_hint == IS_CALLABLE )		3972993	0					
ANR	3973487	Condition	cur_arg_info -> type_hint == IS_CALLABLE	839:14:26729:26766	3972993	0	True				
ANR	3973488	EqualityExpression	cur_arg_info -> type_hint == IS_CALLABLE		3972993	0		==			
ANR	3973489	PtrMemberAccess	cur_arg_info -> type_hint		3972993	0					
ANR	3973490	Identifier	cur_arg_info		3972993	0					
ANR	3973491	Identifier	type_hint		3972993	1					
ANR	3973492	Identifier	IS_CALLABLE		3972993	1					
ANR	3973493	CompoundStatement		57:54:2201:2201	3972993	1					
ANR	3973494	IfStatement	"if ( ! zend_is_callable ( arg , IS_CALLABLE_CHECK_SILENT , NULL ) )"		3972993	0					
ANR	3973495	Condition	"! zend_is_callable ( arg , IS_CALLABLE_CHECK_SILENT , NULL )"	840:8:26779:26832	3972993	0	True				
ANR	3973496	UnaryOperationExpression	"! zend_is_callable ( arg , IS_CALLABLE_CHECK_SILENT , NULL )"		3972993	0					
ANR	3973497	UnaryOperator	!		3972993	0					
ANR	3973498	CallExpression	"zend_is_callable ( arg , IS_CALLABLE_CHECK_SILENT , NULL )"		3972993	1					
ANR	3973499	Callee	zend_is_callable		3972993	0					
ANR	3973500	Identifier	zend_is_callable		3972993	0					
ANR	3973501	ArgumentList	arg		3972993	1					
ANR	3973502	Argument	arg		3972993	0					
ANR	3973503	Identifier	arg		3972993	0					
ANR	3973504	Argument	IS_CALLABLE_CHECK_SILENT		3972993	1					
ANR	3973505	Identifier	IS_CALLABLE_CHECK_SILENT		3972993	0					
ANR	3973506	Argument	NULL		3972993	2					
ANR	3973507	Identifier	NULL		3972993	0					
ANR	3973508	CompoundStatement		58:64:2267:2267	3972993	1					
ANR	3973509	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , ""be callable"" , """" , zend_zval_type_name ( arg ) , """" , arg )"	841:5:26842:26930	3972993	0	True				
ANR	3973510	CallExpression	"zend_verify_arg_error ( zf , arg_num , ""be callable"" , """" , zend_zval_type_name ( arg ) , """" , arg )"		3972993	0					
ANR	3973511	Callee	zend_verify_arg_error		3972993	0					
ANR	3973512	Identifier	zend_verify_arg_error		3972993	0					
ANR	3973513	ArgumentList	zf		3972993	1					
ANR	3973514	Argument	zf		3972993	0					
ANR	3973515	Identifier	zf		3972993	0					
ANR	3973516	Argument	arg_num		3972993	1					
ANR	3973517	Identifier	arg_num		3972993	0					
ANR	3973518	Argument	"""be callable"""		3972993	2					
ANR	3973519	PrimaryExpression	"""be callable"""		3972993	0					
ANR	3973520	Argument	""""""		3972993	3					
ANR	3973521	PrimaryExpression	""""""		3972993	0					
ANR	3973522	Argument	zend_zval_type_name ( arg )		3972993	4					
ANR	3973523	CallExpression	zend_zval_type_name ( arg )		3972993	0					
ANR	3973524	Callee	zend_zval_type_name		3972993	0					
ANR	3973525	Identifier	zend_zval_type_name		3972993	0					
ANR	3973526	ArgumentList	arg		3972993	1					
ANR	3973527	Argument	arg		3972993	0					
ANR	3973528	Identifier	arg		3972993	0					
ANR	3973529	Argument	""""""		3972993	5					
ANR	3973530	PrimaryExpression	""""""		3972993	0					
ANR	3973531	Argument	arg		3972993	6					
ANR	3973532	Identifier	arg		3972993	0					
ANR	3973533	ReturnStatement	return 0 ;	842:5:26937:26945	3972993	1	True				
ANR	3973534	PrimaryExpression	0		3972993	0					
ANR	3973535	ElseStatement	else		3972993	0					
ANR	3973536	IfStatement	if ( cur_arg_info -> type_hint == _IS_BOOL && EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE ) )		3972993	0					
ANR	3973537	Condition	cur_arg_info -> type_hint == _IS_BOOL && EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE )	844:14:26967:27082	3972993	0	True				
ANR	3973538	AndExpression	cur_arg_info -> type_hint == _IS_BOOL && EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE )		3972993	0		&&			
ANR	3973539	EqualityExpression	cur_arg_info -> type_hint == _IS_BOOL		3972993	0		==			
ANR	3973540	PtrMemberAccess	cur_arg_info -> type_hint		3972993	0					
ANR	3973541	Identifier	cur_arg_info		3972993	0					
ANR	3973542	Identifier	type_hint		3972993	1					
ANR	3973543	Identifier	_IS_BOOL		3972993	1					
ANR	3973544	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE )		3972993	1					
ANR	3973545	Callee	EXPECTED		3972993	0					
ANR	3973546	Identifier	EXPECTED		3972993	0					
ANR	3973547	ArgumentList	Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE		3972993	1					
ANR	3973548	Argument	Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE		3972993	0					
ANR	3973549	OrExpression	Z_TYPE_P ( arg ) == IS_FALSE || Z_TYPE_P ( arg ) == IS_TRUE		3972993	0		||			
ANR	3973550	EqualityExpression	Z_TYPE_P ( arg ) == IS_FALSE		3972993	0		==			
ANR	3973551	CallExpression	Z_TYPE_P ( arg )		3972993	0					
ANR	3973552	Callee	Z_TYPE_P		3972993	0					
ANR	3973553	Identifier	Z_TYPE_P		3972993	0					
ANR	3973554	ArgumentList	arg		3972993	1					
ANR	3973555	Argument	arg		3972993	0					
ANR	3973556	Identifier	arg		3972993	0					
ANR	3973557	Identifier	IS_FALSE		3972993	1					
ANR	3973558	EqualityExpression	Z_TYPE_P ( arg ) == IS_TRUE		3972993	1		==			
ANR	3973559	CallExpression	Z_TYPE_P ( arg )		3972993	0					
ANR	3973560	Callee	Z_TYPE_P		3972993	0					
ANR	3973561	Identifier	Z_TYPE_P		3972993	0					
ANR	3973562	ArgumentList	arg		3972993	1					
ANR	3973563	Argument	arg		3972993	0					
ANR	3973564	Identifier	arg		3972993	0					
ANR	3973565	Identifier	IS_TRUE		3972993	1					
ANR	3973566	CompoundStatement		63:79:2517:2517	3972993	1					
ANR	3973567	ElseStatement	else		3972993	0					
ANR	3973568	IfStatement	"if ( UNEXPECTED ( ! zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_ARG_USES_STRICT_TYPES ( ) ) ) )"		3972993	0					
ANR	3973569	Condition	"UNEXPECTED ( ! zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_ARG_USES_STRICT_TYPES ( ) ) )"	847:14:27116:27216	3972993	0	True				
ANR	3973570	CallExpression	"UNEXPECTED ( ! zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_ARG_USES_STRICT_TYPES ( ) ) )"		3972993	0					
ANR	3973571	Callee	UNEXPECTED		3972993	0					
ANR	3973572	Identifier	UNEXPECTED		3972993	0					
ANR	3973573	ArgumentList	"! zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_ARG_USES_STRICT_TYPES ( ) )"		3972993	1					
ANR	3973574	Argument	"! zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_ARG_USES_STRICT_TYPES ( ) )"		3972993	0					
ANR	3973575	UnaryOperationExpression	"! zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_ARG_USES_STRICT_TYPES ( ) )"		3972993	0					
ANR	3973576	UnaryOperator	!		3972993	0					
ANR	3973577	CallExpression	"zend_verify_scalar_type_hint ( cur_arg_info -> type_hint , arg , ZEND_ARG_USES_STRICT_TYPES ( ) )"		3972993	1					
ANR	3973578	Callee	zend_verify_scalar_type_hint		3972993	0					
ANR	3973579	Identifier	zend_verify_scalar_type_hint		3972993	0					
ANR	3973580	ArgumentList	cur_arg_info -> type_hint		3972993	1					
ANR	3973581	Argument	cur_arg_info -> type_hint		3972993	0					
ANR	3973582	PtrMemberAccess	cur_arg_info -> type_hint		3972993	0					
ANR	3973583	Identifier	cur_arg_info		3972993	0					
ANR	3973584	Identifier	type_hint		3972993	1					
ANR	3973585	Argument	arg		3972993	1					
ANR	3973586	Identifier	arg		3972993	0					
ANR	3973587	Argument	ZEND_ARG_USES_STRICT_TYPES ( )		3972993	2					
ANR	3973588	CallExpression	ZEND_ARG_USES_STRICT_TYPES ( )		3972993	0					
ANR	3973589	Callee	ZEND_ARG_USES_STRICT_TYPES		3972993	0					
ANR	3973590	Identifier	ZEND_ARG_USES_STRICT_TYPES		3972993	0					
ANR	3973591	ArgumentList			3972993	1					
ANR	3973592	CompoundStatement		65:117:2651:2651	3972993	1					
ANR	3973593	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , ""be of the type "" , zend_get_type_by_const ( cur_arg_info -> type_hint ) , zend_zval_type_name ( arg ) , """" , arg )"	848:4:27225:27362	3972993	0	True				
ANR	3973594	CallExpression	"zend_verify_arg_error ( zf , arg_num , ""be of the type "" , zend_get_type_by_const ( cur_arg_info -> type_hint ) , zend_zval_type_name ( arg ) , """" , arg )"		3972993	0					
ANR	3973595	Callee	zend_verify_arg_error		3972993	0					
ANR	3973596	Identifier	zend_verify_arg_error		3972993	0					
ANR	3973597	ArgumentList	zf		3972993	1					
ANR	3973598	Argument	zf		3972993	0					
ANR	3973599	Identifier	zf		3972993	0					
ANR	3973600	Argument	arg_num		3972993	1					
ANR	3973601	Identifier	arg_num		3972993	0					
ANR	3973602	Argument	"""be of the type """		3972993	2					
ANR	3973603	PrimaryExpression	"""be of the type """		3972993	0					
ANR	3973604	Argument	zend_get_type_by_const ( cur_arg_info -> type_hint )		3972993	3					
ANR	3973605	CallExpression	zend_get_type_by_const ( cur_arg_info -> type_hint )		3972993	0					
ANR	3973606	Callee	zend_get_type_by_const		3972993	0					
ANR	3973607	Identifier	zend_get_type_by_const		3972993	0					
ANR	3973608	ArgumentList	cur_arg_info -> type_hint		3972993	1					
ANR	3973609	Argument	cur_arg_info -> type_hint		3972993	0					
ANR	3973610	PtrMemberAccess	cur_arg_info -> type_hint		3972993	0					
ANR	3973611	Identifier	cur_arg_info		3972993	0					
ANR	3973612	Identifier	type_hint		3972993	1					
ANR	3973613	Argument	zend_zval_type_name ( arg )		3972993	4					
ANR	3973614	CallExpression	zend_zval_type_name ( arg )		3972993	0					
ANR	3973615	Callee	zend_zval_type_name		3972993	0					
ANR	3973616	Identifier	zend_zval_type_name		3972993	0					
ANR	3973617	ArgumentList	arg		3972993	1					
ANR	3973618	Argument	arg		3972993	0					
ANR	3973619	Identifier	arg		3972993	0					
ANR	3973620	Argument	""""""		3972993	5					
ANR	3973621	PrimaryExpression	""""""		3972993	0					
ANR	3973622	Argument	arg		3972993	6					
ANR	3973623	Identifier	arg		3972993	0					
ANR	3973624	ReturnStatement	return 0 ;	849:4:27368:27376	3972993	1	True				
ANR	3973625	PrimaryExpression	0		3972993	0					
ANR	3973626	ReturnStatement	return 1 ;	853:1:27391:27399	3972993	5	True				
ANR	3973627	PrimaryExpression	1		3972993	0					
ANR	3973628	ReturnType	static zend_always_inline int		3972993	1					
ANR	3973629	Identifier	zend_verify_arg_type		3972993	2					
ANR	3973630	ParameterList	"zend_function * zf , uint32_t arg_num , zval * arg , zval * default_value , void * * cache_slot"		3972993	3					
ANR	3973631	Parameter	zend_function * zf	782:51:24479:24495	3972993	0	True				
ANR	3973632	ParameterType	zend_function *		3972993	0					
ANR	3973633	Identifier	zf		3972993	1					
ANR	3973634	Parameter	uint32_t arg_num	782:70:24498:24513	3972993	1	True				
ANR	3973635	ParameterType	uint32_t		3972993	0					
ANR	3973636	Identifier	arg_num		3972993	1					
ANR	3973637	Parameter	zval * arg	782:88:24516:24524	3972993	2	True				
ANR	3973638	ParameterType	zval *		3972993	0					
ANR	3973639	Identifier	arg		3972993	1					
ANR	3973640	Parameter	zval * default_value	782:99:24527:24545	3972993	3	True				
ANR	3973641	ParameterType	zval *		3972993	0					
ANR	3973642	Identifier	default_value		3972993	1					
ANR	3973643	Parameter	void * * cache_slot	782:120:24548:24564	3972993	4	True				
ANR	3973644	ParameterType	void * *		3972993	0					
ANR	3973645	Identifier	cache_slot		3972993	1					
ANR	3973646	CFGEntryNode	ENTRY		3972993		True				
ANR	3973647	CFGExitNode	EXIT		3972993		True				
ANR	3973648	Symbol	arg_num		3972993						
ANR	3973649	Symbol	instanceof_function		3972993						
ANR	3973650	Symbol	need_msg		3972993						
ANR	3973651	Symbol	zf -> common . fn_flags		3972993						
ANR	3973652	Symbol	zf -> common . arg_info		3972993						
ANR	3973653	Symbol	zf -> common		3972993						
ANR	3973654	Symbol	* ce		3972993						
ANR	3973655	Symbol	zend_zval_type_name		3972993						
ANR	3973656	Symbol	cur_arg_info -> class_name		3972993						
ANR	3973657	Symbol	cur_arg_info -> allow_null		3972993						
ANR	3973658	Symbol	cur_arg_info		3972993						
ANR	3973659	Symbol	UNEXPECTED		3972993						
ANR	3973660	Symbol	* cur_arg_info		3972993						
ANR	3973661	Symbol	_IS_BOOL		3972993						
ANR	3973662	Symbol	IS_NULL		3972993						
ANR	3973663	Symbol	arg		3972993						
ANR	3973664	Symbol	Z_OBJCE_P		3972993						
ANR	3973665	Symbol	cur_arg_info -> type_hint		3972993						
ANR	3973666	Symbol	ZEND_ACC_INTERFACE		3972993						
ANR	3973667	Symbol	ce -> name		3972993						
ANR	3973668	Symbol	IS_FALSE		3972993						
ANR	3973669	Symbol	* Z_OBJCE_P		3972993						
ANR	3973670	Symbol	cache_slot		3972993						
ANR	3973671	Symbol	IS_CALLABLE		3972993						
ANR	3973672	Symbol	zend_get_type_by_const		3972993						
ANR	3973673	Symbol	ce		3972993						
ANR	3973674	Symbol	ZEND_ARG_USES_STRICT_TYPES		3972993						
ANR	3973675	Symbol	NULL		3972993						
ANR	3973676	Symbol	zf -> common . num_args		3972993						
ANR	3973677	Symbol	* cache_slot		3972993						
ANR	3973678	Symbol	zend_is_callable		3972993						
ANR	3973679	Symbol	IS_TRUE		3972993						
ANR	3973680	Symbol	default_value		3972993						
ANR	3973681	Symbol	zf		3972993						
ANR	3973682	Symbol	Z_TYPE_P		3972993						
ANR	3973683	Symbol	ZSTR_VAL		3972993						
ANR	3973684	Symbol	ce -> ce_flags		3972993						
ANR	3973685	Symbol	* zf		3972993						
ANR	3973686	Symbol	ZEND_ACC_VARIADIC		3972993						
ANR	3973687	Symbol	zend_verify_scalar_type_hint		3972993						
ANR	3973688	Symbol	Z_OBJCE_P ( arg ) -> name		3972993						
ANR	3973689	Symbol	is_null_constant		3972993						
ANR	3973690	Symbol	IS_CALLABLE_CHECK_SILENT		3972993						
ANR	3973691	Symbol	zend_verify_arg_class_kind		3972993						
ANR	3973692	Symbol	IS_OBJECT		3972993						
ANR	3973693	Symbol	EXPECTED		3972993						
ANR	3973694	Function	zend_verify_missing_arg_type	856:0:27404:28736							
ANR	3973695	FunctionDef	"zend_verify_missing_arg_type (zend_function * zf , uint32_t arg_num , void * * cache_slot)"		3973694	0					
ANR	3973696	CompoundStatement		857:0:27519:28736	3973694	0					
ANR	3973697	IdentifierDeclStatement	zend_arg_info * cur_arg_info ;	858:1:27522:27549	3973694	0	True				
ANR	3973698	IdentifierDecl	* cur_arg_info		3973694	0					
ANR	3973699	IdentifierDeclType	zend_arg_info *		3973694	0					
ANR	3973700	Identifier	cur_arg_info		3973694	1					
ANR	3973701	IdentifierDeclStatement	char * need_msg ;	859:1:27552:27566	3973694	1	True				
ANR	3973702	IdentifierDecl	* need_msg		3973694	0					
ANR	3973703	IdentifierDeclType	char *		3973694	0					
ANR	3973704	Identifier	need_msg		3973694	1					
ANR	3973705	IdentifierDeclStatement	zend_class_entry * ce ;	860:1:27569:27589	3973694	2	True				
ANR	3973706	IdentifierDecl	* ce		3973694	0					
ANR	3973707	IdentifierDeclType	zend_class_entry *		3973694	0					
ANR	3973708	Identifier	ce		3973694	1					
ANR	3973709	IfStatement	if ( EXPECTED ( arg_num <= zf -> common . num_args ) )		3973694	3					
ANR	3973710	Condition	EXPECTED ( arg_num <= zf -> common . num_args )	862:5:27597:27636	3973694	0	True				
ANR	3973711	CallExpression	EXPECTED ( arg_num <= zf -> common . num_args )		3973694	0					
ANR	3973712	Callee	EXPECTED		3973694	0					
ANR	3973713	Identifier	EXPECTED		3973694	0					
ANR	3973714	ArgumentList	arg_num <= zf -> common . num_args		3973694	1					
ANR	3973715	Argument	arg_num <= zf -> common . num_args		3973694	0					
ANR	3973716	RelationalExpression	arg_num <= zf -> common . num_args		3973694	0		<=			
ANR	3973717	Identifier	arg_num		3973694	0					
ANR	3973718	MemberAccess	zf -> common . num_args		3973694	1					
ANR	3973719	PtrMemberAccess	zf -> common		3973694	0					
ANR	3973720	Identifier	zf		3973694	0					
ANR	3973721	Identifier	common		3973694	1					
ANR	3973722	Identifier	num_args		3973694	1					
ANR	3973723	CompoundStatement		6:47:119:119	3973694	1					
ANR	3973724	ExpressionStatement	cur_arg_info = & zf -> common . arg_info [ arg_num - 1 ]	863:2:27643:27689	3973694	0	True				
ANR	3973725	AssignmentExpression	cur_arg_info = & zf -> common . arg_info [ arg_num - 1 ]		3973694	0		=			
ANR	3973726	Identifier	cur_arg_info		3973694	0					
ANR	3973727	UnaryOperationExpression	& zf -> common . arg_info [ arg_num - 1 ]		3973694	1					
ANR	3973728	UnaryOperator	&		3973694	0					
ANR	3973729	ArrayIndexing	zf -> common . arg_info [ arg_num - 1 ]		3973694	1					
ANR	3973730	MemberAccess	zf -> common . arg_info		3973694	0					
ANR	3973731	PtrMemberAccess	zf -> common		3973694	0					
ANR	3973732	Identifier	zf		3973694	0					
ANR	3973733	Identifier	common		3973694	1					
ANR	3973734	Identifier	arg_info		3973694	1					
ANR	3973735	AdditiveExpression	arg_num - 1		3973694	1		-			
ANR	3973736	Identifier	arg_num		3973694	0					
ANR	3973737	PrimaryExpression	1		3973694	1					
ANR	3973738	ElseStatement	else		3973694	0					
ANR	3973739	IfStatement	if ( UNEXPECTED ( zf -> common . fn_flags & ZEND_ACC_VARIADIC ) )		3973694	0					
ANR	3973740	Condition	UNEXPECTED ( zf -> common . fn_flags & ZEND_ACC_VARIADIC )	864:12:27703:27753	3973694	0	True				
ANR	3973741	CallExpression	UNEXPECTED ( zf -> common . fn_flags & ZEND_ACC_VARIADIC )		3973694	0					
ANR	3973742	Callee	UNEXPECTED		3973694	0					
ANR	3973743	Identifier	UNEXPECTED		3973694	0					
ANR	3973744	ArgumentList	zf -> common . fn_flags & ZEND_ACC_VARIADIC		3973694	1					
ANR	3973745	Argument	zf -> common . fn_flags & ZEND_ACC_VARIADIC		3973694	0					
ANR	3973746	BitAndExpression	zf -> common . fn_flags & ZEND_ACC_VARIADIC		3973694	0		&			
ANR	3973747	MemberAccess	zf -> common . fn_flags		3973694	0					
ANR	3973748	PtrMemberAccess	zf -> common		3973694	0					
ANR	3973749	Identifier	zf		3973694	0					
ANR	3973750	Identifier	common		3973694	1					
ANR	3973751	Identifier	fn_flags		3973694	1					
ANR	3973752	Identifier	ZEND_ACC_VARIADIC		3973694	1					
ANR	3973753	CompoundStatement		8:65:236:236	3973694	1					
ANR	3973754	ExpressionStatement	cur_arg_info = & zf -> common . arg_info [ zf -> common . num_args ]	865:2:27760:27816	3973694	0	True				
ANR	3973755	AssignmentExpression	cur_arg_info = & zf -> common . arg_info [ zf -> common . num_args ]		3973694	0		=			
ANR	3973756	Identifier	cur_arg_info		3973694	0					
ANR	3973757	UnaryOperationExpression	& zf -> common . arg_info [ zf -> common . num_args ]		3973694	1					
ANR	3973758	UnaryOperator	&		3973694	0					
ANR	3973759	ArrayIndexing	zf -> common . arg_info [ zf -> common . num_args ]		3973694	1					
ANR	3973760	MemberAccess	zf -> common . arg_info		3973694	0					
ANR	3973761	PtrMemberAccess	zf -> common		3973694	0					
ANR	3973762	Identifier	zf		3973694	0					
ANR	3973763	Identifier	common		3973694	1					
ANR	3973764	Identifier	arg_info		3973694	1					
ANR	3973765	MemberAccess	zf -> common . num_args		3973694	1					
ANR	3973766	PtrMemberAccess	zf -> common		3973694	0					
ANR	3973767	Identifier	zf		3973694	0					
ANR	3973768	Identifier	common		3973694	1					
ANR	3973769	Identifier	num_args		3973694	1					
ANR	3973770	ElseStatement	else		3973694	0					
ANR	3973771	CompoundStatement		10:8:306:306	3973694	0					
ANR	3973772	ReturnStatement	return 1 ;	867:2:27830:27838	3973694	0	True				
ANR	3973773	PrimaryExpression	1		3973694	0					
ANR	3973774	IfStatement	if ( cur_arg_info -> type_hint )		3973694	4					
ANR	3973775	Condition	cur_arg_info -> type_hint	870:5:27849:27871	3973694	0	True				
ANR	3973776	PtrMemberAccess	cur_arg_info -> type_hint		3973694	0					
ANR	3973777	Identifier	cur_arg_info		3973694	0					
ANR	3973778	Identifier	type_hint		3973694	1					
ANR	3973779	CompoundStatement		14:30:354:354	3973694	1					
ANR	3973780	IfStatement	if ( cur_arg_info -> class_name )		3973694	0					
ANR	3973781	Condition	cur_arg_info -> class_name	871:6:27882:27905	3973694	0	True				
ANR	3973782	PtrMemberAccess	cur_arg_info -> class_name		3973694	0					
ANR	3973783	Identifier	cur_arg_info		3973694	0					
ANR	3973784	Identifier	class_name		3973694	1					
ANR	3973785	CompoundStatement		15:32:388:388	3973694	1					
ANR	3973786	IfStatement	if ( EXPECTED ( * cache_slot ) )		3973694	0					
ANR	3973787	Condition	EXPECTED ( * cache_slot )	872:7:27917:27937	3973694	0	True				
ANR	3973788	CallExpression	EXPECTED ( * cache_slot )		3973694	0					
ANR	3973789	Callee	EXPECTED		3973694	0					
ANR	3973790	Identifier	EXPECTED		3973694	0					
ANR	3973791	ArgumentList	* cache_slot		3973694	1					
ANR	3973792	Argument	* cache_slot		3973694	0					
ANR	3973793	UnaryOperationExpression	* cache_slot		3973694	0					
ANR	3973794	UnaryOperator	*		3973694	0					
ANR	3973795	Identifier	cache_slot		3973694	1					
ANR	3973796	CompoundStatement		16:30:420:420	3973694	1					
ANR	3973797	ExpressionStatement	ce = ( zend_class_entry * ) * cache_slot	873:4:27946:27981	3973694	0	True				
ANR	3973798	AssignmentExpression	ce = ( zend_class_entry * ) * cache_slot		3973694	0		=			
ANR	3973799	Identifier	ce		3973694	0					
ANR	3973800	CastExpression	( zend_class_entry * ) * cache_slot		3973694	1					
ANR	3973801	CastTarget	zend_class_entry *		3973694	0					
ANR	3973802	UnaryOperationExpression	* cache_slot		3973694	1					
ANR	3973803	UnaryOperator	*		3973694	0					
ANR	3973804	Identifier	cache_slot		3973694	1					
ANR	3973805	ElseStatement	else		3973694	0					
ANR	3973806	CompoundStatement		18:10:473:473	3973694	0					
ANR	3973807	ExpressionStatement	ce = zend_verify_arg_class_kind ( cur_arg_info )	875:4:27999:28044	3973694	0	True				
ANR	3973808	AssignmentExpression	ce = zend_verify_arg_class_kind ( cur_arg_info )		3973694	0		=			
ANR	3973809	Identifier	ce		3973694	0					
ANR	3973810	CallExpression	zend_verify_arg_class_kind ( cur_arg_info )		3973694	1					
ANR	3973811	Callee	zend_verify_arg_class_kind		3973694	0					
ANR	3973812	Identifier	zend_verify_arg_class_kind		3973694	0					
ANR	3973813	ArgumentList	cur_arg_info		3973694	1					
ANR	3973814	Argument	cur_arg_info		3973694	0					
ANR	3973815	Identifier	cur_arg_info		3973694	0					
ANR	3973816	IfStatement	if ( UNEXPECTED ( ! ce ) )		3973694	1					
ANR	3973817	Condition	UNEXPECTED ( ! ce )	876:8:28054:28068	3973694	0	True				
ANR	3973818	CallExpression	UNEXPECTED ( ! ce )		3973694	0					
ANR	3973819	Callee	UNEXPECTED		3973694	0					
ANR	3973820	Identifier	UNEXPECTED		3973694	0					
ANR	3973821	ArgumentList	! ce		3973694	1					
ANR	3973822	Argument	! ce		3973694	0					
ANR	3973823	UnaryOperationExpression	! ce		3973694	0					
ANR	3973824	UnaryOperator	!		3973694	0					
ANR	3973825	Identifier	ce		3973694	1					
ANR	3973826	CompoundStatement		20:25:551:551	3973694	1					
ANR	3973827	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , ""be an instance of "" , ZSTR_VAL ( cur_arg_info -> class_name ) , ""none"" , """" , NULL )"	877:5:28078:28188	3973694	0	True				
ANR	3973828	CallExpression	"zend_verify_arg_error ( zf , arg_num , ""be an instance of "" , ZSTR_VAL ( cur_arg_info -> class_name ) , ""none"" , """" , NULL )"		3973694	0					
ANR	3973829	Callee	zend_verify_arg_error		3973694	0					
ANR	3973830	Identifier	zend_verify_arg_error		3973694	0					
ANR	3973831	ArgumentList	zf		3973694	1					
ANR	3973832	Argument	zf		3973694	0					
ANR	3973833	Identifier	zf		3973694	0					
ANR	3973834	Argument	arg_num		3973694	1					
ANR	3973835	Identifier	arg_num		3973694	0					
ANR	3973836	Argument	"""be an instance of """		3973694	2					
ANR	3973837	PrimaryExpression	"""be an instance of """		3973694	0					
ANR	3973838	Argument	ZSTR_VAL ( cur_arg_info -> class_name )		3973694	3					
ANR	3973839	CallExpression	ZSTR_VAL ( cur_arg_info -> class_name )		3973694	0					
ANR	3973840	Callee	ZSTR_VAL		3973694	0					
ANR	3973841	Identifier	ZSTR_VAL		3973694	0					
ANR	3973842	ArgumentList	cur_arg_info -> class_name		3973694	1					
ANR	3973843	Argument	cur_arg_info -> class_name		3973694	0					
ANR	3973844	PtrMemberAccess	cur_arg_info -> class_name		3973694	0					
ANR	3973845	Identifier	cur_arg_info		3973694	0					
ANR	3973846	Identifier	class_name		3973694	1					
ANR	3973847	Argument	"""none"""		3973694	4					
ANR	3973848	PrimaryExpression	"""none"""		3973694	0					
ANR	3973849	Argument	""""""		3973694	5					
ANR	3973850	PrimaryExpression	""""""		3973694	0					
ANR	3973851	Argument	NULL		3973694	6					
ANR	3973852	Identifier	NULL		3973694	0					
ANR	3973853	ReturnStatement	return 0 ;	878:5:28195:28203	3973694	1	True				
ANR	3973854	PrimaryExpression	0		3973694	0					
ANR	3973855	ExpressionStatement	* cache_slot = ( void * ) ce	880:4:28215:28238	3973694	2	True				
ANR	3973856	AssignmentExpression	* cache_slot = ( void * ) ce		3973694	0		=			
ANR	3973857	UnaryOperationExpression	* cache_slot		3973694	0					
ANR	3973858	UnaryOperator	*		3973694	0					
ANR	3973859	Identifier	cache_slot		3973694	1					
ANR	3973860	CastExpression	( void * ) ce		3973694	1					
ANR	3973861	CastTarget	void *		3973694	0					
ANR	3973862	Identifier	ce		3973694	1					
ANR	3973863	ExpressionStatement	"need_msg = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """	882:3:28248:28350	3973694	1	True				
ANR	3973864	AssignmentExpression	"need_msg = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """		3973694	0		=			
ANR	3973865	Identifier	need_msg		3973694	0					
ANR	3973866	ConditionalExpression	"( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """		3973694	1					
ANR	3973867	Condition	ce -> ce_flags & ZEND_ACC_INTERFACE		3973694	0					
ANR	3973868	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		3973694	0		&			
ANR	3973869	PtrMemberAccess	ce -> ce_flags		3973694	0					
ANR	3973870	Identifier	ce		3973694	0					
ANR	3973871	Identifier	ce_flags		3973694	1					
ANR	3973872	Identifier	ZEND_ACC_INTERFACE		3973694	1					
ANR	3973873	PrimaryExpression	"""implement interface """		3973694	1					
ANR	3973874	PrimaryExpression	"""be an instance of """		3973694	2					
ANR	3973875	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , need_msg , ZSTR_VAL ( ce -> name ) , ""none"" , """" , NULL )"	885:3:28355:28437	3973694	2	True				
ANR	3973876	CallExpression	"zend_verify_arg_error ( zf , arg_num , need_msg , ZSTR_VAL ( ce -> name ) , ""none"" , """" , NULL )"		3973694	0					
ANR	3973877	Callee	zend_verify_arg_error		3973694	0					
ANR	3973878	Identifier	zend_verify_arg_error		3973694	0					
ANR	3973879	ArgumentList	zf		3973694	1					
ANR	3973880	Argument	zf		3973694	0					
ANR	3973881	Identifier	zf		3973694	0					
ANR	3973882	Argument	arg_num		3973694	1					
ANR	3973883	Identifier	arg_num		3973694	0					
ANR	3973884	Argument	need_msg		3973694	2					
ANR	3973885	Identifier	need_msg		3973694	0					
ANR	3973886	Argument	ZSTR_VAL ( ce -> name )		3973694	3					
ANR	3973887	CallExpression	ZSTR_VAL ( ce -> name )		3973694	0					
ANR	3973888	Callee	ZSTR_VAL		3973694	0					
ANR	3973889	Identifier	ZSTR_VAL		3973694	0					
ANR	3973890	ArgumentList	ce -> name		3973694	1					
ANR	3973891	Argument	ce -> name		3973694	0					
ANR	3973892	PtrMemberAccess	ce -> name		3973694	0					
ANR	3973893	Identifier	ce		3973694	0					
ANR	3973894	Identifier	name		3973694	1					
ANR	3973895	Argument	"""none"""		3973694	4					
ANR	3973896	PrimaryExpression	"""none"""		3973694	0					
ANR	3973897	Argument	""""""		3973694	5					
ANR	3973898	PrimaryExpression	""""""		3973694	0					
ANR	3973899	Argument	NULL		3973694	6					
ANR	3973900	Identifier	NULL		3973694	0					
ANR	3973901	ElseStatement	else		3973694	0					
ANR	3973902	IfStatement	if ( cur_arg_info -> type_hint == IS_CALLABLE )		3973694	0					
ANR	3973903	Condition	cur_arg_info -> type_hint == IS_CALLABLE	886:13:28452:28489	3973694	0	True				
ANR	3973904	EqualityExpression	cur_arg_info -> type_hint == IS_CALLABLE		3973694	0		==			
ANR	3973905	PtrMemberAccess	cur_arg_info -> type_hint		3973694	0					
ANR	3973906	Identifier	cur_arg_info		3973694	0					
ANR	3973907	Identifier	type_hint		3973694	1					
ANR	3973908	Identifier	IS_CALLABLE		3973694	1					
ANR	3973909	CompoundStatement		30:53:972:972	3973694	1					
ANR	3973910	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , ""be callable"" , """" , ""none"" , """" , NULL )"	887:3:28497:28568	3973694	0	True				
ANR	3973911	CallExpression	"zend_verify_arg_error ( zf , arg_num , ""be callable"" , """" , ""none"" , """" , NULL )"		3973694	0					
ANR	3973912	Callee	zend_verify_arg_error		3973694	0					
ANR	3973913	Identifier	zend_verify_arg_error		3973694	0					
ANR	3973914	ArgumentList	zf		3973694	1					
ANR	3973915	Argument	zf		3973694	0					
ANR	3973916	Identifier	zf		3973694	0					
ANR	3973917	Argument	arg_num		3973694	1					
ANR	3973918	Identifier	arg_num		3973694	0					
ANR	3973919	Argument	"""be callable"""		3973694	2					
ANR	3973920	PrimaryExpression	"""be callable"""		3973694	0					
ANR	3973921	Argument	""""""		3973694	3					
ANR	3973922	PrimaryExpression	""""""		3973694	0					
ANR	3973923	Argument	"""none"""		3973694	4					
ANR	3973924	PrimaryExpression	"""none"""		3973694	0					
ANR	3973925	Argument	""""""		3973694	5					
ANR	3973926	PrimaryExpression	""""""		3973694	0					
ANR	3973927	Argument	NULL		3973694	6					
ANR	3973928	Identifier	NULL		3973694	0					
ANR	3973929	ElseStatement	else		3973694	0					
ANR	3973930	CompoundStatement		32:9:1059:1059	3973694	0					
ANR	3973931	ExpressionStatement	"zend_verify_arg_error ( zf , arg_num , ""be of the type "" , zend_get_type_by_const ( cur_arg_info -> type_hint ) , ""none"" , """" , NULL )"	889:3:28584:28704	3973694	0	True				
ANR	3973932	CallExpression	"zend_verify_arg_error ( zf , arg_num , ""be of the type "" , zend_get_type_by_const ( cur_arg_info -> type_hint ) , ""none"" , """" , NULL )"		3973694	0					
ANR	3973933	Callee	zend_verify_arg_error		3973694	0					
ANR	3973934	Identifier	zend_verify_arg_error		3973694	0					
ANR	3973935	ArgumentList	zf		3973694	1					
ANR	3973936	Argument	zf		3973694	0					
ANR	3973937	Identifier	zf		3973694	0					
ANR	3973938	Argument	arg_num		3973694	1					
ANR	3973939	Identifier	arg_num		3973694	0					
ANR	3973940	Argument	"""be of the type """		3973694	2					
ANR	3973941	PrimaryExpression	"""be of the type """		3973694	0					
ANR	3973942	Argument	zend_get_type_by_const ( cur_arg_info -> type_hint )		3973694	3					
ANR	3973943	CallExpression	zend_get_type_by_const ( cur_arg_info -> type_hint )		3973694	0					
ANR	3973944	Callee	zend_get_type_by_const		3973694	0					
ANR	3973945	Identifier	zend_get_type_by_const		3973694	0					
ANR	3973946	ArgumentList	cur_arg_info -> type_hint		3973694	1					
ANR	3973947	Argument	cur_arg_info -> type_hint		3973694	0					
ANR	3973948	PtrMemberAccess	cur_arg_info -> type_hint		3973694	0					
ANR	3973949	Identifier	cur_arg_info		3973694	0					
ANR	3973950	Identifier	type_hint		3973694	1					
ANR	3973951	Argument	"""none"""		3973694	4					
ANR	3973952	PrimaryExpression	"""none"""		3973694	0					
ANR	3973953	Argument	""""""		3973694	5					
ANR	3973954	PrimaryExpression	""""""		3973694	0					
ANR	3973955	Argument	NULL		3973694	6					
ANR	3973956	Identifier	NULL		3973694	0					
ANR	3973957	ReturnStatement	return 0 ;	891:2:28712:28720	3973694	1	True				
ANR	3973958	PrimaryExpression	0		3973694	0					
ANR	3973959	ReturnStatement	return 1 ;	893:1:28726:28734	3973694	5	True				
ANR	3973960	PrimaryExpression	1		3973694	0					
ANR	3973961	ReturnType	static zend_always_inline int		3973694	1					
ANR	3973962	Identifier	zend_verify_missing_arg_type		3973694	2					
ANR	3973963	ParameterList	"zend_function * zf , uint32_t arg_num , void * * cache_slot"		3973694	3					
ANR	3973964	Parameter	zend_function * zf	856:59:27463:27479	3973694	0	True				
ANR	3973965	ParameterType	zend_function *		3973694	0					
ANR	3973966	Identifier	zf		3973694	1					
ANR	3973967	Parameter	uint32_t arg_num	856:78:27482:27497	3973694	1	True				
ANR	3973968	ParameterType	uint32_t		3973694	0					
ANR	3973969	Identifier	arg_num		3973694	1					
ANR	3973970	Parameter	void * * cache_slot	856:96:27500:27516	3973694	2	True				
ANR	3973971	ParameterType	void * *		3973694	0					
ANR	3973972	Identifier	cache_slot		3973694	1					
ANR	3973973	CFGEntryNode	ENTRY		3973694		True				
ANR	3973974	CFGExitNode	EXIT		3973694		True				
ANR	3973975	Symbol	arg_num		3973694						
ANR	3973976	Symbol	need_msg		3973694						
ANR	3973977	Symbol	zf -> common . fn_flags		3973694						
ANR	3973978	Symbol	zf -> common . arg_info		3973694						
ANR	3973979	Symbol	zf -> common		3973694						
ANR	3973980	Symbol	* ce		3973694						
ANR	3973981	Symbol	cur_arg_info -> class_name		3973694						
ANR	3973982	Symbol	cur_arg_info		3973694						
ANR	3973983	Symbol	UNEXPECTED		3973694						
ANR	3973984	Symbol	* cur_arg_info		3973694						
ANR	3973985	Symbol	cur_arg_info -> type_hint		3973694						
ANR	3973986	Symbol	ZEND_ACC_INTERFACE		3973694						
ANR	3973987	Symbol	ce -> name		3973694						
ANR	3973988	Symbol	cache_slot		3973694						
ANR	3973989	Symbol	IS_CALLABLE		3973694						
ANR	3973990	Symbol	zend_get_type_by_const		3973694						
ANR	3973991	Symbol	ce		3973694						
ANR	3973992	Symbol	NULL		3973694						
ANR	3973993	Symbol	zf -> common . num_args		3973694						
ANR	3973994	Symbol	* cache_slot		3973694						
ANR	3973995	Symbol	zf		3973694						
ANR	3973996	Symbol	ZSTR_VAL		3973694						
ANR	3973997	Symbol	ce -> ce_flags		3973694						
ANR	3973998	Symbol	* zf		3973694						
ANR	3973999	Symbol	ZEND_ACC_VARIADIC		3973694						
ANR	3974000	Symbol	zend_verify_arg_class_kind		3973694						
ANR	3974001	Symbol	EXPECTED		3973694						
ANR	3974002	Function	zend_verify_missing_arg	896:0:28739:29712							
ANR	3974003	FunctionDef	"zend_verify_missing_arg (zend_execute_data * execute_data , uint32_t arg_num , void * * cache_slot)"		3974002	0					
ANR	3974004	CompoundStatement		897:0:28855:29712	3974002	0					
ANR	3974005	IfStatement	"if ( EXPECTED ( ! ( EX ( func ) -> common . fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) ) || UNEXPECTED ( zend_verify_missing_arg_type ( EX ( func ) , arg_num , cache_slot ) ) )"		3974002	0					
ANR	3974006	Condition	"EXPECTED ( ! ( EX ( func ) -> common . fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) ) || UNEXPECTED ( zend_verify_missing_arg_type ( EX ( func ) , arg_num , cache_slot ) )"	898:5:28862:29005	3974002	0	True				
ANR	3974007	OrExpression	"EXPECTED ( ! ( EX ( func ) -> common . fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) ) || UNEXPECTED ( zend_verify_missing_arg_type ( EX ( func ) , arg_num , cache_slot ) )"		3974002	0		||			
ANR	3974008	CallExpression	EXPECTED ( ! ( EX ( func ) -> common . fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) )		3974002	0					
ANR	3974009	Callee	EXPECTED		3974002	0					
ANR	3974010	Identifier	EXPECTED		3974002	0					
ANR	3974011	ArgumentList	! ( EX ( func ) -> common . fn_flags & ZEND_ACC_HAS_TYPE_HINTS )		3974002	1					
ANR	3974012	Argument	! ( EX ( func ) -> common . fn_flags & ZEND_ACC_HAS_TYPE_HINTS )		3974002	0					
ANR	3974013	UnaryOperationExpression	! ( EX ( func ) -> common . fn_flags & ZEND_ACC_HAS_TYPE_HINTS )		3974002	0					
ANR	3974014	UnaryOperator	!		3974002	0					
ANR	3974015	BitAndExpression	EX ( func ) -> common . fn_flags & ZEND_ACC_HAS_TYPE_HINTS		3974002	1		&			
ANR	3974016	MemberAccess	EX ( func ) -> common . fn_flags		3974002	0					
ANR	3974017	PtrMemberAccess	EX ( func ) -> common		3974002	0					
ANR	3974018	CallExpression	EX ( func )		3974002	0					
ANR	3974019	Callee	EX		3974002	0					
ANR	3974020	Identifier	EX		3974002	0					
ANR	3974021	ArgumentList	func		3974002	1					
ANR	3974022	Argument	func		3974002	0					
ANR	3974023	Identifier	func		3974002	0					
ANR	3974024	Identifier	common		3974002	1					
ANR	3974025	Identifier	fn_flags		3974002	1					
ANR	3974026	Identifier	ZEND_ACC_HAS_TYPE_HINTS		3974002	1					
ANR	3974027	CallExpression	"UNEXPECTED ( zend_verify_missing_arg_type ( EX ( func ) , arg_num , cache_slot ) )"		3974002	1					
ANR	3974028	Callee	UNEXPECTED		3974002	0					
ANR	3974029	Identifier	UNEXPECTED		3974002	0					
ANR	3974030	ArgumentList	"zend_verify_missing_arg_type ( EX ( func ) , arg_num , cache_slot )"		3974002	1					
ANR	3974031	Argument	"zend_verify_missing_arg_type ( EX ( func ) , arg_num , cache_slot )"		3974002	0					
ANR	3974032	CallExpression	"zend_verify_missing_arg_type ( EX ( func ) , arg_num , cache_slot )"		3974002	0					
ANR	3974033	Callee	zend_verify_missing_arg_type		3974002	0					
ANR	3974034	Identifier	zend_verify_missing_arg_type		3974002	0					
ANR	3974035	ArgumentList	EX ( func )		3974002	1					
ANR	3974036	Argument	EX ( func )		3974002	0					
ANR	3974037	CallExpression	EX ( func )		3974002	0					
ANR	3974038	Callee	EX		3974002	0					
ANR	3974039	Identifier	EX		3974002	0					
ANR	3974040	ArgumentList	func		3974002	1					
ANR	3974041	Argument	func		3974002	0					
ANR	3974042	Identifier	func		3974002	0					
ANR	3974043	Argument	arg_num		3974002	1					
ANR	3974044	Identifier	arg_num		3974002	0					
ANR	3974045	Argument	cache_slot		3974002	2					
ANR	3974046	Identifier	cache_slot		3974002	0					
ANR	3974047	CompoundStatement		7:2:421:467	3974002	1					
ANR	3974048	IdentifierDeclStatement	"const char * class_name = EX ( func ) -> common . scope ? ZSTR_VAL ( EX ( func ) -> common . scope -> name ) : """" ;"	900:2:29012:29105	3974002	0	True				
ANR	3974049	IdentifierDecl	"* class_name = EX ( func ) -> common . scope ? ZSTR_VAL ( EX ( func ) -> common . scope -> name ) : """""		3974002	0					
ANR	3974050	IdentifierDeclType	const char *		3974002	0					
ANR	3974051	Identifier	class_name		3974002	1					
ANR	3974052	AssignmentExpression	"* class_name = EX ( func ) -> common . scope ? ZSTR_VAL ( EX ( func ) -> common . scope -> name ) : """""		3974002	2		=			
ANR	3974053	Identifier	class_name		3974002	0					
ANR	3974054	ConditionalExpression	"EX ( func ) -> common . scope ? ZSTR_VAL ( EX ( func ) -> common . scope -> name ) : """""		3974002	1					
ANR	3974055	Condition	EX ( func ) -> common . scope		3974002	0					
ANR	3974056	MemberAccess	EX ( func ) -> common . scope		3974002	0					
ANR	3974057	PtrMemberAccess	EX ( func ) -> common		3974002	0					
ANR	3974058	CallExpression	EX ( func )		3974002	0					
ANR	3974059	Callee	EX		3974002	0					
ANR	3974060	Identifier	EX		3974002	0					
ANR	3974061	ArgumentList	func		3974002	1					
ANR	3974062	Argument	func		3974002	0					
ANR	3974063	Identifier	func		3974002	0					
ANR	3974064	Identifier	common		3974002	1					
ANR	3974065	Identifier	scope		3974002	1					
ANR	3974066	CallExpression	ZSTR_VAL ( EX ( func ) -> common . scope -> name )		3974002	1					
ANR	3974067	Callee	ZSTR_VAL		3974002	0					
ANR	3974068	Identifier	ZSTR_VAL		3974002	0					
ANR	3974069	ArgumentList	EX ( func ) -> common . scope -> name		3974002	1					
ANR	3974070	Argument	EX ( func ) -> common . scope -> name		3974002	0					
ANR	3974071	PtrMemberAccess	EX ( func ) -> common . scope -> name		3974002	0					
ANR	3974072	MemberAccess	EX ( func ) -> common . scope		3974002	0					
ANR	3974073	PtrMemberAccess	EX ( func ) -> common		3974002	0					
ANR	3974074	CallExpression	EX ( func )		3974002	0					
ANR	3974075	Callee	EX		3974002	0					
ANR	3974076	Identifier	EX		3974002	0					
ANR	3974077	ArgumentList	func		3974002	1					
ANR	3974078	Argument	func		3974002	0					
ANR	3974079	Identifier	func		3974002	0					
ANR	3974080	Identifier	common		3974002	1					
ANR	3974081	Identifier	scope		3974002	1					
ANR	3974082	Identifier	name		3974002	1					
ANR	3974083	PrimaryExpression	""""""		3974002	2					
ANR	3974084	IdentifierDeclStatement	"const char * space = EX ( func ) -> common . scope ? ""::"" : """" ;"	901:2:29109:29163	3974002	1	True				
ANR	3974085	IdentifierDecl	"* space = EX ( func ) -> common . scope ? ""::"" : """""		3974002	0					
ANR	3974086	IdentifierDeclType	const char *		3974002	0					
ANR	3974087	Identifier	space		3974002	1					
ANR	3974088	AssignmentExpression	"* space = EX ( func ) -> common . scope ? ""::"" : """""		3974002	2		=			
ANR	3974089	Identifier	space		3974002	0					
ANR	3974090	ConditionalExpression	"EX ( func ) -> common . scope ? ""::"" : """""		3974002	1					
ANR	3974091	Condition	EX ( func ) -> common . scope		3974002	0					
ANR	3974092	MemberAccess	EX ( func ) -> common . scope		3974002	0					
ANR	3974093	PtrMemberAccess	EX ( func ) -> common		3974002	0					
ANR	3974094	CallExpression	EX ( func )		3974002	0					
ANR	3974095	Callee	EX		3974002	0					
ANR	3974096	Identifier	EX		3974002	0					
ANR	3974097	ArgumentList	func		3974002	1					
ANR	3974098	Argument	func		3974002	0					
ANR	3974099	Identifier	func		3974002	0					
ANR	3974100	Identifier	common		3974002	1					
ANR	3974101	Identifier	scope		3974002	1					
ANR	3974102	PrimaryExpression	"""::"""		3974002	1					
ANR	3974103	PrimaryExpression	""""""		3974002	2					
ANR	3974104	IdentifierDeclStatement	"const char * func_name = EX ( func ) -> common . function_name ? ZSTR_VAL ( EX ( func ) -> common . function_name ) : ""main"" ;"	902:2:29167:29273	3974002	2	True				
ANR	3974105	IdentifierDecl	"* func_name = EX ( func ) -> common . function_name ? ZSTR_VAL ( EX ( func ) -> common . function_name ) : ""main"""		3974002	0					
ANR	3974106	IdentifierDeclType	const char *		3974002	0					
ANR	3974107	Identifier	func_name		3974002	1					
ANR	3974108	AssignmentExpression	"* func_name = EX ( func ) -> common . function_name ? ZSTR_VAL ( EX ( func ) -> common . function_name ) : ""main"""		3974002	2		=			
ANR	3974109	Identifier	func_name		3974002	0					
ANR	3974110	ConditionalExpression	"EX ( func ) -> common . function_name ? ZSTR_VAL ( EX ( func ) -> common . function_name ) : ""main"""		3974002	1					
ANR	3974111	Condition	EX ( func ) -> common . function_name		3974002	0					
ANR	3974112	MemberAccess	EX ( func ) -> common . function_name		3974002	0					
ANR	3974113	PtrMemberAccess	EX ( func ) -> common		3974002	0					
ANR	3974114	CallExpression	EX ( func )		3974002	0					
ANR	3974115	Callee	EX		3974002	0					
ANR	3974116	Identifier	EX		3974002	0					
ANR	3974117	ArgumentList	func		3974002	1					
ANR	3974118	Argument	func		3974002	0					
ANR	3974119	Identifier	func		3974002	0					
ANR	3974120	Identifier	common		3974002	1					
ANR	3974121	Identifier	function_name		3974002	1					
ANR	3974122	CallExpression	ZSTR_VAL ( EX ( func ) -> common . function_name )		3974002	1					
ANR	3974123	Callee	ZSTR_VAL		3974002	0					
ANR	3974124	Identifier	ZSTR_VAL		3974002	0					
ANR	3974125	ArgumentList	EX ( func ) -> common . function_name		3974002	1					
ANR	3974126	Argument	EX ( func ) -> common . function_name		3974002	0					
ANR	3974127	MemberAccess	EX ( func ) -> common . function_name		3974002	0					
ANR	3974128	PtrMemberAccess	EX ( func ) -> common		3974002	0					
ANR	3974129	CallExpression	EX ( func )		3974002	0					
ANR	3974130	Callee	EX		3974002	0					
ANR	3974131	Identifier	EX		3974002	0					
ANR	3974132	ArgumentList	func		3974002	1					
ANR	3974133	Argument	func		3974002	0					
ANR	3974134	Identifier	func		3974002	0					
ANR	3974135	Identifier	common		3974002	1					
ANR	3974136	Identifier	function_name		3974002	1					
ANR	3974137	PrimaryExpression	"""main"""		3974002	2					
ANR	3974138	IdentifierDeclStatement	zend_execute_data * ptr = EX ( prev_execute_data ) ;	903:2:29277:29323	3974002	3	True				
ANR	3974139	IdentifierDecl	* ptr = EX ( prev_execute_data )		3974002	0					
ANR	3974140	IdentifierDeclType	zend_execute_data *		3974002	0					
ANR	3974141	Identifier	ptr		3974002	1					
ANR	3974142	AssignmentExpression	* ptr = EX ( prev_execute_data )		3974002	2		=			
ANR	3974143	Identifier	ptr		3974002	0					
ANR	3974144	CallExpression	EX ( prev_execute_data )		3974002	1					
ANR	3974145	Callee	EX		3974002	0					
ANR	3974146	Identifier	EX		3974002	0					
ANR	3974147	ArgumentList	prev_execute_data		3974002	1					
ANR	3974148	Argument	prev_execute_data		3974002	0					
ANR	3974149	Identifier	prev_execute_data		3974002	0					
ANR	3974150	IfStatement	if ( ptr && ptr -> func && ZEND_USER_CODE ( ptr -> func -> common . type ) )		3974002	4					
ANR	3974151	Condition	ptr && ptr -> func && ZEND_USER_CODE ( ptr -> func -> common . type )	905:6:29332:29389	3974002	0	True				
ANR	3974152	AndExpression	ptr && ptr -> func && ZEND_USER_CODE ( ptr -> func -> common . type )		3974002	0		&&			
ANR	3974153	Identifier	ptr		3974002	0					
ANR	3974154	AndExpression	ptr -> func && ZEND_USER_CODE ( ptr -> func -> common . type )		3974002	1		&&			
ANR	3974155	PtrMemberAccess	ptr -> func		3974002	0					
ANR	3974156	Identifier	ptr		3974002	0					
ANR	3974157	Identifier	func		3974002	1					
ANR	3974158	CallExpression	ZEND_USER_CODE ( ptr -> func -> common . type )		3974002	1					
ANR	3974159	Callee	ZEND_USER_CODE		3974002	0					
ANR	3974160	Identifier	ZEND_USER_CODE		3974002	0					
ANR	3974161	ArgumentList	ptr -> func -> common . type		3974002	1					
ANR	3974162	Argument	ptr -> func -> common . type		3974002	0					
ANR	3974163	MemberAccess	ptr -> func -> common . type		3974002	0					
ANR	3974164	PtrMemberAccess	ptr -> func -> common		3974002	0					
ANR	3974165	PtrMemberAccess	ptr -> func		3974002	0					
ANR	3974166	Identifier	ptr		3974002	0					
ANR	3974167	Identifier	func		3974002	1					
ANR	3974168	Identifier	common		3974002	1					
ANR	3974169	Identifier	type		3974002	1					
ANR	3974170	CompoundStatement		9:66:536:536	3974002	1					
ANR	3974171	ExpressionStatement	"zend_error ( E_WARNING , ""Missing argument %u for %s%s%s(), called in %s on line %d and defined"" , arg_num , class_name , space , func_name , ZSTR_VAL ( ptr -> func -> op_array . filename ) , ptr -> opline -> lineno )"	906:3:29397:29591	3974002	0	True				
ANR	3974172	CallExpression	"zend_error ( E_WARNING , ""Missing argument %u for %s%s%s(), called in %s on line %d and defined"" , arg_num , class_name , space , func_name , ZSTR_VAL ( ptr -> func -> op_array . filename ) , ptr -> opline -> lineno )"		3974002	0					
ANR	3974173	Callee	zend_error		3974002	0					
ANR	3974174	Identifier	zend_error		3974002	0					
ANR	3974175	ArgumentList	E_WARNING		3974002	1					
ANR	3974176	Argument	E_WARNING		3974002	0					
ANR	3974177	Identifier	E_WARNING		3974002	0					
ANR	3974178	Argument	"""Missing argument %u for %s%s%s(), called in %s on line %d and defined"""		3974002	1					
ANR	3974179	PrimaryExpression	"""Missing argument %u for %s%s%s(), called in %s on line %d and defined"""		3974002	0					
ANR	3974180	Argument	arg_num		3974002	2					
ANR	3974181	Identifier	arg_num		3974002	0					
ANR	3974182	Argument	class_name		3974002	3					
ANR	3974183	Identifier	class_name		3974002	0					
ANR	3974184	Argument	space		3974002	4					
ANR	3974185	Identifier	space		3974002	0					
ANR	3974186	Argument	func_name		3974002	5					
ANR	3974187	Identifier	func_name		3974002	0					
ANR	3974188	Argument	ZSTR_VAL ( ptr -> func -> op_array . filename )		3974002	6					
ANR	3974189	CallExpression	ZSTR_VAL ( ptr -> func -> op_array . filename )		3974002	0					
ANR	3974190	Callee	ZSTR_VAL		3974002	0					
ANR	3974191	Identifier	ZSTR_VAL		3974002	0					
ANR	3974192	ArgumentList	ptr -> func -> op_array . filename		3974002	1					
ANR	3974193	Argument	ptr -> func -> op_array . filename		3974002	0					
ANR	3974194	MemberAccess	ptr -> func -> op_array . filename		3974002	0					
ANR	3974195	PtrMemberAccess	ptr -> func -> op_array		3974002	0					
ANR	3974196	PtrMemberAccess	ptr -> func		3974002	0					
ANR	3974197	Identifier	ptr		3974002	0					
ANR	3974198	Identifier	func		3974002	1					
ANR	3974199	Identifier	op_array		3974002	1					
ANR	3974200	Identifier	filename		3974002	1					
ANR	3974201	Argument	ptr -> opline -> lineno		3974002	7					
ANR	3974202	PtrMemberAccess	ptr -> opline -> lineno		3974002	0					
ANR	3974203	PtrMemberAccess	ptr -> opline		3974002	0					
ANR	3974204	Identifier	ptr		3974002	0					
ANR	3974205	Identifier	opline		3974002	1					
ANR	3974206	Identifier	lineno		3974002	1					
ANR	3974207	ElseStatement	else		3974002	0					
ANR	3974208	CompoundStatement		11:9:746:746	3974002	0					
ANR	3974209	ExpressionStatement	"zend_error ( E_WARNING , ""Missing argument %u for %s%s%s()"" , arg_num , class_name , space , func_name )"	908:3:29607:29703	3974002	0	True				
ANR	3974210	CallExpression	"zend_error ( E_WARNING , ""Missing argument %u for %s%s%s()"" , arg_num , class_name , space , func_name )"		3974002	0					
ANR	3974211	Callee	zend_error		3974002	0					
ANR	3974212	Identifier	zend_error		3974002	0					
ANR	3974213	ArgumentList	E_WARNING		3974002	1					
ANR	3974214	Argument	E_WARNING		3974002	0					
ANR	3974215	Identifier	E_WARNING		3974002	0					
ANR	3974216	Argument	"""Missing argument %u for %s%s%s()"""		3974002	1					
ANR	3974217	PrimaryExpression	"""Missing argument %u for %s%s%s()"""		3974002	0					
ANR	3974218	Argument	arg_num		3974002	2					
ANR	3974219	Identifier	arg_num		3974002	0					
ANR	3974220	Argument	class_name		3974002	3					
ANR	3974221	Identifier	class_name		3974002	0					
ANR	3974222	Argument	space		3974002	4					
ANR	3974223	Identifier	space		3974002	0					
ANR	3974224	Argument	func_name		3974002	5					
ANR	3974225	Identifier	func_name		3974002	0					
ANR	3974226	ReturnType	static ZEND_COLD void		3974002	1					
ANR	3974227	Identifier	zend_verify_missing_arg		3974002	2					
ANR	3974228	ParameterList	"zend_execute_data * execute_data , uint32_t arg_num , void * * cache_slot"		3974002	3					
ANR	3974229	Parameter	zend_execute_data * execute_data	896:46:28785:28815	3974002	0	True				
ANR	3974230	ParameterType	zend_execute_data *		3974002	0					
ANR	3974231	Identifier	execute_data		3974002	1					
ANR	3974232	Parameter	uint32_t arg_num	896:79:28818:28833	3974002	1	True				
ANR	3974233	ParameterType	uint32_t		3974002	0					
ANR	3974234	Identifier	arg_num		3974002	1					
ANR	3974235	Parameter	void * * cache_slot	896:97:28836:28852	3974002	2	True				
ANR	3974236	ParameterType	void * *		3974002	0					
ANR	3974237	Identifier	cache_slot		3974002	1					
ANR	3974238	CFGEntryNode	ENTRY		3974002		True				
ANR	3974239	CFGExitNode	EXIT		3974002		True				
ANR	3974240	Symbol	arg_num		3974002						
ANR	3974241	Symbol	ptr -> func -> op_array		3974002						
ANR	3974242	Symbol	* * ptr		3974002						
ANR	3974243	Symbol	ptr -> opline		3974002						
ANR	3974244	Symbol	zend_verify_missing_arg_type		3974002						
ANR	3974245	Symbol	ptr -> func -> op_array . filename		3974002						
ANR	3974246	Symbol	EX ( func ) -> common . scope -> name		3974002						
ANR	3974247	Symbol	EX ( func ) -> common		3974002						
ANR	3974248	Symbol	* ptr -> func		3974002						
ANR	3974249	Symbol	EX ( func ) -> common . fn_flags		3974002						
ANR	3974250	Symbol	ptr -> func		3974002						
ANR	3974251	Symbol	execute_data		3974002						
ANR	3974252	Symbol	space		3974002						
ANR	3974253	Symbol	ZEND_ACC_HAS_TYPE_HINTS		3974002						
ANR	3974254	Symbol	UNEXPECTED		3974002						
ANR	3974255	Symbol	E_WARNING		3974002						
ANR	3974256	Symbol	* ptr -> opline		3974002						
ANR	3974257	Symbol	* ptr		3974002						
ANR	3974258	Symbol	ptr -> opline -> lineno		3974002						
ANR	3974259	Symbol	* * EX		3974002						
ANR	3974260	Symbol	class_name		3974002						
ANR	3974261	Symbol	func_name		3974002						
ANR	3974262	Symbol	cache_slot		3974002						
ANR	3974263	Symbol	EX ( func ) -> common . function_name		3974002						
ANR	3974264	Symbol	prev_execute_data		3974002						
ANR	3974265	Symbol	EX ( func ) -> common . scope		3974002						
ANR	3974266	Symbol	ZSTR_VAL		3974002						
ANR	3974267	Symbol	ptr		3974002						
ANR	3974268	Symbol	* EX ( func ) -> common . scope		3974002						
ANR	3974269	Symbol	EX		3974002						
ANR	3974270	Symbol	func		3974002						
ANR	3974271	Symbol	* EX ( func ) -> common		3974002						
ANR	3974272	Symbol	ZEND_USER_CODE		3974002						
ANR	3974273	Symbol	* EX		3974002						
ANR	3974274	Symbol	ptr -> func -> common . type		3974002						
ANR	3974275	Symbol	EXPECTED		3974002						
ANR	3974276	Symbol	ptr -> func -> common		3974002						
ANR	3974277	Function	zend_verify_return_error	913:0:29715:30258							
ANR	3974278	FunctionDef	"zend_verify_return_error (const zend_function * zf , const char * need_msg , const char * need_kind , const char * returned_msg , const char * returned_kind)"		3974277	0					
ANR	3974279	CompoundStatement		914:0:29885:30258	3974277	0					
ANR	3974280	IdentifierDeclStatement	const char * fname = ZSTR_VAL ( zf -> common . function_name ) ;	915:1:29888:29942	3974277	0	True				
ANR	3974281	IdentifierDecl	* fname = ZSTR_VAL ( zf -> common . function_name )		3974277	0					
ANR	3974282	IdentifierDeclType	const char *		3974277	0					
ANR	3974283	Identifier	fname		3974277	1					
ANR	3974284	AssignmentExpression	* fname = ZSTR_VAL ( zf -> common . function_name )		3974277	2		=			
ANR	3974285	Identifier	fname		3974277	0					
ANR	3974286	CallExpression	ZSTR_VAL ( zf -> common . function_name )		3974277	1					
ANR	3974287	Callee	ZSTR_VAL		3974277	0					
ANR	3974288	Identifier	ZSTR_VAL		3974277	0					
ANR	3974289	ArgumentList	zf -> common . function_name		3974277	1					
ANR	3974290	Argument	zf -> common . function_name		3974277	0					
ANR	3974291	MemberAccess	zf -> common . function_name		3974277	0					
ANR	3974292	PtrMemberAccess	zf -> common		3974277	0					
ANR	3974293	Identifier	zf		3974277	0					
ANR	3974294	Identifier	common		3974277	1					
ANR	3974295	Identifier	function_name		3974277	1					
ANR	3974296	IdentifierDeclStatement	const char * fsep ;	916:1:29945:29961	3974277	1	True				
ANR	3974297	IdentifierDecl	* fsep		3974277	0					
ANR	3974298	IdentifierDeclType	const char *		3974277	0					
ANR	3974299	Identifier	fsep		3974277	1					
ANR	3974300	IdentifierDeclStatement	const char * fclass ;	917:1:29964:29982	3974277	2	True				
ANR	3974301	IdentifierDecl	* fclass		3974277	0					
ANR	3974302	IdentifierDeclType	const char *		3974277	0					
ANR	3974303	Identifier	fclass		3974277	1					
ANR	3974304	IfStatement	if ( zf -> common . scope )		3974277	3					
ANR	3974305	Condition	zf -> common . scope	919:5:29990:30005	3974277	0	True				
ANR	3974306	MemberAccess	zf -> common . scope		3974277	0					
ANR	3974307	PtrMemberAccess	zf -> common		3974277	0					
ANR	3974308	Identifier	zf		3974277	0					
ANR	3974309	Identifier	common		3974277	1					
ANR	3974310	Identifier	scope		3974277	1					
ANR	3974311	CompoundStatement		6:23:122:122	3974277	1					
ANR	3974312	ExpressionStatement	"fsep = ""::"""	920:2:30012:30024	3974277	0	True				
ANR	3974313	AssignmentExpression	"fsep = ""::"""		3974277	0		=			
ANR	3974314	Identifier	fsep		3974277	0					
ANR	3974315	PrimaryExpression	"""::"""		3974277	1					
ANR	3974316	ExpressionStatement	fclass = ZSTR_VAL ( zf -> common . scope -> name )	921:2:30028:30069	3974277	1	True				
ANR	3974317	AssignmentExpression	fclass = ZSTR_VAL ( zf -> common . scope -> name )		3974277	0		=			
ANR	3974318	Identifier	fclass		3974277	0					
ANR	3974319	CallExpression	ZSTR_VAL ( zf -> common . scope -> name )		3974277	1					
ANR	3974320	Callee	ZSTR_VAL		3974277	0					
ANR	3974321	Identifier	ZSTR_VAL		3974277	0					
ANR	3974322	ArgumentList	zf -> common . scope -> name		3974277	1					
ANR	3974323	Argument	zf -> common . scope -> name		3974277	0					
ANR	3974324	PtrMemberAccess	zf -> common . scope -> name		3974277	0					
ANR	3974325	MemberAccess	zf -> common . scope		3974277	0					
ANR	3974326	PtrMemberAccess	zf -> common		3974277	0					
ANR	3974327	Identifier	zf		3974277	0					
ANR	3974328	Identifier	common		3974277	1					
ANR	3974329	Identifier	scope		3974277	1					
ANR	3974330	Identifier	name		3974277	1					
ANR	3974331	ElseStatement	else		3974277	0					
ANR	3974332	CompoundStatement		9:8:193:193	3974277	0					
ANR	3974333	ExpressionStatement	"fsep = """""	923:2:30083:30093	3974277	0	True				
ANR	3974334	AssignmentExpression	"fsep = """""		3974277	0		=			
ANR	3974335	Identifier	fsep		3974277	0					
ANR	3974336	PrimaryExpression	""""""		3974277	1					
ANR	3974337	ExpressionStatement	"fclass = """""	924:2:30097:30108	3974277	1	True				
ANR	3974338	AssignmentExpression	"fclass = """""		3974277	0		=			
ANR	3974339	Identifier	fclass		3974277	0					
ANR	3974340	PrimaryExpression	""""""		3974277	1					
ANR	3974341	ExpressionStatement	"zend_type_error ( ""Return value of %s%s%s() must %s%s, %s%s returned"" , fclass , fsep , fname , need_msg , need_kind , returned_msg , returned_kind )"	927:1:30115:30256	3974277	4	True				
ANR	3974342	CallExpression	"zend_type_error ( ""Return value of %s%s%s() must %s%s, %s%s returned"" , fclass , fsep , fname , need_msg , need_kind , returned_msg , returned_kind )"		3974277	0					
ANR	3974343	Callee	zend_type_error		3974277	0					
ANR	3974344	Identifier	zend_type_error		3974277	0					
ANR	3974345	ArgumentList	"""Return value of %s%s%s() must %s%s, %s%s returned"""		3974277	1					
ANR	3974346	Argument	"""Return value of %s%s%s() must %s%s, %s%s returned"""		3974277	0					
ANR	3974347	PrimaryExpression	"""Return value of %s%s%s() must %s%s, %s%s returned"""		3974277	0					
ANR	3974348	Argument	fclass		3974277	1					
ANR	3974349	Identifier	fclass		3974277	0					
ANR	3974350	Argument	fsep		3974277	2					
ANR	3974351	Identifier	fsep		3974277	0					
ANR	3974352	Argument	fname		3974277	3					
ANR	3974353	Identifier	fname		3974277	0					
ANR	3974354	Argument	need_msg		3974277	4					
ANR	3974355	Identifier	need_msg		3974277	0					
ANR	3974356	Argument	need_kind		3974277	5					
ANR	3974357	Identifier	need_kind		3974277	0					
ANR	3974358	Argument	returned_msg		3974277	6					
ANR	3974359	Identifier	returned_msg		3974277	0					
ANR	3974360	Argument	returned_kind		3974277	7					
ANR	3974361	Identifier	returned_kind		3974277	0					
ANR	3974362	ReturnType	static ZEND_COLD void		3974277	1					
ANR	3974363	Identifier	zend_verify_return_error		3974277	2					
ANR	3974364	ParameterList	"const zend_function * zf , const char * need_msg , const char * need_kind , const char * returned_msg , const char * returned_kind"		3974277	3					
ANR	3974365	Parameter	const zend_function * zf	913:47:29762:29784	3974277	0	True				
ANR	3974366	ParameterType	const zend_function *		3974277	0					
ANR	3974367	Identifier	zf		3974277	1					
ANR	3974368	Parameter	const char * need_msg	913:72:29787:29806	3974277	1	True				
ANR	3974369	ParameterType	const char *		3974277	0					
ANR	3974370	Identifier	need_msg		3974277	1					
ANR	3974371	Parameter	const char * need_kind	913:94:29809:29829	3974277	2	True				
ANR	3974372	ParameterType	const char *		3974277	0					
ANR	3974373	Identifier	need_kind		3974277	1					
ANR	3974374	Parameter	const char * returned_msg	913:117:29832:29855	3974277	3	True				
ANR	3974375	ParameterType	const char *		3974277	0					
ANR	3974376	Identifier	returned_msg		3974277	1					
ANR	3974377	Parameter	const char * returned_kind	913:143:29858:29882	3974277	4	True				
ANR	3974378	ParameterType	const char *		3974277	0					
ANR	3974379	Identifier	returned_kind		3974277	1					
ANR	3974380	CFGEntryNode	ENTRY		3974277		True				
ANR	3974381	CFGExitNode	EXIT		3974277		True				
ANR	3974382	Symbol	fname		3974277						
ANR	3974383	Symbol	fclass		3974277						
ANR	3974384	Symbol	need_msg		3974277						
ANR	3974385	Symbol	returned_kind		3974277						
ANR	3974386	Symbol	fsep		3974277						
ANR	3974387	Symbol	zf -> common		3974277						
ANR	3974388	Symbol	zf		3974277						
ANR	3974389	Symbol	* zf -> common		3974277						
ANR	3974390	Symbol	returned_msg		3974277						
ANR	3974391	Symbol	ZSTR_VAL		3974277						
ANR	3974392	Symbol	zf -> common . function_name		3974277						
ANR	3974393	Symbol	* zf		3974277						
ANR	3974394	Symbol	need_kind		3974277						
ANR	3974395	Symbol	* zf -> common . scope		3974277						
ANR	3974396	Symbol	* * zf		3974277						
ANR	3974397	Symbol	zf -> common . scope -> name		3974277						
ANR	3974398	Symbol	zf -> common . scope		3974277						
ANR	3974399	Function	zend_verify_internal_return_error	931:0:30261:30831							
ANR	3974400	FunctionDef	"zend_verify_internal_return_error (const zend_function * zf , const char * need_msg , const char * need_kind , const char * returned_msg , const char * returned_kind)"		3974399	0					
ANR	3974401	CompoundStatement		932:0:30440:30831	3974399	0					
ANR	3974402	IdentifierDeclStatement	const char * fname = ZSTR_VAL ( zf -> common . function_name ) ;	933:1:30443:30497	3974399	0	True				
ANR	3974403	IdentifierDecl	* fname = ZSTR_VAL ( zf -> common . function_name )		3974399	0					
ANR	3974404	IdentifierDeclType	const char *		3974399	0					
ANR	3974405	Identifier	fname		3974399	1					
ANR	3974406	AssignmentExpression	* fname = ZSTR_VAL ( zf -> common . function_name )		3974399	2		=			
ANR	3974407	Identifier	fname		3974399	0					
ANR	3974408	CallExpression	ZSTR_VAL ( zf -> common . function_name )		3974399	1					
ANR	3974409	Callee	ZSTR_VAL		3974399	0					
ANR	3974410	Identifier	ZSTR_VAL		3974399	0					
ANR	3974411	ArgumentList	zf -> common . function_name		3974399	1					
ANR	3974412	Argument	zf -> common . function_name		3974399	0					
ANR	3974413	MemberAccess	zf -> common . function_name		3974399	0					
ANR	3974414	PtrMemberAccess	zf -> common		3974399	0					
ANR	3974415	Identifier	zf		3974399	0					
ANR	3974416	Identifier	common		3974399	1					
ANR	3974417	Identifier	function_name		3974399	1					
ANR	3974418	IdentifierDeclStatement	const char * fsep ;	934:1:30500:30516	3974399	1	True				
ANR	3974419	IdentifierDecl	* fsep		3974399	0					
ANR	3974420	IdentifierDeclType	const char *		3974399	0					
ANR	3974421	Identifier	fsep		3974399	1					
ANR	3974422	IdentifierDeclStatement	const char * fclass ;	935:1:30519:30537	3974399	2	True				
ANR	3974423	IdentifierDecl	* fclass		3974399	0					
ANR	3974424	IdentifierDeclType	const char *		3974399	0					
ANR	3974425	Identifier	fclass		3974399	1					
ANR	3974426	IfStatement	if ( zf -> common . scope )		3974399	3					
ANR	3974427	Condition	zf -> common . scope	937:5:30545:30560	3974399	0	True				
ANR	3974428	MemberAccess	zf -> common . scope		3974399	0					
ANR	3974429	PtrMemberAccess	zf -> common		3974399	0					
ANR	3974430	Identifier	zf		3974399	0					
ANR	3974431	Identifier	common		3974399	1					
ANR	3974432	Identifier	scope		3974399	1					
ANR	3974433	CompoundStatement		6:23:122:122	3974399	1					
ANR	3974434	ExpressionStatement	"fsep = ""::"""	938:2:30567:30579	3974399	0	True				
ANR	3974435	AssignmentExpression	"fsep = ""::"""		3974399	0		=			
ANR	3974436	Identifier	fsep		3974399	0					
ANR	3974437	PrimaryExpression	"""::"""		3974399	1					
ANR	3974438	ExpressionStatement	fclass = ZSTR_VAL ( zf -> common . scope -> name )	939:2:30583:30624	3974399	1	True				
ANR	3974439	AssignmentExpression	fclass = ZSTR_VAL ( zf -> common . scope -> name )		3974399	0		=			
ANR	3974440	Identifier	fclass		3974399	0					
ANR	3974441	CallExpression	ZSTR_VAL ( zf -> common . scope -> name )		3974399	1					
ANR	3974442	Callee	ZSTR_VAL		3974399	0					
ANR	3974443	Identifier	ZSTR_VAL		3974399	0					
ANR	3974444	ArgumentList	zf -> common . scope -> name		3974399	1					
ANR	3974445	Argument	zf -> common . scope -> name		3974399	0					
ANR	3974446	PtrMemberAccess	zf -> common . scope -> name		3974399	0					
ANR	3974447	MemberAccess	zf -> common . scope		3974399	0					
ANR	3974448	PtrMemberAccess	zf -> common		3974399	0					
ANR	3974449	Identifier	zf		3974399	0					
ANR	3974450	Identifier	common		3974399	1					
ANR	3974451	Identifier	scope		3974399	1					
ANR	3974452	Identifier	name		3974399	1					
ANR	3974453	ElseStatement	else		3974399	0					
ANR	3974454	CompoundStatement		9:8:193:193	3974399	0					
ANR	3974455	ExpressionStatement	"fsep = """""	941:2:30638:30648	3974399	0	True				
ANR	3974456	AssignmentExpression	"fsep = """""		3974399	0		=			
ANR	3974457	Identifier	fsep		3974399	0					
ANR	3974458	PrimaryExpression	""""""		3974399	1					
ANR	3974459	ExpressionStatement	"fclass = """""	942:2:30652:30663	3974399	1	True				
ANR	3974460	AssignmentExpression	"fclass = """""		3974399	0		=			
ANR	3974461	Identifier	fclass		3974399	0					
ANR	3974462	PrimaryExpression	""""""		3974399	1					
ANR	3974463	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Return value of %s%s%s() must %s%s, %s%s returned"" , fclass , fsep , fname , need_msg , need_kind , returned_msg , returned_kind )"	945:1:30670:30829	3974399	4	True				
ANR	3974464	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Return value of %s%s%s() must %s%s, %s%s returned"" , fclass , fsep , fname , need_msg , need_kind , returned_msg , returned_kind )"		3974399	0					
ANR	3974465	Callee	zend_error_noreturn		3974399	0					
ANR	3974466	Identifier	zend_error_noreturn		3974399	0					
ANR	3974467	ArgumentList	E_CORE_ERROR		3974399	1					
ANR	3974468	Argument	E_CORE_ERROR		3974399	0					
ANR	3974469	Identifier	E_CORE_ERROR		3974399	0					
ANR	3974470	Argument	"""Return value of %s%s%s() must %s%s, %s%s returned"""		3974399	1					
ANR	3974471	PrimaryExpression	"""Return value of %s%s%s() must %s%s, %s%s returned"""		3974399	0					
ANR	3974472	Argument	fclass		3974399	2					
ANR	3974473	Identifier	fclass		3974399	0					
ANR	3974474	Argument	fsep		3974399	3					
ANR	3974475	Identifier	fsep		3974399	0					
ANR	3974476	Argument	fname		3974399	4					
ANR	3974477	Identifier	fname		3974399	0					
ANR	3974478	Argument	need_msg		3974399	5					
ANR	3974479	Identifier	need_msg		3974399	0					
ANR	3974480	Argument	need_kind		3974399	6					
ANR	3974481	Identifier	need_kind		3974399	0					
ANR	3974482	Argument	returned_msg		3974399	7					
ANR	3974483	Identifier	returned_msg		3974399	0					
ANR	3974484	Argument	returned_kind		3974399	8					
ANR	3974485	Identifier	returned_kind		3974399	0					
ANR	3974486	ReturnType	static ZEND_COLD void		3974399	1					
ANR	3974487	Identifier	zend_verify_internal_return_error		3974399	2					
ANR	3974488	ParameterList	"const zend_function * zf , const char * need_msg , const char * need_kind , const char * returned_msg , const char * returned_kind"		3974399	3					
ANR	3974489	Parameter	const zend_function * zf	931:56:30317:30339	3974399	0	True				
ANR	3974490	ParameterType	const zend_function *		3974399	0					
ANR	3974491	Identifier	zf		3974399	1					
ANR	3974492	Parameter	const char * need_msg	931:81:30342:30361	3974399	1	True				
ANR	3974493	ParameterType	const char *		3974399	0					
ANR	3974494	Identifier	need_msg		3974399	1					
ANR	3974495	Parameter	const char * need_kind	931:103:30364:30384	3974399	2	True				
ANR	3974496	ParameterType	const char *		3974399	0					
ANR	3974497	Identifier	need_kind		3974399	1					
ANR	3974498	Parameter	const char * returned_msg	931:126:30387:30410	3974399	3	True				
ANR	3974499	ParameterType	const char *		3974399	0					
ANR	3974500	Identifier	returned_msg		3974399	1					
ANR	3974501	Parameter	const char * returned_kind	931:152:30413:30437	3974399	4	True				
ANR	3974502	ParameterType	const char *		3974399	0					
ANR	3974503	Identifier	returned_kind		3974399	1					
ANR	3974504	CFGEntryNode	ENTRY		3974399		True				
ANR	3974505	CFGExitNode	EXIT		3974399		True				
ANR	3974506	Symbol	fname		3974399						
ANR	3974507	Symbol	fclass		3974399						
ANR	3974508	Symbol	need_msg		3974399						
ANR	3974509	Symbol	returned_kind		3974399						
ANR	3974510	Symbol	fsep		3974399						
ANR	3974511	Symbol	zf -> common		3974399						
ANR	3974512	Symbol	zf		3974399						
ANR	3974513	Symbol	* zf -> common		3974399						
ANR	3974514	Symbol	returned_msg		3974399						
ANR	3974515	Symbol	ZSTR_VAL		3974399						
ANR	3974516	Symbol	zf -> common . function_name		3974399						
ANR	3974517	Symbol	* zf		3974399						
ANR	3974518	Symbol	E_CORE_ERROR		3974399						
ANR	3974519	Symbol	need_kind		3974399						
ANR	3974520	Symbol	* zf -> common . scope		3974399						
ANR	3974521	Symbol	* * zf		3974399						
ANR	3974522	Symbol	zf -> common . scope -> name		3974399						
ANR	3974523	Symbol	zf -> common . scope		3974399						
ANR	3974524	Function	zend_verify_internal_return_type	950:0:30849:32439							
ANR	3974525	FunctionDef	"zend_verify_internal_return_type (zend_function * zf , zval * ret)"		3974524	0					
ANR	3974526	CompoundStatement		951:0:30923:32439	3974524	0					
ANR	3974527	IdentifierDeclStatement	zend_arg_info * ret_info = zf -> common . arg_info - 1 ;	952:1:30926:30975	3974524	0	True				
ANR	3974528	IdentifierDecl	* ret_info = zf -> common . arg_info - 1		3974524	0					
ANR	3974529	IdentifierDeclType	zend_arg_info *		3974524	0					
ANR	3974530	Identifier	ret_info		3974524	1					
ANR	3974531	AssignmentExpression	* ret_info = zf -> common . arg_info - 1		3974524	2		=			
ANR	3974532	Identifier	ret_info		3974524	0					
ANR	3974533	AdditiveExpression	zf -> common . arg_info - 1		3974524	1		-			
ANR	3974534	MemberAccess	zf -> common . arg_info		3974524	0					
ANR	3974535	PtrMemberAccess	zf -> common		3974524	0					
ANR	3974536	Identifier	zf		3974524	0					
ANR	3974537	Identifier	common		3974524	1					
ANR	3974538	Identifier	arg_info		3974524	1					
ANR	3974539	PrimaryExpression	1		3974524	1					
ANR	3974540	IdentifierDeclStatement	"char * need_msg , * class_name ;"	953:1:30978:31005	3974524	1	True				
ANR	3974541	IdentifierDecl	* need_msg		3974524	0					
ANR	3974542	IdentifierDeclType	char *		3974524	0					
ANR	3974543	Identifier	need_msg		3974524	1					
ANR	3974544	IdentifierDecl	* class_name		3974524	1					
ANR	3974545	IdentifierDeclType	char *		3974524	0					
ANR	3974546	Identifier	class_name		3974524	1					
ANR	3974547	IdentifierDeclStatement	zend_class_entry * ce ;	954:1:31008:31028	3974524	2	True				
ANR	3974548	IdentifierDecl	* ce		3974524	0					
ANR	3974549	IdentifierDeclType	zend_class_entry *		3974524	0					
ANR	3974550	Identifier	ce		3974524	1					
ANR	3974551	IfStatement	if ( ret_info -> type_hint )		3974524	3					
ANR	3974552	Condition	ret_info -> type_hint	957:5:31037:31055	3974524	0	True				
ANR	3974553	PtrMemberAccess	ret_info -> type_hint		3974524	0					
ANR	3974554	Identifier	ret_info		3974524	0					
ANR	3974555	Identifier	type_hint		3974524	1					
ANR	3974556	CompoundStatement		7:26:134:134	3974524	1					
ANR	3974557	IfStatement	if ( EXPECTED ( ret_info -> type_hint == Z_TYPE_P ( ret ) ) )		3974524	0					
ANR	3974558	Condition	EXPECTED ( ret_info -> type_hint == Z_TYPE_P ( ret ) )	958:6:31066:31111	3974524	0	True				
ANR	3974559	CallExpression	EXPECTED ( ret_info -> type_hint == Z_TYPE_P ( ret ) )		3974524	0					
ANR	3974560	Callee	EXPECTED		3974524	0					
ANR	3974561	Identifier	EXPECTED		3974524	0					
ANR	3974562	ArgumentList	ret_info -> type_hint == Z_TYPE_P ( ret )		3974524	1					
ANR	3974563	Argument	ret_info -> type_hint == Z_TYPE_P ( ret )		3974524	0					
ANR	3974564	EqualityExpression	ret_info -> type_hint == Z_TYPE_P ( ret )		3974524	0		==			
ANR	3974565	PtrMemberAccess	ret_info -> type_hint		3974524	0					
ANR	3974566	Identifier	ret_info		3974524	0					
ANR	3974567	Identifier	type_hint		3974524	1					
ANR	3974568	CallExpression	Z_TYPE_P ( ret )		3974524	1					
ANR	3974569	Callee	Z_TYPE_P		3974524	0					
ANR	3974570	Identifier	Z_TYPE_P		3974524	0					
ANR	3974571	ArgumentList	ret		3974524	1					
ANR	3974572	Argument	ret		3974524	0					
ANR	3974573	Identifier	ret		3974524	0					
ANR	3974574	CompoundStatement		8:54:190:190	3974524	1					
ANR	3974575	IfStatement	if ( ret_info -> class_name )		3974524	0					
ANR	3974576	Condition	ret_info -> class_name	959:7:31123:31142	3974524	0	True				
ANR	3974577	PtrMemberAccess	ret_info -> class_name		3974524	0					
ANR	3974578	Identifier	ret_info		3974524	0					
ANR	3974579	Identifier	class_name		3974524	1					
ANR	3974580	CompoundStatement		9:29:221:221	3974524	1					
ANR	3974581	ExpressionStatement	"need_msg = zend_verify_internal_arg_class_kind ( ( zend_internal_arg_info * ) ret_info , & class_name , & ce )"	960:4:31151:31251	3974524	0	True				
ANR	3974582	AssignmentExpression	"need_msg = zend_verify_internal_arg_class_kind ( ( zend_internal_arg_info * ) ret_info , & class_name , & ce )"		3974524	0		=			
ANR	3974583	Identifier	need_msg		3974524	0					
ANR	3974584	CallExpression	"zend_verify_internal_arg_class_kind ( ( zend_internal_arg_info * ) ret_info , & class_name , & ce )"		3974524	1					
ANR	3974585	Callee	zend_verify_internal_arg_class_kind		3974524	0					
ANR	3974586	Identifier	zend_verify_internal_arg_class_kind		3974524	0					
ANR	3974587	ArgumentList	( zend_internal_arg_info * ) ret_info		3974524	1					
ANR	3974588	Argument	( zend_internal_arg_info * ) ret_info		3974524	0					
ANR	3974589	CastExpression	( zend_internal_arg_info * ) ret_info		3974524	0					
ANR	3974590	CastTarget	zend_internal_arg_info *		3974524	0					
ANR	3974591	Identifier	ret_info		3974524	1					
ANR	3974592	Argument	& class_name		3974524	1					
ANR	3974593	UnaryOperationExpression	& class_name		3974524	0					
ANR	3974594	UnaryOperator	&		3974524	0					
ANR	3974595	Identifier	class_name		3974524	1					
ANR	3974596	Argument	& ce		3974524	2					
ANR	3974597	UnaryOperationExpression	& ce		3974524	0					
ANR	3974598	UnaryOperator	&		3974524	0					
ANR	3974599	Identifier	ce		3974524	1					
ANR	3974600	IfStatement	"if ( ! ce || ! instanceof_function ( Z_OBJCE_P ( ret ) , ce ) )"		3974524	1					
ANR	3974601	Condition	"! ce || ! instanceof_function ( Z_OBJCE_P ( ret ) , ce )"	961:8:31261:31307	3974524	0	True				
ANR	3974602	OrExpression	"! ce || ! instanceof_function ( Z_OBJCE_P ( ret ) , ce )"		3974524	0		||			
ANR	3974603	UnaryOperationExpression	! ce		3974524	0					
ANR	3974604	UnaryOperator	!		3974524	0					
ANR	3974605	Identifier	ce		3974524	1					
ANR	3974606	UnaryOperationExpression	"! instanceof_function ( Z_OBJCE_P ( ret ) , ce )"		3974524	1					
ANR	3974607	UnaryOperator	!		3974524	0					
ANR	3974608	CallExpression	"instanceof_function ( Z_OBJCE_P ( ret ) , ce )"		3974524	1					
ANR	3974609	Callee	instanceof_function		3974524	0					
ANR	3974610	Identifier	instanceof_function		3974524	0					
ANR	3974611	ArgumentList	Z_OBJCE_P ( ret )		3974524	1					
ANR	3974612	Argument	Z_OBJCE_P ( ret )		3974524	0					
ANR	3974613	CallExpression	Z_OBJCE_P ( ret )		3974524	0					
ANR	3974614	Callee	Z_OBJCE_P		3974524	0					
ANR	3974615	Identifier	Z_OBJCE_P		3974524	0					
ANR	3974616	ArgumentList	ret		3974524	1					
ANR	3974617	Argument	ret		3974524	0					
ANR	3974618	Identifier	ret		3974524	0					
ANR	3974619	Argument	ce		3974524	1					
ANR	3974620	Identifier	ce		3974524	0					
ANR	3974621	CompoundStatement		11:57:386:386	3974524	1					
ANR	3974622	ExpressionStatement	"zend_verify_internal_return_error ( zf , need_msg , class_name , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( ret ) -> name ) )"	962:5:31317:31424	3974524	0	True				
ANR	3974623	CallExpression	"zend_verify_internal_return_error ( zf , need_msg , class_name , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( ret ) -> name ) )"		3974524	0					
ANR	3974624	Callee	zend_verify_internal_return_error		3974524	0					
ANR	3974625	Identifier	zend_verify_internal_return_error		3974524	0					
ANR	3974626	ArgumentList	zf		3974524	1					
ANR	3974627	Argument	zf		3974524	0					
ANR	3974628	Identifier	zf		3974524	0					
ANR	3974629	Argument	need_msg		3974524	1					
ANR	3974630	Identifier	need_msg		3974524	0					
ANR	3974631	Argument	class_name		3974524	2					
ANR	3974632	Identifier	class_name		3974524	0					
ANR	3974633	Argument	"""instance of """		3974524	3					
ANR	3974634	PrimaryExpression	"""instance of """		3974524	0					
ANR	3974635	Argument	ZSTR_VAL ( Z_OBJCE_P ( ret ) -> name )		3974524	4					
ANR	3974636	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( ret ) -> name )		3974524	0					
ANR	3974637	Callee	ZSTR_VAL		3974524	0					
ANR	3974638	Identifier	ZSTR_VAL		3974524	0					
ANR	3974639	ArgumentList	Z_OBJCE_P ( ret ) -> name		3974524	1					
ANR	3974640	Argument	Z_OBJCE_P ( ret ) -> name		3974524	0					
ANR	3974641	PtrMemberAccess	Z_OBJCE_P ( ret ) -> name		3974524	0					
ANR	3974642	CallExpression	Z_OBJCE_P ( ret )		3974524	0					
ANR	3974643	Callee	Z_OBJCE_P		3974524	0					
ANR	3974644	Identifier	Z_OBJCE_P		3974524	0					
ANR	3974645	ArgumentList	ret		3974524	1					
ANR	3974646	Argument	ret		3974524	0					
ANR	3974647	Identifier	ret		3974524	0					
ANR	3974648	Identifier	name		3974524	1					
ANR	3974649	ReturnStatement	return 0 ;	963:5:31431:31439	3974524	1	True				
ANR	3974650	PrimaryExpression	0		3974524	0					
ANR	3974651	ElseStatement	else		3974524	0					
ANR	3974652	IfStatement	if ( Z_TYPE_P ( ret ) != IS_NULL || ! ret_info -> allow_null )		3974524	0					
ANR	3974653	Condition	Z_TYPE_P ( ret ) != IS_NULL || ! ret_info -> allow_null	966:13:31465:31513	3974524	0	True				
ANR	3974654	OrExpression	Z_TYPE_P ( ret ) != IS_NULL || ! ret_info -> allow_null		3974524	0		||			
ANR	3974655	EqualityExpression	Z_TYPE_P ( ret ) != IS_NULL		3974524	0		!=			
ANR	3974656	CallExpression	Z_TYPE_P ( ret )		3974524	0					
ANR	3974657	Callee	Z_TYPE_P		3974524	0					
ANR	3974658	Identifier	Z_TYPE_P		3974524	0					
ANR	3974659	ArgumentList	ret		3974524	1					
ANR	3974660	Argument	ret		3974524	0					
ANR	3974661	Identifier	ret		3974524	0					
ANR	3974662	Identifier	IS_NULL		3974524	1					
ANR	3974663	UnaryOperationExpression	! ret_info -> allow_null		3974524	1					
ANR	3974664	UnaryOperator	!		3974524	0					
ANR	3974665	PtrMemberAccess	ret_info -> allow_null		3974524	1					
ANR	3974666	Identifier	ret_info		3974524	0					
ANR	3974667	Identifier	allow_null		3974524	1					
ANR	3974668	CompoundStatement		16:64:592:592	3974524	1					
ANR	3974669	IfStatement	if ( ret_info -> class_name )		3974524	0					
ANR	3974670	Condition	ret_info -> class_name	967:7:31525:31544	3974524	0	True				
ANR	3974671	PtrMemberAccess	ret_info -> class_name		3974524	0					
ANR	3974672	Identifier	ret_info		3974524	0					
ANR	3974673	Identifier	class_name		3974524	1					
ANR	3974674	CompoundStatement		17:29:623:623	3974524	1					
ANR	3974675	ExpressionStatement	"need_msg = zend_verify_internal_arg_class_kind ( ( zend_internal_arg_info * ) ret_info , & class_name , & ce )"	968:4:31553:31653	3974524	0	True				
ANR	3974676	AssignmentExpression	"need_msg = zend_verify_internal_arg_class_kind ( ( zend_internal_arg_info * ) ret_info , & class_name , & ce )"		3974524	0		=			
ANR	3974677	Identifier	need_msg		3974524	0					
ANR	3974678	CallExpression	"zend_verify_internal_arg_class_kind ( ( zend_internal_arg_info * ) ret_info , & class_name , & ce )"		3974524	1					
ANR	3974679	Callee	zend_verify_internal_arg_class_kind		3974524	0					
ANR	3974680	Identifier	zend_verify_internal_arg_class_kind		3974524	0					
ANR	3974681	ArgumentList	( zend_internal_arg_info * ) ret_info		3974524	1					
ANR	3974682	Argument	( zend_internal_arg_info * ) ret_info		3974524	0					
ANR	3974683	CastExpression	( zend_internal_arg_info * ) ret_info		3974524	0					
ANR	3974684	CastTarget	zend_internal_arg_info *		3974524	0					
ANR	3974685	Identifier	ret_info		3974524	1					
ANR	3974686	Argument	& class_name		3974524	1					
ANR	3974687	UnaryOperationExpression	& class_name		3974524	0					
ANR	3974688	UnaryOperator	&		3974524	0					
ANR	3974689	Identifier	class_name		3974524	1					
ANR	3974690	Argument	& ce		3974524	2					
ANR	3974691	UnaryOperationExpression	& ce		3974524	0					
ANR	3974692	UnaryOperator	&		3974524	0					
ANR	3974693	Identifier	ce		3974524	1					
ANR	3974694	ExpressionStatement	"zend_verify_internal_return_error ( zf , need_msg , class_name , zend_zval_type_name ( ret ) , """" )"	969:4:31659:31748	3974524	1	True				
ANR	3974695	CallExpression	"zend_verify_internal_return_error ( zf , need_msg , class_name , zend_zval_type_name ( ret ) , """" )"		3974524	0					
ANR	3974696	Callee	zend_verify_internal_return_error		3974524	0					
ANR	3974697	Identifier	zend_verify_internal_return_error		3974524	0					
ANR	3974698	ArgumentList	zf		3974524	1					
ANR	3974699	Argument	zf		3974524	0					
ANR	3974700	Identifier	zf		3974524	0					
ANR	3974701	Argument	need_msg		3974524	1					
ANR	3974702	Identifier	need_msg		3974524	0					
ANR	3974703	Argument	class_name		3974524	2					
ANR	3974704	Identifier	class_name		3974524	0					
ANR	3974705	Argument	zend_zval_type_name ( ret )		3974524	3					
ANR	3974706	CallExpression	zend_zval_type_name ( ret )		3974524	0					
ANR	3974707	Callee	zend_zval_type_name		3974524	0					
ANR	3974708	Identifier	zend_zval_type_name		3974524	0					
ANR	3974709	ArgumentList	ret		3974524	1					
ANR	3974710	Argument	ret		3974524	0					
ANR	3974711	Identifier	ret		3974524	0					
ANR	3974712	Argument	""""""		3974524	4					
ANR	3974713	PrimaryExpression	""""""		3974524	0					
ANR	3974714	ElseStatement	else		3974524	0					
ANR	3974715	IfStatement	if ( ret_info -> type_hint == IS_CALLABLE )		3974524	0					
ANR	3974716	Condition	ret_info -> type_hint == IS_CALLABLE	970:14:31764:31797	3974524	0	True				
ANR	3974717	EqualityExpression	ret_info -> type_hint == IS_CALLABLE		3974524	0		==			
ANR	3974718	PtrMemberAccess	ret_info -> type_hint		3974524	0					
ANR	3974719	Identifier	ret_info		3974524	0					
ANR	3974720	Identifier	type_hint		3974524	1					
ANR	3974721	Identifier	IS_CALLABLE		3974524	1					
ANR	3974722	CompoundStatement		20:50:876:876	3974524	1					
ANR	3974723	IfStatement	"if ( ! zend_is_callable ( ret , IS_CALLABLE_CHECK_SILENT , NULL ) && ( Z_TYPE_P ( ret ) != IS_NULL || ! ret_info -> allow_null ) )"		3974524	0					
ANR	3974724	Condition	"! zend_is_callable ( ret , IS_CALLABLE_CHECK_SILENT , NULL ) && ( Z_TYPE_P ( ret ) != IS_NULL || ! ret_info -> allow_null )"	971:8:31810:31918	3974524	0	True				
ANR	3974725	AndExpression	"! zend_is_callable ( ret , IS_CALLABLE_CHECK_SILENT , NULL ) && ( Z_TYPE_P ( ret ) != IS_NULL || ! ret_info -> allow_null )"		3974524	0		&&			
ANR	3974726	UnaryOperationExpression	"! zend_is_callable ( ret , IS_CALLABLE_CHECK_SILENT , NULL )"		3974524	0					
ANR	3974727	UnaryOperator	!		3974524	0					
ANR	3974728	CallExpression	"zend_is_callable ( ret , IS_CALLABLE_CHECK_SILENT , NULL )"		3974524	1					
ANR	3974729	Callee	zend_is_callable		3974524	0					
ANR	3974730	Identifier	zend_is_callable		3974524	0					
ANR	3974731	ArgumentList	ret		3974524	1					
ANR	3974732	Argument	ret		3974524	0					
ANR	3974733	Identifier	ret		3974524	0					
ANR	3974734	Argument	IS_CALLABLE_CHECK_SILENT		3974524	1					
ANR	3974735	Identifier	IS_CALLABLE_CHECK_SILENT		3974524	0					
ANR	3974736	Argument	NULL		3974524	2					
ANR	3974737	Identifier	NULL		3974524	0					
ANR	3974738	OrExpression	Z_TYPE_P ( ret ) != IS_NULL || ! ret_info -> allow_null		3974524	1		||			
ANR	3974739	EqualityExpression	Z_TYPE_P ( ret ) != IS_NULL		3974524	0		!=			
ANR	3974740	CallExpression	Z_TYPE_P ( ret )		3974524	0					
ANR	3974741	Callee	Z_TYPE_P		3974524	0					
ANR	3974742	Identifier	Z_TYPE_P		3974524	0					
ANR	3974743	ArgumentList	ret		3974524	1					
ANR	3974744	Argument	ret		3974524	0					
ANR	3974745	Identifier	ret		3974524	0					
ANR	3974746	Identifier	IS_NULL		3974524	1					
ANR	3974747	UnaryOperationExpression	! ret_info -> allow_null		3974524	1					
ANR	3974748	UnaryOperator	!		3974524	0					
ANR	3974749	PtrMemberAccess	ret_info -> allow_null		3974524	1					
ANR	3974750	Identifier	ret_info		3974524	0					
ANR	3974751	Identifier	allow_null		3974524	1					
ANR	3974752	CompoundStatement		21:119:997:997	3974524	1					
ANR	3974753	ExpressionStatement	"zend_verify_internal_return_error ( zf , ""be callable"" , """" , zend_zval_type_name ( ret ) , """" )"	972:5:31928:32014	3974524	0	True				
ANR	3974754	CallExpression	"zend_verify_internal_return_error ( zf , ""be callable"" , """" , zend_zval_type_name ( ret ) , """" )"		3974524	0					
ANR	3974755	Callee	zend_verify_internal_return_error		3974524	0					
ANR	3974756	Identifier	zend_verify_internal_return_error		3974524	0					
ANR	3974757	ArgumentList	zf		3974524	1					
ANR	3974758	Argument	zf		3974524	0					
ANR	3974759	Identifier	zf		3974524	0					
ANR	3974760	Argument	"""be callable"""		3974524	1					
ANR	3974761	PrimaryExpression	"""be callable"""		3974524	0					
ANR	3974762	Argument	""""""		3974524	2					
ANR	3974763	PrimaryExpression	""""""		3974524	0					
ANR	3974764	Argument	zend_zval_type_name ( ret )		3974524	3					
ANR	3974765	CallExpression	zend_zval_type_name ( ret )		3974524	0					
ANR	3974766	Callee	zend_zval_type_name		3974524	0					
ANR	3974767	Identifier	zend_zval_type_name		3974524	0					
ANR	3974768	ArgumentList	ret		3974524	1					
ANR	3974769	Argument	ret		3974524	0					
ANR	3974770	Identifier	ret		3974524	0					
ANR	3974771	Argument	""""""		3974524	4					
ANR	3974772	PrimaryExpression	""""""		3974524	0					
ANR	3974773	ReturnStatement	return 0 ;	973:5:32021:32029	3974524	1	True				
ANR	3974774	PrimaryExpression	0		3974524	0					
ANR	3974775	ElseStatement	else		3974524	0					
ANR	3974776	IfStatement	if ( ret_info -> type_hint == _IS_BOOL && EXPECTED ( Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE ) )		3974524	0					
ANR	3974777	Condition	ret_info -> type_hint == _IS_BOOL && EXPECTED ( Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE )	975:14:32051:32162	3974524	0	True				
ANR	3974778	AndExpression	ret_info -> type_hint == _IS_BOOL && EXPECTED ( Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE )		3974524	0		&&			
ANR	3974779	EqualityExpression	ret_info -> type_hint == _IS_BOOL		3974524	0		==			
ANR	3974780	PtrMemberAccess	ret_info -> type_hint		3974524	0					
ANR	3974781	Identifier	ret_info		3974524	0					
ANR	3974782	Identifier	type_hint		3974524	1					
ANR	3974783	Identifier	_IS_BOOL		3974524	1					
ANR	3974784	CallExpression	EXPECTED ( Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE )		3974524	1					
ANR	3974785	Callee	EXPECTED		3974524	0					
ANR	3974786	Identifier	EXPECTED		3974524	0					
ANR	3974787	ArgumentList	Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE		3974524	1					
ANR	3974788	Argument	Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE		3974524	0					
ANR	3974789	OrExpression	Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE		3974524	0		||			
ANR	3974790	EqualityExpression	Z_TYPE_P ( ret ) == IS_FALSE		3974524	0		==			
ANR	3974791	CallExpression	Z_TYPE_P ( ret )		3974524	0					
ANR	3974792	Callee	Z_TYPE_P		3974524	0					
ANR	3974793	Identifier	Z_TYPE_P		3974524	0					
ANR	3974794	ArgumentList	ret		3974524	1					
ANR	3974795	Argument	ret		3974524	0					
ANR	3974796	Identifier	ret		3974524	0					
ANR	3974797	Identifier	IS_FALSE		3974524	1					
ANR	3974798	EqualityExpression	Z_TYPE_P ( ret ) == IS_TRUE		3974524	1		==			
ANR	3974799	CallExpression	Z_TYPE_P ( ret )		3974524	0					
ANR	3974800	Callee	Z_TYPE_P		3974524	0					
ANR	3974801	Identifier	Z_TYPE_P		3974524	0					
ANR	3974802	ArgumentList	ret		3974524	1					
ANR	3974803	Argument	ret		3974524	0					
ANR	3974804	Identifier	ret		3974524	0					
ANR	3974805	Identifier	IS_TRUE		3974524	1					
ANR	3974806	CompoundStatement		26:79:1241:1241	3974524	1					
ANR	3974807	ElseStatement	else		3974524	0					
ANR	3974808	CompoundStatement		28:10:1268:1268	3974524	0					
ANR	3974809	ExpressionStatement	"zend_verify_internal_return_error ( zf , ""be of the type "" , zend_get_type_by_const ( ret_info -> type_hint ) , zend_zval_type_name ( ret ) , """" )"	980:4:32269:32400	3974524	0	True				
ANR	3974810	CallExpression	"zend_verify_internal_return_error ( zf , ""be of the type "" , zend_get_type_by_const ( ret_info -> type_hint ) , zend_zval_type_name ( ret ) , """" )"		3974524	0					
ANR	3974811	Callee	zend_verify_internal_return_error		3974524	0					
ANR	3974812	Identifier	zend_verify_internal_return_error		3974524	0					
ANR	3974813	ArgumentList	zf		3974524	1					
ANR	3974814	Argument	zf		3974524	0					
ANR	3974815	Identifier	zf		3974524	0					
ANR	3974816	Argument	"""be of the type """		3974524	1					
ANR	3974817	PrimaryExpression	"""be of the type """		3974524	0					
ANR	3974818	Argument	zend_get_type_by_const ( ret_info -> type_hint )		3974524	2					
ANR	3974819	CallExpression	zend_get_type_by_const ( ret_info -> type_hint )		3974524	0					
ANR	3974820	Callee	zend_get_type_by_const		3974524	0					
ANR	3974821	Identifier	zend_get_type_by_const		3974524	0					
ANR	3974822	ArgumentList	ret_info -> type_hint		3974524	1					
ANR	3974823	Argument	ret_info -> type_hint		3974524	0					
ANR	3974824	PtrMemberAccess	ret_info -> type_hint		3974524	0					
ANR	3974825	Identifier	ret_info		3974524	0					
ANR	3974826	Identifier	type_hint		3974524	1					
ANR	3974827	Argument	zend_zval_type_name ( ret )		3974524	3					
ANR	3974828	CallExpression	zend_zval_type_name ( ret )		3974524	0					
ANR	3974829	Callee	zend_zval_type_name		3974524	0					
ANR	3974830	Identifier	zend_zval_type_name		3974524	0					
ANR	3974831	ArgumentList	ret		3974524	1					
ANR	3974832	Argument	ret		3974524	0					
ANR	3974833	Identifier	ret		3974524	0					
ANR	3974834	Argument	""""""		3974524	4					
ANR	3974835	PrimaryExpression	""""""		3974524	0					
ANR	3974836	ReturnStatement	return 0 ;	981:4:32406:32414	3974524	1	True				
ANR	3974837	PrimaryExpression	0		3974524	0					
ANR	3974838	ReturnStatement	return 1 ;	985:1:32429:32437	3974524	4	True				
ANR	3974839	PrimaryExpression	1		3974524	0					
ANR	3974840	ReturnType	static int		3974524	1					
ANR	3974841	Identifier	zend_verify_internal_return_type		3974524	2					
ANR	3974842	ParameterList	"zend_function * zf , zval * ret"		3974524	3					
ANR	3974843	Parameter	zend_function * zf	950:44:30893:30909	3974524	0	True				
ANR	3974844	ParameterType	zend_function *		3974524	0					
ANR	3974845	Identifier	zf		3974524	1					
ANR	3974846	Parameter	zval * ret	950:63:30912:30920	3974524	1	True				
ANR	3974847	ParameterType	zval *		3974524	0					
ANR	3974848	Identifier	ret		3974524	1					
ANR	3974849	CFGEntryNode	ENTRY		3974524		True				
ANR	3974850	CFGExitNode	EXIT		3974524		True				
ANR	3974851	Symbol	instanceof_function		3974524						
ANR	3974852	Symbol	need_msg		3974524						
ANR	3974853	Symbol	& class_name		3974524						
ANR	3974854	Symbol	zf -> common . arg_info		3974524						
ANR	3974855	Symbol	zf -> common		3974524						
ANR	3974856	Symbol	ret_info -> type_hint		3974524						
ANR	3974857	Symbol	zend_zval_type_name		3974524						
ANR	3974858	Symbol	& ce		3974524						
ANR	3974859	Symbol	Z_OBJCE_P ( ret ) -> name		3974524						
ANR	3974860	Symbol	_IS_BOOL		3974524						
ANR	3974861	Symbol	ret_info -> allow_null		3974524						
ANR	3974862	Symbol	IS_NULL		3974524						
ANR	3974863	Symbol	* ret_info		3974524						
ANR	3974864	Symbol	Z_OBJCE_P		3974524						
ANR	3974865	Symbol	class_name		3974524						
ANR	3974866	Symbol	IS_FALSE		3974524						
ANR	3974867	Symbol	* Z_OBJCE_P		3974524						
ANR	3974868	Symbol	ret		3974524						
ANR	3974869	Symbol	IS_CALLABLE		3974524						
ANR	3974870	Symbol	zend_get_type_by_const		3974524						
ANR	3974871	Symbol	ce		3974524						
ANR	3974872	Symbol	NULL		3974524						
ANR	3974873	Symbol	zend_is_callable		3974524						
ANR	3974874	Symbol	IS_TRUE		3974524						
ANR	3974875	Symbol	zend_verify_internal_arg_class_kind		3974524						
ANR	3974876	Symbol	zf		3974524						
ANR	3974877	Symbol	Z_TYPE_P		3974524						
ANR	3974878	Symbol	ZSTR_VAL		3974524						
ANR	3974879	Symbol	* zf		3974524						
ANR	3974880	Symbol	ret_info		3974524						
ANR	3974881	Symbol	IS_CALLABLE_CHECK_SILENT		3974524						
ANR	3974882	Symbol	ret_info -> class_name		3974524						
ANR	3974883	Symbol	EXPECTED		3974524						
ANR	3974884	Function	zend_verify_return_type	989:0:32449:34673							
ANR	3974885	FunctionDef	"zend_verify_return_type (zend_function * zf , zval * ret , void * * cache_slot)"		3974884	0					
ANR	3974886	CompoundStatement		990:0:32553:34673	3974884	0					
ANR	3974887	IdentifierDeclStatement	zend_arg_info * ret_info = zf -> common . arg_info - 1 ;	991:1:32556:32605	3974884	0	True				
ANR	3974888	IdentifierDecl	* ret_info = zf -> common . arg_info - 1		3974884	0					
ANR	3974889	IdentifierDeclType	zend_arg_info *		3974884	0					
ANR	3974890	Identifier	ret_info		3974884	1					
ANR	3974891	AssignmentExpression	* ret_info = zf -> common . arg_info - 1		3974884	2		=			
ANR	3974892	Identifier	ret_info		3974884	0					
ANR	3974893	AdditiveExpression	zf -> common . arg_info - 1		3974884	1		-			
ANR	3974894	MemberAccess	zf -> common . arg_info		3974884	0					
ANR	3974895	PtrMemberAccess	zf -> common		3974884	0					
ANR	3974896	Identifier	zf		3974884	0					
ANR	3974897	Identifier	common		3974884	1					
ANR	3974898	Identifier	arg_info		3974884	1					
ANR	3974899	PrimaryExpression	1		3974884	1					
ANR	3974900	IdentifierDeclStatement	char * need_msg ;	992:1:32608:32622	3974884	1	True				
ANR	3974901	IdentifierDecl	* need_msg		3974884	0					
ANR	3974902	IdentifierDeclType	char *		3974884	0					
ANR	3974903	Identifier	need_msg		3974884	1					
ANR	3974904	IdentifierDeclStatement	zend_class_entry * ce ;	993:1:32625:32645	3974884	2	True				
ANR	3974905	IdentifierDecl	* ce		3974884	0					
ANR	3974906	IdentifierDeclType	zend_class_entry *		3974884	0					
ANR	3974907	Identifier	ce		3974884	1					
ANR	3974908	IfStatement	if ( ret_info -> type_hint )		3974884	3					
ANR	3974909	Condition	ret_info -> type_hint	995:5:32653:32671	3974884	0	True				
ANR	3974910	PtrMemberAccess	ret_info -> type_hint		3974884	0					
ANR	3974911	Identifier	ret_info		3974884	0					
ANR	3974912	Identifier	type_hint		3974884	1					
ANR	3974913	CompoundStatement		6:26:120:120	3974884	1					
ANR	3974914	IfStatement	if ( EXPECTED ( ret_info -> type_hint == Z_TYPE_P ( ret ) ) )		3974884	0					
ANR	3974915	Condition	EXPECTED ( ret_info -> type_hint == Z_TYPE_P ( ret ) )	996:6:32682:32727	3974884	0	True				
ANR	3974916	CallExpression	EXPECTED ( ret_info -> type_hint == Z_TYPE_P ( ret ) )		3974884	0					
ANR	3974917	Callee	EXPECTED		3974884	0					
ANR	3974918	Identifier	EXPECTED		3974884	0					
ANR	3974919	ArgumentList	ret_info -> type_hint == Z_TYPE_P ( ret )		3974884	1					
ANR	3974920	Argument	ret_info -> type_hint == Z_TYPE_P ( ret )		3974884	0					
ANR	3974921	EqualityExpression	ret_info -> type_hint == Z_TYPE_P ( ret )		3974884	0		==			
ANR	3974922	PtrMemberAccess	ret_info -> type_hint		3974884	0					
ANR	3974923	Identifier	ret_info		3974884	0					
ANR	3974924	Identifier	type_hint		3974884	1					
ANR	3974925	CallExpression	Z_TYPE_P ( ret )		3974884	1					
ANR	3974926	Callee	Z_TYPE_P		3974884	0					
ANR	3974927	Identifier	Z_TYPE_P		3974884	0					
ANR	3974928	ArgumentList	ret		3974884	1					
ANR	3974929	Argument	ret		3974884	0					
ANR	3974930	Identifier	ret		3974884	0					
ANR	3974931	CompoundStatement		7:54:176:176	3974884	1					
ANR	3974932	IfStatement	if ( ret_info -> class_name )		3974884	0					
ANR	3974933	Condition	ret_info -> class_name	997:7:32739:32758	3974884	0	True				
ANR	3974934	PtrMemberAccess	ret_info -> class_name		3974884	0					
ANR	3974935	Identifier	ret_info		3974884	0					
ANR	3974936	Identifier	class_name		3974884	1					
ANR	3974937	CompoundStatement		8:29:207:207	3974884	1					
ANR	3974938	IfStatement	if ( EXPECTED ( * cache_slot ) )		3974884	0					
ANR	3974939	Condition	EXPECTED ( * cache_slot )	998:8:32771:32791	3974884	0	True				
ANR	3974940	CallExpression	EXPECTED ( * cache_slot )		3974884	0					
ANR	3974941	Callee	EXPECTED		3974884	0					
ANR	3974942	Identifier	EXPECTED		3974884	0					
ANR	3974943	ArgumentList	* cache_slot		3974884	1					
ANR	3974944	Argument	* cache_slot		3974884	0					
ANR	3974945	UnaryOperationExpression	* cache_slot		3974884	0					
ANR	3974946	UnaryOperator	*		3974884	0					
ANR	3974947	Identifier	cache_slot		3974884	1					
ANR	3974948	CompoundStatement		9:31:240:240	3974884	1					
ANR	3974949	ExpressionStatement	ce = ( zend_class_entry * ) * cache_slot	999:5:32801:32836	3974884	0	True				
ANR	3974950	AssignmentExpression	ce = ( zend_class_entry * ) * cache_slot		3974884	0		=			
ANR	3974951	Identifier	ce		3974884	0					
ANR	3974952	CastExpression	( zend_class_entry * ) * cache_slot		3974884	1					
ANR	3974953	CastTarget	zend_class_entry *		3974884	0					
ANR	3974954	UnaryOperationExpression	* cache_slot		3974884	1					
ANR	3974955	UnaryOperator	*		3974884	0					
ANR	3974956	Identifier	cache_slot		3974884	1					
ANR	3974957	ElseStatement	else		3974884	0					
ANR	3974958	CompoundStatement		11:11:295:295	3974884	0					
ANR	3974959	ExpressionStatement	ce = zend_verify_arg_class_kind ( ret_info )	1001:5:32856:32897	3974884	0	True				
ANR	3974960	AssignmentExpression	ce = zend_verify_arg_class_kind ( ret_info )		3974884	0		=			
ANR	3974961	Identifier	ce		3974884	0					
ANR	3974962	CallExpression	zend_verify_arg_class_kind ( ret_info )		3974884	1					
ANR	3974963	Callee	zend_verify_arg_class_kind		3974884	0					
ANR	3974964	Identifier	zend_verify_arg_class_kind		3974884	0					
ANR	3974965	ArgumentList	ret_info		3974884	1					
ANR	3974966	Argument	ret_info		3974884	0					
ANR	3974967	Identifier	ret_info		3974884	0					
ANR	3974968	IfStatement	if ( UNEXPECTED ( ! ce ) )		3974884	1					
ANR	3974969	Condition	UNEXPECTED ( ! ce )	1002:9:32908:32922	3974884	0	True				
ANR	3974970	CallExpression	UNEXPECTED ( ! ce )		3974884	0					
ANR	3974971	Callee	UNEXPECTED		3974884	0					
ANR	3974972	Identifier	UNEXPECTED		3974884	0					
ANR	3974973	ArgumentList	! ce		3974884	1					
ANR	3974974	Argument	! ce		3974884	0					
ANR	3974975	UnaryOperationExpression	! ce		3974884	0					
ANR	3974976	UnaryOperator	!		3974884	0					
ANR	3974977	Identifier	ce		3974884	1					
ANR	3974978	CompoundStatement		13:26:371:371	3974884	1					
ANR	3974979	ExpressionStatement	"zend_verify_return_error ( zf , ""be an instance of "" , ZSTR_VAL ( ret_info -> class_name ) , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( ret ) -> name ) )"	1003:6:32933:33063	3974884	0	True				
ANR	3974980	CallExpression	"zend_verify_return_error ( zf , ""be an instance of "" , ZSTR_VAL ( ret_info -> class_name ) , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( ret ) -> name ) )"		3974884	0					
ANR	3974981	Callee	zend_verify_return_error		3974884	0					
ANR	3974982	Identifier	zend_verify_return_error		3974884	0					
ANR	3974983	ArgumentList	zf		3974884	1					
ANR	3974984	Argument	zf		3974884	0					
ANR	3974985	Identifier	zf		3974884	0					
ANR	3974986	Argument	"""be an instance of """		3974884	1					
ANR	3974987	PrimaryExpression	"""be an instance of """		3974884	0					
ANR	3974988	Argument	ZSTR_VAL ( ret_info -> class_name )		3974884	2					
ANR	3974989	CallExpression	ZSTR_VAL ( ret_info -> class_name )		3974884	0					
ANR	3974990	Callee	ZSTR_VAL		3974884	0					
ANR	3974991	Identifier	ZSTR_VAL		3974884	0					
ANR	3974992	ArgumentList	ret_info -> class_name		3974884	1					
ANR	3974993	Argument	ret_info -> class_name		3974884	0					
ANR	3974994	PtrMemberAccess	ret_info -> class_name		3974884	0					
ANR	3974995	Identifier	ret_info		3974884	0					
ANR	3974996	Identifier	class_name		3974884	1					
ANR	3974997	Argument	"""instance of """		3974884	3					
ANR	3974998	PrimaryExpression	"""instance of """		3974884	0					
ANR	3974999	Argument	ZSTR_VAL ( Z_OBJCE_P ( ret ) -> name )		3974884	4					
ANR	3975000	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( ret ) -> name )		3974884	0					
ANR	3975001	Callee	ZSTR_VAL		3974884	0					
ANR	3975002	Identifier	ZSTR_VAL		3974884	0					
ANR	3975003	ArgumentList	Z_OBJCE_P ( ret ) -> name		3974884	1					
ANR	3975004	Argument	Z_OBJCE_P ( ret ) -> name		3974884	0					
ANR	3975005	PtrMemberAccess	Z_OBJCE_P ( ret ) -> name		3974884	0					
ANR	3975006	CallExpression	Z_OBJCE_P ( ret )		3974884	0					
ANR	3975007	Callee	Z_OBJCE_P		3974884	0					
ANR	3975008	Identifier	Z_OBJCE_P		3974884	0					
ANR	3975009	ArgumentList	ret		3974884	1					
ANR	3975010	Argument	ret		3974884	0					
ANR	3975011	Identifier	ret		3974884	0					
ANR	3975012	Identifier	name		3974884	1					
ANR	3975013	ReturnStatement	return ;	1004:6:33071:33077	3974884	1	True				
ANR	3975014	ExpressionStatement	* cache_slot = ( void * ) ce	1006:5:33091:33114	3974884	2	True				
ANR	3975015	AssignmentExpression	* cache_slot = ( void * ) ce		3974884	0		=			
ANR	3975016	UnaryOperationExpression	* cache_slot		3974884	0					
ANR	3975017	UnaryOperator	*		3974884	0					
ANR	3975018	Identifier	cache_slot		3974884	1					
ANR	3975019	CastExpression	( void * ) ce		3974884	1					
ANR	3975020	CastTarget	void *		3974884	0					
ANR	3975021	Identifier	ce		3974884	1					
ANR	3975022	IfStatement	"if ( UNEXPECTED ( ! instanceof_function ( Z_OBJCE_P ( ret ) , ce ) ) )"		3974884	1					
ANR	3975023	Condition	"UNEXPECTED ( ! instanceof_function ( Z_OBJCE_P ( ret ) , ce ) )"	1008:8:33130:33181	3974884	0	True				
ANR	3975024	CallExpression	"UNEXPECTED ( ! instanceof_function ( Z_OBJCE_P ( ret ) , ce ) )"		3974884	0					
ANR	3975025	Callee	UNEXPECTED		3974884	0					
ANR	3975026	Identifier	UNEXPECTED		3974884	0					
ANR	3975027	ArgumentList	"! instanceof_function ( Z_OBJCE_P ( ret ) , ce )"		3974884	1					
ANR	3975028	Argument	"! instanceof_function ( Z_OBJCE_P ( ret ) , ce )"		3974884	0					
ANR	3975029	UnaryOperationExpression	"! instanceof_function ( Z_OBJCE_P ( ret ) , ce )"		3974884	0					
ANR	3975030	UnaryOperator	!		3974884	0					
ANR	3975031	CallExpression	"instanceof_function ( Z_OBJCE_P ( ret ) , ce )"		3974884	1					
ANR	3975032	Callee	instanceof_function		3974884	0					
ANR	3975033	Identifier	instanceof_function		3974884	0					
ANR	3975034	ArgumentList	Z_OBJCE_P ( ret )		3974884	1					
ANR	3975035	Argument	Z_OBJCE_P ( ret )		3974884	0					
ANR	3975036	CallExpression	Z_OBJCE_P ( ret )		3974884	0					
ANR	3975037	Callee	Z_OBJCE_P		3974884	0					
ANR	3975038	Identifier	Z_OBJCE_P		3974884	0					
ANR	3975039	ArgumentList	ret		3974884	1					
ANR	3975040	Argument	ret		3974884	0					
ANR	3975041	Identifier	ret		3974884	0					
ANR	3975042	Argument	ce		3974884	1					
ANR	3975043	Identifier	ce		3974884	0					
ANR	3975044	CompoundStatement		19:62:630:630	3974884	1					
ANR	3975045	ExpressionStatement	"need_msg = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """	1009:5:33191:33297	3974884	0	True				
ANR	3975046	AssignmentExpression	"need_msg = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """		3974884	0		=			
ANR	3975047	Identifier	need_msg		3974884	0					
ANR	3975048	ConditionalExpression	"( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """		3974884	1					
ANR	3975049	Condition	ce -> ce_flags & ZEND_ACC_INTERFACE		3974884	0					
ANR	3975050	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		3974884	0		&			
ANR	3975051	PtrMemberAccess	ce -> ce_flags		3974884	0					
ANR	3975052	Identifier	ce		3974884	0					
ANR	3975053	Identifier	ce_flags		3974884	1					
ANR	3975054	Identifier	ZEND_ACC_INTERFACE		3974884	1					
ANR	3975055	PrimaryExpression	"""implement interface """		3974884	1					
ANR	3975056	PrimaryExpression	"""be an instance of """		3974884	2					
ANR	3975057	ExpressionStatement	"zend_verify_return_error ( zf , need_msg , ZSTR_VAL ( ce -> name ) , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( ret ) -> name ) )"	1012:5:33304:33410	3974884	1	True				
ANR	3975058	CallExpression	"zend_verify_return_error ( zf , need_msg , ZSTR_VAL ( ce -> name ) , ""instance of "" , ZSTR_VAL ( Z_OBJCE_P ( ret ) -> name ) )"		3974884	0					
ANR	3975059	Callee	zend_verify_return_error		3974884	0					
ANR	3975060	Identifier	zend_verify_return_error		3974884	0					
ANR	3975061	ArgumentList	zf		3974884	1					
ANR	3975062	Argument	zf		3974884	0					
ANR	3975063	Identifier	zf		3974884	0					
ANR	3975064	Argument	need_msg		3974884	1					
ANR	3975065	Identifier	need_msg		3974884	0					
ANR	3975066	Argument	ZSTR_VAL ( ce -> name )		3974884	2					
ANR	3975067	CallExpression	ZSTR_VAL ( ce -> name )		3974884	0					
ANR	3975068	Callee	ZSTR_VAL		3974884	0					
ANR	3975069	Identifier	ZSTR_VAL		3974884	0					
ANR	3975070	ArgumentList	ce -> name		3974884	1					
ANR	3975071	Argument	ce -> name		3974884	0					
ANR	3975072	PtrMemberAccess	ce -> name		3974884	0					
ANR	3975073	Identifier	ce		3974884	0					
ANR	3975074	Identifier	name		3974884	1					
ANR	3975075	Argument	"""instance of """		3974884	3					
ANR	3975076	PrimaryExpression	"""instance of """		3974884	0					
ANR	3975077	Argument	ZSTR_VAL ( Z_OBJCE_P ( ret ) -> name )		3974884	4					
ANR	3975078	CallExpression	ZSTR_VAL ( Z_OBJCE_P ( ret ) -> name )		3974884	0					
ANR	3975079	Callee	ZSTR_VAL		3974884	0					
ANR	3975080	Identifier	ZSTR_VAL		3974884	0					
ANR	3975081	ArgumentList	Z_OBJCE_P ( ret ) -> name		3974884	1					
ANR	3975082	Argument	Z_OBJCE_P ( ret ) -> name		3974884	0					
ANR	3975083	PtrMemberAccess	Z_OBJCE_P ( ret ) -> name		3974884	0					
ANR	3975084	CallExpression	Z_OBJCE_P ( ret )		3974884	0					
ANR	3975085	Callee	Z_OBJCE_P		3974884	0					
ANR	3975086	Identifier	Z_OBJCE_P		3974884	0					
ANR	3975087	ArgumentList	ret		3974884	1					
ANR	3975088	Argument	ret		3974884	0					
ANR	3975089	Identifier	ret		3974884	0					
ANR	3975090	Identifier	name		3974884	1					
ANR	3975091	ElseStatement	else		3974884	0					
ANR	3975092	IfStatement	if ( Z_TYPE_P ( ret ) != IS_NULL || ! ret_info -> allow_null )		3974884	0					
ANR	3975093	Condition	Z_TYPE_P ( ret ) != IS_NULL || ! ret_info -> allow_null	1015:13:33436:33484	3974884	0	True				
ANR	3975094	OrExpression	Z_TYPE_P ( ret ) != IS_NULL || ! ret_info -> allow_null		3974884	0		||			
ANR	3975095	EqualityExpression	Z_TYPE_P ( ret ) != IS_NULL		3974884	0		!=			
ANR	3975096	CallExpression	Z_TYPE_P ( ret )		3974884	0					
ANR	3975097	Callee	Z_TYPE_P		3974884	0					
ANR	3975098	Identifier	Z_TYPE_P		3974884	0					
ANR	3975099	ArgumentList	ret		3974884	1					
ANR	3975100	Argument	ret		3974884	0					
ANR	3975101	Identifier	ret		3974884	0					
ANR	3975102	Identifier	IS_NULL		3974884	1					
ANR	3975103	UnaryOperationExpression	! ret_info -> allow_null		3974884	1					
ANR	3975104	UnaryOperator	!		3974884	0					
ANR	3975105	PtrMemberAccess	ret_info -> allow_null		3974884	1					
ANR	3975106	Identifier	ret_info		3974884	0					
ANR	3975107	Identifier	allow_null		3974884	1					
ANR	3975108	CompoundStatement		26:64:933:933	3974884	1					
ANR	3975109	IfStatement	if ( ret_info -> class_name )		3974884	0					
ANR	3975110	Condition	ret_info -> class_name	1016:7:33496:33515	3974884	0	True				
ANR	3975111	PtrMemberAccess	ret_info -> class_name		3974884	0					
ANR	3975112	Identifier	ret_info		3974884	0					
ANR	3975113	Identifier	class_name		3974884	1					
ANR	3975114	CompoundStatement		27:29:964:964	3974884	1					
ANR	3975115	IfStatement	if ( EXPECTED ( * cache_slot ) )		3974884	0					
ANR	3975116	Condition	EXPECTED ( * cache_slot )	1017:8:33528:33548	3974884	0	True				
ANR	3975117	CallExpression	EXPECTED ( * cache_slot )		3974884	0					
ANR	3975118	Callee	EXPECTED		3974884	0					
ANR	3975119	Identifier	EXPECTED		3974884	0					
ANR	3975120	ArgumentList	* cache_slot		3974884	1					
ANR	3975121	Argument	* cache_slot		3974884	0					
ANR	3975122	UnaryOperationExpression	* cache_slot		3974884	0					
ANR	3975123	UnaryOperator	*		3974884	0					
ANR	3975124	Identifier	cache_slot		3974884	1					
ANR	3975125	CompoundStatement		28:31:997:997	3974884	1					
ANR	3975126	ExpressionStatement	ce = ( zend_class_entry * ) * cache_slot	1018:5:33558:33593	3974884	0	True				
ANR	3975127	AssignmentExpression	ce = ( zend_class_entry * ) * cache_slot		3974884	0		=			
ANR	3975128	Identifier	ce		3974884	0					
ANR	3975129	CastExpression	( zend_class_entry * ) * cache_slot		3974884	1					
ANR	3975130	CastTarget	zend_class_entry *		3974884	0					
ANR	3975131	UnaryOperationExpression	* cache_slot		3974884	1					
ANR	3975132	UnaryOperator	*		3974884	0					
ANR	3975133	Identifier	cache_slot		3974884	1					
ANR	3975134	ElseStatement	else		3974884	0					
ANR	3975135	CompoundStatement		30:11:1052:1052	3974884	0					
ANR	3975136	ExpressionStatement	ce = zend_verify_arg_class_kind ( ret_info )	1020:5:33613:33654	3974884	0	True				
ANR	3975137	AssignmentExpression	ce = zend_verify_arg_class_kind ( ret_info )		3974884	0		=			
ANR	3975138	Identifier	ce		3974884	0					
ANR	3975139	CallExpression	zend_verify_arg_class_kind ( ret_info )		3974884	1					
ANR	3975140	Callee	zend_verify_arg_class_kind		3974884	0					
ANR	3975141	Identifier	zend_verify_arg_class_kind		3974884	0					
ANR	3975142	ArgumentList	ret_info		3974884	1					
ANR	3975143	Argument	ret_info		3974884	0					
ANR	3975144	Identifier	ret_info		3974884	0					
ANR	3975145	IfStatement	if ( UNEXPECTED ( ! ce ) )		3974884	1					
ANR	3975146	Condition	UNEXPECTED ( ! ce )	1021:9:33665:33679	3974884	0	True				
ANR	3975147	CallExpression	UNEXPECTED ( ! ce )		3974884	0					
ANR	3975148	Callee	UNEXPECTED		3974884	0					
ANR	3975149	Identifier	UNEXPECTED		3974884	0					
ANR	3975150	ArgumentList	! ce		3974884	1					
ANR	3975151	Argument	! ce		3974884	0					
ANR	3975152	UnaryOperationExpression	! ce		3974884	0					
ANR	3975153	UnaryOperator	!		3974884	0					
ANR	3975154	Identifier	ce		3974884	1					
ANR	3975155	CompoundStatement		32:26:1128:1128	3974884	1					
ANR	3975156	ExpressionStatement	"zend_verify_return_error ( zf , ""be an instance of "" , ZSTR_VAL ( ret_info -> class_name ) , zend_zval_type_name ( ret ) , """" )"	1022:6:33690:33802	3974884	0	True				
ANR	3975157	CallExpression	"zend_verify_return_error ( zf , ""be an instance of "" , ZSTR_VAL ( ret_info -> class_name ) , zend_zval_type_name ( ret ) , """" )"		3974884	0					
ANR	3975158	Callee	zend_verify_return_error		3974884	0					
ANR	3975159	Identifier	zend_verify_return_error		3974884	0					
ANR	3975160	ArgumentList	zf		3974884	1					
ANR	3975161	Argument	zf		3974884	0					
ANR	3975162	Identifier	zf		3974884	0					
ANR	3975163	Argument	"""be an instance of """		3974884	1					
ANR	3975164	PrimaryExpression	"""be an instance of """		3974884	0					
ANR	3975165	Argument	ZSTR_VAL ( ret_info -> class_name )		3974884	2					
ANR	3975166	CallExpression	ZSTR_VAL ( ret_info -> class_name )		3974884	0					
ANR	3975167	Callee	ZSTR_VAL		3974884	0					
ANR	3975168	Identifier	ZSTR_VAL		3974884	0					
ANR	3975169	ArgumentList	ret_info -> class_name		3974884	1					
ANR	3975170	Argument	ret_info -> class_name		3974884	0					
ANR	3975171	PtrMemberAccess	ret_info -> class_name		3974884	0					
ANR	3975172	Identifier	ret_info		3974884	0					
ANR	3975173	Identifier	class_name		3974884	1					
ANR	3975174	Argument	zend_zval_type_name ( ret )		3974884	3					
ANR	3975175	CallExpression	zend_zval_type_name ( ret )		3974884	0					
ANR	3975176	Callee	zend_zval_type_name		3974884	0					
ANR	3975177	Identifier	zend_zval_type_name		3974884	0					
ANR	3975178	ArgumentList	ret		3974884	1					
ANR	3975179	Argument	ret		3974884	0					
ANR	3975180	Identifier	ret		3974884	0					
ANR	3975181	Argument	""""""		3974884	4					
ANR	3975182	PrimaryExpression	""""""		3974884	0					
ANR	3975183	ReturnStatement	return ;	1023:6:33810:33816	3974884	1	True				
ANR	3975184	ExpressionStatement	* cache_slot = ( void * ) ce	1025:5:33830:33853	3974884	2	True				
ANR	3975185	AssignmentExpression	* cache_slot = ( void * ) ce		3974884	0		=			
ANR	3975186	UnaryOperationExpression	* cache_slot		3974884	0					
ANR	3975187	UnaryOperator	*		3974884	0					
ANR	3975188	Identifier	cache_slot		3974884	1					
ANR	3975189	CastExpression	( void * ) ce		3974884	1					
ANR	3975190	CastTarget	void *		3974884	0					
ANR	3975191	Identifier	ce		3974884	1					
ANR	3975192	ExpressionStatement	"need_msg = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """	1027:4:33865:33969	3974884	1	True				
ANR	3975193	AssignmentExpression	"need_msg = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """		3974884	0		=			
ANR	3975194	Identifier	need_msg		3974884	0					
ANR	3975195	ConditionalExpression	"( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """		3974884	1					
ANR	3975196	Condition	ce -> ce_flags & ZEND_ACC_INTERFACE		3974884	0					
ANR	3975197	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		3974884	0		&			
ANR	3975198	PtrMemberAccess	ce -> ce_flags		3974884	0					
ANR	3975199	Identifier	ce		3974884	0					
ANR	3975200	Identifier	ce_flags		3974884	1					
ANR	3975201	Identifier	ZEND_ACC_INTERFACE		3974884	1					
ANR	3975202	PrimaryExpression	"""implement interface """		3974884	1					
ANR	3975203	PrimaryExpression	"""be an instance of """		3974884	2					
ANR	3975204	ExpressionStatement	"zend_verify_return_error ( zf , need_msg , ZSTR_VAL ( ce -> name ) , zend_zval_type_name ( ret ) , """" )"	1030:4:33975:34063	3974884	2	True				
ANR	3975205	CallExpression	"zend_verify_return_error ( zf , need_msg , ZSTR_VAL ( ce -> name ) , zend_zval_type_name ( ret ) , """" )"		3974884	0					
ANR	3975206	Callee	zend_verify_return_error		3974884	0					
ANR	3975207	Identifier	zend_verify_return_error		3974884	0					
ANR	3975208	ArgumentList	zf		3974884	1					
ANR	3975209	Argument	zf		3974884	0					
ANR	3975210	Identifier	zf		3974884	0					
ANR	3975211	Argument	need_msg		3974884	1					
ANR	3975212	Identifier	need_msg		3974884	0					
ANR	3975213	Argument	ZSTR_VAL ( ce -> name )		3974884	2					
ANR	3975214	CallExpression	ZSTR_VAL ( ce -> name )		3974884	0					
ANR	3975215	Callee	ZSTR_VAL		3974884	0					
ANR	3975216	Identifier	ZSTR_VAL		3974884	0					
ANR	3975217	ArgumentList	ce -> name		3974884	1					
ANR	3975218	Argument	ce -> name		3974884	0					
ANR	3975219	PtrMemberAccess	ce -> name		3974884	0					
ANR	3975220	Identifier	ce		3974884	0					
ANR	3975221	Identifier	name		3974884	1					
ANR	3975222	Argument	zend_zval_type_name ( ret )		3974884	3					
ANR	3975223	CallExpression	zend_zval_type_name ( ret )		3974884	0					
ANR	3975224	Callee	zend_zval_type_name		3974884	0					
ANR	3975225	Identifier	zend_zval_type_name		3974884	0					
ANR	3975226	ArgumentList	ret		3974884	1					
ANR	3975227	Argument	ret		3974884	0					
ANR	3975228	Identifier	ret		3974884	0					
ANR	3975229	Argument	""""""		3974884	4					
ANR	3975230	PrimaryExpression	""""""		3974884	0					
ANR	3975231	ElseStatement	else		3974884	0					
ANR	3975232	IfStatement	if ( ret_info -> type_hint == IS_CALLABLE )		3974884	0					
ANR	3975233	Condition	ret_info -> type_hint == IS_CALLABLE	1031:14:34079:34112	3974884	0	True				
ANR	3975234	EqualityExpression	ret_info -> type_hint == IS_CALLABLE		3974884	0		==			
ANR	3975235	PtrMemberAccess	ret_info -> type_hint		3974884	0					
ANR	3975236	Identifier	ret_info		3974884	0					
ANR	3975237	Identifier	type_hint		3974884	1					
ANR	3975238	Identifier	IS_CALLABLE		3974884	1					
ANR	3975239	CompoundStatement		42:50:1561:1561	3974884	1					
ANR	3975240	IfStatement	"if ( ! zend_is_callable ( ret , IS_CALLABLE_CHECK_SILENT , NULL ) )"		3974884	0					
ANR	3975241	Condition	"! zend_is_callable ( ret , IS_CALLABLE_CHECK_SILENT , NULL )"	1032:8:34125:34178	3974884	0	True				
ANR	3975242	UnaryOperationExpression	"! zend_is_callable ( ret , IS_CALLABLE_CHECK_SILENT , NULL )"		3974884	0					
ANR	3975243	UnaryOperator	!		3974884	0					
ANR	3975244	CallExpression	"zend_is_callable ( ret , IS_CALLABLE_CHECK_SILENT , NULL )"		3974884	1					
ANR	3975245	Callee	zend_is_callable		3974884	0					
ANR	3975246	Identifier	zend_is_callable		3974884	0					
ANR	3975247	ArgumentList	ret		3974884	1					
ANR	3975248	Argument	ret		3974884	0					
ANR	3975249	Identifier	ret		3974884	0					
ANR	3975250	Argument	IS_CALLABLE_CHECK_SILENT		3974884	1					
ANR	3975251	Identifier	IS_CALLABLE_CHECK_SILENT		3974884	0					
ANR	3975252	Argument	NULL		3974884	2					
ANR	3975253	Identifier	NULL		3974884	0					
ANR	3975254	CompoundStatement		43:64:1627:1627	3974884	1					
ANR	3975255	ExpressionStatement	"zend_verify_return_error ( zf , ""be callable"" , """" , zend_zval_type_name ( ret ) , """" )"	1033:5:34188:34265	3974884	0	True				
ANR	3975256	CallExpression	"zend_verify_return_error ( zf , ""be callable"" , """" , zend_zval_type_name ( ret ) , """" )"		3974884	0					
ANR	3975257	Callee	zend_verify_return_error		3974884	0					
ANR	3975258	Identifier	zend_verify_return_error		3974884	0					
ANR	3975259	ArgumentList	zf		3974884	1					
ANR	3975260	Argument	zf		3974884	0					
ANR	3975261	Identifier	zf		3974884	0					
ANR	3975262	Argument	"""be callable"""		3974884	1					
ANR	3975263	PrimaryExpression	"""be callable"""		3974884	0					
ANR	3975264	Argument	""""""		3974884	2					
ANR	3975265	PrimaryExpression	""""""		3974884	0					
ANR	3975266	Argument	zend_zval_type_name ( ret )		3974884	3					
ANR	3975267	CallExpression	zend_zval_type_name ( ret )		3974884	0					
ANR	3975268	Callee	zend_zval_type_name		3974884	0					
ANR	3975269	Identifier	zend_zval_type_name		3974884	0					
ANR	3975270	ArgumentList	ret		3974884	1					
ANR	3975271	Argument	ret		3974884	0					
ANR	3975272	Identifier	ret		3974884	0					
ANR	3975273	Argument	""""""		3974884	4					
ANR	3975274	PrimaryExpression	""""""		3974884	0					
ANR	3975275	ElseStatement	else		3974884	0					
ANR	3975276	IfStatement	if ( ret_info -> type_hint == _IS_BOOL && EXPECTED ( Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE ) )		3974884	0					
ANR	3975277	Condition	ret_info -> type_hint == _IS_BOOL && EXPECTED ( Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE )	1035:14:34287:34398	3974884	0	True				
ANR	3975278	AndExpression	ret_info -> type_hint == _IS_BOOL && EXPECTED ( Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE )		3974884	0		&&			
ANR	3975279	EqualityExpression	ret_info -> type_hint == _IS_BOOL		3974884	0		==			
ANR	3975280	PtrMemberAccess	ret_info -> type_hint		3974884	0					
ANR	3975281	Identifier	ret_info		3974884	0					
ANR	3975282	Identifier	type_hint		3974884	1					
ANR	3975283	Identifier	_IS_BOOL		3974884	1					
ANR	3975284	CallExpression	EXPECTED ( Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE )		3974884	1					
ANR	3975285	Callee	EXPECTED		3974884	0					
ANR	3975286	Identifier	EXPECTED		3974884	0					
ANR	3975287	ArgumentList	Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE		3974884	1					
ANR	3975288	Argument	Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE		3974884	0					
ANR	3975289	OrExpression	Z_TYPE_P ( ret ) == IS_FALSE || Z_TYPE_P ( ret ) == IS_TRUE		3974884	0		||			
ANR	3975290	EqualityExpression	Z_TYPE_P ( ret ) == IS_FALSE		3974884	0		==			
ANR	3975291	CallExpression	Z_TYPE_P ( ret )		3974884	0					
ANR	3975292	Callee	Z_TYPE_P		3974884	0					
ANR	3975293	Identifier	Z_TYPE_P		3974884	0					
ANR	3975294	ArgumentList	ret		3974884	1					
ANR	3975295	Argument	ret		3974884	0					
ANR	3975296	Identifier	ret		3974884	0					
ANR	3975297	Identifier	IS_FALSE		3974884	1					
ANR	3975298	EqualityExpression	Z_TYPE_P ( ret ) == IS_TRUE		3974884	1		==			
ANR	3975299	CallExpression	Z_TYPE_P ( ret )		3974884	0					
ANR	3975300	Callee	Z_TYPE_P		3974884	0					
ANR	3975301	Identifier	Z_TYPE_P		3974884	0					
ANR	3975302	ArgumentList	ret		3974884	1					
ANR	3975303	Argument	ret		3974884	0					
ANR	3975304	Identifier	ret		3974884	0					
ANR	3975305	Identifier	IS_TRUE		3974884	1					
ANR	3975306	CompoundStatement		47:79:1847:1847	3974884	1					
ANR	3975307	ElseStatement	else		3974884	0					
ANR	3975308	IfStatement	"if ( UNEXPECTED ( ! zend_verify_scalar_type_hint ( ret_info -> type_hint , ret , ZEND_RET_USES_STRICT_TYPES ( ) ) ) )"		3974884	0					
ANR	3975309	Condition	"UNEXPECTED ( ! zend_verify_scalar_type_hint ( ret_info -> type_hint , ret , ZEND_RET_USES_STRICT_TYPES ( ) ) )"	1038:14:34432:34528	3974884	0	True				
ANR	3975310	CallExpression	"UNEXPECTED ( ! zend_verify_scalar_type_hint ( ret_info -> type_hint , ret , ZEND_RET_USES_STRICT_TYPES ( ) ) )"		3974884	0					
ANR	3975311	Callee	UNEXPECTED		3974884	0					
ANR	3975312	Identifier	UNEXPECTED		3974884	0					
ANR	3975313	ArgumentList	"! zend_verify_scalar_type_hint ( ret_info -> type_hint , ret , ZEND_RET_USES_STRICT_TYPES ( ) )"		3974884	1					
ANR	3975314	Argument	"! zend_verify_scalar_type_hint ( ret_info -> type_hint , ret , ZEND_RET_USES_STRICT_TYPES ( ) )"		3974884	0					
ANR	3975315	UnaryOperationExpression	"! zend_verify_scalar_type_hint ( ret_info -> type_hint , ret , ZEND_RET_USES_STRICT_TYPES ( ) )"		3974884	0					
ANR	3975316	UnaryOperator	!		3974884	0					
ANR	3975317	CallExpression	"zend_verify_scalar_type_hint ( ret_info -> type_hint , ret , ZEND_RET_USES_STRICT_TYPES ( ) )"		3974884	1					
ANR	3975318	Callee	zend_verify_scalar_type_hint		3974884	0					
ANR	3975319	Identifier	zend_verify_scalar_type_hint		3974884	0					
ANR	3975320	ArgumentList	ret_info -> type_hint		3974884	1					
ANR	3975321	Argument	ret_info -> type_hint		3974884	0					
ANR	3975322	PtrMemberAccess	ret_info -> type_hint		3974884	0					
ANR	3975323	Identifier	ret_info		3974884	0					
ANR	3975324	Identifier	type_hint		3974884	1					
ANR	3975325	Argument	ret		3974884	1					
ANR	3975326	Identifier	ret		3974884	0					
ANR	3975327	Argument	ZEND_RET_USES_STRICT_TYPES ( )		3974884	2					
ANR	3975328	CallExpression	ZEND_RET_USES_STRICT_TYPES ( )		3974884	0					
ANR	3975329	Callee	ZEND_RET_USES_STRICT_TYPES		3974884	0					
ANR	3975330	Identifier	ZEND_RET_USES_STRICT_TYPES		3974884	0					
ANR	3975331	ArgumentList			3974884	1					
ANR	3975332	CompoundStatement		49:113:1977:1977	3974884	1					
ANR	3975333	ExpressionStatement	"zend_verify_return_error ( zf , ""be of the type "" , zend_get_type_by_const ( ret_info -> type_hint ) , zend_zval_type_name ( ret ) , """" )"	1039:4:34537:34659	3974884	0	True				
ANR	3975334	CallExpression	"zend_verify_return_error ( zf , ""be of the type "" , zend_get_type_by_const ( ret_info -> type_hint ) , zend_zval_type_name ( ret ) , """" )"		3974884	0					
ANR	3975335	Callee	zend_verify_return_error		3974884	0					
ANR	3975336	Identifier	zend_verify_return_error		3974884	0					
ANR	3975337	ArgumentList	zf		3974884	1					
ANR	3975338	Argument	zf		3974884	0					
ANR	3975339	Identifier	zf		3974884	0					
ANR	3975340	Argument	"""be of the type """		3974884	1					
ANR	3975341	PrimaryExpression	"""be of the type """		3974884	0					
ANR	3975342	Argument	zend_get_type_by_const ( ret_info -> type_hint )		3974884	2					
ANR	3975343	CallExpression	zend_get_type_by_const ( ret_info -> type_hint )		3974884	0					
ANR	3975344	Callee	zend_get_type_by_const		3974884	0					
ANR	3975345	Identifier	zend_get_type_by_const		3974884	0					
ANR	3975346	ArgumentList	ret_info -> type_hint		3974884	1					
ANR	3975347	Argument	ret_info -> type_hint		3974884	0					
ANR	3975348	PtrMemberAccess	ret_info -> type_hint		3974884	0					
ANR	3975349	Identifier	ret_info		3974884	0					
ANR	3975350	Identifier	type_hint		3974884	1					
ANR	3975351	Argument	zend_zval_type_name ( ret )		3974884	3					
ANR	3975352	CallExpression	zend_zval_type_name ( ret )		3974884	0					
ANR	3975353	Callee	zend_zval_type_name		3974884	0					
ANR	3975354	Identifier	zend_zval_type_name		3974884	0					
ANR	3975355	ArgumentList	ret		3974884	1					
ANR	3975356	Argument	ret		3974884	0					
ANR	3975357	Identifier	ret		3974884	0					
ANR	3975358	Argument	""""""		3974884	4					
ANR	3975359	PrimaryExpression	""""""		3974884	0					
ANR	3975360	ReturnType	static zend_always_inline void		3974884	1					
ANR	3975361	Identifier	zend_verify_return_type		3974884	2					
ANR	3975362	ParameterList	"zend_function * zf , zval * ret , void * * cache_slot"		3974884	3					
ANR	3975363	Parameter	zend_function * zf	989:55:32504:32520	3974884	0	True				
ANR	3975364	ParameterType	zend_function *		3974884	0					
ANR	3975365	Identifier	zf		3974884	1					
ANR	3975366	Parameter	zval * ret	989:74:32523:32531	3974884	1	True				
ANR	3975367	ParameterType	zval *		3974884	0					
ANR	3975368	Identifier	ret		3974884	1					
ANR	3975369	Parameter	void * * cache_slot	989:85:32534:32550	3974884	2	True				
ANR	3975370	ParameterType	void * *		3974884	0					
ANR	3975371	Identifier	cache_slot		3974884	1					
ANR	3975372	CFGEntryNode	ENTRY		3974884		True				
ANR	3975373	CFGExitNode	EXIT		3974884		True				
ANR	3975374	Symbol	instanceof_function		3974884						
ANR	3975375	Symbol	need_msg		3974884						
ANR	3975376	Symbol	zf -> common . arg_info		3974884						
ANR	3975377	Symbol	zf -> common		3974884						
ANR	3975378	Symbol	ret_info -> type_hint		3974884						
ANR	3975379	Symbol	* ce		3974884						
ANR	3975380	Symbol	zend_zval_type_name		3974884						
ANR	3975381	Symbol	UNEXPECTED		3974884						
ANR	3975382	Symbol	Z_OBJCE_P ( ret ) -> name		3974884						
ANR	3975383	Symbol	_IS_BOOL		3974884						
ANR	3975384	Symbol	ret_info -> allow_null		3974884						
ANR	3975385	Symbol	IS_NULL		3974884						
ANR	3975386	Symbol	* ret_info		3974884						
ANR	3975387	Symbol	Z_OBJCE_P		3974884						
ANR	3975388	Symbol	ZEND_ACC_INTERFACE		3974884						
ANR	3975389	Symbol	ce -> name		3974884						
ANR	3975390	Symbol	IS_FALSE		3974884						
ANR	3975391	Symbol	* Z_OBJCE_P		3974884						
ANR	3975392	Symbol	ZEND_RET_USES_STRICT_TYPES		3974884						
ANR	3975393	Symbol	ret		3974884						
ANR	3975394	Symbol	cache_slot		3974884						
ANR	3975395	Symbol	IS_CALLABLE		3974884						
ANR	3975396	Symbol	zend_get_type_by_const		3974884						
ANR	3975397	Symbol	ce		3974884						
ANR	3975398	Symbol	NULL		3974884						
ANR	3975399	Symbol	* cache_slot		3974884						
ANR	3975400	Symbol	zend_is_callable		3974884						
ANR	3975401	Symbol	IS_TRUE		3974884						
ANR	3975402	Symbol	zf		3974884						
ANR	3975403	Symbol	Z_TYPE_P		3974884						
ANR	3975404	Symbol	ZSTR_VAL		3974884						
ANR	3975405	Symbol	ce -> ce_flags		3974884						
ANR	3975406	Symbol	* zf		3974884						
ANR	3975407	Symbol	zend_verify_scalar_type_hint		3974884						
ANR	3975408	Symbol	ret_info		3974884						
ANR	3975409	Symbol	IS_CALLABLE_CHECK_SILENT		3974884						
ANR	3975410	Symbol	ret_info -> class_name		3974884						
ANR	3975411	Symbol	zend_verify_arg_class_kind		3974884						
ANR	3975412	Symbol	EXPECTED		3974884						
ANR	3975413	Function	zend_verify_missing_return_type	1045:0:34676:35695							
ANR	3975414	FunctionDef	"zend_verify_missing_return_type (zend_function * zf , void * * cache_slot)"		3975413	0					
ANR	3975415	CompoundStatement		1046:0:34767:35695	3975413	0					
ANR	3975416	IdentifierDeclStatement	zend_arg_info * ret_info = zf -> common . arg_info - 1 ;	1047:1:34770:34819	3975413	0	True				
ANR	3975417	IdentifierDecl	* ret_info = zf -> common . arg_info - 1		3975413	0					
ANR	3975418	IdentifierDeclType	zend_arg_info *		3975413	0					
ANR	3975419	Identifier	ret_info		3975413	1					
ANR	3975420	AssignmentExpression	* ret_info = zf -> common . arg_info - 1		3975413	2		=			
ANR	3975421	Identifier	ret_info		3975413	0					
ANR	3975422	AdditiveExpression	zf -> common . arg_info - 1		3975413	1		-			
ANR	3975423	MemberAccess	zf -> common . arg_info		3975413	0					
ANR	3975424	PtrMemberAccess	zf -> common		3975413	0					
ANR	3975425	Identifier	zf		3975413	0					
ANR	3975426	Identifier	common		3975413	1					
ANR	3975427	Identifier	arg_info		3975413	1					
ANR	3975428	PrimaryExpression	1		3975413	1					
ANR	3975429	IdentifierDeclStatement	char * need_msg ;	1048:1:34822:34836	3975413	1	True				
ANR	3975430	IdentifierDecl	* need_msg		3975413	0					
ANR	3975431	IdentifierDeclType	char *		3975413	0					
ANR	3975432	Identifier	need_msg		3975413	1					
ANR	3975433	IdentifierDeclStatement	zend_class_entry * ce ;	1049:1:34839:34859	3975413	2	True				
ANR	3975434	IdentifierDecl	* ce		3975413	0					
ANR	3975435	IdentifierDeclType	zend_class_entry *		3975413	0					
ANR	3975436	Identifier	ce		3975413	1					
ANR	3975437	IfStatement	if ( ret_info -> type_hint )		3975413	3					
ANR	3975438	Condition	ret_info -> type_hint	1051:5:34867:34885	3975413	0	True				
ANR	3975439	PtrMemberAccess	ret_info -> type_hint		3975413	0					
ANR	3975440	Identifier	ret_info		3975413	0					
ANR	3975441	Identifier	type_hint		3975413	1					
ANR	3975442	CompoundStatement		6:26:120:120	3975413	1					
ANR	3975443	IfStatement	if ( ret_info -> class_name )		3975413	0					
ANR	3975444	Condition	ret_info -> class_name	1052:6:34896:34915	3975413	0	True				
ANR	3975445	PtrMemberAccess	ret_info -> class_name		3975413	0					
ANR	3975446	Identifier	ret_info		3975413	0					
ANR	3975447	Identifier	class_name		3975413	1					
ANR	3975448	CompoundStatement		7:28:150:150	3975413	1					
ANR	3975449	IfStatement	if ( EXPECTED ( * cache_slot ) )		3975413	0					
ANR	3975450	Condition	EXPECTED ( * cache_slot )	1053:7:34927:34947	3975413	0	True				
ANR	3975451	CallExpression	EXPECTED ( * cache_slot )		3975413	0					
ANR	3975452	Callee	EXPECTED		3975413	0					
ANR	3975453	Identifier	EXPECTED		3975413	0					
ANR	3975454	ArgumentList	* cache_slot		3975413	1					
ANR	3975455	Argument	* cache_slot		3975413	0					
ANR	3975456	UnaryOperationExpression	* cache_slot		3975413	0					
ANR	3975457	UnaryOperator	*		3975413	0					
ANR	3975458	Identifier	cache_slot		3975413	1					
ANR	3975459	CompoundStatement		8:30:182:182	3975413	1					
ANR	3975460	ExpressionStatement	ce = ( zend_class_entry * ) * cache_slot	1054:4:34956:34991	3975413	0	True				
ANR	3975461	AssignmentExpression	ce = ( zend_class_entry * ) * cache_slot		3975413	0		=			
ANR	3975462	Identifier	ce		3975413	0					
ANR	3975463	CastExpression	( zend_class_entry * ) * cache_slot		3975413	1					
ANR	3975464	CastTarget	zend_class_entry *		3975413	0					
ANR	3975465	UnaryOperationExpression	* cache_slot		3975413	1					
ANR	3975466	UnaryOperator	*		3975413	0					
ANR	3975467	Identifier	cache_slot		3975413	1					
ANR	3975468	ElseStatement	else		3975413	0					
ANR	3975469	CompoundStatement		10:10:235:235	3975413	0					
ANR	3975470	ExpressionStatement	ce = zend_verify_arg_class_kind ( ret_info )	1056:4:35009:35050	3975413	0	True				
ANR	3975471	AssignmentExpression	ce = zend_verify_arg_class_kind ( ret_info )		3975413	0		=			
ANR	3975472	Identifier	ce		3975413	0					
ANR	3975473	CallExpression	zend_verify_arg_class_kind ( ret_info )		3975413	1					
ANR	3975474	Callee	zend_verify_arg_class_kind		3975413	0					
ANR	3975475	Identifier	zend_verify_arg_class_kind		3975413	0					
ANR	3975476	ArgumentList	ret_info		3975413	1					
ANR	3975477	Argument	ret_info		3975413	0					
ANR	3975478	Identifier	ret_info		3975413	0					
ANR	3975479	IfStatement	if ( UNEXPECTED ( ! ce ) )		3975413	1					
ANR	3975480	Condition	UNEXPECTED ( ! ce )	1057:8:35060:35074	3975413	0	True				
ANR	3975481	CallExpression	UNEXPECTED ( ! ce )		3975413	0					
ANR	3975482	Callee	UNEXPECTED		3975413	0					
ANR	3975483	Identifier	UNEXPECTED		3975413	0					
ANR	3975484	ArgumentList	! ce		3975413	1					
ANR	3975485	Argument	! ce		3975413	0					
ANR	3975486	UnaryOperationExpression	! ce		3975413	0					
ANR	3975487	UnaryOperator	!		3975413	0					
ANR	3975488	Identifier	ce		3975413	1					
ANR	3975489	CompoundStatement		12:25:309:309	3975413	1					
ANR	3975490	ExpressionStatement	"zend_verify_return_error ( zf , ""be an instance of "" , ZSTR_VAL ( ret_info -> class_name ) , ""none"" , """" )"	1058:5:35084:35178	3975413	0	True				
ANR	3975491	CallExpression	"zend_verify_return_error ( zf , ""be an instance of "" , ZSTR_VAL ( ret_info -> class_name ) , ""none"" , """" )"		3975413	0					
ANR	3975492	Callee	zend_verify_return_error		3975413	0					
ANR	3975493	Identifier	zend_verify_return_error		3975413	0					
ANR	3975494	ArgumentList	zf		3975413	1					
ANR	3975495	Argument	zf		3975413	0					
ANR	3975496	Identifier	zf		3975413	0					
ANR	3975497	Argument	"""be an instance of """		3975413	1					
ANR	3975498	PrimaryExpression	"""be an instance of """		3975413	0					
ANR	3975499	Argument	ZSTR_VAL ( ret_info -> class_name )		3975413	2					
ANR	3975500	CallExpression	ZSTR_VAL ( ret_info -> class_name )		3975413	0					
ANR	3975501	Callee	ZSTR_VAL		3975413	0					
ANR	3975502	Identifier	ZSTR_VAL		3975413	0					
ANR	3975503	ArgumentList	ret_info -> class_name		3975413	1					
ANR	3975504	Argument	ret_info -> class_name		3975413	0					
ANR	3975505	PtrMemberAccess	ret_info -> class_name		3975413	0					
ANR	3975506	Identifier	ret_info		3975413	0					
ANR	3975507	Identifier	class_name		3975413	1					
ANR	3975508	Argument	"""none"""		3975413	3					
ANR	3975509	PrimaryExpression	"""none"""		3975413	0					
ANR	3975510	Argument	""""""		3975413	4					
ANR	3975511	PrimaryExpression	""""""		3975413	0					
ANR	3975512	ReturnStatement	return 0 ;	1059:5:35185:35193	3975413	1	True				
ANR	3975513	PrimaryExpression	0		3975413	0					
ANR	3975514	ExpressionStatement	* cache_slot = ( void * ) ce	1061:4:35205:35228	3975413	2	True				
ANR	3975515	AssignmentExpression	* cache_slot = ( void * ) ce		3975413	0		=			
ANR	3975516	UnaryOperationExpression	* cache_slot		3975413	0					
ANR	3975517	UnaryOperator	*		3975413	0					
ANR	3975518	Identifier	cache_slot		3975413	1					
ANR	3975519	CastExpression	( void * ) ce		3975413	1					
ANR	3975520	CastTarget	void *		3975413	0					
ANR	3975521	Identifier	ce		3975413	1					
ANR	3975522	ExpressionStatement	"need_msg = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """	1063:3:35238:35340	3975413	1	True				
ANR	3975523	AssignmentExpression	"need_msg = ( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """		3975413	0		=			
ANR	3975524	Identifier	need_msg		3975413	0					
ANR	3975525	ConditionalExpression	"( ce -> ce_flags & ZEND_ACC_INTERFACE ) ? ""implement interface "" : ""be an instance of """		3975413	1					
ANR	3975526	Condition	ce -> ce_flags & ZEND_ACC_INTERFACE		3975413	0					
ANR	3975527	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		3975413	0		&			
ANR	3975528	PtrMemberAccess	ce -> ce_flags		3975413	0					
ANR	3975529	Identifier	ce		3975413	0					
ANR	3975530	Identifier	ce_flags		3975413	1					
ANR	3975531	Identifier	ZEND_ACC_INTERFACE		3975413	1					
ANR	3975532	PrimaryExpression	"""implement interface """		3975413	1					
ANR	3975533	PrimaryExpression	"""be an instance of """		3975413	2					
ANR	3975534	ExpressionStatement	"zend_verify_return_error ( zf , need_msg , ZSTR_VAL ( ce -> name ) , ""none"" , """" )"	1066:3:35345:35415	3975413	2	True				
ANR	3975535	CallExpression	"zend_verify_return_error ( zf , need_msg , ZSTR_VAL ( ce -> name ) , ""none"" , """" )"		3975413	0					
ANR	3975536	Callee	zend_verify_return_error		3975413	0					
ANR	3975537	Identifier	zend_verify_return_error		3975413	0					
ANR	3975538	ArgumentList	zf		3975413	1					
ANR	3975539	Argument	zf		3975413	0					
ANR	3975540	Identifier	zf		3975413	0					
ANR	3975541	Argument	need_msg		3975413	1					
ANR	3975542	Identifier	need_msg		3975413	0					
ANR	3975543	Argument	ZSTR_VAL ( ce -> name )		3975413	2					
ANR	3975544	CallExpression	ZSTR_VAL ( ce -> name )		3975413	0					
ANR	3975545	Callee	ZSTR_VAL		3975413	0					
ANR	3975546	Identifier	ZSTR_VAL		3975413	0					
ANR	3975547	ArgumentList	ce -> name		3975413	1					
ANR	3975548	Argument	ce -> name		3975413	0					
ANR	3975549	PtrMemberAccess	ce -> name		3975413	0					
ANR	3975550	Identifier	ce		3975413	0					
ANR	3975551	Identifier	name		3975413	1					
ANR	3975552	Argument	"""none"""		3975413	3					
ANR	3975553	PrimaryExpression	"""none"""		3975413	0					
ANR	3975554	Argument	""""""		3975413	4					
ANR	3975555	PrimaryExpression	""""""		3975413	0					
ANR	3975556	ReturnStatement	return 0 ;	1067:3:35420:35428	3975413	3	True				
ANR	3975557	PrimaryExpression	0		3975413	0					
ANR	3975558	ElseStatement	else		3975413	0					
ANR	3975559	IfStatement	if ( ret_info -> type_hint == IS_CALLABLE )		3975413	0					
ANR	3975560	Condition	ret_info -> type_hint == IS_CALLABLE	1068:13:35443:35476	3975413	0	True				
ANR	3975561	EqualityExpression	ret_info -> type_hint == IS_CALLABLE		3975413	0		==			
ANR	3975562	PtrMemberAccess	ret_info -> type_hint		3975413	0					
ANR	3975563	Identifier	ret_info		3975413	0					
ANR	3975564	Identifier	type_hint		3975413	1					
ANR	3975565	Identifier	IS_CALLABLE		3975413	1					
ANR	3975566	CompoundStatement		23:49:711:711	3975413	1					
ANR	3975567	ExpressionStatement	"zend_verify_return_error ( zf , ""be callable"" , """" , ""none"" , """" )"	1069:3:35484:35543	3975413	0	True				
ANR	3975568	CallExpression	"zend_verify_return_error ( zf , ""be callable"" , """" , ""none"" , """" )"		3975413	0					
ANR	3975569	Callee	zend_verify_return_error		3975413	0					
ANR	3975570	Identifier	zend_verify_return_error		3975413	0					
ANR	3975571	ArgumentList	zf		3975413	1					
ANR	3975572	Argument	zf		3975413	0					
ANR	3975573	Identifier	zf		3975413	0					
ANR	3975574	Argument	"""be callable"""		3975413	1					
ANR	3975575	PrimaryExpression	"""be callable"""		3975413	0					
ANR	3975576	Argument	""""""		3975413	2					
ANR	3975577	PrimaryExpression	""""""		3975413	0					
ANR	3975578	Argument	"""none"""		3975413	3					
ANR	3975579	PrimaryExpression	"""none"""		3975413	0					
ANR	3975580	Argument	""""""		3975413	4					
ANR	3975581	PrimaryExpression	""""""		3975413	0					
ANR	3975582	ElseStatement	else		3975413	0					
ANR	3975583	CompoundStatement		25:9:786:786	3975413	0					
ANR	3975584	ExpressionStatement	"zend_verify_return_error ( zf , ""be of the type "" , zend_get_type_by_const ( ret_info -> type_hint ) , ""none"" , """" )"	1071:3:35559:35663	3975413	0	True				
ANR	3975585	CallExpression	"zend_verify_return_error ( zf , ""be of the type "" , zend_get_type_by_const ( ret_info -> type_hint ) , ""none"" , """" )"		3975413	0					
ANR	3975586	Callee	zend_verify_return_error		3975413	0					
ANR	3975587	Identifier	zend_verify_return_error		3975413	0					
ANR	3975588	ArgumentList	zf		3975413	1					
ANR	3975589	Argument	zf		3975413	0					
ANR	3975590	Identifier	zf		3975413	0					
ANR	3975591	Argument	"""be of the type """		3975413	1					
ANR	3975592	PrimaryExpression	"""be of the type """		3975413	0					
ANR	3975593	Argument	zend_get_type_by_const ( ret_info -> type_hint )		3975413	2					
ANR	3975594	CallExpression	zend_get_type_by_const ( ret_info -> type_hint )		3975413	0					
ANR	3975595	Callee	zend_get_type_by_const		3975413	0					
ANR	3975596	Identifier	zend_get_type_by_const		3975413	0					
ANR	3975597	ArgumentList	ret_info -> type_hint		3975413	1					
ANR	3975598	Argument	ret_info -> type_hint		3975413	0					
ANR	3975599	PtrMemberAccess	ret_info -> type_hint		3975413	0					
ANR	3975600	Identifier	ret_info		3975413	0					
ANR	3975601	Identifier	type_hint		3975413	1					
ANR	3975602	Argument	"""none"""		3975413	3					
ANR	3975603	PrimaryExpression	"""none"""		3975413	0					
ANR	3975604	Argument	""""""		3975413	4					
ANR	3975605	PrimaryExpression	""""""		3975413	0					
ANR	3975606	ReturnStatement	return 0 ;	1073:2:35671:35679	3975413	1	True				
ANR	3975607	PrimaryExpression	0		3975413	0					
ANR	3975608	ReturnStatement	return 1 ;	1075:1:35685:35693	3975413	4	True				
ANR	3975609	PrimaryExpression	1		3975413	0					
ANR	3975610	ReturnType	static ZEND_COLD int		3975413	1					
ANR	3975611	Identifier	zend_verify_missing_return_type		3975413	2					
ANR	3975612	ParameterList	"zend_function * zf , void * * cache_slot"		3975413	3					
ANR	3975613	Parameter	zend_function * zf	1045:53:34729:34745	3975413	0	True				
ANR	3975614	ParameterType	zend_function *		3975413	0					
ANR	3975615	Identifier	zf		3975413	1					
ANR	3975616	Parameter	void * * cache_slot	1045:72:34748:34764	3975413	1	True				
ANR	3975617	ParameterType	void * *		3975413	0					
ANR	3975618	Identifier	cache_slot		3975413	1					
ANR	3975619	CFGEntryNode	ENTRY		3975413		True				
ANR	3975620	CFGExitNode	EXIT		3975413		True				
ANR	3975621	Symbol	cache_slot		3975413						
ANR	3975622	Symbol	IS_CALLABLE		3975413						
ANR	3975623	Symbol	zend_get_type_by_const		3975413						
ANR	3975624	Symbol	ce		3975413						
ANR	3975625	Symbol	need_msg		3975413						
ANR	3975626	Symbol	* cache_slot		3975413						
ANR	3975627	Symbol	zf -> common . arg_info		3975413						
ANR	3975628	Symbol	zf -> common		3975413						
ANR	3975629	Symbol	ret_info -> type_hint		3975413						
ANR	3975630	Symbol	* ce		3975413						
ANR	3975631	Symbol	zf		3975413						
ANR	3975632	Symbol	ZSTR_VAL		3975413						
ANR	3975633	Symbol	UNEXPECTED		3975413						
ANR	3975634	Symbol	ce -> ce_flags		3975413						
ANR	3975635	Symbol	* zf		3975413						
ANR	3975636	Symbol	ret_info		3975413						
ANR	3975637	Symbol	* ret_info		3975413						
ANR	3975638	Symbol	ret_info -> class_name		3975413						
ANR	3975639	Symbol	ZEND_ACC_INTERFACE		3975413						
ANR	3975640	Symbol	ce -> name		3975413						
ANR	3975641	Symbol	zend_verify_arg_class_kind		3975413						
ANR	3975642	Symbol	EXPECTED		3975413						
ANR	3975643	Function	zend_assign_to_object	1078:0:35698:40077							
ANR	3975644	FunctionDef	"zend_assign_to_object (zval * retval , zval * object , uint32_t object_op_type , zval * property_name , uint32_t property_op_type , int value_type , znode_op value_op , const zend_execute_data * execute_data , void * * cache_slot)"		3975643	0					
ANR	3975645	CompoundStatement		1079:0:35945:40077	3975643	0					
ANR	3975646	IdentifierDeclStatement	zend_free_op free_value ;	1080:1:35948:35971	3975643	0	True				
ANR	3975647	IdentifierDecl	free_value		3975643	0					
ANR	3975648	IdentifierDeclType	zend_free_op		3975643	0					
ANR	3975649	Identifier	free_value		3975643	1					
ANR	3975650	IdentifierDeclStatement	"zval * value = get_zval_ptr_r ( value_type , value_op , execute_data , & free_value ) ;"	1081:1:35974:36051	3975643	1	True				
ANR	3975651	IdentifierDecl	"* value = get_zval_ptr_r ( value_type , value_op , execute_data , & free_value )"		3975643	0					
ANR	3975652	IdentifierDeclType	zval *		3975643	0					
ANR	3975653	Identifier	value		3975643	1					
ANR	3975654	AssignmentExpression	"* value = get_zval_ptr_r ( value_type , value_op , execute_data , & free_value )"		3975643	2		=			
ANR	3975655	Identifier	value		3975643	0					
ANR	3975656	CallExpression	"get_zval_ptr_r ( value_type , value_op , execute_data , & free_value )"		3975643	1					
ANR	3975657	Callee	get_zval_ptr_r		3975643	0					
ANR	3975658	Identifier	get_zval_ptr_r		3975643	0					
ANR	3975659	ArgumentList	value_type		3975643	1					
ANR	3975660	Argument	value_type		3975643	0					
ANR	3975661	Identifier	value_type		3975643	0					
ANR	3975662	Argument	value_op		3975643	1					
ANR	3975663	Identifier	value_op		3975643	0					
ANR	3975664	Argument	execute_data		3975643	2					
ANR	3975665	Identifier	execute_data		3975643	0					
ANR	3975666	Argument	& free_value		3975643	3					
ANR	3975667	UnaryOperationExpression	& free_value		3975643	0					
ANR	3975668	UnaryOperator	&		3975643	0					
ANR	3975669	Identifier	free_value		3975643	1					
ANR	3975670	IdentifierDeclStatement	zval tmp ;	1082:2:36055:36063	3975643	2	True				
ANR	3975671	IdentifierDecl	tmp		3975643	0					
ANR	3975672	IdentifierDeclType	zval		3975643	0					
ANR	3975673	Identifier	tmp		3975643	1					
ANR	3975674	IfStatement	if ( object_op_type != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT ) )		3975643	3					
ANR	3975675	Condition	object_op_type != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )	1084:5:36071:36142	3975643	0	True				
ANR	3975676	AndExpression	object_op_type != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		3975643	0		&&			
ANR	3975677	EqualityExpression	object_op_type != IS_UNUSED		3975643	0		!=			
ANR	3975678	Identifier	object_op_type		3975643	0					
ANR	3975679	Identifier	IS_UNUSED		3975643	1					
ANR	3975680	CallExpression	UNEXPECTED ( Z_TYPE_P ( object ) != IS_OBJECT )		3975643	1					
ANR	3975681	Callee	UNEXPECTED		3975643	0					
ANR	3975682	Identifier	UNEXPECTED		3975643	0					
ANR	3975683	ArgumentList	Z_TYPE_P ( object ) != IS_OBJECT		3975643	1					
ANR	3975684	Argument	Z_TYPE_P ( object ) != IS_OBJECT		3975643	0					
ANR	3975685	EqualityExpression	Z_TYPE_P ( object ) != IS_OBJECT		3975643	0		!=			
ANR	3975686	CallExpression	Z_TYPE_P ( object )		3975643	0					
ANR	3975687	Callee	Z_TYPE_P		3975643	0					
ANR	3975688	Identifier	Z_TYPE_P		3975643	0					
ANR	3975689	ArgumentList	object		3975643	1					
ANR	3975690	Argument	object		3975643	0					
ANR	3975691	Identifier	object		3975643	0					
ANR	3975692	Identifier	IS_OBJECT		3975643	1					
ANR	3975693	CompoundStatement		6:79:199:199	3975643	1					
ANR	3975694	DoStatement	do		3975643	0					
ANR	3975695	CompoundStatement		7:5:206:206	3975643	0					
ANR	3975696	IfStatement	if ( object_op_type == IS_VAR && UNEXPECTED ( object == & EG ( error_zval ) ) )		3975643	0					
ANR	3975697	Condition	object_op_type == IS_VAR && UNEXPECTED ( object == & EG ( error_zval ) )	1086:7:36161:36225	3975643	0	True				
ANR	3975698	AndExpression	object_op_type == IS_VAR && UNEXPECTED ( object == & EG ( error_zval ) )		3975643	0		&&			
ANR	3975699	EqualityExpression	object_op_type == IS_VAR		3975643	0		==			
ANR	3975700	Identifier	object_op_type		3975643	0					
ANR	3975701	Identifier	IS_VAR		3975643	1					
ANR	3975702	CallExpression	UNEXPECTED ( object == & EG ( error_zval ) )		3975643	1					
ANR	3975703	Callee	UNEXPECTED		3975643	0					
ANR	3975704	Identifier	UNEXPECTED		3975643	0					
ANR	3975705	ArgumentList	object == & EG ( error_zval )		3975643	1					
ANR	3975706	Argument	object == & EG ( error_zval )		3975643	0					
ANR	3975707	EqualityExpression	object == & EG ( error_zval )		3975643	0		==			
ANR	3975708	Identifier	object		3975643	0					
ANR	3975709	UnaryOperationExpression	& EG ( error_zval )		3975643	1					
ANR	3975710	UnaryOperator	&		3975643	0					
ANR	3975711	CallExpression	EG ( error_zval )		3975643	1					
ANR	3975712	Callee	EG		3975643	0					
ANR	3975713	Identifier	EG		3975643	0					
ANR	3975714	ArgumentList	error_zval		3975643	1					
ANR	3975715	Argument	error_zval		3975643	0					
ANR	3975716	Identifier	error_zval		3975643	0					
ANR	3975717	CompoundStatement		8:74:282:282	3975643	1					
ANR	3975718	IfStatement	if ( retval )		3975643	0					
ANR	3975719	Condition	retval	1087:8:36238:36243	3975643	0	True				
ANR	3975720	Identifier	retval		3975643	0					
ANR	3975721	CompoundStatement		9:16:300:300	3975643	1					
ANR	3975722	ExpressionStatement	ZVAL_NULL ( retval )	1088:6:36254:36271	3975643	0	True				
ANR	3975723	CallExpression	ZVAL_NULL ( retval )		3975643	0					
ANR	3975724	Callee	ZVAL_NULL		3975643	0					
ANR	3975725	Identifier	ZVAL_NULL		3975643	0					
ANR	3975726	ArgumentList	retval		3975643	1					
ANR	3975727	Argument	retval		3975643	0					
ANR	3975728	Identifier	retval		3975643	0					
ANR	3975729	ExpressionStatement	FREE_OP ( free_value )	1090:4:36283:36302	3975643	1	True				
ANR	3975730	CallExpression	FREE_OP ( free_value )		3975643	0					
ANR	3975731	Callee	FREE_OP		3975643	0					
ANR	3975732	Identifier	FREE_OP		3975643	0					
ANR	3975733	ArgumentList	free_value		3975643	1					
ANR	3975734	Argument	free_value		3975643	0					
ANR	3975735	Identifier	free_value		3975643	0					
ANR	3975736	ReturnStatement	return ;	1091:4:36308:36314	3975643	2	True				
ANR	3975737	IfStatement	if ( Z_ISREF_P ( object ) )		3975643	1					
ANR	3975738	Condition	Z_ISREF_P ( object )	1093:7:36328:36344	3975643	0	True				
ANR	3975739	CallExpression	Z_ISREF_P ( object )		3975643	0					
ANR	3975740	Callee	Z_ISREF_P		3975643	0					
ANR	3975741	Identifier	Z_ISREF_P		3975643	0					
ANR	3975742	ArgumentList	object		3975643	1					
ANR	3975743	Argument	object		3975643	0					
ANR	3975744	Identifier	object		3975643	0					
ANR	3975745	CompoundStatement		15:26:401:401	3975643	1					
ANR	3975746	ExpressionStatement	object = Z_REFVAL_P ( object )	1094:4:36353:36380	3975643	0	True				
ANR	3975747	AssignmentExpression	object = Z_REFVAL_P ( object )		3975643	0		=			
ANR	3975748	Identifier	object		3975643	0					
ANR	3975749	CallExpression	Z_REFVAL_P ( object )		3975643	1					
ANR	3975750	Callee	Z_REFVAL_P		3975643	0					
ANR	3975751	Identifier	Z_REFVAL_P		3975643	0					
ANR	3975752	ArgumentList	object		3975643	1					
ANR	3975753	Argument	object		3975643	0					
ANR	3975754	Identifier	object		3975643	0					
ANR	3975755	IfStatement	if ( EXPECTED ( Z_TYPE_P ( object ) == IS_OBJECT ) )		3975643	1					
ANR	3975756	Condition	EXPECTED ( Z_TYPE_P ( object ) == IS_OBJECT )	1095:8:36390:36428	3975643	0	True				
ANR	3975757	CallExpression	EXPECTED ( Z_TYPE_P ( object ) == IS_OBJECT )		3975643	0					
ANR	3975758	Callee	EXPECTED		3975643	0					
ANR	3975759	Identifier	EXPECTED		3975643	0					
ANR	3975760	ArgumentList	Z_TYPE_P ( object ) == IS_OBJECT		3975643	1					
ANR	3975761	Argument	Z_TYPE_P ( object ) == IS_OBJECT		3975643	0					
ANR	3975762	EqualityExpression	Z_TYPE_P ( object ) == IS_OBJECT		3975643	0		==			
ANR	3975763	CallExpression	Z_TYPE_P ( object )		3975643	0					
ANR	3975764	Callee	Z_TYPE_P		3975643	0					
ANR	3975765	Identifier	Z_TYPE_P		3975643	0					
ANR	3975766	ArgumentList	object		3975643	1					
ANR	3975767	Argument	object		3975643	0					
ANR	3975768	Identifier	object		3975643	0					
ANR	3975769	Identifier	IS_OBJECT		3975643	1					
ANR	3975770	CompoundStatement		17:49:485:485	3975643	1					
ANR	3975771	BreakStatement	break ;	1096:5:36438:36443	3975643	0	True				
ANR	3975772	IfStatement	if ( EXPECTED ( Z_TYPE_P ( object ) <= IS_FALSE || ( Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0 ) ) )		3975643	2					
ANR	3975773	Condition	EXPECTED ( Z_TYPE_P ( object ) <= IS_FALSE || ( Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0 ) )	1099:7:36463:36569	3975643	0	True				
ANR	3975774	CallExpression	EXPECTED ( Z_TYPE_P ( object ) <= IS_FALSE || ( Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0 ) )		3975643	0					
ANR	3975775	Callee	EXPECTED		3975643	0					
ANR	3975776	Identifier	EXPECTED		3975643	0					
ANR	3975777	ArgumentList	Z_TYPE_P ( object ) <= IS_FALSE || ( Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0 )		3975643	1					
ANR	3975778	Argument	Z_TYPE_P ( object ) <= IS_FALSE || ( Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0 )		3975643	0					
ANR	3975779	OrExpression	Z_TYPE_P ( object ) <= IS_FALSE || ( Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0 )		3975643	0		||			
ANR	3975780	RelationalExpression	Z_TYPE_P ( object ) <= IS_FALSE		3975643	0		<=			
ANR	3975781	CallExpression	Z_TYPE_P ( object )		3975643	0					
ANR	3975782	Callee	Z_TYPE_P		3975643	0					
ANR	3975783	Identifier	Z_TYPE_P		3975643	0					
ANR	3975784	ArgumentList	object		3975643	1					
ANR	3975785	Argument	object		3975643	0					
ANR	3975786	Identifier	object		3975643	0					
ANR	3975787	Identifier	IS_FALSE		3975643	1					
ANR	3975788	AndExpression	Z_TYPE_P ( object ) == IS_STRING && Z_STRLEN_P ( object ) == 0		3975643	1		&&			
ANR	3975789	EqualityExpression	Z_TYPE_P ( object ) == IS_STRING		3975643	0		==			
ANR	3975790	CallExpression	Z_TYPE_P ( object )		3975643	0					
ANR	3975791	Callee	Z_TYPE_P		3975643	0					
ANR	3975792	Identifier	Z_TYPE_P		3975643	0					
ANR	3975793	ArgumentList	object		3975643	1					
ANR	3975794	Argument	object		3975643	0					
ANR	3975795	Identifier	object		3975643	0					
ANR	3975796	Identifier	IS_STRING		3975643	1					
ANR	3975797	EqualityExpression	Z_STRLEN_P ( object ) == 0		3975643	1		==			
ANR	3975798	CallExpression	Z_STRLEN_P ( object )		3975643	0					
ANR	3975799	Callee	Z_STRLEN_P		3975643	0					
ANR	3975800	Identifier	Z_STRLEN_P		3975643	0					
ANR	3975801	ArgumentList	object		3975643	1					
ANR	3975802	Argument	object		3975643	0					
ANR	3975803	Identifier	object		3975643	0					
ANR	3975804	PrimaryExpression	0		3975643	1					
ANR	3975805	CompoundStatement		23:4:632:648	3975643	1					
ANR	3975806	IdentifierDeclStatement	zend_object * obj ;	1101:4:36578:36594	3975643	0	True				
ANR	3975807	IdentifierDecl	* obj		3975643	0					
ANR	3975808	IdentifierDeclType	zend_object *		3975643	0					
ANR	3975809	Identifier	obj		3975643	1					
ANR	3975810	ExpressionStatement	zval_ptr_dtor ( object )	1103:4:36601:36622	3975643	1	True				
ANR	3975811	CallExpression	zval_ptr_dtor ( object )		3975643	0					
ANR	3975812	Callee	zval_ptr_dtor		3975643	0					
ANR	3975813	Identifier	zval_ptr_dtor		3975643	0					
ANR	3975814	ArgumentList	object		3975643	1					
ANR	3975815	Argument	object		3975643	0					
ANR	3975816	Identifier	object		3975643	0					
ANR	3975817	ExpressionStatement	object_init ( object )	1104:4:36628:36647	3975643	2	True				
ANR	3975818	CallExpression	object_init ( object )		3975643	0					
ANR	3975819	Callee	object_init		3975643	0					
ANR	3975820	Identifier	object_init		3975643	0					
ANR	3975821	ArgumentList	object		3975643	1					
ANR	3975822	Argument	object		3975643	0					
ANR	3975823	Identifier	object		3975643	0					
ANR	3975824	ExpressionStatement	Z_ADDREF_P ( object )	1105:4:36653:36671	3975643	3	True				
ANR	3975825	CallExpression	Z_ADDREF_P ( object )		3975643	0					
ANR	3975826	Callee	Z_ADDREF_P		3975643	0					
ANR	3975827	Identifier	Z_ADDREF_P		3975643	0					
ANR	3975828	ArgumentList	object		3975643	1					
ANR	3975829	Argument	object		3975643	0					
ANR	3975830	Identifier	object		3975643	0					
ANR	3975831	ExpressionStatement	obj = Z_OBJ_P ( object )	1106:4:36677:36698	3975643	4	True				
ANR	3975832	AssignmentExpression	obj = Z_OBJ_P ( object )		3975643	0		=			
ANR	3975833	Identifier	obj		3975643	0					
ANR	3975834	CallExpression	Z_OBJ_P ( object )		3975643	1					
ANR	3975835	Callee	Z_OBJ_P		3975643	0					
ANR	3975836	Identifier	Z_OBJ_P		3975643	0					
ANR	3975837	ArgumentList	object		3975643	1					
ANR	3975838	Argument	object		3975643	0					
ANR	3975839	Identifier	object		3975643	0					
ANR	3975840	ExpressionStatement	"zend_error ( E_WARNING , ""Creating default object from empty value"" )"	1107:4:36704:36769	3975643	5	True				
ANR	3975841	CallExpression	"zend_error ( E_WARNING , ""Creating default object from empty value"" )"		3975643	0					
ANR	3975842	Callee	zend_error		3975643	0					
ANR	3975843	Identifier	zend_error		3975643	0					
ANR	3975844	ArgumentList	E_WARNING		3975643	1					
ANR	3975845	Argument	E_WARNING		3975643	0					
ANR	3975846	Identifier	E_WARNING		3975643	0					
ANR	3975847	Argument	"""Creating default object from empty value"""		3975643	1					
ANR	3975848	PrimaryExpression	"""Creating default object from empty value"""		3975643	0					
ANR	3975849	IfStatement	if ( GC_REFCOUNT ( obj ) == 1 )		3975643	6					
ANR	3975850	Condition	GC_REFCOUNT ( obj ) == 1	1108:8:36779:36799	3975643	0	True				
ANR	3975851	EqualityExpression	GC_REFCOUNT ( obj ) == 1		3975643	0		==			
ANR	3975852	CallExpression	GC_REFCOUNT ( obj )		3975643	0					
ANR	3975853	Callee	GC_REFCOUNT		3975643	0					
ANR	3975854	Identifier	GC_REFCOUNT		3975643	0					
ANR	3975855	ArgumentList	obj		3975643	1					
ANR	3975856	Argument	obj		3975643	0					
ANR	3975857	Identifier	obj		3975643	0					
ANR	3975858	PrimaryExpression	1		3975643	1					
ANR	3975859	CompoundStatement		30:31:856:856	3975643	1					
ANR	3975860	IfStatement	if ( retval )		3975643	0					
ANR	3975861	Condition	retval	1110:9:36881:36886	3975643	0	True				
ANR	3975862	Identifier	retval		3975643	0					
ANR	3975863	CompoundStatement		32:17:943:943	3975643	1					
ANR	3975864	ExpressionStatement	ZVAL_NULL ( retval )	1111:6:36897:36914	3975643	0	True				
ANR	3975865	CallExpression	ZVAL_NULL ( retval )		3975643	0					
ANR	3975866	Callee	ZVAL_NULL		3975643	0					
ANR	3975867	Identifier	ZVAL_NULL		3975643	0					
ANR	3975868	ArgumentList	retval		3975643	1					
ANR	3975869	Argument	retval		3975643	0					
ANR	3975870	Identifier	retval		3975643	0					
ANR	3975871	ExpressionStatement	FREE_OP ( free_value )	1113:5:36928:36947	3975643	1	True				
ANR	3975872	CallExpression	FREE_OP ( free_value )		3975643	0					
ANR	3975873	Callee	FREE_OP		3975643	0					
ANR	3975874	Identifier	FREE_OP		3975643	0					
ANR	3975875	ArgumentList	free_value		3975643	1					
ANR	3975876	Argument	free_value		3975643	0					
ANR	3975877	Identifier	free_value		3975643	0					
ANR	3975878	ExpressionStatement	OBJ_RELEASE ( obj )	1114:5:36954:36970	3975643	2	True				
ANR	3975879	CallExpression	OBJ_RELEASE ( obj )		3975643	0					
ANR	3975880	Callee	OBJ_RELEASE		3975643	0					
ANR	3975881	Identifier	OBJ_RELEASE		3975643	0					
ANR	3975882	ArgumentList	obj		3975643	1					
ANR	3975883	Argument	obj		3975643	0					
ANR	3975884	Identifier	obj		3975643	0					
ANR	3975885	ReturnStatement	return ;	1115:5:36977:36983	3975643	3	True				
ANR	3975886	ExpressionStatement	Z_DELREF_P ( object )	1117:4:36995:37013	3975643	7	True				
ANR	3975887	CallExpression	Z_DELREF_P ( object )		3975643	0					
ANR	3975888	Callee	Z_DELREF_P		3975643	0					
ANR	3975889	Identifier	Z_DELREF_P		3975643	0					
ANR	3975890	ArgumentList	object		3975643	1					
ANR	3975891	Argument	object		3975643	0					
ANR	3975892	Identifier	object		3975643	0					
ANR	3975893	ElseStatement	else		3975643	0					
ANR	3975894	CompoundStatement		40:10:1079:1079	3975643	0					
ANR	3975895	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	1119:4:37031:37096	3975643	0	True				
ANR	3975896	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		3975643	0					
ANR	3975897	Callee	zend_error		3975643	0					
ANR	3975898	Identifier	zend_error		3975643	0					
ANR	3975899	ArgumentList	E_WARNING		3975643	1					
ANR	3975900	Argument	E_WARNING		3975643	0					
ANR	3975901	Identifier	E_WARNING		3975643	0					
ANR	3975902	Argument	"""Attempt to assign property of non-object"""		3975643	1					
ANR	3975903	PrimaryExpression	"""Attempt to assign property of non-object"""		3975643	0					
ANR	3975904	IfStatement	if ( retval )		3975643	1					
ANR	3975905	Condition	retval	1120:8:37106:37111	3975643	0	True				
ANR	3975906	Identifier	retval		3975643	0					
ANR	3975907	CompoundStatement		42:16:1168:1168	3975643	1					
ANR	3975908	ExpressionStatement	ZVAL_NULL ( retval )	1121:5:37121:37138	3975643	0	True				
ANR	3975909	CallExpression	ZVAL_NULL ( retval )		3975643	0					
ANR	3975910	Callee	ZVAL_NULL		3975643	0					
ANR	3975911	Identifier	ZVAL_NULL		3975643	0					
ANR	3975912	ArgumentList	retval		3975643	1					
ANR	3975913	Argument	retval		3975643	0					
ANR	3975914	Identifier	retval		3975643	0					
ANR	3975915	ExpressionStatement	FREE_OP ( free_value )	1123:4:37150:37169	3975643	2	True				
ANR	3975916	CallExpression	FREE_OP ( free_value )		3975643	0					
ANR	3975917	Callee	FREE_OP		3975643	0					
ANR	3975918	Identifier	FREE_OP		3975643	0					
ANR	3975919	ArgumentList	free_value		3975643	1					
ANR	3975920	Argument	free_value		3975643	0					
ANR	3975921	Identifier	free_value		3975643	0					
ANR	3975922	ReturnStatement	return ;	1124:4:37175:37181	3975643	3	True				
ANR	3975923	Condition	0	1126:11:37199:37199	3975643	1	True				
ANR	3975924	PrimaryExpression	0		3975643	0					
ANR	3975925	IfStatement	if ( property_op_type == IS_CONST && EXPECTED ( Z_OBJCE_P ( object ) == CACHED_PTR_EX ( cache_slot ) ) )		3975643	4					
ANR	3975926	Condition	property_op_type == IS_CONST && EXPECTED ( Z_OBJCE_P ( object ) == CACHED_PTR_EX ( cache_slot ) )	1129:5:37212:37301	3975643	0	True				
ANR	3975927	AndExpression	property_op_type == IS_CONST && EXPECTED ( Z_OBJCE_P ( object ) == CACHED_PTR_EX ( cache_slot ) )		3975643	0		&&			
ANR	3975928	EqualityExpression	property_op_type == IS_CONST		3975643	0		==			
ANR	3975929	Identifier	property_op_type		3975643	0					
ANR	3975930	Identifier	IS_CONST		3975643	1					
ANR	3975931	CallExpression	EXPECTED ( Z_OBJCE_P ( object ) == CACHED_PTR_EX ( cache_slot ) )		3975643	1					
ANR	3975932	Callee	EXPECTED		3975643	0					
ANR	3975933	Identifier	EXPECTED		3975643	0					
ANR	3975934	ArgumentList	Z_OBJCE_P ( object ) == CACHED_PTR_EX ( cache_slot )		3975643	1					
ANR	3975935	Argument	Z_OBJCE_P ( object ) == CACHED_PTR_EX ( cache_slot )		3975643	0					
ANR	3975936	EqualityExpression	Z_OBJCE_P ( object ) == CACHED_PTR_EX ( cache_slot )		3975643	0		==			
ANR	3975937	CallExpression	Z_OBJCE_P ( object )		3975643	0					
ANR	3975938	Callee	Z_OBJCE_P		3975643	0					
ANR	3975939	Identifier	Z_OBJCE_P		3975643	0					
ANR	3975940	ArgumentList	object		3975643	1					
ANR	3975941	Argument	object		3975643	0					
ANR	3975942	Identifier	object		3975643	0					
ANR	3975943	CallExpression	CACHED_PTR_EX ( cache_slot )		3975643	1					
ANR	3975944	Callee	CACHED_PTR_EX		3975643	0					
ANR	3975945	Identifier	CACHED_PTR_EX		3975643	0					
ANR	3975946	ArgumentList	cache_slot		3975643	1					
ANR	3975947	Argument	cache_slot		3975643	0					
ANR	3975948	Identifier	cache_slot		3975643	0					
ANR	3975949	CompoundStatement		55:2:1477:1491	3975643	1					
ANR	3975950	IdentifierDeclStatement	uint32_t prop_offset = ( uint32_t ) ( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 ) ;	1131:2:37308:37380	3975643	0	True				
ANR	3975951	IdentifierDecl	prop_offset = ( uint32_t ) ( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 )		3975643	0					
ANR	3975952	IdentifierDeclType	uint32_t		3975643	0					
ANR	3975953	Identifier	prop_offset		3975643	1					
ANR	3975954	AssignmentExpression	prop_offset = ( uint32_t ) ( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 )		3975643	2		=			
ANR	3975955	Identifier	prop_offset		3975643	0					
ANR	3975956	CastExpression	( uint32_t ) ( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 )		3975643	1					
ANR	3975957	CastTarget	uint32_t		3975643	0					
ANR	3975958	CastExpression	( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 )		3975643	1					
ANR	3975959	CastTarget	intptr_t		3975643	0					
ANR	3975960	CallExpression	CACHED_PTR_EX ( cache_slot + 1 )		3975643	1					
ANR	3975961	Callee	CACHED_PTR_EX		3975643	0					
ANR	3975962	Identifier	CACHED_PTR_EX		3975643	0					
ANR	3975963	ArgumentList	cache_slot + 1		3975643	1					
ANR	3975964	Argument	cache_slot + 1		3975643	0					
ANR	3975965	AdditiveExpression	cache_slot + 1		3975643	0		+			
ANR	3975966	Identifier	cache_slot		3975643	0					
ANR	3975967	PrimaryExpression	1		3975643	1					
ANR	3975968	IdentifierDeclStatement	zend_object * zobj = Z_OBJ_P ( object ) ;	1132:2:37384:37419	3975643	1	True				
ANR	3975969	IdentifierDecl	* zobj = Z_OBJ_P ( object )		3975643	0					
ANR	3975970	IdentifierDeclType	zend_object *		3975643	0					
ANR	3975971	Identifier	zobj		3975643	1					
ANR	3975972	AssignmentExpression	* zobj = Z_OBJ_P ( object )		3975643	2		=			
ANR	3975973	Identifier	zobj		3975643	0					
ANR	3975974	CallExpression	Z_OBJ_P ( object )		3975643	1					
ANR	3975975	Callee	Z_OBJ_P		3975643	0					
ANR	3975976	Identifier	Z_OBJ_P		3975643	0					
ANR	3975977	ArgumentList	object		3975643	1					
ANR	3975978	Argument	object		3975643	0					
ANR	3975979	Identifier	object		3975643	0					
ANR	3975980	IdentifierDeclStatement	zval * property ;	1133:2:37423:37437	3975643	2	True				
ANR	3975981	IdentifierDecl	* property		3975643	0					
ANR	3975982	IdentifierDeclType	zval *		3975643	0					
ANR	3975983	Identifier	property		3975643	1					
ANR	3975984	IfStatement	if ( EXPECTED ( prop_offset != ( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET ) )		3975643	3					
ANR	3975985	Condition	EXPECTED ( prop_offset != ( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET )	1135:6:37446:37508	3975643	0	True				
ANR	3975986	CallExpression	EXPECTED ( prop_offset != ( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET )		3975643	0					
ANR	3975987	Callee	EXPECTED		3975643	0					
ANR	3975988	Identifier	EXPECTED		3975643	0					
ANR	3975989	ArgumentList	prop_offset != ( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET		3975643	1					
ANR	3975990	Argument	prop_offset != ( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET		3975643	0					
ANR	3975991	EqualityExpression	prop_offset != ( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET		3975643	0		!=			
ANR	3975992	Identifier	prop_offset		3975643	0					
ANR	3975993	CastExpression	( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET		3975643	1					
ANR	3975994	CastTarget	uint32_t		3975643	0					
ANR	3975995	Identifier	ZEND_DYNAMIC_PROPERTY_OFFSET		3975643	1					
ANR	3975996	CompoundStatement		57:71:1565:1565	3975643	1					
ANR	3975997	ExpressionStatement	"property = OBJ_PROP ( zobj , prop_offset )"	1136:3:37516:37554	3975643	0	True				
ANR	3975998	AssignmentExpression	"property = OBJ_PROP ( zobj , prop_offset )"		3975643	0		=			
ANR	3975999	Identifier	property		3975643	0					
ANR	3976000	CallExpression	"OBJ_PROP ( zobj , prop_offset )"		3975643	1					
ANR	3976001	Callee	OBJ_PROP		3975643	0					
ANR	3976002	Identifier	OBJ_PROP		3975643	0					
ANR	3976003	ArgumentList	zobj		3975643	1					
ANR	3976004	Argument	zobj		3975643	0					
ANR	3976005	Identifier	zobj		3975643	0					
ANR	3976006	Argument	prop_offset		3975643	1					
ANR	3976007	Identifier	prop_offset		3975643	0					
ANR	3976008	IfStatement	if ( Z_TYPE_P ( property ) != IS_UNDEF )		3975643	1					
ANR	3976009	Condition	Z_TYPE_P ( property ) != IS_UNDEF	1137:7:37563:37592	3975643	0	True				
ANR	3976010	EqualityExpression	Z_TYPE_P ( property ) != IS_UNDEF		3975643	0		!=			
ANR	3976011	CallExpression	Z_TYPE_P ( property )		3975643	0					
ANR	3976012	Callee	Z_TYPE_P		3975643	0					
ANR	3976013	Identifier	Z_TYPE_P		3975643	0					
ANR	3976014	ArgumentList	property		3975643	1					
ANR	3976015	Argument	property		3975643	0					
ANR	3976016	Identifier	property		3975643	0					
ANR	3976017	Identifier	IS_UNDEF		3975643	1					
ANR	3976018	CompoundStatement		59:39:1649:1649	3975643	1					
ANR	3976019	Label	fast_assign :	1138:0:37597:37608	3975643	0	True				
ANR	3976020	Identifier	fast_assign		3975643	0					
ANR	3976021	ExpressionStatement	"value = zend_assign_to_variable ( property , value , value_type )"	1139:4:37614:37674	3975643	1	True				
ANR	3976022	AssignmentExpression	"value = zend_assign_to_variable ( property , value , value_type )"		3975643	0		=			
ANR	3976023	Identifier	value		3975643	0					
ANR	3976024	CallExpression	"zend_assign_to_variable ( property , value , value_type )"		3975643	1					
ANR	3976025	Callee	zend_assign_to_variable		3975643	0					
ANR	3976026	Identifier	zend_assign_to_variable		3975643	0					
ANR	3976027	ArgumentList	property		3975643	1					
ANR	3976028	Argument	property		3975643	0					
ANR	3976029	Identifier	property		3975643	0					
ANR	3976030	Argument	value		3975643	1					
ANR	3976031	Identifier	value		3975643	0					
ANR	3976032	Argument	value_type		3975643	2					
ANR	3976033	Identifier	value_type		3975643	0					
ANR	3976034	IfStatement	if ( retval && EXPECTED ( ! EG ( exception ) ) )		3975643	2					
ANR	3976035	Condition	retval && EXPECTED ( ! EG ( exception ) )	1140:8:37684:37717	3975643	0	True				
ANR	3976036	AndExpression	retval && EXPECTED ( ! EG ( exception ) )		3975643	0		&&			
ANR	3976037	Identifier	retval		3975643	0					
ANR	3976038	CallExpression	EXPECTED ( ! EG ( exception ) )		3975643	1					
ANR	3976039	Callee	EXPECTED		3975643	0					
ANR	3976040	Identifier	EXPECTED		3975643	0					
ANR	3976041	ArgumentList	! EG ( exception )		3975643	1					
ANR	3976042	Argument	! EG ( exception )		3975643	0					
ANR	3976043	UnaryOperationExpression	! EG ( exception )		3975643	0					
ANR	3976044	UnaryOperator	!		3975643	0					
ANR	3976045	CallExpression	EG ( exception )		3975643	1					
ANR	3976046	Callee	EG		3975643	0					
ANR	3976047	Identifier	EG		3975643	0					
ANR	3976048	ArgumentList	exception		3975643	1					
ANR	3976049	Argument	exception		3975643	0					
ANR	3976050	Identifier	exception		3975643	0					
ANR	3976051	CompoundStatement		62:44:1774:1774	3975643	1					
ANR	3976052	ExpressionStatement	"ZVAL_COPY ( retval , value )"	1141:5:37727:37751	3975643	0	True				
ANR	3976053	CallExpression	"ZVAL_COPY ( retval , value )"		3975643	0					
ANR	3976054	Callee	ZVAL_COPY		3975643	0					
ANR	3976055	Identifier	ZVAL_COPY		3975643	0					
ANR	3976056	ArgumentList	retval		3975643	1					
ANR	3976057	Argument	retval		3975643	0					
ANR	3976058	Identifier	retval		3975643	0					
ANR	3976059	Argument	value		3975643	1					
ANR	3976060	Identifier	value		3975643	0					
ANR	3976061	ReturnStatement	return ;	1143:4:37763:37769	3975643	3	True				
ANR	3976062	ElseStatement	else		3975643	0					
ANR	3976063	CompoundStatement		67:9:1839:1839	3975643	0					
ANR	3976064	IfStatement	if ( EXPECTED ( zobj -> properties != NULL ) )		3975643	0					
ANR	3976065	Condition	EXPECTED ( zobj -> properties != NULL )	1146:7:37794:37827	3975643	0	True				
ANR	3976066	CallExpression	EXPECTED ( zobj -> properties != NULL )		3975643	0					
ANR	3976067	Callee	EXPECTED		3975643	0					
ANR	3976068	Identifier	EXPECTED		3975643	0					
ANR	3976069	ArgumentList	zobj -> properties != NULL		3975643	1					
ANR	3976070	Argument	zobj -> properties != NULL		3975643	0					
ANR	3976071	EqualityExpression	zobj -> properties != NULL		3975643	0		!=			
ANR	3976072	PtrMemberAccess	zobj -> properties		3975643	0					
ANR	3976073	Identifier	zobj		3975643	0					
ANR	3976074	Identifier	properties		3975643	1					
ANR	3976075	Identifier	NULL		3975643	1					
ANR	3976076	CompoundStatement		68:43:1884:1884	3975643	1					
ANR	3976077	IfStatement	if ( UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 ) )		3975643	0					
ANR	3976078	Condition	UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 )	1147:8:37840:37884	3975643	0	True				
ANR	3976079	CallExpression	UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 )		3975643	0					
ANR	3976080	Callee	UNEXPECTED		3975643	0					
ANR	3976081	Identifier	UNEXPECTED		3975643	0					
ANR	3976082	ArgumentList	GC_REFCOUNT ( zobj -> properties ) > 1		3975643	1					
ANR	3976083	Argument	GC_REFCOUNT ( zobj -> properties ) > 1		3975643	0					
ANR	3976084	RelationalExpression	GC_REFCOUNT ( zobj -> properties ) > 1		3975643	0		>			
ANR	3976085	CallExpression	GC_REFCOUNT ( zobj -> properties )		3975643	0					
ANR	3976086	Callee	GC_REFCOUNT		3975643	0					
ANR	3976087	Identifier	GC_REFCOUNT		3975643	0					
ANR	3976088	ArgumentList	zobj -> properties		3975643	1					
ANR	3976089	Argument	zobj -> properties		3975643	0					
ANR	3976090	PtrMemberAccess	zobj -> properties		3975643	0					
ANR	3976091	Identifier	zobj		3975643	0					
ANR	3976092	Identifier	properties		3975643	1					
ANR	3976093	PrimaryExpression	1		3975643	1					
ANR	3976094	CompoundStatement		69:55:1941:1941	3975643	1					
ANR	3976095	IfStatement	if ( EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) ) )		3975643	0					
ANR	3976096	Condition	EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) )	1148:9:37898:37957	3975643	0	True				
ANR	3976097	CallExpression	EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) )		3975643	0					
ANR	3976098	Callee	EXPECTED		3975643	0					
ANR	3976099	Identifier	EXPECTED		3975643	0					
ANR	3976100	ArgumentList	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		3975643	1					
ANR	3976101	Argument	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		3975643	0					
ANR	3976102	UnaryOperationExpression	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		3975643	0					
ANR	3976103	UnaryOperator	!		3975643	0					
ANR	3976104	BitAndExpression	GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE		3975643	1		&			
ANR	3976105	CallExpression	GC_FLAGS ( zobj -> properties )		3975643	0					
ANR	3976106	Callee	GC_FLAGS		3975643	0					
ANR	3976107	Identifier	GC_FLAGS		3975643	0					
ANR	3976108	ArgumentList	zobj -> properties		3975643	1					
ANR	3976109	Argument	zobj -> properties		3975643	0					
ANR	3976110	PtrMemberAccess	zobj -> properties		3975643	0					
ANR	3976111	Identifier	zobj		3975643	0					
ANR	3976112	Identifier	properties		3975643	1					
ANR	3976113	Identifier	IS_ARRAY_IMMUTABLE		3975643	1					
ANR	3976114	CompoundStatement		70:71:2014:2014	3975643	1					
ANR	3976115	ExpressionStatement	GC_REFCOUNT ( zobj -> properties ) --	1149:6:37968:37999	3975643	0	True				
ANR	3976116	PostIncDecOperationExpression	GC_REFCOUNT ( zobj -> properties ) --		3975643	0					
ANR	3976117	CallExpression	GC_REFCOUNT ( zobj -> properties )		3975643	0					
ANR	3976118	Callee	GC_REFCOUNT		3975643	0					
ANR	3976119	Identifier	GC_REFCOUNT		3975643	0					
ANR	3976120	ArgumentList	zobj -> properties		3975643	1					
ANR	3976121	Argument	zobj -> properties		3975643	0					
ANR	3976122	PtrMemberAccess	zobj -> properties		3975643	0					
ANR	3976123	Identifier	zobj		3975643	0					
ANR	3976124	Identifier	properties		3975643	1					
ANR	3976125	IncDec	--		3975643	1					
ANR	3976126	ExpressionStatement	zobj -> properties = zend_array_dup ( zobj -> properties )	1151:5:38013:38064	3975643	1	True				
ANR	3976127	AssignmentExpression	zobj -> properties = zend_array_dup ( zobj -> properties )		3975643	0		=			
ANR	3976128	PtrMemberAccess	zobj -> properties		3975643	0					
ANR	3976129	Identifier	zobj		3975643	0					
ANR	3976130	Identifier	properties		3975643	1					
ANR	3976131	CallExpression	zend_array_dup ( zobj -> properties )		3975643	1					
ANR	3976132	Callee	zend_array_dup		3975643	0					
ANR	3976133	Identifier	zend_array_dup		3975643	0					
ANR	3976134	ArgumentList	zobj -> properties		3975643	1					
ANR	3976135	Argument	zobj -> properties		3975643	0					
ANR	3976136	PtrMemberAccess	zobj -> properties		3975643	0					
ANR	3976137	Identifier	zobj		3975643	0					
ANR	3976138	Identifier	properties		3975643	1					
ANR	3976139	ExpressionStatement	"property = zend_hash_find ( zobj -> properties , Z_STR_P ( property_name ) )"	1153:4:38076:38143	3975643	1	True				
ANR	3976140	AssignmentExpression	"property = zend_hash_find ( zobj -> properties , Z_STR_P ( property_name ) )"		3975643	0		=			
ANR	3976141	Identifier	property		3975643	0					
ANR	3976142	CallExpression	"zend_hash_find ( zobj -> properties , Z_STR_P ( property_name ) )"		3975643	1					
ANR	3976143	Callee	zend_hash_find		3975643	0					
ANR	3976144	Identifier	zend_hash_find		3975643	0					
ANR	3976145	ArgumentList	zobj -> properties		3975643	1					
ANR	3976146	Argument	zobj -> properties		3975643	0					
ANR	3976147	PtrMemberAccess	zobj -> properties		3975643	0					
ANR	3976148	Identifier	zobj		3975643	0					
ANR	3976149	Identifier	properties		3975643	1					
ANR	3976150	Argument	Z_STR_P ( property_name )		3975643	1					
ANR	3976151	CallExpression	Z_STR_P ( property_name )		3975643	0					
ANR	3976152	Callee	Z_STR_P		3975643	0					
ANR	3976153	Identifier	Z_STR_P		3975643	0					
ANR	3976154	ArgumentList	property_name		3975643	1					
ANR	3976155	Argument	property_name		3975643	0					
ANR	3976156	Identifier	property_name		3975643	0					
ANR	3976157	IfStatement	if ( property )		3975643	2					
ANR	3976158	Condition	property	1154:8:38153:38160	3975643	0	True				
ANR	3976159	Identifier	property		3975643	0					
ANR	3976160	CompoundStatement		76:18:2217:2217	3975643	1					
ANR	3976161	GotoStatement	goto fast_assign ;	1155:5:38170:38186	3975643	0	True				
ANR	3976162	Identifier	fast_assign		3975643	0					
ANR	3976163	IfStatement	if ( ! zobj -> ce -> __set )		3975643	1					
ANR	3976164	Condition	! zobj -> ce -> __set	1159:7:38207:38222	3975643	0	True				
ANR	3976165	UnaryOperationExpression	! zobj -> ce -> __set		3975643	0					
ANR	3976166	UnaryOperator	!		3975643	0					
ANR	3976167	PtrMemberAccess	zobj -> ce -> __set		3975643	1					
ANR	3976168	PtrMemberAccess	zobj -> ce		3975643	0					
ANR	3976169	Identifier	zobj		3975643	0					
ANR	3976170	Identifier	ce		3975643	1					
ANR	3976171	Identifier	__set		3975643	1					
ANR	3976172	CompoundStatement		81:25:2279:2279	3975643	1					
ANR	3976173	IfStatement	if ( EXPECTED ( zobj -> properties == NULL ) )		3975643	0					
ANR	3976174	Condition	EXPECTED ( zobj -> properties == NULL )	1161:8:38236:38269	3975643	0	True				
ANR	3976175	CallExpression	EXPECTED ( zobj -> properties == NULL )		3975643	0					
ANR	3976176	Callee	EXPECTED		3975643	0					
ANR	3976177	Identifier	EXPECTED		3975643	0					
ANR	3976178	ArgumentList	zobj -> properties == NULL		3975643	1					
ANR	3976179	Argument	zobj -> properties == NULL		3975643	0					
ANR	3976180	EqualityExpression	zobj -> properties == NULL		3975643	0		==			
ANR	3976181	PtrMemberAccess	zobj -> properties		3975643	0					
ANR	3976182	Identifier	zobj		3975643	0					
ANR	3976183	Identifier	properties		3975643	1					
ANR	3976184	Identifier	NULL		3975643	1					
ANR	3976185	CompoundStatement		83:44:2326:2326	3975643	1					
ANR	3976186	ExpressionStatement	rebuild_object_properties ( zobj )	1162:5:38279:38310	3975643	0	True				
ANR	3976187	CallExpression	rebuild_object_properties ( zobj )		3975643	0					
ANR	3976188	Callee	rebuild_object_properties		3975643	0					
ANR	3976189	Identifier	rebuild_object_properties		3975643	0					
ANR	3976190	ArgumentList	zobj		3975643	1					
ANR	3976191	Argument	zobj		3975643	0					
ANR	3976192	Identifier	zobj		3975643	0					
ANR	3976193	IfStatement	if ( value_type == IS_CONST )		3975643	1					
ANR	3976194	Condition	value_type == IS_CONST	1165:8:38368:38389	3975643	0	True				
ANR	3976195	EqualityExpression	value_type == IS_CONST		3975643	0		==			
ANR	3976196	Identifier	value_type		3975643	0					
ANR	3976197	Identifier	IS_CONST		3975643	1					
ANR	3976198	CompoundStatement		87:32:2446:2446	3975643	1					
ANR	3976199	IfStatement	if ( UNEXPECTED ( Z_OPT_COPYABLE_P ( value ) ) )		3975643	0					
ANR	3976200	Condition	UNEXPECTED ( Z_OPT_COPYABLE_P ( value ) )	1166:9:38403:38437	3975643	0	True				
ANR	3976201	CallExpression	UNEXPECTED ( Z_OPT_COPYABLE_P ( value ) )		3975643	0					
ANR	3976202	Callee	UNEXPECTED		3975643	0					
ANR	3976203	Identifier	UNEXPECTED		3975643	0					
ANR	3976204	ArgumentList	Z_OPT_COPYABLE_P ( value )		3975643	1					
ANR	3976205	Argument	Z_OPT_COPYABLE_P ( value )		3975643	0					
ANR	3976206	CallExpression	Z_OPT_COPYABLE_P ( value )		3975643	0					
ANR	3976207	Callee	Z_OPT_COPYABLE_P		3975643	0					
ANR	3976208	Identifier	Z_OPT_COPYABLE_P		3975643	0					
ANR	3976209	ArgumentList	value		3975643	1					
ANR	3976210	Argument	value		3975643	0					
ANR	3976211	Identifier	value		3975643	0					
ANR	3976212	CompoundStatement		88:46:2494:2494	3975643	1					
ANR	3976213	ExpressionStatement	"ZVAL_COPY_VALUE ( & tmp , value )"	1167:6:38448:38476	3975643	0	True				
ANR	3976214	CallExpression	"ZVAL_COPY_VALUE ( & tmp , value )"		3975643	0					
ANR	3976215	Callee	ZVAL_COPY_VALUE		3975643	0					
ANR	3976216	Identifier	ZVAL_COPY_VALUE		3975643	0					
ANR	3976217	ArgumentList	& tmp		3975643	1					
ANR	3976218	Argument	& tmp		3975643	0					
ANR	3976219	UnaryOperationExpression	& tmp		3975643	0					
ANR	3976220	UnaryOperator	&		3975643	0					
ANR	3976221	Identifier	tmp		3975643	1					
ANR	3976222	Argument	value		3975643	1					
ANR	3976223	Identifier	value		3975643	0					
ANR	3976224	ExpressionStatement	zval_copy_ctor_func ( & tmp )	1168:6:38484:38509	3975643	1	True				
ANR	3976225	CallExpression	zval_copy_ctor_func ( & tmp )		3975643	0					
ANR	3976226	Callee	zval_copy_ctor_func		3975643	0					
ANR	3976227	Identifier	zval_copy_ctor_func		3975643	0					
ANR	3976228	ArgumentList	& tmp		3975643	1					
ANR	3976229	Argument	& tmp		3975643	0					
ANR	3976230	UnaryOperationExpression	& tmp		3975643	0					
ANR	3976231	UnaryOperator	&		3975643	0					
ANR	3976232	Identifier	tmp		3975643	1					
ANR	3976233	ExpressionStatement	value = & tmp	1169:6:38517:38529	3975643	2	True				
ANR	3976234	AssignmentExpression	value = & tmp		3975643	0		=			
ANR	3976235	Identifier	value		3975643	0					
ANR	3976236	UnaryOperationExpression	& tmp		3975643	1					
ANR	3976237	UnaryOperator	&		3975643	0					
ANR	3976238	Identifier	tmp		3975643	1					
ANR	3976239	ElseStatement	else		3975643	0					
ANR	3976240	IfStatement	if ( value_type != IS_TMP_VAR )		3975643	0					
ANR	3976241	Condition	value_type != IS_TMP_VAR	1171:15:38553:38576	3975643	0	True				
ANR	3976242	EqualityExpression	value_type != IS_TMP_VAR		3975643	0		!=			
ANR	3976243	Identifier	value_type		3975643	0					
ANR	3976244	Identifier	IS_TMP_VAR		3975643	1					
ANR	3976245	CompoundStatement		93:41:2633:2633	3975643	1					
ANR	3976246	IfStatement	if ( Z_ISREF_P ( value ) )		3975643	0					
ANR	3976247	Condition	Z_ISREF_P ( value )	1172:9:38590:38605	3975643	0	True				
ANR	3976248	CallExpression	Z_ISREF_P ( value )		3975643	0					
ANR	3976249	Callee	Z_ISREF_P		3975643	0					
ANR	3976250	Identifier	Z_ISREF_P		3975643	0					
ANR	3976251	ArgumentList	value		3975643	1					
ANR	3976252	Argument	value		3975643	0					
ANR	3976253	Identifier	value		3975643	0					
ANR	3976254	CompoundStatement		94:27:2662:2662	3975643	1					
ANR	3976255	IfStatement	if ( value_type == IS_VAR )		3975643	0					
ANR	3976256	Condition	value_type == IS_VAR	1173:10:38620:38639	3975643	0	True				
ANR	3976257	EqualityExpression	value_type == IS_VAR		3975643	0		==			
ANR	3976258	Identifier	value_type		3975643	0					
ANR	3976259	Identifier	IS_VAR		3975643	1					
ANR	3976260	CompoundStatement		96:7:2705:2741	3975643	1					
ANR	3976261	IdentifierDeclStatement	zend_reference * ref = Z_REF_P ( value ) ;	1174:7:38651:38687	3975643	0	True				
ANR	3976262	IdentifierDecl	* ref = Z_REF_P ( value )		3975643	0					
ANR	3976263	IdentifierDeclType	zend_reference *		3975643	0					
ANR	3976264	Identifier	ref		3975643	1					
ANR	3976265	AssignmentExpression	* ref = Z_REF_P ( value )		3975643	2		=			
ANR	3976266	Identifier	ref		3975643	0					
ANR	3976267	CallExpression	Z_REF_P ( value )		3975643	1					
ANR	3976268	Callee	Z_REF_P		3975643	0					
ANR	3976269	Identifier	Z_REF_P		3975643	0					
ANR	3976270	ArgumentList	value		3975643	1					
ANR	3976271	Argument	value		3975643	0					
ANR	3976272	Identifier	value		3975643	0					
ANR	3976273	IfStatement	if ( -- ( GC_REFCOUNT ( ref ) ) == 0 )		3975643	1					
ANR	3976274	Condition	-- ( GC_REFCOUNT ( ref ) ) == 0	1175:11:38700:38724	3975643	0	True				
ANR	3976275	EqualityExpression	-- ( GC_REFCOUNT ( ref ) ) == 0		3975643	0		==			
ANR	3976276	UnaryExpression	-- ( GC_REFCOUNT ( ref ) )		3975643	0					
ANR	3976277	IncDec	--		3975643	0					
ANR	3976278	CallExpression	GC_REFCOUNT ( ref )		3975643	1					
ANR	3976279	Callee	GC_REFCOUNT		3975643	0					
ANR	3976280	Identifier	GC_REFCOUNT		3975643	0					
ANR	3976281	ArgumentList	ref		3975643	1					
ANR	3976282	Argument	ref		3975643	0					
ANR	3976283	Identifier	ref		3975643	0					
ANR	3976284	PrimaryExpression	0		3975643	1					
ANR	3976285	CompoundStatement		97:38:2781:2781	3975643	1					
ANR	3976286	ExpressionStatement	"ZVAL_COPY_VALUE ( & tmp , Z_REFVAL_P ( value ) )"	1176:8:38737:38777	3975643	0	True				
ANR	3976287	CallExpression	"ZVAL_COPY_VALUE ( & tmp , Z_REFVAL_P ( value ) )"		3975643	0					
ANR	3976288	Callee	ZVAL_COPY_VALUE		3975643	0					
ANR	3976289	Identifier	ZVAL_COPY_VALUE		3975643	0					
ANR	3976290	ArgumentList	& tmp		3975643	1					
ANR	3976291	Argument	& tmp		3975643	0					
ANR	3976292	UnaryOperationExpression	& tmp		3975643	0					
ANR	3976293	UnaryOperator	&		3975643	0					
ANR	3976294	Identifier	tmp		3975643	1					
ANR	3976295	Argument	Z_REFVAL_P ( value )		3975643	1					
ANR	3976296	CallExpression	Z_REFVAL_P ( value )		3975643	0					
ANR	3976297	Callee	Z_REFVAL_P		3975643	0					
ANR	3976298	Identifier	Z_REFVAL_P		3975643	0					
ANR	3976299	ArgumentList	value		3975643	1					
ANR	3976300	Argument	value		3975643	0					
ANR	3976301	Identifier	value		3975643	0					
ANR	3976302	ExpressionStatement	"efree_size ( ref , sizeof ( zend_reference ) )"	1177:8:38787:38826	3975643	1	True				
ANR	3976303	CallExpression	"efree_size ( ref , sizeof ( zend_reference ) )"		3975643	0					
ANR	3976304	Callee	efree_size		3975643	0					
ANR	3976305	Identifier	efree_size		3975643	0					
ANR	3976306	ArgumentList	ref		3975643	1					
ANR	3976307	Argument	ref		3975643	0					
ANR	3976308	Identifier	ref		3975643	0					
ANR	3976309	Argument	sizeof ( zend_reference )		3975643	1					
ANR	3976310	SizeofExpression	sizeof ( zend_reference )		3975643	0					
ANR	3976311	Sizeof	sizeof		3975643	0					
ANR	3976312	SizeofOperand	zend_reference		3975643	1					
ANR	3976313	ExpressionStatement	value = & tmp	1178:8:38836:38848	3975643	2	True				
ANR	3976314	AssignmentExpression	value = & tmp		3975643	0		=			
ANR	3976315	Identifier	value		3975643	0					
ANR	3976316	UnaryOperationExpression	& tmp		3975643	1					
ANR	3976317	UnaryOperator	&		3975643	0					
ANR	3976318	Identifier	tmp		3975643	1					
ANR	3976319	ElseStatement	else		3975643	0					
ANR	3976320	CompoundStatement		101:14:2918:2918	3975643	0					
ANR	3976321	ExpressionStatement	value = Z_REFVAL_P ( value )	1180:8:38874:38899	3975643	0	True				
ANR	3976322	AssignmentExpression	value = Z_REFVAL_P ( value )		3975643	0		=			
ANR	3976323	Identifier	value		3975643	0					
ANR	3976324	CallExpression	Z_REFVAL_P ( value )		3975643	1					
ANR	3976325	Callee	Z_REFVAL_P		3975643	0					
ANR	3976326	Identifier	Z_REFVAL_P		3975643	0					
ANR	3976327	ArgumentList	value		3975643	1					
ANR	3976328	Argument	value		3975643	0					
ANR	3976329	Identifier	value		3975643	0					
ANR	3976330	IfStatement	if ( Z_REFCOUNTED_P ( value ) )		3975643	1					
ANR	3976331	Condition	Z_REFCOUNTED_P ( value )	1181:12:38913:38933	3975643	0	True				
ANR	3976332	CallExpression	Z_REFCOUNTED_P ( value )		3975643	0					
ANR	3976333	Callee	Z_REFCOUNTED_P		3975643	0					
ANR	3976334	Identifier	Z_REFCOUNTED_P		3975643	0					
ANR	3976335	ArgumentList	value		3975643	1					
ANR	3976336	Argument	value		3975643	0					
ANR	3976337	Identifier	value		3975643	0					
ANR	3976338	CompoundStatement		103:35:2990:2990	3975643	1					
ANR	3976339	ExpressionStatement	Z_ADDREF_P ( value )	1182:9:38947:38964	3975643	0	True				
ANR	3976340	CallExpression	Z_ADDREF_P ( value )		3975643	0					
ANR	3976341	Callee	Z_ADDREF_P		3975643	0					
ANR	3976342	Identifier	Z_ADDREF_P		3975643	0					
ANR	3976343	ArgumentList	value		3975643	1					
ANR	3976344	Argument	value		3975643	0					
ANR	3976345	Identifier	value		3975643	0					
ANR	3976346	ElseStatement	else		3975643	0					
ANR	3976347	CompoundStatement		107:13:3052:3052	3975643	0					
ANR	3976348	ExpressionStatement	value = Z_REFVAL_P ( value )	1186:7:39007:39032	3975643	0	True				
ANR	3976349	AssignmentExpression	value = Z_REFVAL_P ( value )		3975643	0		=			
ANR	3976350	Identifier	value		3975643	0					
ANR	3976351	CallExpression	Z_REFVAL_P ( value )		3975643	1					
ANR	3976352	Callee	Z_REFVAL_P		3975643	0					
ANR	3976353	Identifier	Z_REFVAL_P		3975643	0					
ANR	3976354	ArgumentList	value		3975643	1					
ANR	3976355	Argument	value		3975643	0					
ANR	3976356	Identifier	value		3975643	0					
ANR	3976357	IfStatement	if ( Z_REFCOUNTED_P ( value ) )		3975643	1					
ANR	3976358	Condition	Z_REFCOUNTED_P ( value )	1187:11:39045:39065	3975643	0	True				
ANR	3976359	CallExpression	Z_REFCOUNTED_P ( value )		3975643	0					
ANR	3976360	Callee	Z_REFCOUNTED_P		3975643	0					
ANR	3976361	Identifier	Z_REFCOUNTED_P		3975643	0					
ANR	3976362	ArgumentList	value		3975643	1					
ANR	3976363	Argument	value		3975643	0					
ANR	3976364	Identifier	value		3975643	0					
ANR	3976365	CompoundStatement		109:34:3122:3122	3975643	1					
ANR	3976366	ExpressionStatement	Z_ADDREF_P ( value )	1188:8:39078:39095	3975643	0	True				
ANR	3976367	CallExpression	Z_ADDREF_P ( value )		3975643	0					
ANR	3976368	Callee	Z_ADDREF_P		3975643	0					
ANR	3976369	Identifier	Z_ADDREF_P		3975643	0					
ANR	3976370	ArgumentList	value		3975643	1					
ANR	3976371	Argument	value		3975643	0					
ANR	3976372	Identifier	value		3975643	0					
ANR	3976373	ElseStatement	else		3975643	0					
ANR	3976374	IfStatement	if ( value_type == IS_CV && Z_REFCOUNTED_P ( value ) )		3975643	0					
ANR	3976375	Condition	value_type == IS_CV && Z_REFCOUNTED_P ( value )	1191:16:39130:39173	3975643	0	True				
ANR	3976376	AndExpression	value_type == IS_CV && Z_REFCOUNTED_P ( value )		3975643	0		&&			
ANR	3976377	EqualityExpression	value_type == IS_CV		3975643	0		==			
ANR	3976378	Identifier	value_type		3975643	0					
ANR	3976379	Identifier	IS_CV		3975643	1					
ANR	3976380	CallExpression	Z_REFCOUNTED_P ( value )		3975643	1					
ANR	3976381	Callee	Z_REFCOUNTED_P		3975643	0					
ANR	3976382	Identifier	Z_REFCOUNTED_P		3975643	0					
ANR	3976383	ArgumentList	value		3975643	1					
ANR	3976384	Argument	value		3975643	0					
ANR	3976385	Identifier	value		3975643	0					
ANR	3976386	CompoundStatement		113:62:3230:3230	3975643	1					
ANR	3976387	ExpressionStatement	Z_ADDREF_P ( value )	1192:6:39184:39201	3975643	0	True				
ANR	3976388	CallExpression	Z_ADDREF_P ( value )		3975643	0					
ANR	3976389	Callee	Z_ADDREF_P		3975643	0					
ANR	3976390	Identifier	Z_ADDREF_P		3975643	0					
ANR	3976391	ArgumentList	value		3975643	1					
ANR	3976392	Argument	value		3975643	0					
ANR	3976393	Identifier	value		3975643	0					
ANR	3976394	ExpressionStatement	"zend_hash_add_new ( zobj -> properties , Z_STR_P ( property_name ) , value )"	1195:4:39220:39286	3975643	2	True				
ANR	3976395	CallExpression	"zend_hash_add_new ( zobj -> properties , Z_STR_P ( property_name ) , value )"		3975643	0					
ANR	3976396	Callee	zend_hash_add_new		3975643	0					
ANR	3976397	Identifier	zend_hash_add_new		3975643	0					
ANR	3976398	ArgumentList	zobj -> properties		3975643	1					
ANR	3976399	Argument	zobj -> properties		3975643	0					
ANR	3976400	PtrMemberAccess	zobj -> properties		3975643	0					
ANR	3976401	Identifier	zobj		3975643	0					
ANR	3976402	Identifier	properties		3975643	1					
ANR	3976403	Argument	Z_STR_P ( property_name )		3975643	1					
ANR	3976404	CallExpression	Z_STR_P ( property_name )		3975643	0					
ANR	3976405	Callee	Z_STR_P		3975643	0					
ANR	3976406	Identifier	Z_STR_P		3975643	0					
ANR	3976407	ArgumentList	property_name		3975643	1					
ANR	3976408	Argument	property_name		3975643	0					
ANR	3976409	Identifier	property_name		3975643	0					
ANR	3976410	Argument	value		3975643	2					
ANR	3976411	Identifier	value		3975643	0					
ANR	3976412	IfStatement	if ( retval )		3975643	3					
ANR	3976413	Condition	retval	1196:8:39296:39301	3975643	0	True				
ANR	3976414	Identifier	retval		3975643	0					
ANR	3976415	CompoundStatement		118:16:3358:3358	3975643	1					
ANR	3976416	ExpressionStatement	"ZVAL_COPY ( retval , value )"	1197:5:39311:39335	3975643	0	True				
ANR	3976417	CallExpression	"ZVAL_COPY ( retval , value )"		3975643	0					
ANR	3976418	Callee	ZVAL_COPY		3975643	0					
ANR	3976419	Identifier	ZVAL_COPY		3975643	0					
ANR	3976420	ArgumentList	retval		3975643	1					
ANR	3976421	Argument	retval		3975643	0					
ANR	3976422	Identifier	retval		3975643	0					
ANR	3976423	Argument	value		3975643	1					
ANR	3976424	Identifier	value		3975643	0					
ANR	3976425	ReturnStatement	return ;	1199:4:39347:39353	3975643	4	True				
ANR	3976426	IfStatement	if ( ! Z_OBJ_HT_P ( object ) -> write_property )		3975643	5					
ANR	3976427	Condition	! Z_OBJ_HT_P ( object ) -> write_property	1204:5:39376:39410	3975643	0	True				
ANR	3976428	UnaryOperationExpression	! Z_OBJ_HT_P ( object ) -> write_property		3975643	0					
ANR	3976429	UnaryOperator	!		3975643	0					
ANR	3976430	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> write_property		3975643	1					
ANR	3976431	CallExpression	Z_OBJ_HT_P ( object )		3975643	0					
ANR	3976432	Callee	Z_OBJ_HT_P		3975643	0					
ANR	3976433	Identifier	Z_OBJ_HT_P		3975643	0					
ANR	3976434	ArgumentList	object		3975643	1					
ANR	3976435	Argument	object		3975643	0					
ANR	3976436	Identifier	object		3975643	0					
ANR	3976437	Identifier	write_property		3975643	1					
ANR	3976438	CompoundStatement		126:42:3467:3467	3975643	1					
ANR	3976439	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	1205:2:39417:39482	3975643	0	True				
ANR	3976440	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		3975643	0					
ANR	3976441	Callee	zend_error		3975643	0					
ANR	3976442	Identifier	zend_error		3975643	0					
ANR	3976443	ArgumentList	E_WARNING		3975643	1					
ANR	3976444	Argument	E_WARNING		3975643	0					
ANR	3976445	Identifier	E_WARNING		3975643	0					
ANR	3976446	Argument	"""Attempt to assign property of non-object"""		3975643	1					
ANR	3976447	PrimaryExpression	"""Attempt to assign property of non-object"""		3975643	0					
ANR	3976448	IfStatement	if ( retval )		3975643	1					
ANR	3976449	Condition	retval	1206:6:39490:39495	3975643	0	True				
ANR	3976450	Identifier	retval		3975643	0					
ANR	3976451	CompoundStatement		128:14:3552:3552	3975643	1					
ANR	3976452	ExpressionStatement	ZVAL_NULL ( retval )	1207:3:39503:39520	3975643	0	True				
ANR	3976453	CallExpression	ZVAL_NULL ( retval )		3975643	0					
ANR	3976454	Callee	ZVAL_NULL		3975643	0					
ANR	3976455	Identifier	ZVAL_NULL		3975643	0					
ANR	3976456	ArgumentList	retval		3975643	1					
ANR	3976457	Argument	retval		3975643	0					
ANR	3976458	Identifier	retval		3975643	0					
ANR	3976459	ExpressionStatement	FREE_OP ( free_value )	1209:2:39528:39547	3975643	2	True				
ANR	3976460	CallExpression	FREE_OP ( free_value )		3975643	0					
ANR	3976461	Callee	FREE_OP		3975643	0					
ANR	3976462	Identifier	FREE_OP		3975643	0					
ANR	3976463	ArgumentList	free_value		3975643	1					
ANR	3976464	Argument	free_value		3975643	0					
ANR	3976465	Identifier	free_value		3975643	0					
ANR	3976466	ReturnStatement	return ;	1210:2:39551:39557	3975643	3	True				
ANR	3976467	IfStatement	if ( value_type == IS_CONST )		3975643	6					
ANR	3976468	Condition	value_type == IS_CONST	1214:5:39607:39628	3975643	0	True				
ANR	3976469	EqualityExpression	value_type == IS_CONST		3975643	0		==			
ANR	3976470	Identifier	value_type		3975643	0					
ANR	3976471	Identifier	IS_CONST		3975643	1					
ANR	3976472	CompoundStatement		136:29:3685:3685	3975643	1					
ANR	3976473	IfStatement	if ( UNEXPECTED ( Z_OPT_COPYABLE_P ( value ) ) )		3975643	0					
ANR	3976474	Condition	UNEXPECTED ( Z_OPT_COPYABLE_P ( value ) )	1215:6:39639:39673	3975643	0	True				
ANR	3976475	CallExpression	UNEXPECTED ( Z_OPT_COPYABLE_P ( value ) )		3975643	0					
ANR	3976476	Callee	UNEXPECTED		3975643	0					
ANR	3976477	Identifier	UNEXPECTED		3975643	0					
ANR	3976478	ArgumentList	Z_OPT_COPYABLE_P ( value )		3975643	1					
ANR	3976479	Argument	Z_OPT_COPYABLE_P ( value )		3975643	0					
ANR	3976480	CallExpression	Z_OPT_COPYABLE_P ( value )		3975643	0					
ANR	3976481	Callee	Z_OPT_COPYABLE_P		3975643	0					
ANR	3976482	Identifier	Z_OPT_COPYABLE_P		3975643	0					
ANR	3976483	ArgumentList	value		3975643	1					
ANR	3976484	Argument	value		3975643	0					
ANR	3976485	Identifier	value		3975643	0					
ANR	3976486	CompoundStatement		137:43:3730:3730	3975643	1					
ANR	3976487	ExpressionStatement	"ZVAL_COPY_VALUE ( & tmp , value )"	1216:3:39681:39709	3975643	0	True				
ANR	3976488	CallExpression	"ZVAL_COPY_VALUE ( & tmp , value )"		3975643	0					
ANR	3976489	Callee	ZVAL_COPY_VALUE		3975643	0					
ANR	3976490	Identifier	ZVAL_COPY_VALUE		3975643	0					
ANR	3976491	ArgumentList	& tmp		3975643	1					
ANR	3976492	Argument	& tmp		3975643	0					
ANR	3976493	UnaryOperationExpression	& tmp		3975643	0					
ANR	3976494	UnaryOperator	&		3975643	0					
ANR	3976495	Identifier	tmp		3975643	1					
ANR	3976496	Argument	value		3975643	1					
ANR	3976497	Identifier	value		3975643	0					
ANR	3976498	ExpressionStatement	zval_copy_ctor_func ( & tmp )	1217:3:39714:39739	3975643	1	True				
ANR	3976499	CallExpression	zval_copy_ctor_func ( & tmp )		3975643	0					
ANR	3976500	Callee	zval_copy_ctor_func		3975643	0					
ANR	3976501	Identifier	zval_copy_ctor_func		3975643	0					
ANR	3976502	ArgumentList	& tmp		3975643	1					
ANR	3976503	Argument	& tmp		3975643	0					
ANR	3976504	UnaryOperationExpression	& tmp		3975643	0					
ANR	3976505	UnaryOperator	&		3975643	0					
ANR	3976506	Identifier	tmp		3975643	1					
ANR	3976507	ExpressionStatement	value = & tmp	1218:3:39744:39756	3975643	2	True				
ANR	3976508	AssignmentExpression	value = & tmp		3975643	0		=			
ANR	3976509	Identifier	value		3975643	0					
ANR	3976510	UnaryOperationExpression	& tmp		3975643	1					
ANR	3976511	UnaryOperator	&		3975643	0					
ANR	3976512	Identifier	tmp		3975643	1					
ANR	3976513	ElseStatement	else		3975643	0					
ANR	3976514	IfStatement	if ( value_type != IS_TMP_VAR )		3975643	0					
ANR	3976515	Condition	value_type != IS_TMP_VAR	1220:12:39774:39797	3975643	0	True				
ANR	3976516	EqualityExpression	value_type != IS_TMP_VAR		3975643	0		!=			
ANR	3976517	Identifier	value_type		3975643	0					
ANR	3976518	Identifier	IS_TMP_VAR		3975643	1					
ANR	3976519	CompoundStatement		142:38:3854:3854	3975643	1					
ANR	3976520	ExpressionStatement	ZVAL_DEREF ( value )	1221:2:39804:39821	3975643	0	True				
ANR	3976521	CallExpression	ZVAL_DEREF ( value )		3975643	0					
ANR	3976522	Callee	ZVAL_DEREF		3975643	0					
ANR	3976523	Identifier	ZVAL_DEREF		3975643	0					
ANR	3976524	ArgumentList	value		3975643	1					
ANR	3976525	Argument	value		3975643	0					
ANR	3976526	Identifier	value		3975643	0					
ANR	3976527	ExpressionStatement	"Z_OBJ_HT_P ( object ) -> write_property ( object , property_name , value , cache_slot )"	1224:1:39828:39904	3975643	7	True				
ANR	3976528	CallExpression	"Z_OBJ_HT_P ( object ) -> write_property ( object , property_name , value , cache_slot )"		3975643	0					
ANR	3976529	Callee	Z_OBJ_HT_P ( object ) -> write_property		3975643	0					
ANR	3976530	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> write_property		3975643	0					
ANR	3976531	CallExpression	Z_OBJ_HT_P ( object )		3975643	0					
ANR	3976532	Callee	Z_OBJ_HT_P		3975643	0					
ANR	3976533	Identifier	Z_OBJ_HT_P		3975643	0					
ANR	3976534	ArgumentList	object		3975643	1					
ANR	3976535	Argument	object		3975643	0					
ANR	3976536	Identifier	object		3975643	0					
ANR	3976537	Identifier	write_property		3975643	1					
ANR	3976538	ArgumentList	object		3975643	1					
ANR	3976539	Argument	object		3975643	0					
ANR	3976540	Identifier	object		3975643	0					
ANR	3976541	Argument	property_name		3975643	1					
ANR	3976542	Identifier	property_name		3975643	0					
ANR	3976543	Argument	value		3975643	2					
ANR	3976544	Identifier	value		3975643	0					
ANR	3976545	Argument	cache_slot		3975643	3					
ANR	3976546	Identifier	cache_slot		3975643	0					
ANR	3976547	IfStatement	if ( retval && EXPECTED ( ! EG ( exception ) ) )		3975643	8					
ANR	3976548	Condition	retval && EXPECTED ( ! EG ( exception ) )	1226:5:39912:39945	3975643	0	True				
ANR	3976549	AndExpression	retval && EXPECTED ( ! EG ( exception ) )		3975643	0		&&			
ANR	3976550	Identifier	retval		3975643	0					
ANR	3976551	CallExpression	EXPECTED ( ! EG ( exception ) )		3975643	1					
ANR	3976552	Callee	EXPECTED		3975643	0					
ANR	3976553	Identifier	EXPECTED		3975643	0					
ANR	3976554	ArgumentList	! EG ( exception )		3975643	1					
ANR	3976555	Argument	! EG ( exception )		3975643	0					
ANR	3976556	UnaryOperationExpression	! EG ( exception )		3975643	0					
ANR	3976557	UnaryOperator	!		3975643	0					
ANR	3976558	CallExpression	EG ( exception )		3975643	1					
ANR	3976559	Callee	EG		3975643	0					
ANR	3976560	Identifier	EG		3975643	0					
ANR	3976561	ArgumentList	exception		3975643	1					
ANR	3976562	Argument	exception		3975643	0					
ANR	3976563	Identifier	exception		3975643	0					
ANR	3976564	CompoundStatement		148:41:4002:4002	3975643	1					
ANR	3976565	ExpressionStatement	"ZVAL_COPY ( retval , value )"	1227:2:39952:39976	3975643	0	True				
ANR	3976566	CallExpression	"ZVAL_COPY ( retval , value )"		3975643	0					
ANR	3976567	Callee	ZVAL_COPY		3975643	0					
ANR	3976568	Identifier	ZVAL_COPY		3975643	0					
ANR	3976569	ArgumentList	retval		3975643	1					
ANR	3976570	Argument	retval		3975643	0					
ANR	3976571	Identifier	retval		3975643	0					
ANR	3976572	Argument	value		3975643	1					
ANR	3976573	Identifier	value		3975643	0					
ANR	3976574	IfStatement	if ( value_type == IS_CONST )		3975643	9					
ANR	3976575	Condition	value_type == IS_CONST	1229:5:39986:40007	3975643	0	True				
ANR	3976576	EqualityExpression	value_type == IS_CONST		3975643	0		==			
ANR	3976577	Identifier	value_type		3975643	0					
ANR	3976578	Identifier	IS_CONST		3975643	1					
ANR	3976579	CompoundStatement		151:29:4064:4064	3975643	1					
ANR	3976580	ExpressionStatement	zval_ptr_dtor_nogc ( value )	1230:2:40014:40039	3975643	0	True				
ANR	3976581	CallExpression	zval_ptr_dtor_nogc ( value )		3975643	0					
ANR	3976582	Callee	zval_ptr_dtor_nogc		3975643	0					
ANR	3976583	Identifier	zval_ptr_dtor_nogc		3975643	0					
ANR	3976584	ArgumentList	value		3975643	1					
ANR	3976585	Argument	value		3975643	0					
ANR	3976586	Identifier	value		3975643	0					
ANR	3976587	ElseStatement	else		3975643	0					
ANR	3976588	CompoundStatement		153:8:4103:4103	3975643	0					
ANR	3976589	ExpressionStatement	FREE_OP ( free_value )	1232:2:40053:40072	3975643	0	True				
ANR	3976590	CallExpression	FREE_OP ( free_value )		3975643	0					
ANR	3976591	Callee	FREE_OP		3975643	0					
ANR	3976592	Identifier	FREE_OP		3975643	0					
ANR	3976593	ArgumentList	free_value		3975643	1					
ANR	3976594	Argument	free_value		3975643	0					
ANR	3976595	Identifier	free_value		3975643	0					
ANR	3976596	ReturnType	static zend_always_inline void		3975643	1					
ANR	3976597	Identifier	zend_assign_to_object		3975643	2					
ANR	3976598	ParameterList	"zval * retval , zval * object , uint32_t object_op_type , zval * property_name , uint32_t property_op_type , int value_type , znode_op value_op , const zend_execute_data * execute_data , void * * cache_slot"		3975643	3					
ANR	3976599	Parameter	zval * retval	1078:53:35751:35762	3975643	0	True				
ANR	3976600	ParameterType	zval *		3975643	0					
ANR	3976601	Identifier	retval		3975643	1					
ANR	3976602	Parameter	zval * object	1078:67:35765:35776	3975643	1	True				
ANR	3976603	ParameterType	zval *		3975643	0					
ANR	3976604	Identifier	object		3975643	1					
ANR	3976605	Parameter	uint32_t object_op_type	1078:81:35779:35801	3975643	2	True				
ANR	3976606	ParameterType	uint32_t		3975643	0					
ANR	3976607	Identifier	object_op_type		3975643	1					
ANR	3976608	Parameter	zval * property_name	1078:106:35804:35822	3975643	3	True				
ANR	3976609	ParameterType	zval *		3975643	0					
ANR	3976610	Identifier	property_name		3975643	1					
ANR	3976611	Parameter	uint32_t property_op_type	1078:127:35825:35849	3975643	4	True				
ANR	3976612	ParameterType	uint32_t		3975643	0					
ANR	3976613	Identifier	property_op_type		3975643	1					
ANR	3976614	Parameter	int value_type	1078:154:35852:35865	3975643	5	True				
ANR	3976615	ParameterType	int		3975643	0					
ANR	3976616	Identifier	value_type		3975643	1					
ANR	3976617	Parameter	znode_op value_op	1078:170:35868:35884	3975643	6	True				
ANR	3976618	ParameterType	znode_op		3975643	0					
ANR	3976619	Identifier	value_op		3975643	1					
ANR	3976620	Parameter	const zend_execute_data * execute_data	1078:189:35887:35923	3975643	7	True				
ANR	3976621	ParameterType	const zend_execute_data *		3975643	0					
ANR	3976622	Identifier	execute_data		3975643	1					
ANR	3976623	Parameter	void * * cache_slot	1078:228:35926:35942	3975643	8	True				
ANR	3976624	ParameterType	void * *		3975643	0					
ANR	3976625	Identifier	cache_slot		3975643	1					
ANR	3976626	CFGEntryNode	ENTRY		3975643		True				
ANR	3976627	CFGExitNode	EXIT		3975643		True				
ANR	3976628	Symbol	exception		3975643						
ANR	3976629	Symbol	value_type		3975643						
ANR	3976630	Symbol	IS_CV		3975643						
ANR	3976631	Symbol	zobj		3975643						
ANR	3976632	Symbol	GC_FLAGS		3975643						
ANR	3976633	Symbol	ZEND_DYNAMIC_PROPERTY_OFFSET		3975643						
ANR	3976634	Symbol	execute_data		3975643						
ANR	3976635	Symbol	property_name		3975643						
ANR	3976636	Symbol	zend_hash_find		3975643						
ANR	3976637	Symbol	ref		3975643						
ANR	3976638	Symbol	tmp		3975643						
ANR	3976639	Symbol	property		3975643						
ANR	3976640	Symbol	IS_STRING		3975643						
ANR	3976641	Symbol	value_op		3975643						
ANR	3976642	Symbol	IS_UNDEF		3975643						
ANR	3976643	Symbol	zend_array_dup		3975643						
ANR	3976644	Symbol	IS_TMP_VAR		3975643						
ANR	3976645	Symbol	object_op_type		3975643						
ANR	3976646	Symbol	cache_slot		3975643						
ANR	3976647	Symbol	Z_OPT_COPYABLE_P		3975643						
ANR	3976648	Symbol	IS_CONST		3975643						
ANR	3976649	Symbol	EG		3975643						
ANR	3976650	Symbol	Z_OBJ_HT_P ( object ) -> write_property		3975643						
ANR	3976651	Symbol	NULL		3975643						
ANR	3976652	Symbol	zobj -> ce -> __set		3975643						
ANR	3976653	Symbol	* Z_OBJ_HT_P		3975643						
ANR	3976654	Symbol	retval		3975643						
ANR	3976655	Symbol	OBJ_PROP		3975643						
ANR	3976656	Symbol	error_zval		3975643						
ANR	3976657	Symbol	Z_OBJ_HT_P		3975643						
ANR	3976658	Symbol	& tmp		3975643						
ANR	3976659	Symbol	Z_STR_P		3975643						
ANR	3976660	Symbol	Z_REFCOUNTED_P		3975643						
ANR	3976661	Symbol	IS_VAR		3975643						
ANR	3976662	Symbol	& free_value		3975643						
ANR	3976663	Symbol	Z_ISREF_P		3975643						
ANR	3976664	Symbol	object		3975643						
ANR	3976665	Symbol	Z_OBJ_P		3975643						
ANR	3976666	Symbol	* * zobj		3975643						
ANR	3976667	Symbol	zend_assign_to_variable		3975643						
ANR	3976668	Symbol	& EG		3975643						
ANR	3976669	Symbol	UNEXPECTED		3975643						
ANR	3976670	Symbol	E_WARNING		3975643						
ANR	3976671	Symbol	get_zval_ptr_r		3975643						
ANR	3976672	Symbol	* zobj		3975643						
ANR	3976673	Symbol	zobj -> properties		3975643						
ANR	3976674	Symbol	Z_OBJCE_P		3975643						
ANR	3976675	Symbol	Z_STRLEN_P		3975643						
ANR	3976676	Symbol	value		3975643						
ANR	3976677	Symbol	GC_REFCOUNT		3975643						
ANR	3976678	Symbol	IS_FALSE		3975643						
ANR	3976679	Symbol	CACHED_PTR_EX		3975643						
ANR	3976680	Symbol	* zobj -> ce		3975643						
ANR	3976681	Symbol	property_op_type		3975643						
ANR	3976682	Symbol	IS_ARRAY_IMMUTABLE		3975643						
ANR	3976683	Symbol	zobj -> ce		3975643						
ANR	3976684	Symbol	Z_TYPE_P		3975643						
ANR	3976685	Symbol	Z_REF_P		3975643						
ANR	3976686	Symbol	free_value		3975643						
ANR	3976687	Symbol	obj		3975643						
ANR	3976688	Symbol	prop_offset		3975643						
ANR	3976689	Symbol	Z_REFVAL_P		3975643						
ANR	3976690	Symbol	IS_OBJECT		3975643						
ANR	3976691	Symbol	EXPECTED		3975643						
ANR	3976692	Symbol	IS_UNUSED		3975643						
ANR	3976693	Function	zend_assign_to_object_dim	1236:0:40080:41043							
ANR	3976694	FunctionDef	"zend_assign_to_object_dim (zval * retval , zval * object , zval * property_name , int value_type , znode_op value_op , const zend_execute_data * execute_data)"		3976693	0					
ANR	3976695	CompoundStatement		1237:0:40259:41043	3976693	0					
ANR	3976696	IdentifierDeclStatement	zend_free_op free_value ;	1238:1:40262:40285	3976693	0	True				
ANR	3976697	IdentifierDecl	free_value		3976693	0					
ANR	3976698	IdentifierDeclType	zend_free_op		3976693	0					
ANR	3976699	Identifier	free_value		3976693	1					
ANR	3976700	IdentifierDeclStatement	"zval * value = get_zval_ptr_deref ( value_type , value_op , execute_data , & free_value , BP_VAR_R ) ;"	1239:2:40289:40380	3976693	1	True				
ANR	3976701	IdentifierDecl	"* value = get_zval_ptr_deref ( value_type , value_op , execute_data , & free_value , BP_VAR_R )"		3976693	0					
ANR	3976702	IdentifierDeclType	zval *		3976693	0					
ANR	3976703	Identifier	value		3976693	1					
ANR	3976704	AssignmentExpression	"* value = get_zval_ptr_deref ( value_type , value_op , execute_data , & free_value , BP_VAR_R )"		3976693	2		=			
ANR	3976705	Identifier	value		3976693	0					
ANR	3976706	CallExpression	"get_zval_ptr_deref ( value_type , value_op , execute_data , & free_value , BP_VAR_R )"		3976693	1					
ANR	3976707	Callee	get_zval_ptr_deref		3976693	0					
ANR	3976708	Identifier	get_zval_ptr_deref		3976693	0					
ANR	3976709	ArgumentList	value_type		3976693	1					
ANR	3976710	Argument	value_type		3976693	0					
ANR	3976711	Identifier	value_type		3976693	0					
ANR	3976712	Argument	value_op		3976693	1					
ANR	3976713	Identifier	value_op		3976693	0					
ANR	3976714	Argument	execute_data		3976693	2					
ANR	3976715	Identifier	execute_data		3976693	0					
ANR	3976716	Argument	& free_value		3976693	3					
ANR	3976717	UnaryOperationExpression	& free_value		3976693	0					
ANR	3976718	UnaryOperator	&		3976693	0					
ANR	3976719	Identifier	free_value		3976693	1					
ANR	3976720	Argument	BP_VAR_R		3976693	4					
ANR	3976721	Identifier	BP_VAR_R		3976693	0					
ANR	3976722	IdentifierDeclStatement	zval tmp ;	1240:2:40384:40392	3976693	2	True				
ANR	3976723	IdentifierDecl	tmp		3976693	0					
ANR	3976724	IdentifierDeclType	zval		3976693	0					
ANR	3976725	Identifier	tmp		3976693	1					
ANR	3976726	IfStatement	if ( ! Z_OBJ_HT_P ( object ) -> write_dimension )		3976693	3					
ANR	3976727	Condition	! Z_OBJ_HT_P ( object ) -> write_dimension	1243:5:40468:40503	3976693	0	True				
ANR	3976728	UnaryOperationExpression	! Z_OBJ_HT_P ( object ) -> write_dimension		3976693	0					
ANR	3976729	UnaryOperator	!		3976693	0					
ANR	3976730	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> write_dimension		3976693	1					
ANR	3976731	CallExpression	Z_OBJ_HT_P ( object )		3976693	0					
ANR	3976732	Callee	Z_OBJ_HT_P		3976693	0					
ANR	3976733	Identifier	Z_OBJ_HT_P		3976693	0					
ANR	3976734	ArgumentList	object		3976693	1					
ANR	3976735	Argument	object		3976693	0					
ANR	3976736	Identifier	object		3976693	0					
ANR	3976737	Identifier	write_dimension		3976693	1					
ANR	3976738	CompoundStatement		7:43:246:246	3976693	1					
ANR	3976739	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use object as array"" )"	1244:2:40510:40562	3976693	0	True				
ANR	3976740	CallExpression	"zend_throw_error ( NULL , ""Cannot use object as array"" )"		3976693	0					
ANR	3976741	Callee	zend_throw_error		3976693	0					
ANR	3976742	Identifier	zend_throw_error		3976693	0					
ANR	3976743	ArgumentList	NULL		3976693	1					
ANR	3976744	Argument	NULL		3976693	0					
ANR	3976745	Identifier	NULL		3976693	0					
ANR	3976746	Argument	"""Cannot use object as array"""		3976693	1					
ANR	3976747	PrimaryExpression	"""Cannot use object as array"""		3976693	0					
ANR	3976748	ExpressionStatement	FREE_OP ( free_value )	1245:2:40566:40585	3976693	1	True				
ANR	3976749	CallExpression	FREE_OP ( free_value )		3976693	0					
ANR	3976750	Callee	FREE_OP		3976693	0					
ANR	3976751	Identifier	FREE_OP		3976693	0					
ANR	3976752	ArgumentList	free_value		3976693	1					
ANR	3976753	Argument	free_value		3976693	0					
ANR	3976754	Identifier	free_value		3976693	0					
ANR	3976755	ReturnStatement	return ;	1246:2:40589:40595	3976693	2	True				
ANR	3976756	IfStatement	if ( value_type == IS_CONST )		3976693	4					
ANR	3976757	Condition	value_type == IS_CONST	1250:5:40645:40666	3976693	0	True				
ANR	3976758	EqualityExpression	value_type == IS_CONST		3976693	0		==			
ANR	3976759	Identifier	value_type		3976693	0					
ANR	3976760	Identifier	IS_CONST		3976693	1					
ANR	3976761	CompoundStatement		14:29:409:409	3976693	1					
ANR	3976762	IfStatement	if ( UNEXPECTED ( Z_OPT_COPYABLE_P ( value ) ) )		3976693	0					
ANR	3976763	Condition	UNEXPECTED ( Z_OPT_COPYABLE_P ( value ) )	1251:6:40677:40711	3976693	0	True				
ANR	3976764	CallExpression	UNEXPECTED ( Z_OPT_COPYABLE_P ( value ) )		3976693	0					
ANR	3976765	Callee	UNEXPECTED		3976693	0					
ANR	3976766	Identifier	UNEXPECTED		3976693	0					
ANR	3976767	ArgumentList	Z_OPT_COPYABLE_P ( value )		3976693	1					
ANR	3976768	Argument	Z_OPT_COPYABLE_P ( value )		3976693	0					
ANR	3976769	CallExpression	Z_OPT_COPYABLE_P ( value )		3976693	0					
ANR	3976770	Callee	Z_OPT_COPYABLE_P		3976693	0					
ANR	3976771	Identifier	Z_OPT_COPYABLE_P		3976693	0					
ANR	3976772	ArgumentList	value		3976693	1					
ANR	3976773	Argument	value		3976693	0					
ANR	3976774	Identifier	value		3976693	0					
ANR	3976775	CompoundStatement		15:43:454:454	3976693	1					
ANR	3976776	ExpressionStatement	"ZVAL_COPY_VALUE ( & tmp , value )"	1252:3:40719:40747	3976693	0	True				
ANR	3976777	CallExpression	"ZVAL_COPY_VALUE ( & tmp , value )"		3976693	0					
ANR	3976778	Callee	ZVAL_COPY_VALUE		3976693	0					
ANR	3976779	Identifier	ZVAL_COPY_VALUE		3976693	0					
ANR	3976780	ArgumentList	& tmp		3976693	1					
ANR	3976781	Argument	& tmp		3976693	0					
ANR	3976782	UnaryOperationExpression	& tmp		3976693	0					
ANR	3976783	UnaryOperator	&		3976693	0					
ANR	3976784	Identifier	tmp		3976693	1					
ANR	3976785	Argument	value		3976693	1					
ANR	3976786	Identifier	value		3976693	0					
ANR	3976787	ExpressionStatement	zval_copy_ctor_func ( & tmp )	1253:3:40752:40777	3976693	1	True				
ANR	3976788	CallExpression	zval_copy_ctor_func ( & tmp )		3976693	0					
ANR	3976789	Callee	zval_copy_ctor_func		3976693	0					
ANR	3976790	Identifier	zval_copy_ctor_func		3976693	0					
ANR	3976791	ArgumentList	& tmp		3976693	1					
ANR	3976792	Argument	& tmp		3976693	0					
ANR	3976793	UnaryOperationExpression	& tmp		3976693	0					
ANR	3976794	UnaryOperator	&		3976693	0					
ANR	3976795	Identifier	tmp		3976693	1					
ANR	3976796	ExpressionStatement	value = & tmp	1254:3:40782:40794	3976693	2	True				
ANR	3976797	AssignmentExpression	value = & tmp		3976693	0		=			
ANR	3976798	Identifier	value		3976693	0					
ANR	3976799	UnaryOperationExpression	& tmp		3976693	1					
ANR	3976800	UnaryOperator	&		3976693	0					
ANR	3976801	Identifier	tmp		3976693	1					
ANR	3976802	ExpressionStatement	"Z_OBJ_HT_P ( object ) -> write_dimension ( object , property_name , value )"	1258:1:40805:40870	3976693	5	True				
ANR	3976803	CallExpression	"Z_OBJ_HT_P ( object ) -> write_dimension ( object , property_name , value )"		3976693	0					
ANR	3976804	Callee	Z_OBJ_HT_P ( object ) -> write_dimension		3976693	0					
ANR	3976805	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> write_dimension		3976693	0					
ANR	3976806	CallExpression	Z_OBJ_HT_P ( object )		3976693	0					
ANR	3976807	Callee	Z_OBJ_HT_P		3976693	0					
ANR	3976808	Identifier	Z_OBJ_HT_P		3976693	0					
ANR	3976809	ArgumentList	object		3976693	1					
ANR	3976810	Argument	object		3976693	0					
ANR	3976811	Identifier	object		3976693	0					
ANR	3976812	Identifier	write_dimension		3976693	1					
ANR	3976813	ArgumentList	object		3976693	1					
ANR	3976814	Argument	object		3976693	0					
ANR	3976815	Identifier	object		3976693	0					
ANR	3976816	Argument	property_name		3976693	1					
ANR	3976817	Identifier	property_name		3976693	0					
ANR	3976818	Argument	value		3976693	2					
ANR	3976819	Identifier	value		3976693	0					
ANR	3976820	IfStatement	if ( retval && EXPECTED ( ! EG ( exception ) ) )		3976693	6					
ANR	3976821	Condition	retval && EXPECTED ( ! EG ( exception ) )	1260:5:40878:40911	3976693	0	True				
ANR	3976822	AndExpression	retval && EXPECTED ( ! EG ( exception ) )		3976693	0		&&			
ANR	3976823	Identifier	retval		3976693	0					
ANR	3976824	CallExpression	EXPECTED ( ! EG ( exception ) )		3976693	1					
ANR	3976825	Callee	EXPECTED		3976693	0					
ANR	3976826	Identifier	EXPECTED		3976693	0					
ANR	3976827	ArgumentList	! EG ( exception )		3976693	1					
ANR	3976828	Argument	! EG ( exception )		3976693	0					
ANR	3976829	UnaryOperationExpression	! EG ( exception )		3976693	0					
ANR	3976830	UnaryOperator	!		3976693	0					
ANR	3976831	CallExpression	EG ( exception )		3976693	1					
ANR	3976832	Callee	EG		3976693	0					
ANR	3976833	Identifier	EG		3976693	0					
ANR	3976834	ArgumentList	exception		3976693	1					
ANR	3976835	Argument	exception		3976693	0					
ANR	3976836	Identifier	exception		3976693	0					
ANR	3976837	CompoundStatement		24:41:654:654	3976693	1					
ANR	3976838	ExpressionStatement	"ZVAL_COPY ( retval , value )"	1261:2:40918:40942	3976693	0	True				
ANR	3976839	CallExpression	"ZVAL_COPY ( retval , value )"		3976693	0					
ANR	3976840	Callee	ZVAL_COPY		3976693	0					
ANR	3976841	Identifier	ZVAL_COPY		3976693	0					
ANR	3976842	ArgumentList	retval		3976693	1					
ANR	3976843	Argument	retval		3976693	0					
ANR	3976844	Identifier	retval		3976693	0					
ANR	3976845	Argument	value		3976693	1					
ANR	3976846	Identifier	value		3976693	0					
ANR	3976847	IfStatement	if ( value_type == IS_CONST )		3976693	7					
ANR	3976848	Condition	value_type == IS_CONST	1263:5:40952:40973	3976693	0	True				
ANR	3976849	EqualityExpression	value_type == IS_CONST		3976693	0		==			
ANR	3976850	Identifier	value_type		3976693	0					
ANR	3976851	Identifier	IS_CONST		3976693	1					
ANR	3976852	CompoundStatement		27:29:716:716	3976693	1					
ANR	3976853	ExpressionStatement	zval_ptr_dtor_nogc ( value )	1264:2:40980:41005	3976693	0	True				
ANR	3976854	CallExpression	zval_ptr_dtor_nogc ( value )		3976693	0					
ANR	3976855	Callee	zval_ptr_dtor_nogc		3976693	0					
ANR	3976856	Identifier	zval_ptr_dtor_nogc		3976693	0					
ANR	3976857	ArgumentList	value		3976693	1					
ANR	3976858	Argument	value		3976693	0					
ANR	3976859	Identifier	value		3976693	0					
ANR	3976860	ElseStatement	else		3976693	0					
ANR	3976861	CompoundStatement		29:8:755:755	3976693	0					
ANR	3976862	ExpressionStatement	FREE_OP ( free_value )	1266:2:41019:41038	3976693	0	True				
ANR	3976863	CallExpression	FREE_OP ( free_value )		3976693	0					
ANR	3976864	Callee	FREE_OP		3976693	0					
ANR	3976865	Identifier	FREE_OP		3976693	0					
ANR	3976866	ArgumentList	free_value		3976693	1					
ANR	3976867	Argument	free_value		3976693	0					
ANR	3976868	Identifier	free_value		3976693	0					
ANR	3976869	ReturnType	static zend_never_inline void		3976693	1					
ANR	3976870	Identifier	zend_assign_to_object_dim		3976693	2					
ANR	3976871	ParameterList	"zval * retval , zval * object , zval * property_name , int value_type , znode_op value_op , const zend_execute_data * execute_data"		3976693	3					
ANR	3976872	Parameter	zval * retval	1236:56:40136:40147	3976693	0	True				
ANR	3976873	ParameterType	zval *		3976693	0					
ANR	3976874	Identifier	retval		3976693	1					
ANR	3976875	Parameter	zval * object	1236:70:40150:40161	3976693	1	True				
ANR	3976876	ParameterType	zval *		3976693	0					
ANR	3976877	Identifier	object		3976693	1					
ANR	3976878	Parameter	zval * property_name	1236:84:40164:40182	3976693	2	True				
ANR	3976879	ParameterType	zval *		3976693	0					
ANR	3976880	Identifier	property_name		3976693	1					
ANR	3976881	Parameter	int value_type	1236:105:40185:40198	3976693	3	True				
ANR	3976882	ParameterType	int		3976693	0					
ANR	3976883	Identifier	value_type		3976693	1					
ANR	3976884	Parameter	znode_op value_op	1236:121:40201:40217	3976693	4	True				
ANR	3976885	ParameterType	znode_op		3976693	0					
ANR	3976886	Identifier	value_op		3976693	1					
ANR	3976887	Parameter	const zend_execute_data * execute_data	1236:140:40220:40256	3976693	5	True				
ANR	3976888	ParameterType	const zend_execute_data *		3976693	0					
ANR	3976889	Identifier	execute_data		3976693	1					
ANR	3976890	CFGEntryNode	ENTRY		3976693		True				
ANR	3976891	CFGExitNode	EXIT		3976693		True				
ANR	3976892	Symbol	exception		3976693						
ANR	3976893	Symbol	Z_OPT_COPYABLE_P		3976693						
ANR	3976894	Symbol	value_type		3976693						
ANR	3976895	Symbol	IS_CONST		3976693						
ANR	3976896	Symbol	EG		3976693						
ANR	3976897	Symbol	NULL		3976693						
ANR	3976898	Symbol	* Z_OBJ_HT_P		3976693						
ANR	3976899	Symbol	retval		3976693						
ANR	3976900	Symbol	execute_data		3976693						
ANR	3976901	Symbol	property_name		3976693						
ANR	3976902	Symbol	free_value		3976693						
ANR	3976903	Symbol	UNEXPECTED		3976693						
ANR	3976904	Symbol	tmp		3976693						
ANR	3976905	Symbol	Z_OBJ_HT_P		3976693						
ANR	3976906	Symbol	get_zval_ptr_deref		3976693						
ANR	3976907	Symbol	Z_OBJ_HT_P ( object ) -> write_dimension		3976693						
ANR	3976908	Symbol	& tmp		3976693						
ANR	3976909	Symbol	value_op		3976693						
ANR	3976910	Symbol	value		3976693						
ANR	3976911	Symbol	EXPECTED		3976693						
ANR	3976912	Symbol	& free_value		3976693						
ANR	3976913	Symbol	BP_VAR_R		3976693						
ANR	3976914	Symbol	object		3976693						
ANR	3976915	Function	zend_binary_assign_op_obj_dim	1270:0:41046:41909							
ANR	3976916	FunctionDef	"zend_binary_assign_op_obj_dim (zval * object , zval * property , zval * value , zval * retval , binary_op_type binary_op)"		3976915	0					
ANR	3976917	CompoundStatement		1271:0:41189:41909	3976915	0					
ANR	3976918	IdentifierDeclStatement	zval * z ;	1272:1:41192:41199	3976915	0	True				
ANR	3976919	IdentifierDecl	* z		3976915	0					
ANR	3976920	IdentifierDeclType	zval *		3976915	0					
ANR	3976921	Identifier	z		3976915	1					
ANR	3976922	IdentifierDeclStatement	"zval rv , res ;"	1273:1:41202:41214	3976915	1	True				
ANR	3976923	IdentifierDecl	rv		3976915	0					
ANR	3976924	IdentifierDeclType	zval		3976915	0					
ANR	3976925	Identifier	rv		3976915	1					
ANR	3976926	IdentifierDecl	res		3976915	1					
ANR	3976927	IdentifierDeclType	zval		3976915	0					
ANR	3976928	Identifier	res		3976915	1					
ANR	3976929	IfStatement	"if ( Z_OBJ_HT_P ( object ) -> read_dimension && ( z = Z_OBJ_HT_P ( object ) -> read_dimension ( object , property , BP_VAR_R , & rv ) ) != NULL )"		3976915	2					
ANR	3976930	Condition	"Z_OBJ_HT_P ( object ) -> read_dimension && ( z = Z_OBJ_HT_P ( object ) -> read_dimension ( object , property , BP_VAR_R , & rv ) ) != NULL"	1275:5:41222:41342	3976915	0	True				
ANR	3976931	AndExpression	"Z_OBJ_HT_P ( object ) -> read_dimension && ( z = Z_OBJ_HT_P ( object ) -> read_dimension ( object , property , BP_VAR_R , & rv ) ) != NULL"		3976915	0		&&			
ANR	3976932	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> read_dimension		3976915	0					
ANR	3976933	CallExpression	Z_OBJ_HT_P ( object )		3976915	0					
ANR	3976934	Callee	Z_OBJ_HT_P		3976915	0					
ANR	3976935	Identifier	Z_OBJ_HT_P		3976915	0					
ANR	3976936	ArgumentList	object		3976915	1					
ANR	3976937	Argument	object		3976915	0					
ANR	3976938	Identifier	object		3976915	0					
ANR	3976939	Identifier	read_dimension		3976915	1					
ANR	3976940	EqualityExpression	"( z = Z_OBJ_HT_P ( object ) -> read_dimension ( object , property , BP_VAR_R , & rv ) ) != NULL"		3976915	1		!=			
ANR	3976941	AssignmentExpression	"z = Z_OBJ_HT_P ( object ) -> read_dimension ( object , property , BP_VAR_R , & rv )"		3976915	0		=			
ANR	3976942	Identifier	z		3976915	0					
ANR	3976943	CallExpression	"Z_OBJ_HT_P ( object ) -> read_dimension ( object , property , BP_VAR_R , & rv )"		3976915	1					
ANR	3976944	Callee	Z_OBJ_HT_P ( object ) -> read_dimension		3976915	0					
ANR	3976945	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> read_dimension		3976915	0					
ANR	3976946	CallExpression	Z_OBJ_HT_P ( object )		3976915	0					
ANR	3976947	Callee	Z_OBJ_HT_P		3976915	0					
ANR	3976948	Identifier	Z_OBJ_HT_P		3976915	0					
ANR	3976949	ArgumentList	object		3976915	1					
ANR	3976950	Argument	object		3976915	0					
ANR	3976951	Identifier	object		3976915	0					
ANR	3976952	Identifier	read_dimension		3976915	1					
ANR	3976953	ArgumentList	object		3976915	1					
ANR	3976954	Argument	object		3976915	0					
ANR	3976955	Identifier	object		3976915	0					
ANR	3976956	Argument	property		3976915	1					
ANR	3976957	Identifier	property		3976915	0					
ANR	3976958	Argument	BP_VAR_R		3976915	2					
ANR	3976959	Identifier	BP_VAR_R		3976915	0					
ANR	3976960	Argument	& rv		3976915	3					
ANR	3976961	UnaryOperationExpression	& rv		3976915	0					
ANR	3976962	UnaryOperator	&		3976915	0					
ANR	3976963	Identifier	rv		3976915	1					
ANR	3976964	Identifier	NULL		3976915	1					
ANR	3976965	CompoundStatement		6:85:155:155	3976915	1					
ANR	3976966	IfStatement	if ( Z_TYPE_P ( z ) == IS_OBJECT && Z_OBJ_HT_P ( z ) -> get )		3976915	0					
ANR	3976967	Condition	Z_TYPE_P ( z ) == IS_OBJECT && Z_OBJ_HT_P ( z ) -> get	1278:6:41354:41399	3976915	0	True				
ANR	3976968	AndExpression	Z_TYPE_P ( z ) == IS_OBJECT && Z_OBJ_HT_P ( z ) -> get		3976915	0		&&			
ANR	3976969	EqualityExpression	Z_TYPE_P ( z ) == IS_OBJECT		3976915	0		==			
ANR	3976970	CallExpression	Z_TYPE_P ( z )		3976915	0					
ANR	3976971	Callee	Z_TYPE_P		3976915	0					
ANR	3976972	Identifier	Z_TYPE_P		3976915	0					
ANR	3976973	ArgumentList	z		3976915	1					
ANR	3976974	Argument	z		3976915	0					
ANR	3976975	Identifier	z		3976915	0					
ANR	3976976	Identifier	IS_OBJECT		3976915	1					
ANR	3976977	PtrMemberAccess	Z_OBJ_HT_P ( z ) -> get		3976915	1					
ANR	3976978	CallExpression	Z_OBJ_HT_P ( z )		3976915	0					
ANR	3976979	Callee	Z_OBJ_HT_P		3976915	0					
ANR	3976980	Identifier	Z_OBJ_HT_P		3976915	0					
ANR	3976981	ArgumentList	z		3976915	1					
ANR	3976982	Argument	z		3976915	0					
ANR	3976983	Identifier	z		3976915	0					
ANR	3976984	Identifier	get		3976915	1					
ANR	3976985	CompoundStatement		10:3:230:271	3976915	1					
ANR	3976986	IdentifierDeclStatement	zval rv2 ;	1279:3:41407:41415	3976915	0	True				
ANR	3976987	IdentifierDecl	rv2		3976915	0					
ANR	3976988	IdentifierDeclType	zval		3976915	0					
ANR	3976989	Identifier	rv2		3976915	1					
ANR	3976990	IdentifierDeclStatement	"zval * value = Z_OBJ_HT_P ( z ) -> get ( z , & rv2 ) ;"	1280:3:41420:41461	3976915	1	True				
ANR	3976991	IdentifierDecl	"* value = Z_OBJ_HT_P ( z ) -> get ( z , & rv2 )"		3976915	0					
ANR	3976992	IdentifierDeclType	zval *		3976915	0					
ANR	3976993	Identifier	value		3976915	1					
ANR	3976994	AssignmentExpression	"* value = Z_OBJ_HT_P ( z ) -> get ( z , & rv2 )"		3976915	2		=			
ANR	3976995	Identifier	value		3976915	0					
ANR	3976996	CallExpression	"Z_OBJ_HT_P ( z ) -> get ( z , & rv2 )"		3976915	1					
ANR	3976997	Callee	Z_OBJ_HT_P ( z ) -> get		3976915	0					
ANR	3976998	PtrMemberAccess	Z_OBJ_HT_P ( z ) -> get		3976915	0					
ANR	3976999	CallExpression	Z_OBJ_HT_P ( z )		3976915	0					
ANR	3977000	Callee	Z_OBJ_HT_P		3976915	0					
ANR	3977001	Identifier	Z_OBJ_HT_P		3976915	0					
ANR	3977002	ArgumentList	z		3976915	1					
ANR	3977003	Argument	z		3976915	0					
ANR	3977004	Identifier	z		3976915	0					
ANR	3977005	Identifier	get		3976915	1					
ANR	3977006	ArgumentList	z		3976915	1					
ANR	3977007	Argument	z		3976915	0					
ANR	3977008	Identifier	z		3976915	0					
ANR	3977009	Argument	& rv2		3976915	1					
ANR	3977010	UnaryOperationExpression	& rv2		3976915	0					
ANR	3977011	UnaryOperator	&		3976915	0					
ANR	3977012	Identifier	rv2		3976915	1					
ANR	3977013	IfStatement	if ( z == & rv )		3976915	2					
ANR	3977014	Condition	z == & rv	1282:7:41471:41478	3976915	0	True				
ANR	3977015	EqualityExpression	z == & rv		3976915	0		==			
ANR	3977016	Identifier	z		3976915	0					
ANR	3977017	UnaryOperationExpression	& rv		3976915	1					
ANR	3977018	UnaryOperator	&		3976915	0					
ANR	3977019	Identifier	rv		3976915	1					
ANR	3977020	CompoundStatement		12:17:291:291	3976915	1					
ANR	3977021	ExpressionStatement	zval_ptr_dtor ( & rv )	1283:4:41487:41505	3976915	0	True				
ANR	3977022	CallExpression	zval_ptr_dtor ( & rv )		3976915	0					
ANR	3977023	Callee	zval_ptr_dtor		3976915	0					
ANR	3977024	Identifier	zval_ptr_dtor		3976915	0					
ANR	3977025	ArgumentList	& rv		3976915	1					
ANR	3977026	Argument	& rv		3976915	0					
ANR	3977027	UnaryOperationExpression	& rv		3976915	0					
ANR	3977028	UnaryOperator	&		3976915	0					
ANR	3977029	Identifier	rv		3976915	1					
ANR	3977030	ExpressionStatement	"ZVAL_COPY_VALUE ( z , value )"	1285:3:41515:41540	3976915	3	True				
ANR	3977031	CallExpression	"ZVAL_COPY_VALUE ( z , value )"		3976915	0					
ANR	3977032	Callee	ZVAL_COPY_VALUE		3976915	0					
ANR	3977033	Identifier	ZVAL_COPY_VALUE		3976915	0					
ANR	3977034	ArgumentList	z		3976915	1					
ANR	3977035	Argument	z		3976915	0					
ANR	3977036	Identifier	z		3976915	0					
ANR	3977037	Argument	value		3976915	1					
ANR	3977038	Identifier	value		3976915	0					
ANR	3977039	ExpressionStatement	"binary_op ( & res , Z_ISREF_P ( z ) ? Z_REFVAL_P ( z ) : z , value )"	1287:2:41548:41604	3976915	1	True				
ANR	3977040	CallExpression	"binary_op ( & res , Z_ISREF_P ( z ) ? Z_REFVAL_P ( z ) : z , value )"		3976915	0					
ANR	3977041	Callee	binary_op		3976915	0					
ANR	3977042	Identifier	binary_op		3976915	0					
ANR	3977043	ArgumentList	& res		3976915	1					
ANR	3977044	Argument	& res		3976915	0					
ANR	3977045	UnaryOperationExpression	& res		3976915	0					
ANR	3977046	UnaryOperator	&		3976915	0					
ANR	3977047	Identifier	res		3976915	1					
ANR	3977048	Argument	Z_ISREF_P ( z ) ? Z_REFVAL_P ( z ) : z		3976915	1					
ANR	3977049	ConditionalExpression	Z_ISREF_P ( z ) ? Z_REFVAL_P ( z ) : z		3976915	0					
ANR	3977050	Condition	Z_ISREF_P ( z )		3976915	0					
ANR	3977051	CallExpression	Z_ISREF_P ( z )		3976915	0					
ANR	3977052	Callee	Z_ISREF_P		3976915	0					
ANR	3977053	Identifier	Z_ISREF_P		3976915	0					
ANR	3977054	ArgumentList	z		3976915	1					
ANR	3977055	Argument	z		3976915	0					
ANR	3977056	Identifier	z		3976915	0					
ANR	3977057	CallExpression	Z_REFVAL_P ( z )		3976915	1					
ANR	3977058	Callee	Z_REFVAL_P		3976915	0					
ANR	3977059	Identifier	Z_REFVAL_P		3976915	0					
ANR	3977060	ArgumentList	z		3976915	1					
ANR	3977061	Argument	z		3976915	0					
ANR	3977062	Identifier	z		3976915	0					
ANR	3977063	Identifier	z		3976915	2					
ANR	3977064	Argument	value		3976915	2					
ANR	3977065	Identifier	value		3976915	0					
ANR	3977066	ExpressionStatement	"Z_OBJ_HT_P ( object ) -> write_dimension ( object , property , & res )"	1288:2:41608:41667	3976915	2	True				
ANR	3977067	CallExpression	"Z_OBJ_HT_P ( object ) -> write_dimension ( object , property , & res )"		3976915	0					
ANR	3977068	Callee	Z_OBJ_HT_P ( object ) -> write_dimension		3976915	0					
ANR	3977069	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> write_dimension		3976915	0					
ANR	3977070	CallExpression	Z_OBJ_HT_P ( object )		3976915	0					
ANR	3977071	Callee	Z_OBJ_HT_P		3976915	0					
ANR	3977072	Identifier	Z_OBJ_HT_P		3976915	0					
ANR	3977073	ArgumentList	object		3976915	1					
ANR	3977074	Argument	object		3976915	0					
ANR	3977075	Identifier	object		3976915	0					
ANR	3977076	Identifier	write_dimension		3976915	1					
ANR	3977077	ArgumentList	object		3976915	1					
ANR	3977078	Argument	object		3976915	0					
ANR	3977079	Identifier	object		3976915	0					
ANR	3977080	Argument	property		3976915	1					
ANR	3977081	Identifier	property		3976915	0					
ANR	3977082	Argument	& res		3976915	2					
ANR	3977083	UnaryOperationExpression	& res		3976915	0					
ANR	3977084	UnaryOperator	&		3976915	0					
ANR	3977085	Identifier	res		3976915	1					
ANR	3977086	IfStatement	if ( z == & rv )		3976915	3					
ANR	3977087	Condition	z == & rv	1289:6:41675:41682	3976915	0	True				
ANR	3977088	EqualityExpression	z == & rv		3976915	0		==			
ANR	3977089	Identifier	z		3976915	0					
ANR	3977090	UnaryOperationExpression	& rv		3976915	1					
ANR	3977091	UnaryOperator	&		3976915	0					
ANR	3977092	Identifier	rv		3976915	1					
ANR	3977093	CompoundStatement		19:16:495:495	3976915	1					
ANR	3977094	ExpressionStatement	zval_ptr_dtor ( & rv )	1290:3:41690:41708	3976915	0	True				
ANR	3977095	CallExpression	zval_ptr_dtor ( & rv )		3976915	0					
ANR	3977096	Callee	zval_ptr_dtor		3976915	0					
ANR	3977097	Identifier	zval_ptr_dtor		3976915	0					
ANR	3977098	ArgumentList	& rv		3976915	1					
ANR	3977099	Argument	& rv		3976915	0					
ANR	3977100	UnaryOperationExpression	& rv		3976915	0					
ANR	3977101	UnaryOperator	&		3976915	0					
ANR	3977102	Identifier	rv		3976915	1					
ANR	3977103	IfStatement	if ( retval )		3976915	4					
ANR	3977104	Condition	retval	1292:6:41720:41725	3976915	0	True				
ANR	3977105	Identifier	retval		3976915	0					
ANR	3977106	CompoundStatement		22:14:538:538	3976915	1					
ANR	3977107	ExpressionStatement	"ZVAL_COPY ( retval , & res )"	1293:3:41733:41756	3976915	0	True				
ANR	3977108	CallExpression	"ZVAL_COPY ( retval , & res )"		3976915	0					
ANR	3977109	Callee	ZVAL_COPY		3976915	0					
ANR	3977110	Identifier	ZVAL_COPY		3976915	0					
ANR	3977111	ArgumentList	retval		3976915	1					
ANR	3977112	Argument	retval		3976915	0					
ANR	3977113	Identifier	retval		3976915	0					
ANR	3977114	Argument	& res		3976915	1					
ANR	3977115	UnaryOperationExpression	& res		3976915	0					
ANR	3977116	UnaryOperator	&		3976915	0					
ANR	3977117	Identifier	res		3976915	1					
ANR	3977118	ExpressionStatement	zval_ptr_dtor ( & res )	1295:2:41764:41783	3976915	5	True				
ANR	3977119	CallExpression	zval_ptr_dtor ( & res )		3976915	0					
ANR	3977120	Callee	zval_ptr_dtor		3976915	0					
ANR	3977121	Identifier	zval_ptr_dtor		3976915	0					
ANR	3977122	ArgumentList	& res		3976915	1					
ANR	3977123	Argument	& res		3976915	0					
ANR	3977124	UnaryOperationExpression	& res		3976915	0					
ANR	3977125	UnaryOperator	&		3976915	0					
ANR	3977126	Identifier	res		3976915	1					
ANR	3977127	ElseStatement	else		3976915	0					
ANR	3977128	CompoundStatement		26:8:603:603	3976915	0					
ANR	3977129	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	1297:2:41797:41862	3976915	0	True				
ANR	3977130	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		3976915	0					
ANR	3977131	Callee	zend_error		3976915	0					
ANR	3977132	Identifier	zend_error		3976915	0					
ANR	3977133	ArgumentList	E_WARNING		3976915	1					
ANR	3977134	Argument	E_WARNING		3976915	0					
ANR	3977135	Identifier	E_WARNING		3976915	0					
ANR	3977136	Argument	"""Attempt to assign property of non-object"""		3976915	1					
ANR	3977137	PrimaryExpression	"""Attempt to assign property of non-object"""		3976915	0					
ANR	3977138	IfStatement	if ( retval )		3976915	1					
ANR	3977139	Condition	retval	1298:6:41870:41875	3976915	0	True				
ANR	3977140	Identifier	retval		3976915	0					
ANR	3977141	CompoundStatement		28:14:688:688	3976915	1					
ANR	3977142	ExpressionStatement	ZVAL_NULL ( retval )	1299:3:41883:41900	3976915	0	True				
ANR	3977143	CallExpression	ZVAL_NULL ( retval )		3976915	0					
ANR	3977144	Callee	ZVAL_NULL		3976915	0					
ANR	3977145	Identifier	ZVAL_NULL		3976915	0					
ANR	3977146	ArgumentList	retval		3976915	1					
ANR	3977147	Argument	retval		3976915	0					
ANR	3977148	Identifier	retval		3976915	0					
ANR	3977149	ReturnType	static zend_never_inline void		3976915	1					
ANR	3977150	Identifier	zend_binary_assign_op_obj_dim		3976915	2					
ANR	3977151	ParameterList	"zval * object , zval * property , zval * value , zval * retval , binary_op_type binary_op"		3976915	3					
ANR	3977152	Parameter	zval * object	1270:60:41106:41117	3976915	0	True				
ANR	3977153	ParameterType	zval *		3976915	0					
ANR	3977154	Identifier	object		3976915	1					
ANR	3977155	Parameter	zval * property	1270:74:41120:41133	3976915	1	True				
ANR	3977156	ParameterType	zval *		3976915	0					
ANR	3977157	Identifier	property		3976915	1					
ANR	3977158	Parameter	zval * value	1270:90:41136:41146	3976915	2	True				
ANR	3977159	ParameterType	zval *		3976915	0					
ANR	3977160	Identifier	value		3976915	1					
ANR	3977161	Parameter	zval * retval	1270:103:41149:41160	3976915	3	True				
ANR	3977162	ParameterType	zval *		3976915	0					
ANR	3977163	Identifier	retval		3976915	1					
ANR	3977164	Parameter	binary_op_type binary_op	1270:117:41163:41186	3976915	4	True				
ANR	3977165	ParameterType	binary_op_type		3976915	0					
ANR	3977166	Identifier	binary_op		3976915	1					
ANR	3977167	CFGEntryNode	ENTRY		3976915		True				
ANR	3977168	CFGExitNode	EXIT		3976915		True				
ANR	3977169	Symbol	res		3976915						
ANR	3977170	Symbol	& res		3976915						
ANR	3977171	Symbol	NULL		3976915						
ANR	3977172	Symbol	rv		3976915						
ANR	3977173	Symbol	Z_TYPE_P		3976915						
ANR	3977174	Symbol	* Z_OBJ_HT_P		3976915						
ANR	3977175	Symbol	retval		3976915						
ANR	3977176	Symbol	& rv		3976915						
ANR	3977177	Symbol	rv2		3976915						
ANR	3977178	Symbol	E_WARNING		3976915						
ANR	3977179	Symbol	Z_OBJ_HT_P ( object ) -> read_dimension		3976915						
ANR	3977180	Symbol	Z_OBJ_HT_P ( z ) -> get		3976915						
ANR	3977181	Symbol	& rv2		3976915						
ANR	3977182	Symbol	Z_REFVAL_P		3976915						
ANR	3977183	Symbol	property		3976915						
ANR	3977184	Symbol	Z_OBJ_HT_P		3976915						
ANR	3977185	Symbol	z		3976915						
ANR	3977186	Symbol	IS_OBJECT		3976915						
ANR	3977187	Symbol	value		3976915						
ANR	3977188	Symbol	BP_VAR_R		3976915						
ANR	3977189	Symbol	Z_ISREF_P		3976915						
ANR	3977190	Symbol	object		3976915						
ANR	3977191	Symbol	binary_op		3976915						
ANR	3977192	Function	zend_assign_to_string_offset	1304:0:41912:43289							
ANR	3977193	FunctionDef	"zend_assign_to_string_offset (zval * str , zend_long offset , zval * value , zval * result)"		3977192	0					
ANR	3977194	CompoundStatement		1305:0:42009:43289	3977192	0					
ANR	3977195	IdentifierDeclStatement	zend_string * old_str ;	1306:1:42012:42032	3977192	0	True				
ANR	3977196	IdentifierDecl	* old_str		3977192	0					
ANR	3977197	IdentifierDeclType	zend_string *		3977192	0					
ANR	3977198	Identifier	old_str		3977192	1					
ANR	3977199	IfStatement	if ( offset < 0 )		3977192	1					
ANR	3977200	Condition	offset < 0	1308:5:42040:42049	3977192	0	True				
ANR	3977201	RelationalExpression	offset < 0		3977192	0		<			
ANR	3977202	Identifier	offset		3977192	0					
ANR	3977203	PrimaryExpression	0		3977192	1					
ANR	3977204	CompoundStatement		4:17:42:42	3977192	1					
ANR	3977205	Statement	zend_error	1309:2:42056:42065	3977192	0	True				
ANR	3977206	Statement	(	1309:12:42066:42066	3977192	1	True				
ANR	3977207	Statement	E_WARNING	1309:13:42067:42075	3977192	2	True				
ANR	3977208	Statement	","	1309:22:42076:42076	3977192	3	True				
ANR	3977209	Statement	"""Illegal string offset:  """	1309:24:42078:42103	3977192	4	True				
ANR	3977210	Statement	ZEND_LONG_FMT	1309:51:42105:42117	3977192	5	True				
ANR	3977211	Statement	","	1309:64:42118:42118	3977192	6	True				
ANR	3977212	Statement	offset	1309:66:42120:42125	3977192	7	True				
ANR	3977213	Statement	)	1309:72:42126:42126	3977192	8	True				
ANR	3977214	ExpressionStatement		1309:73:42127:42127	3977192	9	True				
ANR	3977215	ExpressionStatement	zend_string_release ( Z_STR_P ( str ) )	1310:2:42131:42164	3977192	10	True				
ANR	3977216	CallExpression	zend_string_release ( Z_STR_P ( str ) )		3977192	0					
ANR	3977217	Callee	zend_string_release		3977192	0					
ANR	3977218	Identifier	zend_string_release		3977192	0					
ANR	3977219	ArgumentList	Z_STR_P ( str )		3977192	1					
ANR	3977220	Argument	Z_STR_P ( str )		3977192	0					
ANR	3977221	CallExpression	Z_STR_P ( str )		3977192	0					
ANR	3977222	Callee	Z_STR_P		3977192	0					
ANR	3977223	Identifier	Z_STR_P		3977192	0					
ANR	3977224	ArgumentList	str		3977192	1					
ANR	3977225	Argument	str		3977192	0					
ANR	3977226	Identifier	str		3977192	0					
ANR	3977227	IfStatement	if ( result )		3977192	11					
ANR	3977228	Condition	result	1311:6:42172:42177	3977192	0	True				
ANR	3977229	Identifier	result		3977192	0					
ANR	3977230	CompoundStatement		7:14:170:170	3977192	1					
ANR	3977231	ExpressionStatement	ZVAL_NULL ( result )	1312:3:42185:42202	3977192	0	True				
ANR	3977232	CallExpression	ZVAL_NULL ( result )		3977192	0					
ANR	3977233	Callee	ZVAL_NULL		3977192	0					
ANR	3977234	Identifier	ZVAL_NULL		3977192	0					
ANR	3977235	ArgumentList	result		3977192	1					
ANR	3977236	Argument	result		3977192	0					
ANR	3977237	Identifier	result		3977192	0					
ANR	3977238	ReturnStatement	return ;	1314:2:42210:42216	3977192	12	True				
ANR	3977239	ExpressionStatement	old_str = Z_STR_P ( str )	1317:1:42223:42245	3977192	2	True				
ANR	3977240	AssignmentExpression	old_str = Z_STR_P ( str )		3977192	0		=			
ANR	3977241	Identifier	old_str		3977192	0					
ANR	3977242	CallExpression	Z_STR_P ( str )		3977192	1					
ANR	3977243	Callee	Z_STR_P		3977192	0					
ANR	3977244	Identifier	Z_STR_P		3977192	0					
ANR	3977245	ArgumentList	str		3977192	1					
ANR	3977246	Argument	str		3977192	0					
ANR	3977247	Identifier	str		3977192	0					
ANR	3977248	IfStatement	if ( ( size_t ) offset >= Z_STRLEN_P ( str ) )		3977192	3					
ANR	3977249	Condition	( size_t ) offset >= Z_STRLEN_P ( str )	1318:5:42252:42284	3977192	0	True				
ANR	3977250	RelationalExpression	( size_t ) offset >= Z_STRLEN_P ( str )		3977192	0		>=			
ANR	3977251	CastExpression	( size_t ) offset		3977192	0					
ANR	3977252	CastTarget	size_t		3977192	0					
ANR	3977253	Identifier	offset		3977192	1					
ANR	3977254	CallExpression	Z_STRLEN_P ( str )		3977192	1					
ANR	3977255	Callee	Z_STRLEN_P		3977192	0					
ANR	3977256	Identifier	Z_STRLEN_P		3977192	0					
ANR	3977257	ArgumentList	str		3977192	1					
ANR	3977258	Argument	str		3977192	0					
ANR	3977259	Identifier	str		3977192	0					
ANR	3977260	CompoundStatement		15:2:281:316	3977192	1					
ANR	3977261	IdentifierDeclStatement	zend_long old_len = Z_STRLEN_P ( str ) ;	1319:2:42291:42326	3977192	0	True				
ANR	3977262	IdentifierDecl	old_len = Z_STRLEN_P ( str )		3977192	0					
ANR	3977263	IdentifierDeclType	zend_long		3977192	0					
ANR	3977264	Identifier	old_len		3977192	1					
ANR	3977265	AssignmentExpression	old_len = Z_STRLEN_P ( str )		3977192	2		=			
ANR	3977266	Identifier	old_len		3977192	0					
ANR	3977267	CallExpression	Z_STRLEN_P ( str )		3977192	1					
ANR	3977268	Callee	Z_STRLEN_P		3977192	0					
ANR	3977269	Identifier	Z_STRLEN_P		3977192	0					
ANR	3977270	ArgumentList	str		3977192	1					
ANR	3977271	Argument	str		3977192	0					
ANR	3977272	Identifier	str		3977192	0					
ANR	3977273	ExpressionStatement	"Z_STR_P ( str ) = zend_string_extend ( Z_STR_P ( str ) , offset + 1 , 0 )"	1320:2:42330:42392	3977192	1	True				
ANR	3977274	AssignmentExpression	"Z_STR_P ( str ) = zend_string_extend ( Z_STR_P ( str ) , offset + 1 , 0 )"		3977192	0		=			
ANR	3977275	CallExpression	Z_STR_P ( str )		3977192	0					
ANR	3977276	Callee	Z_STR_P		3977192	0					
ANR	3977277	Identifier	Z_STR_P		3977192	0					
ANR	3977278	ArgumentList	str		3977192	1					
ANR	3977279	Argument	str		3977192	0					
ANR	3977280	Identifier	str		3977192	0					
ANR	3977281	CallExpression	"zend_string_extend ( Z_STR_P ( str ) , offset + 1 , 0 )"		3977192	1					
ANR	3977282	Callee	zend_string_extend		3977192	0					
ANR	3977283	Identifier	zend_string_extend		3977192	0					
ANR	3977284	ArgumentList	Z_STR_P ( str )		3977192	1					
ANR	3977285	Argument	Z_STR_P ( str )		3977192	0					
ANR	3977286	CallExpression	Z_STR_P ( str )		3977192	0					
ANR	3977287	Callee	Z_STR_P		3977192	0					
ANR	3977288	Identifier	Z_STR_P		3977192	0					
ANR	3977289	ArgumentList	str		3977192	1					
ANR	3977290	Argument	str		3977192	0					
ANR	3977291	Identifier	str		3977192	0					
ANR	3977292	Argument	offset + 1		3977192	1					
ANR	3977293	AdditiveExpression	offset + 1		3977192	0		+			
ANR	3977294	Identifier	offset		3977192	0					
ANR	3977295	PrimaryExpression	1		3977192	1					
ANR	3977296	Argument	0		3977192	2					
ANR	3977297	PrimaryExpression	0		3977192	0					
ANR	3977298	ExpressionStatement	Z_TYPE_INFO_P ( str ) = IS_STRING_EX	1321:2:42396:42429	3977192	2	True				
ANR	3977299	AssignmentExpression	Z_TYPE_INFO_P ( str ) = IS_STRING_EX		3977192	0		=			
ANR	3977300	CallExpression	Z_TYPE_INFO_P ( str )		3977192	0					
ANR	3977301	Callee	Z_TYPE_INFO_P		3977192	0					
ANR	3977302	Identifier	Z_TYPE_INFO_P		3977192	0					
ANR	3977303	ArgumentList	str		3977192	1					
ANR	3977304	Argument	str		3977192	0					
ANR	3977305	Identifier	str		3977192	0					
ANR	3977306	Identifier	IS_STRING_EX		3977192	1					
ANR	3977307	ExpressionStatement	"memset ( Z_STRVAL_P ( str ) + old_len , ' ' , offset - old_len )"	1322:2:42433:42489	3977192	3	True				
ANR	3977308	CallExpression	"memset ( Z_STRVAL_P ( str ) + old_len , ' ' , offset - old_len )"		3977192	0					
ANR	3977309	Callee	memset		3977192	0					
ANR	3977310	Identifier	memset		3977192	0					
ANR	3977311	ArgumentList	Z_STRVAL_P ( str ) + old_len		3977192	1					
ANR	3977312	Argument	Z_STRVAL_P ( str ) + old_len		3977192	0					
ANR	3977313	AdditiveExpression	Z_STRVAL_P ( str ) + old_len		3977192	0		+			
ANR	3977314	CallExpression	Z_STRVAL_P ( str )		3977192	0					
ANR	3977315	Callee	Z_STRVAL_P		3977192	0					
ANR	3977316	Identifier	Z_STRVAL_P		3977192	0					
ANR	3977317	ArgumentList	str		3977192	1					
ANR	3977318	Argument	str		3977192	0					
ANR	3977319	Identifier	str		3977192	0					
ANR	3977320	Identifier	old_len		3977192	1					
ANR	3977321	Argument	' '		3977192	1					
ANR	3977322	PrimaryExpression	' '		3977192	0					
ANR	3977323	Argument	offset - old_len		3977192	2					
ANR	3977324	AdditiveExpression	offset - old_len		3977192	0		-			
ANR	3977325	Identifier	offset		3977192	0					
ANR	3977326	Identifier	old_len		3977192	1					
ANR	3977327	ExpressionStatement	Z_STRVAL_P ( str ) [ offset + 1 ] = 0	1323:2:42493:42522	3977192	4	True				
ANR	3977328	AssignmentExpression	Z_STRVAL_P ( str ) [ offset + 1 ] = 0		3977192	0		=			
ANR	3977329	ArrayIndexing	Z_STRVAL_P ( str ) [ offset + 1 ]		3977192	0					
ANR	3977330	CallExpression	Z_STRVAL_P ( str )		3977192	0					
ANR	3977331	Callee	Z_STRVAL_P		3977192	0					
ANR	3977332	Identifier	Z_STRVAL_P		3977192	0					
ANR	3977333	ArgumentList	str		3977192	1					
ANR	3977334	Argument	str		3977192	0					
ANR	3977335	Identifier	str		3977192	0					
ANR	3977336	AdditiveExpression	offset + 1		3977192	1		+			
ANR	3977337	Identifier	offset		3977192	0					
ANR	3977338	PrimaryExpression	1		3977192	1					
ANR	3977339	PrimaryExpression	0		3977192	1					
ANR	3977340	ElseStatement	else		3977192	0					
ANR	3977341	IfStatement	if ( ! Z_REFCOUNTED_P ( str ) )		3977192	0					
ANR	3977342	Condition	! Z_REFCOUNTED_P ( str )	1324:12:42536:42555	3977192	0	True				
ANR	3977343	UnaryOperationExpression	! Z_REFCOUNTED_P ( str )		3977192	0					
ANR	3977344	UnaryOperator	!		3977192	0					
ANR	3977345	CallExpression	Z_REFCOUNTED_P ( str )		3977192	1					
ANR	3977346	Callee	Z_REFCOUNTED_P		3977192	0					
ANR	3977347	Identifier	Z_REFCOUNTED_P		3977192	0					
ANR	3977348	ArgumentList	str		3977192	1					
ANR	3977349	Argument	str		3977192	0					
ANR	3977350	Identifier	str		3977192	0					
ANR	3977351	CompoundStatement		20:34:548:548	3977192	1					
ANR	3977352	ExpressionStatement	"Z_STR_P ( str ) = zend_string_init ( Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) , 0 )"	1325:2:42562:42630	3977192	0	True				
ANR	3977353	AssignmentExpression	"Z_STR_P ( str ) = zend_string_init ( Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) , 0 )"		3977192	0		=			
ANR	3977354	CallExpression	Z_STR_P ( str )		3977192	0					
ANR	3977355	Callee	Z_STR_P		3977192	0					
ANR	3977356	Identifier	Z_STR_P		3977192	0					
ANR	3977357	ArgumentList	str		3977192	1					
ANR	3977358	Argument	str		3977192	0					
ANR	3977359	Identifier	str		3977192	0					
ANR	3977360	CallExpression	"zend_string_init ( Z_STRVAL_P ( str ) , Z_STRLEN_P ( str ) , 0 )"		3977192	1					
ANR	3977361	Callee	zend_string_init		3977192	0					
ANR	3977362	Identifier	zend_string_init		3977192	0					
ANR	3977363	ArgumentList	Z_STRVAL_P ( str )		3977192	1					
ANR	3977364	Argument	Z_STRVAL_P ( str )		3977192	0					
ANR	3977365	CallExpression	Z_STRVAL_P ( str )		3977192	0					
ANR	3977366	Callee	Z_STRVAL_P		3977192	0					
ANR	3977367	Identifier	Z_STRVAL_P		3977192	0					
ANR	3977368	ArgumentList	str		3977192	1					
ANR	3977369	Argument	str		3977192	0					
ANR	3977370	Identifier	str		3977192	0					
ANR	3977371	Argument	Z_STRLEN_P ( str )		3977192	1					
ANR	3977372	CallExpression	Z_STRLEN_P ( str )		3977192	0					
ANR	3977373	Callee	Z_STRLEN_P		3977192	0					
ANR	3977374	Identifier	Z_STRLEN_P		3977192	0					
ANR	3977375	ArgumentList	str		3977192	1					
ANR	3977376	Argument	str		3977192	0					
ANR	3977377	Identifier	str		3977192	0					
ANR	3977378	Argument	0		3977192	2					
ANR	3977379	PrimaryExpression	0		3977192	0					
ANR	3977380	ExpressionStatement	Z_TYPE_INFO_P ( str ) = IS_STRING_EX	1326:2:42634:42667	3977192	1	True				
ANR	3977381	AssignmentExpression	Z_TYPE_INFO_P ( str ) = IS_STRING_EX		3977192	0		=			
ANR	3977382	CallExpression	Z_TYPE_INFO_P ( str )		3977192	0					
ANR	3977383	Callee	Z_TYPE_INFO_P		3977192	0					
ANR	3977384	Identifier	Z_TYPE_INFO_P		3977192	0					
ANR	3977385	ArgumentList	str		3977192	1					
ANR	3977386	Argument	str		3977192	0					
ANR	3977387	Identifier	str		3977192	0					
ANR	3977388	Identifier	IS_STRING_EX		3977192	1					
ANR	3977389	IfStatement	if ( Z_TYPE_P ( value ) != IS_STRING )		3977192	4					
ANR	3977390	Condition	Z_TYPE_P ( value ) != IS_STRING	1329:5:42678:42705	3977192	0	True				
ANR	3977391	EqualityExpression	Z_TYPE_P ( value ) != IS_STRING		3977192	0		!=			
ANR	3977392	CallExpression	Z_TYPE_P ( value )		3977192	0					
ANR	3977393	Callee	Z_TYPE_P		3977192	0					
ANR	3977394	Identifier	Z_TYPE_P		3977192	0					
ANR	3977395	ArgumentList	value		3977192	1					
ANR	3977396	Argument	value		3977192	0					
ANR	3977397	Identifier	value		3977192	0					
ANR	3977398	Identifier	IS_STRING		3977192	1					
ANR	3977399	CompoundStatement		26:2:702:743	3977192	1					
ANR	3977400	IdentifierDeclStatement	zend_string * tmp = zval_get_string ( value ) ;	1330:2:42712:42753	3977192	0	True				
ANR	3977401	IdentifierDecl	* tmp = zval_get_string ( value )		3977192	0					
ANR	3977402	IdentifierDeclType	zend_string *		3977192	0					
ANR	3977403	Identifier	tmp		3977192	1					
ANR	3977404	AssignmentExpression	* tmp = zval_get_string ( value )		3977192	2		=			
ANR	3977405	Identifier	tmp		3977192	0					
ANR	3977406	CallExpression	zval_get_string ( value )		3977192	1					
ANR	3977407	Callee	zval_get_string		3977192	0					
ANR	3977408	Identifier	zval_get_string		3977192	0					
ANR	3977409	ArgumentList	value		3977192	1					
ANR	3977410	Argument	value		3977192	0					
ANR	3977411	Identifier	value		3977192	0					
ANR	3977412	ExpressionStatement	Z_STRVAL_P ( str ) [ offset ] = ZSTR_VAL ( tmp ) [ 0 ]	1332:2:42758:42800	3977192	1	True				
ANR	3977413	AssignmentExpression	Z_STRVAL_P ( str ) [ offset ] = ZSTR_VAL ( tmp ) [ 0 ]		3977192	0		=			
ANR	3977414	ArrayIndexing	Z_STRVAL_P ( str ) [ offset ]		3977192	0					
ANR	3977415	CallExpression	Z_STRVAL_P ( str )		3977192	0					
ANR	3977416	Callee	Z_STRVAL_P		3977192	0					
ANR	3977417	Identifier	Z_STRVAL_P		3977192	0					
ANR	3977418	ArgumentList	str		3977192	1					
ANR	3977419	Argument	str		3977192	0					
ANR	3977420	Identifier	str		3977192	0					
ANR	3977421	Identifier	offset		3977192	1					
ANR	3977422	ArrayIndexing	ZSTR_VAL ( tmp ) [ 0 ]		3977192	1					
ANR	3977423	CallExpression	ZSTR_VAL ( tmp )		3977192	0					
ANR	3977424	Callee	ZSTR_VAL		3977192	0					
ANR	3977425	Identifier	ZSTR_VAL		3977192	0					
ANR	3977426	ArgumentList	tmp		3977192	1					
ANR	3977427	Argument	tmp		3977192	0					
ANR	3977428	Identifier	tmp		3977192	0					
ANR	3977429	PrimaryExpression	0		3977192	1					
ANR	3977430	ExpressionStatement	zend_string_release ( tmp )	1333:2:42804:42828	3977192	2	True				
ANR	3977431	CallExpression	zend_string_release ( tmp )		3977192	0					
ANR	3977432	Callee	zend_string_release		3977192	0					
ANR	3977433	Identifier	zend_string_release		3977192	0					
ANR	3977434	ArgumentList	tmp		3977192	1					
ANR	3977435	Argument	tmp		3977192	0					
ANR	3977436	Identifier	tmp		3977192	0					
ANR	3977437	ElseStatement	else		3977192	0					
ANR	3977438	CompoundStatement		30:8:828:828	3977192	0					
ANR	3977439	ExpressionStatement	Z_STRVAL_P ( str ) [ offset ] = Z_STRVAL_P ( value ) [ 0 ]	1335:2:42842:42888	3977192	0	True				
ANR	3977440	AssignmentExpression	Z_STRVAL_P ( str ) [ offset ] = Z_STRVAL_P ( value ) [ 0 ]		3977192	0		=			
ANR	3977441	ArrayIndexing	Z_STRVAL_P ( str ) [ offset ]		3977192	0					
ANR	3977442	CallExpression	Z_STRVAL_P ( str )		3977192	0					
ANR	3977443	Callee	Z_STRVAL_P		3977192	0					
ANR	3977444	Identifier	Z_STRVAL_P		3977192	0					
ANR	3977445	ArgumentList	str		3977192	1					
ANR	3977446	Argument	str		3977192	0					
ANR	3977447	Identifier	str		3977192	0					
ANR	3977448	Identifier	offset		3977192	1					
ANR	3977449	ArrayIndexing	Z_STRVAL_P ( value ) [ 0 ]		3977192	1					
ANR	3977450	CallExpression	Z_STRVAL_P ( value )		3977192	0					
ANR	3977451	Callee	Z_STRVAL_P		3977192	0					
ANR	3977452	Identifier	Z_STRVAL_P		3977192	0					
ANR	3977453	ArgumentList	value		3977192	1					
ANR	3977454	Argument	value		3977192	0					
ANR	3977455	Identifier	value		3977192	0					
ANR	3977456	PrimaryExpression	0		3977192	1					
ANR	3977457	ExpressionStatement	zend_string_release ( old_str )	1342:1:43010:43038	3977192	5	True				
ANR	3977458	CallExpression	zend_string_release ( old_str )		3977192	0					
ANR	3977459	Callee	zend_string_release		3977192	0					
ANR	3977460	Identifier	zend_string_release		3977192	0					
ANR	3977461	ArgumentList	old_str		3977192	1					
ANR	3977462	Argument	old_str		3977192	0					
ANR	3977463	Identifier	old_str		3977192	0					
ANR	3977464	IfStatement	if ( result )		3977192	6					
ANR	3977465	Condition	result	1343:5:43045:43050	3977192	0	True				
ANR	3977466	Identifier	result		3977192	0					
ANR	3977467	CompoundStatement		40:2:1047:1097	3977192	1					
ANR	3977468	IdentifierDeclStatement	zend_uchar c = ( zend_uchar ) Z_STRVAL_P ( str ) [ offset ] ;	1344:2:43057:43107	3977192	0	True				
ANR	3977469	IdentifierDecl	c = ( zend_uchar ) Z_STRVAL_P ( str ) [ offset ]		3977192	0					
ANR	3977470	IdentifierDeclType	zend_uchar		3977192	0					
ANR	3977471	Identifier	c		3977192	1					
ANR	3977472	AssignmentExpression	c = ( zend_uchar ) Z_STRVAL_P ( str ) [ offset ]		3977192	2		=			
ANR	3977473	Identifier	c		3977192	0					
ANR	3977474	CastExpression	( zend_uchar ) Z_STRVAL_P ( str ) [ offset ]		3977192	1					
ANR	3977475	CastTarget	zend_uchar		3977192	0					
ANR	3977476	ArrayIndexing	Z_STRVAL_P ( str ) [ offset ]		3977192	1					
ANR	3977477	CallExpression	Z_STRVAL_P ( str )		3977192	0					
ANR	3977478	Callee	Z_STRVAL_P		3977192	0					
ANR	3977479	Identifier	Z_STRVAL_P		3977192	0					
ANR	3977480	ArgumentList	str		3977192	1					
ANR	3977481	Argument	str		3977192	0					
ANR	3977482	Identifier	str		3977192	0					
ANR	3977483	Identifier	offset		3977192	1					
ANR	3977484	IfStatement	if ( CG ( one_char_string ) [ c ] )		3977192	1					
ANR	3977485	Condition	CG ( one_char_string ) [ c ]	1346:6:43116:43137	3977192	0	True				
ANR	3977486	ArrayIndexing	CG ( one_char_string ) [ c ]		3977192	0					
ANR	3977487	CallExpression	CG ( one_char_string )		3977192	0					
ANR	3977488	Callee	CG		3977192	0					
ANR	3977489	Identifier	CG		3977192	0					
ANR	3977490	ArgumentList	one_char_string		3977192	1					
ANR	3977491	Argument	one_char_string		3977192	0					
ANR	3977492	Identifier	one_char_string		3977192	0					
ANR	3977493	Identifier	c		3977192	1					
ANR	3977494	CompoundStatement		42:30:1130:1130	3977192	1					
ANR	3977495	ExpressionStatement	"ZVAL_INTERNED_STR ( result , CG ( one_char_string ) [ c ] )"	1347:3:43145:43194	3977192	0	True				
ANR	3977496	CallExpression	"ZVAL_INTERNED_STR ( result , CG ( one_char_string ) [ c ] )"		3977192	0					
ANR	3977497	Callee	ZVAL_INTERNED_STR		3977192	0					
ANR	3977498	Identifier	ZVAL_INTERNED_STR		3977192	0					
ANR	3977499	ArgumentList	result		3977192	1					
ANR	3977500	Argument	result		3977192	0					
ANR	3977501	Identifier	result		3977192	0					
ANR	3977502	Argument	CG ( one_char_string ) [ c ]		3977192	1					
ANR	3977503	ArrayIndexing	CG ( one_char_string ) [ c ]		3977192	0					
ANR	3977504	CallExpression	CG ( one_char_string )		3977192	0					
ANR	3977505	Callee	CG		3977192	0					
ANR	3977506	Identifier	CG		3977192	0					
ANR	3977507	ArgumentList	one_char_string		3977192	1					
ANR	3977508	Argument	one_char_string		3977192	0					
ANR	3977509	Identifier	one_char_string		3977192	0					
ANR	3977510	Identifier	c		3977192	1					
ANR	3977511	ElseStatement	else		3977192	0					
ANR	3977512	CompoundStatement		44:9:1195:1195	3977192	0					
ANR	3977513	ExpressionStatement	"ZVAL_NEW_STR ( result , zend_string_init ( Z_STRVAL_P ( str ) + offset , 1 , 0 ) )"	1349:3:43210:43280	3977192	0	True				
ANR	3977514	CallExpression	"ZVAL_NEW_STR ( result , zend_string_init ( Z_STRVAL_P ( str ) + offset , 1 , 0 ) )"		3977192	0					
ANR	3977515	Callee	ZVAL_NEW_STR		3977192	0					
ANR	3977516	Identifier	ZVAL_NEW_STR		3977192	0					
ANR	3977517	ArgumentList	result		3977192	1					
ANR	3977518	Argument	result		3977192	0					
ANR	3977519	Identifier	result		3977192	0					
ANR	3977520	Argument	"zend_string_init ( Z_STRVAL_P ( str ) + offset , 1 , 0 )"		3977192	1					
ANR	3977521	CallExpression	"zend_string_init ( Z_STRVAL_P ( str ) + offset , 1 , 0 )"		3977192	0					
ANR	3977522	Callee	zend_string_init		3977192	0					
ANR	3977523	Identifier	zend_string_init		3977192	0					
ANR	3977524	ArgumentList	Z_STRVAL_P ( str ) + offset		3977192	1					
ANR	3977525	Argument	Z_STRVAL_P ( str ) + offset		3977192	0					
ANR	3977526	AdditiveExpression	Z_STRVAL_P ( str ) + offset		3977192	0		+			
ANR	3977527	CallExpression	Z_STRVAL_P ( str )		3977192	0					
ANR	3977528	Callee	Z_STRVAL_P		3977192	0					
ANR	3977529	Identifier	Z_STRVAL_P		3977192	0					
ANR	3977530	ArgumentList	str		3977192	1					
ANR	3977531	Argument	str		3977192	0					
ANR	3977532	Identifier	str		3977192	0					
ANR	3977533	Identifier	offset		3977192	1					
ANR	3977534	Argument	1		3977192	1					
ANR	3977535	PrimaryExpression	1		3977192	0					
ANR	3977536	Argument	0		3977192	2					
ANR	3977537	PrimaryExpression	0		3977192	0					
ANR	3977538	ReturnType	static void		3977192	1					
ANR	3977539	Identifier	zend_assign_to_string_offset		3977192	2					
ANR	3977540	ParameterList	"zval * str , zend_long offset , zval * value , zval * result"		3977192	3					
ANR	3977541	Parameter	zval * str	1304:41:41953:41961	3977192	0	True				
ANR	3977542	ParameterType	zval *		3977192	0					
ANR	3977543	Identifier	str		3977192	1					
ANR	3977544	Parameter	zend_long offset	1304:52:41964:41979	3977192	1	True				
ANR	3977545	ParameterType	zend_long		3977192	0					
ANR	3977546	Identifier	offset		3977192	1					
ANR	3977547	Parameter	zval * value	1304:70:41982:41992	3977192	2	True				
ANR	3977548	ParameterType	zval *		3977192	0					
ANR	3977549	Identifier	value		3977192	1					
ANR	3977550	Parameter	zval * result	1304:83:41995:42006	3977192	3	True				
ANR	3977551	ParameterType	zval *		3977192	0					
ANR	3977552	Identifier	result		3977192	1					
ANR	3977553	CFGEntryNode	ENTRY		3977192		True				
ANR	3977554	CFGExitNode	EXIT		3977192		True				
ANR	3977555	Symbol	zend_string_extend		3977192						
ANR	3977556	Symbol	* CG		3977192						
ANR	3977557	Symbol	one_char_string		3977192						
ANR	3977558	Symbol	result		3977192						
ANR	3977559	Symbol	zend_string_init		3977192						
ANR	3977560	Symbol	IS_STRING_EX		3977192						
ANR	3977561	Symbol	old_str		3977192						
ANR	3977562	Symbol	tmp		3977192						
ANR	3977563	Symbol	Z_STRLEN_P		3977192						
ANR	3977564	Symbol	* Z_STRVAL_P		3977192						
ANR	3977565	Symbol	IS_STRING		3977192						
ANR	3977566	Symbol	value		3977192						
ANR	3977567	Symbol	* ZSTR_VAL		3977192						
ANR	3977568	Symbol	c		3977192						
ANR	3977569	Symbol	offset		3977192						
ANR	3977570	Symbol	CG		3977192						
ANR	3977571	Symbol	zval_get_string		3977192						
ANR	3977572	Symbol	Z_TYPE_P		3977192						
ANR	3977573	Symbol	Z_STRVAL_P		3977192						
ANR	3977574	Symbol	* c		3977192						
ANR	3977575	Symbol	Z_TYPE_INFO_P		3977192						
ANR	3977576	Symbol	ZSTR_VAL		3977192						
ANR	3977577	Symbol	str		3977192						
ANR	3977578	Symbol	old_len		3977192						
ANR	3977579	Symbol	* offset		3977192						
ANR	3977580	Symbol	Z_STR_P		3977192						
ANR	3977581	Symbol	Z_REFCOUNTED_P		3977192						
ANR	3977582	Function	zend_post_incdec_overloaded_property	1354:0:43292:44482							
ANR	3977583	FunctionDef	"zend_post_incdec_overloaded_property (zval * object , zval * property , void * * cache_slot , int inc , zval * result)"		3977582	0					
ANR	3977584	CompoundStatement		1355:0:43431:44482	3977582	0					
ANR	3977585	IfStatement	if ( Z_OBJ_HT_P ( object ) -> read_property && Z_OBJ_HT_P ( object ) -> write_property )		3977582	0					
ANR	3977586	Condition	Z_OBJ_HT_P ( object ) -> read_property && Z_OBJ_HT_P ( object ) -> write_property	1356:5:43438:43508	3977582	0	True				
ANR	3977587	AndExpression	Z_OBJ_HT_P ( object ) -> read_property && Z_OBJ_HT_P ( object ) -> write_property		3977582	0		&&			
ANR	3977588	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> read_property		3977582	0					
ANR	3977589	CallExpression	Z_OBJ_HT_P ( object )		3977582	0					
ANR	3977590	Callee	Z_OBJ_HT_P		3977582	0					
ANR	3977591	Identifier	Z_OBJ_HT_P		3977582	0					
ANR	3977592	ArgumentList	object		3977582	1					
ANR	3977593	Argument	object		3977582	0					
ANR	3977594	Identifier	object		3977582	0					
ANR	3977595	Identifier	read_property		3977582	1					
ANR	3977596	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> write_property		3977582	1					
ANR	3977597	CallExpression	Z_OBJ_HT_P ( object )		3977582	0					
ANR	3977598	Callee	Z_OBJ_HT_P		3977582	0					
ANR	3977599	Identifier	Z_OBJ_HT_P		3977582	0					
ANR	3977600	ArgumentList	object		3977582	1					
ANR	3977601	Argument	object		3977582	0					
ANR	3977602	Identifier	object		3977582	0					
ANR	3977603	Identifier	write_property		3977582	1					
ANR	3977604	CompoundStatement		5:2:110:121	3977582	1					
ANR	3977605	IdentifierDeclStatement	"zval rv , obj ;"	1357:2:43515:43527	3977582	0	True				
ANR	3977606	IdentifierDecl	rv		3977582	0					
ANR	3977607	IdentifierDeclType	zval		3977582	0					
ANR	3977608	Identifier	rv		3977582	1					
ANR	3977609	IdentifierDecl	obj		3977582	1					
ANR	3977610	IdentifierDeclType	zval		3977582	0					
ANR	3977611	Identifier	obj		3977582	1					
ANR	3977612	IdentifierDeclStatement	zval * z ;	1358:2:43531:43538	3977582	1	True				
ANR	3977613	IdentifierDecl	* z		3977582	0					
ANR	3977614	IdentifierDeclType	zval *		3977582	0					
ANR	3977615	Identifier	z		3977582	1					
ANR	3977616	IdentifierDeclStatement	zval z_copy ;	1359:2:43542:43553	3977582	2	True				
ANR	3977617	IdentifierDecl	z_copy		3977582	0					
ANR	3977618	IdentifierDeclType	zval		3977582	0					
ANR	3977619	Identifier	z_copy		3977582	1					
ANR	3977620	ExpressionStatement	"ZVAL_OBJ ( & obj , Z_OBJ_P ( object ) )"	1361:2:43558:43589	3977582	3	True				
ANR	3977621	CallExpression	"ZVAL_OBJ ( & obj , Z_OBJ_P ( object ) )"		3977582	0					
ANR	3977622	Callee	ZVAL_OBJ		3977582	0					
ANR	3977623	Identifier	ZVAL_OBJ		3977582	0					
ANR	3977624	ArgumentList	& obj		3977582	1					
ANR	3977625	Argument	& obj		3977582	0					
ANR	3977626	UnaryOperationExpression	& obj		3977582	0					
ANR	3977627	UnaryOperator	&		3977582	0					
ANR	3977628	Identifier	obj		3977582	1					
ANR	3977629	Argument	Z_OBJ_P ( object )		3977582	1					
ANR	3977630	CallExpression	Z_OBJ_P ( object )		3977582	0					
ANR	3977631	Callee	Z_OBJ_P		3977582	0					
ANR	3977632	Identifier	Z_OBJ_P		3977582	0					
ANR	3977633	ArgumentList	object		3977582	1					
ANR	3977634	Argument	object		3977582	0					
ANR	3977635	Identifier	object		3977582	0					
ANR	3977636	ExpressionStatement	Z_ADDREF ( obj )	1362:2:43593:43606	3977582	4	True				
ANR	3977637	CallExpression	Z_ADDREF ( obj )		3977582	0					
ANR	3977638	Callee	Z_ADDREF		3977582	0					
ANR	3977639	Identifier	Z_ADDREF		3977582	0					
ANR	3977640	ArgumentList	obj		3977582	1					
ANR	3977641	Argument	obj		3977582	0					
ANR	3977642	Identifier	obj		3977582	0					
ANR	3977643	ExpressionStatement	"z = Z_OBJ_HT ( obj ) -> read_property ( & obj , property , BP_VAR_R , cache_slot , & rv )"	1363:2:43610:43685	3977582	5	True				
ANR	3977644	AssignmentExpression	"z = Z_OBJ_HT ( obj ) -> read_property ( & obj , property , BP_VAR_R , cache_slot , & rv )"		3977582	0		=			
ANR	3977645	Identifier	z		3977582	0					
ANR	3977646	CallExpression	"Z_OBJ_HT ( obj ) -> read_property ( & obj , property , BP_VAR_R , cache_slot , & rv )"		3977582	1					
ANR	3977647	Callee	Z_OBJ_HT ( obj ) -> read_property		3977582	0					
ANR	3977648	PtrMemberAccess	Z_OBJ_HT ( obj ) -> read_property		3977582	0					
ANR	3977649	CallExpression	Z_OBJ_HT ( obj )		3977582	0					
ANR	3977650	Callee	Z_OBJ_HT		3977582	0					
ANR	3977651	Identifier	Z_OBJ_HT		3977582	0					
ANR	3977652	ArgumentList	obj		3977582	1					
ANR	3977653	Argument	obj		3977582	0					
ANR	3977654	Identifier	obj		3977582	0					
ANR	3977655	Identifier	read_property		3977582	1					
ANR	3977656	ArgumentList	& obj		3977582	1					
ANR	3977657	Argument	& obj		3977582	0					
ANR	3977658	UnaryOperationExpression	& obj		3977582	0					
ANR	3977659	UnaryOperator	&		3977582	0					
ANR	3977660	Identifier	obj		3977582	1					
ANR	3977661	Argument	property		3977582	1					
ANR	3977662	Identifier	property		3977582	0					
ANR	3977663	Argument	BP_VAR_R		3977582	2					
ANR	3977664	Identifier	BP_VAR_R		3977582	0					
ANR	3977665	Argument	cache_slot		3977582	3					
ANR	3977666	Identifier	cache_slot		3977582	0					
ANR	3977667	Argument	& rv		3977582	4					
ANR	3977668	UnaryOperationExpression	& rv		3977582	0					
ANR	3977669	UnaryOperator	&		3977582	0					
ANR	3977670	Identifier	rv		3977582	1					
ANR	3977671	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		3977582	6					
ANR	3977672	Condition	UNEXPECTED ( EG ( exception ) )	1364:6:43693:43717	3977582	0	True				
ANR	3977673	CallExpression	UNEXPECTED ( EG ( exception ) )		3977582	0					
ANR	3977674	Callee	UNEXPECTED		3977582	0					
ANR	3977675	Identifier	UNEXPECTED		3977582	0					
ANR	3977676	ArgumentList	EG ( exception )		3977582	1					
ANR	3977677	Argument	EG ( exception )		3977582	0					
ANR	3977678	CallExpression	EG ( exception )		3977582	0					
ANR	3977679	Callee	EG		3977582	0					
ANR	3977680	Identifier	EG		3977582	0					
ANR	3977681	ArgumentList	exception		3977582	1					
ANR	3977682	Argument	exception		3977582	0					
ANR	3977683	Identifier	exception		3977582	0					
ANR	3977684	CompoundStatement		10:33:288:288	3977582	1					
ANR	3977685	ExpressionStatement	OBJ_RELEASE ( Z_OBJ ( obj ) )	1365:3:43725:43748	3977582	0	True				
ANR	3977686	CallExpression	OBJ_RELEASE ( Z_OBJ ( obj ) )		3977582	0					
ANR	3977687	Callee	OBJ_RELEASE		3977582	0					
ANR	3977688	Identifier	OBJ_RELEASE		3977582	0					
ANR	3977689	ArgumentList	Z_OBJ ( obj )		3977582	1					
ANR	3977690	Argument	Z_OBJ ( obj )		3977582	0					
ANR	3977691	CallExpression	Z_OBJ ( obj )		3977582	0					
ANR	3977692	Callee	Z_OBJ		3977582	0					
ANR	3977693	Identifier	Z_OBJ		3977582	0					
ANR	3977694	ArgumentList	obj		3977582	1					
ANR	3977695	Argument	obj		3977582	0					
ANR	3977696	Identifier	obj		3977582	0					
ANR	3977697	ReturnStatement	return ;	1366:3:43753:43759	3977582	1	True				
ANR	3977698	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( z ) == IS_OBJECT ) && Z_OBJ_HT_P ( z ) -> get )		3977582	7					
ANR	3977699	Condition	UNEXPECTED ( Z_TYPE_P ( z ) == IS_OBJECT ) && Z_OBJ_HT_P ( z ) -> get	1369:6:43772:43829	3977582	0	True				
ANR	3977700	AndExpression	UNEXPECTED ( Z_TYPE_P ( z ) == IS_OBJECT ) && Z_OBJ_HT_P ( z ) -> get		3977582	0		&&			
ANR	3977701	CallExpression	UNEXPECTED ( Z_TYPE_P ( z ) == IS_OBJECT )		3977582	0					
ANR	3977702	Callee	UNEXPECTED		3977582	0					
ANR	3977703	Identifier	UNEXPECTED		3977582	0					
ANR	3977704	ArgumentList	Z_TYPE_P ( z ) == IS_OBJECT		3977582	1					
ANR	3977705	Argument	Z_TYPE_P ( z ) == IS_OBJECT		3977582	0					
ANR	3977706	EqualityExpression	Z_TYPE_P ( z ) == IS_OBJECT		3977582	0		==			
ANR	3977707	CallExpression	Z_TYPE_P ( z )		3977582	0					
ANR	3977708	Callee	Z_TYPE_P		3977582	0					
ANR	3977709	Identifier	Z_TYPE_P		3977582	0					
ANR	3977710	ArgumentList	z		3977582	1					
ANR	3977711	Argument	z		3977582	0					
ANR	3977712	Identifier	z		3977582	0					
ANR	3977713	Identifier	IS_OBJECT		3977582	1					
ANR	3977714	PtrMemberAccess	Z_OBJ_HT_P ( z ) -> get		3977582	1					
ANR	3977715	CallExpression	Z_OBJ_HT_P ( z )		3977582	0					
ANR	3977716	Callee	Z_OBJ_HT_P		3977582	0					
ANR	3977717	Identifier	Z_OBJ_HT_P		3977582	0					
ANR	3977718	ArgumentList	z		3977582	1					
ANR	3977719	Argument	z		3977582	0					
ANR	3977720	Identifier	z		3977582	0					
ANR	3977721	Identifier	get		3977582	1					
ANR	3977722	CompoundStatement		17:3:418:459	3977582	1					
ANR	3977723	IdentifierDeclStatement	zval rv2 ;	1370:3:43837:43845	3977582	0	True				
ANR	3977724	IdentifierDecl	rv2		3977582	0					
ANR	3977725	IdentifierDeclType	zval		3977582	0					
ANR	3977726	Identifier	rv2		3977582	1					
ANR	3977727	IdentifierDeclStatement	"zval * value = Z_OBJ_HT_P ( z ) -> get ( z , & rv2 ) ;"	1371:3:43850:43891	3977582	1	True				
ANR	3977728	IdentifierDecl	"* value = Z_OBJ_HT_P ( z ) -> get ( z , & rv2 )"		3977582	0					
ANR	3977729	IdentifierDeclType	zval *		3977582	0					
ANR	3977730	Identifier	value		3977582	1					
ANR	3977731	AssignmentExpression	"* value = Z_OBJ_HT_P ( z ) -> get ( z , & rv2 )"		3977582	2		=			
ANR	3977732	Identifier	value		3977582	0					
ANR	3977733	CallExpression	"Z_OBJ_HT_P ( z ) -> get ( z , & rv2 )"		3977582	1					
ANR	3977734	Callee	Z_OBJ_HT_P ( z ) -> get		3977582	0					
ANR	3977735	PtrMemberAccess	Z_OBJ_HT_P ( z ) -> get		3977582	0					
ANR	3977736	CallExpression	Z_OBJ_HT_P ( z )		3977582	0					
ANR	3977737	Callee	Z_OBJ_HT_P		3977582	0					
ANR	3977738	Identifier	Z_OBJ_HT_P		3977582	0					
ANR	3977739	ArgumentList	z		3977582	1					
ANR	3977740	Argument	z		3977582	0					
ANR	3977741	Identifier	z		3977582	0					
ANR	3977742	Identifier	get		3977582	1					
ANR	3977743	ArgumentList	z		3977582	1					
ANR	3977744	Argument	z		3977582	0					
ANR	3977745	Identifier	z		3977582	0					
ANR	3977746	Argument	& rv2		3977582	1					
ANR	3977747	UnaryOperationExpression	& rv2		3977582	0					
ANR	3977748	UnaryOperator	&		3977582	0					
ANR	3977749	Identifier	rv2		3977582	1					
ANR	3977750	IfStatement	if ( z == & rv )		3977582	2					
ANR	3977751	Condition	z == & rv	1372:7:43900:43907	3977582	0	True				
ANR	3977752	EqualityExpression	z == & rv		3977582	0		==			
ANR	3977753	Identifier	z		3977582	0					
ANR	3977754	UnaryOperationExpression	& rv		3977582	1					
ANR	3977755	UnaryOperator	&		3977582	0					
ANR	3977756	Identifier	rv		3977582	1					
ANR	3977757	CompoundStatement		18:17:478:478	3977582	1					
ANR	3977758	ExpressionStatement	zval_ptr_dtor ( & rv )	1373:4:43916:43934	3977582	0	True				
ANR	3977759	CallExpression	zval_ptr_dtor ( & rv )		3977582	0					
ANR	3977760	Callee	zval_ptr_dtor		3977582	0					
ANR	3977761	Identifier	zval_ptr_dtor		3977582	0					
ANR	3977762	ArgumentList	& rv		3977582	1					
ANR	3977763	Argument	& rv		3977582	0					
ANR	3977764	UnaryOperationExpression	& rv		3977582	0					
ANR	3977765	UnaryOperator	&		3977582	0					
ANR	3977766	Identifier	rv		3977582	1					
ANR	3977767	ExpressionStatement	"ZVAL_COPY_VALUE ( z , value )"	1375:3:43944:43969	3977582	3	True				
ANR	3977768	CallExpression	"ZVAL_COPY_VALUE ( z , value )"		3977582	0					
ANR	3977769	Callee	ZVAL_COPY_VALUE		3977582	0					
ANR	3977770	Identifier	ZVAL_COPY_VALUE		3977582	0					
ANR	3977771	ArgumentList	z		3977582	1					
ANR	3977772	Argument	z		3977582	0					
ANR	3977773	Identifier	z		3977582	0					
ANR	3977774	Argument	value		3977582	1					
ANR	3977775	Identifier	value		3977582	0					
ANR	3977776	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( z ) == IS_REFERENCE ) )		3977582	8					
ANR	3977777	Condition	UNEXPECTED ( Z_TYPE_P ( z ) == IS_REFERENCE )	1378:6:43982:44020	3977582	0	True				
ANR	3977778	CallExpression	UNEXPECTED ( Z_TYPE_P ( z ) == IS_REFERENCE )		3977582	0					
ANR	3977779	Callee	UNEXPECTED		3977582	0					
ANR	3977780	Identifier	UNEXPECTED		3977582	0					
ANR	3977781	ArgumentList	Z_TYPE_P ( z ) == IS_REFERENCE		3977582	1					
ANR	3977782	Argument	Z_TYPE_P ( z ) == IS_REFERENCE		3977582	0					
ANR	3977783	EqualityExpression	Z_TYPE_P ( z ) == IS_REFERENCE		3977582	0		==			
ANR	3977784	CallExpression	Z_TYPE_P ( z )		3977582	0					
ANR	3977785	Callee	Z_TYPE_P		3977582	0					
ANR	3977786	Identifier	Z_TYPE_P		3977582	0					
ANR	3977787	ArgumentList	z		3977582	1					
ANR	3977788	Argument	z		3977582	0					
ANR	3977789	Identifier	z		3977582	0					
ANR	3977790	Identifier	IS_REFERENCE		3977582	1					
ANR	3977791	CompoundStatement		24:47:591:591	3977582	1					
ANR	3977792	ExpressionStatement	"ZVAL_COPY ( result , Z_REFVAL_P ( z ) )"	1379:3:44028:44060	3977582	0	True				
ANR	3977793	CallExpression	"ZVAL_COPY ( result , Z_REFVAL_P ( z ) )"		3977582	0					
ANR	3977794	Callee	ZVAL_COPY		3977582	0					
ANR	3977795	Identifier	ZVAL_COPY		3977582	0					
ANR	3977796	ArgumentList	result		3977582	1					
ANR	3977797	Argument	result		3977582	0					
ANR	3977798	Identifier	result		3977582	0					
ANR	3977799	Argument	Z_REFVAL_P ( z )		3977582	1					
ANR	3977800	CallExpression	Z_REFVAL_P ( z )		3977582	0					
ANR	3977801	Callee	Z_REFVAL_P		3977582	0					
ANR	3977802	Identifier	Z_REFVAL_P		3977582	0					
ANR	3977803	ArgumentList	z		3977582	1					
ANR	3977804	Argument	z		3977582	0					
ANR	3977805	Identifier	z		3977582	0					
ANR	3977806	ElseStatement	else		3977582	0					
ANR	3977807	CompoundStatement		26:9:639:639	3977582	0					
ANR	3977808	ExpressionStatement	"ZVAL_COPY ( result , z )"	1381:3:44076:44096	3977582	0	True				
ANR	3977809	CallExpression	"ZVAL_COPY ( result , z )"		3977582	0					
ANR	3977810	Callee	ZVAL_COPY		3977582	0					
ANR	3977811	Identifier	ZVAL_COPY		3977582	0					
ANR	3977812	ArgumentList	result		3977582	1					
ANR	3977813	Argument	result		3977582	0					
ANR	3977814	Identifier	result		3977582	0					
ANR	3977815	Argument	z		3977582	1					
ANR	3977816	Identifier	z		3977582	0					
ANR	3977817	ExpressionStatement	"ZVAL_DUP ( & z_copy , result )"	1383:2:44104:44129	3977582	9	True				
ANR	3977818	CallExpression	"ZVAL_DUP ( & z_copy , result )"		3977582	0					
ANR	3977819	Callee	ZVAL_DUP		3977582	0					
ANR	3977820	Identifier	ZVAL_DUP		3977582	0					
ANR	3977821	ArgumentList	& z_copy		3977582	1					
ANR	3977822	Argument	& z_copy		3977582	0					
ANR	3977823	UnaryOperationExpression	& z_copy		3977582	0					
ANR	3977824	UnaryOperator	&		3977582	0					
ANR	3977825	Identifier	z_copy		3977582	1					
ANR	3977826	Argument	result		3977582	1					
ANR	3977827	Identifier	result		3977582	0					
ANR	3977828	IfStatement	if ( inc )		3977582	10					
ANR	3977829	Condition	inc	1384:6:44137:44139	3977582	0	True				
ANR	3977830	Identifier	inc		3977582	0					
ANR	3977831	CompoundStatement		30:11:710:710	3977582	1					
ANR	3977832	ExpressionStatement	increment_function ( & z_copy )	1385:3:44147:44174	3977582	0	True				
ANR	3977833	CallExpression	increment_function ( & z_copy )		3977582	0					
ANR	3977834	Callee	increment_function		3977582	0					
ANR	3977835	Identifier	increment_function		3977582	0					
ANR	3977836	ArgumentList	& z_copy		3977582	1					
ANR	3977837	Argument	& z_copy		3977582	0					
ANR	3977838	UnaryOperationExpression	& z_copy		3977582	0					
ANR	3977839	UnaryOperator	&		3977582	0					
ANR	3977840	Identifier	z_copy		3977582	1					
ANR	3977841	ElseStatement	else		3977582	0					
ANR	3977842	CompoundStatement		32:9:753:753	3977582	0					
ANR	3977843	ExpressionStatement	decrement_function ( & z_copy )	1387:3:44190:44217	3977582	0	True				
ANR	3977844	CallExpression	decrement_function ( & z_copy )		3977582	0					
ANR	3977845	Callee	decrement_function		3977582	0					
ANR	3977846	Identifier	decrement_function		3977582	0					
ANR	3977847	ArgumentList	& z_copy		3977582	1					
ANR	3977848	Argument	& z_copy		3977582	0					
ANR	3977849	UnaryOperationExpression	& z_copy		3977582	0					
ANR	3977850	UnaryOperator	&		3977582	0					
ANR	3977851	Identifier	z_copy		3977582	1					
ANR	3977852	ExpressionStatement	"Z_OBJ_HT ( obj ) -> write_property ( & obj , property , & z_copy , cache_slot )"	1389:2:44225:44291	3977582	11	True				
ANR	3977853	CallExpression	"Z_OBJ_HT ( obj ) -> write_property ( & obj , property , & z_copy , cache_slot )"		3977582	0					
ANR	3977854	Callee	Z_OBJ_HT ( obj ) -> write_property		3977582	0					
ANR	3977855	PtrMemberAccess	Z_OBJ_HT ( obj ) -> write_property		3977582	0					
ANR	3977856	CallExpression	Z_OBJ_HT ( obj )		3977582	0					
ANR	3977857	Callee	Z_OBJ_HT		3977582	0					
ANR	3977858	Identifier	Z_OBJ_HT		3977582	0					
ANR	3977859	ArgumentList	obj		3977582	1					
ANR	3977860	Argument	obj		3977582	0					
ANR	3977861	Identifier	obj		3977582	0					
ANR	3977862	Identifier	write_property		3977582	1					
ANR	3977863	ArgumentList	& obj		3977582	1					
ANR	3977864	Argument	& obj		3977582	0					
ANR	3977865	UnaryOperationExpression	& obj		3977582	0					
ANR	3977866	UnaryOperator	&		3977582	0					
ANR	3977867	Identifier	obj		3977582	1					
ANR	3977868	Argument	property		3977582	1					
ANR	3977869	Identifier	property		3977582	0					
ANR	3977870	Argument	& z_copy		3977582	2					
ANR	3977871	UnaryOperationExpression	& z_copy		3977582	0					
ANR	3977872	UnaryOperator	&		3977582	0					
ANR	3977873	Identifier	z_copy		3977582	1					
ANR	3977874	Argument	cache_slot		3977582	3					
ANR	3977875	Identifier	cache_slot		3977582	0					
ANR	3977876	ExpressionStatement	OBJ_RELEASE ( Z_OBJ ( obj ) )	1390:2:44295:44318	3977582	12	True				
ANR	3977877	CallExpression	OBJ_RELEASE ( Z_OBJ ( obj ) )		3977582	0					
ANR	3977878	Callee	OBJ_RELEASE		3977582	0					
ANR	3977879	Identifier	OBJ_RELEASE		3977582	0					
ANR	3977880	ArgumentList	Z_OBJ ( obj )		3977582	1					
ANR	3977881	Argument	Z_OBJ ( obj )		3977582	0					
ANR	3977882	CallExpression	Z_OBJ ( obj )		3977582	0					
ANR	3977883	Callee	Z_OBJ		3977582	0					
ANR	3977884	Identifier	Z_OBJ		3977582	0					
ANR	3977885	ArgumentList	obj		3977582	1					
ANR	3977886	Argument	obj		3977582	0					
ANR	3977887	Identifier	obj		3977582	0					
ANR	3977888	ExpressionStatement	zval_ptr_dtor ( & z_copy )	1391:2:44322:44344	3977582	13	True				
ANR	3977889	CallExpression	zval_ptr_dtor ( & z_copy )		3977582	0					
ANR	3977890	Callee	zval_ptr_dtor		3977582	0					
ANR	3977891	Identifier	zval_ptr_dtor		3977582	0					
ANR	3977892	ArgumentList	& z_copy		3977582	1					
ANR	3977893	Argument	& z_copy		3977582	0					
ANR	3977894	UnaryOperationExpression	& z_copy		3977582	0					
ANR	3977895	UnaryOperator	&		3977582	0					
ANR	3977896	Identifier	z_copy		3977582	1					
ANR	3977897	ExpressionStatement	zval_ptr_dtor ( z )	1392:2:44348:44364	3977582	14	True				
ANR	3977898	CallExpression	zval_ptr_dtor ( z )		3977582	0					
ANR	3977899	Callee	zval_ptr_dtor		3977582	0					
ANR	3977900	Identifier	zval_ptr_dtor		3977582	0					
ANR	3977901	ArgumentList	z		3977582	1					
ANR	3977902	Argument	z		3977582	0					
ANR	3977903	Identifier	z		3977582	0					
ANR	3977904	ElseStatement	else		3977582	0					
ANR	3977905	CompoundStatement		39:8:942:942	3977582	0					
ANR	3977906	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	1394:2:44378:44456	3977582	0	True				
ANR	3977907	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		3977582	0					
ANR	3977908	Callee	zend_error		3977582	0					
ANR	3977909	Identifier	zend_error		3977582	0					
ANR	3977910	ArgumentList	E_WARNING		3977582	1					
ANR	3977911	Argument	E_WARNING		3977582	0					
ANR	3977912	Identifier	E_WARNING		3977582	0					
ANR	3977913	Argument	"""Attempt to increment/decrement property of non-object"""		3977582	1					
ANR	3977914	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		3977582	0					
ANR	3977915	ExpressionStatement	ZVAL_NULL ( result )	1395:2:44460:44477	3977582	1	True				
ANR	3977916	CallExpression	ZVAL_NULL ( result )		3977582	0					
ANR	3977917	Callee	ZVAL_NULL		3977582	0					
ANR	3977918	Identifier	ZVAL_NULL		3977582	0					
ANR	3977919	ArgumentList	result		3977582	1					
ANR	3977920	Argument	result		3977582	0					
ANR	3977921	Identifier	result		3977582	0					
ANR	3977922	ReturnType	static zend_never_inline void		3977582	1					
ANR	3977923	Identifier	zend_post_incdec_overloaded_property		3977582	2					
ANR	3977924	ParameterList	"zval * object , zval * property , void * * cache_slot , int inc , zval * result"		3977582	3					
ANR	3977925	Parameter	zval * object	1354:67:43359:43370	3977582	0	True				
ANR	3977926	ParameterType	zval *		3977582	0					
ANR	3977927	Identifier	object		3977582	1					
ANR	3977928	Parameter	zval * property	1354:81:43373:43386	3977582	1	True				
ANR	3977929	ParameterType	zval *		3977582	0					
ANR	3977930	Identifier	property		3977582	1					
ANR	3977931	Parameter	void * * cache_slot	1354:97:43389:43405	3977582	2	True				
ANR	3977932	ParameterType	void * *		3977582	0					
ANR	3977933	Identifier	cache_slot		3977582	1					
ANR	3977934	Parameter	int inc	1354:116:43408:43414	3977582	3	True				
ANR	3977935	ParameterType	int		3977582	0					
ANR	3977936	Identifier	inc		3977582	1					
ANR	3977937	Parameter	zval * result	1354:125:43417:43428	3977582	4	True				
ANR	3977938	ParameterType	zval *		3977582	0					
ANR	3977939	Identifier	result		3977582	1					
ANR	3977940	CFGEntryNode	ENTRY		3977582		True				
ANR	3977941	CFGExitNode	EXIT		3977582		True				
ANR	3977942	Symbol	exception		3977582						
ANR	3977943	Symbol	z_copy		3977582						
ANR	3977944	Symbol	rv		3977582						
ANR	3977945	Symbol	Z_OBJ_P		3977582						
ANR	3977946	Symbol	Z_OBJ_HT ( obj ) -> read_property		3977582						
ANR	3977947	Symbol	result		3977582						
ANR	3977948	Symbol	UNEXPECTED		3977582						
ANR	3977949	Symbol	E_WARNING		3977582						
ANR	3977950	Symbol	Z_OBJ		3977582						
ANR	3977951	Symbol	Z_OBJ_HT_P ( z ) -> get		3977582						
ANR	3977952	Symbol	& rv2		3977582						
ANR	3977953	Symbol	Z_OBJ_HT		3977582						
ANR	3977954	Symbol	IS_REFERENCE		3977582						
ANR	3977955	Symbol	property		3977582						
ANR	3977956	Symbol	& z_copy		3977582						
ANR	3977957	Symbol	& obj		3977582						
ANR	3977958	Symbol	value		3977582						
ANR	3977959	Symbol	BP_VAR_R		3977582						
ANR	3977960	Symbol	inc		3977582						
ANR	3977961	Symbol	cache_slot		3977582						
ANR	3977962	Symbol	Z_OBJ_HT_P ( object ) -> read_property		3977582						
ANR	3977963	Symbol	Z_OBJ_HT_P ( object ) -> write_property		3977582						
ANR	3977964	Symbol	EG		3977582						
ANR	3977965	Symbol	* Z_OBJ_HT		3977582						
ANR	3977966	Symbol	Z_TYPE_P		3977582						
ANR	3977967	Symbol	* Z_OBJ_HT_P		3977582						
ANR	3977968	Symbol	& rv		3977582						
ANR	3977969	Symbol	rv2		3977582						
ANR	3977970	Symbol	obj		3977582						
ANR	3977971	Symbol	Z_REFVAL_P		3977582						
ANR	3977972	Symbol	Z_OBJ_HT_P		3977582						
ANR	3977973	Symbol	z		3977582						
ANR	3977974	Symbol	IS_OBJECT		3977582						
ANR	3977975	Symbol	object		3977582						
ANR	3977976	Function	zend_pre_incdec_overloaded_property	1399:0:44485:45597							
ANR	3977977	FunctionDef	"zend_pre_incdec_overloaded_property (zval * object , zval * property , void * * cache_slot , int inc , zval * result)"		3977976	0					
ANR	3977978	CompoundStatement		1400:0:44623:45597	3977976	0					
ANR	3977979	IdentifierDeclStatement	zval rv ;	1401:1:44626:44633	3977976	0	True				
ANR	3977980	IdentifierDecl	rv		3977976	0					
ANR	3977981	IdentifierDeclType	zval		3977976	0					
ANR	3977982	Identifier	rv		3977976	1					
ANR	3977983	IfStatement	if ( Z_OBJ_HT_P ( object ) -> read_property && Z_OBJ_HT_P ( object ) -> write_property )		3977976	1					
ANR	3977984	Condition	Z_OBJ_HT_P ( object ) -> read_property && Z_OBJ_HT_P ( object ) -> write_property	1403:5:44641:44711	3977976	0	True				
ANR	3977985	AndExpression	Z_OBJ_HT_P ( object ) -> read_property && Z_OBJ_HT_P ( object ) -> write_property		3977976	0		&&			
ANR	3977986	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> read_property		3977976	0					
ANR	3977987	CallExpression	Z_OBJ_HT_P ( object )		3977976	0					
ANR	3977988	Callee	Z_OBJ_HT_P		3977976	0					
ANR	3977989	Identifier	Z_OBJ_HT_P		3977976	0					
ANR	3977990	ArgumentList	object		3977976	1					
ANR	3977991	Argument	object		3977976	0					
ANR	3977992	Identifier	object		3977976	0					
ANR	3977993	Identifier	read_property		3977976	1					
ANR	3977994	PtrMemberAccess	Z_OBJ_HT_P ( object ) -> write_property		3977976	1					
ANR	3977995	CallExpression	Z_OBJ_HT_P ( object )		3977976	0					
ANR	3977996	Callee	Z_OBJ_HT_P		3977976	0					
ANR	3977997	Identifier	Z_OBJ_HT_P		3977976	0					
ANR	3977998	ArgumentList	object		3977976	1					
ANR	3977999	Argument	object		3977976	0					
ANR	3978000	Identifier	object		3977976	0					
ANR	3978001	Identifier	write_property		3977976	1					
ANR	3978002	CompoundStatement		5:2:94:106	3977976	1					
ANR	3978003	IdentifierDeclStatement	"zval * z , obj ;"	1404:2:44718:44730	3977976	0	True				
ANR	3978004	IdentifierDecl	* z		3977976	0					
ANR	3978005	IdentifierDeclType	zval *		3977976	0					
ANR	3978006	Identifier	z		3977976	1					
ANR	3978007	IdentifierDecl	obj		3977976	1					
ANR	3978008	IdentifierDeclType	zval		3977976	0					
ANR	3978009	Identifier	obj		3977976	1					
ANR	3978010	ExpressionStatement	"ZVAL_OBJ ( & obj , Z_OBJ_P ( object ) )"	1406:2:44739:44770	3977976	1	True				
ANR	3978011	CallExpression	"ZVAL_OBJ ( & obj , Z_OBJ_P ( object ) )"		3977976	0					
ANR	3978012	Callee	ZVAL_OBJ		3977976	0					
ANR	3978013	Identifier	ZVAL_OBJ		3977976	0					
ANR	3978014	ArgumentList	& obj		3977976	1					
ANR	3978015	Argument	& obj		3977976	0					
ANR	3978016	UnaryOperationExpression	& obj		3977976	0					
ANR	3978017	UnaryOperator	&		3977976	0					
ANR	3978018	Identifier	obj		3977976	1					
ANR	3978019	Argument	Z_OBJ_P ( object )		3977976	1					
ANR	3978020	CallExpression	Z_OBJ_P ( object )		3977976	0					
ANR	3978021	Callee	Z_OBJ_P		3977976	0					
ANR	3978022	Identifier	Z_OBJ_P		3977976	0					
ANR	3978023	ArgumentList	object		3977976	1					
ANR	3978024	Argument	object		3977976	0					
ANR	3978025	Identifier	object		3977976	0					
ANR	3978026	ExpressionStatement	Z_ADDREF ( obj )	1407:2:44774:44787	3977976	2	True				
ANR	3978027	CallExpression	Z_ADDREF ( obj )		3977976	0					
ANR	3978028	Callee	Z_ADDREF		3977976	0					
ANR	3978029	Identifier	Z_ADDREF		3977976	0					
ANR	3978030	ArgumentList	obj		3977976	1					
ANR	3978031	Argument	obj		3977976	0					
ANR	3978032	Identifier	obj		3977976	0					
ANR	3978033	ExpressionStatement	"z = Z_OBJ_HT ( obj ) -> read_property ( & obj , property , BP_VAR_R , cache_slot , & rv )"	1408:2:44791:44866	3977976	3	True				
ANR	3978034	AssignmentExpression	"z = Z_OBJ_HT ( obj ) -> read_property ( & obj , property , BP_VAR_R , cache_slot , & rv )"		3977976	0		=			
ANR	3978035	Identifier	z		3977976	0					
ANR	3978036	CallExpression	"Z_OBJ_HT ( obj ) -> read_property ( & obj , property , BP_VAR_R , cache_slot , & rv )"		3977976	1					
ANR	3978037	Callee	Z_OBJ_HT ( obj ) -> read_property		3977976	0					
ANR	3978038	PtrMemberAccess	Z_OBJ_HT ( obj ) -> read_property		3977976	0					
ANR	3978039	CallExpression	Z_OBJ_HT ( obj )		3977976	0					
ANR	3978040	Callee	Z_OBJ_HT		3977976	0					
ANR	3978041	Identifier	Z_OBJ_HT		3977976	0					
ANR	3978042	ArgumentList	obj		3977976	1					
ANR	3978043	Argument	obj		3977976	0					
ANR	3978044	Identifier	obj		3977976	0					
ANR	3978045	Identifier	read_property		3977976	1					
ANR	3978046	ArgumentList	& obj		3977976	1					
ANR	3978047	Argument	& obj		3977976	0					
ANR	3978048	UnaryOperationExpression	& obj		3977976	0					
ANR	3978049	UnaryOperator	&		3977976	0					
ANR	3978050	Identifier	obj		3977976	1					
ANR	3978051	Argument	property		3977976	1					
ANR	3978052	Identifier	property		3977976	0					
ANR	3978053	Argument	BP_VAR_R		3977976	2					
ANR	3978054	Identifier	BP_VAR_R		3977976	0					
ANR	3978055	Argument	cache_slot		3977976	3					
ANR	3978056	Identifier	cache_slot		3977976	0					
ANR	3978057	Argument	& rv		3977976	4					
ANR	3978058	UnaryOperationExpression	& rv		3977976	0					
ANR	3978059	UnaryOperator	&		3977976	0					
ANR	3978060	Identifier	rv		3977976	1					
ANR	3978061	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		3977976	4					
ANR	3978062	Condition	UNEXPECTED ( EG ( exception ) )	1409:6:44874:44898	3977976	0	True				
ANR	3978063	CallExpression	UNEXPECTED ( EG ( exception ) )		3977976	0					
ANR	3978064	Callee	UNEXPECTED		3977976	0					
ANR	3978065	Identifier	UNEXPECTED		3977976	0					
ANR	3978066	ArgumentList	EG ( exception )		3977976	1					
ANR	3978067	Argument	EG ( exception )		3977976	0					
ANR	3978068	CallExpression	EG ( exception )		3977976	0					
ANR	3978069	Callee	EG		3977976	0					
ANR	3978070	Identifier	EG		3977976	0					
ANR	3978071	ArgumentList	exception		3977976	1					
ANR	3978072	Argument	exception		3977976	0					
ANR	3978073	Identifier	exception		3977976	0					
ANR	3978074	CompoundStatement		10:33:277:277	3977976	1					
ANR	3978075	ExpressionStatement	OBJ_RELEASE ( Z_OBJ ( obj ) )	1410:3:44906:44929	3977976	0	True				
ANR	3978076	CallExpression	OBJ_RELEASE ( Z_OBJ ( obj ) )		3977976	0					
ANR	3978077	Callee	OBJ_RELEASE		3977976	0					
ANR	3978078	Identifier	OBJ_RELEASE		3977976	0					
ANR	3978079	ArgumentList	Z_OBJ ( obj )		3977976	1					
ANR	3978080	Argument	Z_OBJ ( obj )		3977976	0					
ANR	3978081	CallExpression	Z_OBJ ( obj )		3977976	0					
ANR	3978082	Callee	Z_OBJ		3977976	0					
ANR	3978083	Identifier	Z_OBJ		3977976	0					
ANR	3978084	ArgumentList	obj		3977976	1					
ANR	3978085	Argument	obj		3977976	0					
ANR	3978086	Identifier	obj		3977976	0					
ANR	3978087	ReturnStatement	return ;	1411:3:44934:44940	3977976	1	True				
ANR	3978088	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( z ) == IS_OBJECT ) && Z_OBJ_HT_P ( z ) -> get )		3977976	5					
ANR	3978089	Condition	UNEXPECTED ( Z_TYPE_P ( z ) == IS_OBJECT ) && Z_OBJ_HT_P ( z ) -> get	1414:6:44953:45010	3977976	0	True				
ANR	3978090	AndExpression	UNEXPECTED ( Z_TYPE_P ( z ) == IS_OBJECT ) && Z_OBJ_HT_P ( z ) -> get		3977976	0		&&			
ANR	3978091	CallExpression	UNEXPECTED ( Z_TYPE_P ( z ) == IS_OBJECT )		3977976	0					
ANR	3978092	Callee	UNEXPECTED		3977976	0					
ANR	3978093	Identifier	UNEXPECTED		3977976	0					
ANR	3978094	ArgumentList	Z_TYPE_P ( z ) == IS_OBJECT		3977976	1					
ANR	3978095	Argument	Z_TYPE_P ( z ) == IS_OBJECT		3977976	0					
ANR	3978096	EqualityExpression	Z_TYPE_P ( z ) == IS_OBJECT		3977976	0		==			
ANR	3978097	CallExpression	Z_TYPE_P ( z )		3977976	0					
ANR	3978098	Callee	Z_TYPE_P		3977976	0					
ANR	3978099	Identifier	Z_TYPE_P		3977976	0					
ANR	3978100	ArgumentList	z		3977976	1					
ANR	3978101	Argument	z		3977976	0					
ANR	3978102	Identifier	z		3977976	0					
ANR	3978103	Identifier	IS_OBJECT		3977976	1					
ANR	3978104	PtrMemberAccess	Z_OBJ_HT_P ( z ) -> get		3977976	1					
ANR	3978105	CallExpression	Z_OBJ_HT_P ( z )		3977976	0					
ANR	3978106	Callee	Z_OBJ_HT_P		3977976	0					
ANR	3978107	Identifier	Z_OBJ_HT_P		3977976	0					
ANR	3978108	ArgumentList	z		3977976	1					
ANR	3978109	Argument	z		3977976	0					
ANR	3978110	Identifier	z		3977976	0					
ANR	3978111	Identifier	get		3977976	1					
ANR	3978112	CompoundStatement		17:3:407:448	3977976	1					
ANR	3978113	IdentifierDeclStatement	zval rv2 ;	1415:3:45018:45026	3977976	0	True				
ANR	3978114	IdentifierDecl	rv2		3977976	0					
ANR	3978115	IdentifierDeclType	zval		3977976	0					
ANR	3978116	Identifier	rv2		3977976	1					
ANR	3978117	IdentifierDeclStatement	"zval * value = Z_OBJ_HT_P ( z ) -> get ( z , & rv2 ) ;"	1416:3:45031:45072	3977976	1	True				
ANR	3978118	IdentifierDecl	"* value = Z_OBJ_HT_P ( z ) -> get ( z , & rv2 )"		3977976	0					
ANR	3978119	IdentifierDeclType	zval *		3977976	0					
ANR	3978120	Identifier	value		3977976	1					
ANR	3978121	AssignmentExpression	"* value = Z_OBJ_HT_P ( z ) -> get ( z , & rv2 )"		3977976	2		=			
ANR	3978122	Identifier	value		3977976	0					
ANR	3978123	CallExpression	"Z_OBJ_HT_P ( z ) -> get ( z , & rv2 )"		3977976	1					
ANR	3978124	Callee	Z_OBJ_HT_P ( z ) -> get		3977976	0					
ANR	3978125	PtrMemberAccess	Z_OBJ_HT_P ( z ) -> get		3977976	0					
ANR	3978126	CallExpression	Z_OBJ_HT_P ( z )		3977976	0					
ANR	3978127	Callee	Z_OBJ_HT_P		3977976	0					
ANR	3978128	Identifier	Z_OBJ_HT_P		3977976	0					
ANR	3978129	ArgumentList	z		3977976	1					
ANR	3978130	Argument	z		3977976	0					
ANR	3978131	Identifier	z		3977976	0					
ANR	3978132	Identifier	get		3977976	1					
ANR	3978133	ArgumentList	z		3977976	1					
ANR	3978134	Argument	z		3977976	0					
ANR	3978135	Identifier	z		3977976	0					
ANR	3978136	Argument	& rv2		3977976	1					
ANR	3978137	UnaryOperationExpression	& rv2		3977976	0					
ANR	3978138	UnaryOperator	&		3977976	0					
ANR	3978139	Identifier	rv2		3977976	1					
ANR	3978140	IfStatement	if ( z == & rv )		3977976	2					
ANR	3978141	Condition	z == & rv	1418:7:45082:45089	3977976	0	True				
ANR	3978142	EqualityExpression	z == & rv		3977976	0		==			
ANR	3978143	Identifier	z		3977976	0					
ANR	3978144	UnaryOperationExpression	& rv		3977976	1					
ANR	3978145	UnaryOperator	&		3977976	0					
ANR	3978146	Identifier	rv		3977976	1					
ANR	3978147	CompoundStatement		19:17:468:468	3977976	1					
ANR	3978148	ExpressionStatement	zval_ptr_dtor ( & rv )	1419:4:45098:45116	3977976	0	True				
ANR	3978149	CallExpression	zval_ptr_dtor ( & rv )		3977976	0					
ANR	3978150	Callee	zval_ptr_dtor		3977976	0					
ANR	3978151	Identifier	zval_ptr_dtor		3977976	0					
ANR	3978152	ArgumentList	& rv		3977976	1					
ANR	3978153	Argument	& rv		3977976	0					
ANR	3978154	UnaryOperationExpression	& rv		3977976	0					
ANR	3978155	UnaryOperator	&		3977976	0					
ANR	3978156	Identifier	rv		3977976	1					
ANR	3978157	ExpressionStatement	"ZVAL_COPY_VALUE ( z , value )"	1421:3:45126:45151	3977976	3	True				
ANR	3978158	CallExpression	"ZVAL_COPY_VALUE ( z , value )"		3977976	0					
ANR	3978159	Callee	ZVAL_COPY_VALUE		3977976	0					
ANR	3978160	Identifier	ZVAL_COPY_VALUE		3977976	0					
ANR	3978161	ArgumentList	z		3977976	1					
ANR	3978162	Argument	z		3977976	0					
ANR	3978163	Identifier	z		3977976	0					
ANR	3978164	Argument	value		3977976	1					
ANR	3978165	Identifier	value		3977976	0					
ANR	3978166	ExpressionStatement	ZVAL_DEREF ( z )	1423:2:45159:45172	3977976	6	True				
ANR	3978167	CallExpression	ZVAL_DEREF ( z )		3977976	0					
ANR	3978168	Callee	ZVAL_DEREF		3977976	0					
ANR	3978169	Identifier	ZVAL_DEREF		3977976	0					
ANR	3978170	ArgumentList	z		3977976	1					
ANR	3978171	Argument	z		3977976	0					
ANR	3978172	Identifier	z		3977976	0					
ANR	3978173	ExpressionStatement	SEPARATE_ZVAL_NOREF ( z )	1424:2:45176:45198	3977976	7	True				
ANR	3978174	CallExpression	SEPARATE_ZVAL_NOREF ( z )		3977976	0					
ANR	3978175	Callee	SEPARATE_ZVAL_NOREF		3977976	0					
ANR	3978176	Identifier	SEPARATE_ZVAL_NOREF		3977976	0					
ANR	3978177	ArgumentList	z		3977976	1					
ANR	3978178	Argument	z		3977976	0					
ANR	3978179	Identifier	z		3977976	0					
ANR	3978180	IfStatement	if ( inc )		3977976	8					
ANR	3978181	Condition	inc	1425:6:45206:45208	3977976	0	True				
ANR	3978182	Identifier	inc		3977976	0					
ANR	3978183	CompoundStatement		26:11:587:587	3977976	1					
ANR	3978184	ExpressionStatement	increment_function ( z )	1426:3:45216:45237	3977976	0	True				
ANR	3978185	CallExpression	increment_function ( z )		3977976	0					
ANR	3978186	Callee	increment_function		3977976	0					
ANR	3978187	Identifier	increment_function		3977976	0					
ANR	3978188	ArgumentList	z		3977976	1					
ANR	3978189	Argument	z		3977976	0					
ANR	3978190	Identifier	z		3977976	0					
ANR	3978191	ElseStatement	else		3977976	0					
ANR	3978192	CompoundStatement		28:9:624:624	3977976	0					
ANR	3978193	ExpressionStatement	decrement_function ( z )	1428:3:45253:45274	3977976	0	True				
ANR	3978194	CallExpression	decrement_function ( z )		3977976	0					
ANR	3978195	Callee	decrement_function		3977976	0					
ANR	3978196	Identifier	decrement_function		3977976	0					
ANR	3978197	ArgumentList	z		3977976	1					
ANR	3978198	Argument	z		3977976	0					
ANR	3978199	Identifier	z		3977976	0					
ANR	3978200	IfStatement	if ( UNEXPECTED ( result ) )		3977976	9					
ANR	3978201	Condition	UNEXPECTED ( result )	1430:6:45286:45303	3977976	0	True				
ANR	3978202	CallExpression	UNEXPECTED ( result )		3977976	0					
ANR	3978203	Callee	UNEXPECTED		3977976	0					
ANR	3978204	Identifier	UNEXPECTED		3977976	0					
ANR	3978205	ArgumentList	result		3977976	1					
ANR	3978206	Argument	result		3977976	0					
ANR	3978207	Identifier	result		3977976	0					
ANR	3978208	CompoundStatement		31:26:682:682	3977976	1					
ANR	3978209	ExpressionStatement	"ZVAL_COPY ( result , z )"	1431:3:45311:45331	3977976	0	True				
ANR	3978210	CallExpression	"ZVAL_COPY ( result , z )"		3977976	0					
ANR	3978211	Callee	ZVAL_COPY		3977976	0					
ANR	3978212	Identifier	ZVAL_COPY		3977976	0					
ANR	3978213	ArgumentList	result		3977976	1					
ANR	3978214	Argument	result		3977976	0					
ANR	3978215	Identifier	result		3977976	0					
ANR	3978216	Argument	z		3977976	1					
ANR	3978217	Identifier	z		3977976	0					
ANR	3978218	ExpressionStatement	"Z_OBJ_HT ( obj ) -> write_property ( & obj , property , z , cache_slot )"	1433:2:45339:45399	3977976	10	True				
ANR	3978219	CallExpression	"Z_OBJ_HT ( obj ) -> write_property ( & obj , property , z , cache_slot )"		3977976	0					
ANR	3978220	Callee	Z_OBJ_HT ( obj ) -> write_property		3977976	0					
ANR	3978221	PtrMemberAccess	Z_OBJ_HT ( obj ) -> write_property		3977976	0					
ANR	3978222	CallExpression	Z_OBJ_HT ( obj )		3977976	0					
ANR	3978223	Callee	Z_OBJ_HT		3977976	0					
ANR	3978224	Identifier	Z_OBJ_HT		3977976	0					
ANR	3978225	ArgumentList	obj		3977976	1					
ANR	3978226	Argument	obj		3977976	0					
ANR	3978227	Identifier	obj		3977976	0					
ANR	3978228	Identifier	write_property		3977976	1					
ANR	3978229	ArgumentList	& obj		3977976	1					
ANR	3978230	Argument	& obj		3977976	0					
ANR	3978231	UnaryOperationExpression	& obj		3977976	0					
ANR	3978232	UnaryOperator	&		3977976	0					
ANR	3978233	Identifier	obj		3977976	1					
ANR	3978234	Argument	property		3977976	1					
ANR	3978235	Identifier	property		3977976	0					
ANR	3978236	Argument	z		3977976	2					
ANR	3978237	Identifier	z		3977976	0					
ANR	3978238	Argument	cache_slot		3977976	3					
ANR	3978239	Identifier	cache_slot		3977976	0					
ANR	3978240	ExpressionStatement	OBJ_RELEASE ( Z_OBJ ( obj ) )	1434:2:45403:45426	3977976	11	True				
ANR	3978241	CallExpression	OBJ_RELEASE ( Z_OBJ ( obj ) )		3977976	0					
ANR	3978242	Callee	OBJ_RELEASE		3977976	0					
ANR	3978243	Identifier	OBJ_RELEASE		3977976	0					
ANR	3978244	ArgumentList	Z_OBJ ( obj )		3977976	1					
ANR	3978245	Argument	Z_OBJ ( obj )		3977976	0					
ANR	3978246	CallExpression	Z_OBJ ( obj )		3977976	0					
ANR	3978247	Callee	Z_OBJ		3977976	0					
ANR	3978248	Identifier	Z_OBJ		3977976	0					
ANR	3978249	ArgumentList	obj		3977976	1					
ANR	3978250	Argument	obj		3977976	0					
ANR	3978251	Identifier	obj		3977976	0					
ANR	3978252	ExpressionStatement	zval_ptr_dtor ( z )	1435:2:45430:45446	3977976	12	True				
ANR	3978253	CallExpression	zval_ptr_dtor ( z )		3977976	0					
ANR	3978254	Callee	zval_ptr_dtor		3977976	0					
ANR	3978255	Identifier	zval_ptr_dtor		3977976	0					
ANR	3978256	ArgumentList	z		3977976	1					
ANR	3978257	Argument	z		3977976	0					
ANR	3978258	Identifier	z		3977976	0					
ANR	3978259	ElseStatement	else		3977976	0					
ANR	3978260	CompoundStatement		37:8:832:832	3977976	0					
ANR	3978261	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"	1437:2:45460:45538	3977976	0	True				
ANR	3978262	CallExpression	"zend_error ( E_WARNING , ""Attempt to increment/decrement property of non-object"" )"		3977976	0					
ANR	3978263	Callee	zend_error		3977976	0					
ANR	3978264	Identifier	zend_error		3977976	0					
ANR	3978265	ArgumentList	E_WARNING		3977976	1					
ANR	3978266	Argument	E_WARNING		3977976	0					
ANR	3978267	Identifier	E_WARNING		3977976	0					
ANR	3978268	Argument	"""Attempt to increment/decrement property of non-object"""		3977976	1					
ANR	3978269	PrimaryExpression	"""Attempt to increment/decrement property of non-object"""		3977976	0					
ANR	3978270	IfStatement	if ( UNEXPECTED ( result ) )		3977976	1					
ANR	3978271	Condition	UNEXPECTED ( result )	1438:6:45546:45563	3977976	0	True				
ANR	3978272	CallExpression	UNEXPECTED ( result )		3977976	0					
ANR	3978273	Callee	UNEXPECTED		3977976	0					
ANR	3978274	Identifier	UNEXPECTED		3977976	0					
ANR	3978275	ArgumentList	result		3977976	1					
ANR	3978276	Argument	result		3977976	0					
ANR	3978277	Identifier	result		3977976	0					
ANR	3978278	CompoundStatement		39:26:942:942	3977976	1					
ANR	3978279	ExpressionStatement	ZVAL_NULL ( result )	1439:3:45571:45588	3977976	0	True				
ANR	3978280	CallExpression	ZVAL_NULL ( result )		3977976	0					
ANR	3978281	Callee	ZVAL_NULL		3977976	0					
ANR	3978282	Identifier	ZVAL_NULL		3977976	0					
ANR	3978283	ArgumentList	result		3977976	1					
ANR	3978284	Argument	result		3977976	0					
ANR	3978285	Identifier	result		3977976	0					
ANR	3978286	ReturnType	static zend_never_inline void		3977976	1					
ANR	3978287	Identifier	zend_pre_incdec_overloaded_property		3977976	2					
ANR	3978288	ParameterList	"zval * object , zval * property , void * * cache_slot , int inc , zval * result"		3977976	3					
ANR	3978289	Parameter	zval * object	1399:66:44551:44562	3977976	0	True				
ANR	3978290	ParameterType	zval *		3977976	0					
ANR	3978291	Identifier	object		3977976	1					
ANR	3978292	Parameter	zval * property	1399:80:44565:44578	3977976	1	True				
ANR	3978293	ParameterType	zval *		3977976	0					
ANR	3978294	Identifier	property		3977976	1					
ANR	3978295	Parameter	void * * cache_slot	1399:96:44581:44597	3977976	2	True				
ANR	3978296	ParameterType	void * *		3977976	0					
ANR	3978297	Identifier	cache_slot		3977976	1					
ANR	3978298	Parameter	int inc	1399:115:44600:44606	3977976	3	True				
ANR	3978299	ParameterType	int		3977976	0					
ANR	3978300	Identifier	inc		3977976	1					
ANR	3978301	Parameter	zval * result	1399:124:44609:44620	3977976	4	True				
ANR	3978302	ParameterType	zval *		3977976	0					
ANR	3978303	Identifier	result		3977976	1					
ANR	3978304	CFGEntryNode	ENTRY		3977976		True				
ANR	3978305	CFGExitNode	EXIT		3977976		True				
ANR	3978306	Symbol	exception		3977976						
ANR	3978307	Symbol	rv		3977976						
ANR	3978308	Symbol	Z_OBJ_P		3977976						
ANR	3978309	Symbol	Z_OBJ_HT ( obj ) -> read_property		3977976						
ANR	3978310	Symbol	result		3977976						
ANR	3978311	Symbol	UNEXPECTED		3977976						
ANR	3978312	Symbol	E_WARNING		3977976						
ANR	3978313	Symbol	Z_OBJ		3977976						
ANR	3978314	Symbol	Z_OBJ_HT_P ( z ) -> get		3977976						
ANR	3978315	Symbol	& rv2		3977976						
ANR	3978316	Symbol	Z_OBJ_HT		3977976						
ANR	3978317	Symbol	property		3977976						
ANR	3978318	Symbol	& obj		3977976						
ANR	3978319	Symbol	value		3977976						
ANR	3978320	Symbol	BP_VAR_R		3977976						
ANR	3978321	Symbol	inc		3977976						
ANR	3978322	Symbol	cache_slot		3977976						
ANR	3978323	Symbol	Z_OBJ_HT_P ( object ) -> read_property		3977976						
ANR	3978324	Symbol	Z_OBJ_HT_P ( object ) -> write_property		3977976						
ANR	3978325	Symbol	EG		3977976						
ANR	3978326	Symbol	* Z_OBJ_HT		3977976						
ANR	3978327	Symbol	Z_TYPE_P		3977976						
ANR	3978328	Symbol	* Z_OBJ_HT_P		3977976						
ANR	3978329	Symbol	& rv		3977976						
ANR	3978330	Symbol	rv2		3977976						
ANR	3978331	Symbol	obj		3977976						
ANR	3978332	Symbol	Z_OBJ_HT_P		3977976						
ANR	3978333	Symbol	z		3977976						
ANR	3978334	Symbol	IS_OBJECT		3977976						
ANR	3978335	Symbol	object		3977976						
ANR	3978336	Function	zend_assign_op_overloaded_property	1444:0:45600:46647							
ANR	3978337	FunctionDef	"zend_assign_op_overloaded_property (zval * object , zval * property , void * * cache_slot , zval * value , binary_op_type binary_op , zval * result)"		3978336	0					
ANR	3978338	CompoundStatement		1445:0:45767:46647	3978336	0					
ANR	3978339	IdentifierDeclStatement	zval * z ;	1446:1:45770:45777	3978336	0	True				
ANR	3978340	IdentifierDecl	* z		3978336	0					
ANR	3978341	IdentifierDeclType	zval *		3978336	0					
ANR	3978342	Identifier	z		3978336	1					
ANR	3978343	IdentifierDeclStatement	"zval rv , obj ;"	1447:1:45780:45792	3978336	1	True				
ANR	3978344	IdentifierDecl	rv		3978336	0					
ANR	3978345	IdentifierDeclType	zval		3978336	0					
ANR	3978346	Identifier	rv		3978336	1					
ANR	3978347	IdentifierDecl	obj		3978336	1					
ANR	3978348	IdentifierDeclType	zval		3978336	0					
ANR	3978349	Identifier	obj		3978336	1					
ANR	3978350	IdentifierDeclStatement	zval * zptr ;	1448:1:45795:45805	3978336	2	True				
ANR	3978351	IdentifierDecl	* zptr		3978336	0					
ANR	3978352	IdentifierDeclType	zval *		3978336	0					
ANR	3978353	Identifier	zptr		3978336	1					
ANR	3978354	ExpressionStatement	"ZVAL_OBJ ( & obj , Z_OBJ_P ( object ) )"	1450:1:45809:45840	3978336	3	True				
ANR	3978355	CallExpression	"ZVAL_OBJ ( & obj , Z_OBJ_P ( object ) )"		3978336	0					
ANR	3978356	Callee	ZVAL_OBJ		3978336	0					
ANR	3978357	Identifier	ZVAL_OBJ		3978336	0					
ANR	3978358	ArgumentList	& obj		3978336	1					
ANR	3978359	Argument	& obj		3978336	0					
ANR	3978360	UnaryOperationExpression	& obj		3978336	0					
ANR	3978361	UnaryOperator	&		3978336	0					
ANR	3978362	Identifier	obj		3978336	1					
ANR	3978363	Argument	Z_OBJ_P ( object )		3978336	1					
ANR	3978364	CallExpression	Z_OBJ_P ( object )		3978336	0					
ANR	3978365	Callee	Z_OBJ_P		3978336	0					
ANR	3978366	Identifier	Z_OBJ_P		3978336	0					
ANR	3978367	ArgumentList	object		3978336	1					
ANR	3978368	Argument	object		3978336	0					
ANR	3978369	Identifier	object		3978336	0					
ANR	3978370	ExpressionStatement	Z_ADDREF ( obj )	1451:1:45843:45856	3978336	4	True				
ANR	3978371	CallExpression	Z_ADDREF ( obj )		3978336	0					
ANR	3978372	Callee	Z_ADDREF		3978336	0					
ANR	3978373	Identifier	Z_ADDREF		3978336	0					
ANR	3978374	ArgumentList	obj		3978336	1					
ANR	3978375	Argument	obj		3978336	0					
ANR	3978376	Identifier	obj		3978336	0					
ANR	3978377	IfStatement	if ( EXPECTED ( Z_OBJ_HT ( obj ) -> read_property ) )		3978336	5					
ANR	3978378	Condition	EXPECTED ( Z_OBJ_HT ( obj ) -> read_property )	1452:5:45863:45900	3978336	0	True				
ANR	3978379	CallExpression	EXPECTED ( Z_OBJ_HT ( obj ) -> read_property )		3978336	0					
ANR	3978380	Callee	EXPECTED		3978336	0					
ANR	3978381	Identifier	EXPECTED		3978336	0					
ANR	3978382	ArgumentList	Z_OBJ_HT ( obj ) -> read_property		3978336	1					
ANR	3978383	Argument	Z_OBJ_HT ( obj ) -> read_property		3978336	0					
ANR	3978384	PtrMemberAccess	Z_OBJ_HT ( obj ) -> read_property		3978336	0					
ANR	3978385	CallExpression	Z_OBJ_HT ( obj )		3978336	0					
ANR	3978386	Callee	Z_OBJ_HT		3978336	0					
ANR	3978387	Identifier	Z_OBJ_HT		3978336	0					
ANR	3978388	ArgumentList	obj		3978336	1					
ANR	3978389	Argument	obj		3978336	0					
ANR	3978390	Identifier	obj		3978336	0					
ANR	3978391	Identifier	read_property		3978336	1					
ANR	3978392	CompoundStatement		8:45:135:135	3978336	1					
ANR	3978393	ExpressionStatement	"z = Z_OBJ_HT ( obj ) -> read_property ( & obj , property , BP_VAR_R , cache_slot , & rv )"	1453:2:45907:45982	3978336	0	True				
ANR	3978394	AssignmentExpression	"z = Z_OBJ_HT ( obj ) -> read_property ( & obj , property , BP_VAR_R , cache_slot , & rv )"		3978336	0		=			
ANR	3978395	Identifier	z		3978336	0					
ANR	3978396	CallExpression	"Z_OBJ_HT ( obj ) -> read_property ( & obj , property , BP_VAR_R , cache_slot , & rv )"		3978336	1					
ANR	3978397	Callee	Z_OBJ_HT ( obj ) -> read_property		3978336	0					
ANR	3978398	PtrMemberAccess	Z_OBJ_HT ( obj ) -> read_property		3978336	0					
ANR	3978399	CallExpression	Z_OBJ_HT ( obj )		3978336	0					
ANR	3978400	Callee	Z_OBJ_HT		3978336	0					
ANR	3978401	Identifier	Z_OBJ_HT		3978336	0					
ANR	3978402	ArgumentList	obj		3978336	1					
ANR	3978403	Argument	obj		3978336	0					
ANR	3978404	Identifier	obj		3978336	0					
ANR	3978405	Identifier	read_property		3978336	1					
ANR	3978406	ArgumentList	& obj		3978336	1					
ANR	3978407	Argument	& obj		3978336	0					
ANR	3978408	UnaryOperationExpression	& obj		3978336	0					
ANR	3978409	UnaryOperator	&		3978336	0					
ANR	3978410	Identifier	obj		3978336	1					
ANR	3978411	Argument	property		3978336	1					
ANR	3978412	Identifier	property		3978336	0					
ANR	3978413	Argument	BP_VAR_R		3978336	2					
ANR	3978414	Identifier	BP_VAR_R		3978336	0					
ANR	3978415	Argument	cache_slot		3978336	3					
ANR	3978416	Identifier	cache_slot		3978336	0					
ANR	3978417	Argument	& rv		3978336	4					
ANR	3978418	UnaryOperationExpression	& rv		3978336	0					
ANR	3978419	UnaryOperator	&		3978336	0					
ANR	3978420	Identifier	rv		3978336	1					
ANR	3978421	IfStatement	if ( UNEXPECTED ( EG ( exception ) ) )		3978336	1					
ANR	3978422	Condition	UNEXPECTED ( EG ( exception ) )	1454:6:45990:46014	3978336	0	True				
ANR	3978423	CallExpression	UNEXPECTED ( EG ( exception ) )		3978336	0					
ANR	3978424	Callee	UNEXPECTED		3978336	0					
ANR	3978425	Identifier	UNEXPECTED		3978336	0					
ANR	3978426	ArgumentList	EG ( exception )		3978336	1					
ANR	3978427	Argument	EG ( exception )		3978336	0					
ANR	3978428	CallExpression	EG ( exception )		3978336	0					
ANR	3978429	Callee	EG		3978336	0					
ANR	3978430	Identifier	EG		3978336	0					
ANR	3978431	ArgumentList	exception		3978336	1					
ANR	3978432	Argument	exception		3978336	0					
ANR	3978433	Identifier	exception		3978336	0					
ANR	3978434	CompoundStatement		10:33:249:249	3978336	1					
ANR	3978435	ExpressionStatement	OBJ_RELEASE ( Z_OBJ ( obj ) )	1455:3:46022:46045	3978336	0	True				
ANR	3978436	CallExpression	OBJ_RELEASE ( Z_OBJ ( obj ) )		3978336	0					
ANR	3978437	Callee	OBJ_RELEASE		3978336	0					
ANR	3978438	Identifier	OBJ_RELEASE		3978336	0					
ANR	3978439	ArgumentList	Z_OBJ ( obj )		3978336	1					
ANR	3978440	Argument	Z_OBJ ( obj )		3978336	0					
ANR	3978441	CallExpression	Z_OBJ ( obj )		3978336	0					
ANR	3978442	Callee	Z_OBJ		3978336	0					
ANR	3978443	Identifier	Z_OBJ		3978336	0					
ANR	3978444	ArgumentList	obj		3978336	1					
ANR	3978445	Argument	obj		3978336	0					
ANR	3978446	Identifier	obj		3978336	0					
ANR	3978447	ReturnStatement	return ;	1456:3:46050:46056	3978336	1	True				
ANR	3978448	IfStatement	if ( Z_TYPE_P ( z ) == IS_OBJECT && Z_OBJ_HT_P ( z ) -> get )		3978336	2					
ANR	3978449	Condition	Z_TYPE_P ( z ) == IS_OBJECT && Z_OBJ_HT_P ( z ) -> get	1458:6:46068:46113	3978336	0	True				
ANR	3978450	AndExpression	Z_TYPE_P ( z ) == IS_OBJECT && Z_OBJ_HT_P ( z ) -> get		3978336	0		&&			
ANR	3978451	EqualityExpression	Z_TYPE_P ( z ) == IS_OBJECT		3978336	0		==			
ANR	3978452	CallExpression	Z_TYPE_P ( z )		3978336	0					
ANR	3978453	Callee	Z_TYPE_P		3978336	0					
ANR	3978454	Identifier	Z_TYPE_P		3978336	0					
ANR	3978455	ArgumentList	z		3978336	1					
ANR	3978456	Argument	z		3978336	0					
ANR	3978457	Identifier	z		3978336	0					
ANR	3978458	Identifier	IS_OBJECT		3978336	1					
ANR	3978459	PtrMemberAccess	Z_OBJ_HT_P ( z ) -> get		3978336	1					
ANR	3978460	CallExpression	Z_OBJ_HT_P ( z )		3978336	0					
ANR	3978461	Callee	Z_OBJ_HT_P		3978336	0					
ANR	3978462	Identifier	Z_OBJ_HT_P		3978336	0					
ANR	3978463	ArgumentList	z		3978336	1					
ANR	3978464	Argument	z		3978336	0					
ANR	3978465	Identifier	z		3978336	0					
ANR	3978466	Identifier	get		3978336	1					
ANR	3978467	CompoundStatement		16:3:366:407	3978336	1					
ANR	3978468	IdentifierDeclStatement	zval rv2 ;	1459:3:46121:46129	3978336	0	True				
ANR	3978469	IdentifierDecl	rv2		3978336	0					
ANR	3978470	IdentifierDeclType	zval		3978336	0					
ANR	3978471	Identifier	rv2		3978336	1					
ANR	3978472	IdentifierDeclStatement	"zval * value = Z_OBJ_HT_P ( z ) -> get ( z , & rv2 ) ;"	1460:3:46134:46175	3978336	1	True				
ANR	3978473	IdentifierDecl	"* value = Z_OBJ_HT_P ( z ) -> get ( z , & rv2 )"		3978336	0					
ANR	3978474	IdentifierDeclType	zval *		3978336	0					
ANR	3978475	Identifier	value		3978336	1					
ANR	3978476	AssignmentExpression	"* value = Z_OBJ_HT_P ( z ) -> get ( z , & rv2 )"		3978336	2		=			
ANR	3978477	Identifier	value		3978336	0					
ANR	3978478	CallExpression	"Z_OBJ_HT_P ( z ) -> get ( z , & rv2 )"		3978336	1					
ANR	3978479	Callee	Z_OBJ_HT_P ( z ) -> get		3978336	0					
ANR	3978480	PtrMemberAccess	Z_OBJ_HT_P ( z ) -> get		3978336	0					
ANR	3978481	CallExpression	Z_OBJ_HT_P ( z )		3978336	0					
ANR	3978482	Callee	Z_OBJ_HT_P		3978336	0					
ANR	3978483	Identifier	Z_OBJ_HT_P		3978336	0					
ANR	3978484	ArgumentList	z		3978336	1					
ANR	3978485	Argument	z		3978336	0					
ANR	3978486	Identifier	z		3978336	0					
ANR	3978487	Identifier	get		3978336	1					
ANR	3978488	ArgumentList	z		3978336	1					
ANR	3978489	Argument	z		3978336	0					
ANR	3978490	Identifier	z		3978336	0					
ANR	3978491	Argument	& rv2		3978336	1					
ANR	3978492	UnaryOperationExpression	& rv2		3978336	0					
ANR	3978493	UnaryOperator	&		3978336	0					
ANR	3978494	Identifier	rv2		3978336	1					
ANR	3978495	IfStatement	if ( z == & rv )		3978336	2					
ANR	3978496	Condition	z == & rv	1462:7:46185:46192	3978336	0	True				
ANR	3978497	EqualityExpression	z == & rv		3978336	0		==			
ANR	3978498	Identifier	z		3978336	0					
ANR	3978499	UnaryOperationExpression	& rv		3978336	1					
ANR	3978500	UnaryOperator	&		3978336	0					
ANR	3978501	Identifier	rv		3978336	1					
ANR	3978502	CompoundStatement		18:17:427:427	3978336	1					
ANR	3978503	ExpressionStatement	zval_ptr_dtor ( & rv )	1463:4:46201:46219	3978336	0	True				
ANR	3978504	CallExpression	zval_ptr_dtor ( & rv )		3978336	0					
ANR	3978505	Callee	zval_ptr_dtor		3978336	0					
ANR	3978506	Identifier	zval_ptr_dtor		3978336	0					
ANR	3978507	ArgumentList	& rv		3978336	1					
ANR	3978508	Argument	& rv		3978336	0					
ANR	3978509	UnaryOperationExpression	& rv		3978336	0					
ANR	3978510	UnaryOperator	&		3978336	0					
ANR	3978511	Identifier	rv		3978336	1					
ANR	3978512	ExpressionStatement	"ZVAL_COPY_VALUE ( z , value )"	1465:3:46229:46254	3978336	3	True				
ANR	3978513	CallExpression	"ZVAL_COPY_VALUE ( z , value )"		3978336	0					
ANR	3978514	Callee	ZVAL_COPY_VALUE		3978336	0					
ANR	3978515	Identifier	ZVAL_COPY_VALUE		3978336	0					
ANR	3978516	ArgumentList	z		3978336	1					
ANR	3978517	Argument	z		3978336	0					
ANR	3978518	Identifier	z		3978336	0					
ANR	3978519	Argument	value		3978336	1					
ANR	3978520	Identifier	value		3978336	0					
ANR	3978521	ExpressionStatement	zptr = z	1467:2:46262:46270	3978336	3	True				
ANR	3978522	AssignmentExpression	zptr = z		3978336	0		=			
ANR	3978523	Identifier	zptr		3978336	0					
ANR	3978524	Identifier	z		3978336	1					
ANR	3978525	ExpressionStatement	ZVAL_DEREF ( z )	1468:2:46274:46287	3978336	4	True				
ANR	3978526	CallExpression	ZVAL_DEREF ( z )		3978336	0					
ANR	3978527	Callee	ZVAL_DEREF		3978336	0					
ANR	3978528	Identifier	ZVAL_DEREF		3978336	0					
ANR	3978529	ArgumentList	z		3978336	1					
ANR	3978530	Argument	z		3978336	0					
ANR	3978531	Identifier	z		3978336	0					
ANR	3978532	ExpressionStatement	SEPARATE_ZVAL_NOREF ( z )	1469:2:46291:46313	3978336	5	True				
ANR	3978533	CallExpression	SEPARATE_ZVAL_NOREF ( z )		3978336	0					
ANR	3978534	Callee	SEPARATE_ZVAL_NOREF		3978336	0					
ANR	3978535	Identifier	SEPARATE_ZVAL_NOREF		3978336	0					
ANR	3978536	ArgumentList	z		3978336	1					
ANR	3978537	Argument	z		3978336	0					
ANR	3978538	Identifier	z		3978336	0					
ANR	3978539	ExpressionStatement	"binary_op ( z , z , value )"	1470:2:46317:46339	3978336	6	True				
ANR	3978540	CallExpression	"binary_op ( z , z , value )"		3978336	0					
ANR	3978541	Callee	binary_op		3978336	0					
ANR	3978542	Identifier	binary_op		3978336	0					
ANR	3978543	ArgumentList	z		3978336	1					
ANR	3978544	Argument	z		3978336	0					
ANR	3978545	Identifier	z		3978336	0					
ANR	3978546	Argument	z		3978336	1					
ANR	3978547	Identifier	z		3978336	0					
ANR	3978548	Argument	value		3978336	2					
ANR	3978549	Identifier	value		3978336	0					
ANR	3978550	ExpressionStatement	"Z_OBJ_HT ( obj ) -> write_property ( & obj , property , z , cache_slot )"	1471:2:46343:46403	3978336	7	True				
ANR	3978551	CallExpression	"Z_OBJ_HT ( obj ) -> write_property ( & obj , property , z , cache_slot )"		3978336	0					
ANR	3978552	Callee	Z_OBJ_HT ( obj ) -> write_property		3978336	0					
ANR	3978553	PtrMemberAccess	Z_OBJ_HT ( obj ) -> write_property		3978336	0					
ANR	3978554	CallExpression	Z_OBJ_HT ( obj )		3978336	0					
ANR	3978555	Callee	Z_OBJ_HT		3978336	0					
ANR	3978556	Identifier	Z_OBJ_HT		3978336	0					
ANR	3978557	ArgumentList	obj		3978336	1					
ANR	3978558	Argument	obj		3978336	0					
ANR	3978559	Identifier	obj		3978336	0					
ANR	3978560	Identifier	write_property		3978336	1					
ANR	3978561	ArgumentList	& obj		3978336	1					
ANR	3978562	Argument	& obj		3978336	0					
ANR	3978563	UnaryOperationExpression	& obj		3978336	0					
ANR	3978564	UnaryOperator	&		3978336	0					
ANR	3978565	Identifier	obj		3978336	1					
ANR	3978566	Argument	property		3978336	1					
ANR	3978567	Identifier	property		3978336	0					
ANR	3978568	Argument	z		3978336	2					
ANR	3978569	Identifier	z		3978336	0					
ANR	3978570	Argument	cache_slot		3978336	3					
ANR	3978571	Identifier	cache_slot		3978336	0					
ANR	3978572	IfStatement	if ( UNEXPECTED ( result ) )		3978336	8					
ANR	3978573	Condition	UNEXPECTED ( result )	1472:6:46411:46428	3978336	0	True				
ANR	3978574	CallExpression	UNEXPECTED ( result )		3978336	0					
ANR	3978575	Callee	UNEXPECTED		3978336	0					
ANR	3978576	Identifier	UNEXPECTED		3978336	0					
ANR	3978577	ArgumentList	result		3978336	1					
ANR	3978578	Argument	result		3978336	0					
ANR	3978579	Identifier	result		3978336	0					
ANR	3978580	CompoundStatement		28:26:663:663	3978336	1					
ANR	3978581	ExpressionStatement	"ZVAL_COPY ( result , z )"	1473:3:46436:46456	3978336	0	True				
ANR	3978582	CallExpression	"ZVAL_COPY ( result , z )"		3978336	0					
ANR	3978583	Callee	ZVAL_COPY		3978336	0					
ANR	3978584	Identifier	ZVAL_COPY		3978336	0					
ANR	3978585	ArgumentList	result		3978336	1					
ANR	3978586	Argument	result		3978336	0					
ANR	3978587	Identifier	result		3978336	0					
ANR	3978588	Argument	z		3978336	1					
ANR	3978589	Identifier	z		3978336	0					
ANR	3978590	ExpressionStatement	zval_ptr_dtor ( zptr )	1475:2:46464:46483	3978336	9	True				
ANR	3978591	CallExpression	zval_ptr_dtor ( zptr )		3978336	0					
ANR	3978592	Callee	zval_ptr_dtor		3978336	0					
ANR	3978593	Identifier	zval_ptr_dtor		3978336	0					
ANR	3978594	ArgumentList	zptr		3978336	1					
ANR	3978595	Argument	zptr		3978336	0					
ANR	3978596	Identifier	zptr		3978336	0					
ANR	3978597	ElseStatement	else		3978336	0					
ANR	3978598	CompoundStatement		32:8:725:725	3978336	0					
ANR	3978599	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"	1477:2:46497:46562	3978336	0	True				
ANR	3978600	CallExpression	"zend_error ( E_WARNING , ""Attempt to assign property of non-object"" )"		3978336	0					
ANR	3978601	Callee	zend_error		3978336	0					
ANR	3978602	Identifier	zend_error		3978336	0					
ANR	3978603	ArgumentList	E_WARNING		3978336	1					
ANR	3978604	Argument	E_WARNING		3978336	0					
ANR	3978605	Identifier	E_WARNING		3978336	0					
ANR	3978606	Argument	"""Attempt to assign property of non-object"""		3978336	1					
ANR	3978607	PrimaryExpression	"""Attempt to assign property of non-object"""		3978336	0					
ANR	3978608	IfStatement	if ( UNEXPECTED ( result ) )		3978336	1					
ANR	3978609	Condition	UNEXPECTED ( result )	1478:6:46570:46587	3978336	0	True				
ANR	3978610	CallExpression	UNEXPECTED ( result )		3978336	0					
ANR	3978611	Callee	UNEXPECTED		3978336	0					
ANR	3978612	Identifier	UNEXPECTED		3978336	0					
ANR	3978613	ArgumentList	result		3978336	1					
ANR	3978614	Argument	result		3978336	0					
ANR	3978615	Identifier	result		3978336	0					
ANR	3978616	CompoundStatement		34:26:822:822	3978336	1					
ANR	3978617	ExpressionStatement	ZVAL_NULL ( result )	1479:3:46595:46612	3978336	0	True				
ANR	3978618	CallExpression	ZVAL_NULL ( result )		3978336	0					
ANR	3978619	Callee	ZVAL_NULL		3978336	0					
ANR	3978620	Identifier	ZVAL_NULL		3978336	0					
ANR	3978621	ArgumentList	result		3978336	1					
ANR	3978622	Argument	result		3978336	0					
ANR	3978623	Identifier	result		3978336	0					
ANR	3978624	ExpressionStatement	OBJ_RELEASE ( Z_OBJ ( obj ) )	1482:1:46622:46645	3978336	6	True				
ANR	3978625	CallExpression	OBJ_RELEASE ( Z_OBJ ( obj ) )		3978336	0					
ANR	3978626	Callee	OBJ_RELEASE		3978336	0					
ANR	3978627	Identifier	OBJ_RELEASE		3978336	0					
ANR	3978628	ArgumentList	Z_OBJ ( obj )		3978336	1					
ANR	3978629	Argument	Z_OBJ ( obj )		3978336	0					
ANR	3978630	CallExpression	Z_OBJ ( obj )		3978336	0					
ANR	3978631	Callee	Z_OBJ		3978336	0					
ANR	3978632	Identifier	Z_OBJ		3978336	0					
ANR	3978633	ArgumentList	obj		3978336	1					
ANR	3978634	Argument	obj		3978336	0					
ANR	3978635	Identifier	obj		3978336	0					
ANR	3978636	ReturnType	static zend_never_inline void		3978336	1					
ANR	3978637	Identifier	zend_assign_op_overloaded_property		3978336	2					
ANR	3978638	ParameterList	"zval * object , zval * property , void * * cache_slot , zval * value , binary_op_type binary_op , zval * result"		3978336	3					
ANR	3978639	Parameter	zval * object	1444:65:45665:45676	3978336	0	True				
ANR	3978640	ParameterType	zval *		3978336	0					
ANR	3978641	Identifier	object		3978336	1					
ANR	3978642	Parameter	zval * property	1444:79:45679:45692	3978336	1	True				
ANR	3978643	ParameterType	zval *		3978336	0					
ANR	3978644	Identifier	property		3978336	1					
ANR	3978645	Parameter	void * * cache_slot	1444:95:45695:45711	3978336	2	True				
ANR	3978646	ParameterType	void * *		3978336	0					
ANR	3978647	Identifier	cache_slot		3978336	1					
ANR	3978648	Parameter	zval * value	1444:114:45714:45724	3978336	3	True				
ANR	3978649	ParameterType	zval *		3978336	0					
ANR	3978650	Identifier	value		3978336	1					
ANR	3978651	Parameter	binary_op_type binary_op	1444:127:45727:45750	3978336	4	True				
ANR	3978652	ParameterType	binary_op_type		3978336	0					
ANR	3978653	Identifier	binary_op		3978336	1					
ANR	3978654	Parameter	zval * result	1444:153:45753:45764	3978336	5	True				
ANR	3978655	ParameterType	zval *		3978336	0					
ANR	3978656	Identifier	result		3978336	1					
ANR	3978657	CFGEntryNode	ENTRY		3978336		True				
ANR	3978658	CFGExitNode	EXIT		3978336		True				
ANR	3978659	Symbol	exception		3978336						
ANR	3978660	Symbol	rv		3978336						
ANR	3978661	Symbol	Z_OBJ_P		3978336						
ANR	3978662	Symbol	Z_OBJ_HT ( obj ) -> read_property		3978336						
ANR	3978663	Symbol	zptr		3978336						
ANR	3978664	Symbol	result		3978336						
ANR	3978665	Symbol	UNEXPECTED		3978336						
ANR	3978666	Symbol	E_WARNING		3978336						
ANR	3978667	Symbol	Z_OBJ		3978336						
ANR	3978668	Symbol	Z_OBJ_HT_P ( z ) -> get		3978336						
ANR	3978669	Symbol	& rv2		3978336						
ANR	3978670	Symbol	Z_OBJ_HT		3978336						
ANR	3978671	Symbol	property		3978336						
ANR	3978672	Symbol	& obj		3978336						
ANR	3978673	Symbol	value		3978336						
ANR	3978674	Symbol	BP_VAR_R		3978336						
ANR	3978675	Symbol	binary_op		3978336						
ANR	3978676	Symbol	cache_slot		3978336						
ANR	3978677	Symbol	EG		3978336						
ANR	3978678	Symbol	* Z_OBJ_HT		3978336						
ANR	3978679	Symbol	Z_TYPE_P		3978336						
ANR	3978680	Symbol	* Z_OBJ_HT_P		3978336						
ANR	3978681	Symbol	& rv		3978336						
ANR	3978682	Symbol	rv2		3978336						
ANR	3978683	Symbol	obj		3978336						
ANR	3978684	Symbol	Z_OBJ_HT_P		3978336						
ANR	3978685	Symbol	z		3978336						
ANR	3978686	Symbol	IS_OBJECT		3978336						
ANR	3978687	Symbol	EXPECTED		3978336						
ANR	3978688	Symbol	object		3978336						
ANR	3978689	Function	zend_extension_statement_handler	1486:0:46689:46876							
ANR	3978690	FunctionDef	"zend_extension_statement_handler (const zend_extension * extension , zend_op_array * op_array)"		3978689	0					
ANR	3978691	CompoundStatement		1487:0:46792:46876	3978689	0					
ANR	3978692	IfStatement	if ( extension -> statement_handler )		3978689	0					
ANR	3978693	Condition	extension -> statement_handler	1488:5:46799:46826	3978689	0	True				
ANR	3978694	PtrMemberAccess	extension -> statement_handler		3978689	0					
ANR	3978695	Identifier	extension		3978689	0					
ANR	3978696	Identifier	statement_handler		3978689	1					
ANR	3978697	CompoundStatement		2:35:36:36	3978689	1					
ANR	3978698	ExpressionStatement	extension -> statement_handler ( op_array )	1489:2:46833:46871	3978689	0	True				
ANR	3978699	CallExpression	extension -> statement_handler ( op_array )		3978689	0					
ANR	3978700	Callee	extension -> statement_handler		3978689	0					
ANR	3978701	PtrMemberAccess	extension -> statement_handler		3978689	0					
ANR	3978702	Identifier	extension		3978689	0					
ANR	3978703	Identifier	statement_handler		3978689	1					
ANR	3978704	ArgumentList	op_array		3978689	1					
ANR	3978705	Argument	op_array		3978689	0					
ANR	3978706	Identifier	op_array		3978689	0					
ANR	3978707	ReturnType	static void		3978689	1					
ANR	3978708	Identifier	zend_extension_statement_handler		3978689	2					
ANR	3978709	ParameterList	"const zend_extension * extension , zend_op_array * op_array"		3978689	3					
ANR	3978710	Parameter	const zend_extension * extension	1486:45:46734:46764	3978689	0	True				
ANR	3978711	ParameterType	const zend_extension *		3978689	0					
ANR	3978712	Identifier	extension		3978689	1					
ANR	3978713	Parameter	zend_op_array * op_array	1486:78:46767:46789	3978689	1	True				
ANR	3978714	ParameterType	zend_op_array *		3978689	0					
ANR	3978715	Identifier	op_array		3978689	1					
ANR	3978716	CFGEntryNode	ENTRY		3978689		True				
ANR	3978717	CFGExitNode	EXIT		3978689		True				
ANR	3978718	Symbol	extension		3978689						
ANR	3978719	Symbol	extension -> statement_handler		3978689						
ANR	3978720	Symbol	* extension		3978689						
ANR	3978721	Symbol	op_array		3978689						
ANR	3978722	Function	zend_extension_fcall_begin_handler	1494:0:46880:47073							
ANR	3978723	FunctionDef	"zend_extension_fcall_begin_handler (const zend_extension * extension , zend_op_array * op_array)"		3978722	0					
ANR	3978724	CompoundStatement		1495:0:46985:47073	3978722	0					
ANR	3978725	IfStatement	if ( extension -> fcall_begin_handler )		3978722	0					
ANR	3978726	Condition	extension -> fcall_begin_handler	1496:5:46992:47021	3978722	0	True				
ANR	3978727	PtrMemberAccess	extension -> fcall_begin_handler		3978722	0					
ANR	3978728	Identifier	extension		3978722	0					
ANR	3978729	Identifier	fcall_begin_handler		3978722	1					
ANR	3978730	CompoundStatement		2:37:38:38	3978722	1					
ANR	3978731	ExpressionStatement	extension -> fcall_begin_handler ( op_array )	1497:2:47028:47068	3978722	0	True				
ANR	3978732	CallExpression	extension -> fcall_begin_handler ( op_array )		3978722	0					
ANR	3978733	Callee	extension -> fcall_begin_handler		3978722	0					
ANR	3978734	PtrMemberAccess	extension -> fcall_begin_handler		3978722	0					
ANR	3978735	Identifier	extension		3978722	0					
ANR	3978736	Identifier	fcall_begin_handler		3978722	1					
ANR	3978737	ArgumentList	op_array		3978722	1					
ANR	3978738	Argument	op_array		3978722	0					
ANR	3978739	Identifier	op_array		3978722	0					
ANR	3978740	ReturnType	static void		3978722	1					
ANR	3978741	Identifier	zend_extension_fcall_begin_handler		3978722	2					
ANR	3978742	ParameterList	"const zend_extension * extension , zend_op_array * op_array"		3978722	3					
ANR	3978743	Parameter	const zend_extension * extension	1494:47:46927:46957	3978722	0	True				
ANR	3978744	ParameterType	const zend_extension *		3978722	0					
ANR	3978745	Identifier	extension		3978722	1					
ANR	3978746	Parameter	zend_op_array * op_array	1494:80:46960:46982	3978722	1	True				
ANR	3978747	ParameterType	zend_op_array *		3978722	0					
ANR	3978748	Identifier	op_array		3978722	1					
ANR	3978749	CFGEntryNode	ENTRY		3978722		True				
ANR	3978750	CFGExitNode	EXIT		3978722		True				
ANR	3978751	Symbol	extension		3978722						
ANR	3978752	Symbol	extension -> fcall_begin_handler		3978722						
ANR	3978753	Symbol	* extension		3978722						
ANR	3978754	Symbol	op_array		3978722						
ANR	3978755	Function	zend_extension_fcall_end_handler	1502:0:47077:47264							
ANR	3978756	FunctionDef	"zend_extension_fcall_end_handler (const zend_extension * extension , zend_op_array * op_array)"		3978755	0					
ANR	3978757	CompoundStatement		1503:0:47180:47264	3978755	0					
ANR	3978758	IfStatement	if ( extension -> fcall_end_handler )		3978755	0					
ANR	3978759	Condition	extension -> fcall_end_handler	1504:5:47187:47214	3978755	0	True				
ANR	3978760	PtrMemberAccess	extension -> fcall_end_handler		3978755	0					
ANR	3978761	Identifier	extension		3978755	0					
ANR	3978762	Identifier	fcall_end_handler		3978755	1					
ANR	3978763	CompoundStatement		2:35:36:36	3978755	1					
ANR	3978764	ExpressionStatement	extension -> fcall_end_handler ( op_array )	1505:2:47221:47259	3978755	0	True				
ANR	3978765	CallExpression	extension -> fcall_end_handler ( op_array )		3978755	0					
ANR	3978766	Callee	extension -> fcall_end_handler		3978755	0					
ANR	3978767	PtrMemberAccess	extension -> fcall_end_handler		3978755	0					
ANR	3978768	Identifier	extension		3978755	0					
ANR	3978769	Identifier	fcall_end_handler		3978755	1					
ANR	3978770	ArgumentList	op_array		3978755	1					
ANR	3978771	Argument	op_array		3978755	0					
ANR	3978772	Identifier	op_array		3978755	0					
ANR	3978773	ReturnType	static void		3978755	1					
ANR	3978774	Identifier	zend_extension_fcall_end_handler		3978755	2					
ANR	3978775	ParameterList	"const zend_extension * extension , zend_op_array * op_array"		3978755	3					
ANR	3978776	Parameter	const zend_extension * extension	1502:45:47122:47152	3978755	0	True				
ANR	3978777	ParameterType	const zend_extension *		3978755	0					
ANR	3978778	Identifier	extension		3978755	1					
ANR	3978779	Parameter	zend_op_array * op_array	1502:78:47155:47177	3978755	1	True				
ANR	3978780	ParameterType	zend_op_array *		3978755	0					
ANR	3978781	Identifier	op_array		3978755	1					
ANR	3978782	CFGEntryNode	ENTRY		3978755		True				
ANR	3978783	CFGExitNode	EXIT		3978755		True				
ANR	3978784	Symbol	extension		3978755						
ANR	3978785	Symbol	* extension		3978755						
ANR	3978786	Symbol	extension -> fcall_end_handler		3978755						
ANR	3978787	Symbol	op_array		3978755						
ANR	3978788	Function	zend_get_target_symbol_table	1510:0:47268:48028							
ANR	3978789	FunctionDef	"zend_get_target_symbol_table (zend_execute_data * execute_data , int fetch_type)"		3978788	0					
ANR	3978790	CompoundStatement		1511:0:47383:48028	3978788	0					
ANR	3978791	IdentifierDeclStatement	HashTable * ht ;	1512:1:47386:47399	3978788	0	True				
ANR	3978792	IdentifierDecl	* ht		3978788	0					
ANR	3978793	IdentifierDeclType	HashTable *		3978788	0					
ANR	3978794	Identifier	ht		3978788	1					
ANR	3978795	IfStatement	if ( EXPECTED ( fetch_type == ZEND_FETCH_GLOBAL_LOCK ) || EXPECTED ( fetch_type == ZEND_FETCH_GLOBAL ) )		3978788	1					
ANR	3978796	Condition	EXPECTED ( fetch_type == ZEND_FETCH_GLOBAL_LOCK ) || EXPECTED ( fetch_type == ZEND_FETCH_GLOBAL )	1514:5:47407:47502	3978788	0	True				
ANR	3978797	OrExpression	EXPECTED ( fetch_type == ZEND_FETCH_GLOBAL_LOCK ) || EXPECTED ( fetch_type == ZEND_FETCH_GLOBAL )		3978788	0		||			
ANR	3978798	CallExpression	EXPECTED ( fetch_type == ZEND_FETCH_GLOBAL_LOCK )		3978788	0					
ANR	3978799	Callee	EXPECTED		3978788	0					
ANR	3978800	Identifier	EXPECTED		3978788	0					
ANR	3978801	ArgumentList	fetch_type == ZEND_FETCH_GLOBAL_LOCK		3978788	1					
ANR	3978802	Argument	fetch_type == ZEND_FETCH_GLOBAL_LOCK		3978788	0					
ANR	3978803	EqualityExpression	fetch_type == ZEND_FETCH_GLOBAL_LOCK		3978788	0		==			
ANR	3978804	Identifier	fetch_type		3978788	0					
ANR	3978805	Identifier	ZEND_FETCH_GLOBAL_LOCK		3978788	1					
ANR	3978806	CallExpression	EXPECTED ( fetch_type == ZEND_FETCH_GLOBAL )		3978788	1					
ANR	3978807	Callee	EXPECTED		3978788	0					
ANR	3978808	Identifier	EXPECTED		3978788	0					
ANR	3978809	ArgumentList	fetch_type == ZEND_FETCH_GLOBAL		3978788	1					
ANR	3978810	Argument	fetch_type == ZEND_FETCH_GLOBAL		3978788	0					
ANR	3978811	EqualityExpression	fetch_type == ZEND_FETCH_GLOBAL		3978788	0		==			
ANR	3978812	Identifier	fetch_type		3978788	0					
ANR	3978813	Identifier	ZEND_FETCH_GLOBAL		3978788	1					
ANR	3978814	CompoundStatement		5:48:121:121	3978788	1					
ANR	3978815	ExpressionStatement	ht = & EG ( symbol_table )	1516:2:47509:47531	3978788	0	True				
ANR	3978816	AssignmentExpression	ht = & EG ( symbol_table )		3978788	0		=			
ANR	3978817	Identifier	ht		3978788	0					
ANR	3978818	UnaryOperationExpression	& EG ( symbol_table )		3978788	1					
ANR	3978819	UnaryOperator	&		3978788	0					
ANR	3978820	CallExpression	EG ( symbol_table )		3978788	1					
ANR	3978821	Callee	EG		3978788	0					
ANR	3978822	Identifier	EG		3978788	0					
ANR	3978823	ArgumentList	symbol_table		3978788	1					
ANR	3978824	Argument	symbol_table		3978788	0					
ANR	3978825	Identifier	symbol_table		3978788	0					
ANR	3978826	ElseStatement	else		3978788	0					
ANR	3978827	IfStatement	if ( EXPECTED ( fetch_type == ZEND_FETCH_STATIC ) )		3978788	0					
ANR	3978828	Condition	EXPECTED ( fetch_type == ZEND_FETCH_STATIC )	1517:12:47545:47585	3978788	0	True				
ANR	3978829	CallExpression	EXPECTED ( fetch_type == ZEND_FETCH_STATIC )		3978788	0					
ANR	3978830	Callee	EXPECTED		3978788	0					
ANR	3978831	Identifier	EXPECTED		3978788	0					
ANR	3978832	ArgumentList	fetch_type == ZEND_FETCH_STATIC		3978788	1					
ANR	3978833	Argument	fetch_type == ZEND_FETCH_STATIC		3978788	0					
ANR	3978834	EqualityExpression	fetch_type == ZEND_FETCH_STATIC		3978788	0		==			
ANR	3978835	Identifier	fetch_type		3978788	0					
ANR	3978836	Identifier	ZEND_FETCH_STATIC		3978788	1					
ANR	3978837	CompoundStatement		7:55:204:204	3978788	1					
ANR	3978838	ExpressionStatement	ZEND_ASSERT ( EX ( func ) -> op_array . static_variables != NULL )	1518:2:47592:47648	3978788	0	True				
ANR	3978839	CallExpression	ZEND_ASSERT ( EX ( func ) -> op_array . static_variables != NULL )		3978788	0					
ANR	3978840	Callee	ZEND_ASSERT		3978788	0					
ANR	3978841	Identifier	ZEND_ASSERT		3978788	0					
ANR	3978842	ArgumentList	EX ( func ) -> op_array . static_variables != NULL		3978788	1					
ANR	3978843	Argument	EX ( func ) -> op_array . static_variables != NULL		3978788	0					
ANR	3978844	EqualityExpression	EX ( func ) -> op_array . static_variables != NULL		3978788	0		!=			
ANR	3978845	MemberAccess	EX ( func ) -> op_array . static_variables		3978788	0					
ANR	3978846	PtrMemberAccess	EX ( func ) -> op_array		3978788	0					
ANR	3978847	CallExpression	EX ( func )		3978788	0					
ANR	3978848	Callee	EX		3978788	0					
ANR	3978849	Identifier	EX		3978788	0					
ANR	3978850	ArgumentList	func		3978788	1					
ANR	3978851	Argument	func		3978788	0					
ANR	3978852	Identifier	func		3978788	0					
ANR	3978853	Identifier	op_array		3978788	1					
ANR	3978854	Identifier	static_variables		3978788	1					
ANR	3978855	Identifier	NULL		3978788	1					
ANR	3978856	ExpressionStatement	ht = EX ( func ) -> op_array . static_variables	1519:2:47652:47692	3978788	1	True				
ANR	3978857	AssignmentExpression	ht = EX ( func ) -> op_array . static_variables		3978788	0		=			
ANR	3978858	Identifier	ht		3978788	0					
ANR	3978859	MemberAccess	EX ( func ) -> op_array . static_variables		3978788	1					
ANR	3978860	PtrMemberAccess	EX ( func ) -> op_array		3978788	0					
ANR	3978861	CallExpression	EX ( func )		3978788	0					
ANR	3978862	Callee	EX		3978788	0					
ANR	3978863	Identifier	EX		3978788	0					
ANR	3978864	ArgumentList	func		3978788	1					
ANR	3978865	Argument	func		3978788	0					
ANR	3978866	Identifier	func		3978788	0					
ANR	3978867	Identifier	op_array		3978788	1					
ANR	3978868	Identifier	static_variables		3978788	1					
ANR	3978869	IfStatement	if ( GC_REFCOUNT ( ht ) > 1 )		3978788	2					
ANR	3978870	Condition	GC_REFCOUNT ( ht ) > 1	1520:6:47700:47718	3978788	0	True				
ANR	3978871	RelationalExpression	GC_REFCOUNT ( ht ) > 1		3978788	0		>			
ANR	3978872	CallExpression	GC_REFCOUNT ( ht )		3978788	0					
ANR	3978873	Callee	GC_REFCOUNT		3978788	0					
ANR	3978874	Identifier	GC_REFCOUNT		3978788	0					
ANR	3978875	ArgumentList	ht		3978788	1					
ANR	3978876	Argument	ht		3978788	0					
ANR	3978877	Identifier	ht		3978788	0					
ANR	3978878	PrimaryExpression	1		3978788	1					
ANR	3978879	CompoundStatement		10:27:337:337	3978788	1					
ANR	3978880	IfStatement	if ( ! ( GC_FLAGS ( ht ) & IS_ARRAY_IMMUTABLE ) )		3978788	0					
ANR	3978881	Condition	! ( GC_FLAGS ( ht ) & IS_ARRAY_IMMUTABLE )	1521:7:47730:47765	3978788	0	True				
ANR	3978882	UnaryOperationExpression	! ( GC_FLAGS ( ht ) & IS_ARRAY_IMMUTABLE )		3978788	0					
ANR	3978883	UnaryOperator	!		3978788	0					
ANR	3978884	BitAndExpression	GC_FLAGS ( ht ) & IS_ARRAY_IMMUTABLE		3978788	1		&			
ANR	3978885	CallExpression	GC_FLAGS ( ht )		3978788	0					
ANR	3978886	Callee	GC_FLAGS		3978788	0					
ANR	3978887	Identifier	GC_FLAGS		3978788	0					
ANR	3978888	ArgumentList	ht		3978788	1					
ANR	3978889	Argument	ht		3978788	0					
ANR	3978890	Identifier	ht		3978788	0					
ANR	3978891	Identifier	IS_ARRAY_IMMUTABLE		3978788	1					
ANR	3978892	CompoundStatement		11:45:384:384	3978788	1					
ANR	3978893	ExpressionStatement	GC_REFCOUNT ( ht ) --	1522:4:47774:47791	3978788	0	True				
ANR	3978894	PostIncDecOperationExpression	GC_REFCOUNT ( ht ) --		3978788	0					
ANR	3978895	CallExpression	GC_REFCOUNT ( ht )		3978788	0					
ANR	3978896	Callee	GC_REFCOUNT		3978788	0					
ANR	3978897	Identifier	GC_REFCOUNT		3978788	0					
ANR	3978898	ArgumentList	ht		3978788	1					
ANR	3978899	Argument	ht		3978788	0					
ANR	3978900	Identifier	ht		3978788	0					
ANR	3978901	IncDec	--		3978788	1					
ANR	3978902	ExpressionStatement	EX ( func ) -> op_array . static_variables = ht = zend_array_dup ( ht )	1524:3:47801:47862	3978788	1	True				
ANR	3978903	AssignmentExpression	EX ( func ) -> op_array . static_variables = ht = zend_array_dup ( ht )		3978788	0		=			
ANR	3978904	MemberAccess	EX ( func ) -> op_array . static_variables		3978788	0					
ANR	3978905	PtrMemberAccess	EX ( func ) -> op_array		3978788	0					
ANR	3978906	CallExpression	EX ( func )		3978788	0					
ANR	3978907	Callee	EX		3978788	0					
ANR	3978908	Identifier	EX		3978788	0					
ANR	3978909	ArgumentList	func		3978788	1					
ANR	3978910	Argument	func		3978788	0					
ANR	3978911	Identifier	func		3978788	0					
ANR	3978912	Identifier	op_array		3978788	1					
ANR	3978913	Identifier	static_variables		3978788	1					
ANR	3978914	AssignmentExpression	ht = zend_array_dup ( ht )		3978788	1		=			
ANR	3978915	Identifier	ht		3978788	0					
ANR	3978916	CallExpression	zend_array_dup ( ht )		3978788	1					
ANR	3978917	Callee	zend_array_dup		3978788	0					
ANR	3978918	Identifier	zend_array_dup		3978788	0					
ANR	3978919	ArgumentList	ht		3978788	1					
ANR	3978920	Argument	ht		3978788	0					
ANR	3978921	Identifier	ht		3978788	0					
ANR	3978922	ElseStatement	else		3978788	0					
ANR	3978923	CompoundStatement		16:8:492:492	3978788	0					
ANR	3978924	ExpressionStatement	ZEND_ASSERT ( fetch_type == ZEND_FETCH_LOCAL )	1527:2:47880:47923	3978788	0	True				
ANR	3978925	CallExpression	ZEND_ASSERT ( fetch_type == ZEND_FETCH_LOCAL )		3978788	0					
ANR	3978926	Callee	ZEND_ASSERT		3978788	0					
ANR	3978927	Identifier	ZEND_ASSERT		3978788	0					
ANR	3978928	ArgumentList	fetch_type == ZEND_FETCH_LOCAL		3978788	1					
ANR	3978929	Argument	fetch_type == ZEND_FETCH_LOCAL		3978788	0					
ANR	3978930	EqualityExpression	fetch_type == ZEND_FETCH_LOCAL		3978788	0		==			
ANR	3978931	Identifier	fetch_type		3978788	0					
ANR	3978932	Identifier	ZEND_FETCH_LOCAL		3978788	1					
ANR	3978933	IfStatement	if ( ! EX ( symbol_table ) )		3978788	1					
ANR	3978934	Condition	! EX ( symbol_table )	1528:6:47931:47947	3978788	0	True				
ANR	3978935	UnaryOperationExpression	! EX ( symbol_table )		3978788	0					
ANR	3978936	UnaryOperator	!		3978788	0					
ANR	3978937	CallExpression	EX ( symbol_table )		3978788	1					
ANR	3978938	Callee	EX		3978788	0					
ANR	3978939	Identifier	EX		3978788	0					
ANR	3978940	ArgumentList	symbol_table		3978788	1					
ANR	3978941	Argument	symbol_table		3978788	0					
ANR	3978942	Identifier	symbol_table		3978788	0					
ANR	3978943	CompoundStatement		18:25:566:566	3978788	1					
ANR	3978944	ExpressionStatement	zend_rebuild_symbol_table ( )	1529:3:47955:47982	3978788	0	True				
ANR	3978945	CallExpression	zend_rebuild_symbol_table ( )		3978788	0					
ANR	3978946	Callee	zend_rebuild_symbol_table		3978788	0					
ANR	3978947	Identifier	zend_rebuild_symbol_table		3978788	0					
ANR	3978948	ArgumentList			3978788	1					
ANR	3978949	ExpressionStatement	ht = EX ( symbol_table )	1531:2:47990:48011	3978788	2	True				
ANR	3978950	AssignmentExpression	ht = EX ( symbol_table )		3978788	0		=			
ANR	3978951	Identifier	ht		3978788	0					
ANR	3978952	CallExpression	EX ( symbol_table )		3978788	1					
ANR	3978953	Callee	EX		3978788	0					
ANR	3978954	Identifier	EX		3978788	0					
ANR	3978955	ArgumentList	symbol_table		3978788	1					
ANR	3978956	Argument	symbol_table		3978788	0					
ANR	3978957	Identifier	symbol_table		3978788	0					
ANR	3978958	ReturnStatement	return ht ;	1533:1:48017:48026	3978788	2	True				
ANR	3978959	Identifier	ht		3978788	0					
ANR	3978960	ReturnType	static zend_always_inline HashTable *		3978788	1					
ANR	3978961	Identifier	zend_get_target_symbol_table		3978788	2					
ANR	3978962	ParameterList	"zend_execute_data * execute_data , int fetch_type"		3978788	3					
ANR	3978963	Parameter	zend_execute_data * execute_data	1510:66:47334:47364	3978788	0	True				
ANR	3978964	ParameterType	zend_execute_data *		3978788	0					
ANR	3978965	Identifier	execute_data		3978788	1					
ANR	3978966	Parameter	int fetch_type	1510:99:47367:47380	3978788	1	True				
ANR	3978967	ParameterType	int		3978788	0					
ANR	3978968	Identifier	fetch_type		3978788	1					
ANR	3978969	CFGEntryNode	ENTRY		3978788		True				
ANR	3978970	CFGExitNode	EXIT		3978788		True				
ANR	3978971	Symbol	ZEND_FETCH_GLOBAL		3978788						
ANR	3978972	Symbol	fetch_type		3978788						
ANR	3978973	Symbol	NULL		3978788						
ANR	3978974	Symbol	ZEND_FETCH_LOCAL		3978788						
ANR	3978975	Symbol	symbol_table		3978788						
ANR	3978976	Symbol	GC_FLAGS		3978788						
ANR	3978977	Symbol	IS_ARRAY_IMMUTABLE		3978788						
ANR	3978978	Symbol	ht		3978788						
ANR	3978979	Symbol	& EG		3978788						
ANR	3978980	Symbol	execute_data		3978788						
ANR	3978981	Symbol	EX ( func ) -> op_array		3978788						
ANR	3978982	Symbol	EX		3978788						
ANR	3978983	Symbol	EX ( func ) -> op_array . static_variables		3978788						
ANR	3978984	Symbol	func		3978788						
ANR	3978985	Symbol	ZEND_FETCH_GLOBAL_LOCK		3978788						
ANR	3978986	Symbol	ZEND_FETCH_STATIC		3978788						
ANR	3978987	Symbol	* EX		3978788						
ANR	3978988	Symbol	EXPECTED		3978788						
ANR	3978989	Symbol	GC_REFCOUNT		3978788						
ANR	3978990	Symbol	zend_array_dup		3978788						
ANR	3978991	Function	zend_fetch_dimension_address_inner	1536:0:48031:51106							
ANR	3978992	FunctionDef	"zend_fetch_dimension_address_inner (HashTable * ht , const zval * dim , int dim_type , int type)"		3978991	0					
ANR	3978993	CompoundStatement		1537:0:48154:51106	3978991	0					
ANR	3978994	IdentifierDeclStatement	zval * retval ;	1538:1:48157:48169	3978991	0	True				
ANR	3978995	IdentifierDecl	* retval		3978991	0					
ANR	3978996	IdentifierDeclType	zval *		3978991	0					
ANR	3978997	Identifier	retval		3978991	1					
ANR	3978998	IdentifierDeclStatement	zend_string * offset_key ;	1539:1:48172:48195	3978991	1	True				
ANR	3978999	IdentifierDecl	* offset_key		3978991	0					
ANR	3979000	IdentifierDeclType	zend_string *		3978991	0					
ANR	3979001	Identifier	offset_key		3978991	1					
ANR	3979002	IdentifierDeclStatement	zend_ulong hval ;	1540:1:48198:48213	3978991	2	True				
ANR	3979003	IdentifierDecl	hval		3978991	0					
ANR	3979004	IdentifierDeclType	zend_ulong		3978991	0					
ANR	3979005	Identifier	hval		3978991	1					
ANR	3979006	Label	try_again :	1542:0:48216:48225	3978991	3	True				
ANR	3979007	Identifier	try_again		3978991	0					
ANR	3979008	IfStatement	if ( EXPECTED ( Z_TYPE_P ( dim ) == IS_LONG ) )		3978991	4					
ANR	3979009	Condition	EXPECTED ( Z_TYPE_P ( dim ) == IS_LONG )	1543:5:48232:48265	3978991	0	True				
ANR	3979010	CallExpression	EXPECTED ( Z_TYPE_P ( dim ) == IS_LONG )		3978991	0					
ANR	3979011	Callee	EXPECTED		3978991	0					
ANR	3979012	Identifier	EXPECTED		3978991	0					
ANR	3979013	ArgumentList	Z_TYPE_P ( dim ) == IS_LONG		3978991	1					
ANR	3979014	Argument	Z_TYPE_P ( dim ) == IS_LONG		3978991	0					
ANR	3979015	EqualityExpression	Z_TYPE_P ( dim ) == IS_LONG		3978991	0		==			
ANR	3979016	CallExpression	Z_TYPE_P ( dim )		3978991	0					
ANR	3979017	Callee	Z_TYPE_P		3978991	0					
ANR	3979018	Identifier	Z_TYPE_P		3978991	0					
ANR	3979019	ArgumentList	dim		3978991	1					
ANR	3979020	Argument	dim		3978991	0					
ANR	3979021	Identifier	dim		3978991	0					
ANR	3979022	Identifier	IS_LONG		3978991	1					
ANR	3979023	CompoundStatement		7:41:113:113	3978991	1					
ANR	3979024	ExpressionStatement	hval = Z_LVAL_P ( dim )	1544:2:48272:48292	3978991	0	True				
ANR	3979025	AssignmentExpression	hval = Z_LVAL_P ( dim )		3978991	0		=			
ANR	3979026	Identifier	hval		3978991	0					
ANR	3979027	CallExpression	Z_LVAL_P ( dim )		3978991	1					
ANR	3979028	Callee	Z_LVAL_P		3978991	0					
ANR	3979029	Identifier	Z_LVAL_P		3978991	0					
ANR	3979030	ArgumentList	dim		3978991	1					
ANR	3979031	Argument	dim		3978991	0					
ANR	3979032	Identifier	dim		3978991	0					
ANR	3979033	Label	num_index :	1545:0:48294:48303	3978991	1	True				
ANR	3979034	Identifier	num_index		3978991	0					
ANR	3979035	ExpressionStatement	"retval = zend_hash_index_find ( ht , hval )"	1546:2:48307:48346	3978991	2	True				
ANR	3979036	AssignmentExpression	"retval = zend_hash_index_find ( ht , hval )"		3978991	0		=			
ANR	3979037	Identifier	retval		3978991	0					
ANR	3979038	CallExpression	"zend_hash_index_find ( ht , hval )"		3978991	1					
ANR	3979039	Callee	zend_hash_index_find		3978991	0					
ANR	3979040	Identifier	zend_hash_index_find		3978991	0					
ANR	3979041	ArgumentList	ht		3978991	1					
ANR	3979042	Argument	ht		3978991	0					
ANR	3979043	Identifier	ht		3978991	0					
ANR	3979044	Argument	hval		3978991	1					
ANR	3979045	Identifier	hval		3978991	0					
ANR	3979046	IfStatement	if ( retval == NULL )		3978991	3					
ANR	3979047	Condition	retval == NULL	1547:6:48354:48367	3978991	0	True				
ANR	3979048	EqualityExpression	retval == NULL		3978991	0		==			
ANR	3979049	Identifier	retval		3978991	0					
ANR	3979050	Identifier	NULL		3978991	1					
ANR	3979051	CompoundStatement		11:22:215:215	3978991	1					
ANR	3979052	SwitchStatement	switch ( type )		3978991	0					
ANR	3979053	Condition	type	1548:11:48383:48386	3978991	0	True				
ANR	3979054	Identifier	type		3978991	0					
ANR	3979055	CompoundStatement		12:17:234:234	3978991	1					
ANR	3979056	Label	case BP_VAR_R :	1549:4:48395:48408	3978991	0	True				
ANR	3979057	Identifier	BP_VAR_R		3978991	0					
ANR	3979058	Statement	zend_error	1550:5:48415:48424	3978991	1	True				
ANR	3979059	Statement	(	1550:15:48425:48425	3978991	2	True				
ANR	3979060	Statement	E_NOTICE	1550:16:48426:48433	3978991	3	True				
ANR	3979061	Statement	","	1550:24:48434:48434	3978991	4	True				
ANR	3979062	Statement	"""Undefined offset: """	1550:25:48435:48454	3978991	5	True				
ANR	3979063	Statement	ZEND_LONG_FMT	1550:46:48456:48468	3978991	6	True				
ANR	3979064	Statement	","	1550:59:48469:48469	3978991	7	True				
ANR	3979065	Statement	hval	1550:61:48471:48474	3978991	8	True				
ANR	3979066	Statement	)	1550:65:48475:48475	3978991	9	True				
ANR	3979067	ExpressionStatement		1550:66:48476:48476	3978991	10	True				
ANR	3979068	Label	case BP_VAR_UNSET :	1552:4:48521:48538	3978991	11	True				
ANR	3979069	Identifier	BP_VAR_UNSET		3978991	0					
ANR	3979070	Label	case BP_VAR_IS :	1553:4:48544:48558	3978991	12	True				
ANR	3979071	Identifier	BP_VAR_IS		3978991	0					
ANR	3979072	ExpressionStatement	retval = & EG ( uninitialized_zval )	1554:5:48565:48597	3978991	13	True				
ANR	3979073	AssignmentExpression	retval = & EG ( uninitialized_zval )		3978991	0		=			
ANR	3979074	Identifier	retval		3978991	0					
ANR	3979075	UnaryOperationExpression	& EG ( uninitialized_zval )		3978991	1					
ANR	3979076	UnaryOperator	&		3978991	0					
ANR	3979077	CallExpression	EG ( uninitialized_zval )		3978991	1					
ANR	3979078	Callee	EG		3978991	0					
ANR	3979079	Identifier	EG		3978991	0					
ANR	3979080	ArgumentList	uninitialized_zval		3978991	1					
ANR	3979081	Argument	uninitialized_zval		3978991	0					
ANR	3979082	Identifier	uninitialized_zval		3978991	0					
ANR	3979083	BreakStatement	break ;	1555:5:48604:48609	3978991	14	True				
ANR	3979084	Label	case BP_VAR_RW :	1556:4:48615:48629	3978991	15	True				
ANR	3979085	Identifier	BP_VAR_RW		3978991	0					
ANR	3979086	Statement	zend_error	1557:5:48636:48645	3978991	16	True				
ANR	3979087	Statement	(	1557:15:48646:48646	3978991	17	True				
ANR	3979088	Statement	E_NOTICE	1557:16:48647:48654	3978991	18	True				
ANR	3979089	Statement	","	1557:24:48655:48655	3978991	19	True				
ANR	3979090	Statement	"""Undefined offset: """	1557:25:48656:48675	3978991	20	True				
ANR	3979091	Statement	ZEND_LONG_FMT	1557:46:48677:48689	3978991	21	True				
ANR	3979092	Statement	","	1557:59:48690:48690	3978991	22	True				
ANR	3979093	Statement	hval	1557:61:48692:48695	3978991	23	True				
ANR	3979094	Statement	)	1557:65:48696:48696	3978991	24	True				
ANR	3979095	ExpressionStatement		1557:66:48697:48697	3978991	25	True				
ANR	3979096	ExpressionStatement	"retval = zend_hash_index_update ( ht , hval , & EG ( uninitialized_zval ) )"	1558:5:48704:48770	3978991	26	True				
ANR	3979097	AssignmentExpression	"retval = zend_hash_index_update ( ht , hval , & EG ( uninitialized_zval ) )"		3978991	0		=			
ANR	3979098	Identifier	retval		3978991	0					
ANR	3979099	CallExpression	"zend_hash_index_update ( ht , hval , & EG ( uninitialized_zval ) )"		3978991	1					
ANR	3979100	Callee	zend_hash_index_update		3978991	0					
ANR	3979101	Identifier	zend_hash_index_update		3978991	0					
ANR	3979102	ArgumentList	ht		3978991	1					
ANR	3979103	Argument	ht		3978991	0					
ANR	3979104	Identifier	ht		3978991	0					
ANR	3979105	Argument	hval		3978991	1					
ANR	3979106	Identifier	hval		3978991	0					
ANR	3979107	Argument	& EG ( uninitialized_zval )		3978991	2					
ANR	3979108	UnaryOperationExpression	& EG ( uninitialized_zval )		3978991	0					
ANR	3979109	UnaryOperator	&		3978991	0					
ANR	3979110	CallExpression	EG ( uninitialized_zval )		3978991	1					
ANR	3979111	Callee	EG		3978991	0					
ANR	3979112	Identifier	EG		3978991	0					
ANR	3979113	ArgumentList	uninitialized_zval		3978991	1					
ANR	3979114	Argument	uninitialized_zval		3978991	0					
ANR	3979115	Identifier	uninitialized_zval		3978991	0					
ANR	3979116	BreakStatement	break ;	1559:5:48777:48782	3978991	27	True				
ANR	3979117	Label	case BP_VAR_W :	1560:4:48788:48801	3978991	28	True				
ANR	3979118	Identifier	BP_VAR_W		3978991	0					
ANR	3979119	ExpressionStatement	"retval = zend_hash_index_add_new ( ht , hval , & EG ( uninitialized_zval ) )"	1561:5:48808:48875	3978991	29	True				
ANR	3979120	AssignmentExpression	"retval = zend_hash_index_add_new ( ht , hval , & EG ( uninitialized_zval ) )"		3978991	0		=			
ANR	3979121	Identifier	retval		3978991	0					
ANR	3979122	CallExpression	"zend_hash_index_add_new ( ht , hval , & EG ( uninitialized_zval ) )"		3978991	1					
ANR	3979123	Callee	zend_hash_index_add_new		3978991	0					
ANR	3979124	Identifier	zend_hash_index_add_new		3978991	0					
ANR	3979125	ArgumentList	ht		3978991	1					
ANR	3979126	Argument	ht		3978991	0					
ANR	3979127	Identifier	ht		3978991	0					
ANR	3979128	Argument	hval		3978991	1					
ANR	3979129	Identifier	hval		3978991	0					
ANR	3979130	Argument	& EG ( uninitialized_zval )		3978991	2					
ANR	3979131	UnaryOperationExpression	& EG ( uninitialized_zval )		3978991	0					
ANR	3979132	UnaryOperator	&		3978991	0					
ANR	3979133	CallExpression	EG ( uninitialized_zval )		3978991	1					
ANR	3979134	Callee	EG		3978991	0					
ANR	3979135	Identifier	EG		3978991	0					
ANR	3979136	ArgumentList	uninitialized_zval		3978991	1					
ANR	3979137	Argument	uninitialized_zval		3978991	0					
ANR	3979138	Identifier	uninitialized_zval		3978991	0					
ANR	3979139	BreakStatement	break ;	1562:5:48882:48887	3978991	30	True				
ANR	3979140	ElseStatement	else		3978991	0					
ANR	3979141	IfStatement	if ( EXPECTED ( Z_TYPE_P ( dim ) == IS_STRING ) )		3978991	0					
ANR	3979142	Condition	EXPECTED ( Z_TYPE_P ( dim ) == IS_STRING )	1565:12:48910:48945	3978991	0	True				
ANR	3979143	CallExpression	EXPECTED ( Z_TYPE_P ( dim ) == IS_STRING )		3978991	0					
ANR	3979144	Callee	EXPECTED		3978991	0					
ANR	3979145	Identifier	EXPECTED		3978991	0					
ANR	3979146	ArgumentList	Z_TYPE_P ( dim ) == IS_STRING		3978991	1					
ANR	3979147	Argument	Z_TYPE_P ( dim ) == IS_STRING		3978991	0					
ANR	3979148	EqualityExpression	Z_TYPE_P ( dim ) == IS_STRING		3978991	0		==			
ANR	3979149	CallExpression	Z_TYPE_P ( dim )		3978991	0					
ANR	3979150	Callee	Z_TYPE_P		3978991	0					
ANR	3979151	Identifier	Z_TYPE_P		3978991	0					
ANR	3979152	ArgumentList	dim		3978991	1					
ANR	3979153	Argument	dim		3978991	0					
ANR	3979154	Identifier	dim		3978991	0					
ANR	3979155	Identifier	IS_STRING		3978991	1					
ANR	3979156	CompoundStatement		29:50:793:793	3978991	1					
ANR	3979157	ExpressionStatement	offset_key = Z_STR_P ( dim )	1566:2:48952:48977	3978991	0	True				
ANR	3979158	AssignmentExpression	offset_key = Z_STR_P ( dim )		3978991	0		=			
ANR	3979159	Identifier	offset_key		3978991	0					
ANR	3979160	CallExpression	Z_STR_P ( dim )		3978991	1					
ANR	3979161	Callee	Z_STR_P		3978991	0					
ANR	3979162	Identifier	Z_STR_P		3978991	0					
ANR	3979163	ArgumentList	dim		3978991	1					
ANR	3979164	Argument	dim		3978991	0					
ANR	3979165	Identifier	dim		3978991	0					
ANR	3979166	IfStatement	if ( dim_type != IS_CONST )		3978991	1					
ANR	3979167	Condition	dim_type != IS_CONST	1567:6:48985:49004	3978991	0	True				
ANR	3979168	EqualityExpression	dim_type != IS_CONST		3978991	0		!=			
ANR	3979169	Identifier	dim_type		3978991	0					
ANR	3979170	Identifier	IS_CONST		3978991	1					
ANR	3979171	CompoundStatement		31:28:852:852	3978991	1					
ANR	3979172	IfStatement	"if ( ZEND_HANDLE_NUMERIC ( offset_key , hval ) )"		3978991	0					
ANR	3979173	Condition	"ZEND_HANDLE_NUMERIC ( offset_key , hval )"	1568:7:49016:49052	3978991	0	True				
ANR	3979174	CallExpression	"ZEND_HANDLE_NUMERIC ( offset_key , hval )"		3978991	0					
ANR	3979175	Callee	ZEND_HANDLE_NUMERIC		3978991	0					
ANR	3979176	Identifier	ZEND_HANDLE_NUMERIC		3978991	0					
ANR	3979177	ArgumentList	offset_key		3978991	1					
ANR	3979178	Argument	offset_key		3978991	0					
ANR	3979179	Identifier	offset_key		3978991	0					
ANR	3979180	Argument	hval		3978991	1					
ANR	3979181	Identifier	hval		3978991	0					
ANR	3979182	CompoundStatement		32:46:900:900	3978991	1					
ANR	3979183	GotoStatement	goto num_index ;	1569:4:49061:49075	3978991	0	True				
ANR	3979184	Identifier	num_index		3978991	0					
ANR	3979185	Label	str_index :	1572:0:49086:49095	3978991	2	True				
ANR	3979186	Identifier	str_index		3978991	0					
ANR	3979187	ExpressionStatement	"retval = zend_hash_find ( ht , offset_key )"	1573:2:49099:49138	3978991	3	True				
ANR	3979188	AssignmentExpression	"retval = zend_hash_find ( ht , offset_key )"		3978991	0		=			
ANR	3979189	Identifier	retval		3978991	0					
ANR	3979190	CallExpression	"zend_hash_find ( ht , offset_key )"		3978991	1					
ANR	3979191	Callee	zend_hash_find		3978991	0					
ANR	3979192	Identifier	zend_hash_find		3978991	0					
ANR	3979193	ArgumentList	ht		3978991	1					
ANR	3979194	Argument	ht		3978991	0					
ANR	3979195	Identifier	ht		3978991	0					
ANR	3979196	Argument	offset_key		3978991	1					
ANR	3979197	Identifier	offset_key		3978991	0					
ANR	3979198	IfStatement	if ( retval )		3978991	4					
ANR	3979199	Condition	retval	1574:6:49146:49151	3978991	0	True				
ANR	3979200	Identifier	retval		3978991	0					
ANR	3979201	CompoundStatement		38:14:999:999	3978991	1					
ANR	3979202	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( retval ) == IS_INDIRECT ) )		3978991	0					
ANR	3979203	Condition	UNEXPECTED ( Z_TYPE_P ( retval ) == IS_INDIRECT )	1576:7:49198:49240	3978991	0	True				
ANR	3979204	CallExpression	UNEXPECTED ( Z_TYPE_P ( retval ) == IS_INDIRECT )		3978991	0					
ANR	3979205	Callee	UNEXPECTED		3978991	0					
ANR	3979206	Identifier	UNEXPECTED		3978991	0					
ANR	3979207	ArgumentList	Z_TYPE_P ( retval ) == IS_INDIRECT		3978991	1					
ANR	3979208	Argument	Z_TYPE_P ( retval ) == IS_INDIRECT		3978991	0					
ANR	3979209	EqualityExpression	Z_TYPE_P ( retval ) == IS_INDIRECT		3978991	0		==			
ANR	3979210	CallExpression	Z_TYPE_P ( retval )		3978991	0					
ANR	3979211	Callee	Z_TYPE_P		3978991	0					
ANR	3979212	Identifier	Z_TYPE_P		3978991	0					
ANR	3979213	ArgumentList	retval		3978991	1					
ANR	3979214	Argument	retval		3978991	0					
ANR	3979215	Identifier	retval		3978991	0					
ANR	3979216	Identifier	IS_INDIRECT		3978991	1					
ANR	3979217	CompoundStatement		40:52:1088:1088	3978991	1					
ANR	3979218	ExpressionStatement	retval = Z_INDIRECT_P ( retval )	1577:4:49249:49278	3978991	0	True				
ANR	3979219	AssignmentExpression	retval = Z_INDIRECT_P ( retval )		3978991	0		=			
ANR	3979220	Identifier	retval		3978991	0					
ANR	3979221	CallExpression	Z_INDIRECT_P ( retval )		3978991	1					
ANR	3979222	Callee	Z_INDIRECT_P		3978991	0					
ANR	3979223	Identifier	Z_INDIRECT_P		3978991	0					
ANR	3979224	ArgumentList	retval		3978991	1					
ANR	3979225	Argument	retval		3978991	0					
ANR	3979226	Identifier	retval		3978991	0					
ANR	3979227	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( retval ) == IS_UNDEF ) )		3978991	1					
ANR	3979228	Condition	UNEXPECTED ( Z_TYPE_P ( retval ) == IS_UNDEF )	1578:8:49288:49327	3978991	0	True				
ANR	3979229	CallExpression	UNEXPECTED ( Z_TYPE_P ( retval ) == IS_UNDEF )		3978991	0					
ANR	3979230	Callee	UNEXPECTED		3978991	0					
ANR	3979231	Identifier	UNEXPECTED		3978991	0					
ANR	3979232	ArgumentList	Z_TYPE_P ( retval ) == IS_UNDEF		3978991	1					
ANR	3979233	Argument	Z_TYPE_P ( retval ) == IS_UNDEF		3978991	0					
ANR	3979234	EqualityExpression	Z_TYPE_P ( retval ) == IS_UNDEF		3978991	0		==			
ANR	3979235	CallExpression	Z_TYPE_P ( retval )		3978991	0					
ANR	3979236	Callee	Z_TYPE_P		3978991	0					
ANR	3979237	Identifier	Z_TYPE_P		3978991	0					
ANR	3979238	ArgumentList	retval		3978991	1					
ANR	3979239	Argument	retval		3978991	0					
ANR	3979240	Identifier	retval		3978991	0					
ANR	3979241	Identifier	IS_UNDEF		3978991	1					
ANR	3979242	CompoundStatement		42:50:1175:1175	3978991	1					
ANR	3979243	SwitchStatement	switch ( type )		3978991	0					
ANR	3979244	Condition	type	1579:13:49345:49348	3978991	0	True				
ANR	3979245	Identifier	type		3978991	0					
ANR	3979246	CompoundStatement		43:19:1196:1196	3978991	1					
ANR	3979247	Label	case BP_VAR_R :	1580:6:49359:49372	3978991	0	True				
ANR	3979248	Identifier	BP_VAR_R		3978991	0					
ANR	3979249	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined index: %s"" , ZSTR_VAL ( offset_key ) )"	1581:7:49381:49446	3978991	1	True				
ANR	3979250	CallExpression	"zend_error ( E_NOTICE , ""Undefined index: %s"" , ZSTR_VAL ( offset_key ) )"		3978991	0					
ANR	3979251	Callee	zend_error		3978991	0					
ANR	3979252	Identifier	zend_error		3978991	0					
ANR	3979253	ArgumentList	E_NOTICE		3978991	1					
ANR	3979254	Argument	E_NOTICE		3978991	0					
ANR	3979255	Identifier	E_NOTICE		3978991	0					
ANR	3979256	Argument	"""Undefined index: %s"""		3978991	1					
ANR	3979257	PrimaryExpression	"""Undefined index: %s"""		3978991	0					
ANR	3979258	Argument	ZSTR_VAL ( offset_key )		3978991	2					
ANR	3979259	CallExpression	ZSTR_VAL ( offset_key )		3978991	0					
ANR	3979260	Callee	ZSTR_VAL		3978991	0					
ANR	3979261	Identifier	ZSTR_VAL		3978991	0					
ANR	3979262	ArgumentList	offset_key		3978991	1					
ANR	3979263	Argument	offset_key		3978991	0					
ANR	3979264	Identifier	offset_key		3978991	0					
ANR	3979265	Label	case BP_VAR_UNSET :	1583:6:49495:49512	3978991	2	True				
ANR	3979266	Identifier	BP_VAR_UNSET		3978991	0					
ANR	3979267	Label	case BP_VAR_IS :	1584:6:49520:49534	3978991	3	True				
ANR	3979268	Identifier	BP_VAR_IS		3978991	0					
ANR	3979269	ExpressionStatement	retval = & EG ( uninitialized_zval )	1585:7:49543:49575	3978991	4	True				
ANR	3979270	AssignmentExpression	retval = & EG ( uninitialized_zval )		3978991	0		=			
ANR	3979271	Identifier	retval		3978991	0					
ANR	3979272	UnaryOperationExpression	& EG ( uninitialized_zval )		3978991	1					
ANR	3979273	UnaryOperator	&		3978991	0					
ANR	3979274	CallExpression	EG ( uninitialized_zval )		3978991	1					
ANR	3979275	Callee	EG		3978991	0					
ANR	3979276	Identifier	EG		3978991	0					
ANR	3979277	ArgumentList	uninitialized_zval		3978991	1					
ANR	3979278	Argument	uninitialized_zval		3978991	0					
ANR	3979279	Identifier	uninitialized_zval		3978991	0					
ANR	3979280	BreakStatement	break ;	1586:7:49584:49589	3978991	5	True				
ANR	3979281	Label	case BP_VAR_RW :	1587:6:49597:49611	3978991	6	True				
ANR	3979282	Identifier	BP_VAR_RW		3978991	0					
ANR	3979283	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined index: %s"" , ZSTR_VAL ( offset_key ) )"	1588:7:49620:49684	3978991	7	True				
ANR	3979284	CallExpression	"zend_error ( E_NOTICE , ""Undefined index: %s"" , ZSTR_VAL ( offset_key ) )"		3978991	0					
ANR	3979285	Callee	zend_error		3978991	0					
ANR	3979286	Identifier	zend_error		3978991	0					
ANR	3979287	ArgumentList	E_NOTICE		3978991	1					
ANR	3979288	Argument	E_NOTICE		3978991	0					
ANR	3979289	Identifier	E_NOTICE		3978991	0					
ANR	3979290	Argument	"""Undefined index: %s"""		3978991	1					
ANR	3979291	PrimaryExpression	"""Undefined index: %s"""		3978991	0					
ANR	3979292	Argument	ZSTR_VAL ( offset_key )		3978991	2					
ANR	3979293	CallExpression	ZSTR_VAL ( offset_key )		3978991	0					
ANR	3979294	Callee	ZSTR_VAL		3978991	0					
ANR	3979295	Identifier	ZSTR_VAL		3978991	0					
ANR	3979296	ArgumentList	offset_key		3978991	1					
ANR	3979297	Argument	offset_key		3978991	0					
ANR	3979298	Identifier	offset_key		3978991	0					
ANR	3979299	Label	case BP_VAR_W :	1590:6:49733:49746	3978991	8	True				
ANR	3979300	Identifier	BP_VAR_W		3978991	0					
ANR	3979301	ExpressionStatement	ZVAL_NULL ( retval )	1591:7:49755:49772	3978991	9	True				
ANR	3979302	CallExpression	ZVAL_NULL ( retval )		3978991	0					
ANR	3979303	Callee	ZVAL_NULL		3978991	0					
ANR	3979304	Identifier	ZVAL_NULL		3978991	0					
ANR	3979305	ArgumentList	retval		3978991	1					
ANR	3979306	Argument	retval		3978991	0					
ANR	3979307	Identifier	retval		3978991	0					
ANR	3979308	BreakStatement	break ;	1592:7:49781:49786	3978991	10	True				
ANR	3979309	ElseStatement	else		3978991	0					
ANR	3979310	CompoundStatement		60:9:1660:1660	3978991	0					
ANR	3979311	SwitchStatement	switch ( type )		3978991	0					
ANR	3979312	Condition	type	1597:11:49828:49831	3978991	0	True				
ANR	3979313	Identifier	type		3978991	0					
ANR	3979314	CompoundStatement		61:17:1679:1679	3978991	1					
ANR	3979315	Label	case BP_VAR_R :	1598:4:49840:49853	3978991	0	True				
ANR	3979316	Identifier	BP_VAR_R		3978991	0					
ANR	3979317	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined index: %s"" , ZSTR_VAL ( offset_key ) )"	1599:5:49860:49925	3978991	1	True				
ANR	3979318	CallExpression	"zend_error ( E_NOTICE , ""Undefined index: %s"" , ZSTR_VAL ( offset_key ) )"		3978991	0					
ANR	3979319	Callee	zend_error		3978991	0					
ANR	3979320	Identifier	zend_error		3978991	0					
ANR	3979321	ArgumentList	E_NOTICE		3978991	1					
ANR	3979322	Argument	E_NOTICE		3978991	0					
ANR	3979323	Identifier	E_NOTICE		3978991	0					
ANR	3979324	Argument	"""Undefined index: %s"""		3978991	1					
ANR	3979325	PrimaryExpression	"""Undefined index: %s"""		3978991	0					
ANR	3979326	Argument	ZSTR_VAL ( offset_key )		3978991	2					
ANR	3979327	CallExpression	ZSTR_VAL ( offset_key )		3978991	0					
ANR	3979328	Callee	ZSTR_VAL		3978991	0					
ANR	3979329	Identifier	ZSTR_VAL		3978991	0					
ANR	3979330	ArgumentList	offset_key		3978991	1					
ANR	3979331	Argument	offset_key		3978991	0					
ANR	3979332	Identifier	offset_key		3978991	0					
ANR	3979333	Label	case BP_VAR_UNSET :	1601:4:49970:49987	3978991	2	True				
ANR	3979334	Identifier	BP_VAR_UNSET		3978991	0					
ANR	3979335	Label	case BP_VAR_IS :	1602:4:49993:50007	3978991	3	True				
ANR	3979336	Identifier	BP_VAR_IS		3978991	0					
ANR	3979337	ExpressionStatement	retval = & EG ( uninitialized_zval )	1603:5:50014:50046	3978991	4	True				
ANR	3979338	AssignmentExpression	retval = & EG ( uninitialized_zval )		3978991	0		=			
ANR	3979339	Identifier	retval		3978991	0					
ANR	3979340	UnaryOperationExpression	& EG ( uninitialized_zval )		3978991	1					
ANR	3979341	UnaryOperator	&		3978991	0					
ANR	3979342	CallExpression	EG ( uninitialized_zval )		3978991	1					
ANR	3979343	Callee	EG		3978991	0					
ANR	3979344	Identifier	EG		3978991	0					
ANR	3979345	ArgumentList	uninitialized_zval		3978991	1					
ANR	3979346	Argument	uninitialized_zval		3978991	0					
ANR	3979347	Identifier	uninitialized_zval		3978991	0					
ANR	3979348	BreakStatement	break ;	1604:5:50053:50058	3978991	5	True				
ANR	3979349	Label	case BP_VAR_RW :	1605:4:50064:50078	3978991	6	True				
ANR	3979350	Identifier	BP_VAR_RW		3978991	0					
ANR	3979351	ExpressionStatement	"zend_error ( E_NOTICE , ""Undefined index: %s"" , ZSTR_VAL ( offset_key ) )"	1606:5:50085:50149	3978991	7	True				
ANR	3979352	CallExpression	"zend_error ( E_NOTICE , ""Undefined index: %s"" , ZSTR_VAL ( offset_key ) )"		3978991	0					
ANR	3979353	Callee	zend_error		3978991	0					
ANR	3979354	Identifier	zend_error		3978991	0					
ANR	3979355	ArgumentList	E_NOTICE		3978991	1					
ANR	3979356	Argument	E_NOTICE		3978991	0					
ANR	3979357	Identifier	E_NOTICE		3978991	0					
ANR	3979358	Argument	"""Undefined index: %s"""		3978991	1					
ANR	3979359	PrimaryExpression	"""Undefined index: %s"""		3978991	0					
ANR	3979360	Argument	ZSTR_VAL ( offset_key )		3978991	2					
ANR	3979361	CallExpression	ZSTR_VAL ( offset_key )		3978991	0					
ANR	3979362	Callee	ZSTR_VAL		3978991	0					
ANR	3979363	Identifier	ZSTR_VAL		3978991	0					
ANR	3979364	ArgumentList	offset_key		3978991	1					
ANR	3979365	Argument	offset_key		3978991	0					
ANR	3979366	Identifier	offset_key		3978991	0					
ANR	3979367	ExpressionStatement	"retval = zend_hash_update ( ht , offset_key , & EG ( uninitialized_zval ) )"	1607:5:50156:50222	3978991	8	True				
ANR	3979368	AssignmentExpression	"retval = zend_hash_update ( ht , offset_key , & EG ( uninitialized_zval ) )"		3978991	0		=			
ANR	3979369	Identifier	retval		3978991	0					
ANR	3979370	CallExpression	"zend_hash_update ( ht , offset_key , & EG ( uninitialized_zval ) )"		3978991	1					
ANR	3979371	Callee	zend_hash_update		3978991	0					
ANR	3979372	Identifier	zend_hash_update		3978991	0					
ANR	3979373	ArgumentList	ht		3978991	1					
ANR	3979374	Argument	ht		3978991	0					
ANR	3979375	Identifier	ht		3978991	0					
ANR	3979376	Argument	offset_key		3978991	1					
ANR	3979377	Identifier	offset_key		3978991	0					
ANR	3979378	Argument	& EG ( uninitialized_zval )		3978991	2					
ANR	3979379	UnaryOperationExpression	& EG ( uninitialized_zval )		3978991	0					
ANR	3979380	UnaryOperator	&		3978991	0					
ANR	3979381	CallExpression	EG ( uninitialized_zval )		3978991	1					
ANR	3979382	Callee	EG		3978991	0					
ANR	3979383	Identifier	EG		3978991	0					
ANR	3979384	ArgumentList	uninitialized_zval		3978991	1					
ANR	3979385	Argument	uninitialized_zval		3978991	0					
ANR	3979386	Identifier	uninitialized_zval		3978991	0					
ANR	3979387	BreakStatement	break ;	1608:5:50229:50234	3978991	9	True				
ANR	3979388	Label	case BP_VAR_W :	1609:4:50240:50253	3978991	10	True				
ANR	3979389	Identifier	BP_VAR_W		3978991	0					
ANR	3979390	ExpressionStatement	"retval = zend_hash_add_new ( ht , offset_key , & EG ( uninitialized_zval ) )"	1610:5:50260:50327	3978991	11	True				
ANR	3979391	AssignmentExpression	"retval = zend_hash_add_new ( ht , offset_key , & EG ( uninitialized_zval ) )"		3978991	0		=			
ANR	3979392	Identifier	retval		3978991	0					
ANR	3979393	CallExpression	"zend_hash_add_new ( ht , offset_key , & EG ( uninitialized_zval ) )"		3978991	1					
ANR	3979394	Callee	zend_hash_add_new		3978991	0					
ANR	3979395	Identifier	zend_hash_add_new		3978991	0					
ANR	3979396	ArgumentList	ht		3978991	1					
ANR	3979397	Argument	ht		3978991	0					
ANR	3979398	Identifier	ht		3978991	0					
ANR	3979399	Argument	offset_key		3978991	1					
ANR	3979400	Identifier	offset_key		3978991	0					
ANR	3979401	Argument	& EG ( uninitialized_zval )		3978991	2					
ANR	3979402	UnaryOperationExpression	& EG ( uninitialized_zval )		3978991	0					
ANR	3979403	UnaryOperator	&		3978991	0					
ANR	3979404	CallExpression	EG ( uninitialized_zval )		3978991	1					
ANR	3979405	Callee	EG		3978991	0					
ANR	3979406	Identifier	EG		3978991	0					
ANR	3979407	ArgumentList	uninitialized_zval		3978991	1					
ANR	3979408	Argument	uninitialized_zval		3978991	0					
ANR	3979409	Identifier	uninitialized_zval		3978991	0					
ANR	3979410	BreakStatement	break ;	1611:5:50334:50339	3978991	12	True				
ANR	3979411	ElseStatement	else		3978991	0					
ANR	3979412	CompoundStatement		78:8:2203:2203	3978991	0					
ANR	3979413	SwitchStatement	switch ( Z_TYPE_P ( dim ) )		3978991	0					
ANR	3979414	Condition	Z_TYPE_P ( dim )	1615:10:50370:50382	3978991	0	True				
ANR	3979415	CallExpression	Z_TYPE_P ( dim )		3978991	0					
ANR	3979416	Callee	Z_TYPE_P		3978991	0					
ANR	3979417	Identifier	Z_TYPE_P		3978991	0					
ANR	3979418	ArgumentList	dim		3978991	1					
ANR	3979419	Argument	dim		3978991	0					
ANR	3979420	Identifier	dim		3978991	0					
ANR	3979421	CompoundStatement		79:25:2230:2230	3978991	1					
ANR	3979422	Label	case IS_NULL :	1616:3:50390:50402	3978991	0	True				
ANR	3979423	Identifier	IS_NULL		3978991	0					
ANR	3979424	ExpressionStatement	offset_key = ZSTR_EMPTY_ALLOC ( )	1617:4:50408:50439	3978991	1	True				
ANR	3979425	AssignmentExpression	offset_key = ZSTR_EMPTY_ALLOC ( )		3978991	0		=			
ANR	3979426	Identifier	offset_key		3978991	0					
ANR	3979427	CallExpression	ZSTR_EMPTY_ALLOC ( )		3978991	1					
ANR	3979428	Callee	ZSTR_EMPTY_ALLOC		3978991	0					
ANR	3979429	Identifier	ZSTR_EMPTY_ALLOC		3978991	0					
ANR	3979430	ArgumentList			3978991	1					
ANR	3979431	GotoStatement	goto str_index ;	1618:4:50445:50459	3978991	2	True				
ANR	3979432	Identifier	str_index		3978991	0					
ANR	3979433	Label	case IS_DOUBLE :	1619:3:50464:50478	3978991	3	True				
ANR	3979434	Identifier	IS_DOUBLE		3978991	0					
ANR	3979435	ExpressionStatement	hval = zend_dval_to_lval ( Z_DVAL_P ( dim ) )	1620:4:50484:50523	3978991	4	True				
ANR	3979436	AssignmentExpression	hval = zend_dval_to_lval ( Z_DVAL_P ( dim ) )		3978991	0		=			
ANR	3979437	Identifier	hval		3978991	0					
ANR	3979438	CallExpression	zend_dval_to_lval ( Z_DVAL_P ( dim ) )		3978991	1					
ANR	3979439	Callee	zend_dval_to_lval		3978991	0					
ANR	3979440	Identifier	zend_dval_to_lval		3978991	0					
ANR	3979441	ArgumentList	Z_DVAL_P ( dim )		3978991	1					
ANR	3979442	Argument	Z_DVAL_P ( dim )		3978991	0					
ANR	3979443	CallExpression	Z_DVAL_P ( dim )		3978991	0					
ANR	3979444	Callee	Z_DVAL_P		3978991	0					
ANR	3979445	Identifier	Z_DVAL_P		3978991	0					
ANR	3979446	ArgumentList	dim		3978991	1					
ANR	3979447	Argument	dim		3978991	0					
ANR	3979448	Identifier	dim		3978991	0					
ANR	3979449	GotoStatement	goto num_index ;	1621:4:50529:50543	3978991	5	True				
ANR	3979450	Identifier	num_index		3978991	0					
ANR	3979451	Label	case IS_RESOURCE :	1622:3:50548:50564	3978991	6	True				
ANR	3979452	Identifier	IS_RESOURCE		3978991	0					
ANR	3979453	ExpressionStatement	"zend_error ( E_NOTICE , ""Resource ID#%pd used as offset, casting to integer (%pd)"" , Z_RES_HANDLE_P ( dim ) , Z_RES_HANDLE_P ( dim ) )"	1623:4:50570:50692	3978991	7	True				
ANR	3979454	CallExpression	"zend_error ( E_NOTICE , ""Resource ID#%pd used as offset, casting to integer (%pd)"" , Z_RES_HANDLE_P ( dim ) , Z_RES_HANDLE_P ( dim ) )"		3978991	0					
ANR	3979455	Callee	zend_error		3978991	0					
ANR	3979456	Identifier	zend_error		3978991	0					
ANR	3979457	ArgumentList	E_NOTICE		3978991	1					
ANR	3979458	Argument	E_NOTICE		3978991	0					
ANR	3979459	Identifier	E_NOTICE		3978991	0					
ANR	3979460	Argument	"""Resource ID#%pd used as offset, casting to integer (%pd)"""		3978991	1					
ANR	3979461	PrimaryExpression	"""Resource ID#%pd used as offset, casting to integer (%pd)"""		3978991	0					
ANR	3979462	Argument	Z_RES_HANDLE_P ( dim )		3978991	2					
ANR	3979463	CallExpression	Z_RES_HANDLE_P ( dim )		3978991	0					
ANR	3979464	Callee	Z_RES_HANDLE_P		3978991	0					
ANR	3979465	Identifier	Z_RES_HANDLE_P		3978991	0					
ANR	3979466	ArgumentList	dim		3978991	1					
ANR	3979467	Argument	dim		3978991	0					
ANR	3979468	Identifier	dim		3978991	0					
ANR	3979469	Argument	Z_RES_HANDLE_P ( dim )		3978991	3					
ANR	3979470	CallExpression	Z_RES_HANDLE_P ( dim )		3978991	0					
ANR	3979471	Callee	Z_RES_HANDLE_P		3978991	0					
ANR	3979472	Identifier	Z_RES_HANDLE_P		3978991	0					
ANR	3979473	ArgumentList	dim		3978991	1					
ANR	3979474	Argument	dim		3978991	0					
ANR	3979475	Identifier	dim		3978991	0					
ANR	3979476	ExpressionStatement	hval = Z_RES_HANDLE_P ( dim )	1624:4:50698:50724	3978991	8	True				
ANR	3979477	AssignmentExpression	hval = Z_RES_HANDLE_P ( dim )		3978991	0		=			
ANR	3979478	Identifier	hval		3978991	0					
ANR	3979479	CallExpression	Z_RES_HANDLE_P ( dim )		3978991	1					
ANR	3979480	Callee	Z_RES_HANDLE_P		3978991	0					
ANR	3979481	Identifier	Z_RES_HANDLE_P		3978991	0					
ANR	3979482	ArgumentList	dim		3978991	1					
ANR	3979483	Argument	dim		3978991	0					
ANR	3979484	Identifier	dim		3978991	0					
ANR	3979485	GotoStatement	goto num_index ;	1625:4:50730:50744	3978991	9	True				
ANR	3979486	Identifier	num_index		3978991	0					
ANR	3979487	Label	case IS_FALSE :	1626:3:50749:50762	3978991	10	True				
ANR	3979488	Identifier	IS_FALSE		3978991	0					
ANR	3979489	ExpressionStatement	hval = 0	1627:4:50768:50776	3978991	11	True				
ANR	3979490	AssignmentExpression	hval = 0		3978991	0		=			
ANR	3979491	Identifier	hval		3978991	0					
ANR	3979492	PrimaryExpression	0		3978991	1					
ANR	3979493	GotoStatement	goto num_index ;	1628:4:50782:50796	3978991	12	True				
ANR	3979494	Identifier	num_index		3978991	0					
ANR	3979495	Label	case IS_TRUE :	1629:3:50801:50813	3978991	13	True				
ANR	3979496	Identifier	IS_TRUE		3978991	0					
ANR	3979497	ExpressionStatement	hval = 1	1630:4:50819:50827	3978991	14	True				
ANR	3979498	AssignmentExpression	hval = 1		3978991	0		=			
ANR	3979499	Identifier	hval		3978991	0					
ANR	3979500	PrimaryExpression	1		3978991	1					
ANR	3979501	GotoStatement	goto num_index ;	1631:4:50833:50847	3978991	15	True				
ANR	3979502	Identifier	num_index		3978991	0					
ANR	3979503	Label	case IS_REFERENCE :	1632:3:50852:50869	3978991	16	True				
ANR	3979504	Identifier	IS_REFERENCE		3978991	0					
ANR	3979505	ExpressionStatement	dim = Z_REFVAL_P ( dim )	1633:4:50875:50896	3978991	17	True				
ANR	3979506	AssignmentExpression	dim = Z_REFVAL_P ( dim )		3978991	0		=			
ANR	3979507	Identifier	dim		3978991	0					
ANR	3979508	CallExpression	Z_REFVAL_P ( dim )		3978991	1					
ANR	3979509	Callee	Z_REFVAL_P		3978991	0					
ANR	3979510	Identifier	Z_REFVAL_P		3978991	0					
ANR	3979511	ArgumentList	dim		3978991	1					
ANR	3979512	Argument	dim		3978991	0					
ANR	3979513	Identifier	dim		3978991	0					
ANR	3979514	GotoStatement	goto try_again ;	1634:4:50902:50916	3978991	18	True				
ANR	3979515	Identifier	try_again		3978991	0					
ANR	3979516	Label	default :	1635:3:50921:50928	3978991	19	True				
ANR	3979517	Identifier	default		3978991	0					
ANR	3979518	ExpressionStatement	"zend_error ( E_WARNING , ""Illegal offset type"" )"	1636:4:50934:50978	3978991	20	True				
ANR	3979519	CallExpression	"zend_error ( E_WARNING , ""Illegal offset type"" )"		3978991	0					
ANR	3979520	Callee	zend_error		3978991	0					
ANR	3979521	Identifier	zend_error		3978991	0					
ANR	3979522	ArgumentList	E_WARNING		3978991	1					
ANR	3979523	Argument	E_WARNING		3978991	0					
ANR	3979524	Identifier	E_WARNING		3978991	0					
ANR	3979525	Argument	"""Illegal offset type"""		3978991	1					
ANR	3979526	PrimaryExpression	"""Illegal offset type"""		3978991	0					
ANR	3979527	ExpressionStatement	retval = ( type == BP_VAR_W || type == BP_VAR_RW ) ? & EG ( error_zval ) : & EG ( uninitialized_zval )	1637:4:50984:51081	3978991	21	True				
ANR	3979528	AssignmentExpression	retval = ( type == BP_VAR_W || type == BP_VAR_RW ) ? & EG ( error_zval ) : & EG ( uninitialized_zval )		3978991	0		=			
ANR	3979529	Identifier	retval		3978991	0					
ANR	3979530	ConditionalExpression	( type == BP_VAR_W || type == BP_VAR_RW ) ? & EG ( error_zval ) : & EG ( uninitialized_zval )		3978991	1					
ANR	3979531	Condition	type == BP_VAR_W || type == BP_VAR_RW		3978991	0					
ANR	3979532	OrExpression	type == BP_VAR_W || type == BP_VAR_RW		3978991	0		||			
ANR	3979533	EqualityExpression	type == BP_VAR_W		3978991	0		==			
ANR	3979534	Identifier	type		3978991	0					
ANR	3979535	Identifier	BP_VAR_W		3978991	1					
ANR	3979536	EqualityExpression	type == BP_VAR_RW		3978991	1		==			
ANR	3979537	Identifier	type		3978991	0					
ANR	3979538	Identifier	BP_VAR_RW		3978991	1					
ANR	3979539	UnaryOperationExpression	& EG ( error_zval )		3978991	1					
ANR	3979540	UnaryOperator	&		3978991	0					
ANR	3979541	CallExpression	EG ( error_zval )		3978991	1					
ANR	3979542	Callee	EG		3978991	0					
ANR	3979543	Identifier	EG		3978991	0					
ANR	3979544	ArgumentList	error_zval		3978991	1					
ANR	3979545	Argument	error_zval		3978991	0					
ANR	3979546	Identifier	error_zval		3978991	0					
ANR	3979547	UnaryOperationExpression	& EG ( uninitialized_zval )		3978991	2					
ANR	3979548	UnaryOperator	&		3978991	0					
ANR	3979549	CallExpression	EG ( uninitialized_zval )		3978991	1					
ANR	3979550	Callee	EG		3978991	0					
ANR	3979551	Identifier	EG		3978991	0					
ANR	3979552	ArgumentList	uninitialized_zval		3978991	1					
ANR	3979553	Argument	uninitialized_zval		3978991	0					
ANR	3979554	Identifier	uninitialized_zval		3978991	0					
ANR	3979555	ReturnStatement	return retval ;	1641:1:51091:51104	3978991	5	True				
ANR	3979556	Identifier	retval		3978991	0					
ANR	3979557	ReturnType	static zend_always_inline zval *		3978991	1					
ANR	3979558	Identifier	zend_fetch_dimension_address_inner		3978991	2					
ANR	3979559	ParameterList	"HashTable * ht , const zval * dim , int dim_type , int type"		3978991	3					
ANR	3979560	Parameter	HashTable * ht	1536:67:48098:48110	3978991	0	True				
ANR	3979561	ParameterType	HashTable *		3978991	0					
ANR	3979562	Identifier	ht		3978991	1					
ANR	3979563	Parameter	const zval * dim	1536:82:48113:48127	3978991	1	True				
ANR	3979564	ParameterType	const zval *		3978991	0					
ANR	3979565	Identifier	dim		3978991	1					
ANR	3979566	Parameter	int dim_type	1536:99:48130:48141	3978991	2	True				
ANR	3979567	ParameterType	int		3978991	0					
ANR	3979568	Identifier	dim_type		3978991	1					
ANR	3979569	Parameter	int type	1536:113:48144:48151	3978991	3	True				
ANR	3979570	ParameterType	int		3978991	0					
ANR	3979571	Identifier	type		3978991	1					
ANR	3979572	CFGEntryNode	ENTRY		3978991		True				
ANR	3979573	CFGExitNode	EXIT		3978991		True				
ANR	3979574	Symbol	Z_RES_HANDLE_P		3978991						
ANR	3979575	Symbol	dim_type		3978991						
ANR	3979576	Symbol	hval		3978991						
ANR	3979577	Symbol	dim		3978991						
ANR	3979578	Symbol	Z_INDIRECT_P		3978991						
ANR	3979579	Symbol	ht		3978991						
ANR	3979580	Symbol	type		3978991						
ANR	3979581	Symbol	& EG		3978991						
ANR	3979582	Symbol	ZSTR_EMPTY_ALLOC		3978991						
ANR	3979583	Symbol	UNEXPECTED		3978991						
ANR	3979584	Symbol	zend_dval_to_lval		3978991						
ANR	3979585	Symbol	E_WARNING		3978991						
ANR	3979586	Symbol	zend_hash_find		3978991						
ANR	3979587	Symbol	IS_LONG		3978991						
ANR	3979588	Symbol	BP_VAR_W		3978991						
ANR	3979589	Symbol	offset_key		3978991						
ANR	3979590	Symbol	IS_STRING		3978991						
ANR	3979591	Symbol	zend_hash_update		3978991						
ANR	3979592	Symbol	IS_UNDEF		3978991						
ANR	3979593	Symbol	uninitialized_zval		3978991						
ANR	3979594	Symbol	BP_VAR_RW		3978991						
ANR	3979595	Symbol	zend_hash_index_find		3978991						
ANR	3979596	Symbol	IS_CONST		3978991						
ANR	3979597	Symbol	NULL		3978991						
ANR	3979598	Symbol	zend_hash_index_update		3978991						
ANR	3979599	Symbol	E_NOTICE		3978991						
ANR	3979600	Symbol	zend_hash_add_new		3978991						
ANR	3979601	Symbol	Z_TYPE_P		3978991						
ANR	3979602	Symbol	retval		3978991						
ANR	3979603	Symbol	Z_DVAL_P		3978991						
ANR	3979604	Symbol	Z_LVAL_P		3978991						
ANR	3979605	Symbol	ZSTR_VAL		3978991						
ANR	3979606	Symbol	Z_REFVAL_P		3978991						
ANR	3979607	Symbol	error_zval		3978991						
ANR	3979608	Symbol	Z_STR_P		3978991						
ANR	3979609	Symbol	zend_hash_index_add_new		3978991						
ANR	3979610	Symbol	EXPECTED		3978991						
ANR	3979611	Symbol	ZEND_HANDLE_NUMERIC		3978991						
ANR	3979612	Symbol	IS_INDIRECT		3978991						
ANR	3979613	Function	zend_check_string_offset	1644:0:51109:51918							
ANR	3979614	FunctionDef	"zend_check_string_offset (zval * dim , int type)"		3979613	0					
ANR	3979615	CompoundStatement		1645:0:51190:51918	3979613	0					
ANR	3979616	IdentifierDeclStatement	zend_long offset ;	1646:1:51193:51209	3979613	0	True				
ANR	3979617	IdentifierDecl	offset		3979613	0					
ANR	3979618	IdentifierDeclType	zend_long		3979613	0					
ANR	3979619	Identifier	offset		3979613	1					
ANR	3979620	Label	try_again :	1648:0:51212:51221	3979613	1	True				
ANR	3979621	Identifier	try_again		3979613	0					
ANR	3979622	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( dim ) != IS_LONG ) )		3979613	2					
ANR	3979623	Condition	UNEXPECTED ( Z_TYPE_P ( dim ) != IS_LONG )	1649:5:51228:51263	3979613	0	True				
ANR	3979624	CallExpression	UNEXPECTED ( Z_TYPE_P ( dim ) != IS_LONG )		3979613	0					
ANR	3979625	Callee	UNEXPECTED		3979613	0					
ANR	3979626	Identifier	UNEXPECTED		3979613	0					
ANR	3979627	ArgumentList	Z_TYPE_P ( dim ) != IS_LONG		3979613	1					
ANR	3979628	Argument	Z_TYPE_P ( dim ) != IS_LONG		3979613	0					
ANR	3979629	EqualityExpression	Z_TYPE_P ( dim ) != IS_LONG		3979613	0		!=			
ANR	3979630	CallExpression	Z_TYPE_P ( dim )		3979613	0					
ANR	3979631	Callee	Z_TYPE_P		3979613	0					
ANR	3979632	Identifier	Z_TYPE_P		3979613	0					
ANR	3979633	ArgumentList	dim		3979613	1					
ANR	3979634	Argument	dim		3979613	0					
ANR	3979635	Identifier	dim		3979613	0					
ANR	3979636	Identifier	IS_LONG		3979613	1					
ANR	3979637	CompoundStatement		5:43:75:75	3979613	1					
ANR	3979638	SwitchStatement	switch ( Z_TYPE_P ( dim ) )		3979613	0					
ANR	3979639	Condition	Z_TYPE_P ( dim )	1650:9:51277:51289	3979613	0	True				
ANR	3979640	CallExpression	Z_TYPE_P ( dim )		3979613	0					
ANR	3979641	Callee	Z_TYPE_P		3979613	0					
ANR	3979642	Identifier	Z_TYPE_P		3979613	0					
ANR	3979643	ArgumentList	dim		3979613	1					
ANR	3979644	Argument	dim		3979613	0					
ANR	3979645	Identifier	dim		3979613	0					
ANR	3979646	CompoundStatement		6:24:101:101	3979613	1					
ANR	3979647	Label	case IS_STRING :	1651:3:51297:51311	3979613	0	True				
ANR	3979648	Identifier	IS_STRING		3979613	0					
ANR	3979649	IfStatement	"if ( IS_LONG == is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , NULL , NULL , - 1 ) )"		3979613	1					
ANR	3979650	Condition	"IS_LONG == is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , NULL , NULL , - 1 )"	1652:8:51321:51398	3979613	0	True				
ANR	3979651	EqualityExpression	"IS_LONG == is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , NULL , NULL , - 1 )"		3979613	0		==			
ANR	3979652	Identifier	IS_LONG		3979613	0					
ANR	3979653	CallExpression	"is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , NULL , NULL , - 1 )"		3979613	1					
ANR	3979654	Callee	is_numeric_string		3979613	0					
ANR	3979655	Identifier	is_numeric_string		3979613	0					
ANR	3979656	ArgumentList	Z_STRVAL_P ( dim )		3979613	1					
ANR	3979657	Argument	Z_STRVAL_P ( dim )		3979613	0					
ANR	3979658	CallExpression	Z_STRVAL_P ( dim )		3979613	0					
ANR	3979659	Callee	Z_STRVAL_P		3979613	0					
ANR	3979660	Identifier	Z_STRVAL_P		3979613	0					
ANR	3979661	ArgumentList	dim		3979613	1					
ANR	3979662	Argument	dim		3979613	0					
ANR	3979663	Identifier	dim		3979613	0					
ANR	3979664	Argument	Z_STRLEN_P ( dim )		3979613	1					
ANR	3979665	CallExpression	Z_STRLEN_P ( dim )		3979613	0					
ANR	3979666	Callee	Z_STRLEN_P		3979613	0					
ANR	3979667	Identifier	Z_STRLEN_P		3979613	0					
ANR	3979668	ArgumentList	dim		3979613	1					
ANR	3979669	Argument	dim		3979613	0					
ANR	3979670	Identifier	dim		3979613	0					
ANR	3979671	Argument	NULL		3979613	2					
ANR	3979672	Identifier	NULL		3979613	0					
ANR	3979673	Argument	NULL		3979613	3					
ANR	3979674	Identifier	NULL		3979613	0					
ANR	3979675	Argument	- 1		3979613	4					
ANR	3979676	UnaryOperationExpression	- 1		3979613	0					
ANR	3979677	UnaryOperator	-		3979613	0					
ANR	3979678	PrimaryExpression	1		3979613	1					
ANR	3979679	CompoundStatement		8:88:210:210	3979613	1					
ANR	3979680	BreakStatement	break ;	1653:5:51408:51413	3979613	0	True				
ANR	3979681	IfStatement	if ( type != BP_VAR_UNSET )		3979613	2					
ANR	3979682	Condition	type != BP_VAR_UNSET	1655:8:51429:51448	3979613	0	True				
ANR	3979683	EqualityExpression	type != BP_VAR_UNSET		3979613	0		!=			
ANR	3979684	Identifier	type		3979613	0					
ANR	3979685	Identifier	BP_VAR_UNSET		3979613	1					
ANR	3979686	CompoundStatement		11:30:260:260	3979613	1					
ANR	3979687	ExpressionStatement	"zend_error ( E_WARNING , ""Illegal string offset '%s'"" , Z_STRVAL_P ( dim ) )"	1656:5:51458:51526	3979613	0	True				
ANR	3979688	CallExpression	"zend_error ( E_WARNING , ""Illegal string offset '%s'"" , Z_STRVAL_P ( dim ) )"		3979613	0					
ANR	3979689	Callee	zend_error		3979613	0					
ANR	3979690	Identifier	zend_error		3979613	0					
ANR	3979691	ArgumentList	E_WARNING		3979613	1					
ANR	3979692	Argument	E_WARNING		3979613	0					
ANR	3979693	Identifier	E_WARNING		3979613	0					
ANR	3979694	Argument	"""Illegal string offset '%s'"""		3979613	1					
ANR	3979695	PrimaryExpression	"""Illegal string offset '%s'"""		3979613	0					
ANR	3979696	Argument	Z_STRVAL_P ( dim )		3979613	2					
ANR	3979697	CallExpression	Z_STRVAL_P ( dim )		3979613	0					
ANR	3979698	Callee	Z_STRVAL_P		3979613	0					
ANR	3979699	Identifier	Z_STRVAL_P		3979613	0					
ANR	3979700	ArgumentList	dim		3979613	1					
ANR	3979701	Argument	dim		3979613	0					
ANR	3979702	Identifier	dim		3979613	0					
ANR	3979703	BreakStatement	break ;	1658:4:51538:51543	3979613	3	True				
ANR	3979704	Label	case IS_DOUBLE :	1659:3:51548:51562	3979613	4	True				
ANR	3979705	Identifier	IS_DOUBLE		3979613	0					
ANR	3979706	Label	case IS_NULL :	1660:3:51567:51579	3979613	5	True				
ANR	3979707	Identifier	IS_NULL		3979613	0					
ANR	3979708	Label	case IS_FALSE :	1661:3:51584:51597	3979613	6	True				
ANR	3979709	Identifier	IS_FALSE		3979613	0					
ANR	3979710	Label	case IS_TRUE :	1662:3:51602:51614	3979613	7	True				
ANR	3979711	Identifier	IS_TRUE		3979613	0					
ANR	3979712	ExpressionStatement	"zend_error ( E_NOTICE , ""String offset cast occurred"" )"	1663:4:51620:51671	3979613	8	True				
ANR	3979713	CallExpression	"zend_error ( E_NOTICE , ""String offset cast occurred"" )"		3979613	0					
ANR	3979714	Callee	zend_error		3979613	0					
ANR	3979715	Identifier	zend_error		3979613	0					
ANR	3979716	ArgumentList	E_NOTICE		3979613	1					
ANR	3979717	Argument	E_NOTICE		3979613	0					
ANR	3979718	Identifier	E_NOTICE		3979613	0					
ANR	3979719	Argument	"""String offset cast occurred"""		3979613	1					
ANR	3979720	PrimaryExpression	"""String offset cast occurred"""		3979613	0					
ANR	3979721	BreakStatement	break ;	1664:4:51677:51682	3979613	9	True				
ANR	3979722	Label	case IS_REFERENCE :	1665:3:51687:51704	3979613	10	True				
ANR	3979723	Identifier	IS_REFERENCE		3979613	0					
ANR	3979724	ExpressionStatement	dim = Z_REFVAL_P ( dim )	1666:4:51710:51731	3979613	11	True				
ANR	3979725	AssignmentExpression	dim = Z_REFVAL_P ( dim )		3979613	0		=			
ANR	3979726	Identifier	dim		3979613	0					
ANR	3979727	CallExpression	Z_REFVAL_P ( dim )		3979613	1					
ANR	3979728	Callee	Z_REFVAL_P		3979613	0					
ANR	3979729	Identifier	Z_REFVAL_P		3979613	0					
ANR	3979730	ArgumentList	dim		3979613	1					
ANR	3979731	Argument	dim		3979613	0					
ANR	3979732	Identifier	dim		3979613	0					
ANR	3979733	GotoStatement	goto try_again ;	1667:4:51737:51751	3979613	12	True				
ANR	3979734	Identifier	try_again		3979613	0					
ANR	3979735	Label	default :	1668:3:51756:51763	3979613	13	True				
ANR	3979736	Identifier	default		3979613	0					
ANR	3979737	ExpressionStatement	"zend_error ( E_WARNING , ""Illegal offset type"" )"	1669:4:51769:51813	3979613	14	True				
ANR	3979738	CallExpression	"zend_error ( E_WARNING , ""Illegal offset type"" )"		3979613	0					
ANR	3979739	Callee	zend_error		3979613	0					
ANR	3979740	Identifier	zend_error		3979613	0					
ANR	3979741	ArgumentList	E_WARNING		3979613	1					
ANR	3979742	Argument	E_WARNING		3979613	0					
ANR	3979743	Identifier	E_WARNING		3979613	0					
ANR	3979744	Argument	"""Illegal offset type"""		3979613	1					
ANR	3979745	PrimaryExpression	"""Illegal offset type"""		3979613	0					
ANR	3979746	BreakStatement	break ;	1670:4:51819:51824	3979613	15	True				
ANR	3979747	ExpressionStatement	offset = zval_get_long ( dim )	1673:2:51833:51860	3979613	1	True				
ANR	3979748	AssignmentExpression	offset = zval_get_long ( dim )		3979613	0		=			
ANR	3979749	Identifier	offset		3979613	0					
ANR	3979750	CallExpression	zval_get_long ( dim )		3979613	1					
ANR	3979751	Callee	zval_get_long		3979613	0					
ANR	3979752	Identifier	zval_get_long		3979613	0					
ANR	3979753	ArgumentList	dim		3979613	1					
ANR	3979754	Argument	dim		3979613	0					
ANR	3979755	Identifier	dim		3979613	0					
ANR	3979756	ElseStatement	else		3979613	0					
ANR	3979757	CompoundStatement		30:8:679:679	3979613	0					
ANR	3979758	ExpressionStatement	offset = Z_LVAL_P ( dim )	1675:2:51874:51896	3979613	0	True				
ANR	3979759	AssignmentExpression	offset = Z_LVAL_P ( dim )		3979613	0		=			
ANR	3979760	Identifier	offset		3979613	0					
ANR	3979761	CallExpression	Z_LVAL_P ( dim )		3979613	1					
ANR	3979762	Callee	Z_LVAL_P		3979613	0					
ANR	3979763	Identifier	Z_LVAL_P		3979613	0					
ANR	3979764	ArgumentList	dim		3979613	1					
ANR	3979765	Argument	dim		3979613	0					
ANR	3979766	Identifier	dim		3979613	0					
ANR	3979767	ReturnStatement	return offset ;	1678:1:51903:51916	3979613	3	True				
ANR	3979768	Identifier	offset		3979613	0					
ANR	3979769	ReturnType	static zend_never_inline zend_long		3979613	1					
ANR	3979770	Identifier	zend_check_string_offset		3979613	2					
ANR	3979771	ParameterList	"zval * dim , int type"		3979613	3					
ANR	3979772	Parameter	zval * dim	1644:60:51169:51177	3979613	0	True				
ANR	3979773	ParameterType	zval *		3979613	0					
ANR	3979774	Identifier	dim		3979613	1					
ANR	3979775	Parameter	int type	1644:71:51180:51187	3979613	1	True				
ANR	3979776	ParameterType	int		3979613	0					
ANR	3979777	Identifier	type		3979613	1					
ANR	3979778	CFGEntryNode	ENTRY		3979613		True				
ANR	3979779	CFGExitNode	EXIT		3979613		True				
ANR	3979780	Symbol	NULL		3979613						
ANR	3979781	Symbol	offset		3979613						
ANR	3979782	Symbol	dim		3979613						
ANR	3979783	Symbol	E_NOTICE		3979613						
ANR	3979784	Symbol	type		3979613						
ANR	3979785	Symbol	Z_TYPE_P		3979613						
ANR	3979786	Symbol	Z_STRVAL_P		3979613						
ANR	3979787	Symbol	Z_LVAL_P		3979613						
ANR	3979788	Symbol	UNEXPECTED		3979613						
ANR	3979789	Symbol	E_WARNING		3979613						
ANR	3979790	Symbol	is_numeric_string		3979613						
ANR	3979791	Symbol	IS_LONG		3979613						
ANR	3979792	Symbol	Z_REFVAL_P		3979613						
ANR	3979793	Symbol	zval_get_long		3979613						
ANR	3979794	Symbol	Z_STRLEN_P		3979613						
ANR	3979795	Symbol	BP_VAR_UNSET		3979613						
ANR	3979796	Function	zend_fetch_string_offset	1681:0:51921:52260							
ANR	3979797	FunctionDef	"zend_fetch_string_offset (zval * container , zval * dim , int type)"		3979796	0					
ANR	3979798	CompoundStatement		1682:0:52020:52260	3979796	0					
ANR	3979799	IdentifierDeclStatement	"zend_long offset = zend_check_string_offset ( dim , type ) ;"	1683:1:52023:52077	3979796	0	True				
ANR	3979800	IdentifierDecl	"offset = zend_check_string_offset ( dim , type )"		3979796	0					
ANR	3979801	IdentifierDeclType	zend_long		3979796	0					
ANR	3979802	Identifier	offset		3979796	1					
ANR	3979803	AssignmentExpression	"offset = zend_check_string_offset ( dim , type )"		3979796	2		=			
ANR	3979804	Identifier	offset		3979796	0					
ANR	3979805	CallExpression	"zend_check_string_offset ( dim , type )"		3979796	1					
ANR	3979806	Callee	zend_check_string_offset		3979796	0					
ANR	3979807	Identifier	zend_check_string_offset		3979796	0					
ANR	3979808	ArgumentList	dim		3979796	1					
ANR	3979809	Argument	dim		3979796	0					
ANR	3979810	Identifier	dim		3979796	0					
ANR	3979811	Argument	type		3979796	1					
ANR	3979812	Identifier	type		3979796	0					
ANR	3979813	IfStatement	if ( Z_REFCOUNTED_P ( container ) )		3979796	1					
ANR	3979814	Condition	Z_REFCOUNTED_P ( container )	1685:5:52085:52109	3979796	0	True				
ANR	3979815	CallExpression	Z_REFCOUNTED_P ( container )		3979796	0					
ANR	3979816	Callee	Z_REFCOUNTED_P		3979796	0					
ANR	3979817	Identifier	Z_REFCOUNTED_P		3979796	0					
ANR	3979818	ArgumentList	container		3979796	1					
ANR	3979819	Argument	container		3979796	0					
ANR	3979820	Identifier	container		3979796	0					
ANR	3979821	CompoundStatement		4:32:91:91	3979796	1					
ANR	3979822	IfStatement	if ( Z_REFCOUNT_P ( container ) > 1 )		3979796	0					
ANR	3979823	Condition	Z_REFCOUNT_P ( container ) > 1	1686:6:52120:52146	3979796	0	True				
ANR	3979824	RelationalExpression	Z_REFCOUNT_P ( container ) > 1		3979796	0		>			
ANR	3979825	CallExpression	Z_REFCOUNT_P ( container )		3979796	0					
ANR	3979826	Callee	Z_REFCOUNT_P		3979796	0					
ANR	3979827	Identifier	Z_REFCOUNT_P		3979796	0					
ANR	3979828	ArgumentList	container		3979796	1					
ANR	3979829	Argument	container		3979796	0					
ANR	3979830	Identifier	container		3979796	0					
ANR	3979831	PrimaryExpression	1		3979796	1					
ANR	3979832	CompoundStatement		5:35:128:128	3979796	1					
ANR	3979833	ExpressionStatement	Z_DELREF_P ( container )	1687:3:52154:52175	3979796	0	True				
ANR	3979834	CallExpression	Z_DELREF_P ( container )		3979796	0					
ANR	3979835	Callee	Z_DELREF_P		3979796	0					
ANR	3979836	Identifier	Z_DELREF_P		3979796	0					
ANR	3979837	ArgumentList	container		3979796	1					
ANR	3979838	Argument	container		3979796	0					
ANR	3979839	Identifier	container		3979796	0					
ANR	3979840	ExpressionStatement	zval_copy_ctor_func ( container )	1688:3:52180:52210	3979796	1	True				
ANR	3979841	CallExpression	zval_copy_ctor_func ( container )		3979796	0					
ANR	3979842	Callee	zval_copy_ctor_func		3979796	0					
ANR	3979843	Identifier	zval_copy_ctor_func		3979796	0					
ANR	3979844	ArgumentList	container		3979796	1					
ANR	3979845	Argument	container		3979796	0					
ANR	3979846	Identifier	container		3979796	0					
ANR	3979847	ExpressionStatement	Z_ADDREF_P ( container )	1690:2:52218:52239	3979796	1	True				
ANR	3979848	CallExpression	Z_ADDREF_P ( container )		3979796	0					
ANR	3979849	Callee	Z_ADDREF_P		3979796	0					
ANR	3979850	Identifier	Z_ADDREF_P		3979796	0					
ANR	3979851	ArgumentList	container		3979796	1					
ANR	3979852	Argument	container		3979796	0					
ANR	3979853	Identifier	container		3979796	0					
ANR	3979854	ReturnStatement	return offset ;	1692:1:52245:52258	3979796	2	True				
ANR	3979855	Identifier	offset		3979796	0					
ANR	3979856	ReturnType	static zend_always_inline zend_long		3979796	1					
ANR	3979857	Identifier	zend_fetch_string_offset		3979796	2					
ANR	3979858	ParameterList	"zval * container , zval * dim , int type"		3979796	3					
ANR	3979859	Parameter	zval * container	1681:61:51982:51996	3979796	0	True				
ANR	3979860	ParameterType	zval *		3979796	0					
ANR	3979861	Identifier	container		3979796	1					
ANR	3979862	Parameter	zval * dim	1681:78:51999:52007	3979796	1	True				
ANR	3979863	ParameterType	zval *		3979796	0					
ANR	3979864	Identifier	dim		3979796	1					
ANR	3979865	Parameter	int type	1681:89:52010:52017	3979796	2	True				
ANR	3979866	ParameterType	int		3979796	0					
ANR	3979867	Identifier	type		3979796	1					
ANR	3979868	CFGEntryNode	ENTRY		3979796		True				
ANR	3979869	CFGExitNode	EXIT		3979796		True				
ANR	3979870	Symbol	container		3979796						
ANR	3979871	Symbol	offset		3979796						
ANR	3979872	Symbol	dim		3979796						
ANR	3979873	Symbol	zend_check_string_offset		3979796						
ANR	3979874	Symbol	Z_REFCOUNTED_P		3979796						
ANR	3979875	Symbol	type		3979796						
ANR	3979876	Symbol	Z_REFCOUNT_P		3979796						
ANR	3979877	Function	zend_fetch_dimension_address	1695:0:52263:55569							
ANR	3979878	FunctionDef	"zend_fetch_dimension_address (zval * result , zval * container , zval * dim , int dim_type , int type)"		3979877	0					
ANR	3979879	CompoundStatement		1696:0:52389:55569	3979877	0					
ANR	3979880	IdentifierDeclStatement	zval * retval ;	1697:4:52395:52407	3979877	0	True				
ANR	3979881	IdentifierDecl	* retval		3979877	0					
ANR	3979882	IdentifierDeclType	zval *		3979877	0					
ANR	3979883	Identifier	retval		3979877	1					
ANR	3979884	IfStatement	if ( EXPECTED ( Z_TYPE_P ( container ) == IS_ARRAY ) )		3979877	1					
ANR	3979885	Condition	EXPECTED ( Z_TYPE_P ( container ) == IS_ARRAY )	1699:5:52415:52455	3979877	0	True				
ANR	3979886	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_ARRAY )		3979877	0					
ANR	3979887	Callee	EXPECTED		3979877	0					
ANR	3979888	Identifier	EXPECTED		3979877	0					
ANR	3979889	ArgumentList	Z_TYPE_P ( container ) == IS_ARRAY		3979877	1					
ANR	3979890	Argument	Z_TYPE_P ( container ) == IS_ARRAY		3979877	0					
ANR	3979891	EqualityExpression	Z_TYPE_P ( container ) == IS_ARRAY		3979877	0		==			
ANR	3979892	CallExpression	Z_TYPE_P ( container )		3979877	0					
ANR	3979893	Callee	Z_TYPE_P		3979877	0					
ANR	3979894	Identifier	Z_TYPE_P		3979877	0					
ANR	3979895	ArgumentList	container		3979877	1					
ANR	3979896	Argument	container		3979877	0					
ANR	3979897	Identifier	container		3979877	0					
ANR	3979898	Identifier	IS_ARRAY		3979877	1					
ANR	3979899	CompoundStatement		4:48:68:68	3979877	1					
ANR	3979900	Label	try_array :	1700:0:52460:52469	3979877	0	True				
ANR	3979901	Identifier	try_array		3979877	0					
ANR	3979902	ExpressionStatement	SEPARATE_ARRAY ( container )	1701:2:52473:52498	3979877	1	True				
ANR	3979903	CallExpression	SEPARATE_ARRAY ( container )		3979877	0					
ANR	3979904	Callee	SEPARATE_ARRAY		3979877	0					
ANR	3979905	Identifier	SEPARATE_ARRAY		3979877	0					
ANR	3979906	ArgumentList	container		3979877	1					
ANR	3979907	Argument	container		3979877	0					
ANR	3979908	Identifier	container		3979877	0					
ANR	3979909	Label	fetch_from_array :	1702:0:52500:52516	3979877	2	True				
ANR	3979910	Identifier	fetch_from_array		3979877	0					
ANR	3979911	IfStatement	if ( dim == NULL )		3979877	3					
ANR	3979912	Condition	dim == NULL	1703:6:52524:52534	3979877	0	True				
ANR	3979913	EqualityExpression	dim == NULL		3979877	0		==			
ANR	3979914	Identifier	dim		3979877	0					
ANR	3979915	Identifier	NULL		3979877	1					
ANR	3979916	CompoundStatement		8:19:147:147	3979877	1					
ANR	3979917	ExpressionStatement	"retval = zend_hash_next_index_insert ( Z_ARRVAL_P ( container ) , & EG ( uninitialized_zval ) )"	1704:3:52542:52626	3979877	0	True				
ANR	3979918	AssignmentExpression	"retval = zend_hash_next_index_insert ( Z_ARRVAL_P ( container ) , & EG ( uninitialized_zval ) )"		3979877	0		=			
ANR	3979919	Identifier	retval		3979877	0					
ANR	3979920	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( container ) , & EG ( uninitialized_zval ) )"		3979877	1					
ANR	3979921	Callee	zend_hash_next_index_insert		3979877	0					
ANR	3979922	Identifier	zend_hash_next_index_insert		3979877	0					
ANR	3979923	ArgumentList	Z_ARRVAL_P ( container )		3979877	1					
ANR	3979924	Argument	Z_ARRVAL_P ( container )		3979877	0					
ANR	3979925	CallExpression	Z_ARRVAL_P ( container )		3979877	0					
ANR	3979926	Callee	Z_ARRVAL_P		3979877	0					
ANR	3979927	Identifier	Z_ARRVAL_P		3979877	0					
ANR	3979928	ArgumentList	container		3979877	1					
ANR	3979929	Argument	container		3979877	0					
ANR	3979930	Identifier	container		3979877	0					
ANR	3979931	Argument	& EG ( uninitialized_zval )		3979877	1					
ANR	3979932	UnaryOperationExpression	& EG ( uninitialized_zval )		3979877	0					
ANR	3979933	UnaryOperator	&		3979877	0					
ANR	3979934	CallExpression	EG ( uninitialized_zval )		3979877	1					
ANR	3979935	Callee	EG		3979877	0					
ANR	3979936	Identifier	EG		3979877	0					
ANR	3979937	ArgumentList	uninitialized_zval		3979877	1					
ANR	3979938	Argument	uninitialized_zval		3979877	0					
ANR	3979939	Identifier	uninitialized_zval		3979877	0					
ANR	3979940	IfStatement	if ( UNEXPECTED ( retval == NULL ) )		3979877	1					
ANR	3979941	Condition	UNEXPECTED ( retval == NULL )	1705:7:52635:52660	3979877	0	True				
ANR	3979942	CallExpression	UNEXPECTED ( retval == NULL )		3979877	0					
ANR	3979943	Callee	UNEXPECTED		3979877	0					
ANR	3979944	Identifier	UNEXPECTED		3979877	0					
ANR	3979945	ArgumentList	retval == NULL		3979877	1					
ANR	3979946	Argument	retval == NULL		3979877	0					
ANR	3979947	EqualityExpression	retval == NULL		3979877	0		==			
ANR	3979948	Identifier	retval		3979877	0					
ANR	3979949	Identifier	NULL		3979877	1					
ANR	3979950	CompoundStatement		10:35:273:273	3979877	1					
ANR	3979951	ExpressionStatement	"zend_error ( E_WARNING , ""Cannot add element to the array as the next element is already occupied"" )"	1706:4:52669:52765	3979877	0	True				
ANR	3979952	CallExpression	"zend_error ( E_WARNING , ""Cannot add element to the array as the next element is already occupied"" )"		3979877	0					
ANR	3979953	Callee	zend_error		3979877	0					
ANR	3979954	Identifier	zend_error		3979877	0					
ANR	3979955	ArgumentList	E_WARNING		3979877	1					
ANR	3979956	Argument	E_WARNING		3979877	0					
ANR	3979957	Identifier	E_WARNING		3979877	0					
ANR	3979958	Argument	"""Cannot add element to the array as the next element is already occupied"""		3979877	1					
ANR	3979959	PrimaryExpression	"""Cannot add element to the array as the next element is already occupied"""		3979877	0					
ANR	3979960	ExpressionStatement	retval = & EG ( error_zval )	1707:4:52771:52795	3979877	1	True				
ANR	3979961	AssignmentExpression	retval = & EG ( error_zval )		3979877	0		=			
ANR	3979962	Identifier	retval		3979877	0					
ANR	3979963	UnaryOperationExpression	& EG ( error_zval )		3979877	1					
ANR	3979964	UnaryOperator	&		3979877	0					
ANR	3979965	CallExpression	EG ( error_zval )		3979877	1					
ANR	3979966	Callee	EG		3979877	0					
ANR	3979967	Identifier	EG		3979877	0					
ANR	3979968	ArgumentList	error_zval		3979877	1					
ANR	3979969	Argument	error_zval		3979877	0					
ANR	3979970	Identifier	error_zval		3979877	0					
ANR	3979971	ElseStatement	else		3979877	0					
ANR	3979972	CompoundStatement		14:9:421:421	3979877	0					
ANR	3979973	ExpressionStatement	"retval = zend_fetch_dimension_address_inner ( Z_ARRVAL_P ( container ) , dim , dim_type , type )"	1710:3:52816:52903	3979877	0	True				
ANR	3979974	AssignmentExpression	"retval = zend_fetch_dimension_address_inner ( Z_ARRVAL_P ( container ) , dim , dim_type , type )"		3979877	0		=			
ANR	3979975	Identifier	retval		3979877	0					
ANR	3979976	CallExpression	"zend_fetch_dimension_address_inner ( Z_ARRVAL_P ( container ) , dim , dim_type , type )"		3979877	1					
ANR	3979977	Callee	zend_fetch_dimension_address_inner		3979877	0					
ANR	3979978	Identifier	zend_fetch_dimension_address_inner		3979877	0					
ANR	3979979	ArgumentList	Z_ARRVAL_P ( container )		3979877	1					
ANR	3979980	Argument	Z_ARRVAL_P ( container )		3979877	0					
ANR	3979981	CallExpression	Z_ARRVAL_P ( container )		3979877	0					
ANR	3979982	Callee	Z_ARRVAL_P		3979877	0					
ANR	3979983	Identifier	Z_ARRVAL_P		3979877	0					
ANR	3979984	ArgumentList	container		3979877	1					
ANR	3979985	Argument	container		3979877	0					
ANR	3979986	Identifier	container		3979877	0					
ANR	3979987	Argument	dim		3979877	1					
ANR	3979988	Identifier	dim		3979877	0					
ANR	3979989	Argument	dim_type		3979877	2					
ANR	3979990	Identifier	dim_type		3979877	0					
ANR	3979991	Argument	type		3979877	3					
ANR	3979992	Identifier	type		3979877	0					
ANR	3979993	ExpressionStatement	"ZVAL_INDIRECT ( result , retval )"	1712:2:52911:52940	3979877	4	True				
ANR	3979994	CallExpression	"ZVAL_INDIRECT ( result , retval )"		3979877	0					
ANR	3979995	Callee	ZVAL_INDIRECT		3979877	0					
ANR	3979996	Identifier	ZVAL_INDIRECT		3979877	0					
ANR	3979997	ArgumentList	result		3979877	1					
ANR	3979998	Argument	result		3979877	0					
ANR	3979999	Identifier	result		3979877	0					
ANR	3980000	Argument	retval		3979877	1					
ANR	3980001	Identifier	retval		3979877	0					
ANR	3980002	ReturnStatement	return ;	1713:2:52944:52950	3979877	5	True				
ANR	3980003	ElseStatement	else		3979877	0					
ANR	3980004	IfStatement	if ( EXPECTED ( Z_TYPE_P ( container ) == IS_REFERENCE ) )		3979877	0					
ANR	3980005	Condition	EXPECTED ( Z_TYPE_P ( container ) == IS_REFERENCE )	1714:12:52964:53008	3979877	0	True				
ANR	3980006	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_REFERENCE )		3979877	0					
ANR	3980007	Callee	EXPECTED		3979877	0					
ANR	3980008	Identifier	EXPECTED		3979877	0					
ANR	3980009	ArgumentList	Z_TYPE_P ( container ) == IS_REFERENCE		3979877	1					
ANR	3980010	Argument	Z_TYPE_P ( container ) == IS_REFERENCE		3979877	0					
ANR	3980011	EqualityExpression	Z_TYPE_P ( container ) == IS_REFERENCE		3979877	0		==			
ANR	3980012	CallExpression	Z_TYPE_P ( container )		3979877	0					
ANR	3980013	Callee	Z_TYPE_P		3979877	0					
ANR	3980014	Identifier	Z_TYPE_P		3979877	0					
ANR	3980015	ArgumentList	container		3979877	1					
ANR	3980016	Argument	container		3979877	0					
ANR	3980017	Identifier	container		3979877	0					
ANR	3980018	Identifier	IS_REFERENCE		3979877	1					
ANR	3980019	CompoundStatement		19:59:621:621	3979877	1					
ANR	3980020	ExpressionStatement	container = Z_REFVAL_P ( container )	1715:2:53015:53048	3979877	0	True				
ANR	3980021	AssignmentExpression	container = Z_REFVAL_P ( container )		3979877	0		=			
ANR	3980022	Identifier	container		3979877	0					
ANR	3980023	CallExpression	Z_REFVAL_P ( container )		3979877	1					
ANR	3980024	Callee	Z_REFVAL_P		3979877	0					
ANR	3980025	Identifier	Z_REFVAL_P		3979877	0					
ANR	3980026	ArgumentList	container		3979877	1					
ANR	3980027	Argument	container		3979877	0					
ANR	3980028	Identifier	container		3979877	0					
ANR	3980029	IfStatement	if ( EXPECTED ( Z_TYPE_P ( container ) == IS_ARRAY ) )		3979877	1					
ANR	3980030	Condition	EXPECTED ( Z_TYPE_P ( container ) == IS_ARRAY )	1716:6:53056:53096	3979877	0	True				
ANR	3980031	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_ARRAY )		3979877	0					
ANR	3980032	Callee	EXPECTED		3979877	0					
ANR	3980033	Identifier	EXPECTED		3979877	0					
ANR	3980034	ArgumentList	Z_TYPE_P ( container ) == IS_ARRAY		3979877	1					
ANR	3980035	Argument	Z_TYPE_P ( container ) == IS_ARRAY		3979877	0					
ANR	3980036	EqualityExpression	Z_TYPE_P ( container ) == IS_ARRAY		3979877	0		==			
ANR	3980037	CallExpression	Z_TYPE_P ( container )		3979877	0					
ANR	3980038	Callee	Z_TYPE_P		3979877	0					
ANR	3980039	Identifier	Z_TYPE_P		3979877	0					
ANR	3980040	ArgumentList	container		3979877	1					
ANR	3980041	Argument	container		3979877	0					
ANR	3980042	Identifier	container		3979877	0					
ANR	3980043	Identifier	IS_ARRAY		3979877	1					
ANR	3980044	CompoundStatement		21:49:709:709	3979877	1					
ANR	3980045	GotoStatement	goto try_array ;	1717:3:53104:53118	3979877	0	True				
ANR	3980046	Identifier	try_array		3979877	0					
ANR	3980047	IfStatement	if ( EXPECTED ( Z_TYPE_P ( container ) == IS_STRING ) )		3979877	2					
ANR	3980048	Condition	EXPECTED ( Z_TYPE_P ( container ) == IS_STRING )	1720:5:53132:53173	3979877	0	True				
ANR	3980049	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_STRING )		3979877	0					
ANR	3980050	Callee	EXPECTED		3979877	0					
ANR	3980051	Identifier	EXPECTED		3979877	0					
ANR	3980052	ArgumentList	Z_TYPE_P ( container ) == IS_STRING		3979877	1					
ANR	3980053	Argument	Z_TYPE_P ( container ) == IS_STRING		3979877	0					
ANR	3980054	EqualityExpression	Z_TYPE_P ( container ) == IS_STRING		3979877	0		==			
ANR	3980055	CallExpression	Z_TYPE_P ( container )		3979877	0					
ANR	3980056	Callee	Z_TYPE_P		3979877	0					
ANR	3980057	Identifier	Z_TYPE_P		3979877	0					
ANR	3980058	ArgumentList	container		3979877	1					
ANR	3980059	Argument	container		3979877	0					
ANR	3980060	Identifier	container		3979877	0					
ANR	3980061	Identifier	IS_STRING		3979877	1					
ANR	3980062	CompoundStatement		25:49:786:786	3979877	1					
ANR	3980063	IfStatement	if ( type != BP_VAR_UNSET && UNEXPECTED ( Z_STRLEN_P ( container ) == 0 ) )		3979877	0					
ANR	3980064	Condition	type != BP_VAR_UNSET && UNEXPECTED ( Z_STRLEN_P ( container ) == 0 )	1721:6:53184:53245	3979877	0	True				
ANR	3980065	AndExpression	type != BP_VAR_UNSET && UNEXPECTED ( Z_STRLEN_P ( container ) == 0 )		3979877	0		&&			
ANR	3980066	EqualityExpression	type != BP_VAR_UNSET		3979877	0		!=			
ANR	3980067	Identifier	type		3979877	0					
ANR	3980068	Identifier	BP_VAR_UNSET		3979877	1					
ANR	3980069	CallExpression	UNEXPECTED ( Z_STRLEN_P ( container ) == 0 )		3979877	1					
ANR	3980070	Callee	UNEXPECTED		3979877	0					
ANR	3980071	Identifier	UNEXPECTED		3979877	0					
ANR	3980072	ArgumentList	Z_STRLEN_P ( container ) == 0		3979877	1					
ANR	3980073	Argument	Z_STRLEN_P ( container ) == 0		3979877	0					
ANR	3980074	EqualityExpression	Z_STRLEN_P ( container ) == 0		3979877	0		==			
ANR	3980075	CallExpression	Z_STRLEN_P ( container )		3979877	0					
ANR	3980076	Callee	Z_STRLEN_P		3979877	0					
ANR	3980077	Identifier	Z_STRLEN_P		3979877	0					
ANR	3980078	ArgumentList	container		3979877	1					
ANR	3980079	Argument	container		3979877	0					
ANR	3980080	Identifier	container		3979877	0					
ANR	3980081	PrimaryExpression	0		3979877	1					
ANR	3980082	CompoundStatement		26:70:858:858	3979877	1					
ANR	3980083	ExpressionStatement	zval_ptr_dtor_nogc ( container )	1722:3:53253:53282	3979877	0	True				
ANR	3980084	CallExpression	zval_ptr_dtor_nogc ( container )		3979877	0					
ANR	3980085	Callee	zval_ptr_dtor_nogc		3979877	0					
ANR	3980086	Identifier	zval_ptr_dtor_nogc		3979877	0					
ANR	3980087	ArgumentList	container		3979877	1					
ANR	3980088	Argument	container		3979877	0					
ANR	3980089	Identifier	container		3979877	0					
ANR	3980090	Label	convert_to_array :	1723:0:53284:53300	3979877	1	True				
ANR	3980091	Identifier	convert_to_array		3979877	0					
ANR	3980092	ExpressionStatement	ZVAL_NEW_ARR ( container )	1724:3:53305:53328	3979877	2	True				
ANR	3980093	CallExpression	ZVAL_NEW_ARR ( container )		3979877	0					
ANR	3980094	Callee	ZVAL_NEW_ARR		3979877	0					
ANR	3980095	Identifier	ZVAL_NEW_ARR		3979877	0					
ANR	3980096	ArgumentList	container		3979877	1					
ANR	3980097	Argument	container		3979877	0					
ANR	3980098	Identifier	container		3979877	0					
ANR	3980099	ExpressionStatement	"zend_hash_init ( Z_ARRVAL_P ( container ) , 8 , NULL , ZVAL_PTR_DTOR , 0 )"	1725:3:53333:53397	3979877	3	True				
ANR	3980100	CallExpression	"zend_hash_init ( Z_ARRVAL_P ( container ) , 8 , NULL , ZVAL_PTR_DTOR , 0 )"		3979877	0					
ANR	3980101	Callee	zend_hash_init		3979877	0					
ANR	3980102	Identifier	zend_hash_init		3979877	0					
ANR	3980103	ArgumentList	Z_ARRVAL_P ( container )		3979877	1					
ANR	3980104	Argument	Z_ARRVAL_P ( container )		3979877	0					
ANR	3980105	CallExpression	Z_ARRVAL_P ( container )		3979877	0					
ANR	3980106	Callee	Z_ARRVAL_P		3979877	0					
ANR	3980107	Identifier	Z_ARRVAL_P		3979877	0					
ANR	3980108	ArgumentList	container		3979877	1					
ANR	3980109	Argument	container		3979877	0					
ANR	3980110	Identifier	container		3979877	0					
ANR	3980111	Argument	8		3979877	1					
ANR	3980112	PrimaryExpression	8		3979877	0					
ANR	3980113	Argument	NULL		3979877	2					
ANR	3980114	Identifier	NULL		3979877	0					
ANR	3980115	Argument	ZVAL_PTR_DTOR		3979877	3					
ANR	3980116	Identifier	ZVAL_PTR_DTOR		3979877	0					
ANR	3980117	Argument	0		3979877	4					
ANR	3980118	PrimaryExpression	0		3979877	0					
ANR	3980119	GotoStatement	goto fetch_from_array ;	1726:3:53402:53423	3979877	4	True				
ANR	3980120	Identifier	fetch_from_array		3979877	0					
ANR	3980121	IfStatement	if ( dim == NULL )		3979877	1					
ANR	3980122	Condition	dim == NULL	1729:6:53436:53446	3979877	0	True				
ANR	3980123	EqualityExpression	dim == NULL		3979877	0		==			
ANR	3980124	Identifier	dim		3979877	0					
ANR	3980125	Identifier	NULL		3979877	1					
ANR	3980126	CompoundStatement		34:19:1059:1059	3979877	1					
ANR	3980127	ExpressionStatement	"zend_throw_error ( NULL , ""[] operator not supported for strings"" )"	1730:3:53454:53517	3979877	0	True				
ANR	3980128	CallExpression	"zend_throw_error ( NULL , ""[] operator not supported for strings"" )"		3979877	0					
ANR	3980129	Callee	zend_throw_error		3979877	0					
ANR	3980130	Identifier	zend_throw_error		3979877	0					
ANR	3980131	ArgumentList	NULL		3979877	1					
ANR	3980132	Argument	NULL		3979877	0					
ANR	3980133	Identifier	NULL		3979877	0					
ANR	3980134	Argument	"""[] operator not supported for strings"""		3979877	1					
ANR	3980135	PrimaryExpression	"""[] operator not supported for strings"""		3979877	0					
ANR	3980136	ExpressionStatement	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"	1731:3:53522:53560	3979877	1	True				
ANR	3980137	CallExpression	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"		3979877	0					
ANR	3980138	Callee	ZVAL_INDIRECT		3979877	0					
ANR	3980139	Identifier	ZVAL_INDIRECT		3979877	0					
ANR	3980140	ArgumentList	result		3979877	1					
ANR	3980141	Argument	result		3979877	0					
ANR	3980142	Identifier	result		3979877	0					
ANR	3980143	Argument	& EG ( error_zval )		3979877	1					
ANR	3980144	UnaryOperationExpression	& EG ( error_zval )		3979877	0					
ANR	3980145	UnaryOperator	&		3979877	0					
ANR	3980146	CallExpression	EG ( error_zval )		3979877	1					
ANR	3980147	Callee	EG		3979877	0					
ANR	3980148	Identifier	EG		3979877	0					
ANR	3980149	ArgumentList	error_zval		3979877	1					
ANR	3980150	Argument	error_zval		3979877	0					
ANR	3980151	Identifier	error_zval		3979877	0					
ANR	3980152	ElseStatement	else		3979877	0					
ANR	3980153	CompoundStatement		37:9:1181:1181	3979877	0					
ANR	3980154	ExpressionStatement	"zend_check_string_offset ( dim , type )"	1733:3:53576:53611	3979877	0	True				
ANR	3980155	CallExpression	"zend_check_string_offset ( dim , type )"		3979877	0					
ANR	3980156	Callee	zend_check_string_offset		3979877	0					
ANR	3980157	Identifier	zend_check_string_offset		3979877	0					
ANR	3980158	ArgumentList	dim		3979877	1					
ANR	3980159	Argument	dim		3979877	0					
ANR	3980160	Identifier	dim		3979877	0					
ANR	3980161	Argument	type		3979877	1					
ANR	3980162	Identifier	type		3979877	0					
ANR	3980163	ExpressionStatement	"ZVAL_INDIRECT ( result , NULL )"	1734:3:53616:53643	3979877	1	True				
ANR	3980164	CallExpression	"ZVAL_INDIRECT ( result , NULL )"		3979877	0					
ANR	3980165	Callee	ZVAL_INDIRECT		3979877	0					
ANR	3980166	Identifier	ZVAL_INDIRECT		3979877	0					
ANR	3980167	ArgumentList	result		3979877	1					
ANR	3980168	Argument	result		3979877	0					
ANR	3980169	Identifier	result		3979877	0					
ANR	3980170	Argument	NULL		3979877	1					
ANR	3980171	Identifier	NULL		3979877	0					
ANR	3980172	ElseStatement	else		3979877	0					
ANR	3980173	IfStatement	if ( EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		3979877	0					
ANR	3980174	Condition	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	1736:12:53687:53728	3979877	0	True				
ANR	3980175	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		3979877	0					
ANR	3980176	Callee	EXPECTED		3979877	0					
ANR	3980177	Identifier	EXPECTED		3979877	0					
ANR	3980178	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		3979877	1					
ANR	3980179	Argument	Z_TYPE_P ( container ) == IS_OBJECT		3979877	0					
ANR	3980180	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		3979877	0		==			
ANR	3980181	CallExpression	Z_TYPE_P ( container )		3979877	0					
ANR	3980182	Callee	Z_TYPE_P		3979877	0					
ANR	3980183	Identifier	Z_TYPE_P		3979877	0					
ANR	3980184	ArgumentList	container		3979877	1					
ANR	3980185	Argument	container		3979877	0					
ANR	3980186	Identifier	container		3979877	0					
ANR	3980187	Identifier	IS_OBJECT		3979877	1					
ANR	3980188	CompoundStatement		41:56:1341:1341	3979877	1					
ANR	3980189	IfStatement	if ( ! Z_OBJ_HT_P ( container ) -> read_dimension )		3979877	0					
ANR	3980190	Condition	! Z_OBJ_HT_P ( container ) -> read_dimension	1737:6:53739:53776	3979877	0	True				
ANR	3980191	UnaryOperationExpression	! Z_OBJ_HT_P ( container ) -> read_dimension		3979877	0					
ANR	3980192	UnaryOperator	!		3979877	0					
ANR	3980193	PtrMemberAccess	Z_OBJ_HT_P ( container ) -> read_dimension		3979877	1					
ANR	3980194	CallExpression	Z_OBJ_HT_P ( container )		3979877	0					
ANR	3980195	Callee	Z_OBJ_HT_P		3979877	0					
ANR	3980196	Identifier	Z_OBJ_HT_P		3979877	0					
ANR	3980197	ArgumentList	container		3979877	1					
ANR	3980198	Argument	container		3979877	0					
ANR	3980199	Identifier	container		3979877	0					
ANR	3980200	Identifier	read_dimension		3979877	1					
ANR	3980201	CompoundStatement		42:46:1389:1389	3979877	1					
ANR	3980202	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use object as array"" )"	1738:3:53784:53836	3979877	0	True				
ANR	3980203	CallExpression	"zend_throw_error ( NULL , ""Cannot use object as array"" )"		3979877	0					
ANR	3980204	Callee	zend_throw_error		3979877	0					
ANR	3980205	Identifier	zend_throw_error		3979877	0					
ANR	3980206	ArgumentList	NULL		3979877	1					
ANR	3980207	Argument	NULL		3979877	0					
ANR	3980208	Identifier	NULL		3979877	0					
ANR	3980209	Argument	"""Cannot use object as array"""		3979877	1					
ANR	3980210	PrimaryExpression	"""Cannot use object as array"""		3979877	0					
ANR	3980211	ExpressionStatement	retval = & EG ( error_zval )	1739:3:53841:53865	3979877	1	True				
ANR	3980212	AssignmentExpression	retval = & EG ( error_zval )		3979877	0		=			
ANR	3980213	Identifier	retval		3979877	0					
ANR	3980214	UnaryOperationExpression	& EG ( error_zval )		3979877	1					
ANR	3980215	UnaryOperator	&		3979877	0					
ANR	3980216	CallExpression	EG ( error_zval )		3979877	1					
ANR	3980217	Callee	EG		3979877	0					
ANR	3980218	Identifier	EG		3979877	0					
ANR	3980219	ArgumentList	error_zval		3979877	1					
ANR	3980220	Argument	error_zval		3979877	0					
ANR	3980221	Identifier	error_zval		3979877	0					
ANR	3980222	ElseStatement	else		3979877	0					
ANR	3980223	CompoundStatement		45:9:1486:1486	3979877	0					
ANR	3980224	ExpressionStatement	"retval = Z_OBJ_HT_P ( container ) -> read_dimension ( container , dim , type , result )"	1741:3:53881:53957	3979877	0	True				
ANR	3980225	AssignmentExpression	"retval = Z_OBJ_HT_P ( container ) -> read_dimension ( container , dim , type , result )"		3979877	0		=			
ANR	3980226	Identifier	retval		3979877	0					
ANR	3980227	CallExpression	"Z_OBJ_HT_P ( container ) -> read_dimension ( container , dim , type , result )"		3979877	1					
ANR	3980228	Callee	Z_OBJ_HT_P ( container ) -> read_dimension		3979877	0					
ANR	3980229	PtrMemberAccess	Z_OBJ_HT_P ( container ) -> read_dimension		3979877	0					
ANR	3980230	CallExpression	Z_OBJ_HT_P ( container )		3979877	0					
ANR	3980231	Callee	Z_OBJ_HT_P		3979877	0					
ANR	3980232	Identifier	Z_OBJ_HT_P		3979877	0					
ANR	3980233	ArgumentList	container		3979877	1					
ANR	3980234	Argument	container		3979877	0					
ANR	3980235	Identifier	container		3979877	0					
ANR	3980236	Identifier	read_dimension		3979877	1					
ANR	3980237	ArgumentList	container		3979877	1					
ANR	3980238	Argument	container		3979877	0					
ANR	3980239	Identifier	container		3979877	0					
ANR	3980240	Argument	dim		3979877	1					
ANR	3980241	Identifier	dim		3979877	0					
ANR	3980242	Argument	type		3979877	2					
ANR	3980243	Identifier	type		3979877	0					
ANR	3980244	Argument	result		3979877	3					
ANR	3980245	Identifier	result		3979877	0					
ANR	3980246	IfStatement	if ( UNEXPECTED ( retval == & EG ( uninitialized_zval ) ) )		3979877	1					
ANR	3980247	Condition	UNEXPECTED ( retval == & EG ( uninitialized_zval ) )	1743:7:53967:54011	3979877	0	True				
ANR	3980248	CallExpression	UNEXPECTED ( retval == & EG ( uninitialized_zval ) )		3979877	0					
ANR	3980249	Callee	UNEXPECTED		3979877	0					
ANR	3980250	Identifier	UNEXPECTED		3979877	0					
ANR	3980251	ArgumentList	retval == & EG ( uninitialized_zval )		3979877	1					
ANR	3980252	Argument	retval == & EG ( uninitialized_zval )		3979877	0					
ANR	3980253	EqualityExpression	retval == & EG ( uninitialized_zval )		3979877	0		==			
ANR	3980254	Identifier	retval		3979877	0					
ANR	3980255	UnaryOperationExpression	& EG ( uninitialized_zval )		3979877	1					
ANR	3980256	UnaryOperator	&		3979877	0					
ANR	3980257	CallExpression	EG ( uninitialized_zval )		3979877	1					
ANR	3980258	Callee	EG		3979877	0					
ANR	3980259	Identifier	EG		3979877	0					
ANR	3980260	ArgumentList	uninitialized_zval		3979877	1					
ANR	3980261	Argument	uninitialized_zval		3979877	0					
ANR	3980262	Identifier	uninitialized_zval		3979877	0					
ANR	3980263	CompoundStatement		49:4:1630:1673	3979877	1					
ANR	3980264	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( container ) ;	1744:4:54020:54063	3979877	0	True				
ANR	3980265	IdentifierDecl	* ce = Z_OBJCE_P ( container )		3979877	0					
ANR	3980266	IdentifierDeclType	zend_class_entry *		3979877	0					
ANR	3980267	Identifier	ce		3979877	1					
ANR	3980268	AssignmentExpression	* ce = Z_OBJCE_P ( container )		3979877	2		=			
ANR	3980269	Identifier	ce		3979877	0					
ANR	3980270	CallExpression	Z_OBJCE_P ( container )		3979877	1					
ANR	3980271	Callee	Z_OBJCE_P		3979877	0					
ANR	3980272	Identifier	Z_OBJCE_P		3979877	0					
ANR	3980273	ArgumentList	container		3979877	1					
ANR	3980274	Argument	container		3979877	0					
ANR	3980275	Identifier	container		3979877	0					
ANR	3980276	ExpressionStatement	ZVAL_NULL ( result )	1746:4:54070:54087	3979877	1	True				
ANR	3980277	CallExpression	ZVAL_NULL ( result )		3979877	0					
ANR	3980278	Callee	ZVAL_NULL		3979877	0					
ANR	3980279	Identifier	ZVAL_NULL		3979877	0					
ANR	3980280	ArgumentList	result		3979877	1					
ANR	3980281	Argument	result		3979877	0					
ANR	3980282	Identifier	result		3979877	0					
ANR	3980283	ExpressionStatement	"zend_error ( E_NOTICE , ""Indirect modification of overloaded element of %s has no effect"" , ZSTR_VAL ( ce -> name ) )"	1747:4:54093:54200	3979877	2	True				
ANR	3980284	CallExpression	"zend_error ( E_NOTICE , ""Indirect modification of overloaded element of %s has no effect"" , ZSTR_VAL ( ce -> name ) )"		3979877	0					
ANR	3980285	Callee	zend_error		3979877	0					
ANR	3980286	Identifier	zend_error		3979877	0					
ANR	3980287	ArgumentList	E_NOTICE		3979877	1					
ANR	3980288	Argument	E_NOTICE		3979877	0					
ANR	3980289	Identifier	E_NOTICE		3979877	0					
ANR	3980290	Argument	"""Indirect modification of overloaded element of %s has no effect"""		3979877	1					
ANR	3980291	PrimaryExpression	"""Indirect modification of overloaded element of %s has no effect"""		3979877	0					
ANR	3980292	Argument	ZSTR_VAL ( ce -> name )		3979877	2					
ANR	3980293	CallExpression	ZSTR_VAL ( ce -> name )		3979877	0					
ANR	3980294	Callee	ZSTR_VAL		3979877	0					
ANR	3980295	Identifier	ZSTR_VAL		3979877	0					
ANR	3980296	ArgumentList	ce -> name		3979877	1					
ANR	3980297	Argument	ce -> name		3979877	0					
ANR	3980298	PtrMemberAccess	ce -> name		3979877	0					
ANR	3980299	Identifier	ce		3979877	0					
ANR	3980300	Identifier	name		3979877	1					
ANR	3980301	ElseStatement	else		3979877	0					
ANR	3980302	IfStatement	if ( EXPECTED ( retval && Z_TYPE_P ( retval ) != IS_UNDEF ) )		3979877	0					
ANR	3980303	Condition	EXPECTED ( retval && Z_TYPE_P ( retval ) != IS_UNDEF )	1748:14:54216:54263	3979877	0	True				
ANR	3980304	CallExpression	EXPECTED ( retval && Z_TYPE_P ( retval ) != IS_UNDEF )		3979877	0					
ANR	3980305	Callee	EXPECTED		3979877	0					
ANR	3980306	Identifier	EXPECTED		3979877	0					
ANR	3980307	ArgumentList	retval && Z_TYPE_P ( retval ) != IS_UNDEF		3979877	1					
ANR	3980308	Argument	retval && Z_TYPE_P ( retval ) != IS_UNDEF		3979877	0					
ANR	3980309	AndExpression	retval && Z_TYPE_P ( retval ) != IS_UNDEF		3979877	0		&&			
ANR	3980310	Identifier	retval		3979877	0					
ANR	3980311	EqualityExpression	Z_TYPE_P ( retval ) != IS_UNDEF		3979877	1		!=			
ANR	3980312	CallExpression	Z_TYPE_P ( retval )		3979877	0					
ANR	3980313	Callee	Z_TYPE_P		3979877	0					
ANR	3980314	Identifier	Z_TYPE_P		3979877	0					
ANR	3980315	ArgumentList	retval		3979877	1					
ANR	3980316	Argument	retval		3979877	0					
ANR	3980317	Identifier	retval		3979877	0					
ANR	3980318	Identifier	IS_UNDEF		3979877	1					
ANR	3980319	CompoundStatement		53:64:1876:1876	3979877	1					
ANR	3980320	IfStatement	if ( ! Z_ISREF_P ( retval ) )		3979877	0					
ANR	3980321	Condition	! Z_ISREF_P ( retval )	1749:8:54276:54293	3979877	0	True				
ANR	3980322	UnaryOperationExpression	! Z_ISREF_P ( retval )		3979877	0					
ANR	3980323	UnaryOperator	!		3979877	0					
ANR	3980324	CallExpression	Z_ISREF_P ( retval )		3979877	1					
ANR	3980325	Callee	Z_ISREF_P		3979877	0					
ANR	3980326	Identifier	Z_ISREF_P		3979877	0					
ANR	3980327	ArgumentList	retval		3979877	1					
ANR	3980328	Argument	retval		3979877	0					
ANR	3980329	Identifier	retval		3979877	0					
ANR	3980330	CompoundStatement		54:28:1906:1906	3979877	1					
ANR	3980331	IfStatement	if ( Z_REFCOUNTED_P ( retval ) && Z_REFCOUNT_P ( retval ) > 1 )		3979877	0					
ANR	3980332	Condition	Z_REFCOUNTED_P ( retval ) && Z_REFCOUNT_P ( retval ) > 1	1750:9:54307:54365	3979877	0	True				
ANR	3980333	AndExpression	Z_REFCOUNTED_P ( retval ) && Z_REFCOUNT_P ( retval ) > 1		3979877	0		&&			
ANR	3980334	CallExpression	Z_REFCOUNTED_P ( retval )		3979877	0					
ANR	3980335	Callee	Z_REFCOUNTED_P		3979877	0					
ANR	3980336	Identifier	Z_REFCOUNTED_P		3979877	0					
ANR	3980337	ArgumentList	retval		3979877	1					
ANR	3980338	Argument	retval		3979877	0					
ANR	3980339	Identifier	retval		3979877	0					
ANR	3980340	RelationalExpression	Z_REFCOUNT_P ( retval ) > 1		3979877	1		>			
ANR	3980341	CallExpression	Z_REFCOUNT_P ( retval )		3979877	0					
ANR	3980342	Callee	Z_REFCOUNT_P		3979877	0					
ANR	3980343	Identifier	Z_REFCOUNT_P		3979877	0					
ANR	3980344	ArgumentList	retval		3979877	1					
ANR	3980345	Argument	retval		3979877	0					
ANR	3980346	Identifier	retval		3979877	0					
ANR	3980347	PrimaryExpression	1		3979877	1					
ANR	3980348	CompoundStatement		56:35:1978:1978	3979877	1					
ANR	3980349	IfStatement	if ( Z_TYPE_P ( retval ) != IS_OBJECT )		3979877	0					
ANR	3980350	Condition	Z_TYPE_P ( retval ) != IS_OBJECT	1752:10:54380:54408	3979877	0	True				
ANR	3980351	EqualityExpression	Z_TYPE_P ( retval ) != IS_OBJECT		3979877	0		!=			
ANR	3980352	CallExpression	Z_TYPE_P ( retval )		3979877	0					
ANR	3980353	Callee	Z_TYPE_P		3979877	0					
ANR	3980354	Identifier	Z_TYPE_P		3979877	0					
ANR	3980355	ArgumentList	retval		3979877	1					
ANR	3980356	Argument	retval		3979877	0					
ANR	3980357	Identifier	retval		3979877	0					
ANR	3980358	Identifier	IS_OBJECT		3979877	1					
ANR	3980359	CompoundStatement		57:41:2021:2021	3979877	1					
ANR	3980360	ExpressionStatement	Z_DELREF_P ( retval )	1753:7:54420:54438	3979877	0	True				
ANR	3980361	CallExpression	Z_DELREF_P ( retval )		3979877	0					
ANR	3980362	Callee	Z_DELREF_P		3979877	0					
ANR	3980363	Identifier	Z_DELREF_P		3979877	0					
ANR	3980364	ArgumentList	retval		3979877	1					
ANR	3980365	Argument	retval		3979877	0					
ANR	3980366	Identifier	retval		3979877	0					
ANR	3980367	ExpressionStatement	"ZVAL_DUP ( result , retval )"	1754:7:54447:54471	3979877	1	True				
ANR	3980368	CallExpression	"ZVAL_DUP ( result , retval )"		3979877	0					
ANR	3980369	Callee	ZVAL_DUP		3979877	0					
ANR	3980370	Identifier	ZVAL_DUP		3979877	0					
ANR	3980371	ArgumentList	result		3979877	1					
ANR	3980372	Argument	result		3979877	0					
ANR	3980373	Identifier	result		3979877	0					
ANR	3980374	Argument	retval		3979877	1					
ANR	3980375	Identifier	retval		3979877	0					
ANR	3980376	ExpressionStatement	retval = result	1755:7:54480:54495	3979877	2	True				
ANR	3980377	AssignmentExpression	retval = result		3979877	0		=			
ANR	3980378	Identifier	retval		3979877	0					
ANR	3980379	Identifier	result		3979877	1					
ANR	3980380	ElseStatement	else		3979877	0					
ANR	3980381	CompoundStatement		61:13:2120:2120	3979877	0					
ANR	3980382	ExpressionStatement	"ZVAL_COPY_VALUE ( result , retval )"	1757:7:54519:54550	3979877	0	True				
ANR	3980383	CallExpression	"ZVAL_COPY_VALUE ( result , retval )"		3979877	0					
ANR	3980384	Callee	ZVAL_COPY_VALUE		3979877	0					
ANR	3980385	Identifier	ZVAL_COPY_VALUE		3979877	0					
ANR	3980386	ArgumentList	result		3979877	1					
ANR	3980387	Argument	result		3979877	0					
ANR	3980388	Identifier	result		3979877	0					
ANR	3980389	Argument	retval		3979877	1					
ANR	3980390	Identifier	retval		3979877	0					
ANR	3980391	ExpressionStatement	retval = result	1758:7:54559:54574	3979877	1	True				
ANR	3980392	AssignmentExpression	retval = result		3979877	0		=			
ANR	3980393	Identifier	retval		3979877	0					
ANR	3980394	Identifier	result		3979877	1					
ANR	3980395	IfStatement	if ( Z_TYPE_P ( retval ) != IS_OBJECT )		3979877	1					
ANR	3980396	Condition	Z_TYPE_P ( retval ) != IS_OBJECT	1761:9:54600:54628	3979877	0	True				
ANR	3980397	EqualityExpression	Z_TYPE_P ( retval ) != IS_OBJECT		3979877	0		!=			
ANR	3980398	CallExpression	Z_TYPE_P ( retval )		3979877	0					
ANR	3980399	Callee	Z_TYPE_P		3979877	0					
ANR	3980400	Identifier	Z_TYPE_P		3979877	0					
ANR	3980401	ArgumentList	retval		3979877	1					
ANR	3980402	Argument	retval		3979877	0					
ANR	3980403	Identifier	retval		3979877	0					
ANR	3980404	Identifier	IS_OBJECT		3979877	1					
ANR	3980405	CompoundStatement		67:6:2249:2292	3979877	1					
ANR	3980406	IdentifierDeclStatement	zend_class_entry * ce = Z_OBJCE_P ( container ) ;	1762:6:54639:54682	3979877	0	True				
ANR	3980407	IdentifierDecl	* ce = Z_OBJCE_P ( container )		3979877	0					
ANR	3980408	IdentifierDeclType	zend_class_entry *		3979877	0					
ANR	3980409	Identifier	ce		3979877	1					
ANR	3980410	AssignmentExpression	* ce = Z_OBJCE_P ( container )		3979877	2		=			
ANR	3980411	Identifier	ce		3979877	0					
ANR	3980412	CallExpression	Z_OBJCE_P ( container )		3979877	1					
ANR	3980413	Callee	Z_OBJCE_P		3979877	0					
ANR	3980414	Identifier	Z_OBJCE_P		3979877	0					
ANR	3980415	ArgumentList	container		3979877	1					
ANR	3980416	Argument	container		3979877	0					
ANR	3980417	Identifier	container		3979877	0					
ANR	3980418	ExpressionStatement	"zend_error ( E_NOTICE , ""Indirect modification of overloaded element of %s has no effect"" , ZSTR_VAL ( ce -> name ) )"	1763:6:54690:54797	3979877	1	True				
ANR	3980419	CallExpression	"zend_error ( E_NOTICE , ""Indirect modification of overloaded element of %s has no effect"" , ZSTR_VAL ( ce -> name ) )"		3979877	0					
ANR	3980420	Callee	zend_error		3979877	0					
ANR	3980421	Identifier	zend_error		3979877	0					
ANR	3980422	ArgumentList	E_NOTICE		3979877	1					
ANR	3980423	Argument	E_NOTICE		3979877	0					
ANR	3980424	Identifier	E_NOTICE		3979877	0					
ANR	3980425	Argument	"""Indirect modification of overloaded element of %s has no effect"""		3979877	1					
ANR	3980426	PrimaryExpression	"""Indirect modification of overloaded element of %s has no effect"""		3979877	0					
ANR	3980427	Argument	ZSTR_VAL ( ce -> name )		3979877	2					
ANR	3980428	CallExpression	ZSTR_VAL ( ce -> name )		3979877	0					
ANR	3980429	Callee	ZSTR_VAL		3979877	0					
ANR	3980430	Identifier	ZSTR_VAL		3979877	0					
ANR	3980431	ArgumentList	ce -> name		3979877	1					
ANR	3980432	Argument	ce -> name		3979877	0					
ANR	3980433	PtrMemberAccess	ce -> name		3979877	0					
ANR	3980434	Identifier	ce		3979877	0					
ANR	3980435	Identifier	name		3979877	1					
ANR	3980436	ElseStatement	else		3979877	0					
ANR	3980437	IfStatement	if ( UNEXPECTED ( Z_REFCOUNT_P ( retval ) == 1 ) )		3979877	0					
ANR	3980438	Condition	UNEXPECTED ( Z_REFCOUNT_P ( retval ) == 1 )	1765:15:54821:54857	3979877	0	True				
ANR	3980439	CallExpression	UNEXPECTED ( Z_REFCOUNT_P ( retval ) == 1 )		3979877	0					
ANR	3980440	Callee	UNEXPECTED		3979877	0					
ANR	3980441	Identifier	UNEXPECTED		3979877	0					
ANR	3980442	ArgumentList	Z_REFCOUNT_P ( retval ) == 1		3979877	1					
ANR	3980443	Argument	Z_REFCOUNT_P ( retval ) == 1		3979877	0					
ANR	3980444	EqualityExpression	Z_REFCOUNT_P ( retval ) == 1		3979877	0		==			
ANR	3980445	CallExpression	Z_REFCOUNT_P ( retval )		3979877	0					
ANR	3980446	Callee	Z_REFCOUNT_P		3979877	0					
ANR	3980447	Identifier	Z_REFCOUNT_P		3979877	0					
ANR	3980448	ArgumentList	retval		3979877	1					
ANR	3980449	Argument	retval		3979877	0					
ANR	3980450	Identifier	retval		3979877	0					
ANR	3980451	PrimaryExpression	1		3979877	1					
ANR	3980452	CompoundStatement		70:54:2470:2470	3979877	1					
ANR	3980453	ExpressionStatement	ZVAL_UNREF ( retval )	1766:5:54867:54885	3979877	0	True				
ANR	3980454	CallExpression	ZVAL_UNREF ( retval )		3979877	0					
ANR	3980455	Callee	ZVAL_UNREF		3979877	0					
ANR	3980456	Identifier	ZVAL_UNREF		3979877	0					
ANR	3980457	ArgumentList	retval		3979877	1					
ANR	3980458	Argument	retval		3979877	0					
ANR	3980459	Identifier	retval		3979877	0					
ANR	3980460	IfStatement	if ( result != retval )		3979877	1					
ANR	3980461	Condition	result != retval	1768:8:54901:54916	3979877	0	True				
ANR	3980462	EqualityExpression	result != retval		3979877	0		!=			
ANR	3980463	Identifier	result		3979877	0					
ANR	3980464	Identifier	retval		3979877	1					
ANR	3980465	CompoundStatement		73:26:2529:2529	3979877	1					
ANR	3980466	ExpressionStatement	"ZVAL_INDIRECT ( result , retval )"	1769:5:54926:54955	3979877	0	True				
ANR	3980467	CallExpression	"ZVAL_INDIRECT ( result , retval )"		3979877	0					
ANR	3980468	Callee	ZVAL_INDIRECT		3979877	0					
ANR	3980469	Identifier	ZVAL_INDIRECT		3979877	0					
ANR	3980470	ArgumentList	result		3979877	1					
ANR	3980471	Argument	result		3979877	0					
ANR	3980472	Identifier	result		3979877	0					
ANR	3980473	Argument	retval		3979877	1					
ANR	3980474	Identifier	retval		3979877	0					
ANR	3980475	ElseStatement	else		3979877	0					
ANR	3980476	CompoundStatement		76:10:2583:2583	3979877	0					
ANR	3980477	ExpressionStatement	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"	1772:4:54979:55017	3979877	0	True				
ANR	3980478	CallExpression	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"		3979877	0					
ANR	3980479	Callee	ZVAL_INDIRECT		3979877	0					
ANR	3980480	Identifier	ZVAL_INDIRECT		3979877	0					
ANR	3980481	ArgumentList	result		3979877	1					
ANR	3980482	Argument	result		3979877	0					
ANR	3980483	Identifier	result		3979877	0					
ANR	3980484	Argument	& EG ( error_zval )		3979877	1					
ANR	3980485	UnaryOperationExpression	& EG ( error_zval )		3979877	0					
ANR	3980486	UnaryOperator	&		3979877	0					
ANR	3980487	CallExpression	EG ( error_zval )		3979877	1					
ANR	3980488	Callee	EG		3979877	0					
ANR	3980489	Identifier	EG		3979877	0					
ANR	3980490	ArgumentList	error_zval		3979877	1					
ANR	3980491	Argument	error_zval		3979877	0					
ANR	3980492	Identifier	error_zval		3979877	0					
ANR	3980493	ElseStatement	else		3979877	0					
ANR	3980494	IfStatement	if ( EXPECTED ( Z_TYPE_P ( container ) <= IS_FALSE ) )		3979877	0					
ANR	3980495	Condition	EXPECTED ( Z_TYPE_P ( container ) <= IS_FALSE )	1775:12:55040:55080	3979877	0	True				
ANR	3980496	CallExpression	EXPECTED ( Z_TYPE_P ( container ) <= IS_FALSE )		3979877	0					
ANR	3980497	Callee	EXPECTED		3979877	0					
ANR	3980498	Identifier	EXPECTED		3979877	0					
ANR	3980499	ArgumentList	Z_TYPE_P ( container ) <= IS_FALSE		3979877	1					
ANR	3980500	Argument	Z_TYPE_P ( container ) <= IS_FALSE		3979877	0					
ANR	3980501	RelationalExpression	Z_TYPE_P ( container ) <= IS_FALSE		3979877	0		<=			
ANR	3980502	CallExpression	Z_TYPE_P ( container )		3979877	0					
ANR	3980503	Callee	Z_TYPE_P		3979877	0					
ANR	3980504	Identifier	Z_TYPE_P		3979877	0					
ANR	3980505	ArgumentList	container		3979877	1					
ANR	3980506	Argument	container		3979877	0					
ANR	3980507	Identifier	container		3979877	0					
ANR	3980508	Identifier	IS_FALSE		3979877	1					
ANR	3980509	CompoundStatement		80:55:2693:2693	3979877	1					
ANR	3980510	IfStatement	if ( UNEXPECTED ( container == & EG ( error_zval ) ) )		3979877	0					
ANR	3980511	Condition	UNEXPECTED ( container == & EG ( error_zval ) )	1776:6:55091:55130	3979877	0	True				
ANR	3980512	CallExpression	UNEXPECTED ( container == & EG ( error_zval ) )		3979877	0					
ANR	3980513	Callee	UNEXPECTED		3979877	0					
ANR	3980514	Identifier	UNEXPECTED		3979877	0					
ANR	3980515	ArgumentList	container == & EG ( error_zval )		3979877	1					
ANR	3980516	Argument	container == & EG ( error_zval )		3979877	0					
ANR	3980517	EqualityExpression	container == & EG ( error_zval )		3979877	0		==			
ANR	3980518	Identifier	container		3979877	0					
ANR	3980519	UnaryOperationExpression	& EG ( error_zval )		3979877	1					
ANR	3980520	UnaryOperator	&		3979877	0					
ANR	3980521	CallExpression	EG ( error_zval )		3979877	1					
ANR	3980522	Callee	EG		3979877	0					
ANR	3980523	Identifier	EG		3979877	0					
ANR	3980524	ArgumentList	error_zval		3979877	1					
ANR	3980525	Argument	error_zval		3979877	0					
ANR	3980526	Identifier	error_zval		3979877	0					
ANR	3980527	CompoundStatement		81:48:2743:2743	3979877	1					
ANR	3980528	ExpressionStatement	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"	1777:3:55138:55176	3979877	0	True				
ANR	3980529	CallExpression	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"		3979877	0					
ANR	3980530	Callee	ZVAL_INDIRECT		3979877	0					
ANR	3980531	Identifier	ZVAL_INDIRECT		3979877	0					
ANR	3980532	ArgumentList	result		3979877	1					
ANR	3980533	Argument	result		3979877	0					
ANR	3980534	Identifier	result		3979877	0					
ANR	3980535	Argument	& EG ( error_zval )		3979877	1					
ANR	3980536	UnaryOperationExpression	& EG ( error_zval )		3979877	0					
ANR	3980537	UnaryOperator	&		3979877	0					
ANR	3980538	CallExpression	EG ( error_zval )		3979877	1					
ANR	3980539	Callee	EG		3979877	0					
ANR	3980540	Identifier	EG		3979877	0					
ANR	3980541	ArgumentList	error_zval		3979877	1					
ANR	3980542	Argument	error_zval		3979877	0					
ANR	3980543	Identifier	error_zval		3979877	0					
ANR	3980544	ElseStatement	else		3979877	0					
ANR	3980545	IfStatement	if ( type != BP_VAR_UNSET )		3979877	0					
ANR	3980546	Condition	type != BP_VAR_UNSET	1778:13:55191:55210	3979877	0	True				
ANR	3980547	EqualityExpression	type != BP_VAR_UNSET		3979877	0		!=			
ANR	3980548	Identifier	type		3979877	0					
ANR	3980549	Identifier	BP_VAR_UNSET		3979877	1					
ANR	3980550	CompoundStatement		83:35:2823:2823	3979877	1					
ANR	3980551	GotoStatement	goto convert_to_array ;	1779:3:55218:55239	3979877	0	True				
ANR	3980552	Identifier	convert_to_array		3979877	0					
ANR	3980553	ElseStatement	else		3979877	0					
ANR	3980554	CompoundStatement		85:9:2860:2860	3979877	0					
ANR	3980555	ExpressionStatement	ZVAL_NULL ( result )	1782:3:55283:55300	3979877	0	True				
ANR	3980556	CallExpression	ZVAL_NULL ( result )		3979877	0					
ANR	3980557	Callee	ZVAL_NULL		3979877	0					
ANR	3980558	Identifier	ZVAL_NULL		3979877	0					
ANR	3980559	ArgumentList	result		3979877	1					
ANR	3980560	Argument	result		3979877	0					
ANR	3980561	Identifier	result		3979877	0					
ANR	3980562	ElseStatement	else		3979877	0					
ANR	3980563	CompoundStatement		89:8:2924:2924	3979877	0					
ANR	3980564	IfStatement	if ( type == BP_VAR_UNSET )		3979877	0					
ANR	3980565	Condition	type == BP_VAR_UNSET	1785:6:55322:55341	3979877	0	True				
ANR	3980566	EqualityExpression	type == BP_VAR_UNSET		3979877	0		==			
ANR	3980567	Identifier	type		3979877	0					
ANR	3980568	Identifier	BP_VAR_UNSET		3979877	1					
ANR	3980569	CompoundStatement		90:28:2954:2954	3979877	1					
ANR	3980570	ExpressionStatement	"zend_error ( E_WARNING , ""Cannot unset offset in a non-array variable"" )"	1786:3:55349:55417	3979877	0	True				
ANR	3980571	CallExpression	"zend_error ( E_WARNING , ""Cannot unset offset in a non-array variable"" )"		3979877	0					
ANR	3980572	Callee	zend_error		3979877	0					
ANR	3980573	Identifier	zend_error		3979877	0					
ANR	3980574	ArgumentList	E_WARNING		3979877	1					
ANR	3980575	Argument	E_WARNING		3979877	0					
ANR	3980576	Identifier	E_WARNING		3979877	0					
ANR	3980577	Argument	"""Cannot unset offset in a non-array variable"""		3979877	1					
ANR	3980578	PrimaryExpression	"""Cannot unset offset in a non-array variable"""		3979877	0					
ANR	3980579	ExpressionStatement	ZVAL_NULL ( result )	1787:3:55422:55439	3979877	1	True				
ANR	3980580	CallExpression	ZVAL_NULL ( result )		3979877	0					
ANR	3980581	Callee	ZVAL_NULL		3979877	0					
ANR	3980582	Identifier	ZVAL_NULL		3979877	0					
ANR	3980583	ArgumentList	result		3979877	1					
ANR	3980584	Argument	result		3979877	0					
ANR	3980585	Identifier	result		3979877	0					
ANR	3980586	ElseStatement	else		3979877	0					
ANR	3980587	CompoundStatement		93:9:3060:3060	3979877	0					
ANR	3980588	ExpressionStatement	"zend_error ( E_WARNING , ""Cannot use a scalar value as an array"" )"	1789:3:55455:55517	3979877	0	True				
ANR	3980589	CallExpression	"zend_error ( E_WARNING , ""Cannot use a scalar value as an array"" )"		3979877	0					
ANR	3980590	Callee	zend_error		3979877	0					
ANR	3980591	Identifier	zend_error		3979877	0					
ANR	3980592	ArgumentList	E_WARNING		3979877	1					
ANR	3980593	Argument	E_WARNING		3979877	0					
ANR	3980594	Identifier	E_WARNING		3979877	0					
ANR	3980595	Argument	"""Cannot use a scalar value as an array"""		3979877	1					
ANR	3980596	PrimaryExpression	"""Cannot use a scalar value as an array"""		3979877	0					
ANR	3980597	ExpressionStatement	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"	1790:3:55522:55560	3979877	1	True				
ANR	3980598	CallExpression	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"		3979877	0					
ANR	3980599	Callee	ZVAL_INDIRECT		3979877	0					
ANR	3980600	Identifier	ZVAL_INDIRECT		3979877	0					
ANR	3980601	ArgumentList	result		3979877	1					
ANR	3980602	Argument	result		3979877	0					
ANR	3980603	Identifier	result		3979877	0					
ANR	3980604	Argument	& EG ( error_zval )		3979877	1					
ANR	3980605	UnaryOperationExpression	& EG ( error_zval )		3979877	0					
ANR	3980606	UnaryOperator	&		3979877	0					
ANR	3980607	CallExpression	EG ( error_zval )		3979877	1					
ANR	3980608	Callee	EG		3979877	0					
ANR	3980609	Identifier	EG		3979877	0					
ANR	3980610	ArgumentList	error_zval		3979877	1					
ANR	3980611	Argument	error_zval		3979877	0					
ANR	3980612	Identifier	error_zval		3979877	0					
ANR	3980613	ReturnType	static zend_always_inline void		3979877	1					
ANR	3980614	Identifier	zend_fetch_dimension_address		3979877	2					
ANR	3980615	ParameterList	"zval * result , zval * container , zval * dim , int dim_type , int type"		3979877	3					
ANR	3980616	Parameter	zval * result	1695:60:52323:52334	3979877	0	True				
ANR	3980617	ParameterType	zval *		3979877	0					
ANR	3980618	Identifier	result		3979877	1					
ANR	3980619	Parameter	zval * container	1695:74:52337:52351	3979877	1	True				
ANR	3980620	ParameterType	zval *		3979877	0					
ANR	3980621	Identifier	container		3979877	1					
ANR	3980622	Parameter	zval * dim	1695:91:52354:52362	3979877	2	True				
ANR	3980623	ParameterType	zval *		3979877	0					
ANR	3980624	Identifier	dim		3979877	1					
ANR	3980625	Parameter	int dim_type	1695:102:52365:52376	3979877	3	True				
ANR	3980626	ParameterType	int		3979877	0					
ANR	3980627	Identifier	dim_type		3979877	1					
ANR	3980628	Parameter	int type	1695:116:52379:52386	3979877	4	True				
ANR	3980629	ParameterType	int		3979877	0					
ANR	3980630	Identifier	type		3979877	1					
ANR	3980631	CFGEntryNode	ENTRY		3979877		True				
ANR	3980632	CFGExitNode	EXIT		3979877		True				
ANR	3980633	Symbol	container		3979877						
ANR	3980634	Symbol	zend_hash_next_index_insert		3979877						
ANR	3980635	Symbol	dim_type		3979877						
ANR	3980636	Symbol	Z_OBJ_HT_P ( container ) -> read_dimension		3979877						
ANR	3980637	Symbol	dim		3979877						
ANR	3980638	Symbol	* ce		3979877						
ANR	3980639	Symbol	type		3979877						
ANR	3980640	Symbol	& EG		3979877						
ANR	3980641	Symbol	Z_REFCOUNT_P		3979877						
ANR	3980642	Symbol	result		3979877						
ANR	3980643	Symbol	UNEXPECTED		3979877						
ANR	3980644	Symbol	E_WARNING		3979877						
ANR	3980645	Symbol	IS_REFERENCE		3979877						
ANR	3980646	Symbol	IS_ARRAY		3979877						
ANR	3980647	Symbol	Z_OBJCE_P		3979877						
ANR	3980648	Symbol	Z_STRLEN_P		3979877						
ANR	3980649	Symbol	IS_STRING		3979877						
ANR	3980650	Symbol	ce -> name		3979877						
ANR	3980651	Symbol	Z_ARRVAL_P		3979877						
ANR	3980652	Symbol	IS_UNDEF		3979877						
ANR	3980653	Symbol	IS_FALSE		3979877						
ANR	3980654	Symbol	uninitialized_zval		3979877						
ANR	3980655	Symbol	ce		3979877						
ANR	3980656	Symbol	NULL		3979877						
ANR	3980657	Symbol	E_NOTICE		3979877						
ANR	3980658	Symbol	Z_TYPE_P		3979877						
ANR	3980659	Symbol	* Z_OBJ_HT_P		3979877						
ANR	3980660	Symbol	retval		3979877						
ANR	3980661	Symbol	ZVAL_PTR_DTOR		3979877						
ANR	3980662	Symbol	ZSTR_VAL		3979877						
ANR	3980663	Symbol	error_zval		3979877						
ANR	3980664	Symbol	Z_REFVAL_P		3979877						
ANR	3980665	Symbol	zend_fetch_dimension_address_inner		3979877						
ANR	3980666	Symbol	Z_OBJ_HT_P		3979877						
ANR	3980667	Symbol	Z_REFCOUNTED_P		3979877						
ANR	3980668	Symbol	IS_OBJECT		3979877						
ANR	3980669	Symbol	EXPECTED		3979877						
ANR	3980670	Symbol	BP_VAR_UNSET		3979877						
ANR	3980671	Symbol	Z_ISREF_P		3979877						
ANR	3980672	Function	zend_fetch_dimension_address_W	1795:0:55572:55774							
ANR	3980673	FunctionDef	"zend_fetch_dimension_address_W (zval * result , zval * container_ptr , zval * dim , int dim_type)"		3980672	0					
ANR	3980674	CompoundStatement		1796:0:55693:55774	3980672	0					
ANR	3980675	ExpressionStatement	"zend_fetch_dimension_address ( result , container_ptr , dim , dim_type , BP_VAR_W )"	1797:1:55696:55772	3980672	0	True				
ANR	3980676	CallExpression	"zend_fetch_dimension_address ( result , container_ptr , dim , dim_type , BP_VAR_W )"		3980672	0					
ANR	3980677	Callee	zend_fetch_dimension_address		3980672	0					
ANR	3980678	Identifier	zend_fetch_dimension_address		3980672	0					
ANR	3980679	ArgumentList	result		3980672	1					
ANR	3980680	Argument	result		3980672	0					
ANR	3980681	Identifier	result		3980672	0					
ANR	3980682	Argument	container_ptr		3980672	1					
ANR	3980683	Identifier	container_ptr		3980672	0					
ANR	3980684	Argument	dim		3980672	2					
ANR	3980685	Identifier	dim		3980672	0					
ANR	3980686	Argument	dim_type		3980672	3					
ANR	3980687	Identifier	dim_type		3980672	0					
ANR	3980688	Argument	BP_VAR_W		3980672	4					
ANR	3980689	Identifier	BP_VAR_W		3980672	0					
ANR	3980690	ReturnType	static zend_never_inline void		3980672	1					
ANR	3980691	Identifier	zend_fetch_dimension_address_W		3980672	2					
ANR	3980692	ParameterList	"zval * result , zval * container_ptr , zval * dim , int dim_type"		3980672	3					
ANR	3980693	Parameter	zval * result	1795:61:55633:55644	3980672	0	True				
ANR	3980694	ParameterType	zval *		3980672	0					
ANR	3980695	Identifier	result		3980672	1					
ANR	3980696	Parameter	zval * container_ptr	1795:75:55647:55665	3980672	1	True				
ANR	3980697	ParameterType	zval *		3980672	0					
ANR	3980698	Identifier	container_ptr		3980672	1					
ANR	3980699	Parameter	zval * dim	1795:96:55668:55676	3980672	2	True				
ANR	3980700	ParameterType	zval *		3980672	0					
ANR	3980701	Identifier	dim		3980672	1					
ANR	3980702	Parameter	int dim_type	1795:107:55679:55690	3980672	3	True				
ANR	3980703	ParameterType	int		3980672	0					
ANR	3980704	Identifier	dim_type		3980672	1					
ANR	3980705	CFGEntryNode	ENTRY		3980672		True				
ANR	3980706	CFGExitNode	EXIT		3980672		True				
ANR	3980707	Symbol	result		3980672						
ANR	3980708	Symbol	container_ptr		3980672						
ANR	3980709	Symbol	dim_type		3980672						
ANR	3980710	Symbol	dim		3980672						
ANR	3980711	Symbol	BP_VAR_W		3980672						
ANR	3980712	Function	zend_fetch_dimension_address_RW	1800:0:55777:55981							
ANR	3980713	FunctionDef	"zend_fetch_dimension_address_RW (zval * result , zval * container_ptr , zval * dim , int dim_type)"		3980712	0					
ANR	3980714	CompoundStatement		1801:0:55899:55981	3980712	0					
ANR	3980715	ExpressionStatement	"zend_fetch_dimension_address ( result , container_ptr , dim , dim_type , BP_VAR_RW )"	1802:1:55902:55979	3980712	0	True				
ANR	3980716	CallExpression	"zend_fetch_dimension_address ( result , container_ptr , dim , dim_type , BP_VAR_RW )"		3980712	0					
ANR	3980717	Callee	zend_fetch_dimension_address		3980712	0					
ANR	3980718	Identifier	zend_fetch_dimension_address		3980712	0					
ANR	3980719	ArgumentList	result		3980712	1					
ANR	3980720	Argument	result		3980712	0					
ANR	3980721	Identifier	result		3980712	0					
ANR	3980722	Argument	container_ptr		3980712	1					
ANR	3980723	Identifier	container_ptr		3980712	0					
ANR	3980724	Argument	dim		3980712	2					
ANR	3980725	Identifier	dim		3980712	0					
ANR	3980726	Argument	dim_type		3980712	3					
ANR	3980727	Identifier	dim_type		3980712	0					
ANR	3980728	Argument	BP_VAR_RW		3980712	4					
ANR	3980729	Identifier	BP_VAR_RW		3980712	0					
ANR	3980730	ReturnType	static zend_never_inline void		3980712	1					
ANR	3980731	Identifier	zend_fetch_dimension_address_RW		3980712	2					
ANR	3980732	ParameterList	"zval * result , zval * container_ptr , zval * dim , int dim_type"		3980712	3					
ANR	3980733	Parameter	zval * result	1800:62:55839:55850	3980712	0	True				
ANR	3980734	ParameterType	zval *		3980712	0					
ANR	3980735	Identifier	result		3980712	1					
ANR	3980736	Parameter	zval * container_ptr	1800:76:55853:55871	3980712	1	True				
ANR	3980737	ParameterType	zval *		3980712	0					
ANR	3980738	Identifier	container_ptr		3980712	1					
ANR	3980739	Parameter	zval * dim	1800:97:55874:55882	3980712	2	True				
ANR	3980740	ParameterType	zval *		3980712	0					
ANR	3980741	Identifier	dim		3980712	1					
ANR	3980742	Parameter	int dim_type	1800:108:55885:55896	3980712	3	True				
ANR	3980743	ParameterType	int		3980712	0					
ANR	3980744	Identifier	dim_type		3980712	1					
ANR	3980745	CFGEntryNode	ENTRY		3980712		True				
ANR	3980746	CFGExitNode	EXIT		3980712		True				
ANR	3980747	Symbol	result		3980712						
ANR	3980748	Symbol	BP_VAR_RW		3980712						
ANR	3980749	Symbol	container_ptr		3980712						
ANR	3980750	Symbol	dim_type		3980712						
ANR	3980751	Symbol	dim		3980712						
ANR	3980752	Function	zend_fetch_dimension_address_UNSET	1805:0:55984:56194							
ANR	3980753	FunctionDef	"zend_fetch_dimension_address_UNSET (zval * result , zval * container_ptr , zval * dim , int dim_type)"		3980752	0					
ANR	3980754	CompoundStatement		1806:0:56109:56194	3980752	0					
ANR	3980755	ExpressionStatement	"zend_fetch_dimension_address ( result , container_ptr , dim , dim_type , BP_VAR_UNSET )"	1807:1:56112:56192	3980752	0	True				
ANR	3980756	CallExpression	"zend_fetch_dimension_address ( result , container_ptr , dim , dim_type , BP_VAR_UNSET )"		3980752	0					
ANR	3980757	Callee	zend_fetch_dimension_address		3980752	0					
ANR	3980758	Identifier	zend_fetch_dimension_address		3980752	0					
ANR	3980759	ArgumentList	result		3980752	1					
ANR	3980760	Argument	result		3980752	0					
ANR	3980761	Identifier	result		3980752	0					
ANR	3980762	Argument	container_ptr		3980752	1					
ANR	3980763	Identifier	container_ptr		3980752	0					
ANR	3980764	Argument	dim		3980752	2					
ANR	3980765	Identifier	dim		3980752	0					
ANR	3980766	Argument	dim_type		3980752	3					
ANR	3980767	Identifier	dim_type		3980752	0					
ANR	3980768	Argument	BP_VAR_UNSET		3980752	4					
ANR	3980769	Identifier	BP_VAR_UNSET		3980752	0					
ANR	3980770	ReturnType	static zend_never_inline void		3980752	1					
ANR	3980771	Identifier	zend_fetch_dimension_address_UNSET		3980752	2					
ANR	3980772	ParameterList	"zval * result , zval * container_ptr , zval * dim , int dim_type"		3980752	3					
ANR	3980773	Parameter	zval * result	1805:65:56049:56060	3980752	0	True				
ANR	3980774	ParameterType	zval *		3980752	0					
ANR	3980775	Identifier	result		3980752	1					
ANR	3980776	Parameter	zval * container_ptr	1805:79:56063:56081	3980752	1	True				
ANR	3980777	ParameterType	zval *		3980752	0					
ANR	3980778	Identifier	container_ptr		3980752	1					
ANR	3980779	Parameter	zval * dim	1805:100:56084:56092	3980752	2	True				
ANR	3980780	ParameterType	zval *		3980752	0					
ANR	3980781	Identifier	dim		3980752	1					
ANR	3980782	Parameter	int dim_type	1805:111:56095:56106	3980752	3	True				
ANR	3980783	ParameterType	int		3980752	0					
ANR	3980784	Identifier	dim_type		3980752	1					
ANR	3980785	CFGEntryNode	ENTRY		3980752		True				
ANR	3980786	CFGExitNode	EXIT		3980752		True				
ANR	3980787	Symbol	result		3980752						
ANR	3980788	Symbol	container_ptr		3980752						
ANR	3980789	Symbol	dim_type		3980752						
ANR	3980790	Symbol	dim		3980752						
ANR	3980791	Symbol	BP_VAR_UNSET		3980752						
ANR	3980792	Function	zend_fetch_dimension_address_read	1810:0:56197:58605							
ANR	3980793	FunctionDef	"zend_fetch_dimension_address_read (zval * result , zval * container , zval * dim , int dim_type , int type)"		3980792	0					
ANR	3980794	CompoundStatement		1811:0:56328:58605	3980792	0					
ANR	3980795	IdentifierDeclStatement	zval * retval ;	1812:1:56331:56343	3980792	0	True				
ANR	3980796	IdentifierDecl	* retval		3980792	0					
ANR	3980797	IdentifierDeclType	zval *		3980792	0					
ANR	3980798	Identifier	retval		3980792	1					
ANR	3980799	IfStatement	if ( EXPECTED ( Z_TYPE_P ( container ) == IS_ARRAY ) )		3980792	1					
ANR	3980800	Condition	EXPECTED ( Z_TYPE_P ( container ) == IS_ARRAY )	1814:5:56351:56391	3980792	0	True				
ANR	3980801	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_ARRAY )		3980792	0					
ANR	3980802	Callee	EXPECTED		3980792	0					
ANR	3980803	Identifier	EXPECTED		3980792	0					
ANR	3980804	ArgumentList	Z_TYPE_P ( container ) == IS_ARRAY		3980792	1					
ANR	3980805	Argument	Z_TYPE_P ( container ) == IS_ARRAY		3980792	0					
ANR	3980806	EqualityExpression	Z_TYPE_P ( container ) == IS_ARRAY		3980792	0		==			
ANR	3980807	CallExpression	Z_TYPE_P ( container )		3980792	0					
ANR	3980808	Callee	Z_TYPE_P		3980792	0					
ANR	3980809	Identifier	Z_TYPE_P		3980792	0					
ANR	3980810	ArgumentList	container		3980792	1					
ANR	3980811	Argument	container		3980792	0					
ANR	3980812	Identifier	container		3980792	0					
ANR	3980813	Identifier	IS_ARRAY		3980792	1					
ANR	3980814	CompoundStatement		4:48:65:65	3980792	1					
ANR	3980815	Label	try_array :	1815:0:56396:56405	3980792	0	True				
ANR	3980816	Identifier	try_array		3980792	0					
ANR	3980817	ExpressionStatement	"retval = zend_fetch_dimension_address_inner ( Z_ARRVAL_P ( container ) , dim , dim_type , type )"	1816:2:56409:56496	3980792	1	True				
ANR	3980818	AssignmentExpression	"retval = zend_fetch_dimension_address_inner ( Z_ARRVAL_P ( container ) , dim , dim_type , type )"		3980792	0		=			
ANR	3980819	Identifier	retval		3980792	0					
ANR	3980820	CallExpression	"zend_fetch_dimension_address_inner ( Z_ARRVAL_P ( container ) , dim , dim_type , type )"		3980792	1					
ANR	3980821	Callee	zend_fetch_dimension_address_inner		3980792	0					
ANR	3980822	Identifier	zend_fetch_dimension_address_inner		3980792	0					
ANR	3980823	ArgumentList	Z_ARRVAL_P ( container )		3980792	1					
ANR	3980824	Argument	Z_ARRVAL_P ( container )		3980792	0					
ANR	3980825	CallExpression	Z_ARRVAL_P ( container )		3980792	0					
ANR	3980826	Callee	Z_ARRVAL_P		3980792	0					
ANR	3980827	Identifier	Z_ARRVAL_P		3980792	0					
ANR	3980828	ArgumentList	container		3980792	1					
ANR	3980829	Argument	container		3980792	0					
ANR	3980830	Identifier	container		3980792	0					
ANR	3980831	Argument	dim		3980792	1					
ANR	3980832	Identifier	dim		3980792	0					
ANR	3980833	Argument	dim_type		3980792	2					
ANR	3980834	Identifier	dim_type		3980792	0					
ANR	3980835	Argument	type		3980792	3					
ANR	3980836	Identifier	type		3980792	0					
ANR	3980837	ExpressionStatement	"ZVAL_COPY ( result , retval )"	1817:2:56500:56525	3980792	2	True				
ANR	3980838	CallExpression	"ZVAL_COPY ( result , retval )"		3980792	0					
ANR	3980839	Callee	ZVAL_COPY		3980792	0					
ANR	3980840	Identifier	ZVAL_COPY		3980792	0					
ANR	3980841	ArgumentList	result		3980792	1					
ANR	3980842	Argument	result		3980792	0					
ANR	3980843	Identifier	result		3980792	0					
ANR	3980844	Argument	retval		3980792	1					
ANR	3980845	Identifier	retval		3980792	0					
ANR	3980846	ReturnStatement	return ;	1818:2:56529:56535	3980792	3	True				
ANR	3980847	ElseStatement	else		3980792	0					
ANR	3980848	IfStatement	if ( EXPECTED ( Z_TYPE_P ( container ) == IS_REFERENCE ) )		3980792	0					
ANR	3980849	Condition	EXPECTED ( Z_TYPE_P ( container ) == IS_REFERENCE )	1819:12:56549:56593	3980792	0	True				
ANR	3980850	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_REFERENCE )		3980792	0					
ANR	3980851	Callee	EXPECTED		3980792	0					
ANR	3980852	Identifier	EXPECTED		3980792	0					
ANR	3980853	ArgumentList	Z_TYPE_P ( container ) == IS_REFERENCE		3980792	1					
ANR	3980854	Argument	Z_TYPE_P ( container ) == IS_REFERENCE		3980792	0					
ANR	3980855	EqualityExpression	Z_TYPE_P ( container ) == IS_REFERENCE		3980792	0		==			
ANR	3980856	CallExpression	Z_TYPE_P ( container )		3980792	0					
ANR	3980857	Callee	Z_TYPE_P		3980792	0					
ANR	3980858	Identifier	Z_TYPE_P		3980792	0					
ANR	3980859	ArgumentList	container		3980792	1					
ANR	3980860	Argument	container		3980792	0					
ANR	3980861	Identifier	container		3980792	0					
ANR	3980862	Identifier	IS_REFERENCE		3980792	1					
ANR	3980863	CompoundStatement		9:59:267:267	3980792	1					
ANR	3980864	ExpressionStatement	container = Z_REFVAL_P ( container )	1820:2:56600:56633	3980792	0	True				
ANR	3980865	AssignmentExpression	container = Z_REFVAL_P ( container )		3980792	0		=			
ANR	3980866	Identifier	container		3980792	0					
ANR	3980867	CallExpression	Z_REFVAL_P ( container )		3980792	1					
ANR	3980868	Callee	Z_REFVAL_P		3980792	0					
ANR	3980869	Identifier	Z_REFVAL_P		3980792	0					
ANR	3980870	ArgumentList	container		3980792	1					
ANR	3980871	Argument	container		3980792	0					
ANR	3980872	Identifier	container		3980792	0					
ANR	3980873	IfStatement	if ( EXPECTED ( Z_TYPE_P ( container ) == IS_ARRAY ) )		3980792	1					
ANR	3980874	Condition	EXPECTED ( Z_TYPE_P ( container ) == IS_ARRAY )	1821:6:56641:56681	3980792	0	True				
ANR	3980875	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_ARRAY )		3980792	0					
ANR	3980876	Callee	EXPECTED		3980792	0					
ANR	3980877	Identifier	EXPECTED		3980792	0					
ANR	3980878	ArgumentList	Z_TYPE_P ( container ) == IS_ARRAY		3980792	1					
ANR	3980879	Argument	Z_TYPE_P ( container ) == IS_ARRAY		3980792	0					
ANR	3980880	EqualityExpression	Z_TYPE_P ( container ) == IS_ARRAY		3980792	0		==			
ANR	3980881	CallExpression	Z_TYPE_P ( container )		3980792	0					
ANR	3980882	Callee	Z_TYPE_P		3980792	0					
ANR	3980883	Identifier	Z_TYPE_P		3980792	0					
ANR	3980884	ArgumentList	container		3980792	1					
ANR	3980885	Argument	container		3980792	0					
ANR	3980886	Identifier	container		3980792	0					
ANR	3980887	Identifier	IS_ARRAY		3980792	1					
ANR	3980888	CompoundStatement		11:49:355:355	3980792	1					
ANR	3980889	GotoStatement	goto try_array ;	1822:3:56689:56703	3980792	0	True				
ANR	3980890	Identifier	try_array		3980792	0					
ANR	3980891	IfStatement	if ( EXPECTED ( Z_TYPE_P ( container ) == IS_STRING ) )		3980792	2					
ANR	3980892	Condition	EXPECTED ( Z_TYPE_P ( container ) == IS_STRING )	1825:5:56717:56758	3980792	0	True				
ANR	3980893	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_STRING )		3980792	0					
ANR	3980894	Callee	EXPECTED		3980792	0					
ANR	3980895	Identifier	EXPECTED		3980792	0					
ANR	3980896	ArgumentList	Z_TYPE_P ( container ) == IS_STRING		3980792	1					
ANR	3980897	Argument	Z_TYPE_P ( container ) == IS_STRING		3980792	0					
ANR	3980898	EqualityExpression	Z_TYPE_P ( container ) == IS_STRING		3980792	0		==			
ANR	3980899	CallExpression	Z_TYPE_P ( container )		3980792	0					
ANR	3980900	Callee	Z_TYPE_P		3980792	0					
ANR	3980901	Identifier	Z_TYPE_P		3980792	0					
ANR	3980902	ArgumentList	container		3980792	1					
ANR	3980903	Argument	container		3980792	0					
ANR	3980904	Identifier	container		3980792	0					
ANR	3980905	Identifier	IS_STRING		3980792	1					
ANR	3980906	CompoundStatement		16:2:436:452	3980792	1					
ANR	3980907	IdentifierDeclStatement	zend_long offset ;	1826:2:56765:56781	3980792	0	True				
ANR	3980908	IdentifierDecl	offset		3980792	0					
ANR	3980909	IdentifierDeclType	zend_long		3980792	0					
ANR	3980910	Identifier	offset		3980792	1					
ANR	3980911	Label	try_string_offset :	1828:0:56784:56801	3980792	1	True				
ANR	3980912	Identifier	try_string_offset		3980792	0					
ANR	3980913	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( dim ) != IS_LONG ) )		3980792	2					
ANR	3980914	Condition	UNEXPECTED ( Z_TYPE_P ( dim ) != IS_LONG )	1829:6:56809:56844	3980792	0	True				
ANR	3980915	CallExpression	UNEXPECTED ( Z_TYPE_P ( dim ) != IS_LONG )		3980792	0					
ANR	3980916	Callee	UNEXPECTED		3980792	0					
ANR	3980917	Identifier	UNEXPECTED		3980792	0					
ANR	3980918	ArgumentList	Z_TYPE_P ( dim ) != IS_LONG		3980792	1					
ANR	3980919	Argument	Z_TYPE_P ( dim ) != IS_LONG		3980792	0					
ANR	3980920	EqualityExpression	Z_TYPE_P ( dim ) != IS_LONG		3980792	0		!=			
ANR	3980921	CallExpression	Z_TYPE_P ( dim )		3980792	0					
ANR	3980922	Callee	Z_TYPE_P		3980792	0					
ANR	3980923	Identifier	Z_TYPE_P		3980792	0					
ANR	3980924	ArgumentList	dim		3980792	1					
ANR	3980925	Argument	dim		3980792	0					
ANR	3980926	Identifier	dim		3980792	0					
ANR	3980927	Identifier	IS_LONG		3980792	1					
ANR	3980928	CompoundStatement		19:44:518:518	3980792	1					
ANR	3980929	SwitchStatement	switch ( Z_TYPE_P ( dim ) )		3980792	0					
ANR	3980930	Condition	Z_TYPE_P ( dim )	1830:10:56859:56871	3980792	0	True				
ANR	3980931	CallExpression	Z_TYPE_P ( dim )		3980792	0					
ANR	3980932	Callee	Z_TYPE_P		3980792	0					
ANR	3980933	Identifier	Z_TYPE_P		3980792	0					
ANR	3980934	ArgumentList	dim		3980792	1					
ANR	3980935	Argument	dim		3980792	0					
ANR	3980936	Identifier	dim		3980792	0					
ANR	3980937	CompoundStatement		20:25:545:545	3980792	1					
ANR	3980938	Label	case IS_STRING :	1832:4:56904:56918	3980792	0	True				
ANR	3980939	Identifier	IS_STRING		3980792	0					
ANR	3980940	IfStatement	"if ( IS_LONG == is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , NULL , NULL , - 1 ) )"		3980792	1					
ANR	3980941	Condition	"IS_LONG == is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , NULL , NULL , - 1 )"	1833:9:56929:57006	3980792	0	True				
ANR	3980942	EqualityExpression	"IS_LONG == is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , NULL , NULL , - 1 )"		3980792	0		==			
ANR	3980943	Identifier	IS_LONG		3980792	0					
ANR	3980944	CallExpression	"is_numeric_string ( Z_STRVAL_P ( dim ) , Z_STRLEN_P ( dim ) , NULL , NULL , - 1 )"		3980792	1					
ANR	3980945	Callee	is_numeric_string		3980792	0					
ANR	3980946	Identifier	is_numeric_string		3980792	0					
ANR	3980947	ArgumentList	Z_STRVAL_P ( dim )		3980792	1					
ANR	3980948	Argument	Z_STRVAL_P ( dim )		3980792	0					
ANR	3980949	CallExpression	Z_STRVAL_P ( dim )		3980792	0					
ANR	3980950	Callee	Z_STRVAL_P		3980792	0					
ANR	3980951	Identifier	Z_STRVAL_P		3980792	0					
ANR	3980952	ArgumentList	dim		3980792	1					
ANR	3980953	Argument	dim		3980792	0					
ANR	3980954	Identifier	dim		3980792	0					
ANR	3980955	Argument	Z_STRLEN_P ( dim )		3980792	1					
ANR	3980956	CallExpression	Z_STRLEN_P ( dim )		3980792	0					
ANR	3980957	Callee	Z_STRLEN_P		3980792	0					
ANR	3980958	Identifier	Z_STRLEN_P		3980792	0					
ANR	3980959	ArgumentList	dim		3980792	1					
ANR	3980960	Argument	dim		3980792	0					
ANR	3980961	Identifier	dim		3980792	0					
ANR	3980962	Argument	NULL		3980792	2					
ANR	3980963	Identifier	NULL		3980792	0					
ANR	3980964	Argument	NULL		3980792	3					
ANR	3980965	Identifier	NULL		3980792	0					
ANR	3980966	Argument	- 1		3980792	4					
ANR	3980967	UnaryOperationExpression	- 1		3980792	0					
ANR	3980968	UnaryOperator	-		3980792	0					
ANR	3980969	PrimaryExpression	1		3980792	1					
ANR	3980970	CompoundStatement		23:89:680:680	3980792	1					
ANR	3980971	BreakStatement	break ;	1834:6:57017:57022	3980792	0	True				
ANR	3980972	IfStatement	if ( type == BP_VAR_IS )		3980792	2					
ANR	3980973	Condition	type == BP_VAR_IS	1836:9:57040:57056	3980792	0	True				
ANR	3980974	EqualityExpression	type == BP_VAR_IS		3980792	0		==			
ANR	3980975	Identifier	type		3980792	0					
ANR	3980976	Identifier	BP_VAR_IS		3980792	1					
ANR	3980977	CompoundStatement		26:28:730:730	3980792	1					
ANR	3980978	ExpressionStatement	ZVAL_NULL ( result )	1837:6:57067:57084	3980792	0	True				
ANR	3980979	CallExpression	ZVAL_NULL ( result )		3980792	0					
ANR	3980980	Callee	ZVAL_NULL		3980792	0					
ANR	3980981	Identifier	ZVAL_NULL		3980792	0					
ANR	3980982	ArgumentList	result		3980792	1					
ANR	3980983	Argument	result		3980792	0					
ANR	3980984	Identifier	result		3980792	0					
ANR	3980985	ReturnStatement	return ;	1838:6:57092:57098	3980792	1	True				
ANR	3980986	ExpressionStatement	"zend_error ( E_WARNING , ""Illegal string offset '%s'"" , Z_STRVAL_P ( dim ) )"	1840:5:57112:57180	3980792	3	True				
ANR	3980987	CallExpression	"zend_error ( E_WARNING , ""Illegal string offset '%s'"" , Z_STRVAL_P ( dim ) )"		3980792	0					
ANR	3980988	Callee	zend_error		3980792	0					
ANR	3980989	Identifier	zend_error		3980792	0					
ANR	3980990	ArgumentList	E_WARNING		3980792	1					
ANR	3980991	Argument	E_WARNING		3980792	0					
ANR	3980992	Identifier	E_WARNING		3980792	0					
ANR	3980993	Argument	"""Illegal string offset '%s'"""		3980792	1					
ANR	3980994	PrimaryExpression	"""Illegal string offset '%s'"""		3980792	0					
ANR	3980995	Argument	Z_STRVAL_P ( dim )		3980792	2					
ANR	3980996	CallExpression	Z_STRVAL_P ( dim )		3980792	0					
ANR	3980997	Callee	Z_STRVAL_P		3980792	0					
ANR	3980998	Identifier	Z_STRVAL_P		3980792	0					
ANR	3980999	ArgumentList	dim		3980792	1					
ANR	3981000	Argument	dim		3980792	0					
ANR	3981001	Identifier	dim		3980792	0					
ANR	3981002	BreakStatement	break ;	1841:5:57187:57192	3980792	4	True				
ANR	3981003	Label	case IS_DOUBLE :	1842:4:57198:57212	3980792	5	True				
ANR	3981004	Identifier	IS_DOUBLE		3980792	0					
ANR	3981005	Label	case IS_NULL :	1843:4:57218:57230	3980792	6	True				
ANR	3981006	Identifier	IS_NULL		3980792	0					
ANR	3981007	Label	case IS_FALSE :	1844:4:57236:57249	3980792	7	True				
ANR	3981008	Identifier	IS_FALSE		3980792	0					
ANR	3981009	Label	case IS_TRUE :	1845:4:57255:57267	3980792	8	True				
ANR	3981010	Identifier	IS_TRUE		3980792	0					
ANR	3981011	IfStatement	if ( type != BP_VAR_IS )		3980792	9					
ANR	3981012	Condition	type != BP_VAR_IS	1846:9:57278:57294	3980792	0	True				
ANR	3981013	EqualityExpression	type != BP_VAR_IS		3980792	0		!=			
ANR	3981014	Identifier	type		3980792	0					
ANR	3981015	Identifier	BP_VAR_IS		3980792	1					
ANR	3981016	CompoundStatement		36:28:968:968	3980792	1					
ANR	3981017	ExpressionStatement	"zend_error ( E_NOTICE , ""String offset cast occurred"" )"	1847:6:57305:57356	3980792	0	True				
ANR	3981018	CallExpression	"zend_error ( E_NOTICE , ""String offset cast occurred"" )"		3980792	0					
ANR	3981019	Callee	zend_error		3980792	0					
ANR	3981020	Identifier	zend_error		3980792	0					
ANR	3981021	ArgumentList	E_NOTICE		3980792	1					
ANR	3981022	Argument	E_NOTICE		3980792	0					
ANR	3981023	Identifier	E_NOTICE		3980792	0					
ANR	3981024	Argument	"""String offset cast occurred"""		3980792	1					
ANR	3981025	PrimaryExpression	"""String offset cast occurred"""		3980792	0					
ANR	3981026	BreakStatement	break ;	1849:5:57370:57375	3980792	10	True				
ANR	3981027	Label	case IS_REFERENCE :	1850:4:57381:57398	3980792	11	True				
ANR	3981028	Identifier	IS_REFERENCE		3980792	0					
ANR	3981029	ExpressionStatement	dim = Z_REFVAL_P ( dim )	1851:5:57405:57426	3980792	12	True				
ANR	3981030	AssignmentExpression	dim = Z_REFVAL_P ( dim )		3980792	0		=			
ANR	3981031	Identifier	dim		3980792	0					
ANR	3981032	CallExpression	Z_REFVAL_P ( dim )		3980792	1					
ANR	3981033	Callee	Z_REFVAL_P		3980792	0					
ANR	3981034	Identifier	Z_REFVAL_P		3980792	0					
ANR	3981035	ArgumentList	dim		3980792	1					
ANR	3981036	Argument	dim		3980792	0					
ANR	3981037	Identifier	dim		3980792	0					
ANR	3981038	GotoStatement	goto try_string_offset ;	1852:5:57433:57455	3980792	13	True				
ANR	3981039	Identifier	try_string_offset		3980792	0					
ANR	3981040	Label	default :	1853:4:57461:57468	3980792	14	True				
ANR	3981041	Identifier	default		3980792	0					
ANR	3981042	ExpressionStatement	"zend_error ( E_WARNING , ""Illegal offset type"" )"	1854:5:57475:57519	3980792	15	True				
ANR	3981043	CallExpression	"zend_error ( E_WARNING , ""Illegal offset type"" )"		3980792	0					
ANR	3981044	Callee	zend_error		3980792	0					
ANR	3981045	Identifier	zend_error		3980792	0					
ANR	3981046	ArgumentList	E_WARNING		3980792	1					
ANR	3981047	Argument	E_WARNING		3980792	0					
ANR	3981048	Identifier	E_WARNING		3980792	0					
ANR	3981049	Argument	"""Illegal offset type"""		3980792	1					
ANR	3981050	PrimaryExpression	"""Illegal offset type"""		3980792	0					
ANR	3981051	BreakStatement	break ;	1855:5:57526:57531	3980792	16	True				
ANR	3981052	ExpressionStatement	offset = zval_get_long ( dim )	1858:3:57542:57569	3980792	1	True				
ANR	3981053	AssignmentExpression	offset = zval_get_long ( dim )		3980792	0		=			
ANR	3981054	Identifier	offset		3980792	0					
ANR	3981055	CallExpression	zval_get_long ( dim )		3980792	1					
ANR	3981056	Callee	zval_get_long		3980792	0					
ANR	3981057	Identifier	zval_get_long		3980792	0					
ANR	3981058	ArgumentList	dim		3980792	1					
ANR	3981059	Argument	dim		3980792	0					
ANR	3981060	Identifier	dim		3980792	0					
ANR	3981061	ElseStatement	else		3980792	0					
ANR	3981062	CompoundStatement		49:9:1251:1251	3980792	0					
ANR	3981063	ExpressionStatement	offset = Z_LVAL_P ( dim )	1860:3:57585:57607	3980792	0	True				
ANR	3981064	AssignmentExpression	offset = Z_LVAL_P ( dim )		3980792	0		=			
ANR	3981065	Identifier	offset		3980792	0					
ANR	3981066	CallExpression	Z_LVAL_P ( dim )		3980792	1					
ANR	3981067	Callee	Z_LVAL_P		3980792	0					
ANR	3981068	Identifier	Z_LVAL_P		3980792	0					
ANR	3981069	ArgumentList	dim		3980792	1					
ANR	3981070	Argument	dim		3980792	0					
ANR	3981071	Identifier	dim		3980792	0					
ANR	3981072	IfStatement	if ( UNEXPECTED ( offset < 0 ) || UNEXPECTED ( Z_STRLEN_P ( container ) <= ( size_t ) offset ) )		3980792	3					
ANR	3981073	Condition	UNEXPECTED ( offset < 0 ) || UNEXPECTED ( Z_STRLEN_P ( container ) <= ( size_t ) offset )	1863:6:57620:57696	3980792	0	True				
ANR	3981074	OrExpression	UNEXPECTED ( offset < 0 ) || UNEXPECTED ( Z_STRLEN_P ( container ) <= ( size_t ) offset )		3980792	0		||			
ANR	3981075	CallExpression	UNEXPECTED ( offset < 0 )		3980792	0					
ANR	3981076	Callee	UNEXPECTED		3980792	0					
ANR	3981077	Identifier	UNEXPECTED		3980792	0					
ANR	3981078	ArgumentList	offset < 0		3980792	1					
ANR	3981079	Argument	offset < 0		3980792	0					
ANR	3981080	RelationalExpression	offset < 0		3980792	0		<			
ANR	3981081	Identifier	offset		3980792	0					
ANR	3981082	PrimaryExpression	0		3980792	1					
ANR	3981083	CallExpression	UNEXPECTED ( Z_STRLEN_P ( container ) <= ( size_t ) offset )		3980792	1					
ANR	3981084	Callee	UNEXPECTED		3980792	0					
ANR	3981085	Identifier	UNEXPECTED		3980792	0					
ANR	3981086	ArgumentList	Z_STRLEN_P ( container ) <= ( size_t ) offset		3980792	1					
ANR	3981087	Argument	Z_STRLEN_P ( container ) <= ( size_t ) offset		3980792	0					
ANR	3981088	RelationalExpression	Z_STRLEN_P ( container ) <= ( size_t ) offset		3980792	0		<=			
ANR	3981089	CallExpression	Z_STRLEN_P ( container )		3980792	0					
ANR	3981090	Callee	Z_STRLEN_P		3980792	0					
ANR	3981091	Identifier	Z_STRLEN_P		3980792	0					
ANR	3981092	ArgumentList	container		3980792	1					
ANR	3981093	Argument	container		3980792	0					
ANR	3981094	Identifier	container		3980792	0					
ANR	3981095	CastExpression	( size_t ) offset		3980792	1					
ANR	3981096	CastTarget	size_t		3980792	0					
ANR	3981097	Identifier	offset		3980792	1					
ANR	3981098	CompoundStatement		53:85:1370:1370	3980792	1					
ANR	3981099	IfStatement	if ( type != BP_VAR_IS )		3980792	0					
ANR	3981100	Condition	type != BP_VAR_IS	1864:7:57708:57724	3980792	0	True				
ANR	3981101	EqualityExpression	type != BP_VAR_IS		3980792	0		!=			
ANR	3981102	Identifier	type		3980792	0					
ANR	3981103	Identifier	BP_VAR_IS		3980792	1					
ANR	3981104	CompoundStatement		54:26:1398:1398	3980792	1					
ANR	3981105	ExpressionStatement	"zend_error ( E_NOTICE , ""Uninitialized string offset: %pd"" , offset )"	1865:4:57733:57797	3980792	0	True				
ANR	3981106	CallExpression	"zend_error ( E_NOTICE , ""Uninitialized string offset: %pd"" , offset )"		3980792	0					
ANR	3981107	Callee	zend_error		3980792	0					
ANR	3981108	Identifier	zend_error		3980792	0					
ANR	3981109	ArgumentList	E_NOTICE		3980792	1					
ANR	3981110	Argument	E_NOTICE		3980792	0					
ANR	3981111	Identifier	E_NOTICE		3980792	0					
ANR	3981112	Argument	"""Uninitialized string offset: %pd"""		3980792	1					
ANR	3981113	PrimaryExpression	"""Uninitialized string offset: %pd"""		3980792	0					
ANR	3981114	Argument	offset		3980792	2					
ANR	3981115	Identifier	offset		3980792	0					
ANR	3981116	ExpressionStatement	ZVAL_EMPTY_STRING ( result )	1866:4:57803:57828	3980792	1	True				
ANR	3981117	CallExpression	ZVAL_EMPTY_STRING ( result )		3980792	0					
ANR	3981118	Callee	ZVAL_EMPTY_STRING		3980792	0					
ANR	3981119	Identifier	ZVAL_EMPTY_STRING		3980792	0					
ANR	3981120	ArgumentList	result		3980792	1					
ANR	3981121	Argument	result		3980792	0					
ANR	3981122	Identifier	result		3980792	0					
ANR	3981123	ElseStatement	else		3980792	0					
ANR	3981124	CompoundStatement		57:10:1511:1511	3980792	0					
ANR	3981125	ExpressionStatement	ZVAL_NULL ( result )	1868:4:57846:57863	3980792	0	True				
ANR	3981126	CallExpression	ZVAL_NULL ( result )		3980792	0					
ANR	3981127	Callee	ZVAL_NULL		3980792	0					
ANR	3981128	Identifier	ZVAL_NULL		3980792	0					
ANR	3981129	ArgumentList	result		3980792	1					
ANR	3981130	Argument	result		3980792	0					
ANR	3981131	Identifier	result		3980792	0					
ANR	3981132	ElseStatement	else		3980792	0					
ANR	3981133	CompoundStatement		61:3:1555:1611	3980792	0					
ANR	3981134	IdentifierDeclStatement	zend_uchar c = ( zend_uchar ) Z_STRVAL_P ( container ) [ offset ] ;	1871:3:57884:57940	3980792	0	True				
ANR	3981135	IdentifierDecl	c = ( zend_uchar ) Z_STRVAL_P ( container ) [ offset ]		3980792	0					
ANR	3981136	IdentifierDeclType	zend_uchar		3980792	0					
ANR	3981137	Identifier	c		3980792	1					
ANR	3981138	AssignmentExpression	c = ( zend_uchar ) Z_STRVAL_P ( container ) [ offset ]		3980792	2		=			
ANR	3981139	Identifier	c		3980792	0					
ANR	3981140	CastExpression	( zend_uchar ) Z_STRVAL_P ( container ) [ offset ]		3980792	1					
ANR	3981141	CastTarget	zend_uchar		3980792	0					
ANR	3981142	ArrayIndexing	Z_STRVAL_P ( container ) [ offset ]		3980792	1					
ANR	3981143	CallExpression	Z_STRVAL_P ( container )		3980792	0					
ANR	3981144	Callee	Z_STRVAL_P		3980792	0					
ANR	3981145	Identifier	Z_STRVAL_P		3980792	0					
ANR	3981146	ArgumentList	container		3980792	1					
ANR	3981147	Argument	container		3980792	0					
ANR	3981148	Identifier	container		3980792	0					
ANR	3981149	Identifier	offset		3980792	1					
ANR	3981150	IfStatement	if ( CG ( one_char_string ) [ c ] )		3980792	1					
ANR	3981151	Condition	CG ( one_char_string ) [ c ]	1873:7:57950:57971	3980792	0	True				
ANR	3981152	ArrayIndexing	CG ( one_char_string ) [ c ]		3980792	0					
ANR	3981153	CallExpression	CG ( one_char_string )		3980792	0					
ANR	3981154	Callee	CG		3980792	0					
ANR	3981155	Identifier	CG		3980792	0					
ANR	3981156	ArgumentList	one_char_string		3980792	1					
ANR	3981157	Argument	one_char_string		3980792	0					
ANR	3981158	Identifier	one_char_string		3980792	0					
ANR	3981159	Identifier	c		3980792	1					
ANR	3981160	CompoundStatement		63:31:1645:1645	3980792	1					
ANR	3981161	ExpressionStatement	"ZVAL_INTERNED_STR ( result , CG ( one_char_string ) [ c ] )"	1874:4:57980:58029	3980792	0	True				
ANR	3981162	CallExpression	"ZVAL_INTERNED_STR ( result , CG ( one_char_string ) [ c ] )"		3980792	0					
ANR	3981163	Callee	ZVAL_INTERNED_STR		3980792	0					
ANR	3981164	Identifier	ZVAL_INTERNED_STR		3980792	0					
ANR	3981165	ArgumentList	result		3980792	1					
ANR	3981166	Argument	result		3980792	0					
ANR	3981167	Identifier	result		3980792	0					
ANR	3981168	Argument	CG ( one_char_string ) [ c ]		3980792	1					
ANR	3981169	ArrayIndexing	CG ( one_char_string ) [ c ]		3980792	0					
ANR	3981170	CallExpression	CG ( one_char_string )		3980792	0					
ANR	3981171	Callee	CG		3980792	0					
ANR	3981172	Identifier	CG		3980792	0					
ANR	3981173	ArgumentList	one_char_string		3980792	1					
ANR	3981174	Argument	one_char_string		3980792	0					
ANR	3981175	Identifier	one_char_string		3980792	0					
ANR	3981176	Identifier	c		3980792	1					
ANR	3981177	ElseStatement	else		3980792	0					
ANR	3981178	CompoundStatement		65:10:1712:1712	3980792	0					
ANR	3981179	ExpressionStatement	"ZVAL_NEW_STR ( result , zend_string_init ( Z_STRVAL_P ( container ) + offset , 1 , 0 ) )"	1876:4:58047:58123	3980792	0	True				
ANR	3981180	CallExpression	"ZVAL_NEW_STR ( result , zend_string_init ( Z_STRVAL_P ( container ) + offset , 1 , 0 ) )"		3980792	0					
ANR	3981181	Callee	ZVAL_NEW_STR		3980792	0					
ANR	3981182	Identifier	ZVAL_NEW_STR		3980792	0					
ANR	3981183	ArgumentList	result		3980792	1					
ANR	3981184	Argument	result		3980792	0					
ANR	3981185	Identifier	result		3980792	0					
ANR	3981186	Argument	"zend_string_init ( Z_STRVAL_P ( container ) + offset , 1 , 0 )"		3980792	1					
ANR	3981187	CallExpression	"zend_string_init ( Z_STRVAL_P ( container ) + offset , 1 , 0 )"		3980792	0					
ANR	3981188	Callee	zend_string_init		3980792	0					
ANR	3981189	Identifier	zend_string_init		3980792	0					
ANR	3981190	ArgumentList	Z_STRVAL_P ( container ) + offset		3980792	1					
ANR	3981191	Argument	Z_STRVAL_P ( container ) + offset		3980792	0					
ANR	3981192	AdditiveExpression	Z_STRVAL_P ( container ) + offset		3980792	0		+			
ANR	3981193	CallExpression	Z_STRVAL_P ( container )		3980792	0					
ANR	3981194	Callee	Z_STRVAL_P		3980792	0					
ANR	3981195	Identifier	Z_STRVAL_P		3980792	0					
ANR	3981196	ArgumentList	container		3980792	1					
ANR	3981197	Argument	container		3980792	0					
ANR	3981198	Identifier	container		3980792	0					
ANR	3981199	Identifier	offset		3980792	1					
ANR	3981200	Argument	1		3980792	1					
ANR	3981201	PrimaryExpression	1		3980792	0					
ANR	3981202	Argument	0		3980792	2					
ANR	3981203	PrimaryExpression	0		3980792	0					
ANR	3981204	ElseStatement	else		3980792	0					
ANR	3981205	IfStatement	if ( EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		3980792	0					
ANR	3981206	Condition	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	1879:12:58146:58187	3980792	0	True				
ANR	3981207	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		3980792	0					
ANR	3981208	Callee	EXPECTED		3980792	0					
ANR	3981209	Identifier	EXPECTED		3980792	0					
ANR	3981210	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		3980792	1					
ANR	3981211	Argument	Z_TYPE_P ( container ) == IS_OBJECT		3980792	0					
ANR	3981212	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		3980792	0		==			
ANR	3981213	CallExpression	Z_TYPE_P ( container )		3980792	0					
ANR	3981214	Callee	Z_TYPE_P		3980792	0					
ANR	3981215	Identifier	Z_TYPE_P		3980792	0					
ANR	3981216	ArgumentList	container		3980792	1					
ANR	3981217	Argument	container		3980792	0					
ANR	3981218	Identifier	container		3980792	0					
ANR	3981219	Identifier	IS_OBJECT		3980792	1					
ANR	3981220	CompoundStatement		69:56:1861:1861	3980792	1					
ANR	3981221	IfStatement	if ( ! Z_OBJ_HT_P ( container ) -> read_dimension )		3980792	0					
ANR	3981222	Condition	! Z_OBJ_HT_P ( container ) -> read_dimension	1880:6:58198:58235	3980792	0	True				
ANR	3981223	UnaryOperationExpression	! Z_OBJ_HT_P ( container ) -> read_dimension		3980792	0					
ANR	3981224	UnaryOperator	!		3980792	0					
ANR	3981225	PtrMemberAccess	Z_OBJ_HT_P ( container ) -> read_dimension		3980792	1					
ANR	3981226	CallExpression	Z_OBJ_HT_P ( container )		3980792	0					
ANR	3981227	Callee	Z_OBJ_HT_P		3980792	0					
ANR	3981228	Identifier	Z_OBJ_HT_P		3980792	0					
ANR	3981229	ArgumentList	container		3980792	1					
ANR	3981230	Argument	container		3980792	0					
ANR	3981231	Identifier	container		3980792	0					
ANR	3981232	Identifier	read_dimension		3980792	1					
ANR	3981233	CompoundStatement		70:46:1909:1909	3980792	1					
ANR	3981234	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot use object as array"" )"	1881:3:58243:58295	3980792	0	True				
ANR	3981235	CallExpression	"zend_throw_error ( NULL , ""Cannot use object as array"" )"		3980792	0					
ANR	3981236	Callee	zend_throw_error		3980792	0					
ANR	3981237	Identifier	zend_throw_error		3980792	0					
ANR	3981238	ArgumentList	NULL		3980792	1					
ANR	3981239	Argument	NULL		3980792	0					
ANR	3981240	Identifier	NULL		3980792	0					
ANR	3981241	Argument	"""Cannot use object as array"""		3980792	1					
ANR	3981242	PrimaryExpression	"""Cannot use object as array"""		3980792	0					
ANR	3981243	ExpressionStatement	ZVAL_NULL ( result )	1882:3:58300:58317	3980792	1	True				
ANR	3981244	CallExpression	ZVAL_NULL ( result )		3980792	0					
ANR	3981245	Callee	ZVAL_NULL		3980792	0					
ANR	3981246	Identifier	ZVAL_NULL		3980792	0					
ANR	3981247	ArgumentList	result		3980792	1					
ANR	3981248	Argument	result		3980792	0					
ANR	3981249	Identifier	result		3980792	0					
ANR	3981250	ElseStatement	else		3980792	0					
ANR	3981251	CompoundStatement		73:9:1999:1999	3980792	0					
ANR	3981252	ExpressionStatement	"retval = Z_OBJ_HT_P ( container ) -> read_dimension ( container , dim , type , result )"	1884:3:58333:58409	3980792	0	True				
ANR	3981253	AssignmentExpression	"retval = Z_OBJ_HT_P ( container ) -> read_dimension ( container , dim , type , result )"		3980792	0		=			
ANR	3981254	Identifier	retval		3980792	0					
ANR	3981255	CallExpression	"Z_OBJ_HT_P ( container ) -> read_dimension ( container , dim , type , result )"		3980792	1					
ANR	3981256	Callee	Z_OBJ_HT_P ( container ) -> read_dimension		3980792	0					
ANR	3981257	PtrMemberAccess	Z_OBJ_HT_P ( container ) -> read_dimension		3980792	0					
ANR	3981258	CallExpression	Z_OBJ_HT_P ( container )		3980792	0					
ANR	3981259	Callee	Z_OBJ_HT_P		3980792	0					
ANR	3981260	Identifier	Z_OBJ_HT_P		3980792	0					
ANR	3981261	ArgumentList	container		3980792	1					
ANR	3981262	Argument	container		3980792	0					
ANR	3981263	Identifier	container		3980792	0					
ANR	3981264	Identifier	read_dimension		3980792	1					
ANR	3981265	ArgumentList	container		3980792	1					
ANR	3981266	Argument	container		3980792	0					
ANR	3981267	Identifier	container		3980792	0					
ANR	3981268	Argument	dim		3980792	1					
ANR	3981269	Identifier	dim		3980792	0					
ANR	3981270	Argument	type		3980792	2					
ANR	3981271	Identifier	type		3980792	0					
ANR	3981272	Argument	result		3980792	3					
ANR	3981273	Identifier	result		3980792	0					
ANR	3981274	ExpressionStatement	ZEND_ASSERT ( result != NULL )	1886:3:58415:58442	3980792	1	True				
ANR	3981275	CallExpression	ZEND_ASSERT ( result != NULL )		3980792	0					
ANR	3981276	Callee	ZEND_ASSERT		3980792	0					
ANR	3981277	Identifier	ZEND_ASSERT		3980792	0					
ANR	3981278	ArgumentList	result != NULL		3980792	1					
ANR	3981279	Argument	result != NULL		3980792	0					
ANR	3981280	EqualityExpression	result != NULL		3980792	0		!=			
ANR	3981281	Identifier	result		3980792	0					
ANR	3981282	Identifier	NULL		3980792	1					
ANR	3981283	IfStatement	if ( retval )		3980792	2					
ANR	3981284	Condition	retval	1887:7:58451:58456	3980792	0	True				
ANR	3981285	Identifier	retval		3980792	0					
ANR	3981286	CompoundStatement		77:15:2130:2130	3980792	1					
ANR	3981287	IfStatement	if ( result != retval )		3980792	0					
ANR	3981288	Condition	result != retval	1888:8:58469:58484	3980792	0	True				
ANR	3981289	EqualityExpression	result != retval		3980792	0		!=			
ANR	3981290	Identifier	result		3980792	0					
ANR	3981291	Identifier	retval		3980792	1					
ANR	3981292	CompoundStatement		78:26:2158:2158	3980792	1					
ANR	3981293	ExpressionStatement	"ZVAL_COPY ( result , retval )"	1889:5:58494:58519	3980792	0	True				
ANR	3981294	CallExpression	"ZVAL_COPY ( result , retval )"		3980792	0					
ANR	3981295	Callee	ZVAL_COPY		3980792	0					
ANR	3981296	Identifier	ZVAL_COPY		3980792	0					
ANR	3981297	ArgumentList	result		3980792	1					
ANR	3981298	Argument	result		3980792	0					
ANR	3981299	Identifier	result		3980792	0					
ANR	3981300	Argument	retval		3980792	1					
ANR	3981301	Identifier	retval		3980792	0					
ANR	3981302	ElseStatement	else		3980792	0					
ANR	3981303	CompoundStatement		81:10:2208:2208	3980792	0					
ANR	3981304	ExpressionStatement	ZVAL_NULL ( result )	1892:4:58543:58560	3980792	0	True				
ANR	3981305	CallExpression	ZVAL_NULL ( result )		3980792	0					
ANR	3981306	Callee	ZVAL_NULL		3980792	0					
ANR	3981307	Identifier	ZVAL_NULL		3980792	0					
ANR	3981308	ArgumentList	result		3980792	1					
ANR	3981309	Argument	result		3980792	0					
ANR	3981310	Identifier	result		3980792	0					
ANR	3981311	ElseStatement	else		3980792	0					
ANR	3981312	CompoundStatement		85:8:2250:2250	3980792	0					
ANR	3981313	ExpressionStatement	ZVAL_NULL ( result )	1896:2:58583:58600	3980792	0	True				
ANR	3981314	CallExpression	ZVAL_NULL ( result )		3980792	0					
ANR	3981315	Callee	ZVAL_NULL		3980792	0					
ANR	3981316	Identifier	ZVAL_NULL		3980792	0					
ANR	3981317	ArgumentList	result		3980792	1					
ANR	3981318	Argument	result		3980792	0					
ANR	3981319	Identifier	result		3980792	0					
ANR	3981320	ReturnType	static zend_always_inline void		3980792	1					
ANR	3981321	Identifier	zend_fetch_dimension_address_read		3980792	2					
ANR	3981322	ParameterList	"zval * result , zval * container , zval * dim , int dim_type , int type"		3980792	3					
ANR	3981323	Parameter	zval * result	1810:65:56262:56273	3980792	0	True				
ANR	3981324	ParameterType	zval *		3980792	0					
ANR	3981325	Identifier	result		3980792	1					
ANR	3981326	Parameter	zval * container	1810:79:56276:56290	3980792	1	True				
ANR	3981327	ParameterType	zval *		3980792	0					
ANR	3981328	Identifier	container		3980792	1					
ANR	3981329	Parameter	zval * dim	1810:96:56293:56301	3980792	2	True				
ANR	3981330	ParameterType	zval *		3980792	0					
ANR	3981331	Identifier	dim		3980792	1					
ANR	3981332	Parameter	int dim_type	1810:107:56304:56315	3980792	3	True				
ANR	3981333	ParameterType	int		3980792	0					
ANR	3981334	Identifier	dim_type		3980792	1					
ANR	3981335	Parameter	int type	1810:121:56318:56325	3980792	4	True				
ANR	3981336	ParameterType	int		3980792	0					
ANR	3981337	Identifier	type		3980792	1					
ANR	3981338	CFGEntryNode	ENTRY		3980792		True				
ANR	3981339	CFGExitNode	EXIT		3980792		True				
ANR	3981340	Symbol	container		3980792						
ANR	3981341	Symbol	dim_type		3980792						
ANR	3981342	Symbol	Z_OBJ_HT_P ( container ) -> read_dimension		3980792						
ANR	3981343	Symbol	dim		3980792						
ANR	3981344	Symbol	* CG		3980792						
ANR	3981345	Symbol	type		3980792						
ANR	3981346	Symbol	one_char_string		3980792						
ANR	3981347	Symbol	result		3980792						
ANR	3981348	Symbol	UNEXPECTED		3980792						
ANR	3981349	Symbol	E_WARNING		3980792						
ANR	3981350	Symbol	zend_string_init		3980792						
ANR	3981351	Symbol	IS_REFERENCE		3980792						
ANR	3981352	Symbol	IS_ARRAY		3980792						
ANR	3981353	Symbol	IS_LONG		3980792						
ANR	3981354	Symbol	Z_STRLEN_P		3980792						
ANR	3981355	Symbol	IS_STRING		3980792						
ANR	3981356	Symbol	* Z_STRVAL_P		3980792						
ANR	3981357	Symbol	Z_ARRVAL_P		3980792						
ANR	3981358	Symbol	BP_VAR_IS		3980792						
ANR	3981359	Symbol	NULL		3980792						
ANR	3981360	Symbol	c		3980792						
ANR	3981361	Symbol	offset		3980792						
ANR	3981362	Symbol	CG		3980792						
ANR	3981363	Symbol	E_NOTICE		3980792						
ANR	3981364	Symbol	Z_TYPE_P		3980792						
ANR	3981365	Symbol	Z_STRVAL_P		3980792						
ANR	3981366	Symbol	* c		3980792						
ANR	3981367	Symbol	* Z_OBJ_HT_P		3980792						
ANR	3981368	Symbol	retval		3980792						
ANR	3981369	Symbol	Z_LVAL_P		3980792						
ANR	3981370	Symbol	is_numeric_string		3980792						
ANR	3981371	Symbol	Z_REFVAL_P		3980792						
ANR	3981372	Symbol	zval_get_long		3980792						
ANR	3981373	Symbol	zend_fetch_dimension_address_inner		3980792						
ANR	3981374	Symbol	Z_OBJ_HT_P		3980792						
ANR	3981375	Symbol	* offset		3980792						
ANR	3981376	Symbol	IS_OBJECT		3980792						
ANR	3981377	Symbol	EXPECTED		3980792						
ANR	3981378	Function	zend_fetch_dimension_address_read_R	1900:0:58608:58812							
ANR	3981379	FunctionDef	"zend_fetch_dimension_address_read_R (zval * result , zval * container , zval * dim , int dim_type)"		3981378	0					
ANR	3981380	CompoundStatement		1901:0:58730:58812	3981378	0					
ANR	3981381	ExpressionStatement	"zend_fetch_dimension_address_read ( result , container , dim , dim_type , BP_VAR_R )"	1902:1:58733:58810	3981378	0	True				
ANR	3981382	CallExpression	"zend_fetch_dimension_address_read ( result , container , dim , dim_type , BP_VAR_R )"		3981378	0					
ANR	3981383	Callee	zend_fetch_dimension_address_read		3981378	0					
ANR	3981384	Identifier	zend_fetch_dimension_address_read		3981378	0					
ANR	3981385	ArgumentList	result		3981378	1					
ANR	3981386	Argument	result		3981378	0					
ANR	3981387	Identifier	result		3981378	0					
ANR	3981388	Argument	container		3981378	1					
ANR	3981389	Identifier	container		3981378	0					
ANR	3981390	Argument	dim		3981378	2					
ANR	3981391	Identifier	dim		3981378	0					
ANR	3981392	Argument	dim_type		3981378	3					
ANR	3981393	Identifier	dim_type		3981378	0					
ANR	3981394	Argument	BP_VAR_R		3981378	4					
ANR	3981395	Identifier	BP_VAR_R		3981378	0					
ANR	3981396	ReturnType	static zend_never_inline void		3981378	1					
ANR	3981397	Identifier	zend_fetch_dimension_address_read_R		3981378	2					
ANR	3981398	ParameterList	"zval * result , zval * container , zval * dim , int dim_type"		3981378	3					
ANR	3981399	Parameter	zval * result	1900:66:58674:58685	3981378	0	True				
ANR	3981400	ParameterType	zval *		3981378	0					
ANR	3981401	Identifier	result		3981378	1					
ANR	3981402	Parameter	zval * container	1900:80:58688:58702	3981378	1	True				
ANR	3981403	ParameterType	zval *		3981378	0					
ANR	3981404	Identifier	container		3981378	1					
ANR	3981405	Parameter	zval * dim	1900:97:58705:58713	3981378	2	True				
ANR	3981406	ParameterType	zval *		3981378	0					
ANR	3981407	Identifier	dim		3981378	1					
ANR	3981408	Parameter	int dim_type	1900:108:58716:58727	3981378	3	True				
ANR	3981409	ParameterType	int		3981378	0					
ANR	3981410	Identifier	dim_type		3981378	1					
ANR	3981411	CFGEntryNode	ENTRY		3981378		True				
ANR	3981412	CFGExitNode	EXIT		3981378		True				
ANR	3981413	Symbol	result		3981378						
ANR	3981414	Symbol	container		3981378						
ANR	3981415	Symbol	dim_type		3981378						
ANR	3981416	Symbol	dim		3981378						
ANR	3981417	Symbol	BP_VAR_R		3981378						
ANR	3981418	Function	zend_fetch_dimension_address_read_IS	1905:0:58815:59021							
ANR	3981419	FunctionDef	"zend_fetch_dimension_address_read_IS (zval * result , zval * container , zval * dim , int dim_type)"		3981418	0					
ANR	3981420	CompoundStatement		1906:0:58938:59021	3981418	0					
ANR	3981421	ExpressionStatement	"zend_fetch_dimension_address_read ( result , container , dim , dim_type , BP_VAR_IS )"	1907:1:58941:59019	3981418	0	True				
ANR	3981422	CallExpression	"zend_fetch_dimension_address_read ( result , container , dim , dim_type , BP_VAR_IS )"		3981418	0					
ANR	3981423	Callee	zend_fetch_dimension_address_read		3981418	0					
ANR	3981424	Identifier	zend_fetch_dimension_address_read		3981418	0					
ANR	3981425	ArgumentList	result		3981418	1					
ANR	3981426	Argument	result		3981418	0					
ANR	3981427	Identifier	result		3981418	0					
ANR	3981428	Argument	container		3981418	1					
ANR	3981429	Identifier	container		3981418	0					
ANR	3981430	Argument	dim		3981418	2					
ANR	3981431	Identifier	dim		3981418	0					
ANR	3981432	Argument	dim_type		3981418	3					
ANR	3981433	Identifier	dim_type		3981418	0					
ANR	3981434	Argument	BP_VAR_IS		3981418	4					
ANR	3981435	Identifier	BP_VAR_IS		3981418	0					
ANR	3981436	ReturnType	static zend_never_inline void		3981418	1					
ANR	3981437	Identifier	zend_fetch_dimension_address_read_IS		3981418	2					
ANR	3981438	ParameterList	"zval * result , zval * container , zval * dim , int dim_type"		3981418	3					
ANR	3981439	Parameter	zval * result	1905:67:58882:58893	3981418	0	True				
ANR	3981440	ParameterType	zval *		3981418	0					
ANR	3981441	Identifier	result		3981418	1					
ANR	3981442	Parameter	zval * container	1905:81:58896:58910	3981418	1	True				
ANR	3981443	ParameterType	zval *		3981418	0					
ANR	3981444	Identifier	container		3981418	1					
ANR	3981445	Parameter	zval * dim	1905:98:58913:58921	3981418	2	True				
ANR	3981446	ParameterType	zval *		3981418	0					
ANR	3981447	Identifier	dim		3981418	1					
ANR	3981448	Parameter	int dim_type	1905:109:58924:58935	3981418	3	True				
ANR	3981449	ParameterType	int		3981418	0					
ANR	3981450	Identifier	dim_type		3981418	1					
ANR	3981451	CFGEntryNode	ENTRY		3981418		True				
ANR	3981452	CFGExitNode	EXIT		3981418		True				
ANR	3981453	Symbol	result		3981418						
ANR	3981454	Symbol	container		3981418						
ANR	3981455	Symbol	dim_type		3981418						
ANR	3981456	Symbol	dim		3981418						
ANR	3981457	Symbol	BP_VAR_IS		3981418						
ANR	3981458	Function	zend_fetch_dimension_by_zval	1910:0:59024:59185							
ANR	3981459	FunctionDef	"zend_fetch_dimension_by_zval (zval * result , zval * container , zval * dim)"		3981458	0					
ANR	3981460	CompoundStatement		1911:0:59109:59185	3981458	0					
ANR	3981461	ExpressionStatement	"zend_fetch_dimension_address_read_R ( result , container , dim , IS_TMP_VAR )"	1912:1:59112:59183	3981458	0	True				
ANR	3981462	CallExpression	"zend_fetch_dimension_address_read_R ( result , container , dim , IS_TMP_VAR )"		3981458	0					
ANR	3981463	Callee	zend_fetch_dimension_address_read_R		3981458	0					
ANR	3981464	Identifier	zend_fetch_dimension_address_read_R		3981458	0					
ANR	3981465	ArgumentList	result		3981458	1					
ANR	3981466	Argument	result		3981458	0					
ANR	3981467	Identifier	result		3981458	0					
ANR	3981468	Argument	container		3981458	1					
ANR	3981469	Identifier	container		3981458	0					
ANR	3981470	Argument	dim		3981458	2					
ANR	3981471	Identifier	dim		3981458	0					
ANR	3981472	Argument	IS_TMP_VAR		3981458	3					
ANR	3981473	Identifier	IS_TMP_VAR		3981458	0					
ANR	3981474	ReturnType	ZEND_API void		3981458	1					
ANR	3981475	Identifier	zend_fetch_dimension_by_zval		3981458	2					
ANR	3981476	ParameterList	"zval * result , zval * container , zval * dim"		3981458	3					
ANR	3981477	Parameter	zval * result	1910:43:59067:59078	3981458	0	True				
ANR	3981478	ParameterType	zval *		3981458	0					
ANR	3981479	Identifier	result		3981458	1					
ANR	3981480	Parameter	zval * container	1910:57:59081:59095	3981458	1	True				
ANR	3981481	ParameterType	zval *		3981458	0					
ANR	3981482	Identifier	container		3981458	1					
ANR	3981483	Parameter	zval * dim	1910:74:59098:59106	3981458	2	True				
ANR	3981484	ParameterType	zval *		3981458	0					
ANR	3981485	Identifier	dim		3981458	1					
ANR	3981486	CFGEntryNode	ENTRY		3981458		True				
ANR	3981487	CFGExitNode	EXIT		3981458		True				
ANR	3981488	Symbol	result		3981458						
ANR	3981489	Symbol	container		3981458						
ANR	3981490	Symbol	dim		3981458						
ANR	3981491	Symbol	IS_TMP_VAR		3981458						
ANR	3981492	Function	zend_fetch_property_address	1915:0:59188:62232							
ANR	3981493	FunctionDef	"zend_fetch_property_address (zval * result , zval * container , uint32_t container_op_type , zval * prop_ptr , uint32_t prop_op_type , void * * cache_slot , int type)"		3981492	0					
ANR	3981494	CompoundStatement		1916:0:59374:62232	3981492	0					
ANR	3981495	IfStatement	if ( container_op_type != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( container ) != IS_OBJECT ) )		3981492	0					
ANR	3981496	Condition	container_op_type != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( container ) != IS_OBJECT )	1917:8:59384:59461	3981492	0	True				
ANR	3981497	AndExpression	container_op_type != IS_UNUSED && UNEXPECTED ( Z_TYPE_P ( container ) != IS_OBJECT )		3981492	0		&&			
ANR	3981498	EqualityExpression	container_op_type != IS_UNUSED		3981492	0		!=			
ANR	3981499	Identifier	container_op_type		3981492	0					
ANR	3981500	Identifier	IS_UNUSED		3981492	1					
ANR	3981501	CallExpression	UNEXPECTED ( Z_TYPE_P ( container ) != IS_OBJECT )		3981492	1					
ANR	3981502	Callee	UNEXPECTED		3981492	0					
ANR	3981503	Identifier	UNEXPECTED		3981492	0					
ANR	3981504	ArgumentList	Z_TYPE_P ( container ) != IS_OBJECT		3981492	1					
ANR	3981505	Argument	Z_TYPE_P ( container ) != IS_OBJECT		3981492	0					
ANR	3981506	EqualityExpression	Z_TYPE_P ( container ) != IS_OBJECT		3981492	0		!=			
ANR	3981507	CallExpression	Z_TYPE_P ( container )		3981492	0					
ANR	3981508	Callee	Z_TYPE_P		3981492	0					
ANR	3981509	Identifier	Z_TYPE_P		3981492	0					
ANR	3981510	ArgumentList	container		3981492	1					
ANR	3981511	Argument	container		3981492	0					
ANR	3981512	Identifier	container		3981492	0					
ANR	3981513	Identifier	IS_OBJECT		3981492	1					
ANR	3981514	CompoundStatement		2:88:89:89	3981492	1					
ANR	3981515	DoStatement	do		3981492	0					
ANR	3981516	CompoundStatement		3:5:96:96	3981492	0					
ANR	3981517	IfStatement	if ( container_op_type == IS_VAR && UNEXPECTED ( container == & EG ( error_zval ) ) )		3981492	0					
ANR	3981518	Condition	container_op_type == IS_VAR && UNEXPECTED ( container == & EG ( error_zval ) )	1919:7:59480:59550	3981492	0	True				
ANR	3981519	AndExpression	container_op_type == IS_VAR && UNEXPECTED ( container == & EG ( error_zval ) )		3981492	0		&&			
ANR	3981520	EqualityExpression	container_op_type == IS_VAR		3981492	0		==			
ANR	3981521	Identifier	container_op_type		3981492	0					
ANR	3981522	Identifier	IS_VAR		3981492	1					
ANR	3981523	CallExpression	UNEXPECTED ( container == & EG ( error_zval ) )		3981492	1					
ANR	3981524	Callee	UNEXPECTED		3981492	0					
ANR	3981525	Identifier	UNEXPECTED		3981492	0					
ANR	3981526	ArgumentList	container == & EG ( error_zval )		3981492	1					
ANR	3981527	Argument	container == & EG ( error_zval )		3981492	0					
ANR	3981528	EqualityExpression	container == & EG ( error_zval )		3981492	0		==			
ANR	3981529	Identifier	container		3981492	0					
ANR	3981530	UnaryOperationExpression	& EG ( error_zval )		3981492	1					
ANR	3981531	UnaryOperator	&		3981492	0					
ANR	3981532	CallExpression	EG ( error_zval )		3981492	1					
ANR	3981533	Callee	EG		3981492	0					
ANR	3981534	Identifier	EG		3981492	0					
ANR	3981535	ArgumentList	error_zval		3981492	1					
ANR	3981536	Argument	error_zval		3981492	0					
ANR	3981537	Identifier	error_zval		3981492	0					
ANR	3981538	CompoundStatement		4:80:178:178	3981492	1					
ANR	3981539	ExpressionStatement	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"	1920:4:59559:59597	3981492	0	True				
ANR	3981540	CallExpression	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"		3981492	0					
ANR	3981541	Callee	ZVAL_INDIRECT		3981492	0					
ANR	3981542	Identifier	ZVAL_INDIRECT		3981492	0					
ANR	3981543	ArgumentList	result		3981492	1					
ANR	3981544	Argument	result		3981492	0					
ANR	3981545	Identifier	result		3981492	0					
ANR	3981546	Argument	& EG ( error_zval )		3981492	1					
ANR	3981547	UnaryOperationExpression	& EG ( error_zval )		3981492	0					
ANR	3981548	UnaryOperator	&		3981492	0					
ANR	3981549	CallExpression	EG ( error_zval )		3981492	1					
ANR	3981550	Callee	EG		3981492	0					
ANR	3981551	Identifier	EG		3981492	0					
ANR	3981552	ArgumentList	error_zval		3981492	1					
ANR	3981553	Argument	error_zval		3981492	0					
ANR	3981554	Identifier	error_zval		3981492	0					
ANR	3981555	ReturnStatement	return ;	1921:4:59603:59609	3981492	1	True				
ANR	3981556	IfStatement	if ( Z_ISREF_P ( container ) )		3981492	1					
ANR	3981557	Condition	Z_ISREF_P ( container )	1924:7:59624:59643	3981492	0	True				
ANR	3981558	CallExpression	Z_ISREF_P ( container )		3981492	0					
ANR	3981559	Callee	Z_ISREF_P		3981492	0					
ANR	3981560	Identifier	Z_ISREF_P		3981492	0					
ANR	3981561	ArgumentList	container		3981492	1					
ANR	3981562	Argument	container		3981492	0					
ANR	3981563	Identifier	container		3981492	0					
ANR	3981564	CompoundStatement		9:29:271:271	3981492	1					
ANR	3981565	ExpressionStatement	container = Z_REFVAL_P ( container )	1925:4:59652:59685	3981492	0	True				
ANR	3981566	AssignmentExpression	container = Z_REFVAL_P ( container )		3981492	0		=			
ANR	3981567	Identifier	container		3981492	0					
ANR	3981568	CallExpression	Z_REFVAL_P ( container )		3981492	1					
ANR	3981569	Callee	Z_REFVAL_P		3981492	0					
ANR	3981570	Identifier	Z_REFVAL_P		3981492	0					
ANR	3981571	ArgumentList	container		3981492	1					
ANR	3981572	Argument	container		3981492	0					
ANR	3981573	Identifier	container		3981492	0					
ANR	3981574	IfStatement	if ( EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT ) )		3981492	1					
ANR	3981575	Condition	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )	1926:8:59695:59736	3981492	0	True				
ANR	3981576	CallExpression	EXPECTED ( Z_TYPE_P ( container ) == IS_OBJECT )		3981492	0					
ANR	3981577	Callee	EXPECTED		3981492	0					
ANR	3981578	Identifier	EXPECTED		3981492	0					
ANR	3981579	ArgumentList	Z_TYPE_P ( container ) == IS_OBJECT		3981492	1					
ANR	3981580	Argument	Z_TYPE_P ( container ) == IS_OBJECT		3981492	0					
ANR	3981581	EqualityExpression	Z_TYPE_P ( container ) == IS_OBJECT		3981492	0		==			
ANR	3981582	CallExpression	Z_TYPE_P ( container )		3981492	0					
ANR	3981583	Callee	Z_TYPE_P		3981492	0					
ANR	3981584	Identifier	Z_TYPE_P		3981492	0					
ANR	3981585	ArgumentList	container		3981492	1					
ANR	3981586	Argument	container		3981492	0					
ANR	3981587	Identifier	container		3981492	0					
ANR	3981588	Identifier	IS_OBJECT		3981492	1					
ANR	3981589	CompoundStatement		11:52:364:364	3981492	1					
ANR	3981590	BreakStatement	break ;	1927:5:59746:59751	3981492	0	True				
ANR	3981591	IfStatement	if ( type != BP_VAR_UNSET && EXPECTED ( Z_TYPE_P ( container ) <= IS_FALSE || ( Z_TYPE_P ( container ) == IS_STRING && Z_STRLEN_P ( container ) == 0 ) ) )		3981492	2					
ANR	3981592	Condition	type != BP_VAR_UNSET && EXPECTED ( Z_TYPE_P ( container ) <= IS_FALSE || ( Z_TYPE_P ( container ) == IS_STRING && Z_STRLEN_P ( container ) == 0 ) )	1932:7:59826:59972	3981492	0	True				
ANR	3981593	AndExpression	type != BP_VAR_UNSET && EXPECTED ( Z_TYPE_P ( container ) <= IS_FALSE || ( Z_TYPE_P ( container ) == IS_STRING && Z_STRLEN_P ( container ) == 0 ) )		3981492	0		&&			
ANR	3981594	EqualityExpression	type != BP_VAR_UNSET		3981492	0		!=			
ANR	3981595	Identifier	type		3981492	0					
ANR	3981596	Identifier	BP_VAR_UNSET		3981492	1					
ANR	3981597	CallExpression	EXPECTED ( Z_TYPE_P ( container ) <= IS_FALSE || ( Z_TYPE_P ( container ) == IS_STRING && Z_STRLEN_P ( container ) == 0 ) )		3981492	1					
ANR	3981598	Callee	EXPECTED		3981492	0					
ANR	3981599	Identifier	EXPECTED		3981492	0					
ANR	3981600	ArgumentList	Z_TYPE_P ( container ) <= IS_FALSE || ( Z_TYPE_P ( container ) == IS_STRING && Z_STRLEN_P ( container ) == 0 )		3981492	1					
ANR	3981601	Argument	Z_TYPE_P ( container ) <= IS_FALSE || ( Z_TYPE_P ( container ) == IS_STRING && Z_STRLEN_P ( container ) == 0 )		3981492	0					
ANR	3981602	OrExpression	Z_TYPE_P ( container ) <= IS_FALSE || ( Z_TYPE_P ( container ) == IS_STRING && Z_STRLEN_P ( container ) == 0 )		3981492	0		||			
ANR	3981603	RelationalExpression	Z_TYPE_P ( container ) <= IS_FALSE		3981492	0		<=			
ANR	3981604	CallExpression	Z_TYPE_P ( container )		3981492	0					
ANR	3981605	Callee	Z_TYPE_P		3981492	0					
ANR	3981606	Identifier	Z_TYPE_P		3981492	0					
ANR	3981607	ArgumentList	container		3981492	1					
ANR	3981608	Argument	container		3981492	0					
ANR	3981609	Identifier	container		3981492	0					
ANR	3981610	Identifier	IS_FALSE		3981492	1					
ANR	3981611	AndExpression	Z_TYPE_P ( container ) == IS_STRING && Z_STRLEN_P ( container ) == 0		3981492	1		&&			
ANR	3981612	EqualityExpression	Z_TYPE_P ( container ) == IS_STRING		3981492	0		==			
ANR	3981613	CallExpression	Z_TYPE_P ( container )		3981492	0					
ANR	3981614	Callee	Z_TYPE_P		3981492	0					
ANR	3981615	Identifier	Z_TYPE_P		3981492	0					
ANR	3981616	ArgumentList	container		3981492	1					
ANR	3981617	Argument	container		3981492	0					
ANR	3981618	Identifier	container		3981492	0					
ANR	3981619	Identifier	IS_STRING		3981492	1					
ANR	3981620	EqualityExpression	Z_STRLEN_P ( container ) == 0		3981492	1		==			
ANR	3981621	CallExpression	Z_STRLEN_P ( container )		3981492	0					
ANR	3981622	Callee	Z_STRLEN_P		3981492	0					
ANR	3981623	Identifier	Z_STRLEN_P		3981492	0					
ANR	3981624	ArgumentList	container		3981492	1					
ANR	3981625	Argument	container		3981492	0					
ANR	3981626	Identifier	container		3981492	0					
ANR	3981627	PrimaryExpression	0		3981492	1					
ANR	3981628	CompoundStatement		19:74:600:600	3981492	1					
ANR	3981629	ExpressionStatement	zval_ptr_dtor_nogc ( container )	1935:4:59981:60010	3981492	0	True				
ANR	3981630	CallExpression	zval_ptr_dtor_nogc ( container )		3981492	0					
ANR	3981631	Callee	zval_ptr_dtor_nogc		3981492	0					
ANR	3981632	Identifier	zval_ptr_dtor_nogc		3981492	0					
ANR	3981633	ArgumentList	container		3981492	1					
ANR	3981634	Argument	container		3981492	0					
ANR	3981635	Identifier	container		3981492	0					
ANR	3981636	ExpressionStatement	object_init ( container )	1936:4:60016:60038	3981492	1	True				
ANR	3981637	CallExpression	object_init ( container )		3981492	0					
ANR	3981638	Callee	object_init		3981492	0					
ANR	3981639	Identifier	object_init		3981492	0					
ANR	3981640	ArgumentList	container		3981492	1					
ANR	3981641	Argument	container		3981492	0					
ANR	3981642	Identifier	container		3981492	0					
ANR	3981643	ElseStatement	else		3981492	0					
ANR	3981644	CompoundStatement		22:10:675:675	3981492	0					
ANR	3981645	ExpressionStatement	"zend_error ( E_WARNING , ""Attempt to modify property of non-object"" )"	1938:4:60056:60121	3981492	0	True				
ANR	3981646	CallExpression	"zend_error ( E_WARNING , ""Attempt to modify property of non-object"" )"		3981492	0					
ANR	3981647	Callee	zend_error		3981492	0					
ANR	3981648	Identifier	zend_error		3981492	0					
ANR	3981649	ArgumentList	E_WARNING		3981492	1					
ANR	3981650	Argument	E_WARNING		3981492	0					
ANR	3981651	Identifier	E_WARNING		3981492	0					
ANR	3981652	Argument	"""Attempt to modify property of non-object"""		3981492	1					
ANR	3981653	PrimaryExpression	"""Attempt to modify property of non-object"""		3981492	0					
ANR	3981654	ExpressionStatement	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"	1939:4:60127:60165	3981492	1	True				
ANR	3981655	CallExpression	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"		3981492	0					
ANR	3981656	Callee	ZVAL_INDIRECT		3981492	0					
ANR	3981657	Identifier	ZVAL_INDIRECT		3981492	0					
ANR	3981658	ArgumentList	result		3981492	1					
ANR	3981659	Argument	result		3981492	0					
ANR	3981660	Identifier	result		3981492	0					
ANR	3981661	Argument	& EG ( error_zval )		3981492	1					
ANR	3981662	UnaryOperationExpression	& EG ( error_zval )		3981492	0					
ANR	3981663	UnaryOperator	&		3981492	0					
ANR	3981664	CallExpression	EG ( error_zval )		3981492	1					
ANR	3981665	Callee	EG		3981492	0					
ANR	3981666	Identifier	EG		3981492	0					
ANR	3981667	ArgumentList	error_zval		3981492	1					
ANR	3981668	Argument	error_zval		3981492	0					
ANR	3981669	Identifier	error_zval		3981492	0					
ANR	3981670	ReturnStatement	return ;	1940:4:60171:60177	3981492	2	True				
ANR	3981671	Condition	0	1942:11:60195:60195	3981492	1	True				
ANR	3981672	PrimaryExpression	0		3981492	0					
ANR	3981673	IfStatement	if ( prop_op_type == IS_CONST && EXPECTED ( Z_OBJCE_P ( container ) == CACHED_PTR_EX ( cache_slot ) ) )		3981492	1					
ANR	3981674	Condition	prop_op_type == IS_CONST && EXPECTED ( Z_OBJCE_P ( container ) == CACHED_PTR_EX ( cache_slot ) )	1944:5:60207:60298	3981492	0	True				
ANR	3981675	AndExpression	prop_op_type == IS_CONST && EXPECTED ( Z_OBJCE_P ( container ) == CACHED_PTR_EX ( cache_slot ) )		3981492	0		&&			
ANR	3981676	EqualityExpression	prop_op_type == IS_CONST		3981492	0		==			
ANR	3981677	Identifier	prop_op_type		3981492	0					
ANR	3981678	Identifier	IS_CONST		3981492	1					
ANR	3981679	CallExpression	EXPECTED ( Z_OBJCE_P ( container ) == CACHED_PTR_EX ( cache_slot ) )		3981492	1					
ANR	3981680	Callee	EXPECTED		3981492	0					
ANR	3981681	Identifier	EXPECTED		3981492	0					
ANR	3981682	ArgumentList	Z_OBJCE_P ( container ) == CACHED_PTR_EX ( cache_slot )		3981492	1					
ANR	3981683	Argument	Z_OBJCE_P ( container ) == CACHED_PTR_EX ( cache_slot )		3981492	0					
ANR	3981684	EqualityExpression	Z_OBJCE_P ( container ) == CACHED_PTR_EX ( cache_slot )		3981492	0		==			
ANR	3981685	CallExpression	Z_OBJCE_P ( container )		3981492	0					
ANR	3981686	Callee	Z_OBJCE_P		3981492	0					
ANR	3981687	Identifier	Z_OBJCE_P		3981492	0					
ANR	3981688	ArgumentList	container		3981492	1					
ANR	3981689	Argument	container		3981492	0					
ANR	3981690	Identifier	container		3981492	0					
ANR	3981691	CallExpression	CACHED_PTR_EX ( cache_slot )		3981492	1					
ANR	3981692	Callee	CACHED_PTR_EX		3981492	0					
ANR	3981693	Identifier	CACHED_PTR_EX		3981492	0					
ANR	3981694	ArgumentList	cache_slot		3981492	1					
ANR	3981695	Argument	cache_slot		3981492	0					
ANR	3981696	Identifier	cache_slot		3981492	0					
ANR	3981697	CompoundStatement		33:2:1048:1060	3981492	1					
ANR	3981698	IdentifierDeclStatement	uint32_t prop_offset = ( uint32_t ) ( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 ) ;	1946:2:60305:60377	3981492	0	True				
ANR	3981699	IdentifierDecl	prop_offset = ( uint32_t ) ( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 )		3981492	0					
ANR	3981700	IdentifierDeclType	uint32_t		3981492	0					
ANR	3981701	Identifier	prop_offset		3981492	1					
ANR	3981702	AssignmentExpression	prop_offset = ( uint32_t ) ( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 )		3981492	2		=			
ANR	3981703	Identifier	prop_offset		3981492	0					
ANR	3981704	CastExpression	( uint32_t ) ( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 )		3981492	1					
ANR	3981705	CastTarget	uint32_t		3981492	0					
ANR	3981706	CastExpression	( intptr_t ) CACHED_PTR_EX ( cache_slot + 1 )		3981492	1					
ANR	3981707	CastTarget	intptr_t		3981492	0					
ANR	3981708	CallExpression	CACHED_PTR_EX ( cache_slot + 1 )		3981492	1					
ANR	3981709	Callee	CACHED_PTR_EX		3981492	0					
ANR	3981710	Identifier	CACHED_PTR_EX		3981492	0					
ANR	3981711	ArgumentList	cache_slot + 1		3981492	1					
ANR	3981712	Argument	cache_slot + 1		3981492	0					
ANR	3981713	AdditiveExpression	cache_slot + 1		3981492	0		+			
ANR	3981714	Identifier	cache_slot		3981492	0					
ANR	3981715	PrimaryExpression	1		3981492	1					
ANR	3981716	IdentifierDeclStatement	zend_object * zobj = Z_OBJ_P ( container ) ;	1947:2:60381:60419	3981492	1	True				
ANR	3981717	IdentifierDecl	* zobj = Z_OBJ_P ( container )		3981492	0					
ANR	3981718	IdentifierDeclType	zend_object *		3981492	0					
ANR	3981719	Identifier	zobj		3981492	1					
ANR	3981720	AssignmentExpression	* zobj = Z_OBJ_P ( container )		3981492	2		=			
ANR	3981721	Identifier	zobj		3981492	0					
ANR	3981722	CallExpression	Z_OBJ_P ( container )		3981492	1					
ANR	3981723	Callee	Z_OBJ_P		3981492	0					
ANR	3981724	Identifier	Z_OBJ_P		3981492	0					
ANR	3981725	ArgumentList	container		3981492	1					
ANR	3981726	Argument	container		3981492	0					
ANR	3981727	Identifier	container		3981492	0					
ANR	3981728	IdentifierDeclStatement	zval * retval ;	1948:2:60423:60435	3981492	2	True				
ANR	3981729	IdentifierDecl	* retval		3981492	0					
ANR	3981730	IdentifierDeclType	zval *		3981492	0					
ANR	3981731	Identifier	retval		3981492	1					
ANR	3981732	IfStatement	if ( EXPECTED ( prop_offset != ( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET ) )		3981492	3					
ANR	3981733	Condition	EXPECTED ( prop_offset != ( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET )	1950:6:60444:60506	3981492	0	True				
ANR	3981734	CallExpression	EXPECTED ( prop_offset != ( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET )		3981492	0					
ANR	3981735	Callee	EXPECTED		3981492	0					
ANR	3981736	Identifier	EXPECTED		3981492	0					
ANR	3981737	ArgumentList	prop_offset != ( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET		3981492	1					
ANR	3981738	Argument	prop_offset != ( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET		3981492	0					
ANR	3981739	EqualityExpression	prop_offset != ( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET		3981492	0		!=			
ANR	3981740	Identifier	prop_offset		3981492	0					
ANR	3981741	CastExpression	( uint32_t ) ZEND_DYNAMIC_PROPERTY_OFFSET		3981492	1					
ANR	3981742	CastTarget	uint32_t		3981492	0					
ANR	3981743	Identifier	ZEND_DYNAMIC_PROPERTY_OFFSET		3981492	1					
ANR	3981744	CompoundStatement		35:71:1134:1134	3981492	1					
ANR	3981745	ExpressionStatement	"retval = OBJ_PROP ( zobj , prop_offset )"	1951:3:60514:60550	3981492	0	True				
ANR	3981746	AssignmentExpression	"retval = OBJ_PROP ( zobj , prop_offset )"		3981492	0		=			
ANR	3981747	Identifier	retval		3981492	0					
ANR	3981748	CallExpression	"OBJ_PROP ( zobj , prop_offset )"		3981492	1					
ANR	3981749	Callee	OBJ_PROP		3981492	0					
ANR	3981750	Identifier	OBJ_PROP		3981492	0					
ANR	3981751	ArgumentList	zobj		3981492	1					
ANR	3981752	Argument	zobj		3981492	0					
ANR	3981753	Identifier	zobj		3981492	0					
ANR	3981754	Argument	prop_offset		3981492	1					
ANR	3981755	Identifier	prop_offset		3981492	0					
ANR	3981756	IfStatement	if ( EXPECTED ( Z_TYPE_P ( retval ) != IS_UNDEF ) )		3981492	1					
ANR	3981757	Condition	EXPECTED ( Z_TYPE_P ( retval ) != IS_UNDEF )	1952:7:60559:60596	3981492	0	True				
ANR	3981758	CallExpression	EXPECTED ( Z_TYPE_P ( retval ) != IS_UNDEF )		3981492	0					
ANR	3981759	Callee	EXPECTED		3981492	0					
ANR	3981760	Identifier	EXPECTED		3981492	0					
ANR	3981761	ArgumentList	Z_TYPE_P ( retval ) != IS_UNDEF		3981492	1					
ANR	3981762	Argument	Z_TYPE_P ( retval ) != IS_UNDEF		3981492	0					
ANR	3981763	EqualityExpression	Z_TYPE_P ( retval ) != IS_UNDEF		3981492	0		!=			
ANR	3981764	CallExpression	Z_TYPE_P ( retval )		3981492	0					
ANR	3981765	Callee	Z_TYPE_P		3981492	0					
ANR	3981766	Identifier	Z_TYPE_P		3981492	0					
ANR	3981767	ArgumentList	retval		3981492	1					
ANR	3981768	Argument	retval		3981492	0					
ANR	3981769	Identifier	retval		3981492	0					
ANR	3981770	Identifier	IS_UNDEF		3981492	1					
ANR	3981771	CompoundStatement		37:47:1224:1224	3981492	1					
ANR	3981772	ExpressionStatement	"ZVAL_INDIRECT ( result , retval )"	1953:4:60605:60634	3981492	0	True				
ANR	3981773	CallExpression	"ZVAL_INDIRECT ( result , retval )"		3981492	0					
ANR	3981774	Callee	ZVAL_INDIRECT		3981492	0					
ANR	3981775	Identifier	ZVAL_INDIRECT		3981492	0					
ANR	3981776	ArgumentList	result		3981492	1					
ANR	3981777	Argument	result		3981492	0					
ANR	3981778	Identifier	result		3981492	0					
ANR	3981779	Argument	retval		3981492	1					
ANR	3981780	Identifier	retval		3981492	0					
ANR	3981781	ReturnStatement	return ;	1954:4:60640:60646	3981492	1	True				
ANR	3981782	ElseStatement	else		3981492	0					
ANR	3981783	IfStatement	if ( EXPECTED ( zobj -> properties != NULL ) )		3981492	0					
ANR	3981784	Condition	EXPECTED ( zobj -> properties != NULL )	1956:13:60666:60699	3981492	0	True				
ANR	3981785	CallExpression	EXPECTED ( zobj -> properties != NULL )		3981492	0					
ANR	3981786	Callee	EXPECTED		3981492	0					
ANR	3981787	Identifier	EXPECTED		3981492	0					
ANR	3981788	ArgumentList	zobj -> properties != NULL		3981492	1					
ANR	3981789	Argument	zobj -> properties != NULL		3981492	0					
ANR	3981790	EqualityExpression	zobj -> properties != NULL		3981492	0		!=			
ANR	3981791	PtrMemberAccess	zobj -> properties		3981492	0					
ANR	3981792	Identifier	zobj		3981492	0					
ANR	3981793	Identifier	properties		3981492	1					
ANR	3981794	Identifier	NULL		3981492	1					
ANR	3981795	CompoundStatement		41:49:1327:1327	3981492	1					
ANR	3981796	IfStatement	if ( UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 ) )		3981492	0					
ANR	3981797	Condition	UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 )	1957:7:60711:60755	3981492	0	True				
ANR	3981798	CallExpression	UNEXPECTED ( GC_REFCOUNT ( zobj -> properties ) > 1 )		3981492	0					
ANR	3981799	Callee	UNEXPECTED		3981492	0					
ANR	3981800	Identifier	UNEXPECTED		3981492	0					
ANR	3981801	ArgumentList	GC_REFCOUNT ( zobj -> properties ) > 1		3981492	1					
ANR	3981802	Argument	GC_REFCOUNT ( zobj -> properties ) > 1		3981492	0					
ANR	3981803	RelationalExpression	GC_REFCOUNT ( zobj -> properties ) > 1		3981492	0		>			
ANR	3981804	CallExpression	GC_REFCOUNT ( zobj -> properties )		3981492	0					
ANR	3981805	Callee	GC_REFCOUNT		3981492	0					
ANR	3981806	Identifier	GC_REFCOUNT		3981492	0					
ANR	3981807	ArgumentList	zobj -> properties		3981492	1					
ANR	3981808	Argument	zobj -> properties		3981492	0					
ANR	3981809	PtrMemberAccess	zobj -> properties		3981492	0					
ANR	3981810	Identifier	zobj		3981492	0					
ANR	3981811	Identifier	properties		3981492	1					
ANR	3981812	PrimaryExpression	1		3981492	1					
ANR	3981813	CompoundStatement		42:54:1383:1383	3981492	1					
ANR	3981814	IfStatement	if ( EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) ) )		3981492	0					
ANR	3981815	Condition	EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) )	1958:8:60768:60827	3981492	0	True				
ANR	3981816	CallExpression	EXPECTED ( ! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE ) )		3981492	0					
ANR	3981817	Callee	EXPECTED		3981492	0					
ANR	3981818	Identifier	EXPECTED		3981492	0					
ANR	3981819	ArgumentList	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		3981492	1					
ANR	3981820	Argument	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		3981492	0					
ANR	3981821	UnaryOperationExpression	! ( GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE )		3981492	0					
ANR	3981822	UnaryOperator	!		3981492	0					
ANR	3981823	BitAndExpression	GC_FLAGS ( zobj -> properties ) & IS_ARRAY_IMMUTABLE		3981492	1		&			
ANR	3981824	CallExpression	GC_FLAGS ( zobj -> properties )		3981492	0					
ANR	3981825	Callee	GC_FLAGS		3981492	0					
ANR	3981826	Identifier	GC_FLAGS		3981492	0					
ANR	3981827	ArgumentList	zobj -> properties		3981492	1					
ANR	3981828	Argument	zobj -> properties		3981492	0					
ANR	3981829	PtrMemberAccess	zobj -> properties		3981492	0					
ANR	3981830	Identifier	zobj		3981492	0					
ANR	3981831	Identifier	properties		3981492	1					
ANR	3981832	Identifier	IS_ARRAY_IMMUTABLE		3981492	1					
ANR	3981833	CompoundStatement		43:70:1455:1455	3981492	1					
ANR	3981834	ExpressionStatement	GC_REFCOUNT ( zobj -> properties ) --	1959:5:60837:60868	3981492	0	True				
ANR	3981835	PostIncDecOperationExpression	GC_REFCOUNT ( zobj -> properties ) --		3981492	0					
ANR	3981836	CallExpression	GC_REFCOUNT ( zobj -> properties )		3981492	0					
ANR	3981837	Callee	GC_REFCOUNT		3981492	0					
ANR	3981838	Identifier	GC_REFCOUNT		3981492	0					
ANR	3981839	ArgumentList	zobj -> properties		3981492	1					
ANR	3981840	Argument	zobj -> properties		3981492	0					
ANR	3981841	PtrMemberAccess	zobj -> properties		3981492	0					
ANR	3981842	Identifier	zobj		3981492	0					
ANR	3981843	Identifier	properties		3981492	1					
ANR	3981844	IncDec	--		3981492	1					
ANR	3981845	ExpressionStatement	zobj -> properties = zend_array_dup ( zobj -> properties )	1961:4:60880:60931	3981492	1	True				
ANR	3981846	AssignmentExpression	zobj -> properties = zend_array_dup ( zobj -> properties )		3981492	0		=			
ANR	3981847	PtrMemberAccess	zobj -> properties		3981492	0					
ANR	3981848	Identifier	zobj		3981492	0					
ANR	3981849	Identifier	properties		3981492	1					
ANR	3981850	CallExpression	zend_array_dup ( zobj -> properties )		3981492	1					
ANR	3981851	Callee	zend_array_dup		3981492	0					
ANR	3981852	Identifier	zend_array_dup		3981492	0					
ANR	3981853	ArgumentList	zobj -> properties		3981492	1					
ANR	3981854	Argument	zobj -> properties		3981492	0					
ANR	3981855	PtrMemberAccess	zobj -> properties		3981492	0					
ANR	3981856	Identifier	zobj		3981492	0					
ANR	3981857	Identifier	properties		3981492	1					
ANR	3981858	ExpressionStatement	"retval = zend_hash_find ( zobj -> properties , Z_STR_P ( prop_ptr ) )"	1963:3:60941:61001	3981492	1	True				
ANR	3981859	AssignmentExpression	"retval = zend_hash_find ( zobj -> properties , Z_STR_P ( prop_ptr ) )"		3981492	0		=			
ANR	3981860	Identifier	retval		3981492	0					
ANR	3981861	CallExpression	"zend_hash_find ( zobj -> properties , Z_STR_P ( prop_ptr ) )"		3981492	1					
ANR	3981862	Callee	zend_hash_find		3981492	0					
ANR	3981863	Identifier	zend_hash_find		3981492	0					
ANR	3981864	ArgumentList	zobj -> properties		3981492	1					
ANR	3981865	Argument	zobj -> properties		3981492	0					
ANR	3981866	PtrMemberAccess	zobj -> properties		3981492	0					
ANR	3981867	Identifier	zobj		3981492	0					
ANR	3981868	Identifier	properties		3981492	1					
ANR	3981869	Argument	Z_STR_P ( prop_ptr )		3981492	1					
ANR	3981870	CallExpression	Z_STR_P ( prop_ptr )		3981492	0					
ANR	3981871	Callee	Z_STR_P		3981492	0					
ANR	3981872	Identifier	Z_STR_P		3981492	0					
ANR	3981873	ArgumentList	prop_ptr		3981492	1					
ANR	3981874	Argument	prop_ptr		3981492	0					
ANR	3981875	Identifier	prop_ptr		3981492	0					
ANR	3981876	IfStatement	if ( EXPECTED ( retval ) )		3981492	2					
ANR	3981877	Condition	EXPECTED ( retval )	1964:7:61010:61025	3981492	0	True				
ANR	3981878	CallExpression	EXPECTED ( retval )		3981492	0					
ANR	3981879	Callee	EXPECTED		3981492	0					
ANR	3981880	Identifier	EXPECTED		3981492	0					
ANR	3981881	ArgumentList	retval		3981492	1					
ANR	3981882	Argument	retval		3981492	0					
ANR	3981883	Identifier	retval		3981492	0					
ANR	3981884	CompoundStatement		49:25:1653:1653	3981492	1					
ANR	3981885	ExpressionStatement	"ZVAL_INDIRECT ( result , retval )"	1965:4:61034:61063	3981492	0	True				
ANR	3981886	CallExpression	"ZVAL_INDIRECT ( result , retval )"		3981492	0					
ANR	3981887	Callee	ZVAL_INDIRECT		3981492	0					
ANR	3981888	Identifier	ZVAL_INDIRECT		3981492	0					
ANR	3981889	ArgumentList	result		3981492	1					
ANR	3981890	Argument	result		3981492	0					
ANR	3981891	Identifier	result		3981492	0					
ANR	3981892	Argument	retval		3981492	1					
ANR	3981893	Identifier	retval		3981492	0					
ANR	3981894	ReturnStatement	return ;	1966:4:61069:61075	3981492	1	True				
ANR	3981895	IfStatement	if ( EXPECTED ( Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr ) )		3981492	2					
ANR	3981896	Condition	EXPECTED ( Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr )	1970:5:61094:61146	3981492	0	True				
ANR	3981897	CallExpression	EXPECTED ( Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr )		3981492	0					
ANR	3981898	Callee	EXPECTED		3981492	0					
ANR	3981899	Identifier	EXPECTED		3981492	0					
ANR	3981900	ArgumentList	Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr		3981492	1					
ANR	3981901	Argument	Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr		3981492	0					
ANR	3981902	PtrMemberAccess	Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr		3981492	0					
ANR	3981903	CallExpression	Z_OBJ_HT_P ( container )		3981492	0					
ANR	3981904	Callee	Z_OBJ_HT_P		3981492	0					
ANR	3981905	Identifier	Z_OBJ_HT_P		3981492	0					
ANR	3981906	ArgumentList	container		3981492	1					
ANR	3981907	Argument	container		3981492	0					
ANR	3981908	Identifier	container		3981492	0					
ANR	3981909	Identifier	get_property_ptr_ptr		3981492	1					
ANR	3981910	CompoundStatement		56:2:1778:1872	3981492	1					
ANR	3981911	IdentifierDeclStatement	"zval * ptr = Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr ( container , prop_ptr , type , cache_slot ) ;"	1971:2:61153:61247	3981492	0	True				
ANR	3981912	IdentifierDecl	"* ptr = Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr ( container , prop_ptr , type , cache_slot )"		3981492	0					
ANR	3981913	IdentifierDeclType	zval *		3981492	0					
ANR	3981914	Identifier	ptr		3981492	1					
ANR	3981915	AssignmentExpression	"* ptr = Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr ( container , prop_ptr , type , cache_slot )"		3981492	2		=			
ANR	3981916	Identifier	ptr		3981492	0					
ANR	3981917	CallExpression	"Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr ( container , prop_ptr , type , cache_slot )"		3981492	1					
ANR	3981918	Callee	Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr		3981492	0					
ANR	3981919	PtrMemberAccess	Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr		3981492	0					
ANR	3981920	CallExpression	Z_OBJ_HT_P ( container )		3981492	0					
ANR	3981921	Callee	Z_OBJ_HT_P		3981492	0					
ANR	3981922	Identifier	Z_OBJ_HT_P		3981492	0					
ANR	3981923	ArgumentList	container		3981492	1					
ANR	3981924	Argument	container		3981492	0					
ANR	3981925	Identifier	container		3981492	0					
ANR	3981926	Identifier	get_property_ptr_ptr		3981492	1					
ANR	3981927	ArgumentList	container		3981492	1					
ANR	3981928	Argument	container		3981492	0					
ANR	3981929	Identifier	container		3981492	0					
ANR	3981930	Argument	prop_ptr		3981492	1					
ANR	3981931	Identifier	prop_ptr		3981492	0					
ANR	3981932	Argument	type		3981492	2					
ANR	3981933	Identifier	type		3981492	0					
ANR	3981934	Argument	cache_slot		3981492	3					
ANR	3981935	Identifier	cache_slot		3981492	0					
ANR	3981936	IfStatement	if ( NULL == ptr )		3981492	1					
ANR	3981937	Condition	NULL == ptr	1972:6:61255:61265	3981492	0	True				
ANR	3981938	EqualityExpression	NULL == ptr		3981492	0		==			
ANR	3981939	Identifier	NULL		3981492	0					
ANR	3981940	Identifier	ptr		3981492	1					
ANR	3981941	CompoundStatement		57:19:1893:1893	3981492	1					
ANR	3981942	IfStatement	if ( EXPECTED ( Z_OBJ_HT_P ( container ) -> read_property ) )		3981492	0					
ANR	3981943	Condition	EXPECTED ( Z_OBJ_HT_P ( container ) -> read_property )	1973:7:61277:61322	3981492	0	True				
ANR	3981944	CallExpression	EXPECTED ( Z_OBJ_HT_P ( container ) -> read_property )		3981492	0					
ANR	3981945	Callee	EXPECTED		3981492	0					
ANR	3981946	Identifier	EXPECTED		3981492	0					
ANR	3981947	ArgumentList	Z_OBJ_HT_P ( container ) -> read_property		3981492	1					
ANR	3981948	Argument	Z_OBJ_HT_P ( container ) -> read_property		3981492	0					
ANR	3981949	PtrMemberAccess	Z_OBJ_HT_P ( container ) -> read_property		3981492	0					
ANR	3981950	CallExpression	Z_OBJ_HT_P ( container )		3981492	0					
ANR	3981951	Callee	Z_OBJ_HT_P		3981492	0					
ANR	3981952	Identifier	Z_OBJ_HT_P		3981492	0					
ANR	3981953	ArgumentList	container		3981492	1					
ANR	3981954	Argument	container		3981492	0					
ANR	3981955	Identifier	container		3981492	0					
ANR	3981956	Identifier	read_property		3981492	1					
ANR	3981957	CompoundStatement		58:55:1950:1950	3981492	1					
ANR	3981958	ExpressionStatement	"ptr = Z_OBJ_HT_P ( container ) -> read_property ( container , prop_ptr , type , cache_slot , result )"	1974:4:61331:61420	3981492	0	True				
ANR	3981959	AssignmentExpression	"ptr = Z_OBJ_HT_P ( container ) -> read_property ( container , prop_ptr , type , cache_slot , result )"		3981492	0		=			
ANR	3981960	Identifier	ptr		3981492	0					
ANR	3981961	CallExpression	"Z_OBJ_HT_P ( container ) -> read_property ( container , prop_ptr , type , cache_slot , result )"		3981492	1					
ANR	3981962	Callee	Z_OBJ_HT_P ( container ) -> read_property		3981492	0					
ANR	3981963	PtrMemberAccess	Z_OBJ_HT_P ( container ) -> read_property		3981492	0					
ANR	3981964	CallExpression	Z_OBJ_HT_P ( container )		3981492	0					
ANR	3981965	Callee	Z_OBJ_HT_P		3981492	0					
ANR	3981966	Identifier	Z_OBJ_HT_P		3981492	0					
ANR	3981967	ArgumentList	container		3981492	1					
ANR	3981968	Argument	container		3981492	0					
ANR	3981969	Identifier	container		3981492	0					
ANR	3981970	Identifier	read_property		3981492	1					
ANR	3981971	ArgumentList	container		3981492	1					
ANR	3981972	Argument	container		3981492	0					
ANR	3981973	Identifier	container		3981492	0					
ANR	3981974	Argument	prop_ptr		3981492	1					
ANR	3981975	Identifier	prop_ptr		3981492	0					
ANR	3981976	Argument	type		3981492	2					
ANR	3981977	Identifier	type		3981492	0					
ANR	3981978	Argument	cache_slot		3981492	3					
ANR	3981979	Identifier	cache_slot		3981492	0					
ANR	3981980	Argument	result		3981492	4					
ANR	3981981	Identifier	result		3981492	0					
ANR	3981982	IfStatement	if ( ptr != result )		3981492	1					
ANR	3981983	Condition	ptr != result	1975:8:61430:61442	3981492	0	True				
ANR	3981984	EqualityExpression	ptr != result		3981492	0		!=			
ANR	3981985	Identifier	ptr		3981492	0					
ANR	3981986	Identifier	result		3981492	1					
ANR	3981987	CompoundStatement		60:23:2070:2070	3981492	1					
ANR	3981988	ExpressionStatement	"ZVAL_INDIRECT ( result , ptr )"	1976:5:61452:61478	3981492	0	True				
ANR	3981989	CallExpression	"ZVAL_INDIRECT ( result , ptr )"		3981492	0					
ANR	3981990	Callee	ZVAL_INDIRECT		3981492	0					
ANR	3981991	Identifier	ZVAL_INDIRECT		3981492	0					
ANR	3981992	ArgumentList	result		3981492	1					
ANR	3981993	Argument	result		3981492	0					
ANR	3981994	Identifier	result		3981492	0					
ANR	3981995	Argument	ptr		3981492	1					
ANR	3981996	Identifier	ptr		3981492	0					
ANR	3981997	ElseStatement	else		3981492	0					
ANR	3981998	IfStatement	if ( UNEXPECTED ( Z_ISREF_P ( ptr ) && Z_REFCOUNT_P ( ptr ) == 1 ) )		3981492	0					
ANR	3981999	Condition	UNEXPECTED ( Z_ISREF_P ( ptr ) && Z_REFCOUNT_P ( ptr ) == 1 )	1977:15:61495:61546	3981492	0	True				
ANR	3982000	CallExpression	UNEXPECTED ( Z_ISREF_P ( ptr ) && Z_REFCOUNT_P ( ptr ) == 1 )		3981492	0					
ANR	3982001	Callee	UNEXPECTED		3981492	0					
ANR	3982002	Identifier	UNEXPECTED		3981492	0					
ANR	3982003	ArgumentList	Z_ISREF_P ( ptr ) && Z_REFCOUNT_P ( ptr ) == 1		3981492	1					
ANR	3982004	Argument	Z_ISREF_P ( ptr ) && Z_REFCOUNT_P ( ptr ) == 1		3981492	0					
ANR	3982005	AndExpression	Z_ISREF_P ( ptr ) && Z_REFCOUNT_P ( ptr ) == 1		3981492	0		&&			
ANR	3982006	CallExpression	Z_ISREF_P ( ptr )		3981492	0					
ANR	3982007	Callee	Z_ISREF_P		3981492	0					
ANR	3982008	Identifier	Z_ISREF_P		3981492	0					
ANR	3982009	ArgumentList	ptr		3981492	1					
ANR	3982010	Argument	ptr		3981492	0					
ANR	3982011	Identifier	ptr		3981492	0					
ANR	3982012	EqualityExpression	Z_REFCOUNT_P ( ptr ) == 1		3981492	1		==			
ANR	3982013	CallExpression	Z_REFCOUNT_P ( ptr )		3981492	0					
ANR	3982014	Callee	Z_REFCOUNT_P		3981492	0					
ANR	3982015	Identifier	Z_REFCOUNT_P		3981492	0					
ANR	3982016	ArgumentList	ptr		3981492	1					
ANR	3982017	Argument	ptr		3981492	0					
ANR	3982018	Identifier	ptr		3981492	0					
ANR	3982019	PrimaryExpression	1		3981492	1					
ANR	3982020	CompoundStatement		62:69:2174:2174	3981492	1					
ANR	3982021	ExpressionStatement	ZVAL_UNREF ( ptr )	1978:5:61556:61571	3981492	0	True				
ANR	3982022	CallExpression	ZVAL_UNREF ( ptr )		3981492	0					
ANR	3982023	Callee	ZVAL_UNREF		3981492	0					
ANR	3982024	Identifier	ZVAL_UNREF		3981492	0					
ANR	3982025	ArgumentList	ptr		3981492	1					
ANR	3982026	Argument	ptr		3981492	0					
ANR	3982027	Identifier	ptr		3981492	0					
ANR	3982028	ElseStatement	else		3981492	0					
ANR	3982029	CompoundStatement		65:10:2214:2214	3981492	0					
ANR	3982030	ExpressionStatement	"zend_throw_error ( NULL , ""Cannot access undefined property for object with overloaded property access"" )"	1981:4:61595:61696	3981492	0	True				
ANR	3982031	CallExpression	"zend_throw_error ( NULL , ""Cannot access undefined property for object with overloaded property access"" )"		3981492	0					
ANR	3982032	Callee	zend_throw_error		3981492	0					
ANR	3982033	Identifier	zend_throw_error		3981492	0					
ANR	3982034	ArgumentList	NULL		3981492	1					
ANR	3982035	Argument	NULL		3981492	0					
ANR	3982036	Identifier	NULL		3981492	0					
ANR	3982037	Argument	"""Cannot access undefined property for object with overloaded property access"""		3981492	1					
ANR	3982038	PrimaryExpression	"""Cannot access undefined property for object with overloaded property access"""		3981492	0					
ANR	3982039	ExpressionStatement	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"	1982:4:61702:61740	3981492	1	True				
ANR	3982040	CallExpression	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"		3981492	0					
ANR	3982041	Callee	ZVAL_INDIRECT		3981492	0					
ANR	3982042	Identifier	ZVAL_INDIRECT		3981492	0					
ANR	3982043	ArgumentList	result		3981492	1					
ANR	3982044	Argument	result		3981492	0					
ANR	3982045	Identifier	result		3981492	0					
ANR	3982046	Argument	& EG ( error_zval )		3981492	1					
ANR	3982047	UnaryOperationExpression	& EG ( error_zval )		3981492	0					
ANR	3982048	UnaryOperator	&		3981492	0					
ANR	3982049	CallExpression	EG ( error_zval )		3981492	1					
ANR	3982050	Callee	EG		3981492	0					
ANR	3982051	Identifier	EG		3981492	0					
ANR	3982052	ArgumentList	error_zval		3981492	1					
ANR	3982053	Argument	error_zval		3981492	0					
ANR	3982054	Identifier	error_zval		3981492	0					
ANR	3982055	ElseStatement	else		3981492	0					
ANR	3982056	CompoundStatement		69:9:2381:2381	3981492	0					
ANR	3982057	ExpressionStatement	"ZVAL_INDIRECT ( result , ptr )"	1985:3:61761:61787	3981492	0	True				
ANR	3982058	CallExpression	"ZVAL_INDIRECT ( result , ptr )"		3981492	0					
ANR	3982059	Callee	ZVAL_INDIRECT		3981492	0					
ANR	3982060	Identifier	ZVAL_INDIRECT		3981492	0					
ANR	3982061	ArgumentList	result		3981492	1					
ANR	3982062	Argument	result		3981492	0					
ANR	3982063	Identifier	result		3981492	0					
ANR	3982064	Argument	ptr		3981492	1					
ANR	3982065	Identifier	ptr		3981492	0					
ANR	3982066	ElseStatement	else		3981492	0					
ANR	3982067	IfStatement	if ( EXPECTED ( Z_OBJ_HT_P ( container ) -> read_property ) )		3981492	0					
ANR	3982068	Condition	EXPECTED ( Z_OBJ_HT_P ( container ) -> read_property )	1987:12:61805:61850	3981492	0	True				
ANR	3982069	CallExpression	EXPECTED ( Z_OBJ_HT_P ( container ) -> read_property )		3981492	0					
ANR	3982070	Callee	EXPECTED		3981492	0					
ANR	3982071	Identifier	EXPECTED		3981492	0					
ANR	3982072	ArgumentList	Z_OBJ_HT_P ( container ) -> read_property		3981492	1					
ANR	3982073	Argument	Z_OBJ_HT_P ( container ) -> read_property		3981492	0					
ANR	3982074	PtrMemberAccess	Z_OBJ_HT_P ( container ) -> read_property		3981492	0					
ANR	3982075	CallExpression	Z_OBJ_HT_P ( container )		3981492	0					
ANR	3982076	Callee	Z_OBJ_HT_P		3981492	0					
ANR	3982077	Identifier	Z_OBJ_HT_P		3981492	0					
ANR	3982078	ArgumentList	container		3981492	1					
ANR	3982079	Argument	container		3981492	0					
ANR	3982080	Identifier	container		3981492	0					
ANR	3982081	Identifier	read_property		3981492	1					
ANR	3982082	CompoundStatement		73:2:2482:2577	3981492	1					
ANR	3982083	IdentifierDeclStatement	"zval * ptr = Z_OBJ_HT_P ( container ) -> read_property ( container , prop_ptr , type , cache_slot , result ) ;"	1988:2:61857:61952	3981492	0	True				
ANR	3982084	IdentifierDecl	"* ptr = Z_OBJ_HT_P ( container ) -> read_property ( container , prop_ptr , type , cache_slot , result )"		3981492	0					
ANR	3982085	IdentifierDeclType	zval *		3981492	0					
ANR	3982086	Identifier	ptr		3981492	1					
ANR	3982087	AssignmentExpression	"* ptr = Z_OBJ_HT_P ( container ) -> read_property ( container , prop_ptr , type , cache_slot , result )"		3981492	2		=			
ANR	3982088	Identifier	ptr		3981492	0					
ANR	3982089	CallExpression	"Z_OBJ_HT_P ( container ) -> read_property ( container , prop_ptr , type , cache_slot , result )"		3981492	1					
ANR	3982090	Callee	Z_OBJ_HT_P ( container ) -> read_property		3981492	0					
ANR	3982091	PtrMemberAccess	Z_OBJ_HT_P ( container ) -> read_property		3981492	0					
ANR	3982092	CallExpression	Z_OBJ_HT_P ( container )		3981492	0					
ANR	3982093	Callee	Z_OBJ_HT_P		3981492	0					
ANR	3982094	Identifier	Z_OBJ_HT_P		3981492	0					
ANR	3982095	ArgumentList	container		3981492	1					
ANR	3982096	Argument	container		3981492	0					
ANR	3982097	Identifier	container		3981492	0					
ANR	3982098	Identifier	read_property		3981492	1					
ANR	3982099	ArgumentList	container		3981492	1					
ANR	3982100	Argument	container		3981492	0					
ANR	3982101	Identifier	container		3981492	0					
ANR	3982102	Argument	prop_ptr		3981492	1					
ANR	3982103	Identifier	prop_ptr		3981492	0					
ANR	3982104	Argument	type		3981492	2					
ANR	3982105	Identifier	type		3981492	0					
ANR	3982106	Argument	cache_slot		3981492	3					
ANR	3982107	Identifier	cache_slot		3981492	0					
ANR	3982108	Argument	result		3981492	4					
ANR	3982109	Identifier	result		3981492	0					
ANR	3982110	IfStatement	if ( ptr != result )		3981492	1					
ANR	3982111	Condition	ptr != result	1989:6:61960:61972	3981492	0	True				
ANR	3982112	EqualityExpression	ptr != result		3981492	0		!=			
ANR	3982113	Identifier	ptr		3981492	0					
ANR	3982114	Identifier	result		3981492	1					
ANR	3982115	CompoundStatement		74:21:2600:2600	3981492	1					
ANR	3982116	ExpressionStatement	"ZVAL_INDIRECT ( result , ptr )"	1990:3:61980:62006	3981492	0	True				
ANR	3982117	CallExpression	"ZVAL_INDIRECT ( result , ptr )"		3981492	0					
ANR	3982118	Callee	ZVAL_INDIRECT		3981492	0					
ANR	3982119	Identifier	ZVAL_INDIRECT		3981492	0					
ANR	3982120	ArgumentList	result		3981492	1					
ANR	3982121	Argument	result		3981492	0					
ANR	3982122	Identifier	result		3981492	0					
ANR	3982123	Argument	ptr		3981492	1					
ANR	3982124	Identifier	ptr		3981492	0					
ANR	3982125	ElseStatement	else		3981492	0					
ANR	3982126	IfStatement	if ( UNEXPECTED ( Z_ISREF_P ( ptr ) && Z_REFCOUNT_P ( ptr ) == 1 ) )		3981492	0					
ANR	3982127	Condition	UNEXPECTED ( Z_ISREF_P ( ptr ) && Z_REFCOUNT_P ( ptr ) == 1 )	1991:13:62021:62072	3981492	0	True				
ANR	3982128	CallExpression	UNEXPECTED ( Z_ISREF_P ( ptr ) && Z_REFCOUNT_P ( ptr ) == 1 )		3981492	0					
ANR	3982129	Callee	UNEXPECTED		3981492	0					
ANR	3982130	Identifier	UNEXPECTED		3981492	0					
ANR	3982131	ArgumentList	Z_ISREF_P ( ptr ) && Z_REFCOUNT_P ( ptr ) == 1		3981492	1					
ANR	3982132	Argument	Z_ISREF_P ( ptr ) && Z_REFCOUNT_P ( ptr ) == 1		3981492	0					
ANR	3982133	AndExpression	Z_ISREF_P ( ptr ) && Z_REFCOUNT_P ( ptr ) == 1		3981492	0		&&			
ANR	3982134	CallExpression	Z_ISREF_P ( ptr )		3981492	0					
ANR	3982135	Callee	Z_ISREF_P		3981492	0					
ANR	3982136	Identifier	Z_ISREF_P		3981492	0					
ANR	3982137	ArgumentList	ptr		3981492	1					
ANR	3982138	Argument	ptr		3981492	0					
ANR	3982139	Identifier	ptr		3981492	0					
ANR	3982140	EqualityExpression	Z_REFCOUNT_P ( ptr ) == 1		3981492	1		==			
ANR	3982141	CallExpression	Z_REFCOUNT_P ( ptr )		3981492	0					
ANR	3982142	Callee	Z_REFCOUNT_P		3981492	0					
ANR	3982143	Identifier	Z_REFCOUNT_P		3981492	0					
ANR	3982144	ArgumentList	ptr		3981492	1					
ANR	3982145	Argument	ptr		3981492	0					
ANR	3982146	Identifier	ptr		3981492	0					
ANR	3982147	PrimaryExpression	1		3981492	1					
ANR	3982148	CompoundStatement		76:67:2700:2700	3981492	1					
ANR	3982149	ExpressionStatement	ZVAL_UNREF ( ptr )	1992:3:62080:62095	3981492	0	True				
ANR	3982150	CallExpression	ZVAL_UNREF ( ptr )		3981492	0					
ANR	3982151	Callee	ZVAL_UNREF		3981492	0					
ANR	3982152	Identifier	ZVAL_UNREF		3981492	0					
ANR	3982153	ArgumentList	ptr		3981492	1					
ANR	3982154	Argument	ptr		3981492	0					
ANR	3982155	Identifier	ptr		3981492	0					
ANR	3982156	ElseStatement	else		3981492	0					
ANR	3982157	CompoundStatement		79:8:2734:2734	3981492	0					
ANR	3982158	ExpressionStatement	"zend_error ( E_WARNING , ""This object doesn't support property references"" )"	1995:2:62113:62185	3981492	0	True				
ANR	3982159	CallExpression	"zend_error ( E_WARNING , ""This object doesn't support property references"" )"		3981492	0					
ANR	3982160	Callee	zend_error		3981492	0					
ANR	3982161	Identifier	zend_error		3981492	0					
ANR	3982162	ArgumentList	E_WARNING		3981492	1					
ANR	3982163	Argument	E_WARNING		3981492	0					
ANR	3982164	Identifier	E_WARNING		3981492	0					
ANR	3982165	Argument	"""This object doesn't support property references"""		3981492	1					
ANR	3982166	PrimaryExpression	"""This object doesn't support property references"""		3981492	0					
ANR	3982167	ExpressionStatement	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"	1996:2:62189:62227	3981492	1	True				
ANR	3982168	CallExpression	"ZVAL_INDIRECT ( result , & EG ( error_zval ) )"		3981492	0					
ANR	3982169	Callee	ZVAL_INDIRECT		3981492	0					
ANR	3982170	Identifier	ZVAL_INDIRECT		3981492	0					
ANR	3982171	ArgumentList	result		3981492	1					
ANR	3982172	Argument	result		3981492	0					
ANR	3982173	Identifier	result		3981492	0					
ANR	3982174	Argument	& EG ( error_zval )		3981492	1					
ANR	3982175	UnaryOperationExpression	& EG ( error_zval )		3981492	0					
ANR	3982176	UnaryOperator	&		3981492	0					
ANR	3982177	CallExpression	EG ( error_zval )		3981492	1					
ANR	3982178	Callee	EG		3981492	0					
ANR	3982179	Identifier	EG		3981492	0					
ANR	3982180	ArgumentList	error_zval		3981492	1					
ANR	3982181	Argument	error_zval		3981492	0					
ANR	3982182	Identifier	error_zval		3981492	0					
ANR	3982183	ReturnType	static zend_always_inline void		3981492	1					
ANR	3982184	Identifier	zend_fetch_property_address		3981492	2					
ANR	3982185	ParameterList	"zval * result , zval * container , uint32_t container_op_type , zval * prop_ptr , uint32_t prop_op_type , void * * cache_slot , int type"		3981492	3					
ANR	3982186	Parameter	zval * result	1915:59:59247:59258	3981492	0	True				
ANR	3982187	ParameterType	zval *		3981492	0					
ANR	3982188	Identifier	result		3981492	1					
ANR	3982189	Parameter	zval * container	1915:73:59261:59275	3981492	1	True				
ANR	3982190	ParameterType	zval *		3981492	0					
ANR	3982191	Identifier	container		3981492	1					
ANR	3982192	Parameter	uint32_t container_op_type	1915:90:59278:59303	3981492	2	True				
ANR	3982193	ParameterType	uint32_t		3981492	0					
ANR	3982194	Identifier	container_op_type		3981492	1					
ANR	3982195	Parameter	zval * prop_ptr	1915:118:59306:59319	3981492	3	True				
ANR	3982196	ParameterType	zval *		3981492	0					
ANR	3982197	Identifier	prop_ptr		3981492	1					
ANR	3982198	Parameter	uint32_t prop_op_type	1915:134:59322:59342	3981492	4	True				
ANR	3982199	ParameterType	uint32_t		3981492	0					
ANR	3982200	Identifier	prop_op_type		3981492	1					
ANR	3982201	Parameter	void * * cache_slot	1915:157:59345:59361	3981492	5	True				
ANR	3982202	ParameterType	void * *		3981492	0					
ANR	3982203	Identifier	cache_slot		3981492	1					
ANR	3982204	Parameter	int type	1915:176:59364:59371	3981492	6	True				
ANR	3982205	ParameterType	int		3981492	0					
ANR	3982206	Identifier	type		3981492	1					
ANR	3982207	CFGEntryNode	ENTRY		3981492		True				
ANR	3982208	CFGExitNode	EXIT		3981492		True				
ANR	3982209	Symbol	container		3981492						
ANR	3982210	Symbol	zobj		3981492						
ANR	3982211	Symbol	Z_OBJ_P		3981492						
ANR	3982212	Symbol	GC_FLAGS		3981492						
ANR	3982213	Symbol	type		3981492						
ANR	3982214	Symbol	& EG		3981492						
ANR	3982215	Symbol	ZEND_DYNAMIC_PROPERTY_OFFSET		3981492						
ANR	3982216	Symbol	Z_REFCOUNT_P		3981492						
ANR	3982217	Symbol	result		3981492						
ANR	3982218	Symbol	UNEXPECTED		3981492						
ANR	3982219	Symbol	E_WARNING		3981492						
ANR	3982220	Symbol	Z_OBJ_HT_P ( container ) -> read_property		3981492						
ANR	3982221	Symbol	zend_hash_find		3981492						
ANR	3982222	Symbol	* zobj		3981492						
ANR	3982223	Symbol	zobj -> properties		3981492						
ANR	3982224	Symbol	Z_OBJCE_P		3981492						
ANR	3982225	Symbol	prop_ptr		3981492						
ANR	3982226	Symbol	Z_STRLEN_P		3981492						
ANR	3982227	Symbol	IS_STRING		3981492						
ANR	3982228	Symbol	GC_REFCOUNT		3981492						
ANR	3982229	Symbol	IS_FALSE		3981492						
ANR	3982230	Symbol	IS_UNDEF		3981492						
ANR	3982231	Symbol	zend_array_dup		3981492						
ANR	3982232	Symbol	cache_slot		3981492						
ANR	3982233	Symbol	IS_CONST		3981492						
ANR	3982234	Symbol	NULL		3981492						
ANR	3982235	Symbol	CACHED_PTR_EX		3981492						
ANR	3982236	Symbol	IS_ARRAY_IMMUTABLE		3981492						
ANR	3982237	Symbol	Z_TYPE_P		3981492						
ANR	3982238	Symbol	* Z_OBJ_HT_P		3981492						
ANR	3982239	Symbol	retval		3981492						
ANR	3982240	Symbol	Z_OBJ_HT_P ( container ) -> get_property_ptr_ptr		3981492						
ANR	3982241	Symbol	ptr		3981492						
ANR	3982242	Symbol	OBJ_PROP		3981492						
ANR	3982243	Symbol	prop_offset		3981492						
ANR	3982244	Symbol	prop_op_type		3981492						
ANR	3982245	Symbol	error_zval		3981492						
ANR	3982246	Symbol	Z_REFVAL_P		3981492						
ANR	3982247	Symbol	Z_OBJ_HT_P		3981492						
ANR	3982248	Symbol	Z_STR_P		3981492						
ANR	3982249	Symbol	IS_OBJECT		3981492						
ANR	3982250	Symbol	IS_VAR		3981492						
ANR	3982251	Symbol	EXPECTED		3981492						
ANR	3982252	Symbol	BP_VAR_UNSET		3981492						
ANR	3982253	Symbol	container_op_type		3981492						
ANR	3982254	Symbol	Z_ISREF_P		3981492						
ANR	3982255	Symbol	IS_UNUSED		3981492						
ANR	3982256	Function	zend_check_symbol	2008:0:62483:63023							
ANR	3982257	FunctionDef	zend_check_symbol (zval * pz)		3982256	0					
ANR	3982258	CompoundStatement		2009:0:62522:63023	3982256	0					
ANR	3982259	IfStatement	if ( Z_TYPE_P ( pz ) == IS_INDIRECT )		3982256	0					
ANR	3982260	Condition	Z_TYPE_P ( pz ) == IS_INDIRECT	2010:5:62529:62555	3982256	0	True				
ANR	3982261	EqualityExpression	Z_TYPE_P ( pz ) == IS_INDIRECT		3982256	0		==			
ANR	3982262	CallExpression	Z_TYPE_P ( pz )		3982256	0					
ANR	3982263	Callee	Z_TYPE_P		3982256	0					
ANR	3982264	Identifier	Z_TYPE_P		3982256	0					
ANR	3982265	ArgumentList	pz		3982256	1					
ANR	3982266	Argument	pz		3982256	0					
ANR	3982267	Identifier	pz		3982256	0					
ANR	3982268	Identifier	IS_INDIRECT		3982256	1					
ANR	3982269	CompoundStatement		2:34:35:35	3982256	1					
ANR	3982270	ExpressionStatement	pz = Z_INDIRECT_P ( pz )	2011:2:62562:62583	3982256	0	True				
ANR	3982271	AssignmentExpression	pz = Z_INDIRECT_P ( pz )		3982256	0		=			
ANR	3982272	Identifier	pz		3982256	0					
ANR	3982273	CallExpression	Z_INDIRECT_P ( pz )		3982256	1					
ANR	3982274	Callee	Z_INDIRECT_P		3982256	0					
ANR	3982275	Identifier	Z_INDIRECT_P		3982256	0					
ANR	3982276	ArgumentList	pz		3982256	1					
ANR	3982277	Argument	pz		3982256	0					
ANR	3982278	Identifier	pz		3982256	0					
ANR	3982279	IfStatement	if ( Z_TYPE_P ( pz ) > 10 )		3982256	1					
ANR	3982280	Condition	Z_TYPE_P ( pz ) > 10	2013:5:62593:62609	3982256	0	True				
ANR	3982281	RelationalExpression	Z_TYPE_P ( pz ) > 10		3982256	0		>			
ANR	3982282	CallExpression	Z_TYPE_P ( pz )		3982256	0					
ANR	3982283	Callee	Z_TYPE_P		3982256	0					
ANR	3982284	Identifier	Z_TYPE_P		3982256	0					
ANR	3982285	ArgumentList	pz		3982256	1					
ANR	3982286	Argument	pz		3982256	0					
ANR	3982287	Identifier	pz		3982256	0					
ANR	3982288	PrimaryExpression	10		3982256	1					
ANR	3982289	CompoundStatement		5:24:89:89	3982256	1					
ANR	3982290	ExpressionStatement	"fprintf ( stderr , ""Warning!  %x has invalid type!\\n"" , * pz )"	2014:2:62616:62672	3982256	0	True				
ANR	3982291	CallExpression	"fprintf ( stderr , ""Warning!  %x has invalid type!\\n"" , * pz )"		3982256	0					
ANR	3982292	Callee	fprintf		3982256	0					
ANR	3982293	Identifier	fprintf		3982256	0					
ANR	3982294	ArgumentList	stderr		3982256	1					
ANR	3982295	Argument	stderr		3982256	0					
ANR	3982296	Identifier	stderr		3982256	0					
ANR	3982297	Argument	"""Warning!  %x has invalid type!\\n"""		3982256	1					
ANR	3982298	PrimaryExpression	"""Warning!  %x has invalid type!\\n"""		3982256	0					
ANR	3982299	Argument	* pz		3982256	2					
ANR	3982300	UnaryOperationExpression	* pz		3982256	0					
ANR	3982301	UnaryOperator	*		3982256	0					
ANR	3982302	Identifier	pz		3982256	1					
ANR	3982303	ExpressionStatement	fflush ( stderr )	2017:2:62743:62757	3982256	1	True				
ANR	3982304	CallExpression	fflush ( stderr )		3982256	0					
ANR	3982305	Callee	fflush		3982256	0					
ANR	3982306	Identifier	fflush		3982256	0					
ANR	3982307	ArgumentList	stderr		3982256	1					
ANR	3982308	Argument	stderr		3982256	0					
ANR	3982309	Identifier	stderr		3982256	0					
ANR	3982310	ElseStatement	else		3982256	0					
ANR	3982311	IfStatement	if ( Z_TYPE_P ( pz ) == IS_ARRAY )		3982256	0					
ANR	3982312	Condition	Z_TYPE_P ( pz ) == IS_ARRAY	2019:12:62778:62801	3982256	0	True				
ANR	3982313	EqualityExpression	Z_TYPE_P ( pz ) == IS_ARRAY		3982256	0		==			
ANR	3982314	CallExpression	Z_TYPE_P ( pz )		3982256	0					
ANR	3982315	Callee	Z_TYPE_P		3982256	0					
ANR	3982316	Identifier	Z_TYPE_P		3982256	0					
ANR	3982317	ArgumentList	pz		3982256	1					
ANR	3982318	Argument	pz		3982256	0					
ANR	3982319	Identifier	pz		3982256	0					
ANR	3982320	Identifier	IS_ARRAY		3982256	1					
ANR	3982321	CompoundStatement		11:38:281:281	3982256	1					
ANR	3982322	ExpressionStatement	"zend_hash_apply ( Z_ARRVAL_P ( pz ) , zend_check_symbol )"	2020:2:62808:62858	3982256	0	True				
ANR	3982323	CallExpression	"zend_hash_apply ( Z_ARRVAL_P ( pz ) , zend_check_symbol )"		3982256	0					
ANR	3982324	Callee	zend_hash_apply		3982256	0					
ANR	3982325	Identifier	zend_hash_apply		3982256	0					
ANR	3982326	ArgumentList	Z_ARRVAL_P ( pz )		3982256	1					
ANR	3982327	Argument	Z_ARRVAL_P ( pz )		3982256	0					
ANR	3982328	CallExpression	Z_ARRVAL_P ( pz )		3982256	0					
ANR	3982329	Callee	Z_ARRVAL_P		3982256	0					
ANR	3982330	Identifier	Z_ARRVAL_P		3982256	0					
ANR	3982331	ArgumentList	pz		3982256	1					
ANR	3982332	Argument	pz		3982256	0					
ANR	3982333	Identifier	pz		3982256	0					
ANR	3982334	Argument	zend_check_symbol		3982256	1					
ANR	3982335	Identifier	zend_check_symbol		3982256	0					
ANR	3982336	ElseStatement	else		3982256	0					
ANR	3982337	IfStatement	if ( Z_TYPE_P ( pz ) == IS_OBJECT )		3982256	0					
ANR	3982338	Condition	Z_TYPE_P ( pz ) == IS_OBJECT	2021:12:62872:62896	3982256	0	True				
ANR	3982339	EqualityExpression	Z_TYPE_P ( pz ) == IS_OBJECT		3982256	0		==			
ANR	3982340	CallExpression	Z_TYPE_P ( pz )		3982256	0					
ANR	3982341	Callee	Z_TYPE_P		3982256	0					
ANR	3982342	Identifier	Z_TYPE_P		3982256	0					
ANR	3982343	ArgumentList	pz		3982256	1					
ANR	3982344	Argument	pz		3982256	0					
ANR	3982345	Identifier	pz		3982256	0					
ANR	3982346	Identifier	IS_OBJECT		3982256	1					
ANR	3982347	CompoundStatement		13:39:376:376	3982256	1					
ANR	3982348	ExpressionStatement	"zend_hash_apply ( Z_OBJPROP_P ( pz ) , zend_check_symbol )"	2023:2:62955:63006	3982256	0	True				
ANR	3982349	CallExpression	"zend_hash_apply ( Z_OBJPROP_P ( pz ) , zend_check_symbol )"		3982256	0					
ANR	3982350	Callee	zend_hash_apply		3982256	0					
ANR	3982351	Identifier	zend_hash_apply		3982256	0					
ANR	3982352	ArgumentList	Z_OBJPROP_P ( pz )		3982256	1					
ANR	3982353	Argument	Z_OBJPROP_P ( pz )		3982256	0					
ANR	3982354	CallExpression	Z_OBJPROP_P ( pz )		3982256	0					
ANR	3982355	Callee	Z_OBJPROP_P		3982256	0					
ANR	3982356	Identifier	Z_OBJPROP_P		3982256	0					
ANR	3982357	ArgumentList	pz		3982256	1					
ANR	3982358	Argument	pz		3982256	0					
ANR	3982359	Identifier	pz		3982256	0					
ANR	3982360	Argument	zend_check_symbol		3982256	1					
ANR	3982361	Identifier	zend_check_symbol		3982256	0					
ANR	3982362	ReturnStatement	return 0 ;	2026:1:63013:63021	3982256	2	True				
ANR	3982363	PrimaryExpression	0		3982256	0					
ANR	3982364	ReturnType	static int		3982256	1					
ANR	3982365	Identifier	zend_check_symbol		3982256	2					
ANR	3982366	ParameterList	zval * pz		3982256	3					
ANR	3982367	Parameter	zval * pz	2008:29:62512:62519	3982256	0	True				
ANR	3982368	ParameterType	zval *		3982256	0					
ANR	3982369	Identifier	pz		3982256	1					
ANR	3982370	CFGEntryNode	ENTRY		3982256		True				
ANR	3982371	CFGExitNode	EXIT		3982256		True				
ANR	3982372	Symbol	zend_check_symbol		3982256						
ANR	3982373	Symbol	* pz		3982256						
ANR	3982374	Symbol	IS_ARRAY		3982256						
ANR	3982375	Symbol	Z_INDIRECT_P		3982256						
ANR	3982376	Symbol	pz		3982256						
ANR	3982377	Symbol	Z_OBJPROP_P		3982256						
ANR	3982378	Symbol	Z_TYPE_P		3982256						
ANR	3982379	Symbol	stderr		3982256						
ANR	3982380	Symbol	Z_ARRVAL_P		3982256						
ANR	3982381	Symbol	IS_OBJECT		3982256						
ANR	3982382	Symbol	IS_INDIRECT		3982256						
ANR	3982383	Function	execute_internal	2034:0:63071:63233							
ANR	3982384	FunctionDef	"execute_internal (zend_execute_data * execute_data , zval * return_value)"		3982383	0					
ANR	3982385	CompoundStatement		2035:0:63155:63233	3982383	0					
ANR	3982386	ExpressionStatement	"execute_data -> func -> internal_function . handler ( execute_data , return_value )"	2036:1:63158:63231	3982383	0	True				
ANR	3982387	CallExpression	"execute_data -> func -> internal_function . handler ( execute_data , return_value )"		3982383	0					
ANR	3982388	Callee	execute_data -> func -> internal_function . handler		3982383	0					
ANR	3982389	MemberAccess	execute_data -> func -> internal_function . handler		3982383	0					
ANR	3982390	PtrMemberAccess	execute_data -> func -> internal_function		3982383	0					
ANR	3982391	PtrMemberAccess	execute_data -> func		3982383	0					
ANR	3982392	Identifier	execute_data		3982383	0					
ANR	3982393	Identifier	func		3982383	1					
ANR	3982394	Identifier	internal_function		3982383	1					
ANR	3982395	Identifier	handler		3982383	1					
ANR	3982396	ArgumentList	execute_data		3982383	1					
ANR	3982397	Argument	execute_data		3982383	0					
ANR	3982398	Identifier	execute_data		3982383	0					
ANR	3982399	Argument	return_value		3982383	1					
ANR	3982400	Identifier	return_value		3982383	0					
ANR	3982401	ReturnType	ZEND_API void		3982383	1					
ANR	3982402	Identifier	execute_internal		3982383	2					
ANR	3982403	ParameterList	"zend_execute_data * execute_data , zval * return_value"		3982383	3					
ANR	3982404	Parameter	zend_execute_data * execute_data	2034:31:63102:63132	3982383	0	True				
ANR	3982405	ParameterType	zend_execute_data *		3982383	0					
ANR	3982406	Identifier	execute_data		3982383	1					
ANR	3982407	Parameter	zval * return_value	2034:64:63135:63152	3982383	1	True				
ANR	3982408	ParameterType	zval *		3982383	0					
ANR	3982409	Identifier	return_value		3982383	1					
ANR	3982410	CFGEntryNode	ENTRY		3982383		True				
ANR	3982411	CFGExitNode	EXIT		3982383		True				
ANR	3982412	Symbol	return_value		3982383						
ANR	3982413	Symbol	* execute_data -> func		3982383						
ANR	3982414	Symbol	* execute_data		3982383						
ANR	3982415	Symbol	* * execute_data		3982383						
ANR	3982416	Symbol	execute_data -> func		3982383						
ANR	3982417	Symbol	execute_data		3982383						
ANR	3982418	Symbol	execute_data -> func -> internal_function		3982383						
ANR	3982419	Function	zend_clean_and_cache_symbol_table	2039:0:63236:63621							
ANR	3982420	FunctionDef	zend_clean_and_cache_symbol_table (zend_array * symbol_table)		3982419	0					
ANR	3982421	CompoundStatement		2040:0:63320:63621	3982419	0					
ANR	3982422	IfStatement	if ( EG ( symtable_cache_ptr ) >= EG ( symtable_cache_limit ) )		3982419	0					
ANR	3982423	Condition	EG ( symtable_cache_ptr ) >= EG ( symtable_cache_limit )	2041:5:63327:63376	3982419	0	True				
ANR	3982424	RelationalExpression	EG ( symtable_cache_ptr ) >= EG ( symtable_cache_limit )		3982419	0		>=			
ANR	3982425	CallExpression	EG ( symtable_cache_ptr )		3982419	0					
ANR	3982426	Callee	EG		3982419	0					
ANR	3982427	Identifier	EG		3982419	0					
ANR	3982428	ArgumentList	symtable_cache_ptr		3982419	1					
ANR	3982429	Argument	symtable_cache_ptr		3982419	0					
ANR	3982430	Identifier	symtable_cache_ptr		3982419	0					
ANR	3982431	CallExpression	EG ( symtable_cache_limit )		3982419	1					
ANR	3982432	Callee	EG		3982419	0					
ANR	3982433	Identifier	EG		3982419	0					
ANR	3982434	ArgumentList	symtable_cache_limit		3982419	1					
ANR	3982435	Argument	symtable_cache_limit		3982419	0					
ANR	3982436	Identifier	symtable_cache_limit		3982419	0					
ANR	3982437	CompoundStatement		2:57:58:58	3982419	1					
ANR	3982438	ExpressionStatement	zend_array_destroy ( symbol_table )	2042:2:63383:63415	3982419	0	True				
ANR	3982439	CallExpression	zend_array_destroy ( symbol_table )		3982419	0					
ANR	3982440	Callee	zend_array_destroy		3982419	0					
ANR	3982441	Identifier	zend_array_destroy		3982419	0					
ANR	3982442	ArgumentList	symbol_table		3982419	1					
ANR	3982443	Argument	symbol_table		3982419	0					
ANR	3982444	Identifier	symbol_table		3982419	0					
ANR	3982445	ElseStatement	else		3982419	0					
ANR	3982446	CompoundStatement		4:8:104:104	3982419	0					
ANR	3982447	ExpressionStatement	zend_symtable_clean ( symbol_table )	2046:2:63537:63570	3982419	0	True				
ANR	3982448	CallExpression	zend_symtable_clean ( symbol_table )		3982419	0					
ANR	3982449	Callee	zend_symtable_clean		3982419	0					
ANR	3982450	Identifier	zend_symtable_clean		3982419	0					
ANR	3982451	ArgumentList	symbol_table		3982419	1					
ANR	3982452	Argument	symbol_table		3982419	0					
ANR	3982453	Identifier	symbol_table		3982419	0					
ANR	3982454	ExpressionStatement	* ( ++ EG ( symtable_cache_ptr ) ) = symbol_table	2047:2:63574:63616	3982419	1	True				
ANR	3982455	AssignmentExpression	* ( ++ EG ( symtable_cache_ptr ) ) = symbol_table		3982419	0		=			
ANR	3982456	UnaryOperationExpression	* ( ++ EG ( symtable_cache_ptr ) )		3982419	0					
ANR	3982457	UnaryOperator	*		3982419	0					
ANR	3982458	UnaryExpression	++ EG ( symtable_cache_ptr )		3982419	1					
ANR	3982459	IncDec	++		3982419	0					
ANR	3982460	CallExpression	EG ( symtable_cache_ptr )		3982419	1					
ANR	3982461	Callee	EG		3982419	0					
ANR	3982462	Identifier	EG		3982419	0					
ANR	3982463	ArgumentList	symtable_cache_ptr		3982419	1					
ANR	3982464	Argument	symtable_cache_ptr		3982419	0					
ANR	3982465	Identifier	symtable_cache_ptr		3982419	0					
ANR	3982466	Identifier	symbol_table		3982419	1					
ANR	3982467	ReturnType	ZEND_API void		3982419	1					
ANR	3982468	Identifier	zend_clean_and_cache_symbol_table		3982419	2					
ANR	3982469	ParameterList	zend_array * symbol_table		3982419	3					
ANR	3982470	Parameter	zend_array * symbol_table	2039:48:63284:63307	3982419	0	True				
ANR	3982471	ParameterType	zend_array *		3982419	0					
ANR	3982472	Identifier	symbol_table		3982419	1					
ANR	3982473	CFGEntryNode	ENTRY		3982419		True				
ANR	3982474	CFGExitNode	EXIT		3982419		True				
ANR	3982475	Symbol	EG		3982419						
ANR	3982476	Symbol	* ( ++ EG ( symtable_cache_ptr ) )		3982419						
ANR	3982477	Symbol	symtable_cache_ptr		3982419						
ANR	3982478	Symbol	symtable_cache_limit		3982419						
ANR	3982479	Symbol	symbol_table		3982419						
ANR	3982480	Symbol	* EG		3982419						
ANR	3982481	Function	i_free_compiled_variables	2052:0:63634:64057							
ANR	3982482	FunctionDef	i_free_compiled_variables (zend_execute_data * execute_data)		3982481	0					
ANR	3982483	CompoundStatement		2053:0:63734:64057	3982481	0					
ANR	3982484	IdentifierDeclStatement	zval * cv = EX_VAR_NUM ( 0 ) ;	2054:1:63737:63761	3982481	0	True				
ANR	3982485	IdentifierDecl	* cv = EX_VAR_NUM ( 0 )		3982481	0					
ANR	3982486	IdentifierDeclType	zval *		3982481	0					
ANR	3982487	Identifier	cv		3982481	1					
ANR	3982488	AssignmentExpression	* cv = EX_VAR_NUM ( 0 )		3982481	2		=			
ANR	3982489	Identifier	cv		3982481	0					
ANR	3982490	CallExpression	EX_VAR_NUM ( 0 )		3982481	1					
ANR	3982491	Callee	EX_VAR_NUM		3982481	0					
ANR	3982492	Identifier	EX_VAR_NUM		3982481	0					
ANR	3982493	ArgumentList	0		3982481	1					
ANR	3982494	Argument	0		3982481	0					
ANR	3982495	PrimaryExpression	0		3982481	0					
ANR	3982496	IdentifierDeclStatement	zval * end = cv + EX ( func ) -> op_array . last_var ;	2055:1:63764:63808	3982481	1	True				
ANR	3982497	IdentifierDecl	* end = cv + EX ( func ) -> op_array . last_var		3982481	0					
ANR	3982498	IdentifierDeclType	zval *		3982481	0					
ANR	3982499	Identifier	end		3982481	1					
ANR	3982500	AssignmentExpression	* end = cv + EX ( func ) -> op_array . last_var		3982481	2		=			
ANR	3982501	Identifier	end		3982481	0					
ANR	3982502	AdditiveExpression	cv + EX ( func ) -> op_array . last_var		3982481	1		+			
ANR	3982503	Identifier	cv		3982481	0					
ANR	3982504	MemberAccess	EX ( func ) -> op_array . last_var		3982481	1					
ANR	3982505	PtrMemberAccess	EX ( func ) -> op_array		3982481	0					
ANR	3982506	CallExpression	EX ( func )		3982481	0					
ANR	3982507	Callee	EX		3982481	0					
ANR	3982508	Identifier	EX		3982481	0					
ANR	3982509	ArgumentList	func		3982481	1					
ANR	3982510	Argument	func		3982481	0					
ANR	3982511	Identifier	func		3982481	0					
ANR	3982512	Identifier	op_array		3982481	1					
ANR	3982513	Identifier	last_var		3982481	1					
ANR	3982514	WhileStatement	while ( EXPECTED ( cv != end ) )		3982481	2					
ANR	3982515	Condition	EXPECTED ( cv != end )	2056:8:63818:63836	3982481	0	True				
ANR	3982516	CallExpression	EXPECTED ( cv != end )		3982481	0					
ANR	3982517	Callee	EXPECTED		3982481	0					
ANR	3982518	Identifier	EXPECTED		3982481	0					
ANR	3982519	ArgumentList	cv != end		3982481	1					
ANR	3982520	Argument	cv != end		3982481	0					
ANR	3982521	EqualityExpression	cv != end		3982481	0		!=			
ANR	3982522	Identifier	cv		3982481	0					
ANR	3982523	Identifier	end		3982481	1					
ANR	3982524	CompoundStatement		4:29:104:104	3982481	1					
ANR	3982525	IfStatement	if ( Z_REFCOUNTED_P ( cv ) )		3982481	0					
ANR	3982526	Condition	Z_REFCOUNTED_P ( cv )	2057:6:63847:63864	3982481	0	True				
ANR	3982527	CallExpression	Z_REFCOUNTED_P ( cv )		3982481	0					
ANR	3982528	Callee	Z_REFCOUNTED_P		3982481	0					
ANR	3982529	Identifier	Z_REFCOUNTED_P		3982481	0					
ANR	3982530	ArgumentList	cv		3982481	1					
ANR	3982531	Argument	cv		3982481	0					
ANR	3982532	Identifier	cv		3982481	0					
ANR	3982533	CompoundStatement		5:26:132:132	3982481	1					
ANR	3982534	IfStatement	if ( ! Z_DELREF_P ( cv ) )		3982481	0					
ANR	3982535	Condition	! Z_DELREF_P ( cv )	2058:7:63876:63890	3982481	0	True				
ANR	3982536	UnaryOperationExpression	! Z_DELREF_P ( cv )		3982481	0					
ANR	3982537	UnaryOperator	!		3982481	0					
ANR	3982538	CallExpression	Z_DELREF_P ( cv )		3982481	1					
ANR	3982539	Callee	Z_DELREF_P		3982481	0					
ANR	3982540	Identifier	Z_DELREF_P		3982481	0					
ANR	3982541	ArgumentList	cv		3982481	1					
ANR	3982542	Argument	cv		3982481	0					
ANR	3982543	Identifier	cv		3982481	0					
ANR	3982544	CompoundStatement		7:4:164:200	3982481	1					
ANR	3982545	IdentifierDeclStatement	zend_refcounted * r = Z_COUNTED_P ( cv ) ;	2059:4:63899:63935	3982481	0	True				
ANR	3982546	IdentifierDecl	* r = Z_COUNTED_P ( cv )		3982481	0					
ANR	3982547	IdentifierDeclType	zend_refcounted *		3982481	0					
ANR	3982548	Identifier	r		3982481	1					
ANR	3982549	AssignmentExpression	* r = Z_COUNTED_P ( cv )		3982481	2		=			
ANR	3982550	Identifier	r		3982481	0					
ANR	3982551	CallExpression	Z_COUNTED_P ( cv )		3982481	1					
ANR	3982552	Callee	Z_COUNTED_P		3982481	0					
ANR	3982553	Identifier	Z_COUNTED_P		3982481	0					
ANR	3982554	ArgumentList	cv		3982481	1					
ANR	3982555	Argument	cv		3982481	0					
ANR	3982556	Identifier	cv		3982481	0					
ANR	3982557	ExpressionStatement	ZVAL_NULL ( cv )	2060:4:63941:63954	3982481	1	True				
ANR	3982558	CallExpression	ZVAL_NULL ( cv )		3982481	0					
ANR	3982559	Callee	ZVAL_NULL		3982481	0					
ANR	3982560	Identifier	ZVAL_NULL		3982481	0					
ANR	3982561	ArgumentList	cv		3982481	1					
ANR	3982562	Argument	cv		3982481	0					
ANR	3982563	Identifier	cv		3982481	0					
ANR	3982564	ExpressionStatement	zval_dtor_func_for_ptr ( r )	2061:4:63960:63985	3982481	2	True				
ANR	3982565	CallExpression	zval_dtor_func_for_ptr ( r )		3982481	0					
ANR	3982566	Callee	zval_dtor_func_for_ptr		3982481	0					
ANR	3982567	Identifier	zval_dtor_func_for_ptr		3982481	0					
ANR	3982568	ArgumentList	r		3982481	1					
ANR	3982569	Argument	r		3982481	0					
ANR	3982570	Identifier	r		3982481	0					
ANR	3982571	ElseStatement	else		3982481	0					
ANR	3982572	CompoundStatement		10:10:262:262	3982481	0					
ANR	3982573	ExpressionStatement	GC_ZVAL_CHECK_POSSIBLE_ROOT ( cv )	2063:4:64003:64034	3982481	0	True				
ANR	3982574	CallExpression	GC_ZVAL_CHECK_POSSIBLE_ROOT ( cv )		3982481	0					
ANR	3982575	Callee	GC_ZVAL_CHECK_POSSIBLE_ROOT		3982481	0					
ANR	3982576	Identifier	GC_ZVAL_CHECK_POSSIBLE_ROOT		3982481	0					
ANR	3982577	ArgumentList	cv		3982481	1					
ANR	3982578	Argument	cv		3982481	0					
ANR	3982579	Identifier	cv		3982481	0					
ANR	3982580	ExpressionStatement	cv ++	2066:2:64047:64051	3982481	1	True				
ANR	3982581	PostIncDecOperationExpression	cv ++		3982481	0					
ANR	3982582	Identifier	cv		3982481	0					
ANR	3982583	IncDec	++		3982481	1					
ANR	3982584	ReturnType	static zend_always_inline void		3982481	1					
ANR	3982585	Identifier	i_free_compiled_variables		3982481	2					
ANR	3982586	ParameterList	zend_execute_data * execute_data		3982481	3					
ANR	3982587	Parameter	zend_execute_data * execute_data	2052:57:63691:63721	3982481	0	True				
ANR	3982588	ParameterType	zend_execute_data *		3982481	0					
ANR	3982589	Identifier	execute_data		3982481	1					
ANR	3982590	CFGEntryNode	ENTRY		3982481		True				
ANR	3982591	CFGExitNode	EXIT		3982481		True				
ANR	3982592	Symbol	Z_COUNTED_P		3982481						
ANR	3982593	Symbol	execute_data		3982481						
ANR	3982594	Symbol	EX ( func ) -> op_array		3982481						
ANR	3982595	Symbol	r		3982481						
ANR	3982596	Symbol	cv		3982481						
ANR	3982597	Symbol	EX		3982481						
ANR	3982598	Symbol	func		3982481						
ANR	3982599	Symbol	EX_VAR_NUM		3982481						
ANR	3982600	Symbol	Z_DELREF_P		3982481						
ANR	3982601	Symbol	EX ( func ) -> op_array . last_var		3982481						
ANR	3982602	Symbol	end		3982481						
ANR	3982603	Symbol	* EX		3982481						
ANR	3982604	Symbol	Z_REFCOUNTED_P		3982481						
ANR	3982605	Symbol	EXPECTED		3982481						
ANR	3982606	Function	zend_free_compiled_variables	2071:0:64070:64191							
ANR	3982607	FunctionDef	zend_free_compiled_variables (zend_execute_data * execute_data)		3982606	0					
ANR	3982608	CompoundStatement		2072:0:64147:64191	3982606	0					
ANR	3982609	ExpressionStatement	i_free_compiled_variables ( execute_data )	2073:1:64150:64189	3982606	0	True				
ANR	3982610	CallExpression	i_free_compiled_variables ( execute_data )		3982606	0					
ANR	3982611	Callee	i_free_compiled_variables		3982606	0					
ANR	3982612	Identifier	i_free_compiled_variables		3982606	0					
ANR	3982613	ArgumentList	execute_data		3982606	1					
ANR	3982614	Argument	execute_data		3982606	0					
ANR	3982615	Identifier	execute_data		3982606	0					
ANR	3982616	ReturnType	void		3982606	1					
ANR	3982617	Identifier	zend_free_compiled_variables		3982606	2					
ANR	3982618	ParameterList	zend_execute_data * execute_data		3982606	3					
ANR	3982619	Parameter	zend_execute_data * execute_data	2071:34:64104:64134	3982606	0	True				
ANR	3982620	ParameterType	zend_execute_data *		3982606	0					
ANR	3982621	Identifier	execute_data		3982606	1					
ANR	3982622	CFGEntryNode	ENTRY		3982606		True				
ANR	3982623	CFGExitNode	EXIT		3982606		True				
ANR	3982624	Symbol	execute_data		3982606						
ANR	3982625	Function	i_init_func_execute_data	2108:0:65535:67743							
ANR	3982626	FunctionDef	"i_init_func_execute_data (zend_execute_data * execute_data , zend_op_array * op_array , zval * return_value , int check_this)"		3982625	0					
ANR	3982627	CompoundStatement		2109:0:65695:67743	3982625	0					
ANR	3982628	IdentifierDeclStatement	"uint32_t first_extra_arg , num_args ;"	2110:1:65698:65732	3982625	0	True				
ANR	3982629	IdentifierDecl	first_extra_arg		3982625	0					
ANR	3982630	IdentifierDeclType	uint32_t		3982625	0					
ANR	3982631	Identifier	first_extra_arg		3982625	1					
ANR	3982632	IdentifierDecl	num_args		3982625	1					
ANR	3982633	IdentifierDeclType	uint32_t		3982625	0					
ANR	3982634	Identifier	num_args		3982625	1					
ANR	3982635	ExpressionStatement	ZEND_ASSERT ( EX ( func ) == ( zend_function * ) op_array )	2111:1:65735:65784	3982625	1	True				
ANR	3982636	CallExpression	ZEND_ASSERT ( EX ( func ) == ( zend_function * ) op_array )		3982625	0					
ANR	3982637	Callee	ZEND_ASSERT		3982625	0					
ANR	3982638	Identifier	ZEND_ASSERT		3982625	0					
ANR	3982639	ArgumentList	EX ( func ) == ( zend_function * ) op_array		3982625	1					
ANR	3982640	Argument	EX ( func ) == ( zend_function * ) op_array		3982625	0					
ANR	3982641	EqualityExpression	EX ( func ) == ( zend_function * ) op_array		3982625	0		==			
ANR	3982642	CallExpression	EX ( func )		3982625	0					
ANR	3982643	Callee	EX		3982625	0					
ANR	3982644	Identifier	EX		3982625	0					
ANR	3982645	ArgumentList	func		3982625	1					
ANR	3982646	Argument	func		3982625	0					
ANR	3982647	Identifier	func		3982625	0					
ANR	3982648	CastExpression	( zend_function * ) op_array		3982625	1					
ANR	3982649	CastTarget	zend_function *		3982625	0					
ANR	3982650	Identifier	op_array		3982625	1					
ANR	3982651	ExpressionStatement	EX ( opline ) = op_array -> opcodes	2113:1:65788:65818	3982625	2	True				
ANR	3982652	AssignmentExpression	EX ( opline ) = op_array -> opcodes		3982625	0		=			
ANR	3982653	CallExpression	EX ( opline )		3982625	0					
ANR	3982654	Callee	EX		3982625	0					
ANR	3982655	Identifier	EX		3982625	0					
ANR	3982656	ArgumentList	opline		3982625	1					
ANR	3982657	Argument	opline		3982625	0					
ANR	3982658	Identifier	opline		3982625	0					
ANR	3982659	PtrMemberAccess	op_array -> opcodes		3982625	1					
ANR	3982660	Identifier	op_array		3982625	0					
ANR	3982661	Identifier	opcodes		3982625	1					
ANR	3982662	ExpressionStatement	EX ( call ) = NULL	2114:1:65821:65836	3982625	3	True				
ANR	3982663	AssignmentExpression	EX ( call ) = NULL		3982625	0		=			
ANR	3982664	CallExpression	EX ( call )		3982625	0					
ANR	3982665	Callee	EX		3982625	0					
ANR	3982666	Identifier	EX		3982625	0					
ANR	3982667	ArgumentList	call		3982625	1					
ANR	3982668	Argument	call		3982625	0					
ANR	3982669	Identifier	call		3982625	0					
ANR	3982670	Identifier	NULL		3982625	1					
ANR	3982671	ExpressionStatement	EX ( return_value ) = return_value	2115:1:65839:65870	3982625	4	True				
ANR	3982672	AssignmentExpression	EX ( return_value ) = return_value		3982625	0		=			
ANR	3982673	CallExpression	EX ( return_value )		3982625	0					
ANR	3982674	Callee	EX		3982625	0					
ANR	3982675	Identifier	EX		3982625	0					
ANR	3982676	ArgumentList	return_value		3982625	1					
ANR	3982677	Argument	return_value		3982625	0					
ANR	3982678	Identifier	return_value		3982625	0					
ANR	3982679	Identifier	return_value		3982625	1					
ANR	3982680	ExpressionStatement	first_extra_arg = op_array -> num_args	2118:1:65898:65934	3982625	5	True				
ANR	3982681	AssignmentExpression	first_extra_arg = op_array -> num_args		3982625	0		=			
ANR	3982682	Identifier	first_extra_arg		3982625	0					
ANR	3982683	PtrMemberAccess	op_array -> num_args		3982625	1					
ANR	3982684	Identifier	op_array		3982625	0					
ANR	3982685	Identifier	num_args		3982625	1					
ANR	3982686	ExpressionStatement	num_args = EX_NUM_ARGS ( )	2119:1:65937:65961	3982625	6	True				
ANR	3982687	AssignmentExpression	num_args = EX_NUM_ARGS ( )		3982625	0		=			
ANR	3982688	Identifier	num_args		3982625	0					
ANR	3982689	CallExpression	EX_NUM_ARGS ( )		3982625	1					
ANR	3982690	Callee	EX_NUM_ARGS		3982625	0					
ANR	3982691	Identifier	EX_NUM_ARGS		3982625	0					
ANR	3982692	ArgumentList			3982625	1					
ANR	3982693	IfStatement	if ( UNEXPECTED ( num_args > first_extra_arg ) )		3982625	7					
ANR	3982694	Condition	UNEXPECTED ( num_args > first_extra_arg )	2120:5:65968:66005	3982625	0	True				
ANR	3982695	CallExpression	UNEXPECTED ( num_args > first_extra_arg )		3982625	0					
ANR	3982696	Callee	UNEXPECTED		3982625	0					
ANR	3982697	Identifier	UNEXPECTED		3982625	0					
ANR	3982698	ArgumentList	num_args > first_extra_arg		3982625	1					
ANR	3982699	Argument	num_args > first_extra_arg		3982625	0					
ANR	3982700	RelationalExpression	num_args > first_extra_arg		3982625	0		>			
ANR	3982701	Identifier	num_args		3982625	0					
ANR	3982702	Identifier	first_extra_arg		3982625	1					
ANR	3982703	CompoundStatement		14:2:341:364	3982625	1					
ANR	3982704	IdentifierDeclStatement	"zval * end , * src , * dst ;"	2121:2:66012:66033	3982625	0	True				
ANR	3982705	IdentifierDecl	* end		3982625	0					
ANR	3982706	IdentifierDeclType	zval *		3982625	0					
ANR	3982707	Identifier	end		3982625	1					
ANR	3982708	IdentifierDecl	* src		3982625	1					
ANR	3982709	IdentifierDeclType	zval *		3982625	0					
ANR	3982710	Identifier	src		3982625	1					
ANR	3982711	IdentifierDecl	* dst		3982625	2					
ANR	3982712	IdentifierDeclType	zval *		3982625	0					
ANR	3982713	Identifier	dst		3982625	1					
ANR	3982714	IdentifierDeclStatement	uint32_t type_flags = 0 ;	2122:2:66037:66060	3982625	1	True				
ANR	3982715	IdentifierDecl	type_flags = 0		3982625	0					
ANR	3982716	IdentifierDeclType	uint32_t		3982625	0					
ANR	3982717	Identifier	type_flags		3982625	1					
ANR	3982718	AssignmentExpression	type_flags = 0		3982625	2		=			
ANR	3982719	Identifier	type_flags		3982625	0					
ANR	3982720	PrimaryExpression	0		3982625	1					
ANR	3982721	IfStatement	if ( EXPECTED ( ( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0 ) )		3982625	2					
ANR	3982722	Condition	EXPECTED ( ( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0 )	2124:6:66069:66129	3982625	0	True				
ANR	3982723	CallExpression	EXPECTED ( ( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0 )		3982625	0					
ANR	3982724	Callee	EXPECTED		3982625	0					
ANR	3982725	Identifier	EXPECTED		3982625	0					
ANR	3982726	ArgumentList	( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0		3982625	1					
ANR	3982727	Argument	( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0		3982625	0					
ANR	3982728	EqualityExpression	( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0		3982625	0		==			
ANR	3982729	BitAndExpression	op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS		3982625	0		&			
ANR	3982730	PtrMemberAccess	op_array -> fn_flags		3982625	0					
ANR	3982731	Identifier	op_array		3982625	0					
ANR	3982732	Identifier	fn_flags		3982625	1					
ANR	3982733	Identifier	ZEND_ACC_HAS_TYPE_HINTS		3982625	1					
ANR	3982734	PrimaryExpression	0		3982625	1					
ANR	3982735	CompoundStatement		16:69:436:436	3982625	1					
ANR	3982736	ExpressionStatement	EX ( opline ) += first_extra_arg	2126:3:66196:66225	3982625	0	True				
ANR	3982737	AssignmentExpression	EX ( opline ) += first_extra_arg		3982625	0		+=			
ANR	3982738	CallExpression	EX ( opline )		3982625	0					
ANR	3982739	Callee	EX		3982625	0					
ANR	3982740	Identifier	EX		3982625	0					
ANR	3982741	ArgumentList	opline		3982625	1					
ANR	3982742	Argument	opline		3982625	0					
ANR	3982743	Identifier	opline		3982625	0					
ANR	3982744	Identifier	first_extra_arg		3982625	1					
ANR	3982745	ExpressionStatement	end = EX_VAR_NUM ( first_extra_arg - 1 )	2130:2:66304:66341	3982625	3	True				
ANR	3982746	AssignmentExpression	end = EX_VAR_NUM ( first_extra_arg - 1 )		3982625	0		=			
ANR	3982747	Identifier	end		3982625	0					
ANR	3982748	CallExpression	EX_VAR_NUM ( first_extra_arg - 1 )		3982625	1					
ANR	3982749	Callee	EX_VAR_NUM		3982625	0					
ANR	3982750	Identifier	EX_VAR_NUM		3982625	0					
ANR	3982751	ArgumentList	first_extra_arg - 1		3982625	1					
ANR	3982752	Argument	first_extra_arg - 1		3982625	0					
ANR	3982753	AdditiveExpression	first_extra_arg - 1		3982625	0		-			
ANR	3982754	Identifier	first_extra_arg		3982625	0					
ANR	3982755	PrimaryExpression	1		3982625	1					
ANR	3982756	ExpressionStatement	src = end + ( num_args - first_extra_arg )	2131:2:66345:66385	3982625	4	True				
ANR	3982757	AssignmentExpression	src = end + ( num_args - first_extra_arg )		3982625	0		=			
ANR	3982758	Identifier	src		3982625	0					
ANR	3982759	AdditiveExpression	end + ( num_args - first_extra_arg )		3982625	1		+			
ANR	3982760	Identifier	end		3982625	0					
ANR	3982761	AdditiveExpression	num_args - first_extra_arg		3982625	1		-			
ANR	3982762	Identifier	num_args		3982625	0					
ANR	3982763	Identifier	first_extra_arg		3982625	1					
ANR	3982764	ExpressionStatement	dst = src + ( op_array -> last_var + op_array -> T - first_extra_arg )	2132:2:66389:66453	3982625	5	True				
ANR	3982765	AssignmentExpression	dst = src + ( op_array -> last_var + op_array -> T - first_extra_arg )		3982625	0		=			
ANR	3982766	Identifier	dst		3982625	0					
ANR	3982767	AdditiveExpression	src + ( op_array -> last_var + op_array -> T - first_extra_arg )		3982625	1		+			
ANR	3982768	Identifier	src		3982625	0					
ANR	3982769	AdditiveExpression	op_array -> last_var + op_array -> T - first_extra_arg		3982625	1		+			
ANR	3982770	PtrMemberAccess	op_array -> last_var		3982625	0					
ANR	3982771	Identifier	op_array		3982625	0					
ANR	3982772	Identifier	last_var		3982625	1					
ANR	3982773	AdditiveExpression	op_array -> T - first_extra_arg		3982625	1		-			
ANR	3982774	PtrMemberAccess	op_array -> T		3982625	0					
ANR	3982775	Identifier	op_array		3982625	0					
ANR	3982776	Identifier	T		3982625	1					
ANR	3982777	Identifier	first_extra_arg		3982625	1					
ANR	3982778	IfStatement	if ( EXPECTED ( src != dst ) )		3982625	6					
ANR	3982779	Condition	EXPECTED ( src != dst )	2133:6:66461:66480	3982625	0	True				
ANR	3982780	CallExpression	EXPECTED ( src != dst )		3982625	0					
ANR	3982781	Callee	EXPECTED		3982625	0					
ANR	3982782	Identifier	EXPECTED		3982625	0					
ANR	3982783	ArgumentList	src != dst		3982625	1					
ANR	3982784	Argument	src != dst		3982625	0					
ANR	3982785	EqualityExpression	src != dst		3982625	0		!=			
ANR	3982786	Identifier	src		3982625	0					
ANR	3982787	Identifier	dst		3982625	1					
ANR	3982788	CompoundStatement		25:28:787:787	3982625	1					
ANR	3982789	DoStatement	do		3982625	0					
ANR	3982790	CompoundStatement		26:6:795:795	3982625	0					
ANR	3982791	ExpressionStatement	type_flags |= Z_TYPE_INFO_P ( src )	2135:4:66497:66529	3982625	0	True				
ANR	3982792	AssignmentExpression	type_flags |= Z_TYPE_INFO_P ( src )		3982625	0		|=			
ANR	3982793	Identifier	type_flags		3982625	0					
ANR	3982794	CallExpression	Z_TYPE_INFO_P ( src )		3982625	1					
ANR	3982795	Callee	Z_TYPE_INFO_P		3982625	0					
ANR	3982796	Identifier	Z_TYPE_INFO_P		3982625	0					
ANR	3982797	ArgumentList	src		3982625	1					
ANR	3982798	Argument	src		3982625	0					
ANR	3982799	Identifier	src		3982625	0					
ANR	3982800	ExpressionStatement	"ZVAL_COPY_VALUE ( dst , src )"	2136:4:66535:66560	3982625	1	True				
ANR	3982801	CallExpression	"ZVAL_COPY_VALUE ( dst , src )"		3982625	0					
ANR	3982802	Callee	ZVAL_COPY_VALUE		3982625	0					
ANR	3982803	Identifier	ZVAL_COPY_VALUE		3982625	0					
ANR	3982804	ArgumentList	dst		3982625	1					
ANR	3982805	Argument	dst		3982625	0					
ANR	3982806	Identifier	dst		3982625	0					
ANR	3982807	Argument	src		3982625	1					
ANR	3982808	Identifier	src		3982625	0					
ANR	3982809	ExpressionStatement	ZVAL_UNDEF ( src )	2137:4:66566:66581	3982625	2	True				
ANR	3982810	CallExpression	ZVAL_UNDEF ( src )		3982625	0					
ANR	3982811	Callee	ZVAL_UNDEF		3982625	0					
ANR	3982812	Identifier	ZVAL_UNDEF		3982625	0					
ANR	3982813	ArgumentList	src		3982625	1					
ANR	3982814	Argument	src		3982625	0					
ANR	3982815	Identifier	src		3982625	0					
ANR	3982816	ExpressionStatement	src --	2138:4:66587:66592	3982625	3	True				
ANR	3982817	PostIncDecOperationExpression	src --		3982625	0					
ANR	3982818	Identifier	src		3982625	0					
ANR	3982819	IncDec	--		3982625	1					
ANR	3982820	ExpressionStatement	dst --	2139:4:66598:66603	3982625	4	True				
ANR	3982821	PostIncDecOperationExpression	dst --		3982625	0					
ANR	3982822	Identifier	dst		3982625	0					
ANR	3982823	IncDec	--		3982625	1					
ANR	3982824	Condition	src != end	2140:12:66617:66626	3982625	1	True				
ANR	3982825	EqualityExpression	src != end		3982625	0		!=			
ANR	3982826	Identifier	src		3982625	0					
ANR	3982827	Identifier	end		3982625	1					
ANR	3982828	ElseStatement	else		3982625	0					
ANR	3982829	CompoundStatement		33:9:943:943	3982625	0					
ANR	3982830	DoStatement	do		3982625	0					
ANR	3982831	CompoundStatement		34:6:951:951	3982625	0					
ANR	3982832	ExpressionStatement	type_flags |= Z_TYPE_INFO_P ( src )	2143:4:66653:66685	3982625	0	True				
ANR	3982833	AssignmentExpression	type_flags |= Z_TYPE_INFO_P ( src )		3982625	0		|=			
ANR	3982834	Identifier	type_flags		3982625	0					
ANR	3982835	CallExpression	Z_TYPE_INFO_P ( src )		3982625	1					
ANR	3982836	Callee	Z_TYPE_INFO_P		3982625	0					
ANR	3982837	Identifier	Z_TYPE_INFO_P		3982625	0					
ANR	3982838	ArgumentList	src		3982625	1					
ANR	3982839	Argument	src		3982625	0					
ANR	3982840	Identifier	src		3982625	0					
ANR	3982841	ExpressionStatement	src --	2144:4:66691:66696	3982625	1	True				
ANR	3982842	PostIncDecOperationExpression	src --		3982625	0					
ANR	3982843	Identifier	src		3982625	0					
ANR	3982844	IncDec	--		3982625	1					
ANR	3982845	Condition	src != end	2145:12:66710:66719	3982625	1	True				
ANR	3982846	EqualityExpression	src != end		3982625	0		!=			
ANR	3982847	Identifier	src		3982625	0					
ANR	3982848	Identifier	end		3982625	1					
ANR	3982849	ExpressionStatement	"ZEND_ADD_CALL_FLAG ( execute_data , ( ( type_flags >> Z_TYPE_FLAGS_SHIFT ) & IS_TYPE_REFCOUNTED ) )"	2147:2:66729:66820	3982625	7	True				
ANR	3982850	CallExpression	"ZEND_ADD_CALL_FLAG ( execute_data , ( ( type_flags >> Z_TYPE_FLAGS_SHIFT ) & IS_TYPE_REFCOUNTED ) )"		3982625	0					
ANR	3982851	Callee	ZEND_ADD_CALL_FLAG		3982625	0					
ANR	3982852	Identifier	ZEND_ADD_CALL_FLAG		3982625	0					
ANR	3982853	ArgumentList	execute_data		3982625	1					
ANR	3982854	Argument	execute_data		3982625	0					
ANR	3982855	Identifier	execute_data		3982625	0					
ANR	3982856	Argument	( type_flags >> Z_TYPE_FLAGS_SHIFT ) & IS_TYPE_REFCOUNTED		3982625	1					
ANR	3982857	BitAndExpression	( type_flags >> Z_TYPE_FLAGS_SHIFT ) & IS_TYPE_REFCOUNTED		3982625	0		&			
ANR	3982858	ShiftExpression	type_flags >> Z_TYPE_FLAGS_SHIFT		3982625	0		>>			
ANR	3982859	Identifier	type_flags		3982625	0					
ANR	3982860	Identifier	Z_TYPE_FLAGS_SHIFT		3982625	1					
ANR	3982861	Identifier	IS_TYPE_REFCOUNTED		3982625	1					
ANR	3982862	ElseStatement	else		3982625	0					
ANR	3982863	IfStatement	if ( EXPECTED ( ( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0 ) )		3982625	0					
ANR	3982864	Condition	EXPECTED ( ( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0 )	2148:12:66834:66894	3982625	0	True				
ANR	3982865	CallExpression	EXPECTED ( ( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0 )		3982625	0					
ANR	3982866	Callee	EXPECTED		3982625	0					
ANR	3982867	Identifier	EXPECTED		3982625	0					
ANR	3982868	ArgumentList	( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0		3982625	1					
ANR	3982869	Argument	( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0		3982625	0					
ANR	3982870	EqualityExpression	( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0		3982625	0		==			
ANR	3982871	BitAndExpression	op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS		3982625	0		&			
ANR	3982872	PtrMemberAccess	op_array -> fn_flags		3982625	0					
ANR	3982873	Identifier	op_array		3982625	0					
ANR	3982874	Identifier	fn_flags		3982625	1					
ANR	3982875	Identifier	ZEND_ACC_HAS_TYPE_HINTS		3982625	1					
ANR	3982876	PrimaryExpression	0		3982625	1					
ANR	3982877	CompoundStatement		40:75:1201:1201	3982625	1					
ANR	3982878	ExpressionStatement	EX ( opline ) += num_args	2150:2:66959:66981	3982625	0	True				
ANR	3982879	AssignmentExpression	EX ( opline ) += num_args		3982625	0		+=			
ANR	3982880	CallExpression	EX ( opline )		3982625	0					
ANR	3982881	Callee	EX		3982625	0					
ANR	3982882	Identifier	EX		3982625	0					
ANR	3982883	ArgumentList	opline		3982625	1					
ANR	3982884	Argument	opline		3982625	0					
ANR	3982885	Identifier	opline		3982625	0					
ANR	3982886	Identifier	num_args		3982625	1					
ANR	3982887	IfStatement	if ( EXPECTED ( ( int ) num_args < op_array -> last_var ) )		3982625	8					
ANR	3982888	Condition	EXPECTED ( ( int ) num_args < op_array -> last_var )	2154:5:67040:67083	3982625	0	True				
ANR	3982889	CallExpression	EXPECTED ( ( int ) num_args < op_array -> last_var )		3982625	0					
ANR	3982890	Callee	EXPECTED		3982625	0					
ANR	3982891	Identifier	EXPECTED		3982625	0					
ANR	3982892	ArgumentList	( int ) num_args < op_array -> last_var		3982625	1					
ANR	3982893	Argument	( int ) num_args < op_array -> last_var		3982625	0					
ANR	3982894	RelationalExpression	( int ) num_args < op_array -> last_var		3982625	0		<			
ANR	3982895	CastExpression	( int ) num_args		3982625	0					
ANR	3982896	CastTarget	int		3982625	0					
ANR	3982897	Identifier	num_args		3982625	1					
ANR	3982898	PtrMemberAccess	op_array -> last_var		3982625	1					
ANR	3982899	Identifier	op_array		3982625	0					
ANR	3982900	Identifier	last_var		3982625	1					
ANR	3982901	CompoundStatement		48:2:1430:1472	3982625	1					
ANR	3982902	IdentifierDeclStatement	zval * var = EX_VAR_NUM ( num_args ) ;	2155:2:67090:67122	3982625	0	True				
ANR	3982903	IdentifierDecl	* var = EX_VAR_NUM ( num_args )		3982625	0					
ANR	3982904	IdentifierDeclType	zval *		3982625	0					
ANR	3982905	Identifier	var		3982625	1					
ANR	3982906	AssignmentExpression	* var = EX_VAR_NUM ( num_args )		3982625	2		=			
ANR	3982907	Identifier	var		3982625	0					
ANR	3982908	CallExpression	EX_VAR_NUM ( num_args )		3982625	1					
ANR	3982909	Callee	EX_VAR_NUM		3982625	0					
ANR	3982910	Identifier	EX_VAR_NUM		3982625	0					
ANR	3982911	ArgumentList	num_args		3982625	1					
ANR	3982912	Argument	num_args		3982625	0					
ANR	3982913	Identifier	num_args		3982625	0					
ANR	3982914	IdentifierDeclStatement	zval * end = EX_VAR_NUM ( op_array -> last_var ) ;	2156:2:67126:67168	3982625	1	True				
ANR	3982915	IdentifierDecl	* end = EX_VAR_NUM ( op_array -> last_var )		3982625	0					
ANR	3982916	IdentifierDeclType	zval *		3982625	0					
ANR	3982917	Identifier	end		3982625	1					
ANR	3982918	AssignmentExpression	* end = EX_VAR_NUM ( op_array -> last_var )		3982625	2		=			
ANR	3982919	Identifier	end		3982625	0					
ANR	3982920	CallExpression	EX_VAR_NUM ( op_array -> last_var )		3982625	1					
ANR	3982921	Callee	EX_VAR_NUM		3982625	0					
ANR	3982922	Identifier	EX_VAR_NUM		3982625	0					
ANR	3982923	ArgumentList	op_array -> last_var		3982625	1					
ANR	3982924	Argument	op_array -> last_var		3982625	0					
ANR	3982925	PtrMemberAccess	op_array -> last_var		3982625	0					
ANR	3982926	Identifier	op_array		3982625	0					
ANR	3982927	Identifier	last_var		3982625	1					
ANR	3982928	DoStatement	do		3982625	2					
ANR	3982929	CompoundStatement		50:5:1480:1480	3982625	0					
ANR	3982930	ExpressionStatement	ZVAL_UNDEF ( var )	2159:3:67181:67196	3982625	0	True				
ANR	3982931	CallExpression	ZVAL_UNDEF ( var )		3982625	0					
ANR	3982932	Callee	ZVAL_UNDEF		3982625	0					
ANR	3982933	Identifier	ZVAL_UNDEF		3982625	0					
ANR	3982934	ArgumentList	var		3982625	1					
ANR	3982935	Argument	var		3982625	0					
ANR	3982936	Identifier	var		3982625	0					
ANR	3982937	ExpressionStatement	var ++	2160:3:67201:67206	3982625	1	True				
ANR	3982938	PostIncDecOperationExpression	var ++		3982625	0					
ANR	3982939	Identifier	var		3982625	0					
ANR	3982940	IncDec	++		3982625	1					
ANR	3982941	Condition	var != end	2161:11:67219:67228	3982625	1	True				
ANR	3982942	EqualityExpression	var != end		3982625	0		!=			
ANR	3982943	Identifier	var		3982625	0					
ANR	3982944	Identifier	end		3982625	1					
ANR	3982945	IfStatement	if ( check_this && op_array -> this_var != ( uint32_t ) - 1 && EXPECTED ( Z_OBJ ( EX ( This ) ) ) )		3982625	9					
ANR	3982946	Condition	check_this && op_array -> this_var != ( uint32_t ) - 1 && EXPECTED ( Z_OBJ ( EX ( This ) ) )	2164:5:67241:67317	3982625	0	True				
ANR	3982947	AndExpression	check_this && op_array -> this_var != ( uint32_t ) - 1 && EXPECTED ( Z_OBJ ( EX ( This ) ) )		3982625	0		&&			
ANR	3982948	Identifier	check_this		3982625	0					
ANR	3982949	AndExpression	op_array -> this_var != ( uint32_t ) - 1 && EXPECTED ( Z_OBJ ( EX ( This ) ) )		3982625	1		&&			
ANR	3982950	EqualityExpression	op_array -> this_var != ( uint32_t ) - 1		3982625	0		!=			
ANR	3982951	PtrMemberAccess	op_array -> this_var		3982625	0					
ANR	3982952	Identifier	op_array		3982625	0					
ANR	3982953	Identifier	this_var		3982625	1					
ANR	3982954	CastExpression	( uint32_t ) - 1		3982625	1					
ANR	3982955	CastTarget	uint32_t		3982625	0					
ANR	3982956	UnaryOperationExpression	- 1		3982625	1					
ANR	3982957	UnaryOperator	-		3982625	0					
ANR	3982958	PrimaryExpression	1		3982625	1					
ANR	3982959	CallExpression	EXPECTED ( Z_OBJ ( EX ( This ) ) )		3982625	1					
ANR	3982960	Callee	EXPECTED		3982625	0					
ANR	3982961	Identifier	EXPECTED		3982625	0					
ANR	3982962	ArgumentList	Z_OBJ ( EX ( This ) )		3982625	1					
ANR	3982963	Argument	Z_OBJ ( EX ( This ) )		3982625	0					
ANR	3982964	CallExpression	Z_OBJ ( EX ( This ) )		3982625	0					
ANR	3982965	Callee	Z_OBJ		3982625	0					
ANR	3982966	Identifier	Z_OBJ		3982625	0					
ANR	3982967	ArgumentList	EX ( This )		3982625	1					
ANR	3982968	Argument	EX ( This )		3982625	0					
ANR	3982969	CallExpression	EX ( This )		3982625	0					
ANR	3982970	Callee	EX		3982625	0					
ANR	3982971	Identifier	EX		3982625	0					
ANR	3982972	ArgumentList	This		3982625	1					
ANR	3982973	Argument	This		3982625	0					
ANR	3982974	Identifier	This		3982625	0					
ANR	3982975	CompoundStatement		56:84:1624:1624	3982625	1					
ANR	3982976	ExpressionStatement	"ZVAL_OBJ ( EX_VAR ( op_array -> this_var ) , Z_OBJ ( EX ( This ) ) )"	2165:2:67324:67377	3982625	0	True				
ANR	3982977	CallExpression	"ZVAL_OBJ ( EX_VAR ( op_array -> this_var ) , Z_OBJ ( EX ( This ) ) )"		3982625	0					
ANR	3982978	Callee	ZVAL_OBJ		3982625	0					
ANR	3982979	Identifier	ZVAL_OBJ		3982625	0					
ANR	3982980	ArgumentList	EX_VAR ( op_array -> this_var )		3982625	1					
ANR	3982981	Argument	EX_VAR ( op_array -> this_var )		3982625	0					
ANR	3982982	CallExpression	EX_VAR ( op_array -> this_var )		3982625	0					
ANR	3982983	Callee	EX_VAR		3982625	0					
ANR	3982984	Identifier	EX_VAR		3982625	0					
ANR	3982985	ArgumentList	op_array -> this_var		3982625	1					
ANR	3982986	Argument	op_array -> this_var		3982625	0					
ANR	3982987	PtrMemberAccess	op_array -> this_var		3982625	0					
ANR	3982988	Identifier	op_array		3982625	0					
ANR	3982989	Identifier	this_var		3982625	1					
ANR	3982990	Argument	Z_OBJ ( EX ( This ) )		3982625	1					
ANR	3982991	CallExpression	Z_OBJ ( EX ( This ) )		3982625	0					
ANR	3982992	Callee	Z_OBJ		3982625	0					
ANR	3982993	Identifier	Z_OBJ		3982625	0					
ANR	3982994	ArgumentList	EX ( This )		3982625	1					
ANR	3982995	Argument	EX ( This )		3982625	0					
ANR	3982996	CallExpression	EX ( This )		3982625	0					
ANR	3982997	Callee	EX		3982625	0					
ANR	3982998	Identifier	EX		3982625	0					
ANR	3982999	ArgumentList	This		3982625	1					
ANR	3983000	Argument	This		3982625	0					
ANR	3983001	Identifier	This		3982625	0					
ANR	3983002	ExpressionStatement	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) ) ++	2166:2:67381:67411	3982625	1	True				
ANR	3983003	PostIncDecOperationExpression	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) ) ++		3982625	0					
ANR	3983004	CallExpression	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) )		3982625	0					
ANR	3983005	Callee	GC_REFCOUNT		3982625	0					
ANR	3983006	Identifier	GC_REFCOUNT		3982625	0					
ANR	3983007	ArgumentList	Z_OBJ ( EX ( This ) )		3982625	1					
ANR	3983008	Argument	Z_OBJ ( EX ( This ) )		3982625	0					
ANR	3983009	CallExpression	Z_OBJ ( EX ( This ) )		3982625	0					
ANR	3983010	Callee	Z_OBJ		3982625	0					
ANR	3983011	Identifier	Z_OBJ		3982625	0					
ANR	3983012	ArgumentList	EX ( This )		3982625	1					
ANR	3983013	Argument	EX ( This )		3982625	0					
ANR	3983014	CallExpression	EX ( This )		3982625	0					
ANR	3983015	Callee	EX		3982625	0					
ANR	3983016	Identifier	EX		3982625	0					
ANR	3983017	ArgumentList	This		3982625	1					
ANR	3983018	Argument	This		3982625	0					
ANR	3983019	Identifier	This		3982625	0					
ANR	3983020	IncDec	++		3982625	1					
ANR	3983021	IfStatement	if ( UNEXPECTED ( ! op_array -> run_time_cache ) )		3982625	10					
ANR	3983022	Condition	UNEXPECTED ( ! op_array -> run_time_cache )	2169:5:67422:67458	3982625	0	True				
ANR	3983023	CallExpression	UNEXPECTED ( ! op_array -> run_time_cache )		3982625	0					
ANR	3983024	Callee	UNEXPECTED		3982625	0					
ANR	3983025	Identifier	UNEXPECTED		3982625	0					
ANR	3983026	ArgumentList	! op_array -> run_time_cache		3982625	1					
ANR	3983027	Argument	! op_array -> run_time_cache		3982625	0					
ANR	3983028	UnaryOperationExpression	! op_array -> run_time_cache		3982625	0					
ANR	3983029	UnaryOperator	!		3982625	0					
ANR	3983030	PtrMemberAccess	op_array -> run_time_cache		3982625	1					
ANR	3983031	Identifier	op_array		3982625	0					
ANR	3983032	Identifier	run_time_cache		3982625	1					
ANR	3983033	CompoundStatement		61:44:1765:1765	3982625	1					
ANR	3983034	ExpressionStatement	"op_array -> run_time_cache = zend_arena_alloc ( & CG ( arena ) , op_array -> cache_size )"	2170:2:67465:67542	3982625	0	True				
ANR	3983035	AssignmentExpression	"op_array -> run_time_cache = zend_arena_alloc ( & CG ( arena ) , op_array -> cache_size )"		3982625	0		=			
ANR	3983036	PtrMemberAccess	op_array -> run_time_cache		3982625	0					
ANR	3983037	Identifier	op_array		3982625	0					
ANR	3983038	Identifier	run_time_cache		3982625	1					
ANR	3983039	CallExpression	"zend_arena_alloc ( & CG ( arena ) , op_array -> cache_size )"		3982625	1					
ANR	3983040	Callee	zend_arena_alloc		3982625	0					
ANR	3983041	Identifier	zend_arena_alloc		3982625	0					
ANR	3983042	ArgumentList	& CG ( arena )		3982625	1					
ANR	3983043	Argument	& CG ( arena )		3982625	0					
ANR	3983044	UnaryOperationExpression	& CG ( arena )		3982625	0					
ANR	3983045	UnaryOperator	&		3982625	0					
ANR	3983046	CallExpression	CG ( arena )		3982625	1					
ANR	3983047	Callee	CG		3982625	0					
ANR	3983048	Identifier	CG		3982625	0					
ANR	3983049	ArgumentList	arena		3982625	1					
ANR	3983050	Argument	arena		3982625	0					
ANR	3983051	Identifier	arena		3982625	0					
ANR	3983052	Argument	op_array -> cache_size		3982625	1					
ANR	3983053	PtrMemberAccess	op_array -> cache_size		3982625	0					
ANR	3983054	Identifier	op_array		3982625	0					
ANR	3983055	Identifier	cache_size		3982625	1					
ANR	3983056	ExpressionStatement	"memset ( op_array -> run_time_cache , 0 , op_array -> cache_size )"	2171:2:67546:67603	3982625	1	True				
ANR	3983057	CallExpression	"memset ( op_array -> run_time_cache , 0 , op_array -> cache_size )"		3982625	0					
ANR	3983058	Callee	memset		3982625	0					
ANR	3983059	Identifier	memset		3982625	0					
ANR	3983060	ArgumentList	op_array -> run_time_cache		3982625	1					
ANR	3983061	Argument	op_array -> run_time_cache		3982625	0					
ANR	3983062	PtrMemberAccess	op_array -> run_time_cache		3982625	0					
ANR	3983063	Identifier	op_array		3982625	0					
ANR	3983064	Identifier	run_time_cache		3982625	1					
ANR	3983065	Argument	0		3982625	1					
ANR	3983066	PrimaryExpression	0		3982625	0					
ANR	3983067	Argument	op_array -> cache_size		3982625	2					
ANR	3983068	PtrMemberAccess	op_array -> cache_size		3982625	0					
ANR	3983069	Identifier	op_array		3982625	0					
ANR	3983070	Identifier	cache_size		3982625	1					
ANR	3983071	ExpressionStatement	EX_LOAD_RUN_TIME_CACHE ( op_array )	2173:1:67609:67641	3982625	11	True				
ANR	3983072	CallExpression	EX_LOAD_RUN_TIME_CACHE ( op_array )		3982625	0					
ANR	3983073	Callee	EX_LOAD_RUN_TIME_CACHE		3982625	0					
ANR	3983074	Identifier	EX_LOAD_RUN_TIME_CACHE		3982625	0					
ANR	3983075	ArgumentList	op_array		3982625	1					
ANR	3983076	Argument	op_array		3982625	0					
ANR	3983077	Identifier	op_array		3982625	0					
ANR	3983078	ExpressionStatement	EX_LOAD_LITERALS ( op_array )	2174:1:67644:67670	3982625	12	True				
ANR	3983079	CallExpression	EX_LOAD_LITERALS ( op_array )		3982625	0					
ANR	3983080	Callee	EX_LOAD_LITERALS		3982625	0					
ANR	3983081	Identifier	EX_LOAD_LITERALS		3982625	0					
ANR	3983082	ArgumentList	op_array		3982625	1					
ANR	3983083	Argument	op_array		3982625	0					
ANR	3983084	Identifier	op_array		3982625	0					
ANR	3983085	ExpressionStatement	EG ( current_execute_data ) = execute_data	2176:1:67674:67713	3982625	13	True				
ANR	3983086	AssignmentExpression	EG ( current_execute_data ) = execute_data		3982625	0		=			
ANR	3983087	CallExpression	EG ( current_execute_data )		3982625	0					
ANR	3983088	Callee	EG		3982625	0					
ANR	3983089	Identifier	EG		3982625	0					
ANR	3983090	ArgumentList	current_execute_data		3982625	1					
ANR	3983091	Argument	current_execute_data		3982625	0					
ANR	3983092	Identifier	current_execute_data		3982625	0					
ANR	3983093	Identifier	execute_data		3982625	1					
ANR	3983094	ExpressionStatement	ZEND_VM_INTERRUPT_CHECK ( )	2177:1:67716:67741	3982625	14	True				
ANR	3983095	CallExpression	ZEND_VM_INTERRUPT_CHECK ( )		3982625	0					
ANR	3983096	Callee	ZEND_VM_INTERRUPT_CHECK		3982625	0					
ANR	3983097	Identifier	ZEND_VM_INTERRUPT_CHECK		3982625	0					
ANR	3983098	ArgumentList			3982625	1					
ANR	3983099	ReturnType	static zend_always_inline void		3982625	1					
ANR	3983100	Identifier	i_init_func_execute_data		3982625	2					
ANR	3983101	ParameterList	"zend_execute_data * execute_data , zend_op_array * op_array , zval * return_value , int check_this"		3982625	3					
ANR	3983102	Parameter	zend_execute_data * execute_data	2108:56:65591:65621	3982625	0	True				
ANR	3983103	ParameterType	zend_execute_data *		3982625	0					
ANR	3983104	Identifier	execute_data		3982625	1					
ANR	3983105	Parameter	zend_op_array * op_array	2108:89:65624:65646	3982625	1	True				
ANR	3983106	ParameterType	zend_op_array *		3982625	0					
ANR	3983107	Identifier	op_array		3982625	1					
ANR	3983108	Parameter	zval * return_value	2108:114:65649:65666	3982625	2	True				
ANR	3983109	ParameterType	zval *		3982625	0					
ANR	3983110	Identifier	return_value		3982625	1					
ANR	3983111	Parameter	int check_this	2108:134:65669:65682	3982625	3	True				
ANR	3983112	ParameterType	int		3982625	0					
ANR	3983113	Identifier	check_this		3982625	1					
ANR	3983114	CFGEntryNode	ENTRY		3982625		True				
ANR	3983115	CFGExitNode	EXIT		3982625		True				
ANR	3983116	Symbol	return_value		3982625						
ANR	3983117	Symbol	dst		3982625						
ANR	3983118	Symbol	current_execute_data		3982625						
ANR	3983119	Symbol	op_array -> last_var		3982625						
ANR	3983120	Symbol	arena		3982625						
ANR	3983121	Symbol	IS_TYPE_REFCOUNTED		3982625						
ANR	3983122	Symbol	execute_data		3982625						
ANR	3983123	Symbol	first_extra_arg		3982625						
ANR	3983124	Symbol	ZEND_ACC_HAS_TYPE_HINTS		3982625						
ANR	3983125	Symbol	& CG		3982625						
ANR	3983126	Symbol	UNEXPECTED		3982625						
ANR	3983127	Symbol	op_array -> run_time_cache		3982625						
ANR	3983128	Symbol	Z_OBJ		3982625						
ANR	3983129	Symbol	op_array -> opcodes		3982625						
ANR	3983130	Symbol	opline		3982625						
ANR	3983131	Symbol	op_array -> fn_flags		3982625						
ANR	3983132	Symbol	num_args		3982625						
ANR	3983133	Symbol	This		3982625						
ANR	3983134	Symbol	op_array -> num_args		3982625						
ANR	3983135	Symbol	end		3982625						
ANR	3983136	Symbol	GC_REFCOUNT		3982625						
ANR	3983137	Symbol	op_array -> T		3982625						
ANR	3983138	Symbol	EG		3982625						
ANR	3983139	Symbol	NULL		3982625						
ANR	3983140	Symbol	zend_arena_alloc		3982625						
ANR	3983141	Symbol	src		3982625						
ANR	3983142	Symbol	var		3982625						
ANR	3983143	Symbol	op_array -> this_var		3982625						
ANR	3983144	Symbol	type_flags		3982625						
ANR	3983145	Symbol	Z_TYPE_FLAGS_SHIFT		3982625						
ANR	3983146	Symbol	check_this		3982625						
ANR	3983147	Symbol	* op_array		3982625						
ANR	3983148	Symbol	Z_TYPE_INFO_P		3982625						
ANR	3983149	Symbol	call		3982625						
ANR	3983150	Symbol	EX		3982625						
ANR	3983151	Symbol	func		3982625						
ANR	3983152	Symbol	EX_NUM_ARGS		3982625						
ANR	3983153	Symbol	EX_VAR_NUM		3982625						
ANR	3983154	Symbol	EX_VAR		3982625						
ANR	3983155	Symbol	op_array -> cache_size		3982625						
ANR	3983156	Symbol	EXPECTED		3982625						
ANR	3983157	Symbol	op_array		3982625						
ANR	3983158	Function	i_init_code_execute_data	2181:0:67756:68620							
ANR	3983159	FunctionDef	"i_init_code_execute_data (zend_execute_data * execute_data , zend_op_array * op_array , zval * return_value)"		3983158	0					
ANR	3983160	CompoundStatement		2182:0:67900:68620	3983158	0					
ANR	3983161	ExpressionStatement	ZEND_ASSERT ( EX ( func ) == ( zend_function * ) op_array )	2183:1:67903:67952	3983158	0	True				
ANR	3983162	CallExpression	ZEND_ASSERT ( EX ( func ) == ( zend_function * ) op_array )		3983158	0					
ANR	3983163	Callee	ZEND_ASSERT		3983158	0					
ANR	3983164	Identifier	ZEND_ASSERT		3983158	0					
ANR	3983165	ArgumentList	EX ( func ) == ( zend_function * ) op_array		3983158	1					
ANR	3983166	Argument	EX ( func ) == ( zend_function * ) op_array		3983158	0					
ANR	3983167	EqualityExpression	EX ( func ) == ( zend_function * ) op_array		3983158	0		==			
ANR	3983168	CallExpression	EX ( func )		3983158	0					
ANR	3983169	Callee	EX		3983158	0					
ANR	3983170	Identifier	EX		3983158	0					
ANR	3983171	ArgumentList	func		3983158	1					
ANR	3983172	Argument	func		3983158	0					
ANR	3983173	Identifier	func		3983158	0					
ANR	3983174	CastExpression	( zend_function * ) op_array		3983158	1					
ANR	3983175	CastTarget	zend_function *		3983158	0					
ANR	3983176	Identifier	op_array		3983158	1					
ANR	3983177	ExpressionStatement	EX ( opline ) = op_array -> opcodes	2185:1:67956:67986	3983158	1	True				
ANR	3983178	AssignmentExpression	EX ( opline ) = op_array -> opcodes		3983158	0		=			
ANR	3983179	CallExpression	EX ( opline )		3983158	0					
ANR	3983180	Callee	EX		3983158	0					
ANR	3983181	Identifier	EX		3983158	0					
ANR	3983182	ArgumentList	opline		3983158	1					
ANR	3983183	Argument	opline		3983158	0					
ANR	3983184	Identifier	opline		3983158	0					
ANR	3983185	PtrMemberAccess	op_array -> opcodes		3983158	1					
ANR	3983186	Identifier	op_array		3983158	0					
ANR	3983187	Identifier	opcodes		3983158	1					
ANR	3983188	ExpressionStatement	EX ( call ) = NULL	2186:1:67989:68004	3983158	2	True				
ANR	3983189	AssignmentExpression	EX ( call ) = NULL		3983158	0		=			
ANR	3983190	CallExpression	EX ( call )		3983158	0					
ANR	3983191	Callee	EX		3983158	0					
ANR	3983192	Identifier	EX		3983158	0					
ANR	3983193	ArgumentList	call		3983158	1					
ANR	3983194	Argument	call		3983158	0					
ANR	3983195	Identifier	call		3983158	0					
ANR	3983196	Identifier	NULL		3983158	1					
ANR	3983197	ExpressionStatement	EX ( return_value ) = return_value	2187:1:68007:68038	3983158	3	True				
ANR	3983198	AssignmentExpression	EX ( return_value ) = return_value		3983158	0		=			
ANR	3983199	CallExpression	EX ( return_value )		3983158	0					
ANR	3983200	Callee	EX		3983158	0					
ANR	3983201	Identifier	EX		3983158	0					
ANR	3983202	ArgumentList	return_value		3983158	1					
ANR	3983203	Argument	return_value		3983158	0					
ANR	3983204	Identifier	return_value		3983158	0					
ANR	3983205	Identifier	return_value		3983158	1					
ANR	3983206	IfStatement	if ( UNEXPECTED ( op_array -> this_var != ( uint32_t ) - 1 ) && EXPECTED ( Z_OBJ ( EX ( This ) ) ) )		3983158	4					
ANR	3983207	Condition	UNEXPECTED ( op_array -> this_var != ( uint32_t ) - 1 ) && EXPECTED ( Z_OBJ ( EX ( This ) ) )	2189:5:68046:68120	3983158	0	True				
ANR	3983208	AndExpression	UNEXPECTED ( op_array -> this_var != ( uint32_t ) - 1 ) && EXPECTED ( Z_OBJ ( EX ( This ) ) )		3983158	0		&&			
ANR	3983209	CallExpression	UNEXPECTED ( op_array -> this_var != ( uint32_t ) - 1 )		3983158	0					
ANR	3983210	Callee	UNEXPECTED		3983158	0					
ANR	3983211	Identifier	UNEXPECTED		3983158	0					
ANR	3983212	ArgumentList	op_array -> this_var != ( uint32_t ) - 1		3983158	1					
ANR	3983213	Argument	op_array -> this_var != ( uint32_t ) - 1		3983158	0					
ANR	3983214	EqualityExpression	op_array -> this_var != ( uint32_t ) - 1		3983158	0		!=			
ANR	3983215	PtrMemberAccess	op_array -> this_var		3983158	0					
ANR	3983216	Identifier	op_array		3983158	0					
ANR	3983217	Identifier	this_var		3983158	1					
ANR	3983218	CastExpression	( uint32_t ) - 1		3983158	1					
ANR	3983219	CastTarget	uint32_t		3983158	0					
ANR	3983220	UnaryOperationExpression	- 1		3983158	1					
ANR	3983221	UnaryOperator	-		3983158	0					
ANR	3983222	PrimaryExpression	1		3983158	1					
ANR	3983223	CallExpression	EXPECTED ( Z_OBJ ( EX ( This ) ) )		3983158	1					
ANR	3983224	Callee	EXPECTED		3983158	0					
ANR	3983225	Identifier	EXPECTED		3983158	0					
ANR	3983226	ArgumentList	Z_OBJ ( EX ( This ) )		3983158	1					
ANR	3983227	Argument	Z_OBJ ( EX ( This ) )		3983158	0					
ANR	3983228	CallExpression	Z_OBJ ( EX ( This ) )		3983158	0					
ANR	3983229	Callee	Z_OBJ		3983158	0					
ANR	3983230	Identifier	Z_OBJ		3983158	0					
ANR	3983231	ArgumentList	EX ( This )		3983158	1					
ANR	3983232	Argument	EX ( This )		3983158	0					
ANR	3983233	CallExpression	EX ( This )		3983158	0					
ANR	3983234	Callee	EX		3983158	0					
ANR	3983235	Identifier	EX		3983158	0					
ANR	3983236	ArgumentList	This		3983158	1					
ANR	3983237	Argument	This		3983158	0					
ANR	3983238	Identifier	This		3983158	0					
ANR	3983239	CompoundStatement		8:82:222:222	3983158	1					
ANR	3983240	ExpressionStatement	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) ) ++	2190:2:68127:68157	3983158	0	True				
ANR	3983241	PostIncDecOperationExpression	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) ) ++		3983158	0					
ANR	3983242	CallExpression	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) )		3983158	0					
ANR	3983243	Callee	GC_REFCOUNT		3983158	0					
ANR	3983244	Identifier	GC_REFCOUNT		3983158	0					
ANR	3983245	ArgumentList	Z_OBJ ( EX ( This ) )		3983158	1					
ANR	3983246	Argument	Z_OBJ ( EX ( This ) )		3983158	0					
ANR	3983247	CallExpression	Z_OBJ ( EX ( This ) )		3983158	0					
ANR	3983248	Callee	Z_OBJ		3983158	0					
ANR	3983249	Identifier	Z_OBJ		3983158	0					
ANR	3983250	ArgumentList	EX ( This )		3983158	1					
ANR	3983251	Argument	EX ( This )		3983158	0					
ANR	3983252	CallExpression	EX ( This )		3983158	0					
ANR	3983253	Callee	EX		3983158	0					
ANR	3983254	Identifier	EX		3983158	0					
ANR	3983255	ArgumentList	This		3983158	1					
ANR	3983256	Argument	This		3983158	0					
ANR	3983257	Identifier	This		3983158	0					
ANR	3983258	IncDec	++		3983158	1					
ANR	3983259	IfStatement	"if ( ! zend_hash_str_add ( EX ( symbol_table ) , ""this"" , sizeof ( ""this"" ) - 1 , & EX ( This ) ) )"		3983158	1					
ANR	3983260	Condition	"! zend_hash_str_add ( EX ( symbol_table ) , ""this"" , sizeof ( ""this"" ) - 1 , & EX ( This ) )"	2191:6:68165:68237	3983158	0	True				
ANR	3983261	UnaryOperationExpression	"! zend_hash_str_add ( EX ( symbol_table ) , ""this"" , sizeof ( ""this"" ) - 1 , & EX ( This ) )"		3983158	0					
ANR	3983262	UnaryOperator	!		3983158	0					
ANR	3983263	CallExpression	"zend_hash_str_add ( EX ( symbol_table ) , ""this"" , sizeof ( ""this"" ) - 1 , & EX ( This ) )"		3983158	1					
ANR	3983264	Callee	zend_hash_str_add		3983158	0					
ANR	3983265	Identifier	zend_hash_str_add		3983158	0					
ANR	3983266	ArgumentList	EX ( symbol_table )		3983158	1					
ANR	3983267	Argument	EX ( symbol_table )		3983158	0					
ANR	3983268	CallExpression	EX ( symbol_table )		3983158	0					
ANR	3983269	Callee	EX		3983158	0					
ANR	3983270	Identifier	EX		3983158	0					
ANR	3983271	ArgumentList	symbol_table		3983158	1					
ANR	3983272	Argument	symbol_table		3983158	0					
ANR	3983273	Identifier	symbol_table		3983158	0					
ANR	3983274	Argument	"""this"""		3983158	1					
ANR	3983275	PrimaryExpression	"""this"""		3983158	0					
ANR	3983276	Argument	"sizeof ( ""this"" ) - 1"		3983158	2					
ANR	3983277	AdditiveExpression	"sizeof ( ""this"" ) - 1"		3983158	0		-			
ANR	3983278	SizeofExpression	"sizeof ( ""this"" )"		3983158	0					
ANR	3983279	Sizeof	sizeof		3983158	0					
ANR	3983280	PrimaryExpression	"""this"""		3983158	1					
ANR	3983281	PrimaryExpression	1		3983158	1					
ANR	3983282	Argument	& EX ( This )		3983158	3					
ANR	3983283	UnaryOperationExpression	& EX ( This )		3983158	0					
ANR	3983284	UnaryOperator	&		3983158	0					
ANR	3983285	CallExpression	EX ( This )		3983158	1					
ANR	3983286	Callee	EX		3983158	0					
ANR	3983287	Identifier	EX		3983158	0					
ANR	3983288	ArgumentList	This		3983158	1					
ANR	3983289	Argument	This		3983158	0					
ANR	3983290	Identifier	This		3983158	0					
ANR	3983291	CompoundStatement		10:81:339:339	3983158	1					
ANR	3983292	ExpressionStatement	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) ) --	2192:3:68245:68275	3983158	0	True				
ANR	3983293	PostIncDecOperationExpression	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) ) --		3983158	0					
ANR	3983294	CallExpression	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) )		3983158	0					
ANR	3983295	Callee	GC_REFCOUNT		3983158	0					
ANR	3983296	Identifier	GC_REFCOUNT		3983158	0					
ANR	3983297	ArgumentList	Z_OBJ ( EX ( This ) )		3983158	1					
ANR	3983298	Argument	Z_OBJ ( EX ( This ) )		3983158	0					
ANR	3983299	CallExpression	Z_OBJ ( EX ( This ) )		3983158	0					
ANR	3983300	Callee	Z_OBJ		3983158	0					
ANR	3983301	Identifier	Z_OBJ		3983158	0					
ANR	3983302	ArgumentList	EX ( This )		3983158	1					
ANR	3983303	Argument	EX ( This )		3983158	0					
ANR	3983304	CallExpression	EX ( This )		3983158	0					
ANR	3983305	Callee	EX		3983158	0					
ANR	3983306	Identifier	EX		3983158	0					
ANR	3983307	ArgumentList	This		3983158	1					
ANR	3983308	Argument	This		3983158	0					
ANR	3983309	Identifier	This		3983158	0					
ANR	3983310	IncDec	--		3983158	1					
ANR	3983311	ExpressionStatement	zend_attach_symbol_table ( execute_data )	2196:1:68286:68324	3983158	5	True				
ANR	3983312	CallExpression	zend_attach_symbol_table ( execute_data )		3983158	0					
ANR	3983313	Callee	zend_attach_symbol_table		3983158	0					
ANR	3983314	Identifier	zend_attach_symbol_table		3983158	0					
ANR	3983315	ArgumentList	execute_data		3983158	1					
ANR	3983316	Argument	execute_data		3983158	0					
ANR	3983317	Identifier	execute_data		3983158	0					
ANR	3983318	IfStatement	if ( ! op_array -> run_time_cache )		3983158	6					
ANR	3983319	Condition	! op_array -> run_time_cache	2198:5:68332:68356	3983158	0	True				
ANR	3983320	UnaryOperationExpression	! op_array -> run_time_cache		3983158	0					
ANR	3983321	UnaryOperator	!		3983158	0					
ANR	3983322	PtrMemberAccess	op_array -> run_time_cache		3983158	1					
ANR	3983323	Identifier	op_array		3983158	0					
ANR	3983324	Identifier	run_time_cache		3983158	1					
ANR	3983325	CompoundStatement		17:32:458:458	3983158	1					
ANR	3983326	ExpressionStatement	op_array -> run_time_cache = emalloc ( op_array -> cache_size )	2199:2:68363:68419	3983158	0	True				
ANR	3983327	AssignmentExpression	op_array -> run_time_cache = emalloc ( op_array -> cache_size )		3983158	0		=			
ANR	3983328	PtrMemberAccess	op_array -> run_time_cache		3983158	0					
ANR	3983329	Identifier	op_array		3983158	0					
ANR	3983330	Identifier	run_time_cache		3983158	1					
ANR	3983331	CallExpression	emalloc ( op_array -> cache_size )		3983158	1					
ANR	3983332	Callee	emalloc		3983158	0					
ANR	3983333	Identifier	emalloc		3983158	0					
ANR	3983334	ArgumentList	op_array -> cache_size		3983158	1					
ANR	3983335	Argument	op_array -> cache_size		3983158	0					
ANR	3983336	PtrMemberAccess	op_array -> cache_size		3983158	0					
ANR	3983337	Identifier	op_array		3983158	0					
ANR	3983338	Identifier	cache_size		3983158	1					
ANR	3983339	ExpressionStatement	"memset ( op_array -> run_time_cache , 0 , op_array -> cache_size )"	2200:2:68423:68480	3983158	1	True				
ANR	3983340	CallExpression	"memset ( op_array -> run_time_cache , 0 , op_array -> cache_size )"		3983158	0					
ANR	3983341	Callee	memset		3983158	0					
ANR	3983342	Identifier	memset		3983158	0					
ANR	3983343	ArgumentList	op_array -> run_time_cache		3983158	1					
ANR	3983344	Argument	op_array -> run_time_cache		3983158	0					
ANR	3983345	PtrMemberAccess	op_array -> run_time_cache		3983158	0					
ANR	3983346	Identifier	op_array		3983158	0					
ANR	3983347	Identifier	run_time_cache		3983158	1					
ANR	3983348	Argument	0		3983158	1					
ANR	3983349	PrimaryExpression	0		3983158	0					
ANR	3983350	Argument	op_array -> cache_size		3983158	2					
ANR	3983351	PtrMemberAccess	op_array -> cache_size		3983158	0					
ANR	3983352	Identifier	op_array		3983158	0					
ANR	3983353	Identifier	cache_size		3983158	1					
ANR	3983354	ExpressionStatement	EX_LOAD_RUN_TIME_CACHE ( op_array )	2202:1:68486:68518	3983158	7	True				
ANR	3983355	CallExpression	EX_LOAD_RUN_TIME_CACHE ( op_array )		3983158	0					
ANR	3983356	Callee	EX_LOAD_RUN_TIME_CACHE		3983158	0					
ANR	3983357	Identifier	EX_LOAD_RUN_TIME_CACHE		3983158	0					
ANR	3983358	ArgumentList	op_array		3983158	1					
ANR	3983359	Argument	op_array		3983158	0					
ANR	3983360	Identifier	op_array		3983158	0					
ANR	3983361	ExpressionStatement	EX_LOAD_LITERALS ( op_array )	2203:1:68521:68547	3983158	8	True				
ANR	3983362	CallExpression	EX_LOAD_LITERALS ( op_array )		3983158	0					
ANR	3983363	Callee	EX_LOAD_LITERALS		3983158	0					
ANR	3983364	Identifier	EX_LOAD_LITERALS		3983158	0					
ANR	3983365	ArgumentList	op_array		3983158	1					
ANR	3983366	Argument	op_array		3983158	0					
ANR	3983367	Identifier	op_array		3983158	0					
ANR	3983368	ExpressionStatement	EG ( current_execute_data ) = execute_data	2205:1:68551:68590	3983158	9	True				
ANR	3983369	AssignmentExpression	EG ( current_execute_data ) = execute_data		3983158	0		=			
ANR	3983370	CallExpression	EG ( current_execute_data )		3983158	0					
ANR	3983371	Callee	EG		3983158	0					
ANR	3983372	Identifier	EG		3983158	0					
ANR	3983373	ArgumentList	current_execute_data		3983158	1					
ANR	3983374	Argument	current_execute_data		3983158	0					
ANR	3983375	Identifier	current_execute_data		3983158	0					
ANR	3983376	Identifier	execute_data		3983158	1					
ANR	3983377	ExpressionStatement	ZEND_VM_INTERRUPT_CHECK ( )	2206:1:68593:68618	3983158	10	True				
ANR	3983378	CallExpression	ZEND_VM_INTERRUPT_CHECK ( )		3983158	0					
ANR	3983379	Callee	ZEND_VM_INTERRUPT_CHECK		3983158	0					
ANR	3983380	Identifier	ZEND_VM_INTERRUPT_CHECK		3983158	0					
ANR	3983381	ArgumentList			3983158	1					
ANR	3983382	ReturnType	static zend_always_inline void		3983158	1					
ANR	3983383	Identifier	i_init_code_execute_data		3983158	2					
ANR	3983384	ParameterList	"zend_execute_data * execute_data , zend_op_array * op_array , zval * return_value"		3983158	3					
ANR	3983385	Parameter	zend_execute_data * execute_data	2181:56:67812:67842	3983158	0	True				
ANR	3983386	ParameterType	zend_execute_data *		3983158	0					
ANR	3983387	Identifier	execute_data		3983158	1					
ANR	3983388	Parameter	zend_op_array * op_array	2181:89:67845:67867	3983158	1	True				
ANR	3983389	ParameterType	zend_op_array *		3983158	0					
ANR	3983390	Identifier	op_array		3983158	1					
ANR	3983391	Parameter	zval * return_value	2181:114:67870:67887	3983158	2	True				
ANR	3983392	ParameterType	zval *		3983158	0					
ANR	3983393	Identifier	return_value		3983158	1					
ANR	3983394	CFGEntryNode	ENTRY		3983158		True				
ANR	3983395	CFGExitNode	EXIT		3983158		True				
ANR	3983396	Symbol	return_value		3983158						
ANR	3983397	Symbol	EG		3983158						
ANR	3983398	Symbol	NULL		3983158						
ANR	3983399	Symbol	op_array -> this_var		3983158						
ANR	3983400	Symbol	current_execute_data		3983158						
ANR	3983401	Symbol	zend_hash_str_add		3983158						
ANR	3983402	Symbol	symbol_table		3983158						
ANR	3983403	Symbol	execute_data		3983158						
ANR	3983404	Symbol	* op_array		3983158						
ANR	3983405	Symbol	call		3983158						
ANR	3983406	Symbol	UNEXPECTED		3983158						
ANR	3983407	Symbol	op_array -> run_time_cache		3983158						
ANR	3983408	Symbol	Z_OBJ		3983158						
ANR	3983409	Symbol	emalloc		3983158						
ANR	3983410	Symbol	EX		3983158						
ANR	3983411	Symbol	opline		3983158						
ANR	3983412	Symbol	op_array -> opcodes		3983158						
ANR	3983413	Symbol	func		3983158						
ANR	3983414	Symbol	This		3983158						
ANR	3983415	Symbol	op_array -> cache_size		3983158						
ANR	3983416	Symbol	& EX		3983158						
ANR	3983417	Symbol	EXPECTED		3983158						
ANR	3983418	Symbol	GC_REFCOUNT		3983158						
ANR	3983419	Symbol	op_array		3983158						
ANR	3983420	Function	i_init_execute_data	2210:0:68633:71302							
ANR	3983421	FunctionDef	"i_init_execute_data (zend_execute_data * execute_data , zend_op_array * op_array , zval * return_value)"		3983420	0					
ANR	3983422	CompoundStatement		2211:0:68772:71302	3983420	0					
ANR	3983423	ExpressionStatement	ZEND_ASSERT ( EX ( func ) == ( zend_function * ) op_array )	2212:1:68775:68824	3983420	0	True				
ANR	3983424	CallExpression	ZEND_ASSERT ( EX ( func ) == ( zend_function * ) op_array )		3983420	0					
ANR	3983425	Callee	ZEND_ASSERT		3983420	0					
ANR	3983426	Identifier	ZEND_ASSERT		3983420	0					
ANR	3983427	ArgumentList	EX ( func ) == ( zend_function * ) op_array		3983420	1					
ANR	3983428	Argument	EX ( func ) == ( zend_function * ) op_array		3983420	0					
ANR	3983429	EqualityExpression	EX ( func ) == ( zend_function * ) op_array		3983420	0		==			
ANR	3983430	CallExpression	EX ( func )		3983420	0					
ANR	3983431	Callee	EX		3983420	0					
ANR	3983432	Identifier	EX		3983420	0					
ANR	3983433	ArgumentList	func		3983420	1					
ANR	3983434	Argument	func		3983420	0					
ANR	3983435	Identifier	func		3983420	0					
ANR	3983436	CastExpression	( zend_function * ) op_array		3983420	1					
ANR	3983437	CastTarget	zend_function *		3983420	0					
ANR	3983438	Identifier	op_array		3983420	1					
ANR	3983439	ExpressionStatement	EX ( opline ) = op_array -> opcodes	2214:1:68828:68858	3983420	1	True				
ANR	3983440	AssignmentExpression	EX ( opline ) = op_array -> opcodes		3983420	0		=			
ANR	3983441	CallExpression	EX ( opline )		3983420	0					
ANR	3983442	Callee	EX		3983420	0					
ANR	3983443	Identifier	EX		3983420	0					
ANR	3983444	ArgumentList	opline		3983420	1					
ANR	3983445	Argument	opline		3983420	0					
ANR	3983446	Identifier	opline		3983420	0					
ANR	3983447	PtrMemberAccess	op_array -> opcodes		3983420	1					
ANR	3983448	Identifier	op_array		3983420	0					
ANR	3983449	Identifier	opcodes		3983420	1					
ANR	3983450	ExpressionStatement	EX ( call ) = NULL	2215:1:68861:68876	3983420	2	True				
ANR	3983451	AssignmentExpression	EX ( call ) = NULL		3983420	0		=			
ANR	3983452	CallExpression	EX ( call )		3983420	0					
ANR	3983453	Callee	EX		3983420	0					
ANR	3983454	Identifier	EX		3983420	0					
ANR	3983455	ArgumentList	call		3983420	1					
ANR	3983456	Argument	call		3983420	0					
ANR	3983457	Identifier	call		3983420	0					
ANR	3983458	Identifier	NULL		3983420	1					
ANR	3983459	ExpressionStatement	EX ( return_value ) = return_value	2216:1:68879:68910	3983420	3	True				
ANR	3983460	AssignmentExpression	EX ( return_value ) = return_value		3983420	0		=			
ANR	3983461	CallExpression	EX ( return_value )		3983420	0					
ANR	3983462	Callee	EX		3983420	0					
ANR	3983463	Identifier	EX		3983420	0					
ANR	3983464	ArgumentList	return_value		3983420	1					
ANR	3983465	Argument	return_value		3983420	0					
ANR	3983466	Identifier	return_value		3983420	0					
ANR	3983467	Identifier	return_value		3983420	1					
ANR	3983468	IfStatement	if ( UNEXPECTED ( EX ( symbol_table ) != NULL ) )		3983420	4					
ANR	3983469	Condition	UNEXPECTED ( EX ( symbol_table ) != NULL )	2218:5:68918:68953	3983420	0	True				
ANR	3983470	CallExpression	UNEXPECTED ( EX ( symbol_table ) != NULL )		3983420	0					
ANR	3983471	Callee	UNEXPECTED		3983420	0					
ANR	3983472	Identifier	UNEXPECTED		3983420	0					
ANR	3983473	ArgumentList	EX ( symbol_table ) != NULL		3983420	1					
ANR	3983474	Argument	EX ( symbol_table ) != NULL		3983420	0					
ANR	3983475	EqualityExpression	EX ( symbol_table ) != NULL		3983420	0		!=			
ANR	3983476	CallExpression	EX ( symbol_table )		3983420	0					
ANR	3983477	Callee	EX		3983420	0					
ANR	3983478	Identifier	EX		3983420	0					
ANR	3983479	ArgumentList	symbol_table		3983420	1					
ANR	3983480	Argument	symbol_table		3983420	0					
ANR	3983481	Identifier	symbol_table		3983420	0					
ANR	3983482	Identifier	NULL		3983420	1					
ANR	3983483	CompoundStatement		8:43:183:183	3983420	1					
ANR	3983484	IfStatement	if ( UNEXPECTED ( op_array -> this_var != ( uint32_t ) - 1 ) && EXPECTED ( Z_OBJ ( EX ( This ) ) ) )		3983420	0					
ANR	3983485	Condition	UNEXPECTED ( op_array -> this_var != ( uint32_t ) - 1 ) && EXPECTED ( Z_OBJ ( EX ( This ) ) )	2219:6:68964:69038	3983420	0	True				
ANR	3983486	AndExpression	UNEXPECTED ( op_array -> this_var != ( uint32_t ) - 1 ) && EXPECTED ( Z_OBJ ( EX ( This ) ) )		3983420	0		&&			
ANR	3983487	CallExpression	UNEXPECTED ( op_array -> this_var != ( uint32_t ) - 1 )		3983420	0					
ANR	3983488	Callee	UNEXPECTED		3983420	0					
ANR	3983489	Identifier	UNEXPECTED		3983420	0					
ANR	3983490	ArgumentList	op_array -> this_var != ( uint32_t ) - 1		3983420	1					
ANR	3983491	Argument	op_array -> this_var != ( uint32_t ) - 1		3983420	0					
ANR	3983492	EqualityExpression	op_array -> this_var != ( uint32_t ) - 1		3983420	0		!=			
ANR	3983493	PtrMemberAccess	op_array -> this_var		3983420	0					
ANR	3983494	Identifier	op_array		3983420	0					
ANR	3983495	Identifier	this_var		3983420	1					
ANR	3983496	CastExpression	( uint32_t ) - 1		3983420	1					
ANR	3983497	CastTarget	uint32_t		3983420	0					
ANR	3983498	UnaryOperationExpression	- 1		3983420	1					
ANR	3983499	UnaryOperator	-		3983420	0					
ANR	3983500	PrimaryExpression	1		3983420	1					
ANR	3983501	CallExpression	EXPECTED ( Z_OBJ ( EX ( This ) ) )		3983420	1					
ANR	3983502	Callee	EXPECTED		3983420	0					
ANR	3983503	Identifier	EXPECTED		3983420	0					
ANR	3983504	ArgumentList	Z_OBJ ( EX ( This ) )		3983420	1					
ANR	3983505	Argument	Z_OBJ ( EX ( This ) )		3983420	0					
ANR	3983506	CallExpression	Z_OBJ ( EX ( This ) )		3983420	0					
ANR	3983507	Callee	Z_OBJ		3983420	0					
ANR	3983508	Identifier	Z_OBJ		3983420	0					
ANR	3983509	ArgumentList	EX ( This )		3983420	1					
ANR	3983510	Argument	EX ( This )		3983420	0					
ANR	3983511	CallExpression	EX ( This )		3983420	0					
ANR	3983512	Callee	EX		3983420	0					
ANR	3983513	Identifier	EX		3983420	0					
ANR	3983514	ArgumentList	This		3983420	1					
ANR	3983515	Argument	This		3983420	0					
ANR	3983516	Identifier	This		3983420	0					
ANR	3983517	CompoundStatement		9:83:268:268	3983420	1					
ANR	3983518	ExpressionStatement	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) ) ++	2220:3:69046:69076	3983420	0	True				
ANR	3983519	PostIncDecOperationExpression	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) ) ++		3983420	0					
ANR	3983520	CallExpression	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) )		3983420	0					
ANR	3983521	Callee	GC_REFCOUNT		3983420	0					
ANR	3983522	Identifier	GC_REFCOUNT		3983420	0					
ANR	3983523	ArgumentList	Z_OBJ ( EX ( This ) )		3983420	1					
ANR	3983524	Argument	Z_OBJ ( EX ( This ) )		3983420	0					
ANR	3983525	CallExpression	Z_OBJ ( EX ( This ) )		3983420	0					
ANR	3983526	Callee	Z_OBJ		3983420	0					
ANR	3983527	Identifier	Z_OBJ		3983420	0					
ANR	3983528	ArgumentList	EX ( This )		3983420	1					
ANR	3983529	Argument	EX ( This )		3983420	0					
ANR	3983530	CallExpression	EX ( This )		3983420	0					
ANR	3983531	Callee	EX		3983420	0					
ANR	3983532	Identifier	EX		3983420	0					
ANR	3983533	ArgumentList	This		3983420	1					
ANR	3983534	Argument	This		3983420	0					
ANR	3983535	Identifier	This		3983420	0					
ANR	3983536	IncDec	++		3983420	1					
ANR	3983537	IfStatement	"if ( ! zend_hash_str_add ( EX ( symbol_table ) , ""this"" , sizeof ( ""this"" ) - 1 , & EX ( This ) ) )"		3983420	1					
ANR	3983538	Condition	"! zend_hash_str_add ( EX ( symbol_table ) , ""this"" , sizeof ( ""this"" ) - 1 , & EX ( This ) )"	2221:7:69085:69157	3983420	0	True				
ANR	3983539	UnaryOperationExpression	"! zend_hash_str_add ( EX ( symbol_table ) , ""this"" , sizeof ( ""this"" ) - 1 , & EX ( This ) )"		3983420	0					
ANR	3983540	UnaryOperator	!		3983420	0					
ANR	3983541	CallExpression	"zend_hash_str_add ( EX ( symbol_table ) , ""this"" , sizeof ( ""this"" ) - 1 , & EX ( This ) )"		3983420	1					
ANR	3983542	Callee	zend_hash_str_add		3983420	0					
ANR	3983543	Identifier	zend_hash_str_add		3983420	0					
ANR	3983544	ArgumentList	EX ( symbol_table )		3983420	1					
ANR	3983545	Argument	EX ( symbol_table )		3983420	0					
ANR	3983546	CallExpression	EX ( symbol_table )		3983420	0					
ANR	3983547	Callee	EX		3983420	0					
ANR	3983548	Identifier	EX		3983420	0					
ANR	3983549	ArgumentList	symbol_table		3983420	1					
ANR	3983550	Argument	symbol_table		3983420	0					
ANR	3983551	Identifier	symbol_table		3983420	0					
ANR	3983552	Argument	"""this"""		3983420	1					
ANR	3983553	PrimaryExpression	"""this"""		3983420	0					
ANR	3983554	Argument	"sizeof ( ""this"" ) - 1"		3983420	2					
ANR	3983555	AdditiveExpression	"sizeof ( ""this"" ) - 1"		3983420	0		-			
ANR	3983556	SizeofExpression	"sizeof ( ""this"" )"		3983420	0					
ANR	3983557	Sizeof	sizeof		3983420	0					
ANR	3983558	PrimaryExpression	"""this"""		3983420	1					
ANR	3983559	PrimaryExpression	1		3983420	1					
ANR	3983560	Argument	& EX ( This )		3983420	3					
ANR	3983561	UnaryOperationExpression	& EX ( This )		3983420	0					
ANR	3983562	UnaryOperator	&		3983420	0					
ANR	3983563	CallExpression	EX ( This )		3983420	1					
ANR	3983564	Callee	EX		3983420	0					
ANR	3983565	Identifier	EX		3983420	0					
ANR	3983566	ArgumentList	This		3983420	1					
ANR	3983567	Argument	This		3983420	0					
ANR	3983568	Identifier	This		3983420	0					
ANR	3983569	CompoundStatement		11:82:387:387	3983420	1					
ANR	3983570	ExpressionStatement	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) ) --	2222:4:69166:69196	3983420	0	True				
ANR	3983571	PostIncDecOperationExpression	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) ) --		3983420	0					
ANR	3983572	CallExpression	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) )		3983420	0					
ANR	3983573	Callee	GC_REFCOUNT		3983420	0					
ANR	3983574	Identifier	GC_REFCOUNT		3983420	0					
ANR	3983575	ArgumentList	Z_OBJ ( EX ( This ) )		3983420	1					
ANR	3983576	Argument	Z_OBJ ( EX ( This ) )		3983420	0					
ANR	3983577	CallExpression	Z_OBJ ( EX ( This ) )		3983420	0					
ANR	3983578	Callee	Z_OBJ		3983420	0					
ANR	3983579	Identifier	Z_OBJ		3983420	0					
ANR	3983580	ArgumentList	EX ( This )		3983420	1					
ANR	3983581	Argument	EX ( This )		3983420	0					
ANR	3983582	CallExpression	EX ( This )		3983420	0					
ANR	3983583	Callee	EX		3983420	0					
ANR	3983584	Identifier	EX		3983420	0					
ANR	3983585	ArgumentList	This		3983420	1					
ANR	3983586	Argument	This		3983420	0					
ANR	3983587	Identifier	This		3983420	0					
ANR	3983588	IncDec	--		3983420	1					
ANR	3983589	ExpressionStatement	zend_attach_symbol_table ( execute_data )	2226:2:69210:69248	3983420	1	True				
ANR	3983590	CallExpression	zend_attach_symbol_table ( execute_data )		3983420	0					
ANR	3983591	Callee	zend_attach_symbol_table		3983420	0					
ANR	3983592	Identifier	zend_attach_symbol_table		3983420	0					
ANR	3983593	ArgumentList	execute_data		3983420	1					
ANR	3983594	Argument	execute_data		3983420	0					
ANR	3983595	Identifier	execute_data		3983420	0					
ANR	3983596	ElseStatement	else		3983420	0					
ANR	3983597	CompoundStatement		18:2:489:523	3983420	0					
ANR	3983598	IdentifierDeclStatement	"uint32_t first_extra_arg , num_args ;"	2228:2:69262:69296	3983420	0	True				
ANR	3983599	IdentifierDecl	first_extra_arg		3983420	0					
ANR	3983600	IdentifierDeclType	uint32_t		3983420	0					
ANR	3983601	Identifier	first_extra_arg		3983420	1					
ANR	3983602	IdentifierDecl	num_args		3983420	1					
ANR	3983603	IdentifierDeclType	uint32_t		3983420	0					
ANR	3983604	Identifier	num_args		3983420	1					
ANR	3983605	ExpressionStatement	first_extra_arg = op_array -> num_args	2231:2:69326:69362	3983420	1	True				
ANR	3983606	AssignmentExpression	first_extra_arg = op_array -> num_args		3983420	0		=			
ANR	3983607	Identifier	first_extra_arg		3983420	0					
ANR	3983608	PtrMemberAccess	op_array -> num_args		3983420	1					
ANR	3983609	Identifier	op_array		3983420	0					
ANR	3983610	Identifier	num_args		3983420	1					
ANR	3983611	ExpressionStatement	num_args = EX_NUM_ARGS ( )	2232:2:69366:69390	3983420	2	True				
ANR	3983612	AssignmentExpression	num_args = EX_NUM_ARGS ( )		3983420	0		=			
ANR	3983613	Identifier	num_args		3983420	0					
ANR	3983614	CallExpression	EX_NUM_ARGS ( )		3983420	1					
ANR	3983615	Callee	EX_NUM_ARGS		3983420	0					
ANR	3983616	Identifier	EX_NUM_ARGS		3983420	0					
ANR	3983617	ArgumentList			3983420	1					
ANR	3983618	IfStatement	if ( UNEXPECTED ( num_args > first_extra_arg ) )		3983420	3					
ANR	3983619	Condition	UNEXPECTED ( num_args > first_extra_arg )	2233:6:69398:69435	3983420	0	True				
ANR	3983620	CallExpression	UNEXPECTED ( num_args > first_extra_arg )		3983420	0					
ANR	3983621	Callee	UNEXPECTED		3983420	0					
ANR	3983622	Identifier	UNEXPECTED		3983420	0					
ANR	3983623	ArgumentList	num_args > first_extra_arg		3983420	1					
ANR	3983624	Argument	num_args > first_extra_arg		3983420	0					
ANR	3983625	RelationalExpression	num_args > first_extra_arg		3983420	0		>			
ANR	3983626	Identifier	num_args		3983420	0					
ANR	3983627	Identifier	first_extra_arg		3983420	1					
ANR	3983628	CompoundStatement		25:3:696:719	3983420	1					
ANR	3983629	IdentifierDeclStatement	"zval * end , * src , * dst ;"	2234:3:69443:69464	3983420	0	True				
ANR	3983630	IdentifierDecl	* end		3983420	0					
ANR	3983631	IdentifierDeclType	zval *		3983420	0					
ANR	3983632	Identifier	end		3983420	1					
ANR	3983633	IdentifierDecl	* src		3983420	1					
ANR	3983634	IdentifierDeclType	zval *		3983420	0					
ANR	3983635	Identifier	src		3983420	1					
ANR	3983636	IdentifierDecl	* dst		3983420	2					
ANR	3983637	IdentifierDeclType	zval *		3983420	0					
ANR	3983638	Identifier	dst		3983420	1					
ANR	3983639	IdentifierDeclStatement	uint32_t type_flags = 0 ;	2235:3:69469:69492	3983420	1	True				
ANR	3983640	IdentifierDecl	type_flags = 0		3983420	0					
ANR	3983641	IdentifierDeclType	uint32_t		3983420	0					
ANR	3983642	Identifier	type_flags		3983420	1					
ANR	3983643	AssignmentExpression	type_flags = 0		3983420	2		=			
ANR	3983644	Identifier	type_flags		3983420	0					
ANR	3983645	PrimaryExpression	0		3983420	1					
ANR	3983646	IfStatement	if ( EXPECTED ( ( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0 ) )		3983420	2					
ANR	3983647	Condition	EXPECTED ( ( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0 )	2237:7:69502:69562	3983420	0	True				
ANR	3983648	CallExpression	EXPECTED ( ( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0 )		3983420	0					
ANR	3983649	Callee	EXPECTED		3983420	0					
ANR	3983650	Identifier	EXPECTED		3983420	0					
ANR	3983651	ArgumentList	( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0		3983420	1					
ANR	3983652	Argument	( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0		3983420	0					
ANR	3983653	EqualityExpression	( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0		3983420	0		==			
ANR	3983654	BitAndExpression	op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS		3983420	0		&			
ANR	3983655	PtrMemberAccess	op_array -> fn_flags		3983420	0					
ANR	3983656	Identifier	op_array		3983420	0					
ANR	3983657	Identifier	fn_flags		3983420	1					
ANR	3983658	Identifier	ZEND_ACC_HAS_TYPE_HINTS		3983420	1					
ANR	3983659	PrimaryExpression	0		3983420	1					
ANR	3983660	CompoundStatement		27:70:792:792	3983420	1					
ANR	3983661	ExpressionStatement	EX ( opline ) += first_extra_arg	2239:4:69631:69660	3983420	0	True				
ANR	3983662	AssignmentExpression	EX ( opline ) += first_extra_arg		3983420	0		+=			
ANR	3983663	CallExpression	EX ( opline )		3983420	0					
ANR	3983664	Callee	EX		3983420	0					
ANR	3983665	Identifier	EX		3983420	0					
ANR	3983666	ArgumentList	opline		3983420	1					
ANR	3983667	Argument	opline		3983420	0					
ANR	3983668	Identifier	opline		3983420	0					
ANR	3983669	Identifier	first_extra_arg		3983420	1					
ANR	3983670	ExpressionStatement	end = EX_VAR_NUM ( first_extra_arg - 1 )	2243:3:69742:69779	3983420	3	True				
ANR	3983671	AssignmentExpression	end = EX_VAR_NUM ( first_extra_arg - 1 )		3983420	0		=			
ANR	3983672	Identifier	end		3983420	0					
ANR	3983673	CallExpression	EX_VAR_NUM ( first_extra_arg - 1 )		3983420	1					
ANR	3983674	Callee	EX_VAR_NUM		3983420	0					
ANR	3983675	Identifier	EX_VAR_NUM		3983420	0					
ANR	3983676	ArgumentList	first_extra_arg - 1		3983420	1					
ANR	3983677	Argument	first_extra_arg - 1		3983420	0					
ANR	3983678	AdditiveExpression	first_extra_arg - 1		3983420	0		-			
ANR	3983679	Identifier	first_extra_arg		3983420	0					
ANR	3983680	PrimaryExpression	1		3983420	1					
ANR	3983681	ExpressionStatement	src = end + ( num_args - first_extra_arg )	2244:3:69784:69824	3983420	4	True				
ANR	3983682	AssignmentExpression	src = end + ( num_args - first_extra_arg )		3983420	0		=			
ANR	3983683	Identifier	src		3983420	0					
ANR	3983684	AdditiveExpression	end + ( num_args - first_extra_arg )		3983420	1		+			
ANR	3983685	Identifier	end		3983420	0					
ANR	3983686	AdditiveExpression	num_args - first_extra_arg		3983420	1		-			
ANR	3983687	Identifier	num_args		3983420	0					
ANR	3983688	Identifier	first_extra_arg		3983420	1					
ANR	3983689	ExpressionStatement	dst = src + ( op_array -> last_var + op_array -> T - first_extra_arg )	2245:3:69829:69893	3983420	5	True				
ANR	3983690	AssignmentExpression	dst = src + ( op_array -> last_var + op_array -> T - first_extra_arg )		3983420	0		=			
ANR	3983691	Identifier	dst		3983420	0					
ANR	3983692	AdditiveExpression	src + ( op_array -> last_var + op_array -> T - first_extra_arg )		3983420	1		+			
ANR	3983693	Identifier	src		3983420	0					
ANR	3983694	AdditiveExpression	op_array -> last_var + op_array -> T - first_extra_arg		3983420	1		+			
ANR	3983695	PtrMemberAccess	op_array -> last_var		3983420	0					
ANR	3983696	Identifier	op_array		3983420	0					
ANR	3983697	Identifier	last_var		3983420	1					
ANR	3983698	AdditiveExpression	op_array -> T - first_extra_arg		3983420	1		-			
ANR	3983699	PtrMemberAccess	op_array -> T		3983420	0					
ANR	3983700	Identifier	op_array		3983420	0					
ANR	3983701	Identifier	T		3983420	1					
ANR	3983702	Identifier	first_extra_arg		3983420	1					
ANR	3983703	IfStatement	if ( EXPECTED ( src != dst ) )		3983420	6					
ANR	3983704	Condition	EXPECTED ( src != dst )	2246:7:69902:69921	3983420	0	True				
ANR	3983705	CallExpression	EXPECTED ( src != dst )		3983420	0					
ANR	3983706	Callee	EXPECTED		3983420	0					
ANR	3983707	Identifier	EXPECTED		3983420	0					
ANR	3983708	ArgumentList	src != dst		3983420	1					
ANR	3983709	Argument	src != dst		3983420	0					
ANR	3983710	EqualityExpression	src != dst		3983420	0		!=			
ANR	3983711	Identifier	src		3983420	0					
ANR	3983712	Identifier	dst		3983420	1					
ANR	3983713	CompoundStatement		36:29:1151:1151	3983420	1					
ANR	3983714	DoStatement	do		3983420	0					
ANR	3983715	CompoundStatement		37:7:1160:1160	3983420	0					
ANR	3983716	ExpressionStatement	type_flags |= Z_TYPE_INFO_P ( src )	2248:5:69940:69972	3983420	0	True				
ANR	3983717	AssignmentExpression	type_flags |= Z_TYPE_INFO_P ( src )		3983420	0		|=			
ANR	3983718	Identifier	type_flags		3983420	0					
ANR	3983719	CallExpression	Z_TYPE_INFO_P ( src )		3983420	1					
ANR	3983720	Callee	Z_TYPE_INFO_P		3983420	0					
ANR	3983721	Identifier	Z_TYPE_INFO_P		3983420	0					
ANR	3983722	ArgumentList	src		3983420	1					
ANR	3983723	Argument	src		3983420	0					
ANR	3983724	Identifier	src		3983420	0					
ANR	3983725	ExpressionStatement	"ZVAL_COPY_VALUE ( dst , src )"	2249:5:69979:70004	3983420	1	True				
ANR	3983726	CallExpression	"ZVAL_COPY_VALUE ( dst , src )"		3983420	0					
ANR	3983727	Callee	ZVAL_COPY_VALUE		3983420	0					
ANR	3983728	Identifier	ZVAL_COPY_VALUE		3983420	0					
ANR	3983729	ArgumentList	dst		3983420	1					
ANR	3983730	Argument	dst		3983420	0					
ANR	3983731	Identifier	dst		3983420	0					
ANR	3983732	Argument	src		3983420	1					
ANR	3983733	Identifier	src		3983420	0					
ANR	3983734	ExpressionStatement	ZVAL_UNDEF ( src )	2250:5:70011:70026	3983420	2	True				
ANR	3983735	CallExpression	ZVAL_UNDEF ( src )		3983420	0					
ANR	3983736	Callee	ZVAL_UNDEF		3983420	0					
ANR	3983737	Identifier	ZVAL_UNDEF		3983420	0					
ANR	3983738	ArgumentList	src		3983420	1					
ANR	3983739	Argument	src		3983420	0					
ANR	3983740	Identifier	src		3983420	0					
ANR	3983741	ExpressionStatement	src --	2251:5:70033:70038	3983420	3	True				
ANR	3983742	PostIncDecOperationExpression	src --		3983420	0					
ANR	3983743	Identifier	src		3983420	0					
ANR	3983744	IncDec	--		3983420	1					
ANR	3983745	ExpressionStatement	dst --	2252:5:70045:70050	3983420	4	True				
ANR	3983746	PostIncDecOperationExpression	dst --		3983420	0					
ANR	3983747	Identifier	dst		3983420	0					
ANR	3983748	IncDec	--		3983420	1					
ANR	3983749	Condition	src != end	2253:13:70065:70074	3983420	1	True				
ANR	3983750	EqualityExpression	src != end		3983420	0		!=			
ANR	3983751	Identifier	src		3983420	0					
ANR	3983752	Identifier	end		3983420	1					
ANR	3983753	ElseStatement	else		3983420	0					
ANR	3983754	CompoundStatement		44:10:1315:1315	3983420	0					
ANR	3983755	DoStatement	do		3983420	0					
ANR	3983756	CompoundStatement		45:7:1324:1324	3983420	0					
ANR	3983757	ExpressionStatement	type_flags |= Z_TYPE_INFO_P ( src )	2256:5:70104:70136	3983420	0	True				
ANR	3983758	AssignmentExpression	type_flags |= Z_TYPE_INFO_P ( src )		3983420	0		|=			
ANR	3983759	Identifier	type_flags		3983420	0					
ANR	3983760	CallExpression	Z_TYPE_INFO_P ( src )		3983420	1					
ANR	3983761	Callee	Z_TYPE_INFO_P		3983420	0					
ANR	3983762	Identifier	Z_TYPE_INFO_P		3983420	0					
ANR	3983763	ArgumentList	src		3983420	1					
ANR	3983764	Argument	src		3983420	0					
ANR	3983765	Identifier	src		3983420	0					
ANR	3983766	ExpressionStatement	src --	2257:5:70143:70148	3983420	1	True				
ANR	3983767	PostIncDecOperationExpression	src --		3983420	0					
ANR	3983768	Identifier	src		3983420	0					
ANR	3983769	IncDec	--		3983420	1					
ANR	3983770	Condition	src != end	2258:13:70163:70172	3983420	1	True				
ANR	3983771	EqualityExpression	src != end		3983420	0		!=			
ANR	3983772	Identifier	src		3983420	0					
ANR	3983773	Identifier	end		3983420	1					
ANR	3983774	ExpressionStatement	"ZEND_ADD_CALL_FLAG ( execute_data , ( ( type_flags >> Z_TYPE_FLAGS_SHIFT ) & IS_TYPE_REFCOUNTED ) )"	2260:3:70184:70275	3983420	7	True				
ANR	3983775	CallExpression	"ZEND_ADD_CALL_FLAG ( execute_data , ( ( type_flags >> Z_TYPE_FLAGS_SHIFT ) & IS_TYPE_REFCOUNTED ) )"		3983420	0					
ANR	3983776	Callee	ZEND_ADD_CALL_FLAG		3983420	0					
ANR	3983777	Identifier	ZEND_ADD_CALL_FLAG		3983420	0					
ANR	3983778	ArgumentList	execute_data		3983420	1					
ANR	3983779	Argument	execute_data		3983420	0					
ANR	3983780	Identifier	execute_data		3983420	0					
ANR	3983781	Argument	( type_flags >> Z_TYPE_FLAGS_SHIFT ) & IS_TYPE_REFCOUNTED		3983420	1					
ANR	3983782	BitAndExpression	( type_flags >> Z_TYPE_FLAGS_SHIFT ) & IS_TYPE_REFCOUNTED		3983420	0		&			
ANR	3983783	ShiftExpression	type_flags >> Z_TYPE_FLAGS_SHIFT		3983420	0		>>			
ANR	3983784	Identifier	type_flags		3983420	0					
ANR	3983785	Identifier	Z_TYPE_FLAGS_SHIFT		3983420	1					
ANR	3983786	Identifier	IS_TYPE_REFCOUNTED		3983420	1					
ANR	3983787	ElseStatement	else		3983420	0					
ANR	3983788	IfStatement	if ( EXPECTED ( ( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0 ) )		3983420	0					
ANR	3983789	Condition	EXPECTED ( ( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0 )	2261:13:70290:70350	3983420	0	True				
ANR	3983790	CallExpression	EXPECTED ( ( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0 )		3983420	0					
ANR	3983791	Callee	EXPECTED		3983420	0					
ANR	3983792	Identifier	EXPECTED		3983420	0					
ANR	3983793	ArgumentList	( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0		3983420	1					
ANR	3983794	Argument	( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0		3983420	0					
ANR	3983795	EqualityExpression	( op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS ) == 0		3983420	0		==			
ANR	3983796	BitAndExpression	op_array -> fn_flags & ZEND_ACC_HAS_TYPE_HINTS		3983420	0		&			
ANR	3983797	PtrMemberAccess	op_array -> fn_flags		3983420	0					
ANR	3983798	Identifier	op_array		3983420	0					
ANR	3983799	Identifier	fn_flags		3983420	1					
ANR	3983800	Identifier	ZEND_ACC_HAS_TYPE_HINTS		3983420	1					
ANR	3983801	PrimaryExpression	0		3983420	1					
ANR	3983802	CompoundStatement		51:76:1580:1580	3983420	1					
ANR	3983803	ExpressionStatement	EX ( opline ) += num_args	2263:3:70417:70439	3983420	0	True				
ANR	3983804	AssignmentExpression	EX ( opline ) += num_args		3983420	0		+=			
ANR	3983805	CallExpression	EX ( opline )		3983420	0					
ANR	3983806	Callee	EX		3983420	0					
ANR	3983807	Identifier	EX		3983420	0					
ANR	3983808	ArgumentList	opline		3983420	1					
ANR	3983809	Argument	opline		3983420	0					
ANR	3983810	Identifier	opline		3983420	0					
ANR	3983811	Identifier	num_args		3983420	1					
ANR	3983812	IfStatement	if ( EXPECTED ( ( int ) num_args < op_array -> last_var ) )		3983420	4					
ANR	3983813	Condition	EXPECTED ( ( int ) num_args < op_array -> last_var )	2267:6:70501:70544	3983420	0	True				
ANR	3983814	CallExpression	EXPECTED ( ( int ) num_args < op_array -> last_var )		3983420	0					
ANR	3983815	Callee	EXPECTED		3983420	0					
ANR	3983816	Identifier	EXPECTED		3983420	0					
ANR	3983817	ArgumentList	( int ) num_args < op_array -> last_var		3983420	1					
ANR	3983818	Argument	( int ) num_args < op_array -> last_var		3983420	0					
ANR	3983819	RelationalExpression	( int ) num_args < op_array -> last_var		3983420	0		<			
ANR	3983820	CastExpression	( int ) num_args		3983420	0					
ANR	3983821	CastTarget	int		3983420	0					
ANR	3983822	Identifier	num_args		3983420	1					
ANR	3983823	PtrMemberAccess	op_array -> last_var		3983420	1					
ANR	3983824	Identifier	op_array		3983420	0					
ANR	3983825	Identifier	last_var		3983420	1					
ANR	3983826	CompoundStatement		59:3:1816:1858	3983420	1					
ANR	3983827	IdentifierDeclStatement	zval * var = EX_VAR_NUM ( num_args ) ;	2268:3:70552:70584	3983420	0	True				
ANR	3983828	IdentifierDecl	* var = EX_VAR_NUM ( num_args )		3983420	0					
ANR	3983829	IdentifierDeclType	zval *		3983420	0					
ANR	3983830	Identifier	var		3983420	1					
ANR	3983831	AssignmentExpression	* var = EX_VAR_NUM ( num_args )		3983420	2		=			
ANR	3983832	Identifier	var		3983420	0					
ANR	3983833	CallExpression	EX_VAR_NUM ( num_args )		3983420	1					
ANR	3983834	Callee	EX_VAR_NUM		3983420	0					
ANR	3983835	Identifier	EX_VAR_NUM		3983420	0					
ANR	3983836	ArgumentList	num_args		3983420	1					
ANR	3983837	Argument	num_args		3983420	0					
ANR	3983838	Identifier	num_args		3983420	0					
ANR	3983839	IdentifierDeclStatement	zval * end = EX_VAR_NUM ( op_array -> last_var ) ;	2269:3:70589:70631	3983420	1	True				
ANR	3983840	IdentifierDecl	* end = EX_VAR_NUM ( op_array -> last_var )		3983420	0					
ANR	3983841	IdentifierDeclType	zval *		3983420	0					
ANR	3983842	Identifier	end		3983420	1					
ANR	3983843	AssignmentExpression	* end = EX_VAR_NUM ( op_array -> last_var )		3983420	2		=			
ANR	3983844	Identifier	end		3983420	0					
ANR	3983845	CallExpression	EX_VAR_NUM ( op_array -> last_var )		3983420	1					
ANR	3983846	Callee	EX_VAR_NUM		3983420	0					
ANR	3983847	Identifier	EX_VAR_NUM		3983420	0					
ANR	3983848	ArgumentList	op_array -> last_var		3983420	1					
ANR	3983849	Argument	op_array -> last_var		3983420	0					
ANR	3983850	PtrMemberAccess	op_array -> last_var		3983420	0					
ANR	3983851	Identifier	op_array		3983420	0					
ANR	3983852	Identifier	last_var		3983420	1					
ANR	3983853	DoStatement	do		3983420	2					
ANR	3983854	CompoundStatement		61:6:1867:1867	3983420	0					
ANR	3983855	ExpressionStatement	ZVAL_UNDEF ( var )	2272:4:70646:70661	3983420	0	True				
ANR	3983856	CallExpression	ZVAL_UNDEF ( var )		3983420	0					
ANR	3983857	Callee	ZVAL_UNDEF		3983420	0					
ANR	3983858	Identifier	ZVAL_UNDEF		3983420	0					
ANR	3983859	ArgumentList	var		3983420	1					
ANR	3983860	Argument	var		3983420	0					
ANR	3983861	Identifier	var		3983420	0					
ANR	3983862	ExpressionStatement	var ++	2273:4:70667:70672	3983420	1	True				
ANR	3983863	PostIncDecOperationExpression	var ++		3983420	0					
ANR	3983864	Identifier	var		3983420	0					
ANR	3983865	IncDec	++		3983420	1					
ANR	3983866	Condition	var != end	2274:12:70686:70695	3983420	1	True				
ANR	3983867	EqualityExpression	var != end		3983420	0		!=			
ANR	3983868	Identifier	var		3983420	0					
ANR	3983869	Identifier	end		3983420	1					
ANR	3983870	IfStatement	if ( op_array -> this_var != ( uint32_t ) - 1 && EXPECTED ( Z_OBJ ( EX ( This ) ) ) )		3983420	5					
ANR	3983871	Condition	op_array -> this_var != ( uint32_t ) - 1 && EXPECTED ( Z_OBJ ( EX ( This ) ) )	2277:6:70710:70772	3983420	0	True				
ANR	3983872	AndExpression	op_array -> this_var != ( uint32_t ) - 1 && EXPECTED ( Z_OBJ ( EX ( This ) ) )		3983420	0		&&			
ANR	3983873	EqualityExpression	op_array -> this_var != ( uint32_t ) - 1		3983420	0		!=			
ANR	3983874	PtrMemberAccess	op_array -> this_var		3983420	0					
ANR	3983875	Identifier	op_array		3983420	0					
ANR	3983876	Identifier	this_var		3983420	1					
ANR	3983877	CastExpression	( uint32_t ) - 1		3983420	1					
ANR	3983878	CastTarget	uint32_t		3983420	0					
ANR	3983879	UnaryOperationExpression	- 1		3983420	1					
ANR	3983880	UnaryOperator	-		3983420	0					
ANR	3983881	PrimaryExpression	1		3983420	1					
ANR	3983882	CallExpression	EXPECTED ( Z_OBJ ( EX ( This ) ) )		3983420	1					
ANR	3983883	Callee	EXPECTED		3983420	0					
ANR	3983884	Identifier	EXPECTED		3983420	0					
ANR	3983885	ArgumentList	Z_OBJ ( EX ( This ) )		3983420	1					
ANR	3983886	Argument	Z_OBJ ( EX ( This ) )		3983420	0					
ANR	3983887	CallExpression	Z_OBJ ( EX ( This ) )		3983420	0					
ANR	3983888	Callee	Z_OBJ		3983420	0					
ANR	3983889	Identifier	Z_OBJ		3983420	0					
ANR	3983890	ArgumentList	EX ( This )		3983420	1					
ANR	3983891	Argument	EX ( This )		3983420	0					
ANR	3983892	CallExpression	EX ( This )		3983420	0					
ANR	3983893	Callee	EX		3983420	0					
ANR	3983894	Identifier	EX		3983420	0					
ANR	3983895	ArgumentList	This		3983420	1					
ANR	3983896	Argument	This		3983420	0					
ANR	3983897	Identifier	This		3983420	0					
ANR	3983898	CompoundStatement		67:71:2002:2002	3983420	1					
ANR	3983899	ExpressionStatement	"ZVAL_OBJ ( EX_VAR ( op_array -> this_var ) , Z_OBJ ( EX ( This ) ) )"	2278:3:70780:70833	3983420	0	True				
ANR	3983900	CallExpression	"ZVAL_OBJ ( EX_VAR ( op_array -> this_var ) , Z_OBJ ( EX ( This ) ) )"		3983420	0					
ANR	3983901	Callee	ZVAL_OBJ		3983420	0					
ANR	3983902	Identifier	ZVAL_OBJ		3983420	0					
ANR	3983903	ArgumentList	EX_VAR ( op_array -> this_var )		3983420	1					
ANR	3983904	Argument	EX_VAR ( op_array -> this_var )		3983420	0					
ANR	3983905	CallExpression	EX_VAR ( op_array -> this_var )		3983420	0					
ANR	3983906	Callee	EX_VAR		3983420	0					
ANR	3983907	Identifier	EX_VAR		3983420	0					
ANR	3983908	ArgumentList	op_array -> this_var		3983420	1					
ANR	3983909	Argument	op_array -> this_var		3983420	0					
ANR	3983910	PtrMemberAccess	op_array -> this_var		3983420	0					
ANR	3983911	Identifier	op_array		3983420	0					
ANR	3983912	Identifier	this_var		3983420	1					
ANR	3983913	Argument	Z_OBJ ( EX ( This ) )		3983420	1					
ANR	3983914	CallExpression	Z_OBJ ( EX ( This ) )		3983420	0					
ANR	3983915	Callee	Z_OBJ		3983420	0					
ANR	3983916	Identifier	Z_OBJ		3983420	0					
ANR	3983917	ArgumentList	EX ( This )		3983420	1					
ANR	3983918	Argument	EX ( This )		3983420	0					
ANR	3983919	CallExpression	EX ( This )		3983420	0					
ANR	3983920	Callee	EX		3983420	0					
ANR	3983921	Identifier	EX		3983420	0					
ANR	3983922	ArgumentList	This		3983420	1					
ANR	3983923	Argument	This		3983420	0					
ANR	3983924	Identifier	This		3983420	0					
ANR	3983925	ExpressionStatement	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) ) ++	2279:3:70838:70868	3983420	1	True				
ANR	3983926	PostIncDecOperationExpression	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) ) ++		3983420	0					
ANR	3983927	CallExpression	GC_REFCOUNT ( Z_OBJ ( EX ( This ) ) )		3983420	0					
ANR	3983928	Callee	GC_REFCOUNT		3983420	0					
ANR	3983929	Identifier	GC_REFCOUNT		3983420	0					
ANR	3983930	ArgumentList	Z_OBJ ( EX ( This ) )		3983420	1					
ANR	3983931	Argument	Z_OBJ ( EX ( This ) )		3983420	0					
ANR	3983932	CallExpression	Z_OBJ ( EX ( This ) )		3983420	0					
ANR	3983933	Callee	Z_OBJ		3983420	0					
ANR	3983934	Identifier	Z_OBJ		3983420	0					
ANR	3983935	ArgumentList	EX ( This )		3983420	1					
ANR	3983936	Argument	EX ( This )		3983420	0					
ANR	3983937	CallExpression	EX ( This )		3983420	0					
ANR	3983938	Callee	EX		3983420	0					
ANR	3983939	Identifier	EX		3983420	0					
ANR	3983940	ArgumentList	This		3983420	1					
ANR	3983941	Argument	This		3983420	0					
ANR	3983942	Identifier	This		3983420	0					
ANR	3983943	IncDec	++		3983420	1					
ANR	3983944	IfStatement	if ( ! op_array -> run_time_cache )		3983420	5					
ANR	3983945	Condition	! op_array -> run_time_cache	2283:5:70883:70907	3983420	0	True				
ANR	3983946	UnaryOperationExpression	! op_array -> run_time_cache		3983420	0					
ANR	3983947	UnaryOperator	!		3983420	0					
ANR	3983948	PtrMemberAccess	op_array -> run_time_cache		3983420	1					
ANR	3983949	Identifier	op_array		3983420	0					
ANR	3983950	Identifier	run_time_cache		3983420	1					
ANR	3983951	CompoundStatement		73:32:2137:2137	3983420	1					
ANR	3983952	IfStatement	if ( op_array -> function_name )		3983420	0					
ANR	3983953	Condition	op_array -> function_name	2284:6:70918:70940	3983420	0	True				
ANR	3983954	PtrMemberAccess	op_array -> function_name		3983420	0					
ANR	3983955	Identifier	op_array		3983420	0					
ANR	3983956	Identifier	function_name		3983420	1					
ANR	3983957	CompoundStatement		74:31:2170:2170	3983420	1					
ANR	3983958	ExpressionStatement	"op_array -> run_time_cache = zend_arena_alloc ( & CG ( arena ) , op_array -> cache_size )"	2285:3:70948:71025	3983420	0	True				
ANR	3983959	AssignmentExpression	"op_array -> run_time_cache = zend_arena_alloc ( & CG ( arena ) , op_array -> cache_size )"		3983420	0		=			
ANR	3983960	PtrMemberAccess	op_array -> run_time_cache		3983420	0					
ANR	3983961	Identifier	op_array		3983420	0					
ANR	3983962	Identifier	run_time_cache		3983420	1					
ANR	3983963	CallExpression	"zend_arena_alloc ( & CG ( arena ) , op_array -> cache_size )"		3983420	1					
ANR	3983964	Callee	zend_arena_alloc		3983420	0					
ANR	3983965	Identifier	zend_arena_alloc		3983420	0					
ANR	3983966	ArgumentList	& CG ( arena )		3983420	1					
ANR	3983967	Argument	& CG ( arena )		3983420	0					
ANR	3983968	UnaryOperationExpression	& CG ( arena )		3983420	0					
ANR	3983969	UnaryOperator	&		3983420	0					
ANR	3983970	CallExpression	CG ( arena )		3983420	1					
ANR	3983971	Callee	CG		3983420	0					
ANR	3983972	Identifier	CG		3983420	0					
ANR	3983973	ArgumentList	arena		3983420	1					
ANR	3983974	Argument	arena		3983420	0					
ANR	3983975	Identifier	arena		3983420	0					
ANR	3983976	Argument	op_array -> cache_size		3983420	1					
ANR	3983977	PtrMemberAccess	op_array -> cache_size		3983420	0					
ANR	3983978	Identifier	op_array		3983420	0					
ANR	3983979	Identifier	cache_size		3983420	1					
ANR	3983980	ElseStatement	else		3983420	0					
ANR	3983981	CompoundStatement		76:9:2263:2263	3983420	0					
ANR	3983982	ExpressionStatement	op_array -> run_time_cache = emalloc ( op_array -> cache_size )	2287:3:71041:71097	3983420	0	True				
ANR	3983983	AssignmentExpression	op_array -> run_time_cache = emalloc ( op_array -> cache_size )		3983420	0		=			
ANR	3983984	PtrMemberAccess	op_array -> run_time_cache		3983420	0					
ANR	3983985	Identifier	op_array		3983420	0					
ANR	3983986	Identifier	run_time_cache		3983420	1					
ANR	3983987	CallExpression	emalloc ( op_array -> cache_size )		3983420	1					
ANR	3983988	Callee	emalloc		3983420	0					
ANR	3983989	Identifier	emalloc		3983420	0					
ANR	3983990	ArgumentList	op_array -> cache_size		3983420	1					
ANR	3983991	Argument	op_array -> cache_size		3983420	0					
ANR	3983992	PtrMemberAccess	op_array -> cache_size		3983420	0					
ANR	3983993	Identifier	op_array		3983420	0					
ANR	3983994	Identifier	cache_size		3983420	1					
ANR	3983995	ExpressionStatement	"memset ( op_array -> run_time_cache , 0 , op_array -> cache_size )"	2289:2:71105:71162	3983420	1	True				
ANR	3983996	CallExpression	"memset ( op_array -> run_time_cache , 0 , op_array -> cache_size )"		3983420	0					
ANR	3983997	Callee	memset		3983420	0					
ANR	3983998	Identifier	memset		3983420	0					
ANR	3983999	ArgumentList	op_array -> run_time_cache		3983420	1					
ANR	3984000	Argument	op_array -> run_time_cache		3983420	0					
ANR	3984001	PtrMemberAccess	op_array -> run_time_cache		3983420	0					
ANR	3984002	Identifier	op_array		3983420	0					
ANR	3984003	Identifier	run_time_cache		3983420	1					
ANR	3984004	Argument	0		3983420	1					
ANR	3984005	PrimaryExpression	0		3983420	0					
ANR	3984006	Argument	op_array -> cache_size		3983420	2					
ANR	3984007	PtrMemberAccess	op_array -> cache_size		3983420	0					
ANR	3984008	Identifier	op_array		3983420	0					
ANR	3984009	Identifier	cache_size		3983420	1					
ANR	3984010	ExpressionStatement	EX_LOAD_RUN_TIME_CACHE ( op_array )	2291:1:71168:71200	3983420	6	True				
ANR	3984011	CallExpression	EX_LOAD_RUN_TIME_CACHE ( op_array )		3983420	0					
ANR	3984012	Callee	EX_LOAD_RUN_TIME_CACHE		3983420	0					
ANR	3984013	Identifier	EX_LOAD_RUN_TIME_CACHE		3983420	0					
ANR	3984014	ArgumentList	op_array		3983420	1					
ANR	3984015	Argument	op_array		3983420	0					
ANR	3984016	Identifier	op_array		3983420	0					
ANR	3984017	ExpressionStatement	EX_LOAD_LITERALS ( op_array )	2292:1:71203:71229	3983420	7	True				
ANR	3984018	CallExpression	EX_LOAD_LITERALS ( op_array )		3983420	0					
ANR	3984019	Callee	EX_LOAD_LITERALS		3983420	0					
ANR	3984020	Identifier	EX_LOAD_LITERALS		3983420	0					
ANR	3984021	ArgumentList	op_array		3983420	1					
ANR	3984022	Argument	op_array		3983420	0					
ANR	3984023	Identifier	op_array		3983420	0					
ANR	3984024	ExpressionStatement	EG ( current_execute_data ) = execute_data	2294:1:71233:71272	3983420	8	True				
ANR	3984025	AssignmentExpression	EG ( current_execute_data ) = execute_data		3983420	0		=			
ANR	3984026	CallExpression	EG ( current_execute_data )		3983420	0					
ANR	3984027	Callee	EG		3983420	0					
ANR	3984028	Identifier	EG		3983420	0					
ANR	3984029	ArgumentList	current_execute_data		3983420	1					
ANR	3984030	Argument	current_execute_data		3983420	0					
ANR	3984031	Identifier	current_execute_data		3983420	0					
ANR	3984032	Identifier	execute_data		3983420	1					
ANR	3984033	ExpressionStatement	ZEND_VM_INTERRUPT_CHECK ( )	2295:1:71275:71300	3983420	9	True				
ANR	3984034	CallExpression	ZEND_VM_INTERRUPT_CHECK ( )		3983420	0					
ANR	3984035	Callee	ZEND_VM_INTERRUPT_CHECK		3983420	0					
ANR	3984036	Identifier	ZEND_VM_INTERRUPT_CHECK		3983420	0					
ANR	3984037	ArgumentList			3983420	1					
ANR	3984038	ReturnType	static zend_always_inline void		3983420	1					
ANR	3984039	Identifier	i_init_execute_data		3983420	2					
ANR	3984040	ParameterList	"zend_execute_data * execute_data , zend_op_array * op_array , zval * return_value"		3983420	3					
ANR	3984041	Parameter	zend_execute_data * execute_data	2210:51:68684:68714	3983420	0	True				
ANR	3984042	ParameterType	zend_execute_data *		3983420	0					
ANR	3984043	Identifier	execute_data		3983420	1					
ANR	3984044	Parameter	zend_op_array * op_array	2210:84:68717:68739	3983420	1	True				
ANR	3984045	ParameterType	zend_op_array *		3983420	0					
ANR	3984046	Identifier	op_array		3983420	1					
ANR	3984047	Parameter	zval * return_value	2210:109:68742:68759	3983420	2	True				
ANR	3984048	ParameterType	zval *		3983420	0					
ANR	3984049	Identifier	return_value		3983420	1					
ANR	3984050	CFGEntryNode	ENTRY		3983420		True				
ANR	3984051	CFGExitNode	EXIT		3983420		True				
ANR	3984052	Symbol	return_value		3983420						
ANR	3984053	Symbol	dst		3983420						
ANR	3984054	Symbol	current_execute_data		3983420						
ANR	3984055	Symbol	op_array -> last_var		3983420						
ANR	3984056	Symbol	zend_hash_str_add		3983420						
ANR	3984057	Symbol	arena		3983420						
ANR	3984058	Symbol	IS_TYPE_REFCOUNTED		3983420						
ANR	3984059	Symbol	execute_data		3983420						
ANR	3984060	Symbol	first_extra_arg		3983420						
ANR	3984061	Symbol	ZEND_ACC_HAS_TYPE_HINTS		3983420						
ANR	3984062	Symbol	& CG		3983420						
ANR	3984063	Symbol	UNEXPECTED		3983420						
ANR	3984064	Symbol	op_array -> run_time_cache		3983420						
ANR	3984065	Symbol	Z_OBJ		3983420						
ANR	3984066	Symbol	emalloc		3983420						
ANR	3984067	Symbol	opline		3983420						
ANR	3984068	Symbol	op_array -> opcodes		3983420						
ANR	3984069	Symbol	op_array -> fn_flags		3983420						
ANR	3984070	Symbol	num_args		3983420						
ANR	3984071	Symbol	This		3983420						
ANR	3984072	Symbol	op_array -> num_args		3983420						
ANR	3984073	Symbol	end		3983420						
ANR	3984074	Symbol	GC_REFCOUNT		3983420						
ANR	3984075	Symbol	op_array -> T		3983420						
ANR	3984076	Symbol	EG		3983420						
ANR	3984077	Symbol	NULL		3983420						
ANR	3984078	Symbol	zend_arena_alloc		3983420						
ANR	3984079	Symbol	src		3983420						
ANR	3984080	Symbol	op_array -> this_var		3983420						
ANR	3984081	Symbol	var		3983420						
ANR	3984082	Symbol	type_flags		3983420						
ANR	3984083	Symbol	Z_TYPE_FLAGS_SHIFT		3983420						
ANR	3984084	Symbol	symbol_table		3983420						
ANR	3984085	Symbol	* op_array		3983420						
ANR	3984086	Symbol	Z_TYPE_INFO_P		3983420						
ANR	3984087	Symbol	op_array -> function_name		3983420						
ANR	3984088	Symbol	call		3983420						
ANR	3984089	Symbol	EX		3983420						
ANR	3984090	Symbol	func		3983420						
ANR	3984091	Symbol	EX_NUM_ARGS		3983420						
ANR	3984092	Symbol	EX_VAR_NUM		3983420						
ANR	3984093	Symbol	EX_VAR		3983420						
ANR	3984094	Symbol	op_array -> cache_size		3983420						
ANR	3984095	Symbol	& EX		3983420						
ANR	3984096	Symbol	EXPECTED		3983420						
ANR	3984097	Symbol	op_array		3983420						
ANR	3984098	Function	zend_create_generator_execute_data	2299:0:71315:73232							
ANR	3984099	FunctionDef	"zend_create_generator_execute_data (zend_execute_data * call , zend_op_array * op_array , zval * return_value)"		3984098	0					
ANR	3984100	CompoundStatement		2300:0:71458:73232	3984098	0					
ANR	3984101	IdentifierDeclStatement	zend_execute_data * execute_data ;	2310:1:71957:71988	3984098	0	True				
ANR	3984102	IdentifierDecl	* execute_data		3984098	0					
ANR	3984103	IdentifierDeclType	zend_execute_data *		3984098	0					
ANR	3984104	Identifier	execute_data		3984098	1					
ANR	3984105	IdentifierDeclStatement	uint32_t num_args = ZEND_CALL_NUM_ARGS ( call ) ;	2311:1:71991:72035	3984098	1	True				
ANR	3984106	IdentifierDecl	num_args = ZEND_CALL_NUM_ARGS ( call )		3984098	0					
ANR	3984107	IdentifierDeclType	uint32_t		3984098	0					
ANR	3984108	Identifier	num_args		3984098	1					
ANR	3984109	AssignmentExpression	num_args = ZEND_CALL_NUM_ARGS ( call )		3984098	2		=			
ANR	3984110	Identifier	num_args		3984098	0					
ANR	3984111	CallExpression	ZEND_CALL_NUM_ARGS ( call )		3984098	1					
ANR	3984112	Callee	ZEND_CALL_NUM_ARGS		3984098	0					
ANR	3984113	Identifier	ZEND_CALL_NUM_ARGS		3984098	0					
ANR	3984114	ArgumentList	call		3984098	1					
ANR	3984115	Argument	call		3984098	0					
ANR	3984116	Identifier	call		3984098	0					
ANR	3984117	IdentifierDeclStatement	"size_t stack_size = ( ZEND_CALL_FRAME_SLOT + MAX ( op_array -> last_var + op_array -> T , num_args ) ) * sizeof ( zval ) ;"	2312:1:72038:72145	3984098	2	True				
ANR	3984118	IdentifierDecl	"stack_size = ( ZEND_CALL_FRAME_SLOT + MAX ( op_array -> last_var + op_array -> T , num_args ) ) * sizeof ( zval )"		3984098	0					
ANR	3984119	IdentifierDeclType	size_t		3984098	0					
ANR	3984120	Identifier	stack_size		3984098	1					
ANR	3984121	AssignmentExpression	"stack_size = ( ZEND_CALL_FRAME_SLOT + MAX ( op_array -> last_var + op_array -> T , num_args ) ) * sizeof ( zval )"		3984098	2		=			
ANR	3984122	Identifier	stack_size		3984098	0					
ANR	3984123	MultiplicativeExpression	"( ZEND_CALL_FRAME_SLOT + MAX ( op_array -> last_var + op_array -> T , num_args ) ) * sizeof ( zval )"		3984098	1		*			
ANR	3984124	AdditiveExpression	"ZEND_CALL_FRAME_SLOT + MAX ( op_array -> last_var + op_array -> T , num_args )"		3984098	0		+			
ANR	3984125	Identifier	ZEND_CALL_FRAME_SLOT		3984098	0					
ANR	3984126	CallExpression	"MAX ( op_array -> last_var + op_array -> T , num_args )"		3984098	1					
ANR	3984127	Callee	MAX		3984098	0					
ANR	3984128	Identifier	MAX		3984098	0					
ANR	3984129	ArgumentList	op_array -> last_var + op_array -> T		3984098	1					
ANR	3984130	Argument	op_array -> last_var + op_array -> T		3984098	0					
ANR	3984131	AdditiveExpression	op_array -> last_var + op_array -> T		3984098	0		+			
ANR	3984132	PtrMemberAccess	op_array -> last_var		3984098	0					
ANR	3984133	Identifier	op_array		3984098	0					
ANR	3984134	Identifier	last_var		3984098	1					
ANR	3984135	PtrMemberAccess	op_array -> T		3984098	1					
ANR	3984136	Identifier	op_array		3984098	0					
ANR	3984137	Identifier	T		3984098	1					
ANR	3984138	Argument	num_args		3984098	1					
ANR	3984139	Identifier	num_args		3984098	0					
ANR	3984140	SizeofExpression	sizeof ( zval )		3984098	1					
ANR	3984141	Sizeof	sizeof		3984098	0					
ANR	3984142	SizeofOperand	zval		3984098	1					
ANR	3984143	IdentifierDeclStatement	uint32_t call_info ;	2313:1:72148:72166	3984098	3	True				
ANR	3984144	IdentifierDecl	call_info		3984098	0					
ANR	3984145	IdentifierDeclType	uint32_t		3984098	0					
ANR	3984146	Identifier	call_info		3984098	1					
ANR	3984147	ExpressionStatement	"EG ( vm_stack ) = zend_vm_stack_new_page ( EXPECTED ( stack_size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 1 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 1 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 1 , stack_size ) , NULL )"	2315:1:72170:72358	3984098	4	True				
ANR	3984148	AssignmentExpression	"EG ( vm_stack ) = zend_vm_stack_new_page ( EXPECTED ( stack_size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 1 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 1 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 1 , stack_size ) , NULL )"		3984098	0		=			
ANR	3984149	CallExpression	EG ( vm_stack )		3984098	0					
ANR	3984150	Callee	EG		3984098	0					
ANR	3984151	Identifier	EG		3984098	0					
ANR	3984152	ArgumentList	vm_stack		3984098	1					
ANR	3984153	Argument	vm_stack		3984098	0					
ANR	3984154	Identifier	vm_stack		3984098	0					
ANR	3984155	CallExpression	"zend_vm_stack_new_page ( EXPECTED ( stack_size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 1 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 1 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 1 , stack_size ) , NULL )"		3984098	1					
ANR	3984156	Callee	zend_vm_stack_new_page		3984098	0					
ANR	3984157	Identifier	zend_vm_stack_new_page		3984098	0					
ANR	3984158	ArgumentList	"EXPECTED ( stack_size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 1 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 1 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 1 , stack_size )"		3984098	1					
ANR	3984159	Argument	"EXPECTED ( stack_size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 1 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 1 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 1 , stack_size )"		3984098	0					
ANR	3984160	ConditionalExpression	"EXPECTED ( stack_size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 1 ) ) ? ZEND_VM_STACK_PAGE_SIZE ( 1 ) : ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 1 , stack_size )"		3984098	0					
ANR	3984161	Condition	EXPECTED ( stack_size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 1 ) )		3984098	0					
ANR	3984162	CallExpression	EXPECTED ( stack_size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 1 ) )		3984098	0					
ANR	3984163	Callee	EXPECTED		3984098	0					
ANR	3984164	Identifier	EXPECTED		3984098	0					
ANR	3984165	ArgumentList	stack_size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 1 )		3984098	1					
ANR	3984166	Argument	stack_size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 1 )		3984098	0					
ANR	3984167	RelationalExpression	stack_size < ZEND_VM_STACK_FREE_PAGE_SIZE ( 1 )		3984098	0		<			
ANR	3984168	Identifier	stack_size		3984098	0					
ANR	3984169	CallExpression	ZEND_VM_STACK_FREE_PAGE_SIZE ( 1 )		3984098	1					
ANR	3984170	Callee	ZEND_VM_STACK_FREE_PAGE_SIZE		3984098	0					
ANR	3984171	Identifier	ZEND_VM_STACK_FREE_PAGE_SIZE		3984098	0					
ANR	3984172	ArgumentList	1		3984098	1					
ANR	3984173	Argument	1		3984098	0					
ANR	3984174	PrimaryExpression	1		3984098	0					
ANR	3984175	CallExpression	ZEND_VM_STACK_PAGE_SIZE ( 1 )		3984098	1					
ANR	3984176	Callee	ZEND_VM_STACK_PAGE_SIZE		3984098	0					
ANR	3984177	Identifier	ZEND_VM_STACK_PAGE_SIZE		3984098	0					
ANR	3984178	ArgumentList	1		3984098	1					
ANR	3984179	Argument	1		3984098	0					
ANR	3984180	PrimaryExpression	1		3984098	0					
ANR	3984181	CallExpression	"ZEND_VM_STACK_PAGE_ALIGNED_SIZE ( 1 , stack_size )"		3984098	2					
ANR	3984182	Callee	ZEND_VM_STACK_PAGE_ALIGNED_SIZE		3984098	0					
ANR	3984183	Identifier	ZEND_VM_STACK_PAGE_ALIGNED_SIZE		3984098	0					
ANR	3984184	ArgumentList	1		3984098	1					
ANR	3984185	Argument	1		3984098	0					
ANR	3984186	PrimaryExpression	1		3984098	0					
ANR	3984187	Argument	stack_size		3984098	1					
ANR	3984188	Identifier	stack_size		3984098	0					
ANR	3984189	Argument	NULL		3984098	1					
ANR	3984190	Identifier	NULL		3984098	0					
ANR	3984191	ExpressionStatement	EG ( vm_stack_top ) = EG ( vm_stack ) -> top	2320:1:72361:72397	3984098	5	True				
ANR	3984192	AssignmentExpression	EG ( vm_stack_top ) = EG ( vm_stack ) -> top		3984098	0		=			
ANR	3984193	CallExpression	EG ( vm_stack_top )		3984098	0					
ANR	3984194	Callee	EG		3984098	0					
ANR	3984195	Identifier	EG		3984098	0					
ANR	3984196	ArgumentList	vm_stack_top		3984098	1					
ANR	3984197	Argument	vm_stack_top		3984098	0					
ANR	3984198	Identifier	vm_stack_top		3984098	0					
ANR	3984199	PtrMemberAccess	EG ( vm_stack ) -> top		3984098	1					
ANR	3984200	CallExpression	EG ( vm_stack )		3984098	0					
ANR	3984201	Callee	EG		3984098	0					
ANR	3984202	Identifier	EG		3984098	0					
ANR	3984203	ArgumentList	vm_stack		3984098	1					
ANR	3984204	Argument	vm_stack		3984098	0					
ANR	3984205	Identifier	vm_stack		3984098	0					
ANR	3984206	Identifier	top		3984098	1					
ANR	3984207	ExpressionStatement	EG ( vm_stack_end ) = EG ( vm_stack ) -> end	2321:1:72400:72436	3984098	6	True				
ANR	3984208	AssignmentExpression	EG ( vm_stack_end ) = EG ( vm_stack ) -> end		3984098	0		=			
ANR	3984209	CallExpression	EG ( vm_stack_end )		3984098	0					
ANR	3984210	Callee	EG		3984098	0					
ANR	3984211	Identifier	EG		3984098	0					
ANR	3984212	ArgumentList	vm_stack_end		3984098	1					
ANR	3984213	Argument	vm_stack_end		3984098	0					
ANR	3984214	Identifier	vm_stack_end		3984098	0					
ANR	3984215	PtrMemberAccess	EG ( vm_stack ) -> end		3984098	1					
ANR	3984216	CallExpression	EG ( vm_stack )		3984098	0					
ANR	3984217	Callee	EG		3984098	0					
ANR	3984218	Identifier	EG		3984098	0					
ANR	3984219	ArgumentList	vm_stack		3984098	1					
ANR	3984220	Argument	vm_stack		3984098	0					
ANR	3984221	Identifier	vm_stack		3984098	0					
ANR	3984222	Identifier	end		3984098	1					
ANR	3984223	ExpressionStatement	call_info = ZEND_CALL_TOP_FUNCTION | ZEND_CALL_ALLOCATED | ( ZEND_CALL_INFO ( call ) & ( ZEND_CALL_CLOSURE | ZEND_CALL_RELEASE_THIS ) )	2323:1:72440:72566	3984098	7	True				
ANR	3984224	AssignmentExpression	call_info = ZEND_CALL_TOP_FUNCTION | ZEND_CALL_ALLOCATED | ( ZEND_CALL_INFO ( call ) & ( ZEND_CALL_CLOSURE | ZEND_CALL_RELEASE_THIS ) )		3984098	0		=			
ANR	3984225	Identifier	call_info		3984098	0					
ANR	3984226	InclusiveOrExpression	ZEND_CALL_TOP_FUNCTION | ZEND_CALL_ALLOCATED | ( ZEND_CALL_INFO ( call ) & ( ZEND_CALL_CLOSURE | ZEND_CALL_RELEASE_THIS ) )		3984098	1		|			
ANR	3984227	Identifier	ZEND_CALL_TOP_FUNCTION		3984098	0					
ANR	3984228	InclusiveOrExpression	ZEND_CALL_ALLOCATED | ( ZEND_CALL_INFO ( call ) & ( ZEND_CALL_CLOSURE | ZEND_CALL_RELEASE_THIS ) )		3984098	1		|			
ANR	3984229	Identifier	ZEND_CALL_ALLOCATED		3984098	0					
ANR	3984230	BitAndExpression	ZEND_CALL_INFO ( call ) & ( ZEND_CALL_CLOSURE | ZEND_CALL_RELEASE_THIS )		3984098	1		&			
ANR	3984231	CallExpression	ZEND_CALL_INFO ( call )		3984098	0					
ANR	3984232	Callee	ZEND_CALL_INFO		3984098	0					
ANR	3984233	Identifier	ZEND_CALL_INFO		3984098	0					
ANR	3984234	ArgumentList	call		3984098	1					
ANR	3984235	Argument	call		3984098	0					
ANR	3984236	Identifier	call		3984098	0					
ANR	3984237	InclusiveOrExpression	ZEND_CALL_CLOSURE | ZEND_CALL_RELEASE_THIS		3984098	1		|			
ANR	3984238	Identifier	ZEND_CALL_CLOSURE		3984098	0					
ANR	3984239	Identifier	ZEND_CALL_RELEASE_THIS		3984098	1					
ANR	3984240	IfStatement	if ( Z_OBJ ( call -> This ) )		3984098	8					
ANR	3984241	Condition	Z_OBJ ( call -> This )	2324:5:72573:72589	3984098	0	True				
ANR	3984242	CallExpression	Z_OBJ ( call -> This )		3984098	0					
ANR	3984243	Callee	Z_OBJ		3984098	0					
ANR	3984244	Identifier	Z_OBJ		3984098	0					
ANR	3984245	ArgumentList	call -> This		3984098	1					
ANR	3984246	Argument	call -> This		3984098	0					
ANR	3984247	PtrMemberAccess	call -> This		3984098	0					
ANR	3984248	Identifier	call		3984098	0					
ANR	3984249	Identifier	This		3984098	1					
ANR	3984250	CompoundStatement		25:24:1133:1133	3984098	1					
ANR	3984251	ExpressionStatement	call_info |= ZEND_CALL_RELEASE_THIS	2325:2:72596:72631	3984098	0	True				
ANR	3984252	AssignmentExpression	call_info |= ZEND_CALL_RELEASE_THIS		3984098	0		|=			
ANR	3984253	Identifier	call_info		3984098	0					
ANR	3984254	Identifier	ZEND_CALL_RELEASE_THIS		3984098	1					
ANR	3984255	ExpressionStatement	"execute_data = zend_vm_stack_push_call_frame ( call_info , ( zend_function * ) op_array , num_args , call -> called_scope , Z_OBJ ( call -> This ) )"	2327:1:72637:72778	3984098	9	True				
ANR	3984256	AssignmentExpression	"execute_data = zend_vm_stack_push_call_frame ( call_info , ( zend_function * ) op_array , num_args , call -> called_scope , Z_OBJ ( call -> This ) )"		3984098	0		=			
ANR	3984257	Identifier	execute_data		3984098	0					
ANR	3984258	CallExpression	"zend_vm_stack_push_call_frame ( call_info , ( zend_function * ) op_array , num_args , call -> called_scope , Z_OBJ ( call -> This ) )"		3984098	1					
ANR	3984259	Callee	zend_vm_stack_push_call_frame		3984098	0					
ANR	3984260	Identifier	zend_vm_stack_push_call_frame		3984098	0					
ANR	3984261	ArgumentList	call_info		3984098	1					
ANR	3984262	Argument	call_info		3984098	0					
ANR	3984263	Identifier	call_info		3984098	0					
ANR	3984264	Argument	( zend_function * ) op_array		3984098	1					
ANR	3984265	CastExpression	( zend_function * ) op_array		3984098	0					
ANR	3984266	CastTarget	zend_function *		3984098	0					
ANR	3984267	Identifier	op_array		3984098	1					
ANR	3984268	Argument	num_args		3984098	2					
ANR	3984269	Identifier	num_args		3984098	0					
ANR	3984270	Argument	call -> called_scope		3984098	3					
ANR	3984271	PtrMemberAccess	call -> called_scope		3984098	0					
ANR	3984272	Identifier	call		3984098	0					
ANR	3984273	Identifier	called_scope		3984098	1					
ANR	3984274	Argument	Z_OBJ ( call -> This )		3984098	4					
ANR	3984275	CallExpression	Z_OBJ ( call -> This )		3984098	0					
ANR	3984276	Callee	Z_OBJ		3984098	0					
ANR	3984277	Identifier	Z_OBJ		3984098	0					
ANR	3984278	ArgumentList	call -> This		3984098	1					
ANR	3984279	Argument	call -> This		3984098	0					
ANR	3984280	PtrMemberAccess	call -> This		3984098	0					
ANR	3984281	Identifier	call		3984098	0					
ANR	3984282	Identifier	This		3984098	1					
ANR	3984283	ExpressionStatement	EX ( prev_execute_data ) = NULL	2333:1:72781:72809	3984098	10	True				
ANR	3984284	AssignmentExpression	EX ( prev_execute_data ) = NULL		3984098	0		=			
ANR	3984285	CallExpression	EX ( prev_execute_data )		3984098	0					
ANR	3984286	Callee	EX		3984098	0					
ANR	3984287	Identifier	EX		3984098	0					
ANR	3984288	ArgumentList	prev_execute_data		3984098	1					
ANR	3984289	Argument	prev_execute_data		3984098	0					
ANR	3984290	Identifier	prev_execute_data		3984098	0					
ANR	3984291	Identifier	NULL		3984098	1					
ANR	3984292	ExpressionStatement	EX_NUM_ARGS ( ) = num_args	2334:1:72812:72836	3984098	11	True				
ANR	3984293	AssignmentExpression	EX_NUM_ARGS ( ) = num_args		3984098	0		=			
ANR	3984294	CallExpression	EX_NUM_ARGS ( )		3984098	0					
ANR	3984295	Callee	EX_NUM_ARGS		3984098	0					
ANR	3984296	Identifier	EX_NUM_ARGS		3984098	0					
ANR	3984297	ArgumentList			3984098	1					
ANR	3984298	Identifier	num_args		3984098	1					
ANR	3984299	IfStatement	if ( num_args > 0 )		3984098	12					
ANR	3984300	Condition	num_args > 0	2337:5:72866:72877	3984098	0	True				
ANR	3984301	RelationalExpression	num_args > 0		3984098	0		>			
ANR	3984302	Identifier	num_args		3984098	0					
ANR	3984303	PrimaryExpression	0		3984098	1					
ANR	3984304	CompoundStatement		41:2:1517:1547	3984098	1					
ANR	3984305	IdentifierDeclStatement	"zval * arg_src = ZEND_CALL_ARG ( call , 1 ) ;"	2338:2:72884:72922	3984098	0	True				
ANR	3984306	IdentifierDecl	"* arg_src = ZEND_CALL_ARG ( call , 1 )"		3984098	0					
ANR	3984307	IdentifierDeclType	zval *		3984098	0					
ANR	3984308	Identifier	arg_src		3984098	1					
ANR	3984309	AssignmentExpression	"* arg_src = ZEND_CALL_ARG ( call , 1 )"		3984098	2		=			
ANR	3984310	Identifier	arg_src		3984098	0					
ANR	3984311	CallExpression	"ZEND_CALL_ARG ( call , 1 )"		3984098	1					
ANR	3984312	Callee	ZEND_CALL_ARG		3984098	0					
ANR	3984313	Identifier	ZEND_CALL_ARG		3984098	0					
ANR	3984314	ArgumentList	call		3984098	1					
ANR	3984315	Argument	call		3984098	0					
ANR	3984316	Identifier	call		3984098	0					
ANR	3984317	Argument	1		3984098	1					
ANR	3984318	PrimaryExpression	1		3984098	0					
ANR	3984319	IdentifierDeclStatement	"zval * arg_dst = ZEND_CALL_ARG ( execute_data , 1 ) ;"	2339:2:72926:72972	3984098	1	True				
ANR	3984320	IdentifierDecl	"* arg_dst = ZEND_CALL_ARG ( execute_data , 1 )"		3984098	0					
ANR	3984321	IdentifierDeclType	zval *		3984098	0					
ANR	3984322	Identifier	arg_dst		3984098	1					
ANR	3984323	AssignmentExpression	"* arg_dst = ZEND_CALL_ARG ( execute_data , 1 )"		3984098	2		=			
ANR	3984324	Identifier	arg_dst		3984098	0					
ANR	3984325	CallExpression	"ZEND_CALL_ARG ( execute_data , 1 )"		3984098	1					
ANR	3984326	Callee	ZEND_CALL_ARG		3984098	0					
ANR	3984327	Identifier	ZEND_CALL_ARG		3984098	0					
ANR	3984328	ArgumentList	execute_data		3984098	1					
ANR	3984329	Argument	execute_data		3984098	0					
ANR	3984330	Identifier	execute_data		3984098	0					
ANR	3984331	Argument	1		3984098	1					
ANR	3984332	PrimaryExpression	1		3984098	0					
ANR	3984333	IdentifierDeclStatement	zval * end = arg_src + num_args ;	2340:2:72976:73006	3984098	2	True				
ANR	3984334	IdentifierDecl	* end = arg_src + num_args		3984098	0					
ANR	3984335	IdentifierDeclType	zval *		3984098	0					
ANR	3984336	Identifier	end		3984098	1					
ANR	3984337	AssignmentExpression	* end = arg_src + num_args		3984098	2		=			
ANR	3984338	Identifier	end		3984098	0					
ANR	3984339	AdditiveExpression	arg_src + num_args		3984098	1		+			
ANR	3984340	Identifier	arg_src		3984098	0					
ANR	3984341	Identifier	num_args		3984098	1					
ANR	3984342	DoStatement	do		3984098	3					
ANR	3984343	CompoundStatement		43:5:1555:1555	3984098	0					
ANR	3984344	ExpressionStatement	"ZVAL_COPY_VALUE ( arg_dst , arg_src )"	2343:3:73019:73052	3984098	0	True				
ANR	3984345	CallExpression	"ZVAL_COPY_VALUE ( arg_dst , arg_src )"		3984098	0					
ANR	3984346	Callee	ZVAL_COPY_VALUE		3984098	0					
ANR	3984347	Identifier	ZVAL_COPY_VALUE		3984098	0					
ANR	3984348	ArgumentList	arg_dst		3984098	1					
ANR	3984349	Argument	arg_dst		3984098	0					
ANR	3984350	Identifier	arg_dst		3984098	0					
ANR	3984351	Argument	arg_src		3984098	1					
ANR	3984352	Identifier	arg_src		3984098	0					
ANR	3984353	ExpressionStatement	arg_src ++	2344:3:73057:73066	3984098	1	True				
ANR	3984354	PostIncDecOperationExpression	arg_src ++		3984098	0					
ANR	3984355	Identifier	arg_src		3984098	0					
ANR	3984356	IncDec	++		3984098	1					
ANR	3984357	ExpressionStatement	arg_dst ++	2345:3:73071:73080	3984098	2	True				
ANR	3984358	PostIncDecOperationExpression	arg_dst ++		3984098	0					
ANR	3984359	Identifier	arg_dst		3984098	0					
ANR	3984360	IncDec	++		3984098	1					
ANR	3984361	Condition	arg_src != end	2346:11:73093:73106	3984098	1	True				
ANR	3984362	EqualityExpression	arg_src != end		3984098	0		!=			
ANR	3984363	Identifier	arg_src		3984098	0					
ANR	3984364	Identifier	end		3984098	1					
ANR	3984365	ExpressionStatement	EX ( symbol_table ) = NULL	2349:1:73115:73138	3984098	13	True				
ANR	3984366	AssignmentExpression	EX ( symbol_table ) = NULL		3984098	0		=			
ANR	3984367	CallExpression	EX ( symbol_table )		3984098	0					
ANR	3984368	Callee	EX		3984098	0					
ANR	3984369	Identifier	EX		3984098	0					
ANR	3984370	ArgumentList	symbol_table		3984098	1					
ANR	3984371	Argument	symbol_table		3984098	0					
ANR	3984372	Identifier	symbol_table		3984098	0					
ANR	3984373	Identifier	NULL		3984098	1					
ANR	3984374	ExpressionStatement	"i_init_func_execute_data ( execute_data , op_array , return_value , 1 )"	2351:1:73142:73207	3984098	14	True				
ANR	3984375	CallExpression	"i_init_func_execute_data ( execute_data , op_array , return_value , 1 )"		3984098	0					
ANR	3984376	Callee	i_init_func_execute_data		3984098	0					
ANR	3984377	Identifier	i_init_func_execute_data		3984098	0					
ANR	3984378	ArgumentList	execute_data		3984098	1					
ANR	3984379	Argument	execute_data		3984098	0					
ANR	3984380	Identifier	execute_data		3984098	0					
ANR	3984381	Argument	op_array		3984098	1					
ANR	3984382	Identifier	op_array		3984098	0					
ANR	3984383	Argument	return_value		3984098	2					
ANR	3984384	Identifier	return_value		3984098	0					
ANR	3984385	Argument	1		3984098	3					
ANR	3984386	PrimaryExpression	1		3984098	0					
ANR	3984387	ReturnStatement	return execute_data ;	2353:1:73211:73230	3984098	15	True				
ANR	3984388	Identifier	execute_data		3984098	0					
ANR	3984389	ReturnType	ZEND_API zend_execute_data *		3984098	1					
ANR	3984390	Identifier	zend_create_generator_execute_data		3984098	2					
ANR	3984391	ParameterList	"zend_execute_data * call , zend_op_array * op_array , zval * return_value"		3984098	3					
ANR	3984392	Parameter	zend_execute_data * call	2299:63:71378:71400	3984098	0	True				
ANR	3984393	ParameterType	zend_execute_data *		3984098	0					
ANR	3984394	Identifier	call		3984098	1					
ANR	3984395	Parameter	zend_op_array * op_array	2299:88:71403:71425	3984098	1	True				
ANR	3984396	ParameterType	zend_op_array *		3984098	0					
ANR	3984397	Identifier	op_array		3984098	1					
ANR	3984398	Parameter	zval * return_value	2299:113:71428:71445	3984098	2	True				
ANR	3984399	ParameterType	zval *		3984098	0					
ANR	3984400	Identifier	return_value		3984098	1					
ANR	3984401	CFGEntryNode	ENTRY		3984098		True				
ANR	3984402	CFGExitNode	EXIT		3984098		True				
ANR	3984403	Symbol	call -> This		3984098						
ANR	3984404	Symbol	arg_dst		3984098						
ANR	3984405	Symbol	return_value		3984098						
ANR	3984406	Symbol	zend_vm_stack_push_call_frame		3984098						
ANR	3984407	Symbol	ZEND_CALL_CLOSURE		3984098						
ANR	3984408	Symbol	MAX		3984098						
ANR	3984409	Symbol	ZEND_CALL_ARG		3984098						
ANR	3984410	Symbol	call -> called_scope		3984098						
ANR	3984411	Symbol	op_array -> last_var		3984098						
ANR	3984412	Symbol	* call		3984098						
ANR	3984413	Symbol	* EG		3984098						
ANR	3984414	Symbol	ZEND_VM_STACK_PAGE_ALIGNED_SIZE		3984098						
ANR	3984415	Symbol	execute_data		3984098						
ANR	3984416	Symbol	call_info		3984098						
ANR	3984417	Symbol	ZEND_VM_STACK_PAGE_SIZE		3984098						
ANR	3984418	Symbol	vm_stack_top		3984098						
ANR	3984419	Symbol	Z_OBJ		3984098						
ANR	3984420	Symbol	EG ( vm_stack ) -> end		3984098						
ANR	3984421	Symbol	num_args		3984098						
ANR	3984422	Symbol	EG ( vm_stack ) -> top		3984098						
ANR	3984423	Symbol	ZEND_CALL_NUM_ARGS		3984098						
ANR	3984424	Symbol	vm_stack_end		3984098						
ANR	3984425	Symbol	end		3984098						
ANR	3984426	Symbol	ZEND_CALL_FRAME_SLOT		3984098						
ANR	3984427	Symbol	zend_vm_stack_new_page		3984098						
ANR	3984428	Symbol	ZEND_CALL_RELEASE_THIS		3984098						
ANR	3984429	Symbol	op_array -> T		3984098						
ANR	3984430	Symbol	EG		3984098						
ANR	3984431	Symbol	NULL		3984098						
ANR	3984432	Symbol	arg_src		3984098						
ANR	3984433	Symbol	symbol_table		3984098						
ANR	3984434	Symbol	prev_execute_data		3984098						
ANR	3984435	Symbol	ZEND_CALL_ALLOCATED		3984098						
ANR	3984436	Symbol	* op_array		3984098						
ANR	3984437	Symbol	ZEND_VM_STACK_FREE_PAGE_SIZE		3984098						
ANR	3984438	Symbol	call		3984098						
ANR	3984439	Symbol	ZEND_CALL_TOP_FUNCTION		3984098						
ANR	3984440	Symbol	EX		3984098						
ANR	3984441	Symbol	EX_NUM_ARGS		3984098						
ANR	3984442	Symbol	ZEND_CALL_INFO		3984098						
ANR	3984443	Symbol	vm_stack		3984098						
ANR	3984444	Symbol	stack_size		3984098						
ANR	3984445	Symbol	EXPECTED		3984098						
ANR	3984446	Symbol	op_array		3984098						
ANR	3984447	Function	zend_init_execute_data	2357:0:73245:73483							
ANR	3984448	FunctionDef	"zend_init_execute_data (zend_execute_data * execute_data , zend_op_array * op_array , zval * return_value)"		3984447	0					
ANR	3984449	CompoundStatement		2358:0:73370:73483	3984447	0					
ANR	3984450	ExpressionStatement	EX ( prev_execute_data ) = EG ( current_execute_data )	2359:1:73373:73421	3984447	0	True				
ANR	3984451	AssignmentExpression	EX ( prev_execute_data ) = EG ( current_execute_data )		3984447	0		=			
ANR	3984452	CallExpression	EX ( prev_execute_data )		3984447	0					
ANR	3984453	Callee	EX		3984447	0					
ANR	3984454	Identifier	EX		3984447	0					
ANR	3984455	ArgumentList	prev_execute_data		3984447	1					
ANR	3984456	Argument	prev_execute_data		3984447	0					
ANR	3984457	Identifier	prev_execute_data		3984447	0					
ANR	3984458	CallExpression	EG ( current_execute_data )		3984447	1					
ANR	3984459	Callee	EG		3984447	0					
ANR	3984460	Identifier	EG		3984447	0					
ANR	3984461	ArgumentList	current_execute_data		3984447	1					
ANR	3984462	Argument	current_execute_data		3984447	0					
ANR	3984463	Identifier	current_execute_data		3984447	0					
ANR	3984464	ExpressionStatement	"i_init_execute_data ( execute_data , op_array , return_value )"	2360:1:73424:73481	3984447	1	True				
ANR	3984465	CallExpression	"i_init_execute_data ( execute_data , op_array , return_value )"		3984447	0					
ANR	3984466	Callee	i_init_execute_data		3984447	0					
ANR	3984467	Identifier	i_init_execute_data		3984447	0					
ANR	3984468	ArgumentList	execute_data		3984447	1					
ANR	3984469	Argument	execute_data		3984447	0					
ANR	3984470	Identifier	execute_data		3984447	0					
ANR	3984471	Argument	op_array		3984447	1					
ANR	3984472	Identifier	op_array		3984447	0					
ANR	3984473	Argument	return_value		3984447	2					
ANR	3984474	Identifier	return_value		3984447	0					
ANR	3984475	ReturnType	ZEND_API void		3984447	1					
ANR	3984476	Identifier	zend_init_execute_data		3984447	2					
ANR	3984477	ParameterList	"zend_execute_data * execute_data , zend_op_array * op_array , zval * return_value"		3984447	3					
ANR	3984478	Parameter	zend_execute_data * execute_data	2357:37:73282:73312	3984447	0	True				
ANR	3984479	ParameterType	zend_execute_data *		3984447	0					
ANR	3984480	Identifier	execute_data		3984447	1					
ANR	3984481	Parameter	zend_op_array * op_array	2357:70:73315:73337	3984447	1	True				
ANR	3984482	ParameterType	zend_op_array *		3984447	0					
ANR	3984483	Identifier	op_array		3984447	1					
ANR	3984484	Parameter	zval * return_value	2357:95:73340:73357	3984447	2	True				
ANR	3984485	ParameterType	zval *		3984447	0					
ANR	3984486	Identifier	return_value		3984447	1					
ANR	3984487	CFGEntryNode	ENTRY		3984447		True				
ANR	3984488	CFGExitNode	EXIT		3984447		True				
ANR	3984489	Symbol	return_value		3984447						
ANR	3984490	Symbol	EG		3984447						
ANR	3984491	Symbol	EX		3984447						
ANR	3984492	Symbol	current_execute_data		3984447						
ANR	3984493	Symbol	prev_execute_data		3984447						
ANR	3984494	Symbol	execute_data		3984447						
ANR	3984495	Symbol	op_array		3984447						
ANR	3984496	Function	zend_is_by_ref_func_arg_fetch	2364:0:73496:73744							
ANR	3984497	FunctionDef	"zend_is_by_ref_func_arg_fetch (const zend_op * opline , zend_execute_data * call)"		3984496	0					
ANR	3984498	CompoundStatement		2365:0:73620:73744	3984496	0					
ANR	3984499	IdentifierDeclStatement	uint32_t arg_num = opline -> extended_value & ZEND_FETCH_ARG_MASK ;	2366:1:73623:73686	3984496	0	True				
ANR	3984500	IdentifierDecl	arg_num = opline -> extended_value & ZEND_FETCH_ARG_MASK		3984496	0					
ANR	3984501	IdentifierDeclType	uint32_t		3984496	0					
ANR	3984502	Identifier	arg_num		3984496	1					
ANR	3984503	AssignmentExpression	arg_num = opline -> extended_value & ZEND_FETCH_ARG_MASK		3984496	2		=			
ANR	3984504	Identifier	arg_num		3984496	0					
ANR	3984505	BitAndExpression	opline -> extended_value & ZEND_FETCH_ARG_MASK		3984496	1		&			
ANR	3984506	PtrMemberAccess	opline -> extended_value		3984496	0					
ANR	3984507	Identifier	opline		3984496	0					
ANR	3984508	Identifier	extended_value		3984496	1					
ANR	3984509	Identifier	ZEND_FETCH_ARG_MASK		3984496	1					
ANR	3984510	ReturnStatement	"return ARG_SHOULD_BE_SENT_BY_REF ( call -> func , arg_num ) ;"	2367:1:73689:73742	3984496	1	True				
ANR	3984511	CallExpression	"ARG_SHOULD_BE_SENT_BY_REF ( call -> func , arg_num )"		3984496	0					
ANR	3984512	Callee	ARG_SHOULD_BE_SENT_BY_REF		3984496	0					
ANR	3984513	Identifier	ARG_SHOULD_BE_SENT_BY_REF		3984496	0					
ANR	3984514	ArgumentList	call -> func		3984496	1					
ANR	3984515	Argument	call -> func		3984496	0					
ANR	3984516	PtrMemberAccess	call -> func		3984496	0					
ANR	3984517	Identifier	call		3984496	0					
ANR	3984518	Identifier	func		3984496	1					
ANR	3984519	Argument	arg_num		3984496	1					
ANR	3984520	Identifier	arg_num		3984496	0					
ANR	3984521	ReturnType	static zend_always_inline zend_bool		3984496	1					
ANR	3984522	Identifier	zend_is_by_ref_func_arg_fetch		3984496	2					
ANR	3984523	ParameterList	"const zend_op * opline , zend_execute_data * call"		3984496	3					
ANR	3984524	Parameter	const zend_op * opline	2364:66:73562:73582	3984496	0	True				
ANR	3984525	ParameterType	const zend_op *		3984496	0					
ANR	3984526	Identifier	opline		3984496	1					
ANR	3984527	Parameter	zend_execute_data * call	2364:89:73585:73607	3984496	1	True				
ANR	3984528	ParameterType	zend_execute_data *		3984496	0					
ANR	3984529	Identifier	call		3984496	1					
ANR	3984530	CFGEntryNode	ENTRY		3984496		True				
ANR	3984531	CFGExitNode	EXIT		3984496		True				
ANR	3984532	Symbol	call		3984496						
ANR	3984533	Symbol	arg_num		3984496						
ANR	3984534	Symbol	ARG_SHOULD_BE_SENT_BY_REF		3984496						
ANR	3984535	Symbol	opline		3984496						
ANR	3984536	Symbol	call -> func		3984496						
ANR	3984537	Symbol	* opline		3984496						
ANR	3984538	Symbol	ZEND_FETCH_ARG_MASK		3984496						
ANR	3984539	Symbol	* call		3984496						
ANR	3984540	Symbol	opline -> extended_value		3984496						
ANR	3984541	Function	zend_vm_stack_copy_call_frame	2371:0:73757:74761							
ANR	3984542	FunctionDef	"zend_vm_stack_copy_call_frame (zend_execute_data * call , uint32_t passed_args , uint32_t additional_args)"		3984541	0					
ANR	3984543	CompoundStatement		2372:0:73896:74761	3984541	0					
ANR	3984544	IdentifierDeclStatement	zend_execute_data * new_call ;	2373:1:73899:73926	3984541	0	True				
ANR	3984545	IdentifierDecl	* new_call		3984541	0					
ANR	3984546	IdentifierDeclType	zend_execute_data *		3984541	0					
ANR	3984547	Identifier	new_call		3984541	1					
ANR	3984548	IdentifierDeclStatement	int used_stack = ( EG ( vm_stack_top ) - ( zval * ) call ) + additional_args ;	2374:1:73929:73996	3984541	1	True				
ANR	3984549	IdentifierDecl	used_stack = ( EG ( vm_stack_top ) - ( zval * ) call ) + additional_args		3984541	0					
ANR	3984550	IdentifierDeclType	int		3984541	0					
ANR	3984551	Identifier	used_stack		3984541	1					
ANR	3984552	AssignmentExpression	used_stack = ( EG ( vm_stack_top ) - ( zval * ) call ) + additional_args		3984541	2		=			
ANR	3984553	Identifier	used_stack		3984541	0					
ANR	3984554	AdditiveExpression	( EG ( vm_stack_top ) - ( zval * ) call ) + additional_args		3984541	1		+			
ANR	3984555	AdditiveExpression	EG ( vm_stack_top ) - ( zval * ) call		3984541	0		-			
ANR	3984556	CallExpression	EG ( vm_stack_top )		3984541	0					
ANR	3984557	Callee	EG		3984541	0					
ANR	3984558	Identifier	EG		3984541	0					
ANR	3984559	ArgumentList	vm_stack_top		3984541	1					
ANR	3984560	Argument	vm_stack_top		3984541	0					
ANR	3984561	Identifier	vm_stack_top		3984541	0					
ANR	3984562	CastExpression	( zval * ) call		3984541	1					
ANR	3984563	CastTarget	zval *		3984541	0					
ANR	3984564	Identifier	call		3984541	1					
ANR	3984565	Identifier	additional_args		3984541	1					
ANR	3984566	ExpressionStatement	new_call = zend_vm_stack_extend ( used_stack * sizeof ( zval ) )	2377:1:74046:74104	3984541	2	True				
ANR	3984567	AssignmentExpression	new_call = zend_vm_stack_extend ( used_stack * sizeof ( zval ) )		3984541	0		=			
ANR	3984568	Identifier	new_call		3984541	0					
ANR	3984569	CallExpression	zend_vm_stack_extend ( used_stack * sizeof ( zval ) )		3984541	1					
ANR	3984570	Callee	zend_vm_stack_extend		3984541	0					
ANR	3984571	Identifier	zend_vm_stack_extend		3984541	0					
ANR	3984572	ArgumentList	used_stack * sizeof ( zval )		3984541	1					
ANR	3984573	Argument	used_stack * sizeof ( zval )		3984541	0					
ANR	3984574	MultiplicativeExpression	used_stack * sizeof ( zval )		3984541	0		*			
ANR	3984575	Identifier	used_stack		3984541	0					
ANR	3984576	SizeofExpression	sizeof ( zval )		3984541	1					
ANR	3984577	Sizeof	sizeof		3984541	0					
ANR	3984578	SizeofOperand	zval		3984541	1					
ANR	3984579	ExpressionStatement	* new_call = * call	2378:1:74107:74124	3984541	3	True				
ANR	3984580	AssignmentExpression	* new_call = * call		3984541	0		=			
ANR	3984581	UnaryOperationExpression	* new_call		3984541	0					
ANR	3984582	UnaryOperator	*		3984541	0					
ANR	3984583	Identifier	new_call		3984541	1					
ANR	3984584	UnaryOperationExpression	* call		3984541	1					
ANR	3984585	UnaryOperator	*		3984541	0					
ANR	3984586	Identifier	call		3984541	1					
ANR	3984587	ExpressionStatement	"ZEND_SET_CALL_INFO ( new_call , ZEND_CALL_INFO ( new_call ) | ZEND_CALL_ALLOCATED )"	2379:1:74127:74203	3984541	4	True				
ANR	3984588	CallExpression	"ZEND_SET_CALL_INFO ( new_call , ZEND_CALL_INFO ( new_call ) | ZEND_CALL_ALLOCATED )"		3984541	0					
ANR	3984589	Callee	ZEND_SET_CALL_INFO		3984541	0					
ANR	3984590	Identifier	ZEND_SET_CALL_INFO		3984541	0					
ANR	3984591	ArgumentList	new_call		3984541	1					
ANR	3984592	Argument	new_call		3984541	0					
ANR	3984593	Identifier	new_call		3984541	0					
ANR	3984594	Argument	ZEND_CALL_INFO ( new_call ) | ZEND_CALL_ALLOCATED		3984541	1					
ANR	3984595	InclusiveOrExpression	ZEND_CALL_INFO ( new_call ) | ZEND_CALL_ALLOCATED		3984541	0		|			
ANR	3984596	CallExpression	ZEND_CALL_INFO ( new_call )		3984541	0					
ANR	3984597	Callee	ZEND_CALL_INFO		3984541	0					
ANR	3984598	Identifier	ZEND_CALL_INFO		3984541	0					
ANR	3984599	ArgumentList	new_call		3984541	1					
ANR	3984600	Argument	new_call		3984541	0					
ANR	3984601	Identifier	new_call		3984541	0					
ANR	3984602	Identifier	ZEND_CALL_ALLOCATED		3984541	1					
ANR	3984603	IfStatement	if ( passed_args )		3984541	5					
ANR	3984604	Condition	passed_args	2381:5:74211:74221	3984541	0	True				
ANR	3984605	Identifier	passed_args		3984541	0					
ANR	3984606	CompoundStatement		12:2:369:407	3984541	1					
ANR	3984607	IdentifierDeclStatement	"zval * src = ZEND_CALL_ARG ( call , 1 ) ;"	2382:2:74228:74262	3984541	0	True				
ANR	3984608	IdentifierDecl	"* src = ZEND_CALL_ARG ( call , 1 )"		3984541	0					
ANR	3984609	IdentifierDeclType	zval *		3984541	0					
ANR	3984610	Identifier	src		3984541	1					
ANR	3984611	AssignmentExpression	"* src = ZEND_CALL_ARG ( call , 1 )"		3984541	2		=			
ANR	3984612	Identifier	src		3984541	0					
ANR	3984613	CallExpression	"ZEND_CALL_ARG ( call , 1 )"		3984541	1					
ANR	3984614	Callee	ZEND_CALL_ARG		3984541	0					
ANR	3984615	Identifier	ZEND_CALL_ARG		3984541	0					
ANR	3984616	ArgumentList	call		3984541	1					
ANR	3984617	Argument	call		3984541	0					
ANR	3984618	Identifier	call		3984541	0					
ANR	3984619	Argument	1		3984541	1					
ANR	3984620	PrimaryExpression	1		3984541	0					
ANR	3984621	IdentifierDeclStatement	"zval * dst = ZEND_CALL_ARG ( new_call , 1 ) ;"	2383:2:74266:74304	3984541	1	True				
ANR	3984622	IdentifierDecl	"* dst = ZEND_CALL_ARG ( new_call , 1 )"		3984541	0					
ANR	3984623	IdentifierDeclType	zval *		3984541	0					
ANR	3984624	Identifier	dst		3984541	1					
ANR	3984625	AssignmentExpression	"* dst = ZEND_CALL_ARG ( new_call , 1 )"		3984541	2		=			
ANR	3984626	Identifier	dst		3984541	0					
ANR	3984627	CallExpression	"ZEND_CALL_ARG ( new_call , 1 )"		3984541	1					
ANR	3984628	Callee	ZEND_CALL_ARG		3984541	0					
ANR	3984629	Identifier	ZEND_CALL_ARG		3984541	0					
ANR	3984630	ArgumentList	new_call		3984541	1					
ANR	3984631	Argument	new_call		3984541	0					
ANR	3984632	Identifier	new_call		3984541	0					
ANR	3984633	Argument	1		3984541	1					
ANR	3984634	PrimaryExpression	1		3984541	0					
ANR	3984635	DoStatement	do		3984541	2					
ANR	3984636	CompoundStatement		13:5:414:414	3984541	0					
ANR	3984637	ExpressionStatement	"ZVAL_COPY_VALUE ( dst , src )"	2385:3:74316:74341	3984541	0	True				
ANR	3984638	CallExpression	"ZVAL_COPY_VALUE ( dst , src )"		3984541	0					
ANR	3984639	Callee	ZVAL_COPY_VALUE		3984541	0					
ANR	3984640	Identifier	ZVAL_COPY_VALUE		3984541	0					
ANR	3984641	ArgumentList	dst		3984541	1					
ANR	3984642	Argument	dst		3984541	0					
ANR	3984643	Identifier	dst		3984541	0					
ANR	3984644	Argument	src		3984541	1					
ANR	3984645	Identifier	src		3984541	0					
ANR	3984646	ExpressionStatement	passed_args --	2386:3:74346:74359	3984541	1	True				
ANR	3984647	PostIncDecOperationExpression	passed_args --		3984541	0					
ANR	3984648	Identifier	passed_args		3984541	0					
ANR	3984649	IncDec	--		3984541	1					
ANR	3984650	ExpressionStatement	src ++	2387:3:74364:74369	3984541	2	True				
ANR	3984651	PostIncDecOperationExpression	src ++		3984541	0					
ANR	3984652	Identifier	src		3984541	0					
ANR	3984653	IncDec	++		3984541	1					
ANR	3984654	ExpressionStatement	dst ++	2388:3:74374:74379	3984541	3	True				
ANR	3984655	PostIncDecOperationExpression	dst ++		3984541	0					
ANR	3984656	Identifier	dst		3984541	0					
ANR	3984657	IncDec	++		3984541	1					
ANR	3984658	Condition	passed_args	2389:11:74392:74402	3984541	1	True				
ANR	3984659	Identifier	passed_args		3984541	0					
ANR	3984660	ExpressionStatement	EG ( vm_stack ) -> prev -> top = ( zval * ) call	2393:1:74468:74505	3984541	6	True				
ANR	3984661	AssignmentExpression	EG ( vm_stack ) -> prev -> top = ( zval * ) call		3984541	0		=			
ANR	3984662	PtrMemberAccess	EG ( vm_stack ) -> prev -> top		3984541	0					
ANR	3984663	PtrMemberAccess	EG ( vm_stack ) -> prev		3984541	0					
ANR	3984664	CallExpression	EG ( vm_stack )		3984541	0					
ANR	3984665	Callee	EG		3984541	0					
ANR	3984666	Identifier	EG		3984541	0					
ANR	3984667	ArgumentList	vm_stack		3984541	1					
ANR	3984668	Argument	vm_stack		3984541	0					
ANR	3984669	Identifier	vm_stack		3984541	0					
ANR	3984670	Identifier	prev		3984541	1					
ANR	3984671	Identifier	top		3984541	1					
ANR	3984672	CastExpression	( zval * ) call		3984541	1					
ANR	3984673	CastTarget	zval *		3984541	0					
ANR	3984674	Identifier	call		3984541	1					
ANR	3984675	IfStatement	if ( UNEXPECTED ( EG ( vm_stack ) -> prev -> top == ZEND_VM_STACK_ELEMETS ( EG ( vm_stack ) -> prev ) ) )		3984541	7					
ANR	3984676	Condition	UNEXPECTED ( EG ( vm_stack ) -> prev -> top == ZEND_VM_STACK_ELEMETS ( EG ( vm_stack ) -> prev ) )	2396:5:74570:74649	3984541	0	True				
ANR	3984677	CallExpression	UNEXPECTED ( EG ( vm_stack ) -> prev -> top == ZEND_VM_STACK_ELEMETS ( EG ( vm_stack ) -> prev ) )		3984541	0					
ANR	3984678	Callee	UNEXPECTED		3984541	0					
ANR	3984679	Identifier	UNEXPECTED		3984541	0					
ANR	3984680	ArgumentList	EG ( vm_stack ) -> prev -> top == ZEND_VM_STACK_ELEMETS ( EG ( vm_stack ) -> prev )		3984541	1					
ANR	3984681	Argument	EG ( vm_stack ) -> prev -> top == ZEND_VM_STACK_ELEMETS ( EG ( vm_stack ) -> prev )		3984541	0					
ANR	3984682	EqualityExpression	EG ( vm_stack ) -> prev -> top == ZEND_VM_STACK_ELEMETS ( EG ( vm_stack ) -> prev )		3984541	0		==			
ANR	3984683	PtrMemberAccess	EG ( vm_stack ) -> prev -> top		3984541	0					
ANR	3984684	PtrMemberAccess	EG ( vm_stack ) -> prev		3984541	0					
ANR	3984685	CallExpression	EG ( vm_stack )		3984541	0					
ANR	3984686	Callee	EG		3984541	0					
ANR	3984687	Identifier	EG		3984541	0					
ANR	3984688	ArgumentList	vm_stack		3984541	1					
ANR	3984689	Argument	vm_stack		3984541	0					
ANR	3984690	Identifier	vm_stack		3984541	0					
ANR	3984691	Identifier	prev		3984541	1					
ANR	3984692	Identifier	top		3984541	1					
ANR	3984693	CallExpression	ZEND_VM_STACK_ELEMETS ( EG ( vm_stack ) -> prev )		3984541	1					
ANR	3984694	Callee	ZEND_VM_STACK_ELEMETS		3984541	0					
ANR	3984695	Identifier	ZEND_VM_STACK_ELEMETS		3984541	0					
ANR	3984696	ArgumentList	EG ( vm_stack ) -> prev		3984541	1					
ANR	3984697	Argument	EG ( vm_stack ) -> prev		3984541	0					
ANR	3984698	PtrMemberAccess	EG ( vm_stack ) -> prev		3984541	0					
ANR	3984699	CallExpression	EG ( vm_stack )		3984541	0					
ANR	3984700	Callee	EG		3984541	0					
ANR	3984701	Identifier	EG		3984541	0					
ANR	3984702	ArgumentList	vm_stack		3984541	1					
ANR	3984703	Argument	vm_stack		3984541	0					
ANR	3984704	Identifier	vm_stack		3984541	0					
ANR	3984705	Identifier	prev		3984541	1					
ANR	3984706	CompoundStatement		26:2:759:795	3984541	1					
ANR	3984707	IdentifierDeclStatement	zend_vm_stack r = EG ( vm_stack ) -> prev ;	2397:2:74656:74692	3984541	0	True				
ANR	3984708	IdentifierDecl	r = EG ( vm_stack ) -> prev		3984541	0					
ANR	3984709	IdentifierDeclType	zend_vm_stack		3984541	0					
ANR	3984710	Identifier	r		3984541	1					
ANR	3984711	AssignmentExpression	r = EG ( vm_stack ) -> prev		3984541	2		=			
ANR	3984712	Identifier	r		3984541	0					
ANR	3984713	PtrMemberAccess	EG ( vm_stack ) -> prev		3984541	1					
ANR	3984714	CallExpression	EG ( vm_stack )		3984541	0					
ANR	3984715	Callee	EG		3984541	0					
ANR	3984716	Identifier	EG		3984541	0					
ANR	3984717	ArgumentList	vm_stack		3984541	1					
ANR	3984718	Argument	vm_stack		3984541	0					
ANR	3984719	Identifier	vm_stack		3984541	0					
ANR	3984720	Identifier	prev		3984541	1					
ANR	3984721	ExpressionStatement	EG ( vm_stack ) -> prev = r -> prev	2399:2:74697:74725	3984541	1	True				
ANR	3984722	AssignmentExpression	EG ( vm_stack ) -> prev = r -> prev		3984541	0		=			
ANR	3984723	PtrMemberAccess	EG ( vm_stack ) -> prev		3984541	0					
ANR	3984724	CallExpression	EG ( vm_stack )		3984541	0					
ANR	3984725	Callee	EG		3984541	0					
ANR	3984726	Identifier	EG		3984541	0					
ANR	3984727	ArgumentList	vm_stack		3984541	1					
ANR	3984728	Argument	vm_stack		3984541	0					
ANR	3984729	Identifier	vm_stack		3984541	0					
ANR	3984730	Identifier	prev		3984541	1					
ANR	3984731	PtrMemberAccess	r -> prev		3984541	1					
ANR	3984732	Identifier	r		3984541	0					
ANR	3984733	Identifier	prev		3984541	1					
ANR	3984734	ExpressionStatement	efree ( r )	2400:2:74729:74737	3984541	2	True				
ANR	3984735	CallExpression	efree ( r )		3984541	0					
ANR	3984736	Callee	efree		3984541	0					
ANR	3984737	Identifier	efree		3984541	0					
ANR	3984738	ArgumentList	r		3984541	1					
ANR	3984739	Argument	r		3984541	0					
ANR	3984740	Identifier	r		3984541	0					
ANR	3984741	ReturnStatement	return new_call ;	2403:1:74744:74759	3984541	8	True				
ANR	3984742	Identifier	new_call		3984541	0					
ANR	3984743	ReturnType	static zend_execute_data *		3984541	1					
ANR	3984744	Identifier	zend_vm_stack_copy_call_frame		3984541	2					
ANR	3984745	ParameterList	"zend_execute_data * call , uint32_t passed_args , uint32_t additional_args"		3984541	3					
ANR	3984746	Parameter	zend_execute_data * call	2371:56:73813:73835	3984541	0	True				
ANR	3984747	ParameterType	zend_execute_data *		3984541	0					
ANR	3984748	Identifier	call		3984541	1					
ANR	3984749	Parameter	uint32_t passed_args	2371:81:73838:73857	3984541	1	True				
ANR	3984750	ParameterType	uint32_t		3984541	0					
ANR	3984751	Identifier	passed_args		3984541	1					
ANR	3984752	Parameter	uint32_t additional_args	2371:103:73860:73883	3984541	2	True				
ANR	3984753	ParameterType	uint32_t		3984541	0					
ANR	3984754	Identifier	additional_args		3984541	1					
ANR	3984755	CFGEntryNode	ENTRY		3984541		True				
ANR	3984756	CFGExitNode	EXIT		3984541		True				
ANR	3984757	Symbol	EG ( vm_stack ) -> prev		3984541						
ANR	3984758	Symbol	dst		3984541						
ANR	3984759	Symbol	ZEND_CALL_ARG		3984541						
ANR	3984760	Symbol	* call		3984541						
ANR	3984761	Symbol	* EG		3984541						
ANR	3984762	Symbol	* * EG		3984541						
ANR	3984763	Symbol	new_call		3984541						
ANR	3984764	Symbol	r -> prev		3984541						
ANR	3984765	Symbol	vm_stack_top		3984541						
ANR	3984766	Symbol	UNEXPECTED		3984541						
ANR	3984767	Symbol	additional_args		3984541						
ANR	3984768	Symbol	EG ( vm_stack ) -> prev -> top		3984541						
ANR	3984769	Symbol	EG		3984541						
ANR	3984770	Symbol	passed_args		3984541						
ANR	3984771	Symbol	src		3984541						
ANR	3984772	Symbol	* EG ( vm_stack ) -> prev		3984541						
ANR	3984773	Symbol	ZEND_VM_STACK_ELEMETS		3984541						
ANR	3984774	Symbol	ZEND_CALL_ALLOCATED		3984541						
ANR	3984775	Symbol	call		3984541						
ANR	3984776	Symbol	r		3984541						
ANR	3984777	Symbol	ZEND_CALL_INFO		3984541						
ANR	3984778	Symbol	* new_call		3984541						
ANR	3984779	Symbol	vm_stack		3984541						
ANR	3984780	Symbol	* r		3984541						
ANR	3984781	Symbol	used_stack		3984541						
ANR	3984782	Symbol	zend_vm_stack_extend		3984541						
ANR	3984783	Function	zend_vm_stack_extend_call_frame	2407:0:74774:75137							
ANR	3984784	FunctionDef	"zend_vm_stack_extend_call_frame (zend_execute_data * * call , uint32_t passed_args , uint32_t additional_args)"		3984783	0					
ANR	3984785	CompoundStatement		2408:0:74921:75137	3984783	0					
ANR	3984786	IfStatement	if ( EXPECTED ( ( uint32_t ) ( EG ( vm_stack_end ) - EG ( vm_stack_top ) ) > additional_args ) )		3984783	0					
ANR	3984787	Condition	EXPECTED ( ( uint32_t ) ( EG ( vm_stack_end ) - EG ( vm_stack_top ) ) > additional_args )	2409:5:74928:75002	3984783	0	True				
ANR	3984788	CallExpression	EXPECTED ( ( uint32_t ) ( EG ( vm_stack_end ) - EG ( vm_stack_top ) ) > additional_args )		3984783	0					
ANR	3984789	Callee	EXPECTED		3984783	0					
ANR	3984790	Identifier	EXPECTED		3984783	0					
ANR	3984791	ArgumentList	( uint32_t ) ( EG ( vm_stack_end ) - EG ( vm_stack_top ) ) > additional_args		3984783	1					
ANR	3984792	Argument	( uint32_t ) ( EG ( vm_stack_end ) - EG ( vm_stack_top ) ) > additional_args		3984783	0					
ANR	3984793	RelationalExpression	( uint32_t ) ( EG ( vm_stack_end ) - EG ( vm_stack_top ) ) > additional_args		3984783	0		>			
ANR	3984794	CastExpression	( uint32_t ) ( EG ( vm_stack_end ) - EG ( vm_stack_top ) )		3984783	0					
ANR	3984795	CastTarget	uint32_t		3984783	0					
ANR	3984796	AdditiveExpression	EG ( vm_stack_end ) - EG ( vm_stack_top )		3984783	1		-			
ANR	3984797	CallExpression	EG ( vm_stack_end )		3984783	0					
ANR	3984798	Callee	EG		3984783	0					
ANR	3984799	Identifier	EG		3984783	0					
ANR	3984800	ArgumentList	vm_stack_end		3984783	1					
ANR	3984801	Argument	vm_stack_end		3984783	0					
ANR	3984802	Identifier	vm_stack_end		3984783	0					
ANR	3984803	CallExpression	EG ( vm_stack_top )		3984783	1					
ANR	3984804	Callee	EG		3984783	0					
ANR	3984805	Identifier	EG		3984783	0					
ANR	3984806	ArgumentList	vm_stack_top		3984783	1					
ANR	3984807	Argument	vm_stack_top		3984783	0					
ANR	3984808	Identifier	vm_stack_top		3984783	0					
ANR	3984809	Identifier	additional_args		3984783	1					
ANR	3984810	CompoundStatement		2:82:83:83	3984783	1					
ANR	3984811	ExpressionStatement	EG ( vm_stack_top ) += additional_args	2410:2:75009:75044	3984783	0	True				
ANR	3984812	AssignmentExpression	EG ( vm_stack_top ) += additional_args		3984783	0		+=			
ANR	3984813	CallExpression	EG ( vm_stack_top )		3984783	0					
ANR	3984814	Callee	EG		3984783	0					
ANR	3984815	Identifier	EG		3984783	0					
ANR	3984816	ArgumentList	vm_stack_top		3984783	1					
ANR	3984817	Argument	vm_stack_top		3984783	0					
ANR	3984818	Identifier	vm_stack_top		3984783	0					
ANR	3984819	Identifier	additional_args		3984783	1					
ANR	3984820	ElseStatement	else		3984783	0					
ANR	3984821	CompoundStatement		4:8:132:132	3984783	0					
ANR	3984822	ExpressionStatement	"* call = zend_vm_stack_copy_call_frame ( * call , passed_args , additional_args )"	2412:2:75058:75132	3984783	0	True				
ANR	3984823	AssignmentExpression	"* call = zend_vm_stack_copy_call_frame ( * call , passed_args , additional_args )"		3984783	0		=			
ANR	3984824	UnaryOperationExpression	* call		3984783	0					
ANR	3984825	UnaryOperator	*		3984783	0					
ANR	3984826	Identifier	call		3984783	1					
ANR	3984827	CallExpression	"zend_vm_stack_copy_call_frame ( * call , passed_args , additional_args )"		3984783	1					
ANR	3984828	Callee	zend_vm_stack_copy_call_frame		3984783	0					
ANR	3984829	Identifier	zend_vm_stack_copy_call_frame		3984783	0					
ANR	3984830	ArgumentList	* call		3984783	1					
ANR	3984831	Argument	* call		3984783	0					
ANR	3984832	UnaryOperationExpression	* call		3984783	0					
ANR	3984833	UnaryOperator	*		3984783	0					
ANR	3984834	Identifier	call		3984783	1					
ANR	3984835	Argument	passed_args		3984783	1					
ANR	3984836	Identifier	passed_args		3984783	0					
ANR	3984837	Argument	additional_args		3984783	2					
ANR	3984838	Identifier	additional_args		3984783	0					
ANR	3984839	ReturnType	static zend_always_inline void		3984783	1					
ANR	3984840	Identifier	zend_vm_stack_extend_call_frame		3984783	2					
ANR	3984841	ParameterList	"zend_execute_data * * call , uint32_t passed_args , uint32_t additional_args"		3984783	3					
ANR	3984842	Parameter	zend_execute_data * * call	2407:63:74837:74860	3984783	0	True				
ANR	3984843	ParameterType	zend_execute_data * *		3984783	0					
ANR	3984844	Identifier	call		3984783	1					
ANR	3984845	Parameter	uint32_t passed_args	2407:89:74863:74882	3984783	1	True				
ANR	3984846	ParameterType	uint32_t		3984783	0					
ANR	3984847	Identifier	passed_args		3984783	1					
ANR	3984848	Parameter	uint32_t additional_args	2407:111:74885:74908	3984783	2	True				
ANR	3984849	ParameterType	uint32_t		3984783	0					
ANR	3984850	Identifier	additional_args		3984783	1					
ANR	3984851	CFGEntryNode	ENTRY		3984783		True				
ANR	3984852	CFGExitNode	EXIT		3984783		True				
ANR	3984853	Symbol	call		3984783						
ANR	3984854	Symbol	vm_stack_top		3984783						
ANR	3984855	Symbol	EG		3984783						
ANR	3984856	Symbol	passed_args		3984783						
ANR	3984857	Symbol	* call		3984783						
ANR	3984858	Symbol	additional_args		3984783						
ANR	3984859	Symbol	vm_stack_end		3984783						
ANR	3984860	Symbol	zend_vm_stack_copy_call_frame		3984783						
ANR	3984861	Symbol	EXPECTED		3984783						
ANR	3984862	Function	zend_get_running_generator	2417:0:75150:75519							
ANR	3984863	FunctionDef	zend_get_running_generator (zend_execute_data * execute_data)		3984862	0					
ANR	3984864	CompoundStatement		2418:0:75262:75519	3984862	0					
ANR	3984865	IdentifierDeclStatement	zend_generator * generator = ( zend_generator * ) EX ( return_value ) ;	2420:1:75323:75386	3984862	0	True				
ANR	3984866	IdentifierDecl	* generator = ( zend_generator * ) EX ( return_value )		3984862	0					
ANR	3984867	IdentifierDeclType	zend_generator *		3984862	0					
ANR	3984868	Identifier	generator		3984862	1					
ANR	3984869	AssignmentExpression	* generator = ( zend_generator * ) EX ( return_value )		3984862	2		=			
ANR	3984870	Identifier	generator		3984862	0					
ANR	3984871	CastExpression	( zend_generator * ) EX ( return_value )		3984862	1					
ANR	3984872	CastTarget	zend_generator *		3984862	0					
ANR	3984873	CallExpression	EX ( return_value )		3984862	1					
ANR	3984874	Callee	EX		3984862	0					
ANR	3984875	Identifier	EX		3984862	0					
ANR	3984876	ArgumentList	return_value		3984862	1					
ANR	3984877	Argument	return_value		3984862	0					
ANR	3984878	Identifier	return_value		3984862	0					
ANR	3984879	ReturnStatement	return generator ;	2423:1:75501:75517	3984862	1	True				
ANR	3984880	Identifier	generator		3984862	0					
ANR	3984881	ReturnType	static zend_always_inline zend_generator *		3984862	1					
ANR	3984882	Identifier	zend_get_running_generator		3984862	2					
ANR	3984883	ParameterList	zend_execute_data * execute_data		3984862	3					
ANR	3984884	Parameter	zend_execute_data * execute_data	2417:69:75219:75249	3984862	0	True				
ANR	3984885	ParameterType	zend_execute_data *		3984862	0					
ANR	3984886	Identifier	execute_data		3984862	1					
ANR	3984887	CFGEntryNode	ENTRY		3984862		True				
ANR	3984888	CFGExitNode	EXIT		3984862		True				
ANR	3984889	Symbol	return_value		3984862						
ANR	3984890	Symbol	EX		3984862						
ANR	3984891	Symbol	generator		3984862						
ANR	3984892	Symbol	execute_data		3984862						
ANR	3984893	Function	cleanup_unfinished_calls	2427:0:75532:78878							
ANR	3984894	FunctionDef	"cleanup_unfinished_calls (zend_execute_data * execute_data , uint32_t op_num)"		3984893	0					
ANR	3984895	CompoundStatement		2428:0:75629:78878	3984893	0					
ANR	3984896	IfStatement	if ( UNEXPECTED ( EX ( call ) ) )		3984893	0					
ANR	3984897	Condition	UNEXPECTED ( EX ( call ) )	2429:5:75636:75655	3984893	0	True				
ANR	3984898	CallExpression	UNEXPECTED ( EX ( call ) )		3984893	0					
ANR	3984899	Callee	UNEXPECTED		3984893	0					
ANR	3984900	Identifier	UNEXPECTED		3984893	0					
ANR	3984901	ArgumentList	EX ( call )		3984893	1					
ANR	3984902	Argument	EX ( call )		3984893	0					
ANR	3984903	CallExpression	EX ( call )		3984893	0					
ANR	3984904	Callee	EX		3984893	0					
ANR	3984905	Identifier	EX		3984893	0					
ANR	3984906	ArgumentList	call		3984893	1					
ANR	3984907	Argument	call		3984893	0					
ANR	3984908	Identifier	call		3984893	0					
ANR	3984909	CompoundStatement		6:2:140:151	3984893	1					
ANR	3984910	IdentifierDeclStatement	zend_execute_data * call = EX ( call ) ;	2430:2:75662:75696	3984893	0	True				
ANR	3984911	IdentifierDecl	* call = EX ( call )		3984893	0					
ANR	3984912	IdentifierDeclType	zend_execute_data *		3984893	0					
ANR	3984913	Identifier	call		3984893	1					
ANR	3984914	AssignmentExpression	* call = EX ( call )		3984893	2		=			
ANR	3984915	Identifier	call		3984893	0					
ANR	3984916	CallExpression	EX ( call )		3984893	1					
ANR	3984917	Callee	EX		3984893	0					
ANR	3984918	Identifier	EX		3984893	0					
ANR	3984919	ArgumentList	call		3984893	1					
ANR	3984920	Argument	call		3984893	0					
ANR	3984921	Identifier	call		3984893	0					
ANR	3984922	IdentifierDeclStatement	zend_op * opline = EX ( func ) -> op_array . opcodes + op_num ;	2431:2:75700:75753	3984893	1	True				
ANR	3984923	IdentifierDecl	* opline = EX ( func ) -> op_array . opcodes + op_num		3984893	0					
ANR	3984924	IdentifierDeclType	zend_op *		3984893	0					
ANR	3984925	Identifier	opline		3984893	1					
ANR	3984926	AssignmentExpression	* opline = EX ( func ) -> op_array . opcodes + op_num		3984893	2		=			
ANR	3984927	Identifier	opline		3984893	0					
ANR	3984928	AdditiveExpression	EX ( func ) -> op_array . opcodes + op_num		3984893	1		+			
ANR	3984929	MemberAccess	EX ( func ) -> op_array . opcodes		3984893	0					
ANR	3984930	PtrMemberAccess	EX ( func ) -> op_array		3984893	0					
ANR	3984931	CallExpression	EX ( func )		3984893	0					
ANR	3984932	Callee	EX		3984893	0					
ANR	3984933	Identifier	EX		3984893	0					
ANR	3984934	ArgumentList	func		3984893	1					
ANR	3984935	Argument	func		3984893	0					
ANR	3984936	Identifier	func		3984893	0					
ANR	3984937	Identifier	op_array		3984893	1					
ANR	3984938	Identifier	opcodes		3984893	1					
ANR	3984939	Identifier	op_num		3984893	1					
ANR	3984940	IdentifierDeclStatement	int level ;	2432:2:75757:75766	3984893	2	True				
ANR	3984941	IdentifierDecl	level		3984893	0					
ANR	3984942	IdentifierDeclType	int		3984893	0					
ANR	3984943	Identifier	level		3984893	1					
ANR	3984944	IdentifierDeclStatement	int do_exit ;	2433:2:75770:75781	3984893	3	True				
ANR	3984945	IdentifierDecl	do_exit		3984893	0					
ANR	3984946	IdentifierDeclType	int		3984893	0					
ANR	3984947	Identifier	do_exit		3984893	1					
ANR	3984948	IfStatement	if ( UNEXPECTED ( opline -> opcode == ZEND_INIT_FCALL || opline -> opcode == ZEND_INIT_FCALL_BY_NAME || opline -> opcode == ZEND_INIT_DYNAMIC_CALL || opline -> opcode == ZEND_INIT_METHOD_CALL || opline -> opcode == ZEND_INIT_STATIC_METHOD_CALL ) )		3984893	4					
ANR	3984949	Condition	UNEXPECTED ( opline -> opcode == ZEND_INIT_FCALL || opline -> opcode == ZEND_INIT_FCALL_BY_NAME || opline -> opcode == ZEND_INIT_DYNAMIC_CALL || opline -> opcode == ZEND_INIT_METHOD_CALL || opline -> opcode == ZEND_INIT_STATIC_METHOD_CALL )	2435:6:75792:76030	3984893	0	True				
ANR	3984950	CallExpression	UNEXPECTED ( opline -> opcode == ZEND_INIT_FCALL || opline -> opcode == ZEND_INIT_FCALL_BY_NAME || opline -> opcode == ZEND_INIT_DYNAMIC_CALL || opline -> opcode == ZEND_INIT_METHOD_CALL || opline -> opcode == ZEND_INIT_STATIC_METHOD_CALL )		3984893	0					
ANR	3984951	Callee	UNEXPECTED		3984893	0					
ANR	3984952	Identifier	UNEXPECTED		3984893	0					
ANR	3984953	ArgumentList	opline -> opcode == ZEND_INIT_FCALL || opline -> opcode == ZEND_INIT_FCALL_BY_NAME || opline -> opcode == ZEND_INIT_DYNAMIC_CALL || opline -> opcode == ZEND_INIT_METHOD_CALL || opline -> opcode == ZEND_INIT_STATIC_METHOD_CALL		3984893	1					
ANR	3984954	Argument	opline -> opcode == ZEND_INIT_FCALL || opline -> opcode == ZEND_INIT_FCALL_BY_NAME || opline -> opcode == ZEND_INIT_DYNAMIC_CALL || opline -> opcode == ZEND_INIT_METHOD_CALL || opline -> opcode == ZEND_INIT_STATIC_METHOD_CALL		3984893	0					
ANR	3984955	OrExpression	opline -> opcode == ZEND_INIT_FCALL || opline -> opcode == ZEND_INIT_FCALL_BY_NAME || opline -> opcode == ZEND_INIT_DYNAMIC_CALL || opline -> opcode == ZEND_INIT_METHOD_CALL || opline -> opcode == ZEND_INIT_STATIC_METHOD_CALL		3984893	0		||			
ANR	3984956	EqualityExpression	opline -> opcode == ZEND_INIT_FCALL		3984893	0		==			
ANR	3984957	PtrMemberAccess	opline -> opcode		3984893	0					
ANR	3984958	Identifier	opline		3984893	0					
ANR	3984959	Identifier	opcode		3984893	1					
ANR	3984960	Identifier	ZEND_INIT_FCALL		3984893	1					
ANR	3984961	OrExpression	opline -> opcode == ZEND_INIT_FCALL_BY_NAME || opline -> opcode == ZEND_INIT_DYNAMIC_CALL || opline -> opcode == ZEND_INIT_METHOD_CALL || opline -> opcode == ZEND_INIT_STATIC_METHOD_CALL		3984893	1		||			
ANR	3984962	EqualityExpression	opline -> opcode == ZEND_INIT_FCALL_BY_NAME		3984893	0		==			
ANR	3984963	PtrMemberAccess	opline -> opcode		3984893	0					
ANR	3984964	Identifier	opline		3984893	0					
ANR	3984965	Identifier	opcode		3984893	1					
ANR	3984966	Identifier	ZEND_INIT_FCALL_BY_NAME		3984893	1					
ANR	3984967	OrExpression	opline -> opcode == ZEND_INIT_DYNAMIC_CALL || opline -> opcode == ZEND_INIT_METHOD_CALL || opline -> opcode == ZEND_INIT_STATIC_METHOD_CALL		3984893	1		||			
ANR	3984968	EqualityExpression	opline -> opcode == ZEND_INIT_DYNAMIC_CALL		3984893	0		==			
ANR	3984969	PtrMemberAccess	opline -> opcode		3984893	0					
ANR	3984970	Identifier	opline		3984893	0					
ANR	3984971	Identifier	opcode		3984893	1					
ANR	3984972	Identifier	ZEND_INIT_DYNAMIC_CALL		3984893	1					
ANR	3984973	OrExpression	opline -> opcode == ZEND_INIT_METHOD_CALL || opline -> opcode == ZEND_INIT_STATIC_METHOD_CALL		3984893	1		||			
ANR	3984974	EqualityExpression	opline -> opcode == ZEND_INIT_METHOD_CALL		3984893	0		==			
ANR	3984975	PtrMemberAccess	opline -> opcode		3984893	0					
ANR	3984976	Identifier	opline		3984893	0					
ANR	3984977	Identifier	opcode		3984893	1					
ANR	3984978	Identifier	ZEND_INIT_METHOD_CALL		3984893	1					
ANR	3984979	EqualityExpression	opline -> opcode == ZEND_INIT_STATIC_METHOD_CALL		3984893	1		==			
ANR	3984980	PtrMemberAccess	opline -> opcode		3984893	0					
ANR	3984981	Identifier	opline		3984893	0					
ANR	3984982	Identifier	opcode		3984893	1					
ANR	3984983	Identifier	ZEND_INIT_STATIC_METHOD_CALL		3984893	1					
ANR	3984984	CompoundStatement		12:52:403:403	3984893	1					
ANR	3984985	ExpressionStatement	ZEND_ASSERT ( op_num )	2440:3:76038:76057	3984893	0	True				
ANR	3984986	CallExpression	ZEND_ASSERT ( op_num )		3984893	0					
ANR	3984987	Callee	ZEND_ASSERT		3984893	0					
ANR	3984988	Identifier	ZEND_ASSERT		3984893	0					
ANR	3984989	ArgumentList	op_num		3984893	1					
ANR	3984990	Argument	op_num		3984893	0					
ANR	3984991	Identifier	op_num		3984893	0					
ANR	3984992	ExpressionStatement	opline --	2441:3:76062:76070	3984893	1	True				
ANR	3984993	PostIncDecOperationExpression	opline --		3984893	0					
ANR	3984994	Identifier	opline		3984893	0					
ANR	3984995	IncDec	--		3984893	1					
ANR	3984996	DoStatement	do		3984893	5					
ANR	3984997	CompoundStatement		17:5:452:452	3984893	0					
ANR	3984998	ExpressionStatement	level = 0	2449:3:76278:76287	3984893	0	True				
ANR	3984999	AssignmentExpression	level = 0		3984893	0		=			
ANR	3985000	Identifier	level		3984893	0					
ANR	3985001	PrimaryExpression	0		3984893	1					
ANR	3985002	ExpressionStatement	do_exit = 0	2450:3:76292:76303	3984893	1	True				
ANR	3985003	AssignmentExpression	do_exit = 0		3984893	0		=			
ANR	3985004	Identifier	do_exit		3984893	0					
ANR	3985005	PrimaryExpression	0		3984893	1					
ANR	3985006	DoStatement	do		3984893	2					
ANR	3985007	CompoundStatement		24:6:681:681	3984893	0					
ANR	3985008	SwitchStatement	switch ( opline -> opcode )		3984893	0					
ANR	3985009	Condition	opline -> opcode	2452:12:76325:76338	3984893	0	True				
ANR	3985010	PtrMemberAccess	opline -> opcode		3984893	0					
ANR	3985011	Identifier	opline		3984893	0					
ANR	3985012	Identifier	opcode		3984893	1					
ANR	3985013	CompoundStatement		25:28:711:711	3984893	1					
ANR	3985014	Label	case ZEND_DO_FCALL :	2453:5:76348:76366	3984893	0	True				
ANR	3985015	Identifier	ZEND_DO_FCALL		3984893	0					
ANR	3985016	Label	case ZEND_DO_ICALL :	2454:5:76373:76391	3984893	1	True				
ANR	3985017	Identifier	ZEND_DO_ICALL		3984893	0					
ANR	3985018	Label	case ZEND_DO_UCALL :	2455:5:76398:76416	3984893	2	True				
ANR	3985019	Identifier	ZEND_DO_UCALL		3984893	0					
ANR	3985020	Label	case ZEND_DO_FCALL_BY_NAME :	2456:5:76423:76449	3984893	3	True				
ANR	3985021	Identifier	ZEND_DO_FCALL_BY_NAME		3984893	0					
ANR	3985022	ExpressionStatement	level ++	2457:6:76457:76464	3984893	4	True				
ANR	3985023	PostIncDecOperationExpression	level ++		3984893	0					
ANR	3985024	Identifier	level		3984893	0					
ANR	3985025	IncDec	++		3984893	1					
ANR	3985026	BreakStatement	break ;	2458:6:76472:76477	3984893	5	True				
ANR	3985027	Label	case ZEND_INIT_FCALL :	2459:5:76484:76504	3984893	6	True				
ANR	3985028	Identifier	ZEND_INIT_FCALL		3984893	0					
ANR	3985029	Label	case ZEND_INIT_FCALL_BY_NAME :	2460:5:76511:76539	3984893	7	True				
ANR	3985030	Identifier	ZEND_INIT_FCALL_BY_NAME		3984893	0					
ANR	3985031	Label	case ZEND_INIT_NS_FCALL_BY_NAME :	2461:5:76546:76577	3984893	8	True				
ANR	3985032	Identifier	ZEND_INIT_NS_FCALL_BY_NAME		3984893	0					
ANR	3985033	Label	case ZEND_INIT_DYNAMIC_CALL :	2462:5:76584:76611	3984893	9	True				
ANR	3985034	Identifier	ZEND_INIT_DYNAMIC_CALL		3984893	0					
ANR	3985035	Label	case ZEND_INIT_USER_CALL :	2463:5:76618:76642	3984893	10	True				
ANR	3985036	Identifier	ZEND_INIT_USER_CALL		3984893	0					
ANR	3985037	Label	case ZEND_INIT_METHOD_CALL :	2464:5:76649:76675	3984893	11	True				
ANR	3985038	Identifier	ZEND_INIT_METHOD_CALL		3984893	0					
ANR	3985039	Label	case ZEND_INIT_STATIC_METHOD_CALL :	2465:5:76682:76715	3984893	12	True				
ANR	3985040	Identifier	ZEND_INIT_STATIC_METHOD_CALL		3984893	0					
ANR	3985041	Label	case ZEND_NEW :	2466:5:76722:76735	3984893	13	True				
ANR	3985042	Identifier	ZEND_NEW		3984893	0					
ANR	3985043	IfStatement	if ( level == 0 )		3984893	14					
ANR	3985044	Condition	level == 0	2467:10:76747:76756	3984893	0	True				
ANR	3985045	EqualityExpression	level == 0		3984893	0		==			
ANR	3985046	Identifier	level		3984893	0					
ANR	3985047	PrimaryExpression	0		3984893	1					
ANR	3985048	CompoundStatement		40:22:1129:1129	3984893	1					
ANR	3985049	ExpressionStatement	ZEND_CALL_NUM_ARGS ( call ) = 0	2468:7:76768:76796	3984893	0	True				
ANR	3985050	AssignmentExpression	ZEND_CALL_NUM_ARGS ( call ) = 0		3984893	0		=			
ANR	3985051	CallExpression	ZEND_CALL_NUM_ARGS ( call )		3984893	0					
ANR	3985052	Callee	ZEND_CALL_NUM_ARGS		3984893	0					
ANR	3985053	Identifier	ZEND_CALL_NUM_ARGS		3984893	0					
ANR	3985054	ArgumentList	call		3984893	1					
ANR	3985055	Argument	call		3984893	0					
ANR	3985056	Identifier	call		3984893	0					
ANR	3985057	PrimaryExpression	0		3984893	1					
ANR	3985058	ExpressionStatement	do_exit = 1	2469:7:76805:76816	3984893	1	True				
ANR	3985059	AssignmentExpression	do_exit = 1		3984893	0		=			
ANR	3985060	Identifier	do_exit		3984893	0					
ANR	3985061	PrimaryExpression	1		3984893	1					
ANR	3985062	ExpressionStatement	level --	2471:6:76832:76839	3984893	15	True				
ANR	3985063	PostIncDecOperationExpression	level --		3984893	0					
ANR	3985064	Identifier	level		3984893	0					
ANR	3985065	IncDec	--		3984893	1					
ANR	3985066	BreakStatement	break ;	2472:6:76847:76852	3984893	16	True				
ANR	3985067	Label	case ZEND_SEND_VAL :	2473:5:76859:76877	3984893	17	True				
ANR	3985068	Identifier	ZEND_SEND_VAL		3984893	0					
ANR	3985069	Label	case ZEND_SEND_VAL_EX :	2474:5:76884:76905	3984893	18	True				
ANR	3985070	Identifier	ZEND_SEND_VAL_EX		3984893	0					
ANR	3985071	Label	case ZEND_SEND_VAR :	2475:5:76912:76930	3984893	19	True				
ANR	3985072	Identifier	ZEND_SEND_VAR		3984893	0					
ANR	3985073	Label	case ZEND_SEND_VAR_EX :	2476:5:76937:76958	3984893	20	True				
ANR	3985074	Identifier	ZEND_SEND_VAR_EX		3984893	0					
ANR	3985075	Label	case ZEND_SEND_REF :	2477:5:76965:76983	3984893	21	True				
ANR	3985076	Identifier	ZEND_SEND_REF		3984893	0					
ANR	3985077	Label	case ZEND_SEND_VAR_NO_REF :	2478:5:76990:77015	3984893	22	True				
ANR	3985078	Identifier	ZEND_SEND_VAR_NO_REF		3984893	0					
ANR	3985079	Label	case ZEND_SEND_USER :	2479:5:77022:77041	3984893	23	True				
ANR	3985080	Identifier	ZEND_SEND_USER		3984893	0					
ANR	3985081	IfStatement	if ( level == 0 )		3984893	24					
ANR	3985082	Condition	level == 0	2480:10:77053:77062	3984893	0	True				
ANR	3985083	EqualityExpression	level == 0		3984893	0		==			
ANR	3985084	Identifier	level		3984893	0					
ANR	3985085	PrimaryExpression	0		3984893	1					
ANR	3985086	CompoundStatement		53:22:1435:1435	3984893	1					
ANR	3985087	ExpressionStatement	ZEND_CALL_NUM_ARGS ( call ) = opline -> op2 . num	2481:7:77074:77116	3984893	0	True				
ANR	3985088	AssignmentExpression	ZEND_CALL_NUM_ARGS ( call ) = opline -> op2 . num		3984893	0		=			
ANR	3985089	CallExpression	ZEND_CALL_NUM_ARGS ( call )		3984893	0					
ANR	3985090	Callee	ZEND_CALL_NUM_ARGS		3984893	0					
ANR	3985091	Identifier	ZEND_CALL_NUM_ARGS		3984893	0					
ANR	3985092	ArgumentList	call		3984893	1					
ANR	3985093	Argument	call		3984893	0					
ANR	3985094	Identifier	call		3984893	0					
ANR	3985095	MemberAccess	opline -> op2 . num		3984893	1					
ANR	3985096	PtrMemberAccess	opline -> op2		3984893	0					
ANR	3985097	Identifier	opline		3984893	0					
ANR	3985098	Identifier	op2		3984893	1					
ANR	3985099	Identifier	num		3984893	1					
ANR	3985100	ExpressionStatement	do_exit = 1	2482:7:77125:77136	3984893	1	True				
ANR	3985101	AssignmentExpression	do_exit = 1		3984893	0		=			
ANR	3985102	Identifier	do_exit		3984893	0					
ANR	3985103	PrimaryExpression	1		3984893	1					
ANR	3985104	BreakStatement	break ;	2484:6:77152:77157	3984893	25	True				
ANR	3985105	Label	case ZEND_SEND_ARRAY :	2485:5:77164:77184	3984893	26	True				
ANR	3985106	Identifier	ZEND_SEND_ARRAY		3984893	0					
ANR	3985107	Label	case ZEND_SEND_UNPACK :	2486:5:77191:77212	3984893	27	True				
ANR	3985108	Identifier	ZEND_SEND_UNPACK		3984893	0					
ANR	3985109	IfStatement	if ( level == 0 )		3984893	28					
ANR	3985110	Condition	level == 0	2487:10:77224:77233	3984893	0	True				
ANR	3985111	EqualityExpression	level == 0		3984893	0		==			
ANR	3985112	Identifier	level		3984893	0					
ANR	3985113	PrimaryExpression	0		3984893	1					
ANR	3985114	CompoundStatement		60:22:1606:1606	3984893	1					
ANR	3985115	ExpressionStatement	do_exit = 1	2488:7:77245:77256	3984893	0	True				
ANR	3985116	AssignmentExpression	do_exit = 1		3984893	0		=			
ANR	3985117	Identifier	do_exit		3984893	0					
ANR	3985118	PrimaryExpression	1		3984893	1					
ANR	3985119	BreakStatement	break ;	2490:6:77272:77277	3984893	29	True				
ANR	3985120	IfStatement	if ( ! do_exit )		3984893	1					
ANR	3985121	Condition	! do_exit	2492:8:77293:77300	3984893	0	True				
ANR	3985122	UnaryOperationExpression	! do_exit		3984893	0					
ANR	3985123	UnaryOperator	!		3984893	0					
ANR	3985124	Identifier	do_exit		3984893	1					
ANR	3985125	CompoundStatement		65:18:1673:1673	3984893	1					
ANR	3985126	ExpressionStatement	opline --	2493:5:77310:77318	3984893	0	True				
ANR	3985127	PostIncDecOperationExpression	opline --		3984893	0					
ANR	3985128	Identifier	opline		3984893	0					
ANR	3985129	IncDec	--		3984893	1					
ANR	3985130	Condition	! do_exit	2495:12:77338:77345	3984893	1	True				
ANR	3985131	UnaryOperationExpression	! do_exit		3984893	0					
ANR	3985132	UnaryOperator	!		3984893	0					
ANR	3985133	Identifier	do_exit		3984893	1					
ANR	3985134	IfStatement	if ( call -> prev_execute_data )		3984893	3					
ANR	3985135	Condition	call -> prev_execute_data	2496:7:77356:77378	3984893	0	True				
ANR	3985136	PtrMemberAccess	call -> prev_execute_data		3984893	0					
ANR	3985137	Identifier	call		3984893	0					
ANR	3985138	Identifier	prev_execute_data		3984893	1					
ANR	3985139	CompoundStatement		69:32:1751:1751	3984893	1					
ANR	3985140	ExpressionStatement	level = 0	2498:4:77422:77431	3984893	0	True				
ANR	3985141	AssignmentExpression	level = 0		3984893	0		=			
ANR	3985142	Identifier	level		3984893	0					
ANR	3985143	PrimaryExpression	0		3984893	1					
ANR	3985144	ExpressionStatement	do_exit = 0	2499:4:77437:77448	3984893	1	True				
ANR	3985145	AssignmentExpression	do_exit = 0		3984893	0		=			
ANR	3985146	Identifier	do_exit		3984893	0					
ANR	3985147	PrimaryExpression	0		3984893	1					
ANR	3985148	DoStatement	do		3984893	2					
ANR	3985149	CompoundStatement		73:7:1827:1827	3984893	0					
ANR	3985150	SwitchStatement	switch ( opline -> opcode )		3984893	0					
ANR	3985151	Condition	opline -> opcode	2501:13:77472:77485	3984893	0	True				
ANR	3985152	PtrMemberAccess	opline -> opcode		3984893	0					
ANR	3985153	Identifier	opline		3984893	0					
ANR	3985154	Identifier	opcode		3984893	1					
ANR	3985155	CompoundStatement		74:29:1858:1858	3984893	1					
ANR	3985156	Label	case ZEND_DO_FCALL :	2502:6:77496:77514	3984893	0	True				
ANR	3985157	Identifier	ZEND_DO_FCALL		3984893	0					
ANR	3985158	Label	case ZEND_DO_ICALL :	2503:6:77522:77540	3984893	1	True				
ANR	3985159	Identifier	ZEND_DO_ICALL		3984893	0					
ANR	3985160	Label	case ZEND_DO_UCALL :	2504:6:77548:77566	3984893	2	True				
ANR	3985161	Identifier	ZEND_DO_UCALL		3984893	0					
ANR	3985162	Label	case ZEND_DO_FCALL_BY_NAME :	2505:6:77574:77600	3984893	3	True				
ANR	3985163	Identifier	ZEND_DO_FCALL_BY_NAME		3984893	0					
ANR	3985164	ExpressionStatement	level ++	2506:7:77609:77616	3984893	4	True				
ANR	3985165	PostIncDecOperationExpression	level ++		3984893	0					
ANR	3985166	Identifier	level		3984893	0					
ANR	3985167	IncDec	++		3984893	1					
ANR	3985168	BreakStatement	break ;	2507:7:77625:77630	3984893	5	True				
ANR	3985169	Label	case ZEND_INIT_FCALL :	2508:6:77638:77658	3984893	6	True				
ANR	3985170	Identifier	ZEND_INIT_FCALL		3984893	0					
ANR	3985171	Label	case ZEND_INIT_FCALL_BY_NAME :	2509:6:77666:77694	3984893	7	True				
ANR	3985172	Identifier	ZEND_INIT_FCALL_BY_NAME		3984893	0					
ANR	3985173	Label	case ZEND_INIT_NS_FCALL_BY_NAME :	2510:6:77702:77733	3984893	8	True				
ANR	3985174	Identifier	ZEND_INIT_NS_FCALL_BY_NAME		3984893	0					
ANR	3985175	Label	case ZEND_INIT_DYNAMIC_CALL :	2511:6:77741:77768	3984893	9	True				
ANR	3985176	Identifier	ZEND_INIT_DYNAMIC_CALL		3984893	0					
ANR	3985177	Label	case ZEND_INIT_USER_CALL :	2512:6:77776:77800	3984893	10	True				
ANR	3985178	Identifier	ZEND_INIT_USER_CALL		3984893	0					
ANR	3985179	Label	case ZEND_INIT_METHOD_CALL :	2513:6:77808:77834	3984893	11	True				
ANR	3985180	Identifier	ZEND_INIT_METHOD_CALL		3984893	0					
ANR	3985181	Label	case ZEND_INIT_STATIC_METHOD_CALL :	2514:6:77842:77875	3984893	12	True				
ANR	3985182	Identifier	ZEND_INIT_STATIC_METHOD_CALL		3984893	0					
ANR	3985183	Label	case ZEND_NEW :	2515:6:77883:77896	3984893	13	True				
ANR	3985184	Identifier	ZEND_NEW		3984893	0					
ANR	3985185	IfStatement	if ( level == 0 )		3984893	14					
ANR	3985186	Condition	level == 0	2516:11:77909:77918	3984893	0	True				
ANR	3985187	EqualityExpression	level == 0		3984893	0		==			
ANR	3985188	Identifier	level		3984893	0					
ANR	3985189	PrimaryExpression	0		3984893	1					
ANR	3985190	CompoundStatement		89:23:2291:2291	3984893	1					
ANR	3985191	ExpressionStatement	do_exit = 1	2517:8:77931:77942	3984893	0	True				
ANR	3985192	AssignmentExpression	do_exit = 1		3984893	0		=			
ANR	3985193	Identifier	do_exit		3984893	0					
ANR	3985194	PrimaryExpression	1		3984893	1					
ANR	3985195	ExpressionStatement	level --	2519:7:77960:77967	3984893	15	True				
ANR	3985196	PostIncDecOperationExpression	level --		3984893	0					
ANR	3985197	Identifier	level		3984893	0					
ANR	3985198	IncDec	--		3984893	1					
ANR	3985199	BreakStatement	break ;	2520:7:77976:77981	3984893	16	True				
ANR	3985200	ExpressionStatement	opline --	2522:5:77995:78003	3984893	1	True				
ANR	3985201	PostIncDecOperationExpression	opline --		3984893	0					
ANR	3985202	Identifier	opline		3984893	0					
ANR	3985203	IncDec	--		3984893	1					
ANR	3985204	Condition	! do_exit	2523:13:78018:78025	3984893	1	True				
ANR	3985205	UnaryOperationExpression	! do_exit		3984893	0					
ANR	3985206	UnaryOperator	!		3984893	0					
ANR	3985207	Identifier	do_exit		3984893	1					
ANR	3985208	ExpressionStatement	zend_vm_stack_free_args ( EX ( call ) )	2526:3:78038:78071	3984893	4	True				
ANR	3985209	CallExpression	zend_vm_stack_free_args ( EX ( call ) )		3984893	0					
ANR	3985210	Callee	zend_vm_stack_free_args		3984893	0					
ANR	3985211	Identifier	zend_vm_stack_free_args		3984893	0					
ANR	3985212	ArgumentList	EX ( call )		3984893	1					
ANR	3985213	Argument	EX ( call )		3984893	0					
ANR	3985214	CallExpression	EX ( call )		3984893	0					
ANR	3985215	Callee	EX		3984893	0					
ANR	3985216	Identifier	EX		3984893	0					
ANR	3985217	ArgumentList	call		3984893	1					
ANR	3985218	Argument	call		3984893	0					
ANR	3985219	Identifier	call		3984893	0					
ANR	3985220	IfStatement	if ( ZEND_CALL_INFO ( call ) & ZEND_CALL_RELEASE_THIS )		3984893	5					
ANR	3985221	Condition	ZEND_CALL_INFO ( call ) & ZEND_CALL_RELEASE_THIS	2528:7:78081:78125	3984893	0	True				
ANR	3985222	BitAndExpression	ZEND_CALL_INFO ( call ) & ZEND_CALL_RELEASE_THIS		3984893	0		&			
ANR	3985223	CallExpression	ZEND_CALL_INFO ( call )		3984893	0					
ANR	3985224	Callee	ZEND_CALL_INFO		3984893	0					
ANR	3985225	Identifier	ZEND_CALL_INFO		3984893	0					
ANR	3985226	ArgumentList	call		3984893	1					
ANR	3985227	Argument	call		3984893	0					
ANR	3985228	Identifier	call		3984893	0					
ANR	3985229	Identifier	ZEND_CALL_RELEASE_THIS		3984893	1					
ANR	3985230	CompoundStatement		101:54:2498:2498	3984893	1					
ANR	3985231	IfStatement	if ( ZEND_CALL_INFO ( call ) & ZEND_CALL_CTOR )		3984893	0					
ANR	3985232	Condition	ZEND_CALL_INFO ( call ) & ZEND_CALL_CTOR	2529:8:78138:78174	3984893	0	True				
ANR	3985233	BitAndExpression	ZEND_CALL_INFO ( call ) & ZEND_CALL_CTOR		3984893	0		&			
ANR	3985234	CallExpression	ZEND_CALL_INFO ( call )		3984893	0					
ANR	3985235	Callee	ZEND_CALL_INFO		3984893	0					
ANR	3985236	Identifier	ZEND_CALL_INFO		3984893	0					
ANR	3985237	ArgumentList	call		3984893	1					
ANR	3985238	Argument	call		3984893	0					
ANR	3985239	Identifier	call		3984893	0					
ANR	3985240	Identifier	ZEND_CALL_CTOR		3984893	1					
ANR	3985241	CompoundStatement		102:47:2547:2547	3984893	1					
ANR	3985242	IfStatement	if ( ! ( ZEND_CALL_INFO ( call ) & ZEND_CALL_CTOR_RESULT_UNUSED ) )		3984893	0					
ANR	3985243	Condition	! ( ZEND_CALL_INFO ( call ) & ZEND_CALL_CTOR_RESULT_UNUSED )	2530:9:78188:78241	3984893	0	True				
ANR	3985244	UnaryOperationExpression	! ( ZEND_CALL_INFO ( call ) & ZEND_CALL_CTOR_RESULT_UNUSED )		3984893	0					
ANR	3985245	UnaryOperator	!		3984893	0					
ANR	3985246	BitAndExpression	ZEND_CALL_INFO ( call ) & ZEND_CALL_CTOR_RESULT_UNUSED		3984893	1		&			
ANR	3985247	CallExpression	ZEND_CALL_INFO ( call )		3984893	0					
ANR	3985248	Callee	ZEND_CALL_INFO		3984893	0					
ANR	3985249	Identifier	ZEND_CALL_INFO		3984893	0					
ANR	3985250	ArgumentList	call		3984893	1					
ANR	3985251	Argument	call		3984893	0					
ANR	3985252	Identifier	call		3984893	0					
ANR	3985253	Identifier	ZEND_CALL_CTOR_RESULT_UNUSED		3984893	1					
ANR	3985254	CompoundStatement		103:65:2614:2614	3984893	1					
ANR	3985255	ExpressionStatement	GC_REFCOUNT ( Z_OBJ ( call -> This ) ) --	2531:6:78252:78284	3984893	0	True				
ANR	3985256	PostIncDecOperationExpression	GC_REFCOUNT ( Z_OBJ ( call -> This ) ) --		3984893	0					
ANR	3985257	CallExpression	GC_REFCOUNT ( Z_OBJ ( call -> This ) )		3984893	0					
ANR	3985258	Callee	GC_REFCOUNT		3984893	0					
ANR	3985259	Identifier	GC_REFCOUNT		3984893	0					
ANR	3985260	ArgumentList	Z_OBJ ( call -> This )		3984893	1					
ANR	3985261	Argument	Z_OBJ ( call -> This )		3984893	0					
ANR	3985262	CallExpression	Z_OBJ ( call -> This )		3984893	0					
ANR	3985263	Callee	Z_OBJ		3984893	0					
ANR	3985264	Identifier	Z_OBJ		3984893	0					
ANR	3985265	ArgumentList	call -> This		3984893	1					
ANR	3985266	Argument	call -> This		3984893	0					
ANR	3985267	PtrMemberAccess	call -> This		3984893	0					
ANR	3985268	Identifier	call		3984893	0					
ANR	3985269	Identifier	This		3984893	1					
ANR	3985270	IncDec	--		3984893	1					
ANR	3985271	IfStatement	if ( GC_REFCOUNT ( Z_OBJ ( call -> This ) ) == 1 )		3984893	1					
ANR	3985272	Condition	GC_REFCOUNT ( Z_OBJ ( call -> This ) ) == 1	2533:9:78302:78336	3984893	0	True				
ANR	3985273	EqualityExpression	GC_REFCOUNT ( Z_OBJ ( call -> This ) ) == 1		3984893	0		==			
ANR	3985274	CallExpression	GC_REFCOUNT ( Z_OBJ ( call -> This ) )		3984893	0					
ANR	3985275	Callee	GC_REFCOUNT		3984893	0					
ANR	3985276	Identifier	GC_REFCOUNT		3984893	0					
ANR	3985277	ArgumentList	Z_OBJ ( call -> This )		3984893	1					
ANR	3985278	Argument	Z_OBJ ( call -> This )		3984893	0					
ANR	3985279	CallExpression	Z_OBJ ( call -> This )		3984893	0					
ANR	3985280	Callee	Z_OBJ		3984893	0					
ANR	3985281	Identifier	Z_OBJ		3984893	0					
ANR	3985282	ArgumentList	call -> This		3984893	1					
ANR	3985283	Argument	call -> This		3984893	0					
ANR	3985284	PtrMemberAccess	call -> This		3984893	0					
ANR	3985285	Identifier	call		3984893	0					
ANR	3985286	Identifier	This		3984893	1					
ANR	3985287	PrimaryExpression	1		3984893	1					
ANR	3985288	CompoundStatement		106:46:2709:2709	3984893	1					
ANR	3985289	ExpressionStatement	zend_object_store_ctor_failed ( Z_OBJ ( call -> This ) )	2534:6:78347:78395	3984893	0	True				
ANR	3985290	CallExpression	zend_object_store_ctor_failed ( Z_OBJ ( call -> This ) )		3984893	0					
ANR	3985291	Callee	zend_object_store_ctor_failed		3984893	0					
ANR	3985292	Identifier	zend_object_store_ctor_failed		3984893	0					
ANR	3985293	ArgumentList	Z_OBJ ( call -> This )		3984893	1					
ANR	3985294	Argument	Z_OBJ ( call -> This )		3984893	0					
ANR	3985295	CallExpression	Z_OBJ ( call -> This )		3984893	0					
ANR	3985296	Callee	Z_OBJ		3984893	0					
ANR	3985297	Identifier	Z_OBJ		3984893	0					
ANR	3985298	ArgumentList	call -> This		3984893	1					
ANR	3985299	Argument	call -> This		3984893	0					
ANR	3985300	PtrMemberAccess	call -> This		3984893	0					
ANR	3985301	Identifier	call		3984893	0					
ANR	3985302	Identifier	This		3984893	1					
ANR	3985303	ExpressionStatement	OBJ_RELEASE ( Z_OBJ ( call -> This ) )	2537:4:78414:78444	3984893	1	True				
ANR	3985304	CallExpression	OBJ_RELEASE ( Z_OBJ ( call -> This ) )		3984893	0					
ANR	3985305	Callee	OBJ_RELEASE		3984893	0					
ANR	3985306	Identifier	OBJ_RELEASE		3984893	0					
ANR	3985307	ArgumentList	Z_OBJ ( call -> This )		3984893	1					
ANR	3985308	Argument	Z_OBJ ( call -> This )		3984893	0					
ANR	3985309	CallExpression	Z_OBJ ( call -> This )		3984893	0					
ANR	3985310	Callee	Z_OBJ		3984893	0					
ANR	3985311	Identifier	Z_OBJ		3984893	0					
ANR	3985312	ArgumentList	call -> This		3984893	1					
ANR	3985313	Argument	call -> This		3984893	0					
ANR	3985314	PtrMemberAccess	call -> This		3984893	0					
ANR	3985315	Identifier	call		3984893	0					
ANR	3985316	Identifier	This		3984893	1					
ANR	3985317	IfStatement	if ( call -> func -> common . fn_flags & ZEND_ACC_CLOSURE )		3984893	6					
ANR	3985318	Condition	call -> func -> common . fn_flags & ZEND_ACC_CLOSURE	2539:7:78458:78503	3984893	0	True				
ANR	3985319	BitAndExpression	call -> func -> common . fn_flags & ZEND_ACC_CLOSURE		3984893	0		&			
ANR	3985320	MemberAccess	call -> func -> common . fn_flags		3984893	0					
ANR	3985321	PtrMemberAccess	call -> func -> common		3984893	0					
ANR	3985322	PtrMemberAccess	call -> func		3984893	0					
ANR	3985323	Identifier	call		3984893	0					
ANR	3985324	Identifier	func		3984893	1					
ANR	3985325	Identifier	common		3984893	1					
ANR	3985326	Identifier	fn_flags		3984893	1					
ANR	3985327	Identifier	ZEND_ACC_CLOSURE		3984893	1					
ANR	3985328	CompoundStatement		112:55:2876:2876	3984893	1					
ANR	3985329	ExpressionStatement	zend_object_release ( ( zend_object * ) call -> func -> common . prototype )	2540:4:78512:78577	3984893	0	True				
ANR	3985330	CallExpression	zend_object_release ( ( zend_object * ) call -> func -> common . prototype )		3984893	0					
ANR	3985331	Callee	zend_object_release		3984893	0					
ANR	3985332	Identifier	zend_object_release		3984893	0					
ANR	3985333	ArgumentList	( zend_object * ) call -> func -> common . prototype		3984893	1					
ANR	3985334	Argument	( zend_object * ) call -> func -> common . prototype		3984893	0					
ANR	3985335	CastExpression	( zend_object * ) call -> func -> common . prototype		3984893	0					
ANR	3985336	CastTarget	zend_object *		3984893	0					
ANR	3985337	MemberAccess	call -> func -> common . prototype		3984893	1					
ANR	3985338	PtrMemberAccess	call -> func -> common		3984893	0					
ANR	3985339	PtrMemberAccess	call -> func		3984893	0					
ANR	3985340	Identifier	call		3984893	0					
ANR	3985341	Identifier	func		3984893	1					
ANR	3985342	Identifier	common		3984893	1					
ANR	3985343	Identifier	prototype		3984893	1					
ANR	3985344	ElseStatement	else		3984893	0					
ANR	3985345	IfStatement	if ( call -> func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE )		3984893	0					
ANR	3985346	Condition	call -> func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE	2541:14:78593:78650	3984893	0	True				
ANR	3985347	BitAndExpression	call -> func -> common . fn_flags & ZEND_ACC_CALL_VIA_TRAMPOLINE		3984893	0		&			
ANR	3985348	MemberAccess	call -> func -> common . fn_flags		3984893	0					
ANR	3985349	PtrMemberAccess	call -> func -> common		3984893	0					
ANR	3985350	PtrMemberAccess	call -> func		3984893	0					
ANR	3985351	Identifier	call		3984893	0					
ANR	3985352	Identifier	func		3984893	1					
ANR	3985353	Identifier	common		3984893	1					
ANR	3985354	Identifier	fn_flags		3984893	1					
ANR	3985355	Identifier	ZEND_ACC_CALL_VIA_TRAMPOLINE		3984893	1					
ANR	3985356	CompoundStatement		114:74:3023:3023	3984893	1					
ANR	3985357	ExpressionStatement	zend_string_release ( call -> func -> common . function_name )	2542:4:78659:78712	3984893	0	True				
ANR	3985358	CallExpression	zend_string_release ( call -> func -> common . function_name )		3984893	0					
ANR	3985359	Callee	zend_string_release		3984893	0					
ANR	3985360	Identifier	zend_string_release		3984893	0					
ANR	3985361	ArgumentList	call -> func -> common . function_name		3984893	1					
ANR	3985362	Argument	call -> func -> common . function_name		3984893	0					
ANR	3985363	MemberAccess	call -> func -> common . function_name		3984893	0					
ANR	3985364	PtrMemberAccess	call -> func -> common		3984893	0					
ANR	3985365	PtrMemberAccess	call -> func		3984893	0					
ANR	3985366	Identifier	call		3984893	0					
ANR	3985367	Identifier	func		3984893	1					
ANR	3985368	Identifier	common		3984893	1					
ANR	3985369	Identifier	function_name		3984893	1					
ANR	3985370	ExpressionStatement	zend_free_trampoline ( call -> func )	2543:4:78718:78750	3984893	1	True				
ANR	3985371	CallExpression	zend_free_trampoline ( call -> func )		3984893	0					
ANR	3985372	Callee	zend_free_trampoline		3984893	0					
ANR	3985373	Identifier	zend_free_trampoline		3984893	0					
ANR	3985374	ArgumentList	call -> func		3984893	1					
ANR	3985375	Argument	call -> func		3984893	0					
ANR	3985376	PtrMemberAccess	call -> func		3984893	0					
ANR	3985377	Identifier	call		3984893	0					
ANR	3985378	Identifier	func		3984893	1					
ANR	3985379	ExpressionStatement	EX ( call ) = call -> prev_execute_data	2546:3:78761:78795	3984893	7	True				
ANR	3985380	AssignmentExpression	EX ( call ) = call -> prev_execute_data		3984893	0		=			
ANR	3985381	CallExpression	EX ( call )		3984893	0					
ANR	3985382	Callee	EX		3984893	0					
ANR	3985383	Identifier	EX		3984893	0					
ANR	3985384	ArgumentList	call		3984893	1					
ANR	3985385	Argument	call		3984893	0					
ANR	3985386	Identifier	call		3984893	0					
ANR	3985387	PtrMemberAccess	call -> prev_execute_data		3984893	1					
ANR	3985388	Identifier	call		3984893	0					
ANR	3985389	Identifier	prev_execute_data		3984893	1					
ANR	3985390	ExpressionStatement	zend_vm_stack_free_call_frame ( call )	2547:3:78800:78835	3984893	8	True				
ANR	3985391	CallExpression	zend_vm_stack_free_call_frame ( call )		3984893	0					
ANR	3985392	Callee	zend_vm_stack_free_call_frame		3984893	0					
ANR	3985393	Identifier	zend_vm_stack_free_call_frame		3984893	0					
ANR	3985394	ArgumentList	call		3984893	1					
ANR	3985395	Argument	call		3984893	0					
ANR	3985396	Identifier	call		3984893	0					
ANR	3985397	ExpressionStatement	call = EX ( call )	2548:3:78840:78855	3984893	9	True				
ANR	3985398	AssignmentExpression	call = EX ( call )		3984893	0		=			
ANR	3985399	Identifier	call		3984893	0					
ANR	3985400	CallExpression	EX ( call )		3984893	1					
ANR	3985401	Callee	EX		3984893	0					
ANR	3985402	Identifier	EX		3984893	0					
ANR	3985403	ArgumentList	call		3984893	1					
ANR	3985404	Argument	call		3984893	0					
ANR	3985405	Identifier	call		3984893	0					
ANR	3985406	Condition	call	2549:11:78868:78871	3984893	1	True				
ANR	3985407	Identifier	call		3984893	0					
ANR	3985408	ReturnType	static void		3984893	1					
ANR	3985409	Identifier	cleanup_unfinished_calls		3984893	2					
ANR	3985410	ParameterList	"zend_execute_data * execute_data , uint32_t op_num"		3984893	3					
ANR	3985411	Parameter	zend_execute_data * execute_data	2427:37:75569:75599	3984893	0	True				
ANR	3985412	ParameterType	zend_execute_data *		3984893	0					
ANR	3985413	Identifier	execute_data		3984893	1					
ANR	3985414	Parameter	uint32_t op_num	2427:70:75602:75616	3984893	1	True				
ANR	3985415	ParameterType	uint32_t		3984893	0					
ANR	3985416	Identifier	op_num		3984893	1					
ANR	3985417	CFGEntryNode	ENTRY		3984893		True				
ANR	3985418	CFGExitNode	EXIT		3984893		True				
ANR	3985419	Symbol	opline -> op2		3984893						
ANR	3985420	Symbol	call -> This		3984893						
ANR	3985421	Symbol	call -> func		3984893						
ANR	3985422	Symbol	* call		3984893						
ANR	3985423	Symbol	call -> prev_execute_data		3984893						
ANR	3985424	Symbol	call -> func -> common . prototype		3984893						
ANR	3985425	Symbol	execute_data		3984893						
ANR	3985426	Symbol	EX ( func ) -> op_array . opcodes		3984893						
ANR	3985427	Symbol	UNEXPECTED		3984893						
ANR	3985428	Symbol	do_exit		3984893						
ANR	3985429	Symbol	* call -> func		3984893						
ANR	3985430	Symbol	Z_OBJ		3984893						
ANR	3985431	Symbol	opline		3984893						
ANR	3985432	Symbol	ZEND_CALL_CTOR		3984893						
ANR	3985433	Symbol	call -> func -> common		3984893						
ANR	3985434	Symbol	ZEND_INIT_FCALL		3984893						
ANR	3985435	Symbol	ZEND_CALL_NUM_ARGS		3984893						
ANR	3985436	Symbol	GC_REFCOUNT		3984893						
ANR	3985437	Symbol	ZEND_CALL_RELEASE_THIS		3984893						
ANR	3985438	Symbol	* * call		3984893						
ANR	3985439	Symbol	opline -> op2 . num		3984893						
ANR	3985440	Symbol	ZEND_INIT_DYNAMIC_CALL		3984893						
ANR	3985441	Symbol	level		3984893						
ANR	3985442	Symbol	call -> func -> common . function_name		3984893						
ANR	3985443	Symbol	op_num		3984893						
ANR	3985444	Symbol	ZEND_INIT_METHOD_CALL		3984893						
ANR	3985445	Symbol	ZEND_ACC_CALL_VIA_TRAMPOLINE		3984893						
ANR	3985446	Symbol	ZEND_CALL_CTOR_RESULT_UNUSED		3984893						
ANR	3985447	Symbol	call		3984893						
ANR	3985448	Symbol	EX ( func ) -> op_array		3984893						
ANR	3985449	Symbol	ZEND_ACC_CLOSURE		3984893						
ANR	3985450	Symbol	EX		3984893						
ANR	3985451	Symbol	func		3984893						
ANR	3985452	Symbol	* opline		3984893						
ANR	3985453	Symbol	opline -> opcode		3984893						
ANR	3985454	Symbol	ZEND_CALL_INFO		3984893						
ANR	3985455	Symbol	call -> func -> common . fn_flags		3984893						
ANR	3985456	Symbol	* EX		3984893						
ANR	3985457	Symbol	ZEND_INIT_STATIC_METHOD_CALL		3984893						
ANR	3985458	Symbol	ZEND_INIT_FCALL_BY_NAME		3984893						
ANR	3985459	Function	cleanup_live_vars	2554:0:78891:80689							
ANR	3985460	FunctionDef	"cleanup_live_vars (zend_execute_data * execute_data , uint32_t op_num , uint32_t catch_op_num)"		3985459	0					
ANR	3985461	CompoundStatement		2555:0:79004:80689	3985459	0					
ANR	3985462	IdentifierDeclStatement	int i ;	2556:1:79007:79012	3985459	0	True				
ANR	3985463	IdentifierDecl	i		3985459	0					
ANR	3985464	IdentifierDeclType	int		3985459	0					
ANR	3985465	Identifier	i		3985459	1					
ANR	3985466	ForStatement	for ( i = 0 ; i < EX ( func ) -> op_array . last_brk_cont ; i ++ )		3985459	1					
ANR	3985467	ForInit	i = 0 ;	2558:6:79021:79026	3985459	0	True				
ANR	3985468	AssignmentExpression	i = 0		3985459	0		=			
ANR	3985469	Identifier	i		3985459	0					
ANR	3985470	PrimaryExpression	0		3985459	1					
ANR	3985471	Condition	i < EX ( func ) -> op_array . last_brk_cont	2558:13:79028:79063	3985459	1	True				
ANR	3985472	RelationalExpression	i < EX ( func ) -> op_array . last_brk_cont		3985459	0		<			
ANR	3985473	Identifier	i		3985459	0					
ANR	3985474	MemberAccess	EX ( func ) -> op_array . last_brk_cont		3985459	1					
ANR	3985475	PtrMemberAccess	EX ( func ) -> op_array		3985459	0					
ANR	3985476	CallExpression	EX ( func )		3985459	0					
ANR	3985477	Callee	EX		3985459	0					
ANR	3985478	Identifier	EX		3985459	0					
ANR	3985479	ArgumentList	func		3985459	1					
ANR	3985480	Argument	func		3985459	0					
ANR	3985481	Identifier	func		3985459	0					
ANR	3985482	Identifier	op_array		3985459	1					
ANR	3985483	Identifier	last_brk_cont		3985459	1					
ANR	3985484	PostIncDecOperationExpression	i ++	2558:51:79066:79068	3985459	2	True				
ANR	3985485	Identifier	i		3985459	0					
ANR	3985486	IncDec	++		3985459	1					
ANR	3985487	CompoundStatement		5:2:70:147	3985459	3					
ANR	3985488	IdentifierDeclStatement	const zend_brk_cont_element * brk_cont = & EX ( func ) -> op_array . brk_cont_array [ i ] ;	2559:2:79075:79152	3985459	0	True				
ANR	3985489	IdentifierDecl	* brk_cont = & EX ( func ) -> op_array . brk_cont_array [ i ]		3985459	0					
ANR	3985490	IdentifierDeclType	const zend_brk_cont_element *		3985459	0					
ANR	3985491	Identifier	brk_cont		3985459	1					
ANR	3985492	AssignmentExpression	* brk_cont = & EX ( func ) -> op_array . brk_cont_array [ i ]		3985459	2		=			
ANR	3985493	Identifier	brk_cont		3985459	0					
ANR	3985494	UnaryOperationExpression	& EX ( func ) -> op_array . brk_cont_array [ i ]		3985459	1					
ANR	3985495	UnaryOperator	&		3985459	0					
ANR	3985496	ArrayIndexing	EX ( func ) -> op_array . brk_cont_array [ i ]		3985459	1					
ANR	3985497	MemberAccess	EX ( func ) -> op_array . brk_cont_array		3985459	0					
ANR	3985498	PtrMemberAccess	EX ( func ) -> op_array		3985459	0					
ANR	3985499	CallExpression	EX ( func )		3985459	0					
ANR	3985500	Callee	EX		3985459	0					
ANR	3985501	Identifier	EX		3985459	0					
ANR	3985502	ArgumentList	func		3985459	1					
ANR	3985503	Argument	func		3985459	0					
ANR	3985504	Identifier	func		3985459	0					
ANR	3985505	Identifier	op_array		3985459	1					
ANR	3985506	Identifier	brk_cont_array		3985459	1					
ANR	3985507	Identifier	i		3985459	1					
ANR	3985508	IfStatement	if ( brk_cont -> start < 0 )		3985459	1					
ANR	3985509	Condition	brk_cont -> start < 0	2560:6:79160:79178	3985459	0	True				
ANR	3985510	RelationalExpression	brk_cont -> start < 0		3985459	0		<			
ANR	3985511	PtrMemberAccess	brk_cont -> start		3985459	0					
ANR	3985512	Identifier	brk_cont		3985459	0					
ANR	3985513	Identifier	start		3985459	1					
ANR	3985514	PrimaryExpression	0		3985459	1					
ANR	3985515	CompoundStatement		6:27:176:176	3985459	1					
ANR	3985516	ContinueStatement	continue ;	2561:3:79186:79194	3985459	0	True				
ANR	3985517	ElseStatement	else		3985459	0					
ANR	3985518	IfStatement	if ( brk_cont -> start > op_num )		3985459	0					
ANR	3985519	Condition	brk_cont -> start > op_num	2562:13:79209:79232	3985459	0	True				
ANR	3985520	RelationalExpression	brk_cont -> start > op_num		3985459	0		>			
ANR	3985521	PtrMemberAccess	brk_cont -> start		3985459	0					
ANR	3985522	Identifier	brk_cont		3985459	0					
ANR	3985523	Identifier	start		3985459	1					
ANR	3985524	Identifier	op_num		3985459	1					
ANR	3985525	CompoundStatement		8:39:230:230	3985459	1					
ANR	3985526	BreakStatement	break ;	2564:3:79288:79293	3985459	0	True				
ANR	3985527	ElseStatement	else		3985459	0					
ANR	3985528	IfStatement	if ( op_num < brk_cont -> brk )		3985459	0					
ANR	3985529	Condition	op_num < brk_cont -> brk	2565:13:79308:79329	3985459	0	True				
ANR	3985530	RelationalExpression	op_num < brk_cont -> brk		3985459	0		<			
ANR	3985531	Identifier	op_num		3985459	0					
ANR	3985532	PtrMemberAccess	brk_cont -> brk		3985459	1					
ANR	3985533	Identifier	brk_cont		3985459	0					
ANR	3985534	Identifier	brk		3985459	1					
ANR	3985535	CompoundStatement		11:37:327:327	3985459	1					
ANR	3985536	IfStatement	if ( ! catch_op_num || catch_op_num >= brk_cont -> brk )		3985459	0					
ANR	3985537	Condition	! catch_op_num || catch_op_num >= brk_cont -> brk	2566:7:79341:79386	3985459	0	True				
ANR	3985538	OrExpression	! catch_op_num || catch_op_num >= brk_cont -> brk		3985459	0		||			
ANR	3985539	UnaryOperationExpression	! catch_op_num		3985459	0					
ANR	3985540	UnaryOperator	!		3985459	0					
ANR	3985541	Identifier	catch_op_num		3985459	1					
ANR	3985542	RelationalExpression	catch_op_num >= brk_cont -> brk		3985459	1		>=			
ANR	3985543	Identifier	catch_op_num		3985459	0					
ANR	3985544	PtrMemberAccess	brk_cont -> brk		3985459	1					
ANR	3985545	Identifier	brk_cont		3985459	0					
ANR	3985546	Identifier	brk		3985459	1					
ANR	3985547	CompoundStatement		13:4:390:454	3985459	1					
ANR	3985548	IdentifierDeclStatement	zend_op * brk_opline = & EX ( func ) -> op_array . opcodes [ brk_cont -> brk ] ;	2567:4:79395:79459	3985459	0	True				
ANR	3985549	IdentifierDecl	* brk_opline = & EX ( func ) -> op_array . opcodes [ brk_cont -> brk ]		3985459	0					
ANR	3985550	IdentifierDeclType	zend_op *		3985459	0					
ANR	3985551	Identifier	brk_opline		3985459	1					
ANR	3985552	AssignmentExpression	* brk_opline = & EX ( func ) -> op_array . opcodes [ brk_cont -> brk ]		3985459	2		=			
ANR	3985553	Identifier	brk_opline		3985459	0					
ANR	3985554	UnaryOperationExpression	& EX ( func ) -> op_array . opcodes [ brk_cont -> brk ]		3985459	1					
ANR	3985555	UnaryOperator	&		3985459	0					
ANR	3985556	ArrayIndexing	EX ( func ) -> op_array . opcodes [ brk_cont -> brk ]		3985459	1					
ANR	3985557	MemberAccess	EX ( func ) -> op_array . opcodes		3985459	0					
ANR	3985558	PtrMemberAccess	EX ( func ) -> op_array		3985459	0					
ANR	3985559	CallExpression	EX ( func )		3985459	0					
ANR	3985560	Callee	EX		3985459	0					
ANR	3985561	Identifier	EX		3985459	0					
ANR	3985562	ArgumentList	func		3985459	1					
ANR	3985563	Argument	func		3985459	0					
ANR	3985564	Identifier	func		3985459	0					
ANR	3985565	Identifier	op_array		3985459	1					
ANR	3985566	Identifier	opcodes		3985459	1					
ANR	3985567	PtrMemberAccess	brk_cont -> brk		3985459	1					
ANR	3985568	Identifier	brk_cont		3985459	0					
ANR	3985569	Identifier	brk		3985459	1					
ANR	3985570	IfStatement	if ( brk_opline -> opcode == ZEND_FREE )		3985459	1					
ANR	3985571	Condition	brk_opline -> opcode == ZEND_FREE	2569:8:79470:79500	3985459	0	True				
ANR	3985572	EqualityExpression	brk_opline -> opcode == ZEND_FREE		3985459	0		==			
ANR	3985573	PtrMemberAccess	brk_opline -> opcode		3985459	0					
ANR	3985574	Identifier	brk_opline		3985459	0					
ANR	3985575	Identifier	opcode		3985459	1					
ANR	3985576	Identifier	ZEND_FREE		3985459	1					
ANR	3985577	CompoundStatement		15:41:498:498	3985459	1					
ANR	3985578	ExpressionStatement	zval_ptr_dtor_nogc ( EX_VAR ( brk_opline -> op1 . var ) )	2570:5:79510:79557	3985459	0	True				
ANR	3985579	CallExpression	zval_ptr_dtor_nogc ( EX_VAR ( brk_opline -> op1 . var ) )		3985459	0					
ANR	3985580	Callee	zval_ptr_dtor_nogc		3985459	0					
ANR	3985581	Identifier	zval_ptr_dtor_nogc		3985459	0					
ANR	3985582	ArgumentList	EX_VAR ( brk_opline -> op1 . var )		3985459	1					
ANR	3985583	Argument	EX_VAR ( brk_opline -> op1 . var )		3985459	0					
ANR	3985584	CallExpression	EX_VAR ( brk_opline -> op1 . var )		3985459	0					
ANR	3985585	Callee	EX_VAR		3985459	0					
ANR	3985586	Identifier	EX_VAR		3985459	0					
ANR	3985587	ArgumentList	brk_opline -> op1 . var		3985459	1					
ANR	3985588	Argument	brk_opline -> op1 . var		3985459	0					
ANR	3985589	MemberAccess	brk_opline -> op1 . var		3985459	0					
ANR	3985590	PtrMemberAccess	brk_opline -> op1		3985459	0					
ANR	3985591	Identifier	brk_opline		3985459	0					
ANR	3985592	Identifier	op1		3985459	1					
ANR	3985593	Identifier	var		3985459	1					
ANR	3985594	ElseStatement	else		3985459	0					
ANR	3985595	IfStatement	if ( brk_opline -> opcode == ZEND_FE_FREE )		3985459	0					
ANR	3985596	Condition	brk_opline -> opcode == ZEND_FE_FREE	2571:15:79574:79607	3985459	0	True				
ANR	3985597	EqualityExpression	brk_opline -> opcode == ZEND_FE_FREE		3985459	0		==			
ANR	3985598	PtrMemberAccess	brk_opline -> opcode		3985459	0					
ANR	3985599	Identifier	brk_opline		3985459	0					
ANR	3985600	Identifier	opcode		3985459	1					
ANR	3985601	Identifier	ZEND_FE_FREE		3985459	1					
ANR	3985602	CompoundStatement		18:5:612:651	3985459	1					
ANR	3985603	IdentifierDeclStatement	zval * var = EX_VAR ( brk_opline -> op1 . var ) ;	2572:5:79617:79656	3985459	0	True				
ANR	3985604	IdentifierDecl	* var = EX_VAR ( brk_opline -> op1 . var )		3985459	0					
ANR	3985605	IdentifierDeclType	zval *		3985459	0					
ANR	3985606	Identifier	var		3985459	1					
ANR	3985607	AssignmentExpression	* var = EX_VAR ( brk_opline -> op1 . var )		3985459	2		=			
ANR	3985608	Identifier	var		3985459	0					
ANR	3985609	CallExpression	EX_VAR ( brk_opline -> op1 . var )		3985459	1					
ANR	3985610	Callee	EX_VAR		3985459	0					
ANR	3985611	Identifier	EX_VAR		3985459	0					
ANR	3985612	ArgumentList	brk_opline -> op1 . var		3985459	1					
ANR	3985613	Argument	brk_opline -> op1 . var		3985459	0					
ANR	3985614	MemberAccess	brk_opline -> op1 . var		3985459	0					
ANR	3985615	PtrMemberAccess	brk_opline -> op1		3985459	0					
ANR	3985616	Identifier	brk_opline		3985459	0					
ANR	3985617	Identifier	op1		3985459	1					
ANR	3985618	Identifier	var		3985459	1					
ANR	3985619	IfStatement	if ( Z_TYPE_P ( var ) != IS_ARRAY && Z_FE_ITER_P ( var ) != ( uint32_t ) - 1 )		3985459	1					
ANR	3985620	Condition	Z_TYPE_P ( var ) != IS_ARRAY && Z_FE_ITER_P ( var ) != ( uint32_t ) - 1	2573:9:79667:79727	3985459	0	True				
ANR	3985621	AndExpression	Z_TYPE_P ( var ) != IS_ARRAY && Z_FE_ITER_P ( var ) != ( uint32_t ) - 1		3985459	0		&&			
ANR	3985622	EqualityExpression	Z_TYPE_P ( var ) != IS_ARRAY		3985459	0		!=			
ANR	3985623	CallExpression	Z_TYPE_P ( var )		3985459	0					
ANR	3985624	Callee	Z_TYPE_P		3985459	0					
ANR	3985625	Identifier	Z_TYPE_P		3985459	0					
ANR	3985626	ArgumentList	var		3985459	1					
ANR	3985627	Argument	var		3985459	0					
ANR	3985628	Identifier	var		3985459	0					
ANR	3985629	Identifier	IS_ARRAY		3985459	1					
ANR	3985630	EqualityExpression	Z_FE_ITER_P ( var ) != ( uint32_t ) - 1		3985459	1		!=			
ANR	3985631	CallExpression	Z_FE_ITER_P ( var )		3985459	0					
ANR	3985632	Callee	Z_FE_ITER_P		3985459	0					
ANR	3985633	Identifier	Z_FE_ITER_P		3985459	0					
ANR	3985634	ArgumentList	var		3985459	1					
ANR	3985635	Argument	var		3985459	0					
ANR	3985636	Identifier	var		3985459	0					
ANR	3985637	CastExpression	( uint32_t ) - 1		3985459	1					
ANR	3985638	CastTarget	uint32_t		3985459	0					
ANR	3985639	UnaryOperationExpression	- 1		3985459	1					
ANR	3985640	UnaryOperator	-		3985459	0					
ANR	3985641	PrimaryExpression	1		3985459	1					
ANR	3985642	CompoundStatement		19:72:725:725	3985459	1					
ANR	3985643	ExpressionStatement	zend_hash_iterator_del ( Z_FE_ITER_P ( var ) )	2574:6:79738:79778	3985459	0	True				
ANR	3985644	CallExpression	zend_hash_iterator_del ( Z_FE_ITER_P ( var ) )		3985459	0					
ANR	3985645	Callee	zend_hash_iterator_del		3985459	0					
ANR	3985646	Identifier	zend_hash_iterator_del		3985459	0					
ANR	3985647	ArgumentList	Z_FE_ITER_P ( var )		3985459	1					
ANR	3985648	Argument	Z_FE_ITER_P ( var )		3985459	0					
ANR	3985649	CallExpression	Z_FE_ITER_P ( var )		3985459	0					
ANR	3985650	Callee	Z_FE_ITER_P		3985459	0					
ANR	3985651	Identifier	Z_FE_ITER_P		3985459	0					
ANR	3985652	ArgumentList	var		3985459	1					
ANR	3985653	Argument	var		3985459	0					
ANR	3985654	Identifier	var		3985459	0					
ANR	3985655	ExpressionStatement	zval_ptr_dtor_nogc ( var )	2576:5:79792:79815	3985459	2	True				
ANR	3985656	CallExpression	zval_ptr_dtor_nogc ( var )		3985459	0					
ANR	3985657	Callee	zval_ptr_dtor_nogc		3985459	0					
ANR	3985658	Identifier	zval_ptr_dtor_nogc		3985459	0					
ANR	3985659	ArgumentList	var		3985459	1					
ANR	3985660	Argument	var		3985459	0					
ANR	3985661	Identifier	var		3985459	0					
ANR	3985662	ElseStatement	else		3985459	0					
ANR	3985663	IfStatement	if ( brk_opline -> opcode == ZEND_ROPE_END )		3985459	0					
ANR	3985664	Condition	brk_opline -> opcode == ZEND_ROPE_END	2577:15:79832:79866	3985459	0	True				
ANR	3985665	EqualityExpression	brk_opline -> opcode == ZEND_ROPE_END		3985459	0		==			
ANR	3985666	PtrMemberAccess	brk_opline -> opcode		3985459	0					
ANR	3985667	Identifier	brk_opline		3985459	0					
ANR	3985668	Identifier	opcode		3985459	1					
ANR	3985669	Identifier	ZEND_ROPE_END		3985459	1					
ANR	3985670	CompoundStatement		25:5:943:994	3985459	1					
ANR	3985671	IdentifierDeclStatement	zend_string * * rope = ( zend_string * * ) EX_VAR ( brk_opline -> op1 . var ) ;	2578:5:79876:79941	3985459	0	True				
ANR	3985672	IdentifierDecl	* * rope = ( zend_string * * ) EX_VAR ( brk_opline -> op1 . var )		3985459	0					
ANR	3985673	IdentifierDeclType	zend_string * *		3985459	0					
ANR	3985674	Identifier	rope		3985459	1					
ANR	3985675	AssignmentExpression	* * rope = ( zend_string * * ) EX_VAR ( brk_opline -> op1 . var )		3985459	2		=			
ANR	3985676	Identifier	rope		3985459	0					
ANR	3985677	CastExpression	( zend_string * * ) EX_VAR ( brk_opline -> op1 . var )		3985459	1					
ANR	3985678	CastTarget	zend_string * *		3985459	0					
ANR	3985679	CallExpression	EX_VAR ( brk_opline -> op1 . var )		3985459	1					
ANR	3985680	Callee	EX_VAR		3985459	0					
ANR	3985681	Identifier	EX_VAR		3985459	0					
ANR	3985682	ArgumentList	brk_opline -> op1 . var		3985459	1					
ANR	3985683	Argument	brk_opline -> op1 . var		3985459	0					
ANR	3985684	MemberAccess	brk_opline -> op1 . var		3985459	0					
ANR	3985685	PtrMemberAccess	brk_opline -> op1		3985459	0					
ANR	3985686	Identifier	brk_opline		3985459	0					
ANR	3985687	Identifier	op1		3985459	1					
ANR	3985688	Identifier	var		3985459	1					
ANR	3985689	IdentifierDeclStatement	zend_op * last = EX ( func ) -> op_array . opcodes + op_num ;	2579:5:79948:79999	3985459	1	True				
ANR	3985690	IdentifierDecl	* last = EX ( func ) -> op_array . opcodes + op_num		3985459	0					
ANR	3985691	IdentifierDeclType	zend_op *		3985459	0					
ANR	3985692	Identifier	last		3985459	1					
ANR	3985693	AssignmentExpression	* last = EX ( func ) -> op_array . opcodes + op_num		3985459	2		=			
ANR	3985694	Identifier	last		3985459	0					
ANR	3985695	AdditiveExpression	EX ( func ) -> op_array . opcodes + op_num		3985459	1		+			
ANR	3985696	MemberAccess	EX ( func ) -> op_array . opcodes		3985459	0					
ANR	3985697	PtrMemberAccess	EX ( func ) -> op_array		3985459	0					
ANR	3985698	CallExpression	EX ( func )		3985459	0					
ANR	3985699	Callee	EX		3985459	0					
ANR	3985700	Identifier	EX		3985459	0					
ANR	3985701	ArgumentList	func		3985459	1					
ANR	3985702	Argument	func		3985459	0					
ANR	3985703	Identifier	func		3985459	0					
ANR	3985704	Identifier	op_array		3985459	1					
ANR	3985705	Identifier	opcodes		3985459	1					
ANR	3985706	Identifier	op_num		3985459	1					
ANR	3985707	WhileStatement	while ( ( last -> opcode != ZEND_ROPE_ADD && last -> opcode != ZEND_ROPE_INIT ) || last -> result . var != brk_opline -> op1 . var )		3985459	2					
ANR	3985708	Condition	( last -> opcode != ZEND_ROPE_ADD && last -> opcode != ZEND_ROPE_INIT ) || last -> result . var != brk_opline -> op1 . var	2580:12:80013:80127	3985459	0	True				
ANR	3985709	OrExpression	( last -> opcode != ZEND_ROPE_ADD && last -> opcode != ZEND_ROPE_INIT ) || last -> result . var != brk_opline -> op1 . var		3985459	0		||			
ANR	3985710	AndExpression	last -> opcode != ZEND_ROPE_ADD && last -> opcode != ZEND_ROPE_INIT		3985459	0		&&			
ANR	3985711	EqualityExpression	last -> opcode != ZEND_ROPE_ADD		3985459	0		!=			
ANR	3985712	PtrMemberAccess	last -> opcode		3985459	0					
ANR	3985713	Identifier	last		3985459	0					
ANR	3985714	Identifier	opcode		3985459	1					
ANR	3985715	Identifier	ZEND_ROPE_ADD		3985459	1					
ANR	3985716	EqualityExpression	last -> opcode != ZEND_ROPE_INIT		3985459	1		!=			
ANR	3985717	PtrMemberAccess	last -> opcode		3985459	0					
ANR	3985718	Identifier	last		3985459	0					
ANR	3985719	Identifier	opcode		3985459	1					
ANR	3985720	Identifier	ZEND_ROPE_INIT		3985459	1					
ANR	3985721	EqualityExpression	last -> result . var != brk_opline -> op1 . var		3985459	1		!=			
ANR	3985722	MemberAccess	last -> result . var		3985459	0					
ANR	3985723	PtrMemberAccess	last -> result		3985459	0					
ANR	3985724	Identifier	last		3985459	0					
ANR	3985725	Identifier	result		3985459	1					
ANR	3985726	Identifier	var		3985459	1					
ANR	3985727	MemberAccess	brk_opline -> op1 . var		3985459	1					
ANR	3985728	PtrMemberAccess	brk_opline -> op1		3985459	0					
ANR	3985729	Identifier	brk_opline		3985459	0					
ANR	3985730	Identifier	op1		3985459	1					
ANR	3985731	Identifier	var		3985459	1					
ANR	3985732	CompoundStatement		27:51:1125:1125	3985459	1					
ANR	3985733	ExpressionStatement	ZEND_ASSERT ( last >= EX ( func ) -> op_array . opcodes )	2582:6:80138:80185	3985459	0	True				
ANR	3985734	CallExpression	ZEND_ASSERT ( last >= EX ( func ) -> op_array . opcodes )		3985459	0					
ANR	3985735	Callee	ZEND_ASSERT		3985459	0					
ANR	3985736	Identifier	ZEND_ASSERT		3985459	0					
ANR	3985737	ArgumentList	last >= EX ( func ) -> op_array . opcodes		3985459	1					
ANR	3985738	Argument	last >= EX ( func ) -> op_array . opcodes		3985459	0					
ANR	3985739	RelationalExpression	last >= EX ( func ) -> op_array . opcodes		3985459	0		>=			
ANR	3985740	Identifier	last		3985459	0					
ANR	3985741	MemberAccess	EX ( func ) -> op_array . opcodes		3985459	1					
ANR	3985742	PtrMemberAccess	EX ( func ) -> op_array		3985459	0					
ANR	3985743	CallExpression	EX ( func )		3985459	0					
ANR	3985744	Callee	EX		3985459	0					
ANR	3985745	Identifier	EX		3985459	0					
ANR	3985746	ArgumentList	func		3985459	1					
ANR	3985747	Argument	func		3985459	0					
ANR	3985748	Identifier	func		3985459	0					
ANR	3985749	Identifier	op_array		3985459	1					
ANR	3985750	Identifier	opcodes		3985459	1					
ANR	3985751	ExpressionStatement	last --	2583:6:80193:80199	3985459	1	True				
ANR	3985752	PostIncDecOperationExpression	last --		3985459	0					
ANR	3985753	Identifier	last		3985459	0					
ANR	3985754	IncDec	--		3985459	1					
ANR	3985755	IfStatement	if ( last -> opcode == ZEND_ROPE_INIT )		3985459	3					
ANR	3985756	Condition	last -> opcode == ZEND_ROPE_INIT	2585:9:80217:80246	3985459	0	True				
ANR	3985757	EqualityExpression	last -> opcode == ZEND_ROPE_INIT		3985459	0		==			
ANR	3985758	PtrMemberAccess	last -> opcode		3985459	0					
ANR	3985759	Identifier	last		3985459	0					
ANR	3985760	Identifier	opcode		3985459	1					
ANR	3985761	Identifier	ZEND_ROPE_INIT		3985459	1					
ANR	3985762	CompoundStatement		31:41:1244:1244	3985459	1					
ANR	3985763	ExpressionStatement	zend_string_release ( * rope )	2586:6:80257:80283	3985459	0	True				
ANR	3985764	CallExpression	zend_string_release ( * rope )		3985459	0					
ANR	3985765	Callee	zend_string_release		3985459	0					
ANR	3985766	Identifier	zend_string_release		3985459	0					
ANR	3985767	ArgumentList	* rope		3985459	1					
ANR	3985768	Argument	* rope		3985459	0					
ANR	3985769	UnaryOperationExpression	* rope		3985459	0					
ANR	3985770	UnaryOperator	*		3985459	0					
ANR	3985771	Identifier	rope		3985459	1					
ANR	3985772	ElseStatement	else		3985459	0					
ANR	3985773	CompoundStatement		34:6:1300:1328	3985459	0					
ANR	3985774	IdentifierDeclStatement	int j = last -> extended_value ;	2588:6:80305:80333	3985459	0	True				
ANR	3985775	IdentifierDecl	j = last -> extended_value		3985459	0					
ANR	3985776	IdentifierDeclType	int		3985459	0					
ANR	3985777	Identifier	j		3985459	1					
ANR	3985778	AssignmentExpression	j = last -> extended_value		3985459	2		=			
ANR	3985779	Identifier	j		3985459	0					
ANR	3985780	PtrMemberAccess	last -> extended_value		3985459	1					
ANR	3985781	Identifier	last		3985459	0					
ANR	3985782	Identifier	extended_value		3985459	1					
ANR	3985783	DoStatement	do		3985459	1					
ANR	3985784	CompoundStatement		35:9:1339:1339	3985459	0					
ANR	3985785	ExpressionStatement	zend_string_release ( rope [ j ] )	2590:7:80353:80381	3985459	0	True				
ANR	3985786	CallExpression	zend_string_release ( rope [ j ] )		3985459	0					
ANR	3985787	Callee	zend_string_release		3985459	0					
ANR	3985788	Identifier	zend_string_release		3985459	0					
ANR	3985789	ArgumentList	rope [ j ]		3985459	1					
ANR	3985790	Argument	rope [ j ]		3985459	0					
ANR	3985791	ArrayIndexing	rope [ j ]		3985459	0					
ANR	3985792	Identifier	rope		3985459	0					
ANR	3985793	Identifier	j		3985459	1					
ANR	3985794	Condition	j --	2591:15:80398:80400	3985459	1	True				
ANR	3985795	PostIncDecOperationExpression	j --		3985459	0					
ANR	3985796	Identifier	j		3985459	0					
ANR	3985797	IncDec	--		3985459	1					
ANR	3985798	ElseStatement	else		3985459	0					
ANR	3985799	IfStatement	if ( brk_opline -> opcode == ZEND_END_SILENCE )		3985459	0					
ANR	3985800	Condition	brk_opline -> opcode == ZEND_END_SILENCE	2593:15:80426:80463	3985459	0	True				
ANR	3985801	EqualityExpression	brk_opline -> opcode == ZEND_END_SILENCE		3985459	0		==			
ANR	3985802	PtrMemberAccess	brk_opline -> opcode		3985459	0					
ANR	3985803	Identifier	brk_opline		3985459	0					
ANR	3985804	Identifier	opcode		3985459	1					
ANR	3985805	Identifier	ZEND_END_SILENCE		3985459	1					
ANR	3985806	CompoundStatement		39:55:1461:1461	3985459	1					
ANR	3985807	IfStatement	if ( ! EG ( error_reporting ) && Z_LVAL_P ( EX_VAR ( brk_opline -> op1 . var ) ) != 0 )		3985459	0					
ANR	3985808	Condition	! EG ( error_reporting ) && Z_LVAL_P ( EX_VAR ( brk_opline -> op1 . var ) ) != 0	2595:9:80527:80592	3985459	0	True				
ANR	3985809	AndExpression	! EG ( error_reporting ) && Z_LVAL_P ( EX_VAR ( brk_opline -> op1 . var ) ) != 0		3985459	0		&&			
ANR	3985810	UnaryOperationExpression	! EG ( error_reporting )		3985459	0					
ANR	3985811	UnaryOperator	!		3985459	0					
ANR	3985812	CallExpression	EG ( error_reporting )		3985459	1					
ANR	3985813	Callee	EG		3985459	0					
ANR	3985814	Identifier	EG		3985459	0					
ANR	3985815	ArgumentList	error_reporting		3985459	1					
ANR	3985816	Argument	error_reporting		3985459	0					
ANR	3985817	Identifier	error_reporting		3985459	0					
ANR	3985818	EqualityExpression	Z_LVAL_P ( EX_VAR ( brk_opline -> op1 . var ) ) != 0		3985459	1		!=			
ANR	3985819	CallExpression	Z_LVAL_P ( EX_VAR ( brk_opline -> op1 . var ) )		3985459	0					
ANR	3985820	Callee	Z_LVAL_P		3985459	0					
ANR	3985821	Identifier	Z_LVAL_P		3985459	0					
ANR	3985822	ArgumentList	EX_VAR ( brk_opline -> op1 . var )		3985459	1					
ANR	3985823	Argument	EX_VAR ( brk_opline -> op1 . var )		3985459	0					
ANR	3985824	CallExpression	EX_VAR ( brk_opline -> op1 . var )		3985459	0					
ANR	3985825	Callee	EX_VAR		3985459	0					
ANR	3985826	Identifier	EX_VAR		3985459	0					
ANR	3985827	ArgumentList	brk_opline -> op1 . var		3985459	1					
ANR	3985828	Argument	brk_opline -> op1 . var		3985459	0					
ANR	3985829	MemberAccess	brk_opline -> op1 . var		3985459	0					
ANR	3985830	PtrMemberAccess	brk_opline -> op1		3985459	0					
ANR	3985831	Identifier	brk_opline		3985459	0					
ANR	3985832	Identifier	op1		3985459	1					
ANR	3985833	Identifier	var		3985459	1					
ANR	3985834	PrimaryExpression	0		3985459	1					
ANR	3985835	CompoundStatement		41:77:1590:1590	3985459	1					
ANR	3985836	ExpressionStatement	EG ( error_reporting ) = Z_LVAL_P ( EX_VAR ( brk_opline -> op1 . var ) )	2596:6:80603:80662	3985459	0	True				
ANR	3985837	AssignmentExpression	EG ( error_reporting ) = Z_LVAL_P ( EX_VAR ( brk_opline -> op1 . var ) )		3985459	0		=			
ANR	3985838	CallExpression	EG ( error_reporting )		3985459	0					
ANR	3985839	Callee	EG		3985459	0					
ANR	3985840	Identifier	EG		3985459	0					
ANR	3985841	ArgumentList	error_reporting		3985459	1					
ANR	3985842	Argument	error_reporting		3985459	0					
ANR	3985843	Identifier	error_reporting		3985459	0					
ANR	3985844	CallExpression	Z_LVAL_P ( EX_VAR ( brk_opline -> op1 . var ) )		3985459	1					
ANR	3985845	Callee	Z_LVAL_P		3985459	0					
ANR	3985846	Identifier	Z_LVAL_P		3985459	0					
ANR	3985847	ArgumentList	EX_VAR ( brk_opline -> op1 . var )		3985459	1					
ANR	3985848	Argument	EX_VAR ( brk_opline -> op1 . var )		3985459	0					
ANR	3985849	CallExpression	EX_VAR ( brk_opline -> op1 . var )		3985459	0					
ANR	3985850	Callee	EX_VAR		3985459	0					
ANR	3985851	Identifier	EX_VAR		3985459	0					
ANR	3985852	ArgumentList	brk_opline -> op1 . var		3985459	1					
ANR	3985853	Argument	brk_opline -> op1 . var		3985459	0					
ANR	3985854	MemberAccess	brk_opline -> op1 . var		3985459	0					
ANR	3985855	PtrMemberAccess	brk_opline -> op1		3985459	0					
ANR	3985856	Identifier	brk_opline		3985459	0					
ANR	3985857	Identifier	op1		3985459	1					
ANR	3985858	Identifier	var		3985459	1					
ANR	3985859	ReturnType	static void		3985459	1					
ANR	3985860	Identifier	cleanup_live_vars		3985459	2					
ANR	3985861	ParameterList	"zend_execute_data * execute_data , uint32_t op_num , uint32_t catch_op_num"		3985459	3					
ANR	3985862	Parameter	zend_execute_data * execute_data	2554:30:78921:78951	3985459	0	True				
ANR	3985863	ParameterType	zend_execute_data *		3985459	0					
ANR	3985864	Identifier	execute_data		3985459	1					
ANR	3985865	Parameter	uint32_t op_num	2554:63:78954:78968	3985459	1	True				
ANR	3985866	ParameterType	uint32_t		3985459	0					
ANR	3985867	Identifier	op_num		3985459	1					
ANR	3985868	Parameter	uint32_t catch_op_num	2554:80:78971:78991	3985459	2	True				
ANR	3985869	ParameterType	uint32_t		3985459	0					
ANR	3985870	Identifier	catch_op_num		3985459	1					
ANR	3985871	CFGEntryNode	ENTRY		3985459		True				
ANR	3985872	CFGExitNode	EXIT		3985459		True				
ANR	3985873	Symbol	brk_cont -> brk		3985459						
ANR	3985874	Symbol	ZEND_FREE		3985459						
ANR	3985875	Symbol	rope		3985459						
ANR	3985876	Symbol	* brk_opline		3985459						
ANR	3985877	Symbol	ZEND_FE_FREE		3985459						
ANR	3985878	Symbol	error_reporting		3985459						
ANR	3985879	Symbol	* rope		3985459						
ANR	3985880	Symbol	brk_opline -> opcode		3985459						
ANR	3985881	Symbol	execute_data		3985459						
ANR	3985882	Symbol	EX ( func ) -> op_array . opcodes		3985459						
ANR	3985883	Symbol	brk_opline		3985459						
ANR	3985884	Symbol	EX ( func ) -> op_array . last_brk_cont		3985459						
ANR	3985885	Symbol	Z_FE_ITER_P		3985459						
ANR	3985886	Symbol	IS_ARRAY		3985459						
ANR	3985887	Symbol	EX ( func ) -> op_array . brk_cont_array		3985459						
ANR	3985888	Symbol	last -> result		3985459						
ANR	3985889	Symbol	ZEND_END_SILENCE		3985459						
ANR	3985890	Symbol	* brk_cont		3985459						
ANR	3985891	Symbol	ZEND_ROPE_ADD		3985459						
ANR	3985892	Symbol	EG		3985459						
ANR	3985893	Symbol	brk_opline -> op1		3985459						
ANR	3985894	Symbol	last		3985459						
ANR	3985895	Symbol	var		3985459						
ANR	3985896	Symbol	catch_op_num		3985459						
ANR	3985897	Symbol	op_num		3985459						
ANR	3985898	Symbol	i		3985459						
ANR	3985899	Symbol	j		3985459						
ANR	3985900	Symbol	Z_TYPE_P		3985459						
ANR	3985901	Symbol	last -> result . var		3985459						
ANR	3985902	Symbol	* last		3985459						
ANR	3985903	Symbol	last -> extended_value		3985459						
ANR	3985904	Symbol	brk_cont		3985459						
ANR	3985905	Symbol	Z_LVAL_P		3985459						
ANR	3985906	Symbol	EX ( func ) -> op_array		3985459						
ANR	3985907	Symbol	EX		3985459						
ANR	3985908	Symbol	func		3985459						
ANR	3985909	Symbol	* j		3985459						
ANR	3985910	Symbol	brk_cont -> start		3985459						
ANR	3985911	Symbol	EX_VAR		3985459						
ANR	3985912	Symbol	* EX		3985459						
ANR	3985913	Symbol	brk_opline -> op1 . var		3985459						
ANR	3985914	Symbol	ZEND_ROPE_END		3985459						
ANR	3985915	Symbol	last -> opcode		3985459						
ANR	3985916	Symbol	ZEND_ROPE_INIT		3985459						
ANR	3985917	Function	zend_cleanup_unfinished_execution	2605:0:80702:80921							
ANR	3985918	FunctionDef	"zend_cleanup_unfinished_execution (zend_execute_data * execute_data , uint32_t op_num , uint32_t catch_op_num)"		3985917	0					
ANR	3985919	CompoundStatement		2605:112:80814:80921	3985917	0					
ANR	3985920	ExpressionStatement	"cleanup_unfinished_calls ( execute_data , op_num )"	2606:1:80817:80863	3985917	0	True				
ANR	3985921	CallExpression	"cleanup_unfinished_calls ( execute_data , op_num )"		3985917	0					
ANR	3985922	Callee	cleanup_unfinished_calls		3985917	0					
ANR	3985923	Identifier	cleanup_unfinished_calls		3985917	0					
ANR	3985924	ArgumentList	execute_data		3985917	1					
ANR	3985925	Argument	execute_data		3985917	0					
ANR	3985926	Identifier	execute_data		3985917	0					
ANR	3985927	Argument	op_num		3985917	1					
ANR	3985928	Identifier	op_num		3985917	0					
ANR	3985929	ExpressionStatement	"cleanup_live_vars ( execute_data , op_num , catch_op_num )"	2607:1:80866:80919	3985917	1	True				
ANR	3985930	CallExpression	"cleanup_live_vars ( execute_data , op_num , catch_op_num )"		3985917	0					
ANR	3985931	Callee	cleanup_live_vars		3985917	0					
ANR	3985932	Identifier	cleanup_live_vars		3985917	0					
ANR	3985933	ArgumentList	execute_data		3985917	1					
ANR	3985934	Argument	execute_data		3985917	0					
ANR	3985935	Identifier	execute_data		3985917	0					
ANR	3985936	Argument	op_num		3985917	1					
ANR	3985937	Identifier	op_num		3985917	0					
ANR	3985938	Argument	catch_op_num		3985917	2					
ANR	3985939	Identifier	catch_op_num		3985917	0					
ANR	3985940	ReturnType	void		3985917	1					
ANR	3985941	Identifier	zend_cleanup_unfinished_execution		3985917	2					
ANR	3985942	ParameterList	"zend_execute_data * execute_data , uint32_t op_num , uint32_t catch_op_num"		3985917	3					
ANR	3985943	Parameter	zend_execute_data * execute_data	2605:39:80741:80771	3985917	0	True				
ANR	3985944	ParameterType	zend_execute_data *		3985917	0					
ANR	3985945	Identifier	execute_data		3985917	1					
ANR	3985946	Parameter	uint32_t op_num	2605:72:80774:80788	3985917	1	True				
ANR	3985947	ParameterType	uint32_t		3985917	0					
ANR	3985948	Identifier	op_num		3985917	1					
ANR	3985949	Parameter	uint32_t catch_op_num	2605:89:80791:80811	3985917	2	True				
ANR	3985950	ParameterType	uint32_t		3985917	0					
ANR	3985951	Identifier	catch_op_num		3985917	1					
ANR	3985952	CFGEntryNode	ENTRY		3985917		True				
ANR	3985953	CFGExitNode	EXIT		3985917		True				
ANR	3985954	Symbol	catch_op_num		3985917						
ANR	3985955	Symbol	op_num		3985917						
ANR	3985956	Symbol	execute_data		3985917						
ANR	3985957	DeclStmt									
ANR	3985958	Decl							int	int	__result
ANR	3985959	Function	zend_set_user_opcode_handler	2714:0:83717:84097							
ANR	3985960	FunctionDef	"zend_set_user_opcode_handler (zend_uchar opcode , user_opcode_handler_t handler)"		3985959	0					
ANR	3985961	CompoundStatement		2715:0:83809:84097	3985959	0					
ANR	3985962	IfStatement	if ( opcode != ZEND_USER_OPCODE )		3985959	0					
ANR	3985963	Condition	opcode != ZEND_USER_OPCODE	2716:5:83816:83841	3985959	0	True				
ANR	3985964	EqualityExpression	opcode != ZEND_USER_OPCODE		3985959	0		!=			
ANR	3985965	Identifier	opcode		3985959	0					
ANR	3985966	Identifier	ZEND_USER_OPCODE		3985959	1					
ANR	3985967	CompoundStatement		2:33:34:34	3985959	1					
ANR	3985968	IfStatement	if ( handler == NULL )		3985959	0					
ANR	3985969	Condition	handler == NULL	2717:6:83852:83866	3985959	0	True				
ANR	3985970	EqualityExpression	handler == NULL		3985959	0		==			
ANR	3985971	Identifier	handler		3985959	0					
ANR	3985972	Identifier	NULL		3985959	1					
ANR	3985973	CompoundStatement		3:23:59:59	3985959	1					
ANR	3985974	ExpressionStatement	zend_user_opcodes [ opcode ] = opcode	2719:3:83912:83946	3985959	0	True				
ANR	3985975	AssignmentExpression	zend_user_opcodes [ opcode ] = opcode		3985959	0		=			
ANR	3985976	ArrayIndexing	zend_user_opcodes [ opcode ]		3985959	0					
ANR	3985977	Identifier	zend_user_opcodes		3985959	0					
ANR	3985978	Identifier	opcode		3985959	1					
ANR	3985979	Identifier	opcode		3985959	1					
ANR	3985980	ElseStatement	else		3985959	0					
ANR	3985981	CompoundStatement		6:9:147:147	3985959	0					
ANR	3985982	ExpressionStatement	zend_user_opcodes [ opcode ] = ZEND_USER_OPCODE	2721:3:83962:84006	3985959	0	True				
ANR	3985983	AssignmentExpression	zend_user_opcodes [ opcode ] = ZEND_USER_OPCODE		3985959	0		=			
ANR	3985984	ArrayIndexing	zend_user_opcodes [ opcode ]		3985959	0					
ANR	3985985	Identifier	zend_user_opcodes		3985959	0					
ANR	3985986	Identifier	opcode		3985959	1					
ANR	3985987	Identifier	ZEND_USER_OPCODE		3985959	1					
ANR	3985988	ExpressionStatement	zend_user_opcode_handlers [ opcode ] = handler	2723:2:84014:84057	3985959	1	True				
ANR	3985989	AssignmentExpression	zend_user_opcode_handlers [ opcode ] = handler		3985959	0		=			
ANR	3985990	ArrayIndexing	zend_user_opcode_handlers [ opcode ]		3985959	0					
ANR	3985991	Identifier	zend_user_opcode_handlers		3985959	0					
ANR	3985992	Identifier	opcode		3985959	1					
ANR	3985993	Identifier	handler		3985959	1					
ANR	3985994	ReturnStatement	return SUCCESS ;	2724:2:84061:84075	3985959	2	True				
ANR	3985995	Identifier	SUCCESS		3985959	0					
ANR	3985996	ReturnStatement	return FAILURE ;	2726:1:84081:84095	3985959	1	True				
ANR	3985997	Identifier	FAILURE		3985959	0					
ANR	3985998	ReturnType	ZEND_API int		3985959	1					
ANR	3985999	Identifier	zend_set_user_opcode_handler		3985959	2					
ANR	3986000	ParameterList	"zend_uchar opcode , user_opcode_handler_t handler"		3985959	3					
ANR	3986001	Parameter	zend_uchar opcode	2714:42:83759:83775	3985959	0	True				
ANR	3986002	ParameterType	zend_uchar		3985959	0					
ANR	3986003	Identifier	opcode		3985959	1					
ANR	3986004	Parameter	user_opcode_handler_t handler	2714:61:83778:83806	3985959	1	True				
ANR	3986005	ParameterType	user_opcode_handler_t		3985959	0					
ANR	3986006	Identifier	handler		3985959	1					
ANR	3986007	CFGEntryNode	ENTRY		3985959		True				
ANR	3986008	CFGExitNode	EXIT		3985959		True				
ANR	3986009	Symbol	handler		3985959						
ANR	3986010	Symbol	NULL		3985959						
ANR	3986011	Symbol	SUCCESS		3985959						
ANR	3986012	Symbol	ZEND_USER_OPCODE		3985959						
ANR	3986013	Symbol	* zend_user_opcodes		3985959						
ANR	3986014	Symbol	opcode		3985959						
ANR	3986015	Symbol	zend_user_opcodes		3985959						
ANR	3986016	Symbol	zend_user_opcode_handlers		3985959						
ANR	3986017	Symbol	FAILURE		3985959						
ANR	3986018	Symbol	* zend_user_opcode_handlers		3985959						
ANR	3986019	Symbol	* opcode		3985959						
ANR	3986020	Function	zend_get_user_opcode_handler	2729:0:84100:84224							
ANR	3986021	FunctionDef	zend_get_user_opcode_handler (zend_uchar opcode)		3986020	0					
ANR	3986022	CompoundStatement		2730:0:84179:84224	3986020	0					
ANR	3986023	ReturnStatement	return zend_user_opcode_handlers [ opcode ] ;	2731:1:84182:84222	3986020	0	True				
ANR	3986024	ArrayIndexing	zend_user_opcode_handlers [ opcode ]		3986020	0					
ANR	3986025	Identifier	zend_user_opcode_handlers		3986020	0					
ANR	3986026	Identifier	opcode		3986020	1					
ANR	3986027	ReturnType	ZEND_API user_opcode_handler_t		3986020	1					
ANR	3986028	Identifier	zend_get_user_opcode_handler		3986020	2					
ANR	3986029	ParameterList	zend_uchar opcode		3986020	3					
ANR	3986030	Parameter	zend_uchar opcode	2729:60:84160:84176	3986020	0	True				
ANR	3986031	ParameterType	zend_uchar		3986020	0					
ANR	3986032	Identifier	opcode		3986020	1					
ANR	3986033	CFGEntryNode	ENTRY		3986020		True				
ANR	3986034	CFGExitNode	EXIT		3986020		True				
ANR	3986035	Symbol	opcode		3986020						
ANR	3986036	Symbol	zend_user_opcode_handlers		3986020						
ANR	3986037	Symbol	* zend_user_opcode_handlers		3986020						
ANR	3986038	Symbol	* opcode		3986020						
ANR	3986039	Function	zend_get_zval_ptr	2734:0:84227:84444							
ANR	3986040	FunctionDef	"zend_get_zval_ptr (int op_type , const znode_op * node , const zend_execute_data * execute_data , zend_free_op * should_free , int type)"		3986039	0					
ANR	3986041	CompoundStatement		2735:0:84371:84444	3986039	0					
ANR	3986042	ReturnStatement	"return get_zval_ptr ( op_type , * node , execute_data , should_free , type ) ;"	2736:1:84374:84442	3986039	0	True				
ANR	3986043	CallExpression	"get_zval_ptr ( op_type , * node , execute_data , should_free , type )"		3986039	0					
ANR	3986044	Callee	get_zval_ptr		3986039	0					
ANR	3986045	Identifier	get_zval_ptr		3986039	0					
ANR	3986046	ArgumentList	op_type		3986039	1					
ANR	3986047	Argument	op_type		3986039	0					
ANR	3986048	Identifier	op_type		3986039	0					
ANR	3986049	Argument	* node		3986039	1					
ANR	3986050	UnaryOperationExpression	* node		3986039	0					
ANR	3986051	UnaryOperator	*		3986039	0					
ANR	3986052	Identifier	node		3986039	1					
ANR	3986053	Argument	execute_data		3986039	2					
ANR	3986054	Identifier	execute_data		3986039	0					
ANR	3986055	Argument	should_free		3986039	3					
ANR	3986056	Identifier	should_free		3986039	0					
ANR	3986057	Argument	type		3986039	4					
ANR	3986058	Identifier	type		3986039	0					
ANR	3986059	ReturnType	ZEND_API zval *		3986039	1					
ANR	3986060	Identifier	zend_get_zval_ptr		3986039	2					
ANR	3986061	ParameterList	"int op_type , const znode_op * node , const zend_execute_data * execute_data , zend_free_op * should_free , int type"		3986039	3					
ANR	3986062	Parameter	int op_type	2734:33:84260:84270	3986039	0	True				
ANR	3986063	ParameterType	int		3986039	0					
ANR	3986064	Identifier	op_type		3986039	1					
ANR	3986065	Parameter	const znode_op * node	2734:46:84273:84292	3986039	1	True				
ANR	3986066	ParameterType	const znode_op *		3986039	0					
ANR	3986067	Identifier	node		3986039	1					
ANR	3986068	Parameter	const zend_execute_data * execute_data	2734:68:84295:84331	3986039	2	True				
ANR	3986069	ParameterType	const zend_execute_data *		3986039	0					
ANR	3986070	Identifier	execute_data		3986039	1					
ANR	3986071	Parameter	zend_free_op * should_free	2734:107:84334:84358	3986039	3	True				
ANR	3986072	ParameterType	zend_free_op *		3986039	0					
ANR	3986073	Identifier	should_free		3986039	1					
ANR	3986074	Parameter	int type	2734:134:84361:84368	3986039	4	True				
ANR	3986075	ParameterType	int		3986039	0					
ANR	3986076	Identifier	type		3986039	1					
ANR	3986077	CFGEntryNode	ENTRY		3986039		True				
ANR	3986078	CFGExitNode	EXIT		3986039		True				
ANR	3986079	Symbol	should_free		3986039						
ANR	3986080	Symbol	node		3986039						
ANR	3986081	Symbol	* node		3986039						
ANR	3986082	Symbol	op_type		3986039						
ANR	3986083	Symbol	get_zval_ptr		3986039						
ANR	3986084	Symbol	type		3986039						
ANR	3986085	Symbol	execute_data		3986039						
ANR	3986086	Function	zend_check_internal_arg_type	2739:0:84447:84604							
ANR	3986087	FunctionDef	"zend_check_internal_arg_type (zend_function * zf , uint32_t arg_num , zval * arg)"		3986086	0					
ANR	3986088	CompoundStatement		2740:0:84552:84604	3986086	0					
ANR	3986089	ExpressionStatement	"zend_verify_internal_arg_type ( zf , arg_num , arg )"	2741:1:84555:84602	3986086	0	True				
ANR	3986090	CallExpression	"zend_verify_internal_arg_type ( zf , arg_num , arg )"		3986086	0					
ANR	3986091	Callee	zend_verify_internal_arg_type		3986086	0					
ANR	3986092	Identifier	zend_verify_internal_arg_type		3986086	0					
ANR	3986093	ArgumentList	zf		3986086	1					
ANR	3986094	Argument	zf		3986086	0					
ANR	3986095	Identifier	zf		3986086	0					
ANR	3986096	Argument	arg_num		3986086	1					
ANR	3986097	Identifier	arg_num		3986086	0					
ANR	3986098	Argument	arg		3986086	2					
ANR	3986099	Identifier	arg		3986086	0					
ANR	3986100	ReturnType	ZEND_API void ZEND_FASTCALL		3986086	1					
ANR	3986101	Identifier	zend_check_internal_arg_type		3986086	2					
ANR	3986102	ParameterList	"zend_function * zf , uint32_t arg_num , zval * arg"		3986086	3					
ANR	3986103	Parameter	zend_function * zf	2739:57:84504:84520	3986086	0	True				
ANR	3986104	ParameterType	zend_function *		3986086	0					
ANR	3986105	Identifier	zf		3986086	1					
ANR	3986106	Parameter	uint32_t arg_num	2739:76:84523:84538	3986086	1	True				
ANR	3986107	ParameterType	uint32_t		3986086	0					
ANR	3986108	Identifier	arg_num		3986086	1					
ANR	3986109	Parameter	zval * arg	2739:94:84541:84549	3986086	2	True				
ANR	3986110	ParameterType	zval *		3986086	0					
ANR	3986111	Identifier	arg		3986086	1					
ANR	3986112	CFGEntryNode	ENTRY		3986086		True				
ANR	3986113	CFGExitNode	EXIT		3986086		True				
ANR	3986114	Symbol	arg_num		3986086						
ANR	3986115	Symbol	arg		3986086						
ANR	3986116	Symbol	zf		3986086						
ANR	3986117	Function	zend_check_arg_type	2744:0:84607:84819							
ANR	3986118	FunctionDef	"zend_check_arg_type (zend_function * zf , uint32_t arg_num , zval * arg , zval * default_value , void * * cache_slot)"		3986117	0					
ANR	3986119	CompoundStatement		2745:0:84742:84819	3986117	0					
ANR	3986120	ReturnStatement	"return zend_verify_arg_type ( zf , arg_num , arg , default_value , cache_slot ) ;"	2746:1:84745:84817	3986117	0	True				
ANR	3986121	CallExpression	"zend_verify_arg_type ( zf , arg_num , arg , default_value , cache_slot )"		3986117	0					
ANR	3986122	Callee	zend_verify_arg_type		3986117	0					
ANR	3986123	Identifier	zend_verify_arg_type		3986117	0					
ANR	3986124	ArgumentList	zf		3986117	1					
ANR	3986125	Argument	zf		3986117	0					
ANR	3986126	Identifier	zf		3986117	0					
ANR	3986127	Argument	arg_num		3986117	1					
ANR	3986128	Identifier	arg_num		3986117	0					
ANR	3986129	Argument	arg		3986117	2					
ANR	3986130	Identifier	arg		3986117	0					
ANR	3986131	Argument	default_value		3986117	3					
ANR	3986132	Identifier	default_value		3986117	0					
ANR	3986133	Argument	cache_slot		3986117	4					
ANR	3986134	Identifier	cache_slot		3986117	0					
ANR	3986135	ReturnType	ZEND_API int ZEND_FASTCALL		3986117	1					
ANR	3986136	Identifier	zend_check_arg_type		3986117	2					
ANR	3986137	ParameterList	"zend_function * zf , uint32_t arg_num , zval * arg , zval * default_value , void * * cache_slot"		3986117	3					
ANR	3986138	Parameter	zend_function * zf	2744:47:84654:84670	3986117	0	True				
ANR	3986139	ParameterType	zend_function *		3986117	0					
ANR	3986140	Identifier	zf		3986117	1					
ANR	3986141	Parameter	uint32_t arg_num	2744:66:84673:84688	3986117	1	True				
ANR	3986142	ParameterType	uint32_t		3986117	0					
ANR	3986143	Identifier	arg_num		3986117	1					
ANR	3986144	Parameter	zval * arg	2744:84:84691:84699	3986117	2	True				
ANR	3986145	ParameterType	zval *		3986117	0					
ANR	3986146	Identifier	arg		3986117	1					
ANR	3986147	Parameter	zval * default_value	2744:95:84702:84720	3986117	3	True				
ANR	3986148	ParameterType	zval *		3986117	0					
ANR	3986149	Identifier	default_value		3986117	1					
ANR	3986150	Parameter	void * * cache_slot	2744:116:84723:84739	3986117	4	True				
ANR	3986151	ParameterType	void * *		3986117	0					
ANR	3986152	Identifier	cache_slot		3986117	1					
ANR	3986153	CFGEntryNode	ENTRY		3986117		True				
ANR	3986154	CFGExitNode	EXIT		3986117		True				
ANR	3986155	Symbol	arg_num		3986117						
ANR	3986156	Symbol	cache_slot		3986117						
ANR	3986157	Symbol	arg		3986117						
ANR	3986158	Symbol	default_value		3986117						
ANR	3986159	Symbol	zf		3986117						
ANR	3986160	Symbol	zend_verify_arg_type		3986117						
ANR	3986161	Function	zend_check_missing_arg	2749:0:84822:85006							
ANR	3986162	FunctionDef	"zend_check_missing_arg (zend_execute_data * execute_data , uint32_t arg_num , void * * cache_slot)"		3986161	0					
ANR	3986163	CompoundStatement		2750:0:84943:85006	3986161	0					
ANR	3986164	ExpressionStatement	"zend_verify_missing_arg ( execute_data , arg_num , cache_slot )"	2751:1:84946:85004	3986161	0	True				
ANR	3986165	CallExpression	"zend_verify_missing_arg ( execute_data , arg_num , cache_slot )"		3986161	0					
ANR	3986166	Callee	zend_verify_missing_arg		3986161	0					
ANR	3986167	Identifier	zend_verify_missing_arg		3986161	0					
ANR	3986168	ArgumentList	execute_data		3986161	1					
ANR	3986169	Argument	execute_data		3986161	0					
ANR	3986170	Identifier	execute_data		3986161	0					
ANR	3986171	Argument	arg_num		3986161	1					
ANR	3986172	Identifier	arg_num		3986161	0					
ANR	3986173	Argument	cache_slot		3986161	2					
ANR	3986174	Identifier	cache_slot		3986161	0					
ANR	3986175	ReturnType	ZEND_API void ZEND_FASTCALL		3986161	1					
ANR	3986176	Identifier	zend_check_missing_arg		3986161	2					
ANR	3986177	ParameterList	"zend_execute_data * execute_data , uint32_t arg_num , void * * cache_slot"		3986161	3					
ANR	3986178	Parameter	zend_execute_data * execute_data	2749:51:84873:84903	3986161	0	True				
ANR	3986179	ParameterType	zend_execute_data *		3986161	0					
ANR	3986180	Identifier	execute_data		3986161	1					
ANR	3986181	Parameter	uint32_t arg_num	2749:84:84906:84921	3986161	1	True				
ANR	3986182	ParameterType	uint32_t		3986161	0					
ANR	3986183	Identifier	arg_num		3986161	1					
ANR	3986184	Parameter	void * * cache_slot	2749:102:84924:84940	3986161	2	True				
ANR	3986185	ParameterType	void * *		3986161	0					
ANR	3986186	Identifier	cache_slot		3986161	1					
ANR	3986187	CFGEntryNode	ENTRY		3986161		True				
ANR	3986188	CFGExitNode	EXIT		3986161		True				
ANR	3986189	Symbol	arg_num		3986161						
ANR	3986190	Symbol	cache_slot		3986161						
ANR	3986191	Symbol	execute_data		3986161						
