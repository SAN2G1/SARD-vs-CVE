command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	907144	File	data/converged/CVE-2015-8617_php-src/ext_gd_libgd_mathmake.c								
ANR	907145	DeclStmt									
ANR	907146	Decl							int	int [ 91 ]	basis
ANR	907147	DeclStmt									
ANR	907148	Decl							int	int [ 360 ]	cost
ANR	907149	Function	main	9:0:89:1008							
ANR	907150	FunctionDef	main ()		907149	0					
ANR	907151	CompoundStatement		10:0:101:1008	907149	0					
ANR	907152	IdentifierDeclStatement	int i ;	11:2:105:110	907149	0	True				
ANR	907153	IdentifierDecl	i		907149	0					
ANR	907154	IdentifierDeclType	int		907149	0					
ANR	907155	Identifier	i		907149	1					
ANR	907156	ExpressionStatement	"printf ( ""#define costScale %d\\n"" , scale )"	12:2:114:154	907149	1	True				
ANR	907157	CallExpression	"printf ( ""#define costScale %d\\n"" , scale )"		907149	0					
ANR	907158	Callee	printf		907149	0					
ANR	907159	Identifier	printf		907149	0					
ANR	907160	ArgumentList	"""#define costScale %d\\n"""		907149	1					
ANR	907161	Argument	"""#define costScale %d\\n"""		907149	0					
ANR	907162	PrimaryExpression	"""#define costScale %d\\n"""		907149	0					
ANR	907163	Argument	scale		907149	1					
ANR	907164	Identifier	scale		907149	0					
ANR	907165	ExpressionStatement	"printf ( ""int cost[] = {\\n  "" )"	13:2:158:187	907149	2	True				
ANR	907166	CallExpression	"printf ( ""int cost[] = {\\n  "" )"		907149	0					
ANR	907167	Callee	printf		907149	0					
ANR	907168	Identifier	printf		907149	0					
ANR	907169	ArgumentList	"""int cost[] = {\\n  """		907149	1					
ANR	907170	Argument	"""int cost[] = {\\n  """		907149	0					
ANR	907171	PrimaryExpression	"""int cost[] = {\\n  """		907149	0					
ANR	907172	ForStatement	for ( i = 0 ; ( i <= 90 ) ; i ++ )		907149	3					
ANR	907173	ForInit	i = 0 ;	14:7:196:201	907149	0	True				
ANR	907174	AssignmentExpression	i = 0		907149	0		=			
ANR	907175	Identifier	i		907149	0					
ANR	907176	PrimaryExpression	0		907149	1					
ANR	907177	Condition	i <= 90	14:14:203:211	907149	1	True				
ANR	907178	RelationalExpression	i <= 90		907149	0		<=			
ANR	907179	Identifier	i		907149	0					
ANR	907180	PrimaryExpression	90		907149	1					
ANR	907181	PostIncDecOperationExpression	i ++	14:25:214:216	907149	2	True				
ANR	907182	Identifier	i		907149	0					
ANR	907183	IncDec	++		907149	1					
ANR	907184	CompoundStatement		6:4:121:121	907149	3					
ANR	907185	ExpressionStatement	basis [ i ] = cos ( ( double ) i * .0174532925 ) * scale	16:6:231:280	907149	0	True				
ANR	907186	AssignmentExpression	basis [ i ] = cos ( ( double ) i * .0174532925 ) * scale		907149	0		=			
ANR	907187	ArrayIndexing	basis [ i ]		907149	0					
ANR	907188	Identifier	basis		907149	0					
ANR	907189	Identifier	i		907149	1					
ANR	907190	MultiplicativeExpression	cos ( ( double ) i * .0174532925 ) * scale		907149	1		*			
ANR	907191	CallExpression	cos ( ( double ) i * .0174532925 )		907149	0					
ANR	907192	Callee	cos		907149	0					
ANR	907193	Identifier	cos		907149	0					
ANR	907194	ArgumentList	( double ) i * .0174532925		907149	1					
ANR	907195	Argument	( double ) i * .0174532925		907149	0					
ANR	907196	MultiplicativeExpression	( double ) i * .0174532925		907149	0		*			
ANR	907197	CastExpression	( double ) i		907149	0					
ANR	907198	CastTarget	double		907149	0					
ANR	907199	Identifier	i		907149	1					
ANR	907200	PrimaryExpression	.0174532925		907149	1					
ANR	907201	Identifier	scale		907149	1					
ANR	907202	ForStatement	for ( i = 0 ; ( i < 90 ) ; i ++ )		907149	4					
ANR	907203	ForInit	i = 0 ;	18:7:295:300	907149	0	True				
ANR	907204	AssignmentExpression	i = 0		907149	0		=			
ANR	907205	Identifier	i		907149	0					
ANR	907206	PrimaryExpression	0		907149	1					
ANR	907207	Condition	i < 90	18:14:302:309	907149	1	True				
ANR	907208	RelationalExpression	i < 90		907149	0		<			
ANR	907209	Identifier	i		907149	0					
ANR	907210	PrimaryExpression	90		907149	1					
ANR	907211	PostIncDecOperationExpression	i ++	18:24:312:314	907149	2	True				
ANR	907212	Identifier	i		907149	0					
ANR	907213	IncDec	++		907149	1					
ANR	907214	CompoundStatement		10:4:219:219	907149	3					
ANR	907215	ExpressionStatement	"printf ( ""%d,\\n  "" , cost [ i ] = basis [ i ] )"	20:6:329:367	907149	0	True				
ANR	907216	CallExpression	"printf ( ""%d,\\n  "" , cost [ i ] = basis [ i ] )"		907149	0					
ANR	907217	Callee	printf		907149	0					
ANR	907218	Identifier	printf		907149	0					
ANR	907219	ArgumentList	"""%d,\\n  """		907149	1					
ANR	907220	Argument	"""%d,\\n  """		907149	0					
ANR	907221	PrimaryExpression	"""%d,\\n  """		907149	0					
ANR	907222	Argument	cost [ i ] = basis [ i ]		907149	1					
ANR	907223	AssignmentExpression	cost [ i ] = basis [ i ]		907149	0		=			
ANR	907224	ArrayIndexing	cost [ i ]		907149	0					
ANR	907225	Identifier	cost		907149	0					
ANR	907226	Identifier	i		907149	1					
ANR	907227	ArrayIndexing	basis [ i ]		907149	1					
ANR	907228	Identifier	basis		907149	0					
ANR	907229	Identifier	i		907149	1					
ANR	907230	ForStatement	for ( i = 90 ; ( i < 180 ) ; i ++ )		907149	5					
ANR	907231	ForInit	i = 90 ;	22:7:382:388	907149	0	True				
ANR	907232	AssignmentExpression	i = 90		907149	0		=			
ANR	907233	Identifier	i		907149	0					
ANR	907234	PrimaryExpression	90		907149	1					
ANR	907235	Condition	i < 180	22:15:390:398	907149	1	True				
ANR	907236	RelationalExpression	i < 180		907149	0		<			
ANR	907237	Identifier	i		907149	0					
ANR	907238	PrimaryExpression	180		907149	1					
ANR	907239	PostIncDecOperationExpression	i ++	22:26:401:403	907149	2	True				
ANR	907240	Identifier	i		907149	0					
ANR	907241	IncDec	++		907149	1					
ANR	907242	CompoundStatement		14:4:308:308	907149	3					
ANR	907243	ExpressionStatement	"printf ( ""%d,\\n  "" , cost [ i ] = - basis [ 180 - i ] )"	24:6:418:463	907149	0	True				
ANR	907244	CallExpression	"printf ( ""%d,\\n  "" , cost [ i ] = - basis [ 180 - i ] )"		907149	0					
ANR	907245	Callee	printf		907149	0					
ANR	907246	Identifier	printf		907149	0					
ANR	907247	ArgumentList	"""%d,\\n  """		907149	1					
ANR	907248	Argument	"""%d,\\n  """		907149	0					
ANR	907249	PrimaryExpression	"""%d,\\n  """		907149	0					
ANR	907250	Argument	cost [ i ] = - basis [ 180 - i ]		907149	1					
ANR	907251	AssignmentExpression	cost [ i ] = - basis [ 180 - i ]		907149	0		=			
ANR	907252	ArrayIndexing	cost [ i ]		907149	0					
ANR	907253	Identifier	cost		907149	0					
ANR	907254	Identifier	i		907149	1					
ANR	907255	UnaryOperationExpression	- basis [ 180 - i ]		907149	1					
ANR	907256	UnaryOperator	-		907149	0					
ANR	907257	ArrayIndexing	basis [ 180 - i ]		907149	1					
ANR	907258	Identifier	basis		907149	0					
ANR	907259	AdditiveExpression	180 - i		907149	1		-			
ANR	907260	PrimaryExpression	180		907149	0					
ANR	907261	Identifier	i		907149	1					
ANR	907262	ForStatement	for ( i = 180 ; ( i < 270 ) ; i ++ )		907149	6					
ANR	907263	ForInit	i = 180 ;	26:7:478:485	907149	0	True				
ANR	907264	AssignmentExpression	i = 180		907149	0		=			
ANR	907265	Identifier	i		907149	0					
ANR	907266	PrimaryExpression	180		907149	1					
ANR	907267	Condition	i < 270	26:16:487:495	907149	1	True				
ANR	907268	RelationalExpression	i < 270		907149	0		<			
ANR	907269	Identifier	i		907149	0					
ANR	907270	PrimaryExpression	270		907149	1					
ANR	907271	PostIncDecOperationExpression	i ++	26:27:498:500	907149	2	True				
ANR	907272	Identifier	i		907149	0					
ANR	907273	IncDec	++		907149	1					
ANR	907274	CompoundStatement		18:4:405:405	907149	3					
ANR	907275	ExpressionStatement	"printf ( ""%d,\\n  "" , cost [ i ] = - basis [ i - 180 ] )"	28:6:515:560	907149	0	True				
ANR	907276	CallExpression	"printf ( ""%d,\\n  "" , cost [ i ] = - basis [ i - 180 ] )"		907149	0					
ANR	907277	Callee	printf		907149	0					
ANR	907278	Identifier	printf		907149	0					
ANR	907279	ArgumentList	"""%d,\\n  """		907149	1					
ANR	907280	Argument	"""%d,\\n  """		907149	0					
ANR	907281	PrimaryExpression	"""%d,\\n  """		907149	0					
ANR	907282	Argument	cost [ i ] = - basis [ i - 180 ]		907149	1					
ANR	907283	AssignmentExpression	cost [ i ] = - basis [ i - 180 ]		907149	0		=			
ANR	907284	ArrayIndexing	cost [ i ]		907149	0					
ANR	907285	Identifier	cost		907149	0					
ANR	907286	Identifier	i		907149	1					
ANR	907287	UnaryOperationExpression	- basis [ i - 180 ]		907149	1					
ANR	907288	UnaryOperator	-		907149	0					
ANR	907289	ArrayIndexing	basis [ i - 180 ]		907149	1					
ANR	907290	Identifier	basis		907149	0					
ANR	907291	AdditiveExpression	i - 180		907149	1		-			
ANR	907292	Identifier	i		907149	0					
ANR	907293	PrimaryExpression	180		907149	1					
ANR	907294	ForStatement	for ( i = 270 ; ( i < 359 ) ; i ++ )		907149	7					
ANR	907295	ForInit	i = 270 ;	30:7:575:582	907149	0	True				
ANR	907296	AssignmentExpression	i = 270		907149	0		=			
ANR	907297	Identifier	i		907149	0					
ANR	907298	PrimaryExpression	270		907149	1					
ANR	907299	Condition	i < 359	30:16:584:592	907149	1	True				
ANR	907300	RelationalExpression	i < 359		907149	0		<			
ANR	907301	Identifier	i		907149	0					
ANR	907302	PrimaryExpression	359		907149	1					
ANR	907303	PostIncDecOperationExpression	i ++	30:27:595:597	907149	2	True				
ANR	907304	Identifier	i		907149	0					
ANR	907305	IncDec	++		907149	1					
ANR	907306	CompoundStatement		22:4:502:502	907149	3					
ANR	907307	ExpressionStatement	"printf ( ""%d,\\n  "" , cost [ i ] = basis [ 360 - i ] )"	32:6:612:656	907149	0	True				
ANR	907308	CallExpression	"printf ( ""%d,\\n  "" , cost [ i ] = basis [ 360 - i ] )"		907149	0					
ANR	907309	Callee	printf		907149	0					
ANR	907310	Identifier	printf		907149	0					
ANR	907311	ArgumentList	"""%d,\\n  """		907149	1					
ANR	907312	Argument	"""%d,\\n  """		907149	0					
ANR	907313	PrimaryExpression	"""%d,\\n  """		907149	0					
ANR	907314	Argument	cost [ i ] = basis [ 360 - i ]		907149	1					
ANR	907315	AssignmentExpression	cost [ i ] = basis [ 360 - i ]		907149	0		=			
ANR	907316	ArrayIndexing	cost [ i ]		907149	0					
ANR	907317	Identifier	cost		907149	0					
ANR	907318	Identifier	i		907149	1					
ANR	907319	ArrayIndexing	basis [ 360 - i ]		907149	1					
ANR	907320	Identifier	basis		907149	0					
ANR	907321	AdditiveExpression	360 - i		907149	1		-			
ANR	907322	PrimaryExpression	360		907149	0					
ANR	907323	Identifier	i		907149	1					
ANR	907324	ExpressionStatement	"printf ( ""%d\\n"" , cost [ 359 ] = basis [ 1 ] )"	34:2:666:703	907149	8	True				
ANR	907325	CallExpression	"printf ( ""%d\\n"" , cost [ 359 ] = basis [ 1 ] )"		907149	0					
ANR	907326	Callee	printf		907149	0					
ANR	907327	Identifier	printf		907149	0					
ANR	907328	ArgumentList	"""%d\\n"""		907149	1					
ANR	907329	Argument	"""%d\\n"""		907149	0					
ANR	907330	PrimaryExpression	"""%d\\n"""		907149	0					
ANR	907331	Argument	cost [ 359 ] = basis [ 1 ]		907149	1					
ANR	907332	AssignmentExpression	cost [ 359 ] = basis [ 1 ]		907149	0		=			
ANR	907333	ArrayIndexing	cost [ 359 ]		907149	0					
ANR	907334	Identifier	cost		907149	0					
ANR	907335	PrimaryExpression	359		907149	1					
ANR	907336	ArrayIndexing	basis [ 1 ]		907149	1					
ANR	907337	Identifier	basis		907149	0					
ANR	907338	PrimaryExpression	1		907149	1					
ANR	907339	ExpressionStatement	"printf ( ""};\\n"" )"	35:2:707:722	907149	9	True				
ANR	907340	CallExpression	"printf ( ""};\\n"" )"		907149	0					
ANR	907341	Callee	printf		907149	0					
ANR	907342	Identifier	printf		907149	0					
ANR	907343	ArgumentList	"""};\\n"""		907149	1					
ANR	907344	Argument	"""};\\n"""		907149	0					
ANR	907345	PrimaryExpression	"""};\\n"""		907149	0					
ANR	907346	ExpressionStatement	"printf ( ""#define sintScale %d\\n"" , scale )"	36:2:726:766	907149	10	True				
ANR	907347	CallExpression	"printf ( ""#define sintScale %d\\n"" , scale )"		907149	0					
ANR	907348	Callee	printf		907149	0					
ANR	907349	Identifier	printf		907149	0					
ANR	907350	ArgumentList	"""#define sintScale %d\\n"""		907149	1					
ANR	907351	Argument	"""#define sintScale %d\\n"""		907149	0					
ANR	907352	PrimaryExpression	"""#define sintScale %d\\n"""		907149	0					
ANR	907353	Argument	scale		907149	1					
ANR	907354	Identifier	scale		907149	0					
ANR	907355	ExpressionStatement	"printf ( ""int sint[] = {\\n  "" )"	37:2:770:799	907149	11	True				
ANR	907356	CallExpression	"printf ( ""int sint[] = {\\n  "" )"		907149	0					
ANR	907357	Callee	printf		907149	0					
ANR	907358	Identifier	printf		907149	0					
ANR	907359	ArgumentList	"""int sint[] = {\\n  """		907149	1					
ANR	907360	Argument	"""int sint[] = {\\n  """		907149	0					
ANR	907361	PrimaryExpression	"""int sint[] = {\\n  """		907149	0					
ANR	907362	ForStatement	for ( i = 0 ; ( i < 360 ) ; i ++ )		907149	12					
ANR	907363	ForInit	i = 0 ;	38:7:808:813	907149	0	True				
ANR	907364	AssignmentExpression	i = 0		907149	0		=			
ANR	907365	Identifier	i		907149	0					
ANR	907366	PrimaryExpression	0		907149	1					
ANR	907367	Condition	i < 360	38:14:815:823	907149	1	True				
ANR	907368	RelationalExpression	i < 360		907149	0		<			
ANR	907369	Identifier	i		907149	0					
ANR	907370	PrimaryExpression	360		907149	1					
ANR	907371	PostIncDecOperationExpression	i ++	38:25:826:828	907149	2	True				
ANR	907372	Identifier	i		907149	0					
ANR	907373	IncDec	++		907149	1					
ANR	907374	CompoundStatement		31:6:741:748	907149	3					
ANR	907375	IdentifierDeclStatement	int val ;	40:6:843:850	907149	0	True				
ANR	907376	IdentifierDecl	val		907149	0					
ANR	907377	IdentifierDeclType	int		907149	0					
ANR	907378	Identifier	val		907149	1					
ANR	907379	ExpressionStatement	val = cost [ ( i + 270 ) % 360 ]	41:6:858:885	907149	1	True				
ANR	907380	AssignmentExpression	val = cost [ ( i + 270 ) % 360 ]		907149	0		=			
ANR	907381	Identifier	val		907149	0					
ANR	907382	ArrayIndexing	cost [ ( i + 270 ) % 360 ]		907149	1					
ANR	907383	Identifier	cost		907149	0					
ANR	907384	MultiplicativeExpression	( i + 270 ) % 360		907149	1		%			
ANR	907385	AdditiveExpression	i + 270		907149	0		+			
ANR	907386	Identifier	i		907149	0					
ANR	907387	PrimaryExpression	270		907149	1					
ANR	907388	PrimaryExpression	360		907149	1					
ANR	907389	IfStatement	if ( i != 359 )		907149	2					
ANR	907390	Condition	i != 359	42:10:897:904	907149	0	True				
ANR	907391	EqualityExpression	i != 359		907149	0		!=			
ANR	907392	Identifier	i		907149	0					
ANR	907393	PrimaryExpression	359		907149	1					
ANR	907394	CompoundStatement		34:1:806:806	907149	1					
ANR	907395	ExpressionStatement	"printf ( ""%d,\\n  "" , val )"	44:3:913:936	907149	0	True				
ANR	907396	CallExpression	"printf ( ""%d,\\n  "" , val )"		907149	0					
ANR	907397	Callee	printf		907149	0					
ANR	907398	Identifier	printf		907149	0					
ANR	907399	ArgumentList	"""%d,\\n  """		907149	1					
ANR	907400	Argument	"""%d,\\n  """		907149	0					
ANR	907401	PrimaryExpression	"""%d,\\n  """		907149	0					
ANR	907402	Argument	val		907149	1					
ANR	907403	Identifier	val		907149	0					
ANR	907404	ElseStatement	else		907149	0					
ANR	907405	CompoundStatement		38:1:851:851	907149	0					
ANR	907406	ExpressionStatement	"printf ( ""%d\\n"" , val )"	48:3:958:978	907149	0	True				
ANR	907407	CallExpression	"printf ( ""%d\\n"" , val )"		907149	0					
ANR	907408	Callee	printf		907149	0					
ANR	907409	Identifier	printf		907149	0					
ANR	907410	ArgumentList	"""%d\\n"""		907149	1					
ANR	907411	Argument	"""%d\\n"""		907149	0					
ANR	907412	PrimaryExpression	"""%d\\n"""		907149	0					
ANR	907413	Argument	val		907149	1					
ANR	907414	Identifier	val		907149	0					
ANR	907415	ExpressionStatement	"printf ( ""};\\n"" )"	51:2:991:1006	907149	13	True				
ANR	907416	CallExpression	"printf ( ""};\\n"" )"		907149	0					
ANR	907417	Callee	printf		907149	0					
ANR	907418	Identifier	printf		907149	0					
ANR	907419	ArgumentList	"""};\\n"""		907149	1					
ANR	907420	Argument	"""};\\n"""		907149	0					
ANR	907421	PrimaryExpression	"""};\\n"""		907149	0					
ANR	907422	Identifier	main		907149	1					
ANR	907423	ParameterList			907149	2					
ANR	907424	CFGEntryNode	ENTRY		907149		True				
ANR	907425	CFGExitNode	EXIT		907149		True				
ANR	907426	Symbol	val		907149						
ANR	907427	Symbol	* i		907149						
ANR	907428	Symbol	cost		907149						
ANR	907429	Symbol	cos		907149						
ANR	907430	Symbol	i		907149						
ANR	907431	Symbol	scale		907149						
ANR	907432	Symbol	* basis		907149						
ANR	907433	Symbol	basis		907149						
ANR	907434	Symbol	* cost		907149						
