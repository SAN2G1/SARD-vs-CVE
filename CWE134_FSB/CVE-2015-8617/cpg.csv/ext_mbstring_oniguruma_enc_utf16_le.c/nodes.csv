command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1157077	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_oniguruma_enc_utf16_le.c								
ANR	1157078	DeclStmt									
ANR	1157079	Decl							const int	const int [ ]	EncLen_UTF16
ANR	1157080	Function	utf16le_code_to_mbclen	51:0:2449:2539							
ANR	1157081	FunctionDef	utf16le_code_to_mbclen (OnigCodePoint code)		1157080	0					
ANR	1157082	CompoundStatement		53:0:2503:2539	1157080	0					
ANR	1157083	ReturnStatement	return ( code > 0xffff ? 4 : 2 ) ;	54:2:2507:2537	1157080	0	True				
ANR	1157084	ConditionalExpression	code > 0xffff ? 4 : 2		1157080	0					
ANR	1157085	Condition	code > 0xffff		1157080	0					
ANR	1157086	RelationalExpression	code > 0xffff		1157080	0		>			
ANR	1157087	Identifier	code		1157080	0					
ANR	1157088	PrimaryExpression	0xffff		1157080	1					
ANR	1157089	PrimaryExpression	4		1157080	1					
ANR	1157090	PrimaryExpression	2		1157080	2					
ANR	1157091	ReturnType	static int		1157080	1					
ANR	1157092	Identifier	utf16le_code_to_mbclen		1157080	2					
ANR	1157093	ParameterList	OnigCodePoint code		1157080	3					
ANR	1157094	Parameter	OnigCodePoint code	52:23:2483:2500	1157080	0	True				
ANR	1157095	ParameterType	OnigCodePoint		1157080	0					
ANR	1157096	Identifier	code		1157080	1					
ANR	1157097	CFGEntryNode	ENTRY		1157080		True				
ANR	1157098	CFGExitNode	EXIT		1157080		True				
ANR	1157099	Symbol	code		1157080						
ANR	1157100	Function	utf16le_mbc_enc_len	57:0:2542:2622							
ANR	1157101	FunctionDef	utf16le_mbc_enc_len (const UChar * p)		1157100	0					
ANR	1157102	CompoundStatement		59:0:2589:2622	1157100	0					
ANR	1157103	ReturnStatement	return EncLen_UTF16 [ * ( p + 1 ) ] ;	60:2:2593:2620	1157100	0	True				
ANR	1157104	ArrayIndexing	EncLen_UTF16 [ * ( p + 1 ) ]		1157100	0					
ANR	1157105	Identifier	EncLen_UTF16		1157100	0					
ANR	1157106	UnaryOperationExpression	* ( p + 1 )		1157100	1					
ANR	1157107	UnaryOperator	*		1157100	0					
ANR	1157108	AdditiveExpression	p + 1		1157100	1		+			
ANR	1157109	Identifier	p		1157100	0					
ANR	1157110	PrimaryExpression	1		1157100	1					
ANR	1157111	ReturnType	static int		1157100	1					
ANR	1157112	Identifier	utf16le_mbc_enc_len		1157100	2					
ANR	1157113	ParameterList	const UChar * p		1157100	3					
ANR	1157114	Parameter	const UChar * p	58:20:2573:2586	1157100	0	True				
ANR	1157115	ParameterType	const UChar *		1157100	0					
ANR	1157116	Identifier	p		1157100	1					
ANR	1157117	CFGEntryNode	ENTRY		1157100		True				
ANR	1157118	CFGExitNode	EXIT		1157100		True				
ANR	1157119	Symbol	p		1157100						
ANR	1157120	Symbol	* * ( p + 1 )		1157100						
ANR	1157121	Symbol	* EncLen_UTF16		1157100						
ANR	1157122	Symbol	* p		1157100						
ANR	1157123	Symbol	* * p		1157100						
ANR	1157124	Symbol	* ( p + 1 )		1157100						
ANR	1157125	Symbol	EncLen_UTF16		1157100						
ANR	1157126	Function	utf16le_is_mbc_newline	63:0:2625:3021							
ANR	1157127	FunctionDef	"utf16le_is_mbc_newline (const UChar * p , const UChar * end)"		1157126	0					
ANR	1157128	CompoundStatement		65:0:2693:3021	1157126	0					
ANR	1157129	IfStatement	if ( p + 1 < end )		1157126	0					
ANR	1157130	Condition	p + 1 < end	66:6:2701:2711	1157126	0	True				
ANR	1157131	RelationalExpression	p + 1 < end		1157126	0		<			
ANR	1157132	AdditiveExpression	p + 1		1157126	0		+			
ANR	1157133	Identifier	p		1157126	0					
ANR	1157134	PrimaryExpression	1		1157126	1					
ANR	1157135	Identifier	end		1157126	1					
ANR	1157136	CompoundStatement		2:19:20:20	1157126	1					
ANR	1157137	IfStatement	if ( * p == 0x0a && * ( p + 1 ) == 0x00 )		1157126	0					
ANR	1157138	Condition	* p == 0x0a && * ( p + 1 ) == 0x00	67:8:2724:2751	1157126	0	True				
ANR	1157139	AndExpression	* p == 0x0a && * ( p + 1 ) == 0x00		1157126	0		&&			
ANR	1157140	EqualityExpression	* p == 0x0a		1157126	0		==			
ANR	1157141	UnaryOperationExpression	* p		1157126	0					
ANR	1157142	UnaryOperator	*		1157126	0					
ANR	1157143	Identifier	p		1157126	1					
ANR	1157144	PrimaryExpression	0x0a		1157126	1					
ANR	1157145	EqualityExpression	* ( p + 1 ) == 0x00		1157126	1		==			
ANR	1157146	UnaryOperationExpression	* ( p + 1 )		1157126	0					
ANR	1157147	UnaryOperator	*		1157126	0					
ANR	1157148	AdditiveExpression	p + 1		1157126	1		+			
ANR	1157149	Identifier	p		1157126	0					
ANR	1157150	PrimaryExpression	1		1157126	1					
ANR	1157151	PrimaryExpression	0x00		1157126	1					
ANR	1157152	ReturnStatement	return 1 ;	68:6:2760:2768	1157126	1	True				
ANR	1157153	PrimaryExpression	1		1157126	0					
ANR	1157154	Statement	if	70:4:2814:2815	1157126	1	True				
ANR	1157155	Statement	(	70:7:2817:2817	1157126	2	True				
ANR	1157156	Statement	(	70:8:2818:2818	1157126	3	True				
ANR	1157157	Statement	*	72:2:2858:2858	1157126	4	True				
ANR	1157158	Statement	p	72:3:2859:2859	1157126	5	True				
ANR	1157159	Statement	==	72:5:2861:2862	1157126	6	True				
ANR	1157160	Statement	0x0d	72:8:2864:2867	1157126	7	True				
ANR	1157161	Statement	||	72:13:2869:2870	1157126	8	True				
ANR	1157162	Statement	*	74:2:2881:2881	1157126	9	True				
ANR	1157163	Statement	p	74:3:2882:2882	1157126	10	True				
ANR	1157164	Statement	==	74:5:2884:2885	1157126	11	True				
ANR	1157165	Statement	0x85	74:8:2887:2890	1157126	12	True				
ANR	1157166	Statement	)	74:12:2891:2891	1157126	13	True				
ANR	1157167	Statement	&&	74:14:2893:2894	1157126	14	True				
ANR	1157168	Statement	*	74:17:2896:2896	1157126	15	True				
ANR	1157169	Statement	(	74:18:2897:2897	1157126	16	True				
ANR	1157170	Statement	p	74:19:2898:2898	1157126	17	True				
ANR	1157171	Statement	+	74:20:2899:2899	1157126	18	True				
ANR	1157172	Statement	1	74:21:2900:2900	1157126	19	True				
ANR	1157173	Statement	)	74:22:2901:2901	1157126	20	True				
ANR	1157174	Statement	==	74:24:2903:2904	1157126	21	True				
ANR	1157175	Statement	0x00	74:27:2906:2909	1157126	22	True				
ANR	1157176	Statement	)	74:31:2910:2910	1157126	23	True				
ANR	1157177	ReturnStatement	return 1 ;	75:6:2918:2926	1157126	24	True				
ANR	1157178	PrimaryExpression	1		1157126	0					
ANR	1157179	IfStatement	if ( * ( p + 1 ) == 0x20 && ( * p == 0x29 || * p == 0x28 ) )		1157126	25					
ANR	1157180	Condition	* ( p + 1 ) == 0x20 && ( * p == 0x29 || * p == 0x28 )	76:8:2936:2979	1157126	0	True				
ANR	1157181	AndExpression	* ( p + 1 ) == 0x20 && ( * p == 0x29 || * p == 0x28 )		1157126	0		&&			
ANR	1157182	EqualityExpression	* ( p + 1 ) == 0x20		1157126	0		==			
ANR	1157183	UnaryOperationExpression	* ( p + 1 )		1157126	0					
ANR	1157184	UnaryOperator	*		1157126	0					
ANR	1157185	AdditiveExpression	p + 1		1157126	1		+			
ANR	1157186	Identifier	p		1157126	0					
ANR	1157187	PrimaryExpression	1		1157126	1					
ANR	1157188	PrimaryExpression	0x20		1157126	1					
ANR	1157189	OrExpression	* p == 0x29 || * p == 0x28		1157126	1		||			
ANR	1157190	EqualityExpression	* p == 0x29		1157126	0		==			
ANR	1157191	UnaryOperationExpression	* p		1157126	0					
ANR	1157192	UnaryOperator	*		1157126	0					
ANR	1157193	Identifier	p		1157126	1					
ANR	1157194	PrimaryExpression	0x29		1157126	1					
ANR	1157195	EqualityExpression	* p == 0x28		1157126	1		==			
ANR	1157196	UnaryOperationExpression	* p		1157126	0					
ANR	1157197	UnaryOperator	*		1157126	0					
ANR	1157198	Identifier	p		1157126	1					
ANR	1157199	PrimaryExpression	0x28		1157126	1					
ANR	1157200	ReturnStatement	return 1 ;	77:6:2988:2996	1157126	1	True				
ANR	1157201	PrimaryExpression	1		1157126	0					
ANR	1157202	ReturnStatement	return 0 ;	80:2:3011:3019	1157126	1	True				
ANR	1157203	PrimaryExpression	0		1157126	0					
ANR	1157204	ReturnType	static int		1157126	1					
ANR	1157205	Identifier	utf16le_is_mbc_newline		1157126	2					
ANR	1157206	ParameterList	"const UChar * p , const UChar * end"		1157126	3					
ANR	1157207	Parameter	const UChar * p	64:23:2659:2672	1157126	0	True				
ANR	1157208	ParameterType	const UChar *		1157126	0					
ANR	1157209	Identifier	p		1157126	1					
ANR	1157210	Parameter	const UChar * end	64:39:2675:2690	1157126	1	True				
ANR	1157211	ParameterType	const UChar *		1157126	0					
ANR	1157212	Identifier	end		1157126	1					
ANR	1157213	CFGEntryNode	ENTRY		1157126		True				
ANR	1157214	CFGExitNode	EXIT		1157126		True				
ANR	1157215	Symbol	p		1157126						
ANR	1157216	Symbol	end		1157126						
ANR	1157217	Symbol	* p		1157126						
ANR	1157218	Symbol	* ( p + 1 )		1157126						
ANR	1157219	DeclStmt									
ANR	1157220	Decl							OnigCodePoint	OnigCodePoint	code
ANR	1157221	DeclStmt									
ANR	1157222	Decl							UChar	UChar	c0
ANR	1157223	DeclStmt									
ANR	1157224	Decl							UChar	UChar	c1
ANR	1157225	Function	utf16le_code_to_mbc	101:0:3412:3883							
ANR	1157226	FunctionDef	"utf16le_code_to_mbc (OnigCodePoint code , UChar * buf)"		1157225	0					
ANR	1157227	CompoundStatement		103:0:3475:3883	1157225	0					
ANR	1157228	IdentifierDeclStatement	UChar * p = buf ;	104:2:3479:3493	1157225	0	True				
ANR	1157229	IdentifierDecl	* p = buf		1157225	0					
ANR	1157230	IdentifierDeclType	UChar *		1157225	0					
ANR	1157231	Identifier	p		1157225	1					
ANR	1157232	AssignmentExpression	* p = buf		1157225	2		=			
ANR	1157233	Identifier	buf		1157225	0					
ANR	1157234	Identifier	buf		1157225	1					
ANR	1157235	IfStatement	if ( code > 0xffff )		1157225	1					
ANR	1157236	Condition	code > 0xffff	106:6:3502:3514	1157225	0	True				
ANR	1157237	RelationalExpression	code > 0xffff		1157225	0		>			
ANR	1157238	Identifier	code		1157225	0					
ANR	1157239	PrimaryExpression	0xffff		1157225	1					
ANR	1157240	CompoundStatement		5:4:47:71	1157225	1					
ANR	1157241	IdentifierDeclStatement	"unsigned int plane , high ;"	107:4:3523:3547	1157225	0	True				
ANR	1157242	IdentifierDecl	plane		1157225	0					
ANR	1157243	IdentifierDeclType	unsigned int		1157225	0					
ANR	1157244	Identifier	plane		1157225	1					
ANR	1157245	IdentifierDecl	high		1157225	1					
ANR	1157246	IdentifierDeclType	unsigned int		1157225	0					
ANR	1157247	Identifier	high		1157225	1					
ANR	1157248	ExpressionStatement	plane = ( code >> 16 ) - 1	109:4:3554:3578	1157225	1	True				
ANR	1157249	AssignmentExpression	plane = ( code >> 16 ) - 1		1157225	0		=			
ANR	1157250	Identifier	plane		1157225	0					
ANR	1157251	AdditiveExpression	( code >> 16 ) - 1		1157225	1		-			
ANR	1157252	ShiftExpression	code >> 16		1157225	0		>>			
ANR	1157253	Identifier	code		1157225	0					
ANR	1157254	PrimaryExpression	16		1157225	1					
ANR	1157255	PrimaryExpression	1		1157225	1					
ANR	1157256	ExpressionStatement	high = ( code & 0xff00 ) >> 8	110:4:3584:3611	1157225	2	True				
ANR	1157257	AssignmentExpression	high = ( code & 0xff00 ) >> 8		1157225	0		=			
ANR	1157258	Identifier	high		1157225	0					
ANR	1157259	ShiftExpression	( code & 0xff00 ) >> 8		1157225	1		>>			
ANR	1157260	BitAndExpression	code & 0xff00		1157225	0		&			
ANR	1157261	Identifier	code		1157225	0					
ANR	1157262	PrimaryExpression	0xff00		1157225	1					
ANR	1157263	PrimaryExpression	8		1157225	1					
ANR	1157264	ExpressionStatement	* p ++ = ( ( plane & 0x03 ) << 6 ) + ( high >> 2 )	112:4:3618:3660	1157225	3	True				
ANR	1157265	AssignmentExpression	* p ++ = ( ( plane & 0x03 ) << 6 ) + ( high >> 2 )		1157225	0		=			
ANR	1157266	UnaryOperationExpression	* p ++		1157225	0					
ANR	1157267	UnaryOperator	*		1157225	0					
ANR	1157268	PostIncDecOperationExpression	p ++		1157225	1					
ANR	1157269	Identifier	p		1157225	0					
ANR	1157270	IncDec	++		1157225	1					
ANR	1157271	AdditiveExpression	( ( plane & 0x03 ) << 6 ) + ( high >> 2 )		1157225	1		+			
ANR	1157272	ShiftExpression	( plane & 0x03 ) << 6		1157225	0		<<			
ANR	1157273	BitAndExpression	plane & 0x03		1157225	0		&			
ANR	1157274	Identifier	plane		1157225	0					
ANR	1157275	PrimaryExpression	0x03		1157225	1					
ANR	1157276	PrimaryExpression	6		1157225	1					
ANR	1157277	ShiftExpression	high >> 2		1157225	1		>>			
ANR	1157278	Identifier	high		1157225	0					
ANR	1157279	PrimaryExpression	2		1157225	1					
ANR	1157280	ExpressionStatement	* p ++ = ( plane >> 2 ) + 0xd8	113:4:3666:3692	1157225	4	True				
ANR	1157281	AssignmentExpression	* p ++ = ( plane >> 2 ) + 0xd8		1157225	0		=			
ANR	1157282	UnaryOperationExpression	* p ++		1157225	0					
ANR	1157283	UnaryOperator	*		1157225	0					
ANR	1157284	PostIncDecOperationExpression	p ++		1157225	1					
ANR	1157285	Identifier	p		1157225	0					
ANR	1157286	IncDec	++		1157225	1					
ANR	1157287	AdditiveExpression	( plane >> 2 ) + 0xd8		1157225	1		+			
ANR	1157288	ShiftExpression	plane >> 2		1157225	0		>>			
ANR	1157289	Identifier	plane		1157225	0					
ANR	1157290	PrimaryExpression	2		1157225	1					
ANR	1157291	PrimaryExpression	0xd8		1157225	1					
ANR	1157292	ExpressionStatement	* p ++ = ( UChar ) ( code & 0xff )	114:4:3698:3726	1157225	5	True				
ANR	1157293	AssignmentExpression	* p ++ = ( UChar ) ( code & 0xff )		1157225	0		=			
ANR	1157294	UnaryOperationExpression	* p ++		1157225	0					
ANR	1157295	UnaryOperator	*		1157225	0					
ANR	1157296	PostIncDecOperationExpression	p ++		1157225	1					
ANR	1157297	Identifier	p		1157225	0					
ANR	1157298	IncDec	++		1157225	1					
ANR	1157299	CastExpression	( UChar ) ( code & 0xff )		1157225	1					
ANR	1157300	CastTarget	UChar		1157225	0					
ANR	1157301	BitAndExpression	code & 0xff		1157225	1		&			
ANR	1157302	Identifier	code		1157225	0					
ANR	1157303	PrimaryExpression	0xff		1157225	1					
ANR	1157304	ExpressionStatement	* p = ( high & 0x03 ) + 0xdc	115:4:3732:3759	1157225	6	True				
ANR	1157305	AssignmentExpression	* p = ( high & 0x03 ) + 0xdc		1157225	0		=			
ANR	1157306	UnaryOperationExpression	* p		1157225	0					
ANR	1157307	UnaryOperator	*		1157225	0					
ANR	1157308	Identifier	p		1157225	1					
ANR	1157309	AdditiveExpression	( high & 0x03 ) + 0xdc		1157225	1		+			
ANR	1157310	BitAndExpression	high & 0x03		1157225	0		&			
ANR	1157311	Identifier	high		1157225	0					
ANR	1157312	PrimaryExpression	0x03		1157225	1					
ANR	1157313	PrimaryExpression	0xdc		1157225	1					
ANR	1157314	ReturnStatement	return 4 ;	116:4:3765:3773	1157225	7	True				
ANR	1157315	PrimaryExpression	4		1157225	0					
ANR	1157316	ElseStatement	else		1157225	0					
ANR	1157317	CompoundStatement		16:7:310:310	1157225	0					
ANR	1157318	ExpressionStatement	* p ++ = ( UChar ) ( code & 0xff )	119:4:3792:3820	1157225	0	True				
ANR	1157319	AssignmentExpression	* p ++ = ( UChar ) ( code & 0xff )		1157225	0		=			
ANR	1157320	UnaryOperationExpression	* p ++		1157225	0					
ANR	1157321	UnaryOperator	*		1157225	0					
ANR	1157322	PostIncDecOperationExpression	p ++		1157225	1					
ANR	1157323	Identifier	p		1157225	0					
ANR	1157324	IncDec	++		1157225	1					
ANR	1157325	CastExpression	( UChar ) ( code & 0xff )		1157225	1					
ANR	1157326	CastTarget	UChar		1157225	0					
ANR	1157327	BitAndExpression	code & 0xff		1157225	1		&			
ANR	1157328	Identifier	code		1157225	0					
ANR	1157329	PrimaryExpression	0xff		1157225	1					
ANR	1157330	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff00 ) >> 8 )	120:4:3826:3863	1157225	1	True				
ANR	1157331	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff00 ) >> 8 )		1157225	0		=			
ANR	1157332	UnaryOperationExpression	* p ++		1157225	0					
ANR	1157333	UnaryOperator	*		1157225	0					
ANR	1157334	PostIncDecOperationExpression	p ++		1157225	1					
ANR	1157335	Identifier	p		1157225	0					
ANR	1157336	IncDec	++		1157225	1					
ANR	1157337	CastExpression	( UChar ) ( ( code & 0xff00 ) >> 8 )		1157225	1					
ANR	1157338	CastTarget	UChar		1157225	0					
ANR	1157339	ShiftExpression	( code & 0xff00 ) >> 8		1157225	1		>>			
ANR	1157340	BitAndExpression	code & 0xff00		1157225	0		&			
ANR	1157341	Identifier	code		1157225	0					
ANR	1157342	PrimaryExpression	0xff00		1157225	1					
ANR	1157343	PrimaryExpression	8		1157225	1					
ANR	1157344	ReturnStatement	return 2 ;	121:4:3869:3877	1157225	2	True				
ANR	1157345	PrimaryExpression	2		1157225	0					
ANR	1157346	ReturnType	static int		1157225	1					
ANR	1157347	Identifier	utf16le_code_to_mbc		1157225	2					
ANR	1157348	ParameterList	"OnigCodePoint code , UChar * buf"		1157225	3					
ANR	1157349	Parameter	OnigCodePoint code	102:20:3443:3460	1157225	0	True				
ANR	1157350	ParameterType	OnigCodePoint		1157225	0					
ANR	1157351	Identifier	code		1157225	1					
ANR	1157352	Parameter	UChar * buf	102:40:3463:3472	1157225	1	True				
ANR	1157353	ParameterType	UChar *		1157225	0					
ANR	1157354	Identifier	buf		1157225	1					
ANR	1157355	CFGEntryNode	ENTRY		1157225		True				
ANR	1157356	CFGExitNode	EXIT		1157225		True				
ANR	1157357	Symbol	p		1157225						
ANR	1157358	Symbol	plane		1157225						
ANR	1157359	Symbol	buf		1157225						
ANR	1157360	Symbol	high		1157225						
ANR	1157361	Symbol	code		1157225						
ANR	1157362	Symbol	* p ++		1157225						
ANR	1157363	Symbol	* p		1157225						
ANR	1157364	Function	utf16le_mbc_case_fold	125:0:3886:4481							
ANR	1157365	FunctionDef	"utf16le_mbc_case_fold (OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold)"		1157364	0					
ANR	1157366	CompoundStatement		128:0:3999:4481	1157364	0					
ANR	1157367	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:4003:4023	1157364	0	True				
ANR	1157368	IdentifierDecl	* p = * pp		1157364	0					
ANR	1157369	IdentifierDeclType	const UChar *		1157364	0					
ANR	1157370	Identifier	p		1157364	1					
ANR	1157371	AssignmentExpression	* p = * pp		1157364	2		=			
ANR	1157372	Identifier	p		1157364	0					
ANR	1157373	UnaryOperationExpression	* pp		1157364	1					
ANR	1157374	UnaryOperator	*		1157364	0					
ANR	1157375	Identifier	pp		1157364	1					
ANR	1157376	IfStatement	if ( ONIGENC_IS_ASCII_CODE ( * p ) && * ( p + 1 ) == 0 )		1157364	1					
ANR	1157377	Condition	ONIGENC_IS_ASCII_CODE ( * p ) && * ( p + 1 ) == 0	131:6:4032:4071	1157364	0	True				
ANR	1157378	AndExpression	ONIGENC_IS_ASCII_CODE ( * p ) && * ( p + 1 ) == 0		1157364	0		&&			
ANR	1157379	CallExpression	ONIGENC_IS_ASCII_CODE ( * p )		1157364	0					
ANR	1157380	Callee	ONIGENC_IS_ASCII_CODE		1157364	0					
ANR	1157381	Identifier	ONIGENC_IS_ASCII_CODE		1157364	0					
ANR	1157382	ArgumentList	* p		1157364	1					
ANR	1157383	Argument	* p		1157364	0					
ANR	1157384	UnaryOperationExpression	* p		1157364	0					
ANR	1157385	UnaryOperator	*		1157364	0					
ANR	1157386	Identifier	p		1157364	1					
ANR	1157387	EqualityExpression	* ( p + 1 ) == 0		1157364	1		==			
ANR	1157388	UnaryOperationExpression	* ( p + 1 )		1157364	0					
ANR	1157389	UnaryOperator	*		1157364	0					
ANR	1157390	AdditiveExpression	p + 1		1157364	1		+			
ANR	1157391	Identifier	p		1157364	0					
ANR	1157392	PrimaryExpression	1		1157364	1					
ANR	1157393	PrimaryExpression	0		1157364	1					
ANR	1157394	CompoundStatement		4:48:74:74	1157364	1					
ANR	1157395	IfStatement	if ( ( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0 )		1157364	0					
ANR	1157396	Condition	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0	133:8:4127:4171	1157364	0	True				
ANR	1157397	EqualityExpression	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0		1157364	0		!=			
ANR	1157398	BitAndExpression	flag & ONIGENC_CASE_FOLD_TURKISH_AZERI		1157364	0		&			
ANR	1157399	Identifier	flag		1157364	0					
ANR	1157400	Identifier	ONIGENC_CASE_FOLD_TURKISH_AZERI		1157364	1					
ANR	1157401	PrimaryExpression	0		1157364	1					
ANR	1157402	CompoundStatement		6:55:174:174	1157364	1					
ANR	1157403	IfStatement	if ( * p == 0x49 )		1157364	0					
ANR	1157404	Condition	* p == 0x49	134:10:4186:4195	1157364	0	True				
ANR	1157405	EqualityExpression	* p == 0x49		1157364	0		==			
ANR	1157406	UnaryOperationExpression	* p		1157364	0					
ANR	1157407	UnaryOperator	*		1157364	0					
ANR	1157408	Identifier	p		1157364	1					
ANR	1157409	PrimaryExpression	0x49		1157364	1					
ANR	1157410	CompoundStatement		7:22:198:198	1157364	1					
ANR	1157411	ExpressionStatement	* fold ++ = 0x31	135:1:4201:4215	1157364	0	True				
ANR	1157412	AssignmentExpression	* fold ++ = 0x31		1157364	0		=			
ANR	1157413	UnaryOperationExpression	* fold ++		1157364	0					
ANR	1157414	UnaryOperator	*		1157364	0					
ANR	1157415	PostIncDecOperationExpression	fold ++		1157364	1					
ANR	1157416	Identifier	fold		1157364	0					
ANR	1157417	IncDec	++		1157364	1					
ANR	1157418	PrimaryExpression	0x31		1157364	1					
ANR	1157419	ExpressionStatement	* fold = 0x01	136:1:4218:4232	1157364	1	True				
ANR	1157420	AssignmentExpression	* fold = 0x01		1157364	0		=			
ANR	1157421	UnaryOperationExpression	* fold		1157364	0					
ANR	1157422	UnaryOperator	*		1157364	0					
ANR	1157423	Identifier	fold		1157364	1					
ANR	1157424	PrimaryExpression	0x01		1157364	1					
ANR	1157425	ExpressionStatement	( * pp ) += 2	137:1:4235:4245	1157364	2	True				
ANR	1157426	AssignmentExpression	( * pp ) += 2		1157364	0		+=			
ANR	1157427	UnaryOperationExpression	* pp		1157364	0					
ANR	1157428	UnaryOperator	*		1157364	0					
ANR	1157429	Identifier	pp		1157364	1					
ANR	1157430	PrimaryExpression	2		1157364	1					
ANR	1157431	ReturnStatement	return 2 ;	138:1:4248:4256	1157364	3	True				
ANR	1157432	PrimaryExpression	2		1157364	0					
ANR	1157433	ExpressionStatement	* fold ++ = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )	143:4:4284:4330	1157364	1	True				
ANR	1157434	AssignmentExpression	* fold ++ = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		1157364	0		=			
ANR	1157435	UnaryOperationExpression	* fold ++		1157364	0					
ANR	1157436	UnaryOperator	*		1157364	0					
ANR	1157437	PostIncDecOperationExpression	fold ++		1157364	1					
ANR	1157438	Identifier	fold		1157364	0					
ANR	1157439	IncDec	++		1157364	1					
ANR	1157440	CallExpression	ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		1157364	1					
ANR	1157441	Callee	ONIGENC_ASCII_CODE_TO_LOWER_CASE		1157364	0					
ANR	1157442	Identifier	ONIGENC_ASCII_CODE_TO_LOWER_CASE		1157364	0					
ANR	1157443	ArgumentList	* p		1157364	1					
ANR	1157444	Argument	* p		1157364	0					
ANR	1157445	UnaryOperationExpression	* p		1157364	0					
ANR	1157446	UnaryOperator	*		1157364	0					
ANR	1157447	Identifier	p		1157364	1					
ANR	1157448	ExpressionStatement	* fold = 0	144:4:4336:4347	1157364	2	True				
ANR	1157449	AssignmentExpression	* fold = 0		1157364	0		=			
ANR	1157450	UnaryOperationExpression	* fold		1157364	0					
ANR	1157451	UnaryOperator	*		1157364	0					
ANR	1157452	Identifier	fold		1157364	1					
ANR	1157453	PrimaryExpression	0		1157364	1					
ANR	1157454	ExpressionStatement	* pp += 2	145:4:4353:4361	1157364	3	True				
ANR	1157455	AssignmentExpression	* pp += 2		1157364	0		+=			
ANR	1157456	UnaryOperationExpression	* pp		1157364	0					
ANR	1157457	UnaryOperator	*		1157364	0					
ANR	1157458	Identifier	pp		1157364	1					
ANR	1157459	PrimaryExpression	2		1157364	1					
ANR	1157460	ReturnStatement	return 2 ;	146:4:4367:4375	1157364	4	True				
ANR	1157461	PrimaryExpression	2		1157364	0					
ANR	1157462	ElseStatement	else		1157364	0					
ANR	1157463	ReturnStatement	"return onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF16_LE , flag , pp , end , fold ) ;"	149:4:4392:4479	1157364	0	True				
ANR	1157464	CallExpression	"onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF16_LE , flag , pp , end , fold )"		1157364	0					
ANR	1157465	Callee	onigenc_unicode_mbc_case_fold		1157364	0					
ANR	1157466	Identifier	onigenc_unicode_mbc_case_fold		1157364	0					
ANR	1157467	ArgumentList	ONIG_ENCODING_UTF16_LE		1157364	1					
ANR	1157468	Argument	ONIG_ENCODING_UTF16_LE		1157364	0					
ANR	1157469	Identifier	ONIG_ENCODING_UTF16_LE		1157364	0					
ANR	1157470	Argument	flag		1157364	1					
ANR	1157471	Identifier	flag		1157364	0					
ANR	1157472	Argument	pp		1157364	2					
ANR	1157473	Identifier	pp		1157364	0					
ANR	1157474	Argument	end		1157364	3					
ANR	1157475	Identifier	end		1157364	0					
ANR	1157476	Argument	fold		1157364	4					
ANR	1157477	Identifier	fold		1157364	0					
ANR	1157478	ReturnType	static int		1157364	1					
ANR	1157479	Identifier	utf16le_mbc_case_fold		1157364	2					
ANR	1157480	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold"		1157364	3					
ANR	1157481	Parameter	OnigCaseFoldType flag	126:22:3919:3939	1157364	0	True				
ANR	1157482	ParameterType	OnigCaseFoldType		1157364	0					
ANR	1157483	Identifier	flag		1157364	1					
ANR	1157484	Parameter	const UChar * * pp	127:8:3950:3965	1157364	1	True				
ANR	1157485	ParameterType	const UChar * *		1157364	0					
ANR	1157486	Identifier	pp		1157364	1					
ANR	1157487	Parameter	const UChar * end	127:26:3968:3983	1157364	2	True				
ANR	1157488	ParameterType	const UChar *		1157364	0					
ANR	1157489	Identifier	end		1157364	1					
ANR	1157490	Parameter	UChar * fold	127:44:3986:3996	1157364	3	True				
ANR	1157491	ParameterType	UChar *		1157364	0					
ANR	1157492	Identifier	fold		1157364	1					
ANR	1157493	CFGEntryNode	ENTRY		1157364		True				
ANR	1157494	CFGExitNode	EXIT		1157364		True				
ANR	1157495	Symbol	pp		1157364						
ANR	1157496	Symbol	ONIGENC_IS_ASCII_CODE		1157364						
ANR	1157497	Symbol	flag		1157364						
ANR	1157498	Symbol	* pp		1157364						
ANR	1157499	Symbol	* fold		1157364						
ANR	1157500	Symbol	* ( p + 1 )		1157364						
ANR	1157501	Symbol	* fold ++		1157364						
ANR	1157502	Symbol	ONIG_ENCODING_UTF16_LE		1157364						
ANR	1157503	Symbol	p		1157364						
ANR	1157504	Symbol	fold		1157364						
ANR	1157505	Symbol	ONIGENC_ASCII_CODE_TO_LOWER_CASE		1157364						
ANR	1157506	Symbol	ONIGENC_CASE_FOLD_TURKISH_AZERI		1157364						
ANR	1157507	Symbol	end		1157364						
ANR	1157508	Symbol	* p		1157364						
ANR	1157509	Symbol	onigenc_unicode_mbc_case_fold		1157364						
ANR	1157510	Function	utf16le_is_mbc_ambiguous	154:0:4490:5159							
ANR	1157511	FunctionDef	"utf16le_is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		1157510	0					
ANR	1157512	CompoundStatement		157:0:4589:5159	1157510	0					
ANR	1157513	IdentifierDeclStatement	const UChar * p = * pp ;	158:2:4593:4613	1157510	0	True				
ANR	1157514	IdentifierDecl	* p = * pp		1157510	0					
ANR	1157515	IdentifierDeclType	const UChar *		1157510	0					
ANR	1157516	Identifier	p		1157510	1					
ANR	1157517	AssignmentExpression	* p = * pp		1157510	2		=			
ANR	1157518	Identifier	p		1157510	0					
ANR	1157519	UnaryOperationExpression	* pp		1157510	1					
ANR	1157520	UnaryOperator	*		1157510	0					
ANR	1157521	Identifier	pp		1157510	1					
ANR	1157522	ExpressionStatement	( * pp ) += EncLen_UTF16 [ * ( p + 1 ) ]	160:2:4618:4647	1157510	1	True				
ANR	1157523	AssignmentExpression	( * pp ) += EncLen_UTF16 [ * ( p + 1 ) ]		1157510	0		+=			
ANR	1157524	UnaryOperationExpression	* pp		1157510	0					
ANR	1157525	UnaryOperator	*		1157510	0					
ANR	1157526	Identifier	pp		1157510	1					
ANR	1157527	ArrayIndexing	EncLen_UTF16 [ * ( p + 1 ) ]		1157510	1					
ANR	1157528	Identifier	EncLen_UTF16		1157510	0					
ANR	1157529	UnaryOperationExpression	* ( p + 1 )		1157510	1					
ANR	1157530	UnaryOperator	*		1157510	0					
ANR	1157531	AdditiveExpression	p + 1		1157510	1		+			
ANR	1157532	Identifier	p		1157510	0					
ANR	1157533	PrimaryExpression	1		1157510	1					
ANR	1157534	IfStatement	if ( * ( p + 1 ) == 0 )		1157510	2					
ANR	1157535	Condition	* ( p + 1 ) == 0	162:6:4656:4666	1157510	0	True				
ANR	1157536	EqualityExpression	* ( p + 1 ) == 0		1157510	0		==			
ANR	1157537	UnaryOperationExpression	* ( p + 1 )		1157510	0					
ANR	1157538	UnaryOperator	*		1157510	0					
ANR	1157539	AdditiveExpression	p + 1		1157510	1		+			
ANR	1157540	Identifier	p		1157510	0					
ANR	1157541	PrimaryExpression	1		1157510	1					
ANR	1157542	PrimaryExpression	0		1157510	1					
ANR	1157543	CompoundStatement		7:4:85:93	1157510	1					
ANR	1157544	IdentifierDeclStatement	"int c , v ;"	163:4:4675:4683	1157510	0	True				
ANR	1157545	IdentifierDecl	c		1157510	0					
ANR	1157546	IdentifierDeclType	int		1157510	0					
ANR	1157547	Identifier	c		1157510	1					
ANR	1157548	IdentifierDecl	v		1157510	1					
ANR	1157549	IdentifierDeclType	int		1157510	0					
ANR	1157550	Identifier	v		1157510	1					
ANR	1157551	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		1157510	1					
ANR	1157552	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	165:8:4694:4758	1157510	0	True				
ANR	1157553	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1157510	0		&&			
ANR	1157554	EqualityExpression	* p == 0xdf		1157510	0		==			
ANR	1157555	UnaryOperationExpression	* p		1157510	0					
ANR	1157556	UnaryOperator	*		1157510	0					
ANR	1157557	Identifier	p		1157510	1					
ANR	1157558	PrimaryExpression	0xdf		1157510	1					
ANR	1157559	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1157510	1		!=			
ANR	1157560	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1157510	0		&			
ANR	1157561	Identifier	flag		1157510	0					
ANR	1157562	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1157510	1					
ANR	1157563	PrimaryExpression	0		1157510	1					
ANR	1157564	CompoundStatement		9:75:171:171	1157510	1					
ANR	1157565	ReturnStatement	return TRUE ;	166:6:4769:4780	1157510	0	True				
ANR	1157566	Identifier	TRUE		1157510	0					
ANR	1157567	ExpressionStatement	c = * p	169:4:4793:4799	1157510	2	True				
ANR	1157568	AssignmentExpression	c = * p		1157510	0		=			
ANR	1157569	Identifier	c		1157510	0					
ANR	1157570	UnaryOperationExpression	* p		1157510	1					
ANR	1157571	UnaryOperator	*		1157510	0					
ANR	1157572	Identifier	p		1157510	1					
ANR	1157573	ExpressionStatement	"v = ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"	170:4:4805:4911	1157510	3	True				
ANR	1157574	AssignmentExpression	"v = ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"		1157510	0		=			
ANR	1157575	Identifier	v		1157510	0					
ANR	1157576	CallExpression	"ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"		1157510	1					
ANR	1157577	Callee	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		1157510	0					
ANR	1157578	Identifier	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		1157510	0					
ANR	1157579	ArgumentList	c		1157510	1					
ANR	1157580	Argument	c		1157510	0					
ANR	1157581	Identifier	c		1157510	0					
ANR	1157582	Argument	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		1157510	1					
ANR	1157583	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		1157510	0		|			
ANR	1157584	Identifier	BIT_CTYPE_UPPER		1157510	0					
ANR	1157585	Identifier	BIT_CTYPE_LOWER		1157510	1					
ANR	1157586	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		1157510	4					
ANR	1157587	Condition	( v | BIT_CTYPE_LOWER ) != 0	172:8:4921:4946	1157510	0	True				
ANR	1157588	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		1157510	0		!=			
ANR	1157589	InclusiveOrExpression	v | BIT_CTYPE_LOWER		1157510	0		|			
ANR	1157590	Identifier	v		1157510	0					
ANR	1157591	Identifier	BIT_CTYPE_LOWER		1157510	1					
ANR	1157592	PrimaryExpression	0		1157510	1					
ANR	1157593	CompoundStatement		16:36:359:359	1157510	1					
ANR	1157594	IfStatement	if ( c >= 0xaa && c <= 0xba )		1157510	0					
ANR	1157595	Condition	c >= 0xaa && c <= 0xba	174:10:5032:5053	1157510	0	True				
ANR	1157596	AndExpression	c >= 0xaa && c <= 0xba		1157510	0		&&			
ANR	1157597	RelationalExpression	c >= 0xaa		1157510	0		>=			
ANR	1157598	Identifier	c		1157510	0					
ANR	1157599	PrimaryExpression	0xaa		1157510	1					
ANR	1157600	RelationalExpression	c <= 0xba		1157510	1		<=			
ANR	1157601	Identifier	c		1157510	0					
ANR	1157602	PrimaryExpression	0xba		1157510	1					
ANR	1157603	ReturnStatement	return FALSE ;	175:1:5057:5069	1157510	1	True				
ANR	1157604	Identifier	FALSE		1157510	0					
ANR	1157605	ElseStatement	else		1157510	0					
ANR	1157606	ReturnStatement	return TRUE ;	177:1:5083:5094	1157510	0	True				
ANR	1157607	Identifier	TRUE		1157510	0					
ANR	1157608	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	179:4:5106:5136	1157510	5	True				
ANR	1157609	ConditionalExpression	v != 0 ? TRUE : FALSE		1157510	0					
ANR	1157610	Condition	v != 0		1157510	0					
ANR	1157611	EqualityExpression	v != 0		1157510	0		!=			
ANR	1157612	Identifier	v		1157510	0					
ANR	1157613	PrimaryExpression	0		1157510	1					
ANR	1157614	Identifier	TRUE		1157510	1					
ANR	1157615	Identifier	FALSE		1157510	2					
ANR	1157616	ReturnStatement	return FALSE ;	182:2:5145:5157	1157510	3	True				
ANR	1157617	Identifier	FALSE		1157510	0					
ANR	1157618	ReturnType	static int		1157510	1					
ANR	1157619	Identifier	utf16le_is_mbc_ambiguous		1157510	2					
ANR	1157620	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		1157510	3					
ANR	1157621	Parameter	OnigCaseFoldType flag	155:25:4526:4546	1157510	0	True				
ANR	1157622	ParameterType	OnigCaseFoldType		1157510	0					
ANR	1157623	Identifier	flag		1157510	1					
ANR	1157624	Parameter	const UChar * * pp	155:48:4549:4564	1157510	1	True				
ANR	1157625	ParameterType	const UChar * *		1157510	0					
ANR	1157626	Identifier	pp		1157510	1					
ANR	1157627	Parameter	const UChar * end	156:4:4571:4586	1157510	2	True				
ANR	1157628	ParameterType	const UChar *		1157510	0					
ANR	1157629	Identifier	end		1157510	1					
ANR	1157630	CFGEntryNode	ENTRY		1157510		True				
ANR	1157631	CFGExitNode	EXIT		1157510		True				
ANR	1157632	Symbol	pp		1157510						
ANR	1157633	Symbol	flag		1157510						
ANR	1157634	Symbol	c		1157510						
ANR	1157635	Symbol	* pp		1157510						
ANR	1157636	Symbol	* EncLen_UTF16		1157510						
ANR	1157637	Symbol	TRUE		1157510						
ANR	1157638	Symbol	* ( p + 1 )		1157510						
ANR	1157639	Symbol	p		1157510						
ANR	1157640	Symbol	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		1157510						
ANR	1157641	Symbol	* * ( p + 1 )		1157510						
ANR	1157642	Symbol	v		1157510						
ANR	1157643	Symbol	BIT_CTYPE_LOWER		1157510						
ANR	1157644	Symbol	end		1157510						
ANR	1157645	Symbol	* p		1157510						
ANR	1157646	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1157510						
ANR	1157647	Symbol	BIT_CTYPE_UPPER		1157510						
ANR	1157648	Symbol	FALSE		1157510						
ANR	1157649	Symbol	* * p		1157510						
ANR	1157650	Symbol	EncLen_UTF16		1157510						
ANR	1157651	Function	utf16le_left_adjust_char_head	186:0:5169:5425							
ANR	1157652	FunctionDef	"utf16le_left_adjust_char_head (const UChar * start , const UChar * s)"		1157651	0					
ANR	1157653	CompoundStatement		188:0:5249:5425	1157651	0					
ANR	1157654	IfStatement	if ( s <= start )		1157651	0					
ANR	1157655	Condition	s <= start	189:6:5257:5266	1157651	0	True				
ANR	1157656	RelationalExpression	s <= start		1157651	0		<=			
ANR	1157657	Identifier	s		1157651	0					
ANR	1157658	Identifier	start		1157651	1					
ANR	1157659	ReturnStatement	return ( UChar * ) s ;	189:18:5269:5286	1157651	1	True				
ANR	1157660	CastExpression	( UChar * ) s		1157651	0					
ANR	1157661	CastTarget	UChar *		1157651	0					
ANR	1157662	Identifier	s		1157651	1					
ANR	1157663	IfStatement	if ( ( s - start ) % 2 == 1 )		1157651	1					
ANR	1157664	Condition	( s - start ) % 2 == 1	191:6:5295:5314	1157651	0	True				
ANR	1157665	EqualityExpression	( s - start ) % 2 == 1		1157651	0		==			
ANR	1157666	MultiplicativeExpression	( s - start ) % 2		1157651	0		%			
ANR	1157667	AdditiveExpression	s - start		1157651	0		-			
ANR	1157668	Identifier	s		1157651	0					
ANR	1157669	Identifier	start		1157651	1					
ANR	1157670	PrimaryExpression	2		1157651	1					
ANR	1157671	PrimaryExpression	1		1157651	1					
ANR	1157672	CompoundStatement		4:28:67:67	1157651	1					
ANR	1157673	ExpressionStatement	s --	192:4:5323:5326	1157651	0	True				
ANR	1157674	PostIncDecOperationExpression	s --		1157651	0					
ANR	1157675	Identifier	s		1157651	0					
ANR	1157676	IncDec	--		1157651	1					
ANR	1157677	IfStatement	if ( UTF16_IS_SURROGATE_SECOND ( * ( s + 1 ) ) && s > start + 1 )		1157651	2					
ANR	1157678	Condition	UTF16_IS_SURROGATE_SECOND ( * ( s + 1 ) ) && s > start + 1	195:6:5339:5388	1157651	0	True				
ANR	1157679	AndExpression	UTF16_IS_SURROGATE_SECOND ( * ( s + 1 ) ) && s > start + 1		1157651	0		&&			
ANR	1157680	CallExpression	UTF16_IS_SURROGATE_SECOND ( * ( s + 1 ) )		1157651	0					
ANR	1157681	Callee	UTF16_IS_SURROGATE_SECOND		1157651	0					
ANR	1157682	Identifier	UTF16_IS_SURROGATE_SECOND		1157651	0					
ANR	1157683	ArgumentList	* ( s + 1 )		1157651	1					
ANR	1157684	Argument	* ( s + 1 )		1157651	0					
ANR	1157685	UnaryOperationExpression	* ( s + 1 )		1157651	0					
ANR	1157686	UnaryOperator	*		1157651	0					
ANR	1157687	AdditiveExpression	s + 1		1157651	1		+			
ANR	1157688	Identifier	s		1157651	0					
ANR	1157689	PrimaryExpression	1		1157651	1					
ANR	1157690	RelationalExpression	s > start + 1		1157651	1		>			
ANR	1157691	Identifier	s		1157651	0					
ANR	1157692	AdditiveExpression	start + 1		1157651	1		+			
ANR	1157693	Identifier	start		1157651	0					
ANR	1157694	PrimaryExpression	1		1157651	1					
ANR	1157695	ExpressionStatement	s -= 2	196:4:5395:5401	1157651	1	True				
ANR	1157696	AssignmentExpression	s -= 2		1157651	0		-=			
ANR	1157697	Identifier	s		1157651	0					
ANR	1157698	PrimaryExpression	2		1157651	1					
ANR	1157699	ReturnStatement	return ( UChar * ) s ;	198:2:5406:5423	1157651	3	True				
ANR	1157700	CastExpression	( UChar * ) s		1157651	0					
ANR	1157701	CastTarget	UChar *		1157651	0					
ANR	1157702	Identifier	s		1157651	1					
ANR	1157703	ReturnType	static UChar *		1157651	1					
ANR	1157704	Identifier	utf16le_left_adjust_char_head		1157651	2					
ANR	1157705	ParameterList	"const UChar * start , const UChar * s"		1157651	3					
ANR	1157706	Parameter	const UChar * start	187:30:5213:5230	1157651	0	True				
ANR	1157707	ParameterType	const UChar *		1157651	0					
ANR	1157708	Identifier	start		1157651	1					
ANR	1157709	Parameter	const UChar * s	187:50:5233:5246	1157651	1	True				
ANR	1157710	ParameterType	const UChar *		1157651	0					
ANR	1157711	Identifier	s		1157651	1					
ANR	1157712	CFGEntryNode	ENTRY		1157651		True				
ANR	1157713	CFGExitNode	EXIT		1157651		True				
ANR	1157714	Symbol	s		1157651						
ANR	1157715	Symbol	* ( s + 1 )		1157651						
ANR	1157716	Symbol	start		1157651						
ANR	1157717	Symbol	* s		1157651						
ANR	1157718	Symbol	UTF16_IS_SURROGATE_SECOND		1157651						
ANR	1157719	Function	utf16le_get_case_fold_codes_by_str	201:0:5428:5683							
ANR	1157720	FunctionDef	"utf16le_get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		1157719	0					
ANR	1157721	CompoundStatement		204:0:5573:5683	1157719	0					
ANR	1157722	ReturnStatement	"return onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF16_LE , flag , p , end , items ) ;"	205:2:5577:5681	1157719	0	True				
ANR	1157723	CallExpression	"onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF16_LE , flag , p , end , items )"		1157719	0					
ANR	1157724	Callee	onigenc_unicode_get_case_fold_codes_by_str		1157719	0					
ANR	1157725	Identifier	onigenc_unicode_get_case_fold_codes_by_str		1157719	0					
ANR	1157726	ArgumentList	ONIG_ENCODING_UTF16_LE		1157719	1					
ANR	1157727	Argument	ONIG_ENCODING_UTF16_LE		1157719	0					
ANR	1157728	Identifier	ONIG_ENCODING_UTF16_LE		1157719	0					
ANR	1157729	Argument	flag		1157719	1					
ANR	1157730	Identifier	flag		1157719	0					
ANR	1157731	Argument	p		1157719	2					
ANR	1157732	Identifier	p		1157719	0					
ANR	1157733	Argument	end		1157719	3					
ANR	1157734	Identifier	end		1157719	0					
ANR	1157735	Argument	items		1157719	4					
ANR	1157736	Identifier	items		1157719	0					
ANR	1157737	ReturnType	static int		1157719	1					
ANR	1157738	Identifier	utf16le_get_case_fold_codes_by_str		1157719	2					
ANR	1157739	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		1157719	3					
ANR	1157740	Parameter	OnigCaseFoldType flag	202:35:5474:5494	1157719	0	True				
ANR	1157741	ParameterType	OnigCaseFoldType		1157719	0					
ANR	1157742	Identifier	flag		1157719	1					
ANR	1157743	Parameter	const OnigUChar * p	203:4:5501:5518	1157719	1	True				
ANR	1157744	ParameterType	const OnigUChar *		1157719	0					
ANR	1157745	Identifier	p		1157719	1					
ANR	1157746	Parameter	const OnigUChar * end	203:24:5521:5540	1157719	2	True				
ANR	1157747	ParameterType	const OnigUChar *		1157719	0					
ANR	1157748	Identifier	end		1157719	1					
ANR	1157749	Parameter	OnigCaseFoldCodeItem items [ ]	203:46:5543:5570	1157719	3	True				
ANR	1157750	ParameterType	OnigCaseFoldCodeItem [ ]		1157719	0					
ANR	1157751	Identifier	items		1157719	1					
ANR	1157752	CFGEntryNode	ENTRY		1157719		True				
ANR	1157753	CFGExitNode	EXIT		1157719		True				
ANR	1157754	Symbol	p		1157719						
ANR	1157755	Symbol	flag		1157719						
ANR	1157756	Symbol	onigenc_unicode_get_case_fold_codes_by_str		1157719						
ANR	1157757	Symbol	end		1157719						
ANR	1157758	Symbol	items		1157719						
ANR	1157759	Symbol	ONIG_ENCODING_UTF16_LE		1157719						
ANR	1157760	DeclStmt									
ANR	1157761	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingUTF16_LE
