command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1160572	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_oniguruma_regcomp.c								
ANR	1160573	DeclStmt									
ANR	1160574	Decl							OnigCaseFoldType	OnigCaseFoldType	OnigDefaultCaseFoldFlag
ANR	1160575	Function	onig_get_default_case_fold_flag	34:0:1678:1776							
ANR	1160576	FunctionDef	onig_get_default_case_fold_flag ()		1160575	0					
ANR	1160577	CompoundStatement		36:0:1740:1776	1160575	0					
ANR	1160578	ReturnStatement	return OnigDefaultCaseFoldFlag ;	37:2:1744:1774	1160575	0	True				
ANR	1160579	Identifier	OnigDefaultCaseFoldFlag		1160575	0					
ANR	1160580	ReturnType	extern OnigCaseFoldType		1160575	1					
ANR	1160581	Identifier	onig_get_default_case_fold_flag		1160575	2					
ANR	1160582	ParameterList			1160575	3					
ANR	1160583	CFGEntryNode	ENTRY		1160575		True				
ANR	1160584	CFGExitNode	EXIT		1160575		True				
ANR	1160585	Symbol	OnigDefaultCaseFoldFlag		1160575						
ANR	1160586	Function	onig_set_default_case_fold_flag	40:0:1779:1913							
ANR	1160587	FunctionDef	onig_set_default_case_fold_flag (OnigCaseFoldType case_fold_flag)		1160586	0					
ANR	1160588	CompoundStatement		42:0:1855:1913	1160586	0					
ANR	1160589	ExpressionStatement	OnigDefaultCaseFoldFlag = case_fold_flag	43:2:1859:1899	1160586	0	True				
ANR	1160590	AssignmentExpression	OnigDefaultCaseFoldFlag = case_fold_flag		1160586	0		=			
ANR	1160591	Identifier	OnigDefaultCaseFoldFlag		1160586	0					
ANR	1160592	Identifier	case_fold_flag		1160586	1					
ANR	1160593	ReturnStatement	return 0 ;	44:2:1903:1911	1160586	1	True				
ANR	1160594	PrimaryExpression	0		1160586	0					
ANR	1160595	ReturnType	extern int		1160586	1					
ANR	1160596	Identifier	onig_set_default_case_fold_flag		1160586	2					
ANR	1160597	ParameterList	OnigCaseFoldType case_fold_flag		1160586	3					
ANR	1160598	Parameter	OnigCaseFoldType case_fold_flag	41:32:1822:1852	1160586	0	True				
ANR	1160599	ParameterType	OnigCaseFoldType		1160586	0					
ANR	1160600	Identifier	case_fold_flag		1160586	1					
ANR	1160601	CFGEntryNode	ENTRY		1160586		True				
ANR	1160602	CFGExitNode	EXIT		1160586		True				
ANR	1160603	Symbol	OnigDefaultCaseFoldFlag		1160586						
ANR	1160604	Symbol	case_fold_flag		1160586						
ANR	1160605	DeclStmt									
ANR	1160606	Decl							unsigned char	unsigned char [ WORD_ALIGNMENT_SIZE ]	PadBuf
ANR	1160607	Function	str_dup	52:0:2014:2253							
ANR	1160608	FunctionDef	"str_dup (UChar * s , UChar * end)"		1160607	0					
ANR	1160609	CompoundStatement		54:0:2058:2253	1160607	0					
ANR	1160610	IdentifierDeclStatement	int len = end - s ;	55:2:2062:2079	1160607	0	True				
ANR	1160611	IdentifierDecl	len = end - s		1160607	0					
ANR	1160612	IdentifierDeclType	int		1160607	0					
ANR	1160613	Identifier	len		1160607	1					
ANR	1160614	AssignmentExpression	len = end - s		1160607	2		=			
ANR	1160615	Identifier	len		1160607	0					
ANR	1160616	AdditiveExpression	end - s		1160607	1		-			
ANR	1160617	Identifier	end		1160607	0					
ANR	1160618	Identifier	s		1160607	1					
ANR	1160619	IfStatement	if ( len > 0 )		1160607	1					
ANR	1160620	Condition	len > 0	57:6:2088:2094	1160607	0	True				
ANR	1160621	RelationalExpression	len > 0		1160607	0		>			
ANR	1160622	Identifier	len		1160607	0					
ANR	1160623	PrimaryExpression	0		1160607	1					
ANR	1160624	CompoundStatement		5:4:44:80	1160607	1					
ANR	1160625	IdentifierDeclStatement	UChar * r = ( UChar * ) xmalloc ( len + 1 ) ;	58:4:2103:2139	1160607	0	True				
ANR	1160626	IdentifierDecl	* r = ( UChar * ) xmalloc ( len + 1 )		1160607	0					
ANR	1160627	IdentifierDeclType	UChar *		1160607	0					
ANR	1160628	Identifier	r		1160607	1					
ANR	1160629	AssignmentExpression	* r = ( UChar * ) xmalloc ( len + 1 )		1160607	2		=			
ANR	1160630	Identifier	r		1160607	0					
ANR	1160631	CastExpression	( UChar * ) xmalloc ( len + 1 )		1160607	1					
ANR	1160632	CastTarget	UChar *		1160607	0					
ANR	1160633	CallExpression	xmalloc ( len + 1 )		1160607	1					
ANR	1160634	Callee	xmalloc		1160607	0					
ANR	1160635	Identifier	xmalloc		1160607	0					
ANR	1160636	ArgumentList	len + 1		1160607	1					
ANR	1160637	Argument	len + 1		1160607	0					
ANR	1160638	AdditiveExpression	len + 1		1160607	0		+			
ANR	1160639	Identifier	len		1160607	0					
ANR	1160640	PrimaryExpression	1		1160607	1					
ANR	1160641	ExpressionStatement	CHECK_NULL_RETURN ( r )	59:4:2145:2165	1160607	1	True				
ANR	1160642	CallExpression	CHECK_NULL_RETURN ( r )		1160607	0					
ANR	1160643	Callee	CHECK_NULL_RETURN		1160607	0					
ANR	1160644	Identifier	CHECK_NULL_RETURN		1160607	0					
ANR	1160645	ArgumentList	r		1160607	1					
ANR	1160646	Argument	r		1160607	0					
ANR	1160647	Identifier	r		1160607	0					
ANR	1160648	ExpressionStatement	"xmemcpy ( r , s , len )"	60:4:2171:2189	1160607	2	True				
ANR	1160649	CallExpression	"xmemcpy ( r , s , len )"		1160607	0					
ANR	1160650	Callee	xmemcpy		1160607	0					
ANR	1160651	Identifier	xmemcpy		1160607	0					
ANR	1160652	ArgumentList	r		1160607	1					
ANR	1160653	Argument	r		1160607	0					
ANR	1160654	Identifier	r		1160607	0					
ANR	1160655	Argument	s		1160607	1					
ANR	1160656	Identifier	s		1160607	0					
ANR	1160657	Argument	len		1160607	2					
ANR	1160658	Identifier	len		1160607	0					
ANR	1160659	ExpressionStatement	r [ len ] = ( UChar ) 0	61:4:2195:2213	1160607	3	True				
ANR	1160660	AssignmentExpression	r [ len ] = ( UChar ) 0		1160607	0		=			
ANR	1160661	ArrayIndexing	r [ len ]		1160607	0					
ANR	1160662	Identifier	r		1160607	0					
ANR	1160663	Identifier	len		1160607	1					
ANR	1160664	CastExpression	( UChar ) 0		1160607	1					
ANR	1160665	CastTarget	UChar		1160607	0					
ANR	1160666	PrimaryExpression	0		1160607	1					
ANR	1160667	ReturnStatement	return r ;	62:4:2219:2227	1160607	4	True				
ANR	1160668	Identifier	r		1160607	0					
ANR	1160669	ElseStatement	else		1160607	0					
ANR	1160670	ReturnStatement	return NULL ;	64:7:2240:2251	1160607	0	True				
ANR	1160671	Identifier	NULL		1160607	0					
ANR	1160672	ReturnType	static UChar *		1160607	1					
ANR	1160673	Identifier	str_dup		1160607	2					
ANR	1160674	ParameterList	"UChar * s , UChar * end"		1160607	3					
ANR	1160675	Parameter	UChar * s	53:8:2036:2043	1160607	0	True				
ANR	1160676	ParameterType	UChar *		1160607	0					
ANR	1160677	Identifier	s		1160607	1					
ANR	1160678	Parameter	UChar * end	53:18:2046:2055	1160607	1	True				
ANR	1160679	ParameterType	UChar *		1160607	0					
ANR	1160680	Identifier	end		1160607	1					
ANR	1160681	CFGEntryNode	ENTRY		1160607		True				
ANR	1160682	CFGExitNode	EXIT		1160607		True				
ANR	1160683	Symbol	r		1160607						
ANR	1160684	Symbol	s		1160607						
ANR	1160685	Symbol	NULL		1160607						
ANR	1160686	Symbol	len		1160607						
ANR	1160687	Symbol	xmalloc		1160607						
ANR	1160688	Symbol	end		1160607						
ANR	1160689	Symbol	* r		1160607						
ANR	1160690	Symbol	* len		1160607						
ANR	1160691	Function	swap_node	67:0:2256:2691							
ANR	1160692	FunctionDef	"swap_node (Node * a , Node * b)"		1160691	0					
ANR	1160693	CompoundStatement		69:0:2296:2691	1160691	0					
ANR	1160694	IdentifierDeclStatement	Node c ;	70:2:2300:2306	1160691	0	True				
ANR	1160695	IdentifierDecl	c		1160691	0					
ANR	1160696	IdentifierDeclType	Node		1160691	0					
ANR	1160697	Identifier	c		1160691	1					
ANR	1160698	ExpressionStatement	c = * a	71:2:2310:2316	1160691	1	True				
ANR	1160699	AssignmentExpression	c = * a		1160691	0		=			
ANR	1160700	Identifier	c		1160691	0					
ANR	1160701	UnaryOperationExpression	* a		1160691	1					
ANR	1160702	UnaryOperator	*		1160691	0					
ANR	1160703	Identifier	a		1160691	1					
ANR	1160704	ExpressionStatement	* a = * b	71:10:2318:2325	1160691	2	True				
ANR	1160705	AssignmentExpression	* a = * b		1160691	0		=			
ANR	1160706	UnaryOperationExpression	* a		1160691	0					
ANR	1160707	UnaryOperator	*		1160691	0					
ANR	1160708	Identifier	a		1160691	1					
ANR	1160709	UnaryOperationExpression	* b		1160691	1					
ANR	1160710	UnaryOperator	*		1160691	0					
ANR	1160711	Identifier	b		1160691	1					
ANR	1160712	ExpressionStatement	* b = c	71:19:2327:2333	1160691	3	True				
ANR	1160713	AssignmentExpression	* b = c		1160691	0		=			
ANR	1160714	UnaryOperationExpression	* b		1160691	0					
ANR	1160715	UnaryOperator	*		1160691	0					
ANR	1160716	Identifier	b		1160691	1					
ANR	1160717	Identifier	c		1160691	1					
ANR	1160718	IfStatement	if ( NTYPE ( a ) == NT_STR )		1160691	4					
ANR	1160719	Condition	NTYPE ( a ) == NT_STR	73:6:2342:2359	1160691	0	True				
ANR	1160720	EqualityExpression	NTYPE ( a ) == NT_STR		1160691	0		==			
ANR	1160721	CallExpression	NTYPE ( a )		1160691	0					
ANR	1160722	Callee	NTYPE		1160691	0					
ANR	1160723	Identifier	NTYPE		1160691	0					
ANR	1160724	ArgumentList	a		1160691	1					
ANR	1160725	Argument	a		1160691	0					
ANR	1160726	Identifier	a		1160691	0					
ANR	1160727	Identifier	NT_STR		1160691	1					
ANR	1160728	CompoundStatement		6:4:71:92	1160691	1					
ANR	1160729	IdentifierDeclStatement	StrNode * sn = NSTR ( a ) ;	74:4:2368:2389	1160691	0	True				
ANR	1160730	IdentifierDecl	* sn = NSTR ( a )		1160691	0					
ANR	1160731	IdentifierDeclType	StrNode *		1160691	0					
ANR	1160732	Identifier	sn		1160691	1					
ANR	1160733	AssignmentExpression	* sn = NSTR ( a )		1160691	2		=			
ANR	1160734	Identifier	sn		1160691	0					
ANR	1160735	CallExpression	NSTR ( a )		1160691	1					
ANR	1160736	Callee	NSTR		1160691	0					
ANR	1160737	Identifier	NSTR		1160691	0					
ANR	1160738	ArgumentList	a		1160691	1					
ANR	1160739	Argument	a		1160691	0					
ANR	1160740	Identifier	a		1160691	0					
ANR	1160741	IfStatement	if ( sn -> capa == 0 )		1160691	1					
ANR	1160742	Condition	sn -> capa == 0	75:8:2399:2411	1160691	0	True				
ANR	1160743	EqualityExpression	sn -> capa == 0		1160691	0		==			
ANR	1160744	PtrMemberAccess	sn -> capa		1160691	0					
ANR	1160745	Identifier	sn		1160691	0					
ANR	1160746	Identifier	capa		1160691	1					
ANR	1160747	PrimaryExpression	0		1160691	1					
ANR	1160748	CompoundStatement		8:6:125:150	1160691	1					
ANR	1160749	IdentifierDeclStatement	int len = sn -> end - sn -> s ;	76:6:2422:2447	1160691	0	True				
ANR	1160750	IdentifierDecl	len = sn -> end - sn -> s		1160691	0					
ANR	1160751	IdentifierDeclType	int		1160691	0					
ANR	1160752	Identifier	len		1160691	1					
ANR	1160753	AssignmentExpression	len = sn -> end - sn -> s		1160691	2		=			
ANR	1160754	Identifier	len		1160691	0					
ANR	1160755	AdditiveExpression	sn -> end - sn -> s		1160691	1		-			
ANR	1160756	PtrMemberAccess	sn -> end		1160691	0					
ANR	1160757	Identifier	sn		1160691	0					
ANR	1160758	Identifier	end		1160691	1					
ANR	1160759	PtrMemberAccess	sn -> s		1160691	1					
ANR	1160760	Identifier	sn		1160691	0					
ANR	1160761	Identifier	s		1160691	1					
ANR	1160762	ExpressionStatement	sn -> s = sn -> buf	77:6:2455:2472	1160691	1	True				
ANR	1160763	AssignmentExpression	sn -> s = sn -> buf		1160691	0		=			
ANR	1160764	PtrMemberAccess	sn -> s		1160691	0					
ANR	1160765	Identifier	sn		1160691	0					
ANR	1160766	Identifier	s		1160691	1					
ANR	1160767	PtrMemberAccess	sn -> buf		1160691	1					
ANR	1160768	Identifier	sn		1160691	0					
ANR	1160769	Identifier	buf		1160691	1					
ANR	1160770	ExpressionStatement	sn -> end = sn -> s + len	78:6:2480:2501	1160691	2	True				
ANR	1160771	AssignmentExpression	sn -> end = sn -> s + len		1160691	0		=			
ANR	1160772	PtrMemberAccess	sn -> end		1160691	0					
ANR	1160773	Identifier	sn		1160691	0					
ANR	1160774	Identifier	end		1160691	1					
ANR	1160775	AdditiveExpression	sn -> s + len		1160691	1		+			
ANR	1160776	PtrMemberAccess	sn -> s		1160691	0					
ANR	1160777	Identifier	sn		1160691	0					
ANR	1160778	Identifier	s		1160691	1					
ANR	1160779	Identifier	len		1160691	1					
ANR	1160780	IfStatement	if ( NTYPE ( b ) == NT_STR )		1160691	5					
ANR	1160781	Condition	NTYPE ( b ) == NT_STR	82:6:2520:2537	1160691	0	True				
ANR	1160782	EqualityExpression	NTYPE ( b ) == NT_STR		1160691	0		==			
ANR	1160783	CallExpression	NTYPE ( b )		1160691	0					
ANR	1160784	Callee	NTYPE		1160691	0					
ANR	1160785	Identifier	NTYPE		1160691	0					
ANR	1160786	ArgumentList	b		1160691	1					
ANR	1160787	Argument	b		1160691	0					
ANR	1160788	Identifier	b		1160691	0					
ANR	1160789	Identifier	NT_STR		1160691	1					
ANR	1160790	CompoundStatement		15:4:249:270	1160691	1					
ANR	1160791	IdentifierDeclStatement	StrNode * sn = NSTR ( b ) ;	83:4:2546:2567	1160691	0	True				
ANR	1160792	IdentifierDecl	* sn = NSTR ( b )		1160691	0					
ANR	1160793	IdentifierDeclType	StrNode *		1160691	0					
ANR	1160794	Identifier	sn		1160691	1					
ANR	1160795	AssignmentExpression	* sn = NSTR ( b )		1160691	2		=			
ANR	1160796	Identifier	sn		1160691	0					
ANR	1160797	CallExpression	NSTR ( b )		1160691	1					
ANR	1160798	Callee	NSTR		1160691	0					
ANR	1160799	Identifier	NSTR		1160691	0					
ANR	1160800	ArgumentList	b		1160691	1					
ANR	1160801	Argument	b		1160691	0					
ANR	1160802	Identifier	b		1160691	0					
ANR	1160803	IfStatement	if ( sn -> capa == 0 )		1160691	1					
ANR	1160804	Condition	sn -> capa == 0	84:8:2577:2589	1160691	0	True				
ANR	1160805	EqualityExpression	sn -> capa == 0		1160691	0		==			
ANR	1160806	PtrMemberAccess	sn -> capa		1160691	0					
ANR	1160807	Identifier	sn		1160691	0					
ANR	1160808	Identifier	capa		1160691	1					
ANR	1160809	PrimaryExpression	0		1160691	1					
ANR	1160810	CompoundStatement		17:6:303:328	1160691	1					
ANR	1160811	IdentifierDeclStatement	int len = sn -> end - sn -> s ;	85:6:2600:2625	1160691	0	True				
ANR	1160812	IdentifierDecl	len = sn -> end - sn -> s		1160691	0					
ANR	1160813	IdentifierDeclType	int		1160691	0					
ANR	1160814	Identifier	len		1160691	1					
ANR	1160815	AssignmentExpression	len = sn -> end - sn -> s		1160691	2		=			
ANR	1160816	Identifier	len		1160691	0					
ANR	1160817	AdditiveExpression	sn -> end - sn -> s		1160691	1		-			
ANR	1160818	PtrMemberAccess	sn -> end		1160691	0					
ANR	1160819	Identifier	sn		1160691	0					
ANR	1160820	Identifier	end		1160691	1					
ANR	1160821	PtrMemberAccess	sn -> s		1160691	1					
ANR	1160822	Identifier	sn		1160691	0					
ANR	1160823	Identifier	s		1160691	1					
ANR	1160824	ExpressionStatement	sn -> s = sn -> buf	86:6:2633:2650	1160691	1	True				
ANR	1160825	AssignmentExpression	sn -> s = sn -> buf		1160691	0		=			
ANR	1160826	PtrMemberAccess	sn -> s		1160691	0					
ANR	1160827	Identifier	sn		1160691	0					
ANR	1160828	Identifier	s		1160691	1					
ANR	1160829	PtrMemberAccess	sn -> buf		1160691	1					
ANR	1160830	Identifier	sn		1160691	0					
ANR	1160831	Identifier	buf		1160691	1					
ANR	1160832	ExpressionStatement	sn -> end = sn -> s + len	87:6:2658:2679	1160691	2	True				
ANR	1160833	AssignmentExpression	sn -> end = sn -> s + len		1160691	0		=			
ANR	1160834	PtrMemberAccess	sn -> end		1160691	0					
ANR	1160835	Identifier	sn		1160691	0					
ANR	1160836	Identifier	end		1160691	1					
ANR	1160837	AdditiveExpression	sn -> s + len		1160691	1		+			
ANR	1160838	PtrMemberAccess	sn -> s		1160691	0					
ANR	1160839	Identifier	sn		1160691	0					
ANR	1160840	Identifier	s		1160691	1					
ANR	1160841	Identifier	len		1160691	1					
ANR	1160842	ReturnType	static void		1160691	1					
ANR	1160843	Identifier	swap_node		1160691	2					
ANR	1160844	ParameterList	"Node * a , Node * b"		1160691	3					
ANR	1160845	Parameter	Node * a	68:10:2278:2284	1160691	0	True				
ANR	1160846	ParameterType	Node *		1160691	0					
ANR	1160847	Identifier	a		1160691	1					
ANR	1160848	Parameter	Node * b	68:19:2287:2293	1160691	1	True				
ANR	1160849	ParameterType	Node *		1160691	0					
ANR	1160850	Identifier	b		1160691	1					
ANR	1160851	CFGEntryNode	ENTRY		1160691		True				
ANR	1160852	CFGExitNode	EXIT		1160691		True				
ANR	1160853	Symbol	a		1160691						
ANR	1160854	Symbol	b		1160691						
ANR	1160855	Symbol	* sn		1160691						
ANR	1160856	Symbol	c		1160691						
ANR	1160857	Symbol	sn -> buf		1160691						
ANR	1160858	Symbol	NSTR		1160691						
ANR	1160859	Symbol	* a		1160691						
ANR	1160860	Symbol	* b		1160691						
ANR	1160861	Symbol	sn -> s		1160691						
ANR	1160862	Symbol	len		1160691						
ANR	1160863	Symbol	sn -> capa		1160691						
ANR	1160864	Symbol	NTYPE		1160691						
ANR	1160865	Symbol	sn		1160691						
ANR	1160866	Symbol	sn -> end		1160691						
ANR	1160867	Symbol	NT_STR		1160691						
ANR	1160868	Function	distance_add	92:0:2694:2978							
ANR	1160869	FunctionDef	"distance_add (OnigDistance d1 , OnigDistance d2)"		1160868	0					
ANR	1160870	CompoundStatement		94:0:2761:2978	1160868	0					
ANR	1160871	IfStatement	if ( d1 == ONIG_INFINITE_DISTANCE || d2 == ONIG_INFINITE_DISTANCE )		1160868	0					
ANR	1160872	Condition	d1 == ONIG_INFINITE_DISTANCE || d2 == ONIG_INFINITE_DISTANCE	95:6:2769:2828	1160868	0	True				
ANR	1160873	OrExpression	d1 == ONIG_INFINITE_DISTANCE || d2 == ONIG_INFINITE_DISTANCE		1160868	0		||			
ANR	1160874	EqualityExpression	d1 == ONIG_INFINITE_DISTANCE		1160868	0		==			
ANR	1160875	Identifier	d1		1160868	0					
ANR	1160876	Identifier	ONIG_INFINITE_DISTANCE		1160868	1					
ANR	1160877	EqualityExpression	d2 == ONIG_INFINITE_DISTANCE		1160868	1		==			
ANR	1160878	Identifier	d2		1160868	0					
ANR	1160879	Identifier	ONIG_INFINITE_DISTANCE		1160868	1					
ANR	1160880	ReturnStatement	return ONIG_INFINITE_DISTANCE ;	96:4:2835:2864	1160868	1	True				
ANR	1160881	Identifier	ONIG_INFINITE_DISTANCE		1160868	0					
ANR	1160882	ElseStatement	else		1160868	0					
ANR	1160883	CompoundStatement		4:7:111:111	1160868	0					
ANR	1160884	IfStatement	if ( d1 <= ONIG_INFINITE_DISTANCE - d2 )		1160868	0					
ANR	1160885	Condition	d1 <= ONIG_INFINITE_DISTANCE - d2	98:8:2883:2915	1160868	0	True				
ANR	1160886	RelationalExpression	d1 <= ONIG_INFINITE_DISTANCE - d2		1160868	0		<=			
ANR	1160887	Identifier	d1		1160868	0					
ANR	1160888	AdditiveExpression	ONIG_INFINITE_DISTANCE - d2		1160868	1		-			
ANR	1160889	Identifier	ONIG_INFINITE_DISTANCE		1160868	0					
ANR	1160890	Identifier	d2		1160868	1					
ANR	1160891	ReturnStatement	return d1 + d2 ;	98:43:2918:2932	1160868	1	True				
ANR	1160892	AdditiveExpression	d1 + d2		1160868	0		+			
ANR	1160893	Identifier	d1		1160868	0					
ANR	1160894	Identifier	d2		1160868	1					
ANR	1160895	ElseStatement	else		1160868	0					
ANR	1160896	ReturnStatement	return ONIG_INFINITE_DISTANCE ;	99:9:2943:2972	1160868	0	True				
ANR	1160897	Identifier	ONIG_INFINITE_DISTANCE		1160868	0					
ANR	1160898	ReturnType	static OnigDistance		1160868	1					
ANR	1160899	Identifier	distance_add		1160868	2					
ANR	1160900	ParameterList	"OnigDistance d1 , OnigDistance d2"		1160868	3					
ANR	1160901	Parameter	OnigDistance d1	93:13:2727:2741	1160868	0	True				
ANR	1160902	ParameterType	OnigDistance		1160868	0					
ANR	1160903	Identifier	d1		1160868	1					
ANR	1160904	Parameter	OnigDistance d2	93:30:2744:2758	1160868	1	True				
ANR	1160905	ParameterType	OnigDistance		1160868	0					
ANR	1160906	Identifier	d2		1160868	1					
ANR	1160907	CFGEntryNode	ENTRY		1160868		True				
ANR	1160908	CFGExitNode	EXIT		1160868		True				
ANR	1160909	Symbol	ONIG_INFINITE_DISTANCE		1160868						
ANR	1160910	Symbol	d1		1160868						
ANR	1160911	Symbol	d2		1160868						
ANR	1160912	Function	distance_multiply	103:0:2981:3167							
ANR	1160913	FunctionDef	"distance_multiply (OnigDistance d , int m)"		1160912	0					
ANR	1160914	CompoundStatement		105:0:3042:3167	1160912	0					
ANR	1160915	IfStatement	if ( m == 0 )		1160912	0					
ANR	1160916	Condition	m == 0	106:6:3050:3055	1160912	0	True				
ANR	1160917	EqualityExpression	m == 0		1160912	0		==			
ANR	1160918	Identifier	m		1160912	0					
ANR	1160919	PrimaryExpression	0		1160912	1					
ANR	1160920	ReturnStatement	return 0 ;	106:14:3058:3066	1160912	1	True				
ANR	1160921	PrimaryExpression	0		1160912	0					
ANR	1160922	IfStatement	if ( d < ONIG_INFINITE_DISTANCE / m )		1160912	1					
ANR	1160923	Condition	d < ONIG_INFINITE_DISTANCE / m	108:6:3075:3104	1160912	0	True				
ANR	1160924	RelationalExpression	d < ONIG_INFINITE_DISTANCE / m		1160912	0		<			
ANR	1160925	Identifier	d		1160912	0					
ANR	1160926	MultiplicativeExpression	ONIG_INFINITE_DISTANCE / m		1160912	1		/			
ANR	1160927	Identifier	ONIG_INFINITE_DISTANCE		1160912	0					
ANR	1160928	Identifier	m		1160912	1					
ANR	1160929	ReturnStatement	return d * m ;	109:4:3111:3123	1160912	1	True				
ANR	1160930	MultiplicativeExpression	d * m		1160912	0		*			
ANR	1160931	Identifier	d		1160912	0					
ANR	1160932	Identifier	m		1160912	1					
ANR	1160933	ElseStatement	else		1160912	0					
ANR	1160934	ReturnStatement	return ONIG_INFINITE_DISTANCE ;	111:4:3136:3165	1160912	0	True				
ANR	1160935	Identifier	ONIG_INFINITE_DISTANCE		1160912	0					
ANR	1160936	ReturnType	static OnigDistance		1160912	1					
ANR	1160937	Identifier	distance_multiply		1160912	2					
ANR	1160938	ParameterList	"OnigDistance d , int m"		1160912	3					
ANR	1160939	Parameter	OnigDistance d	104:18:3019:3032	1160912	0	True				
ANR	1160940	ParameterType	OnigDistance		1160912	0					
ANR	1160941	Identifier	d		1160912	1					
ANR	1160942	Parameter	int m	104:34:3035:3039	1160912	1	True				
ANR	1160943	ParameterType	int		1160912	0					
ANR	1160944	Identifier	m		1160912	1					
ANR	1160945	CFGEntryNode	ENTRY		1160912		True				
ANR	1160946	CFGExitNode	EXIT		1160912		True				
ANR	1160947	Symbol	ONIG_INFINITE_DISTANCE		1160912						
ANR	1160948	Symbol	d		1160912						
ANR	1160949	Symbol	m		1160912						
ANR	1160950	Function	bitset_is_empty	114:0:3170:3312							
ANR	1160951	FunctionDef	bitset_is_empty (BitSetRef bs)		1160950	0					
ANR	1160952	CompoundStatement		116:0:3211:3312	1160950	0					
ANR	1160953	IdentifierDeclStatement	int i ;	117:2:3215:3220	1160950	0	True				
ANR	1160954	IdentifierDecl	i		1160950	0					
ANR	1160955	IdentifierDeclType	int		1160950	0					
ANR	1160956	Identifier	i		1160950	1					
ANR	1160957	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		1160950	1					
ANR	1160958	ForInit	i = 0 ;	118:7:3229:3234	1160950	0	True				
ANR	1160959	AssignmentExpression	i = 0		1160950	0		=			
ANR	1160960	Identifier	i		1160950	0					
ANR	1160961	PrimaryExpression	0		1160950	1					
ANR	1160962	Condition	i < ( int ) BITSET_SIZE	118:14:3236:3256	1160950	1	True				
ANR	1160963	RelationalExpression	i < ( int ) BITSET_SIZE		1160950	0		<			
ANR	1160964	Identifier	i		1160950	0					
ANR	1160965	CastExpression	( int ) BITSET_SIZE		1160950	1					
ANR	1160966	CastTarget	int		1160950	0					
ANR	1160967	Identifier	BITSET_SIZE		1160950	1					
ANR	1160968	PostIncDecOperationExpression	i ++	118:37:3259:3261	1160950	2	True				
ANR	1160969	Identifier	i		1160950	0					
ANR	1160970	IncDec	++		1160950	1					
ANR	1160971	CompoundStatement		3:42:52:52	1160950	3					
ANR	1160972	IfStatement	if ( bs [ i ] != 0 )		1160950	0					
ANR	1160973	Condition	bs [ i ] != 0	119:8:3274:3283	1160950	0	True				
ANR	1160974	EqualityExpression	bs [ i ] != 0		1160950	0		!=			
ANR	1160975	ArrayIndexing	bs [ i ]		1160950	0					
ANR	1160976	Identifier	bs		1160950	0					
ANR	1160977	Identifier	i		1160950	1					
ANR	1160978	PrimaryExpression	0		1160950	1					
ANR	1160979	ReturnStatement	return 0 ;	119:20:3286:3294	1160950	1	True				
ANR	1160980	PrimaryExpression	0		1160950	0					
ANR	1160981	ReturnStatement	return 1 ;	121:2:3302:3310	1160950	2	True				
ANR	1160982	PrimaryExpression	1		1160950	0					
ANR	1160983	ReturnType	static int		1160950	1					
ANR	1160984	Identifier	bitset_is_empty		1160950	2					
ANR	1160985	ParameterList	BitSetRef bs		1160950	3					
ANR	1160986	Parameter	BitSetRef bs	115:16:3197:3208	1160950	0	True				
ANR	1160987	ParameterType	BitSetRef		1160950	0					
ANR	1160988	Identifier	bs		1160950	1					
ANR	1160989	CFGEntryNode	ENTRY		1160950		True				
ANR	1160990	CFGExitNode	EXIT		1160950		True				
ANR	1160991	Symbol	bs		1160950						
ANR	1160992	Symbol	* i		1160950						
ANR	1160993	Symbol	* bs		1160950						
ANR	1160994	Symbol	BITSET_SIZE		1160950						
ANR	1160995	Symbol	i		1160950						
ANR	1160996	Function	bitset_on_num	125:0:3333:3486							
ANR	1160997	FunctionDef	bitset_on_num (BitSetRef bs)		1160996	0					
ANR	1160998	CompoundStatement		127:0:3372:3486	1160996	0					
ANR	1160999	IdentifierDeclStatement	"int i , n ;"	128:2:3376:3384	1160996	0	True				
ANR	1161000	IdentifierDecl	i		1160996	0					
ANR	1161001	IdentifierDeclType	int		1160996	0					
ANR	1161002	Identifier	i		1160996	1					
ANR	1161003	IdentifierDecl	n		1160996	1					
ANR	1161004	IdentifierDeclType	int		1160996	0					
ANR	1161005	Identifier	n		1160996	1					
ANR	1161006	ExpressionStatement	n = 0	130:2:3389:3394	1160996	1	True				
ANR	1161007	AssignmentExpression	n = 0		1160996	0		=			
ANR	1161008	Identifier	n		1160996	0					
ANR	1161009	PrimaryExpression	0		1160996	1					
ANR	1161010	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		1160996	2					
ANR	1161011	ForInit	i = 0 ;	131:7:3403:3408	1160996	0	True				
ANR	1161012	AssignmentExpression	i = 0		1160996	0		=			
ANR	1161013	Identifier	i		1160996	0					
ANR	1161014	PrimaryExpression	0		1160996	1					
ANR	1161015	Condition	i < SINGLE_BYTE_SIZE	131:14:3410:3429	1160996	1	True				
ANR	1161016	RelationalExpression	i < SINGLE_BYTE_SIZE		1160996	0		<			
ANR	1161017	Identifier	i		1160996	0					
ANR	1161018	Identifier	SINGLE_BYTE_SIZE		1160996	1					
ANR	1161019	PostIncDecOperationExpression	i ++	131:36:3432:3434	1160996	2	True				
ANR	1161020	Identifier	i		1160996	0					
ANR	1161021	IncDec	++		1160996	1					
ANR	1161022	CompoundStatement		5:41:64:64	1160996	3					
ANR	1161023	IfStatement	"if ( BITSET_AT ( bs , i ) )"		1160996	0					
ANR	1161024	Condition	"BITSET_AT ( bs , i )"	132:8:3447:3462	1160996	0	True				
ANR	1161025	CallExpression	"BITSET_AT ( bs , i )"		1160996	0					
ANR	1161026	Callee	BITSET_AT		1160996	0					
ANR	1161027	Identifier	BITSET_AT		1160996	0					
ANR	1161028	ArgumentList	bs		1160996	1					
ANR	1161029	Argument	bs		1160996	0					
ANR	1161030	Identifier	bs		1160996	0					
ANR	1161031	Argument	i		1160996	1					
ANR	1161032	Identifier	i		1160996	0					
ANR	1161033	ExpressionStatement	n ++	132:26:3465:3468	1160996	1	True				
ANR	1161034	PostIncDecOperationExpression	n ++		1160996	0					
ANR	1161035	Identifier	n		1160996	0					
ANR	1161036	IncDec	++		1160996	1					
ANR	1161037	ReturnStatement	return n ;	134:2:3476:3484	1160996	3	True				
ANR	1161038	Identifier	n		1160996	0					
ANR	1161039	ReturnType	static int		1160996	1					
ANR	1161040	Identifier	bitset_on_num		1160996	2					
ANR	1161041	ParameterList	BitSetRef bs		1160996	3					
ANR	1161042	Parameter	BitSetRef bs	126:14:3358:3369	1160996	0	True				
ANR	1161043	ParameterType	BitSetRef		1160996	0					
ANR	1161044	Identifier	bs		1160996	1					
ANR	1161045	CFGEntryNode	ENTRY		1160996		True				
ANR	1161046	CFGExitNode	EXIT		1160996		True				
ANR	1161047	Symbol	SINGLE_BYTE_SIZE		1160996						
ANR	1161048	Symbol	bs		1160996						
ANR	1161049	Symbol	BITSET_AT		1160996						
ANR	1161050	Symbol	i		1160996						
ANR	1161051	Symbol	n		1160996						
ANR	1161052	Function	onig_bbuf_init	138:0:3496:3754							
ANR	1161053	FunctionDef	"onig_bbuf_init (BBuf * buf , int size)"		1161052	0					
ANR	1161054	CompoundStatement		140:0:3543:3754	1161052	0					
ANR	1161055	IfStatement	if ( size <= 0 )		1161052	0					
ANR	1161056	Condition	size <= 0	141:6:3551:3559	1161052	0	True				
ANR	1161057	RelationalExpression	size <= 0		1161052	0		<=			
ANR	1161058	Identifier	size		1161052	0					
ANR	1161059	PrimaryExpression	0		1161052	1					
ANR	1161060	CompoundStatement		2:17:18:18	1161052	1					
ANR	1161061	ExpressionStatement	size = 0	142:4:3568:3578	1161052	0	True				
ANR	1161062	AssignmentExpression	size = 0		1161052	0		=			
ANR	1161063	Identifier	size		1161052	0					
ANR	1161064	PrimaryExpression	0		1161052	1					
ANR	1161065	ExpressionStatement	buf -> p = NULL	143:4:3584:3597	1161052	1	True				
ANR	1161066	AssignmentExpression	buf -> p = NULL		1161052	0		=			
ANR	1161067	PtrMemberAccess	buf -> p		1161052	0					
ANR	1161068	Identifier	buf		1161052	0					
ANR	1161069	Identifier	p		1161052	1					
ANR	1161070	Identifier	NULL		1161052	1					
ANR	1161071	ElseStatement	else		1161052	0					
ANR	1161072	CompoundStatement		6:7:66:66	1161052	0					
ANR	1161073	ExpressionStatement	buf -> p = ( UChar * ) xmalloc ( size )	146:4:3616:3647	1161052	0	True				
ANR	1161074	AssignmentExpression	buf -> p = ( UChar * ) xmalloc ( size )		1161052	0		=			
ANR	1161075	PtrMemberAccess	buf -> p		1161052	0					
ANR	1161076	Identifier	buf		1161052	0					
ANR	1161077	Identifier	p		1161052	1					
ANR	1161078	CastExpression	( UChar * ) xmalloc ( size )		1161052	1					
ANR	1161079	CastTarget	UChar *		1161052	0					
ANR	1161080	CallExpression	xmalloc ( size )		1161052	1					
ANR	1161081	Callee	xmalloc		1161052	0					
ANR	1161082	Identifier	xmalloc		1161052	0					
ANR	1161083	ArgumentList	size		1161052	1					
ANR	1161084	Argument	size		1161052	0					
ANR	1161085	Identifier	size		1161052	0					
ANR	1161086	IfStatement	if ( IS_NULL ( buf -> p ) )		1161052	1					
ANR	1161087	Condition	IS_NULL ( buf -> p )	147:8:3657:3671	1161052	0	True				
ANR	1161088	CallExpression	IS_NULL ( buf -> p )		1161052	0					
ANR	1161089	Callee	IS_NULL		1161052	0					
ANR	1161090	Identifier	IS_NULL		1161052	0					
ANR	1161091	ArgumentList	buf -> p		1161052	1					
ANR	1161092	Argument	buf -> p		1161052	0					
ANR	1161093	PtrMemberAccess	buf -> p		1161052	0					
ANR	1161094	Identifier	buf		1161052	0					
ANR	1161095	Identifier	p		1161052	1					
ANR	1161096	ReturnStatement	return ( ONIGERR_MEMORY ) ;	147:25:3674:3696	1161052	1	True				
ANR	1161097	Identifier	ONIGERR_MEMORY		1161052	0					
ANR	1161098	ExpressionStatement	buf -> alloc = size	150:2:3705:3722	1161052	1	True				
ANR	1161099	AssignmentExpression	buf -> alloc = size		1161052	0		=			
ANR	1161100	PtrMemberAccess	buf -> alloc		1161052	0					
ANR	1161101	Identifier	buf		1161052	0					
ANR	1161102	Identifier	alloc		1161052	1					
ANR	1161103	Identifier	size		1161052	1					
ANR	1161104	ExpressionStatement	buf -> used = 0	151:2:3726:3740	1161052	2	True				
ANR	1161105	AssignmentExpression	buf -> used = 0		1161052	0		=			
ANR	1161106	PtrMemberAccess	buf -> used		1161052	0					
ANR	1161107	Identifier	buf		1161052	0					
ANR	1161108	Identifier	used		1161052	1					
ANR	1161109	PrimaryExpression	0		1161052	1					
ANR	1161110	ReturnStatement	return 0 ;	152:2:3744:3752	1161052	3	True				
ANR	1161111	PrimaryExpression	0		1161052	0					
ANR	1161112	ReturnType	extern int		1161052	1					
ANR	1161113	Identifier	onig_bbuf_init		1161052	2					
ANR	1161114	ParameterList	"BBuf * buf , int size"		1161052	3					
ANR	1161115	Parameter	BBuf * buf	139:15:3522:3530	1161052	0	True				
ANR	1161116	ParameterType	BBuf *		1161052	0					
ANR	1161117	Identifier	buf		1161052	1					
ANR	1161118	Parameter	int size	139:26:3533:3540	1161052	1	True				
ANR	1161119	ParameterType	int		1161052	0					
ANR	1161120	Identifier	size		1161052	1					
ANR	1161121	CFGEntryNode	ENTRY		1161052		True				
ANR	1161122	CFGExitNode	EXIT		1161052		True				
ANR	1161123	Symbol	buf -> alloc		1161052						
ANR	1161124	Symbol	buf		1161052						
ANR	1161125	Symbol	* buf		1161052						
ANR	1161126	Symbol	NULL		1161052						
ANR	1161127	Symbol	size		1161052						
ANR	1161128	Symbol	IS_NULL		1161052						
ANR	1161129	Symbol	xmalloc		1161052						
ANR	1161130	Symbol	ONIGERR_MEMORY		1161052						
ANR	1161131	Symbol	buf -> used		1161052						
ANR	1161132	Symbol	buf -> p		1161052						
ANR	1161133	Function	unset_addr_list_init	158:0:3782:4028							
ANR	1161134	FunctionDef	"unset_addr_list_init (UnsetAddrList * uslist , int size)"		1161133	0					
ANR	1161135	CompoundStatement		160:0:3847:4028	1161133	0					
ANR	1161136	IdentifierDeclStatement	UnsetAddr * p ;	161:2:3851:3863	1161133	0	True				
ANR	1161137	IdentifierDecl	* p		1161133	0					
ANR	1161138	IdentifierDeclType	UnsetAddr *		1161133	0					
ANR	1161139	Identifier	p		1161133	1					
ANR	1161140	ExpressionStatement	p = ( UnsetAddr * ) xmalloc ( sizeof ( UnsetAddr ) * size )	163:2:3868:3917	1161133	1	True				
ANR	1161141	AssignmentExpression	p = ( UnsetAddr * ) xmalloc ( sizeof ( UnsetAddr ) * size )		1161133	0		=			
ANR	1161142	Identifier	p		1161133	0					
ANR	1161143	CastExpression	( UnsetAddr * ) xmalloc ( sizeof ( UnsetAddr ) * size )		1161133	1					
ANR	1161144	CastTarget	UnsetAddr *		1161133	0					
ANR	1161145	CallExpression	xmalloc ( sizeof ( UnsetAddr ) * size )		1161133	1					
ANR	1161146	Callee	xmalloc		1161133	0					
ANR	1161147	Identifier	xmalloc		1161133	0					
ANR	1161148	ArgumentList	sizeof ( UnsetAddr ) * size		1161133	1					
ANR	1161149	Argument	sizeof ( UnsetAddr ) * size		1161133	0					
ANR	1161150	MultiplicativeExpression	sizeof ( UnsetAddr ) * size		1161133	0		*			
ANR	1161151	SizeofExpression	sizeof ( UnsetAddr )		1161133	0					
ANR	1161152	Sizeof	sizeof		1161133	0					
ANR	1161153	SizeofOperand	UnsetAddr		1161133	1					
ANR	1161154	Identifier	size		1161133	1					
ANR	1161155	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	164:2:3921:3948	1161133	2	True				
ANR	1161156	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		1161133	0					
ANR	1161157	Callee	CHECK_NULL_RETURN_MEMERR		1161133	0					
ANR	1161158	Identifier	CHECK_NULL_RETURN_MEMERR		1161133	0					
ANR	1161159	ArgumentList	p		1161133	1					
ANR	1161160	Argument	p		1161133	0					
ANR	1161161	Identifier	p		1161133	0					
ANR	1161162	ExpressionStatement	uslist -> num = 0	165:2:3952:3969	1161133	3	True				
ANR	1161163	AssignmentExpression	uslist -> num = 0		1161133	0		=			
ANR	1161164	PtrMemberAccess	uslist -> num		1161133	0					
ANR	1161165	Identifier	uslist		1161133	0					
ANR	1161166	Identifier	num		1161133	1					
ANR	1161167	PrimaryExpression	0		1161133	1					
ANR	1161168	ExpressionStatement	uslist -> alloc = size	166:2:3973:3993	1161133	4	True				
ANR	1161169	AssignmentExpression	uslist -> alloc = size		1161133	0		=			
ANR	1161170	PtrMemberAccess	uslist -> alloc		1161133	0					
ANR	1161171	Identifier	uslist		1161133	0					
ANR	1161172	Identifier	alloc		1161133	1					
ANR	1161173	Identifier	size		1161133	1					
ANR	1161174	ExpressionStatement	uslist -> us = p	167:2:3997:4014	1161133	5	True				
ANR	1161175	AssignmentExpression	uslist -> us = p		1161133	0		=			
ANR	1161176	PtrMemberAccess	uslist -> us		1161133	0					
ANR	1161177	Identifier	uslist		1161133	0					
ANR	1161178	Identifier	us		1161133	1					
ANR	1161179	Identifier	p		1161133	1					
ANR	1161180	ReturnStatement	return 0 ;	168:2:4018:4026	1161133	6	True				
ANR	1161181	PrimaryExpression	0		1161133	0					
ANR	1161182	ReturnType	static int		1161133	1					
ANR	1161183	Identifier	unset_addr_list_init		1161133	2					
ANR	1161184	ParameterList	"UnsetAddrList * uslist , int size"		1161133	3					
ANR	1161185	Parameter	UnsetAddrList * uslist	159:21:3814:3834	1161133	0	True				
ANR	1161186	ParameterType	UnsetAddrList *		1161133	0					
ANR	1161187	Identifier	uslist		1161133	1					
ANR	1161188	Parameter	int size	159:44:3837:3844	1161133	1	True				
ANR	1161189	ParameterType	int		1161133	0					
ANR	1161190	Identifier	size		1161133	1					
ANR	1161191	CFGEntryNode	ENTRY		1161133		True				
ANR	1161192	CFGExitNode	EXIT		1161133		True				
ANR	1161193	Symbol	p		1161133						
ANR	1161194	Symbol	uslist -> num		1161133						
ANR	1161195	Symbol	uslist -> alloc		1161133						
ANR	1161196	Symbol	uslist		1161133						
ANR	1161197	Symbol	size		1161133						
ANR	1161198	Symbol	xmalloc		1161133						
ANR	1161199	Symbol	* uslist		1161133						
ANR	1161200	Symbol	uslist -> us		1161133						
ANR	1161201	Function	unset_addr_list_end	171:0:4031:4142							
ANR	1161202	FunctionDef	unset_addr_list_end (UnsetAddrList * uslist)		1161201	0					
ANR	1161203	CompoundStatement		173:0:4086:4142	1161201	0					
ANR	1161204	IfStatement	if ( IS_NOT_NULL ( uslist -> us ) )		1161201	0					
ANR	1161205	Condition	IS_NOT_NULL ( uslist -> us )	174:6:4094:4116	1161201	0	True				
ANR	1161206	CallExpression	IS_NOT_NULL ( uslist -> us )		1161201	0					
ANR	1161207	Callee	IS_NOT_NULL		1161201	0					
ANR	1161208	Identifier	IS_NOT_NULL		1161201	0					
ANR	1161209	ArgumentList	uslist -> us		1161201	1					
ANR	1161210	Argument	uslist -> us		1161201	0					
ANR	1161211	PtrMemberAccess	uslist -> us		1161201	0					
ANR	1161212	Identifier	uslist		1161201	0					
ANR	1161213	Identifier	us		1161201	1					
ANR	1161214	ExpressionStatement	xfree ( uslist -> us )	175:4:4123:4140	1161201	1	True				
ANR	1161215	CallExpression	xfree ( uslist -> us )		1161201	0					
ANR	1161216	Callee	xfree		1161201	0					
ANR	1161217	Identifier	xfree		1161201	0					
ANR	1161218	ArgumentList	uslist -> us		1161201	1					
ANR	1161219	Argument	uslist -> us		1161201	0					
ANR	1161220	PtrMemberAccess	uslist -> us		1161201	0					
ANR	1161221	Identifier	uslist		1161201	0					
ANR	1161222	Identifier	us		1161201	1					
ANR	1161223	ReturnType	static void		1161201	1					
ANR	1161224	Identifier	unset_addr_list_end		1161201	2					
ANR	1161225	ParameterList	UnsetAddrList * uslist		1161201	3					
ANR	1161226	Parameter	UnsetAddrList * uslist	172:20:4063:4083	1161201	0	True				
ANR	1161227	ParameterType	UnsetAddrList *		1161201	0					
ANR	1161228	Identifier	uslist		1161201	1					
ANR	1161229	CFGEntryNode	ENTRY		1161201		True				
ANR	1161230	CFGExitNode	EXIT		1161201		True				
ANR	1161231	Symbol	uslist		1161201						
ANR	1161232	Symbol	IS_NOT_NULL		1161201						
ANR	1161233	Symbol	* uslist		1161201						
ANR	1161234	Symbol	uslist -> us		1161201						
ANR	1161235	Function	unset_addr_list_add	178:0:4145:4599							
ANR	1161236	FunctionDef	"unset_addr_list_add (UnsetAddrList * uslist , int offset , struct _Node * node)"		1161235	0					
ANR	1161237	CompoundStatement		180:0:4231:4599	1161235	0					
ANR	1161238	IdentifierDeclStatement	UnsetAddr * p ;	181:2:4235:4247	1161235	0	True				
ANR	1161239	IdentifierDecl	* p		1161235	0					
ANR	1161240	IdentifierDeclType	UnsetAddr *		1161235	0					
ANR	1161241	Identifier	p		1161235	1					
ANR	1161242	IdentifierDeclStatement	int size ;	182:2:4251:4259	1161235	1	True				
ANR	1161243	IdentifierDecl	size		1161235	0					
ANR	1161244	IdentifierDeclType	int		1161235	0					
ANR	1161245	Identifier	size		1161235	1					
ANR	1161246	IfStatement	if ( uslist -> num >= uslist -> alloc )		1161235	2					
ANR	1161247	Condition	uslist -> num >= uslist -> alloc	184:6:4268:4295	1161235	0	True				
ANR	1161248	RelationalExpression	uslist -> num >= uslist -> alloc		1161235	0		>=			
ANR	1161249	PtrMemberAccess	uslist -> num		1161235	0					
ANR	1161250	Identifier	uslist		1161235	0					
ANR	1161251	Identifier	num		1161235	1					
ANR	1161252	PtrMemberAccess	uslist -> alloc		1161235	1					
ANR	1161253	Identifier	uslist		1161235	0					
ANR	1161254	Identifier	alloc		1161235	1					
ANR	1161255	CompoundStatement		5:36:66:66	1161235	1					
ANR	1161256	ExpressionStatement	size = uslist -> alloc * 2	185:4:4304:4328	1161235	0	True				
ANR	1161257	AssignmentExpression	size = uslist -> alloc * 2		1161235	0		=			
ANR	1161258	Identifier	size		1161235	0					
ANR	1161259	MultiplicativeExpression	uslist -> alloc * 2		1161235	1		*			
ANR	1161260	PtrMemberAccess	uslist -> alloc		1161235	0					
ANR	1161261	Identifier	uslist		1161235	0					
ANR	1161262	Identifier	alloc		1161235	1					
ANR	1161263	PrimaryExpression	2		1161235	1					
ANR	1161264	ExpressionStatement	"p = ( UnsetAddr * ) xrealloc ( uslist -> us , sizeof ( UnsetAddr ) * size )"	186:4:4334:4397	1161235	1	True				
ANR	1161265	AssignmentExpression	"p = ( UnsetAddr * ) xrealloc ( uslist -> us , sizeof ( UnsetAddr ) * size )"		1161235	0		=			
ANR	1161266	Identifier	p		1161235	0					
ANR	1161267	CastExpression	"( UnsetAddr * ) xrealloc ( uslist -> us , sizeof ( UnsetAddr ) * size )"		1161235	1					
ANR	1161268	CastTarget	UnsetAddr *		1161235	0					
ANR	1161269	CallExpression	"xrealloc ( uslist -> us , sizeof ( UnsetAddr ) * size )"		1161235	1					
ANR	1161270	Callee	xrealloc		1161235	0					
ANR	1161271	Identifier	xrealloc		1161235	0					
ANR	1161272	ArgumentList	uslist -> us		1161235	1					
ANR	1161273	Argument	uslist -> us		1161235	0					
ANR	1161274	PtrMemberAccess	uslist -> us		1161235	0					
ANR	1161275	Identifier	uslist		1161235	0					
ANR	1161276	Identifier	us		1161235	1					
ANR	1161277	Argument	sizeof ( UnsetAddr ) * size		1161235	1					
ANR	1161278	MultiplicativeExpression	sizeof ( UnsetAddr ) * size		1161235	0		*			
ANR	1161279	SizeofExpression	sizeof ( UnsetAddr )		1161235	0					
ANR	1161280	Sizeof	sizeof		1161235	0					
ANR	1161281	SizeofOperand	UnsetAddr		1161235	1					
ANR	1161282	Identifier	size		1161235	1					
ANR	1161283	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	187:4:4403:4430	1161235	2	True				
ANR	1161284	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		1161235	0					
ANR	1161285	Callee	CHECK_NULL_RETURN_MEMERR		1161235	0					
ANR	1161286	Identifier	CHECK_NULL_RETURN_MEMERR		1161235	0					
ANR	1161287	ArgumentList	p		1161235	1					
ANR	1161288	Argument	p		1161235	0					
ANR	1161289	Identifier	p		1161235	0					
ANR	1161290	ExpressionStatement	uslist -> alloc = size	188:4:4436:4456	1161235	3	True				
ANR	1161291	AssignmentExpression	uslist -> alloc = size		1161235	0		=			
ANR	1161292	PtrMemberAccess	uslist -> alloc		1161235	0					
ANR	1161293	Identifier	uslist		1161235	0					
ANR	1161294	Identifier	alloc		1161235	1					
ANR	1161295	Identifier	size		1161235	1					
ANR	1161296	ExpressionStatement	uslist -> us = p	189:4:4462:4479	1161235	4	True				
ANR	1161297	AssignmentExpression	uslist -> us = p		1161235	0		=			
ANR	1161298	PtrMemberAccess	uslist -> us		1161235	0					
ANR	1161299	Identifier	uslist		1161235	0					
ANR	1161300	Identifier	us		1161235	1					
ANR	1161301	Identifier	p		1161235	1					
ANR	1161302	ExpressionStatement	uslist -> us [ uslist -> num ] . offset = offset	192:2:4488:4527	1161235	3	True				
ANR	1161303	AssignmentExpression	uslist -> us [ uslist -> num ] . offset = offset		1161235	0		=			
ANR	1161304	MemberAccess	uslist -> us [ uslist -> num ] . offset		1161235	0					
ANR	1161305	ArrayIndexing	uslist -> us [ uslist -> num ]		1161235	0					
ANR	1161306	PtrMemberAccess	uslist -> us		1161235	0					
ANR	1161307	Identifier	uslist		1161235	0					
ANR	1161308	Identifier	us		1161235	1					
ANR	1161309	PtrMemberAccess	uslist -> num		1161235	1					
ANR	1161310	Identifier	uslist		1161235	0					
ANR	1161311	Identifier	num		1161235	1					
ANR	1161312	Identifier	offset		1161235	1					
ANR	1161313	Identifier	offset		1161235	1					
ANR	1161314	ExpressionStatement	uslist -> us [ uslist -> num ] . target = node	193:2:4531:4568	1161235	4	True				
ANR	1161315	AssignmentExpression	uslist -> us [ uslist -> num ] . target = node		1161235	0		=			
ANR	1161316	MemberAccess	uslist -> us [ uslist -> num ] . target		1161235	0					
ANR	1161317	ArrayIndexing	uslist -> us [ uslist -> num ]		1161235	0					
ANR	1161318	PtrMemberAccess	uslist -> us		1161235	0					
ANR	1161319	Identifier	uslist		1161235	0					
ANR	1161320	Identifier	us		1161235	1					
ANR	1161321	PtrMemberAccess	uslist -> num		1161235	1					
ANR	1161322	Identifier	uslist		1161235	0					
ANR	1161323	Identifier	num		1161235	1					
ANR	1161324	Identifier	target		1161235	1					
ANR	1161325	Identifier	node		1161235	1					
ANR	1161326	ExpressionStatement	uslist -> num ++	194:2:4572:4585	1161235	5	True				
ANR	1161327	PostIncDecOperationExpression	uslist -> num ++		1161235	0					
ANR	1161328	PtrMemberAccess	uslist -> num		1161235	0					
ANR	1161329	Identifier	uslist		1161235	0					
ANR	1161330	Identifier	num		1161235	1					
ANR	1161331	IncDec	++		1161235	1					
ANR	1161332	ReturnStatement	return 0 ;	195:2:4589:4597	1161235	6	True				
ANR	1161333	PrimaryExpression	0		1161235	0					
ANR	1161334	ReturnType	static int		1161235	1					
ANR	1161335	Identifier	unset_addr_list_add		1161235	2					
ANR	1161336	ParameterList	"UnsetAddrList * uslist , int offset , struct _Node * node"		1161235	3					
ANR	1161337	Parameter	UnsetAddrList * uslist	179:20:4176:4196	1161235	0	True				
ANR	1161338	ParameterType	UnsetAddrList *		1161235	0					
ANR	1161339	Identifier	uslist		1161235	1					
ANR	1161340	Parameter	int offset	179:43:4199:4208	1161235	1	True				
ANR	1161341	ParameterType	int		1161235	0					
ANR	1161342	Identifier	offset		1161235	1					
ANR	1161343	Parameter	struct _Node * node	179:55:4211:4228	1161235	2	True				
ANR	1161344	ParameterType	struct _Node *		1161235	0					
ANR	1161345	Identifier	node		1161235	1					
ANR	1161346	CFGEntryNode	ENTRY		1161235		True				
ANR	1161347	CFGExitNode	EXIT		1161235		True				
ANR	1161348	Symbol	uslist -> num		1161235						
ANR	1161349	Symbol	uslist -> us [ uslist -> num ] . offset		1161235						
ANR	1161350	Symbol	offset		1161235						
ANR	1161351	Symbol	* * uslist		1161235						
ANR	1161352	Symbol	uslist -> us		1161235						
ANR	1161353	Symbol	p		1161235						
ANR	1161354	Symbol	uslist -> alloc		1161235						
ANR	1161355	Symbol	node		1161235						
ANR	1161356	Symbol	* uslist -> num		1161235						
ANR	1161357	Symbol	uslist		1161235						
ANR	1161358	Symbol	size		1161235						
ANR	1161359	Symbol	* uslist		1161235						
ANR	1161360	Symbol	* uslist -> us		1161235						
ANR	1161361	Symbol	uslist -> us [ uslist -> num ] . target		1161235						
ANR	1161362	Symbol	xrealloc		1161235						
ANR	1161363	Function	add_opcode	200:0:4632:4720							
ANR	1161364	FunctionDef	"add_opcode (regex_t * reg , int opcode)"		1161363	0					
ANR	1161365	CompoundStatement		202:0:4680:4720	1161363	0					
ANR	1161366	ExpressionStatement	"BBUF_ADD1 ( reg , opcode )"	203:2:4684:4706	1161363	0	True				
ANR	1161367	CallExpression	"BBUF_ADD1 ( reg , opcode )"		1161363	0					
ANR	1161368	Callee	BBUF_ADD1		1161363	0					
ANR	1161369	Identifier	BBUF_ADD1		1161363	0					
ANR	1161370	ArgumentList	reg		1161363	1					
ANR	1161371	Argument	reg		1161363	0					
ANR	1161372	Identifier	reg		1161363	0					
ANR	1161373	Argument	opcode		1161363	1					
ANR	1161374	Identifier	opcode		1161363	0					
ANR	1161375	ReturnStatement	return 0 ;	204:2:4710:4718	1161363	1	True				
ANR	1161376	PrimaryExpression	0		1161363	0					
ANR	1161377	ReturnType	static int		1161363	1					
ANR	1161378	Identifier	add_opcode		1161363	2					
ANR	1161379	ParameterList	"regex_t * reg , int opcode"		1161363	3					
ANR	1161380	Parameter	regex_t * reg	201:11:4654:4665	1161363	0	True				
ANR	1161381	ParameterType	regex_t *		1161363	0					
ANR	1161382	Identifier	reg		1161363	1					
ANR	1161383	Parameter	int opcode	201:25:4668:4677	1161363	1	True				
ANR	1161384	ParameterType	int		1161363	0					
ANR	1161385	Identifier	opcode		1161363	1					
ANR	1161386	CFGEntryNode	ENTRY		1161363		True				
ANR	1161387	CFGExitNode	EXIT		1161363		True				
ANR	1161388	Symbol	reg		1161363						
ANR	1161389	Symbol	opcode		1161363						
ANR	1161390	Function	add_state_check_num	208:0:4762:4923							
ANR	1161391	FunctionDef	"add_state_check_num (regex_t * reg , int num)"		1161390	0					
ANR	1161392	CompoundStatement		210:0:4816:4923	1161390	0					
ANR	1161393	IdentifierDeclStatement	StateCheckNumType n = ( StateCheckNumType ) num ;	211:2:4820:4865	1161390	0	True				
ANR	1161394	IdentifierDecl	n = ( StateCheckNumType ) num		1161390	0					
ANR	1161395	IdentifierDeclType	StateCheckNumType		1161390	0					
ANR	1161396	Identifier	n		1161390	1					
ANR	1161397	AssignmentExpression	n = ( StateCheckNumType ) num		1161390	2		=			
ANR	1161398	Identifier	n		1161390	0					
ANR	1161399	CastExpression	( StateCheckNumType ) num		1161390	1					
ANR	1161400	CastTarget	StateCheckNumType		1161390	0					
ANR	1161401	Identifier	num		1161390	1					
ANR	1161402	ExpressionStatement	"BBUF_ADD ( reg , & n , SIZE_STATE_CHECK_NUM )"	213:2:4870:4909	1161390	1	True				
ANR	1161403	CallExpression	"BBUF_ADD ( reg , & n , SIZE_STATE_CHECK_NUM )"		1161390	0					
ANR	1161404	Callee	BBUF_ADD		1161390	0					
ANR	1161405	Identifier	BBUF_ADD		1161390	0					
ANR	1161406	ArgumentList	reg		1161390	1					
ANR	1161407	Argument	reg		1161390	0					
ANR	1161408	Identifier	reg		1161390	0					
ANR	1161409	Argument	& n		1161390	1					
ANR	1161410	UnaryOperationExpression	& n		1161390	0					
ANR	1161411	UnaryOperator	&		1161390	0					
ANR	1161412	Identifier	n		1161390	1					
ANR	1161413	Argument	SIZE_STATE_CHECK_NUM		1161390	2					
ANR	1161414	Identifier	SIZE_STATE_CHECK_NUM		1161390	0					
ANR	1161415	ReturnStatement	return 0 ;	214:2:4913:4921	1161390	2	True				
ANR	1161416	PrimaryExpression	0		1161390	0					
ANR	1161417	ReturnType	static int		1161390	1					
ANR	1161418	Identifier	add_state_check_num		1161390	2					
ANR	1161419	ParameterList	"regex_t * reg , int num"		1161390	3					
ANR	1161420	Parameter	regex_t * reg	209:20:4793:4804	1161390	0	True				
ANR	1161421	ParameterType	regex_t *		1161390	0					
ANR	1161422	Identifier	reg		1161390	1					
ANR	1161423	Parameter	int num	209:34:4807:4813	1161390	1	True				
ANR	1161424	ParameterType	int		1161390	0					
ANR	1161425	Identifier	num		1161390	1					
ANR	1161426	CFGEntryNode	ENTRY		1161390		True				
ANR	1161427	CFGExitNode	EXIT		1161390		True				
ANR	1161428	Symbol	& n		1161390						
ANR	1161429	Symbol	reg		1161390						
ANR	1161430	Symbol	num		1161390						
ANR	1161431	Symbol	n		1161390						
ANR	1161432	Symbol	SIZE_STATE_CHECK_NUM		1161390						
ANR	1161433	Function	add_rel_addr	218:0:4933:5071							
ANR	1161434	FunctionDef	"add_rel_addr (regex_t * reg , int addr)"		1161433	0					
ANR	1161435	CompoundStatement		220:0:4981:5071	1161433	0					
ANR	1161436	IdentifierDeclStatement	RelAddrType ra = ( RelAddrType ) addr ;	221:2:4985:5020	1161433	0	True				
ANR	1161437	IdentifierDecl	ra = ( RelAddrType ) addr		1161433	0					
ANR	1161438	IdentifierDeclType	RelAddrType		1161433	0					
ANR	1161439	Identifier	ra		1161433	1					
ANR	1161440	AssignmentExpression	ra = ( RelAddrType ) addr		1161433	2		=			
ANR	1161441	Identifier	ra		1161433	0					
ANR	1161442	CastExpression	( RelAddrType ) addr		1161433	1					
ANR	1161443	CastTarget	RelAddrType		1161433	0					
ANR	1161444	Identifier	addr		1161433	1					
ANR	1161445	ExpressionStatement	"BBUF_ADD ( reg , & ra , SIZE_RELADDR )"	223:2:5025:5057	1161433	1	True				
ANR	1161446	CallExpression	"BBUF_ADD ( reg , & ra , SIZE_RELADDR )"		1161433	0					
ANR	1161447	Callee	BBUF_ADD		1161433	0					
ANR	1161448	Identifier	BBUF_ADD		1161433	0					
ANR	1161449	ArgumentList	reg		1161433	1					
ANR	1161450	Argument	reg		1161433	0					
ANR	1161451	Identifier	reg		1161433	0					
ANR	1161452	Argument	& ra		1161433	1					
ANR	1161453	UnaryOperationExpression	& ra		1161433	0					
ANR	1161454	UnaryOperator	&		1161433	0					
ANR	1161455	Identifier	ra		1161433	1					
ANR	1161456	Argument	SIZE_RELADDR		1161433	2					
ANR	1161457	Identifier	SIZE_RELADDR		1161433	0					
ANR	1161458	ReturnStatement	return 0 ;	224:2:5061:5069	1161433	2	True				
ANR	1161459	PrimaryExpression	0		1161433	0					
ANR	1161460	ReturnType	static int		1161433	1					
ANR	1161461	Identifier	add_rel_addr		1161433	2					
ANR	1161462	ParameterList	"regex_t * reg , int addr"		1161433	3					
ANR	1161463	Parameter	regex_t * reg	219:13:4957:4968	1161433	0	True				
ANR	1161464	ParameterType	regex_t *		1161433	0					
ANR	1161465	Identifier	reg		1161433	1					
ANR	1161466	Parameter	int addr	219:27:4971:4978	1161433	1	True				
ANR	1161467	ParameterType	int		1161433	0					
ANR	1161468	Identifier	addr		1161433	1					
ANR	1161469	CFGEntryNode	ENTRY		1161433		True				
ANR	1161470	CFGExitNode	EXIT		1161433		True				
ANR	1161471	Symbol	SIZE_RELADDR		1161433						
ANR	1161472	Symbol	reg		1161433						
ANR	1161473	Symbol	& ra		1161433						
ANR	1161474	Symbol	addr		1161433						
ANR	1161475	Symbol	ra		1161433						
ANR	1161476	Function	add_abs_addr	227:0:5074:5212							
ANR	1161477	FunctionDef	"add_abs_addr (regex_t * reg , int addr)"		1161476	0					
ANR	1161478	CompoundStatement		229:0:5122:5212	1161476	0					
ANR	1161479	IdentifierDeclStatement	AbsAddrType ra = ( AbsAddrType ) addr ;	230:2:5126:5161	1161476	0	True				
ANR	1161480	IdentifierDecl	ra = ( AbsAddrType ) addr		1161476	0					
ANR	1161481	IdentifierDeclType	AbsAddrType		1161476	0					
ANR	1161482	Identifier	ra		1161476	1					
ANR	1161483	AssignmentExpression	ra = ( AbsAddrType ) addr		1161476	2		=			
ANR	1161484	Identifier	ra		1161476	0					
ANR	1161485	CastExpression	( AbsAddrType ) addr		1161476	1					
ANR	1161486	CastTarget	AbsAddrType		1161476	0					
ANR	1161487	Identifier	addr		1161476	1					
ANR	1161488	ExpressionStatement	"BBUF_ADD ( reg , & ra , SIZE_ABSADDR )"	232:2:5166:5198	1161476	1	True				
ANR	1161489	CallExpression	"BBUF_ADD ( reg , & ra , SIZE_ABSADDR )"		1161476	0					
ANR	1161490	Callee	BBUF_ADD		1161476	0					
ANR	1161491	Identifier	BBUF_ADD		1161476	0					
ANR	1161492	ArgumentList	reg		1161476	1					
ANR	1161493	Argument	reg		1161476	0					
ANR	1161494	Identifier	reg		1161476	0					
ANR	1161495	Argument	& ra		1161476	1					
ANR	1161496	UnaryOperationExpression	& ra		1161476	0					
ANR	1161497	UnaryOperator	&		1161476	0					
ANR	1161498	Identifier	ra		1161476	1					
ANR	1161499	Argument	SIZE_ABSADDR		1161476	2					
ANR	1161500	Identifier	SIZE_ABSADDR		1161476	0					
ANR	1161501	ReturnStatement	return 0 ;	233:2:5202:5210	1161476	2	True				
ANR	1161502	PrimaryExpression	0		1161476	0					
ANR	1161503	ReturnType	static int		1161476	1					
ANR	1161504	Identifier	add_abs_addr		1161476	2					
ANR	1161505	ParameterList	"regex_t * reg , int addr"		1161476	3					
ANR	1161506	Parameter	regex_t * reg	228:13:5098:5109	1161476	0	True				
ANR	1161507	ParameterType	regex_t *		1161476	0					
ANR	1161508	Identifier	reg		1161476	1					
ANR	1161509	Parameter	int addr	228:27:5112:5119	1161476	1	True				
ANR	1161510	ParameterType	int		1161476	0					
ANR	1161511	Identifier	addr		1161476	1					
ANR	1161512	CFGEntryNode	ENTRY		1161476		True				
ANR	1161513	CFGExitNode	EXIT		1161476		True				
ANR	1161514	Symbol	reg		1161476						
ANR	1161515	Symbol	& ra		1161476						
ANR	1161516	Symbol	addr		1161476						
ANR	1161517	Symbol	SIZE_ABSADDR		1161476						
ANR	1161518	Symbol	ra		1161476						
ANR	1161519	Function	add_length	236:0:5215:5344							
ANR	1161520	FunctionDef	"add_length (regex_t * reg , int len)"		1161519	0					
ANR	1161521	CompoundStatement		238:0:5260:5344	1161519	0					
ANR	1161522	IdentifierDeclStatement	LengthType l = ( LengthType ) len ;	239:2:5264:5295	1161519	0	True				
ANR	1161523	IdentifierDecl	l = ( LengthType ) len		1161519	0					
ANR	1161524	IdentifierDeclType	LengthType		1161519	0					
ANR	1161525	Identifier	l		1161519	1					
ANR	1161526	AssignmentExpression	l = ( LengthType ) len		1161519	2		=			
ANR	1161527	Identifier	l		1161519	0					
ANR	1161528	CastExpression	( LengthType ) len		1161519	1					
ANR	1161529	CastTarget	LengthType		1161519	0					
ANR	1161530	Identifier	len		1161519	1					
ANR	1161531	ExpressionStatement	"BBUF_ADD ( reg , & l , SIZE_LENGTH )"	241:2:5300:5330	1161519	1	True				
ANR	1161532	CallExpression	"BBUF_ADD ( reg , & l , SIZE_LENGTH )"		1161519	0					
ANR	1161533	Callee	BBUF_ADD		1161519	0					
ANR	1161534	Identifier	BBUF_ADD		1161519	0					
ANR	1161535	ArgumentList	reg		1161519	1					
ANR	1161536	Argument	reg		1161519	0					
ANR	1161537	Identifier	reg		1161519	0					
ANR	1161538	Argument	& l		1161519	1					
ANR	1161539	UnaryOperationExpression	& l		1161519	0					
ANR	1161540	UnaryOperator	&		1161519	0					
ANR	1161541	Identifier	l		1161519	1					
ANR	1161542	Argument	SIZE_LENGTH		1161519	2					
ANR	1161543	Identifier	SIZE_LENGTH		1161519	0					
ANR	1161544	ReturnStatement	return 0 ;	242:2:5334:5342	1161519	2	True				
ANR	1161545	PrimaryExpression	0		1161519	0					
ANR	1161546	ReturnType	static int		1161519	1					
ANR	1161547	Identifier	add_length		1161519	2					
ANR	1161548	ParameterList	"regex_t * reg , int len"		1161519	3					
ANR	1161549	Parameter	regex_t * reg	237:11:5237:5248	1161519	0	True				
ANR	1161550	ParameterType	regex_t *		1161519	0					
ANR	1161551	Identifier	reg		1161519	1					
ANR	1161552	Parameter	int len	237:25:5251:5257	1161519	1	True				
ANR	1161553	ParameterType	int		1161519	0					
ANR	1161554	Identifier	len		1161519	1					
ANR	1161555	CFGEntryNode	ENTRY		1161519		True				
ANR	1161556	CFGExitNode	EXIT		1161519		True				
ANR	1161557	Symbol	& l		1161519						
ANR	1161558	Symbol	len		1161519						
ANR	1161559	Symbol	reg		1161519						
ANR	1161560	Symbol	l		1161519						
ANR	1161561	Symbol	SIZE_LENGTH		1161519						
ANR	1161562	Function	add_mem_num	245:0:5347:5477							
ANR	1161563	FunctionDef	"add_mem_num (regex_t * reg , int num)"		1161562	0					
ANR	1161564	CompoundStatement		247:0:5393:5477	1161562	0					
ANR	1161565	IdentifierDeclStatement	MemNumType n = ( MemNumType ) num ;	248:2:5397:5428	1161562	0	True				
ANR	1161566	IdentifierDecl	n = ( MemNumType ) num		1161562	0					
ANR	1161567	IdentifierDeclType	MemNumType		1161562	0					
ANR	1161568	Identifier	n		1161562	1					
ANR	1161569	AssignmentExpression	n = ( MemNumType ) num		1161562	2		=			
ANR	1161570	Identifier	n		1161562	0					
ANR	1161571	CastExpression	( MemNumType ) num		1161562	1					
ANR	1161572	CastTarget	MemNumType		1161562	0					
ANR	1161573	Identifier	num		1161562	1					
ANR	1161574	ExpressionStatement	"BBUF_ADD ( reg , & n , SIZE_MEMNUM )"	250:2:5433:5463	1161562	1	True				
ANR	1161575	CallExpression	"BBUF_ADD ( reg , & n , SIZE_MEMNUM )"		1161562	0					
ANR	1161576	Callee	BBUF_ADD		1161562	0					
ANR	1161577	Identifier	BBUF_ADD		1161562	0					
ANR	1161578	ArgumentList	reg		1161562	1					
ANR	1161579	Argument	reg		1161562	0					
ANR	1161580	Identifier	reg		1161562	0					
ANR	1161581	Argument	& n		1161562	1					
ANR	1161582	UnaryOperationExpression	& n		1161562	0					
ANR	1161583	UnaryOperator	&		1161562	0					
ANR	1161584	Identifier	n		1161562	1					
ANR	1161585	Argument	SIZE_MEMNUM		1161562	2					
ANR	1161586	Identifier	SIZE_MEMNUM		1161562	0					
ANR	1161587	ReturnStatement	return 0 ;	251:2:5467:5475	1161562	2	True				
ANR	1161588	PrimaryExpression	0		1161562	0					
ANR	1161589	ReturnType	static int		1161562	1					
ANR	1161590	Identifier	add_mem_num		1161562	2					
ANR	1161591	ParameterList	"regex_t * reg , int num"		1161562	3					
ANR	1161592	Parameter	regex_t * reg	246:12:5370:5381	1161562	0	True				
ANR	1161593	ParameterType	regex_t *		1161562	0					
ANR	1161594	Identifier	reg		1161562	1					
ANR	1161595	Parameter	int num	246:26:5384:5390	1161562	1	True				
ANR	1161596	ParameterType	int		1161562	0					
ANR	1161597	Identifier	num		1161562	1					
ANR	1161598	CFGEntryNode	ENTRY		1161562		True				
ANR	1161599	CFGExitNode	EXIT		1161562		True				
ANR	1161600	Symbol	SIZE_MEMNUM		1161562						
ANR	1161601	Symbol	& n		1161562						
ANR	1161602	Symbol	reg		1161562						
ANR	1161603	Symbol	num		1161562						
ANR	1161604	Symbol	n		1161562						
ANR	1161605	Function	add_pointer	254:0:5480:5621							
ANR	1161606	FunctionDef	"add_pointer (regex_t * reg , void * addr)"		1161605	0					
ANR	1161607	CompoundStatement		256:0:5529:5621	1161605	0					
ANR	1161608	IdentifierDeclStatement	PointerType ptr = ( PointerType ) addr ;	257:2:5533:5569	1161605	0	True				
ANR	1161609	IdentifierDecl	ptr = ( PointerType ) addr		1161605	0					
ANR	1161610	IdentifierDeclType	PointerType		1161605	0					
ANR	1161611	Identifier	ptr		1161605	1					
ANR	1161612	AssignmentExpression	ptr = ( PointerType ) addr		1161605	2		=			
ANR	1161613	Identifier	ptr		1161605	0					
ANR	1161614	CastExpression	( PointerType ) addr		1161605	1					
ANR	1161615	CastTarget	PointerType		1161605	0					
ANR	1161616	Identifier	addr		1161605	1					
ANR	1161617	ExpressionStatement	"BBUF_ADD ( reg , & ptr , SIZE_POINTER )"	259:2:5574:5607	1161605	1	True				
ANR	1161618	CallExpression	"BBUF_ADD ( reg , & ptr , SIZE_POINTER )"		1161605	0					
ANR	1161619	Callee	BBUF_ADD		1161605	0					
ANR	1161620	Identifier	BBUF_ADD		1161605	0					
ANR	1161621	ArgumentList	reg		1161605	1					
ANR	1161622	Argument	reg		1161605	0					
ANR	1161623	Identifier	reg		1161605	0					
ANR	1161624	Argument	& ptr		1161605	1					
ANR	1161625	UnaryOperationExpression	& ptr		1161605	0					
ANR	1161626	UnaryOperator	&		1161605	0					
ANR	1161627	Identifier	ptr		1161605	1					
ANR	1161628	Argument	SIZE_POINTER		1161605	2					
ANR	1161629	Identifier	SIZE_POINTER		1161605	0					
ANR	1161630	ReturnStatement	return 0 ;	260:2:5611:5619	1161605	2	True				
ANR	1161631	PrimaryExpression	0		1161605	0					
ANR	1161632	ReturnType	static int		1161605	1					
ANR	1161633	Identifier	add_pointer		1161605	2					
ANR	1161634	ParameterList	"regex_t * reg , void * addr"		1161605	3					
ANR	1161635	Parameter	regex_t * reg	255:12:5503:5514	1161605	0	True				
ANR	1161636	ParameterType	regex_t *		1161605	0					
ANR	1161637	Identifier	reg		1161605	1					
ANR	1161638	Parameter	void * addr	255:26:5517:5526	1161605	1	True				
ANR	1161639	ParameterType	void *		1161605	0					
ANR	1161640	Identifier	addr		1161605	1					
ANR	1161641	CFGEntryNode	ENTRY		1161605		True				
ANR	1161642	CFGExitNode	EXIT		1161605		True				
ANR	1161643	Symbol	SIZE_POINTER		1161605						
ANR	1161644	Symbol	& ptr		1161605						
ANR	1161645	Symbol	reg		1161605						
ANR	1161646	Symbol	addr		1161605						
ANR	1161647	Symbol	ptr		1161605						
ANR	1161648	Function	add_option	263:0:5624:5736							
ANR	1161649	FunctionDef	"add_option (regex_t * reg , OnigOptionType option)"		1161648	0					
ANR	1161650	CompoundStatement		265:0:5683:5736	1161648	0					
ANR	1161651	ExpressionStatement	"BBUF_ADD ( reg , & option , SIZE_OPTION )"	266:2:5687:5722	1161648	0	True				
ANR	1161652	CallExpression	"BBUF_ADD ( reg , & option , SIZE_OPTION )"		1161648	0					
ANR	1161653	Callee	BBUF_ADD		1161648	0					
ANR	1161654	Identifier	BBUF_ADD		1161648	0					
ANR	1161655	ArgumentList	reg		1161648	1					
ANR	1161656	Argument	reg		1161648	0					
ANR	1161657	Identifier	reg		1161648	0					
ANR	1161658	Argument	& option		1161648	1					
ANR	1161659	UnaryOperationExpression	& option		1161648	0					
ANR	1161660	UnaryOperator	&		1161648	0					
ANR	1161661	Identifier	option		1161648	1					
ANR	1161662	Argument	SIZE_OPTION		1161648	2					
ANR	1161663	Identifier	SIZE_OPTION		1161648	0					
ANR	1161664	ReturnStatement	return 0 ;	267:2:5726:5734	1161648	1	True				
ANR	1161665	PrimaryExpression	0		1161648	0					
ANR	1161666	ReturnType	static int		1161648	1					
ANR	1161667	Identifier	add_option		1161648	2					
ANR	1161668	ParameterList	"regex_t * reg , OnigOptionType option"		1161648	3					
ANR	1161669	Parameter	regex_t * reg	264:11:5646:5657	1161648	0	True				
ANR	1161670	ParameterType	regex_t *		1161648	0					
ANR	1161671	Identifier	reg		1161648	1					
ANR	1161672	Parameter	OnigOptionType option	264:25:5660:5680	1161648	1	True				
ANR	1161673	ParameterType	OnigOptionType		1161648	0					
ANR	1161674	Identifier	option		1161648	1					
ANR	1161675	CFGEntryNode	ENTRY		1161648		True				
ANR	1161676	CFGExitNode	EXIT		1161648		True				
ANR	1161677	Symbol	& option		1161648						
ANR	1161678	Symbol	reg		1161648						
ANR	1161679	Symbol	SIZE_OPTION		1161648						
ANR	1161680	Symbol	option		1161648						
ANR	1161681	Function	add_opcode_rel_addr	270:0:5739:5911							
ANR	1161682	FunctionDef	"add_opcode_rel_addr (regex_t * reg , int opcode , int addr)"		1161681	0					
ANR	1161683	CompoundStatement		272:0:5806:5911	1161681	0					
ANR	1161684	IdentifierDeclStatement	int r ;	273:2:5810:5815	1161681	0	True				
ANR	1161685	IdentifierDecl	r		1161681	0					
ANR	1161686	IdentifierDeclType	int		1161681	0					
ANR	1161687	Identifier	r		1161681	1					
ANR	1161688	ExpressionStatement	"r = add_opcode ( reg , opcode )"	275:2:5820:5847	1161681	1	True				
ANR	1161689	AssignmentExpression	"r = add_opcode ( reg , opcode )"		1161681	0		=			
ANR	1161690	Identifier	r		1161681	0					
ANR	1161691	CallExpression	"add_opcode ( reg , opcode )"		1161681	1					
ANR	1161692	Callee	add_opcode		1161681	0					
ANR	1161693	Identifier	add_opcode		1161681	0					
ANR	1161694	ArgumentList	reg		1161681	1					
ANR	1161695	Argument	reg		1161681	0					
ANR	1161696	Identifier	reg		1161681	0					
ANR	1161697	Argument	opcode		1161681	1					
ANR	1161698	Identifier	opcode		1161681	0					
ANR	1161699	IfStatement	if ( r )		1161681	2					
ANR	1161700	Condition	r	276:6:5855:5855	1161681	0	True				
ANR	1161701	Identifier	r		1161681	0					
ANR	1161702	ReturnStatement	return r ;	276:9:5858:5866	1161681	1	True				
ANR	1161703	Identifier	r		1161681	0					
ANR	1161704	ExpressionStatement	"r = add_rel_addr ( reg , addr )"	277:2:5870:5897	1161681	3	True				
ANR	1161705	AssignmentExpression	"r = add_rel_addr ( reg , addr )"		1161681	0		=			
ANR	1161706	Identifier	r		1161681	0					
ANR	1161707	CallExpression	"add_rel_addr ( reg , addr )"		1161681	1					
ANR	1161708	Callee	add_rel_addr		1161681	0					
ANR	1161709	Identifier	add_rel_addr		1161681	0					
ANR	1161710	ArgumentList	reg		1161681	1					
ANR	1161711	Argument	reg		1161681	0					
ANR	1161712	Identifier	reg		1161681	0					
ANR	1161713	Argument	addr		1161681	1					
ANR	1161714	Identifier	addr		1161681	0					
ANR	1161715	ReturnStatement	return r ;	278:2:5901:5909	1161681	4	True				
ANR	1161716	Identifier	r		1161681	0					
ANR	1161717	ReturnType	static int		1161681	1					
ANR	1161718	Identifier	add_opcode_rel_addr		1161681	2					
ANR	1161719	ParameterList	"regex_t * reg , int opcode , int addr"		1161681	3					
ANR	1161720	Parameter	regex_t * reg	271:20:5770:5781	1161681	0	True				
ANR	1161721	ParameterType	regex_t *		1161681	0					
ANR	1161722	Identifier	reg		1161681	1					
ANR	1161723	Parameter	int opcode	271:34:5784:5793	1161681	1	True				
ANR	1161724	ParameterType	int		1161681	0					
ANR	1161725	Identifier	opcode		1161681	1					
ANR	1161726	Parameter	int addr	271:46:5796:5803	1161681	2	True				
ANR	1161727	ParameterType	int		1161681	0					
ANR	1161728	Identifier	addr		1161681	1					
ANR	1161729	CFGEntryNode	ENTRY		1161681		True				
ANR	1161730	CFGExitNode	EXIT		1161681		True				
ANR	1161731	Symbol	r		1161681						
ANR	1161732	Symbol	reg		1161681						
ANR	1161733	Symbol	add_opcode		1161681						
ANR	1161734	Symbol	opcode		1161681						
ANR	1161735	Symbol	addr		1161681						
ANR	1161736	Symbol	add_rel_addr		1161681						
ANR	1161737	Function	add_bytes	281:0:5914:6015							
ANR	1161738	FunctionDef	"add_bytes (regex_t * reg , UChar * bytes , int len)"		1161737	0					
ANR	1161739	CompoundStatement		283:0:5972:6015	1161737	0					
ANR	1161740	ExpressionStatement	"BBUF_ADD ( reg , bytes , len )"	284:2:5976:6001	1161737	0	True				
ANR	1161741	CallExpression	"BBUF_ADD ( reg , bytes , len )"		1161737	0					
ANR	1161742	Callee	BBUF_ADD		1161737	0					
ANR	1161743	Identifier	BBUF_ADD		1161737	0					
ANR	1161744	ArgumentList	reg		1161737	1					
ANR	1161745	Argument	reg		1161737	0					
ANR	1161746	Identifier	reg		1161737	0					
ANR	1161747	Argument	bytes		1161737	1					
ANR	1161748	Identifier	bytes		1161737	0					
ANR	1161749	Argument	len		1161737	2					
ANR	1161750	Identifier	len		1161737	0					
ANR	1161751	ReturnStatement	return 0 ;	285:2:6005:6013	1161737	1	True				
ANR	1161752	PrimaryExpression	0		1161737	0					
ANR	1161753	ReturnType	static int		1161737	1					
ANR	1161754	Identifier	add_bytes		1161737	2					
ANR	1161755	ParameterList	"regex_t * reg , UChar * bytes , int len"		1161737	3					
ANR	1161756	Parameter	regex_t * reg	282:10:5935:5946	1161737	0	True				
ANR	1161757	ParameterType	regex_t *		1161737	0					
ANR	1161758	Identifier	reg		1161737	1					
ANR	1161759	Parameter	UChar * bytes	282:24:5949:5960	1161737	1	True				
ANR	1161760	ParameterType	UChar *		1161737	0					
ANR	1161761	Identifier	bytes		1161737	1					
ANR	1161762	Parameter	int len	282:38:5963:5969	1161737	2	True				
ANR	1161763	ParameterType	int		1161737	0					
ANR	1161764	Identifier	len		1161737	1					
ANR	1161765	CFGEntryNode	ENTRY		1161737		True				
ANR	1161766	CFGExitNode	EXIT		1161737		True				
ANR	1161767	Symbol	len		1161737						
ANR	1161768	Symbol	reg		1161737						
ANR	1161769	Symbol	bytes		1161737						
ANR	1161770	Function	add_bitset	288:0:6018:6116							
ANR	1161771	FunctionDef	"add_bitset (regex_t * reg , BitSetRef bs)"		1161770	0					
ANR	1161772	CompoundStatement		290:0:6068:6116	1161770	0					
ANR	1161773	ExpressionStatement	"BBUF_ADD ( reg , bs , SIZE_BITSET )"	291:2:6072:6102	1161770	0	True				
ANR	1161774	CallExpression	"BBUF_ADD ( reg , bs , SIZE_BITSET )"		1161770	0					
ANR	1161775	Callee	BBUF_ADD		1161770	0					
ANR	1161776	Identifier	BBUF_ADD		1161770	0					
ANR	1161777	ArgumentList	reg		1161770	1					
ANR	1161778	Argument	reg		1161770	0					
ANR	1161779	Identifier	reg		1161770	0					
ANR	1161780	Argument	bs		1161770	1					
ANR	1161781	Identifier	bs		1161770	0					
ANR	1161782	Argument	SIZE_BITSET		1161770	2					
ANR	1161783	Identifier	SIZE_BITSET		1161770	0					
ANR	1161784	ReturnStatement	return 0 ;	292:2:6106:6114	1161770	1	True				
ANR	1161785	PrimaryExpression	0		1161770	0					
ANR	1161786	ReturnType	static int		1161770	1					
ANR	1161787	Identifier	add_bitset		1161770	2					
ANR	1161788	ParameterList	"regex_t * reg , BitSetRef bs"		1161770	3					
ANR	1161789	Parameter	regex_t * reg	289:11:6040:6051	1161770	0	True				
ANR	1161790	ParameterType	regex_t *		1161770	0					
ANR	1161791	Identifier	reg		1161770	1					
ANR	1161792	Parameter	BitSetRef bs	289:25:6054:6065	1161770	1	True				
ANR	1161793	ParameterType	BitSetRef		1161770	0					
ANR	1161794	Identifier	bs		1161770	1					
ANR	1161795	CFGEntryNode	ENTRY		1161770		True				
ANR	1161796	CFGExitNode	EXIT		1161770		True				
ANR	1161797	Symbol	SIZE_BITSET		1161770						
ANR	1161798	Symbol	bs		1161770						
ANR	1161799	Symbol	reg		1161770						
ANR	1161800	Function	add_opcode_option	295:0:6119:6302							
ANR	1161801	FunctionDef	"add_opcode_option (regex_t * reg , int opcode , OnigOptionType option)"		1161800	0					
ANR	1161802	CompoundStatement		297:0:6197:6302	1161800	0					
ANR	1161803	IdentifierDeclStatement	int r ;	298:2:6201:6206	1161800	0	True				
ANR	1161804	IdentifierDecl	r		1161800	0					
ANR	1161805	IdentifierDeclType	int		1161800	0					
ANR	1161806	Identifier	r		1161800	1					
ANR	1161807	ExpressionStatement	"r = add_opcode ( reg , opcode )"	300:2:6211:6238	1161800	1	True				
ANR	1161808	AssignmentExpression	"r = add_opcode ( reg , opcode )"		1161800	0		=			
ANR	1161809	Identifier	r		1161800	0					
ANR	1161810	CallExpression	"add_opcode ( reg , opcode )"		1161800	1					
ANR	1161811	Callee	add_opcode		1161800	0					
ANR	1161812	Identifier	add_opcode		1161800	0					
ANR	1161813	ArgumentList	reg		1161800	1					
ANR	1161814	Argument	reg		1161800	0					
ANR	1161815	Identifier	reg		1161800	0					
ANR	1161816	Argument	opcode		1161800	1					
ANR	1161817	Identifier	opcode		1161800	0					
ANR	1161818	IfStatement	if ( r )		1161800	2					
ANR	1161819	Condition	r	301:6:6246:6246	1161800	0	True				
ANR	1161820	Identifier	r		1161800	0					
ANR	1161821	ReturnStatement	return r ;	301:9:6249:6257	1161800	1	True				
ANR	1161822	Identifier	r		1161800	0					
ANR	1161823	ExpressionStatement	"r = add_option ( reg , option )"	302:2:6261:6288	1161800	3	True				
ANR	1161824	AssignmentExpression	"r = add_option ( reg , option )"		1161800	0		=			
ANR	1161825	Identifier	r		1161800	0					
ANR	1161826	CallExpression	"add_option ( reg , option )"		1161800	1					
ANR	1161827	Callee	add_option		1161800	0					
ANR	1161828	Identifier	add_option		1161800	0					
ANR	1161829	ArgumentList	reg		1161800	1					
ANR	1161830	Argument	reg		1161800	0					
ANR	1161831	Identifier	reg		1161800	0					
ANR	1161832	Argument	option		1161800	1					
ANR	1161833	Identifier	option		1161800	0					
ANR	1161834	ReturnStatement	return r ;	303:2:6292:6300	1161800	4	True				
ANR	1161835	Identifier	r		1161800	0					
ANR	1161836	ReturnType	static int		1161800	1					
ANR	1161837	Identifier	add_opcode_option		1161800	2					
ANR	1161838	ParameterList	"regex_t * reg , int opcode , OnigOptionType option"		1161800	3					
ANR	1161839	Parameter	regex_t * reg	296:18:6148:6159	1161800	0	True				
ANR	1161840	ParameterType	regex_t *		1161800	0					
ANR	1161841	Identifier	reg		1161800	1					
ANR	1161842	Parameter	int opcode	296:32:6162:6171	1161800	1	True				
ANR	1161843	ParameterType	int		1161800	0					
ANR	1161844	Identifier	opcode		1161800	1					
ANR	1161845	Parameter	OnigOptionType option	296:44:6174:6194	1161800	2	True				
ANR	1161846	ParameterType	OnigOptionType		1161800	0					
ANR	1161847	Identifier	option		1161800	1					
ANR	1161848	CFGEntryNode	ENTRY		1161800		True				
ANR	1161849	CFGExitNode	EXIT		1161800		True				
ANR	1161850	Symbol	r		1161800						
ANR	1161851	Symbol	reg		1161800						
ANR	1161852	Symbol	add_opcode		1161800						
ANR	1161853	Symbol	opcode		1161800						
ANR	1161854	Symbol	add_option		1161800						
ANR	1161855	Symbol	option		1161800						
ANR	1161856	DeclStmt									
ANR	1161857	Decl							int	"int ( Node * node , regex_t * reg )"	compile_length_tree
ANR	1161858	DeclStmt									
ANR	1161859	Decl							int	"int ( Node * node , regex_t * reg )"	compile_tree
ANR	1161860	Function	select_str_opcode	314:0:6583:7468							
ANR	1161861	FunctionDef	"select_str_opcode (int mb_len , int str_len , int ignore_case)"		1161860	0					
ANR	1161862	CompoundStatement		316:0:6654:7468	1161860	0					
ANR	1161863	IdentifierDeclStatement	int op ;	317:2:6658:6664	1161860	0	True				
ANR	1161864	IdentifierDecl	op		1161860	0					
ANR	1161865	IdentifierDeclType	int		1161860	0					
ANR	1161866	Identifier	op		1161860	1					
ANR	1161867	IfStatement	if ( ignore_case )		1161860	1					
ANR	1161868	Condition	ignore_case	319:6:6673:6683	1161860	0	True				
ANR	1161869	Identifier	ignore_case		1161860	0					
ANR	1161870	CompoundStatement		4:19:31:31	1161860	1					
ANR	1161871	SwitchStatement	switch ( str_len )		1161860	0					
ANR	1161872	Condition	str_len	320:12:6700:6706	1161860	0	True				
ANR	1161873	Identifier	str_len		1161860	0					
ANR	1161874	CompoundStatement		5:21:54:54	1161860	1					
ANR	1161875	Label	case 1 :	321:4:6715:6721	1161860	0	True				
ANR	1161876	ExpressionStatement	op = OP_EXACT1_IC	321:13:6724:6741	1161860	1	True				
ANR	1161877	AssignmentExpression	op = OP_EXACT1_IC		1161860	0		=			
ANR	1161878	Identifier	op		1161860	0					
ANR	1161879	Identifier	OP_EXACT1_IC		1161860	1					
ANR	1161880	BreakStatement	break ;	321:32:6743:6748	1161860	2	True				
ANR	1161881	Label	default :	322:4:6754:6761	1161860	3	True				
ANR	1161882	Identifier	default		1161860	0					
ANR	1161883	ExpressionStatement	op = OP_EXACTN_IC	322:13:6763:6780	1161860	4	True				
ANR	1161884	AssignmentExpression	op = OP_EXACTN_IC		1161860	0		=			
ANR	1161885	Identifier	op		1161860	0					
ANR	1161886	Identifier	OP_EXACTN_IC		1161860	1					
ANR	1161887	BreakStatement	break ;	322:32:6782:6787	1161860	5	True				
ANR	1161888	ElseStatement	else		1161860	0					
ANR	1161889	CompoundStatement		10:7:151:151	1161860	0					
ANR	1161890	SwitchStatement	switch ( mb_len )		1161860	0					
ANR	1161891	Condition	mb_len	326:12:6820:6825	1161860	0	True				
ANR	1161892	Identifier	mb_len		1161860	0					
ANR	1161893	CompoundStatement		11:20:173:173	1161860	1					
ANR	1161894	Label	case 1 :	327:4:6834:6840	1161860	0	True				
ANR	1161895	SwitchStatement	switch ( str_len )		1161860	1					
ANR	1161896	Condition	str_len	328:14:6856:6862	1161860	0	True				
ANR	1161897	Identifier	str_len		1161860	0					
ANR	1161898	CompoundStatement		13:23:210:210	1161860	1					
ANR	1161899	Label	case 1 :	329:6:6873:6879	1161860	0	True				
ANR	1161900	ExpressionStatement	op = OP_EXACT1	329:15:6882:6896	1161860	1	True				
ANR	1161901	AssignmentExpression	op = OP_EXACT1		1161860	0		=			
ANR	1161902	Identifier	op		1161860	0					
ANR	1161903	Identifier	OP_EXACT1		1161860	1					
ANR	1161904	BreakStatement	break ;	329:31:6898:6903	1161860	2	True				
ANR	1161905	Label	case 2 :	330:6:6911:6917	1161860	3	True				
ANR	1161906	ExpressionStatement	op = OP_EXACT2	330:15:6920:6934	1161860	4	True				
ANR	1161907	AssignmentExpression	op = OP_EXACT2		1161860	0		=			
ANR	1161908	Identifier	op		1161860	0					
ANR	1161909	Identifier	OP_EXACT2		1161860	1					
ANR	1161910	BreakStatement	break ;	330:31:6936:6941	1161860	5	True				
ANR	1161911	Label	case 3 :	331:6:6949:6955	1161860	6	True				
ANR	1161912	ExpressionStatement	op = OP_EXACT3	331:15:6958:6972	1161860	7	True				
ANR	1161913	AssignmentExpression	op = OP_EXACT3		1161860	0		=			
ANR	1161914	Identifier	op		1161860	0					
ANR	1161915	Identifier	OP_EXACT3		1161860	1					
ANR	1161916	BreakStatement	break ;	331:31:6974:6979	1161860	8	True				
ANR	1161917	Label	case 4 :	332:6:6987:6993	1161860	9	True				
ANR	1161918	ExpressionStatement	op = OP_EXACT4	332:15:6996:7010	1161860	10	True				
ANR	1161919	AssignmentExpression	op = OP_EXACT4		1161860	0		=			
ANR	1161920	Identifier	op		1161860	0					
ANR	1161921	Identifier	OP_EXACT4		1161860	1					
ANR	1161922	BreakStatement	break ;	332:31:7012:7017	1161860	11	True				
ANR	1161923	Label	case 5 :	333:6:7025:7031	1161860	12	True				
ANR	1161924	ExpressionStatement	op = OP_EXACT5	333:15:7034:7048	1161860	13	True				
ANR	1161925	AssignmentExpression	op = OP_EXACT5		1161860	0		=			
ANR	1161926	Identifier	op		1161860	0					
ANR	1161927	Identifier	OP_EXACT5		1161860	1					
ANR	1161928	BreakStatement	break ;	333:31:7050:7055	1161860	14	True				
ANR	1161929	Label	default :	334:6:7063:7070	1161860	15	True				
ANR	1161930	Identifier	default		1161860	0					
ANR	1161931	ExpressionStatement	op = OP_EXACTN	334:15:7072:7086	1161860	16	True				
ANR	1161932	AssignmentExpression	op = OP_EXACTN		1161860	0		=			
ANR	1161933	Identifier	op		1161860	0					
ANR	1161934	Identifier	OP_EXACTN		1161860	1					
ANR	1161935	BreakStatement	break ;	334:31:7088:7093	1161860	17	True				
ANR	1161936	BreakStatement	break ;	336:6:7109:7114	1161860	2	True				
ANR	1161937	Label	case 2 :	338:4:7121:7127	1161860	3	True				
ANR	1161938	SwitchStatement	switch ( str_len )		1161860	4					
ANR	1161939	Condition	str_len	339:14:7143:7149	1161860	0	True				
ANR	1161940	Identifier	str_len		1161860	0					
ANR	1161941	CompoundStatement		24:23:497:497	1161860	1					
ANR	1161942	Label	case 1 :	340:6:7160:7166	1161860	0	True				
ANR	1161943	ExpressionStatement	op = OP_EXACTMB2N1	340:15:7169:7187	1161860	1	True				
ANR	1161944	AssignmentExpression	op = OP_EXACTMB2N1		1161860	0		=			
ANR	1161945	Identifier	op		1161860	0					
ANR	1161946	Identifier	OP_EXACTMB2N1		1161860	1					
ANR	1161947	BreakStatement	break ;	340:35:7189:7194	1161860	2	True				
ANR	1161948	Label	case 2 :	341:6:7202:7208	1161860	3	True				
ANR	1161949	ExpressionStatement	op = OP_EXACTMB2N2	341:15:7211:7229	1161860	4	True				
ANR	1161950	AssignmentExpression	op = OP_EXACTMB2N2		1161860	0		=			
ANR	1161951	Identifier	op		1161860	0					
ANR	1161952	Identifier	OP_EXACTMB2N2		1161860	1					
ANR	1161953	BreakStatement	break ;	341:35:7231:7236	1161860	5	True				
ANR	1161954	Label	case 3 :	342:6:7244:7250	1161860	6	True				
ANR	1161955	ExpressionStatement	op = OP_EXACTMB2N3	342:15:7253:7271	1161860	7	True				
ANR	1161956	AssignmentExpression	op = OP_EXACTMB2N3		1161860	0		=			
ANR	1161957	Identifier	op		1161860	0					
ANR	1161958	Identifier	OP_EXACTMB2N3		1161860	1					
ANR	1161959	BreakStatement	break ;	342:35:7273:7278	1161860	8	True				
ANR	1161960	Label	default :	343:6:7286:7293	1161860	9	True				
ANR	1161961	Identifier	default		1161860	0					
ANR	1161962	ExpressionStatement	op = OP_EXACTMB2N	343:15:7295:7312	1161860	10	True				
ANR	1161963	AssignmentExpression	op = OP_EXACTMB2N		1161860	0		=			
ANR	1161964	Identifier	op		1161860	0					
ANR	1161965	Identifier	OP_EXACTMB2N		1161860	1					
ANR	1161966	BreakStatement	break ;	343:35:7315:7320	1161860	11	True				
ANR	1161967	BreakStatement	break ;	345:6:7336:7341	1161860	5	True				
ANR	1161968	Label	case 3 :	347:4:7348:7354	1161860	6	True				
ANR	1161969	ExpressionStatement	op = OP_EXACTMB3N	348:6:7362:7379	1161860	7	True				
ANR	1161970	AssignmentExpression	op = OP_EXACTMB3N		1161860	0		=			
ANR	1161971	Identifier	op		1161860	0					
ANR	1161972	Identifier	OP_EXACTMB3N		1161860	1					
ANR	1161973	BreakStatement	break ;	349:6:7387:7392	1161860	8	True				
ANR	1161974	Label	default :	351:4:7399:7406	1161860	9	True				
ANR	1161975	Identifier	default		1161860	0					
ANR	1161976	ExpressionStatement	op = OP_EXACTMBN	352:6:7414:7430	1161860	10	True				
ANR	1161977	AssignmentExpression	op = OP_EXACTMBN		1161860	0		=			
ANR	1161978	Identifier	op		1161860	0					
ANR	1161979	Identifier	OP_EXACTMBN		1161860	1					
ANR	1161980	BreakStatement	break ;	353:6:7438:7443	1161860	11	True				
ANR	1161981	ReturnStatement	return op ;	356:2:7457:7466	1161860	2	True				
ANR	1161982	Identifier	op		1161860	0					
ANR	1161983	ReturnType	static int		1161860	1					
ANR	1161984	Identifier	select_str_opcode		1161860	2					
ANR	1161985	ParameterList	"int mb_len , int str_len , int ignore_case"		1161860	3					
ANR	1161986	Parameter	int mb_len	315:18:6612:6621	1161860	0	True				
ANR	1161987	ParameterType	int		1161860	0					
ANR	1161988	Identifier	mb_len		1161860	1					
ANR	1161989	Parameter	int str_len	315:30:6624:6634	1161860	1	True				
ANR	1161990	ParameterType	int		1161860	0					
ANR	1161991	Identifier	str_len		1161860	1					
ANR	1161992	Parameter	int ignore_case	315:43:6637:6651	1161860	2	True				
ANR	1161993	ParameterType	int		1161860	0					
ANR	1161994	Identifier	ignore_case		1161860	1					
ANR	1161995	CFGEntryNode	ENTRY		1161860		True				
ANR	1161996	CFGExitNode	EXIT		1161860		True				
ANR	1161997	Symbol	OP_EXACTMB3N		1161860						
ANR	1161998	Symbol	op		1161860						
ANR	1161999	Symbol	OP_EXACTMB2N3		1161860						
ANR	1162000	Symbol	OP_EXACTMB2N2		1161860						
ANR	1162001	Symbol	OP_EXACTMB2N		1161860						
ANR	1162002	Symbol	OP_EXACT1_IC		1161860						
ANR	1162003	Symbol	OP_EXACTN		1161860						
ANR	1162004	Symbol	ignore_case		1161860						
ANR	1162005	Symbol	OP_EXACT2		1161860						
ANR	1162006	Symbol	OP_EXACT1		1161860						
ANR	1162007	Symbol	OP_EXACT4		1161860						
ANR	1162008	Symbol	OP_EXACT3		1161860						
ANR	1162009	Symbol	str_len		1161860						
ANR	1162010	Symbol	OP_EXACT5		1161860						
ANR	1162011	Symbol	mb_len		1161860						
ANR	1162012	Symbol	OP_EXACTMBN		1161860						
ANR	1162013	Symbol	OP_EXACTMB2N1		1161860						
ANR	1162014	Symbol	OP_EXACTN_IC		1161860						
ANR	1162015	Function	compile_tree_empty_check	359:0:7471:8304							
ANR	1162016	FunctionDef	"compile_tree_empty_check (Node * node , regex_t * reg , int empty_info)"		1162015	0					
ANR	1162017	CompoundStatement		361:0:7549:8304	1162015	0					
ANR	1162018	IdentifierDeclStatement	int r ;	362:2:7553:7558	1162015	0	True				
ANR	1162019	IdentifierDecl	r		1162015	0					
ANR	1162020	IdentifierDeclType	int		1162015	0					
ANR	1162021	Identifier	r		1162015	1					
ANR	1162022	IdentifierDeclStatement	int saved_num_null_check = reg -> num_null_check ;	363:2:7562:7608	1162015	1	True				
ANR	1162023	IdentifierDecl	saved_num_null_check = reg -> num_null_check		1162015	0					
ANR	1162024	IdentifierDeclType	int		1162015	0					
ANR	1162025	Identifier	saved_num_null_check		1162015	1					
ANR	1162026	AssignmentExpression	saved_num_null_check = reg -> num_null_check		1162015	2		=			
ANR	1162027	Identifier	saved_num_null_check		1162015	0					
ANR	1162028	PtrMemberAccess	reg -> num_null_check		1162015	1					
ANR	1162029	Identifier	reg		1162015	0					
ANR	1162030	Identifier	num_null_check		1162015	1					
ANR	1162031	IfStatement	if ( empty_info != 0 )		1162015	2					
ANR	1162032	Condition	empty_info != 0	365:6:7617:7631	1162015	0	True				
ANR	1162033	EqualityExpression	empty_info != 0		1162015	0		!=			
ANR	1162034	Identifier	empty_info		1162015	0					
ANR	1162035	PrimaryExpression	0		1162015	1					
ANR	1162036	CompoundStatement		5:23:84:84	1162015	1					
ANR	1162037	ExpressionStatement	"r = add_opcode ( reg , OP_NULL_CHECK_START )"	366:4:7640:7680	1162015	0	True				
ANR	1162038	AssignmentExpression	"r = add_opcode ( reg , OP_NULL_CHECK_START )"		1162015	0		=			
ANR	1162039	Identifier	r		1162015	0					
ANR	1162040	CallExpression	"add_opcode ( reg , OP_NULL_CHECK_START )"		1162015	1					
ANR	1162041	Callee	add_opcode		1162015	0					
ANR	1162042	Identifier	add_opcode		1162015	0					
ANR	1162043	ArgumentList	reg		1162015	1					
ANR	1162044	Argument	reg		1162015	0					
ANR	1162045	Identifier	reg		1162015	0					
ANR	1162046	Argument	OP_NULL_CHECK_START		1162015	1					
ANR	1162047	Identifier	OP_NULL_CHECK_START		1162015	0					
ANR	1162048	IfStatement	if ( r )		1162015	1					
ANR	1162049	Condition	r	367:8:7690:7690	1162015	0	True				
ANR	1162050	Identifier	r		1162015	0					
ANR	1162051	ReturnStatement	return r ;	367:11:7693:7701	1162015	1	True				
ANR	1162052	Identifier	r		1162015	0					
ANR	1162053	ExpressionStatement	"r = add_mem_num ( reg , reg -> num_null_check )"	368:4:7707:7748	1162015	2	True				
ANR	1162054	AssignmentExpression	"r = add_mem_num ( reg , reg -> num_null_check )"		1162015	0		=			
ANR	1162055	Identifier	r		1162015	0					
ANR	1162056	CallExpression	"add_mem_num ( reg , reg -> num_null_check )"		1162015	1					
ANR	1162057	Callee	add_mem_num		1162015	0					
ANR	1162058	Identifier	add_mem_num		1162015	0					
ANR	1162059	ArgumentList	reg		1162015	1					
ANR	1162060	Argument	reg		1162015	0					
ANR	1162061	Identifier	reg		1162015	0					
ANR	1162062	Argument	reg -> num_null_check		1162015	1					
ANR	1162063	PtrMemberAccess	reg -> num_null_check		1162015	0					
ANR	1162064	Identifier	reg		1162015	0					
ANR	1162065	Identifier	num_null_check		1162015	1					
ANR	1162066	IfStatement	if ( r )		1162015	3					
ANR	1162067	Condition	r	369:8:7778:7778	1162015	0	True				
ANR	1162068	Identifier	r		1162015	0					
ANR	1162069	ReturnStatement	return r ;	369:11:7781:7789	1162015	1	True				
ANR	1162070	Identifier	r		1162015	0					
ANR	1162071	ExpressionStatement	reg -> num_null_check ++	370:4:7795:7816	1162015	4	True				
ANR	1162072	PostIncDecOperationExpression	reg -> num_null_check ++		1162015	0					
ANR	1162073	PtrMemberAccess	reg -> num_null_check		1162015	0					
ANR	1162074	Identifier	reg		1162015	0					
ANR	1162075	Identifier	num_null_check		1162015	1					
ANR	1162076	IncDec	++		1162015	1					
ANR	1162077	ExpressionStatement	"r = compile_tree ( node , reg )"	373:2:7825:7852	1162015	3	True				
ANR	1162078	AssignmentExpression	"r = compile_tree ( node , reg )"		1162015	0		=			
ANR	1162079	Identifier	r		1162015	0					
ANR	1162080	CallExpression	"compile_tree ( node , reg )"		1162015	1					
ANR	1162081	Callee	compile_tree		1162015	0					
ANR	1162082	Identifier	compile_tree		1162015	0					
ANR	1162083	ArgumentList	node		1162015	1					
ANR	1162084	Argument	node		1162015	0					
ANR	1162085	Identifier	node		1162015	0					
ANR	1162086	Argument	reg		1162015	1					
ANR	1162087	Identifier	reg		1162015	0					
ANR	1162088	IfStatement	if ( r )		1162015	4					
ANR	1162089	Condition	r	374:6:7860:7860	1162015	0	True				
ANR	1162090	Identifier	r		1162015	0					
ANR	1162091	ReturnStatement	return r ;	374:9:7863:7871	1162015	1	True				
ANR	1162092	Identifier	r		1162015	0					
ANR	1162093	IfStatement	if ( empty_info != 0 )		1162015	5					
ANR	1162094	Condition	empty_info != 0	376:6:7880:7894	1162015	0	True				
ANR	1162095	EqualityExpression	empty_info != 0		1162015	0		!=			
ANR	1162096	Identifier	empty_info		1162015	0					
ANR	1162097	PrimaryExpression	0		1162015	1					
ANR	1162098	CompoundStatement		16:23:347:347	1162015	1					
ANR	1162099	IfStatement	if ( empty_info == NQ_TARGET_IS_EMPTY )		1162015	0					
ANR	1162100	Condition	empty_info == NQ_TARGET_IS_EMPTY	377:8:7907:7938	1162015	0	True				
ANR	1162101	EqualityExpression	empty_info == NQ_TARGET_IS_EMPTY		1162015	0		==			
ANR	1162102	Identifier	empty_info		1162015	0					
ANR	1162103	Identifier	NQ_TARGET_IS_EMPTY		1162015	1					
ANR	1162104	ExpressionStatement	"r = add_opcode ( reg , OP_NULL_CHECK_END )"	378:6:7947:7985	1162015	1	True				
ANR	1162105	AssignmentExpression	"r = add_opcode ( reg , OP_NULL_CHECK_END )"		1162015	0		=			
ANR	1162106	Identifier	r		1162015	0					
ANR	1162107	CallExpression	"add_opcode ( reg , OP_NULL_CHECK_END )"		1162015	1					
ANR	1162108	Callee	add_opcode		1162015	0					
ANR	1162109	Identifier	add_opcode		1162015	0					
ANR	1162110	ArgumentList	reg		1162015	1					
ANR	1162111	Argument	reg		1162015	0					
ANR	1162112	Identifier	reg		1162015	0					
ANR	1162113	Argument	OP_NULL_CHECK_END		1162015	1					
ANR	1162114	Identifier	OP_NULL_CHECK_END		1162015	0					
ANR	1162115	ElseStatement	else		1162015	0					
ANR	1162116	IfStatement	if ( empty_info == NQ_TARGET_IS_EMPTY_MEM )		1162015	0					
ANR	1162117	Condition	empty_info == NQ_TARGET_IS_EMPTY_MEM	379:13:8000:8035	1162015	0	True				
ANR	1162118	EqualityExpression	empty_info == NQ_TARGET_IS_EMPTY_MEM		1162015	0		==			
ANR	1162119	Identifier	empty_info		1162015	0					
ANR	1162120	Identifier	NQ_TARGET_IS_EMPTY_MEM		1162015	1					
ANR	1162121	ExpressionStatement	"r = add_opcode ( reg , OP_NULL_CHECK_END_MEMST )"	380:6:8044:8088	1162015	1	True				
ANR	1162122	AssignmentExpression	"r = add_opcode ( reg , OP_NULL_CHECK_END_MEMST )"		1162015	0		=			
ANR	1162123	Identifier	r		1162015	0					
ANR	1162124	CallExpression	"add_opcode ( reg , OP_NULL_CHECK_END_MEMST )"		1162015	1					
ANR	1162125	Callee	add_opcode		1162015	0					
ANR	1162126	Identifier	add_opcode		1162015	0					
ANR	1162127	ArgumentList	reg		1162015	1					
ANR	1162128	Argument	reg		1162015	0					
ANR	1162129	Identifier	reg		1162015	0					
ANR	1162130	Argument	OP_NULL_CHECK_END_MEMST		1162015	1					
ANR	1162131	Identifier	OP_NULL_CHECK_END_MEMST		1162015	0					
ANR	1162132	ElseStatement	else		1162015	0					
ANR	1162133	IfStatement	if ( empty_info == NQ_TARGET_IS_EMPTY_REC )		1162015	0					
ANR	1162134	Condition	empty_info == NQ_TARGET_IS_EMPTY_REC	381:13:8103:8138	1162015	0	True				
ANR	1162135	EqualityExpression	empty_info == NQ_TARGET_IS_EMPTY_REC		1162015	0		==			
ANR	1162136	Identifier	empty_info		1162015	0					
ANR	1162137	Identifier	NQ_TARGET_IS_EMPTY_REC		1162015	1					
ANR	1162138	ExpressionStatement	"r = add_opcode ( reg , OP_NULL_CHECK_END_MEMST_PUSH )"	382:6:8147:8196	1162015	1	True				
ANR	1162139	AssignmentExpression	"r = add_opcode ( reg , OP_NULL_CHECK_END_MEMST_PUSH )"		1162015	0		=			
ANR	1162140	Identifier	r		1162015	0					
ANR	1162141	CallExpression	"add_opcode ( reg , OP_NULL_CHECK_END_MEMST_PUSH )"		1162015	1					
ANR	1162142	Callee	add_opcode		1162015	0					
ANR	1162143	Identifier	add_opcode		1162015	0					
ANR	1162144	ArgumentList	reg		1162015	1					
ANR	1162145	Argument	reg		1162015	0					
ANR	1162146	Identifier	reg		1162015	0					
ANR	1162147	Argument	OP_NULL_CHECK_END_MEMST_PUSH		1162015	1					
ANR	1162148	Identifier	OP_NULL_CHECK_END_MEMST_PUSH		1162015	0					
ANR	1162149	IfStatement	if ( r )		1162015	1					
ANR	1162150	Condition	r	384:8:8207:8207	1162015	0	True				
ANR	1162151	Identifier	r		1162015	0					
ANR	1162152	ReturnStatement	return r ;	384:11:8210:8218	1162015	1	True				
ANR	1162153	Identifier	r		1162015	0					
ANR	1162154	ExpressionStatement	"r = add_mem_num ( reg , saved_num_null_check )"	385:4:8224:8266	1162015	2	True				
ANR	1162155	AssignmentExpression	"r = add_mem_num ( reg , saved_num_null_check )"		1162015	0		=			
ANR	1162156	Identifier	r		1162015	0					
ANR	1162157	CallExpression	"add_mem_num ( reg , saved_num_null_check )"		1162015	1					
ANR	1162158	Callee	add_mem_num		1162015	0					
ANR	1162159	Identifier	add_mem_num		1162015	0					
ANR	1162160	ArgumentList	reg		1162015	1					
ANR	1162161	Argument	reg		1162015	0					
ANR	1162162	Identifier	reg		1162015	0					
ANR	1162163	Argument	saved_num_null_check		1162015	1					
ANR	1162164	Identifier	saved_num_null_check		1162015	0					
ANR	1162165	ReturnStatement	return r ;	387:2:8294:8302	1162015	6	True				
ANR	1162166	Identifier	r		1162015	0					
ANR	1162167	ReturnType	static int		1162015	1					
ANR	1162168	Identifier	compile_tree_empty_check		1162015	2					
ANR	1162169	ParameterList	"Node * node , regex_t * reg , int empty_info"		1162015	3					
ANR	1162170	Parameter	Node * node	360:25:7507:7516	1162015	0	True				
ANR	1162171	ParameterType	Node *		1162015	0					
ANR	1162172	Identifier	node		1162015	1					
ANR	1162173	Parameter	regex_t * reg	360:37:7519:7530	1162015	1	True				
ANR	1162174	ParameterType	regex_t *		1162015	0					
ANR	1162175	Identifier	reg		1162015	1					
ANR	1162176	Parameter	int empty_info	360:51:7533:7546	1162015	2	True				
ANR	1162177	ParameterType	int		1162015	0					
ANR	1162178	Identifier	empty_info		1162015	1					
ANR	1162179	CFGEntryNode	ENTRY		1162015		True				
ANR	1162180	CFGExitNode	EXIT		1162015		True				
ANR	1162181	Symbol	NQ_TARGET_IS_EMPTY		1162015						
ANR	1162182	Symbol	NQ_TARGET_IS_EMPTY_MEM		1162015						
ANR	1162183	Symbol	OP_NULL_CHECK_START		1162015						
ANR	1162184	Symbol	OP_NULL_CHECK_END_MEMST		1162015						
ANR	1162185	Symbol	add_mem_num		1162015						
ANR	1162186	Symbol	reg -> num_null_check		1162015						
ANR	1162187	Symbol	node		1162015						
ANR	1162188	Symbol	r		1162015						
ANR	1162189	Symbol	saved_num_null_check		1162015						
ANR	1162190	Symbol	compile_tree		1162015						
ANR	1162191	Symbol	reg		1162015						
ANR	1162192	Symbol	OP_NULL_CHECK_END		1162015						
ANR	1162193	Symbol	OP_NULL_CHECK_END_MEMST_PUSH		1162015						
ANR	1162194	Symbol	empty_info		1162015						
ANR	1162195	Symbol	add_opcode		1162015						
ANR	1162196	Symbol	* reg		1162015						
ANR	1162197	Symbol	NQ_TARGET_IS_EMPTY_REC		1162015						
ANR	1162198	Function	compile_call	391:0:8330:8638							
ANR	1162199	FunctionDef	"compile_call (CallNode * node , regex_t * reg)"		1162198	0					
ANR	1162200	CompoundStatement		393:0:8384:8638	1162198	0					
ANR	1162201	IdentifierDeclStatement	int r ;	394:2:8388:8393	1162198	0	True				
ANR	1162202	IdentifierDecl	r		1162198	0					
ANR	1162203	IdentifierDeclType	int		1162198	0					
ANR	1162204	Identifier	r		1162198	1					
ANR	1162205	ExpressionStatement	"r = add_opcode ( reg , OP_CALL )"	396:2:8398:8426	1162198	1	True				
ANR	1162206	AssignmentExpression	"r = add_opcode ( reg , OP_CALL )"		1162198	0		=			
ANR	1162207	Identifier	r		1162198	0					
ANR	1162208	CallExpression	"add_opcode ( reg , OP_CALL )"		1162198	1					
ANR	1162209	Callee	add_opcode		1162198	0					
ANR	1162210	Identifier	add_opcode		1162198	0					
ANR	1162211	ArgumentList	reg		1162198	1					
ANR	1162212	Argument	reg		1162198	0					
ANR	1162213	Identifier	reg		1162198	0					
ANR	1162214	Argument	OP_CALL		1162198	1					
ANR	1162215	Identifier	OP_CALL		1162198	0					
ANR	1162216	IfStatement	if ( r )		1162198	2					
ANR	1162217	Condition	r	397:6:8434:8434	1162198	0	True				
ANR	1162218	Identifier	r		1162198	0					
ANR	1162219	ReturnStatement	return r ;	397:9:8437:8445	1162198	1	True				
ANR	1162220	Identifier	r		1162198	0					
ANR	1162221	ExpressionStatement	"r = unset_addr_list_add ( node -> unset_addr_list , BBUF_GET_OFFSET_POS ( reg ) , node -> target )"	398:2:8449:8561	1162198	3	True				
ANR	1162222	AssignmentExpression	"r = unset_addr_list_add ( node -> unset_addr_list , BBUF_GET_OFFSET_POS ( reg ) , node -> target )"		1162198	0		=			
ANR	1162223	Identifier	r		1162198	0					
ANR	1162224	CallExpression	"unset_addr_list_add ( node -> unset_addr_list , BBUF_GET_OFFSET_POS ( reg ) , node -> target )"		1162198	1					
ANR	1162225	Callee	unset_addr_list_add		1162198	0					
ANR	1162226	Identifier	unset_addr_list_add		1162198	0					
ANR	1162227	ArgumentList	node -> unset_addr_list		1162198	1					
ANR	1162228	Argument	node -> unset_addr_list		1162198	0					
ANR	1162229	PtrMemberAccess	node -> unset_addr_list		1162198	0					
ANR	1162230	Identifier	node		1162198	0					
ANR	1162231	Identifier	unset_addr_list		1162198	1					
ANR	1162232	Argument	BBUF_GET_OFFSET_POS ( reg )		1162198	1					
ANR	1162233	CallExpression	BBUF_GET_OFFSET_POS ( reg )		1162198	0					
ANR	1162234	Callee	BBUF_GET_OFFSET_POS		1162198	0					
ANR	1162235	Identifier	BBUF_GET_OFFSET_POS		1162198	0					
ANR	1162236	ArgumentList	reg		1162198	1					
ANR	1162237	Argument	reg		1162198	0					
ANR	1162238	Identifier	reg		1162198	0					
ANR	1162239	Argument	node -> target		1162198	2					
ANR	1162240	PtrMemberAccess	node -> target		1162198	0					
ANR	1162241	Identifier	node		1162198	0					
ANR	1162242	Identifier	target		1162198	1					
ANR	1162243	IfStatement	if ( r )		1162198	4					
ANR	1162244	Condition	r	400:6:8569:8569	1162198	0	True				
ANR	1162245	Identifier	r		1162198	0					
ANR	1162246	ReturnStatement	return r ;	400:9:8572:8580	1162198	1	True				
ANR	1162247	Identifier	r		1162198	0					
ANR	1162248	ExpressionStatement	"r = add_abs_addr ( reg , 0 )"	401:2:8584:8624	1162198	5	True				
ANR	1162249	AssignmentExpression	"r = add_abs_addr ( reg , 0 )"		1162198	0		=			
ANR	1162250	Identifier	r		1162198	0					
ANR	1162251	CallExpression	"add_abs_addr ( reg , 0 )"		1162198	1					
ANR	1162252	Callee	add_abs_addr		1162198	0					
ANR	1162253	Identifier	add_abs_addr		1162198	0					
ANR	1162254	ArgumentList	reg		1162198	1					
ANR	1162255	Argument	reg		1162198	0					
ANR	1162256	Identifier	reg		1162198	0					
ANR	1162257	Argument	0		1162198	1					
ANR	1162258	PrimaryExpression	0		1162198	0					
ANR	1162259	ReturnStatement	return r ;	402:2:8628:8636	1162198	6	True				
ANR	1162260	Identifier	r		1162198	0					
ANR	1162261	ReturnType	static int		1162198	1					
ANR	1162262	Identifier	compile_call		1162198	2					
ANR	1162263	ParameterList	"CallNode * node , regex_t * reg"		1162198	3					
ANR	1162264	Parameter	CallNode * node	392:13:8354:8367	1162198	0	True				
ANR	1162265	ParameterType	CallNode *		1162198	0					
ANR	1162266	Identifier	node		1162198	1					
ANR	1162267	Parameter	regex_t * reg	392:29:8370:8381	1162198	1	True				
ANR	1162268	ParameterType	regex_t *		1162198	0					
ANR	1162269	Identifier	reg		1162198	1					
ANR	1162270	CFGEntryNode	ENTRY		1162198		True				
ANR	1162271	CFGExitNode	EXIT		1162198		True				
ANR	1162272	Symbol	node		1162198						
ANR	1162273	Symbol	r		1162198						
ANR	1162274	Symbol	BBUF_GET_OFFSET_POS		1162198						
ANR	1162275	Symbol	node -> unset_addr_list		1162198						
ANR	1162276	Symbol	reg		1162198						
ANR	1162277	Symbol	OP_CALL		1162198						
ANR	1162278	Symbol	add_abs_addr		1162198						
ANR	1162279	Symbol	* node		1162198						
ANR	1162280	Symbol	add_opcode		1162198						
ANR	1162281	Symbol	node -> target		1162198						
ANR	1162282	Symbol	unset_addr_list_add		1162198						
ANR	1162283	Function	compile_tree_n_times	406:0:8648:8826							
ANR	1162284	FunctionDef	"compile_tree_n_times (Node * node , int n , regex_t * reg)"		1162283	0					
ANR	1162285	CompoundStatement		408:0:8713:8826	1162283	0					
ANR	1162286	IdentifierDeclStatement	"int i , r ;"	409:2:8717:8725	1162283	0	True				
ANR	1162287	IdentifierDecl	i		1162283	0					
ANR	1162288	IdentifierDeclType	int		1162283	0					
ANR	1162289	Identifier	i		1162283	1					
ANR	1162290	IdentifierDecl	r		1162283	1					
ANR	1162291	IdentifierDeclType	int		1162283	0					
ANR	1162292	Identifier	r		1162283	1					
ANR	1162293	ForStatement	for ( i = 0 ; i < n ; i ++ )		1162283	1					
ANR	1162294	ForInit	i = 0 ;	411:7:8735:8740	1162283	0	True				
ANR	1162295	AssignmentExpression	i = 0		1162283	0		=			
ANR	1162296	Identifier	i		1162283	0					
ANR	1162297	PrimaryExpression	0		1162283	1					
ANR	1162298	Condition	i < n	411:14:8742:8746	1162283	1	True				
ANR	1162299	RelationalExpression	i < n		1162283	0		<			
ANR	1162300	Identifier	i		1162283	0					
ANR	1162301	Identifier	n		1162283	1					
ANR	1162302	PostIncDecOperationExpression	i ++	411:21:8749:8751	1162283	2	True				
ANR	1162303	Identifier	i		1162283	0					
ANR	1162304	IncDec	++		1162283	1					
ANR	1162305	CompoundStatement		4:26:40:40	1162283	3					
ANR	1162306	ExpressionStatement	"r = compile_tree ( node , reg )"	412:4:8760:8787	1162283	0	True				
ANR	1162307	AssignmentExpression	"r = compile_tree ( node , reg )"		1162283	0		=			
ANR	1162308	Identifier	r		1162283	0					
ANR	1162309	CallExpression	"compile_tree ( node , reg )"		1162283	1					
ANR	1162310	Callee	compile_tree		1162283	0					
ANR	1162311	Identifier	compile_tree		1162283	0					
ANR	1162312	ArgumentList	node		1162283	1					
ANR	1162313	Argument	node		1162283	0					
ANR	1162314	Identifier	node		1162283	0					
ANR	1162315	Argument	reg		1162283	1					
ANR	1162316	Identifier	reg		1162283	0					
ANR	1162317	IfStatement	if ( r )		1162283	1					
ANR	1162318	Condition	r	413:8:8797:8797	1162283	0	True				
ANR	1162319	Identifier	r		1162283	0					
ANR	1162320	ReturnStatement	return r ;	413:11:8800:8808	1162283	1	True				
ANR	1162321	Identifier	r		1162283	0					
ANR	1162322	ReturnStatement	return 0 ;	415:2:8816:8824	1162283	2	True				
ANR	1162323	PrimaryExpression	0		1162283	0					
ANR	1162324	ReturnType	static int		1162283	1					
ANR	1162325	Identifier	compile_tree_n_times		1162283	2					
ANR	1162326	ParameterList	"Node * node , int n , regex_t * reg"		1162283	3					
ANR	1162327	Parameter	Node * node	407:21:8680:8689	1162283	0	True				
ANR	1162328	ParameterType	Node *		1162283	0					
ANR	1162329	Identifier	node		1162283	1					
ANR	1162330	Parameter	int n	407:33:8692:8696	1162283	1	True				
ANR	1162331	ParameterType	int		1162283	0					
ANR	1162332	Identifier	n		1162283	1					
ANR	1162333	Parameter	regex_t * reg	407:40:8699:8710	1162283	2	True				
ANR	1162334	ParameterType	regex_t *		1162283	0					
ANR	1162335	Identifier	reg		1162283	1					
ANR	1162336	CFGEntryNode	ENTRY		1162283		True				
ANR	1162337	CFGExitNode	EXIT		1162283		True				
ANR	1162338	Symbol	node		1162283						
ANR	1162339	Symbol	r		1162283						
ANR	1162340	Symbol	compile_tree		1162283						
ANR	1162341	Symbol	reg		1162283						
ANR	1162342	Symbol	i		1162283						
ANR	1162343	Symbol	n		1162283						
ANR	1162344	DeclStmt									
ANR	1162345	Decl							int	int	len
ANR	1162346	DeclStmt									
ANR	1162347	Decl							int	int	op
ANR	1162348	DeclStmt									
ANR	1162349	Decl							mb_len	mb_len *	str_len
ANR	1162350	Function	add_compile_string	435:0:9227:9687							
ANR	1162351	FunctionDef	"add_compile_string (UChar * s , int mb_len , int str_len , regex_t * reg , int ignore_case)"		1162350	0					
ANR	1162352	CompoundStatement		438:0:9342:9687	1162350	0					
ANR	1162353	IdentifierDeclStatement	"int op = select_str_opcode ( mb_len , str_len , ignore_case ) ;"	439:2:9346:9402	1162350	0	True				
ANR	1162354	IdentifierDecl	"op = select_str_opcode ( mb_len , str_len , ignore_case )"		1162350	0					
ANR	1162355	IdentifierDeclType	int		1162350	0					
ANR	1162356	Identifier	op		1162350	1					
ANR	1162357	AssignmentExpression	"op = select_str_opcode ( mb_len , str_len , ignore_case )"		1162350	2		=			
ANR	1162358	Identifier	op		1162350	0					
ANR	1162359	CallExpression	"select_str_opcode ( mb_len , str_len , ignore_case )"		1162350	1					
ANR	1162360	Callee	select_str_opcode		1162350	0					
ANR	1162361	Identifier	select_str_opcode		1162350	0					
ANR	1162362	ArgumentList	mb_len		1162350	1					
ANR	1162363	Argument	mb_len		1162350	0					
ANR	1162364	Identifier	mb_len		1162350	0					
ANR	1162365	Argument	str_len		1162350	1					
ANR	1162366	Identifier	str_len		1162350	0					
ANR	1162367	Argument	ignore_case		1162350	2					
ANR	1162368	Identifier	ignore_case		1162350	0					
ANR	1162369	ExpressionStatement	"add_opcode ( reg , op )"	440:2:9406:9425	1162350	1	True				
ANR	1162370	CallExpression	"add_opcode ( reg , op )"		1162350	0					
ANR	1162371	Callee	add_opcode		1162350	0					
ANR	1162372	Identifier	add_opcode		1162350	0					
ANR	1162373	ArgumentList	reg		1162350	1					
ANR	1162374	Argument	reg		1162350	0					
ANR	1162375	Identifier	reg		1162350	0					
ANR	1162376	Argument	op		1162350	1					
ANR	1162377	Identifier	op		1162350	0					
ANR	1162378	IfStatement	if ( op == OP_EXACTMBN )		1162350	2					
ANR	1162379	Condition	op == OP_EXACTMBN	442:6:9434:9450	1162350	0	True				
ANR	1162380	EqualityExpression	op == OP_EXACTMBN		1162350	0		==			
ANR	1162381	Identifier	op		1162350	0					
ANR	1162382	Identifier	OP_EXACTMBN		1162350	1					
ANR	1162383	ExpressionStatement	"add_length ( reg , mb_len )"	443:4:9457:9480	1162350	1	True				
ANR	1162384	CallExpression	"add_length ( reg , mb_len )"		1162350	0					
ANR	1162385	Callee	add_length		1162350	0					
ANR	1162386	Identifier	add_length		1162350	0					
ANR	1162387	ArgumentList	reg		1162350	1					
ANR	1162388	Argument	reg		1162350	0					
ANR	1162389	Identifier	reg		1162350	0					
ANR	1162390	Argument	mb_len		1162350	1					
ANR	1162391	Identifier	mb_len		1162350	0					
ANR	1162392	IfStatement	if ( IS_NEED_STR_LEN_OP_EXACT ( op ) )		1162350	3					
ANR	1162393	Condition	IS_NEED_STR_LEN_OP_EXACT ( op )	445:6:9489:9516	1162350	0	True				
ANR	1162394	CallExpression	IS_NEED_STR_LEN_OP_EXACT ( op )		1162350	0					
ANR	1162395	Callee	IS_NEED_STR_LEN_OP_EXACT		1162350	0					
ANR	1162396	Identifier	IS_NEED_STR_LEN_OP_EXACT		1162350	0					
ANR	1162397	ArgumentList	op		1162350	1					
ANR	1162398	Argument	op		1162350	0					
ANR	1162399	Identifier	op		1162350	0					
ANR	1162400	CompoundStatement		8:36:176:176	1162350	1					
ANR	1162401	IfStatement	if ( op == OP_EXACTN_IC )		1162350	0					
ANR	1162402	Condition	op == OP_EXACTN_IC	446:8:9529:9546	1162350	0	True				
ANR	1162403	EqualityExpression	op == OP_EXACTN_IC		1162350	0		==			
ANR	1162404	Identifier	op		1162350	0					
ANR	1162405	Identifier	OP_EXACTN_IC		1162350	1					
ANR	1162406	ExpressionStatement	"add_length ( reg , mb_len * str_len )"	447:6:9555:9588	1162350	1	True				
ANR	1162407	CallExpression	"add_length ( reg , mb_len * str_len )"		1162350	0					
ANR	1162408	Callee	add_length		1162350	0					
ANR	1162409	Identifier	add_length		1162350	0					
ANR	1162410	ArgumentList	reg		1162350	1					
ANR	1162411	Argument	reg		1162350	0					
ANR	1162412	Identifier	reg		1162350	0					
ANR	1162413	Argument	mb_len * str_len		1162350	1					
ANR	1162414	MultiplicativeExpression	mb_len * str_len		1162350	0		*			
ANR	1162415	Identifier	mb_len		1162350	0					
ANR	1162416	Identifier	str_len		1162350	1					
ANR	1162417	ElseStatement	else		1162350	0					
ANR	1162418	ExpressionStatement	"add_length ( reg , str_len )"	449:6:9605:9629	1162350	0	True				
ANR	1162419	CallExpression	"add_length ( reg , str_len )"		1162350	0					
ANR	1162420	Callee	add_length		1162350	0					
ANR	1162421	Identifier	add_length		1162350	0					
ANR	1162422	ArgumentList	reg		1162350	1					
ANR	1162423	Argument	reg		1162350	0					
ANR	1162424	Identifier	reg		1162350	0					
ANR	1162425	Argument	str_len		1162350	1					
ANR	1162426	Identifier	str_len		1162350	0					
ANR	1162427	ExpressionStatement	"add_bytes ( reg , s , mb_len * str_len )"	452:2:9638:9673	1162350	4	True				
ANR	1162428	CallExpression	"add_bytes ( reg , s , mb_len * str_len )"		1162350	0					
ANR	1162429	Callee	add_bytes		1162350	0					
ANR	1162430	Identifier	add_bytes		1162350	0					
ANR	1162431	ArgumentList	reg		1162350	1					
ANR	1162432	Argument	reg		1162350	0					
ANR	1162433	Identifier	reg		1162350	0					
ANR	1162434	Argument	s		1162350	1					
ANR	1162435	Identifier	s		1162350	0					
ANR	1162436	Argument	mb_len * str_len		1162350	2					
ANR	1162437	MultiplicativeExpression	mb_len * str_len		1162350	0		*			
ANR	1162438	Identifier	mb_len		1162350	0					
ANR	1162439	Identifier	str_len		1162350	1					
ANR	1162440	ReturnStatement	return 0 ;	453:2:9677:9685	1162350	5	True				
ANR	1162441	PrimaryExpression	0		1162350	0					
ANR	1162442	ReturnType	static int		1162350	1					
ANR	1162443	Identifier	add_compile_string		1162350	2					
ANR	1162444	ParameterList	"UChar * s , int mb_len , int str_len , regex_t * reg , int ignore_case"		1162350	3					
ANR	1162445	Parameter	UChar * s	436:19:9257:9264	1162350	0	True				
ANR	1162446	ParameterType	UChar *		1162350	0					
ANR	1162447	Identifier	s		1162350	1					
ANR	1162448	Parameter	int mb_len	436:29:9267:9276	1162350	1	True				
ANR	1162449	ParameterType	int		1162350	0					
ANR	1162450	Identifier	mb_len		1162350	1					
ANR	1162451	Parameter	int str_len	436:41:9279:9289	1162350	2	True				
ANR	1162452	ParameterType	int		1162350	0					
ANR	1162453	Identifier	str_len		1162350	1					
ANR	1162454	Parameter	regex_t * reg	437:19:9311:9322	1162350	3	True				
ANR	1162455	ParameterType	regex_t *		1162350	0					
ANR	1162456	Identifier	reg		1162350	1					
ANR	1162457	Parameter	int ignore_case	437:33:9325:9339	1162350	4	True				
ANR	1162458	ParameterType	int		1162350	0					
ANR	1162459	Identifier	ignore_case		1162350	1					
ANR	1162460	CFGEntryNode	ENTRY		1162350		True				
ANR	1162461	CFGExitNode	EXIT		1162350		True				
ANR	1162462	Symbol	ignore_case		1162350						
ANR	1162463	Symbol	op		1162350						
ANR	1162464	Symbol	select_str_opcode		1162350						
ANR	1162465	Symbol	s		1162350						
ANR	1162466	Symbol	str_len		1162350						
ANR	1162467	Symbol	reg		1162350						
ANR	1162468	Symbol	mb_len		1162350						
ANR	1162469	Symbol	OP_EXACTMBN		1162350						
ANR	1162470	Symbol	IS_NEED_STR_LEN_OP_EXACT		1162350						
ANR	1162471	Symbol	OP_EXACTN_IC		1162350						
ANR	1162472	Function	compile_length_string_node	457:0:9691:10421							
ANR	1162473	FunctionDef	"compile_length_string_node (Node * node , regex_t * reg)"		1162472	0					
ANR	1162474	CompoundStatement		459:0:9755:10421	1162472	0					
ANR	1162475	IdentifierDeclStatement	"int rlen , r , len , prev_len , slen , ambig ;"	460:2:9759:9798	1162472	0	True				
ANR	1162476	IdentifierDecl	rlen		1162472	0					
ANR	1162477	IdentifierDeclType	int		1162472	0					
ANR	1162478	Identifier	rlen		1162472	1					
ANR	1162479	IdentifierDecl	r		1162472	1					
ANR	1162480	IdentifierDeclType	int		1162472	0					
ANR	1162481	Identifier	r		1162472	1					
ANR	1162482	IdentifierDecl	len		1162472	2					
ANR	1162483	IdentifierDeclType	int		1162472	0					
ANR	1162484	Identifier	len		1162472	1					
ANR	1162485	IdentifierDecl	prev_len		1162472	3					
ANR	1162486	IdentifierDeclType	int		1162472	0					
ANR	1162487	Identifier	prev_len		1162472	1					
ANR	1162488	IdentifierDecl	slen		1162472	4					
ANR	1162489	IdentifierDeclType	int		1162472	0					
ANR	1162490	Identifier	slen		1162472	1					
ANR	1162491	IdentifierDecl	ambig		1162472	5					
ANR	1162492	IdentifierDeclType	int		1162472	0					
ANR	1162493	Identifier	ambig		1162472	1					
ANR	1162494	IdentifierDeclStatement	OnigEncoding enc = reg -> enc ;	461:2:9802:9829	1162472	1	True				
ANR	1162495	IdentifierDecl	enc = reg -> enc		1162472	0					
ANR	1162496	IdentifierDeclType	OnigEncoding		1162472	0					
ANR	1162497	Identifier	enc		1162472	1					
ANR	1162498	AssignmentExpression	enc = reg -> enc		1162472	2		=			
ANR	1162499	Identifier	enc		1162472	0					
ANR	1162500	PtrMemberAccess	reg -> enc		1162472	1					
ANR	1162501	Identifier	reg		1162472	0					
ANR	1162502	Identifier	enc		1162472	1					
ANR	1162503	IdentifierDeclStatement	"UChar * p , * prev ;"	462:2:9833:9848	1162472	2	True				
ANR	1162504	IdentifierDecl	* p		1162472	0					
ANR	1162505	IdentifierDeclType	UChar *		1162472	0					
ANR	1162506	Identifier	p		1162472	1					
ANR	1162507	IdentifierDecl	* prev		1162472	1					
ANR	1162508	IdentifierDeclType	UChar *		1162472	0					
ANR	1162509	Identifier	prev		1162472	1					
ANR	1162510	IdentifierDeclStatement	StrNode * sn ;	463:2:9852:9863	1162472	3	True				
ANR	1162511	IdentifierDecl	* sn		1162472	0					
ANR	1162512	IdentifierDeclType	StrNode *		1162472	0					
ANR	1162513	Identifier	sn		1162472	1					
ANR	1162514	ExpressionStatement	sn = NSTR ( node )	465:2:9868:9883	1162472	4	True				
ANR	1162515	AssignmentExpression	sn = NSTR ( node )		1162472	0		=			
ANR	1162516	Identifier	sn		1162472	0					
ANR	1162517	CallExpression	NSTR ( node )		1162472	1					
ANR	1162518	Callee	NSTR		1162472	0					
ANR	1162519	Identifier	NSTR		1162472	0					
ANR	1162520	ArgumentList	node		1162472	1					
ANR	1162521	Argument	node		1162472	0					
ANR	1162522	Identifier	node		1162472	0					
ANR	1162523	IfStatement	if ( sn -> end <= sn -> s )		1162472	5					
ANR	1162524	Condition	sn -> end <= sn -> s	466:6:9891:9906	1162472	0	True				
ANR	1162525	RelationalExpression	sn -> end <= sn -> s		1162472	0		<=			
ANR	1162526	PtrMemberAccess	sn -> end		1162472	0					
ANR	1162527	Identifier	sn		1162472	0					
ANR	1162528	Identifier	end		1162472	1					
ANR	1162529	PtrMemberAccess	sn -> s		1162472	1					
ANR	1162530	Identifier	sn		1162472	0					
ANR	1162531	Identifier	s		1162472	1					
ANR	1162532	ReturnStatement	return 0 ;	467:4:9913:9921	1162472	1	True				
ANR	1162533	PrimaryExpression	0		1162472	0					
ANR	1162534	ExpressionStatement	ambig = NSTRING_IS_AMBIG ( node )	469:2:9926:9956	1162472	6	True				
ANR	1162535	AssignmentExpression	ambig = NSTRING_IS_AMBIG ( node )		1162472	0		=			
ANR	1162536	Identifier	ambig		1162472	0					
ANR	1162537	CallExpression	NSTRING_IS_AMBIG ( node )		1162472	1					
ANR	1162538	Callee	NSTRING_IS_AMBIG		1162472	0					
ANR	1162539	Identifier	NSTRING_IS_AMBIG		1162472	0					
ANR	1162540	ArgumentList	node		1162472	1					
ANR	1162541	Argument	node		1162472	0					
ANR	1162542	Identifier	node		1162472	0					
ANR	1162543	ExpressionStatement	p = prev = sn -> s	471:2:9961:9977	1162472	7	True				
ANR	1162544	AssignmentExpression	p = prev = sn -> s		1162472	0		=			
ANR	1162545	Identifier	p		1162472	0					
ANR	1162546	AssignmentExpression	prev = sn -> s		1162472	1		=			
ANR	1162547	Identifier	prev		1162472	0					
ANR	1162548	PtrMemberAccess	sn -> s		1162472	1					
ANR	1162549	Identifier	sn		1162472	0					
ANR	1162550	Identifier	s		1162472	1					
ANR	1162551	ExpressionStatement	"prev_len = enclen ( enc , p )"	472:2:9981:10006	1162472	8	True				
ANR	1162552	AssignmentExpression	"prev_len = enclen ( enc , p )"		1162472	0		=			
ANR	1162553	Identifier	prev_len		1162472	0					
ANR	1162554	CallExpression	"enclen ( enc , p )"		1162472	1					
ANR	1162555	Callee	enclen		1162472	0					
ANR	1162556	Identifier	enclen		1162472	0					
ANR	1162557	ArgumentList	enc		1162472	1					
ANR	1162558	Argument	enc		1162472	0					
ANR	1162559	Identifier	enc		1162472	0					
ANR	1162560	Argument	p		1162472	1					
ANR	1162561	Identifier	p		1162472	0					
ANR	1162562	ExpressionStatement	p += prev_len	473:2:10010:10023	1162472	9	True				
ANR	1162563	AssignmentExpression	p += prev_len		1162472	0		+=			
ANR	1162564	Identifier	p		1162472	0					
ANR	1162565	Identifier	prev_len		1162472	1					
ANR	1162566	ExpressionStatement	slen = 1	474:2:10027:10035	1162472	10	True				
ANR	1162567	AssignmentExpression	slen = 1		1162472	0		=			
ANR	1162568	Identifier	slen		1162472	0					
ANR	1162569	PrimaryExpression	1		1162472	1					
ANR	1162570	ExpressionStatement	rlen = 0	475:2:10039:10047	1162472	11	True				
ANR	1162571	AssignmentExpression	rlen = 0		1162472	0		=			
ANR	1162572	Identifier	rlen		1162472	0					
ANR	1162573	PrimaryExpression	0		1162472	1					
ANR	1162574	ForStatement	for ( ; p < sn -> end ; )		1162472	12					
ANR	1162575	Condition	p < sn -> end	477:9:10059:10069	1162472	0	True				
ANR	1162576	RelationalExpression	p < sn -> end		1162472	0		<			
ANR	1162577	Identifier	p		1162472	0					
ANR	1162578	PtrMemberAccess	sn -> end		1162472	1					
ANR	1162579	Identifier	sn		1162472	0					
ANR	1162580	Identifier	end		1162472	1					
ANR	1162581	CompoundStatement		19:24:318:318	1162472	1					
ANR	1162582	ExpressionStatement	"len = enclen ( enc , p )"	478:4:10080:10100	1162472	0	True				
ANR	1162583	AssignmentExpression	"len = enclen ( enc , p )"		1162472	0		=			
ANR	1162584	Identifier	len		1162472	0					
ANR	1162585	CallExpression	"enclen ( enc , p )"		1162472	1					
ANR	1162586	Callee	enclen		1162472	0					
ANR	1162587	Identifier	enclen		1162472	0					
ANR	1162588	ArgumentList	enc		1162472	1					
ANR	1162589	Argument	enc		1162472	0					
ANR	1162590	Identifier	enc		1162472	0					
ANR	1162591	Argument	p		1162472	1					
ANR	1162592	Identifier	p		1162472	0					
ANR	1162593	IfStatement	if ( len == prev_len )		1162472	1					
ANR	1162594	Condition	len == prev_len	479:8:10110:10124	1162472	0	True				
ANR	1162595	EqualityExpression	len == prev_len		1162472	0		==			
ANR	1162596	Identifier	len		1162472	0					
ANR	1162597	Identifier	prev_len		1162472	1					
ANR	1162598	CompoundStatement		21:25:371:371	1162472	1					
ANR	1162599	ExpressionStatement	slen ++	480:6:10135:10141	1162472	0	True				
ANR	1162600	PostIncDecOperationExpression	slen ++		1162472	0					
ANR	1162601	Identifier	slen		1162472	0					
ANR	1162602	IncDec	++		1162472	1					
ANR	1162603	ElseStatement	else		1162472	0					
ANR	1162604	CompoundStatement		24:9:402:402	1162472	0					
ANR	1162605	ExpressionStatement	"r = add_compile_string_length ( prev , prev_len , slen , reg , ambig )"	483:6:10166:10229	1162472	0	True				
ANR	1162606	AssignmentExpression	"r = add_compile_string_length ( prev , prev_len , slen , reg , ambig )"		1162472	0		=			
ANR	1162607	Identifier	r		1162472	0					
ANR	1162608	CallExpression	"add_compile_string_length ( prev , prev_len , slen , reg , ambig )"		1162472	1					
ANR	1162609	Callee	add_compile_string_length		1162472	0					
ANR	1162610	Identifier	add_compile_string_length		1162472	0					
ANR	1162611	ArgumentList	prev		1162472	1					
ANR	1162612	Argument	prev		1162472	0					
ANR	1162613	Identifier	prev		1162472	0					
ANR	1162614	Argument	prev_len		1162472	1					
ANR	1162615	Identifier	prev_len		1162472	0					
ANR	1162616	Argument	slen		1162472	2					
ANR	1162617	Identifier	slen		1162472	0					
ANR	1162618	Argument	reg		1162472	3					
ANR	1162619	Identifier	reg		1162472	0					
ANR	1162620	Argument	ambig		1162472	4					
ANR	1162621	Identifier	ambig		1162472	0					
ANR	1162622	ExpressionStatement	rlen += r	484:6:10237:10246	1162472	1	True				
ANR	1162623	AssignmentExpression	rlen += r		1162472	0		+=			
ANR	1162624	Identifier	rlen		1162472	0					
ANR	1162625	Identifier	r		1162472	1					
ANR	1162626	ExpressionStatement	prev = p	485:6:10254:10262	1162472	2	True				
ANR	1162627	AssignmentExpression	prev = p		1162472	0		=			
ANR	1162628	Identifier	prev		1162472	0					
ANR	1162629	Identifier	p		1162472	1					
ANR	1162630	ExpressionStatement	slen = 1	486:6:10270:10278	1162472	3	True				
ANR	1162631	AssignmentExpression	slen = 1		1162472	0		=			
ANR	1162632	Identifier	slen		1162472	0					
ANR	1162633	PrimaryExpression	1		1162472	1					
ANR	1162634	ExpressionStatement	prev_len = len	487:6:10286:10300	1162472	4	True				
ANR	1162635	AssignmentExpression	prev_len = len		1162472	0		=			
ANR	1162636	Identifier	prev_len		1162472	0					
ANR	1162637	Identifier	len		1162472	1					
ANR	1162638	ExpressionStatement	p += len	489:4:10312:10320	1162472	2	True				
ANR	1162639	AssignmentExpression	p += len		1162472	0		+=			
ANR	1162640	Identifier	p		1162472	0					
ANR	1162641	Identifier	len		1162472	1					
ANR	1162642	ExpressionStatement	"r = add_compile_string_length ( prev , prev_len , slen , reg , ambig )"	491:2:10328:10391	1162472	13	True				
ANR	1162643	AssignmentExpression	"r = add_compile_string_length ( prev , prev_len , slen , reg , ambig )"		1162472	0		=			
ANR	1162644	Identifier	r		1162472	0					
ANR	1162645	CallExpression	"add_compile_string_length ( prev , prev_len , slen , reg , ambig )"		1162472	1					
ANR	1162646	Callee	add_compile_string_length		1162472	0					
ANR	1162647	Identifier	add_compile_string_length		1162472	0					
ANR	1162648	ArgumentList	prev		1162472	1					
ANR	1162649	Argument	prev		1162472	0					
ANR	1162650	Identifier	prev		1162472	0					
ANR	1162651	Argument	prev_len		1162472	1					
ANR	1162652	Identifier	prev_len		1162472	0					
ANR	1162653	Argument	slen		1162472	2					
ANR	1162654	Identifier	slen		1162472	0					
ANR	1162655	Argument	reg		1162472	3					
ANR	1162656	Identifier	reg		1162472	0					
ANR	1162657	Argument	ambig		1162472	4					
ANR	1162658	Identifier	ambig		1162472	0					
ANR	1162659	ExpressionStatement	rlen += r	492:2:10395:10404	1162472	14	True				
ANR	1162660	AssignmentExpression	rlen += r		1162472	0		+=			
ANR	1162661	Identifier	rlen		1162472	0					
ANR	1162662	Identifier	r		1162472	1					
ANR	1162663	ReturnStatement	return rlen ;	493:2:10408:10419	1162472	15	True				
ANR	1162664	Identifier	rlen		1162472	0					
ANR	1162665	ReturnType	static int		1162472	1					
ANR	1162666	Identifier	compile_length_string_node		1162472	2					
ANR	1162667	ParameterList	"Node * node , regex_t * reg"		1162472	3					
ANR	1162668	Parameter	Node * node	458:27:9729:9738	1162472	0	True				
ANR	1162669	ParameterType	Node *		1162472	0					
ANR	1162670	Identifier	node		1162472	1					
ANR	1162671	Parameter	regex_t * reg	458:39:9741:9752	1162472	1	True				
ANR	1162672	ParameterType	regex_t *		1162472	0					
ANR	1162673	Identifier	reg		1162472	1					
ANR	1162674	CFGEntryNode	ENTRY		1162472		True				
ANR	1162675	CFGExitNode	EXIT		1162472		True				
ANR	1162676	Symbol	* sn		1162472						
ANR	1162677	Symbol	NSTRING_IS_AMBIG		1162472						
ANR	1162678	Symbol	prev_len		1162472						
ANR	1162679	Symbol	prev		1162472						
ANR	1162680	Symbol	NSTR		1162472						
ANR	1162681	Symbol	enclen		1162472						
ANR	1162682	Symbol	reg -> enc		1162472						
ANR	1162683	Symbol	p		1162472						
ANR	1162684	Symbol	node		1162472						
ANR	1162685	Symbol	r		1162472						
ANR	1162686	Symbol	sn -> s		1162472						
ANR	1162687	Symbol	len		1162472						
ANR	1162688	Symbol	reg		1162472						
ANR	1162689	Symbol	add_compile_string_length		1162472						
ANR	1162690	Symbol	rlen		1162472						
ANR	1162691	Symbol	slen		1162472						
ANR	1162692	Symbol	enc		1162472						
ANR	1162693	Symbol	sn		1162472						
ANR	1162694	Symbol	sn -> end		1162472						
ANR	1162695	Symbol	ambig		1162472						
ANR	1162696	Symbol	* reg		1162472						
ANR	1162697	Function	compile_length_string_raw_node	496:0:10424:10614							
ANR	1162698	FunctionDef	"compile_length_string_raw_node (StrNode * sn , regex_t * reg)"		1162697	0					
ANR	1162699	CompoundStatement		498:0:10493:10614	1162697	0					
ANR	1162700	IfStatement	if ( sn -> end <= sn -> s )		1162697	0					
ANR	1162701	Condition	sn -> end <= sn -> s	499:6:10501:10516	1162697	0	True				
ANR	1162702	RelationalExpression	sn -> end <= sn -> s		1162697	0		<=			
ANR	1162703	PtrMemberAccess	sn -> end		1162697	0					
ANR	1162704	Identifier	sn		1162697	0					
ANR	1162705	Identifier	end		1162697	1					
ANR	1162706	PtrMemberAccess	sn -> s		1162697	1					
ANR	1162707	Identifier	sn		1162697	0					
ANR	1162708	Identifier	s		1162697	1					
ANR	1162709	ReturnStatement	return 0 ;	500:4:10523:10531	1162697	1	True				
ANR	1162710	PrimaryExpression	0		1162697	0					
ANR	1162711	ReturnStatement	"return add_compile_string_length ( sn -> s , 1 , sn -> end - sn -> s , reg , 0 ) ;"	502:2:10536:10612	1162697	1	True				
ANR	1162712	CallExpression	"add_compile_string_length ( sn -> s , 1 , sn -> end - sn -> s , reg , 0 )"		1162697	0					
ANR	1162713	Callee	add_compile_string_length		1162697	0					
ANR	1162714	Identifier	add_compile_string_length		1162697	0					
ANR	1162715	ArgumentList	sn -> s		1162697	1					
ANR	1162716	Argument	sn -> s		1162697	0					
ANR	1162717	PtrMemberAccess	sn -> s		1162697	0					
ANR	1162718	Identifier	sn		1162697	0					
ANR	1162719	Identifier	s		1162697	1					
ANR	1162720	Argument	1		1162697	1					
ANR	1162721	PrimaryExpression	1		1162697	0					
ANR	1162722	Argument	sn -> end - sn -> s		1162697	2					
ANR	1162723	AdditiveExpression	sn -> end - sn -> s		1162697	0		-			
ANR	1162724	PtrMemberAccess	sn -> end		1162697	0					
ANR	1162725	Identifier	sn		1162697	0					
ANR	1162726	Identifier	end		1162697	1					
ANR	1162727	PtrMemberAccess	sn -> s		1162697	1					
ANR	1162728	Identifier	sn		1162697	0					
ANR	1162729	Identifier	s		1162697	1					
ANR	1162730	Argument	reg		1162697	3					
ANR	1162731	Identifier	reg		1162697	0					
ANR	1162732	Argument	0		1162697	4					
ANR	1162733	PrimaryExpression	0		1162697	0					
ANR	1162734	ReturnType	static int		1162697	1					
ANR	1162735	Identifier	compile_length_string_raw_node		1162697	2					
ANR	1162736	ParameterList	"StrNode * sn , regex_t * reg"		1162697	3					
ANR	1162737	Parameter	StrNode * sn	497:31:10466:10476	1162697	0	True				
ANR	1162738	ParameterType	StrNode *		1162697	0					
ANR	1162739	Identifier	sn		1162697	1					
ANR	1162740	Parameter	regex_t * reg	497:44:10479:10490	1162697	1	True				
ANR	1162741	ParameterType	regex_t *		1162697	0					
ANR	1162742	Identifier	reg		1162697	1					
ANR	1162743	CFGEntryNode	ENTRY		1162697		True				
ANR	1162744	CFGExitNode	EXIT		1162697		True				
ANR	1162745	Symbol	* sn		1162697						
ANR	1162746	Symbol	sn -> s		1162697						
ANR	1162747	Symbol	reg		1162697						
ANR	1162748	Symbol	add_compile_string_length		1162697						
ANR	1162749	Symbol	sn		1162697						
ANR	1162750	Symbol	sn -> end		1162697						
ANR	1162751	Function	compile_string_node	505:0:10617:11312							
ANR	1162752	FunctionDef	"compile_string_node (Node * node , regex_t * reg)"		1162751	0					
ANR	1162753	CompoundStatement		507:0:10674:11312	1162751	0					
ANR	1162754	IdentifierDeclStatement	"int r , len , prev_len , slen , ambig ;"	508:2:10678:10711	1162751	0	True				
ANR	1162755	IdentifierDecl	r		1162751	0					
ANR	1162756	IdentifierDeclType	int		1162751	0					
ANR	1162757	Identifier	r		1162751	1					
ANR	1162758	IdentifierDecl	len		1162751	1					
ANR	1162759	IdentifierDeclType	int		1162751	0					
ANR	1162760	Identifier	len		1162751	1					
ANR	1162761	IdentifierDecl	prev_len		1162751	2					
ANR	1162762	IdentifierDeclType	int		1162751	0					
ANR	1162763	Identifier	prev_len		1162751	1					
ANR	1162764	IdentifierDecl	slen		1162751	3					
ANR	1162765	IdentifierDeclType	int		1162751	0					
ANR	1162766	Identifier	slen		1162751	1					
ANR	1162767	IdentifierDecl	ambig		1162751	4					
ANR	1162768	IdentifierDeclType	int		1162751	0					
ANR	1162769	Identifier	ambig		1162751	1					
ANR	1162770	IdentifierDeclStatement	OnigEncoding enc = reg -> enc ;	509:2:10715:10742	1162751	1	True				
ANR	1162771	IdentifierDecl	enc = reg -> enc		1162751	0					
ANR	1162772	IdentifierDeclType	OnigEncoding		1162751	0					
ANR	1162773	Identifier	enc		1162751	1					
ANR	1162774	AssignmentExpression	enc = reg -> enc		1162751	2		=			
ANR	1162775	Identifier	enc		1162751	0					
ANR	1162776	PtrMemberAccess	reg -> enc		1162751	1					
ANR	1162777	Identifier	reg		1162751	0					
ANR	1162778	Identifier	enc		1162751	1					
ANR	1162779	IdentifierDeclStatement	"UChar * p , * prev , * end ;"	510:2:10746:10767	1162751	2	True				
ANR	1162780	IdentifierDecl	* p		1162751	0					
ANR	1162781	IdentifierDeclType	UChar *		1162751	0					
ANR	1162782	Identifier	p		1162751	1					
ANR	1162783	IdentifierDecl	* prev		1162751	1					
ANR	1162784	IdentifierDeclType	UChar *		1162751	0					
ANR	1162785	Identifier	prev		1162751	1					
ANR	1162786	IdentifierDecl	* end		1162751	2					
ANR	1162787	IdentifierDeclType	UChar *		1162751	0					
ANR	1162788	Identifier	end		1162751	1					
ANR	1162789	IdentifierDeclStatement	StrNode * sn ;	511:2:10771:10782	1162751	3	True				
ANR	1162790	IdentifierDecl	* sn		1162751	0					
ANR	1162791	IdentifierDeclType	StrNode *		1162751	0					
ANR	1162792	Identifier	sn		1162751	1					
ANR	1162793	ExpressionStatement	sn = NSTR ( node )	513:2:10787:10802	1162751	4	True				
ANR	1162794	AssignmentExpression	sn = NSTR ( node )		1162751	0		=			
ANR	1162795	Identifier	sn		1162751	0					
ANR	1162796	CallExpression	NSTR ( node )		1162751	1					
ANR	1162797	Callee	NSTR		1162751	0					
ANR	1162798	Identifier	NSTR		1162751	0					
ANR	1162799	ArgumentList	node		1162751	1					
ANR	1162800	Argument	node		1162751	0					
ANR	1162801	Identifier	node		1162751	0					
ANR	1162802	IfStatement	if ( sn -> end <= sn -> s )		1162751	5					
ANR	1162803	Condition	sn -> end <= sn -> s	514:6:10810:10825	1162751	0	True				
ANR	1162804	RelationalExpression	sn -> end <= sn -> s		1162751	0		<=			
ANR	1162805	PtrMemberAccess	sn -> end		1162751	0					
ANR	1162806	Identifier	sn		1162751	0					
ANR	1162807	Identifier	end		1162751	1					
ANR	1162808	PtrMemberAccess	sn -> s		1162751	1					
ANR	1162809	Identifier	sn		1162751	0					
ANR	1162810	Identifier	s		1162751	1					
ANR	1162811	ReturnStatement	return 0 ;	515:4:10832:10840	1162751	1	True				
ANR	1162812	PrimaryExpression	0		1162751	0					
ANR	1162813	ExpressionStatement	end = sn -> end	517:2:10845:10858	1162751	6	True				
ANR	1162814	AssignmentExpression	end = sn -> end		1162751	0		=			
ANR	1162815	Identifier	end		1162751	0					
ANR	1162816	PtrMemberAccess	sn -> end		1162751	1					
ANR	1162817	Identifier	sn		1162751	0					
ANR	1162818	Identifier	end		1162751	1					
ANR	1162819	ExpressionStatement	ambig = NSTRING_IS_AMBIG ( node )	518:2:10862:10892	1162751	7	True				
ANR	1162820	AssignmentExpression	ambig = NSTRING_IS_AMBIG ( node )		1162751	0		=			
ANR	1162821	Identifier	ambig		1162751	0					
ANR	1162822	CallExpression	NSTRING_IS_AMBIG ( node )		1162751	1					
ANR	1162823	Callee	NSTRING_IS_AMBIG		1162751	0					
ANR	1162824	Identifier	NSTRING_IS_AMBIG		1162751	0					
ANR	1162825	ArgumentList	node		1162751	1					
ANR	1162826	Argument	node		1162751	0					
ANR	1162827	Identifier	node		1162751	0					
ANR	1162828	ExpressionStatement	p = prev = sn -> s	520:2:10897:10913	1162751	8	True				
ANR	1162829	AssignmentExpression	p = prev = sn -> s		1162751	0		=			
ANR	1162830	Identifier	p		1162751	0					
ANR	1162831	AssignmentExpression	prev = sn -> s		1162751	1		=			
ANR	1162832	Identifier	prev		1162751	0					
ANR	1162833	PtrMemberAccess	sn -> s		1162751	1					
ANR	1162834	Identifier	sn		1162751	0					
ANR	1162835	Identifier	s		1162751	1					
ANR	1162836	ExpressionStatement	"prev_len = enclen ( enc , p )"	521:2:10917:10942	1162751	9	True				
ANR	1162837	AssignmentExpression	"prev_len = enclen ( enc , p )"		1162751	0		=			
ANR	1162838	Identifier	prev_len		1162751	0					
ANR	1162839	CallExpression	"enclen ( enc , p )"		1162751	1					
ANR	1162840	Callee	enclen		1162751	0					
ANR	1162841	Identifier	enclen		1162751	0					
ANR	1162842	ArgumentList	enc		1162751	1					
ANR	1162843	Argument	enc		1162751	0					
ANR	1162844	Identifier	enc		1162751	0					
ANR	1162845	Argument	p		1162751	1					
ANR	1162846	Identifier	p		1162751	0					
ANR	1162847	ExpressionStatement	p += prev_len	522:2:10946:10959	1162751	10	True				
ANR	1162848	AssignmentExpression	p += prev_len		1162751	0		+=			
ANR	1162849	Identifier	p		1162751	0					
ANR	1162850	Identifier	prev_len		1162751	1					
ANR	1162851	ExpressionStatement	slen = 1	523:2:10963:10971	1162751	11	True				
ANR	1162852	AssignmentExpression	slen = 1		1162751	0		=			
ANR	1162853	Identifier	slen		1162751	0					
ANR	1162854	PrimaryExpression	1		1162751	1					
ANR	1162855	ForStatement	for ( ; p < end ; )		1162751	12					
ANR	1162856	Condition	p < end	525:9:10983:10989	1162751	0	True				
ANR	1162857	RelationalExpression	p < end		1162751	0		<			
ANR	1162858	Identifier	p		1162751	0					
ANR	1162859	Identifier	end		1162751	1					
ANR	1162860	CompoundStatement		19:20:319:319	1162751	1					
ANR	1162861	ExpressionStatement	"len = enclen ( enc , p )"	526:4:11000:11020	1162751	0	True				
ANR	1162862	AssignmentExpression	"len = enclen ( enc , p )"		1162751	0		=			
ANR	1162863	Identifier	len		1162751	0					
ANR	1162864	CallExpression	"enclen ( enc , p )"		1162751	1					
ANR	1162865	Callee	enclen		1162751	0					
ANR	1162866	Identifier	enclen		1162751	0					
ANR	1162867	ArgumentList	enc		1162751	1					
ANR	1162868	Argument	enc		1162751	0					
ANR	1162869	Identifier	enc		1162751	0					
ANR	1162870	Argument	p		1162751	1					
ANR	1162871	Identifier	p		1162751	0					
ANR	1162872	IfStatement	if ( len == prev_len )		1162751	1					
ANR	1162873	Condition	len == prev_len	527:8:11030:11044	1162751	0	True				
ANR	1162874	EqualityExpression	len == prev_len		1162751	0		==			
ANR	1162875	Identifier	len		1162751	0					
ANR	1162876	Identifier	prev_len		1162751	1					
ANR	1162877	CompoundStatement		21:25:372:372	1162751	1					
ANR	1162878	ExpressionStatement	slen ++	528:6:11055:11061	1162751	0	True				
ANR	1162879	PostIncDecOperationExpression	slen ++		1162751	0					
ANR	1162880	Identifier	slen		1162751	0					
ANR	1162881	IncDec	++		1162751	1					
ANR	1162882	ElseStatement	else		1162751	0					
ANR	1162883	CompoundStatement		24:9:403:403	1162751	0					
ANR	1162884	ExpressionStatement	"r = add_compile_string ( prev , prev_len , slen , reg , ambig )"	531:6:11086:11142	1162751	0	True				
ANR	1162885	AssignmentExpression	"r = add_compile_string ( prev , prev_len , slen , reg , ambig )"		1162751	0		=			
ANR	1162886	Identifier	r		1162751	0					
ANR	1162887	CallExpression	"add_compile_string ( prev , prev_len , slen , reg , ambig )"		1162751	1					
ANR	1162888	Callee	add_compile_string		1162751	0					
ANR	1162889	Identifier	add_compile_string		1162751	0					
ANR	1162890	ArgumentList	prev		1162751	1					
ANR	1162891	Argument	prev		1162751	0					
ANR	1162892	Identifier	prev		1162751	0					
ANR	1162893	Argument	prev_len		1162751	1					
ANR	1162894	Identifier	prev_len		1162751	0					
ANR	1162895	Argument	slen		1162751	2					
ANR	1162896	Identifier	slen		1162751	0					
ANR	1162897	Argument	reg		1162751	3					
ANR	1162898	Identifier	reg		1162751	0					
ANR	1162899	Argument	ambig		1162751	4					
ANR	1162900	Identifier	ambig		1162751	0					
ANR	1162901	IfStatement	if ( r )		1162751	1					
ANR	1162902	Condition	r	532:10:11154:11154	1162751	0	True				
ANR	1162903	Identifier	r		1162751	0					
ANR	1162904	ReturnStatement	return r ;	532:13:11157:11165	1162751	1	True				
ANR	1162905	Identifier	r		1162751	0					
ANR	1162906	ExpressionStatement	prev = p	534:6:11174:11183	1162751	2	True				
ANR	1162907	AssignmentExpression	prev = p		1162751	0		=			
ANR	1162908	Identifier	prev		1162751	0					
ANR	1162909	Identifier	p		1162751	1					
ANR	1162910	ExpressionStatement	slen = 1	535:6:11191:11200	1162751	3	True				
ANR	1162911	AssignmentExpression	slen = 1		1162751	0		=			
ANR	1162912	Identifier	slen		1162751	0					
ANR	1162913	PrimaryExpression	1		1162751	1					
ANR	1162914	ExpressionStatement	prev_len = len	536:6:11208:11222	1162751	4	True				
ANR	1162915	AssignmentExpression	prev_len = len		1162751	0		=			
ANR	1162916	Identifier	prev_len		1162751	0					
ANR	1162917	Identifier	len		1162751	1					
ANR	1162918	ExpressionStatement	p += len	539:4:11235:11243	1162751	2	True				
ANR	1162919	AssignmentExpression	p += len		1162751	0		+=			
ANR	1162920	Identifier	p		1162751	0					
ANR	1162921	Identifier	len		1162751	1					
ANR	1162922	ReturnStatement	"return add_compile_string ( prev , prev_len , slen , reg , ambig ) ;"	541:2:11251:11310	1162751	13	True				
ANR	1162923	CallExpression	"add_compile_string ( prev , prev_len , slen , reg , ambig )"		1162751	0					
ANR	1162924	Callee	add_compile_string		1162751	0					
ANR	1162925	Identifier	add_compile_string		1162751	0					
ANR	1162926	ArgumentList	prev		1162751	1					
ANR	1162927	Argument	prev		1162751	0					
ANR	1162928	Identifier	prev		1162751	0					
ANR	1162929	Argument	prev_len		1162751	1					
ANR	1162930	Identifier	prev_len		1162751	0					
ANR	1162931	Argument	slen		1162751	2					
ANR	1162932	Identifier	slen		1162751	0					
ANR	1162933	Argument	reg		1162751	3					
ANR	1162934	Identifier	reg		1162751	0					
ANR	1162935	Argument	ambig		1162751	4					
ANR	1162936	Identifier	ambig		1162751	0					
ANR	1162937	ReturnType	static int		1162751	1					
ANR	1162938	Identifier	compile_string_node		1162751	2					
ANR	1162939	ParameterList	"Node * node , regex_t * reg"		1162751	3					
ANR	1162940	Parameter	Node * node	506:20:10648:10657	1162751	0	True				
ANR	1162941	ParameterType	Node *		1162751	0					
ANR	1162942	Identifier	node		1162751	1					
ANR	1162943	Parameter	regex_t * reg	506:32:10660:10671	1162751	1	True				
ANR	1162944	ParameterType	regex_t *		1162751	0					
ANR	1162945	Identifier	reg		1162751	1					
ANR	1162946	CFGEntryNode	ENTRY		1162751		True				
ANR	1162947	CFGExitNode	EXIT		1162751		True				
ANR	1162948	Symbol	* sn		1162751						
ANR	1162949	Symbol	NSTRING_IS_AMBIG		1162751						
ANR	1162950	Symbol	prev_len		1162751						
ANR	1162951	Symbol	prev		1162751						
ANR	1162952	Symbol	NSTR		1162751						
ANR	1162953	Symbol	enclen		1162751						
ANR	1162954	Symbol	reg -> enc		1162751						
ANR	1162955	Symbol	p		1162751						
ANR	1162956	Symbol	node		1162751						
ANR	1162957	Symbol	r		1162751						
ANR	1162958	Symbol	add_compile_string		1162751						
ANR	1162959	Symbol	sn -> s		1162751						
ANR	1162960	Symbol	len		1162751						
ANR	1162961	Symbol	reg		1162751						
ANR	1162962	Symbol	slen		1162751						
ANR	1162963	Symbol	end		1162751						
ANR	1162964	Symbol	enc		1162751						
ANR	1162965	Symbol	sn		1162751						
ANR	1162966	Symbol	sn -> end		1162751						
ANR	1162967	Symbol	ambig		1162751						
ANR	1162968	Symbol	* reg		1162751						
ANR	1162969	Function	compile_string_raw_node	544:0:11315:11491							
ANR	1162970	FunctionDef	"compile_string_raw_node (StrNode * sn , regex_t * reg)"		1162969	0					
ANR	1162971	CompoundStatement		546:0:11377:11491	1162969	0					
ANR	1162972	IfStatement	if ( sn -> end <= sn -> s )		1162969	0					
ANR	1162973	Condition	sn -> end <= sn -> s	547:6:11385:11400	1162969	0	True				
ANR	1162974	RelationalExpression	sn -> end <= sn -> s		1162969	0		<=			
ANR	1162975	PtrMemberAccess	sn -> end		1162969	0					
ANR	1162976	Identifier	sn		1162969	0					
ANR	1162977	Identifier	end		1162969	1					
ANR	1162978	PtrMemberAccess	sn -> s		1162969	1					
ANR	1162979	Identifier	sn		1162969	0					
ANR	1162980	Identifier	s		1162969	1					
ANR	1162981	ReturnStatement	return 0 ;	548:4:11407:11415	1162969	1	True				
ANR	1162982	PrimaryExpression	0		1162969	0					
ANR	1162983	ReturnStatement	"return add_compile_string ( sn -> s , 1 , sn -> end - sn -> s , reg , 0 ) ;"	550:2:11420:11489	1162969	1	True				
ANR	1162984	CallExpression	"add_compile_string ( sn -> s , 1 , sn -> end - sn -> s , reg , 0 )"		1162969	0					
ANR	1162985	Callee	add_compile_string		1162969	0					
ANR	1162986	Identifier	add_compile_string		1162969	0					
ANR	1162987	ArgumentList	sn -> s		1162969	1					
ANR	1162988	Argument	sn -> s		1162969	0					
ANR	1162989	PtrMemberAccess	sn -> s		1162969	0					
ANR	1162990	Identifier	sn		1162969	0					
ANR	1162991	Identifier	s		1162969	1					
ANR	1162992	Argument	1		1162969	1					
ANR	1162993	PrimaryExpression	1		1162969	0					
ANR	1162994	Argument	sn -> end - sn -> s		1162969	2					
ANR	1162995	AdditiveExpression	sn -> end - sn -> s		1162969	0		-			
ANR	1162996	PtrMemberAccess	sn -> end		1162969	0					
ANR	1162997	Identifier	sn		1162969	0					
ANR	1162998	Identifier	end		1162969	1					
ANR	1162999	PtrMemberAccess	sn -> s		1162969	1					
ANR	1163000	Identifier	sn		1162969	0					
ANR	1163001	Identifier	s		1162969	1					
ANR	1163002	Argument	reg		1162969	3					
ANR	1163003	Identifier	reg		1162969	0					
ANR	1163004	Argument	0		1162969	4					
ANR	1163005	PrimaryExpression	0		1162969	0					
ANR	1163006	ReturnType	static int		1162969	1					
ANR	1163007	Identifier	compile_string_raw_node		1162969	2					
ANR	1163008	ParameterList	"StrNode * sn , regex_t * reg"		1162969	3					
ANR	1163009	Parameter	StrNode * sn	545:24:11350:11360	1162969	0	True				
ANR	1163010	ParameterType	StrNode *		1162969	0					
ANR	1163011	Identifier	sn		1162969	1					
ANR	1163012	Parameter	regex_t * reg	545:37:11363:11374	1162969	1	True				
ANR	1163013	ParameterType	regex_t *		1162969	0					
ANR	1163014	Identifier	reg		1162969	1					
ANR	1163015	CFGEntryNode	ENTRY		1162969		True				
ANR	1163016	CFGExitNode	EXIT		1162969		True				
ANR	1163017	Symbol	* sn		1162969						
ANR	1163018	Symbol	add_compile_string		1162969						
ANR	1163019	Symbol	sn -> s		1162969						
ANR	1163020	Symbol	reg		1162969						
ANR	1163021	Symbol	sn		1162969						
ANR	1163022	Symbol	sn -> end		1162969						
ANR	1163023	Function	add_multi_byte_cclass	553:0:11494:12151							
ANR	1163024	FunctionDef	"add_multi_byte_cclass (BBuf * mbuf , regex_t * reg)"		1163023	0					
ANR	1163025	CompoundStatement		555:0:11553:12151	1163023	0					
ANR	1163026	ExpressionStatement	"add_length ( reg , mbuf -> used )"	557:2:11595:11622	1163023	0	True				
ANR	1163027	CallExpression	"add_length ( reg , mbuf -> used )"		1163023	0					
ANR	1163028	Callee	add_length		1163023	0					
ANR	1163029	Identifier	add_length		1163023	0					
ANR	1163030	ArgumentList	reg		1163023	1					
ANR	1163031	Argument	reg		1163023	0					
ANR	1163032	Identifier	reg		1163023	0					
ANR	1163033	Argument	mbuf -> used		1163023	1					
ANR	1163034	PtrMemberAccess	mbuf -> used		1163023	0					
ANR	1163035	Identifier	mbuf		1163023	0					
ANR	1163036	Identifier	used		1163023	1					
ANR	1163037	ReturnStatement	"return add_bytes ( reg , mbuf -> p , mbuf -> used ) ;"	558:2:11626:11668	1163023	1	True				
ANR	1163038	CallExpression	"add_bytes ( reg , mbuf -> p , mbuf -> used )"		1163023	0					
ANR	1163039	Callee	add_bytes		1163023	0					
ANR	1163040	Identifier	add_bytes		1163023	0					
ANR	1163041	ArgumentList	reg		1163023	1					
ANR	1163042	Argument	reg		1163023	0					
ANR	1163043	Identifier	reg		1163023	0					
ANR	1163044	Argument	mbuf -> p		1163023	1					
ANR	1163045	PtrMemberAccess	mbuf -> p		1163023	0					
ANR	1163046	Identifier	mbuf		1163023	0					
ANR	1163047	Identifier	p		1163023	1					
ANR	1163048	Argument	mbuf -> used		1163023	2					
ANR	1163049	PtrMemberAccess	mbuf -> used		1163023	0					
ANR	1163050	Identifier	mbuf		1163023	0					
ANR	1163051	Identifier	used		1163023	1					
ANR	1163052	ReturnType	static int		1163023	1					
ANR	1163053	Identifier	add_multi_byte_cclass		1163023	2					
ANR	1163054	ParameterList	"BBuf * mbuf , regex_t * reg"		1163023	3					
ANR	1163055	Parameter	BBuf * mbuf	554:22:11527:11536	1163023	0	True				
ANR	1163056	ParameterType	BBuf *		1163023	0					
ANR	1163057	Identifier	mbuf		1163023	1					
ANR	1163058	Parameter	regex_t * reg	554:34:11539:11550	1163023	1	True				
ANR	1163059	ParameterType	regex_t *		1163023	0					
ANR	1163060	Identifier	reg		1163023	1					
ANR	1163061	CFGEntryNode	ENTRY		1163023		True				
ANR	1163062	CFGExitNode	EXIT		1163023		True				
ANR	1163063	Symbol	add_bytes		1163023						
ANR	1163064	Symbol	mbuf		1163023						
ANR	1163065	Symbol	reg		1163023						
ANR	1163066	Symbol	mbuf -> used		1163023						
ANR	1163067	Symbol	* mbuf		1163023						
ANR	1163068	Symbol	mbuf -> p		1163023						
ANR	1163069	Function	compile_length_cclass_node	576:0:12154:12740							
ANR	1163070	FunctionDef	"compile_length_cclass_node (CClassNode * cc , regex_t * reg)"		1163069	0					
ANR	1163071	CompoundStatement		578:0:12222:12740	1163069	0					
ANR	1163072	IdentifierDeclStatement	int len ;	579:2:12226:12233	1163069	0	True				
ANR	1163073	IdentifierDecl	len		1163069	0					
ANR	1163074	IdentifierDeclType	int		1163069	0					
ANR	1163075	Identifier	len		1163069	1					
ANR	1163076	IfStatement	if ( IS_NCCLASS_SHARE ( cc ) )		1163069	1					
ANR	1163077	Condition	IS_NCCLASS_SHARE ( cc )	581:6:12242:12261	1163069	0	True				
ANR	1163078	CallExpression	IS_NCCLASS_SHARE ( cc )		1163069	0					
ANR	1163079	Callee	IS_NCCLASS_SHARE		1163069	0					
ANR	1163080	Identifier	IS_NCCLASS_SHARE		1163069	0					
ANR	1163081	ArgumentList	cc		1163069	1					
ANR	1163082	Argument	cc		1163069	0					
ANR	1163083	Identifier	cc		1163069	0					
ANR	1163084	CompoundStatement		4:28:41:41	1163069	1					
ANR	1163085	ExpressionStatement	len = SIZE_OPCODE + SIZE_POINTER	582:4:12270:12302	1163069	0	True				
ANR	1163086	AssignmentExpression	len = SIZE_OPCODE + SIZE_POINTER		1163069	0		=			
ANR	1163087	Identifier	len		1163069	0					
ANR	1163088	AdditiveExpression	SIZE_OPCODE + SIZE_POINTER		1163069	1		+			
ANR	1163089	Identifier	SIZE_OPCODE		1163069	0					
ANR	1163090	Identifier	SIZE_POINTER		1163069	1					
ANR	1163091	ReturnStatement	return len ;	583:4:12308:12318	1163069	1	True				
ANR	1163092	Identifier	len		1163069	0					
ANR	1163093	IfStatement	if ( IS_NULL ( cc -> mbuf ) )		1163069	2					
ANR	1163094	Condition	IS_NULL ( cc -> mbuf )	586:6:12331:12347	1163069	0	True				
ANR	1163095	CallExpression	IS_NULL ( cc -> mbuf )		1163069	0					
ANR	1163096	Callee	IS_NULL		1163069	0					
ANR	1163097	Identifier	IS_NULL		1163069	0					
ANR	1163098	ArgumentList	cc -> mbuf		1163069	1					
ANR	1163099	Argument	cc -> mbuf		1163069	0					
ANR	1163100	PtrMemberAccess	cc -> mbuf		1163069	0					
ANR	1163101	Identifier	cc		1163069	0					
ANR	1163102	Identifier	mbuf		1163069	1					
ANR	1163103	CompoundStatement		9:25:127:127	1163069	1					
ANR	1163104	ExpressionStatement	len = SIZE_OPCODE + SIZE_BITSET	587:4:12356:12387	1163069	0	True				
ANR	1163105	AssignmentExpression	len = SIZE_OPCODE + SIZE_BITSET		1163069	0		=			
ANR	1163106	Identifier	len		1163069	0					
ANR	1163107	AdditiveExpression	SIZE_OPCODE + SIZE_BITSET		1163069	1		+			
ANR	1163108	Identifier	SIZE_OPCODE		1163069	0					
ANR	1163109	Identifier	SIZE_BITSET		1163069	1					
ANR	1163110	ElseStatement	else		1163069	0					
ANR	1163111	CompoundStatement		12:7:177:177	1163069	0					
ANR	1163112	IfStatement	if ( ONIGENC_MBC_MINLEN ( reg -> enc ) > 1 || bitset_is_empty ( cc -> bs ) )		1163069	0					
ANR	1163113	Condition	ONIGENC_MBC_MINLEN ( reg -> enc ) > 1 || bitset_is_empty ( cc -> bs )	590:8:12410:12468	1163069	0	True				
ANR	1163114	OrExpression	ONIGENC_MBC_MINLEN ( reg -> enc ) > 1 || bitset_is_empty ( cc -> bs )		1163069	0		||			
ANR	1163115	RelationalExpression	ONIGENC_MBC_MINLEN ( reg -> enc ) > 1		1163069	0		>			
ANR	1163116	CallExpression	ONIGENC_MBC_MINLEN ( reg -> enc )		1163069	0					
ANR	1163117	Callee	ONIGENC_MBC_MINLEN		1163069	0					
ANR	1163118	Identifier	ONIGENC_MBC_MINLEN		1163069	0					
ANR	1163119	ArgumentList	reg -> enc		1163069	1					
ANR	1163120	Argument	reg -> enc		1163069	0					
ANR	1163121	PtrMemberAccess	reg -> enc		1163069	0					
ANR	1163122	Identifier	reg		1163069	0					
ANR	1163123	Identifier	enc		1163069	1					
ANR	1163124	PrimaryExpression	1		1163069	1					
ANR	1163125	CallExpression	bitset_is_empty ( cc -> bs )		1163069	1					
ANR	1163126	Callee	bitset_is_empty		1163069	0					
ANR	1163127	Identifier	bitset_is_empty		1163069	0					
ANR	1163128	ArgumentList	cc -> bs		1163069	1					
ANR	1163129	Argument	cc -> bs		1163069	0					
ANR	1163130	PtrMemberAccess	cc -> bs		1163069	0					
ANR	1163131	Identifier	cc		1163069	0					
ANR	1163132	Identifier	bs		1163069	1					
ANR	1163133	CompoundStatement		13:69:248:248	1163069	1					
ANR	1163134	ExpressionStatement	len = SIZE_OPCODE	591:6:12479:12496	1163069	0	True				
ANR	1163135	AssignmentExpression	len = SIZE_OPCODE		1163069	0		=			
ANR	1163136	Identifier	len		1163069	0					
ANR	1163137	Identifier	SIZE_OPCODE		1163069	1					
ANR	1163138	ElseStatement	else		1163069	0					
ANR	1163139	CompoundStatement		16:9:290:290	1163069	0					
ANR	1163140	ExpressionStatement	len = SIZE_OPCODE + SIZE_BITSET	594:6:12521:12552	1163069	0	True				
ANR	1163141	AssignmentExpression	len = SIZE_OPCODE + SIZE_BITSET		1163069	0		=			
ANR	1163142	Identifier	len		1163069	0					
ANR	1163143	AdditiveExpression	SIZE_OPCODE + SIZE_BITSET		1163069	1		+			
ANR	1163144	Identifier	SIZE_OPCODE		1163069	0					
ANR	1163145	Identifier	SIZE_BITSET		1163069	1					
ANR	1163146	ExpressionStatement	len += SIZE_LENGTH + cc -> mbuf -> used	597:4:12602:12637	1163069	1	True				
ANR	1163147	AssignmentExpression	len += SIZE_LENGTH + cc -> mbuf -> used		1163069	0		+=			
ANR	1163148	Identifier	len		1163069	0					
ANR	1163149	AdditiveExpression	SIZE_LENGTH + cc -> mbuf -> used		1163069	1		+			
ANR	1163150	Identifier	SIZE_LENGTH		1163069	0					
ANR	1163151	PtrMemberAccess	cc -> mbuf -> used		1163069	1					
ANR	1163152	PtrMemberAccess	cc -> mbuf		1163069	0					
ANR	1163153	Identifier	cc		1163069	0					
ANR	1163154	Identifier	mbuf		1163069	1					
ANR	1163155	Identifier	used		1163069	1					
ANR	1163156	ReturnStatement	return len ;	603:2:12728:12738	1163069	3	True				
ANR	1163157	Identifier	len		1163069	0					
ANR	1163158	ReturnType	static int		1163069	1					
ANR	1163159	Identifier	compile_length_cclass_node		1163069	2					
ANR	1163160	ParameterList	"CClassNode * cc , regex_t * reg"		1163069	3					
ANR	1163161	Parameter	CClassNode * cc	577:27:12192:12205	1163069	0	True				
ANR	1163162	ParameterType	CClassNode *		1163069	0					
ANR	1163163	Identifier	cc		1163069	1					
ANR	1163164	Parameter	regex_t * reg	577:43:12208:12219	1163069	1	True				
ANR	1163165	ParameterType	regex_t *		1163069	0					
ANR	1163166	Identifier	reg		1163069	1					
ANR	1163167	CFGEntryNode	ENTRY		1163069		True				
ANR	1163168	CFGExitNode	EXIT		1163069		True				
ANR	1163169	Symbol	cc		1163069						
ANR	1163170	Symbol	SIZE_BITSET		1163069						
ANR	1163171	Symbol	* cc		1163069						
ANR	1163172	Symbol	ONIGENC_MBC_MINLEN		1163069						
ANR	1163173	Symbol	cc -> mbuf -> used		1163069						
ANR	1163174	Symbol	cc -> mbuf		1163069						
ANR	1163175	Symbol	SIZE_LENGTH		1163069						
ANR	1163176	Symbol	* * cc		1163069						
ANR	1163177	Symbol	cc -> bs		1163069						
ANR	1163178	Symbol	reg -> enc		1163069						
ANR	1163179	Symbol	SIZE_OPCODE		1163069						
ANR	1163180	Symbol	SIZE_POINTER		1163069						
ANR	1163181	Symbol	bitset_is_empty		1163069						
ANR	1163182	Symbol	* cc -> mbuf		1163069						
ANR	1163183	Symbol	len		1163069						
ANR	1163184	Symbol	IS_NULL		1163069						
ANR	1163185	Symbol	reg		1163069						
ANR	1163186	Symbol	IS_NCCLASS_SHARE		1163069						
ANR	1163187	Symbol	* reg		1163069						
ANR	1163188	Function	compile_cclass_node	606:0:12743:13630							
ANR	1163189	FunctionDef	"compile_cclass_node (CClassNode * cc , regex_t * reg)"		1163188	0					
ANR	1163190	CompoundStatement		608:0:12804:13630	1163188	0					
ANR	1163191	IdentifierDeclStatement	int r ;	609:2:12808:12813	1163188	0	True				
ANR	1163192	IdentifierDecl	r		1163188	0					
ANR	1163193	IdentifierDeclType	int		1163188	0					
ANR	1163194	Identifier	r		1163188	1					
ANR	1163195	IfStatement	if ( IS_NCCLASS_SHARE ( cc ) )		1163188	1					
ANR	1163196	Condition	IS_NCCLASS_SHARE ( cc )	611:6:12822:12841	1163188	0	True				
ANR	1163197	CallExpression	IS_NCCLASS_SHARE ( cc )		1163188	0					
ANR	1163198	Callee	IS_NCCLASS_SHARE		1163188	0					
ANR	1163199	Identifier	IS_NCCLASS_SHARE		1163188	0					
ANR	1163200	ArgumentList	cc		1163188	1					
ANR	1163201	Argument	cc		1163188	0					
ANR	1163202	Identifier	cc		1163188	0					
ANR	1163203	CompoundStatement		4:28:39:39	1163188	1					
ANR	1163204	ExpressionStatement	"add_opcode ( reg , OP_CCLASS_NODE )"	612:4:12850:12881	1163188	0	True				
ANR	1163205	CallExpression	"add_opcode ( reg , OP_CCLASS_NODE )"		1163188	0					
ANR	1163206	Callee	add_opcode		1163188	0					
ANR	1163207	Identifier	add_opcode		1163188	0					
ANR	1163208	ArgumentList	reg		1163188	1					
ANR	1163209	Argument	reg		1163188	0					
ANR	1163210	Identifier	reg		1163188	0					
ANR	1163211	Argument	OP_CCLASS_NODE		1163188	1					
ANR	1163212	Identifier	OP_CCLASS_NODE		1163188	0					
ANR	1163213	ExpressionStatement	"r = add_pointer ( reg , cc )"	613:4:12887:12911	1163188	1	True				
ANR	1163214	AssignmentExpression	"r = add_pointer ( reg , cc )"		1163188	0		=			
ANR	1163215	Identifier	r		1163188	0					
ANR	1163216	CallExpression	"add_pointer ( reg , cc )"		1163188	1					
ANR	1163217	Callee	add_pointer		1163188	0					
ANR	1163218	Identifier	add_pointer		1163188	0					
ANR	1163219	ArgumentList	reg		1163188	1					
ANR	1163220	Argument	reg		1163188	0					
ANR	1163221	Identifier	reg		1163188	0					
ANR	1163222	Argument	cc		1163188	1					
ANR	1163223	Identifier	cc		1163188	0					
ANR	1163224	ReturnStatement	return r ;	614:4:12917:12925	1163188	2	True				
ANR	1163225	Identifier	r		1163188	0					
ANR	1163226	IfStatement	if ( IS_NULL ( cc -> mbuf ) )		1163188	2					
ANR	1163227	Condition	IS_NULL ( cc -> mbuf )	617:6:12938:12954	1163188	0	True				
ANR	1163228	CallExpression	IS_NULL ( cc -> mbuf )		1163188	0					
ANR	1163229	Callee	IS_NULL		1163188	0					
ANR	1163230	Identifier	IS_NULL		1163188	0					
ANR	1163231	ArgumentList	cc -> mbuf		1163188	1					
ANR	1163232	Argument	cc -> mbuf		1163188	0					
ANR	1163233	PtrMemberAccess	cc -> mbuf		1163188	0					
ANR	1163234	Identifier	cc		1163188	0					
ANR	1163235	Identifier	mbuf		1163188	1					
ANR	1163236	CompoundStatement		10:25:152:152	1163188	1					
ANR	1163237	IfStatement	if ( IS_NCCLASS_NOT ( cc ) )		1163188	0					
ANR	1163238	Condition	IS_NCCLASS_NOT ( cc )	618:8:12967:12984	1163188	0	True				
ANR	1163239	CallExpression	IS_NCCLASS_NOT ( cc )		1163188	0					
ANR	1163240	Callee	IS_NCCLASS_NOT		1163188	0					
ANR	1163241	Identifier	IS_NCCLASS_NOT		1163188	0					
ANR	1163242	ArgumentList	cc		1163188	1					
ANR	1163243	Argument	cc		1163188	0					
ANR	1163244	Identifier	cc		1163188	0					
ANR	1163245	ExpressionStatement	"add_opcode ( reg , OP_CCLASS_NOT )"	619:6:12993:13023	1163188	1	True				
ANR	1163246	CallExpression	"add_opcode ( reg , OP_CCLASS_NOT )"		1163188	0					
ANR	1163247	Callee	add_opcode		1163188	0					
ANR	1163248	Identifier	add_opcode		1163188	0					
ANR	1163249	ArgumentList	reg		1163188	1					
ANR	1163250	Argument	reg		1163188	0					
ANR	1163251	Identifier	reg		1163188	0					
ANR	1163252	Argument	OP_CCLASS_NOT		1163188	1					
ANR	1163253	Identifier	OP_CCLASS_NOT		1163188	0					
ANR	1163254	ElseStatement	else		1163188	0					
ANR	1163255	ExpressionStatement	"add_opcode ( reg , OP_CCLASS )"	621:6:13040:13066	1163188	0	True				
ANR	1163256	CallExpression	"add_opcode ( reg , OP_CCLASS )"		1163188	0					
ANR	1163257	Callee	add_opcode		1163188	0					
ANR	1163258	Identifier	add_opcode		1163188	0					
ANR	1163259	ArgumentList	reg		1163188	1					
ANR	1163260	Argument	reg		1163188	0					
ANR	1163261	Identifier	reg		1163188	0					
ANR	1163262	Argument	OP_CCLASS		1163188	1					
ANR	1163263	Identifier	OP_CCLASS		1163188	0					
ANR	1163264	ExpressionStatement	"r = add_bitset ( reg , cc -> bs )"	623:4:13073:13100	1163188	1	True				
ANR	1163265	AssignmentExpression	"r = add_bitset ( reg , cc -> bs )"		1163188	0		=			
ANR	1163266	Identifier	r		1163188	0					
ANR	1163267	CallExpression	"add_bitset ( reg , cc -> bs )"		1163188	1					
ANR	1163268	Callee	add_bitset		1163188	0					
ANR	1163269	Identifier	add_bitset		1163188	0					
ANR	1163270	ArgumentList	reg		1163188	1					
ANR	1163271	Argument	reg		1163188	0					
ANR	1163272	Identifier	reg		1163188	0					
ANR	1163273	Argument	cc -> bs		1163188	1					
ANR	1163274	PtrMemberAccess	cc -> bs		1163188	0					
ANR	1163275	Identifier	cc		1163188	0					
ANR	1163276	Identifier	bs		1163188	1					
ANR	1163277	ElseStatement	else		1163188	0					
ANR	1163278	CompoundStatement		18:7:308:308	1163188	0					
ANR	1163279	IfStatement	if ( ONIGENC_MBC_MINLEN ( reg -> enc ) > 1 || bitset_is_empty ( cc -> bs ) )		1163188	0					
ANR	1163280	Condition	ONIGENC_MBC_MINLEN ( reg -> enc ) > 1 || bitset_is_empty ( cc -> bs )	626:8:13123:13181	1163188	0	True				
ANR	1163281	OrExpression	ONIGENC_MBC_MINLEN ( reg -> enc ) > 1 || bitset_is_empty ( cc -> bs )		1163188	0		||			
ANR	1163282	RelationalExpression	ONIGENC_MBC_MINLEN ( reg -> enc ) > 1		1163188	0		>			
ANR	1163283	CallExpression	ONIGENC_MBC_MINLEN ( reg -> enc )		1163188	0					
ANR	1163284	Callee	ONIGENC_MBC_MINLEN		1163188	0					
ANR	1163285	Identifier	ONIGENC_MBC_MINLEN		1163188	0					
ANR	1163286	ArgumentList	reg -> enc		1163188	1					
ANR	1163287	Argument	reg -> enc		1163188	0					
ANR	1163288	PtrMemberAccess	reg -> enc		1163188	0					
ANR	1163289	Identifier	reg		1163188	0					
ANR	1163290	Identifier	enc		1163188	1					
ANR	1163291	PrimaryExpression	1		1163188	1					
ANR	1163292	CallExpression	bitset_is_empty ( cc -> bs )		1163188	1					
ANR	1163293	Callee	bitset_is_empty		1163188	0					
ANR	1163294	Identifier	bitset_is_empty		1163188	0					
ANR	1163295	ArgumentList	cc -> bs		1163188	1					
ANR	1163296	Argument	cc -> bs		1163188	0					
ANR	1163297	PtrMemberAccess	cc -> bs		1163188	0					
ANR	1163298	Identifier	cc		1163188	0					
ANR	1163299	Identifier	bs		1163188	1					
ANR	1163300	CompoundStatement		19:69:379:379	1163188	1					
ANR	1163301	IfStatement	if ( IS_NCCLASS_NOT ( cc ) )		1163188	0					
ANR	1163302	Condition	IS_NCCLASS_NOT ( cc )	627:10:13196:13213	1163188	0	True				
ANR	1163303	CallExpression	IS_NCCLASS_NOT ( cc )		1163188	0					
ANR	1163304	Callee	IS_NCCLASS_NOT		1163188	0					
ANR	1163305	Identifier	IS_NCCLASS_NOT		1163188	0					
ANR	1163306	ArgumentList	cc		1163188	1					
ANR	1163307	Argument	cc		1163188	0					
ANR	1163308	Identifier	cc		1163188	0					
ANR	1163309	ExpressionStatement	"add_opcode ( reg , OP_CCLASS_MB_NOT )"	628:8:13224:13257	1163188	1	True				
ANR	1163310	CallExpression	"add_opcode ( reg , OP_CCLASS_MB_NOT )"		1163188	0					
ANR	1163311	Callee	add_opcode		1163188	0					
ANR	1163312	Identifier	add_opcode		1163188	0					
ANR	1163313	ArgumentList	reg		1163188	1					
ANR	1163314	Argument	reg		1163188	0					
ANR	1163315	Identifier	reg		1163188	0					
ANR	1163316	Argument	OP_CCLASS_MB_NOT		1163188	1					
ANR	1163317	Identifier	OP_CCLASS_MB_NOT		1163188	0					
ANR	1163318	ElseStatement	else		1163188	0					
ANR	1163319	ExpressionStatement	"add_opcode ( reg , OP_CCLASS_MB )"	630:8:13278:13307	1163188	0	True				
ANR	1163320	CallExpression	"add_opcode ( reg , OP_CCLASS_MB )"		1163188	0					
ANR	1163321	Callee	add_opcode		1163188	0					
ANR	1163322	Identifier	add_opcode		1163188	0					
ANR	1163323	ArgumentList	reg		1163188	1					
ANR	1163324	Argument	reg		1163188	0					
ANR	1163325	Identifier	reg		1163188	0					
ANR	1163326	Argument	OP_CCLASS_MB		1163188	1					
ANR	1163327	Identifier	OP_CCLASS_MB		1163188	0					
ANR	1163328	ExpressionStatement	"r = add_multi_byte_cclass ( cc -> mbuf , reg )"	632:6:13316:13356	1163188	1	True				
ANR	1163329	AssignmentExpression	"r = add_multi_byte_cclass ( cc -> mbuf , reg )"		1163188	0		=			
ANR	1163330	Identifier	r		1163188	0					
ANR	1163331	CallExpression	"add_multi_byte_cclass ( cc -> mbuf , reg )"		1163188	1					
ANR	1163332	Callee	add_multi_byte_cclass		1163188	0					
ANR	1163333	Identifier	add_multi_byte_cclass		1163188	0					
ANR	1163334	ArgumentList	cc -> mbuf		1163188	1					
ANR	1163335	Argument	cc -> mbuf		1163188	0					
ANR	1163336	PtrMemberAccess	cc -> mbuf		1163188	0					
ANR	1163337	Identifier	cc		1163188	0					
ANR	1163338	Identifier	mbuf		1163188	1					
ANR	1163339	Argument	reg		1163188	1					
ANR	1163340	Identifier	reg		1163188	0					
ANR	1163341	ElseStatement	else		1163188	0					
ANR	1163342	CompoundStatement		27:9:568:568	1163188	0					
ANR	1163343	IfStatement	if ( IS_NCCLASS_NOT ( cc ) )		1163188	0					
ANR	1163344	Condition	IS_NCCLASS_NOT ( cc )	635:10:13385:13402	1163188	0	True				
ANR	1163345	CallExpression	IS_NCCLASS_NOT ( cc )		1163188	0					
ANR	1163346	Callee	IS_NCCLASS_NOT		1163188	0					
ANR	1163347	Identifier	IS_NCCLASS_NOT		1163188	0					
ANR	1163348	ArgumentList	cc		1163188	1					
ANR	1163349	Argument	cc		1163188	0					
ANR	1163350	Identifier	cc		1163188	0					
ANR	1163351	ExpressionStatement	"add_opcode ( reg , OP_CCLASS_MIX_NOT )"	636:8:13413:13447	1163188	1	True				
ANR	1163352	CallExpression	"add_opcode ( reg , OP_CCLASS_MIX_NOT )"		1163188	0					
ANR	1163353	Callee	add_opcode		1163188	0					
ANR	1163354	Identifier	add_opcode		1163188	0					
ANR	1163355	ArgumentList	reg		1163188	1					
ANR	1163356	Argument	reg		1163188	0					
ANR	1163357	Identifier	reg		1163188	0					
ANR	1163358	Argument	OP_CCLASS_MIX_NOT		1163188	1					
ANR	1163359	Identifier	OP_CCLASS_MIX_NOT		1163188	0					
ANR	1163360	ElseStatement	else		1163188	0					
ANR	1163361	ExpressionStatement	"add_opcode ( reg , OP_CCLASS_MIX )"	638:8:13468:13498	1163188	0	True				
ANR	1163362	CallExpression	"add_opcode ( reg , OP_CCLASS_MIX )"		1163188	0					
ANR	1163363	Callee	add_opcode		1163188	0					
ANR	1163364	Identifier	add_opcode		1163188	0					
ANR	1163365	ArgumentList	reg		1163188	1					
ANR	1163366	Argument	reg		1163188	0					
ANR	1163367	Identifier	reg		1163188	0					
ANR	1163368	Argument	OP_CCLASS_MIX		1163188	1					
ANR	1163369	Identifier	OP_CCLASS_MIX		1163188	0					
ANR	1163370	ExpressionStatement	"r = add_bitset ( reg , cc -> bs )"	640:6:13507:13534	1163188	1	True				
ANR	1163371	AssignmentExpression	"r = add_bitset ( reg , cc -> bs )"		1163188	0		=			
ANR	1163372	Identifier	r		1163188	0					
ANR	1163373	CallExpression	"add_bitset ( reg , cc -> bs )"		1163188	1					
ANR	1163374	Callee	add_bitset		1163188	0					
ANR	1163375	Identifier	add_bitset		1163188	0					
ANR	1163376	ArgumentList	reg		1163188	1					
ANR	1163377	Argument	reg		1163188	0					
ANR	1163378	Identifier	reg		1163188	0					
ANR	1163379	Argument	cc -> bs		1163188	1					
ANR	1163380	PtrMemberAccess	cc -> bs		1163188	0					
ANR	1163381	Identifier	cc		1163188	0					
ANR	1163382	Identifier	bs		1163188	1					
ANR	1163383	IfStatement	if ( r )		1163188	2					
ANR	1163384	Condition	r	641:10:13546:13546	1163188	0	True				
ANR	1163385	Identifier	r		1163188	0					
ANR	1163386	ReturnStatement	return r ;	641:13:13549:13557	1163188	1	True				
ANR	1163387	Identifier	r		1163188	0					
ANR	1163388	ExpressionStatement	"r = add_multi_byte_cclass ( cc -> mbuf , reg )"	642:6:13565:13605	1163188	3	True				
ANR	1163389	AssignmentExpression	"r = add_multi_byte_cclass ( cc -> mbuf , reg )"		1163188	0		=			
ANR	1163390	Identifier	r		1163188	0					
ANR	1163391	CallExpression	"add_multi_byte_cclass ( cc -> mbuf , reg )"		1163188	1					
ANR	1163392	Callee	add_multi_byte_cclass		1163188	0					
ANR	1163393	Identifier	add_multi_byte_cclass		1163188	0					
ANR	1163394	ArgumentList	cc -> mbuf		1163188	1					
ANR	1163395	Argument	cc -> mbuf		1163188	0					
ANR	1163396	PtrMemberAccess	cc -> mbuf		1163188	0					
ANR	1163397	Identifier	cc		1163188	0					
ANR	1163398	Identifier	mbuf		1163188	1					
ANR	1163399	Argument	reg		1163188	1					
ANR	1163400	Identifier	reg		1163188	0					
ANR	1163401	ReturnStatement	return r ;	646:2:13620:13628	1163188	3	True				
ANR	1163402	Identifier	r		1163188	0					
ANR	1163403	ReturnType	static int		1163188	1					
ANR	1163404	Identifier	compile_cclass_node		1163188	2					
ANR	1163405	ParameterList	"CClassNode * cc , regex_t * reg"		1163188	3					
ANR	1163406	Parameter	CClassNode * cc	607:20:12774:12787	1163188	0	True				
ANR	1163407	ParameterType	CClassNode *		1163188	0					
ANR	1163408	Identifier	cc		1163188	1					
ANR	1163409	Parameter	regex_t * reg	607:36:12790:12801	1163188	1	True				
ANR	1163410	ParameterType	regex_t *		1163188	0					
ANR	1163411	Identifier	reg		1163188	1					
ANR	1163412	CFGEntryNode	ENTRY		1163188		True				
ANR	1163413	CFGExitNode	EXIT		1163188		True				
ANR	1163414	Symbol	cc		1163188						
ANR	1163415	Symbol	OP_CCLASS_MB		1163188						
ANR	1163416	Symbol	* cc		1163188						
ANR	1163417	Symbol	IS_NCCLASS_NOT		1163188						
ANR	1163418	Symbol	OP_CCLASS_NOT		1163188						
ANR	1163419	Symbol	OP_CCLASS		1163188						
ANR	1163420	Symbol	ONIGENC_MBC_MINLEN		1163188						
ANR	1163421	Symbol	OP_CCLASS_NODE		1163188						
ANR	1163422	Symbol	cc -> mbuf		1163188						
ANR	1163423	Symbol	cc -> bs		1163188						
ANR	1163424	Symbol	reg -> enc		1163188						
ANR	1163425	Symbol	OP_CCLASS_MIX		1163188						
ANR	1163426	Symbol	r		1163188						
ANR	1163427	Symbol	bitset_is_empty		1163188						
ANR	1163428	Symbol	OP_CCLASS_MIX_NOT		1163188						
ANR	1163429	Symbol	IS_NULL		1163188						
ANR	1163430	Symbol	reg		1163188						
ANR	1163431	Symbol	IS_NCCLASS_SHARE		1163188						
ANR	1163432	Symbol	add_pointer		1163188						
ANR	1163433	Symbol	add_bitset		1163188						
ANR	1163434	Symbol	* reg		1163188						
ANR	1163435	Symbol	OP_CCLASS_MB_NOT		1163188						
ANR	1163436	Symbol	add_multi_byte_cclass		1163188						
ANR	1163437	Function	entry_repeat_range	649:0:13633:14466							
ANR	1163438	FunctionDef	"entry_repeat_range (regex_t * reg , int id , int lower , int upper)"		1163437	0					
ANR	1163439	CompoundStatement		651:0:13707:14466	1163437	0					
ANR	1163440	Statement	define	652:1:13710:13715	1163437	0	True				
ANR	1163441	Statement	REPEAT_RANGE_ALLOC	652:8:13717:13734	1163437	1	True				
ANR	1163442	Statement	4	652:28:13737:13737	1163437	2	True				
ANR	1163443	IdentifierDeclStatement	OnigRepeatRange * p ;	654:2:13742:13760	1163437	3	True				
ANR	1163444	IdentifierDecl	* p		1163437	0					
ANR	1163445	IdentifierDeclType	OnigRepeatRange *		1163437	0					
ANR	1163446	Identifier	p		1163437	1					
ANR	1163447	IfStatement	if ( reg -> repeat_range_alloc == 0 )		1163437	4					
ANR	1163448	Condition	reg -> repeat_range_alloc == 0	656:6:13769:13796	1163437	0	True				
ANR	1163449	EqualityExpression	reg -> repeat_range_alloc == 0		1163437	0		==			
ANR	1163450	PtrMemberAccess	reg -> repeat_range_alloc		1163437	0					
ANR	1163451	Identifier	reg		1163437	0					
ANR	1163452	Identifier	repeat_range_alloc		1163437	1					
ANR	1163453	PrimaryExpression	0		1163437	1					
ANR	1163454	CompoundStatement		6:36:91:91	1163437	1					
ANR	1163455	ExpressionStatement	p = ( OnigRepeatRange * ) xmalloc ( sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC )	657:4:13805:13881	1163437	0	True				
ANR	1163456	AssignmentExpression	p = ( OnigRepeatRange * ) xmalloc ( sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC )		1163437	0		=			
ANR	1163457	Identifier	p		1163437	0					
ANR	1163458	CastExpression	( OnigRepeatRange * ) xmalloc ( sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC )		1163437	1					
ANR	1163459	CastTarget	OnigRepeatRange *		1163437	0					
ANR	1163460	CallExpression	xmalloc ( sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC )		1163437	1					
ANR	1163461	Callee	xmalloc		1163437	0					
ANR	1163462	Identifier	xmalloc		1163437	0					
ANR	1163463	ArgumentList	sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC		1163437	1					
ANR	1163464	Argument	sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC		1163437	0					
ANR	1163465	MultiplicativeExpression	sizeof ( OnigRepeatRange ) * REPEAT_RANGE_ALLOC		1163437	0		*			
ANR	1163466	SizeofExpression	sizeof ( OnigRepeatRange )		1163437	0					
ANR	1163467	Sizeof	sizeof		1163437	0					
ANR	1163468	SizeofOperand	OnigRepeatRange		1163437	1					
ANR	1163469	Identifier	REPEAT_RANGE_ALLOC		1163437	1					
ANR	1163470	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	658:4:13887:13914	1163437	1	True				
ANR	1163471	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		1163437	0					
ANR	1163472	Callee	CHECK_NULL_RETURN_MEMERR		1163437	0					
ANR	1163473	Identifier	CHECK_NULL_RETURN_MEMERR		1163437	0					
ANR	1163474	ArgumentList	p		1163437	1					
ANR	1163475	Argument	p		1163437	0					
ANR	1163476	Identifier	p		1163437	0					
ANR	1163477	ExpressionStatement	reg -> repeat_range = p	659:4:13920:13941	1163437	2	True				
ANR	1163478	AssignmentExpression	reg -> repeat_range = p		1163437	0		=			
ANR	1163479	PtrMemberAccess	reg -> repeat_range		1163437	0					
ANR	1163480	Identifier	reg		1163437	0					
ANR	1163481	Identifier	repeat_range		1163437	1					
ANR	1163482	Identifier	p		1163437	1					
ANR	1163483	ExpressionStatement	reg -> repeat_range_alloc = REPEAT_RANGE_ALLOC	660:4:13947:13991	1163437	3	True				
ANR	1163484	AssignmentExpression	reg -> repeat_range_alloc = REPEAT_RANGE_ALLOC		1163437	0		=			
ANR	1163485	PtrMemberAccess	reg -> repeat_range_alloc		1163437	0					
ANR	1163486	Identifier	reg		1163437	0					
ANR	1163487	Identifier	repeat_range_alloc		1163437	1					
ANR	1163488	Identifier	REPEAT_RANGE_ALLOC		1163437	1					
ANR	1163489	ElseStatement	else		1163437	0					
ANR	1163490	IfStatement	if ( reg -> repeat_range_alloc <= id )		1163437	0					
ANR	1163491	Condition	reg -> repeat_range_alloc <= id	662:11:14008:14036	1163437	0	True				
ANR	1163492	RelationalExpression	reg -> repeat_range_alloc <= id		1163437	0		<=			
ANR	1163493	PtrMemberAccess	reg -> repeat_range_alloc		1163437	0					
ANR	1163494	Identifier	reg		1163437	0					
ANR	1163495	Identifier	repeat_range_alloc		1163437	1					
ANR	1163496	Identifier	id		1163437	1					
ANR	1163497	CompoundStatement		13:4:337:342	1163437	1					
ANR	1163498	IdentifierDeclStatement	int n ;	663:4:14045:14050	1163437	0	True				
ANR	1163499	IdentifierDecl	n		1163437	0					
ANR	1163500	IdentifierDeclType	int		1163437	0					
ANR	1163501	Identifier	n		1163437	1					
ANR	1163502	ExpressionStatement	n = reg -> repeat_range_alloc + REPEAT_RANGE_ALLOC	664:4:14056:14104	1163437	1	True				
ANR	1163503	AssignmentExpression	n = reg -> repeat_range_alloc + REPEAT_RANGE_ALLOC		1163437	0		=			
ANR	1163504	Identifier	n		1163437	0					
ANR	1163505	AdditiveExpression	reg -> repeat_range_alloc + REPEAT_RANGE_ALLOC		1163437	1		+			
ANR	1163506	PtrMemberAccess	reg -> repeat_range_alloc		1163437	0					
ANR	1163507	Identifier	reg		1163437	0					
ANR	1163508	Identifier	repeat_range_alloc		1163437	1					
ANR	1163509	Identifier	REPEAT_RANGE_ALLOC		1163437	1					
ANR	1163510	ExpressionStatement	"p = ( OnigRepeatRange * ) xrealloc ( reg -> repeat_range , sizeof ( OnigRepeatRange ) * n )"	665:4:14110:14225	1163437	2	True				
ANR	1163511	AssignmentExpression	"p = ( OnigRepeatRange * ) xrealloc ( reg -> repeat_range , sizeof ( OnigRepeatRange ) * n )"		1163437	0		=			
ANR	1163512	Identifier	p		1163437	0					
ANR	1163513	CastExpression	"( OnigRepeatRange * ) xrealloc ( reg -> repeat_range , sizeof ( OnigRepeatRange ) * n )"		1163437	1					
ANR	1163514	CastTarget	OnigRepeatRange *		1163437	0					
ANR	1163515	CallExpression	"xrealloc ( reg -> repeat_range , sizeof ( OnigRepeatRange ) * n )"		1163437	1					
ANR	1163516	Callee	xrealloc		1163437	0					
ANR	1163517	Identifier	xrealloc		1163437	0					
ANR	1163518	ArgumentList	reg -> repeat_range		1163437	1					
ANR	1163519	Argument	reg -> repeat_range		1163437	0					
ANR	1163520	PtrMemberAccess	reg -> repeat_range		1163437	0					
ANR	1163521	Identifier	reg		1163437	0					
ANR	1163522	Identifier	repeat_range		1163437	1					
ANR	1163523	Argument	sizeof ( OnigRepeatRange ) * n		1163437	1					
ANR	1163524	MultiplicativeExpression	sizeof ( OnigRepeatRange ) * n		1163437	0		*			
ANR	1163525	SizeofExpression	sizeof ( OnigRepeatRange )		1163437	0					
ANR	1163526	Sizeof	sizeof		1163437	0					
ANR	1163527	SizeofOperand	OnigRepeatRange		1163437	1					
ANR	1163528	Identifier	n		1163437	1					
ANR	1163529	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	667:4:14231:14258	1163437	3	True				
ANR	1163530	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		1163437	0					
ANR	1163531	Callee	CHECK_NULL_RETURN_MEMERR		1163437	0					
ANR	1163532	Identifier	CHECK_NULL_RETURN_MEMERR		1163437	0					
ANR	1163533	ArgumentList	p		1163437	1					
ANR	1163534	Argument	p		1163437	0					
ANR	1163535	Identifier	p		1163437	0					
ANR	1163536	ExpressionStatement	reg -> repeat_range = p	668:4:14264:14285	1163437	4	True				
ANR	1163537	AssignmentExpression	reg -> repeat_range = p		1163437	0		=			
ANR	1163538	PtrMemberAccess	reg -> repeat_range		1163437	0					
ANR	1163539	Identifier	reg		1163437	0					
ANR	1163540	Identifier	repeat_range		1163437	1					
ANR	1163541	Identifier	p		1163437	1					
ANR	1163542	ExpressionStatement	reg -> repeat_range_alloc = n	669:4:14291:14318	1163437	5	True				
ANR	1163543	AssignmentExpression	reg -> repeat_range_alloc = n		1163437	0		=			
ANR	1163544	PtrMemberAccess	reg -> repeat_range_alloc		1163437	0					
ANR	1163545	Identifier	reg		1163437	0					
ANR	1163546	Identifier	repeat_range_alloc		1163437	1					
ANR	1163547	Identifier	n		1163437	1					
ANR	1163548	ElseStatement	else		1163437	0					
ANR	1163549	CompoundStatement		21:7:623:623	1163437	0					
ANR	1163550	ExpressionStatement	p = reg -> repeat_range	672:4:14337:14358	1163437	0	True				
ANR	1163551	AssignmentExpression	p = reg -> repeat_range		1163437	0		=			
ANR	1163552	Identifier	p		1163437	0					
ANR	1163553	PtrMemberAccess	reg -> repeat_range		1163437	1					
ANR	1163554	Identifier	reg		1163437	0					
ANR	1163555	Identifier	repeat_range		1163437	1					
ANR	1163556	ExpressionStatement	p [ id ] . lower = lower	675:2:14367:14386	1163437	5	True				
ANR	1163557	AssignmentExpression	p [ id ] . lower = lower		1163437	0		=			
ANR	1163558	MemberAccess	p [ id ] . lower		1163437	0					
ANR	1163559	ArrayIndexing	p [ id ]		1163437	0					
ANR	1163560	Identifier	p		1163437	0					
ANR	1163561	Identifier	id		1163437	1					
ANR	1163562	Identifier	lower		1163437	1					
ANR	1163563	Identifier	lower		1163437	1					
ANR	1163564	ExpressionStatement	p [ id ] . upper = ( IS_REPEAT_INFINITE ( upper ) ? 0x7fffffff : upper )	676:2:14390:14452	1163437	6	True				
ANR	1163565	AssignmentExpression	p [ id ] . upper = ( IS_REPEAT_INFINITE ( upper ) ? 0x7fffffff : upper )		1163437	0		=			
ANR	1163566	MemberAccess	p [ id ] . upper		1163437	0					
ANR	1163567	ArrayIndexing	p [ id ]		1163437	0					
ANR	1163568	Identifier	p		1163437	0					
ANR	1163569	Identifier	id		1163437	1					
ANR	1163570	Identifier	upper		1163437	1					
ANR	1163571	ConditionalExpression	IS_REPEAT_INFINITE ( upper ) ? 0x7fffffff : upper		1163437	1					
ANR	1163572	Condition	IS_REPEAT_INFINITE ( upper )		1163437	0					
ANR	1163573	CallExpression	IS_REPEAT_INFINITE ( upper )		1163437	0					
ANR	1163574	Callee	IS_REPEAT_INFINITE		1163437	0					
ANR	1163575	Identifier	IS_REPEAT_INFINITE		1163437	0					
ANR	1163576	ArgumentList	upper		1163437	1					
ANR	1163577	Argument	upper		1163437	0					
ANR	1163578	Identifier	upper		1163437	0					
ANR	1163579	PrimaryExpression	0x7fffffff		1163437	1					
ANR	1163580	Identifier	upper		1163437	2					
ANR	1163581	ReturnStatement	return 0 ;	677:2:14456:14464	1163437	7	True				
ANR	1163582	PrimaryExpression	0		1163437	0					
ANR	1163583	ReturnType	static int		1163437	1					
ANR	1163584	Identifier	entry_repeat_range		1163437	2					
ANR	1163585	ParameterList	"regex_t * reg , int id , int lower , int upper"		1163437	3					
ANR	1163586	Parameter	regex_t * reg	650:19:13663:13674	1163437	0	True				
ANR	1163587	ParameterType	regex_t *		1163437	0					
ANR	1163588	Identifier	reg		1163437	1					
ANR	1163589	Parameter	int id	650:33:13677:13682	1163437	1	True				
ANR	1163590	ParameterType	int		1163437	0					
ANR	1163591	Identifier	id		1163437	1					
ANR	1163592	Parameter	int lower	650:41:13685:13693	1163437	2	True				
ANR	1163593	ParameterType	int		1163437	0					
ANR	1163594	Identifier	lower		1163437	1					
ANR	1163595	Parameter	int upper	650:52:13696:13704	1163437	3	True				
ANR	1163596	ParameterType	int		1163437	0					
ANR	1163597	Identifier	upper		1163437	1					
ANR	1163598	CFGEntryNode	ENTRY		1163437		True				
ANR	1163599	CFGExitNode	EXIT		1163437		True				
ANR	1163600	Symbol	REPEAT_RANGE_ALLOC		1163437						
ANR	1163601	Symbol	* id		1163437						
ANR	1163602	Symbol	reg -> repeat_range		1163437						
ANR	1163603	Symbol	p [ id ] . lower		1163437						
ANR	1163604	Symbol	lower		1163437						
ANR	1163605	Symbol	upper		1163437						
ANR	1163606	Symbol	p [ id ] . upper		1163437						
ANR	1163607	Symbol	n		1163437						
ANR	1163608	Symbol	p		1163437						
ANR	1163609	Symbol	reg -> repeat_range_alloc		1163437						
ANR	1163610	Symbol	reg		1163437						
ANR	1163611	Symbol	xmalloc		1163437						
ANR	1163612	Symbol	* p		1163437						
ANR	1163613	Symbol	id		1163437						
ANR	1163614	Symbol	IS_REPEAT_INFINITE		1163437						
ANR	1163615	Symbol	xrealloc		1163437						
ANR	1163616	Symbol	* reg		1163437						
ANR	1163617	Function	compile_range_repeat_node	680:0:14469:15414							
ANR	1163618	FunctionDef	"compile_range_repeat_node (QtfrNode * qn , int target_len , int empty_info , regex_t * reg)"		1163617	0					
ANR	1163619	CompoundStatement		683:0:14592:15414	1163617	0					
ANR	1163620	IdentifierDeclStatement	int r ;	684:2:14596:14601	1163617	0	True				
ANR	1163621	IdentifierDecl	r		1163617	0					
ANR	1163622	IdentifierDeclType	int		1163617	0					
ANR	1163623	Identifier	r		1163617	1					
ANR	1163624	IdentifierDeclStatement	int num_repeat = reg -> num_repeat ;	685:2:14605:14637	1163617	1	True				
ANR	1163625	IdentifierDecl	num_repeat = reg -> num_repeat		1163617	0					
ANR	1163626	IdentifierDeclType	int		1163617	0					
ANR	1163627	Identifier	num_repeat		1163617	1					
ANR	1163628	AssignmentExpression	num_repeat = reg -> num_repeat		1163617	2		=			
ANR	1163629	Identifier	num_repeat		1163617	0					
ANR	1163630	PtrMemberAccess	reg -> num_repeat		1163617	1					
ANR	1163631	Identifier	reg		1163617	0					
ANR	1163632	Identifier	num_repeat		1163617	1					
ANR	1163633	ExpressionStatement	"r = add_opcode ( reg , qn -> greedy ? OP_REPEAT : OP_REPEAT_NG )"	687:2:14642:14700	1163617	2	True				
ANR	1163634	AssignmentExpression	"r = add_opcode ( reg , qn -> greedy ? OP_REPEAT : OP_REPEAT_NG )"		1163617	0		=			
ANR	1163635	Identifier	r		1163617	0					
ANR	1163636	CallExpression	"add_opcode ( reg , qn -> greedy ? OP_REPEAT : OP_REPEAT_NG )"		1163617	1					
ANR	1163637	Callee	add_opcode		1163617	0					
ANR	1163638	Identifier	add_opcode		1163617	0					
ANR	1163639	ArgumentList	reg		1163617	1					
ANR	1163640	Argument	reg		1163617	0					
ANR	1163641	Identifier	reg		1163617	0					
ANR	1163642	Argument	qn -> greedy ? OP_REPEAT : OP_REPEAT_NG		1163617	1					
ANR	1163643	ConditionalExpression	qn -> greedy ? OP_REPEAT : OP_REPEAT_NG		1163617	0					
ANR	1163644	Condition	qn -> greedy		1163617	0					
ANR	1163645	PtrMemberAccess	qn -> greedy		1163617	0					
ANR	1163646	Identifier	qn		1163617	0					
ANR	1163647	Identifier	greedy		1163617	1					
ANR	1163648	Identifier	OP_REPEAT		1163617	1					
ANR	1163649	Identifier	OP_REPEAT_NG		1163617	2					
ANR	1163650	IfStatement	if ( r )		1163617	3					
ANR	1163651	Condition	r	688:6:14708:14708	1163617	0	True				
ANR	1163652	Identifier	r		1163617	0					
ANR	1163653	ReturnStatement	return r ;	688:9:14711:14719	1163617	1	True				
ANR	1163654	Identifier	r		1163617	0					
ANR	1163655	ExpressionStatement	"r = add_mem_num ( reg , num_repeat )"	689:2:14723:14755	1163617	4	True				
ANR	1163656	AssignmentExpression	"r = add_mem_num ( reg , num_repeat )"		1163617	0		=			
ANR	1163657	Identifier	r		1163617	0					
ANR	1163658	CallExpression	"add_mem_num ( reg , num_repeat )"		1163617	1					
ANR	1163659	Callee	add_mem_num		1163617	0					
ANR	1163660	Identifier	add_mem_num		1163617	0					
ANR	1163661	ArgumentList	reg		1163617	1					
ANR	1163662	Argument	reg		1163617	0					
ANR	1163663	Identifier	reg		1163617	0					
ANR	1163664	Argument	num_repeat		1163617	1					
ANR	1163665	Identifier	num_repeat		1163617	0					
ANR	1163666	ExpressionStatement	reg -> num_repeat ++	690:2:14778:14795	1163617	5	True				
ANR	1163667	PostIncDecOperationExpression	reg -> num_repeat ++		1163617	0					
ANR	1163668	PtrMemberAccess	reg -> num_repeat		1163617	0					
ANR	1163669	Identifier	reg		1163617	0					
ANR	1163670	Identifier	num_repeat		1163617	1					
ANR	1163671	IncDec	++		1163617	1					
ANR	1163672	IfStatement	if ( r )		1163617	6					
ANR	1163673	Condition	r	691:6:14803:14803	1163617	0	True				
ANR	1163674	Identifier	r		1163617	0					
ANR	1163675	ReturnStatement	return r ;	691:9:14806:14814	1163617	1	True				
ANR	1163676	Identifier	r		1163617	0					
ANR	1163677	ExpressionStatement	"r = add_rel_addr ( reg , target_len + SIZE_OP_REPEAT_INC )"	692:2:14818:14872	1163617	7	True				
ANR	1163678	AssignmentExpression	"r = add_rel_addr ( reg , target_len + SIZE_OP_REPEAT_INC )"		1163617	0		=			
ANR	1163679	Identifier	r		1163617	0					
ANR	1163680	CallExpression	"add_rel_addr ( reg , target_len + SIZE_OP_REPEAT_INC )"		1163617	1					
ANR	1163681	Callee	add_rel_addr		1163617	0					
ANR	1163682	Identifier	add_rel_addr		1163617	0					
ANR	1163683	ArgumentList	reg		1163617	1					
ANR	1163684	Argument	reg		1163617	0					
ANR	1163685	Identifier	reg		1163617	0					
ANR	1163686	Argument	target_len + SIZE_OP_REPEAT_INC		1163617	1					
ANR	1163687	AdditiveExpression	target_len + SIZE_OP_REPEAT_INC		1163617	0		+			
ANR	1163688	Identifier	target_len		1163617	0					
ANR	1163689	Identifier	SIZE_OP_REPEAT_INC		1163617	1					
ANR	1163690	IfStatement	if ( r )		1163617	8					
ANR	1163691	Condition	r	693:6:14880:14880	1163617	0	True				
ANR	1163692	Identifier	r		1163617	0					
ANR	1163693	ReturnStatement	return r ;	693:9:14883:14891	1163617	1	True				
ANR	1163694	Identifier	r		1163617	0					
ANR	1163695	ExpressionStatement	"r = entry_repeat_range ( reg , num_repeat , qn -> lower , qn -> upper )"	695:2:14896:14957	1163617	9	True				
ANR	1163696	AssignmentExpression	"r = entry_repeat_range ( reg , num_repeat , qn -> lower , qn -> upper )"		1163617	0		=			
ANR	1163697	Identifier	r		1163617	0					
ANR	1163698	CallExpression	"entry_repeat_range ( reg , num_repeat , qn -> lower , qn -> upper )"		1163617	1					
ANR	1163699	Callee	entry_repeat_range		1163617	0					
ANR	1163700	Identifier	entry_repeat_range		1163617	0					
ANR	1163701	ArgumentList	reg		1163617	1					
ANR	1163702	Argument	reg		1163617	0					
ANR	1163703	Identifier	reg		1163617	0					
ANR	1163704	Argument	num_repeat		1163617	1					
ANR	1163705	Identifier	num_repeat		1163617	0					
ANR	1163706	Argument	qn -> lower		1163617	2					
ANR	1163707	PtrMemberAccess	qn -> lower		1163617	0					
ANR	1163708	Identifier	qn		1163617	0					
ANR	1163709	Identifier	lower		1163617	1					
ANR	1163710	Argument	qn -> upper		1163617	3					
ANR	1163711	PtrMemberAccess	qn -> upper		1163617	0					
ANR	1163712	Identifier	qn		1163617	0					
ANR	1163713	Identifier	upper		1163617	1					
ANR	1163714	IfStatement	if ( r )		1163617	10					
ANR	1163715	Condition	r	696:6:14965:14965	1163617	0	True				
ANR	1163716	Identifier	r		1163617	0					
ANR	1163717	ReturnStatement	return r ;	696:9:14968:14976	1163617	1	True				
ANR	1163718	Identifier	r		1163617	0					
ANR	1163719	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	698:2:14981:15038	1163617	11	True				
ANR	1163720	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		1163617	0		=			
ANR	1163721	Identifier	r		1163617	0					
ANR	1163722	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		1163617	1					
ANR	1163723	Callee	compile_tree_empty_check		1163617	0					
ANR	1163724	Identifier	compile_tree_empty_check		1163617	0					
ANR	1163725	ArgumentList	qn -> target		1163617	1					
ANR	1163726	Argument	qn -> target		1163617	0					
ANR	1163727	PtrMemberAccess	qn -> target		1163617	0					
ANR	1163728	Identifier	qn		1163617	0					
ANR	1163729	Identifier	target		1163617	1					
ANR	1163730	Argument	reg		1163617	1					
ANR	1163731	Identifier	reg		1163617	0					
ANR	1163732	Argument	empty_info		1163617	2					
ANR	1163733	Identifier	empty_info		1163617	0					
ANR	1163734	IfStatement	if ( r )		1163617	12					
ANR	1163735	Condition	r	699:6:15046:15046	1163617	0	True				
ANR	1163736	Identifier	r		1163617	0					
ANR	1163737	ReturnStatement	return r ;	699:9:15049:15057	1163617	1	True				
ANR	1163738	Identifier	r		1163617	0					
ANR	1163739	ElseStatement	else		1163617	0					
ANR	1163740	CompoundStatement		26:7:657:657	1163617	0					
ANR	1163741	ExpressionStatement	"r = add_opcode ( reg , qn -> greedy ? OP_REPEAT_INC : OP_REPEAT_INC_NG )"	709:4:15256:15322	1163617	0	True				
ANR	1163742	AssignmentExpression	"r = add_opcode ( reg , qn -> greedy ? OP_REPEAT_INC : OP_REPEAT_INC_NG )"		1163617	0		=			
ANR	1163743	Identifier	r		1163617	0					
ANR	1163744	CallExpression	"add_opcode ( reg , qn -> greedy ? OP_REPEAT_INC : OP_REPEAT_INC_NG )"		1163617	1					
ANR	1163745	Callee	add_opcode		1163617	0					
ANR	1163746	Identifier	add_opcode		1163617	0					
ANR	1163747	ArgumentList	reg		1163617	1					
ANR	1163748	Argument	reg		1163617	0					
ANR	1163749	Identifier	reg		1163617	0					
ANR	1163750	Argument	qn -> greedy ? OP_REPEAT_INC : OP_REPEAT_INC_NG		1163617	1					
ANR	1163751	ConditionalExpression	qn -> greedy ? OP_REPEAT_INC : OP_REPEAT_INC_NG		1163617	0					
ANR	1163752	Condition	qn -> greedy		1163617	0					
ANR	1163753	PtrMemberAccess	qn -> greedy		1163617	0					
ANR	1163754	Identifier	qn		1163617	0					
ANR	1163755	Identifier	greedy		1163617	1					
ANR	1163756	Identifier	OP_REPEAT_INC		1163617	1					
ANR	1163757	Identifier	OP_REPEAT_INC_NG		1163617	2					
ANR	1163758	Statement	if	701:2:15062:15063	1163617	13	True				
ANR	1163759	Statement	(	701:5:15065:15065	1163617	14	True				
ANR	1163760	Statement	reg	703:6:15096:15098	1163617	15	True				
ANR	1163761	Statement	->	703:9:15099:15100	1163617	16	True				
ANR	1163762	Statement	num_call	703:11:15101:15108	1163617	17	True				
ANR	1163763	Statement	>	703:20:15110:15110	1163617	18	True				
ANR	1163764	Statement	0	703:22:15112:15112	1163617	19	True				
ANR	1163765	Statement	||	703:24:15114:15115	1163617	20	True				
ANR	1163766	Statement	IS_QUANTIFIER_IN_REPEAT	705:6:15130:15152	1163617	21	True				
ANR	1163767	Statement	(	705:29:15153:15153	1163617	22	True				
ANR	1163768	Statement	qn	705:30:15154:15155	1163617	23	True				
ANR	1163769	Statement	)	705:32:15156:15156	1163617	24	True				
ANR	1163770	Statement	)	705:33:15157:15157	1163617	25	True				
ANR	1163771	CompoundStatement		23:35:566:566	1163617	26					
ANR	1163772	ExpressionStatement	"r = add_opcode ( reg , qn -> greedy ? OP_REPEAT_INC_SG : OP_REPEAT_INC_NG_SG )"	706:4:15165:15237	1163617	0	True				
ANR	1163773	AssignmentExpression	"r = add_opcode ( reg , qn -> greedy ? OP_REPEAT_INC_SG : OP_REPEAT_INC_NG_SG )"		1163617	0		=			
ANR	1163774	Identifier	r		1163617	0					
ANR	1163775	CallExpression	"add_opcode ( reg , qn -> greedy ? OP_REPEAT_INC_SG : OP_REPEAT_INC_NG_SG )"		1163617	1					
ANR	1163776	Callee	add_opcode		1163617	0					
ANR	1163777	Identifier	add_opcode		1163617	0					
ANR	1163778	ArgumentList	reg		1163617	1					
ANR	1163779	Argument	reg		1163617	0					
ANR	1163780	Identifier	reg		1163617	0					
ANR	1163781	Argument	qn -> greedy ? OP_REPEAT_INC_SG : OP_REPEAT_INC_NG_SG		1163617	1					
ANR	1163782	ConditionalExpression	qn -> greedy ? OP_REPEAT_INC_SG : OP_REPEAT_INC_NG_SG		1163617	0					
ANR	1163783	Condition	qn -> greedy		1163617	0					
ANR	1163784	PtrMemberAccess	qn -> greedy		1163617	0					
ANR	1163785	Identifier	qn		1163617	0					
ANR	1163786	Identifier	greedy		1163617	1					
ANR	1163787	Identifier	OP_REPEAT_INC_SG		1163617	1					
ANR	1163788	Identifier	OP_REPEAT_INC_NG_SG		1163617	2					
ANR	1163789	IfStatement	if ( r )		1163617	27					
ANR	1163790	Condition	r	711:6:15334:15334	1163617	0	True				
ANR	1163791	Identifier	r		1163617	0					
ANR	1163792	ReturnStatement	return r ;	711:9:15337:15345	1163617	1	True				
ANR	1163793	Identifier	r		1163617	0					
ANR	1163794	ExpressionStatement	"r = add_mem_num ( reg , num_repeat )"	712:2:15349:15381	1163617	28	True				
ANR	1163795	AssignmentExpression	"r = add_mem_num ( reg , num_repeat )"		1163617	0		=			
ANR	1163796	Identifier	r		1163617	0					
ANR	1163797	CallExpression	"add_mem_num ( reg , num_repeat )"		1163617	1					
ANR	1163798	Callee	add_mem_num		1163617	0					
ANR	1163799	Identifier	add_mem_num		1163617	0					
ANR	1163800	ArgumentList	reg		1163617	1					
ANR	1163801	Argument	reg		1163617	0					
ANR	1163802	Identifier	reg		1163617	0					
ANR	1163803	Argument	num_repeat		1163617	1					
ANR	1163804	Identifier	num_repeat		1163617	0					
ANR	1163805	ReturnStatement	return r ;	713:2:15404:15412	1163617	29	True				
ANR	1163806	Identifier	r		1163617	0					
ANR	1163807	ReturnType	static int		1163617	1					
ANR	1163808	Identifier	compile_range_repeat_node		1163617	2					
ANR	1163809	ParameterList	"QtfrNode * qn , int target_len , int empty_info , regex_t * reg"		1163617	3					
ANR	1163810	Parameter	QtfrNode * qn	681:26:14506:14517	1163617	0	True				
ANR	1163811	ParameterType	QtfrNode *		1163617	0					
ANR	1163812	Identifier	qn		1163617	1					
ANR	1163813	Parameter	int target_len	681:40:14520:14533	1163617	1	True				
ANR	1163814	ParameterType	int		1163617	0					
ANR	1163815	Identifier	target_len		1163617	1					
ANR	1163816	Parameter	int empty_info	681:56:14536:14549	1163617	2	True				
ANR	1163817	ParameterType	int		1163617	0					
ANR	1163818	Identifier	empty_info		1163617	1					
ANR	1163819	Parameter	regex_t * reg	682:26:14578:14589	1163617	3	True				
ANR	1163820	ParameterType	regex_t *		1163617	0					
ANR	1163821	Identifier	reg		1163617	1					
ANR	1163822	CFGEntryNode	ENTRY		1163617		True				
ANR	1163823	CFGExitNode	EXIT		1163617		True				
ANR	1163824	Symbol	* qn		1163617						
ANR	1163825	Symbol	qn -> greedy		1163617						
ANR	1163826	Symbol	num_repeat		1163617						
ANR	1163827	Symbol	compile_tree_empty_check		1163617						
ANR	1163828	Symbol	add_mem_num		1163617						
ANR	1163829	Symbol	OP_REPEAT_INC_NG		1163617						
ANR	1163830	Symbol	qn -> lower		1163617						
ANR	1163831	Symbol	OP_REPEAT_INC_NG_SG		1163617						
ANR	1163832	Symbol	OP_REPEAT_INC		1163617						
ANR	1163833	Symbol	OP_REPEAT_INC_SG		1163617						
ANR	1163834	Symbol	reg		1163617						
ANR	1163835	Symbol	SIZE_OP_REPEAT_INC		1163617						
ANR	1163836	Symbol	add_opcode		1163617						
ANR	1163837	Symbol	qn		1163617						
ANR	1163838	Symbol	target_len		1163617						
ANR	1163839	Symbol	OP_REPEAT_NG		1163617						
ANR	1163840	Symbol	qn -> target		1163617						
ANR	1163841	Symbol	qn -> upper		1163617						
ANR	1163842	Symbol	r		1163617						
ANR	1163843	Symbol	OP_REPEAT		1163617						
ANR	1163844	Symbol	empty_info		1163617						
ANR	1163845	Symbol	add_rel_addr		1163617						
ANR	1163846	Symbol	entry_repeat_range		1163617						
ANR	1163847	Symbol	* reg		1163617						
ANR	1163848	Symbol	reg -> num_repeat		1163617						
ANR	1163849	Function	is_anychar_star_quantifier	716:0:15417:15595							
ANR	1163850	FunctionDef	is_anychar_star_quantifier (QtfrNode * qn)		1163849	0					
ANR	1163851	CompoundStatement		718:0:15469:15595	1163849	0					
ANR	1163852	IfStatement	if ( qn -> greedy && IS_REPEAT_INFINITE ( qn -> upper ) && NTYPE ( qn -> target ) == NT_CANY )		1163849	0					
ANR	1163853	Condition	qn -> greedy && IS_REPEAT_INFINITE ( qn -> upper ) && NTYPE ( qn -> target ) == NT_CANY	719:6:15477:15557	1163849	0	True				
ANR	1163854	AndExpression	qn -> greedy && IS_REPEAT_INFINITE ( qn -> upper ) && NTYPE ( qn -> target ) == NT_CANY		1163849	0		&&			
ANR	1163855	PtrMemberAccess	qn -> greedy		1163849	0					
ANR	1163856	Identifier	qn		1163849	0					
ANR	1163857	Identifier	greedy		1163849	1					
ANR	1163858	AndExpression	IS_REPEAT_INFINITE ( qn -> upper ) && NTYPE ( qn -> target ) == NT_CANY		1163849	1		&&			
ANR	1163859	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1163849	0					
ANR	1163860	Callee	IS_REPEAT_INFINITE		1163849	0					
ANR	1163861	Identifier	IS_REPEAT_INFINITE		1163849	0					
ANR	1163862	ArgumentList	qn -> upper		1163849	1					
ANR	1163863	Argument	qn -> upper		1163849	0					
ANR	1163864	PtrMemberAccess	qn -> upper		1163849	0					
ANR	1163865	Identifier	qn		1163849	0					
ANR	1163866	Identifier	upper		1163849	1					
ANR	1163867	EqualityExpression	NTYPE ( qn -> target ) == NT_CANY		1163849	1		==			
ANR	1163868	CallExpression	NTYPE ( qn -> target )		1163849	0					
ANR	1163869	Callee	NTYPE		1163849	0					
ANR	1163870	Identifier	NTYPE		1163849	0					
ANR	1163871	ArgumentList	qn -> target		1163849	1					
ANR	1163872	Argument	qn -> target		1163849	0					
ANR	1163873	PtrMemberAccess	qn -> target		1163849	0					
ANR	1163874	Identifier	qn		1163849	0					
ANR	1163875	Identifier	target		1163849	1					
ANR	1163876	Identifier	NT_CANY		1163849	1					
ANR	1163877	ReturnStatement	return 1 ;	721:4:15564:15572	1163849	1	True				
ANR	1163878	PrimaryExpression	1		1163849	0					
ANR	1163879	ElseStatement	else		1163849	0					
ANR	1163880	ReturnStatement	return 0 ;	723:4:15585:15593	1163849	0	True				
ANR	1163881	PrimaryExpression	0		1163849	0					
ANR	1163882	ReturnType	static int		1163849	1					
ANR	1163883	Identifier	is_anychar_star_quantifier		1163849	2					
ANR	1163884	ParameterList	QtfrNode * qn		1163849	3					
ANR	1163885	Parameter	QtfrNode * qn	717:27:15455:15466	1163849	0	True				
ANR	1163886	ParameterType	QtfrNode *		1163849	0					
ANR	1163887	Identifier	qn		1163849	1					
ANR	1163888	CFGEntryNode	ENTRY		1163849		True				
ANR	1163889	CFGExitNode	EXIT		1163849		True				
ANR	1163890	Symbol	* qn		1163849						
ANR	1163891	Symbol	qn -> greedy		1163849						
ANR	1163892	Symbol	qn -> upper		1163849						
ANR	1163893	Symbol	NT_CANY		1163849						
ANR	1163894	Symbol	NTYPE		1163849						
ANR	1163895	Symbol	IS_REPEAT_INFINITE		1163849						
ANR	1163896	Symbol	qn		1163849						
ANR	1163897	Symbol	qn -> target		1163849						
ANR	1163898	Function	compile_length_quantifier_node	731:0:15708:17547							
ANR	1163899	FunctionDef	"compile_length_quantifier_node (QtfrNode * qn , regex_t * reg)"		1163898	0					
ANR	1163900	CompoundStatement		733:0:15778:17547	1163898	0					
ANR	1163901	IdentifierDeclStatement	"int len , mod_tlen , cklen ;"	734:2:15782:15806	1163898	0	True				
ANR	1163902	IdentifierDecl	len		1163898	0					
ANR	1163903	IdentifierDeclType	int		1163898	0					
ANR	1163904	Identifier	len		1163898	1					
ANR	1163905	IdentifierDecl	mod_tlen		1163898	1					
ANR	1163906	IdentifierDeclType	int		1163898	0					
ANR	1163907	Identifier	mod_tlen		1163898	1					
ANR	1163908	IdentifierDecl	cklen		1163898	2					
ANR	1163909	IdentifierDeclType	int		1163898	0					
ANR	1163910	Identifier	cklen		1163898	1					
ANR	1163911	IdentifierDeclStatement	int ckn ;	735:2:15810:15817	1163898	1	True				
ANR	1163912	IdentifierDecl	ckn		1163898	0					
ANR	1163913	IdentifierDeclType	int		1163898	0					
ANR	1163914	Identifier	ckn		1163898	1					
ANR	1163915	IdentifierDeclStatement	int infinite = IS_REPEAT_INFINITE ( qn -> upper ) ;	736:2:15821:15865	1163898	2	True				
ANR	1163916	IdentifierDecl	infinite = IS_REPEAT_INFINITE ( qn -> upper )		1163898	0					
ANR	1163917	IdentifierDeclType	int		1163898	0					
ANR	1163918	Identifier	infinite		1163898	1					
ANR	1163919	AssignmentExpression	infinite = IS_REPEAT_INFINITE ( qn -> upper )		1163898	2		=			
ANR	1163920	Identifier	infinite		1163898	0					
ANR	1163921	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1163898	1					
ANR	1163922	Callee	IS_REPEAT_INFINITE		1163898	0					
ANR	1163923	Identifier	IS_REPEAT_INFINITE		1163898	0					
ANR	1163924	ArgumentList	qn -> upper		1163898	1					
ANR	1163925	Argument	qn -> upper		1163898	0					
ANR	1163926	PtrMemberAccess	qn -> upper		1163898	0					
ANR	1163927	Identifier	qn		1163898	0					
ANR	1163928	Identifier	upper		1163898	1					
ANR	1163929	IdentifierDeclStatement	int empty_info = qn -> target_empty_info ;	737:2:15869:15907	1163898	3	True				
ANR	1163930	IdentifierDecl	empty_info = qn -> target_empty_info		1163898	0					
ANR	1163931	IdentifierDeclType	int		1163898	0					
ANR	1163932	Identifier	empty_info		1163898	1					
ANR	1163933	AssignmentExpression	empty_info = qn -> target_empty_info		1163898	2		=			
ANR	1163934	Identifier	empty_info		1163898	0					
ANR	1163935	PtrMemberAccess	qn -> target_empty_info		1163898	1					
ANR	1163936	Identifier	qn		1163898	0					
ANR	1163937	Identifier	target_empty_info		1163898	1					
ANR	1163938	IdentifierDeclStatement	"int tlen = compile_length_tree ( qn -> target , reg ) ;"	738:2:15911:15958	1163898	4	True				
ANR	1163939	IdentifierDecl	"tlen = compile_length_tree ( qn -> target , reg )"		1163898	0					
ANR	1163940	IdentifierDeclType	int		1163898	0					
ANR	1163941	Identifier	tlen		1163898	1					
ANR	1163942	AssignmentExpression	"tlen = compile_length_tree ( qn -> target , reg )"		1163898	2		=			
ANR	1163943	Identifier	tlen		1163898	0					
ANR	1163944	CallExpression	"compile_length_tree ( qn -> target , reg )"		1163898	1					
ANR	1163945	Callee	compile_length_tree		1163898	0					
ANR	1163946	Identifier	compile_length_tree		1163898	0					
ANR	1163947	ArgumentList	qn -> target		1163898	1					
ANR	1163948	Argument	qn -> target		1163898	0					
ANR	1163949	PtrMemberAccess	qn -> target		1163898	0					
ANR	1163950	Identifier	qn		1163898	0					
ANR	1163951	Identifier	target		1163898	1					
ANR	1163952	Argument	reg		1163898	1					
ANR	1163953	Identifier	reg		1163898	0					
ANR	1163954	IfStatement	if ( tlen < 0 )		1163898	5					
ANR	1163955	Condition	tlen < 0	740:6:15967:15974	1163898	0	True				
ANR	1163956	RelationalExpression	tlen < 0		1163898	0		<			
ANR	1163957	Identifier	tlen		1163898	0					
ANR	1163958	PrimaryExpression	0		1163898	1					
ANR	1163959	ReturnStatement	return tlen ;	740:16:15977:15988	1163898	1	True				
ANR	1163960	Identifier	tlen		1163898	0					
ANR	1163961	ExpressionStatement	ckn = ( ( reg -> num_comb_exp_check > 0 ) ? qn -> comb_exp_check_num : 0 )	742:2:15993:16059	1163898	6	True				
ANR	1163962	AssignmentExpression	ckn = ( ( reg -> num_comb_exp_check > 0 ) ? qn -> comb_exp_check_num : 0 )		1163898	0		=			
ANR	1163963	Identifier	ckn		1163898	0					
ANR	1163964	ConditionalExpression	( reg -> num_comb_exp_check > 0 ) ? qn -> comb_exp_check_num : 0		1163898	1					
ANR	1163965	Condition	reg -> num_comb_exp_check > 0		1163898	0					
ANR	1163966	RelationalExpression	reg -> num_comb_exp_check > 0		1163898	0		>			
ANR	1163967	PtrMemberAccess	reg -> num_comb_exp_check		1163898	0					
ANR	1163968	Identifier	reg		1163898	0					
ANR	1163969	Identifier	num_comb_exp_check		1163898	1					
ANR	1163970	PrimaryExpression	0		1163898	1					
ANR	1163971	PtrMemberAccess	qn -> comb_exp_check_num		1163898	1					
ANR	1163972	Identifier	qn		1163898	0					
ANR	1163973	Identifier	comb_exp_check_num		1163898	1					
ANR	1163974	PrimaryExpression	0		1163898	2					
ANR	1163975	ExpressionStatement	cklen = ( CKN_ON ? SIZE_STATE_CHECK_NUM : 0 )	744:2:16064:16106	1163898	7	True				
ANR	1163976	AssignmentExpression	cklen = ( CKN_ON ? SIZE_STATE_CHECK_NUM : 0 )		1163898	0		=			
ANR	1163977	Identifier	cklen		1163898	0					
ANR	1163978	ConditionalExpression	CKN_ON ? SIZE_STATE_CHECK_NUM : 0		1163898	1					
ANR	1163979	Condition	CKN_ON		1163898	0					
ANR	1163980	Identifier	CKN_ON		1163898	0					
ANR	1163981	Identifier	SIZE_STATE_CHECK_NUM		1163898	1					
ANR	1163982	PrimaryExpression	0		1163898	2					
ANR	1163983	IfStatement	if ( NTYPE ( qn -> target ) == NT_CANY )		1163898	8					
ANR	1163984	Condition	NTYPE ( qn -> target ) == NT_CANY	747:6:16138:16165	1163898	0	True				
ANR	1163985	EqualityExpression	NTYPE ( qn -> target ) == NT_CANY		1163898	0		==			
ANR	1163986	CallExpression	NTYPE ( qn -> target )		1163898	0					
ANR	1163987	Callee	NTYPE		1163898	0					
ANR	1163988	Identifier	NTYPE		1163898	0					
ANR	1163989	ArgumentList	qn -> target		1163898	1					
ANR	1163990	Argument	qn -> target		1163898	0					
ANR	1163991	PtrMemberAccess	qn -> target		1163898	0					
ANR	1163992	Identifier	qn		1163898	0					
ANR	1163993	Identifier	target		1163898	1					
ANR	1163994	Identifier	NT_CANY		1163898	1					
ANR	1163995	CompoundStatement		15:36:389:389	1163898	1					
ANR	1163996	IfStatement	if ( qn -> greedy && infinite )		1163898	0					
ANR	1163997	Condition	qn -> greedy && infinite	748:8:16178:16199	1163898	0	True				
ANR	1163998	AndExpression	qn -> greedy && infinite		1163898	0		&&			
ANR	1163999	PtrMemberAccess	qn -> greedy		1163898	0					
ANR	1164000	Identifier	qn		1163898	0					
ANR	1164001	Identifier	greedy		1163898	1					
ANR	1164002	Identifier	infinite		1163898	1					
ANR	1164003	CompoundStatement		16:32:423:423	1163898	1					
ANR	1164004	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) && ! CKN_ON )		1163898	0					
ANR	1164005	Condition	IS_NOT_NULL ( qn -> next_head_exact ) && ! CKN_ON	749:10:16214:16256	1163898	0	True				
ANR	1164006	AndExpression	IS_NOT_NULL ( qn -> next_head_exact ) && ! CKN_ON		1163898	0		&&			
ANR	1164007	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		1163898	0					
ANR	1164008	Callee	IS_NOT_NULL		1163898	0					
ANR	1164009	Identifier	IS_NOT_NULL		1163898	0					
ANR	1164010	ArgumentList	qn -> next_head_exact		1163898	1					
ANR	1164011	Argument	qn -> next_head_exact		1163898	0					
ANR	1164012	PtrMemberAccess	qn -> next_head_exact		1163898	0					
ANR	1164013	Identifier	qn		1163898	0					
ANR	1164014	Identifier	next_head_exact		1163898	1					
ANR	1164015	UnaryOperationExpression	! CKN_ON		1163898	1					
ANR	1164016	UnaryOperator	!		1163898	0					
ANR	1164017	Identifier	CKN_ON		1163898	1					
ANR	1164018	ReturnStatement	return SIZE_OP_ANYCHAR_STAR_PEEK_NEXT + tlen * qn -> lower + cklen ;	750:8:16267:16331	1163898	1	True				
ANR	1164019	AdditiveExpression	SIZE_OP_ANYCHAR_STAR_PEEK_NEXT + tlen * qn -> lower + cklen		1163898	0		+			
ANR	1164020	Identifier	SIZE_OP_ANYCHAR_STAR_PEEK_NEXT		1163898	0					
ANR	1164021	AdditiveExpression	tlen * qn -> lower + cklen		1163898	1		+			
ANR	1164022	MultiplicativeExpression	tlen * qn -> lower		1163898	0		*			
ANR	1164023	Identifier	tlen		1163898	0					
ANR	1164024	PtrMemberAccess	qn -> lower		1163898	1					
ANR	1164025	Identifier	qn		1163898	0					
ANR	1164026	Identifier	lower		1163898	1					
ANR	1164027	Identifier	cklen		1163898	1					
ANR	1164028	ElseStatement	else		1163898	0					
ANR	1164029	ReturnStatement	return SIZE_OP_ANYCHAR_STAR + tlen * qn -> lower + cklen ;	752:8:16352:16406	1163898	0	True				
ANR	1164030	AdditiveExpression	SIZE_OP_ANYCHAR_STAR + tlen * qn -> lower + cklen		1163898	0		+			
ANR	1164031	Identifier	SIZE_OP_ANYCHAR_STAR		1163898	0					
ANR	1164032	AdditiveExpression	tlen * qn -> lower + cklen		1163898	1		+			
ANR	1164033	MultiplicativeExpression	tlen * qn -> lower		1163898	0		*			
ANR	1164034	Identifier	tlen		1163898	0					
ANR	1164035	PtrMemberAccess	qn -> lower		1163898	1					
ANR	1164036	Identifier	qn		1163898	0					
ANR	1164037	Identifier	lower		1163898	1					
ANR	1164038	Identifier	cklen		1163898	1					
ANR	1164039	IfStatement	if ( empty_info != 0 )		1163898	9					
ANR	1164040	Condition	empty_info != 0	756:6:16425:16439	1163898	0	True				
ANR	1164041	EqualityExpression	empty_info != 0		1163898	0		!=			
ANR	1164042	Identifier	empty_info		1163898	0					
ANR	1164043	PrimaryExpression	0		1163898	1					
ANR	1164044	ExpressionStatement	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )	757:4:16446:16515	1163898	1	True				
ANR	1164045	AssignmentExpression	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		1163898	0		=			
ANR	1164046	Identifier	mod_tlen		1163898	0					
ANR	1164047	AdditiveExpression	tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		1163898	1		+			
ANR	1164048	Identifier	tlen		1163898	0					
ANR	1164049	AdditiveExpression	SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END		1163898	1		+			
ANR	1164050	Identifier	SIZE_OP_NULL_CHECK_START		1163898	0					
ANR	1164051	Identifier	SIZE_OP_NULL_CHECK_END		1163898	1					
ANR	1164052	ElseStatement	else		1163898	0					
ANR	1164053	ExpressionStatement	mod_tlen = tlen	759:4:16528:16543	1163898	0	True				
ANR	1164054	AssignmentExpression	mod_tlen = tlen		1163898	0		=			
ANR	1164055	Identifier	mod_tlen		1163898	0					
ANR	1164056	Identifier	tlen		1163898	1					
ANR	1164057	IfStatement	if ( infinite && qn -> lower <= 1 )		1163898	10					
ANR	1164058	Condition	infinite && qn -> lower <= 1	761:6:16552:16577	1163898	0	True				
ANR	1164059	AndExpression	infinite && qn -> lower <= 1		1163898	0		&&			
ANR	1164060	Identifier	infinite		1163898	0					
ANR	1164061	RelationalExpression	qn -> lower <= 1		1163898	1		<=			
ANR	1164062	PtrMemberAccess	qn -> lower		1163898	0					
ANR	1164063	Identifier	qn		1163898	0					
ANR	1164064	Identifier	lower		1163898	1					
ANR	1164065	PrimaryExpression	1		1163898	1					
ANR	1164066	CompoundStatement		29:34:801:801	1163898	1					
ANR	1164067	IfStatement	if ( qn -> greedy )		1163898	0					
ANR	1164068	Condition	qn -> greedy	762:8:16590:16599	1163898	0	True				
ANR	1164069	PtrMemberAccess	qn -> greedy		1163898	0					
ANR	1164070	Identifier	qn		1163898	0					
ANR	1164071	Identifier	greedy		1163898	1					
ANR	1164072	CompoundStatement		30:20:823:823	1163898	1					
ANR	1164073	IfStatement	if ( qn -> lower == 1 )		1163898	0					
ANR	1164074	Condition	qn -> lower == 1	763:10:16614:16627	1163898	0	True				
ANR	1164075	EqualityExpression	qn -> lower == 1		1163898	0		==			
ANR	1164076	PtrMemberAccess	qn -> lower		1163898	0					
ANR	1164077	Identifier	qn		1163898	0					
ANR	1164078	Identifier	lower		1163898	1					
ANR	1164079	PrimaryExpression	1		1163898	1					
ANR	1164080	ExpressionStatement	len = SIZE_OP_JUMP	764:1:16631:16649	1163898	1	True				
ANR	1164081	AssignmentExpression	len = SIZE_OP_JUMP		1163898	0		=			
ANR	1164082	Identifier	len		1163898	0					
ANR	1164083	Identifier	SIZE_OP_JUMP		1163898	1					
ANR	1164084	ElseStatement	else		1163898	0					
ANR	1164085	ExpressionStatement	len = 0	766:1:16663:16670	1163898	0	True				
ANR	1164086	AssignmentExpression	len = 0		1163898	0		=			
ANR	1164087	Identifier	len		1163898	0					
ANR	1164088	PrimaryExpression	0		1163898	1					
ANR	1164089	ExpressionStatement	len += SIZE_OP_PUSH + cklen + mod_tlen + SIZE_OP_JUMP	768:6:16679:16732	1163898	1	True				
ANR	1164090	AssignmentExpression	len += SIZE_OP_PUSH + cklen + mod_tlen + SIZE_OP_JUMP		1163898	0		+=			
ANR	1164091	Identifier	len		1163898	0					
ANR	1164092	AdditiveExpression	SIZE_OP_PUSH + cklen + mod_tlen + SIZE_OP_JUMP		1163898	1		+			
ANR	1164093	Identifier	SIZE_OP_PUSH		1163898	0					
ANR	1164094	AdditiveExpression	cklen + mod_tlen + SIZE_OP_JUMP		1163898	1		+			
ANR	1164095	Identifier	cklen		1163898	0					
ANR	1164096	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		1163898	1		+			
ANR	1164097	Identifier	mod_tlen		1163898	0					
ANR	1164098	Identifier	SIZE_OP_JUMP		1163898	1					
ANR	1164099	ElseStatement	else		1163898	0					
ANR	1164100	CompoundStatement		38:9:970:970	1163898	0					
ANR	1164101	IfStatement	if ( qn -> lower == 0 )		1163898	0					
ANR	1164102	Condition	qn -> lower == 0	771:10:16761:16774	1163898	0	True				
ANR	1164103	EqualityExpression	qn -> lower == 0		1163898	0		==			
ANR	1164104	PtrMemberAccess	qn -> lower		1163898	0					
ANR	1164105	Identifier	qn		1163898	0					
ANR	1164106	Identifier	lower		1163898	1					
ANR	1164107	PrimaryExpression	0		1163898	1					
ANR	1164108	ExpressionStatement	len = SIZE_OP_JUMP	772:1:16778:16796	1163898	1	True				
ANR	1164109	AssignmentExpression	len = SIZE_OP_JUMP		1163898	0		=			
ANR	1164110	Identifier	len		1163898	0					
ANR	1164111	Identifier	SIZE_OP_JUMP		1163898	1					
ANR	1164112	ElseStatement	else		1163898	0					
ANR	1164113	ExpressionStatement	len = 0	774:1:16810:16817	1163898	0	True				
ANR	1164114	AssignmentExpression	len = 0		1163898	0		=			
ANR	1164115	Identifier	len		1163898	0					
ANR	1164116	PrimaryExpression	0		1163898	1					
ANR	1164117	ExpressionStatement	len += mod_tlen + SIZE_OP_PUSH + cklen	776:6:16826:16864	1163898	1	True				
ANR	1164118	AssignmentExpression	len += mod_tlen + SIZE_OP_PUSH + cklen		1163898	0		+=			
ANR	1164119	Identifier	len		1163898	0					
ANR	1164120	AdditiveExpression	mod_tlen + SIZE_OP_PUSH + cklen		1163898	1		+			
ANR	1164121	Identifier	mod_tlen		1163898	0					
ANR	1164122	AdditiveExpression	SIZE_OP_PUSH + cklen		1163898	1		+			
ANR	1164123	Identifier	SIZE_OP_PUSH		1163898	0					
ANR	1164124	Identifier	cklen		1163898	1					
ANR	1164125	ElseStatement	else		1163898	0					
ANR	1164126	IfStatement	if ( qn -> upper == 0 )		1163898	0					
ANR	1164127	Condition	qn -> upper == 0	779:11:16887:16900	1163898	0	True				
ANR	1164128	EqualityExpression	qn -> upper == 0		1163898	0		==			
ANR	1164129	PtrMemberAccess	qn -> upper		1163898	0					
ANR	1164130	Identifier	qn		1163898	0					
ANR	1164131	Identifier	upper		1163898	1					
ANR	1164132	PrimaryExpression	0		1163898	1					
ANR	1164133	CompoundStatement		47:27:1124:1124	1163898	1					
ANR	1164134	IfStatement	if ( qn -> is_refered != 0 )		1163898	0					
ANR	1164135	Condition	qn -> is_refered != 0	780:8:16913:16931	1163898	0	True				
ANR	1164136	EqualityExpression	qn -> is_refered != 0		1163898	0		!=			
ANR	1164137	PtrMemberAccess	qn -> is_refered		1163898	0					
ANR	1164138	Identifier	qn		1163898	0					
ANR	1164139	Identifier	is_refered		1163898	1					
ANR	1164140	PrimaryExpression	0		1163898	1					
ANR	1164141	ExpressionStatement	len = SIZE_OP_JUMP + tlen	781:6:16960:16985	1163898	1	True				
ANR	1164142	AssignmentExpression	len = SIZE_OP_JUMP + tlen		1163898	0		=			
ANR	1164143	Identifier	len		1163898	0					
ANR	1164144	AdditiveExpression	SIZE_OP_JUMP + tlen		1163898	1		+			
ANR	1164145	Identifier	SIZE_OP_JUMP		1163898	0					
ANR	1164146	Identifier	tlen		1163898	1					
ANR	1164147	ElseStatement	else		1163898	0					
ANR	1164148	ExpressionStatement	len = 0	783:6:17002:17009	1163898	0	True				
ANR	1164149	AssignmentExpression	len = 0		1163898	0		=			
ANR	1164150	Identifier	len		1163898	0					
ANR	1164151	PrimaryExpression	0		1163898	1					
ANR	1164152	ElseStatement	else		1163898	0					
ANR	1164153	IfStatement	if ( qn -> upper == 1 && qn -> greedy )		1163898	0					
ANR	1164154	Condition	qn -> upper == 1 && qn -> greedy	785:11:17026:17053	1163898	0	True				
ANR	1164155	AndExpression	qn -> upper == 1 && qn -> greedy		1163898	0		&&			
ANR	1164156	EqualityExpression	qn -> upper == 1		1163898	0		==			
ANR	1164157	PtrMemberAccess	qn -> upper		1163898	0					
ANR	1164158	Identifier	qn		1163898	0					
ANR	1164159	Identifier	upper		1163898	1					
ANR	1164160	PrimaryExpression	1		1163898	1					
ANR	1164161	PtrMemberAccess	qn -> greedy		1163898	1					
ANR	1164162	Identifier	qn		1163898	0					
ANR	1164163	Identifier	greedy		1163898	1					
ANR	1164164	CompoundStatement		53:41:1277:1277	1163898	1					
ANR	1164165	IfStatement	if ( qn -> lower == 0 )		1163898	0					
ANR	1164166	Condition	qn -> lower == 0	786:8:17066:17079	1163898	0	True				
ANR	1164167	EqualityExpression	qn -> lower == 0		1163898	0		==			
ANR	1164168	PtrMemberAccess	qn -> lower		1163898	0					
ANR	1164169	Identifier	qn		1163898	0					
ANR	1164170	Identifier	lower		1163898	1					
ANR	1164171	PrimaryExpression	0		1163898	1					
ANR	1164172	CompoundStatement		54:24:1303:1303	1163898	1					
ANR	1164173	IfStatement	if ( CKN_ON )		1163898	0					
ANR	1164174	Condition	CKN_ON	787:10:17094:17099	1163898	0	True				
ANR	1164175	Identifier	CKN_ON		1163898	0					
ANR	1164176	CompoundStatement		55:18:1323:1323	1163898	1					
ANR	1164177	ExpressionStatement	len = SIZE_OP_STATE_CHECK_PUSH + tlen	788:1:17105:17142	1163898	0	True				
ANR	1164178	AssignmentExpression	len = SIZE_OP_STATE_CHECK_PUSH + tlen		1163898	0		=			
ANR	1164179	Identifier	len		1163898	0					
ANR	1164180	AdditiveExpression	SIZE_OP_STATE_CHECK_PUSH + tlen		1163898	1		+			
ANR	1164181	Identifier	SIZE_OP_STATE_CHECK_PUSH		1163898	0					
ANR	1164182	Identifier	tlen		1163898	1					
ANR	1164183	ElseStatement	else		1163898	0					
ANR	1164184	CompoundStatement		58:11:1384:1384	1163898	0					
ANR	1164185	ExpressionStatement	len = SIZE_OP_PUSH + tlen	791:1:17166:17191	1163898	0	True				
ANR	1164186	AssignmentExpression	len = SIZE_OP_PUSH + tlen		1163898	0		=			
ANR	1164187	Identifier	len		1163898	0					
ANR	1164188	AdditiveExpression	SIZE_OP_PUSH + tlen		1163898	1		+			
ANR	1164189	Identifier	SIZE_OP_PUSH		1163898	0					
ANR	1164190	Identifier	tlen		1163898	1					
ANR	1164191	ElseStatement	else		1163898	0					
ANR	1164192	CompoundStatement		62:9:1437:1437	1163898	0					
ANR	1164193	ExpressionStatement	len = tlen	795:6:17224:17234	1163898	0	True				
ANR	1164194	AssignmentExpression	len = tlen		1163898	0		=			
ANR	1164195	Identifier	len		1163898	0					
ANR	1164196	Identifier	tlen		1163898	1					
ANR	1164197	ElseStatement	else		1163898	0					
ANR	1164198	IfStatement	if ( ! qn -> greedy && qn -> upper == 1 && qn -> lower == 0 )		1163898	0					
ANR	1164199	Condition	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0	798:11:17257:17303	1163898	0	True				
ANR	1164200	AndExpression	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0		1163898	0		&&			
ANR	1164201	UnaryOperationExpression	! qn -> greedy		1163898	0					
ANR	1164202	UnaryOperator	!		1163898	0					
ANR	1164203	PtrMemberAccess	qn -> greedy		1163898	1					
ANR	1164204	Identifier	qn		1163898	0					
ANR	1164205	Identifier	greedy		1163898	1					
ANR	1164206	AndExpression	qn -> upper == 1 && qn -> lower == 0		1163898	1		&&			
ANR	1164207	EqualityExpression	qn -> upper == 1		1163898	0		==			
ANR	1164208	PtrMemberAccess	qn -> upper		1163898	0					
ANR	1164209	Identifier	qn		1163898	0					
ANR	1164210	Identifier	upper		1163898	1					
ANR	1164211	PrimaryExpression	1		1163898	1					
ANR	1164212	EqualityExpression	qn -> lower == 0		1163898	1		==			
ANR	1164213	PtrMemberAccess	qn -> lower		1163898	0					
ANR	1164214	Identifier	qn		1163898	0					
ANR	1164215	Identifier	lower		1163898	1					
ANR	1164216	PrimaryExpression	0		1163898	1					
ANR	1164217	CompoundStatement		66:60:1527:1527	1163898	1					
ANR	1164218	ExpressionStatement	len = SIZE_OP_PUSH + cklen + SIZE_OP_JUMP + tlen	799:4:17323:17371	1163898	0	True				
ANR	1164219	AssignmentExpression	len = SIZE_OP_PUSH + cklen + SIZE_OP_JUMP + tlen		1163898	0		=			
ANR	1164220	Identifier	len		1163898	0					
ANR	1164221	AdditiveExpression	SIZE_OP_PUSH + cklen + SIZE_OP_JUMP + tlen		1163898	1		+			
ANR	1164222	Identifier	SIZE_OP_PUSH		1163898	0					
ANR	1164223	AdditiveExpression	cklen + SIZE_OP_JUMP + tlen		1163898	1		+			
ANR	1164224	Identifier	cklen		1163898	0					
ANR	1164225	AdditiveExpression	SIZE_OP_JUMP + tlen		1163898	1		+			
ANR	1164226	Identifier	SIZE_OP_JUMP		1163898	0					
ANR	1164227	Identifier	tlen		1163898	1					
ANR	1164228	ElseStatement	else		1163898	0					
ANR	1164229	CompoundStatement		69:7:1605:1605	1163898	0					
ANR	1164230	ExpressionStatement	len = SIZE_OP_REPEAT_INC + mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM	802:4:17390:17476	1163898	0	True				
ANR	1164231	AssignmentExpression	len = SIZE_OP_REPEAT_INC + mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		1163898	0		=			
ANR	1164232	Identifier	len		1163898	0					
ANR	1164233	AdditiveExpression	SIZE_OP_REPEAT_INC + mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		1163898	1		+			
ANR	1164234	Identifier	SIZE_OP_REPEAT_INC		1163898	0					
ANR	1164235	AdditiveExpression	mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		1163898	1		+			
ANR	1164236	Identifier	mod_tlen		1163898	0					
ANR	1164237	AdditiveExpression	SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		1163898	1		+			
ANR	1164238	Identifier	SIZE_OPCODE		1163898	0					
ANR	1164239	AdditiveExpression	SIZE_RELADDR + SIZE_MEMNUM		1163898	1		+			
ANR	1164240	Identifier	SIZE_RELADDR		1163898	0					
ANR	1164241	Identifier	SIZE_MEMNUM		1163898	1					
ANR	1164242	IfStatement	if ( CKN_ON )		1163898	1					
ANR	1164243	Condition	CKN_ON	804:8:17486:17491	1163898	0	True				
ANR	1164244	Identifier	CKN_ON		1163898	0					
ANR	1164245	ExpressionStatement	len += SIZE_OP_STATE_CHECK	805:6:17500:17526	1163898	1	True				
ANR	1164246	AssignmentExpression	len += SIZE_OP_STATE_CHECK		1163898	0		+=			
ANR	1164247	Identifier	len		1163898	0					
ANR	1164248	Identifier	SIZE_OP_STATE_CHECK		1163898	1					
ANR	1164249	ReturnStatement	return len ;	808:2:17535:17545	1163898	11	True				
ANR	1164250	Identifier	len		1163898	0					
ANR	1164251	ReturnType	static int		1163898	1					
ANR	1164252	Identifier	compile_length_quantifier_node		1163898	2					
ANR	1164253	ParameterList	"QtfrNode * qn , regex_t * reg"		1163898	3					
ANR	1164254	Parameter	QtfrNode * qn	732:31:15750:15761	1163898	0	True				
ANR	1164255	ParameterType	QtfrNode *		1163898	0					
ANR	1164256	Identifier	qn		1163898	1					
ANR	1164257	Parameter	regex_t * reg	732:45:15764:15775	1163898	1	True				
ANR	1164258	ParameterType	regex_t *		1163898	0					
ANR	1164259	Identifier	reg		1163898	1					
ANR	1164260	CFGEntryNode	ENTRY		1163898		True				
ANR	1164261	CFGExitNode	EXIT		1163898		True				
ANR	1164262	Symbol	* qn		1163898						
ANR	1164263	Symbol	qn -> target_empty_info		1163898						
ANR	1164264	Symbol	qn -> greedy		1163898						
ANR	1164265	Symbol	SIZE_RELADDR		1163898						
ANR	1164266	Symbol	CKN_ON		1163898						
ANR	1164267	Symbol	IS_NOT_NULL		1163898						
ANR	1164268	Symbol	SIZE_OP_ANYCHAR_STAR_PEEK_NEXT		1163898						
ANR	1164269	Symbol	infinite		1163898						
ANR	1164270	Symbol	ckn		1163898						
ANR	1164271	Symbol	cklen		1163898						
ANR	1164272	Symbol	qn -> next_head_exact		1163898						
ANR	1164273	Symbol	SIZE_OP_NULL_CHECK_END		1163898						
ANR	1164274	Symbol	SIZE_STATE_CHECK_NUM		1163898						
ANR	1164275	Symbol	SIZE_OPCODE		1163898						
ANR	1164276	Symbol	qn -> lower		1163898						
ANR	1164277	Symbol	SIZE_MEMNUM		1163898						
ANR	1164278	Symbol	len		1163898						
ANR	1164279	Symbol	reg		1163898						
ANR	1164280	Symbol	NT_CANY		1163898						
ANR	1164281	Symbol	SIZE_OP_ANYCHAR_STAR		1163898						
ANR	1164282	Symbol	tlen		1163898						
ANR	1164283	Symbol	reg -> num_comb_exp_check		1163898						
ANR	1164284	Symbol	SIZE_OP_REPEAT_INC		1163898						
ANR	1164285	Symbol	IS_REPEAT_INFINITE		1163898						
ANR	1164286	Symbol	SIZE_OP_NULL_CHECK_START		1163898						
ANR	1164287	Symbol	qn		1163898						
ANR	1164288	Symbol	SIZE_OP_JUMP		1163898						
ANR	1164289	Symbol	SIZE_OP_STATE_CHECK		1163898						
ANR	1164290	Symbol	compile_length_tree		1163898						
ANR	1164291	Symbol	qn -> comb_exp_check_num		1163898						
ANR	1164292	Symbol	SIZE_OP_PUSH		1163898						
ANR	1164293	Symbol	qn -> target		1163898						
ANR	1164294	Symbol	qn -> upper		1163898						
ANR	1164295	Symbol	qn -> is_refered		1163898						
ANR	1164296	Symbol	mod_tlen		1163898						
ANR	1164297	Symbol	empty_info		1163898						
ANR	1164298	Symbol	NTYPE		1163898						
ANR	1164299	Symbol	SIZE_OP_STATE_CHECK_PUSH		1163898						
ANR	1164300	Symbol	* reg		1163898						
ANR	1164301	Function	compile_quantifier_node	811:0:17550:21520							
ANR	1164302	FunctionDef	"compile_quantifier_node (QtfrNode * qn , regex_t * reg)"		1164301	0					
ANR	1164303	CompoundStatement		813:0:17613:21520	1164301	0					
ANR	1164304	IdentifierDeclStatement	"int r , mod_tlen ;"	814:2:17617:17632	1164301	0	True				
ANR	1164305	IdentifierDecl	r		1164301	0					
ANR	1164306	IdentifierDeclType	int		1164301	0					
ANR	1164307	Identifier	r		1164301	1					
ANR	1164308	IdentifierDecl	mod_tlen		1164301	1					
ANR	1164309	IdentifierDeclType	int		1164301	0					
ANR	1164310	Identifier	mod_tlen		1164301	1					
ANR	1164311	IdentifierDeclStatement	int ckn ;	815:2:17636:17643	1164301	1	True				
ANR	1164312	IdentifierDecl	ckn		1164301	0					
ANR	1164313	IdentifierDeclType	int		1164301	0					
ANR	1164314	Identifier	ckn		1164301	1					
ANR	1164315	IdentifierDeclStatement	int infinite = IS_REPEAT_INFINITE ( qn -> upper ) ;	816:2:17647:17691	1164301	2	True				
ANR	1164316	IdentifierDecl	infinite = IS_REPEAT_INFINITE ( qn -> upper )		1164301	0					
ANR	1164317	IdentifierDeclType	int		1164301	0					
ANR	1164318	Identifier	infinite		1164301	1					
ANR	1164319	AssignmentExpression	infinite = IS_REPEAT_INFINITE ( qn -> upper )		1164301	2		=			
ANR	1164320	Identifier	infinite		1164301	0					
ANR	1164321	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1164301	1					
ANR	1164322	Callee	IS_REPEAT_INFINITE		1164301	0					
ANR	1164323	Identifier	IS_REPEAT_INFINITE		1164301	0					
ANR	1164324	ArgumentList	qn -> upper		1164301	1					
ANR	1164325	Argument	qn -> upper		1164301	0					
ANR	1164326	PtrMemberAccess	qn -> upper		1164301	0					
ANR	1164327	Identifier	qn		1164301	0					
ANR	1164328	Identifier	upper		1164301	1					
ANR	1164329	IdentifierDeclStatement	int empty_info = qn -> target_empty_info ;	817:2:17695:17733	1164301	3	True				
ANR	1164330	IdentifierDecl	empty_info = qn -> target_empty_info		1164301	0					
ANR	1164331	IdentifierDeclType	int		1164301	0					
ANR	1164332	Identifier	empty_info		1164301	1					
ANR	1164333	AssignmentExpression	empty_info = qn -> target_empty_info		1164301	2		=			
ANR	1164334	Identifier	empty_info		1164301	0					
ANR	1164335	PtrMemberAccess	qn -> target_empty_info		1164301	1					
ANR	1164336	Identifier	qn		1164301	0					
ANR	1164337	Identifier	target_empty_info		1164301	1					
ANR	1164338	IdentifierDeclStatement	"int tlen = compile_length_tree ( qn -> target , reg ) ;"	818:2:17737:17784	1164301	4	True				
ANR	1164339	IdentifierDecl	"tlen = compile_length_tree ( qn -> target , reg )"		1164301	0					
ANR	1164340	IdentifierDeclType	int		1164301	0					
ANR	1164341	Identifier	tlen		1164301	1					
ANR	1164342	AssignmentExpression	"tlen = compile_length_tree ( qn -> target , reg )"		1164301	2		=			
ANR	1164343	Identifier	tlen		1164301	0					
ANR	1164344	CallExpression	"compile_length_tree ( qn -> target , reg )"		1164301	1					
ANR	1164345	Callee	compile_length_tree		1164301	0					
ANR	1164346	Identifier	compile_length_tree		1164301	0					
ANR	1164347	ArgumentList	qn -> target		1164301	1					
ANR	1164348	Argument	qn -> target		1164301	0					
ANR	1164349	PtrMemberAccess	qn -> target		1164301	0					
ANR	1164350	Identifier	qn		1164301	0					
ANR	1164351	Identifier	target		1164301	1					
ANR	1164352	Argument	reg		1164301	1					
ANR	1164353	Identifier	reg		1164301	0					
ANR	1164354	IfStatement	if ( tlen < 0 )		1164301	5					
ANR	1164355	Condition	tlen < 0	820:6:17793:17800	1164301	0	True				
ANR	1164356	RelationalExpression	tlen < 0		1164301	0		<			
ANR	1164357	Identifier	tlen		1164301	0					
ANR	1164358	PrimaryExpression	0		1164301	1					
ANR	1164359	ReturnStatement	return tlen ;	820:16:17803:17814	1164301	1	True				
ANR	1164360	Identifier	tlen		1164301	0					
ANR	1164361	ExpressionStatement	ckn = ( ( reg -> num_comb_exp_check > 0 ) ? qn -> comb_exp_check_num : 0 )	822:2:17819:17885	1164301	6	True				
ANR	1164362	AssignmentExpression	ckn = ( ( reg -> num_comb_exp_check > 0 ) ? qn -> comb_exp_check_num : 0 )		1164301	0		=			
ANR	1164363	Identifier	ckn		1164301	0					
ANR	1164364	ConditionalExpression	( reg -> num_comb_exp_check > 0 ) ? qn -> comb_exp_check_num : 0		1164301	1					
ANR	1164365	Condition	reg -> num_comb_exp_check > 0		1164301	0					
ANR	1164366	RelationalExpression	reg -> num_comb_exp_check > 0		1164301	0		>			
ANR	1164367	PtrMemberAccess	reg -> num_comb_exp_check		1164301	0					
ANR	1164368	Identifier	reg		1164301	0					
ANR	1164369	Identifier	num_comb_exp_check		1164301	1					
ANR	1164370	PrimaryExpression	0		1164301	1					
ANR	1164371	PtrMemberAccess	qn -> comb_exp_check_num		1164301	1					
ANR	1164372	Identifier	qn		1164301	0					
ANR	1164373	Identifier	comb_exp_check_num		1164301	1					
ANR	1164374	PrimaryExpression	0		1164301	2					
ANR	1164375	IfStatement	if ( is_anychar_star_quantifier ( qn ) )		1164301	7					
ANR	1164376	Condition	is_anychar_star_quantifier ( qn )	824:6:17894:17923	1164301	0	True				
ANR	1164377	CallExpression	is_anychar_star_quantifier ( qn )		1164301	0					
ANR	1164378	Callee	is_anychar_star_quantifier		1164301	0					
ANR	1164379	Identifier	is_anychar_star_quantifier		1164301	0					
ANR	1164380	ArgumentList	qn		1164301	1					
ANR	1164381	Argument	qn		1164301	0					
ANR	1164382	Identifier	qn		1164301	0					
ANR	1164383	CompoundStatement		12:38:312:312	1164301	1					
ANR	1164384	ExpressionStatement	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"	825:4:17932:17984	1164301	0	True				
ANR	1164385	AssignmentExpression	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"		1164301	0		=			
ANR	1164386	Identifier	r		1164301	0					
ANR	1164387	CallExpression	"compile_tree_n_times ( qn -> target , qn -> lower , reg )"		1164301	1					
ANR	1164388	Callee	compile_tree_n_times		1164301	0					
ANR	1164389	Identifier	compile_tree_n_times		1164301	0					
ANR	1164390	ArgumentList	qn -> target		1164301	1					
ANR	1164391	Argument	qn -> target		1164301	0					
ANR	1164392	PtrMemberAccess	qn -> target		1164301	0					
ANR	1164393	Identifier	qn		1164301	0					
ANR	1164394	Identifier	target		1164301	1					
ANR	1164395	Argument	qn -> lower		1164301	1					
ANR	1164396	PtrMemberAccess	qn -> lower		1164301	0					
ANR	1164397	Identifier	qn		1164301	0					
ANR	1164398	Identifier	lower		1164301	1					
ANR	1164399	Argument	reg		1164301	2					
ANR	1164400	Identifier	reg		1164301	0					
ANR	1164401	IfStatement	if ( r )		1164301	1					
ANR	1164402	Condition	r	826:8:17994:17994	1164301	0	True				
ANR	1164403	Identifier	r		1164301	0					
ANR	1164404	ReturnStatement	return r ;	826:11:17997:18005	1164301	1	True				
ANR	1164405	Identifier	r		1164301	0					
ANR	1164406	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) && ! CKN_ON )		1164301	2					
ANR	1164407	Condition	IS_NOT_NULL ( qn -> next_head_exact ) && ! CKN_ON	827:8:18015:18057	1164301	0	True				
ANR	1164408	AndExpression	IS_NOT_NULL ( qn -> next_head_exact ) && ! CKN_ON		1164301	0		&&			
ANR	1164409	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		1164301	0					
ANR	1164410	Callee	IS_NOT_NULL		1164301	0					
ANR	1164411	Identifier	IS_NOT_NULL		1164301	0					
ANR	1164412	ArgumentList	qn -> next_head_exact		1164301	1					
ANR	1164413	Argument	qn -> next_head_exact		1164301	0					
ANR	1164414	PtrMemberAccess	qn -> next_head_exact		1164301	0					
ANR	1164415	Identifier	qn		1164301	0					
ANR	1164416	Identifier	next_head_exact		1164301	1					
ANR	1164417	UnaryOperationExpression	! CKN_ON		1164301	1					
ANR	1164418	UnaryOperator	!		1164301	0					
ANR	1164419	Identifier	CKN_ON		1164301	1					
ANR	1164420	CompoundStatement		15:53:446:446	1164301	1					
ANR	1164421	IfStatement	if ( IS_MULTILINE ( reg -> options ) )		1164301	0					
ANR	1164422	Condition	IS_MULTILINE ( reg -> options )	828:10:18072:18097	1164301	0	True				
ANR	1164423	CallExpression	IS_MULTILINE ( reg -> options )		1164301	0					
ANR	1164424	Callee	IS_MULTILINE		1164301	0					
ANR	1164425	Identifier	IS_MULTILINE		1164301	0					
ANR	1164426	ArgumentList	reg -> options		1164301	1					
ANR	1164427	Argument	reg -> options		1164301	0					
ANR	1164428	PtrMemberAccess	reg -> options		1164301	0					
ANR	1164429	Identifier	reg		1164301	0					
ANR	1164430	Identifier	options		1164301	1					
ANR	1164431	ExpressionStatement	"r = add_opcode ( reg , OP_ANYCHAR_ML_STAR_PEEK_NEXT )"	829:1:18101:18150	1164301	1	True				
ANR	1164432	AssignmentExpression	"r = add_opcode ( reg , OP_ANYCHAR_ML_STAR_PEEK_NEXT )"		1164301	0		=			
ANR	1164433	Identifier	r		1164301	0					
ANR	1164434	CallExpression	"add_opcode ( reg , OP_ANYCHAR_ML_STAR_PEEK_NEXT )"		1164301	1					
ANR	1164435	Callee	add_opcode		1164301	0					
ANR	1164436	Identifier	add_opcode		1164301	0					
ANR	1164437	ArgumentList	reg		1164301	1					
ANR	1164438	Argument	reg		1164301	0					
ANR	1164439	Identifier	reg		1164301	0					
ANR	1164440	Argument	OP_ANYCHAR_ML_STAR_PEEK_NEXT		1164301	1					
ANR	1164441	Identifier	OP_ANYCHAR_ML_STAR_PEEK_NEXT		1164301	0					
ANR	1164442	ElseStatement	else		1164301	0					
ANR	1164443	ExpressionStatement	"r = add_opcode ( reg , OP_ANYCHAR_STAR_PEEK_NEXT )"	831:1:18164:18210	1164301	0	True				
ANR	1164444	AssignmentExpression	"r = add_opcode ( reg , OP_ANYCHAR_STAR_PEEK_NEXT )"		1164301	0		=			
ANR	1164445	Identifier	r		1164301	0					
ANR	1164446	CallExpression	"add_opcode ( reg , OP_ANYCHAR_STAR_PEEK_NEXT )"		1164301	1					
ANR	1164447	Callee	add_opcode		1164301	0					
ANR	1164448	Identifier	add_opcode		1164301	0					
ANR	1164449	ArgumentList	reg		1164301	1					
ANR	1164450	Argument	reg		1164301	0					
ANR	1164451	Identifier	reg		1164301	0					
ANR	1164452	Argument	OP_ANYCHAR_STAR_PEEK_NEXT		1164301	1					
ANR	1164453	Identifier	OP_ANYCHAR_STAR_PEEK_NEXT		1164301	0					
ANR	1164454	IfStatement	if ( r )		1164301	1					
ANR	1164455	Condition	r	832:10:18222:18222	1164301	0	True				
ANR	1164456	Identifier	r		1164301	0					
ANR	1164457	ReturnStatement	return r ;	832:13:18225:18233	1164301	1	True				
ANR	1164458	Identifier	r		1164301	0					
ANR	1164459	IfStatement	if ( CKN_ON )		1164301	2					
ANR	1164460	Condition	CKN_ON	833:10:18245:18250	1164301	0	True				
ANR	1164461	Identifier	CKN_ON		1164301	0					
ANR	1164462	CompoundStatement		21:18:639:639	1164301	1					
ANR	1164463	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	834:1:18256:18289	1164301	0	True				
ANR	1164464	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		1164301	0		=			
ANR	1164465	Identifier	r		1164301	0					
ANR	1164466	CallExpression	"add_state_check_num ( reg , ckn )"		1164301	1					
ANR	1164467	Callee	add_state_check_num		1164301	0					
ANR	1164468	Identifier	add_state_check_num		1164301	0					
ANR	1164469	ArgumentList	reg		1164301	1					
ANR	1164470	Argument	reg		1164301	0					
ANR	1164471	Identifier	reg		1164301	0					
ANR	1164472	Argument	ckn		1164301	1					
ANR	1164473	Identifier	ckn		1164301	0					
ANR	1164474	IfStatement	if ( r )		1164301	1					
ANR	1164475	Condition	r	835:5:18296:18296	1164301	0	True				
ANR	1164476	Identifier	r		1164301	0					
ANR	1164477	ReturnStatement	return r ;	835:8:18299:18307	1164301	1	True				
ANR	1164478	Identifier	r		1164301	0					
ANR	1164479	ReturnStatement	"return add_bytes ( reg , NSTR ( qn -> next_head_exact ) -> s , 1 ) ;"	838:6:18324:18378	1164301	3	True				
ANR	1164480	CallExpression	"add_bytes ( reg , NSTR ( qn -> next_head_exact ) -> s , 1 )"		1164301	0					
ANR	1164481	Callee	add_bytes		1164301	0					
ANR	1164482	Identifier	add_bytes		1164301	0					
ANR	1164483	ArgumentList	reg		1164301	1					
ANR	1164484	Argument	reg		1164301	0					
ANR	1164485	Identifier	reg		1164301	0					
ANR	1164486	Argument	NSTR ( qn -> next_head_exact ) -> s		1164301	1					
ANR	1164487	PtrMemberAccess	NSTR ( qn -> next_head_exact ) -> s		1164301	0					
ANR	1164488	CallExpression	NSTR ( qn -> next_head_exact )		1164301	0					
ANR	1164489	Callee	NSTR		1164301	0					
ANR	1164490	Identifier	NSTR		1164301	0					
ANR	1164491	ArgumentList	qn -> next_head_exact		1164301	1					
ANR	1164492	Argument	qn -> next_head_exact		1164301	0					
ANR	1164493	PtrMemberAccess	qn -> next_head_exact		1164301	0					
ANR	1164494	Identifier	qn		1164301	0					
ANR	1164495	Identifier	next_head_exact		1164301	1					
ANR	1164496	Identifier	s		1164301	1					
ANR	1164497	Argument	1		1164301	2					
ANR	1164498	PrimaryExpression	1		1164301	0					
ANR	1164499	ElseStatement	else		1164301	0					
ANR	1164500	CompoundStatement		28:9:781:781	1164301	0					
ANR	1164501	IfStatement	if ( IS_MULTILINE ( reg -> options ) )		1164301	0					
ANR	1164502	Condition	IS_MULTILINE ( reg -> options )	841:10:18407:18432	1164301	0	True				
ANR	1164503	CallExpression	IS_MULTILINE ( reg -> options )		1164301	0					
ANR	1164504	Callee	IS_MULTILINE		1164301	0					
ANR	1164505	Identifier	IS_MULTILINE		1164301	0					
ANR	1164506	ArgumentList	reg -> options		1164301	1					
ANR	1164507	Argument	reg -> options		1164301	0					
ANR	1164508	PtrMemberAccess	reg -> options		1164301	0					
ANR	1164509	Identifier	reg		1164301	0					
ANR	1164510	Identifier	options		1164301	1					
ANR	1164511	CompoundStatement		29:38:821:821	1164301	1					
ANR	1164512	ExpressionStatement	"r = add_opcode ( reg , ( CKN_ON ? OP_STATE_CHECK_ANYCHAR_ML_STAR : OP_ANYCHAR_ML_STAR ) )"	842:1:18438:18539	1164301	0	True				
ANR	1164513	AssignmentExpression	"r = add_opcode ( reg , ( CKN_ON ? OP_STATE_CHECK_ANYCHAR_ML_STAR : OP_ANYCHAR_ML_STAR ) )"		1164301	0		=			
ANR	1164514	Identifier	r		1164301	0					
ANR	1164515	CallExpression	"add_opcode ( reg , ( CKN_ON ? OP_STATE_CHECK_ANYCHAR_ML_STAR : OP_ANYCHAR_ML_STAR ) )"		1164301	1					
ANR	1164516	Callee	add_opcode		1164301	0					
ANR	1164517	Identifier	add_opcode		1164301	0					
ANR	1164518	ArgumentList	reg		1164301	1					
ANR	1164519	Argument	reg		1164301	0					
ANR	1164520	Identifier	reg		1164301	0					
ANR	1164521	Argument	CKN_ON ? OP_STATE_CHECK_ANYCHAR_ML_STAR : OP_ANYCHAR_ML_STAR		1164301	1					
ANR	1164522	ConditionalExpression	CKN_ON ? OP_STATE_CHECK_ANYCHAR_ML_STAR : OP_ANYCHAR_ML_STAR		1164301	0					
ANR	1164523	Condition	CKN_ON		1164301	0					
ANR	1164524	Identifier	CKN_ON		1164301	0					
ANR	1164525	Identifier	OP_STATE_CHECK_ANYCHAR_ML_STAR		1164301	1					
ANR	1164526	Identifier	OP_ANYCHAR_ML_STAR		1164301	2					
ANR	1164527	ElseStatement	else		1164301	0					
ANR	1164528	CompoundStatement		34:11:946:946	1164301	0					
ANR	1164529	ExpressionStatement	"r = add_opcode ( reg , ( CKN_ON ? OP_STATE_CHECK_ANYCHAR_STAR : OP_ANYCHAR_STAR ) )"	847:1:18563:18658	1164301	0	True				
ANR	1164530	AssignmentExpression	"r = add_opcode ( reg , ( CKN_ON ? OP_STATE_CHECK_ANYCHAR_STAR : OP_ANYCHAR_STAR ) )"		1164301	0		=			
ANR	1164531	Identifier	r		1164301	0					
ANR	1164532	CallExpression	"add_opcode ( reg , ( CKN_ON ? OP_STATE_CHECK_ANYCHAR_STAR : OP_ANYCHAR_STAR ) )"		1164301	1					
ANR	1164533	Callee	add_opcode		1164301	0					
ANR	1164534	Identifier	add_opcode		1164301	0					
ANR	1164535	ArgumentList	reg		1164301	1					
ANR	1164536	Argument	reg		1164301	0					
ANR	1164537	Identifier	reg		1164301	0					
ANR	1164538	Argument	CKN_ON ? OP_STATE_CHECK_ANYCHAR_STAR : OP_ANYCHAR_STAR		1164301	1					
ANR	1164539	ConditionalExpression	CKN_ON ? OP_STATE_CHECK_ANYCHAR_STAR : OP_ANYCHAR_STAR		1164301	0					
ANR	1164540	Condition	CKN_ON		1164301	0					
ANR	1164541	Identifier	CKN_ON		1164301	0					
ANR	1164542	Identifier	OP_STATE_CHECK_ANYCHAR_STAR		1164301	1					
ANR	1164543	Identifier	OP_ANYCHAR_STAR		1164301	2					
ANR	1164544	IfStatement	if ( r )		1164301	1					
ANR	1164545	Condition	r	851:10:18678:18678	1164301	0	True				
ANR	1164546	Identifier	r		1164301	0					
ANR	1164547	ReturnStatement	return r ;	851:13:18681:18689	1164301	1	True				
ANR	1164548	Identifier	r		1164301	0					
ANR	1164549	IfStatement	if ( CKN_ON )		1164301	2					
ANR	1164550	Condition	CKN_ON	852:10:18701:18706	1164301	0	True				
ANR	1164551	Identifier	CKN_ON		1164301	0					
ANR	1164552	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	853:1:18710:18743	1164301	1	True				
ANR	1164553	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		1164301	0		=			
ANR	1164554	Identifier	r		1164301	0					
ANR	1164555	CallExpression	"add_state_check_num ( reg , ckn )"		1164301	1					
ANR	1164556	Callee	add_state_check_num		1164301	0					
ANR	1164557	Identifier	add_state_check_num		1164301	0					
ANR	1164558	ArgumentList	reg		1164301	1					
ANR	1164559	Argument	reg		1164301	0					
ANR	1164560	Identifier	reg		1164301	0					
ANR	1164561	Argument	ckn		1164301	1					
ANR	1164562	Identifier	ckn		1164301	0					
ANR	1164563	ReturnStatement	return r ;	855:6:18752:18760	1164301	3	True				
ANR	1164564	Identifier	r		1164301	0					
ANR	1164565	IfStatement	if ( empty_info != 0 )		1164301	8					
ANR	1164566	Condition	empty_info != 0	859:6:18779:18793	1164301	0	True				
ANR	1164567	EqualityExpression	empty_info != 0		1164301	0		!=			
ANR	1164568	Identifier	empty_info		1164301	0					
ANR	1164569	PrimaryExpression	0		1164301	1					
ANR	1164570	ExpressionStatement	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )	860:4:18800:18869	1164301	1	True				
ANR	1164571	AssignmentExpression	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		1164301	0		=			
ANR	1164572	Identifier	mod_tlen		1164301	0					
ANR	1164573	AdditiveExpression	tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		1164301	1		+			
ANR	1164574	Identifier	tlen		1164301	0					
ANR	1164575	AdditiveExpression	SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END		1164301	1		+			
ANR	1164576	Identifier	SIZE_OP_NULL_CHECK_START		1164301	0					
ANR	1164577	Identifier	SIZE_OP_NULL_CHECK_END		1164301	1					
ANR	1164578	ElseStatement	else		1164301	0					
ANR	1164579	ExpressionStatement	mod_tlen = tlen	862:4:18882:18897	1164301	0	True				
ANR	1164580	AssignmentExpression	mod_tlen = tlen		1164301	0		=			
ANR	1164581	Identifier	mod_tlen		1164301	0					
ANR	1164582	Identifier	tlen		1164301	1					
ANR	1164583	IfStatement	if ( infinite && qn -> lower <= 1 )		1164301	9					
ANR	1164584	Condition	infinite && qn -> lower <= 1	864:6:18906:18931	1164301	0	True				
ANR	1164585	AndExpression	infinite && qn -> lower <= 1		1164301	0		&&			
ANR	1164586	Identifier	infinite		1164301	0					
ANR	1164587	RelationalExpression	qn -> lower <= 1		1164301	1		<=			
ANR	1164588	PtrMemberAccess	qn -> lower		1164301	0					
ANR	1164589	Identifier	qn		1164301	0					
ANR	1164590	Identifier	lower		1164301	1					
ANR	1164591	PrimaryExpression	1		1164301	1					
ANR	1164592	CompoundStatement		52:34:1320:1320	1164301	1					
ANR	1164593	IfStatement	if ( qn -> greedy )		1164301	0					
ANR	1164594	Condition	qn -> greedy	865:8:18944:18953	1164301	0	True				
ANR	1164595	PtrMemberAccess	qn -> greedy		1164301	0					
ANR	1164596	Identifier	qn		1164301	0					
ANR	1164597	Identifier	greedy		1164301	1					
ANR	1164598	CompoundStatement		53:20:1342:1342	1164301	1					
ANR	1164599	IfStatement	if ( qn -> lower == 1 )		1164301	0					
ANR	1164600	Condition	qn -> lower == 1	866:10:18968:18981	1164301	0	True				
ANR	1164601	EqualityExpression	qn -> lower == 1		1164301	0		==			
ANR	1164602	PtrMemberAccess	qn -> lower		1164301	0					
ANR	1164603	Identifier	qn		1164301	0					
ANR	1164604	Identifier	lower		1164301	1					
ANR	1164605	PrimaryExpression	1		1164301	1					
ANR	1164606	CompoundStatement		54:26:1370:1370	1164301	1					
ANR	1164607	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) )"	867:1:18987:19079	1164301	0	True				
ANR	1164608	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) )"		1164301	0		=			
ANR	1164609	Identifier	r		1164301	0					
ANR	1164610	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) )"		1164301	1					
ANR	1164611	Callee	add_opcode_rel_addr		1164301	0					
ANR	1164612	Identifier	add_opcode_rel_addr		1164301	0					
ANR	1164613	ArgumentList	reg		1164301	1					
ANR	1164614	Argument	reg		1164301	0					
ANR	1164615	Identifier	reg		1164301	0					
ANR	1164616	Argument	OP_JUMP		1164301	1					
ANR	1164617	Identifier	OP_JUMP		1164301	0					
ANR	1164618	Argument	CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH		1164301	2					
ANR	1164619	ConditionalExpression	CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH		1164301	0					
ANR	1164620	Condition	CKN_ON		1164301	0					
ANR	1164621	Identifier	CKN_ON		1164301	0					
ANR	1164622	Identifier	SIZE_OP_STATE_CHECK_PUSH		1164301	1					
ANR	1164623	Identifier	SIZE_OP_PUSH		1164301	2					
ANR	1164624	IfStatement	if ( r )		1164301	1					
ANR	1164625	Condition	r	869:5:19086:19086	1164301	0	True				
ANR	1164626	Identifier	r		1164301	0					
ANR	1164627	ReturnStatement	return r ;	869:8:19089:19097	1164301	1	True				
ANR	1164628	Identifier	r		1164301	0					
ANR	1164629	IfStatement	if ( CKN_ON )		1164301	1					
ANR	1164630	Condition	CKN_ON	872:10:19118:19123	1164301	0	True				
ANR	1164631	Identifier	CKN_ON		1164301	0					
ANR	1164632	CompoundStatement		60:18:1512:1512	1164301	1					
ANR	1164633	ExpressionStatement	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH )"	873:1:19129:19169	1164301	0	True				
ANR	1164634	AssignmentExpression	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH )"		1164301	0		=			
ANR	1164635	Identifier	r		1164301	0					
ANR	1164636	CallExpression	"add_opcode ( reg , OP_STATE_CHECK_PUSH )"		1164301	1					
ANR	1164637	Callee	add_opcode		1164301	0					
ANR	1164638	Identifier	add_opcode		1164301	0					
ANR	1164639	ArgumentList	reg		1164301	1					
ANR	1164640	Argument	reg		1164301	0					
ANR	1164641	Identifier	reg		1164301	0					
ANR	1164642	Argument	OP_STATE_CHECK_PUSH		1164301	1					
ANR	1164643	Identifier	OP_STATE_CHECK_PUSH		1164301	0					
ANR	1164644	IfStatement	if ( r )		1164301	1					
ANR	1164645	Condition	r	874:5:19176:19176	1164301	0	True				
ANR	1164646	Identifier	r		1164301	0					
ANR	1164647	ReturnStatement	return r ;	874:8:19179:19187	1164301	1	True				
ANR	1164648	Identifier	r		1164301	0					
ANR	1164649	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	875:1:19190:19223	1164301	2	True				
ANR	1164650	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		1164301	0		=			
ANR	1164651	Identifier	r		1164301	0					
ANR	1164652	CallExpression	"add_state_check_num ( reg , ckn )"		1164301	1					
ANR	1164653	Callee	add_state_check_num		1164301	0					
ANR	1164654	Identifier	add_state_check_num		1164301	0					
ANR	1164655	ArgumentList	reg		1164301	1					
ANR	1164656	Argument	reg		1164301	0					
ANR	1164657	Identifier	reg		1164301	0					
ANR	1164658	Argument	ckn		1164301	1					
ANR	1164659	Identifier	ckn		1164301	0					
ANR	1164660	IfStatement	if ( r )		1164301	3					
ANR	1164661	Condition	r	876:5:19230:19230	1164301	0	True				
ANR	1164662	Identifier	r		1164301	0					
ANR	1164663	ReturnStatement	return r ;	876:8:19233:19241	1164301	1	True				
ANR	1164664	Identifier	r		1164301	0					
ANR	1164665	ExpressionStatement	"r = add_rel_addr ( reg , mod_tlen + SIZE_OP_JUMP )"	877:1:19244:19290	1164301	4	True				
ANR	1164666	AssignmentExpression	"r = add_rel_addr ( reg , mod_tlen + SIZE_OP_JUMP )"		1164301	0		=			
ANR	1164667	Identifier	r		1164301	0					
ANR	1164668	CallExpression	"add_rel_addr ( reg , mod_tlen + SIZE_OP_JUMP )"		1164301	1					
ANR	1164669	Callee	add_rel_addr		1164301	0					
ANR	1164670	Identifier	add_rel_addr		1164301	0					
ANR	1164671	ArgumentList	reg		1164301	1					
ANR	1164672	Argument	reg		1164301	0					
ANR	1164673	Identifier	reg		1164301	0					
ANR	1164674	Argument	mod_tlen + SIZE_OP_JUMP		1164301	1					
ANR	1164675	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		1164301	0		+			
ANR	1164676	Identifier	mod_tlen		1164301	0					
ANR	1164677	Identifier	SIZE_OP_JUMP		1164301	1					
ANR	1164678	ElseStatement	else		1164301	0					
ANR	1164679	CompoundStatement		67:11:1697:1697	1164301	0					
ANR	1164680	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , mod_tlen + SIZE_OP_JUMP )"	880:1:19314:19376	1164301	0	True				
ANR	1164681	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , mod_tlen + SIZE_OP_JUMP )"		1164301	0		=			
ANR	1164682	Identifier	r		1164301	0					
ANR	1164683	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , mod_tlen + SIZE_OP_JUMP )"		1164301	1					
ANR	1164684	Callee	add_opcode_rel_addr		1164301	0					
ANR	1164685	Identifier	add_opcode_rel_addr		1164301	0					
ANR	1164686	ArgumentList	reg		1164301	1					
ANR	1164687	Argument	reg		1164301	0					
ANR	1164688	Identifier	reg		1164301	0					
ANR	1164689	Argument	OP_PUSH		1164301	1					
ANR	1164690	Identifier	OP_PUSH		1164301	0					
ANR	1164691	Argument	mod_tlen + SIZE_OP_JUMP		1164301	2					
ANR	1164692	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		1164301	0		+			
ANR	1164693	Identifier	mod_tlen		1164301	0					
ANR	1164694	Identifier	SIZE_OP_JUMP		1164301	1					
ANR	1164695	IfStatement	if ( r )		1164301	2					
ANR	1164696	Condition	r	882:10:19396:19396	1164301	0	True				
ANR	1164697	Identifier	r		1164301	0					
ANR	1164698	ReturnStatement	return r ;	882:13:19399:19407	1164301	1	True				
ANR	1164699	Identifier	r		1164301	0					
ANR	1164700	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	883:6:19415:19472	1164301	3	True				
ANR	1164701	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		1164301	0		=			
ANR	1164702	Identifier	r		1164301	0					
ANR	1164703	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		1164301	1					
ANR	1164704	Callee	compile_tree_empty_check		1164301	0					
ANR	1164705	Identifier	compile_tree_empty_check		1164301	0					
ANR	1164706	ArgumentList	qn -> target		1164301	1					
ANR	1164707	Argument	qn -> target		1164301	0					
ANR	1164708	PtrMemberAccess	qn -> target		1164301	0					
ANR	1164709	Identifier	qn		1164301	0					
ANR	1164710	Identifier	target		1164301	1					
ANR	1164711	Argument	reg		1164301	1					
ANR	1164712	Identifier	reg		1164301	0					
ANR	1164713	Argument	empty_info		1164301	2					
ANR	1164714	Identifier	empty_info		1164301	0					
ANR	1164715	IfStatement	if ( r )		1164301	4					
ANR	1164716	Condition	r	884:10:19484:19484	1164301	0	True				
ANR	1164717	Identifier	r		1164301	0					
ANR	1164718	ReturnStatement	return r ;	884:13:19487:19495	1164301	1	True				
ANR	1164719	Identifier	r		1164301	0					
ANR	1164720	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) ) )"	885:6:19503:19642	1164301	5	True				
ANR	1164721	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) ) )"		1164301	0		=			
ANR	1164722	Identifier	r		1164301	0					
ANR	1164723	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) ) )"		1164301	1					
ANR	1164724	Callee	add_opcode_rel_addr		1164301	0					
ANR	1164725	Identifier	add_opcode_rel_addr		1164301	0					
ANR	1164726	ArgumentList	reg		1164301	1					
ANR	1164727	Argument	reg		1164301	0					
ANR	1164728	Identifier	reg		1164301	0					
ANR	1164729	Argument	OP_JUMP		1164301	1					
ANR	1164730	Identifier	OP_JUMP		1164301	0					
ANR	1164731	Argument	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) )		1164301	2					
ANR	1164732	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH ) )		1164301	0					
ANR	1164733	UnaryOperator	-		1164301	0					
ANR	1164734	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH )		1164301	1		+			
ANR	1164735	Identifier	mod_tlen		1164301	0					
ANR	1164736	AdditiveExpression	( int ) SIZE_OP_JUMP + ( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH )		1164301	1		+			
ANR	1164737	CastExpression	( int ) SIZE_OP_JUMP		1164301	0					
ANR	1164738	CastTarget	int		1164301	0					
ANR	1164739	Identifier	SIZE_OP_JUMP		1164301	1					
ANR	1164740	CastExpression	( int ) ( CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH )		1164301	1					
ANR	1164741	CastTarget	int		1164301	0					
ANR	1164742	ConditionalExpression	CKN_ON ? SIZE_OP_STATE_CHECK_PUSH : SIZE_OP_PUSH		1164301	1					
ANR	1164743	Condition	CKN_ON		1164301	0					
ANR	1164744	Identifier	CKN_ON		1164301	0					
ANR	1164745	Identifier	SIZE_OP_STATE_CHECK_PUSH		1164301	1					
ANR	1164746	Identifier	SIZE_OP_PUSH		1164301	2					
ANR	1164747	ElseStatement	else		1164301	0					
ANR	1164748	CompoundStatement		77:9:2045:2045	1164301	0					
ANR	1164749	IfStatement	if ( qn -> lower == 0 )		1164301	0					
ANR	1164750	Condition	qn -> lower == 0	890:10:19671:19684	1164301	0	True				
ANR	1164751	EqualityExpression	qn -> lower == 0		1164301	0		==			
ANR	1164752	PtrMemberAccess	qn -> lower		1164301	0					
ANR	1164753	Identifier	qn		1164301	0					
ANR	1164754	Identifier	lower		1164301	1					
ANR	1164755	PrimaryExpression	0		1164301	1					
ANR	1164756	CompoundStatement		78:26:2073:2073	1164301	1					
ANR	1164757	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , mod_tlen )"	891:1:19690:19737	1164301	0	True				
ANR	1164758	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , mod_tlen )"		1164301	0		=			
ANR	1164759	Identifier	r		1164301	0					
ANR	1164760	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , mod_tlen )"		1164301	1					
ANR	1164761	Callee	add_opcode_rel_addr		1164301	0					
ANR	1164762	Identifier	add_opcode_rel_addr		1164301	0					
ANR	1164763	ArgumentList	reg		1164301	1					
ANR	1164764	Argument	reg		1164301	0					
ANR	1164765	Identifier	reg		1164301	0					
ANR	1164766	Argument	OP_JUMP		1164301	1					
ANR	1164767	Identifier	OP_JUMP		1164301	0					
ANR	1164768	Argument	mod_tlen		1164301	2					
ANR	1164769	Identifier	mod_tlen		1164301	0					
ANR	1164770	IfStatement	if ( r )		1164301	1					
ANR	1164771	Condition	r	892:5:19744:19744	1164301	0	True				
ANR	1164772	Identifier	r		1164301	0					
ANR	1164773	ReturnStatement	return r ;	892:8:19747:19755	1164301	1	True				
ANR	1164774	Identifier	r		1164301	0					
ANR	1164775	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	894:6:19771:19828	1164301	1	True				
ANR	1164776	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		1164301	0		=			
ANR	1164777	Identifier	r		1164301	0					
ANR	1164778	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		1164301	1					
ANR	1164779	Callee	compile_tree_empty_check		1164301	0					
ANR	1164780	Identifier	compile_tree_empty_check		1164301	0					
ANR	1164781	ArgumentList	qn -> target		1164301	1					
ANR	1164782	Argument	qn -> target		1164301	0					
ANR	1164783	PtrMemberAccess	qn -> target		1164301	0					
ANR	1164784	Identifier	qn		1164301	0					
ANR	1164785	Identifier	target		1164301	1					
ANR	1164786	Argument	reg		1164301	1					
ANR	1164787	Identifier	reg		1164301	0					
ANR	1164788	Argument	empty_info		1164301	2					
ANR	1164789	Identifier	empty_info		1164301	0					
ANR	1164790	IfStatement	if ( r )		1164301	2					
ANR	1164791	Condition	r	895:10:19840:19840	1164301	0	True				
ANR	1164792	Identifier	r		1164301	0					
ANR	1164793	ReturnStatement	return r ;	895:13:19843:19851	1164301	1	True				
ANR	1164794	Identifier	r		1164301	0					
ANR	1164795	IfStatement	if ( CKN_ON )		1164301	3					
ANR	1164796	Condition	CKN_ON	896:10:19863:19868	1164301	0	True				
ANR	1164797	Identifier	CKN_ON		1164301	0					
ANR	1164798	CompoundStatement		84:18:2257:2257	1164301	1					
ANR	1164799	ExpressionStatement	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH_OR_JUMP )"	897:1:19874:19922	1164301	0	True				
ANR	1164800	AssignmentExpression	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH_OR_JUMP )"		1164301	0		=			
ANR	1164801	Identifier	r		1164301	0					
ANR	1164802	CallExpression	"add_opcode ( reg , OP_STATE_CHECK_PUSH_OR_JUMP )"		1164301	1					
ANR	1164803	Callee	add_opcode		1164301	0					
ANR	1164804	Identifier	add_opcode		1164301	0					
ANR	1164805	ArgumentList	reg		1164301	1					
ANR	1164806	Argument	reg		1164301	0					
ANR	1164807	Identifier	reg		1164301	0					
ANR	1164808	Argument	OP_STATE_CHECK_PUSH_OR_JUMP		1164301	1					
ANR	1164809	Identifier	OP_STATE_CHECK_PUSH_OR_JUMP		1164301	0					
ANR	1164810	IfStatement	if ( r )		1164301	1					
ANR	1164811	Condition	r	898:5:19929:19929	1164301	0	True				
ANR	1164812	Identifier	r		1164301	0					
ANR	1164813	ReturnStatement	return r ;	898:8:19932:19940	1164301	1	True				
ANR	1164814	Identifier	r		1164301	0					
ANR	1164815	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	899:1:19943:19976	1164301	2	True				
ANR	1164816	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		1164301	0		=			
ANR	1164817	Identifier	r		1164301	0					
ANR	1164818	CallExpression	"add_state_check_num ( reg , ckn )"		1164301	1					
ANR	1164819	Callee	add_state_check_num		1164301	0					
ANR	1164820	Identifier	add_state_check_num		1164301	0					
ANR	1164821	ArgumentList	reg		1164301	1					
ANR	1164822	Argument	reg		1164301	0					
ANR	1164823	Identifier	reg		1164301	0					
ANR	1164824	Argument	ckn		1164301	1					
ANR	1164825	Identifier	ckn		1164301	0					
ANR	1164826	IfStatement	if ( r )		1164301	3					
ANR	1164827	Condition	r	900:5:19983:19983	1164301	0	True				
ANR	1164828	Identifier	r		1164301	0					
ANR	1164829	ReturnStatement	return r ;	900:8:19986:19994	1164301	1	True				
ANR	1164830	Identifier	r		1164301	0					
ANR	1164831	ExpressionStatement	"r = add_rel_addr ( reg , - ( mod_tlen + ( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP ) )"	901:1:19997:20075	1164301	4	True				
ANR	1164832	AssignmentExpression	"r = add_rel_addr ( reg , - ( mod_tlen + ( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP ) )"		1164301	0		=			
ANR	1164833	Identifier	r		1164301	0					
ANR	1164834	CallExpression	"add_rel_addr ( reg , - ( mod_tlen + ( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP ) )"		1164301	1					
ANR	1164835	Callee	add_rel_addr		1164301	0					
ANR	1164836	Identifier	add_rel_addr		1164301	0					
ANR	1164837	ArgumentList	reg		1164301	1					
ANR	1164838	Argument	reg		1164301	0					
ANR	1164839	Identifier	reg		1164301	0					
ANR	1164840	Argument	- ( mod_tlen + ( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP )		1164301	1					
ANR	1164841	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP )		1164301	0					
ANR	1164842	UnaryOperator	-		1164301	0					
ANR	1164843	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP		1164301	1		+			
ANR	1164844	Identifier	mod_tlen		1164301	0					
ANR	1164845	CastExpression	( int ) SIZE_OP_STATE_CHECK_PUSH_OR_JUMP		1164301	1					
ANR	1164846	CastTarget	int		1164301	0					
ANR	1164847	Identifier	SIZE_OP_STATE_CHECK_PUSH_OR_JUMP		1164301	1					
ANR	1164848	ElseStatement	else		1164301	0					
ANR	1164849	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , - ( mod_tlen + ( int ) SIZE_OP_PUSH ) )"	905:1:20097:20168	1164301	0	True				
ANR	1164850	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , - ( mod_tlen + ( int ) SIZE_OP_PUSH ) )"		1164301	0		=			
ANR	1164851	Identifier	r		1164301	0					
ANR	1164852	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , - ( mod_tlen + ( int ) SIZE_OP_PUSH ) )"		1164301	1					
ANR	1164853	Callee	add_opcode_rel_addr		1164301	0					
ANR	1164854	Identifier	add_opcode_rel_addr		1164301	0					
ANR	1164855	ArgumentList	reg		1164301	1					
ANR	1164856	Argument	reg		1164301	0					
ANR	1164857	Identifier	reg		1164301	0					
ANR	1164858	Argument	OP_PUSH		1164301	1					
ANR	1164859	Identifier	OP_PUSH		1164301	0					
ANR	1164860	Argument	- ( mod_tlen + ( int ) SIZE_OP_PUSH )		1164301	2					
ANR	1164861	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_PUSH )		1164301	0					
ANR	1164862	UnaryOperator	-		1164301	0					
ANR	1164863	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_PUSH		1164301	1		+			
ANR	1164864	Identifier	mod_tlen		1164301	0					
ANR	1164865	CastExpression	( int ) SIZE_OP_PUSH		1164301	1					
ANR	1164866	CastTarget	int		1164301	0					
ANR	1164867	Identifier	SIZE_OP_PUSH		1164301	1					
ANR	1164868	ElseStatement	else		1164301	0					
ANR	1164869	IfStatement	if ( qn -> upper == 0 )		1164301	0					
ANR	1164870	Condition	qn -> upper == 0	908:11:20191:20204	1164301	0	True				
ANR	1164871	EqualityExpression	qn -> upper == 0		1164301	0		==			
ANR	1164872	PtrMemberAccess	qn -> upper		1164301	0					
ANR	1164873	Identifier	qn		1164301	0					
ANR	1164874	Identifier	upper		1164301	1					
ANR	1164875	PrimaryExpression	0		1164301	1					
ANR	1164876	CompoundStatement		96:27:2593:2593	1164301	1					
ANR	1164877	IfStatement	if ( qn -> is_refered != 0 )		1164301	0					
ANR	1164878	Condition	qn -> is_refered != 0	909:8:20217:20235	1164301	0	True				
ANR	1164879	EqualityExpression	qn -> is_refered != 0		1164301	0		!=			
ANR	1164880	PtrMemberAccess	qn -> is_refered		1164301	0					
ANR	1164881	Identifier	qn		1164301	0					
ANR	1164882	Identifier	is_refered		1164301	1					
ANR	1164883	PrimaryExpression	0		1164301	1					
ANR	1164884	CompoundStatement		97:29:2624:2624	1164301	1					
ANR	1164885	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"	910:6:20266:20309	1164301	0	True				
ANR	1164886	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		1164301	0		=			
ANR	1164887	Identifier	r		1164301	0					
ANR	1164888	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		1164301	1					
ANR	1164889	Callee	add_opcode_rel_addr		1164301	0					
ANR	1164890	Identifier	add_opcode_rel_addr		1164301	0					
ANR	1164891	ArgumentList	reg		1164301	1					
ANR	1164892	Argument	reg		1164301	0					
ANR	1164893	Identifier	reg		1164301	0					
ANR	1164894	Argument	OP_JUMP		1164301	1					
ANR	1164895	Identifier	OP_JUMP		1164301	0					
ANR	1164896	Argument	tlen		1164301	2					
ANR	1164897	Identifier	tlen		1164301	0					
ANR	1164898	IfStatement	if ( r )		1164301	1					
ANR	1164899	Condition	r	911:10:20321:20321	1164301	0	True				
ANR	1164900	Identifier	r		1164301	0					
ANR	1164901	ReturnStatement	return r ;	911:13:20324:20332	1164301	1	True				
ANR	1164902	Identifier	r		1164301	0					
ANR	1164903	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	912:6:20340:20373	1164301	2	True				
ANR	1164904	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		1164301	0		=			
ANR	1164905	Identifier	r		1164301	0					
ANR	1164906	CallExpression	"compile_tree ( qn -> target , reg )"		1164301	1					
ANR	1164907	Callee	compile_tree		1164301	0					
ANR	1164908	Identifier	compile_tree		1164301	0					
ANR	1164909	ArgumentList	qn -> target		1164301	1					
ANR	1164910	Argument	qn -> target		1164301	0					
ANR	1164911	PtrMemberAccess	qn -> target		1164301	0					
ANR	1164912	Identifier	qn		1164301	0					
ANR	1164913	Identifier	target		1164301	1					
ANR	1164914	Argument	reg		1164301	1					
ANR	1164915	Identifier	reg		1164301	0					
ANR	1164916	ElseStatement	else		1164301	0					
ANR	1164917	ExpressionStatement	r = 0	915:6:20396:20401	1164301	0	True				
ANR	1164918	AssignmentExpression	r = 0		1164301	0		=			
ANR	1164919	Identifier	r		1164301	0					
ANR	1164920	PrimaryExpression	0		1164301	1					
ANR	1164921	ElseStatement	else		1164301	0					
ANR	1164922	IfStatement	if ( qn -> upper == 1 && qn -> greedy )		1164301	0					
ANR	1164923	Condition	qn -> upper == 1 && qn -> greedy	917:11:20418:20445	1164301	0	True				
ANR	1164924	AndExpression	qn -> upper == 1 && qn -> greedy		1164301	0		&&			
ANR	1164925	EqualityExpression	qn -> upper == 1		1164301	0		==			
ANR	1164926	PtrMemberAccess	qn -> upper		1164301	0					
ANR	1164927	Identifier	qn		1164301	0					
ANR	1164928	Identifier	upper		1164301	1					
ANR	1164929	PrimaryExpression	1		1164301	1					
ANR	1164930	PtrMemberAccess	qn -> greedy		1164301	1					
ANR	1164931	Identifier	qn		1164301	0					
ANR	1164932	Identifier	greedy		1164301	1					
ANR	1164933	CompoundStatement		105:41:2834:2834	1164301	1					
ANR	1164934	IfStatement	if ( qn -> lower == 0 )		1164301	0					
ANR	1164935	Condition	qn -> lower == 0	918:8:20458:20471	1164301	0	True				
ANR	1164936	EqualityExpression	qn -> lower == 0		1164301	0		==			
ANR	1164937	PtrMemberAccess	qn -> lower		1164301	0					
ANR	1164938	Identifier	qn		1164301	0					
ANR	1164939	Identifier	lower		1164301	1					
ANR	1164940	PrimaryExpression	0		1164301	1					
ANR	1164941	CompoundStatement		106:24:2860:2860	1164301	1					
ANR	1164942	IfStatement	if ( CKN_ON )		1164301	0					
ANR	1164943	Condition	CKN_ON	919:10:20486:20491	1164301	0	True				
ANR	1164944	Identifier	CKN_ON		1164301	0					
ANR	1164945	CompoundStatement		107:18:2880:2880	1164301	1					
ANR	1164946	ExpressionStatement	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH )"	920:1:20497:20537	1164301	0	True				
ANR	1164947	AssignmentExpression	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH )"		1164301	0		=			
ANR	1164948	Identifier	r		1164301	0					
ANR	1164949	CallExpression	"add_opcode ( reg , OP_STATE_CHECK_PUSH )"		1164301	1					
ANR	1164950	Callee	add_opcode		1164301	0					
ANR	1164951	Identifier	add_opcode		1164301	0					
ANR	1164952	ArgumentList	reg		1164301	1					
ANR	1164953	Argument	reg		1164301	0					
ANR	1164954	Identifier	reg		1164301	0					
ANR	1164955	Argument	OP_STATE_CHECK_PUSH		1164301	1					
ANR	1164956	Identifier	OP_STATE_CHECK_PUSH		1164301	0					
ANR	1164957	IfStatement	if ( r )		1164301	1					
ANR	1164958	Condition	r	921:5:20544:20544	1164301	0	True				
ANR	1164959	Identifier	r		1164301	0					
ANR	1164960	ReturnStatement	return r ;	921:8:20547:20555	1164301	1	True				
ANR	1164961	Identifier	r		1164301	0					
ANR	1164962	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	922:1:20558:20591	1164301	2	True				
ANR	1164963	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		1164301	0		=			
ANR	1164964	Identifier	r		1164301	0					
ANR	1164965	CallExpression	"add_state_check_num ( reg , ckn )"		1164301	1					
ANR	1164966	Callee	add_state_check_num		1164301	0					
ANR	1164967	Identifier	add_state_check_num		1164301	0					
ANR	1164968	ArgumentList	reg		1164301	1					
ANR	1164969	Argument	reg		1164301	0					
ANR	1164970	Identifier	reg		1164301	0					
ANR	1164971	Argument	ckn		1164301	1					
ANR	1164972	Identifier	ckn		1164301	0					
ANR	1164973	IfStatement	if ( r )		1164301	3					
ANR	1164974	Condition	r	923:5:20598:20598	1164301	0	True				
ANR	1164975	Identifier	r		1164301	0					
ANR	1164976	ReturnStatement	return r ;	923:8:20601:20609	1164301	1	True				
ANR	1164977	Identifier	r		1164301	0					
ANR	1164978	ExpressionStatement	"r = add_rel_addr ( reg , tlen )"	924:1:20612:20639	1164301	4	True				
ANR	1164979	AssignmentExpression	"r = add_rel_addr ( reg , tlen )"		1164301	0		=			
ANR	1164980	Identifier	r		1164301	0					
ANR	1164981	CallExpression	"add_rel_addr ( reg , tlen )"		1164301	1					
ANR	1164982	Callee	add_rel_addr		1164301	0					
ANR	1164983	Identifier	add_rel_addr		1164301	0					
ANR	1164984	ArgumentList	reg		1164301	1					
ANR	1164985	Argument	reg		1164301	0					
ANR	1164986	Identifier	reg		1164301	0					
ANR	1164987	Argument	tlen		1164301	1					
ANR	1164988	Identifier	tlen		1164301	0					
ANR	1164989	ElseStatement	else		1164301	0					
ANR	1164990	CompoundStatement		114:11:3046:3046	1164301	0					
ANR	1164991	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , tlen )"	927:1:20663:20706	1164301	0	True				
ANR	1164992	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , tlen )"		1164301	0		=			
ANR	1164993	Identifier	r		1164301	0					
ANR	1164994	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , tlen )"		1164301	1					
ANR	1164995	Callee	add_opcode_rel_addr		1164301	0					
ANR	1164996	Identifier	add_opcode_rel_addr		1164301	0					
ANR	1164997	ArgumentList	reg		1164301	1					
ANR	1164998	Argument	reg		1164301	0					
ANR	1164999	Identifier	reg		1164301	0					
ANR	1165000	Argument	OP_PUSH		1164301	1					
ANR	1165001	Identifier	OP_PUSH		1164301	0					
ANR	1165002	Argument	tlen		1164301	2					
ANR	1165003	Identifier	tlen		1164301	0					
ANR	1165004	IfStatement	if ( r )		1164301	1					
ANR	1165005	Condition	r	929:10:20726:20726	1164301	0	True				
ANR	1165006	Identifier	r		1164301	0					
ANR	1165007	ReturnStatement	return r ;	929:13:20729:20737	1164301	1	True				
ANR	1165008	Identifier	r		1164301	0					
ANR	1165009	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	932:4:20750:20783	1164301	1	True				
ANR	1165010	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		1164301	0		=			
ANR	1165011	Identifier	r		1164301	0					
ANR	1165012	CallExpression	"compile_tree ( qn -> target , reg )"		1164301	1					
ANR	1165013	Callee	compile_tree		1164301	0					
ANR	1165014	Identifier	compile_tree		1164301	0					
ANR	1165015	ArgumentList	qn -> target		1164301	1					
ANR	1165016	Argument	qn -> target		1164301	0					
ANR	1165017	PtrMemberAccess	qn -> target		1164301	0					
ANR	1165018	Identifier	qn		1164301	0					
ANR	1165019	Identifier	target		1164301	1					
ANR	1165020	Argument	reg		1164301	1					
ANR	1165021	Identifier	reg		1164301	0					
ANR	1165022	ElseStatement	else		1164301	0					
ANR	1165023	IfStatement	if ( ! qn -> greedy && qn -> upper == 1 && qn -> lower == 0 )		1164301	0					
ANR	1165024	Condition	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0	934:11:20800:20846	1164301	0	True				
ANR	1165025	AndExpression	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0		1164301	0		&&			
ANR	1165026	UnaryOperationExpression	! qn -> greedy		1164301	0					
ANR	1165027	UnaryOperator	!		1164301	0					
ANR	1165028	PtrMemberAccess	qn -> greedy		1164301	1					
ANR	1165029	Identifier	qn		1164301	0					
ANR	1165030	Identifier	greedy		1164301	1					
ANR	1165031	AndExpression	qn -> upper == 1 && qn -> lower == 0		1164301	1		&&			
ANR	1165032	EqualityExpression	qn -> upper == 1		1164301	0		==			
ANR	1165033	PtrMemberAccess	qn -> upper		1164301	0					
ANR	1165034	Identifier	qn		1164301	0					
ANR	1165035	Identifier	upper		1164301	1					
ANR	1165036	PrimaryExpression	1		1164301	1					
ANR	1165037	EqualityExpression	qn -> lower == 0		1164301	1		==			
ANR	1165038	PtrMemberAccess	qn -> lower		1164301	0					
ANR	1165039	Identifier	qn		1164301	0					
ANR	1165040	Identifier	lower		1164301	1					
ANR	1165041	PrimaryExpression	0		1164301	1					
ANR	1165042	CompoundStatement		122:60:3235:3235	1164301	1					
ANR	1165043	IfStatement	if ( CKN_ON )		1164301	0					
ANR	1165044	Condition	CKN_ON	935:8:20870:20875	1164301	0	True				
ANR	1165045	Identifier	CKN_ON		1164301	0					
ANR	1165046	CompoundStatement		123:16:3264:3264	1164301	1					
ANR	1165047	ExpressionStatement	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH )"	936:6:20886:20926	1164301	0	True				
ANR	1165048	AssignmentExpression	"r = add_opcode ( reg , OP_STATE_CHECK_PUSH )"		1164301	0		=			
ANR	1165049	Identifier	r		1164301	0					
ANR	1165050	CallExpression	"add_opcode ( reg , OP_STATE_CHECK_PUSH )"		1164301	1					
ANR	1165051	Callee	add_opcode		1164301	0					
ANR	1165052	Identifier	add_opcode		1164301	0					
ANR	1165053	ArgumentList	reg		1164301	1					
ANR	1165054	Argument	reg		1164301	0					
ANR	1165055	Identifier	reg		1164301	0					
ANR	1165056	Argument	OP_STATE_CHECK_PUSH		1164301	1					
ANR	1165057	Identifier	OP_STATE_CHECK_PUSH		1164301	0					
ANR	1165058	IfStatement	if ( r )		1164301	1					
ANR	1165059	Condition	r	937:10:20938:20938	1164301	0	True				
ANR	1165060	Identifier	r		1164301	0					
ANR	1165061	ReturnStatement	return r ;	937:13:20941:20949	1164301	1	True				
ANR	1165062	Identifier	r		1164301	0					
ANR	1165063	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	938:6:20957:20990	1164301	2	True				
ANR	1165064	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		1164301	0		=			
ANR	1165065	Identifier	r		1164301	0					
ANR	1165066	CallExpression	"add_state_check_num ( reg , ckn )"		1164301	1					
ANR	1165067	Callee	add_state_check_num		1164301	0					
ANR	1165068	Identifier	add_state_check_num		1164301	0					
ANR	1165069	ArgumentList	reg		1164301	1					
ANR	1165070	Argument	reg		1164301	0					
ANR	1165071	Identifier	reg		1164301	0					
ANR	1165072	Argument	ckn		1164301	1					
ANR	1165073	Identifier	ckn		1164301	0					
ANR	1165074	IfStatement	if ( r )		1164301	3					
ANR	1165075	Condition	r	939:10:21002:21002	1164301	0	True				
ANR	1165076	Identifier	r		1164301	0					
ANR	1165077	ReturnStatement	return r ;	939:13:21005:21013	1164301	1	True				
ANR	1165078	Identifier	r		1164301	0					
ANR	1165079	ExpressionStatement	"r = add_rel_addr ( reg , SIZE_OP_JUMP )"	940:6:21021:21056	1164301	4	True				
ANR	1165080	AssignmentExpression	"r = add_rel_addr ( reg , SIZE_OP_JUMP )"		1164301	0		=			
ANR	1165081	Identifier	r		1164301	0					
ANR	1165082	CallExpression	"add_rel_addr ( reg , SIZE_OP_JUMP )"		1164301	1					
ANR	1165083	Callee	add_rel_addr		1164301	0					
ANR	1165084	Identifier	add_rel_addr		1164301	0					
ANR	1165085	ArgumentList	reg		1164301	1					
ANR	1165086	Argument	reg		1164301	0					
ANR	1165087	Identifier	reg		1164301	0					
ANR	1165088	Argument	SIZE_OP_JUMP		1164301	1					
ANR	1165089	Identifier	SIZE_OP_JUMP		1164301	0					
ANR	1165090	ElseStatement	else		1164301	0					
ANR	1165091	CompoundStatement		130:9:3459:3459	1164301	0					
ANR	1165092	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , SIZE_OP_JUMP )"	943:6:21081:21132	1164301	0	True				
ANR	1165093	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , SIZE_OP_JUMP )"		1164301	0		=			
ANR	1165094	Identifier	r		1164301	0					
ANR	1165095	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , SIZE_OP_JUMP )"		1164301	1					
ANR	1165096	Callee	add_opcode_rel_addr		1164301	0					
ANR	1165097	Identifier	add_opcode_rel_addr		1164301	0					
ANR	1165098	ArgumentList	reg		1164301	1					
ANR	1165099	Argument	reg		1164301	0					
ANR	1165100	Identifier	reg		1164301	0					
ANR	1165101	Argument	OP_PUSH		1164301	1					
ANR	1165102	Identifier	OP_PUSH		1164301	0					
ANR	1165103	Argument	SIZE_OP_JUMP		1164301	2					
ANR	1165104	Identifier	SIZE_OP_JUMP		1164301	0					
ANR	1165105	IfStatement	if ( r )		1164301	1					
ANR	1165106	Condition	r	946:8:21149:21149	1164301	0	True				
ANR	1165107	Identifier	r		1164301	0					
ANR	1165108	ReturnStatement	return r ;	946:11:21152:21160	1164301	1	True				
ANR	1165109	Identifier	r		1164301	0					
ANR	1165110	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"	947:4:21166:21209	1164301	2	True				
ANR	1165111	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		1164301	0		=			
ANR	1165112	Identifier	r		1164301	0					
ANR	1165113	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		1164301	1					
ANR	1165114	Callee	add_opcode_rel_addr		1164301	0					
ANR	1165115	Identifier	add_opcode_rel_addr		1164301	0					
ANR	1165116	ArgumentList	reg		1164301	1					
ANR	1165117	Argument	reg		1164301	0					
ANR	1165118	Identifier	reg		1164301	0					
ANR	1165119	Argument	OP_JUMP		1164301	1					
ANR	1165120	Identifier	OP_JUMP		1164301	0					
ANR	1165121	Argument	tlen		1164301	2					
ANR	1165122	Identifier	tlen		1164301	0					
ANR	1165123	IfStatement	if ( r )		1164301	3					
ANR	1165124	Condition	r	948:8:21219:21219	1164301	0	True				
ANR	1165125	Identifier	r		1164301	0					
ANR	1165126	ReturnStatement	return r ;	948:11:21222:21230	1164301	1	True				
ANR	1165127	Identifier	r		1164301	0					
ANR	1165128	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	949:4:21236:21269	1164301	4	True				
ANR	1165129	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		1164301	0		=			
ANR	1165130	Identifier	r		1164301	0					
ANR	1165131	CallExpression	"compile_tree ( qn -> target , reg )"		1164301	1					
ANR	1165132	Callee	compile_tree		1164301	0					
ANR	1165133	Identifier	compile_tree		1164301	0					
ANR	1165134	ArgumentList	qn -> target		1164301	1					
ANR	1165135	Argument	qn -> target		1164301	0					
ANR	1165136	PtrMemberAccess	qn -> target		1164301	0					
ANR	1165137	Identifier	qn		1164301	0					
ANR	1165138	Identifier	target		1164301	1					
ANR	1165139	Argument	reg		1164301	1					
ANR	1165140	Identifier	reg		1164301	0					
ANR	1165141	ElseStatement	else		1164301	0					
ANR	1165142	CompoundStatement		139:7:3668:3668	1164301	0					
ANR	1165143	ExpressionStatement	"r = compile_range_repeat_node ( qn , mod_tlen , empty_info , reg )"	952:4:21288:21348	1164301	0	True				
ANR	1165144	AssignmentExpression	"r = compile_range_repeat_node ( qn , mod_tlen , empty_info , reg )"		1164301	0		=			
ANR	1165145	Identifier	r		1164301	0					
ANR	1165146	CallExpression	"compile_range_repeat_node ( qn , mod_tlen , empty_info , reg )"		1164301	1					
ANR	1165147	Callee	compile_range_repeat_node		1164301	0					
ANR	1165148	Identifier	compile_range_repeat_node		1164301	0					
ANR	1165149	ArgumentList	qn		1164301	1					
ANR	1165150	Argument	qn		1164301	0					
ANR	1165151	Identifier	qn		1164301	0					
ANR	1165152	Argument	mod_tlen		1164301	1					
ANR	1165153	Identifier	mod_tlen		1164301	0					
ANR	1165154	Argument	empty_info		1164301	2					
ANR	1165155	Identifier	empty_info		1164301	0					
ANR	1165156	Argument	reg		1164301	3					
ANR	1165157	Identifier	reg		1164301	0					
ANR	1165158	IfStatement	if ( CKN_ON )		1164301	1					
ANR	1165159	Condition	CKN_ON	953:8:21358:21363	1164301	0	True				
ANR	1165160	Identifier	CKN_ON		1164301	0					
ANR	1165161	CompoundStatement		141:16:3752:3752	1164301	1					
ANR	1165162	IfStatement	if ( r )		1164301	0					
ANR	1165163	Condition	r	954:10:21378:21378	1164301	0	True				
ANR	1165164	Identifier	r		1164301	0					
ANR	1165165	ReturnStatement	return r ;	954:13:21381:21389	1164301	1	True				
ANR	1165166	Identifier	r		1164301	0					
ANR	1165167	ExpressionStatement	"r = add_opcode ( reg , OP_STATE_CHECK )"	955:6:21397:21432	1164301	1	True				
ANR	1165168	AssignmentExpression	"r = add_opcode ( reg , OP_STATE_CHECK )"		1164301	0		=			
ANR	1165169	Identifier	r		1164301	0					
ANR	1165170	CallExpression	"add_opcode ( reg , OP_STATE_CHECK )"		1164301	1					
ANR	1165171	Callee	add_opcode		1164301	0					
ANR	1165172	Identifier	add_opcode		1164301	0					
ANR	1165173	ArgumentList	reg		1164301	1					
ANR	1165174	Argument	reg		1164301	0					
ANR	1165175	Identifier	reg		1164301	0					
ANR	1165176	Argument	OP_STATE_CHECK		1164301	1					
ANR	1165177	Identifier	OP_STATE_CHECK		1164301	0					
ANR	1165178	IfStatement	if ( r )		1164301	2					
ANR	1165179	Condition	r	956:10:21444:21444	1164301	0	True				
ANR	1165180	Identifier	r		1164301	0					
ANR	1165181	ReturnStatement	return r ;	956:13:21447:21455	1164301	1	True				
ANR	1165182	Identifier	r		1164301	0					
ANR	1165183	ExpressionStatement	"r = add_state_check_num ( reg , ckn )"	957:6:21463:21496	1164301	3	True				
ANR	1165184	AssignmentExpression	"r = add_state_check_num ( reg , ckn )"		1164301	0		=			
ANR	1165185	Identifier	r		1164301	0					
ANR	1165186	CallExpression	"add_state_check_num ( reg , ckn )"		1164301	1					
ANR	1165187	Callee	add_state_check_num		1164301	0					
ANR	1165188	Identifier	add_state_check_num		1164301	0					
ANR	1165189	ArgumentList	reg		1164301	1					
ANR	1165190	Argument	reg		1164301	0					
ANR	1165191	Identifier	reg		1164301	0					
ANR	1165192	Argument	ckn		1164301	1					
ANR	1165193	Identifier	ckn		1164301	0					
ANR	1165194	ReturnStatement	return r ;	960:2:21510:21518	1164301	10	True				
ANR	1165195	Identifier	r		1164301	0					
ANR	1165196	ReturnType	static int		1164301	1					
ANR	1165197	Identifier	compile_quantifier_node		1164301	2					
ANR	1165198	ParameterList	"QtfrNode * qn , regex_t * reg"		1164301	3					
ANR	1165199	Parameter	QtfrNode * qn	812:24:17585:17596	1164301	0	True				
ANR	1165200	ParameterType	QtfrNode *		1164301	0					
ANR	1165201	Identifier	qn		1164301	1					
ANR	1165202	Parameter	regex_t * reg	812:38:17599:17610	1164301	1	True				
ANR	1165203	ParameterType	regex_t *		1164301	0					
ANR	1165204	Identifier	reg		1164301	1					
ANR	1165205	CFGEntryNode	ENTRY		1164301		True				
ANR	1165206	CFGExitNode	EXIT		1164301		True				
ANR	1165207	Symbol	OP_ANYCHAR_STAR_PEEK_NEXT		1164301						
ANR	1165208	Symbol	compile_range_repeat_node		1164301						
ANR	1165209	Symbol	ckn		1164301						
ANR	1165210	Symbol	OP_STATE_CHECK_ANYCHAR_ML_STAR		1164301						
ANR	1165211	Symbol	OP_ANYCHAR_ML_STAR_PEEK_NEXT		1164301						
ANR	1165212	Symbol	reg		1164301						
ANR	1165213	Symbol	reg -> options		1164301						
ANR	1165214	Symbol	tlen		1164301						
ANR	1165215	Symbol	OP_ANYCHAR_STAR		1164301						
ANR	1165216	Symbol	IS_REPEAT_INFINITE		1164301						
ANR	1165217	Symbol	add_opcode		1164301						
ANR	1165218	Symbol	SIZE_OP_NULL_CHECK_START		1164301						
ANR	1165219	Symbol	qn		1164301						
ANR	1165220	Symbol	SIZE_OP_JUMP		1164301						
ANR	1165221	Symbol	OP_JUMP		1164301						
ANR	1165222	Symbol	OP_ANYCHAR_ML_STAR		1164301						
ANR	1165223	Symbol	NSTR		1164301						
ANR	1165224	Symbol	* NSTR		1164301						
ANR	1165225	Symbol	qn -> target		1164301						
ANR	1165226	Symbol	qn -> upper		1164301						
ANR	1165227	Symbol	qn -> is_refered		1164301						
ANR	1165228	Symbol	NSTR ( qn -> next_head_exact ) -> s		1164301						
ANR	1165229	Symbol	empty_info		1164301						
ANR	1165230	Symbol	SIZE_OP_STATE_CHECK_PUSH		1164301						
ANR	1165231	Symbol	add_rel_addr		1164301						
ANR	1165232	Symbol	* qn		1164301						
ANR	1165233	Symbol	qn -> target_empty_info		1164301						
ANR	1165234	Symbol	add_bytes		1164301						
ANR	1165235	Symbol	qn -> greedy		1164301						
ANR	1165236	Symbol	CKN_ON		1164301						
ANR	1165237	Symbol	IS_NOT_NULL		1164301						
ANR	1165238	Symbol	infinite		1164301						
ANR	1165239	Symbol	compile_tree_n_times		1164301						
ANR	1165240	Symbol	OP_PUSH		1164301						
ANR	1165241	Symbol	compile_tree_empty_check		1164301						
ANR	1165242	Symbol	qn -> next_head_exact		1164301						
ANR	1165243	Symbol	SIZE_OP_NULL_CHECK_END		1164301						
ANR	1165244	Symbol	OP_STATE_CHECK_ANYCHAR_STAR		1164301						
ANR	1165245	Symbol	qn -> lower		1164301						
ANR	1165246	Symbol	reg -> num_comb_exp_check		1164301						
ANR	1165247	Symbol	OP_STATE_CHECK_PUSH_OR_JUMP		1164301						
ANR	1165248	Symbol	add_opcode_rel_addr		1164301						
ANR	1165249	Symbol	compile_length_tree		1164301						
ANR	1165250	Symbol	SIZE_OP_STATE_CHECK_PUSH_OR_JUMP		1164301						
ANR	1165251	Symbol	qn -> comb_exp_check_num		1164301						
ANR	1165252	Symbol	SIZE_OP_PUSH		1164301						
ANR	1165253	Symbol	is_anychar_star_quantifier		1164301						
ANR	1165254	Symbol	OP_STATE_CHECK_PUSH		1164301						
ANR	1165255	Symbol	OP_STATE_CHECK		1164301						
ANR	1165256	Symbol	r		1164301						
ANR	1165257	Symbol	compile_tree		1164301						
ANR	1165258	Symbol	mod_tlen		1164301						
ANR	1165259	Symbol	IS_MULTILINE		1164301						
ANR	1165260	Symbol	add_state_check_num		1164301						
ANR	1165261	Symbol	* reg		1164301						
ANR	1165262	Function	compile_length_quantifier_node	965:0:21568:23467							
ANR	1165263	FunctionDef	"compile_length_quantifier_node (QtfrNode * qn , regex_t * reg)"		1165262	0					
ANR	1165264	CompoundStatement		967:0:21638:23467	1165262	0					
ANR	1165265	IdentifierDeclStatement	"int len , mod_tlen ;"	968:2:21642:21659	1165262	0	True				
ANR	1165266	IdentifierDecl	len		1165262	0					
ANR	1165267	IdentifierDeclType	int		1165262	0					
ANR	1165268	Identifier	len		1165262	1					
ANR	1165269	IdentifierDecl	mod_tlen		1165262	1					
ANR	1165270	IdentifierDeclType	int		1165262	0					
ANR	1165271	Identifier	mod_tlen		1165262	1					
ANR	1165272	IdentifierDeclStatement	int infinite = IS_REPEAT_INFINITE ( qn -> upper ) ;	969:2:21663:21707	1165262	1	True				
ANR	1165273	IdentifierDecl	infinite = IS_REPEAT_INFINITE ( qn -> upper )		1165262	0					
ANR	1165274	IdentifierDeclType	int		1165262	0					
ANR	1165275	Identifier	infinite		1165262	1					
ANR	1165276	AssignmentExpression	infinite = IS_REPEAT_INFINITE ( qn -> upper )		1165262	2		=			
ANR	1165277	Identifier	infinite		1165262	0					
ANR	1165278	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1165262	1					
ANR	1165279	Callee	IS_REPEAT_INFINITE		1165262	0					
ANR	1165280	Identifier	IS_REPEAT_INFINITE		1165262	0					
ANR	1165281	ArgumentList	qn -> upper		1165262	1					
ANR	1165282	Argument	qn -> upper		1165262	0					
ANR	1165283	PtrMemberAccess	qn -> upper		1165262	0					
ANR	1165284	Identifier	qn		1165262	0					
ANR	1165285	Identifier	upper		1165262	1					
ANR	1165286	IdentifierDeclStatement	int empty_info = qn -> target_empty_info ;	970:2:21711:21749	1165262	2	True				
ANR	1165287	IdentifierDecl	empty_info = qn -> target_empty_info		1165262	0					
ANR	1165288	IdentifierDeclType	int		1165262	0					
ANR	1165289	Identifier	empty_info		1165262	1					
ANR	1165290	AssignmentExpression	empty_info = qn -> target_empty_info		1165262	2		=			
ANR	1165291	Identifier	empty_info		1165262	0					
ANR	1165292	PtrMemberAccess	qn -> target_empty_info		1165262	1					
ANR	1165293	Identifier	qn		1165262	0					
ANR	1165294	Identifier	target_empty_info		1165262	1					
ANR	1165295	IdentifierDeclStatement	"int tlen = compile_length_tree ( qn -> target , reg ) ;"	971:2:21753:21800	1165262	3	True				
ANR	1165296	IdentifierDecl	"tlen = compile_length_tree ( qn -> target , reg )"		1165262	0					
ANR	1165297	IdentifierDeclType	int		1165262	0					
ANR	1165298	Identifier	tlen		1165262	1					
ANR	1165299	AssignmentExpression	"tlen = compile_length_tree ( qn -> target , reg )"		1165262	2		=			
ANR	1165300	Identifier	tlen		1165262	0					
ANR	1165301	CallExpression	"compile_length_tree ( qn -> target , reg )"		1165262	1					
ANR	1165302	Callee	compile_length_tree		1165262	0					
ANR	1165303	Identifier	compile_length_tree		1165262	0					
ANR	1165304	ArgumentList	qn -> target		1165262	1					
ANR	1165305	Argument	qn -> target		1165262	0					
ANR	1165306	PtrMemberAccess	qn -> target		1165262	0					
ANR	1165307	Identifier	qn		1165262	0					
ANR	1165308	Identifier	target		1165262	1					
ANR	1165309	Argument	reg		1165262	1					
ANR	1165310	Identifier	reg		1165262	0					
ANR	1165311	IfStatement	if ( tlen < 0 )		1165262	4					
ANR	1165312	Condition	tlen < 0	973:6:21809:21816	1165262	0	True				
ANR	1165313	RelationalExpression	tlen < 0		1165262	0		<			
ANR	1165314	Identifier	tlen		1165262	0					
ANR	1165315	PrimaryExpression	0		1165262	1					
ANR	1165316	ReturnStatement	return tlen ;	973:16:21819:21830	1165262	1	True				
ANR	1165317	Identifier	tlen		1165262	0					
ANR	1165318	IfStatement	if ( NTYPE ( qn -> target ) == NT_CANY )		1165262	5					
ANR	1165319	Condition	NTYPE ( qn -> target ) == NT_CANY	976:6:21862:21889	1165262	0	True				
ANR	1165320	EqualityExpression	NTYPE ( qn -> target ) == NT_CANY		1165262	0		==			
ANR	1165321	CallExpression	NTYPE ( qn -> target )		1165262	0					
ANR	1165322	Callee	NTYPE		1165262	0					
ANR	1165323	Identifier	NTYPE		1165262	0					
ANR	1165324	ArgumentList	qn -> target		1165262	1					
ANR	1165325	Argument	qn -> target		1165262	0					
ANR	1165326	PtrMemberAccess	qn -> target		1165262	0					
ANR	1165327	Identifier	qn		1165262	0					
ANR	1165328	Identifier	target		1165262	1					
ANR	1165329	Identifier	NT_CANY		1165262	1					
ANR	1165330	CompoundStatement		10:36:253:253	1165262	1					
ANR	1165331	IfStatement	if ( qn -> greedy && infinite )		1165262	0					
ANR	1165332	Condition	qn -> greedy && infinite	977:8:21902:21923	1165262	0	True				
ANR	1165333	AndExpression	qn -> greedy && infinite		1165262	0		&&			
ANR	1165334	PtrMemberAccess	qn -> greedy		1165262	0					
ANR	1165335	Identifier	qn		1165262	0					
ANR	1165336	Identifier	greedy		1165262	1					
ANR	1165337	Identifier	infinite		1165262	1					
ANR	1165338	CompoundStatement		11:32:287:287	1165262	1					
ANR	1165339	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) )		1165262	0					
ANR	1165340	Condition	IS_NOT_NULL ( qn -> next_head_exact )	978:10:21938:21969	1165262	0	True				
ANR	1165341	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		1165262	0					
ANR	1165342	Callee	IS_NOT_NULL		1165262	0					
ANR	1165343	Identifier	IS_NOT_NULL		1165262	0					
ANR	1165344	ArgumentList	qn -> next_head_exact		1165262	1					
ANR	1165345	Argument	qn -> next_head_exact		1165262	0					
ANR	1165346	PtrMemberAccess	qn -> next_head_exact		1165262	0					
ANR	1165347	Identifier	qn		1165262	0					
ANR	1165348	Identifier	next_head_exact		1165262	1					
ANR	1165349	ReturnStatement	return SIZE_OP_ANYCHAR_STAR_PEEK_NEXT + tlen * qn -> lower ;	979:8:21980:22036	1165262	1	True				
ANR	1165350	AdditiveExpression	SIZE_OP_ANYCHAR_STAR_PEEK_NEXT + tlen * qn -> lower		1165262	0		+			
ANR	1165351	Identifier	SIZE_OP_ANYCHAR_STAR_PEEK_NEXT		1165262	0					
ANR	1165352	MultiplicativeExpression	tlen * qn -> lower		1165262	1		*			
ANR	1165353	Identifier	tlen		1165262	0					
ANR	1165354	PtrMemberAccess	qn -> lower		1165262	1					
ANR	1165355	Identifier	qn		1165262	0					
ANR	1165356	Identifier	lower		1165262	1					
ANR	1165357	ElseStatement	else		1165262	0					
ANR	1165358	ReturnStatement	return SIZE_OP_ANYCHAR_STAR + tlen * qn -> lower ;	981:8:22057:22103	1165262	0	True				
ANR	1165359	AdditiveExpression	SIZE_OP_ANYCHAR_STAR + tlen * qn -> lower		1165262	0		+			
ANR	1165360	Identifier	SIZE_OP_ANYCHAR_STAR		1165262	0					
ANR	1165361	MultiplicativeExpression	tlen * qn -> lower		1165262	1		*			
ANR	1165362	Identifier	tlen		1165262	0					
ANR	1165363	PtrMemberAccess	qn -> lower		1165262	1					
ANR	1165364	Identifier	qn		1165262	0					
ANR	1165365	Identifier	lower		1165262	1					
ANR	1165366	IfStatement	if ( empty_info != 0 )		1165262	6					
ANR	1165367	Condition	empty_info != 0	985:6:22122:22136	1165262	0	True				
ANR	1165368	EqualityExpression	empty_info != 0		1165262	0		!=			
ANR	1165369	Identifier	empty_info		1165262	0					
ANR	1165370	PrimaryExpression	0		1165262	1					
ANR	1165371	ExpressionStatement	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )	986:4:22143:22212	1165262	1	True				
ANR	1165372	AssignmentExpression	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		1165262	0		=			
ANR	1165373	Identifier	mod_tlen		1165262	0					
ANR	1165374	AdditiveExpression	tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		1165262	1		+			
ANR	1165375	Identifier	tlen		1165262	0					
ANR	1165376	AdditiveExpression	SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END		1165262	1		+			
ANR	1165377	Identifier	SIZE_OP_NULL_CHECK_START		1165262	0					
ANR	1165378	Identifier	SIZE_OP_NULL_CHECK_END		1165262	1					
ANR	1165379	ElseStatement	else		1165262	0					
ANR	1165380	ExpressionStatement	mod_tlen = tlen	988:4:22225:22240	1165262	0	True				
ANR	1165381	AssignmentExpression	mod_tlen = tlen		1165262	0		=			
ANR	1165382	Identifier	mod_tlen		1165262	0					
ANR	1165383	Identifier	tlen		1165262	1					
ANR	1165384	IfStatement	if ( infinite && ( qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE ) )		1165262	7					
ANR	1165385	Condition	infinite && ( qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE )	990:6:22249:22334	1165262	0	True				
ANR	1165386	AndExpression	infinite && ( qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE )		1165262	0		&&			
ANR	1165387	Identifier	infinite		1165262	0					
ANR	1165388	OrExpression	qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE		1165262	1		||			
ANR	1165389	RelationalExpression	qn -> lower <= 1		1165262	0		<=			
ANR	1165390	PtrMemberAccess	qn -> lower		1165262	0					
ANR	1165391	Identifier	qn		1165262	0					
ANR	1165392	Identifier	lower		1165262	1					
ANR	1165393	PrimaryExpression	1		1165262	1					
ANR	1165394	RelationalExpression	tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE		1165262	1		<=			
ANR	1165395	MultiplicativeExpression	tlen * qn -> lower		1165262	0		*			
ANR	1165396	Identifier	tlen		1165262	0					
ANR	1165397	PtrMemberAccess	qn -> lower		1165262	1					
ANR	1165398	Identifier	qn		1165262	0					
ANR	1165399	Identifier	lower		1165262	1					
ANR	1165400	Identifier	QUANTIFIER_EXPAND_LIMIT_SIZE		1165262	1					
ANR	1165401	CompoundStatement		25:76:698:698	1165262	1					
ANR	1165402	IfStatement	if ( qn -> lower == 1 && tlen > QUANTIFIER_EXPAND_LIMIT_SIZE )		1165262	0					
ANR	1165403	Condition	qn -> lower == 1 && tlen > QUANTIFIER_EXPAND_LIMIT_SIZE	992:8:22347:22399	1165262	0	True				
ANR	1165404	AndExpression	qn -> lower == 1 && tlen > QUANTIFIER_EXPAND_LIMIT_SIZE		1165262	0		&&			
ANR	1165405	EqualityExpression	qn -> lower == 1		1165262	0		==			
ANR	1165406	PtrMemberAccess	qn -> lower		1165262	0					
ANR	1165407	Identifier	qn		1165262	0					
ANR	1165408	Identifier	lower		1165262	1					
ANR	1165409	PrimaryExpression	1		1165262	1					
ANR	1165410	RelationalExpression	tlen > QUANTIFIER_EXPAND_LIMIT_SIZE		1165262	1		>			
ANR	1165411	Identifier	tlen		1165262	0					
ANR	1165412	Identifier	QUANTIFIER_EXPAND_LIMIT_SIZE		1165262	1					
ANR	1165413	CompoundStatement		26:63:763:763	1165262	1					
ANR	1165414	ExpressionStatement	len = SIZE_OP_JUMP	993:6:22410:22428	1165262	0	True				
ANR	1165415	AssignmentExpression	len = SIZE_OP_JUMP		1165262	0		=			
ANR	1165416	Identifier	len		1165262	0					
ANR	1165417	Identifier	SIZE_OP_JUMP		1165262	1					
ANR	1165418	ElseStatement	else		1165262	0					
ANR	1165419	CompoundStatement		29:9:806:806	1165262	0					
ANR	1165420	ExpressionStatement	len = tlen * qn -> lower	996:6:22453:22475	1165262	0	True				
ANR	1165421	AssignmentExpression	len = tlen * qn -> lower		1165262	0		=			
ANR	1165422	Identifier	len		1165262	0					
ANR	1165423	MultiplicativeExpression	tlen * qn -> lower		1165262	1		*			
ANR	1165424	Identifier	tlen		1165262	0					
ANR	1165425	PtrMemberAccess	qn -> lower		1165262	1					
ANR	1165426	Identifier	qn		1165262	0					
ANR	1165427	Identifier	lower		1165262	1					
ANR	1165428	IfStatement	if ( qn -> greedy )		1165262	1					
ANR	1165429	Condition	qn -> greedy	999:8:22492:22501	1165262	0	True				
ANR	1165430	PtrMemberAccess	qn -> greedy		1165262	0					
ANR	1165431	Identifier	qn		1165262	0					
ANR	1165432	Identifier	greedy		1165262	1					
ANR	1165433	CompoundStatement		33:20:865:865	1165262	1					
ANR	1165434	IfStatement	if ( IS_NOT_NULL ( qn -> head_exact ) )		1165262	0					
ANR	1165435	Condition	IS_NOT_NULL ( qn -> head_exact )	1000:10:22516:22542	1165262	0	True				
ANR	1165436	CallExpression	IS_NOT_NULL ( qn -> head_exact )		1165262	0					
ANR	1165437	Callee	IS_NOT_NULL		1165262	0					
ANR	1165438	Identifier	IS_NOT_NULL		1165262	0					
ANR	1165439	ArgumentList	qn -> head_exact		1165262	1					
ANR	1165440	Argument	qn -> head_exact		1165262	0					
ANR	1165441	PtrMemberAccess	qn -> head_exact		1165262	0					
ANR	1165442	Identifier	qn		1165262	0					
ANR	1165443	Identifier	head_exact		1165262	1					
ANR	1165444	ExpressionStatement	len += SIZE_OP_PUSH_OR_JUMP_EXACT1 + mod_tlen + SIZE_OP_JUMP	1001:1:22546:22606	1165262	1	True				
ANR	1165445	AssignmentExpression	len += SIZE_OP_PUSH_OR_JUMP_EXACT1 + mod_tlen + SIZE_OP_JUMP		1165262	0		+=			
ANR	1165446	Identifier	len		1165262	0					
ANR	1165447	AdditiveExpression	SIZE_OP_PUSH_OR_JUMP_EXACT1 + mod_tlen + SIZE_OP_JUMP		1165262	1		+			
ANR	1165448	Identifier	SIZE_OP_PUSH_OR_JUMP_EXACT1		1165262	0					
ANR	1165449	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		1165262	1		+			
ANR	1165450	Identifier	mod_tlen		1165262	0					
ANR	1165451	Identifier	SIZE_OP_JUMP		1165262	1					
ANR	1165452	ElseStatement	else		1165262	0					
ANR	1165453	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) )		1165262	0					
ANR	1165454	Condition	IS_NOT_NULL ( qn -> next_head_exact )	1002:15:22623:22654	1165262	0	True				
ANR	1165455	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		1165262	0					
ANR	1165456	Callee	IS_NOT_NULL		1165262	0					
ANR	1165457	Identifier	IS_NOT_NULL		1165262	0					
ANR	1165458	ArgumentList	qn -> next_head_exact		1165262	1					
ANR	1165459	Argument	qn -> next_head_exact		1165262	0					
ANR	1165460	PtrMemberAccess	qn -> next_head_exact		1165262	0					
ANR	1165461	Identifier	qn		1165262	0					
ANR	1165462	Identifier	next_head_exact		1165262	1					
ANR	1165463	ExpressionStatement	len += SIZE_OP_PUSH_IF_PEEK_NEXT + mod_tlen + SIZE_OP_JUMP	1003:1:22658:22716	1165262	1	True				
ANR	1165464	AssignmentExpression	len += SIZE_OP_PUSH_IF_PEEK_NEXT + mod_tlen + SIZE_OP_JUMP		1165262	0		+=			
ANR	1165465	Identifier	len		1165262	0					
ANR	1165466	AdditiveExpression	SIZE_OP_PUSH_IF_PEEK_NEXT + mod_tlen + SIZE_OP_JUMP		1165262	1		+			
ANR	1165467	Identifier	SIZE_OP_PUSH_IF_PEEK_NEXT		1165262	0					
ANR	1165468	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		1165262	1		+			
ANR	1165469	Identifier	mod_tlen		1165262	0					
ANR	1165470	Identifier	SIZE_OP_JUMP		1165262	1					
ANR	1165471	ElseStatement	else		1165262	0					
ANR	1165472	ExpressionStatement	len += SIZE_OP_PUSH + mod_tlen + SIZE_OP_JUMP	1005:1:22730:22775	1165262	0	True				
ANR	1165473	AssignmentExpression	len += SIZE_OP_PUSH + mod_tlen + SIZE_OP_JUMP		1165262	0		+=			
ANR	1165474	Identifier	len		1165262	0					
ANR	1165475	AdditiveExpression	SIZE_OP_PUSH + mod_tlen + SIZE_OP_JUMP		1165262	1		+			
ANR	1165476	Identifier	SIZE_OP_PUSH		1165262	0					
ANR	1165477	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		1165262	1		+			
ANR	1165478	Identifier	mod_tlen		1165262	0					
ANR	1165479	Identifier	SIZE_OP_JUMP		1165262	1					
ANR	1165480	ElseStatement	else		1165262	0					
ANR	1165481	ExpressionStatement	len += SIZE_OP_JUMP + mod_tlen + SIZE_OP_PUSH	1008:6:22798:22843	1165262	0	True				
ANR	1165482	AssignmentExpression	len += SIZE_OP_JUMP + mod_tlen + SIZE_OP_PUSH		1165262	0		+=			
ANR	1165483	Identifier	len		1165262	0					
ANR	1165484	AdditiveExpression	SIZE_OP_JUMP + mod_tlen + SIZE_OP_PUSH		1165262	1		+			
ANR	1165485	Identifier	SIZE_OP_JUMP		1165262	0					
ANR	1165486	AdditiveExpression	mod_tlen + SIZE_OP_PUSH		1165262	1		+			
ANR	1165487	Identifier	mod_tlen		1165262	0					
ANR	1165488	Identifier	SIZE_OP_PUSH		1165262	1					
ANR	1165489	ElseStatement	else		1165262	0					
ANR	1165490	IfStatement	if ( qn -> upper == 0 && qn -> is_refered != 0 )		1165262	0					
ANR	1165491	Condition	qn -> upper == 0 && qn -> is_refered != 0	1010:11:22860:22896	1165262	0	True				
ANR	1165492	AndExpression	qn -> upper == 0 && qn -> is_refered != 0		1165262	0		&&			
ANR	1165493	EqualityExpression	qn -> upper == 0		1165262	0		==			
ANR	1165494	PtrMemberAccess	qn -> upper		1165262	0					
ANR	1165495	Identifier	qn		1165262	0					
ANR	1165496	Identifier	upper		1165262	1					
ANR	1165497	PrimaryExpression	0		1165262	1					
ANR	1165498	EqualityExpression	qn -> is_refered != 0		1165262	1		!=			
ANR	1165499	PtrMemberAccess	qn -> is_refered		1165262	0					
ANR	1165500	Identifier	qn		1165262	0					
ANR	1165501	Identifier	is_refered		1165262	1					
ANR	1165502	PrimaryExpression	0		1165262	1					
ANR	1165503	CompoundStatement		44:50:1260:1260	1165262	1					
ANR	1165504	ExpressionStatement	len = SIZE_OP_JUMP + tlen	1011:4:22925:22950	1165262	0	True				
ANR	1165505	AssignmentExpression	len = SIZE_OP_JUMP + tlen		1165262	0		=			
ANR	1165506	Identifier	len		1165262	0					
ANR	1165507	AdditiveExpression	SIZE_OP_JUMP + tlen		1165262	1		+			
ANR	1165508	Identifier	SIZE_OP_JUMP		1165262	0					
ANR	1165509	Identifier	tlen		1165262	1					
ANR	1165510	ElseStatement	else		1165262	0					
ANR	1165511	IfStatement	if ( ! infinite && qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE ) )		1165262	0					
ANR	1165512	Condition	! infinite && qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE )	1013:11:22967:23127	1165262	0	True				
ANR	1165513	AndExpression	! infinite && qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE )		1165262	0		&&			
ANR	1165514	UnaryOperationExpression	! infinite		1165262	0					
ANR	1165515	UnaryOperator	!		1165262	0					
ANR	1165516	Identifier	infinite		1165262	1					
ANR	1165517	AndExpression	qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE )		1165262	1		&&			
ANR	1165518	PtrMemberAccess	qn -> greedy		1165262	0					
ANR	1165519	Identifier	qn		1165262	0					
ANR	1165520	Identifier	greedy		1165262	1					
ANR	1165521	OrExpression	qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE		1165262	1		||			
ANR	1165522	EqualityExpression	qn -> upper == 1		1165262	0		==			
ANR	1165523	PtrMemberAccess	qn -> upper		1165262	0					
ANR	1165524	Identifier	qn		1165262	0					
ANR	1165525	Identifier	upper		1165262	1					
ANR	1165526	PrimaryExpression	1		1165262	1					
ANR	1165527	RelationalExpression	( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE		1165262	1		<=			
ANR	1165528	MultiplicativeExpression	( tlen + SIZE_OP_PUSH ) * qn -> upper		1165262	0		*			
ANR	1165529	AdditiveExpression	tlen + SIZE_OP_PUSH		1165262	0		+			
ANR	1165530	Identifier	tlen		1165262	0					
ANR	1165531	Identifier	SIZE_OP_PUSH		1165262	1					
ANR	1165532	PtrMemberAccess	qn -> upper		1165262	1					
ANR	1165533	Identifier	qn		1165262	0					
ANR	1165534	Identifier	upper		1165262	1					
ANR	1165535	Identifier	QUANTIFIER_EXPAND_LIMIT_SIZE		1165262	1					
ANR	1165536	CompoundStatement		49:72:1491:1491	1165262	1					
ANR	1165537	ExpressionStatement	len = tlen * qn -> lower	1016:4:23136:23158	1165262	0	True				
ANR	1165538	AssignmentExpression	len = tlen * qn -> lower		1165262	0		=			
ANR	1165539	Identifier	len		1165262	0					
ANR	1165540	MultiplicativeExpression	tlen * qn -> lower		1165262	1		*			
ANR	1165541	Identifier	tlen		1165262	0					
ANR	1165542	PtrMemberAccess	qn -> lower		1165262	1					
ANR	1165543	Identifier	qn		1165262	0					
ANR	1165544	Identifier	lower		1165262	1					
ANR	1165545	ExpressionStatement	len += ( SIZE_OP_PUSH + tlen ) * ( qn -> upper - qn -> lower )	1017:4:23164:23218	1165262	1	True				
ANR	1165546	AssignmentExpression	len += ( SIZE_OP_PUSH + tlen ) * ( qn -> upper - qn -> lower )		1165262	0		+=			
ANR	1165547	Identifier	len		1165262	0					
ANR	1165548	MultiplicativeExpression	( SIZE_OP_PUSH + tlen ) * ( qn -> upper - qn -> lower )		1165262	1		*			
ANR	1165549	AdditiveExpression	SIZE_OP_PUSH + tlen		1165262	0		+			
ANR	1165550	Identifier	SIZE_OP_PUSH		1165262	0					
ANR	1165551	Identifier	tlen		1165262	1					
ANR	1165552	AdditiveExpression	qn -> upper - qn -> lower		1165262	1		-			
ANR	1165553	PtrMemberAccess	qn -> upper		1165262	0					
ANR	1165554	Identifier	qn		1165262	0					
ANR	1165555	Identifier	upper		1165262	1					
ANR	1165556	PtrMemberAccess	qn -> lower		1165262	1					
ANR	1165557	Identifier	qn		1165262	0					
ANR	1165558	Identifier	lower		1165262	1					
ANR	1165559	ElseStatement	else		1165262	0					
ANR	1165560	IfStatement	if ( ! qn -> greedy && qn -> upper == 1 && qn -> lower == 0 )		1165262	0					
ANR	1165561	Condition	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0	1019:11:23235:23281	1165262	0	True				
ANR	1165562	AndExpression	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0		1165262	0		&&			
ANR	1165563	UnaryOperationExpression	! qn -> greedy		1165262	0					
ANR	1165564	UnaryOperator	!		1165262	0					
ANR	1165565	PtrMemberAccess	qn -> greedy		1165262	1					
ANR	1165566	Identifier	qn		1165262	0					
ANR	1165567	Identifier	greedy		1165262	1					
ANR	1165568	AndExpression	qn -> upper == 1 && qn -> lower == 0		1165262	1		&&			
ANR	1165569	EqualityExpression	qn -> upper == 1		1165262	0		==			
ANR	1165570	PtrMemberAccess	qn -> upper		1165262	0					
ANR	1165571	Identifier	qn		1165262	0					
ANR	1165572	Identifier	upper		1165262	1					
ANR	1165573	PrimaryExpression	1		1165262	1					
ANR	1165574	EqualityExpression	qn -> lower == 0		1165262	1		==			
ANR	1165575	PtrMemberAccess	qn -> lower		1165262	0					
ANR	1165576	Identifier	qn		1165262	0					
ANR	1165577	Identifier	lower		1165262	1					
ANR	1165578	PrimaryExpression	0		1165262	1					
ANR	1165579	CompoundStatement		53:60:1645:1645	1165262	1					
ANR	1165580	ExpressionStatement	len = SIZE_OP_PUSH + SIZE_OP_JUMP + tlen	1020:4:23301:23341	1165262	0	True				
ANR	1165581	AssignmentExpression	len = SIZE_OP_PUSH + SIZE_OP_JUMP + tlen		1165262	0		=			
ANR	1165582	Identifier	len		1165262	0					
ANR	1165583	AdditiveExpression	SIZE_OP_PUSH + SIZE_OP_JUMP + tlen		1165262	1		+			
ANR	1165584	Identifier	SIZE_OP_PUSH		1165262	0					
ANR	1165585	AdditiveExpression	SIZE_OP_JUMP + tlen		1165262	1		+			
ANR	1165586	Identifier	SIZE_OP_JUMP		1165262	0					
ANR	1165587	Identifier	tlen		1165262	1					
ANR	1165588	ElseStatement	else		1165262	0					
ANR	1165589	CompoundStatement		56:7:1715:1715	1165262	0					
ANR	1165590	ExpressionStatement	len = SIZE_OP_REPEAT_INC + mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM	1023:4:23360:23446	1165262	0	True				
ANR	1165591	AssignmentExpression	len = SIZE_OP_REPEAT_INC + mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		1165262	0		=			
ANR	1165592	Identifier	len		1165262	0					
ANR	1165593	AdditiveExpression	SIZE_OP_REPEAT_INC + mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		1165262	1		+			
ANR	1165594	Identifier	SIZE_OP_REPEAT_INC		1165262	0					
ANR	1165595	AdditiveExpression	mod_tlen + SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		1165262	1		+			
ANR	1165596	Identifier	mod_tlen		1165262	0					
ANR	1165597	AdditiveExpression	SIZE_OPCODE + SIZE_RELADDR + SIZE_MEMNUM		1165262	1		+			
ANR	1165598	Identifier	SIZE_OPCODE		1165262	0					
ANR	1165599	AdditiveExpression	SIZE_RELADDR + SIZE_MEMNUM		1165262	1		+			
ANR	1165600	Identifier	SIZE_RELADDR		1165262	0					
ANR	1165601	Identifier	SIZE_MEMNUM		1165262	1					
ANR	1165602	ReturnStatement	return len ;	1027:2:23455:23465	1165262	8	True				
ANR	1165603	Identifier	len		1165262	0					
ANR	1165604	ReturnType	static int		1165262	1					
ANR	1165605	Identifier	compile_length_quantifier_node		1165262	2					
ANR	1165606	ParameterList	"QtfrNode * qn , regex_t * reg"		1165262	3					
ANR	1165607	Parameter	QtfrNode * qn	966:31:21610:21621	1165262	0	True				
ANR	1165608	ParameterType	QtfrNode *		1165262	0					
ANR	1165609	Identifier	qn		1165262	1					
ANR	1165610	Parameter	regex_t * reg	966:45:21624:21635	1165262	1	True				
ANR	1165611	ParameterType	regex_t *		1165262	0					
ANR	1165612	Identifier	reg		1165262	1					
ANR	1165613	CFGEntryNode	ENTRY		1165262		True				
ANR	1165614	CFGExitNode	EXIT		1165262		True				
ANR	1165615	Symbol	* qn		1165262						
ANR	1165616	Symbol	qn -> target_empty_info		1165262						
ANR	1165617	Symbol	qn -> greedy		1165262						
ANR	1165618	Symbol	SIZE_RELADDR		1165262						
ANR	1165619	Symbol	IS_NOT_NULL		1165262						
ANR	1165620	Symbol	SIZE_OP_ANYCHAR_STAR_PEEK_NEXT		1165262						
ANR	1165621	Symbol	infinite		1165262						
ANR	1165622	Symbol	qn -> next_head_exact		1165262						
ANR	1165623	Symbol	SIZE_OP_NULL_CHECK_END		1165262						
ANR	1165624	Symbol	SIZE_OPCODE		1165262						
ANR	1165625	Symbol	qn -> lower		1165262						
ANR	1165626	Symbol	SIZE_MEMNUM		1165262						
ANR	1165627	Symbol	len		1165262						
ANR	1165628	Symbol	reg		1165262						
ANR	1165629	Symbol	NT_CANY		1165262						
ANR	1165630	Symbol	SIZE_OP_ANYCHAR_STAR		1165262						
ANR	1165631	Symbol	tlen		1165262						
ANR	1165632	Symbol	SIZE_OP_REPEAT_INC		1165262						
ANR	1165633	Symbol	IS_REPEAT_INFINITE		1165262						
ANR	1165634	Symbol	SIZE_OP_NULL_CHECK_START		1165262						
ANR	1165635	Symbol	SIZE_OP_PUSH_IF_PEEK_NEXT		1165262						
ANR	1165636	Symbol	qn		1165262						
ANR	1165637	Symbol	SIZE_OP_JUMP		1165262						
ANR	1165638	Symbol	compile_length_tree		1165262						
ANR	1165639	Symbol	SIZE_OP_PUSH		1165262						
ANR	1165640	Symbol	qn -> target		1165262						
ANR	1165641	Symbol	qn -> head_exact		1165262						
ANR	1165642	Symbol	qn -> upper		1165262						
ANR	1165643	Symbol	QUANTIFIER_EXPAND_LIMIT_SIZE		1165262						
ANR	1165644	Symbol	qn -> is_refered		1165262						
ANR	1165645	Symbol	mod_tlen		1165262						
ANR	1165646	Symbol	empty_info		1165262						
ANR	1165647	Symbol	NTYPE		1165262						
ANR	1165648	Symbol	SIZE_OP_PUSH_OR_JUMP_EXACT1		1165262						
ANR	1165649	Function	compile_quantifier_node	1030:0:23470:27519							
ANR	1165650	FunctionDef	"compile_quantifier_node (QtfrNode * qn , regex_t * reg)"		1165649	0					
ANR	1165651	CompoundStatement		1032:0:23533:27519	1165649	0					
ANR	1165652	IdentifierDeclStatement	"int i , r , mod_tlen ;"	1033:2:23537:23555	1165649	0	True				
ANR	1165653	IdentifierDecl	i		1165649	0					
ANR	1165654	IdentifierDeclType	int		1165649	0					
ANR	1165655	Identifier	i		1165649	1					
ANR	1165656	IdentifierDecl	r		1165649	1					
ANR	1165657	IdentifierDeclType	int		1165649	0					
ANR	1165658	Identifier	r		1165649	1					
ANR	1165659	IdentifierDecl	mod_tlen		1165649	2					
ANR	1165660	IdentifierDeclType	int		1165649	0					
ANR	1165661	Identifier	mod_tlen		1165649	1					
ANR	1165662	IdentifierDeclStatement	int infinite = IS_REPEAT_INFINITE ( qn -> upper ) ;	1034:2:23559:23603	1165649	1	True				
ANR	1165663	IdentifierDecl	infinite = IS_REPEAT_INFINITE ( qn -> upper )		1165649	0					
ANR	1165664	IdentifierDeclType	int		1165649	0					
ANR	1165665	Identifier	infinite		1165649	1					
ANR	1165666	AssignmentExpression	infinite = IS_REPEAT_INFINITE ( qn -> upper )		1165649	2		=			
ANR	1165667	Identifier	infinite		1165649	0					
ANR	1165668	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1165649	1					
ANR	1165669	Callee	IS_REPEAT_INFINITE		1165649	0					
ANR	1165670	Identifier	IS_REPEAT_INFINITE		1165649	0					
ANR	1165671	ArgumentList	qn -> upper		1165649	1					
ANR	1165672	Argument	qn -> upper		1165649	0					
ANR	1165673	PtrMemberAccess	qn -> upper		1165649	0					
ANR	1165674	Identifier	qn		1165649	0					
ANR	1165675	Identifier	upper		1165649	1					
ANR	1165676	IdentifierDeclStatement	int empty_info = qn -> target_empty_info ;	1035:2:23607:23645	1165649	2	True				
ANR	1165677	IdentifierDecl	empty_info = qn -> target_empty_info		1165649	0					
ANR	1165678	IdentifierDeclType	int		1165649	0					
ANR	1165679	Identifier	empty_info		1165649	1					
ANR	1165680	AssignmentExpression	empty_info = qn -> target_empty_info		1165649	2		=			
ANR	1165681	Identifier	empty_info		1165649	0					
ANR	1165682	PtrMemberAccess	qn -> target_empty_info		1165649	1					
ANR	1165683	Identifier	qn		1165649	0					
ANR	1165684	Identifier	target_empty_info		1165649	1					
ANR	1165685	IdentifierDeclStatement	"int tlen = compile_length_tree ( qn -> target , reg ) ;"	1036:2:23649:23696	1165649	3	True				
ANR	1165686	IdentifierDecl	"tlen = compile_length_tree ( qn -> target , reg )"		1165649	0					
ANR	1165687	IdentifierDeclType	int		1165649	0					
ANR	1165688	Identifier	tlen		1165649	1					
ANR	1165689	AssignmentExpression	"tlen = compile_length_tree ( qn -> target , reg )"		1165649	2		=			
ANR	1165690	Identifier	tlen		1165649	0					
ANR	1165691	CallExpression	"compile_length_tree ( qn -> target , reg )"		1165649	1					
ANR	1165692	Callee	compile_length_tree		1165649	0					
ANR	1165693	Identifier	compile_length_tree		1165649	0					
ANR	1165694	ArgumentList	qn -> target		1165649	1					
ANR	1165695	Argument	qn -> target		1165649	0					
ANR	1165696	PtrMemberAccess	qn -> target		1165649	0					
ANR	1165697	Identifier	qn		1165649	0					
ANR	1165698	Identifier	target		1165649	1					
ANR	1165699	Argument	reg		1165649	1					
ANR	1165700	Identifier	reg		1165649	0					
ANR	1165701	IfStatement	if ( tlen < 0 )		1165649	4					
ANR	1165702	Condition	tlen < 0	1038:6:23705:23712	1165649	0	True				
ANR	1165703	RelationalExpression	tlen < 0		1165649	0		<			
ANR	1165704	Identifier	tlen		1165649	0					
ANR	1165705	PrimaryExpression	0		1165649	1					
ANR	1165706	ReturnStatement	return tlen ;	1038:16:23715:23726	1165649	1	True				
ANR	1165707	Identifier	tlen		1165649	0					
ANR	1165708	IfStatement	if ( is_anychar_star_quantifier ( qn ) )		1165649	5					
ANR	1165709	Condition	is_anychar_star_quantifier ( qn )	1040:6:23735:23764	1165649	0	True				
ANR	1165710	CallExpression	is_anychar_star_quantifier ( qn )		1165649	0					
ANR	1165711	Callee	is_anychar_star_quantifier		1165649	0					
ANR	1165712	Identifier	is_anychar_star_quantifier		1165649	0					
ANR	1165713	ArgumentList	qn		1165649	1					
ANR	1165714	Argument	qn		1165649	0					
ANR	1165715	Identifier	qn		1165649	0					
ANR	1165716	CompoundStatement		9:38:233:233	1165649	1					
ANR	1165717	ExpressionStatement	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"	1041:4:23773:23825	1165649	0	True				
ANR	1165718	AssignmentExpression	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"		1165649	0		=			
ANR	1165719	Identifier	r		1165649	0					
ANR	1165720	CallExpression	"compile_tree_n_times ( qn -> target , qn -> lower , reg )"		1165649	1					
ANR	1165721	Callee	compile_tree_n_times		1165649	0					
ANR	1165722	Identifier	compile_tree_n_times		1165649	0					
ANR	1165723	ArgumentList	qn -> target		1165649	1					
ANR	1165724	Argument	qn -> target		1165649	0					
ANR	1165725	PtrMemberAccess	qn -> target		1165649	0					
ANR	1165726	Identifier	qn		1165649	0					
ANR	1165727	Identifier	target		1165649	1					
ANR	1165728	Argument	qn -> lower		1165649	1					
ANR	1165729	PtrMemberAccess	qn -> lower		1165649	0					
ANR	1165730	Identifier	qn		1165649	0					
ANR	1165731	Identifier	lower		1165649	1					
ANR	1165732	Argument	reg		1165649	2					
ANR	1165733	Identifier	reg		1165649	0					
ANR	1165734	IfStatement	if ( r )		1165649	1					
ANR	1165735	Condition	r	1042:8:23835:23835	1165649	0	True				
ANR	1165736	Identifier	r		1165649	0					
ANR	1165737	ReturnStatement	return r ;	1042:11:23838:23846	1165649	1	True				
ANR	1165738	Identifier	r		1165649	0					
ANR	1165739	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) )		1165649	2					
ANR	1165740	Condition	IS_NOT_NULL ( qn -> next_head_exact )	1043:8:23856:23887	1165649	0	True				
ANR	1165741	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		1165649	0					
ANR	1165742	Callee	IS_NOT_NULL		1165649	0					
ANR	1165743	Identifier	IS_NOT_NULL		1165649	0					
ANR	1165744	ArgumentList	qn -> next_head_exact		1165649	1					
ANR	1165745	Argument	qn -> next_head_exact		1165649	0					
ANR	1165746	PtrMemberAccess	qn -> next_head_exact		1165649	0					
ANR	1165747	Identifier	qn		1165649	0					
ANR	1165748	Identifier	next_head_exact		1165649	1					
ANR	1165749	CompoundStatement		12:42:356:356	1165649	1					
ANR	1165750	IfStatement	if ( IS_MULTILINE ( reg -> options ) )		1165649	0					
ANR	1165751	Condition	IS_MULTILINE ( reg -> options )	1044:10:23902:23927	1165649	0	True				
ANR	1165752	CallExpression	IS_MULTILINE ( reg -> options )		1165649	0					
ANR	1165753	Callee	IS_MULTILINE		1165649	0					
ANR	1165754	Identifier	IS_MULTILINE		1165649	0					
ANR	1165755	ArgumentList	reg -> options		1165649	1					
ANR	1165756	Argument	reg -> options		1165649	0					
ANR	1165757	PtrMemberAccess	reg -> options		1165649	0					
ANR	1165758	Identifier	reg		1165649	0					
ANR	1165759	Identifier	options		1165649	1					
ANR	1165760	ExpressionStatement	"r = add_opcode ( reg , OP_ANYCHAR_ML_STAR_PEEK_NEXT )"	1045:1:23931:23980	1165649	1	True				
ANR	1165761	AssignmentExpression	"r = add_opcode ( reg , OP_ANYCHAR_ML_STAR_PEEK_NEXT )"		1165649	0		=			
ANR	1165762	Identifier	r		1165649	0					
ANR	1165763	CallExpression	"add_opcode ( reg , OP_ANYCHAR_ML_STAR_PEEK_NEXT )"		1165649	1					
ANR	1165764	Callee	add_opcode		1165649	0					
ANR	1165765	Identifier	add_opcode		1165649	0					
ANR	1165766	ArgumentList	reg		1165649	1					
ANR	1165767	Argument	reg		1165649	0					
ANR	1165768	Identifier	reg		1165649	0					
ANR	1165769	Argument	OP_ANYCHAR_ML_STAR_PEEK_NEXT		1165649	1					
ANR	1165770	Identifier	OP_ANYCHAR_ML_STAR_PEEK_NEXT		1165649	0					
ANR	1165771	ElseStatement	else		1165649	0					
ANR	1165772	ExpressionStatement	"r = add_opcode ( reg , OP_ANYCHAR_STAR_PEEK_NEXT )"	1047:1:23994:24040	1165649	0	True				
ANR	1165773	AssignmentExpression	"r = add_opcode ( reg , OP_ANYCHAR_STAR_PEEK_NEXT )"		1165649	0		=			
ANR	1165774	Identifier	r		1165649	0					
ANR	1165775	CallExpression	"add_opcode ( reg , OP_ANYCHAR_STAR_PEEK_NEXT )"		1165649	1					
ANR	1165776	Callee	add_opcode		1165649	0					
ANR	1165777	Identifier	add_opcode		1165649	0					
ANR	1165778	ArgumentList	reg		1165649	1					
ANR	1165779	Argument	reg		1165649	0					
ANR	1165780	Identifier	reg		1165649	0					
ANR	1165781	Argument	OP_ANYCHAR_STAR_PEEK_NEXT		1165649	1					
ANR	1165782	Identifier	OP_ANYCHAR_STAR_PEEK_NEXT		1165649	0					
ANR	1165783	IfStatement	if ( r )		1165649	1					
ANR	1165784	Condition	r	1048:10:24052:24052	1165649	0	True				
ANR	1165785	Identifier	r		1165649	0					
ANR	1165786	ReturnStatement	return r ;	1048:13:24055:24063	1165649	1	True				
ANR	1165787	Identifier	r		1165649	0					
ANR	1165788	ReturnStatement	"return add_bytes ( reg , NSTR ( qn -> next_head_exact ) -> s , 1 ) ;"	1049:6:24071:24125	1165649	2	True				
ANR	1165789	CallExpression	"add_bytes ( reg , NSTR ( qn -> next_head_exact ) -> s , 1 )"		1165649	0					
ANR	1165790	Callee	add_bytes		1165649	0					
ANR	1165791	Identifier	add_bytes		1165649	0					
ANR	1165792	ArgumentList	reg		1165649	1					
ANR	1165793	Argument	reg		1165649	0					
ANR	1165794	Identifier	reg		1165649	0					
ANR	1165795	Argument	NSTR ( qn -> next_head_exact ) -> s		1165649	1					
ANR	1165796	PtrMemberAccess	NSTR ( qn -> next_head_exact ) -> s		1165649	0					
ANR	1165797	CallExpression	NSTR ( qn -> next_head_exact )		1165649	0					
ANR	1165798	Callee	NSTR		1165649	0					
ANR	1165799	Identifier	NSTR		1165649	0					
ANR	1165800	ArgumentList	qn -> next_head_exact		1165649	1					
ANR	1165801	Argument	qn -> next_head_exact		1165649	0					
ANR	1165802	PtrMemberAccess	qn -> next_head_exact		1165649	0					
ANR	1165803	Identifier	qn		1165649	0					
ANR	1165804	Identifier	next_head_exact		1165649	1					
ANR	1165805	Identifier	s		1165649	1					
ANR	1165806	Argument	1		1165649	2					
ANR	1165807	PrimaryExpression	1		1165649	0					
ANR	1165808	ElseStatement	else		1165649	0					
ANR	1165809	CompoundStatement		20:9:608:608	1165649	0					
ANR	1165810	IfStatement	if ( IS_MULTILINE ( reg -> options ) )		1165649	0					
ANR	1165811	Condition	IS_MULTILINE ( reg -> options )	1052:10:24154:24179	1165649	0	True				
ANR	1165812	CallExpression	IS_MULTILINE ( reg -> options )		1165649	0					
ANR	1165813	Callee	IS_MULTILINE		1165649	0					
ANR	1165814	Identifier	IS_MULTILINE		1165649	0					
ANR	1165815	ArgumentList	reg -> options		1165649	1					
ANR	1165816	Argument	reg -> options		1165649	0					
ANR	1165817	PtrMemberAccess	reg -> options		1165649	0					
ANR	1165818	Identifier	reg		1165649	0					
ANR	1165819	Identifier	options		1165649	1					
ANR	1165820	ReturnStatement	"return add_opcode ( reg , OP_ANYCHAR_ML_STAR ) ;"	1053:1:24183:24225	1165649	1	True				
ANR	1165821	CallExpression	"add_opcode ( reg , OP_ANYCHAR_ML_STAR )"		1165649	0					
ANR	1165822	Callee	add_opcode		1165649	0					
ANR	1165823	Identifier	add_opcode		1165649	0					
ANR	1165824	ArgumentList	reg		1165649	1					
ANR	1165825	Argument	reg		1165649	0					
ANR	1165826	Identifier	reg		1165649	0					
ANR	1165827	Argument	OP_ANYCHAR_ML_STAR		1165649	1					
ANR	1165828	Identifier	OP_ANYCHAR_ML_STAR		1165649	0					
ANR	1165829	ElseStatement	else		1165649	0					
ANR	1165830	ReturnStatement	"return add_opcode ( reg , OP_ANYCHAR_STAR ) ;"	1055:1:24239:24278	1165649	0	True				
ANR	1165831	CallExpression	"add_opcode ( reg , OP_ANYCHAR_STAR )"		1165649	0					
ANR	1165832	Callee	add_opcode		1165649	0					
ANR	1165833	Identifier	add_opcode		1165649	0					
ANR	1165834	ArgumentList	reg		1165649	1					
ANR	1165835	Argument	reg		1165649	0					
ANR	1165836	Identifier	reg		1165649	0					
ANR	1165837	Argument	OP_ANYCHAR_STAR		1165649	1					
ANR	1165838	Identifier	OP_ANYCHAR_STAR		1165649	0					
ANR	1165839	IfStatement	if ( empty_info != 0 )		1165649	6					
ANR	1165840	Condition	empty_info != 0	1059:6:24297:24311	1165649	0	True				
ANR	1165841	EqualityExpression	empty_info != 0		1165649	0		!=			
ANR	1165842	Identifier	empty_info		1165649	0					
ANR	1165843	PrimaryExpression	0		1165649	1					
ANR	1165844	ExpressionStatement	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )	1060:4:24318:24387	1165649	1	True				
ANR	1165845	AssignmentExpression	mod_tlen = tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		1165649	0		=			
ANR	1165846	Identifier	mod_tlen		1165649	0					
ANR	1165847	AdditiveExpression	tlen + ( SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END )		1165649	1		+			
ANR	1165848	Identifier	tlen		1165649	0					
ANR	1165849	AdditiveExpression	SIZE_OP_NULL_CHECK_START + SIZE_OP_NULL_CHECK_END		1165649	1		+			
ANR	1165850	Identifier	SIZE_OP_NULL_CHECK_START		1165649	0					
ANR	1165851	Identifier	SIZE_OP_NULL_CHECK_END		1165649	1					
ANR	1165852	ElseStatement	else		1165649	0					
ANR	1165853	ExpressionStatement	mod_tlen = tlen	1062:4:24400:24415	1165649	0	True				
ANR	1165854	AssignmentExpression	mod_tlen = tlen		1165649	0		=			
ANR	1165855	Identifier	mod_tlen		1165649	0					
ANR	1165856	Identifier	tlen		1165649	1					
ANR	1165857	IfStatement	if ( infinite && ( qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE ) )		1165649	7					
ANR	1165858	Condition	infinite && ( qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE )	1064:6:24424:24509	1165649	0	True				
ANR	1165859	AndExpression	infinite && ( qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE )		1165649	0		&&			
ANR	1165860	Identifier	infinite		1165649	0					
ANR	1165861	OrExpression	qn -> lower <= 1 || tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE		1165649	1		||			
ANR	1165862	RelationalExpression	qn -> lower <= 1		1165649	0		<=			
ANR	1165863	PtrMemberAccess	qn -> lower		1165649	0					
ANR	1165864	Identifier	qn		1165649	0					
ANR	1165865	Identifier	lower		1165649	1					
ANR	1165866	PrimaryExpression	1		1165649	1					
ANR	1165867	RelationalExpression	tlen * qn -> lower <= QUANTIFIER_EXPAND_LIMIT_SIZE		1165649	1		<=			
ANR	1165868	MultiplicativeExpression	tlen * qn -> lower		1165649	0		*			
ANR	1165869	Identifier	tlen		1165649	0					
ANR	1165870	PtrMemberAccess	qn -> lower		1165649	1					
ANR	1165871	Identifier	qn		1165649	0					
ANR	1165872	Identifier	lower		1165649	1					
ANR	1165873	Identifier	QUANTIFIER_EXPAND_LIMIT_SIZE		1165649	1					
ANR	1165874	CompoundStatement		34:76:978:978	1165649	1					
ANR	1165875	IfStatement	if ( qn -> lower == 1 && tlen > QUANTIFIER_EXPAND_LIMIT_SIZE )		1165649	0					
ANR	1165876	Condition	qn -> lower == 1 && tlen > QUANTIFIER_EXPAND_LIMIT_SIZE	1066:8:24522:24574	1165649	0	True				
ANR	1165877	AndExpression	qn -> lower == 1 && tlen > QUANTIFIER_EXPAND_LIMIT_SIZE		1165649	0		&&			
ANR	1165878	EqualityExpression	qn -> lower == 1		1165649	0		==			
ANR	1165879	PtrMemberAccess	qn -> lower		1165649	0					
ANR	1165880	Identifier	qn		1165649	0					
ANR	1165881	Identifier	lower		1165649	1					
ANR	1165882	PrimaryExpression	1		1165649	1					
ANR	1165883	RelationalExpression	tlen > QUANTIFIER_EXPAND_LIMIT_SIZE		1165649	1		>			
ANR	1165884	Identifier	tlen		1165649	0					
ANR	1165885	Identifier	QUANTIFIER_EXPAND_LIMIT_SIZE		1165649	1					
ANR	1165886	CompoundStatement		35:63:1043:1043	1165649	1					
ANR	1165887	IfStatement	if ( qn -> greedy )		1165649	0					
ANR	1165888	Condition	qn -> greedy	1067:10:24589:24598	1165649	0	True				
ANR	1165889	PtrMemberAccess	qn -> greedy		1165649	0					
ANR	1165890	Identifier	qn		1165649	0					
ANR	1165891	Identifier	greedy		1165649	1					
ANR	1165892	CompoundStatement		36:22:1067:1067	1165649	1					
ANR	1165893	IfStatement	if ( IS_NOT_NULL ( qn -> head_exact ) )		1165649	0					
ANR	1165894	Condition	IS_NOT_NULL ( qn -> head_exact )	1068:5:24608:24634	1165649	0	True				
ANR	1165895	CallExpression	IS_NOT_NULL ( qn -> head_exact )		1165649	0					
ANR	1165896	Callee	IS_NOT_NULL		1165649	0					
ANR	1165897	Identifier	IS_NOT_NULL		1165649	0					
ANR	1165898	ArgumentList	qn -> head_exact		1165649	1					
ANR	1165899	Argument	qn -> head_exact		1165649	0					
ANR	1165900	PtrMemberAccess	qn -> head_exact		1165649	0					
ANR	1165901	Identifier	qn		1165649	0					
ANR	1165902	Identifier	head_exact		1165649	1					
ANR	1165903	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH_OR_JUMP_EXACT1 )"	1069:3:24640:24706	1165649	1	True				
ANR	1165904	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH_OR_JUMP_EXACT1 )"		1165649	0		=			
ANR	1165905	Identifier	r		1165649	0					
ANR	1165906	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH_OR_JUMP_EXACT1 )"		1165649	1					
ANR	1165907	Callee	add_opcode_rel_addr		1165649	0					
ANR	1165908	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1165909	ArgumentList	reg		1165649	1					
ANR	1165910	Argument	reg		1165649	0					
ANR	1165911	Identifier	reg		1165649	0					
ANR	1165912	Argument	OP_JUMP		1165649	1					
ANR	1165913	Identifier	OP_JUMP		1165649	0					
ANR	1165914	Argument	SIZE_OP_PUSH_OR_JUMP_EXACT1		1165649	2					
ANR	1165915	Identifier	SIZE_OP_PUSH_OR_JUMP_EXACT1		1165649	0					
ANR	1165916	ElseStatement	else		1165649	0					
ANR	1165917	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) )		1165649	0					
ANR	1165918	Condition	IS_NOT_NULL ( qn -> next_head_exact )	1070:10:24718:24749	1165649	0	True				
ANR	1165919	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		1165649	0					
ANR	1165920	Callee	IS_NOT_NULL		1165649	0					
ANR	1165921	Identifier	IS_NOT_NULL		1165649	0					
ANR	1165922	ArgumentList	qn -> next_head_exact		1165649	1					
ANR	1165923	Argument	qn -> next_head_exact		1165649	0					
ANR	1165924	PtrMemberAccess	qn -> next_head_exact		1165649	0					
ANR	1165925	Identifier	qn		1165649	0					
ANR	1165926	Identifier	next_head_exact		1165649	1					
ANR	1165927	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH_IF_PEEK_NEXT )"	1071:3:24755:24819	1165649	1	True				
ANR	1165928	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH_IF_PEEK_NEXT )"		1165649	0		=			
ANR	1165929	Identifier	r		1165649	0					
ANR	1165930	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH_IF_PEEK_NEXT )"		1165649	1					
ANR	1165931	Callee	add_opcode_rel_addr		1165649	0					
ANR	1165932	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1165933	ArgumentList	reg		1165649	1					
ANR	1165934	Argument	reg		1165649	0					
ANR	1165935	Identifier	reg		1165649	0					
ANR	1165936	Argument	OP_JUMP		1165649	1					
ANR	1165937	Identifier	OP_JUMP		1165649	0					
ANR	1165938	Argument	SIZE_OP_PUSH_IF_PEEK_NEXT		1165649	2					
ANR	1165939	Identifier	SIZE_OP_PUSH_IF_PEEK_NEXT		1165649	0					
ANR	1165940	ElseStatement	else		1165649	0					
ANR	1165941	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH )"	1073:3:24830:24881	1165649	0	True				
ANR	1165942	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH )"		1165649	0		=			
ANR	1165943	Identifier	r		1165649	0					
ANR	1165944	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_PUSH )"		1165649	1					
ANR	1165945	Callee	add_opcode_rel_addr		1165649	0					
ANR	1165946	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1165947	ArgumentList	reg		1165649	1					
ANR	1165948	Argument	reg		1165649	0					
ANR	1165949	Identifier	reg		1165649	0					
ANR	1165950	Argument	OP_JUMP		1165649	1					
ANR	1165951	Identifier	OP_JUMP		1165649	0					
ANR	1165952	Argument	SIZE_OP_PUSH		1165649	2					
ANR	1165953	Identifier	SIZE_OP_PUSH		1165649	0					
ANR	1165954	ElseStatement	else		1165649	0					
ANR	1165955	CompoundStatement		44:11:1368:1368	1165649	0					
ANR	1165956	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_JUMP )"	1076:1:24905:24956	1165649	0	True				
ANR	1165957	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_JUMP )"		1165649	0		=			
ANR	1165958	Identifier	r		1165649	0					
ANR	1165959	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , SIZE_OP_JUMP )"		1165649	1					
ANR	1165960	Callee	add_opcode_rel_addr		1165649	0					
ANR	1165961	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1165962	ArgumentList	reg		1165649	1					
ANR	1165963	Argument	reg		1165649	0					
ANR	1165964	Identifier	reg		1165649	0					
ANR	1165965	Argument	OP_JUMP		1165649	1					
ANR	1165966	Identifier	OP_JUMP		1165649	0					
ANR	1165967	Argument	SIZE_OP_JUMP		1165649	2					
ANR	1165968	Identifier	SIZE_OP_JUMP		1165649	0					
ANR	1165969	IfStatement	if ( r )		1165649	1					
ANR	1165970	Condition	r	1078:10:24976:24976	1165649	0	True				
ANR	1165971	Identifier	r		1165649	0					
ANR	1165972	ReturnStatement	return r ;	1078:13:24979:24987	1165649	1	True				
ANR	1165973	Identifier	r		1165649	0					
ANR	1165974	ElseStatement	else		1165649	0					
ANR	1165975	CompoundStatement		49:9:1470:1470	1165649	0					
ANR	1165976	ExpressionStatement	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"	1081:6:25012:25064	1165649	0	True				
ANR	1165977	AssignmentExpression	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"		1165649	0		=			
ANR	1165978	Identifier	r		1165649	0					
ANR	1165979	CallExpression	"compile_tree_n_times ( qn -> target , qn -> lower , reg )"		1165649	1					
ANR	1165980	Callee	compile_tree_n_times		1165649	0					
ANR	1165981	Identifier	compile_tree_n_times		1165649	0					
ANR	1165982	ArgumentList	qn -> target		1165649	1					
ANR	1165983	Argument	qn -> target		1165649	0					
ANR	1165984	PtrMemberAccess	qn -> target		1165649	0					
ANR	1165985	Identifier	qn		1165649	0					
ANR	1165986	Identifier	target		1165649	1					
ANR	1165987	Argument	qn -> lower		1165649	1					
ANR	1165988	PtrMemberAccess	qn -> lower		1165649	0					
ANR	1165989	Identifier	qn		1165649	0					
ANR	1165990	Identifier	lower		1165649	1					
ANR	1165991	Argument	reg		1165649	2					
ANR	1165992	Identifier	reg		1165649	0					
ANR	1165993	IfStatement	if ( r )		1165649	1					
ANR	1165994	Condition	r	1082:10:25076:25076	1165649	0	True				
ANR	1165995	Identifier	r		1165649	0					
ANR	1165996	ReturnStatement	return r ;	1082:13:25079:25087	1165649	1	True				
ANR	1165997	Identifier	r		1165649	0					
ANR	1165998	IfStatement	if ( qn -> greedy )		1165649	1					
ANR	1165999	Condition	qn -> greedy	1085:8:25104:25113	1165649	0	True				
ANR	1166000	PtrMemberAccess	qn -> greedy		1165649	0					
ANR	1166001	Identifier	qn		1165649	0					
ANR	1166002	Identifier	greedy		1165649	1					
ANR	1166003	CompoundStatement		54:20:1582:1582	1165649	1					
ANR	1166004	IfStatement	if ( IS_NOT_NULL ( qn -> head_exact ) )		1165649	0					
ANR	1166005	Condition	IS_NOT_NULL ( qn -> head_exact )	1086:10:25128:25154	1165649	0	True				
ANR	1166006	CallExpression	IS_NOT_NULL ( qn -> head_exact )		1165649	0					
ANR	1166007	Callee	IS_NOT_NULL		1165649	0					
ANR	1166008	Identifier	IS_NOT_NULL		1165649	0					
ANR	1166009	ArgumentList	qn -> head_exact		1165649	1					
ANR	1166010	Argument	qn -> head_exact		1165649	0					
ANR	1166011	PtrMemberAccess	qn -> head_exact		1165649	0					
ANR	1166012	Identifier	qn		1165649	0					
ANR	1166013	Identifier	head_exact		1165649	1					
ANR	1166014	CompoundStatement		55:39:1623:1623	1165649	1					
ANR	1166015	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH_OR_JUMP_EXACT1 , mod_tlen + SIZE_OP_JUMP )"	1087:1:25160:25245	1165649	0	True				
ANR	1166016	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH_OR_JUMP_EXACT1 , mod_tlen + SIZE_OP_JUMP )"		1165649	0		=			
ANR	1166017	Identifier	r		1165649	0					
ANR	1166018	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH_OR_JUMP_EXACT1 , mod_tlen + SIZE_OP_JUMP )"		1165649	1					
ANR	1166019	Callee	add_opcode_rel_addr		1165649	0					
ANR	1166020	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1166021	ArgumentList	reg		1165649	1					
ANR	1166022	Argument	reg		1165649	0					
ANR	1166023	Identifier	reg		1165649	0					
ANR	1166024	Argument	OP_PUSH_OR_JUMP_EXACT1		1165649	1					
ANR	1166025	Identifier	OP_PUSH_OR_JUMP_EXACT1		1165649	0					
ANR	1166026	Argument	mod_tlen + SIZE_OP_JUMP		1165649	2					
ANR	1166027	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		1165649	0		+			
ANR	1166028	Identifier	mod_tlen		1165649	0					
ANR	1166029	Identifier	SIZE_OP_JUMP		1165649	1					
ANR	1166030	IfStatement	if ( r )		1165649	1					
ANR	1166031	Condition	r	1089:5:25252:25252	1165649	0	True				
ANR	1166032	Identifier	r		1165649	0					
ANR	1166033	ReturnStatement	return r ;	1089:8:25255:25263	1165649	1	True				
ANR	1166034	Identifier	r		1165649	0					
ANR	1166035	ExpressionStatement	"add_bytes ( reg , NSTR ( qn -> head_exact ) -> s , 1 )"	1090:1:25266:25308	1165649	2	True				
ANR	1166036	CallExpression	"add_bytes ( reg , NSTR ( qn -> head_exact ) -> s , 1 )"		1165649	0					
ANR	1166037	Callee	add_bytes		1165649	0					
ANR	1166038	Identifier	add_bytes		1165649	0					
ANR	1166039	ArgumentList	reg		1165649	1					
ANR	1166040	Argument	reg		1165649	0					
ANR	1166041	Identifier	reg		1165649	0					
ANR	1166042	Argument	NSTR ( qn -> head_exact ) -> s		1165649	1					
ANR	1166043	PtrMemberAccess	NSTR ( qn -> head_exact ) -> s		1165649	0					
ANR	1166044	CallExpression	NSTR ( qn -> head_exact )		1165649	0					
ANR	1166045	Callee	NSTR		1165649	0					
ANR	1166046	Identifier	NSTR		1165649	0					
ANR	1166047	ArgumentList	qn -> head_exact		1165649	1					
ANR	1166048	Argument	qn -> head_exact		1165649	0					
ANR	1166049	PtrMemberAccess	qn -> head_exact		1165649	0					
ANR	1166050	Identifier	qn		1165649	0					
ANR	1166051	Identifier	head_exact		1165649	1					
ANR	1166052	Identifier	s		1165649	1					
ANR	1166053	Argument	1		1165649	2					
ANR	1166054	PrimaryExpression	1		1165649	0					
ANR	1166055	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	1091:1:25311:25368	1165649	3	True				
ANR	1166056	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		1165649	0		=			
ANR	1166057	Identifier	r		1165649	0					
ANR	1166058	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		1165649	1					
ANR	1166059	Callee	compile_tree_empty_check		1165649	0					
ANR	1166060	Identifier	compile_tree_empty_check		1165649	0					
ANR	1166061	ArgumentList	qn -> target		1165649	1					
ANR	1166062	Argument	qn -> target		1165649	0					
ANR	1166063	PtrMemberAccess	qn -> target		1165649	0					
ANR	1166064	Identifier	qn		1165649	0					
ANR	1166065	Identifier	target		1165649	1					
ANR	1166066	Argument	reg		1165649	1					
ANR	1166067	Identifier	reg		1165649	0					
ANR	1166068	Argument	empty_info		1165649	2					
ANR	1166069	Identifier	empty_info		1165649	0					
ANR	1166070	IfStatement	if ( r )		1165649	4					
ANR	1166071	Condition	r	1092:5:25375:25375	1165649	0	True				
ANR	1166072	Identifier	r		1165649	0					
ANR	1166073	ReturnStatement	return r ;	1092:8:25378:25386	1165649	1	True				
ANR	1166074	Identifier	r		1165649	0					
ANR	1166075	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1 ) )"	1093:1:25389:25497	1165649	5	True				
ANR	1166076	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1 ) )"		1165649	0		=			
ANR	1166077	Identifier	r		1165649	0					
ANR	1166078	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1 ) )"		1165649	1					
ANR	1166079	Callee	add_opcode_rel_addr		1165649	0					
ANR	1166080	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1166081	ArgumentList	reg		1165649	1					
ANR	1166082	Argument	reg		1165649	0					
ANR	1166083	Identifier	reg		1165649	0					
ANR	1166084	Argument	OP_JUMP		1165649	1					
ANR	1166085	Identifier	OP_JUMP		1165649	0					
ANR	1166086	Argument	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1 )		1165649	2					
ANR	1166087	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1 )		1165649	0					
ANR	1166088	UnaryOperator	-		1165649	0					
ANR	1166089	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1		1165649	1		+			
ANR	1166090	Identifier	mod_tlen		1165649	0					
ANR	1166091	AdditiveExpression	( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1		1165649	1		+			
ANR	1166092	CastExpression	( int ) SIZE_OP_JUMP		1165649	0					
ANR	1166093	CastTarget	int		1165649	0					
ANR	1166094	Identifier	SIZE_OP_JUMP		1165649	1					
ANR	1166095	CastExpression	( int ) SIZE_OP_PUSH_OR_JUMP_EXACT1		1165649	1					
ANR	1166096	CastTarget	int		1165649	0					
ANR	1166097	Identifier	SIZE_OP_PUSH_OR_JUMP_EXACT1		1165649	1					
ANR	1166098	ElseStatement	else		1165649	0					
ANR	1166099	IfStatement	if ( IS_NOT_NULL ( qn -> next_head_exact ) )		1165649	0					
ANR	1166100	Condition	IS_NOT_NULL ( qn -> next_head_exact )	1096:15:25522:25553	1165649	0	True				
ANR	1166101	CallExpression	IS_NOT_NULL ( qn -> next_head_exact )		1165649	0					
ANR	1166102	Callee	IS_NOT_NULL		1165649	0					
ANR	1166103	Identifier	IS_NOT_NULL		1165649	0					
ANR	1166104	ArgumentList	qn -> next_head_exact		1165649	1					
ANR	1166105	Argument	qn -> next_head_exact		1165649	0					
ANR	1166106	PtrMemberAccess	qn -> next_head_exact		1165649	0					
ANR	1166107	Identifier	qn		1165649	0					
ANR	1166108	Identifier	next_head_exact		1165649	1					
ANR	1166109	CompoundStatement		65:49:2022:2022	1165649	1					
ANR	1166110	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH_IF_PEEK_NEXT , mod_tlen + SIZE_OP_JUMP )"	1097:1:25559:25638	1165649	0	True				
ANR	1166111	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH_IF_PEEK_NEXT , mod_tlen + SIZE_OP_JUMP )"		1165649	0		=			
ANR	1166112	Identifier	r		1165649	0					
ANR	1166113	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH_IF_PEEK_NEXT , mod_tlen + SIZE_OP_JUMP )"		1165649	1					
ANR	1166114	Callee	add_opcode_rel_addr		1165649	0					
ANR	1166115	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1166116	ArgumentList	reg		1165649	1					
ANR	1166117	Argument	reg		1165649	0					
ANR	1166118	Identifier	reg		1165649	0					
ANR	1166119	Argument	OP_PUSH_IF_PEEK_NEXT		1165649	1					
ANR	1166120	Identifier	OP_PUSH_IF_PEEK_NEXT		1165649	0					
ANR	1166121	Argument	mod_tlen + SIZE_OP_JUMP		1165649	2					
ANR	1166122	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		1165649	0		+			
ANR	1166123	Identifier	mod_tlen		1165649	0					
ANR	1166124	Identifier	SIZE_OP_JUMP		1165649	1					
ANR	1166125	IfStatement	if ( r )		1165649	1					
ANR	1166126	Condition	r	1099:5:25645:25645	1165649	0	True				
ANR	1166127	Identifier	r		1165649	0					
ANR	1166128	ReturnStatement	return r ;	1099:8:25648:25656	1165649	1	True				
ANR	1166129	Identifier	r		1165649	0					
ANR	1166130	ExpressionStatement	"add_bytes ( reg , NSTR ( qn -> next_head_exact ) -> s , 1 )"	1100:1:25659:25706	1165649	2	True				
ANR	1166131	CallExpression	"add_bytes ( reg , NSTR ( qn -> next_head_exact ) -> s , 1 )"		1165649	0					
ANR	1166132	Callee	add_bytes		1165649	0					
ANR	1166133	Identifier	add_bytes		1165649	0					
ANR	1166134	ArgumentList	reg		1165649	1					
ANR	1166135	Argument	reg		1165649	0					
ANR	1166136	Identifier	reg		1165649	0					
ANR	1166137	Argument	NSTR ( qn -> next_head_exact ) -> s		1165649	1					
ANR	1166138	PtrMemberAccess	NSTR ( qn -> next_head_exact ) -> s		1165649	0					
ANR	1166139	CallExpression	NSTR ( qn -> next_head_exact )		1165649	0					
ANR	1166140	Callee	NSTR		1165649	0					
ANR	1166141	Identifier	NSTR		1165649	0					
ANR	1166142	ArgumentList	qn -> next_head_exact		1165649	1					
ANR	1166143	Argument	qn -> next_head_exact		1165649	0					
ANR	1166144	PtrMemberAccess	qn -> next_head_exact		1165649	0					
ANR	1166145	Identifier	qn		1165649	0					
ANR	1166146	Identifier	next_head_exact		1165649	1					
ANR	1166147	Identifier	s		1165649	1					
ANR	1166148	Argument	1		1165649	2					
ANR	1166149	PrimaryExpression	1		1165649	0					
ANR	1166150	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	1101:1:25709:25766	1165649	3	True				
ANR	1166151	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		1165649	0		=			
ANR	1166152	Identifier	r		1165649	0					
ANR	1166153	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		1165649	1					
ANR	1166154	Callee	compile_tree_empty_check		1165649	0					
ANR	1166155	Identifier	compile_tree_empty_check		1165649	0					
ANR	1166156	ArgumentList	qn -> target		1165649	1					
ANR	1166157	Argument	qn -> target		1165649	0					
ANR	1166158	PtrMemberAccess	qn -> target		1165649	0					
ANR	1166159	Identifier	qn		1165649	0					
ANR	1166160	Identifier	target		1165649	1					
ANR	1166161	Argument	reg		1165649	1					
ANR	1166162	Identifier	reg		1165649	0					
ANR	1166163	Argument	empty_info		1165649	2					
ANR	1166164	Identifier	empty_info		1165649	0					
ANR	1166165	IfStatement	if ( r )		1165649	4					
ANR	1166166	Condition	r	1102:5:25773:25773	1165649	0	True				
ANR	1166167	Identifier	r		1165649	0					
ANR	1166168	ReturnStatement	return r ;	1102:8:25776:25784	1165649	1	True				
ANR	1166169	Identifier	r		1165649	0					
ANR	1166170	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT ) )"	1103:1:25787:25902	1165649	5	True				
ANR	1166171	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT ) )"		1165649	0		=			
ANR	1166172	Identifier	r		1165649	0					
ANR	1166173	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT ) )"		1165649	1					
ANR	1166174	Callee	add_opcode_rel_addr		1165649	0					
ANR	1166175	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1166176	ArgumentList	reg		1165649	1					
ANR	1166177	Argument	reg		1165649	0					
ANR	1166178	Identifier	reg		1165649	0					
ANR	1166179	Argument	OP_JUMP		1165649	1					
ANR	1166180	Identifier	OP_JUMP		1165649	0					
ANR	1166181	Argument	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT )		1165649	2					
ANR	1166182	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT )		1165649	0					
ANR	1166183	UnaryOperator	-		1165649	0					
ANR	1166184	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT		1165649	1		+			
ANR	1166185	Identifier	mod_tlen		1165649	0					
ANR	1166186	AdditiveExpression	( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH_IF_PEEK_NEXT		1165649	1		+			
ANR	1166187	CastExpression	( int ) SIZE_OP_JUMP		1165649	0					
ANR	1166188	CastTarget	int		1165649	0					
ANR	1166189	Identifier	SIZE_OP_JUMP		1165649	1					
ANR	1166190	CastExpression	( int ) SIZE_OP_PUSH_IF_PEEK_NEXT		1165649	1					
ANR	1166191	CastTarget	int		1165649	0					
ANR	1166192	Identifier	SIZE_OP_PUSH_IF_PEEK_NEXT		1165649	1					
ANR	1166193	ElseStatement	else		1165649	0					
ANR	1166194	CompoundStatement		75:11:2389:2389	1165649	0					
ANR	1166195	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , mod_tlen + SIZE_OP_JUMP )"	1107:1:25926:25988	1165649	0	True				
ANR	1166196	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , mod_tlen + SIZE_OP_JUMP )"		1165649	0		=			
ANR	1166197	Identifier	r		1165649	0					
ANR	1166198	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , mod_tlen + SIZE_OP_JUMP )"		1165649	1					
ANR	1166199	Callee	add_opcode_rel_addr		1165649	0					
ANR	1166200	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1166201	ArgumentList	reg		1165649	1					
ANR	1166202	Argument	reg		1165649	0					
ANR	1166203	Identifier	reg		1165649	0					
ANR	1166204	Argument	OP_PUSH		1165649	1					
ANR	1166205	Identifier	OP_PUSH		1165649	0					
ANR	1166206	Argument	mod_tlen + SIZE_OP_JUMP		1165649	2					
ANR	1166207	AdditiveExpression	mod_tlen + SIZE_OP_JUMP		1165649	0		+			
ANR	1166208	Identifier	mod_tlen		1165649	0					
ANR	1166209	Identifier	SIZE_OP_JUMP		1165649	1					
ANR	1166210	IfStatement	if ( r )		1165649	1					
ANR	1166211	Condition	r	1108:5:25995:25995	1165649	0	True				
ANR	1166212	Identifier	r		1165649	0					
ANR	1166213	ReturnStatement	return r ;	1108:8:25998:26006	1165649	1	True				
ANR	1166214	Identifier	r		1165649	0					
ANR	1166215	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	1109:1:26009:26066	1165649	2	True				
ANR	1166216	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		1165649	0		=			
ANR	1166217	Identifier	r		1165649	0					
ANR	1166218	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		1165649	1					
ANR	1166219	Callee	compile_tree_empty_check		1165649	0					
ANR	1166220	Identifier	compile_tree_empty_check		1165649	0					
ANR	1166221	ArgumentList	qn -> target		1165649	1					
ANR	1166222	Argument	qn -> target		1165649	0					
ANR	1166223	PtrMemberAccess	qn -> target		1165649	0					
ANR	1166224	Identifier	qn		1165649	0					
ANR	1166225	Identifier	target		1165649	1					
ANR	1166226	Argument	reg		1165649	1					
ANR	1166227	Identifier	reg		1165649	0					
ANR	1166228	Argument	empty_info		1165649	2					
ANR	1166229	Identifier	empty_info		1165649	0					
ANR	1166230	IfStatement	if ( r )		1165649	3					
ANR	1166231	Condition	r	1110:5:26073:26073	1165649	0	True				
ANR	1166232	Identifier	r		1165649	0					
ANR	1166233	ReturnStatement	return r ;	1110:8:26076:26084	1165649	1	True				
ANR	1166234	Identifier	r		1165649	0					
ANR	1166235	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH ) )"	1111:1:26087:26186	1165649	4	True				
ANR	1166236	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH ) )"		1165649	0		=			
ANR	1166237	Identifier	r		1165649	0					
ANR	1166238	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , - ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH ) )"		1165649	1					
ANR	1166239	Callee	add_opcode_rel_addr		1165649	0					
ANR	1166240	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1166241	ArgumentList	reg		1165649	1					
ANR	1166242	Argument	reg		1165649	0					
ANR	1166243	Identifier	reg		1165649	0					
ANR	1166244	Argument	OP_JUMP		1165649	1					
ANR	1166245	Identifier	OP_JUMP		1165649	0					
ANR	1166246	Argument	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH )		1165649	2					
ANR	1166247	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH )		1165649	0					
ANR	1166248	UnaryOperator	-		1165649	0					
ANR	1166249	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH		1165649	1		+			
ANR	1166250	Identifier	mod_tlen		1165649	0					
ANR	1166251	AdditiveExpression	( int ) SIZE_OP_JUMP + ( int ) SIZE_OP_PUSH		1165649	1		+			
ANR	1166252	CastExpression	( int ) SIZE_OP_JUMP		1165649	0					
ANR	1166253	CastTarget	int		1165649	0					
ANR	1166254	Identifier	SIZE_OP_JUMP		1165649	1					
ANR	1166255	CastExpression	( int ) SIZE_OP_PUSH		1165649	1					
ANR	1166256	CastTarget	int		1165649	0					
ANR	1166257	Identifier	SIZE_OP_PUSH		1165649	1					
ANR	1166258	ElseStatement	else		1165649	0					
ANR	1166259	CompoundStatement		84:9:2677:2677	1165649	0					
ANR	1166260	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , mod_tlen )"	1116:6:26219:26266	1165649	0	True				
ANR	1166261	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , mod_tlen )"		1165649	0		=			
ANR	1166262	Identifier	r		1165649	0					
ANR	1166263	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , mod_tlen )"		1165649	1					
ANR	1166264	Callee	add_opcode_rel_addr		1165649	0					
ANR	1166265	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1166266	ArgumentList	reg		1165649	1					
ANR	1166267	Argument	reg		1165649	0					
ANR	1166268	Identifier	reg		1165649	0					
ANR	1166269	Argument	OP_JUMP		1165649	1					
ANR	1166270	Identifier	OP_JUMP		1165649	0					
ANR	1166271	Argument	mod_tlen		1165649	2					
ANR	1166272	Identifier	mod_tlen		1165649	0					
ANR	1166273	IfStatement	if ( r )		1165649	1					
ANR	1166274	Condition	r	1117:10:26278:26278	1165649	0	True				
ANR	1166275	Identifier	r		1165649	0					
ANR	1166276	ReturnStatement	return r ;	1117:13:26281:26289	1165649	1	True				
ANR	1166277	Identifier	r		1165649	0					
ANR	1166278	ExpressionStatement	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"	1118:6:26297:26354	1165649	2	True				
ANR	1166279	AssignmentExpression	"r = compile_tree_empty_check ( qn -> target , reg , empty_info )"		1165649	0		=			
ANR	1166280	Identifier	r		1165649	0					
ANR	1166281	CallExpression	"compile_tree_empty_check ( qn -> target , reg , empty_info )"		1165649	1					
ANR	1166282	Callee	compile_tree_empty_check		1165649	0					
ANR	1166283	Identifier	compile_tree_empty_check		1165649	0					
ANR	1166284	ArgumentList	qn -> target		1165649	1					
ANR	1166285	Argument	qn -> target		1165649	0					
ANR	1166286	PtrMemberAccess	qn -> target		1165649	0					
ANR	1166287	Identifier	qn		1165649	0					
ANR	1166288	Identifier	target		1165649	1					
ANR	1166289	Argument	reg		1165649	1					
ANR	1166290	Identifier	reg		1165649	0					
ANR	1166291	Argument	empty_info		1165649	2					
ANR	1166292	Identifier	empty_info		1165649	0					
ANR	1166293	IfStatement	if ( r )		1165649	3					
ANR	1166294	Condition	r	1119:10:26366:26366	1165649	0	True				
ANR	1166295	Identifier	r		1165649	0					
ANR	1166296	ReturnStatement	return r ;	1119:13:26369:26377	1165649	1	True				
ANR	1166297	Identifier	r		1165649	0					
ANR	1166298	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , - ( mod_tlen + ( int ) SIZE_OP_PUSH ) )"	1120:6:26385:26456	1165649	4	True				
ANR	1166299	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , - ( mod_tlen + ( int ) SIZE_OP_PUSH ) )"		1165649	0		=			
ANR	1166300	Identifier	r		1165649	0					
ANR	1166301	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , - ( mod_tlen + ( int ) SIZE_OP_PUSH ) )"		1165649	1					
ANR	1166302	Callee	add_opcode_rel_addr		1165649	0					
ANR	1166303	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1166304	ArgumentList	reg		1165649	1					
ANR	1166305	Argument	reg		1165649	0					
ANR	1166306	Identifier	reg		1165649	0					
ANR	1166307	Argument	OP_PUSH		1165649	1					
ANR	1166308	Identifier	OP_PUSH		1165649	0					
ANR	1166309	Argument	- ( mod_tlen + ( int ) SIZE_OP_PUSH )		1165649	2					
ANR	1166310	UnaryOperationExpression	- ( mod_tlen + ( int ) SIZE_OP_PUSH )		1165649	0					
ANR	1166311	UnaryOperator	-		1165649	0					
ANR	1166312	AdditiveExpression	mod_tlen + ( int ) SIZE_OP_PUSH		1165649	1		+			
ANR	1166313	Identifier	mod_tlen		1165649	0					
ANR	1166314	CastExpression	( int ) SIZE_OP_PUSH		1165649	1					
ANR	1166315	CastTarget	int		1165649	0					
ANR	1166316	Identifier	SIZE_OP_PUSH		1165649	1					
ANR	1166317	ElseStatement	else		1165649	0					
ANR	1166318	IfStatement	if ( qn -> upper == 0 && qn -> is_refered != 0 )		1165649	0					
ANR	1166319	Condition	qn -> upper == 0 && qn -> is_refered != 0	1123:11:26479:26515	1165649	0	True				
ANR	1166320	AndExpression	qn -> upper == 0 && qn -> is_refered != 0		1165649	0		&&			
ANR	1166321	EqualityExpression	qn -> upper == 0		1165649	0		==			
ANR	1166322	PtrMemberAccess	qn -> upper		1165649	0					
ANR	1166323	Identifier	qn		1165649	0					
ANR	1166324	Identifier	upper		1165649	1					
ANR	1166325	PrimaryExpression	0		1165649	1					
ANR	1166326	EqualityExpression	qn -> is_refered != 0		1165649	1		!=			
ANR	1166327	PtrMemberAccess	qn -> is_refered		1165649	0					
ANR	1166328	Identifier	qn		1165649	0					
ANR	1166329	Identifier	is_refered		1165649	1					
ANR	1166330	PrimaryExpression	0		1165649	1					
ANR	1166331	CompoundStatement		92:50:2984:2984	1165649	1					
ANR	1166332	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"	1124:4:26544:26587	1165649	0	True				
ANR	1166333	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		1165649	0		=			
ANR	1166334	Identifier	r		1165649	0					
ANR	1166335	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		1165649	1					
ANR	1166336	Callee	add_opcode_rel_addr		1165649	0					
ANR	1166337	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1166338	ArgumentList	reg		1165649	1					
ANR	1166339	Argument	reg		1165649	0					
ANR	1166340	Identifier	reg		1165649	0					
ANR	1166341	Argument	OP_JUMP		1165649	1					
ANR	1166342	Identifier	OP_JUMP		1165649	0					
ANR	1166343	Argument	tlen		1165649	2					
ANR	1166344	Identifier	tlen		1165649	0					
ANR	1166345	IfStatement	if ( r )		1165649	1					
ANR	1166346	Condition	r	1125:8:26597:26597	1165649	0	True				
ANR	1166347	Identifier	r		1165649	0					
ANR	1166348	ReturnStatement	return r ;	1125:11:26600:26608	1165649	1	True				
ANR	1166349	Identifier	r		1165649	0					
ANR	1166350	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	1126:4:26614:26647	1165649	2	True				
ANR	1166351	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		1165649	0		=			
ANR	1166352	Identifier	r		1165649	0					
ANR	1166353	CallExpression	"compile_tree ( qn -> target , reg )"		1165649	1					
ANR	1166354	Callee	compile_tree		1165649	0					
ANR	1166355	Identifier	compile_tree		1165649	0					
ANR	1166356	ArgumentList	qn -> target		1165649	1					
ANR	1166357	Argument	qn -> target		1165649	0					
ANR	1166358	PtrMemberAccess	qn -> target		1165649	0					
ANR	1166359	Identifier	qn		1165649	0					
ANR	1166360	Identifier	target		1165649	1					
ANR	1166361	Argument	reg		1165649	1					
ANR	1166362	Identifier	reg		1165649	0					
ANR	1166363	ElseStatement	else		1165649	0					
ANR	1166364	IfStatement	if ( ! infinite && qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE ) )		1165649	0					
ANR	1166365	Condition	! infinite && qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE )	1128:11:26664:26820	1165649	0	True				
ANR	1166366	AndExpression	! infinite && qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE )		1165649	0		&&			
ANR	1166367	UnaryOperationExpression	! infinite		1165649	0					
ANR	1166368	UnaryOperator	!		1165649	0					
ANR	1166369	Identifier	infinite		1165649	1					
ANR	1166370	AndExpression	qn -> greedy && ( qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE )		1165649	1		&&			
ANR	1166371	PtrMemberAccess	qn -> greedy		1165649	0					
ANR	1166372	Identifier	qn		1165649	0					
ANR	1166373	Identifier	greedy		1165649	1					
ANR	1166374	OrExpression	qn -> upper == 1 || ( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE		1165649	1		||			
ANR	1166375	EqualityExpression	qn -> upper == 1		1165649	0		==			
ANR	1166376	PtrMemberAccess	qn -> upper		1165649	0					
ANR	1166377	Identifier	qn		1165649	0					
ANR	1166378	Identifier	upper		1165649	1					
ANR	1166379	PrimaryExpression	1		1165649	1					
ANR	1166380	RelationalExpression	( tlen + SIZE_OP_PUSH ) * qn -> upper <= QUANTIFIER_EXPAND_LIMIT_SIZE		1165649	1		<=			
ANR	1166381	MultiplicativeExpression	( tlen + SIZE_OP_PUSH ) * qn -> upper		1165649	0		*			
ANR	1166382	AdditiveExpression	tlen + SIZE_OP_PUSH		1165649	0		+			
ANR	1166383	Identifier	tlen		1165649	0					
ANR	1166384	Identifier	SIZE_OP_PUSH		1165649	1					
ANR	1166385	PtrMemberAccess	qn -> upper		1165649	1					
ANR	1166386	Identifier	qn		1165649	0					
ANR	1166387	Identifier	upper		1165649	1					
ANR	1166388	Identifier	QUANTIFIER_EXPAND_LIMIT_SIZE		1165649	1					
ANR	1166389	CompoundStatement		100:4:3295:3324	1165649	1					
ANR	1166390	IdentifierDeclStatement	int n = qn -> upper - qn -> lower ;	1131:4:26829:26858	1165649	0	True				
ANR	1166391	IdentifierDecl	n = qn -> upper - qn -> lower		1165649	0					
ANR	1166392	IdentifierDeclType	int		1165649	0					
ANR	1166393	Identifier	n		1165649	1					
ANR	1166394	AssignmentExpression	n = qn -> upper - qn -> lower		1165649	2		=			
ANR	1166395	Identifier	n		1165649	0					
ANR	1166396	AdditiveExpression	qn -> upper - qn -> lower		1165649	1		-			
ANR	1166397	PtrMemberAccess	qn -> upper		1165649	0					
ANR	1166398	Identifier	qn		1165649	0					
ANR	1166399	Identifier	upper		1165649	1					
ANR	1166400	PtrMemberAccess	qn -> lower		1165649	1					
ANR	1166401	Identifier	qn		1165649	0					
ANR	1166402	Identifier	lower		1165649	1					
ANR	1166403	ExpressionStatement	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"	1133:4:26865:26917	1165649	1	True				
ANR	1166404	AssignmentExpression	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"		1165649	0		=			
ANR	1166405	Identifier	r		1165649	0					
ANR	1166406	CallExpression	"compile_tree_n_times ( qn -> target , qn -> lower , reg )"		1165649	1					
ANR	1166407	Callee	compile_tree_n_times		1165649	0					
ANR	1166408	Identifier	compile_tree_n_times		1165649	0					
ANR	1166409	ArgumentList	qn -> target		1165649	1					
ANR	1166410	Argument	qn -> target		1165649	0					
ANR	1166411	PtrMemberAccess	qn -> target		1165649	0					
ANR	1166412	Identifier	qn		1165649	0					
ANR	1166413	Identifier	target		1165649	1					
ANR	1166414	Argument	qn -> lower		1165649	1					
ANR	1166415	PtrMemberAccess	qn -> lower		1165649	0					
ANR	1166416	Identifier	qn		1165649	0					
ANR	1166417	Identifier	lower		1165649	1					
ANR	1166418	Argument	reg		1165649	2					
ANR	1166419	Identifier	reg		1165649	0					
ANR	1166420	IfStatement	if ( r )		1165649	2					
ANR	1166421	Condition	r	1134:8:26927:26927	1165649	0	True				
ANR	1166422	Identifier	r		1165649	0					
ANR	1166423	ReturnStatement	return r ;	1134:11:26930:26938	1165649	1	True				
ANR	1166424	Identifier	r		1165649	0					
ANR	1166425	ForStatement	for ( i = 0 ; i < n ; i ++ )		1165649	3					
ANR	1166426	ForInit	i = 0 ;	1136:9:26950:26955	1165649	0	True				
ANR	1166427	AssignmentExpression	i = 0		1165649	0		=			
ANR	1166428	Identifier	i		1165649	0					
ANR	1166429	PrimaryExpression	0		1165649	1					
ANR	1166430	Condition	i < n	1136:16:26957:26961	1165649	1	True				
ANR	1166431	RelationalExpression	i < n		1165649	0		<			
ANR	1166432	Identifier	i		1165649	0					
ANR	1166433	Identifier	n		1165649	1					
ANR	1166434	PostIncDecOperationExpression	i ++	1136:23:26964:26966	1165649	2	True				
ANR	1166435	Identifier	i		1165649	0					
ANR	1166436	IncDec	++		1165649	1					
ANR	1166437	CompoundStatement		105:28:3435:3435	1165649	3					
ANR	1166438	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , ( n - i ) * tlen + ( n - i - 1 ) * SIZE_OP_PUSH )"	1137:6:26977:27065	1165649	0	True				
ANR	1166439	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , ( n - i ) * tlen + ( n - i - 1 ) * SIZE_OP_PUSH )"		1165649	0		=			
ANR	1166440	Identifier	r		1165649	0					
ANR	1166441	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , ( n - i ) * tlen + ( n - i - 1 ) * SIZE_OP_PUSH )"		1165649	1					
ANR	1166442	Callee	add_opcode_rel_addr		1165649	0					
ANR	1166443	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1166444	ArgumentList	reg		1165649	1					
ANR	1166445	Argument	reg		1165649	0					
ANR	1166446	Identifier	reg		1165649	0					
ANR	1166447	Argument	OP_PUSH		1165649	1					
ANR	1166448	Identifier	OP_PUSH		1165649	0					
ANR	1166449	Argument	( n - i ) * tlen + ( n - i - 1 ) * SIZE_OP_PUSH		1165649	2					
ANR	1166450	AdditiveExpression	( n - i ) * tlen + ( n - i - 1 ) * SIZE_OP_PUSH		1165649	0		+			
ANR	1166451	MultiplicativeExpression	( n - i ) * tlen		1165649	0		*			
ANR	1166452	AdditiveExpression	n - i		1165649	0		-			
ANR	1166453	Identifier	n		1165649	0					
ANR	1166454	Identifier	i		1165649	1					
ANR	1166455	Identifier	tlen		1165649	1					
ANR	1166456	MultiplicativeExpression	( n - i - 1 ) * SIZE_OP_PUSH		1165649	1		*			
ANR	1166457	AdditiveExpression	n - i - 1		1165649	0		-			
ANR	1166458	Identifier	n		1165649	0					
ANR	1166459	AdditiveExpression	i - 1		1165649	1		-			
ANR	1166460	Identifier	i		1165649	0					
ANR	1166461	PrimaryExpression	1		1165649	1					
ANR	1166462	Identifier	SIZE_OP_PUSH		1165649	1					
ANR	1166463	IfStatement	if ( r )		1165649	1					
ANR	1166464	Condition	r	1139:10:27077:27077	1165649	0	True				
ANR	1166465	Identifier	r		1165649	0					
ANR	1166466	ReturnStatement	return r ;	1139:13:27080:27088	1165649	1	True				
ANR	1166467	Identifier	r		1165649	0					
ANR	1166468	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	1140:6:27096:27129	1165649	2	True				
ANR	1166469	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		1165649	0		=			
ANR	1166470	Identifier	r		1165649	0					
ANR	1166471	CallExpression	"compile_tree ( qn -> target , reg )"		1165649	1					
ANR	1166472	Callee	compile_tree		1165649	0					
ANR	1166473	Identifier	compile_tree		1165649	0					
ANR	1166474	ArgumentList	qn -> target		1165649	1					
ANR	1166475	Argument	qn -> target		1165649	0					
ANR	1166476	PtrMemberAccess	qn -> target		1165649	0					
ANR	1166477	Identifier	qn		1165649	0					
ANR	1166478	Identifier	target		1165649	1					
ANR	1166479	Argument	reg		1165649	1					
ANR	1166480	Identifier	reg		1165649	0					
ANR	1166481	IfStatement	if ( r )		1165649	3					
ANR	1166482	Condition	r	1141:10:27141:27141	1165649	0	True				
ANR	1166483	Identifier	r		1165649	0					
ANR	1166484	ReturnStatement	return r ;	1141:13:27144:27152	1165649	1	True				
ANR	1166485	Identifier	r		1165649	0					
ANR	1166486	ElseStatement	else		1165649	0					
ANR	1166487	IfStatement	if ( ! qn -> greedy && qn -> upper == 1 && qn -> lower == 0 )		1165649	0					
ANR	1166488	Condition	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0	1144:11:27175:27221	1165649	0	True				
ANR	1166489	AndExpression	! qn -> greedy && qn -> upper == 1 && qn -> lower == 0		1165649	0		&&			
ANR	1166490	UnaryOperationExpression	! qn -> greedy		1165649	0					
ANR	1166491	UnaryOperator	!		1165649	0					
ANR	1166492	PtrMemberAccess	qn -> greedy		1165649	1					
ANR	1166493	Identifier	qn		1165649	0					
ANR	1166494	Identifier	greedy		1165649	1					
ANR	1166495	AndExpression	qn -> upper == 1 && qn -> lower == 0		1165649	1		&&			
ANR	1166496	EqualityExpression	qn -> upper == 1		1165649	0		==			
ANR	1166497	PtrMemberAccess	qn -> upper		1165649	0					
ANR	1166498	Identifier	qn		1165649	0					
ANR	1166499	Identifier	upper		1165649	1					
ANR	1166500	PrimaryExpression	1		1165649	1					
ANR	1166501	EqualityExpression	qn -> lower == 0		1165649	1		==			
ANR	1166502	PtrMemberAccess	qn -> lower		1165649	0					
ANR	1166503	Identifier	qn		1165649	0					
ANR	1166504	Identifier	lower		1165649	1					
ANR	1166505	PrimaryExpression	0		1165649	1					
ANR	1166506	CompoundStatement		113:60:3690:3690	1165649	1					
ANR	1166507	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , SIZE_OP_JUMP )"	1145:4:27241:27292	1165649	0	True				
ANR	1166508	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , SIZE_OP_JUMP )"		1165649	0		=			
ANR	1166509	Identifier	r		1165649	0					
ANR	1166510	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , SIZE_OP_JUMP )"		1165649	1					
ANR	1166511	Callee	add_opcode_rel_addr		1165649	0					
ANR	1166512	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1166513	ArgumentList	reg		1165649	1					
ANR	1166514	Argument	reg		1165649	0					
ANR	1166515	Identifier	reg		1165649	0					
ANR	1166516	Argument	OP_PUSH		1165649	1					
ANR	1166517	Identifier	OP_PUSH		1165649	0					
ANR	1166518	Argument	SIZE_OP_JUMP		1165649	2					
ANR	1166519	Identifier	SIZE_OP_JUMP		1165649	0					
ANR	1166520	IfStatement	if ( r )		1165649	1					
ANR	1166521	Condition	r	1146:8:27302:27302	1165649	0	True				
ANR	1166522	Identifier	r		1165649	0					
ANR	1166523	ReturnStatement	return r ;	1146:11:27305:27313	1165649	1	True				
ANR	1166524	Identifier	r		1165649	0					
ANR	1166525	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"	1147:4:27319:27362	1165649	2	True				
ANR	1166526	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		1165649	0		=			
ANR	1166527	Identifier	r		1165649	0					
ANR	1166528	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , tlen )"		1165649	1					
ANR	1166529	Callee	add_opcode_rel_addr		1165649	0					
ANR	1166530	Identifier	add_opcode_rel_addr		1165649	0					
ANR	1166531	ArgumentList	reg		1165649	1					
ANR	1166532	Argument	reg		1165649	0					
ANR	1166533	Identifier	reg		1165649	0					
ANR	1166534	Argument	OP_JUMP		1165649	1					
ANR	1166535	Identifier	OP_JUMP		1165649	0					
ANR	1166536	Argument	tlen		1165649	2					
ANR	1166537	Identifier	tlen		1165649	0					
ANR	1166538	IfStatement	if ( r )		1165649	3					
ANR	1166539	Condition	r	1148:8:27372:27372	1165649	0	True				
ANR	1166540	Identifier	r		1165649	0					
ANR	1166541	ReturnStatement	return r ;	1148:11:27375:27383	1165649	1	True				
ANR	1166542	Identifier	r		1165649	0					
ANR	1166543	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	1149:4:27389:27422	1165649	4	True				
ANR	1166544	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		1165649	0		=			
ANR	1166545	Identifier	r		1165649	0					
ANR	1166546	CallExpression	"compile_tree ( qn -> target , reg )"		1165649	1					
ANR	1166547	Callee	compile_tree		1165649	0					
ANR	1166548	Identifier	compile_tree		1165649	0					
ANR	1166549	ArgumentList	qn -> target		1165649	1					
ANR	1166550	Argument	qn -> target		1165649	0					
ANR	1166551	PtrMemberAccess	qn -> target		1165649	0					
ANR	1166552	Identifier	qn		1165649	0					
ANR	1166553	Identifier	target		1165649	1					
ANR	1166554	Argument	reg		1165649	1					
ANR	1166555	Identifier	reg		1165649	0					
ANR	1166556	ElseStatement	else		1165649	0					
ANR	1166557	CompoundStatement		120:7:3901:3901	1165649	0					
ANR	1166558	ExpressionStatement	"r = compile_range_repeat_node ( qn , mod_tlen , empty_info , reg )"	1152:4:27441:27501	1165649	0	True				
ANR	1166559	AssignmentExpression	"r = compile_range_repeat_node ( qn , mod_tlen , empty_info , reg )"		1165649	0		=			
ANR	1166560	Identifier	r		1165649	0					
ANR	1166561	CallExpression	"compile_range_repeat_node ( qn , mod_tlen , empty_info , reg )"		1165649	1					
ANR	1166562	Callee	compile_range_repeat_node		1165649	0					
ANR	1166563	Identifier	compile_range_repeat_node		1165649	0					
ANR	1166564	ArgumentList	qn		1165649	1					
ANR	1166565	Argument	qn		1165649	0					
ANR	1166566	Identifier	qn		1165649	0					
ANR	1166567	Argument	mod_tlen		1165649	1					
ANR	1166568	Identifier	mod_tlen		1165649	0					
ANR	1166569	Argument	empty_info		1165649	2					
ANR	1166570	Identifier	empty_info		1165649	0					
ANR	1166571	Argument	reg		1165649	3					
ANR	1166572	Identifier	reg		1165649	0					
ANR	1166573	ReturnStatement	return r ;	1154:2:27509:27517	1165649	8	True				
ANR	1166574	Identifier	r		1165649	0					
ANR	1166575	ReturnType	static int		1165649	1					
ANR	1166576	Identifier	compile_quantifier_node		1165649	2					
ANR	1166577	ParameterList	"QtfrNode * qn , regex_t * reg"		1165649	3					
ANR	1166578	Parameter	QtfrNode * qn	1031:24:23505:23516	1165649	0	True				
ANR	1166579	ParameterType	QtfrNode *		1165649	0					
ANR	1166580	Identifier	qn		1165649	1					
ANR	1166581	Parameter	regex_t * reg	1031:38:23519:23530	1165649	1	True				
ANR	1166582	ParameterType	regex_t *		1165649	0					
ANR	1166583	Identifier	reg		1165649	1					
ANR	1166584	CFGEntryNode	ENTRY		1165649		True				
ANR	1166585	CFGExitNode	EXIT		1165649		True				
ANR	1166586	Symbol	OP_ANYCHAR_STAR_PEEK_NEXT		1165649						
ANR	1166587	Symbol	compile_range_repeat_node		1165649						
ANR	1166588	Symbol	OP_ANYCHAR_ML_STAR_PEEK_NEXT		1165649						
ANR	1166589	Symbol	reg		1165649						
ANR	1166590	Symbol	reg -> options		1165649						
ANR	1166591	Symbol	tlen		1165649						
ANR	1166592	Symbol	OP_ANYCHAR_STAR		1165649						
ANR	1166593	Symbol	IS_REPEAT_INFINITE		1165649						
ANR	1166594	Symbol	add_opcode		1165649						
ANR	1166595	Symbol	SIZE_OP_NULL_CHECK_START		1165649						
ANR	1166596	Symbol	SIZE_OP_PUSH_IF_PEEK_NEXT		1165649						
ANR	1166597	Symbol	qn		1165649						
ANR	1166598	Symbol	SIZE_OP_JUMP		1165649						
ANR	1166599	Symbol	OP_JUMP		1165649						
ANR	1166600	Symbol	OP_ANYCHAR_ML_STAR		1165649						
ANR	1166601	Symbol	NSTR		1165649						
ANR	1166602	Symbol	* NSTR		1165649						
ANR	1166603	Symbol	qn -> target		1165649						
ANR	1166604	Symbol	OP_PUSH_OR_JUMP_EXACT1		1165649						
ANR	1166605	Symbol	qn -> upper		1165649						
ANR	1166606	Symbol	OP_PUSH_IF_PEEK_NEXT		1165649						
ANR	1166607	Symbol	qn -> is_refered		1165649						
ANR	1166608	Symbol	NSTR ( qn -> next_head_exact ) -> s		1165649						
ANR	1166609	Symbol	NSTR ( qn -> head_exact ) -> s		1165649						
ANR	1166610	Symbol	empty_info		1165649						
ANR	1166611	Symbol	SIZE_OP_PUSH_OR_JUMP_EXACT1		1165649						
ANR	1166612	Symbol	* qn		1165649						
ANR	1166613	Symbol	qn -> target_empty_info		1165649						
ANR	1166614	Symbol	add_bytes		1165649						
ANR	1166615	Symbol	qn -> greedy		1165649						
ANR	1166616	Symbol	IS_NOT_NULL		1165649						
ANR	1166617	Symbol	infinite		1165649						
ANR	1166618	Symbol	compile_tree_n_times		1165649						
ANR	1166619	Symbol	OP_PUSH		1165649						
ANR	1166620	Symbol	compile_tree_empty_check		1165649						
ANR	1166621	Symbol	qn -> next_head_exact		1165649						
ANR	1166622	Symbol	SIZE_OP_NULL_CHECK_END		1165649						
ANR	1166623	Symbol	qn -> lower		1165649						
ANR	1166624	Symbol	add_opcode_rel_addr		1165649						
ANR	1166625	Symbol	compile_length_tree		1165649						
ANR	1166626	Symbol	i		1165649						
ANR	1166627	Symbol	SIZE_OP_PUSH		1165649						
ANR	1166628	Symbol	is_anychar_star_quantifier		1165649						
ANR	1166629	Symbol	qn -> head_exact		1165649						
ANR	1166630	Symbol	n		1165649						
ANR	1166631	Symbol	r		1165649						
ANR	1166632	Symbol	QUANTIFIER_EXPAND_LIMIT_SIZE		1165649						
ANR	1166633	Symbol	compile_tree		1165649						
ANR	1166634	Symbol	mod_tlen		1165649						
ANR	1166635	Symbol	IS_MULTILINE		1165649						
ANR	1166636	Symbol	* reg		1165649						
ANR	1166637	Function	compile_length_option_node	1158:0:27567:28012							
ANR	1166638	FunctionDef	"compile_length_option_node (EncloseNode * node , regex_t * reg)"		1166637	0					
ANR	1166639	CompoundStatement		1160:0:27638:28012	1166637	0					
ANR	1166640	IdentifierDeclStatement	int tlen ;	1161:2:27642:27650	1166637	0	True				
ANR	1166641	IdentifierDecl	tlen		1166637	0					
ANR	1166642	IdentifierDeclType	int		1166637	0					
ANR	1166643	Identifier	tlen		1166637	1					
ANR	1166644	IdentifierDeclStatement	OnigOptionType prev = reg -> options ;	1162:2:27654:27688	1166637	1	True				
ANR	1166645	IdentifierDecl	prev = reg -> options		1166637	0					
ANR	1166646	IdentifierDeclType	OnigOptionType		1166637	0					
ANR	1166647	Identifier	prev		1166637	1					
ANR	1166648	AssignmentExpression	prev = reg -> options		1166637	2		=			
ANR	1166649	Identifier	prev		1166637	0					
ANR	1166650	PtrMemberAccess	reg -> options		1166637	1					
ANR	1166651	Identifier	reg		1166637	0					
ANR	1166652	Identifier	options		1166637	1					
ANR	1166653	ExpressionStatement	reg -> options = node -> option	1164:2:27693:27720	1166637	2	True				
ANR	1166654	AssignmentExpression	reg -> options = node -> option		1166637	0		=			
ANR	1166655	PtrMemberAccess	reg -> options		1166637	0					
ANR	1166656	Identifier	reg		1166637	0					
ANR	1166657	Identifier	options		1166637	1					
ANR	1166658	PtrMemberAccess	node -> option		1166637	1					
ANR	1166659	Identifier	node		1166637	0					
ANR	1166660	Identifier	option		1166637	1					
ANR	1166661	ExpressionStatement	"tlen = compile_length_tree ( node -> target , reg )"	1165:2:27724:27769	1166637	3	True				
ANR	1166662	AssignmentExpression	"tlen = compile_length_tree ( node -> target , reg )"		1166637	0		=			
ANR	1166663	Identifier	tlen		1166637	0					
ANR	1166664	CallExpression	"compile_length_tree ( node -> target , reg )"		1166637	1					
ANR	1166665	Callee	compile_length_tree		1166637	0					
ANR	1166666	Identifier	compile_length_tree		1166637	0					
ANR	1166667	ArgumentList	node -> target		1166637	1					
ANR	1166668	Argument	node -> target		1166637	0					
ANR	1166669	PtrMemberAccess	node -> target		1166637	0					
ANR	1166670	Identifier	node		1166637	0					
ANR	1166671	Identifier	target		1166637	1					
ANR	1166672	Argument	reg		1166637	1					
ANR	1166673	Identifier	reg		1166637	0					
ANR	1166674	ExpressionStatement	reg -> options = prev	1166:2:27773:27792	1166637	4	True				
ANR	1166675	AssignmentExpression	reg -> options = prev		1166637	0		=			
ANR	1166676	PtrMemberAccess	reg -> options		1166637	0					
ANR	1166677	Identifier	reg		1166637	0					
ANR	1166678	Identifier	options		1166637	1					
ANR	1166679	Identifier	prev		1166637	1					
ANR	1166680	IfStatement	if ( tlen < 0 )		1166637	5					
ANR	1166681	Condition	tlen < 0	1168:6:27801:27808	1166637	0	True				
ANR	1166682	RelationalExpression	tlen < 0		1166637	0		<			
ANR	1166683	Identifier	tlen		1166637	0					
ANR	1166684	PrimaryExpression	0		1166637	1					
ANR	1166685	ReturnStatement	return tlen ;	1168:16:27811:27822	1166637	1	True				
ANR	1166686	Identifier	tlen		1166637	0					
ANR	1166687	IfStatement	if ( IS_DYNAMIC_OPTION ( prev ^ node -> option ) )		1166637	6					
ANR	1166688	Condition	IS_DYNAMIC_OPTION ( prev ^ node -> option )	1170:6:27831:27868	1166637	0	True				
ANR	1166689	CallExpression	IS_DYNAMIC_OPTION ( prev ^ node -> option )		1166637	0					
ANR	1166690	Callee	IS_DYNAMIC_OPTION		1166637	0					
ANR	1166691	Identifier	IS_DYNAMIC_OPTION		1166637	0					
ANR	1166692	ArgumentList	prev ^ node -> option		1166637	1					
ANR	1166693	Argument	prev ^ node -> option		1166637	0					
ANR	1166694	ExclusiveOrExpression	prev ^ node -> option		1166637	0		^			
ANR	1166695	Identifier	prev		1166637	0					
ANR	1166696	PtrMemberAccess	node -> option		1166637	1					
ANR	1166697	Identifier	node		1166637	0					
ANR	1166698	Identifier	option		1166637	1					
ANR	1166699	CompoundStatement		11:46:232:232	1166637	1					
ANR	1166700	ReturnStatement	return SIZE_OP_SET_OPTION_PUSH + SIZE_OP_SET_OPTION + SIZE_OP_FAIL + tlen + SIZE_OP_SET_OPTION ;	1171:4:27877:27982	1166637	0	True				
ANR	1166701	AdditiveExpression	SIZE_OP_SET_OPTION_PUSH + SIZE_OP_SET_OPTION + SIZE_OP_FAIL + tlen + SIZE_OP_SET_OPTION		1166637	0		+			
ANR	1166702	Identifier	SIZE_OP_SET_OPTION_PUSH		1166637	0					
ANR	1166703	AdditiveExpression	SIZE_OP_SET_OPTION + SIZE_OP_FAIL + tlen + SIZE_OP_SET_OPTION		1166637	1		+			
ANR	1166704	Identifier	SIZE_OP_SET_OPTION		1166637	0					
ANR	1166705	AdditiveExpression	SIZE_OP_FAIL + tlen + SIZE_OP_SET_OPTION		1166637	1		+			
ANR	1166706	Identifier	SIZE_OP_FAIL		1166637	0					
ANR	1166707	AdditiveExpression	tlen + SIZE_OP_SET_OPTION		1166637	1		+			
ANR	1166708	Identifier	tlen		1166637	0					
ANR	1166709	Identifier	SIZE_OP_SET_OPTION		1166637	1					
ANR	1166710	ElseStatement	else		1166637	0					
ANR	1166711	ReturnStatement	return tlen ;	1175:4:27999:28010	1166637	0	True				
ANR	1166712	Identifier	tlen		1166637	0					
ANR	1166713	ReturnType	static int		1166637	1					
ANR	1166714	Identifier	compile_length_option_node		1166637	2					
ANR	1166715	ParameterList	"EncloseNode * node , regex_t * reg"		1166637	3					
ANR	1166716	Parameter	EncloseNode * node	1159:27:27605:27621	1166637	0	True				
ANR	1166717	ParameterType	EncloseNode *		1166637	0					
ANR	1166718	Identifier	node		1166637	1					
ANR	1166719	Parameter	regex_t * reg	1159:46:27624:27635	1166637	1	True				
ANR	1166720	ParameterType	regex_t *		1166637	0					
ANR	1166721	Identifier	reg		1166637	1					
ANR	1166722	CFGEntryNode	ENTRY		1166637		True				
ANR	1166723	CFGExitNode	EXIT		1166637		True				
ANR	1166724	Symbol	compile_length_tree		1166637						
ANR	1166725	Symbol	prev		1166637						
ANR	1166726	Symbol	node -> option		1166637						
ANR	1166727	Symbol	SIZE_OP_SET_OPTION		1166637						
ANR	1166728	Symbol	IS_DYNAMIC_OPTION		1166637						
ANR	1166729	Symbol	SIZE_OP_FAIL		1166637						
ANR	1166730	Symbol	node		1166637						
ANR	1166731	Symbol	reg		1166637						
ANR	1166732	Symbol	reg -> options		1166637						
ANR	1166733	Symbol	tlen		1166637						
ANR	1166734	Symbol	SIZE_OP_SET_OPTION_PUSH		1166637						
ANR	1166735	Symbol	* node		1166637						
ANR	1166736	Symbol	node -> target		1166637						
ANR	1166737	Symbol	* reg		1166637						
ANR	1166738	Function	compile_option_node	1178:0:28015:28630							
ANR	1166739	FunctionDef	"compile_option_node (EncloseNode * node , regex_t * reg)"		1166738	0					
ANR	1166740	CompoundStatement		1180:0:28079:28630	1166738	0					
ANR	1166741	IdentifierDeclStatement	int r ;	1181:2:28083:28088	1166738	0	True				
ANR	1166742	IdentifierDecl	r		1166738	0					
ANR	1166743	IdentifierDeclType	int		1166738	0					
ANR	1166744	Identifier	r		1166738	1					
ANR	1166745	IdentifierDeclStatement	OnigOptionType prev = reg -> options ;	1182:2:28092:28126	1166738	1	True				
ANR	1166746	IdentifierDecl	prev = reg -> options		1166738	0					
ANR	1166747	IdentifierDeclType	OnigOptionType		1166738	0					
ANR	1166748	Identifier	prev		1166738	1					
ANR	1166749	AssignmentExpression	prev = reg -> options		1166738	2		=			
ANR	1166750	Identifier	prev		1166738	0					
ANR	1166751	PtrMemberAccess	reg -> options		1166738	1					
ANR	1166752	Identifier	reg		1166738	0					
ANR	1166753	Identifier	options		1166738	1					
ANR	1166754	IfStatement	if ( IS_DYNAMIC_OPTION ( prev ^ node -> option ) )		1166738	2					
ANR	1166755	Condition	IS_DYNAMIC_OPTION ( prev ^ node -> option )	1184:6:28135:28172	1166738	0	True				
ANR	1166756	CallExpression	IS_DYNAMIC_OPTION ( prev ^ node -> option )		1166738	0					
ANR	1166757	Callee	IS_DYNAMIC_OPTION		1166738	0					
ANR	1166758	Identifier	IS_DYNAMIC_OPTION		1166738	0					
ANR	1166759	ArgumentList	prev ^ node -> option		1166738	1					
ANR	1166760	Argument	prev ^ node -> option		1166738	0					
ANR	1166761	ExclusiveOrExpression	prev ^ node -> option		1166738	0		^			
ANR	1166762	Identifier	prev		1166738	0					
ANR	1166763	PtrMemberAccess	node -> option		1166738	1					
ANR	1166764	Identifier	node		1166738	0					
ANR	1166765	Identifier	option		1166738	1					
ANR	1166766	CompoundStatement		5:46:95:95	1166738	1					
ANR	1166767	ExpressionStatement	"r = add_opcode_option ( reg , OP_SET_OPTION_PUSH , node -> option )"	1185:4:28181:28241	1166738	0	True				
ANR	1166768	AssignmentExpression	"r = add_opcode_option ( reg , OP_SET_OPTION_PUSH , node -> option )"		1166738	0		=			
ANR	1166769	Identifier	r		1166738	0					
ANR	1166770	CallExpression	"add_opcode_option ( reg , OP_SET_OPTION_PUSH , node -> option )"		1166738	1					
ANR	1166771	Callee	add_opcode_option		1166738	0					
ANR	1166772	Identifier	add_opcode_option		1166738	0					
ANR	1166773	ArgumentList	reg		1166738	1					
ANR	1166774	Argument	reg		1166738	0					
ANR	1166775	Identifier	reg		1166738	0					
ANR	1166776	Argument	OP_SET_OPTION_PUSH		1166738	1					
ANR	1166777	Identifier	OP_SET_OPTION_PUSH		1166738	0					
ANR	1166778	Argument	node -> option		1166738	2					
ANR	1166779	PtrMemberAccess	node -> option		1166738	0					
ANR	1166780	Identifier	node		1166738	0					
ANR	1166781	Identifier	option		1166738	1					
ANR	1166782	IfStatement	if ( r )		1166738	1					
ANR	1166783	Condition	r	1186:8:28251:28251	1166738	0	True				
ANR	1166784	Identifier	r		1166738	0					
ANR	1166785	ReturnStatement	return r ;	1186:11:28254:28262	1166738	1	True				
ANR	1166786	Identifier	r		1166738	0					
ANR	1166787	ExpressionStatement	"r = add_opcode_option ( reg , OP_SET_OPTION , prev )"	1187:4:28268:28315	1166738	2	True				
ANR	1166788	AssignmentExpression	"r = add_opcode_option ( reg , OP_SET_OPTION , prev )"		1166738	0		=			
ANR	1166789	Identifier	r		1166738	0					
ANR	1166790	CallExpression	"add_opcode_option ( reg , OP_SET_OPTION , prev )"		1166738	1					
ANR	1166791	Callee	add_opcode_option		1166738	0					
ANR	1166792	Identifier	add_opcode_option		1166738	0					
ANR	1166793	ArgumentList	reg		1166738	1					
ANR	1166794	Argument	reg		1166738	0					
ANR	1166795	Identifier	reg		1166738	0					
ANR	1166796	Argument	OP_SET_OPTION		1166738	1					
ANR	1166797	Identifier	OP_SET_OPTION		1166738	0					
ANR	1166798	Argument	prev		1166738	2					
ANR	1166799	Identifier	prev		1166738	0					
ANR	1166800	IfStatement	if ( r )		1166738	3					
ANR	1166801	Condition	r	1188:8:28325:28325	1166738	0	True				
ANR	1166802	Identifier	r		1166738	0					
ANR	1166803	ReturnStatement	return r ;	1188:11:28328:28336	1166738	1	True				
ANR	1166804	Identifier	r		1166738	0					
ANR	1166805	ExpressionStatement	"r = add_opcode ( reg , OP_FAIL )"	1189:4:28342:28370	1166738	4	True				
ANR	1166806	AssignmentExpression	"r = add_opcode ( reg , OP_FAIL )"		1166738	0		=			
ANR	1166807	Identifier	r		1166738	0					
ANR	1166808	CallExpression	"add_opcode ( reg , OP_FAIL )"		1166738	1					
ANR	1166809	Callee	add_opcode		1166738	0					
ANR	1166810	Identifier	add_opcode		1166738	0					
ANR	1166811	ArgumentList	reg		1166738	1					
ANR	1166812	Argument	reg		1166738	0					
ANR	1166813	Identifier	reg		1166738	0					
ANR	1166814	Argument	OP_FAIL		1166738	1					
ANR	1166815	Identifier	OP_FAIL		1166738	0					
ANR	1166816	IfStatement	if ( r )		1166738	5					
ANR	1166817	Condition	r	1190:8:28380:28380	1166738	0	True				
ANR	1166818	Identifier	r		1166738	0					
ANR	1166819	ReturnStatement	return r ;	1190:11:28383:28391	1166738	1	True				
ANR	1166820	Identifier	r		1166738	0					
ANR	1166821	ExpressionStatement	reg -> options = node -> option	1193:2:28400:28427	1166738	3	True				
ANR	1166822	AssignmentExpression	reg -> options = node -> option		1166738	0		=			
ANR	1166823	PtrMemberAccess	reg -> options		1166738	0					
ANR	1166824	Identifier	reg		1166738	0					
ANR	1166825	Identifier	options		1166738	1					
ANR	1166826	PtrMemberAccess	node -> option		1166738	1					
ANR	1166827	Identifier	node		1166738	0					
ANR	1166828	Identifier	option		1166738	1					
ANR	1166829	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1194:2:28431:28466	1166738	4	True				
ANR	1166830	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		1166738	0		=			
ANR	1166831	Identifier	r		1166738	0					
ANR	1166832	CallExpression	"compile_tree ( node -> target , reg )"		1166738	1					
ANR	1166833	Callee	compile_tree		1166738	0					
ANR	1166834	Identifier	compile_tree		1166738	0					
ANR	1166835	ArgumentList	node -> target		1166738	1					
ANR	1166836	Argument	node -> target		1166738	0					
ANR	1166837	PtrMemberAccess	node -> target		1166738	0					
ANR	1166838	Identifier	node		1166738	0					
ANR	1166839	Identifier	target		1166738	1					
ANR	1166840	Argument	reg		1166738	1					
ANR	1166841	Identifier	reg		1166738	0					
ANR	1166842	ExpressionStatement	reg -> options = prev	1195:2:28470:28489	1166738	5	True				
ANR	1166843	AssignmentExpression	reg -> options = prev		1166738	0		=			
ANR	1166844	PtrMemberAccess	reg -> options		1166738	0					
ANR	1166845	Identifier	reg		1166738	0					
ANR	1166846	Identifier	options		1166738	1					
ANR	1166847	Identifier	prev		1166738	1					
ANR	1166848	IfStatement	if ( IS_DYNAMIC_OPTION ( prev ^ node -> option ) )		1166738	6					
ANR	1166849	Condition	IS_DYNAMIC_OPTION ( prev ^ node -> option )	1197:6:28498:28535	1166738	0	True				
ANR	1166850	CallExpression	IS_DYNAMIC_OPTION ( prev ^ node -> option )		1166738	0					
ANR	1166851	Callee	IS_DYNAMIC_OPTION		1166738	0					
ANR	1166852	Identifier	IS_DYNAMIC_OPTION		1166738	0					
ANR	1166853	ArgumentList	prev ^ node -> option		1166738	1					
ANR	1166854	Argument	prev ^ node -> option		1166738	0					
ANR	1166855	ExclusiveOrExpression	prev ^ node -> option		1166738	0		^			
ANR	1166856	Identifier	prev		1166738	0					
ANR	1166857	PtrMemberAccess	node -> option		1166738	1					
ANR	1166858	Identifier	node		1166738	0					
ANR	1166859	Identifier	option		1166738	1					
ANR	1166860	CompoundStatement		18:46:458:458	1166738	1					
ANR	1166861	IfStatement	if ( r )		1166738	0					
ANR	1166862	Condition	r	1198:8:28548:28548	1166738	0	True				
ANR	1166863	Identifier	r		1166738	0					
ANR	1166864	ReturnStatement	return r ;	1198:11:28551:28559	1166738	1	True				
ANR	1166865	Identifier	r		1166738	0					
ANR	1166866	ExpressionStatement	"r = add_opcode_option ( reg , OP_SET_OPTION , prev )"	1199:4:28565:28612	1166738	1	True				
ANR	1166867	AssignmentExpression	"r = add_opcode_option ( reg , OP_SET_OPTION , prev )"		1166738	0		=			
ANR	1166868	Identifier	r		1166738	0					
ANR	1166869	CallExpression	"add_opcode_option ( reg , OP_SET_OPTION , prev )"		1166738	1					
ANR	1166870	Callee	add_opcode_option		1166738	0					
ANR	1166871	Identifier	add_opcode_option		1166738	0					
ANR	1166872	ArgumentList	reg		1166738	1					
ANR	1166873	Argument	reg		1166738	0					
ANR	1166874	Identifier	reg		1166738	0					
ANR	1166875	Argument	OP_SET_OPTION		1166738	1					
ANR	1166876	Identifier	OP_SET_OPTION		1166738	0					
ANR	1166877	Argument	prev		1166738	2					
ANR	1166878	Identifier	prev		1166738	0					
ANR	1166879	ReturnStatement	return r ;	1201:2:28620:28628	1166738	7	True				
ANR	1166880	Identifier	r		1166738	0					
ANR	1166881	ReturnType	static int		1166738	1					
ANR	1166882	Identifier	compile_option_node		1166738	2					
ANR	1166883	ParameterList	"EncloseNode * node , regex_t * reg"		1166738	3					
ANR	1166884	Parameter	EncloseNode * node	1179:20:28046:28062	1166738	0	True				
ANR	1166885	ParameterType	EncloseNode *		1166738	0					
ANR	1166886	Identifier	node		1166738	1					
ANR	1166887	Parameter	regex_t * reg	1179:39:28065:28076	1166738	1	True				
ANR	1166888	ParameterType	regex_t *		1166738	0					
ANR	1166889	Identifier	reg		1166738	1					
ANR	1166890	CFGEntryNode	ENTRY		1166738		True				
ANR	1166891	CFGExitNode	EXIT		1166738		True				
ANR	1166892	Symbol	OP_SET_OPTION_PUSH		1166738						
ANR	1166893	Symbol	prev		1166738						
ANR	1166894	Symbol	node -> option		1166738						
ANR	1166895	Symbol	IS_DYNAMIC_OPTION		1166738						
ANR	1166896	Symbol	node		1166738						
ANR	1166897	Symbol	add_opcode_option		1166738						
ANR	1166898	Symbol	r		1166738						
ANR	1166899	Symbol	OP_SET_OPTION		1166738						
ANR	1166900	Symbol	compile_tree		1166738						
ANR	1166901	Symbol	reg		1166738						
ANR	1166902	Symbol	reg -> options		1166738						
ANR	1166903	Symbol	OP_FAIL		1166738						
ANR	1166904	Symbol	* node		1166738						
ANR	1166905	Symbol	add_opcode		1166738						
ANR	1166906	Symbol	node -> target		1166738						
ANR	1166907	Symbol	* reg		1166738						
ANR	1166908	Function	compile_length_enclose_node	1204:0:28633:30159							
ANR	1166909	FunctionDef	"compile_length_enclose_node (EncloseNode * node , regex_t * reg)"		1166908	0					
ANR	1166910	CompoundStatement		1206:0:28705:30159	1166908	0					
ANR	1166911	IdentifierDeclStatement	int len ;	1207:2:28709:28716	1166908	0	True				
ANR	1166912	IdentifierDecl	len		1166908	0					
ANR	1166913	IdentifierDeclType	int		1166908	0					
ANR	1166914	Identifier	len		1166908	1					
ANR	1166915	IdentifierDeclStatement	int tlen ;	1208:2:28720:28728	1166908	1	True				
ANR	1166916	IdentifierDecl	tlen		1166908	0					
ANR	1166917	IdentifierDeclType	int		1166908	0					
ANR	1166918	Identifier	tlen		1166908	1					
ANR	1166919	IfStatement	if ( node -> type == ENCLOSE_OPTION )		1166908	2					
ANR	1166920	Condition	node -> type == ENCLOSE_OPTION	1210:6:28737:28764	1166908	0	True				
ANR	1166921	EqualityExpression	node -> type == ENCLOSE_OPTION		1166908	0		==			
ANR	1166922	PtrMemberAccess	node -> type		1166908	0					
ANR	1166923	Identifier	node		1166908	0					
ANR	1166924	Identifier	type		1166908	1					
ANR	1166925	Identifier	ENCLOSE_OPTION		1166908	1					
ANR	1166926	ReturnStatement	"return compile_length_option_node ( node , reg ) ;"	1211:4:28771:28815	1166908	1	True				
ANR	1166927	CallExpression	"compile_length_option_node ( node , reg )"		1166908	0					
ANR	1166928	Callee	compile_length_option_node		1166908	0					
ANR	1166929	Identifier	compile_length_option_node		1166908	0					
ANR	1166930	ArgumentList	node		1166908	1					
ANR	1166931	Argument	node		1166908	0					
ANR	1166932	Identifier	node		1166908	0					
ANR	1166933	Argument	reg		1166908	1					
ANR	1166934	Identifier	reg		1166908	0					
ANR	1166935	IfStatement	if ( node -> target )		1166908	3					
ANR	1166936	Condition	node -> target	1213:6:28824:28835	1166908	0	True				
ANR	1166937	PtrMemberAccess	node -> target		1166908	0					
ANR	1166938	Identifier	node		1166908	0					
ANR	1166939	Identifier	target		1166908	1					
ANR	1166940	CompoundStatement		8:20:132:132	1166908	1					
ANR	1166941	ExpressionStatement	"tlen = compile_length_tree ( node -> target , reg )"	1214:4:28844:28889	1166908	0	True				
ANR	1166942	AssignmentExpression	"tlen = compile_length_tree ( node -> target , reg )"		1166908	0		=			
ANR	1166943	Identifier	tlen		1166908	0					
ANR	1166944	CallExpression	"compile_length_tree ( node -> target , reg )"		1166908	1					
ANR	1166945	Callee	compile_length_tree		1166908	0					
ANR	1166946	Identifier	compile_length_tree		1166908	0					
ANR	1166947	ArgumentList	node -> target		1166908	1					
ANR	1166948	Argument	node -> target		1166908	0					
ANR	1166949	PtrMemberAccess	node -> target		1166908	0					
ANR	1166950	Identifier	node		1166908	0					
ANR	1166951	Identifier	target		1166908	1					
ANR	1166952	Argument	reg		1166908	1					
ANR	1166953	Identifier	reg		1166908	0					
ANR	1166954	IfStatement	if ( tlen < 0 )		1166908	1					
ANR	1166955	Condition	tlen < 0	1215:8:28899:28906	1166908	0	True				
ANR	1166956	RelationalExpression	tlen < 0		1166908	0		<			
ANR	1166957	Identifier	tlen		1166908	0					
ANR	1166958	PrimaryExpression	0		1166908	1					
ANR	1166959	ReturnStatement	return tlen ;	1215:18:28909:28920	1166908	1	True				
ANR	1166960	Identifier	tlen		1166908	0					
ANR	1166961	ElseStatement	else		1166908	0					
ANR	1166962	ExpressionStatement	tlen = 0	1218:4:28937:28945	1166908	0	True				
ANR	1166963	AssignmentExpression	tlen = 0		1166908	0		=			
ANR	1166964	Identifier	tlen		1166908	0					
ANR	1166965	PrimaryExpression	0		1166908	1					
ANR	1166966	SwitchStatement	switch ( node -> type )		1166908	4					
ANR	1166967	Condition	node -> type	1220:10:28958:28967	1166908	0	True				
ANR	1166968	PtrMemberAccess	node -> type		1166908	0					
ANR	1166969	Identifier	node		1166908	0					
ANR	1166970	Identifier	type		1166908	1					
ANR	1166971	CompoundStatement		15:22:264:264	1166908	1					
ANR	1166972	Label	case ENCLOSE_MEMORY :	1221:2:28974:28993	1166908	0	True				
ANR	1166973	Identifier	ENCLOSE_MEMORY		1166908	0					
ANR	1166974	IfStatement	if ( IS_ENCLOSE_CALLED ( node ) )		1166908	1					
ANR	1166975	Condition	IS_ENCLOSE_CALLED ( node )	1223:8:29026:29048	1166908	0	True				
ANR	1166976	CallExpression	IS_ENCLOSE_CALLED ( node )		1166908	0					
ANR	1166977	Callee	IS_ENCLOSE_CALLED		1166908	0					
ANR	1166978	Identifier	IS_ENCLOSE_CALLED		1166908	0					
ANR	1166979	ArgumentList	node		1166908	1					
ANR	1166980	Argument	node		1166908	0					
ANR	1166981	Identifier	node		1166908	0					
ANR	1166982	CompoundStatement		18:33:345:345	1166908	1					
ANR	1166983	ExpressionStatement	len = SIZE_OP_MEMORY_START_PUSH + tlen + SIZE_OP_CALL + SIZE_OP_JUMP + SIZE_OP_RETURN	1224:6:29059:29147	1166908	0	True				
ANR	1166984	AssignmentExpression	len = SIZE_OP_MEMORY_START_PUSH + tlen + SIZE_OP_CALL + SIZE_OP_JUMP + SIZE_OP_RETURN		1166908	0		=			
ANR	1166985	Identifier	len		1166908	0					
ANR	1166986	AdditiveExpression	SIZE_OP_MEMORY_START_PUSH + tlen + SIZE_OP_CALL + SIZE_OP_JUMP + SIZE_OP_RETURN		1166908	1		+			
ANR	1166987	Identifier	SIZE_OP_MEMORY_START_PUSH		1166908	0					
ANR	1166988	AdditiveExpression	tlen + SIZE_OP_CALL + SIZE_OP_JUMP + SIZE_OP_RETURN		1166908	1		+			
ANR	1166989	Identifier	tlen		1166908	0					
ANR	1166990	AdditiveExpression	SIZE_OP_CALL + SIZE_OP_JUMP + SIZE_OP_RETURN		1166908	1		+			
ANR	1166991	Identifier	SIZE_OP_CALL		1166908	0					
ANR	1166992	AdditiveExpression	SIZE_OP_JUMP + SIZE_OP_RETURN		1166908	1		+			
ANR	1166993	Identifier	SIZE_OP_JUMP		1166908	0					
ANR	1166994	Identifier	SIZE_OP_RETURN		1166908	1					
ANR	1166995	IfStatement	"if ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) )"		1166908	1					
ANR	1166996	Condition	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"	1226:10:29159:29202	1166908	0	True				
ANR	1166997	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"		1166908	0					
ANR	1166998	Callee	BIT_STATUS_AT		1166908	0					
ANR	1166999	Identifier	BIT_STATUS_AT		1166908	0					
ANR	1167000	ArgumentList	reg -> bt_mem_end		1166908	1					
ANR	1167001	Argument	reg -> bt_mem_end		1166908	0					
ANR	1167002	PtrMemberAccess	reg -> bt_mem_end		1166908	0					
ANR	1167003	Identifier	reg		1166908	0					
ANR	1167004	Identifier	bt_mem_end		1166908	1					
ANR	1167005	Argument	node -> regnum		1166908	1					
ANR	1167006	PtrMemberAccess	node -> regnum		1166908	0					
ANR	1167007	Identifier	node		1166908	0					
ANR	1167008	Identifier	regnum		1166908	1					
ANR	1167009	ExpressionStatement	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_PUSH_REC : SIZE_OP_MEMORY_END_PUSH )	1227:1:29206:29299	1166908	1	True				
ANR	1167010	AssignmentExpression	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_PUSH_REC : SIZE_OP_MEMORY_END_PUSH )		1166908	0		+=			
ANR	1167011	Identifier	len		1166908	0					
ANR	1167012	ConditionalExpression	IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_PUSH_REC : SIZE_OP_MEMORY_END_PUSH		1166908	1					
ANR	1167013	Condition	IS_ENCLOSE_RECURSION ( node )		1166908	0					
ANR	1167014	CallExpression	IS_ENCLOSE_RECURSION ( node )		1166908	0					
ANR	1167015	Callee	IS_ENCLOSE_RECURSION		1166908	0					
ANR	1167016	Identifier	IS_ENCLOSE_RECURSION		1166908	0					
ANR	1167017	ArgumentList	node		1166908	1					
ANR	1167018	Argument	node		1166908	0					
ANR	1167019	Identifier	node		1166908	0					
ANR	1167020	Identifier	SIZE_OP_MEMORY_END_PUSH_REC		1166908	1					
ANR	1167021	Identifier	SIZE_OP_MEMORY_END_PUSH		1166908	2					
ANR	1167022	ElseStatement	else		1166908	0					
ANR	1167023	ExpressionStatement	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_REC : SIZE_OP_MEMORY_END )	1230:1:29313:29396	1166908	0	True				
ANR	1167024	AssignmentExpression	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_REC : SIZE_OP_MEMORY_END )		1166908	0		+=			
ANR	1167025	Identifier	len		1166908	0					
ANR	1167026	ConditionalExpression	IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_REC : SIZE_OP_MEMORY_END		1166908	1					
ANR	1167027	Condition	IS_ENCLOSE_RECURSION ( node )		1166908	0					
ANR	1167028	CallExpression	IS_ENCLOSE_RECURSION ( node )		1166908	0					
ANR	1167029	Callee	IS_ENCLOSE_RECURSION		1166908	0					
ANR	1167030	Identifier	IS_ENCLOSE_RECURSION		1166908	0					
ANR	1167031	ArgumentList	node		1166908	1					
ANR	1167032	Argument	node		1166908	0					
ANR	1167033	Identifier	node		1166908	0					
ANR	1167034	Identifier	SIZE_OP_MEMORY_END_REC		1166908	1					
ANR	1167035	Identifier	SIZE_OP_MEMORY_END		1166908	2					
ANR	1167036	ElseStatement	else		1166908	0					
ANR	1167037	CompoundStatement		30:4:718:718	1166908	0					
ANR	1167038	IfStatement	"if ( BIT_STATUS_AT ( reg -> bt_mem_start , node -> regnum ) )"		1166908	0					
ANR	1167039	Condition	"BIT_STATUS_AT ( reg -> bt_mem_start , node -> regnum )"	1236:10:29436:29481	1166908	0	True				
ANR	1167040	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_start , node -> regnum )"		1166908	0					
ANR	1167041	Callee	BIT_STATUS_AT		1166908	0					
ANR	1167042	Identifier	BIT_STATUS_AT		1166908	0					
ANR	1167043	ArgumentList	reg -> bt_mem_start		1166908	1					
ANR	1167044	Argument	reg -> bt_mem_start		1166908	0					
ANR	1167045	PtrMemberAccess	reg -> bt_mem_start		1166908	0					
ANR	1167046	Identifier	reg		1166908	0					
ANR	1167047	Identifier	bt_mem_start		1166908	1					
ANR	1167048	Argument	node -> regnum		1166908	1					
ANR	1167049	PtrMemberAccess	node -> regnum		1166908	0					
ANR	1167050	Identifier	node		1166908	0					
ANR	1167051	Identifier	regnum		1166908	1					
ANR	1167052	ExpressionStatement	len = SIZE_OP_MEMORY_START_PUSH	1237:1:29485:29516	1166908	1	True				
ANR	1167053	AssignmentExpression	len = SIZE_OP_MEMORY_START_PUSH		1166908	0		=			
ANR	1167054	Identifier	len		1166908	0					
ANR	1167055	Identifier	SIZE_OP_MEMORY_START_PUSH		1166908	1					
ANR	1167056	ElseStatement	else		1166908	0					
ANR	1167057	ExpressionStatement	len = SIZE_OP_MEMORY_START	1239:1:29530:29556	1166908	0	True				
ANR	1167058	AssignmentExpression	len = SIZE_OP_MEMORY_START		1166908	0		=			
ANR	1167059	Identifier	len		1166908	0					
ANR	1167060	Identifier	SIZE_OP_MEMORY_START		1166908	1					
ANR	1167061	ExpressionStatement	"len += tlen + ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) ? SIZE_OP_MEMORY_END_PUSH : SIZE_OP_MEMORY_END )"	1241:6:29565:29679	1166908	1	True				
ANR	1167062	AssignmentExpression	"len += tlen + ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) ? SIZE_OP_MEMORY_END_PUSH : SIZE_OP_MEMORY_END )"		1166908	0		+=			
ANR	1167063	Identifier	len		1166908	0					
ANR	1167064	AdditiveExpression	"tlen + ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) ? SIZE_OP_MEMORY_END_PUSH : SIZE_OP_MEMORY_END )"		1166908	1		+			
ANR	1167065	Identifier	tlen		1166908	0					
ANR	1167066	ConditionalExpression	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) ? SIZE_OP_MEMORY_END_PUSH : SIZE_OP_MEMORY_END"		1166908	1					
ANR	1167067	Condition	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"		1166908	0					
ANR	1167068	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"		1166908	0					
ANR	1167069	Callee	BIT_STATUS_AT		1166908	0					
ANR	1167070	Identifier	BIT_STATUS_AT		1166908	0					
ANR	1167071	ArgumentList	reg -> bt_mem_end		1166908	1					
ANR	1167072	Argument	reg -> bt_mem_end		1166908	0					
ANR	1167073	PtrMemberAccess	reg -> bt_mem_end		1166908	0					
ANR	1167074	Identifier	reg		1166908	0					
ANR	1167075	Identifier	bt_mem_end		1166908	1					
ANR	1167076	Argument	node -> regnum		1166908	1					
ANR	1167077	PtrMemberAccess	node -> regnum		1166908	0					
ANR	1167078	Identifier	node		1166908	0					
ANR	1167079	Identifier	regnum		1166908	1					
ANR	1167080	Identifier	SIZE_OP_MEMORY_END_PUSH		1166908	1					
ANR	1167081	Identifier	SIZE_OP_MEMORY_END		1166908	2					
ANR	1167082	BreakStatement	break ;	1244:4:29691:29696	1166908	2	True				
ANR	1167083	Label	case ENCLOSE_STOP_BACKTRACK :	1246:2:29701:29728	1166908	3	True				
ANR	1167084	Identifier	ENCLOSE_STOP_BACKTRACK		1166908	0					
ANR	1167085	IfStatement	if ( IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT ( node ) )		1166908	4					
ANR	1167086	Condition	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT ( node )	1247:8:29738:29775	1166908	0	True				
ANR	1167087	CallExpression	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT ( node )		1166908	0					
ANR	1167088	Callee	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT		1166908	0					
ANR	1167089	Identifier	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT		1166908	0					
ANR	1167090	ArgumentList	node		1166908	1					
ANR	1167091	Argument	node		1166908	0					
ANR	1167092	Identifier	node		1166908	0					
ANR	1167093	CompoundStatement		43:6:1080:1114	1166908	1					
ANR	1167094	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node -> target ) ;	1248:6:29786:29820	1166908	0	True				
ANR	1167095	IdentifierDecl	* qn = NQTFR ( node -> target )		1166908	0					
ANR	1167096	IdentifierDeclType	QtfrNode *		1166908	0					
ANR	1167097	Identifier	qn		1166908	1					
ANR	1167098	AssignmentExpression	* qn = NQTFR ( node -> target )		1166908	2		=			
ANR	1167099	Identifier	qn		1166908	0					
ANR	1167100	CallExpression	NQTFR ( node -> target )		1166908	1					
ANR	1167101	Callee	NQTFR		1166908	0					
ANR	1167102	Identifier	NQTFR		1166908	0					
ANR	1167103	ArgumentList	node -> target		1166908	1					
ANR	1167104	Argument	node -> target		1166908	0					
ANR	1167105	PtrMemberAccess	node -> target		1166908	0					
ANR	1167106	Identifier	node		1166908	0					
ANR	1167107	Identifier	target		1166908	1					
ANR	1167108	ExpressionStatement	"tlen = compile_length_tree ( qn -> target , reg )"	1249:6:29828:29871	1166908	1	True				
ANR	1167109	AssignmentExpression	"tlen = compile_length_tree ( qn -> target , reg )"		1166908	0		=			
ANR	1167110	Identifier	tlen		1166908	0					
ANR	1167111	CallExpression	"compile_length_tree ( qn -> target , reg )"		1166908	1					
ANR	1167112	Callee	compile_length_tree		1166908	0					
ANR	1167113	Identifier	compile_length_tree		1166908	0					
ANR	1167114	ArgumentList	qn -> target		1166908	1					
ANR	1167115	Argument	qn -> target		1166908	0					
ANR	1167116	PtrMemberAccess	qn -> target		1166908	0					
ANR	1167117	Identifier	qn		1166908	0					
ANR	1167118	Identifier	target		1166908	1					
ANR	1167119	Argument	reg		1166908	1					
ANR	1167120	Identifier	reg		1166908	0					
ANR	1167121	IfStatement	if ( tlen < 0 )		1166908	2					
ANR	1167122	Condition	tlen < 0	1250:10:29883:29890	1166908	0	True				
ANR	1167123	RelationalExpression	tlen < 0		1166908	0		<			
ANR	1167124	Identifier	tlen		1166908	0					
ANR	1167125	PrimaryExpression	0		1166908	1					
ANR	1167126	ReturnStatement	return tlen ;	1250:20:29893:29904	1166908	1	True				
ANR	1167127	Identifier	tlen		1166908	0					
ANR	1167128	ExpressionStatement	len = tlen * qn -> lower + SIZE_OP_PUSH + tlen + SIZE_OP_POP + SIZE_OP_JUMP	1252:6:29913:29989	1166908	3	True				
ANR	1167129	AssignmentExpression	len = tlen * qn -> lower + SIZE_OP_PUSH + tlen + SIZE_OP_POP + SIZE_OP_JUMP		1166908	0		=			
ANR	1167130	Identifier	len		1166908	0					
ANR	1167131	AdditiveExpression	tlen * qn -> lower + SIZE_OP_PUSH + tlen + SIZE_OP_POP + SIZE_OP_JUMP		1166908	1		+			
ANR	1167132	MultiplicativeExpression	tlen * qn -> lower		1166908	0		*			
ANR	1167133	Identifier	tlen		1166908	0					
ANR	1167134	PtrMemberAccess	qn -> lower		1166908	1					
ANR	1167135	Identifier	qn		1166908	0					
ANR	1167136	Identifier	lower		1166908	1					
ANR	1167137	AdditiveExpression	SIZE_OP_PUSH + tlen + SIZE_OP_POP + SIZE_OP_JUMP		1166908	1		+			
ANR	1167138	Identifier	SIZE_OP_PUSH		1166908	0					
ANR	1167139	AdditiveExpression	tlen + SIZE_OP_POP + SIZE_OP_JUMP		1166908	1		+			
ANR	1167140	Identifier	tlen		1166908	0					
ANR	1167141	AdditiveExpression	SIZE_OP_POP + SIZE_OP_JUMP		1166908	1		+			
ANR	1167142	Identifier	SIZE_OP_POP		1166908	0					
ANR	1167143	Identifier	SIZE_OP_JUMP		1166908	1					
ANR	1167144	ElseStatement	else		1166908	0					
ANR	1167145	CompoundStatement		50:9:1300:1300	1166908	0					
ANR	1167146	ExpressionStatement	len = SIZE_OP_PUSH_STOP_BT + tlen + SIZE_OP_POP_STOP_BT	1256:6:30014:30069	1166908	0	True				
ANR	1167147	AssignmentExpression	len = SIZE_OP_PUSH_STOP_BT + tlen + SIZE_OP_POP_STOP_BT		1166908	0		=			
ANR	1167148	Identifier	len		1166908	0					
ANR	1167149	AdditiveExpression	SIZE_OP_PUSH_STOP_BT + tlen + SIZE_OP_POP_STOP_BT		1166908	1		+			
ANR	1167150	Identifier	SIZE_OP_PUSH_STOP_BT		1166908	0					
ANR	1167151	AdditiveExpression	tlen + SIZE_OP_POP_STOP_BT		1166908	1		+			
ANR	1167152	Identifier	tlen		1166908	0					
ANR	1167153	Identifier	SIZE_OP_POP_STOP_BT		1166908	1					
ANR	1167154	BreakStatement	break ;	1258:4:30081:30086	1166908	5	True				
ANR	1167155	Label	default :	1260:2:30091:30098	1166908	6	True				
ANR	1167156	Identifier	default		1166908	0					
ANR	1167157	ReturnStatement	return ONIGERR_TYPE_BUG ;	1261:4:30104:30127	1166908	7	True				
ANR	1167158	Identifier	ONIGERR_TYPE_BUG		1166908	0					
ANR	1167159	BreakStatement	break ;	1262:4:30133:30138	1166908	8	True				
ANR	1167160	ReturnStatement	return len ;	1265:2:30147:30157	1166908	5	True				
ANR	1167161	Identifier	len		1166908	0					
ANR	1167162	ReturnType	static int		1166908	1					
ANR	1167163	Identifier	compile_length_enclose_node		1166908	2					
ANR	1167164	ParameterList	"EncloseNode * node , regex_t * reg"		1166908	3					
ANR	1167165	Parameter	EncloseNode * node	1205:28:28672:28688	1166908	0	True				
ANR	1167166	ParameterType	EncloseNode *		1166908	0					
ANR	1167167	Identifier	node		1166908	1					
ANR	1167168	Parameter	regex_t * reg	1205:47:28691:28702	1166908	1	True				
ANR	1167169	ParameterType	regex_t *		1166908	0					
ANR	1167170	Identifier	reg		1166908	1					
ANR	1167171	CFGEntryNode	ENTRY		1166908		True				
ANR	1167172	CFGExitNode	EXIT		1166908		True				
ANR	1167173	Symbol	* qn		1166908						
ANR	1167174	Symbol	SIZE_OP_MEMORY_END_PUSH_REC		1166908						
ANR	1167175	Symbol	ENCLOSE_OPTION		1166908						
ANR	1167176	Symbol	SIZE_OP_MEMORY_START		1166908						
ANR	1167177	Symbol	SIZE_OP_MEMORY_END		1166908						
ANR	1167178	Symbol	NQTFR		1166908						
ANR	1167179	Symbol	SIZE_OP_MEMORY_START_PUSH		1166908						
ANR	1167180	Symbol	qn -> lower		1166908						
ANR	1167181	Symbol	len		1166908						
ANR	1167182	Symbol	reg -> bt_mem_end		1166908						
ANR	1167183	Symbol	reg		1166908						
ANR	1167184	Symbol	tlen		1166908						
ANR	1167185	Symbol	SIZE_OP_MEMORY_END_REC		1166908						
ANR	1167186	Symbol	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT		1166908						
ANR	1167187	Symbol	SIZE_OP_PUSH_STOP_BT		1166908						
ANR	1167188	Symbol	* node		1166908						
ANR	1167189	Symbol	qn		1166908						
ANR	1167190	Symbol	SIZE_OP_JUMP		1166908						
ANR	1167191	Symbol	BIT_STATUS_AT		1166908						
ANR	1167192	Symbol	compile_length_tree		1166908						
ANR	1167193	Symbol	compile_length_option_node		1166908						
ANR	1167194	Symbol	IS_ENCLOSE_CALLED		1166908						
ANR	1167195	Symbol	SIZE_OP_PUSH		1166908						
ANR	1167196	Symbol	node -> regnum		1166908						
ANR	1167197	Symbol	SIZE_OP_POP_STOP_BT		1166908						
ANR	1167198	Symbol	ONIGERR_TYPE_BUG		1166908						
ANR	1167199	Symbol	qn -> target		1166908						
ANR	1167200	Symbol	node		1166908						
ANR	1167201	Symbol	SIZE_OP_CALL		1166908						
ANR	1167202	Symbol	reg -> bt_mem_start		1166908						
ANR	1167203	Symbol	SIZE_OP_POP		1166908						
ANR	1167204	Symbol	node -> type		1166908						
ANR	1167205	Symbol	IS_ENCLOSE_RECURSION		1166908						
ANR	1167206	Symbol	SIZE_OP_RETURN		1166908						
ANR	1167207	Symbol	node -> target		1166908						
ANR	1167208	Symbol	* reg		1166908						
ANR	1167209	Symbol	SIZE_OP_MEMORY_END_PUSH		1166908						
ANR	1167210	DeclStmt									
ANR	1167211	Decl							int	"int ( Node * node , regex_t * reg , int * len )"	get_char_length_tree
ANR	1167212	Function	compile_enclose_node	1270:0:30232:33119							
ANR	1167213	FunctionDef	"compile_enclose_node (EncloseNode * node , regex_t * reg)"		1167212	0					
ANR	1167214	CompoundStatement		1272:0:30297:33119	1167212	0					
ANR	1167215	IdentifierDeclStatement	"int r , len ;"	1273:2:30301:30311	1167212	0	True				
ANR	1167216	IdentifierDecl	r		1167212	0					
ANR	1167217	IdentifierDeclType	int		1167212	0					
ANR	1167218	Identifier	r		1167212	1					
ANR	1167219	IdentifierDecl	len		1167212	1					
ANR	1167220	IdentifierDeclType	int		1167212	0					
ANR	1167221	Identifier	len		1167212	1					
ANR	1167222	IfStatement	if ( node -> type == ENCLOSE_OPTION )		1167212	1					
ANR	1167223	Condition	node -> type == ENCLOSE_OPTION	1275:6:30320:30347	1167212	0	True				
ANR	1167224	EqualityExpression	node -> type == ENCLOSE_OPTION		1167212	0		==			
ANR	1167225	PtrMemberAccess	node -> type		1167212	0					
ANR	1167226	Identifier	node		1167212	0					
ANR	1167227	Identifier	type		1167212	1					
ANR	1167228	Identifier	ENCLOSE_OPTION		1167212	1					
ANR	1167229	ReturnStatement	"return compile_option_node ( node , reg ) ;"	1276:4:30354:30391	1167212	1	True				
ANR	1167230	CallExpression	"compile_option_node ( node , reg )"		1167212	0					
ANR	1167231	Callee	compile_option_node		1167212	0					
ANR	1167232	Identifier	compile_option_node		1167212	0					
ANR	1167233	ArgumentList	node		1167212	1					
ANR	1167234	Argument	node		1167212	0					
ANR	1167235	Identifier	node		1167212	0					
ANR	1167236	Argument	reg		1167212	1					
ANR	1167237	Identifier	reg		1167212	0					
ANR	1167238	SwitchStatement	switch ( node -> type )		1167212	2					
ANR	1167239	Condition	node -> type	1278:10:30404:30413	1167212	0	True				
ANR	1167240	PtrMemberAccess	node -> type		1167212	0					
ANR	1167241	Identifier	node		1167212	0					
ANR	1167242	Identifier	type		1167212	1					
ANR	1167243	CompoundStatement		7:22:118:118	1167212	1					
ANR	1167244	Label	case ENCLOSE_MEMORY :	1279:2:30420:30439	1167212	0	True				
ANR	1167245	Identifier	ENCLOSE_MEMORY		1167212	0					
ANR	1167246	IfStatement	if ( IS_ENCLOSE_CALLED ( node ) )		1167212	1					
ANR	1167247	Condition	IS_ENCLOSE_CALLED ( node )	1281:8:30472:30494	1167212	0	True				
ANR	1167248	CallExpression	IS_ENCLOSE_CALLED ( node )		1167212	0					
ANR	1167249	Callee	IS_ENCLOSE_CALLED		1167212	0					
ANR	1167250	Identifier	IS_ENCLOSE_CALLED		1167212	0					
ANR	1167251	ArgumentList	node		1167212	1					
ANR	1167252	Argument	node		1167212	0					
ANR	1167253	Identifier	node		1167212	0					
ANR	1167254	CompoundStatement		10:33:199:199	1167212	1					
ANR	1167255	ExpressionStatement	"r = add_opcode ( reg , OP_CALL )"	1282:6:30505:30533	1167212	0	True				
ANR	1167256	AssignmentExpression	"r = add_opcode ( reg , OP_CALL )"		1167212	0		=			
ANR	1167257	Identifier	r		1167212	0					
ANR	1167258	CallExpression	"add_opcode ( reg , OP_CALL )"		1167212	1					
ANR	1167259	Callee	add_opcode		1167212	0					
ANR	1167260	Identifier	add_opcode		1167212	0					
ANR	1167261	ArgumentList	reg		1167212	1					
ANR	1167262	Argument	reg		1167212	0					
ANR	1167263	Identifier	reg		1167212	0					
ANR	1167264	Argument	OP_CALL		1167212	1					
ANR	1167265	Identifier	OP_CALL		1167212	0					
ANR	1167266	IfStatement	if ( r )		1167212	1					
ANR	1167267	Condition	r	1283:10:30545:30545	1167212	0	True				
ANR	1167268	Identifier	r		1167212	0					
ANR	1167269	ReturnStatement	return r ;	1283:13:30548:30556	1167212	1	True				
ANR	1167270	Identifier	r		1167212	0					
ANR	1167271	ExpressionStatement	node -> call_addr = BBUF_GET_OFFSET_POS ( reg ) + SIZE_ABSADDR + SIZE_OP_JUMP	1284:6:30564:30636	1167212	2	True				
ANR	1167272	AssignmentExpression	node -> call_addr = BBUF_GET_OFFSET_POS ( reg ) + SIZE_ABSADDR + SIZE_OP_JUMP		1167212	0		=			
ANR	1167273	PtrMemberAccess	node -> call_addr		1167212	0					
ANR	1167274	Identifier	node		1167212	0					
ANR	1167275	Identifier	call_addr		1167212	1					
ANR	1167276	AdditiveExpression	BBUF_GET_OFFSET_POS ( reg ) + SIZE_ABSADDR + SIZE_OP_JUMP		1167212	1		+			
ANR	1167277	CallExpression	BBUF_GET_OFFSET_POS ( reg )		1167212	0					
ANR	1167278	Callee	BBUF_GET_OFFSET_POS		1167212	0					
ANR	1167279	Identifier	BBUF_GET_OFFSET_POS		1167212	0					
ANR	1167280	ArgumentList	reg		1167212	1					
ANR	1167281	Argument	reg		1167212	0					
ANR	1167282	Identifier	reg		1167212	0					
ANR	1167283	AdditiveExpression	SIZE_ABSADDR + SIZE_OP_JUMP		1167212	1		+			
ANR	1167284	Identifier	SIZE_ABSADDR		1167212	0					
ANR	1167285	Identifier	SIZE_OP_JUMP		1167212	1					
ANR	1167286	ExpressionStatement	node -> state |= NST_ADDR_FIXED	1285:6:30644:30673	1167212	3	True				
ANR	1167287	AssignmentExpression	node -> state |= NST_ADDR_FIXED		1167212	0		|=			
ANR	1167288	PtrMemberAccess	node -> state		1167212	0					
ANR	1167289	Identifier	node		1167212	0					
ANR	1167290	Identifier	state		1167212	1					
ANR	1167291	Identifier	NST_ADDR_FIXED		1167212	1					
ANR	1167292	ExpressionStatement	"r = add_abs_addr ( reg , ( int ) node -> call_addr )"	1286:6:30681:30725	1167212	4	True				
ANR	1167293	AssignmentExpression	"r = add_abs_addr ( reg , ( int ) node -> call_addr )"		1167212	0		=			
ANR	1167294	Identifier	r		1167212	0					
ANR	1167295	CallExpression	"add_abs_addr ( reg , ( int ) node -> call_addr )"		1167212	1					
ANR	1167296	Callee	add_abs_addr		1167212	0					
ANR	1167297	Identifier	add_abs_addr		1167212	0					
ANR	1167298	ArgumentList	reg		1167212	1					
ANR	1167299	Argument	reg		1167212	0					
ANR	1167300	Identifier	reg		1167212	0					
ANR	1167301	Argument	( int ) node -> call_addr		1167212	1					
ANR	1167302	CastExpression	( int ) node -> call_addr		1167212	0					
ANR	1167303	CastTarget	int		1167212	0					
ANR	1167304	PtrMemberAccess	node -> call_addr		1167212	1					
ANR	1167305	Identifier	node		1167212	0					
ANR	1167306	Identifier	call_addr		1167212	1					
ANR	1167307	IfStatement	if ( r )		1167212	5					
ANR	1167308	Condition	r	1287:10:30737:30737	1167212	0	True				
ANR	1167309	Identifier	r		1167212	0					
ANR	1167310	ReturnStatement	return r ;	1287:13:30740:30748	1167212	1	True				
ANR	1167311	Identifier	r		1167212	0					
ANR	1167312	ExpressionStatement	"len = compile_length_tree ( node -> target , reg )"	1288:6:30756:30800	1167212	6	True				
ANR	1167313	AssignmentExpression	"len = compile_length_tree ( node -> target , reg )"		1167212	0		=			
ANR	1167314	Identifier	len		1167212	0					
ANR	1167315	CallExpression	"compile_length_tree ( node -> target , reg )"		1167212	1					
ANR	1167316	Callee	compile_length_tree		1167212	0					
ANR	1167317	Identifier	compile_length_tree		1167212	0					
ANR	1167318	ArgumentList	node -> target		1167212	1					
ANR	1167319	Argument	node -> target		1167212	0					
ANR	1167320	PtrMemberAccess	node -> target		1167212	0					
ANR	1167321	Identifier	node		1167212	0					
ANR	1167322	Identifier	target		1167212	1					
ANR	1167323	Argument	reg		1167212	1					
ANR	1167324	Identifier	reg		1167212	0					
ANR	1167325	ExpressionStatement	len += ( SIZE_OP_MEMORY_START_PUSH + SIZE_OP_RETURN )	1289:6:30808:30859	1167212	7	True				
ANR	1167326	AssignmentExpression	len += ( SIZE_OP_MEMORY_START_PUSH + SIZE_OP_RETURN )		1167212	0		+=			
ANR	1167327	Identifier	len		1167212	0					
ANR	1167328	AdditiveExpression	SIZE_OP_MEMORY_START_PUSH + SIZE_OP_RETURN		1167212	1		+			
ANR	1167329	Identifier	SIZE_OP_MEMORY_START_PUSH		1167212	0					
ANR	1167330	Identifier	SIZE_OP_RETURN		1167212	1					
ANR	1167331	IfStatement	"if ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) )"		1167212	8					
ANR	1167332	Condition	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"	1290:10:30871:30914	1167212	0	True				
ANR	1167333	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"		1167212	0					
ANR	1167334	Callee	BIT_STATUS_AT		1167212	0					
ANR	1167335	Identifier	BIT_STATUS_AT		1167212	0					
ANR	1167336	ArgumentList	reg -> bt_mem_end		1167212	1					
ANR	1167337	Argument	reg -> bt_mem_end		1167212	0					
ANR	1167338	PtrMemberAccess	reg -> bt_mem_end		1167212	0					
ANR	1167339	Identifier	reg		1167212	0					
ANR	1167340	Identifier	bt_mem_end		1167212	1					
ANR	1167341	Argument	node -> regnum		1167212	1					
ANR	1167342	PtrMemberAccess	node -> regnum		1167212	0					
ANR	1167343	Identifier	node		1167212	0					
ANR	1167344	Identifier	regnum		1167212	1					
ANR	1167345	ExpressionStatement	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_PUSH_REC : SIZE_OP_MEMORY_END_PUSH )	1291:1:30918:31011	1167212	1	True				
ANR	1167346	AssignmentExpression	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_PUSH_REC : SIZE_OP_MEMORY_END_PUSH )		1167212	0		+=			
ANR	1167347	Identifier	len		1167212	0					
ANR	1167348	ConditionalExpression	IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_PUSH_REC : SIZE_OP_MEMORY_END_PUSH		1167212	1					
ANR	1167349	Condition	IS_ENCLOSE_RECURSION ( node )		1167212	0					
ANR	1167350	CallExpression	IS_ENCLOSE_RECURSION ( node )		1167212	0					
ANR	1167351	Callee	IS_ENCLOSE_RECURSION		1167212	0					
ANR	1167352	Identifier	IS_ENCLOSE_RECURSION		1167212	0					
ANR	1167353	ArgumentList	node		1167212	1					
ANR	1167354	Argument	node		1167212	0					
ANR	1167355	Identifier	node		1167212	0					
ANR	1167356	Identifier	SIZE_OP_MEMORY_END_PUSH_REC		1167212	1					
ANR	1167357	Identifier	SIZE_OP_MEMORY_END_PUSH		1167212	2					
ANR	1167358	ElseStatement	else		1167212	0					
ANR	1167359	ExpressionStatement	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_REC : SIZE_OP_MEMORY_END )	1294:1:31025:31108	1167212	0	True				
ANR	1167360	AssignmentExpression	len += ( IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_REC : SIZE_OP_MEMORY_END )		1167212	0		+=			
ANR	1167361	Identifier	len		1167212	0					
ANR	1167362	ConditionalExpression	IS_ENCLOSE_RECURSION ( node ) ? SIZE_OP_MEMORY_END_REC : SIZE_OP_MEMORY_END		1167212	1					
ANR	1167363	Condition	IS_ENCLOSE_RECURSION ( node )		1167212	0					
ANR	1167364	CallExpression	IS_ENCLOSE_RECURSION ( node )		1167212	0					
ANR	1167365	Callee	IS_ENCLOSE_RECURSION		1167212	0					
ANR	1167366	Identifier	IS_ENCLOSE_RECURSION		1167212	0					
ANR	1167367	ArgumentList	node		1167212	1					
ANR	1167368	Argument	node		1167212	0					
ANR	1167369	Identifier	node		1167212	0					
ANR	1167370	Identifier	SIZE_OP_MEMORY_END_REC		1167212	1					
ANR	1167371	Identifier	SIZE_OP_MEMORY_END		1167212	2					
ANR	1167372	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , len )"	1297:6:31117:31159	1167212	9	True				
ANR	1167373	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , len )"		1167212	0		=			
ANR	1167374	Identifier	r		1167212	0					
ANR	1167375	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , len )"		1167212	1					
ANR	1167376	Callee	add_opcode_rel_addr		1167212	0					
ANR	1167377	Identifier	add_opcode_rel_addr		1167212	0					
ANR	1167378	ArgumentList	reg		1167212	1					
ANR	1167379	Argument	reg		1167212	0					
ANR	1167380	Identifier	reg		1167212	0					
ANR	1167381	Argument	OP_JUMP		1167212	1					
ANR	1167382	Identifier	OP_JUMP		1167212	0					
ANR	1167383	Argument	len		1167212	2					
ANR	1167384	Identifier	len		1167212	0					
ANR	1167385	IfStatement	if ( r )		1167212	10					
ANR	1167386	Condition	r	1298:10:31171:31171	1167212	0	True				
ANR	1167387	Identifier	r		1167212	0					
ANR	1167388	ReturnStatement	return r ;	1298:13:31174:31182	1167212	1	True				
ANR	1167389	Identifier	r		1167212	0					
ANR	1167390	IfStatement	"if ( BIT_STATUS_AT ( reg -> bt_mem_start , node -> regnum ) )"		1167212	2					
ANR	1167391	Condition	"BIT_STATUS_AT ( reg -> bt_mem_start , node -> regnum )"	1301:8:31205:31250	1167212	0	True				
ANR	1167392	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_start , node -> regnum )"		1167212	0					
ANR	1167393	Callee	BIT_STATUS_AT		1167212	0					
ANR	1167394	Identifier	BIT_STATUS_AT		1167212	0					
ANR	1167395	ArgumentList	reg -> bt_mem_start		1167212	1					
ANR	1167396	Argument	reg -> bt_mem_start		1167212	0					
ANR	1167397	PtrMemberAccess	reg -> bt_mem_start		1167212	0					
ANR	1167398	Identifier	reg		1167212	0					
ANR	1167399	Identifier	bt_mem_start		1167212	1					
ANR	1167400	Argument	node -> regnum		1167212	1					
ANR	1167401	PtrMemberAccess	node -> regnum		1167212	0					
ANR	1167402	Identifier	node		1167212	0					
ANR	1167403	Identifier	regnum		1167212	1					
ANR	1167404	ExpressionStatement	"r = add_opcode ( reg , OP_MEMORY_START_PUSH )"	1302:6:31259:31300	1167212	1	True				
ANR	1167405	AssignmentExpression	"r = add_opcode ( reg , OP_MEMORY_START_PUSH )"		1167212	0		=			
ANR	1167406	Identifier	r		1167212	0					
ANR	1167407	CallExpression	"add_opcode ( reg , OP_MEMORY_START_PUSH )"		1167212	1					
ANR	1167408	Callee	add_opcode		1167212	0					
ANR	1167409	Identifier	add_opcode		1167212	0					
ANR	1167410	ArgumentList	reg		1167212	1					
ANR	1167411	Argument	reg		1167212	0					
ANR	1167412	Identifier	reg		1167212	0					
ANR	1167413	Argument	OP_MEMORY_START_PUSH		1167212	1					
ANR	1167414	Identifier	OP_MEMORY_START_PUSH		1167212	0					
ANR	1167415	ElseStatement	else		1167212	0					
ANR	1167416	ExpressionStatement	"r = add_opcode ( reg , OP_MEMORY_START )"	1304:6:31317:31353	1167212	0	True				
ANR	1167417	AssignmentExpression	"r = add_opcode ( reg , OP_MEMORY_START )"		1167212	0		=			
ANR	1167418	Identifier	r		1167212	0					
ANR	1167419	CallExpression	"add_opcode ( reg , OP_MEMORY_START )"		1167212	1					
ANR	1167420	Callee	add_opcode		1167212	0					
ANR	1167421	Identifier	add_opcode		1167212	0					
ANR	1167422	ArgumentList	reg		1167212	1					
ANR	1167423	Argument	reg		1167212	0					
ANR	1167424	Identifier	reg		1167212	0					
ANR	1167425	Argument	OP_MEMORY_START		1167212	1					
ANR	1167426	Identifier	OP_MEMORY_START		1167212	0					
ANR	1167427	IfStatement	if ( r )		1167212	3					
ANR	1167428	Condition	r	1305:8:31363:31363	1167212	0	True				
ANR	1167429	Identifier	r		1167212	0					
ANR	1167430	ReturnStatement	return r ;	1305:11:31366:31374	1167212	1	True				
ANR	1167431	Identifier	r		1167212	0					
ANR	1167432	ExpressionStatement	"r = add_mem_num ( reg , node -> regnum )"	1306:4:31380:31414	1167212	4	True				
ANR	1167433	AssignmentExpression	"r = add_mem_num ( reg , node -> regnum )"		1167212	0		=			
ANR	1167434	Identifier	r		1167212	0					
ANR	1167435	CallExpression	"add_mem_num ( reg , node -> regnum )"		1167212	1					
ANR	1167436	Callee	add_mem_num		1167212	0					
ANR	1167437	Identifier	add_mem_num		1167212	0					
ANR	1167438	ArgumentList	reg		1167212	1					
ANR	1167439	Argument	reg		1167212	0					
ANR	1167440	Identifier	reg		1167212	0					
ANR	1167441	Argument	node -> regnum		1167212	1					
ANR	1167442	PtrMemberAccess	node -> regnum		1167212	0					
ANR	1167443	Identifier	node		1167212	0					
ANR	1167444	Identifier	regnum		1167212	1					
ANR	1167445	IfStatement	if ( r )		1167212	5					
ANR	1167446	Condition	r	1307:8:31424:31424	1167212	0	True				
ANR	1167447	Identifier	r		1167212	0					
ANR	1167448	ReturnStatement	return r ;	1307:11:31427:31435	1167212	1	True				
ANR	1167449	Identifier	r		1167212	0					
ANR	1167450	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1308:4:31441:31476	1167212	6	True				
ANR	1167451	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		1167212	0		=			
ANR	1167452	Identifier	r		1167212	0					
ANR	1167453	CallExpression	"compile_tree ( node -> target , reg )"		1167212	1					
ANR	1167454	Callee	compile_tree		1167212	0					
ANR	1167455	Identifier	compile_tree		1167212	0					
ANR	1167456	ArgumentList	node -> target		1167212	1					
ANR	1167457	Argument	node -> target		1167212	0					
ANR	1167458	PtrMemberAccess	node -> target		1167212	0					
ANR	1167459	Identifier	node		1167212	0					
ANR	1167460	Identifier	target		1167212	1					
ANR	1167461	Argument	reg		1167212	1					
ANR	1167462	Identifier	reg		1167212	0					
ANR	1167463	IfStatement	if ( r )		1167212	7					
ANR	1167464	Condition	r	1309:8:31486:31486	1167212	0	True				
ANR	1167465	Identifier	r		1167212	0					
ANR	1167466	ReturnStatement	return r ;	1309:11:31489:31497	1167212	1	True				
ANR	1167467	Identifier	r		1167212	0					
ANR	1167468	IfStatement	if ( IS_ENCLOSE_CALLED ( node ) )		1167212	8					
ANR	1167469	Condition	IS_ENCLOSE_CALLED ( node )	1311:8:31530:31552	1167212	0	True				
ANR	1167470	CallExpression	IS_ENCLOSE_CALLED ( node )		1167212	0					
ANR	1167471	Callee	IS_ENCLOSE_CALLED		1167212	0					
ANR	1167472	Identifier	IS_ENCLOSE_CALLED		1167212	0					
ANR	1167473	ArgumentList	node		1167212	1					
ANR	1167474	Argument	node		1167212	0					
ANR	1167475	Identifier	node		1167212	0					
ANR	1167476	CompoundStatement		40:33:1257:1257	1167212	1					
ANR	1167477	IfStatement	"if ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) )"		1167212	0					
ANR	1167478	Condition	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"	1312:10:31567:31610	1167212	0	True				
ANR	1167479	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"		1167212	0					
ANR	1167480	Callee	BIT_STATUS_AT		1167212	0					
ANR	1167481	Identifier	BIT_STATUS_AT		1167212	0					
ANR	1167482	ArgumentList	reg -> bt_mem_end		1167212	1					
ANR	1167483	Argument	reg -> bt_mem_end		1167212	0					
ANR	1167484	PtrMemberAccess	reg -> bt_mem_end		1167212	0					
ANR	1167485	Identifier	reg		1167212	0					
ANR	1167486	Identifier	bt_mem_end		1167212	1					
ANR	1167487	Argument	node -> regnum		1167212	1					
ANR	1167488	PtrMemberAccess	node -> regnum		1167212	0					
ANR	1167489	Identifier	node		1167212	0					
ANR	1167490	Identifier	regnum		1167212	1					
ANR	1167491	ExpressionStatement	"r = add_opcode ( reg , ( IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_PUSH_REC : OP_MEMORY_END_PUSH ) )"	1313:1:31614:31717	1167212	1	True				
ANR	1167492	AssignmentExpression	"r = add_opcode ( reg , ( IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_PUSH_REC : OP_MEMORY_END_PUSH ) )"		1167212	0		=			
ANR	1167493	Identifier	r		1167212	0					
ANR	1167494	CallExpression	"add_opcode ( reg , ( IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_PUSH_REC : OP_MEMORY_END_PUSH ) )"		1167212	1					
ANR	1167495	Callee	add_opcode		1167212	0					
ANR	1167496	Identifier	add_opcode		1167212	0					
ANR	1167497	ArgumentList	reg		1167212	1					
ANR	1167498	Argument	reg		1167212	0					
ANR	1167499	Identifier	reg		1167212	0					
ANR	1167500	Argument	IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_PUSH_REC : OP_MEMORY_END_PUSH		1167212	1					
ANR	1167501	ConditionalExpression	IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_PUSH_REC : OP_MEMORY_END_PUSH		1167212	0					
ANR	1167502	Condition	IS_ENCLOSE_RECURSION ( node )		1167212	0					
ANR	1167503	CallExpression	IS_ENCLOSE_RECURSION ( node )		1167212	0					
ANR	1167504	Callee	IS_ENCLOSE_RECURSION		1167212	0					
ANR	1167505	Identifier	IS_ENCLOSE_RECURSION		1167212	0					
ANR	1167506	ArgumentList	node		1167212	1					
ANR	1167507	Argument	node		1167212	0					
ANR	1167508	Identifier	node		1167212	0					
ANR	1167509	Identifier	OP_MEMORY_END_PUSH_REC		1167212	1					
ANR	1167510	Identifier	OP_MEMORY_END_PUSH		1167212	2					
ANR	1167511	ElseStatement	else		1167212	0					
ANR	1167512	ExpressionStatement	"r = add_opcode ( reg , ( IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_REC : OP_MEMORY_END ) )"	1316:1:31731:31824	1167212	0	True				
ANR	1167513	AssignmentExpression	"r = add_opcode ( reg , ( IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_REC : OP_MEMORY_END ) )"		1167212	0		=			
ANR	1167514	Identifier	r		1167212	0					
ANR	1167515	CallExpression	"add_opcode ( reg , ( IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_REC : OP_MEMORY_END ) )"		1167212	1					
ANR	1167516	Callee	add_opcode		1167212	0					
ANR	1167517	Identifier	add_opcode		1167212	0					
ANR	1167518	ArgumentList	reg		1167212	1					
ANR	1167519	Argument	reg		1167212	0					
ANR	1167520	Identifier	reg		1167212	0					
ANR	1167521	Argument	IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_REC : OP_MEMORY_END		1167212	1					
ANR	1167522	ConditionalExpression	IS_ENCLOSE_RECURSION ( node ) ? OP_MEMORY_END_REC : OP_MEMORY_END		1167212	0					
ANR	1167523	Condition	IS_ENCLOSE_RECURSION ( node )		1167212	0					
ANR	1167524	CallExpression	IS_ENCLOSE_RECURSION ( node )		1167212	0					
ANR	1167525	Callee	IS_ENCLOSE_RECURSION		1167212	0					
ANR	1167526	Identifier	IS_ENCLOSE_RECURSION		1167212	0					
ANR	1167527	ArgumentList	node		1167212	1					
ANR	1167528	Argument	node		1167212	0					
ANR	1167529	Identifier	node		1167212	0					
ANR	1167530	Identifier	OP_MEMORY_END_REC		1167212	1					
ANR	1167531	Identifier	OP_MEMORY_END		1167212	2					
ANR	1167532	IfStatement	if ( r )		1167212	1					
ANR	1167533	Condition	r	1319:10:31837:31837	1167212	0	True				
ANR	1167534	Identifier	r		1167212	0					
ANR	1167535	ReturnStatement	return r ;	1319:13:31840:31848	1167212	1	True				
ANR	1167536	Identifier	r		1167212	0					
ANR	1167537	ExpressionStatement	"r = add_mem_num ( reg , node -> regnum )"	1320:6:31856:31890	1167212	2	True				
ANR	1167538	AssignmentExpression	"r = add_mem_num ( reg , node -> regnum )"		1167212	0		=			
ANR	1167539	Identifier	r		1167212	0					
ANR	1167540	CallExpression	"add_mem_num ( reg , node -> regnum )"		1167212	1					
ANR	1167541	Callee	add_mem_num		1167212	0					
ANR	1167542	Identifier	add_mem_num		1167212	0					
ANR	1167543	ArgumentList	reg		1167212	1					
ANR	1167544	Argument	reg		1167212	0					
ANR	1167545	Identifier	reg		1167212	0					
ANR	1167546	Argument	node -> regnum		1167212	1					
ANR	1167547	PtrMemberAccess	node -> regnum		1167212	0					
ANR	1167548	Identifier	node		1167212	0					
ANR	1167549	Identifier	regnum		1167212	1					
ANR	1167550	IfStatement	if ( r )		1167212	3					
ANR	1167551	Condition	r	1321:10:31902:31902	1167212	0	True				
ANR	1167552	Identifier	r		1167212	0					
ANR	1167553	ReturnStatement	return r ;	1321:13:31905:31913	1167212	1	True				
ANR	1167554	Identifier	r		1167212	0					
ANR	1167555	ExpressionStatement	"r = add_opcode ( reg , OP_RETURN )"	1322:6:31921:31951	1167212	4	True				
ANR	1167556	AssignmentExpression	"r = add_opcode ( reg , OP_RETURN )"		1167212	0		=			
ANR	1167557	Identifier	r		1167212	0					
ANR	1167558	CallExpression	"add_opcode ( reg , OP_RETURN )"		1167212	1					
ANR	1167559	Callee	add_opcode		1167212	0					
ANR	1167560	Identifier	add_opcode		1167212	0					
ANR	1167561	ArgumentList	reg		1167212	1					
ANR	1167562	Argument	reg		1167212	0					
ANR	1167563	Identifier	reg		1167212	0					
ANR	1167564	Argument	OP_RETURN		1167212	1					
ANR	1167565	Identifier	OP_RETURN		1167212	0					
ANR	1167566	ElseStatement	else		1167212	0					
ANR	1167567	CompoundStatement		55:4:1681:1681	1167212	0					
ANR	1167568	IfStatement	"if ( BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum ) )"		1167212	0					
ANR	1167569	Condition	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"	1327:10:31991:32034	1167212	0	True				
ANR	1167570	CallExpression	"BIT_STATUS_AT ( reg -> bt_mem_end , node -> regnum )"		1167212	0					
ANR	1167571	Callee	BIT_STATUS_AT		1167212	0					
ANR	1167572	Identifier	BIT_STATUS_AT		1167212	0					
ANR	1167573	ArgumentList	reg -> bt_mem_end		1167212	1					
ANR	1167574	Argument	reg -> bt_mem_end		1167212	0					
ANR	1167575	PtrMemberAccess	reg -> bt_mem_end		1167212	0					
ANR	1167576	Identifier	reg		1167212	0					
ANR	1167577	Identifier	bt_mem_end		1167212	1					
ANR	1167578	Argument	node -> regnum		1167212	1					
ANR	1167579	PtrMemberAccess	node -> regnum		1167212	0					
ANR	1167580	Identifier	node		1167212	0					
ANR	1167581	Identifier	regnum		1167212	1					
ANR	1167582	ExpressionStatement	"r = add_opcode ( reg , OP_MEMORY_END_PUSH )"	1328:1:32038:32077	1167212	1	True				
ANR	1167583	AssignmentExpression	"r = add_opcode ( reg , OP_MEMORY_END_PUSH )"		1167212	0		=			
ANR	1167584	Identifier	r		1167212	0					
ANR	1167585	CallExpression	"add_opcode ( reg , OP_MEMORY_END_PUSH )"		1167212	1					
ANR	1167586	Callee	add_opcode		1167212	0					
ANR	1167587	Identifier	add_opcode		1167212	0					
ANR	1167588	ArgumentList	reg		1167212	1					
ANR	1167589	Argument	reg		1167212	0					
ANR	1167590	Identifier	reg		1167212	0					
ANR	1167591	Argument	OP_MEMORY_END_PUSH		1167212	1					
ANR	1167592	Identifier	OP_MEMORY_END_PUSH		1167212	0					
ANR	1167593	ElseStatement	else		1167212	0					
ANR	1167594	ExpressionStatement	"r = add_opcode ( reg , OP_MEMORY_END )"	1330:1:32091:32125	1167212	0	True				
ANR	1167595	AssignmentExpression	"r = add_opcode ( reg , OP_MEMORY_END )"		1167212	0		=			
ANR	1167596	Identifier	r		1167212	0					
ANR	1167597	CallExpression	"add_opcode ( reg , OP_MEMORY_END )"		1167212	1					
ANR	1167598	Callee	add_opcode		1167212	0					
ANR	1167599	Identifier	add_opcode		1167212	0					
ANR	1167600	ArgumentList	reg		1167212	1					
ANR	1167601	Argument	reg		1167212	0					
ANR	1167602	Identifier	reg		1167212	0					
ANR	1167603	Argument	OP_MEMORY_END		1167212	1					
ANR	1167604	Identifier	OP_MEMORY_END		1167212	0					
ANR	1167605	IfStatement	if ( r )		1167212	1					
ANR	1167606	Condition	r	1331:10:32137:32137	1167212	0	True				
ANR	1167607	Identifier	r		1167212	0					
ANR	1167608	ReturnStatement	return r ;	1331:13:32140:32148	1167212	1	True				
ANR	1167609	Identifier	r		1167212	0					
ANR	1167610	ExpressionStatement	"r = add_mem_num ( reg , node -> regnum )"	1332:6:32156:32190	1167212	2	True				
ANR	1167611	AssignmentExpression	"r = add_mem_num ( reg , node -> regnum )"		1167212	0		=			
ANR	1167612	Identifier	r		1167212	0					
ANR	1167613	CallExpression	"add_mem_num ( reg , node -> regnum )"		1167212	1					
ANR	1167614	Callee	add_mem_num		1167212	0					
ANR	1167615	Identifier	add_mem_num		1167212	0					
ANR	1167616	ArgumentList	reg		1167212	1					
ANR	1167617	Argument	reg		1167212	0					
ANR	1167618	Identifier	reg		1167212	0					
ANR	1167619	Argument	node -> regnum		1167212	1					
ANR	1167620	PtrMemberAccess	node -> regnum		1167212	0					
ANR	1167621	Identifier	node		1167212	0					
ANR	1167622	Identifier	regnum		1167212	1					
ANR	1167623	BreakStatement	break ;	1334:4:32202:32207	1167212	9	True				
ANR	1167624	Label	case ENCLOSE_STOP_BACKTRACK :	1336:2:32212:32239	1167212	10	True				
ANR	1167625	Identifier	ENCLOSE_STOP_BACKTRACK		1167212	0					
ANR	1167626	IfStatement	if ( IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT ( node ) )		1167212	11					
ANR	1167627	Condition	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT ( node )	1337:8:32249:32286	1167212	0	True				
ANR	1167628	CallExpression	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT ( node )		1167212	0					
ANR	1167629	Callee	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT		1167212	0					
ANR	1167630	Identifier	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT		1167212	0					
ANR	1167631	ArgumentList	node		1167212	1					
ANR	1167632	Argument	node		1167212	0					
ANR	1167633	Identifier	node		1167212	0					
ANR	1167634	CompoundStatement		67:6:1999:2033	1167212	1					
ANR	1167635	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node -> target ) ;	1338:6:32297:32331	1167212	0	True				
ANR	1167636	IdentifierDecl	* qn = NQTFR ( node -> target )		1167212	0					
ANR	1167637	IdentifierDeclType	QtfrNode *		1167212	0					
ANR	1167638	Identifier	qn		1167212	1					
ANR	1167639	AssignmentExpression	* qn = NQTFR ( node -> target )		1167212	2		=			
ANR	1167640	Identifier	qn		1167212	0					
ANR	1167641	CallExpression	NQTFR ( node -> target )		1167212	1					
ANR	1167642	Callee	NQTFR		1167212	0					
ANR	1167643	Identifier	NQTFR		1167212	0					
ANR	1167644	ArgumentList	node -> target		1167212	1					
ANR	1167645	Argument	node -> target		1167212	0					
ANR	1167646	PtrMemberAccess	node -> target		1167212	0					
ANR	1167647	Identifier	node		1167212	0					
ANR	1167648	Identifier	target		1167212	1					
ANR	1167649	ExpressionStatement	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"	1339:6:32339:32391	1167212	1	True				
ANR	1167650	AssignmentExpression	"r = compile_tree_n_times ( qn -> target , qn -> lower , reg )"		1167212	0		=			
ANR	1167651	Identifier	r		1167212	0					
ANR	1167652	CallExpression	"compile_tree_n_times ( qn -> target , qn -> lower , reg )"		1167212	1					
ANR	1167653	Callee	compile_tree_n_times		1167212	0					
ANR	1167654	Identifier	compile_tree_n_times		1167212	0					
ANR	1167655	ArgumentList	qn -> target		1167212	1					
ANR	1167656	Argument	qn -> target		1167212	0					
ANR	1167657	PtrMemberAccess	qn -> target		1167212	0					
ANR	1167658	Identifier	qn		1167212	0					
ANR	1167659	Identifier	target		1167212	1					
ANR	1167660	Argument	qn -> lower		1167212	1					
ANR	1167661	PtrMemberAccess	qn -> lower		1167212	0					
ANR	1167662	Identifier	qn		1167212	0					
ANR	1167663	Identifier	lower		1167212	1					
ANR	1167664	Argument	reg		1167212	2					
ANR	1167665	Identifier	reg		1167212	0					
ANR	1167666	IfStatement	if ( r )		1167212	2					
ANR	1167667	Condition	r	1340:10:32403:32403	1167212	0	True				
ANR	1167668	Identifier	r		1167212	0					
ANR	1167669	ReturnStatement	return r ;	1340:13:32406:32414	1167212	1	True				
ANR	1167670	Identifier	r		1167212	0					
ANR	1167671	ExpressionStatement	"len = compile_length_tree ( qn -> target , reg )"	1342:6:32423:32465	1167212	3	True				
ANR	1167672	AssignmentExpression	"len = compile_length_tree ( qn -> target , reg )"		1167212	0		=			
ANR	1167673	Identifier	len		1167212	0					
ANR	1167674	CallExpression	"compile_length_tree ( qn -> target , reg )"		1167212	1					
ANR	1167675	Callee	compile_length_tree		1167212	0					
ANR	1167676	Identifier	compile_length_tree		1167212	0					
ANR	1167677	ArgumentList	qn -> target		1167212	1					
ANR	1167678	Argument	qn -> target		1167212	0					
ANR	1167679	PtrMemberAccess	qn -> target		1167212	0					
ANR	1167680	Identifier	qn		1167212	0					
ANR	1167681	Identifier	target		1167212	1					
ANR	1167682	Argument	reg		1167212	1					
ANR	1167683	Identifier	reg		1167212	0					
ANR	1167684	IfStatement	if ( len < 0 )		1167212	4					
ANR	1167685	Condition	len < 0	1343:10:32477:32483	1167212	0	True				
ANR	1167686	RelationalExpression	len < 0		1167212	0		<			
ANR	1167687	Identifier	len		1167212	0					
ANR	1167688	PrimaryExpression	0		1167212	1					
ANR	1167689	ReturnStatement	return len ;	1343:19:32486:32496	1167212	1	True				
ANR	1167690	Identifier	len		1167212	0					
ANR	1167691	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , len + SIZE_OP_POP + SIZE_OP_JUMP )"	1345:6:32505:32576	1167212	5	True				
ANR	1167692	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , len + SIZE_OP_POP + SIZE_OP_JUMP )"		1167212	0		=			
ANR	1167693	Identifier	r		1167212	0					
ANR	1167694	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , len + SIZE_OP_POP + SIZE_OP_JUMP )"		1167212	1					
ANR	1167695	Callee	add_opcode_rel_addr		1167212	0					
ANR	1167696	Identifier	add_opcode_rel_addr		1167212	0					
ANR	1167697	ArgumentList	reg		1167212	1					
ANR	1167698	Argument	reg		1167212	0					
ANR	1167699	Identifier	reg		1167212	0					
ANR	1167700	Argument	OP_PUSH		1167212	1					
ANR	1167701	Identifier	OP_PUSH		1167212	0					
ANR	1167702	Argument	len + SIZE_OP_POP + SIZE_OP_JUMP		1167212	2					
ANR	1167703	AdditiveExpression	len + SIZE_OP_POP + SIZE_OP_JUMP		1167212	0		+			
ANR	1167704	Identifier	len		1167212	0					
ANR	1167705	AdditiveExpression	SIZE_OP_POP + SIZE_OP_JUMP		1167212	1		+			
ANR	1167706	Identifier	SIZE_OP_POP		1167212	0					
ANR	1167707	Identifier	SIZE_OP_JUMP		1167212	1					
ANR	1167708	IfStatement	if ( r )		1167212	6					
ANR	1167709	Condition	r	1346:10:32588:32588	1167212	0	True				
ANR	1167710	Identifier	r		1167212	0					
ANR	1167711	ReturnStatement	return r ;	1346:13:32591:32599	1167212	1	True				
ANR	1167712	Identifier	r		1167212	0					
ANR	1167713	ExpressionStatement	"r = compile_tree ( qn -> target , reg )"	1347:6:32607:32640	1167212	7	True				
ANR	1167714	AssignmentExpression	"r = compile_tree ( qn -> target , reg )"		1167212	0		=			
ANR	1167715	Identifier	r		1167212	0					
ANR	1167716	CallExpression	"compile_tree ( qn -> target , reg )"		1167212	1					
ANR	1167717	Callee	compile_tree		1167212	0					
ANR	1167718	Identifier	compile_tree		1167212	0					
ANR	1167719	ArgumentList	qn -> target		1167212	1					
ANR	1167720	Argument	qn -> target		1167212	0					
ANR	1167721	PtrMemberAccess	qn -> target		1167212	0					
ANR	1167722	Identifier	qn		1167212	0					
ANR	1167723	Identifier	target		1167212	1					
ANR	1167724	Argument	reg		1167212	1					
ANR	1167725	Identifier	reg		1167212	0					
ANR	1167726	IfStatement	if ( r )		1167212	8					
ANR	1167727	Condition	r	1348:10:32652:32652	1167212	0	True				
ANR	1167728	Identifier	r		1167212	0					
ANR	1167729	ReturnStatement	return r ;	1348:13:32655:32663	1167212	1	True				
ANR	1167730	Identifier	r		1167212	0					
ANR	1167731	ExpressionStatement	"r = add_opcode ( reg , OP_POP )"	1349:6:32671:32698	1167212	9	True				
ANR	1167732	AssignmentExpression	"r = add_opcode ( reg , OP_POP )"		1167212	0		=			
ANR	1167733	Identifier	r		1167212	0					
ANR	1167734	CallExpression	"add_opcode ( reg , OP_POP )"		1167212	1					
ANR	1167735	Callee	add_opcode		1167212	0					
ANR	1167736	Identifier	add_opcode		1167212	0					
ANR	1167737	ArgumentList	reg		1167212	1					
ANR	1167738	Argument	reg		1167212	0					
ANR	1167739	Identifier	reg		1167212	0					
ANR	1167740	Argument	OP_POP		1167212	1					
ANR	1167741	Identifier	OP_POP		1167212	0					
ANR	1167742	IfStatement	if ( r )		1167212	10					
ANR	1167743	Condition	r	1350:10:32710:32710	1167212	0	True				
ANR	1167744	Identifier	r		1167212	0					
ANR	1167745	ReturnStatement	return r ;	1350:13:32713:32721	1167212	1	True				
ANR	1167746	Identifier	r		1167212	0					
ANR	1167747	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( ( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP ) )"	1351:6:32729:32838	1167212	11	True				
ANR	1167748	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , - ( ( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP ) )"		1167212	0		=			
ANR	1167749	Identifier	r		1167212	0					
ANR	1167750	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , - ( ( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP ) )"		1167212	1					
ANR	1167751	Callee	add_opcode_rel_addr		1167212	0					
ANR	1167752	Identifier	add_opcode_rel_addr		1167212	0					
ANR	1167753	ArgumentList	reg		1167212	1					
ANR	1167754	Argument	reg		1167212	0					
ANR	1167755	Identifier	reg		1167212	0					
ANR	1167756	Argument	OP_JUMP		1167212	1					
ANR	1167757	Identifier	OP_JUMP		1167212	0					
ANR	1167758	Argument	- ( ( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP )		1167212	2					
ANR	1167759	UnaryOperationExpression	- ( ( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP )		1167212	0					
ANR	1167760	UnaryOperator	-		1167212	0					
ANR	1167761	AdditiveExpression	( int ) SIZE_OP_PUSH + len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP		1167212	1		+			
ANR	1167762	CastExpression	( int ) SIZE_OP_PUSH		1167212	0					
ANR	1167763	CastTarget	int		1167212	0					
ANR	1167764	Identifier	SIZE_OP_PUSH		1167212	1					
ANR	1167765	AdditiveExpression	len + ( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP		1167212	1		+			
ANR	1167766	Identifier	len		1167212	0					
ANR	1167767	AdditiveExpression	( int ) SIZE_OP_POP + ( int ) SIZE_OP_JUMP		1167212	1		+			
ANR	1167768	CastExpression	( int ) SIZE_OP_POP		1167212	0					
ANR	1167769	CastTarget	int		1167212	0					
ANR	1167770	Identifier	SIZE_OP_POP		1167212	1					
ANR	1167771	CastExpression	( int ) SIZE_OP_JUMP		1167212	1					
ANR	1167772	CastTarget	int		1167212	0					
ANR	1167773	Identifier	SIZE_OP_JUMP		1167212	1					
ANR	1167774	ElseStatement	else		1167212	0					
ANR	1167775	CompoundStatement		83:9:2557:2557	1167212	0					
ANR	1167776	ExpressionStatement	"r = add_opcode ( reg , OP_PUSH_STOP_BT )"	1355:6:32863:32899	1167212	0	True				
ANR	1167777	AssignmentExpression	"r = add_opcode ( reg , OP_PUSH_STOP_BT )"		1167212	0		=			
ANR	1167778	Identifier	r		1167212	0					
ANR	1167779	CallExpression	"add_opcode ( reg , OP_PUSH_STOP_BT )"		1167212	1					
ANR	1167780	Callee	add_opcode		1167212	0					
ANR	1167781	Identifier	add_opcode		1167212	0					
ANR	1167782	ArgumentList	reg		1167212	1					
ANR	1167783	Argument	reg		1167212	0					
ANR	1167784	Identifier	reg		1167212	0					
ANR	1167785	Argument	OP_PUSH_STOP_BT		1167212	1					
ANR	1167786	Identifier	OP_PUSH_STOP_BT		1167212	0					
ANR	1167787	IfStatement	if ( r )		1167212	1					
ANR	1167788	Condition	r	1356:10:32911:32911	1167212	0	True				
ANR	1167789	Identifier	r		1167212	0					
ANR	1167790	ReturnStatement	return r ;	1356:13:32914:32922	1167212	1	True				
ANR	1167791	Identifier	r		1167212	0					
ANR	1167792	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1357:6:32930:32965	1167212	2	True				
ANR	1167793	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		1167212	0		=			
ANR	1167794	Identifier	r		1167212	0					
ANR	1167795	CallExpression	"compile_tree ( node -> target , reg )"		1167212	1					
ANR	1167796	Callee	compile_tree		1167212	0					
ANR	1167797	Identifier	compile_tree		1167212	0					
ANR	1167798	ArgumentList	node -> target		1167212	1					
ANR	1167799	Argument	node -> target		1167212	0					
ANR	1167800	PtrMemberAccess	node -> target		1167212	0					
ANR	1167801	Identifier	node		1167212	0					
ANR	1167802	Identifier	target		1167212	1					
ANR	1167803	Argument	reg		1167212	1					
ANR	1167804	Identifier	reg		1167212	0					
ANR	1167805	IfStatement	if ( r )		1167212	3					
ANR	1167806	Condition	r	1358:10:32977:32977	1167212	0	True				
ANR	1167807	Identifier	r		1167212	0					
ANR	1167808	ReturnStatement	return r ;	1358:13:32980:32988	1167212	1	True				
ANR	1167809	Identifier	r		1167212	0					
ANR	1167810	ExpressionStatement	"r = add_opcode ( reg , OP_POP_STOP_BT )"	1359:6:32996:33031	1167212	4	True				
ANR	1167811	AssignmentExpression	"r = add_opcode ( reg , OP_POP_STOP_BT )"		1167212	0		=			
ANR	1167812	Identifier	r		1167212	0					
ANR	1167813	CallExpression	"add_opcode ( reg , OP_POP_STOP_BT )"		1167212	1					
ANR	1167814	Callee	add_opcode		1167212	0					
ANR	1167815	Identifier	add_opcode		1167212	0					
ANR	1167816	ArgumentList	reg		1167212	1					
ANR	1167817	Argument	reg		1167212	0					
ANR	1167818	Identifier	reg		1167212	0					
ANR	1167819	Argument	OP_POP_STOP_BT		1167212	1					
ANR	1167820	Identifier	OP_POP_STOP_BT		1167212	0					
ANR	1167821	BreakStatement	break ;	1361:4:33043:33048	1167212	12	True				
ANR	1167822	Label	default :	1363:2:33053:33060	1167212	13	True				
ANR	1167823	Identifier	default		1167212	0					
ANR	1167824	ReturnStatement	return ONIGERR_TYPE_BUG ;	1364:4:33066:33089	1167212	14	True				
ANR	1167825	Identifier	ONIGERR_TYPE_BUG		1167212	0					
ANR	1167826	BreakStatement	break ;	1365:4:33095:33100	1167212	15	True				
ANR	1167827	ReturnStatement	return r ;	1368:2:33109:33117	1167212	3	True				
ANR	1167828	Identifier	r		1167212	0					
ANR	1167829	ReturnType	static int		1167212	1					
ANR	1167830	Identifier	compile_enclose_node		1167212	2					
ANR	1167831	ParameterList	"EncloseNode * node , regex_t * reg"		1167212	3					
ANR	1167832	Parameter	EncloseNode * node	1271:21:30264:30280	1167212	0	True				
ANR	1167833	ParameterType	EncloseNode *		1167212	0					
ANR	1167834	Identifier	node		1167212	1					
ANR	1167835	Parameter	regex_t * reg	1271:40:30283:30294	1167212	1	True				
ANR	1167836	ParameterType	regex_t *		1167212	0					
ANR	1167837	Identifier	reg		1167212	1					
ANR	1167838	CFGEntryNode	ENTRY		1167212		True				
ANR	1167839	CFGExitNode	EXIT		1167212		True				
ANR	1167840	Symbol	BBUF_GET_OFFSET_POS		1167212						
ANR	1167841	Symbol	OP_RETURN		1167212						
ANR	1167842	Symbol	SIZE_OP_MEMORY_END_PUSH_REC		1167212						
ANR	1167843	Symbol	ENCLOSE_OPTION		1167212						
ANR	1167844	Symbol	NQTFR		1167212						
ANR	1167845	Symbol	SIZE_OP_MEMORY_START_PUSH		1167212						
ANR	1167846	Symbol	OP_MEMORY_END_PUSH		1167212						
ANR	1167847	Symbol	len		1167212						
ANR	1167848	Symbol	reg		1167212						
ANR	1167849	Symbol	compile_option_node		1167212						
ANR	1167850	Symbol	OP_CALL		1167212						
ANR	1167851	Symbol	OP_PUSH_STOP_BT		1167212						
ANR	1167852	Symbol	* node		1167212						
ANR	1167853	Symbol	add_opcode		1167212						
ANR	1167854	Symbol	OP_POP_STOP_BT		1167212						
ANR	1167855	Symbol	qn		1167212						
ANR	1167856	Symbol	SIZE_OP_JUMP		1167212						
ANR	1167857	Symbol	BIT_STATUS_AT		1167212						
ANR	1167858	Symbol	OP_JUMP		1167212						
ANR	1167859	Symbol	NST_ADDR_FIXED		1167212						
ANR	1167860	Symbol	OP_MEMORY_END_REC		1167212						
ANR	1167861	Symbol	add_abs_addr		1167212						
ANR	1167862	Symbol	node -> regnum		1167212						
ANR	1167863	Symbol	ONIGERR_TYPE_BUG		1167212						
ANR	1167864	Symbol	qn -> target		1167212						
ANR	1167865	Symbol	node		1167212						
ANR	1167866	Symbol	OP_POP		1167212						
ANR	1167867	Symbol	OP_MEMORY_END_PUSH_REC		1167212						
ANR	1167868	Symbol	node -> type		1167212						
ANR	1167869	Symbol	OP_MEMORY_END		1167212						
ANR	1167870	Symbol	OP_MEMORY_START_PUSH		1167212						
ANR	1167871	Symbol	SIZE_OP_MEMORY_END_PUSH		1167212						
ANR	1167872	Symbol	* qn		1167212						
ANR	1167873	Symbol	compile_tree_n_times		1167212						
ANR	1167874	Symbol	OP_PUSH		1167212						
ANR	1167875	Symbol	SIZE_OP_MEMORY_END		1167212						
ANR	1167876	Symbol	OP_MEMORY_START		1167212						
ANR	1167877	Symbol	add_mem_num		1167212						
ANR	1167878	Symbol	qn -> lower		1167212						
ANR	1167879	Symbol	reg -> bt_mem_end		1167212						
ANR	1167880	Symbol	SIZE_OP_MEMORY_END_REC		1167212						
ANR	1167881	Symbol	IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT		1167212						
ANR	1167882	Symbol	node -> call_addr		1167212						
ANR	1167883	Symbol	add_opcode_rel_addr		1167212						
ANR	1167884	Symbol	compile_length_tree		1167212						
ANR	1167885	Symbol	IS_ENCLOSE_CALLED		1167212						
ANR	1167886	Symbol	SIZE_OP_PUSH		1167212						
ANR	1167887	Symbol	SIZE_ABSADDR		1167212						
ANR	1167888	Symbol	node -> state		1167212						
ANR	1167889	Symbol	r		1167212						
ANR	1167890	Symbol	compile_tree		1167212						
ANR	1167891	Symbol	reg -> bt_mem_start		1167212						
ANR	1167892	Symbol	SIZE_OP_POP		1167212						
ANR	1167893	Symbol	IS_ENCLOSE_RECURSION		1167212						
ANR	1167894	Symbol	SIZE_OP_RETURN		1167212						
ANR	1167895	Symbol	node -> target		1167212						
ANR	1167896	Symbol	* reg		1167212						
ANR	1167897	Function	compile_length_anchor_node	1371:0:33122:33803							
ANR	1167898	FunctionDef	"compile_length_anchor_node (AnchorNode * node , regex_t * reg)"		1167897	0					
ANR	1167899	CompoundStatement		1373:0:33192:33803	1167897	0					
ANR	1167900	IdentifierDeclStatement	int len ;	1374:2:33196:33203	1167897	0	True				
ANR	1167901	IdentifierDecl	len		1167897	0					
ANR	1167902	IdentifierDeclType	int		1167897	0					
ANR	1167903	Identifier	len		1167897	1					
ANR	1167904	IdentifierDeclStatement	int tlen = 0 ;	1375:2:33207:33219	1167897	1	True				
ANR	1167905	IdentifierDecl	tlen = 0		1167897	0					
ANR	1167906	IdentifierDeclType	int		1167897	0					
ANR	1167907	Identifier	tlen		1167897	1					
ANR	1167908	AssignmentExpression	tlen = 0		1167897	2		=			
ANR	1167909	Identifier	tlen		1167897	0					
ANR	1167910	PrimaryExpression	0		1167897	1					
ANR	1167911	IfStatement	if ( node -> target )		1167897	2					
ANR	1167912	Condition	node -> target	1377:6:33228:33239	1167897	0	True				
ANR	1167913	PtrMemberAccess	node -> target		1167897	0					
ANR	1167914	Identifier	node		1167897	0					
ANR	1167915	Identifier	target		1167897	1					
ANR	1167916	CompoundStatement		5:20:49:49	1167897	1					
ANR	1167917	ExpressionStatement	"tlen = compile_length_tree ( node -> target , reg )"	1378:4:33248:33293	1167897	0	True				
ANR	1167918	AssignmentExpression	"tlen = compile_length_tree ( node -> target , reg )"		1167897	0		=			
ANR	1167919	Identifier	tlen		1167897	0					
ANR	1167920	CallExpression	"compile_length_tree ( node -> target , reg )"		1167897	1					
ANR	1167921	Callee	compile_length_tree		1167897	0					
ANR	1167922	Identifier	compile_length_tree		1167897	0					
ANR	1167923	ArgumentList	node -> target		1167897	1					
ANR	1167924	Argument	node -> target		1167897	0					
ANR	1167925	PtrMemberAccess	node -> target		1167897	0					
ANR	1167926	Identifier	node		1167897	0					
ANR	1167927	Identifier	target		1167897	1					
ANR	1167928	Argument	reg		1167897	1					
ANR	1167929	Identifier	reg		1167897	0					
ANR	1167930	IfStatement	if ( tlen < 0 )		1167897	1					
ANR	1167931	Condition	tlen < 0	1379:8:33303:33310	1167897	0	True				
ANR	1167932	RelationalExpression	tlen < 0		1167897	0		<			
ANR	1167933	Identifier	tlen		1167897	0					
ANR	1167934	PrimaryExpression	0		1167897	1					
ANR	1167935	ReturnStatement	return tlen ;	1379:18:33313:33324	1167897	1	True				
ANR	1167936	Identifier	tlen		1167897	0					
ANR	1167937	SwitchStatement	switch ( node -> type )		1167897	3					
ANR	1167938	Condition	node -> type	1382:10:33341:33350	1167897	0	True				
ANR	1167939	PtrMemberAccess	node -> type		1167897	0					
ANR	1167940	Identifier	node		1167897	0					
ANR	1167941	Identifier	type		1167897	1					
ANR	1167942	CompoundStatement		10:22:160:160	1167897	1					
ANR	1167943	Label	case ANCHOR_PREC_READ :	1383:2:33357:33378	1167897	0	True				
ANR	1167944	Identifier	ANCHOR_PREC_READ		1167897	0					
ANR	1167945	ExpressionStatement	len = SIZE_OP_PUSH_POS + tlen + SIZE_OP_POP_POS	1384:4:33384:33431	1167897	1	True				
ANR	1167946	AssignmentExpression	len = SIZE_OP_PUSH_POS + tlen + SIZE_OP_POP_POS		1167897	0		=			
ANR	1167947	Identifier	len		1167897	0					
ANR	1167948	AdditiveExpression	SIZE_OP_PUSH_POS + tlen + SIZE_OP_POP_POS		1167897	1		+			
ANR	1167949	Identifier	SIZE_OP_PUSH_POS		1167897	0					
ANR	1167950	AdditiveExpression	tlen + SIZE_OP_POP_POS		1167897	1		+			
ANR	1167951	Identifier	tlen		1167897	0					
ANR	1167952	Identifier	SIZE_OP_POP_POS		1167897	1					
ANR	1167953	BreakStatement	break ;	1385:4:33437:33442	1167897	2	True				
ANR	1167954	Label	case ANCHOR_PREC_READ_NOT :	1386:2:33446:33471	1167897	3	True				
ANR	1167955	Identifier	ANCHOR_PREC_READ_NOT		1167897	0					
ANR	1167956	ExpressionStatement	len = SIZE_OP_PUSH_POS_NOT + tlen + SIZE_OP_FAIL_POS	1387:4:33477:33529	1167897	4	True				
ANR	1167957	AssignmentExpression	len = SIZE_OP_PUSH_POS_NOT + tlen + SIZE_OP_FAIL_POS		1167897	0		=			
ANR	1167958	Identifier	len		1167897	0					
ANR	1167959	AdditiveExpression	SIZE_OP_PUSH_POS_NOT + tlen + SIZE_OP_FAIL_POS		1167897	1		+			
ANR	1167960	Identifier	SIZE_OP_PUSH_POS_NOT		1167897	0					
ANR	1167961	AdditiveExpression	tlen + SIZE_OP_FAIL_POS		1167897	1		+			
ANR	1167962	Identifier	tlen		1167897	0					
ANR	1167963	Identifier	SIZE_OP_FAIL_POS		1167897	1					
ANR	1167964	BreakStatement	break ;	1388:4:33535:33540	1167897	5	True				
ANR	1167965	Label	case ANCHOR_LOOK_BEHIND :	1389:2:33544:33567	1167897	6	True				
ANR	1167966	Identifier	ANCHOR_LOOK_BEHIND		1167897	0					
ANR	1167967	ExpressionStatement	len = SIZE_OP_LOOK_BEHIND + tlen	1390:4:33573:33605	1167897	7	True				
ANR	1167968	AssignmentExpression	len = SIZE_OP_LOOK_BEHIND + tlen		1167897	0		=			
ANR	1167969	Identifier	len		1167897	0					
ANR	1167970	AdditiveExpression	SIZE_OP_LOOK_BEHIND + tlen		1167897	1		+			
ANR	1167971	Identifier	SIZE_OP_LOOK_BEHIND		1167897	0					
ANR	1167972	Identifier	tlen		1167897	1					
ANR	1167973	BreakStatement	break ;	1391:4:33611:33616	1167897	8	True				
ANR	1167974	Label	case ANCHOR_LOOK_BEHIND_NOT :	1392:2:33620:33647	1167897	9	True				
ANR	1167975	Identifier	ANCHOR_LOOK_BEHIND_NOT		1167897	0					
ANR	1167976	ExpressionStatement	len = SIZE_OP_PUSH_LOOK_BEHIND_NOT + tlen + SIZE_OP_FAIL_LOOK_BEHIND_NOT	1393:4:33653:33725	1167897	10	True				
ANR	1167977	AssignmentExpression	len = SIZE_OP_PUSH_LOOK_BEHIND_NOT + tlen + SIZE_OP_FAIL_LOOK_BEHIND_NOT		1167897	0		=			
ANR	1167978	Identifier	len		1167897	0					
ANR	1167979	AdditiveExpression	SIZE_OP_PUSH_LOOK_BEHIND_NOT + tlen + SIZE_OP_FAIL_LOOK_BEHIND_NOT		1167897	1		+			
ANR	1167980	Identifier	SIZE_OP_PUSH_LOOK_BEHIND_NOT		1167897	0					
ANR	1167981	AdditiveExpression	tlen + SIZE_OP_FAIL_LOOK_BEHIND_NOT		1167897	1		+			
ANR	1167982	Identifier	tlen		1167897	0					
ANR	1167983	Identifier	SIZE_OP_FAIL_LOOK_BEHIND_NOT		1167897	1					
ANR	1167984	BreakStatement	break ;	1394:4:33731:33736	1167897	11	True				
ANR	1167985	Label	default :	1396:2:33741:33748	1167897	12	True				
ANR	1167986	Identifier	default		1167897	0					
ANR	1167987	ExpressionStatement	len = SIZE_OPCODE	1397:4:33754:33771	1167897	13	True				
ANR	1167988	AssignmentExpression	len = SIZE_OPCODE		1167897	0		=			
ANR	1167989	Identifier	len		1167897	0					
ANR	1167990	Identifier	SIZE_OPCODE		1167897	1					
ANR	1167991	BreakStatement	break ;	1398:4:33777:33782	1167897	14	True				
ANR	1167992	ReturnStatement	return len ;	1401:2:33791:33801	1167897	4	True				
ANR	1167993	Identifier	len		1167897	0					
ANR	1167994	ReturnType	static int		1167897	1					
ANR	1167995	Identifier	compile_length_anchor_node		1167897	2					
ANR	1167996	ParameterList	"AnchorNode * node , regex_t * reg"		1167897	3					
ANR	1167997	Parameter	AnchorNode * node	1372:27:33160:33175	1167897	0	True				
ANR	1167998	ParameterType	AnchorNode *		1167897	0					
ANR	1167999	Identifier	node		1167897	1					
ANR	1168000	Parameter	regex_t * reg	1372:45:33178:33189	1167897	1	True				
ANR	1168001	ParameterType	regex_t *		1167897	0					
ANR	1168002	Identifier	reg		1167897	1					
ANR	1168003	CFGEntryNode	ENTRY		1167897		True				
ANR	1168004	CFGExitNode	EXIT		1167897		True				
ANR	1168005	Symbol	SIZE_OP_FAIL_POS		1167897						
ANR	1168006	Symbol	compile_length_tree		1167897						
ANR	1168007	Symbol	SIZE_OP_POP_POS		1167897						
ANR	1168008	Symbol	SIZE_OP_LOOK_BEHIND		1167897						
ANR	1168009	Symbol	SIZE_OP_PUSH_LOOK_BEHIND_NOT		1167897						
ANR	1168010	Symbol	node		1167897						
ANR	1168011	Symbol	SIZE_OPCODE		1167897						
ANR	1168012	Symbol	len		1167897						
ANR	1168013	Symbol	SIZE_OP_PUSH_POS_NOT		1167897						
ANR	1168014	Symbol	SIZE_OP_FAIL_LOOK_BEHIND_NOT		1167897						
ANR	1168015	Symbol	reg		1167897						
ANR	1168016	Symbol	tlen		1167897						
ANR	1168017	Symbol	node -> type		1167897						
ANR	1168018	Symbol	* node		1167897						
ANR	1168019	Symbol	node -> target		1167897						
ANR	1168020	Symbol	SIZE_OP_PUSH_POS		1167897						
ANR	1168021	Function	compile_anchor_node	1404:0:33806:36285							
ANR	1168022	FunctionDef	"compile_anchor_node (AnchorNode * node , regex_t * reg)"		1168021	0					
ANR	1168023	CompoundStatement		1406:0:33869:36285	1168021	0					
ANR	1168024	IdentifierDeclStatement	"int r , len ;"	1407:2:33873:33883	1168021	0	True				
ANR	1168025	IdentifierDecl	r		1168021	0					
ANR	1168026	IdentifierDeclType	int		1168021	0					
ANR	1168027	Identifier	r		1168021	1					
ANR	1168028	IdentifierDecl	len		1168021	1					
ANR	1168029	IdentifierDeclType	int		1168021	0					
ANR	1168030	Identifier	len		1168021	1					
ANR	1168031	SwitchStatement	switch ( node -> type )		1168021	1					
ANR	1168032	Condition	node -> type	1409:10:33896:33905	1168021	0	True				
ANR	1168033	PtrMemberAccess	node -> type		1168021	0					
ANR	1168034	Identifier	node		1168021	0					
ANR	1168035	Identifier	type		1168021	1					
ANR	1168036	CompoundStatement		4:22:38:38	1168021	1					
ANR	1168037	Label	case ANCHOR_BEGIN_BUF :	1410:2:33912:33933	1168021	0	True				
ANR	1168038	Identifier	ANCHOR_BEGIN_BUF		1168021	0					
ANR	1168039	ExpressionStatement	"r = add_opcode ( reg , OP_BEGIN_BUF )"	1410:30:33940:33973	1168021	1	True				
ANR	1168040	AssignmentExpression	"r = add_opcode ( reg , OP_BEGIN_BUF )"		1168021	0		=			
ANR	1168041	Identifier	r		1168021	0					
ANR	1168042	CallExpression	"add_opcode ( reg , OP_BEGIN_BUF )"		1168021	1					
ANR	1168043	Callee	add_opcode		1168021	0					
ANR	1168044	Identifier	add_opcode		1168021	0					
ANR	1168045	ArgumentList	reg		1168021	1					
ANR	1168046	Argument	reg		1168021	0					
ANR	1168047	Identifier	reg		1168021	0					
ANR	1168048	Argument	OP_BEGIN_BUF		1168021	1					
ANR	1168049	Identifier	OP_BEGIN_BUF		1168021	0					
ANR	1168050	BreakStatement	break ;	1410:70:33980:33985	1168021	2	True				
ANR	1168051	Label	case ANCHOR_END_BUF :	1411:2:33989:34008	1168021	3	True				
ANR	1168052	Identifier	ANCHOR_END_BUF		1168021	0					
ANR	1168053	ExpressionStatement	"r = add_opcode ( reg , OP_END_BUF )"	1411:30:34017:34048	1168021	4	True				
ANR	1168054	AssignmentExpression	"r = add_opcode ( reg , OP_END_BUF )"		1168021	0		=			
ANR	1168055	Identifier	r		1168021	0					
ANR	1168056	CallExpression	"add_opcode ( reg , OP_END_BUF )"		1168021	1					
ANR	1168057	Callee	add_opcode		1168021	0					
ANR	1168058	Identifier	add_opcode		1168021	0					
ANR	1168059	ArgumentList	reg		1168021	1					
ANR	1168060	Argument	reg		1168021	0					
ANR	1168061	Identifier	reg		1168021	0					
ANR	1168062	Argument	OP_END_BUF		1168021	1					
ANR	1168063	Identifier	OP_END_BUF		1168021	0					
ANR	1168064	BreakStatement	break ;	1411:70:34057:34062	1168021	5	True				
ANR	1168065	Label	case ANCHOR_BEGIN_LINE :	1412:2:34066:34088	1168021	6	True				
ANR	1168066	Identifier	ANCHOR_BEGIN_LINE		1168021	0					
ANR	1168067	ExpressionStatement	"r = add_opcode ( reg , OP_BEGIN_LINE )"	1412:30:34094:34128	1168021	7	True				
ANR	1168068	AssignmentExpression	"r = add_opcode ( reg , OP_BEGIN_LINE )"		1168021	0		=			
ANR	1168069	Identifier	r		1168021	0					
ANR	1168070	CallExpression	"add_opcode ( reg , OP_BEGIN_LINE )"		1168021	1					
ANR	1168071	Callee	add_opcode		1168021	0					
ANR	1168072	Identifier	add_opcode		1168021	0					
ANR	1168073	ArgumentList	reg		1168021	1					
ANR	1168074	Argument	reg		1168021	0					
ANR	1168075	Identifier	reg		1168021	0					
ANR	1168076	Argument	OP_BEGIN_LINE		1168021	1					
ANR	1168077	Identifier	OP_BEGIN_LINE		1168021	0					
ANR	1168078	BreakStatement	break ;	1412:70:34134:34139	1168021	8	True				
ANR	1168079	Label	case ANCHOR_END_LINE :	1413:2:34143:34163	1168021	9	True				
ANR	1168080	Identifier	ANCHOR_END_LINE		1168021	0					
ANR	1168081	ExpressionStatement	"r = add_opcode ( reg , OP_END_LINE )"	1413:30:34171:34203	1168021	10	True				
ANR	1168082	AssignmentExpression	"r = add_opcode ( reg , OP_END_LINE )"		1168021	0		=			
ANR	1168083	Identifier	r		1168021	0					
ANR	1168084	CallExpression	"add_opcode ( reg , OP_END_LINE )"		1168021	1					
ANR	1168085	Callee	add_opcode		1168021	0					
ANR	1168086	Identifier	add_opcode		1168021	0					
ANR	1168087	ArgumentList	reg		1168021	1					
ANR	1168088	Argument	reg		1168021	0					
ANR	1168089	Identifier	reg		1168021	0					
ANR	1168090	Argument	OP_END_LINE		1168021	1					
ANR	1168091	Identifier	OP_END_LINE		1168021	0					
ANR	1168092	BreakStatement	break ;	1413:70:34211:34216	1168021	11	True				
ANR	1168093	Label	case ANCHOR_SEMI_END_BUF :	1414:2:34220:34244	1168021	12	True				
ANR	1168094	Identifier	ANCHOR_SEMI_END_BUF		1168021	0					
ANR	1168095	ExpressionStatement	"r = add_opcode ( reg , OP_SEMI_END_BUF )"	1414:30:34248:34284	1168021	13	True				
ANR	1168096	AssignmentExpression	"r = add_opcode ( reg , OP_SEMI_END_BUF )"		1168021	0		=			
ANR	1168097	Identifier	r		1168021	0					
ANR	1168098	CallExpression	"add_opcode ( reg , OP_SEMI_END_BUF )"		1168021	1					
ANR	1168099	Callee	add_opcode		1168021	0					
ANR	1168100	Identifier	add_opcode		1168021	0					
ANR	1168101	ArgumentList	reg		1168021	1					
ANR	1168102	Argument	reg		1168021	0					
ANR	1168103	Identifier	reg		1168021	0					
ANR	1168104	Argument	OP_SEMI_END_BUF		1168021	1					
ANR	1168105	Identifier	OP_SEMI_END_BUF		1168021	0					
ANR	1168106	BreakStatement	break ;	1414:70:34288:34293	1168021	14	True				
ANR	1168107	Label	case ANCHOR_BEGIN_POSITION :	1415:2:34297:34323	1168021	15	True				
ANR	1168108	Identifier	ANCHOR_BEGIN_POSITION		1168021	0					
ANR	1168109	ExpressionStatement	"r = add_opcode ( reg , OP_BEGIN_POSITION )"	1415:30:34325:34363	1168021	16	True				
ANR	1168110	AssignmentExpression	"r = add_opcode ( reg , OP_BEGIN_POSITION )"		1168021	0		=			
ANR	1168111	Identifier	r		1168021	0					
ANR	1168112	CallExpression	"add_opcode ( reg , OP_BEGIN_POSITION )"		1168021	1					
ANR	1168113	Callee	add_opcode		1168021	0					
ANR	1168114	Identifier	add_opcode		1168021	0					
ANR	1168115	ArgumentList	reg		1168021	1					
ANR	1168116	Argument	reg		1168021	0					
ANR	1168117	Identifier	reg		1168021	0					
ANR	1168118	Argument	OP_BEGIN_POSITION		1168021	1					
ANR	1168119	Identifier	OP_BEGIN_POSITION		1168021	0					
ANR	1168120	BreakStatement	break ;	1415:70:34365:34370	1168021	17	True				
ANR	1168121	Label	case ANCHOR_WORD_BOUND :	1417:2:34375:34397	1168021	18	True				
ANR	1168122	Identifier	ANCHOR_WORD_BOUND		1168021	0					
ANR	1168123	ExpressionStatement	"r = add_opcode ( reg , OP_WORD_BOUND )"	1417:30:34403:34437	1168021	19	True				
ANR	1168124	AssignmentExpression	"r = add_opcode ( reg , OP_WORD_BOUND )"		1168021	0		=			
ANR	1168125	Identifier	r		1168021	0					
ANR	1168126	CallExpression	"add_opcode ( reg , OP_WORD_BOUND )"		1168021	1					
ANR	1168127	Callee	add_opcode		1168021	0					
ANR	1168128	Identifier	add_opcode		1168021	0					
ANR	1168129	ArgumentList	reg		1168021	1					
ANR	1168130	Argument	reg		1168021	0					
ANR	1168131	Identifier	reg		1168021	0					
ANR	1168132	Argument	OP_WORD_BOUND		1168021	1					
ANR	1168133	Identifier	OP_WORD_BOUND		1168021	0					
ANR	1168134	BreakStatement	break ;	1417:70:34443:34448	1168021	20	True				
ANR	1168135	Label	case ANCHOR_NOT_WORD_BOUND :	1418:2:34452:34478	1168021	21	True				
ANR	1168136	Identifier	ANCHOR_NOT_WORD_BOUND		1168021	0					
ANR	1168137	ExpressionStatement	"r = add_opcode ( reg , OP_NOT_WORD_BOUND )"	1418:30:34480:34518	1168021	22	True				
ANR	1168138	AssignmentExpression	"r = add_opcode ( reg , OP_NOT_WORD_BOUND )"		1168021	0		=			
ANR	1168139	Identifier	r		1168021	0					
ANR	1168140	CallExpression	"add_opcode ( reg , OP_NOT_WORD_BOUND )"		1168021	1					
ANR	1168141	Callee	add_opcode		1168021	0					
ANR	1168142	Identifier	add_opcode		1168021	0					
ANR	1168143	ArgumentList	reg		1168021	1					
ANR	1168144	Argument	reg		1168021	0					
ANR	1168145	Identifier	reg		1168021	0					
ANR	1168146	Argument	OP_NOT_WORD_BOUND		1168021	1					
ANR	1168147	Identifier	OP_NOT_WORD_BOUND		1168021	0					
ANR	1168148	BreakStatement	break ;	1418:70:34520:34525	1168021	23	True				
ANR	1168149	Label	case ANCHOR_WORD_BEGIN :	1420:2:34555:34577	1168021	24	True				
ANR	1168150	Identifier	ANCHOR_WORD_BEGIN		1168021	0					
ANR	1168151	ExpressionStatement	"r = add_opcode ( reg , OP_WORD_BEGIN )"	1420:30:34583:34617	1168021	25	True				
ANR	1168152	AssignmentExpression	"r = add_opcode ( reg , OP_WORD_BEGIN )"		1168021	0		=			
ANR	1168153	Identifier	r		1168021	0					
ANR	1168154	CallExpression	"add_opcode ( reg , OP_WORD_BEGIN )"		1168021	1					
ANR	1168155	Callee	add_opcode		1168021	0					
ANR	1168156	Identifier	add_opcode		1168021	0					
ANR	1168157	ArgumentList	reg		1168021	1					
ANR	1168158	Argument	reg		1168021	0					
ANR	1168159	Identifier	reg		1168021	0					
ANR	1168160	Argument	OP_WORD_BEGIN		1168021	1					
ANR	1168161	Identifier	OP_WORD_BEGIN		1168021	0					
ANR	1168162	BreakStatement	break ;	1420:70:34623:34628	1168021	26	True				
ANR	1168163	Label	case ANCHOR_WORD_END :	1421:2:34632:34652	1168021	27	True				
ANR	1168164	Identifier	ANCHOR_WORD_END		1168021	0					
ANR	1168165	ExpressionStatement	"r = add_opcode ( reg , OP_WORD_END )"	1421:30:34660:34692	1168021	28	True				
ANR	1168166	AssignmentExpression	"r = add_opcode ( reg , OP_WORD_END )"		1168021	0		=			
ANR	1168167	Identifier	r		1168021	0					
ANR	1168168	CallExpression	"add_opcode ( reg , OP_WORD_END )"		1168021	1					
ANR	1168169	Callee	add_opcode		1168021	0					
ANR	1168170	Identifier	add_opcode		1168021	0					
ANR	1168171	ArgumentList	reg		1168021	1					
ANR	1168172	Argument	reg		1168021	0					
ANR	1168173	Identifier	reg		1168021	0					
ANR	1168174	Argument	OP_WORD_END		1168021	1					
ANR	1168175	Identifier	OP_WORD_END		1168021	0					
ANR	1168176	BreakStatement	break ;	1421:70:34700:34705	1168021	29	True				
ANR	1168177	Label	case ANCHOR_PREC_READ :	1424:2:34717:34738	1168021	30	True				
ANR	1168178	Identifier	ANCHOR_PREC_READ		1168021	0					
ANR	1168179	ExpressionStatement	"r = add_opcode ( reg , OP_PUSH_POS )"	1425:4:34744:34776	1168021	31	True				
ANR	1168180	AssignmentExpression	"r = add_opcode ( reg , OP_PUSH_POS )"		1168021	0		=			
ANR	1168181	Identifier	r		1168021	0					
ANR	1168182	CallExpression	"add_opcode ( reg , OP_PUSH_POS )"		1168021	1					
ANR	1168183	Callee	add_opcode		1168021	0					
ANR	1168184	Identifier	add_opcode		1168021	0					
ANR	1168185	ArgumentList	reg		1168021	1					
ANR	1168186	Argument	reg		1168021	0					
ANR	1168187	Identifier	reg		1168021	0					
ANR	1168188	Argument	OP_PUSH_POS		1168021	1					
ANR	1168189	Identifier	OP_PUSH_POS		1168021	0					
ANR	1168190	IfStatement	if ( r )		1168021	32					
ANR	1168191	Condition	r	1426:8:34786:34786	1168021	0	True				
ANR	1168192	Identifier	r		1168021	0					
ANR	1168193	ReturnStatement	return r ;	1426:11:34789:34797	1168021	1	True				
ANR	1168194	Identifier	r		1168021	0					
ANR	1168195	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1427:4:34803:34838	1168021	33	True				
ANR	1168196	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		1168021	0		=			
ANR	1168197	Identifier	r		1168021	0					
ANR	1168198	CallExpression	"compile_tree ( node -> target , reg )"		1168021	1					
ANR	1168199	Callee	compile_tree		1168021	0					
ANR	1168200	Identifier	compile_tree		1168021	0					
ANR	1168201	ArgumentList	node -> target		1168021	1					
ANR	1168202	Argument	node -> target		1168021	0					
ANR	1168203	PtrMemberAccess	node -> target		1168021	0					
ANR	1168204	Identifier	node		1168021	0					
ANR	1168205	Identifier	target		1168021	1					
ANR	1168206	Argument	reg		1168021	1					
ANR	1168207	Identifier	reg		1168021	0					
ANR	1168208	IfStatement	if ( r )		1168021	34					
ANR	1168209	Condition	r	1428:8:34848:34848	1168021	0	True				
ANR	1168210	Identifier	r		1168021	0					
ANR	1168211	ReturnStatement	return r ;	1428:11:34851:34859	1168021	1	True				
ANR	1168212	Identifier	r		1168021	0					
ANR	1168213	ExpressionStatement	"r = add_opcode ( reg , OP_POP_POS )"	1429:4:34865:34896	1168021	35	True				
ANR	1168214	AssignmentExpression	"r = add_opcode ( reg , OP_POP_POS )"		1168021	0		=			
ANR	1168215	Identifier	r		1168021	0					
ANR	1168216	CallExpression	"add_opcode ( reg , OP_POP_POS )"		1168021	1					
ANR	1168217	Callee	add_opcode		1168021	0					
ANR	1168218	Identifier	add_opcode		1168021	0					
ANR	1168219	ArgumentList	reg		1168021	1					
ANR	1168220	Argument	reg		1168021	0					
ANR	1168221	Identifier	reg		1168021	0					
ANR	1168222	Argument	OP_POP_POS		1168021	1					
ANR	1168223	Identifier	OP_POP_POS		1168021	0					
ANR	1168224	BreakStatement	break ;	1430:4:34902:34907	1168021	36	True				
ANR	1168225	Label	case ANCHOR_PREC_READ_NOT :	1432:2:34912:34937	1168021	37	True				
ANR	1168226	Identifier	ANCHOR_PREC_READ_NOT		1168021	0					
ANR	1168227	ExpressionStatement	"len = compile_length_tree ( node -> target , reg )"	1433:4:34943:34987	1168021	38	True				
ANR	1168228	AssignmentExpression	"len = compile_length_tree ( node -> target , reg )"		1168021	0		=			
ANR	1168229	Identifier	len		1168021	0					
ANR	1168230	CallExpression	"compile_length_tree ( node -> target , reg )"		1168021	1					
ANR	1168231	Callee	compile_length_tree		1168021	0					
ANR	1168232	Identifier	compile_length_tree		1168021	0					
ANR	1168233	ArgumentList	node -> target		1168021	1					
ANR	1168234	Argument	node -> target		1168021	0					
ANR	1168235	PtrMemberAccess	node -> target		1168021	0					
ANR	1168236	Identifier	node		1168021	0					
ANR	1168237	Identifier	target		1168021	1					
ANR	1168238	Argument	reg		1168021	1					
ANR	1168239	Identifier	reg		1168021	0					
ANR	1168240	IfStatement	if ( len < 0 )		1168021	39					
ANR	1168241	Condition	len < 0	1434:8:34997:35003	1168021	0	True				
ANR	1168242	RelationalExpression	len < 0		1168021	0		<			
ANR	1168243	Identifier	len		1168021	0					
ANR	1168244	PrimaryExpression	0		1168021	1					
ANR	1168245	ReturnStatement	return len ;	1434:17:35006:35016	1168021	1	True				
ANR	1168246	Identifier	len		1168021	0					
ANR	1168247	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH_POS_NOT , len + SIZE_OP_FAIL_POS )"	1435:4:35022:35091	1168021	40	True				
ANR	1168248	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH_POS_NOT , len + SIZE_OP_FAIL_POS )"		1168021	0		=			
ANR	1168249	Identifier	r		1168021	0					
ANR	1168250	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH_POS_NOT , len + SIZE_OP_FAIL_POS )"		1168021	1					
ANR	1168251	Callee	add_opcode_rel_addr		1168021	0					
ANR	1168252	Identifier	add_opcode_rel_addr		1168021	0					
ANR	1168253	ArgumentList	reg		1168021	1					
ANR	1168254	Argument	reg		1168021	0					
ANR	1168255	Identifier	reg		1168021	0					
ANR	1168256	Argument	OP_PUSH_POS_NOT		1168021	1					
ANR	1168257	Identifier	OP_PUSH_POS_NOT		1168021	0					
ANR	1168258	Argument	len + SIZE_OP_FAIL_POS		1168021	2					
ANR	1168259	AdditiveExpression	len + SIZE_OP_FAIL_POS		1168021	0		+			
ANR	1168260	Identifier	len		1168021	0					
ANR	1168261	Identifier	SIZE_OP_FAIL_POS		1168021	1					
ANR	1168262	IfStatement	if ( r )		1168021	41					
ANR	1168263	Condition	r	1436:8:35101:35101	1168021	0	True				
ANR	1168264	Identifier	r		1168021	0					
ANR	1168265	ReturnStatement	return r ;	1436:11:35104:35112	1168021	1	True				
ANR	1168266	Identifier	r		1168021	0					
ANR	1168267	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1437:4:35118:35153	1168021	42	True				
ANR	1168268	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		1168021	0		=			
ANR	1168269	Identifier	r		1168021	0					
ANR	1168270	CallExpression	"compile_tree ( node -> target , reg )"		1168021	1					
ANR	1168271	Callee	compile_tree		1168021	0					
ANR	1168272	Identifier	compile_tree		1168021	0					
ANR	1168273	ArgumentList	node -> target		1168021	1					
ANR	1168274	Argument	node -> target		1168021	0					
ANR	1168275	PtrMemberAccess	node -> target		1168021	0					
ANR	1168276	Identifier	node		1168021	0					
ANR	1168277	Identifier	target		1168021	1					
ANR	1168278	Argument	reg		1168021	1					
ANR	1168279	Identifier	reg		1168021	0					
ANR	1168280	IfStatement	if ( r )		1168021	43					
ANR	1168281	Condition	r	1438:8:35163:35163	1168021	0	True				
ANR	1168282	Identifier	r		1168021	0					
ANR	1168283	ReturnStatement	return r ;	1438:11:35166:35174	1168021	1	True				
ANR	1168284	Identifier	r		1168021	0					
ANR	1168285	ExpressionStatement	"r = add_opcode ( reg , OP_FAIL_POS )"	1439:4:35180:35212	1168021	44	True				
ANR	1168286	AssignmentExpression	"r = add_opcode ( reg , OP_FAIL_POS )"		1168021	0		=			
ANR	1168287	Identifier	r		1168021	0					
ANR	1168288	CallExpression	"add_opcode ( reg , OP_FAIL_POS )"		1168021	1					
ANR	1168289	Callee	add_opcode		1168021	0					
ANR	1168290	Identifier	add_opcode		1168021	0					
ANR	1168291	ArgumentList	reg		1168021	1					
ANR	1168292	Argument	reg		1168021	0					
ANR	1168293	Identifier	reg		1168021	0					
ANR	1168294	Argument	OP_FAIL_POS		1168021	1					
ANR	1168295	Identifier	OP_FAIL_POS		1168021	0					
ANR	1168296	BreakStatement	break ;	1440:4:35218:35223	1168021	45	True				
ANR	1168297	Label	case ANCHOR_LOOK_BEHIND :	1442:2:35228:35251	1168021	46	True				
ANR	1168298	Identifier	ANCHOR_LOOK_BEHIND		1168021	0					
ANR	1168299	CompoundStatement		39:6:1395:1400	1168021	47					
ANR	1168300	IdentifierDeclStatement	int n ;	1444:6:35265:35270	1168021	0	True				
ANR	1168301	IdentifierDecl	n		1168021	0					
ANR	1168302	IdentifierDeclType	int		1168021	0					
ANR	1168303	Identifier	n		1168021	1					
ANR	1168304	ExpressionStatement	"r = add_opcode ( reg , OP_LOOK_BEHIND )"	1445:6:35278:35313	1168021	1	True				
ANR	1168305	AssignmentExpression	"r = add_opcode ( reg , OP_LOOK_BEHIND )"		1168021	0		=			
ANR	1168306	Identifier	r		1168021	0					
ANR	1168307	CallExpression	"add_opcode ( reg , OP_LOOK_BEHIND )"		1168021	1					
ANR	1168308	Callee	add_opcode		1168021	0					
ANR	1168309	Identifier	add_opcode		1168021	0					
ANR	1168310	ArgumentList	reg		1168021	1					
ANR	1168311	Argument	reg		1168021	0					
ANR	1168312	Identifier	reg		1168021	0					
ANR	1168313	Argument	OP_LOOK_BEHIND		1168021	1					
ANR	1168314	Identifier	OP_LOOK_BEHIND		1168021	0					
ANR	1168315	IfStatement	if ( r )		1168021	2					
ANR	1168316	Condition	r	1446:10:35325:35325	1168021	0	True				
ANR	1168317	Identifier	r		1168021	0					
ANR	1168318	ReturnStatement	return r ;	1446:13:35328:35336	1168021	1	True				
ANR	1168319	Identifier	r		1168021	0					
ANR	1168320	IfStatement	if ( node -> char_len < 0 )		1168021	3					
ANR	1168321	Condition	node -> char_len < 0	1447:10:35348:35365	1168021	0	True				
ANR	1168322	RelationalExpression	node -> char_len < 0		1168021	0		<			
ANR	1168323	PtrMemberAccess	node -> char_len		1168021	0					
ANR	1168324	Identifier	node		1168021	0					
ANR	1168325	Identifier	char_len		1168021	1					
ANR	1168326	PrimaryExpression	0		1168021	1					
ANR	1168327	CompoundStatement		42:30:1498:1498	1168021	1					
ANR	1168328	ExpressionStatement	"r = get_char_length_tree ( node -> target , reg , & n )"	1448:1:35371:35418	1168021	0	True				
ANR	1168329	AssignmentExpression	"r = get_char_length_tree ( node -> target , reg , & n )"		1168021	0		=			
ANR	1168330	Identifier	r		1168021	0					
ANR	1168331	CallExpression	"get_char_length_tree ( node -> target , reg , & n )"		1168021	1					
ANR	1168332	Callee	get_char_length_tree		1168021	0					
ANR	1168333	Identifier	get_char_length_tree		1168021	0					
ANR	1168334	ArgumentList	node -> target		1168021	1					
ANR	1168335	Argument	node -> target		1168021	0					
ANR	1168336	PtrMemberAccess	node -> target		1168021	0					
ANR	1168337	Identifier	node		1168021	0					
ANR	1168338	Identifier	target		1168021	1					
ANR	1168339	Argument	reg		1168021	1					
ANR	1168340	Identifier	reg		1168021	0					
ANR	1168341	Argument	& n		1168021	2					
ANR	1168342	UnaryOperationExpression	& n		1168021	0					
ANR	1168343	UnaryOperator	&		1168021	0					
ANR	1168344	Identifier	n		1168021	1					
ANR	1168345	IfStatement	if ( r )		1168021	1					
ANR	1168346	Condition	r	1449:5:35425:35425	1168021	0	True				
ANR	1168347	Identifier	r		1168021	0					
ANR	1168348	ReturnStatement	return ONIGERR_INVALID_LOOK_BEHIND_PATTERN ;	1449:8:35428:35470	1168021	1	True				
ANR	1168349	Identifier	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		1168021	0					
ANR	1168350	ElseStatement	else		1168021	0					
ANR	1168351	ExpressionStatement	n = node -> char_len	1452:1:35492:35510	1168021	0	True				
ANR	1168352	AssignmentExpression	n = node -> char_len		1168021	0		=			
ANR	1168353	Identifier	n		1168021	0					
ANR	1168354	PtrMemberAccess	node -> char_len		1168021	1					
ANR	1168355	Identifier	node		1168021	0					
ANR	1168356	Identifier	char_len		1168021	1					
ANR	1168357	ExpressionStatement	"r = add_length ( reg , n )"	1453:6:35518:35540	1168021	4	True				
ANR	1168358	AssignmentExpression	"r = add_length ( reg , n )"		1168021	0		=			
ANR	1168359	Identifier	r		1168021	0					
ANR	1168360	CallExpression	"add_length ( reg , n )"		1168021	1					
ANR	1168361	Callee	add_length		1168021	0					
ANR	1168362	Identifier	add_length		1168021	0					
ANR	1168363	ArgumentList	reg		1168021	1					
ANR	1168364	Argument	reg		1168021	0					
ANR	1168365	Identifier	reg		1168021	0					
ANR	1168366	Argument	n		1168021	1					
ANR	1168367	Identifier	n		1168021	0					
ANR	1168368	IfStatement	if ( r )		1168021	5					
ANR	1168369	Condition	r	1454:10:35552:35552	1168021	0	True				
ANR	1168370	Identifier	r		1168021	0					
ANR	1168371	ReturnStatement	return r ;	1454:13:35555:35563	1168021	1	True				
ANR	1168372	Identifier	r		1168021	0					
ANR	1168373	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1455:6:35571:35606	1168021	6	True				
ANR	1168374	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		1168021	0		=			
ANR	1168375	Identifier	r		1168021	0					
ANR	1168376	CallExpression	"compile_tree ( node -> target , reg )"		1168021	1					
ANR	1168377	Callee	compile_tree		1168021	0					
ANR	1168378	Identifier	compile_tree		1168021	0					
ANR	1168379	ArgumentList	node -> target		1168021	1					
ANR	1168380	Argument	node -> target		1168021	0					
ANR	1168381	PtrMemberAccess	node -> target		1168021	0					
ANR	1168382	Identifier	node		1168021	0					
ANR	1168383	Identifier	target		1168021	1					
ANR	1168384	Argument	reg		1168021	1					
ANR	1168385	Identifier	reg		1168021	0					
ANR	1168386	BreakStatement	break ;	1457:4:35618:35623	1168021	48	True				
ANR	1168387	Label	case ANCHOR_LOOK_BEHIND_NOT :	1459:2:35628:35655	1168021	49	True				
ANR	1168388	Identifier	ANCHOR_LOOK_BEHIND_NOT		1168021	0					
ANR	1168389	CompoundStatement		56:6:1799:1804	1168021	50					
ANR	1168390	IdentifierDeclStatement	int n ;	1461:6:35669:35674	1168021	0	True				
ANR	1168391	IdentifierDecl	n		1168021	0					
ANR	1168392	IdentifierDeclType	int		1168021	0					
ANR	1168393	Identifier	n		1168021	1					
ANR	1168394	ExpressionStatement	"len = compile_length_tree ( node -> target , reg )"	1462:6:35682:35726	1168021	1	True				
ANR	1168395	AssignmentExpression	"len = compile_length_tree ( node -> target , reg )"		1168021	0		=			
ANR	1168396	Identifier	len		1168021	0					
ANR	1168397	CallExpression	"compile_length_tree ( node -> target , reg )"		1168021	1					
ANR	1168398	Callee	compile_length_tree		1168021	0					
ANR	1168399	Identifier	compile_length_tree		1168021	0					
ANR	1168400	ArgumentList	node -> target		1168021	1					
ANR	1168401	Argument	node -> target		1168021	0					
ANR	1168402	PtrMemberAccess	node -> target		1168021	0					
ANR	1168403	Identifier	node		1168021	0					
ANR	1168404	Identifier	target		1168021	1					
ANR	1168405	Argument	reg		1168021	1					
ANR	1168406	Identifier	reg		1168021	0					
ANR	1168407	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH_LOOK_BEHIND_NOT , len + SIZE_OP_FAIL_LOOK_BEHIND_NOT )"	1463:6:35734:35829	1168021	2	True				
ANR	1168408	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH_LOOK_BEHIND_NOT , len + SIZE_OP_FAIL_LOOK_BEHIND_NOT )"		1168021	0		=			
ANR	1168409	Identifier	r		1168021	0					
ANR	1168410	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH_LOOK_BEHIND_NOT , len + SIZE_OP_FAIL_LOOK_BEHIND_NOT )"		1168021	1					
ANR	1168411	Callee	add_opcode_rel_addr		1168021	0					
ANR	1168412	Identifier	add_opcode_rel_addr		1168021	0					
ANR	1168413	ArgumentList	reg		1168021	1					
ANR	1168414	Argument	reg		1168021	0					
ANR	1168415	Identifier	reg		1168021	0					
ANR	1168416	Argument	OP_PUSH_LOOK_BEHIND_NOT		1168021	1					
ANR	1168417	Identifier	OP_PUSH_LOOK_BEHIND_NOT		1168021	0					
ANR	1168418	Argument	len + SIZE_OP_FAIL_LOOK_BEHIND_NOT		1168021	2					
ANR	1168419	AdditiveExpression	len + SIZE_OP_FAIL_LOOK_BEHIND_NOT		1168021	0		+			
ANR	1168420	Identifier	len		1168021	0					
ANR	1168421	Identifier	SIZE_OP_FAIL_LOOK_BEHIND_NOT		1168021	1					
ANR	1168422	IfStatement	if ( r )		1168021	3					
ANR	1168423	Condition	r	1465:10:35841:35841	1168021	0	True				
ANR	1168424	Identifier	r		1168021	0					
ANR	1168425	ReturnStatement	return r ;	1465:13:35844:35852	1168021	1	True				
ANR	1168426	Identifier	r		1168021	0					
ANR	1168427	IfStatement	if ( node -> char_len < 0 )		1168021	4					
ANR	1168428	Condition	node -> char_len < 0	1466:10:35864:35881	1168021	0	True				
ANR	1168429	RelationalExpression	node -> char_len < 0		1168021	0		<			
ANR	1168430	PtrMemberAccess	node -> char_len		1168021	0					
ANR	1168431	Identifier	node		1168021	0					
ANR	1168432	Identifier	char_len		1168021	1					
ANR	1168433	PrimaryExpression	0		1168021	1					
ANR	1168434	CompoundStatement		61:30:2014:2014	1168021	1					
ANR	1168435	ExpressionStatement	"r = get_char_length_tree ( node -> target , reg , & n )"	1467:1:35887:35934	1168021	0	True				
ANR	1168436	AssignmentExpression	"r = get_char_length_tree ( node -> target , reg , & n )"		1168021	0		=			
ANR	1168437	Identifier	r		1168021	0					
ANR	1168438	CallExpression	"get_char_length_tree ( node -> target , reg , & n )"		1168021	1					
ANR	1168439	Callee	get_char_length_tree		1168021	0					
ANR	1168440	Identifier	get_char_length_tree		1168021	0					
ANR	1168441	ArgumentList	node -> target		1168021	1					
ANR	1168442	Argument	node -> target		1168021	0					
ANR	1168443	PtrMemberAccess	node -> target		1168021	0					
ANR	1168444	Identifier	node		1168021	0					
ANR	1168445	Identifier	target		1168021	1					
ANR	1168446	Argument	reg		1168021	1					
ANR	1168447	Identifier	reg		1168021	0					
ANR	1168448	Argument	& n		1168021	2					
ANR	1168449	UnaryOperationExpression	& n		1168021	0					
ANR	1168450	UnaryOperator	&		1168021	0					
ANR	1168451	Identifier	n		1168021	1					
ANR	1168452	IfStatement	if ( r )		1168021	1					
ANR	1168453	Condition	r	1468:5:35941:35941	1168021	0	True				
ANR	1168454	Identifier	r		1168021	0					
ANR	1168455	ReturnStatement	return ONIGERR_INVALID_LOOK_BEHIND_PATTERN ;	1468:8:35944:35986	1168021	1	True				
ANR	1168456	Identifier	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		1168021	0					
ANR	1168457	ElseStatement	else		1168021	0					
ANR	1168458	ExpressionStatement	n = node -> char_len	1471:1:36008:36026	1168021	0	True				
ANR	1168459	AssignmentExpression	n = node -> char_len		1168021	0		=			
ANR	1168460	Identifier	n		1168021	0					
ANR	1168461	PtrMemberAccess	node -> char_len		1168021	1					
ANR	1168462	Identifier	node		1168021	0					
ANR	1168463	Identifier	char_len		1168021	1					
ANR	1168464	ExpressionStatement	"r = add_length ( reg , n )"	1472:6:36034:36056	1168021	5	True				
ANR	1168465	AssignmentExpression	"r = add_length ( reg , n )"		1168021	0		=			
ANR	1168466	Identifier	r		1168021	0					
ANR	1168467	CallExpression	"add_length ( reg , n )"		1168021	1					
ANR	1168468	Callee	add_length		1168021	0					
ANR	1168469	Identifier	add_length		1168021	0					
ANR	1168470	ArgumentList	reg		1168021	1					
ANR	1168471	Argument	reg		1168021	0					
ANR	1168472	Identifier	reg		1168021	0					
ANR	1168473	Argument	n		1168021	1					
ANR	1168474	Identifier	n		1168021	0					
ANR	1168475	IfStatement	if ( r )		1168021	6					
ANR	1168476	Condition	r	1473:10:36068:36068	1168021	0	True				
ANR	1168477	Identifier	r		1168021	0					
ANR	1168478	ReturnStatement	return r ;	1473:13:36071:36079	1168021	1	True				
ANR	1168479	Identifier	r		1168021	0					
ANR	1168480	ExpressionStatement	"r = compile_tree ( node -> target , reg )"	1474:6:36087:36122	1168021	7	True				
ANR	1168481	AssignmentExpression	"r = compile_tree ( node -> target , reg )"		1168021	0		=			
ANR	1168482	Identifier	r		1168021	0					
ANR	1168483	CallExpression	"compile_tree ( node -> target , reg )"		1168021	1					
ANR	1168484	Callee	compile_tree		1168021	0					
ANR	1168485	Identifier	compile_tree		1168021	0					
ANR	1168486	ArgumentList	node -> target		1168021	1					
ANR	1168487	Argument	node -> target		1168021	0					
ANR	1168488	PtrMemberAccess	node -> target		1168021	0					
ANR	1168489	Identifier	node		1168021	0					
ANR	1168490	Identifier	target		1168021	1					
ANR	1168491	Argument	reg		1168021	1					
ANR	1168492	Identifier	reg		1168021	0					
ANR	1168493	IfStatement	if ( r )		1168021	8					
ANR	1168494	Condition	r	1475:10:36134:36134	1168021	0	True				
ANR	1168495	Identifier	r		1168021	0					
ANR	1168496	ReturnStatement	return r ;	1475:13:36137:36145	1168021	1	True				
ANR	1168497	Identifier	r		1168021	0					
ANR	1168498	ExpressionStatement	"r = add_opcode ( reg , OP_FAIL_LOOK_BEHIND_NOT )"	1476:6:36153:36197	1168021	9	True				
ANR	1168499	AssignmentExpression	"r = add_opcode ( reg , OP_FAIL_LOOK_BEHIND_NOT )"		1168021	0		=			
ANR	1168500	Identifier	r		1168021	0					
ANR	1168501	CallExpression	"add_opcode ( reg , OP_FAIL_LOOK_BEHIND_NOT )"		1168021	1					
ANR	1168502	Callee	add_opcode		1168021	0					
ANR	1168503	Identifier	add_opcode		1168021	0					
ANR	1168504	ArgumentList	reg		1168021	1					
ANR	1168505	Argument	reg		1168021	0					
ANR	1168506	Identifier	reg		1168021	0					
ANR	1168507	Argument	OP_FAIL_LOOK_BEHIND_NOT		1168021	1					
ANR	1168508	Identifier	OP_FAIL_LOOK_BEHIND_NOT		1168021	0					
ANR	1168509	BreakStatement	break ;	1478:4:36209:36214	1168021	51	True				
ANR	1168510	Label	default :	1480:2:36219:36226	1168021	52	True				
ANR	1168511	Identifier	default		1168021	0					
ANR	1168512	ReturnStatement	return ONIGERR_TYPE_BUG ;	1481:4:36232:36255	1168021	53	True				
ANR	1168513	Identifier	ONIGERR_TYPE_BUG		1168021	0					
ANR	1168514	BreakStatement	break ;	1482:4:36261:36266	1168021	54	True				
ANR	1168515	ReturnStatement	return r ;	1485:2:36275:36283	1168021	2	True				
ANR	1168516	Identifier	r		1168021	0					
ANR	1168517	ReturnType	static int		1168021	1					
ANR	1168518	Identifier	compile_anchor_node		1168021	2					
ANR	1168519	ParameterList	"AnchorNode * node , regex_t * reg"		1168021	3					
ANR	1168520	Parameter	AnchorNode * node	1405:20:33837:33852	1168021	0	True				
ANR	1168521	ParameterType	AnchorNode *		1168021	0					
ANR	1168522	Identifier	node		1168021	1					
ANR	1168523	Parameter	regex_t * reg	1405:38:33855:33866	1168021	1	True				
ANR	1168524	ParameterType	regex_t *		1168021	0					
ANR	1168525	Identifier	reg		1168021	1					
ANR	1168526	CFGEntryNode	ENTRY		1168021		True				
ANR	1168527	CFGExitNode	EXIT		1168021		True				
ANR	1168528	Symbol	OP_SEMI_END_BUF		1168021						
ANR	1168529	Symbol	SIZE_OP_FAIL_POS		1168021						
ANR	1168530	Symbol	OP_PUSH_LOOK_BEHIND_NOT		1168021						
ANR	1168531	Symbol	OP_NOT_WORD_BOUND		1168021						
ANR	1168532	Symbol	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		1168021						
ANR	1168533	Symbol	add_length		1168021						
ANR	1168534	Symbol	OP_BEGIN_LINE		1168021						
ANR	1168535	Symbol	OP_LOOK_BEHIND		1168021						
ANR	1168536	Symbol	OP_FAIL_POS		1168021						
ANR	1168537	Symbol	len		1168021						
ANR	1168538	Symbol	OP_PUSH_POS_NOT		1168021						
ANR	1168539	Symbol	reg		1168021						
ANR	1168540	Symbol	OP_WORD_BOUND		1168021						
ANR	1168541	Symbol	* node		1168021						
ANR	1168542	Symbol	add_opcode		1168021						
ANR	1168543	Symbol	OP_BEGIN_POSITION		1168021						
ANR	1168544	Symbol	OP_FAIL_LOOK_BEHIND_NOT		1168021						
ANR	1168545	Symbol	OP_END_BUF		1168021						
ANR	1168546	Symbol	add_opcode_rel_addr		1168021						
ANR	1168547	Symbol	compile_length_tree		1168021						
ANR	1168548	Symbol	node -> char_len		1168021						
ANR	1168549	Symbol	ONIGERR_TYPE_BUG		1168021						
ANR	1168550	Symbol	OP_PUSH_POS		1168021						
ANR	1168551	Symbol	n		1168021						
ANR	1168552	Symbol	node		1168021						
ANR	1168553	Symbol	get_char_length_tree		1168021						
ANR	1168554	Symbol	r		1168021						
ANR	1168555	Symbol	OP_WORD_END		1168021						
ANR	1168556	Symbol	compile_tree		1168021						
ANR	1168557	Symbol	& n		1168021						
ANR	1168558	Symbol	SIZE_OP_FAIL_LOOK_BEHIND_NOT		1168021						
ANR	1168559	Symbol	node -> type		1168021						
ANR	1168560	Symbol	OP_WORD_BEGIN		1168021						
ANR	1168561	Symbol	OP_POP_POS		1168021						
ANR	1168562	Symbol	OP_BEGIN_BUF		1168021						
ANR	1168563	Symbol	OP_END_LINE		1168021						
ANR	1168564	Symbol	node -> target		1168021						
ANR	1168565	Function	compile_length_tree	1488:0:36288:38093							
ANR	1168566	FunctionDef	"compile_length_tree (Node * node , regex_t * reg)"		1168565	0					
ANR	1168567	CompoundStatement		1490:0:36345:38093	1168565	0					
ANR	1168568	IdentifierDeclStatement	"int len , type , r ;"	1491:2:36349:36365	1168565	0	True				
ANR	1168569	IdentifierDecl	len		1168565	0					
ANR	1168570	IdentifierDeclType	int		1168565	0					
ANR	1168571	Identifier	len		1168565	1					
ANR	1168572	IdentifierDecl	type		1168565	1					
ANR	1168573	IdentifierDeclType	int		1168565	0					
ANR	1168574	Identifier	type		1168565	1					
ANR	1168575	IdentifierDecl	r		1168565	2					
ANR	1168576	IdentifierDeclType	int		1168565	0					
ANR	1168577	Identifier	r		1168565	1					
ANR	1168578	ExpressionStatement	type = NTYPE ( node )	1493:2:36370:36388	1168565	1	True				
ANR	1168579	AssignmentExpression	type = NTYPE ( node )		1168565	0		=			
ANR	1168580	Identifier	type		1168565	0					
ANR	1168581	CallExpression	NTYPE ( node )		1168565	1					
ANR	1168582	Callee	NTYPE		1168565	0					
ANR	1168583	Identifier	NTYPE		1168565	0					
ANR	1168584	ArgumentList	node		1168565	1					
ANR	1168585	Argument	node		1168565	0					
ANR	1168586	Identifier	node		1168565	0					
ANR	1168587	SwitchStatement	switch ( type )		1168565	2					
ANR	1168588	Condition	type	1494:10:36400:36403	1168565	0	True				
ANR	1168589	Identifier	type		1168565	0					
ANR	1168590	CompoundStatement		5:16:60:60	1168565	1					
ANR	1168591	Label	case NT_LIST :	1495:2:36410:36422	1168565	0	True				
ANR	1168592	Identifier	NT_LIST		1168565	0					
ANR	1168593	ExpressionStatement	len = 0	1496:4:36428:36435	1168565	1	True				
ANR	1168594	AssignmentExpression	len = 0		1168565	0		=			
ANR	1168595	Identifier	len		1168565	0					
ANR	1168596	PrimaryExpression	0		1168565	1					
ANR	1168597	DoStatement	do		1168565	2					
ANR	1168598	CompoundStatement		8:7:98:98	1168565	0					
ANR	1168599	ExpressionStatement	"r = compile_length_tree ( NCAR ( node ) , reg )"	1498:6:36452:36492	1168565	0	True				
ANR	1168600	AssignmentExpression	"r = compile_length_tree ( NCAR ( node ) , reg )"		1168565	0		=			
ANR	1168601	Identifier	r		1168565	0					
ANR	1168602	CallExpression	"compile_length_tree ( NCAR ( node ) , reg )"		1168565	1					
ANR	1168603	Callee	compile_length_tree		1168565	0					
ANR	1168604	Identifier	compile_length_tree		1168565	0					
ANR	1168605	ArgumentList	NCAR ( node )		1168565	1					
ANR	1168606	Argument	NCAR ( node )		1168565	0					
ANR	1168607	CallExpression	NCAR ( node )		1168565	0					
ANR	1168608	Callee	NCAR		1168565	0					
ANR	1168609	Identifier	NCAR		1168565	0					
ANR	1168610	ArgumentList	node		1168565	1					
ANR	1168611	Argument	node		1168565	0					
ANR	1168612	Identifier	node		1168565	0					
ANR	1168613	Argument	reg		1168565	1					
ANR	1168614	Identifier	reg		1168565	0					
ANR	1168615	IfStatement	if ( r < 0 )		1168565	1					
ANR	1168616	Condition	r < 0	1499:10:36504:36508	1168565	0	True				
ANR	1168617	RelationalExpression	r < 0		1168565	0		<			
ANR	1168618	Identifier	r		1168565	0					
ANR	1168619	PrimaryExpression	0		1168565	1					
ANR	1168620	ReturnStatement	return r ;	1499:17:36511:36519	1168565	1	True				
ANR	1168621	Identifier	r		1168565	0					
ANR	1168622	ExpressionStatement	len += r	1500:6:36527:36535	1168565	2	True				
ANR	1168623	AssignmentExpression	len += r		1168565	0		+=			
ANR	1168624	Identifier	len		1168565	0					
ANR	1168625	Identifier	r		1168565	1					
ANR	1168626	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	1501:13:36550:36579	1168565	1	True				
ANR	1168627	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1168565	0					
ANR	1168628	Callee	IS_NOT_NULL		1168565	0					
ANR	1168629	Identifier	IS_NOT_NULL		1168565	0					
ANR	1168630	ArgumentList	node = NCDR ( node )		1168565	1					
ANR	1168631	Argument	node = NCDR ( node )		1168565	0					
ANR	1168632	AssignmentExpression	node = NCDR ( node )		1168565	0		=			
ANR	1168633	Identifier	node		1168565	0					
ANR	1168634	CallExpression	NCDR ( node )		1168565	1					
ANR	1168635	Callee	NCDR		1168565	0					
ANR	1168636	Identifier	NCDR		1168565	0					
ANR	1168637	ArgumentList	node		1168565	1					
ANR	1168638	Argument	node		1168565	0					
ANR	1168639	Identifier	node		1168565	0					
ANR	1168640	ExpressionStatement	r = len	1502:4:36587:36594	1168565	3	True				
ANR	1168641	AssignmentExpression	r = len		1168565	0		=			
ANR	1168642	Identifier	r		1168565	0					
ANR	1168643	Identifier	len		1168565	1					
ANR	1168644	BreakStatement	break ;	1503:4:36600:36605	1168565	4	True				
ANR	1168645	Label	case NT_ALT :	1505:2:36610:36621	1168565	5	True				
ANR	1168646	Identifier	NT_ALT		1168565	0					
ANR	1168647	CompoundStatement		18:6:289:294	1168565	6					
ANR	1168648	IdentifierDeclStatement	int n ;	1507:6:36635:36640	1168565	0	True				
ANR	1168649	IdentifierDecl	n		1168565	0					
ANR	1168650	IdentifierDeclType	int		1168565	0					
ANR	1168651	Identifier	n		1168565	1					
ANR	1168652	ExpressionStatement	n = r = 0	1509:6:36649:36658	1168565	1	True				
ANR	1168653	AssignmentExpression	n = r = 0		1168565	0		=			
ANR	1168654	Identifier	n		1168565	0					
ANR	1168655	AssignmentExpression	r = 0		1168565	1		=			
ANR	1168656	Identifier	r		1168565	0					
ANR	1168657	PrimaryExpression	0		1168565	1					
ANR	1168658	DoStatement	do		1168565	2					
ANR	1168659	CompoundStatement		21:9:323:323	1168565	0					
ANR	1168660	ExpressionStatement	"r += compile_length_tree ( NCAR ( node ) , reg )"	1511:1:36672:36713	1168565	0	True				
ANR	1168661	AssignmentExpression	"r += compile_length_tree ( NCAR ( node ) , reg )"		1168565	0		+=			
ANR	1168662	Identifier	r		1168565	0					
ANR	1168663	CallExpression	"compile_length_tree ( NCAR ( node ) , reg )"		1168565	1					
ANR	1168664	Callee	compile_length_tree		1168565	0					
ANR	1168665	Identifier	compile_length_tree		1168565	0					
ANR	1168666	ArgumentList	NCAR ( node )		1168565	1					
ANR	1168667	Argument	NCAR ( node )		1168565	0					
ANR	1168668	CallExpression	NCAR ( node )		1168565	0					
ANR	1168669	Callee	NCAR		1168565	0					
ANR	1168670	Identifier	NCAR		1168565	0					
ANR	1168671	ArgumentList	node		1168565	1					
ANR	1168672	Argument	node		1168565	0					
ANR	1168673	Identifier	node		1168565	0					
ANR	1168674	Argument	reg		1168565	1					
ANR	1168675	Identifier	reg		1168565	0					
ANR	1168676	ExpressionStatement	n ++	1512:1:36716:36719	1168565	1	True				
ANR	1168677	PostIncDecOperationExpression	n ++		1168565	0					
ANR	1168678	Identifier	n		1168565	0					
ANR	1168679	IncDec	++		1168565	1					
ANR	1168680	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	1513:15:36736:36765	1168565	1	True				
ANR	1168681	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1168565	0					
ANR	1168682	Callee	IS_NOT_NULL		1168565	0					
ANR	1168683	Identifier	IS_NOT_NULL		1168565	0					
ANR	1168684	ArgumentList	node = NCDR ( node )		1168565	1					
ANR	1168685	Argument	node = NCDR ( node )		1168565	0					
ANR	1168686	AssignmentExpression	node = NCDR ( node )		1168565	0		=			
ANR	1168687	Identifier	node		1168565	0					
ANR	1168688	CallExpression	NCDR ( node )		1168565	1					
ANR	1168689	Callee	NCDR		1168565	0					
ANR	1168690	Identifier	NCDR		1168565	0					
ANR	1168691	ArgumentList	node		1168565	1					
ANR	1168692	Argument	node		1168565	0					
ANR	1168693	Identifier	node		1168565	0					
ANR	1168694	ExpressionStatement	r += ( SIZE_OP_PUSH + SIZE_OP_JUMP ) * ( n - 1 )	1514:6:36775:36819	1168565	3	True				
ANR	1168695	AssignmentExpression	r += ( SIZE_OP_PUSH + SIZE_OP_JUMP ) * ( n - 1 )		1168565	0		+=			
ANR	1168696	Identifier	r		1168565	0					
ANR	1168697	MultiplicativeExpression	( SIZE_OP_PUSH + SIZE_OP_JUMP ) * ( n - 1 )		1168565	1		*			
ANR	1168698	AdditiveExpression	SIZE_OP_PUSH + SIZE_OP_JUMP		1168565	0		+			
ANR	1168699	Identifier	SIZE_OP_PUSH		1168565	0					
ANR	1168700	Identifier	SIZE_OP_JUMP		1168565	1					
ANR	1168701	AdditiveExpression	n - 1		1168565	1		-			
ANR	1168702	Identifier	n		1168565	0					
ANR	1168703	PrimaryExpression	1		1168565	1					
ANR	1168704	BreakStatement	break ;	1516:4:36831:36836	1168565	7	True				
ANR	1168705	Label	case NT_STR :	1518:2:36841:36852	1168565	8	True				
ANR	1168706	Identifier	NT_STR		1168565	0					
ANR	1168707	IfStatement	if ( NSTRING_IS_RAW ( node ) )		1168565	9					
ANR	1168708	Condition	NSTRING_IS_RAW ( node )	1519:8:36862:36881	1168565	0	True				
ANR	1168709	CallExpression	NSTRING_IS_RAW ( node )		1168565	0					
ANR	1168710	Callee	NSTRING_IS_RAW		1168565	0					
ANR	1168711	Identifier	NSTRING_IS_RAW		1168565	0					
ANR	1168712	ArgumentList	node		1168565	1					
ANR	1168713	Argument	node		1168565	0					
ANR	1168714	Identifier	node		1168565	0					
ANR	1168715	ExpressionStatement	"r = compile_length_string_raw_node ( NSTR ( node ) , reg )"	1520:6:36890:36941	1168565	1	True				
ANR	1168716	AssignmentExpression	"r = compile_length_string_raw_node ( NSTR ( node ) , reg )"		1168565	0		=			
ANR	1168717	Identifier	r		1168565	0					
ANR	1168718	CallExpression	"compile_length_string_raw_node ( NSTR ( node ) , reg )"		1168565	1					
ANR	1168719	Callee	compile_length_string_raw_node		1168565	0					
ANR	1168720	Identifier	compile_length_string_raw_node		1168565	0					
ANR	1168721	ArgumentList	NSTR ( node )		1168565	1					
ANR	1168722	Argument	NSTR ( node )		1168565	0					
ANR	1168723	CallExpression	NSTR ( node )		1168565	0					
ANR	1168724	Callee	NSTR		1168565	0					
ANR	1168725	Identifier	NSTR		1168565	0					
ANR	1168726	ArgumentList	node		1168565	1					
ANR	1168727	Argument	node		1168565	0					
ANR	1168728	Identifier	node		1168565	0					
ANR	1168729	Argument	reg		1168565	1					
ANR	1168730	Identifier	reg		1168565	0					
ANR	1168731	ElseStatement	else		1168565	0					
ANR	1168732	ExpressionStatement	"r = compile_length_string_node ( node , reg )"	1522:6:36958:36999	1168565	0	True				
ANR	1168733	AssignmentExpression	"r = compile_length_string_node ( node , reg )"		1168565	0		=			
ANR	1168734	Identifier	r		1168565	0					
ANR	1168735	CallExpression	"compile_length_string_node ( node , reg )"		1168565	1					
ANR	1168736	Callee	compile_length_string_node		1168565	0					
ANR	1168737	Identifier	compile_length_string_node		1168565	0					
ANR	1168738	ArgumentList	node		1168565	1					
ANR	1168739	Argument	node		1168565	0					
ANR	1168740	Identifier	node		1168565	0					
ANR	1168741	Argument	reg		1168565	1					
ANR	1168742	Identifier	reg		1168565	0					
ANR	1168743	BreakStatement	break ;	1523:4:37005:37010	1168565	10	True				
ANR	1168744	Label	case NT_CCLASS :	1525:2:37015:37029	1168565	11	True				
ANR	1168745	Identifier	NT_CCLASS		1168565	0					
ANR	1168746	ExpressionStatement	"r = compile_length_cclass_node ( NCCLASS ( node ) , reg )"	1526:4:37035:37085	1168565	12	True				
ANR	1168747	AssignmentExpression	"r = compile_length_cclass_node ( NCCLASS ( node ) , reg )"		1168565	0		=			
ANR	1168748	Identifier	r		1168565	0					
ANR	1168749	CallExpression	"compile_length_cclass_node ( NCCLASS ( node ) , reg )"		1168565	1					
ANR	1168750	Callee	compile_length_cclass_node		1168565	0					
ANR	1168751	Identifier	compile_length_cclass_node		1168565	0					
ANR	1168752	ArgumentList	NCCLASS ( node )		1168565	1					
ANR	1168753	Argument	NCCLASS ( node )		1168565	0					
ANR	1168754	CallExpression	NCCLASS ( node )		1168565	0					
ANR	1168755	Callee	NCCLASS		1168565	0					
ANR	1168756	Identifier	NCCLASS		1168565	0					
ANR	1168757	ArgumentList	node		1168565	1					
ANR	1168758	Argument	node		1168565	0					
ANR	1168759	Identifier	node		1168565	0					
ANR	1168760	Argument	reg		1168565	1					
ANR	1168761	Identifier	reg		1168565	0					
ANR	1168762	BreakStatement	break ;	1527:4:37091:37096	1168565	13	True				
ANR	1168763	Label	case NT_CTYPE :	1529:2:37101:37114	1168565	14	True				
ANR	1168764	Identifier	NT_CTYPE		1168565	0					
ANR	1168765	Label	case NT_CANY :	1530:2:37118:37130	1168565	15	True				
ANR	1168766	Identifier	NT_CANY		1168565	0					
ANR	1168767	ExpressionStatement	r = SIZE_OPCODE	1531:4:37136:37151	1168565	16	True				
ANR	1168768	AssignmentExpression	r = SIZE_OPCODE		1168565	0		=			
ANR	1168769	Identifier	r		1168565	0					
ANR	1168770	Identifier	SIZE_OPCODE		1168565	1					
ANR	1168771	BreakStatement	break ;	1532:4:37157:37162	1168565	17	True				
ANR	1168772	Label	case NT_BREF :	1534:2:37167:37179	1168565	18	True				
ANR	1168773	Identifier	NT_BREF		1168565	0					
ANR	1168774	CompoundStatement		47:6:847:873	1168565	19					
ANR	1168775	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	1536:6:37193:37219	1168565	0	True				
ANR	1168776	IdentifierDecl	* br = NBREF ( node )		1168565	0					
ANR	1168777	IdentifierDeclType	BRefNode *		1168565	0					
ANR	1168778	Identifier	br		1168565	1					
ANR	1168779	AssignmentExpression	* br = NBREF ( node )		1168565	2		=			
ANR	1168780	Identifier	br		1168565	0					
ANR	1168781	CallExpression	NBREF ( node )		1168565	1					
ANR	1168782	Callee	NBREF		1168565	0					
ANR	1168783	Identifier	NBREF		1168565	0					
ANR	1168784	ArgumentList	node		1168565	1					
ANR	1168785	Argument	node		1168565	0					
ANR	1168786	Identifier	node		1168565	0					
ANR	1168787	IfStatement	if ( IS_BACKREF_NEST_LEVEL ( br ) )		1168565	1					
ANR	1168788	Condition	IS_BACKREF_NEST_LEVEL ( br )	1539:10:37262:37286	1168565	0	True				
ANR	1168789	CallExpression	IS_BACKREF_NEST_LEVEL ( br )		1168565	0					
ANR	1168790	Callee	IS_BACKREF_NEST_LEVEL		1168565	0					
ANR	1168791	Identifier	IS_BACKREF_NEST_LEVEL		1168565	0					
ANR	1168792	ArgumentList	br		1168565	1					
ANR	1168793	Argument	br		1168565	0					
ANR	1168794	Identifier	br		1168565	0					
ANR	1168795	CompoundStatement		50:37:943:943	1168565	1					
ANR	1168796	ExpressionStatement	r = SIZE_OPCODE + SIZE_OPTION + SIZE_LENGTH + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )	1540:8:37299:37399	1168565	0	True				
ANR	1168797	AssignmentExpression	r = SIZE_OPCODE + SIZE_OPTION + SIZE_LENGTH + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		1168565	0		=			
ANR	1168798	Identifier	r		1168565	0					
ANR	1168799	AdditiveExpression	SIZE_OPCODE + SIZE_OPTION + SIZE_LENGTH + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		1168565	1		+			
ANR	1168800	Identifier	SIZE_OPCODE		1168565	0					
ANR	1168801	AdditiveExpression	SIZE_OPTION + SIZE_LENGTH + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		1168565	1		+			
ANR	1168802	Identifier	SIZE_OPTION		1168565	0					
ANR	1168803	AdditiveExpression	SIZE_LENGTH + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		1168565	1		+			
ANR	1168804	Identifier	SIZE_LENGTH		1168565	0					
ANR	1168805	AdditiveExpression	SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		1168565	1		+			
ANR	1168806	Identifier	SIZE_LENGTH		1168565	0					
ANR	1168807	MultiplicativeExpression	SIZE_MEMNUM * br -> back_num		1168565	1		*			
ANR	1168808	Identifier	SIZE_MEMNUM		1168565	0					
ANR	1168809	PtrMemberAccess	br -> back_num		1168565	1					
ANR	1168810	Identifier	br		1168565	0					
ANR	1168811	Identifier	back_num		1168565	1					
ANR	1168812	ElseStatement	else		1168565	0					
ANR	1168813	IfStatement	if ( br -> back_num == 1 )		1168565	0					
ANR	1168814	Condition	br -> back_num == 1	1545:10:37437:37453	1168565	0	True				
ANR	1168815	EqualityExpression	br -> back_num == 1		1168565	0		==			
ANR	1168816	PtrMemberAccess	br -> back_num		1168565	0					
ANR	1168817	Identifier	br		1168565	0					
ANR	1168818	Identifier	back_num		1168565	1					
ANR	1168819	PrimaryExpression	1		1168565	1					
ANR	1168820	CompoundStatement		56:29:1110:1110	1168565	1					
ANR	1168821	ExpressionStatement	r = ( ( ! IS_IGNORECASE ( reg -> options ) && br -> back_static [ 0 ] <= 2 ) ? SIZE_OPCODE : ( SIZE_OPCODE + SIZE_MEMNUM ) )	1546:1:37459:37572	1168565	0	True				
ANR	1168822	AssignmentExpression	r = ( ( ! IS_IGNORECASE ( reg -> options ) && br -> back_static [ 0 ] <= 2 ) ? SIZE_OPCODE : ( SIZE_OPCODE + SIZE_MEMNUM ) )		1168565	0		=			
ANR	1168823	Identifier	r		1168565	0					
ANR	1168824	ConditionalExpression	( ! IS_IGNORECASE ( reg -> options ) && br -> back_static [ 0 ] <= 2 ) ? SIZE_OPCODE : ( SIZE_OPCODE + SIZE_MEMNUM )		1168565	1					
ANR	1168825	Condition	! IS_IGNORECASE ( reg -> options ) && br -> back_static [ 0 ] <= 2		1168565	0					
ANR	1168826	AndExpression	! IS_IGNORECASE ( reg -> options ) && br -> back_static [ 0 ] <= 2		1168565	0		&&			
ANR	1168827	UnaryOperationExpression	! IS_IGNORECASE ( reg -> options )		1168565	0					
ANR	1168828	UnaryOperator	!		1168565	0					
ANR	1168829	CallExpression	IS_IGNORECASE ( reg -> options )		1168565	1					
ANR	1168830	Callee	IS_IGNORECASE		1168565	0					
ANR	1168831	Identifier	IS_IGNORECASE		1168565	0					
ANR	1168832	ArgumentList	reg -> options		1168565	1					
ANR	1168833	Argument	reg -> options		1168565	0					
ANR	1168834	PtrMemberAccess	reg -> options		1168565	0					
ANR	1168835	Identifier	reg		1168565	0					
ANR	1168836	Identifier	options		1168565	1					
ANR	1168837	RelationalExpression	br -> back_static [ 0 ] <= 2		1168565	1		<=			
ANR	1168838	ArrayIndexing	br -> back_static [ 0 ]		1168565	0					
ANR	1168839	PtrMemberAccess	br -> back_static		1168565	0					
ANR	1168840	Identifier	br		1168565	0					
ANR	1168841	Identifier	back_static		1168565	1					
ANR	1168842	PrimaryExpression	0		1168565	1					
ANR	1168843	PrimaryExpression	2		1168565	1					
ANR	1168844	Identifier	SIZE_OPCODE		1168565	1					
ANR	1168845	AdditiveExpression	SIZE_OPCODE + SIZE_MEMNUM		1168565	2		+			
ANR	1168846	Identifier	SIZE_OPCODE		1168565	0					
ANR	1168847	Identifier	SIZE_MEMNUM		1168565	1					
ANR	1168848	ElseStatement	else		1168565	0					
ANR	1168849	CompoundStatement		60:11:1247:1247	1168565	0					
ANR	1168850	ExpressionStatement	r = SIZE_OPCODE + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )	1550:1:37596:37656	1168565	0	True				
ANR	1168851	AssignmentExpression	r = SIZE_OPCODE + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		1168565	0		=			
ANR	1168852	Identifier	r		1168565	0					
ANR	1168853	AdditiveExpression	SIZE_OPCODE + SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		1168565	1		+			
ANR	1168854	Identifier	SIZE_OPCODE		1168565	0					
ANR	1168855	AdditiveExpression	SIZE_LENGTH + ( SIZE_MEMNUM * br -> back_num )		1168565	1		+			
ANR	1168856	Identifier	SIZE_LENGTH		1168565	0					
ANR	1168857	MultiplicativeExpression	SIZE_MEMNUM * br -> back_num		1168565	1		*			
ANR	1168858	Identifier	SIZE_MEMNUM		1168565	0					
ANR	1168859	PtrMemberAccess	br -> back_num		1168565	1					
ANR	1168860	Identifier	br		1168565	0					
ANR	1168861	Identifier	back_num		1168565	1					
ANR	1168862	BreakStatement	break ;	1553:4:37676:37681	1168565	20	True				
ANR	1168863	Label	case NT_CALL :	1556:2:37709:37721	1168565	21	True				
ANR	1168864	Identifier	NT_CALL		1168565	0					
ANR	1168865	ExpressionStatement	r = SIZE_OP_CALL	1557:4:37727:37743	1168565	22	True				
ANR	1168866	AssignmentExpression	r = SIZE_OP_CALL		1168565	0		=			
ANR	1168867	Identifier	r		1168565	0					
ANR	1168868	Identifier	SIZE_OP_CALL		1168565	1					
ANR	1168869	BreakStatement	break ;	1558:4:37749:37754	1168565	23	True				
ANR	1168870	Label	case NT_QTFR :	1561:2:37766:37778	1168565	24	True				
ANR	1168871	Identifier	NT_QTFR		1168565	0					
ANR	1168872	ExpressionStatement	"r = compile_length_quantifier_node ( NQTFR ( node ) , reg )"	1562:4:37784:37836	1168565	25	True				
ANR	1168873	AssignmentExpression	"r = compile_length_quantifier_node ( NQTFR ( node ) , reg )"		1168565	0		=			
ANR	1168874	Identifier	r		1168565	0					
ANR	1168875	CallExpression	"compile_length_quantifier_node ( NQTFR ( node ) , reg )"		1168565	1					
ANR	1168876	Callee	compile_length_quantifier_node		1168565	0					
ANR	1168877	Identifier	compile_length_quantifier_node		1168565	0					
ANR	1168878	ArgumentList	NQTFR ( node )		1168565	1					
ANR	1168879	Argument	NQTFR ( node )		1168565	0					
ANR	1168880	CallExpression	NQTFR ( node )		1168565	0					
ANR	1168881	Callee	NQTFR		1168565	0					
ANR	1168882	Identifier	NQTFR		1168565	0					
ANR	1168883	ArgumentList	node		1168565	1					
ANR	1168884	Argument	node		1168565	0					
ANR	1168885	Identifier	node		1168565	0					
ANR	1168886	Argument	reg		1168565	1					
ANR	1168887	Identifier	reg		1168565	0					
ANR	1168888	BreakStatement	break ;	1563:4:37842:37847	1168565	26	True				
ANR	1168889	Label	case NT_ENCLOSE :	1565:2:37852:37867	1168565	27	True				
ANR	1168890	Identifier	NT_ENCLOSE		1168565	0					
ANR	1168891	ExpressionStatement	"r = compile_length_enclose_node ( NENCLOSE ( node ) , reg )"	1566:4:37873:37925	1168565	28	True				
ANR	1168892	AssignmentExpression	"r = compile_length_enclose_node ( NENCLOSE ( node ) , reg )"		1168565	0		=			
ANR	1168893	Identifier	r		1168565	0					
ANR	1168894	CallExpression	"compile_length_enclose_node ( NENCLOSE ( node ) , reg )"		1168565	1					
ANR	1168895	Callee	compile_length_enclose_node		1168565	0					
ANR	1168896	Identifier	compile_length_enclose_node		1168565	0					
ANR	1168897	ArgumentList	NENCLOSE ( node )		1168565	1					
ANR	1168898	Argument	NENCLOSE ( node )		1168565	0					
ANR	1168899	CallExpression	NENCLOSE ( node )		1168565	0					
ANR	1168900	Callee	NENCLOSE		1168565	0					
ANR	1168901	Identifier	NENCLOSE		1168565	0					
ANR	1168902	ArgumentList	node		1168565	1					
ANR	1168903	Argument	node		1168565	0					
ANR	1168904	Identifier	node		1168565	0					
ANR	1168905	Argument	reg		1168565	1					
ANR	1168906	Identifier	reg		1168565	0					
ANR	1168907	BreakStatement	break ;	1567:4:37931:37936	1168565	29	True				
ANR	1168908	Label	case NT_ANCHOR :	1569:2:37941:37955	1168565	30	True				
ANR	1168909	Identifier	NT_ANCHOR		1168565	0					
ANR	1168910	ExpressionStatement	"r = compile_length_anchor_node ( NANCHOR ( node ) , reg )"	1570:4:37961:38011	1168565	31	True				
ANR	1168911	AssignmentExpression	"r = compile_length_anchor_node ( NANCHOR ( node ) , reg )"		1168565	0		=			
ANR	1168912	Identifier	r		1168565	0					
ANR	1168913	CallExpression	"compile_length_anchor_node ( NANCHOR ( node ) , reg )"		1168565	1					
ANR	1168914	Callee	compile_length_anchor_node		1168565	0					
ANR	1168915	Identifier	compile_length_anchor_node		1168565	0					
ANR	1168916	ArgumentList	NANCHOR ( node )		1168565	1					
ANR	1168917	Argument	NANCHOR ( node )		1168565	0					
ANR	1168918	CallExpression	NANCHOR ( node )		1168565	0					
ANR	1168919	Callee	NANCHOR		1168565	0					
ANR	1168920	Identifier	NANCHOR		1168565	0					
ANR	1168921	ArgumentList	node		1168565	1					
ANR	1168922	Argument	node		1168565	0					
ANR	1168923	Identifier	node		1168565	0					
ANR	1168924	Argument	reg		1168565	1					
ANR	1168925	Identifier	reg		1168565	0					
ANR	1168926	BreakStatement	break ;	1571:4:38017:38022	1168565	32	True				
ANR	1168927	Label	default :	1573:2:38027:38034	1168565	33	True				
ANR	1168928	Identifier	default		1168565	0					
ANR	1168929	ReturnStatement	return ONIGERR_TYPE_BUG ;	1574:4:38040:38063	1168565	34	True				
ANR	1168930	Identifier	ONIGERR_TYPE_BUG		1168565	0					
ANR	1168931	BreakStatement	break ;	1575:4:38069:38074	1168565	35	True				
ANR	1168932	ReturnStatement	return r ;	1578:2:38083:38091	1168565	3	True				
ANR	1168933	Identifier	r		1168565	0					
ANR	1168934	ReturnType	static int		1168565	1					
ANR	1168935	Identifier	compile_length_tree		1168565	2					
ANR	1168936	ParameterList	"Node * node , regex_t * reg"		1168565	3					
ANR	1168937	Parameter	Node * node	1489:20:36319:36328	1168565	0	True				
ANR	1168938	ParameterType	Node *		1168565	0					
ANR	1168939	Identifier	node		1168565	1					
ANR	1168940	Parameter	regex_t * reg	1489:32:36331:36342	1168565	1	True				
ANR	1168941	ParameterType	regex_t *		1168565	0					
ANR	1168942	Identifier	reg		1168565	1					
ANR	1168943	CFGEntryNode	ENTRY		1168565		True				
ANR	1168944	CFGExitNode	EXIT		1168565		True				
ANR	1168945	Symbol	IS_NOT_NULL		1168565						
ANR	1168946	Symbol	NCAR		1168565						
ANR	1168947	Symbol	br -> back_num		1168565						
ANR	1168948	Symbol	compile_length_enclose_node		1168565						
ANR	1168949	Symbol	* br -> back_static		1168565						
ANR	1168950	Symbol	NSTRING_IS_RAW		1168565						
ANR	1168951	Symbol	type		1168565						
ANR	1168952	Symbol	SIZE_LENGTH		1168565						
ANR	1168953	Symbol	NQTFR		1168565						
ANR	1168954	Symbol	NCCLASS		1168565						
ANR	1168955	Symbol	br		1168565						
ANR	1168956	Symbol	SIZE_OPCODE		1168565						
ANR	1168957	Symbol	compile_length_string_node		1168565						
ANR	1168958	Symbol	SIZE_MEMNUM		1168565						
ANR	1168959	Symbol	len		1168565						
ANR	1168960	Symbol	compile_length_anchor_node		1168565						
ANR	1168961	Symbol	reg		1168565						
ANR	1168962	Symbol	NBREF		1168565						
ANR	1168963	Symbol	* br		1168565						
ANR	1168964	Symbol	reg -> options		1168565						
ANR	1168965	Symbol	NENCLOSE		1168565						
ANR	1168966	Symbol	SIZE_OPTION		1168565						
ANR	1168967	Symbol	compile_length_string_raw_node		1168565						
ANR	1168968	Symbol	SIZE_OP_JUMP		1168565						
ANR	1168969	Symbol	compile_length_tree		1168565						
ANR	1168970	Symbol	compile_length_cclass_node		1168565						
ANR	1168971	Symbol	NCDR		1168565						
ANR	1168972	Symbol	NSTR		1168565						
ANR	1168973	Symbol	SIZE_OP_PUSH		1168565						
ANR	1168974	Symbol	ONIGERR_TYPE_BUG		1168565						
ANR	1168975	Symbol	n		1168565						
ANR	1168976	Symbol	br -> back_static		1168565						
ANR	1168977	Symbol	node		1168565						
ANR	1168978	Symbol	r		1168565						
ANR	1168979	Symbol	SIZE_OP_CALL		1168565						
ANR	1168980	Symbol	IS_IGNORECASE		1168565						
ANR	1168981	Symbol	NANCHOR		1168565						
ANR	1168982	Symbol	NTYPE		1168565						
ANR	1168983	Symbol	IS_BACKREF_NEST_LEVEL		1168565						
ANR	1168984	Symbol	* reg		1168565						
ANR	1168985	Symbol	* * br		1168565						
ANR	1168986	Symbol	compile_length_quantifier_node		1168565						
ANR	1168987	Function	compile_tree	1581:0:38096:41545							
ANR	1168988	FunctionDef	"compile_tree (Node * node , regex_t * reg)"		1168987	0					
ANR	1168989	CompoundStatement		1583:0:38146:41545	1168987	0					
ANR	1168990	IdentifierDeclStatement	"int n , type , len , pos , r = 0 ;"	1584:2:38150:38178	1168987	0	True				
ANR	1168991	IdentifierDecl	n		1168987	0					
ANR	1168992	IdentifierDeclType	int		1168987	0					
ANR	1168993	Identifier	n		1168987	1					
ANR	1168994	IdentifierDecl	type		1168987	1					
ANR	1168995	IdentifierDeclType	int		1168987	0					
ANR	1168996	Identifier	type		1168987	1					
ANR	1168997	IdentifierDecl	len		1168987	2					
ANR	1168998	IdentifierDeclType	int		1168987	0					
ANR	1168999	Identifier	len		1168987	1					
ANR	1169000	IdentifierDecl	pos		1168987	3					
ANR	1169001	IdentifierDeclType	int		1168987	0					
ANR	1169002	Identifier	pos		1168987	1					
ANR	1169003	IdentifierDecl	r = 0		1168987	4					
ANR	1169004	IdentifierDeclType	int		1168987	0					
ANR	1169005	Identifier	r		1168987	1					
ANR	1169006	AssignmentExpression	r = 0		1168987	2		=			
ANR	1169007	Identifier	r		1168987	0					
ANR	1169008	PrimaryExpression	0		1168987	1					
ANR	1169009	ExpressionStatement	type = NTYPE ( node )	1586:2:38183:38201	1168987	1	True				
ANR	1169010	AssignmentExpression	type = NTYPE ( node )		1168987	0		=			
ANR	1169011	Identifier	type		1168987	0					
ANR	1169012	CallExpression	NTYPE ( node )		1168987	1					
ANR	1169013	Callee	NTYPE		1168987	0					
ANR	1169014	Identifier	NTYPE		1168987	0					
ANR	1169015	ArgumentList	node		1168987	1					
ANR	1169016	Argument	node		1168987	0					
ANR	1169017	Identifier	node		1168987	0					
ANR	1169018	SwitchStatement	switch ( type )		1168987	2					
ANR	1169019	Condition	type	1587:10:38213:38216	1168987	0	True				
ANR	1169020	Identifier	type		1168987	0					
ANR	1169021	CompoundStatement		5:16:72:72	1168987	1					
ANR	1169022	Label	case NT_LIST :	1588:2:38223:38235	1168987	0	True				
ANR	1169023	Identifier	NT_LIST		1168987	0					
ANR	1169024	DoStatement	do		1168987	1					
ANR	1169025	CompoundStatement		7:7:97:97	1168987	0					
ANR	1169026	ExpressionStatement	"r = compile_tree ( NCAR ( node ) , reg )"	1590:6:38252:38285	1168987	0	True				
ANR	1169027	AssignmentExpression	"r = compile_tree ( NCAR ( node ) , reg )"		1168987	0		=			
ANR	1169028	Identifier	r		1168987	0					
ANR	1169029	CallExpression	"compile_tree ( NCAR ( node ) , reg )"		1168987	1					
ANR	1169030	Callee	compile_tree		1168987	0					
ANR	1169031	Identifier	compile_tree		1168987	0					
ANR	1169032	ArgumentList	NCAR ( node )		1168987	1					
ANR	1169033	Argument	NCAR ( node )		1168987	0					
ANR	1169034	CallExpression	NCAR ( node )		1168987	0					
ANR	1169035	Callee	NCAR		1168987	0					
ANR	1169036	Identifier	NCAR		1168987	0					
ANR	1169037	ArgumentList	node		1168987	1					
ANR	1169038	Argument	node		1168987	0					
ANR	1169039	Identifier	node		1168987	0					
ANR	1169040	Argument	reg		1168987	1					
ANR	1169041	Identifier	reg		1168987	0					
ANR	1169042	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	1591:13:38300:38339	1168987	1	True				
ANR	1169043	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1168987	0		&&			
ANR	1169044	EqualityExpression	r == 0		1168987	0		==			
ANR	1169045	Identifier	r		1168987	0					
ANR	1169046	PrimaryExpression	0		1168987	1					
ANR	1169047	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1168987	1					
ANR	1169048	Callee	IS_NOT_NULL		1168987	0					
ANR	1169049	Identifier	IS_NOT_NULL		1168987	0					
ANR	1169050	ArgumentList	node = NCDR ( node )		1168987	1					
ANR	1169051	Argument	node = NCDR ( node )		1168987	0					
ANR	1169052	AssignmentExpression	node = NCDR ( node )		1168987	0		=			
ANR	1169053	Identifier	node		1168987	0					
ANR	1169054	CallExpression	NCDR ( node )		1168987	1					
ANR	1169055	Callee	NCDR		1168987	0					
ANR	1169056	Identifier	NCDR		1168987	0					
ANR	1169057	ArgumentList	node		1168987	1					
ANR	1169058	Argument	node		1168987	0					
ANR	1169059	Identifier	node		1168987	0					
ANR	1169060	BreakStatement	break ;	1592:4:38347:38352	1168987	2	True				
ANR	1169061	Label	case NT_ALT :	1594:2:38357:38368	1168987	3	True				
ANR	1169062	Identifier	NT_ALT		1168987	0					
ANR	1169063	CompoundStatement		14:6:235:249	1168987	4					
ANR	1169064	IdentifierDeclStatement	Node * x = node ;	1596:6:38382:38396	1168987	0	True				
ANR	1169065	IdentifierDecl	* x = node		1168987	0					
ANR	1169066	IdentifierDeclType	Node *		1168987	0					
ANR	1169067	Identifier	x		1168987	1					
ANR	1169068	AssignmentExpression	* x = node		1168987	2		=			
ANR	1169069	Identifier	node		1168987	0					
ANR	1169070	Identifier	node		1168987	1					
ANR	1169071	ExpressionStatement	len = 0	1597:6:38404:38411	1168987	1	True				
ANR	1169072	AssignmentExpression	len = 0		1168987	0		=			
ANR	1169073	Identifier	len		1168987	0					
ANR	1169074	PrimaryExpression	0		1168987	1					
ANR	1169075	DoStatement	do		1168987	2					
ANR	1169076	CompoundStatement		16:9:275:275	1168987	0					
ANR	1169077	ExpressionStatement	"len += compile_length_tree ( NCAR ( x ) , reg )"	1599:1:38425:38465	1168987	0	True				
ANR	1169078	AssignmentExpression	"len += compile_length_tree ( NCAR ( x ) , reg )"		1168987	0		+=			
ANR	1169079	Identifier	len		1168987	0					
ANR	1169080	CallExpression	"compile_length_tree ( NCAR ( x ) , reg )"		1168987	1					
ANR	1169081	Callee	compile_length_tree		1168987	0					
ANR	1169082	Identifier	compile_length_tree		1168987	0					
ANR	1169083	ArgumentList	NCAR ( x )		1168987	1					
ANR	1169084	Argument	NCAR ( x )		1168987	0					
ANR	1169085	CallExpression	NCAR ( x )		1168987	0					
ANR	1169086	Callee	NCAR		1168987	0					
ANR	1169087	Identifier	NCAR		1168987	0					
ANR	1169088	ArgumentList	x		1168987	1					
ANR	1169089	Argument	x		1168987	0					
ANR	1169090	Identifier	x		1168987	0					
ANR	1169091	Argument	reg		1168987	1					
ANR	1169092	Identifier	reg		1168987	0					
ANR	1169093	IfStatement	if ( NCDR ( x ) != NULL )		1168987	1					
ANR	1169094	Condition	NCDR ( x ) != NULL	1600:5:38472:38486	1168987	0	True				
ANR	1169095	EqualityExpression	NCDR ( x ) != NULL		1168987	0		!=			
ANR	1169096	CallExpression	NCDR ( x )		1168987	0					
ANR	1169097	Callee	NCDR		1168987	0					
ANR	1169098	Identifier	NCDR		1168987	0					
ANR	1169099	ArgumentList	x		1168987	1					
ANR	1169100	Argument	x		1168987	0					
ANR	1169101	Identifier	x		1168987	0					
ANR	1169102	Identifier	NULL		1168987	1					
ANR	1169103	CompoundStatement		18:22:342:342	1168987	1					
ANR	1169104	ExpressionStatement	len += SIZE_OP_PUSH + SIZE_OP_JUMP	1601:3:38494:38528	1168987	0	True				
ANR	1169105	AssignmentExpression	len += SIZE_OP_PUSH + SIZE_OP_JUMP		1168987	0		+=			
ANR	1169106	Identifier	len		1168987	0					
ANR	1169107	AdditiveExpression	SIZE_OP_PUSH + SIZE_OP_JUMP		1168987	1		+			
ANR	1169108	Identifier	SIZE_OP_PUSH		1168987	0					
ANR	1169109	Identifier	SIZE_OP_JUMP		1168987	1					
ANR	1169110	Condition	IS_NOT_NULL ( x = NCDR ( x ) )	1603:15:38548:38571	1168987	1	True				
ANR	1169111	CallExpression	IS_NOT_NULL ( x = NCDR ( x ) )		1168987	0					
ANR	1169112	Callee	IS_NOT_NULL		1168987	0					
ANR	1169113	Identifier	IS_NOT_NULL		1168987	0					
ANR	1169114	ArgumentList	x = NCDR ( x )		1168987	1					
ANR	1169115	Argument	x = NCDR ( x )		1168987	0					
ANR	1169116	AssignmentExpression	x = NCDR ( x )		1168987	0		=			
ANR	1169117	Identifier	x		1168987	0					
ANR	1169118	CallExpression	NCDR ( x )		1168987	1					
ANR	1169119	Callee	NCDR		1168987	0					
ANR	1169120	Identifier	NCDR		1168987	0					
ANR	1169121	ArgumentList	x		1168987	1					
ANR	1169122	Argument	x		1168987	0					
ANR	1169123	Identifier	x		1168987	0					
ANR	1169124	ExpressionStatement	pos = reg -> used + len	1604:6:38581:38602	1168987	3	True				
ANR	1169125	AssignmentExpression	pos = reg -> used + len		1168987	0		=			
ANR	1169126	Identifier	pos		1168987	0					
ANR	1169127	AdditiveExpression	reg -> used + len		1168987	1		+			
ANR	1169128	PtrMemberAccess	reg -> used		1168987	0					
ANR	1169129	Identifier	reg		1168987	0					
ANR	1169130	Identifier	used		1168987	1					
ANR	1169131	Identifier	len		1168987	1					
ANR	1169132	DoStatement	do		1168987	4					
ANR	1169133	CompoundStatement		24:9:488:488	1168987	0					
ANR	1169134	ExpressionStatement	"len = compile_length_tree ( NCAR ( node ) , reg )"	1607:1:38638:38680	1168987	0	True				
ANR	1169135	AssignmentExpression	"len = compile_length_tree ( NCAR ( node ) , reg )"		1168987	0		=			
ANR	1169136	Identifier	len		1168987	0					
ANR	1169137	CallExpression	"compile_length_tree ( NCAR ( node ) , reg )"		1168987	1					
ANR	1169138	Callee	compile_length_tree		1168987	0					
ANR	1169139	Identifier	compile_length_tree		1168987	0					
ANR	1169140	ArgumentList	NCAR ( node )		1168987	1					
ANR	1169141	Argument	NCAR ( node )		1168987	0					
ANR	1169142	CallExpression	NCAR ( node )		1168987	0					
ANR	1169143	Callee	NCAR		1168987	0					
ANR	1169144	Identifier	NCAR		1168987	0					
ANR	1169145	ArgumentList	node		1168987	1					
ANR	1169146	Argument	node		1168987	0					
ANR	1169147	Identifier	node		1168987	0					
ANR	1169148	Argument	reg		1168987	1					
ANR	1169149	Identifier	reg		1168987	0					
ANR	1169150	IfStatement	if ( IS_NOT_NULL ( NCDR ( node ) ) )		1168987	1					
ANR	1169151	Condition	IS_NOT_NULL ( NCDR ( node ) )	1608:5:38687:38709	1168987	0	True				
ANR	1169152	CallExpression	IS_NOT_NULL ( NCDR ( node ) )		1168987	0					
ANR	1169153	Callee	IS_NOT_NULL		1168987	0					
ANR	1169154	Identifier	IS_NOT_NULL		1168987	0					
ANR	1169155	ArgumentList	NCDR ( node )		1168987	1					
ANR	1169156	Argument	NCDR ( node )		1168987	0					
ANR	1169157	CallExpression	NCDR ( node )		1168987	0					
ANR	1169158	Callee	NCDR		1168987	0					
ANR	1169159	Identifier	NCDR		1168987	0					
ANR	1169160	ArgumentList	node		1168987	1					
ANR	1169161	Argument	node		1168987	0					
ANR	1169162	Identifier	node		1168987	0					
ANR	1169163	CompoundStatement		26:30:565:565	1168987	1					
ANR	1169164	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_PUSH , len + SIZE_OP_JUMP )"	1609:3:38717:38774	1168987	0	True				
ANR	1169165	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_PUSH , len + SIZE_OP_JUMP )"		1168987	0		=			
ANR	1169166	Identifier	r		1168987	0					
ANR	1169167	CallExpression	"add_opcode_rel_addr ( reg , OP_PUSH , len + SIZE_OP_JUMP )"		1168987	1					
ANR	1169168	Callee	add_opcode_rel_addr		1168987	0					
ANR	1169169	Identifier	add_opcode_rel_addr		1168987	0					
ANR	1169170	ArgumentList	reg		1168987	1					
ANR	1169171	Argument	reg		1168987	0					
ANR	1169172	Identifier	reg		1168987	0					
ANR	1169173	Argument	OP_PUSH		1168987	1					
ANR	1169174	Identifier	OP_PUSH		1168987	0					
ANR	1169175	Argument	len + SIZE_OP_JUMP		1168987	2					
ANR	1169176	AdditiveExpression	len + SIZE_OP_JUMP		1168987	0		+			
ANR	1169177	Identifier	len		1168987	0					
ANR	1169178	Identifier	SIZE_OP_JUMP		1168987	1					
ANR	1169179	IfStatement	if ( r )		1168987	1					
ANR	1169180	Condition	r	1610:7:38783:38783	1168987	0	True				
ANR	1169181	Identifier	r		1168987	0					
ANR	1169182	BreakStatement	break ;	1610:10:38786:38791	1168987	1	True				
ANR	1169183	ExpressionStatement	"r = compile_tree ( NCAR ( node ) , reg )"	1612:1:38797:38830	1168987	2	True				
ANR	1169184	AssignmentExpression	"r = compile_tree ( NCAR ( node ) , reg )"		1168987	0		=			
ANR	1169185	Identifier	r		1168987	0					
ANR	1169186	CallExpression	"compile_tree ( NCAR ( node ) , reg )"		1168987	1					
ANR	1169187	Callee	compile_tree		1168987	0					
ANR	1169188	Identifier	compile_tree		1168987	0					
ANR	1169189	ArgumentList	NCAR ( node )		1168987	1					
ANR	1169190	Argument	NCAR ( node )		1168987	0					
ANR	1169191	CallExpression	NCAR ( node )		1168987	0					
ANR	1169192	Callee	NCAR		1168987	0					
ANR	1169193	Identifier	NCAR		1168987	0					
ANR	1169194	ArgumentList	node		1168987	1					
ANR	1169195	Argument	node		1168987	0					
ANR	1169196	Identifier	node		1168987	0					
ANR	1169197	Argument	reg		1168987	1					
ANR	1169198	Identifier	reg		1168987	0					
ANR	1169199	IfStatement	if ( r )		1168987	3					
ANR	1169200	Condition	r	1613:5:38837:38837	1168987	0	True				
ANR	1169201	Identifier	r		1168987	0					
ANR	1169202	BreakStatement	break ;	1613:8:38840:38845	1168987	1	True				
ANR	1169203	IfStatement	if ( IS_NOT_NULL ( NCDR ( node ) ) )		1168987	4					
ANR	1169204	Condition	IS_NOT_NULL ( NCDR ( node ) )	1614:5:38852:38874	1168987	0	True				
ANR	1169205	CallExpression	IS_NOT_NULL ( NCDR ( node ) )		1168987	0					
ANR	1169206	Callee	IS_NOT_NULL		1168987	0					
ANR	1169207	Identifier	IS_NOT_NULL		1168987	0					
ANR	1169208	ArgumentList	NCDR ( node )		1168987	1					
ANR	1169209	Argument	NCDR ( node )		1168987	0					
ANR	1169210	CallExpression	NCDR ( node )		1168987	0					
ANR	1169211	Callee	NCDR		1168987	0					
ANR	1169212	Identifier	NCDR		1168987	0					
ANR	1169213	ArgumentList	node		1168987	1					
ANR	1169214	Argument	node		1168987	0					
ANR	1169215	Identifier	node		1168987	0					
ANR	1169216	CompoundStatement		32:30:730:730	1168987	1					
ANR	1169217	ExpressionStatement	len = pos - ( reg -> used + SIZE_OP_JUMP )	1615:3:38882:38920	1168987	0	True				
ANR	1169218	AssignmentExpression	len = pos - ( reg -> used + SIZE_OP_JUMP )		1168987	0		=			
ANR	1169219	Identifier	len		1168987	0					
ANR	1169220	AdditiveExpression	pos - ( reg -> used + SIZE_OP_JUMP )		1168987	1		-			
ANR	1169221	Identifier	pos		1168987	0					
ANR	1169222	AdditiveExpression	reg -> used + SIZE_OP_JUMP		1168987	1		+			
ANR	1169223	PtrMemberAccess	reg -> used		1168987	0					
ANR	1169224	Identifier	reg		1168987	0					
ANR	1169225	Identifier	used		1168987	1					
ANR	1169226	Identifier	SIZE_OP_JUMP		1168987	1					
ANR	1169227	ExpressionStatement	"r = add_opcode_rel_addr ( reg , OP_JUMP , len )"	1616:3:38925:38967	1168987	1	True				
ANR	1169228	AssignmentExpression	"r = add_opcode_rel_addr ( reg , OP_JUMP , len )"		1168987	0		=			
ANR	1169229	Identifier	r		1168987	0					
ANR	1169230	CallExpression	"add_opcode_rel_addr ( reg , OP_JUMP , len )"		1168987	1					
ANR	1169231	Callee	add_opcode_rel_addr		1168987	0					
ANR	1169232	Identifier	add_opcode_rel_addr		1168987	0					
ANR	1169233	ArgumentList	reg		1168987	1					
ANR	1169234	Argument	reg		1168987	0					
ANR	1169235	Identifier	reg		1168987	0					
ANR	1169236	Argument	OP_JUMP		1168987	1					
ANR	1169237	Identifier	OP_JUMP		1168987	0					
ANR	1169238	Argument	len		1168987	2					
ANR	1169239	Identifier	len		1168987	0					
ANR	1169240	IfStatement	if ( r )		1168987	2					
ANR	1169241	Condition	r	1617:7:38976:38976	1168987	0	True				
ANR	1169242	Identifier	r		1168987	0					
ANR	1169243	BreakStatement	break ;	1617:10:38979:38984	1168987	1	True				
ANR	1169244	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	1619:15:39004:39033	1168987	1	True				
ANR	1169245	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1168987	0					
ANR	1169246	Callee	IS_NOT_NULL		1168987	0					
ANR	1169247	Identifier	IS_NOT_NULL		1168987	0					
ANR	1169248	ArgumentList	node = NCDR ( node )		1168987	1					
ANR	1169249	Argument	node = NCDR ( node )		1168987	0					
ANR	1169250	AssignmentExpression	node = NCDR ( node )		1168987	0		=			
ANR	1169251	Identifier	node		1168987	0					
ANR	1169252	CallExpression	NCDR ( node )		1168987	1					
ANR	1169253	Callee	NCDR		1168987	0					
ANR	1169254	Identifier	NCDR		1168987	0					
ANR	1169255	ArgumentList	node		1168987	1					
ANR	1169256	Argument	node		1168987	0					
ANR	1169257	Identifier	node		1168987	0					
ANR	1169258	BreakStatement	break ;	1621:4:39047:39052	1168987	5	True				
ANR	1169259	Label	case NT_STR :	1623:2:39057:39068	1168987	6	True				
ANR	1169260	Identifier	NT_STR		1168987	0					
ANR	1169261	IfStatement	if ( NSTRING_IS_RAW ( node ) )		1168987	7					
ANR	1169262	Condition	NSTRING_IS_RAW ( node )	1624:8:39078:39097	1168987	0	True				
ANR	1169263	CallExpression	NSTRING_IS_RAW ( node )		1168987	0					
ANR	1169264	Callee	NSTRING_IS_RAW		1168987	0					
ANR	1169265	Identifier	NSTRING_IS_RAW		1168987	0					
ANR	1169266	ArgumentList	node		1168987	1					
ANR	1169267	Argument	node		1168987	0					
ANR	1169268	Identifier	node		1168987	0					
ANR	1169269	ExpressionStatement	"r = compile_string_raw_node ( NSTR ( node ) , reg )"	1625:6:39106:39150	1168987	1	True				
ANR	1169270	AssignmentExpression	"r = compile_string_raw_node ( NSTR ( node ) , reg )"		1168987	0		=			
ANR	1169271	Identifier	r		1168987	0					
ANR	1169272	CallExpression	"compile_string_raw_node ( NSTR ( node ) , reg )"		1168987	1					
ANR	1169273	Callee	compile_string_raw_node		1168987	0					
ANR	1169274	Identifier	compile_string_raw_node		1168987	0					
ANR	1169275	ArgumentList	NSTR ( node )		1168987	1					
ANR	1169276	Argument	NSTR ( node )		1168987	0					
ANR	1169277	CallExpression	NSTR ( node )		1168987	0					
ANR	1169278	Callee	NSTR		1168987	0					
ANR	1169279	Identifier	NSTR		1168987	0					
ANR	1169280	ArgumentList	node		1168987	1					
ANR	1169281	Argument	node		1168987	0					
ANR	1169282	Identifier	node		1168987	0					
ANR	1169283	Argument	reg		1168987	1					
ANR	1169284	Identifier	reg		1168987	0					
ANR	1169285	ElseStatement	else		1168987	0					
ANR	1169286	ExpressionStatement	"r = compile_string_node ( node , reg )"	1627:6:39167:39201	1168987	0	True				
ANR	1169287	AssignmentExpression	"r = compile_string_node ( node , reg )"		1168987	0		=			
ANR	1169288	Identifier	r		1168987	0					
ANR	1169289	CallExpression	"compile_string_node ( node , reg )"		1168987	1					
ANR	1169290	Callee	compile_string_node		1168987	0					
ANR	1169291	Identifier	compile_string_node		1168987	0					
ANR	1169292	ArgumentList	node		1168987	1					
ANR	1169293	Argument	node		1168987	0					
ANR	1169294	Identifier	node		1168987	0					
ANR	1169295	Argument	reg		1168987	1					
ANR	1169296	Identifier	reg		1168987	0					
ANR	1169297	BreakStatement	break ;	1628:4:39207:39212	1168987	8	True				
ANR	1169298	Label	case NT_CCLASS :	1630:2:39217:39231	1168987	9	True				
ANR	1169299	Identifier	NT_CCLASS		1168987	0					
ANR	1169300	ExpressionStatement	"r = compile_cclass_node ( NCCLASS ( node ) , reg )"	1631:4:39237:39280	1168987	10	True				
ANR	1169301	AssignmentExpression	"r = compile_cclass_node ( NCCLASS ( node ) , reg )"		1168987	0		=			
ANR	1169302	Identifier	r		1168987	0					
ANR	1169303	CallExpression	"compile_cclass_node ( NCCLASS ( node ) , reg )"		1168987	1					
ANR	1169304	Callee	compile_cclass_node		1168987	0					
ANR	1169305	Identifier	compile_cclass_node		1168987	0					
ANR	1169306	ArgumentList	NCCLASS ( node )		1168987	1					
ANR	1169307	Argument	NCCLASS ( node )		1168987	0					
ANR	1169308	CallExpression	NCCLASS ( node )		1168987	0					
ANR	1169309	Callee	NCCLASS		1168987	0					
ANR	1169310	Identifier	NCCLASS		1168987	0					
ANR	1169311	ArgumentList	node		1168987	1					
ANR	1169312	Argument	node		1168987	0					
ANR	1169313	Identifier	node		1168987	0					
ANR	1169314	Argument	reg		1168987	1					
ANR	1169315	Identifier	reg		1168987	0					
ANR	1169316	BreakStatement	break ;	1632:4:39286:39291	1168987	11	True				
ANR	1169317	Label	case NT_CTYPE :	1634:2:39296:39309	1168987	12	True				
ANR	1169318	Identifier	NT_CTYPE		1168987	0					
ANR	1169319	CompoundStatement		54:6:1176:1182	1168987	13					
ANR	1169320	IdentifierDeclStatement	int op ;	1636:6:39323:39329	1168987	0	True				
ANR	1169321	IdentifierDecl	op		1168987	0					
ANR	1169322	IdentifierDeclType	int		1168987	0					
ANR	1169323	Identifier	op		1168987	1					
ANR	1169324	SwitchStatement	switch ( NCTYPE ( node ) -> ctype )		1168987	1					
ANR	1169325	Condition	NCTYPE ( node ) -> ctype	1638:14:39346:39364	1168987	0	True				
ANR	1169326	PtrMemberAccess	NCTYPE ( node ) -> ctype		1168987	0					
ANR	1169327	CallExpression	NCTYPE ( node )		1168987	0					
ANR	1169328	Callee	NCTYPE		1168987	0					
ANR	1169329	Identifier	NCTYPE		1168987	0					
ANR	1169330	ArgumentList	node		1168987	1					
ANR	1169331	Argument	node		1168987	0					
ANR	1169332	Identifier	node		1168987	0					
ANR	1169333	Identifier	ctype		1168987	1					
ANR	1169334	CompoundStatement		56:35:1220:1220	1168987	1					
ANR	1169335	Label	case ONIGENC_CTYPE_WORD :	1639:6:39375:39398	1168987	0	True				
ANR	1169336	Identifier	ONIGENC_CTYPE_WORD		1168987	0					
ANR	1169337	IfStatement	if ( NCTYPE ( node ) -> not != 0 )		1168987	1					
ANR	1169338	Condition	NCTYPE ( node ) -> not != 0	1640:5:39405:39426	1168987	0	True				
ANR	1169339	EqualityExpression	NCTYPE ( node ) -> not != 0		1168987	0		!=			
ANR	1169340	PtrMemberAccess	NCTYPE ( node ) -> not		1168987	0					
ANR	1169341	CallExpression	NCTYPE ( node )		1168987	0					
ANR	1169342	Callee	NCTYPE		1168987	0					
ANR	1169343	Identifier	NCTYPE		1168987	0					
ANR	1169344	ArgumentList	node		1168987	1					
ANR	1169345	Argument	node		1168987	0					
ANR	1169346	Identifier	node		1168987	0					
ANR	1169347	Identifier	not		1168987	1					
ANR	1169348	PrimaryExpression	0		1168987	1					
ANR	1169349	ExpressionStatement	op = OP_NOT_WORD	1640:30:39430:39446	1168987	1	True				
ANR	1169350	AssignmentExpression	op = OP_NOT_WORD		1168987	0		=			
ANR	1169351	Identifier	op		1168987	0					
ANR	1169352	Identifier	OP_NOT_WORD		1168987	1					
ANR	1169353	ElseStatement	else		1168987	0					
ANR	1169354	ExpressionStatement	op = OP_WORD	1641:30:39478:39490	1168987	0	True				
ANR	1169355	AssignmentExpression	op = OP_WORD		1168987	0		=			
ANR	1169356	Identifier	op		1168987	0					
ANR	1169357	Identifier	OP_WORD		1168987	1					
ANR	1169358	BreakStatement	break ;	1642:1:39493:39498	1168987	2	True				
ANR	1169359	Label	default :	1643:6:39506:39513	1168987	3	True				
ANR	1169360	Identifier	default		1168987	0					
ANR	1169361	ReturnStatement	return ONIGERR_TYPE_BUG ;	1644:1:39516:39539	1168987	4	True				
ANR	1169362	Identifier	ONIGERR_TYPE_BUG		1168987	0					
ANR	1169363	BreakStatement	break ;	1645:1:39542:39547	1168987	5	True				
ANR	1169364	ExpressionStatement	"r = add_opcode ( reg , op )"	1647:6:39563:39586	1168987	2	True				
ANR	1169365	AssignmentExpression	"r = add_opcode ( reg , op )"		1168987	0		=			
ANR	1169366	Identifier	r		1168987	0					
ANR	1169367	CallExpression	"add_opcode ( reg , op )"		1168987	1					
ANR	1169368	Callee	add_opcode		1168987	0					
ANR	1169369	Identifier	add_opcode		1168987	0					
ANR	1169370	ArgumentList	reg		1168987	1					
ANR	1169371	Argument	reg		1168987	0					
ANR	1169372	Identifier	reg		1168987	0					
ANR	1169373	Argument	op		1168987	1					
ANR	1169374	Identifier	op		1168987	0					
ANR	1169375	BreakStatement	break ;	1649:4:39598:39603	1168987	14	True				
ANR	1169376	Label	case NT_CANY :	1651:2:39608:39620	1168987	15	True				
ANR	1169377	Identifier	NT_CANY		1168987	0					
ANR	1169378	IfStatement	if ( IS_MULTILINE ( reg -> options ) )		1168987	16					
ANR	1169379	Condition	IS_MULTILINE ( reg -> options )	1652:8:39630:39655	1168987	0	True				
ANR	1169380	CallExpression	IS_MULTILINE ( reg -> options )		1168987	0					
ANR	1169381	Callee	IS_MULTILINE		1168987	0					
ANR	1169382	Identifier	IS_MULTILINE		1168987	0					
ANR	1169383	ArgumentList	reg -> options		1168987	1					
ANR	1169384	Argument	reg -> options		1168987	0					
ANR	1169385	PtrMemberAccess	reg -> options		1168987	0					
ANR	1169386	Identifier	reg		1168987	0					
ANR	1169387	Identifier	options		1168987	1					
ANR	1169388	ExpressionStatement	"r = add_opcode ( reg , OP_ANYCHAR_ML )"	1653:6:39664:39698	1168987	1	True				
ANR	1169389	AssignmentExpression	"r = add_opcode ( reg , OP_ANYCHAR_ML )"		1168987	0		=			
ANR	1169390	Identifier	r		1168987	0					
ANR	1169391	CallExpression	"add_opcode ( reg , OP_ANYCHAR_ML )"		1168987	1					
ANR	1169392	Callee	add_opcode		1168987	0					
ANR	1169393	Identifier	add_opcode		1168987	0					
ANR	1169394	ArgumentList	reg		1168987	1					
ANR	1169395	Argument	reg		1168987	0					
ANR	1169396	Identifier	reg		1168987	0					
ANR	1169397	Argument	OP_ANYCHAR_ML		1168987	1					
ANR	1169398	Identifier	OP_ANYCHAR_ML		1168987	0					
ANR	1169399	ElseStatement	else		1168987	0					
ANR	1169400	ExpressionStatement	"r = add_opcode ( reg , OP_ANYCHAR )"	1655:6:39715:39746	1168987	0	True				
ANR	1169401	AssignmentExpression	"r = add_opcode ( reg , OP_ANYCHAR )"		1168987	0		=			
ANR	1169402	Identifier	r		1168987	0					
ANR	1169403	CallExpression	"add_opcode ( reg , OP_ANYCHAR )"		1168987	1					
ANR	1169404	Callee	add_opcode		1168987	0					
ANR	1169405	Identifier	add_opcode		1168987	0					
ANR	1169406	ArgumentList	reg		1168987	1					
ANR	1169407	Argument	reg		1168987	0					
ANR	1169408	Identifier	reg		1168987	0					
ANR	1169409	Argument	OP_ANYCHAR		1168987	1					
ANR	1169410	Identifier	OP_ANYCHAR		1168987	0					
ANR	1169411	BreakStatement	break ;	1656:4:39752:39757	1168987	17	True				
ANR	1169412	Label	case NT_BREF :	1658:2:39762:39774	1168987	18	True				
ANR	1169413	Identifier	NT_BREF		1168987	0					
ANR	1169414	CompoundStatement		78:6:1641:1667	1168987	19					
ANR	1169415	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	1660:6:39788:39814	1168987	0	True				
ANR	1169416	IdentifierDecl	* br = NBREF ( node )		1168987	0					
ANR	1169417	IdentifierDeclType	BRefNode *		1168987	0					
ANR	1169418	Identifier	br		1168987	1					
ANR	1169419	AssignmentExpression	* br = NBREF ( node )		1168987	2		=			
ANR	1169420	Identifier	br		1168987	0					
ANR	1169421	CallExpression	NBREF ( node )		1168987	1					
ANR	1169422	Callee	NBREF		1168987	0					
ANR	1169423	Identifier	NBREF		1168987	0					
ANR	1169424	ArgumentList	node		1168987	1					
ANR	1169425	Argument	node		1168987	0					
ANR	1169426	Identifier	node		1168987	0					
ANR	1169427	IfStatement	if ( IS_BACKREF_NEST_LEVEL ( br ) )		1168987	1					
ANR	1169428	Condition	IS_BACKREF_NEST_LEVEL ( br )	1663:10:39857:39881	1168987	0	True				
ANR	1169429	CallExpression	IS_BACKREF_NEST_LEVEL ( br )		1168987	0					
ANR	1169430	Callee	IS_BACKREF_NEST_LEVEL		1168987	0					
ANR	1169431	Identifier	IS_BACKREF_NEST_LEVEL		1168987	0					
ANR	1169432	ArgumentList	br		1168987	1					
ANR	1169433	Argument	br		1168987	0					
ANR	1169434	Identifier	br		1168987	0					
ANR	1169435	CompoundStatement		81:37:1737:1737	1168987	1					
ANR	1169436	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREF_WITH_LEVEL )"	1664:1:39887:39929	1168987	0	True				
ANR	1169437	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREF_WITH_LEVEL )"		1168987	0		=			
ANR	1169438	Identifier	r		1168987	0					
ANR	1169439	CallExpression	"add_opcode ( reg , OP_BACKREF_WITH_LEVEL )"		1168987	1					
ANR	1169440	Callee	add_opcode		1168987	0					
ANR	1169441	Identifier	add_opcode		1168987	0					
ANR	1169442	ArgumentList	reg		1168987	1					
ANR	1169443	Argument	reg		1168987	0					
ANR	1169444	Identifier	reg		1168987	0					
ANR	1169445	Argument	OP_BACKREF_WITH_LEVEL		1168987	1					
ANR	1169446	Identifier	OP_BACKREF_WITH_LEVEL		1168987	0					
ANR	1169447	IfStatement	if ( r )		1168987	1					
ANR	1169448	Condition	r	1665:5:39936:39936	1168987	0	True				
ANR	1169449	Identifier	r		1168987	0					
ANR	1169450	ReturnStatement	return r ;	1665:8:39939:39947	1168987	1	True				
ANR	1169451	Identifier	r		1168987	0					
ANR	1169452	ExpressionStatement	"r = add_option ( reg , ( reg -> options & ONIG_OPTION_IGNORECASE ) )"	1666:1:39950:40010	1168987	2	True				
ANR	1169453	AssignmentExpression	"r = add_option ( reg , ( reg -> options & ONIG_OPTION_IGNORECASE ) )"		1168987	0		=			
ANR	1169454	Identifier	r		1168987	0					
ANR	1169455	CallExpression	"add_option ( reg , ( reg -> options & ONIG_OPTION_IGNORECASE ) )"		1168987	1					
ANR	1169456	Callee	add_option		1168987	0					
ANR	1169457	Identifier	add_option		1168987	0					
ANR	1169458	ArgumentList	reg		1168987	1					
ANR	1169459	Argument	reg		1168987	0					
ANR	1169460	Identifier	reg		1168987	0					
ANR	1169461	Argument	reg -> options & ONIG_OPTION_IGNORECASE		1168987	1					
ANR	1169462	BitAndExpression	reg -> options & ONIG_OPTION_IGNORECASE		1168987	0		&			
ANR	1169463	PtrMemberAccess	reg -> options		1168987	0					
ANR	1169464	Identifier	reg		1168987	0					
ANR	1169465	Identifier	options		1168987	1					
ANR	1169466	Identifier	ONIG_OPTION_IGNORECASE		1168987	1					
ANR	1169467	IfStatement	if ( r )		1168987	3					
ANR	1169468	Condition	r	1667:5:40017:40017	1168987	0	True				
ANR	1169469	Identifier	r		1168987	0					
ANR	1169470	ReturnStatement	return r ;	1667:8:40020:40028	1168987	1	True				
ANR	1169471	Identifier	r		1168987	0					
ANR	1169472	ExpressionStatement	"r = add_length ( reg , br -> nest_level )"	1668:1:40031:40066	1168987	4	True				
ANR	1169473	AssignmentExpression	"r = add_length ( reg , br -> nest_level )"		1168987	0		=			
ANR	1169474	Identifier	r		1168987	0					
ANR	1169475	CallExpression	"add_length ( reg , br -> nest_level )"		1168987	1					
ANR	1169476	Callee	add_length		1168987	0					
ANR	1169477	Identifier	add_length		1168987	0					
ANR	1169478	ArgumentList	reg		1168987	1					
ANR	1169479	Argument	reg		1168987	0					
ANR	1169480	Identifier	reg		1168987	0					
ANR	1169481	Argument	br -> nest_level		1168987	1					
ANR	1169482	PtrMemberAccess	br -> nest_level		1168987	0					
ANR	1169483	Identifier	br		1168987	0					
ANR	1169484	Identifier	nest_level		1168987	1					
ANR	1169485	IfStatement	if ( r )		1168987	5					
ANR	1169486	Condition	r	1669:5:40073:40073	1168987	0	True				
ANR	1169487	Identifier	r		1168987	0					
ANR	1169488	ReturnStatement	return r ;	1669:8:40076:40084	1168987	1	True				
ANR	1169489	Identifier	r		1168987	0					
ANR	1169490	GotoStatement	goto add_bacref_mems ;	1671:1:40088:40108	1168987	6	True				
ANR	1169491	Identifier	add_bacref_mems		1168987	0					
ANR	1169492	ElseStatement	else		1168987	0					
ANR	1169493	IfStatement	if ( br -> back_num == 1 )		1168987	0					
ANR	1169494	Condition	br -> back_num == 1	1675:10:40146:40162	1168987	0	True				
ANR	1169495	EqualityExpression	br -> back_num == 1		1168987	0		==			
ANR	1169496	PtrMemberAccess	br -> back_num		1168987	0					
ANR	1169497	Identifier	br		1168987	0					
ANR	1169498	Identifier	back_num		1168987	1					
ANR	1169499	PrimaryExpression	1		1168987	1					
ANR	1169500	CompoundStatement		93:29:2018:2018	1168987	1					
ANR	1169501	ExpressionStatement	n = br -> back_static [ 0 ]	1676:1:40168:40190	1168987	0	True				
ANR	1169502	AssignmentExpression	n = br -> back_static [ 0 ]		1168987	0		=			
ANR	1169503	Identifier	n		1168987	0					
ANR	1169504	ArrayIndexing	br -> back_static [ 0 ]		1168987	1					
ANR	1169505	PtrMemberAccess	br -> back_static		1168987	0					
ANR	1169506	Identifier	br		1168987	0					
ANR	1169507	Identifier	back_static		1168987	1					
ANR	1169508	PrimaryExpression	0		1168987	1					
ANR	1169509	IfStatement	if ( IS_IGNORECASE ( reg -> options ) )		1168987	1					
ANR	1169510	Condition	IS_IGNORECASE ( reg -> options )	1677:5:40197:40223	1168987	0	True				
ANR	1169511	CallExpression	IS_IGNORECASE ( reg -> options )		1168987	0					
ANR	1169512	Callee	IS_IGNORECASE		1168987	0					
ANR	1169513	Identifier	IS_IGNORECASE		1168987	0					
ANR	1169514	ArgumentList	reg -> options		1168987	1					
ANR	1169515	Argument	reg -> options		1168987	0					
ANR	1169516	PtrMemberAccess	reg -> options		1168987	0					
ANR	1169517	Identifier	reg		1168987	0					
ANR	1169518	Identifier	options		1168987	1					
ANR	1169519	CompoundStatement		95:34:2079:2079	1168987	1					
ANR	1169520	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREFN_IC )"	1678:3:40231:40266	1168987	0	True				
ANR	1169521	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREFN_IC )"		1168987	0		=			
ANR	1169522	Identifier	r		1168987	0					
ANR	1169523	CallExpression	"add_opcode ( reg , OP_BACKREFN_IC )"		1168987	1					
ANR	1169524	Callee	add_opcode		1168987	0					
ANR	1169525	Identifier	add_opcode		1168987	0					
ANR	1169526	ArgumentList	reg		1168987	1					
ANR	1169527	Argument	reg		1168987	0					
ANR	1169528	Identifier	reg		1168987	0					
ANR	1169529	Argument	OP_BACKREFN_IC		1168987	1					
ANR	1169530	Identifier	OP_BACKREFN_IC		1168987	0					
ANR	1169531	IfStatement	if ( r )		1168987	1					
ANR	1169532	Condition	r	1679:7:40275:40275	1168987	0	True				
ANR	1169533	Identifier	r		1168987	0					
ANR	1169534	ReturnStatement	return r ;	1679:10:40278:40286	1168987	1	True				
ANR	1169535	Identifier	r		1168987	0					
ANR	1169536	ExpressionStatement	"r = add_mem_num ( reg , n )"	1680:3:40291:40314	1168987	2	True				
ANR	1169537	AssignmentExpression	"r = add_mem_num ( reg , n )"		1168987	0		=			
ANR	1169538	Identifier	r		1168987	0					
ANR	1169539	CallExpression	"add_mem_num ( reg , n )"		1168987	1					
ANR	1169540	Callee	add_mem_num		1168987	0					
ANR	1169541	Identifier	add_mem_num		1168987	0					
ANR	1169542	ArgumentList	reg		1168987	1					
ANR	1169543	Argument	reg		1168987	0					
ANR	1169544	Identifier	reg		1168987	0					
ANR	1169545	Argument	n		1168987	1					
ANR	1169546	Identifier	n		1168987	0					
ANR	1169547	ElseStatement	else		1168987	0					
ANR	1169548	CompoundStatement		100:6:2178:2178	1168987	0					
ANR	1169549	SwitchStatement	switch ( n )		1168987	0					
ANR	1169550	Condition	n	1683:11:40338:40338	1168987	0	True				
ANR	1169551	Identifier	n		1168987	0					
ANR	1169552	CompoundStatement		101:14:2194:2194	1168987	1					
ANR	1169553	Label	case 1 :	1684:3:40346:40352	1168987	0	True				
ANR	1169554	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREF1 )"	1684:12:40355:40387	1168987	1	True				
ANR	1169555	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREF1 )"		1168987	0		=			
ANR	1169556	Identifier	r		1168987	0					
ANR	1169557	CallExpression	"add_opcode ( reg , OP_BACKREF1 )"		1168987	1					
ANR	1169558	Callee	add_opcode		1168987	0					
ANR	1169559	Identifier	add_opcode		1168987	0					
ANR	1169560	ArgumentList	reg		1168987	1					
ANR	1169561	Argument	reg		1168987	0					
ANR	1169562	Identifier	reg		1168987	0					
ANR	1169563	Argument	OP_BACKREF1		1168987	1					
ANR	1169564	Identifier	OP_BACKREF1		1168987	0					
ANR	1169565	BreakStatement	break ;	1684:46:40389:40394	1168987	2	True				
ANR	1169566	Label	case 2 :	1685:3:40399:40405	1168987	3	True				
ANR	1169567	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREF2 )"	1685:12:40408:40440	1168987	4	True				
ANR	1169568	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREF2 )"		1168987	0		=			
ANR	1169569	Identifier	r		1168987	0					
ANR	1169570	CallExpression	"add_opcode ( reg , OP_BACKREF2 )"		1168987	1					
ANR	1169571	Callee	add_opcode		1168987	0					
ANR	1169572	Identifier	add_opcode		1168987	0					
ANR	1169573	ArgumentList	reg		1168987	1					
ANR	1169574	Argument	reg		1168987	0					
ANR	1169575	Identifier	reg		1168987	0					
ANR	1169576	Argument	OP_BACKREF2		1168987	1					
ANR	1169577	Identifier	OP_BACKREF2		1168987	0					
ANR	1169578	BreakStatement	break ;	1685:46:40442:40447	1168987	5	True				
ANR	1169579	Label	default :	1686:3:40452:40459	1168987	6	True				
ANR	1169580	Identifier	default		1168987	0					
ANR	1169581	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREFN )"	1687:5:40466:40498	1168987	7	True				
ANR	1169582	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREFN )"		1168987	0		=			
ANR	1169583	Identifier	r		1168987	0					
ANR	1169584	CallExpression	"add_opcode ( reg , OP_BACKREFN )"		1168987	1					
ANR	1169585	Callee	add_opcode		1168987	0					
ANR	1169586	Identifier	add_opcode		1168987	0					
ANR	1169587	ArgumentList	reg		1168987	1					
ANR	1169588	Argument	reg		1168987	0					
ANR	1169589	Identifier	reg		1168987	0					
ANR	1169590	Argument	OP_BACKREFN		1168987	1					
ANR	1169591	Identifier	OP_BACKREFN		1168987	0					
ANR	1169592	IfStatement	if ( r )		1168987	8					
ANR	1169593	Condition	r	1688:9:40509:40509	1168987	0	True				
ANR	1169594	Identifier	r		1168987	0					
ANR	1169595	ReturnStatement	return r ;	1688:12:40512:40520	1168987	1	True				
ANR	1169596	Identifier	r		1168987	0					
ANR	1169597	ExpressionStatement	"r = add_mem_num ( reg , n )"	1689:5:40527:40550	1168987	9	True				
ANR	1169598	AssignmentExpression	"r = add_mem_num ( reg , n )"		1168987	0		=			
ANR	1169599	Identifier	r		1168987	0					
ANR	1169600	CallExpression	"add_mem_num ( reg , n )"		1168987	1					
ANR	1169601	Callee	add_mem_num		1168987	0					
ANR	1169602	Identifier	add_mem_num		1168987	0					
ANR	1169603	ArgumentList	reg		1168987	1					
ANR	1169604	Argument	reg		1168987	0					
ANR	1169605	Identifier	reg		1168987	0					
ANR	1169606	Argument	n		1168987	1					
ANR	1169607	Identifier	n		1168987	0					
ANR	1169608	BreakStatement	break ;	1690:5:40557:40562	1168987	10	True				
ANR	1169609	ElseStatement	else		1168987	0					
ANR	1169610	CompoundStatement		114:1:2455:2461	1168987	0					
ANR	1169611	IdentifierDeclStatement	int i ;	1695:1:40594:40599	1168987	0	True				
ANR	1169612	IdentifierDecl	i		1168987	0					
ANR	1169613	IdentifierDeclType	int		1168987	0					
ANR	1169614	Identifier	i		1168987	1					
ANR	1169615	IdentifierDeclStatement	int * p ;	1696:1:40602:40608	1168987	1	True				
ANR	1169616	IdentifierDecl	* p		1168987	0					
ANR	1169617	IdentifierDeclType	int *		1168987	0					
ANR	1169618	Identifier	p		1168987	1					
ANR	1169619	IfStatement	if ( IS_IGNORECASE ( reg -> options ) )		1168987	2					
ANR	1169620	Condition	IS_IGNORECASE ( reg -> options )	1698:12:40623:40649	1168987	0	True				
ANR	1169621	CallExpression	IS_IGNORECASE ( reg -> options )		1168987	0					
ANR	1169622	Callee	IS_IGNORECASE		1168987	0					
ANR	1169623	Identifier	IS_IGNORECASE		1168987	0					
ANR	1169624	ArgumentList	reg -> options		1168987	1					
ANR	1169625	Argument	reg -> options		1168987	0					
ANR	1169626	PtrMemberAccess	reg -> options		1168987	0					
ANR	1169627	Identifier	reg		1168987	0					
ANR	1169628	Identifier	options		1168987	1					
ANR	1169629	CompoundStatement		116:41:2505:2505	1168987	1					
ANR	1169630	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREF_MULTI_IC )"	1699:10:40664:40704	1168987	0	True				
ANR	1169631	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREF_MULTI_IC )"		1168987	0		=			
ANR	1169632	Identifier	r		1168987	0					
ANR	1169633	CallExpression	"add_opcode ( reg , OP_BACKREF_MULTI_IC )"		1168987	1					
ANR	1169634	Callee	add_opcode		1168987	0					
ANR	1169635	Identifier	add_opcode		1168987	0					
ANR	1169636	ArgumentList	reg		1168987	1					
ANR	1169637	Argument	reg		1168987	0					
ANR	1169638	Identifier	reg		1168987	0					
ANR	1169639	Argument	OP_BACKREF_MULTI_IC		1168987	1					
ANR	1169640	Identifier	OP_BACKREF_MULTI_IC		1168987	0					
ANR	1169641	ElseStatement	else		1168987	0					
ANR	1169642	CompoundStatement		119:13:2582:2582	1168987	0					
ANR	1169643	ExpressionStatement	"r = add_opcode ( reg , OP_BACKREF_MULTI )"	1702:10:40741:40778	1168987	0	True				
ANR	1169644	AssignmentExpression	"r = add_opcode ( reg , OP_BACKREF_MULTI )"		1168987	0		=			
ANR	1169645	Identifier	r		1168987	0					
ANR	1169646	CallExpression	"add_opcode ( reg , OP_BACKREF_MULTI )"		1168987	1					
ANR	1169647	Callee	add_opcode		1168987	0					
ANR	1169648	Identifier	add_opcode		1168987	0					
ANR	1169649	ArgumentList	reg		1168987	1					
ANR	1169650	Argument	reg		1168987	0					
ANR	1169651	Identifier	reg		1168987	0					
ANR	1169652	Argument	OP_BACKREF_MULTI		1168987	1					
ANR	1169653	Identifier	OP_BACKREF_MULTI		1168987	0					
ANR	1169654	IfStatement	if ( r )		1168987	3					
ANR	1169655	Condition	r	1704:5:40795:40795	1168987	0	True				
ANR	1169656	Identifier	r		1168987	0					
ANR	1169657	ReturnStatement	return r ;	1704:8:40798:40806	1168987	1	True				
ANR	1169658	Identifier	r		1168987	0					
ANR	1169659	Label	add_bacref_mems :	1707:6:40845:40860	1168987	4	True				
ANR	1169660	Identifier	add_bacref_mems		1168987	0					
ANR	1169661	ExpressionStatement	"r = add_length ( reg , br -> back_num )"	1709:1:40870:40903	1168987	5	True				
ANR	1169662	AssignmentExpression	"r = add_length ( reg , br -> back_num )"		1168987	0		=			
ANR	1169663	Identifier	r		1168987	0					
ANR	1169664	CallExpression	"add_length ( reg , br -> back_num )"		1168987	1					
ANR	1169665	Callee	add_length		1168987	0					
ANR	1169666	Identifier	add_length		1168987	0					
ANR	1169667	ArgumentList	reg		1168987	1					
ANR	1169668	Argument	reg		1168987	0					
ANR	1169669	Identifier	reg		1168987	0					
ANR	1169670	Argument	br -> back_num		1168987	1					
ANR	1169671	PtrMemberAccess	br -> back_num		1168987	0					
ANR	1169672	Identifier	br		1168987	0					
ANR	1169673	Identifier	back_num		1168987	1					
ANR	1169674	IfStatement	if ( r )		1168987	6					
ANR	1169675	Condition	r	1710:5:40910:40910	1168987	0	True				
ANR	1169676	Identifier	r		1168987	0					
ANR	1169677	ReturnStatement	return r ;	1710:8:40913:40921	1168987	1	True				
ANR	1169678	Identifier	r		1168987	0					
ANR	1169679	ExpressionStatement	p = BACKREFS_P ( br )	1711:1:40924:40942	1168987	7	True				
ANR	1169680	AssignmentExpression	p = BACKREFS_P ( br )		1168987	0		=			
ANR	1169681	Identifier	p		1168987	0					
ANR	1169682	CallExpression	BACKREFS_P ( br )		1168987	1					
ANR	1169683	Callee	BACKREFS_P		1168987	0					
ANR	1169684	Identifier	BACKREFS_P		1168987	0					
ANR	1169685	ArgumentList	br		1168987	1					
ANR	1169686	Argument	br		1168987	0					
ANR	1169687	Identifier	br		1168987	0					
ANR	1169688	ForStatement	for ( i = br -> back_num - 1 ; i >= 0 ; i -- )		1168987	8					
ANR	1169689	ForInit	i = br -> back_num - 1 ;	1712:6:40950:40970	1168987	0	True				
ANR	1169690	AssignmentExpression	i = br -> back_num - 1		1168987	0		=			
ANR	1169691	Identifier	i		1168987	0					
ANR	1169692	AdditiveExpression	br -> back_num - 1		1168987	1		-			
ANR	1169693	PtrMemberAccess	br -> back_num		1168987	0					
ANR	1169694	Identifier	br		1168987	0					
ANR	1169695	Identifier	back_num		1168987	1					
ANR	1169696	PrimaryExpression	1		1168987	1					
ANR	1169697	Condition	i >= 0	1712:28:40972:40977	1168987	1	True				
ANR	1169698	RelationalExpression	i >= 0		1168987	0		>=			
ANR	1169699	Identifier	i		1168987	0					
ANR	1169700	PrimaryExpression	0		1168987	1					
ANR	1169701	PostIncDecOperationExpression	i --	1712:36:40980:40982	1168987	2	True				
ANR	1169702	Identifier	i		1168987	0					
ANR	1169703	IncDec	--		1168987	1					
ANR	1169704	CompoundStatement		130:41:2838:2838	1168987	3					
ANR	1169705	ExpressionStatement	"r = add_mem_num ( reg , p [ i ] )"	1713:3:40990:41016	1168987	0	True				
ANR	1169706	AssignmentExpression	"r = add_mem_num ( reg , p [ i ] )"		1168987	0		=			
ANR	1169707	Identifier	r		1168987	0					
ANR	1169708	CallExpression	"add_mem_num ( reg , p [ i ] )"		1168987	1					
ANR	1169709	Callee	add_mem_num		1168987	0					
ANR	1169710	Identifier	add_mem_num		1168987	0					
ANR	1169711	ArgumentList	reg		1168987	1					
ANR	1169712	Argument	reg		1168987	0					
ANR	1169713	Identifier	reg		1168987	0					
ANR	1169714	Argument	p [ i ]		1168987	1					
ANR	1169715	ArrayIndexing	p [ i ]		1168987	0					
ANR	1169716	Identifier	p		1168987	0					
ANR	1169717	Identifier	i		1168987	1					
ANR	1169718	IfStatement	if ( r )		1168987	1					
ANR	1169719	Condition	r	1714:7:41025:41025	1168987	0	True				
ANR	1169720	Identifier	r		1168987	0					
ANR	1169721	ReturnStatement	return r ;	1714:10:41028:41036	1168987	1	True				
ANR	1169722	Identifier	r		1168987	0					
ANR	1169723	BreakStatement	break ;	1718:4:41059:41064	1168987	20	True				
ANR	1169724	Label	case NT_CALL :	1721:2:41092:41104	1168987	21	True				
ANR	1169725	Identifier	NT_CALL		1168987	0					
ANR	1169726	ExpressionStatement	"r = compile_call ( NCALL ( node ) , reg )"	1722:4:41110:41144	1168987	22	True				
ANR	1169727	AssignmentExpression	"r = compile_call ( NCALL ( node ) , reg )"		1168987	0		=			
ANR	1169728	Identifier	r		1168987	0					
ANR	1169729	CallExpression	"compile_call ( NCALL ( node ) , reg )"		1168987	1					
ANR	1169730	Callee	compile_call		1168987	0					
ANR	1169731	Identifier	compile_call		1168987	0					
ANR	1169732	ArgumentList	NCALL ( node )		1168987	1					
ANR	1169733	Argument	NCALL ( node )		1168987	0					
ANR	1169734	CallExpression	NCALL ( node )		1168987	0					
ANR	1169735	Callee	NCALL		1168987	0					
ANR	1169736	Identifier	NCALL		1168987	0					
ANR	1169737	ArgumentList	node		1168987	1					
ANR	1169738	Argument	node		1168987	0					
ANR	1169739	Identifier	node		1168987	0					
ANR	1169740	Argument	reg		1168987	1					
ANR	1169741	Identifier	reg		1168987	0					
ANR	1169742	BreakStatement	break ;	1723:4:41150:41155	1168987	23	True				
ANR	1169743	Label	case NT_QTFR :	1726:2:41167:41179	1168987	24	True				
ANR	1169744	Identifier	NT_QTFR		1168987	0					
ANR	1169745	ExpressionStatement	"r = compile_quantifier_node ( NQTFR ( node ) , reg )"	1727:4:41185:41230	1168987	25	True				
ANR	1169746	AssignmentExpression	"r = compile_quantifier_node ( NQTFR ( node ) , reg )"		1168987	0		=			
ANR	1169747	Identifier	r		1168987	0					
ANR	1169748	CallExpression	"compile_quantifier_node ( NQTFR ( node ) , reg )"		1168987	1					
ANR	1169749	Callee	compile_quantifier_node		1168987	0					
ANR	1169750	Identifier	compile_quantifier_node		1168987	0					
ANR	1169751	ArgumentList	NQTFR ( node )		1168987	1					
ANR	1169752	Argument	NQTFR ( node )		1168987	0					
ANR	1169753	CallExpression	NQTFR ( node )		1168987	0					
ANR	1169754	Callee	NQTFR		1168987	0					
ANR	1169755	Identifier	NQTFR		1168987	0					
ANR	1169756	ArgumentList	node		1168987	1					
ANR	1169757	Argument	node		1168987	0					
ANR	1169758	Identifier	node		1168987	0					
ANR	1169759	Argument	reg		1168987	1					
ANR	1169760	Identifier	reg		1168987	0					
ANR	1169761	BreakStatement	break ;	1728:4:41236:41241	1168987	26	True				
ANR	1169762	Label	case NT_ENCLOSE :	1730:2:41246:41261	1168987	27	True				
ANR	1169763	Identifier	NT_ENCLOSE		1168987	0					
ANR	1169764	ExpressionStatement	"r = compile_enclose_node ( NENCLOSE ( node ) , reg )"	1731:4:41267:41312	1168987	28	True				
ANR	1169765	AssignmentExpression	"r = compile_enclose_node ( NENCLOSE ( node ) , reg )"		1168987	0		=			
ANR	1169766	Identifier	r		1168987	0					
ANR	1169767	CallExpression	"compile_enclose_node ( NENCLOSE ( node ) , reg )"		1168987	1					
ANR	1169768	Callee	compile_enclose_node		1168987	0					
ANR	1169769	Identifier	compile_enclose_node		1168987	0					
ANR	1169770	ArgumentList	NENCLOSE ( node )		1168987	1					
ANR	1169771	Argument	NENCLOSE ( node )		1168987	0					
ANR	1169772	CallExpression	NENCLOSE ( node )		1168987	0					
ANR	1169773	Callee	NENCLOSE		1168987	0					
ANR	1169774	Identifier	NENCLOSE		1168987	0					
ANR	1169775	ArgumentList	node		1168987	1					
ANR	1169776	Argument	node		1168987	0					
ANR	1169777	Identifier	node		1168987	0					
ANR	1169778	Argument	reg		1168987	1					
ANR	1169779	Identifier	reg		1168987	0					
ANR	1169780	BreakStatement	break ;	1732:4:41318:41323	1168987	29	True				
ANR	1169781	Label	case NT_ANCHOR :	1734:2:41328:41342	1168987	30	True				
ANR	1169782	Identifier	NT_ANCHOR		1168987	0					
ANR	1169783	ExpressionStatement	"r = compile_anchor_node ( NANCHOR ( node ) , reg )"	1735:4:41348:41391	1168987	31	True				
ANR	1169784	AssignmentExpression	"r = compile_anchor_node ( NANCHOR ( node ) , reg )"		1168987	0		=			
ANR	1169785	Identifier	r		1168987	0					
ANR	1169786	CallExpression	"compile_anchor_node ( NANCHOR ( node ) , reg )"		1168987	1					
ANR	1169787	Callee	compile_anchor_node		1168987	0					
ANR	1169788	Identifier	compile_anchor_node		1168987	0					
ANR	1169789	ArgumentList	NANCHOR ( node )		1168987	1					
ANR	1169790	Argument	NANCHOR ( node )		1168987	0					
ANR	1169791	CallExpression	NANCHOR ( node )		1168987	0					
ANR	1169792	Callee	NANCHOR		1168987	0					
ANR	1169793	Identifier	NANCHOR		1168987	0					
ANR	1169794	ArgumentList	node		1168987	1					
ANR	1169795	Argument	node		1168987	0					
ANR	1169796	Identifier	node		1168987	0					
ANR	1169797	Argument	reg		1168987	1					
ANR	1169798	Identifier	reg		1168987	0					
ANR	1169799	BreakStatement	break ;	1736:4:41397:41402	1168987	32	True				
ANR	1169800	Label	default :	1738:2:41407:41414	1168987	33	True				
ANR	1169801	Identifier	default		1168987	0					
ANR	1169802	ExpressionStatement	"fprintf ( stderr , ""compile_tree: undefined node type %d\\n"" , NTYPE ( node ) )"	1740:4:41438:41508	1168987	34	True				
ANR	1169803	CallExpression	"fprintf ( stderr , ""compile_tree: undefined node type %d\\n"" , NTYPE ( node ) )"		1168987	0					
ANR	1169804	Callee	fprintf		1168987	0					
ANR	1169805	Identifier	fprintf		1168987	0					
ANR	1169806	ArgumentList	stderr		1168987	1					
ANR	1169807	Argument	stderr		1168987	0					
ANR	1169808	Identifier	stderr		1168987	0					
ANR	1169809	Argument	"""compile_tree: undefined node type %d\\n"""		1168987	1					
ANR	1169810	PrimaryExpression	"""compile_tree: undefined node type %d\\n"""		1168987	0					
ANR	1169811	Argument	NTYPE ( node )		1168987	2					
ANR	1169812	CallExpression	NTYPE ( node )		1168987	0					
ANR	1169813	Callee	NTYPE		1168987	0					
ANR	1169814	Identifier	NTYPE		1168987	0					
ANR	1169815	ArgumentList	node		1168987	1					
ANR	1169816	Argument	node		1168987	0					
ANR	1169817	Identifier	node		1168987	0					
ANR	1169818	BreakStatement	break ;	1742:4:41521:41526	1168987	35	True				
ANR	1169819	ReturnStatement	return r ;	1745:2:41535:41543	1168987	3	True				
ANR	1169820	Identifier	r		1168987	0					
ANR	1169821	ReturnType	static int		1168987	1					
ANR	1169822	Identifier	compile_tree		1168987	2					
ANR	1169823	ParameterList	"Node * node , regex_t * reg"		1168987	3					
ANR	1169824	Parameter	Node * node	1582:13:38120:38129	1168987	0	True				
ANR	1169825	ParameterType	Node *		1168987	0					
ANR	1169826	Identifier	node		1168987	1					
ANR	1169827	Parameter	regex_t * reg	1582:25:38132:38143	1168987	1	True				
ANR	1169828	ParameterType	regex_t *		1168987	0					
ANR	1169829	Identifier	reg		1168987	1					
ANR	1169830	CFGEntryNode	ENTRY		1168987		True				
ANR	1169831	CFGExitNode	EXIT		1168987		True				
ANR	1169832	Symbol	NCAR		1168987						
ANR	1169833	Symbol	br -> back_num		1168987						
ANR	1169834	Symbol	OP_ANYCHAR_ML		1168987						
ANR	1169835	Symbol	ONIG_OPTION_IGNORECASE		1168987						
ANR	1169836	Symbol	* br -> back_static		1168987						
ANR	1169837	Symbol	compile_string_node		1168987						
ANR	1169838	Symbol	type		1168987						
ANR	1169839	Symbol	NQTFR		1168987						
ANR	1169840	Symbol	NCCLASS		1168987						
ANR	1169841	Symbol	* NCTYPE		1168987						
ANR	1169842	Symbol	len		1168987						
ANR	1169843	Symbol	reg		1168987						
ANR	1169844	Symbol	* br		1168987						
ANR	1169845	Symbol	reg -> options		1168987						
ANR	1169846	Symbol	compile_cclass_node		1168987						
ANR	1169847	Symbol	add_opcode		1168987						
ANR	1169848	Symbol	SIZE_OP_JUMP		1168987						
ANR	1169849	Symbol	NCTYPE		1168987						
ANR	1169850	Symbol	OP_JUMP		1168987						
ANR	1169851	Symbol	NULL		1168987						
ANR	1169852	Symbol	NCDR		1168987						
ANR	1169853	Symbol	NSTR		1168987						
ANR	1169854	Symbol	OP_BACKREF1		1168987						
ANR	1169855	Symbol	compile_anchor_node		1168987						
ANR	1169856	Symbol	ONIGERR_TYPE_BUG		1168987						
ANR	1169857	Symbol	stderr		1168987						
ANR	1169858	Symbol	OP_BACKREF2		1168987						
ANR	1169859	Symbol	br -> back_static		1168987						
ANR	1169860	Symbol	OP_BACKREFN_IC		1168987						
ANR	1169861	Symbol	node		1168987						
ANR	1169862	Symbol	compile_string_raw_node		1168987						
ANR	1169863	Symbol	BACKREFS_P		1168987						
ANR	1169864	Symbol	OP_BACKREF_WITH_LEVEL		1168987						
ANR	1169865	Symbol	compile_call		1168987						
ANR	1169866	Symbol	* * br		1168987						
ANR	1169867	Symbol	compile_enclose_node		1168987						
ANR	1169868	Symbol	IS_NOT_NULL		1168987						
ANR	1169869	Symbol	NCTYPE ( node ) -> ctype		1168987						
ANR	1169870	Symbol	add_length		1168987						
ANR	1169871	Symbol	NCALL		1168987						
ANR	1169872	Symbol	OP_PUSH		1168987						
ANR	1169873	Symbol	OP_BACKREF_MULTI_IC		1168987						
ANR	1169874	Symbol	OP_BACKREFN		1168987						
ANR	1169875	Symbol	NSTRING_IS_RAW		1168987						
ANR	1169876	Symbol	add_mem_num		1168987						
ANR	1169877	Symbol	br		1168987						
ANR	1169878	Symbol	pos		1168987						
ANR	1169879	Symbol	NBREF		1168987						
ANR	1169880	Symbol	compile_quantifier_node		1168987						
ANR	1169881	Symbol	NENCLOSE		1168987						
ANR	1169882	Symbol	OP_WORD		1168987						
ANR	1169883	Symbol	OP_BACKREF_MULTI		1168987						
ANR	1169884	Symbol	op		1168987						
ANR	1169885	Symbol	add_opcode_rel_addr		1168987						
ANR	1169886	Symbol	compile_length_tree		1168987						
ANR	1169887	Symbol	SIZE_OP_PUSH		1168987						
ANR	1169888	Symbol	i		1168987						
ANR	1169889	Symbol	add_option		1168987						
ANR	1169890	Symbol	br -> nest_level		1168987						
ANR	1169891	Symbol	n		1168987						
ANR	1169892	Symbol	p		1168987						
ANR	1169893	Symbol	r		1168987						
ANR	1169894	Symbol	compile_tree		1168987						
ANR	1169895	Symbol	* i		1168987						
ANR	1169896	Symbol	OP_ANYCHAR		1168987						
ANR	1169897	Symbol	NCTYPE ( node ) -> not		1168987						
ANR	1169898	Symbol	IS_IGNORECASE		1168987						
ANR	1169899	Symbol	x		1168987						
ANR	1169900	Symbol	NANCHOR		1168987						
ANR	1169901	Symbol	IS_MULTILINE		1168987						
ANR	1169902	Symbol	NTYPE		1168987						
ANR	1169903	Symbol	OP_NOT_WORD		1168987						
ANR	1169904	Symbol	* p		1168987						
ANR	1169905	Symbol	* reg		1168987						
ANR	1169906	Symbol	reg -> used		1168987						
ANR	1169907	Symbol	IS_BACKREF_NEST_LEVEL		1168987						
ANR	1169908	Function	noname_disable_map	1750:0:41572:42711							
ANR	1169909	FunctionDef	"noname_disable_map (Node * * plink , GroupNumRemap * map , int * counter)"		1169908	0					
ANR	1169910	CompoundStatement		1752:0:41650:42711	1169908	0					
ANR	1169911	IdentifierDeclStatement	int r = 0 ;	1753:2:41654:41663	1169908	0	True				
ANR	1169912	IdentifierDecl	r = 0		1169908	0					
ANR	1169913	IdentifierDeclType	int		1169908	0					
ANR	1169914	Identifier	r		1169908	1					
ANR	1169915	AssignmentExpression	r = 0		1169908	2		=			
ANR	1169916	Identifier	r		1169908	0					
ANR	1169917	PrimaryExpression	0		1169908	1					
ANR	1169918	IdentifierDeclStatement	Node * node = * plink ;	1754:2:41667:41686	1169908	1	True				
ANR	1169919	IdentifierDecl	* node = * plink		1169908	0					
ANR	1169920	IdentifierDeclType	Node *		1169908	0					
ANR	1169921	Identifier	node		1169908	1					
ANR	1169922	AssignmentExpression	* node = * plink		1169908	2		=			
ANR	1169923	Identifier	node		1169908	0					
ANR	1169924	UnaryOperationExpression	* plink		1169908	1					
ANR	1169925	UnaryOperator	*		1169908	0					
ANR	1169926	Identifier	plink		1169908	1					
ANR	1169927	SwitchStatement	switch ( NTYPE ( node ) )		1169908	2					
ANR	1169928	Condition	NTYPE ( node )	1756:10:41699:41709	1169908	0	True				
ANR	1169929	CallExpression	NTYPE ( node )		1169908	0					
ANR	1169930	Callee	NTYPE		1169908	0					
ANR	1169931	Identifier	NTYPE		1169908	0					
ANR	1169932	ArgumentList	node		1169908	1					
ANR	1169933	Argument	node		1169908	0					
ANR	1169934	Identifier	node		1169908	0					
ANR	1169935	CompoundStatement		5:23:61:61	1169908	1					
ANR	1169936	Label	case NT_LIST :	1757:2:41716:41728	1169908	0	True				
ANR	1169937	Identifier	NT_LIST		1169908	0					
ANR	1169938	Label	case NT_ALT :	1758:2:41732:41743	1169908	1	True				
ANR	1169939	Identifier	NT_ALT		1169908	0					
ANR	1169940	DoStatement	do		1169908	2					
ANR	1169941	CompoundStatement		8:7:101:101	1169908	0					
ANR	1169942	ExpressionStatement	"r = noname_disable_map ( & ( NCAR ( node ) ) , map , counter )"	1760:6:41760:41811	1169908	0	True				
ANR	1169943	AssignmentExpression	"r = noname_disable_map ( & ( NCAR ( node ) ) , map , counter )"		1169908	0		=			
ANR	1169944	Identifier	r		1169908	0					
ANR	1169945	CallExpression	"noname_disable_map ( & ( NCAR ( node ) ) , map , counter )"		1169908	1					
ANR	1169946	Callee	noname_disable_map		1169908	0					
ANR	1169947	Identifier	noname_disable_map		1169908	0					
ANR	1169948	ArgumentList	& ( NCAR ( node ) )		1169908	1					
ANR	1169949	Argument	& ( NCAR ( node ) )		1169908	0					
ANR	1169950	UnaryOperationExpression	& ( NCAR ( node ) )		1169908	0					
ANR	1169951	UnaryOperator	&		1169908	0					
ANR	1169952	CallExpression	NCAR ( node )		1169908	1					
ANR	1169953	Callee	NCAR		1169908	0					
ANR	1169954	Identifier	NCAR		1169908	0					
ANR	1169955	ArgumentList	node		1169908	1					
ANR	1169956	Argument	node		1169908	0					
ANR	1169957	Identifier	node		1169908	0					
ANR	1169958	Argument	map		1169908	1					
ANR	1169959	Identifier	map		1169908	0					
ANR	1169960	Argument	counter		1169908	2					
ANR	1169961	Identifier	counter		1169908	0					
ANR	1169962	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	1761:13:41826:41865	1169908	1	True				
ANR	1169963	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1169908	0		&&			
ANR	1169964	EqualityExpression	r == 0		1169908	0		==			
ANR	1169965	Identifier	r		1169908	0					
ANR	1169966	PrimaryExpression	0		1169908	1					
ANR	1169967	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1169908	1					
ANR	1169968	Callee	IS_NOT_NULL		1169908	0					
ANR	1169969	Identifier	IS_NOT_NULL		1169908	0					
ANR	1169970	ArgumentList	node = NCDR ( node )		1169908	1					
ANR	1169971	Argument	node = NCDR ( node )		1169908	0					
ANR	1169972	AssignmentExpression	node = NCDR ( node )		1169908	0		=			
ANR	1169973	Identifier	node		1169908	0					
ANR	1169974	CallExpression	NCDR ( node )		1169908	1					
ANR	1169975	Callee	NCDR		1169908	0					
ANR	1169976	Identifier	NCDR		1169908	0					
ANR	1169977	ArgumentList	node		1169908	1					
ANR	1169978	Argument	node		1169908	0					
ANR	1169979	Identifier	node		1169908	0					
ANR	1169980	BreakStatement	break ;	1762:4:41873:41878	1169908	3	True				
ANR	1169981	Label	case NT_QTFR :	1764:2:41883:41895	1169908	4	True				
ANR	1169982	Identifier	NT_QTFR		1169908	0					
ANR	1169983	CompoundStatement		16:6:305:326	1169908	5					
ANR	1169984	IdentifierDeclStatement	Node * * ptarget = & ( NQTFR ( node ) -> target ) ;	1766:6:41909:41948	1169908	0	True				
ANR	1169985	IdentifierDecl	* * ptarget = & ( NQTFR ( node ) -> target )		1169908	0					
ANR	1169986	IdentifierDeclType	Node * *		1169908	0					
ANR	1169987	Identifier	ptarget		1169908	1					
ANR	1169988	AssignmentExpression	* * ptarget = & ( NQTFR ( node ) -> target )		1169908	2		=			
ANR	1169989	Identifier	ptarget		1169908	0					
ANR	1169990	UnaryOperationExpression	& ( NQTFR ( node ) -> target )		1169908	1					
ANR	1169991	UnaryOperator	&		1169908	0					
ANR	1169992	PtrMemberAccess	NQTFR ( node ) -> target		1169908	1					
ANR	1169993	CallExpression	NQTFR ( node )		1169908	0					
ANR	1169994	Callee	NQTFR		1169908	0					
ANR	1169995	Identifier	NQTFR		1169908	0					
ANR	1169996	ArgumentList	node		1169908	1					
ANR	1169997	Argument	node		1169908	0					
ANR	1169998	Identifier	node		1169908	0					
ANR	1169999	Identifier	target		1169908	1					
ANR	1170000	IdentifierDeclStatement	Node * old = * ptarget ;	1767:6:41956:41977	1169908	1	True				
ANR	1170001	IdentifierDecl	* old = * ptarget		1169908	0					
ANR	1170002	IdentifierDeclType	Node *		1169908	0					
ANR	1170003	Identifier	old		1169908	1					
ANR	1170004	AssignmentExpression	* old = * ptarget		1169908	2		=			
ANR	1170005	Identifier	old		1169908	0					
ANR	1170006	UnaryOperationExpression	* ptarget		1169908	1					
ANR	1170007	UnaryOperator	*		1169908	0					
ANR	1170008	Identifier	ptarget		1169908	1					
ANR	1170009	ExpressionStatement	"r = noname_disable_map ( ptarget , map , counter )"	1768:6:41985:42030	1169908	2	True				
ANR	1170010	AssignmentExpression	"r = noname_disable_map ( ptarget , map , counter )"		1169908	0		=			
ANR	1170011	Identifier	r		1169908	0					
ANR	1170012	CallExpression	"noname_disable_map ( ptarget , map , counter )"		1169908	1					
ANR	1170013	Callee	noname_disable_map		1169908	0					
ANR	1170014	Identifier	noname_disable_map		1169908	0					
ANR	1170015	ArgumentList	ptarget		1169908	1					
ANR	1170016	Argument	ptarget		1169908	0					
ANR	1170017	Identifier	ptarget		1169908	0					
ANR	1170018	Argument	map		1169908	1					
ANR	1170019	Identifier	map		1169908	0					
ANR	1170020	Argument	counter		1169908	2					
ANR	1170021	Identifier	counter		1169908	0					
ANR	1170022	IfStatement	if ( * ptarget != old && NTYPE ( * ptarget ) == NT_QTFR )		1169908	3					
ANR	1170023	Condition	* ptarget != old && NTYPE ( * ptarget ) == NT_QTFR	1769:10:42042:42086	1169908	0	True				
ANR	1170024	AndExpression	* ptarget != old && NTYPE ( * ptarget ) == NT_QTFR		1169908	0		&&			
ANR	1170025	EqualityExpression	* ptarget != old		1169908	0		!=			
ANR	1170026	UnaryOperationExpression	* ptarget		1169908	0					
ANR	1170027	UnaryOperator	*		1169908	0					
ANR	1170028	Identifier	ptarget		1169908	1					
ANR	1170029	Identifier	old		1169908	1					
ANR	1170030	EqualityExpression	NTYPE ( * ptarget ) == NT_QTFR		1169908	1		==			
ANR	1170031	CallExpression	NTYPE ( * ptarget )		1169908	0					
ANR	1170032	Callee	NTYPE		1169908	0					
ANR	1170033	Identifier	NTYPE		1169908	0					
ANR	1170034	ArgumentList	* ptarget		1169908	1					
ANR	1170035	Argument	* ptarget		1169908	0					
ANR	1170036	UnaryOperationExpression	* ptarget		1169908	0					
ANR	1170037	UnaryOperator	*		1169908	0					
ANR	1170038	Identifier	ptarget		1169908	1					
ANR	1170039	Identifier	NT_QTFR		1169908	1					
ANR	1170040	CompoundStatement		18:57:438:438	1169908	1					
ANR	1170041	ExpressionStatement	"onig_reduce_nested_quantifier ( node , * ptarget )"	1770:1:42092:42137	1169908	0	True				
ANR	1170042	CallExpression	"onig_reduce_nested_quantifier ( node , * ptarget )"		1169908	0					
ANR	1170043	Callee	onig_reduce_nested_quantifier		1169908	0					
ANR	1170044	Identifier	onig_reduce_nested_quantifier		1169908	0					
ANR	1170045	ArgumentList	node		1169908	1					
ANR	1170046	Argument	node		1169908	0					
ANR	1170047	Identifier	node		1169908	0					
ANR	1170048	Argument	* ptarget		1169908	1					
ANR	1170049	UnaryOperationExpression	* ptarget		1169908	0					
ANR	1170050	UnaryOperator	*		1169908	0					
ANR	1170051	Identifier	ptarget		1169908	1					
ANR	1170052	BreakStatement	break ;	1773:4:42157:42162	1169908	6	True				
ANR	1170053	Label	case NT_ENCLOSE :	1775:2:42167:42182	1169908	7	True				
ANR	1170054	Identifier	NT_ENCLOSE		1169908	0					
ANR	1170055	CompoundStatement		26:6:545:577	1169908	8					
ANR	1170056	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	1777:6:42196:42228	1169908	0	True				
ANR	1170057	IdentifierDecl	* en = NENCLOSE ( node )		1169908	0					
ANR	1170058	IdentifierDeclType	EncloseNode *		1169908	0					
ANR	1170059	Identifier	en		1169908	1					
ANR	1170060	AssignmentExpression	* en = NENCLOSE ( node )		1169908	2		=			
ANR	1170061	Identifier	en		1169908	0					
ANR	1170062	CallExpression	NENCLOSE ( node )		1169908	1					
ANR	1170063	Callee	NENCLOSE		1169908	0					
ANR	1170064	Identifier	NENCLOSE		1169908	0					
ANR	1170065	ArgumentList	node		1169908	1					
ANR	1170066	Argument	node		1169908	0					
ANR	1170067	Identifier	node		1169908	0					
ANR	1170068	IfStatement	if ( en -> type == ENCLOSE_MEMORY )		1169908	1					
ANR	1170069	Condition	en -> type == ENCLOSE_MEMORY	1778:10:42240:42265	1169908	0	True				
ANR	1170070	EqualityExpression	en -> type == ENCLOSE_MEMORY		1169908	0		==			
ANR	1170071	PtrMemberAccess	en -> type		1169908	0					
ANR	1170072	Identifier	en		1169908	0					
ANR	1170073	Identifier	type		1169908	1					
ANR	1170074	Identifier	ENCLOSE_MEMORY		1169908	1					
ANR	1170075	CompoundStatement		27:38:617:617	1169908	1					
ANR	1170076	IfStatement	if ( IS_ENCLOSE_NAMED_GROUP ( en ) )		1169908	0					
ANR	1170077	Condition	IS_ENCLOSE_NAMED_GROUP ( en )	1779:5:42275:42300	1169908	0	True				
ANR	1170078	CallExpression	IS_ENCLOSE_NAMED_GROUP ( en )		1169908	0					
ANR	1170079	Callee	IS_ENCLOSE_NAMED_GROUP		1169908	0					
ANR	1170080	Identifier	IS_ENCLOSE_NAMED_GROUP		1169908	0					
ANR	1170081	ArgumentList	en		1169908	1					
ANR	1170082	Argument	en		1169908	0					
ANR	1170083	Identifier	en		1169908	0					
ANR	1170084	CompoundStatement		28:33:652:652	1169908	1					
ANR	1170085	ExpressionStatement	( * counter ) ++	1780:3:42308:42320	1169908	0	True				
ANR	1170086	PostIncDecOperationExpression	( * counter ) ++		1169908	0					
ANR	1170087	UnaryOperationExpression	* counter		1169908	0					
ANR	1170088	UnaryOperator	*		1169908	0					
ANR	1170089	Identifier	counter		1169908	1					
ANR	1170090	IncDec	++		1169908	1					
ANR	1170091	ExpressionStatement	map [ en -> regnum ] . new_val = * counter	1781:3:42325:42359	1169908	1	True				
ANR	1170092	AssignmentExpression	map [ en -> regnum ] . new_val = * counter		1169908	0		=			
ANR	1170093	MemberAccess	map [ en -> regnum ] . new_val		1169908	0					
ANR	1170094	ArrayIndexing	map [ en -> regnum ]		1169908	0					
ANR	1170095	Identifier	map		1169908	0					
ANR	1170096	PtrMemberAccess	en -> regnum		1169908	1					
ANR	1170097	Identifier	en		1169908	0					
ANR	1170098	Identifier	regnum		1169908	1					
ANR	1170099	Identifier	new_val		1169908	1					
ANR	1170100	UnaryOperationExpression	* counter		1169908	1					
ANR	1170101	UnaryOperator	*		1169908	0					
ANR	1170102	Identifier	counter		1169908	1					
ANR	1170103	ExpressionStatement	en -> regnum = * counter	1782:3:42364:42385	1169908	2	True				
ANR	1170104	AssignmentExpression	en -> regnum = * counter		1169908	0		=			
ANR	1170105	PtrMemberAccess	en -> regnum		1169908	0					
ANR	1170106	Identifier	en		1169908	0					
ANR	1170107	Identifier	regnum		1169908	1					
ANR	1170108	UnaryOperationExpression	* counter		1169908	1					
ANR	1170109	UnaryOperator	*		1169908	0					
ANR	1170110	Identifier	counter		1169908	1					
ANR	1170111	ExpressionStatement	"r = noname_disable_map ( & ( en -> target ) , map , counter )"	1783:3:42390:42441	1169908	3	True				
ANR	1170112	AssignmentExpression	"r = noname_disable_map ( & ( en -> target ) , map , counter )"		1169908	0		=			
ANR	1170113	Identifier	r		1169908	0					
ANR	1170114	CallExpression	"noname_disable_map ( & ( en -> target ) , map , counter )"		1169908	1					
ANR	1170115	Callee	noname_disable_map		1169908	0					
ANR	1170116	Identifier	noname_disable_map		1169908	0					
ANR	1170117	ArgumentList	& ( en -> target )		1169908	1					
ANR	1170118	Argument	& ( en -> target )		1169908	0					
ANR	1170119	UnaryOperationExpression	& ( en -> target )		1169908	0					
ANR	1170120	UnaryOperator	&		1169908	0					
ANR	1170121	PtrMemberAccess	en -> target		1169908	1					
ANR	1170122	Identifier	en		1169908	0					
ANR	1170123	Identifier	target		1169908	1					
ANR	1170124	Argument	map		1169908	1					
ANR	1170125	Identifier	map		1169908	0					
ANR	1170126	Argument	counter		1169908	2					
ANR	1170127	Identifier	counter		1169908	0					
ANR	1170128	ElseStatement	else		1169908	0					
ANR	1170129	CompoundStatement		34:6:801:801	1169908	0					
ANR	1170130	ExpressionStatement	* plink = en -> target	1786:3:42457:42476	1169908	0	True				
ANR	1170131	AssignmentExpression	* plink = en -> target		1169908	0		=			
ANR	1170132	UnaryOperationExpression	* plink		1169908	0					
ANR	1170133	UnaryOperator	*		1169908	0					
ANR	1170134	Identifier	plink		1169908	1					
ANR	1170135	PtrMemberAccess	en -> target		1169908	1					
ANR	1170136	Identifier	en		1169908	0					
ANR	1170137	Identifier	target		1169908	1					
ANR	1170138	ExpressionStatement	en -> target = NULL_NODE	1787:3:42481:42503	1169908	1	True				
ANR	1170139	AssignmentExpression	en -> target = NULL_NODE		1169908	0		=			
ANR	1170140	PtrMemberAccess	en -> target		1169908	0					
ANR	1170141	Identifier	en		1169908	0					
ANR	1170142	Identifier	target		1169908	1					
ANR	1170143	Identifier	NULL_NODE		1169908	1					
ANR	1170144	ExpressionStatement	onig_node_free ( node )	1788:3:42508:42528	1169908	2	True				
ANR	1170145	CallExpression	onig_node_free ( node )		1169908	0					
ANR	1170146	Callee	onig_node_free		1169908	0					
ANR	1170147	Identifier	onig_node_free		1169908	0					
ANR	1170148	ArgumentList	node		1169908	1					
ANR	1170149	Argument	node		1169908	0					
ANR	1170150	Identifier	node		1169908	0					
ANR	1170151	ExpressionStatement	"r = noname_disable_map ( plink , map , counter )"	1789:3:42533:42576	1169908	3	True				
ANR	1170152	AssignmentExpression	"r = noname_disable_map ( plink , map , counter )"		1169908	0		=			
ANR	1170153	Identifier	r		1169908	0					
ANR	1170154	CallExpression	"noname_disable_map ( plink , map , counter )"		1169908	1					
ANR	1170155	Callee	noname_disable_map		1169908	0					
ANR	1170156	Identifier	noname_disable_map		1169908	0					
ANR	1170157	ArgumentList	plink		1169908	1					
ANR	1170158	Argument	plink		1169908	0					
ANR	1170159	Identifier	plink		1169908	0					
ANR	1170160	Argument	map		1169908	1					
ANR	1170161	Identifier	map		1169908	0					
ANR	1170162	Argument	counter		1169908	2					
ANR	1170163	Identifier	counter		1169908	0					
ANR	1170164	ElseStatement	else		1169908	0					
ANR	1170165	ExpressionStatement	"r = noname_disable_map ( & ( en -> target ) , map , counter )"	1793:1:42601:42652	1169908	0	True				
ANR	1170166	AssignmentExpression	"r = noname_disable_map ( & ( en -> target ) , map , counter )"		1169908	0		=			
ANR	1170167	Identifier	r		1169908	0					
ANR	1170168	CallExpression	"noname_disable_map ( & ( en -> target ) , map , counter )"		1169908	1					
ANR	1170169	Callee	noname_disable_map		1169908	0					
ANR	1170170	Identifier	noname_disable_map		1169908	0					
ANR	1170171	ArgumentList	& ( en -> target )		1169908	1					
ANR	1170172	Argument	& ( en -> target )		1169908	0					
ANR	1170173	UnaryOperationExpression	& ( en -> target )		1169908	0					
ANR	1170174	UnaryOperator	&		1169908	0					
ANR	1170175	PtrMemberAccess	en -> target		1169908	1					
ANR	1170176	Identifier	en		1169908	0					
ANR	1170177	Identifier	target		1169908	1					
ANR	1170178	Argument	map		1169908	1					
ANR	1170179	Identifier	map		1169908	0					
ANR	1170180	Argument	counter		1169908	2					
ANR	1170181	Identifier	counter		1169908	0					
ANR	1170182	BreakStatement	break ;	1795:4:42664:42669	1169908	9	True				
ANR	1170183	Label	default :	1797:2:42674:42681	1169908	10	True				
ANR	1170184	Identifier	default		1169908	0					
ANR	1170185	BreakStatement	break ;	1798:4:42687:42692	1169908	11	True				
ANR	1170186	ReturnStatement	return r ;	1801:2:42701:42709	1169908	3	True				
ANR	1170187	Identifier	r		1169908	0					
ANR	1170188	ReturnType	static int		1169908	1					
ANR	1170189	Identifier	noname_disable_map		1169908	2					
ANR	1170190	ParameterList	"Node * * plink , GroupNumRemap * map , int * counter"		1169908	3					
ANR	1170191	Parameter	Node * * plink	1751:19:41602:41613	1169908	0	True				
ANR	1170192	ParameterType	Node * *		1169908	0					
ANR	1170193	Identifier	plink		1169908	1					
ANR	1170194	Parameter	GroupNumRemap * map	1751:33:41616:41633	1169908	1	True				
ANR	1170195	ParameterType	GroupNumRemap *		1169908	0					
ANR	1170196	Identifier	map		1169908	1					
ANR	1170197	Parameter	int * counter	1751:53:41636:41647	1169908	2	True				
ANR	1170198	ParameterType	int *		1169908	0					
ANR	1170199	Identifier	counter		1169908	1					
ANR	1170200	CFGEntryNode	ENTRY		1169908		True				
ANR	1170201	CFGExitNode	EXIT		1169908		True				
ANR	1170202	Symbol	IS_NOT_NULL		1169908						
ANR	1170203	Symbol	* map		1169908						
ANR	1170204	Symbol	IS_ENCLOSE_NAMED_GROUP		1169908						
ANR	1170205	Symbol	* plink		1169908						
ANR	1170206	Symbol	NQTFR		1169908						
ANR	1170207	Symbol	* en		1169908						
ANR	1170208	Symbol	& en -> target		1169908						
ANR	1170209	Symbol	& NQTFR ( node ) -> target		1169908						
ANR	1170210	Symbol	* ptarget		1169908						
ANR	1170211	Symbol	map [ en -> regnum ] . new_val		1169908						
ANR	1170212	Symbol	NT_QTFR		1169908						
ANR	1170213	Symbol	NENCLOSE		1169908						
ANR	1170214	Symbol	ENCLOSE_MEMORY		1169908						
ANR	1170215	Symbol	en -> type		1169908						
ANR	1170216	Symbol	* * en		1169908						
ANR	1170217	Symbol	map		1169908						
ANR	1170218	Symbol	& NCAR		1169908						
ANR	1170219	Symbol	en -> regnum		1169908						
ANR	1170220	Symbol	old		1169908						
ANR	1170221	Symbol	NCDR		1169908						
ANR	1170222	Symbol	en		1169908						
ANR	1170223	Symbol	counter		1169908						
ANR	1170224	Symbol	* en -> regnum		1169908						
ANR	1170225	Symbol	node		1169908						
ANR	1170226	Symbol	noname_disable_map		1169908						
ANR	1170227	Symbol	* counter		1169908						
ANR	1170228	Symbol	r		1169908						
ANR	1170229	Symbol	plink		1169908						
ANR	1170230	Symbol	en -> target		1169908						
ANR	1170231	Symbol	ptarget		1169908						
ANR	1170232	Symbol	NTYPE		1169908						
ANR	1170233	Symbol	NULL_NODE		1169908						
ANR	1170234	Function	renumber_node_backref	1804:0:42714:43240							
ANR	1170235	FunctionDef	"renumber_node_backref (Node * node , GroupNumRemap * map)"		1170234	0					
ANR	1170236	CompoundStatement		1806:0:42779:43240	1170234	0					
ANR	1170237	IdentifierDeclStatement	"int i , pos , n , old_num ;"	1807:2:42783:42805	1170234	0	True				
ANR	1170238	IdentifierDecl	i		1170234	0					
ANR	1170239	IdentifierDeclType	int		1170234	0					
ANR	1170240	Identifier	i		1170234	1					
ANR	1170241	IdentifierDecl	pos		1170234	1					
ANR	1170242	IdentifierDeclType	int		1170234	0					
ANR	1170243	Identifier	pos		1170234	1					
ANR	1170244	IdentifierDecl	n		1170234	2					
ANR	1170245	IdentifierDeclType	int		1170234	0					
ANR	1170246	Identifier	n		1170234	1					
ANR	1170247	IdentifierDecl	old_num		1170234	3					
ANR	1170248	IdentifierDeclType	int		1170234	0					
ANR	1170249	Identifier	old_num		1170234	1					
ANR	1170250	IdentifierDeclStatement	int * backs ;	1808:2:42809:42819	1170234	1	True				
ANR	1170251	IdentifierDecl	* backs		1170234	0					
ANR	1170252	IdentifierDeclType	int *		1170234	0					
ANR	1170253	Identifier	backs		1170234	1					
ANR	1170254	IdentifierDeclStatement	BRefNode * bn = NBREF ( node ) ;	1809:2:42823:42849	1170234	2	True				
ANR	1170255	IdentifierDecl	* bn = NBREF ( node )		1170234	0					
ANR	1170256	IdentifierDeclType	BRefNode *		1170234	0					
ANR	1170257	Identifier	bn		1170234	1					
ANR	1170258	AssignmentExpression	* bn = NBREF ( node )		1170234	2		=			
ANR	1170259	Identifier	bn		1170234	0					
ANR	1170260	CallExpression	NBREF ( node )		1170234	1					
ANR	1170261	Callee	NBREF		1170234	0					
ANR	1170262	Identifier	NBREF		1170234	0					
ANR	1170263	ArgumentList	node		1170234	1					
ANR	1170264	Argument	node		1170234	0					
ANR	1170265	Identifier	node		1170234	0					
ANR	1170266	IfStatement	if ( ! IS_BACKREF_NAME_REF ( bn ) )		1170234	3					
ANR	1170267	Condition	! IS_BACKREF_NAME_REF ( bn )	1811:6:42858:42882	1170234	0	True				
ANR	1170268	UnaryOperationExpression	! IS_BACKREF_NAME_REF ( bn )		1170234	0					
ANR	1170269	UnaryOperator	!		1170234	0					
ANR	1170270	CallExpression	IS_BACKREF_NAME_REF ( bn )		1170234	1					
ANR	1170271	Callee	IS_BACKREF_NAME_REF		1170234	0					
ANR	1170272	Identifier	IS_BACKREF_NAME_REF		1170234	0					
ANR	1170273	ArgumentList	bn		1170234	1					
ANR	1170274	Argument	bn		1170234	0					
ANR	1170275	Identifier	bn		1170234	0					
ANR	1170276	ReturnStatement	return ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED ;	1812:4:42889:42940	1170234	1	True				
ANR	1170277	Identifier	ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED		1170234	0					
ANR	1170278	ExpressionStatement	old_num = bn -> back_num	1814:2:42945:42967	1170234	4	True				
ANR	1170279	AssignmentExpression	old_num = bn -> back_num		1170234	0		=			
ANR	1170280	Identifier	old_num		1170234	0					
ANR	1170281	PtrMemberAccess	bn -> back_num		1170234	1					
ANR	1170282	Identifier	bn		1170234	0					
ANR	1170283	Identifier	back_num		1170234	1					
ANR	1170284	IfStatement	if ( IS_NULL ( bn -> back_dynamic ) )		1170234	5					
ANR	1170285	Condition	IS_NULL ( bn -> back_dynamic )	1815:6:42975:42999	1170234	0	True				
ANR	1170286	CallExpression	IS_NULL ( bn -> back_dynamic )		1170234	0					
ANR	1170287	Callee	IS_NULL		1170234	0					
ANR	1170288	Identifier	IS_NULL		1170234	0					
ANR	1170289	ArgumentList	bn -> back_dynamic		1170234	1					
ANR	1170290	Argument	bn -> back_dynamic		1170234	0					
ANR	1170291	PtrMemberAccess	bn -> back_dynamic		1170234	0					
ANR	1170292	Identifier	bn		1170234	0					
ANR	1170293	Identifier	back_dynamic		1170234	1					
ANR	1170294	ExpressionStatement	backs = bn -> back_static	1816:4:43006:43029	1170234	1	True				
ANR	1170295	AssignmentExpression	backs = bn -> back_static		1170234	0		=			
ANR	1170296	Identifier	backs		1170234	0					
ANR	1170297	PtrMemberAccess	bn -> back_static		1170234	1					
ANR	1170298	Identifier	bn		1170234	0					
ANR	1170299	Identifier	back_static		1170234	1					
ANR	1170300	ElseStatement	else		1170234	0					
ANR	1170301	ExpressionStatement	backs = bn -> back_dynamic	1818:4:43042:43066	1170234	0	True				
ANR	1170302	AssignmentExpression	backs = bn -> back_dynamic		1170234	0		=			
ANR	1170303	Identifier	backs		1170234	0					
ANR	1170304	PtrMemberAccess	bn -> back_dynamic		1170234	1					
ANR	1170305	Identifier	bn		1170234	0					
ANR	1170306	Identifier	back_dynamic		1170234	1					
ANR	1170307	ForStatement	"for ( i = 0 , pos = 0 ; i < old_num ; i ++ )"		1170234	6					
ANR	1170308	ForInit	"i = 0 , pos = 0 ;"	1820:7:43076:43090	1170234	0	True				
ANR	1170309	Expression	"i = 0 , pos = 0"		1170234	0					
ANR	1170310	AssignmentExpression	i = 0		1170234	0		=			
ANR	1170311	Identifier	i		1170234	0					
ANR	1170312	PrimaryExpression	0		1170234	1					
ANR	1170313	AssignmentExpression	pos = 0		1170234	1		=			
ANR	1170314	Identifier	pos		1170234	0					
ANR	1170315	PrimaryExpression	0		1170234	1					
ANR	1170316	Condition	i < old_num	1820:23:43092:43102	1170234	1	True				
ANR	1170317	RelationalExpression	i < old_num		1170234	0		<			
ANR	1170318	Identifier	i		1170234	0					
ANR	1170319	Identifier	old_num		1170234	1					
ANR	1170320	PostIncDecOperationExpression	i ++	1820:36:43105:43107	1170234	2	True				
ANR	1170321	Identifier	i		1170234	0					
ANR	1170322	IncDec	++		1170234	1					
ANR	1170323	CompoundStatement		15:41:330:330	1170234	3					
ANR	1170324	ExpressionStatement	n = map [ backs [ i ] ] . new_val	1821:4:43116:43141	1170234	0	True				
ANR	1170325	AssignmentExpression	n = map [ backs [ i ] ] . new_val		1170234	0		=			
ANR	1170326	Identifier	n		1170234	0					
ANR	1170327	MemberAccess	map [ backs [ i ] ] . new_val		1170234	1					
ANR	1170328	ArrayIndexing	map [ backs [ i ] ]		1170234	0					
ANR	1170329	Identifier	map		1170234	0					
ANR	1170330	ArrayIndexing	backs [ i ]		1170234	1					
ANR	1170331	Identifier	backs		1170234	0					
ANR	1170332	Identifier	i		1170234	1					
ANR	1170333	Identifier	new_val		1170234	1					
ANR	1170334	IfStatement	if ( n > 0 )		1170234	1					
ANR	1170335	Condition	n > 0	1822:8:43151:43155	1170234	0	True				
ANR	1170336	RelationalExpression	n > 0		1170234	0		>			
ANR	1170337	Identifier	n		1170234	0					
ANR	1170338	PrimaryExpression	0		1170234	1					
ANR	1170339	CompoundStatement		17:15:378:378	1170234	1					
ANR	1170340	ExpressionStatement	backs [ pos ] = n	1823:6:43166:43180	1170234	0	True				
ANR	1170341	AssignmentExpression	backs [ pos ] = n		1170234	0		=			
ANR	1170342	ArrayIndexing	backs [ pos ]		1170234	0					
ANR	1170343	Identifier	backs		1170234	0					
ANR	1170344	Identifier	pos		1170234	1					
ANR	1170345	Identifier	n		1170234	1					
ANR	1170346	ExpressionStatement	pos ++	1824:6:43188:43193	1170234	1	True				
ANR	1170347	PostIncDecOperationExpression	pos ++		1170234	0					
ANR	1170348	Identifier	pos		1170234	0					
ANR	1170349	IncDec	++		1170234	1					
ANR	1170350	ExpressionStatement	bn -> back_num = pos	1828:2:43208:43226	1170234	7	True				
ANR	1170351	AssignmentExpression	bn -> back_num = pos		1170234	0		=			
ANR	1170352	PtrMemberAccess	bn -> back_num		1170234	0					
ANR	1170353	Identifier	bn		1170234	0					
ANR	1170354	Identifier	back_num		1170234	1					
ANR	1170355	Identifier	pos		1170234	1					
ANR	1170356	ReturnStatement	return 0 ;	1829:2:43230:43238	1170234	8	True				
ANR	1170357	PrimaryExpression	0		1170234	0					
ANR	1170358	ReturnType	static int		1170234	1					
ANR	1170359	Identifier	renumber_node_backref		1170234	2					
ANR	1170360	ParameterList	"Node * node , GroupNumRemap * map"		1170234	3					
ANR	1170361	Parameter	Node * node	1805:22:42747:42756	1170234	0	True				
ANR	1170362	ParameterType	Node *		1170234	0					
ANR	1170363	Identifier	node		1170234	1					
ANR	1170364	Parameter	GroupNumRemap * map	1805:34:42759:42776	1170234	1	True				
ANR	1170365	ParameterType	GroupNumRemap *		1170234	0					
ANR	1170366	Identifier	map		1170234	1					
ANR	1170367	CFGEntryNode	ENTRY		1170234		True				
ANR	1170368	CFGExitNode	EXIT		1170234		True				
ANR	1170369	Symbol	* * i		1170234						
ANR	1170370	Symbol	old_num		1170234						
ANR	1170371	Symbol	* backs		1170234						
ANR	1170372	Symbol	* map		1170234						
ANR	1170373	Symbol	i		1170234						
ANR	1170374	Symbol	bn -> back_num		1170234						
ANR	1170375	Symbol	bn -> back_static		1170234						
ANR	1170376	Symbol	bn		1170234						
ANR	1170377	Symbol	n		1170234						
ANR	1170378	Symbol	node		1170234						
ANR	1170379	Symbol	* bn		1170234						
ANR	1170380	Symbol	* i		1170234						
ANR	1170381	Symbol	* * backs		1170234						
ANR	1170382	Symbol	IS_NULL		1170234						
ANR	1170383	Symbol	pos		1170234						
ANR	1170384	Symbol	NBREF		1170234						
ANR	1170385	Symbol	ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED		1170234						
ANR	1170386	Symbol	IS_BACKREF_NAME_REF		1170234						
ANR	1170387	Symbol	bn -> back_dynamic		1170234						
ANR	1170388	Symbol	map [ backs [ i ] ] . new_val		1170234						
ANR	1170389	Symbol	map		1170234						
ANR	1170390	Symbol	backs		1170234						
ANR	1170391	Symbol	* pos		1170234						
ANR	1170392	Function	renumber_by_map	1832:0:43243:43766							
ANR	1170393	FunctionDef	"renumber_by_map (Node * node , GroupNumRemap * map)"		1170392	0					
ANR	1170394	CompoundStatement		1834:0:43302:43766	1170392	0					
ANR	1170395	IdentifierDeclStatement	int r = 0 ;	1835:2:43306:43315	1170392	0	True				
ANR	1170396	IdentifierDecl	r = 0		1170392	0					
ANR	1170397	IdentifierDeclType	int		1170392	0					
ANR	1170398	Identifier	r		1170392	1					
ANR	1170399	AssignmentExpression	r = 0		1170392	2		=			
ANR	1170400	Identifier	r		1170392	0					
ANR	1170401	PrimaryExpression	0		1170392	1					
ANR	1170402	SwitchStatement	switch ( NTYPE ( node ) )		1170392	1					
ANR	1170403	Condition	NTYPE ( node )	1837:10:43328:43338	1170392	0	True				
ANR	1170404	CallExpression	NTYPE ( node )		1170392	0					
ANR	1170405	Callee	NTYPE		1170392	0					
ANR	1170406	Identifier	NTYPE		1170392	0					
ANR	1170407	ArgumentList	node		1170392	1					
ANR	1170408	Argument	node		1170392	0					
ANR	1170409	Identifier	node		1170392	0					
ANR	1170410	CompoundStatement		4:23:38:38	1170392	1					
ANR	1170411	Label	case NT_LIST :	1838:2:43345:43357	1170392	0	True				
ANR	1170412	Identifier	NT_LIST		1170392	0					
ANR	1170413	Label	case NT_ALT :	1839:2:43361:43372	1170392	1	True				
ANR	1170414	Identifier	NT_ALT		1170392	0					
ANR	1170415	DoStatement	do		1170392	2					
ANR	1170416	CompoundStatement		7:7:78:78	1170392	0					
ANR	1170417	ExpressionStatement	"r = renumber_by_map ( NCAR ( node ) , map )"	1841:6:43389:43425	1170392	0	True				
ANR	1170418	AssignmentExpression	"r = renumber_by_map ( NCAR ( node ) , map )"		1170392	0		=			
ANR	1170419	Identifier	r		1170392	0					
ANR	1170420	CallExpression	"renumber_by_map ( NCAR ( node ) , map )"		1170392	1					
ANR	1170421	Callee	renumber_by_map		1170392	0					
ANR	1170422	Identifier	renumber_by_map		1170392	0					
ANR	1170423	ArgumentList	NCAR ( node )		1170392	1					
ANR	1170424	Argument	NCAR ( node )		1170392	0					
ANR	1170425	CallExpression	NCAR ( node )		1170392	0					
ANR	1170426	Callee	NCAR		1170392	0					
ANR	1170427	Identifier	NCAR		1170392	0					
ANR	1170428	ArgumentList	node		1170392	1					
ANR	1170429	Argument	node		1170392	0					
ANR	1170430	Identifier	node		1170392	0					
ANR	1170431	Argument	map		1170392	1					
ANR	1170432	Identifier	map		1170392	0					
ANR	1170433	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	1842:13:43440:43479	1170392	1	True				
ANR	1170434	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1170392	0		&&			
ANR	1170435	EqualityExpression	r == 0		1170392	0		==			
ANR	1170436	Identifier	r		1170392	0					
ANR	1170437	PrimaryExpression	0		1170392	1					
ANR	1170438	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1170392	1					
ANR	1170439	Callee	IS_NOT_NULL		1170392	0					
ANR	1170440	Identifier	IS_NOT_NULL		1170392	0					
ANR	1170441	ArgumentList	node = NCDR ( node )		1170392	1					
ANR	1170442	Argument	node = NCDR ( node )		1170392	0					
ANR	1170443	AssignmentExpression	node = NCDR ( node )		1170392	0		=			
ANR	1170444	Identifier	node		1170392	0					
ANR	1170445	CallExpression	NCDR ( node )		1170392	1					
ANR	1170446	Callee	NCDR		1170392	0					
ANR	1170447	Identifier	NCDR		1170392	0					
ANR	1170448	ArgumentList	node		1170392	1					
ANR	1170449	Argument	node		1170392	0					
ANR	1170450	Identifier	node		1170392	0					
ANR	1170451	BreakStatement	break ;	1843:4:43487:43492	1170392	3	True				
ANR	1170452	Label	case NT_QTFR :	1844:2:43496:43508	1170392	4	True				
ANR	1170453	Identifier	NT_QTFR		1170392	0					
ANR	1170454	ExpressionStatement	"r = renumber_by_map ( NQTFR ( node ) -> target , map )"	1845:4:43514:43559	1170392	5	True				
ANR	1170455	AssignmentExpression	"r = renumber_by_map ( NQTFR ( node ) -> target , map )"		1170392	0		=			
ANR	1170456	Identifier	r		1170392	0					
ANR	1170457	CallExpression	"renumber_by_map ( NQTFR ( node ) -> target , map )"		1170392	1					
ANR	1170458	Callee	renumber_by_map		1170392	0					
ANR	1170459	Identifier	renumber_by_map		1170392	0					
ANR	1170460	ArgumentList	NQTFR ( node ) -> target		1170392	1					
ANR	1170461	Argument	NQTFR ( node ) -> target		1170392	0					
ANR	1170462	PtrMemberAccess	NQTFR ( node ) -> target		1170392	0					
ANR	1170463	CallExpression	NQTFR ( node )		1170392	0					
ANR	1170464	Callee	NQTFR		1170392	0					
ANR	1170465	Identifier	NQTFR		1170392	0					
ANR	1170466	ArgumentList	node		1170392	1					
ANR	1170467	Argument	node		1170392	0					
ANR	1170468	Identifier	node		1170392	0					
ANR	1170469	Identifier	target		1170392	1					
ANR	1170470	Argument	map		1170392	1					
ANR	1170471	Identifier	map		1170392	0					
ANR	1170472	BreakStatement	break ;	1846:4:43565:43570	1170392	6	True				
ANR	1170473	Label	case NT_ENCLOSE :	1847:2:43574:43589	1170392	7	True				
ANR	1170474	Identifier	NT_ENCLOSE		1170392	0					
ANR	1170475	ExpressionStatement	"r = renumber_by_map ( NENCLOSE ( node ) -> target , map )"	1848:4:43595:43643	1170392	8	True				
ANR	1170476	AssignmentExpression	"r = renumber_by_map ( NENCLOSE ( node ) -> target , map )"		1170392	0		=			
ANR	1170477	Identifier	r		1170392	0					
ANR	1170478	CallExpression	"renumber_by_map ( NENCLOSE ( node ) -> target , map )"		1170392	1					
ANR	1170479	Callee	renumber_by_map		1170392	0					
ANR	1170480	Identifier	renumber_by_map		1170392	0					
ANR	1170481	ArgumentList	NENCLOSE ( node ) -> target		1170392	1					
ANR	1170482	Argument	NENCLOSE ( node ) -> target		1170392	0					
ANR	1170483	PtrMemberAccess	NENCLOSE ( node ) -> target		1170392	0					
ANR	1170484	CallExpression	NENCLOSE ( node )		1170392	0					
ANR	1170485	Callee	NENCLOSE		1170392	0					
ANR	1170486	Identifier	NENCLOSE		1170392	0					
ANR	1170487	ArgumentList	node		1170392	1					
ANR	1170488	Argument	node		1170392	0					
ANR	1170489	Identifier	node		1170392	0					
ANR	1170490	Identifier	target		1170392	1					
ANR	1170491	Argument	map		1170392	1					
ANR	1170492	Identifier	map		1170392	0					
ANR	1170493	BreakStatement	break ;	1849:4:43649:43654	1170392	9	True				
ANR	1170494	Label	case NT_BREF :	1851:2:43659:43671	1170392	10	True				
ANR	1170495	Identifier	NT_BREF		1170392	0					
ANR	1170496	ExpressionStatement	"r = renumber_node_backref ( node , map )"	1852:4:43677:43713	1170392	11	True				
ANR	1170497	AssignmentExpression	"r = renumber_node_backref ( node , map )"		1170392	0		=			
ANR	1170498	Identifier	r		1170392	0					
ANR	1170499	CallExpression	"renumber_node_backref ( node , map )"		1170392	1					
ANR	1170500	Callee	renumber_node_backref		1170392	0					
ANR	1170501	Identifier	renumber_node_backref		1170392	0					
ANR	1170502	ArgumentList	node		1170392	1					
ANR	1170503	Argument	node		1170392	0					
ANR	1170504	Identifier	node		1170392	0					
ANR	1170505	Argument	map		1170392	1					
ANR	1170506	Identifier	map		1170392	0					
ANR	1170507	BreakStatement	break ;	1853:4:43719:43724	1170392	12	True				
ANR	1170508	Label	default :	1855:2:43729:43736	1170392	13	True				
ANR	1170509	Identifier	default		1170392	0					
ANR	1170510	BreakStatement	break ;	1856:4:43742:43747	1170392	14	True				
ANR	1170511	ReturnStatement	return r ;	1859:2:43756:43764	1170392	2	True				
ANR	1170512	Identifier	r		1170392	0					
ANR	1170513	ReturnType	static int		1170392	1					
ANR	1170514	Identifier	renumber_by_map		1170392	2					
ANR	1170515	ParameterList	"Node * node , GroupNumRemap * map"		1170392	3					
ANR	1170516	Parameter	Node * node	1833:16:43270:43279	1170392	0	True				
ANR	1170517	ParameterType	Node *		1170392	0					
ANR	1170518	Identifier	node		1170392	1					
ANR	1170519	Parameter	GroupNumRemap * map	1833:28:43282:43299	1170392	1	True				
ANR	1170520	ParameterType	GroupNumRemap *		1170392	0					
ANR	1170521	Identifier	map		1170392	1					
ANR	1170522	CFGEntryNode	ENTRY		1170392		True				
ANR	1170523	CFGExitNode	EXIT		1170392		True				
ANR	1170524	Symbol	renumber_by_map		1170392						
ANR	1170525	Symbol	NQTFR ( node ) -> target		1170392						
ANR	1170526	Symbol	IS_NOT_NULL		1170392						
ANR	1170527	Symbol	NCAR		1170392						
ANR	1170528	Symbol	* NENCLOSE		1170392						
ANR	1170529	Symbol	NCDR		1170392						
ANR	1170530	Symbol	NQTFR		1170392						
ANR	1170531	Symbol	NENCLOSE ( node ) -> target		1170392						
ANR	1170532	Symbol	node		1170392						
ANR	1170533	Symbol	r		1170392						
ANR	1170534	Symbol	* NQTFR		1170392						
ANR	1170535	Symbol	NENCLOSE		1170392						
ANR	1170536	Symbol	renumber_node_backref		1170392						
ANR	1170537	Symbol	NTYPE		1170392						
ANR	1170538	Symbol	map		1170392						
ANR	1170539	Function	numbered_ref_check	1862:0:43769:44330							
ANR	1170540	FunctionDef	numbered_ref_check (Node * node)		1170539	0					
ANR	1170541	CompoundStatement		1864:0:43811:44330	1170539	0					
ANR	1170542	IdentifierDeclStatement	int r = 0 ;	1865:2:43815:43824	1170539	0	True				
ANR	1170543	IdentifierDecl	r = 0		1170539	0					
ANR	1170544	IdentifierDeclType	int		1170539	0					
ANR	1170545	Identifier	r		1170539	1					
ANR	1170546	AssignmentExpression	r = 0		1170539	2		=			
ANR	1170547	Identifier	r		1170539	0					
ANR	1170548	PrimaryExpression	0		1170539	1					
ANR	1170549	SwitchStatement	switch ( NTYPE ( node ) )		1170539	1					
ANR	1170550	Condition	NTYPE ( node )	1867:10:43837:43847	1170539	0	True				
ANR	1170551	CallExpression	NTYPE ( node )		1170539	0					
ANR	1170552	Callee	NTYPE		1170539	0					
ANR	1170553	Identifier	NTYPE		1170539	0					
ANR	1170554	ArgumentList	node		1170539	1					
ANR	1170555	Argument	node		1170539	0					
ANR	1170556	Identifier	node		1170539	0					
ANR	1170557	CompoundStatement		4:23:38:38	1170539	1					
ANR	1170558	Label	case NT_LIST :	1868:2:43854:43866	1170539	0	True				
ANR	1170559	Identifier	NT_LIST		1170539	0					
ANR	1170560	Label	case NT_ALT :	1869:2:43870:43881	1170539	1	True				
ANR	1170561	Identifier	NT_ALT		1170539	0					
ANR	1170562	DoStatement	do		1170539	2					
ANR	1170563	CompoundStatement		7:7:78:78	1170539	0					
ANR	1170564	ExpressionStatement	r = numbered_ref_check ( NCAR ( node ) )	1871:6:43898:43932	1170539	0	True				
ANR	1170565	AssignmentExpression	r = numbered_ref_check ( NCAR ( node ) )		1170539	0		=			
ANR	1170566	Identifier	r		1170539	0					
ANR	1170567	CallExpression	numbered_ref_check ( NCAR ( node ) )		1170539	1					
ANR	1170568	Callee	numbered_ref_check		1170539	0					
ANR	1170569	Identifier	numbered_ref_check		1170539	0					
ANR	1170570	ArgumentList	NCAR ( node )		1170539	1					
ANR	1170571	Argument	NCAR ( node )		1170539	0					
ANR	1170572	CallExpression	NCAR ( node )		1170539	0					
ANR	1170573	Callee	NCAR		1170539	0					
ANR	1170574	Identifier	NCAR		1170539	0					
ANR	1170575	ArgumentList	node		1170539	1					
ANR	1170576	Argument	node		1170539	0					
ANR	1170577	Identifier	node		1170539	0					
ANR	1170578	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	1872:13:43947:43986	1170539	1	True				
ANR	1170579	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1170539	0		&&			
ANR	1170580	EqualityExpression	r == 0		1170539	0		==			
ANR	1170581	Identifier	r		1170539	0					
ANR	1170582	PrimaryExpression	0		1170539	1					
ANR	1170583	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1170539	1					
ANR	1170584	Callee	IS_NOT_NULL		1170539	0					
ANR	1170585	Identifier	IS_NOT_NULL		1170539	0					
ANR	1170586	ArgumentList	node = NCDR ( node )		1170539	1					
ANR	1170587	Argument	node = NCDR ( node )		1170539	0					
ANR	1170588	AssignmentExpression	node = NCDR ( node )		1170539	0		=			
ANR	1170589	Identifier	node		1170539	0					
ANR	1170590	CallExpression	NCDR ( node )		1170539	1					
ANR	1170591	Callee	NCDR		1170539	0					
ANR	1170592	Identifier	NCDR		1170539	0					
ANR	1170593	ArgumentList	node		1170539	1					
ANR	1170594	Argument	node		1170539	0					
ANR	1170595	Identifier	node		1170539	0					
ANR	1170596	BreakStatement	break ;	1873:4:43994:43999	1170539	3	True				
ANR	1170597	Label	case NT_QTFR :	1874:2:44003:44015	1170539	4	True				
ANR	1170598	Identifier	NT_QTFR		1170539	0					
ANR	1170599	ExpressionStatement	r = numbered_ref_check ( NQTFR ( node ) -> target )	1875:4:44021:44064	1170539	5	True				
ANR	1170600	AssignmentExpression	r = numbered_ref_check ( NQTFR ( node ) -> target )		1170539	0		=			
ANR	1170601	Identifier	r		1170539	0					
ANR	1170602	CallExpression	numbered_ref_check ( NQTFR ( node ) -> target )		1170539	1					
ANR	1170603	Callee	numbered_ref_check		1170539	0					
ANR	1170604	Identifier	numbered_ref_check		1170539	0					
ANR	1170605	ArgumentList	NQTFR ( node ) -> target		1170539	1					
ANR	1170606	Argument	NQTFR ( node ) -> target		1170539	0					
ANR	1170607	PtrMemberAccess	NQTFR ( node ) -> target		1170539	0					
ANR	1170608	CallExpression	NQTFR ( node )		1170539	0					
ANR	1170609	Callee	NQTFR		1170539	0					
ANR	1170610	Identifier	NQTFR		1170539	0					
ANR	1170611	ArgumentList	node		1170539	1					
ANR	1170612	Argument	node		1170539	0					
ANR	1170613	Identifier	node		1170539	0					
ANR	1170614	Identifier	target		1170539	1					
ANR	1170615	BreakStatement	break ;	1876:4:44070:44075	1170539	6	True				
ANR	1170616	Label	case NT_ENCLOSE :	1877:2:44079:44094	1170539	7	True				
ANR	1170617	Identifier	NT_ENCLOSE		1170539	0					
ANR	1170618	ExpressionStatement	r = numbered_ref_check ( NENCLOSE ( node ) -> target )	1878:4:44100:44146	1170539	8	True				
ANR	1170619	AssignmentExpression	r = numbered_ref_check ( NENCLOSE ( node ) -> target )		1170539	0		=			
ANR	1170620	Identifier	r		1170539	0					
ANR	1170621	CallExpression	numbered_ref_check ( NENCLOSE ( node ) -> target )		1170539	1					
ANR	1170622	Callee	numbered_ref_check		1170539	0					
ANR	1170623	Identifier	numbered_ref_check		1170539	0					
ANR	1170624	ArgumentList	NENCLOSE ( node ) -> target		1170539	1					
ANR	1170625	Argument	NENCLOSE ( node ) -> target		1170539	0					
ANR	1170626	PtrMemberAccess	NENCLOSE ( node ) -> target		1170539	0					
ANR	1170627	CallExpression	NENCLOSE ( node )		1170539	0					
ANR	1170628	Callee	NENCLOSE		1170539	0					
ANR	1170629	Identifier	NENCLOSE		1170539	0					
ANR	1170630	ArgumentList	node		1170539	1					
ANR	1170631	Argument	node		1170539	0					
ANR	1170632	Identifier	node		1170539	0					
ANR	1170633	Identifier	target		1170539	1					
ANR	1170634	BreakStatement	break ;	1879:4:44152:44157	1170539	9	True				
ANR	1170635	Label	case NT_BREF :	1881:2:44162:44174	1170539	10	True				
ANR	1170636	Identifier	NT_BREF		1170539	0					
ANR	1170637	IfStatement	if ( ! IS_BACKREF_NAME_REF ( NBREF ( node ) ) )		1170539	11					
ANR	1170638	Condition	! IS_BACKREF_NAME_REF ( NBREF ( node ) )	1882:8:44184:44217	1170539	0	True				
ANR	1170639	UnaryOperationExpression	! IS_BACKREF_NAME_REF ( NBREF ( node ) )		1170539	0					
ANR	1170640	UnaryOperator	!		1170539	0					
ANR	1170641	CallExpression	IS_BACKREF_NAME_REF ( NBREF ( node ) )		1170539	1					
ANR	1170642	Callee	IS_BACKREF_NAME_REF		1170539	0					
ANR	1170643	Identifier	IS_BACKREF_NAME_REF		1170539	0					
ANR	1170644	ArgumentList	NBREF ( node )		1170539	1					
ANR	1170645	Argument	NBREF ( node )		1170539	0					
ANR	1170646	CallExpression	NBREF ( node )		1170539	0					
ANR	1170647	Callee	NBREF		1170539	0					
ANR	1170648	Identifier	NBREF		1170539	0					
ANR	1170649	ArgumentList	node		1170539	1					
ANR	1170650	Argument	node		1170539	0					
ANR	1170651	Identifier	node		1170539	0					
ANR	1170652	ReturnStatement	return ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED ;	1883:6:44226:44277	1170539	1	True				
ANR	1170653	Identifier	ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED		1170539	0					
ANR	1170654	BreakStatement	break ;	1884:4:44283:44288	1170539	12	True				
ANR	1170655	Label	default :	1886:2:44293:44300	1170539	13	True				
ANR	1170656	Identifier	default		1170539	0					
ANR	1170657	BreakStatement	break ;	1887:4:44306:44311	1170539	14	True				
ANR	1170658	ReturnStatement	return r ;	1890:2:44320:44328	1170539	2	True				
ANR	1170659	Identifier	r		1170539	0					
ANR	1170660	ReturnType	static int		1170539	1					
ANR	1170661	Identifier	numbered_ref_check		1170539	2					
ANR	1170662	ParameterList	Node * node		1170539	3					
ANR	1170663	Parameter	Node * node	1863:19:43799:43808	1170539	0	True				
ANR	1170664	ParameterType	Node *		1170539	0					
ANR	1170665	Identifier	node		1170539	1					
ANR	1170666	CFGEntryNode	ENTRY		1170539		True				
ANR	1170667	CFGExitNode	EXIT		1170539		True				
ANR	1170668	Symbol	NQTFR ( node ) -> target		1170539						
ANR	1170669	Symbol	IS_NOT_NULL		1170539						
ANR	1170670	Symbol	NCAR		1170539						
ANR	1170671	Symbol	* NENCLOSE		1170539						
ANR	1170672	Symbol	NCDR		1170539						
ANR	1170673	Symbol	NQTFR		1170539						
ANR	1170674	Symbol	NENCLOSE ( node ) -> target		1170539						
ANR	1170675	Symbol	node		1170539						
ANR	1170676	Symbol	r		1170539						
ANR	1170677	Symbol	* NQTFR		1170539						
ANR	1170678	Symbol	NBREF		1170539						
ANR	1170679	Symbol	ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED		1170539						
ANR	1170680	Symbol	NENCLOSE		1170539						
ANR	1170681	Symbol	IS_BACKREF_NAME_REF		1170539						
ANR	1170682	Symbol	NTYPE		1170539						
ANR	1170683	Symbol	numbered_ref_check		1170539						
ANR	1170684	Function	disable_noname_group_capture	1893:0:44333:45333							
ANR	1170685	FunctionDef	"disable_noname_group_capture (Node * * root , regex_t * reg , ScanEnv * env)"		1170684	0					
ANR	1170686	CompoundStatement		1895:0:44414:45333	1170684	0					
ANR	1170687	IdentifierDeclStatement	"int r , i , pos , counter ;"	1896:2:44418:44440	1170684	0	True				
ANR	1170688	IdentifierDecl	r		1170684	0					
ANR	1170689	IdentifierDeclType	int		1170684	0					
ANR	1170690	Identifier	r		1170684	1					
ANR	1170691	IdentifierDecl	i		1170684	1					
ANR	1170692	IdentifierDeclType	int		1170684	0					
ANR	1170693	Identifier	i		1170684	1					
ANR	1170694	IdentifierDecl	pos		1170684	2					
ANR	1170695	IdentifierDeclType	int		1170684	0					
ANR	1170696	Identifier	pos		1170684	1					
ANR	1170697	IdentifierDecl	counter		1170684	3					
ANR	1170698	IdentifierDeclType	int		1170684	0					
ANR	1170699	Identifier	counter		1170684	1					
ANR	1170700	IdentifierDeclStatement	BitStatusType loc ;	1897:2:44444:44461	1170684	1	True				
ANR	1170701	IdentifierDecl	loc		1170684	0					
ANR	1170702	IdentifierDeclType	BitStatusType		1170684	0					
ANR	1170703	Identifier	loc		1170684	1					
ANR	1170704	IdentifierDeclStatement	GroupNumRemap * map ;	1898:2:44465:44483	1170684	2	True				
ANR	1170705	IdentifierDecl	* map		1170684	0					
ANR	1170706	IdentifierDeclType	GroupNumRemap *		1170684	0					
ANR	1170707	Identifier	map		1170684	1					
ANR	1170708	ExpressionStatement	map = ( GroupNumRemap * ) xalloca ( sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 ) )	1900:2:44488:44562	1170684	3	True				
ANR	1170709	AssignmentExpression	map = ( GroupNumRemap * ) xalloca ( sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 ) )		1170684	0		=			
ANR	1170710	Identifier	map		1170684	0					
ANR	1170711	CastExpression	( GroupNumRemap * ) xalloca ( sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 ) )		1170684	1					
ANR	1170712	CastTarget	GroupNumRemap *		1170684	0					
ANR	1170713	CallExpression	xalloca ( sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 ) )		1170684	1					
ANR	1170714	Callee	xalloca		1170684	0					
ANR	1170715	Identifier	xalloca		1170684	0					
ANR	1170716	ArgumentList	sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 )		1170684	1					
ANR	1170717	Argument	sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 )		1170684	0					
ANR	1170718	MultiplicativeExpression	sizeof ( GroupNumRemap ) * ( env -> num_mem + 1 )		1170684	0		*			
ANR	1170719	SizeofExpression	sizeof ( GroupNumRemap )		1170684	0					
ANR	1170720	Sizeof	sizeof		1170684	0					
ANR	1170721	SizeofOperand	GroupNumRemap		1170684	1					
ANR	1170722	AdditiveExpression	env -> num_mem + 1		1170684	1		+			
ANR	1170723	PtrMemberAccess	env -> num_mem		1170684	0					
ANR	1170724	Identifier	env		1170684	0					
ANR	1170725	Identifier	num_mem		1170684	1					
ANR	1170726	PrimaryExpression	1		1170684	1					
ANR	1170727	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( map )	1901:2:44566:44595	1170684	4	True				
ANR	1170728	CallExpression	CHECK_NULL_RETURN_MEMERR ( map )		1170684	0					
ANR	1170729	Callee	CHECK_NULL_RETURN_MEMERR		1170684	0					
ANR	1170730	Identifier	CHECK_NULL_RETURN_MEMERR		1170684	0					
ANR	1170731	ArgumentList	map		1170684	1					
ANR	1170732	Argument	map		1170684	0					
ANR	1170733	Identifier	map		1170684	0					
ANR	1170734	ForStatement	for ( i = 1 ; i <= env -> num_mem ; i ++ )		1170684	5					
ANR	1170735	ForInit	i = 1 ;	1902:7:44604:44609	1170684	0	True				
ANR	1170736	AssignmentExpression	i = 1		1170684	0		=			
ANR	1170737	Identifier	i		1170684	0					
ANR	1170738	PrimaryExpression	1		1170684	1					
ANR	1170739	Condition	i <= env -> num_mem	1902:14:44611:44627	1170684	1	True				
ANR	1170740	RelationalExpression	i <= env -> num_mem		1170684	0		<=			
ANR	1170741	Identifier	i		1170684	0					
ANR	1170742	PtrMemberAccess	env -> num_mem		1170684	1					
ANR	1170743	Identifier	env		1170684	0					
ANR	1170744	Identifier	num_mem		1170684	1					
ANR	1170745	PostIncDecOperationExpression	i ++	1902:33:44630:44632	1170684	2	True				
ANR	1170746	Identifier	i		1170684	0					
ANR	1170747	IncDec	++		1170684	1					
ANR	1170748	CompoundStatement		8:38:220:220	1170684	3					
ANR	1170749	ExpressionStatement	map [ i ] . new_val = 0	1903:4:44641:44659	1170684	0	True				
ANR	1170750	AssignmentExpression	map [ i ] . new_val = 0		1170684	0		=			
ANR	1170751	MemberAccess	map [ i ] . new_val		1170684	0					
ANR	1170752	ArrayIndexing	map [ i ]		1170684	0					
ANR	1170753	Identifier	map		1170684	0					
ANR	1170754	Identifier	i		1170684	1					
ANR	1170755	Identifier	new_val		1170684	1					
ANR	1170756	PrimaryExpression	0		1170684	1					
ANR	1170757	ExpressionStatement	counter = 0	1905:2:44667:44678	1170684	6	True				
ANR	1170758	AssignmentExpression	counter = 0		1170684	0		=			
ANR	1170759	Identifier	counter		1170684	0					
ANR	1170760	PrimaryExpression	0		1170684	1					
ANR	1170761	ExpressionStatement	"r = noname_disable_map ( root , map , & counter )"	1906:2:44682:44725	1170684	7	True				
ANR	1170762	AssignmentExpression	"r = noname_disable_map ( root , map , & counter )"		1170684	0		=			
ANR	1170763	Identifier	r		1170684	0					
ANR	1170764	CallExpression	"noname_disable_map ( root , map , & counter )"		1170684	1					
ANR	1170765	Callee	noname_disable_map		1170684	0					
ANR	1170766	Identifier	noname_disable_map		1170684	0					
ANR	1170767	ArgumentList	root		1170684	1					
ANR	1170768	Argument	root		1170684	0					
ANR	1170769	Identifier	root		1170684	0					
ANR	1170770	Argument	map		1170684	1					
ANR	1170771	Identifier	map		1170684	0					
ANR	1170772	Argument	& counter		1170684	2					
ANR	1170773	UnaryOperationExpression	& counter		1170684	0					
ANR	1170774	UnaryOperator	&		1170684	0					
ANR	1170775	Identifier	counter		1170684	1					
ANR	1170776	IfStatement	if ( r != 0 )		1170684	8					
ANR	1170777	Condition	r != 0	1907:6:44733:44738	1170684	0	True				
ANR	1170778	EqualityExpression	r != 0		1170684	0		!=			
ANR	1170779	Identifier	r		1170684	0					
ANR	1170780	PrimaryExpression	0		1170684	1					
ANR	1170781	ReturnStatement	return r ;	1907:14:44741:44749	1170684	1	True				
ANR	1170782	Identifier	r		1170684	0					
ANR	1170783	ExpressionStatement	"r = renumber_by_map ( * root , map )"	1909:2:44754:44785	1170684	9	True				
ANR	1170784	AssignmentExpression	"r = renumber_by_map ( * root , map )"		1170684	0		=			
ANR	1170785	Identifier	r		1170684	0					
ANR	1170786	CallExpression	"renumber_by_map ( * root , map )"		1170684	1					
ANR	1170787	Callee	renumber_by_map		1170684	0					
ANR	1170788	Identifier	renumber_by_map		1170684	0					
ANR	1170789	ArgumentList	* root		1170684	1					
ANR	1170790	Argument	* root		1170684	0					
ANR	1170791	UnaryOperationExpression	* root		1170684	0					
ANR	1170792	UnaryOperator	*		1170684	0					
ANR	1170793	Identifier	root		1170684	1					
ANR	1170794	Argument	map		1170684	1					
ANR	1170795	Identifier	map		1170684	0					
ANR	1170796	IfStatement	if ( r != 0 )		1170684	10					
ANR	1170797	Condition	r != 0	1910:6:44793:44798	1170684	0	True				
ANR	1170798	EqualityExpression	r != 0		1170684	0		!=			
ANR	1170799	Identifier	r		1170684	0					
ANR	1170800	PrimaryExpression	0		1170684	1					
ANR	1170801	ReturnStatement	return r ;	1910:14:44801:44809	1170684	1	True				
ANR	1170802	Identifier	r		1170684	0					
ANR	1170803	ForStatement	"for ( i = 1 , pos = 1 ; i <= env -> num_mem ; i ++ )"		1170684	11					
ANR	1170804	ForInit	"i = 1 , pos = 1 ;"	1912:7:44819:44833	1170684	0	True				
ANR	1170805	Expression	"i = 1 , pos = 1"		1170684	0					
ANR	1170806	AssignmentExpression	i = 1		1170684	0		=			
ANR	1170807	Identifier	i		1170684	0					
ANR	1170808	PrimaryExpression	1		1170684	1					
ANR	1170809	AssignmentExpression	pos = 1		1170684	1		=			
ANR	1170810	Identifier	pos		1170684	0					
ANR	1170811	PrimaryExpression	1		1170684	1					
ANR	1170812	Condition	i <= env -> num_mem	1912:23:44835:44851	1170684	1	True				
ANR	1170813	RelationalExpression	i <= env -> num_mem		1170684	0		<=			
ANR	1170814	Identifier	i		1170684	0					
ANR	1170815	PtrMemberAccess	env -> num_mem		1170684	1					
ANR	1170816	Identifier	env		1170684	0					
ANR	1170817	Identifier	num_mem		1170684	1					
ANR	1170818	PostIncDecOperationExpression	i ++	1912:42:44854:44856	1170684	2	True				
ANR	1170819	Identifier	i		1170684	0					
ANR	1170820	IncDec	++		1170684	1					
ANR	1170821	CompoundStatement		18:47:444:444	1170684	3					
ANR	1170822	IfStatement	if ( map [ i ] . new_val > 0 )		1170684	0					
ANR	1170823	Condition	map [ i ] . new_val > 0	1913:8:44869:44886	1170684	0	True				
ANR	1170824	RelationalExpression	map [ i ] . new_val > 0		1170684	0		>			
ANR	1170825	MemberAccess	map [ i ] . new_val		1170684	0					
ANR	1170826	ArrayIndexing	map [ i ]		1170684	0					
ANR	1170827	Identifier	map		1170684	0					
ANR	1170828	Identifier	i		1170684	1					
ANR	1170829	Identifier	new_val		1170684	1					
ANR	1170830	PrimaryExpression	0		1170684	1					
ANR	1170831	CompoundStatement		19:28:474:474	1170684	1					
ANR	1170832	ExpressionStatement	SCANENV_MEM_NODES ( env ) [ pos ] = SCANENV_MEM_NODES ( env ) [ i ]	1914:6:44897:44952	1170684	0	True				
ANR	1170833	AssignmentExpression	SCANENV_MEM_NODES ( env ) [ pos ] = SCANENV_MEM_NODES ( env ) [ i ]		1170684	0		=			
ANR	1170834	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ pos ]		1170684	0					
ANR	1170835	CallExpression	SCANENV_MEM_NODES ( env )		1170684	0					
ANR	1170836	Callee	SCANENV_MEM_NODES		1170684	0					
ANR	1170837	Identifier	SCANENV_MEM_NODES		1170684	0					
ANR	1170838	ArgumentList	env		1170684	1					
ANR	1170839	Argument	env		1170684	0					
ANR	1170840	Identifier	env		1170684	0					
ANR	1170841	Identifier	pos		1170684	1					
ANR	1170842	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ i ]		1170684	1					
ANR	1170843	CallExpression	SCANENV_MEM_NODES ( env )		1170684	0					
ANR	1170844	Callee	SCANENV_MEM_NODES		1170684	0					
ANR	1170845	Identifier	SCANENV_MEM_NODES		1170684	0					
ANR	1170846	ArgumentList	env		1170684	1					
ANR	1170847	Argument	env		1170684	0					
ANR	1170848	Identifier	env		1170684	0					
ANR	1170849	Identifier	i		1170684	1					
ANR	1170850	ExpressionStatement	pos ++	1915:6:44960:44965	1170684	1	True				
ANR	1170851	PostIncDecOperationExpression	pos ++		1170684	0					
ANR	1170852	Identifier	pos		1170684	0					
ANR	1170853	IncDec	++		1170684	1					
ANR	1170854	ExpressionStatement	loc = env -> capture_history	1919:2:44980:45006	1170684	12	True				
ANR	1170855	AssignmentExpression	loc = env -> capture_history		1170684	0		=			
ANR	1170856	Identifier	loc		1170684	0					
ANR	1170857	PtrMemberAccess	env -> capture_history		1170684	1					
ANR	1170858	Identifier	env		1170684	0					
ANR	1170859	Identifier	capture_history		1170684	1					
ANR	1170860	ExpressionStatement	BIT_STATUS_CLEAR ( env -> capture_history )	1920:2:45010:45048	1170684	13	True				
ANR	1170861	CallExpression	BIT_STATUS_CLEAR ( env -> capture_history )		1170684	0					
ANR	1170862	Callee	BIT_STATUS_CLEAR		1170684	0					
ANR	1170863	Identifier	BIT_STATUS_CLEAR		1170684	0					
ANR	1170864	ArgumentList	env -> capture_history		1170684	1					
ANR	1170865	Argument	env -> capture_history		1170684	0					
ANR	1170866	PtrMemberAccess	env -> capture_history		1170684	0					
ANR	1170867	Identifier	env		1170684	0					
ANR	1170868	Identifier	capture_history		1170684	1					
ANR	1170869	ForStatement	for ( i = 1 ; i <= ONIG_MAX_CAPTURE_HISTORY_GROUP ; i ++ )		1170684	14					
ANR	1170870	ForInit	i = 1 ;	1921:7:45057:45062	1170684	0	True				
ANR	1170871	AssignmentExpression	i = 1		1170684	0		=			
ANR	1170872	Identifier	i		1170684	0					
ANR	1170873	PrimaryExpression	1		1170684	1					
ANR	1170874	Condition	i <= ONIG_MAX_CAPTURE_HISTORY_GROUP	1921:14:45064:45098	1170684	1	True				
ANR	1170875	RelationalExpression	i <= ONIG_MAX_CAPTURE_HISTORY_GROUP		1170684	0		<=			
ANR	1170876	Identifier	i		1170684	0					
ANR	1170877	Identifier	ONIG_MAX_CAPTURE_HISTORY_GROUP		1170684	1					
ANR	1170878	PostIncDecOperationExpression	i ++	1921:51:45101:45103	1170684	2	True				
ANR	1170879	Identifier	i		1170684	0					
ANR	1170880	IncDec	++		1170684	1					
ANR	1170881	CompoundStatement		27:56:691:691	1170684	3					
ANR	1170882	IfStatement	"if ( BIT_STATUS_AT ( loc , i ) )"		1170684	0					
ANR	1170883	Condition	"BIT_STATUS_AT ( loc , i )"	1922:8:45116:45136	1170684	0	True				
ANR	1170884	CallExpression	"BIT_STATUS_AT ( loc , i )"		1170684	0					
ANR	1170885	Callee	BIT_STATUS_AT		1170684	0					
ANR	1170886	Identifier	BIT_STATUS_AT		1170684	0					
ANR	1170887	ArgumentList	loc		1170684	1					
ANR	1170888	Argument	loc		1170684	0					
ANR	1170889	Identifier	loc		1170684	0					
ANR	1170890	Argument	i		1170684	1					
ANR	1170891	Identifier	i		1170684	0					
ANR	1170892	CompoundStatement		28:31:724:724	1170684	1					
ANR	1170893	ExpressionStatement	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , map [ i ] . new_val )"	1923:6:45147:45208	1170684	0	True				
ANR	1170894	CallExpression	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , map [ i ] . new_val )"		1170684	0					
ANR	1170895	Callee	BIT_STATUS_ON_AT_SIMPLE		1170684	0					
ANR	1170896	Identifier	BIT_STATUS_ON_AT_SIMPLE		1170684	0					
ANR	1170897	ArgumentList	env -> capture_history		1170684	1					
ANR	1170898	Argument	env -> capture_history		1170684	0					
ANR	1170899	PtrMemberAccess	env -> capture_history		1170684	0					
ANR	1170900	Identifier	env		1170684	0					
ANR	1170901	Identifier	capture_history		1170684	1					
ANR	1170902	Argument	map [ i ] . new_val		1170684	1					
ANR	1170903	MemberAccess	map [ i ] . new_val		1170684	0					
ANR	1170904	ArrayIndexing	map [ i ]		1170684	0					
ANR	1170905	Identifier	map		1170684	0					
ANR	1170906	Identifier	i		1170684	1					
ANR	1170907	Identifier	new_val		1170684	1					
ANR	1170908	ExpressionStatement	env -> num_mem = env -> num_named	1927:2:45223:45252	1170684	15	True				
ANR	1170909	AssignmentExpression	env -> num_mem = env -> num_named		1170684	0		=			
ANR	1170910	PtrMemberAccess	env -> num_mem		1170684	0					
ANR	1170911	Identifier	env		1170684	0					
ANR	1170912	Identifier	num_mem		1170684	1					
ANR	1170913	PtrMemberAccess	env -> num_named		1170684	1					
ANR	1170914	Identifier	env		1170684	0					
ANR	1170915	Identifier	num_named		1170684	1					
ANR	1170916	ExpressionStatement	reg -> num_mem = env -> num_named	1928:2:45256:45285	1170684	16	True				
ANR	1170917	AssignmentExpression	reg -> num_mem = env -> num_named		1170684	0		=			
ANR	1170918	PtrMemberAccess	reg -> num_mem		1170684	0					
ANR	1170919	Identifier	reg		1170684	0					
ANR	1170920	Identifier	num_mem		1170684	1					
ANR	1170921	PtrMemberAccess	env -> num_named		1170684	1					
ANR	1170922	Identifier	env		1170684	0					
ANR	1170923	Identifier	num_named		1170684	1					
ANR	1170924	ReturnStatement	"return onig_renumber_name_table ( reg , map ) ;"	1930:2:45290:45331	1170684	17	True				
ANR	1170925	CallExpression	"onig_renumber_name_table ( reg , map )"		1170684	0					
ANR	1170926	Callee	onig_renumber_name_table		1170684	0					
ANR	1170927	Identifier	onig_renumber_name_table		1170684	0					
ANR	1170928	ArgumentList	reg		1170684	1					
ANR	1170929	Argument	reg		1170684	0					
ANR	1170930	Identifier	reg		1170684	0					
ANR	1170931	Argument	map		1170684	1					
ANR	1170932	Identifier	map		1170684	0					
ANR	1170933	ReturnType	static int		1170684	1					
ANR	1170934	Identifier	disable_noname_group_capture		1170684	2					
ANR	1170935	ParameterList	"Node * * root , regex_t * reg , ScanEnv * env"		1170684	3					
ANR	1170936	Parameter	Node * * root	1894:29:44373:44383	1170684	0	True				
ANR	1170937	ParameterType	Node * *		1170684	0					
ANR	1170938	Identifier	root		1170684	1					
ANR	1170939	Parameter	regex_t * reg	1894:42:44386:44397	1170684	1	True				
ANR	1170940	ParameterType	regex_t *		1170684	0					
ANR	1170941	Identifier	reg		1170684	1					
ANR	1170942	Parameter	ScanEnv * env	1894:56:44400:44411	1170684	2	True				
ANR	1170943	ParameterType	ScanEnv *		1170684	0					
ANR	1170944	Identifier	env		1170684	1					
ANR	1170945	CFGEntryNode	ENTRY		1170684		True				
ANR	1170946	CFGExitNode	EXIT		1170684		True				
ANR	1170947	Symbol	loc		1170684						
ANR	1170948	Symbol	* map		1170684						
ANR	1170949	Symbol	ONIG_MAX_CAPTURE_HISTORY_GROUP		1170684						
ANR	1170950	Symbol	env -> num_named		1170684						
ANR	1170951	Symbol	* SCANENV_MEM_NODES		1170684						
ANR	1170952	Symbol	xalloca		1170684						
ANR	1170953	Symbol	reg		1170684						
ANR	1170954	Symbol	pos		1170684						
ANR	1170955	Symbol	root		1170684						
ANR	1170956	Symbol	onig_renumber_name_table		1170684						
ANR	1170957	Symbol	SCANENV_MEM_NODES		1170684						
ANR	1170958	Symbol	env -> capture_history		1170684						
ANR	1170959	Symbol	map		1170684						
ANR	1170960	Symbol	reg -> num_mem		1170684						
ANR	1170961	Symbol	renumber_by_map		1170684						
ANR	1170962	Symbol	BIT_STATUS_AT		1170684						
ANR	1170963	Symbol	& counter		1170684						
ANR	1170964	Symbol	* env		1170684						
ANR	1170965	Symbol	env -> num_mem		1170684						
ANR	1170966	Symbol	i		1170684						
ANR	1170967	Symbol	counter		1170684						
ANR	1170968	Symbol	env		1170684						
ANR	1170969	Symbol	noname_disable_map		1170684						
ANR	1170970	Symbol	r		1170684						
ANR	1170971	Symbol	* i		1170684						
ANR	1170972	Symbol	map [ i ] . new_val		1170684						
ANR	1170973	Symbol	* root		1170684						
ANR	1170974	Symbol	* pos		1170684						
ANR	1170975	Symbol	* reg		1170684						
ANR	1170976	Function	unset_addr_list_fix	1935:0:45388:45786							
ANR	1170977	FunctionDef	"unset_addr_list_fix (UnsetAddrList * uslist , regex_t * reg)"		1170976	0					
ANR	1170978	CompoundStatement		1937:0:45456:45786	1170976	0					
ANR	1170979	IdentifierDeclStatement	"int i , offset ;"	1938:2:45460:45473	1170976	0	True				
ANR	1170980	IdentifierDecl	i		1170976	0					
ANR	1170981	IdentifierDeclType	int		1170976	0					
ANR	1170982	Identifier	i		1170976	1					
ANR	1170983	IdentifierDecl	offset		1170976	1					
ANR	1170984	IdentifierDeclType	int		1170976	0					
ANR	1170985	Identifier	offset		1170976	1					
ANR	1170986	IdentifierDeclStatement	EncloseNode * en ;	1939:2:45477:45492	1170976	1	True				
ANR	1170987	IdentifierDecl	* en		1170976	0					
ANR	1170988	IdentifierDeclType	EncloseNode *		1170976	0					
ANR	1170989	Identifier	en		1170976	1					
ANR	1170990	IdentifierDeclStatement	AbsAddrType addr ;	1940:2:45496:45512	1170976	2	True				
ANR	1170991	IdentifierDecl	addr		1170976	0					
ANR	1170992	IdentifierDeclType	AbsAddrType		1170976	0					
ANR	1170993	Identifier	addr		1170976	1					
ANR	1170994	ForStatement	for ( i = 0 ; i < uslist -> num ; i ++ )		1170976	3					
ANR	1170995	ForInit	i = 0 ;	1942:7:45522:45527	1170976	0	True				
ANR	1170996	AssignmentExpression	i = 0		1170976	0		=			
ANR	1170997	Identifier	i		1170976	0					
ANR	1170998	PrimaryExpression	0		1170976	1					
ANR	1170999	Condition	i < uslist -> num	1942:14:45529:45543	1170976	1	True				
ANR	1171000	RelationalExpression	i < uslist -> num		1170976	0		<			
ANR	1171001	Identifier	i		1170976	0					
ANR	1171002	PtrMemberAccess	uslist -> num		1170976	1					
ANR	1171003	Identifier	uslist		1170976	0					
ANR	1171004	Identifier	num		1170976	1					
ANR	1171005	PostIncDecOperationExpression	i ++	1942:31:45546:45548	1170976	2	True				
ANR	1171006	Identifier	i		1170976	0					
ANR	1171007	IncDec	++		1170976	1					
ANR	1171008	CompoundStatement		6:36:94:94	1170976	3					
ANR	1171009	ExpressionStatement	en = NENCLOSE ( uslist -> us [ i ] . target )	1943:4:45557:45592	1170976	0	True				
ANR	1171010	AssignmentExpression	en = NENCLOSE ( uslist -> us [ i ] . target )		1170976	0		=			
ANR	1171011	Identifier	en		1170976	0					
ANR	1171012	CallExpression	NENCLOSE ( uslist -> us [ i ] . target )		1170976	1					
ANR	1171013	Callee	NENCLOSE		1170976	0					
ANR	1171014	Identifier	NENCLOSE		1170976	0					
ANR	1171015	ArgumentList	uslist -> us [ i ] . target		1170976	1					
ANR	1171016	Argument	uslist -> us [ i ] . target		1170976	0					
ANR	1171017	MemberAccess	uslist -> us [ i ] . target		1170976	0					
ANR	1171018	ArrayIndexing	uslist -> us [ i ]		1170976	0					
ANR	1171019	PtrMemberAccess	uslist -> us		1170976	0					
ANR	1171020	Identifier	uslist		1170976	0					
ANR	1171021	Identifier	us		1170976	1					
ANR	1171022	Identifier	i		1170976	1					
ANR	1171023	Identifier	target		1170976	1					
ANR	1171024	IfStatement	if ( ! IS_ENCLOSE_ADDR_FIXED ( en ) )		1170976	1					
ANR	1171025	Condition	! IS_ENCLOSE_ADDR_FIXED ( en )	1944:8:45602:45628	1170976	0	True				
ANR	1171026	UnaryOperationExpression	! IS_ENCLOSE_ADDR_FIXED ( en )		1170976	0					
ANR	1171027	UnaryOperator	!		1170976	0					
ANR	1171028	CallExpression	IS_ENCLOSE_ADDR_FIXED ( en )		1170976	1					
ANR	1171029	Callee	IS_ENCLOSE_ADDR_FIXED		1170976	0					
ANR	1171030	Identifier	IS_ENCLOSE_ADDR_FIXED		1170976	0					
ANR	1171031	ArgumentList	en		1170976	1					
ANR	1171032	Argument	en		1170976	0					
ANR	1171033	Identifier	en		1170976	0					
ANR	1171034	ReturnStatement	return ONIGERR_PARSER_BUG ;	1944:37:45631:45656	1170976	1	True				
ANR	1171035	Identifier	ONIGERR_PARSER_BUG		1170976	0					
ANR	1171036	ExpressionStatement	addr = en -> call_addr	1945:4:45662:45682	1170976	2	True				
ANR	1171037	AssignmentExpression	addr = en -> call_addr		1170976	0		=			
ANR	1171038	Identifier	addr		1170976	0					
ANR	1171039	PtrMemberAccess	en -> call_addr		1170976	1					
ANR	1171040	Identifier	en		1170976	0					
ANR	1171041	Identifier	call_addr		1170976	1					
ANR	1171042	ExpressionStatement	offset = uslist -> us [ i ] . offset	1946:4:45688:45717	1170976	3	True				
ANR	1171043	AssignmentExpression	offset = uslist -> us [ i ] . offset		1170976	0		=			
ANR	1171044	Identifier	offset		1170976	0					
ANR	1171045	MemberAccess	uslist -> us [ i ] . offset		1170976	1					
ANR	1171046	ArrayIndexing	uslist -> us [ i ]		1170976	0					
ANR	1171047	PtrMemberAccess	uslist -> us		1170976	0					
ANR	1171048	Identifier	uslist		1170976	0					
ANR	1171049	Identifier	us		1170976	1					
ANR	1171050	Identifier	i		1170976	1					
ANR	1171051	Identifier	offset		1170976	1					
ANR	1171052	ExpressionStatement	"BBUF_WRITE ( reg , offset , & addr , SIZE_ABSADDR )"	1948:4:45724:45768	1170976	4	True				
ANR	1171053	CallExpression	"BBUF_WRITE ( reg , offset , & addr , SIZE_ABSADDR )"		1170976	0					
ANR	1171054	Callee	BBUF_WRITE		1170976	0					
ANR	1171055	Identifier	BBUF_WRITE		1170976	0					
ANR	1171056	ArgumentList	reg		1170976	1					
ANR	1171057	Argument	reg		1170976	0					
ANR	1171058	Identifier	reg		1170976	0					
ANR	1171059	Argument	offset		1170976	1					
ANR	1171060	Identifier	offset		1170976	0					
ANR	1171061	Argument	& addr		1170976	2					
ANR	1171062	UnaryOperationExpression	& addr		1170976	0					
ANR	1171063	UnaryOperator	&		1170976	0					
ANR	1171064	Identifier	addr		1170976	1					
ANR	1171065	Argument	SIZE_ABSADDR		1170976	3					
ANR	1171066	Identifier	SIZE_ABSADDR		1170976	0					
ANR	1171067	ReturnStatement	return 0 ;	1950:2:45776:45784	1170976	4	True				
ANR	1171068	PrimaryExpression	0		1170976	0					
ANR	1171069	ReturnType	static int		1170976	1					
ANR	1171070	Identifier	unset_addr_list_fix		1170976	2					
ANR	1171071	ParameterList	"UnsetAddrList * uslist , regex_t * reg"		1170976	3					
ANR	1171072	Parameter	UnsetAddrList * uslist	1936:20:45419:45439	1170976	0	True				
ANR	1171073	ParameterType	UnsetAddrList *		1170976	0					
ANR	1171074	Identifier	uslist		1170976	1					
ANR	1171075	Parameter	regex_t * reg	1936:43:45442:45453	1170976	1	True				
ANR	1171076	ParameterType	regex_t *		1170976	0					
ANR	1171077	Identifier	reg		1170976	1					
ANR	1171078	CFGEntryNode	ENTRY		1170976		True				
ANR	1171079	CFGExitNode	EXIT		1170976		True				
ANR	1171080	Symbol	uslist -> num		1170976						
ANR	1171081	Symbol	uslist -> us [ i ] . target		1170976						
ANR	1171082	Symbol	& addr		1170976						
ANR	1171083	Symbol	offset		1170976						
ANR	1171084	Symbol	i		1170976						
ANR	1171085	Symbol	en		1170976						
ANR	1171086	Symbol	* * uslist		1170976						
ANR	1171087	Symbol	* en		1170976						
ANR	1171088	Symbol	SIZE_ABSADDR		1170976						
ANR	1171089	Symbol	ONIGERR_PARSER_BUG		1170976						
ANR	1171090	Symbol	uslist -> us		1170976						
ANR	1171091	Symbol	uslist -> us [ i ] . offset		1170976						
ANR	1171092	Symbol	uslist		1170976						
ANR	1171093	Symbol	* i		1170976						
ANR	1171094	Symbol	reg		1170976						
ANR	1171095	Symbol	* uslist		1170976						
ANR	1171096	Symbol	NENCLOSE		1170976						
ANR	1171097	Symbol	* uslist -> us		1170976						
ANR	1171098	Symbol	IS_ENCLOSE_ADDR_FIXED		1170976						
ANR	1171099	Symbol	addr		1170976						
ANR	1171100	Symbol	en -> call_addr		1170976						
ANR	1171101	Function	quantifiers_memory_node_info	1955:0:45851:47000							
ANR	1171102	FunctionDef	quantifiers_memory_node_info (Node * node)		1171101	0					
ANR	1171103	CompoundStatement		1957:0:45903:47000	1171101	0					
ANR	1171104	IdentifierDeclStatement	int r = 0 ;	1958:2:45907:45916	1171101	0	True				
ANR	1171105	IdentifierDecl	r = 0		1171101	0					
ANR	1171106	IdentifierDeclType	int		1171101	0					
ANR	1171107	Identifier	r		1171101	1					
ANR	1171108	AssignmentExpression	r = 0		1171101	2		=			
ANR	1171109	Identifier	r		1171101	0					
ANR	1171110	PrimaryExpression	0		1171101	1					
ANR	1171111	SwitchStatement	switch ( NTYPE ( node ) )		1171101	1					
ANR	1171112	Condition	NTYPE ( node )	1960:10:45929:45939	1171101	0	True				
ANR	1171113	CallExpression	NTYPE ( node )		1171101	0					
ANR	1171114	Callee	NTYPE		1171101	0					
ANR	1171115	Identifier	NTYPE		1171101	0					
ANR	1171116	ArgumentList	node		1171101	1					
ANR	1171117	Argument	node		1171101	0					
ANR	1171118	Identifier	node		1171101	0					
ANR	1171119	CompoundStatement		4:23:38:38	1171101	1					
ANR	1171120	Label	case NT_LIST :	1961:2:45946:45958	1171101	0	True				
ANR	1171121	Identifier	NT_LIST		1171101	0					
ANR	1171122	Label	case NT_ALT :	1962:2:45962:45973	1171101	1	True				
ANR	1171123	Identifier	NT_ALT		1171101	0					
ANR	1171124	CompoundStatement		8:6:83:88	1171101	2					
ANR	1171125	IdentifierDeclStatement	int v ;	1964:6:45987:45992	1171101	0	True				
ANR	1171126	IdentifierDecl	v		1171101	0					
ANR	1171127	IdentifierDeclType	int		1171101	0					
ANR	1171128	Identifier	v		1171101	1					
ANR	1171129	DoStatement	do		1171101	1					
ANR	1171130	CompoundStatement		9:9:99:99	1171101	0					
ANR	1171131	ExpressionStatement	v = quantifiers_memory_node_info ( NCAR ( node ) )	1966:1:46006:46050	1171101	0	True				
ANR	1171132	AssignmentExpression	v = quantifiers_memory_node_info ( NCAR ( node ) )		1171101	0		=			
ANR	1171133	Identifier	v		1171101	0					
ANR	1171134	CallExpression	quantifiers_memory_node_info ( NCAR ( node ) )		1171101	1					
ANR	1171135	Callee	quantifiers_memory_node_info		1171101	0					
ANR	1171136	Identifier	quantifiers_memory_node_info		1171101	0					
ANR	1171137	ArgumentList	NCAR ( node )		1171101	1					
ANR	1171138	Argument	NCAR ( node )		1171101	0					
ANR	1171139	CallExpression	NCAR ( node )		1171101	0					
ANR	1171140	Callee	NCAR		1171101	0					
ANR	1171141	Identifier	NCAR		1171101	0					
ANR	1171142	ArgumentList	node		1171101	1					
ANR	1171143	Argument	node		1171101	0					
ANR	1171144	Identifier	node		1171101	0					
ANR	1171145	IfStatement	if ( v > r )		1171101	1					
ANR	1171146	Condition	v > r	1967:5:46057:46061	1171101	0	True				
ANR	1171147	RelationalExpression	v > r		1171101	0		>			
ANR	1171148	Identifier	v		1171101	0					
ANR	1171149	Identifier	r		1171101	1					
ANR	1171150	ExpressionStatement	r = v	1967:12:46064:46069	1171101	1	True				
ANR	1171151	AssignmentExpression	r = v		1171101	0		=			
ANR	1171152	Identifier	r		1171101	0					
ANR	1171153	Identifier	v		1171101	1					
ANR	1171154	Condition	v >= 0 && IS_NOT_NULL ( node = NCDR ( node ) )	1968:15:46086:46125	1171101	1	True				
ANR	1171155	AndExpression	v >= 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1171101	0		&&			
ANR	1171156	RelationalExpression	v >= 0		1171101	0		>=			
ANR	1171157	Identifier	v		1171101	0					
ANR	1171158	PrimaryExpression	0		1171101	1					
ANR	1171159	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1171101	1					
ANR	1171160	Callee	IS_NOT_NULL		1171101	0					
ANR	1171161	Identifier	IS_NOT_NULL		1171101	0					
ANR	1171162	ArgumentList	node = NCDR ( node )		1171101	1					
ANR	1171163	Argument	node = NCDR ( node )		1171101	0					
ANR	1171164	AssignmentExpression	node = NCDR ( node )		1171101	0		=			
ANR	1171165	Identifier	node		1171101	0					
ANR	1171166	CallExpression	NCDR ( node )		1171101	1					
ANR	1171167	Callee	NCDR		1171101	0					
ANR	1171168	Identifier	NCDR		1171101	0					
ANR	1171169	ArgumentList	node		1171101	1					
ANR	1171170	Argument	node		1171101	0					
ANR	1171171	Identifier	node		1171101	0					
ANR	1171172	BreakStatement	break ;	1970:4:46139:46144	1171101	3	True				
ANR	1171173	Label	case NT_CALL :	1973:2:46172:46184	1171101	4	True				
ANR	1171174	Identifier	NT_CALL		1171101	0					
ANR	1171175	IfStatement	if ( IS_CALL_RECURSION ( NCALL ( node ) ) )		1171101	5					
ANR	1171176	Condition	IS_CALL_RECURSION ( NCALL ( node ) )	1974:8:46194:46223	1171101	0	True				
ANR	1171177	CallExpression	IS_CALL_RECURSION ( NCALL ( node ) )		1171101	0					
ANR	1171178	Callee	IS_CALL_RECURSION		1171101	0					
ANR	1171179	Identifier	IS_CALL_RECURSION		1171101	0					
ANR	1171180	ArgumentList	NCALL ( node )		1171101	1					
ANR	1171181	Argument	NCALL ( node )		1171101	0					
ANR	1171182	CallExpression	NCALL ( node )		1171101	0					
ANR	1171183	Callee	NCALL		1171101	0					
ANR	1171184	Identifier	NCALL		1171101	0					
ANR	1171185	ArgumentList	node		1171101	1					
ANR	1171186	Argument	node		1171101	0					
ANR	1171187	Identifier	node		1171101	0					
ANR	1171188	CompoundStatement		18:40:322:322	1171101	1					
ANR	1171189	ReturnStatement	return NQ_TARGET_IS_EMPTY_REC ;	1975:6:46234:46263	1171101	0	True				
ANR	1171190	Identifier	NQ_TARGET_IS_EMPTY_REC		1171101	0					
ANR	1171191	ElseStatement	else		1171101	0					
ANR	1171192	ExpressionStatement	r = quantifiers_memory_node_info ( NCALL ( node ) -> target )	1978:6:46305:46358	1171101	0	True				
ANR	1171193	AssignmentExpression	r = quantifiers_memory_node_info ( NCALL ( node ) -> target )		1171101	0		=			
ANR	1171194	Identifier	r		1171101	0					
ANR	1171195	CallExpression	quantifiers_memory_node_info ( NCALL ( node ) -> target )		1171101	1					
ANR	1171196	Callee	quantifiers_memory_node_info		1171101	0					
ANR	1171197	Identifier	quantifiers_memory_node_info		1171101	0					
ANR	1171198	ArgumentList	NCALL ( node ) -> target		1171101	1					
ANR	1171199	Argument	NCALL ( node ) -> target		1171101	0					
ANR	1171200	PtrMemberAccess	NCALL ( node ) -> target		1171101	0					
ANR	1171201	CallExpression	NCALL ( node )		1171101	0					
ANR	1171202	Callee	NCALL		1171101	0					
ANR	1171203	Identifier	NCALL		1171101	0					
ANR	1171204	ArgumentList	node		1171101	1					
ANR	1171205	Argument	node		1171101	0					
ANR	1171206	Identifier	node		1171101	0					
ANR	1171207	Identifier	target		1171101	1					
ANR	1171208	BreakStatement	break ;	1979:4:46364:46369	1171101	6	True				
ANR	1171209	Label	case NT_QTFR :	1982:2:46381:46393	1171101	7	True				
ANR	1171210	Identifier	NT_QTFR		1171101	0					
ANR	1171211	CompoundStatement		28:6:503:529	1171101	8					
ANR	1171212	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	1984:6:46407:46433	1171101	0	True				
ANR	1171213	IdentifierDecl	* qn = NQTFR ( node )		1171101	0					
ANR	1171214	IdentifierDeclType	QtfrNode *		1171101	0					
ANR	1171215	Identifier	qn		1171101	1					
ANR	1171216	AssignmentExpression	* qn = NQTFR ( node )		1171101	2		=			
ANR	1171217	Identifier	qn		1171101	0					
ANR	1171218	CallExpression	NQTFR ( node )		1171101	1					
ANR	1171219	Callee	NQTFR		1171101	0					
ANR	1171220	Identifier	NQTFR		1171101	0					
ANR	1171221	ArgumentList	node		1171101	1					
ANR	1171222	Argument	node		1171101	0					
ANR	1171223	Identifier	node		1171101	0					
ANR	1171224	IfStatement	if ( qn -> upper != 0 )		1171101	1					
ANR	1171225	Condition	qn -> upper != 0	1985:10:46445:46458	1171101	0	True				
ANR	1171226	EqualityExpression	qn -> upper != 0		1171101	0		!=			
ANR	1171227	PtrMemberAccess	qn -> upper		1171101	0					
ANR	1171228	Identifier	qn		1171101	0					
ANR	1171229	Identifier	upper		1171101	1					
ANR	1171230	PrimaryExpression	0		1171101	1					
ANR	1171231	CompoundStatement		29:26:557:557	1171101	1					
ANR	1171232	ExpressionStatement	r = quantifiers_memory_node_info ( qn -> target )	1986:1:46464:46508	1171101	0	True				
ANR	1171233	AssignmentExpression	r = quantifiers_memory_node_info ( qn -> target )		1171101	0		=			
ANR	1171234	Identifier	r		1171101	0					
ANR	1171235	CallExpression	quantifiers_memory_node_info ( qn -> target )		1171101	1					
ANR	1171236	Callee	quantifiers_memory_node_info		1171101	0					
ANR	1171237	Identifier	quantifiers_memory_node_info		1171101	0					
ANR	1171238	ArgumentList	qn -> target		1171101	1					
ANR	1171239	Argument	qn -> target		1171101	0					
ANR	1171240	PtrMemberAccess	qn -> target		1171101	0					
ANR	1171241	Identifier	qn		1171101	0					
ANR	1171242	Identifier	target		1171101	1					
ANR	1171243	BreakStatement	break ;	1989:4:46528:46533	1171101	9	True				
ANR	1171244	Label	case NT_ENCLOSE :	1991:2:46538:46553	1171101	10	True				
ANR	1171245	Identifier	NT_ENCLOSE		1171101	0					
ANR	1171246	CompoundStatement		37:6:663:695	1171101	11					
ANR	1171247	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	1993:6:46567:46599	1171101	0	True				
ANR	1171248	IdentifierDecl	* en = NENCLOSE ( node )		1171101	0					
ANR	1171249	IdentifierDeclType	EncloseNode *		1171101	0					
ANR	1171250	Identifier	en		1171101	1					
ANR	1171251	AssignmentExpression	* en = NENCLOSE ( node )		1171101	2		=			
ANR	1171252	Identifier	en		1171101	0					
ANR	1171253	CallExpression	NENCLOSE ( node )		1171101	1					
ANR	1171254	Callee	NENCLOSE		1171101	0					
ANR	1171255	Identifier	NENCLOSE		1171101	0					
ANR	1171256	ArgumentList	node		1171101	1					
ANR	1171257	Argument	node		1171101	0					
ANR	1171258	Identifier	node		1171101	0					
ANR	1171259	SwitchStatement	switch ( en -> type )		1171101	1					
ANR	1171260	Condition	en -> type	1994:14:46615:46622	1171101	0	True				
ANR	1171261	PtrMemberAccess	en -> type		1171101	0					
ANR	1171262	Identifier	en		1171101	0					
ANR	1171263	Identifier	type		1171101	1					
ANR	1171264	CompoundStatement		38:24:721:721	1171101	1					
ANR	1171265	Label	case ENCLOSE_MEMORY :	1995:6:46633:46652	1171101	0	True				
ANR	1171266	Identifier	ENCLOSE_MEMORY		1171101	0					
ANR	1171267	ReturnStatement	return NQ_TARGET_IS_EMPTY_MEM ;	1996:1:46655:46684	1171101	1	True				
ANR	1171268	Identifier	NQ_TARGET_IS_EMPTY_MEM		1171101	0					
ANR	1171269	BreakStatement	break ;	1997:1:46687:46692	1171101	2	True				
ANR	1171270	Label	case ENCLOSE_OPTION :	1999:6:46701:46720	1171101	3	True				
ANR	1171271	Identifier	ENCLOSE_OPTION		1171101	0					
ANR	1171272	Label	case ENCLOSE_STOP_BACKTRACK :	2000:6:46728:46755	1171101	4	True				
ANR	1171273	Identifier	ENCLOSE_STOP_BACKTRACK		1171101	0					
ANR	1171274	ExpressionStatement	r = quantifiers_memory_node_info ( en -> target )	2001:1:46758:46802	1171101	5	True				
ANR	1171275	AssignmentExpression	r = quantifiers_memory_node_info ( en -> target )		1171101	0		=			
ANR	1171276	Identifier	r		1171101	0					
ANR	1171277	CallExpression	quantifiers_memory_node_info ( en -> target )		1171101	1					
ANR	1171278	Callee	quantifiers_memory_node_info		1171101	0					
ANR	1171279	Identifier	quantifiers_memory_node_info		1171101	0					
ANR	1171280	ArgumentList	en -> target		1171101	1					
ANR	1171281	Argument	en -> target		1171101	0					
ANR	1171282	PtrMemberAccess	en -> target		1171101	0					
ANR	1171283	Identifier	en		1171101	0					
ANR	1171284	Identifier	target		1171101	1					
ANR	1171285	BreakStatement	break ;	2002:1:46805:46810	1171101	6	True				
ANR	1171286	Label	default :	2003:6:46818:46825	1171101	7	True				
ANR	1171287	Identifier	default		1171101	0					
ANR	1171288	BreakStatement	break ;	2004:1:46828:46833	1171101	8	True				
ANR	1171289	BreakStatement	break ;	2007:4:46853:46858	1171101	12	True				
ANR	1171290	Label	case NT_BREF :	2009:2:46863:46875	1171101	13	True				
ANR	1171291	Identifier	NT_BREF		1171101	0					
ANR	1171292	Label	case NT_STR :	2010:2:46879:46890	1171101	14	True				
ANR	1171293	Identifier	NT_STR		1171101	0					
ANR	1171294	Label	case NT_CTYPE :	2011:2:46894:46907	1171101	15	True				
ANR	1171295	Identifier	NT_CTYPE		1171101	0					
ANR	1171296	Label	case NT_CCLASS :	2012:2:46911:46925	1171101	16	True				
ANR	1171297	Identifier	NT_CCLASS		1171101	0					
ANR	1171298	Label	case NT_CANY :	2013:2:46929:46941	1171101	17	True				
ANR	1171299	Identifier	NT_CANY		1171101	0					
ANR	1171300	Label	case NT_ANCHOR :	2014:2:46945:46959	1171101	18	True				
ANR	1171301	Identifier	NT_ANCHOR		1171101	0					
ANR	1171302	Label	default :	2015:2:46963:46970	1171101	19	True				
ANR	1171303	Identifier	default		1171101	0					
ANR	1171304	BreakStatement	break ;	2016:4:46976:46981	1171101	20	True				
ANR	1171305	ReturnStatement	return r ;	2019:2:46990:46998	1171101	2	True				
ANR	1171306	Identifier	r		1171101	0					
ANR	1171307	ReturnType	static int		1171101	1					
ANR	1171308	Identifier	quantifiers_memory_node_info		1171101	2					
ANR	1171309	ParameterList	Node * node		1171101	3					
ANR	1171310	Parameter	Node * node	1956:29:45891:45900	1171101	0	True				
ANR	1171311	ParameterType	Node *		1171101	0					
ANR	1171312	Identifier	node		1171101	1					
ANR	1171313	CFGEntryNode	ENTRY		1171101		True				
ANR	1171314	CFGExitNode	EXIT		1171101		True				
ANR	1171315	Symbol	* qn		1171101						
ANR	1171316	Symbol	IS_NOT_NULL		1171101						
ANR	1171317	Symbol	NCAR		1171101						
ANR	1171318	Symbol	NQ_TARGET_IS_EMPTY_MEM		1171101						
ANR	1171319	Symbol	NCALL		1171101						
ANR	1171320	Symbol	NCDR		1171101						
ANR	1171321	Symbol	quantifiers_memory_node_info		1171101						
ANR	1171322	Symbol	en		1171101						
ANR	1171323	Symbol	NQTFR		1171101						
ANR	1171324	Symbol	* en		1171101						
ANR	1171325	Symbol	qn -> target		1171101						
ANR	1171326	Symbol	node		1171101						
ANR	1171327	Symbol	qn -> upper		1171101						
ANR	1171328	Symbol	r		1171101						
ANR	1171329	Symbol	v		1171101						
ANR	1171330	Symbol	NENCLOSE		1171101						
ANR	1171331	Symbol	en -> target		1171101						
ANR	1171332	Symbol	en -> type		1171101						
ANR	1171333	Symbol	NCALL ( node ) -> target		1171101						
ANR	1171334	Symbol	IS_CALL_RECURSION		1171101						
ANR	1171335	Symbol	NTYPE		1171101						
ANR	1171336	Symbol	* NCALL		1171101						
ANR	1171337	Symbol	qn		1171101						
ANR	1171338	Symbol	NQ_TARGET_IS_EMPTY_REC		1171101						
ANR	1171339	Function	get_min_match_length	2023:0:47064:49551							
ANR	1171340	FunctionDef	"get_min_match_length (Node * node , OnigDistance * min , ScanEnv * env)"		1171339	0					
ANR	1171341	CompoundStatement		2025:0:47141:49551	1171339	0					
ANR	1171342	IdentifierDeclStatement	OnigDistance tmin ;	2026:2:47145:47162	1171339	0	True				
ANR	1171343	IdentifierDecl	tmin		1171339	0					
ANR	1171344	IdentifierDeclType	OnigDistance		1171339	0					
ANR	1171345	Identifier	tmin		1171339	1					
ANR	1171346	IdentifierDeclStatement	int r = 0 ;	2027:2:47166:47175	1171339	1	True				
ANR	1171347	IdentifierDecl	r = 0		1171339	0					
ANR	1171348	IdentifierDeclType	int		1171339	0					
ANR	1171349	Identifier	r		1171339	1					
ANR	1171350	AssignmentExpression	r = 0		1171339	2		=			
ANR	1171351	Identifier	r		1171339	0					
ANR	1171352	PrimaryExpression	0		1171339	1					
ANR	1171353	ExpressionStatement	* min = 0	2029:2:47180:47188	1171339	2	True				
ANR	1171354	AssignmentExpression	* min = 0		1171339	0		=			
ANR	1171355	UnaryOperationExpression	* min		1171339	0					
ANR	1171356	UnaryOperator	*		1171339	0					
ANR	1171357	Identifier	min		1171339	1					
ANR	1171358	PrimaryExpression	0		1171339	1					
ANR	1171359	SwitchStatement	switch ( NTYPE ( node ) )		1171339	3					
ANR	1171360	Condition	NTYPE ( node )	2030:10:47200:47210	1171339	0	True				
ANR	1171361	CallExpression	NTYPE ( node )		1171339	0					
ANR	1171362	Callee	NTYPE		1171339	0					
ANR	1171363	Identifier	NTYPE		1171339	0					
ANR	1171364	ArgumentList	node		1171339	1					
ANR	1171365	Argument	node		1171339	0					
ANR	1171366	Identifier	node		1171339	0					
ANR	1171367	CompoundStatement		6:23:71:71	1171339	1					
ANR	1171368	Label	case NT_BREF :	2031:2:47217:47229	1171339	0	True				
ANR	1171369	Identifier	NT_BREF		1171339	0					
ANR	1171370	CompoundStatement		12:6:177:203	1171339	1					
ANR	1171371	IdentifierDeclStatement	int i ;	2033:6:47243:47248	1171339	0	True				
ANR	1171372	IdentifierDecl	i		1171339	0					
ANR	1171373	IdentifierDeclType	int		1171339	0					
ANR	1171374	Identifier	i		1171339	1					
ANR	1171375	IdentifierDeclStatement	int * backs ;	2034:6:47256:47266	1171339	1	True				
ANR	1171376	IdentifierDecl	* backs		1171339	0					
ANR	1171377	IdentifierDeclType	int *		1171339	0					
ANR	1171378	Identifier	backs		1171339	1					
ANR	1171379	IdentifierDeclStatement	Node * * nodes = SCANENV_MEM_NODES ( env ) ;	2035:6:47274:47311	1171339	2	True				
ANR	1171380	IdentifierDecl	* * nodes = SCANENV_MEM_NODES ( env )		1171339	0					
ANR	1171381	IdentifierDeclType	Node * *		1171339	0					
ANR	1171382	Identifier	nodes		1171339	1					
ANR	1171383	AssignmentExpression	* * nodes = SCANENV_MEM_NODES ( env )		1171339	2		=			
ANR	1171384	Identifier	nodes		1171339	0					
ANR	1171385	CallExpression	SCANENV_MEM_NODES ( env )		1171339	1					
ANR	1171386	Callee	SCANENV_MEM_NODES		1171339	0					
ANR	1171387	Identifier	SCANENV_MEM_NODES		1171339	0					
ANR	1171388	ArgumentList	env		1171339	1					
ANR	1171389	Argument	env		1171339	0					
ANR	1171390	Identifier	env		1171339	0					
ANR	1171391	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	2036:6:47319:47345	1171339	3	True				
ANR	1171392	IdentifierDecl	* br = NBREF ( node )		1171339	0					
ANR	1171393	IdentifierDeclType	BRefNode *		1171339	0					
ANR	1171394	Identifier	br		1171339	1					
ANR	1171395	AssignmentExpression	* br = NBREF ( node )		1171339	2		=			
ANR	1171396	Identifier	br		1171339	0					
ANR	1171397	CallExpression	NBREF ( node )		1171339	1					
ANR	1171398	Callee	NBREF		1171339	0					
ANR	1171399	Identifier	NBREF		1171339	0					
ANR	1171400	ArgumentList	node		1171339	1					
ANR	1171401	Argument	node		1171339	0					
ANR	1171402	Identifier	node		1171339	0					
ANR	1171403	IfStatement	if ( br -> state & NST_RECURSION )		1171339	4					
ANR	1171404	Condition	br -> state & NST_RECURSION	2037:10:47357:47381	1171339	0	True				
ANR	1171405	BitAndExpression	br -> state & NST_RECURSION		1171339	0		&			
ANR	1171406	PtrMemberAccess	br -> state		1171339	0					
ANR	1171407	Identifier	br		1171339	0					
ANR	1171408	Identifier	state		1171339	1					
ANR	1171409	Identifier	NST_RECURSION		1171339	1					
ANR	1171410	BreakStatement	break ;	2037:37:47384:47389	1171339	1	True				
ANR	1171411	ExpressionStatement	backs = BACKREFS_P ( br )	2039:6:47398:47420	1171339	5	True				
ANR	1171412	AssignmentExpression	backs = BACKREFS_P ( br )		1171339	0		=			
ANR	1171413	Identifier	backs		1171339	0					
ANR	1171414	CallExpression	BACKREFS_P ( br )		1171339	1					
ANR	1171415	Callee	BACKREFS_P		1171339	0					
ANR	1171416	Identifier	BACKREFS_P		1171339	0					
ANR	1171417	ArgumentList	br		1171339	1					
ANR	1171418	Argument	br		1171339	0					
ANR	1171419	Identifier	br		1171339	0					
ANR	1171420	IfStatement	if ( backs [ 0 ] > env -> num_mem )		1171339	6					
ANR	1171421	Condition	backs [ 0 ] > env -> num_mem	2040:10:47432:47454	1171339	0	True				
ANR	1171422	RelationalExpression	backs [ 0 ] > env -> num_mem		1171339	0		>			
ANR	1171423	ArrayIndexing	backs [ 0 ]		1171339	0					
ANR	1171424	Identifier	backs		1171339	0					
ANR	1171425	PrimaryExpression	0		1171339	1					
ANR	1171426	PtrMemberAccess	env -> num_mem		1171339	1					
ANR	1171427	Identifier	env		1171339	0					
ANR	1171428	Identifier	num_mem		1171339	1					
ANR	1171429	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	2040:36:47458:47488	1171339	1	True				
ANR	1171430	Identifier	ONIGERR_INVALID_BACKREF		1171339	0					
ANR	1171431	ExpressionStatement	"r = get_min_match_length ( nodes [ backs [ 0 ] ] , min , env )"	2041:6:47496:47547	1171339	7	True				
ANR	1171432	AssignmentExpression	"r = get_min_match_length ( nodes [ backs [ 0 ] ] , min , env )"		1171339	0		=			
ANR	1171433	Identifier	r		1171339	0					
ANR	1171434	CallExpression	"get_min_match_length ( nodes [ backs [ 0 ] ] , min , env )"		1171339	1					
ANR	1171435	Callee	get_min_match_length		1171339	0					
ANR	1171436	Identifier	get_min_match_length		1171339	0					
ANR	1171437	ArgumentList	nodes [ backs [ 0 ] ]		1171339	1					
ANR	1171438	Argument	nodes [ backs [ 0 ] ]		1171339	0					
ANR	1171439	ArrayIndexing	nodes [ backs [ 0 ] ]		1171339	0					
ANR	1171440	Identifier	nodes		1171339	0					
ANR	1171441	ArrayIndexing	backs [ 0 ]		1171339	1					
ANR	1171442	Identifier	backs		1171339	0					
ANR	1171443	PrimaryExpression	0		1171339	1					
ANR	1171444	Argument	min		1171339	1					
ANR	1171445	Identifier	min		1171339	0					
ANR	1171446	Argument	env		1171339	2					
ANR	1171447	Identifier	env		1171339	0					
ANR	1171448	IfStatement	if ( r != 0 )		1171339	8					
ANR	1171449	Condition	r != 0	2042:10:47559:47564	1171339	0	True				
ANR	1171450	EqualityExpression	r != 0		1171339	0		!=			
ANR	1171451	Identifier	r		1171339	0					
ANR	1171452	PrimaryExpression	0		1171339	1					
ANR	1171453	BreakStatement	break ;	2042:18:47567:47572	1171339	1	True				
ANR	1171454	ForStatement	for ( i = 1 ; i < br -> back_num ; i ++ )		1171339	9					
ANR	1171455	ForInit	i = 1 ;	2043:11:47585:47590	1171339	0	True				
ANR	1171456	AssignmentExpression	i = 1		1171339	0		=			
ANR	1171457	Identifier	i		1171339	0					
ANR	1171458	PrimaryExpression	1		1171339	1					
ANR	1171459	Condition	i < br -> back_num	2043:18:47592:47607	1171339	1	True				
ANR	1171460	RelationalExpression	i < br -> back_num		1171339	0		<			
ANR	1171461	Identifier	i		1171339	0					
ANR	1171462	PtrMemberAccess	br -> back_num		1171339	1					
ANR	1171463	Identifier	br		1171339	0					
ANR	1171464	Identifier	back_num		1171339	1					
ANR	1171465	PostIncDecOperationExpression	i ++	2043:36:47610:47612	1171339	2	True				
ANR	1171466	Identifier	i		1171339	0					
ANR	1171467	IncDec	++		1171339	1					
ANR	1171468	CompoundStatement		19:41:473:473	1171339	3					
ANR	1171469	IfStatement	if ( backs [ i ] > env -> num_mem )		1171339	0					
ANR	1171470	Condition	backs [ i ] > env -> num_mem	2044:5:47622:47644	1171339	0	True				
ANR	1171471	RelationalExpression	backs [ i ] > env -> num_mem		1171339	0		>			
ANR	1171472	ArrayIndexing	backs [ i ]		1171339	0					
ANR	1171473	Identifier	backs		1171339	0					
ANR	1171474	Identifier	i		1171339	1					
ANR	1171475	PtrMemberAccess	env -> num_mem		1171339	1					
ANR	1171476	Identifier	env		1171339	0					
ANR	1171477	Identifier	num_mem		1171339	1					
ANR	1171478	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	2044:31:47648:47678	1171339	1	True				
ANR	1171479	Identifier	ONIGERR_INVALID_BACKREF		1171339	0					
ANR	1171480	ExpressionStatement	"r = get_min_match_length ( nodes [ backs [ i ] ] , & tmin , env )"	2045:1:47681:47734	1171339	1	True				
ANR	1171481	AssignmentExpression	"r = get_min_match_length ( nodes [ backs [ i ] ] , & tmin , env )"		1171339	0		=			
ANR	1171482	Identifier	r		1171339	0					
ANR	1171483	CallExpression	"get_min_match_length ( nodes [ backs [ i ] ] , & tmin , env )"		1171339	1					
ANR	1171484	Callee	get_min_match_length		1171339	0					
ANR	1171485	Identifier	get_min_match_length		1171339	0					
ANR	1171486	ArgumentList	nodes [ backs [ i ] ]		1171339	1					
ANR	1171487	Argument	nodes [ backs [ i ] ]		1171339	0					
ANR	1171488	ArrayIndexing	nodes [ backs [ i ] ]		1171339	0					
ANR	1171489	Identifier	nodes		1171339	0					
ANR	1171490	ArrayIndexing	backs [ i ]		1171339	1					
ANR	1171491	Identifier	backs		1171339	0					
ANR	1171492	Identifier	i		1171339	1					
ANR	1171493	Argument	& tmin		1171339	1					
ANR	1171494	UnaryOperationExpression	& tmin		1171339	0					
ANR	1171495	UnaryOperator	&		1171339	0					
ANR	1171496	Identifier	tmin		1171339	1					
ANR	1171497	Argument	env		1171339	2					
ANR	1171498	Identifier	env		1171339	0					
ANR	1171499	IfStatement	if ( r != 0 )		1171339	2					
ANR	1171500	Condition	r != 0	2046:5:47741:47746	1171339	0	True				
ANR	1171501	EqualityExpression	r != 0		1171339	0		!=			
ANR	1171502	Identifier	r		1171339	0					
ANR	1171503	PrimaryExpression	0		1171339	1					
ANR	1171504	BreakStatement	break ;	2046:13:47749:47754	1171339	1	True				
ANR	1171505	IfStatement	if ( * min > tmin )		1171339	3					
ANR	1171506	Condition	* min > tmin	2047:5:47761:47771	1171339	0	True				
ANR	1171507	RelationalExpression	* min > tmin		1171339	0		>			
ANR	1171508	UnaryOperationExpression	* min		1171339	0					
ANR	1171509	UnaryOperator	*		1171339	0					
ANR	1171510	Identifier	min		1171339	1					
ANR	1171511	Identifier	tmin		1171339	1					
ANR	1171512	ExpressionStatement	* min = tmin	2047:18:47774:47785	1171339	1	True				
ANR	1171513	AssignmentExpression	* min = tmin		1171339	0		=			
ANR	1171514	UnaryOperationExpression	* min		1171339	0					
ANR	1171515	UnaryOperator	*		1171339	0					
ANR	1171516	Identifier	min		1171339	1					
ANR	1171517	Identifier	tmin		1171339	1					
ANR	1171518	BreakStatement	break ;	2050:4:47805:47810	1171339	2	True				
ANR	1171519	Label	case NT_CALL :	2053:2:47838:47850	1171339	3	True				
ANR	1171520	Identifier	NT_CALL		1171339	0					
ANR	1171521	IfStatement	if ( IS_CALL_RECURSION ( NCALL ( node ) ) )		1171339	4					
ANR	1171522	Condition	IS_CALL_RECURSION ( NCALL ( node ) )	2054:8:47860:47889	1171339	0	True				
ANR	1171523	CallExpression	IS_CALL_RECURSION ( NCALL ( node ) )		1171339	0					
ANR	1171524	Callee	IS_CALL_RECURSION		1171339	0					
ANR	1171525	Identifier	IS_CALL_RECURSION		1171339	0					
ANR	1171526	ArgumentList	NCALL ( node )		1171339	1					
ANR	1171527	Argument	NCALL ( node )		1171339	0					
ANR	1171528	CallExpression	NCALL ( node )		1171339	0					
ANR	1171529	Callee	NCALL		1171339	0					
ANR	1171530	Identifier	NCALL		1171339	0					
ANR	1171531	ArgumentList	node		1171339	1					
ANR	1171532	Argument	node		1171339	0					
ANR	1171533	Identifier	node		1171339	0					
ANR	1171534	CompoundStatement		31:6:758:805	1171339	1					
ANR	1171535	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( NCALL ( node ) -> target ) ;	2055:6:47900:47947	1171339	0	True				
ANR	1171536	IdentifierDecl	* en = NENCLOSE ( NCALL ( node ) -> target )		1171339	0					
ANR	1171537	IdentifierDeclType	EncloseNode *		1171339	0					
ANR	1171538	Identifier	en		1171339	1					
ANR	1171539	AssignmentExpression	* en = NENCLOSE ( NCALL ( node ) -> target )		1171339	2		=			
ANR	1171540	Identifier	en		1171339	0					
ANR	1171541	CallExpression	NENCLOSE ( NCALL ( node ) -> target )		1171339	1					
ANR	1171542	Callee	NENCLOSE		1171339	0					
ANR	1171543	Identifier	NENCLOSE		1171339	0					
ANR	1171544	ArgumentList	NCALL ( node ) -> target		1171339	1					
ANR	1171545	Argument	NCALL ( node ) -> target		1171339	0					
ANR	1171546	PtrMemberAccess	NCALL ( node ) -> target		1171339	0					
ANR	1171547	CallExpression	NCALL ( node )		1171339	0					
ANR	1171548	Callee	NCALL		1171339	0					
ANR	1171549	Identifier	NCALL		1171339	0					
ANR	1171550	ArgumentList	node		1171339	1					
ANR	1171551	Argument	node		1171339	0					
ANR	1171552	Identifier	node		1171339	0					
ANR	1171553	Identifier	target		1171339	1					
ANR	1171554	IfStatement	if ( IS_ENCLOSE_MIN_FIXED ( en ) )		1171339	1					
ANR	1171555	Condition	IS_ENCLOSE_MIN_FIXED ( en )	2056:10:47959:47982	1171339	0	True				
ANR	1171556	CallExpression	IS_ENCLOSE_MIN_FIXED ( en )		1171339	0					
ANR	1171557	Callee	IS_ENCLOSE_MIN_FIXED		1171339	0					
ANR	1171558	Identifier	IS_ENCLOSE_MIN_FIXED		1171339	0					
ANR	1171559	ArgumentList	en		1171339	1					
ANR	1171560	Argument	en		1171339	0					
ANR	1171561	Identifier	en		1171339	0					
ANR	1171562	ExpressionStatement	* min = en -> min_len	2057:1:47986:48004	1171339	1	True				
ANR	1171563	AssignmentExpression	* min = en -> min_len		1171339	0		=			
ANR	1171564	UnaryOperationExpression	* min		1171339	0					
ANR	1171565	UnaryOperator	*		1171339	0					
ANR	1171566	Identifier	min		1171339	1					
ANR	1171567	PtrMemberAccess	en -> min_len		1171339	1					
ANR	1171568	Identifier	en		1171339	0					
ANR	1171569	Identifier	min_len		1171339	1					
ANR	1171570	ElseStatement	else		1171339	0					
ANR	1171571	ExpressionStatement	"r = get_min_match_length ( NCALL ( node ) -> target , min , env )"	2060:6:48027:48082	1171339	0	True				
ANR	1171572	AssignmentExpression	"r = get_min_match_length ( NCALL ( node ) -> target , min , env )"		1171339	0		=			
ANR	1171573	Identifier	r		1171339	0					
ANR	1171574	CallExpression	"get_min_match_length ( NCALL ( node ) -> target , min , env )"		1171339	1					
ANR	1171575	Callee	get_min_match_length		1171339	0					
ANR	1171576	Identifier	get_min_match_length		1171339	0					
ANR	1171577	ArgumentList	NCALL ( node ) -> target		1171339	1					
ANR	1171578	Argument	NCALL ( node ) -> target		1171339	0					
ANR	1171579	PtrMemberAccess	NCALL ( node ) -> target		1171339	0					
ANR	1171580	CallExpression	NCALL ( node )		1171339	0					
ANR	1171581	Callee	NCALL		1171339	0					
ANR	1171582	Identifier	NCALL		1171339	0					
ANR	1171583	ArgumentList	node		1171339	1					
ANR	1171584	Argument	node		1171339	0					
ANR	1171585	Identifier	node		1171339	0					
ANR	1171586	Identifier	target		1171339	1					
ANR	1171587	Argument	min		1171339	1					
ANR	1171588	Identifier	min		1171339	0					
ANR	1171589	Argument	env		1171339	2					
ANR	1171590	Identifier	env		1171339	0					
ANR	1171591	BreakStatement	break ;	2061:4:48088:48093	1171339	5	True				
ANR	1171592	Label	case NT_LIST :	2064:2:48105:48117	1171339	6	True				
ANR	1171593	Identifier	NT_LIST		1171339	0					
ANR	1171594	DoStatement	do		1171339	7					
ANR	1171595	CompoundStatement		41:7:984:984	1171339	0					
ANR	1171596	ExpressionStatement	"r = get_min_match_length ( NCAR ( node ) , & tmin , env )"	2066:6:48134:48182	1171339	0	True				
ANR	1171597	AssignmentExpression	"r = get_min_match_length ( NCAR ( node ) , & tmin , env )"		1171339	0		=			
ANR	1171598	Identifier	r		1171339	0					
ANR	1171599	CallExpression	"get_min_match_length ( NCAR ( node ) , & tmin , env )"		1171339	1					
ANR	1171600	Callee	get_min_match_length		1171339	0					
ANR	1171601	Identifier	get_min_match_length		1171339	0					
ANR	1171602	ArgumentList	NCAR ( node )		1171339	1					
ANR	1171603	Argument	NCAR ( node )		1171339	0					
ANR	1171604	CallExpression	NCAR ( node )		1171339	0					
ANR	1171605	Callee	NCAR		1171339	0					
ANR	1171606	Identifier	NCAR		1171339	0					
ANR	1171607	ArgumentList	node		1171339	1					
ANR	1171608	Argument	node		1171339	0					
ANR	1171609	Identifier	node		1171339	0					
ANR	1171610	Argument	& tmin		1171339	1					
ANR	1171611	UnaryOperationExpression	& tmin		1171339	0					
ANR	1171612	UnaryOperator	&		1171339	0					
ANR	1171613	Identifier	tmin		1171339	1					
ANR	1171614	Argument	env		1171339	2					
ANR	1171615	Identifier	env		1171339	0					
ANR	1171616	IfStatement	if ( r == 0 )		1171339	1					
ANR	1171617	Condition	r == 0	2067:10:48194:48199	1171339	0	True				
ANR	1171618	EqualityExpression	r == 0		1171339	0		==			
ANR	1171619	Identifier	r		1171339	0					
ANR	1171620	PrimaryExpression	0		1171339	1					
ANR	1171621	ExpressionStatement	* min += tmin	2067:18:48202:48214	1171339	1	True				
ANR	1171622	AssignmentExpression	* min += tmin		1171339	0		+=			
ANR	1171623	UnaryOperationExpression	* min		1171339	0					
ANR	1171624	UnaryOperator	*		1171339	0					
ANR	1171625	Identifier	min		1171339	1					
ANR	1171626	Identifier	tmin		1171339	1					
ANR	1171627	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2068:13:48229:48268	1171339	1	True				
ANR	1171628	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1171339	0		&&			
ANR	1171629	EqualityExpression	r == 0		1171339	0		==			
ANR	1171630	Identifier	r		1171339	0					
ANR	1171631	PrimaryExpression	0		1171339	1					
ANR	1171632	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1171339	1					
ANR	1171633	Callee	IS_NOT_NULL		1171339	0					
ANR	1171634	Identifier	IS_NOT_NULL		1171339	0					
ANR	1171635	ArgumentList	node = NCDR ( node )		1171339	1					
ANR	1171636	Argument	node = NCDR ( node )		1171339	0					
ANR	1171637	AssignmentExpression	node = NCDR ( node )		1171339	0		=			
ANR	1171638	Identifier	node		1171339	0					
ANR	1171639	CallExpression	NCDR ( node )		1171339	1					
ANR	1171640	Callee	NCDR		1171339	0					
ANR	1171641	Identifier	NCDR		1171339	0					
ANR	1171642	ArgumentList	node		1171339	1					
ANR	1171643	Argument	node		1171339	0					
ANR	1171644	Identifier	node		1171339	0					
ANR	1171645	BreakStatement	break ;	2069:4:48276:48281	1171339	8	True				
ANR	1171646	Label	case NT_ALT :	2071:2:48286:48297	1171339	9	True				
ANR	1171647	Identifier	NT_ALT		1171339	0					
ANR	1171648	CompoundStatement		49:6:1169:1180	1171339	10					
ANR	1171649	IdentifierDeclStatement	"Node * x , * y ;"	2073:6:48311:48322	1171339	0	True				
ANR	1171650	IdentifierDecl	* x		1171339	0					
ANR	1171651	IdentifierDeclType	Node *		1171339	0					
ANR	1171652	Identifier	x		1171339	1					
ANR	1171653	IdentifierDecl	* y		1171339	1					
ANR	1171654	IdentifierDeclType	Node *		1171339	0					
ANR	1171655	Identifier	y		1171339	1					
ANR	1171656	ExpressionStatement	y = node	2074:6:48330:48338	1171339	1	True				
ANR	1171657	AssignmentExpression	y = node		1171339	0		=			
ANR	1171658	Identifier	y		1171339	0					
ANR	1171659	Identifier	node		1171339	1					
ANR	1171660	DoStatement	do		1171339	2					
ANR	1171661	CompoundStatement		51:9:1207:1207	1171339	0					
ANR	1171662	ExpressionStatement	x = NCAR ( y )	2076:1:48352:48363	1171339	0	True				
ANR	1171663	AssignmentExpression	x = NCAR ( y )		1171339	0		=			
ANR	1171664	Identifier	x		1171339	0					
ANR	1171665	CallExpression	NCAR ( y )		1171339	1					
ANR	1171666	Callee	NCAR		1171339	0					
ANR	1171667	Identifier	NCAR		1171339	0					
ANR	1171668	ArgumentList	y		1171339	1					
ANR	1171669	Argument	y		1171339	0					
ANR	1171670	Identifier	y		1171339	0					
ANR	1171671	ExpressionStatement	"r = get_min_match_length ( x , & tmin , env )"	2077:1:48366:48405	1171339	1	True				
ANR	1171672	AssignmentExpression	"r = get_min_match_length ( x , & tmin , env )"		1171339	0		=			
ANR	1171673	Identifier	r		1171339	0					
ANR	1171674	CallExpression	"get_min_match_length ( x , & tmin , env )"		1171339	1					
ANR	1171675	Callee	get_min_match_length		1171339	0					
ANR	1171676	Identifier	get_min_match_length		1171339	0					
ANR	1171677	ArgumentList	x		1171339	1					
ANR	1171678	Argument	x		1171339	0					
ANR	1171679	Identifier	x		1171339	0					
ANR	1171680	Argument	& tmin		1171339	1					
ANR	1171681	UnaryOperationExpression	& tmin		1171339	0					
ANR	1171682	UnaryOperator	&		1171339	0					
ANR	1171683	Identifier	tmin		1171339	1					
ANR	1171684	Argument	env		1171339	2					
ANR	1171685	Identifier	env		1171339	0					
ANR	1171686	IfStatement	if ( r != 0 )		1171339	2					
ANR	1171687	Condition	r != 0	2078:5:48412:48417	1171339	0	True				
ANR	1171688	EqualityExpression	r != 0		1171339	0		!=			
ANR	1171689	Identifier	r		1171339	0					
ANR	1171690	PrimaryExpression	0		1171339	1					
ANR	1171691	BreakStatement	break ;	2078:13:48420:48425	1171339	1	True				
ANR	1171692	IfStatement	if ( y == node )		1171339	3					
ANR	1171693	Condition	y == node	2079:5:48432:48440	1171339	0	True				
ANR	1171694	EqualityExpression	y == node		1171339	0		==			
ANR	1171695	Identifier	y		1171339	0					
ANR	1171696	Identifier	node		1171339	1					
ANR	1171697	ExpressionStatement	* min = tmin	2079:16:48443:48454	1171339	1	True				
ANR	1171698	AssignmentExpression	* min = tmin		1171339	0		=			
ANR	1171699	UnaryOperationExpression	* min		1171339	0					
ANR	1171700	UnaryOperator	*		1171339	0					
ANR	1171701	Identifier	min		1171339	1					
ANR	1171702	Identifier	tmin		1171339	1					
ANR	1171703	ElseStatement	else		1171339	0					
ANR	1171704	IfStatement	if ( * min > tmin )		1171339	0					
ANR	1171705	Condition	* min > tmin	2080:10:48466:48476	1171339	0	True				
ANR	1171706	RelationalExpression	* min > tmin		1171339	0		>			
ANR	1171707	UnaryOperationExpression	* min		1171339	0					
ANR	1171708	UnaryOperator	*		1171339	0					
ANR	1171709	Identifier	min		1171339	1					
ANR	1171710	Identifier	tmin		1171339	1					
ANR	1171711	ExpressionStatement	* min = tmin	2080:23:48479:48490	1171339	1	True				
ANR	1171712	AssignmentExpression	* min = tmin		1171339	0		=			
ANR	1171713	UnaryOperationExpression	* min		1171339	0					
ANR	1171714	UnaryOperator	*		1171339	0					
ANR	1171715	Identifier	min		1171339	1					
ANR	1171716	Identifier	tmin		1171339	1					
ANR	1171717	Condition	r == 0 && IS_NOT_NULL ( y = NCDR ( y ) )	2081:15:48507:48540	1171339	1	True				
ANR	1171718	AndExpression	r == 0 && IS_NOT_NULL ( y = NCDR ( y ) )		1171339	0		&&			
ANR	1171719	EqualityExpression	r == 0		1171339	0		==			
ANR	1171720	Identifier	r		1171339	0					
ANR	1171721	PrimaryExpression	0		1171339	1					
ANR	1171722	CallExpression	IS_NOT_NULL ( y = NCDR ( y ) )		1171339	1					
ANR	1171723	Callee	IS_NOT_NULL		1171339	0					
ANR	1171724	Identifier	IS_NOT_NULL		1171339	0					
ANR	1171725	ArgumentList	y = NCDR ( y )		1171339	1					
ANR	1171726	Argument	y = NCDR ( y )		1171339	0					
ANR	1171727	AssignmentExpression	y = NCDR ( y )		1171339	0		=			
ANR	1171728	Identifier	y		1171339	0					
ANR	1171729	CallExpression	NCDR ( y )		1171339	1					
ANR	1171730	Callee	NCDR		1171339	0					
ANR	1171731	Identifier	NCDR		1171339	0					
ANR	1171732	ArgumentList	y		1171339	1					
ANR	1171733	Argument	y		1171339	0					
ANR	1171734	Identifier	y		1171339	0					
ANR	1171735	BreakStatement	break ;	2083:4:48554:48559	1171339	11	True				
ANR	1171736	Label	case NT_STR :	2085:2:48564:48575	1171339	12	True				
ANR	1171737	Identifier	NT_STR		1171339	0					
ANR	1171738	CompoundStatement		63:6:1447:1471	1171339	13					
ANR	1171739	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	2087:6:48589:48613	1171339	0	True				
ANR	1171740	IdentifierDecl	* sn = NSTR ( node )		1171339	0					
ANR	1171741	IdentifierDeclType	StrNode *		1171339	0					
ANR	1171742	Identifier	sn		1171339	1					
ANR	1171743	AssignmentExpression	* sn = NSTR ( node )		1171339	2		=			
ANR	1171744	Identifier	sn		1171339	0					
ANR	1171745	CallExpression	NSTR ( node )		1171339	1					
ANR	1171746	Callee	NSTR		1171339	0					
ANR	1171747	Identifier	NSTR		1171339	0					
ANR	1171748	ArgumentList	node		1171339	1					
ANR	1171749	Argument	node		1171339	0					
ANR	1171750	Identifier	node		1171339	0					
ANR	1171751	ExpressionStatement	* min = sn -> end - sn -> s	2088:6:48621:48643	1171339	1	True				
ANR	1171752	AssignmentExpression	* min = sn -> end - sn -> s		1171339	0		=			
ANR	1171753	UnaryOperationExpression	* min		1171339	0					
ANR	1171754	UnaryOperator	*		1171339	0					
ANR	1171755	Identifier	min		1171339	1					
ANR	1171756	AdditiveExpression	sn -> end - sn -> s		1171339	1		-			
ANR	1171757	PtrMemberAccess	sn -> end		1171339	0					
ANR	1171758	Identifier	sn		1171339	0					
ANR	1171759	Identifier	end		1171339	1					
ANR	1171760	PtrMemberAccess	sn -> s		1171339	1					
ANR	1171761	Identifier	sn		1171339	0					
ANR	1171762	Identifier	s		1171339	1					
ANR	1171763	BreakStatement	break ;	2090:4:48655:48660	1171339	14	True				
ANR	1171764	Label	case NT_CTYPE :	2092:2:48665:48678	1171339	15	True				
ANR	1171765	Identifier	NT_CTYPE		1171339	0					
ANR	1171766	ExpressionStatement	* min = 1	2093:4:48684:48692	1171339	16	True				
ANR	1171767	AssignmentExpression	* min = 1		1171339	0		=			
ANR	1171768	UnaryOperationExpression	* min		1171339	0					
ANR	1171769	UnaryOperator	*		1171339	0					
ANR	1171770	Identifier	min		1171339	1					
ANR	1171771	PrimaryExpression	1		1171339	1					
ANR	1171772	BreakStatement	break ;	2094:4:48698:48703	1171339	17	True				
ANR	1171773	Label	case NT_CCLASS :	2096:2:48708:48722	1171339	18	True				
ANR	1171774	Identifier	NT_CCLASS		1171339	0					
ANR	1171775	Label	case NT_CANY :	2097:2:48726:48738	1171339	19	True				
ANR	1171776	Identifier	NT_CANY		1171339	0					
ANR	1171777	ExpressionStatement	* min = 1	2098:4:48744:48752	1171339	20	True				
ANR	1171778	AssignmentExpression	* min = 1		1171339	0		=			
ANR	1171779	UnaryOperationExpression	* min		1171339	0					
ANR	1171780	UnaryOperator	*		1171339	0					
ANR	1171781	Identifier	min		1171339	1					
ANR	1171782	PrimaryExpression	1		1171339	1					
ANR	1171783	BreakStatement	break ;	2099:4:48758:48763	1171339	21	True				
ANR	1171784	Label	case NT_QTFR :	2101:2:48768:48780	1171339	22	True				
ANR	1171785	Identifier	NT_QTFR		1171339	0					
ANR	1171786	CompoundStatement		79:6:1652:1678	1171339	23					
ANR	1171787	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	2103:6:48794:48820	1171339	0	True				
ANR	1171788	IdentifierDecl	* qn = NQTFR ( node )		1171339	0					
ANR	1171789	IdentifierDeclType	QtfrNode *		1171339	0					
ANR	1171790	Identifier	qn		1171339	1					
ANR	1171791	AssignmentExpression	* qn = NQTFR ( node )		1171339	2		=			
ANR	1171792	Identifier	qn		1171339	0					
ANR	1171793	CallExpression	NQTFR ( node )		1171339	1					
ANR	1171794	Callee	NQTFR		1171339	0					
ANR	1171795	Identifier	NQTFR		1171339	0					
ANR	1171796	ArgumentList	node		1171339	1					
ANR	1171797	Argument	node		1171339	0					
ANR	1171798	Identifier	node		1171339	0					
ANR	1171799	IfStatement	if ( qn -> lower > 0 )		1171339	1					
ANR	1171800	Condition	qn -> lower > 0	2105:10:48833:48845	1171339	0	True				
ANR	1171801	RelationalExpression	qn -> lower > 0		1171339	0		>			
ANR	1171802	PtrMemberAccess	qn -> lower		1171339	0					
ANR	1171803	Identifier	qn		1171339	0					
ANR	1171804	Identifier	lower		1171339	1					
ANR	1171805	PrimaryExpression	0		1171339	1					
ANR	1171806	CompoundStatement		81:25:1706:1706	1171339	1					
ANR	1171807	ExpressionStatement	"r = get_min_match_length ( qn -> target , min , env )"	2106:1:48851:48897	1171339	0	True				
ANR	1171808	AssignmentExpression	"r = get_min_match_length ( qn -> target , min , env )"		1171339	0		=			
ANR	1171809	Identifier	r		1171339	0					
ANR	1171810	CallExpression	"get_min_match_length ( qn -> target , min , env )"		1171339	1					
ANR	1171811	Callee	get_min_match_length		1171339	0					
ANR	1171812	Identifier	get_min_match_length		1171339	0					
ANR	1171813	ArgumentList	qn -> target		1171339	1					
ANR	1171814	Argument	qn -> target		1171339	0					
ANR	1171815	PtrMemberAccess	qn -> target		1171339	0					
ANR	1171816	Identifier	qn		1171339	0					
ANR	1171817	Identifier	target		1171339	1					
ANR	1171818	Argument	min		1171339	1					
ANR	1171819	Identifier	min		1171339	0					
ANR	1171820	Argument	env		1171339	2					
ANR	1171821	Identifier	env		1171339	0					
ANR	1171822	IfStatement	if ( r == 0 )		1171339	1					
ANR	1171823	Condition	r == 0	2107:5:48904:48909	1171339	0	True				
ANR	1171824	EqualityExpression	r == 0		1171339	0		==			
ANR	1171825	Identifier	r		1171339	0					
ANR	1171826	PrimaryExpression	0		1171339	1					
ANR	1171827	ExpressionStatement	"* min = distance_multiply ( * min , qn -> lower )"	2108:3:48915:48956	1171339	1	True				
ANR	1171828	AssignmentExpression	"* min = distance_multiply ( * min , qn -> lower )"		1171339	0		=			
ANR	1171829	UnaryOperationExpression	* min		1171339	0					
ANR	1171830	UnaryOperator	*		1171339	0					
ANR	1171831	Identifier	min		1171339	1					
ANR	1171832	CallExpression	"distance_multiply ( * min , qn -> lower )"		1171339	1					
ANR	1171833	Callee	distance_multiply		1171339	0					
ANR	1171834	Identifier	distance_multiply		1171339	0					
ANR	1171835	ArgumentList	* min		1171339	1					
ANR	1171836	Argument	* min		1171339	0					
ANR	1171837	UnaryOperationExpression	* min		1171339	0					
ANR	1171838	UnaryOperator	*		1171339	0					
ANR	1171839	Identifier	min		1171339	1					
ANR	1171840	Argument	qn -> lower		1171339	1					
ANR	1171841	PtrMemberAccess	qn -> lower		1171339	0					
ANR	1171842	Identifier	qn		1171339	0					
ANR	1171843	Identifier	lower		1171339	1					
ANR	1171844	BreakStatement	break ;	2111:4:48976:48981	1171339	24	True				
ANR	1171845	Label	case NT_ENCLOSE :	2113:2:48986:49001	1171339	25	True				
ANR	1171846	Identifier	NT_ENCLOSE		1171339	0					
ANR	1171847	CompoundStatement		91:6:1873:1905	1171339	26					
ANR	1171848	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2115:6:49015:49047	1171339	0	True				
ANR	1171849	IdentifierDecl	* en = NENCLOSE ( node )		1171339	0					
ANR	1171850	IdentifierDeclType	EncloseNode *		1171339	0					
ANR	1171851	Identifier	en		1171339	1					
ANR	1171852	AssignmentExpression	* en = NENCLOSE ( node )		1171339	2		=			
ANR	1171853	Identifier	en		1171339	0					
ANR	1171854	CallExpression	NENCLOSE ( node )		1171339	1					
ANR	1171855	Callee	NENCLOSE		1171339	0					
ANR	1171856	Identifier	NENCLOSE		1171339	0					
ANR	1171857	ArgumentList	node		1171339	1					
ANR	1171858	Argument	node		1171339	0					
ANR	1171859	Identifier	node		1171339	0					
ANR	1171860	SwitchStatement	switch ( en -> type )		1171339	1					
ANR	1171861	Condition	en -> type	2116:14:49063:49070	1171339	0	True				
ANR	1171862	PtrMemberAccess	en -> type		1171339	0					
ANR	1171863	Identifier	en		1171339	0					
ANR	1171864	Identifier	type		1171339	1					
ANR	1171865	CompoundStatement		92:24:1931:1931	1171339	1					
ANR	1171866	Label	case ENCLOSE_MEMORY :	2117:6:49081:49100	1171339	0	True				
ANR	1171867	Identifier	ENCLOSE_MEMORY		1171339	0					
ANR	1171868	IfStatement	if ( IS_ENCLOSE_MIN_FIXED ( en ) )		1171339	1					
ANR	1171869	Condition	IS_ENCLOSE_MIN_FIXED ( en )	2119:5:49130:49153	1171339	0	True				
ANR	1171870	CallExpression	IS_ENCLOSE_MIN_FIXED ( en )		1171339	0					
ANR	1171871	Callee	IS_ENCLOSE_MIN_FIXED		1171339	0					
ANR	1171872	Identifier	IS_ENCLOSE_MIN_FIXED		1171339	0					
ANR	1171873	ArgumentList	en		1171339	1					
ANR	1171874	Argument	en		1171339	0					
ANR	1171875	Identifier	en		1171339	0					
ANR	1171876	ExpressionStatement	* min = en -> min_len	2120:3:49159:49177	1171339	1	True				
ANR	1171877	AssignmentExpression	* min = en -> min_len		1171339	0		=			
ANR	1171878	UnaryOperationExpression	* min		1171339	0					
ANR	1171879	UnaryOperator	*		1171339	0					
ANR	1171880	Identifier	min		1171339	1					
ANR	1171881	PtrMemberAccess	en -> min_len		1171339	1					
ANR	1171882	Identifier	en		1171339	0					
ANR	1171883	Identifier	min_len		1171339	1					
ANR	1171884	ElseStatement	else		1171339	0					
ANR	1171885	CompoundStatement		97:6:2043:2043	1171339	0					
ANR	1171886	ExpressionStatement	"r = get_min_match_length ( en -> target , min , env )"	2122:3:49190:49236	1171339	0	True				
ANR	1171887	AssignmentExpression	"r = get_min_match_length ( en -> target , min , env )"		1171339	0		=			
ANR	1171888	Identifier	r		1171339	0					
ANR	1171889	CallExpression	"get_min_match_length ( en -> target , min , env )"		1171339	1					
ANR	1171890	Callee	get_min_match_length		1171339	0					
ANR	1171891	Identifier	get_min_match_length		1171339	0					
ANR	1171892	ArgumentList	en -> target		1171339	1					
ANR	1171893	Argument	en -> target		1171339	0					
ANR	1171894	PtrMemberAccess	en -> target		1171339	0					
ANR	1171895	Identifier	en		1171339	0					
ANR	1171896	Identifier	target		1171339	1					
ANR	1171897	Argument	min		1171339	1					
ANR	1171898	Identifier	min		1171339	0					
ANR	1171899	Argument	env		1171339	2					
ANR	1171900	Identifier	env		1171339	0					
ANR	1171901	IfStatement	if ( r == 0 )		1171339	1					
ANR	1171902	Condition	r == 0	2123:7:49245:49250	1171339	0	True				
ANR	1171903	EqualityExpression	r == 0		1171339	0		==			
ANR	1171904	Identifier	r		1171339	0					
ANR	1171905	PrimaryExpression	0		1171339	1					
ANR	1171906	CompoundStatement		99:15:2111:2111	1171339	1					
ANR	1171907	ExpressionStatement	en -> min_len = * min	2124:5:49260:49278	1171339	0	True				
ANR	1171908	AssignmentExpression	en -> min_len = * min		1171339	0		=			
ANR	1171909	PtrMemberAccess	en -> min_len		1171339	0					
ANR	1171910	Identifier	en		1171339	0					
ANR	1171911	Identifier	min_len		1171339	1					
ANR	1171912	UnaryOperationExpression	* min		1171339	1					
ANR	1171913	UnaryOperator	*		1171339	0					
ANR	1171914	Identifier	min		1171339	1					
ANR	1171915	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_MIN_FIXED )"	2125:5:49285:49324	1171339	1	True				
ANR	1171916	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_MIN_FIXED )"		1171339	0					
ANR	1171917	Callee	SET_ENCLOSE_STATUS		1171339	0					
ANR	1171918	Identifier	SET_ENCLOSE_STATUS		1171339	0					
ANR	1171919	ArgumentList	node		1171339	1					
ANR	1171920	Argument	node		1171339	0					
ANR	1171921	Identifier	node		1171339	0					
ANR	1171922	Argument	NST_MIN_FIXED		1171339	1					
ANR	1171923	Identifier	NST_MIN_FIXED		1171339	0					
ANR	1171924	BreakStatement	break ;	2128:1:49335:49340	1171339	2	True				
ANR	1171925	Label	case ENCLOSE_OPTION :	2130:6:49355:49374	1171339	3	True				
ANR	1171926	Identifier	ENCLOSE_OPTION		1171339	0					
ANR	1171927	Label	case ENCLOSE_STOP_BACKTRACK :	2131:6:49382:49409	1171339	4	True				
ANR	1171928	Identifier	ENCLOSE_STOP_BACKTRACK		1171339	0					
ANR	1171929	ExpressionStatement	"r = get_min_match_length ( en -> target , min , env )"	2132:1:49412:49458	1171339	5	True				
ANR	1171930	AssignmentExpression	"r = get_min_match_length ( en -> target , min , env )"		1171339	0		=			
ANR	1171931	Identifier	r		1171339	0					
ANR	1171932	CallExpression	"get_min_match_length ( en -> target , min , env )"		1171339	1					
ANR	1171933	Callee	get_min_match_length		1171339	0					
ANR	1171934	Identifier	get_min_match_length		1171339	0					
ANR	1171935	ArgumentList	en -> target		1171339	1					
ANR	1171936	Argument	en -> target		1171339	0					
ANR	1171937	PtrMemberAccess	en -> target		1171339	0					
ANR	1171938	Identifier	en		1171339	0					
ANR	1171939	Identifier	target		1171339	1					
ANR	1171940	Argument	min		1171339	1					
ANR	1171941	Identifier	min		1171339	0					
ANR	1171942	Argument	env		1171339	2					
ANR	1171943	Identifier	env		1171339	0					
ANR	1171944	BreakStatement	break ;	2133:1:49461:49466	1171339	6	True				
ANR	1171945	BreakStatement	break ;	2136:4:49486:49491	1171339	27	True				
ANR	1171946	Label	case NT_ANCHOR :	2138:2:49496:49510	1171339	28	True				
ANR	1171947	Identifier	NT_ANCHOR		1171339	0					
ANR	1171948	Label	default :	2139:2:49514:49521	1171339	29	True				
ANR	1171949	Identifier	default		1171339	0					
ANR	1171950	BreakStatement	break ;	2140:4:49527:49532	1171339	30	True				
ANR	1171951	ReturnStatement	return r ;	2143:2:49541:49549	1171339	4	True				
ANR	1171952	Identifier	r		1171339	0					
ANR	1171953	ReturnType	static int		1171339	1					
ANR	1171954	Identifier	get_min_match_length		1171339	2					
ANR	1171955	ParameterList	"Node * node , OnigDistance * min , ScanEnv * env"		1171339	3					
ANR	1171956	Parameter	Node * node	2024:21:47096:47105	1171339	0	True				
ANR	1171957	ParameterType	Node *		1171339	0					
ANR	1171958	Identifier	node		1171339	1					
ANR	1171959	Parameter	OnigDistance * min	2024:33:47108:47124	1171339	1	True				
ANR	1171960	ParameterType	OnigDistance *		1171339	0					
ANR	1171961	Identifier	min		1171339	1					
ANR	1171962	Parameter	ScanEnv * env	2024:52:47127:47138	1171339	2	True				
ANR	1171963	ParameterType	ScanEnv *		1171339	0					
ANR	1171964	Identifier	env		1171339	1					
ANR	1171965	CFGEntryNode	ENTRY		1171339		True				
ANR	1171966	CFGExitNode	EXIT		1171339		True				
ANR	1171967	Symbol	br -> back_num		1171339						
ANR	1171968	Symbol	NCAR		1171339						
ANR	1171969	Symbol	* sn		1171339						
ANR	1171970	Symbol	* backs		1171339						
ANR	1171971	Symbol	NQTFR		1171339						
ANR	1171972	Symbol	sn -> s		1171339						
ANR	1171973	Symbol	* br		1171339						
ANR	1171974	Symbol	en -> type		1171339						
ANR	1171975	Symbol	* nodes		1171339						
ANR	1171976	Symbol	SCANENV_MEM_NODES		1171339						
ANR	1171977	Symbol	qn		1171339						
ANR	1171978	Symbol	* * i		1171339						
ANR	1171979	Symbol	NCDR		1171339						
ANR	1171980	Symbol	NSTR		1171339						
ANR	1171981	Symbol	* env		1171339						
ANR	1171982	Symbol	en		1171339						
ANR	1171983	Symbol	NST_MIN_FIXED		1171339						
ANR	1171984	Symbol	qn -> target		1171339						
ANR	1171985	Symbol	distance_multiply		1171339						
ANR	1171986	Symbol	node		1171339						
ANR	1171987	Symbol	BACKREFS_P		1171339						
ANR	1171988	Symbol	get_min_match_length		1171339						
ANR	1171989	Symbol	IS_CALL_RECURSION		1171339						
ANR	1171990	Symbol	* min		1171339						
ANR	1171991	Symbol	en -> min_len		1171339						
ANR	1171992	Symbol	IS_ENCLOSE_MIN_FIXED		1171339						
ANR	1171993	Symbol	* qn		1171339						
ANR	1171994	Symbol	ONIGERR_INVALID_BACKREF		1171339						
ANR	1171995	Symbol	IS_NOT_NULL		1171339						
ANR	1171996	Symbol	NCALL		1171339						
ANR	1171997	Symbol	& tmin		1171339						
ANR	1171998	Symbol	* en		1171339						
ANR	1171999	Symbol	br		1171339						
ANR	1172000	Symbol	qn -> lower		1171339						
ANR	1172001	Symbol	min		1171339						
ANR	1172002	Symbol	* * backs		1171339						
ANR	1172003	Symbol	NBREF		1171339						
ANR	1172004	Symbol	NST_RECURSION		1171339						
ANR	1172005	Symbol	NENCLOSE		1171339						
ANR	1172006	Symbol	NCALL ( node ) -> target		1171339						
ANR	1172007	Symbol	sn		1171339						
ANR	1172008	Symbol	sn -> end		1171339						
ANR	1172009	Symbol	tmin		1171339						
ANR	1172010	Symbol	env -> num_mem		1171339						
ANR	1172011	Symbol	i		1171339						
ANR	1172012	Symbol	env		1171339						
ANR	1172013	Symbol	r		1171339						
ANR	1172014	Symbol	nodes		1171339						
ANR	1172015	Symbol	* i		1171339						
ANR	1172016	Symbol	en -> target		1171339						
ANR	1172017	Symbol	x		1171339						
ANR	1172018	Symbol	br -> state		1171339						
ANR	1172019	Symbol	y		1171339						
ANR	1172020	Symbol	NTYPE		1171339						
ANR	1172021	Symbol	* NCALL		1171339						
ANR	1172022	Symbol	backs		1171339						
ANR	1172023	Function	get_max_match_length	2146:0:49554:51955							
ANR	1172024	FunctionDef	"get_max_match_length (Node * node , OnigDistance * max , ScanEnv * env)"		1172023	0					
ANR	1172025	CompoundStatement		2148:0:49631:51955	1172023	0					
ANR	1172026	IdentifierDeclStatement	OnigDistance tmax ;	2149:2:49635:49652	1172023	0	True				
ANR	1172027	IdentifierDecl	tmax		1172023	0					
ANR	1172028	IdentifierDeclType	OnigDistance		1172023	0					
ANR	1172029	Identifier	tmax		1172023	1					
ANR	1172030	IdentifierDeclStatement	int r = 0 ;	2150:2:49656:49665	1172023	1	True				
ANR	1172031	IdentifierDecl	r = 0		1172023	0					
ANR	1172032	IdentifierDeclType	int		1172023	0					
ANR	1172033	Identifier	r		1172023	1					
ANR	1172034	AssignmentExpression	r = 0		1172023	2		=			
ANR	1172035	Identifier	r		1172023	0					
ANR	1172036	PrimaryExpression	0		1172023	1					
ANR	1172037	ExpressionStatement	* max = 0	2152:2:49670:49678	1172023	2	True				
ANR	1172038	AssignmentExpression	* max = 0		1172023	0		=			
ANR	1172039	UnaryOperationExpression	* max		1172023	0					
ANR	1172040	UnaryOperator	*		1172023	0					
ANR	1172041	Identifier	max		1172023	1					
ANR	1172042	PrimaryExpression	0		1172023	1					
ANR	1172043	SwitchStatement	switch ( NTYPE ( node ) )		1172023	3					
ANR	1172044	Condition	NTYPE ( node )	2153:10:49690:49700	1172023	0	True				
ANR	1172045	CallExpression	NTYPE ( node )		1172023	0					
ANR	1172046	Callee	NTYPE		1172023	0					
ANR	1172047	Identifier	NTYPE		1172023	0					
ANR	1172048	ArgumentList	node		1172023	1					
ANR	1172049	Argument	node		1172023	0					
ANR	1172050	Identifier	node		1172023	0					
ANR	1172051	CompoundStatement		6:23:71:71	1172023	1					
ANR	1172052	Label	case NT_LIST :	2154:2:49707:49719	1172023	0	True				
ANR	1172053	Identifier	NT_LIST		1172023	0					
ANR	1172054	DoStatement	do		1172023	1					
ANR	1172055	CompoundStatement		8:7:96:96	1172023	0					
ANR	1172056	ExpressionStatement	"r = get_max_match_length ( NCAR ( node ) , & tmax , env )"	2156:6:49736:49784	1172023	0	True				
ANR	1172057	AssignmentExpression	"r = get_max_match_length ( NCAR ( node ) , & tmax , env )"		1172023	0		=			
ANR	1172058	Identifier	r		1172023	0					
ANR	1172059	CallExpression	"get_max_match_length ( NCAR ( node ) , & tmax , env )"		1172023	1					
ANR	1172060	Callee	get_max_match_length		1172023	0					
ANR	1172061	Identifier	get_max_match_length		1172023	0					
ANR	1172062	ArgumentList	NCAR ( node )		1172023	1					
ANR	1172063	Argument	NCAR ( node )		1172023	0					
ANR	1172064	CallExpression	NCAR ( node )		1172023	0					
ANR	1172065	Callee	NCAR		1172023	0					
ANR	1172066	Identifier	NCAR		1172023	0					
ANR	1172067	ArgumentList	node		1172023	1					
ANR	1172068	Argument	node		1172023	0					
ANR	1172069	Identifier	node		1172023	0					
ANR	1172070	Argument	& tmax		1172023	1					
ANR	1172071	UnaryOperationExpression	& tmax		1172023	0					
ANR	1172072	UnaryOperator	&		1172023	0					
ANR	1172073	Identifier	tmax		1172023	1					
ANR	1172074	Argument	env		1172023	2					
ANR	1172075	Identifier	env		1172023	0					
ANR	1172076	IfStatement	if ( r == 0 )		1172023	1					
ANR	1172077	Condition	r == 0	2157:10:49796:49801	1172023	0	True				
ANR	1172078	EqualityExpression	r == 0		1172023	0		==			
ANR	1172079	Identifier	r		1172023	0					
ANR	1172080	PrimaryExpression	0		1172023	1					
ANR	1172081	ExpressionStatement	"* max = distance_add ( * max , tmax )"	2158:1:49805:49836	1172023	1	True				
ANR	1172082	AssignmentExpression	"* max = distance_add ( * max , tmax )"		1172023	0		=			
ANR	1172083	UnaryOperationExpression	* max		1172023	0					
ANR	1172084	UnaryOperator	*		1172023	0					
ANR	1172085	Identifier	max		1172023	1					
ANR	1172086	CallExpression	"distance_add ( * max , tmax )"		1172023	1					
ANR	1172087	Callee	distance_add		1172023	0					
ANR	1172088	Identifier	distance_add		1172023	0					
ANR	1172089	ArgumentList	* max		1172023	1					
ANR	1172090	Argument	* max		1172023	0					
ANR	1172091	UnaryOperationExpression	* max		1172023	0					
ANR	1172092	UnaryOperator	*		1172023	0					
ANR	1172093	Identifier	max		1172023	1					
ANR	1172094	Argument	tmax		1172023	1					
ANR	1172095	Identifier	tmax		1172023	0					
ANR	1172096	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2159:13:49851:49890	1172023	1	True				
ANR	1172097	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1172023	0		&&			
ANR	1172098	EqualityExpression	r == 0		1172023	0		==			
ANR	1172099	Identifier	r		1172023	0					
ANR	1172100	PrimaryExpression	0		1172023	1					
ANR	1172101	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1172023	1					
ANR	1172102	Callee	IS_NOT_NULL		1172023	0					
ANR	1172103	Identifier	IS_NOT_NULL		1172023	0					
ANR	1172104	ArgumentList	node = NCDR ( node )		1172023	1					
ANR	1172105	Argument	node = NCDR ( node )		1172023	0					
ANR	1172106	AssignmentExpression	node = NCDR ( node )		1172023	0		=			
ANR	1172107	Identifier	node		1172023	0					
ANR	1172108	CallExpression	NCDR ( node )		1172023	1					
ANR	1172109	Callee	NCDR		1172023	0					
ANR	1172110	Identifier	NCDR		1172023	0					
ANR	1172111	ArgumentList	node		1172023	1					
ANR	1172112	Argument	node		1172023	0					
ANR	1172113	Identifier	node		1172023	0					
ANR	1172114	BreakStatement	break ;	2160:4:49898:49903	1172023	2	True				
ANR	1172115	Label	case NT_ALT :	2162:2:49908:49919	1172023	3	True				
ANR	1172116	Identifier	NT_ALT		1172023	0					
ANR	1172117	DoStatement	do		1172023	4					
ANR	1172118	CompoundStatement		16:7:296:296	1172023	0					
ANR	1172119	ExpressionStatement	"r = get_max_match_length ( NCAR ( node ) , & tmax , env )"	2164:6:49936:49984	1172023	0	True				
ANR	1172120	AssignmentExpression	"r = get_max_match_length ( NCAR ( node ) , & tmax , env )"		1172023	0		=			
ANR	1172121	Identifier	r		1172023	0					
ANR	1172122	CallExpression	"get_max_match_length ( NCAR ( node ) , & tmax , env )"		1172023	1					
ANR	1172123	Callee	get_max_match_length		1172023	0					
ANR	1172124	Identifier	get_max_match_length		1172023	0					
ANR	1172125	ArgumentList	NCAR ( node )		1172023	1					
ANR	1172126	Argument	NCAR ( node )		1172023	0					
ANR	1172127	CallExpression	NCAR ( node )		1172023	0					
ANR	1172128	Callee	NCAR		1172023	0					
ANR	1172129	Identifier	NCAR		1172023	0					
ANR	1172130	ArgumentList	node		1172023	1					
ANR	1172131	Argument	node		1172023	0					
ANR	1172132	Identifier	node		1172023	0					
ANR	1172133	Argument	& tmax		1172023	1					
ANR	1172134	UnaryOperationExpression	& tmax		1172023	0					
ANR	1172135	UnaryOperator	&		1172023	0					
ANR	1172136	Identifier	tmax		1172023	1					
ANR	1172137	Argument	env		1172023	2					
ANR	1172138	Identifier	env		1172023	0					
ANR	1172139	IfStatement	if ( r == 0 && * max < tmax )		1172023	1					
ANR	1172140	Condition	r == 0 && * max < tmax	2165:10:49996:50016	1172023	0	True				
ANR	1172141	AndExpression	r == 0 && * max < tmax		1172023	0		&&			
ANR	1172142	EqualityExpression	r == 0		1172023	0		==			
ANR	1172143	Identifier	r		1172023	0					
ANR	1172144	PrimaryExpression	0		1172023	1					
ANR	1172145	RelationalExpression	* max < tmax		1172023	1		<			
ANR	1172146	UnaryOperationExpression	* max		1172023	0					
ANR	1172147	UnaryOperator	*		1172023	0					
ANR	1172148	Identifier	max		1172023	1					
ANR	1172149	Identifier	tmax		1172023	1					
ANR	1172150	ExpressionStatement	* max = tmax	2165:33:50019:50030	1172023	1	True				
ANR	1172151	AssignmentExpression	* max = tmax		1172023	0		=			
ANR	1172152	UnaryOperationExpression	* max		1172023	0					
ANR	1172153	UnaryOperator	*		1172023	0					
ANR	1172154	Identifier	max		1172023	1					
ANR	1172155	Identifier	tmax		1172023	1					
ANR	1172156	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2166:13:50045:50084	1172023	1	True				
ANR	1172157	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1172023	0		&&			
ANR	1172158	EqualityExpression	r == 0		1172023	0		==			
ANR	1172159	Identifier	r		1172023	0					
ANR	1172160	PrimaryExpression	0		1172023	1					
ANR	1172161	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1172023	1					
ANR	1172162	Callee	IS_NOT_NULL		1172023	0					
ANR	1172163	Identifier	IS_NOT_NULL		1172023	0					
ANR	1172164	ArgumentList	node = NCDR ( node )		1172023	1					
ANR	1172165	Argument	node = NCDR ( node )		1172023	0					
ANR	1172166	AssignmentExpression	node = NCDR ( node )		1172023	0		=			
ANR	1172167	Identifier	node		1172023	0					
ANR	1172168	CallExpression	NCDR ( node )		1172023	1					
ANR	1172169	Callee	NCDR		1172023	0					
ANR	1172170	Identifier	NCDR		1172023	0					
ANR	1172171	ArgumentList	node		1172023	1					
ANR	1172172	Argument	node		1172023	0					
ANR	1172173	Identifier	node		1172023	0					
ANR	1172174	BreakStatement	break ;	2167:4:50092:50097	1172023	5	True				
ANR	1172175	Label	case NT_STR :	2169:2:50102:50113	1172023	6	True				
ANR	1172176	Identifier	NT_STR		1172023	0					
ANR	1172177	CompoundStatement		24:6:495:519	1172023	7					
ANR	1172178	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	2171:6:50127:50151	1172023	0	True				
ANR	1172179	IdentifierDecl	* sn = NSTR ( node )		1172023	0					
ANR	1172180	IdentifierDeclType	StrNode *		1172023	0					
ANR	1172181	Identifier	sn		1172023	1					
ANR	1172182	AssignmentExpression	* sn = NSTR ( node )		1172023	2		=			
ANR	1172183	Identifier	sn		1172023	0					
ANR	1172184	CallExpression	NSTR ( node )		1172023	1					
ANR	1172185	Callee	NSTR		1172023	0					
ANR	1172186	Identifier	NSTR		1172023	0					
ANR	1172187	ArgumentList	node		1172023	1					
ANR	1172188	Argument	node		1172023	0					
ANR	1172189	Identifier	node		1172023	0					
ANR	1172190	ExpressionStatement	* max = sn -> end - sn -> s	2172:6:50159:50181	1172023	1	True				
ANR	1172191	AssignmentExpression	* max = sn -> end - sn -> s		1172023	0		=			
ANR	1172192	UnaryOperationExpression	* max		1172023	0					
ANR	1172193	UnaryOperator	*		1172023	0					
ANR	1172194	Identifier	max		1172023	1					
ANR	1172195	AdditiveExpression	sn -> end - sn -> s		1172023	1		-			
ANR	1172196	PtrMemberAccess	sn -> end		1172023	0					
ANR	1172197	Identifier	sn		1172023	0					
ANR	1172198	Identifier	end		1172023	1					
ANR	1172199	PtrMemberAccess	sn -> s		1172023	1					
ANR	1172200	Identifier	sn		1172023	0					
ANR	1172201	Identifier	s		1172023	1					
ANR	1172202	BreakStatement	break ;	2174:4:50193:50198	1172023	8	True				
ANR	1172203	Label	case NT_CTYPE :	2176:2:50203:50216	1172023	9	True				
ANR	1172204	Identifier	NT_CTYPE		1172023	0					
ANR	1172205	ExpressionStatement	* max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )	2177:4:50222:50262	1172023	10	True				
ANR	1172206	AssignmentExpression	* max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1172023	0		=			
ANR	1172207	UnaryOperationExpression	* max		1172023	0					
ANR	1172208	UnaryOperator	*		1172023	0					
ANR	1172209	Identifier	max		1172023	1					
ANR	1172210	CallExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1172023	1					
ANR	1172211	Callee	ONIGENC_MBC_MAXLEN_DIST		1172023	0					
ANR	1172212	Identifier	ONIGENC_MBC_MAXLEN_DIST		1172023	0					
ANR	1172213	ArgumentList	env -> enc		1172023	1					
ANR	1172214	Argument	env -> enc		1172023	0					
ANR	1172215	PtrMemberAccess	env -> enc		1172023	0					
ANR	1172216	Identifier	env		1172023	0					
ANR	1172217	Identifier	enc		1172023	1					
ANR	1172218	BreakStatement	break ;	2178:4:50268:50273	1172023	11	True				
ANR	1172219	Label	case NT_CCLASS :	2180:2:50278:50292	1172023	12	True				
ANR	1172220	Identifier	NT_CCLASS		1172023	0					
ANR	1172221	Label	case NT_CANY :	2181:2:50296:50308	1172023	13	True				
ANR	1172222	Identifier	NT_CANY		1172023	0					
ANR	1172223	ExpressionStatement	* max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )	2182:4:50314:50354	1172023	14	True				
ANR	1172224	AssignmentExpression	* max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1172023	0		=			
ANR	1172225	UnaryOperationExpression	* max		1172023	0					
ANR	1172226	UnaryOperator	*		1172023	0					
ANR	1172227	Identifier	max		1172023	1					
ANR	1172228	CallExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1172023	1					
ANR	1172229	Callee	ONIGENC_MBC_MAXLEN_DIST		1172023	0					
ANR	1172230	Identifier	ONIGENC_MBC_MAXLEN_DIST		1172023	0					
ANR	1172231	ArgumentList	env -> enc		1172023	1					
ANR	1172232	Argument	env -> enc		1172023	0					
ANR	1172233	PtrMemberAccess	env -> enc		1172023	0					
ANR	1172234	Identifier	env		1172023	0					
ANR	1172235	Identifier	enc		1172023	1					
ANR	1172236	BreakStatement	break ;	2183:4:50360:50365	1172023	15	True				
ANR	1172237	Label	case NT_BREF :	2185:2:50370:50382	1172023	16	True				
ANR	1172238	Identifier	NT_BREF		1172023	0					
ANR	1172239	CompoundStatement		43:6:840:866	1172023	17					
ANR	1172240	IdentifierDeclStatement	int i ;	2187:6:50396:50401	1172023	0	True				
ANR	1172241	IdentifierDecl	i		1172023	0					
ANR	1172242	IdentifierDeclType	int		1172023	0					
ANR	1172243	Identifier	i		1172023	1					
ANR	1172244	IdentifierDeclStatement	int * backs ;	2188:6:50409:50419	1172023	1	True				
ANR	1172245	IdentifierDecl	* backs		1172023	0					
ANR	1172246	IdentifierDeclType	int *		1172023	0					
ANR	1172247	Identifier	backs		1172023	1					
ANR	1172248	IdentifierDeclStatement	Node * * nodes = SCANENV_MEM_NODES ( env ) ;	2189:6:50427:50464	1172023	2	True				
ANR	1172249	IdentifierDecl	* * nodes = SCANENV_MEM_NODES ( env )		1172023	0					
ANR	1172250	IdentifierDeclType	Node * *		1172023	0					
ANR	1172251	Identifier	nodes		1172023	1					
ANR	1172252	AssignmentExpression	* * nodes = SCANENV_MEM_NODES ( env )		1172023	2		=			
ANR	1172253	Identifier	nodes		1172023	0					
ANR	1172254	CallExpression	SCANENV_MEM_NODES ( env )		1172023	1					
ANR	1172255	Callee	SCANENV_MEM_NODES		1172023	0					
ANR	1172256	Identifier	SCANENV_MEM_NODES		1172023	0					
ANR	1172257	ArgumentList	env		1172023	1					
ANR	1172258	Argument	env		1172023	0					
ANR	1172259	Identifier	env		1172023	0					
ANR	1172260	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	2190:6:50472:50498	1172023	3	True				
ANR	1172261	IdentifierDecl	* br = NBREF ( node )		1172023	0					
ANR	1172262	IdentifierDeclType	BRefNode *		1172023	0					
ANR	1172263	Identifier	br		1172023	1					
ANR	1172264	AssignmentExpression	* br = NBREF ( node )		1172023	2		=			
ANR	1172265	Identifier	br		1172023	0					
ANR	1172266	CallExpression	NBREF ( node )		1172023	1					
ANR	1172267	Callee	NBREF		1172023	0					
ANR	1172268	Identifier	NBREF		1172023	0					
ANR	1172269	ArgumentList	node		1172023	1					
ANR	1172270	Argument	node		1172023	0					
ANR	1172271	Identifier	node		1172023	0					
ANR	1172272	IfStatement	if ( br -> state & NST_RECURSION )		1172023	4					
ANR	1172273	Condition	br -> state & NST_RECURSION	2191:10:50510:50534	1172023	0	True				
ANR	1172274	BitAndExpression	br -> state & NST_RECURSION		1172023	0		&			
ANR	1172275	PtrMemberAccess	br -> state		1172023	0					
ANR	1172276	Identifier	br		1172023	0					
ANR	1172277	Identifier	state		1172023	1					
ANR	1172278	Identifier	NST_RECURSION		1172023	1					
ANR	1172279	CompoundStatement		44:37:905:905	1172023	1					
ANR	1172280	ExpressionStatement	* max = ONIG_INFINITE_DISTANCE	2192:1:50540:50569	1172023	0	True				
ANR	1172281	AssignmentExpression	* max = ONIG_INFINITE_DISTANCE		1172023	0		=			
ANR	1172282	UnaryOperationExpression	* max		1172023	0					
ANR	1172283	UnaryOperator	*		1172023	0					
ANR	1172284	Identifier	max		1172023	1					
ANR	1172285	Identifier	ONIG_INFINITE_DISTANCE		1172023	1					
ANR	1172286	BreakStatement	break ;	2193:1:50572:50577	1172023	1	True				
ANR	1172287	ExpressionStatement	backs = BACKREFS_P ( br )	2195:6:50593:50615	1172023	5	True				
ANR	1172288	AssignmentExpression	backs = BACKREFS_P ( br )		1172023	0		=			
ANR	1172289	Identifier	backs		1172023	0					
ANR	1172290	CallExpression	BACKREFS_P ( br )		1172023	1					
ANR	1172291	Callee	BACKREFS_P		1172023	0					
ANR	1172292	Identifier	BACKREFS_P		1172023	0					
ANR	1172293	ArgumentList	br		1172023	1					
ANR	1172294	Argument	br		1172023	0					
ANR	1172295	Identifier	br		1172023	0					
ANR	1172296	ForStatement	for ( i = 0 ; i < br -> back_num ; i ++ )		1172023	6					
ANR	1172297	ForInit	i = 0 ;	2196:11:50628:50633	1172023	0	True				
ANR	1172298	AssignmentExpression	i = 0		1172023	0		=			
ANR	1172299	Identifier	i		1172023	0					
ANR	1172300	PrimaryExpression	0		1172023	1					
ANR	1172301	Condition	i < br -> back_num	2196:18:50635:50650	1172023	1	True				
ANR	1172302	RelationalExpression	i < br -> back_num		1172023	0		<			
ANR	1172303	Identifier	i		1172023	0					
ANR	1172304	PtrMemberAccess	br -> back_num		1172023	1					
ANR	1172305	Identifier	br		1172023	0					
ANR	1172306	Identifier	back_num		1172023	1					
ANR	1172307	PostIncDecOperationExpression	i ++	2196:36:50653:50655	1172023	2	True				
ANR	1172308	Identifier	i		1172023	0					
ANR	1172309	IncDec	++		1172023	1					
ANR	1172310	CompoundStatement		49:41:1026:1026	1172023	3					
ANR	1172311	IfStatement	if ( backs [ i ] > env -> num_mem )		1172023	0					
ANR	1172312	Condition	backs [ i ] > env -> num_mem	2197:5:50665:50687	1172023	0	True				
ANR	1172313	RelationalExpression	backs [ i ] > env -> num_mem		1172023	0		>			
ANR	1172314	ArrayIndexing	backs [ i ]		1172023	0					
ANR	1172315	Identifier	backs		1172023	0					
ANR	1172316	Identifier	i		1172023	1					
ANR	1172317	PtrMemberAccess	env -> num_mem		1172023	1					
ANR	1172318	Identifier	env		1172023	0					
ANR	1172319	Identifier	num_mem		1172023	1					
ANR	1172320	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	2197:31:50691:50721	1172023	1	True				
ANR	1172321	Identifier	ONIGERR_INVALID_BACKREF		1172023	0					
ANR	1172322	ExpressionStatement	"r = get_max_match_length ( nodes [ backs [ i ] ] , & tmax , env )"	2198:1:50724:50777	1172023	1	True				
ANR	1172323	AssignmentExpression	"r = get_max_match_length ( nodes [ backs [ i ] ] , & tmax , env )"		1172023	0		=			
ANR	1172324	Identifier	r		1172023	0					
ANR	1172325	CallExpression	"get_max_match_length ( nodes [ backs [ i ] ] , & tmax , env )"		1172023	1					
ANR	1172326	Callee	get_max_match_length		1172023	0					
ANR	1172327	Identifier	get_max_match_length		1172023	0					
ANR	1172328	ArgumentList	nodes [ backs [ i ] ]		1172023	1					
ANR	1172329	Argument	nodes [ backs [ i ] ]		1172023	0					
ANR	1172330	ArrayIndexing	nodes [ backs [ i ] ]		1172023	0					
ANR	1172331	Identifier	nodes		1172023	0					
ANR	1172332	ArrayIndexing	backs [ i ]		1172023	1					
ANR	1172333	Identifier	backs		1172023	0					
ANR	1172334	Identifier	i		1172023	1					
ANR	1172335	Argument	& tmax		1172023	1					
ANR	1172336	UnaryOperationExpression	& tmax		1172023	0					
ANR	1172337	UnaryOperator	&		1172023	0					
ANR	1172338	Identifier	tmax		1172023	1					
ANR	1172339	Argument	env		1172023	2					
ANR	1172340	Identifier	env		1172023	0					
ANR	1172341	IfStatement	if ( r != 0 )		1172023	2					
ANR	1172342	Condition	r != 0	2199:5:50784:50789	1172023	0	True				
ANR	1172343	EqualityExpression	r != 0		1172023	0		!=			
ANR	1172344	Identifier	r		1172023	0					
ANR	1172345	PrimaryExpression	0		1172023	1					
ANR	1172346	BreakStatement	break ;	2199:13:50792:50797	1172023	1	True				
ANR	1172347	IfStatement	if ( * max < tmax )		1172023	3					
ANR	1172348	Condition	* max < tmax	2200:5:50804:50814	1172023	0	True				
ANR	1172349	RelationalExpression	* max < tmax		1172023	0		<			
ANR	1172350	UnaryOperationExpression	* max		1172023	0					
ANR	1172351	UnaryOperator	*		1172023	0					
ANR	1172352	Identifier	max		1172023	1					
ANR	1172353	Identifier	tmax		1172023	1					
ANR	1172354	ExpressionStatement	* max = tmax	2200:18:50817:50828	1172023	1	True				
ANR	1172355	AssignmentExpression	* max = tmax		1172023	0		=			
ANR	1172356	UnaryOperationExpression	* max		1172023	0					
ANR	1172357	UnaryOperator	*		1172023	0					
ANR	1172358	Identifier	max		1172023	1					
ANR	1172359	Identifier	tmax		1172023	1					
ANR	1172360	BreakStatement	break ;	2203:4:50848:50853	1172023	18	True				
ANR	1172361	Label	case NT_CALL :	2206:2:50881:50893	1172023	19	True				
ANR	1172362	Identifier	NT_CALL		1172023	0					
ANR	1172363	IfStatement	if ( ! IS_CALL_RECURSION ( NCALL ( node ) ) )		1172023	20					
ANR	1172364	Condition	! IS_CALL_RECURSION ( NCALL ( node ) )	2207:8:50903:50934	1172023	0	True				
ANR	1172365	UnaryOperationExpression	! IS_CALL_RECURSION ( NCALL ( node ) )		1172023	0					
ANR	1172366	UnaryOperator	!		1172023	0					
ANR	1172367	CallExpression	IS_CALL_RECURSION ( NCALL ( node ) )		1172023	1					
ANR	1172368	Callee	IS_CALL_RECURSION		1172023	0					
ANR	1172369	Identifier	IS_CALL_RECURSION		1172023	0					
ANR	1172370	ArgumentList	NCALL ( node )		1172023	1					
ANR	1172371	Argument	NCALL ( node )		1172023	0					
ANR	1172372	CallExpression	NCALL ( node )		1172023	0					
ANR	1172373	Callee	NCALL		1172023	0					
ANR	1172374	Identifier	NCALL		1172023	0					
ANR	1172375	ArgumentList	node		1172023	1					
ANR	1172376	Argument	node		1172023	0					
ANR	1172377	Identifier	node		1172023	0					
ANR	1172378	ExpressionStatement	"r = get_max_match_length ( NCALL ( node ) -> target , max , env )"	2208:6:50943:50998	1172023	1	True				
ANR	1172379	AssignmentExpression	"r = get_max_match_length ( NCALL ( node ) -> target , max , env )"		1172023	0		=			
ANR	1172380	Identifier	r		1172023	0					
ANR	1172381	CallExpression	"get_max_match_length ( NCALL ( node ) -> target , max , env )"		1172023	1					
ANR	1172382	Callee	get_max_match_length		1172023	0					
ANR	1172383	Identifier	get_max_match_length		1172023	0					
ANR	1172384	ArgumentList	NCALL ( node ) -> target		1172023	1					
ANR	1172385	Argument	NCALL ( node ) -> target		1172023	0					
ANR	1172386	PtrMemberAccess	NCALL ( node ) -> target		1172023	0					
ANR	1172387	CallExpression	NCALL ( node )		1172023	0					
ANR	1172388	Callee	NCALL		1172023	0					
ANR	1172389	Identifier	NCALL		1172023	0					
ANR	1172390	ArgumentList	node		1172023	1					
ANR	1172391	Argument	node		1172023	0					
ANR	1172392	Identifier	node		1172023	0					
ANR	1172393	Identifier	target		1172023	1					
ANR	1172394	Argument	max		1172023	1					
ANR	1172395	Identifier	max		1172023	0					
ANR	1172396	Argument	env		1172023	2					
ANR	1172397	Identifier	env		1172023	0					
ANR	1172398	ElseStatement	else		1172023	0					
ANR	1172399	ExpressionStatement	* max = ONIG_INFINITE_DISTANCE	2210:6:51015:51044	1172023	0	True				
ANR	1172400	AssignmentExpression	* max = ONIG_INFINITE_DISTANCE		1172023	0		=			
ANR	1172401	UnaryOperationExpression	* max		1172023	0					
ANR	1172402	UnaryOperator	*		1172023	0					
ANR	1172403	Identifier	max		1172023	1					
ANR	1172404	Identifier	ONIG_INFINITE_DISTANCE		1172023	1					
ANR	1172405	BreakStatement	break ;	2211:4:51050:51055	1172023	21	True				
ANR	1172406	Label	case NT_QTFR :	2214:2:51067:51079	1172023	22	True				
ANR	1172407	Identifier	NT_QTFR		1172023	0					
ANR	1172408	CompoundStatement		69:6:1461:1487	1172023	23					
ANR	1172409	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	2216:6:51093:51119	1172023	0	True				
ANR	1172410	IdentifierDecl	* qn = NQTFR ( node )		1172023	0					
ANR	1172411	IdentifierDeclType	QtfrNode *		1172023	0					
ANR	1172412	Identifier	qn		1172023	1					
ANR	1172413	AssignmentExpression	* qn = NQTFR ( node )		1172023	2		=			
ANR	1172414	Identifier	qn		1172023	0					
ANR	1172415	CallExpression	NQTFR ( node )		1172023	1					
ANR	1172416	Callee	NQTFR		1172023	0					
ANR	1172417	Identifier	NQTFR		1172023	0					
ANR	1172418	ArgumentList	node		1172023	1					
ANR	1172419	Argument	node		1172023	0					
ANR	1172420	Identifier	node		1172023	0					
ANR	1172421	IfStatement	if ( qn -> upper != 0 )		1172023	1					
ANR	1172422	Condition	qn -> upper != 0	2218:10:51132:51145	1172023	0	True				
ANR	1172423	EqualityExpression	qn -> upper != 0		1172023	0		!=			
ANR	1172424	PtrMemberAccess	qn -> upper		1172023	0					
ANR	1172425	Identifier	qn		1172023	0					
ANR	1172426	Identifier	upper		1172023	1					
ANR	1172427	PrimaryExpression	0		1172023	1					
ANR	1172428	CompoundStatement		71:26:1516:1516	1172023	1					
ANR	1172429	ExpressionStatement	"r = get_max_match_length ( qn -> target , max , env )"	2219:1:51151:51197	1172023	0	True				
ANR	1172430	AssignmentExpression	"r = get_max_match_length ( qn -> target , max , env )"		1172023	0		=			
ANR	1172431	Identifier	r		1172023	0					
ANR	1172432	CallExpression	"get_max_match_length ( qn -> target , max , env )"		1172023	1					
ANR	1172433	Callee	get_max_match_length		1172023	0					
ANR	1172434	Identifier	get_max_match_length		1172023	0					
ANR	1172435	ArgumentList	qn -> target		1172023	1					
ANR	1172436	Argument	qn -> target		1172023	0					
ANR	1172437	PtrMemberAccess	qn -> target		1172023	0					
ANR	1172438	Identifier	qn		1172023	0					
ANR	1172439	Identifier	target		1172023	1					
ANR	1172440	Argument	max		1172023	1					
ANR	1172441	Identifier	max		1172023	0					
ANR	1172442	Argument	env		1172023	2					
ANR	1172443	Identifier	env		1172023	0					
ANR	1172444	IfStatement	if ( r == 0 && * max != 0 )		1172023	1					
ANR	1172445	Condition	r == 0 && * max != 0	2220:5:51204:51222	1172023	0	True				
ANR	1172446	AndExpression	r == 0 && * max != 0		1172023	0		&&			
ANR	1172447	EqualityExpression	r == 0		1172023	0		==			
ANR	1172448	Identifier	r		1172023	0					
ANR	1172449	PrimaryExpression	0		1172023	1					
ANR	1172450	EqualityExpression	* max != 0		1172023	1		!=			
ANR	1172451	UnaryOperationExpression	* max		1172023	0					
ANR	1172452	UnaryOperator	*		1172023	0					
ANR	1172453	Identifier	max		1172023	1					
ANR	1172454	PrimaryExpression	0		1172023	1					
ANR	1172455	CompoundStatement		73:26:1593:1593	1172023	1					
ANR	1172456	IfStatement	if ( ! IS_REPEAT_INFINITE ( qn -> upper ) )		1172023	0					
ANR	1172457	Condition	! IS_REPEAT_INFINITE ( qn -> upper )	2221:7:51234:51264	1172023	0	True				
ANR	1172458	UnaryOperationExpression	! IS_REPEAT_INFINITE ( qn -> upper )		1172023	0					
ANR	1172459	UnaryOperator	!		1172023	0					
ANR	1172460	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1172023	1					
ANR	1172461	Callee	IS_REPEAT_INFINITE		1172023	0					
ANR	1172462	Identifier	IS_REPEAT_INFINITE		1172023	0					
ANR	1172463	ArgumentList	qn -> upper		1172023	1					
ANR	1172464	Argument	qn -> upper		1172023	0					
ANR	1172465	PtrMemberAccess	qn -> upper		1172023	0					
ANR	1172466	Identifier	qn		1172023	0					
ANR	1172467	Identifier	upper		1172023	1					
ANR	1172468	ExpressionStatement	"* max = distance_multiply ( * max , qn -> upper )"	2222:5:51272:51313	1172023	1	True				
ANR	1172469	AssignmentExpression	"* max = distance_multiply ( * max , qn -> upper )"		1172023	0		=			
ANR	1172470	UnaryOperationExpression	* max		1172023	0					
ANR	1172471	UnaryOperator	*		1172023	0					
ANR	1172472	Identifier	max		1172023	1					
ANR	1172473	CallExpression	"distance_multiply ( * max , qn -> upper )"		1172023	1					
ANR	1172474	Callee	distance_multiply		1172023	0					
ANR	1172475	Identifier	distance_multiply		1172023	0					
ANR	1172476	ArgumentList	* max		1172023	1					
ANR	1172477	Argument	* max		1172023	0					
ANR	1172478	UnaryOperationExpression	* max		1172023	0					
ANR	1172479	UnaryOperator	*		1172023	0					
ANR	1172480	Identifier	max		1172023	1					
ANR	1172481	Argument	qn -> upper		1172023	1					
ANR	1172482	PtrMemberAccess	qn -> upper		1172023	0					
ANR	1172483	Identifier	qn		1172023	0					
ANR	1172484	Identifier	upper		1172023	1					
ANR	1172485	ElseStatement	else		1172023	0					
ANR	1172486	ExpressionStatement	* max = ONIG_INFINITE_DISTANCE	2224:5:51328:51357	1172023	0	True				
ANR	1172487	AssignmentExpression	* max = ONIG_INFINITE_DISTANCE		1172023	0		=			
ANR	1172488	UnaryOperationExpression	* max		1172023	0					
ANR	1172489	UnaryOperator	*		1172023	0					
ANR	1172490	Identifier	max		1172023	1					
ANR	1172491	Identifier	ONIG_INFINITE_DISTANCE		1172023	1					
ANR	1172492	BreakStatement	break ;	2228:4:51380:51385	1172023	24	True				
ANR	1172493	Label	case NT_ENCLOSE :	2230:2:51390:51405	1172023	25	True				
ANR	1172494	Identifier	NT_ENCLOSE		1172023	0					
ANR	1172495	CompoundStatement		85:6:1787:1819	1172023	26					
ANR	1172496	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2232:6:51419:51451	1172023	0	True				
ANR	1172497	IdentifierDecl	* en = NENCLOSE ( node )		1172023	0					
ANR	1172498	IdentifierDeclType	EncloseNode *		1172023	0					
ANR	1172499	Identifier	en		1172023	1					
ANR	1172500	AssignmentExpression	* en = NENCLOSE ( node )		1172023	2		=			
ANR	1172501	Identifier	en		1172023	0					
ANR	1172502	CallExpression	NENCLOSE ( node )		1172023	1					
ANR	1172503	Callee	NENCLOSE		1172023	0					
ANR	1172504	Identifier	NENCLOSE		1172023	0					
ANR	1172505	ArgumentList	node		1172023	1					
ANR	1172506	Argument	node		1172023	0					
ANR	1172507	Identifier	node		1172023	0					
ANR	1172508	SwitchStatement	switch ( en -> type )		1172023	1					
ANR	1172509	Condition	en -> type	2233:14:51467:51474	1172023	0	True				
ANR	1172510	PtrMemberAccess	en -> type		1172023	0					
ANR	1172511	Identifier	en		1172023	0					
ANR	1172512	Identifier	type		1172023	1					
ANR	1172513	CompoundStatement		86:24:1845:1845	1172023	1					
ANR	1172514	Label	case ENCLOSE_MEMORY :	2234:6:51485:51504	1172023	0	True				
ANR	1172515	Identifier	ENCLOSE_MEMORY		1172023	0					
ANR	1172516	IfStatement	if ( IS_ENCLOSE_MAX_FIXED ( en ) )		1172023	1					
ANR	1172517	Condition	IS_ENCLOSE_MAX_FIXED ( en )	2236:5:51534:51557	1172023	0	True				
ANR	1172518	CallExpression	IS_ENCLOSE_MAX_FIXED ( en )		1172023	0					
ANR	1172519	Callee	IS_ENCLOSE_MAX_FIXED		1172023	0					
ANR	1172520	Identifier	IS_ENCLOSE_MAX_FIXED		1172023	0					
ANR	1172521	ArgumentList	en		1172023	1					
ANR	1172522	Argument	en		1172023	0					
ANR	1172523	Identifier	en		1172023	0					
ANR	1172524	ExpressionStatement	* max = en -> max_len	2237:3:51563:51581	1172023	1	True				
ANR	1172525	AssignmentExpression	* max = en -> max_len		1172023	0		=			
ANR	1172526	UnaryOperationExpression	* max		1172023	0					
ANR	1172527	UnaryOperator	*		1172023	0					
ANR	1172528	Identifier	max		1172023	1					
ANR	1172529	PtrMemberAccess	en -> max_len		1172023	1					
ANR	1172530	Identifier	en		1172023	0					
ANR	1172531	Identifier	max_len		1172023	1					
ANR	1172532	ElseStatement	else		1172023	0					
ANR	1172533	CompoundStatement		91:6:1957:1957	1172023	0					
ANR	1172534	ExpressionStatement	"r = get_max_match_length ( en -> target , max , env )"	2239:3:51594:51640	1172023	0	True				
ANR	1172535	AssignmentExpression	"r = get_max_match_length ( en -> target , max , env )"		1172023	0		=			
ANR	1172536	Identifier	r		1172023	0					
ANR	1172537	CallExpression	"get_max_match_length ( en -> target , max , env )"		1172023	1					
ANR	1172538	Callee	get_max_match_length		1172023	0					
ANR	1172539	Identifier	get_max_match_length		1172023	0					
ANR	1172540	ArgumentList	en -> target		1172023	1					
ANR	1172541	Argument	en -> target		1172023	0					
ANR	1172542	PtrMemberAccess	en -> target		1172023	0					
ANR	1172543	Identifier	en		1172023	0					
ANR	1172544	Identifier	target		1172023	1					
ANR	1172545	Argument	max		1172023	1					
ANR	1172546	Identifier	max		1172023	0					
ANR	1172547	Argument	env		1172023	2					
ANR	1172548	Identifier	env		1172023	0					
ANR	1172549	IfStatement	if ( r == 0 )		1172023	1					
ANR	1172550	Condition	r == 0	2240:7:51649:51654	1172023	0	True				
ANR	1172551	EqualityExpression	r == 0		1172023	0		==			
ANR	1172552	Identifier	r		1172023	0					
ANR	1172553	PrimaryExpression	0		1172023	1					
ANR	1172554	CompoundStatement		93:15:2025:2025	1172023	1					
ANR	1172555	ExpressionStatement	en -> max_len = * max	2241:5:51664:51682	1172023	0	True				
ANR	1172556	AssignmentExpression	en -> max_len = * max		1172023	0		=			
ANR	1172557	PtrMemberAccess	en -> max_len		1172023	0					
ANR	1172558	Identifier	en		1172023	0					
ANR	1172559	Identifier	max_len		1172023	1					
ANR	1172560	UnaryOperationExpression	* max		1172023	1					
ANR	1172561	UnaryOperator	*		1172023	0					
ANR	1172562	Identifier	max		1172023	1					
ANR	1172563	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_MAX_FIXED )"	2242:5:51689:51728	1172023	1	True				
ANR	1172564	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_MAX_FIXED )"		1172023	0					
ANR	1172565	Callee	SET_ENCLOSE_STATUS		1172023	0					
ANR	1172566	Identifier	SET_ENCLOSE_STATUS		1172023	0					
ANR	1172567	ArgumentList	node		1172023	1					
ANR	1172568	Argument	node		1172023	0					
ANR	1172569	Identifier	node		1172023	0					
ANR	1172570	Argument	NST_MAX_FIXED		1172023	1					
ANR	1172571	Identifier	NST_MAX_FIXED		1172023	0					
ANR	1172572	BreakStatement	break ;	2245:1:51739:51744	1172023	2	True				
ANR	1172573	Label	case ENCLOSE_OPTION :	2247:6:51759:51778	1172023	3	True				
ANR	1172574	Identifier	ENCLOSE_OPTION		1172023	0					
ANR	1172575	Label	case ENCLOSE_STOP_BACKTRACK :	2248:6:51786:51813	1172023	4	True				
ANR	1172576	Identifier	ENCLOSE_STOP_BACKTRACK		1172023	0					
ANR	1172577	ExpressionStatement	"r = get_max_match_length ( en -> target , max , env )"	2249:1:51816:51862	1172023	5	True				
ANR	1172578	AssignmentExpression	"r = get_max_match_length ( en -> target , max , env )"		1172023	0		=			
ANR	1172579	Identifier	r		1172023	0					
ANR	1172580	CallExpression	"get_max_match_length ( en -> target , max , env )"		1172023	1					
ANR	1172581	Callee	get_max_match_length		1172023	0					
ANR	1172582	Identifier	get_max_match_length		1172023	0					
ANR	1172583	ArgumentList	en -> target		1172023	1					
ANR	1172584	Argument	en -> target		1172023	0					
ANR	1172585	PtrMemberAccess	en -> target		1172023	0					
ANR	1172586	Identifier	en		1172023	0					
ANR	1172587	Identifier	target		1172023	1					
ANR	1172588	Argument	max		1172023	1					
ANR	1172589	Identifier	max		1172023	0					
ANR	1172590	Argument	env		1172023	2					
ANR	1172591	Identifier	env		1172023	0					
ANR	1172592	BreakStatement	break ;	2250:1:51865:51870	1172023	6	True				
ANR	1172593	BreakStatement	break ;	2253:4:51890:51895	1172023	27	True				
ANR	1172594	Label	case NT_ANCHOR :	2255:2:51900:51914	1172023	28	True				
ANR	1172595	Identifier	NT_ANCHOR		1172023	0					
ANR	1172596	Label	default :	2256:2:51918:51925	1172023	29	True				
ANR	1172597	Identifier	default		1172023	0					
ANR	1172598	BreakStatement	break ;	2257:4:51931:51936	1172023	30	True				
ANR	1172599	ReturnStatement	return r ;	2260:2:51945:51953	1172023	4	True				
ANR	1172600	Identifier	r		1172023	0					
ANR	1172601	ReturnType	static int		1172023	1					
ANR	1172602	Identifier	get_max_match_length		1172023	2					
ANR	1172603	ParameterList	"Node * node , OnigDistance * max , ScanEnv * env"		1172023	3					
ANR	1172604	Parameter	Node * node	2147:21:49586:49595	1172023	0	True				
ANR	1172605	ParameterType	Node *		1172023	0					
ANR	1172606	Identifier	node		1172023	1					
ANR	1172607	Parameter	OnigDistance * max	2147:33:49598:49614	1172023	1	True				
ANR	1172608	ParameterType	OnigDistance *		1172023	0					
ANR	1172609	Identifier	max		1172023	1					
ANR	1172610	Parameter	ScanEnv * env	2147:52:49617:49628	1172023	2	True				
ANR	1172611	ParameterType	ScanEnv *		1172023	0					
ANR	1172612	Identifier	env		1172023	1					
ANR	1172613	CFGEntryNode	ENTRY		1172023		True				
ANR	1172614	CFGExitNode	EXIT		1172023		True				
ANR	1172615	Symbol	NCAR		1172023						
ANR	1172616	Symbol	* sn		1172023						
ANR	1172617	Symbol	br -> back_num		1172023						
ANR	1172618	Symbol	* backs		1172023						
ANR	1172619	Symbol	NQTFR		1172023						
ANR	1172620	Symbol	* max		1172023						
ANR	1172621	Symbol	ONIG_INFINITE_DISTANCE		1172023						
ANR	1172622	Symbol	sn -> s		1172023						
ANR	1172623	Symbol	* br		1172023						
ANR	1172624	Symbol	en -> type		1172023						
ANR	1172625	Symbol	ONIGENC_MBC_MAXLEN_DIST		1172023						
ANR	1172626	Symbol	* nodes		1172023						
ANR	1172627	Symbol	SCANENV_MEM_NODES		1172023						
ANR	1172628	Symbol	IS_REPEAT_INFINITE		1172023						
ANR	1172629	Symbol	qn		1172023						
ANR	1172630	Symbol	* * i		1172023						
ANR	1172631	Symbol	IS_ENCLOSE_MAX_FIXED		1172023						
ANR	1172632	Symbol	NCDR		1172023						
ANR	1172633	Symbol	NSTR		1172023						
ANR	1172634	Symbol	* env		1172023						
ANR	1172635	Symbol	en		1172023						
ANR	1172636	Symbol	qn -> target		1172023						
ANR	1172637	Symbol	distance_multiply		1172023						
ANR	1172638	Symbol	node		1172023						
ANR	1172639	Symbol	qn -> upper		1172023						
ANR	1172640	Symbol	en -> max_len		1172023						
ANR	1172641	Symbol	get_max_match_length		1172023						
ANR	1172642	Symbol	BACKREFS_P		1172023						
ANR	1172643	Symbol	IS_CALL_RECURSION		1172023						
ANR	1172644	Symbol	* qn		1172023						
ANR	1172645	Symbol	IS_NOT_NULL		1172023						
ANR	1172646	Symbol	ONIGERR_INVALID_BACKREF		1172023						
ANR	1172647	Symbol	tmax		1172023						
ANR	1172648	Symbol	NCALL		1172023						
ANR	1172649	Symbol	NST_MAX_FIXED		1172023						
ANR	1172650	Symbol	env -> enc		1172023						
ANR	1172651	Symbol	distance_add		1172023						
ANR	1172652	Symbol	* en		1172023						
ANR	1172653	Symbol	br		1172023						
ANR	1172654	Symbol	* * backs		1172023						
ANR	1172655	Symbol	NBREF		1172023						
ANR	1172656	Symbol	NST_RECURSION		1172023						
ANR	1172657	Symbol	NENCLOSE		1172023						
ANR	1172658	Symbol	NCALL ( node ) -> target		1172023						
ANR	1172659	Symbol	sn		1172023						
ANR	1172660	Symbol	sn -> end		1172023						
ANR	1172661	Symbol	max		1172023						
ANR	1172662	Symbol	env -> num_mem		1172023						
ANR	1172663	Symbol	i		1172023						
ANR	1172664	Symbol	env		1172023						
ANR	1172665	Symbol	r		1172023						
ANR	1172666	Symbol	nodes		1172023						
ANR	1172667	Symbol	* i		1172023						
ANR	1172668	Symbol	en -> target		1172023						
ANR	1172669	Symbol	br -> state		1172023						
ANR	1172670	Symbol	NTYPE		1172023						
ANR	1172671	Symbol	& tmax		1172023						
ANR	1172672	Symbol	* NCALL		1172023						
ANR	1172673	Symbol	backs		1172023						
ANR	1172674	Function	get_char_length_tree1	2267:0:52076:54341							
ANR	1172675	FunctionDef	"get_char_length_tree1 (Node * node , regex_t * reg , int * len , int level)"		1172674	0					
ANR	1172676	CompoundStatement		2269:0:52156:54341	1172674	0					
ANR	1172677	IdentifierDeclStatement	int tlen ;	2270:2:52160:52168	1172674	0	True				
ANR	1172678	IdentifierDecl	tlen		1172674	0					
ANR	1172679	IdentifierDeclType	int		1172674	0					
ANR	1172680	Identifier	tlen		1172674	1					
ANR	1172681	IdentifierDeclStatement	int r = 0 ;	2271:2:52172:52181	1172674	1	True				
ANR	1172682	IdentifierDecl	r = 0		1172674	0					
ANR	1172683	IdentifierDeclType	int		1172674	0					
ANR	1172684	Identifier	r		1172674	1					
ANR	1172685	AssignmentExpression	r = 0		1172674	2		=			
ANR	1172686	Identifier	r		1172674	0					
ANR	1172687	PrimaryExpression	0		1172674	1					
ANR	1172688	ExpressionStatement	level ++	2273:2:52186:52193	1172674	2	True				
ANR	1172689	PostIncDecOperationExpression	level ++		1172674	0					
ANR	1172690	Identifier	level		1172674	0					
ANR	1172691	IncDec	++		1172674	1					
ANR	1172692	ExpressionStatement	* len = 0	2274:2:52197:52205	1172674	3	True				
ANR	1172693	AssignmentExpression	* len = 0		1172674	0		=			
ANR	1172694	UnaryOperationExpression	* len		1172674	0					
ANR	1172695	UnaryOperator	*		1172674	0					
ANR	1172696	Identifier	len		1172674	1					
ANR	1172697	PrimaryExpression	0		1172674	1					
ANR	1172698	SwitchStatement	switch ( NTYPE ( node ) )		1172674	4					
ANR	1172699	Condition	NTYPE ( node )	2275:10:52217:52227	1172674	0	True				
ANR	1172700	CallExpression	NTYPE ( node )		1172674	0					
ANR	1172701	Callee	NTYPE		1172674	0					
ANR	1172702	Identifier	NTYPE		1172674	0					
ANR	1172703	ArgumentList	node		1172674	1					
ANR	1172704	Argument	node		1172674	0					
ANR	1172705	Identifier	node		1172674	0					
ANR	1172706	CompoundStatement		7:23:73:73	1172674	1					
ANR	1172707	Label	case NT_LIST :	2276:2:52234:52246	1172674	0	True				
ANR	1172708	Identifier	NT_LIST		1172674	0					
ANR	1172709	DoStatement	do		1172674	1					
ANR	1172710	CompoundStatement		9:7:98:98	1172674	0					
ANR	1172711	ExpressionStatement	"r = get_char_length_tree1 ( NCAR ( node ) , reg , & tlen , level )"	2278:6:52263:52319	1172674	0	True				
ANR	1172712	AssignmentExpression	"r = get_char_length_tree1 ( NCAR ( node ) , reg , & tlen , level )"		1172674	0		=			
ANR	1172713	Identifier	r		1172674	0					
ANR	1172714	CallExpression	"get_char_length_tree1 ( NCAR ( node ) , reg , & tlen , level )"		1172674	1					
ANR	1172715	Callee	get_char_length_tree1		1172674	0					
ANR	1172716	Identifier	get_char_length_tree1		1172674	0					
ANR	1172717	ArgumentList	NCAR ( node )		1172674	1					
ANR	1172718	Argument	NCAR ( node )		1172674	0					
ANR	1172719	CallExpression	NCAR ( node )		1172674	0					
ANR	1172720	Callee	NCAR		1172674	0					
ANR	1172721	Identifier	NCAR		1172674	0					
ANR	1172722	ArgumentList	node		1172674	1					
ANR	1172723	Argument	node		1172674	0					
ANR	1172724	Identifier	node		1172674	0					
ANR	1172725	Argument	reg		1172674	1					
ANR	1172726	Identifier	reg		1172674	0					
ANR	1172727	Argument	& tlen		1172674	2					
ANR	1172728	UnaryOperationExpression	& tlen		1172674	0					
ANR	1172729	UnaryOperator	&		1172674	0					
ANR	1172730	Identifier	tlen		1172674	1					
ANR	1172731	Argument	level		1172674	3					
ANR	1172732	Identifier	level		1172674	0					
ANR	1172733	IfStatement	if ( r == 0 )		1172674	1					
ANR	1172734	Condition	r == 0	2279:10:52331:52336	1172674	0	True				
ANR	1172735	EqualityExpression	r == 0		1172674	0		==			
ANR	1172736	Identifier	r		1172674	0					
ANR	1172737	PrimaryExpression	0		1172674	1					
ANR	1172738	ExpressionStatement	"* len = distance_add ( * len , tlen )"	2280:1:52340:52371	1172674	1	True				
ANR	1172739	AssignmentExpression	"* len = distance_add ( * len , tlen )"		1172674	0		=			
ANR	1172740	UnaryOperationExpression	* len		1172674	0					
ANR	1172741	UnaryOperator	*		1172674	0					
ANR	1172742	Identifier	len		1172674	1					
ANR	1172743	CallExpression	"distance_add ( * len , tlen )"		1172674	1					
ANR	1172744	Callee	distance_add		1172674	0					
ANR	1172745	Identifier	distance_add		1172674	0					
ANR	1172746	ArgumentList	* len		1172674	1					
ANR	1172747	Argument	* len		1172674	0					
ANR	1172748	UnaryOperationExpression	* len		1172674	0					
ANR	1172749	UnaryOperator	*		1172674	0					
ANR	1172750	Identifier	len		1172674	1					
ANR	1172751	Argument	tlen		1172674	1					
ANR	1172752	Identifier	tlen		1172674	0					
ANR	1172753	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2281:13:52386:52425	1172674	1	True				
ANR	1172754	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1172674	0		&&			
ANR	1172755	EqualityExpression	r == 0		1172674	0		==			
ANR	1172756	Identifier	r		1172674	0					
ANR	1172757	PrimaryExpression	0		1172674	1					
ANR	1172758	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1172674	1					
ANR	1172759	Callee	IS_NOT_NULL		1172674	0					
ANR	1172760	Identifier	IS_NOT_NULL		1172674	0					
ANR	1172761	ArgumentList	node = NCDR ( node )		1172674	1					
ANR	1172762	Argument	node = NCDR ( node )		1172674	0					
ANR	1172763	AssignmentExpression	node = NCDR ( node )		1172674	0		=			
ANR	1172764	Identifier	node		1172674	0					
ANR	1172765	CallExpression	NCDR ( node )		1172674	1					
ANR	1172766	Callee	NCDR		1172674	0					
ANR	1172767	Identifier	NCDR		1172674	0					
ANR	1172768	ArgumentList	node		1172674	1					
ANR	1172769	Argument	node		1172674	0					
ANR	1172770	Identifier	node		1172674	0					
ANR	1172771	BreakStatement	break ;	2282:4:52433:52438	1172674	2	True				
ANR	1172772	Label	case NT_ALT :	2284:2:52443:52454	1172674	3	True				
ANR	1172773	Identifier	NT_ALT		1172674	0					
ANR	1172774	CompoundStatement		19:6:328:342	1172674	4					
ANR	1172775	IdentifierDeclStatement	int tlen2 ;	2286:6:52468:52477	1172674	0	True				
ANR	1172776	IdentifierDecl	tlen2		1172674	0					
ANR	1172777	IdentifierDeclType	int		1172674	0					
ANR	1172778	Identifier	tlen2		1172674	1					
ANR	1172779	IdentifierDeclStatement	int varlen = 0 ;	2287:6:52485:52499	1172674	1	True				
ANR	1172780	IdentifierDecl	varlen = 0		1172674	0					
ANR	1172781	IdentifierDeclType	int		1172674	0					
ANR	1172782	Identifier	varlen		1172674	1					
ANR	1172783	AssignmentExpression	varlen = 0		1172674	2		=			
ANR	1172784	Identifier	varlen		1172674	0					
ANR	1172785	PrimaryExpression	0		1172674	1					
ANR	1172786	ExpressionStatement	"r = get_char_length_tree1 ( NCAR ( node ) , reg , & tlen , level )"	2289:6:52508:52564	1172674	2	True				
ANR	1172787	AssignmentExpression	"r = get_char_length_tree1 ( NCAR ( node ) , reg , & tlen , level )"		1172674	0		=			
ANR	1172788	Identifier	r		1172674	0					
ANR	1172789	CallExpression	"get_char_length_tree1 ( NCAR ( node ) , reg , & tlen , level )"		1172674	1					
ANR	1172790	Callee	get_char_length_tree1		1172674	0					
ANR	1172791	Identifier	get_char_length_tree1		1172674	0					
ANR	1172792	ArgumentList	NCAR ( node )		1172674	1					
ANR	1172793	Argument	NCAR ( node )		1172674	0					
ANR	1172794	CallExpression	NCAR ( node )		1172674	0					
ANR	1172795	Callee	NCAR		1172674	0					
ANR	1172796	Identifier	NCAR		1172674	0					
ANR	1172797	ArgumentList	node		1172674	1					
ANR	1172798	Argument	node		1172674	0					
ANR	1172799	Identifier	node		1172674	0					
ANR	1172800	Argument	reg		1172674	1					
ANR	1172801	Identifier	reg		1172674	0					
ANR	1172802	Argument	& tlen		1172674	2					
ANR	1172803	UnaryOperationExpression	& tlen		1172674	0					
ANR	1172804	UnaryOperator	&		1172674	0					
ANR	1172805	Identifier	tlen		1172674	1					
ANR	1172806	Argument	level		1172674	3					
ANR	1172807	Identifier	level		1172674	0					
ANR	1172808	WhileStatement	while ( r == 0 && IS_NOT_NULL ( node = NCDR ( node ) ) )		1172674	3					
ANR	1172809	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2290:13:52579:52618	1172674	0	True				
ANR	1172810	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1172674	0		&&			
ANR	1172811	EqualityExpression	r == 0		1172674	0		==			
ANR	1172812	Identifier	r		1172674	0					
ANR	1172813	PrimaryExpression	0		1172674	1					
ANR	1172814	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1172674	1					
ANR	1172815	Callee	IS_NOT_NULL		1172674	0					
ANR	1172816	Identifier	IS_NOT_NULL		1172674	0					
ANR	1172817	ArgumentList	node = NCDR ( node )		1172674	1					
ANR	1172818	Argument	node = NCDR ( node )		1172674	0					
ANR	1172819	AssignmentExpression	node = NCDR ( node )		1172674	0		=			
ANR	1172820	Identifier	node		1172674	0					
ANR	1172821	CallExpression	NCDR ( node )		1172674	1					
ANR	1172822	Callee	NCDR		1172674	0					
ANR	1172823	Identifier	NCDR		1172674	0					
ANR	1172824	ArgumentList	node		1172674	1					
ANR	1172825	Argument	node		1172674	0					
ANR	1172826	Identifier	node		1172674	0					
ANR	1172827	CompoundStatement		22:55:464:464	1172674	1					
ANR	1172828	ExpressionStatement	"r = get_char_length_tree1 ( NCAR ( node ) , reg , & tlen2 , level )"	2291:1:52624:52681	1172674	0	True				
ANR	1172829	AssignmentExpression	"r = get_char_length_tree1 ( NCAR ( node ) , reg , & tlen2 , level )"		1172674	0		=			
ANR	1172830	Identifier	r		1172674	0					
ANR	1172831	CallExpression	"get_char_length_tree1 ( NCAR ( node ) , reg , & tlen2 , level )"		1172674	1					
ANR	1172832	Callee	get_char_length_tree1		1172674	0					
ANR	1172833	Identifier	get_char_length_tree1		1172674	0					
ANR	1172834	ArgumentList	NCAR ( node )		1172674	1					
ANR	1172835	Argument	NCAR ( node )		1172674	0					
ANR	1172836	CallExpression	NCAR ( node )		1172674	0					
ANR	1172837	Callee	NCAR		1172674	0					
ANR	1172838	Identifier	NCAR		1172674	0					
ANR	1172839	ArgumentList	node		1172674	1					
ANR	1172840	Argument	node		1172674	0					
ANR	1172841	Identifier	node		1172674	0					
ANR	1172842	Argument	reg		1172674	1					
ANR	1172843	Identifier	reg		1172674	0					
ANR	1172844	Argument	& tlen2		1172674	2					
ANR	1172845	UnaryOperationExpression	& tlen2		1172674	0					
ANR	1172846	UnaryOperator	&		1172674	0					
ANR	1172847	Identifier	tlen2		1172674	1					
ANR	1172848	Argument	level		1172674	3					
ANR	1172849	Identifier	level		1172674	0					
ANR	1172850	IfStatement	if ( r == 0 )		1172674	1					
ANR	1172851	Condition	r == 0	2292:5:52688:52693	1172674	0	True				
ANR	1172852	EqualityExpression	r == 0		1172674	0		==			
ANR	1172853	Identifier	r		1172674	0					
ANR	1172854	PrimaryExpression	0		1172674	1					
ANR	1172855	CompoundStatement		24:13:539:539	1172674	1					
ANR	1172856	IfStatement	if ( tlen != tlen2 )		1172674	0					
ANR	1172857	Condition	tlen != tlen2	2293:7:52705:52717	1172674	0	True				
ANR	1172858	EqualityExpression	tlen != tlen2		1172674	0		!=			
ANR	1172859	Identifier	tlen		1172674	0					
ANR	1172860	Identifier	tlen2		1172674	1					
ANR	1172861	ExpressionStatement	varlen = 1	2294:5:52725:52735	1172674	1	True				
ANR	1172862	AssignmentExpression	varlen = 1		1172674	0		=			
ANR	1172863	Identifier	varlen		1172674	0					
ANR	1172864	PrimaryExpression	1		1172674	1					
ANR	1172865	IfStatement	if ( r == 0 )		1172674	4					
ANR	1172866	Condition	r == 0	2297:10:52758:52763	1172674	0	True				
ANR	1172867	EqualityExpression	r == 0		1172674	0		==			
ANR	1172868	Identifier	r		1172674	0					
ANR	1172869	PrimaryExpression	0		1172674	1					
ANR	1172870	CompoundStatement		29:18:609:609	1172674	1					
ANR	1172871	IfStatement	if ( varlen != 0 )		1172674	0					
ANR	1172872	Condition	varlen != 0	2298:5:52773:52783	1172674	0	True				
ANR	1172873	EqualityExpression	varlen != 0		1172674	0		!=			
ANR	1172874	Identifier	varlen		1172674	0					
ANR	1172875	PrimaryExpression	0		1172674	1					
ANR	1172876	CompoundStatement		30:18:629:629	1172674	1					
ANR	1172877	IfStatement	if ( level == 1 )		1172674	0					
ANR	1172878	Condition	level == 1	2299:7:52795:52804	1172674	0	True				
ANR	1172879	EqualityExpression	level == 1		1172674	0		==			
ANR	1172880	Identifier	level		1172674	0					
ANR	1172881	PrimaryExpression	1		1172674	1					
ANR	1172882	ExpressionStatement	r = GET_CHAR_LEN_TOP_ALT_VARLEN	2300:5:52812:52843	1172674	1	True				
ANR	1172883	AssignmentExpression	r = GET_CHAR_LEN_TOP_ALT_VARLEN		1172674	0		=			
ANR	1172884	Identifier	r		1172674	0					
ANR	1172885	Identifier	GET_CHAR_LEN_TOP_ALT_VARLEN		1172674	1					
ANR	1172886	ElseStatement	else		1172674	0					
ANR	1172887	ExpressionStatement	r = GET_CHAR_LEN_VARLEN	2302:5:52858:52881	1172674	0	True				
ANR	1172888	AssignmentExpression	r = GET_CHAR_LEN_VARLEN		1172674	0		=			
ANR	1172889	Identifier	r		1172674	0					
ANR	1172890	Identifier	GET_CHAR_LEN_VARLEN		1172674	1					
ANR	1172891	ElseStatement	else		1172674	0					
ANR	1172892	ExpressionStatement	* len = tlen	2305:3:52895:52906	1172674	0	True				
ANR	1172893	AssignmentExpression	* len = tlen		1172674	0		=			
ANR	1172894	UnaryOperationExpression	* len		1172674	0					
ANR	1172895	UnaryOperator	*		1172674	0					
ANR	1172896	Identifier	len		1172674	1					
ANR	1172897	Identifier	tlen		1172674	1					
ANR	1172898	BreakStatement	break ;	2308:4:52926:52931	1172674	5	True				
ANR	1172899	Label	case NT_STR :	2310:2:52936:52947	1172674	6	True				
ANR	1172900	Identifier	NT_STR		1172674	0					
ANR	1172901	CompoundStatement		45:6:836:852	1172674	7					
ANR	1172902	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	2312:6:52961:52985	1172674	0	True				
ANR	1172903	IdentifierDecl	* sn = NSTR ( node )		1172674	0					
ANR	1172904	IdentifierDeclType	StrNode *		1172674	0					
ANR	1172905	Identifier	sn		1172674	1					
ANR	1172906	AssignmentExpression	* sn = NSTR ( node )		1172674	2		=			
ANR	1172907	Identifier	sn		1172674	0					
ANR	1172908	CallExpression	NSTR ( node )		1172674	1					
ANR	1172909	Callee	NSTR		1172674	0					
ANR	1172910	Identifier	NSTR		1172674	0					
ANR	1172911	ArgumentList	node		1172674	1					
ANR	1172912	Argument	node		1172674	0					
ANR	1172913	Identifier	node		1172674	0					
ANR	1172914	IdentifierDeclStatement	UChar * s = sn -> s ;	2313:6:52993:53009	1172674	1	True				
ANR	1172915	IdentifierDecl	* s = sn -> s		1172674	0					
ANR	1172916	IdentifierDeclType	UChar *		1172674	0					
ANR	1172917	Identifier	s		1172674	1					
ANR	1172918	AssignmentExpression	* s = sn -> s		1172674	2		=			
ANR	1172919	Identifier	s		1172674	0					
ANR	1172920	PtrMemberAccess	sn -> s		1172674	1					
ANR	1172921	Identifier	sn		1172674	0					
ANR	1172922	Identifier	s		1172674	1					
ANR	1172923	WhileStatement	while ( s < sn -> end )		1172674	2					
ANR	1172924	Condition	s < sn -> end	2314:13:53024:53034	1172674	0	True				
ANR	1172925	RelationalExpression	s < sn -> end		1172674	0		<			
ANR	1172926	Identifier	s		1172674	0					
ANR	1172927	PtrMemberAccess	sn -> end		1172674	1					
ANR	1172928	Identifier	sn		1172674	0					
ANR	1172929	Identifier	end		1172674	1					
ANR	1172930	CompoundStatement		46:26:880:880	1172674	1					
ANR	1172931	ExpressionStatement	"s += enclen ( reg -> enc , s )"	2315:1:53040:53064	1172674	0	True				
ANR	1172932	AssignmentExpression	"s += enclen ( reg -> enc , s )"		1172674	0		+=			
ANR	1172933	Identifier	s		1172674	0					
ANR	1172934	CallExpression	"enclen ( reg -> enc , s )"		1172674	1					
ANR	1172935	Callee	enclen		1172674	0					
ANR	1172936	Identifier	enclen		1172674	0					
ANR	1172937	ArgumentList	reg -> enc		1172674	1					
ANR	1172938	Argument	reg -> enc		1172674	0					
ANR	1172939	PtrMemberAccess	reg -> enc		1172674	0					
ANR	1172940	Identifier	reg		1172674	0					
ANR	1172941	Identifier	enc		1172674	1					
ANR	1172942	Argument	s		1172674	1					
ANR	1172943	Identifier	s		1172674	0					
ANR	1172944	ExpressionStatement	( * len ) ++	2316:1:53067:53075	1172674	1	True				
ANR	1172945	PostIncDecOperationExpression	( * len ) ++		1172674	0					
ANR	1172946	UnaryOperationExpression	* len		1172674	0					
ANR	1172947	UnaryOperator	*		1172674	0					
ANR	1172948	Identifier	len		1172674	1					
ANR	1172949	IncDec	++		1172674	1					
ANR	1172950	BreakStatement	break ;	2319:4:53095:53100	1172674	8	True				
ANR	1172951	Label	case NT_QTFR :	2321:2:53105:53117	1172674	9	True				
ANR	1172952	Identifier	NT_QTFR		1172674	0					
ANR	1172953	CompoundStatement		55:6:974:1000	1172674	10					
ANR	1172954	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	2323:6:53131:53157	1172674	0	True				
ANR	1172955	IdentifierDecl	* qn = NQTFR ( node )		1172674	0					
ANR	1172956	IdentifierDeclType	QtfrNode *		1172674	0					
ANR	1172957	Identifier	qn		1172674	1					
ANR	1172958	AssignmentExpression	* qn = NQTFR ( node )		1172674	2		=			
ANR	1172959	Identifier	qn		1172674	0					
ANR	1172960	CallExpression	NQTFR ( node )		1172674	1					
ANR	1172961	Callee	NQTFR		1172674	0					
ANR	1172962	Identifier	NQTFR		1172674	0					
ANR	1172963	ArgumentList	node		1172674	1					
ANR	1172964	Argument	node		1172674	0					
ANR	1172965	Identifier	node		1172674	0					
ANR	1172966	IfStatement	if ( qn -> lower == qn -> upper )		1172674	1					
ANR	1172967	Condition	qn -> lower == qn -> upper	2324:10:53169:53190	1172674	0	True				
ANR	1172968	EqualityExpression	qn -> lower == qn -> upper		1172674	0		==			
ANR	1172969	PtrMemberAccess	qn -> lower		1172674	0					
ANR	1172970	Identifier	qn		1172674	0					
ANR	1172971	Identifier	lower		1172674	1					
ANR	1172972	PtrMemberAccess	qn -> upper		1172674	1					
ANR	1172973	Identifier	qn		1172674	0					
ANR	1172974	Identifier	upper		1172674	1					
ANR	1172975	CompoundStatement		56:34:1036:1036	1172674	1					
ANR	1172976	ExpressionStatement	"r = get_char_length_tree1 ( qn -> target , reg , & tlen , level )"	2325:1:53196:53252	1172674	0	True				
ANR	1172977	AssignmentExpression	"r = get_char_length_tree1 ( qn -> target , reg , & tlen , level )"		1172674	0		=			
ANR	1172978	Identifier	r		1172674	0					
ANR	1172979	CallExpression	"get_char_length_tree1 ( qn -> target , reg , & tlen , level )"		1172674	1					
ANR	1172980	Callee	get_char_length_tree1		1172674	0					
ANR	1172981	Identifier	get_char_length_tree1		1172674	0					
ANR	1172982	ArgumentList	qn -> target		1172674	1					
ANR	1172983	Argument	qn -> target		1172674	0					
ANR	1172984	PtrMemberAccess	qn -> target		1172674	0					
ANR	1172985	Identifier	qn		1172674	0					
ANR	1172986	Identifier	target		1172674	1					
ANR	1172987	Argument	reg		1172674	1					
ANR	1172988	Identifier	reg		1172674	0					
ANR	1172989	Argument	& tlen		1172674	2					
ANR	1172990	UnaryOperationExpression	& tlen		1172674	0					
ANR	1172991	UnaryOperator	&		1172674	0					
ANR	1172992	Identifier	tlen		1172674	1					
ANR	1172993	Argument	level		1172674	3					
ANR	1172994	Identifier	level		1172674	0					
ANR	1172995	IfStatement	if ( r == 0 )		1172674	1					
ANR	1172996	Condition	r == 0	2326:5:53259:53264	1172674	0	True				
ANR	1172997	EqualityExpression	r == 0		1172674	0		==			
ANR	1172998	Identifier	r		1172674	0					
ANR	1172999	PrimaryExpression	0		1172674	1					
ANR	1173000	ExpressionStatement	"* len = distance_multiply ( tlen , qn -> lower )"	2327:3:53270:53311	1172674	1	True				
ANR	1173001	AssignmentExpression	"* len = distance_multiply ( tlen , qn -> lower )"		1172674	0		=			
ANR	1173002	UnaryOperationExpression	* len		1172674	0					
ANR	1173003	UnaryOperator	*		1172674	0					
ANR	1173004	Identifier	len		1172674	1					
ANR	1173005	CallExpression	"distance_multiply ( tlen , qn -> lower )"		1172674	1					
ANR	1173006	Callee	distance_multiply		1172674	0					
ANR	1173007	Identifier	distance_multiply		1172674	0					
ANR	1173008	ArgumentList	tlen		1172674	1					
ANR	1173009	Argument	tlen		1172674	0					
ANR	1173010	Identifier	tlen		1172674	0					
ANR	1173011	Argument	qn -> lower		1172674	1					
ANR	1173012	PtrMemberAccess	qn -> lower		1172674	0					
ANR	1173013	Identifier	qn		1172674	0					
ANR	1173014	Identifier	lower		1172674	1					
ANR	1173015	ElseStatement	else		1172674	0					
ANR	1173016	ExpressionStatement	r = GET_CHAR_LEN_VARLEN	2330:1:53333:53356	1172674	0	True				
ANR	1173017	AssignmentExpression	r = GET_CHAR_LEN_VARLEN		1172674	0		=			
ANR	1173018	Identifier	r		1172674	0					
ANR	1173019	Identifier	GET_CHAR_LEN_VARLEN		1172674	1					
ANR	1173020	BreakStatement	break ;	2332:4:53368:53373	1172674	11	True				
ANR	1173021	Label	case NT_CALL :	2335:2:53401:53413	1172674	12	True				
ANR	1173022	Identifier	NT_CALL		1172674	0					
ANR	1173023	IfStatement	if ( ! IS_CALL_RECURSION ( NCALL ( node ) ) )		1172674	13					
ANR	1173024	Condition	! IS_CALL_RECURSION ( NCALL ( node ) )	2336:8:53423:53454	1172674	0	True				
ANR	1173025	UnaryOperationExpression	! IS_CALL_RECURSION ( NCALL ( node ) )		1172674	0					
ANR	1173026	UnaryOperator	!		1172674	0					
ANR	1173027	CallExpression	IS_CALL_RECURSION ( NCALL ( node ) )		1172674	1					
ANR	1173028	Callee	IS_CALL_RECURSION		1172674	0					
ANR	1173029	Identifier	IS_CALL_RECURSION		1172674	0					
ANR	1173030	ArgumentList	NCALL ( node )		1172674	1					
ANR	1173031	Argument	NCALL ( node )		1172674	0					
ANR	1173032	CallExpression	NCALL ( node )		1172674	0					
ANR	1173033	Callee	NCALL		1172674	0					
ANR	1173034	Identifier	NCALL		1172674	0					
ANR	1173035	ArgumentList	node		1172674	1					
ANR	1173036	Argument	node		1172674	0					
ANR	1173037	Identifier	node		1172674	0					
ANR	1173038	ExpressionStatement	"r = get_char_length_tree1 ( NCALL ( node ) -> target , reg , len , level )"	2337:6:53463:53526	1172674	1	True				
ANR	1173039	AssignmentExpression	"r = get_char_length_tree1 ( NCALL ( node ) -> target , reg , len , level )"		1172674	0		=			
ANR	1173040	Identifier	r		1172674	0					
ANR	1173041	CallExpression	"get_char_length_tree1 ( NCALL ( node ) -> target , reg , len , level )"		1172674	1					
ANR	1173042	Callee	get_char_length_tree1		1172674	0					
ANR	1173043	Identifier	get_char_length_tree1		1172674	0					
ANR	1173044	ArgumentList	NCALL ( node ) -> target		1172674	1					
ANR	1173045	Argument	NCALL ( node ) -> target		1172674	0					
ANR	1173046	PtrMemberAccess	NCALL ( node ) -> target		1172674	0					
ANR	1173047	CallExpression	NCALL ( node )		1172674	0					
ANR	1173048	Callee	NCALL		1172674	0					
ANR	1173049	Identifier	NCALL		1172674	0					
ANR	1173050	ArgumentList	node		1172674	1					
ANR	1173051	Argument	node		1172674	0					
ANR	1173052	Identifier	node		1172674	0					
ANR	1173053	Identifier	target		1172674	1					
ANR	1173054	Argument	reg		1172674	1					
ANR	1173055	Identifier	reg		1172674	0					
ANR	1173056	Argument	len		1172674	2					
ANR	1173057	Identifier	len		1172674	0					
ANR	1173058	Argument	level		1172674	3					
ANR	1173059	Identifier	level		1172674	0					
ANR	1173060	ElseStatement	else		1172674	0					
ANR	1173061	ExpressionStatement	r = GET_CHAR_LEN_VARLEN	2339:6:53543:53566	1172674	0	True				
ANR	1173062	AssignmentExpression	r = GET_CHAR_LEN_VARLEN		1172674	0		=			
ANR	1173063	Identifier	r		1172674	0					
ANR	1173064	Identifier	GET_CHAR_LEN_VARLEN		1172674	1					
ANR	1173065	BreakStatement	break ;	2340:4:53572:53577	1172674	14	True				
ANR	1173066	Label	case NT_CTYPE :	2343:2:53589:53602	1172674	15	True				
ANR	1173067	Identifier	NT_CTYPE		1172674	0					
ANR	1173068	ExpressionStatement	* len = 1	2344:4:53608:53616	1172674	16	True				
ANR	1173069	AssignmentExpression	* len = 1		1172674	0		=			
ANR	1173070	UnaryOperationExpression	* len		1172674	0					
ANR	1173071	UnaryOperator	*		1172674	0					
ANR	1173072	Identifier	len		1172674	1					
ANR	1173073	PrimaryExpression	1		1172674	1					
ANR	1173074	BreakStatement	break ;	2345:4:53622:53627	1172674	17	True				
ANR	1173075	Label	case NT_CCLASS :	2347:2:53632:53646	1172674	18	True				
ANR	1173076	Identifier	NT_CCLASS		1172674	0					
ANR	1173077	Label	case NT_CANY :	2348:2:53650:53662	1172674	19	True				
ANR	1173078	Identifier	NT_CANY		1172674	0					
ANR	1173079	ExpressionStatement	* len = 1	2349:4:53668:53676	1172674	20	True				
ANR	1173080	AssignmentExpression	* len = 1		1172674	0		=			
ANR	1173081	UnaryOperationExpression	* len		1172674	0					
ANR	1173082	UnaryOperator	*		1172674	0					
ANR	1173083	Identifier	len		1172674	1					
ANR	1173084	PrimaryExpression	1		1172674	1					
ANR	1173085	BreakStatement	break ;	2350:4:53682:53687	1172674	21	True				
ANR	1173086	Label	case NT_ENCLOSE :	2352:2:53692:53707	1172674	22	True				
ANR	1173087	Identifier	NT_ENCLOSE		1172674	0					
ANR	1173088	CompoundStatement		86:6:1564:1596	1172674	23					
ANR	1173089	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2354:6:53721:53753	1172674	0	True				
ANR	1173090	IdentifierDecl	* en = NENCLOSE ( node )		1172674	0					
ANR	1173091	IdentifierDeclType	EncloseNode *		1172674	0					
ANR	1173092	Identifier	en		1172674	1					
ANR	1173093	AssignmentExpression	* en = NENCLOSE ( node )		1172674	2		=			
ANR	1173094	Identifier	en		1172674	0					
ANR	1173095	CallExpression	NENCLOSE ( node )		1172674	1					
ANR	1173096	Callee	NENCLOSE		1172674	0					
ANR	1173097	Identifier	NENCLOSE		1172674	0					
ANR	1173098	ArgumentList	node		1172674	1					
ANR	1173099	Argument	node		1172674	0					
ANR	1173100	Identifier	node		1172674	0					
ANR	1173101	SwitchStatement	switch ( en -> type )		1172674	1					
ANR	1173102	Condition	en -> type	2355:14:53769:53776	1172674	0	True				
ANR	1173103	PtrMemberAccess	en -> type		1172674	0					
ANR	1173104	Identifier	en		1172674	0					
ANR	1173105	Identifier	type		1172674	1					
ANR	1173106	CompoundStatement		87:24:1622:1622	1172674	1					
ANR	1173107	Label	case ENCLOSE_MEMORY :	2356:6:53787:53806	1172674	0	True				
ANR	1173108	Identifier	ENCLOSE_MEMORY		1172674	0					
ANR	1173109	IfStatement	if ( IS_ENCLOSE_CLEN_FIXED ( en ) )		1172674	1					
ANR	1173110	Condition	IS_ENCLOSE_CLEN_FIXED ( en )	2358:5:53836:53860	1172674	0	True				
ANR	1173111	CallExpression	IS_ENCLOSE_CLEN_FIXED ( en )		1172674	0					
ANR	1173112	Callee	IS_ENCLOSE_CLEN_FIXED		1172674	0					
ANR	1173113	Identifier	IS_ENCLOSE_CLEN_FIXED		1172674	0					
ANR	1173114	ArgumentList	en		1172674	1					
ANR	1173115	Argument	en		1172674	0					
ANR	1173116	Identifier	en		1172674	0					
ANR	1173117	ExpressionStatement	* len = en -> char_len	2359:3:53866:53885	1172674	1	True				
ANR	1173118	AssignmentExpression	* len = en -> char_len		1172674	0		=			
ANR	1173119	UnaryOperationExpression	* len		1172674	0					
ANR	1173120	UnaryOperator	*		1172674	0					
ANR	1173121	Identifier	len		1172674	1					
ANR	1173122	PtrMemberAccess	en -> char_len		1172674	1					
ANR	1173123	Identifier	en		1172674	0					
ANR	1173124	Identifier	char_len		1172674	1					
ANR	1173125	ElseStatement	else		1172674	0					
ANR	1173126	CompoundStatement		92:6:1736:1736	1172674	0					
ANR	1173127	ExpressionStatement	"r = get_char_length_tree1 ( en -> target , reg , len , level )"	2361:3:53898:53952	1172674	0	True				
ANR	1173128	AssignmentExpression	"r = get_char_length_tree1 ( en -> target , reg , len , level )"		1172674	0		=			
ANR	1173129	Identifier	r		1172674	0					
ANR	1173130	CallExpression	"get_char_length_tree1 ( en -> target , reg , len , level )"		1172674	1					
ANR	1173131	Callee	get_char_length_tree1		1172674	0					
ANR	1173132	Identifier	get_char_length_tree1		1172674	0					
ANR	1173133	ArgumentList	en -> target		1172674	1					
ANR	1173134	Argument	en -> target		1172674	0					
ANR	1173135	PtrMemberAccess	en -> target		1172674	0					
ANR	1173136	Identifier	en		1172674	0					
ANR	1173137	Identifier	target		1172674	1					
ANR	1173138	Argument	reg		1172674	1					
ANR	1173139	Identifier	reg		1172674	0					
ANR	1173140	Argument	len		1172674	2					
ANR	1173141	Identifier	len		1172674	0					
ANR	1173142	Argument	level		1172674	3					
ANR	1173143	Identifier	level		1172674	0					
ANR	1173144	IfStatement	if ( r == 0 )		1172674	1					
ANR	1173145	Condition	r == 0	2362:7:53961:53966	1172674	0	True				
ANR	1173146	EqualityExpression	r == 0		1172674	0		==			
ANR	1173147	Identifier	r		1172674	0					
ANR	1173148	PrimaryExpression	0		1172674	1					
ANR	1173149	CompoundStatement		94:15:1812:1812	1172674	1					
ANR	1173150	ExpressionStatement	en -> char_len = * len	2363:5:53976:53995	1172674	0	True				
ANR	1173151	AssignmentExpression	en -> char_len = * len		1172674	0		=			
ANR	1173152	PtrMemberAccess	en -> char_len		1172674	0					
ANR	1173153	Identifier	en		1172674	0					
ANR	1173154	Identifier	char_len		1172674	1					
ANR	1173155	UnaryOperationExpression	* len		1172674	1					
ANR	1173156	UnaryOperator	*		1172674	0					
ANR	1173157	Identifier	len		1172674	1					
ANR	1173158	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_CLEN_FIXED )"	2364:5:54002:54042	1172674	1	True				
ANR	1173159	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_CLEN_FIXED )"		1172674	0					
ANR	1173160	Callee	SET_ENCLOSE_STATUS		1172674	0					
ANR	1173161	Identifier	SET_ENCLOSE_STATUS		1172674	0					
ANR	1173162	ArgumentList	node		1172674	1					
ANR	1173163	Argument	node		1172674	0					
ANR	1173164	Identifier	node		1172674	0					
ANR	1173165	Argument	NST_CLEN_FIXED		1172674	1					
ANR	1173166	Identifier	NST_CLEN_FIXED		1172674	0					
ANR	1173167	BreakStatement	break ;	2367:1:54053:54058	1172674	2	True				
ANR	1173168	Label	case ENCLOSE_OPTION :	2369:6:54073:54092	1172674	3	True				
ANR	1173169	Identifier	ENCLOSE_OPTION		1172674	0					
ANR	1173170	Label	case ENCLOSE_STOP_BACKTRACK :	2370:6:54100:54127	1172674	4	True				
ANR	1173171	Identifier	ENCLOSE_STOP_BACKTRACK		1172674	0					
ANR	1173172	ExpressionStatement	"r = get_char_length_tree1 ( en -> target , reg , len , level )"	2371:1:54130:54184	1172674	5	True				
ANR	1173173	AssignmentExpression	"r = get_char_length_tree1 ( en -> target , reg , len , level )"		1172674	0		=			
ANR	1173174	Identifier	r		1172674	0					
ANR	1173175	CallExpression	"get_char_length_tree1 ( en -> target , reg , len , level )"		1172674	1					
ANR	1173176	Callee	get_char_length_tree1		1172674	0					
ANR	1173177	Identifier	get_char_length_tree1		1172674	0					
ANR	1173178	ArgumentList	en -> target		1172674	1					
ANR	1173179	Argument	en -> target		1172674	0					
ANR	1173180	PtrMemberAccess	en -> target		1172674	0					
ANR	1173181	Identifier	en		1172674	0					
ANR	1173182	Identifier	target		1172674	1					
ANR	1173183	Argument	reg		1172674	1					
ANR	1173184	Identifier	reg		1172674	0					
ANR	1173185	Argument	len		1172674	2					
ANR	1173186	Identifier	len		1172674	0					
ANR	1173187	Argument	level		1172674	3					
ANR	1173188	Identifier	level		1172674	0					
ANR	1173189	BreakStatement	break ;	2372:1:54187:54192	1172674	6	True				
ANR	1173190	Label	default :	2373:6:54200:54207	1172674	7	True				
ANR	1173191	Identifier	default		1172674	0					
ANR	1173192	BreakStatement	break ;	2374:1:54210:54215	1172674	8	True				
ANR	1173193	BreakStatement	break ;	2377:4:54235:54240	1172674	24	True				
ANR	1173194	Label	case NT_ANCHOR :	2379:2:54245:54259	1172674	25	True				
ANR	1173195	Identifier	NT_ANCHOR		1172674	0					
ANR	1173196	BreakStatement	break ;	2380:4:54265:54270	1172674	26	True				
ANR	1173197	Label	default :	2382:2:54275:54282	1172674	27	True				
ANR	1173198	Identifier	default		1172674	0					
ANR	1173199	ExpressionStatement	r = GET_CHAR_LEN_VARLEN	2383:4:54288:54311	1172674	28	True				
ANR	1173200	AssignmentExpression	r = GET_CHAR_LEN_VARLEN		1172674	0		=			
ANR	1173201	Identifier	r		1172674	0					
ANR	1173202	Identifier	GET_CHAR_LEN_VARLEN		1172674	1					
ANR	1173203	BreakStatement	break ;	2384:4:54317:54322	1172674	29	True				
ANR	1173204	ReturnStatement	return r ;	2387:2:54331:54339	1172674	5	True				
ANR	1173205	Identifier	r		1172674	0					
ANR	1173206	ReturnType	static int		1172674	1					
ANR	1173207	Identifier	get_char_length_tree1		1172674	2					
ANR	1173208	ParameterList	"Node * node , regex_t * reg , int * len , int level"		1172674	3					
ANR	1173209	Parameter	Node * node	2268:22:52109:52118	1172674	0	True				
ANR	1173210	ParameterType	Node *		1172674	0					
ANR	1173211	Identifier	node		1172674	1					
ANR	1173212	Parameter	regex_t * reg	2268:34:52121:52132	1172674	1	True				
ANR	1173213	ParameterType	regex_t *		1172674	0					
ANR	1173214	Identifier	reg		1172674	1					
ANR	1173215	Parameter	int * len	2268:48:52135:52142	1172674	2	True				
ANR	1173216	ParameterType	int *		1172674	0					
ANR	1173217	Identifier	len		1172674	1					
ANR	1173218	Parameter	int level	2268:58:52145:52153	1172674	3	True				
ANR	1173219	ParameterType	int		1172674	0					
ANR	1173220	Identifier	level		1172674	1					
ANR	1173221	CFGEntryNode	ENTRY		1172674		True				
ANR	1173222	CFGExitNode	EXIT		1172674		True				
ANR	1173223	Symbol	* qn		1172674						
ANR	1173224	Symbol	IS_NOT_NULL		1172674						
ANR	1173225	Symbol	NCAR		1172674						
ANR	1173226	Symbol	* sn		1172674						
ANR	1173227	Symbol	NCALL		1172674						
ANR	1173228	Symbol	NST_CLEN_FIXED		1172674						
ANR	1173229	Symbol	& tlen		1172674						
ANR	1173230	Symbol	distance_add		1172674						
ANR	1173231	Symbol	NQTFR		1172674						
ANR	1173232	Symbol	* en		1172674						
ANR	1173233	Symbol	qn -> lower		1172674						
ANR	1173234	Symbol	sn -> s		1172674						
ANR	1173235	Symbol	len		1172674						
ANR	1173236	Symbol	GET_CHAR_LEN_TOP_ALT_VARLEN		1172674						
ANR	1173237	Symbol	reg		1172674						
ANR	1173238	Symbol	NENCLOSE		1172674						
ANR	1173239	Symbol	tlen		1172674						
ANR	1173240	Symbol	GET_CHAR_LEN_VARLEN		1172674						
ANR	1173241	Symbol	en -> type		1172674						
ANR	1173242	Symbol	IS_ENCLOSE_CLEN_FIXED		1172674						
ANR	1173243	Symbol	NCALL ( node ) -> target		1172674						
ANR	1173244	Symbol	sn		1172674						
ANR	1173245	Symbol	sn -> end		1172674						
ANR	1173246	Symbol	qn		1172674						
ANR	1173247	Symbol	tlen2		1172674						
ANR	1173248	Symbol	level		1172674						
ANR	1173249	Symbol	varlen		1172674						
ANR	1173250	Symbol	en -> char_len		1172674						
ANR	1173251	Symbol	NCDR		1172674						
ANR	1173252	Symbol	get_char_length_tree1		1172674						
ANR	1173253	Symbol	NSTR		1172674						
ANR	1173254	Symbol	en		1172674						
ANR	1173255	Symbol	& tlen2		1172674						
ANR	1173256	Symbol	enclen		1172674						
ANR	1173257	Symbol	qn -> target		1172674						
ANR	1173258	Symbol	reg -> enc		1172674						
ANR	1173259	Symbol	distance_multiply		1172674						
ANR	1173260	Symbol	node		1172674						
ANR	1173261	Symbol	qn -> upper		1172674						
ANR	1173262	Symbol	r		1172674						
ANR	1173263	Symbol	s		1172674						
ANR	1173264	Symbol	en -> target		1172674						
ANR	1173265	Symbol	IS_CALL_RECURSION		1172674						
ANR	1173266	Symbol	NTYPE		1172674						
ANR	1173267	Symbol	* NCALL		1172674						
ANR	1173268	Symbol	* reg		1172674						
ANR	1173269	Symbol	* len		1172674						
ANR	1173270	Function	get_char_length_tree	2390:0:54344:54465							
ANR	1173271	FunctionDef	"get_char_length_tree (Node * node , regex_t * reg , int * len)"		1173270	0					
ANR	1173272	CompoundStatement		2392:0:54412:54465	1173270	0					
ANR	1173273	ReturnStatement	"return get_char_length_tree1 ( node , reg , len , 0 ) ;"	2393:2:54416:54463	1173270	0	True				
ANR	1173274	CallExpression	"get_char_length_tree1 ( node , reg , len , 0 )"		1173270	0					
ANR	1173275	Callee	get_char_length_tree1		1173270	0					
ANR	1173276	Identifier	get_char_length_tree1		1173270	0					
ANR	1173277	ArgumentList	node		1173270	1					
ANR	1173278	Argument	node		1173270	0					
ANR	1173279	Identifier	node		1173270	0					
ANR	1173280	Argument	reg		1173270	1					
ANR	1173281	Identifier	reg		1173270	0					
ANR	1173282	Argument	len		1173270	2					
ANR	1173283	Identifier	len		1173270	0					
ANR	1173284	Argument	0		1173270	3					
ANR	1173285	PrimaryExpression	0		1173270	0					
ANR	1173286	ReturnType	static int		1173270	1					
ANR	1173287	Identifier	get_char_length_tree		1173270	2					
ANR	1173288	ParameterList	"Node * node , regex_t * reg , int * len"		1173270	3					
ANR	1173289	Parameter	Node * node	2391:21:54376:54385	1173270	0	True				
ANR	1173290	ParameterType	Node *		1173270	0					
ANR	1173291	Identifier	node		1173270	1					
ANR	1173292	Parameter	regex_t * reg	2391:33:54388:54399	1173270	1	True				
ANR	1173293	ParameterType	regex_t *		1173270	0					
ANR	1173294	Identifier	reg		1173270	1					
ANR	1173295	Parameter	int * len	2391:47:54402:54409	1173270	2	True				
ANR	1173296	ParameterType	int *		1173270	0					
ANR	1173297	Identifier	len		1173270	1					
ANR	1173298	CFGEntryNode	ENTRY		1173270		True				
ANR	1173299	CFGExitNode	EXIT		1173270		True				
ANR	1173300	Symbol	node		1173270						
ANR	1173301	Symbol	len		1173270						
ANR	1173302	Symbol	reg		1173270						
ANR	1173303	Symbol	get_char_length_tree1		1173270						
ANR	1173304	Function	is_not_included	2397:0:54505:57757							
ANR	1173305	FunctionDef	"is_not_included (Node * x , Node * y , regex_t * reg)"		1173304	0					
ANR	1173306	CompoundStatement		2399:0:54564:57757	1173304	0					
ANR	1173307	IdentifierDeclStatement	"int i , len ;"	2400:2:54568:54578	1173304	0	True				
ANR	1173308	IdentifierDecl	i		1173304	0					
ANR	1173309	IdentifierDeclType	int		1173304	0					
ANR	1173310	Identifier	i		1173304	1					
ANR	1173311	IdentifierDecl	len		1173304	1					
ANR	1173312	IdentifierDeclType	int		1173304	0					
ANR	1173313	Identifier	len		1173304	1					
ANR	1173314	IdentifierDeclStatement	OnigCodePoint code ;	2401:2:54582:54600	1173304	1	True				
ANR	1173315	IdentifierDecl	code		1173304	0					
ANR	1173316	IdentifierDeclType	OnigCodePoint		1173304	0					
ANR	1173317	Identifier	code		1173304	1					
ANR	1173318	IdentifierDeclStatement	UChar * p ;	2402:2:54604:54612	1173304	2	True				
ANR	1173319	IdentifierDecl	* p		1173304	0					
ANR	1173320	IdentifierDeclType	UChar *		1173304	0					
ANR	1173321	Identifier	p		1173304	1					
ANR	1173322	IdentifierDeclStatement	int ytype ;	2403:2:54616:54625	1173304	3	True				
ANR	1173323	IdentifierDecl	ytype		1173304	0					
ANR	1173324	IdentifierDeclType	int		1173304	0					
ANR	1173325	Identifier	ytype		1173304	1					
ANR	1173326	Label	retry :	2405:1:54629:54634	1173304	4	True				
ANR	1173327	Identifier	retry		1173304	0					
ANR	1173328	ExpressionStatement	ytype = NTYPE ( y )	2406:2:54638:54654	1173304	5	True				
ANR	1173329	AssignmentExpression	ytype = NTYPE ( y )		1173304	0		=			
ANR	1173330	Identifier	ytype		1173304	0					
ANR	1173331	CallExpression	NTYPE ( y )		1173304	1					
ANR	1173332	Callee	NTYPE		1173304	0					
ANR	1173333	Identifier	NTYPE		1173304	0					
ANR	1173334	ArgumentList	y		1173304	1					
ANR	1173335	Argument	y		1173304	0					
ANR	1173336	Identifier	y		1173304	0					
ANR	1173337	SwitchStatement	switch ( NTYPE ( x ) )		1173304	6					
ANR	1173338	Condition	NTYPE ( x )	2407:10:54666:54673	1173304	0	True				
ANR	1173339	CallExpression	NTYPE ( x )		1173304	0					
ANR	1173340	Callee	NTYPE		1173304	0					
ANR	1173341	Identifier	NTYPE		1173304	0					
ANR	1173342	ArgumentList	x		1173304	1					
ANR	1173343	Argument	x		1173304	0					
ANR	1173344	Identifier	x		1173304	0					
ANR	1173345	CompoundStatement		9:20:111:111	1173304	1					
ANR	1173346	Label	case NT_CTYPE :	2408:2:54680:54693	1173304	0	True				
ANR	1173347	Identifier	NT_CTYPE		1173304	0					
ANR	1173348	CompoundStatement		11:4:134:134	1173304	1					
ANR	1173349	SwitchStatement	switch ( ytype )		1173304	0					
ANR	1173350	Condition	ytype	2410:14:54715:54719	1173304	0	True				
ANR	1173351	Identifier	ytype		1173304	0					
ANR	1173352	CompoundStatement		12:21:157:157	1173304	1					
ANR	1173353	Label	case NT_CTYPE :	2411:6:54730:54743	1173304	0	True				
ANR	1173354	Identifier	NT_CTYPE		1173304	0					
ANR	1173355	IfStatement	if ( NCTYPE ( y ) -> ctype == NCTYPE ( x ) -> ctype && NCTYPE ( y ) -> not != NCTYPE ( x ) -> not )		1173304	1					
ANR	1173356	Condition	NCTYPE ( y ) -> ctype == NCTYPE ( x ) -> ctype && NCTYPE ( y ) -> not != NCTYPE ( x ) -> not	2412:5:54750:54828	1173304	0	True				
ANR	1173357	AndExpression	NCTYPE ( y ) -> ctype == NCTYPE ( x ) -> ctype && NCTYPE ( y ) -> not != NCTYPE ( x ) -> not		1173304	0		&&			
ANR	1173358	EqualityExpression	NCTYPE ( y ) -> ctype == NCTYPE ( x ) -> ctype		1173304	0		==			
ANR	1173359	PtrMemberAccess	NCTYPE ( y ) -> ctype		1173304	0					
ANR	1173360	CallExpression	NCTYPE ( y )		1173304	0					
ANR	1173361	Callee	NCTYPE		1173304	0					
ANR	1173362	Identifier	NCTYPE		1173304	0					
ANR	1173363	ArgumentList	y		1173304	1					
ANR	1173364	Argument	y		1173304	0					
ANR	1173365	Identifier	y		1173304	0					
ANR	1173366	Identifier	ctype		1173304	1					
ANR	1173367	PtrMemberAccess	NCTYPE ( x ) -> ctype		1173304	1					
ANR	1173368	CallExpression	NCTYPE ( x )		1173304	0					
ANR	1173369	Callee	NCTYPE		1173304	0					
ANR	1173370	Identifier	NCTYPE		1173304	0					
ANR	1173371	ArgumentList	x		1173304	1					
ANR	1173372	Argument	x		1173304	0					
ANR	1173373	Identifier	x		1173304	0					
ANR	1173374	Identifier	ctype		1173304	1					
ANR	1173375	EqualityExpression	NCTYPE ( y ) -> not != NCTYPE ( x ) -> not		1173304	1		!=			
ANR	1173376	PtrMemberAccess	NCTYPE ( y ) -> not		1173304	0					
ANR	1173377	CallExpression	NCTYPE ( y )		1173304	0					
ANR	1173378	Callee	NCTYPE		1173304	0					
ANR	1173379	Identifier	NCTYPE		1173304	0					
ANR	1173380	ArgumentList	y		1173304	1					
ANR	1173381	Argument	y		1173304	0					
ANR	1173382	Identifier	y		1173304	0					
ANR	1173383	Identifier	not		1173304	1					
ANR	1173384	PtrMemberAccess	NCTYPE ( x ) -> not		1173304	1					
ANR	1173385	CallExpression	NCTYPE ( x )		1173304	0					
ANR	1173386	Callee	NCTYPE		1173304	0					
ANR	1173387	Identifier	NCTYPE		1173304	0					
ANR	1173388	ArgumentList	x		1173304	1					
ANR	1173389	Argument	x		1173304	0					
ANR	1173390	Identifier	x		1173304	0					
ANR	1173391	Identifier	not		1173304	1					
ANR	1173392	ReturnStatement	return 1 ;	2414:3:54834:54842	1173304	1	True				
ANR	1173393	PrimaryExpression	1		1173304	0					
ANR	1173394	ElseStatement	else		1173304	0					
ANR	1173395	ReturnStatement	return 0 ;	2416:3:54853:54861	1173304	0	True				
ANR	1173396	PrimaryExpression	0		1173304	0					
ANR	1173397	BreakStatement	break ;	2417:1:54864:54869	1173304	2	True				
ANR	1173398	Label	case NT_CCLASS :	2419:6:54878:54892	1173304	3	True				
ANR	1173399	Identifier	NT_CCLASS		1173304	0					
ANR	1173400	Label	swap :	2420:6:54900:54904	1173304	4	True				
ANR	1173401	Identifier	swap		1173304	0					
ANR	1173402	CompoundStatement		24:3:347:356	1173304	5					
ANR	1173403	IdentifierDeclStatement	Node * tmp ;	2422:3:54912:54921	1173304	0	True				
ANR	1173404	IdentifierDecl	* tmp		1173304	0					
ANR	1173405	IdentifierDeclType	Node *		1173304	0					
ANR	1173406	Identifier	tmp		1173304	1					
ANR	1173407	ExpressionStatement	tmp = x	2423:3:54926:54933	1173304	1	True				
ANR	1173408	AssignmentExpression	tmp = x		1173304	0		=			
ANR	1173409	Identifier	tmp		1173304	0					
ANR	1173410	Identifier	x		1173304	1					
ANR	1173411	ExpressionStatement	x = y	2423:12:54935:54940	1173304	2	True				
ANR	1173412	AssignmentExpression	x = y		1173304	0		=			
ANR	1173413	Identifier	x		1173304	0					
ANR	1173414	Identifier	y		1173304	1					
ANR	1173415	ExpressionStatement	y = tmp	2423:19:54942:54949	1173304	3	True				
ANR	1173416	AssignmentExpression	y = tmp		1173304	0		=			
ANR	1173417	Identifier	y		1173304	0					
ANR	1173418	Identifier	tmp		1173304	1					
ANR	1173419	GotoStatement	goto retry ;	2424:3:54954:54964	1173304	4	True				
ANR	1173420	Identifier	retry		1173304	0					
ANR	1173421	BreakStatement	break ;	2426:1:54970:54975	1173304	6	True				
ANR	1173422	Label	case NT_STR :	2428:6:54984:54995	1173304	7	True				
ANR	1173423	Identifier	NT_STR		1173304	0					
ANR	1173424	GotoStatement	goto swap ;	2429:1:54998:55007	1173304	8	True				
ANR	1173425	Identifier	swap		1173304	0					
ANR	1173426	BreakStatement	break ;	2430:1:55010:55015	1173304	9	True				
ANR	1173427	Label	default :	2432:6:55024:55031	1173304	10	True				
ANR	1173428	Identifier	default		1173304	0					
ANR	1173429	BreakStatement	break ;	2433:1:55034:55039	1173304	11	True				
ANR	1173430	BreakStatement	break ;	2436:4:55059:55064	1173304	2	True				
ANR	1173431	Label	case NT_CCLASS :	2438:2:55069:55083	1173304	3	True				
ANR	1173432	Identifier	NT_CCLASS		1173304	0					
ANR	1173433	CompoundStatement		42:6:532:559	1173304	4					
ANR	1173434	IdentifierDeclStatement	CClassNode * xc = NCCLASS ( x ) ;	2440:6:55097:55124	1173304	0	True				
ANR	1173435	IdentifierDecl	* xc = NCCLASS ( x )		1173304	0					
ANR	1173436	IdentifierDeclType	CClassNode *		1173304	0					
ANR	1173437	Identifier	xc		1173304	1					
ANR	1173438	AssignmentExpression	* xc = NCCLASS ( x )		1173304	2		=			
ANR	1173439	Identifier	xc		1173304	0					
ANR	1173440	CallExpression	NCCLASS ( x )		1173304	1					
ANR	1173441	Callee	NCCLASS		1173304	0					
ANR	1173442	Identifier	NCCLASS		1173304	0					
ANR	1173443	ArgumentList	x		1173304	1					
ANR	1173444	Argument	x		1173304	0					
ANR	1173445	Identifier	x		1173304	0					
ANR	1173446	SwitchStatement	switch ( ytype )		1173304	1					
ANR	1173447	Condition	ytype	2441:14:55140:55144	1173304	0	True				
ANR	1173448	Identifier	ytype		1173304	0					
ANR	1173449	CompoundStatement		43:21:582:582	1173304	1					
ANR	1173450	Label	case NT_CTYPE :	2442:6:55155:55168	1173304	0	True				
ANR	1173451	Identifier	NT_CTYPE		1173304	0					
ANR	1173452	SwitchStatement	switch ( NCTYPE ( y ) -> ctype )		1173304	1					
ANR	1173453	Condition	NCTYPE ( y ) -> ctype	2443:9:55179:55194	1173304	0	True				
ANR	1173454	PtrMemberAccess	NCTYPE ( y ) -> ctype		1173304	0					
ANR	1173455	CallExpression	NCTYPE ( y )		1173304	0					
ANR	1173456	Callee	NCTYPE		1173304	0					
ANR	1173457	Identifier	NCTYPE		1173304	0					
ANR	1173458	ArgumentList	y		1173304	1					
ANR	1173459	Argument	y		1173304	0					
ANR	1173460	Identifier	y		1173304	0					
ANR	1173461	Identifier	ctype		1173304	1					
ANR	1173462	CompoundStatement		45:27:632:632	1173304	1					
ANR	1173463	Label	case ONIGENC_CTYPE_WORD :	2444:1:55200:55223	1173304	0	True				
ANR	1173464	Identifier	ONIGENC_CTYPE_WORD		1173304	0					
ANR	1173465	IfStatement	if ( NCTYPE ( y ) -> not == 0 )		1173304	1					
ANR	1173466	Condition	NCTYPE ( y ) -> not == 0	2445:7:55232:55250	1173304	0	True				
ANR	1173467	EqualityExpression	NCTYPE ( y ) -> not == 0		1173304	0		==			
ANR	1173468	PtrMemberAccess	NCTYPE ( y ) -> not		1173304	0					
ANR	1173469	CallExpression	NCTYPE ( y )		1173304	0					
ANR	1173470	Callee	NCTYPE		1173304	0					
ANR	1173471	Identifier	NCTYPE		1173304	0					
ANR	1173472	ArgumentList	y		1173304	1					
ANR	1173473	Argument	y		1173304	0					
ANR	1173474	Identifier	y		1173304	0					
ANR	1173475	Identifier	not		1173304	1					
ANR	1173476	PrimaryExpression	0		1173304	1					
ANR	1173477	CompoundStatement		47:28:688:688	1173304	1					
ANR	1173478	IfStatement	if ( IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc ) )		1173304	0					
ANR	1173479	Condition	IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc )	2446:9:55264:55303	1173304	0	True				
ANR	1173480	AndExpression	IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc )		1173304	0		&&			
ANR	1173481	CallExpression	IS_NULL ( xc -> mbuf )		1173304	0					
ANR	1173482	Callee	IS_NULL		1173304	0					
ANR	1173483	Identifier	IS_NULL		1173304	0					
ANR	1173484	ArgumentList	xc -> mbuf		1173304	1					
ANR	1173485	Argument	xc -> mbuf		1173304	0					
ANR	1173486	PtrMemberAccess	xc -> mbuf		1173304	0					
ANR	1173487	Identifier	xc		1173304	0					
ANR	1173488	Identifier	mbuf		1173304	1					
ANR	1173489	UnaryOperationExpression	! IS_NCCLASS_NOT ( xc )		1173304	1					
ANR	1173490	UnaryOperator	!		1173304	0					
ANR	1173491	CallExpression	IS_NCCLASS_NOT ( xc )		1173304	1					
ANR	1173492	Callee	IS_NCCLASS_NOT		1173304	0					
ANR	1173493	Identifier	IS_NCCLASS_NOT		1173304	0					
ANR	1173494	ArgumentList	xc		1173304	1					
ANR	1173495	Argument	xc		1173304	0					
ANR	1173496	Identifier	xc		1173304	0					
ANR	1173497	CompoundStatement		48:51:741:741	1173304	1					
ANR	1173498	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		1173304	0					
ANR	1173499	ForInit	i = 0 ;	2447:12:55320:55325	1173304	0	True				
ANR	1173500	AssignmentExpression	i = 0		1173304	0		=			
ANR	1173501	Identifier	i		1173304	0					
ANR	1173502	PrimaryExpression	0		1173304	1					
ANR	1173503	Condition	i < SINGLE_BYTE_SIZE	2447:19:55327:55346	1173304	1	True				
ANR	1173504	RelationalExpression	i < SINGLE_BYTE_SIZE		1173304	0		<			
ANR	1173505	Identifier	i		1173304	0					
ANR	1173506	Identifier	SINGLE_BYTE_SIZE		1173304	1					
ANR	1173507	PostIncDecOperationExpression	i ++	2447:41:55349:55351	1173304	2	True				
ANR	1173508	Identifier	i		1173304	0					
ANR	1173509	IncDec	++		1173304	1					
ANR	1173510	CompoundStatement		49:46:789:789	1173304	3					
ANR	1173511	IfStatement	"if ( BITSET_AT ( xc -> bs , i ) )"		1173304	0					
ANR	1173512	Condition	"BITSET_AT ( xc -> bs , i )"	2448:6:55362:55381	1173304	0	True				
ANR	1173513	CallExpression	"BITSET_AT ( xc -> bs , i )"		1173304	0					
ANR	1173514	Callee	BITSET_AT		1173304	0					
ANR	1173515	Identifier	BITSET_AT		1173304	0					
ANR	1173516	ArgumentList	xc -> bs		1173304	1					
ANR	1173517	Argument	xc -> bs		1173304	0					
ANR	1173518	PtrMemberAccess	xc -> bs		1173304	0					
ANR	1173519	Identifier	xc		1173304	0					
ANR	1173520	Identifier	bs		1173304	1					
ANR	1173521	Argument	i		1173304	1					
ANR	1173522	Identifier	i		1173304	0					
ANR	1173523	CompoundStatement		50:28:819:819	1173304	1					
ANR	1173524	IfStatement	"if ( IS_CODE_SB_WORD ( reg -> enc , i ) )"		1173304	0					
ANR	1173525	Condition	"IS_CODE_SB_WORD ( reg -> enc , i )"	2449:8:55394:55421	1173304	0	True				
ANR	1173526	CallExpression	"IS_CODE_SB_WORD ( reg -> enc , i )"		1173304	0					
ANR	1173527	Callee	IS_CODE_SB_WORD		1173304	0					
ANR	1173528	Identifier	IS_CODE_SB_WORD		1173304	0					
ANR	1173529	ArgumentList	reg -> enc		1173304	1					
ANR	1173530	Argument	reg -> enc		1173304	0					
ANR	1173531	PtrMemberAccess	reg -> enc		1173304	0					
ANR	1173532	Identifier	reg		1173304	0					
ANR	1173533	Identifier	enc		1173304	1					
ANR	1173534	Argument	i		1173304	1					
ANR	1173535	Identifier	i		1173304	0					
ANR	1173536	ReturnStatement	return 0 ;	2449:38:55424:55432	1173304	1	True				
ANR	1173537	PrimaryExpression	0		1173304	0					
ANR	1173538	ReturnStatement	return 1 ;	2452:7:55454:55462	1173304	1	True				
ANR	1173539	PrimaryExpression	1		1173304	0					
ANR	1173540	ReturnStatement	return 0 ;	2454:5:55476:55484	1173304	1	True				
ANR	1173541	PrimaryExpression	0		1173304	0					
ANR	1173542	ElseStatement	else		1173304	0					
ANR	1173543	CompoundStatement		58:8:934:934	1173304	0					
ANR	1173544	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		1173304	0					
ANR	1173545	ForInit	i = 0 ;	2457:10:55511:55516	1173304	0	True				
ANR	1173546	AssignmentExpression	i = 0		1173304	0		=			
ANR	1173547	Identifier	i		1173304	0					
ANR	1173548	PrimaryExpression	0		1173304	1					
ANR	1173549	Condition	i < SINGLE_BYTE_SIZE	2457:17:55518:55537	1173304	1	True				
ANR	1173550	RelationalExpression	i < SINGLE_BYTE_SIZE		1173304	0		<			
ANR	1173551	Identifier	i		1173304	0					
ANR	1173552	Identifier	SINGLE_BYTE_SIZE		1173304	1					
ANR	1173553	PostIncDecOperationExpression	i ++	2457:39:55540:55542	1173304	2	True				
ANR	1173554	Identifier	i		1173304	0					
ANR	1173555	IncDec	++		1173304	1					
ANR	1173556	CompoundStatement		59:44:980:980	1173304	3					
ANR	1173557	IfStatement	"if ( ! IS_CODE_SB_WORD ( reg -> enc , i ) )"		1173304	0					
ANR	1173558	Condition	"! IS_CODE_SB_WORD ( reg -> enc , i )"	2458:11:55558:55587	1173304	0	True				
ANR	1173559	UnaryOperationExpression	"! IS_CODE_SB_WORD ( reg -> enc , i )"		1173304	0					
ANR	1173560	UnaryOperator	!		1173304	0					
ANR	1173561	CallExpression	"IS_CODE_SB_WORD ( reg -> enc , i )"		1173304	1					
ANR	1173562	Callee	IS_CODE_SB_WORD		1173304	0					
ANR	1173563	Identifier	IS_CODE_SB_WORD		1173304	0					
ANR	1173564	ArgumentList	reg -> enc		1173304	1					
ANR	1173565	Argument	reg -> enc		1173304	0					
ANR	1173566	PtrMemberAccess	reg -> enc		1173304	0					
ANR	1173567	Identifier	reg		1173304	0					
ANR	1173568	Identifier	enc		1173304	1					
ANR	1173569	Argument	i		1173304	1					
ANR	1173570	Identifier	i		1173304	0					
ANR	1173571	CompoundStatement		60:43:1025:1025	1173304	1					
ANR	1173572	IfStatement	if ( ! IS_NCCLASS_NOT ( xc ) )		1173304	0					
ANR	1173573	Condition	! IS_NCCLASS_NOT ( xc )	2459:6:55598:55616	1173304	0	True				
ANR	1173574	UnaryOperationExpression	! IS_NCCLASS_NOT ( xc )		1173304	0					
ANR	1173575	UnaryOperator	!		1173304	0					
ANR	1173576	CallExpression	IS_NCCLASS_NOT ( xc )		1173304	1					
ANR	1173577	Callee	IS_NCCLASS_NOT		1173304	0					
ANR	1173578	Identifier	IS_NCCLASS_NOT		1173304	0					
ANR	1173579	ArgumentList	xc		1173304	1					
ANR	1173580	Argument	xc		1173304	0					
ANR	1173581	Identifier	xc		1173304	0					
ANR	1173582	CompoundStatement		61:27:1054:1054	1173304	1					
ANR	1173583	IfStatement	"if ( BITSET_AT ( xc -> bs , i ) )"		1173304	0					
ANR	1173584	Condition	"BITSET_AT ( xc -> bs , i )"	2460:8:55629:55648	1173304	0	True				
ANR	1173585	CallExpression	"BITSET_AT ( xc -> bs , i )"		1173304	0					
ANR	1173586	Callee	BITSET_AT		1173304	0					
ANR	1173587	Identifier	BITSET_AT		1173304	0					
ANR	1173588	ArgumentList	xc -> bs		1173304	1					
ANR	1173589	Argument	xc -> bs		1173304	0					
ANR	1173590	PtrMemberAccess	xc -> bs		1173304	0					
ANR	1173591	Identifier	xc		1173304	0					
ANR	1173592	Identifier	bs		1173304	1					
ANR	1173593	Argument	i		1173304	1					
ANR	1173594	Identifier	i		1173304	0					
ANR	1173595	ReturnStatement	return 0 ;	2461:6:55657:55665	1173304	1	True				
ANR	1173596	PrimaryExpression	0		1173304	0					
ANR	1173597	ElseStatement	else		1173304	0					
ANR	1173598	CompoundStatement		65:7:1113:1113	1173304	0					
ANR	1173599	IfStatement	"if ( ! BITSET_AT ( xc -> bs , i ) )"		1173304	0					
ANR	1173600	Condition	"! BITSET_AT ( xc -> bs , i )"	2464:8:55688:55709	1173304	0	True				
ANR	1173601	UnaryOperationExpression	"! BITSET_AT ( xc -> bs , i )"		1173304	0					
ANR	1173602	UnaryOperator	!		1173304	0					
ANR	1173603	CallExpression	"BITSET_AT ( xc -> bs , i )"		1173304	1					
ANR	1173604	Callee	BITSET_AT		1173304	0					
ANR	1173605	Identifier	BITSET_AT		1173304	0					
ANR	1173606	ArgumentList	xc -> bs		1173304	1					
ANR	1173607	Argument	xc -> bs		1173304	0					
ANR	1173608	PtrMemberAccess	xc -> bs		1173304	0					
ANR	1173609	Identifier	xc		1173304	0					
ANR	1173610	Identifier	bs		1173304	1					
ANR	1173611	Argument	i		1173304	1					
ANR	1173612	Identifier	i		1173304	0					
ANR	1173613	ReturnStatement	return 0 ;	2465:6:55718:55726	1173304	1	True				
ANR	1173614	PrimaryExpression	0		1173304	0					
ANR	1173615	ReturnStatement	return 1 ;	2469:5:55753:55761	1173304	1	True				
ANR	1173616	PrimaryExpression	1		1173304	0					
ANR	1173617	BreakStatement	break ;	2471:3:55771:55776	1173304	2	True				
ANR	1173618	Label	default :	2473:1:55780:55787	1173304	3	True				
ANR	1173619	Identifier	default		1173304	0					
ANR	1173620	BreakStatement	break ;	2474:3:55792:55797	1173304	4	True				
ANR	1173621	BreakStatement	break ;	2476:1:55803:55808	1173304	2	True				
ANR	1173622	Label	case NT_CCLASS :	2478:6:55817:55831	1173304	3	True				
ANR	1173623	Identifier	NT_CCLASS		1173304	0					
ANR	1173624	CompoundStatement		83:3:1284:1311	1173304	4					
ANR	1173625	IdentifierDeclStatement	int v ;	2480:3:55839:55844	1173304	0	True				
ANR	1173626	IdentifierDecl	v		1173304	0					
ANR	1173627	IdentifierDeclType	int		1173304	0					
ANR	1173628	Identifier	v		1173304	1					
ANR	1173629	IdentifierDeclStatement	CClassNode * yc = NCCLASS ( y ) ;	2481:3:55849:55876	1173304	1	True				
ANR	1173630	IdentifierDecl	* yc = NCCLASS ( y )		1173304	0					
ANR	1173631	IdentifierDeclType	CClassNode *		1173304	0					
ANR	1173632	Identifier	yc		1173304	1					
ANR	1173633	AssignmentExpression	* yc = NCCLASS ( y )		1173304	2		=			
ANR	1173634	Identifier	yc		1173304	0					
ANR	1173635	CallExpression	NCCLASS ( y )		1173304	1					
ANR	1173636	Callee	NCCLASS		1173304	0					
ANR	1173637	Identifier	NCCLASS		1173304	0					
ANR	1173638	ArgumentList	y		1173304	1					
ANR	1173639	Argument	y		1173304	0					
ANR	1173640	Identifier	y		1173304	0					
ANR	1173641	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		1173304	2					
ANR	1173642	ForInit	i = 0 ;	2483:8:55887:55892	1173304	0	True				
ANR	1173643	AssignmentExpression	i = 0		1173304	0		=			
ANR	1173644	Identifier	i		1173304	0					
ANR	1173645	PrimaryExpression	0		1173304	1					
ANR	1173646	Condition	i < SINGLE_BYTE_SIZE	2483:15:55894:55913	1173304	1	True				
ANR	1173647	RelationalExpression	i < SINGLE_BYTE_SIZE		1173304	0		<			
ANR	1173648	Identifier	i		1173304	0					
ANR	1173649	Identifier	SINGLE_BYTE_SIZE		1173304	1					
ANR	1173650	PostIncDecOperationExpression	i ++	2483:37:55916:55918	1173304	2	True				
ANR	1173651	Identifier	i		1173304	0					
ANR	1173652	IncDec	++		1173304	1					
ANR	1173653	CompoundStatement		85:42:1356:1356	1173304	3					
ANR	1173654	ExpressionStatement	"v = BITSET_AT ( xc -> bs , i )"	2484:5:55928:55952	1173304	0	True				
ANR	1173655	AssignmentExpression	"v = BITSET_AT ( xc -> bs , i )"		1173304	0		=			
ANR	1173656	Identifier	v		1173304	0					
ANR	1173657	CallExpression	"BITSET_AT ( xc -> bs , i )"		1173304	1					
ANR	1173658	Callee	BITSET_AT		1173304	0					
ANR	1173659	Identifier	BITSET_AT		1173304	0					
ANR	1173660	ArgumentList	xc -> bs		1173304	1					
ANR	1173661	Argument	xc -> bs		1173304	0					
ANR	1173662	PtrMemberAccess	xc -> bs		1173304	0					
ANR	1173663	Identifier	xc		1173304	0					
ANR	1173664	Identifier	bs		1173304	1					
ANR	1173665	Argument	i		1173304	1					
ANR	1173666	Identifier	i		1173304	0					
ANR	1173667	IfStatement	if ( ( v != 0 && ! IS_NCCLASS_NOT ( xc ) ) || ( v == 0 && IS_NCCLASS_NOT ( xc ) ) )		1173304	1					
ANR	1173668	Condition	( v != 0 && ! IS_NCCLASS_NOT ( xc ) ) || ( v == 0 && IS_NCCLASS_NOT ( xc ) )	2485:9:55963:56043	1173304	0	True				
ANR	1173669	OrExpression	( v != 0 && ! IS_NCCLASS_NOT ( xc ) ) || ( v == 0 && IS_NCCLASS_NOT ( xc ) )		1173304	0		||			
ANR	1173670	AndExpression	v != 0 && ! IS_NCCLASS_NOT ( xc )		1173304	0		&&			
ANR	1173671	EqualityExpression	v != 0		1173304	0		!=			
ANR	1173672	Identifier	v		1173304	0					
ANR	1173673	PrimaryExpression	0		1173304	1					
ANR	1173674	UnaryOperationExpression	! IS_NCCLASS_NOT ( xc )		1173304	1					
ANR	1173675	UnaryOperator	!		1173304	0					
ANR	1173676	CallExpression	IS_NCCLASS_NOT ( xc )		1173304	1					
ANR	1173677	Callee	IS_NCCLASS_NOT		1173304	0					
ANR	1173678	Identifier	IS_NCCLASS_NOT		1173304	0					
ANR	1173679	ArgumentList	xc		1173304	1					
ANR	1173680	Argument	xc		1173304	0					
ANR	1173681	Identifier	xc		1173304	0					
ANR	1173682	AndExpression	v == 0 && IS_NCCLASS_NOT ( xc )		1173304	1		&&			
ANR	1173683	EqualityExpression	v == 0		1173304	0		==			
ANR	1173684	Identifier	v		1173304	0					
ANR	1173685	PrimaryExpression	0		1173304	1					
ANR	1173686	CallExpression	IS_NCCLASS_NOT ( xc )		1173304	1					
ANR	1173687	Callee	IS_NCCLASS_NOT		1173304	0					
ANR	1173688	Identifier	IS_NCCLASS_NOT		1173304	0					
ANR	1173689	ArgumentList	xc		1173304	1					
ANR	1173690	Argument	xc		1173304	0					
ANR	1173691	Identifier	xc		1173304	0					
ANR	1173692	CompoundStatement		88:48:1481:1481	1173304	1					
ANR	1173693	ExpressionStatement	"v = BITSET_AT ( yc -> bs , i )"	2487:7:56055:56079	1173304	0	True				
ANR	1173694	AssignmentExpression	"v = BITSET_AT ( yc -> bs , i )"		1173304	0		=			
ANR	1173695	Identifier	v		1173304	0					
ANR	1173696	CallExpression	"BITSET_AT ( yc -> bs , i )"		1173304	1					
ANR	1173697	Callee	BITSET_AT		1173304	0					
ANR	1173698	Identifier	BITSET_AT		1173304	0					
ANR	1173699	ArgumentList	yc -> bs		1173304	1					
ANR	1173700	Argument	yc -> bs		1173304	0					
ANR	1173701	PtrMemberAccess	yc -> bs		1173304	0					
ANR	1173702	Identifier	yc		1173304	0					
ANR	1173703	Identifier	bs		1173304	1					
ANR	1173704	Argument	i		1173304	1					
ANR	1173705	Identifier	i		1173304	0					
ANR	1173706	IfStatement	if ( ( v != 0 && ! IS_NCCLASS_NOT ( yc ) ) || ( v == 0 && IS_NCCLASS_NOT ( yc ) ) )		1173304	1					
ANR	1173707	Condition	( v != 0 && ! IS_NCCLASS_NOT ( yc ) ) || ( v == 0 && IS_NCCLASS_NOT ( yc ) )	2488:11:56092:56174	1173304	0	True				
ANR	1173708	OrExpression	( v != 0 && ! IS_NCCLASS_NOT ( yc ) ) || ( v == 0 && IS_NCCLASS_NOT ( yc ) )		1173304	0		||			
ANR	1173709	AndExpression	v != 0 && ! IS_NCCLASS_NOT ( yc )		1173304	0		&&			
ANR	1173710	EqualityExpression	v != 0		1173304	0		!=			
ANR	1173711	Identifier	v		1173304	0					
ANR	1173712	PrimaryExpression	0		1173304	1					
ANR	1173713	UnaryOperationExpression	! IS_NCCLASS_NOT ( yc )		1173304	1					
ANR	1173714	UnaryOperator	!		1173304	0					
ANR	1173715	CallExpression	IS_NCCLASS_NOT ( yc )		1173304	1					
ANR	1173716	Callee	IS_NCCLASS_NOT		1173304	0					
ANR	1173717	Identifier	IS_NCCLASS_NOT		1173304	0					
ANR	1173718	ArgumentList	yc		1173304	1					
ANR	1173719	Argument	yc		1173304	0					
ANR	1173720	Identifier	yc		1173304	0					
ANR	1173721	AndExpression	v == 0 && IS_NCCLASS_NOT ( yc )		1173304	1		&&			
ANR	1173722	EqualityExpression	v == 0		1173304	0		==			
ANR	1173723	Identifier	v		1173304	0					
ANR	1173724	PrimaryExpression	0		1173304	1					
ANR	1173725	CallExpression	IS_NCCLASS_NOT ( yc )		1173304	1					
ANR	1173726	Callee	IS_NCCLASS_NOT		1173304	0					
ANR	1173727	Identifier	IS_NCCLASS_NOT		1173304	0					
ANR	1173728	ArgumentList	yc		1173304	1					
ANR	1173729	Argument	yc		1173304	0					
ANR	1173730	Identifier	yc		1173304	0					
ANR	1173731	ReturnStatement	return 0 ;	2490:2:56179:56187	1173304	1	True				
ANR	1173732	PrimaryExpression	0		1173304	0					
ANR	1173733	IfStatement	if ( ( IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc ) ) || ( IS_NULL ( yc -> mbuf ) && ! IS_NCCLASS_NOT ( yc ) ) )		1173304	3					
ANR	1173734	Condition	( IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc ) ) || ( IS_NULL ( yc -> mbuf ) && ! IS_NCCLASS_NOT ( yc ) )	2493:7:56208:56302	1173304	0	True				
ANR	1173735	OrExpression	( IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc ) ) || ( IS_NULL ( yc -> mbuf ) && ! IS_NCCLASS_NOT ( yc ) )		1173304	0		||			
ANR	1173736	AndExpression	IS_NULL ( xc -> mbuf ) && ! IS_NCCLASS_NOT ( xc )		1173304	0		&&			
ANR	1173737	CallExpression	IS_NULL ( xc -> mbuf )		1173304	0					
ANR	1173738	Callee	IS_NULL		1173304	0					
ANR	1173739	Identifier	IS_NULL		1173304	0					
ANR	1173740	ArgumentList	xc -> mbuf		1173304	1					
ANR	1173741	Argument	xc -> mbuf		1173304	0					
ANR	1173742	PtrMemberAccess	xc -> mbuf		1173304	0					
ANR	1173743	Identifier	xc		1173304	0					
ANR	1173744	Identifier	mbuf		1173304	1					
ANR	1173745	UnaryOperationExpression	! IS_NCCLASS_NOT ( xc )		1173304	1					
ANR	1173746	UnaryOperator	!		1173304	0					
ANR	1173747	CallExpression	IS_NCCLASS_NOT ( xc )		1173304	1					
ANR	1173748	Callee	IS_NCCLASS_NOT		1173304	0					
ANR	1173749	Identifier	IS_NCCLASS_NOT		1173304	0					
ANR	1173750	ArgumentList	xc		1173304	1					
ANR	1173751	Argument	xc		1173304	0					
ANR	1173752	Identifier	xc		1173304	0					
ANR	1173753	AndExpression	IS_NULL ( yc -> mbuf ) && ! IS_NCCLASS_NOT ( yc )		1173304	1		&&			
ANR	1173754	CallExpression	IS_NULL ( yc -> mbuf )		1173304	0					
ANR	1173755	Callee	IS_NULL		1173304	0					
ANR	1173756	Identifier	IS_NULL		1173304	0					
ANR	1173757	ArgumentList	yc -> mbuf		1173304	1					
ANR	1173758	Argument	yc -> mbuf		1173304	0					
ANR	1173759	PtrMemberAccess	yc -> mbuf		1173304	0					
ANR	1173760	Identifier	yc		1173304	0					
ANR	1173761	Identifier	mbuf		1173304	1					
ANR	1173762	UnaryOperationExpression	! IS_NCCLASS_NOT ( yc )		1173304	1					
ANR	1173763	UnaryOperator	!		1173304	0					
ANR	1173764	CallExpression	IS_NCCLASS_NOT ( yc )		1173304	1					
ANR	1173765	Callee	IS_NCCLASS_NOT		1173304	0					
ANR	1173766	Identifier	IS_NCCLASS_NOT		1173304	0					
ANR	1173767	ArgumentList	yc		1173304	1					
ANR	1173768	Argument	yc		1173304	0					
ANR	1173769	Identifier	yc		1173304	0					
ANR	1173770	ReturnStatement	return 1 ;	2495:5:56310:56318	1173304	1	True				
ANR	1173771	PrimaryExpression	1		1173304	0					
ANR	1173772	ReturnStatement	return 0 ;	2496:3:56323:56331	1173304	4	True				
ANR	1173773	PrimaryExpression	0		1173304	0					
ANR	1173774	BreakStatement	break ;	2498:1:56337:56342	1173304	5	True				
ANR	1173775	Label	case NT_STR :	2500:6:56351:56362	1173304	6	True				
ANR	1173776	Identifier	NT_STR		1173304	0					
ANR	1173777	GotoStatement	goto swap ;	2501:1:56365:56374	1173304	7	True				
ANR	1173778	Identifier	swap		1173304	0					
ANR	1173779	BreakStatement	break ;	2502:1:56377:56382	1173304	8	True				
ANR	1173780	Label	default :	2504:6:56391:56398	1173304	9	True				
ANR	1173781	Identifier	default		1173304	0					
ANR	1173782	BreakStatement	break ;	2505:1:56401:56406	1173304	10	True				
ANR	1173783	BreakStatement	break ;	2508:4:56426:56431	1173304	5	True				
ANR	1173784	Label	case NT_STR :	2510:2:56436:56447	1173304	6	True				
ANR	1173785	Identifier	NT_STR		1173304	0					
ANR	1173786	CompoundStatement		114:6:1896:1917	1173304	7					
ANR	1173787	IdentifierDeclStatement	StrNode * xs = NSTR ( x ) ;	2512:6:56461:56482	1173304	0	True				
ANR	1173788	IdentifierDecl	* xs = NSTR ( x )		1173304	0					
ANR	1173789	IdentifierDeclType	StrNode *		1173304	0					
ANR	1173790	Identifier	xs		1173304	1					
ANR	1173791	AssignmentExpression	* xs = NSTR ( x )		1173304	2		=			
ANR	1173792	Identifier	xs		1173304	0					
ANR	1173793	CallExpression	NSTR ( x )		1173304	1					
ANR	1173794	Callee	NSTR		1173304	0					
ANR	1173795	Identifier	NSTR		1173304	0					
ANR	1173796	ArgumentList	x		1173304	1					
ANR	1173797	Argument	x		1173304	0					
ANR	1173798	Identifier	x		1173304	0					
ANR	1173799	IfStatement	if ( NSTRING_LEN ( x ) == 0 )		1173304	1					
ANR	1173800	Condition	NSTRING_LEN ( x ) == 0	2513:10:56494:56512	1173304	0	True				
ANR	1173801	EqualityExpression	NSTRING_LEN ( x ) == 0		1173304	0		==			
ANR	1173802	CallExpression	NSTRING_LEN ( x )		1173304	0					
ANR	1173803	Callee	NSTRING_LEN		1173304	0					
ANR	1173804	Identifier	NSTRING_LEN		1173304	0					
ANR	1173805	ArgumentList	x		1173304	1					
ANR	1173806	Argument	x		1173304	0					
ANR	1173807	Identifier	x		1173304	0					
ANR	1173808	PrimaryExpression	0		1173304	1					
ANR	1173809	BreakStatement	break ;	2514:1:56516:56521	1173304	1	True				
ANR	1173810	SwitchStatement	switch ( ytype )		1173304	2					
ANR	1173811	Condition	ytype	2517:14:56560:56564	1173304	0	True				
ANR	1173812	Identifier	ytype		1173304	0					
ANR	1173813	CompoundStatement		119:21:2002:2002	1173304	1					
ANR	1173814	Label	case NT_CTYPE :	2518:6:56575:56588	1173304	0	True				
ANR	1173815	Identifier	NT_CTYPE		1173304	0					
ANR	1173816	SwitchStatement	switch ( NCTYPE ( y ) -> ctype )		1173304	1					
ANR	1173817	Condition	NCTYPE ( y ) -> ctype	2519:16:56606:56621	1173304	0	True				
ANR	1173818	PtrMemberAccess	NCTYPE ( y ) -> ctype		1173304	0					
ANR	1173819	CallExpression	NCTYPE ( y )		1173304	0					
ANR	1173820	Callee	NCTYPE		1173304	0					
ANR	1173821	Identifier	NCTYPE		1173304	0					
ANR	1173822	ArgumentList	y		1173304	1					
ANR	1173823	Argument	y		1173304	0					
ANR	1173824	Identifier	y		1173304	0					
ANR	1173825	Identifier	ctype		1173304	1					
ANR	1173826	CompoundStatement		121:34:2059:2059	1173304	1					
ANR	1173827	Label	case ONIGENC_CTYPE_WORD :	2520:8:56634:56657	1173304	0	True				
ANR	1173828	Identifier	ONIGENC_CTYPE_WORD		1173304	0					
ANR	1173829	IfStatement	"if ( ONIGENC_IS_MBC_WORD ( reg -> enc , xs -> s , xs -> end ) )"		1173304	1					
ANR	1173830	Condition	"ONIGENC_IS_MBC_WORD ( reg -> enc , xs -> s , xs -> end )"	2521:14:56673:56717	1173304	0	True				
ANR	1173831	CallExpression	"ONIGENC_IS_MBC_WORD ( reg -> enc , xs -> s , xs -> end )"		1173304	0					
ANR	1173832	Callee	ONIGENC_IS_MBC_WORD		1173304	0					
ANR	1173833	Identifier	ONIGENC_IS_MBC_WORD		1173304	0					
ANR	1173834	ArgumentList	reg -> enc		1173304	1					
ANR	1173835	Argument	reg -> enc		1173304	0					
ANR	1173836	PtrMemberAccess	reg -> enc		1173304	0					
ANR	1173837	Identifier	reg		1173304	0					
ANR	1173838	Identifier	enc		1173304	1					
ANR	1173839	Argument	xs -> s		1173304	1					
ANR	1173840	PtrMemberAccess	xs -> s		1173304	0					
ANR	1173841	Identifier	xs		1173304	0					
ANR	1173842	Identifier	s		1173304	1					
ANR	1173843	Argument	xs -> end		1173304	2					
ANR	1173844	PtrMemberAccess	xs -> end		1173304	0					
ANR	1173845	Identifier	xs		1173304	0					
ANR	1173846	Identifier	end		1173304	1					
ANR	1173847	ReturnStatement	return NCTYPE ( y ) -> not ;	2522:12:56732:56753	1173304	1	True				
ANR	1173848	PtrMemberAccess	NCTYPE ( y ) -> not		1173304	0					
ANR	1173849	CallExpression	NCTYPE ( y )		1173304	0					
ANR	1173850	Callee	NCTYPE		1173304	0					
ANR	1173851	Identifier	NCTYPE		1173304	0					
ANR	1173852	ArgumentList	y		1173304	1					
ANR	1173853	Argument	y		1173304	0					
ANR	1173854	Identifier	y		1173304	0					
ANR	1173855	Identifier	not		1173304	1					
ANR	1173856	ElseStatement	else		1173304	0					
ANR	1173857	ReturnStatement	return ! ( NCTYPE ( y ) -> not ) ;	2524:12:56782:56806	1173304	0	True				
ANR	1173858	UnaryOperationExpression	! ( NCTYPE ( y ) -> not )		1173304	0					
ANR	1173859	UnaryOperator	!		1173304	0					
ANR	1173860	PtrMemberAccess	NCTYPE ( y ) -> not		1173304	1					
ANR	1173861	CallExpression	NCTYPE ( y )		1173304	0					
ANR	1173862	Callee	NCTYPE		1173304	0					
ANR	1173863	Identifier	NCTYPE		1173304	0					
ANR	1173864	ArgumentList	y		1173304	1					
ANR	1173865	Argument	y		1173304	0					
ANR	1173866	Identifier	y		1173304	0					
ANR	1173867	Identifier	not		1173304	1					
ANR	1173868	BreakStatement	break ;	2525:10:56818:56823	1173304	2	True				
ANR	1173869	Label	default :	2526:8:56833:56840	1173304	3	True				
ANR	1173870	Identifier	default		1173304	0					
ANR	1173871	BreakStatement	break ;	2527:10:56852:56857	1173304	4	True				
ANR	1173872	BreakStatement	break ;	2529:8:56877:56882	1173304	2	True				
ANR	1173873	Label	case NT_CCLASS :	2531:6:56891:56905	1173304	3	True				
ANR	1173874	Identifier	NT_CCLASS		1173304	0					
ANR	1173875	CompoundStatement		135:10:2362:2389	1173304	4					
ANR	1173876	IdentifierDeclStatement	CClassNode * cc = NCCLASS ( y ) ;	2533:10:56927:56954	1173304	0	True				
ANR	1173877	IdentifierDecl	* cc = NCCLASS ( y )		1173304	0					
ANR	1173878	IdentifierDeclType	CClassNode *		1173304	0					
ANR	1173879	Identifier	cc		1173304	1					
ANR	1173880	AssignmentExpression	* cc = NCCLASS ( y )		1173304	2		=			
ANR	1173881	Identifier	cc		1173304	0					
ANR	1173882	CallExpression	NCCLASS ( y )		1173304	1					
ANR	1173883	Callee	NCCLASS		1173304	0					
ANR	1173884	Identifier	NCCLASS		1173304	0					
ANR	1173885	ArgumentList	y		1173304	1					
ANR	1173886	Argument	y		1173304	0					
ANR	1173887	Identifier	y		1173304	0					
ANR	1173888	ExpressionStatement	"code = ONIGENC_MBC_TO_CODE ( reg -> enc , xs -> s , xs -> s + ONIGENC_MBC_MAXLEN ( reg -> enc ) )"	2535:10:56967:57085	1173304	1	True				
ANR	1173889	AssignmentExpression	"code = ONIGENC_MBC_TO_CODE ( reg -> enc , xs -> s , xs -> s + ONIGENC_MBC_MAXLEN ( reg -> enc ) )"		1173304	0		=			
ANR	1173890	Identifier	code		1173304	0					
ANR	1173891	CallExpression	"ONIGENC_MBC_TO_CODE ( reg -> enc , xs -> s , xs -> s + ONIGENC_MBC_MAXLEN ( reg -> enc ) )"		1173304	1					
ANR	1173892	Callee	ONIGENC_MBC_TO_CODE		1173304	0					
ANR	1173893	Identifier	ONIGENC_MBC_TO_CODE		1173304	0					
ANR	1173894	ArgumentList	reg -> enc		1173304	1					
ANR	1173895	Argument	reg -> enc		1173304	0					
ANR	1173896	PtrMemberAccess	reg -> enc		1173304	0					
ANR	1173897	Identifier	reg		1173304	0					
ANR	1173898	Identifier	enc		1173304	1					
ANR	1173899	Argument	xs -> s		1173304	1					
ANR	1173900	PtrMemberAccess	xs -> s		1173304	0					
ANR	1173901	Identifier	xs		1173304	0					
ANR	1173902	Identifier	s		1173304	1					
ANR	1173903	Argument	xs -> s + ONIGENC_MBC_MAXLEN ( reg -> enc )		1173304	2					
ANR	1173904	AdditiveExpression	xs -> s + ONIGENC_MBC_MAXLEN ( reg -> enc )		1173304	0		+			
ANR	1173905	PtrMemberAccess	xs -> s		1173304	0					
ANR	1173906	Identifier	xs		1173304	0					
ANR	1173907	Identifier	s		1173304	1					
ANR	1173908	CallExpression	ONIGENC_MBC_MAXLEN ( reg -> enc )		1173304	1					
ANR	1173909	Callee	ONIGENC_MBC_MAXLEN		1173304	0					
ANR	1173910	Identifier	ONIGENC_MBC_MAXLEN		1173304	0					
ANR	1173911	ArgumentList	reg -> enc		1173304	1					
ANR	1173912	Argument	reg -> enc		1173304	0					
ANR	1173913	PtrMemberAccess	reg -> enc		1173304	0					
ANR	1173914	Identifier	reg		1173304	0					
ANR	1173915	Identifier	enc		1173304	1					
ANR	1173916	ReturnStatement	"return ( onig_is_code_in_cc ( reg -> enc , code , cc ) != 0 ? 0 : 1 ) ;"	2537:10:57097:57157	1173304	2	True				
ANR	1173917	ConditionalExpression	"onig_is_code_in_cc ( reg -> enc , code , cc ) != 0 ? 0 : 1"		1173304	0					
ANR	1173918	Condition	"onig_is_code_in_cc ( reg -> enc , code , cc ) != 0"		1173304	0					
ANR	1173919	EqualityExpression	"onig_is_code_in_cc ( reg -> enc , code , cc ) != 0"		1173304	0		!=			
ANR	1173920	CallExpression	"onig_is_code_in_cc ( reg -> enc , code , cc )"		1173304	0					
ANR	1173921	Callee	onig_is_code_in_cc		1173304	0					
ANR	1173922	Identifier	onig_is_code_in_cc		1173304	0					
ANR	1173923	ArgumentList	reg -> enc		1173304	1					
ANR	1173924	Argument	reg -> enc		1173304	0					
ANR	1173925	PtrMemberAccess	reg -> enc		1173304	0					
ANR	1173926	Identifier	reg		1173304	0					
ANR	1173927	Identifier	enc		1173304	1					
ANR	1173928	Argument	code		1173304	1					
ANR	1173929	Identifier	code		1173304	0					
ANR	1173930	Argument	cc		1173304	2					
ANR	1173931	Identifier	cc		1173304	0					
ANR	1173932	PrimaryExpression	0		1173304	1					
ANR	1173933	PrimaryExpression	0		1173304	1					
ANR	1173934	PrimaryExpression	1		1173304	2					
ANR	1173935	BreakStatement	break ;	2539:8:57177:57182	1173304	5	True				
ANR	1173936	Label	case NT_STR :	2541:6:57191:57202	1173304	6	True				
ANR	1173937	Identifier	NT_STR		1173304	0					
ANR	1173938	CompoundStatement		146:10:2679:2700	1173304	7					
ANR	1173939	IdentifierDeclStatement	UChar * q ;	2543:10:57224:57232	1173304	0	True				
ANR	1173940	IdentifierDecl	* q		1173304	0					
ANR	1173941	IdentifierDeclType	UChar *		1173304	0					
ANR	1173942	Identifier	q		1173304	1					
ANR	1173943	IdentifierDeclStatement	StrNode * ys = NSTR ( y ) ;	2544:10:57244:57265	1173304	1	True				
ANR	1173944	IdentifierDecl	* ys = NSTR ( y )		1173304	0					
ANR	1173945	IdentifierDeclType	StrNode *		1173304	0					
ANR	1173946	Identifier	ys		1173304	1					
ANR	1173947	AssignmentExpression	* ys = NSTR ( y )		1173304	2		=			
ANR	1173948	Identifier	ys		1173304	0					
ANR	1173949	CallExpression	NSTR ( y )		1173304	1					
ANR	1173950	Callee	NSTR		1173304	0					
ANR	1173951	Identifier	NSTR		1173304	0					
ANR	1173952	ArgumentList	y		1173304	1					
ANR	1173953	Argument	y		1173304	0					
ANR	1173954	Identifier	y		1173304	0					
ANR	1173955	ExpressionStatement	len = NSTRING_LEN ( x )	2545:10:57277:57297	1173304	2	True				
ANR	1173956	AssignmentExpression	len = NSTRING_LEN ( x )		1173304	0		=			
ANR	1173957	Identifier	len		1173304	0					
ANR	1173958	CallExpression	NSTRING_LEN ( x )		1173304	1					
ANR	1173959	Callee	NSTRING_LEN		1173304	0					
ANR	1173960	Identifier	NSTRING_LEN		1173304	0					
ANR	1173961	ArgumentList	x		1173304	1					
ANR	1173962	Argument	x		1173304	0					
ANR	1173963	Identifier	x		1173304	0					
ANR	1173964	IfStatement	if ( len > NSTRING_LEN ( y ) )		1173304	3					
ANR	1173965	Condition	len > NSTRING_LEN ( y )	2546:14:57313:57332	1173304	0	True				
ANR	1173966	RelationalExpression	len > NSTRING_LEN ( y )		1173304	0		>			
ANR	1173967	Identifier	len		1173304	0					
ANR	1173968	CallExpression	NSTRING_LEN ( y )		1173304	1					
ANR	1173969	Callee	NSTRING_LEN		1173304	0					
ANR	1173970	Identifier	NSTRING_LEN		1173304	0					
ANR	1173971	ArgumentList	y		1173304	1					
ANR	1173972	Argument	y		1173304	0					
ANR	1173973	Identifier	y		1173304	0					
ANR	1173974	ExpressionStatement	len = NSTRING_LEN ( y )	2546:36:57335:57355	1173304	1	True				
ANR	1173975	AssignmentExpression	len = NSTRING_LEN ( y )		1173304	0		=			
ANR	1173976	Identifier	len		1173304	0					
ANR	1173977	CallExpression	NSTRING_LEN ( y )		1173304	1					
ANR	1173978	Callee	NSTRING_LEN		1173304	0					
ANR	1173979	Identifier	NSTRING_LEN		1173304	0					
ANR	1173980	ArgumentList	y		1173304	1					
ANR	1173981	Argument	y		1173304	0					
ANR	1173982	Identifier	y		1173304	0					
ANR	1173983	IfStatement	if ( NSTRING_IS_AMBIG ( x ) || NSTRING_IS_AMBIG ( y ) )		1173304	4					
ANR	1173984	Condition	NSTRING_IS_AMBIG ( x ) || NSTRING_IS_AMBIG ( y )	2547:14:57371:57412	1173304	0	True				
ANR	1173985	OrExpression	NSTRING_IS_AMBIG ( x ) || NSTRING_IS_AMBIG ( y )		1173304	0		||			
ANR	1173986	CallExpression	NSTRING_IS_AMBIG ( x )		1173304	0					
ANR	1173987	Callee	NSTRING_IS_AMBIG		1173304	0					
ANR	1173988	Identifier	NSTRING_IS_AMBIG		1173304	0					
ANR	1173989	ArgumentList	x		1173304	1					
ANR	1173990	Argument	x		1173304	0					
ANR	1173991	Identifier	x		1173304	0					
ANR	1173992	CallExpression	NSTRING_IS_AMBIG ( y )		1173304	1					
ANR	1173993	Callee	NSTRING_IS_AMBIG		1173304	0					
ANR	1173994	Identifier	NSTRING_IS_AMBIG		1173304	0					
ANR	1173995	ArgumentList	y		1173304	1					
ANR	1173996	Argument	y		1173304	0					
ANR	1173997	Identifier	y		1173304	0					
ANR	1173998	CompoundStatement		149:58:2850:2850	1173304	1					
ANR	1173999	ReturnStatement	return 0 ;	2549:12:57460:57468	1173304	0	True				
ANR	1174000	PrimaryExpression	0		1173304	0					
ANR	1174001	ElseStatement	else		1173304	0					
ANR	1174002	CompoundStatement		153:15:2932:2932	1173304	0					
ANR	1174003	ForStatement	"for ( i = 0 , p = ys -> s , q = xs -> s ; i < len ; i ++ , p ++ , q ++ )"		1173304	0					
ANR	1174004	ForInit	"i = 0 , p = ys -> s , q = xs -> s ;"	2552:17:57516:57543	1173304	0	True				
ANR	1174005	Expression	"i = 0 , p = ys -> s , q = xs -> s"		1173304	0					
ANR	1174006	AssignmentExpression	i = 0		1173304	0		=			
ANR	1174007	Identifier	i		1173304	0					
ANR	1174008	PrimaryExpression	0		1173304	1					
ANR	1174009	Expression	"p = ys -> s , q = xs -> s"		1173304	1					
ANR	1174010	AssignmentExpression	p = ys -> s		1173304	0		=			
ANR	1174011	Identifier	p		1173304	0					
ANR	1174012	PtrMemberAccess	ys -> s		1173304	1					
ANR	1174013	Identifier	ys		1173304	0					
ANR	1174014	Identifier	s		1173304	1					
ANR	1174015	AssignmentExpression	q = xs -> s		1173304	1		=			
ANR	1174016	Identifier	q		1173304	0					
ANR	1174017	PtrMemberAccess	xs -> s		1173304	1					
ANR	1174018	Identifier	xs		1173304	0					
ANR	1174019	Identifier	s		1173304	1					
ANR	1174020	Condition	i < len	2552:46:57545:57551	1173304	1	True				
ANR	1174021	RelationalExpression	i < len		1173304	0		<			
ANR	1174022	Identifier	i		1173304	0					
ANR	1174023	Identifier	len		1173304	1					
ANR	1174024	Expression	"i ++ , p ++ , q ++"	2552:55:57554:57566	1173304	2	True				
ANR	1174025	PostIncDecOperationExpression	i ++		1173304	0					
ANR	1174026	Identifier	i		1173304	0					
ANR	1174027	IncDec	++		1173304	1					
ANR	1174028	Expression	"p ++ , q ++"		1173304	1					
ANR	1174029	PostIncDecOperationExpression	p ++		1173304	0					
ANR	1174030	Identifier	p		1173304	0					
ANR	1174031	IncDec	++		1173304	1					
ANR	1174032	PostIncDecOperationExpression	q ++		1173304	1					
ANR	1174033	Identifier	q		1173304	0					
ANR	1174034	IncDec	++		1173304	1					
ANR	1174035	CompoundStatement		154:70:3004:3004	1173304	3					
ANR	1174036	IfStatement	if ( * p != * q )		1173304	0					
ANR	1174037	Condition	* p != * q	2553:18:57589:57596	1173304	0	True				
ANR	1174038	EqualityExpression	* p != * q		1173304	0		!=			
ANR	1174039	UnaryOperationExpression	* p		1173304	0					
ANR	1174040	UnaryOperator	*		1173304	0					
ANR	1174041	Identifier	p		1173304	1					
ANR	1174042	UnaryOperationExpression	* q		1173304	1					
ANR	1174043	UnaryOperator	*		1173304	0					
ANR	1174044	Identifier	q		1173304	1					
ANR	1174045	ReturnStatement	return 1 ;	2553:28:57599:57607	1173304	1	True				
ANR	1174046	PrimaryExpression	1		1173304	0					
ANR	1174047	BreakStatement	break ;	2557:8:57653:57658	1173304	8	True				
ANR	1174048	Label	default :	2559:6:57668:57675	1173304	9	True				
ANR	1174049	Identifier	default		1173304	0					
ANR	1174050	BreakStatement	break ;	2560:8:57685:57690	1173304	10	True				
ANR	1174051	BreakStatement	break ;	2563:4:57710:57715	1173304	8	True				
ANR	1174052	Label	default :	2565:2:57720:57727	1173304	9	True				
ANR	1174053	Identifier	default		1173304	0					
ANR	1174054	BreakStatement	break ;	2566:4:57733:57738	1173304	10	True				
ANR	1174055	ReturnStatement	return 0 ;	2569:2:57747:57755	1173304	7	True				
ANR	1174056	PrimaryExpression	0		1173304	0					
ANR	1174057	ReturnType	static int		1173304	1					
ANR	1174058	Identifier	is_not_included		1173304	2					
ANR	1174059	ParameterList	"Node * x , Node * y , regex_t * reg"		1173304	3					
ANR	1174060	Parameter	Node * x	2398:16:54532:54538	1173304	0	True				
ANR	1174061	ParameterType	Node *		1173304	0					
ANR	1174062	Identifier	x		1173304	1					
ANR	1174063	Parameter	Node * y	2398:25:54541:54547	1173304	1	True				
ANR	1174064	ParameterType	Node *		1173304	0					
ANR	1174065	Identifier	y		1173304	1					
ANR	1174066	Parameter	regex_t * reg	2398:34:54550:54561	1173304	2	True				
ANR	1174067	ParameterType	regex_t *		1173304	0					
ANR	1174068	Identifier	reg		1173304	1					
ANR	1174069	CFGEntryNode	ENTRY		1173304		True				
ANR	1174070	CFGExitNode	EXIT		1173304		True				
ANR	1174071	Symbol	BITSET_AT		1173304						
ANR	1174072	Symbol	xc -> mbuf		1173304						
ANR	1174073	Symbol	IS_NCCLASS_NOT		1173304						
ANR	1174074	Symbol	yc		1173304						
ANR	1174075	Symbol	NCCLASS		1173304						
ANR	1174076	Symbol	* NCTYPE		1173304						
ANR	1174077	Symbol	len		1173304						
ANR	1174078	Symbol	reg		1173304						
ANR	1174079	Symbol	tmp		1173304						
ANR	1174080	Symbol	ys		1173304						
ANR	1174081	Symbol	onig_is_code_in_cc		1173304						
ANR	1174082	Symbol	NCTYPE		1173304						
ANR	1174083	Symbol	ONIGENC_MBC_TO_CODE		1173304						
ANR	1174084	Symbol	SINGLE_BYTE_SIZE		1173304						
ANR	1174085	Symbol	* xs		1173304						
ANR	1174086	Symbol	yc -> bs		1173304						
ANR	1174087	Symbol	NSTRING_IS_AMBIG		1173304						
ANR	1174088	Symbol	NSTR		1173304						
ANR	1174089	Symbol	reg -> enc		1173304						
ANR	1174090	Symbol	* xc		1173304						
ANR	1174091	Symbol	NCTYPE ( y ) -> ctype		1173304						
ANR	1174092	Symbol	code		1173304						
ANR	1174093	Symbol	* ys		1173304						
ANR	1174094	Symbol	xs -> s		1173304						
ANR	1174095	Symbol	IS_CODE_SB_WORD		1173304						
ANR	1174096	Symbol	NCTYPE ( x ) -> ctype		1173304						
ANR	1174097	Symbol	yc -> mbuf		1173304						
ANR	1174098	Symbol	* yc		1173304						
ANR	1174099	Symbol	IS_NULL		1173304						
ANR	1174100	Symbol	NCTYPE ( x ) -> not		1173304						
ANR	1174101	Symbol	cc		1173304						
ANR	1174102	Symbol	ONIGENC_MBC_MAXLEN		1173304						
ANR	1174103	Symbol	i		1173304						
ANR	1174104	Symbol	xc		1173304						
ANR	1174105	Symbol	ytype		1173304						
ANR	1174106	Symbol	xc -> bs		1173304						
ANR	1174107	Symbol	ys -> s		1173304						
ANR	1174108	Symbol	p		1173304						
ANR	1174109	Symbol	q		1173304						
ANR	1174110	Symbol	v		1173304						
ANR	1174111	Symbol	NCTYPE ( y ) -> not		1173304						
ANR	1174112	Symbol	xs -> end		1173304						
ANR	1174113	Symbol	x		1173304						
ANR	1174114	Symbol	y		1173304						
ANR	1174115	Symbol	NTYPE		1173304						
ANR	1174116	Symbol	* p		1173304						
ANR	1174117	Symbol	xs		1173304						
ANR	1174118	Symbol	* q		1173304						
ANR	1174119	Symbol	NSTRING_LEN		1173304						
ANR	1174120	Symbol	ONIGENC_IS_MBC_WORD		1173304						
ANR	1174121	Symbol	* reg		1173304						
ANR	1174122	Function	get_head_value_node	2572:0:57760:59253							
ANR	1174123	FunctionDef	"get_head_value_node (Node * node , int exact , regex_t * reg)"		1174122	0					
ANR	1174124	CompoundStatement		2574:0:57830:59253	1174122	0					
ANR	1174125	IdentifierDeclStatement	Node * n = NULL_NODE ;	2575:2:57834:57853	1174122	0	True				
ANR	1174126	IdentifierDecl	* n = NULL_NODE		1174122	0					
ANR	1174127	IdentifierDeclType	Node *		1174122	0					
ANR	1174128	Identifier	n		1174122	1					
ANR	1174129	AssignmentExpression	* n = NULL_NODE		1174122	2		=			
ANR	1174130	Identifier	NULL_NODE		1174122	0					
ANR	1174131	Identifier	NULL_NODE		1174122	1					
ANR	1174132	SwitchStatement	switch ( NTYPE ( node ) )		1174122	1					
ANR	1174133	Condition	NTYPE ( node )	2577:10:57866:57876	1174122	0	True				
ANR	1174134	CallExpression	NTYPE ( node )		1174122	0					
ANR	1174135	Callee	NTYPE		1174122	0					
ANR	1174136	Identifier	NTYPE		1174122	0					
ANR	1174137	ArgumentList	node		1174122	1					
ANR	1174138	Argument	node		1174122	0					
ANR	1174139	Identifier	node		1174122	0					
ANR	1174140	CompoundStatement		4:23:48:48	1174122	1					
ANR	1174141	Label	case NT_BREF :	2578:2:57883:57895	1174122	0	True				
ANR	1174142	Identifier	NT_BREF		1174122	0					
ANR	1174143	Label	case NT_ALT :	2579:2:57899:57910	1174122	1	True				
ANR	1174144	Identifier	NT_ALT		1174122	0					
ANR	1174145	Label	case NT_CANY :	2580:2:57914:57926	1174122	2	True				
ANR	1174146	Identifier	NT_CANY		1174122	0					
ANR	1174147	Label	case NT_CALL :	2582:2:57953:57965	1174122	3	True				
ANR	1174148	Identifier	NT_CALL		1174122	0					
ANR	1174149	BreakStatement	break ;	2584:4:57978:57983	1174122	4	True				
ANR	1174150	Label	case NT_CTYPE :	2586:2:57988:58001	1174122	5	True				
ANR	1174151	Identifier	NT_CTYPE		1174122	0					
ANR	1174152	Label	case NT_CCLASS :	2587:2:58005:58019	1174122	6	True				
ANR	1174153	Identifier	NT_CCLASS		1174122	0					
ANR	1174154	IfStatement	if ( exact == 0 )		1174122	7					
ANR	1174155	Condition	exact == 0	2588:8:58029:58038	1174122	0	True				
ANR	1174156	EqualityExpression	exact == 0		1174122	0		==			
ANR	1174157	Identifier	exact		1174122	0					
ANR	1174158	PrimaryExpression	0		1174122	1					
ANR	1174159	CompoundStatement		15:20:210:210	1174122	1					
ANR	1174160	ExpressionStatement	n = node	2589:6:58049:58057	1174122	0	True				
ANR	1174161	AssignmentExpression	n = node		1174122	0		=			
ANR	1174162	Identifier	n		1174122	0					
ANR	1174163	Identifier	node		1174122	1					
ANR	1174164	BreakStatement	break ;	2591:4:58069:58074	1174122	8	True				
ANR	1174165	Label	case NT_LIST :	2593:2:58079:58091	1174122	9	True				
ANR	1174166	Identifier	NT_LIST		1174122	0					
ANR	1174167	ExpressionStatement	"n = get_head_value_node ( NCAR ( node ) , exact , reg )"	2594:4:58097:58144	1174122	10	True				
ANR	1174168	AssignmentExpression	"n = get_head_value_node ( NCAR ( node ) , exact , reg )"		1174122	0		=			
ANR	1174169	Identifier	n		1174122	0					
ANR	1174170	CallExpression	"get_head_value_node ( NCAR ( node ) , exact , reg )"		1174122	1					
ANR	1174171	Callee	get_head_value_node		1174122	0					
ANR	1174172	Identifier	get_head_value_node		1174122	0					
ANR	1174173	ArgumentList	NCAR ( node )		1174122	1					
ANR	1174174	Argument	NCAR ( node )		1174122	0					
ANR	1174175	CallExpression	NCAR ( node )		1174122	0					
ANR	1174176	Callee	NCAR		1174122	0					
ANR	1174177	Identifier	NCAR		1174122	0					
ANR	1174178	ArgumentList	node		1174122	1					
ANR	1174179	Argument	node		1174122	0					
ANR	1174180	Identifier	node		1174122	0					
ANR	1174181	Argument	exact		1174122	1					
ANR	1174182	Identifier	exact		1174122	0					
ANR	1174183	Argument	reg		1174122	2					
ANR	1174184	Identifier	reg		1174122	0					
ANR	1174185	BreakStatement	break ;	2595:4:58150:58155	1174122	11	True				
ANR	1174186	Label	case NT_STR :	2597:2:58160:58171	1174122	12	True				
ANR	1174187	Identifier	NT_STR		1174122	0					
ANR	1174188	CompoundStatement		26:6:354:378	1174122	13					
ANR	1174189	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	2599:6:58185:58209	1174122	0	True				
ANR	1174190	IdentifierDecl	* sn = NSTR ( node )		1174122	0					
ANR	1174191	IdentifierDeclType	StrNode *		1174122	0					
ANR	1174192	Identifier	sn		1174122	1					
ANR	1174193	AssignmentExpression	* sn = NSTR ( node )		1174122	2		=			
ANR	1174194	Identifier	sn		1174122	0					
ANR	1174195	CallExpression	NSTR ( node )		1174122	1					
ANR	1174196	Callee	NSTR		1174122	0					
ANR	1174197	Identifier	NSTR		1174122	0					
ANR	1174198	ArgumentList	node		1174122	1					
ANR	1174199	Argument	node		1174122	0					
ANR	1174200	Identifier	node		1174122	0					
ANR	1174201	IfStatement	if ( sn -> end <= sn -> s )		1174122	1					
ANR	1174202	Condition	sn -> end <= sn -> s	2601:10:58222:58237	1174122	0	True				
ANR	1174203	RelationalExpression	sn -> end <= sn -> s		1174122	0		<=			
ANR	1174204	PtrMemberAccess	sn -> end		1174122	0					
ANR	1174205	Identifier	sn		1174122	0					
ANR	1174206	Identifier	end		1174122	1					
ANR	1174207	PtrMemberAccess	sn -> s		1174122	1					
ANR	1174208	Identifier	sn		1174122	0					
ANR	1174209	Identifier	s		1174122	1					
ANR	1174210	BreakStatement	break ;	2602:1:58241:58246	1174122	1	True				
ANR	1174211	IfStatement	if ( exact != 0 && ! NSTRING_IS_RAW ( node ) && IS_IGNORECASE ( reg -> options ) )		1174122	2					
ANR	1174212	Condition	exact != 0 && ! NSTRING_IS_RAW ( node ) && IS_IGNORECASE ( reg -> options )	2604:10:58259:58327	1174122	0	True				
ANR	1174213	AndExpression	exact != 0 && ! NSTRING_IS_RAW ( node ) && IS_IGNORECASE ( reg -> options )		1174122	0		&&			
ANR	1174214	EqualityExpression	exact != 0		1174122	0		!=			
ANR	1174215	Identifier	exact		1174122	0					
ANR	1174216	PrimaryExpression	0		1174122	1					
ANR	1174217	AndExpression	! NSTRING_IS_RAW ( node ) && IS_IGNORECASE ( reg -> options )		1174122	1		&&			
ANR	1174218	UnaryOperationExpression	! NSTRING_IS_RAW ( node )		1174122	0					
ANR	1174219	UnaryOperator	!		1174122	0					
ANR	1174220	CallExpression	NSTRING_IS_RAW ( node )		1174122	1					
ANR	1174221	Callee	NSTRING_IS_RAW		1174122	0					
ANR	1174222	Identifier	NSTRING_IS_RAW		1174122	0					
ANR	1174223	ArgumentList	node		1174122	1					
ANR	1174224	Argument	node		1174122	0					
ANR	1174225	Identifier	node		1174122	0					
ANR	1174226	CallExpression	IS_IGNORECASE ( reg -> options )		1174122	1					
ANR	1174227	Callee	IS_IGNORECASE		1174122	0					
ANR	1174228	Identifier	IS_IGNORECASE		1174122	0					
ANR	1174229	ArgumentList	reg -> options		1174122	1					
ANR	1174230	Argument	reg -> options		1174122	0					
ANR	1174231	PtrMemberAccess	reg -> options		1174122	0					
ANR	1174232	Identifier	reg		1174122	0					
ANR	1174233	Identifier	options		1174122	1					
ANR	1174234	CompoundStatement		32:57:499:499	1174122	1					
ANR	1174235	ElseStatement	else		1174122	0					
ANR	1174236	CompoundStatement		34:11:520:520	1174122	0					
ANR	1174237	ExpressionStatement	n = node	2608:1:58354:58362	1174122	0	True				
ANR	1174238	AssignmentExpression	n = node		1174122	0		=			
ANR	1174239	Identifier	n		1174122	0					
ANR	1174240	Identifier	node		1174122	1					
ANR	1174241	BreakStatement	break ;	2611:4:58382:58387	1174122	14	True				
ANR	1174242	Label	case NT_QTFR :	2613:2:58392:58404	1174122	15	True				
ANR	1174243	Identifier	NT_QTFR		1174122	0					
ANR	1174244	CompoundStatement		42:6:587:613	1174122	16					
ANR	1174245	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	2615:6:58418:58444	1174122	0	True				
ANR	1174246	IdentifierDecl	* qn = NQTFR ( node )		1174122	0					
ANR	1174247	IdentifierDeclType	QtfrNode *		1174122	0					
ANR	1174248	Identifier	qn		1174122	1					
ANR	1174249	AssignmentExpression	* qn = NQTFR ( node )		1174122	2		=			
ANR	1174250	Identifier	qn		1174122	0					
ANR	1174251	CallExpression	NQTFR ( node )		1174122	1					
ANR	1174252	Callee	NQTFR		1174122	0					
ANR	1174253	Identifier	NQTFR		1174122	0					
ANR	1174254	ArgumentList	node		1174122	1					
ANR	1174255	Argument	node		1174122	0					
ANR	1174256	Identifier	node		1174122	0					
ANR	1174257	IfStatement	if ( qn -> lower > 0 )		1174122	1					
ANR	1174258	Condition	qn -> lower > 0	2616:10:58456:58468	1174122	0	True				
ANR	1174259	RelationalExpression	qn -> lower > 0		1174122	0		>			
ANR	1174260	PtrMemberAccess	qn -> lower		1174122	0					
ANR	1174261	Identifier	qn		1174122	0					
ANR	1174262	Identifier	lower		1174122	1					
ANR	1174263	PrimaryExpression	0		1174122	1					
ANR	1174264	CompoundStatement		43:25:640:640	1174122	1					
ANR	1174265	IfStatement	if ( IS_NOT_NULL ( qn -> head_exact ) )		1174122	0					
ANR	1174266	Condition	IS_NOT_NULL ( qn -> head_exact )	2617:5:58478:58504	1174122	0	True				
ANR	1174267	CallExpression	IS_NOT_NULL ( qn -> head_exact )		1174122	0					
ANR	1174268	Callee	IS_NOT_NULL		1174122	0					
ANR	1174269	Identifier	IS_NOT_NULL		1174122	0					
ANR	1174270	ArgumentList	qn -> head_exact		1174122	1					
ANR	1174271	Argument	qn -> head_exact		1174122	0					
ANR	1174272	PtrMemberAccess	qn -> head_exact		1174122	0					
ANR	1174273	Identifier	qn		1174122	0					
ANR	1174274	Identifier	head_exact		1174122	1					
ANR	1174275	ExpressionStatement	n = qn -> head_exact	2618:3:58510:58528	1174122	1	True				
ANR	1174276	AssignmentExpression	n = qn -> head_exact		1174122	0		=			
ANR	1174277	Identifier	n		1174122	0					
ANR	1174278	PtrMemberAccess	qn -> head_exact		1174122	1					
ANR	1174279	Identifier	qn		1174122	0					
ANR	1174280	Identifier	head_exact		1174122	1					
ANR	1174281	ElseStatement	else		1174122	0					
ANR	1174282	ExpressionStatement	"n = get_head_value_node ( qn -> target , exact , reg )"	2620:3:58539:58586	1174122	0	True				
ANR	1174283	AssignmentExpression	"n = get_head_value_node ( qn -> target , exact , reg )"		1174122	0		=			
ANR	1174284	Identifier	n		1174122	0					
ANR	1174285	CallExpression	"get_head_value_node ( qn -> target , exact , reg )"		1174122	1					
ANR	1174286	Callee	get_head_value_node		1174122	0					
ANR	1174287	Identifier	get_head_value_node		1174122	0					
ANR	1174288	ArgumentList	qn -> target		1174122	1					
ANR	1174289	Argument	qn -> target		1174122	0					
ANR	1174290	PtrMemberAccess	qn -> target		1174122	0					
ANR	1174291	Identifier	qn		1174122	0					
ANR	1174292	Identifier	target		1174122	1					
ANR	1174293	Argument	exact		1174122	1					
ANR	1174294	Identifier	exact		1174122	0					
ANR	1174295	Argument	reg		1174122	2					
ANR	1174296	Identifier	reg		1174122	0					
ANR	1174297	BreakStatement	break ;	2623:4:58606:58611	1174122	17	True				
ANR	1174298	Label	case NT_ENCLOSE :	2625:2:58616:58631	1174122	18	True				
ANR	1174299	Identifier	NT_ENCLOSE		1174122	0					
ANR	1174300	CompoundStatement		54:6:814:846	1174122	19					
ANR	1174301	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2627:6:58645:58677	1174122	0	True				
ANR	1174302	IdentifierDecl	* en = NENCLOSE ( node )		1174122	0					
ANR	1174303	IdentifierDeclType	EncloseNode *		1174122	0					
ANR	1174304	Identifier	en		1174122	1					
ANR	1174305	AssignmentExpression	* en = NENCLOSE ( node )		1174122	2		=			
ANR	1174306	Identifier	en		1174122	0					
ANR	1174307	CallExpression	NENCLOSE ( node )		1174122	1					
ANR	1174308	Callee	NENCLOSE		1174122	0					
ANR	1174309	Identifier	NENCLOSE		1174122	0					
ANR	1174310	ArgumentList	node		1174122	1					
ANR	1174311	Argument	node		1174122	0					
ANR	1174312	Identifier	node		1174122	0					
ANR	1174313	SwitchStatement	switch ( en -> type )		1174122	1					
ANR	1174314	Condition	en -> type	2628:14:58693:58700	1174122	0	True				
ANR	1174315	PtrMemberAccess	en -> type		1174122	0					
ANR	1174316	Identifier	en		1174122	0					
ANR	1174317	Identifier	type		1174122	1					
ANR	1174318	CompoundStatement		55:24:872:872	1174122	1					
ANR	1174319	Label	case ENCLOSE_OPTION :	2629:6:58711:58730	1174122	0	True				
ANR	1174320	Identifier	ENCLOSE_OPTION		1174122	0					
ANR	1174321	CompoundStatement		58:3:907:944	1174122	1					
ANR	1174322	IdentifierDeclStatement	OnigOptionType options = reg -> options ;	2631:3:58738:58775	1174122	0	True				
ANR	1174323	IdentifierDecl	options = reg -> options		1174122	0					
ANR	1174324	IdentifierDeclType	OnigOptionType		1174122	0					
ANR	1174325	Identifier	options		1174122	1					
ANR	1174326	AssignmentExpression	options = reg -> options		1174122	2		=			
ANR	1174327	Identifier	options		1174122	0					
ANR	1174328	PtrMemberAccess	reg -> options		1174122	1					
ANR	1174329	Identifier	reg		1174122	0					
ANR	1174330	Identifier	options		1174122	1					
ANR	1174331	ExpressionStatement	reg -> options = NENCLOSE ( node ) -> option	2633:3:58781:58818	1174122	1	True				
ANR	1174332	AssignmentExpression	reg -> options = NENCLOSE ( node ) -> option		1174122	0		=			
ANR	1174333	PtrMemberAccess	reg -> options		1174122	0					
ANR	1174334	Identifier	reg		1174122	0					
ANR	1174335	Identifier	options		1174122	1					
ANR	1174336	PtrMemberAccess	NENCLOSE ( node ) -> option		1174122	1					
ANR	1174337	CallExpression	NENCLOSE ( node )		1174122	0					
ANR	1174338	Callee	NENCLOSE		1174122	0					
ANR	1174339	Identifier	NENCLOSE		1174122	0					
ANR	1174340	ArgumentList	node		1174122	1					
ANR	1174341	Argument	node		1174122	0					
ANR	1174342	Identifier	node		1174122	0					
ANR	1174343	Identifier	option		1174122	1					
ANR	1174344	ExpressionStatement	"n = get_head_value_node ( NENCLOSE ( node ) -> target , exact , reg )"	2634:3:58823:58882	1174122	2	True				
ANR	1174345	AssignmentExpression	"n = get_head_value_node ( NENCLOSE ( node ) -> target , exact , reg )"		1174122	0		=			
ANR	1174346	Identifier	n		1174122	0					
ANR	1174347	CallExpression	"get_head_value_node ( NENCLOSE ( node ) -> target , exact , reg )"		1174122	1					
ANR	1174348	Callee	get_head_value_node		1174122	0					
ANR	1174349	Identifier	get_head_value_node		1174122	0					
ANR	1174350	ArgumentList	NENCLOSE ( node ) -> target		1174122	1					
ANR	1174351	Argument	NENCLOSE ( node ) -> target		1174122	0					
ANR	1174352	PtrMemberAccess	NENCLOSE ( node ) -> target		1174122	0					
ANR	1174353	CallExpression	NENCLOSE ( node )		1174122	0					
ANR	1174354	Callee	NENCLOSE		1174122	0					
ANR	1174355	Identifier	NENCLOSE		1174122	0					
ANR	1174356	ArgumentList	node		1174122	1					
ANR	1174357	Argument	node		1174122	0					
ANR	1174358	Identifier	node		1174122	0					
ANR	1174359	Identifier	target		1174122	1					
ANR	1174360	Argument	exact		1174122	1					
ANR	1174361	Identifier	exact		1174122	0					
ANR	1174362	Argument	reg		1174122	2					
ANR	1174363	Identifier	reg		1174122	0					
ANR	1174364	ExpressionStatement	reg -> options = options	2635:3:58887:58909	1174122	3	True				
ANR	1174365	AssignmentExpression	reg -> options = options		1174122	0		=			
ANR	1174366	PtrMemberAccess	reg -> options		1174122	0					
ANR	1174367	Identifier	reg		1174122	0					
ANR	1174368	Identifier	options		1174122	1					
ANR	1174369	Identifier	options		1174122	1					
ANR	1174370	BreakStatement	break ;	2637:1:58915:58920	1174122	2	True				
ANR	1174371	Label	case ENCLOSE_MEMORY :	2639:6:58929:58948	1174122	3	True				
ANR	1174372	Identifier	ENCLOSE_MEMORY		1174122	0					
ANR	1174373	Label	case ENCLOSE_STOP_BACKTRACK :	2640:6:58956:58983	1174122	4	True				
ANR	1174374	Identifier	ENCLOSE_STOP_BACKTRACK		1174122	0					
ANR	1174375	ExpressionStatement	"n = get_head_value_node ( en -> target , exact , reg )"	2641:1:58986:59033	1174122	5	True				
ANR	1174376	AssignmentExpression	"n = get_head_value_node ( en -> target , exact , reg )"		1174122	0		=			
ANR	1174377	Identifier	n		1174122	0					
ANR	1174378	CallExpression	"get_head_value_node ( en -> target , exact , reg )"		1174122	1					
ANR	1174379	Callee	get_head_value_node		1174122	0					
ANR	1174380	Identifier	get_head_value_node		1174122	0					
ANR	1174381	ArgumentList	en -> target		1174122	1					
ANR	1174382	Argument	en -> target		1174122	0					
ANR	1174383	PtrMemberAccess	en -> target		1174122	0					
ANR	1174384	Identifier	en		1174122	0					
ANR	1174385	Identifier	target		1174122	1					
ANR	1174386	Argument	exact		1174122	1					
ANR	1174387	Identifier	exact		1174122	0					
ANR	1174388	Argument	reg		1174122	2					
ANR	1174389	Identifier	reg		1174122	0					
ANR	1174390	BreakStatement	break ;	2642:1:59036:59041	1174122	6	True				
ANR	1174391	BreakStatement	break ;	2645:4:59061:59066	1174122	20	True				
ANR	1174392	Label	case NT_ANCHOR :	2647:2:59071:59085	1174122	21	True				
ANR	1174393	Identifier	NT_ANCHOR		1174122	0					
ANR	1174394	IfStatement	if ( NANCHOR ( node ) -> type == ANCHOR_PREC_READ )		1174122	22					
ANR	1174395	Condition	NANCHOR ( node ) -> type == ANCHOR_PREC_READ	2648:8:59095:59133	1174122	0	True				
ANR	1174396	EqualityExpression	NANCHOR ( node ) -> type == ANCHOR_PREC_READ		1174122	0		==			
ANR	1174397	PtrMemberAccess	NANCHOR ( node ) -> type		1174122	0					
ANR	1174398	CallExpression	NANCHOR ( node )		1174122	0					
ANR	1174399	Callee	NANCHOR		1174122	0					
ANR	1174400	Identifier	NANCHOR		1174122	0					
ANR	1174401	ArgumentList	node		1174122	1					
ANR	1174402	Argument	node		1174122	0					
ANR	1174403	Identifier	node		1174122	0					
ANR	1174404	Identifier	type		1174122	1					
ANR	1174405	Identifier	ANCHOR_PREC_READ		1174122	1					
ANR	1174406	ExpressionStatement	"n = get_head_value_node ( NANCHOR ( node ) -> target , exact , reg )"	2649:6:59142:59200	1174122	1	True				
ANR	1174407	AssignmentExpression	"n = get_head_value_node ( NANCHOR ( node ) -> target , exact , reg )"		1174122	0		=			
ANR	1174408	Identifier	n		1174122	0					
ANR	1174409	CallExpression	"get_head_value_node ( NANCHOR ( node ) -> target , exact , reg )"		1174122	1					
ANR	1174410	Callee	get_head_value_node		1174122	0					
ANR	1174411	Identifier	get_head_value_node		1174122	0					
ANR	1174412	ArgumentList	NANCHOR ( node ) -> target		1174122	1					
ANR	1174413	Argument	NANCHOR ( node ) -> target		1174122	0					
ANR	1174414	PtrMemberAccess	NANCHOR ( node ) -> target		1174122	0					
ANR	1174415	CallExpression	NANCHOR ( node )		1174122	0					
ANR	1174416	Callee	NANCHOR		1174122	0					
ANR	1174417	Identifier	NANCHOR		1174122	0					
ANR	1174418	ArgumentList	node		1174122	1					
ANR	1174419	Argument	node		1174122	0					
ANR	1174420	Identifier	node		1174122	0					
ANR	1174421	Identifier	target		1174122	1					
ANR	1174422	Argument	exact		1174122	1					
ANR	1174423	Identifier	exact		1174122	0					
ANR	1174424	Argument	reg		1174122	2					
ANR	1174425	Identifier	reg		1174122	0					
ANR	1174426	BreakStatement	break ;	2650:4:59206:59211	1174122	23	True				
ANR	1174427	Label	default :	2652:2:59216:59223	1174122	24	True				
ANR	1174428	Identifier	default		1174122	0					
ANR	1174429	BreakStatement	break ;	2653:4:59229:59234	1174122	25	True				
ANR	1174430	ReturnStatement	return n ;	2656:2:59243:59251	1174122	2	True				
ANR	1174431	Identifier	n		1174122	0					
ANR	1174432	ReturnType	static Node *		1174122	1					
ANR	1174433	Identifier	get_head_value_node		1174122	2					
ANR	1174434	ParameterList	"Node * node , int exact , regex_t * reg"		1174122	3					
ANR	1174435	Parameter	Node * node	2573:20:57793:57802	1174122	0	True				
ANR	1174436	ParameterType	Node *		1174122	0					
ANR	1174437	Identifier	node		1174122	1					
ANR	1174438	Parameter	int exact	2573:32:57805:57813	1174122	1	True				
ANR	1174439	ParameterType	int		1174122	0					
ANR	1174440	Identifier	exact		1174122	1					
ANR	1174441	Parameter	regex_t * reg	2573:43:57816:57827	1174122	2	True				
ANR	1174442	ParameterType	regex_t *		1174122	0					
ANR	1174443	Identifier	reg		1174122	1					
ANR	1174444	CFGEntryNode	ENTRY		1174122		True				
ANR	1174445	CFGExitNode	EXIT		1174122		True				
ANR	1174446	Symbol	* qn		1174122						
ANR	1174447	Symbol	NCAR		1174122						
ANR	1174448	Symbol	* sn		1174122						
ANR	1174449	Symbol	IS_NOT_NULL		1174122						
ANR	1174450	Symbol	* NENCLOSE		1174122						
ANR	1174451	Symbol	NSTRING_IS_RAW		1174122						
ANR	1174452	Symbol	NANCHOR ( node ) -> type		1174122						
ANR	1174453	Symbol	NQTFR		1174122						
ANR	1174454	Symbol	* en		1174122						
ANR	1174455	Symbol	qn -> lower		1174122						
ANR	1174456	Symbol	sn -> s		1174122						
ANR	1174457	Symbol	reg		1174122						
ANR	1174458	Symbol	reg -> options		1174122						
ANR	1174459	Symbol	NENCLOSE		1174122						
ANR	1174460	Symbol	* NANCHOR		1174122						
ANR	1174461	Symbol	en -> type		1174122						
ANR	1174462	Symbol	options		1174122						
ANR	1174463	Symbol	sn		1174122						
ANR	1174464	Symbol	sn -> end		1174122						
ANR	1174465	Symbol	qn		1174122						
ANR	1174466	Symbol	NENCLOSE ( node ) -> option		1174122						
ANR	1174467	Symbol	NSTR		1174122						
ANR	1174468	Symbol	NANCHOR ( node ) -> target		1174122						
ANR	1174469	Symbol	en		1174122						
ANR	1174470	Symbol	n		1174122						
ANR	1174471	Symbol	qn -> head_exact		1174122						
ANR	1174472	Symbol	qn -> target		1174122						
ANR	1174473	Symbol	NENCLOSE ( node ) -> target		1174122						
ANR	1174474	Symbol	get_head_value_node		1174122						
ANR	1174475	Symbol	ANCHOR_PREC_READ		1174122						
ANR	1174476	Symbol	node		1174122						
ANR	1174477	Symbol	en -> target		1174122						
ANR	1174478	Symbol	IS_IGNORECASE		1174122						
ANR	1174479	Symbol	exact		1174122						
ANR	1174480	Symbol	NANCHOR		1174122						
ANR	1174481	Symbol	NTYPE		1174122						
ANR	1174482	Symbol	NULL_NODE		1174122						
ANR	1174483	Symbol	* reg		1174122						
ANR	1174484	Function	check_type_tree	2659:0:59256:60259							
ANR	1174485	FunctionDef	"check_type_tree (Node * node , int type_mask , int enclose_mask , int anchor_mask)"		1174484	0					
ANR	1174486	CompoundStatement		2661:0:59345:60259	1174484	0					
ANR	1174487	IdentifierDeclStatement	"int type , r = 0 ;"	2662:2:59349:59364	1174484	0	True				
ANR	1174488	IdentifierDecl	type		1174484	0					
ANR	1174489	IdentifierDeclType	int		1174484	0					
ANR	1174490	Identifier	type		1174484	1					
ANR	1174491	IdentifierDecl	r = 0		1174484	1					
ANR	1174492	IdentifierDeclType	int		1174484	0					
ANR	1174493	Identifier	r		1174484	1					
ANR	1174494	AssignmentExpression	r = 0		1174484	2		=			
ANR	1174495	Identifier	r		1174484	0					
ANR	1174496	PrimaryExpression	0		1174484	1					
ANR	1174497	ExpressionStatement	type = NTYPE ( node )	2664:2:59369:59387	1174484	1	True				
ANR	1174498	AssignmentExpression	type = NTYPE ( node )		1174484	0		=			
ANR	1174499	Identifier	type		1174484	0					
ANR	1174500	CallExpression	NTYPE ( node )		1174484	1					
ANR	1174501	Callee	NTYPE		1174484	0					
ANR	1174502	Identifier	NTYPE		1174484	0					
ANR	1174503	ArgumentList	node		1174484	1					
ANR	1174504	Argument	node		1174484	0					
ANR	1174505	Identifier	node		1174484	0					
ANR	1174506	IfStatement	if ( ( NTYPE2BIT ( type ) & type_mask ) == 0 )		1174484	2					
ANR	1174507	Condition	( NTYPE2BIT ( type ) & type_mask ) == 0	2665:6:59395:59428	1174484	0	True				
ANR	1174508	EqualityExpression	( NTYPE2BIT ( type ) & type_mask ) == 0		1174484	0		==			
ANR	1174509	BitAndExpression	NTYPE2BIT ( type ) & type_mask		1174484	0		&			
ANR	1174510	CallExpression	NTYPE2BIT ( type )		1174484	0					
ANR	1174511	Callee	NTYPE2BIT		1174484	0					
ANR	1174512	Identifier	NTYPE2BIT		1174484	0					
ANR	1174513	ArgumentList	type		1174484	1					
ANR	1174514	Argument	type		1174484	0					
ANR	1174515	Identifier	type		1174484	0					
ANR	1174516	Identifier	type_mask		1174484	1					
ANR	1174517	PrimaryExpression	0		1174484	1					
ANR	1174518	ReturnStatement	return 1 ;	2666:4:59435:59443	1174484	1	True				
ANR	1174519	PrimaryExpression	1		1174484	0					
ANR	1174520	SwitchStatement	switch ( type )		1174484	3					
ANR	1174521	Condition	type	2668:10:59456:59459	1174484	0	True				
ANR	1174522	Identifier	type		1174484	0					
ANR	1174523	CompoundStatement		8:16:116:116	1174484	1					
ANR	1174524	Label	case NT_LIST :	2669:2:59466:59478	1174484	0	True				
ANR	1174525	Identifier	NT_LIST		1174484	0					
ANR	1174526	Label	case NT_ALT :	2670:2:59482:59493	1174484	1	True				
ANR	1174527	Identifier	NT_ALT		1174484	0					
ANR	1174528	DoStatement	do		1174484	2					
ANR	1174529	CompoundStatement		11:7:156:156	1174484	0					
ANR	1174530	ExpressionStatement	"r = check_type_tree ( NCAR ( node ) , type_mask , enclose_mask , anchor_mask )"	2672:6:59510:59584	1174484	0	True				
ANR	1174531	AssignmentExpression	"r = check_type_tree ( NCAR ( node ) , type_mask , enclose_mask , anchor_mask )"		1174484	0		=			
ANR	1174532	Identifier	r		1174484	0					
ANR	1174533	CallExpression	"check_type_tree ( NCAR ( node ) , type_mask , enclose_mask , anchor_mask )"		1174484	1					
ANR	1174534	Callee	check_type_tree		1174484	0					
ANR	1174535	Identifier	check_type_tree		1174484	0					
ANR	1174536	ArgumentList	NCAR ( node )		1174484	1					
ANR	1174537	Argument	NCAR ( node )		1174484	0					
ANR	1174538	CallExpression	NCAR ( node )		1174484	0					
ANR	1174539	Callee	NCAR		1174484	0					
ANR	1174540	Identifier	NCAR		1174484	0					
ANR	1174541	ArgumentList	node		1174484	1					
ANR	1174542	Argument	node		1174484	0					
ANR	1174543	Identifier	node		1174484	0					
ANR	1174544	Argument	type_mask		1174484	1					
ANR	1174545	Identifier	type_mask		1174484	0					
ANR	1174546	Argument	enclose_mask		1174484	2					
ANR	1174547	Identifier	enclose_mask		1174484	0					
ANR	1174548	Argument	anchor_mask		1174484	3					
ANR	1174549	Identifier	anchor_mask		1174484	0					
ANR	1174550	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2674:13:59599:59638	1174484	1	True				
ANR	1174551	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1174484	0		&&			
ANR	1174552	EqualityExpression	r == 0		1174484	0		==			
ANR	1174553	Identifier	r		1174484	0					
ANR	1174554	PrimaryExpression	0		1174484	1					
ANR	1174555	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1174484	1					
ANR	1174556	Callee	IS_NOT_NULL		1174484	0					
ANR	1174557	Identifier	IS_NOT_NULL		1174484	0					
ANR	1174558	ArgumentList	node = NCDR ( node )		1174484	1					
ANR	1174559	Argument	node = NCDR ( node )		1174484	0					
ANR	1174560	AssignmentExpression	node = NCDR ( node )		1174484	0		=			
ANR	1174561	Identifier	node		1174484	0					
ANR	1174562	CallExpression	NCDR ( node )		1174484	1					
ANR	1174563	Callee	NCDR		1174484	0					
ANR	1174564	Identifier	NCDR		1174484	0					
ANR	1174565	ArgumentList	node		1174484	1					
ANR	1174566	Argument	node		1174484	0					
ANR	1174567	Identifier	node		1174484	0					
ANR	1174568	BreakStatement	break ;	2675:4:59646:59651	1174484	3	True				
ANR	1174569	Label	case NT_QTFR :	2677:2:59656:59668	1174484	4	True				
ANR	1174570	Identifier	NT_QTFR		1174484	0					
ANR	1174571	ExpressionStatement	"r = check_type_tree ( NQTFR ( node ) -> target , type_mask , enclose_mask , anchor_mask )"	2678:4:59674:59755	1174484	5	True				
ANR	1174572	AssignmentExpression	"r = check_type_tree ( NQTFR ( node ) -> target , type_mask , enclose_mask , anchor_mask )"		1174484	0		=			
ANR	1174573	Identifier	r		1174484	0					
ANR	1174574	CallExpression	"check_type_tree ( NQTFR ( node ) -> target , type_mask , enclose_mask , anchor_mask )"		1174484	1					
ANR	1174575	Callee	check_type_tree		1174484	0					
ANR	1174576	Identifier	check_type_tree		1174484	0					
ANR	1174577	ArgumentList	NQTFR ( node ) -> target		1174484	1					
ANR	1174578	Argument	NQTFR ( node ) -> target		1174484	0					
ANR	1174579	PtrMemberAccess	NQTFR ( node ) -> target		1174484	0					
ANR	1174580	CallExpression	NQTFR ( node )		1174484	0					
ANR	1174581	Callee	NQTFR		1174484	0					
ANR	1174582	Identifier	NQTFR		1174484	0					
ANR	1174583	ArgumentList	node		1174484	1					
ANR	1174584	Argument	node		1174484	0					
ANR	1174585	Identifier	node		1174484	0					
ANR	1174586	Identifier	target		1174484	1					
ANR	1174587	Argument	type_mask		1174484	1					
ANR	1174588	Identifier	type_mask		1174484	0					
ANR	1174589	Argument	enclose_mask		1174484	2					
ANR	1174590	Identifier	enclose_mask		1174484	0					
ANR	1174591	Argument	anchor_mask		1174484	3					
ANR	1174592	Identifier	anchor_mask		1174484	0					
ANR	1174593	BreakStatement	break ;	2680:4:59761:59766	1174484	6	True				
ANR	1174594	Label	case NT_ENCLOSE :	2682:2:59771:59786	1174484	7	True				
ANR	1174595	Identifier	NT_ENCLOSE		1174484	0					
ANR	1174596	CompoundStatement		24:6:454:486	1174484	8					
ANR	1174597	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2684:6:59800:59832	1174484	0	True				
ANR	1174598	IdentifierDecl	* en = NENCLOSE ( node )		1174484	0					
ANR	1174599	IdentifierDeclType	EncloseNode *		1174484	0					
ANR	1174600	Identifier	en		1174484	1					
ANR	1174601	AssignmentExpression	* en = NENCLOSE ( node )		1174484	2		=			
ANR	1174602	Identifier	en		1174484	0					
ANR	1174603	CallExpression	NENCLOSE ( node )		1174484	1					
ANR	1174604	Callee	NENCLOSE		1174484	0					
ANR	1174605	Identifier	NENCLOSE		1174484	0					
ANR	1174606	ArgumentList	node		1174484	1					
ANR	1174607	Argument	node		1174484	0					
ANR	1174608	Identifier	node		1174484	0					
ANR	1174609	IfStatement	if ( ( en -> type & enclose_mask ) == 0 )		1174484	1					
ANR	1174610	Condition	( en -> type & enclose_mask ) == 0	2685:10:59844:59873	1174484	0	True				
ANR	1174611	EqualityExpression	( en -> type & enclose_mask ) == 0		1174484	0		==			
ANR	1174612	BitAndExpression	en -> type & enclose_mask		1174484	0		&			
ANR	1174613	PtrMemberAccess	en -> type		1174484	0					
ANR	1174614	Identifier	en		1174484	0					
ANR	1174615	Identifier	type		1174484	1					
ANR	1174616	Identifier	enclose_mask		1174484	1					
ANR	1174617	PrimaryExpression	0		1174484	1					
ANR	1174618	ReturnStatement	return 1 ;	2686:1:59877:59885	1174484	1	True				
ANR	1174619	PrimaryExpression	1		1174484	0					
ANR	1174620	ExpressionStatement	"r = check_type_tree ( en -> target , type_mask , enclose_mask , anchor_mask )"	2688:6:59894:59963	1174484	2	True				
ANR	1174621	AssignmentExpression	"r = check_type_tree ( en -> target , type_mask , enclose_mask , anchor_mask )"		1174484	0		=			
ANR	1174622	Identifier	r		1174484	0					
ANR	1174623	CallExpression	"check_type_tree ( en -> target , type_mask , enclose_mask , anchor_mask )"		1174484	1					
ANR	1174624	Callee	check_type_tree		1174484	0					
ANR	1174625	Identifier	check_type_tree		1174484	0					
ANR	1174626	ArgumentList	en -> target		1174484	1					
ANR	1174627	Argument	en -> target		1174484	0					
ANR	1174628	PtrMemberAccess	en -> target		1174484	0					
ANR	1174629	Identifier	en		1174484	0					
ANR	1174630	Identifier	target		1174484	1					
ANR	1174631	Argument	type_mask		1174484	1					
ANR	1174632	Identifier	type_mask		1174484	0					
ANR	1174633	Argument	enclose_mask		1174484	2					
ANR	1174634	Identifier	enclose_mask		1174484	0					
ANR	1174635	Argument	anchor_mask		1174484	3					
ANR	1174636	Identifier	anchor_mask		1174484	0					
ANR	1174637	BreakStatement	break ;	2690:4:59975:59980	1174484	9	True				
ANR	1174638	Label	case NT_ANCHOR :	2692:2:59985:59999	1174484	10	True				
ANR	1174639	Identifier	NT_ANCHOR		1174484	0					
ANR	1174640	ExpressionStatement	type = NANCHOR ( node ) -> type	2693:4:60005:60031	1174484	11	True				
ANR	1174641	AssignmentExpression	type = NANCHOR ( node ) -> type		1174484	0		=			
ANR	1174642	Identifier	type		1174484	0					
ANR	1174643	PtrMemberAccess	NANCHOR ( node ) -> type		1174484	1					
ANR	1174644	CallExpression	NANCHOR ( node )		1174484	0					
ANR	1174645	Callee	NANCHOR		1174484	0					
ANR	1174646	Identifier	NANCHOR		1174484	0					
ANR	1174647	ArgumentList	node		1174484	1					
ANR	1174648	Argument	node		1174484	0					
ANR	1174649	Identifier	node		1174484	0					
ANR	1174650	Identifier	type		1174484	1					
ANR	1174651	IfStatement	if ( ( type & anchor_mask ) == 0 )		1174484	12					
ANR	1174652	Condition	( type & anchor_mask ) == 0	2694:8:60041:60065	1174484	0	True				
ANR	1174653	EqualityExpression	( type & anchor_mask ) == 0		1174484	0		==			
ANR	1174654	BitAndExpression	type & anchor_mask		1174484	0		&			
ANR	1174655	Identifier	type		1174484	0					
ANR	1174656	Identifier	anchor_mask		1174484	1					
ANR	1174657	PrimaryExpression	0		1174484	1					
ANR	1174658	ReturnStatement	return 1 ;	2695:6:60074:60082	1174484	1	True				
ANR	1174659	PrimaryExpression	1		1174484	0					
ANR	1174660	IfStatement	if ( NANCHOR ( node ) -> target )		1174484	13					
ANR	1174661	Condition	NANCHOR ( node ) -> target	2697:8:60093:60113	1174484	0	True				
ANR	1174662	PtrMemberAccess	NANCHOR ( node ) -> target		1174484	0					
ANR	1174663	CallExpression	NANCHOR ( node )		1174484	0					
ANR	1174664	Callee	NANCHOR		1174484	0					
ANR	1174665	Identifier	NANCHOR		1174484	0					
ANR	1174666	ArgumentList	node		1174484	1					
ANR	1174667	Argument	node		1174484	0					
ANR	1174668	Identifier	node		1174484	0					
ANR	1174669	Identifier	target		1174484	1					
ANR	1174670	ExpressionStatement	"r = check_type_tree ( NANCHOR ( node ) -> target , type_mask , enclose_mask , anchor_mask )"	2698:6:60122:60207	1174484	1	True				
ANR	1174671	AssignmentExpression	"r = check_type_tree ( NANCHOR ( node ) -> target , type_mask , enclose_mask , anchor_mask )"		1174484	0		=			
ANR	1174672	Identifier	r		1174484	0					
ANR	1174673	CallExpression	"check_type_tree ( NANCHOR ( node ) -> target , type_mask , enclose_mask , anchor_mask )"		1174484	1					
ANR	1174674	Callee	check_type_tree		1174484	0					
ANR	1174675	Identifier	check_type_tree		1174484	0					
ANR	1174676	ArgumentList	NANCHOR ( node ) -> target		1174484	1					
ANR	1174677	Argument	NANCHOR ( node ) -> target		1174484	0					
ANR	1174678	PtrMemberAccess	NANCHOR ( node ) -> target		1174484	0					
ANR	1174679	CallExpression	NANCHOR ( node )		1174484	0					
ANR	1174680	Callee	NANCHOR		1174484	0					
ANR	1174681	Identifier	NANCHOR		1174484	0					
ANR	1174682	ArgumentList	node		1174484	1					
ANR	1174683	Argument	node		1174484	0					
ANR	1174684	Identifier	node		1174484	0					
ANR	1174685	Identifier	target		1174484	1					
ANR	1174686	Argument	type_mask		1174484	1					
ANR	1174687	Identifier	type_mask		1174484	0					
ANR	1174688	Argument	enclose_mask		1174484	2					
ANR	1174689	Identifier	enclose_mask		1174484	0					
ANR	1174690	Argument	anchor_mask		1174484	3					
ANR	1174691	Identifier	anchor_mask		1174484	0					
ANR	1174692	BreakStatement	break ;	2700:4:60213:60218	1174484	14	True				
ANR	1174693	Label	default :	2702:2:60223:60230	1174484	15	True				
ANR	1174694	Identifier	default		1174484	0					
ANR	1174695	BreakStatement	break ;	2703:4:60236:60241	1174484	16	True				
ANR	1174696	ReturnStatement	return r ;	2705:2:60249:60257	1174484	4	True				
ANR	1174697	Identifier	r		1174484	0					
ANR	1174698	ReturnType	static int		1174484	1					
ANR	1174699	Identifier	check_type_tree		1174484	2					
ANR	1174700	ParameterList	"Node * node , int type_mask , int enclose_mask , int anchor_mask"		1174484	3					
ANR	1174701	Parameter	Node * node	2660:16:59283:59292	1174484	0	True				
ANR	1174702	ParameterType	Node *		1174484	0					
ANR	1174703	Identifier	node		1174484	1					
ANR	1174704	Parameter	int type_mask	2660:28:59295:59307	1174484	1	True				
ANR	1174705	ParameterType	int		1174484	0					
ANR	1174706	Identifier	type_mask		1174484	1					
ANR	1174707	Parameter	int enclose_mask	2660:43:59310:59325	1174484	2	True				
ANR	1174708	ParameterType	int		1174484	0					
ANR	1174709	Identifier	enclose_mask		1174484	1					
ANR	1174710	Parameter	int anchor_mask	2660:61:59328:59342	1174484	3	True				
ANR	1174711	ParameterType	int		1174484	0					
ANR	1174712	Identifier	anchor_mask		1174484	1					
ANR	1174713	CFGEntryNode	ENTRY		1174484		True				
ANR	1174714	CFGExitNode	EXIT		1174484		True				
ANR	1174715	Symbol	type_mask		1174484						
ANR	1174716	Symbol	NQTFR ( node ) -> target		1174484						
ANR	1174717	Symbol	IS_NOT_NULL		1174484						
ANR	1174718	Symbol	NCAR		1174484						
ANR	1174719	Symbol	anchor_mask		1174484						
ANR	1174720	Symbol	NCDR		1174484						
ANR	1174721	Symbol	NANCHOR ( node ) -> target		1174484						
ANR	1174722	Symbol	check_type_tree		1174484						
ANR	1174723	Symbol	en		1174484						
ANR	1174724	Symbol	enclose_mask		1174484						
ANR	1174725	Symbol	NANCHOR ( node ) -> type		1174484						
ANR	1174726	Symbol	type		1174484						
ANR	1174727	Symbol	NQTFR		1174484						
ANR	1174728	Symbol	* en		1174484						
ANR	1174729	Symbol	NTYPE2BIT		1174484						
ANR	1174730	Symbol	node		1174484						
ANR	1174731	Symbol	r		1174484						
ANR	1174732	Symbol	* NQTFR		1174484						
ANR	1174733	Symbol	NENCLOSE		1174484						
ANR	1174734	Symbol	en -> target		1174484						
ANR	1174735	Symbol	* NANCHOR		1174484						
ANR	1174736	Symbol	en -> type		1174484						
ANR	1174737	Symbol	NANCHOR		1174484						
ANR	1174738	Symbol	NTYPE		1174484						
ANR	1174739	Function	subexp_inf_recursive_check	2713:0:60351:62161							
ANR	1174740	FunctionDef	"subexp_inf_recursive_check (Node * node , ScanEnv * env , int head)"		1174739	0					
ANR	1174741	CompoundStatement		2715:0:60425:62161	1174739	0					
ANR	1174742	IdentifierDeclStatement	int type ;	2716:2:60429:60437	1174739	0	True				
ANR	1174743	IdentifierDecl	type		1174739	0					
ANR	1174744	IdentifierDeclType	int		1174739	0					
ANR	1174745	Identifier	type		1174739	1					
ANR	1174746	IdentifierDeclStatement	int r = 0 ;	2717:2:60441:60450	1174739	1	True				
ANR	1174747	IdentifierDecl	r = 0		1174739	0					
ANR	1174748	IdentifierDeclType	int		1174739	0					
ANR	1174749	Identifier	r		1174739	1					
ANR	1174750	AssignmentExpression	r = 0		1174739	2		=			
ANR	1174751	Identifier	r		1174739	0					
ANR	1174752	PrimaryExpression	0		1174739	1					
ANR	1174753	ExpressionStatement	type = NTYPE ( node )	2719:2:60455:60473	1174739	2	True				
ANR	1174754	AssignmentExpression	type = NTYPE ( node )		1174739	0		=			
ANR	1174755	Identifier	type		1174739	0					
ANR	1174756	CallExpression	NTYPE ( node )		1174739	1					
ANR	1174757	Callee	NTYPE		1174739	0					
ANR	1174758	Identifier	NTYPE		1174739	0					
ANR	1174759	ArgumentList	node		1174739	1					
ANR	1174760	Argument	node		1174739	0					
ANR	1174761	Identifier	node		1174739	0					
ANR	1174762	SwitchStatement	switch ( type )		1174739	3					
ANR	1174763	Condition	type	2720:10:60485:60488	1174739	0	True				
ANR	1174764	Identifier	type		1174739	0					
ANR	1174765	CompoundStatement		6:16:65:65	1174739	1					
ANR	1174766	Label	case NT_LIST :	2721:2:60495:60507	1174739	0	True				
ANR	1174767	Identifier	NT_LIST		1174739	0					
ANR	1174768	CompoundStatement		11:6:134:141	1174739	1					
ANR	1174769	IdentifierDeclStatement	Node * x ;	2723:6:60521:60528	1174739	0	True				
ANR	1174770	IdentifierDecl	* x		1174739	0					
ANR	1174771	IdentifierDeclType	Node *		1174739	0					
ANR	1174772	Identifier	x		1174739	1					
ANR	1174773	IdentifierDeclStatement	OnigDistance min ;	2724:6:60536:60552	1174739	1	True				
ANR	1174774	IdentifierDecl	min		1174739	0					
ANR	1174775	IdentifierDeclType	OnigDistance		1174739	0					
ANR	1174776	Identifier	min		1174739	1					
ANR	1174777	IdentifierDeclStatement	int ret ;	2725:6:60560:60567	1174739	2	True				
ANR	1174778	IdentifierDecl	ret		1174739	0					
ANR	1174779	IdentifierDeclType	int		1174739	0					
ANR	1174780	Identifier	ret		1174739	1					
ANR	1174781	ExpressionStatement	x = node	2727:6:60576:60584	1174739	3	True				
ANR	1174782	AssignmentExpression	x = node		1174739	0		=			
ANR	1174783	Identifier	x		1174739	0					
ANR	1174784	Identifier	node		1174739	1					
ANR	1174785	DoStatement	do		1174739	4					
ANR	1174786	CompoundStatement		14:9:169:169	1174739	0					
ANR	1174787	ExpressionStatement	"ret = subexp_inf_recursive_check ( NCAR ( x ) , env , head )"	2729:1:60598:60650	1174739	0	True				
ANR	1174788	AssignmentExpression	"ret = subexp_inf_recursive_check ( NCAR ( x ) , env , head )"		1174739	0		=			
ANR	1174789	Identifier	ret		1174739	0					
ANR	1174790	CallExpression	"subexp_inf_recursive_check ( NCAR ( x ) , env , head )"		1174739	1					
ANR	1174791	Callee	subexp_inf_recursive_check		1174739	0					
ANR	1174792	Identifier	subexp_inf_recursive_check		1174739	0					
ANR	1174793	ArgumentList	NCAR ( x )		1174739	1					
ANR	1174794	Argument	NCAR ( x )		1174739	0					
ANR	1174795	CallExpression	NCAR ( x )		1174739	0					
ANR	1174796	Callee	NCAR		1174739	0					
ANR	1174797	Identifier	NCAR		1174739	0					
ANR	1174798	ArgumentList	x		1174739	1					
ANR	1174799	Argument	x		1174739	0					
ANR	1174800	Identifier	x		1174739	0					
ANR	1174801	Argument	env		1174739	1					
ANR	1174802	Identifier	env		1174739	0					
ANR	1174803	Argument	head		1174739	2					
ANR	1174804	Identifier	head		1174739	0					
ANR	1174805	IfStatement	if ( ret < 0 || ret == RECURSION_INFINITE )		1174739	1					
ANR	1174806	Condition	ret < 0 || ret == RECURSION_INFINITE	2730:5:60657:60692	1174739	0	True				
ANR	1174807	OrExpression	ret < 0 || ret == RECURSION_INFINITE		1174739	0		||			
ANR	1174808	RelationalExpression	ret < 0		1174739	0		<			
ANR	1174809	Identifier	ret		1174739	0					
ANR	1174810	PrimaryExpression	0		1174739	1					
ANR	1174811	EqualityExpression	ret == RECURSION_INFINITE		1174739	1		==			
ANR	1174812	Identifier	ret		1174739	0					
ANR	1174813	Identifier	RECURSION_INFINITE		1174739	1					
ANR	1174814	ReturnStatement	return ret ;	2730:43:60695:60705	1174739	1	True				
ANR	1174815	Identifier	ret		1174739	0					
ANR	1174816	ExpressionStatement	r |= ret	2731:1:60708:60716	1174739	2	True				
ANR	1174817	AssignmentExpression	r |= ret		1174739	0		|=			
ANR	1174818	Identifier	r		1174739	0					
ANR	1174819	Identifier	ret		1174739	1					
ANR	1174820	IfStatement	if ( head )		1174739	3					
ANR	1174821	Condition	head	2732:5:60723:60726	1174739	0	True				
ANR	1174822	Identifier	head		1174739	0					
ANR	1174823	CompoundStatement		18:11:303:303	1174739	1					
ANR	1174824	ExpressionStatement	"ret = get_min_match_length ( NCAR ( x ) , & min , env )"	2733:3:60734:60780	1174739	0	True				
ANR	1174825	AssignmentExpression	"ret = get_min_match_length ( NCAR ( x ) , & min , env )"		1174739	0		=			
ANR	1174826	Identifier	ret		1174739	0					
ANR	1174827	CallExpression	"get_min_match_length ( NCAR ( x ) , & min , env )"		1174739	1					
ANR	1174828	Callee	get_min_match_length		1174739	0					
ANR	1174829	Identifier	get_min_match_length		1174739	0					
ANR	1174830	ArgumentList	NCAR ( x )		1174739	1					
ANR	1174831	Argument	NCAR ( x )		1174739	0					
ANR	1174832	CallExpression	NCAR ( x )		1174739	0					
ANR	1174833	Callee	NCAR		1174739	0					
ANR	1174834	Identifier	NCAR		1174739	0					
ANR	1174835	ArgumentList	x		1174739	1					
ANR	1174836	Argument	x		1174739	0					
ANR	1174837	Identifier	x		1174739	0					
ANR	1174838	Argument	& min		1174739	1					
ANR	1174839	UnaryOperationExpression	& min		1174739	0					
ANR	1174840	UnaryOperator	&		1174739	0					
ANR	1174841	Identifier	min		1174739	1					
ANR	1174842	Argument	env		1174739	2					
ANR	1174843	Identifier	env		1174739	0					
ANR	1174844	IfStatement	if ( ret != 0 )		1174739	1					
ANR	1174845	Condition	ret != 0	2734:7:60789:60796	1174739	0	True				
ANR	1174846	EqualityExpression	ret != 0		1174739	0		!=			
ANR	1174847	Identifier	ret		1174739	0					
ANR	1174848	PrimaryExpression	0		1174739	1					
ANR	1174849	ReturnStatement	return ret ;	2734:17:60799:60809	1174739	1	True				
ANR	1174850	Identifier	ret		1174739	0					
ANR	1174851	IfStatement	if ( min != 0 )		1174739	2					
ANR	1174852	Condition	min != 0	2735:7:60818:60825	1174739	0	True				
ANR	1174853	EqualityExpression	min != 0		1174739	0		!=			
ANR	1174854	Identifier	min		1174739	0					
ANR	1174855	PrimaryExpression	0		1174739	1					
ANR	1174856	ExpressionStatement	head = 0	2735:17:60828:60836	1174739	1	True				
ANR	1174857	AssignmentExpression	head = 0		1174739	0		=			
ANR	1174858	Identifier	head		1174739	0					
ANR	1174859	PrimaryExpression	0		1174739	1					
ANR	1174860	Condition	IS_NOT_NULL ( x = NCDR ( x ) )	2737:15:60856:60879	1174739	1	True				
ANR	1174861	CallExpression	IS_NOT_NULL ( x = NCDR ( x ) )		1174739	0					
ANR	1174862	Callee	IS_NOT_NULL		1174739	0					
ANR	1174863	Identifier	IS_NOT_NULL		1174739	0					
ANR	1174864	ArgumentList	x = NCDR ( x )		1174739	1					
ANR	1174865	Argument	x = NCDR ( x )		1174739	0					
ANR	1174866	AssignmentExpression	x = NCDR ( x )		1174739	0		=			
ANR	1174867	Identifier	x		1174739	0					
ANR	1174868	CallExpression	NCDR ( x )		1174739	1					
ANR	1174869	Callee	NCDR		1174739	0					
ANR	1174870	Identifier	NCDR		1174739	0					
ANR	1174871	ArgumentList	x		1174739	1					
ANR	1174872	Argument	x		1174739	0					
ANR	1174873	Identifier	x		1174739	0					
ANR	1174874	BreakStatement	break ;	2739:4:60893:60898	1174739	2	True				
ANR	1174875	Label	case NT_ALT :	2741:2:60903:60914	1174739	3	True				
ANR	1174876	Identifier	NT_ALT		1174739	0					
ANR	1174877	CompoundStatement		29:6:502:509	1174739	4					
ANR	1174878	IdentifierDeclStatement	int ret ;	2743:6:60928:60935	1174739	0	True				
ANR	1174879	IdentifierDecl	ret		1174739	0					
ANR	1174880	IdentifierDeclType	int		1174739	0					
ANR	1174881	Identifier	ret		1174739	1					
ANR	1174882	ExpressionStatement	r = RECURSION_EXIST	2744:6:60943:60962	1174739	1	True				
ANR	1174883	AssignmentExpression	r = RECURSION_EXIST		1174739	0		=			
ANR	1174884	Identifier	r		1174739	0					
ANR	1174885	Identifier	RECURSION_EXIST		1174739	1					
ANR	1174886	DoStatement	do		1174739	2					
ANR	1174887	CompoundStatement		31:9:547:547	1174739	0					
ANR	1174888	ExpressionStatement	"ret = subexp_inf_recursive_check ( NCAR ( node ) , env , head )"	2746:1:60976:61031	1174739	0	True				
ANR	1174889	AssignmentExpression	"ret = subexp_inf_recursive_check ( NCAR ( node ) , env , head )"		1174739	0		=			
ANR	1174890	Identifier	ret		1174739	0					
ANR	1174891	CallExpression	"subexp_inf_recursive_check ( NCAR ( node ) , env , head )"		1174739	1					
ANR	1174892	Callee	subexp_inf_recursive_check		1174739	0					
ANR	1174893	Identifier	subexp_inf_recursive_check		1174739	0					
ANR	1174894	ArgumentList	NCAR ( node )		1174739	1					
ANR	1174895	Argument	NCAR ( node )		1174739	0					
ANR	1174896	CallExpression	NCAR ( node )		1174739	0					
ANR	1174897	Callee	NCAR		1174739	0					
ANR	1174898	Identifier	NCAR		1174739	0					
ANR	1174899	ArgumentList	node		1174739	1					
ANR	1174900	Argument	node		1174739	0					
ANR	1174901	Identifier	node		1174739	0					
ANR	1174902	Argument	env		1174739	1					
ANR	1174903	Identifier	env		1174739	0					
ANR	1174904	Argument	head		1174739	2					
ANR	1174905	Identifier	head		1174739	0					
ANR	1174906	IfStatement	if ( ret < 0 || ret == RECURSION_INFINITE )		1174739	1					
ANR	1174907	Condition	ret < 0 || ret == RECURSION_INFINITE	2747:5:61038:61073	1174739	0	True				
ANR	1174908	OrExpression	ret < 0 || ret == RECURSION_INFINITE		1174739	0		||			
ANR	1174909	RelationalExpression	ret < 0		1174739	0		<			
ANR	1174910	Identifier	ret		1174739	0					
ANR	1174911	PrimaryExpression	0		1174739	1					
ANR	1174912	EqualityExpression	ret == RECURSION_INFINITE		1174739	1		==			
ANR	1174913	Identifier	ret		1174739	0					
ANR	1174914	Identifier	RECURSION_INFINITE		1174739	1					
ANR	1174915	ReturnStatement	return ret ;	2747:43:61076:61086	1174739	1	True				
ANR	1174916	Identifier	ret		1174739	0					
ANR	1174917	ExpressionStatement	r &= ret	2748:1:61089:61097	1174739	2	True				
ANR	1174918	AssignmentExpression	r &= ret		1174739	0		&=			
ANR	1174919	Identifier	r		1174739	0					
ANR	1174920	Identifier	ret		1174739	1					
ANR	1174921	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	2749:15:61114:61143	1174739	1	True				
ANR	1174922	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1174739	0					
ANR	1174923	Callee	IS_NOT_NULL		1174739	0					
ANR	1174924	Identifier	IS_NOT_NULL		1174739	0					
ANR	1174925	ArgumentList	node = NCDR ( node )		1174739	1					
ANR	1174926	Argument	node = NCDR ( node )		1174739	0					
ANR	1174927	AssignmentExpression	node = NCDR ( node )		1174739	0		=			
ANR	1174928	Identifier	node		1174739	0					
ANR	1174929	CallExpression	NCDR ( node )		1174739	1					
ANR	1174930	Callee	NCDR		1174739	0					
ANR	1174931	Identifier	NCDR		1174739	0					
ANR	1174932	ArgumentList	node		1174739	1					
ANR	1174933	Argument	node		1174739	0					
ANR	1174934	Identifier	node		1174739	0					
ANR	1174935	BreakStatement	break ;	2751:4:61157:61162	1174739	5	True				
ANR	1174936	Label	case NT_QTFR :	2753:2:61167:61179	1174739	6	True				
ANR	1174937	Identifier	NT_QTFR		1174739	0					
ANR	1174938	ExpressionStatement	"r = subexp_inf_recursive_check ( NQTFR ( node ) -> target , env , head )"	2754:4:61185:61247	1174739	7	True				
ANR	1174939	AssignmentExpression	"r = subexp_inf_recursive_check ( NQTFR ( node ) -> target , env , head )"		1174739	0		=			
ANR	1174940	Identifier	r		1174739	0					
ANR	1174941	CallExpression	"subexp_inf_recursive_check ( NQTFR ( node ) -> target , env , head )"		1174739	1					
ANR	1174942	Callee	subexp_inf_recursive_check		1174739	0					
ANR	1174943	Identifier	subexp_inf_recursive_check		1174739	0					
ANR	1174944	ArgumentList	NQTFR ( node ) -> target		1174739	1					
ANR	1174945	Argument	NQTFR ( node ) -> target		1174739	0					
ANR	1174946	PtrMemberAccess	NQTFR ( node ) -> target		1174739	0					
ANR	1174947	CallExpression	NQTFR ( node )		1174739	0					
ANR	1174948	Callee	NQTFR		1174739	0					
ANR	1174949	Identifier	NQTFR		1174739	0					
ANR	1174950	ArgumentList	node		1174739	1					
ANR	1174951	Argument	node		1174739	0					
ANR	1174952	Identifier	node		1174739	0					
ANR	1174953	Identifier	target		1174739	1					
ANR	1174954	Argument	env		1174739	1					
ANR	1174955	Identifier	env		1174739	0					
ANR	1174956	Argument	head		1174739	2					
ANR	1174957	Identifier	head		1174739	0					
ANR	1174958	IfStatement	if ( r == RECURSION_EXIST )		1174739	8					
ANR	1174959	Condition	r == RECURSION_EXIST	2755:8:61257:61276	1174739	0	True				
ANR	1174960	EqualityExpression	r == RECURSION_EXIST		1174739	0		==			
ANR	1174961	Identifier	r		1174739	0					
ANR	1174962	Identifier	RECURSION_EXIST		1174739	1					
ANR	1174963	CompoundStatement		41:30:853:853	1174739	1					
ANR	1174964	IfStatement	if ( NQTFR ( node ) -> lower == 0 )		1174739	0					
ANR	1174965	Condition	NQTFR ( node ) -> lower == 0	2756:10:61291:61313	1174739	0	True				
ANR	1174966	EqualityExpression	NQTFR ( node ) -> lower == 0		1174739	0		==			
ANR	1174967	PtrMemberAccess	NQTFR ( node ) -> lower		1174739	0					
ANR	1174968	CallExpression	NQTFR ( node )		1174739	0					
ANR	1174969	Callee	NQTFR		1174739	0					
ANR	1174970	Identifier	NQTFR		1174739	0					
ANR	1174971	ArgumentList	node		1174739	1					
ANR	1174972	Argument	node		1174739	0					
ANR	1174973	Identifier	node		1174739	0					
ANR	1174974	Identifier	lower		1174739	1					
ANR	1174975	PrimaryExpression	0		1174739	1					
ANR	1174976	ExpressionStatement	r = 0	2756:35:61316:61321	1174739	1	True				
ANR	1174977	AssignmentExpression	r = 0		1174739	0		=			
ANR	1174978	Identifier	r		1174739	0					
ANR	1174979	PrimaryExpression	0		1174739	1					
ANR	1174980	BreakStatement	break ;	2758:4:61333:61338	1174739	9	True				
ANR	1174981	Label	case NT_ANCHOR :	2760:2:61343:61357	1174739	10	True				
ANR	1174982	Identifier	NT_ANCHOR		1174739	0					
ANR	1174983	CompoundStatement		48:6:945:975	1174739	11					
ANR	1174984	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	2762:6:61371:61401	1174739	0	True				
ANR	1174985	IdentifierDecl	* an = NANCHOR ( node )		1174739	0					
ANR	1174986	IdentifierDeclType	AnchorNode *		1174739	0					
ANR	1174987	Identifier	an		1174739	1					
ANR	1174988	AssignmentExpression	* an = NANCHOR ( node )		1174739	2		=			
ANR	1174989	Identifier	an		1174739	0					
ANR	1174990	CallExpression	NANCHOR ( node )		1174739	1					
ANR	1174991	Callee	NANCHOR		1174739	0					
ANR	1174992	Identifier	NANCHOR		1174739	0					
ANR	1174993	ArgumentList	node		1174739	1					
ANR	1174994	Argument	node		1174739	0					
ANR	1174995	Identifier	node		1174739	0					
ANR	1174996	SwitchStatement	switch ( an -> type )		1174739	1					
ANR	1174997	Condition	an -> type	2763:14:61417:61424	1174739	0	True				
ANR	1174998	PtrMemberAccess	an -> type		1174739	0					
ANR	1174999	Identifier	an		1174739	0					
ANR	1175000	Identifier	type		1174739	1					
ANR	1175001	CompoundStatement		49:24:1001:1001	1174739	1					
ANR	1175002	Label	case ANCHOR_PREC_READ :	2764:6:61435:61456	1174739	0	True				
ANR	1175003	Identifier	ANCHOR_PREC_READ		1174739	0					
ANR	1175004	Label	case ANCHOR_PREC_READ_NOT :	2765:6:61464:61489	1174739	1	True				
ANR	1175005	Identifier	ANCHOR_PREC_READ_NOT		1174739	0					
ANR	1175006	Label	case ANCHOR_LOOK_BEHIND :	2766:6:61497:61520	1174739	2	True				
ANR	1175007	Identifier	ANCHOR_LOOK_BEHIND		1174739	0					
ANR	1175008	Label	case ANCHOR_LOOK_BEHIND_NOT :	2767:6:61528:61555	1174739	3	True				
ANR	1175009	Identifier	ANCHOR_LOOK_BEHIND_NOT		1174739	0					
ANR	1175010	ExpressionStatement	"r = subexp_inf_recursive_check ( an -> target , env , head )"	2768:1:61558:61611	1174739	4	True				
ANR	1175011	AssignmentExpression	"r = subexp_inf_recursive_check ( an -> target , env , head )"		1174739	0		=			
ANR	1175012	Identifier	r		1174739	0					
ANR	1175013	CallExpression	"subexp_inf_recursive_check ( an -> target , env , head )"		1174739	1					
ANR	1175014	Callee	subexp_inf_recursive_check		1174739	0					
ANR	1175015	Identifier	subexp_inf_recursive_check		1174739	0					
ANR	1175016	ArgumentList	an -> target		1174739	1					
ANR	1175017	Argument	an -> target		1174739	0					
ANR	1175018	PtrMemberAccess	an -> target		1174739	0					
ANR	1175019	Identifier	an		1174739	0					
ANR	1175020	Identifier	target		1174739	1					
ANR	1175021	Argument	env		1174739	1					
ANR	1175022	Identifier	env		1174739	0					
ANR	1175023	Argument	head		1174739	2					
ANR	1175024	Identifier	head		1174739	0					
ANR	1175025	BreakStatement	break ;	2769:1:61614:61619	1174739	5	True				
ANR	1175026	BreakStatement	break ;	2772:4:61639:61644	1174739	12	True				
ANR	1175027	Label	case NT_CALL :	2774:2:61649:61661	1174739	13	True				
ANR	1175028	Identifier	NT_CALL		1174739	0					
ANR	1175029	ExpressionStatement	"r = subexp_inf_recursive_check ( NCALL ( node ) -> target , env , head )"	2775:4:61667:61729	1174739	14	True				
ANR	1175030	AssignmentExpression	"r = subexp_inf_recursive_check ( NCALL ( node ) -> target , env , head )"		1174739	0		=			
ANR	1175031	Identifier	r		1174739	0					
ANR	1175032	CallExpression	"subexp_inf_recursive_check ( NCALL ( node ) -> target , env , head )"		1174739	1					
ANR	1175033	Callee	subexp_inf_recursive_check		1174739	0					
ANR	1175034	Identifier	subexp_inf_recursive_check		1174739	0					
ANR	1175035	ArgumentList	NCALL ( node ) -> target		1174739	1					
ANR	1175036	Argument	NCALL ( node ) -> target		1174739	0					
ANR	1175037	PtrMemberAccess	NCALL ( node ) -> target		1174739	0					
ANR	1175038	CallExpression	NCALL ( node )		1174739	0					
ANR	1175039	Callee	NCALL		1174739	0					
ANR	1175040	Identifier	NCALL		1174739	0					
ANR	1175041	ArgumentList	node		1174739	1					
ANR	1175042	Argument	node		1174739	0					
ANR	1175043	Identifier	node		1174739	0					
ANR	1175044	Identifier	target		1174739	1					
ANR	1175045	Argument	env		1174739	1					
ANR	1175046	Identifier	env		1174739	0					
ANR	1175047	Argument	head		1174739	2					
ANR	1175048	Identifier	head		1174739	0					
ANR	1175049	BreakStatement	break ;	2776:4:61735:61740	1174739	15	True				
ANR	1175050	Label	case NT_ENCLOSE :	2778:2:61745:61760	1174739	16	True				
ANR	1175051	Identifier	NT_ENCLOSE		1174739	0					
ANR	1175052	IfStatement	if ( IS_ENCLOSE_MARK2 ( NENCLOSE ( node ) ) )		1174739	17					
ANR	1175053	Condition	IS_ENCLOSE_MARK2 ( NENCLOSE ( node ) )	2779:8:61770:61801	1174739	0	True				
ANR	1175054	CallExpression	IS_ENCLOSE_MARK2 ( NENCLOSE ( node ) )		1174739	0					
ANR	1175055	Callee	IS_ENCLOSE_MARK2		1174739	0					
ANR	1175056	Identifier	IS_ENCLOSE_MARK2		1174739	0					
ANR	1175057	ArgumentList	NENCLOSE ( node )		1174739	1					
ANR	1175058	Argument	NENCLOSE ( node )		1174739	0					
ANR	1175059	CallExpression	NENCLOSE ( node )		1174739	0					
ANR	1175060	Callee	NENCLOSE		1174739	0					
ANR	1175061	Identifier	NENCLOSE		1174739	0					
ANR	1175062	ArgumentList	node		1174739	1					
ANR	1175063	Argument	node		1174739	0					
ANR	1175064	Identifier	node		1174739	0					
ANR	1175065	ReturnStatement	return 0 ;	2780:6:61810:61818	1174739	1	True				
ANR	1175066	PrimaryExpression	0		1174739	0					
ANR	1175067	ElseStatement	else		1174739	0					
ANR	1175068	IfStatement	if ( IS_ENCLOSE_MARK1 ( NENCLOSE ( node ) ) )		1174739	0					
ANR	1175069	Condition	IS_ENCLOSE_MARK1 ( NENCLOSE ( node ) )	2781:13:61833:61864	1174739	0	True				
ANR	1175070	CallExpression	IS_ENCLOSE_MARK1 ( NENCLOSE ( node ) )		1174739	0					
ANR	1175071	Callee	IS_ENCLOSE_MARK1		1174739	0					
ANR	1175072	Identifier	IS_ENCLOSE_MARK1		1174739	0					
ANR	1175073	ArgumentList	NENCLOSE ( node )		1174739	1					
ANR	1175074	Argument	NENCLOSE ( node )		1174739	0					
ANR	1175075	CallExpression	NENCLOSE ( node )		1174739	0					
ANR	1175076	Callee	NENCLOSE		1174739	0					
ANR	1175077	Identifier	NENCLOSE		1174739	0					
ANR	1175078	ArgumentList	node		1174739	1					
ANR	1175079	Argument	node		1174739	0					
ANR	1175080	Identifier	node		1174739	0					
ANR	1175081	ReturnStatement	return ( head == 0 ? RECURSION_EXIST : RECURSION_INFINITE ) ;	2782:6:61873:61930	1174739	1	True				
ANR	1175082	ConditionalExpression	head == 0 ? RECURSION_EXIST : RECURSION_INFINITE		1174739	0					
ANR	1175083	Condition	head == 0		1174739	0					
ANR	1175084	EqualityExpression	head == 0		1174739	0		==			
ANR	1175085	Identifier	head		1174739	0					
ANR	1175086	PrimaryExpression	0		1174739	1					
ANR	1175087	Identifier	RECURSION_EXIST		1174739	1					
ANR	1175088	Identifier	RECURSION_INFINITE		1174739	2					
ANR	1175089	ElseStatement	else		1174739	0					
ANR	1175090	CompoundStatement		69:9:1515:1515	1174739	0					
ANR	1175091	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_MARK2 )"	2784:6:61949:61984	1174739	0	True				
ANR	1175092	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_MARK2 )"		1174739	0					
ANR	1175093	Callee	SET_ENCLOSE_STATUS		1174739	0					
ANR	1175094	Identifier	SET_ENCLOSE_STATUS		1174739	0					
ANR	1175095	ArgumentList	node		1174739	1					
ANR	1175096	Argument	node		1174739	0					
ANR	1175097	Identifier	node		1174739	0					
ANR	1175098	Argument	NST_MARK2		1174739	1					
ANR	1175099	Identifier	NST_MARK2		1174739	0					
ANR	1175100	ExpressionStatement	"r = subexp_inf_recursive_check ( NENCLOSE ( node ) -> target , env , head )"	2785:6:61992:62057	1174739	1	True				
ANR	1175101	AssignmentExpression	"r = subexp_inf_recursive_check ( NENCLOSE ( node ) -> target , env , head )"		1174739	0		=			
ANR	1175102	Identifier	r		1174739	0					
ANR	1175103	CallExpression	"subexp_inf_recursive_check ( NENCLOSE ( node ) -> target , env , head )"		1174739	1					
ANR	1175104	Callee	subexp_inf_recursive_check		1174739	0					
ANR	1175105	Identifier	subexp_inf_recursive_check		1174739	0					
ANR	1175106	ArgumentList	NENCLOSE ( node ) -> target		1174739	1					
ANR	1175107	Argument	NENCLOSE ( node ) -> target		1174739	0					
ANR	1175108	PtrMemberAccess	NENCLOSE ( node ) -> target		1174739	0					
ANR	1175109	CallExpression	NENCLOSE ( node )		1174739	0					
ANR	1175110	Callee	NENCLOSE		1174739	0					
ANR	1175111	Identifier	NENCLOSE		1174739	0					
ANR	1175112	ArgumentList	node		1174739	1					
ANR	1175113	Argument	node		1174739	0					
ANR	1175114	Identifier	node		1174739	0					
ANR	1175115	Identifier	target		1174739	1					
ANR	1175116	Argument	env		1174739	1					
ANR	1175117	Identifier	env		1174739	0					
ANR	1175118	Argument	head		1174739	2					
ANR	1175119	Identifier	head		1174739	0					
ANR	1175120	ExpressionStatement	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK2 )"	2786:6:62065:62102	1174739	2	True				
ANR	1175121	CallExpression	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK2 )"		1174739	0					
ANR	1175122	Callee	CLEAR_ENCLOSE_STATUS		1174739	0					
ANR	1175123	Identifier	CLEAR_ENCLOSE_STATUS		1174739	0					
ANR	1175124	ArgumentList	node		1174739	1					
ANR	1175125	Argument	node		1174739	0					
ANR	1175126	Identifier	node		1174739	0					
ANR	1175127	Argument	NST_MARK2		1174739	1					
ANR	1175128	Identifier	NST_MARK2		1174739	0					
ANR	1175129	BreakStatement	break ;	2788:4:62114:62119	1174739	18	True				
ANR	1175130	Label	default :	2790:2:62124:62131	1174739	19	True				
ANR	1175131	Identifier	default		1174739	0					
ANR	1175132	BreakStatement	break ;	2791:4:62137:62142	1174739	20	True				
ANR	1175133	ReturnStatement	return r ;	2794:2:62151:62159	1174739	4	True				
ANR	1175134	Identifier	r		1174739	0					
ANR	1175135	ReturnType	static int		1174739	1					
ANR	1175136	Identifier	subexp_inf_recursive_check		1174739	2					
ANR	1175137	ParameterList	"Node * node , ScanEnv * env , int head"		1174739	3					
ANR	1175138	Parameter	Node * node	2714:27:60389:60398	1174739	0	True				
ANR	1175139	ParameterType	Node *		1174739	0					
ANR	1175140	Identifier	node		1174739	1					
ANR	1175141	Parameter	ScanEnv * env	2714:39:60401:60412	1174739	1	True				
ANR	1175142	ParameterType	ScanEnv *		1174739	0					
ANR	1175143	Identifier	env		1174739	1					
ANR	1175144	Parameter	int head	2714:53:60415:60422	1174739	2	True				
ANR	1175145	ParameterType	int		1174739	0					
ANR	1175146	Identifier	head		1174739	1					
ANR	1175147	CFGEntryNode	ENTRY		1174739		True				
ANR	1175148	CFGExitNode	EXIT		1174739		True				
ANR	1175149	Symbol	NQTFR ( node ) -> target		1174739						
ANR	1175150	Symbol	IS_NOT_NULL		1174739						
ANR	1175151	Symbol	NCAR		1174739						
ANR	1175152	Symbol	RECURSION_EXIST		1174739						
ANR	1175153	Symbol	NQTFR ( node ) -> lower		1174739						
ANR	1175154	Symbol	NCALL		1174739						
ANR	1175155	Symbol	* NENCLOSE		1174739						
ANR	1175156	Symbol	an -> type		1174739						
ANR	1175157	Symbol	IS_ENCLOSE_MARK2		1174739						
ANR	1175158	Symbol	type		1174739						
ANR	1175159	Symbol	NQTFR		1174739						
ANR	1175160	Symbol	head		1174739						
ANR	1175161	Symbol	min		1174739						
ANR	1175162	Symbol	* NQTFR		1174739						
ANR	1175163	Symbol	NENCLOSE		1174739						
ANR	1175164	Symbol	NCALL ( node ) -> target		1174739						
ANR	1175165	Symbol	ret		1174739						
ANR	1175166	Symbol	NCDR		1174739						
ANR	1175167	Symbol	NST_MARK2		1174739						
ANR	1175168	Symbol	env		1174739						
ANR	1175169	Symbol	an		1174739						
ANR	1175170	Symbol	NENCLOSE ( node ) -> target		1174739						
ANR	1175171	Symbol	* an		1174739						
ANR	1175172	Symbol	node		1174739						
ANR	1175173	Symbol	r		1174739						
ANR	1175174	Symbol	an -> target		1174739						
ANR	1175175	Symbol	IS_ENCLOSE_MARK1		1174739						
ANR	1175176	Symbol	get_min_match_length		1174739						
ANR	1175177	Symbol	x		1174739						
ANR	1175178	Symbol	RECURSION_INFINITE		1174739						
ANR	1175179	Symbol	NANCHOR		1174739						
ANR	1175180	Symbol	NTYPE		1174739						
ANR	1175181	Symbol	subexp_inf_recursive_check		1174739						
ANR	1175182	Symbol	* NCALL		1174739						
ANR	1175183	Symbol	& min		1174739						
ANR	1175184	Function	subexp_inf_recursive_check_trav	2797:0:62164:63281							
ANR	1175185	FunctionDef	"subexp_inf_recursive_check_trav (Node * node , ScanEnv * env)"		1175184	0					
ANR	1175186	CompoundStatement		2799:0:62233:63281	1175184	0					
ANR	1175187	IdentifierDeclStatement	int type ;	2800:2:62237:62245	1175184	0	True				
ANR	1175188	IdentifierDecl	type		1175184	0					
ANR	1175189	IdentifierDeclType	int		1175184	0					
ANR	1175190	Identifier	type		1175184	1					
ANR	1175191	IdentifierDeclStatement	int r = 0 ;	2801:2:62249:62258	1175184	1	True				
ANR	1175192	IdentifierDecl	r = 0		1175184	0					
ANR	1175193	IdentifierDeclType	int		1175184	0					
ANR	1175194	Identifier	r		1175184	1					
ANR	1175195	AssignmentExpression	r = 0		1175184	2		=			
ANR	1175196	Identifier	r		1175184	0					
ANR	1175197	PrimaryExpression	0		1175184	1					
ANR	1175198	ExpressionStatement	type = NTYPE ( node )	2803:2:62263:62281	1175184	2	True				
ANR	1175199	AssignmentExpression	type = NTYPE ( node )		1175184	0		=			
ANR	1175200	Identifier	type		1175184	0					
ANR	1175201	CallExpression	NTYPE ( node )		1175184	1					
ANR	1175202	Callee	NTYPE		1175184	0					
ANR	1175203	Identifier	NTYPE		1175184	0					
ANR	1175204	ArgumentList	node		1175184	1					
ANR	1175205	Argument	node		1175184	0					
ANR	1175206	Identifier	node		1175184	0					
ANR	1175207	SwitchStatement	switch ( type )		1175184	3					
ANR	1175208	Condition	type	2804:10:62293:62296	1175184	0	True				
ANR	1175209	Identifier	type		1175184	0					
ANR	1175210	CompoundStatement		6:16:65:65	1175184	1					
ANR	1175211	Label	case NT_LIST :	2805:2:62303:62315	1175184	0	True				
ANR	1175212	Identifier	NT_LIST		1175184	0					
ANR	1175213	Label	case NT_ALT :	2806:2:62319:62330	1175184	1	True				
ANR	1175214	Identifier	NT_ALT		1175184	0					
ANR	1175215	DoStatement	do		1175184	2					
ANR	1175216	CompoundStatement		9:7:105:105	1175184	0					
ANR	1175217	ExpressionStatement	"r = subexp_inf_recursive_check_trav ( NCAR ( node ) , env )"	2808:6:62347:62399	1175184	0	True				
ANR	1175218	AssignmentExpression	"r = subexp_inf_recursive_check_trav ( NCAR ( node ) , env )"		1175184	0		=			
ANR	1175219	Identifier	r		1175184	0					
ANR	1175220	CallExpression	"subexp_inf_recursive_check_trav ( NCAR ( node ) , env )"		1175184	1					
ANR	1175221	Callee	subexp_inf_recursive_check_trav		1175184	0					
ANR	1175222	Identifier	subexp_inf_recursive_check_trav		1175184	0					
ANR	1175223	ArgumentList	NCAR ( node )		1175184	1					
ANR	1175224	Argument	NCAR ( node )		1175184	0					
ANR	1175225	CallExpression	NCAR ( node )		1175184	0					
ANR	1175226	Callee	NCAR		1175184	0					
ANR	1175227	Identifier	NCAR		1175184	0					
ANR	1175228	ArgumentList	node		1175184	1					
ANR	1175229	Argument	node		1175184	0					
ANR	1175230	Identifier	node		1175184	0					
ANR	1175231	Argument	env		1175184	1					
ANR	1175232	Identifier	env		1175184	0					
ANR	1175233	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2809:13:62414:62453	1175184	1	True				
ANR	1175234	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1175184	0		&&			
ANR	1175235	EqualityExpression	r == 0		1175184	0		==			
ANR	1175236	Identifier	r		1175184	0					
ANR	1175237	PrimaryExpression	0		1175184	1					
ANR	1175238	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1175184	1					
ANR	1175239	Callee	IS_NOT_NULL		1175184	0					
ANR	1175240	Identifier	IS_NOT_NULL		1175184	0					
ANR	1175241	ArgumentList	node = NCDR ( node )		1175184	1					
ANR	1175242	Argument	node = NCDR ( node )		1175184	0					
ANR	1175243	AssignmentExpression	node = NCDR ( node )		1175184	0		=			
ANR	1175244	Identifier	node		1175184	0					
ANR	1175245	CallExpression	NCDR ( node )		1175184	1					
ANR	1175246	Callee	NCDR		1175184	0					
ANR	1175247	Identifier	NCDR		1175184	0					
ANR	1175248	ArgumentList	node		1175184	1					
ANR	1175249	Argument	node		1175184	0					
ANR	1175250	Identifier	node		1175184	0					
ANR	1175251	BreakStatement	break ;	2810:4:62461:62466	1175184	3	True				
ANR	1175252	Label	case NT_QTFR :	2812:2:62471:62483	1175184	4	True				
ANR	1175253	Identifier	NT_QTFR		1175184	0					
ANR	1175254	ExpressionStatement	"r = subexp_inf_recursive_check_trav ( NQTFR ( node ) -> target , env )"	2813:4:62489:62550	1175184	5	True				
ANR	1175255	AssignmentExpression	"r = subexp_inf_recursive_check_trav ( NQTFR ( node ) -> target , env )"		1175184	0		=			
ANR	1175256	Identifier	r		1175184	0					
ANR	1175257	CallExpression	"subexp_inf_recursive_check_trav ( NQTFR ( node ) -> target , env )"		1175184	1					
ANR	1175258	Callee	subexp_inf_recursive_check_trav		1175184	0					
ANR	1175259	Identifier	subexp_inf_recursive_check_trav		1175184	0					
ANR	1175260	ArgumentList	NQTFR ( node ) -> target		1175184	1					
ANR	1175261	Argument	NQTFR ( node ) -> target		1175184	0					
ANR	1175262	PtrMemberAccess	NQTFR ( node ) -> target		1175184	0					
ANR	1175263	CallExpression	NQTFR ( node )		1175184	0					
ANR	1175264	Callee	NQTFR		1175184	0					
ANR	1175265	Identifier	NQTFR		1175184	0					
ANR	1175266	ArgumentList	node		1175184	1					
ANR	1175267	Argument	node		1175184	0					
ANR	1175268	Identifier	node		1175184	0					
ANR	1175269	Identifier	target		1175184	1					
ANR	1175270	Argument	env		1175184	1					
ANR	1175271	Identifier	env		1175184	0					
ANR	1175272	BreakStatement	break ;	2814:4:62556:62561	1175184	6	True				
ANR	1175273	Label	case NT_ANCHOR :	2816:2:62566:62580	1175184	7	True				
ANR	1175274	Identifier	NT_ANCHOR		1175184	0					
ANR	1175275	CompoundStatement		20:6:360:390	1175184	8					
ANR	1175276	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	2818:6:62594:62624	1175184	0	True				
ANR	1175277	IdentifierDecl	* an = NANCHOR ( node )		1175184	0					
ANR	1175278	IdentifierDeclType	AnchorNode *		1175184	0					
ANR	1175279	Identifier	an		1175184	1					
ANR	1175280	AssignmentExpression	* an = NANCHOR ( node )		1175184	2		=			
ANR	1175281	Identifier	an		1175184	0					
ANR	1175282	CallExpression	NANCHOR ( node )		1175184	1					
ANR	1175283	Callee	NANCHOR		1175184	0					
ANR	1175284	Identifier	NANCHOR		1175184	0					
ANR	1175285	ArgumentList	node		1175184	1					
ANR	1175286	Argument	node		1175184	0					
ANR	1175287	Identifier	node		1175184	0					
ANR	1175288	SwitchStatement	switch ( an -> type )		1175184	1					
ANR	1175289	Condition	an -> type	2819:14:62640:62647	1175184	0	True				
ANR	1175290	PtrMemberAccess	an -> type		1175184	0					
ANR	1175291	Identifier	an		1175184	0					
ANR	1175292	Identifier	type		1175184	1					
ANR	1175293	CompoundStatement		21:24:416:416	1175184	1					
ANR	1175294	Label	case ANCHOR_PREC_READ :	2820:6:62658:62679	1175184	0	True				
ANR	1175295	Identifier	ANCHOR_PREC_READ		1175184	0					
ANR	1175296	Label	case ANCHOR_PREC_READ_NOT :	2821:6:62687:62712	1175184	1	True				
ANR	1175297	Identifier	ANCHOR_PREC_READ_NOT		1175184	0					
ANR	1175298	Label	case ANCHOR_LOOK_BEHIND :	2822:6:62720:62743	1175184	2	True				
ANR	1175299	Identifier	ANCHOR_LOOK_BEHIND		1175184	0					
ANR	1175300	Label	case ANCHOR_LOOK_BEHIND_NOT :	2823:6:62751:62778	1175184	3	True				
ANR	1175301	Identifier	ANCHOR_LOOK_BEHIND_NOT		1175184	0					
ANR	1175302	ExpressionStatement	"r = subexp_inf_recursive_check_trav ( an -> target , env )"	2824:1:62781:62833	1175184	4	True				
ANR	1175303	AssignmentExpression	"r = subexp_inf_recursive_check_trav ( an -> target , env )"		1175184	0		=			
ANR	1175304	Identifier	r		1175184	0					
ANR	1175305	CallExpression	"subexp_inf_recursive_check_trav ( an -> target , env )"		1175184	1					
ANR	1175306	Callee	subexp_inf_recursive_check_trav		1175184	0					
ANR	1175307	Identifier	subexp_inf_recursive_check_trav		1175184	0					
ANR	1175308	ArgumentList	an -> target		1175184	1					
ANR	1175309	Argument	an -> target		1175184	0					
ANR	1175310	PtrMemberAccess	an -> target		1175184	0					
ANR	1175311	Identifier	an		1175184	0					
ANR	1175312	Identifier	target		1175184	1					
ANR	1175313	Argument	env		1175184	1					
ANR	1175314	Identifier	env		1175184	0					
ANR	1175315	BreakStatement	break ;	2825:1:62836:62841	1175184	5	True				
ANR	1175316	BreakStatement	break ;	2828:4:62861:62866	1175184	9	True				
ANR	1175317	Label	case NT_ENCLOSE :	2830:2:62871:62886	1175184	10	True				
ANR	1175318	Identifier	NT_ENCLOSE		1175184	0					
ANR	1175319	CompoundStatement		34:6:666:698	1175184	11					
ANR	1175320	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2832:6:62900:62932	1175184	0	True				
ANR	1175321	IdentifierDecl	* en = NENCLOSE ( node )		1175184	0					
ANR	1175322	IdentifierDeclType	EncloseNode *		1175184	0					
ANR	1175323	Identifier	en		1175184	1					
ANR	1175324	AssignmentExpression	* en = NENCLOSE ( node )		1175184	2		=			
ANR	1175325	Identifier	en		1175184	0					
ANR	1175326	CallExpression	NENCLOSE ( node )		1175184	1					
ANR	1175327	Callee	NENCLOSE		1175184	0					
ANR	1175328	Identifier	NENCLOSE		1175184	0					
ANR	1175329	ArgumentList	node		1175184	1					
ANR	1175330	Argument	node		1175184	0					
ANR	1175331	Identifier	node		1175184	0					
ANR	1175332	IfStatement	if ( IS_ENCLOSE_RECURSION ( en ) )		1175184	1					
ANR	1175333	Condition	IS_ENCLOSE_RECURSION ( en )	2834:10:62945:62968	1175184	0	True				
ANR	1175334	CallExpression	IS_ENCLOSE_RECURSION ( en )		1175184	0					
ANR	1175335	Callee	IS_ENCLOSE_RECURSION		1175184	0					
ANR	1175336	Identifier	IS_ENCLOSE_RECURSION		1175184	0					
ANR	1175337	ArgumentList	en		1175184	1					
ANR	1175338	Argument	en		1175184	0					
ANR	1175339	Identifier	en		1175184	0					
ANR	1175340	CompoundStatement		36:36:737:737	1175184	1					
ANR	1175341	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_MARK1 )"	2835:1:62974:63009	1175184	0	True				
ANR	1175342	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_MARK1 )"		1175184	0					
ANR	1175343	Callee	SET_ENCLOSE_STATUS		1175184	0					
ANR	1175344	Identifier	SET_ENCLOSE_STATUS		1175184	0					
ANR	1175345	ArgumentList	node		1175184	1					
ANR	1175346	Argument	node		1175184	0					
ANR	1175347	Identifier	node		1175184	0					
ANR	1175348	Argument	NST_MARK1		1175184	1					
ANR	1175349	Identifier	NST_MARK1		1175184	0					
ANR	1175350	ExpressionStatement	"r = subexp_inf_recursive_check ( en -> target , env , 1 )"	2836:1:63012:63062	1175184	1	True				
ANR	1175351	AssignmentExpression	"r = subexp_inf_recursive_check ( en -> target , env , 1 )"		1175184	0		=			
ANR	1175352	Identifier	r		1175184	0					
ANR	1175353	CallExpression	"subexp_inf_recursive_check ( en -> target , env , 1 )"		1175184	1					
ANR	1175354	Callee	subexp_inf_recursive_check		1175184	0					
ANR	1175355	Identifier	subexp_inf_recursive_check		1175184	0					
ANR	1175356	ArgumentList	en -> target		1175184	1					
ANR	1175357	Argument	en -> target		1175184	0					
ANR	1175358	PtrMemberAccess	en -> target		1175184	0					
ANR	1175359	Identifier	en		1175184	0					
ANR	1175360	Identifier	target		1175184	1					
ANR	1175361	Argument	env		1175184	1					
ANR	1175362	Identifier	env		1175184	0					
ANR	1175363	Argument	1		1175184	2					
ANR	1175364	PrimaryExpression	1		1175184	0					
ANR	1175365	IfStatement	if ( r > 0 )		1175184	2					
ANR	1175366	Condition	r > 0	2837:5:63069:63073	1175184	0	True				
ANR	1175367	RelationalExpression	r > 0		1175184	0		>			
ANR	1175368	Identifier	r		1175184	0					
ANR	1175369	PrimaryExpression	0		1175184	1					
ANR	1175370	ReturnStatement	return ONIGERR_NEVER_ENDING_RECURSION ;	2837:12:63076:63113	1175184	1	True				
ANR	1175371	Identifier	ONIGERR_NEVER_ENDING_RECURSION		1175184	0					
ANR	1175372	ExpressionStatement	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK1 )"	2838:1:63116:63153	1175184	3	True				
ANR	1175373	CallExpression	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK1 )"		1175184	0					
ANR	1175374	Callee	CLEAR_ENCLOSE_STATUS		1175184	0					
ANR	1175375	Identifier	CLEAR_ENCLOSE_STATUS		1175184	0					
ANR	1175376	ArgumentList	node		1175184	1					
ANR	1175377	Argument	node		1175184	0					
ANR	1175378	Identifier	node		1175184	0					
ANR	1175379	Argument	NST_MARK1		1175184	1					
ANR	1175380	Identifier	NST_MARK1		1175184	0					
ANR	1175381	ExpressionStatement	"r = subexp_inf_recursive_check_trav ( en -> target , env )"	2840:6:63169:63221	1175184	2	True				
ANR	1175382	AssignmentExpression	"r = subexp_inf_recursive_check_trav ( en -> target , env )"		1175184	0		=			
ANR	1175383	Identifier	r		1175184	0					
ANR	1175384	CallExpression	"subexp_inf_recursive_check_trav ( en -> target , env )"		1175184	1					
ANR	1175385	Callee	subexp_inf_recursive_check_trav		1175184	0					
ANR	1175386	Identifier	subexp_inf_recursive_check_trav		1175184	0					
ANR	1175387	ArgumentList	en -> target		1175184	1					
ANR	1175388	Argument	en -> target		1175184	0					
ANR	1175389	PtrMemberAccess	en -> target		1175184	0					
ANR	1175390	Identifier	en		1175184	0					
ANR	1175391	Identifier	target		1175184	1					
ANR	1175392	Argument	env		1175184	1					
ANR	1175393	Identifier	env		1175184	0					
ANR	1175394	BreakStatement	break ;	2843:4:63234:63239	1175184	12	True				
ANR	1175395	Label	default :	2845:2:63244:63251	1175184	13	True				
ANR	1175396	Identifier	default		1175184	0					
ANR	1175397	BreakStatement	break ;	2846:4:63257:63262	1175184	14	True				
ANR	1175398	ReturnStatement	return r ;	2849:2:63271:63279	1175184	4	True				
ANR	1175399	Identifier	r		1175184	0					
ANR	1175400	ReturnType	static int		1175184	1					
ANR	1175401	Identifier	subexp_inf_recursive_check_trav		1175184	2					
ANR	1175402	ParameterList	"Node * node , ScanEnv * env"		1175184	3					
ANR	1175403	Parameter	Node * node	2798:32:62207:62216	1175184	0	True				
ANR	1175404	ParameterType	Node *		1175184	0					
ANR	1175405	Identifier	node		1175184	1					
ANR	1175406	Parameter	ScanEnv * env	2798:44:62219:62230	1175184	1	True				
ANR	1175407	ParameterType	ScanEnv *		1175184	0					
ANR	1175408	Identifier	env		1175184	1					
ANR	1175409	CFGEntryNode	ENTRY		1175184		True				
ANR	1175410	CFGExitNode	EXIT		1175184		True				
ANR	1175411	Symbol	NQTFR ( node ) -> target		1175184						
ANR	1175412	Symbol	IS_NOT_NULL		1175184						
ANR	1175413	Symbol	NCAR		1175184						
ANR	1175414	Symbol	an -> type		1175184						
ANR	1175415	Symbol	type		1175184						
ANR	1175416	Symbol	NQTFR		1175184						
ANR	1175417	Symbol	* en		1175184						
ANR	1175418	Symbol	ONIGERR_NEVER_ENDING_RECURSION		1175184						
ANR	1175419	Symbol	* NQTFR		1175184						
ANR	1175420	Symbol	NENCLOSE		1175184						
ANR	1175421	Symbol	subexp_inf_recursive_check_trav		1175184						
ANR	1175422	Symbol	NCDR		1175184						
ANR	1175423	Symbol	en		1175184						
ANR	1175424	Symbol	NST_MARK1		1175184						
ANR	1175425	Symbol	env		1175184						
ANR	1175426	Symbol	an		1175184						
ANR	1175427	Symbol	* an		1175184						
ANR	1175428	Symbol	node		1175184						
ANR	1175429	Symbol	r		1175184						
ANR	1175430	Symbol	an -> target		1175184						
ANR	1175431	Symbol	en -> target		1175184						
ANR	1175432	Symbol	NANCHOR		1175184						
ANR	1175433	Symbol	NTYPE		1175184						
ANR	1175434	Symbol	IS_ENCLOSE_RECURSION		1175184						
ANR	1175435	Symbol	subexp_inf_recursive_check		1175184						
ANR	1175436	Function	subexp_recursive_check	2852:0:63284:64381							
ANR	1175437	FunctionDef	subexp_recursive_check (Node * node)		1175436	0					
ANR	1175438	CompoundStatement		2854:0:63330:64381	1175436	0					
ANR	1175439	IdentifierDeclStatement	int r = 0 ;	2855:2:63334:63343	1175436	0	True				
ANR	1175440	IdentifierDecl	r = 0		1175436	0					
ANR	1175441	IdentifierDeclType	int		1175436	0					
ANR	1175442	Identifier	r		1175436	1					
ANR	1175443	AssignmentExpression	r = 0		1175436	2		=			
ANR	1175444	Identifier	r		1175436	0					
ANR	1175445	PrimaryExpression	0		1175436	1					
ANR	1175446	SwitchStatement	switch ( NTYPE ( node ) )		1175436	1					
ANR	1175447	Condition	NTYPE ( node )	2857:10:63356:63366	1175436	0	True				
ANR	1175448	CallExpression	NTYPE ( node )		1175436	0					
ANR	1175449	Callee	NTYPE		1175436	0					
ANR	1175450	Identifier	NTYPE		1175436	0					
ANR	1175451	ArgumentList	node		1175436	1					
ANR	1175452	Argument	node		1175436	0					
ANR	1175453	Identifier	node		1175436	0					
ANR	1175454	CompoundStatement		4:23:38:38	1175436	1					
ANR	1175455	Label	case NT_LIST :	2858:2:63373:63385	1175436	0	True				
ANR	1175456	Identifier	NT_LIST		1175436	0					
ANR	1175457	Label	case NT_ALT :	2859:2:63389:63400	1175436	1	True				
ANR	1175458	Identifier	NT_ALT		1175436	0					
ANR	1175459	DoStatement	do		1175436	2					
ANR	1175460	CompoundStatement		7:7:78:78	1175436	0					
ANR	1175461	ExpressionStatement	r |= subexp_recursive_check ( NCAR ( node ) )	2861:6:63417:63456	1175436	0	True				
ANR	1175462	AssignmentExpression	r |= subexp_recursive_check ( NCAR ( node ) )		1175436	0		|=			
ANR	1175463	Identifier	r		1175436	0					
ANR	1175464	CallExpression	subexp_recursive_check ( NCAR ( node ) )		1175436	1					
ANR	1175465	Callee	subexp_recursive_check		1175436	0					
ANR	1175466	Identifier	subexp_recursive_check		1175436	0					
ANR	1175467	ArgumentList	NCAR ( node )		1175436	1					
ANR	1175468	Argument	NCAR ( node )		1175436	0					
ANR	1175469	CallExpression	NCAR ( node )		1175436	0					
ANR	1175470	Callee	NCAR		1175436	0					
ANR	1175471	Identifier	NCAR		1175436	0					
ANR	1175472	ArgumentList	node		1175436	1					
ANR	1175473	Argument	node		1175436	0					
ANR	1175474	Identifier	node		1175436	0					
ANR	1175475	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	2862:13:63471:63500	1175436	1	True				
ANR	1175476	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1175436	0					
ANR	1175477	Callee	IS_NOT_NULL		1175436	0					
ANR	1175478	Identifier	IS_NOT_NULL		1175436	0					
ANR	1175479	ArgumentList	node = NCDR ( node )		1175436	1					
ANR	1175480	Argument	node = NCDR ( node )		1175436	0					
ANR	1175481	AssignmentExpression	node = NCDR ( node )		1175436	0		=			
ANR	1175482	Identifier	node		1175436	0					
ANR	1175483	CallExpression	NCDR ( node )		1175436	1					
ANR	1175484	Callee	NCDR		1175436	0					
ANR	1175485	Identifier	NCDR		1175436	0					
ANR	1175486	ArgumentList	node		1175436	1					
ANR	1175487	Argument	node		1175436	0					
ANR	1175488	Identifier	node		1175436	0					
ANR	1175489	BreakStatement	break ;	2863:4:63508:63513	1175436	3	True				
ANR	1175490	Label	case NT_QTFR :	2865:2:63518:63530	1175436	4	True				
ANR	1175491	Identifier	NT_QTFR		1175436	0					
ANR	1175492	ExpressionStatement	r = subexp_recursive_check ( NQTFR ( node ) -> target )	2866:4:63536:63583	1175436	5	True				
ANR	1175493	AssignmentExpression	r = subexp_recursive_check ( NQTFR ( node ) -> target )		1175436	0		=			
ANR	1175494	Identifier	r		1175436	0					
ANR	1175495	CallExpression	subexp_recursive_check ( NQTFR ( node ) -> target )		1175436	1					
ANR	1175496	Callee	subexp_recursive_check		1175436	0					
ANR	1175497	Identifier	subexp_recursive_check		1175436	0					
ANR	1175498	ArgumentList	NQTFR ( node ) -> target		1175436	1					
ANR	1175499	Argument	NQTFR ( node ) -> target		1175436	0					
ANR	1175500	PtrMemberAccess	NQTFR ( node ) -> target		1175436	0					
ANR	1175501	CallExpression	NQTFR ( node )		1175436	0					
ANR	1175502	Callee	NQTFR		1175436	0					
ANR	1175503	Identifier	NQTFR		1175436	0					
ANR	1175504	ArgumentList	node		1175436	1					
ANR	1175505	Argument	node		1175436	0					
ANR	1175506	Identifier	node		1175436	0					
ANR	1175507	Identifier	target		1175436	1					
ANR	1175508	BreakStatement	break ;	2867:4:63589:63594	1175436	6	True				
ANR	1175509	Label	case NT_ANCHOR :	2869:2:63599:63613	1175436	7	True				
ANR	1175510	Identifier	NT_ANCHOR		1175436	0					
ANR	1175511	CompoundStatement		18:6:296:326	1175436	8					
ANR	1175512	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	2871:6:63627:63657	1175436	0	True				
ANR	1175513	IdentifierDecl	* an = NANCHOR ( node )		1175436	0					
ANR	1175514	IdentifierDeclType	AnchorNode *		1175436	0					
ANR	1175515	Identifier	an		1175436	1					
ANR	1175516	AssignmentExpression	* an = NANCHOR ( node )		1175436	2		=			
ANR	1175517	Identifier	an		1175436	0					
ANR	1175518	CallExpression	NANCHOR ( node )		1175436	1					
ANR	1175519	Callee	NANCHOR		1175436	0					
ANR	1175520	Identifier	NANCHOR		1175436	0					
ANR	1175521	ArgumentList	node		1175436	1					
ANR	1175522	Argument	node		1175436	0					
ANR	1175523	Identifier	node		1175436	0					
ANR	1175524	SwitchStatement	switch ( an -> type )		1175436	1					
ANR	1175525	Condition	an -> type	2872:14:63673:63680	1175436	0	True				
ANR	1175526	PtrMemberAccess	an -> type		1175436	0					
ANR	1175527	Identifier	an		1175436	0					
ANR	1175528	Identifier	type		1175436	1					
ANR	1175529	CompoundStatement		19:24:352:352	1175436	1					
ANR	1175530	Label	case ANCHOR_PREC_READ :	2873:6:63691:63712	1175436	0	True				
ANR	1175531	Identifier	ANCHOR_PREC_READ		1175436	0					
ANR	1175532	Label	case ANCHOR_PREC_READ_NOT :	2874:6:63720:63745	1175436	1	True				
ANR	1175533	Identifier	ANCHOR_PREC_READ_NOT		1175436	0					
ANR	1175534	Label	case ANCHOR_LOOK_BEHIND :	2875:6:63753:63776	1175436	2	True				
ANR	1175535	Identifier	ANCHOR_LOOK_BEHIND		1175436	0					
ANR	1175536	Label	case ANCHOR_LOOK_BEHIND_NOT :	2876:6:63784:63811	1175436	3	True				
ANR	1175537	Identifier	ANCHOR_LOOK_BEHIND_NOT		1175436	0					
ANR	1175538	ExpressionStatement	r = subexp_recursive_check ( an -> target )	2877:1:63814:63852	1175436	4	True				
ANR	1175539	AssignmentExpression	r = subexp_recursive_check ( an -> target )		1175436	0		=			
ANR	1175540	Identifier	r		1175436	0					
ANR	1175541	CallExpression	subexp_recursive_check ( an -> target )		1175436	1					
ANR	1175542	Callee	subexp_recursive_check		1175436	0					
ANR	1175543	Identifier	subexp_recursive_check		1175436	0					
ANR	1175544	ArgumentList	an -> target		1175436	1					
ANR	1175545	Argument	an -> target		1175436	0					
ANR	1175546	PtrMemberAccess	an -> target		1175436	0					
ANR	1175547	Identifier	an		1175436	0					
ANR	1175548	Identifier	target		1175436	1					
ANR	1175549	BreakStatement	break ;	2878:1:63855:63860	1175436	5	True				
ANR	1175550	BreakStatement	break ;	2881:4:63880:63885	1175436	9	True				
ANR	1175551	Label	case NT_CALL :	2883:2:63890:63902	1175436	10	True				
ANR	1175552	Identifier	NT_CALL		1175436	0					
ANR	1175553	ExpressionStatement	r = subexp_recursive_check ( NCALL ( node ) -> target )	2884:4:63908:63955	1175436	11	True				
ANR	1175554	AssignmentExpression	r = subexp_recursive_check ( NCALL ( node ) -> target )		1175436	0		=			
ANR	1175555	Identifier	r		1175436	0					
ANR	1175556	CallExpression	subexp_recursive_check ( NCALL ( node ) -> target )		1175436	1					
ANR	1175557	Callee	subexp_recursive_check		1175436	0					
ANR	1175558	Identifier	subexp_recursive_check		1175436	0					
ANR	1175559	ArgumentList	NCALL ( node ) -> target		1175436	1					
ANR	1175560	Argument	NCALL ( node ) -> target		1175436	0					
ANR	1175561	PtrMemberAccess	NCALL ( node ) -> target		1175436	0					
ANR	1175562	CallExpression	NCALL ( node )		1175436	0					
ANR	1175563	Callee	NCALL		1175436	0					
ANR	1175564	Identifier	NCALL		1175436	0					
ANR	1175565	ArgumentList	node		1175436	1					
ANR	1175566	Argument	node		1175436	0					
ANR	1175567	Identifier	node		1175436	0					
ANR	1175568	Identifier	target		1175436	1					
ANR	1175569	IfStatement	if ( r != 0 )		1175436	12					
ANR	1175570	Condition	r != 0	2885:8:63965:63970	1175436	0	True				
ANR	1175571	EqualityExpression	r != 0		1175436	0		!=			
ANR	1175572	Identifier	r		1175436	0					
ANR	1175573	PrimaryExpression	0		1175436	1					
ANR	1175574	ExpressionStatement	SET_CALL_RECURSION ( node )	2885:16:63973:63997	1175436	1	True				
ANR	1175575	CallExpression	SET_CALL_RECURSION ( node )		1175436	0					
ANR	1175576	Callee	SET_CALL_RECURSION		1175436	0					
ANR	1175577	Identifier	SET_CALL_RECURSION		1175436	0					
ANR	1175578	ArgumentList	node		1175436	1					
ANR	1175579	Argument	node		1175436	0					
ANR	1175580	Identifier	node		1175436	0					
ANR	1175581	BreakStatement	break ;	2886:4:64003:64008	1175436	13	True				
ANR	1175582	Label	case NT_ENCLOSE :	2888:2:64013:64028	1175436	14	True				
ANR	1175583	Identifier	NT_ENCLOSE		1175436	0					
ANR	1175584	IfStatement	if ( IS_ENCLOSE_MARK2 ( NENCLOSE ( node ) ) )		1175436	15					
ANR	1175585	Condition	IS_ENCLOSE_MARK2 ( NENCLOSE ( node ) )	2889:8:64038:64069	1175436	0	True				
ANR	1175586	CallExpression	IS_ENCLOSE_MARK2 ( NENCLOSE ( node ) )		1175436	0					
ANR	1175587	Callee	IS_ENCLOSE_MARK2		1175436	0					
ANR	1175588	Identifier	IS_ENCLOSE_MARK2		1175436	0					
ANR	1175589	ArgumentList	NENCLOSE ( node )		1175436	1					
ANR	1175590	Argument	NENCLOSE ( node )		1175436	0					
ANR	1175591	CallExpression	NENCLOSE ( node )		1175436	0					
ANR	1175592	Callee	NENCLOSE		1175436	0					
ANR	1175593	Identifier	NENCLOSE		1175436	0					
ANR	1175594	ArgumentList	node		1175436	1					
ANR	1175595	Argument	node		1175436	0					
ANR	1175596	Identifier	node		1175436	0					
ANR	1175597	ReturnStatement	return 0 ;	2890:6:64078:64086	1175436	1	True				
ANR	1175598	PrimaryExpression	0		1175436	0					
ANR	1175599	ElseStatement	else		1175436	0					
ANR	1175600	IfStatement	if ( IS_ENCLOSE_MARK1 ( NENCLOSE ( node ) ) )		1175436	0					
ANR	1175601	Condition	IS_ENCLOSE_MARK1 ( NENCLOSE ( node ) )	2891:13:64101:64132	1175436	0	True				
ANR	1175602	CallExpression	IS_ENCLOSE_MARK1 ( NENCLOSE ( node ) )		1175436	0					
ANR	1175603	Callee	IS_ENCLOSE_MARK1		1175436	0					
ANR	1175604	Identifier	IS_ENCLOSE_MARK1		1175436	0					
ANR	1175605	ArgumentList	NENCLOSE ( node )		1175436	1					
ANR	1175606	Argument	NENCLOSE ( node )		1175436	0					
ANR	1175607	CallExpression	NENCLOSE ( node )		1175436	0					
ANR	1175608	Callee	NENCLOSE		1175436	0					
ANR	1175609	Identifier	NENCLOSE		1175436	0					
ANR	1175610	ArgumentList	node		1175436	1					
ANR	1175611	Argument	node		1175436	0					
ANR	1175612	Identifier	node		1175436	0					
ANR	1175613	ReturnStatement	return 1 ;	2892:6:64141:64149	1175436	1	True				
ANR	1175614	PrimaryExpression	1		1175436	0					
ANR	1175615	ElseStatement	else		1175436	0					
ANR	1175616	CompoundStatement		40:9:845:845	1175436	0					
ANR	1175617	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_MARK2 )"	2894:6:64184:64219	1175436	0	True				
ANR	1175618	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_MARK2 )"		1175436	0					
ANR	1175619	Callee	SET_ENCLOSE_STATUS		1175436	0					
ANR	1175620	Identifier	SET_ENCLOSE_STATUS		1175436	0					
ANR	1175621	ArgumentList	node		1175436	1					
ANR	1175622	Argument	node		1175436	0					
ANR	1175623	Identifier	node		1175436	0					
ANR	1175624	Argument	NST_MARK2		1175436	1					
ANR	1175625	Identifier	NST_MARK2		1175436	0					
ANR	1175626	ExpressionStatement	r = subexp_recursive_check ( NENCLOSE ( node ) -> target )	2895:6:64227:64277	1175436	1	True				
ANR	1175627	AssignmentExpression	r = subexp_recursive_check ( NENCLOSE ( node ) -> target )		1175436	0		=			
ANR	1175628	Identifier	r		1175436	0					
ANR	1175629	CallExpression	subexp_recursive_check ( NENCLOSE ( node ) -> target )		1175436	1					
ANR	1175630	Callee	subexp_recursive_check		1175436	0					
ANR	1175631	Identifier	subexp_recursive_check		1175436	0					
ANR	1175632	ArgumentList	NENCLOSE ( node ) -> target		1175436	1					
ANR	1175633	Argument	NENCLOSE ( node ) -> target		1175436	0					
ANR	1175634	PtrMemberAccess	NENCLOSE ( node ) -> target		1175436	0					
ANR	1175635	CallExpression	NENCLOSE ( node )		1175436	0					
ANR	1175636	Callee	NENCLOSE		1175436	0					
ANR	1175637	Identifier	NENCLOSE		1175436	0					
ANR	1175638	ArgumentList	node		1175436	1					
ANR	1175639	Argument	node		1175436	0					
ANR	1175640	Identifier	node		1175436	0					
ANR	1175641	Identifier	target		1175436	1					
ANR	1175642	ExpressionStatement	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK2 )"	2896:6:64285:64322	1175436	2	True				
ANR	1175643	CallExpression	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK2 )"		1175436	0					
ANR	1175644	Callee	CLEAR_ENCLOSE_STATUS		1175436	0					
ANR	1175645	Identifier	CLEAR_ENCLOSE_STATUS		1175436	0					
ANR	1175646	ArgumentList	node		1175436	1					
ANR	1175647	Argument	node		1175436	0					
ANR	1175648	Identifier	node		1175436	0					
ANR	1175649	Argument	NST_MARK2		1175436	1					
ANR	1175650	Identifier	NST_MARK2		1175436	0					
ANR	1175651	BreakStatement	break ;	2898:4:64334:64339	1175436	16	True				
ANR	1175652	Label	default :	2900:2:64344:64351	1175436	17	True				
ANR	1175653	Identifier	default		1175436	0					
ANR	1175654	BreakStatement	break ;	2901:4:64357:64362	1175436	18	True				
ANR	1175655	ReturnStatement	return r ;	2904:2:64371:64379	1175436	2	True				
ANR	1175656	Identifier	r		1175436	0					
ANR	1175657	ReturnType	static int		1175436	1					
ANR	1175658	Identifier	subexp_recursive_check		1175436	2					
ANR	1175659	ParameterList	Node * node		1175436	3					
ANR	1175660	Parameter	Node * node	2853:23:63318:63327	1175436	0	True				
ANR	1175661	ParameterType	Node *		1175436	0					
ANR	1175662	Identifier	node		1175436	1					
ANR	1175663	CFGEntryNode	ENTRY		1175436		True				
ANR	1175664	CFGExitNode	EXIT		1175436		True				
ANR	1175665	Symbol	NQTFR ( node ) -> target		1175436						
ANR	1175666	Symbol	IS_NOT_NULL		1175436						
ANR	1175667	Symbol	NCAR		1175436						
ANR	1175668	Symbol	NCALL		1175436						
ANR	1175669	Symbol	* NENCLOSE		1175436						
ANR	1175670	Symbol	NCDR		1175436						
ANR	1175671	Symbol	an -> type		1175436						
ANR	1175672	Symbol	IS_ENCLOSE_MARK2		1175436						
ANR	1175673	Symbol	NST_MARK2		1175436						
ANR	1175674	Symbol	subexp_recursive_check		1175436						
ANR	1175675	Symbol	NQTFR		1175436						
ANR	1175676	Symbol	an		1175436						
ANR	1175677	Symbol	NENCLOSE ( node ) -> target		1175436						
ANR	1175678	Symbol	* an		1175436						
ANR	1175679	Symbol	node		1175436						
ANR	1175680	Symbol	r		1175436						
ANR	1175681	Symbol	* NQTFR		1175436						
ANR	1175682	Symbol	an -> target		1175436						
ANR	1175683	Symbol	NENCLOSE		1175436						
ANR	1175684	Symbol	IS_ENCLOSE_MARK1		1175436						
ANR	1175685	Symbol	NANCHOR		1175436						
ANR	1175686	Symbol	NCALL ( node ) -> target		1175436						
ANR	1175687	Symbol	NTYPE		1175436						
ANR	1175688	Symbol	* NCALL		1175436						
ANR	1175689	Function	subexp_recursive_check_trav	2908:0:64385:65813							
ANR	1175690	FunctionDef	"subexp_recursive_check_trav (Node * node , ScanEnv * env)"		1175689	0					
ANR	1175691	CompoundStatement		2910:0:64450:65813	1175689	0					
ANR	1175692	Statement	define	2911:1:64453:64458	1175689	0	True				
ANR	1175693	Statement	FOUND_CALLED_NODE	2911:8:64460:64476	1175689	1	True				
ANR	1175694	Statement	1	2911:29:64481:64481	1175689	2	True				
ANR	1175695	IdentifierDeclStatement	int type ;	2913:2:64486:64494	1175689	3	True				
ANR	1175696	IdentifierDecl	type		1175689	0					
ANR	1175697	IdentifierDeclType	int		1175689	0					
ANR	1175698	Identifier	type		1175689	1					
ANR	1175699	IdentifierDeclStatement	int r = 0 ;	2914:2:64498:64507	1175689	4	True				
ANR	1175700	IdentifierDecl	r = 0		1175689	0					
ANR	1175701	IdentifierDeclType	int		1175689	0					
ANR	1175702	Identifier	r		1175689	1					
ANR	1175703	AssignmentExpression	r = 0		1175689	2		=			
ANR	1175704	Identifier	r		1175689	0					
ANR	1175705	PrimaryExpression	0		1175689	1					
ANR	1175706	ExpressionStatement	type = NTYPE ( node )	2916:2:64512:64530	1175689	5	True				
ANR	1175707	AssignmentExpression	type = NTYPE ( node )		1175689	0		=			
ANR	1175708	Identifier	type		1175689	0					
ANR	1175709	CallExpression	NTYPE ( node )		1175689	1					
ANR	1175710	Callee	NTYPE		1175689	0					
ANR	1175711	Identifier	NTYPE		1175689	0					
ANR	1175712	ArgumentList	node		1175689	1					
ANR	1175713	Argument	node		1175689	0					
ANR	1175714	Identifier	node		1175689	0					
ANR	1175715	SwitchStatement	switch ( type )		1175689	6					
ANR	1175716	Condition	type	2917:10:64542:64545	1175689	0	True				
ANR	1175717	Identifier	type		1175689	0					
ANR	1175718	CompoundStatement		8:16:97:97	1175689	1					
ANR	1175719	Label	case NT_LIST :	2918:2:64552:64564	1175689	0	True				
ANR	1175720	Identifier	NT_LIST		1175689	0					
ANR	1175721	Label	case NT_ALT :	2919:2:64568:64579	1175689	1	True				
ANR	1175722	Identifier	NT_ALT		1175689	0					
ANR	1175723	CompoundStatement		12:6:142:149	1175689	2					
ANR	1175724	IdentifierDeclStatement	int ret ;	2921:6:64593:64600	1175689	0	True				
ANR	1175725	IdentifierDecl	ret		1175689	0					
ANR	1175726	IdentifierDeclType	int		1175689	0					
ANR	1175727	Identifier	ret		1175689	1					
ANR	1175728	DoStatement	do		1175689	1					
ANR	1175729	CompoundStatement		13:9:160:160	1175689	0					
ANR	1175730	ExpressionStatement	"ret = subexp_recursive_check_trav ( NCAR ( node ) , env )"	2923:1:64614:64664	1175689	0	True				
ANR	1175731	AssignmentExpression	"ret = subexp_recursive_check_trav ( NCAR ( node ) , env )"		1175689	0		=			
ANR	1175732	Identifier	ret		1175689	0					
ANR	1175733	CallExpression	"subexp_recursive_check_trav ( NCAR ( node ) , env )"		1175689	1					
ANR	1175734	Callee	subexp_recursive_check_trav		1175689	0					
ANR	1175735	Identifier	subexp_recursive_check_trav		1175689	0					
ANR	1175736	ArgumentList	NCAR ( node )		1175689	1					
ANR	1175737	Argument	NCAR ( node )		1175689	0					
ANR	1175738	CallExpression	NCAR ( node )		1175689	0					
ANR	1175739	Callee	NCAR		1175689	0					
ANR	1175740	Identifier	NCAR		1175689	0					
ANR	1175741	ArgumentList	node		1175689	1					
ANR	1175742	Argument	node		1175689	0					
ANR	1175743	Identifier	node		1175689	0					
ANR	1175744	Argument	env		1175689	1					
ANR	1175745	Identifier	env		1175689	0					
ANR	1175746	IfStatement	if ( ret == FOUND_CALLED_NODE )		1175689	1					
ANR	1175747	Condition	ret == FOUND_CALLED_NODE	2924:5:64671:64694	1175689	0	True				
ANR	1175748	EqualityExpression	ret == FOUND_CALLED_NODE		1175689	0		==			
ANR	1175749	Identifier	ret		1175689	0					
ANR	1175750	Identifier	FOUND_CALLED_NODE		1175689	1					
ANR	1175751	ExpressionStatement	r = FOUND_CALLED_NODE	2924:31:64697:64718	1175689	1	True				
ANR	1175752	AssignmentExpression	r = FOUND_CALLED_NODE		1175689	0		=			
ANR	1175753	Identifier	r		1175689	0					
ANR	1175754	Identifier	FOUND_CALLED_NODE		1175689	1					
ANR	1175755	ElseStatement	else		1175689	0					
ANR	1175756	IfStatement	if ( ret < 0 )		1175689	0					
ANR	1175757	Condition	ret < 0	2925:10:64730:64736	1175689	0	True				
ANR	1175758	RelationalExpression	ret < 0		1175689	0		<			
ANR	1175759	Identifier	ret		1175689	0					
ANR	1175760	PrimaryExpression	0		1175689	1					
ANR	1175761	ReturnStatement	return ret ;	2925:19:64739:64749	1175689	1	True				
ANR	1175762	Identifier	ret		1175689	0					
ANR	1175763	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	2926:15:64766:64795	1175689	1	True				
ANR	1175764	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1175689	0					
ANR	1175765	Callee	IS_NOT_NULL		1175689	0					
ANR	1175766	Identifier	IS_NOT_NULL		1175689	0					
ANR	1175767	ArgumentList	node = NCDR ( node )		1175689	1					
ANR	1175768	Argument	node = NCDR ( node )		1175689	0					
ANR	1175769	AssignmentExpression	node = NCDR ( node )		1175689	0		=			
ANR	1175770	Identifier	node		1175689	0					
ANR	1175771	CallExpression	NCDR ( node )		1175689	1					
ANR	1175772	Callee	NCDR		1175689	0					
ANR	1175773	Identifier	NCDR		1175689	0					
ANR	1175774	ArgumentList	node		1175689	1					
ANR	1175775	Argument	node		1175689	0					
ANR	1175776	Identifier	node		1175689	0					
ANR	1175777	BreakStatement	break ;	2928:4:64809:64814	1175689	3	True				
ANR	1175778	Label	case NT_QTFR :	2930:2:64819:64831	1175689	4	True				
ANR	1175779	Identifier	NT_QTFR		1175689	0					
ANR	1175780	ExpressionStatement	"r = subexp_recursive_check_trav ( NQTFR ( node ) -> target , env )"	2931:4:64837:64894	1175689	5	True				
ANR	1175781	AssignmentExpression	"r = subexp_recursive_check_trav ( NQTFR ( node ) -> target , env )"		1175689	0		=			
ANR	1175782	Identifier	r		1175689	0					
ANR	1175783	CallExpression	"subexp_recursive_check_trav ( NQTFR ( node ) -> target , env )"		1175689	1					
ANR	1175784	Callee	subexp_recursive_check_trav		1175689	0					
ANR	1175785	Identifier	subexp_recursive_check_trav		1175689	0					
ANR	1175786	ArgumentList	NQTFR ( node ) -> target		1175689	1					
ANR	1175787	Argument	NQTFR ( node ) -> target		1175689	0					
ANR	1175788	PtrMemberAccess	NQTFR ( node ) -> target		1175689	0					
ANR	1175789	CallExpression	NQTFR ( node )		1175689	0					
ANR	1175790	Callee	NQTFR		1175689	0					
ANR	1175791	Identifier	NQTFR		1175689	0					
ANR	1175792	ArgumentList	node		1175689	1					
ANR	1175793	Argument	node		1175689	0					
ANR	1175794	Identifier	node		1175689	0					
ANR	1175795	Identifier	target		1175689	1					
ANR	1175796	Argument	env		1175689	1					
ANR	1175797	Identifier	env		1175689	0					
ANR	1175798	IfStatement	if ( NQTFR ( node ) -> upper == 0 )		1175689	6					
ANR	1175799	Condition	NQTFR ( node ) -> upper == 0	2932:8:64904:64926	1175689	0	True				
ANR	1175800	EqualityExpression	NQTFR ( node ) -> upper == 0		1175689	0		==			
ANR	1175801	PtrMemberAccess	NQTFR ( node ) -> upper		1175689	0					
ANR	1175802	CallExpression	NQTFR ( node )		1175689	0					
ANR	1175803	Callee	NQTFR		1175689	0					
ANR	1175804	Identifier	NQTFR		1175689	0					
ANR	1175805	ArgumentList	node		1175689	1					
ANR	1175806	Argument	node		1175689	0					
ANR	1175807	Identifier	node		1175689	0					
ANR	1175808	Identifier	upper		1175689	1					
ANR	1175809	PrimaryExpression	0		1175689	1					
ANR	1175810	CompoundStatement		23:33:478:478	1175689	1					
ANR	1175811	IfStatement	if ( r == FOUND_CALLED_NODE )		1175689	0					
ANR	1175812	Condition	r == FOUND_CALLED_NODE	2933:10:64941:64962	1175689	0	True				
ANR	1175813	EqualityExpression	r == FOUND_CALLED_NODE		1175689	0		==			
ANR	1175814	Identifier	r		1175689	0					
ANR	1175815	Identifier	FOUND_CALLED_NODE		1175689	1					
ANR	1175816	ExpressionStatement	NQTFR ( node ) -> is_refered = 1	2934:1:64966:64993	1175689	1	True				
ANR	1175817	AssignmentExpression	NQTFR ( node ) -> is_refered = 1		1175689	0		=			
ANR	1175818	PtrMemberAccess	NQTFR ( node ) -> is_refered		1175689	0					
ANR	1175819	CallExpression	NQTFR ( node )		1175689	0					
ANR	1175820	Callee	NQTFR		1175689	0					
ANR	1175821	Identifier	NQTFR		1175689	0					
ANR	1175822	ArgumentList	node		1175689	1					
ANR	1175823	Argument	node		1175689	0					
ANR	1175824	Identifier	node		1175689	0					
ANR	1175825	Identifier	is_refered		1175689	1					
ANR	1175826	PrimaryExpression	1		1175689	1					
ANR	1175827	BreakStatement	break ;	2936:4:65005:65010	1175689	7	True				
ANR	1175828	Label	case NT_ANCHOR :	2938:2:65015:65029	1175689	8	True				
ANR	1175829	Identifier	NT_ANCHOR		1175689	0					
ANR	1175830	CompoundStatement		31:6:592:622	1175689	9					
ANR	1175831	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	2940:6:65043:65073	1175689	0	True				
ANR	1175832	IdentifierDecl	* an = NANCHOR ( node )		1175689	0					
ANR	1175833	IdentifierDeclType	AnchorNode *		1175689	0					
ANR	1175834	Identifier	an		1175689	1					
ANR	1175835	AssignmentExpression	* an = NANCHOR ( node )		1175689	2		=			
ANR	1175836	Identifier	an		1175689	0					
ANR	1175837	CallExpression	NANCHOR ( node )		1175689	1					
ANR	1175838	Callee	NANCHOR		1175689	0					
ANR	1175839	Identifier	NANCHOR		1175689	0					
ANR	1175840	ArgumentList	node		1175689	1					
ANR	1175841	Argument	node		1175689	0					
ANR	1175842	Identifier	node		1175689	0					
ANR	1175843	SwitchStatement	switch ( an -> type )		1175689	1					
ANR	1175844	Condition	an -> type	2941:14:65089:65096	1175689	0	True				
ANR	1175845	PtrMemberAccess	an -> type		1175689	0					
ANR	1175846	Identifier	an		1175689	0					
ANR	1175847	Identifier	type		1175689	1					
ANR	1175848	CompoundStatement		32:24:648:648	1175689	1					
ANR	1175849	Label	case ANCHOR_PREC_READ :	2942:6:65107:65128	1175689	0	True				
ANR	1175850	Identifier	ANCHOR_PREC_READ		1175689	0					
ANR	1175851	Label	case ANCHOR_PREC_READ_NOT :	2943:6:65136:65161	1175689	1	True				
ANR	1175852	Identifier	ANCHOR_PREC_READ_NOT		1175689	0					
ANR	1175853	Label	case ANCHOR_LOOK_BEHIND :	2944:6:65169:65192	1175689	2	True				
ANR	1175854	Identifier	ANCHOR_LOOK_BEHIND		1175689	0					
ANR	1175855	Label	case ANCHOR_LOOK_BEHIND_NOT :	2945:6:65200:65227	1175689	3	True				
ANR	1175856	Identifier	ANCHOR_LOOK_BEHIND_NOT		1175689	0					
ANR	1175857	ExpressionStatement	"r = subexp_recursive_check_trav ( an -> target , env )"	2946:1:65230:65278	1175689	4	True				
ANR	1175858	AssignmentExpression	"r = subexp_recursive_check_trav ( an -> target , env )"		1175689	0		=			
ANR	1175859	Identifier	r		1175689	0					
ANR	1175860	CallExpression	"subexp_recursive_check_trav ( an -> target , env )"		1175689	1					
ANR	1175861	Callee	subexp_recursive_check_trav		1175689	0					
ANR	1175862	Identifier	subexp_recursive_check_trav		1175689	0					
ANR	1175863	ArgumentList	an -> target		1175689	1					
ANR	1175864	Argument	an -> target		1175689	0					
ANR	1175865	PtrMemberAccess	an -> target		1175689	0					
ANR	1175866	Identifier	an		1175689	0					
ANR	1175867	Identifier	target		1175689	1					
ANR	1175868	Argument	env		1175689	1					
ANR	1175869	Identifier	env		1175689	0					
ANR	1175870	BreakStatement	break ;	2947:1:65281:65286	1175689	5	True				
ANR	1175871	BreakStatement	break ;	2950:4:65306:65311	1175689	10	True				
ANR	1175872	Label	case NT_ENCLOSE :	2952:2:65316:65331	1175689	11	True				
ANR	1175873	Identifier	NT_ENCLOSE		1175689	0					
ANR	1175874	CompoundStatement		45:6:894:926	1175689	12					
ANR	1175875	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	2954:6:65345:65377	1175689	0	True				
ANR	1175876	IdentifierDecl	* en = NENCLOSE ( node )		1175689	0					
ANR	1175877	IdentifierDeclType	EncloseNode *		1175689	0					
ANR	1175878	Identifier	en		1175689	1					
ANR	1175879	AssignmentExpression	* en = NENCLOSE ( node )		1175689	2		=			
ANR	1175880	Identifier	en		1175689	0					
ANR	1175881	CallExpression	NENCLOSE ( node )		1175689	1					
ANR	1175882	Callee	NENCLOSE		1175689	0					
ANR	1175883	Identifier	NENCLOSE		1175689	0					
ANR	1175884	ArgumentList	node		1175689	1					
ANR	1175885	Argument	node		1175689	0					
ANR	1175886	Identifier	node		1175689	0					
ANR	1175887	IfStatement	if ( ! IS_ENCLOSE_RECURSION ( en ) )		1175689	1					
ANR	1175888	Condition	! IS_ENCLOSE_RECURSION ( en )	2956:10:65390:65415	1175689	0	True				
ANR	1175889	UnaryOperationExpression	! IS_ENCLOSE_RECURSION ( en )		1175689	0					
ANR	1175890	UnaryOperator	!		1175689	0					
ANR	1175891	CallExpression	IS_ENCLOSE_RECURSION ( en )		1175689	1					
ANR	1175892	Callee	IS_ENCLOSE_RECURSION		1175689	0					
ANR	1175893	Identifier	IS_ENCLOSE_RECURSION		1175689	0					
ANR	1175894	ArgumentList	en		1175689	1					
ANR	1175895	Argument	en		1175689	0					
ANR	1175896	Identifier	en		1175689	0					
ANR	1175897	CompoundStatement		47:38:967:967	1175689	1					
ANR	1175898	IfStatement	if ( IS_ENCLOSE_CALLED ( en ) )		1175689	0					
ANR	1175899	Condition	IS_ENCLOSE_CALLED ( en )	2957:5:65425:65445	1175689	0	True				
ANR	1175900	CallExpression	IS_ENCLOSE_CALLED ( en )		1175689	0					
ANR	1175901	Callee	IS_ENCLOSE_CALLED		1175689	0					
ANR	1175902	Identifier	IS_ENCLOSE_CALLED		1175689	0					
ANR	1175903	ArgumentList	en		1175689	1					
ANR	1175904	Argument	en		1175689	0					
ANR	1175905	Identifier	en		1175689	0					
ANR	1175906	CompoundStatement		48:28:997:997	1175689	1					
ANR	1175907	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_MARK1 )"	2958:3:65453:65488	1175689	0	True				
ANR	1175908	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_MARK1 )"		1175689	0					
ANR	1175909	Callee	SET_ENCLOSE_STATUS		1175689	0					
ANR	1175910	Identifier	SET_ENCLOSE_STATUS		1175689	0					
ANR	1175911	ArgumentList	node		1175689	1					
ANR	1175912	Argument	node		1175689	0					
ANR	1175913	Identifier	node		1175689	0					
ANR	1175914	Argument	NST_MARK1		1175689	1					
ANR	1175915	Identifier	NST_MARK1		1175689	0					
ANR	1175916	ExpressionStatement	r = subexp_recursive_check ( en -> target )	2959:3:65493:65531	1175689	1	True				
ANR	1175917	AssignmentExpression	r = subexp_recursive_check ( en -> target )		1175689	0		=			
ANR	1175918	Identifier	r		1175689	0					
ANR	1175919	CallExpression	subexp_recursive_check ( en -> target )		1175689	1					
ANR	1175920	Callee	subexp_recursive_check		1175689	0					
ANR	1175921	Identifier	subexp_recursive_check		1175689	0					
ANR	1175922	ArgumentList	en -> target		1175689	1					
ANR	1175923	Argument	en -> target		1175689	0					
ANR	1175924	PtrMemberAccess	en -> target		1175689	0					
ANR	1175925	Identifier	en		1175689	0					
ANR	1175926	Identifier	target		1175689	1					
ANR	1175927	IfStatement	if ( r != 0 )		1175689	2					
ANR	1175928	Condition	r != 0	2960:7:65540:65545	1175689	0	True				
ANR	1175929	EqualityExpression	r != 0		1175689	0		!=			
ANR	1175930	Identifier	r		1175689	0					
ANR	1175931	PrimaryExpression	0		1175689	1					
ANR	1175932	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_RECURSION )"	2960:15:65548:65587	1175689	1	True				
ANR	1175933	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_RECURSION )"		1175689	0					
ANR	1175934	Callee	SET_ENCLOSE_STATUS		1175689	0					
ANR	1175935	Identifier	SET_ENCLOSE_STATUS		1175689	0					
ANR	1175936	ArgumentList	node		1175689	1					
ANR	1175937	Argument	node		1175689	0					
ANR	1175938	Identifier	node		1175689	0					
ANR	1175939	Argument	NST_RECURSION		1175689	1					
ANR	1175940	Identifier	NST_RECURSION		1175689	0					
ANR	1175941	ExpressionStatement	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK1 )"	2961:3:65592:65629	1175689	3	True				
ANR	1175942	CallExpression	"CLEAR_ENCLOSE_STATUS ( node , NST_MARK1 )"		1175689	0					
ANR	1175943	Callee	CLEAR_ENCLOSE_STATUS		1175689	0					
ANR	1175944	Identifier	CLEAR_ENCLOSE_STATUS		1175689	0					
ANR	1175945	ArgumentList	node		1175689	1					
ANR	1175946	Argument	node		1175689	0					
ANR	1175947	Identifier	node		1175689	0					
ANR	1175948	Argument	NST_MARK1		1175689	1					
ANR	1175949	Identifier	NST_MARK1		1175689	0					
ANR	1175950	ExpressionStatement	"r = subexp_recursive_check_trav ( en -> target , env )"	2964:6:65648:65696	1175689	2	True				
ANR	1175951	AssignmentExpression	"r = subexp_recursive_check_trav ( en -> target , env )"		1175689	0		=			
ANR	1175952	Identifier	r		1175689	0					
ANR	1175953	CallExpression	"subexp_recursive_check_trav ( en -> target , env )"		1175689	1					
ANR	1175954	Callee	subexp_recursive_check_trav		1175689	0					
ANR	1175955	Identifier	subexp_recursive_check_trav		1175689	0					
ANR	1175956	ArgumentList	en -> target		1175689	1					
ANR	1175957	Argument	en -> target		1175689	0					
ANR	1175958	PtrMemberAccess	en -> target		1175689	0					
ANR	1175959	Identifier	en		1175689	0					
ANR	1175960	Identifier	target		1175689	1					
ANR	1175961	Argument	env		1175689	1					
ANR	1175962	Identifier	env		1175689	0					
ANR	1175963	IfStatement	if ( IS_ENCLOSE_CALLED ( en ) )		1175689	3					
ANR	1175964	Condition	IS_ENCLOSE_CALLED ( en )	2965:10:65708:65728	1175689	0	True				
ANR	1175965	CallExpression	IS_ENCLOSE_CALLED ( en )		1175689	0					
ANR	1175966	Callee	IS_ENCLOSE_CALLED		1175689	0					
ANR	1175967	Identifier	IS_ENCLOSE_CALLED		1175689	0					
ANR	1175968	ArgumentList	en		1175689	1					
ANR	1175969	Argument	en		1175689	0					
ANR	1175970	Identifier	en		1175689	0					
ANR	1175971	ExpressionStatement	r |= FOUND_CALLED_NODE	2966:1:65732:65754	1175689	1	True				
ANR	1175972	AssignmentExpression	r |= FOUND_CALLED_NODE		1175689	0		|=			
ANR	1175973	Identifier	r		1175689	0					
ANR	1175974	Identifier	FOUND_CALLED_NODE		1175689	1					
ANR	1175975	BreakStatement	break ;	2968:4:65766:65771	1175689	13	True				
ANR	1175976	Label	default :	2970:2:65776:65783	1175689	14	True				
ANR	1175977	Identifier	default		1175689	0					
ANR	1175978	BreakStatement	break ;	2971:4:65789:65794	1175689	15	True				
ANR	1175979	ReturnStatement	return r ;	2974:2:65803:65811	1175689	7	True				
ANR	1175980	Identifier	r		1175689	0					
ANR	1175981	ReturnType	static int		1175689	1					
ANR	1175982	Identifier	subexp_recursive_check_trav		1175689	2					
ANR	1175983	ParameterList	"Node * node , ScanEnv * env"		1175689	3					
ANR	1175984	Parameter	Node * node	2909:28:64424:64433	1175689	0	True				
ANR	1175985	ParameterType	Node *		1175689	0					
ANR	1175986	Identifier	node		1175689	1					
ANR	1175987	Parameter	ScanEnv * env	2909:40:64436:64447	1175689	1	True				
ANR	1175988	ParameterType	ScanEnv *		1175689	0					
ANR	1175989	Identifier	env		1175689	1					
ANR	1175990	CFGEntryNode	ENTRY		1175689		True				
ANR	1175991	CFGExitNode	EXIT		1175689		True				
ANR	1175992	Symbol	NQTFR ( node ) -> target		1175689						
ANR	1175993	Symbol	IS_NOT_NULL		1175689						
ANR	1175994	Symbol	NCAR		1175689						
ANR	1175995	Symbol	an -> type		1175689						
ANR	1175996	Symbol	type		1175689						
ANR	1175997	Symbol	NQTFR		1175689						
ANR	1175998	Symbol	subexp_recursive_check		1175689						
ANR	1175999	Symbol	* en		1175689						
ANR	1176000	Symbol	* NQTFR		1175689						
ANR	1176001	Symbol	NENCLOSE		1175689						
ANR	1176002	Symbol	NST_RECURSION		1175689						
ANR	1176003	Symbol	FOUND_CALLED_NODE		1175689						
ANR	1176004	Symbol	ret		1175689						
ANR	1176005	Symbol	NQTFR ( node ) -> upper		1175689						
ANR	1176006	Symbol	NCDR		1175689						
ANR	1176007	Symbol	IS_ENCLOSE_CALLED		1175689						
ANR	1176008	Symbol	en		1175689						
ANR	1176009	Symbol	NQTFR ( node ) -> is_refered		1175689						
ANR	1176010	Symbol	NST_MARK1		1175689						
ANR	1176011	Symbol	env		1175689						
ANR	1176012	Symbol	an		1175689						
ANR	1176013	Symbol	* an		1175689						
ANR	1176014	Symbol	node		1175689						
ANR	1176015	Symbol	r		1175689						
ANR	1176016	Symbol	an -> target		1175689						
ANR	1176017	Symbol	en -> target		1175689						
ANR	1176018	Symbol	NANCHOR		1175689						
ANR	1176019	Symbol	NTYPE		1175689						
ANR	1176020	Symbol	IS_ENCLOSE_RECURSION		1175689						
ANR	1176021	Symbol	subexp_recursive_check_trav		1175689						
ANR	1176022	Function	setup_subexp_call	2977:0:65816:68295							
ANR	1176023	FunctionDef	"setup_subexp_call (Node * node , ScanEnv * env)"		1176022	0					
ANR	1176024	CompoundStatement		2979:0:65871:68295	1176022	0					
ANR	1176025	IdentifierDeclStatement	int type ;	2980:2:65875:65883	1176022	0	True				
ANR	1176026	IdentifierDecl	type		1176022	0					
ANR	1176027	IdentifierDeclType	int		1176022	0					
ANR	1176028	Identifier	type		1176022	1					
ANR	1176029	IdentifierDeclStatement	int r = 0 ;	2981:2:65887:65896	1176022	1	True				
ANR	1176030	IdentifierDecl	r = 0		1176022	0					
ANR	1176031	IdentifierDeclType	int		1176022	0					
ANR	1176032	Identifier	r		1176022	1					
ANR	1176033	AssignmentExpression	r = 0		1176022	2		=			
ANR	1176034	Identifier	r		1176022	0					
ANR	1176035	PrimaryExpression	0		1176022	1					
ANR	1176036	ExpressionStatement	type = NTYPE ( node )	2983:2:65901:65919	1176022	2	True				
ANR	1176037	AssignmentExpression	type = NTYPE ( node )		1176022	0		=			
ANR	1176038	Identifier	type		1176022	0					
ANR	1176039	CallExpression	NTYPE ( node )		1176022	1					
ANR	1176040	Callee	NTYPE		1176022	0					
ANR	1176041	Identifier	NTYPE		1176022	0					
ANR	1176042	ArgumentList	node		1176022	1					
ANR	1176043	Argument	node		1176022	0					
ANR	1176044	Identifier	node		1176022	0					
ANR	1176045	SwitchStatement	switch ( type )		1176022	3					
ANR	1176046	Condition	type	2984:10:65931:65934	1176022	0	True				
ANR	1176047	Identifier	type		1176022	0					
ANR	1176048	CompoundStatement		6:16:65:65	1176022	1					
ANR	1176049	Label	case NT_LIST :	2985:2:65941:65953	1176022	0	True				
ANR	1176050	Identifier	NT_LIST		1176022	0					
ANR	1176051	DoStatement	do		1176022	1					
ANR	1176052	CompoundStatement		8:7:90:90	1176022	0					
ANR	1176053	ExpressionStatement	"r = setup_subexp_call ( NCAR ( node ) , env )"	2987:6:65970:66008	1176022	0	True				
ANR	1176054	AssignmentExpression	"r = setup_subexp_call ( NCAR ( node ) , env )"		1176022	0		=			
ANR	1176055	Identifier	r		1176022	0					
ANR	1176056	CallExpression	"setup_subexp_call ( NCAR ( node ) , env )"		1176022	1					
ANR	1176057	Callee	setup_subexp_call		1176022	0					
ANR	1176058	Identifier	setup_subexp_call		1176022	0					
ANR	1176059	ArgumentList	NCAR ( node )		1176022	1					
ANR	1176060	Argument	NCAR ( node )		1176022	0					
ANR	1176061	CallExpression	NCAR ( node )		1176022	0					
ANR	1176062	Callee	NCAR		1176022	0					
ANR	1176063	Identifier	NCAR		1176022	0					
ANR	1176064	ArgumentList	node		1176022	1					
ANR	1176065	Argument	node		1176022	0					
ANR	1176066	Identifier	node		1176022	0					
ANR	1176067	Argument	env		1176022	1					
ANR	1176068	Identifier	env		1176022	0					
ANR	1176069	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2988:13:66023:66062	1176022	1	True				
ANR	1176070	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1176022	0		&&			
ANR	1176071	EqualityExpression	r == 0		1176022	0		==			
ANR	1176072	Identifier	r		1176022	0					
ANR	1176073	PrimaryExpression	0		1176022	1					
ANR	1176074	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1176022	1					
ANR	1176075	Callee	IS_NOT_NULL		1176022	0					
ANR	1176076	Identifier	IS_NOT_NULL		1176022	0					
ANR	1176077	ArgumentList	node = NCDR ( node )		1176022	1					
ANR	1176078	Argument	node = NCDR ( node )		1176022	0					
ANR	1176079	AssignmentExpression	node = NCDR ( node )		1176022	0		=			
ANR	1176080	Identifier	node		1176022	0					
ANR	1176081	CallExpression	NCDR ( node )		1176022	1					
ANR	1176082	Callee	NCDR		1176022	0					
ANR	1176083	Identifier	NCDR		1176022	0					
ANR	1176084	ArgumentList	node		1176022	1					
ANR	1176085	Argument	node		1176022	0					
ANR	1176086	Identifier	node		1176022	0					
ANR	1176087	BreakStatement	break ;	2989:4:66070:66075	1176022	2	True				
ANR	1176088	Label	case NT_ALT :	2991:2:66080:66091	1176022	3	True				
ANR	1176089	Identifier	NT_ALT		1176022	0					
ANR	1176090	DoStatement	do		1176022	4					
ANR	1176091	CompoundStatement		14:7:228:228	1176022	0					
ANR	1176092	ExpressionStatement	"r = setup_subexp_call ( NCAR ( node ) , env )"	2993:6:66108:66146	1176022	0	True				
ANR	1176093	AssignmentExpression	"r = setup_subexp_call ( NCAR ( node ) , env )"		1176022	0		=			
ANR	1176094	Identifier	r		1176022	0					
ANR	1176095	CallExpression	"setup_subexp_call ( NCAR ( node ) , env )"		1176022	1					
ANR	1176096	Callee	setup_subexp_call		1176022	0					
ANR	1176097	Identifier	setup_subexp_call		1176022	0					
ANR	1176098	ArgumentList	NCAR ( node )		1176022	1					
ANR	1176099	Argument	NCAR ( node )		1176022	0					
ANR	1176100	CallExpression	NCAR ( node )		1176022	0					
ANR	1176101	Callee	NCAR		1176022	0					
ANR	1176102	Identifier	NCAR		1176022	0					
ANR	1176103	ArgumentList	node		1176022	1					
ANR	1176104	Argument	node		1176022	0					
ANR	1176105	Identifier	node		1176022	0					
ANR	1176106	Argument	env		1176022	1					
ANR	1176107	Identifier	env		1176022	0					
ANR	1176108	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	2994:13:66161:66200	1176022	1	True				
ANR	1176109	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1176022	0		&&			
ANR	1176110	EqualityExpression	r == 0		1176022	0		==			
ANR	1176111	Identifier	r		1176022	0					
ANR	1176112	PrimaryExpression	0		1176022	1					
ANR	1176113	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1176022	1					
ANR	1176114	Callee	IS_NOT_NULL		1176022	0					
ANR	1176115	Identifier	IS_NOT_NULL		1176022	0					
ANR	1176116	ArgumentList	node = NCDR ( node )		1176022	1					
ANR	1176117	Argument	node = NCDR ( node )		1176022	0					
ANR	1176118	AssignmentExpression	node = NCDR ( node )		1176022	0		=			
ANR	1176119	Identifier	node		1176022	0					
ANR	1176120	CallExpression	NCDR ( node )		1176022	1					
ANR	1176121	Callee	NCDR		1176022	0					
ANR	1176122	Identifier	NCDR		1176022	0					
ANR	1176123	ArgumentList	node		1176022	1					
ANR	1176124	Argument	node		1176022	0					
ANR	1176125	Identifier	node		1176022	0					
ANR	1176126	BreakStatement	break ;	2995:4:66208:66213	1176022	5	True				
ANR	1176127	Label	case NT_QTFR :	2997:2:66218:66230	1176022	6	True				
ANR	1176128	Identifier	NT_QTFR		1176022	0					
ANR	1176129	ExpressionStatement	"r = setup_subexp_call ( NQTFR ( node ) -> target , env )"	2998:4:66236:66283	1176022	7	True				
ANR	1176130	AssignmentExpression	"r = setup_subexp_call ( NQTFR ( node ) -> target , env )"		1176022	0		=			
ANR	1176131	Identifier	r		1176022	0					
ANR	1176132	CallExpression	"setup_subexp_call ( NQTFR ( node ) -> target , env )"		1176022	1					
ANR	1176133	Callee	setup_subexp_call		1176022	0					
ANR	1176134	Identifier	setup_subexp_call		1176022	0					
ANR	1176135	ArgumentList	NQTFR ( node ) -> target		1176022	1					
ANR	1176136	Argument	NQTFR ( node ) -> target		1176022	0					
ANR	1176137	PtrMemberAccess	NQTFR ( node ) -> target		1176022	0					
ANR	1176138	CallExpression	NQTFR ( node )		1176022	0					
ANR	1176139	Callee	NQTFR		1176022	0					
ANR	1176140	Identifier	NQTFR		1176022	0					
ANR	1176141	ArgumentList	node		1176022	1					
ANR	1176142	Argument	node		1176022	0					
ANR	1176143	Identifier	node		1176022	0					
ANR	1176144	Identifier	target		1176022	1					
ANR	1176145	Argument	env		1176022	1					
ANR	1176146	Identifier	env		1176022	0					
ANR	1176147	BreakStatement	break ;	2999:4:66289:66294	1176022	8	True				
ANR	1176148	Label	case NT_ENCLOSE :	3000:2:66298:66313	1176022	9	True				
ANR	1176149	Identifier	NT_ENCLOSE		1176022	0					
ANR	1176150	ExpressionStatement	"r = setup_subexp_call ( NENCLOSE ( node ) -> target , env )"	3001:4:66319:66369	1176022	10	True				
ANR	1176151	AssignmentExpression	"r = setup_subexp_call ( NENCLOSE ( node ) -> target , env )"		1176022	0		=			
ANR	1176152	Identifier	r		1176022	0					
ANR	1176153	CallExpression	"setup_subexp_call ( NENCLOSE ( node ) -> target , env )"		1176022	1					
ANR	1176154	Callee	setup_subexp_call		1176022	0					
ANR	1176155	Identifier	setup_subexp_call		1176022	0					
ANR	1176156	ArgumentList	NENCLOSE ( node ) -> target		1176022	1					
ANR	1176157	Argument	NENCLOSE ( node ) -> target		1176022	0					
ANR	1176158	PtrMemberAccess	NENCLOSE ( node ) -> target		1176022	0					
ANR	1176159	CallExpression	NENCLOSE ( node )		1176022	0					
ANR	1176160	Callee	NENCLOSE		1176022	0					
ANR	1176161	Identifier	NENCLOSE		1176022	0					
ANR	1176162	ArgumentList	node		1176022	1					
ANR	1176163	Argument	node		1176022	0					
ANR	1176164	Identifier	node		1176022	0					
ANR	1176165	Identifier	target		1176022	1					
ANR	1176166	Argument	env		1176022	1					
ANR	1176167	Identifier	env		1176022	0					
ANR	1176168	BreakStatement	break ;	3002:4:66375:66380	1176022	11	True				
ANR	1176169	Label	case NT_CALL :	3004:2:66385:66397	1176022	12	True				
ANR	1176170	Identifier	NT_CALL		1176022	0					
ANR	1176171	CompoundStatement		29:6:573:610	1176022	13					
ANR	1176172	IdentifierDeclStatement	CallNode * cn = NCALL ( node ) ;	3006:6:66411:66437	1176022	0	True				
ANR	1176173	IdentifierDecl	* cn = NCALL ( node )		1176022	0					
ANR	1176174	IdentifierDeclType	CallNode *		1176022	0					
ANR	1176175	Identifier	cn		1176022	1					
ANR	1176176	AssignmentExpression	* cn = NCALL ( node )		1176022	2		=			
ANR	1176177	Identifier	cn		1176022	0					
ANR	1176178	CallExpression	NCALL ( node )		1176022	1					
ANR	1176179	Callee	NCALL		1176022	0					
ANR	1176180	Identifier	NCALL		1176022	0					
ANR	1176181	ArgumentList	node		1176022	1					
ANR	1176182	Argument	node		1176022	0					
ANR	1176183	Identifier	node		1176022	0					
ANR	1176184	IdentifierDeclStatement	Node * * nodes = SCANENV_MEM_NODES ( env ) ;	3007:6:66445:66482	1176022	1	True				
ANR	1176185	IdentifierDecl	* * nodes = SCANENV_MEM_NODES ( env )		1176022	0					
ANR	1176186	IdentifierDeclType	Node * *		1176022	0					
ANR	1176187	Identifier	nodes		1176022	1					
ANR	1176188	AssignmentExpression	* * nodes = SCANENV_MEM_NODES ( env )		1176022	2		=			
ANR	1176189	Identifier	nodes		1176022	0					
ANR	1176190	CallExpression	SCANENV_MEM_NODES ( env )		1176022	1					
ANR	1176191	Callee	SCANENV_MEM_NODES		1176022	0					
ANR	1176192	Identifier	SCANENV_MEM_NODES		1176022	0					
ANR	1176193	ArgumentList	env		1176022	1					
ANR	1176194	Argument	env		1176022	0					
ANR	1176195	Identifier	env		1176022	0					
ANR	1176196	IfStatement	if ( cn -> group_num != 0 )		1176022	2					
ANR	1176197	Condition	cn -> group_num != 0	3009:10:66495:66512	1176022	0	True				
ANR	1176198	EqualityExpression	cn -> group_num != 0		1176022	0		!=			
ANR	1176199	PtrMemberAccess	cn -> group_num		1176022	0					
ANR	1176200	Identifier	cn		1176022	0					
ANR	1176201	Identifier	group_num		1176022	1					
ANR	1176202	PrimaryExpression	0		1176022	1					
ANR	1176203	CompoundStatement		32:1:646:670	1176022	1					
ANR	1176204	IdentifierDeclStatement	int gnum = cn -> group_num ;	3010:1:66518:66542	1176022	0	True				
ANR	1176205	IdentifierDecl	gnum = cn -> group_num		1176022	0					
ANR	1176206	IdentifierDeclType	int		1176022	0					
ANR	1176207	Identifier	gnum		1176022	1					
ANR	1176208	AssignmentExpression	gnum = cn -> group_num		1176022	2		=			
ANR	1176209	Identifier	gnum		1176022	0					
ANR	1176210	PtrMemberAccess	cn -> group_num		1176022	1					
ANR	1176211	Identifier	cn		1176022	0					
ANR	1176212	Identifier	group_num		1176022	1					
ANR	1176213	IfStatement	"if ( env -> num_named > 0 && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_CAPTURE_GROUP ) )"		1176022	1					
ANR	1176214	Condition	"env -> num_named > 0 && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_CAPTURE_GROUP )"	3013:5:66573:66726	1176022	0	True				
ANR	1176215	AndExpression	"env -> num_named > 0 && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_CAPTURE_GROUP )"		1176022	0		&&			
ANR	1176216	RelationalExpression	env -> num_named > 0		1176022	0		>			
ANR	1176217	PtrMemberAccess	env -> num_named		1176022	0					
ANR	1176218	Identifier	env		1176022	0					
ANR	1176219	Identifier	num_named		1176022	1					
ANR	1176220	PrimaryExpression	0		1176022	1					
ANR	1176221	AndExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_CAPTURE_GROUP )"		1176022	1		&&			
ANR	1176222	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP )"		1176022	0					
ANR	1176223	Callee	IS_SYNTAX_BV		1176022	0					
ANR	1176224	Identifier	IS_SYNTAX_BV		1176022	0					
ANR	1176225	ArgumentList	env -> syntax		1176022	1					
ANR	1176226	Argument	env -> syntax		1176022	0					
ANR	1176227	PtrMemberAccess	env -> syntax		1176022	0					
ANR	1176228	Identifier	env		1176022	0					
ANR	1176229	Identifier	syntax		1176022	1					
ANR	1176230	Argument	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		1176022	1					
ANR	1176231	Identifier	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		1176022	0					
ANR	1176232	UnaryOperationExpression	"! ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_CAPTURE_GROUP )"		1176022	1					
ANR	1176233	UnaryOperator	!		1176022	0					
ANR	1176234	CallExpression	"ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_CAPTURE_GROUP )"		1176022	1					
ANR	1176235	Callee	ONIG_IS_OPTION_ON		1176022	0					
ANR	1176236	Identifier	ONIG_IS_OPTION_ON		1176022	0					
ANR	1176237	ArgumentList	env -> option		1176022	1					
ANR	1176238	Argument	env -> option		1176022	0					
ANR	1176239	PtrMemberAccess	env -> option		1176022	0					
ANR	1176240	Identifier	env		1176022	0					
ANR	1176241	Identifier	option		1176022	1					
ANR	1176242	Argument	ONIG_OPTION_CAPTURE_GROUP		1176022	1					
ANR	1176243	Identifier	ONIG_OPTION_CAPTURE_GROUP		1176022	0					
ANR	1176244	CompoundStatement		37:65:857:857	1176022	1					
ANR	1176245	ReturnStatement	return ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED ;	3016:3:66734:66785	1176022	0	True				
ANR	1176246	Identifier	ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED		1176022	0					
ANR	1176247	IfStatement	if ( gnum > env -> num_mem )		1176022	2					
ANR	1176248	Condition	gnum > env -> num_mem	3019:5:66802:66820	1176022	0	True				
ANR	1176249	RelationalExpression	gnum > env -> num_mem		1176022	0		>			
ANR	1176250	Identifier	gnum		1176022	0					
ANR	1176251	PtrMemberAccess	env -> num_mem		1176022	1					
ANR	1176252	Identifier	env		1176022	0					
ANR	1176253	Identifier	num_mem		1176022	1					
ANR	1176254	CompoundStatement		41:26:951:951	1176022	1					
ANR	1176255	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_GROUP_REFERENCE , cn -> name , cn -> name_end )"	3020:3:66828:66925	1176022	0	True				
ANR	1176256	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_GROUP_REFERENCE , cn -> name , cn -> name_end )"		1176022	0					
ANR	1176257	Callee	onig_scan_env_set_error_string		1176022	0					
ANR	1176258	Identifier	onig_scan_env_set_error_string		1176022	0					
ANR	1176259	ArgumentList	env		1176022	1					
ANR	1176260	Argument	env		1176022	0					
ANR	1176261	Identifier	env		1176022	0					
ANR	1176262	Argument	ONIGERR_UNDEFINED_GROUP_REFERENCE		1176022	1					
ANR	1176263	Identifier	ONIGERR_UNDEFINED_GROUP_REFERENCE		1176022	0					
ANR	1176264	Argument	cn -> name		1176022	2					
ANR	1176265	PtrMemberAccess	cn -> name		1176022	0					
ANR	1176266	Identifier	cn		1176022	0					
ANR	1176267	Identifier	name		1176022	1					
ANR	1176268	Argument	cn -> name_end		1176022	3					
ANR	1176269	PtrMemberAccess	cn -> name_end		1176022	0					
ANR	1176270	Identifier	cn		1176022	0					
ANR	1176271	Identifier	name_end		1176022	1					
ANR	1176272	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_REFERENCE ;	3022:3:66930:66970	1176022	1	True				
ANR	1176273	Identifier	ONIGERR_UNDEFINED_GROUP_REFERENCE		1176022	0					
ANR	1176274	Label	set_call_attr :	3026:6:67005:67018	1176022	3	True				
ANR	1176275	Identifier	set_call_attr		1176022	0					
ANR	1176276	ExpressionStatement	cn -> target = nodes [ cn -> group_num ]	3028:1:67028:67061	1176022	4	True				
ANR	1176277	AssignmentExpression	cn -> target = nodes [ cn -> group_num ]		1176022	0		=			
ANR	1176278	PtrMemberAccess	cn -> target		1176022	0					
ANR	1176279	Identifier	cn		1176022	0					
ANR	1176280	Identifier	target		1176022	1					
ANR	1176281	ArrayIndexing	nodes [ cn -> group_num ]		1176022	1					
ANR	1176282	Identifier	nodes		1176022	0					
ANR	1176283	PtrMemberAccess	cn -> group_num		1176022	1					
ANR	1176284	Identifier	cn		1176022	0					
ANR	1176285	Identifier	group_num		1176022	1					
ANR	1176286	IfStatement	if ( IS_NULL ( cn -> target ) )		1176022	5					
ANR	1176287	Condition	IS_NULL ( cn -> target )	3029:5:67068:67086	1176022	0	True				
ANR	1176288	CallExpression	IS_NULL ( cn -> target )		1176022	0					
ANR	1176289	Callee	IS_NULL		1176022	0					
ANR	1176290	Identifier	IS_NULL		1176022	0					
ANR	1176291	ArgumentList	cn -> target		1176022	1					
ANR	1176292	Argument	cn -> target		1176022	0					
ANR	1176293	PtrMemberAccess	cn -> target		1176022	0					
ANR	1176294	Identifier	cn		1176022	0					
ANR	1176295	Identifier	target		1176022	1					
ANR	1176296	CompoundStatement		51:26:1217:1217	1176022	1					
ANR	1176297	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , cn -> name , cn -> name_end )"	3030:3:67094:67190	1176022	0	True				
ANR	1176298	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , cn -> name , cn -> name_end )"		1176022	0					
ANR	1176299	Callee	onig_scan_env_set_error_string		1176022	0					
ANR	1176300	Identifier	onig_scan_env_set_error_string		1176022	0					
ANR	1176301	ArgumentList	env		1176022	1					
ANR	1176302	Argument	env		1176022	0					
ANR	1176303	Identifier	env		1176022	0					
ANR	1176304	Argument	ONIGERR_UNDEFINED_NAME_REFERENCE		1176022	1					
ANR	1176305	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		1176022	0					
ANR	1176306	Argument	cn -> name		1176022	2					
ANR	1176307	PtrMemberAccess	cn -> name		1176022	0					
ANR	1176308	Identifier	cn		1176022	0					
ANR	1176309	Identifier	name		1176022	1					
ANR	1176310	Argument	cn -> name_end		1176022	3					
ANR	1176311	PtrMemberAccess	cn -> name_end		1176022	0					
ANR	1176312	Identifier	cn		1176022	0					
ANR	1176313	Identifier	name_end		1176022	1					
ANR	1176314	ReturnStatement	return ONIGERR_UNDEFINED_NAME_REFERENCE ;	3032:3:67195:67234	1176022	1	True				
ANR	1176315	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		1176022	0					
ANR	1176316	ExpressionStatement	"SET_ENCLOSE_STATUS ( cn -> target , NST_CALLED )"	3034:1:67240:67282	1176022	6	True				
ANR	1176317	CallExpression	"SET_ENCLOSE_STATUS ( cn -> target , NST_CALLED )"		1176022	0					
ANR	1176318	Callee	SET_ENCLOSE_STATUS		1176022	0					
ANR	1176319	Identifier	SET_ENCLOSE_STATUS		1176022	0					
ANR	1176320	ArgumentList	cn -> target		1176022	1					
ANR	1176321	Argument	cn -> target		1176022	0					
ANR	1176322	PtrMemberAccess	cn -> target		1176022	0					
ANR	1176323	Identifier	cn		1176022	0					
ANR	1176324	Identifier	target		1176022	1					
ANR	1176325	Argument	NST_CALLED		1176022	1					
ANR	1176326	Identifier	NST_CALLED		1176022	0					
ANR	1176327	ExpressionStatement	"BIT_STATUS_ON_AT ( env -> bt_mem_start , cn -> group_num )"	3035:1:67285:67335	1176022	7	True				
ANR	1176328	CallExpression	"BIT_STATUS_ON_AT ( env -> bt_mem_start , cn -> group_num )"		1176022	0					
ANR	1176329	Callee	BIT_STATUS_ON_AT		1176022	0					
ANR	1176330	Identifier	BIT_STATUS_ON_AT		1176022	0					
ANR	1176331	ArgumentList	env -> bt_mem_start		1176022	1					
ANR	1176332	Argument	env -> bt_mem_start		1176022	0					
ANR	1176333	PtrMemberAccess	env -> bt_mem_start		1176022	0					
ANR	1176334	Identifier	env		1176022	0					
ANR	1176335	Identifier	bt_mem_start		1176022	1					
ANR	1176336	Argument	cn -> group_num		1176022	1					
ANR	1176337	PtrMemberAccess	cn -> group_num		1176022	0					
ANR	1176338	Identifier	cn		1176022	0					
ANR	1176339	Identifier	group_num		1176022	1					
ANR	1176340	ExpressionStatement	cn -> unset_addr_list = env -> unset_addr_list	3036:1:67338:67380	1176022	8	True				
ANR	1176341	AssignmentExpression	cn -> unset_addr_list = env -> unset_addr_list		1176022	0		=			
ANR	1176342	PtrMemberAccess	cn -> unset_addr_list		1176022	0					
ANR	1176343	Identifier	cn		1176022	0					
ANR	1176344	Identifier	unset_addr_list		1176022	1					
ANR	1176345	PtrMemberAccess	env -> unset_addr_list		1176022	1					
ANR	1176346	Identifier	env		1176022	0					
ANR	1176347	Identifier	unset_addr_list		1176022	1					
ANR	1176348	ElseStatement	else		1176022	0					
ANR	1176349	CompoundStatement		64:1:1568:1651	1176022	0					
ANR	1176350	IdentifierDeclStatement	int * refs ;	3040:1:67427:67436	1176022	0	True				
ANR	1176351	IdentifierDecl	* refs		1176022	0					
ANR	1176352	IdentifierDeclType	int *		1176022	0					
ANR	1176353	Identifier	refs		1176022	1					
ANR	1176354	IdentifierDeclStatement	"int n = onig_name_to_group_numbers ( env -> reg , cn -> name , cn -> name_end , & refs ) ;"	3042:1:67440:67523	1176022	1	True				
ANR	1176355	IdentifierDecl	"n = onig_name_to_group_numbers ( env -> reg , cn -> name , cn -> name_end , & refs )"		1176022	0					
ANR	1176356	IdentifierDeclType	int		1176022	0					
ANR	1176357	Identifier	n		1176022	1					
ANR	1176358	AssignmentExpression	"n = onig_name_to_group_numbers ( env -> reg , cn -> name , cn -> name_end , & refs )"		1176022	2		=			
ANR	1176359	Identifier	n		1176022	0					
ANR	1176360	CallExpression	"onig_name_to_group_numbers ( env -> reg , cn -> name , cn -> name_end , & refs )"		1176022	1					
ANR	1176361	Callee	onig_name_to_group_numbers		1176022	0					
ANR	1176362	Identifier	onig_name_to_group_numbers		1176022	0					
ANR	1176363	ArgumentList	env -> reg		1176022	1					
ANR	1176364	Argument	env -> reg		1176022	0					
ANR	1176365	PtrMemberAccess	env -> reg		1176022	0					
ANR	1176366	Identifier	env		1176022	0					
ANR	1176367	Identifier	reg		1176022	1					
ANR	1176368	Argument	cn -> name		1176022	1					
ANR	1176369	PtrMemberAccess	cn -> name		1176022	0					
ANR	1176370	Identifier	cn		1176022	0					
ANR	1176371	Identifier	name		1176022	1					
ANR	1176372	Argument	cn -> name_end		1176022	2					
ANR	1176373	PtrMemberAccess	cn -> name_end		1176022	0					
ANR	1176374	Identifier	cn		1176022	0					
ANR	1176375	Identifier	name_end		1176022	1					
ANR	1176376	Argument	& refs		1176022	3					
ANR	1176377	UnaryOperationExpression	& refs		1176022	0					
ANR	1176378	UnaryOperator	&		1176022	0					
ANR	1176379	Identifier	refs		1176022	1					
ANR	1176380	IfStatement	if ( n <= 0 )		1176022	2					
ANR	1176381	Condition	n <= 0	3044:5:67530:67535	1176022	0	True				
ANR	1176382	RelationalExpression	n <= 0		1176022	0		<=			
ANR	1176383	Identifier	n		1176022	0					
ANR	1176384	PrimaryExpression	0		1176022	1					
ANR	1176385	CompoundStatement		66:13:1666:1666	1176022	1					
ANR	1176386	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , cn -> name , cn -> name_end )"	3045:3:67543:67639	1176022	0	True				
ANR	1176387	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , cn -> name , cn -> name_end )"		1176022	0					
ANR	1176388	Callee	onig_scan_env_set_error_string		1176022	0					
ANR	1176389	Identifier	onig_scan_env_set_error_string		1176022	0					
ANR	1176390	ArgumentList	env		1176022	1					
ANR	1176391	Argument	env		1176022	0					
ANR	1176392	Identifier	env		1176022	0					
ANR	1176393	Argument	ONIGERR_UNDEFINED_NAME_REFERENCE		1176022	1					
ANR	1176394	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		1176022	0					
ANR	1176395	Argument	cn -> name		1176022	2					
ANR	1176396	PtrMemberAccess	cn -> name		1176022	0					
ANR	1176397	Identifier	cn		1176022	0					
ANR	1176398	Identifier	name		1176022	1					
ANR	1176399	Argument	cn -> name_end		1176022	3					
ANR	1176400	PtrMemberAccess	cn -> name_end		1176022	0					
ANR	1176401	Identifier	cn		1176022	0					
ANR	1176402	Identifier	name_end		1176022	1					
ANR	1176403	ReturnStatement	return ONIGERR_UNDEFINED_NAME_REFERENCE ;	3047:3:67644:67683	1176022	1	True				
ANR	1176404	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		1176022	0					
ANR	1176405	ElseStatement	else		1176022	0					
ANR	1176406	IfStatement	if ( n > 1 )		1176022	0					
ANR	1176407	Condition	n > 1	3049:10:67698:67702	1176022	0	True				
ANR	1176408	RelationalExpression	n > 1		1176022	0		>			
ANR	1176409	Identifier	n		1176022	0					
ANR	1176410	PrimaryExpression	1		1176022	1					
ANR	1176411	CompoundStatement		71:17:1833:1833	1176022	1					
ANR	1176412	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL , cn -> name , cn -> name_end )"	3050:3:67710:67814	1176022	0	True				
ANR	1176413	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL , cn -> name , cn -> name_end )"		1176022	0					
ANR	1176414	Callee	onig_scan_env_set_error_string		1176022	0					
ANR	1176415	Identifier	onig_scan_env_set_error_string		1176022	0					
ANR	1176416	ArgumentList	env		1176022	1					
ANR	1176417	Argument	env		1176022	0					
ANR	1176418	Identifier	env		1176022	0					
ANR	1176419	Argument	ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL		1176022	1					
ANR	1176420	Identifier	ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL		1176022	0					
ANR	1176421	Argument	cn -> name		1176022	2					
ANR	1176422	PtrMemberAccess	cn -> name		1176022	0					
ANR	1176423	Identifier	cn		1176022	0					
ANR	1176424	Identifier	name		1176022	1					
ANR	1176425	Argument	cn -> name_end		1176022	3					
ANR	1176426	PtrMemberAccess	cn -> name_end		1176022	0					
ANR	1176427	Identifier	cn		1176022	0					
ANR	1176428	Identifier	name_end		1176022	1					
ANR	1176429	ReturnStatement	return ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL ;	3052:3:67819:67864	1176022	1	True				
ANR	1176430	Identifier	ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL		1176022	0					
ANR	1176431	ElseStatement	else		1176022	0					
ANR	1176432	CompoundStatement		76:6:2003:2003	1176022	0					
ANR	1176433	ExpressionStatement	cn -> group_num = refs [ 0 ]	3055:3:67880:67903	1176022	0	True				
ANR	1176434	AssignmentExpression	cn -> group_num = refs [ 0 ]		1176022	0		=			
ANR	1176435	PtrMemberAccess	cn -> group_num		1176022	0					
ANR	1176436	Identifier	cn		1176022	0					
ANR	1176437	Identifier	group_num		1176022	1					
ANR	1176438	ArrayIndexing	refs [ 0 ]		1176022	1					
ANR	1176439	Identifier	refs		1176022	0					
ANR	1176440	PrimaryExpression	0		1176022	1					
ANR	1176441	GotoStatement	goto set_call_attr ;	3056:3:67908:67926	1176022	1	True				
ANR	1176442	Identifier	set_call_attr		1176022	0					
ANR	1176443	BreakStatement	break ;	3061:4:67956:67961	1176022	14	True				
ANR	1176444	Label	case NT_ANCHOR :	3063:2:67966:67980	1176022	15	True				
ANR	1176445	Identifier	NT_ANCHOR		1176022	0					
ANR	1176446	CompoundStatement		87:6:2122:2152	1176022	16					
ANR	1176447	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	3065:6:67994:68024	1176022	0	True				
ANR	1176448	IdentifierDecl	* an = NANCHOR ( node )		1176022	0					
ANR	1176449	IdentifierDeclType	AnchorNode *		1176022	0					
ANR	1176450	Identifier	an		1176022	1					
ANR	1176451	AssignmentExpression	* an = NANCHOR ( node )		1176022	2		=			
ANR	1176452	Identifier	an		1176022	0					
ANR	1176453	CallExpression	NANCHOR ( node )		1176022	1					
ANR	1176454	Callee	NANCHOR		1176022	0					
ANR	1176455	Identifier	NANCHOR		1176022	0					
ANR	1176456	ArgumentList	node		1176022	1					
ANR	1176457	Argument	node		1176022	0					
ANR	1176458	Identifier	node		1176022	0					
ANR	1176459	SwitchStatement	switch ( an -> type )		1176022	1					
ANR	1176460	Condition	an -> type	3067:14:68041:68048	1176022	0	True				
ANR	1176461	PtrMemberAccess	an -> type		1176022	0					
ANR	1176462	Identifier	an		1176022	0					
ANR	1176463	Identifier	type		1176022	1					
ANR	1176464	CompoundStatement		89:24:2179:2179	1176022	1					
ANR	1176465	Label	case ANCHOR_PREC_READ :	3068:6:68059:68080	1176022	0	True				
ANR	1176466	Identifier	ANCHOR_PREC_READ		1176022	0					
ANR	1176467	Label	case ANCHOR_PREC_READ_NOT :	3069:6:68088:68113	1176022	1	True				
ANR	1176468	Identifier	ANCHOR_PREC_READ_NOT		1176022	0					
ANR	1176469	Label	case ANCHOR_LOOK_BEHIND :	3070:6:68121:68144	1176022	2	True				
ANR	1176470	Identifier	ANCHOR_LOOK_BEHIND		1176022	0					
ANR	1176471	Label	case ANCHOR_LOOK_BEHIND_NOT :	3071:6:68152:68179	1176022	3	True				
ANR	1176472	Identifier	ANCHOR_LOOK_BEHIND_NOT		1176022	0					
ANR	1176473	ExpressionStatement	"r = setup_subexp_call ( an -> target , env )"	3072:1:68182:68220	1176022	4	True				
ANR	1176474	AssignmentExpression	"r = setup_subexp_call ( an -> target , env )"		1176022	0		=			
ANR	1176475	Identifier	r		1176022	0					
ANR	1176476	CallExpression	"setup_subexp_call ( an -> target , env )"		1176022	1					
ANR	1176477	Callee	setup_subexp_call		1176022	0					
ANR	1176478	Identifier	setup_subexp_call		1176022	0					
ANR	1176479	ArgumentList	an -> target		1176022	1					
ANR	1176480	Argument	an -> target		1176022	0					
ANR	1176481	PtrMemberAccess	an -> target		1176022	0					
ANR	1176482	Identifier	an		1176022	0					
ANR	1176483	Identifier	target		1176022	1					
ANR	1176484	Argument	env		1176022	1					
ANR	1176485	Identifier	env		1176022	0					
ANR	1176486	BreakStatement	break ;	3073:1:68223:68228	1176022	5	True				
ANR	1176487	BreakStatement	break ;	3076:4:68248:68253	1176022	17	True				
ANR	1176488	Label	default :	3078:2:68258:68265	1176022	18	True				
ANR	1176489	Identifier	default		1176022	0					
ANR	1176490	BreakStatement	break ;	3079:4:68271:68276	1176022	19	True				
ANR	1176491	ReturnStatement	return r ;	3082:2:68285:68293	1176022	4	True				
ANR	1176492	Identifier	r		1176022	0					
ANR	1176493	ReturnType	static int		1176022	1					
ANR	1176494	Identifier	setup_subexp_call		1176022	2					
ANR	1176495	ParameterList	"Node * node , ScanEnv * env"		1176022	3					
ANR	1176496	Parameter	Node * node	2978:18:65845:65854	1176022	0	True				
ANR	1176497	ParameterType	Node *		1176022	0					
ANR	1176498	Identifier	node		1176022	1					
ANR	1176499	Parameter	ScanEnv * env	2978:30:65857:65868	1176022	1	True				
ANR	1176500	ParameterType	ScanEnv *		1176022	0					
ANR	1176501	Identifier	env		1176022	1					
ANR	1176502	CFGEntryNode	ENTRY		1176022		True				
ANR	1176503	CFGExitNode	EXIT		1176022		True				
ANR	1176504	Symbol	NQTFR ( node ) -> target		1176022						
ANR	1176505	Symbol	NCAR		1176022						
ANR	1176506	Symbol	env -> bt_mem_start		1176022						
ANR	1176507	Symbol	env -> num_named		1176022						
ANR	1176508	Symbol	cn -> name_end		1176022						
ANR	1176509	Symbol	type		1176022						
ANR	1176510	Symbol	NQTFR		1176022						
ANR	1176511	Symbol	gnum		1176022						
ANR	1176512	Symbol	env -> reg		1176022						
ANR	1176513	Symbol	env -> option		1176022						
ANR	1176514	Symbol	setup_subexp_call		1176022						
ANR	1176515	Symbol	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		1176022						
ANR	1176516	Symbol	ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED		1176022						
ANR	1176517	Symbol	ONIGERR_UNDEFINED_NAME_REFERENCE		1176022						
ANR	1176518	Symbol	cn -> target		1176022						
ANR	1176519	Symbol	IS_SYNTAX_BV		1176022						
ANR	1176520	Symbol	* nodes		1176022						
ANR	1176521	Symbol	SCANENV_MEM_NODES		1176022						
ANR	1176522	Symbol	NCDR		1176022						
ANR	1176523	Symbol	* env		1176022						
ANR	1176524	Symbol	& refs		1176022						
ANR	1176525	Symbol	env -> unset_addr_list		1176022						
ANR	1176526	Symbol	an		1176022						
ANR	1176527	Symbol	NENCLOSE ( node ) -> target		1176022						
ANR	1176528	Symbol	env -> syntax		1176022						
ANR	1176529	Symbol	node		1176022						
ANR	1176530	Symbol	* cn		1176022						
ANR	1176531	Symbol	an -> target		1176022						
ANR	1176532	Symbol	* cn -> group_num		1176022						
ANR	1176533	Symbol	IS_NOT_NULL		1176022						
ANR	1176534	Symbol	onig_name_to_group_numbers		1176022						
ANR	1176535	Symbol	* NENCLOSE		1176022						
ANR	1176536	Symbol	NCALL		1176022						
ANR	1176537	Symbol	an -> type		1176022						
ANR	1176538	Symbol	cn -> name		1176022						
ANR	1176539	Symbol	cn -> unset_addr_list		1176022						
ANR	1176540	Symbol	IS_NULL		1176022						
ANR	1176541	Symbol	* NQTFR		1176022						
ANR	1176542	Symbol	* * cn		1176022						
ANR	1176543	Symbol	* refs		1176022						
ANR	1176544	Symbol	NENCLOSE		1176022						
ANR	1176545	Symbol	cn -> group_num		1176022						
ANR	1176546	Symbol	ONIG_IS_OPTION_ON		1176022						
ANR	1176547	Symbol	NST_CALLED		1176022						
ANR	1176548	Symbol	env -> num_mem		1176022						
ANR	1176549	Symbol	cn		1176022						
ANR	1176550	Symbol	env		1176022						
ANR	1176551	Symbol	ONIG_OPTION_CAPTURE_GROUP		1176022						
ANR	1176552	Symbol	n		1176022						
ANR	1176553	Symbol	* an		1176022						
ANR	1176554	Symbol	r		1176022						
ANR	1176555	Symbol	nodes		1176022						
ANR	1176556	Symbol	ONIGERR_UNDEFINED_GROUP_REFERENCE		1176022						
ANR	1176557	Symbol	refs		1176022						
ANR	1176558	Symbol	NANCHOR		1176022						
ANR	1176559	Symbol	NTYPE		1176022						
ANR	1176560	Symbol	ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL		1176022						
ANR	1176561	Function	divide_look_behind_alternatives	3090:0:68421:69092							
ANR	1176562	FunctionDef	divide_look_behind_alternatives (Node * node)		1176561	0					
ANR	1176563	CompoundStatement		3092:0:68476:69092	1176561	0					
ANR	1176564	IdentifierDeclStatement	"Node * head , * np , * insert_node ;"	3093:2:68480:68509	1176561	0	True				
ANR	1176565	IdentifierDecl	* head		1176561	0					
ANR	1176566	IdentifierDeclType	Node *		1176561	0					
ANR	1176567	Identifier	head		1176561	1					
ANR	1176568	IdentifierDecl	* np		1176561	1					
ANR	1176569	IdentifierDeclType	Node *		1176561	0					
ANR	1176570	Identifier	np		1176561	1					
ANR	1176571	IdentifierDecl	* insert_node		1176561	2					
ANR	1176572	IdentifierDeclType	Node *		1176561	0					
ANR	1176573	Identifier	insert_node		1176561	1					
ANR	1176574	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	3094:2:68513:68543	1176561	1	True				
ANR	1176575	IdentifierDecl	* an = NANCHOR ( node )		1176561	0					
ANR	1176576	IdentifierDeclType	AnchorNode *		1176561	0					
ANR	1176577	Identifier	an		1176561	1					
ANR	1176578	AssignmentExpression	* an = NANCHOR ( node )		1176561	2		=			
ANR	1176579	Identifier	an		1176561	0					
ANR	1176580	CallExpression	NANCHOR ( node )		1176561	1					
ANR	1176581	Callee	NANCHOR		1176561	0					
ANR	1176582	Identifier	NANCHOR		1176561	0					
ANR	1176583	ArgumentList	node		1176561	1					
ANR	1176584	Argument	node		1176561	0					
ANR	1176585	Identifier	node		1176561	0					
ANR	1176586	IdentifierDeclStatement	int anc_type = an -> type ;	3095:2:68547:68570	1176561	2	True				
ANR	1176587	IdentifierDecl	anc_type = an -> type		1176561	0					
ANR	1176588	IdentifierDeclType	int		1176561	0					
ANR	1176589	Identifier	anc_type		1176561	1					
ANR	1176590	AssignmentExpression	anc_type = an -> type		1176561	2		=			
ANR	1176591	Identifier	anc_type		1176561	0					
ANR	1176592	PtrMemberAccess	an -> type		1176561	1					
ANR	1176593	Identifier	an		1176561	0					
ANR	1176594	Identifier	type		1176561	1					
ANR	1176595	ExpressionStatement	head = an -> target	3097:2:68575:68592	1176561	3	True				
ANR	1176596	AssignmentExpression	head = an -> target		1176561	0		=			
ANR	1176597	Identifier	head		1176561	0					
ANR	1176598	PtrMemberAccess	an -> target		1176561	1					
ANR	1176599	Identifier	an		1176561	0					
ANR	1176600	Identifier	target		1176561	1					
ANR	1176601	ExpressionStatement	np = NCAR ( head )	3098:2:68596:68611	1176561	4	True				
ANR	1176602	AssignmentExpression	np = NCAR ( head )		1176561	0		=			
ANR	1176603	Identifier	np		1176561	0					
ANR	1176604	CallExpression	NCAR ( head )		1176561	1					
ANR	1176605	Callee	NCAR		1176561	0					
ANR	1176606	Identifier	NCAR		1176561	0					
ANR	1176607	ArgumentList	head		1176561	1					
ANR	1176608	Argument	head		1176561	0					
ANR	1176609	Identifier	head		1176561	0					
ANR	1176610	ExpressionStatement	"swap_node ( node , head )"	3099:2:68615:68636	1176561	5	True				
ANR	1176611	CallExpression	"swap_node ( node , head )"		1176561	0					
ANR	1176612	Callee	swap_node		1176561	0					
ANR	1176613	Identifier	swap_node		1176561	0					
ANR	1176614	ArgumentList	node		1176561	1					
ANR	1176615	Argument	node		1176561	0					
ANR	1176616	Identifier	node		1176561	0					
ANR	1176617	Argument	head		1176561	1					
ANR	1176618	Identifier	head		1176561	0					
ANR	1176619	ExpressionStatement	NCAR ( node ) = head	3100:2:68640:68657	1176561	6	True				
ANR	1176620	AssignmentExpression	NCAR ( node ) = head		1176561	0		=			
ANR	1176621	CallExpression	NCAR ( node )		1176561	0					
ANR	1176622	Callee	NCAR		1176561	0					
ANR	1176623	Identifier	NCAR		1176561	0					
ANR	1176624	ArgumentList	node		1176561	1					
ANR	1176625	Argument	node		1176561	0					
ANR	1176626	Identifier	node		1176561	0					
ANR	1176627	Identifier	head		1176561	1					
ANR	1176628	ExpressionStatement	NANCHOR ( head ) -> target = np	3101:2:68661:68687	1176561	7	True				
ANR	1176629	AssignmentExpression	NANCHOR ( head ) -> target = np		1176561	0		=			
ANR	1176630	PtrMemberAccess	NANCHOR ( head ) -> target		1176561	0					
ANR	1176631	CallExpression	NANCHOR ( head )		1176561	0					
ANR	1176632	Callee	NANCHOR		1176561	0					
ANR	1176633	Identifier	NANCHOR		1176561	0					
ANR	1176634	ArgumentList	head		1176561	1					
ANR	1176635	Argument	head		1176561	0					
ANR	1176636	Identifier	head		1176561	0					
ANR	1176637	Identifier	target		1176561	1					
ANR	1176638	Identifier	np		1176561	1					
ANR	1176639	ExpressionStatement	np = node	3103:2:68692:68701	1176561	8	True				
ANR	1176640	AssignmentExpression	np = node		1176561	0		=			
ANR	1176641	Identifier	np		1176561	0					
ANR	1176642	Identifier	node		1176561	1					
ANR	1176643	WhileStatement	while ( ( np = NCDR ( np ) ) != NULL_NODE )		1176561	9					
ANR	1176644	Condition	( np = NCDR ( np ) ) != NULL_NODE	3104:9:68712:68739	1176561	0	True				
ANR	1176645	EqualityExpression	( np = NCDR ( np ) ) != NULL_NODE		1176561	0		!=			
ANR	1176646	AssignmentExpression	np = NCDR ( np )		1176561	0		=			
ANR	1176647	Identifier	np		1176561	0					
ANR	1176648	CallExpression	NCDR ( np )		1176561	1					
ANR	1176649	Callee	NCDR		1176561	0					
ANR	1176650	Identifier	NCDR		1176561	0					
ANR	1176651	ArgumentList	np		1176561	1					
ANR	1176652	Argument	np		1176561	0					
ANR	1176653	Identifier	np		1176561	0					
ANR	1176654	Identifier	NULL_NODE		1176561	1					
ANR	1176655	CompoundStatement		13:39:265:265	1176561	1					
ANR	1176656	ExpressionStatement	insert_node = onig_node_new_anchor ( anc_type )	3105:4:68748:68792	1176561	0	True				
ANR	1176657	AssignmentExpression	insert_node = onig_node_new_anchor ( anc_type )		1176561	0		=			
ANR	1176658	Identifier	insert_node		1176561	0					
ANR	1176659	CallExpression	onig_node_new_anchor ( anc_type )		1176561	1					
ANR	1176660	Callee	onig_node_new_anchor		1176561	0					
ANR	1176661	Identifier	onig_node_new_anchor		1176561	0					
ANR	1176662	ArgumentList	anc_type		1176561	1					
ANR	1176663	Argument	anc_type		1176561	0					
ANR	1176664	Identifier	anc_type		1176561	0					
ANR	1176665	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( insert_node )	3106:4:68798:68835	1176561	1	True				
ANR	1176666	CallExpression	CHECK_NULL_RETURN_MEMERR ( insert_node )		1176561	0					
ANR	1176667	Callee	CHECK_NULL_RETURN_MEMERR		1176561	0					
ANR	1176668	Identifier	CHECK_NULL_RETURN_MEMERR		1176561	0					
ANR	1176669	ArgumentList	insert_node		1176561	1					
ANR	1176670	Argument	insert_node		1176561	0					
ANR	1176671	Identifier	insert_node		1176561	0					
ANR	1176672	ExpressionStatement	NANCHOR ( insert_node ) -> target = NCAR ( np )	3107:4:68841:68880	1176561	2	True				
ANR	1176673	AssignmentExpression	NANCHOR ( insert_node ) -> target = NCAR ( np )		1176561	0		=			
ANR	1176674	PtrMemberAccess	NANCHOR ( insert_node ) -> target		1176561	0					
ANR	1176675	CallExpression	NANCHOR ( insert_node )		1176561	0					
ANR	1176676	Callee	NANCHOR		1176561	0					
ANR	1176677	Identifier	NANCHOR		1176561	0					
ANR	1176678	ArgumentList	insert_node		1176561	1					
ANR	1176679	Argument	insert_node		1176561	0					
ANR	1176680	Identifier	insert_node		1176561	0					
ANR	1176681	Identifier	target		1176561	1					
ANR	1176682	CallExpression	NCAR ( np )		1176561	1					
ANR	1176683	Callee	NCAR		1176561	0					
ANR	1176684	Identifier	NCAR		1176561	0					
ANR	1176685	ArgumentList	np		1176561	1					
ANR	1176686	Argument	np		1176561	0					
ANR	1176687	Identifier	np		1176561	0					
ANR	1176688	ExpressionStatement	NCAR ( np ) = insert_node	3108:4:68886:68908	1176561	3	True				
ANR	1176689	AssignmentExpression	NCAR ( np ) = insert_node		1176561	0		=			
ANR	1176690	CallExpression	NCAR ( np )		1176561	0					
ANR	1176691	Callee	NCAR		1176561	0					
ANR	1176692	Identifier	NCAR		1176561	0					
ANR	1176693	ArgumentList	np		1176561	1					
ANR	1176694	Argument	np		1176561	0					
ANR	1176695	Identifier	np		1176561	0					
ANR	1176696	Identifier	insert_node		1176561	1					
ANR	1176697	IfStatement	if ( anc_type == ANCHOR_LOOK_BEHIND_NOT )		1176561	10					
ANR	1176698	Condition	anc_type == ANCHOR_LOOK_BEHIND_NOT	3111:6:68921:68954	1176561	0	True				
ANR	1176699	EqualityExpression	anc_type == ANCHOR_LOOK_BEHIND_NOT		1176561	0		==			
ANR	1176700	Identifier	anc_type		1176561	0					
ANR	1176701	Identifier	ANCHOR_LOOK_BEHIND_NOT		1176561	1					
ANR	1176702	CompoundStatement		20:42:480:480	1176561	1					
ANR	1176703	ExpressionStatement	np = node	3112:4:68963:68972	1176561	0	True				
ANR	1176704	AssignmentExpression	np = node		1176561	0		=			
ANR	1176705	Identifier	np		1176561	0					
ANR	1176706	Identifier	node		1176561	1					
ANR	1176707	DoStatement	do		1176561	1					
ANR	1176708	CompoundStatement		22:7:504:504	1176561	0					
ANR	1176709	ExpressionStatement	"SET_NTYPE ( np , NT_LIST )"	3114:6:68989:69011	1176561	0	True				
ANR	1176710	CallExpression	"SET_NTYPE ( np , NT_LIST )"		1176561	0					
ANR	1176711	Callee	SET_NTYPE		1176561	0					
ANR	1176712	Identifier	SET_NTYPE		1176561	0					
ANR	1176713	ArgumentList	np		1176561	1					
ANR	1176714	Argument	np		1176561	0					
ANR	1176715	Identifier	np		1176561	0					
ANR	1176716	Argument	NT_LIST		1176561	1					
ANR	1176717	Identifier	NT_LIST		1176561	0					
ANR	1176718	Condition	( np = NCDR ( np ) ) != NULL_NODE	3115:13:69045:69072	1176561	1	True				
ANR	1176719	EqualityExpression	( np = NCDR ( np ) ) != NULL_NODE		1176561	0		!=			
ANR	1176720	AssignmentExpression	np = NCDR ( np )		1176561	0		=			
ANR	1176721	Identifier	np		1176561	0					
ANR	1176722	CallExpression	NCDR ( np )		1176561	1					
ANR	1176723	Callee	NCDR		1176561	0					
ANR	1176724	Identifier	NCDR		1176561	0					
ANR	1176725	ArgumentList	np		1176561	1					
ANR	1176726	Argument	np		1176561	0					
ANR	1176727	Identifier	np		1176561	0					
ANR	1176728	Identifier	NULL_NODE		1176561	1					
ANR	1176729	ReturnStatement	return 0 ;	3117:2:69082:69090	1176561	11	True				
ANR	1176730	PrimaryExpression	0		1176561	0					
ANR	1176731	ReturnType	static int		1176561	1					
ANR	1176732	Identifier	divide_look_behind_alternatives		1176561	2					
ANR	1176733	ParameterList	Node * node		1176561	3					
ANR	1176734	Parameter	Node * node	3091:32:68464:68473	1176561	0	True				
ANR	1176735	ParameterType	Node *		1176561	0					
ANR	1176736	Identifier	node		1176561	1					
ANR	1176737	CFGEntryNode	ENTRY		1176561		True				
ANR	1176738	CFGExitNode	EXIT		1176561		True				
ANR	1176739	Symbol	np		1176561						
ANR	1176740	Symbol	NCAR		1176561						
ANR	1176741	Symbol	anc_type		1176561						
ANR	1176742	Symbol	NCDR		1176561						
ANR	1176743	Symbol	an -> type		1176561						
ANR	1176744	Symbol	NT_LIST		1176561						
ANR	1176745	Symbol	an		1176561						
ANR	1176746	Symbol	NANCHOR ( insert_node ) -> target		1176561						
ANR	1176747	Symbol	head		1176561						
ANR	1176748	Symbol	* an		1176561						
ANR	1176749	Symbol	NANCHOR ( head ) -> target		1176561						
ANR	1176750	Symbol	node		1176561						
ANR	1176751	Symbol	an -> target		1176561						
ANR	1176752	Symbol	* NANCHOR		1176561						
ANR	1176753	Symbol	ANCHOR_LOOK_BEHIND_NOT		1176561						
ANR	1176754	Symbol	NANCHOR		1176561						
ANR	1176755	Symbol	NULL_NODE		1176561						
ANR	1176756	Symbol	onig_node_new_anchor		1176561						
ANR	1176757	Symbol	insert_node		1176561						
ANR	1176758	Function	setup_look_behind	3120:0:69095:69630							
ANR	1176759	FunctionDef	"setup_look_behind (Node * node , regex_t * reg , ScanEnv * env)"		1176758	0					
ANR	1176760	CompoundStatement		3122:0:69164:69630	1176758	0					
ANR	1176761	IdentifierDeclStatement	"int r , len ;"	3123:2:69168:69178	1176758	0	True				
ANR	1176762	IdentifierDecl	r		1176758	0					
ANR	1176763	IdentifierDeclType	int		1176758	0					
ANR	1176764	Identifier	r		1176758	1					
ANR	1176765	IdentifierDecl	len		1176758	1					
ANR	1176766	IdentifierDeclType	int		1176758	0					
ANR	1176767	Identifier	len		1176758	1					
ANR	1176768	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	3124:2:69182:69212	1176758	1	True				
ANR	1176769	IdentifierDecl	* an = NANCHOR ( node )		1176758	0					
ANR	1176770	IdentifierDeclType	AnchorNode *		1176758	0					
ANR	1176771	Identifier	an		1176758	1					
ANR	1176772	AssignmentExpression	* an = NANCHOR ( node )		1176758	2		=			
ANR	1176773	Identifier	an		1176758	0					
ANR	1176774	CallExpression	NANCHOR ( node )		1176758	1					
ANR	1176775	Callee	NANCHOR		1176758	0					
ANR	1176776	Identifier	NANCHOR		1176758	0					
ANR	1176777	ArgumentList	node		1176758	1					
ANR	1176778	Argument	node		1176758	0					
ANR	1176779	Identifier	node		1176758	0					
ANR	1176780	ExpressionStatement	"r = get_char_length_tree ( an -> target , reg , & len )"	3126:2:69217:69264	1176758	2	True				
ANR	1176781	AssignmentExpression	"r = get_char_length_tree ( an -> target , reg , & len )"		1176758	0		=			
ANR	1176782	Identifier	r		1176758	0					
ANR	1176783	CallExpression	"get_char_length_tree ( an -> target , reg , & len )"		1176758	1					
ANR	1176784	Callee	get_char_length_tree		1176758	0					
ANR	1176785	Identifier	get_char_length_tree		1176758	0					
ANR	1176786	ArgumentList	an -> target		1176758	1					
ANR	1176787	Argument	an -> target		1176758	0					
ANR	1176788	PtrMemberAccess	an -> target		1176758	0					
ANR	1176789	Identifier	an		1176758	0					
ANR	1176790	Identifier	target		1176758	1					
ANR	1176791	Argument	reg		1176758	1					
ANR	1176792	Identifier	reg		1176758	0					
ANR	1176793	Argument	& len		1176758	2					
ANR	1176794	UnaryOperationExpression	& len		1176758	0					
ANR	1176795	UnaryOperator	&		1176758	0					
ANR	1176796	Identifier	len		1176758	1					
ANR	1176797	IfStatement	if ( r == 0 )		1176758	3					
ANR	1176798	Condition	r == 0	3127:6:69272:69277	1176758	0	True				
ANR	1176799	EqualityExpression	r == 0		1176758	0		==			
ANR	1176800	Identifier	r		1176758	0					
ANR	1176801	PrimaryExpression	0		1176758	1					
ANR	1176802	ExpressionStatement	an -> char_len = len	3128:4:69284:69302	1176758	1	True				
ANR	1176803	AssignmentExpression	an -> char_len = len		1176758	0		=			
ANR	1176804	PtrMemberAccess	an -> char_len		1176758	0					
ANR	1176805	Identifier	an		1176758	0					
ANR	1176806	Identifier	char_len		1176758	1					
ANR	1176807	Identifier	len		1176758	1					
ANR	1176808	ElseStatement	else		1176758	0					
ANR	1176809	IfStatement	if ( r == GET_CHAR_LEN_VARLEN )		1176758	0					
ANR	1176810	Condition	r == GET_CHAR_LEN_VARLEN	3129:11:69315:69338	1176758	0	True				
ANR	1176811	EqualityExpression	r == GET_CHAR_LEN_VARLEN		1176758	0		==			
ANR	1176812	Identifier	r		1176758	0					
ANR	1176813	Identifier	GET_CHAR_LEN_VARLEN		1176758	1					
ANR	1176814	ExpressionStatement	r = ONIGERR_INVALID_LOOK_BEHIND_PATTERN	3130:4:69345:69384	1176758	1	True				
ANR	1176815	AssignmentExpression	r = ONIGERR_INVALID_LOOK_BEHIND_PATTERN		1176758	0		=			
ANR	1176816	Identifier	r		1176758	0					
ANR	1176817	Identifier	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		1176758	1					
ANR	1176818	ElseStatement	else		1176758	0					
ANR	1176819	IfStatement	if ( r == GET_CHAR_LEN_TOP_ALT_VARLEN )		1176758	0					
ANR	1176820	Condition	r == GET_CHAR_LEN_TOP_ALT_VARLEN	3131:11:69397:69428	1176758	0	True				
ANR	1176821	EqualityExpression	r == GET_CHAR_LEN_TOP_ALT_VARLEN		1176758	0		==			
ANR	1176822	Identifier	r		1176758	0					
ANR	1176823	Identifier	GET_CHAR_LEN_TOP_ALT_VARLEN		1176758	1					
ANR	1176824	CompoundStatement		10:45:266:266	1176758	1					
ANR	1176825	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND ) )"		1176758	0					
ANR	1176826	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND )"	3132:8:69441:69505	1176758	0	True				
ANR	1176827	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND )"		1176758	0					
ANR	1176828	Callee	IS_SYNTAX_BV		1176758	0					
ANR	1176829	Identifier	IS_SYNTAX_BV		1176758	0					
ANR	1176830	ArgumentList	env -> syntax		1176758	1					
ANR	1176831	Argument	env -> syntax		1176758	0					
ANR	1176832	PtrMemberAccess	env -> syntax		1176758	0					
ANR	1176833	Identifier	env		1176758	0					
ANR	1176834	Identifier	syntax		1176758	1					
ANR	1176835	Argument	ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND		1176758	1					
ANR	1176836	Identifier	ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND		1176758	0					
ANR	1176837	ExpressionStatement	r = divide_look_behind_alternatives ( node )	3133:6:69514:69555	1176758	1	True				
ANR	1176838	AssignmentExpression	r = divide_look_behind_alternatives ( node )		1176758	0		=			
ANR	1176839	Identifier	r		1176758	0					
ANR	1176840	CallExpression	divide_look_behind_alternatives ( node )		1176758	1					
ANR	1176841	Callee	divide_look_behind_alternatives		1176758	0					
ANR	1176842	Identifier	divide_look_behind_alternatives		1176758	0					
ANR	1176843	ArgumentList	node		1176758	1					
ANR	1176844	Argument	node		1176758	0					
ANR	1176845	Identifier	node		1176758	0					
ANR	1176846	ElseStatement	else		1176758	0					
ANR	1176847	ExpressionStatement	r = ONIGERR_INVALID_LOOK_BEHIND_PATTERN	3135:6:69572:69611	1176758	0	True				
ANR	1176848	AssignmentExpression	r = ONIGERR_INVALID_LOOK_BEHIND_PATTERN		1176758	0		=			
ANR	1176849	Identifier	r		1176758	0					
ANR	1176850	Identifier	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		1176758	1					
ANR	1176851	ReturnStatement	return r ;	3138:2:69620:69628	1176758	4	True				
ANR	1176852	Identifier	r		1176758	0					
ANR	1176853	ReturnType	static int		1176758	1					
ANR	1176854	Identifier	setup_look_behind		1176758	2					
ANR	1176855	ParameterList	"Node * node , regex_t * reg , ScanEnv * env"		1176758	3					
ANR	1176856	Parameter	Node * node	3121:18:69124:69133	1176758	0	True				
ANR	1176857	ParameterType	Node *		1176758	0					
ANR	1176858	Identifier	node		1176758	1					
ANR	1176859	Parameter	regex_t * reg	3121:30:69136:69147	1176758	1	True				
ANR	1176860	ParameterType	regex_t *		1176758	0					
ANR	1176861	Identifier	reg		1176758	1					
ANR	1176862	Parameter	ScanEnv * env	3121:44:69150:69161	1176758	2	True				
ANR	1176863	ParameterType	ScanEnv *		1176758	0					
ANR	1176864	Identifier	env		1176758	1					
ANR	1176865	CFGEntryNode	ENTRY		1176758		True				
ANR	1176866	CFGExitNode	EXIT		1176758		True				
ANR	1176867	Symbol	ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND		1176758						
ANR	1176868	Symbol	an -> char_len		1176758						
ANR	1176869	Symbol	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		1176758						
ANR	1176870	Symbol	* env		1176758						
ANR	1176871	Symbol	env		1176758						
ANR	1176872	Symbol	an		1176758						
ANR	1176873	Symbol	env -> syntax		1176758						
ANR	1176874	Symbol	* an		1176758						
ANR	1176875	Symbol	node		1176758						
ANR	1176876	Symbol	get_char_length_tree		1176758						
ANR	1176877	Symbol	r		1176758						
ANR	1176878	Symbol	len		1176758						
ANR	1176879	Symbol	GET_CHAR_LEN_TOP_ALT_VARLEN		1176758						
ANR	1176880	Symbol	reg		1176758						
ANR	1176881	Symbol	an -> target		1176758						
ANR	1176882	Symbol	GET_CHAR_LEN_VARLEN		1176758						
ANR	1176883	Symbol	NANCHOR		1176758						
ANR	1176884	Symbol	IS_SYNTAX_BV		1176758						
ANR	1176885	Symbol	& len		1176758						
ANR	1176886	Symbol	divide_look_behind_alternatives		1176758						
ANR	1176887	Function	next_setup	3141:0:69633:70842							
ANR	1176888	FunctionDef	"next_setup (Node * node , Node * next_node , regex_t * reg)"		1176887	0					
ANR	1176889	CompoundStatement		3143:0:69698:70842	1176887	0					
ANR	1176890	IdentifierDeclStatement	int type ;	3144:2:69702:69710	1176887	0	True				
ANR	1176891	IdentifierDecl	type		1176887	0					
ANR	1176892	IdentifierDeclType	int		1176887	0					
ANR	1176893	Identifier	type		1176887	1					
ANR	1176894	Label	retry :	3146:1:69714:69719	1176887	1	True				
ANR	1176895	Identifier	retry		1176887	0					
ANR	1176896	ExpressionStatement	type = NTYPE ( node )	3147:2:69723:69741	1176887	2	True				
ANR	1176897	AssignmentExpression	type = NTYPE ( node )		1176887	0		=			
ANR	1176898	Identifier	type		1176887	0					
ANR	1176899	CallExpression	NTYPE ( node )		1176887	1					
ANR	1176900	Callee	NTYPE		1176887	0					
ANR	1176901	Identifier	NTYPE		1176887	0					
ANR	1176902	ArgumentList	node		1176887	1					
ANR	1176903	Argument	node		1176887	0					
ANR	1176904	Identifier	node		1176887	0					
ANR	1176905	IfStatement	if ( type == NT_QTFR )		1176887	3					
ANR	1176906	Condition	type == NT_QTFR	3148:6:69749:69763	1176887	0	True				
ANR	1176907	EqualityExpression	type == NT_QTFR		1176887	0		==			
ANR	1176908	Identifier	type		1176887	0					
ANR	1176909	Identifier	NT_QTFR		1176887	1					
ANR	1176910	CompoundStatement		7:4:73:99	1176887	1					
ANR	1176911	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	3149:4:69772:69798	1176887	0	True				
ANR	1176912	IdentifierDecl	* qn = NQTFR ( node )		1176887	0					
ANR	1176913	IdentifierDeclType	QtfrNode *		1176887	0					
ANR	1176914	Identifier	qn		1176887	1					
ANR	1176915	AssignmentExpression	* qn = NQTFR ( node )		1176887	2		=			
ANR	1176916	Identifier	qn		1176887	0					
ANR	1176917	CallExpression	NQTFR ( node )		1176887	1					
ANR	1176918	Callee	NQTFR		1176887	0					
ANR	1176919	Identifier	NQTFR		1176887	0					
ANR	1176920	ArgumentList	node		1176887	1					
ANR	1176921	Argument	node		1176887	0					
ANR	1176922	Identifier	node		1176887	0					
ANR	1176923	IfStatement	if ( qn -> greedy && IS_REPEAT_INFINITE ( qn -> upper ) )		1176887	1					
ANR	1176924	Condition	qn -> greedy && IS_REPEAT_INFINITE ( qn -> upper )	3150:8:69808:69850	1176887	0	True				
ANR	1176925	AndExpression	qn -> greedy && IS_REPEAT_INFINITE ( qn -> upper )		1176887	0		&&			
ANR	1176926	PtrMemberAccess	qn -> greedy		1176887	0					
ANR	1176927	Identifier	qn		1176887	0					
ANR	1176928	Identifier	greedy		1176887	1					
ANR	1176929	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1176887	1					
ANR	1176930	Callee	IS_REPEAT_INFINITE		1176887	0					
ANR	1176931	Identifier	IS_REPEAT_INFINITE		1176887	0					
ANR	1176932	ArgumentList	qn -> upper		1176887	1					
ANR	1176933	Argument	qn -> upper		1176887	0					
ANR	1176934	PtrMemberAccess	qn -> upper		1176887	0					
ANR	1176935	Identifier	qn		1176887	0					
ANR	1176936	Identifier	upper		1176887	1					
ANR	1176937	CompoundStatement		10:6:188:236	1176887	1					
ANR	1176938	IdentifierDeclStatement	"Node * n = get_head_value_node ( next_node , 1 , reg ) ;"	3152:6:69887:69935	1176887	0	True				
ANR	1176939	IdentifierDecl	"* n = get_head_value_node ( next_node , 1 , reg )"		1176887	0					
ANR	1176940	IdentifierDeclType	Node *		1176887	0					
ANR	1176941	Identifier	n		1176887	1					
ANR	1176942	AssignmentExpression	"* n = get_head_value_node ( next_node , 1 , reg )"		1176887	2		=			
ANR	1176943	Identifier	n		1176887	0					
ANR	1176944	CallExpression	"get_head_value_node ( next_node , 1 , reg )"		1176887	1					
ANR	1176945	Callee	get_head_value_node		1176887	0					
ANR	1176946	Identifier	get_head_value_node		1176887	0					
ANR	1176947	ArgumentList	next_node		1176887	1					
ANR	1176948	Argument	next_node		1176887	0					
ANR	1176949	Identifier	next_node		1176887	0					
ANR	1176950	Argument	1		1176887	1					
ANR	1176951	PrimaryExpression	1		1176887	0					
ANR	1176952	Argument	reg		1176887	2					
ANR	1176953	Identifier	reg		1176887	0					
ANR	1176954	IfStatement	if ( IS_NOT_NULL ( n ) && NSTR ( n ) -> s [ 0 ] != '\\0' )		1176887	1					
ANR	1176955	Condition	IS_NOT_NULL ( n ) && NSTR ( n ) -> s [ 0 ] != '\\0'	3154:10:69985:70023	1176887	0	True				
ANR	1176956	AndExpression	IS_NOT_NULL ( n ) && NSTR ( n ) -> s [ 0 ] != '\\0'		1176887	0		&&			
ANR	1176957	CallExpression	IS_NOT_NULL ( n )		1176887	0					
ANR	1176958	Callee	IS_NOT_NULL		1176887	0					
ANR	1176959	Identifier	IS_NOT_NULL		1176887	0					
ANR	1176960	ArgumentList	n		1176887	1					
ANR	1176961	Argument	n		1176887	0					
ANR	1176962	Identifier	n		1176887	0					
ANR	1176963	EqualityExpression	NSTR ( n ) -> s [ 0 ] != '\\0'		1176887	1		!=			
ANR	1176964	ArrayIndexing	NSTR ( n ) -> s [ 0 ]		1176887	0					
ANR	1176965	PtrMemberAccess	NSTR ( n ) -> s		1176887	0					
ANR	1176966	CallExpression	NSTR ( n )		1176887	0					
ANR	1176967	Callee	NSTR		1176887	0					
ANR	1176968	Identifier	NSTR		1176887	0					
ANR	1176969	ArgumentList	n		1176887	1					
ANR	1176970	Argument	n		1176887	0					
ANR	1176971	Identifier	n		1176887	0					
ANR	1176972	Identifier	s		1176887	1					
ANR	1176973	PrimaryExpression	0		1176887	1					
ANR	1176974	PrimaryExpression	'\\0'		1176887	1					
ANR	1176975	CompoundStatement		12:51:327:327	1176887	1					
ANR	1176976	ExpressionStatement	qn -> next_head_exact = n	3155:1:70029:70052	1176887	0	True				
ANR	1176977	AssignmentExpression	qn -> next_head_exact = n		1176887	0		=			
ANR	1176978	PtrMemberAccess	qn -> next_head_exact		1176887	0					
ANR	1176979	Identifier	qn		1176887	0					
ANR	1176980	Identifier	next_head_exact		1176887	1					
ANR	1176981	Identifier	n		1176887	1					
ANR	1176982	IfStatement	if ( qn -> lower <= 1 )		1176887	2					
ANR	1176983	Condition	qn -> lower <= 1	3159:10:70130:70143	1176887	0	True				
ANR	1176984	RelationalExpression	qn -> lower <= 1		1176887	0		<=			
ANR	1176985	PtrMemberAccess	qn -> lower		1176887	0					
ANR	1176986	Identifier	qn		1176887	0					
ANR	1176987	Identifier	lower		1176887	1					
ANR	1176988	PrimaryExpression	1		1176887	1					
ANR	1176989	CompoundStatement		18:1:450:479	1176887	1					
ANR	1176990	IdentifierDeclStatement	int ttype = NTYPE ( qn -> target ) ;	3160:1:70149:70178	1176887	0	True				
ANR	1176991	IdentifierDecl	ttype = NTYPE ( qn -> target )		1176887	0					
ANR	1176992	IdentifierDeclType	int		1176887	0					
ANR	1176993	Identifier	ttype		1176887	1					
ANR	1176994	AssignmentExpression	ttype = NTYPE ( qn -> target )		1176887	2		=			
ANR	1176995	Identifier	ttype		1176887	0					
ANR	1176996	CallExpression	NTYPE ( qn -> target )		1176887	1					
ANR	1176997	Callee	NTYPE		1176887	0					
ANR	1176998	Identifier	NTYPE		1176887	0					
ANR	1176999	ArgumentList	qn -> target		1176887	1					
ANR	1177000	Argument	qn -> target		1176887	0					
ANR	1177001	PtrMemberAccess	qn -> target		1176887	0					
ANR	1177002	Identifier	qn		1176887	0					
ANR	1177003	Identifier	target		1176887	1					
ANR	1177004	IfStatement	if ( IS_NODE_TYPE_SIMPLE ( ttype ) )		1176887	1					
ANR	1177005	Condition	IS_NODE_TYPE_SIMPLE ( ttype )	3161:5:70185:70210	1176887	0	True				
ANR	1177006	CallExpression	IS_NODE_TYPE_SIMPLE ( ttype )		1176887	0					
ANR	1177007	Callee	IS_NODE_TYPE_SIMPLE		1176887	0					
ANR	1177008	Identifier	IS_NODE_TYPE_SIMPLE		1176887	0					
ANR	1177009	ArgumentList	ttype		1176887	1					
ANR	1177010	Argument	ttype		1176887	0					
ANR	1177011	Identifier	ttype		1176887	0					
ANR	1177012	CompoundStatement		20:3:519:530	1176887	1					
ANR	1177013	IdentifierDeclStatement	"Node * x , * y ;"	3162:3:70218:70229	1176887	0	True				
ANR	1177014	IdentifierDecl	* x		1176887	0					
ANR	1177015	IdentifierDeclType	Node *		1176887	0					
ANR	1177016	Identifier	x		1176887	1					
ANR	1177017	IdentifierDecl	* y		1176887	1					
ANR	1177018	IdentifierDeclType	Node *		1176887	0					
ANR	1177019	Identifier	y		1176887	1					
ANR	1177020	ExpressionStatement	"x = get_head_value_node ( qn -> target , 0 , reg )"	3163:3:70234:70277	1176887	1	True				
ANR	1177021	AssignmentExpression	"x = get_head_value_node ( qn -> target , 0 , reg )"		1176887	0		=			
ANR	1177022	Identifier	x		1176887	0					
ANR	1177023	CallExpression	"get_head_value_node ( qn -> target , 0 , reg )"		1176887	1					
ANR	1177024	Callee	get_head_value_node		1176887	0					
ANR	1177025	Identifier	get_head_value_node		1176887	0					
ANR	1177026	ArgumentList	qn -> target		1176887	1					
ANR	1177027	Argument	qn -> target		1176887	0					
ANR	1177028	PtrMemberAccess	qn -> target		1176887	0					
ANR	1177029	Identifier	qn		1176887	0					
ANR	1177030	Identifier	target		1176887	1					
ANR	1177031	Argument	0		1176887	1					
ANR	1177032	PrimaryExpression	0		1176887	0					
ANR	1177033	Argument	reg		1176887	2					
ANR	1177034	Identifier	reg		1176887	0					
ANR	1177035	IfStatement	if ( IS_NOT_NULL ( x ) )		1176887	2					
ANR	1177036	Condition	IS_NOT_NULL ( x )	3164:7:70286:70299	1176887	0	True				
ANR	1177037	CallExpression	IS_NOT_NULL ( x )		1176887	0					
ANR	1177038	Callee	IS_NOT_NULL		1176887	0					
ANR	1177039	Identifier	IS_NOT_NULL		1176887	0					
ANR	1177040	ArgumentList	x		1176887	1					
ANR	1177041	Argument	x		1176887	0					
ANR	1177042	Identifier	x		1176887	0					
ANR	1177043	CompoundStatement		22:23:603:603	1176887	1					
ANR	1177044	ExpressionStatement	"y = get_head_value_node ( next_node , 0 , reg )"	3165:5:70309:70352	1176887	0	True				
ANR	1177045	AssignmentExpression	"y = get_head_value_node ( next_node , 0 , reg )"		1176887	0		=			
ANR	1177046	Identifier	y		1176887	0					
ANR	1177047	CallExpression	"get_head_value_node ( next_node , 0 , reg )"		1176887	1					
ANR	1177048	Callee	get_head_value_node		1176887	0					
ANR	1177049	Identifier	get_head_value_node		1176887	0					
ANR	1177050	ArgumentList	next_node		1176887	1					
ANR	1177051	Argument	next_node		1176887	0					
ANR	1177052	Identifier	next_node		1176887	0					
ANR	1177053	Argument	0		1176887	1					
ANR	1177054	PrimaryExpression	0		1176887	0					
ANR	1177055	Argument	reg		1176887	2					
ANR	1177056	Identifier	reg		1176887	0					
ANR	1177057	IfStatement	"if ( IS_NOT_NULL ( y ) && is_not_included ( x , y , reg ) )"		1176887	1					
ANR	1177058	Condition	"IS_NOT_NULL ( y ) && is_not_included ( x , y , reg )"	3166:9:70363:70406	1176887	0	True				
ANR	1177059	AndExpression	"IS_NOT_NULL ( y ) && is_not_included ( x , y , reg )"		1176887	0		&&			
ANR	1177060	CallExpression	IS_NOT_NULL ( y )		1176887	0					
ANR	1177061	Callee	IS_NOT_NULL		1176887	0					
ANR	1177062	Identifier	IS_NOT_NULL		1176887	0					
ANR	1177063	ArgumentList	y		1176887	1					
ANR	1177064	Argument	y		1176887	0					
ANR	1177065	Identifier	y		1176887	0					
ANR	1177066	CallExpression	"is_not_included ( x , y , reg )"		1176887	1					
ANR	1177067	Callee	is_not_included		1176887	0					
ANR	1177068	Identifier	is_not_included		1176887	0					
ANR	1177069	ArgumentList	x		1176887	1					
ANR	1177070	Argument	x		1176887	0					
ANR	1177071	Identifier	x		1176887	0					
ANR	1177072	Argument	y		1176887	1					
ANR	1177073	Identifier	y		1176887	0					
ANR	1177074	Argument	reg		1176887	2					
ANR	1177075	Identifier	reg		1176887	0					
ANR	1177076	CompoundStatement		25:7:719:775	1176887	1					
ANR	1177077	IdentifierDeclStatement	Node * en = onig_node_new_enclose ( ENCLOSE_STOP_BACKTRACK ) ;	3167:7:70418:70474	1176887	0	True				
ANR	1177078	IdentifierDecl	* en = onig_node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		1176887	0					
ANR	1177079	IdentifierDeclType	Node *		1176887	0					
ANR	1177080	Identifier	en		1176887	1					
ANR	1177081	AssignmentExpression	* en = onig_node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		1176887	2		=			
ANR	1177082	Identifier	en		1176887	0					
ANR	1177083	CallExpression	onig_node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		1176887	1					
ANR	1177084	Callee	onig_node_new_enclose		1176887	0					
ANR	1177085	Identifier	onig_node_new_enclose		1176887	0					
ANR	1177086	ArgumentList	ENCLOSE_STOP_BACKTRACK		1176887	1					
ANR	1177087	Argument	ENCLOSE_STOP_BACKTRACK		1176887	0					
ANR	1177088	Identifier	ENCLOSE_STOP_BACKTRACK		1176887	0					
ANR	1177089	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( en )	3168:7:70483:70511	1176887	1	True				
ANR	1177090	CallExpression	CHECK_NULL_RETURN_MEMERR ( en )		1176887	0					
ANR	1177091	Callee	CHECK_NULL_RETURN_MEMERR		1176887	0					
ANR	1177092	Identifier	CHECK_NULL_RETURN_MEMERR		1176887	0					
ANR	1177093	ArgumentList	en		1176887	1					
ANR	1177094	Argument	en		1176887	0					
ANR	1177095	Identifier	en		1176887	0					
ANR	1177096	ExpressionStatement	"SET_ENCLOSE_STATUS ( en , NST_STOP_BT_SIMPLE_REPEAT )"	3169:7:70520:70569	1176887	2	True				
ANR	1177097	CallExpression	"SET_ENCLOSE_STATUS ( en , NST_STOP_BT_SIMPLE_REPEAT )"		1176887	0					
ANR	1177098	Callee	SET_ENCLOSE_STATUS		1176887	0					
ANR	1177099	Identifier	SET_ENCLOSE_STATUS		1176887	0					
ANR	1177100	ArgumentList	en		1176887	1					
ANR	1177101	Argument	en		1176887	0					
ANR	1177102	Identifier	en		1176887	0					
ANR	1177103	Argument	NST_STOP_BT_SIMPLE_REPEAT		1176887	1					
ANR	1177104	Identifier	NST_STOP_BT_SIMPLE_REPEAT		1176887	0					
ANR	1177105	ExpressionStatement	"swap_node ( node , en )"	3170:7:70578:70597	1176887	3	True				
ANR	1177106	CallExpression	"swap_node ( node , en )"		1176887	0					
ANR	1177107	Callee	swap_node		1176887	0					
ANR	1177108	Identifier	swap_node		1176887	0					
ANR	1177109	ArgumentList	node		1176887	1					
ANR	1177110	Argument	node		1176887	0					
ANR	1177111	Identifier	node		1176887	0					
ANR	1177112	Argument	en		1176887	1					
ANR	1177113	Identifier	en		1176887	0					
ANR	1177114	ExpressionStatement	NENCLOSE ( node ) -> target = en	3171:7:70606:70633	1176887	4	True				
ANR	1177115	AssignmentExpression	NENCLOSE ( node ) -> target = en		1176887	0		=			
ANR	1177116	PtrMemberAccess	NENCLOSE ( node ) -> target		1176887	0					
ANR	1177117	CallExpression	NENCLOSE ( node )		1176887	0					
ANR	1177118	Callee	NENCLOSE		1176887	0					
ANR	1177119	Identifier	NENCLOSE		1176887	0					
ANR	1177120	ArgumentList	node		1176887	1					
ANR	1177121	Argument	node		1176887	0					
ANR	1177122	Identifier	node		1176887	0					
ANR	1177123	Identifier	target		1176887	1					
ANR	1177124	Identifier	en		1176887	1					
ANR	1177125	ElseStatement	else		1176887	0					
ANR	1177126	IfStatement	if ( type == NT_ENCLOSE )		1176887	0					
ANR	1177127	Condition	type == NT_ENCLOSE	3178:11:70679:70696	1176887	0	True				
ANR	1177128	EqualityExpression	type == NT_ENCLOSE		1176887	0		==			
ANR	1177129	Identifier	type		1176887	0					
ANR	1177130	Identifier	NT_ENCLOSE		1176887	1					
ANR	1177131	CompoundStatement		37:4:1006:1038	1176887	1					
ANR	1177132	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	3179:4:70705:70737	1176887	0	True				
ANR	1177133	IdentifierDecl	* en = NENCLOSE ( node )		1176887	0					
ANR	1177134	IdentifierDeclType	EncloseNode *		1176887	0					
ANR	1177135	Identifier	en		1176887	1					
ANR	1177136	AssignmentExpression	* en = NENCLOSE ( node )		1176887	2		=			
ANR	1177137	Identifier	en		1176887	0					
ANR	1177138	CallExpression	NENCLOSE ( node )		1176887	1					
ANR	1177139	Callee	NENCLOSE		1176887	0					
ANR	1177140	Identifier	NENCLOSE		1176887	0					
ANR	1177141	ArgumentList	node		1176887	1					
ANR	1177142	Argument	node		1176887	0					
ANR	1177143	Identifier	node		1176887	0					
ANR	1177144	IfStatement	if ( en -> type == ENCLOSE_MEMORY )		1176887	1					
ANR	1177145	Condition	en -> type == ENCLOSE_MEMORY	3180:8:70747:70772	1176887	0	True				
ANR	1177146	EqualityExpression	en -> type == ENCLOSE_MEMORY		1176887	0		==			
ANR	1177147	PtrMemberAccess	en -> type		1176887	0					
ANR	1177148	Identifier	en		1176887	0					
ANR	1177149	Identifier	type		1176887	1					
ANR	1177150	Identifier	ENCLOSE_MEMORY		1176887	1					
ANR	1177151	CompoundStatement		38:36:1076:1076	1176887	1					
ANR	1177152	ExpressionStatement	node = en -> target	3181:6:70783:70800	1176887	0	True				
ANR	1177153	AssignmentExpression	node = en -> target		1176887	0		=			
ANR	1177154	Identifier	node		1176887	0					
ANR	1177155	PtrMemberAccess	en -> target		1176887	1					
ANR	1177156	Identifier	en		1176887	0					
ANR	1177157	Identifier	target		1176887	1					
ANR	1177158	GotoStatement	goto retry ;	3182:6:70808:70818	1176887	1	True				
ANR	1177159	Identifier	retry		1176887	0					
ANR	1177160	ReturnStatement	return 0 ;	3185:2:70832:70840	1176887	4	True				
ANR	1177161	PrimaryExpression	0		1176887	0					
ANR	1177162	ReturnType	static int		1176887	1					
ANR	1177163	Identifier	next_setup		1176887	2					
ANR	1177164	ParameterList	"Node * node , Node * next_node , regex_t * reg"		1176887	3					
ANR	1177165	Parameter	Node * node	3142:11:69655:69664	1176887	0	True				
ANR	1177166	ParameterType	Node *		1176887	0					
ANR	1177167	Identifier	node		1176887	1					
ANR	1177168	Parameter	Node * next_node	3142:23:69667:69681	1176887	1	True				
ANR	1177169	ParameterType	Node *		1176887	0					
ANR	1177170	Identifier	next_node		1176887	1					
ANR	1177171	Parameter	regex_t * reg	3142:40:69684:69695	1176887	2	True				
ANR	1177172	ParameterType	regex_t *		1176887	0					
ANR	1177173	Identifier	reg		1176887	1					
ANR	1177174	CFGEntryNode	ENTRY		1176887		True				
ANR	1177175	CFGExitNode	EXIT		1176887		True				
ANR	1177176	Symbol	* qn		1176887						
ANR	1177177	Symbol	qn -> greedy		1176887						
ANR	1177178	Symbol	IS_NOT_NULL		1176887						
ANR	1177179	Symbol	next_node		1176887						
ANR	1177180	Symbol	* NENCLOSE		1176887						
ANR	1177181	Symbol	qn -> next_head_exact		1176887						
ANR	1177182	Symbol	type		1176887						
ANR	1177183	Symbol	NQTFR		1176887						
ANR	1177184	Symbol	onig_node_new_enclose		1176887						
ANR	1177185	Symbol	* en		1176887						
ANR	1177186	Symbol	qn -> lower		1176887						
ANR	1177187	Symbol	IS_NODE_TYPE_SIMPLE		1176887						
ANR	1177188	Symbol	reg		1176887						
ANR	1177189	Symbol	NT_QTFR		1176887						
ANR	1177190	Symbol	is_not_included		1176887						
ANR	1177191	Symbol	NENCLOSE		1176887						
ANR	1177192	Symbol	ENCLOSE_MEMORY		1176887						
ANR	1177193	Symbol	en -> type		1176887						
ANR	1177194	Symbol	IS_REPEAT_INFINITE		1176887						
ANR	1177195	Symbol	qn		1176887						
ANR	1177196	Symbol	NSTR ( n ) -> s		1176887						
ANR	1177197	Symbol	* * NSTR		1176887						
ANR	1177198	Symbol	NSTR		1176887						
ANR	1177199	Symbol	ENCLOSE_STOP_BACKTRACK		1176887						
ANR	1177200	Symbol	en		1176887						
ANR	1177201	Symbol	* NSTR		1176887						
ANR	1177202	Symbol	n		1176887						
ANR	1177203	Symbol	qn -> target		1176887						
ANR	1177204	Symbol	NENCLOSE ( node ) -> target		1176887						
ANR	1177205	Symbol	get_head_value_node		1176887						
ANR	1177206	Symbol	node		1176887						
ANR	1177207	Symbol	qn -> upper		1176887						
ANR	1177208	Symbol	NST_STOP_BT_SIMPLE_REPEAT		1176887						
ANR	1177209	Symbol	NT_ENCLOSE		1176887						
ANR	1177210	Symbol	en -> target		1176887						
ANR	1177211	Symbol	ttype		1176887						
ANR	1177212	Symbol	x		1176887						
ANR	1177213	Symbol	y		1176887						
ANR	1177214	Symbol	NTYPE		1176887						
ANR	1177215	Symbol	* NSTR ( n ) -> s		1176887						
ANR	1177216	Function	update_string_node_case_fold	3189:0:70846:71726							
ANR	1177217	FunctionDef	"update_string_node_case_fold (regex_t * reg , Node * node)"		1177216	0					
ANR	1177218	CompoundStatement		3191:0:70912:71726	1177216	0					
ANR	1177219	IdentifierDeclStatement	"UChar * p , * end , buf [ ONIGENC_MBC_CASE_FOLD_MAXLEN ] ;"	3192:2:70916:70965	1177216	0	True				
ANR	1177220	IdentifierDecl	* p		1177216	0					
ANR	1177221	IdentifierDeclType	UChar *		1177216	0					
ANR	1177222	Identifier	p		1177216	1					
ANR	1177223	IdentifierDecl	* end		1177216	1					
ANR	1177224	IdentifierDeclType	UChar *		1177216	0					
ANR	1177225	Identifier	end		1177216	1					
ANR	1177226	IdentifierDecl	buf [ ONIGENC_MBC_CASE_FOLD_MAXLEN ]		1177216	2					
ANR	1177227	IdentifierDeclType	UChar [ ONIGENC_MBC_CASE_FOLD_MAXLEN ]		1177216	0					
ANR	1177228	Identifier	buf		1177216	1					
ANR	1177229	Identifier	ONIGENC_MBC_CASE_FOLD_MAXLEN		1177216	2					
ANR	1177230	IdentifierDeclStatement	"UChar * sbuf , * ebuf , * sp ;"	3193:2:70969:70992	1177216	1	True				
ANR	1177231	IdentifierDecl	* sbuf		1177216	0					
ANR	1177232	IdentifierDeclType	UChar *		1177216	0					
ANR	1177233	Identifier	sbuf		1177216	1					
ANR	1177234	IdentifierDecl	* ebuf		1177216	1					
ANR	1177235	IdentifierDeclType	UChar *		1177216	0					
ANR	1177236	Identifier	ebuf		1177216	1					
ANR	1177237	IdentifierDecl	* sp		1177216	2					
ANR	1177238	IdentifierDeclType	UChar *		1177216	0					
ANR	1177239	Identifier	sp		1177216	1					
ANR	1177240	IdentifierDeclStatement	"int r , i , len , sbuf_size ;"	3194:2:70996:71020	1177216	2	True				
ANR	1177241	IdentifierDecl	r		1177216	0					
ANR	1177242	IdentifierDeclType	int		1177216	0					
ANR	1177243	Identifier	r		1177216	1					
ANR	1177244	IdentifierDecl	i		1177216	1					
ANR	1177245	IdentifierDeclType	int		1177216	0					
ANR	1177246	Identifier	i		1177216	1					
ANR	1177247	IdentifierDecl	len		1177216	2					
ANR	1177248	IdentifierDeclType	int		1177216	0					
ANR	1177249	Identifier	len		1177216	1					
ANR	1177250	IdentifierDecl	sbuf_size		1177216	3					
ANR	1177251	IdentifierDeclType	int		1177216	0					
ANR	1177252	Identifier	sbuf_size		1177216	1					
ANR	1177253	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	3195:2:71024:71048	1177216	3	True				
ANR	1177254	IdentifierDecl	* sn = NSTR ( node )		1177216	0					
ANR	1177255	IdentifierDeclType	StrNode *		1177216	0					
ANR	1177256	Identifier	sn		1177216	1					
ANR	1177257	AssignmentExpression	* sn = NSTR ( node )		1177216	2		=			
ANR	1177258	Identifier	sn		1177216	0					
ANR	1177259	CallExpression	NSTR ( node )		1177216	1					
ANR	1177260	Callee	NSTR		1177216	0					
ANR	1177261	Identifier	NSTR		1177216	0					
ANR	1177262	ArgumentList	node		1177216	1					
ANR	1177263	Argument	node		1177216	0					
ANR	1177264	Identifier	node		1177216	0					
ANR	1177265	ExpressionStatement	end = sn -> end	3197:2:71053:71066	1177216	4	True				
ANR	1177266	AssignmentExpression	end = sn -> end		1177216	0		=			
ANR	1177267	Identifier	end		1177216	0					
ANR	1177268	PtrMemberAccess	sn -> end		1177216	1					
ANR	1177269	Identifier	sn		1177216	0					
ANR	1177270	Identifier	end		1177216	1					
ANR	1177271	ExpressionStatement	sbuf_size = ( end - sn -> s ) * 2	3198:2:71070:71099	1177216	5	True				
ANR	1177272	AssignmentExpression	sbuf_size = ( end - sn -> s ) * 2		1177216	0		=			
ANR	1177273	Identifier	sbuf_size		1177216	0					
ANR	1177274	MultiplicativeExpression	( end - sn -> s ) * 2		1177216	1		*			
ANR	1177275	AdditiveExpression	end - sn -> s		1177216	0		-			
ANR	1177276	Identifier	end		1177216	0					
ANR	1177277	PtrMemberAccess	sn -> s		1177216	1					
ANR	1177278	Identifier	sn		1177216	0					
ANR	1177279	Identifier	s		1177216	1					
ANR	1177280	PrimaryExpression	2		1177216	1					
ANR	1177281	ExpressionStatement	sbuf = ( UChar * ) xmalloc ( sbuf_size )	3199:2:71103:71137	1177216	6	True				
ANR	1177282	AssignmentExpression	sbuf = ( UChar * ) xmalloc ( sbuf_size )		1177216	0		=			
ANR	1177283	Identifier	sbuf		1177216	0					
ANR	1177284	CastExpression	( UChar * ) xmalloc ( sbuf_size )		1177216	1					
ANR	1177285	CastTarget	UChar *		1177216	0					
ANR	1177286	CallExpression	xmalloc ( sbuf_size )		1177216	1					
ANR	1177287	Callee	xmalloc		1177216	0					
ANR	1177288	Identifier	xmalloc		1177216	0					
ANR	1177289	ArgumentList	sbuf_size		1177216	1					
ANR	1177290	Argument	sbuf_size		1177216	0					
ANR	1177291	Identifier	sbuf_size		1177216	0					
ANR	1177292	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( sbuf )	3200:2:71141:71171	1177216	7	True				
ANR	1177293	CallExpression	CHECK_NULL_RETURN_MEMERR ( sbuf )		1177216	0					
ANR	1177294	Callee	CHECK_NULL_RETURN_MEMERR		1177216	0					
ANR	1177295	Identifier	CHECK_NULL_RETURN_MEMERR		1177216	0					
ANR	1177296	ArgumentList	sbuf		1177216	1					
ANR	1177297	Argument	sbuf		1177216	0					
ANR	1177298	Identifier	sbuf		1177216	0					
ANR	1177299	ExpressionStatement	ebuf = sbuf + sbuf_size	3201:2:71175:71198	1177216	8	True				
ANR	1177300	AssignmentExpression	ebuf = sbuf + sbuf_size		1177216	0		=			
ANR	1177301	Identifier	ebuf		1177216	0					
ANR	1177302	AdditiveExpression	sbuf + sbuf_size		1177216	1		+			
ANR	1177303	Identifier	sbuf		1177216	0					
ANR	1177304	Identifier	sbuf_size		1177216	1					
ANR	1177305	ExpressionStatement	sp = sbuf	3203:2:71203:71212	1177216	9	True				
ANR	1177306	AssignmentExpression	sp = sbuf		1177216	0		=			
ANR	1177307	Identifier	sp		1177216	0					
ANR	1177308	Identifier	sbuf		1177216	1					
ANR	1177309	ExpressionStatement	p = sn -> s	3204:2:71216:71225	1177216	10	True				
ANR	1177310	AssignmentExpression	p = sn -> s		1177216	0		=			
ANR	1177311	Identifier	p		1177216	0					
ANR	1177312	PtrMemberAccess	sn -> s		1177216	1					
ANR	1177313	Identifier	sn		1177216	0					
ANR	1177314	Identifier	s		1177216	1					
ANR	1177315	WhileStatement	while ( p < end )		1177216	11					
ANR	1177316	Condition	p < end	3205:9:71236:71242	1177216	0	True				
ANR	1177317	RelationalExpression	p < end		1177216	0		<			
ANR	1177318	Identifier	p		1177216	0					
ANR	1177319	Identifier	end		1177216	1					
ANR	1177320	CompoundStatement		15:18:332:332	1177216	1					
ANR	1177321	ExpressionStatement	"len = ONIGENC_MBC_CASE_FOLD ( reg -> enc , reg -> case_fold_flag , & p , end , buf )"	3206:4:71251:71323	1177216	0	True				
ANR	1177322	AssignmentExpression	"len = ONIGENC_MBC_CASE_FOLD ( reg -> enc , reg -> case_fold_flag , & p , end , buf )"		1177216	0		=			
ANR	1177323	Identifier	len		1177216	0					
ANR	1177324	CallExpression	"ONIGENC_MBC_CASE_FOLD ( reg -> enc , reg -> case_fold_flag , & p , end , buf )"		1177216	1					
ANR	1177325	Callee	ONIGENC_MBC_CASE_FOLD		1177216	0					
ANR	1177326	Identifier	ONIGENC_MBC_CASE_FOLD		1177216	0					
ANR	1177327	ArgumentList	reg -> enc		1177216	1					
ANR	1177328	Argument	reg -> enc		1177216	0					
ANR	1177329	PtrMemberAccess	reg -> enc		1177216	0					
ANR	1177330	Identifier	reg		1177216	0					
ANR	1177331	Identifier	enc		1177216	1					
ANR	1177332	Argument	reg -> case_fold_flag		1177216	1					
ANR	1177333	PtrMemberAccess	reg -> case_fold_flag		1177216	0					
ANR	1177334	Identifier	reg		1177216	0					
ANR	1177335	Identifier	case_fold_flag		1177216	1					
ANR	1177336	Argument	& p		1177216	2					
ANR	1177337	UnaryOperationExpression	& p		1177216	0					
ANR	1177338	UnaryOperator	&		1177216	0					
ANR	1177339	Identifier	p		1177216	1					
ANR	1177340	Argument	end		1177216	3					
ANR	1177341	Identifier	end		1177216	0					
ANR	1177342	Argument	buf		1177216	4					
ANR	1177343	Identifier	buf		1177216	0					
ANR	1177344	ForStatement	for ( i = 0 ; i < len ; i ++ )		1177216	1					
ANR	1177345	ForInit	i = 0 ;	3207:9:71334:71339	1177216	0	True				
ANR	1177346	AssignmentExpression	i = 0		1177216	0		=			
ANR	1177347	Identifier	i		1177216	0					
ANR	1177348	PrimaryExpression	0		1177216	1					
ANR	1177349	Condition	i < len	3207:16:71341:71347	1177216	1	True				
ANR	1177350	RelationalExpression	i < len		1177216	0		<			
ANR	1177351	Identifier	i		1177216	0					
ANR	1177352	Identifier	len		1177216	1					
ANR	1177353	PostIncDecOperationExpression	i ++	3207:25:71350:71352	1177216	2	True				
ANR	1177354	Identifier	i		1177216	0					
ANR	1177355	IncDec	++		1177216	1					
ANR	1177356	CompoundStatement		17:30:442:442	1177216	3					
ANR	1177357	IfStatement	if ( sp >= ebuf )		1177216	0					
ANR	1177358	Condition	sp >= ebuf	3208:10:71367:71376	1177216	0	True				
ANR	1177359	RelationalExpression	sp >= ebuf		1177216	0		>=			
ANR	1177360	Identifier	sp		1177216	0					
ANR	1177361	Identifier	ebuf		1177216	1					
ANR	1177362	CompoundStatement		18:22:466:466	1177216	1					
ANR	1177363	ExpressionStatement	"sbuf = ( UChar * ) xrealloc ( sbuf , sbuf_size * 2 )"	3209:8:71389:71434	1177216	0	True				
ANR	1177364	AssignmentExpression	"sbuf = ( UChar * ) xrealloc ( sbuf , sbuf_size * 2 )"		1177216	0		=			
ANR	1177365	Identifier	sbuf		1177216	0					
ANR	1177366	CastExpression	"( UChar * ) xrealloc ( sbuf , sbuf_size * 2 )"		1177216	1					
ANR	1177367	CastTarget	UChar *		1177216	0					
ANR	1177368	CallExpression	"xrealloc ( sbuf , sbuf_size * 2 )"		1177216	1					
ANR	1177369	Callee	xrealloc		1177216	0					
ANR	1177370	Identifier	xrealloc		1177216	0					
ANR	1177371	ArgumentList	sbuf		1177216	1					
ANR	1177372	Argument	sbuf		1177216	0					
ANR	1177373	Identifier	sbuf		1177216	0					
ANR	1177374	Argument	sbuf_size * 2		1177216	1					
ANR	1177375	MultiplicativeExpression	sbuf_size * 2		1177216	0		*			
ANR	1177376	Identifier	sbuf_size		1177216	0					
ANR	1177377	PrimaryExpression	2		1177216	1					
ANR	1177378	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( sbuf )	3210:8:71444:71474	1177216	1	True				
ANR	1177379	CallExpression	CHECK_NULL_RETURN_MEMERR ( sbuf )		1177216	0					
ANR	1177380	Callee	CHECK_NULL_RETURN_MEMERR		1177216	0					
ANR	1177381	Identifier	CHECK_NULL_RETURN_MEMERR		1177216	0					
ANR	1177382	ArgumentList	sbuf		1177216	1					
ANR	1177383	Argument	sbuf		1177216	0					
ANR	1177384	Identifier	sbuf		1177216	0					
ANR	1177385	ExpressionStatement	sp = sbuf + sbuf_size	3211:8:71484:71505	1177216	2	True				
ANR	1177386	AssignmentExpression	sp = sbuf + sbuf_size		1177216	0		=			
ANR	1177387	Identifier	sp		1177216	0					
ANR	1177388	AdditiveExpression	sbuf + sbuf_size		1177216	1		+			
ANR	1177389	Identifier	sbuf		1177216	0					
ANR	1177390	Identifier	sbuf_size		1177216	1					
ANR	1177391	ExpressionStatement	sbuf_size *= 2	3212:8:71515:71529	1177216	3	True				
ANR	1177392	AssignmentExpression	sbuf_size *= 2		1177216	0		*=			
ANR	1177393	Identifier	sbuf_size		1177216	0					
ANR	1177394	PrimaryExpression	2		1177216	1					
ANR	1177395	ExpressionStatement	ebuf = sbuf + sbuf_size	3213:8:71539:71562	1177216	4	True				
ANR	1177396	AssignmentExpression	ebuf = sbuf + sbuf_size		1177216	0		=			
ANR	1177397	Identifier	ebuf		1177216	0					
ANR	1177398	AdditiveExpression	sbuf + sbuf_size		1177216	1		+			
ANR	1177399	Identifier	sbuf		1177216	0					
ANR	1177400	Identifier	sbuf_size		1177216	1					
ANR	1177401	ExpressionStatement	* sp ++ = buf [ i ]	3216:6:71579:71593	1177216	1	True				
ANR	1177402	AssignmentExpression	* sp ++ = buf [ i ]		1177216	0		=			
ANR	1177403	UnaryOperationExpression	* sp ++		1177216	0					
ANR	1177404	UnaryOperator	*		1177216	0					
ANR	1177405	PostIncDecOperationExpression	sp ++		1177216	1					
ANR	1177406	Identifier	sp		1177216	0					
ANR	1177407	IncDec	++		1177216	1					
ANR	1177408	ArrayIndexing	buf [ i ]		1177216	1					
ANR	1177409	Identifier	buf		1177216	0					
ANR	1177410	Identifier	i		1177216	1					
ANR	1177411	ExpressionStatement	"r = onig_node_str_set ( node , sbuf , sp )"	3220:2:71608:71645	1177216	12	True				
ANR	1177412	AssignmentExpression	"r = onig_node_str_set ( node , sbuf , sp )"		1177216	0		=			
ANR	1177413	Identifier	r		1177216	0					
ANR	1177414	CallExpression	"onig_node_str_set ( node , sbuf , sp )"		1177216	1					
ANR	1177415	Callee	onig_node_str_set		1177216	0					
ANR	1177416	Identifier	onig_node_str_set		1177216	0					
ANR	1177417	ArgumentList	node		1177216	1					
ANR	1177418	Argument	node		1177216	0					
ANR	1177419	Identifier	node		1177216	0					
ANR	1177420	Argument	sbuf		1177216	1					
ANR	1177421	Identifier	sbuf		1177216	0					
ANR	1177422	Argument	sp		1177216	2					
ANR	1177423	Identifier	sp		1177216	0					
ANR	1177424	IfStatement	if ( r != 0 )		1177216	13					
ANR	1177425	Condition	r != 0	3221:6:71653:71658	1177216	0	True				
ANR	1177426	EqualityExpression	r != 0		1177216	0		!=			
ANR	1177427	Identifier	r		1177216	0					
ANR	1177428	PrimaryExpression	0		1177216	1					
ANR	1177429	CompoundStatement		31:14:748:748	1177216	1					
ANR	1177430	ExpressionStatement	xfree ( sbuf )	3222:4:71667:71678	1177216	0	True				
ANR	1177431	CallExpression	xfree ( sbuf )		1177216	0					
ANR	1177432	Callee	xfree		1177216	0					
ANR	1177433	Identifier	xfree		1177216	0					
ANR	1177434	ArgumentList	sbuf		1177216	1					
ANR	1177435	Argument	sbuf		1177216	0					
ANR	1177436	Identifier	sbuf		1177216	0					
ANR	1177437	ReturnStatement	return r ;	3223:4:71684:71692	1177216	1	True				
ANR	1177438	Identifier	r		1177216	0					
ANR	1177439	ExpressionStatement	xfree ( sbuf )	3226:2:71701:71712	1177216	14	True				
ANR	1177440	CallExpression	xfree ( sbuf )		1177216	0					
ANR	1177441	Callee	xfree		1177216	0					
ANR	1177442	Identifier	xfree		1177216	0					
ANR	1177443	ArgumentList	sbuf		1177216	1					
ANR	1177444	Argument	sbuf		1177216	0					
ANR	1177445	Identifier	sbuf		1177216	0					
ANR	1177446	ReturnStatement	return 0 ;	3227:2:71716:71724	1177216	15	True				
ANR	1177447	PrimaryExpression	0		1177216	0					
ANR	1177448	ReturnType	static int		1177216	1					
ANR	1177449	Identifier	update_string_node_case_fold		1177216	2					
ANR	1177450	ParameterList	"regex_t * reg , Node * node"		1177216	3					
ANR	1177451	Parameter	regex_t * reg	3190:29:70886:70897	1177216	0	True				
ANR	1177452	ParameterType	regex_t *		1177216	0					
ANR	1177453	Identifier	reg		1177216	1					
ANR	1177454	Parameter	Node * node	3190:43:70900:70909	1177216	1	True				
ANR	1177455	ParameterType	Node *		1177216	0					
ANR	1177456	Identifier	node		1177216	1					
ANR	1177457	CFGEntryNode	ENTRY		1177216		True				
ANR	1177458	CFGExitNode	EXIT		1177216		True				
ANR	1177459	Symbol	ebuf		1177216						
ANR	1177460	Symbol	* sn		1177216						
ANR	1177461	Symbol	sn -> s		1177216						
ANR	1177462	Symbol	len		1177216						
ANR	1177463	Symbol	reg		1177216						
ANR	1177464	Symbol	sbuf		1177216						
ANR	1177465	Symbol	xmalloc		1177216						
ANR	1177466	Symbol	end		1177216						
ANR	1177467	Symbol	sn		1177216						
ANR	1177468	Symbol	sn -> end		1177216						
ANR	1177469	Symbol	xrealloc		1177216						
ANR	1177470	Symbol	sp		1177216						
ANR	1177471	Symbol	* buf		1177216						
ANR	1177472	Symbol	* sp ++		1177216						
ANR	1177473	Symbol	onig_node_str_set		1177216						
ANR	1177474	Symbol	NSTR		1177216						
ANR	1177475	Symbol	sbuf_size		1177216						
ANR	1177476	Symbol	i		1177216						
ANR	1177477	Symbol	reg -> enc		1177216						
ANR	1177478	Symbol	p		1177216						
ANR	1177479	Symbol	node		1177216						
ANR	1177480	Symbol	buf		1177216						
ANR	1177481	Symbol	r		1177216						
ANR	1177482	Symbol	* i		1177216						
ANR	1177483	Symbol	ONIGENC_MBC_CASE_FOLD		1177216						
ANR	1177484	Symbol	& p		1177216						
ANR	1177485	Symbol	reg -> case_fold_flag		1177216						
ANR	1177486	Symbol	* reg		1177216						
ANR	1177487	Function	expand_case_fold_make_rem_string	3230:0:71729:72138							
ANR	1177488	FunctionDef	"expand_case_fold_make_rem_string (Node * * rnode , UChar * s , UChar * end , regex_t * reg)"		1177487	0					
ANR	1177489	CompoundStatement		3233:0:71828:72138	1177487	0					
ANR	1177490	IdentifierDeclStatement	int r ;	3234:2:71832:71837	1177487	0	True				
ANR	1177491	IdentifierDecl	r		1177487	0					
ANR	1177492	IdentifierDeclType	int		1177487	0					
ANR	1177493	Identifier	r		1177487	1					
ANR	1177494	IdentifierDeclStatement	Node * node ;	3235:2:71841:71851	1177487	1	True				
ANR	1177495	IdentifierDecl	* node		1177487	0					
ANR	1177496	IdentifierDeclType	Node *		1177487	0					
ANR	1177497	Identifier	node		1177487	1					
ANR	1177498	ExpressionStatement	"node = onig_node_new_str ( s , end )"	3237:2:71856:71888	1177487	2	True				
ANR	1177499	AssignmentExpression	"node = onig_node_new_str ( s , end )"		1177487	0		=			
ANR	1177500	Identifier	node		1177487	0					
ANR	1177501	CallExpression	"onig_node_new_str ( s , end )"		1177487	1					
ANR	1177502	Callee	onig_node_new_str		1177487	0					
ANR	1177503	Identifier	onig_node_new_str		1177487	0					
ANR	1177504	ArgumentList	s		1177487	1					
ANR	1177505	Argument	s		1177487	0					
ANR	1177506	Identifier	s		1177487	0					
ANR	1177507	Argument	end		1177487	1					
ANR	1177508	Identifier	end		1177487	0					
ANR	1177509	IfStatement	if ( IS_NULL ( node ) )		1177487	3					
ANR	1177510	Condition	IS_NULL ( node )	3238:6:71896:71908	1177487	0	True				
ANR	1177511	CallExpression	IS_NULL ( node )		1177487	0					
ANR	1177512	Callee	IS_NULL		1177487	0					
ANR	1177513	Identifier	IS_NULL		1177487	0					
ANR	1177514	ArgumentList	node		1177487	1					
ANR	1177515	Argument	node		1177487	0					
ANR	1177516	Identifier	node		1177487	0					
ANR	1177517	ReturnStatement	return ONIGERR_MEMORY ;	3238:21:71911:71932	1177487	1	True				
ANR	1177518	Identifier	ONIGERR_MEMORY		1177487	0					
ANR	1177519	ExpressionStatement	"r = update_string_node_case_fold ( reg , node )"	3240:2:71937:71980	1177487	4	True				
ANR	1177520	AssignmentExpression	"r = update_string_node_case_fold ( reg , node )"		1177487	0		=			
ANR	1177521	Identifier	r		1177487	0					
ANR	1177522	CallExpression	"update_string_node_case_fold ( reg , node )"		1177487	1					
ANR	1177523	Callee	update_string_node_case_fold		1177487	0					
ANR	1177524	Identifier	update_string_node_case_fold		1177487	0					
ANR	1177525	ArgumentList	reg		1177487	1					
ANR	1177526	Argument	reg		1177487	0					
ANR	1177527	Identifier	reg		1177487	0					
ANR	1177528	Argument	node		1177487	1					
ANR	1177529	Identifier	node		1177487	0					
ANR	1177530	IfStatement	if ( r != 0 )		1177487	5					
ANR	1177531	Condition	r != 0	3241:6:71988:71993	1177487	0	True				
ANR	1177532	EqualityExpression	r != 0		1177487	0		!=			
ANR	1177533	Identifier	r		1177487	0					
ANR	1177534	PrimaryExpression	0		1177487	1					
ANR	1177535	CompoundStatement		9:14:167:167	1177487	1					
ANR	1177536	ExpressionStatement	onig_node_free ( node )	3242:4:72002:72022	1177487	0	True				
ANR	1177537	CallExpression	onig_node_free ( node )		1177487	0					
ANR	1177538	Callee	onig_node_free		1177487	0					
ANR	1177539	Identifier	onig_node_free		1177487	0					
ANR	1177540	ArgumentList	node		1177487	1					
ANR	1177541	Argument	node		1177487	0					
ANR	1177542	Identifier	node		1177487	0					
ANR	1177543	ReturnStatement	return r ;	3243:4:72028:72036	1177487	1	True				
ANR	1177544	Identifier	r		1177487	0					
ANR	1177545	ExpressionStatement	NSTRING_SET_AMBIG ( node )	3246:2:72045:72068	1177487	6	True				
ANR	1177546	CallExpression	NSTRING_SET_AMBIG ( node )		1177487	0					
ANR	1177547	Callee	NSTRING_SET_AMBIG		1177487	0					
ANR	1177548	Identifier	NSTRING_SET_AMBIG		1177487	0					
ANR	1177549	ArgumentList	node		1177487	1					
ANR	1177550	Argument	node		1177487	0					
ANR	1177551	Identifier	node		1177487	0					
ANR	1177552	ExpressionStatement	NSTRING_SET_DONT_GET_OPT_INFO ( node )	3247:2:72072:72107	1177487	7	True				
ANR	1177553	CallExpression	NSTRING_SET_DONT_GET_OPT_INFO ( node )		1177487	0					
ANR	1177554	Callee	NSTRING_SET_DONT_GET_OPT_INFO		1177487	0					
ANR	1177555	Identifier	NSTRING_SET_DONT_GET_OPT_INFO		1177487	0					
ANR	1177556	ArgumentList	node		1177487	1					
ANR	1177557	Argument	node		1177487	0					
ANR	1177558	Identifier	node		1177487	0					
ANR	1177559	ExpressionStatement	* rnode = node	3248:2:72111:72124	1177487	8	True				
ANR	1177560	AssignmentExpression	* rnode = node		1177487	0		=			
ANR	1177561	UnaryOperationExpression	* rnode		1177487	0					
ANR	1177562	UnaryOperator	*		1177487	0					
ANR	1177563	Identifier	rnode		1177487	1					
ANR	1177564	Identifier	node		1177487	1					
ANR	1177565	ReturnStatement	return 0 ;	3249:2:72128:72136	1177487	9	True				
ANR	1177566	PrimaryExpression	0		1177487	0					
ANR	1177567	ReturnType	static int		1177487	1					
ANR	1177568	Identifier	expand_case_fold_make_rem_string		1177487	2					
ANR	1177569	ParameterList	"Node * * rnode , UChar * s , UChar * end , regex_t * reg"		1177487	3					
ANR	1177570	Parameter	Node * * rnode	3231:33:71773:71784	1177487	0	True				
ANR	1177571	ParameterType	Node * *		1177487	0					
ANR	1177572	Identifier	rnode		1177487	1					
ANR	1177573	Parameter	UChar * s	3231:47:71787:71794	1177487	1	True				
ANR	1177574	ParameterType	UChar *		1177487	0					
ANR	1177575	Identifier	s		1177487	1					
ANR	1177576	Parameter	UChar * end	3231:57:71797:71806	1177487	2	True				
ANR	1177577	ParameterType	UChar *		1177487	0					
ANR	1177578	Identifier	end		1177487	1					
ANR	1177579	Parameter	regex_t * reg	3232:5:71814:71825	1177487	3	True				
ANR	1177580	ParameterType	regex_t *		1177487	0					
ANR	1177581	Identifier	reg		1177487	1					
ANR	1177582	CFGEntryNode	ENTRY		1177487		True				
ANR	1177583	CFGExitNode	EXIT		1177487		True				
ANR	1177584	Symbol	node		1177487						
ANR	1177585	Symbol	r		1177487						
ANR	1177586	Symbol	s		1177487						
ANR	1177587	Symbol	update_string_node_case_fold		1177487						
ANR	1177588	Symbol	IS_NULL		1177487						
ANR	1177589	Symbol	* rnode		1177487						
ANR	1177590	Symbol	reg		1177487						
ANR	1177591	Symbol	ONIGERR_MEMORY		1177487						
ANR	1177592	Symbol	end		1177487						
ANR	1177593	Symbol	onig_node_new_str		1177487						
ANR	1177594	Symbol	rnode		1177487						
ANR	1177595	Function	expand_case_fold_string_alt	3252:0:72141:74640							
ANR	1177596	FunctionDef	"expand_case_fold_string_alt (int item_num , OnigCaseFoldCodeItem items [ ] , UChar * p , int slen , UChar * end , regex_t * reg , Node * * rnode)"		1177595	0					
ANR	1177597	CompoundStatement		3256:0:72298:74640	1177595	0					
ANR	1177598	IdentifierDeclStatement	"int r , i , j , len , varlen ;"	3257:2:72302:72326	1177595	0	True				
ANR	1177599	IdentifierDecl	r		1177595	0					
ANR	1177600	IdentifierDeclType	int		1177595	0					
ANR	1177601	Identifier	r		1177595	1					
ANR	1177602	IdentifierDecl	i		1177595	1					
ANR	1177603	IdentifierDeclType	int		1177595	0					
ANR	1177604	Identifier	i		1177595	1					
ANR	1177605	IdentifierDecl	j		1177595	2					
ANR	1177606	IdentifierDeclType	int		1177595	0					
ANR	1177607	Identifier	j		1177595	1					
ANR	1177608	IdentifierDecl	len		1177595	3					
ANR	1177609	IdentifierDeclType	int		1177595	0					
ANR	1177610	Identifier	len		1177595	1					
ANR	1177611	IdentifierDecl	varlen		1177595	4					
ANR	1177612	IdentifierDeclType	int		1177595	0					
ANR	1177613	Identifier	varlen		1177595	1					
ANR	1177614	IdentifierDeclStatement	"Node * anode , * var_anode , * snode , * xnode , * an ;"	3258:2:72330:72374	1177595	1	True				
ANR	1177615	IdentifierDecl	* anode		1177595	0					
ANR	1177616	IdentifierDeclType	Node *		1177595	0					
ANR	1177617	Identifier	anode		1177595	1					
ANR	1177618	IdentifierDecl	* var_anode		1177595	1					
ANR	1177619	IdentifierDeclType	Node *		1177595	0					
ANR	1177620	Identifier	var_anode		1177595	1					
ANR	1177621	IdentifierDecl	* snode		1177595	2					
ANR	1177622	IdentifierDeclType	Node *		1177595	0					
ANR	1177623	Identifier	snode		1177595	1					
ANR	1177624	IdentifierDecl	* xnode		1177595	3					
ANR	1177625	IdentifierDeclType	Node *		1177595	0					
ANR	1177626	Identifier	xnode		1177595	1					
ANR	1177627	IdentifierDecl	* an		1177595	4					
ANR	1177628	IdentifierDeclType	Node *		1177595	0					
ANR	1177629	Identifier	an		1177595	1					
ANR	1177630	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	3259:2:72378:72415	1177595	2	True				
ANR	1177631	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		1177595	0					
ANR	1177632	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		1177595	0					
ANR	1177633	Identifier	buf		1177595	1					
ANR	1177634	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		1177595	2					
ANR	1177635	ExpressionStatement	* rnode = var_anode = NULL_NODE	3261:2:72420:72450	1177595	3	True				
ANR	1177636	AssignmentExpression	* rnode = var_anode = NULL_NODE		1177595	0		=			
ANR	1177637	UnaryOperationExpression	* rnode		1177595	0					
ANR	1177638	UnaryOperator	*		1177595	0					
ANR	1177639	Identifier	rnode		1177595	1					
ANR	1177640	AssignmentExpression	var_anode = NULL_NODE		1177595	1		=			
ANR	1177641	Identifier	var_anode		1177595	0					
ANR	1177642	Identifier	NULL_NODE		1177595	1					
ANR	1177643	ExpressionStatement	varlen = 0	3263:2:72455:72465	1177595	4	True				
ANR	1177644	AssignmentExpression	varlen = 0		1177595	0		=			
ANR	1177645	Identifier	varlen		1177595	0					
ANR	1177646	PrimaryExpression	0		1177595	1					
ANR	1177647	ForStatement	for ( i = 0 ; i < item_num ; i ++ )		1177595	5					
ANR	1177648	ForInit	i = 0 ;	3264:7:72474:72479	1177595	0	True				
ANR	1177649	AssignmentExpression	i = 0		1177595	0		=			
ANR	1177650	Identifier	i		1177595	0					
ANR	1177651	PrimaryExpression	0		1177595	1					
ANR	1177652	Condition	i < item_num	3264:14:72481:72492	1177595	1	True				
ANR	1177653	RelationalExpression	i < item_num		1177595	0		<			
ANR	1177654	Identifier	i		1177595	0					
ANR	1177655	Identifier	item_num		1177595	1					
ANR	1177656	PostIncDecOperationExpression	i ++	3264:28:72495:72497	1177595	2	True				
ANR	1177657	Identifier	i		1177595	0					
ANR	1177658	IncDec	++		1177595	1					
ANR	1177659	CompoundStatement		9:33:201:201	1177595	3					
ANR	1177660	IfStatement	if ( items [ i ] . byte_len != slen )		1177595	0					
ANR	1177661	Condition	items [ i ] . byte_len != slen	3265:8:72510:72534	1177595	0	True				
ANR	1177662	EqualityExpression	items [ i ] . byte_len != slen		1177595	0		!=			
ANR	1177663	MemberAccess	items [ i ] . byte_len		1177595	0					
ANR	1177664	ArrayIndexing	items [ i ]		1177595	0					
ANR	1177665	Identifier	items		1177595	0					
ANR	1177666	Identifier	i		1177595	1					
ANR	1177667	Identifier	byte_len		1177595	1					
ANR	1177668	Identifier	slen		1177595	1					
ANR	1177669	CompoundStatement		10:35:238:238	1177595	1					
ANR	1177670	ExpressionStatement	varlen = 1	3266:6:72545:72555	1177595	0	True				
ANR	1177671	AssignmentExpression	varlen = 1		1177595	0		=			
ANR	1177672	Identifier	varlen		1177595	0					
ANR	1177673	PrimaryExpression	1		1177595	1					
ANR	1177674	BreakStatement	break ;	3267:6:72563:72568	1177595	1	True				
ANR	1177675	IfStatement	if ( varlen != 0 )		1177595	6					
ANR	1177676	Condition	varlen != 0	3271:6:72587:72597	1177595	0	True				
ANR	1177677	EqualityExpression	varlen != 0		1177595	0		!=			
ANR	1177678	Identifier	varlen		1177595	0					
ANR	1177679	PrimaryExpression	0		1177595	1					
ANR	1177680	CompoundStatement		16:19:301:301	1177595	1					
ANR	1177681	ExpressionStatement	"* rnode = var_anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"	3272:4:72606:72666	1177595	0	True				
ANR	1177682	AssignmentExpression	"* rnode = var_anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"		1177595	0		=			
ANR	1177683	UnaryOperationExpression	* rnode		1177595	0					
ANR	1177684	UnaryOperator	*		1177595	0					
ANR	1177685	Identifier	rnode		1177595	1					
ANR	1177686	AssignmentExpression	"var_anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"		1177595	1		=			
ANR	1177687	Identifier	var_anode		1177595	0					
ANR	1177688	CallExpression	"onig_node_new_alt ( NULL_NODE , NULL_NODE )"		1177595	1					
ANR	1177689	Callee	onig_node_new_alt		1177595	0					
ANR	1177690	Identifier	onig_node_new_alt		1177595	0					
ANR	1177691	ArgumentList	NULL_NODE		1177595	1					
ANR	1177692	Argument	NULL_NODE		1177595	0					
ANR	1177693	Identifier	NULL_NODE		1177595	0					
ANR	1177694	Argument	NULL_NODE		1177595	1					
ANR	1177695	Identifier	NULL_NODE		1177595	0					
ANR	1177696	IfStatement	if ( IS_NULL ( var_anode ) )		1177595	1					
ANR	1177697	Condition	IS_NULL ( var_anode )	3273:8:72676:72693	1177595	0	True				
ANR	1177698	CallExpression	IS_NULL ( var_anode )		1177595	0					
ANR	1177699	Callee	IS_NULL		1177595	0					
ANR	1177700	Identifier	IS_NULL		1177595	0					
ANR	1177701	ArgumentList	var_anode		1177595	1					
ANR	1177702	Argument	var_anode		1177595	0					
ANR	1177703	Identifier	var_anode		1177595	0					
ANR	1177704	ReturnStatement	return ONIGERR_MEMORY ;	3273:28:72696:72717	1177595	1	True				
ANR	1177705	Identifier	ONIGERR_MEMORY		1177595	0					
ANR	1177706	ExpressionStatement	"xnode = onig_node_new_list ( NULL , NULL )"	3275:4:72724:72762	1177595	2	True				
ANR	1177707	AssignmentExpression	"xnode = onig_node_new_list ( NULL , NULL )"		1177595	0		=			
ANR	1177708	Identifier	xnode		1177595	0					
ANR	1177709	CallExpression	"onig_node_new_list ( NULL , NULL )"		1177595	1					
ANR	1177710	Callee	onig_node_new_list		1177595	0					
ANR	1177711	Identifier	onig_node_new_list		1177595	0					
ANR	1177712	ArgumentList	NULL		1177595	1					
ANR	1177713	Argument	NULL		1177595	0					
ANR	1177714	Identifier	NULL		1177595	0					
ANR	1177715	Argument	NULL		1177595	1					
ANR	1177716	Identifier	NULL		1177595	0					
ANR	1177717	IfStatement	if ( IS_NULL ( xnode ) )		1177595	3					
ANR	1177718	Condition	IS_NULL ( xnode )	3276:8:72772:72785	1177595	0	True				
ANR	1177719	CallExpression	IS_NULL ( xnode )		1177595	0					
ANR	1177720	Callee	IS_NULL		1177595	0					
ANR	1177721	Identifier	IS_NULL		1177595	0					
ANR	1177722	ArgumentList	xnode		1177595	1					
ANR	1177723	Argument	xnode		1177595	0					
ANR	1177724	Identifier	xnode		1177595	0					
ANR	1177725	GotoStatement	goto mem_err ;	3276:24:72788:72800	1177595	1	True				
ANR	1177726	Identifier	mem_err		1177595	0					
ANR	1177727	ExpressionStatement	NCAR ( var_anode ) = xnode	3277:4:72806:72829	1177595	4	True				
ANR	1177728	AssignmentExpression	NCAR ( var_anode ) = xnode		1177595	0		=			
ANR	1177729	CallExpression	NCAR ( var_anode )		1177595	0					
ANR	1177730	Callee	NCAR		1177595	0					
ANR	1177731	Identifier	NCAR		1177595	0					
ANR	1177732	ArgumentList	var_anode		1177595	1					
ANR	1177733	Argument	var_anode		1177595	0					
ANR	1177734	Identifier	var_anode		1177595	0					
ANR	1177735	Identifier	xnode		1177595	1					
ANR	1177736	ExpressionStatement	"anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"	3279:4:72836:72883	1177595	5	True				
ANR	1177737	AssignmentExpression	"anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"		1177595	0		=			
ANR	1177738	Identifier	anode		1177595	0					
ANR	1177739	CallExpression	"onig_node_new_alt ( NULL_NODE , NULL_NODE )"		1177595	1					
ANR	1177740	Callee	onig_node_new_alt		1177595	0					
ANR	1177741	Identifier	onig_node_new_alt		1177595	0					
ANR	1177742	ArgumentList	NULL_NODE		1177595	1					
ANR	1177743	Argument	NULL_NODE		1177595	0					
ANR	1177744	Identifier	NULL_NODE		1177595	0					
ANR	1177745	Argument	NULL_NODE		1177595	1					
ANR	1177746	Identifier	NULL_NODE		1177595	0					
ANR	1177747	IfStatement	if ( IS_NULL ( anode ) )		1177595	6					
ANR	1177748	Condition	IS_NULL ( anode )	3280:8:72893:72906	1177595	0	True				
ANR	1177749	CallExpression	IS_NULL ( anode )		1177595	0					
ANR	1177750	Callee	IS_NULL		1177595	0					
ANR	1177751	Identifier	IS_NULL		1177595	0					
ANR	1177752	ArgumentList	anode		1177595	1					
ANR	1177753	Argument	anode		1177595	0					
ANR	1177754	Identifier	anode		1177595	0					
ANR	1177755	GotoStatement	goto mem_err ;	3280:24:72909:72921	1177595	1	True				
ANR	1177756	Identifier	mem_err		1177595	0					
ANR	1177757	ExpressionStatement	NCAR ( xnode ) = anode	3281:4:72927:72946	1177595	7	True				
ANR	1177758	AssignmentExpression	NCAR ( xnode ) = anode		1177595	0		=			
ANR	1177759	CallExpression	NCAR ( xnode )		1177595	0					
ANR	1177760	Callee	NCAR		1177595	0					
ANR	1177761	Identifier	NCAR		1177595	0					
ANR	1177762	ArgumentList	xnode		1177595	1					
ANR	1177763	Argument	xnode		1177595	0					
ANR	1177764	Identifier	xnode		1177595	0					
ANR	1177765	Identifier	anode		1177595	1					
ANR	1177766	ElseStatement	else		1177595	0					
ANR	1177767	CompoundStatement		28:7:660:660	1177595	0					
ANR	1177768	ExpressionStatement	"* rnode = anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"	3284:4:72965:73021	1177595	0	True				
ANR	1177769	AssignmentExpression	"* rnode = anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"		1177595	0		=			
ANR	1177770	UnaryOperationExpression	* rnode		1177595	0					
ANR	1177771	UnaryOperator	*		1177595	0					
ANR	1177772	Identifier	rnode		1177595	1					
ANR	1177773	AssignmentExpression	"anode = onig_node_new_alt ( NULL_NODE , NULL_NODE )"		1177595	1		=			
ANR	1177774	Identifier	anode		1177595	0					
ANR	1177775	CallExpression	"onig_node_new_alt ( NULL_NODE , NULL_NODE )"		1177595	1					
ANR	1177776	Callee	onig_node_new_alt		1177595	0					
ANR	1177777	Identifier	onig_node_new_alt		1177595	0					
ANR	1177778	ArgumentList	NULL_NODE		1177595	1					
ANR	1177779	Argument	NULL_NODE		1177595	0					
ANR	1177780	Identifier	NULL_NODE		1177595	0					
ANR	1177781	Argument	NULL_NODE		1177595	1					
ANR	1177782	Identifier	NULL_NODE		1177595	0					
ANR	1177783	IfStatement	if ( IS_NULL ( anode ) )		1177595	1					
ANR	1177784	Condition	IS_NULL ( anode )	3285:8:73031:73044	1177595	0	True				
ANR	1177785	CallExpression	IS_NULL ( anode )		1177595	0					
ANR	1177786	Callee	IS_NULL		1177595	0					
ANR	1177787	Identifier	IS_NULL		1177595	0					
ANR	1177788	ArgumentList	anode		1177595	1					
ANR	1177789	Argument	anode		1177595	0					
ANR	1177790	Identifier	anode		1177595	0					
ANR	1177791	ReturnStatement	return ONIGERR_MEMORY ;	3285:24:73047:73068	1177595	1	True				
ANR	1177792	Identifier	ONIGERR_MEMORY		1177595	0					
ANR	1177793	ExpressionStatement	"snode = onig_node_new_str ( p , p + slen )"	3288:2:73077:73115	1177595	7	True				
ANR	1177794	AssignmentExpression	"snode = onig_node_new_str ( p , p + slen )"		1177595	0		=			
ANR	1177795	Identifier	snode		1177595	0					
ANR	1177796	CallExpression	"onig_node_new_str ( p , p + slen )"		1177595	1					
ANR	1177797	Callee	onig_node_new_str		1177595	0					
ANR	1177798	Identifier	onig_node_new_str		1177595	0					
ANR	1177799	ArgumentList	p		1177595	1					
ANR	1177800	Argument	p		1177595	0					
ANR	1177801	Identifier	p		1177595	0					
ANR	1177802	Argument	p + slen		1177595	1					
ANR	1177803	AdditiveExpression	p + slen		1177595	0		+			
ANR	1177804	Identifier	p		1177595	0					
ANR	1177805	Identifier	slen		1177595	1					
ANR	1177806	IfStatement	if ( IS_NULL ( snode ) )		1177595	8					
ANR	1177807	Condition	IS_NULL ( snode )	3289:6:73123:73136	1177595	0	True				
ANR	1177808	CallExpression	IS_NULL ( snode )		1177595	0					
ANR	1177809	Callee	IS_NULL		1177595	0					
ANR	1177810	Identifier	IS_NULL		1177595	0					
ANR	1177811	ArgumentList	snode		1177595	1					
ANR	1177812	Argument	snode		1177595	0					
ANR	1177813	Identifier	snode		1177595	0					
ANR	1177814	GotoStatement	goto mem_err ;	3289:22:73139:73151	1177595	1	True				
ANR	1177815	Identifier	mem_err		1177595	0					
ANR	1177816	ExpressionStatement	NCAR ( anode ) = snode	3291:2:73156:73175	1177595	9	True				
ANR	1177817	AssignmentExpression	NCAR ( anode ) = snode		1177595	0		=			
ANR	1177818	CallExpression	NCAR ( anode )		1177595	0					
ANR	1177819	Callee	NCAR		1177595	0					
ANR	1177820	Identifier	NCAR		1177595	0					
ANR	1177821	ArgumentList	anode		1177595	1					
ANR	1177822	Argument	anode		1177595	0					
ANR	1177823	Identifier	anode		1177595	0					
ANR	1177824	Identifier	snode		1177595	1					
ANR	1177825	ForStatement	for ( i = 0 ; i < item_num ; i ++ )		1177595	10					
ANR	1177826	ForInit	i = 0 ;	3293:7:73185:73190	1177595	0	True				
ANR	1177827	AssignmentExpression	i = 0		1177595	0		=			
ANR	1177828	Identifier	i		1177595	0					
ANR	1177829	PrimaryExpression	0		1177595	1					
ANR	1177830	Condition	i < item_num	3293:14:73192:73203	1177595	1	True				
ANR	1177831	RelationalExpression	i < item_num		1177595	0		<			
ANR	1177832	Identifier	i		1177595	0					
ANR	1177833	Identifier	item_num		1177595	1					
ANR	1177834	PostIncDecOperationExpression	i ++	3293:28:73206:73208	1177595	2	True				
ANR	1177835	Identifier	i		1177595	0					
ANR	1177836	IncDec	++		1177595	1					
ANR	1177837	CompoundStatement		38:33:912:912	1177595	3					
ANR	1177838	ExpressionStatement	"snode = onig_node_new_str ( NULL , NULL )"	3294:4:73217:73254	1177595	0	True				
ANR	1177839	AssignmentExpression	"snode = onig_node_new_str ( NULL , NULL )"		1177595	0		=			
ANR	1177840	Identifier	snode		1177595	0					
ANR	1177841	CallExpression	"onig_node_new_str ( NULL , NULL )"		1177595	1					
ANR	1177842	Callee	onig_node_new_str		1177595	0					
ANR	1177843	Identifier	onig_node_new_str		1177595	0					
ANR	1177844	ArgumentList	NULL		1177595	1					
ANR	1177845	Argument	NULL		1177595	0					
ANR	1177846	Identifier	NULL		1177595	0					
ANR	1177847	Argument	NULL		1177595	1					
ANR	1177848	Identifier	NULL		1177595	0					
ANR	1177849	IfStatement	if ( IS_NULL ( snode ) )		1177595	1					
ANR	1177850	Condition	IS_NULL ( snode )	3295:8:73264:73277	1177595	0	True				
ANR	1177851	CallExpression	IS_NULL ( snode )		1177595	0					
ANR	1177852	Callee	IS_NULL		1177595	0					
ANR	1177853	Identifier	IS_NULL		1177595	0					
ANR	1177854	ArgumentList	snode		1177595	1					
ANR	1177855	Argument	snode		1177595	0					
ANR	1177856	Identifier	snode		1177595	0					
ANR	1177857	GotoStatement	goto mem_err ;	3295:24:73280:73292	1177595	1	True				
ANR	1177858	Identifier	mem_err		1177595	0					
ANR	1177859	ForStatement	for ( j = 0 ; j < items [ i ] . code_len ; j ++ )		1177595	2					
ANR	1177860	ForInit	j = 0 ;	3297:9:73308:73313	1177595	0	True				
ANR	1177861	AssignmentExpression	j = 0		1177595	0		=			
ANR	1177862	Identifier	j		1177595	0					
ANR	1177863	PrimaryExpression	0		1177595	1					
ANR	1177864	Condition	j < items [ i ] . code_len	3297:16:73315:73335	1177595	1	True				
ANR	1177865	RelationalExpression	j < items [ i ] . code_len		1177595	0		<			
ANR	1177866	Identifier	j		1177595	0					
ANR	1177867	MemberAccess	items [ i ] . code_len		1177595	1					
ANR	1177868	ArrayIndexing	items [ i ]		1177595	0					
ANR	1177869	Identifier	items		1177595	0					
ANR	1177870	Identifier	i		1177595	1					
ANR	1177871	Identifier	code_len		1177595	1					
ANR	1177872	PostIncDecOperationExpression	j ++	3297:39:73338:73340	1177595	2	True				
ANR	1177873	Identifier	j		1177595	0					
ANR	1177874	IncDec	++		1177595	1					
ANR	1177875	CompoundStatement		42:44:1044:1044	1177595	3					
ANR	1177876	ExpressionStatement	"len = ONIGENC_CODE_TO_MBC ( reg -> enc , items [ i ] . code [ j ] , buf )"	3298:6:73351:73409	1177595	0	True				
ANR	1177877	AssignmentExpression	"len = ONIGENC_CODE_TO_MBC ( reg -> enc , items [ i ] . code [ j ] , buf )"		1177595	0		=			
ANR	1177878	Identifier	len		1177595	0					
ANR	1177879	CallExpression	"ONIGENC_CODE_TO_MBC ( reg -> enc , items [ i ] . code [ j ] , buf )"		1177595	1					
ANR	1177880	Callee	ONIGENC_CODE_TO_MBC		1177595	0					
ANR	1177881	Identifier	ONIGENC_CODE_TO_MBC		1177595	0					
ANR	1177882	ArgumentList	reg -> enc		1177595	1					
ANR	1177883	Argument	reg -> enc		1177595	0					
ANR	1177884	PtrMemberAccess	reg -> enc		1177595	0					
ANR	1177885	Identifier	reg		1177595	0					
ANR	1177886	Identifier	enc		1177595	1					
ANR	1177887	Argument	items [ i ] . code [ j ]		1177595	1					
ANR	1177888	ArrayIndexing	items [ i ] . code [ j ]		1177595	0					
ANR	1177889	MemberAccess	items [ i ] . code		1177595	0					
ANR	1177890	ArrayIndexing	items [ i ]		1177595	0					
ANR	1177891	Identifier	items		1177595	0					
ANR	1177892	Identifier	i		1177595	1					
ANR	1177893	Identifier	code		1177595	1					
ANR	1177894	Identifier	j		1177595	1					
ANR	1177895	Argument	buf		1177595	2					
ANR	1177896	Identifier	buf		1177595	0					
ANR	1177897	IfStatement	if ( len < 0 )		1177595	1					
ANR	1177898	Condition	len < 0	3299:10:73421:73427	1177595	0	True				
ANR	1177899	RelationalExpression	len < 0		1177595	0		<			
ANR	1177900	Identifier	len		1177595	0					
ANR	1177901	PrimaryExpression	0		1177595	1					
ANR	1177902	CompoundStatement		44:19:1131:1131	1177595	1					
ANR	1177903	ExpressionStatement	r = len	3300:1:73433:73440	1177595	0	True				
ANR	1177904	AssignmentExpression	r = len		1177595	0		=			
ANR	1177905	Identifier	r		1177595	0					
ANR	1177906	Identifier	len		1177595	1					
ANR	1177907	GotoStatement	goto mem_err2 ;	3301:1:73443:73456	1177595	1	True				
ANR	1177908	Identifier	mem_err2		1177595	0					
ANR	1177909	ExpressionStatement	"r = onig_node_str_cat ( snode , buf , buf + len )"	3304:6:73473:73517	1177595	2	True				
ANR	1177910	AssignmentExpression	"r = onig_node_str_cat ( snode , buf , buf + len )"		1177595	0		=			
ANR	1177911	Identifier	r		1177595	0					
ANR	1177912	CallExpression	"onig_node_str_cat ( snode , buf , buf + len )"		1177595	1					
ANR	1177913	Callee	onig_node_str_cat		1177595	0					
ANR	1177914	Identifier	onig_node_str_cat		1177595	0					
ANR	1177915	ArgumentList	snode		1177595	1					
ANR	1177916	Argument	snode		1177595	0					
ANR	1177917	Identifier	snode		1177595	0					
ANR	1177918	Argument	buf		1177595	1					
ANR	1177919	Identifier	buf		1177595	0					
ANR	1177920	Argument	buf + len		1177595	2					
ANR	1177921	AdditiveExpression	buf + len		1177595	0		+			
ANR	1177922	Identifier	buf		1177595	0					
ANR	1177923	Identifier	len		1177595	1					
ANR	1177924	IfStatement	if ( r != 0 )		1177595	3					
ANR	1177925	Condition	r != 0	3305:10:73529:73534	1177595	0	True				
ANR	1177926	EqualityExpression	r != 0		1177595	0		!=			
ANR	1177927	Identifier	r		1177595	0					
ANR	1177928	PrimaryExpression	0		1177595	1					
ANR	1177929	GotoStatement	goto mem_err2 ;	3305:18:73537:73550	1177595	1	True				
ANR	1177930	Identifier	mem_err2		1177595	0					
ANR	1177931	ExpressionStatement	"an = onig_node_new_alt ( NULL_NODE , NULL_NODE )"	3308:4:73563:73607	1177595	3	True				
ANR	1177932	AssignmentExpression	"an = onig_node_new_alt ( NULL_NODE , NULL_NODE )"		1177595	0		=			
ANR	1177933	Identifier	an		1177595	0					
ANR	1177934	CallExpression	"onig_node_new_alt ( NULL_NODE , NULL_NODE )"		1177595	1					
ANR	1177935	Callee	onig_node_new_alt		1177595	0					
ANR	1177936	Identifier	onig_node_new_alt		1177595	0					
ANR	1177937	ArgumentList	NULL_NODE		1177595	1					
ANR	1177938	Argument	NULL_NODE		1177595	0					
ANR	1177939	Identifier	NULL_NODE		1177595	0					
ANR	1177940	Argument	NULL_NODE		1177595	1					
ANR	1177941	Identifier	NULL_NODE		1177595	0					
ANR	1177942	IfStatement	if ( IS_NULL ( an ) )		1177595	4					
ANR	1177943	Condition	IS_NULL ( an )	3309:8:73617:73627	1177595	0	True				
ANR	1177944	CallExpression	IS_NULL ( an )		1177595	0					
ANR	1177945	Callee	IS_NULL		1177595	0					
ANR	1177946	Identifier	IS_NULL		1177595	0					
ANR	1177947	ArgumentList	an		1177595	1					
ANR	1177948	Argument	an		1177595	0					
ANR	1177949	Identifier	an		1177595	0					
ANR	1177950	CompoundStatement		54:21:1331:1331	1177595	1					
ANR	1177951	GotoStatement	goto mem_err2 ;	3310:6:73638:73651	1177595	0	True				
ANR	1177952	Identifier	mem_err2		1177595	0					
ANR	1177953	IfStatement	if ( items [ i ] . byte_len != slen )		1177595	5					
ANR	1177954	Condition	items [ i ] . byte_len != slen	3313:8:73668:73692	1177595	0	True				
ANR	1177955	EqualityExpression	items [ i ] . byte_len != slen		1177595	0		!=			
ANR	1177956	MemberAccess	items [ i ] . byte_len		1177595	0					
ANR	1177957	ArrayIndexing	items [ i ]		1177595	0					
ANR	1177958	Identifier	items		1177595	0					
ANR	1177959	Identifier	i		1177595	1					
ANR	1177960	Identifier	byte_len		1177595	1					
ANR	1177961	Identifier	slen		1177595	1					
ANR	1177962	CompoundStatement		60:6:1421:1453	1177595	1					
ANR	1177963	IdentifierDeclStatement	Node * rem ;	3314:6:73703:73712	1177595	0	True				
ANR	1177964	IdentifierDecl	* rem		1177595	0					
ANR	1177965	IdentifierDeclType	Node *		1177595	0					
ANR	1177966	Identifier	rem		1177595	1					
ANR	1177967	IdentifierDeclStatement	UChar * q = p + items [ i ] . byte_len ;	3315:6:73720:73752	1177595	1	True				
ANR	1177968	IdentifierDecl	* q = p + items [ i ] . byte_len		1177595	0					
ANR	1177969	IdentifierDeclType	UChar *		1177595	0					
ANR	1177970	Identifier	q		1177595	1					
ANR	1177971	AssignmentExpression	* q = p + items [ i ] . byte_len		1177595	2		=			
ANR	1177972	Identifier	q		1177595	0					
ANR	1177973	AdditiveExpression	p + items [ i ] . byte_len		1177595	1		+			
ANR	1177974	Identifier	p		1177595	0					
ANR	1177975	MemberAccess	items [ i ] . byte_len		1177595	1					
ANR	1177976	ArrayIndexing	items [ i ]		1177595	0					
ANR	1177977	Identifier	items		1177595	0					
ANR	1177978	Identifier	i		1177595	1					
ANR	1177979	Identifier	byte_len		1177595	1					
ANR	1177980	IfStatement	if ( q < end )		1177595	2					
ANR	1177981	Condition	q < end	3317:10:73765:73771	1177595	0	True				
ANR	1177982	RelationalExpression	q < end		1177595	0		<			
ANR	1177983	Identifier	q		1177595	0					
ANR	1177984	Identifier	end		1177595	1					
ANR	1177985	CompoundStatement		62:19:1475:1475	1177595	1					
ANR	1177986	ExpressionStatement	"r = expand_case_fold_make_rem_string ( & rem , q , end , reg )"	3318:8:73784:73839	1177595	0	True				
ANR	1177987	AssignmentExpression	"r = expand_case_fold_make_rem_string ( & rem , q , end , reg )"		1177595	0		=			
ANR	1177988	Identifier	r		1177595	0					
ANR	1177989	CallExpression	"expand_case_fold_make_rem_string ( & rem , q , end , reg )"		1177595	1					
ANR	1177990	Callee	expand_case_fold_make_rem_string		1177595	0					
ANR	1177991	Identifier	expand_case_fold_make_rem_string		1177595	0					
ANR	1177992	ArgumentList	& rem		1177595	1					
ANR	1177993	Argument	& rem		1177595	0					
ANR	1177994	UnaryOperationExpression	& rem		1177595	0					
ANR	1177995	UnaryOperator	&		1177595	0					
ANR	1177996	Identifier	rem		1177595	1					
ANR	1177997	Argument	q		1177595	1					
ANR	1177998	Identifier	q		1177595	0					
ANR	1177999	Argument	end		1177595	2					
ANR	1178000	Identifier	end		1177595	0					
ANR	1178001	Argument	reg		1177595	3					
ANR	1178002	Identifier	reg		1177595	0					
ANR	1178003	IfStatement	if ( r != 0 )		1177595	1					
ANR	1178004	Condition	r != 0	3319:12:73853:73858	1177595	0	True				
ANR	1178005	EqualityExpression	r != 0		1177595	0		!=			
ANR	1178006	Identifier	r		1177595	0					
ANR	1178007	PrimaryExpression	0		1177595	1					
ANR	1178008	CompoundStatement		64:20:1562:1562	1177595	1					
ANR	1178009	ExpressionStatement	onig_node_free ( an )	3320:10:73873:73891	1177595	0	True				
ANR	1178010	CallExpression	onig_node_free ( an )		1177595	0					
ANR	1178011	Callee	onig_node_free		1177595	0					
ANR	1178012	Identifier	onig_node_free		1177595	0					
ANR	1178013	ArgumentList	an		1177595	1					
ANR	1178014	Argument	an		1177595	0					
ANR	1178015	Identifier	an		1177595	0					
ANR	1178016	GotoStatement	goto mem_err2 ;	3321:10:73903:73916	1177595	1	True				
ANR	1178017	Identifier	mem_err2		1177595	0					
ANR	1178018	ExpressionStatement	"xnode = onig_node_list_add ( NULL_NODE , snode )"	3324:8:73937:73981	1177595	2	True				
ANR	1178019	AssignmentExpression	"xnode = onig_node_list_add ( NULL_NODE , snode )"		1177595	0		=			
ANR	1178020	Identifier	xnode		1177595	0					
ANR	1178021	CallExpression	"onig_node_list_add ( NULL_NODE , snode )"		1177595	1					
ANR	1178022	Callee	onig_node_list_add		1177595	0					
ANR	1178023	Identifier	onig_node_list_add		1177595	0					
ANR	1178024	ArgumentList	NULL_NODE		1177595	1					
ANR	1178025	Argument	NULL_NODE		1177595	0					
ANR	1178026	Identifier	NULL_NODE		1177595	0					
ANR	1178027	Argument	snode		1177595	1					
ANR	1178028	Identifier	snode		1177595	0					
ANR	1178029	IfStatement	if ( IS_NULL ( xnode ) )		1177595	3					
ANR	1178030	Condition	IS_NULL ( xnode )	3325:12:73995:74008	1177595	0	True				
ANR	1178031	CallExpression	IS_NULL ( xnode )		1177595	0					
ANR	1178032	Callee	IS_NULL		1177595	0					
ANR	1178033	Identifier	IS_NULL		1177595	0					
ANR	1178034	ArgumentList	xnode		1177595	1					
ANR	1178035	Argument	xnode		1177595	0					
ANR	1178036	Identifier	xnode		1177595	0					
ANR	1178037	CompoundStatement		70:28:1712:1712	1177595	1					
ANR	1178038	ExpressionStatement	onig_node_free ( an )	3326:10:74023:74041	1177595	0	True				
ANR	1178039	CallExpression	onig_node_free ( an )		1177595	0					
ANR	1178040	Callee	onig_node_free		1177595	0					
ANR	1178041	Identifier	onig_node_free		1177595	0					
ANR	1178042	ArgumentList	an		1177595	1					
ANR	1178043	Argument	an		1177595	0					
ANR	1178044	Identifier	an		1177595	0					
ANR	1178045	ExpressionStatement	onig_node_free ( rem )	3327:10:74053:74072	1177595	1	True				
ANR	1178046	CallExpression	onig_node_free ( rem )		1177595	0					
ANR	1178047	Callee	onig_node_free		1177595	0					
ANR	1178048	Identifier	onig_node_free		1177595	0					
ANR	1178049	ArgumentList	rem		1177595	1					
ANR	1178050	Argument	rem		1177595	0					
ANR	1178051	Identifier	rem		1177595	0					
ANR	1178052	GotoStatement	goto mem_err2 ;	3328:10:74084:74097	1177595	2	True				
ANR	1178053	Identifier	mem_err2		1177595	0					
ANR	1178054	IfStatement	"if ( IS_NULL ( onig_node_list_add ( xnode , rem ) ) )"		1177595	4					
ANR	1178055	Condition	"IS_NULL ( onig_node_list_add ( xnode , rem ) )"	3330:12:74121:74159	1177595	0	True				
ANR	1178056	CallExpression	"IS_NULL ( onig_node_list_add ( xnode , rem ) )"		1177595	0					
ANR	1178057	Callee	IS_NULL		1177595	0					
ANR	1178058	Identifier	IS_NULL		1177595	0					
ANR	1178059	ArgumentList	"onig_node_list_add ( xnode , rem )"		1177595	1					
ANR	1178060	Argument	"onig_node_list_add ( xnode , rem )"		1177595	0					
ANR	1178061	CallExpression	"onig_node_list_add ( xnode , rem )"		1177595	0					
ANR	1178062	Callee	onig_node_list_add		1177595	0					
ANR	1178063	Identifier	onig_node_list_add		1177595	0					
ANR	1178064	ArgumentList	xnode		1177595	1					
ANR	1178065	Argument	xnode		1177595	0					
ANR	1178066	Identifier	xnode		1177595	0					
ANR	1178067	Argument	rem		1177595	1					
ANR	1178068	Identifier	rem		1177595	0					
ANR	1178069	CompoundStatement		75:53:1863:1863	1177595	1					
ANR	1178070	ExpressionStatement	onig_node_free ( an )	3331:10:74174:74192	1177595	0	True				
ANR	1178071	CallExpression	onig_node_free ( an )		1177595	0					
ANR	1178072	Callee	onig_node_free		1177595	0					
ANR	1178073	Identifier	onig_node_free		1177595	0					
ANR	1178074	ArgumentList	an		1177595	1					
ANR	1178075	Argument	an		1177595	0					
ANR	1178076	Identifier	an		1177595	0					
ANR	1178077	ExpressionStatement	onig_node_free ( xnode )	3332:10:74204:74225	1177595	1	True				
ANR	1178078	CallExpression	onig_node_free ( xnode )		1177595	0					
ANR	1178079	Callee	onig_node_free		1177595	0					
ANR	1178080	Identifier	onig_node_free		1177595	0					
ANR	1178081	ArgumentList	xnode		1177595	1					
ANR	1178082	Argument	xnode		1177595	0					
ANR	1178083	Identifier	xnode		1177595	0					
ANR	1178084	ExpressionStatement	onig_node_free ( rem )	3333:10:74237:74256	1177595	2	True				
ANR	1178085	CallExpression	onig_node_free ( rem )		1177595	0					
ANR	1178086	Callee	onig_node_free		1177595	0					
ANR	1178087	Identifier	onig_node_free		1177595	0					
ANR	1178088	ArgumentList	rem		1177595	1					
ANR	1178089	Argument	rem		1177595	0					
ANR	1178090	Identifier	rem		1177595	0					
ANR	1178091	GotoStatement	goto mem_err ;	3334:10:74268:74280	1177595	3	True				
ANR	1178092	Identifier	mem_err		1177595	0					
ANR	1178093	ExpressionStatement	NCAR ( an ) = xnode	3337:8:74301:74317	1177595	5	True				
ANR	1178094	AssignmentExpression	NCAR ( an ) = xnode		1177595	0		=			
ANR	1178095	CallExpression	NCAR ( an )		1177595	0					
ANR	1178096	Callee	NCAR		1177595	0					
ANR	1178097	Identifier	NCAR		1177595	0					
ANR	1178098	ArgumentList	an		1177595	1					
ANR	1178099	Argument	an		1177595	0					
ANR	1178100	Identifier	an		1177595	0					
ANR	1178101	Identifier	xnode		1177595	1					
ANR	1178102	ElseStatement	else		1177595	0					
ANR	1178103	CompoundStatement		84:11:2039:2039	1177595	0					
ANR	1178104	ExpressionStatement	NCAR ( an ) = snode	3340:8:74348:74364	1177595	0	True				
ANR	1178105	AssignmentExpression	NCAR ( an ) = snode		1177595	0		=			
ANR	1178106	CallExpression	NCAR ( an )		1177595	0					
ANR	1178107	Callee	NCAR		1177595	0					
ANR	1178108	Identifier	NCAR		1177595	0					
ANR	1178109	ArgumentList	an		1177595	1					
ANR	1178110	Argument	an		1177595	0					
ANR	1178111	Identifier	an		1177595	0					
ANR	1178112	Identifier	snode		1177595	1					
ANR	1178113	ExpressionStatement	NCDR ( var_anode ) = an	3343:6:74381:74401	1177595	3	True				
ANR	1178114	AssignmentExpression	NCDR ( var_anode ) = an		1177595	0		=			
ANR	1178115	CallExpression	NCDR ( var_anode )		1177595	0					
ANR	1178116	Callee	NCDR		1177595	0					
ANR	1178117	Identifier	NCDR		1177595	0					
ANR	1178118	ArgumentList	var_anode		1177595	1					
ANR	1178119	Argument	var_anode		1177595	0					
ANR	1178120	Identifier	var_anode		1177595	0					
ANR	1178121	Identifier	an		1177595	1					
ANR	1178122	ExpressionStatement	var_anode = an	3344:6:74409:74423	1177595	4	True				
ANR	1178123	AssignmentExpression	var_anode = an		1177595	0		=			
ANR	1178124	Identifier	var_anode		1177595	0					
ANR	1178125	Identifier	an		1177595	1					
ANR	1178126	ElseStatement	else		1177595	0					
ANR	1178127	CompoundStatement		91:9:2141:2141	1177595	0					
ANR	1178128	ExpressionStatement	NCAR ( an ) = snode	3347:6:74448:74468	1177595	0	True				
ANR	1178129	AssignmentExpression	NCAR ( an ) = snode		1177595	0		=			
ANR	1178130	CallExpression	NCAR ( an )		1177595	0					
ANR	1178131	Callee	NCAR		1177595	0					
ANR	1178132	Identifier	NCAR		1177595	0					
ANR	1178133	ArgumentList	an		1177595	1					
ANR	1178134	Argument	an		1177595	0					
ANR	1178135	Identifier	an		1177595	0					
ANR	1178136	Identifier	snode		1177595	1					
ANR	1178137	ExpressionStatement	NCDR ( anode ) = an	3348:6:74476:74492	1177595	1	True				
ANR	1178138	AssignmentExpression	NCDR ( anode ) = an		1177595	0		=			
ANR	1178139	CallExpression	NCDR ( anode )		1177595	0					
ANR	1178140	Callee	NCDR		1177595	0					
ANR	1178141	Identifier	NCDR		1177595	0					
ANR	1178142	ArgumentList	anode		1177595	1					
ANR	1178143	Argument	anode		1177595	0					
ANR	1178144	Identifier	anode		1177595	0					
ANR	1178145	Identifier	an		1177595	1					
ANR	1178146	ExpressionStatement	anode = an	3349:6:74500:74510	1177595	2	True				
ANR	1178147	AssignmentExpression	anode = an		1177595	0		=			
ANR	1178148	Identifier	anode		1177595	0					
ANR	1178149	Identifier	an		1177595	1					
ANR	1178150	ReturnStatement	return varlen ;	3353:2:74525:74538	1177595	11	True				
ANR	1178151	Identifier	varlen		1177595	0					
ANR	1178152	Label	mem_err2 :	3355:1:74542:74550	1177595	12	True				
ANR	1178153	Identifier	mem_err2		1177595	0					
ANR	1178154	ExpressionStatement	onig_node_free ( snode )	3356:2:74554:74575	1177595	13	True				
ANR	1178155	CallExpression	onig_node_free ( snode )		1177595	0					
ANR	1178156	Callee	onig_node_free		1177595	0					
ANR	1178157	Identifier	onig_node_free		1177595	0					
ANR	1178158	ArgumentList	snode		1177595	1					
ANR	1178159	Argument	snode		1177595	0					
ANR	1178160	Identifier	snode		1177595	0					
ANR	1178161	Label	mem_err :	3358:1:74579:74586	1177595	14	True				
ANR	1178162	Identifier	mem_err		1177595	0					
ANR	1178163	ExpressionStatement	onig_node_free ( * rnode )	3359:2:74590:74612	1177595	15	True				
ANR	1178164	CallExpression	onig_node_free ( * rnode )		1177595	0					
ANR	1178165	Callee	onig_node_free		1177595	0					
ANR	1178166	Identifier	onig_node_free		1177595	0					
ANR	1178167	ArgumentList	* rnode		1177595	1					
ANR	1178168	Argument	* rnode		1177595	0					
ANR	1178169	UnaryOperationExpression	* rnode		1177595	0					
ANR	1178170	UnaryOperator	*		1177595	0					
ANR	1178171	Identifier	rnode		1177595	1					
ANR	1178172	ReturnStatement	return ONIGERR_MEMORY ;	3361:2:74617:74638	1177595	16	True				
ANR	1178173	Identifier	ONIGERR_MEMORY		1177595	0					
ANR	1178174	ReturnType	static int		1177595	1					
ANR	1178175	Identifier	expand_case_fold_string_alt		1177595	2					
ANR	1178176	ParameterList	"int item_num , OnigCaseFoldCodeItem items [ ] , UChar * p , int slen , UChar * end , regex_t * reg , Node * * rnode"		1177595	3					
ANR	1178177	Parameter	int item_num	3253:28:72180:72191	1177595	0	True				
ANR	1178178	ParameterType	int		1177595	0					
ANR	1178179	Identifier	item_num		1177595	1					
ANR	1178180	Parameter	OnigCaseFoldCodeItem items [ ]	3253:42:72194:72221	1177595	1	True				
ANR	1178181	ParameterType	OnigCaseFoldCodeItem [ ]		1177595	0					
ANR	1178182	Identifier	items		1177595	1					
ANR	1178183	Parameter	UChar * p	3254:7:72231:72238	1177595	2	True				
ANR	1178184	ParameterType	UChar *		1177595	0					
ANR	1178185	Identifier	p		1177595	1					
ANR	1178186	Parameter	int slen	3254:17:72241:72248	1177595	3	True				
ANR	1178187	ParameterType	int		1177595	0					
ANR	1178188	Identifier	slen		1177595	1					
ANR	1178189	Parameter	UChar * end	3254:27:72251:72260	1177595	4	True				
ANR	1178190	ParameterType	UChar *		1177595	0					
ANR	1178191	Identifier	end		1177595	1					
ANR	1178192	Parameter	regex_t * reg	3255:7:72270:72281	1177595	5	True				
ANR	1178193	ParameterType	regex_t *		1177595	0					
ANR	1178194	Identifier	reg		1177595	1					
ANR	1178195	Parameter	Node * * rnode	3255:21:72284:72295	1177595	6	True				
ANR	1178196	ParameterType	Node * *		1177595	0					
ANR	1178197	Identifier	rnode		1177595	1					
ANR	1178198	CFGEntryNode	ENTRY		1177595		True				
ANR	1178199	CFGExitNode	EXIT		1177595		True				
ANR	1178200	Symbol	var_anode		1177595						
ANR	1178201	Symbol	NCAR		1177595						
ANR	1178202	Symbol	* items [ i ] . code		1177595						
ANR	1178203	Symbol	expand_case_fold_make_rem_string		1177595						
ANR	1178204	Symbol	& rem		1177595						
ANR	1178205	Symbol	items [ i ] . byte_len		1177595						
ANR	1178206	Symbol	rnode		1177595						
ANR	1178207	Symbol	len		1177595						
ANR	1178208	Symbol	* items		1177595						
ANR	1178209	Symbol	IS_NULL		1177595						
ANR	1178210	Symbol	reg		1177595						
ANR	1178211	Symbol	end		1177595						
ANR	1178212	Symbol	rem		1177595						
ANR	1178213	Symbol	onig_node_new_alt		1177595						
ANR	1178214	Symbol	* * i		1177595						
ANR	1178215	Symbol	NULL		1177595						
ANR	1178216	Symbol	* rnode		1177595						
ANR	1178217	Symbol	varlen		1177595						
ANR	1178218	Symbol	items [ i ] . code		1177595						
ANR	1178219	Symbol	NCDR		1177595						
ANR	1178220	Symbol	ONIGERR_MEMORY		1177595						
ANR	1178221	Symbol	i		1177595						
ANR	1178222	Symbol	anode		1177595						
ANR	1178223	Symbol	j		1177595						
ANR	1178224	Symbol	* * items		1177595						
ANR	1178225	Symbol	an		1177595						
ANR	1178226	Symbol	item_num		1177595						
ANR	1178227	Symbol	items [ i ] . code_len		1177595						
ANR	1178228	Symbol	reg -> enc		1177595						
ANR	1178229	Symbol	p		1177595						
ANR	1178230	Symbol	q		1177595						
ANR	1178231	Symbol	onig_node_list_add		1177595						
ANR	1178232	Symbol	r		1177595						
ANR	1178233	Symbol	buf		1177595						
ANR	1178234	Symbol	* i		1177595						
ANR	1178235	Symbol	ONIGENC_CODE_TO_MBC		1177595						
ANR	1178236	Symbol	onig_node_str_cat		1177595						
ANR	1178237	Symbol	xnode		1177595						
ANR	1178238	Symbol	* j		1177595						
ANR	1178239	Symbol	slen		1177595						
ANR	1178240	Symbol	onig_node_new_str		1177595						
ANR	1178241	Symbol	NULL_NODE		1177595						
ANR	1178242	Symbol	onig_node_new_list		1177595						
ANR	1178243	Symbol	items		1177595						
ANR	1178244	Symbol	snode		1177595						
ANR	1178245	Symbol	* reg		1177595						
ANR	1178246	Function	expand_case_fold_string	3364:0:74643:77513							
ANR	1178247	FunctionDef	"expand_case_fold_string (Node * node , regex_t * reg)"		1178246	0					
ANR	1178248	CompoundStatement		3366:0:74704:77513	1178246	0					
ANR	1178249	Statement	define	3367:1:74707:74712	1178246	0	True				
ANR	1178250	Statement	THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION	3367:8:74714:74750	1178246	1	True				
ANR	1178251	Statement	8	3367:47:74753:74753	1178246	2	True				
ANR	1178252	IdentifierDeclStatement	"int r , n , len , alt_num ;"	3369:2:74758:74780	1178246	3	True				
ANR	1178253	IdentifierDecl	r		1178246	0					
ANR	1178254	IdentifierDeclType	int		1178246	0					
ANR	1178255	Identifier	r		1178246	1					
ANR	1178256	IdentifierDecl	n		1178246	1					
ANR	1178257	IdentifierDeclType	int		1178246	0					
ANR	1178258	Identifier	n		1178246	1					
ANR	1178259	IdentifierDecl	len		1178246	2					
ANR	1178260	IdentifierDeclType	int		1178246	0					
ANR	1178261	Identifier	len		1178246	1					
ANR	1178262	IdentifierDecl	alt_num		1178246	3					
ANR	1178263	IdentifierDeclType	int		1178246	0					
ANR	1178264	Identifier	alt_num		1178246	1					
ANR	1178265	IdentifierDeclStatement	"UChar * start , * end , * p ;"	3370:2:74784:74806	1178246	4	True				
ANR	1178266	IdentifierDecl	* start		1178246	0					
ANR	1178267	IdentifierDeclType	UChar *		1178246	0					
ANR	1178268	Identifier	start		1178246	1					
ANR	1178269	IdentifierDecl	* end		1178246	1					
ANR	1178270	IdentifierDeclType	UChar *		1178246	0					
ANR	1178271	Identifier	end		1178246	1					
ANR	1178272	IdentifierDecl	* p		1178246	2					
ANR	1178273	IdentifierDeclType	UChar *		1178246	0					
ANR	1178274	Identifier	p		1178246	1					
ANR	1178275	IdentifierDeclStatement	"Node * top_root , * root , * snode , * prev_node ;"	3371:2:74810:74851	1178246	5	True				
ANR	1178276	IdentifierDecl	* top_root		1178246	0					
ANR	1178277	IdentifierDeclType	Node *		1178246	0					
ANR	1178278	Identifier	top_root		1178246	1					
ANR	1178279	IdentifierDecl	* root		1178246	1					
ANR	1178280	IdentifierDeclType	Node *		1178246	0					
ANR	1178281	Identifier	root		1178246	1					
ANR	1178282	IdentifierDecl	* snode		1178246	2					
ANR	1178283	IdentifierDeclType	Node *		1178246	0					
ANR	1178284	Identifier	snode		1178246	1					
ANR	1178285	IdentifierDecl	* prev_node		1178246	3					
ANR	1178286	IdentifierDeclType	Node *		1178246	0					
ANR	1178287	Identifier	prev_node		1178246	1					
ANR	1178288	IdentifierDeclStatement	OnigCaseFoldCodeItem items [ ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM ] ;	3372:2:74855:74918	1178246	6	True				
ANR	1178289	IdentifierDecl	items [ ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM ]		1178246	0					
ANR	1178290	IdentifierDeclType	OnigCaseFoldCodeItem [ ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM ]		1178246	0					
ANR	1178291	Identifier	items		1178246	1					
ANR	1178292	Identifier	ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM		1178246	2					
ANR	1178293	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	3373:2:74922:74946	1178246	7	True				
ANR	1178294	IdentifierDecl	* sn = NSTR ( node )		1178246	0					
ANR	1178295	IdentifierDeclType	StrNode *		1178246	0					
ANR	1178296	Identifier	sn		1178246	1					
ANR	1178297	AssignmentExpression	* sn = NSTR ( node )		1178246	2		=			
ANR	1178298	Identifier	sn		1178246	0					
ANR	1178299	CallExpression	NSTR ( node )		1178246	1					
ANR	1178300	Callee	NSTR		1178246	0					
ANR	1178301	Identifier	NSTR		1178246	0					
ANR	1178302	ArgumentList	node		1178246	1					
ANR	1178303	Argument	node		1178246	0					
ANR	1178304	Identifier	node		1178246	0					
ANR	1178305	IfStatement	if ( NSTRING_IS_AMBIG ( node ) )		1178246	8					
ANR	1178306	Condition	NSTRING_IS_AMBIG ( node )	3375:6:74955:74976	1178246	0	True				
ANR	1178307	CallExpression	NSTRING_IS_AMBIG ( node )		1178246	0					
ANR	1178308	Callee	NSTRING_IS_AMBIG		1178246	0					
ANR	1178309	Identifier	NSTRING_IS_AMBIG		1178246	0					
ANR	1178310	ArgumentList	node		1178246	1					
ANR	1178311	Argument	node		1178246	0					
ANR	1178312	Identifier	node		1178246	0					
ANR	1178313	ReturnStatement	return 0 ;	3375:30:74979:74987	1178246	1	True				
ANR	1178314	PrimaryExpression	0		1178246	0					
ANR	1178315	ExpressionStatement	start = sn -> s	3377:2:74992:75005	1178246	9	True				
ANR	1178316	AssignmentExpression	start = sn -> s		1178246	0		=			
ANR	1178317	Identifier	start		1178246	0					
ANR	1178318	PtrMemberAccess	sn -> s		1178246	1					
ANR	1178319	Identifier	sn		1178246	0					
ANR	1178320	Identifier	s		1178246	1					
ANR	1178321	ExpressionStatement	end = sn -> end	3378:2:75009:75024	1178246	10	True				
ANR	1178322	AssignmentExpression	end = sn -> end		1178246	0		=			
ANR	1178323	Identifier	end		1178246	0					
ANR	1178324	PtrMemberAccess	sn -> end		1178246	1					
ANR	1178325	Identifier	sn		1178246	0					
ANR	1178326	Identifier	end		1178246	1					
ANR	1178327	IfStatement	if ( start >= end )		1178246	11					
ANR	1178328	Condition	start >= end	3379:6:75032:75043	1178246	0	True				
ANR	1178329	RelationalExpression	start >= end		1178246	0		>=			
ANR	1178330	Identifier	start		1178246	0					
ANR	1178331	Identifier	end		1178246	1					
ANR	1178332	ReturnStatement	return 0 ;	3379:20:75046:75054	1178246	1	True				
ANR	1178333	PrimaryExpression	0		1178246	0					
ANR	1178334	ExpressionStatement	r = 0	3381:2:75059:75064	1178246	12	True				
ANR	1178335	AssignmentExpression	r = 0		1178246	0		=			
ANR	1178336	Identifier	r		1178246	0					
ANR	1178337	PrimaryExpression	0		1178246	1					
ANR	1178338	ExpressionStatement	top_root = root = prev_node = snode = NULL_NODE	3382:2:75068:75115	1178246	13	True				
ANR	1178339	AssignmentExpression	top_root = root = prev_node = snode = NULL_NODE		1178246	0		=			
ANR	1178340	Identifier	top_root		1178246	0					
ANR	1178341	AssignmentExpression	root = prev_node = snode = NULL_NODE		1178246	1		=			
ANR	1178342	Identifier	root		1178246	0					
ANR	1178343	AssignmentExpression	prev_node = snode = NULL_NODE		1178246	1		=			
ANR	1178344	Identifier	prev_node		1178246	0					
ANR	1178345	AssignmentExpression	snode = NULL_NODE		1178246	1		=			
ANR	1178346	Identifier	snode		1178246	0					
ANR	1178347	Identifier	NULL_NODE		1178246	1					
ANR	1178348	ExpressionStatement	alt_num = 1	3383:2:75119:75130	1178246	14	True				
ANR	1178349	AssignmentExpression	alt_num = 1		1178246	0		=			
ANR	1178350	Identifier	alt_num		1178246	0					
ANR	1178351	PrimaryExpression	1		1178246	1					
ANR	1178352	ExpressionStatement	p = start	3384:2:75134:75143	1178246	15	True				
ANR	1178353	AssignmentExpression	p = start		1178246	0		=			
ANR	1178354	Identifier	p		1178246	0					
ANR	1178355	Identifier	start		1178246	1					
ANR	1178356	WhileStatement	while ( p < end )		1178246	16					
ANR	1178357	Condition	p < end	3385:9:75154:75160	1178246	0	True				
ANR	1178358	RelationalExpression	p < end		1178246	0		<			
ANR	1178359	Identifier	p		1178246	0					
ANR	1178360	Identifier	end		1178246	1					
ANR	1178361	CompoundStatement		20:18:458:458	1178246	1					
ANR	1178362	ExpressionStatement	"n = ONIGENC_GET_CASE_FOLD_CODES_BY_STR ( reg -> enc , reg -> case_fold_flag , p , end , items )"	3386:4:75169:75261	1178246	0	True				
ANR	1178363	AssignmentExpression	"n = ONIGENC_GET_CASE_FOLD_CODES_BY_STR ( reg -> enc , reg -> case_fold_flag , p , end , items )"		1178246	0		=			
ANR	1178364	Identifier	n		1178246	0					
ANR	1178365	CallExpression	"ONIGENC_GET_CASE_FOLD_CODES_BY_STR ( reg -> enc , reg -> case_fold_flag , p , end , items )"		1178246	1					
ANR	1178366	Callee	ONIGENC_GET_CASE_FOLD_CODES_BY_STR		1178246	0					
ANR	1178367	Identifier	ONIGENC_GET_CASE_FOLD_CODES_BY_STR		1178246	0					
ANR	1178368	ArgumentList	reg -> enc		1178246	1					
ANR	1178369	Argument	reg -> enc		1178246	0					
ANR	1178370	PtrMemberAccess	reg -> enc		1178246	0					
ANR	1178371	Identifier	reg		1178246	0					
ANR	1178372	Identifier	enc		1178246	1					
ANR	1178373	Argument	reg -> case_fold_flag		1178246	1					
ANR	1178374	PtrMemberAccess	reg -> case_fold_flag		1178246	0					
ANR	1178375	Identifier	reg		1178246	0					
ANR	1178376	Identifier	case_fold_flag		1178246	1					
ANR	1178377	Argument	p		1178246	2					
ANR	1178378	Identifier	p		1178246	0					
ANR	1178379	Argument	end		1178246	3					
ANR	1178380	Identifier	end		1178246	0					
ANR	1178381	Argument	items		1178246	4					
ANR	1178382	Identifier	items		1178246	0					
ANR	1178383	IfStatement	if ( n < 0 )		1178246	1					
ANR	1178384	Condition	n < 0	3388:8:75271:75275	1178246	0	True				
ANR	1178385	RelationalExpression	n < 0		1178246	0		<			
ANR	1178386	Identifier	n		1178246	0					
ANR	1178387	PrimaryExpression	0		1178246	1					
ANR	1178388	CompoundStatement		23:15:573:573	1178246	1					
ANR	1178389	ExpressionStatement	r = n	3389:6:75286:75291	1178246	0	True				
ANR	1178390	AssignmentExpression	r = n		1178246	0		=			
ANR	1178391	Identifier	r		1178246	0					
ANR	1178392	Identifier	n		1178246	1					
ANR	1178393	GotoStatement	goto err ;	3390:6:75299:75307	1178246	1	True				
ANR	1178394	Identifier	err		1178246	0					
ANR	1178395	ExpressionStatement	"len = enclen ( reg -> enc , p )"	3393:4:75320:75345	1178246	2	True				
ANR	1178396	AssignmentExpression	"len = enclen ( reg -> enc , p )"		1178246	0		=			
ANR	1178397	Identifier	len		1178246	0					
ANR	1178398	CallExpression	"enclen ( reg -> enc , p )"		1178246	1					
ANR	1178399	Callee	enclen		1178246	0					
ANR	1178400	Identifier	enclen		1178246	0					
ANR	1178401	ArgumentList	reg -> enc		1178246	1					
ANR	1178402	Argument	reg -> enc		1178246	0					
ANR	1178403	PtrMemberAccess	reg -> enc		1178246	0					
ANR	1178404	Identifier	reg		1178246	0					
ANR	1178405	Identifier	enc		1178246	1					
ANR	1178406	Argument	p		1178246	1					
ANR	1178407	Identifier	p		1178246	0					
ANR	1178408	IfStatement	if ( n == 0 )		1178246	3					
ANR	1178409	Condition	n == 0	3395:8:75356:75361	1178246	0	True				
ANR	1178410	EqualityExpression	n == 0		1178246	0		==			
ANR	1178411	Identifier	n		1178246	0					
ANR	1178412	PrimaryExpression	0		1178246	1					
ANR	1178413	CompoundStatement		30:16:659:659	1178246	1					
ANR	1178414	IfStatement	if ( IS_NULL ( snode ) )		1178246	0					
ANR	1178415	Condition	IS_NULL ( snode )	3396:10:75376:75389	1178246	0	True				
ANR	1178416	CallExpression	IS_NULL ( snode )		1178246	0					
ANR	1178417	Callee	IS_NULL		1178246	0					
ANR	1178418	Identifier	IS_NULL		1178246	0					
ANR	1178419	ArgumentList	snode		1178246	1					
ANR	1178420	Argument	snode		1178246	0					
ANR	1178421	Identifier	snode		1178246	0					
ANR	1178422	CompoundStatement		31:26:687:687	1178246	1					
ANR	1178423	IfStatement	if ( IS_NULL ( root ) && IS_NOT_NULL ( prev_node ) )		1178246	0					
ANR	1178424	Condition	IS_NULL ( root ) && IS_NOT_NULL ( prev_node )	3397:5:75399:75437	1178246	0	True				
ANR	1178425	AndExpression	IS_NULL ( root ) && IS_NOT_NULL ( prev_node )		1178246	0		&&			
ANR	1178426	CallExpression	IS_NULL ( root )		1178246	0					
ANR	1178427	Callee	IS_NULL		1178246	0					
ANR	1178428	Identifier	IS_NULL		1178246	0					
ANR	1178429	ArgumentList	root		1178246	1					
ANR	1178430	Argument	root		1178246	0					
ANR	1178431	Identifier	root		1178246	0					
ANR	1178432	CallExpression	IS_NOT_NULL ( prev_node )		1178246	1					
ANR	1178433	Callee	IS_NOT_NULL		1178246	0					
ANR	1178434	Identifier	IS_NOT_NULL		1178246	0					
ANR	1178435	ArgumentList	prev_node		1178246	1					
ANR	1178436	Argument	prev_node		1178246	0					
ANR	1178437	Identifier	prev_node		1178246	0					
ANR	1178438	CompoundStatement		32:46:735:735	1178246	1					
ANR	1178439	ExpressionStatement	"top_root = root = onig_node_list_add ( NULL_NODE , prev_node )"	3398:3:75445:75503	1178246	0	True				
ANR	1178440	AssignmentExpression	"top_root = root = onig_node_list_add ( NULL_NODE , prev_node )"		1178246	0		=			
ANR	1178441	Identifier	top_root		1178246	0					
ANR	1178442	AssignmentExpression	"root = onig_node_list_add ( NULL_NODE , prev_node )"		1178246	1		=			
ANR	1178443	Identifier	root		1178246	0					
ANR	1178444	CallExpression	"onig_node_list_add ( NULL_NODE , prev_node )"		1178246	1					
ANR	1178445	Callee	onig_node_list_add		1178246	0					
ANR	1178446	Identifier	onig_node_list_add		1178246	0					
ANR	1178447	ArgumentList	NULL_NODE		1178246	1					
ANR	1178448	Argument	NULL_NODE		1178246	0					
ANR	1178449	Identifier	NULL_NODE		1178246	0					
ANR	1178450	Argument	prev_node		1178246	1					
ANR	1178451	Identifier	prev_node		1178246	0					
ANR	1178452	IfStatement	if ( IS_NULL ( root ) )		1178246	1					
ANR	1178453	Condition	IS_NULL ( root )	3399:7:75512:75524	1178246	0	True				
ANR	1178454	CallExpression	IS_NULL ( root )		1178246	0					
ANR	1178455	Callee	IS_NULL		1178246	0					
ANR	1178456	Identifier	IS_NULL		1178246	0					
ANR	1178457	ArgumentList	root		1178246	1					
ANR	1178458	Argument	root		1178246	0					
ANR	1178459	Identifier	root		1178246	0					
ANR	1178460	CompoundStatement		34:22:822:822	1178246	1					
ANR	1178461	ExpressionStatement	onig_node_free ( prev_node )	3400:5:75534:75559	1178246	0	True				
ANR	1178462	CallExpression	onig_node_free ( prev_node )		1178246	0					
ANR	1178463	Callee	onig_node_free		1178246	0					
ANR	1178464	Identifier	onig_node_free		1178246	0					
ANR	1178465	ArgumentList	prev_node		1178246	1					
ANR	1178466	Argument	prev_node		1178246	0					
ANR	1178467	Identifier	prev_node		1178246	0					
ANR	1178468	GotoStatement	goto mem_err ;	3401:5:75566:75578	1178246	1	True				
ANR	1178469	Identifier	mem_err		1178246	0					
ANR	1178470	ExpressionStatement	"prev_node = snode = onig_node_new_str ( NULL , NULL )"	3405:1:75590:75639	1178246	1	True				
ANR	1178471	AssignmentExpression	"prev_node = snode = onig_node_new_str ( NULL , NULL )"		1178246	0		=			
ANR	1178472	Identifier	prev_node		1178246	0					
ANR	1178473	AssignmentExpression	"snode = onig_node_new_str ( NULL , NULL )"		1178246	1		=			
ANR	1178474	Identifier	snode		1178246	0					
ANR	1178475	CallExpression	"onig_node_new_str ( NULL , NULL )"		1178246	1					
ANR	1178476	Callee	onig_node_new_str		1178246	0					
ANR	1178477	Identifier	onig_node_new_str		1178246	0					
ANR	1178478	ArgumentList	NULL		1178246	1					
ANR	1178479	Argument	NULL		1178246	0					
ANR	1178480	Identifier	NULL		1178246	0					
ANR	1178481	Argument	NULL		1178246	1					
ANR	1178482	Identifier	NULL		1178246	0					
ANR	1178483	IfStatement	if ( IS_NULL ( snode ) )		1178246	2					
ANR	1178484	Condition	IS_NULL ( snode )	3406:5:75646:75659	1178246	0	True				
ANR	1178485	CallExpression	IS_NULL ( snode )		1178246	0					
ANR	1178486	Callee	IS_NULL		1178246	0					
ANR	1178487	Identifier	IS_NULL		1178246	0					
ANR	1178488	ArgumentList	snode		1178246	1					
ANR	1178489	Argument	snode		1178246	0					
ANR	1178490	Identifier	snode		1178246	0					
ANR	1178491	GotoStatement	goto mem_err ;	3406:21:75662:75674	1178246	1	True				
ANR	1178492	Identifier	mem_err		1178246	0					
ANR	1178493	IfStatement	if ( IS_NOT_NULL ( root ) )		1178246	3					
ANR	1178494	Condition	IS_NOT_NULL ( root )	3407:5:75681:75697	1178246	0	True				
ANR	1178495	CallExpression	IS_NOT_NULL ( root )		1178246	0					
ANR	1178496	Callee	IS_NOT_NULL		1178246	0					
ANR	1178497	Identifier	IS_NOT_NULL		1178246	0					
ANR	1178498	ArgumentList	root		1178246	1					
ANR	1178499	Argument	root		1178246	0					
ANR	1178500	Identifier	root		1178246	0					
ANR	1178501	CompoundStatement		42:24:995:995	1178246	1					
ANR	1178502	IfStatement	"if ( IS_NULL ( onig_node_list_add ( root , snode ) ) )"		1178246	0					
ANR	1178503	Condition	"IS_NULL ( onig_node_list_add ( root , snode ) )"	3408:7:75709:75748	1178246	0	True				
ANR	1178504	CallExpression	"IS_NULL ( onig_node_list_add ( root , snode ) )"		1178246	0					
ANR	1178505	Callee	IS_NULL		1178246	0					
ANR	1178506	Identifier	IS_NULL		1178246	0					
ANR	1178507	ArgumentList	"onig_node_list_add ( root , snode )"		1178246	1					
ANR	1178508	Argument	"onig_node_list_add ( root , snode )"		1178246	0					
ANR	1178509	CallExpression	"onig_node_list_add ( root , snode )"		1178246	0					
ANR	1178510	Callee	onig_node_list_add		1178246	0					
ANR	1178511	Identifier	onig_node_list_add		1178246	0					
ANR	1178512	ArgumentList	root		1178246	1					
ANR	1178513	Argument	root		1178246	0					
ANR	1178514	Identifier	root		1178246	0					
ANR	1178515	Argument	snode		1178246	1					
ANR	1178516	Identifier	snode		1178246	0					
ANR	1178517	CompoundStatement		43:49:1046:1046	1178246	1					
ANR	1178518	ExpressionStatement	onig_node_free ( snode )	3409:5:75758:75779	1178246	0	True				
ANR	1178519	CallExpression	onig_node_free ( snode )		1178246	0					
ANR	1178520	Callee	onig_node_free		1178246	0					
ANR	1178521	Identifier	onig_node_free		1178246	0					
ANR	1178522	ArgumentList	snode		1178246	1					
ANR	1178523	Argument	snode		1178246	0					
ANR	1178524	Identifier	snode		1178246	0					
ANR	1178525	GotoStatement	goto mem_err ;	3410:5:75786:75798	1178246	1	True				
ANR	1178526	Identifier	mem_err		1178246	0					
ANR	1178527	ExpressionStatement	"r = onig_node_str_cat ( snode , p , p + len )"	3415:6:75823:75863	1178246	1	True				
ANR	1178528	AssignmentExpression	"r = onig_node_str_cat ( snode , p , p + len )"		1178246	0		=			
ANR	1178529	Identifier	r		1178246	0					
ANR	1178530	CallExpression	"onig_node_str_cat ( snode , p , p + len )"		1178246	1					
ANR	1178531	Callee	onig_node_str_cat		1178246	0					
ANR	1178532	Identifier	onig_node_str_cat		1178246	0					
ANR	1178533	ArgumentList	snode		1178246	1					
ANR	1178534	Argument	snode		1178246	0					
ANR	1178535	Identifier	snode		1178246	0					
ANR	1178536	Argument	p		1178246	1					
ANR	1178537	Identifier	p		1178246	0					
ANR	1178538	Argument	p + len		1178246	2					
ANR	1178539	AdditiveExpression	p + len		1178246	0		+			
ANR	1178540	Identifier	p		1178246	0					
ANR	1178541	Identifier	len		1178246	1					
ANR	1178542	IfStatement	if ( r != 0 )		1178246	2					
ANR	1178543	Condition	r != 0	3416:10:75875:75880	1178246	0	True				
ANR	1178544	EqualityExpression	r != 0		1178246	0		!=			
ANR	1178545	Identifier	r		1178246	0					
ANR	1178546	PrimaryExpression	0		1178246	1					
ANR	1178547	GotoStatement	goto err ;	3416:18:75883:75891	1178246	1	True				
ANR	1178548	Identifier	err		1178246	0					
ANR	1178549	ElseStatement	else		1178246	0					
ANR	1178550	CompoundStatement		53:9:1203:1203	1178246	0					
ANR	1178551	ExpressionStatement	alt_num *= ( n + 1 )	3419:6:75916:75934	1178246	0	True				
ANR	1178552	AssignmentExpression	alt_num *= ( n + 1 )		1178246	0		*=			
ANR	1178553	Identifier	alt_num		1178246	0					
ANR	1178554	AdditiveExpression	n + 1		1178246	1		+			
ANR	1178555	Identifier	n		1178246	0					
ANR	1178556	PrimaryExpression	1		1178246	1					
ANR	1178557	IfStatement	if ( alt_num > THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION )		1178246	1					
ANR	1178558	Condition	alt_num > THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION	3420:10:75946:75992	1178246	0	True				
ANR	1178559	RelationalExpression	alt_num > THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION		1178246	0		>			
ANR	1178560	Identifier	alt_num		1178246	0					
ANR	1178561	Identifier	THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION		1178246	1					
ANR	1178562	BreakStatement	break ;	3420:59:75995:76000	1178246	1	True				
ANR	1178563	IfStatement	if ( IS_NULL ( root ) && IS_NOT_NULL ( prev_node ) )		1178246	2					
ANR	1178564	Condition	IS_NULL ( root ) && IS_NOT_NULL ( prev_node )	3422:10:76013:76051	1178246	0	True				
ANR	1178565	AndExpression	IS_NULL ( root ) && IS_NOT_NULL ( prev_node )		1178246	0		&&			
ANR	1178566	CallExpression	IS_NULL ( root )		1178246	0					
ANR	1178567	Callee	IS_NULL		1178246	0					
ANR	1178568	Identifier	IS_NULL		1178246	0					
ANR	1178569	ArgumentList	root		1178246	1					
ANR	1178570	Argument	root		1178246	0					
ANR	1178571	Identifier	root		1178246	0					
ANR	1178572	CallExpression	IS_NOT_NULL ( prev_node )		1178246	1					
ANR	1178573	Callee	IS_NOT_NULL		1178246	0					
ANR	1178574	Identifier	IS_NOT_NULL		1178246	0					
ANR	1178575	ArgumentList	prev_node		1178246	1					
ANR	1178576	Argument	prev_node		1178246	0					
ANR	1178577	Identifier	prev_node		1178246	0					
ANR	1178578	CompoundStatement		57:51:1349:1349	1178246	1					
ANR	1178579	ExpressionStatement	"top_root = root = onig_node_list_add ( NULL_NODE , prev_node )"	3423:1:76057:76115	1178246	0	True				
ANR	1178580	AssignmentExpression	"top_root = root = onig_node_list_add ( NULL_NODE , prev_node )"		1178246	0		=			
ANR	1178581	Identifier	top_root		1178246	0					
ANR	1178582	AssignmentExpression	"root = onig_node_list_add ( NULL_NODE , prev_node )"		1178246	1		=			
ANR	1178583	Identifier	root		1178246	0					
ANR	1178584	CallExpression	"onig_node_list_add ( NULL_NODE , prev_node )"		1178246	1					
ANR	1178585	Callee	onig_node_list_add		1178246	0					
ANR	1178586	Identifier	onig_node_list_add		1178246	0					
ANR	1178587	ArgumentList	NULL_NODE		1178246	1					
ANR	1178588	Argument	NULL_NODE		1178246	0					
ANR	1178589	Identifier	NULL_NODE		1178246	0					
ANR	1178590	Argument	prev_node		1178246	1					
ANR	1178591	Identifier	prev_node		1178246	0					
ANR	1178592	IfStatement	if ( IS_NULL ( root ) )		1178246	1					
ANR	1178593	Condition	IS_NULL ( root )	3424:5:76122:76134	1178246	0	True				
ANR	1178594	CallExpression	IS_NULL ( root )		1178246	0					
ANR	1178595	Callee	IS_NULL		1178246	0					
ANR	1178596	Identifier	IS_NULL		1178246	0					
ANR	1178597	ArgumentList	root		1178246	1					
ANR	1178598	Argument	root		1178246	0					
ANR	1178599	Identifier	root		1178246	0					
ANR	1178600	CompoundStatement		59:20:1432:1432	1178246	1					
ANR	1178601	ExpressionStatement	onig_node_free ( prev_node )	3425:3:76142:76167	1178246	0	True				
ANR	1178602	CallExpression	onig_node_free ( prev_node )		1178246	0					
ANR	1178603	Callee	onig_node_free		1178246	0					
ANR	1178604	Identifier	onig_node_free		1178246	0					
ANR	1178605	ArgumentList	prev_node		1178246	1					
ANR	1178606	Argument	prev_node		1178246	0					
ANR	1178607	Identifier	prev_node		1178246	0					
ANR	1178608	GotoStatement	goto mem_err ;	3426:3:76172:76184	1178246	1	True				
ANR	1178609	Identifier	mem_err		1178246	0					
ANR	1178610	ExpressionStatement	"r = expand_case_fold_string_alt ( n , items , p , len , end , reg , & prev_node )"	3430:6:76204:76275	1178246	3	True				
ANR	1178611	AssignmentExpression	"r = expand_case_fold_string_alt ( n , items , p , len , end , reg , & prev_node )"		1178246	0		=			
ANR	1178612	Identifier	r		1178246	0					
ANR	1178613	CallExpression	"expand_case_fold_string_alt ( n , items , p , len , end , reg , & prev_node )"		1178246	1					
ANR	1178614	Callee	expand_case_fold_string_alt		1178246	0					
ANR	1178615	Identifier	expand_case_fold_string_alt		1178246	0					
ANR	1178616	ArgumentList	n		1178246	1					
ANR	1178617	Argument	n		1178246	0					
ANR	1178618	Identifier	n		1178246	0					
ANR	1178619	Argument	items		1178246	1					
ANR	1178620	Identifier	items		1178246	0					
ANR	1178621	Argument	p		1178246	2					
ANR	1178622	Identifier	p		1178246	0					
ANR	1178623	Argument	len		1178246	3					
ANR	1178624	Identifier	len		1178246	0					
ANR	1178625	Argument	end		1178246	4					
ANR	1178626	Identifier	end		1178246	0					
ANR	1178627	Argument	reg		1178246	5					
ANR	1178628	Identifier	reg		1178246	0					
ANR	1178629	Argument	& prev_node		1178246	6					
ANR	1178630	UnaryOperationExpression	& prev_node		1178246	0					
ANR	1178631	UnaryOperator	&		1178246	0					
ANR	1178632	Identifier	prev_node		1178246	1					
ANR	1178633	IfStatement	if ( r < 0 )		1178246	4					
ANR	1178634	Condition	r < 0	3431:10:76287:76291	1178246	0	True				
ANR	1178635	RelationalExpression	r < 0		1178246	0		<			
ANR	1178636	Identifier	r		1178246	0					
ANR	1178637	PrimaryExpression	0		1178246	1					
ANR	1178638	GotoStatement	goto mem_err ;	3431:17:76294:76306	1178246	1	True				
ANR	1178639	Identifier	mem_err		1178246	0					
ANR	1178640	IfStatement	if ( r == 1 )		1178246	5					
ANR	1178641	Condition	r == 1	3432:10:76318:76323	1178246	0	True				
ANR	1178642	EqualityExpression	r == 1		1178246	0		==			
ANR	1178643	Identifier	r		1178246	0					
ANR	1178644	PrimaryExpression	1		1178246	1					
ANR	1178645	CompoundStatement		67:18:1621:1621	1178246	1					
ANR	1178646	IfStatement	if ( IS_NULL ( root ) )		1178246	0					
ANR	1178647	Condition	IS_NULL ( root )	3433:5:76333:76345	1178246	0	True				
ANR	1178648	CallExpression	IS_NULL ( root )		1178246	0					
ANR	1178649	Callee	IS_NULL		1178246	0					
ANR	1178650	Identifier	IS_NULL		1178246	0					
ANR	1178651	ArgumentList	root		1178246	1					
ANR	1178652	Argument	root		1178246	0					
ANR	1178653	Identifier	root		1178246	0					
ANR	1178654	CompoundStatement		68:20:1643:1643	1178246	1					
ANR	1178655	ExpressionStatement	top_root = prev_node	3434:3:76353:76373	1178246	0	True				
ANR	1178656	AssignmentExpression	top_root = prev_node		1178246	0		=			
ANR	1178657	Identifier	top_root		1178246	0					
ANR	1178658	Identifier	prev_node		1178246	1					
ANR	1178659	ElseStatement	else		1178246	0					
ANR	1178660	CompoundStatement		71:6:1679:1679	1178246	0					
ANR	1178661	IfStatement	"if ( IS_NULL ( onig_node_list_add ( root , prev_node ) ) )"		1178246	0					
ANR	1178662	Condition	"IS_NULL ( onig_node_list_add ( root , prev_node ) )"	3437:7:76393:76436	1178246	0	True				
ANR	1178663	CallExpression	"IS_NULL ( onig_node_list_add ( root , prev_node ) )"		1178246	0					
ANR	1178664	Callee	IS_NULL		1178246	0					
ANR	1178665	Identifier	IS_NULL		1178246	0					
ANR	1178666	ArgumentList	"onig_node_list_add ( root , prev_node )"		1178246	1					
ANR	1178667	Argument	"onig_node_list_add ( root , prev_node )"		1178246	0					
ANR	1178668	CallExpression	"onig_node_list_add ( root , prev_node )"		1178246	0					
ANR	1178669	Callee	onig_node_list_add		1178246	0					
ANR	1178670	Identifier	onig_node_list_add		1178246	0					
ANR	1178671	ArgumentList	root		1178246	1					
ANR	1178672	Argument	root		1178246	0					
ANR	1178673	Identifier	root		1178246	0					
ANR	1178674	Argument	prev_node		1178246	1					
ANR	1178675	Identifier	prev_node		1178246	0					
ANR	1178676	CompoundStatement		72:53:1734:1734	1178246	1					
ANR	1178677	ExpressionStatement	onig_node_free ( prev_node )	3438:5:76446:76471	1178246	0	True				
ANR	1178678	CallExpression	onig_node_free ( prev_node )		1178246	0					
ANR	1178679	Callee	onig_node_free		1178246	0					
ANR	1178680	Identifier	onig_node_free		1178246	0					
ANR	1178681	ArgumentList	prev_node		1178246	1					
ANR	1178682	Argument	prev_node		1178246	0					
ANR	1178683	Identifier	prev_node		1178246	0					
ANR	1178684	GotoStatement	goto mem_err ;	3439:5:76478:76490	1178246	1	True				
ANR	1178685	Identifier	mem_err		1178246	0					
ANR	1178686	ExpressionStatement	root = NCAR ( prev_node )	3443:1:76502:76524	1178246	1	True				
ANR	1178687	AssignmentExpression	root = NCAR ( prev_node )		1178246	0		=			
ANR	1178688	Identifier	root		1178246	0					
ANR	1178689	CallExpression	NCAR ( prev_node )		1178246	1					
ANR	1178690	Callee	NCAR		1178246	0					
ANR	1178691	Identifier	NCAR		1178246	0					
ANR	1178692	ArgumentList	prev_node		1178246	1					
ANR	1178693	Argument	prev_node		1178246	0					
ANR	1178694	Identifier	prev_node		1178246	0					
ANR	1178695	ElseStatement	else		1178246	0					
ANR	1178696	CompoundStatement		80:11:1840:1840	1178246	0					
ANR	1178697	IfStatement	if ( IS_NOT_NULL ( root ) )		1178246	0					
ANR	1178698	Condition	IS_NOT_NULL ( root )	3446:5:76565:76581	1178246	0	True				
ANR	1178699	CallExpression	IS_NOT_NULL ( root )		1178246	0					
ANR	1178700	Callee	IS_NOT_NULL		1178246	0					
ANR	1178701	Identifier	IS_NOT_NULL		1178246	0					
ANR	1178702	ArgumentList	root		1178246	1					
ANR	1178703	Argument	root		1178246	0					
ANR	1178704	Identifier	root		1178246	0					
ANR	1178705	CompoundStatement		81:24:1879:1879	1178246	1					
ANR	1178706	IfStatement	"if ( IS_NULL ( onig_node_list_add ( root , prev_node ) ) )"		1178246	0					
ANR	1178707	Condition	"IS_NULL ( onig_node_list_add ( root , prev_node ) )"	3447:7:76593:76636	1178246	0	True				
ANR	1178708	CallExpression	"IS_NULL ( onig_node_list_add ( root , prev_node ) )"		1178246	0					
ANR	1178709	Callee	IS_NULL		1178246	0					
ANR	1178710	Identifier	IS_NULL		1178246	0					
ANR	1178711	ArgumentList	"onig_node_list_add ( root , prev_node )"		1178246	1					
ANR	1178712	Argument	"onig_node_list_add ( root , prev_node )"		1178246	0					
ANR	1178713	CallExpression	"onig_node_list_add ( root , prev_node )"		1178246	0					
ANR	1178714	Callee	onig_node_list_add		1178246	0					
ANR	1178715	Identifier	onig_node_list_add		1178246	0					
ANR	1178716	ArgumentList	root		1178246	1					
ANR	1178717	Argument	root		1178246	0					
ANR	1178718	Identifier	root		1178246	0					
ANR	1178719	Argument	prev_node		1178246	1					
ANR	1178720	Identifier	prev_node		1178246	0					
ANR	1178721	CompoundStatement		82:53:1934:1934	1178246	1					
ANR	1178722	ExpressionStatement	onig_node_free ( prev_node )	3448:5:76646:76671	1178246	0	True				
ANR	1178723	CallExpression	onig_node_free ( prev_node )		1178246	0					
ANR	1178724	Callee	onig_node_free		1178246	0					
ANR	1178725	Identifier	onig_node_free		1178246	0					
ANR	1178726	ArgumentList	prev_node		1178246	1					
ANR	1178727	Argument	prev_node		1178246	0					
ANR	1178728	Identifier	prev_node		1178246	0					
ANR	1178729	GotoStatement	goto mem_err ;	3449:5:76678:76690	1178246	1	True				
ANR	1178730	Identifier	mem_err		1178246	0					
ANR	1178731	ExpressionStatement	snode = NULL_NODE	3454:6:76715:76732	1178246	6	True				
ANR	1178732	AssignmentExpression	snode = NULL_NODE		1178246	0		=			
ANR	1178733	Identifier	snode		1178246	0					
ANR	1178734	Identifier	NULL_NODE		1178246	1					
ANR	1178735	ExpressionStatement	p += len	3457:4:76745:76753	1178246	4	True				
ANR	1178736	AssignmentExpression	p += len		1178246	0		+=			
ANR	1178737	Identifier	p		1178246	0					
ANR	1178738	Identifier	len		1178246	1					
ANR	1178739	IfStatement	if ( p < end )		1178246	17					
ANR	1178740	Condition	p < end	3460:6:76766:76772	1178246	0	True				
ANR	1178741	RelationalExpression	p < end		1178246	0		<			
ANR	1178742	Identifier	p		1178246	0					
ANR	1178743	Identifier	end		1178246	1					
ANR	1178744	CompoundStatement		96:4:2076:2086	1178246	1					
ANR	1178745	IdentifierDeclStatement	Node * srem ;	3461:4:76781:76791	1178246	0	True				
ANR	1178746	IdentifierDecl	* srem		1178246	0					
ANR	1178747	IdentifierDeclType	Node *		1178246	0					
ANR	1178748	Identifier	srem		1178246	1					
ANR	1178749	ExpressionStatement	"r = expand_case_fold_make_rem_string ( & srem , p , end , reg )"	3463:4:76798:76854	1178246	1	True				
ANR	1178750	AssignmentExpression	"r = expand_case_fold_make_rem_string ( & srem , p , end , reg )"		1178246	0		=			
ANR	1178751	Identifier	r		1178246	0					
ANR	1178752	CallExpression	"expand_case_fold_make_rem_string ( & srem , p , end , reg )"		1178246	1					
ANR	1178753	Callee	expand_case_fold_make_rem_string		1178246	0					
ANR	1178754	Identifier	expand_case_fold_make_rem_string		1178246	0					
ANR	1178755	ArgumentList	& srem		1178246	1					
ANR	1178756	Argument	& srem		1178246	0					
ANR	1178757	UnaryOperationExpression	& srem		1178246	0					
ANR	1178758	UnaryOperator	&		1178246	0					
ANR	1178759	Identifier	srem		1178246	1					
ANR	1178760	Argument	p		1178246	1					
ANR	1178761	Identifier	p		1178246	0					
ANR	1178762	Argument	end		1178246	2					
ANR	1178763	Identifier	end		1178246	0					
ANR	1178764	Argument	reg		1178246	3					
ANR	1178765	Identifier	reg		1178246	0					
ANR	1178766	IfStatement	if ( r != 0 )		1178246	2					
ANR	1178767	Condition	r != 0	3464:8:76864:76869	1178246	0	True				
ANR	1178768	EqualityExpression	r != 0		1178246	0		!=			
ANR	1178769	Identifier	r		1178246	0					
ANR	1178770	PrimaryExpression	0		1178246	1					
ANR	1178771	GotoStatement	goto mem_err ;	3464:16:76872:76884	1178246	1	True				
ANR	1178772	Identifier	mem_err		1178246	0					
ANR	1178773	IfStatement	if ( IS_NOT_NULL ( prev_node ) && IS_NULL ( root ) )		1178246	3					
ANR	1178774	Condition	IS_NOT_NULL ( prev_node ) && IS_NULL ( root )	3466:8:76895:76933	1178246	0	True				
ANR	1178775	AndExpression	IS_NOT_NULL ( prev_node ) && IS_NULL ( root )		1178246	0		&&			
ANR	1178776	CallExpression	IS_NOT_NULL ( prev_node )		1178246	0					
ANR	1178777	Callee	IS_NOT_NULL		1178246	0					
ANR	1178778	Identifier	IS_NOT_NULL		1178246	0					
ANR	1178779	ArgumentList	prev_node		1178246	1					
ANR	1178780	Argument	prev_node		1178246	0					
ANR	1178781	Identifier	prev_node		1178246	0					
ANR	1178782	CallExpression	IS_NULL ( root )		1178246	1					
ANR	1178783	Callee	IS_NULL		1178246	0					
ANR	1178784	Identifier	IS_NULL		1178246	0					
ANR	1178785	ArgumentList	root		1178246	1					
ANR	1178786	Argument	root		1178246	0					
ANR	1178787	Identifier	root		1178246	0					
ANR	1178788	CompoundStatement		101:49:2231:2231	1178246	1					
ANR	1178789	ExpressionStatement	"top_root = root = onig_node_list_add ( NULL_NODE , prev_node )"	3467:6:76944:77002	1178246	0	True				
ANR	1178790	AssignmentExpression	"top_root = root = onig_node_list_add ( NULL_NODE , prev_node )"		1178246	0		=			
ANR	1178791	Identifier	top_root		1178246	0					
ANR	1178792	AssignmentExpression	"root = onig_node_list_add ( NULL_NODE , prev_node )"		1178246	1		=			
ANR	1178793	Identifier	root		1178246	0					
ANR	1178794	CallExpression	"onig_node_list_add ( NULL_NODE , prev_node )"		1178246	1					
ANR	1178795	Callee	onig_node_list_add		1178246	0					
ANR	1178796	Identifier	onig_node_list_add		1178246	0					
ANR	1178797	ArgumentList	NULL_NODE		1178246	1					
ANR	1178798	Argument	NULL_NODE		1178246	0					
ANR	1178799	Identifier	NULL_NODE		1178246	0					
ANR	1178800	Argument	prev_node		1178246	1					
ANR	1178801	Identifier	prev_node		1178246	0					
ANR	1178802	IfStatement	if ( IS_NULL ( root ) )		1178246	1					
ANR	1178803	Condition	IS_NULL ( root )	3468:10:77014:77026	1178246	0	True				
ANR	1178804	CallExpression	IS_NULL ( root )		1178246	0					
ANR	1178805	Callee	IS_NULL		1178246	0					
ANR	1178806	Identifier	IS_NULL		1178246	0					
ANR	1178807	ArgumentList	root		1178246	1					
ANR	1178808	Argument	root		1178246	0					
ANR	1178809	Identifier	root		1178246	0					
ANR	1178810	CompoundStatement		103:25:2324:2324	1178246	1					
ANR	1178811	ExpressionStatement	onig_node_free ( srem )	3469:1:77032:77052	1178246	0	True				
ANR	1178812	CallExpression	onig_node_free ( srem )		1178246	0					
ANR	1178813	Callee	onig_node_free		1178246	0					
ANR	1178814	Identifier	onig_node_free		1178246	0					
ANR	1178815	ArgumentList	srem		1178246	1					
ANR	1178816	Argument	srem		1178246	0					
ANR	1178817	Identifier	srem		1178246	0					
ANR	1178818	ExpressionStatement	onig_node_free ( prev_node )	3470:1:77055:77080	1178246	1	True				
ANR	1178819	CallExpression	onig_node_free ( prev_node )		1178246	0					
ANR	1178820	Callee	onig_node_free		1178246	0					
ANR	1178821	Identifier	onig_node_free		1178246	0					
ANR	1178822	ArgumentList	prev_node		1178246	1					
ANR	1178823	Argument	prev_node		1178246	0					
ANR	1178824	Identifier	prev_node		1178246	0					
ANR	1178825	GotoStatement	goto mem_err ;	3471:1:77083:77095	1178246	2	True				
ANR	1178826	Identifier	mem_err		1178246	0					
ANR	1178827	IfStatement	if ( IS_NULL ( root ) )		1178246	4					
ANR	1178828	Condition	IS_NULL ( root )	3475:8:77120:77132	1178246	0	True				
ANR	1178829	CallExpression	IS_NULL ( root )		1178246	0					
ANR	1178830	Callee	IS_NULL		1178246	0					
ANR	1178831	Identifier	IS_NULL		1178246	0					
ANR	1178832	ArgumentList	root		1178246	1					
ANR	1178833	Argument	root		1178246	0					
ANR	1178834	Identifier	root		1178246	0					
ANR	1178835	CompoundStatement		110:23:2430:2430	1178246	1					
ANR	1178836	ExpressionStatement	prev_node = srem	3476:6:77143:77159	1178246	0	True				
ANR	1178837	AssignmentExpression	prev_node = srem		1178246	0		=			
ANR	1178838	Identifier	prev_node		1178246	0					
ANR	1178839	Identifier	srem		1178246	1					
ANR	1178840	ElseStatement	else		1178246	0					
ANR	1178841	CompoundStatement		113:9:2471:2471	1178246	0					
ANR	1178842	IfStatement	"if ( IS_NULL ( onig_node_list_add ( root , srem ) ) )"		1178246	0					
ANR	1178843	Condition	"IS_NULL ( onig_node_list_add ( root , srem ) )"	3479:10:77188:77226	1178246	0	True				
ANR	1178844	CallExpression	"IS_NULL ( onig_node_list_add ( root , srem ) )"		1178246	0					
ANR	1178845	Callee	IS_NULL		1178246	0					
ANR	1178846	Identifier	IS_NULL		1178246	0					
ANR	1178847	ArgumentList	"onig_node_list_add ( root , srem )"		1178246	1					
ANR	1178848	Argument	"onig_node_list_add ( root , srem )"		1178246	0					
ANR	1178849	CallExpression	"onig_node_list_add ( root , srem )"		1178246	0					
ANR	1178850	Callee	onig_node_list_add		1178246	0					
ANR	1178851	Identifier	onig_node_list_add		1178246	0					
ANR	1178852	ArgumentList	root		1178246	1					
ANR	1178853	Argument	root		1178246	0					
ANR	1178854	Identifier	root		1178246	0					
ANR	1178855	Argument	srem		1178246	1					
ANR	1178856	Identifier	srem		1178246	0					
ANR	1178857	CompoundStatement		114:51:2524:2524	1178246	1					
ANR	1178858	ExpressionStatement	onig_node_free ( srem )	3480:1:77232:77252	1178246	0	True				
ANR	1178859	CallExpression	onig_node_free ( srem )		1178246	0					
ANR	1178860	Callee	onig_node_free		1178246	0					
ANR	1178861	Identifier	onig_node_free		1178246	0					
ANR	1178862	ArgumentList	srem		1178246	1					
ANR	1178863	Argument	srem		1178246	0					
ANR	1178864	Identifier	srem		1178246	0					
ANR	1178865	GotoStatement	goto mem_err ;	3481:1:77255:77267	1178246	1	True				
ANR	1178866	Identifier	mem_err		1178246	0					
ANR	1178867	ExpressionStatement	top_root = ( IS_NOT_NULL ( top_root ) ? top_root : prev_node )	3487:2:77305:77362	1178246	18	True				
ANR	1178868	AssignmentExpression	top_root = ( IS_NOT_NULL ( top_root ) ? top_root : prev_node )		1178246	0		=			
ANR	1178869	Identifier	top_root		1178246	0					
ANR	1178870	ConditionalExpression	IS_NOT_NULL ( top_root ) ? top_root : prev_node		1178246	1					
ANR	1178871	Condition	IS_NOT_NULL ( top_root )		1178246	0					
ANR	1178872	CallExpression	IS_NOT_NULL ( top_root )		1178246	0					
ANR	1178873	Callee	IS_NOT_NULL		1178246	0					
ANR	1178874	Identifier	IS_NOT_NULL		1178246	0					
ANR	1178875	ArgumentList	top_root		1178246	1					
ANR	1178876	Argument	top_root		1178246	0					
ANR	1178877	Identifier	top_root		1178246	0					
ANR	1178878	Identifier	top_root		1178246	1					
ANR	1178879	Identifier	prev_node		1178246	2					
ANR	1178880	ExpressionStatement	"swap_node ( node , top_root )"	3488:2:77366:77391	1178246	19	True				
ANR	1178881	CallExpression	"swap_node ( node , top_root )"		1178246	0					
ANR	1178882	Callee	swap_node		1178246	0					
ANR	1178883	Identifier	swap_node		1178246	0					
ANR	1178884	ArgumentList	node		1178246	1					
ANR	1178885	Argument	node		1178246	0					
ANR	1178886	Identifier	node		1178246	0					
ANR	1178887	Argument	top_root		1178246	1					
ANR	1178888	Identifier	top_root		1178246	0					
ANR	1178889	ExpressionStatement	onig_node_free ( top_root )	3489:2:77395:77419	1178246	20	True				
ANR	1178890	CallExpression	onig_node_free ( top_root )		1178246	0					
ANR	1178891	Callee	onig_node_free		1178246	0					
ANR	1178892	Identifier	onig_node_free		1178246	0					
ANR	1178893	ArgumentList	top_root		1178246	1					
ANR	1178894	Argument	top_root		1178246	0					
ANR	1178895	Identifier	top_root		1178246	0					
ANR	1178896	ReturnStatement	return 0 ;	3490:2:77423:77431	1178246	21	True				
ANR	1178897	PrimaryExpression	0		1178246	0					
ANR	1178898	Label	mem_err :	3492:1:77435:77442	1178246	22	True				
ANR	1178899	Identifier	mem_err		1178246	0					
ANR	1178900	ExpressionStatement	r = ONIGERR_MEMORY	3493:2:77446:77464	1178246	23	True				
ANR	1178901	AssignmentExpression	r = ONIGERR_MEMORY		1178246	0		=			
ANR	1178902	Identifier	r		1178246	0					
ANR	1178903	Identifier	ONIGERR_MEMORY		1178246	1					
ANR	1178904	Label	err :	3495:1:77468:77471	1178246	24	True				
ANR	1178905	Identifier	err		1178246	0					
ANR	1178906	ExpressionStatement	onig_node_free ( top_root )	3496:2:77475:77499	1178246	25	True				
ANR	1178907	CallExpression	onig_node_free ( top_root )		1178246	0					
ANR	1178908	Callee	onig_node_free		1178246	0					
ANR	1178909	Identifier	onig_node_free		1178246	0					
ANR	1178910	ArgumentList	top_root		1178246	1					
ANR	1178911	Argument	top_root		1178246	0					
ANR	1178912	Identifier	top_root		1178246	0					
ANR	1178913	ReturnStatement	return r ;	3497:2:77503:77511	1178246	26	True				
ANR	1178914	Identifier	r		1178246	0					
ANR	1178915	ReturnType	static int		1178246	1					
ANR	1178916	Identifier	expand_case_fold_string		1178246	2					
ANR	1178917	ParameterList	"Node * node , regex_t * reg"		1178246	3					
ANR	1178918	Parameter	Node * node	3365:24:74678:74687	1178246	0	True				
ANR	1178919	ParameterType	Node *		1178246	0					
ANR	1178920	Identifier	node		1178246	1					
ANR	1178921	Parameter	regex_t * reg	3365:36:74690:74701	1178246	1	True				
ANR	1178922	ParameterType	regex_t *		1178246	0					
ANR	1178923	Identifier	reg		1178246	1					
ANR	1178924	CFGEntryNode	ENTRY		1178246		True				
ANR	1178925	CFGExitNode	EXIT		1178246		True				
ANR	1178926	Symbol	* sn		1178246						
ANR	1178927	Symbol	IS_NOT_NULL		1178246						
ANR	1178928	Symbol	NCAR		1178246						
ANR	1178929	Symbol	expand_case_fold_make_rem_string		1178246						
ANR	1178930	Symbol	& srem		1178246						
ANR	1178931	Symbol	sn -> s		1178246						
ANR	1178932	Symbol	len		1178246						
ANR	1178933	Symbol	IS_NULL		1178246						
ANR	1178934	Symbol	reg		1178246						
ANR	1178935	Symbol	root		1178246						
ANR	1178936	Symbol	prev_node		1178246						
ANR	1178937	Symbol	end		1178246						
ANR	1178938	Symbol	ONIGENC_GET_CASE_FOLD_CODES_BY_STR		1178246						
ANR	1178939	Symbol	sn		1178246						
ANR	1178940	Symbol	sn -> end		1178246						
ANR	1178941	Symbol	& prev_node		1178246						
ANR	1178942	Symbol	NSTRING_IS_AMBIG		1178246						
ANR	1178943	Symbol	NULL		1178246						
ANR	1178944	Symbol	alt_num		1178246						
ANR	1178945	Symbol	top_root		1178246						
ANR	1178946	Symbol	NSTR		1178246						
ANR	1178947	Symbol	start		1178246						
ANR	1178948	Symbol	ONIGERR_MEMORY		1178246						
ANR	1178949	Symbol	enclen		1178246						
ANR	1178950	Symbol	n		1178246						
ANR	1178951	Symbol	reg -> enc		1178246						
ANR	1178952	Symbol	p		1178246						
ANR	1178953	Symbol	node		1178246						
ANR	1178954	Symbol	onig_node_list_add		1178246						
ANR	1178955	Symbol	THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION		1178246						
ANR	1178956	Symbol	r		1178246						
ANR	1178957	Symbol	srem		1178246						
ANR	1178958	Symbol	onig_node_str_cat		1178246						
ANR	1178959	Symbol	expand_case_fold_string_alt		1178246						
ANR	1178960	Symbol	reg -> case_fold_flag		1178246						
ANR	1178961	Symbol	onig_node_new_str		1178246						
ANR	1178962	Symbol	NULL_NODE		1178246						
ANR	1178963	Symbol	snode		1178246						
ANR	1178964	Symbol	items		1178246						
ANR	1178965	Symbol	* reg		1178246						
ANR	1178966	Function	setup_comb_exp_check	3510:0:77772:80595							
ANR	1178967	FunctionDef	"setup_comb_exp_check (Node * node , int state , ScanEnv * env)"		1178966	0					
ANR	1178968	CompoundStatement		3512:0:77841:80595	1178966	0					
ANR	1178969	IdentifierDeclStatement	int type ;	3513:2:77845:77853	1178966	0	True				
ANR	1178970	IdentifierDecl	type		1178966	0					
ANR	1178971	IdentifierDeclType	int		1178966	0					
ANR	1178972	Identifier	type		1178966	1					
ANR	1178973	IdentifierDeclStatement	int r = state ;	3514:2:77857:77870	1178966	1	True				
ANR	1178974	IdentifierDecl	r = state		1178966	0					
ANR	1178975	IdentifierDeclType	int		1178966	0					
ANR	1178976	Identifier	r		1178966	1					
ANR	1178977	AssignmentExpression	r = state		1178966	2		=			
ANR	1178978	Identifier	state		1178966	0					
ANR	1178979	Identifier	state		1178966	1					
ANR	1178980	ExpressionStatement	type = NTYPE ( node )	3516:2:77875:77893	1178966	2	True				
ANR	1178981	AssignmentExpression	type = NTYPE ( node )		1178966	0		=			
ANR	1178982	Identifier	type		1178966	0					
ANR	1178983	CallExpression	NTYPE ( node )		1178966	1					
ANR	1178984	Callee	NTYPE		1178966	0					
ANR	1178985	Identifier	NTYPE		1178966	0					
ANR	1178986	ArgumentList	node		1178966	1					
ANR	1178987	Argument	node		1178966	0					
ANR	1178988	Identifier	node		1178966	0					
ANR	1178989	SwitchStatement	switch ( type )		1178966	3					
ANR	1178990	Condition	type	3517:10:77905:77908	1178966	0	True				
ANR	1178991	Identifier	type		1178966	0					
ANR	1178992	CompoundStatement		6:16:69:69	1178966	1					
ANR	1178993	Label	case NT_LIST :	3518:2:77915:77927	1178966	0	True				
ANR	1178994	Identifier	NT_LIST		1178966	0					
ANR	1178995	CompoundStatement		9:6:99:121	1178966	1					
ANR	1178996	IdentifierDeclStatement	Node * prev = NULL_NODE ;	3520:6:77941:77963	1178966	0	True				
ANR	1178997	IdentifierDecl	* prev = NULL_NODE		1178966	0					
ANR	1178998	IdentifierDeclType	Node *		1178966	0					
ANR	1178999	Identifier	prev		1178966	1					
ANR	1179000	AssignmentExpression	* prev = NULL_NODE		1178966	2		=			
ANR	1179001	Identifier	NULL_NODE		1178966	0					
ANR	1179002	Identifier	NULL_NODE		1178966	1					
ANR	1179003	DoStatement	do		1178966	1					
ANR	1179004	CompoundStatement		10:9:132:132	1178966	0					
ANR	1179005	ExpressionStatement	"r = setup_comb_exp_check ( NCAR ( node ) , r , env )"	3522:1:77977:78021	1178966	0	True				
ANR	1179006	AssignmentExpression	"r = setup_comb_exp_check ( NCAR ( node ) , r , env )"		1178966	0		=			
ANR	1179007	Identifier	r		1178966	0					
ANR	1179008	CallExpression	"setup_comb_exp_check ( NCAR ( node ) , r , env )"		1178966	1					
ANR	1179009	Callee	setup_comb_exp_check		1178966	0					
ANR	1179010	Identifier	setup_comb_exp_check		1178966	0					
ANR	1179011	ArgumentList	NCAR ( node )		1178966	1					
ANR	1179012	Argument	NCAR ( node )		1178966	0					
ANR	1179013	CallExpression	NCAR ( node )		1178966	0					
ANR	1179014	Callee	NCAR		1178966	0					
ANR	1179015	Identifier	NCAR		1178966	0					
ANR	1179016	ArgumentList	node		1178966	1					
ANR	1179017	Argument	node		1178966	0					
ANR	1179018	Identifier	node		1178966	0					
ANR	1179019	Argument	r		1178966	1					
ANR	1179020	Identifier	r		1178966	0					
ANR	1179021	Argument	env		1178966	2					
ANR	1179022	Identifier	env		1178966	0					
ANR	1179023	ExpressionStatement	prev = NCAR ( node )	3523:1:78024:78041	1178966	1	True				
ANR	1179024	AssignmentExpression	prev = NCAR ( node )		1178966	0		=			
ANR	1179025	Identifier	prev		1178966	0					
ANR	1179026	CallExpression	NCAR ( node )		1178966	1					
ANR	1179027	Callee	NCAR		1178966	0					
ANR	1179028	Identifier	NCAR		1178966	0					
ANR	1179029	ArgumentList	node		1178966	1					
ANR	1179030	Argument	node		1178966	0					
ANR	1179031	Identifier	node		1178966	0					
ANR	1179032	Condition	r >= 0 && IS_NOT_NULL ( node = NCDR ( node ) )	3524:15:78058:78097	1178966	1	True				
ANR	1179033	AndExpression	r >= 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1178966	0		&&			
ANR	1179034	RelationalExpression	r >= 0		1178966	0		>=			
ANR	1179035	Identifier	r		1178966	0					
ANR	1179036	PrimaryExpression	0		1178966	1					
ANR	1179037	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1178966	1					
ANR	1179038	Callee	IS_NOT_NULL		1178966	0					
ANR	1179039	Identifier	IS_NOT_NULL		1178966	0					
ANR	1179040	ArgumentList	node = NCDR ( node )		1178966	1					
ANR	1179041	Argument	node = NCDR ( node )		1178966	0					
ANR	1179042	AssignmentExpression	node = NCDR ( node )		1178966	0		=			
ANR	1179043	Identifier	node		1178966	0					
ANR	1179044	CallExpression	NCDR ( node )		1178966	1					
ANR	1179045	Callee	NCDR		1178966	0					
ANR	1179046	Identifier	NCDR		1178966	0					
ANR	1179047	ArgumentList	node		1178966	1					
ANR	1179048	Argument	node		1178966	0					
ANR	1179049	Identifier	node		1178966	0					
ANR	1179050	BreakStatement	break ;	3526:4:78111:78116	1178966	2	True				
ANR	1179051	Label	case NT_ALT :	3528:2:78121:78132	1178966	3	True				
ANR	1179052	Identifier	NT_ALT		1178966	0					
ANR	1179053	CompoundStatement		19:6:304:311	1178966	4					
ANR	1179054	IdentifierDeclStatement	int ret ;	3530:6:78146:78153	1178966	0	True				
ANR	1179055	IdentifierDecl	ret		1178966	0					
ANR	1179056	IdentifierDeclType	int		1178966	0					
ANR	1179057	Identifier	ret		1178966	1					
ANR	1179058	DoStatement	do		1178966	1					
ANR	1179059	CompoundStatement		20:9:322:322	1178966	0					
ANR	1179060	ExpressionStatement	"ret = setup_comb_exp_check ( NCAR ( node ) , state , env )"	3532:1:78167:78217	1178966	0	True				
ANR	1179061	AssignmentExpression	"ret = setup_comb_exp_check ( NCAR ( node ) , state , env )"		1178966	0		=			
ANR	1179062	Identifier	ret		1178966	0					
ANR	1179063	CallExpression	"setup_comb_exp_check ( NCAR ( node ) , state , env )"		1178966	1					
ANR	1179064	Callee	setup_comb_exp_check		1178966	0					
ANR	1179065	Identifier	setup_comb_exp_check		1178966	0					
ANR	1179066	ArgumentList	NCAR ( node )		1178966	1					
ANR	1179067	Argument	NCAR ( node )		1178966	0					
ANR	1179068	CallExpression	NCAR ( node )		1178966	0					
ANR	1179069	Callee	NCAR		1178966	0					
ANR	1179070	Identifier	NCAR		1178966	0					
ANR	1179071	ArgumentList	node		1178966	1					
ANR	1179072	Argument	node		1178966	0					
ANR	1179073	Identifier	node		1178966	0					
ANR	1179074	Argument	state		1178966	1					
ANR	1179075	Identifier	state		1178966	0					
ANR	1179076	Argument	env		1178966	2					
ANR	1179077	Identifier	env		1178966	0					
ANR	1179078	ExpressionStatement	r |= ret	3533:1:78220:78228	1178966	1	True				
ANR	1179079	AssignmentExpression	r |= ret		1178966	0		|=			
ANR	1179080	Identifier	r		1178966	0					
ANR	1179081	Identifier	ret		1178966	1					
ANR	1179082	Condition	ret >= 0 && IS_NOT_NULL ( node = NCDR ( node ) )	3534:15:78245:78286	1178966	1	True				
ANR	1179083	AndExpression	ret >= 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1178966	0		&&			
ANR	1179084	RelationalExpression	ret >= 0		1178966	0		>=			
ANR	1179085	Identifier	ret		1178966	0					
ANR	1179086	PrimaryExpression	0		1178966	1					
ANR	1179087	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1178966	1					
ANR	1179088	Callee	IS_NOT_NULL		1178966	0					
ANR	1179089	Identifier	IS_NOT_NULL		1178966	0					
ANR	1179090	ArgumentList	node = NCDR ( node )		1178966	1					
ANR	1179091	Argument	node = NCDR ( node )		1178966	0					
ANR	1179092	AssignmentExpression	node = NCDR ( node )		1178966	0		=			
ANR	1179093	Identifier	node		1178966	0					
ANR	1179094	CallExpression	NCDR ( node )		1178966	1					
ANR	1179095	Callee	NCDR		1178966	0					
ANR	1179096	Identifier	NCDR		1178966	0					
ANR	1179097	ArgumentList	node		1178966	1					
ANR	1179098	Argument	node		1178966	0					
ANR	1179099	Identifier	node		1178966	0					
ANR	1179100	BreakStatement	break ;	3536:4:78300:78305	1178966	5	True				
ANR	1179101	Label	case NT_QTFR :	3538:2:78310:78322	1178966	6	True				
ANR	1179102	Identifier	NT_QTFR		1178966	0					
ANR	1179103	CompoundStatement		33:6:617:628	1178966	7					
ANR	1179104	IdentifierDeclStatement	int child_state = state ;	3540:6:78336:78359	1178966	0	True				
ANR	1179105	IdentifierDecl	child_state = state		1178966	0					
ANR	1179106	IdentifierDeclType	int		1178966	0					
ANR	1179107	Identifier	child_state		1178966	1					
ANR	1179108	AssignmentExpression	child_state = state		1178966	2		=			
ANR	1179109	Identifier	state		1178966	0					
ANR	1179110	Identifier	state		1178966	1					
ANR	1179111	IdentifierDeclStatement	int add_state = 0 ;	3541:6:78367:78384	1178966	1	True				
ANR	1179112	IdentifierDecl	add_state = 0		1178966	0					
ANR	1179113	IdentifierDeclType	int		1178966	0					
ANR	1179114	Identifier	add_state		1178966	1					
ANR	1179115	AssignmentExpression	add_state = 0		1178966	2		=			
ANR	1179116	Identifier	add_state		1178966	0					
ANR	1179117	PrimaryExpression	0		1178966	1					
ANR	1179118	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	3542:6:78392:78418	1178966	2	True				
ANR	1179119	IdentifierDecl	* qn = NQTFR ( node )		1178966	0					
ANR	1179120	IdentifierDeclType	QtfrNode *		1178966	0					
ANR	1179121	Identifier	qn		1178966	1					
ANR	1179122	AssignmentExpression	* qn = NQTFR ( node )		1178966	2		=			
ANR	1179123	Identifier	qn		1178966	0					
ANR	1179124	CallExpression	NQTFR ( node )		1178966	1					
ANR	1179125	Callee	NQTFR		1178966	0					
ANR	1179126	Identifier	NQTFR		1178966	0					
ANR	1179127	ArgumentList	node		1178966	1					
ANR	1179128	Argument	node		1178966	0					
ANR	1179129	Identifier	node		1178966	0					
ANR	1179130	IdentifierDeclStatement	Node * target = qn -> target ;	3543:6:78426:78451	1178966	3	True				
ANR	1179131	IdentifierDecl	* target = qn -> target		1178966	0					
ANR	1179132	IdentifierDeclType	Node *		1178966	0					
ANR	1179133	Identifier	target		1178966	1					
ANR	1179134	AssignmentExpression	* target = qn -> target		1178966	2		=			
ANR	1179135	Identifier	target		1178966	0					
ANR	1179136	PtrMemberAccess	qn -> target		1178966	1					
ANR	1179137	Identifier	qn		1178966	0					
ANR	1179138	Identifier	target		1178966	1					
ANR	1179139	IdentifierDeclStatement	int var_num ;	3544:6:78459:78470	1178966	4	True				
ANR	1179140	IdentifierDecl	var_num		1178966	0					
ANR	1179141	IdentifierDeclType	int		1178966	0					
ANR	1179142	Identifier	var_num		1178966	1					
ANR	1179143	IfStatement	if ( ! IS_REPEAT_INFINITE ( qn -> upper ) )		1178966	5					
ANR	1179144	Condition	! IS_REPEAT_INFINITE ( qn -> upper )	3546:10:78483:78513	1178966	0	True				
ANR	1179145	UnaryOperationExpression	! IS_REPEAT_INFINITE ( qn -> upper )		1178966	0					
ANR	1179146	UnaryOperator	!		1178966	0					
ANR	1179147	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1178966	1					
ANR	1179148	Callee	IS_REPEAT_INFINITE		1178966	0					
ANR	1179149	Identifier	IS_REPEAT_INFINITE		1178966	0					
ANR	1179150	ArgumentList	qn -> upper		1178966	1					
ANR	1179151	Argument	qn -> upper		1178966	0					
ANR	1179152	PtrMemberAccess	qn -> upper		1178966	0					
ANR	1179153	Identifier	qn		1178966	0					
ANR	1179154	Identifier	upper		1178966	1					
ANR	1179155	CompoundStatement		35:43:674:674	1178966	1					
ANR	1179156	IfStatement	if ( qn -> upper > 1 )		1178966	0					
ANR	1179157	Condition	qn -> upper > 1	3547:5:78523:78535	1178966	0	True				
ANR	1179158	RelationalExpression	qn -> upper > 1		1178966	0		>			
ANR	1179159	PtrMemberAccess	qn -> upper		1178966	0					
ANR	1179160	Identifier	qn		1178966	0					
ANR	1179161	Identifier	upper		1178966	1					
ANR	1179162	PrimaryExpression	1		1178966	1					
ANR	1179163	CompoundStatement		36:20:696:696	1178966	1					
ANR	1179164	ExpressionStatement	child_state |= CEC_IN_FINITE_REPEAT	3549:3:78577:78612	1178966	0	True				
ANR	1179165	AssignmentExpression	child_state |= CEC_IN_FINITE_REPEAT		1178966	0		|=			
ANR	1179166	Identifier	child_state		1178966	0					
ANR	1179167	Identifier	CEC_IN_FINITE_REPEAT		1178966	1					
ANR	1179168	IfStatement	if ( env -> backrefed_mem == 0 )		1178966	1					
ANR	1179169	Condition	env -> backrefed_mem == 0	3552:7:78682:78704	1178966	0	True				
ANR	1179170	EqualityExpression	env -> backrefed_mem == 0		1178966	0		==			
ANR	1179171	PtrMemberAccess	env -> backrefed_mem		1178966	0					
ANR	1179172	Identifier	env		1178966	0					
ANR	1179173	Identifier	backrefed_mem		1178966	1					
ANR	1179174	PrimaryExpression	0		1178966	1					
ANR	1179175	CompoundStatement		41:32:865:865	1178966	1					
ANR	1179176	IfStatement	if ( NTYPE ( qn -> target ) == NT_ENCLOSE )		1178966	0					
ANR	1179177	Condition	NTYPE ( qn -> target ) == NT_ENCLOSE	3553:9:78718:78748	1178966	0	True				
ANR	1179178	EqualityExpression	NTYPE ( qn -> target ) == NT_ENCLOSE		1178966	0		==			
ANR	1179179	CallExpression	NTYPE ( qn -> target )		1178966	0					
ANR	1179180	Callee	NTYPE		1178966	0					
ANR	1179181	Identifier	NTYPE		1178966	0					
ANR	1179182	ArgumentList	qn -> target		1178966	1					
ANR	1179183	Argument	qn -> target		1178966	0					
ANR	1179184	PtrMemberAccess	qn -> target		1178966	0					
ANR	1179185	Identifier	qn		1178966	0					
ANR	1179186	Identifier	target		1178966	1					
ANR	1179187	Identifier	NT_ENCLOSE		1178966	1					
ANR	1179188	CompoundStatement		43:7:918:956	1178966	1					
ANR	1179189	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( qn -> target ) ;	3554:7:78760:78798	1178966	0	True				
ANR	1179190	IdentifierDecl	* en = NENCLOSE ( qn -> target )		1178966	0					
ANR	1179191	IdentifierDeclType	EncloseNode *		1178966	0					
ANR	1179192	Identifier	en		1178966	1					
ANR	1179193	AssignmentExpression	* en = NENCLOSE ( qn -> target )		1178966	2		=			
ANR	1179194	Identifier	en		1178966	0					
ANR	1179195	CallExpression	NENCLOSE ( qn -> target )		1178966	1					
ANR	1179196	Callee	NENCLOSE		1178966	0					
ANR	1179197	Identifier	NENCLOSE		1178966	0					
ANR	1179198	ArgumentList	qn -> target		1178966	1					
ANR	1179199	Argument	qn -> target		1178966	0					
ANR	1179200	PtrMemberAccess	qn -> target		1178966	0					
ANR	1179201	Identifier	qn		1178966	0					
ANR	1179202	Identifier	target		1178966	1					
ANR	1179203	IfStatement	if ( en -> type == ENCLOSE_MEMORY )		1178966	1					
ANR	1179204	Condition	en -> type == ENCLOSE_MEMORY	3555:11:78811:78836	1178966	0	True				
ANR	1179205	EqualityExpression	en -> type == ENCLOSE_MEMORY		1178966	0		==			
ANR	1179206	PtrMemberAccess	en -> type		1178966	0					
ANR	1179207	Identifier	en		1178966	0					
ANR	1179208	Identifier	type		1178966	1					
ANR	1179209	Identifier	ENCLOSE_MEMORY		1178966	1					
ANR	1179210	CompoundStatement		44:39:997:997	1178966	1					
ANR	1179211	IfStatement	if ( NTYPE ( en -> target ) == NT_QTFR )		1178966	0					
ANR	1179212	Condition	NTYPE ( en -> target ) == NT_QTFR	3556:6:78847:78874	1178966	0	True				
ANR	1179213	EqualityExpression	NTYPE ( en -> target ) == NT_QTFR		1178966	0		==			
ANR	1179214	CallExpression	NTYPE ( en -> target )		1178966	0					
ANR	1179215	Callee	NTYPE		1178966	0					
ANR	1179216	Identifier	NTYPE		1178966	0					
ANR	1179217	ArgumentList	en -> target		1178966	1					
ANR	1179218	Argument	en -> target		1178966	0					
ANR	1179219	PtrMemberAccess	en -> target		1178966	0					
ANR	1179220	Identifier	en		1178966	0					
ANR	1179221	Identifier	target		1178966	1					
ANR	1179222	Identifier	NT_QTFR		1178966	1					
ANR	1179223	CompoundStatement		46:4:1041:1072	1178966	1					
ANR	1179224	IdentifierDeclStatement	QtfrNode * q = NQTFR ( en -> target ) ;	3557:4:78883:78914	1178966	0	True				
ANR	1179225	IdentifierDecl	* q = NQTFR ( en -> target )		1178966	0					
ANR	1179226	IdentifierDeclType	QtfrNode *		1178966	0					
ANR	1179227	Identifier	q		1178966	1					
ANR	1179228	AssignmentExpression	* q = NQTFR ( en -> target )		1178966	2		=			
ANR	1179229	Identifier	q		1178966	0					
ANR	1179230	CallExpression	NQTFR ( en -> target )		1178966	1					
ANR	1179231	Callee	NQTFR		1178966	0					
ANR	1179232	Identifier	NQTFR		1178966	0					
ANR	1179233	ArgumentList	en -> target		1178966	1					
ANR	1179234	Argument	en -> target		1178966	0					
ANR	1179235	PtrMemberAccess	en -> target		1178966	0					
ANR	1179236	Identifier	en		1178966	0					
ANR	1179237	Identifier	target		1178966	1					
ANR	1179238	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) && q -> greedy == qn -> greedy )		1178966	1					
ANR	1179239	Condition	IS_REPEAT_INFINITE ( q -> upper ) && q -> greedy == qn -> greedy	3558:8:78924:78986	1178966	0	True				
ANR	1179240	AndExpression	IS_REPEAT_INFINITE ( q -> upper ) && q -> greedy == qn -> greedy		1178966	0		&&			
ANR	1179241	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		1178966	0					
ANR	1179242	Callee	IS_REPEAT_INFINITE		1178966	0					
ANR	1179243	Identifier	IS_REPEAT_INFINITE		1178966	0					
ANR	1179244	ArgumentList	q -> upper		1178966	1					
ANR	1179245	Argument	q -> upper		1178966	0					
ANR	1179246	PtrMemberAccess	q -> upper		1178966	0					
ANR	1179247	Identifier	q		1178966	0					
ANR	1179248	Identifier	upper		1178966	1					
ANR	1179249	EqualityExpression	q -> greedy == qn -> greedy		1178966	1		==			
ANR	1179250	PtrMemberAccess	q -> greedy		1178966	0					
ANR	1179251	Identifier	q		1178966	0					
ANR	1179252	Identifier	greedy		1178966	1					
ANR	1179253	PtrMemberAccess	qn -> greedy		1178966	1					
ANR	1179254	Identifier	qn		1178966	0					
ANR	1179255	Identifier	greedy		1178966	1					
ANR	1179256	CompoundStatement		48:36:1147:1147	1178966	1					
ANR	1179257	ExpressionStatement	qn -> upper = ( qn -> lower == 0 ? 1 : qn -> lower )	3560:6:78997:79041	1178966	0	True				
ANR	1179258	AssignmentExpression	qn -> upper = ( qn -> lower == 0 ? 1 : qn -> lower )		1178966	0		=			
ANR	1179259	PtrMemberAccess	qn -> upper		1178966	0					
ANR	1179260	Identifier	qn		1178966	0					
ANR	1179261	Identifier	upper		1178966	1					
ANR	1179262	ConditionalExpression	qn -> lower == 0 ? 1 : qn -> lower		1178966	1					
ANR	1179263	Condition	qn -> lower == 0		1178966	0					
ANR	1179264	EqualityExpression	qn -> lower == 0		1178966	0		==			
ANR	1179265	PtrMemberAccess	qn -> lower		1178966	0					
ANR	1179266	Identifier	qn		1178966	0					
ANR	1179267	Identifier	lower		1178966	1					
ANR	1179268	PrimaryExpression	0		1178966	1					
ANR	1179269	PrimaryExpression	1		1178966	1					
ANR	1179270	PtrMemberAccess	qn -> lower		1178966	2					
ANR	1179271	Identifier	qn		1178966	0					
ANR	1179272	Identifier	lower		1178966	1					
ANR	1179273	IfStatement	if ( qn -> upper == 1 )		1178966	1					
ANR	1179274	Condition	qn -> upper == 1	3561:10:79053:79066	1178966	0	True				
ANR	1179275	EqualityExpression	qn -> upper == 1		1178966	0		==			
ANR	1179276	PtrMemberAccess	qn -> upper		1178966	0					
ANR	1179277	Identifier	qn		1178966	0					
ANR	1179278	Identifier	upper		1178966	1					
ANR	1179279	PrimaryExpression	1		1178966	1					
ANR	1179280	ExpressionStatement	child_state = state	3562:8:79077:79096	1178966	1	True				
ANR	1179281	AssignmentExpression	child_state = state		1178966	0		=			
ANR	1179282	Identifier	child_state		1178966	0					
ANR	1179283	Identifier	state		1178966	1					
ANR	1179284	IfStatement	if ( state & CEC_IN_FINITE_REPEAT )		1178966	6					
ANR	1179285	Condition	state & CEC_IN_FINITE_REPEAT	3571:10:79151:79178	1178966	0	True				
ANR	1179286	BitAndExpression	state & CEC_IN_FINITE_REPEAT		1178966	0		&			
ANR	1179287	Identifier	state		1178966	0					
ANR	1179288	Identifier	CEC_IN_FINITE_REPEAT		1178966	1					
ANR	1179289	CompoundStatement		60:40:1339:1339	1178966	1					
ANR	1179290	ExpressionStatement	qn -> comb_exp_check_num = - 1	3572:1:79184:79211	1178966	0	True				
ANR	1179291	AssignmentExpression	qn -> comb_exp_check_num = - 1		1178966	0		=			
ANR	1179292	PtrMemberAccess	qn -> comb_exp_check_num		1178966	0					
ANR	1179293	Identifier	qn		1178966	0					
ANR	1179294	Identifier	comb_exp_check_num		1178966	1					
ANR	1179295	UnaryOperationExpression	- 1		1178966	1					
ANR	1179296	UnaryOperator	-		1178966	0					
ANR	1179297	PrimaryExpression	1		1178966	1					
ANR	1179298	ElseStatement	else		1178966	0					
ANR	1179299	CompoundStatement		63:11:1390:1390	1178966	0					
ANR	1179300	IfStatement	if ( IS_REPEAT_INFINITE ( qn -> upper ) )		1178966	0					
ANR	1179301	Condition	IS_REPEAT_INFINITE ( qn -> upper )	3575:5:79239:79267	1178966	0	True				
ANR	1179302	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1178966	0					
ANR	1179303	Callee	IS_REPEAT_INFINITE		1178966	0					
ANR	1179304	Identifier	IS_REPEAT_INFINITE		1178966	0					
ANR	1179305	ArgumentList	qn -> upper		1178966	1					
ANR	1179306	Argument	qn -> upper		1178966	0					
ANR	1179307	PtrMemberAccess	qn -> upper		1178966	0					
ANR	1179308	Identifier	qn		1178966	0					
ANR	1179309	Identifier	upper		1178966	1					
ANR	1179310	CompoundStatement		64:36:1428:1428	1178966	1					
ANR	1179311	ExpressionStatement	var_num = CEC_INFINITE_NUM	3576:3:79275:79301	1178966	0	True				
ANR	1179312	AssignmentExpression	var_num = CEC_INFINITE_NUM		1178966	0		=			
ANR	1179313	Identifier	var_num		1178966	0					
ANR	1179314	Identifier	CEC_INFINITE_NUM		1178966	1					
ANR	1179315	ExpressionStatement	child_state |= CEC_IN_INFINITE_REPEAT	3577:3:79306:79343	1178966	1	True				
ANR	1179316	AssignmentExpression	child_state |= CEC_IN_INFINITE_REPEAT		1178966	0		|=			
ANR	1179317	Identifier	child_state		1178966	0					
ANR	1179318	Identifier	CEC_IN_INFINITE_REPEAT		1178966	1					
ANR	1179319	ElseStatement	else		1178966	0					
ANR	1179320	CompoundStatement		68:6:1512:1512	1178966	0					
ANR	1179321	ExpressionStatement	var_num = qn -> upper - qn -> lower	3580:3:79359:79390	1178966	0	True				
ANR	1179322	AssignmentExpression	var_num = qn -> upper - qn -> lower		1178966	0		=			
ANR	1179323	Identifier	var_num		1178966	0					
ANR	1179324	AdditiveExpression	qn -> upper - qn -> lower		1178966	1		-			
ANR	1179325	PtrMemberAccess	qn -> upper		1178966	0					
ANR	1179326	Identifier	qn		1178966	0					
ANR	1179327	Identifier	upper		1178966	1					
ANR	1179328	PtrMemberAccess	qn -> lower		1178966	1					
ANR	1179329	Identifier	qn		1178966	0					
ANR	1179330	Identifier	lower		1178966	1					
ANR	1179331	IfStatement	if ( var_num >= CEC_THRES_NUM_BIG_REPEAT )		1178966	1					
ANR	1179332	Condition	var_num >= CEC_THRES_NUM_BIG_REPEAT	3583:5:79401:79435	1178966	0	True				
ANR	1179333	RelationalExpression	var_num >= CEC_THRES_NUM_BIG_REPEAT		1178966	0		>=			
ANR	1179334	Identifier	var_num		1178966	0					
ANR	1179335	Identifier	CEC_THRES_NUM_BIG_REPEAT		1178966	1					
ANR	1179336	ExpressionStatement	add_state |= CEC_CONT_BIG_REPEAT	3584:3:79441:79473	1178966	1	True				
ANR	1179337	AssignmentExpression	add_state |= CEC_CONT_BIG_REPEAT		1178966	0		|=			
ANR	1179338	Identifier	add_state		1178966	0					
ANR	1179339	Identifier	CEC_CONT_BIG_REPEAT		1178966	1					
ANR	1179340	IfStatement	if ( ( ( state & CEC_IN_INFINITE_REPEAT ) != 0 && var_num != 0 ) || ( ( state & CEC_CONT_BIG_REPEAT ) != 0 && var_num >= CEC_THRES_NUM_BIG_REPEAT ) )		1178966	2					
ANR	1179341	Condition	( ( state & CEC_IN_INFINITE_REPEAT ) != 0 && var_num != 0 ) || ( ( state & CEC_CONT_BIG_REPEAT ) != 0 && var_num >= CEC_THRES_NUM_BIG_REPEAT )	3586:5:79481:79625	1178966	0	True				
ANR	1179342	OrExpression	( ( state & CEC_IN_INFINITE_REPEAT ) != 0 && var_num != 0 ) || ( ( state & CEC_CONT_BIG_REPEAT ) != 0 && var_num >= CEC_THRES_NUM_BIG_REPEAT )		1178966	0		||			
ANR	1179343	AndExpression	( state & CEC_IN_INFINITE_REPEAT ) != 0 && var_num != 0		1178966	0		&&			
ANR	1179344	EqualityExpression	( state & CEC_IN_INFINITE_REPEAT ) != 0		1178966	0		!=			
ANR	1179345	BitAndExpression	state & CEC_IN_INFINITE_REPEAT		1178966	0		&			
ANR	1179346	Identifier	state		1178966	0					
ANR	1179347	Identifier	CEC_IN_INFINITE_REPEAT		1178966	1					
ANR	1179348	PrimaryExpression	0		1178966	1					
ANR	1179349	EqualityExpression	var_num != 0		1178966	1		!=			
ANR	1179350	Identifier	var_num		1178966	0					
ANR	1179351	PrimaryExpression	0		1178966	1					
ANR	1179352	AndExpression	( state & CEC_CONT_BIG_REPEAT ) != 0 && var_num >= CEC_THRES_NUM_BIG_REPEAT		1178966	1		&&			
ANR	1179353	EqualityExpression	( state & CEC_CONT_BIG_REPEAT ) != 0		1178966	0		!=			
ANR	1179354	BitAndExpression	state & CEC_CONT_BIG_REPEAT		1178966	0		&			
ANR	1179355	Identifier	state		1178966	0					
ANR	1179356	Identifier	CEC_CONT_BIG_REPEAT		1178966	1					
ANR	1179357	PrimaryExpression	0		1178966	1					
ANR	1179358	RelationalExpression	var_num >= CEC_THRES_NUM_BIG_REPEAT		1178966	1		>=			
ANR	1179359	Identifier	var_num		1178966	0					
ANR	1179360	Identifier	CEC_THRES_NUM_BIG_REPEAT		1178966	1					
ANR	1179361	CompoundStatement		77:44:1786:1786	1178966	1					
ANR	1179362	IfStatement	if ( qn -> comb_exp_check_num == 0 )		1178966	0					
ANR	1179363	Condition	qn -> comb_exp_check_num == 0	3589:7:79637:79663	1178966	0	True				
ANR	1179364	EqualityExpression	qn -> comb_exp_check_num == 0		1178966	0		==			
ANR	1179365	PtrMemberAccess	qn -> comb_exp_check_num		1178966	0					
ANR	1179366	Identifier	qn		1178966	0					
ANR	1179367	Identifier	comb_exp_check_num		1178966	1					
ANR	1179368	PrimaryExpression	0		1178966	1					
ANR	1179369	CompoundStatement		78:36:1824:1824	1178966	1					
ANR	1179370	ExpressionStatement	env -> num_comb_exp_check ++	3590:5:79673:79698	1178966	0	True				
ANR	1179371	PostIncDecOperationExpression	env -> num_comb_exp_check ++		1178966	0					
ANR	1179372	PtrMemberAccess	env -> num_comb_exp_check		1178966	0					
ANR	1179373	Identifier	env		1178966	0					
ANR	1179374	Identifier	num_comb_exp_check		1178966	1					
ANR	1179375	IncDec	++		1178966	1					
ANR	1179376	ExpressionStatement	qn -> comb_exp_check_num = env -> num_comb_exp_check	3591:5:79705:79753	1178966	1	True				
ANR	1179377	AssignmentExpression	qn -> comb_exp_check_num = env -> num_comb_exp_check		1178966	0		=			
ANR	1179378	PtrMemberAccess	qn -> comb_exp_check_num		1178966	0					
ANR	1179379	Identifier	qn		1178966	0					
ANR	1179380	Identifier	comb_exp_check_num		1178966	1					
ANR	1179381	PtrMemberAccess	env -> num_comb_exp_check		1178966	1					
ANR	1179382	Identifier	env		1178966	0					
ANR	1179383	Identifier	num_comb_exp_check		1178966	1					
ANR	1179384	IfStatement	if ( env -> curr_max_regnum > env -> comb_exp_max_regnum )		1178966	2					
ANR	1179385	Condition	env -> curr_max_regnum > env -> comb_exp_max_regnum	3592:9:79764:79810	1178966	0	True				
ANR	1179386	RelationalExpression	env -> curr_max_regnum > env -> comb_exp_max_regnum		1178966	0		>			
ANR	1179387	PtrMemberAccess	env -> curr_max_regnum		1178966	0					
ANR	1179388	Identifier	env		1178966	0					
ANR	1179389	Identifier	curr_max_regnum		1178966	1					
ANR	1179390	PtrMemberAccess	env -> comb_exp_max_regnum		1178966	1					
ANR	1179391	Identifier	env		1178966	0					
ANR	1179392	Identifier	comb_exp_max_regnum		1178966	1					
ANR	1179393	ExpressionStatement	env -> comb_exp_max_regnum = env -> curr_max_regnum	3593:7:79820:79867	1178966	1	True				
ANR	1179394	AssignmentExpression	env -> comb_exp_max_regnum = env -> curr_max_regnum		1178966	0		=			
ANR	1179395	PtrMemberAccess	env -> comb_exp_max_regnum		1178966	0					
ANR	1179396	Identifier	env		1178966	0					
ANR	1179397	Identifier	comb_exp_max_regnum		1178966	1					
ANR	1179398	PtrMemberAccess	env -> curr_max_regnum		1178966	1					
ANR	1179399	Identifier	env		1178966	0					
ANR	1179400	Identifier	curr_max_regnum		1178966	1					
ANR	1179401	ExpressionStatement	"r = setup_comb_exp_check ( target , child_state , env )"	3598:6:79892:79942	1178966	7	True				
ANR	1179402	AssignmentExpression	"r = setup_comb_exp_check ( target , child_state , env )"		1178966	0		=			
ANR	1179403	Identifier	r		1178966	0					
ANR	1179404	CallExpression	"setup_comb_exp_check ( target , child_state , env )"		1178966	1					
ANR	1179405	Callee	setup_comb_exp_check		1178966	0					
ANR	1179406	Identifier	setup_comb_exp_check		1178966	0					
ANR	1179407	ArgumentList	target		1178966	1					
ANR	1179408	Argument	target		1178966	0					
ANR	1179409	Identifier	target		1178966	0					
ANR	1179410	Argument	child_state		1178966	1					
ANR	1179411	Identifier	child_state		1178966	0					
ANR	1179412	Argument	env		1178966	2					
ANR	1179413	Identifier	env		1178966	0					
ANR	1179414	ExpressionStatement	r |= add_state	3599:6:79950:79964	1178966	8	True				
ANR	1179415	AssignmentExpression	r |= add_state		1178966	0		|=			
ANR	1179416	Identifier	r		1178966	0					
ANR	1179417	Identifier	add_state		1178966	1					
ANR	1179418	BreakStatement	break ;	3601:4:79976:79981	1178966	8	True				
ANR	1179419	Label	case NT_ENCLOSE :	3603:2:79986:80001	1178966	9	True				
ANR	1179420	Identifier	NT_ENCLOSE		1178966	0					
ANR	1179421	CompoundStatement		94:6:2173:2205	1178966	10					
ANR	1179422	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	3605:6:80015:80047	1178966	0	True				
ANR	1179423	IdentifierDecl	* en = NENCLOSE ( node )		1178966	0					
ANR	1179424	IdentifierDeclType	EncloseNode *		1178966	0					
ANR	1179425	Identifier	en		1178966	1					
ANR	1179426	AssignmentExpression	* en = NENCLOSE ( node )		1178966	2		=			
ANR	1179427	Identifier	en		1178966	0					
ANR	1179428	CallExpression	NENCLOSE ( node )		1178966	1					
ANR	1179429	Callee	NENCLOSE		1178966	0					
ANR	1179430	Identifier	NENCLOSE		1178966	0					
ANR	1179431	ArgumentList	node		1178966	1					
ANR	1179432	Argument	node		1178966	0					
ANR	1179433	Identifier	node		1178966	0					
ANR	1179434	SwitchStatement	switch ( en -> type )		1178966	1					
ANR	1179435	Condition	en -> type	3607:14:80064:80071	1178966	0	True				
ANR	1179436	PtrMemberAccess	en -> type		1178966	0					
ANR	1179437	Identifier	en		1178966	0					
ANR	1179438	Identifier	type		1178966	1					
ANR	1179439	CompoundStatement		96:24:2232:2232	1178966	1					
ANR	1179440	Label	case ENCLOSE_MEMORY :	3608:6:80082:80101	1178966	0	True				
ANR	1179441	Identifier	ENCLOSE_MEMORY		1178966	0					
ANR	1179442	CompoundStatement		98:1:2262:2262	1178966	1					
ANR	1179443	IfStatement	if ( env -> curr_max_regnum < en -> regnum )		1178966	0					
ANR	1179444	Condition	env -> curr_max_regnum < en -> regnum	3610:7:80113:80145	1178966	0	True				
ANR	1179445	RelationalExpression	env -> curr_max_regnum < en -> regnum		1178966	0		<			
ANR	1179446	PtrMemberAccess	env -> curr_max_regnum		1178966	0					
ANR	1179447	Identifier	env		1178966	0					
ANR	1179448	Identifier	curr_max_regnum		1178966	1					
ANR	1179449	PtrMemberAccess	en -> regnum		1178966	1					
ANR	1179450	Identifier	en		1178966	0					
ANR	1179451	Identifier	regnum		1178966	1					
ANR	1179452	ExpressionStatement	env -> curr_max_regnum = en -> regnum	3611:5:80153:80186	1178966	1	True				
ANR	1179453	AssignmentExpression	env -> curr_max_regnum = en -> regnum		1178966	0		=			
ANR	1179454	PtrMemberAccess	env -> curr_max_regnum		1178966	0					
ANR	1179455	Identifier	env		1178966	0					
ANR	1179456	Identifier	curr_max_regnum		1178966	1					
ANR	1179457	PtrMemberAccess	en -> regnum		1178966	1					
ANR	1179458	Identifier	en		1178966	0					
ANR	1179459	Identifier	regnum		1178966	1					
ANR	1179460	ExpressionStatement	"r = setup_comb_exp_check ( en -> target , state , env )"	3613:3:80192:80240	1178966	1	True				
ANR	1179461	AssignmentExpression	"r = setup_comb_exp_check ( en -> target , state , env )"		1178966	0		=			
ANR	1179462	Identifier	r		1178966	0					
ANR	1179463	CallExpression	"setup_comb_exp_check ( en -> target , state , env )"		1178966	1					
ANR	1179464	Callee	setup_comb_exp_check		1178966	0					
ANR	1179465	Identifier	setup_comb_exp_check		1178966	0					
ANR	1179466	ArgumentList	en -> target		1178966	1					
ANR	1179467	Argument	en -> target		1178966	0					
ANR	1179468	PtrMemberAccess	en -> target		1178966	0					
ANR	1179469	Identifier	en		1178966	0					
ANR	1179470	Identifier	target		1178966	1					
ANR	1179471	Argument	state		1178966	1					
ANR	1179472	Identifier	state		1178966	0					
ANR	1179473	Argument	env		1178966	2					
ANR	1179474	Identifier	env		1178966	0					
ANR	1179475	BreakStatement	break ;	3615:1:80246:80251	1178966	2	True				
ANR	1179476	Label	default :	3617:6:80260:80267	1178966	3	True				
ANR	1179477	Identifier	default		1178966	0					
ANR	1179478	ExpressionStatement	"r = setup_comb_exp_check ( en -> target , state , env )"	3618:1:80270:80318	1178966	4	True				
ANR	1179479	AssignmentExpression	"r = setup_comb_exp_check ( en -> target , state , env )"		1178966	0		=			
ANR	1179480	Identifier	r		1178966	0					
ANR	1179481	CallExpression	"setup_comb_exp_check ( en -> target , state , env )"		1178966	1					
ANR	1179482	Callee	setup_comb_exp_check		1178966	0					
ANR	1179483	Identifier	setup_comb_exp_check		1178966	0					
ANR	1179484	ArgumentList	en -> target		1178966	1					
ANR	1179485	Argument	en -> target		1178966	0					
ANR	1179486	PtrMemberAccess	en -> target		1178966	0					
ANR	1179487	Identifier	en		1178966	0					
ANR	1179488	Identifier	target		1178966	1					
ANR	1179489	Argument	state		1178966	1					
ANR	1179490	Identifier	state		1178966	0					
ANR	1179491	Argument	env		1178966	2					
ANR	1179492	Identifier	env		1178966	0					
ANR	1179493	BreakStatement	break ;	3619:1:80321:80326	1178966	5	True				
ANR	1179494	BreakStatement	break ;	3622:4:80346:80351	1178966	11	True				
ANR	1179495	Label	case NT_CALL :	3625:2:80379:80391	1178966	12	True				
ANR	1179496	Identifier	NT_CALL		1178966	0					
ANR	1179497	IfStatement	if ( IS_CALL_RECURSION ( NCALL ( node ) ) )		1178966	13					
ANR	1179498	Condition	IS_CALL_RECURSION ( NCALL ( node ) )	3626:8:80401:80430	1178966	0	True				
ANR	1179499	CallExpression	IS_CALL_RECURSION ( NCALL ( node ) )		1178966	0					
ANR	1179500	Callee	IS_CALL_RECURSION		1178966	0					
ANR	1179501	Identifier	IS_CALL_RECURSION		1178966	0					
ANR	1179502	ArgumentList	NCALL ( node )		1178966	1					
ANR	1179503	Argument	NCALL ( node )		1178966	0					
ANR	1179504	CallExpression	NCALL ( node )		1178966	0					
ANR	1179505	Callee	NCALL		1178966	0					
ANR	1179506	Identifier	NCALL		1178966	0					
ANR	1179507	ArgumentList	node		1178966	1					
ANR	1179508	Argument	node		1178966	0					
ANR	1179509	Identifier	node		1178966	0					
ANR	1179510	ExpressionStatement	env -> has_recursion = 1	3627:6:80439:80461	1178966	1	True				
ANR	1179511	AssignmentExpression	env -> has_recursion = 1		1178966	0		=			
ANR	1179512	PtrMemberAccess	env -> has_recursion		1178966	0					
ANR	1179513	Identifier	env		1178966	0					
ANR	1179514	Identifier	has_recursion		1178966	1					
ANR	1179515	PrimaryExpression	1		1178966	1					
ANR	1179516	ElseStatement	else		1178966	0					
ANR	1179517	ExpressionStatement	"r = setup_comb_exp_check ( NCALL ( node ) -> target , state , env )"	3629:6:80478:80535	1178966	0	True				
ANR	1179518	AssignmentExpression	"r = setup_comb_exp_check ( NCALL ( node ) -> target , state , env )"		1178966	0		=			
ANR	1179519	Identifier	r		1178966	0					
ANR	1179520	CallExpression	"setup_comb_exp_check ( NCALL ( node ) -> target , state , env )"		1178966	1					
ANR	1179521	Callee	setup_comb_exp_check		1178966	0					
ANR	1179522	Identifier	setup_comb_exp_check		1178966	0					
ANR	1179523	ArgumentList	NCALL ( node ) -> target		1178966	1					
ANR	1179524	Argument	NCALL ( node ) -> target		1178966	0					
ANR	1179525	PtrMemberAccess	NCALL ( node ) -> target		1178966	0					
ANR	1179526	CallExpression	NCALL ( node )		1178966	0					
ANR	1179527	Callee	NCALL		1178966	0					
ANR	1179528	Identifier	NCALL		1178966	0					
ANR	1179529	ArgumentList	node		1178966	1					
ANR	1179530	Argument	node		1178966	0					
ANR	1179531	Identifier	node		1178966	0					
ANR	1179532	Identifier	target		1178966	1					
ANR	1179533	Argument	state		1178966	1					
ANR	1179534	Identifier	state		1178966	0					
ANR	1179535	Argument	env		1178966	2					
ANR	1179536	Identifier	env		1178966	0					
ANR	1179537	BreakStatement	break ;	3630:4:80541:80546	1178966	14	True				
ANR	1179538	Label	default :	3633:2:80558:80565	1178966	15	True				
ANR	1179539	Identifier	default		1178966	0					
ANR	1179540	BreakStatement	break ;	3634:4:80571:80576	1178966	16	True				
ANR	1179541	ReturnStatement	return r ;	3637:2:80585:80593	1178966	4	True				
ANR	1179542	Identifier	r		1178966	0					
ANR	1179543	ReturnType	static int		1178966	1					
ANR	1179544	Identifier	setup_comb_exp_check		1178966	2					
ANR	1179545	ParameterList	"Node * node , int state , ScanEnv * env"		1178966	3					
ANR	1179546	Parameter	Node * node	3511:21:77804:77813	1178966	0	True				
ANR	1179547	ParameterType	Node *		1178966	0					
ANR	1179548	Identifier	node		1178966	1					
ANR	1179549	Parameter	int state	3511:33:77816:77824	1178966	1	True				
ANR	1179550	ParameterType	int		1178966	0					
ANR	1179551	Identifier	state		1178966	1					
ANR	1179552	Parameter	ScanEnv * env	3511:44:77827:77838	1178966	2	True				
ANR	1179553	ParameterType	ScanEnv *		1178966	0					
ANR	1179554	Identifier	env		1178966	1					
ANR	1179555	CFGEntryNode	ENTRY		1178966		True				
ANR	1179556	CFGExitNode	EXIT		1178966		True				
ANR	1179557	Symbol	NCAR		1178966						
ANR	1179558	Symbol	prev		1178966						
ANR	1179559	Symbol	add_state		1178966						
ANR	1179560	Symbol	type		1178966						
ANR	1179561	Symbol	NQTFR		1178966						
ANR	1179562	Symbol	ENCLOSE_MEMORY		1178966						
ANR	1179563	Symbol	en -> type		1178966						
ANR	1179564	Symbol	env -> curr_max_regnum		1178966						
ANR	1179565	Symbol	state		1178966						
ANR	1179566	Symbol	IS_REPEAT_INFINITE		1178966						
ANR	1179567	Symbol	env -> backrefed_mem		1178966						
ANR	1179568	Symbol	qn		1178966						
ANR	1179569	Symbol	ret		1178966						
ANR	1179570	Symbol	CEC_IN_FINITE_REPEAT		1178966						
ANR	1179571	Symbol	en -> regnum		1178966						
ANR	1179572	Symbol	CEC_THRES_NUM_BIG_REPEAT		1178966						
ANR	1179573	Symbol	NCDR		1178966						
ANR	1179574	Symbol	* env		1178966						
ANR	1179575	Symbol	en		1178966						
ANR	1179576	Symbol	qn -> target		1178966						
ANR	1179577	Symbol	env -> has_recursion		1178966						
ANR	1179578	Symbol	node		1178966						
ANR	1179579	Symbol	qn -> upper		1178966						
ANR	1179580	Symbol	q -> greedy		1178966						
ANR	1179581	Symbol	NT_ENCLOSE		1178966						
ANR	1179582	Symbol	IS_CALL_RECURSION		1178966						
ANR	1179583	Symbol	NULL_NODE		1178966						
ANR	1179584	Symbol	* qn		1178966						
ANR	1179585	Symbol	qn -> greedy		1178966						
ANR	1179586	Symbol	IS_NOT_NULL		1178966						
ANR	1179587	Symbol	child_state		1178966						
ANR	1179588	Symbol	NCALL		1178966						
ANR	1179589	Symbol	env -> num_comb_exp_check		1178966						
ANR	1179590	Symbol	* en		1178966						
ANR	1179591	Symbol	CEC_CONT_BIG_REPEAT		1178966						
ANR	1179592	Symbol	q -> upper		1178966						
ANR	1179593	Symbol	qn -> lower		1178966						
ANR	1179594	Symbol	NT_QTFR		1178966						
ANR	1179595	Symbol	NENCLOSE		1178966						
ANR	1179596	Symbol	setup_comb_exp_check		1178966						
ANR	1179597	Symbol	NCALL ( node ) -> target		1178966						
ANR	1179598	Symbol	env -> comb_exp_max_regnum		1178966						
ANR	1179599	Symbol	qn -> comb_exp_check_num		1178966						
ANR	1179600	Symbol	CEC_INFINITE_NUM		1178966						
ANR	1179601	Symbol	CEC_IN_INFINITE_REPEAT		1178966						
ANR	1179602	Symbol	env		1178966						
ANR	1179603	Symbol	target		1178966						
ANR	1179604	Symbol	q		1178966						
ANR	1179605	Symbol	r		1178966						
ANR	1179606	Symbol	var_num		1178966						
ANR	1179607	Symbol	en -> target		1178966						
ANR	1179608	Symbol	NTYPE		1178966						
ANR	1179609	Symbol	* q		1178966						
ANR	1179610	Symbol	* NCALL		1178966						
ANR	1179611	Function	setup_tree	3654:0:81047:87189							
ANR	1179612	FunctionDef	"setup_tree (Node * node , regex_t * reg , int state , ScanEnv * env)"		1179611	0					
ANR	1179613	CompoundStatement		3656:0:81120:87189	1179611	0					
ANR	1179614	IdentifierDeclStatement	int type ;	3657:2:81124:81132	1179611	0	True				
ANR	1179615	IdentifierDecl	type		1179611	0					
ANR	1179616	IdentifierDeclType	int		1179611	0					
ANR	1179617	Identifier	type		1179611	1					
ANR	1179618	IdentifierDeclStatement	int r = 0 ;	3658:2:81136:81145	1179611	1	True				
ANR	1179619	IdentifierDecl	r = 0		1179611	0					
ANR	1179620	IdentifierDeclType	int		1179611	0					
ANR	1179621	Identifier	r		1179611	1					
ANR	1179622	AssignmentExpression	r = 0		1179611	2		=			
ANR	1179623	Identifier	r		1179611	0					
ANR	1179624	PrimaryExpression	0		1179611	1					
ANR	1179625	ExpressionStatement	type = NTYPE ( node )	3660:2:81150:81168	1179611	2	True				
ANR	1179626	AssignmentExpression	type = NTYPE ( node )		1179611	0		=			
ANR	1179627	Identifier	type		1179611	0					
ANR	1179628	CallExpression	NTYPE ( node )		1179611	1					
ANR	1179629	Callee	NTYPE		1179611	0					
ANR	1179630	Identifier	NTYPE		1179611	0					
ANR	1179631	ArgumentList	node		1179611	1					
ANR	1179632	Argument	node		1179611	0					
ANR	1179633	Identifier	node		1179611	0					
ANR	1179634	SwitchStatement	switch ( type )		1179611	3					
ANR	1179635	Condition	type	3661:10:81180:81183	1179611	0	True				
ANR	1179636	Identifier	type		1179611	0					
ANR	1179637	CompoundStatement		6:16:65:65	1179611	1					
ANR	1179638	Label	case NT_LIST :	3662:2:81190:81202	1179611	0	True				
ANR	1179639	Identifier	NT_LIST		1179611	0					
ANR	1179640	CompoundStatement		9:6:95:117	1179611	1					
ANR	1179641	IdentifierDeclStatement	Node * prev = NULL_NODE ;	3664:6:81216:81238	1179611	0	True				
ANR	1179642	IdentifierDecl	* prev = NULL_NODE		1179611	0					
ANR	1179643	IdentifierDeclType	Node *		1179611	0					
ANR	1179644	Identifier	prev		1179611	1					
ANR	1179645	AssignmentExpression	* prev = NULL_NODE		1179611	2		=			
ANR	1179646	Identifier	NULL_NODE		1179611	0					
ANR	1179647	Identifier	NULL_NODE		1179611	1					
ANR	1179648	DoStatement	do		1179611	1					
ANR	1179649	CompoundStatement		10:9:128:128	1179611	0					
ANR	1179650	ExpressionStatement	"r = setup_tree ( NCAR ( node ) , reg , state , env )"	3666:1:81252:81295	1179611	0	True				
ANR	1179651	AssignmentExpression	"r = setup_tree ( NCAR ( node ) , reg , state , env )"		1179611	0		=			
ANR	1179652	Identifier	r		1179611	0					
ANR	1179653	CallExpression	"setup_tree ( NCAR ( node ) , reg , state , env )"		1179611	1					
ANR	1179654	Callee	setup_tree		1179611	0					
ANR	1179655	Identifier	setup_tree		1179611	0					
ANR	1179656	ArgumentList	NCAR ( node )		1179611	1					
ANR	1179657	Argument	NCAR ( node )		1179611	0					
ANR	1179658	CallExpression	NCAR ( node )		1179611	0					
ANR	1179659	Callee	NCAR		1179611	0					
ANR	1179660	Identifier	NCAR		1179611	0					
ANR	1179661	ArgumentList	node		1179611	1					
ANR	1179662	Argument	node		1179611	0					
ANR	1179663	Identifier	node		1179611	0					
ANR	1179664	Argument	reg		1179611	1					
ANR	1179665	Identifier	reg		1179611	0					
ANR	1179666	Argument	state		1179611	2					
ANR	1179667	Identifier	state		1179611	0					
ANR	1179668	Argument	env		1179611	3					
ANR	1179669	Identifier	env		1179611	0					
ANR	1179670	IfStatement	if ( IS_NOT_NULL ( prev ) && r == 0 )		1179611	1					
ANR	1179671	Condition	IS_NOT_NULL ( prev ) && r == 0	3667:5:81302:81328	1179611	0	True				
ANR	1179672	AndExpression	IS_NOT_NULL ( prev ) && r == 0		1179611	0		&&			
ANR	1179673	CallExpression	IS_NOT_NULL ( prev )		1179611	0					
ANR	1179674	Callee	IS_NOT_NULL		1179611	0					
ANR	1179675	Identifier	IS_NOT_NULL		1179611	0					
ANR	1179676	ArgumentList	prev		1179611	1					
ANR	1179677	Argument	prev		1179611	0					
ANR	1179678	Identifier	prev		1179611	0					
ANR	1179679	EqualityExpression	r == 0		1179611	1		==			
ANR	1179680	Identifier	r		1179611	0					
ANR	1179681	PrimaryExpression	0		1179611	1					
ANR	1179682	CompoundStatement		12:34:210:210	1179611	1					
ANR	1179683	ExpressionStatement	"r = next_setup ( prev , NCAR ( node ) , reg )"	3668:3:81336:81373	1179611	0	True				
ANR	1179684	AssignmentExpression	"r = next_setup ( prev , NCAR ( node ) , reg )"		1179611	0		=			
ANR	1179685	Identifier	r		1179611	0					
ANR	1179686	CallExpression	"next_setup ( prev , NCAR ( node ) , reg )"		1179611	1					
ANR	1179687	Callee	next_setup		1179611	0					
ANR	1179688	Identifier	next_setup		1179611	0					
ANR	1179689	ArgumentList	prev		1179611	1					
ANR	1179690	Argument	prev		1179611	0					
ANR	1179691	Identifier	prev		1179611	0					
ANR	1179692	Argument	NCAR ( node )		1179611	1					
ANR	1179693	CallExpression	NCAR ( node )		1179611	0					
ANR	1179694	Callee	NCAR		1179611	0					
ANR	1179695	Identifier	NCAR		1179611	0					
ANR	1179696	ArgumentList	node		1179611	1					
ANR	1179697	Argument	node		1179611	0					
ANR	1179698	Identifier	node		1179611	0					
ANR	1179699	Argument	reg		1179611	2					
ANR	1179700	Identifier	reg		1179611	0					
ANR	1179701	ExpressionStatement	prev = NCAR ( node )	3670:1:81379:81396	1179611	2	True				
ANR	1179702	AssignmentExpression	prev = NCAR ( node )		1179611	0		=			
ANR	1179703	Identifier	prev		1179611	0					
ANR	1179704	CallExpression	NCAR ( node )		1179611	1					
ANR	1179705	Callee	NCAR		1179611	0					
ANR	1179706	Identifier	NCAR		1179611	0					
ANR	1179707	ArgumentList	node		1179611	1					
ANR	1179708	Argument	node		1179611	0					
ANR	1179709	Identifier	node		1179611	0					
ANR	1179710	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	3671:15:81413:81452	1179611	1	True				
ANR	1179711	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1179611	0		&&			
ANR	1179712	EqualityExpression	r == 0		1179611	0		==			
ANR	1179713	Identifier	r		1179611	0					
ANR	1179714	PrimaryExpression	0		1179611	1					
ANR	1179715	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1179611	1					
ANR	1179716	Callee	IS_NOT_NULL		1179611	0					
ANR	1179717	Identifier	IS_NOT_NULL		1179611	0					
ANR	1179718	ArgumentList	node = NCDR ( node )		1179611	1					
ANR	1179719	Argument	node = NCDR ( node )		1179611	0					
ANR	1179720	AssignmentExpression	node = NCDR ( node )		1179611	0		=			
ANR	1179721	Identifier	node		1179611	0					
ANR	1179722	CallExpression	NCDR ( node )		1179611	1					
ANR	1179723	Callee	NCDR		1179611	0					
ANR	1179724	Identifier	NCDR		1179611	0					
ANR	1179725	ArgumentList	node		1179611	1					
ANR	1179726	Argument	node		1179611	0					
ANR	1179727	Identifier	node		1179611	0					
ANR	1179728	BreakStatement	break ;	3673:4:81466:81471	1179611	2	True				
ANR	1179729	Label	case NT_ALT :	3675:2:81476:81487	1179611	3	True				
ANR	1179730	Identifier	NT_ALT		1179611	0					
ANR	1179731	DoStatement	do		1179611	4					
ANR	1179732	CompoundStatement		21:7:375:375	1179611	0					
ANR	1179733	ExpressionStatement	"r = setup_tree ( NCAR ( node ) , reg , ( state | IN_ALT ) , env )"	3677:6:81504:81558	1179611	0	True				
ANR	1179734	AssignmentExpression	"r = setup_tree ( NCAR ( node ) , reg , ( state | IN_ALT ) , env )"		1179611	0		=			
ANR	1179735	Identifier	r		1179611	0					
ANR	1179736	CallExpression	"setup_tree ( NCAR ( node ) , reg , ( state | IN_ALT ) , env )"		1179611	1					
ANR	1179737	Callee	setup_tree		1179611	0					
ANR	1179738	Identifier	setup_tree		1179611	0					
ANR	1179739	ArgumentList	NCAR ( node )		1179611	1					
ANR	1179740	Argument	NCAR ( node )		1179611	0					
ANR	1179741	CallExpression	NCAR ( node )		1179611	0					
ANR	1179742	Callee	NCAR		1179611	0					
ANR	1179743	Identifier	NCAR		1179611	0					
ANR	1179744	ArgumentList	node		1179611	1					
ANR	1179745	Argument	node		1179611	0					
ANR	1179746	Identifier	node		1179611	0					
ANR	1179747	Argument	reg		1179611	1					
ANR	1179748	Identifier	reg		1179611	0					
ANR	1179749	Argument	state | IN_ALT		1179611	2					
ANR	1179750	InclusiveOrExpression	state | IN_ALT		1179611	0		|			
ANR	1179751	Identifier	state		1179611	0					
ANR	1179752	Identifier	IN_ALT		1179611	1					
ANR	1179753	Argument	env		1179611	3					
ANR	1179754	Identifier	env		1179611	0					
ANR	1179755	Condition	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )	3678:13:81573:81612	1179611	1	True				
ANR	1179756	AndExpression	r == 0 && IS_NOT_NULL ( node = NCDR ( node ) )		1179611	0		&&			
ANR	1179757	EqualityExpression	r == 0		1179611	0		==			
ANR	1179758	Identifier	r		1179611	0					
ANR	1179759	PrimaryExpression	0		1179611	1					
ANR	1179760	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1179611	1					
ANR	1179761	Callee	IS_NOT_NULL		1179611	0					
ANR	1179762	Identifier	IS_NOT_NULL		1179611	0					
ANR	1179763	ArgumentList	node = NCDR ( node )		1179611	1					
ANR	1179764	Argument	node = NCDR ( node )		1179611	0					
ANR	1179765	AssignmentExpression	node = NCDR ( node )		1179611	0		=			
ANR	1179766	Identifier	node		1179611	0					
ANR	1179767	CallExpression	NCDR ( node )		1179611	1					
ANR	1179768	Callee	NCDR		1179611	0					
ANR	1179769	Identifier	NCDR		1179611	0					
ANR	1179770	ArgumentList	node		1179611	1					
ANR	1179771	Argument	node		1179611	0					
ANR	1179772	Identifier	node		1179611	0					
ANR	1179773	BreakStatement	break ;	3679:4:81620:81625	1179611	5	True				
ANR	1179774	Label	case NT_CCLASS :	3681:2:81630:81644	1179611	6	True				
ANR	1179775	Identifier	NT_CCLASS		1179611	0					
ANR	1179776	BreakStatement	break ;	3682:4:81650:81655	1179611	7	True				
ANR	1179777	Label	case NT_STR :	3684:2:81660:81671	1179611	8	True				
ANR	1179778	Identifier	NT_STR		1179611	0					
ANR	1179779	IfStatement	if ( IS_IGNORECASE ( reg -> options ) && ! NSTRING_IS_RAW ( node ) )		1179611	9					
ANR	1179780	Condition	IS_IGNORECASE ( reg -> options ) && ! NSTRING_IS_RAW ( node )	3685:8:81681:81732	1179611	0	True				
ANR	1179781	AndExpression	IS_IGNORECASE ( reg -> options ) && ! NSTRING_IS_RAW ( node )		1179611	0		&&			
ANR	1179782	CallExpression	IS_IGNORECASE ( reg -> options )		1179611	0					
ANR	1179783	Callee	IS_IGNORECASE		1179611	0					
ANR	1179784	Identifier	IS_IGNORECASE		1179611	0					
ANR	1179785	ArgumentList	reg -> options		1179611	1					
ANR	1179786	Argument	reg -> options		1179611	0					
ANR	1179787	PtrMemberAccess	reg -> options		1179611	0					
ANR	1179788	Identifier	reg		1179611	0					
ANR	1179789	Identifier	options		1179611	1					
ANR	1179790	UnaryOperationExpression	! NSTRING_IS_RAW ( node )		1179611	1					
ANR	1179791	UnaryOperator	!		1179611	0					
ANR	1179792	CallExpression	NSTRING_IS_RAW ( node )		1179611	1					
ANR	1179793	Callee	NSTRING_IS_RAW		1179611	0					
ANR	1179794	Identifier	NSTRING_IS_RAW		1179611	0					
ANR	1179795	ArgumentList	node		1179611	1					
ANR	1179796	Argument	node		1179611	0					
ANR	1179797	Identifier	node		1179611	0					
ANR	1179798	CompoundStatement		30:62:614:614	1179611	1					
ANR	1179799	ExpressionStatement	"r = expand_case_fold_string ( node , reg )"	3686:6:81743:81781	1179611	0	True				
ANR	1179800	AssignmentExpression	"r = expand_case_fold_string ( node , reg )"		1179611	0		=			
ANR	1179801	Identifier	r		1179611	0					
ANR	1179802	CallExpression	"expand_case_fold_string ( node , reg )"		1179611	1					
ANR	1179803	Callee	expand_case_fold_string		1179611	0					
ANR	1179804	Identifier	expand_case_fold_string		1179611	0					
ANR	1179805	ArgumentList	node		1179611	1					
ANR	1179806	Argument	node		1179611	0					
ANR	1179807	Identifier	node		1179611	0					
ANR	1179808	Argument	reg		1179611	1					
ANR	1179809	Identifier	reg		1179611	0					
ANR	1179810	BreakStatement	break ;	3688:4:81793:81798	1179611	10	True				
ANR	1179811	Label	case NT_CTYPE :	3690:2:81803:81816	1179611	11	True				
ANR	1179812	Identifier	NT_CTYPE		1179611	0					
ANR	1179813	Label	case NT_CANY :	3691:2:81820:81832	1179611	12	True				
ANR	1179814	Identifier	NT_CANY		1179611	0					
ANR	1179815	BreakStatement	break ;	3692:4:81838:81843	1179611	13	True				
ANR	1179816	Label	case NT_CALL :	3695:2:81871:81883	1179611	14	True				
ANR	1179817	Identifier	NT_CALL		1179611	0					
ANR	1179818	BreakStatement	break ;	3696:4:81889:81894	1179611	15	True				
ANR	1179819	Label	case NT_BREF :	3699:2:81906:81918	1179611	16	True				
ANR	1179820	Identifier	NT_BREF		1179611	0					
ANR	1179821	CompoundStatement		49:6:883:909	1179611	17					
ANR	1179822	IdentifierDeclStatement	int i ;	3701:6:81932:81937	1179611	0	True				
ANR	1179823	IdentifierDecl	i		1179611	0					
ANR	1179824	IdentifierDeclType	int		1179611	0					
ANR	1179825	Identifier	i		1179611	1					
ANR	1179826	IdentifierDeclStatement	int * p ;	3702:6:81945:81951	1179611	1	True				
ANR	1179827	IdentifierDecl	* p		1179611	0					
ANR	1179828	IdentifierDeclType	int *		1179611	0					
ANR	1179829	Identifier	p		1179611	1					
ANR	1179830	IdentifierDeclStatement	Node * * nodes = SCANENV_MEM_NODES ( env ) ;	3703:6:81959:81996	1179611	2	True				
ANR	1179831	IdentifierDecl	* * nodes = SCANENV_MEM_NODES ( env )		1179611	0					
ANR	1179832	IdentifierDeclType	Node * *		1179611	0					
ANR	1179833	Identifier	nodes		1179611	1					
ANR	1179834	AssignmentExpression	* * nodes = SCANENV_MEM_NODES ( env )		1179611	2		=			
ANR	1179835	Identifier	nodes		1179611	0					
ANR	1179836	CallExpression	SCANENV_MEM_NODES ( env )		1179611	1					
ANR	1179837	Callee	SCANENV_MEM_NODES		1179611	0					
ANR	1179838	Identifier	SCANENV_MEM_NODES		1179611	0					
ANR	1179839	ArgumentList	env		1179611	1					
ANR	1179840	Argument	env		1179611	0					
ANR	1179841	Identifier	env		1179611	0					
ANR	1179842	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	3704:6:82004:82030	1179611	3	True				
ANR	1179843	IdentifierDecl	* br = NBREF ( node )		1179611	0					
ANR	1179844	IdentifierDeclType	BRefNode *		1179611	0					
ANR	1179845	Identifier	br		1179611	1					
ANR	1179846	AssignmentExpression	* br = NBREF ( node )		1179611	2		=			
ANR	1179847	Identifier	br		1179611	0					
ANR	1179848	CallExpression	NBREF ( node )		1179611	1					
ANR	1179849	Callee	NBREF		1179611	0					
ANR	1179850	Identifier	NBREF		1179611	0					
ANR	1179851	ArgumentList	node		1179611	1					
ANR	1179852	Argument	node		1179611	0					
ANR	1179853	Identifier	node		1179611	0					
ANR	1179854	ExpressionStatement	p = BACKREFS_P ( br )	3705:6:82038:82056	1179611	4	True				
ANR	1179855	AssignmentExpression	p = BACKREFS_P ( br )		1179611	0		=			
ANR	1179856	Identifier	p		1179611	0					
ANR	1179857	CallExpression	BACKREFS_P ( br )		1179611	1					
ANR	1179858	Callee	BACKREFS_P		1179611	0					
ANR	1179859	Identifier	BACKREFS_P		1179611	0					
ANR	1179860	ArgumentList	br		1179611	1					
ANR	1179861	Argument	br		1179611	0					
ANR	1179862	Identifier	br		1179611	0					
ANR	1179863	ForStatement	for ( i = 0 ; i < br -> back_num ; i ++ )		1179611	5					
ANR	1179864	ForInit	i = 0 ;	3706:11:82069:82074	1179611	0	True				
ANR	1179865	AssignmentExpression	i = 0		1179611	0		=			
ANR	1179866	Identifier	i		1179611	0					
ANR	1179867	PrimaryExpression	0		1179611	1					
ANR	1179868	Condition	i < br -> back_num	3706:18:82076:82091	1179611	1	True				
ANR	1179869	RelationalExpression	i < br -> back_num		1179611	0		<			
ANR	1179870	Identifier	i		1179611	0					
ANR	1179871	PtrMemberAccess	br -> back_num		1179611	1					
ANR	1179872	Identifier	br		1179611	0					
ANR	1179873	Identifier	back_num		1179611	1					
ANR	1179874	PostIncDecOperationExpression	i ++	3706:36:82094:82096	1179611	2	True				
ANR	1179875	Identifier	i		1179611	0					
ANR	1179876	IncDec	++		1179611	1					
ANR	1179877	CompoundStatement		51:41:978:978	1179611	3					
ANR	1179878	IfStatement	if ( p [ i ] > env -> num_mem )		1179611	0					
ANR	1179879	Condition	p [ i ] > env -> num_mem	3707:5:82106:82124	1179611	0	True				
ANR	1179880	RelationalExpression	p [ i ] > env -> num_mem		1179611	0		>			
ANR	1179881	ArrayIndexing	p [ i ]		1179611	0					
ANR	1179882	Identifier	p		1179611	0					
ANR	1179883	Identifier	i		1179611	1					
ANR	1179884	PtrMemberAccess	env -> num_mem		1179611	1					
ANR	1179885	Identifier	env		1179611	0					
ANR	1179886	Identifier	num_mem		1179611	1					
ANR	1179887	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3707:27:82128:82158	1179611	1	True				
ANR	1179888	Identifier	ONIGERR_INVALID_BACKREF		1179611	0					
ANR	1179889	ExpressionStatement	"BIT_STATUS_ON_AT ( env -> backrefed_mem , p [ i ] )"	3708:1:82161:82203	1179611	1	True				
ANR	1179890	CallExpression	"BIT_STATUS_ON_AT ( env -> backrefed_mem , p [ i ] )"		1179611	0					
ANR	1179891	Callee	BIT_STATUS_ON_AT		1179611	0					
ANR	1179892	Identifier	BIT_STATUS_ON_AT		1179611	0					
ANR	1179893	ArgumentList	env -> backrefed_mem		1179611	1					
ANR	1179894	Argument	env -> backrefed_mem		1179611	0					
ANR	1179895	PtrMemberAccess	env -> backrefed_mem		1179611	0					
ANR	1179896	Identifier	env		1179611	0					
ANR	1179897	Identifier	backrefed_mem		1179611	1					
ANR	1179898	Argument	p [ i ]		1179611	1					
ANR	1179899	ArrayIndexing	p [ i ]		1179611	0					
ANR	1179900	Identifier	p		1179611	0					
ANR	1179901	Identifier	i		1179611	1					
ANR	1179902	ExpressionStatement	"BIT_STATUS_ON_AT ( env -> bt_mem_start , p [ i ] )"	3709:1:82206:82247	1179611	2	True				
ANR	1179903	CallExpression	"BIT_STATUS_ON_AT ( env -> bt_mem_start , p [ i ] )"		1179611	0					
ANR	1179904	Callee	BIT_STATUS_ON_AT		1179611	0					
ANR	1179905	Identifier	BIT_STATUS_ON_AT		1179611	0					
ANR	1179906	ArgumentList	env -> bt_mem_start		1179611	1					
ANR	1179907	Argument	env -> bt_mem_start		1179611	0					
ANR	1179908	PtrMemberAccess	env -> bt_mem_start		1179611	0					
ANR	1179909	Identifier	env		1179611	0					
ANR	1179910	Identifier	bt_mem_start		1179611	1					
ANR	1179911	Argument	p [ i ]		1179611	1					
ANR	1179912	ArrayIndexing	p [ i ]		1179611	0					
ANR	1179913	Identifier	p		1179611	0					
ANR	1179914	Identifier	i		1179611	1					
ANR	1179915	IfStatement	if ( IS_BACKREF_NEST_LEVEL ( br ) )		1179611	3					
ANR	1179916	Condition	IS_BACKREF_NEST_LEVEL ( br )	3711:5:82284:82308	1179611	0	True				
ANR	1179917	CallExpression	IS_BACKREF_NEST_LEVEL ( br )		1179611	0					
ANR	1179918	Callee	IS_BACKREF_NEST_LEVEL		1179611	0					
ANR	1179919	Identifier	IS_BACKREF_NEST_LEVEL		1179611	0					
ANR	1179920	ArgumentList	br		1179611	1					
ANR	1179921	Argument	br		1179611	0					
ANR	1179922	Identifier	br		1179611	0					
ANR	1179923	CompoundStatement		56:32:1190:1190	1179611	1					
ANR	1179924	ExpressionStatement	"BIT_STATUS_ON_AT ( env -> bt_mem_end , p [ i ] )"	3712:3:82316:82355	1179611	0	True				
ANR	1179925	CallExpression	"BIT_STATUS_ON_AT ( env -> bt_mem_end , p [ i ] )"		1179611	0					
ANR	1179926	Callee	BIT_STATUS_ON_AT		1179611	0					
ANR	1179927	Identifier	BIT_STATUS_ON_AT		1179611	0					
ANR	1179928	ArgumentList	env -> bt_mem_end		1179611	1					
ANR	1179929	Argument	env -> bt_mem_end		1179611	0					
ANR	1179930	PtrMemberAccess	env -> bt_mem_end		1179611	0					
ANR	1179931	Identifier	env		1179611	0					
ANR	1179932	Identifier	bt_mem_end		1179611	1					
ANR	1179933	Argument	p [ i ]		1179611	1					
ANR	1179934	ArrayIndexing	p [ i ]		1179611	0					
ANR	1179935	Identifier	p		1179611	0					
ANR	1179936	Identifier	i		1179611	1					
ANR	1179937	ExpressionStatement	"SET_ENCLOSE_STATUS ( nodes [ p [ i ] ] , NST_MEM_BACKREFED )"	3715:1:82368:82418	1179611	4	True				
ANR	1179938	CallExpression	"SET_ENCLOSE_STATUS ( nodes [ p [ i ] ] , NST_MEM_BACKREFED )"		1179611	0					
ANR	1179939	Callee	SET_ENCLOSE_STATUS		1179611	0					
ANR	1179940	Identifier	SET_ENCLOSE_STATUS		1179611	0					
ANR	1179941	ArgumentList	nodes [ p [ i ] ]		1179611	1					
ANR	1179942	Argument	nodes [ p [ i ] ]		1179611	0					
ANR	1179943	ArrayIndexing	nodes [ p [ i ] ]		1179611	0					
ANR	1179944	Identifier	nodes		1179611	0					
ANR	1179945	ArrayIndexing	p [ i ]		1179611	1					
ANR	1179946	Identifier	p		1179611	0					
ANR	1179947	Identifier	i		1179611	1					
ANR	1179948	Argument	NST_MEM_BACKREFED		1179611	1					
ANR	1179949	Identifier	NST_MEM_BACKREFED		1179611	0					
ANR	1179950	BreakStatement	break ;	3718:4:82438:82443	1179611	18	True				
ANR	1179951	Label	case NT_QTFR :	3720:2:82448:82460	1179611	19	True				
ANR	1179952	Identifier	NT_QTFR		1179611	0					
ANR	1179953	CompoundStatement		69:6:1409:1434	1179611	20					
ANR	1179954	IdentifierDeclStatement	OnigDistance d ;	3722:6:82474:82488	1179611	0	True				
ANR	1179955	IdentifierDecl	d		1179611	0					
ANR	1179956	IdentifierDeclType	OnigDistance		1179611	0					
ANR	1179957	Identifier	d		1179611	1					
ANR	1179958	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	3723:6:82496:82522	1179611	1	True				
ANR	1179959	IdentifierDecl	* qn = NQTFR ( node )		1179611	0					
ANR	1179960	IdentifierDeclType	QtfrNode *		1179611	0					
ANR	1179961	Identifier	qn		1179611	1					
ANR	1179962	AssignmentExpression	* qn = NQTFR ( node )		1179611	2		=			
ANR	1179963	Identifier	qn		1179611	0					
ANR	1179964	CallExpression	NQTFR ( node )		1179611	1					
ANR	1179965	Callee	NQTFR		1179611	0					
ANR	1179966	Identifier	NQTFR		1179611	0					
ANR	1179967	ArgumentList	node		1179611	1					
ANR	1179968	Argument	node		1179611	0					
ANR	1179969	Identifier	node		1179611	0					
ANR	1179970	IdentifierDeclStatement	Node * target = qn -> target ;	3724:6:82530:82555	1179611	2	True				
ANR	1179971	IdentifierDecl	* target = qn -> target		1179611	0					
ANR	1179972	IdentifierDeclType	Node *		1179611	0					
ANR	1179973	Identifier	target		1179611	1					
ANR	1179974	AssignmentExpression	* target = qn -> target		1179611	2		=			
ANR	1179975	Identifier	target		1179611	0					
ANR	1179976	PtrMemberAccess	qn -> target		1179611	1					
ANR	1179977	Identifier	qn		1179611	0					
ANR	1179978	Identifier	target		1179611	1					
ANR	1179979	IfStatement	if ( ( state & IN_REPEAT ) != 0 )		1179611	3					
ANR	1179980	Condition	( state & IN_REPEAT ) != 0	3726:10:82568:82591	1179611	0	True				
ANR	1179981	EqualityExpression	( state & IN_REPEAT ) != 0		1179611	0		!=			
ANR	1179982	BitAndExpression	state & IN_REPEAT		1179611	0		&			
ANR	1179983	Identifier	state		1179611	0					
ANR	1179984	Identifier	IN_REPEAT		1179611	1					
ANR	1179985	PrimaryExpression	0		1179611	1					
ANR	1179986	CompoundStatement		71:36:1473:1473	1179611	1					
ANR	1179987	ExpressionStatement	qn -> state |= NST_IN_REPEAT	3727:8:82604:82630	1179611	0	True				
ANR	1179988	AssignmentExpression	qn -> state |= NST_IN_REPEAT		1179611	0		|=			
ANR	1179989	PtrMemberAccess	qn -> state		1179611	0					
ANR	1179990	Identifier	qn		1179611	0					
ANR	1179991	Identifier	state		1179611	1					
ANR	1179992	Identifier	NST_IN_REPEAT		1179611	1					
ANR	1179993	IfStatement	if ( IS_REPEAT_INFINITE ( qn -> upper ) || qn -> upper >= 1 )		1179611	4					
ANR	1179994	Condition	IS_REPEAT_INFINITE ( qn -> upper ) || qn -> upper >= 1	3730:10:82651:82697	1179611	0	True				
ANR	1179995	OrExpression	IS_REPEAT_INFINITE ( qn -> upper ) || qn -> upper >= 1		1179611	0		||			
ANR	1179996	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1179611	0					
ANR	1179997	Callee	IS_REPEAT_INFINITE		1179611	0					
ANR	1179998	Identifier	IS_REPEAT_INFINITE		1179611	0					
ANR	1179999	ArgumentList	qn -> upper		1179611	1					
ANR	1180000	Argument	qn -> upper		1179611	0					
ANR	1180001	PtrMemberAccess	qn -> upper		1179611	0					
ANR	1180002	Identifier	qn		1179611	0					
ANR	1180003	Identifier	upper		1179611	1					
ANR	1180004	RelationalExpression	qn -> upper >= 1		1179611	1		>=			
ANR	1180005	PtrMemberAccess	qn -> upper		1179611	0					
ANR	1180006	Identifier	qn		1179611	0					
ANR	1180007	Identifier	upper		1179611	1					
ANR	1180008	PrimaryExpression	1		1179611	1					
ANR	1180009	CompoundStatement		75:59:1579:1579	1179611	1					
ANR	1180010	ExpressionStatement	"r = get_min_match_length ( target , & d , env )"	3731:1:82703:82744	1179611	0	True				
ANR	1180011	AssignmentExpression	"r = get_min_match_length ( target , & d , env )"		1179611	0		=			
ANR	1180012	Identifier	r		1179611	0					
ANR	1180013	CallExpression	"get_min_match_length ( target , & d , env )"		1179611	1					
ANR	1180014	Callee	get_min_match_length		1179611	0					
ANR	1180015	Identifier	get_min_match_length		1179611	0					
ANR	1180016	ArgumentList	target		1179611	1					
ANR	1180017	Argument	target		1179611	0					
ANR	1180018	Identifier	target		1179611	0					
ANR	1180019	Argument	& d		1179611	1					
ANR	1180020	UnaryOperationExpression	& d		1179611	0					
ANR	1180021	UnaryOperator	&		1179611	0					
ANR	1180022	Identifier	d		1179611	1					
ANR	1180023	Argument	env		1179611	2					
ANR	1180024	Identifier	env		1179611	0					
ANR	1180025	IfStatement	if ( r )		1179611	1					
ANR	1180026	Condition	r	3732:5:82751:82751	1179611	0	True				
ANR	1180027	Identifier	r		1179611	0					
ANR	1180028	BreakStatement	break ;	3732:8:82754:82759	1179611	1	True				
ANR	1180029	IfStatement	if ( d == 0 )		1179611	2					
ANR	1180030	Condition	d == 0	3733:5:82766:82771	1179611	0	True				
ANR	1180031	EqualityExpression	d == 0		1179611	0		==			
ANR	1180032	Identifier	d		1179611	0					
ANR	1180033	PrimaryExpression	0		1179611	1					
ANR	1180034	CompoundStatement		78:13:1653:1653	1179611	1					
ANR	1180035	ExpressionStatement	qn -> target_empty_info = NQ_TARGET_IS_EMPTY	3734:3:82779:82821	1179611	0	True				
ANR	1180036	AssignmentExpression	qn -> target_empty_info = NQ_TARGET_IS_EMPTY		1179611	0		=			
ANR	1180037	PtrMemberAccess	qn -> target_empty_info		1179611	0					
ANR	1180038	Identifier	qn		1179611	0					
ANR	1180039	Identifier	target_empty_info		1179611	1					
ANR	1180040	Identifier	NQ_TARGET_IS_EMPTY		1179611	1					
ANR	1180041	ExpressionStatement	r = quantifiers_memory_node_info ( target )	3736:3:82881:82921	1179611	1	True				
ANR	1180042	AssignmentExpression	r = quantifiers_memory_node_info ( target )		1179611	0		=			
ANR	1180043	Identifier	r		1179611	0					
ANR	1180044	CallExpression	quantifiers_memory_node_info ( target )		1179611	1					
ANR	1180045	Callee	quantifiers_memory_node_info		1179611	0					
ANR	1180046	Identifier	quantifiers_memory_node_info		1179611	0					
ANR	1180047	ArgumentList	target		1179611	1					
ANR	1180048	Argument	target		1179611	0					
ANR	1180049	Identifier	target		1179611	0					
ANR	1180050	IfStatement	if ( r < 0 )		1179611	2					
ANR	1180051	Condition	r < 0	3737:7:82930:82934	1179611	0	True				
ANR	1180052	RelationalExpression	r < 0		1179611	0		<			
ANR	1180053	Identifier	r		1179611	0					
ANR	1180054	PrimaryExpression	0		1179611	1					
ANR	1180055	BreakStatement	break ;	3737:14:82937:82942	1179611	1	True				
ANR	1180056	IfStatement	if ( r > 0 )		1179611	3					
ANR	1180057	Condition	r > 0	3738:7:82951:82955	1179611	0	True				
ANR	1180058	RelationalExpression	r > 0		1179611	0		>			
ANR	1180059	Identifier	r		1179611	0					
ANR	1180060	PrimaryExpression	0		1179611	1					
ANR	1180061	CompoundStatement		83:14:1837:1837	1179611	1					
ANR	1180062	ExpressionStatement	qn -> target_empty_info = r	3739:5:82965:82990	1179611	0	True				
ANR	1180063	AssignmentExpression	qn -> target_empty_info = r		1179611	0		=			
ANR	1180064	PtrMemberAccess	qn -> target_empty_info		1179611	0					
ANR	1180065	Identifier	qn		1179611	0					
ANR	1180066	Identifier	target_empty_info		1179611	1					
ANR	1180067	Identifier	r		1179611	1					
ANR	1180068	ExpressionStatement	"r = get_max_match_length ( target , & d , env )"	3743:3:83013:83054	1179611	4	True				
ANR	1180069	AssignmentExpression	"r = get_max_match_length ( target , & d , env )"		1179611	0		=			
ANR	1180070	Identifier	r		1179611	0					
ANR	1180071	CallExpression	"get_max_match_length ( target , & d , env )"		1179611	1					
ANR	1180072	Callee	get_max_match_length		1179611	0					
ANR	1180073	Identifier	get_max_match_length		1179611	0					
ANR	1180074	ArgumentList	target		1179611	1					
ANR	1180075	Argument	target		1179611	0					
ANR	1180076	Identifier	target		1179611	0					
ANR	1180077	Argument	& d		1179611	1					
ANR	1180078	UnaryOperationExpression	& d		1179611	0					
ANR	1180079	UnaryOperator	&		1179611	0					
ANR	1180080	Identifier	d		1179611	1					
ANR	1180081	Argument	env		1179611	2					
ANR	1180082	Identifier	env		1179611	0					
ANR	1180083	IfStatement	if ( r == 0 && d == 0 )		1179611	5					
ANR	1180084	Condition	r == 0 && d == 0	3744:7:83063:83078	1179611	0	True				
ANR	1180085	AndExpression	r == 0 && d == 0		1179611	0		&&			
ANR	1180086	EqualityExpression	r == 0		1179611	0		==			
ANR	1180087	Identifier	r		1179611	0					
ANR	1180088	PrimaryExpression	0		1179611	1					
ANR	1180089	EqualityExpression	d == 0		1179611	1		==			
ANR	1180090	Identifier	d		1179611	0					
ANR	1180091	PrimaryExpression	0		1179611	1					
ANR	1180092	CompoundStatement		89:25:1960:1960	1179611	1					
ANR	1180093	ExpressionStatement	qn -> upper = 1	3746:5:83125:83138	1179611	0	True				
ANR	1180094	AssignmentExpression	qn -> upper = 1		1179611	0		=			
ANR	1180095	PtrMemberAccess	qn -> upper		1179611	0					
ANR	1180096	Identifier	qn		1179611	0					
ANR	1180097	Identifier	upper		1179611	1					
ANR	1180098	PrimaryExpression	1		1179611	1					
ANR	1180099	IfStatement	if ( qn -> lower > 1 )		1179611	1					
ANR	1180100	Condition	qn -> lower > 1	3747:9:83149:83161	1179611	0	True				
ANR	1180101	RelationalExpression	qn -> lower > 1		1179611	0		>			
ANR	1180102	PtrMemberAccess	qn -> lower		1179611	0					
ANR	1180103	Identifier	qn		1179611	0					
ANR	1180104	Identifier	lower		1179611	1					
ANR	1180105	PrimaryExpression	1		1179611	1					
ANR	1180106	ExpressionStatement	qn -> lower = 1	3747:24:83164:83177	1179611	1	True				
ANR	1180107	AssignmentExpression	qn -> lower = 1		1179611	0		=			
ANR	1180108	PtrMemberAccess	qn -> lower		1179611	0					
ANR	1180109	Identifier	qn		1179611	0					
ANR	1180110	Identifier	lower		1179611	1					
ANR	1180111	PrimaryExpression	1		1179611	1					
ANR	1180112	IfStatement	if ( NTYPE ( target ) == NT_STR )		1179611	2					
ANR	1180113	Condition	NTYPE ( target ) == NT_STR	3748:9:83188:83210	1179611	0	True				
ANR	1180114	EqualityExpression	NTYPE ( target ) == NT_STR		1179611	0		==			
ANR	1180115	CallExpression	NTYPE ( target )		1179611	0					
ANR	1180116	Callee	NTYPE		1179611	0					
ANR	1180117	Identifier	NTYPE		1179611	0					
ANR	1180118	ArgumentList	target		1179611	1					
ANR	1180119	Argument	target		1179611	0					
ANR	1180120	Identifier	target		1179611	0					
ANR	1180121	Identifier	NT_STR		1179611	1					
ANR	1180122	CompoundStatement		93:34:2092:2092	1179611	1					
ANR	1180123	ExpressionStatement	qn -> upper = qn -> lower = 0	3749:7:83222:83247	1179611	0	True				
ANR	1180124	AssignmentExpression	qn -> upper = qn -> lower = 0		1179611	0		=			
ANR	1180125	PtrMemberAccess	qn -> upper		1179611	0					
ANR	1180126	Identifier	qn		1179611	0					
ANR	1180127	Identifier	upper		1179611	1					
ANR	1180128	AssignmentExpression	qn -> lower = 0		1179611	1		=			
ANR	1180129	PtrMemberAccess	qn -> lower		1179611	0					
ANR	1180130	Identifier	qn		1179611	0					
ANR	1180131	Identifier	lower		1179611	1					
ANR	1180132	PrimaryExpression	0		1179611	1					
ANR	1180133	ExpressionStatement	state |= IN_REPEAT	3756:6:83308:83326	1179611	5	True				
ANR	1180134	AssignmentExpression	state |= IN_REPEAT		1179611	0		|=			
ANR	1180135	Identifier	state		1179611	0					
ANR	1180136	Identifier	IN_REPEAT		1179611	1					
ANR	1180137	IfStatement	if ( qn -> lower != qn -> upper )		1179611	6					
ANR	1180138	Condition	qn -> lower != qn -> upper	3757:10:83338:83359	1179611	0	True				
ANR	1180139	EqualityExpression	qn -> lower != qn -> upper		1179611	0		!=			
ANR	1180140	PtrMemberAccess	qn -> lower		1179611	0					
ANR	1180141	Identifier	qn		1179611	0					
ANR	1180142	Identifier	lower		1179611	1					
ANR	1180143	PtrMemberAccess	qn -> upper		1179611	1					
ANR	1180144	Identifier	qn		1179611	0					
ANR	1180145	Identifier	upper		1179611	1					
ANR	1180146	ExpressionStatement	state |= IN_VAR_REPEAT	3758:1:83363:83385	1179611	1	True				
ANR	1180147	AssignmentExpression	state |= IN_VAR_REPEAT		1179611	0		|=			
ANR	1180148	Identifier	state		1179611	0					
ANR	1180149	Identifier	IN_VAR_REPEAT		1179611	1					
ANR	1180150	ExpressionStatement	"r = setup_tree ( target , reg , state , env )"	3759:6:83393:83432	1179611	7	True				
ANR	1180151	AssignmentExpression	"r = setup_tree ( target , reg , state , env )"		1179611	0		=			
ANR	1180152	Identifier	r		1179611	0					
ANR	1180153	CallExpression	"setup_tree ( target , reg , state , env )"		1179611	1					
ANR	1180154	Callee	setup_tree		1179611	0					
ANR	1180155	Identifier	setup_tree		1179611	0					
ANR	1180156	ArgumentList	target		1179611	1					
ANR	1180157	Argument	target		1179611	0					
ANR	1180158	Identifier	target		1179611	0					
ANR	1180159	Argument	reg		1179611	1					
ANR	1180160	Identifier	reg		1179611	0					
ANR	1180161	Argument	state		1179611	2					
ANR	1180162	Identifier	state		1179611	0					
ANR	1180163	Argument	env		1179611	3					
ANR	1180164	Identifier	env		1179611	0					
ANR	1180165	IfStatement	if ( r )		1179611	8					
ANR	1180166	Condition	r	3760:10:83444:83444	1179611	0	True				
ANR	1180167	Identifier	r		1179611	0					
ANR	1180168	BreakStatement	break ;	3760:13:83447:83452	1179611	1	True				
ANR	1180169	Statement	define	3763:1:83482:83487	1179611	9	True				
ANR	1180170	Statement	EXPAND_STRING_MAX_LENGTH	3763:8:83489:83512	1179611	10	True				
ANR	1180171	Statement	100	3763:34:83515:83517	1179611	11	True				
ANR	1180172	IfStatement	if ( NTYPE ( target ) == NT_STR )		1179611	12					
ANR	1180173	Condition	NTYPE ( target ) == NT_STR	3764:10:83529:83551	1179611	0	True				
ANR	1180174	EqualityExpression	NTYPE ( target ) == NT_STR		1179611	0		==			
ANR	1180175	CallExpression	NTYPE ( target )		1179611	0					
ANR	1180176	Callee	NTYPE		1179611	0					
ANR	1180177	Identifier	NTYPE		1179611	0					
ANR	1180178	ArgumentList	target		1179611	1					
ANR	1180179	Argument	target		1179611	0					
ANR	1180180	Identifier	target		1179611	0					
ANR	1180181	Identifier	NT_STR		1179611	1					
ANR	1180182	CompoundStatement		109:35:2433:2433	1179611	1					
ANR	1180183	IfStatement	if ( ! IS_REPEAT_INFINITE ( qn -> lower ) && qn -> lower == qn -> upper && qn -> lower > 1 && qn -> lower <= EXPAND_STRING_MAX_LENGTH )		1179611	0					
ANR	1180184	Condition	! IS_REPEAT_INFINITE ( qn -> lower ) && qn -> lower == qn -> upper && qn -> lower > 1 && qn -> lower <= EXPAND_STRING_MAX_LENGTH	3765:5:83561:83679	1179611	0	True				
ANR	1180185	AndExpression	! IS_REPEAT_INFINITE ( qn -> lower ) && qn -> lower == qn -> upper && qn -> lower > 1 && qn -> lower <= EXPAND_STRING_MAX_LENGTH		1179611	0		&&			
ANR	1180186	UnaryOperationExpression	! IS_REPEAT_INFINITE ( qn -> lower )		1179611	0					
ANR	1180187	UnaryOperator	!		1179611	0					
ANR	1180188	CallExpression	IS_REPEAT_INFINITE ( qn -> lower )		1179611	1					
ANR	1180189	Callee	IS_REPEAT_INFINITE		1179611	0					
ANR	1180190	Identifier	IS_REPEAT_INFINITE		1179611	0					
ANR	1180191	ArgumentList	qn -> lower		1179611	1					
ANR	1180192	Argument	qn -> lower		1179611	0					
ANR	1180193	PtrMemberAccess	qn -> lower		1179611	0					
ANR	1180194	Identifier	qn		1179611	0					
ANR	1180195	Identifier	lower		1179611	1					
ANR	1180196	AndExpression	qn -> lower == qn -> upper && qn -> lower > 1 && qn -> lower <= EXPAND_STRING_MAX_LENGTH		1179611	1		&&			
ANR	1180197	EqualityExpression	qn -> lower == qn -> upper		1179611	0		==			
ANR	1180198	PtrMemberAccess	qn -> lower		1179611	0					
ANR	1180199	Identifier	qn		1179611	0					
ANR	1180200	Identifier	lower		1179611	1					
ANR	1180201	PtrMemberAccess	qn -> upper		1179611	1					
ANR	1180202	Identifier	qn		1179611	0					
ANR	1180203	Identifier	upper		1179611	1					
ANR	1180204	AndExpression	qn -> lower > 1 && qn -> lower <= EXPAND_STRING_MAX_LENGTH		1179611	1		&&			
ANR	1180205	RelationalExpression	qn -> lower > 1		1179611	0		>			
ANR	1180206	PtrMemberAccess	qn -> lower		1179611	0					
ANR	1180207	Identifier	qn		1179611	0					
ANR	1180208	Identifier	lower		1179611	1					
ANR	1180209	PrimaryExpression	1		1179611	1					
ANR	1180210	RelationalExpression	qn -> lower <= EXPAND_STRING_MAX_LENGTH		1179611	1		<=			
ANR	1180211	PtrMemberAccess	qn -> lower		1179611	0					
ANR	1180212	Identifier	qn		1179611	0					
ANR	1180213	Identifier	lower		1179611	1					
ANR	1180214	Identifier	EXPAND_STRING_MAX_LENGTH		1179611	1					
ANR	1180215	CompoundStatement		113:3:2600:2626	1179611	1					
ANR	1180216	IdentifierDeclStatement	int len = NSTRING_LEN ( target ) ;	3767:3:83687:83716	1179611	0	True				
ANR	1180217	IdentifierDecl	len = NSTRING_LEN ( target )		1179611	0					
ANR	1180218	IdentifierDeclType	int		1179611	0					
ANR	1180219	Identifier	len		1179611	1					
ANR	1180220	AssignmentExpression	len = NSTRING_LEN ( target )		1179611	2		=			
ANR	1180221	Identifier	len		1179611	0					
ANR	1180222	CallExpression	NSTRING_LEN ( target )		1179611	1					
ANR	1180223	Callee	NSTRING_LEN		1179611	0					
ANR	1180224	Identifier	NSTRING_LEN		1179611	0					
ANR	1180225	ArgumentList	target		1179611	1					
ANR	1180226	Argument	target		1179611	0					
ANR	1180227	Identifier	target		1179611	0					
ANR	1180228	IdentifierDeclStatement	StrNode * sn = NSTR ( target ) ;	3768:3:83721:83747	1179611	1	True				
ANR	1180229	IdentifierDecl	* sn = NSTR ( target )		1179611	0					
ANR	1180230	IdentifierDeclType	StrNode *		1179611	0					
ANR	1180231	Identifier	sn		1179611	1					
ANR	1180232	AssignmentExpression	* sn = NSTR ( target )		1179611	2		=			
ANR	1180233	Identifier	sn		1179611	0					
ANR	1180234	CallExpression	NSTR ( target )		1179611	1					
ANR	1180235	Callee	NSTR		1179611	0					
ANR	1180236	Identifier	NSTR		1179611	0					
ANR	1180237	ArgumentList	target		1179611	1					
ANR	1180238	Argument	target		1179611	0					
ANR	1180239	Identifier	target		1179611	0					
ANR	1180240	IfStatement	if ( len * qn -> lower <= EXPAND_STRING_MAX_LENGTH )		1179611	2					
ANR	1180241	Condition	len * qn -> lower <= EXPAND_STRING_MAX_LENGTH	3770:7:83757:83799	1179611	0	True				
ANR	1180242	RelationalExpression	len * qn -> lower <= EXPAND_STRING_MAX_LENGTH		1179611	0		<=			
ANR	1180243	MultiplicativeExpression	len * qn -> lower		1179611	0		*			
ANR	1180244	Identifier	len		1179611	0					
ANR	1180245	PtrMemberAccess	qn -> lower		1179611	1					
ANR	1180246	Identifier	qn		1179611	0					
ANR	1180247	Identifier	lower		1179611	1					
ANR	1180248	Identifier	EXPAND_STRING_MAX_LENGTH		1179611	1					
ANR	1180249	CompoundStatement		116:5:2688:2708	1179611	1					
ANR	1180250	IdentifierDeclStatement	"int i , n = qn -> lower ;"	3771:5:83809:83829	1179611	0	True				
ANR	1180251	IdentifierDecl	i		1179611	0					
ANR	1180252	IdentifierDeclType	int		1179611	0					
ANR	1180253	Identifier	i		1179611	1					
ANR	1180254	IdentifierDecl	n = qn -> lower		1179611	1					
ANR	1180255	IdentifierDeclType	int		1179611	0					
ANR	1180256	Identifier	n		1179611	1					
ANR	1180257	AssignmentExpression	n = qn -> lower		1179611	2		=			
ANR	1180258	Identifier	n		1179611	0					
ANR	1180259	PtrMemberAccess	qn -> lower		1179611	1					
ANR	1180260	Identifier	qn		1179611	0					
ANR	1180261	Identifier	lower		1179611	1					
ANR	1180262	ExpressionStatement	"onig_node_conv_to_str_node ( node , NSTR ( target ) -> flag )"	3772:5:83836:83888	1179611	1	True				
ANR	1180263	CallExpression	"onig_node_conv_to_str_node ( node , NSTR ( target ) -> flag )"		1179611	0					
ANR	1180264	Callee	onig_node_conv_to_str_node		1179611	0					
ANR	1180265	Identifier	onig_node_conv_to_str_node		1179611	0					
ANR	1180266	ArgumentList	node		1179611	1					
ANR	1180267	Argument	node		1179611	0					
ANR	1180268	Identifier	node		1179611	0					
ANR	1180269	Argument	NSTR ( target ) -> flag		1179611	1					
ANR	1180270	PtrMemberAccess	NSTR ( target ) -> flag		1179611	0					
ANR	1180271	CallExpression	NSTR ( target )		1179611	0					
ANR	1180272	Callee	NSTR		1179611	0					
ANR	1180273	Identifier	NSTR		1179611	0					
ANR	1180274	ArgumentList	target		1179611	1					
ANR	1180275	Argument	target		1179611	0					
ANR	1180276	Identifier	target		1179611	0					
ANR	1180277	Identifier	flag		1179611	1					
ANR	1180278	ForStatement	for ( i = 0 ; i < n ; i ++ )		1179611	2					
ANR	1180279	ForInit	i = 0 ;	3773:10:83900:83905	1179611	0	True				
ANR	1180280	AssignmentExpression	i = 0		1179611	0		=			
ANR	1180281	Identifier	i		1179611	0					
ANR	1180282	PrimaryExpression	0		1179611	1					
ANR	1180283	Condition	i < n	3773:17:83907:83911	1179611	1	True				
ANR	1180284	RelationalExpression	i < n		1179611	0		<			
ANR	1180285	Identifier	i		1179611	0					
ANR	1180286	Identifier	n		1179611	1					
ANR	1180287	PostIncDecOperationExpression	i ++	3773:24:83914:83916	1179611	2	True				
ANR	1180288	Identifier	i		1179611	0					
ANR	1180289	IncDec	++		1179611	1					
ANR	1180290	CompoundStatement		118:29:2798:2798	1179611	3					
ANR	1180291	ExpressionStatement	"r = onig_node_str_cat ( node , sn -> s , sn -> end )"	3774:7:83928:83971	1179611	0	True				
ANR	1180292	AssignmentExpression	"r = onig_node_str_cat ( node , sn -> s , sn -> end )"		1179611	0		=			
ANR	1180293	Identifier	r		1179611	0					
ANR	1180294	CallExpression	"onig_node_str_cat ( node , sn -> s , sn -> end )"		1179611	1					
ANR	1180295	Callee	onig_node_str_cat		1179611	0					
ANR	1180296	Identifier	onig_node_str_cat		1179611	0					
ANR	1180297	ArgumentList	node		1179611	1					
ANR	1180298	Argument	node		1179611	0					
ANR	1180299	Identifier	node		1179611	0					
ANR	1180300	Argument	sn -> s		1179611	1					
ANR	1180301	PtrMemberAccess	sn -> s		1179611	0					
ANR	1180302	Identifier	sn		1179611	0					
ANR	1180303	Identifier	s		1179611	1					
ANR	1180304	Argument	sn -> end		1179611	2					
ANR	1180305	PtrMemberAccess	sn -> end		1179611	0					
ANR	1180306	Identifier	sn		1179611	0					
ANR	1180307	Identifier	end		1179611	1					
ANR	1180308	IfStatement	if ( r )		1179611	1					
ANR	1180309	Condition	r	3775:11:83984:83984	1179611	0	True				
ANR	1180310	Identifier	r		1179611	0					
ANR	1180311	BreakStatement	break ;	3775:14:83987:83992	1179611	1	True				
ANR	1180312	ExpressionStatement	onig_node_free ( target )	3777:5:84006:84028	1179611	3	True				
ANR	1180313	CallExpression	onig_node_free ( target )		1179611	0					
ANR	1180314	Callee	onig_node_free		1179611	0					
ANR	1180315	Identifier	onig_node_free		1179611	0					
ANR	1180316	ArgumentList	target		1179611	1					
ANR	1180317	Argument	target		1179611	0					
ANR	1180318	Identifier	target		1179611	0					
ANR	1180319	BreakStatement	break ;	3778:5:84035:84040	1179611	4	True				
ANR	1180320	IfStatement	if ( qn -> greedy && ( qn -> target_empty_info != 0 ) )		1179611	13					
ANR	1180321	Condition	qn -> greedy && ( qn -> target_empty_info != 0 )	3784:10:84128:84169	1179611	0	True				
ANR	1180322	AndExpression	qn -> greedy && ( qn -> target_empty_info != 0 )		1179611	0		&&			
ANR	1180323	PtrMemberAccess	qn -> greedy		1179611	0					
ANR	1180324	Identifier	qn		1179611	0					
ANR	1180325	Identifier	greedy		1179611	1					
ANR	1180326	EqualityExpression	qn -> target_empty_info != 0		1179611	1		!=			
ANR	1180327	PtrMemberAccess	qn -> target_empty_info		1179611	0					
ANR	1180328	Identifier	qn		1179611	0					
ANR	1180329	Identifier	target_empty_info		1179611	1					
ANR	1180330	PrimaryExpression	0		1179611	1					
ANR	1180331	CompoundStatement		129:54:3051:3051	1179611	1					
ANR	1180332	IfStatement	if ( NTYPE ( target ) == NT_QTFR )		1179611	0					
ANR	1180333	Condition	NTYPE ( target ) == NT_QTFR	3785:5:84179:84202	1179611	0	True				
ANR	1180334	EqualityExpression	NTYPE ( target ) == NT_QTFR		1179611	0		==			
ANR	1180335	CallExpression	NTYPE ( target )		1179611	0					
ANR	1180336	Callee	NTYPE		1179611	0					
ANR	1180337	Identifier	NTYPE		1179611	0					
ANR	1180338	ArgumentList	target		1179611	1					
ANR	1180339	Argument	target		1179611	0					
ANR	1180340	Identifier	target		1179611	0					
ANR	1180341	Identifier	NT_QTFR		1179611	1					
ANR	1180342	CompoundStatement		131:3:3089:3118	1179611	1					
ANR	1180343	IdentifierDeclStatement	QtfrNode * tqn = NQTFR ( target ) ;	3786:3:84210:84239	1179611	0	True				
ANR	1180344	IdentifierDecl	* tqn = NQTFR ( target )		1179611	0					
ANR	1180345	IdentifierDeclType	QtfrNode *		1179611	0					
ANR	1180346	Identifier	tqn		1179611	1					
ANR	1180347	AssignmentExpression	* tqn = NQTFR ( target )		1179611	2		=			
ANR	1180348	Identifier	tqn		1179611	0					
ANR	1180349	CallExpression	NQTFR ( target )		1179611	1					
ANR	1180350	Callee	NQTFR		1179611	0					
ANR	1180351	Identifier	NQTFR		1179611	0					
ANR	1180352	ArgumentList	target		1179611	1					
ANR	1180353	Argument	target		1179611	0					
ANR	1180354	Identifier	target		1179611	0					
ANR	1180355	IfStatement	if ( IS_NOT_NULL ( tqn -> head_exact ) )		1179611	1					
ANR	1180356	Condition	IS_NOT_NULL ( tqn -> head_exact )	3787:7:84248:84275	1179611	0	True				
ANR	1180357	CallExpression	IS_NOT_NULL ( tqn -> head_exact )		1179611	0					
ANR	1180358	Callee	IS_NOT_NULL		1179611	0					
ANR	1180359	Identifier	IS_NOT_NULL		1179611	0					
ANR	1180360	ArgumentList	tqn -> head_exact		1179611	1					
ANR	1180361	Argument	tqn -> head_exact		1179611	0					
ANR	1180362	PtrMemberAccess	tqn -> head_exact		1179611	0					
ANR	1180363	Identifier	tqn		1179611	0					
ANR	1180364	Identifier	head_exact		1179611	1					
ANR	1180365	CompoundStatement		132:37:3157:3157	1179611	1					
ANR	1180366	ExpressionStatement	qn -> head_exact = tqn -> head_exact	3788:5:84285:84318	1179611	0	True				
ANR	1180367	AssignmentExpression	qn -> head_exact = tqn -> head_exact		1179611	0		=			
ANR	1180368	PtrMemberAccess	qn -> head_exact		1179611	0					
ANR	1180369	Identifier	qn		1179611	0					
ANR	1180370	Identifier	head_exact		1179611	1					
ANR	1180371	PtrMemberAccess	tqn -> head_exact		1179611	1					
ANR	1180372	Identifier	tqn		1179611	0					
ANR	1180373	Identifier	head_exact		1179611	1					
ANR	1180374	ExpressionStatement	tqn -> head_exact = NULL	3789:5:84325:84347	1179611	1	True				
ANR	1180375	AssignmentExpression	tqn -> head_exact = NULL		1179611	0		=			
ANR	1180376	PtrMemberAccess	tqn -> head_exact		1179611	0					
ANR	1180377	Identifier	tqn		1179611	0					
ANR	1180378	Identifier	head_exact		1179611	1					
ANR	1180379	Identifier	NULL		1179611	1					
ANR	1180380	ElseStatement	else		1179611	0					
ANR	1180381	CompoundStatement		137:6:3242:3242	1179611	0					
ANR	1180382	ExpressionStatement	"qn -> head_exact = get_head_value_node ( qn -> target , 1 , reg )"	3793:3:84368:84424	1179611	0	True				
ANR	1180383	AssignmentExpression	"qn -> head_exact = get_head_value_node ( qn -> target , 1 , reg )"		1179611	0		=			
ANR	1180384	PtrMemberAccess	qn -> head_exact		1179611	0					
ANR	1180385	Identifier	qn		1179611	0					
ANR	1180386	Identifier	head_exact		1179611	1					
ANR	1180387	CallExpression	"get_head_value_node ( qn -> target , 1 , reg )"		1179611	1					
ANR	1180388	Callee	get_head_value_node		1179611	0					
ANR	1180389	Identifier	get_head_value_node		1179611	0					
ANR	1180390	ArgumentList	qn -> target		1179611	1					
ANR	1180391	Argument	qn -> target		1179611	0					
ANR	1180392	PtrMemberAccess	qn -> target		1179611	0					
ANR	1180393	Identifier	qn		1179611	0					
ANR	1180394	Identifier	target		1179611	1					
ANR	1180395	Argument	1		1179611	1					
ANR	1180396	PrimaryExpression	1		1179611	0					
ANR	1180397	Argument	reg		1179611	2					
ANR	1180398	Identifier	reg		1179611	0					
ANR	1180399	BreakStatement	break ;	3798:4:84454:84459	1179611	21	True				
ANR	1180400	Label	case NT_ENCLOSE :	3800:2:84464:84479	1179611	22	True				
ANR	1180401	Identifier	NT_ENCLOSE		1179611	0					
ANR	1180402	CompoundStatement		147:6:3372:3404	1179611	23					
ANR	1180403	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	3802:6:84493:84525	1179611	0	True				
ANR	1180404	IdentifierDecl	* en = NENCLOSE ( node )		1179611	0					
ANR	1180405	IdentifierDeclType	EncloseNode *		1179611	0					
ANR	1180406	Identifier	en		1179611	1					
ANR	1180407	AssignmentExpression	* en = NENCLOSE ( node )		1179611	2		=			
ANR	1180408	Identifier	en		1179611	0					
ANR	1180409	CallExpression	NENCLOSE ( node )		1179611	1					
ANR	1180410	Callee	NENCLOSE		1179611	0					
ANR	1180411	Identifier	NENCLOSE		1179611	0					
ANR	1180412	ArgumentList	node		1179611	1					
ANR	1180413	Argument	node		1179611	0					
ANR	1180414	Identifier	node		1179611	0					
ANR	1180415	SwitchStatement	switch ( en -> type )		1179611	1					
ANR	1180416	Condition	en -> type	3804:14:84542:84549	1179611	0	True				
ANR	1180417	PtrMemberAccess	en -> type		1179611	0					
ANR	1180418	Identifier	en		1179611	0					
ANR	1180419	Identifier	type		1179611	1					
ANR	1180420	CompoundStatement		149:24:3431:3431	1179611	1					
ANR	1180421	Label	case ENCLOSE_OPTION :	3805:6:84560:84579	1179611	0	True				
ANR	1180422	Identifier	ENCLOSE_OPTION		1179611	0					
ANR	1180423	CompoundStatement		152:3:3466:3503	1179611	1					
ANR	1180424	IdentifierDeclStatement	OnigOptionType options = reg -> options ;	3807:3:84587:84624	1179611	0	True				
ANR	1180425	IdentifierDecl	options = reg -> options		1179611	0					
ANR	1180426	IdentifierDeclType	OnigOptionType		1179611	0					
ANR	1180427	Identifier	options		1179611	1					
ANR	1180428	AssignmentExpression	options = reg -> options		1179611	2		=			
ANR	1180429	Identifier	options		1179611	0					
ANR	1180430	PtrMemberAccess	reg -> options		1179611	1					
ANR	1180431	Identifier	reg		1179611	0					
ANR	1180432	Identifier	options		1179611	1					
ANR	1180433	ExpressionStatement	reg -> options = NENCLOSE ( node ) -> option	3808:3:84629:84666	1179611	1	True				
ANR	1180434	AssignmentExpression	reg -> options = NENCLOSE ( node ) -> option		1179611	0		=			
ANR	1180435	PtrMemberAccess	reg -> options		1179611	0					
ANR	1180436	Identifier	reg		1179611	0					
ANR	1180437	Identifier	options		1179611	1					
ANR	1180438	PtrMemberAccess	NENCLOSE ( node ) -> option		1179611	1					
ANR	1180439	CallExpression	NENCLOSE ( node )		1179611	0					
ANR	1180440	Callee	NENCLOSE		1179611	0					
ANR	1180441	Identifier	NENCLOSE		1179611	0					
ANR	1180442	ArgumentList	node		1179611	1					
ANR	1180443	Argument	node		1179611	0					
ANR	1180444	Identifier	node		1179611	0					
ANR	1180445	Identifier	option		1179611	1					
ANR	1180446	ExpressionStatement	"r = setup_tree ( NENCLOSE ( node ) -> target , reg , state , env )"	3809:3:84671:84726	1179611	2	True				
ANR	1180447	AssignmentExpression	"r = setup_tree ( NENCLOSE ( node ) -> target , reg , state , env )"		1179611	0		=			
ANR	1180448	Identifier	r		1179611	0					
ANR	1180449	CallExpression	"setup_tree ( NENCLOSE ( node ) -> target , reg , state , env )"		1179611	1					
ANR	1180450	Callee	setup_tree		1179611	0					
ANR	1180451	Identifier	setup_tree		1179611	0					
ANR	1180452	ArgumentList	NENCLOSE ( node ) -> target		1179611	1					
ANR	1180453	Argument	NENCLOSE ( node ) -> target		1179611	0					
ANR	1180454	PtrMemberAccess	NENCLOSE ( node ) -> target		1179611	0					
ANR	1180455	CallExpression	NENCLOSE ( node )		1179611	0					
ANR	1180456	Callee	NENCLOSE		1179611	0					
ANR	1180457	Identifier	NENCLOSE		1179611	0					
ANR	1180458	ArgumentList	node		1179611	1					
ANR	1180459	Argument	node		1179611	0					
ANR	1180460	Identifier	node		1179611	0					
ANR	1180461	Identifier	target		1179611	1					
ANR	1180462	Argument	reg		1179611	1					
ANR	1180463	Identifier	reg		1179611	0					
ANR	1180464	Argument	state		1179611	2					
ANR	1180465	Identifier	state		1179611	0					
ANR	1180466	Argument	env		1179611	3					
ANR	1180467	Identifier	env		1179611	0					
ANR	1180468	ExpressionStatement	reg -> options = options	3810:3:84731:84753	1179611	3	True				
ANR	1180469	AssignmentExpression	reg -> options = options		1179611	0		=			
ANR	1180470	PtrMemberAccess	reg -> options		1179611	0					
ANR	1180471	Identifier	reg		1179611	0					
ANR	1180472	Identifier	options		1179611	1					
ANR	1180473	Identifier	options		1179611	1					
ANR	1180474	BreakStatement	break ;	3812:1:84759:84764	1179611	2	True				
ANR	1180475	Label	case ENCLOSE_MEMORY :	3814:6:84773:84792	1179611	3	True				
ANR	1180476	Identifier	ENCLOSE_MEMORY		1179611	0					
ANR	1180477	IfStatement	if ( ( state & ( IN_ALT | IN_NOT | IN_VAR_REPEAT ) ) != 0 )		1179611	4					
ANR	1180478	Condition	( state & ( IN_ALT | IN_NOT | IN_VAR_REPEAT ) ) != 0	3815:5:84799:84846	1179611	0	True				
ANR	1180479	EqualityExpression	( state & ( IN_ALT | IN_NOT | IN_VAR_REPEAT ) ) != 0		1179611	0		!=			
ANR	1180480	BitAndExpression	state & ( IN_ALT | IN_NOT | IN_VAR_REPEAT )		1179611	0		&			
ANR	1180481	Identifier	state		1179611	0					
ANR	1180482	InclusiveOrExpression	IN_ALT | IN_NOT | IN_VAR_REPEAT		1179611	1		|			
ANR	1180483	Identifier	IN_ALT		1179611	0					
ANR	1180484	InclusiveOrExpression	IN_NOT | IN_VAR_REPEAT		1179611	1		|			
ANR	1180485	Identifier	IN_NOT		1179611	0					
ANR	1180486	Identifier	IN_VAR_REPEAT		1179611	1					
ANR	1180487	PrimaryExpression	0		1179611	1					
ANR	1180488	CompoundStatement		160:55:3728:3728	1179611	1					
ANR	1180489	ExpressionStatement	"BIT_STATUS_ON_AT ( env -> bt_mem_start , en -> regnum )"	3816:3:84854:84901	1179611	0	True				
ANR	1180490	CallExpression	"BIT_STATUS_ON_AT ( env -> bt_mem_start , en -> regnum )"		1179611	0					
ANR	1180491	Callee	BIT_STATUS_ON_AT		1179611	0					
ANR	1180492	Identifier	BIT_STATUS_ON_AT		1179611	0					
ANR	1180493	ArgumentList	env -> bt_mem_start		1179611	1					
ANR	1180494	Argument	env -> bt_mem_start		1179611	0					
ANR	1180495	PtrMemberAccess	env -> bt_mem_start		1179611	0					
ANR	1180496	Identifier	env		1179611	0					
ANR	1180497	Identifier	bt_mem_start		1179611	1					
ANR	1180498	Argument	en -> regnum		1179611	1					
ANR	1180499	PtrMemberAccess	en -> regnum		1179611	0					
ANR	1180500	Identifier	en		1179611	0					
ANR	1180501	Identifier	regnum		1179611	1					
ANR	1180502	ExpressionStatement	"r = setup_tree ( en -> target , reg , state , env )"	3819:8:84969:85012	1179611	5	True				
ANR	1180503	AssignmentExpression	"r = setup_tree ( en -> target , reg , state , env )"		1179611	0		=			
ANR	1180504	Identifier	r		1179611	0					
ANR	1180505	CallExpression	"setup_tree ( en -> target , reg , state , env )"		1179611	1					
ANR	1180506	Callee	setup_tree		1179611	0					
ANR	1180507	Identifier	setup_tree		1179611	0					
ANR	1180508	ArgumentList	en -> target		1179611	1					
ANR	1180509	Argument	en -> target		1179611	0					
ANR	1180510	PtrMemberAccess	en -> target		1179611	0					
ANR	1180511	Identifier	en		1179611	0					
ANR	1180512	Identifier	target		1179611	1					
ANR	1180513	Argument	reg		1179611	1					
ANR	1180514	Identifier	reg		1179611	0					
ANR	1180515	Argument	state		1179611	2					
ANR	1180516	Identifier	state		1179611	0					
ANR	1180517	Argument	env		1179611	3					
ANR	1180518	Identifier	env		1179611	0					
ANR	1180519	BreakStatement	break ;	3820:8:85022:85027	1179611	6	True				
ANR	1180520	Label	case ENCLOSE_STOP_BACKTRACK :	3822:6:85036:85063	1179611	7	True				
ANR	1180521	Identifier	ENCLOSE_STOP_BACKTRACK		1179611	0					
ANR	1180522	CompoundStatement		169:3:3950:3975	1179611	8					
ANR	1180523	IdentifierDeclStatement	Node * target = en -> target ;	3824:3:85071:85096	1179611	0	True				
ANR	1180524	IdentifierDecl	* target = en -> target		1179611	0					
ANR	1180525	IdentifierDeclType	Node *		1179611	0					
ANR	1180526	Identifier	target		1179611	1					
ANR	1180527	AssignmentExpression	* target = en -> target		1179611	2		=			
ANR	1180528	Identifier	target		1179611	0					
ANR	1180529	PtrMemberAccess	en -> target		1179611	1					
ANR	1180530	Identifier	en		1179611	0					
ANR	1180531	Identifier	target		1179611	1					
ANR	1180532	ExpressionStatement	"r = setup_tree ( target , reg , state , env )"	3825:3:85101:85140	1179611	1	True				
ANR	1180533	AssignmentExpression	"r = setup_tree ( target , reg , state , env )"		1179611	0		=			
ANR	1180534	Identifier	r		1179611	0					
ANR	1180535	CallExpression	"setup_tree ( target , reg , state , env )"		1179611	1					
ANR	1180536	Callee	setup_tree		1179611	0					
ANR	1180537	Identifier	setup_tree		1179611	0					
ANR	1180538	ArgumentList	target		1179611	1					
ANR	1180539	Argument	target		1179611	0					
ANR	1180540	Identifier	target		1179611	0					
ANR	1180541	Argument	reg		1179611	1					
ANR	1180542	Identifier	reg		1179611	0					
ANR	1180543	Argument	state		1179611	2					
ANR	1180544	Identifier	state		1179611	0					
ANR	1180545	Argument	env		1179611	3					
ANR	1180546	Identifier	env		1179611	0					
ANR	1180547	IfStatement	if ( NTYPE ( target ) == NT_QTFR )		1179611	2					
ANR	1180548	Condition	NTYPE ( target ) == NT_QTFR	3826:7:85149:85172	1179611	0	True				
ANR	1180549	EqualityExpression	NTYPE ( target ) == NT_QTFR		1179611	0		==			
ANR	1180550	CallExpression	NTYPE ( target )		1179611	0					
ANR	1180551	Callee	NTYPE		1179611	0					
ANR	1180552	Identifier	NTYPE		1179611	0					
ANR	1180553	ArgumentList	target		1179611	1					
ANR	1180554	Argument	target		1179611	0					
ANR	1180555	Identifier	target		1179611	0					
ANR	1180556	Identifier	NT_QTFR		1179611	1					
ANR	1180557	CompoundStatement		172:5:4061:4090	1179611	1					
ANR	1180558	IdentifierDeclStatement	QtfrNode * tqn = NQTFR ( target ) ;	3827:5:85182:85211	1179611	0	True				
ANR	1180559	IdentifierDecl	* tqn = NQTFR ( target )		1179611	0					
ANR	1180560	IdentifierDeclType	QtfrNode *		1179611	0					
ANR	1180561	Identifier	tqn		1179611	1					
ANR	1180562	AssignmentExpression	* tqn = NQTFR ( target )		1179611	2		=			
ANR	1180563	Identifier	tqn		1179611	0					
ANR	1180564	CallExpression	NQTFR ( target )		1179611	1					
ANR	1180565	Callee	NQTFR		1179611	0					
ANR	1180566	Identifier	NQTFR		1179611	0					
ANR	1180567	ArgumentList	target		1179611	1					
ANR	1180568	Argument	target		1179611	0					
ANR	1180569	Identifier	target		1179611	0					
ANR	1180570	IfStatement	if ( IS_REPEAT_INFINITE ( tqn -> upper ) && tqn -> lower <= 1 && tqn -> greedy != 0 )		1179611	1					
ANR	1180571	Condition	IS_REPEAT_INFINITE ( tqn -> upper ) && tqn -> lower <= 1 && tqn -> greedy != 0	3828:9:85222:85292	1179611	0	True				
ANR	1180572	AndExpression	IS_REPEAT_INFINITE ( tqn -> upper ) && tqn -> lower <= 1 && tqn -> greedy != 0		1179611	0		&&			
ANR	1180573	CallExpression	IS_REPEAT_INFINITE ( tqn -> upper )		1179611	0					
ANR	1180574	Callee	IS_REPEAT_INFINITE		1179611	0					
ANR	1180575	Identifier	IS_REPEAT_INFINITE		1179611	0					
ANR	1180576	ArgumentList	tqn -> upper		1179611	1					
ANR	1180577	Argument	tqn -> upper		1179611	0					
ANR	1180578	PtrMemberAccess	tqn -> upper		1179611	0					
ANR	1180579	Identifier	tqn		1179611	0					
ANR	1180580	Identifier	upper		1179611	1					
ANR	1180581	AndExpression	tqn -> lower <= 1 && tqn -> greedy != 0		1179611	1		&&			
ANR	1180582	RelationalExpression	tqn -> lower <= 1		1179611	0		<=			
ANR	1180583	PtrMemberAccess	tqn -> lower		1179611	0					
ANR	1180584	Identifier	tqn		1179611	0					
ANR	1180585	Identifier	lower		1179611	1					
ANR	1180586	PrimaryExpression	1		1179611	1					
ANR	1180587	EqualityExpression	tqn -> greedy != 0		1179611	1		!=			
ANR	1180588	PtrMemberAccess	tqn -> greedy		1179611	0					
ANR	1180589	Identifier	tqn		1179611	0					
ANR	1180590	Identifier	greedy		1179611	1					
ANR	1180591	PrimaryExpression	0		1179611	1					
ANR	1180592	CompoundStatement		175:7:4209:4239	1179611	1					
ANR	1180593	IdentifierDeclStatement	int qtype = NTYPE ( tqn -> target ) ;	3830:7:85330:85360	1179611	0	True				
ANR	1180594	IdentifierDecl	qtype = NTYPE ( tqn -> target )		1179611	0					
ANR	1180595	IdentifierDeclType	int		1179611	0					
ANR	1180596	Identifier	qtype		1179611	1					
ANR	1180597	AssignmentExpression	qtype = NTYPE ( tqn -> target )		1179611	2		=			
ANR	1180598	Identifier	qtype		1179611	0					
ANR	1180599	CallExpression	NTYPE ( tqn -> target )		1179611	1					
ANR	1180600	Callee	NTYPE		1179611	0					
ANR	1180601	Identifier	NTYPE		1179611	0					
ANR	1180602	ArgumentList	tqn -> target		1179611	1					
ANR	1180603	Argument	tqn -> target		1179611	0					
ANR	1180604	PtrMemberAccess	tqn -> target		1179611	0					
ANR	1180605	Identifier	tqn		1179611	0					
ANR	1180606	Identifier	target		1179611	1					
ANR	1180607	IfStatement	if ( IS_NODE_TYPE_SIMPLE ( qtype ) )		1179611	1					
ANR	1180608	Condition	IS_NODE_TYPE_SIMPLE ( qtype )	3831:11:85373:85398	1179611	0	True				
ANR	1180609	CallExpression	IS_NODE_TYPE_SIMPLE ( qtype )		1179611	0					
ANR	1180610	Callee	IS_NODE_TYPE_SIMPLE		1179611	0					
ANR	1180611	Identifier	IS_NODE_TYPE_SIMPLE		1179611	0					
ANR	1180612	ArgumentList	qtype		1179611	1					
ANR	1180613	Argument	qtype		1179611	0					
ANR	1180614	Identifier	qtype		1179611	0					
ANR	1180615	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_STOP_BT_SIMPLE_REPEAT )"	3832:2:85403:85454	1179611	1	True				
ANR	1180616	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_STOP_BT_SIMPLE_REPEAT )"		1179611	0					
ANR	1180617	Callee	SET_ENCLOSE_STATUS		1179611	0					
ANR	1180618	Identifier	SET_ENCLOSE_STATUS		1179611	0					
ANR	1180619	ArgumentList	node		1179611	1					
ANR	1180620	Argument	node		1179611	0					
ANR	1180621	Identifier	node		1179611	0					
ANR	1180622	Argument	NST_STOP_BT_SIMPLE_REPEAT		1179611	1					
ANR	1180623	Identifier	NST_STOP_BT_SIMPLE_REPEAT		1179611	0					
ANR	1180624	BreakStatement	break ;	3836:1:85472:85477	1179611	9	True				
ANR	1180625	BreakStatement	break ;	3839:4:85497:85502	1179611	24	True				
ANR	1180626	Label	case NT_ANCHOR :	3841:2:85507:85521	1179611	25	True				
ANR	1180627	Identifier	NT_ANCHOR		1179611	0					
ANR	1180628	CompoundStatement		188:6:4414:4444	1179611	26					
ANR	1180629	IdentifierDeclStatement	AnchorNode * an = NANCHOR ( node ) ;	3843:6:85535:85565	1179611	0	True				
ANR	1180630	IdentifierDecl	* an = NANCHOR ( node )		1179611	0					
ANR	1180631	IdentifierDeclType	AnchorNode *		1179611	0					
ANR	1180632	Identifier	an		1179611	1					
ANR	1180633	AssignmentExpression	* an = NANCHOR ( node )		1179611	2		=			
ANR	1180634	Identifier	an		1179611	0					
ANR	1180635	CallExpression	NANCHOR ( node )		1179611	1					
ANR	1180636	Callee	NANCHOR		1179611	0					
ANR	1180637	Identifier	NANCHOR		1179611	0					
ANR	1180638	ArgumentList	node		1179611	1					
ANR	1180639	Argument	node		1179611	0					
ANR	1180640	Identifier	node		1179611	0					
ANR	1180641	SwitchStatement	switch ( an -> type )		1179611	1					
ANR	1180642	Condition	an -> type	3845:14:85582:85589	1179611	0	True				
ANR	1180643	PtrMemberAccess	an -> type		1179611	0					
ANR	1180644	Identifier	an		1179611	0					
ANR	1180645	Identifier	type		1179611	1					
ANR	1180646	CompoundStatement		190:24:4471:4471	1179611	1					
ANR	1180647	Label	case ANCHOR_PREC_READ :	3846:6:85600:85621	1179611	0	True				
ANR	1180648	Identifier	ANCHOR_PREC_READ		1179611	0					
ANR	1180649	ExpressionStatement	"r = setup_tree ( an -> target , reg , state , env )"	3847:1:85624:85667	1179611	1	True				
ANR	1180650	AssignmentExpression	"r = setup_tree ( an -> target , reg , state , env )"		1179611	0		=			
ANR	1180651	Identifier	r		1179611	0					
ANR	1180652	CallExpression	"setup_tree ( an -> target , reg , state , env )"		1179611	1					
ANR	1180653	Callee	setup_tree		1179611	0					
ANR	1180654	Identifier	setup_tree		1179611	0					
ANR	1180655	ArgumentList	an -> target		1179611	1					
ANR	1180656	Argument	an -> target		1179611	0					
ANR	1180657	PtrMemberAccess	an -> target		1179611	0					
ANR	1180658	Identifier	an		1179611	0					
ANR	1180659	Identifier	target		1179611	1					
ANR	1180660	Argument	reg		1179611	1					
ANR	1180661	Identifier	reg		1179611	0					
ANR	1180662	Argument	state		1179611	2					
ANR	1180663	Identifier	state		1179611	0					
ANR	1180664	Argument	env		1179611	3					
ANR	1180665	Identifier	env		1179611	0					
ANR	1180666	BreakStatement	break ;	3848:1:85670:85675	1179611	2	True				
ANR	1180667	Label	case ANCHOR_PREC_READ_NOT :	3849:6:85683:85708	1179611	3	True				
ANR	1180668	Identifier	ANCHOR_PREC_READ_NOT		1179611	0					
ANR	1180669	ExpressionStatement	"r = setup_tree ( an -> target , reg , ( state | IN_NOT ) , env )"	3850:1:85711:85765	1179611	4	True				
ANR	1180670	AssignmentExpression	"r = setup_tree ( an -> target , reg , ( state | IN_NOT ) , env )"		1179611	0		=			
ANR	1180671	Identifier	r		1179611	0					
ANR	1180672	CallExpression	"setup_tree ( an -> target , reg , ( state | IN_NOT ) , env )"		1179611	1					
ANR	1180673	Callee	setup_tree		1179611	0					
ANR	1180674	Identifier	setup_tree		1179611	0					
ANR	1180675	ArgumentList	an -> target		1179611	1					
ANR	1180676	Argument	an -> target		1179611	0					
ANR	1180677	PtrMemberAccess	an -> target		1179611	0					
ANR	1180678	Identifier	an		1179611	0					
ANR	1180679	Identifier	target		1179611	1					
ANR	1180680	Argument	reg		1179611	1					
ANR	1180681	Identifier	reg		1179611	0					
ANR	1180682	Argument	state | IN_NOT		1179611	2					
ANR	1180683	InclusiveOrExpression	state | IN_NOT		1179611	0		|			
ANR	1180684	Identifier	state		1179611	0					
ANR	1180685	Identifier	IN_NOT		1179611	1					
ANR	1180686	Argument	env		1179611	3					
ANR	1180687	Identifier	env		1179611	0					
ANR	1180688	BreakStatement	break ;	3851:1:85768:85773	1179611	5	True				
ANR	1180689	Statement	define	3854:1:85817:85822	1179611	6	True				
ANR	1180690	Statement	ALLOWED_TYPE_IN_LB	3854:8:85824:85841	1179611	7	True				
ANR	1180691	Statement	(	3855:2:85848:85848	1179611	8	True				
ANR	1180692	Statement	BIT_NT_LIST	3855:4:85850:85860	1179611	9	True				
ANR	1180693	Statement	|	3855:16:85862:85862	1179611	10	True				
ANR	1180694	Statement	BIT_NT_ALT	3855:18:85864:85873	1179611	11	True				
ANR	1180695	Statement	|	3855:29:85875:85875	1179611	12	True				
ANR	1180696	Statement	BIT_NT_STR	3855:31:85877:85886	1179611	13	True				
ANR	1180697	Statement	|	3855:42:85888:85888	1179611	14	True				
ANR	1180698	Statement	BIT_NT_CCLASS	3855:44:85890:85902	1179611	15	True				
ANR	1180699	Statement	|	3855:58:85904:85904	1179611	16	True				
ANR	1180700	Statement	BIT_NT_CTYPE	3855:60:85906:85917	1179611	17	True				
ANR	1180701	Statement	|	3855:73:85919:85919	1179611	18	True				
ANR	1180702	Statement	BIT_NT_CANY	3856:4:85927:85937	1179611	19	True				
ANR	1180703	Statement	|	3856:16:85939:85939	1179611	20	True				
ANR	1180704	Statement	BIT_NT_ANCHOR	3856:18:85941:85953	1179611	21	True				
ANR	1180705	Statement	|	3856:32:85955:85955	1179611	22	True				
ANR	1180706	Statement	BIT_NT_ENCLOSE	3856:34:85957:85970	1179611	23	True				
ANR	1180707	Statement	|	3856:49:85972:85972	1179611	24	True				
ANR	1180708	Statement	BIT_NT_QTFR	3856:51:85974:85984	1179611	25	True				
ANR	1180709	Statement	|	3856:63:85986:85986	1179611	26	True				
ANR	1180710	Statement	BIT_NT_CALL	3856:65:85988:85998	1179611	27	True				
ANR	1180711	Statement	)	3856:77:86000:86000	1179611	28	True				
ANR	1180712	Statement	define	3858:1:86004:86009	1179611	29	True				
ANR	1180713	Statement	ALLOWED_ENCLOSE_IN_LB	3858:8:86011:86031	1179611	30	True				
ANR	1180714	Statement	(	3858:36:86039:86039	1179611	31	True				
ANR	1180715	Statement	ENCLOSE_MEMORY	3858:38:86041:86054	1179611	32	True				
ANR	1180716	Statement	)	3858:53:86056:86056	1179611	33	True				
ANR	1180717	Statement	define	3859:1:86059:86064	1179611	34	True				
ANR	1180718	Statement	ALLOWED_ENCLOSE_IN_LB_NOT	3859:8:86066:86090	1179611	35	True				
ANR	1180719	Statement	0	3859:36:86094:86094	1179611	36	True				
ANR	1180720	Statement	define	3861:1:86098:86103	1179611	37	True				
ANR	1180721	Statement	ALLOWED_ANCHOR_IN_LB	3861:8:86105:86124	1179611	38	True				
ANR	1180722	Statement	(	3862:0:86128:86128	1179611	39	True				
ANR	1180723	Statement	ANCHOR_LOOK_BEHIND	3862:2:86130:86147	1179611	40	True				
ANR	1180724	Statement	|	3862:21:86149:86149	1179611	41	True				
ANR	1180725	Statement	ANCHOR_BEGIN_LINE	3862:23:86151:86167	1179611	42	True				
ANR	1180726	Statement	|	3862:41:86169:86169	1179611	43	True				
ANR	1180727	Statement	ANCHOR_END_LINE	3862:43:86171:86185	1179611	44	True				
ANR	1180728	Statement	|	3862:59:86187:86187	1179611	45	True				
ANR	1180729	Statement	ANCHOR_BEGIN_BUF	3862:61:86189:86204	1179611	46	True				
ANR	1180730	Statement	|	3862:78:86206:86206	1179611	47	True				
ANR	1180731	Statement	ANCHOR_BEGIN_POSITION	3862:80:86208:86228	1179611	48	True				
ANR	1180732	Statement	)	3862:102:86230:86230	1179611	49	True				
ANR	1180733	Statement	define	3863:1:86233:86238	1179611	50	True				
ANR	1180734	Statement	ALLOWED_ANCHOR_IN_LB_NOT	3863:8:86240:86263	1179611	51	True				
ANR	1180735	Statement	(	3864:0:86267:86267	1179611	52	True				
ANR	1180736	Statement	ANCHOR_LOOK_BEHIND	3864:2:86269:86286	1179611	53	True				
ANR	1180737	Statement	|	3864:21:86288:86288	1179611	54	True				
ANR	1180738	Statement	ANCHOR_LOOK_BEHIND_NOT	3864:23:86290:86311	1179611	55	True				
ANR	1180739	Statement	|	3864:46:86313:86313	1179611	56	True				
ANR	1180740	Statement	ANCHOR_BEGIN_LINE	3864:48:86315:86331	1179611	57	True				
ANR	1180741	Statement	|	3864:66:86333:86333	1179611	58	True				
ANR	1180742	Statement	ANCHOR_END_LINE	3864:68:86335:86349	1179611	59	True				
ANR	1180743	Statement	|	3864:84:86351:86351	1179611	60	True				
ANR	1180744	Statement	ANCHOR_BEGIN_BUF	3864:86:86353:86368	1179611	61	True				
ANR	1180745	Statement	|	3864:103:86370:86370	1179611	62	True				
ANR	1180746	Statement	ANCHOR_BEGIN_POSITION	3864:105:86372:86392	1179611	63	True				
ANR	1180747	Statement	)	3864:127:86394:86394	1179611	64	True				
ANR	1180748	Label	case ANCHOR_LOOK_BEHIND :	3866:6:86403:86426	1179611	65	True				
ANR	1180749	Identifier	ANCHOR_LOOK_BEHIND		1179611	0					
ANR	1180750	CompoundStatement		212:1:5308:5308	1179611	66					
ANR	1180751	ExpressionStatement	"r = check_type_tree ( an -> target , ALLOWED_TYPE_IN_LB , ALLOWED_ENCLOSE_IN_LB , ALLOWED_ANCHOR_IN_LB )"	3868:3:86434:86539	1179611	0	True				
ANR	1180752	AssignmentExpression	"r = check_type_tree ( an -> target , ALLOWED_TYPE_IN_LB , ALLOWED_ENCLOSE_IN_LB , ALLOWED_ANCHOR_IN_LB )"		1179611	0		=			
ANR	1180753	Identifier	r		1179611	0					
ANR	1180754	CallExpression	"check_type_tree ( an -> target , ALLOWED_TYPE_IN_LB , ALLOWED_ENCLOSE_IN_LB , ALLOWED_ANCHOR_IN_LB )"		1179611	1					
ANR	1180755	Callee	check_type_tree		1179611	0					
ANR	1180756	Identifier	check_type_tree		1179611	0					
ANR	1180757	ArgumentList	an -> target		1179611	1					
ANR	1180758	Argument	an -> target		1179611	0					
ANR	1180759	PtrMemberAccess	an -> target		1179611	0					
ANR	1180760	Identifier	an		1179611	0					
ANR	1180761	Identifier	target		1179611	1					
ANR	1180762	Argument	ALLOWED_TYPE_IN_LB		1179611	1					
ANR	1180763	Identifier	ALLOWED_TYPE_IN_LB		1179611	0					
ANR	1180764	Argument	ALLOWED_ENCLOSE_IN_LB		1179611	2					
ANR	1180765	Identifier	ALLOWED_ENCLOSE_IN_LB		1179611	0					
ANR	1180766	Argument	ALLOWED_ANCHOR_IN_LB		1179611	3					
ANR	1180767	Identifier	ALLOWED_ANCHOR_IN_LB		1179611	0					
ANR	1180768	IfStatement	if ( r < 0 )		1179611	1					
ANR	1180769	Condition	r < 0	3870:7:86548:86552	1179611	0	True				
ANR	1180770	RelationalExpression	r < 0		1179611	0		<			
ANR	1180771	Identifier	r		1179611	0					
ANR	1180772	PrimaryExpression	0		1179611	1					
ANR	1180773	ReturnStatement	return r ;	3870:14:86555:86563	1179611	1	True				
ANR	1180774	Identifier	r		1179611	0					
ANR	1180775	IfStatement	if ( r > 0 )		1179611	2					
ANR	1180776	Condition	r > 0	3871:7:86572:86576	1179611	0	True				
ANR	1180777	RelationalExpression	r > 0		1179611	0		>			
ANR	1180778	Identifier	r		1179611	0					
ANR	1180779	PrimaryExpression	0		1179611	1					
ANR	1180780	ReturnStatement	return ONIGERR_INVALID_LOOK_BEHIND_PATTERN ;	3871:14:86579:86621	1179611	1	True				
ANR	1180781	Identifier	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		1179611	0					
ANR	1180782	ExpressionStatement	"r = setup_look_behind ( node , reg , env )"	3872:3:86626:86663	1179611	3	True				
ANR	1180783	AssignmentExpression	"r = setup_look_behind ( node , reg , env )"		1179611	0		=			
ANR	1180784	Identifier	r		1179611	0					
ANR	1180785	CallExpression	"setup_look_behind ( node , reg , env )"		1179611	1					
ANR	1180786	Callee	setup_look_behind		1179611	0					
ANR	1180787	Identifier	setup_look_behind		1179611	0					
ANR	1180788	ArgumentList	node		1179611	1					
ANR	1180789	Argument	node		1179611	0					
ANR	1180790	Identifier	node		1179611	0					
ANR	1180791	Argument	reg		1179611	1					
ANR	1180792	Identifier	reg		1179611	0					
ANR	1180793	Argument	env		1179611	2					
ANR	1180794	Identifier	env		1179611	0					
ANR	1180795	IfStatement	if ( r != 0 )		1179611	4					
ANR	1180796	Condition	r != 0	3873:7:86672:86677	1179611	0	True				
ANR	1180797	EqualityExpression	r != 0		1179611	0		!=			
ANR	1180798	Identifier	r		1179611	0					
ANR	1180799	PrimaryExpression	0		1179611	1					
ANR	1180800	ReturnStatement	return r ;	3873:15:86680:86688	1179611	1	True				
ANR	1180801	Identifier	r		1179611	0					
ANR	1180802	ExpressionStatement	"r = setup_tree ( an -> target , reg , state , env )"	3874:3:86693:86736	1179611	5	True				
ANR	1180803	AssignmentExpression	"r = setup_tree ( an -> target , reg , state , env )"		1179611	0		=			
ANR	1180804	Identifier	r		1179611	0					
ANR	1180805	CallExpression	"setup_tree ( an -> target , reg , state , env )"		1179611	1					
ANR	1180806	Callee	setup_tree		1179611	0					
ANR	1180807	Identifier	setup_tree		1179611	0					
ANR	1180808	ArgumentList	an -> target		1179611	1					
ANR	1180809	Argument	an -> target		1179611	0					
ANR	1180810	PtrMemberAccess	an -> target		1179611	0					
ANR	1180811	Identifier	an		1179611	0					
ANR	1180812	Identifier	target		1179611	1					
ANR	1180813	Argument	reg		1179611	1					
ANR	1180814	Identifier	reg		1179611	0					
ANR	1180815	Argument	state		1179611	2					
ANR	1180816	Identifier	state		1179611	0					
ANR	1180817	Argument	env		1179611	3					
ANR	1180818	Identifier	env		1179611	0					
ANR	1180819	BreakStatement	break ;	3876:1:86742:86747	1179611	67	True				
ANR	1180820	Label	case ANCHOR_LOOK_BEHIND_NOT :	3878:6:86756:86783	1179611	68	True				
ANR	1180821	Identifier	ANCHOR_LOOK_BEHIND_NOT		1179611	0					
ANR	1180822	CompoundStatement		224:1:5665:5665	1179611	69					
ANR	1180823	ExpressionStatement	"r = check_type_tree ( an -> target , ALLOWED_TYPE_IN_LB , ALLOWED_ENCLOSE_IN_LB_NOT , ALLOWED_ANCHOR_IN_LB_NOT )"	3880:3:86791:86903	1179611	0	True				
ANR	1180824	AssignmentExpression	"r = check_type_tree ( an -> target , ALLOWED_TYPE_IN_LB , ALLOWED_ENCLOSE_IN_LB_NOT , ALLOWED_ANCHOR_IN_LB_NOT )"		1179611	0		=			
ANR	1180825	Identifier	r		1179611	0					
ANR	1180826	CallExpression	"check_type_tree ( an -> target , ALLOWED_TYPE_IN_LB , ALLOWED_ENCLOSE_IN_LB_NOT , ALLOWED_ANCHOR_IN_LB_NOT )"		1179611	1					
ANR	1180827	Callee	check_type_tree		1179611	0					
ANR	1180828	Identifier	check_type_tree		1179611	0					
ANR	1180829	ArgumentList	an -> target		1179611	1					
ANR	1180830	Argument	an -> target		1179611	0					
ANR	1180831	PtrMemberAccess	an -> target		1179611	0					
ANR	1180832	Identifier	an		1179611	0					
ANR	1180833	Identifier	target		1179611	1					
ANR	1180834	Argument	ALLOWED_TYPE_IN_LB		1179611	1					
ANR	1180835	Identifier	ALLOWED_TYPE_IN_LB		1179611	0					
ANR	1180836	Argument	ALLOWED_ENCLOSE_IN_LB_NOT		1179611	2					
ANR	1180837	Identifier	ALLOWED_ENCLOSE_IN_LB_NOT		1179611	0					
ANR	1180838	Argument	ALLOWED_ANCHOR_IN_LB_NOT		1179611	3					
ANR	1180839	Identifier	ALLOWED_ANCHOR_IN_LB_NOT		1179611	0					
ANR	1180840	IfStatement	if ( r < 0 )		1179611	1					
ANR	1180841	Condition	r < 0	3882:7:86912:86916	1179611	0	True				
ANR	1180842	RelationalExpression	r < 0		1179611	0		<			
ANR	1180843	Identifier	r		1179611	0					
ANR	1180844	PrimaryExpression	0		1179611	1					
ANR	1180845	ReturnStatement	return r ;	3882:14:86919:86927	1179611	1	True				
ANR	1180846	Identifier	r		1179611	0					
ANR	1180847	IfStatement	if ( r > 0 )		1179611	2					
ANR	1180848	Condition	r > 0	3883:7:86936:86940	1179611	0	True				
ANR	1180849	RelationalExpression	r > 0		1179611	0		>			
ANR	1180850	Identifier	r		1179611	0					
ANR	1180851	PrimaryExpression	0		1179611	1					
ANR	1180852	ReturnStatement	return ONIGERR_INVALID_LOOK_BEHIND_PATTERN ;	3883:14:86943:86985	1179611	1	True				
ANR	1180853	Identifier	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		1179611	0					
ANR	1180854	ExpressionStatement	"r = setup_look_behind ( node , reg , env )"	3884:3:86990:87027	1179611	3	True				
ANR	1180855	AssignmentExpression	"r = setup_look_behind ( node , reg , env )"		1179611	0		=			
ANR	1180856	Identifier	r		1179611	0					
ANR	1180857	CallExpression	"setup_look_behind ( node , reg , env )"		1179611	1					
ANR	1180858	Callee	setup_look_behind		1179611	0					
ANR	1180859	Identifier	setup_look_behind		1179611	0					
ANR	1180860	ArgumentList	node		1179611	1					
ANR	1180861	Argument	node		1179611	0					
ANR	1180862	Identifier	node		1179611	0					
ANR	1180863	Argument	reg		1179611	1					
ANR	1180864	Identifier	reg		1179611	0					
ANR	1180865	Argument	env		1179611	2					
ANR	1180866	Identifier	env		1179611	0					
ANR	1180867	IfStatement	if ( r != 0 )		1179611	4					
ANR	1180868	Condition	r != 0	3885:7:87036:87041	1179611	0	True				
ANR	1180869	EqualityExpression	r != 0		1179611	0		!=			
ANR	1180870	Identifier	r		1179611	0					
ANR	1180871	PrimaryExpression	0		1179611	1					
ANR	1180872	ReturnStatement	return r ;	3885:15:87044:87052	1179611	1	True				
ANR	1180873	Identifier	r		1179611	0					
ANR	1180874	ExpressionStatement	"r = setup_tree ( an -> target , reg , ( state | IN_NOT ) , env )"	3886:3:87057:87111	1179611	5	True				
ANR	1180875	AssignmentExpression	"r = setup_tree ( an -> target , reg , ( state | IN_NOT ) , env )"		1179611	0		=			
ANR	1180876	Identifier	r		1179611	0					
ANR	1180877	CallExpression	"setup_tree ( an -> target , reg , ( state | IN_NOT ) , env )"		1179611	1					
ANR	1180878	Callee	setup_tree		1179611	0					
ANR	1180879	Identifier	setup_tree		1179611	0					
ANR	1180880	ArgumentList	an -> target		1179611	1					
ANR	1180881	Argument	an -> target		1179611	0					
ANR	1180882	PtrMemberAccess	an -> target		1179611	0					
ANR	1180883	Identifier	an		1179611	0					
ANR	1180884	Identifier	target		1179611	1					
ANR	1180885	Argument	reg		1179611	1					
ANR	1180886	Identifier	reg		1179611	0					
ANR	1180887	Argument	state | IN_NOT		1179611	2					
ANR	1180888	InclusiveOrExpression	state | IN_NOT		1179611	0		|			
ANR	1180889	Identifier	state		1179611	0					
ANR	1180890	Identifier	IN_NOT		1179611	1					
ANR	1180891	Argument	env		1179611	3					
ANR	1180892	Identifier	env		1179611	0					
ANR	1180893	BreakStatement	break ;	3888:1:87117:87122	1179611	70	True				
ANR	1180894	BreakStatement	break ;	3891:4:87142:87147	1179611	27	True				
ANR	1180895	Label	default :	3893:2:87152:87159	1179611	28	True				
ANR	1180896	Identifier	default		1179611	0					
ANR	1180897	BreakStatement	break ;	3894:4:87165:87170	1179611	29	True				
ANR	1180898	ReturnStatement	return r ;	3897:2:87179:87187	1179611	4	True				
ANR	1180899	Identifier	r		1179611	0					
ANR	1180900	ReturnType	static int		1179611	1					
ANR	1180901	Identifier	setup_tree		1179611	2					
ANR	1180902	ParameterList	"Node * node , regex_t * reg , int state , ScanEnv * env"		1179611	3					
ANR	1180903	Parameter	Node * node	3655:11:81069:81078	1179611	0	True				
ANR	1180904	ParameterType	Node *		1179611	0					
ANR	1180905	Identifier	node		1179611	1					
ANR	1180906	Parameter	regex_t * reg	3655:23:81081:81092	1179611	1	True				
ANR	1180907	ParameterType	regex_t *		1179611	0					
ANR	1180908	Identifier	reg		1179611	1					
ANR	1180909	Parameter	int state	3655:37:81095:81103	1179611	2	True				
ANR	1180910	ParameterType	int		1179611	0					
ANR	1180911	Identifier	state		1179611	1					
ANR	1180912	Parameter	ScanEnv * env	3655:48:81106:81117	1179611	3	True				
ANR	1180913	ParameterType	ScanEnv *		1179611	0					
ANR	1180914	Identifier	env		1179611	1					
ANR	1180915	CFGEntryNode	ENTRY		1179611		True				
ANR	1180916	CFGExitNode	EXIT		1179611		True				
ANR	1180917	Symbol	* sn		1179611						
ANR	1180918	Symbol	env -> bt_mem_start		1179611						
ANR	1180919	Symbol	tqn -> target		1179611						
ANR	1180920	Symbol	ONIGERR_INVALID_LOOK_BEHIND_PATTERN		1179611						
ANR	1180921	Symbol	prev		1179611						
ANR	1180922	Symbol	tqn -> upper		1179611						
ANR	1180923	Symbol	type		1179611						
ANR	1180924	Symbol	NQTFR		1179611						
ANR	1180925	Symbol	env -> bt_mem_end		1179611						
ANR	1180926	Symbol	expand_case_fold_string		1179611						
ANR	1180927	Symbol	len		1179611						
ANR	1180928	Symbol	IS_NODE_TYPE_SIMPLE		1179611						
ANR	1180929	Symbol	* br		1179611						
ANR	1180930	Symbol	en -> type		1179611						
ANR	1180931	Symbol	options		1179611						
ANR	1180932	Symbol	SCANENV_MEM_NODES		1179611						
ANR	1180933	Symbol	state		1179611						
ANR	1180934	Symbol	IS_REPEAT_INFINITE		1179611						
ANR	1180935	Symbol	qn		1179611						
ANR	1180936	Symbol	NENCLOSE ( node ) -> option		1179611						
ANR	1180937	Symbol	en -> regnum		1179611						
ANR	1180938	Symbol	NCDR		1179611						
ANR	1180939	Symbol	NSTR		1179611						
ANR	1180940	Symbol	tqn -> lower		1179611						
ANR	1180941	Symbol	NSTR ( target ) -> flag		1179611						
ANR	1180942	Symbol	check_type_tree		1179611						
ANR	1180943	Symbol	an		1179611						
ANR	1180944	Symbol	qn -> target		1179611						
ANR	1180945	Symbol	node		1179611						
ANR	1180946	Symbol	BACKREFS_P		1179611						
ANR	1180947	Symbol	get_max_match_length		1179611						
ANR	1180948	Symbol	an -> target		1179611						
ANR	1180949	Symbol	NST_STOP_BT_SIMPLE_REPEAT		1179611						
ANR	1180950	Symbol	next_setup		1179611						
ANR	1180951	Symbol	ALLOWED_ENCLOSE_IN_LB		1179611						
ANR	1180952	Symbol	qtype		1179611						
ANR	1180953	Symbol	NSTRING_IS_RAW		1179611						
ANR	1180954	Symbol	* en		1179611						
ANR	1180955	Symbol	br		1179611						
ANR	1180956	Symbol	qn -> lower		1179611						
ANR	1180957	Symbol	NBREF		1179611						
ANR	1180958	Symbol	NENCLOSE		1179611						
ANR	1180959	Symbol	* * p		1179611						
ANR	1180960	Symbol	sn		1179611						
ANR	1180961	Symbol	d		1179611						
ANR	1180962	Symbol	IN_ALT		1179611						
ANR	1180963	Symbol	i		1179611						
ANR	1180964	Symbol	ALLOWED_ENCLOSE_IN_LB_NOT		1179611						
ANR	1180965	Symbol	n		1179611						
ANR	1180966	Symbol	get_head_value_node		1179611						
ANR	1180967	Symbol	p		1179611						
ANR	1180968	Symbol	r		1179611						
ANR	1180969	Symbol	ALLOWED_TYPE_IN_LB		1179611						
ANR	1180970	Symbol	ALLOWED_ANCHOR_IN_LB		1179611						
ANR	1180971	Symbol	setup_look_behind		1179611						
ANR	1180972	Symbol	en -> target		1179611						
ANR	1180973	Symbol	ALLOWED_ANCHOR_IN_LB_NOT		1179611						
ANR	1180974	Symbol	IS_IGNORECASE		1179611						
ANR	1180975	Symbol	NSTRING_LEN		1179611						
ANR	1180976	Symbol	NCAR		1179611						
ANR	1180977	Symbol	br -> back_num		1179611						
ANR	1180978	Symbol	EXPAND_STRING_MAX_LENGTH		1179611						
ANR	1180979	Symbol	qn -> state		1179611						
ANR	1180980	Symbol	tqn		1179611						
ANR	1180981	Symbol	IN_NOT		1179611						
ANR	1180982	Symbol	sn -> s		1179611						
ANR	1180983	Symbol	reg		1179611						
ANR	1180984	Symbol	reg -> options		1179611						
ANR	1180985	Symbol	* nodes		1179611						
ANR	1180986	Symbol	IN_REPEAT		1179611						
ANR	1180987	Symbol	tqn -> head_exact		1179611						
ANR	1180988	Symbol	env -> backrefed_mem		1179611						
ANR	1180989	Symbol	* * i		1179611						
ANR	1180990	Symbol	NQ_TARGET_IS_EMPTY		1179611						
ANR	1180991	Symbol	NULL		1179611						
ANR	1180992	Symbol	* env		1179611						
ANR	1180993	Symbol	en		1179611						
ANR	1180994	Symbol	* NSTR		1179611						
ANR	1180995	Symbol	NENCLOSE ( node ) -> target		1179611						
ANR	1180996	Symbol	qn -> upper		1179611						
ANR	1180997	Symbol	get_min_match_length		1179611						
ANR	1180998	Symbol	NULL_NODE		1179611						
ANR	1180999	Symbol	* qn		1179611						
ANR	1181000	Symbol	qn -> target_empty_info		1179611						
ANR	1181001	Symbol	qn -> greedy		1179611						
ANR	1181002	Symbol	IS_NOT_NULL		1179611						
ANR	1181003	Symbol	ONIGERR_INVALID_BACKREF		1179611						
ANR	1181004	Symbol	* NENCLOSE		1179611						
ANR	1181005	Symbol	an -> type		1179611						
ANR	1181006	Symbol	NST_MEM_BACKREFED		1179611						
ANR	1181007	Symbol	NT_QTFR		1179611						
ANR	1181008	Symbol	NST_IN_REPEAT		1179611						
ANR	1181009	Symbol	sn -> end		1179611						
ANR	1181010	Symbol	env -> num_mem		1179611						
ANR	1181011	Symbol	quantifiers_memory_node_info		1179611						
ANR	1181012	Symbol	& d		1179611						
ANR	1181013	Symbol	env		1179611						
ANR	1181014	Symbol	tqn -> greedy		1179611						
ANR	1181015	Symbol	setup_tree		1179611						
ANR	1181016	Symbol	qn -> head_exact		1179611						
ANR	1181017	Symbol	target		1179611						
ANR	1181018	Symbol	* an		1179611						
ANR	1181019	Symbol	nodes		1179611						
ANR	1181020	Symbol	* i		1179611						
ANR	1181021	Symbol	onig_node_str_cat		1179611						
ANR	1181022	Symbol	NANCHOR		1179611						
ANR	1181023	Symbol	NTYPE		1179611						
ANR	1181024	Symbol	* p		1179611						
ANR	1181025	Symbol	IN_VAR_REPEAT		1179611						
ANR	1181026	Symbol	* tqn		1179611						
ANR	1181027	Symbol	* reg		1179611						
ANR	1181028	Symbol	IS_BACKREF_NEST_LEVEL		1179611						
ANR	1181029	Symbol	NT_STR		1179611						
ANR	1181030	Function	set_bm_skip	3901:0:87233:87872							
ANR	1181031	FunctionDef	"set_bm_skip (UChar * s , UChar * end , OnigEncoding enc ARG_UNUSED , UChar skip [ ] , int * * int_skip)"		1181030	0					
ANR	1181032	CompoundStatement		3904:0:87342:87872	1181030	0					
ANR	1181033	IdentifierDeclStatement	"int i , len ;"	3905:2:87346:87356	1181030	0	True				
ANR	1181034	IdentifierDecl	i		1181030	0					
ANR	1181035	IdentifierDeclType	int		1181030	0					
ANR	1181036	Identifier	i		1181030	1					
ANR	1181037	IdentifierDecl	len		1181030	1					
ANR	1181038	IdentifierDeclType	int		1181030	0					
ANR	1181039	Identifier	len		1181030	1					
ANR	1181040	ExpressionStatement	len = end - s	3907:2:87361:87374	1181030	1	True				
ANR	1181041	AssignmentExpression	len = end - s		1181030	0		=			
ANR	1181042	Identifier	len		1181030	0					
ANR	1181043	AdditiveExpression	end - s		1181030	1		-			
ANR	1181044	Identifier	end		1181030	0					
ANR	1181045	Identifier	s		1181030	1					
ANR	1181046	IfStatement	if ( len < ONIG_CHAR_TABLE_SIZE )		1181030	2					
ANR	1181047	Condition	len < ONIG_CHAR_TABLE_SIZE	3908:6:87382:87407	1181030	0	True				
ANR	1181048	RelationalExpression	len < ONIG_CHAR_TABLE_SIZE		1181030	0		<			
ANR	1181049	Identifier	len		1181030	0					
ANR	1181050	Identifier	ONIG_CHAR_TABLE_SIZE		1181030	1					
ANR	1181051	CompoundStatement		5:34:67:67	1181030	1					
ANR	1181052	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		1181030	0					
ANR	1181053	ForInit	i = 0 ;	3909:9:87421:87426	1181030	0	True				
ANR	1181054	AssignmentExpression	i = 0		1181030	0		=			
ANR	1181055	Identifier	i		1181030	0					
ANR	1181056	PrimaryExpression	0		1181030	1					
ANR	1181057	Condition	i < ONIG_CHAR_TABLE_SIZE	3909:16:87428:87451	1181030	1	True				
ANR	1181058	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		1181030	0		<			
ANR	1181059	Identifier	i		1181030	0					
ANR	1181060	Identifier	ONIG_CHAR_TABLE_SIZE		1181030	1					
ANR	1181061	PostIncDecOperationExpression	i ++	3909:42:87454:87456	1181030	2	True				
ANR	1181062	Identifier	i		1181030	0					
ANR	1181063	IncDec	++		1181030	1					
ANR	1181064	ExpressionStatement	skip [ i ] = len	3909:47:87459:87472	1181030	3	True				
ANR	1181065	AssignmentExpression	skip [ i ] = len		1181030	0		=			
ANR	1181066	ArrayIndexing	skip [ i ]		1181030	0					
ANR	1181067	Identifier	skip		1181030	0					
ANR	1181068	Identifier	i		1181030	1					
ANR	1181069	Identifier	len		1181030	1					
ANR	1181070	ForStatement	for ( i = 0 ; i < len - 1 ; i ++ )		1181030	1					
ANR	1181071	ForInit	i = 0 ;	3911:9:87484:87489	1181030	0	True				
ANR	1181072	AssignmentExpression	i = 0		1181030	0		=			
ANR	1181073	Identifier	i		1181030	0					
ANR	1181074	PrimaryExpression	0		1181030	1					
ANR	1181075	Condition	i < len - 1	3911:16:87491:87501	1181030	1	True				
ANR	1181076	RelationalExpression	i < len - 1		1181030	0		<			
ANR	1181077	Identifier	i		1181030	0					
ANR	1181078	AdditiveExpression	len - 1		1181030	1		-			
ANR	1181079	Identifier	len		1181030	0					
ANR	1181080	PrimaryExpression	1		1181030	1					
ANR	1181081	PostIncDecOperationExpression	i ++	3911:29:87504:87506	1181030	2	True				
ANR	1181082	Identifier	i		1181030	0					
ANR	1181083	IncDec	++		1181030	1					
ANR	1181084	ExpressionStatement	skip [ s [ i ] ] = len - 1 - i	3912:6:87515:87539	1181030	3	True				
ANR	1181085	AssignmentExpression	skip [ s [ i ] ] = len - 1 - i		1181030	0		=			
ANR	1181086	ArrayIndexing	skip [ s [ i ] ]		1181030	0					
ANR	1181087	Identifier	skip		1181030	0					
ANR	1181088	ArrayIndexing	s [ i ]		1181030	1					
ANR	1181089	Identifier	s		1181030	0					
ANR	1181090	Identifier	i		1181030	1					
ANR	1181091	AdditiveExpression	len - 1 - i		1181030	1		-			
ANR	1181092	Identifier	len		1181030	0					
ANR	1181093	AdditiveExpression	1 - i		1181030	1		-			
ANR	1181094	PrimaryExpression	1		1181030	0					
ANR	1181095	Identifier	i		1181030	1					
ANR	1181096	ElseStatement	else		1181030	0					
ANR	1181097	CompoundStatement		11:7:209:209	1181030	0					
ANR	1181098	IfStatement	if ( IS_NULL ( * int_skip ) )		1181030	0					
ANR	1181099	Condition	IS_NULL ( * int_skip )	3915:8:87562:87579	1181030	0	True				
ANR	1181100	CallExpression	IS_NULL ( * int_skip )		1181030	0					
ANR	1181101	Callee	IS_NULL		1181030	0					
ANR	1181102	Identifier	IS_NULL		1181030	0					
ANR	1181103	ArgumentList	* int_skip		1181030	1					
ANR	1181104	Argument	* int_skip		1181030	0					
ANR	1181105	UnaryOperationExpression	* int_skip		1181030	0					
ANR	1181106	UnaryOperator	*		1181030	0					
ANR	1181107	Identifier	int_skip		1181030	1					
ANR	1181108	CompoundStatement		12:28:239:239	1181030	1					
ANR	1181109	ExpressionStatement	* int_skip = ( int * ) xmalloc ( sizeof ( int ) * ONIG_CHAR_TABLE_SIZE )	3916:6:87590:87652	1181030	0	True				
ANR	1181110	AssignmentExpression	* int_skip = ( int * ) xmalloc ( sizeof ( int ) * ONIG_CHAR_TABLE_SIZE )		1181030	0		=			
ANR	1181111	UnaryOperationExpression	* int_skip		1181030	0					
ANR	1181112	UnaryOperator	*		1181030	0					
ANR	1181113	Identifier	int_skip		1181030	1					
ANR	1181114	CastExpression	( int * ) xmalloc ( sizeof ( int ) * ONIG_CHAR_TABLE_SIZE )		1181030	1					
ANR	1181115	CastTarget	int *		1181030	0					
ANR	1181116	CallExpression	xmalloc ( sizeof ( int ) * ONIG_CHAR_TABLE_SIZE )		1181030	1					
ANR	1181117	Callee	xmalloc		1181030	0					
ANR	1181118	Identifier	xmalloc		1181030	0					
ANR	1181119	ArgumentList	sizeof ( int ) * ONIG_CHAR_TABLE_SIZE		1181030	1					
ANR	1181120	Argument	sizeof ( int ) * ONIG_CHAR_TABLE_SIZE		1181030	0					
ANR	1181121	MultiplicativeExpression	sizeof ( int ) * ONIG_CHAR_TABLE_SIZE		1181030	0		*			
ANR	1181122	SizeofExpression	sizeof ( int )		1181030	0					
ANR	1181123	Sizeof	sizeof		1181030	0					
ANR	1181124	SizeofOperand	int		1181030	1					
ANR	1181125	Identifier	ONIG_CHAR_TABLE_SIZE		1181030	1					
ANR	1181126	IfStatement	if ( IS_NULL ( * int_skip ) )		1181030	1					
ANR	1181127	Condition	IS_NULL ( * int_skip )	3917:10:87664:87681	1181030	0	True				
ANR	1181128	CallExpression	IS_NULL ( * int_skip )		1181030	0					
ANR	1181129	Callee	IS_NULL		1181030	0					
ANR	1181130	Identifier	IS_NULL		1181030	0					
ANR	1181131	ArgumentList	* int_skip		1181030	1					
ANR	1181132	Argument	* int_skip		1181030	0					
ANR	1181133	UnaryOperationExpression	* int_skip		1181030	0					
ANR	1181134	UnaryOperator	*		1181030	0					
ANR	1181135	Identifier	int_skip		1181030	1					
ANR	1181136	ReturnStatement	return ONIGERR_MEMORY ;	3917:30:87684:87705	1181030	1	True				
ANR	1181137	Identifier	ONIGERR_MEMORY		1181030	0					
ANR	1181138	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		1181030	1					
ANR	1181139	ForInit	i = 0 ;	3919:9:87722:87727	1181030	0	True				
ANR	1181140	AssignmentExpression	i = 0		1181030	0		=			
ANR	1181141	Identifier	i		1181030	0					
ANR	1181142	PrimaryExpression	0		1181030	1					
ANR	1181143	Condition	i < ONIG_CHAR_TABLE_SIZE	3919:16:87729:87752	1181030	1	True				
ANR	1181144	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		1181030	0		<			
ANR	1181145	Identifier	i		1181030	0					
ANR	1181146	Identifier	ONIG_CHAR_TABLE_SIZE		1181030	1					
ANR	1181147	PostIncDecOperationExpression	i ++	3919:42:87755:87757	1181030	2	True				
ANR	1181148	Identifier	i		1181030	0					
ANR	1181149	IncDec	++		1181030	1					
ANR	1181150	ExpressionStatement	( * int_skip ) [ i ] = len	3919:47:87760:87780	1181030	3	True				
ANR	1181151	AssignmentExpression	( * int_skip ) [ i ] = len		1181030	0		=			
ANR	1181152	ArrayIndexing	( * int_skip ) [ i ]		1181030	0					
ANR	1181153	UnaryOperationExpression	* int_skip		1181030	0					
ANR	1181154	UnaryOperator	*		1181030	0					
ANR	1181155	Identifier	int_skip		1181030	1					
ANR	1181156	Identifier	i		1181030	1					
ANR	1181157	Identifier	len		1181030	1					
ANR	1181158	ForStatement	for ( i = 0 ; i < len - 1 ; i ++ )		1181030	2					
ANR	1181159	ForInit	i = 0 ;	3921:9:87792:87797	1181030	0	True				
ANR	1181160	AssignmentExpression	i = 0		1181030	0		=			
ANR	1181161	Identifier	i		1181030	0					
ANR	1181162	PrimaryExpression	0		1181030	1					
ANR	1181163	Condition	i < len - 1	3921:16:87799:87809	1181030	1	True				
ANR	1181164	RelationalExpression	i < len - 1		1181030	0		<			
ANR	1181165	Identifier	i		1181030	0					
ANR	1181166	AdditiveExpression	len - 1		1181030	1		-			
ANR	1181167	Identifier	len		1181030	0					
ANR	1181168	PrimaryExpression	1		1181030	1					
ANR	1181169	PostIncDecOperationExpression	i ++	3921:29:87812:87814	1181030	2	True				
ANR	1181170	Identifier	i		1181030	0					
ANR	1181171	IncDec	++		1181030	1					
ANR	1181172	ExpressionStatement	( * int_skip ) [ s [ i ] ] = len - 1 - i	3922:6:87823:87854	1181030	3	True				
ANR	1181173	AssignmentExpression	( * int_skip ) [ s [ i ] ] = len - 1 - i		1181030	0		=			
ANR	1181174	ArrayIndexing	( * int_skip ) [ s [ i ] ]		1181030	0					
ANR	1181175	UnaryOperationExpression	* int_skip		1181030	0					
ANR	1181176	UnaryOperator	*		1181030	0					
ANR	1181177	Identifier	int_skip		1181030	1					
ANR	1181178	ArrayIndexing	s [ i ]		1181030	1					
ANR	1181179	Identifier	s		1181030	0					
ANR	1181180	Identifier	i		1181030	1					
ANR	1181181	AdditiveExpression	len - 1 - i		1181030	1		-			
ANR	1181182	Identifier	len		1181030	0					
ANR	1181183	AdditiveExpression	1 - i		1181030	1		-			
ANR	1181184	PrimaryExpression	1		1181030	0					
ANR	1181185	Identifier	i		1181030	1					
ANR	1181186	ReturnStatement	return 0 ;	3924:2:87862:87870	1181030	3	True				
ANR	1181187	PrimaryExpression	0		1181030	0					
ANR	1181188	ReturnType	static int		1181030	1					
ANR	1181189	Identifier	set_bm_skip		1181030	2					
ANR	1181190	ParameterList	"UChar * s , UChar * end , OnigEncoding enc ARG_UNUSED , UChar skip [ ] , int * * int_skip"		1181030	3					
ANR	1181191	Parameter	UChar * s	3902:12:87256:87263	1181030	0	True				
ANR	1181192	ParameterType	UChar *		1181030	0					
ANR	1181193	Identifier	s		1181030	1					
ANR	1181194	Parameter	UChar * end	3902:22:87266:87275	1181030	1	True				
ANR	1181195	ParameterType	UChar *		1181030	0					
ANR	1181196	Identifier	end		1181030	1					
ANR	1181197	Parameter	OnigEncoding enc ARG_UNUSED	3902:34:87278:87304	1181030	2	True				
ANR	1181198	ParameterType	OnigEncoding enc		1181030	0					
ANR	1181199	Identifier	ARG_UNUSED		1181030	1					
ANR	1181200	Parameter	UChar skip [ ]	3903:5:87312:87323	1181030	3	True				
ANR	1181201	ParameterType	UChar [ ]		1181030	0					
ANR	1181202	Identifier	skip		1181030	1					
ANR	1181203	Parameter	int * * int_skip	3903:19:87326:87339	1181030	4	True				
ANR	1181204	ParameterType	int * *		1181030	0					
ANR	1181205	Identifier	int_skip		1181030	1					
ANR	1181206	CFGEntryNode	ENTRY		1181030		True				
ANR	1181207	CFGExitNode	EXIT		1181030		True				
ANR	1181208	Symbol	* * i		1181030						
ANR	1181209	Symbol	* int_skip		1181030						
ANR	1181210	Symbol	int_skip		1181030						
ANR	1181211	Symbol	ONIGERR_MEMORY		1181030						
ANR	1181212	Symbol	i		1181030						
ANR	1181213	Symbol	skip		1181030						
ANR	1181214	Symbol	ARG_UNUSED		1181030						
ANR	1181215	Symbol	* skip		1181030						
ANR	1181216	Symbol	s		1181030						
ANR	1181217	Symbol	ONIG_CHAR_TABLE_SIZE		1181030						
ANR	1181218	Symbol	* i		1181030						
ANR	1181219	Symbol	len		1181030						
ANR	1181220	Symbol	IS_NULL		1181030						
ANR	1181221	Symbol	xmalloc		1181030						
ANR	1181222	Symbol	* * s		1181030						
ANR	1181223	Symbol	end		1181030						
ANR	1181224	Symbol	* * int_skip		1181030						
ANR	1181225	Symbol	* s		1181030						
ANR	1181226	ClassDef	<unnamed>	3929:8:87914:88020							
ANR	1181227	DeclStmt									
ANR	1181228	Decl							OnigDistance	OnigDistance	min
ANR	1181229	DeclStmt									
ANR	1181230	Decl							OnigDistance	OnigDistance	max
ANR	1181231	DeclStmt									
ANR	1181232	Decl									MinMaxLen
ANR	1181233	ClassDef	<unnamed>	3934:8:88031:88188							
ANR	1181234	DeclStmt									
ANR	1181235	Decl							MinMaxLen	MinMaxLen	mmd
ANR	1181236	DeclStmt									
ANR	1181237	Decl							OnigEncoding	OnigEncoding	enc
ANR	1181238	DeclStmt									
ANR	1181239	Decl							OnigOptionType	OnigOptionType	options
ANR	1181240	DeclStmt									
ANR	1181241	Decl							OnigCaseFoldType	OnigCaseFoldType	case_fold_flag
ANR	1181242	DeclStmt									
ANR	1181243	Decl							ScanEnv	ScanEnv *	scan_env
ANR	1181244	DeclStmt									
ANR	1181245	Decl									OptEnv
ANR	1181246	ClassDef	<unnamed>	3942:8:88199:88259							
ANR	1181247	DeclStmt									
ANR	1181248	Decl							int	int	left_anchor
ANR	1181249	DeclStmt									
ANR	1181250	Decl							int	int	right_anchor
ANR	1181251	DeclStmt									
ANR	1181252	Decl									OptAncInfo
ANR	1181253	ClassDef	<unnamed>	3947:8:88270:88432							
ANR	1181254	DeclStmt									
ANR	1181255	Decl							MinMaxLen	MinMaxLen	mmd
ANR	1181256	DeclStmt									
ANR	1181257	Decl							OptAncInfo	OptAncInfo	anc
ANR	1181258	DeclStmt									
ANR	1181259	Decl							int	int	reach_end
ANR	1181260	DeclStmt									
ANR	1181261	Decl							int	int	ignore_case
ANR	1181262	DeclStmt									
ANR	1181263	Decl							int	int	len
ANR	1181264	DeclStmt									
ANR	1181265	Decl							UChar	UChar [ OPT_EXACT_MAXLEN ]	s
ANR	1181266	DeclStmt									
ANR	1181267	Decl									OptExactInfo
ANR	1181268	ClassDef	<unnamed>	3957:8:88443:88596							
ANR	1181269	DeclStmt									
ANR	1181270	Decl							MinMaxLen	MinMaxLen	mmd
ANR	1181271	DeclStmt									
ANR	1181272	Decl							OptAncInfo	OptAncInfo	anc
ANR	1181273	DeclStmt									
ANR	1181274	Decl							int	int	value
ANR	1181275	DeclStmt									
ANR	1181276	Decl							UChar	UChar [ ONIG_CHAR_TABLE_SIZE ]	map
ANR	1181277	DeclStmt									
ANR	1181278	Decl									OptMapInfo
ANR	1181279	ClassDef	<unnamed>	3965:8:88607:88829							
ANR	1181280	DeclStmt									
ANR	1181281	Decl							MinMaxLen	MinMaxLen	len
ANR	1181282	DeclStmt									
ANR	1181283	Decl							OptAncInfo	OptAncInfo	anc
ANR	1181284	DeclStmt									
ANR	1181285	Decl							OptExactInfo	OptExactInfo	exb
ANR	1181286	DeclStmt									
ANR	1181287	Decl							OptExactInfo	OptExactInfo	exm
ANR	1181288	DeclStmt									
ANR	1181289	Decl							OptExactInfo	OptExactInfo	expr
ANR	1181290	DeclStmt									
ANR	1181291	Decl							OptMapInfo	OptMapInfo	map
ANR	1181292	DeclStmt									
ANR	1181293	Decl									NodeOptInfo
ANR	1181294	Function	map_position_value	3977:0:88833:89705							
ANR	1181295	FunctionDef	"map_position_value (OnigEncoding enc , int i)"		1181294	0					
ANR	1181296	CompoundStatement		3979:0:88888:89705	1181294	0					
ANR	1181297	Statement	static	3980:2:88892:88897	1181294	0	True				
ANR	1181298	IdentifierDeclStatement	"const short int ByteValTable [ ] = { 5 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 10 , 10 , 1 , 1 , 10 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 12 , 4 , 7 , 4 , 4 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 6 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 1 } ;"	3980:9:88899:89480	1181294	1	True				
ANR	1181299	IdentifierDecl	"ByteValTable [ ] = { 5 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 10 , 10 , 1 , 1 , 10 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 12 , 4 , 7 , 4 , 4 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 6 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 1 }"		1181294	0					
ANR	1181300	IdentifierDeclType	const short int [ ]		1181294	0					
ANR	1181301	Identifier	ByteValTable		1181294	1					
ANR	1181302	AssignmentExpression	"ByteValTable [ ] = { 5 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 10 , 10 , 1 , 1 , 10 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 12 , 4 , 7 , 4 , 4 , 4 , 4 , 4 , 4 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 6 , 5 , 5 , 5 , 5 , 6 , 6 , 6 , 6 , 7 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 6 , 5 , 5 , 5 , 5 , 1 }"		1181294	2		=			
ANR	1181303	Identifier	ByteValTable		1181294	0					
ANR	1181304	InitializerList	5		1181294	1					
ANR	1181305	PrimaryExpression	5		1181294	0					
ANR	1181306	PrimaryExpression	1		1181294	1					
ANR	1181307	PrimaryExpression	1		1181294	2					
ANR	1181308	PrimaryExpression	1		1181294	3					
ANR	1181309	PrimaryExpression	1		1181294	4					
ANR	1181310	PrimaryExpression	1		1181294	5					
ANR	1181311	PrimaryExpression	1		1181294	6					
ANR	1181312	PrimaryExpression	1		1181294	7					
ANR	1181313	PrimaryExpression	1		1181294	8					
ANR	1181314	PrimaryExpression	10		1181294	9					
ANR	1181315	PrimaryExpression	10		1181294	10					
ANR	1181316	PrimaryExpression	1		1181294	11					
ANR	1181317	PrimaryExpression	1		1181294	12					
ANR	1181318	PrimaryExpression	10		1181294	13					
ANR	1181319	PrimaryExpression	1		1181294	14					
ANR	1181320	PrimaryExpression	1		1181294	15					
ANR	1181321	PrimaryExpression	1		1181294	16					
ANR	1181322	PrimaryExpression	1		1181294	17					
ANR	1181323	PrimaryExpression	1		1181294	18					
ANR	1181324	PrimaryExpression	1		1181294	19					
ANR	1181325	PrimaryExpression	1		1181294	20					
ANR	1181326	PrimaryExpression	1		1181294	21					
ANR	1181327	PrimaryExpression	1		1181294	22					
ANR	1181328	PrimaryExpression	1		1181294	23					
ANR	1181329	PrimaryExpression	1		1181294	24					
ANR	1181330	PrimaryExpression	1		1181294	25					
ANR	1181331	PrimaryExpression	1		1181294	26					
ANR	1181332	PrimaryExpression	1		1181294	27					
ANR	1181333	PrimaryExpression	1		1181294	28					
ANR	1181334	PrimaryExpression	1		1181294	29					
ANR	1181335	PrimaryExpression	1		1181294	30					
ANR	1181336	PrimaryExpression	1		1181294	31					
ANR	1181337	PrimaryExpression	12		1181294	32					
ANR	1181338	PrimaryExpression	4		1181294	33					
ANR	1181339	PrimaryExpression	7		1181294	34					
ANR	1181340	PrimaryExpression	4		1181294	35					
ANR	1181341	PrimaryExpression	4		1181294	36					
ANR	1181342	PrimaryExpression	4		1181294	37					
ANR	1181343	PrimaryExpression	4		1181294	38					
ANR	1181344	PrimaryExpression	4		1181294	39					
ANR	1181345	PrimaryExpression	4		1181294	40					
ANR	1181346	PrimaryExpression	5		1181294	41					
ANR	1181347	PrimaryExpression	5		1181294	42					
ANR	1181348	PrimaryExpression	5		1181294	43					
ANR	1181349	PrimaryExpression	5		1181294	44					
ANR	1181350	PrimaryExpression	5		1181294	45					
ANR	1181351	PrimaryExpression	5		1181294	46					
ANR	1181352	PrimaryExpression	5		1181294	47					
ANR	1181353	PrimaryExpression	6		1181294	48					
ANR	1181354	PrimaryExpression	6		1181294	49					
ANR	1181355	PrimaryExpression	6		1181294	50					
ANR	1181356	PrimaryExpression	6		1181294	51					
ANR	1181357	PrimaryExpression	6		1181294	52					
ANR	1181358	PrimaryExpression	6		1181294	53					
ANR	1181359	PrimaryExpression	6		1181294	54					
ANR	1181360	PrimaryExpression	6		1181294	55					
ANR	1181361	PrimaryExpression	6		1181294	56					
ANR	1181362	PrimaryExpression	6		1181294	57					
ANR	1181363	PrimaryExpression	5		1181294	58					
ANR	1181364	PrimaryExpression	5		1181294	59					
ANR	1181365	PrimaryExpression	5		1181294	60					
ANR	1181366	PrimaryExpression	5		1181294	61					
ANR	1181367	PrimaryExpression	5		1181294	62					
ANR	1181368	PrimaryExpression	5		1181294	63					
ANR	1181369	PrimaryExpression	5		1181294	64					
ANR	1181370	PrimaryExpression	6		1181294	65					
ANR	1181371	PrimaryExpression	6		1181294	66					
ANR	1181372	PrimaryExpression	6		1181294	67					
ANR	1181373	PrimaryExpression	6		1181294	68					
ANR	1181374	PrimaryExpression	7		1181294	69					
ANR	1181375	PrimaryExpression	6		1181294	70					
ANR	1181376	PrimaryExpression	6		1181294	71					
ANR	1181377	PrimaryExpression	6		1181294	72					
ANR	1181378	PrimaryExpression	6		1181294	73					
ANR	1181379	PrimaryExpression	6		1181294	74					
ANR	1181380	PrimaryExpression	6		1181294	75					
ANR	1181381	PrimaryExpression	6		1181294	76					
ANR	1181382	PrimaryExpression	6		1181294	77					
ANR	1181383	PrimaryExpression	6		1181294	78					
ANR	1181384	PrimaryExpression	6		1181294	79					
ANR	1181385	PrimaryExpression	6		1181294	80					
ANR	1181386	PrimaryExpression	6		1181294	81					
ANR	1181387	PrimaryExpression	6		1181294	82					
ANR	1181388	PrimaryExpression	6		1181294	83					
ANR	1181389	PrimaryExpression	6		1181294	84					
ANR	1181390	PrimaryExpression	6		1181294	85					
ANR	1181391	PrimaryExpression	6		1181294	86					
ANR	1181392	PrimaryExpression	6		1181294	87					
ANR	1181393	PrimaryExpression	6		1181294	88					
ANR	1181394	PrimaryExpression	6		1181294	89					
ANR	1181395	PrimaryExpression	6		1181294	90					
ANR	1181396	PrimaryExpression	5		1181294	91					
ANR	1181397	PrimaryExpression	6		1181294	92					
ANR	1181398	PrimaryExpression	5		1181294	93					
ANR	1181399	PrimaryExpression	5		1181294	94					
ANR	1181400	PrimaryExpression	5		1181294	95					
ANR	1181401	PrimaryExpression	5		1181294	96					
ANR	1181402	PrimaryExpression	6		1181294	97					
ANR	1181403	PrimaryExpression	6		1181294	98					
ANR	1181404	PrimaryExpression	6		1181294	99					
ANR	1181405	PrimaryExpression	6		1181294	100					
ANR	1181406	PrimaryExpression	7		1181294	101					
ANR	1181407	PrimaryExpression	6		1181294	102					
ANR	1181408	PrimaryExpression	6		1181294	103					
ANR	1181409	PrimaryExpression	6		1181294	104					
ANR	1181410	PrimaryExpression	6		1181294	105					
ANR	1181411	PrimaryExpression	6		1181294	106					
ANR	1181412	PrimaryExpression	6		1181294	107					
ANR	1181413	PrimaryExpression	6		1181294	108					
ANR	1181414	PrimaryExpression	6		1181294	109					
ANR	1181415	PrimaryExpression	6		1181294	110					
ANR	1181416	PrimaryExpression	6		1181294	111					
ANR	1181417	PrimaryExpression	6		1181294	112					
ANR	1181418	PrimaryExpression	6		1181294	113					
ANR	1181419	PrimaryExpression	6		1181294	114					
ANR	1181420	PrimaryExpression	6		1181294	115					
ANR	1181421	PrimaryExpression	6		1181294	116					
ANR	1181422	PrimaryExpression	6		1181294	117					
ANR	1181423	PrimaryExpression	6		1181294	118					
ANR	1181424	PrimaryExpression	6		1181294	119					
ANR	1181425	PrimaryExpression	6		1181294	120					
ANR	1181426	PrimaryExpression	6		1181294	121					
ANR	1181427	PrimaryExpression	6		1181294	122					
ANR	1181428	PrimaryExpression	5		1181294	123					
ANR	1181429	PrimaryExpression	5		1181294	124					
ANR	1181430	PrimaryExpression	5		1181294	125					
ANR	1181431	PrimaryExpression	5		1181294	126					
ANR	1181432	PrimaryExpression	1		1181294	127					
ANR	1181433	IfStatement	if ( i < ( int ) ( sizeof ( ByteValTable ) / sizeof ( ByteValTable [ 0 ] ) ) )		1181294	2					
ANR	1181434	Condition	i < ( int ) ( sizeof ( ByteValTable ) / sizeof ( ByteValTable [ 0 ] ) )	3991:6:89489:89544	1181294	0	True				
ANR	1181435	RelationalExpression	i < ( int ) ( sizeof ( ByteValTable ) / sizeof ( ByteValTable [ 0 ] ) )		1181294	0		<			
ANR	1181436	Identifier	i		1181294	0					
ANR	1181437	CastExpression	( int ) ( sizeof ( ByteValTable ) / sizeof ( ByteValTable [ 0 ] ) )		1181294	1					
ANR	1181438	CastTarget	int		1181294	0					
ANR	1181439	MultiplicativeExpression	sizeof ( ByteValTable ) / sizeof ( ByteValTable [ 0 ] )		1181294	1		/			
ANR	1181440	SizeofExpression	sizeof ( ByteValTable )		1181294	0					
ANR	1181441	Sizeof	sizeof		1181294	0					
ANR	1181442	SizeofOperand	ByteValTable		1181294	1					
ANR	1181443	SizeofExpression	sizeof ( ByteValTable [ 0 ] )		1181294	1					
ANR	1181444	Sizeof	sizeof		1181294	0					
ANR	1181445	ArrayIndexing	ByteValTable [ 0 ]		1181294	1					
ANR	1181446	Identifier	ByteValTable		1181294	0					
ANR	1181447	PrimaryExpression	0		1181294	1					
ANR	1181448	CompoundStatement		13:64:658:658	1181294	1					
ANR	1181449	IfStatement	if ( i == 0 && ONIGENC_MBC_MINLEN ( enc ) > 1 )		1181294	0					
ANR	1181450	Condition	i == 0 && ONIGENC_MBC_MINLEN ( enc ) > 1	3992:8:89557:89593	1181294	0	True				
ANR	1181451	AndExpression	i == 0 && ONIGENC_MBC_MINLEN ( enc ) > 1		1181294	0		&&			
ANR	1181452	EqualityExpression	i == 0		1181294	0		==			
ANR	1181453	Identifier	i		1181294	0					
ANR	1181454	PrimaryExpression	0		1181294	1					
ANR	1181455	RelationalExpression	ONIGENC_MBC_MINLEN ( enc ) > 1		1181294	1		>			
ANR	1181456	CallExpression	ONIGENC_MBC_MINLEN ( enc )		1181294	0					
ANR	1181457	Callee	ONIGENC_MBC_MINLEN		1181294	0					
ANR	1181458	Identifier	ONIGENC_MBC_MINLEN		1181294	0					
ANR	1181459	ArgumentList	enc		1181294	1					
ANR	1181460	Argument	enc		1181294	0					
ANR	1181461	Identifier	enc		1181294	0					
ANR	1181462	PrimaryExpression	1		1181294	1					
ANR	1181463	ReturnStatement	return 20 ;	3993:6:89602:89611	1181294	1	True				
ANR	1181464	PrimaryExpression	20		1181294	0					
ANR	1181465	ElseStatement	else		1181294	0					
ANR	1181466	ReturnStatement	return ( int ) ByteValTable [ i ] ;	3995:6:89628:89656	1181294	0	True				
ANR	1181467	CastExpression	( int ) ByteValTable [ i ]		1181294	0					
ANR	1181468	CastTarget	int		1181294	0					
ANR	1181469	ArrayIndexing	ByteValTable [ i ]		1181294	1					
ANR	1181470	Identifier	ByteValTable		1181294	0					
ANR	1181471	Identifier	i		1181294	1					
ANR	1181472	ElseStatement	else		1181294	0					
ANR	1181473	ReturnStatement	return 4 ;	3998:4:89673:89681	1181294	0	True				
ANR	1181474	PrimaryExpression	4		1181294	0					
ANR	1181475	ReturnType	static int		1181294	1					
ANR	1181476	Identifier	map_position_value		1181294	2					
ANR	1181477	ParameterList	"OnigEncoding enc , int i"		1181294	3					
ANR	1181478	Parameter	OnigEncoding enc	3978:19:88863:88878	1181294	0	True				
ANR	1181479	ParameterType	OnigEncoding		1181294	0					
ANR	1181480	Identifier	enc		1181294	1					
ANR	1181481	Parameter	int i	3978:37:88881:88885	1181294	1	True				
ANR	1181482	ParameterType	int		1181294	0					
ANR	1181483	Identifier	i		1181294	1					
ANR	1181484	CFGEntryNode	ENTRY		1181294		True				
ANR	1181485	CFGExitNode	EXIT		1181294		True				
ANR	1181486	Symbol	* ByteValTable		1181294						
ANR	1181487	Symbol	ByteValTable		1181294						
ANR	1181488	Symbol	* i		1181294						
ANR	1181489	Symbol	ONIGENC_MBC_MINLEN		1181294						
ANR	1181490	Symbol	i		1181294						
ANR	1181491	Symbol	enc		1181294						
ANR	1181492	Function	distance_value	4001:0:89708:90730							
ANR	1181493	FunctionDef	distance_value (MinMaxLen * mm)		1181492	0					
ANR	1181494	CompoundStatement		4003:0:89749:90730	1181492	0					
ANR	1181495	Statement	static	4005:2:89787:89792	1181492	0	True				
ANR	1181496	IdentifierDeclStatement	"const short int dist_vals [ ] = { 1000 , 500 , 333 , 250 , 200 , 167 , 143 , 125 , 111 , 100 , 91 , 83 , 77 , 71 , 67 , 63 , 59 , 56 , 53 , 50 , 48 , 45 , 43 , 42 , 40 , 38 , 37 , 36 , 34 , 33 , 32 , 31 , 30 , 29 , 29 , 28 , 27 , 26 , 26 , 25 , 24 , 24 , 23 , 23 , 22 , 22 , 21 , 21 , 20 , 20 , 20 , 19 , 19 , 19 , 18 , 18 , 18 , 17 , 17 , 17 , 16 , 16 , 16 , 16 , 15 , 15 , 15 , 15 , 14 , 14 , 14 , 14 , 14 , 14 , 13 , 13 , 13 , 13 , 13 , 13 , 12 , 12 , 12 , 12 , 12 , 12 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 10 } ;"	4005:9:89794:90477	1181492	1	True				
ANR	1181497	IdentifierDecl	"dist_vals [ ] = { 1000 , 500 , 333 , 250 , 200 , 167 , 143 , 125 , 111 , 100 , 91 , 83 , 77 , 71 , 67 , 63 , 59 , 56 , 53 , 50 , 48 , 45 , 43 , 42 , 40 , 38 , 37 , 36 , 34 , 33 , 32 , 31 , 30 , 29 , 29 , 28 , 27 , 26 , 26 , 25 , 24 , 24 , 23 , 23 , 22 , 22 , 21 , 21 , 20 , 20 , 20 , 19 , 19 , 19 , 18 , 18 , 18 , 17 , 17 , 17 , 16 , 16 , 16 , 16 , 15 , 15 , 15 , 15 , 14 , 14 , 14 , 14 , 14 , 14 , 13 , 13 , 13 , 13 , 13 , 13 , 12 , 12 , 12 , 12 , 12 , 12 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 10 }"		1181492	0					
ANR	1181498	IdentifierDeclType	const short int [ ]		1181492	0					
ANR	1181499	Identifier	dist_vals		1181492	1					
ANR	1181500	AssignmentExpression	"dist_vals [ ] = { 1000 , 500 , 333 , 250 , 200 , 167 , 143 , 125 , 111 , 100 , 91 , 83 , 77 , 71 , 67 , 63 , 59 , 56 , 53 , 50 , 48 , 45 , 43 , 42 , 40 , 38 , 37 , 36 , 34 , 33 , 32 , 31 , 30 , 29 , 29 , 28 , 27 , 26 , 26 , 25 , 24 , 24 , 23 , 23 , 22 , 22 , 21 , 21 , 20 , 20 , 20 , 19 , 19 , 19 , 18 , 18 , 18 , 17 , 17 , 17 , 16 , 16 , 16 , 16 , 15 , 15 , 15 , 15 , 14 , 14 , 14 , 14 , 14 , 14 , 13 , 13 , 13 , 13 , 13 , 13 , 12 , 12 , 12 , 12 , 12 , 12 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 11 , 10 , 10 , 10 , 10 , 10 }"		1181492	2		=			
ANR	1181501	Identifier	dist_vals		1181492	0					
ANR	1181502	InitializerList	1000		1181492	1					
ANR	1181503	PrimaryExpression	1000		1181492	0					
ANR	1181504	PrimaryExpression	500		1181492	1					
ANR	1181505	PrimaryExpression	333		1181492	2					
ANR	1181506	PrimaryExpression	250		1181492	3					
ANR	1181507	PrimaryExpression	200		1181492	4					
ANR	1181508	PrimaryExpression	167		1181492	5					
ANR	1181509	PrimaryExpression	143		1181492	6					
ANR	1181510	PrimaryExpression	125		1181492	7					
ANR	1181511	PrimaryExpression	111		1181492	8					
ANR	1181512	PrimaryExpression	100		1181492	9					
ANR	1181513	PrimaryExpression	91		1181492	10					
ANR	1181514	PrimaryExpression	83		1181492	11					
ANR	1181515	PrimaryExpression	77		1181492	12					
ANR	1181516	PrimaryExpression	71		1181492	13					
ANR	1181517	PrimaryExpression	67		1181492	14					
ANR	1181518	PrimaryExpression	63		1181492	15					
ANR	1181519	PrimaryExpression	59		1181492	16					
ANR	1181520	PrimaryExpression	56		1181492	17					
ANR	1181521	PrimaryExpression	53		1181492	18					
ANR	1181522	PrimaryExpression	50		1181492	19					
ANR	1181523	PrimaryExpression	48		1181492	20					
ANR	1181524	PrimaryExpression	45		1181492	21					
ANR	1181525	PrimaryExpression	43		1181492	22					
ANR	1181526	PrimaryExpression	42		1181492	23					
ANR	1181527	PrimaryExpression	40		1181492	24					
ANR	1181528	PrimaryExpression	38		1181492	25					
ANR	1181529	PrimaryExpression	37		1181492	26					
ANR	1181530	PrimaryExpression	36		1181492	27					
ANR	1181531	PrimaryExpression	34		1181492	28					
ANR	1181532	PrimaryExpression	33		1181492	29					
ANR	1181533	PrimaryExpression	32		1181492	30					
ANR	1181534	PrimaryExpression	31		1181492	31					
ANR	1181535	PrimaryExpression	30		1181492	32					
ANR	1181536	PrimaryExpression	29		1181492	33					
ANR	1181537	PrimaryExpression	29		1181492	34					
ANR	1181538	PrimaryExpression	28		1181492	35					
ANR	1181539	PrimaryExpression	27		1181492	36					
ANR	1181540	PrimaryExpression	26		1181492	37					
ANR	1181541	PrimaryExpression	26		1181492	38					
ANR	1181542	PrimaryExpression	25		1181492	39					
ANR	1181543	PrimaryExpression	24		1181492	40					
ANR	1181544	PrimaryExpression	24		1181492	41					
ANR	1181545	PrimaryExpression	23		1181492	42					
ANR	1181546	PrimaryExpression	23		1181492	43					
ANR	1181547	PrimaryExpression	22		1181492	44					
ANR	1181548	PrimaryExpression	22		1181492	45					
ANR	1181549	PrimaryExpression	21		1181492	46					
ANR	1181550	PrimaryExpression	21		1181492	47					
ANR	1181551	PrimaryExpression	20		1181492	48					
ANR	1181552	PrimaryExpression	20		1181492	49					
ANR	1181553	PrimaryExpression	20		1181492	50					
ANR	1181554	PrimaryExpression	19		1181492	51					
ANR	1181555	PrimaryExpression	19		1181492	52					
ANR	1181556	PrimaryExpression	19		1181492	53					
ANR	1181557	PrimaryExpression	18		1181492	54					
ANR	1181558	PrimaryExpression	18		1181492	55					
ANR	1181559	PrimaryExpression	18		1181492	56					
ANR	1181560	PrimaryExpression	17		1181492	57					
ANR	1181561	PrimaryExpression	17		1181492	58					
ANR	1181562	PrimaryExpression	17		1181492	59					
ANR	1181563	PrimaryExpression	16		1181492	60					
ANR	1181564	PrimaryExpression	16		1181492	61					
ANR	1181565	PrimaryExpression	16		1181492	62					
ANR	1181566	PrimaryExpression	16		1181492	63					
ANR	1181567	PrimaryExpression	15		1181492	64					
ANR	1181568	PrimaryExpression	15		1181492	65					
ANR	1181569	PrimaryExpression	15		1181492	66					
ANR	1181570	PrimaryExpression	15		1181492	67					
ANR	1181571	PrimaryExpression	14		1181492	68					
ANR	1181572	PrimaryExpression	14		1181492	69					
ANR	1181573	PrimaryExpression	14		1181492	70					
ANR	1181574	PrimaryExpression	14		1181492	71					
ANR	1181575	PrimaryExpression	14		1181492	72					
ANR	1181576	PrimaryExpression	14		1181492	73					
ANR	1181577	PrimaryExpression	13		1181492	74					
ANR	1181578	PrimaryExpression	13		1181492	75					
ANR	1181579	PrimaryExpression	13		1181492	76					
ANR	1181580	PrimaryExpression	13		1181492	77					
ANR	1181581	PrimaryExpression	13		1181492	78					
ANR	1181582	PrimaryExpression	13		1181492	79					
ANR	1181583	PrimaryExpression	12		1181492	80					
ANR	1181584	PrimaryExpression	12		1181492	81					
ANR	1181585	PrimaryExpression	12		1181492	82					
ANR	1181586	PrimaryExpression	12		1181492	83					
ANR	1181587	PrimaryExpression	12		1181492	84					
ANR	1181588	PrimaryExpression	12		1181492	85					
ANR	1181589	PrimaryExpression	11		1181492	86					
ANR	1181590	PrimaryExpression	11		1181492	87					
ANR	1181591	PrimaryExpression	11		1181492	88					
ANR	1181592	PrimaryExpression	11		1181492	89					
ANR	1181593	PrimaryExpression	11		1181492	90					
ANR	1181594	PrimaryExpression	11		1181492	91					
ANR	1181595	PrimaryExpression	11		1181492	92					
ANR	1181596	PrimaryExpression	11		1181492	93					
ANR	1181597	PrimaryExpression	11		1181492	94					
ANR	1181598	PrimaryExpression	10		1181492	95					
ANR	1181599	PrimaryExpression	10		1181492	96					
ANR	1181600	PrimaryExpression	10		1181492	97					
ANR	1181601	PrimaryExpression	10		1181492	98					
ANR	1181602	PrimaryExpression	10		1181492	99					
ANR	1181603	IdentifierDeclStatement	int d ;	4018:2:90482:90487	1181492	2	True				
ANR	1181604	IdentifierDecl	d		1181492	0					
ANR	1181605	IdentifierDeclType	int		1181492	0					
ANR	1181606	Identifier	d		1181492	1					
ANR	1181607	IfStatement	if ( mm -> max == ONIG_INFINITE_DISTANCE )		1181492	3					
ANR	1181608	Condition	mm -> max == ONIG_INFINITE_DISTANCE	4020:6:90496:90528	1181492	0	True				
ANR	1181609	EqualityExpression	mm -> max == ONIG_INFINITE_DISTANCE		1181492	0		==			
ANR	1181610	PtrMemberAccess	mm -> max		1181492	0					
ANR	1181611	Identifier	mm		1181492	0					
ANR	1181612	Identifier	max		1181492	1					
ANR	1181613	Identifier	ONIG_INFINITE_DISTANCE		1181492	1					
ANR	1181614	ReturnStatement	return 0 ;	4020:41:90531:90539	1181492	1	True				
ANR	1181615	PrimaryExpression	0		1181492	0					
ANR	1181616	ExpressionStatement	d = mm -> max - mm -> min	4022:2:90544:90565	1181492	4	True				
ANR	1181617	AssignmentExpression	d = mm -> max - mm -> min		1181492	0		=			
ANR	1181618	Identifier	d		1181492	0					
ANR	1181619	AdditiveExpression	mm -> max - mm -> min		1181492	1		-			
ANR	1181620	PtrMemberAccess	mm -> max		1181492	0					
ANR	1181621	Identifier	mm		1181492	0					
ANR	1181622	Identifier	max		1181492	1					
ANR	1181623	PtrMemberAccess	mm -> min		1181492	1					
ANR	1181624	Identifier	mm		1181492	0					
ANR	1181625	Identifier	min		1181492	1					
ANR	1181626	IfStatement	if ( d < ( int ) ( sizeof ( dist_vals ) / sizeof ( dist_vals [ 0 ] ) ) )		1181492	5					
ANR	1181627	Condition	d < ( int ) ( sizeof ( dist_vals ) / sizeof ( dist_vals [ 0 ] ) )	4023:6:90573:90622	1181492	0	True				
ANR	1181628	RelationalExpression	d < ( int ) ( sizeof ( dist_vals ) / sizeof ( dist_vals [ 0 ] ) )		1181492	0		<			
ANR	1181629	Identifier	d		1181492	0					
ANR	1181630	CastExpression	( int ) ( sizeof ( dist_vals ) / sizeof ( dist_vals [ 0 ] ) )		1181492	1					
ANR	1181631	CastTarget	int		1181492	0					
ANR	1181632	MultiplicativeExpression	sizeof ( dist_vals ) / sizeof ( dist_vals [ 0 ] )		1181492	1		/			
ANR	1181633	SizeofExpression	sizeof ( dist_vals )		1181492	0					
ANR	1181634	Sizeof	sizeof		1181492	0					
ANR	1181635	SizeofOperand	dist_vals		1181492	1					
ANR	1181636	SizeofExpression	sizeof ( dist_vals [ 0 ] )		1181492	1					
ANR	1181637	Sizeof	sizeof		1181492	0					
ANR	1181638	ArrayIndexing	dist_vals [ 0 ]		1181492	1					
ANR	1181639	Identifier	dist_vals		1181492	0					
ANR	1181640	PrimaryExpression	0		1181492	1					
ANR	1181641	ReturnStatement	return ( int ) dist_vals [ d ] ;	4025:4:90682:90707	1181492	1	True				
ANR	1181642	CastExpression	( int ) dist_vals [ d ]		1181492	0					
ANR	1181643	CastTarget	int		1181492	0					
ANR	1181644	ArrayIndexing	dist_vals [ d ]		1181492	1					
ANR	1181645	Identifier	dist_vals		1181492	0					
ANR	1181646	Identifier	d		1181492	1					
ANR	1181647	ElseStatement	else		1181492	0					
ANR	1181648	ReturnStatement	return 1 ;	4027:4:90720:90728	1181492	0	True				
ANR	1181649	PrimaryExpression	1		1181492	0					
ANR	1181650	ReturnType	static int		1181492	1					
ANR	1181651	Identifier	distance_value		1181492	2					
ANR	1181652	ParameterList	MinMaxLen * mm		1181492	3					
ANR	1181653	Parameter	MinMaxLen * mm	4002:15:89734:89746	1181492	0	True				
ANR	1181654	ParameterType	MinMaxLen *		1181492	0					
ANR	1181655	Identifier	mm		1181492	1					
ANR	1181656	CFGEntryNode	ENTRY		1181492		True				
ANR	1181657	CFGExitNode	EXIT		1181492		True				
ANR	1181658	Symbol	mm		1181492						
ANR	1181659	Symbol	ONIG_INFINITE_DISTANCE		1181492						
ANR	1181660	Symbol	d		1181492						
ANR	1181661	Symbol	* mm		1181492						
ANR	1181662	Symbol	mm -> max		1181492						
ANR	1181663	Symbol	dist_vals		1181492						
ANR	1181664	Symbol	mm -> min		1181492						
ANR	1181665	Symbol	* d		1181492						
ANR	1181666	Symbol	* dist_vals		1181492						
ANR	1181667	Function	comp_distance_value	4030:0:90733:91059							
ANR	1181668	FunctionDef	"comp_distance_value (MinMaxLen * d1 , MinMaxLen * d2 , int v1 , int v2)"		1181667	0					
ANR	1181669	CompoundStatement		4032:0:90810:91059	1181667	0					
ANR	1181670	IfStatement	if ( v2 <= 0 )		1181667	0					
ANR	1181671	Condition	v2 <= 0	4033:6:90818:90824	1181667	0	True				
ANR	1181672	RelationalExpression	v2 <= 0		1181667	0		<=			
ANR	1181673	Identifier	v2		1181667	0					
ANR	1181674	PrimaryExpression	0		1181667	1					
ANR	1181675	ReturnStatement	return - 1 ;	4033:15:90827:90836	1181667	1	True				
ANR	1181676	UnaryOperationExpression	- 1		1181667	0					
ANR	1181677	UnaryOperator	-		1181667	0					
ANR	1181678	PrimaryExpression	1		1181667	1					
ANR	1181679	IfStatement	if ( v1 <= 0 )		1181667	1					
ANR	1181680	Condition	v1 <= 0	4034:6:90844:90850	1181667	0	True				
ANR	1181681	RelationalExpression	v1 <= 0		1181667	0		<=			
ANR	1181682	Identifier	v1		1181667	0					
ANR	1181683	PrimaryExpression	0		1181667	1					
ANR	1181684	ReturnStatement	return 1 ;	4034:15:90853:90862	1181667	1	True				
ANR	1181685	PrimaryExpression	1		1181667	0					
ANR	1181686	ExpressionStatement	v1 *= distance_value ( d1 )	4036:2:90867:90891	1181667	2	True				
ANR	1181687	AssignmentExpression	v1 *= distance_value ( d1 )		1181667	0		*=			
ANR	1181688	Identifier	v1		1181667	0					
ANR	1181689	CallExpression	distance_value ( d1 )		1181667	1					
ANR	1181690	Callee	distance_value		1181667	0					
ANR	1181691	Identifier	distance_value		1181667	0					
ANR	1181692	ArgumentList	d1		1181667	1					
ANR	1181693	Argument	d1		1181667	0					
ANR	1181694	Identifier	d1		1181667	0					
ANR	1181695	ExpressionStatement	v2 *= distance_value ( d2 )	4037:2:90895:90919	1181667	3	True				
ANR	1181696	AssignmentExpression	v2 *= distance_value ( d2 )		1181667	0		*=			
ANR	1181697	Identifier	v2		1181667	0					
ANR	1181698	CallExpression	distance_value ( d2 )		1181667	1					
ANR	1181699	Callee	distance_value		1181667	0					
ANR	1181700	Identifier	distance_value		1181667	0					
ANR	1181701	ArgumentList	d2		1181667	1					
ANR	1181702	Argument	d2		1181667	0					
ANR	1181703	Identifier	d2		1181667	0					
ANR	1181704	IfStatement	if ( v2 > v1 )		1181667	4					
ANR	1181705	Condition	v2 > v1	4039:6:90928:90934	1181667	0	True				
ANR	1181706	RelationalExpression	v2 > v1		1181667	0		>			
ANR	1181707	Identifier	v2		1181667	0					
ANR	1181708	Identifier	v1		1181667	1					
ANR	1181709	ReturnStatement	return 1 ;	4039:15:90937:90946	1181667	1	True				
ANR	1181710	PrimaryExpression	1		1181667	0					
ANR	1181711	IfStatement	if ( v2 < v1 )		1181667	5					
ANR	1181712	Condition	v2 < v1	4040:6:90954:90960	1181667	0	True				
ANR	1181713	RelationalExpression	v2 < v1		1181667	0		<			
ANR	1181714	Identifier	v2		1181667	0					
ANR	1181715	Identifier	v1		1181667	1					
ANR	1181716	ReturnStatement	return - 1 ;	4040:15:90963:90972	1181667	1	True				
ANR	1181717	UnaryOperationExpression	- 1		1181667	0					
ANR	1181718	UnaryOperator	-		1181667	0					
ANR	1181719	PrimaryExpression	1		1181667	1					
ANR	1181720	IfStatement	if ( d2 -> min < d1 -> min )		1181667	6					
ANR	1181721	Condition	d2 -> min < d1 -> min	4042:6:90981:90997	1181667	0	True				
ANR	1181722	RelationalExpression	d2 -> min < d1 -> min		1181667	0		<			
ANR	1181723	PtrMemberAccess	d2 -> min		1181667	0					
ANR	1181724	Identifier	d2		1181667	0					
ANR	1181725	Identifier	min		1181667	1					
ANR	1181726	PtrMemberAccess	d1 -> min		1181667	1					
ANR	1181727	Identifier	d1		1181667	0					
ANR	1181728	Identifier	min		1181667	1					
ANR	1181729	ReturnStatement	return 1 ;	4042:25:91000:91009	1181667	1	True				
ANR	1181730	PrimaryExpression	1		1181667	0					
ANR	1181731	IfStatement	if ( d2 -> min > d1 -> min )		1181667	7					
ANR	1181732	Condition	d2 -> min > d1 -> min	4043:6:91017:91033	1181667	0	True				
ANR	1181733	RelationalExpression	d2 -> min > d1 -> min		1181667	0		>			
ANR	1181734	PtrMemberAccess	d2 -> min		1181667	0					
ANR	1181735	Identifier	d2		1181667	0					
ANR	1181736	Identifier	min		1181667	1					
ANR	1181737	PtrMemberAccess	d1 -> min		1181667	1					
ANR	1181738	Identifier	d1		1181667	0					
ANR	1181739	Identifier	min		1181667	1					
ANR	1181740	ReturnStatement	return - 1 ;	4043:25:91036:91045	1181667	1	True				
ANR	1181741	UnaryOperationExpression	- 1		1181667	0					
ANR	1181742	UnaryOperator	-		1181667	0					
ANR	1181743	PrimaryExpression	1		1181667	1					
ANR	1181744	ReturnStatement	return 0 ;	4044:2:91049:91057	1181667	8	True				
ANR	1181745	PrimaryExpression	0		1181667	0					
ANR	1181746	ReturnType	static int		1181667	1					
ANR	1181747	Identifier	comp_distance_value		1181667	2					
ANR	1181748	ParameterList	"MinMaxLen * d1 , MinMaxLen * d2 , int v1 , int v2"		1181667	3					
ANR	1181749	Parameter	MinMaxLen * d1	4031:20:90764:90776	1181667	0	True				
ANR	1181750	ParameterType	MinMaxLen *		1181667	0					
ANR	1181751	Identifier	d1		1181667	1					
ANR	1181752	Parameter	MinMaxLen * d2	4031:35:90779:90791	1181667	1	True				
ANR	1181753	ParameterType	MinMaxLen *		1181667	0					
ANR	1181754	Identifier	d2		1181667	1					
ANR	1181755	Parameter	int v1	4031:50:90794:90799	1181667	2	True				
ANR	1181756	ParameterType	int		1181667	0					
ANR	1181757	Identifier	v1		1181667	1					
ANR	1181758	Parameter	int v2	4031:58:90802:90807	1181667	3	True				
ANR	1181759	ParameterType	int		1181667	0					
ANR	1181760	Identifier	v2		1181667	1					
ANR	1181761	CFGEntryNode	ENTRY		1181667		True				
ANR	1181762	CFGExitNode	EXIT		1181667		True				
ANR	1181763	Symbol	* d1		1181667						
ANR	1181764	Symbol	d2 -> min		1181667						
ANR	1181765	Symbol	d1 -> min		1181667						
ANR	1181766	Symbol	* d2		1181667						
ANR	1181767	Symbol	v1		1181667						
ANR	1181768	Symbol	distance_value		1181667						
ANR	1181769	Symbol	v2		1181667						
ANR	1181770	Symbol	d1		1181667						
ANR	1181771	Symbol	d2		1181667						
ANR	1181772	Function	is_equal_mml	4047:0:91062:91173							
ANR	1181773	FunctionDef	"is_equal_mml (MinMaxLen * a , MinMaxLen * b)"		1181772	0					
ANR	1181774	CompoundStatement		4049:0:91114:91173	1181772	0					
ANR	1181775	ReturnStatement	return ( a -> min == b -> min && a -> max == b -> max ) ? 1 : 0 ;	4050:2:91118:91171	1181772	0	True				
ANR	1181776	ConditionalExpression	( a -> min == b -> min && a -> max == b -> max ) ? 1 : 0		1181772	0					
ANR	1181777	Condition	a -> min == b -> min && a -> max == b -> max		1181772	0					
ANR	1181778	AndExpression	a -> min == b -> min && a -> max == b -> max		1181772	0		&&			
ANR	1181779	EqualityExpression	a -> min == b -> min		1181772	0		==			
ANR	1181780	PtrMemberAccess	a -> min		1181772	0					
ANR	1181781	Identifier	a		1181772	0					
ANR	1181782	Identifier	min		1181772	1					
ANR	1181783	PtrMemberAccess	b -> min		1181772	1					
ANR	1181784	Identifier	b		1181772	0					
ANR	1181785	Identifier	min		1181772	1					
ANR	1181786	EqualityExpression	a -> max == b -> max		1181772	1		==			
ANR	1181787	PtrMemberAccess	a -> max		1181772	0					
ANR	1181788	Identifier	a		1181772	0					
ANR	1181789	Identifier	max		1181772	1					
ANR	1181790	PtrMemberAccess	b -> max		1181772	1					
ANR	1181791	Identifier	b		1181772	0					
ANR	1181792	Identifier	max		1181772	1					
ANR	1181793	PrimaryExpression	1		1181772	1					
ANR	1181794	PrimaryExpression	0		1181772	2					
ANR	1181795	ReturnType	static int		1181772	1					
ANR	1181796	Identifier	is_equal_mml		1181772	2					
ANR	1181797	ParameterList	"MinMaxLen * a , MinMaxLen * b"		1181772	3					
ANR	1181798	Parameter	MinMaxLen * a	4048:13:91086:91097	1181772	0	True				
ANR	1181799	ParameterType	MinMaxLen *		1181772	0					
ANR	1181800	Identifier	a		1181772	1					
ANR	1181801	Parameter	MinMaxLen * b	4048:27:91100:91111	1181772	1	True				
ANR	1181802	ParameterType	MinMaxLen *		1181772	0					
ANR	1181803	Identifier	b		1181772	1					
ANR	1181804	CFGEntryNode	ENTRY		1181772		True				
ANR	1181805	CFGExitNode	EXIT		1181772		True				
ANR	1181806	Symbol	a		1181772						
ANR	1181807	Symbol	b		1181772						
ANR	1181808	Symbol	a -> max		1181772						
ANR	1181809	Symbol	* a		1181772						
ANR	1181810	Symbol	* b		1181772						
ANR	1181811	Symbol	b -> max		1181772						
ANR	1181812	Symbol	a -> min		1181772						
ANR	1181813	Symbol	b -> min		1181772						
ANR	1181814	Function	set_mml	4054:0:91177:91287							
ANR	1181815	FunctionDef	"set_mml (MinMaxLen * mml , OnigDistance min , OnigDistance max)"		1181814	0					
ANR	1181816	CompoundStatement		4056:0:91249:91287	1181814	0					
ANR	1181817	ExpressionStatement	mml -> min = min	4057:2:91253:91267	1181814	0	True				
ANR	1181818	AssignmentExpression	mml -> min = min		1181814	0		=			
ANR	1181819	PtrMemberAccess	mml -> min		1181814	0					
ANR	1181820	Identifier	mml		1181814	0					
ANR	1181821	Identifier	min		1181814	1					
ANR	1181822	Identifier	min		1181814	1					
ANR	1181823	ExpressionStatement	mml -> max = max	4058:2:91271:91285	1181814	1	True				
ANR	1181824	AssignmentExpression	mml -> max = max		1181814	0		=			
ANR	1181825	PtrMemberAccess	mml -> max		1181814	0					
ANR	1181826	Identifier	mml		1181814	0					
ANR	1181827	Identifier	max		1181814	1					
ANR	1181828	Identifier	max		1181814	1					
ANR	1181829	ReturnType	static void		1181814	1					
ANR	1181830	Identifier	set_mml		1181814	2					
ANR	1181831	ParameterList	"MinMaxLen * mml , OnigDistance min , OnigDistance max"		1181814	3					
ANR	1181832	Parameter	MinMaxLen * mml	4055:8:91197:91210	1181814	0	True				
ANR	1181833	ParameterType	MinMaxLen *		1181814	0					
ANR	1181834	Identifier	mml		1181814	1					
ANR	1181835	Parameter	OnigDistance min	4055:24:91213:91228	1181814	1	True				
ANR	1181836	ParameterType	OnigDistance		1181814	0					
ANR	1181837	Identifier	min		1181814	1					
ANR	1181838	Parameter	OnigDistance max	4055:42:91231:91246	1181814	2	True				
ANR	1181839	ParameterType	OnigDistance		1181814	0					
ANR	1181840	Identifier	max		1181814	1					
ANR	1181841	CFGEntryNode	ENTRY		1181814		True				
ANR	1181842	CFGExitNode	EXIT		1181814		True				
ANR	1181843	Symbol	min		1181814						
ANR	1181844	Symbol	max		1181814						
ANR	1181845	Symbol	mml -> min		1181814						
ANR	1181846	Symbol	* mml		1181814						
ANR	1181847	Symbol	mml -> max		1181814						
ANR	1181848	Symbol	mml		1181814						
ANR	1181849	Function	clear_mml	4061:0:91290:91357							
ANR	1181850	FunctionDef	clear_mml (MinMaxLen * mml)		1181849	0					
ANR	1181851	CompoundStatement		4063:0:91328:91357	1181849	0					
ANR	1181852	ExpressionStatement	mml -> min = mml -> max = 0	4064:2:91332:91355	1181849	0	True				
ANR	1181853	AssignmentExpression	mml -> min = mml -> max = 0		1181849	0		=			
ANR	1181854	PtrMemberAccess	mml -> min		1181849	0					
ANR	1181855	Identifier	mml		1181849	0					
ANR	1181856	Identifier	min		1181849	1					
ANR	1181857	AssignmentExpression	mml -> max = 0		1181849	1		=			
ANR	1181858	PtrMemberAccess	mml -> max		1181849	0					
ANR	1181859	Identifier	mml		1181849	0					
ANR	1181860	Identifier	max		1181849	1					
ANR	1181861	PrimaryExpression	0		1181849	1					
ANR	1181862	ReturnType	static void		1181849	1					
ANR	1181863	Identifier	clear_mml		1181849	2					
ANR	1181864	ParameterList	MinMaxLen * mml		1181849	3					
ANR	1181865	Parameter	MinMaxLen * mml	4062:10:91312:91325	1181849	0	True				
ANR	1181866	ParameterType	MinMaxLen *		1181849	0					
ANR	1181867	Identifier	mml		1181849	1					
ANR	1181868	CFGEntryNode	ENTRY		1181849		True				
ANR	1181869	CFGExitNode	EXIT		1181849		True				
ANR	1181870	Symbol	mml -> min		1181849						
ANR	1181871	Symbol	* mml		1181849						
ANR	1181872	Symbol	mml -> max		1181849						
ANR	1181873	Symbol	mml		1181849						
ANR	1181874	Function	copy_mml	4067:0:91360:91461							
ANR	1181875	FunctionDef	"copy_mml (MinMaxLen * to , MinMaxLen * from)"		1181874	0					
ANR	1181876	CompoundStatement		4069:0:91413:91461	1181874	0					
ANR	1181877	ExpressionStatement	to -> min = from -> min	4070:2:91417:91436	1181874	0	True				
ANR	1181878	AssignmentExpression	to -> min = from -> min		1181874	0		=			
ANR	1181879	PtrMemberAccess	to -> min		1181874	0					
ANR	1181880	Identifier	to		1181874	0					
ANR	1181881	Identifier	min		1181874	1					
ANR	1181882	PtrMemberAccess	from -> min		1181874	1					
ANR	1181883	Identifier	from		1181874	0					
ANR	1181884	Identifier	min		1181874	1					
ANR	1181885	ExpressionStatement	to -> max = from -> max	4071:2:91440:91459	1181874	1	True				
ANR	1181886	AssignmentExpression	to -> max = from -> max		1181874	0		=			
ANR	1181887	PtrMemberAccess	to -> max		1181874	0					
ANR	1181888	Identifier	to		1181874	0					
ANR	1181889	Identifier	max		1181874	1					
ANR	1181890	PtrMemberAccess	from -> max		1181874	1					
ANR	1181891	Identifier	from		1181874	0					
ANR	1181892	Identifier	max		1181874	1					
ANR	1181893	ReturnType	static void		1181874	1					
ANR	1181894	Identifier	copy_mml		1181874	2					
ANR	1181895	ParameterList	"MinMaxLen * to , MinMaxLen * from"		1181874	3					
ANR	1181896	Parameter	MinMaxLen * to	4068:9:91381:91393	1181874	0	True				
ANR	1181897	ParameterType	MinMaxLen *		1181874	0					
ANR	1181898	Identifier	to		1181874	1					
ANR	1181899	Parameter	MinMaxLen * from	4068:24:91396:91410	1181874	1	True				
ANR	1181900	ParameterType	MinMaxLen *		1181874	0					
ANR	1181901	Identifier	from		1181874	1					
ANR	1181902	CFGEntryNode	ENTRY		1181874		True				
ANR	1181903	CFGExitNode	EXIT		1181874		True				
ANR	1181904	Symbol	from -> max		1181874						
ANR	1181905	Symbol	from -> min		1181874						
ANR	1181906	Symbol	* to		1181874						
ANR	1181907	Symbol	to -> min		1181874						
ANR	1181908	Symbol	from		1181874						
ANR	1181909	Symbol	to -> max		1181874						
ANR	1181910	Symbol	to		1181874						
ANR	1181911	Symbol	* from		1181874						
ANR	1181912	Function	add_mml	4074:0:91464:91610							
ANR	1181913	FunctionDef	"add_mml (MinMaxLen * to , MinMaxLen * from)"		1181912	0					
ANR	1181914	CompoundStatement		4076:0:91516:91610	1181912	0					
ANR	1181915	ExpressionStatement	"to -> min = distance_add ( to -> min , from -> min )"	4077:2:91520:91562	1181912	0	True				
ANR	1181916	AssignmentExpression	"to -> min = distance_add ( to -> min , from -> min )"		1181912	0		=			
ANR	1181917	PtrMemberAccess	to -> min		1181912	0					
ANR	1181918	Identifier	to		1181912	0					
ANR	1181919	Identifier	min		1181912	1					
ANR	1181920	CallExpression	"distance_add ( to -> min , from -> min )"		1181912	1					
ANR	1181921	Callee	distance_add		1181912	0					
ANR	1181922	Identifier	distance_add		1181912	0					
ANR	1181923	ArgumentList	to -> min		1181912	1					
ANR	1181924	Argument	to -> min		1181912	0					
ANR	1181925	PtrMemberAccess	to -> min		1181912	0					
ANR	1181926	Identifier	to		1181912	0					
ANR	1181927	Identifier	min		1181912	1					
ANR	1181928	Argument	from -> min		1181912	1					
ANR	1181929	PtrMemberAccess	from -> min		1181912	0					
ANR	1181930	Identifier	from		1181912	0					
ANR	1181931	Identifier	min		1181912	1					
ANR	1181932	ExpressionStatement	"to -> max = distance_add ( to -> max , from -> max )"	4078:2:91566:91608	1181912	1	True				
ANR	1181933	AssignmentExpression	"to -> max = distance_add ( to -> max , from -> max )"		1181912	0		=			
ANR	1181934	PtrMemberAccess	to -> max		1181912	0					
ANR	1181935	Identifier	to		1181912	0					
ANR	1181936	Identifier	max		1181912	1					
ANR	1181937	CallExpression	"distance_add ( to -> max , from -> max )"		1181912	1					
ANR	1181938	Callee	distance_add		1181912	0					
ANR	1181939	Identifier	distance_add		1181912	0					
ANR	1181940	ArgumentList	to -> max		1181912	1					
ANR	1181941	Argument	to -> max		1181912	0					
ANR	1181942	PtrMemberAccess	to -> max		1181912	0					
ANR	1181943	Identifier	to		1181912	0					
ANR	1181944	Identifier	max		1181912	1					
ANR	1181945	Argument	from -> max		1181912	1					
ANR	1181946	PtrMemberAccess	from -> max		1181912	0					
ANR	1181947	Identifier	from		1181912	0					
ANR	1181948	Identifier	max		1181912	1					
ANR	1181949	ReturnType	static void		1181912	1					
ANR	1181950	Identifier	add_mml		1181912	2					
ANR	1181951	ParameterList	"MinMaxLen * to , MinMaxLen * from"		1181912	3					
ANR	1181952	Parameter	MinMaxLen * to	4075:8:91484:91496	1181912	0	True				
ANR	1181953	ParameterType	MinMaxLen *		1181912	0					
ANR	1181954	Identifier	to		1181912	1					
ANR	1181955	Parameter	MinMaxLen * from	4075:23:91499:91513	1181912	1	True				
ANR	1181956	ParameterType	MinMaxLen *		1181912	0					
ANR	1181957	Identifier	from		1181912	1					
ANR	1181958	CFGEntryNode	ENTRY		1181912		True				
ANR	1181959	CFGExitNode	EXIT		1181912		True				
ANR	1181960	Symbol	from -> max		1181912						
ANR	1181961	Symbol	from -> min		1181912						
ANR	1181962	Symbol	* to		1181912						
ANR	1181963	Symbol	to -> min		1181912						
ANR	1181964	Symbol	from		1181912						
ANR	1181965	Symbol	distance_add		1181912						
ANR	1181966	Symbol	to -> max		1181912						
ANR	1181967	Symbol	to		1181912						
ANR	1181968	Symbol	* from		1181912						
ANR	1181969	Function	add_len_mml	4082:0:91619:91758							
ANR	1181970	FunctionDef	"add_len_mml (MinMaxLen * to , OnigDistance len)"		1181969	0					
ANR	1181971	CompoundStatement		4084:0:91676:91758	1181969	0					
ANR	1181972	ExpressionStatement	"to -> min = distance_add ( to -> min , len )"	4085:2:91680:91716	1181969	0	True				
ANR	1181973	AssignmentExpression	"to -> min = distance_add ( to -> min , len )"		1181969	0		=			
ANR	1181974	PtrMemberAccess	to -> min		1181969	0					
ANR	1181975	Identifier	to		1181969	0					
ANR	1181976	Identifier	min		1181969	1					
ANR	1181977	CallExpression	"distance_add ( to -> min , len )"		1181969	1					
ANR	1181978	Callee	distance_add		1181969	0					
ANR	1181979	Identifier	distance_add		1181969	0					
ANR	1181980	ArgumentList	to -> min		1181969	1					
ANR	1181981	Argument	to -> min		1181969	0					
ANR	1181982	PtrMemberAccess	to -> min		1181969	0					
ANR	1181983	Identifier	to		1181969	0					
ANR	1181984	Identifier	min		1181969	1					
ANR	1181985	Argument	len		1181969	1					
ANR	1181986	Identifier	len		1181969	0					
ANR	1181987	ExpressionStatement	"to -> max = distance_add ( to -> max , len )"	4086:2:91720:91756	1181969	1	True				
ANR	1181988	AssignmentExpression	"to -> max = distance_add ( to -> max , len )"		1181969	0		=			
ANR	1181989	PtrMemberAccess	to -> max		1181969	0					
ANR	1181990	Identifier	to		1181969	0					
ANR	1181991	Identifier	max		1181969	1					
ANR	1181992	CallExpression	"distance_add ( to -> max , len )"		1181969	1					
ANR	1181993	Callee	distance_add		1181969	0					
ANR	1181994	Identifier	distance_add		1181969	0					
ANR	1181995	ArgumentList	to -> max		1181969	1					
ANR	1181996	Argument	to -> max		1181969	0					
ANR	1181997	PtrMemberAccess	to -> max		1181969	0					
ANR	1181998	Identifier	to		1181969	0					
ANR	1181999	Identifier	max		1181969	1					
ANR	1182000	Argument	len		1181969	1					
ANR	1182001	Identifier	len		1181969	0					
ANR	1182002	ReturnType	static void		1181969	1					
ANR	1182003	Identifier	add_len_mml		1181969	2					
ANR	1182004	ParameterList	"MinMaxLen * to , OnigDistance len"		1181969	3					
ANR	1182005	Parameter	MinMaxLen * to	4083:12:91643:91655	1181969	0	True				
ANR	1182006	ParameterType	MinMaxLen *		1181969	0					
ANR	1182007	Identifier	to		1181969	1					
ANR	1182008	Parameter	OnigDistance len	4083:27:91658:91673	1181969	1	True				
ANR	1182009	ParameterType	OnigDistance		1181969	0					
ANR	1182010	Identifier	len		1181969	1					
ANR	1182011	CFGEntryNode	ENTRY		1181969		True				
ANR	1182012	CFGExitNode	EXIT		1181969		True				
ANR	1182013	Symbol	* to		1181969						
ANR	1182014	Symbol	len		1181969						
ANR	1182015	Symbol	to -> min		1181969						
ANR	1182016	Symbol	distance_add		1181969						
ANR	1182017	Symbol	to -> max		1181969						
ANR	1182018	Symbol	to		1181969						
ANR	1182019	Function	alt_merge_mml	4090:0:91768:91924							
ANR	1182020	FunctionDef	"alt_merge_mml (MinMaxLen * to , MinMaxLen * from)"		1182019	0					
ANR	1182021	CompoundStatement		4092:0:91826:91924	1182019	0					
ANR	1182022	IfStatement	if ( to -> min > from -> min )		1182019	0					
ANR	1182023	Condition	to -> min > from -> min	4093:6:91834:91852	1182019	0	True				
ANR	1182024	RelationalExpression	to -> min > from -> min		1182019	0		>			
ANR	1182025	PtrMemberAccess	to -> min		1182019	0					
ANR	1182026	Identifier	to		1182019	0					
ANR	1182027	Identifier	min		1182019	1					
ANR	1182028	PtrMemberAccess	from -> min		1182019	1					
ANR	1182029	Identifier	from		1182019	0					
ANR	1182030	Identifier	min		1182019	1					
ANR	1182031	ExpressionStatement	to -> min = from -> min	4093:27:91855:91874	1182019	1	True				
ANR	1182032	AssignmentExpression	to -> min = from -> min		1182019	0		=			
ANR	1182033	PtrMemberAccess	to -> min		1182019	0					
ANR	1182034	Identifier	to		1182019	0					
ANR	1182035	Identifier	min		1182019	1					
ANR	1182036	PtrMemberAccess	from -> min		1182019	1					
ANR	1182037	Identifier	from		1182019	0					
ANR	1182038	Identifier	min		1182019	1					
ANR	1182039	IfStatement	if ( to -> max < from -> max )		1182019	1					
ANR	1182040	Condition	to -> max < from -> max	4094:6:91882:91900	1182019	0	True				
ANR	1182041	RelationalExpression	to -> max < from -> max		1182019	0		<			
ANR	1182042	PtrMemberAccess	to -> max		1182019	0					
ANR	1182043	Identifier	to		1182019	0					
ANR	1182044	Identifier	max		1182019	1					
ANR	1182045	PtrMemberAccess	from -> max		1182019	1					
ANR	1182046	Identifier	from		1182019	0					
ANR	1182047	Identifier	max		1182019	1					
ANR	1182048	ExpressionStatement	to -> max = from -> max	4094:27:91903:91922	1182019	1	True				
ANR	1182049	AssignmentExpression	to -> max = from -> max		1182019	0		=			
ANR	1182050	PtrMemberAccess	to -> max		1182019	0					
ANR	1182051	Identifier	to		1182019	0					
ANR	1182052	Identifier	max		1182019	1					
ANR	1182053	PtrMemberAccess	from -> max		1182019	1					
ANR	1182054	Identifier	from		1182019	0					
ANR	1182055	Identifier	max		1182019	1					
ANR	1182056	ReturnType	static void		1182019	1					
ANR	1182057	Identifier	alt_merge_mml		1182019	2					
ANR	1182058	ParameterList	"MinMaxLen * to , MinMaxLen * from"		1182019	3					
ANR	1182059	Parameter	MinMaxLen * to	4091:14:91794:91806	1182019	0	True				
ANR	1182060	ParameterType	MinMaxLen *		1182019	0					
ANR	1182061	Identifier	to		1182019	1					
ANR	1182062	Parameter	MinMaxLen * from	4091:29:91809:91823	1182019	1	True				
ANR	1182063	ParameterType	MinMaxLen *		1182019	0					
ANR	1182064	Identifier	from		1182019	1					
ANR	1182065	CFGEntryNode	ENTRY		1182019		True				
ANR	1182066	CFGExitNode	EXIT		1182019		True				
ANR	1182067	Symbol	from -> max		1182019						
ANR	1182068	Symbol	from -> min		1182019						
ANR	1182069	Symbol	* to		1182019						
ANR	1182070	Symbol	to -> min		1182019						
ANR	1182071	Symbol	from		1182019						
ANR	1182072	Symbol	to -> max		1182019						
ANR	1182073	Symbol	to		1182019						
ANR	1182074	Symbol	* from		1182019						
ANR	1182075	Function	copy_opt_env	4097:0:91927:91995							
ANR	1182076	FunctionDef	"copy_opt_env (OptEnv * to , OptEnv * from)"		1182075	0					
ANR	1182077	CompoundStatement		4099:0:91978:91995	1182075	0					
ANR	1182078	ExpressionStatement	* to = * from	4100:2:91982:91993	1182075	0	True				
ANR	1182079	AssignmentExpression	* to = * from		1182075	0		=			
ANR	1182080	UnaryOperationExpression	* to		1182075	0					
ANR	1182081	UnaryOperator	*		1182075	0					
ANR	1182082	Identifier	to		1182075	1					
ANR	1182083	UnaryOperationExpression	* from		1182075	1					
ANR	1182084	UnaryOperator	*		1182075	0					
ANR	1182085	Identifier	from		1182075	1					
ANR	1182086	ReturnType	static void		1182075	1					
ANR	1182087	Identifier	copy_opt_env		1182075	2					
ANR	1182088	ParameterList	"OptEnv * to , OptEnv * from"		1182075	3					
ANR	1182089	Parameter	OptEnv * to	4098:13:91952:91961	1182075	0	True				
ANR	1182090	ParameterType	OptEnv *		1182075	0					
ANR	1182091	Identifier	to		1182075	1					
ANR	1182092	Parameter	OptEnv * from	4098:25:91964:91975	1182075	1	True				
ANR	1182093	ParameterType	OptEnv *		1182075	0					
ANR	1182094	Identifier	from		1182075	1					
ANR	1182095	CFGEntryNode	ENTRY		1182075		True				
ANR	1182096	CFGExitNode	EXIT		1182075		True				
ANR	1182097	Symbol	* to		1182075						
ANR	1182098	Symbol	from		1182075						
ANR	1182099	Symbol	to		1182075						
ANR	1182100	Symbol	* from		1182075						
ANR	1182101	Function	clear_opt_anc_info	4103:0:91998:92098							
ANR	1182102	FunctionDef	clear_opt_anc_info (OptAncInfo * anc)		1182101	0					
ANR	1182103	CompoundStatement		4105:0:92046:92098	1182101	0					
ANR	1182104	ExpressionStatement	anc -> left_anchor = 0	4106:2:92050:92071	1182101	0	True				
ANR	1182105	AssignmentExpression	anc -> left_anchor = 0		1182101	0		=			
ANR	1182106	PtrMemberAccess	anc -> left_anchor		1182101	0					
ANR	1182107	Identifier	anc		1182101	0					
ANR	1182108	Identifier	left_anchor		1182101	1					
ANR	1182109	PrimaryExpression	0		1182101	1					
ANR	1182110	ExpressionStatement	anc -> right_anchor = 0	4107:2:92075:92096	1182101	1	True				
ANR	1182111	AssignmentExpression	anc -> right_anchor = 0		1182101	0		=			
ANR	1182112	PtrMemberAccess	anc -> right_anchor		1182101	0					
ANR	1182113	Identifier	anc		1182101	0					
ANR	1182114	Identifier	right_anchor		1182101	1					
ANR	1182115	PrimaryExpression	0		1182101	1					
ANR	1182116	ReturnType	static void		1182101	1					
ANR	1182117	Identifier	clear_opt_anc_info		1182101	2					
ANR	1182118	ParameterList	OptAncInfo * anc		1182101	3					
ANR	1182119	Parameter	OptAncInfo * anc	4104:19:92029:92043	1182101	0	True				
ANR	1182120	ParameterType	OptAncInfo *		1182101	0					
ANR	1182121	Identifier	anc		1182101	1					
ANR	1182122	CFGEntryNode	ENTRY		1182101		True				
ANR	1182123	CFGExitNode	EXIT		1182101		True				
ANR	1182124	Symbol	anc -> left_anchor		1182101						
ANR	1182125	Symbol	anc		1182101						
ANR	1182126	Symbol	anc -> right_anchor		1182101						
ANR	1182127	Symbol	* anc		1182101						
ANR	1182128	Function	copy_opt_anc_info	4110:0:92101:92182							
ANR	1182129	FunctionDef	"copy_opt_anc_info (OptAncInfo * to , OptAncInfo * from)"		1182128	0					
ANR	1182130	CompoundStatement		4112:0:92165:92182	1182128	0					
ANR	1182131	ExpressionStatement	* to = * from	4113:2:92169:92180	1182128	0	True				
ANR	1182132	AssignmentExpression	* to = * from		1182128	0		=			
ANR	1182133	UnaryOperationExpression	* to		1182128	0					
ANR	1182134	UnaryOperator	*		1182128	0					
ANR	1182135	Identifier	to		1182128	1					
ANR	1182136	UnaryOperationExpression	* from		1182128	1					
ANR	1182137	UnaryOperator	*		1182128	0					
ANR	1182138	Identifier	from		1182128	1					
ANR	1182139	ReturnType	static void		1182128	1					
ANR	1182140	Identifier	copy_opt_anc_info		1182128	2					
ANR	1182141	ParameterList	"OptAncInfo * to , OptAncInfo * from"		1182128	3					
ANR	1182142	Parameter	OptAncInfo * to	4111:18:92131:92144	1182128	0	True				
ANR	1182143	ParameterType	OptAncInfo *		1182128	0					
ANR	1182144	Identifier	to		1182128	1					
ANR	1182145	Parameter	OptAncInfo * from	4111:34:92147:92162	1182128	1	True				
ANR	1182146	ParameterType	OptAncInfo *		1182128	0					
ANR	1182147	Identifier	from		1182128	1					
ANR	1182148	CFGEntryNode	ENTRY		1182128		True				
ANR	1182149	CFGExitNode	EXIT		1182128		True				
ANR	1182150	Symbol	* to		1182128						
ANR	1182151	Symbol	from		1182128						
ANR	1182152	Symbol	to		1182128						
ANR	1182153	Symbol	* from		1182128						
ANR	1182154	Function	concat_opt_anc_info	4116:0:92185:92576							
ANR	1182155	FunctionDef	"concat_opt_anc_info (OptAncInfo * to , OptAncInfo * left , OptAncInfo * right , OnigDistance left_len , OnigDistance right_len)"		1182154	0					
ANR	1182156	CompoundStatement		4119:0:92323:92576	1182154	0					
ANR	1182157	ExpressionStatement	clear_opt_anc_info ( to )	4120:2:92327:92349	1182154	0	True				
ANR	1182158	CallExpression	clear_opt_anc_info ( to )		1182154	0					
ANR	1182159	Callee	clear_opt_anc_info		1182154	0					
ANR	1182160	Identifier	clear_opt_anc_info		1182154	0					
ANR	1182161	ArgumentList	to		1182154	1					
ANR	1182162	Argument	to		1182154	0					
ANR	1182163	Identifier	to		1182154	0					
ANR	1182164	ExpressionStatement	to -> left_anchor = left -> left_anchor	4122:2:92354:92389	1182154	1	True				
ANR	1182165	AssignmentExpression	to -> left_anchor = left -> left_anchor		1182154	0		=			
ANR	1182166	PtrMemberAccess	to -> left_anchor		1182154	0					
ANR	1182167	Identifier	to		1182154	0					
ANR	1182168	Identifier	left_anchor		1182154	1					
ANR	1182169	PtrMemberAccess	left -> left_anchor		1182154	1					
ANR	1182170	Identifier	left		1182154	0					
ANR	1182171	Identifier	left_anchor		1182154	1					
ANR	1182172	IfStatement	if ( left_len == 0 )		1182154	2					
ANR	1182173	Condition	left_len == 0	4123:6:92397:92409	1182154	0	True				
ANR	1182174	EqualityExpression	left_len == 0		1182154	0		==			
ANR	1182175	Identifier	left_len		1182154	0					
ANR	1182176	PrimaryExpression	0		1182154	1					
ANR	1182177	CompoundStatement		5:21:88:88	1182154	1					
ANR	1182178	ExpressionStatement	to -> left_anchor |= right -> left_anchor	4124:4:92418:92455	1182154	0	True				
ANR	1182179	AssignmentExpression	to -> left_anchor |= right -> left_anchor		1182154	0		|=			
ANR	1182180	PtrMemberAccess	to -> left_anchor		1182154	0					
ANR	1182181	Identifier	to		1182154	0					
ANR	1182182	Identifier	left_anchor		1182154	1					
ANR	1182183	PtrMemberAccess	right -> left_anchor		1182154	1					
ANR	1182184	Identifier	right		1182154	0					
ANR	1182185	Identifier	left_anchor		1182154	1					
ANR	1182186	ExpressionStatement	to -> right_anchor = right -> right_anchor	4127:2:92464:92502	1182154	3	True				
ANR	1182187	AssignmentExpression	to -> right_anchor = right -> right_anchor		1182154	0		=			
ANR	1182188	PtrMemberAccess	to -> right_anchor		1182154	0					
ANR	1182189	Identifier	to		1182154	0					
ANR	1182190	Identifier	right_anchor		1182154	1					
ANR	1182191	PtrMemberAccess	right -> right_anchor		1182154	1					
ANR	1182192	Identifier	right		1182154	0					
ANR	1182193	Identifier	right_anchor		1182154	1					
ANR	1182194	IfStatement	if ( right_len == 0 )		1182154	4					
ANR	1182195	Condition	right_len == 0	4128:6:92510:92523	1182154	0	True				
ANR	1182196	EqualityExpression	right_len == 0		1182154	0		==			
ANR	1182197	Identifier	right_len		1182154	0					
ANR	1182198	PrimaryExpression	0		1182154	1					
ANR	1182199	CompoundStatement		10:22:202:202	1182154	1					
ANR	1182200	ExpressionStatement	to -> right_anchor |= left -> right_anchor	4129:4:92532:92570	1182154	0	True				
ANR	1182201	AssignmentExpression	to -> right_anchor |= left -> right_anchor		1182154	0		|=			
ANR	1182202	PtrMemberAccess	to -> right_anchor		1182154	0					
ANR	1182203	Identifier	to		1182154	0					
ANR	1182204	Identifier	right_anchor		1182154	1					
ANR	1182205	PtrMemberAccess	left -> right_anchor		1182154	1					
ANR	1182206	Identifier	left		1182154	0					
ANR	1182207	Identifier	right_anchor		1182154	1					
ANR	1182208	ReturnType	static void		1182154	1					
ANR	1182209	Identifier	concat_opt_anc_info		1182154	2					
ANR	1182210	ParameterList	"OptAncInfo * to , OptAncInfo * left , OptAncInfo * right , OnigDistance left_len , OnigDistance right_len"		1182154	3					
ANR	1182211	Parameter	OptAncInfo * to	4117:20:92217:92230	1182154	0	True				
ANR	1182212	ParameterType	OptAncInfo *		1182154	0					
ANR	1182213	Identifier	to		1182154	1					
ANR	1182214	Parameter	OptAncInfo * left	4117:36:92233:92248	1182154	1	True				
ANR	1182215	ParameterType	OptAncInfo *		1182154	0					
ANR	1182216	Identifier	left		1182154	1					
ANR	1182217	Parameter	OptAncInfo * right	4117:54:92251:92267	1182154	2	True				
ANR	1182218	ParameterType	OptAncInfo *		1182154	0					
ANR	1182219	Identifier	right		1182154	1					
ANR	1182220	Parameter	OnigDistance left_len	4118:6:92276:92296	1182154	3	True				
ANR	1182221	ParameterType	OnigDistance		1182154	0					
ANR	1182222	Identifier	left_len		1182154	1					
ANR	1182223	Parameter	OnigDistance right_len	4118:29:92299:92320	1182154	4	True				
ANR	1182224	ParameterType	OnigDistance		1182154	0					
ANR	1182225	Identifier	right_len		1182154	1					
ANR	1182226	CFGEntryNode	ENTRY		1182154		True				
ANR	1182227	CFGExitNode	EXIT		1182154		True				
ANR	1182228	Symbol	* to		1182154						
ANR	1182229	Symbol	to -> left_anchor		1182154						
ANR	1182230	Symbol	to -> right_anchor		1182154						
ANR	1182231	Symbol	right -> right_anchor		1182154						
ANR	1182232	Symbol	right		1182154						
ANR	1182233	Symbol	right_len		1182154						
ANR	1182234	Symbol	right -> left_anchor		1182154						
ANR	1182235	Symbol	left_len		1182154						
ANR	1182236	Symbol	left -> left_anchor		1182154						
ANR	1182237	Symbol	left -> right_anchor		1182154						
ANR	1182238	Symbol	left		1182154						
ANR	1182239	Symbol	to		1182154						
ANR	1182240	Symbol	* left		1182154						
ANR	1182241	Symbol	* right		1182154						
ANR	1182242	Function	is_left_anchor	4133:0:92579:92798							
ANR	1182243	FunctionDef	is_left_anchor (int anc)		1182242	0					
ANR	1182244	CompoundStatement		4135:0:92614:92798	1182242	0					
ANR	1182245	IfStatement	if ( anc == ANCHOR_END_BUF || anc == ANCHOR_SEMI_END_BUF || anc == ANCHOR_END_LINE || anc == ANCHOR_PREC_READ || anc == ANCHOR_PREC_READ_NOT )		1182242	0					
ANR	1182246	Condition	anc == ANCHOR_END_BUF || anc == ANCHOR_SEMI_END_BUF || anc == ANCHOR_END_LINE || anc == ANCHOR_PREC_READ || anc == ANCHOR_PREC_READ_NOT	4136:6:92622:92768	1182242	0	True				
ANR	1182247	OrExpression	anc == ANCHOR_END_BUF || anc == ANCHOR_SEMI_END_BUF || anc == ANCHOR_END_LINE || anc == ANCHOR_PREC_READ || anc == ANCHOR_PREC_READ_NOT		1182242	0		||			
ANR	1182248	EqualityExpression	anc == ANCHOR_END_BUF		1182242	0		==			
ANR	1182249	Identifier	anc		1182242	0					
ANR	1182250	Identifier	ANCHOR_END_BUF		1182242	1					
ANR	1182251	OrExpression	anc == ANCHOR_SEMI_END_BUF || anc == ANCHOR_END_LINE || anc == ANCHOR_PREC_READ || anc == ANCHOR_PREC_READ_NOT		1182242	1		||			
ANR	1182252	EqualityExpression	anc == ANCHOR_SEMI_END_BUF		1182242	0		==			
ANR	1182253	Identifier	anc		1182242	0					
ANR	1182254	Identifier	ANCHOR_SEMI_END_BUF		1182242	1					
ANR	1182255	OrExpression	anc == ANCHOR_END_LINE || anc == ANCHOR_PREC_READ || anc == ANCHOR_PREC_READ_NOT		1182242	1		||			
ANR	1182256	EqualityExpression	anc == ANCHOR_END_LINE		1182242	0		==			
ANR	1182257	Identifier	anc		1182242	0					
ANR	1182258	Identifier	ANCHOR_END_LINE		1182242	1					
ANR	1182259	OrExpression	anc == ANCHOR_PREC_READ || anc == ANCHOR_PREC_READ_NOT		1182242	1		||			
ANR	1182260	EqualityExpression	anc == ANCHOR_PREC_READ		1182242	0		==			
ANR	1182261	Identifier	anc		1182242	0					
ANR	1182262	Identifier	ANCHOR_PREC_READ		1182242	1					
ANR	1182263	EqualityExpression	anc == ANCHOR_PREC_READ_NOT		1182242	1		==			
ANR	1182264	Identifier	anc		1182242	0					
ANR	1182265	Identifier	ANCHOR_PREC_READ_NOT		1182242	1					
ANR	1182266	ReturnStatement	return 0 ;	4139:4:92775:92783	1182242	1	True				
ANR	1182267	PrimaryExpression	0		1182242	0					
ANR	1182268	ReturnStatement	return 1 ;	4141:2:92788:92796	1182242	1	True				
ANR	1182269	PrimaryExpression	1		1182242	0					
ANR	1182270	ReturnType	static int		1182242	1					
ANR	1182271	Identifier	is_left_anchor		1182242	2					
ANR	1182272	ParameterList	int anc		1182242	3					
ANR	1182273	Parameter	int anc	4134:15:92605:92611	1182242	0	True				
ANR	1182274	ParameterType	int		1182242	0					
ANR	1182275	Identifier	anc		1182242	1					
ANR	1182276	CFGEntryNode	ENTRY		1182242		True				
ANR	1182277	CFGExitNode	EXIT		1182242		True				
ANR	1182278	Symbol	ANCHOR_PREC_READ_NOT		1182242						
ANR	1182279	Symbol	ANCHOR_END_BUF		1182242						
ANR	1182280	Symbol	ANCHOR_SEMI_END_BUF		1182242						
ANR	1182281	Symbol	anc		1182242						
ANR	1182282	Symbol	ANCHOR_END_LINE		1182242						
ANR	1182283	Symbol	ANCHOR_PREC_READ		1182242						
ANR	1182284	Function	is_set_opt_anc_info	4144:0:92801:92956							
ANR	1182285	FunctionDef	"is_set_opt_anc_info (OptAncInfo * to , int anc)"		1182284	0					
ANR	1182286	CompoundStatement		4146:0:92857:92956	1182284	0					
ANR	1182287	IfStatement	if ( ( to -> left_anchor & anc ) != 0 )		1182284	0					
ANR	1182288	Condition	( to -> left_anchor & anc ) != 0	4147:6:92865:92892	1182284	0	True				
ANR	1182289	EqualityExpression	( to -> left_anchor & anc ) != 0		1182284	0		!=			
ANR	1182290	BitAndExpression	to -> left_anchor & anc		1182284	0		&			
ANR	1182291	PtrMemberAccess	to -> left_anchor		1182284	0					
ANR	1182292	Identifier	to		1182284	0					
ANR	1182293	Identifier	left_anchor		1182284	1					
ANR	1182294	Identifier	anc		1182284	1					
ANR	1182295	PrimaryExpression	0		1182284	1					
ANR	1182296	ReturnStatement	return 1 ;	4147:36:92895:92903	1182284	1	True				
ANR	1182297	PrimaryExpression	1		1182284	0					
ANR	1182298	ReturnStatement	return ( ( to -> right_anchor & anc ) != 0 ? 1 : 0 ) ;	4149:2:92908:92954	1182284	1	True				
ANR	1182299	ConditionalExpression	( to -> right_anchor & anc ) != 0 ? 1 : 0		1182284	0					
ANR	1182300	Condition	( to -> right_anchor & anc ) != 0		1182284	0					
ANR	1182301	EqualityExpression	( to -> right_anchor & anc ) != 0		1182284	0		!=			
ANR	1182302	BitAndExpression	to -> right_anchor & anc		1182284	0		&			
ANR	1182303	PtrMemberAccess	to -> right_anchor		1182284	0					
ANR	1182304	Identifier	to		1182284	0					
ANR	1182305	Identifier	right_anchor		1182284	1					
ANR	1182306	Identifier	anc		1182284	1					
ANR	1182307	PrimaryExpression	0		1182284	1					
ANR	1182308	PrimaryExpression	1		1182284	1					
ANR	1182309	PrimaryExpression	0		1182284	2					
ANR	1182310	ReturnType	static int		1182284	1					
ANR	1182311	Identifier	is_set_opt_anc_info		1182284	2					
ANR	1182312	ParameterList	"OptAncInfo * to , int anc"		1182284	3					
ANR	1182313	Parameter	OptAncInfo * to	4145:20:92832:92845	1182284	0	True				
ANR	1182314	ParameterType	OptAncInfo *		1182284	0					
ANR	1182315	Identifier	to		1182284	1					
ANR	1182316	Parameter	int anc	4145:36:92848:92854	1182284	1	True				
ANR	1182317	ParameterType	int		1182284	0					
ANR	1182318	Identifier	anc		1182284	1					
ANR	1182319	CFGEntryNode	ENTRY		1182284		True				
ANR	1182320	CFGExitNode	EXIT		1182284		True				
ANR	1182321	Symbol	* to		1182284						
ANR	1182322	Symbol	to -> left_anchor		1182284						
ANR	1182323	Symbol	to -> right_anchor		1182284						
ANR	1182324	Symbol	anc		1182284						
ANR	1182325	Symbol	to		1182284						
ANR	1182326	Function	add_opt_anc_info	4152:0:92959:93106							
ANR	1182327	FunctionDef	"add_opt_anc_info (OptAncInfo * to , int anc)"		1182326	0					
ANR	1182328	CompoundStatement		4154:0:93013:93106	1182326	0					
ANR	1182329	IfStatement	if ( is_left_anchor ( anc ) )		1182326	0					
ANR	1182330	Condition	is_left_anchor ( anc )	4155:6:93021:93039	1182326	0	True				
ANR	1182331	CallExpression	is_left_anchor ( anc )		1182326	0					
ANR	1182332	Callee	is_left_anchor		1182326	0					
ANR	1182333	Identifier	is_left_anchor		1182326	0					
ANR	1182334	ArgumentList	anc		1182326	1					
ANR	1182335	Argument	anc		1182326	0					
ANR	1182336	Identifier	anc		1182326	0					
ANR	1182337	ExpressionStatement	to -> left_anchor |= anc	4156:4:93046:93068	1182326	1	True				
ANR	1182338	AssignmentExpression	to -> left_anchor |= anc		1182326	0		|=			
ANR	1182339	PtrMemberAccess	to -> left_anchor		1182326	0					
ANR	1182340	Identifier	to		1182326	0					
ANR	1182341	Identifier	left_anchor		1182326	1					
ANR	1182342	Identifier	anc		1182326	1					
ANR	1182343	ElseStatement	else		1182326	0					
ANR	1182344	ExpressionStatement	to -> right_anchor |= anc	4158:4:93081:93104	1182326	0	True				
ANR	1182345	AssignmentExpression	to -> right_anchor |= anc		1182326	0		|=			
ANR	1182346	PtrMemberAccess	to -> right_anchor		1182326	0					
ANR	1182347	Identifier	to		1182326	0					
ANR	1182348	Identifier	right_anchor		1182326	1					
ANR	1182349	Identifier	anc		1182326	1					
ANR	1182350	ReturnType	static void		1182326	1					
ANR	1182351	Identifier	add_opt_anc_info		1182326	2					
ANR	1182352	ParameterList	"OptAncInfo * to , int anc"		1182326	3					
ANR	1182353	Parameter	OptAncInfo * to	4153:17:92988:93001	1182326	0	True				
ANR	1182354	ParameterType	OptAncInfo *		1182326	0					
ANR	1182355	Identifier	to		1182326	1					
ANR	1182356	Parameter	int anc	4153:33:93004:93010	1182326	1	True				
ANR	1182357	ParameterType	int		1182326	0					
ANR	1182358	Identifier	anc		1182326	1					
ANR	1182359	CFGEntryNode	ENTRY		1182326		True				
ANR	1182360	CFGExitNode	EXIT		1182326		True				
ANR	1182361	Symbol	* to		1182326						
ANR	1182362	Symbol	to -> left_anchor		1182326						
ANR	1182363	Symbol	to -> right_anchor		1182326						
ANR	1182364	Symbol	anc		1182326						
ANR	1182365	Symbol	to		1182326						
ANR	1182366	Symbol	is_left_anchor		1182326						
ANR	1182367	Function	remove_opt_anc_info	4161:0:93109:93261							
ANR	1182368	FunctionDef	"remove_opt_anc_info (OptAncInfo * to , int anc)"		1182367	0					
ANR	1182369	CompoundStatement		4163:0:93166:93261	1182367	0					
ANR	1182370	IfStatement	if ( is_left_anchor ( anc ) )		1182367	0					
ANR	1182371	Condition	is_left_anchor ( anc )	4164:6:93174:93192	1182367	0	True				
ANR	1182372	CallExpression	is_left_anchor ( anc )		1182367	0					
ANR	1182373	Callee	is_left_anchor		1182367	0					
ANR	1182374	Identifier	is_left_anchor		1182367	0					
ANR	1182375	ArgumentList	anc		1182367	1					
ANR	1182376	Argument	anc		1182367	0					
ANR	1182377	Identifier	anc		1182367	0					
ANR	1182378	ExpressionStatement	to -> left_anchor &= ~anc	4165:4:93199:93222	1182367	1	True				
ANR	1182379	AssignmentExpression	to -> left_anchor &= ~anc		1182367	0		&=			
ANR	1182380	PtrMemberAccess	to -> left_anchor		1182367	0					
ANR	1182381	Identifier	to		1182367	0					
ANR	1182382	Identifier	left_anchor		1182367	1					
ANR	1182383	Identifier	~anc		1182367	1					
ANR	1182384	ElseStatement	else		1182367	0					
ANR	1182385	ExpressionStatement	to -> right_anchor &= ~anc	4167:4:93235:93259	1182367	0	True				
ANR	1182386	AssignmentExpression	to -> right_anchor &= ~anc		1182367	0		&=			
ANR	1182387	PtrMemberAccess	to -> right_anchor		1182367	0					
ANR	1182388	Identifier	to		1182367	0					
ANR	1182389	Identifier	right_anchor		1182367	1					
ANR	1182390	Identifier	~anc		1182367	1					
ANR	1182391	ReturnType	static void		1182367	1					
ANR	1182392	Identifier	remove_opt_anc_info		1182367	2					
ANR	1182393	ParameterList	"OptAncInfo * to , int anc"		1182367	3					
ANR	1182394	Parameter	OptAncInfo * to	4162:20:93141:93154	1182367	0	True				
ANR	1182395	ParameterType	OptAncInfo *		1182367	0					
ANR	1182396	Identifier	to		1182367	1					
ANR	1182397	Parameter	int anc	4162:36:93157:93163	1182367	1	True				
ANR	1182398	ParameterType	int		1182367	0					
ANR	1182399	Identifier	anc		1182367	1					
ANR	1182400	CFGEntryNode	ENTRY		1182367		True				
ANR	1182401	CFGExitNode	EXIT		1182367		True				
ANR	1182402	Symbol	~anc		1182367						
ANR	1182403	Symbol	* to		1182367						
ANR	1182404	Symbol	to -> left_anchor		1182367						
ANR	1182405	Symbol	to -> right_anchor		1182367						
ANR	1182406	Symbol	anc		1182367						
ANR	1182407	Symbol	to		1182367						
ANR	1182408	Symbol	is_left_anchor		1182367						
ANR	1182409	Function	alt_merge_opt_anc_info	4170:0:93264:93415							
ANR	1182410	FunctionDef	"alt_merge_opt_anc_info (OptAncInfo * to , OptAncInfo * add)"		1182409	0					
ANR	1182411	CompoundStatement		4172:0:93332:93415	1182409	0					
ANR	1182412	ExpressionStatement	to -> left_anchor &= add -> left_anchor	4173:2:93336:93372	1182409	0	True				
ANR	1182413	AssignmentExpression	to -> left_anchor &= add -> left_anchor		1182409	0		&=			
ANR	1182414	PtrMemberAccess	to -> left_anchor		1182409	0					
ANR	1182415	Identifier	to		1182409	0					
ANR	1182416	Identifier	left_anchor		1182409	1					
ANR	1182417	PtrMemberAccess	add -> left_anchor		1182409	1					
ANR	1182418	Identifier	add		1182409	0					
ANR	1182419	Identifier	left_anchor		1182409	1					
ANR	1182420	ExpressionStatement	to -> right_anchor &= add -> right_anchor	4174:2:93376:93413	1182409	1	True				
ANR	1182421	AssignmentExpression	to -> right_anchor &= add -> right_anchor		1182409	0		&=			
ANR	1182422	PtrMemberAccess	to -> right_anchor		1182409	0					
ANR	1182423	Identifier	to		1182409	0					
ANR	1182424	Identifier	right_anchor		1182409	1					
ANR	1182425	PtrMemberAccess	add -> right_anchor		1182409	1					
ANR	1182426	Identifier	add		1182409	0					
ANR	1182427	Identifier	right_anchor		1182409	1					
ANR	1182428	ReturnType	static void		1182409	1					
ANR	1182429	Identifier	alt_merge_opt_anc_info		1182409	2					
ANR	1182430	ParameterList	"OptAncInfo * to , OptAncInfo * add"		1182409	3					
ANR	1182431	Parameter	OptAncInfo * to	4171:23:93299:93312	1182409	0	True				
ANR	1182432	ParameterType	OptAncInfo *		1182409	0					
ANR	1182433	Identifier	to		1182409	1					
ANR	1182434	Parameter	OptAncInfo * add	4171:39:93315:93329	1182409	1	True				
ANR	1182435	ParameterType	OptAncInfo *		1182409	0					
ANR	1182436	Identifier	add		1182409	1					
ANR	1182437	CFGEntryNode	ENTRY		1182409		True				
ANR	1182438	CFGExitNode	EXIT		1182409		True				
ANR	1182439	Symbol	add		1182409						
ANR	1182440	Symbol	add -> right_anchor		1182409						
ANR	1182441	Symbol	* to		1182409						
ANR	1182442	Symbol	* add		1182409						
ANR	1182443	Symbol	to -> left_anchor		1182409						
ANR	1182444	Symbol	to -> right_anchor		1182409						
ANR	1182445	Symbol	add -> left_anchor		1182409						
ANR	1182446	Symbol	to		1182409						
ANR	1182447	Function	is_full_opt_exact_info	4177:0:93418:93520							
ANR	1182448	FunctionDef	is_full_opt_exact_info (OptExactInfo * ex)		1182447	0					
ANR	1182449	CompoundStatement		4179:0:93470:93520	1182447	0					
ANR	1182450	ReturnStatement	return ( ex -> len >= OPT_EXACT_MAXLEN ? 1 : 0 ) ;	4180:2:93474:93518	1182447	0	True				
ANR	1182451	ConditionalExpression	ex -> len >= OPT_EXACT_MAXLEN ? 1 : 0		1182447	0					
ANR	1182452	Condition	ex -> len >= OPT_EXACT_MAXLEN		1182447	0					
ANR	1182453	RelationalExpression	ex -> len >= OPT_EXACT_MAXLEN		1182447	0		>=			
ANR	1182454	PtrMemberAccess	ex -> len		1182447	0					
ANR	1182455	Identifier	ex		1182447	0					
ANR	1182456	Identifier	len		1182447	1					
ANR	1182457	Identifier	OPT_EXACT_MAXLEN		1182447	1					
ANR	1182458	PrimaryExpression	1		1182447	1					
ANR	1182459	PrimaryExpression	0		1182447	2					
ANR	1182460	ReturnType	static int		1182447	1					
ANR	1182461	Identifier	is_full_opt_exact_info		1182447	2					
ANR	1182462	ParameterList	OptExactInfo * ex		1182447	3					
ANR	1182463	Parameter	OptExactInfo * ex	4178:23:93452:93467	1182447	0	True				
ANR	1182464	ParameterType	OptExactInfo *		1182447	0					
ANR	1182465	Identifier	ex		1182447	1					
ANR	1182466	CFGEntryNode	ENTRY		1182447		True				
ANR	1182467	CFGExitNode	EXIT		1182447		True				
ANR	1182468	Symbol	OPT_EXACT_MAXLEN		1182447						
ANR	1182469	Symbol	ex		1182447						
ANR	1182470	Symbol	* ex		1182447						
ANR	1182471	Symbol	ex -> len		1182447						
ANR	1182472	Function	clear_opt_exact_info	4183:0:93523:93726							
ANR	1182473	FunctionDef	clear_opt_exact_info (OptExactInfo * ex)		1182472	0					
ANR	1182474	CompoundStatement		4185:0:93574:93726	1182472	0					
ANR	1182475	ExpressionStatement	clear_mml ( & ex -> mmd )	4186:2:93578:93597	1182472	0	True				
ANR	1182476	CallExpression	clear_mml ( & ex -> mmd )		1182472	0					
ANR	1182477	Callee	clear_mml		1182472	0					
ANR	1182478	Identifier	clear_mml		1182472	0					
ANR	1182479	ArgumentList	& ex -> mmd		1182472	1					
ANR	1182480	Argument	& ex -> mmd		1182472	0					
ANR	1182481	UnaryOperationExpression	& ex -> mmd		1182472	0					
ANR	1182482	UnaryOperator	&		1182472	0					
ANR	1182483	PtrMemberAccess	ex -> mmd		1182472	1					
ANR	1182484	Identifier	ex		1182472	0					
ANR	1182485	Identifier	mmd		1182472	1					
ANR	1182486	ExpressionStatement	clear_opt_anc_info ( & ex -> anc )	4187:2:93601:93629	1182472	1	True				
ANR	1182487	CallExpression	clear_opt_anc_info ( & ex -> anc )		1182472	0					
ANR	1182488	Callee	clear_opt_anc_info		1182472	0					
ANR	1182489	Identifier	clear_opt_anc_info		1182472	0					
ANR	1182490	ArgumentList	& ex -> anc		1182472	1					
ANR	1182491	Argument	& ex -> anc		1182472	0					
ANR	1182492	UnaryOperationExpression	& ex -> anc		1182472	0					
ANR	1182493	UnaryOperator	&		1182472	0					
ANR	1182494	PtrMemberAccess	ex -> anc		1182472	1					
ANR	1182495	Identifier	ex		1182472	0					
ANR	1182496	Identifier	anc		1182472	1					
ANR	1182497	ExpressionStatement	ex -> reach_end = 0	4188:2:93633:93652	1182472	2	True				
ANR	1182498	AssignmentExpression	ex -> reach_end = 0		1182472	0		=			
ANR	1182499	PtrMemberAccess	ex -> reach_end		1182472	0					
ANR	1182500	Identifier	ex		1182472	0					
ANR	1182501	Identifier	reach_end		1182472	1					
ANR	1182502	PrimaryExpression	0		1182472	1					
ANR	1182503	ExpressionStatement	ex -> ignore_case = 0	4189:2:93656:93675	1182472	3	True				
ANR	1182504	AssignmentExpression	ex -> ignore_case = 0		1182472	0		=			
ANR	1182505	PtrMemberAccess	ex -> ignore_case		1182472	0					
ANR	1182506	Identifier	ex		1182472	0					
ANR	1182507	Identifier	ignore_case		1182472	1					
ANR	1182508	PrimaryExpression	0		1182472	1					
ANR	1182509	ExpressionStatement	ex -> len = 0	4190:2:93679:93698	1182472	4	True				
ANR	1182510	AssignmentExpression	ex -> len = 0		1182472	0		=			
ANR	1182511	PtrMemberAccess	ex -> len		1182472	0					
ANR	1182512	Identifier	ex		1182472	0					
ANR	1182513	Identifier	len		1182472	1					
ANR	1182514	PrimaryExpression	0		1182472	1					
ANR	1182515	ExpressionStatement	ex -> s [ 0 ] = '\\0'	4191:2:93702:93724	1182472	5	True				
ANR	1182516	AssignmentExpression	ex -> s [ 0 ] = '\\0'		1182472	0		=			
ANR	1182517	ArrayIndexing	ex -> s [ 0 ]		1182472	0					
ANR	1182518	PtrMemberAccess	ex -> s		1182472	0					
ANR	1182519	Identifier	ex		1182472	0					
ANR	1182520	Identifier	s		1182472	1					
ANR	1182521	PrimaryExpression	0		1182472	1					
ANR	1182522	PrimaryExpression	'\\0'		1182472	1					
ANR	1182523	ReturnType	static void		1182472	1					
ANR	1182524	Identifier	clear_opt_exact_info		1182472	2					
ANR	1182525	ParameterList	OptExactInfo * ex		1182472	3					
ANR	1182526	Parameter	OptExactInfo * ex	4184:21:93556:93571	1182472	0	True				
ANR	1182527	ParameterType	OptExactInfo *		1182472	0					
ANR	1182528	Identifier	ex		1182472	1					
ANR	1182529	CFGEntryNode	ENTRY		1182472		True				
ANR	1182530	CFGExitNode	EXIT		1182472		True				
ANR	1182531	Symbol	& ex -> mmd		1182472						
ANR	1182532	Symbol	ex -> ignore_case		1182472						
ANR	1182533	Symbol	& ex -> anc		1182472						
ANR	1182534	Symbol	ex -> s		1182472						
ANR	1182535	Symbol	ex		1182472						
ANR	1182536	Symbol	* ex -> s		1182472						
ANR	1182537	Symbol	* ex		1182472						
ANR	1182538	Symbol	ex -> reach_end		1182472						
ANR	1182539	Symbol	ex -> len		1182472						
ANR	1182540	Symbol	* * ex		1182472						
ANR	1182541	Function	copy_opt_exact_info	4194:0:93729:93816							
ANR	1182542	FunctionDef	"copy_opt_exact_info (OptExactInfo * to , OptExactInfo * from)"		1182541	0					
ANR	1182543	CompoundStatement		4196:0:93799:93816	1182541	0					
ANR	1182544	ExpressionStatement	* to = * from	4197:2:93803:93814	1182541	0	True				
ANR	1182545	AssignmentExpression	* to = * from		1182541	0		=			
ANR	1182546	UnaryOperationExpression	* to		1182541	0					
ANR	1182547	UnaryOperator	*		1182541	0					
ANR	1182548	Identifier	to		1182541	1					
ANR	1182549	UnaryOperationExpression	* from		1182541	1					
ANR	1182550	UnaryOperator	*		1182541	0					
ANR	1182551	Identifier	from		1182541	1					
ANR	1182552	ReturnType	static void		1182541	1					
ANR	1182553	Identifier	copy_opt_exact_info		1182541	2					
ANR	1182554	ParameterList	"OptExactInfo * to , OptExactInfo * from"		1182541	3					
ANR	1182555	Parameter	OptExactInfo * to	4195:20:93761:93776	1182541	0	True				
ANR	1182556	ParameterType	OptExactInfo *		1182541	0					
ANR	1182557	Identifier	to		1182541	1					
ANR	1182558	Parameter	OptExactInfo * from	4195:38:93779:93796	1182541	1	True				
ANR	1182559	ParameterType	OptExactInfo *		1182541	0					
ANR	1182560	Identifier	from		1182541	1					
ANR	1182561	CFGEntryNode	ENTRY		1182541		True				
ANR	1182562	CFGExitNode	EXIT		1182541		True				
ANR	1182563	Symbol	* to		1182541						
ANR	1182564	Symbol	from		1182541						
ANR	1182565	Symbol	to		1182541						
ANR	1182566	Symbol	* from		1182541						
ANR	1182567	Function	concat_opt_exact_info	4200:0:93819:94511							
ANR	1182568	FunctionDef	"concat_opt_exact_info (OptExactInfo * to , OptExactInfo * add , OnigEncoding enc)"		1182567	0					
ANR	1182569	CompoundStatement		4202:0:93908:94511	1182567	0					
ANR	1182570	IdentifierDeclStatement	"int i , j , len ;"	4203:2:93912:93925	1182567	0	True				
ANR	1182571	IdentifierDecl	i		1182567	0					
ANR	1182572	IdentifierDeclType	int		1182567	0					
ANR	1182573	Identifier	i		1182567	1					
ANR	1182574	IdentifierDecl	j		1182567	1					
ANR	1182575	IdentifierDeclType	int		1182567	0					
ANR	1182576	Identifier	j		1182567	1					
ANR	1182577	IdentifierDecl	len		1182567	2					
ANR	1182578	IdentifierDeclType	int		1182567	0					
ANR	1182579	Identifier	len		1182567	1					
ANR	1182580	IdentifierDeclStatement	"UChar * p , * end ;"	4204:2:93929:93943	1182567	1	True				
ANR	1182581	IdentifierDecl	* p		1182567	0					
ANR	1182582	IdentifierDeclType	UChar *		1182567	0					
ANR	1182583	Identifier	p		1182567	1					
ANR	1182584	IdentifierDecl	* end		1182567	1					
ANR	1182585	IdentifierDeclType	UChar *		1182567	0					
ANR	1182586	Identifier	end		1182567	1					
ANR	1182587	IdentifierDeclStatement	OptAncInfo tanc ;	4205:2:93947:93962	1182567	2	True				
ANR	1182588	IdentifierDecl	tanc		1182567	0					
ANR	1182589	IdentifierDeclType	OptAncInfo		1182567	0					
ANR	1182590	Identifier	tanc		1182567	1					
ANR	1182591	IfStatement	if ( ! to -> ignore_case && add -> ignore_case )		1182567	3					
ANR	1182592	Condition	! to -> ignore_case && add -> ignore_case	4207:6:93971:94007	1182567	0	True				
ANR	1182593	AndExpression	! to -> ignore_case && add -> ignore_case		1182567	0		&&			
ANR	1182594	UnaryOperationExpression	! to -> ignore_case		1182567	0					
ANR	1182595	UnaryOperator	!		1182567	0					
ANR	1182596	PtrMemberAccess	to -> ignore_case		1182567	1					
ANR	1182597	Identifier	to		1182567	0					
ANR	1182598	Identifier	ignore_case		1182567	1					
ANR	1182599	PtrMemberAccess	add -> ignore_case		1182567	1					
ANR	1182600	Identifier	add		1182567	0					
ANR	1182601	Identifier	ignore_case		1182567	1					
ANR	1182602	CompoundStatement		6:45:101:101	1182567	1					
ANR	1182603	IfStatement	if ( to -> len >= add -> len )		1182567	0					
ANR	1182604	Condition	to -> len >= add -> len	4208:8:94020:94038	1182567	0	True				
ANR	1182605	RelationalExpression	to -> len >= add -> len		1182567	0		>=			
ANR	1182606	PtrMemberAccess	to -> len		1182567	0					
ANR	1182607	Identifier	to		1182567	0					
ANR	1182608	Identifier	len		1182567	1					
ANR	1182609	PtrMemberAccess	add -> len		1182567	1					
ANR	1182610	Identifier	add		1182567	0					
ANR	1182611	Identifier	len		1182567	1					
ANR	1182612	ReturnStatement	return ;	4208:29:94041:94048	1182567	1	True				
ANR	1182613	ExpressionStatement	to -> ignore_case = 1	4210:4:94068:94087	1182567	1	True				
ANR	1182614	AssignmentExpression	to -> ignore_case = 1		1182567	0		=			
ANR	1182615	PtrMemberAccess	to -> ignore_case		1182567	0					
ANR	1182616	Identifier	to		1182567	0					
ANR	1182617	Identifier	ignore_case		1182567	1					
ANR	1182618	PrimaryExpression	1		1182567	1					
ANR	1182619	ExpressionStatement	p = add -> s	4213:2:94096:94106	1182567	4	True				
ANR	1182620	AssignmentExpression	p = add -> s		1182567	0		=			
ANR	1182621	Identifier	p		1182567	0					
ANR	1182622	PtrMemberAccess	add -> s		1182567	1					
ANR	1182623	Identifier	add		1182567	0					
ANR	1182624	Identifier	s		1182567	1					
ANR	1182625	ExpressionStatement	end = p + add -> len	4214:2:94110:94128	1182567	5	True				
ANR	1182626	AssignmentExpression	end = p + add -> len		1182567	0		=			
ANR	1182627	Identifier	end		1182567	0					
ANR	1182628	AdditiveExpression	p + add -> len		1182567	1		+			
ANR	1182629	Identifier	p		1182567	0					
ANR	1182630	PtrMemberAccess	add -> len		1182567	1					
ANR	1182631	Identifier	add		1182567	0					
ANR	1182632	Identifier	len		1182567	1					
ANR	1182633	ForStatement	for ( i = to -> len ; p < end ; )		1182567	6					
ANR	1182634	ForInit	i = to -> len ;	4215:7:94137:94148	1182567	0	True				
ANR	1182635	AssignmentExpression	i = to -> len		1182567	0		=			
ANR	1182636	Identifier	i		1182567	0					
ANR	1182637	PtrMemberAccess	to -> len		1182567	1					
ANR	1182638	Identifier	to		1182567	0					
ANR	1182639	Identifier	len		1182567	1					
ANR	1182640	Condition	p < end	4215:20:94150:94156	1182567	1	True				
ANR	1182641	RelationalExpression	p < end		1182567	0		<			
ANR	1182642	Identifier	p		1182567	0					
ANR	1182643	Identifier	end		1182567	1					
ANR	1182644	CompoundStatement		14:31:252:252	1182567	2					
ANR	1182645	ExpressionStatement	"len = enclen ( enc , p )"	4216:4:94167:94187	1182567	0	True				
ANR	1182646	AssignmentExpression	"len = enclen ( enc , p )"		1182567	0		=			
ANR	1182647	Identifier	len		1182567	0					
ANR	1182648	CallExpression	"enclen ( enc , p )"		1182567	1					
ANR	1182649	Callee	enclen		1182567	0					
ANR	1182650	Identifier	enclen		1182567	0					
ANR	1182651	ArgumentList	enc		1182567	1					
ANR	1182652	Argument	enc		1182567	0					
ANR	1182653	Identifier	enc		1182567	0					
ANR	1182654	Argument	p		1182567	1					
ANR	1182655	Identifier	p		1182567	0					
ANR	1182656	IfStatement	if ( i + len > OPT_EXACT_MAXLEN )		1182567	1					
ANR	1182657	Condition	i + len > OPT_EXACT_MAXLEN	4217:8:94197:94222	1182567	0	True				
ANR	1182658	RelationalExpression	i + len > OPT_EXACT_MAXLEN		1182567	0		>			
ANR	1182659	AdditiveExpression	i + len		1182567	0		+			
ANR	1182660	Identifier	i		1182567	0					
ANR	1182661	Identifier	len		1182567	1					
ANR	1182662	Identifier	OPT_EXACT_MAXLEN		1182567	1					
ANR	1182663	BreakStatement	break ;	4217:36:94225:94230	1182567	1	True				
ANR	1182664	ForStatement	for ( j = 0 ; j < len && p < end ; j ++ )		1182567	2					
ANR	1182665	ForInit	j = 0 ;	4218:9:94241:94246	1182567	0	True				
ANR	1182666	AssignmentExpression	j = 0		1182567	0		=			
ANR	1182667	Identifier	j		1182567	0					
ANR	1182668	PrimaryExpression	0		1182567	1					
ANR	1182669	Condition	j < len && p < end	4218:16:94248:94265	1182567	1	True				
ANR	1182670	AndExpression	j < len && p < end		1182567	0		&&			
ANR	1182671	RelationalExpression	j < len		1182567	0		<			
ANR	1182672	Identifier	j		1182567	0					
ANR	1182673	Identifier	len		1182567	1					
ANR	1182674	RelationalExpression	p < end		1182567	1		<			
ANR	1182675	Identifier	p		1182567	0					
ANR	1182676	Identifier	end		1182567	1					
ANR	1182677	PostIncDecOperationExpression	j ++	4218:36:94268:94270	1182567	2	True				
ANR	1182678	Identifier	j		1182567	0					
ANR	1182679	IncDec	++		1182567	1					
ANR	1182680	ExpressionStatement	to -> s [ i ++ ] = * p ++	4219:6:94279:94296	1182567	3	True				
ANR	1182681	AssignmentExpression	to -> s [ i ++ ] = * p ++		1182567	0		=			
ANR	1182682	ArrayIndexing	to -> s [ i ++ ]		1182567	0					
ANR	1182683	PtrMemberAccess	to -> s		1182567	0					
ANR	1182684	Identifier	to		1182567	0					
ANR	1182685	Identifier	s		1182567	1					
ANR	1182686	PostIncDecOperationExpression	i ++		1182567	1					
ANR	1182687	Identifier	i		1182567	0					
ANR	1182688	IncDec	++		1182567	1					
ANR	1182689	UnaryOperationExpression	* p ++		1182567	1					
ANR	1182690	UnaryOperator	*		1182567	0					
ANR	1182691	PostIncDecOperationExpression	p ++		1182567	1					
ANR	1182692	Identifier	p		1182567	0					
ANR	1182693	IncDec	++		1182567	1					
ANR	1182694	ExpressionStatement	to -> len = i	4222:2:94305:94316	1182567	7	True				
ANR	1182695	AssignmentExpression	to -> len = i		1182567	0		=			
ANR	1182696	PtrMemberAccess	to -> len		1182567	0					
ANR	1182697	Identifier	to		1182567	0					
ANR	1182698	Identifier	len		1182567	1					
ANR	1182699	Identifier	i		1182567	1					
ANR	1182700	ExpressionStatement	to -> reach_end = ( p == end ? add -> reach_end : 0 )	4223:2:94320:94367	1182567	8	True				
ANR	1182701	AssignmentExpression	to -> reach_end = ( p == end ? add -> reach_end : 0 )		1182567	0		=			
ANR	1182702	PtrMemberAccess	to -> reach_end		1182567	0					
ANR	1182703	Identifier	to		1182567	0					
ANR	1182704	Identifier	reach_end		1182567	1					
ANR	1182705	ConditionalExpression	p == end ? add -> reach_end : 0		1182567	1					
ANR	1182706	Condition	p == end		1182567	0					
ANR	1182707	EqualityExpression	p == end		1182567	0		==			
ANR	1182708	Identifier	p		1182567	0					
ANR	1182709	Identifier	end		1182567	1					
ANR	1182710	PtrMemberAccess	add -> reach_end		1182567	1					
ANR	1182711	Identifier	add		1182567	0					
ANR	1182712	Identifier	reach_end		1182567	1					
ANR	1182713	PrimaryExpression	0		1182567	2					
ANR	1182714	ExpressionStatement	"concat_opt_anc_info ( & tanc , & to -> anc , & add -> anc , 1 , 1 )"	4225:2:94372:94425	1182567	9	True				
ANR	1182715	CallExpression	"concat_opt_anc_info ( & tanc , & to -> anc , & add -> anc , 1 , 1 )"		1182567	0					
ANR	1182716	Callee	concat_opt_anc_info		1182567	0					
ANR	1182717	Identifier	concat_opt_anc_info		1182567	0					
ANR	1182718	ArgumentList	& tanc		1182567	1					
ANR	1182719	Argument	& tanc		1182567	0					
ANR	1182720	UnaryOperationExpression	& tanc		1182567	0					
ANR	1182721	UnaryOperator	&		1182567	0					
ANR	1182722	Identifier	tanc		1182567	1					
ANR	1182723	Argument	& to -> anc		1182567	1					
ANR	1182724	UnaryOperationExpression	& to -> anc		1182567	0					
ANR	1182725	UnaryOperator	&		1182567	0					
ANR	1182726	PtrMemberAccess	to -> anc		1182567	1					
ANR	1182727	Identifier	to		1182567	0					
ANR	1182728	Identifier	anc		1182567	1					
ANR	1182729	Argument	& add -> anc		1182567	2					
ANR	1182730	UnaryOperationExpression	& add -> anc		1182567	0					
ANR	1182731	UnaryOperator	&		1182567	0					
ANR	1182732	PtrMemberAccess	add -> anc		1182567	1					
ANR	1182733	Identifier	add		1182567	0					
ANR	1182734	Identifier	anc		1182567	1					
ANR	1182735	Argument	1		1182567	3					
ANR	1182736	PrimaryExpression	1		1182567	0					
ANR	1182737	Argument	1		1182567	4					
ANR	1182738	PrimaryExpression	1		1182567	0					
ANR	1182739	IfStatement	if ( ! to -> reach_end )		1182567	10					
ANR	1182740	Condition	! to -> reach_end	4226:6:94433:94447	1182567	0	True				
ANR	1182741	UnaryOperationExpression	! to -> reach_end		1182567	0					
ANR	1182742	UnaryOperator	!		1182567	0					
ANR	1182743	PtrMemberAccess	to -> reach_end		1182567	1					
ANR	1182744	Identifier	to		1182567	0					
ANR	1182745	Identifier	reach_end		1182567	1					
ANR	1182746	ExpressionStatement	tanc . right_anchor = 0	4226:23:94450:94471	1182567	1	True				
ANR	1182747	AssignmentExpression	tanc . right_anchor = 0		1182567	0		=			
ANR	1182748	MemberAccess	tanc . right_anchor		1182567	0					
ANR	1182749	Identifier	tanc		1182567	0					
ANR	1182750	Identifier	right_anchor		1182567	1					
ANR	1182751	PrimaryExpression	0		1182567	1					
ANR	1182752	ExpressionStatement	"copy_opt_anc_info ( & to -> anc , & tanc )"	4227:2:94475:94509	1182567	11	True				
ANR	1182753	CallExpression	"copy_opt_anc_info ( & to -> anc , & tanc )"		1182567	0					
ANR	1182754	Callee	copy_opt_anc_info		1182567	0					
ANR	1182755	Identifier	copy_opt_anc_info		1182567	0					
ANR	1182756	ArgumentList	& to -> anc		1182567	1					
ANR	1182757	Argument	& to -> anc		1182567	0					
ANR	1182758	UnaryOperationExpression	& to -> anc		1182567	0					
ANR	1182759	UnaryOperator	&		1182567	0					
ANR	1182760	PtrMemberAccess	to -> anc		1182567	1					
ANR	1182761	Identifier	to		1182567	0					
ANR	1182762	Identifier	anc		1182567	1					
ANR	1182763	Argument	& tanc		1182567	1					
ANR	1182764	UnaryOperationExpression	& tanc		1182567	0					
ANR	1182765	UnaryOperator	&		1182567	0					
ANR	1182766	Identifier	tanc		1182567	1					
ANR	1182767	ReturnType	static void		1182567	1					
ANR	1182768	Identifier	concat_opt_exact_info		1182567	2					
ANR	1182769	ParameterList	"OptExactInfo * to , OptExactInfo * add , OnigEncoding enc"		1182567	3					
ANR	1182770	Parameter	OptExactInfo * to	4201:22:93853:93868	1182567	0	True				
ANR	1182771	ParameterType	OptExactInfo *		1182567	0					
ANR	1182772	Identifier	to		1182567	1					
ANR	1182773	Parameter	OptExactInfo * add	4201:40:93871:93887	1182567	1	True				
ANR	1182774	ParameterType	OptExactInfo *		1182567	0					
ANR	1182775	Identifier	add		1182567	1					
ANR	1182776	Parameter	OnigEncoding enc	4201:59:93890:93905	1182567	2	True				
ANR	1182777	ParameterType	OnigEncoding		1182567	0					
ANR	1182778	Identifier	enc		1182567	1					
ANR	1182779	CFGEntryNode	ENTRY		1182567		True				
ANR	1182780	CFGExitNode	EXIT		1182567		True				
ANR	1182781	Symbol	OPT_EXACT_MAXLEN		1182567						
ANR	1182782	Symbol	to -> reach_end		1182567						
ANR	1182783	Symbol	& add -> anc		1182567						
ANR	1182784	Symbol	& tanc		1182567						
ANR	1182785	Symbol	add -> ignore_case		1182567						
ANR	1182786	Symbol	add -> reach_end		1182567						
ANR	1182787	Symbol	len		1182567						
ANR	1182788	Symbol	tanc		1182567						
ANR	1182789	Symbol	add -> len		1182567						
ANR	1182790	Symbol	end		1182567						
ANR	1182791	Symbol	enc		1182567						
ANR	1182792	Symbol	to -> len		1182567						
ANR	1182793	Symbol	to -> s		1182567						
ANR	1182794	Symbol	add -> s		1182567						
ANR	1182795	Symbol	add		1182567						
ANR	1182796	Symbol	* to		1182567						
ANR	1182797	Symbol	& to -> anc		1182567						
ANR	1182798	Symbol	* * to		1182567						
ANR	1182799	Symbol	* to -> s		1182567						
ANR	1182800	Symbol	* p ++		1182567						
ANR	1182801	Symbol	i		1182567						
ANR	1182802	Symbol	j		1182567						
ANR	1182803	Symbol	to -> ignore_case		1182567						
ANR	1182804	Symbol	enclen		1182567						
ANR	1182805	Symbol	tanc . right_anchor		1182567						
ANR	1182806	Symbol	p		1182567						
ANR	1182807	Symbol	* add		1182567						
ANR	1182808	Symbol	to		1182567						
ANR	1182809	Function	concat_opt_exact_info_str	4230:0:94514:94886							
ANR	1182810	FunctionDef	"concat_opt_exact_info_str (OptExactInfo * to , UChar * s , UChar * end , int raw ARG_UNUSED , OnigEncoding enc)"		1182809	0					
ANR	1182811	CompoundStatement		4233:0:94635:94886	1182809	0					
ANR	1182812	IdentifierDeclStatement	"int i , j , len ;"	4234:2:94639:94652	1182809	0	True				
ANR	1182813	IdentifierDecl	i		1182809	0					
ANR	1182814	IdentifierDeclType	int		1182809	0					
ANR	1182815	Identifier	i		1182809	1					
ANR	1182816	IdentifierDecl	j		1182809	1					
ANR	1182817	IdentifierDeclType	int		1182809	0					
ANR	1182818	Identifier	j		1182809	1					
ANR	1182819	IdentifierDecl	len		1182809	2					
ANR	1182820	IdentifierDeclType	int		1182809	0					
ANR	1182821	Identifier	len		1182809	1					
ANR	1182822	IdentifierDeclStatement	UChar * p ;	4235:2:94656:94664	1182809	1	True				
ANR	1182823	IdentifierDecl	* p		1182809	0					
ANR	1182824	IdentifierDeclType	UChar *		1182809	0					
ANR	1182825	Identifier	p		1182809	1					
ANR	1182826	ForStatement	"for ( i = to -> len , p = s ; p < end && i < OPT_EXACT_MAXLEN ; )"		1182809	2					
ANR	1182827	ForInit	"i = to -> len , p = s ;"	4237:7:94674:94692	1182809	0	True				
ANR	1182828	Expression	"i = to -> len , p = s"		1182809	0					
ANR	1182829	AssignmentExpression	i = to -> len		1182809	0		=			
ANR	1182830	Identifier	i		1182809	0					
ANR	1182831	PtrMemberAccess	to -> len		1182809	1					
ANR	1182832	Identifier	to		1182809	0					
ANR	1182833	Identifier	len		1182809	1					
ANR	1182834	AssignmentExpression	p = s		1182809	1		=			
ANR	1182835	Identifier	p		1182809	0					
ANR	1182836	Identifier	s		1182809	1					
ANR	1182837	Condition	p < end && i < OPT_EXACT_MAXLEN	4237:27:94694:94724	1182809	1	True				
ANR	1182838	AndExpression	p < end && i < OPT_EXACT_MAXLEN		1182809	0		&&			
ANR	1182839	RelationalExpression	p < end		1182809	0		<			
ANR	1182840	Identifier	p		1182809	0					
ANR	1182841	Identifier	end		1182809	1					
ANR	1182842	RelationalExpression	i < OPT_EXACT_MAXLEN		1182809	1		<			
ANR	1182843	Identifier	i		1182809	0					
ANR	1182844	Identifier	OPT_EXACT_MAXLEN		1182809	1					
ANR	1182845	CompoundStatement		5:62:93:93	1182809	2					
ANR	1182846	ExpressionStatement	"len = enclen ( enc , p )"	4238:4:94735:94755	1182809	0	True				
ANR	1182847	AssignmentExpression	"len = enclen ( enc , p )"		1182809	0		=			
ANR	1182848	Identifier	len		1182809	0					
ANR	1182849	CallExpression	"enclen ( enc , p )"		1182809	1					
ANR	1182850	Callee	enclen		1182809	0					
ANR	1182851	Identifier	enclen		1182809	0					
ANR	1182852	ArgumentList	enc		1182809	1					
ANR	1182853	Argument	enc		1182809	0					
ANR	1182854	Identifier	enc		1182809	0					
ANR	1182855	Argument	p		1182809	1					
ANR	1182856	Identifier	p		1182809	0					
ANR	1182857	IfStatement	if ( i + len > OPT_EXACT_MAXLEN )		1182809	1					
ANR	1182858	Condition	i + len > OPT_EXACT_MAXLEN	4239:8:94765:94790	1182809	0	True				
ANR	1182859	RelationalExpression	i + len > OPT_EXACT_MAXLEN		1182809	0		>			
ANR	1182860	AdditiveExpression	i + len		1182809	0		+			
ANR	1182861	Identifier	i		1182809	0					
ANR	1182862	Identifier	len		1182809	1					
ANR	1182863	Identifier	OPT_EXACT_MAXLEN		1182809	1					
ANR	1182864	BreakStatement	break ;	4239:36:94793:94798	1182809	1	True				
ANR	1182865	ForStatement	for ( j = 0 ; j < len && p < end ; j ++ )		1182809	2					
ANR	1182866	ForInit	j = 0 ;	4240:9:94809:94814	1182809	0	True				
ANR	1182867	AssignmentExpression	j = 0		1182809	0		=			
ANR	1182868	Identifier	j		1182809	0					
ANR	1182869	PrimaryExpression	0		1182809	1					
ANR	1182870	Condition	j < len && p < end	4240:16:94816:94833	1182809	1	True				
ANR	1182871	AndExpression	j < len && p < end		1182809	0		&&			
ANR	1182872	RelationalExpression	j < len		1182809	0		<			
ANR	1182873	Identifier	j		1182809	0					
ANR	1182874	Identifier	len		1182809	1					
ANR	1182875	RelationalExpression	p < end		1182809	1		<			
ANR	1182876	Identifier	p		1182809	0					
ANR	1182877	Identifier	end		1182809	1					
ANR	1182878	PostIncDecOperationExpression	j ++	4240:36:94836:94838	1182809	2	True				
ANR	1182879	Identifier	j		1182809	0					
ANR	1182880	IncDec	++		1182809	1					
ANR	1182881	ExpressionStatement	to -> s [ i ++ ] = * p ++	4241:6:94847:94864	1182809	3	True				
ANR	1182882	AssignmentExpression	to -> s [ i ++ ] = * p ++		1182809	0		=			
ANR	1182883	ArrayIndexing	to -> s [ i ++ ]		1182809	0					
ANR	1182884	PtrMemberAccess	to -> s		1182809	0					
ANR	1182885	Identifier	to		1182809	0					
ANR	1182886	Identifier	s		1182809	1					
ANR	1182887	PostIncDecOperationExpression	i ++		1182809	1					
ANR	1182888	Identifier	i		1182809	0					
ANR	1182889	IncDec	++		1182809	1					
ANR	1182890	UnaryOperationExpression	* p ++		1182809	1					
ANR	1182891	UnaryOperator	*		1182809	0					
ANR	1182892	PostIncDecOperationExpression	p ++		1182809	1					
ANR	1182893	Identifier	p		1182809	0					
ANR	1182894	IncDec	++		1182809	1					
ANR	1182895	ExpressionStatement	to -> len = i	4244:2:94873:94884	1182809	3	True				
ANR	1182896	AssignmentExpression	to -> len = i		1182809	0		=			
ANR	1182897	PtrMemberAccess	to -> len		1182809	0					
ANR	1182898	Identifier	to		1182809	0					
ANR	1182899	Identifier	len		1182809	1					
ANR	1182900	Identifier	i		1182809	1					
ANR	1182901	ReturnType	static void		1182809	1					
ANR	1182902	Identifier	concat_opt_exact_info_str		1182809	2					
ANR	1182903	ParameterList	"OptExactInfo * to , UChar * s , UChar * end , int raw ARG_UNUSED , OnigEncoding enc"		1182809	3					
ANR	1182904	Parameter	OptExactInfo * to	4231:26:94552:94567	1182809	0	True				
ANR	1182905	ParameterType	OptExactInfo *		1182809	0					
ANR	1182906	Identifier	to		1182809	1					
ANR	1182907	Parameter	UChar * s	4231:44:94570:94577	1182809	1	True				
ANR	1182908	ParameterType	UChar *		1182809	0					
ANR	1182909	Identifier	s		1182809	1					
ANR	1182910	Parameter	UChar * end	4231:54:94580:94589	1182809	2	True				
ANR	1182911	ParameterType	UChar *		1182809	0					
ANR	1182912	Identifier	end		1182809	1					
ANR	1182913	Parameter	int raw ARG_UNUSED	4232:5:94597:94614	1182809	3	True				
ANR	1182914	ParameterType	int raw		1182809	0					
ANR	1182915	Identifier	ARG_UNUSED		1182809	1					
ANR	1182916	Parameter	OnigEncoding enc	4232:25:94617:94632	1182809	4	True				
ANR	1182917	ParameterType	OnigEncoding		1182809	0					
ANR	1182918	Identifier	enc		1182809	1					
ANR	1182919	CFGEntryNode	ENTRY		1182809		True				
ANR	1182920	CFGExitNode	EXIT		1182809		True				
ANR	1182921	Symbol	OPT_EXACT_MAXLEN		1182809						
ANR	1182922	Symbol	* to		1182809						
ANR	1182923	Symbol	* * to		1182809						
ANR	1182924	Symbol	* p ++		1182809						
ANR	1182925	Symbol	* to -> s		1182809						
ANR	1182926	Symbol	i		1182809						
ANR	1182927	Symbol	j		1182809						
ANR	1182928	Symbol	ARG_UNUSED		1182809						
ANR	1182929	Symbol	enclen		1182809						
ANR	1182930	Symbol	p		1182809						
ANR	1182931	Symbol	s		1182809						
ANR	1182932	Symbol	len		1182809						
ANR	1182933	Symbol	end		1182809						
ANR	1182934	Symbol	to		1182809						
ANR	1182935	Symbol	enc		1182809						
ANR	1182936	Symbol	to -> len		1182809						
ANR	1182937	Symbol	to -> s		1182809						
ANR	1182938	Function	alt_merge_opt_exact_info	4247:0:94889:95661							
ANR	1182939	FunctionDef	"alt_merge_opt_exact_info (OptExactInfo * to , OptExactInfo * add , OptEnv * env)"		1182938	0					
ANR	1182940	CompoundStatement		4249:0:94976:95661	1182938	0					
ANR	1182941	IdentifierDeclStatement	"int i , j , len ;"	4250:2:94980:94993	1182938	0	True				
ANR	1182942	IdentifierDecl	i		1182938	0					
ANR	1182943	IdentifierDeclType	int		1182938	0					
ANR	1182944	Identifier	i		1182938	1					
ANR	1182945	IdentifierDecl	j		1182938	1					
ANR	1182946	IdentifierDeclType	int		1182938	0					
ANR	1182947	Identifier	j		1182938	1					
ANR	1182948	IdentifierDecl	len		1182938	2					
ANR	1182949	IdentifierDeclType	int		1182938	0					
ANR	1182950	Identifier	len		1182938	1					
ANR	1182951	IfStatement	if ( add -> len == 0 || to -> len == 0 )		1182938	1					
ANR	1182952	Condition	add -> len == 0 || to -> len == 0	4252:6:95002:95030	1182938	0	True				
ANR	1182953	OrExpression	add -> len == 0 || to -> len == 0		1182938	0		||			
ANR	1182954	EqualityExpression	add -> len == 0		1182938	0		==			
ANR	1182955	PtrMemberAccess	add -> len		1182938	0					
ANR	1182956	Identifier	add		1182938	0					
ANR	1182957	Identifier	len		1182938	1					
ANR	1182958	PrimaryExpression	0		1182938	1					
ANR	1182959	EqualityExpression	to -> len == 0		1182938	1		==			
ANR	1182960	PtrMemberAccess	to -> len		1182938	0					
ANR	1182961	Identifier	to		1182938	0					
ANR	1182962	Identifier	len		1182938	1					
ANR	1182963	PrimaryExpression	0		1182938	1					
ANR	1182964	CompoundStatement		4:37:56:56	1182938	1					
ANR	1182965	ExpressionStatement	clear_opt_exact_info ( to )	4253:4:95039:95063	1182938	0	True				
ANR	1182966	CallExpression	clear_opt_exact_info ( to )		1182938	0					
ANR	1182967	Callee	clear_opt_exact_info		1182938	0					
ANR	1182968	Identifier	clear_opt_exact_info		1182938	0					
ANR	1182969	ArgumentList	to		1182938	1					
ANR	1182970	Argument	to		1182938	0					
ANR	1182971	Identifier	to		1182938	0					
ANR	1182972	ReturnStatement	return ;	4254:4:95069:95076	1182938	1	True				
ANR	1182973	IfStatement	"if ( ! is_equal_mml ( & to -> mmd , & add -> mmd ) )"		1182938	2					
ANR	1182974	Condition	"! is_equal_mml ( & to -> mmd , & add -> mmd )"	4257:6:95089:95123	1182938	0	True				
ANR	1182975	UnaryOperationExpression	"! is_equal_mml ( & to -> mmd , & add -> mmd )"		1182938	0					
ANR	1182976	UnaryOperator	!		1182938	0					
ANR	1182977	CallExpression	"is_equal_mml ( & to -> mmd , & add -> mmd )"		1182938	1					
ANR	1182978	Callee	is_equal_mml		1182938	0					
ANR	1182979	Identifier	is_equal_mml		1182938	0					
ANR	1182980	ArgumentList	& to -> mmd		1182938	1					
ANR	1182981	Argument	& to -> mmd		1182938	0					
ANR	1182982	UnaryOperationExpression	& to -> mmd		1182938	0					
ANR	1182983	UnaryOperator	&		1182938	0					
ANR	1182984	PtrMemberAccess	to -> mmd		1182938	1					
ANR	1182985	Identifier	to		1182938	0					
ANR	1182986	Identifier	mmd		1182938	1					
ANR	1182987	Argument	& add -> mmd		1182938	1					
ANR	1182988	UnaryOperationExpression	& add -> mmd		1182938	0					
ANR	1182989	UnaryOperator	&		1182938	0					
ANR	1182990	PtrMemberAccess	add -> mmd		1182938	1					
ANR	1182991	Identifier	add		1182938	0					
ANR	1182992	Identifier	mmd		1182938	1					
ANR	1182993	CompoundStatement		9:43:149:149	1182938	1					
ANR	1182994	ExpressionStatement	clear_opt_exact_info ( to )	4258:4:95132:95156	1182938	0	True				
ANR	1182995	CallExpression	clear_opt_exact_info ( to )		1182938	0					
ANR	1182996	Callee	clear_opt_exact_info		1182938	0					
ANR	1182997	Identifier	clear_opt_exact_info		1182938	0					
ANR	1182998	ArgumentList	to		1182938	1					
ANR	1182999	Argument	to		1182938	0					
ANR	1183000	Identifier	to		1182938	0					
ANR	1183001	ReturnStatement	return ;	4259:4:95162:95169	1182938	1	True				
ANR	1183002	ForStatement	for ( i = 0 ; i < to -> len && i < add -> len ; )		1182938	3					
ANR	1183003	ForInit	i = 0 ;	4262:7:95183:95188	1182938	0	True				
ANR	1183004	AssignmentExpression	i = 0		1182938	0		=			
ANR	1183005	Identifier	i		1182938	0					
ANR	1183006	PrimaryExpression	0		1182938	1					
ANR	1183007	Condition	i < to -> len && i < add -> len	4262:14:95190:95216	1182938	1	True				
ANR	1183008	AndExpression	i < to -> len && i < add -> len		1182938	0		&&			
ANR	1183009	RelationalExpression	i < to -> len		1182938	0		<			
ANR	1183010	Identifier	i		1182938	0					
ANR	1183011	PtrMemberAccess	to -> len		1182938	1					
ANR	1183012	Identifier	to		1182938	0					
ANR	1183013	Identifier	len		1182938	1					
ANR	1183014	RelationalExpression	i < add -> len		1182938	1		<			
ANR	1183015	Identifier	i		1182938	0					
ANR	1183016	PtrMemberAccess	add -> len		1182938	1					
ANR	1183017	Identifier	add		1182938	0					
ANR	1183018	Identifier	len		1182938	1					
ANR	1183019	CompoundStatement		14:45:244:244	1182938	2					
ANR	1183020	IfStatement	if ( to -> s [ i ] != add -> s [ i ] )		1182938	0					
ANR	1183021	Condition	to -> s [ i ] != add -> s [ i ]	4263:8:95231:95251	1182938	0	True				
ANR	1183022	EqualityExpression	to -> s [ i ] != add -> s [ i ]		1182938	0		!=			
ANR	1183023	ArrayIndexing	to -> s [ i ]		1182938	0					
ANR	1183024	PtrMemberAccess	to -> s		1182938	0					
ANR	1183025	Identifier	to		1182938	0					
ANR	1183026	Identifier	s		1182938	1					
ANR	1183027	Identifier	i		1182938	1					
ANR	1183028	ArrayIndexing	add -> s [ i ]		1182938	1					
ANR	1183029	PtrMemberAccess	add -> s		1182938	0					
ANR	1183030	Identifier	add		1182938	0					
ANR	1183031	Identifier	s		1182938	1					
ANR	1183032	Identifier	i		1182938	1					
ANR	1183033	BreakStatement	break ;	4263:31:95254:95259	1182938	1	True				
ANR	1183034	ExpressionStatement	"len = enclen ( env -> enc , to -> s + i )"	4264:4:95265:95298	1182938	1	True				
ANR	1183035	AssignmentExpression	"len = enclen ( env -> enc , to -> s + i )"		1182938	0		=			
ANR	1183036	Identifier	len		1182938	0					
ANR	1183037	CallExpression	"enclen ( env -> enc , to -> s + i )"		1182938	1					
ANR	1183038	Callee	enclen		1182938	0					
ANR	1183039	Identifier	enclen		1182938	0					
ANR	1183040	ArgumentList	env -> enc		1182938	1					
ANR	1183041	Argument	env -> enc		1182938	0					
ANR	1183042	PtrMemberAccess	env -> enc		1182938	0					
ANR	1183043	Identifier	env		1182938	0					
ANR	1183044	Identifier	enc		1182938	1					
ANR	1183045	Argument	to -> s + i		1182938	1					
ANR	1183046	AdditiveExpression	to -> s + i		1182938	0		+			
ANR	1183047	PtrMemberAccess	to -> s		1182938	0					
ANR	1183048	Identifier	to		1182938	0					
ANR	1183049	Identifier	s		1182938	1					
ANR	1183050	Identifier	i		1182938	1					
ANR	1183051	ForStatement	for ( j = 1 ; j < len ; j ++ )		1182938	2					
ANR	1183052	ForInit	j = 1 ;	4266:9:95310:95315	1182938	0	True				
ANR	1183053	AssignmentExpression	j = 1		1182938	0		=			
ANR	1183054	Identifier	j		1182938	0					
ANR	1183055	PrimaryExpression	1		1182938	1					
ANR	1183056	Condition	j < len	4266:16:95317:95323	1182938	1	True				
ANR	1183057	RelationalExpression	j < len		1182938	0		<			
ANR	1183058	Identifier	j		1182938	0					
ANR	1183059	Identifier	len		1182938	1					
ANR	1183060	PostIncDecOperationExpression	j ++	4266:25:95326:95328	1182938	2	True				
ANR	1183061	Identifier	j		1182938	0					
ANR	1183062	IncDec	++		1182938	1					
ANR	1183063	CompoundStatement		18:30:354:354	1182938	3					
ANR	1183064	IfStatement	if ( to -> s [ i + j ] != add -> s [ i + j ] )		1182938	0					
ANR	1183065	Condition	to -> s [ i + j ] != add -> s [ i + j ]	4267:10:95343:95367	1182938	0	True				
ANR	1183066	EqualityExpression	to -> s [ i + j ] != add -> s [ i + j ]		1182938	0		!=			
ANR	1183067	ArrayIndexing	to -> s [ i + j ]		1182938	0					
ANR	1183068	PtrMemberAccess	to -> s		1182938	0					
ANR	1183069	Identifier	to		1182938	0					
ANR	1183070	Identifier	s		1182938	1					
ANR	1183071	AdditiveExpression	i + j		1182938	1		+			
ANR	1183072	Identifier	i		1182938	0					
ANR	1183073	Identifier	j		1182938	1					
ANR	1183074	ArrayIndexing	add -> s [ i + j ]		1182938	1					
ANR	1183075	PtrMemberAccess	add -> s		1182938	0					
ANR	1183076	Identifier	add		1182938	0					
ANR	1183077	Identifier	s		1182938	1					
ANR	1183078	AdditiveExpression	i + j		1182938	1		+			
ANR	1183079	Identifier	i		1182938	0					
ANR	1183080	Identifier	j		1182938	1					
ANR	1183081	BreakStatement	break ;	4267:37:95370:95375	1182938	1	True				
ANR	1183082	IfStatement	if ( j < len )		1182938	3					
ANR	1183083	Condition	j < len	4269:8:95391:95397	1182938	0	True				
ANR	1183084	RelationalExpression	j < len		1182938	0		<			
ANR	1183085	Identifier	j		1182938	0					
ANR	1183086	Identifier	len		1182938	1					
ANR	1183087	BreakStatement	break ;	4269:17:95400:95405	1182938	1	True				
ANR	1183088	ExpressionStatement	i += len	4270:4:95411:95419	1182938	4	True				
ANR	1183089	AssignmentExpression	i += len		1182938	0		+=			
ANR	1183090	Identifier	i		1182938	0					
ANR	1183091	Identifier	len		1182938	1					
ANR	1183092	IfStatement	if ( ! add -> reach_end || i < add -> len || i < to -> len )		1182938	4					
ANR	1183093	Condition	! add -> reach_end || i < add -> len || i < to -> len	4273:6:95432:95478	1182938	0	True				
ANR	1183094	OrExpression	! add -> reach_end || i < add -> len || i < to -> len		1182938	0		||			
ANR	1183095	UnaryOperationExpression	! add -> reach_end		1182938	0					
ANR	1183096	UnaryOperator	!		1182938	0					
ANR	1183097	PtrMemberAccess	add -> reach_end		1182938	1					
ANR	1183098	Identifier	add		1182938	0					
ANR	1183099	Identifier	reach_end		1182938	1					
ANR	1183100	OrExpression	i < add -> len || i < to -> len		1182938	1		||			
ANR	1183101	RelationalExpression	i < add -> len		1182938	0		<			
ANR	1183102	Identifier	i		1182938	0					
ANR	1183103	PtrMemberAccess	add -> len		1182938	1					
ANR	1183104	Identifier	add		1182938	0					
ANR	1183105	Identifier	len		1182938	1					
ANR	1183106	RelationalExpression	i < to -> len		1182938	1		<			
ANR	1183107	Identifier	i		1182938	0					
ANR	1183108	PtrMemberAccess	to -> len		1182938	1					
ANR	1183109	Identifier	to		1182938	0					
ANR	1183110	Identifier	len		1182938	1					
ANR	1183111	CompoundStatement		25:55:504:504	1182938	1					
ANR	1183112	ExpressionStatement	to -> reach_end = 0	4274:4:95487:95504	1182938	0	True				
ANR	1183113	AssignmentExpression	to -> reach_end = 0		1182938	0		=			
ANR	1183114	PtrMemberAccess	to -> reach_end		1182938	0					
ANR	1183115	Identifier	to		1182938	0					
ANR	1183116	Identifier	reach_end		1182938	1					
ANR	1183117	PrimaryExpression	0		1182938	1					
ANR	1183118	ExpressionStatement	to -> len = i	4276:2:95512:95523	1182938	5	True				
ANR	1183119	AssignmentExpression	to -> len = i		1182938	0		=			
ANR	1183120	PtrMemberAccess	to -> len		1182938	0					
ANR	1183121	Identifier	to		1182938	0					
ANR	1183122	Identifier	len		1182938	1					
ANR	1183123	Identifier	i		1182938	1					
ANR	1183124	ExpressionStatement	to -> ignore_case |= add -> ignore_case	4277:2:95527:95562	1182938	6	True				
ANR	1183125	AssignmentExpression	to -> ignore_case |= add -> ignore_case		1182938	0		|=			
ANR	1183126	PtrMemberAccess	to -> ignore_case		1182938	0					
ANR	1183127	Identifier	to		1182938	0					
ANR	1183128	Identifier	ignore_case		1182938	1					
ANR	1183129	PtrMemberAccess	add -> ignore_case		1182938	1					
ANR	1183130	Identifier	add		1182938	0					
ANR	1183131	Identifier	ignore_case		1182938	1					
ANR	1183132	ExpressionStatement	"alt_merge_opt_anc_info ( & to -> anc , & add -> anc )"	4279:2:95567:95610	1182938	7	True				
ANR	1183133	CallExpression	"alt_merge_opt_anc_info ( & to -> anc , & add -> anc )"		1182938	0					
ANR	1183134	Callee	alt_merge_opt_anc_info		1182938	0					
ANR	1183135	Identifier	alt_merge_opt_anc_info		1182938	0					
ANR	1183136	ArgumentList	& to -> anc		1182938	1					
ANR	1183137	Argument	& to -> anc		1182938	0					
ANR	1183138	UnaryOperationExpression	& to -> anc		1182938	0					
ANR	1183139	UnaryOperator	&		1182938	0					
ANR	1183140	PtrMemberAccess	to -> anc		1182938	1					
ANR	1183141	Identifier	to		1182938	0					
ANR	1183142	Identifier	anc		1182938	1					
ANR	1183143	Argument	& add -> anc		1182938	1					
ANR	1183144	UnaryOperationExpression	& add -> anc		1182938	0					
ANR	1183145	UnaryOperator	&		1182938	0					
ANR	1183146	PtrMemberAccess	add -> anc		1182938	1					
ANR	1183147	Identifier	add		1182938	0					
ANR	1183148	Identifier	anc		1182938	1					
ANR	1183149	IfStatement	if ( ! to -> reach_end )		1182938	8					
ANR	1183150	Condition	! to -> reach_end	4280:6:95618:95632	1182938	0	True				
ANR	1183151	UnaryOperationExpression	! to -> reach_end		1182938	0					
ANR	1183152	UnaryOperator	!		1182938	0					
ANR	1183153	PtrMemberAccess	to -> reach_end		1182938	1					
ANR	1183154	Identifier	to		1182938	0					
ANR	1183155	Identifier	reach_end		1182938	1					
ANR	1183156	ExpressionStatement	to -> anc . right_anchor = 0	4280:23:95635:95659	1182938	1	True				
ANR	1183157	AssignmentExpression	to -> anc . right_anchor = 0		1182938	0		=			
ANR	1183158	MemberAccess	to -> anc . right_anchor		1182938	0					
ANR	1183159	PtrMemberAccess	to -> anc		1182938	0					
ANR	1183160	Identifier	to		1182938	0					
ANR	1183161	Identifier	anc		1182938	1					
ANR	1183162	Identifier	right_anchor		1182938	1					
ANR	1183163	PrimaryExpression	0		1182938	1					
ANR	1183164	ReturnType	static void		1182938	1					
ANR	1183165	Identifier	alt_merge_opt_exact_info		1182938	2					
ANR	1183166	ParameterList	"OptExactInfo * to , OptExactInfo * add , OptEnv * env"		1182938	3					
ANR	1183167	Parameter	OptExactInfo * to	4248:25:94926:94941	1182938	0	True				
ANR	1183168	ParameterType	OptExactInfo *		1182938	0					
ANR	1183169	Identifier	to		1182938	1					
ANR	1183170	Parameter	OptExactInfo * add	4248:43:94944:94960	1182938	1	True				
ANR	1183171	ParameterType	OptExactInfo *		1182938	0					
ANR	1183172	Identifier	add		1182938	1					
ANR	1183173	Parameter	OptEnv * env	4248:62:94963:94973	1182938	2	True				
ANR	1183174	ParameterType	OptEnv *		1182938	0					
ANR	1183175	Identifier	env		1182938	1					
ANR	1183176	CFGEntryNode	ENTRY		1182938		True				
ANR	1183177	CFGExitNode	EXIT		1182938		True				
ANR	1183178	Symbol	to -> reach_end		1182938						
ANR	1183179	Symbol	* add -> s		1182938						
ANR	1183180	Symbol	to -> anc		1182938						
ANR	1183181	Symbol	& add -> anc		1182938						
ANR	1183182	Symbol	env -> enc		1182938						
ANR	1183183	Symbol	add -> ignore_case		1182938						
ANR	1183184	Symbol	add -> reach_end		1182938						
ANR	1183185	Symbol	len		1182938						
ANR	1183186	Symbol	add -> len		1182938						
ANR	1183187	Symbol	to -> len		1182938						
ANR	1183188	Symbol	to -> s		1182938						
ANR	1183189	Symbol	add -> s		1182938						
ANR	1183190	Symbol	add		1182938						
ANR	1183191	Symbol	* to		1182938						
ANR	1183192	Symbol	& to -> anc		1182938						
ANR	1183193	Symbol	* * to		1182938						
ANR	1183194	Symbol	* to -> s		1182938						
ANR	1183195	Symbol	* env		1182938						
ANR	1183196	Symbol	i		1182938						
ANR	1183197	Symbol	j		1182938						
ANR	1183198	Symbol	& add -> mmd		1182938						
ANR	1183199	Symbol	env		1182938						
ANR	1183200	Symbol	enclen		1182938						
ANR	1183201	Symbol	to -> ignore_case		1182938						
ANR	1183202	Symbol	is_equal_mml		1182938						
ANR	1183203	Symbol	& to -> mmd		1182938						
ANR	1183204	Symbol	* i		1182938						
ANR	1183205	Symbol	* add		1182938						
ANR	1183206	Symbol	* j		1182938						
ANR	1183207	Symbol	* * add		1182938						
ANR	1183208	Symbol	to		1182938						
ANR	1183209	Symbol	to -> anc . right_anchor		1182938						
ANR	1183210	Function	select_opt_exact_info	4283:0:95664:96331							
ANR	1183211	FunctionDef	"select_opt_exact_info (OnigEncoding enc , OptExactInfo * now , OptExactInfo * alt)"		1183210	0					
ANR	1183212	CompoundStatement		4285:0:95754:96331	1183210	0					
ANR	1183213	IdentifierDeclStatement	"int v1 , v2 ;"	4286:2:95758:95768	1183210	0	True				
ANR	1183214	IdentifierDecl	v1		1183210	0					
ANR	1183215	IdentifierDeclType	int		1183210	0					
ANR	1183216	Identifier	v1		1183210	1					
ANR	1183217	IdentifierDecl	v2		1183210	1					
ANR	1183218	IdentifierDeclType	int		1183210	0					
ANR	1183219	Identifier	v2		1183210	1					
ANR	1183220	ExpressionStatement	v1 = now -> len	4288:2:95773:95786	1183210	1	True				
ANR	1183221	AssignmentExpression	v1 = now -> len		1183210	0		=			
ANR	1183222	Identifier	v1		1183210	0					
ANR	1183223	PtrMemberAccess	now -> len		1183210	1					
ANR	1183224	Identifier	now		1183210	0					
ANR	1183225	Identifier	len		1183210	1					
ANR	1183226	ExpressionStatement	v2 = alt -> len	4289:2:95790:95803	1183210	2	True				
ANR	1183227	AssignmentExpression	v2 = alt -> len		1183210	0		=			
ANR	1183228	Identifier	v2		1183210	0					
ANR	1183229	PtrMemberAccess	alt -> len		1183210	1					
ANR	1183230	Identifier	alt		1183210	0					
ANR	1183231	Identifier	len		1183210	1					
ANR	1183232	IfStatement	if ( v2 == 0 )		1183210	3					
ANR	1183233	Condition	v2 == 0	4291:6:95812:95818	1183210	0	True				
ANR	1183234	EqualityExpression	v2 == 0		1183210	0		==			
ANR	1183235	Identifier	v2		1183210	0					
ANR	1183236	PrimaryExpression	0		1183210	1					
ANR	1183237	CompoundStatement		7:15:66:66	1183210	1					
ANR	1183238	ReturnStatement	return ;	4292:4:95827:95834	1183210	0	True				
ANR	1183239	ElseStatement	else		1183210	0					
ANR	1183240	IfStatement	if ( v1 == 0 )		1183210	0					
ANR	1183241	Condition	v1 == 0	4294:11:95851:95857	1183210	0	True				
ANR	1183242	EqualityExpression	v1 == 0		1183210	0		==			
ANR	1183243	Identifier	v1		1183210	0					
ANR	1183244	PrimaryExpression	0		1183210	1					
ANR	1183245	CompoundStatement		10:20:105:105	1183210	1					
ANR	1183246	ExpressionStatement	"copy_opt_exact_info ( now , alt )"	4295:4:95866:95895	1183210	0	True				
ANR	1183247	CallExpression	"copy_opt_exact_info ( now , alt )"		1183210	0					
ANR	1183248	Callee	copy_opt_exact_info		1183210	0					
ANR	1183249	Identifier	copy_opt_exact_info		1183210	0					
ANR	1183250	ArgumentList	now		1183210	1					
ANR	1183251	Argument	now		1183210	0					
ANR	1183252	Identifier	now		1183210	0					
ANR	1183253	Argument	alt		1183210	1					
ANR	1183254	Identifier	alt		1183210	0					
ANR	1183255	ReturnStatement	return ;	4296:4:95901:95908	1183210	1	True				
ANR	1183256	ElseStatement	else		1183210	0					
ANR	1183257	IfStatement	if ( v1 <= 2 && v2 <= 2 )		1183210	0					
ANR	1183258	Condition	v1 <= 2 && v2 <= 2	4298:11:95925:95942	1183210	0	True				
ANR	1183259	AndExpression	v1 <= 2 && v2 <= 2		1183210	0		&&			
ANR	1183260	RelationalExpression	v1 <= 2		1183210	0		<=			
ANR	1183261	Identifier	v1		1183210	0					
ANR	1183262	PrimaryExpression	2		1183210	1					
ANR	1183263	RelationalExpression	v2 <= 2		1183210	1		<=			
ANR	1183264	Identifier	v2		1183210	0					
ANR	1183265	PrimaryExpression	2		1183210	1					
ANR	1183266	CompoundStatement		14:31:190:190	1183210	1					
ANR	1183267	ExpressionStatement	"v2 = map_position_value ( enc , now -> s [ 0 ] )"	4300:4:96004:96043	1183210	0	True				
ANR	1183268	AssignmentExpression	"v2 = map_position_value ( enc , now -> s [ 0 ] )"		1183210	0		=			
ANR	1183269	Identifier	v2		1183210	0					
ANR	1183270	CallExpression	"map_position_value ( enc , now -> s [ 0 ] )"		1183210	1					
ANR	1183271	Callee	map_position_value		1183210	0					
ANR	1183272	Identifier	map_position_value		1183210	0					
ANR	1183273	ArgumentList	enc		1183210	1					
ANR	1183274	Argument	enc		1183210	0					
ANR	1183275	Identifier	enc		1183210	0					
ANR	1183276	Argument	now -> s [ 0 ]		1183210	1					
ANR	1183277	ArrayIndexing	now -> s [ 0 ]		1183210	0					
ANR	1183278	PtrMemberAccess	now -> s		1183210	0					
ANR	1183279	Identifier	now		1183210	0					
ANR	1183280	Identifier	s		1183210	1					
ANR	1183281	PrimaryExpression	0		1183210	1					
ANR	1183282	ExpressionStatement	"v1 = map_position_value ( enc , alt -> s [ 0 ] )"	4301:4:96049:96088	1183210	1	True				
ANR	1183283	AssignmentExpression	"v1 = map_position_value ( enc , alt -> s [ 0 ] )"		1183210	0		=			
ANR	1183284	Identifier	v1		1183210	0					
ANR	1183285	CallExpression	"map_position_value ( enc , alt -> s [ 0 ] )"		1183210	1					
ANR	1183286	Callee	map_position_value		1183210	0					
ANR	1183287	Identifier	map_position_value		1183210	0					
ANR	1183288	ArgumentList	enc		1183210	1					
ANR	1183289	Argument	enc		1183210	0					
ANR	1183290	Identifier	enc		1183210	0					
ANR	1183291	Argument	alt -> s [ 0 ]		1183210	1					
ANR	1183292	ArrayIndexing	alt -> s [ 0 ]		1183210	0					
ANR	1183293	PtrMemberAccess	alt -> s		1183210	0					
ANR	1183294	Identifier	alt		1183210	0					
ANR	1183295	Identifier	s		1183210	1					
ANR	1183296	PrimaryExpression	0		1183210	1					
ANR	1183297	IfStatement	if ( now -> len > 1 )		1183210	2					
ANR	1183298	Condition	now -> len > 1	4303:8:96099:96110	1183210	0	True				
ANR	1183299	RelationalExpression	now -> len > 1		1183210	0		>			
ANR	1183300	PtrMemberAccess	now -> len		1183210	0					
ANR	1183301	Identifier	now		1183210	0					
ANR	1183302	Identifier	len		1183210	1					
ANR	1183303	PrimaryExpression	1		1183210	1					
ANR	1183304	ExpressionStatement	v1 += 5	4303:22:96113:96120	1183210	1	True				
ANR	1183305	AssignmentExpression	v1 += 5		1183210	0		+=			
ANR	1183306	Identifier	v1		1183210	0					
ANR	1183307	PrimaryExpression	5		1183210	1					
ANR	1183308	IfStatement	if ( alt -> len > 1 )		1183210	3					
ANR	1183309	Condition	alt -> len > 1	4304:8:96130:96141	1183210	0	True				
ANR	1183310	RelationalExpression	alt -> len > 1		1183210	0		>			
ANR	1183311	PtrMemberAccess	alt -> len		1183210	0					
ANR	1183312	Identifier	alt		1183210	0					
ANR	1183313	Identifier	len		1183210	1					
ANR	1183314	PrimaryExpression	1		1183210	1					
ANR	1183315	ExpressionStatement	v2 += 5	4304:22:96144:96151	1183210	1	True				
ANR	1183316	AssignmentExpression	v2 += 5		1183210	0		+=			
ANR	1183317	Identifier	v2		1183210	0					
ANR	1183318	PrimaryExpression	5		1183210	1					
ANR	1183319	IfStatement	if ( now -> ignore_case == 0 )		1183210	4					
ANR	1183320	Condition	now -> ignore_case == 0	4307:6:96164:96184	1183210	0	True				
ANR	1183321	EqualityExpression	now -> ignore_case == 0		1183210	0		==			
ANR	1183322	PtrMemberAccess	now -> ignore_case		1183210	0					
ANR	1183323	Identifier	now		1183210	0					
ANR	1183324	Identifier	ignore_case		1183210	1					
ANR	1183325	PrimaryExpression	0		1183210	1					
ANR	1183326	ExpressionStatement	v1 *= 2	4307:29:96187:96194	1183210	1	True				
ANR	1183327	AssignmentExpression	v1 *= 2		1183210	0		*=			
ANR	1183328	Identifier	v1		1183210	0					
ANR	1183329	PrimaryExpression	2		1183210	1					
ANR	1183330	IfStatement	if ( alt -> ignore_case == 0 )		1183210	5					
ANR	1183331	Condition	alt -> ignore_case == 0	4308:6:96202:96222	1183210	0	True				
ANR	1183332	EqualityExpression	alt -> ignore_case == 0		1183210	0		==			
ANR	1183333	PtrMemberAccess	alt -> ignore_case		1183210	0					
ANR	1183334	Identifier	alt		1183210	0					
ANR	1183335	Identifier	ignore_case		1183210	1					
ANR	1183336	PrimaryExpression	0		1183210	1					
ANR	1183337	ExpressionStatement	v2 *= 2	4308:29:96225:96232	1183210	1	True				
ANR	1183338	AssignmentExpression	v2 *= 2		1183210	0		*=			
ANR	1183339	Identifier	v2		1183210	0					
ANR	1183340	PrimaryExpression	2		1183210	1					
ANR	1183341	IfStatement	"if ( comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 ) > 0 )"		1183210	6					
ANR	1183342	Condition	"comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 ) > 0"	4310:6:96241:96293	1183210	0	True				
ANR	1183343	RelationalExpression	"comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 ) > 0"		1183210	0		>			
ANR	1183344	CallExpression	"comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 )"		1183210	0					
ANR	1183345	Callee	comp_distance_value		1183210	0					
ANR	1183346	Identifier	comp_distance_value		1183210	0					
ANR	1183347	ArgumentList	& now -> mmd		1183210	1					
ANR	1183348	Argument	& now -> mmd		1183210	0					
ANR	1183349	UnaryOperationExpression	& now -> mmd		1183210	0					
ANR	1183350	UnaryOperator	&		1183210	0					
ANR	1183351	PtrMemberAccess	now -> mmd		1183210	1					
ANR	1183352	Identifier	now		1183210	0					
ANR	1183353	Identifier	mmd		1183210	1					
ANR	1183354	Argument	& alt -> mmd		1183210	1					
ANR	1183355	UnaryOperationExpression	& alt -> mmd		1183210	0					
ANR	1183356	UnaryOperator	&		1183210	0					
ANR	1183357	PtrMemberAccess	alt -> mmd		1183210	1					
ANR	1183358	Identifier	alt		1183210	0					
ANR	1183359	Identifier	mmd		1183210	1					
ANR	1183360	Argument	v1		1183210	2					
ANR	1183361	Identifier	v1		1183210	0					
ANR	1183362	Argument	v2		1183210	3					
ANR	1183363	Identifier	v2		1183210	0					
ANR	1183364	PrimaryExpression	0		1183210	1					
ANR	1183365	ExpressionStatement	"copy_opt_exact_info ( now , alt )"	4311:4:96300:96329	1183210	1	True				
ANR	1183366	CallExpression	"copy_opt_exact_info ( now , alt )"		1183210	0					
ANR	1183367	Callee	copy_opt_exact_info		1183210	0					
ANR	1183368	Identifier	copy_opt_exact_info		1183210	0					
ANR	1183369	ArgumentList	now		1183210	1					
ANR	1183370	Argument	now		1183210	0					
ANR	1183371	Identifier	now		1183210	0					
ANR	1183372	Argument	alt		1183210	1					
ANR	1183373	Identifier	alt		1183210	0					
ANR	1183374	ReturnType	static void		1183210	1					
ANR	1183375	Identifier	select_opt_exact_info		1183210	2					
ANR	1183376	ParameterList	"OnigEncoding enc , OptExactInfo * now , OptExactInfo * alt"		1183210	3					
ANR	1183377	Parameter	OnigEncoding enc	4284:22:95698:95713	1183210	0	True				
ANR	1183378	ParameterType	OnigEncoding		1183210	0					
ANR	1183379	Identifier	enc		1183210	1					
ANR	1183380	Parameter	OptExactInfo * now	4284:40:95716:95732	1183210	1	True				
ANR	1183381	ParameterType	OptExactInfo *		1183210	0					
ANR	1183382	Identifier	now		1183210	1					
ANR	1183383	Parameter	OptExactInfo * alt	4284:59:95735:95751	1183210	2	True				
ANR	1183384	ParameterType	OptExactInfo *		1183210	0					
ANR	1183385	Identifier	alt		1183210	1					
ANR	1183386	CFGEntryNode	ENTRY		1183210		True				
ANR	1183387	CFGExitNode	EXIT		1183210		True				
ANR	1183388	Symbol	* now		1183210						
ANR	1183389	Symbol	now -> len		1183210						
ANR	1183390	Symbol	map_position_value		1183210						
ANR	1183391	Symbol	comp_distance_value		1183210						
ANR	1183392	Symbol	alt -> s		1183210						
ANR	1183393	Symbol	* alt -> s		1183210						
ANR	1183394	Symbol	alt		1183210						
ANR	1183395	Symbol	* * now		1183210						
ANR	1183396	Symbol	alt -> ignore_case		1183210						
ANR	1183397	Symbol	* alt		1183210						
ANR	1183398	Symbol	now -> s		1183210						
ANR	1183399	Symbol	now -> ignore_case		1183210						
ANR	1183400	Symbol	now		1183210						
ANR	1183401	Symbol	enc		1183210						
ANR	1183402	Symbol	v1		1183210						
ANR	1183403	Symbol	alt -> len		1183210						
ANR	1183404	Symbol	v2		1183210						
ANR	1183405	Symbol	* now -> s		1183210						
ANR	1183406	Symbol	* * alt		1183210						
ANR	1183407	Symbol	& alt -> mmd		1183210						
ANR	1183408	Symbol	& now -> mmd		1183210						
ANR	1183409	Function	clear_opt_map_info	4314:0:96334:97378							
ANR	1183410	FunctionDef	clear_opt_map_info (OptMapInfo * map)		1183409	0					
ANR	1183411	CompoundStatement		4316:0:96382:97378	1183409	0					
ANR	1183412	Statement	static	4317:2:96386:96391	1183409	0	True				
ANR	1183413	IdentifierDeclStatement	"const OptMapInfo clean_info = { { 0 , 0 } , { 0 , 0 } , 0 , { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } } ;"	4317:9:96393:97326	1183409	1	True				
ANR	1183414	IdentifierDecl	"clean_info = { { 0 , 0 } , { 0 , 0 } , 0 , { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } }"		1183409	0					
ANR	1183415	IdentifierDeclType	const OptMapInfo		1183409	0					
ANR	1183416	Identifier	clean_info		1183409	1					
ANR	1183417	AssignmentExpression	"clean_info = { { 0 , 0 } , { 0 , 0 } , 0 , { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } }"		1183409	2		=			
ANR	1183418	Identifier	clean_info		1183409	0					
ANR	1183419	InitializerList	0		1183409	1					
ANR	1183420	InitializerList	0		1183409	0					
ANR	1183421	PrimaryExpression	0		1183409	0					
ANR	1183422	PrimaryExpression	0		1183409	1					
ANR	1183423	InitializerList	0		1183409	1					
ANR	1183424	PrimaryExpression	0		1183409	0					
ANR	1183425	PrimaryExpression	0		1183409	1					
ANR	1183426	PrimaryExpression	0		1183409	2					
ANR	1183427	InitializerList	0		1183409	3					
ANR	1183428	PrimaryExpression	0		1183409	0					
ANR	1183429	PrimaryExpression	0		1183409	1					
ANR	1183430	PrimaryExpression	0		1183409	2					
ANR	1183431	PrimaryExpression	0		1183409	3					
ANR	1183432	PrimaryExpression	0		1183409	4					
ANR	1183433	PrimaryExpression	0		1183409	5					
ANR	1183434	PrimaryExpression	0		1183409	6					
ANR	1183435	PrimaryExpression	0		1183409	7					
ANR	1183436	PrimaryExpression	0		1183409	8					
ANR	1183437	PrimaryExpression	0		1183409	9					
ANR	1183438	PrimaryExpression	0		1183409	10					
ANR	1183439	PrimaryExpression	0		1183409	11					
ANR	1183440	PrimaryExpression	0		1183409	12					
ANR	1183441	PrimaryExpression	0		1183409	13					
ANR	1183442	PrimaryExpression	0		1183409	14					
ANR	1183443	PrimaryExpression	0		1183409	15					
ANR	1183444	PrimaryExpression	0		1183409	16					
ANR	1183445	PrimaryExpression	0		1183409	17					
ANR	1183446	PrimaryExpression	0		1183409	18					
ANR	1183447	PrimaryExpression	0		1183409	19					
ANR	1183448	PrimaryExpression	0		1183409	20					
ANR	1183449	PrimaryExpression	0		1183409	21					
ANR	1183450	PrimaryExpression	0		1183409	22					
ANR	1183451	PrimaryExpression	0		1183409	23					
ANR	1183452	PrimaryExpression	0		1183409	24					
ANR	1183453	PrimaryExpression	0		1183409	25					
ANR	1183454	PrimaryExpression	0		1183409	26					
ANR	1183455	PrimaryExpression	0		1183409	27					
ANR	1183456	PrimaryExpression	0		1183409	28					
ANR	1183457	PrimaryExpression	0		1183409	29					
ANR	1183458	PrimaryExpression	0		1183409	30					
ANR	1183459	PrimaryExpression	0		1183409	31					
ANR	1183460	PrimaryExpression	0		1183409	32					
ANR	1183461	PrimaryExpression	0		1183409	33					
ANR	1183462	PrimaryExpression	0		1183409	34					
ANR	1183463	PrimaryExpression	0		1183409	35					
ANR	1183464	PrimaryExpression	0		1183409	36					
ANR	1183465	PrimaryExpression	0		1183409	37					
ANR	1183466	PrimaryExpression	0		1183409	38					
ANR	1183467	PrimaryExpression	0		1183409	39					
ANR	1183468	PrimaryExpression	0		1183409	40					
ANR	1183469	PrimaryExpression	0		1183409	41					
ANR	1183470	PrimaryExpression	0		1183409	42					
ANR	1183471	PrimaryExpression	0		1183409	43					
ANR	1183472	PrimaryExpression	0		1183409	44					
ANR	1183473	PrimaryExpression	0		1183409	45					
ANR	1183474	PrimaryExpression	0		1183409	46					
ANR	1183475	PrimaryExpression	0		1183409	47					
ANR	1183476	PrimaryExpression	0		1183409	48					
ANR	1183477	PrimaryExpression	0		1183409	49					
ANR	1183478	PrimaryExpression	0		1183409	50					
ANR	1183479	PrimaryExpression	0		1183409	51					
ANR	1183480	PrimaryExpression	0		1183409	52					
ANR	1183481	PrimaryExpression	0		1183409	53					
ANR	1183482	PrimaryExpression	0		1183409	54					
ANR	1183483	PrimaryExpression	0		1183409	55					
ANR	1183484	PrimaryExpression	0		1183409	56					
ANR	1183485	PrimaryExpression	0		1183409	57					
ANR	1183486	PrimaryExpression	0		1183409	58					
ANR	1183487	PrimaryExpression	0		1183409	59					
ANR	1183488	PrimaryExpression	0		1183409	60					
ANR	1183489	PrimaryExpression	0		1183409	61					
ANR	1183490	PrimaryExpression	0		1183409	62					
ANR	1183491	PrimaryExpression	0		1183409	63					
ANR	1183492	PrimaryExpression	0		1183409	64					
ANR	1183493	PrimaryExpression	0		1183409	65					
ANR	1183494	PrimaryExpression	0		1183409	66					
ANR	1183495	PrimaryExpression	0		1183409	67					
ANR	1183496	PrimaryExpression	0		1183409	68					
ANR	1183497	PrimaryExpression	0		1183409	69					
ANR	1183498	PrimaryExpression	0		1183409	70					
ANR	1183499	PrimaryExpression	0		1183409	71					
ANR	1183500	PrimaryExpression	0		1183409	72					
ANR	1183501	PrimaryExpression	0		1183409	73					
ANR	1183502	PrimaryExpression	0		1183409	74					
ANR	1183503	PrimaryExpression	0		1183409	75					
ANR	1183504	PrimaryExpression	0		1183409	76					
ANR	1183505	PrimaryExpression	0		1183409	77					
ANR	1183506	PrimaryExpression	0		1183409	78					
ANR	1183507	PrimaryExpression	0		1183409	79					
ANR	1183508	PrimaryExpression	0		1183409	80					
ANR	1183509	PrimaryExpression	0		1183409	81					
ANR	1183510	PrimaryExpression	0		1183409	82					
ANR	1183511	PrimaryExpression	0		1183409	83					
ANR	1183512	PrimaryExpression	0		1183409	84					
ANR	1183513	PrimaryExpression	0		1183409	85					
ANR	1183514	PrimaryExpression	0		1183409	86					
ANR	1183515	PrimaryExpression	0		1183409	87					
ANR	1183516	PrimaryExpression	0		1183409	88					
ANR	1183517	PrimaryExpression	0		1183409	89					
ANR	1183518	PrimaryExpression	0		1183409	90					
ANR	1183519	PrimaryExpression	0		1183409	91					
ANR	1183520	PrimaryExpression	0		1183409	92					
ANR	1183521	PrimaryExpression	0		1183409	93					
ANR	1183522	PrimaryExpression	0		1183409	94					
ANR	1183523	PrimaryExpression	0		1183409	95					
ANR	1183524	PrimaryExpression	0		1183409	96					
ANR	1183525	PrimaryExpression	0		1183409	97					
ANR	1183526	PrimaryExpression	0		1183409	98					
ANR	1183527	PrimaryExpression	0		1183409	99					
ANR	1183528	PrimaryExpression	0		1183409	100					
ANR	1183529	PrimaryExpression	0		1183409	101					
ANR	1183530	PrimaryExpression	0		1183409	102					
ANR	1183531	PrimaryExpression	0		1183409	103					
ANR	1183532	PrimaryExpression	0		1183409	104					
ANR	1183533	PrimaryExpression	0		1183409	105					
ANR	1183534	PrimaryExpression	0		1183409	106					
ANR	1183535	PrimaryExpression	0		1183409	107					
ANR	1183536	PrimaryExpression	0		1183409	108					
ANR	1183537	PrimaryExpression	0		1183409	109					
ANR	1183538	PrimaryExpression	0		1183409	110					
ANR	1183539	PrimaryExpression	0		1183409	111					
ANR	1183540	PrimaryExpression	0		1183409	112					
ANR	1183541	PrimaryExpression	0		1183409	113					
ANR	1183542	PrimaryExpression	0		1183409	114					
ANR	1183543	PrimaryExpression	0		1183409	115					
ANR	1183544	PrimaryExpression	0		1183409	116					
ANR	1183545	PrimaryExpression	0		1183409	117					
ANR	1183546	PrimaryExpression	0		1183409	118					
ANR	1183547	PrimaryExpression	0		1183409	119					
ANR	1183548	PrimaryExpression	0		1183409	120					
ANR	1183549	PrimaryExpression	0		1183409	121					
ANR	1183550	PrimaryExpression	0		1183409	122					
ANR	1183551	PrimaryExpression	0		1183409	123					
ANR	1183552	PrimaryExpression	0		1183409	124					
ANR	1183553	PrimaryExpression	0		1183409	125					
ANR	1183554	PrimaryExpression	0		1183409	126					
ANR	1183555	PrimaryExpression	0		1183409	127					
ANR	1183556	PrimaryExpression	0		1183409	128					
ANR	1183557	PrimaryExpression	0		1183409	129					
ANR	1183558	PrimaryExpression	0		1183409	130					
ANR	1183559	PrimaryExpression	0		1183409	131					
ANR	1183560	PrimaryExpression	0		1183409	132					
ANR	1183561	PrimaryExpression	0		1183409	133					
ANR	1183562	PrimaryExpression	0		1183409	134					
ANR	1183563	PrimaryExpression	0		1183409	135					
ANR	1183564	PrimaryExpression	0		1183409	136					
ANR	1183565	PrimaryExpression	0		1183409	137					
ANR	1183566	PrimaryExpression	0		1183409	138					
ANR	1183567	PrimaryExpression	0		1183409	139					
ANR	1183568	PrimaryExpression	0		1183409	140					
ANR	1183569	PrimaryExpression	0		1183409	141					
ANR	1183570	PrimaryExpression	0		1183409	142					
ANR	1183571	PrimaryExpression	0		1183409	143					
ANR	1183572	PrimaryExpression	0		1183409	144					
ANR	1183573	PrimaryExpression	0		1183409	145					
ANR	1183574	PrimaryExpression	0		1183409	146					
ANR	1183575	PrimaryExpression	0		1183409	147					
ANR	1183576	PrimaryExpression	0		1183409	148					
ANR	1183577	PrimaryExpression	0		1183409	149					
ANR	1183578	PrimaryExpression	0		1183409	150					
ANR	1183579	PrimaryExpression	0		1183409	151					
ANR	1183580	PrimaryExpression	0		1183409	152					
ANR	1183581	PrimaryExpression	0		1183409	153					
ANR	1183582	PrimaryExpression	0		1183409	154					
ANR	1183583	PrimaryExpression	0		1183409	155					
ANR	1183584	PrimaryExpression	0		1183409	156					
ANR	1183585	PrimaryExpression	0		1183409	157					
ANR	1183586	PrimaryExpression	0		1183409	158					
ANR	1183587	PrimaryExpression	0		1183409	159					
ANR	1183588	PrimaryExpression	0		1183409	160					
ANR	1183589	PrimaryExpression	0		1183409	161					
ANR	1183590	PrimaryExpression	0		1183409	162					
ANR	1183591	PrimaryExpression	0		1183409	163					
ANR	1183592	PrimaryExpression	0		1183409	164					
ANR	1183593	PrimaryExpression	0		1183409	165					
ANR	1183594	PrimaryExpression	0		1183409	166					
ANR	1183595	PrimaryExpression	0		1183409	167					
ANR	1183596	PrimaryExpression	0		1183409	168					
ANR	1183597	PrimaryExpression	0		1183409	169					
ANR	1183598	PrimaryExpression	0		1183409	170					
ANR	1183599	PrimaryExpression	0		1183409	171					
ANR	1183600	PrimaryExpression	0		1183409	172					
ANR	1183601	PrimaryExpression	0		1183409	173					
ANR	1183602	PrimaryExpression	0		1183409	174					
ANR	1183603	PrimaryExpression	0		1183409	175					
ANR	1183604	PrimaryExpression	0		1183409	176					
ANR	1183605	PrimaryExpression	0		1183409	177					
ANR	1183606	PrimaryExpression	0		1183409	178					
ANR	1183607	PrimaryExpression	0		1183409	179					
ANR	1183608	PrimaryExpression	0		1183409	180					
ANR	1183609	PrimaryExpression	0		1183409	181					
ANR	1183610	PrimaryExpression	0		1183409	182					
ANR	1183611	PrimaryExpression	0		1183409	183					
ANR	1183612	PrimaryExpression	0		1183409	184					
ANR	1183613	PrimaryExpression	0		1183409	185					
ANR	1183614	PrimaryExpression	0		1183409	186					
ANR	1183615	PrimaryExpression	0		1183409	187					
ANR	1183616	PrimaryExpression	0		1183409	188					
ANR	1183617	PrimaryExpression	0		1183409	189					
ANR	1183618	PrimaryExpression	0		1183409	190					
ANR	1183619	PrimaryExpression	0		1183409	191					
ANR	1183620	PrimaryExpression	0		1183409	192					
ANR	1183621	PrimaryExpression	0		1183409	193					
ANR	1183622	PrimaryExpression	0		1183409	194					
ANR	1183623	PrimaryExpression	0		1183409	195					
ANR	1183624	PrimaryExpression	0		1183409	196					
ANR	1183625	PrimaryExpression	0		1183409	197					
ANR	1183626	PrimaryExpression	0		1183409	198					
ANR	1183627	PrimaryExpression	0		1183409	199					
ANR	1183628	PrimaryExpression	0		1183409	200					
ANR	1183629	PrimaryExpression	0		1183409	201					
ANR	1183630	PrimaryExpression	0		1183409	202					
ANR	1183631	PrimaryExpression	0		1183409	203					
ANR	1183632	PrimaryExpression	0		1183409	204					
ANR	1183633	PrimaryExpression	0		1183409	205					
ANR	1183634	PrimaryExpression	0		1183409	206					
ANR	1183635	PrimaryExpression	0		1183409	207					
ANR	1183636	PrimaryExpression	0		1183409	208					
ANR	1183637	PrimaryExpression	0		1183409	209					
ANR	1183638	PrimaryExpression	0		1183409	210					
ANR	1183639	PrimaryExpression	0		1183409	211					
ANR	1183640	PrimaryExpression	0		1183409	212					
ANR	1183641	PrimaryExpression	0		1183409	213					
ANR	1183642	PrimaryExpression	0		1183409	214					
ANR	1183643	PrimaryExpression	0		1183409	215					
ANR	1183644	PrimaryExpression	0		1183409	216					
ANR	1183645	PrimaryExpression	0		1183409	217					
ANR	1183646	PrimaryExpression	0		1183409	218					
ANR	1183647	PrimaryExpression	0		1183409	219					
ANR	1183648	PrimaryExpression	0		1183409	220					
ANR	1183649	PrimaryExpression	0		1183409	221					
ANR	1183650	PrimaryExpression	0		1183409	222					
ANR	1183651	PrimaryExpression	0		1183409	223					
ANR	1183652	PrimaryExpression	0		1183409	224					
ANR	1183653	PrimaryExpression	0		1183409	225					
ANR	1183654	PrimaryExpression	0		1183409	226					
ANR	1183655	PrimaryExpression	0		1183409	227					
ANR	1183656	PrimaryExpression	0		1183409	228					
ANR	1183657	PrimaryExpression	0		1183409	229					
ANR	1183658	PrimaryExpression	0		1183409	230					
ANR	1183659	PrimaryExpression	0		1183409	231					
ANR	1183660	PrimaryExpression	0		1183409	232					
ANR	1183661	PrimaryExpression	0		1183409	233					
ANR	1183662	PrimaryExpression	0		1183409	234					
ANR	1183663	PrimaryExpression	0		1183409	235					
ANR	1183664	PrimaryExpression	0		1183409	236					
ANR	1183665	PrimaryExpression	0		1183409	237					
ANR	1183666	PrimaryExpression	0		1183409	238					
ANR	1183667	PrimaryExpression	0		1183409	239					
ANR	1183668	PrimaryExpression	0		1183409	240					
ANR	1183669	PrimaryExpression	0		1183409	241					
ANR	1183670	PrimaryExpression	0		1183409	242					
ANR	1183671	PrimaryExpression	0		1183409	243					
ANR	1183672	PrimaryExpression	0		1183409	244					
ANR	1183673	PrimaryExpression	0		1183409	245					
ANR	1183674	PrimaryExpression	0		1183409	246					
ANR	1183675	PrimaryExpression	0		1183409	247					
ANR	1183676	PrimaryExpression	0		1183409	248					
ANR	1183677	PrimaryExpression	0		1183409	249					
ANR	1183678	PrimaryExpression	0		1183409	250					
ANR	1183679	PrimaryExpression	0		1183409	251					
ANR	1183680	PrimaryExpression	0		1183409	252					
ANR	1183681	PrimaryExpression	0		1183409	253					
ANR	1183682	PrimaryExpression	0		1183409	254					
ANR	1183683	PrimaryExpression	0		1183409	255					
ANR	1183684	ExpressionStatement	"xmemcpy ( map , & clean_info , sizeof ( OptMapInfo ) )"	4339:2:97331:97376	1183409	2	True				
ANR	1183685	CallExpression	"xmemcpy ( map , & clean_info , sizeof ( OptMapInfo ) )"		1183409	0					
ANR	1183686	Callee	xmemcpy		1183409	0					
ANR	1183687	Identifier	xmemcpy		1183409	0					
ANR	1183688	ArgumentList	map		1183409	1					
ANR	1183689	Argument	map		1183409	0					
ANR	1183690	Identifier	map		1183409	0					
ANR	1183691	Argument	& clean_info		1183409	1					
ANR	1183692	UnaryOperationExpression	& clean_info		1183409	0					
ANR	1183693	UnaryOperator	&		1183409	0					
ANR	1183694	Identifier	clean_info		1183409	1					
ANR	1183695	Argument	sizeof ( OptMapInfo )		1183409	2					
ANR	1183696	SizeofExpression	sizeof ( OptMapInfo )		1183409	0					
ANR	1183697	Sizeof	sizeof		1183409	0					
ANR	1183698	SizeofOperand	OptMapInfo		1183409	1					
ANR	1183699	ReturnType	static void		1183409	1					
ANR	1183700	Identifier	clear_opt_map_info		1183409	2					
ANR	1183701	ParameterList	OptMapInfo * map		1183409	3					
ANR	1183702	Parameter	OptMapInfo * map	4315:19:96365:96379	1183409	0	True				
ANR	1183703	ParameterType	OptMapInfo *		1183409	0					
ANR	1183704	Identifier	map		1183409	1					
ANR	1183705	CFGEntryNode	ENTRY		1183409		True				
ANR	1183706	CFGExitNode	EXIT		1183409		True				
ANR	1183707	Symbol	& clean_info		1183409						
ANR	1183708	Symbol	map		1183409						
ANR	1183709	Symbol	clean_info		1183409						
ANR	1183710	Function	copy_opt_map_info	4342:0:97381:97462							
ANR	1183711	FunctionDef	"copy_opt_map_info (OptMapInfo * to , OptMapInfo * from)"		1183710	0					
ANR	1183712	CompoundStatement		4344:0:97445:97462	1183710	0					
ANR	1183713	ExpressionStatement	* to = * from	4345:2:97449:97460	1183710	0	True				
ANR	1183714	AssignmentExpression	* to = * from		1183710	0		=			
ANR	1183715	UnaryOperationExpression	* to		1183710	0					
ANR	1183716	UnaryOperator	*		1183710	0					
ANR	1183717	Identifier	to		1183710	1					
ANR	1183718	UnaryOperationExpression	* from		1183710	1					
ANR	1183719	UnaryOperator	*		1183710	0					
ANR	1183720	Identifier	from		1183710	1					
ANR	1183721	ReturnType	static void		1183710	1					
ANR	1183722	Identifier	copy_opt_map_info		1183710	2					
ANR	1183723	ParameterList	"OptMapInfo * to , OptMapInfo * from"		1183710	3					
ANR	1183724	Parameter	OptMapInfo * to	4343:18:97411:97424	1183710	0	True				
ANR	1183725	ParameterType	OptMapInfo *		1183710	0					
ANR	1183726	Identifier	to		1183710	1					
ANR	1183727	Parameter	OptMapInfo * from	4343:34:97427:97442	1183710	1	True				
ANR	1183728	ParameterType	OptMapInfo *		1183710	0					
ANR	1183729	Identifier	from		1183710	1					
ANR	1183730	CFGEntryNode	ENTRY		1183710		True				
ANR	1183731	CFGExitNode	EXIT		1183710		True				
ANR	1183732	Symbol	* to		1183710						
ANR	1183733	Symbol	from		1183710						
ANR	1183734	Symbol	to		1183710						
ANR	1183735	Symbol	* from		1183710						
ANR	1183736	Function	add_char_opt_map_info	4348:0:97465:97642							
ANR	1183737	FunctionDef	"add_char_opt_map_info (OptMapInfo * map , UChar c , OnigEncoding enc)"		1183736	0					
ANR	1183738	CompoundStatement		4350:0:97543:97642	1183736	0					
ANR	1183739	IfStatement	if ( map -> map [ c ] == 0 )		1183736	0					
ANR	1183740	Condition	map -> map [ c ] == 0	4351:6:97551:97566	1183736	0	True				
ANR	1183741	EqualityExpression	map -> map [ c ] == 0		1183736	0		==			
ANR	1183742	ArrayIndexing	map -> map [ c ]		1183736	0					
ANR	1183743	PtrMemberAccess	map -> map		1183736	0					
ANR	1183744	Identifier	map		1183736	0					
ANR	1183745	Identifier	map		1183736	1					
ANR	1183746	Identifier	c		1183736	1					
ANR	1183747	PrimaryExpression	0		1183736	1					
ANR	1183748	CompoundStatement		2:24:25:25	1183736	1					
ANR	1183749	ExpressionStatement	map -> map [ c ] = 1	4352:4:97575:97590	1183736	0	True				
ANR	1183750	AssignmentExpression	map -> map [ c ] = 1		1183736	0		=			
ANR	1183751	ArrayIndexing	map -> map [ c ]		1183736	0					
ANR	1183752	PtrMemberAccess	map -> map		1183736	0					
ANR	1183753	Identifier	map		1183736	0					
ANR	1183754	Identifier	map		1183736	1					
ANR	1183755	Identifier	c		1183736	1					
ANR	1183756	PrimaryExpression	1		1183736	1					
ANR	1183757	ExpressionStatement	"map -> value += map_position_value ( enc , c )"	4353:4:97596:97636	1183736	1	True				
ANR	1183758	AssignmentExpression	"map -> value += map_position_value ( enc , c )"		1183736	0		+=			
ANR	1183759	PtrMemberAccess	map -> value		1183736	0					
ANR	1183760	Identifier	map		1183736	0					
ANR	1183761	Identifier	value		1183736	1					
ANR	1183762	CallExpression	"map_position_value ( enc , c )"		1183736	1					
ANR	1183763	Callee	map_position_value		1183736	0					
ANR	1183764	Identifier	map_position_value		1183736	0					
ANR	1183765	ArgumentList	enc		1183736	1					
ANR	1183766	Argument	enc		1183736	0					
ANR	1183767	Identifier	enc		1183736	0					
ANR	1183768	Argument	c		1183736	1					
ANR	1183769	Identifier	c		1183736	0					
ANR	1183770	ReturnType	static void		1183736	1					
ANR	1183771	Identifier	add_char_opt_map_info		1183736	2					
ANR	1183772	ParameterList	"OptMapInfo * map , UChar c , OnigEncoding enc"		1183736	3					
ANR	1183773	Parameter	OptMapInfo * map	4349:22:97499:97513	1183736	0	True				
ANR	1183774	ParameterType	OptMapInfo *		1183736	0					
ANR	1183775	Identifier	map		1183736	1					
ANR	1183776	Parameter	UChar c	4349:39:97516:97522	1183736	1	True				
ANR	1183777	ParameterType	UChar		1183736	0					
ANR	1183778	Identifier	c		1183736	1					
ANR	1183779	Parameter	OnigEncoding enc	4349:48:97525:97540	1183736	2	True				
ANR	1183780	ParameterType	OnigEncoding		1183736	0					
ANR	1183781	Identifier	enc		1183736	1					
ANR	1183782	CFGEntryNode	ENTRY		1183736		True				
ANR	1183783	CFGExitNode	EXIT		1183736		True				
ANR	1183784	Symbol	* * map		1183736						
ANR	1183785	Symbol	map_position_value		1183736						
ANR	1183786	Symbol	c		1183736						
ANR	1183787	Symbol	map -> map		1183736						
ANR	1183788	Symbol	* map		1183736						
ANR	1183789	Symbol	* map -> map		1183736						
ANR	1183790	Symbol	enc		1183736						
ANR	1183791	Symbol	map		1183736						
ANR	1183792	Symbol	* c		1183736						
ANR	1183793	Symbol	map -> value		1183736						
ANR	1183794	Function	add_char_amb_opt_map_info	4357:0:97645:98273							
ANR	1183795	FunctionDef	"add_char_amb_opt_map_info (OptMapInfo * map , UChar * p , UChar * end , OnigEncoding enc , OnigCaseFoldType case_fold_flag)"		1183794	0					
ANR	1183796	CompoundStatement		4360:0:97798:98273	1183794	0					
ANR	1183797	IdentifierDeclStatement	OnigCaseFoldCodeItem items [ ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM ] ;	4361:2:97802:97865	1183794	0	True				
ANR	1183798	IdentifierDecl	items [ ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM ]		1183794	0					
ANR	1183799	IdentifierDeclType	OnigCaseFoldCodeItem [ ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM ]		1183794	0					
ANR	1183800	Identifier	items		1183794	1					
ANR	1183801	Identifier	ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM		1183794	2					
ANR	1183802	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	4362:2:97869:97906	1183794	1	True				
ANR	1183803	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		1183794	0					
ANR	1183804	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		1183794	0					
ANR	1183805	Identifier	buf		1183794	1					
ANR	1183806	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		1183794	2					
ANR	1183807	IdentifierDeclStatement	"int i , n ;"	4363:2:97910:97918	1183794	2	True				
ANR	1183808	IdentifierDecl	i		1183794	0					
ANR	1183809	IdentifierDeclType	int		1183794	0					
ANR	1183810	Identifier	i		1183794	1					
ANR	1183811	IdentifierDecl	n		1183794	1					
ANR	1183812	IdentifierDeclType	int		1183794	0					
ANR	1183813	Identifier	n		1183794	1					
ANR	1183814	ExpressionStatement	"add_char_opt_map_info ( map , p [ 0 ] , enc )"	4365:2:97923:97960	1183794	3	True				
ANR	1183815	CallExpression	"add_char_opt_map_info ( map , p [ 0 ] , enc )"		1183794	0					
ANR	1183816	Callee	add_char_opt_map_info		1183794	0					
ANR	1183817	Identifier	add_char_opt_map_info		1183794	0					
ANR	1183818	ArgumentList	map		1183794	1					
ANR	1183819	Argument	map		1183794	0					
ANR	1183820	Identifier	map		1183794	0					
ANR	1183821	Argument	p [ 0 ]		1183794	1					
ANR	1183822	ArrayIndexing	p [ 0 ]		1183794	0					
ANR	1183823	Identifier	p		1183794	0					
ANR	1183824	PrimaryExpression	0		1183794	1					
ANR	1183825	Argument	enc		1183794	2					
ANR	1183826	Identifier	enc		1183794	0					
ANR	1183827	ExpressionStatement	case_fold_flag = DISABLE_CASE_FOLD_MULTI_CHAR ( case_fold_flag )	4367:2:97965:98026	1183794	4	True				
ANR	1183828	AssignmentExpression	case_fold_flag = DISABLE_CASE_FOLD_MULTI_CHAR ( case_fold_flag )		1183794	0		=			
ANR	1183829	Identifier	case_fold_flag		1183794	0					
ANR	1183830	CallExpression	DISABLE_CASE_FOLD_MULTI_CHAR ( case_fold_flag )		1183794	1					
ANR	1183831	Callee	DISABLE_CASE_FOLD_MULTI_CHAR		1183794	0					
ANR	1183832	Identifier	DISABLE_CASE_FOLD_MULTI_CHAR		1183794	0					
ANR	1183833	ArgumentList	case_fold_flag		1183794	1					
ANR	1183834	Argument	case_fold_flag		1183794	0					
ANR	1183835	Identifier	case_fold_flag		1183794	0					
ANR	1183836	ExpressionStatement	"n = ONIGENC_GET_CASE_FOLD_CODES_BY_STR ( enc , case_fold_flag , p , end , items )"	4368:2:98030:98104	1183794	5	True				
ANR	1183837	AssignmentExpression	"n = ONIGENC_GET_CASE_FOLD_CODES_BY_STR ( enc , case_fold_flag , p , end , items )"		1183794	0		=			
ANR	1183838	Identifier	n		1183794	0					
ANR	1183839	CallExpression	"ONIGENC_GET_CASE_FOLD_CODES_BY_STR ( enc , case_fold_flag , p , end , items )"		1183794	1					
ANR	1183840	Callee	ONIGENC_GET_CASE_FOLD_CODES_BY_STR		1183794	0					
ANR	1183841	Identifier	ONIGENC_GET_CASE_FOLD_CODES_BY_STR		1183794	0					
ANR	1183842	ArgumentList	enc		1183794	1					
ANR	1183843	Argument	enc		1183794	0					
ANR	1183844	Identifier	enc		1183794	0					
ANR	1183845	Argument	case_fold_flag		1183794	1					
ANR	1183846	Identifier	case_fold_flag		1183794	0					
ANR	1183847	Argument	p		1183794	2					
ANR	1183848	Identifier	p		1183794	0					
ANR	1183849	Argument	end		1183794	3					
ANR	1183850	Identifier	end		1183794	0					
ANR	1183851	Argument	items		1183794	4					
ANR	1183852	Identifier	items		1183794	0					
ANR	1183853	IfStatement	if ( n < 0 )		1183794	6					
ANR	1183854	Condition	n < 0	4369:6:98112:98116	1183794	0	True				
ANR	1183855	RelationalExpression	n < 0		1183794	0		<			
ANR	1183856	Identifier	n		1183794	0					
ANR	1183857	PrimaryExpression	0		1183794	1					
ANR	1183858	ReturnStatement	return n ;	4369:13:98119:98127	1183794	1	True				
ANR	1183859	Identifier	n		1183794	0					
ANR	1183860	ForStatement	for ( i = 0 ; i < n ; i ++ )		1183794	7					
ANR	1183861	ForInit	i = 0 ;	4371:7:98137:98142	1183794	0	True				
ANR	1183862	AssignmentExpression	i = 0		1183794	0		=			
ANR	1183863	Identifier	i		1183794	0					
ANR	1183864	PrimaryExpression	0		1183794	1					
ANR	1183865	Condition	i < n	4371:14:98144:98148	1183794	1	True				
ANR	1183866	RelationalExpression	i < n		1183794	0		<			
ANR	1183867	Identifier	i		1183794	0					
ANR	1183868	Identifier	n		1183794	1					
ANR	1183869	PostIncDecOperationExpression	i ++	4371:21:98151:98153	1183794	2	True				
ANR	1183870	Identifier	i		1183794	0					
ANR	1183871	IncDec	++		1183794	1					
ANR	1183872	CompoundStatement		12:26:357:357	1183794	3					
ANR	1183873	ExpressionStatement	"ONIGENC_CODE_TO_MBC ( enc , items [ i ] . code [ 0 ] , buf )"	4372:4:98162:98209	1183794	0	True				
ANR	1183874	CallExpression	"ONIGENC_CODE_TO_MBC ( enc , items [ i ] . code [ 0 ] , buf )"		1183794	0					
ANR	1183875	Callee	ONIGENC_CODE_TO_MBC		1183794	0					
ANR	1183876	Identifier	ONIGENC_CODE_TO_MBC		1183794	0					
ANR	1183877	ArgumentList	enc		1183794	1					
ANR	1183878	Argument	enc		1183794	0					
ANR	1183879	Identifier	enc		1183794	0					
ANR	1183880	Argument	items [ i ] . code [ 0 ]		1183794	1					
ANR	1183881	ArrayIndexing	items [ i ] . code [ 0 ]		1183794	0					
ANR	1183882	MemberAccess	items [ i ] . code		1183794	0					
ANR	1183883	ArrayIndexing	items [ i ]		1183794	0					
ANR	1183884	Identifier	items		1183794	0					
ANR	1183885	Identifier	i		1183794	1					
ANR	1183886	Identifier	code		1183794	1					
ANR	1183887	PrimaryExpression	0		1183794	1					
ANR	1183888	Argument	buf		1183794	2					
ANR	1183889	Identifier	buf		1183794	0					
ANR	1183890	ExpressionStatement	"add_char_opt_map_info ( map , buf [ 0 ] , enc )"	4373:4:98215:98254	1183794	1	True				
ANR	1183891	CallExpression	"add_char_opt_map_info ( map , buf [ 0 ] , enc )"		1183794	0					
ANR	1183892	Callee	add_char_opt_map_info		1183794	0					
ANR	1183893	Identifier	add_char_opt_map_info		1183794	0					
ANR	1183894	ArgumentList	map		1183794	1					
ANR	1183895	Argument	map		1183794	0					
ANR	1183896	Identifier	map		1183794	0					
ANR	1183897	Argument	buf [ 0 ]		1183794	1					
ANR	1183898	ArrayIndexing	buf [ 0 ]		1183794	0					
ANR	1183899	Identifier	buf		1183794	0					
ANR	1183900	PrimaryExpression	0		1183794	1					
ANR	1183901	Argument	enc		1183794	2					
ANR	1183902	Identifier	enc		1183794	0					
ANR	1183903	ReturnStatement	return 0 ;	4376:2:98263:98271	1183794	8	True				
ANR	1183904	PrimaryExpression	0		1183794	0					
ANR	1183905	ReturnType	static int		1183794	1					
ANR	1183906	Identifier	add_char_amb_opt_map_info		1183794	2					
ANR	1183907	ParameterList	"OptMapInfo * map , UChar * p , UChar * end , OnigEncoding enc , OnigCaseFoldType case_fold_flag"		1183794	3					
ANR	1183908	Parameter	OptMapInfo * map	4358:26:97682:97696	1183794	0	True				
ANR	1183909	ParameterType	OptMapInfo *		1183794	0					
ANR	1183910	Identifier	map		1183794	1					
ANR	1183911	Parameter	UChar * p	4358:43:97699:97706	1183794	1	True				
ANR	1183912	ParameterType	UChar *		1183794	0					
ANR	1183913	Identifier	p		1183794	1					
ANR	1183914	Parameter	UChar * end	4358:53:97709:97718	1183794	2	True				
ANR	1183915	ParameterType	UChar *		1183794	0					
ANR	1183916	Identifier	end		1183794	1					
ANR	1183917	Parameter	OnigEncoding enc	4359:26:97747:97762	1183794	3	True				
ANR	1183918	ParameterType	OnigEncoding		1183794	0					
ANR	1183919	Identifier	enc		1183794	1					
ANR	1183920	Parameter	OnigCaseFoldType case_fold_flag	4359:44:97765:97795	1183794	4	True				
ANR	1183921	ParameterType	OnigCaseFoldType		1183794	0					
ANR	1183922	Identifier	case_fold_flag		1183794	1					
ANR	1183923	CFGEntryNode	ENTRY		1183794		True				
ANR	1183924	CFGExitNode	EXIT		1183794		True				
ANR	1183925	Symbol	* * i		1183794						
ANR	1183926	Symbol	* buf		1183794						
ANR	1183927	Symbol	* items [ i ] . code		1183794						
ANR	1183928	Symbol	items [ i ] . code		1183794						
ANR	1183929	Symbol	DISABLE_CASE_FOLD_MULTI_CHAR		1183794						
ANR	1183930	Symbol	i		1183794						
ANR	1183931	Symbol	* * items		1183794						
ANR	1183932	Symbol	n		1183794						
ANR	1183933	Symbol	p		1183794						
ANR	1183934	Symbol	case_fold_flag		1183794						
ANR	1183935	Symbol	buf		1183794						
ANR	1183936	Symbol	* i		1183794						
ANR	1183937	Symbol	* items		1183794						
ANR	1183938	Symbol	end		1183794						
ANR	1183939	Symbol	* p		1183794						
ANR	1183940	Symbol	ONIGENC_GET_CASE_FOLD_CODES_BY_STR		1183794						
ANR	1183941	Symbol	enc		1183794						
ANR	1183942	Symbol	map		1183794						
ANR	1183943	Symbol	items		1183794						
ANR	1183944	Function	select_opt_map_info	4379:0:98276:98665							
ANR	1183945	FunctionDef	"select_opt_map_info (OptMapInfo * now , OptMapInfo * alt)"		1183944	0					
ANR	1183946	CompoundStatement		4381:0:98342:98665	1183944	0					
ANR	1183947	Statement	static	4382:2:98346:98351	1183944	0	True				
ANR	1183948	IdentifierDeclStatement	int z = 1 << 15 ;	4382:9:98353:98366	1183944	1	True				
ANR	1183949	IdentifierDecl	z = 1 << 15		1183944	0					
ANR	1183950	IdentifierDeclType	int		1183944	0					
ANR	1183951	Identifier	z		1183944	1					
ANR	1183952	AssignmentExpression	z = 1 << 15		1183944	2		=			
ANR	1183953	Identifier	z		1183944	0					
ANR	1183954	ShiftExpression	1 << 15		1183944	1		<<			
ANR	1183955	PrimaryExpression	1		1183944	0					
ANR	1183956	PrimaryExpression	15		1183944	1					
ANR	1183957	IdentifierDeclStatement	"int v1 , v2 ;"	4384:2:98404:98414	1183944	2	True				
ANR	1183958	IdentifierDecl	v1		1183944	0					
ANR	1183959	IdentifierDeclType	int		1183944	0					
ANR	1183960	Identifier	v1		1183944	1					
ANR	1183961	IdentifierDecl	v2		1183944	1					
ANR	1183962	IdentifierDeclType	int		1183944	0					
ANR	1183963	Identifier	v2		1183944	1					
ANR	1183964	IfStatement	if ( alt -> value == 0 )		1183944	3					
ANR	1183965	Condition	alt -> value == 0	4386:6:98423:98437	1183944	0	True				
ANR	1183966	EqualityExpression	alt -> value == 0		1183944	0		==			
ANR	1183967	PtrMemberAccess	alt -> value		1183944	0					
ANR	1183968	Identifier	alt		1183944	0					
ANR	1183969	Identifier	value		1183944	1					
ANR	1183970	PrimaryExpression	0		1183944	1					
ANR	1183971	ReturnStatement	return ;	4386:23:98440:98447	1183944	1	True				
ANR	1183972	IfStatement	if ( now -> value == 0 )		1183944	4					
ANR	1183973	Condition	now -> value == 0	4387:6:98455:98469	1183944	0	True				
ANR	1183974	EqualityExpression	now -> value == 0		1183944	0		==			
ANR	1183975	PtrMemberAccess	now -> value		1183944	0					
ANR	1183976	Identifier	now		1183944	0					
ANR	1183977	Identifier	value		1183944	1					
ANR	1183978	PrimaryExpression	0		1183944	1					
ANR	1183979	CompoundStatement		7:23:129:129	1183944	1					
ANR	1183980	ExpressionStatement	"copy_opt_map_info ( now , alt )"	4388:4:98478:98505	1183944	0	True				
ANR	1183981	CallExpression	"copy_opt_map_info ( now , alt )"		1183944	0					
ANR	1183982	Callee	copy_opt_map_info		1183944	0					
ANR	1183983	Identifier	copy_opt_map_info		1183944	0					
ANR	1183984	ArgumentList	now		1183944	1					
ANR	1183985	Argument	now		1183944	0					
ANR	1183986	Identifier	now		1183944	0					
ANR	1183987	Argument	alt		1183944	1					
ANR	1183988	Identifier	alt		1183944	0					
ANR	1183989	ReturnStatement	return ;	4389:4:98511:98518	1183944	1	True				
ANR	1183990	ExpressionStatement	v1 = z / now -> value	4392:2:98527:98546	1183944	5	True				
ANR	1183991	AssignmentExpression	v1 = z / now -> value		1183944	0		=			
ANR	1183992	Identifier	v1		1183944	0					
ANR	1183993	MultiplicativeExpression	z / now -> value		1183944	1		/			
ANR	1183994	Identifier	z		1183944	0					
ANR	1183995	PtrMemberAccess	now -> value		1183944	1					
ANR	1183996	Identifier	now		1183944	0					
ANR	1183997	Identifier	value		1183944	1					
ANR	1183998	ExpressionStatement	v2 = z / alt -> value	4393:2:98550:98569	1183944	6	True				
ANR	1183999	AssignmentExpression	v2 = z / alt -> value		1183944	0		=			
ANR	1184000	Identifier	v2		1183944	0					
ANR	1184001	MultiplicativeExpression	z / alt -> value		1183944	1		/			
ANR	1184002	Identifier	z		1183944	0					
ANR	1184003	PtrMemberAccess	alt -> value		1183944	1					
ANR	1184004	Identifier	alt		1183944	0					
ANR	1184005	Identifier	value		1183944	1					
ANR	1184006	IfStatement	"if ( comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 ) > 0 )"		1183944	7					
ANR	1184007	Condition	"comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 ) > 0"	4394:6:98577:98629	1183944	0	True				
ANR	1184008	RelationalExpression	"comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 ) > 0"		1183944	0		>			
ANR	1184009	CallExpression	"comp_distance_value ( & now -> mmd , & alt -> mmd , v1 , v2 )"		1183944	0					
ANR	1184010	Callee	comp_distance_value		1183944	0					
ANR	1184011	Identifier	comp_distance_value		1183944	0					
ANR	1184012	ArgumentList	& now -> mmd		1183944	1					
ANR	1184013	Argument	& now -> mmd		1183944	0					
ANR	1184014	UnaryOperationExpression	& now -> mmd		1183944	0					
ANR	1184015	UnaryOperator	&		1183944	0					
ANR	1184016	PtrMemberAccess	now -> mmd		1183944	1					
ANR	1184017	Identifier	now		1183944	0					
ANR	1184018	Identifier	mmd		1183944	1					
ANR	1184019	Argument	& alt -> mmd		1183944	1					
ANR	1184020	UnaryOperationExpression	& alt -> mmd		1183944	0					
ANR	1184021	UnaryOperator	&		1183944	0					
ANR	1184022	PtrMemberAccess	alt -> mmd		1183944	1					
ANR	1184023	Identifier	alt		1183944	0					
ANR	1184024	Identifier	mmd		1183944	1					
ANR	1184025	Argument	v1		1183944	2					
ANR	1184026	Identifier	v1		1183944	0					
ANR	1184027	Argument	v2		1183944	3					
ANR	1184028	Identifier	v2		1183944	0					
ANR	1184029	PrimaryExpression	0		1183944	1					
ANR	1184030	ExpressionStatement	"copy_opt_map_info ( now , alt )"	4395:4:98636:98663	1183944	1	True				
ANR	1184031	CallExpression	"copy_opt_map_info ( now , alt )"		1183944	0					
ANR	1184032	Callee	copy_opt_map_info		1183944	0					
ANR	1184033	Identifier	copy_opt_map_info		1183944	0					
ANR	1184034	ArgumentList	now		1183944	1					
ANR	1184035	Argument	now		1183944	0					
ANR	1184036	Identifier	now		1183944	0					
ANR	1184037	Argument	alt		1183944	1					
ANR	1184038	Identifier	alt		1183944	0					
ANR	1184039	ReturnType	static void		1183944	1					
ANR	1184040	Identifier	select_opt_map_info		1183944	2					
ANR	1184041	ParameterList	"OptMapInfo * now , OptMapInfo * alt"		1183944	3					
ANR	1184042	Parameter	OptMapInfo * now	4380:20:98308:98322	1183944	0	True				
ANR	1184043	ParameterType	OptMapInfo *		1183944	0					
ANR	1184044	Identifier	now		1183944	1					
ANR	1184045	Parameter	OptMapInfo * alt	4380:37:98325:98339	1183944	1	True				
ANR	1184046	ParameterType	OptMapInfo *		1183944	0					
ANR	1184047	Identifier	alt		1183944	1					
ANR	1184048	CFGEntryNode	ENTRY		1183944		True				
ANR	1184049	CFGExitNode	EXIT		1183944		True				
ANR	1184050	Symbol	* now		1183944						
ANR	1184051	Symbol	now -> value		1183944						
ANR	1184052	Symbol	comp_distance_value		1183944						
ANR	1184053	Symbol	alt -> value		1183944						
ANR	1184054	Symbol	now		1183944						
ANR	1184055	Symbol	alt		1183944						
ANR	1184056	Symbol	z		1183944						
ANR	1184057	Symbol	v1		1183944						
ANR	1184058	Symbol	v2		1183944						
ANR	1184059	Symbol	* alt		1183944						
ANR	1184060	Symbol	& alt -> mmd		1183944						
ANR	1184061	Symbol	& now -> mmd		1183944						
ANR	1184062	Function	comp_opt_exact_or_map_info	4398:0:98668:98966							
ANR	1184063	FunctionDef	"comp_opt_exact_or_map_info (OptExactInfo * e , OptMapInfo * m)"		1184062	0					
ANR	1184064	CompoundStatement		4400:0:98738:98966	1184062	0					
ANR	1184065	Statement	define	4401:1:98741:98746	1184062	0	True				
ANR	1184066	Statement	COMP_EM_BASE	4401:8:98748:98759	1184062	1	True				
ANR	1184067	Statement	20	4401:22:98762:98763	1184062	2	True				
ANR	1184068	IdentifierDeclStatement	"int ve , vm ;"	4402:2:98767:98777	1184062	3	True				
ANR	1184069	IdentifierDecl	ve		1184062	0					
ANR	1184070	IdentifierDeclType	int		1184062	0					
ANR	1184071	Identifier	ve		1184062	1					
ANR	1184072	IdentifierDecl	vm		1184062	1					
ANR	1184073	IdentifierDeclType	int		1184062	0					
ANR	1184074	Identifier	vm		1184062	1					
ANR	1184075	IfStatement	if ( m -> value <= 0 )		1184062	4					
ANR	1184076	Condition	m -> value <= 0	4404:6:98786:98798	1184062	0	True				
ANR	1184077	RelationalExpression	m -> value <= 0		1184062	0		<=			
ANR	1184078	PtrMemberAccess	m -> value		1184062	0					
ANR	1184079	Identifier	m		1184062	0					
ANR	1184080	Identifier	value		1184062	1					
ANR	1184081	PrimaryExpression	0		1184062	1					
ANR	1184082	ReturnStatement	return - 1 ;	4404:21:98801:98810	1184062	1	True				
ANR	1184083	UnaryOperationExpression	- 1		1184062	0					
ANR	1184084	UnaryOperator	-		1184062	0					
ANR	1184085	PrimaryExpression	1		1184062	1					
ANR	1184086	ExpressionStatement	ve = COMP_EM_BASE * e -> len * ( e -> ignore_case ? 1 : 2 )	4406:2:98815:98868	1184062	5	True				
ANR	1184087	AssignmentExpression	ve = COMP_EM_BASE * e -> len * ( e -> ignore_case ? 1 : 2 )		1184062	0		=			
ANR	1184088	Identifier	ve		1184062	0					
ANR	1184089	MultiplicativeExpression	COMP_EM_BASE * e -> len * ( e -> ignore_case ? 1 : 2 )		1184062	1		*			
ANR	1184090	Identifier	COMP_EM_BASE		1184062	0					
ANR	1184091	MultiplicativeExpression	e -> len * ( e -> ignore_case ? 1 : 2 )		1184062	1		*			
ANR	1184092	PtrMemberAccess	e -> len		1184062	0					
ANR	1184093	Identifier	e		1184062	0					
ANR	1184094	Identifier	len		1184062	1					
ANR	1184095	ConditionalExpression	e -> ignore_case ? 1 : 2		1184062	1					
ANR	1184096	Condition	e -> ignore_case		1184062	0					
ANR	1184097	PtrMemberAccess	e -> ignore_case		1184062	0					
ANR	1184098	Identifier	e		1184062	0					
ANR	1184099	Identifier	ignore_case		1184062	1					
ANR	1184100	PrimaryExpression	1		1184062	1					
ANR	1184101	PrimaryExpression	2		1184062	2					
ANR	1184102	ExpressionStatement	vm = COMP_EM_BASE * 5 * 2 / m -> value	4407:2:98872:98908	1184062	6	True				
ANR	1184103	AssignmentExpression	vm = COMP_EM_BASE * 5 * 2 / m -> value		1184062	0		=			
ANR	1184104	Identifier	vm		1184062	0					
ANR	1184105	MultiplicativeExpression	COMP_EM_BASE * 5 * 2 / m -> value		1184062	1		*			
ANR	1184106	Identifier	COMP_EM_BASE		1184062	0					
ANR	1184107	MultiplicativeExpression	5 * 2 / m -> value		1184062	1		*			
ANR	1184108	PrimaryExpression	5		1184062	0					
ANR	1184109	MultiplicativeExpression	2 / m -> value		1184062	1		/			
ANR	1184110	PrimaryExpression	2		1184062	0					
ANR	1184111	PtrMemberAccess	m -> value		1184062	1					
ANR	1184112	Identifier	m		1184062	0					
ANR	1184113	Identifier	value		1184062	1					
ANR	1184114	ReturnStatement	"return comp_distance_value ( & e -> mmd , & m -> mmd , ve , vm ) ;"	4408:2:98912:98964	1184062	7	True				
ANR	1184115	CallExpression	"comp_distance_value ( & e -> mmd , & m -> mmd , ve , vm )"		1184062	0					
ANR	1184116	Callee	comp_distance_value		1184062	0					
ANR	1184117	Identifier	comp_distance_value		1184062	0					
ANR	1184118	ArgumentList	& e -> mmd		1184062	1					
ANR	1184119	Argument	& e -> mmd		1184062	0					
ANR	1184120	UnaryOperationExpression	& e -> mmd		1184062	0					
ANR	1184121	UnaryOperator	&		1184062	0					
ANR	1184122	PtrMemberAccess	e -> mmd		1184062	1					
ANR	1184123	Identifier	e		1184062	0					
ANR	1184124	Identifier	mmd		1184062	1					
ANR	1184125	Argument	& m -> mmd		1184062	1					
ANR	1184126	UnaryOperationExpression	& m -> mmd		1184062	0					
ANR	1184127	UnaryOperator	&		1184062	0					
ANR	1184128	PtrMemberAccess	m -> mmd		1184062	1					
ANR	1184129	Identifier	m		1184062	0					
ANR	1184130	Identifier	mmd		1184062	1					
ANR	1184131	Argument	ve		1184062	2					
ANR	1184132	Identifier	ve		1184062	0					
ANR	1184133	Argument	vm		1184062	3					
ANR	1184134	Identifier	vm		1184062	0					
ANR	1184135	ReturnType	static int		1184062	1					
ANR	1184136	Identifier	comp_opt_exact_or_map_info		1184062	2					
ANR	1184137	ParameterList	"OptExactInfo * e , OptMapInfo * m"		1184062	3					
ANR	1184138	Parameter	OptExactInfo * e	4399:27:98706:98720	1184062	0	True				
ANR	1184139	ParameterType	OptExactInfo *		1184062	0					
ANR	1184140	Identifier	e		1184062	1					
ANR	1184141	Parameter	OptMapInfo * m	4399:44:98723:98735	1184062	1	True				
ANR	1184142	ParameterType	OptMapInfo *		1184062	0					
ANR	1184143	Identifier	m		1184062	1					
ANR	1184144	CFGEntryNode	ENTRY		1184062		True				
ANR	1184145	CFGExitNode	EXIT		1184062		True				
ANR	1184146	Symbol	& m -> mmd		1184062						
ANR	1184147	Symbol	e -> len		1184062						
ANR	1184148	Symbol	m -> value		1184062						
ANR	1184149	Symbol	e		1184062						
ANR	1184150	Symbol	comp_distance_value		1184062						
ANR	1184151	Symbol	m		1184062						
ANR	1184152	Symbol	ve		1184062						
ANR	1184153	Symbol	* e		1184062						
ANR	1184154	Symbol	vm		1184062						
ANR	1184155	Symbol	* m		1184062						
ANR	1184156	Symbol	e -> ignore_case		1184062						
ANR	1184157	Symbol	& e -> mmd		1184062						
ANR	1184158	Symbol	COMP_EM_BASE		1184062						
ANR	1184159	Function	alt_merge_opt_map_info	4411:0:98969:99535							
ANR	1184160	FunctionDef	"alt_merge_opt_map_info (OnigEncoding enc , OptMapInfo * to , OptMapInfo * add)"		1184159	0					
ANR	1184161	CompoundStatement		4413:0:99055:99535	1184159	0					
ANR	1184162	IdentifierDeclStatement	"int i , val ;"	4414:2:99059:99069	1184159	0	True				
ANR	1184163	IdentifierDecl	i		1184159	0					
ANR	1184164	IdentifierDeclType	int		1184159	0					
ANR	1184165	Identifier	i		1184159	1					
ANR	1184166	IdentifierDecl	val		1184159	1					
ANR	1184167	IdentifierDeclType	int		1184159	0					
ANR	1184168	Identifier	val		1184159	1					
ANR	1184169	IfStatement	if ( to -> value == 0 )		1184159	1					
ANR	1184170	Condition	to -> value == 0	4417:6:99136:99149	1184159	0	True				
ANR	1184171	EqualityExpression	to -> value == 0		1184159	0		==			
ANR	1184172	PtrMemberAccess	to -> value		1184159	0					
ANR	1184173	Identifier	to		1184159	0					
ANR	1184174	Identifier	value		1184159	1					
ANR	1184175	PrimaryExpression	0		1184159	1					
ANR	1184176	ReturnStatement	return ;	4417:22:99152:99159	1184159	1	True				
ANR	1184177	IfStatement	if ( add -> value == 0 || to -> mmd . max < add -> mmd . min )		1184159	2					
ANR	1184178	Condition	add -> value == 0 || to -> mmd . max < add -> mmd . min	4418:6:99167:99211	1184159	0	True				
ANR	1184179	OrExpression	add -> value == 0 || to -> mmd . max < add -> mmd . min		1184159	0		||			
ANR	1184180	EqualityExpression	add -> value == 0		1184159	0		==			
ANR	1184181	PtrMemberAccess	add -> value		1184159	0					
ANR	1184182	Identifier	add		1184159	0					
ANR	1184183	Identifier	value		1184159	1					
ANR	1184184	PrimaryExpression	0		1184159	1					
ANR	1184185	RelationalExpression	to -> mmd . max < add -> mmd . min		1184159	1		<			
ANR	1184186	MemberAccess	to -> mmd . max		1184159	0					
ANR	1184187	PtrMemberAccess	to -> mmd		1184159	0					
ANR	1184188	Identifier	to		1184159	0					
ANR	1184189	Identifier	mmd		1184159	1					
ANR	1184190	Identifier	max		1184159	1					
ANR	1184191	MemberAccess	add -> mmd . min		1184159	1					
ANR	1184192	PtrMemberAccess	add -> mmd		1184159	0					
ANR	1184193	Identifier	add		1184159	0					
ANR	1184194	Identifier	mmd		1184159	1					
ANR	1184195	Identifier	min		1184159	1					
ANR	1184196	CompoundStatement		6:53:158:158	1184159	1					
ANR	1184197	ExpressionStatement	clear_opt_map_info ( to )	4419:4:99220:99242	1184159	0	True				
ANR	1184198	CallExpression	clear_opt_map_info ( to )		1184159	0					
ANR	1184199	Callee	clear_opt_map_info		1184159	0					
ANR	1184200	Identifier	clear_opt_map_info		1184159	0					
ANR	1184201	ArgumentList	to		1184159	1					
ANR	1184202	Argument	to		1184159	0					
ANR	1184203	Identifier	to		1184159	0					
ANR	1184204	ReturnStatement	return ;	4420:4:99248:99255	1184159	1	True				
ANR	1184205	ExpressionStatement	"alt_merge_mml ( & to -> mmd , & add -> mmd )"	4423:2:99264:99298	1184159	3	True				
ANR	1184206	CallExpression	"alt_merge_mml ( & to -> mmd , & add -> mmd )"		1184159	0					
ANR	1184207	Callee	alt_merge_mml		1184159	0					
ANR	1184208	Identifier	alt_merge_mml		1184159	0					
ANR	1184209	ArgumentList	& to -> mmd		1184159	1					
ANR	1184210	Argument	& to -> mmd		1184159	0					
ANR	1184211	UnaryOperationExpression	& to -> mmd		1184159	0					
ANR	1184212	UnaryOperator	&		1184159	0					
ANR	1184213	PtrMemberAccess	to -> mmd		1184159	1					
ANR	1184214	Identifier	to		1184159	0					
ANR	1184215	Identifier	mmd		1184159	1					
ANR	1184216	Argument	& add -> mmd		1184159	1					
ANR	1184217	UnaryOperationExpression	& add -> mmd		1184159	0					
ANR	1184218	UnaryOperator	&		1184159	0					
ANR	1184219	PtrMemberAccess	add -> mmd		1184159	1					
ANR	1184220	Identifier	add		1184159	0					
ANR	1184221	Identifier	mmd		1184159	1					
ANR	1184222	ExpressionStatement	val = 0	4425:2:99303:99310	1184159	4	True				
ANR	1184223	AssignmentExpression	val = 0		1184159	0		=			
ANR	1184224	Identifier	val		1184159	0					
ANR	1184225	PrimaryExpression	0		1184159	1					
ANR	1184226	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		1184159	5					
ANR	1184227	ForInit	i = 0 ;	4426:7:99319:99324	1184159	0	True				
ANR	1184228	AssignmentExpression	i = 0		1184159	0		=			
ANR	1184229	Identifier	i		1184159	0					
ANR	1184230	PrimaryExpression	0		1184159	1					
ANR	1184231	Condition	i < ONIG_CHAR_TABLE_SIZE	4426:14:99326:99349	1184159	1	True				
ANR	1184232	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		1184159	0		<			
ANR	1184233	Identifier	i		1184159	0					
ANR	1184234	Identifier	ONIG_CHAR_TABLE_SIZE		1184159	1					
ANR	1184235	PostIncDecOperationExpression	i ++	4426:40:99352:99354	1184159	2	True				
ANR	1184236	Identifier	i		1184159	0					
ANR	1184237	IncDec	++		1184159	1					
ANR	1184238	CompoundStatement		14:45:301:301	1184159	3					
ANR	1184239	IfStatement	if ( add -> map [ i ] )		1184159	0					
ANR	1184240	Condition	add -> map [ i ]	4427:8:99367:99377	1184159	0	True				
ANR	1184241	ArrayIndexing	add -> map [ i ]		1184159	0					
ANR	1184242	PtrMemberAccess	add -> map		1184159	0					
ANR	1184243	Identifier	add		1184159	0					
ANR	1184244	Identifier	map		1184159	1					
ANR	1184245	Identifier	i		1184159	1					
ANR	1184246	ExpressionStatement	to -> map [ i ] = 1	4428:6:99386:99400	1184159	1	True				
ANR	1184247	AssignmentExpression	to -> map [ i ] = 1		1184159	0		=			
ANR	1184248	ArrayIndexing	to -> map [ i ]		1184159	0					
ANR	1184249	PtrMemberAccess	to -> map		1184159	0					
ANR	1184250	Identifier	to		1184159	0					
ANR	1184251	Identifier	map		1184159	1					
ANR	1184252	Identifier	i		1184159	1					
ANR	1184253	PrimaryExpression	1		1184159	1					
ANR	1184254	IfStatement	if ( to -> map [ i ] )		1184159	1					
ANR	1184255	Condition	to -> map [ i ]	4430:8:99411:99420	1184159	0	True				
ANR	1184256	ArrayIndexing	to -> map [ i ]		1184159	0					
ANR	1184257	PtrMemberAccess	to -> map		1184159	0					
ANR	1184258	Identifier	to		1184159	0					
ANR	1184259	Identifier	map		1184159	1					
ANR	1184260	Identifier	i		1184159	1					
ANR	1184261	ExpressionStatement	"val += map_position_value ( enc , i )"	4431:6:99429:99462	1184159	1	True				
ANR	1184262	AssignmentExpression	"val += map_position_value ( enc , i )"		1184159	0		+=			
ANR	1184263	Identifier	val		1184159	0					
ANR	1184264	CallExpression	"map_position_value ( enc , i )"		1184159	1					
ANR	1184265	Callee	map_position_value		1184159	0					
ANR	1184266	Identifier	map_position_value		1184159	0					
ANR	1184267	ArgumentList	enc		1184159	1					
ANR	1184268	Argument	enc		1184159	0					
ANR	1184269	Identifier	enc		1184159	0					
ANR	1184270	Argument	i		1184159	1					
ANR	1184271	Identifier	i		1184159	0					
ANR	1184272	ExpressionStatement	to -> value = val	4433:2:99470:99485	1184159	6	True				
ANR	1184273	AssignmentExpression	to -> value = val		1184159	0		=			
ANR	1184274	PtrMemberAccess	to -> value		1184159	0					
ANR	1184275	Identifier	to		1184159	0					
ANR	1184276	Identifier	value		1184159	1					
ANR	1184277	Identifier	val		1184159	1					
ANR	1184278	ExpressionStatement	"alt_merge_opt_anc_info ( & to -> anc , & add -> anc )"	4435:2:99490:99533	1184159	7	True				
ANR	1184279	CallExpression	"alt_merge_opt_anc_info ( & to -> anc , & add -> anc )"		1184159	0					
ANR	1184280	Callee	alt_merge_opt_anc_info		1184159	0					
ANR	1184281	Identifier	alt_merge_opt_anc_info		1184159	0					
ANR	1184282	ArgumentList	& to -> anc		1184159	1					
ANR	1184283	Argument	& to -> anc		1184159	0					
ANR	1184284	UnaryOperationExpression	& to -> anc		1184159	0					
ANR	1184285	UnaryOperator	&		1184159	0					
ANR	1184286	PtrMemberAccess	to -> anc		1184159	1					
ANR	1184287	Identifier	to		1184159	0					
ANR	1184288	Identifier	anc		1184159	1					
ANR	1184289	Argument	& add -> anc		1184159	1					
ANR	1184290	UnaryOperationExpression	& add -> anc		1184159	0					
ANR	1184291	UnaryOperator	&		1184159	0					
ANR	1184292	PtrMemberAccess	add -> anc		1184159	1					
ANR	1184293	Identifier	add		1184159	0					
ANR	1184294	Identifier	anc		1184159	1					
ANR	1184295	ReturnType	static void		1184159	1					
ANR	1184296	Identifier	alt_merge_opt_map_info		1184159	2					
ANR	1184297	ParameterList	"OnigEncoding enc , OptMapInfo * to , OptMapInfo * add"		1184159	3					
ANR	1184298	Parameter	OnigEncoding enc	4412:23:99004:99019	1184159	0	True				
ANR	1184299	ParameterType	OnigEncoding		1184159	0					
ANR	1184300	Identifier	enc		1184159	1					
ANR	1184301	Parameter	OptMapInfo * to	4412:41:99022:99035	1184159	1	True				
ANR	1184302	ParameterType	OptMapInfo *		1184159	0					
ANR	1184303	Identifier	to		1184159	1					
ANR	1184304	Parameter	OptMapInfo * add	4412:57:99038:99052	1184159	2	True				
ANR	1184305	ParameterType	OptMapInfo *		1184159	0					
ANR	1184306	Identifier	add		1184159	1					
ANR	1184307	CFGEntryNode	ENTRY		1184159		True				
ANR	1184308	CFGExitNode	EXIT		1184159		True				
ANR	1184309	Symbol	to -> map		1184159						
ANR	1184310	Symbol	map_position_value		1184159						
ANR	1184311	Symbol	to -> mmd . max		1184159						
ANR	1184312	Symbol	& add -> anc		1184159						
ANR	1184313	Symbol	* add -> map		1184159						
ANR	1184314	Symbol	enc		1184159						
ANR	1184315	Symbol	add -> mmd . min		1184159						
ANR	1184316	Symbol	add -> map		1184159						
ANR	1184317	Symbol	* to -> map		1184159						
ANR	1184318	Symbol	add		1184159						
ANR	1184319	Symbol	val		1184159						
ANR	1184320	Symbol	to -> value		1184159						
ANR	1184321	Symbol	* to		1184159						
ANR	1184322	Symbol	& to -> anc		1184159						
ANR	1184323	Symbol	add -> value		1184159						
ANR	1184324	Symbol	add -> mmd		1184159						
ANR	1184325	Symbol	* * to		1184159						
ANR	1184326	Symbol	i		1184159						
ANR	1184327	Symbol	to -> mmd		1184159						
ANR	1184328	Symbol	& add -> mmd		1184159						
ANR	1184329	Symbol	& to -> mmd		1184159						
ANR	1184330	Symbol	ONIG_CHAR_TABLE_SIZE		1184159						
ANR	1184331	Symbol	* i		1184159						
ANR	1184332	Symbol	* add		1184159						
ANR	1184333	Symbol	* * add		1184159						
ANR	1184334	Symbol	to		1184159						
ANR	1184335	Function	set_bound_node_opt_info	4438:0:99538:99715							
ANR	1184336	FunctionDef	"set_bound_node_opt_info (NodeOptInfo * opt , MinMaxLen * mmd)"		1184335	0					
ANR	1184337	CompoundStatement		4440:0:99608:99715	1184335	0					
ANR	1184338	ExpressionStatement	"copy_mml ( & ( opt -> exb . mmd ) , mmd )"	4441:2:99612:99643	1184335	0	True				
ANR	1184339	CallExpression	"copy_mml ( & ( opt -> exb . mmd ) , mmd )"		1184335	0					
ANR	1184340	Callee	copy_mml		1184335	0					
ANR	1184341	Identifier	copy_mml		1184335	0					
ANR	1184342	ArgumentList	& ( opt -> exb . mmd )		1184335	1					
ANR	1184343	Argument	& ( opt -> exb . mmd )		1184335	0					
ANR	1184344	UnaryOperationExpression	& ( opt -> exb . mmd )		1184335	0					
ANR	1184345	UnaryOperator	&		1184335	0					
ANR	1184346	MemberAccess	opt -> exb . mmd		1184335	1					
ANR	1184347	PtrMemberAccess	opt -> exb		1184335	0					
ANR	1184348	Identifier	opt		1184335	0					
ANR	1184349	Identifier	exb		1184335	1					
ANR	1184350	Identifier	mmd		1184335	1					
ANR	1184351	Argument	mmd		1184335	1					
ANR	1184352	Identifier	mmd		1184335	0					
ANR	1184353	ExpressionStatement	"copy_mml ( & ( opt -> expr . mmd ) , mmd )"	4442:2:99647:99678	1184335	1	True				
ANR	1184354	CallExpression	"copy_mml ( & ( opt -> expr . mmd ) , mmd )"		1184335	0					
ANR	1184355	Callee	copy_mml		1184335	0					
ANR	1184356	Identifier	copy_mml		1184335	0					
ANR	1184357	ArgumentList	& ( opt -> expr . mmd )		1184335	1					
ANR	1184358	Argument	& ( opt -> expr . mmd )		1184335	0					
ANR	1184359	UnaryOperationExpression	& ( opt -> expr . mmd )		1184335	0					
ANR	1184360	UnaryOperator	&		1184335	0					
ANR	1184361	MemberAccess	opt -> expr . mmd		1184335	1					
ANR	1184362	PtrMemberAccess	opt -> expr		1184335	0					
ANR	1184363	Identifier	opt		1184335	0					
ANR	1184364	Identifier	expr		1184335	1					
ANR	1184365	Identifier	mmd		1184335	1					
ANR	1184366	Argument	mmd		1184335	1					
ANR	1184367	Identifier	mmd		1184335	0					
ANR	1184368	ExpressionStatement	"copy_mml ( & ( opt -> map . mmd ) , mmd )"	4443:2:99682:99713	1184335	2	True				
ANR	1184369	CallExpression	"copy_mml ( & ( opt -> map . mmd ) , mmd )"		1184335	0					
ANR	1184370	Callee	copy_mml		1184335	0					
ANR	1184371	Identifier	copy_mml		1184335	0					
ANR	1184372	ArgumentList	& ( opt -> map . mmd )		1184335	1					
ANR	1184373	Argument	& ( opt -> map . mmd )		1184335	0					
ANR	1184374	UnaryOperationExpression	& ( opt -> map . mmd )		1184335	0					
ANR	1184375	UnaryOperator	&		1184335	0					
ANR	1184376	MemberAccess	opt -> map . mmd		1184335	1					
ANR	1184377	PtrMemberAccess	opt -> map		1184335	0					
ANR	1184378	Identifier	opt		1184335	0					
ANR	1184379	Identifier	map		1184335	1					
ANR	1184380	Identifier	mmd		1184335	1					
ANR	1184381	Argument	mmd		1184335	1					
ANR	1184382	Identifier	mmd		1184335	0					
ANR	1184383	ReturnType	static void		1184335	1					
ANR	1184384	Identifier	set_bound_node_opt_info		1184335	2					
ANR	1184385	ParameterList	"NodeOptInfo * opt , MinMaxLen * mmd"		1184335	3					
ANR	1184386	Parameter	NodeOptInfo * opt	4439:24:99574:99589	1184335	0	True				
ANR	1184387	ParameterType	NodeOptInfo *		1184335	0					
ANR	1184388	Identifier	opt		1184335	1					
ANR	1184389	Parameter	MinMaxLen * mmd	4439:42:99592:99605	1184335	1	True				
ANR	1184390	ParameterType	MinMaxLen *		1184335	0					
ANR	1184391	Identifier	mmd		1184335	1					
ANR	1184392	CFGEntryNode	ENTRY		1184335		True				
ANR	1184393	CFGExitNode	EXIT		1184335		True				
ANR	1184394	Symbol	opt -> exb		1184335						
ANR	1184395	Symbol	opt		1184335						
ANR	1184396	Symbol	mmd		1184335						
ANR	1184397	Symbol	& opt -> map		1184335						
ANR	1184398	Symbol	& opt -> exb		1184335						
ANR	1184399	Symbol	& opt -> exb . mmd		1184335						
ANR	1184400	Symbol	opt -> map		1184335						
ANR	1184401	Symbol	& opt -> map . mmd		1184335						
ANR	1184402	Symbol	& opt -> expr . mmd		1184335						
ANR	1184403	Symbol	* opt		1184335						
ANR	1184404	Symbol	opt -> expr		1184335						
ANR	1184405	Symbol	& opt -> expr		1184335						
ANR	1184406	Function	clear_node_opt_info	4446:0:99718:99966							
ANR	1184407	FunctionDef	clear_node_opt_info (NodeOptInfo * opt)		1184406	0					
ANR	1184408	CompoundStatement		4448:0:99768:99966	1184406	0					
ANR	1184409	ExpressionStatement	clear_mml ( & opt -> len )	4449:2:99772:99792	1184406	0	True				
ANR	1184410	CallExpression	clear_mml ( & opt -> len )		1184406	0					
ANR	1184411	Callee	clear_mml		1184406	0					
ANR	1184412	Identifier	clear_mml		1184406	0					
ANR	1184413	ArgumentList	& opt -> len		1184406	1					
ANR	1184414	Argument	& opt -> len		1184406	0					
ANR	1184415	UnaryOperationExpression	& opt -> len		1184406	0					
ANR	1184416	UnaryOperator	&		1184406	0					
ANR	1184417	PtrMemberAccess	opt -> len		1184406	1					
ANR	1184418	Identifier	opt		1184406	0					
ANR	1184419	Identifier	len		1184406	1					
ANR	1184420	ExpressionStatement	clear_opt_anc_info ( & opt -> anc )	4450:2:99796:99825	1184406	1	True				
ANR	1184421	CallExpression	clear_opt_anc_info ( & opt -> anc )		1184406	0					
ANR	1184422	Callee	clear_opt_anc_info		1184406	0					
ANR	1184423	Identifier	clear_opt_anc_info		1184406	0					
ANR	1184424	ArgumentList	& opt -> anc		1184406	1					
ANR	1184425	Argument	& opt -> anc		1184406	0					
ANR	1184426	UnaryOperationExpression	& opt -> anc		1184406	0					
ANR	1184427	UnaryOperator	&		1184406	0					
ANR	1184428	PtrMemberAccess	opt -> anc		1184406	1					
ANR	1184429	Identifier	opt		1184406	0					
ANR	1184430	Identifier	anc		1184406	1					
ANR	1184431	ExpressionStatement	clear_opt_exact_info ( & opt -> exb )	4451:2:99829:99860	1184406	2	True				
ANR	1184432	CallExpression	clear_opt_exact_info ( & opt -> exb )		1184406	0					
ANR	1184433	Callee	clear_opt_exact_info		1184406	0					
ANR	1184434	Identifier	clear_opt_exact_info		1184406	0					
ANR	1184435	ArgumentList	& opt -> exb		1184406	1					
ANR	1184436	Argument	& opt -> exb		1184406	0					
ANR	1184437	UnaryOperationExpression	& opt -> exb		1184406	0					
ANR	1184438	UnaryOperator	&		1184406	0					
ANR	1184439	PtrMemberAccess	opt -> exb		1184406	1					
ANR	1184440	Identifier	opt		1184406	0					
ANR	1184441	Identifier	exb		1184406	1					
ANR	1184442	ExpressionStatement	clear_opt_exact_info ( & opt -> exm )	4452:2:99864:99895	1184406	3	True				
ANR	1184443	CallExpression	clear_opt_exact_info ( & opt -> exm )		1184406	0					
ANR	1184444	Callee	clear_opt_exact_info		1184406	0					
ANR	1184445	Identifier	clear_opt_exact_info		1184406	0					
ANR	1184446	ArgumentList	& opt -> exm		1184406	1					
ANR	1184447	Argument	& opt -> exm		1184406	0					
ANR	1184448	UnaryOperationExpression	& opt -> exm		1184406	0					
ANR	1184449	UnaryOperator	&		1184406	0					
ANR	1184450	PtrMemberAccess	opt -> exm		1184406	1					
ANR	1184451	Identifier	opt		1184406	0					
ANR	1184452	Identifier	exm		1184406	1					
ANR	1184453	ExpressionStatement	clear_opt_exact_info ( & opt -> expr )	4453:2:99899:99931	1184406	4	True				
ANR	1184454	CallExpression	clear_opt_exact_info ( & opt -> expr )		1184406	0					
ANR	1184455	Callee	clear_opt_exact_info		1184406	0					
ANR	1184456	Identifier	clear_opt_exact_info		1184406	0					
ANR	1184457	ArgumentList	& opt -> expr		1184406	1					
ANR	1184458	Argument	& opt -> expr		1184406	0					
ANR	1184459	UnaryOperationExpression	& opt -> expr		1184406	0					
ANR	1184460	UnaryOperator	&		1184406	0					
ANR	1184461	PtrMemberAccess	opt -> expr		1184406	1					
ANR	1184462	Identifier	opt		1184406	0					
ANR	1184463	Identifier	expr		1184406	1					
ANR	1184464	ExpressionStatement	clear_opt_map_info ( & opt -> map )	4454:2:99935:99964	1184406	5	True				
ANR	1184465	CallExpression	clear_opt_map_info ( & opt -> map )		1184406	0					
ANR	1184466	Callee	clear_opt_map_info		1184406	0					
ANR	1184467	Identifier	clear_opt_map_info		1184406	0					
ANR	1184468	ArgumentList	& opt -> map		1184406	1					
ANR	1184469	Argument	& opt -> map		1184406	0					
ANR	1184470	UnaryOperationExpression	& opt -> map		1184406	0					
ANR	1184471	UnaryOperator	&		1184406	0					
ANR	1184472	PtrMemberAccess	opt -> map		1184406	1					
ANR	1184473	Identifier	opt		1184406	0					
ANR	1184474	Identifier	map		1184406	1					
ANR	1184475	ReturnType	static void		1184406	1					
ANR	1184476	Identifier	clear_node_opt_info		1184406	2					
ANR	1184477	ParameterList	NodeOptInfo * opt		1184406	3					
ANR	1184478	Parameter	NodeOptInfo * opt	4447:20:99750:99765	1184406	0	True				
ANR	1184479	ParameterType	NodeOptInfo *		1184406	0					
ANR	1184480	Identifier	opt		1184406	1					
ANR	1184481	CFGEntryNode	ENTRY		1184406		True				
ANR	1184482	CFGExitNode	EXIT		1184406		True				
ANR	1184483	Symbol	opt		1184406						
ANR	1184484	Symbol	& opt -> exm		1184406						
ANR	1184485	Symbol	& opt -> map		1184406						
ANR	1184486	Symbol	& opt -> exb		1184406						
ANR	1184487	Symbol	& opt -> len		1184406						
ANR	1184488	Symbol	& opt -> anc		1184406						
ANR	1184489	Symbol	& opt -> expr		1184406						
ANR	1184490	Function	copy_node_opt_info	4457:0:99969:100053							
ANR	1184491	FunctionDef	"copy_node_opt_info (NodeOptInfo * to , NodeOptInfo * from)"		1184490	0					
ANR	1184492	CompoundStatement		4459:0:100036:100053	1184490	0					
ANR	1184493	ExpressionStatement	* to = * from	4460:2:100040:100051	1184490	0	True				
ANR	1184494	AssignmentExpression	* to = * from		1184490	0		=			
ANR	1184495	UnaryOperationExpression	* to		1184490	0					
ANR	1184496	UnaryOperator	*		1184490	0					
ANR	1184497	Identifier	to		1184490	1					
ANR	1184498	UnaryOperationExpression	* from		1184490	1					
ANR	1184499	UnaryOperator	*		1184490	0					
ANR	1184500	Identifier	from		1184490	1					
ANR	1184501	ReturnType	static void		1184490	1					
ANR	1184502	Identifier	copy_node_opt_info		1184490	2					
ANR	1184503	ParameterList	"NodeOptInfo * to , NodeOptInfo * from"		1184490	3					
ANR	1184504	Parameter	NodeOptInfo * to	4458:19:100000:100014	1184490	0	True				
ANR	1184505	ParameterType	NodeOptInfo *		1184490	0					
ANR	1184506	Identifier	to		1184490	1					
ANR	1184507	Parameter	NodeOptInfo * from	4458:36:100017:100033	1184490	1	True				
ANR	1184508	ParameterType	NodeOptInfo *		1184490	0					
ANR	1184509	Identifier	from		1184490	1					
ANR	1184510	CFGEntryNode	ENTRY		1184490		True				
ANR	1184511	CFGExitNode	EXIT		1184490		True				
ANR	1184512	Symbol	* to		1184490						
ANR	1184513	Symbol	from		1184490						
ANR	1184514	Symbol	to		1184490						
ANR	1184515	Symbol	* from		1184490						
ANR	1184516	Function	concat_left_node_opt_info	4463:0:100056:101602							
ANR	1184517	FunctionDef	"concat_left_node_opt_info (OnigEncoding enc , NodeOptInfo * to , NodeOptInfo * add)"		1184516	0					
ANR	1184518	CompoundStatement		4465:0:100147:101602	1184516	0					
ANR	1184519	IdentifierDeclStatement	"int exb_reach , exm_reach ;"	4466:2:100151:100175	1184516	0	True				
ANR	1184520	IdentifierDecl	exb_reach		1184516	0					
ANR	1184521	IdentifierDeclType	int		1184516	0					
ANR	1184522	Identifier	exb_reach		1184516	1					
ANR	1184523	IdentifierDecl	exm_reach		1184516	1					
ANR	1184524	IdentifierDeclType	int		1184516	0					
ANR	1184525	Identifier	exm_reach		1184516	1					
ANR	1184526	IdentifierDeclStatement	OptAncInfo tanc ;	4467:2:100179:100194	1184516	1	True				
ANR	1184527	IdentifierDecl	tanc		1184516	0					
ANR	1184528	IdentifierDeclType	OptAncInfo		1184516	0					
ANR	1184529	Identifier	tanc		1184516	1					
ANR	1184530	ExpressionStatement	"concat_opt_anc_info ( & tanc , & to -> anc , & add -> anc , to -> len . max , add -> len . max )"	4469:2:100199:100273	1184516	2	True				
ANR	1184531	CallExpression	"concat_opt_anc_info ( & tanc , & to -> anc , & add -> anc , to -> len . max , add -> len . max )"		1184516	0					
ANR	1184532	Callee	concat_opt_anc_info		1184516	0					
ANR	1184533	Identifier	concat_opt_anc_info		1184516	0					
ANR	1184534	ArgumentList	& tanc		1184516	1					
ANR	1184535	Argument	& tanc		1184516	0					
ANR	1184536	UnaryOperationExpression	& tanc		1184516	0					
ANR	1184537	UnaryOperator	&		1184516	0					
ANR	1184538	Identifier	tanc		1184516	1					
ANR	1184539	Argument	& to -> anc		1184516	1					
ANR	1184540	UnaryOperationExpression	& to -> anc		1184516	0					
ANR	1184541	UnaryOperator	&		1184516	0					
ANR	1184542	PtrMemberAccess	to -> anc		1184516	1					
ANR	1184543	Identifier	to		1184516	0					
ANR	1184544	Identifier	anc		1184516	1					
ANR	1184545	Argument	& add -> anc		1184516	2					
ANR	1184546	UnaryOperationExpression	& add -> anc		1184516	0					
ANR	1184547	UnaryOperator	&		1184516	0					
ANR	1184548	PtrMemberAccess	add -> anc		1184516	1					
ANR	1184549	Identifier	add		1184516	0					
ANR	1184550	Identifier	anc		1184516	1					
ANR	1184551	Argument	to -> len . max		1184516	3					
ANR	1184552	MemberAccess	to -> len . max		1184516	0					
ANR	1184553	PtrMemberAccess	to -> len		1184516	0					
ANR	1184554	Identifier	to		1184516	0					
ANR	1184555	Identifier	len		1184516	1					
ANR	1184556	Identifier	max		1184516	1					
ANR	1184557	Argument	add -> len . max		1184516	4					
ANR	1184558	MemberAccess	add -> len . max		1184516	0					
ANR	1184559	PtrMemberAccess	add -> len		1184516	0					
ANR	1184560	Identifier	add		1184516	0					
ANR	1184561	Identifier	len		1184516	1					
ANR	1184562	Identifier	max		1184516	1					
ANR	1184563	ExpressionStatement	"copy_opt_anc_info ( & to -> anc , & tanc )"	4470:2:100277:100311	1184516	3	True				
ANR	1184564	CallExpression	"copy_opt_anc_info ( & to -> anc , & tanc )"		1184516	0					
ANR	1184565	Callee	copy_opt_anc_info		1184516	0					
ANR	1184566	Identifier	copy_opt_anc_info		1184516	0					
ANR	1184567	ArgumentList	& to -> anc		1184516	1					
ANR	1184568	Argument	& to -> anc		1184516	0					
ANR	1184569	UnaryOperationExpression	& to -> anc		1184516	0					
ANR	1184570	UnaryOperator	&		1184516	0					
ANR	1184571	PtrMemberAccess	to -> anc		1184516	1					
ANR	1184572	Identifier	to		1184516	0					
ANR	1184573	Identifier	anc		1184516	1					
ANR	1184574	Argument	& tanc		1184516	1					
ANR	1184575	UnaryOperationExpression	& tanc		1184516	0					
ANR	1184576	UnaryOperator	&		1184516	0					
ANR	1184577	Identifier	tanc		1184516	1					
ANR	1184578	IfStatement	if ( add -> exb . len > 0 && to -> len . max == 0 )		1184516	4					
ANR	1184579	Condition	add -> exb . len > 0 && to -> len . max == 0	4472:6:100320:100355	1184516	0	True				
ANR	1184580	AndExpression	add -> exb . len > 0 && to -> len . max == 0		1184516	0		&&			
ANR	1184581	RelationalExpression	add -> exb . len > 0		1184516	0		>			
ANR	1184582	MemberAccess	add -> exb . len		1184516	0					
ANR	1184583	PtrMemberAccess	add -> exb		1184516	0					
ANR	1184584	Identifier	add		1184516	0					
ANR	1184585	Identifier	exb		1184516	1					
ANR	1184586	Identifier	len		1184516	1					
ANR	1184587	PrimaryExpression	0		1184516	1					
ANR	1184588	EqualityExpression	to -> len . max == 0		1184516	1		==			
ANR	1184589	MemberAccess	to -> len . max		1184516	0					
ANR	1184590	PtrMemberAccess	to -> len		1184516	0					
ANR	1184591	Identifier	to		1184516	0					
ANR	1184592	Identifier	len		1184516	1					
ANR	1184593	Identifier	max		1184516	1					
ANR	1184594	PrimaryExpression	0		1184516	1					
ANR	1184595	CompoundStatement		8:44:210:210	1184516	1					
ANR	1184596	ExpressionStatement	"concat_opt_anc_info ( & tanc , & to -> anc , & add -> exb . anc , to -> len . max , add -> len . max )"	4473:4:100364:100445	1184516	0	True				
ANR	1184597	CallExpression	"concat_opt_anc_info ( & tanc , & to -> anc , & add -> exb . anc , to -> len . max , add -> len . max )"		1184516	0					
ANR	1184598	Callee	concat_opt_anc_info		1184516	0					
ANR	1184599	Identifier	concat_opt_anc_info		1184516	0					
ANR	1184600	ArgumentList	& tanc		1184516	1					
ANR	1184601	Argument	& tanc		1184516	0					
ANR	1184602	UnaryOperationExpression	& tanc		1184516	0					
ANR	1184603	UnaryOperator	&		1184516	0					
ANR	1184604	Identifier	tanc		1184516	1					
ANR	1184605	Argument	& to -> anc		1184516	1					
ANR	1184606	UnaryOperationExpression	& to -> anc		1184516	0					
ANR	1184607	UnaryOperator	&		1184516	0					
ANR	1184608	PtrMemberAccess	to -> anc		1184516	1					
ANR	1184609	Identifier	to		1184516	0					
ANR	1184610	Identifier	anc		1184516	1					
ANR	1184611	Argument	& add -> exb . anc		1184516	2					
ANR	1184612	UnaryOperationExpression	& add -> exb . anc		1184516	0					
ANR	1184613	UnaryOperator	&		1184516	0					
ANR	1184614	MemberAccess	add -> exb . anc		1184516	1					
ANR	1184615	PtrMemberAccess	add -> exb		1184516	0					
ANR	1184616	Identifier	add		1184516	0					
ANR	1184617	Identifier	exb		1184516	1					
ANR	1184618	Identifier	anc		1184516	1					
ANR	1184619	Argument	to -> len . max		1184516	3					
ANR	1184620	MemberAccess	to -> len . max		1184516	0					
ANR	1184621	PtrMemberAccess	to -> len		1184516	0					
ANR	1184622	Identifier	to		1184516	0					
ANR	1184623	Identifier	len		1184516	1					
ANR	1184624	Identifier	max		1184516	1					
ANR	1184625	Argument	add -> len . max		1184516	4					
ANR	1184626	MemberAccess	add -> len . max		1184516	0					
ANR	1184627	PtrMemberAccess	add -> len		1184516	0					
ANR	1184628	Identifier	add		1184516	0					
ANR	1184629	Identifier	len		1184516	1					
ANR	1184630	Identifier	max		1184516	1					
ANR	1184631	ExpressionStatement	"copy_opt_anc_info ( & add -> exb . anc , & tanc )"	4475:4:100451:100490	1184516	1	True				
ANR	1184632	CallExpression	"copy_opt_anc_info ( & add -> exb . anc , & tanc )"		1184516	0					
ANR	1184633	Callee	copy_opt_anc_info		1184516	0					
ANR	1184634	Identifier	copy_opt_anc_info		1184516	0					
ANR	1184635	ArgumentList	& add -> exb . anc		1184516	1					
ANR	1184636	Argument	& add -> exb . anc		1184516	0					
ANR	1184637	UnaryOperationExpression	& add -> exb . anc		1184516	0					
ANR	1184638	UnaryOperator	&		1184516	0					
ANR	1184639	MemberAccess	add -> exb . anc		1184516	1					
ANR	1184640	PtrMemberAccess	add -> exb		1184516	0					
ANR	1184641	Identifier	add		1184516	0					
ANR	1184642	Identifier	exb		1184516	1					
ANR	1184643	Identifier	anc		1184516	1					
ANR	1184644	Argument	& tanc		1184516	1					
ANR	1184645	UnaryOperationExpression	& tanc		1184516	0					
ANR	1184646	UnaryOperator	&		1184516	0					
ANR	1184647	Identifier	tanc		1184516	1					
ANR	1184648	IfStatement	if ( add -> map . value > 0 && to -> len . max == 0 )		1184516	5					
ANR	1184649	Condition	add -> map . value > 0 && to -> len . max == 0	4478:6:100503:100540	1184516	0	True				
ANR	1184650	AndExpression	add -> map . value > 0 && to -> len . max == 0		1184516	0		&&			
ANR	1184651	RelationalExpression	add -> map . value > 0		1184516	0		>			
ANR	1184652	MemberAccess	add -> map . value		1184516	0					
ANR	1184653	PtrMemberAccess	add -> map		1184516	0					
ANR	1184654	Identifier	add		1184516	0					
ANR	1184655	Identifier	map		1184516	1					
ANR	1184656	Identifier	value		1184516	1					
ANR	1184657	PrimaryExpression	0		1184516	1					
ANR	1184658	EqualityExpression	to -> len . max == 0		1184516	1		==			
ANR	1184659	MemberAccess	to -> len . max		1184516	0					
ANR	1184660	PtrMemberAccess	to -> len		1184516	0					
ANR	1184661	Identifier	to		1184516	0					
ANR	1184662	Identifier	len		1184516	1					
ANR	1184663	Identifier	max		1184516	1					
ANR	1184664	PrimaryExpression	0		1184516	1					
ANR	1184665	CompoundStatement		14:46:395:395	1184516	1					
ANR	1184666	IfStatement	if ( add -> map . mmd . max == 0 )		1184516	0					
ANR	1184667	Condition	add -> map . mmd . max == 0	4479:8:100553:100573	1184516	0	True				
ANR	1184668	EqualityExpression	add -> map . mmd . max == 0		1184516	0		==			
ANR	1184669	MemberAccess	add -> map . mmd . max		1184516	0					
ANR	1184670	MemberAccess	add -> map . mmd		1184516	0					
ANR	1184671	PtrMemberAccess	add -> map		1184516	0					
ANR	1184672	Identifier	add		1184516	0					
ANR	1184673	Identifier	map		1184516	1					
ANR	1184674	Identifier	mmd		1184516	1					
ANR	1184675	Identifier	max		1184516	1					
ANR	1184676	PrimaryExpression	0		1184516	1					
ANR	1184677	ExpressionStatement	add -> map . anc . left_anchor |= to -> anc . left_anchor	4480:6:100582:100629	1184516	1	True				
ANR	1184678	AssignmentExpression	add -> map . anc . left_anchor |= to -> anc . left_anchor		1184516	0		|=			
ANR	1184679	MemberAccess	add -> map . anc . left_anchor		1184516	0					
ANR	1184680	MemberAccess	add -> map . anc		1184516	0					
ANR	1184681	PtrMemberAccess	add -> map		1184516	0					
ANR	1184682	Identifier	add		1184516	0					
ANR	1184683	Identifier	map		1184516	1					
ANR	1184684	Identifier	anc		1184516	1					
ANR	1184685	Identifier	left_anchor		1184516	1					
ANR	1184686	MemberAccess	to -> anc . left_anchor		1184516	1					
ANR	1184687	PtrMemberAccess	to -> anc		1184516	0					
ANR	1184688	Identifier	to		1184516	0					
ANR	1184689	Identifier	anc		1184516	1					
ANR	1184690	Identifier	left_anchor		1184516	1					
ANR	1184691	ExpressionStatement	exb_reach = to -> exb . reach_end	4483:2:100638:100667	1184516	6	True				
ANR	1184692	AssignmentExpression	exb_reach = to -> exb . reach_end		1184516	0		=			
ANR	1184693	Identifier	exb_reach		1184516	0					
ANR	1184694	MemberAccess	to -> exb . reach_end		1184516	1					
ANR	1184695	PtrMemberAccess	to -> exb		1184516	0					
ANR	1184696	Identifier	to		1184516	0					
ANR	1184697	Identifier	exb		1184516	1					
ANR	1184698	Identifier	reach_end		1184516	1					
ANR	1184699	ExpressionStatement	exm_reach = to -> exm . reach_end	4484:2:100671:100700	1184516	7	True				
ANR	1184700	AssignmentExpression	exm_reach = to -> exm . reach_end		1184516	0		=			
ANR	1184701	Identifier	exm_reach		1184516	0					
ANR	1184702	MemberAccess	to -> exm . reach_end		1184516	1					
ANR	1184703	PtrMemberAccess	to -> exm		1184516	0					
ANR	1184704	Identifier	to		1184516	0					
ANR	1184705	Identifier	exm		1184516	1					
ANR	1184706	Identifier	reach_end		1184516	1					
ANR	1184707	IfStatement	if ( add -> len . max != 0 )		1184516	8					
ANR	1184708	Condition	add -> len . max != 0	4486:6:100709:100725	1184516	0	True				
ANR	1184709	EqualityExpression	add -> len . max != 0		1184516	0		!=			
ANR	1184710	MemberAccess	add -> len . max		1184516	0					
ANR	1184711	PtrMemberAccess	add -> len		1184516	0					
ANR	1184712	Identifier	add		1184516	0					
ANR	1184713	Identifier	len		1184516	1					
ANR	1184714	Identifier	max		1184516	1					
ANR	1184715	PrimaryExpression	0		1184516	1					
ANR	1184716	ExpressionStatement	to -> exb . reach_end = to -> exm . reach_end = 0	4487:4:100732:100773	1184516	1	True				
ANR	1184717	AssignmentExpression	to -> exb . reach_end = to -> exm . reach_end = 0		1184516	0		=			
ANR	1184718	MemberAccess	to -> exb . reach_end		1184516	0					
ANR	1184719	PtrMemberAccess	to -> exb		1184516	0					
ANR	1184720	Identifier	to		1184516	0					
ANR	1184721	Identifier	exb		1184516	1					
ANR	1184722	Identifier	reach_end		1184516	1					
ANR	1184723	AssignmentExpression	to -> exm . reach_end = 0		1184516	1		=			
ANR	1184724	MemberAccess	to -> exm . reach_end		1184516	0					
ANR	1184725	PtrMemberAccess	to -> exm		1184516	0					
ANR	1184726	Identifier	to		1184516	0					
ANR	1184727	Identifier	exm		1184516	1					
ANR	1184728	Identifier	reach_end		1184516	1					
ANR	1184729	PrimaryExpression	0		1184516	1					
ANR	1184730	IfStatement	if ( add -> exb . len > 0 )		1184516	9					
ANR	1184731	Condition	add -> exb . len > 0	4489:6:100782:100797	1184516	0	True				
ANR	1184732	RelationalExpression	add -> exb . len > 0		1184516	0		>			
ANR	1184733	MemberAccess	add -> exb . len		1184516	0					
ANR	1184734	PtrMemberAccess	add -> exb		1184516	0					
ANR	1184735	Identifier	add		1184516	0					
ANR	1184736	Identifier	exb		1184516	1					
ANR	1184737	Identifier	len		1184516	1					
ANR	1184738	PrimaryExpression	0		1184516	1					
ANR	1184739	CompoundStatement		25:24:652:652	1184516	1					
ANR	1184740	IfStatement	if ( exb_reach )		1184516	0					
ANR	1184741	Condition	exb_reach	4490:8:100810:100818	1184516	0	True				
ANR	1184742	Identifier	exb_reach		1184516	0					
ANR	1184743	CompoundStatement		26:19:673:673	1184516	1					
ANR	1184744	ExpressionStatement	"concat_opt_exact_info ( & to -> exb , & add -> exb , enc )"	4491:6:100829:100876	1184516	0	True				
ANR	1184745	CallExpression	"concat_opt_exact_info ( & to -> exb , & add -> exb , enc )"		1184516	0					
ANR	1184746	Callee	concat_opt_exact_info		1184516	0					
ANR	1184747	Identifier	concat_opt_exact_info		1184516	0					
ANR	1184748	ArgumentList	& to -> exb		1184516	1					
ANR	1184749	Argument	& to -> exb		1184516	0					
ANR	1184750	UnaryOperationExpression	& to -> exb		1184516	0					
ANR	1184751	UnaryOperator	&		1184516	0					
ANR	1184752	PtrMemberAccess	to -> exb		1184516	1					
ANR	1184753	Identifier	to		1184516	0					
ANR	1184754	Identifier	exb		1184516	1					
ANR	1184755	Argument	& add -> exb		1184516	1					
ANR	1184756	UnaryOperationExpression	& add -> exb		1184516	0					
ANR	1184757	UnaryOperator	&		1184516	0					
ANR	1184758	PtrMemberAccess	add -> exb		1184516	1					
ANR	1184759	Identifier	add		1184516	0					
ANR	1184760	Identifier	exb		1184516	1					
ANR	1184761	Argument	enc		1184516	2					
ANR	1184762	Identifier	enc		1184516	0					
ANR	1184763	ExpressionStatement	clear_opt_exact_info ( & add -> exb )	4492:6:100884:100915	1184516	1	True				
ANR	1184764	CallExpression	clear_opt_exact_info ( & add -> exb )		1184516	0					
ANR	1184765	Callee	clear_opt_exact_info		1184516	0					
ANR	1184766	Identifier	clear_opt_exact_info		1184516	0					
ANR	1184767	ArgumentList	& add -> exb		1184516	1					
ANR	1184768	Argument	& add -> exb		1184516	0					
ANR	1184769	UnaryOperationExpression	& add -> exb		1184516	0					
ANR	1184770	UnaryOperator	&		1184516	0					
ANR	1184771	PtrMemberAccess	add -> exb		1184516	1					
ANR	1184772	Identifier	add		1184516	0					
ANR	1184773	Identifier	exb		1184516	1					
ANR	1184774	ElseStatement	else		1184516	0					
ANR	1184775	IfStatement	if ( exm_reach )		1184516	0					
ANR	1184776	Condition	exm_reach	4494:13:100936:100944	1184516	0	True				
ANR	1184777	Identifier	exm_reach		1184516	0					
ANR	1184778	CompoundStatement		30:24:799:799	1184516	1					
ANR	1184779	ExpressionStatement	"concat_opt_exact_info ( & to -> exm , & add -> exb , enc )"	4495:6:100955:101002	1184516	0	True				
ANR	1184780	CallExpression	"concat_opt_exact_info ( & to -> exm , & add -> exb , enc )"		1184516	0					
ANR	1184781	Callee	concat_opt_exact_info		1184516	0					
ANR	1184782	Identifier	concat_opt_exact_info		1184516	0					
ANR	1184783	ArgumentList	& to -> exm		1184516	1					
ANR	1184784	Argument	& to -> exm		1184516	0					
ANR	1184785	UnaryOperationExpression	& to -> exm		1184516	0					
ANR	1184786	UnaryOperator	&		1184516	0					
ANR	1184787	PtrMemberAccess	to -> exm		1184516	1					
ANR	1184788	Identifier	to		1184516	0					
ANR	1184789	Identifier	exm		1184516	1					
ANR	1184790	Argument	& add -> exb		1184516	1					
ANR	1184791	UnaryOperationExpression	& add -> exb		1184516	0					
ANR	1184792	UnaryOperator	&		1184516	0					
ANR	1184793	PtrMemberAccess	add -> exb		1184516	1					
ANR	1184794	Identifier	add		1184516	0					
ANR	1184795	Identifier	exb		1184516	1					
ANR	1184796	Argument	enc		1184516	2					
ANR	1184797	Identifier	enc		1184516	0					
ANR	1184798	ExpressionStatement	clear_opt_exact_info ( & add -> exb )	4496:6:101010:101041	1184516	1	True				
ANR	1184799	CallExpression	clear_opt_exact_info ( & add -> exb )		1184516	0					
ANR	1184800	Callee	clear_opt_exact_info		1184516	0					
ANR	1184801	Identifier	clear_opt_exact_info		1184516	0					
ANR	1184802	ArgumentList	& add -> exb		1184516	1					
ANR	1184803	Argument	& add -> exb		1184516	0					
ANR	1184804	UnaryOperationExpression	& add -> exb		1184516	0					
ANR	1184805	UnaryOperator	&		1184516	0					
ANR	1184806	PtrMemberAccess	add -> exb		1184516	1					
ANR	1184807	Identifier	add		1184516	0					
ANR	1184808	Identifier	exb		1184516	1					
ANR	1184809	ExpressionStatement	"select_opt_exact_info ( enc , & to -> exm , & add -> exb )"	4499:2:101055:101102	1184516	10	True				
ANR	1184810	CallExpression	"select_opt_exact_info ( enc , & to -> exm , & add -> exb )"		1184516	0					
ANR	1184811	Callee	select_opt_exact_info		1184516	0					
ANR	1184812	Identifier	select_opt_exact_info		1184516	0					
ANR	1184813	ArgumentList	enc		1184516	1					
ANR	1184814	Argument	enc		1184516	0					
ANR	1184815	Identifier	enc		1184516	0					
ANR	1184816	Argument	& to -> exm		1184516	1					
ANR	1184817	UnaryOperationExpression	& to -> exm		1184516	0					
ANR	1184818	UnaryOperator	&		1184516	0					
ANR	1184819	PtrMemberAccess	to -> exm		1184516	1					
ANR	1184820	Identifier	to		1184516	0					
ANR	1184821	Identifier	exm		1184516	1					
ANR	1184822	Argument	& add -> exb		1184516	2					
ANR	1184823	UnaryOperationExpression	& add -> exb		1184516	0					
ANR	1184824	UnaryOperator	&		1184516	0					
ANR	1184825	PtrMemberAccess	add -> exb		1184516	1					
ANR	1184826	Identifier	add		1184516	0					
ANR	1184827	Identifier	exb		1184516	1					
ANR	1184828	ExpressionStatement	"select_opt_exact_info ( enc , & to -> exm , & add -> exm )"	4500:2:101106:101153	1184516	11	True				
ANR	1184829	CallExpression	"select_opt_exact_info ( enc , & to -> exm , & add -> exm )"		1184516	0					
ANR	1184830	Callee	select_opt_exact_info		1184516	0					
ANR	1184831	Identifier	select_opt_exact_info		1184516	0					
ANR	1184832	ArgumentList	enc		1184516	1					
ANR	1184833	Argument	enc		1184516	0					
ANR	1184834	Identifier	enc		1184516	0					
ANR	1184835	Argument	& to -> exm		1184516	1					
ANR	1184836	UnaryOperationExpression	& to -> exm		1184516	0					
ANR	1184837	UnaryOperator	&		1184516	0					
ANR	1184838	PtrMemberAccess	to -> exm		1184516	1					
ANR	1184839	Identifier	to		1184516	0					
ANR	1184840	Identifier	exm		1184516	1					
ANR	1184841	Argument	& add -> exm		1184516	2					
ANR	1184842	UnaryOperationExpression	& add -> exm		1184516	0					
ANR	1184843	UnaryOperator	&		1184516	0					
ANR	1184844	PtrMemberAccess	add -> exm		1184516	1					
ANR	1184845	Identifier	add		1184516	0					
ANR	1184846	Identifier	exm		1184516	1					
ANR	1184847	IfStatement	if ( to -> expr . len > 0 )		1184516	12					
ANR	1184848	Condition	to -> expr . len > 0	4502:6:101162:101177	1184516	0	True				
ANR	1184849	RelationalExpression	to -> expr . len > 0		1184516	0		>			
ANR	1184850	MemberAccess	to -> expr . len		1184516	0					
ANR	1184851	PtrMemberAccess	to -> expr		1184516	0					
ANR	1184852	Identifier	to		1184516	0					
ANR	1184853	Identifier	expr		1184516	1					
ANR	1184854	Identifier	len		1184516	1					
ANR	1184855	PrimaryExpression	0		1184516	1					
ANR	1184856	CompoundStatement		38:24:1032:1032	1184516	1					
ANR	1184857	IfStatement	if ( add -> len . max > 0 )		1184516	0					
ANR	1184858	Condition	add -> len . max > 0	4503:8:101190:101205	1184516	0	True				
ANR	1184859	RelationalExpression	add -> len . max > 0		1184516	0		>			
ANR	1184860	MemberAccess	add -> len . max		1184516	0					
ANR	1184861	PtrMemberAccess	add -> len		1184516	0					
ANR	1184862	Identifier	add		1184516	0					
ANR	1184863	Identifier	len		1184516	1					
ANR	1184864	Identifier	max		1184516	1					
ANR	1184865	PrimaryExpression	0		1184516	1					
ANR	1184866	CompoundStatement		39:26:1060:1060	1184516	1					
ANR	1184867	IfStatement	if ( to -> expr . len > ( int ) add -> len . max )		1184516	0					
ANR	1184868	Condition	to -> expr . len > ( int ) add -> len . max	4504:10:101220:101252	1184516	0	True				
ANR	1184869	RelationalExpression	to -> expr . len > ( int ) add -> len . max		1184516	0		>			
ANR	1184870	MemberAccess	to -> expr . len		1184516	0					
ANR	1184871	PtrMemberAccess	to -> expr		1184516	0					
ANR	1184872	Identifier	to		1184516	0					
ANR	1184873	Identifier	expr		1184516	1					
ANR	1184874	Identifier	len		1184516	1					
ANR	1184875	CastExpression	( int ) add -> len . max		1184516	1					
ANR	1184876	CastTarget	int		1184516	0					
ANR	1184877	MemberAccess	add -> len . max		1184516	1					
ANR	1184878	PtrMemberAccess	add -> len		1184516	0					
ANR	1184879	Identifier	add		1184516	0					
ANR	1184880	Identifier	len		1184516	1					
ANR	1184881	Identifier	max		1184516	1					
ANR	1184882	ExpressionStatement	to -> expr . len = add -> len . max	4505:1:101256:101283	1184516	1	True				
ANR	1184883	AssignmentExpression	to -> expr . len = add -> len . max		1184516	0		=			
ANR	1184884	MemberAccess	to -> expr . len		1184516	0					
ANR	1184885	PtrMemberAccess	to -> expr		1184516	0					
ANR	1184886	Identifier	to		1184516	0					
ANR	1184887	Identifier	expr		1184516	1					
ANR	1184888	Identifier	len		1184516	1					
ANR	1184889	MemberAccess	add -> len . max		1184516	1					
ANR	1184890	PtrMemberAccess	add -> len		1184516	0					
ANR	1184891	Identifier	add		1184516	0					
ANR	1184892	Identifier	len		1184516	1					
ANR	1184893	Identifier	max		1184516	1					
ANR	1184894	IfStatement	if ( to -> expr . mmd . max == 0 )		1184516	1					
ANR	1184895	Condition	to -> expr . mmd . max == 0	4507:10:101296:101316	1184516	0	True				
ANR	1184896	EqualityExpression	to -> expr . mmd . max == 0		1184516	0		==			
ANR	1184897	MemberAccess	to -> expr . mmd . max		1184516	0					
ANR	1184898	MemberAccess	to -> expr . mmd		1184516	0					
ANR	1184899	PtrMemberAccess	to -> expr		1184516	0					
ANR	1184900	Identifier	to		1184516	0					
ANR	1184901	Identifier	expr		1184516	1					
ANR	1184902	Identifier	mmd		1184516	1					
ANR	1184903	Identifier	max		1184516	1					
ANR	1184904	PrimaryExpression	0		1184516	1					
ANR	1184905	ExpressionStatement	"select_opt_exact_info ( enc , & to -> exb , & to -> expr )"	4508:1:101320:101367	1184516	1	True				
ANR	1184906	CallExpression	"select_opt_exact_info ( enc , & to -> exb , & to -> expr )"		1184516	0					
ANR	1184907	Callee	select_opt_exact_info		1184516	0					
ANR	1184908	Identifier	select_opt_exact_info		1184516	0					
ANR	1184909	ArgumentList	enc		1184516	1					
ANR	1184910	Argument	enc		1184516	0					
ANR	1184911	Identifier	enc		1184516	0					
ANR	1184912	Argument	& to -> exb		1184516	1					
ANR	1184913	UnaryOperationExpression	& to -> exb		1184516	0					
ANR	1184914	UnaryOperator	&		1184516	0					
ANR	1184915	PtrMemberAccess	to -> exb		1184516	1					
ANR	1184916	Identifier	to		1184516	0					
ANR	1184917	Identifier	exb		1184516	1					
ANR	1184918	Argument	& to -> expr		1184516	2					
ANR	1184919	UnaryOperationExpression	& to -> expr		1184516	0					
ANR	1184920	UnaryOperator	&		1184516	0					
ANR	1184921	PtrMemberAccess	to -> expr		1184516	1					
ANR	1184922	Identifier	to		1184516	0					
ANR	1184923	Identifier	expr		1184516	1					
ANR	1184924	ElseStatement	else		1184516	0					
ANR	1184925	ExpressionStatement	"select_opt_exact_info ( enc , & to -> exm , & to -> expr )"	4510:1:101381:101428	1184516	0	True				
ANR	1184926	CallExpression	"select_opt_exact_info ( enc , & to -> exm , & to -> expr )"		1184516	0					
ANR	1184927	Callee	select_opt_exact_info		1184516	0					
ANR	1184928	Identifier	select_opt_exact_info		1184516	0					
ANR	1184929	ArgumentList	enc		1184516	1					
ANR	1184930	Argument	enc		1184516	0					
ANR	1184931	Identifier	enc		1184516	0					
ANR	1184932	Argument	& to -> exm		1184516	1					
ANR	1184933	UnaryOperationExpression	& to -> exm		1184516	0					
ANR	1184934	UnaryOperator	&		1184516	0					
ANR	1184935	PtrMemberAccess	to -> exm		1184516	1					
ANR	1184936	Identifier	to		1184516	0					
ANR	1184937	Identifier	exm		1184516	1					
ANR	1184938	Argument	& to -> expr		1184516	2					
ANR	1184939	UnaryOperationExpression	& to -> expr		1184516	0					
ANR	1184940	UnaryOperator	&		1184516	0					
ANR	1184941	PtrMemberAccess	to -> expr		1184516	1					
ANR	1184942	Identifier	to		1184516	0					
ANR	1184943	Identifier	expr		1184516	1					
ANR	1184944	ElseStatement	else		1184516	0					
ANR	1184945	IfStatement	if ( add -> expr . len > 0 )		1184516	0					
ANR	1184946	Condition	add -> expr . len > 0	4513:11:101451:101467	1184516	0	True				
ANR	1184947	RelationalExpression	add -> expr . len > 0		1184516	0		>			
ANR	1184948	MemberAccess	add -> expr . len		1184516	0					
ANR	1184949	PtrMemberAccess	add -> expr		1184516	0					
ANR	1184950	Identifier	add		1184516	0					
ANR	1184951	Identifier	expr		1184516	1					
ANR	1184952	Identifier	len		1184516	1					
ANR	1184953	PrimaryExpression	0		1184516	1					
ANR	1184954	CompoundStatement		49:30:1322:1322	1184516	1					
ANR	1184955	ExpressionStatement	"copy_opt_exact_info ( & to -> expr , & add -> expr )"	4514:4:101476:101518	1184516	0	True				
ANR	1184956	CallExpression	"copy_opt_exact_info ( & to -> expr , & add -> expr )"		1184516	0					
ANR	1184957	Callee	copy_opt_exact_info		1184516	0					
ANR	1184958	Identifier	copy_opt_exact_info		1184516	0					
ANR	1184959	ArgumentList	& to -> expr		1184516	1					
ANR	1184960	Argument	& to -> expr		1184516	0					
ANR	1184961	UnaryOperationExpression	& to -> expr		1184516	0					
ANR	1184962	UnaryOperator	&		1184516	0					
ANR	1184963	PtrMemberAccess	to -> expr		1184516	1					
ANR	1184964	Identifier	to		1184516	0					
ANR	1184965	Identifier	expr		1184516	1					
ANR	1184966	Argument	& add -> expr		1184516	1					
ANR	1184967	UnaryOperationExpression	& add -> expr		1184516	0					
ANR	1184968	UnaryOperator	&		1184516	0					
ANR	1184969	PtrMemberAccess	add -> expr		1184516	1					
ANR	1184970	Identifier	add		1184516	0					
ANR	1184971	Identifier	expr		1184516	1					
ANR	1184972	ExpressionStatement	"select_opt_map_info ( & to -> map , & add -> map )"	4517:2:101527:101567	1184516	13	True				
ANR	1184973	CallExpression	"select_opt_map_info ( & to -> map , & add -> map )"		1184516	0					
ANR	1184974	Callee	select_opt_map_info		1184516	0					
ANR	1184975	Identifier	select_opt_map_info		1184516	0					
ANR	1184976	ArgumentList	& to -> map		1184516	1					
ANR	1184977	Argument	& to -> map		1184516	0					
ANR	1184978	UnaryOperationExpression	& to -> map		1184516	0					
ANR	1184979	UnaryOperator	&		1184516	0					
ANR	1184980	PtrMemberAccess	to -> map		1184516	1					
ANR	1184981	Identifier	to		1184516	0					
ANR	1184982	Identifier	map		1184516	1					
ANR	1184983	Argument	& add -> map		1184516	1					
ANR	1184984	UnaryOperationExpression	& add -> map		1184516	0					
ANR	1184985	UnaryOperator	&		1184516	0					
ANR	1184986	PtrMemberAccess	add -> map		1184516	1					
ANR	1184987	Identifier	add		1184516	0					
ANR	1184988	Identifier	map		1184516	1					
ANR	1184989	ExpressionStatement	"add_mml ( & to -> len , & add -> len )"	4519:2:101572:101600	1184516	14	True				
ANR	1184990	CallExpression	"add_mml ( & to -> len , & add -> len )"		1184516	0					
ANR	1184991	Callee	add_mml		1184516	0					
ANR	1184992	Identifier	add_mml		1184516	0					
ANR	1184993	ArgumentList	& to -> len		1184516	1					
ANR	1184994	Argument	& to -> len		1184516	0					
ANR	1184995	UnaryOperationExpression	& to -> len		1184516	0					
ANR	1184996	UnaryOperator	&		1184516	0					
ANR	1184997	PtrMemberAccess	to -> len		1184516	1					
ANR	1184998	Identifier	to		1184516	0					
ANR	1184999	Identifier	len		1184516	1					
ANR	1185000	Argument	& add -> len		1184516	1					
ANR	1185001	UnaryOperationExpression	& add -> len		1184516	0					
ANR	1185002	UnaryOperator	&		1184516	0					
ANR	1185003	PtrMemberAccess	add -> len		1184516	1					
ANR	1185004	Identifier	add		1184516	0					
ANR	1185005	Identifier	len		1184516	1					
ANR	1185006	ReturnType	static void		1184516	1					
ANR	1185007	Identifier	concat_left_node_opt_info		1184516	2					
ANR	1185008	ParameterList	"OnigEncoding enc , NodeOptInfo * to , NodeOptInfo * add"		1184516	3					
ANR	1185009	Parameter	OnigEncoding enc	4464:26:100094:100109	1184516	0	True				
ANR	1185010	ParameterType	OnigEncoding		1184516	0					
ANR	1185011	Identifier	enc		1184516	1					
ANR	1185012	Parameter	NodeOptInfo * to	4464:44:100112:100126	1184516	1	True				
ANR	1185013	ParameterType	NodeOptInfo *		1184516	0					
ANR	1185014	Identifier	to		1184516	1					
ANR	1185015	Parameter	NodeOptInfo * add	4464:61:100129:100144	1184516	2	True				
ANR	1185016	ParameterType	NodeOptInfo *		1184516	0					
ANR	1185017	Identifier	add		1184516	1					
ANR	1185018	CFGEntryNode	ENTRY		1184516		True				
ANR	1185019	CFGExitNode	EXIT		1184516		True				
ANR	1185020	Symbol	to -> exm		1184516						
ANR	1185021	Symbol	& add -> exm		1184516						
ANR	1185022	Symbol	exb_reach		1184516						
ANR	1185023	Symbol	to -> anc		1184516						
ANR	1185024	Symbol	& add -> map		1184516						
ANR	1185025	Symbol	& add -> anc		1184516						
ANR	1185026	Symbol	to -> expr . len		1184516						
ANR	1185027	Symbol	& tanc		1184516						
ANR	1185028	Symbol	add -> map . value		1184516						
ANR	1185029	Symbol	add -> map . mmd . max		1184516						
ANR	1185030	Symbol	to -> expr		1184516						
ANR	1185031	Symbol	add -> map . mmd		1184516						
ANR	1185032	Symbol	& add -> expr		1184516						
ANR	1185033	Symbol	tanc		1184516						
ANR	1185034	Symbol	add -> len		1184516						
ANR	1185035	Symbol	to -> exb		1184516						
ANR	1185036	Symbol	to -> exm . reach_end		1184516						
ANR	1185037	Symbol	enc		1184516						
ANR	1185038	Symbol	to -> len		1184516						
ANR	1185039	Symbol	add -> map		1184516						
ANR	1185040	Symbol	& to -> expr		1184516						
ANR	1185041	Symbol	to -> anc . left_anchor		1184516						
ANR	1185042	Symbol	add		1184516						
ANR	1185043	Symbol	& to -> len		1184516						
ANR	1185044	Symbol	* to		1184516						
ANR	1185045	Symbol	& to -> anc		1184516						
ANR	1185046	Symbol	to -> len . max		1184516						
ANR	1185047	Symbol	& to -> exm		1184516						
ANR	1185048	Symbol	exm_reach		1184516						
ANR	1185049	Symbol	& to -> map		1184516						
ANR	1185050	Symbol	add -> exb . len		1184516						
ANR	1185051	Symbol	add -> exb		1184516						
ANR	1185052	Symbol	& add -> exb . anc		1184516						
ANR	1185053	Symbol	to -> expr . mmd . max		1184516						
ANR	1185054	Symbol	* add		1184516						
ANR	1185055	Symbol	add -> map . anc . left_anchor		1184516						
ANR	1185056	Symbol	to -> expr . mmd		1184516						
ANR	1185057	Symbol	add -> expr		1184516						
ANR	1185058	Symbol	add -> len . max		1184516						
ANR	1185059	Symbol	to		1184516						
ANR	1185060	Symbol	to -> exb . reach_end		1184516						
ANR	1185061	Symbol	& to -> exb		1184516						
ANR	1185062	Symbol	& add -> len		1184516						
ANR	1185063	Symbol	add -> map . anc		1184516						
ANR	1185064	Symbol	& add -> exb		1184516						
ANR	1185065	Symbol	add -> expr . len		1184516						
ANR	1185066	Function	alt_merge_node_opt_info	4522:0:101605:102004							
ANR	1185067	FunctionDef	"alt_merge_node_opt_info (NodeOptInfo * to , NodeOptInfo * add , OptEnv * env)"		1185066	0					
ANR	1185068	CompoundStatement		4524:0:101689:102004	1185066	0					
ANR	1185069	ExpressionStatement	"alt_merge_opt_anc_info ( & to -> anc , & add -> anc )"	4525:2:101693:101739	1185066	0	True				
ANR	1185070	CallExpression	"alt_merge_opt_anc_info ( & to -> anc , & add -> anc )"		1185066	0					
ANR	1185071	Callee	alt_merge_opt_anc_info		1185066	0					
ANR	1185072	Identifier	alt_merge_opt_anc_info		1185066	0					
ANR	1185073	ArgumentList	& to -> anc		1185066	1					
ANR	1185074	Argument	& to -> anc		1185066	0					
ANR	1185075	UnaryOperationExpression	& to -> anc		1185066	0					
ANR	1185076	UnaryOperator	&		1185066	0					
ANR	1185077	PtrMemberAccess	to -> anc		1185066	1					
ANR	1185078	Identifier	to		1185066	0					
ANR	1185079	Identifier	anc		1185066	1					
ANR	1185080	Argument	& add -> anc		1185066	1					
ANR	1185081	UnaryOperationExpression	& add -> anc		1185066	0					
ANR	1185082	UnaryOperator	&		1185066	0					
ANR	1185083	PtrMemberAccess	add -> anc		1185066	1					
ANR	1185084	Identifier	add		1185066	0					
ANR	1185085	Identifier	anc		1185066	1					
ANR	1185086	ExpressionStatement	"alt_merge_opt_exact_info ( & to -> exb , & add -> exb , env )"	4526:2:101743:101794	1185066	1	True				
ANR	1185087	CallExpression	"alt_merge_opt_exact_info ( & to -> exb , & add -> exb , env )"		1185066	0					
ANR	1185088	Callee	alt_merge_opt_exact_info		1185066	0					
ANR	1185089	Identifier	alt_merge_opt_exact_info		1185066	0					
ANR	1185090	ArgumentList	& to -> exb		1185066	1					
ANR	1185091	Argument	& to -> exb		1185066	0					
ANR	1185092	UnaryOperationExpression	& to -> exb		1185066	0					
ANR	1185093	UnaryOperator	&		1185066	0					
ANR	1185094	PtrMemberAccess	to -> exb		1185066	1					
ANR	1185095	Identifier	to		1185066	0					
ANR	1185096	Identifier	exb		1185066	1					
ANR	1185097	Argument	& add -> exb		1185066	1					
ANR	1185098	UnaryOperationExpression	& add -> exb		1185066	0					
ANR	1185099	UnaryOperator	&		1185066	0					
ANR	1185100	PtrMemberAccess	add -> exb		1185066	1					
ANR	1185101	Identifier	add		1185066	0					
ANR	1185102	Identifier	exb		1185066	1					
ANR	1185103	Argument	env		1185066	2					
ANR	1185104	Identifier	env		1185066	0					
ANR	1185105	ExpressionStatement	"alt_merge_opt_exact_info ( & to -> exm , & add -> exm , env )"	4527:2:101798:101849	1185066	2	True				
ANR	1185106	CallExpression	"alt_merge_opt_exact_info ( & to -> exm , & add -> exm , env )"		1185066	0					
ANR	1185107	Callee	alt_merge_opt_exact_info		1185066	0					
ANR	1185108	Identifier	alt_merge_opt_exact_info		1185066	0					
ANR	1185109	ArgumentList	& to -> exm		1185066	1					
ANR	1185110	Argument	& to -> exm		1185066	0					
ANR	1185111	UnaryOperationExpression	& to -> exm		1185066	0					
ANR	1185112	UnaryOperator	&		1185066	0					
ANR	1185113	PtrMemberAccess	to -> exm		1185066	1					
ANR	1185114	Identifier	to		1185066	0					
ANR	1185115	Identifier	exm		1185066	1					
ANR	1185116	Argument	& add -> exm		1185066	1					
ANR	1185117	UnaryOperationExpression	& add -> exm		1185066	0					
ANR	1185118	UnaryOperator	&		1185066	0					
ANR	1185119	PtrMemberAccess	add -> exm		1185066	1					
ANR	1185120	Identifier	add		1185066	0					
ANR	1185121	Identifier	exm		1185066	1					
ANR	1185122	Argument	env		1185066	2					
ANR	1185123	Identifier	env		1185066	0					
ANR	1185124	ExpressionStatement	"alt_merge_opt_exact_info ( & to -> expr , & add -> expr , env )"	4528:2:101853:101905	1185066	3	True				
ANR	1185125	CallExpression	"alt_merge_opt_exact_info ( & to -> expr , & add -> expr , env )"		1185066	0					
ANR	1185126	Callee	alt_merge_opt_exact_info		1185066	0					
ANR	1185127	Identifier	alt_merge_opt_exact_info		1185066	0					
ANR	1185128	ArgumentList	& to -> expr		1185066	1					
ANR	1185129	Argument	& to -> expr		1185066	0					
ANR	1185130	UnaryOperationExpression	& to -> expr		1185066	0					
ANR	1185131	UnaryOperator	&		1185066	0					
ANR	1185132	PtrMemberAccess	to -> expr		1185066	1					
ANR	1185133	Identifier	to		1185066	0					
ANR	1185134	Identifier	expr		1185066	1					
ANR	1185135	Argument	& add -> expr		1185066	1					
ANR	1185136	UnaryOperationExpression	& add -> expr		1185066	0					
ANR	1185137	UnaryOperator	&		1185066	0					
ANR	1185138	PtrMemberAccess	add -> expr		1185066	1					
ANR	1185139	Identifier	add		1185066	0					
ANR	1185140	Identifier	expr		1185066	1					
ANR	1185141	Argument	env		1185066	2					
ANR	1185142	Identifier	env		1185066	0					
ANR	1185143	ExpressionStatement	"alt_merge_opt_map_info ( env -> enc , & to -> map , & add -> map )"	4529:2:101909:101963	1185066	4	True				
ANR	1185144	CallExpression	"alt_merge_opt_map_info ( env -> enc , & to -> map , & add -> map )"		1185066	0					
ANR	1185145	Callee	alt_merge_opt_map_info		1185066	0					
ANR	1185146	Identifier	alt_merge_opt_map_info		1185066	0					
ANR	1185147	ArgumentList	env -> enc		1185066	1					
ANR	1185148	Argument	env -> enc		1185066	0					
ANR	1185149	PtrMemberAccess	env -> enc		1185066	0					
ANR	1185150	Identifier	env		1185066	0					
ANR	1185151	Identifier	enc		1185066	1					
ANR	1185152	Argument	& to -> map		1185066	1					
ANR	1185153	UnaryOperationExpression	& to -> map		1185066	0					
ANR	1185154	UnaryOperator	&		1185066	0					
ANR	1185155	PtrMemberAccess	to -> map		1185066	1					
ANR	1185156	Identifier	to		1185066	0					
ANR	1185157	Identifier	map		1185066	1					
ANR	1185158	Argument	& add -> map		1185066	2					
ANR	1185159	UnaryOperationExpression	& add -> map		1185066	0					
ANR	1185160	UnaryOperator	&		1185066	0					
ANR	1185161	PtrMemberAccess	add -> map		1185066	1					
ANR	1185162	Identifier	add		1185066	0					
ANR	1185163	Identifier	map		1185066	1					
ANR	1185164	ExpressionStatement	"alt_merge_mml ( & to -> len , & add -> len )"	4531:2:101968:102002	1185066	5	True				
ANR	1185165	CallExpression	"alt_merge_mml ( & to -> len , & add -> len )"		1185066	0					
ANR	1185166	Callee	alt_merge_mml		1185066	0					
ANR	1185167	Identifier	alt_merge_mml		1185066	0					
ANR	1185168	ArgumentList	& to -> len		1185066	1					
ANR	1185169	Argument	& to -> len		1185066	0					
ANR	1185170	UnaryOperationExpression	& to -> len		1185066	0					
ANR	1185171	UnaryOperator	&		1185066	0					
ANR	1185172	PtrMemberAccess	to -> len		1185066	1					
ANR	1185173	Identifier	to		1185066	0					
ANR	1185174	Identifier	len		1185066	1					
ANR	1185175	Argument	& add -> len		1185066	1					
ANR	1185176	UnaryOperationExpression	& add -> len		1185066	0					
ANR	1185177	UnaryOperator	&		1185066	0					
ANR	1185178	PtrMemberAccess	add -> len		1185066	1					
ANR	1185179	Identifier	add		1185066	0					
ANR	1185180	Identifier	len		1185066	1					
ANR	1185181	ReturnType	static void		1185066	1					
ANR	1185182	Identifier	alt_merge_node_opt_info		1185066	2					
ANR	1185183	ParameterList	"NodeOptInfo * to , NodeOptInfo * add , OptEnv * env"		1185066	3					
ANR	1185184	Parameter	NodeOptInfo * to	4523:24:101641:101655	1185066	0	True				
ANR	1185185	ParameterType	NodeOptInfo *		1185066	0					
ANR	1185186	Identifier	to		1185066	1					
ANR	1185187	Parameter	NodeOptInfo * add	4523:41:101658:101673	1185066	1	True				
ANR	1185188	ParameterType	NodeOptInfo *		1185066	0					
ANR	1185189	Identifier	add		1185066	1					
ANR	1185190	Parameter	OptEnv * env	4523:59:101676:101686	1185066	2	True				
ANR	1185191	ParameterType	OptEnv *		1185066	0					
ANR	1185192	Identifier	env		1185066	1					
ANR	1185193	CFGEntryNode	ENTRY		1185066		True				
ANR	1185194	CFGExitNode	EXIT		1185066		True				
ANR	1185195	Symbol	add		1185066						
ANR	1185196	Symbol	& add -> exm		1185066						
ANR	1185197	Symbol	& to -> len		1185066						
ANR	1185198	Symbol	& to -> anc		1185066						
ANR	1185199	Symbol	& add -> map		1185066						
ANR	1185200	Symbol	& add -> anc		1185066						
ANR	1185201	Symbol	& to -> exm		1185066						
ANR	1185202	Symbol	* env		1185066						
ANR	1185203	Symbol	& to -> map		1185066						
ANR	1185204	Symbol	env -> enc		1185066						
ANR	1185205	Symbol	env		1185066						
ANR	1185206	Symbol	& add -> expr		1185066						
ANR	1185207	Symbol	to		1185066						
ANR	1185208	Symbol	& to -> exb		1185066						
ANR	1185209	Symbol	& add -> len		1185066						
ANR	1185210	Symbol	& to -> expr		1185066						
ANR	1185211	Symbol	& add -> exb		1185066						
ANR	1185212	Function	optimize_node_left	4537:0:102050:110077							
ANR	1185213	FunctionDef	"optimize_node_left (Node * node , NodeOptInfo * opt , OptEnv * env)"		1185212	0					
ANR	1185214	CompoundStatement		4539:0:102123:110077	1185212	0					
ANR	1185215	IdentifierDeclStatement	int type ;	4540:2:102127:102135	1185212	0	True				
ANR	1185216	IdentifierDecl	type		1185212	0					
ANR	1185217	IdentifierDeclType	int		1185212	0					
ANR	1185218	Identifier	type		1185212	1					
ANR	1185219	IdentifierDeclStatement	int r = 0 ;	4541:2:102139:102148	1185212	1	True				
ANR	1185220	IdentifierDecl	r = 0		1185212	0					
ANR	1185221	IdentifierDeclType	int		1185212	0					
ANR	1185222	Identifier	r		1185212	1					
ANR	1185223	AssignmentExpression	r = 0		1185212	2		=			
ANR	1185224	Identifier	r		1185212	0					
ANR	1185225	PrimaryExpression	0		1185212	1					
ANR	1185226	ExpressionStatement	clear_node_opt_info ( opt )	4543:2:102153:102177	1185212	2	True				
ANR	1185227	CallExpression	clear_node_opt_info ( opt )		1185212	0					
ANR	1185228	Callee	clear_node_opt_info		1185212	0					
ANR	1185229	Identifier	clear_node_opt_info		1185212	0					
ANR	1185230	ArgumentList	opt		1185212	1					
ANR	1185231	Argument	opt		1185212	0					
ANR	1185232	Identifier	opt		1185212	0					
ANR	1185233	ExpressionStatement	"set_bound_node_opt_info ( opt , & env -> mmd )"	4544:2:102181:102220	1185212	3	True				
ANR	1185234	CallExpression	"set_bound_node_opt_info ( opt , & env -> mmd )"		1185212	0					
ANR	1185235	Callee	set_bound_node_opt_info		1185212	0					
ANR	1185236	Identifier	set_bound_node_opt_info		1185212	0					
ANR	1185237	ArgumentList	opt		1185212	1					
ANR	1185238	Argument	opt		1185212	0					
ANR	1185239	Identifier	opt		1185212	0					
ANR	1185240	Argument	& env -> mmd		1185212	1					
ANR	1185241	UnaryOperationExpression	& env -> mmd		1185212	0					
ANR	1185242	UnaryOperator	&		1185212	0					
ANR	1185243	PtrMemberAccess	env -> mmd		1185212	1					
ANR	1185244	Identifier	env		1185212	0					
ANR	1185245	Identifier	mmd		1185212	1					
ANR	1185246	ExpressionStatement	type = NTYPE ( node )	4546:2:102225:102243	1185212	4	True				
ANR	1185247	AssignmentExpression	type = NTYPE ( node )		1185212	0		=			
ANR	1185248	Identifier	type		1185212	0					
ANR	1185249	CallExpression	NTYPE ( node )		1185212	1					
ANR	1185250	Callee	NTYPE		1185212	0					
ANR	1185251	Identifier	NTYPE		1185212	0					
ANR	1185252	ArgumentList	node		1185212	1					
ANR	1185253	Argument	node		1185212	0					
ANR	1185254	Identifier	node		1185212	0					
ANR	1185255	SwitchStatement	switch ( type )		1185212	5					
ANR	1185256	Condition	type	4547:10:102255:102258	1185212	0	True				
ANR	1185257	Identifier	type		1185212	0					
ANR	1185258	CompoundStatement		9:16:137:137	1185212	1					
ANR	1185259	Label	case NT_LIST :	4548:2:102265:102277	1185212	0	True				
ANR	1185260	Identifier	NT_LIST		1185212	0					
ANR	1185261	CompoundStatement		14:6:210:225	1185212	1					
ANR	1185262	IdentifierDeclStatement	OptEnv nenv ;	4550:6:102291:102302	1185212	0	True				
ANR	1185263	IdentifierDecl	nenv		1185212	0					
ANR	1185264	IdentifierDeclType	OptEnv		1185212	0					
ANR	1185265	Identifier	nenv		1185212	1					
ANR	1185266	IdentifierDeclStatement	NodeOptInfo nopt ;	4551:6:102310:102326	1185212	1	True				
ANR	1185267	IdentifierDecl	nopt		1185212	0					
ANR	1185268	IdentifierDeclType	NodeOptInfo		1185212	0					
ANR	1185269	Identifier	nopt		1185212	1					
ANR	1185270	IdentifierDeclStatement	Node * nd = node ;	4552:6:102334:102349	1185212	2	True				
ANR	1185271	IdentifierDecl	* nd = node		1185212	0					
ANR	1185272	IdentifierDeclType	Node *		1185212	0					
ANR	1185273	Identifier	nd		1185212	1					
ANR	1185274	AssignmentExpression	* nd = node		1185212	2		=			
ANR	1185275	Identifier	node		1185212	0					
ANR	1185276	Identifier	node		1185212	1					
ANR	1185277	ExpressionStatement	"copy_opt_env ( & nenv , env )"	4554:6:102358:102382	1185212	3	True				
ANR	1185278	CallExpression	"copy_opt_env ( & nenv , env )"		1185212	0					
ANR	1185279	Callee	copy_opt_env		1185212	0					
ANR	1185280	Identifier	copy_opt_env		1185212	0					
ANR	1185281	ArgumentList	& nenv		1185212	1					
ANR	1185282	Argument	& nenv		1185212	0					
ANR	1185283	UnaryOperationExpression	& nenv		1185212	0					
ANR	1185284	UnaryOperator	&		1185212	0					
ANR	1185285	Identifier	nenv		1185212	1					
ANR	1185286	Argument	env		1185212	1					
ANR	1185287	Identifier	env		1185212	0					
ANR	1185288	DoStatement	do		1185212	4					
ANR	1185289	CompoundStatement		17:9:269:269	1185212	0					
ANR	1185290	ExpressionStatement	"r = optimize_node_left ( NCAR ( nd ) , & nopt , & nenv )"	4556:1:102396:102442	1185212	0	True				
ANR	1185291	AssignmentExpression	"r = optimize_node_left ( NCAR ( nd ) , & nopt , & nenv )"		1185212	0		=			
ANR	1185292	Identifier	r		1185212	0					
ANR	1185293	CallExpression	"optimize_node_left ( NCAR ( nd ) , & nopt , & nenv )"		1185212	1					
ANR	1185294	Callee	optimize_node_left		1185212	0					
ANR	1185295	Identifier	optimize_node_left		1185212	0					
ANR	1185296	ArgumentList	NCAR ( nd )		1185212	1					
ANR	1185297	Argument	NCAR ( nd )		1185212	0					
ANR	1185298	CallExpression	NCAR ( nd )		1185212	0					
ANR	1185299	Callee	NCAR		1185212	0					
ANR	1185300	Identifier	NCAR		1185212	0					
ANR	1185301	ArgumentList	nd		1185212	1					
ANR	1185302	Argument	nd		1185212	0					
ANR	1185303	Identifier	nd		1185212	0					
ANR	1185304	Argument	& nopt		1185212	1					
ANR	1185305	UnaryOperationExpression	& nopt		1185212	0					
ANR	1185306	UnaryOperator	&		1185212	0					
ANR	1185307	Identifier	nopt		1185212	1					
ANR	1185308	Argument	& nenv		1185212	2					
ANR	1185309	UnaryOperationExpression	& nenv		1185212	0					
ANR	1185310	UnaryOperator	&		1185212	0					
ANR	1185311	Identifier	nenv		1185212	1					
ANR	1185312	IfStatement	if ( r == 0 )		1185212	1					
ANR	1185313	Condition	r == 0	4557:5:102449:102454	1185212	0	True				
ANR	1185314	EqualityExpression	r == 0		1185212	0		==			
ANR	1185315	Identifier	r		1185212	0					
ANR	1185316	PrimaryExpression	0		1185212	1					
ANR	1185317	CompoundStatement		19:13:333:333	1185212	1					
ANR	1185318	ExpressionStatement	"add_mml ( & nenv . mmd , & nopt . len )"	4558:3:102462:102491	1185212	0	True				
ANR	1185319	CallExpression	"add_mml ( & nenv . mmd , & nopt . len )"		1185212	0					
ANR	1185320	Callee	add_mml		1185212	0					
ANR	1185321	Identifier	add_mml		1185212	0					
ANR	1185322	ArgumentList	& nenv . mmd		1185212	1					
ANR	1185323	Argument	& nenv . mmd		1185212	0					
ANR	1185324	UnaryOperationExpression	& nenv . mmd		1185212	0					
ANR	1185325	UnaryOperator	&		1185212	0					
ANR	1185326	MemberAccess	nenv . mmd		1185212	1					
ANR	1185327	Identifier	nenv		1185212	0					
ANR	1185328	Identifier	mmd		1185212	1					
ANR	1185329	Argument	& nopt . len		1185212	1					
ANR	1185330	UnaryOperationExpression	& nopt . len		1185212	0					
ANR	1185331	UnaryOperator	&		1185212	0					
ANR	1185332	MemberAccess	nopt . len		1185212	1					
ANR	1185333	Identifier	nopt		1185212	0					
ANR	1185334	Identifier	len		1185212	1					
ANR	1185335	ExpressionStatement	"concat_left_node_opt_info ( env -> enc , opt , & nopt )"	4559:3:102496:102543	1185212	1	True				
ANR	1185336	CallExpression	"concat_left_node_opt_info ( env -> enc , opt , & nopt )"		1185212	0					
ANR	1185337	Callee	concat_left_node_opt_info		1185212	0					
ANR	1185338	Identifier	concat_left_node_opt_info		1185212	0					
ANR	1185339	ArgumentList	env -> enc		1185212	1					
ANR	1185340	Argument	env -> enc		1185212	0					
ANR	1185341	PtrMemberAccess	env -> enc		1185212	0					
ANR	1185342	Identifier	env		1185212	0					
ANR	1185343	Identifier	enc		1185212	1					
ANR	1185344	Argument	opt		1185212	1					
ANR	1185345	Identifier	opt		1185212	0					
ANR	1185346	Argument	& nopt		1185212	2					
ANR	1185347	UnaryOperationExpression	& nopt		1185212	0					
ANR	1185348	UnaryOperator	&		1185212	0					
ANR	1185349	Identifier	nopt		1185212	1					
ANR	1185350	Condition	r == 0 && IS_NOT_NULL ( nd = NCDR ( nd ) )	4561:15:102563:102598	1185212	1	True				
ANR	1185351	AndExpression	r == 0 && IS_NOT_NULL ( nd = NCDR ( nd ) )		1185212	0		&&			
ANR	1185352	EqualityExpression	r == 0		1185212	0		==			
ANR	1185353	Identifier	r		1185212	0					
ANR	1185354	PrimaryExpression	0		1185212	1					
ANR	1185355	CallExpression	IS_NOT_NULL ( nd = NCDR ( nd ) )		1185212	1					
ANR	1185356	Callee	IS_NOT_NULL		1185212	0					
ANR	1185357	Identifier	IS_NOT_NULL		1185212	0					
ANR	1185358	ArgumentList	nd = NCDR ( nd )		1185212	1					
ANR	1185359	Argument	nd = NCDR ( nd )		1185212	0					
ANR	1185360	AssignmentExpression	nd = NCDR ( nd )		1185212	0		=			
ANR	1185361	Identifier	nd		1185212	0					
ANR	1185362	CallExpression	NCDR ( nd )		1185212	1					
ANR	1185363	Callee	NCDR		1185212	0					
ANR	1185364	Identifier	NCDR		1185212	0					
ANR	1185365	ArgumentList	nd		1185212	1					
ANR	1185366	Argument	nd		1185212	0					
ANR	1185367	Identifier	nd		1185212	0					
ANR	1185368	BreakStatement	break ;	4563:4:102612:102617	1185212	2	True				
ANR	1185369	Label	case NT_ALT :	4565:2:102622:102633	1185212	3	True				
ANR	1185370	Identifier	NT_ALT		1185212	0					
ANR	1185371	CompoundStatement		30:6:547:562	1185212	4					
ANR	1185372	IdentifierDeclStatement	NodeOptInfo nopt ;	4567:6:102647:102663	1185212	0	True				
ANR	1185373	IdentifierDecl	nopt		1185212	0					
ANR	1185374	IdentifierDeclType	NodeOptInfo		1185212	0					
ANR	1185375	Identifier	nopt		1185212	1					
ANR	1185376	IdentifierDeclStatement	Node * nd = node ;	4568:6:102671:102686	1185212	1	True				
ANR	1185377	IdentifierDecl	* nd = node		1185212	0					
ANR	1185378	IdentifierDeclType	Node *		1185212	0					
ANR	1185379	Identifier	nd		1185212	1					
ANR	1185380	AssignmentExpression	* nd = node		1185212	2		=			
ANR	1185381	Identifier	node		1185212	0					
ANR	1185382	Identifier	node		1185212	1					
ANR	1185383	DoStatement	do		1185212	2					
ANR	1185384	CompoundStatement		32:9:574:574	1185212	0					
ANR	1185385	ExpressionStatement	"r = optimize_node_left ( NCAR ( nd ) , & nopt , env )"	4571:1:102701:102745	1185212	0	True				
ANR	1185386	AssignmentExpression	"r = optimize_node_left ( NCAR ( nd ) , & nopt , env )"		1185212	0		=			
ANR	1185387	Identifier	r		1185212	0					
ANR	1185388	CallExpression	"optimize_node_left ( NCAR ( nd ) , & nopt , env )"		1185212	1					
ANR	1185389	Callee	optimize_node_left		1185212	0					
ANR	1185390	Identifier	optimize_node_left		1185212	0					
ANR	1185391	ArgumentList	NCAR ( nd )		1185212	1					
ANR	1185392	Argument	NCAR ( nd )		1185212	0					
ANR	1185393	CallExpression	NCAR ( nd )		1185212	0					
ANR	1185394	Callee	NCAR		1185212	0					
ANR	1185395	Identifier	NCAR		1185212	0					
ANR	1185396	ArgumentList	nd		1185212	1					
ANR	1185397	Argument	nd		1185212	0					
ANR	1185398	Identifier	nd		1185212	0					
ANR	1185399	Argument	& nopt		1185212	1					
ANR	1185400	UnaryOperationExpression	& nopt		1185212	0					
ANR	1185401	UnaryOperator	&		1185212	0					
ANR	1185402	Identifier	nopt		1185212	1					
ANR	1185403	Argument	env		1185212	2					
ANR	1185404	Identifier	env		1185212	0					
ANR	1185405	IfStatement	if ( r == 0 )		1185212	1					
ANR	1185406	Condition	r == 0	4572:5:102752:102757	1185212	0	True				
ANR	1185407	EqualityExpression	r == 0		1185212	0		==			
ANR	1185408	Identifier	r		1185212	0					
ANR	1185409	PrimaryExpression	0		1185212	1					
ANR	1185410	CompoundStatement		34:13:636:636	1185212	1					
ANR	1185411	IfStatement	if ( nd == node )		1185212	0					
ANR	1185412	Condition	nd == node	4573:7:102769:102778	1185212	0	True				
ANR	1185413	EqualityExpression	nd == node		1185212	0		==			
ANR	1185414	Identifier	nd		1185212	0					
ANR	1185415	Identifier	node		1185212	1					
ANR	1185416	ExpressionStatement	"copy_node_opt_info ( opt , & nopt )"	4573:19:102781:102811	1185212	1	True				
ANR	1185417	CallExpression	"copy_node_opt_info ( opt , & nopt )"		1185212	0					
ANR	1185418	Callee	copy_node_opt_info		1185212	0					
ANR	1185419	Identifier	copy_node_opt_info		1185212	0					
ANR	1185420	ArgumentList	opt		1185212	1					
ANR	1185421	Argument	opt		1185212	0					
ANR	1185422	Identifier	opt		1185212	0					
ANR	1185423	Argument	& nopt		1185212	1					
ANR	1185424	UnaryOperationExpression	& nopt		1185212	0					
ANR	1185425	UnaryOperator	&		1185212	0					
ANR	1185426	Identifier	nopt		1185212	1					
ANR	1185427	ElseStatement	else		1185212	0					
ANR	1185428	ExpressionStatement	"alt_merge_node_opt_info ( opt , & nopt , env )"	4574:19:102832:102872	1185212	0	True				
ANR	1185429	CallExpression	"alt_merge_node_opt_info ( opt , & nopt , env )"		1185212	0					
ANR	1185430	Callee	alt_merge_node_opt_info		1185212	0					
ANR	1185431	Identifier	alt_merge_node_opt_info		1185212	0					
ANR	1185432	ArgumentList	opt		1185212	1					
ANR	1185433	Argument	opt		1185212	0					
ANR	1185434	Identifier	opt		1185212	0					
ANR	1185435	Argument	& nopt		1185212	1					
ANR	1185436	UnaryOperationExpression	& nopt		1185212	0					
ANR	1185437	UnaryOperator	&		1185212	0					
ANR	1185438	Identifier	nopt		1185212	1					
ANR	1185439	Argument	env		1185212	2					
ANR	1185440	Identifier	env		1185212	0					
ANR	1185441	Condition	( r == 0 ) && IS_NOT_NULL ( nd = NCDR ( nd ) )	4576:15:102892:102929	1185212	1	True				
ANR	1185442	AndExpression	( r == 0 ) && IS_NOT_NULL ( nd = NCDR ( nd ) )		1185212	0		&&			
ANR	1185443	EqualityExpression	r == 0		1185212	0		==			
ANR	1185444	Identifier	r		1185212	0					
ANR	1185445	PrimaryExpression	0		1185212	1					
ANR	1185446	CallExpression	IS_NOT_NULL ( nd = NCDR ( nd ) )		1185212	1					
ANR	1185447	Callee	IS_NOT_NULL		1185212	0					
ANR	1185448	Identifier	IS_NOT_NULL		1185212	0					
ANR	1185449	ArgumentList	nd = NCDR ( nd )		1185212	1					
ANR	1185450	Argument	nd = NCDR ( nd )		1185212	0					
ANR	1185451	AssignmentExpression	nd = NCDR ( nd )		1185212	0		=			
ANR	1185452	Identifier	nd		1185212	0					
ANR	1185453	CallExpression	NCDR ( nd )		1185212	1					
ANR	1185454	Callee	NCDR		1185212	0					
ANR	1185455	Identifier	NCDR		1185212	0					
ANR	1185456	ArgumentList	nd		1185212	1					
ANR	1185457	Argument	nd		1185212	0					
ANR	1185458	Identifier	nd		1185212	0					
ANR	1185459	BreakStatement	break ;	4578:4:102943:102948	1185212	5	True				
ANR	1185460	Label	case NT_STR :	4580:2:102953:102964	1185212	6	True				
ANR	1185461	Identifier	NT_STR		1185212	0					
ANR	1185462	CompoundStatement		46:6:920:953	1185212	7					
ANR	1185463	IdentifierDeclStatement	StrNode * sn = NSTR ( node ) ;	4582:6:102978:103002	1185212	0	True				
ANR	1185464	IdentifierDecl	* sn = NSTR ( node )		1185212	0					
ANR	1185465	IdentifierDeclType	StrNode *		1185212	0					
ANR	1185466	Identifier	sn		1185212	1					
ANR	1185467	AssignmentExpression	* sn = NSTR ( node )		1185212	2		=			
ANR	1185468	Identifier	sn		1185212	0					
ANR	1185469	CallExpression	NSTR ( node )		1185212	1					
ANR	1185470	Callee	NSTR		1185212	0					
ANR	1185471	Identifier	NSTR		1185212	0					
ANR	1185472	ArgumentList	node		1185212	1					
ANR	1185473	Argument	node		1185212	0					
ANR	1185474	Identifier	node		1185212	0					
ANR	1185475	IdentifierDeclStatement	int slen = sn -> end - sn -> s ;	4583:6:103010:103036	1185212	1	True				
ANR	1185476	IdentifierDecl	slen = sn -> end - sn -> s		1185212	0					
ANR	1185477	IdentifierDeclType	int		1185212	0					
ANR	1185478	Identifier	slen		1185212	1					
ANR	1185479	AssignmentExpression	slen = sn -> end - sn -> s		1185212	2		=			
ANR	1185480	Identifier	slen		1185212	0					
ANR	1185481	AdditiveExpression	sn -> end - sn -> s		1185212	1		-			
ANR	1185482	PtrMemberAccess	sn -> end		1185212	0					
ANR	1185483	Identifier	sn		1185212	0					
ANR	1185484	Identifier	end		1185212	1					
ANR	1185485	PtrMemberAccess	sn -> s		1185212	1					
ANR	1185486	Identifier	sn		1185212	0					
ANR	1185487	Identifier	s		1185212	1					
ANR	1185488	IdentifierDeclStatement	int is_raw = NSTRING_IS_RAW ( node ) ;	4584:6:103044:103077	1185212	2	True				
ANR	1185489	IdentifierDecl	is_raw = NSTRING_IS_RAW ( node )		1185212	0					
ANR	1185490	IdentifierDeclType	int		1185212	0					
ANR	1185491	Identifier	is_raw		1185212	1					
ANR	1185492	AssignmentExpression	is_raw = NSTRING_IS_RAW ( node )		1185212	2		=			
ANR	1185493	Identifier	is_raw		1185212	0					
ANR	1185494	CallExpression	NSTRING_IS_RAW ( node )		1185212	1					
ANR	1185495	Callee	NSTRING_IS_RAW		1185212	0					
ANR	1185496	Identifier	NSTRING_IS_RAW		1185212	0					
ANR	1185497	ArgumentList	node		1185212	1					
ANR	1185498	Argument	node		1185212	0					
ANR	1185499	Identifier	node		1185212	0					
ANR	1185500	IfStatement	if ( ! NSTRING_IS_AMBIG ( node ) )		1185212	3					
ANR	1185501	Condition	! NSTRING_IS_AMBIG ( node )	4586:10:103090:103113	1185212	0	True				
ANR	1185502	UnaryOperationExpression	! NSTRING_IS_AMBIG ( node )		1185212	0					
ANR	1185503	UnaryOperator	!		1185212	0					
ANR	1185504	CallExpression	NSTRING_IS_AMBIG ( node )		1185212	1					
ANR	1185505	Callee	NSTRING_IS_AMBIG		1185212	0					
ANR	1185506	Identifier	NSTRING_IS_AMBIG		1185212	0					
ANR	1185507	ArgumentList	node		1185212	1					
ANR	1185508	Argument	node		1185212	0					
ANR	1185509	Identifier	node		1185212	0					
ANR	1185510	CompoundStatement		48:36:992:992	1185212	1					
ANR	1185511	ExpressionStatement	"concat_opt_exact_info_str ( & opt -> exb , sn -> s , sn -> end , NSTRING_IS_RAW ( node ) , env -> enc )"	4587:1:103119:103209	1185212	0	True				
ANR	1185512	CallExpression	"concat_opt_exact_info_str ( & opt -> exb , sn -> s , sn -> end , NSTRING_IS_RAW ( node ) , env -> enc )"		1185212	0					
ANR	1185513	Callee	concat_opt_exact_info_str		1185212	0					
ANR	1185514	Identifier	concat_opt_exact_info_str		1185212	0					
ANR	1185515	ArgumentList	& opt -> exb		1185212	1					
ANR	1185516	Argument	& opt -> exb		1185212	0					
ANR	1185517	UnaryOperationExpression	& opt -> exb		1185212	0					
ANR	1185518	UnaryOperator	&		1185212	0					
ANR	1185519	PtrMemberAccess	opt -> exb		1185212	1					
ANR	1185520	Identifier	opt		1185212	0					
ANR	1185521	Identifier	exb		1185212	1					
ANR	1185522	Argument	sn -> s		1185212	1					
ANR	1185523	PtrMemberAccess	sn -> s		1185212	0					
ANR	1185524	Identifier	sn		1185212	0					
ANR	1185525	Identifier	s		1185212	1					
ANR	1185526	Argument	sn -> end		1185212	2					
ANR	1185527	PtrMemberAccess	sn -> end		1185212	0					
ANR	1185528	Identifier	sn		1185212	0					
ANR	1185529	Identifier	end		1185212	1					
ANR	1185530	Argument	NSTRING_IS_RAW ( node )		1185212	3					
ANR	1185531	CallExpression	NSTRING_IS_RAW ( node )		1185212	0					
ANR	1185532	Callee	NSTRING_IS_RAW		1185212	0					
ANR	1185533	Identifier	NSTRING_IS_RAW		1185212	0					
ANR	1185534	ArgumentList	node		1185212	1					
ANR	1185535	Argument	node		1185212	0					
ANR	1185536	Identifier	node		1185212	0					
ANR	1185537	Argument	env -> enc		1185212	4					
ANR	1185538	PtrMemberAccess	env -> enc		1185212	0					
ANR	1185539	Identifier	env		1185212	0					
ANR	1185540	Identifier	enc		1185212	1					
ANR	1185541	IfStatement	if ( slen > 0 )		1185212	1					
ANR	1185542	Condition	slen > 0	4589:5:103216:103223	1185212	0	True				
ANR	1185543	RelationalExpression	slen > 0		1185212	0		>			
ANR	1185544	Identifier	slen		1185212	0					
ANR	1185545	PrimaryExpression	0		1185212	1					
ANR	1185546	CompoundStatement		51:15:1102:1102	1185212	1					
ANR	1185547	ExpressionStatement	"add_char_opt_map_info ( & opt -> map , * ( sn -> s ) , env -> enc )"	4590:3:103231:103283	1185212	0	True				
ANR	1185548	CallExpression	"add_char_opt_map_info ( & opt -> map , * ( sn -> s ) , env -> enc )"		1185212	0					
ANR	1185549	Callee	add_char_opt_map_info		1185212	0					
ANR	1185550	Identifier	add_char_opt_map_info		1185212	0					
ANR	1185551	ArgumentList	& opt -> map		1185212	1					
ANR	1185552	Argument	& opt -> map		1185212	0					
ANR	1185553	UnaryOperationExpression	& opt -> map		1185212	0					
ANR	1185554	UnaryOperator	&		1185212	0					
ANR	1185555	PtrMemberAccess	opt -> map		1185212	1					
ANR	1185556	Identifier	opt		1185212	0					
ANR	1185557	Identifier	map		1185212	1					
ANR	1185558	Argument	* ( sn -> s )		1185212	1					
ANR	1185559	UnaryOperationExpression	* ( sn -> s )		1185212	0					
ANR	1185560	UnaryOperator	*		1185212	0					
ANR	1185561	PtrMemberAccess	sn -> s		1185212	1					
ANR	1185562	Identifier	sn		1185212	0					
ANR	1185563	Identifier	s		1185212	1					
ANR	1185564	Argument	env -> enc		1185212	2					
ANR	1185565	PtrMemberAccess	env -> enc		1185212	0					
ANR	1185566	Identifier	env		1185212	0					
ANR	1185567	Identifier	enc		1185212	1					
ANR	1185568	ExpressionStatement	"set_mml ( & opt -> len , slen , slen )"	4592:8:103296:103326	1185212	2	True				
ANR	1185569	CallExpression	"set_mml ( & opt -> len , slen , slen )"		1185212	0					
ANR	1185570	Callee	set_mml		1185212	0					
ANR	1185571	Identifier	set_mml		1185212	0					
ANR	1185572	ArgumentList	& opt -> len		1185212	1					
ANR	1185573	Argument	& opt -> len		1185212	0					
ANR	1185574	UnaryOperationExpression	& opt -> len		1185212	0					
ANR	1185575	UnaryOperator	&		1185212	0					
ANR	1185576	PtrMemberAccess	opt -> len		1185212	1					
ANR	1185577	Identifier	opt		1185212	0					
ANR	1185578	Identifier	len		1185212	1					
ANR	1185579	Argument	slen		1185212	1					
ANR	1185580	Identifier	slen		1185212	0					
ANR	1185581	Argument	slen		1185212	2					
ANR	1185582	Identifier	slen		1185212	0					
ANR	1185583	ElseStatement	else		1185212	0					
ANR	1185584	CompoundStatement		57:8:1233:1240	1185212	0					
ANR	1185585	IdentifierDeclStatement	int max ;	4595:8:103357:103364	1185212	0	True				
ANR	1185586	IdentifierDecl	max		1185212	0					
ANR	1185587	IdentifierDeclType	int		1185212	0					
ANR	1185588	Identifier	max		1185212	1					
ANR	1185589	IfStatement	if ( NSTRING_IS_DONT_GET_OPT_INFO ( node ) )		1185212	1					
ANR	1185590	Condition	NSTRING_IS_DONT_GET_OPT_INFO ( node )	4597:5:103372:103405	1185212	0	True				
ANR	1185591	CallExpression	NSTRING_IS_DONT_GET_OPT_INFO ( node )		1185212	0					
ANR	1185592	Callee	NSTRING_IS_DONT_GET_OPT_INFO		1185212	0					
ANR	1185593	Identifier	NSTRING_IS_DONT_GET_OPT_INFO		1185212	0					
ANR	1185594	ArgumentList	node		1185212	1					
ANR	1185595	Argument	node		1185212	0					
ANR	1185596	Identifier	node		1185212	0					
ANR	1185597	CompoundStatement		60:10:1296:1344	1185212	1					
ANR	1185598	IdentifierDeclStatement	"int n = onigenc_strlen ( env -> enc , sn -> s , sn -> end ) ;"	4598:10:103420:103468	1185212	0	True				
ANR	1185599	IdentifierDecl	"n = onigenc_strlen ( env -> enc , sn -> s , sn -> end )"		1185212	0					
ANR	1185600	IdentifierDeclType	int		1185212	0					
ANR	1185601	Identifier	n		1185212	1					
ANR	1185602	AssignmentExpression	"n = onigenc_strlen ( env -> enc , sn -> s , sn -> end )"		1185212	2		=			
ANR	1185603	Identifier	n		1185212	0					
ANR	1185604	CallExpression	"onigenc_strlen ( env -> enc , sn -> s , sn -> end )"		1185212	1					
ANR	1185605	Callee	onigenc_strlen		1185212	0					
ANR	1185606	Identifier	onigenc_strlen		1185212	0					
ANR	1185607	ArgumentList	env -> enc		1185212	1					
ANR	1185608	Argument	env -> enc		1185212	0					
ANR	1185609	PtrMemberAccess	env -> enc		1185212	0					
ANR	1185610	Identifier	env		1185212	0					
ANR	1185611	Identifier	enc		1185212	1					
ANR	1185612	Argument	sn -> s		1185212	1					
ANR	1185613	PtrMemberAccess	sn -> s		1185212	0					
ANR	1185614	Identifier	sn		1185212	0					
ANR	1185615	Identifier	s		1185212	1					
ANR	1185616	Argument	sn -> end		1185212	2					
ANR	1185617	PtrMemberAccess	sn -> end		1185212	0					
ANR	1185618	Identifier	sn		1185212	0					
ANR	1185619	Identifier	end		1185212	1					
ANR	1185620	ExpressionStatement	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc ) * n	4599:10:103480:103523	1185212	1	True				
ANR	1185621	AssignmentExpression	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc ) * n		1185212	0		=			
ANR	1185622	Identifier	max		1185212	0					
ANR	1185623	MultiplicativeExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc ) * n		1185212	1		*			
ANR	1185624	CallExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1185212	0					
ANR	1185625	Callee	ONIGENC_MBC_MAXLEN_DIST		1185212	0					
ANR	1185626	Identifier	ONIGENC_MBC_MAXLEN_DIST		1185212	0					
ANR	1185627	ArgumentList	env -> enc		1185212	1					
ANR	1185628	Argument	env -> enc		1185212	0					
ANR	1185629	PtrMemberAccess	env -> enc		1185212	0					
ANR	1185630	Identifier	env		1185212	0					
ANR	1185631	Identifier	enc		1185212	1					
ANR	1185632	Identifier	n		1185212	1					
ANR	1185633	ElseStatement	else		1185212	0					
ANR	1185634	CompoundStatement		63:6:1410:1410	1185212	0					
ANR	1185635	ExpressionStatement	"concat_opt_exact_info_str ( & opt -> exb , sn -> s , sn -> end , is_raw , env -> enc )"	4602:3:103539:103617	1185212	0	True				
ANR	1185636	CallExpression	"concat_opt_exact_info_str ( & opt -> exb , sn -> s , sn -> end , is_raw , env -> enc )"		1185212	0					
ANR	1185637	Callee	concat_opt_exact_info_str		1185212	0					
ANR	1185638	Identifier	concat_opt_exact_info_str		1185212	0					
ANR	1185639	ArgumentList	& opt -> exb		1185212	1					
ANR	1185640	Argument	& opt -> exb		1185212	0					
ANR	1185641	UnaryOperationExpression	& opt -> exb		1185212	0					
ANR	1185642	UnaryOperator	&		1185212	0					
ANR	1185643	PtrMemberAccess	opt -> exb		1185212	1					
ANR	1185644	Identifier	opt		1185212	0					
ANR	1185645	Identifier	exb		1185212	1					
ANR	1185646	Argument	sn -> s		1185212	1					
ANR	1185647	PtrMemberAccess	sn -> s		1185212	0					
ANR	1185648	Identifier	sn		1185212	0					
ANR	1185649	Identifier	s		1185212	1					
ANR	1185650	Argument	sn -> end		1185212	2					
ANR	1185651	PtrMemberAccess	sn -> end		1185212	0					
ANR	1185652	Identifier	sn		1185212	0					
ANR	1185653	Identifier	end		1185212	1					
ANR	1185654	Argument	is_raw		1185212	3					
ANR	1185655	Identifier	is_raw		1185212	0					
ANR	1185656	Argument	env -> enc		1185212	4					
ANR	1185657	PtrMemberAccess	env -> enc		1185212	0					
ANR	1185658	Identifier	env		1185212	0					
ANR	1185659	Identifier	enc		1185212	1					
ANR	1185660	ExpressionStatement	opt -> exb . ignore_case = 1	4604:3:103622:103646	1185212	1	True				
ANR	1185661	AssignmentExpression	opt -> exb . ignore_case = 1		1185212	0		=			
ANR	1185662	MemberAccess	opt -> exb . ignore_case		1185212	0					
ANR	1185663	PtrMemberAccess	opt -> exb		1185212	0					
ANR	1185664	Identifier	opt		1185212	0					
ANR	1185665	Identifier	exb		1185212	1					
ANR	1185666	Identifier	ignore_case		1185212	1					
ANR	1185667	PrimaryExpression	1		1185212	1					
ANR	1185668	IfStatement	if ( slen > 0 )		1185212	2					
ANR	1185669	Condition	slen > 0	4606:7:103656:103663	1185212	0	True				
ANR	1185670	RelationalExpression	slen > 0		1185212	0		>			
ANR	1185671	Identifier	slen		1185212	0					
ANR	1185672	PrimaryExpression	0		1185212	1					
ANR	1185673	CompoundStatement		68:17:1542:1542	1185212	1					
ANR	1185674	ExpressionStatement	"r = add_char_amb_opt_map_info ( & opt -> map , sn -> s , sn -> end , env -> enc , env -> case_fold_flag )"	4607:5:103673:103767	1185212	0	True				
ANR	1185675	AssignmentExpression	"r = add_char_amb_opt_map_info ( & opt -> map , sn -> s , sn -> end , env -> enc , env -> case_fold_flag )"		1185212	0		=			
ANR	1185676	Identifier	r		1185212	0					
ANR	1185677	CallExpression	"add_char_amb_opt_map_info ( & opt -> map , sn -> s , sn -> end , env -> enc , env -> case_fold_flag )"		1185212	1					
ANR	1185678	Callee	add_char_amb_opt_map_info		1185212	0					
ANR	1185679	Identifier	add_char_amb_opt_map_info		1185212	0					
ANR	1185680	ArgumentList	& opt -> map		1185212	1					
ANR	1185681	Argument	& opt -> map		1185212	0					
ANR	1185682	UnaryOperationExpression	& opt -> map		1185212	0					
ANR	1185683	UnaryOperator	&		1185212	0					
ANR	1185684	PtrMemberAccess	opt -> map		1185212	1					
ANR	1185685	Identifier	opt		1185212	0					
ANR	1185686	Identifier	map		1185212	1					
ANR	1185687	Argument	sn -> s		1185212	1					
ANR	1185688	PtrMemberAccess	sn -> s		1185212	0					
ANR	1185689	Identifier	sn		1185212	0					
ANR	1185690	Identifier	s		1185212	1					
ANR	1185691	Argument	sn -> end		1185212	2					
ANR	1185692	PtrMemberAccess	sn -> end		1185212	0					
ANR	1185693	Identifier	sn		1185212	0					
ANR	1185694	Identifier	end		1185212	1					
ANR	1185695	Argument	env -> enc		1185212	3					
ANR	1185696	PtrMemberAccess	env -> enc		1185212	0					
ANR	1185697	Identifier	env		1185212	0					
ANR	1185698	Identifier	enc		1185212	1					
ANR	1185699	Argument	env -> case_fold_flag		1185212	4					
ANR	1185700	PtrMemberAccess	env -> case_fold_flag		1185212	0					
ANR	1185701	Identifier	env		1185212	0					
ANR	1185702	Identifier	case_fold_flag		1185212	1					
ANR	1185703	IfStatement	if ( r != 0 )		1185212	1					
ANR	1185704	Condition	r != 0	4609:9:103778:103783	1185212	0	True				
ANR	1185705	EqualityExpression	r != 0		1185212	0		!=			
ANR	1185706	Identifier	r		1185212	0					
ANR	1185707	PrimaryExpression	0		1185212	1					
ANR	1185708	BreakStatement	break ;	4609:17:103786:103791	1185212	1	True				
ANR	1185709	ExpressionStatement	max = slen	4612:3:103802:103812	1185212	3	True				
ANR	1185710	AssignmentExpression	max = slen		1185212	0		=			
ANR	1185711	Identifier	max		1185212	0					
ANR	1185712	Identifier	slen		1185212	1					
ANR	1185713	ExpressionStatement	"set_mml ( & opt -> len , slen , max )"	4615:8:103826:103855	1185212	2	True				
ANR	1185714	CallExpression	"set_mml ( & opt -> len , slen , max )"		1185212	0					
ANR	1185715	Callee	set_mml		1185212	0					
ANR	1185716	Identifier	set_mml		1185212	0					
ANR	1185717	ArgumentList	& opt -> len		1185212	1					
ANR	1185718	Argument	& opt -> len		1185212	0					
ANR	1185719	UnaryOperationExpression	& opt -> len		1185212	0					
ANR	1185720	UnaryOperator	&		1185212	0					
ANR	1185721	PtrMemberAccess	opt -> len		1185212	1					
ANR	1185722	Identifier	opt		1185212	0					
ANR	1185723	Identifier	len		1185212	1					
ANR	1185724	Argument	slen		1185212	1					
ANR	1185725	Identifier	slen		1185212	0					
ANR	1185726	Argument	max		1185212	2					
ANR	1185727	Identifier	max		1185212	0					
ANR	1185728	IfStatement	if ( opt -> exb . len == slen )		1185212	4					
ANR	1185729	Condition	opt -> exb . len == slen	4618:10:103876:103895	1185212	0	True				
ANR	1185730	EqualityExpression	opt -> exb . len == slen		1185212	0		==			
ANR	1185731	MemberAccess	opt -> exb . len		1185212	0					
ANR	1185732	PtrMemberAccess	opt -> exb		1185212	0					
ANR	1185733	Identifier	opt		1185212	0					
ANR	1185734	Identifier	exb		1185212	1					
ANR	1185735	Identifier	len		1185212	1					
ANR	1185736	Identifier	slen		1185212	1					
ANR	1185737	ExpressionStatement	opt -> exb . reach_end = 1	4619:1:103899:103921	1185212	1	True				
ANR	1185738	AssignmentExpression	opt -> exb . reach_end = 1		1185212	0		=			
ANR	1185739	MemberAccess	opt -> exb . reach_end		1185212	0					
ANR	1185740	PtrMemberAccess	opt -> exb		1185212	0					
ANR	1185741	Identifier	opt		1185212	0					
ANR	1185742	Identifier	exb		1185212	1					
ANR	1185743	Identifier	reach_end		1185212	1					
ANR	1185744	PrimaryExpression	1		1185212	1					
ANR	1185745	BreakStatement	break ;	4621:4:103933:103938	1185212	8	True				
ANR	1185746	Label	case NT_CCLASS :	4623:2:103943:103957	1185212	9	True				
ANR	1185747	Identifier	NT_CCLASS		1185212	0					
ANR	1185748	CompoundStatement		88:6:1863:1893	1185212	10					
ANR	1185749	IdentifierDeclStatement	"int i , z ;"	4625:6:103971:103979	1185212	0	True				
ANR	1185750	IdentifierDecl	i		1185212	0					
ANR	1185751	IdentifierDeclType	int		1185212	0					
ANR	1185752	Identifier	i		1185212	1					
ANR	1185753	IdentifierDecl	z		1185212	1					
ANR	1185754	IdentifierDeclType	int		1185212	0					
ANR	1185755	Identifier	z		1185212	1					
ANR	1185756	IdentifierDeclStatement	CClassNode * cc = NCCLASS ( node ) ;	4626:6:103987:104017	1185212	1	True				
ANR	1185757	IdentifierDecl	* cc = NCCLASS ( node )		1185212	0					
ANR	1185758	IdentifierDeclType	CClassNode *		1185212	0					
ANR	1185759	Identifier	cc		1185212	1					
ANR	1185760	AssignmentExpression	* cc = NCCLASS ( node )		1185212	2		=			
ANR	1185761	Identifier	cc		1185212	0					
ANR	1185762	CallExpression	NCCLASS ( node )		1185212	1					
ANR	1185763	Callee	NCCLASS		1185212	0					
ANR	1185764	Identifier	NCCLASS		1185212	0					
ANR	1185765	ArgumentList	node		1185212	1					
ANR	1185766	Argument	node		1185212	0					
ANR	1185767	Identifier	node		1185212	0					
ANR	1185768	IfStatement	if ( IS_NOT_NULL ( cc -> mbuf ) || IS_NCCLASS_NOT ( cc ) )		1185212	2					
ANR	1185769	Condition	IS_NOT_NULL ( cc -> mbuf ) || IS_NCCLASS_NOT ( cc )	4630:10:104098:104140	1185212	0	True				
ANR	1185770	OrExpression	IS_NOT_NULL ( cc -> mbuf ) || IS_NCCLASS_NOT ( cc )		1185212	0		||			
ANR	1185771	CallExpression	IS_NOT_NULL ( cc -> mbuf )		1185212	0					
ANR	1185772	Callee	IS_NOT_NULL		1185212	0					
ANR	1185773	Identifier	IS_NOT_NULL		1185212	0					
ANR	1185774	ArgumentList	cc -> mbuf		1185212	1					
ANR	1185775	Argument	cc -> mbuf		1185212	0					
ANR	1185776	PtrMemberAccess	cc -> mbuf		1185212	0					
ANR	1185777	Identifier	cc		1185212	0					
ANR	1185778	Identifier	mbuf		1185212	1					
ANR	1185779	CallExpression	IS_NCCLASS_NOT ( cc )		1185212	1					
ANR	1185780	Callee	IS_NCCLASS_NOT		1185212	0					
ANR	1185781	Identifier	IS_NCCLASS_NOT		1185212	0					
ANR	1185782	ArgumentList	cc		1185212	1					
ANR	1185783	Argument	cc		1185212	0					
ANR	1185784	Identifier	cc		1185212	0					
ANR	1185785	CompoundStatement		94:1:2079:2131	1185212	1					
ANR	1185786	IdentifierDeclStatement	OnigDistance min = ONIGENC_MBC_MINLEN ( env -> enc ) ;	4631:8:104153:104200	1185212	0	True				
ANR	1185787	IdentifierDecl	min = ONIGENC_MBC_MINLEN ( env -> enc )		1185212	0					
ANR	1185788	IdentifierDeclType	OnigDistance		1185212	0					
ANR	1185789	Identifier	min		1185212	1					
ANR	1185790	AssignmentExpression	min = ONIGENC_MBC_MINLEN ( env -> enc )		1185212	2		=			
ANR	1185791	Identifier	min		1185212	0					
ANR	1185792	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		1185212	1					
ANR	1185793	Callee	ONIGENC_MBC_MINLEN		1185212	0					
ANR	1185794	Identifier	ONIGENC_MBC_MINLEN		1185212	0					
ANR	1185795	ArgumentList	env -> enc		1185212	1					
ANR	1185796	Argument	env -> enc		1185212	0					
ANR	1185797	PtrMemberAccess	env -> enc		1185212	0					
ANR	1185798	Identifier	env		1185212	0					
ANR	1185799	Identifier	enc		1185212	1					
ANR	1185800	IdentifierDeclStatement	OnigDistance max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc ) ;	4632:1:104203:104255	1185212	1	True				
ANR	1185801	IdentifierDecl	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1185212	0					
ANR	1185802	IdentifierDeclType	OnigDistance		1185212	0					
ANR	1185803	Identifier	max		1185212	1					
ANR	1185804	AssignmentExpression	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1185212	2		=			
ANR	1185805	Identifier	max		1185212	0					
ANR	1185806	CallExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1185212	1					
ANR	1185807	Callee	ONIGENC_MBC_MAXLEN_DIST		1185212	0					
ANR	1185808	Identifier	ONIGENC_MBC_MAXLEN_DIST		1185212	0					
ANR	1185809	ArgumentList	env -> enc		1185212	1					
ANR	1185810	Argument	env -> enc		1185212	0					
ANR	1185811	PtrMemberAccess	env -> enc		1185212	0					
ANR	1185812	Identifier	env		1185212	0					
ANR	1185813	Identifier	enc		1185212	1					
ANR	1185814	ExpressionStatement	"set_mml ( & opt -> len , min , max )"	4634:1:104259:104287	1185212	2	True				
ANR	1185815	CallExpression	"set_mml ( & opt -> len , min , max )"		1185212	0					
ANR	1185816	Callee	set_mml		1185212	0					
ANR	1185817	Identifier	set_mml		1185212	0					
ANR	1185818	ArgumentList	& opt -> len		1185212	1					
ANR	1185819	Argument	& opt -> len		1185212	0					
ANR	1185820	UnaryOperationExpression	& opt -> len		1185212	0					
ANR	1185821	UnaryOperator	&		1185212	0					
ANR	1185822	PtrMemberAccess	opt -> len		1185212	1					
ANR	1185823	Identifier	opt		1185212	0					
ANR	1185824	Identifier	len		1185212	1					
ANR	1185825	Argument	min		1185212	1					
ANR	1185826	Identifier	min		1185212	0					
ANR	1185827	Argument	max		1185212	2					
ANR	1185828	Identifier	max		1185212	0					
ANR	1185829	ElseStatement	else		1185212	0					
ANR	1185830	CompoundStatement		98:11:2184:2184	1185212	0					
ANR	1185831	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		1185212	0					
ANR	1185832	ForInit	i = 0 ;	4637:13:104323:104328	1185212	0	True				
ANR	1185833	AssignmentExpression	i = 0		1185212	0		=			
ANR	1185834	Identifier	i		1185212	0					
ANR	1185835	PrimaryExpression	0		1185212	1					
ANR	1185836	Condition	i < SINGLE_BYTE_SIZE	4637:20:104330:104349	1185212	1	True				
ANR	1185837	RelationalExpression	i < SINGLE_BYTE_SIZE		1185212	0		<			
ANR	1185838	Identifier	i		1185212	0					
ANR	1185839	Identifier	SINGLE_BYTE_SIZE		1185212	1					
ANR	1185840	PostIncDecOperationExpression	i ++	4637:42:104352:104354	1185212	2	True				
ANR	1185841	Identifier	i		1185212	0					
ANR	1185842	IncDec	++		1185212	1					
ANR	1185843	CompoundStatement		99:47:2233:2233	1185212	3					
ANR	1185844	ExpressionStatement	"z = BITSET_AT ( cc -> bs , i )"	4638:10:104369:104393	1185212	0	True				
ANR	1185845	AssignmentExpression	"z = BITSET_AT ( cc -> bs , i )"		1185212	0		=			
ANR	1185846	Identifier	z		1185212	0					
ANR	1185847	CallExpression	"BITSET_AT ( cc -> bs , i )"		1185212	1					
ANR	1185848	Callee	BITSET_AT		1185212	0					
ANR	1185849	Identifier	BITSET_AT		1185212	0					
ANR	1185850	ArgumentList	cc -> bs		1185212	1					
ANR	1185851	Argument	cc -> bs		1185212	0					
ANR	1185852	PtrMemberAccess	cc -> bs		1185212	0					
ANR	1185853	Identifier	cc		1185212	0					
ANR	1185854	Identifier	bs		1185212	1					
ANR	1185855	Argument	i		1185212	1					
ANR	1185856	Identifier	i		1185212	0					
ANR	1185857	IfStatement	if ( ( z && ! IS_NCCLASS_NOT ( cc ) ) || ( ! z && IS_NCCLASS_NOT ( cc ) ) )		1185212	1					
ANR	1185858	Condition	( z && ! IS_NCCLASS_NOT ( cc ) ) || ( ! z && IS_NCCLASS_NOT ( cc ) )	4639:14:104409:104464	1185212	0	True				
ANR	1185859	OrExpression	( z && ! IS_NCCLASS_NOT ( cc ) ) || ( ! z && IS_NCCLASS_NOT ( cc ) )		1185212	0		||			
ANR	1185860	AndExpression	z && ! IS_NCCLASS_NOT ( cc )		1185212	0		&&			
ANR	1185861	Identifier	z		1185212	0					
ANR	1185862	UnaryOperationExpression	! IS_NCCLASS_NOT ( cc )		1185212	1					
ANR	1185863	UnaryOperator	!		1185212	0					
ANR	1185864	CallExpression	IS_NCCLASS_NOT ( cc )		1185212	1					
ANR	1185865	Callee	IS_NCCLASS_NOT		1185212	0					
ANR	1185866	Identifier	IS_NCCLASS_NOT		1185212	0					
ANR	1185867	ArgumentList	cc		1185212	1					
ANR	1185868	Argument	cc		1185212	0					
ANR	1185869	Identifier	cc		1185212	0					
ANR	1185870	AndExpression	! z && IS_NCCLASS_NOT ( cc )		1185212	1		&&			
ANR	1185871	UnaryOperationExpression	! z		1185212	0					
ANR	1185872	UnaryOperator	!		1185212	0					
ANR	1185873	Identifier	z		1185212	1					
ANR	1185874	CallExpression	IS_NCCLASS_NOT ( cc )		1185212	1					
ANR	1185875	Callee	IS_NCCLASS_NOT		1185212	0					
ANR	1185876	Identifier	IS_NCCLASS_NOT		1185212	0					
ANR	1185877	ArgumentList	cc		1185212	1					
ANR	1185878	Argument	cc		1185212	0					
ANR	1185879	Identifier	cc		1185212	0					
ANR	1185880	CompoundStatement		101:72:2343:2343	1185212	1					
ANR	1185881	ExpressionStatement	"add_char_opt_map_info ( & opt -> map , ( UChar ) i , env -> enc )"	4640:12:104481:104534	1185212	0	True				
ANR	1185882	CallExpression	"add_char_opt_map_info ( & opt -> map , ( UChar ) i , env -> enc )"		1185212	0					
ANR	1185883	Callee	add_char_opt_map_info		1185212	0					
ANR	1185884	Identifier	add_char_opt_map_info		1185212	0					
ANR	1185885	ArgumentList	& opt -> map		1185212	1					
ANR	1185886	Argument	& opt -> map		1185212	0					
ANR	1185887	UnaryOperationExpression	& opt -> map		1185212	0					
ANR	1185888	UnaryOperator	&		1185212	0					
ANR	1185889	PtrMemberAccess	opt -> map		1185212	1					
ANR	1185890	Identifier	opt		1185212	0					
ANR	1185891	Identifier	map		1185212	1					
ANR	1185892	Argument	( UChar ) i		1185212	1					
ANR	1185893	CastExpression	( UChar ) i		1185212	0					
ANR	1185894	CastTarget	UChar		1185212	0					
ANR	1185895	Identifier	i		1185212	1					
ANR	1185896	Argument	env -> enc		1185212	2					
ANR	1185897	PtrMemberAccess	env -> enc		1185212	0					
ANR	1185898	Identifier	env		1185212	0					
ANR	1185899	Identifier	enc		1185212	1					
ANR	1185900	ExpressionStatement	"set_mml ( & opt -> len , 1 , 1 )"	4643:1:104559:104583	1185212	1	True				
ANR	1185901	CallExpression	"set_mml ( & opt -> len , 1 , 1 )"		1185212	0					
ANR	1185902	Callee	set_mml		1185212	0					
ANR	1185903	Identifier	set_mml		1185212	0					
ANR	1185904	ArgumentList	& opt -> len		1185212	1					
ANR	1185905	Argument	& opt -> len		1185212	0					
ANR	1185906	UnaryOperationExpression	& opt -> len		1185212	0					
ANR	1185907	UnaryOperator	&		1185212	0					
ANR	1185908	PtrMemberAccess	opt -> len		1185212	1					
ANR	1185909	Identifier	opt		1185212	0					
ANR	1185910	Identifier	len		1185212	1					
ANR	1185911	Argument	1		1185212	1					
ANR	1185912	PrimaryExpression	1		1185212	0					
ANR	1185913	Argument	1		1185212	2					
ANR	1185914	PrimaryExpression	1		1185212	0					
ANR	1185915	BreakStatement	break ;	4646:4:104603:104608	1185212	11	True				
ANR	1185916	Label	case NT_CTYPE :	4648:2:104613:104626	1185212	12	True				
ANR	1185917	Identifier	NT_CTYPE		1185212	0					
ANR	1185918	CompoundStatement		112:6:2516:2531	1185212	13					
ANR	1185919	IdentifierDeclStatement	"int i , min , max ;"	4650:6:104640:104655	1185212	0	True				
ANR	1185920	IdentifierDecl	i		1185212	0					
ANR	1185921	IdentifierDeclType	int		1185212	0					
ANR	1185922	Identifier	i		1185212	1					
ANR	1185923	IdentifierDecl	min		1185212	1					
ANR	1185924	IdentifierDeclType	int		1185212	0					
ANR	1185925	Identifier	min		1185212	1					
ANR	1185926	IdentifierDecl	max		1185212	2					
ANR	1185927	IdentifierDeclType	int		1185212	0					
ANR	1185928	Identifier	max		1185212	1					
ANR	1185929	ExpressionStatement	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )	4652:6:104664:104703	1185212	1	True				
ANR	1185930	AssignmentExpression	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1185212	0		=			
ANR	1185931	Identifier	max		1185212	0					
ANR	1185932	CallExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1185212	1					
ANR	1185933	Callee	ONIGENC_MBC_MAXLEN_DIST		1185212	0					
ANR	1185934	Identifier	ONIGENC_MBC_MAXLEN_DIST		1185212	0					
ANR	1185935	ArgumentList	env -> enc		1185212	1					
ANR	1185936	Argument	env -> enc		1185212	0					
ANR	1185937	PtrMemberAccess	env -> enc		1185212	0					
ANR	1185938	Identifier	env		1185212	0					
ANR	1185939	Identifier	enc		1185212	1					
ANR	1185940	IfStatement	if ( max == 1 )		1185212	2					
ANR	1185941	Condition	max == 1	4654:10:104716:104723	1185212	0	True				
ANR	1185942	EqualityExpression	max == 1		1185212	0		==			
ANR	1185943	Identifier	max		1185212	0					
ANR	1185944	PrimaryExpression	1		1185212	1					
ANR	1185945	CompoundStatement		116:20:2602:2602	1185212	1					
ANR	1185946	ExpressionStatement	min = 1	4655:8:104736:104743	1185212	0	True				
ANR	1185947	AssignmentExpression	min = 1		1185212	0		=			
ANR	1185948	Identifier	min		1185212	0					
ANR	1185949	PrimaryExpression	1		1185212	1					
ANR	1185950	SwitchStatement	switch ( NCTYPE ( node ) -> ctype )		1185212	1					
ANR	1185951	Condition	NCTYPE ( node ) -> ctype	4657:9:104755:104773	1185212	0	True				
ANR	1185952	PtrMemberAccess	NCTYPE ( node ) -> ctype		1185212	0					
ANR	1185953	CallExpression	NCTYPE ( node )		1185212	0					
ANR	1185954	Callee	NCTYPE		1185212	0					
ANR	1185955	Identifier	NCTYPE		1185212	0					
ANR	1185956	ArgumentList	node		1185212	1					
ANR	1185957	Argument	node		1185212	0					
ANR	1185958	Identifier	node		1185212	0					
ANR	1185959	Identifier	ctype		1185212	1					
ANR	1185960	CompoundStatement		119:30:2652:2652	1185212	1					
ANR	1185961	Label	case ONIGENC_CTYPE_WORD :	4658:1:104779:104802	1185212	0	True				
ANR	1185962	Identifier	ONIGENC_CTYPE_WORD		1185212	0					
ANR	1185963	IfStatement	if ( NCTYPE ( node ) -> not != 0 )		1185212	1					
ANR	1185964	Condition	NCTYPE ( node ) -> not != 0	4659:7:104811:104832	1185212	0	True				
ANR	1185965	EqualityExpression	NCTYPE ( node ) -> not != 0		1185212	0		!=			
ANR	1185966	PtrMemberAccess	NCTYPE ( node ) -> not		1185212	0					
ANR	1185967	CallExpression	NCTYPE ( node )		1185212	0					
ANR	1185968	Callee	NCTYPE		1185212	0					
ANR	1185969	Identifier	NCTYPE		1185212	0					
ANR	1185970	ArgumentList	node		1185212	1					
ANR	1185971	Argument	node		1185212	0					
ANR	1185972	Identifier	node		1185212	0					
ANR	1185973	Identifier	not		1185212	1					
ANR	1185974	PrimaryExpression	0		1185212	1					
ANR	1185975	CompoundStatement		121:31:2711:2711	1185212	1					
ANR	1185976	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		1185212	0					
ANR	1185977	ForInit	i = 0 ;	4660:10:104847:104852	1185212	0	True				
ANR	1185978	AssignmentExpression	i = 0		1185212	0		=			
ANR	1185979	Identifier	i		1185212	0					
ANR	1185980	PrimaryExpression	0		1185212	1					
ANR	1185981	Condition	i < SINGLE_BYTE_SIZE	4660:17:104854:104873	1185212	1	True				
ANR	1185982	RelationalExpression	i < SINGLE_BYTE_SIZE		1185212	0		<			
ANR	1185983	Identifier	i		1185212	0					
ANR	1185984	Identifier	SINGLE_BYTE_SIZE		1185212	1					
ANR	1185985	PostIncDecOperationExpression	i ++	4660:39:104876:104878	1185212	2	True				
ANR	1185986	Identifier	i		1185212	0					
ANR	1185987	IncDec	++		1185212	1					
ANR	1185988	CompoundStatement		122:44:2757:2757	1185212	3					
ANR	1185989	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( env -> enc , i ) )"		1185212	0					
ANR	1185990	Condition	"! ONIGENC_IS_CODE_WORD ( env -> enc , i )"	4661:11:104894:104928	1185212	0	True				
ANR	1185991	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( env -> enc , i )"		1185212	0					
ANR	1185992	UnaryOperator	!		1185212	0					
ANR	1185993	CallExpression	"ONIGENC_IS_CODE_WORD ( env -> enc , i )"		1185212	1					
ANR	1185994	Callee	ONIGENC_IS_CODE_WORD		1185212	0					
ANR	1185995	Identifier	ONIGENC_IS_CODE_WORD		1185212	0					
ANR	1185996	ArgumentList	env -> enc		1185212	1					
ANR	1185997	Argument	env -> enc		1185212	0					
ANR	1185998	PtrMemberAccess	env -> enc		1185212	0					
ANR	1185999	Identifier	env		1185212	0					
ANR	1186000	Identifier	enc		1185212	1					
ANR	1186001	Argument	i		1185212	1					
ANR	1186002	Identifier	i		1185212	0					
ANR	1186003	CompoundStatement		123:48:2807:2807	1185212	1					
ANR	1186004	ExpressionStatement	"add_char_opt_map_info ( & opt -> map , ( UChar ) i , env -> enc )"	4662:2:104935:104988	1185212	0	True				
ANR	1186005	CallExpression	"add_char_opt_map_info ( & opt -> map , ( UChar ) i , env -> enc )"		1185212	0					
ANR	1186006	Callee	add_char_opt_map_info		1185212	0					
ANR	1186007	Identifier	add_char_opt_map_info		1185212	0					
ANR	1186008	ArgumentList	& opt -> map		1185212	1					
ANR	1186009	Argument	& opt -> map		1185212	0					
ANR	1186010	UnaryOperationExpression	& opt -> map		1185212	0					
ANR	1186011	UnaryOperator	&		1185212	0					
ANR	1186012	PtrMemberAccess	opt -> map		1185212	1					
ANR	1186013	Identifier	opt		1185212	0					
ANR	1186014	Identifier	map		1185212	1					
ANR	1186015	Argument	( UChar ) i		1185212	1					
ANR	1186016	CastExpression	( UChar ) i		1185212	0					
ANR	1186017	CastTarget	UChar		1185212	0					
ANR	1186018	Identifier	i		1185212	1					
ANR	1186019	Argument	env -> enc		1185212	2					
ANR	1186020	PtrMemberAccess	env -> enc		1185212	0					
ANR	1186021	Identifier	env		1185212	0					
ANR	1186022	Identifier	enc		1185212	1					
ANR	1186023	ElseStatement	else		1185212	0					
ANR	1186024	CompoundStatement		128:8:2895:2895	1185212	0					
ANR	1186025	ForStatement	for ( i = 0 ; i < SINGLE_BYTE_SIZE ; i ++ )		1185212	0					
ANR	1186026	ForInit	i = 0 ;	4667:10:105031:105036	1185212	0	True				
ANR	1186027	AssignmentExpression	i = 0		1185212	0		=			
ANR	1186028	Identifier	i		1185212	0					
ANR	1186029	PrimaryExpression	0		1185212	1					
ANR	1186030	Condition	i < SINGLE_BYTE_SIZE	4667:17:105038:105057	1185212	1	True				
ANR	1186031	RelationalExpression	i < SINGLE_BYTE_SIZE		1185212	0		<			
ANR	1186032	Identifier	i		1185212	0					
ANR	1186033	Identifier	SINGLE_BYTE_SIZE		1185212	1					
ANR	1186034	PostIncDecOperationExpression	i ++	4667:39:105060:105062	1185212	2	True				
ANR	1186035	Identifier	i		1185212	0					
ANR	1186036	IncDec	++		1185212	1					
ANR	1186037	CompoundStatement		129:44:2941:2941	1185212	3					
ANR	1186038	IfStatement	"if ( ONIGENC_IS_CODE_WORD ( env -> enc , i ) )"		1185212	0					
ANR	1186039	Condition	"ONIGENC_IS_CODE_WORD ( env -> enc , i )"	4668:11:105078:105110	1185212	0	True				
ANR	1186040	CallExpression	"ONIGENC_IS_CODE_WORD ( env -> enc , i )"		1185212	0					
ANR	1186041	Callee	ONIGENC_IS_CODE_WORD		1185212	0					
ANR	1186042	Identifier	ONIGENC_IS_CODE_WORD		1185212	0					
ANR	1186043	ArgumentList	env -> enc		1185212	1					
ANR	1186044	Argument	env -> enc		1185212	0					
ANR	1186045	PtrMemberAccess	env -> enc		1185212	0					
ANR	1186046	Identifier	env		1185212	0					
ANR	1186047	Identifier	enc		1185212	1					
ANR	1186048	Argument	i		1185212	1					
ANR	1186049	Identifier	i		1185212	0					
ANR	1186050	CompoundStatement		130:46:2989:2989	1185212	1					
ANR	1186051	ExpressionStatement	"add_char_opt_map_info ( & opt -> map , ( UChar ) i , env -> enc )"	4669:2:105117:105170	1185212	0	True				
ANR	1186052	CallExpression	"add_char_opt_map_info ( & opt -> map , ( UChar ) i , env -> enc )"		1185212	0					
ANR	1186053	Callee	add_char_opt_map_info		1185212	0					
ANR	1186054	Identifier	add_char_opt_map_info		1185212	0					
ANR	1186055	ArgumentList	& opt -> map		1185212	1					
ANR	1186056	Argument	& opt -> map		1185212	0					
ANR	1186057	UnaryOperationExpression	& opt -> map		1185212	0					
ANR	1186058	UnaryOperator	&		1185212	0					
ANR	1186059	PtrMemberAccess	opt -> map		1185212	1					
ANR	1186060	Identifier	opt		1185212	0					
ANR	1186061	Identifier	map		1185212	1					
ANR	1186062	Argument	( UChar ) i		1185212	1					
ANR	1186063	CastExpression	( UChar ) i		1185212	0					
ANR	1186064	CastTarget	UChar		1185212	0					
ANR	1186065	Identifier	i		1185212	1					
ANR	1186066	Argument	env -> enc		1185212	2					
ANR	1186067	PtrMemberAccess	env -> enc		1185212	0					
ANR	1186068	Identifier	env		1185212	0					
ANR	1186069	Identifier	enc		1185212	1					
ANR	1186070	BreakStatement	break ;	4673:3:105196:105201	1185212	2	True				
ANR	1186071	ElseStatement	else		1185212	0					
ANR	1186072	CompoundStatement		138:11:3101:3101	1185212	0					
ANR	1186073	ExpressionStatement	min = ONIGENC_MBC_MINLEN ( env -> enc )	4677:8:105235:105269	1185212	0	True				
ANR	1186074	AssignmentExpression	min = ONIGENC_MBC_MINLEN ( env -> enc )		1185212	0		=			
ANR	1186075	Identifier	min		1185212	0					
ANR	1186076	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		1185212	1					
ANR	1186077	Callee	ONIGENC_MBC_MINLEN		1185212	0					
ANR	1186078	Identifier	ONIGENC_MBC_MINLEN		1185212	0					
ANR	1186079	ArgumentList	env -> enc		1185212	1					
ANR	1186080	Argument	env -> enc		1185212	0					
ANR	1186081	PtrMemberAccess	env -> enc		1185212	0					
ANR	1186082	Identifier	env		1185212	0					
ANR	1186083	Identifier	enc		1185212	1					
ANR	1186084	ExpressionStatement	"set_mml ( & opt -> len , min , max )"	4679:6:105285:105313	1185212	3	True				
ANR	1186085	CallExpression	"set_mml ( & opt -> len , min , max )"		1185212	0					
ANR	1186086	Callee	set_mml		1185212	0					
ANR	1186087	Identifier	set_mml		1185212	0					
ANR	1186088	ArgumentList	& opt -> len		1185212	1					
ANR	1186089	Argument	& opt -> len		1185212	0					
ANR	1186090	UnaryOperationExpression	& opt -> len		1185212	0					
ANR	1186091	UnaryOperator	&		1185212	0					
ANR	1186092	PtrMemberAccess	opt -> len		1185212	1					
ANR	1186093	Identifier	opt		1185212	0					
ANR	1186094	Identifier	len		1185212	1					
ANR	1186095	Argument	min		1185212	1					
ANR	1186096	Identifier	min		1185212	0					
ANR	1186097	Argument	max		1185212	2					
ANR	1186098	Identifier	max		1185212	0					
ANR	1186099	BreakStatement	break ;	4681:4:105325:105330	1185212	14	True				
ANR	1186100	Label	case NT_CANY :	4683:2:105335:105347	1185212	15	True				
ANR	1186101	Identifier	NT_CANY		1185212	0					
ANR	1186102	CompoundStatement		148:6:3292:3344	1185212	16					
ANR	1186103	IdentifierDeclStatement	OnigDistance min = ONIGENC_MBC_MINLEN ( env -> enc ) ;	4685:6:105361:105408	1185212	0	True				
ANR	1186104	IdentifierDecl	min = ONIGENC_MBC_MINLEN ( env -> enc )		1185212	0					
ANR	1186105	IdentifierDeclType	OnigDistance		1185212	0					
ANR	1186106	Identifier	min		1185212	1					
ANR	1186107	AssignmentExpression	min = ONIGENC_MBC_MINLEN ( env -> enc )		1185212	2		=			
ANR	1186108	Identifier	min		1185212	0					
ANR	1186109	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		1185212	1					
ANR	1186110	Callee	ONIGENC_MBC_MINLEN		1185212	0					
ANR	1186111	Identifier	ONIGENC_MBC_MINLEN		1185212	0					
ANR	1186112	ArgumentList	env -> enc		1185212	1					
ANR	1186113	Argument	env -> enc		1185212	0					
ANR	1186114	PtrMemberAccess	env -> enc		1185212	0					
ANR	1186115	Identifier	env		1185212	0					
ANR	1186116	Identifier	enc		1185212	1					
ANR	1186117	IdentifierDeclStatement	OnigDistance max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc ) ;	4686:6:105416:105468	1185212	1	True				
ANR	1186118	IdentifierDecl	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1185212	0					
ANR	1186119	IdentifierDeclType	OnigDistance		1185212	0					
ANR	1186120	Identifier	max		1185212	1					
ANR	1186121	AssignmentExpression	max = ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1185212	2		=			
ANR	1186122	Identifier	max		1185212	0					
ANR	1186123	CallExpression	ONIGENC_MBC_MAXLEN_DIST ( env -> enc )		1185212	1					
ANR	1186124	Callee	ONIGENC_MBC_MAXLEN_DIST		1185212	0					
ANR	1186125	Identifier	ONIGENC_MBC_MAXLEN_DIST		1185212	0					
ANR	1186126	ArgumentList	env -> enc		1185212	1					
ANR	1186127	Argument	env -> enc		1185212	0					
ANR	1186128	PtrMemberAccess	env -> enc		1185212	0					
ANR	1186129	Identifier	env		1185212	0					
ANR	1186130	Identifier	enc		1185212	1					
ANR	1186131	ExpressionStatement	"set_mml ( & opt -> len , min , max )"	4687:6:105476:105504	1185212	2	True				
ANR	1186132	CallExpression	"set_mml ( & opt -> len , min , max )"		1185212	0					
ANR	1186133	Callee	set_mml		1185212	0					
ANR	1186134	Identifier	set_mml		1185212	0					
ANR	1186135	ArgumentList	& opt -> len		1185212	1					
ANR	1186136	Argument	& opt -> len		1185212	0					
ANR	1186137	UnaryOperationExpression	& opt -> len		1185212	0					
ANR	1186138	UnaryOperator	&		1185212	0					
ANR	1186139	PtrMemberAccess	opt -> len		1185212	1					
ANR	1186140	Identifier	opt		1185212	0					
ANR	1186141	Identifier	len		1185212	1					
ANR	1186142	Argument	min		1185212	1					
ANR	1186143	Identifier	min		1185212	0					
ANR	1186144	Argument	max		1185212	2					
ANR	1186145	Identifier	max		1185212	0					
ANR	1186146	BreakStatement	break ;	4689:4:105516:105521	1185212	17	True				
ANR	1186147	Label	case NT_ANCHOR :	4691:2:105526:105540	1185212	18	True				
ANR	1186148	Identifier	NT_ANCHOR		1185212	0					
ANR	1186149	SwitchStatement	switch ( NANCHOR ( node ) -> type )		1185212	19					
ANR	1186150	Condition	NANCHOR ( node ) -> type	4692:12:105554:105572	1185212	0	True				
ANR	1186151	PtrMemberAccess	NANCHOR ( node ) -> type		1185212	0					
ANR	1186152	CallExpression	NANCHOR ( node )		1185212	0					
ANR	1186153	Callee	NANCHOR		1185212	0					
ANR	1186154	Identifier	NANCHOR		1185212	0					
ANR	1186155	ArgumentList	node		1185212	1					
ANR	1186156	Argument	node		1185212	0					
ANR	1186157	Identifier	node		1185212	0					
ANR	1186158	Identifier	type		1185212	1					
ANR	1186159	CompoundStatement		154:33:3451:3451	1185212	1					
ANR	1186160	Label	case ANCHOR_BEGIN_BUF :	4693:4:105581:105602	1185212	0	True				
ANR	1186161	Identifier	ANCHOR_BEGIN_BUF		1185212	0					
ANR	1186162	Label	case ANCHOR_BEGIN_POSITION :	4694:4:105608:105634	1185212	1	True				
ANR	1186163	Identifier	ANCHOR_BEGIN_POSITION		1185212	0					
ANR	1186164	Label	case ANCHOR_BEGIN_LINE :	4695:4:105640:105662	1185212	2	True				
ANR	1186165	Identifier	ANCHOR_BEGIN_LINE		1185212	0					
ANR	1186166	Label	case ANCHOR_END_BUF :	4696:4:105668:105687	1185212	3	True				
ANR	1186167	Identifier	ANCHOR_END_BUF		1185212	0					
ANR	1186168	Label	case ANCHOR_SEMI_END_BUF :	4697:4:105693:105717	1185212	4	True				
ANR	1186169	Identifier	ANCHOR_SEMI_END_BUF		1185212	0					
ANR	1186170	Label	case ANCHOR_END_LINE :	4698:4:105723:105743	1185212	5	True				
ANR	1186171	Identifier	ANCHOR_END_LINE		1185212	0					
ANR	1186172	ExpressionStatement	"add_opt_anc_info ( & opt -> anc , NANCHOR ( node ) -> type )"	4699:6:105751:105799	1185212	6	True				
ANR	1186173	CallExpression	"add_opt_anc_info ( & opt -> anc , NANCHOR ( node ) -> type )"		1185212	0					
ANR	1186174	Callee	add_opt_anc_info		1185212	0					
ANR	1186175	Identifier	add_opt_anc_info		1185212	0					
ANR	1186176	ArgumentList	& opt -> anc		1185212	1					
ANR	1186177	Argument	& opt -> anc		1185212	0					
ANR	1186178	UnaryOperationExpression	& opt -> anc		1185212	0					
ANR	1186179	UnaryOperator	&		1185212	0					
ANR	1186180	PtrMemberAccess	opt -> anc		1185212	1					
ANR	1186181	Identifier	opt		1185212	0					
ANR	1186182	Identifier	anc		1185212	1					
ANR	1186183	Argument	NANCHOR ( node ) -> type		1185212	1					
ANR	1186184	PtrMemberAccess	NANCHOR ( node ) -> type		1185212	0					
ANR	1186185	CallExpression	NANCHOR ( node )		1185212	0					
ANR	1186186	Callee	NANCHOR		1185212	0					
ANR	1186187	Identifier	NANCHOR		1185212	0					
ANR	1186188	ArgumentList	node		1185212	1					
ANR	1186189	Argument	node		1185212	0					
ANR	1186190	Identifier	node		1185212	0					
ANR	1186191	Identifier	type		1185212	1					
ANR	1186192	BreakStatement	break ;	4700:6:105807:105812	1185212	7	True				
ANR	1186193	Label	case ANCHOR_PREC_READ :	4702:4:105819:105840	1185212	8	True				
ANR	1186194	Identifier	ANCHOR_PREC_READ		1185212	0					
ANR	1186195	CompoundStatement		166:1:3727:3743	1185212	9					
ANR	1186196	IdentifierDeclStatement	NodeOptInfo nopt ;	4704:1:105851:105867	1185212	0	True				
ANR	1186197	IdentifierDecl	nopt		1185212	0					
ANR	1186198	IdentifierDeclType	NodeOptInfo		1185212	0					
ANR	1186199	Identifier	nopt		1185212	1					
ANR	1186200	ExpressionStatement	"r = optimize_node_left ( NANCHOR ( node ) -> target , & nopt , env )"	4706:1:105871:105928	1185212	1	True				
ANR	1186201	AssignmentExpression	"r = optimize_node_left ( NANCHOR ( node ) -> target , & nopt , env )"		1185212	0		=			
ANR	1186202	Identifier	r		1185212	0					
ANR	1186203	CallExpression	"optimize_node_left ( NANCHOR ( node ) -> target , & nopt , env )"		1185212	1					
ANR	1186204	Callee	optimize_node_left		1185212	0					
ANR	1186205	Identifier	optimize_node_left		1185212	0					
ANR	1186206	ArgumentList	NANCHOR ( node ) -> target		1185212	1					
ANR	1186207	Argument	NANCHOR ( node ) -> target		1185212	0					
ANR	1186208	PtrMemberAccess	NANCHOR ( node ) -> target		1185212	0					
ANR	1186209	CallExpression	NANCHOR ( node )		1185212	0					
ANR	1186210	Callee	NANCHOR		1185212	0					
ANR	1186211	Identifier	NANCHOR		1185212	0					
ANR	1186212	ArgumentList	node		1185212	1					
ANR	1186213	Argument	node		1185212	0					
ANR	1186214	Identifier	node		1185212	0					
ANR	1186215	Identifier	target		1185212	1					
ANR	1186216	Argument	& nopt		1185212	1					
ANR	1186217	UnaryOperationExpression	& nopt		1185212	0					
ANR	1186218	UnaryOperator	&		1185212	0					
ANR	1186219	Identifier	nopt		1185212	1					
ANR	1186220	Argument	env		1185212	2					
ANR	1186221	Identifier	env		1185212	0					
ANR	1186222	IfStatement	if ( r == 0 )		1185212	2					
ANR	1186223	Condition	r == 0	4707:5:105935:105940	1185212	0	True				
ANR	1186224	EqualityExpression	r == 0		1185212	0		==			
ANR	1186225	Identifier	r		1185212	0					
ANR	1186226	PrimaryExpression	0		1185212	1					
ANR	1186227	CompoundStatement		169:13:3819:3819	1185212	1					
ANR	1186228	IfStatement	if ( nopt . exb . len > 0 )		1185212	0					
ANR	1186229	Condition	nopt . exb . len > 0	4708:7:105952:105967	1185212	0	True				
ANR	1186230	RelationalExpression	nopt . exb . len > 0		1185212	0		>			
ANR	1186231	MemberAccess	nopt . exb . len		1185212	0					
ANR	1186232	MemberAccess	nopt . exb		1185212	0					
ANR	1186233	Identifier	nopt		1185212	0					
ANR	1186234	Identifier	exb		1185212	1					
ANR	1186235	Identifier	len		1185212	1					
ANR	1186236	PrimaryExpression	0		1185212	1					
ANR	1186237	ExpressionStatement	"copy_opt_exact_info ( & opt -> expr , & nopt . exb )"	4709:5:105975:106017	1185212	1	True				
ANR	1186238	CallExpression	"copy_opt_exact_info ( & opt -> expr , & nopt . exb )"		1185212	0					
ANR	1186239	Callee	copy_opt_exact_info		1185212	0					
ANR	1186240	Identifier	copy_opt_exact_info		1185212	0					
ANR	1186241	ArgumentList	& opt -> expr		1185212	1					
ANR	1186242	Argument	& opt -> expr		1185212	0					
ANR	1186243	UnaryOperationExpression	& opt -> expr		1185212	0					
ANR	1186244	UnaryOperator	&		1185212	0					
ANR	1186245	PtrMemberAccess	opt -> expr		1185212	1					
ANR	1186246	Identifier	opt		1185212	0					
ANR	1186247	Identifier	expr		1185212	1					
ANR	1186248	Argument	& nopt . exb		1185212	1					
ANR	1186249	UnaryOperationExpression	& nopt . exb		1185212	0					
ANR	1186250	UnaryOperator	&		1185212	0					
ANR	1186251	MemberAccess	nopt . exb		1185212	1					
ANR	1186252	Identifier	nopt		1185212	0					
ANR	1186253	Identifier	exb		1185212	1					
ANR	1186254	ElseStatement	else		1185212	0					
ANR	1186255	IfStatement	if ( nopt . exm . len > 0 )		1185212	0					
ANR	1186256	Condition	nopt . exm . len > 0	4710:12:106031:106046	1185212	0	True				
ANR	1186257	RelationalExpression	nopt . exm . len > 0		1185212	0		>			
ANR	1186258	MemberAccess	nopt . exm . len		1185212	0					
ANR	1186259	MemberAccess	nopt . exm		1185212	0					
ANR	1186260	Identifier	nopt		1185212	0					
ANR	1186261	Identifier	exm		1185212	1					
ANR	1186262	Identifier	len		1185212	1					
ANR	1186263	PrimaryExpression	0		1185212	1					
ANR	1186264	ExpressionStatement	"copy_opt_exact_info ( & opt -> expr , & nopt . exm )"	4711:5:106054:106096	1185212	1	True				
ANR	1186265	CallExpression	"copy_opt_exact_info ( & opt -> expr , & nopt . exm )"		1185212	0					
ANR	1186266	Callee	copy_opt_exact_info		1185212	0					
ANR	1186267	Identifier	copy_opt_exact_info		1185212	0					
ANR	1186268	ArgumentList	& opt -> expr		1185212	1					
ANR	1186269	Argument	& opt -> expr		1185212	0					
ANR	1186270	UnaryOperationExpression	& opt -> expr		1185212	0					
ANR	1186271	UnaryOperator	&		1185212	0					
ANR	1186272	PtrMemberAccess	opt -> expr		1185212	1					
ANR	1186273	Identifier	opt		1185212	0					
ANR	1186274	Identifier	expr		1185212	1					
ANR	1186275	Argument	& nopt . exm		1185212	1					
ANR	1186276	UnaryOperationExpression	& nopt . exm		1185212	0					
ANR	1186277	UnaryOperator	&		1185212	0					
ANR	1186278	MemberAccess	nopt . exm		1185212	1					
ANR	1186279	Identifier	nopt		1185212	0					
ANR	1186280	Identifier	exm		1185212	1					
ANR	1186281	ExpressionStatement	opt -> expr . reach_end = 0	4713:3:106102:106125	1185212	1	True				
ANR	1186282	AssignmentExpression	opt -> expr . reach_end = 0		1185212	0		=			
ANR	1186283	MemberAccess	opt -> expr . reach_end		1185212	0					
ANR	1186284	PtrMemberAccess	opt -> expr		1185212	0					
ANR	1186285	Identifier	opt		1185212	0					
ANR	1186286	Identifier	expr		1185212	1					
ANR	1186287	Identifier	reach_end		1185212	1					
ANR	1186288	PrimaryExpression	0		1185212	1					
ANR	1186289	IfStatement	if ( nopt . map . value > 0 )		1185212	2					
ANR	1186290	Condition	nopt . map . value > 0	4715:7:106135:106152	1185212	0	True				
ANR	1186291	RelationalExpression	nopt . map . value > 0		1185212	0		>			
ANR	1186292	MemberAccess	nopt . map . value		1185212	0					
ANR	1186293	MemberAccess	nopt . map		1185212	0					
ANR	1186294	Identifier	nopt		1185212	0					
ANR	1186295	Identifier	map		1185212	1					
ANR	1186296	Identifier	value		1185212	1					
ANR	1186297	PrimaryExpression	0		1185212	1					
ANR	1186298	ExpressionStatement	"copy_opt_map_info ( & opt -> map , & nopt . map )"	4716:5:106160:106199	1185212	1	True				
ANR	1186299	CallExpression	"copy_opt_map_info ( & opt -> map , & nopt . map )"		1185212	0					
ANR	1186300	Callee	copy_opt_map_info		1185212	0					
ANR	1186301	Identifier	copy_opt_map_info		1185212	0					
ANR	1186302	ArgumentList	& opt -> map		1185212	1					
ANR	1186303	Argument	& opt -> map		1185212	0					
ANR	1186304	UnaryOperationExpression	& opt -> map		1185212	0					
ANR	1186305	UnaryOperator	&		1185212	0					
ANR	1186306	PtrMemberAccess	opt -> map		1185212	1					
ANR	1186307	Identifier	opt		1185212	0					
ANR	1186308	Identifier	map		1185212	1					
ANR	1186309	Argument	& nopt . map		1185212	1					
ANR	1186310	UnaryOperationExpression	& nopt . map		1185212	0					
ANR	1186311	UnaryOperator	&		1185212	0					
ANR	1186312	MemberAccess	nopt . map		1185212	1					
ANR	1186313	Identifier	nopt		1185212	0					
ANR	1186314	Identifier	map		1185212	1					
ANR	1186315	BreakStatement	break ;	4719:6:106218:106223	1185212	10	True				
ANR	1186316	Label	case ANCHOR_PREC_READ_NOT :	4721:4:106230:106255	1185212	11	True				
ANR	1186317	Identifier	ANCHOR_PREC_READ_NOT		1185212	0					
ANR	1186318	Label	case ANCHOR_LOOK_BEHIND :	4722:4:106261:106284	1185212	12	True				
ANR	1186319	Identifier	ANCHOR_LOOK_BEHIND		1185212	0					
ANR	1186320	Label	case ANCHOR_LOOK_BEHIND_NOT :	4723:4:106327:106354	1185212	13	True				
ANR	1186321	Identifier	ANCHOR_LOOK_BEHIND_NOT		1185212	0					
ANR	1186322	BreakStatement	break ;	4724:6:106362:106367	1185212	14	True				
ANR	1186323	BreakStatement	break ;	4726:4:106379:106384	1185212	20	True				
ANR	1186324	Label	case NT_BREF :	4728:2:106389:106401	1185212	21	True				
ANR	1186325	Identifier	NT_BREF		1185212	0					
ANR	1186326	CompoundStatement		196:6:4418:4444	1185212	22					
ANR	1186327	IdentifierDeclStatement	int i ;	4730:6:106415:106420	1185212	0	True				
ANR	1186328	IdentifierDecl	i		1185212	0					
ANR	1186329	IdentifierDeclType	int		1185212	0					
ANR	1186330	Identifier	i		1185212	1					
ANR	1186331	IdentifierDeclStatement	int * backs ;	4731:6:106428:106438	1185212	1	True				
ANR	1186332	IdentifierDecl	* backs		1185212	0					
ANR	1186333	IdentifierDeclType	int *		1185212	0					
ANR	1186334	Identifier	backs		1185212	1					
ANR	1186335	IdentifierDeclStatement	"OnigDistance min , max , tmin , tmax ;"	4732:6:106446:106479	1185212	2	True				
ANR	1186336	IdentifierDecl	min		1185212	0					
ANR	1186337	IdentifierDeclType	OnigDistance		1185212	0					
ANR	1186338	Identifier	min		1185212	1					
ANR	1186339	IdentifierDecl	max		1185212	1					
ANR	1186340	IdentifierDeclType	OnigDistance		1185212	0					
ANR	1186341	Identifier	max		1185212	1					
ANR	1186342	IdentifierDecl	tmin		1185212	2					
ANR	1186343	IdentifierDeclType	OnigDistance		1185212	0					
ANR	1186344	Identifier	tmin		1185212	1					
ANR	1186345	IdentifierDecl	tmax		1185212	3					
ANR	1186346	IdentifierDeclType	OnigDistance		1185212	0					
ANR	1186347	Identifier	tmax		1185212	1					
ANR	1186348	IdentifierDeclStatement	Node * * nodes = SCANENV_MEM_NODES ( env -> scan_env ) ;	4733:6:106487:106534	1185212	3	True				
ANR	1186349	IdentifierDecl	* * nodes = SCANENV_MEM_NODES ( env -> scan_env )		1185212	0					
ANR	1186350	IdentifierDeclType	Node * *		1185212	0					
ANR	1186351	Identifier	nodes		1185212	1					
ANR	1186352	AssignmentExpression	* * nodes = SCANENV_MEM_NODES ( env -> scan_env )		1185212	2		=			
ANR	1186353	Identifier	nodes		1185212	0					
ANR	1186354	CallExpression	SCANENV_MEM_NODES ( env -> scan_env )		1185212	1					
ANR	1186355	Callee	SCANENV_MEM_NODES		1185212	0					
ANR	1186356	Identifier	SCANENV_MEM_NODES		1185212	0					
ANR	1186357	ArgumentList	env -> scan_env		1185212	1					
ANR	1186358	Argument	env -> scan_env		1185212	0					
ANR	1186359	PtrMemberAccess	env -> scan_env		1185212	0					
ANR	1186360	Identifier	env		1185212	0					
ANR	1186361	Identifier	scan_env		1185212	1					
ANR	1186362	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	4734:6:106542:106568	1185212	4	True				
ANR	1186363	IdentifierDecl	* br = NBREF ( node )		1185212	0					
ANR	1186364	IdentifierDeclType	BRefNode *		1185212	0					
ANR	1186365	Identifier	br		1185212	1					
ANR	1186366	AssignmentExpression	* br = NBREF ( node )		1185212	2		=			
ANR	1186367	Identifier	br		1185212	0					
ANR	1186368	CallExpression	NBREF ( node )		1185212	1					
ANR	1186369	Callee	NBREF		1185212	0					
ANR	1186370	Identifier	NBREF		1185212	0					
ANR	1186371	ArgumentList	node		1185212	1					
ANR	1186372	Argument	node		1185212	0					
ANR	1186373	Identifier	node		1185212	0					
ANR	1186374	IfStatement	if ( br -> state & NST_RECURSION )		1185212	5					
ANR	1186375	Condition	br -> state & NST_RECURSION	4736:10:106581:106605	1185212	0	True				
ANR	1186376	BitAndExpression	br -> state & NST_RECURSION		1185212	0		&			
ANR	1186377	PtrMemberAccess	br -> state		1185212	0					
ANR	1186378	Identifier	br		1185212	0					
ANR	1186379	Identifier	state		1185212	1					
ANR	1186380	Identifier	NST_RECURSION		1185212	1					
ANR	1186381	CompoundStatement		198:37:4484:4484	1185212	1					
ANR	1186382	ExpressionStatement	"set_mml ( & opt -> len , 0 , ONIG_INFINITE_DISTANCE )"	4737:1:106611:106656	1185212	0	True				
ANR	1186383	CallExpression	"set_mml ( & opt -> len , 0 , ONIG_INFINITE_DISTANCE )"		1185212	0					
ANR	1186384	Callee	set_mml		1185212	0					
ANR	1186385	Identifier	set_mml		1185212	0					
ANR	1186386	ArgumentList	& opt -> len		1185212	1					
ANR	1186387	Argument	& opt -> len		1185212	0					
ANR	1186388	UnaryOperationExpression	& opt -> len		1185212	0					
ANR	1186389	UnaryOperator	&		1185212	0					
ANR	1186390	PtrMemberAccess	opt -> len		1185212	1					
ANR	1186391	Identifier	opt		1185212	0					
ANR	1186392	Identifier	len		1185212	1					
ANR	1186393	Argument	0		1185212	1					
ANR	1186394	PrimaryExpression	0		1185212	0					
ANR	1186395	Argument	ONIG_INFINITE_DISTANCE		1185212	2					
ANR	1186396	Identifier	ONIG_INFINITE_DISTANCE		1185212	0					
ANR	1186397	BreakStatement	break ;	4738:1:106659:106664	1185212	1	True				
ANR	1186398	ExpressionStatement	backs = BACKREFS_P ( br )	4740:6:106680:106702	1185212	6	True				
ANR	1186399	AssignmentExpression	backs = BACKREFS_P ( br )		1185212	0		=			
ANR	1186400	Identifier	backs		1185212	0					
ANR	1186401	CallExpression	BACKREFS_P ( br )		1185212	1					
ANR	1186402	Callee	BACKREFS_P		1185212	0					
ANR	1186403	Identifier	BACKREFS_P		1185212	0					
ANR	1186404	ArgumentList	br		1185212	1					
ANR	1186405	Argument	br		1185212	0					
ANR	1186406	Identifier	br		1185212	0					
ANR	1186407	ExpressionStatement	"r = get_min_match_length ( nodes [ backs [ 0 ] ] , & min , env -> scan_env )"	4741:6:106710:106772	1185212	7	True				
ANR	1186408	AssignmentExpression	"r = get_min_match_length ( nodes [ backs [ 0 ] ] , & min , env -> scan_env )"		1185212	0		=			
ANR	1186409	Identifier	r		1185212	0					
ANR	1186410	CallExpression	"get_min_match_length ( nodes [ backs [ 0 ] ] , & min , env -> scan_env )"		1185212	1					
ANR	1186411	Callee	get_min_match_length		1185212	0					
ANR	1186412	Identifier	get_min_match_length		1185212	0					
ANR	1186413	ArgumentList	nodes [ backs [ 0 ] ]		1185212	1					
ANR	1186414	Argument	nodes [ backs [ 0 ] ]		1185212	0					
ANR	1186415	ArrayIndexing	nodes [ backs [ 0 ] ]		1185212	0					
ANR	1186416	Identifier	nodes		1185212	0					
ANR	1186417	ArrayIndexing	backs [ 0 ]		1185212	1					
ANR	1186418	Identifier	backs		1185212	0					
ANR	1186419	PrimaryExpression	0		1185212	1					
ANR	1186420	Argument	& min		1185212	1					
ANR	1186421	UnaryOperationExpression	& min		1185212	0					
ANR	1186422	UnaryOperator	&		1185212	0					
ANR	1186423	Identifier	min		1185212	1					
ANR	1186424	Argument	env -> scan_env		1185212	2					
ANR	1186425	PtrMemberAccess	env -> scan_env		1185212	0					
ANR	1186426	Identifier	env		1185212	0					
ANR	1186427	Identifier	scan_env		1185212	1					
ANR	1186428	IfStatement	if ( r != 0 )		1185212	8					
ANR	1186429	Condition	r != 0	4742:10:106784:106789	1185212	0	True				
ANR	1186430	EqualityExpression	r != 0		1185212	0		!=			
ANR	1186431	Identifier	r		1185212	0					
ANR	1186432	PrimaryExpression	0		1185212	1					
ANR	1186433	BreakStatement	break ;	4742:18:106792:106797	1185212	1	True				
ANR	1186434	ExpressionStatement	"r = get_max_match_length ( nodes [ backs [ 0 ] ] , & max , env -> scan_env )"	4743:6:106805:106867	1185212	9	True				
ANR	1186435	AssignmentExpression	"r = get_max_match_length ( nodes [ backs [ 0 ] ] , & max , env -> scan_env )"		1185212	0		=			
ANR	1186436	Identifier	r		1185212	0					
ANR	1186437	CallExpression	"get_max_match_length ( nodes [ backs [ 0 ] ] , & max , env -> scan_env )"		1185212	1					
ANR	1186438	Callee	get_max_match_length		1185212	0					
ANR	1186439	Identifier	get_max_match_length		1185212	0					
ANR	1186440	ArgumentList	nodes [ backs [ 0 ] ]		1185212	1					
ANR	1186441	Argument	nodes [ backs [ 0 ] ]		1185212	0					
ANR	1186442	ArrayIndexing	nodes [ backs [ 0 ] ]		1185212	0					
ANR	1186443	Identifier	nodes		1185212	0					
ANR	1186444	ArrayIndexing	backs [ 0 ]		1185212	1					
ANR	1186445	Identifier	backs		1185212	0					
ANR	1186446	PrimaryExpression	0		1185212	1					
ANR	1186447	Argument	& max		1185212	1					
ANR	1186448	UnaryOperationExpression	& max		1185212	0					
ANR	1186449	UnaryOperator	&		1185212	0					
ANR	1186450	Identifier	max		1185212	1					
ANR	1186451	Argument	env -> scan_env		1185212	2					
ANR	1186452	PtrMemberAccess	env -> scan_env		1185212	0					
ANR	1186453	Identifier	env		1185212	0					
ANR	1186454	Identifier	scan_env		1185212	1					
ANR	1186455	IfStatement	if ( r != 0 )		1185212	10					
ANR	1186456	Condition	r != 0	4744:10:106879:106884	1185212	0	True				
ANR	1186457	EqualityExpression	r != 0		1185212	0		!=			
ANR	1186458	Identifier	r		1185212	0					
ANR	1186459	PrimaryExpression	0		1185212	1					
ANR	1186460	BreakStatement	break ;	4744:18:106887:106892	1185212	1	True				
ANR	1186461	ForStatement	for ( i = 1 ; i < br -> back_num ; i ++ )		1185212	11					
ANR	1186462	ForInit	i = 1 ;	4745:11:106905:106910	1185212	0	True				
ANR	1186463	AssignmentExpression	i = 1		1185212	0		=			
ANR	1186464	Identifier	i		1185212	0					
ANR	1186465	PrimaryExpression	1		1185212	1					
ANR	1186466	Condition	i < br -> back_num	4745:18:106912:106927	1185212	1	True				
ANR	1186467	RelationalExpression	i < br -> back_num		1185212	0		<			
ANR	1186468	Identifier	i		1185212	0					
ANR	1186469	PtrMemberAccess	br -> back_num		1185212	1					
ANR	1186470	Identifier	br		1185212	0					
ANR	1186471	Identifier	back_num		1185212	1					
ANR	1186472	PostIncDecOperationExpression	i ++	4745:36:106930:106932	1185212	2	True				
ANR	1186473	Identifier	i		1185212	0					
ANR	1186474	IncDec	++		1185212	1					
ANR	1186475	CompoundStatement		207:41:4811:4811	1185212	3					
ANR	1186476	ExpressionStatement	"r = get_min_match_length ( nodes [ backs [ i ] ] , & tmin , env -> scan_env )"	4746:1:106938:107001	1185212	0	True				
ANR	1186477	AssignmentExpression	"r = get_min_match_length ( nodes [ backs [ i ] ] , & tmin , env -> scan_env )"		1185212	0		=			
ANR	1186478	Identifier	r		1185212	0					
ANR	1186479	CallExpression	"get_min_match_length ( nodes [ backs [ i ] ] , & tmin , env -> scan_env )"		1185212	1					
ANR	1186480	Callee	get_min_match_length		1185212	0					
ANR	1186481	Identifier	get_min_match_length		1185212	0					
ANR	1186482	ArgumentList	nodes [ backs [ i ] ]		1185212	1					
ANR	1186483	Argument	nodes [ backs [ i ] ]		1185212	0					
ANR	1186484	ArrayIndexing	nodes [ backs [ i ] ]		1185212	0					
ANR	1186485	Identifier	nodes		1185212	0					
ANR	1186486	ArrayIndexing	backs [ i ]		1185212	1					
ANR	1186487	Identifier	backs		1185212	0					
ANR	1186488	Identifier	i		1185212	1					
ANR	1186489	Argument	& tmin		1185212	1					
ANR	1186490	UnaryOperationExpression	& tmin		1185212	0					
ANR	1186491	UnaryOperator	&		1185212	0					
ANR	1186492	Identifier	tmin		1185212	1					
ANR	1186493	Argument	env -> scan_env		1185212	2					
ANR	1186494	PtrMemberAccess	env -> scan_env		1185212	0					
ANR	1186495	Identifier	env		1185212	0					
ANR	1186496	Identifier	scan_env		1185212	1					
ANR	1186497	IfStatement	if ( r != 0 )		1185212	1					
ANR	1186498	Condition	r != 0	4747:5:107008:107013	1185212	0	True				
ANR	1186499	EqualityExpression	r != 0		1185212	0		!=			
ANR	1186500	Identifier	r		1185212	0					
ANR	1186501	PrimaryExpression	0		1185212	1					
ANR	1186502	BreakStatement	break ;	4747:13:107016:107021	1185212	1	True				
ANR	1186503	ExpressionStatement	"r = get_max_match_length ( nodes [ backs [ i ] ] , & tmax , env -> scan_env )"	4748:1:107024:107087	1185212	2	True				
ANR	1186504	AssignmentExpression	"r = get_max_match_length ( nodes [ backs [ i ] ] , & tmax , env -> scan_env )"		1185212	0		=			
ANR	1186505	Identifier	r		1185212	0					
ANR	1186506	CallExpression	"get_max_match_length ( nodes [ backs [ i ] ] , & tmax , env -> scan_env )"		1185212	1					
ANR	1186507	Callee	get_max_match_length		1185212	0					
ANR	1186508	Identifier	get_max_match_length		1185212	0					
ANR	1186509	ArgumentList	nodes [ backs [ i ] ]		1185212	1					
ANR	1186510	Argument	nodes [ backs [ i ] ]		1185212	0					
ANR	1186511	ArrayIndexing	nodes [ backs [ i ] ]		1185212	0					
ANR	1186512	Identifier	nodes		1185212	0					
ANR	1186513	ArrayIndexing	backs [ i ]		1185212	1					
ANR	1186514	Identifier	backs		1185212	0					
ANR	1186515	Identifier	i		1185212	1					
ANR	1186516	Argument	& tmax		1185212	1					
ANR	1186517	UnaryOperationExpression	& tmax		1185212	0					
ANR	1186518	UnaryOperator	&		1185212	0					
ANR	1186519	Identifier	tmax		1185212	1					
ANR	1186520	Argument	env -> scan_env		1185212	2					
ANR	1186521	PtrMemberAccess	env -> scan_env		1185212	0					
ANR	1186522	Identifier	env		1185212	0					
ANR	1186523	Identifier	scan_env		1185212	1					
ANR	1186524	IfStatement	if ( r != 0 )		1185212	3					
ANR	1186525	Condition	r != 0	4749:5:107094:107099	1185212	0	True				
ANR	1186526	EqualityExpression	r != 0		1185212	0		!=			
ANR	1186527	Identifier	r		1185212	0					
ANR	1186528	PrimaryExpression	0		1185212	1					
ANR	1186529	BreakStatement	break ;	4749:13:107102:107107	1185212	1	True				
ANR	1186530	IfStatement	if ( min > tmin )		1185212	4					
ANR	1186531	Condition	min > tmin	4750:5:107114:107123	1185212	0	True				
ANR	1186532	RelationalExpression	min > tmin		1185212	0		>			
ANR	1186533	Identifier	min		1185212	0					
ANR	1186534	Identifier	tmin		1185212	1					
ANR	1186535	ExpressionStatement	min = tmin	4750:17:107126:107136	1185212	1	True				
ANR	1186536	AssignmentExpression	min = tmin		1185212	0		=			
ANR	1186537	Identifier	min		1185212	0					
ANR	1186538	Identifier	tmin		1185212	1					
ANR	1186539	IfStatement	if ( max < tmax )		1185212	5					
ANR	1186540	Condition	max < tmax	4751:5:107143:107152	1185212	0	True				
ANR	1186541	RelationalExpression	max < tmax		1185212	0		<			
ANR	1186542	Identifier	max		1185212	0					
ANR	1186543	Identifier	tmax		1185212	1					
ANR	1186544	ExpressionStatement	max = tmax	4751:17:107155:107165	1185212	1	True				
ANR	1186545	AssignmentExpression	max = tmax		1185212	0		=			
ANR	1186546	Identifier	max		1185212	0					
ANR	1186547	Identifier	tmax		1185212	1					
ANR	1186548	IfStatement	if ( r == 0 )		1185212	12					
ANR	1186549	Condition	r == 0	4753:10:107185:107190	1185212	0	True				
ANR	1186550	EqualityExpression	r == 0		1185212	0		==			
ANR	1186551	Identifier	r		1185212	0					
ANR	1186552	PrimaryExpression	0		1185212	1					
ANR	1186553	ExpressionStatement	"set_mml ( & opt -> len , min , max )"	4753:18:107193:107221	1185212	1	True				
ANR	1186554	CallExpression	"set_mml ( & opt -> len , min , max )"		1185212	0					
ANR	1186555	Callee	set_mml		1185212	0					
ANR	1186556	Identifier	set_mml		1185212	0					
ANR	1186557	ArgumentList	& opt -> len		1185212	1					
ANR	1186558	Argument	& opt -> len		1185212	0					
ANR	1186559	UnaryOperationExpression	& opt -> len		1185212	0					
ANR	1186560	UnaryOperator	&		1185212	0					
ANR	1186561	PtrMemberAccess	opt -> len		1185212	1					
ANR	1186562	Identifier	opt		1185212	0					
ANR	1186563	Identifier	len		1185212	1					
ANR	1186564	Argument	min		1185212	1					
ANR	1186565	Identifier	min		1185212	0					
ANR	1186566	Argument	max		1185212	2					
ANR	1186567	Identifier	max		1185212	0					
ANR	1186568	BreakStatement	break ;	4755:4:107233:107238	1185212	23	True				
ANR	1186569	Label	case NT_CALL :	4758:2:107266:107278	1185212	24	True				
ANR	1186570	Identifier	NT_CALL		1185212	0					
ANR	1186571	IfStatement	if ( IS_CALL_RECURSION ( NCALL ( node ) ) )		1185212	25					
ANR	1186572	Condition	IS_CALL_RECURSION ( NCALL ( node ) )	4759:8:107288:107317	1185212	0	True				
ANR	1186573	CallExpression	IS_CALL_RECURSION ( NCALL ( node ) )		1185212	0					
ANR	1186574	Callee	IS_CALL_RECURSION		1185212	0					
ANR	1186575	Identifier	IS_CALL_RECURSION		1185212	0					
ANR	1186576	ArgumentList	NCALL ( node )		1185212	1					
ANR	1186577	Argument	NCALL ( node )		1185212	0					
ANR	1186578	CallExpression	NCALL ( node )		1185212	0					
ANR	1186579	Callee	NCALL		1185212	0					
ANR	1186580	Identifier	NCALL		1185212	0					
ANR	1186581	ArgumentList	node		1185212	1					
ANR	1186582	Argument	node		1185212	0					
ANR	1186583	Identifier	node		1185212	0					
ANR	1186584	ExpressionStatement	"set_mml ( & opt -> len , 0 , ONIG_INFINITE_DISTANCE )"	4760:6:107326:107371	1185212	1	True				
ANR	1186585	CallExpression	"set_mml ( & opt -> len , 0 , ONIG_INFINITE_DISTANCE )"		1185212	0					
ANR	1186586	Callee	set_mml		1185212	0					
ANR	1186587	Identifier	set_mml		1185212	0					
ANR	1186588	ArgumentList	& opt -> len		1185212	1					
ANR	1186589	Argument	& opt -> len		1185212	0					
ANR	1186590	UnaryOperationExpression	& opt -> len		1185212	0					
ANR	1186591	UnaryOperator	&		1185212	0					
ANR	1186592	PtrMemberAccess	opt -> len		1185212	1					
ANR	1186593	Identifier	opt		1185212	0					
ANR	1186594	Identifier	len		1185212	1					
ANR	1186595	Argument	0		1185212	1					
ANR	1186596	PrimaryExpression	0		1185212	0					
ANR	1186597	Argument	ONIG_INFINITE_DISTANCE		1185212	2					
ANR	1186598	Identifier	ONIG_INFINITE_DISTANCE		1185212	0					
ANR	1186599	ElseStatement	else		1185212	0					
ANR	1186600	CompoundStatement		224:6:5266:5300	1185212	0					
ANR	1186601	IdentifierDeclStatement	OnigOptionType save = env -> options ;	4762:6:107390:107424	1185212	0	True				
ANR	1186602	IdentifierDecl	save = env -> options		1185212	0					
ANR	1186603	IdentifierDeclType	OnigOptionType		1185212	0					
ANR	1186604	Identifier	save		1185212	1					
ANR	1186605	AssignmentExpression	save = env -> options		1185212	2		=			
ANR	1186606	Identifier	save		1185212	0					
ANR	1186607	PtrMemberAccess	env -> options		1185212	1					
ANR	1186608	Identifier	env		1185212	0					
ANR	1186609	Identifier	options		1185212	1					
ANR	1186610	ExpressionStatement	env -> options = NENCLOSE ( NCALL ( node ) -> target ) -> option	4763:6:107432:107484	1185212	1	True				
ANR	1186611	AssignmentExpression	env -> options = NENCLOSE ( NCALL ( node ) -> target ) -> option		1185212	0		=			
ANR	1186612	PtrMemberAccess	env -> options		1185212	0					
ANR	1186613	Identifier	env		1185212	0					
ANR	1186614	Identifier	options		1185212	1					
ANR	1186615	PtrMemberAccess	NENCLOSE ( NCALL ( node ) -> target ) -> option		1185212	1					
ANR	1186616	CallExpression	NENCLOSE ( NCALL ( node ) -> target )		1185212	0					
ANR	1186617	Callee	NENCLOSE		1185212	0					
ANR	1186618	Identifier	NENCLOSE		1185212	0					
ANR	1186619	ArgumentList	NCALL ( node ) -> target		1185212	1					
ANR	1186620	Argument	NCALL ( node ) -> target		1185212	0					
ANR	1186621	PtrMemberAccess	NCALL ( node ) -> target		1185212	0					
ANR	1186622	CallExpression	NCALL ( node )		1185212	0					
ANR	1186623	Callee	NCALL		1185212	0					
ANR	1186624	Identifier	NCALL		1185212	0					
ANR	1186625	ArgumentList	node		1185212	1					
ANR	1186626	Argument	node		1185212	0					
ANR	1186627	Identifier	node		1185212	0					
ANR	1186628	Identifier	target		1185212	1					
ANR	1186629	Identifier	option		1185212	1					
ANR	1186630	ExpressionStatement	"r = optimize_node_left ( NCALL ( node ) -> target , opt , env )"	4764:6:107492:107545	1185212	2	True				
ANR	1186631	AssignmentExpression	"r = optimize_node_left ( NCALL ( node ) -> target , opt , env )"		1185212	0		=			
ANR	1186632	Identifier	r		1185212	0					
ANR	1186633	CallExpression	"optimize_node_left ( NCALL ( node ) -> target , opt , env )"		1185212	1					
ANR	1186634	Callee	optimize_node_left		1185212	0					
ANR	1186635	Identifier	optimize_node_left		1185212	0					
ANR	1186636	ArgumentList	NCALL ( node ) -> target		1185212	1					
ANR	1186637	Argument	NCALL ( node ) -> target		1185212	0					
ANR	1186638	PtrMemberAccess	NCALL ( node ) -> target		1185212	0					
ANR	1186639	CallExpression	NCALL ( node )		1185212	0					
ANR	1186640	Callee	NCALL		1185212	0					
ANR	1186641	Identifier	NCALL		1185212	0					
ANR	1186642	ArgumentList	node		1185212	1					
ANR	1186643	Argument	node		1185212	0					
ANR	1186644	Identifier	node		1185212	0					
ANR	1186645	Identifier	target		1185212	1					
ANR	1186646	Argument	opt		1185212	1					
ANR	1186647	Identifier	opt		1185212	0					
ANR	1186648	Argument	env		1185212	2					
ANR	1186649	Identifier	env		1185212	0					
ANR	1186650	ExpressionStatement	env -> options = save	4765:6:107553:107572	1185212	3	True				
ANR	1186651	AssignmentExpression	env -> options = save		1185212	0		=			
ANR	1186652	PtrMemberAccess	env -> options		1185212	0					
ANR	1186653	Identifier	env		1185212	0					
ANR	1186654	Identifier	options		1185212	1					
ANR	1186655	Identifier	save		1185212	1					
ANR	1186656	BreakStatement	break ;	4767:4:107584:107589	1185212	26	True				
ANR	1186657	Label	case NT_QTFR :	4770:2:107601:107613	1185212	27	True				
ANR	1186658	Identifier	NT_QTFR		1185212	0					
ANR	1186659	CompoundStatement		237:6:5569:5595	1185212	28					
ANR	1186660	IdentifierDeclStatement	int i ;	4772:6:107627:107632	1185212	0	True				
ANR	1186661	IdentifierDecl	i		1185212	0					
ANR	1186662	IdentifierDeclType	int		1185212	0					
ANR	1186663	Identifier	i		1185212	1					
ANR	1186664	IdentifierDeclStatement	"OnigDistance min , max ;"	4773:6:107640:107661	1185212	1	True				
ANR	1186665	IdentifierDecl	min		1185212	0					
ANR	1186666	IdentifierDeclType	OnigDistance		1185212	0					
ANR	1186667	Identifier	min		1185212	1					
ANR	1186668	IdentifierDecl	max		1185212	1					
ANR	1186669	IdentifierDeclType	OnigDistance		1185212	0					
ANR	1186670	Identifier	max		1185212	1					
ANR	1186671	IdentifierDeclStatement	NodeOptInfo nopt ;	4774:6:107669:107685	1185212	2	True				
ANR	1186672	IdentifierDecl	nopt		1185212	0					
ANR	1186673	IdentifierDeclType	NodeOptInfo		1185212	0					
ANR	1186674	Identifier	nopt		1185212	1					
ANR	1186675	IdentifierDeclStatement	QtfrNode * qn = NQTFR ( node ) ;	4775:6:107693:107719	1185212	3	True				
ANR	1186676	IdentifierDecl	* qn = NQTFR ( node )		1185212	0					
ANR	1186677	IdentifierDeclType	QtfrNode *		1185212	0					
ANR	1186678	Identifier	qn		1185212	1					
ANR	1186679	AssignmentExpression	* qn = NQTFR ( node )		1185212	2		=			
ANR	1186680	Identifier	qn		1185212	0					
ANR	1186681	CallExpression	NQTFR ( node )		1185212	1					
ANR	1186682	Callee	NQTFR		1185212	0					
ANR	1186683	Identifier	NQTFR		1185212	0					
ANR	1186684	ArgumentList	node		1185212	1					
ANR	1186685	Argument	node		1185212	0					
ANR	1186686	Identifier	node		1185212	0					
ANR	1186687	ExpressionStatement	"r = optimize_node_left ( qn -> target , & nopt , env )"	4777:6:107728:107774	1185212	4	True				
ANR	1186688	AssignmentExpression	"r = optimize_node_left ( qn -> target , & nopt , env )"		1185212	0		=			
ANR	1186689	Identifier	r		1185212	0					
ANR	1186690	CallExpression	"optimize_node_left ( qn -> target , & nopt , env )"		1185212	1					
ANR	1186691	Callee	optimize_node_left		1185212	0					
ANR	1186692	Identifier	optimize_node_left		1185212	0					
ANR	1186693	ArgumentList	qn -> target		1185212	1					
ANR	1186694	Argument	qn -> target		1185212	0					
ANR	1186695	PtrMemberAccess	qn -> target		1185212	0					
ANR	1186696	Identifier	qn		1185212	0					
ANR	1186697	Identifier	target		1185212	1					
ANR	1186698	Argument	& nopt		1185212	1					
ANR	1186699	UnaryOperationExpression	& nopt		1185212	0					
ANR	1186700	UnaryOperator	&		1185212	0					
ANR	1186701	Identifier	nopt		1185212	1					
ANR	1186702	Argument	env		1185212	2					
ANR	1186703	Identifier	env		1185212	0					
ANR	1186704	IfStatement	if ( r )		1185212	5					
ANR	1186705	Condition	r	4778:10:107786:107786	1185212	0	True				
ANR	1186706	Identifier	r		1185212	0					
ANR	1186707	BreakStatement	break ;	4778:13:107789:107794	1185212	1	True				
ANR	1186708	IfStatement	if ( qn -> lower == 0 && IS_REPEAT_INFINITE ( qn -> upper ) )		1185212	6					
ANR	1186709	Condition	qn -> lower == 0 && IS_REPEAT_INFINITE ( qn -> upper )	4780:10:107807:107853	1185212	0	True				
ANR	1186710	AndExpression	qn -> lower == 0 && IS_REPEAT_INFINITE ( qn -> upper )		1185212	0		&&			
ANR	1186711	EqualityExpression	qn -> lower == 0		1185212	0		==			
ANR	1186712	PtrMemberAccess	qn -> lower		1185212	0					
ANR	1186713	Identifier	qn		1185212	0					
ANR	1186714	Identifier	lower		1185212	1					
ANR	1186715	PrimaryExpression	0		1185212	1					
ANR	1186716	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1185212	1					
ANR	1186717	Callee	IS_REPEAT_INFINITE		1185212	0					
ANR	1186718	Identifier	IS_REPEAT_INFINITE		1185212	0					
ANR	1186719	ArgumentList	qn -> upper		1185212	1					
ANR	1186720	Argument	qn -> upper		1185212	0					
ANR	1186721	PtrMemberAccess	qn -> upper		1185212	0					
ANR	1186722	Identifier	qn		1185212	0					
ANR	1186723	Identifier	upper		1185212	1					
ANR	1186724	CompoundStatement		242:59:5732:5732	1185212	1					
ANR	1186725	IfStatement	if ( env -> mmd . max == 0 && NTYPE ( qn -> target ) == NT_CANY && qn -> greedy )		1185212	0					
ANR	1186726	Condition	env -> mmd . max == 0 && NTYPE ( qn -> target ) == NT_CANY && qn -> greedy	4781:5:107863:107930	1185212	0	True				
ANR	1186727	AndExpression	env -> mmd . max == 0 && NTYPE ( qn -> target ) == NT_CANY && qn -> greedy		1185212	0		&&			
ANR	1186728	EqualityExpression	env -> mmd . max == 0		1185212	0		==			
ANR	1186729	MemberAccess	env -> mmd . max		1185212	0					
ANR	1186730	PtrMemberAccess	env -> mmd		1185212	0					
ANR	1186731	Identifier	env		1185212	0					
ANR	1186732	Identifier	mmd		1185212	1					
ANR	1186733	Identifier	max		1185212	1					
ANR	1186734	PrimaryExpression	0		1185212	1					
ANR	1186735	AndExpression	NTYPE ( qn -> target ) == NT_CANY && qn -> greedy		1185212	1		&&			
ANR	1186736	EqualityExpression	NTYPE ( qn -> target ) == NT_CANY		1185212	0		==			
ANR	1186737	CallExpression	NTYPE ( qn -> target )		1185212	0					
ANR	1186738	Callee	NTYPE		1185212	0					
ANR	1186739	Identifier	NTYPE		1185212	0					
ANR	1186740	ArgumentList	qn -> target		1185212	1					
ANR	1186741	Argument	qn -> target		1185212	0					
ANR	1186742	PtrMemberAccess	qn -> target		1185212	0					
ANR	1186743	Identifier	qn		1185212	0					
ANR	1186744	Identifier	target		1185212	1					
ANR	1186745	Identifier	NT_CANY		1185212	1					
ANR	1186746	PtrMemberAccess	qn -> greedy		1185212	1					
ANR	1186747	Identifier	qn		1185212	0					
ANR	1186748	Identifier	greedy		1185212	1					
ANR	1186749	CompoundStatement		244:49:5809:5809	1185212	1					
ANR	1186750	IfStatement	if ( IS_MULTILINE ( env -> options ) )		1185212	0					
ANR	1186751	Condition	IS_MULTILINE ( env -> options )	4783:7:107942:107967	1185212	0	True				
ANR	1186752	CallExpression	IS_MULTILINE ( env -> options )		1185212	0					
ANR	1186753	Callee	IS_MULTILINE		1185212	0					
ANR	1186754	Identifier	IS_MULTILINE		1185212	0					
ANR	1186755	ArgumentList	env -> options		1185212	1					
ANR	1186756	Argument	env -> options		1185212	0					
ANR	1186757	PtrMemberAccess	env -> options		1185212	0					
ANR	1186758	Identifier	env		1185212	0					
ANR	1186759	Identifier	options		1185212	1					
ANR	1186760	ExpressionStatement	"add_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_ML )"	4784:5:107975:108026	1185212	1	True				
ANR	1186761	CallExpression	"add_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_ML )"		1185212	0					
ANR	1186762	Callee	add_opt_anc_info		1185212	0					
ANR	1186763	Identifier	add_opt_anc_info		1185212	0					
ANR	1186764	ArgumentList	& opt -> anc		1185212	1					
ANR	1186765	Argument	& opt -> anc		1185212	0					
ANR	1186766	UnaryOperationExpression	& opt -> anc		1185212	0					
ANR	1186767	UnaryOperator	&		1185212	0					
ANR	1186768	PtrMemberAccess	opt -> anc		1185212	1					
ANR	1186769	Identifier	opt		1185212	0					
ANR	1186770	Identifier	anc		1185212	1					
ANR	1186771	Argument	ANCHOR_ANYCHAR_STAR_ML		1185212	1					
ANR	1186772	Identifier	ANCHOR_ANYCHAR_STAR_ML		1185212	0					
ANR	1186773	ElseStatement	else		1185212	0					
ANR	1186774	ExpressionStatement	"add_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR )"	4786:5:108041:108089	1185212	0	True				
ANR	1186775	CallExpression	"add_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR )"		1185212	0					
ANR	1186776	Callee	add_opt_anc_info		1185212	0					
ANR	1186777	Identifier	add_opt_anc_info		1185212	0					
ANR	1186778	ArgumentList	& opt -> anc		1185212	1					
ANR	1186779	Argument	& opt -> anc		1185212	0					
ANR	1186780	UnaryOperationExpression	& opt -> anc		1185212	0					
ANR	1186781	UnaryOperator	&		1185212	0					
ANR	1186782	PtrMemberAccess	opt -> anc		1185212	1					
ANR	1186783	Identifier	opt		1185212	0					
ANR	1186784	Identifier	anc		1185212	1					
ANR	1186785	Argument	ANCHOR_ANYCHAR_STAR		1185212	1					
ANR	1186786	Identifier	ANCHOR_ANYCHAR_STAR		1185212	0					
ANR	1186787	ElseStatement	else		1185212	0					
ANR	1186788	CompoundStatement		251:11:5989:5989	1185212	0					
ANR	1186789	IfStatement	if ( qn -> lower > 0 )		1185212	0					
ANR	1186790	Condition	qn -> lower > 0	4790:5:108120:108132	1185212	0	True				
ANR	1186791	RelationalExpression	qn -> lower > 0		1185212	0		>			
ANR	1186792	PtrMemberAccess	qn -> lower		1185212	0					
ANR	1186793	Identifier	qn		1185212	0					
ANR	1186794	Identifier	lower		1185212	1					
ANR	1186795	PrimaryExpression	0		1185212	1					
ANR	1186796	CompoundStatement		252:20:6011:6011	1185212	1					
ANR	1186797	ExpressionStatement	"copy_node_opt_info ( opt , & nopt )"	4791:3:108140:108170	1185212	0	True				
ANR	1186798	CallExpression	"copy_node_opt_info ( opt , & nopt )"		1185212	0					
ANR	1186799	Callee	copy_node_opt_info		1185212	0					
ANR	1186800	Identifier	copy_node_opt_info		1185212	0					
ANR	1186801	ArgumentList	opt		1185212	1					
ANR	1186802	Argument	opt		1185212	0					
ANR	1186803	Identifier	opt		1185212	0					
ANR	1186804	Argument	& nopt		1185212	1					
ANR	1186805	UnaryOperationExpression	& nopt		1185212	0					
ANR	1186806	UnaryOperator	&		1185212	0					
ANR	1186807	Identifier	nopt		1185212	1					
ANR	1186808	IfStatement	if ( nopt . exb . len > 0 )		1185212	1					
ANR	1186809	Condition	nopt . exb . len > 0	4792:7:108179:108194	1185212	0	True				
ANR	1186810	RelationalExpression	nopt . exb . len > 0		1185212	0		>			
ANR	1186811	MemberAccess	nopt . exb . len		1185212	0					
ANR	1186812	MemberAccess	nopt . exb		1185212	0					
ANR	1186813	Identifier	nopt		1185212	0					
ANR	1186814	Identifier	exb		1185212	1					
ANR	1186815	Identifier	len		1185212	1					
ANR	1186816	PrimaryExpression	0		1185212	1					
ANR	1186817	CompoundStatement		254:25:6073:6073	1185212	1					
ANR	1186818	IfStatement	if ( nopt . exb . reach_end )		1185212	0					
ANR	1186819	Condition	nopt . exb . reach_end	4793:9:108208:108225	1185212	0	True				
ANR	1186820	MemberAccess	nopt . exb . reach_end		1185212	0					
ANR	1186821	MemberAccess	nopt . exb		1185212	0					
ANR	1186822	Identifier	nopt		1185212	0					
ANR	1186823	Identifier	exb		1185212	1					
ANR	1186824	Identifier	reach_end		1185212	1					
ANR	1186825	CompoundStatement		255:29:6104:6104	1185212	1					
ANR	1186826	ForStatement	for ( i = 2 ; i <= qn -> lower && ! is_full_opt_exact_info ( & opt -> exb ) ; i ++ )		1185212	0					
ANR	1186827	ForInit	i = 2 ;	4794:12:108242:108247	1185212	0	True				
ANR	1186828	AssignmentExpression	i = 2		1185212	0		=			
ANR	1186829	Identifier	i		1185212	0					
ANR	1186830	PrimaryExpression	2		1185212	1					
ANR	1186831	Condition	i <= qn -> lower && ! is_full_opt_exact_info ( & opt -> exb )	4794:19:108249:108313	1185212	1	True				
ANR	1186832	AndExpression	i <= qn -> lower && ! is_full_opt_exact_info ( & opt -> exb )		1185212	0		&&			
ANR	1186833	RelationalExpression	i <= qn -> lower		1185212	0		<=			
ANR	1186834	Identifier	i		1185212	0					
ANR	1186835	PtrMemberAccess	qn -> lower		1185212	1					
ANR	1186836	Identifier	qn		1185212	0					
ANR	1186837	Identifier	lower		1185212	1					
ANR	1186838	UnaryOperationExpression	! is_full_opt_exact_info ( & opt -> exb )		1185212	1					
ANR	1186839	UnaryOperator	!		1185212	0					
ANR	1186840	CallExpression	is_full_opt_exact_info ( & opt -> exb )		1185212	1					
ANR	1186841	Callee	is_full_opt_exact_info		1185212	0					
ANR	1186842	Identifier	is_full_opt_exact_info		1185212	0					
ANR	1186843	ArgumentList	& opt -> exb		1185212	1					
ANR	1186844	Argument	& opt -> exb		1185212	0					
ANR	1186845	UnaryOperationExpression	& opt -> exb		1185212	0					
ANR	1186846	UnaryOperator	&		1185212	0					
ANR	1186847	PtrMemberAccess	opt -> exb		1185212	1					
ANR	1186848	Identifier	opt		1185212	0					
ANR	1186849	Identifier	exb		1185212	1					
ANR	1186850	PostIncDecOperationExpression	i ++	4795:49:108316:108318	1185212	2	True				
ANR	1186851	Identifier	i		1185212	0					
ANR	1186852	IncDec	++		1185212	1					
ANR	1186853	CompoundStatement		257:54:6197:6197	1185212	3					
ANR	1186854	ExpressionStatement	"concat_opt_exact_info ( & opt -> exb , & nopt . exb , env -> enc )"	4796:2:108325:108378	1185212	0	True				
ANR	1186855	CallExpression	"concat_opt_exact_info ( & opt -> exb , & nopt . exb , env -> enc )"		1185212	0					
ANR	1186856	Callee	concat_opt_exact_info		1185212	0					
ANR	1186857	Identifier	concat_opt_exact_info		1185212	0					
ANR	1186858	ArgumentList	& opt -> exb		1185212	1					
ANR	1186859	Argument	& opt -> exb		1185212	0					
ANR	1186860	UnaryOperationExpression	& opt -> exb		1185212	0					
ANR	1186861	UnaryOperator	&		1185212	0					
ANR	1186862	PtrMemberAccess	opt -> exb		1185212	1					
ANR	1186863	Identifier	opt		1185212	0					
ANR	1186864	Identifier	exb		1185212	1					
ANR	1186865	Argument	& nopt . exb		1185212	1					
ANR	1186866	UnaryOperationExpression	& nopt . exb		1185212	0					
ANR	1186867	UnaryOperator	&		1185212	0					
ANR	1186868	MemberAccess	nopt . exb		1185212	1					
ANR	1186869	Identifier	nopt		1185212	0					
ANR	1186870	Identifier	exb		1185212	1					
ANR	1186871	Argument	env -> enc		1185212	2					
ANR	1186872	PtrMemberAccess	env -> enc		1185212	0					
ANR	1186873	Identifier	env		1185212	0					
ANR	1186874	Identifier	enc		1185212	1					
ANR	1186875	IfStatement	if ( i < qn -> lower )		1185212	1					
ANR	1186876	Condition	i < qn -> lower	4798:11:108400:108412	1185212	0	True				
ANR	1186877	RelationalExpression	i < qn -> lower		1185212	0		<			
ANR	1186878	Identifier	i		1185212	0					
ANR	1186879	PtrMemberAccess	qn -> lower		1185212	1					
ANR	1186880	Identifier	qn		1185212	0					
ANR	1186881	Identifier	lower		1185212	1					
ANR	1186882	CompoundStatement		260:26:6291:6291	1185212	1					
ANR	1186883	ExpressionStatement	opt -> exb . reach_end = 0	4799:2:108419:108441	1185212	0	True				
ANR	1186884	AssignmentExpression	opt -> exb . reach_end = 0		1185212	0		=			
ANR	1186885	MemberAccess	opt -> exb . reach_end		1185212	0					
ANR	1186886	PtrMemberAccess	opt -> exb		1185212	0					
ANR	1186887	Identifier	opt		1185212	0					
ANR	1186888	Identifier	exb		1185212	1					
ANR	1186889	Identifier	reach_end		1185212	1					
ANR	1186890	PrimaryExpression	0		1185212	1					
ANR	1186891	IfStatement	if ( qn -> lower != qn -> upper )		1185212	2					
ANR	1186892	Condition	qn -> lower != qn -> upper	4804:7:108472:108493	1185212	0	True				
ANR	1186893	EqualityExpression	qn -> lower != qn -> upper		1185212	0		!=			
ANR	1186894	PtrMemberAccess	qn -> lower		1185212	0					
ANR	1186895	Identifier	qn		1185212	0					
ANR	1186896	Identifier	lower		1185212	1					
ANR	1186897	PtrMemberAccess	qn -> upper		1185212	1					
ANR	1186898	Identifier	qn		1185212	0					
ANR	1186899	Identifier	upper		1185212	1					
ANR	1186900	CompoundStatement		266:31:6372:6372	1185212	1					
ANR	1186901	ExpressionStatement	opt -> exb . reach_end = 0	4805:5:108503:108525	1185212	0	True				
ANR	1186902	AssignmentExpression	opt -> exb . reach_end = 0		1185212	0		=			
ANR	1186903	MemberAccess	opt -> exb . reach_end		1185212	0					
ANR	1186904	PtrMemberAccess	opt -> exb		1185212	0					
ANR	1186905	Identifier	opt		1185212	0					
ANR	1186906	Identifier	exb		1185212	1					
ANR	1186907	Identifier	reach_end		1185212	1					
ANR	1186908	PrimaryExpression	0		1185212	1					
ANR	1186909	ExpressionStatement	opt -> exm . reach_end = 0	4806:5:108532:108554	1185212	1	True				
ANR	1186910	AssignmentExpression	opt -> exm . reach_end = 0		1185212	0		=			
ANR	1186911	MemberAccess	opt -> exm . reach_end		1185212	0					
ANR	1186912	PtrMemberAccess	opt -> exm		1185212	0					
ANR	1186913	Identifier	opt		1185212	0					
ANR	1186914	Identifier	exm		1185212	1					
ANR	1186915	Identifier	reach_end		1185212	1					
ANR	1186916	PrimaryExpression	0		1185212	1					
ANR	1186917	IfStatement	if ( qn -> lower > 1 )		1185212	3					
ANR	1186918	Condition	qn -> lower > 1	4808:7:108568:108580	1185212	0	True				
ANR	1186919	RelationalExpression	qn -> lower > 1		1185212	0		>			
ANR	1186920	PtrMemberAccess	qn -> lower		1185212	0					
ANR	1186921	Identifier	qn		1185212	0					
ANR	1186922	Identifier	lower		1185212	1					
ANR	1186923	PrimaryExpression	1		1185212	1					
ANR	1186924	ExpressionStatement	opt -> exm . reach_end = 0	4809:5:108588:108610	1185212	1	True				
ANR	1186925	AssignmentExpression	opt -> exm . reach_end = 0		1185212	0		=			
ANR	1186926	MemberAccess	opt -> exm . reach_end		1185212	0					
ANR	1186927	PtrMemberAccess	opt -> exm		1185212	0					
ANR	1186928	Identifier	opt		1185212	0					
ANR	1186929	Identifier	exm		1185212	1					
ANR	1186930	Identifier	reach_end		1185212	1					
ANR	1186931	PrimaryExpression	0		1185212	1					
ANR	1186932	ExpressionStatement	"min = distance_multiply ( nopt . len . min , qn -> lower )"	4813:6:108630:108678	1185212	7	True				
ANR	1186933	AssignmentExpression	"min = distance_multiply ( nopt . len . min , qn -> lower )"		1185212	0		=			
ANR	1186934	Identifier	min		1185212	0					
ANR	1186935	CallExpression	"distance_multiply ( nopt . len . min , qn -> lower )"		1185212	1					
ANR	1186936	Callee	distance_multiply		1185212	0					
ANR	1186937	Identifier	distance_multiply		1185212	0					
ANR	1186938	ArgumentList	nopt . len . min		1185212	1					
ANR	1186939	Argument	nopt . len . min		1185212	0					
ANR	1186940	MemberAccess	nopt . len . min		1185212	0					
ANR	1186941	MemberAccess	nopt . len		1185212	0					
ANR	1186942	Identifier	nopt		1185212	0					
ANR	1186943	Identifier	len		1185212	1					
ANR	1186944	Identifier	min		1185212	1					
ANR	1186945	Argument	qn -> lower		1185212	1					
ANR	1186946	PtrMemberAccess	qn -> lower		1185212	0					
ANR	1186947	Identifier	qn		1185212	0					
ANR	1186948	Identifier	lower		1185212	1					
ANR	1186949	IfStatement	if ( IS_REPEAT_INFINITE ( qn -> upper ) )		1185212	8					
ANR	1186950	Condition	IS_REPEAT_INFINITE ( qn -> upper )	4814:10:108690:108718	1185212	0	True				
ANR	1186951	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1185212	0					
ANR	1186952	Callee	IS_REPEAT_INFINITE		1185212	0					
ANR	1186953	Identifier	IS_REPEAT_INFINITE		1185212	0					
ANR	1186954	ArgumentList	qn -> upper		1185212	1					
ANR	1186955	Argument	qn -> upper		1185212	0					
ANR	1186956	PtrMemberAccess	qn -> upper		1185212	0					
ANR	1186957	Identifier	qn		1185212	0					
ANR	1186958	Identifier	upper		1185212	1					
ANR	1186959	ExpressionStatement	max = ( nopt . len . max > 0 ? ONIG_INFINITE_DISTANCE : 0 )	4815:1:108722:108775	1185212	1	True				
ANR	1186960	AssignmentExpression	max = ( nopt . len . max > 0 ? ONIG_INFINITE_DISTANCE : 0 )		1185212	0		=			
ANR	1186961	Identifier	max		1185212	0					
ANR	1186962	ConditionalExpression	nopt . len . max > 0 ? ONIG_INFINITE_DISTANCE : 0		1185212	1					
ANR	1186963	Condition	nopt . len . max > 0		1185212	0					
ANR	1186964	RelationalExpression	nopt . len . max > 0		1185212	0		>			
ANR	1186965	MemberAccess	nopt . len . max		1185212	0					
ANR	1186966	MemberAccess	nopt . len		1185212	0					
ANR	1186967	Identifier	nopt		1185212	0					
ANR	1186968	Identifier	len		1185212	1					
ANR	1186969	Identifier	max		1185212	1					
ANR	1186970	PrimaryExpression	0		1185212	1					
ANR	1186971	Identifier	ONIG_INFINITE_DISTANCE		1185212	1					
ANR	1186972	PrimaryExpression	0		1185212	2					
ANR	1186973	ElseStatement	else		1185212	0					
ANR	1186974	ExpressionStatement	"max = distance_multiply ( nopt . len . max , qn -> upper )"	4817:1:108789:108837	1185212	0	True				
ANR	1186975	AssignmentExpression	"max = distance_multiply ( nopt . len . max , qn -> upper )"		1185212	0		=			
ANR	1186976	Identifier	max		1185212	0					
ANR	1186977	CallExpression	"distance_multiply ( nopt . len . max , qn -> upper )"		1185212	1					
ANR	1186978	Callee	distance_multiply		1185212	0					
ANR	1186979	Identifier	distance_multiply		1185212	0					
ANR	1186980	ArgumentList	nopt . len . max		1185212	1					
ANR	1186981	Argument	nopt . len . max		1185212	0					
ANR	1186982	MemberAccess	nopt . len . max		1185212	0					
ANR	1186983	MemberAccess	nopt . len		1185212	0					
ANR	1186984	Identifier	nopt		1185212	0					
ANR	1186985	Identifier	len		1185212	1					
ANR	1186986	Identifier	max		1185212	1					
ANR	1186987	Argument	qn -> upper		1185212	1					
ANR	1186988	PtrMemberAccess	qn -> upper		1185212	0					
ANR	1186989	Identifier	qn		1185212	0					
ANR	1186990	Identifier	upper		1185212	1					
ANR	1186991	ExpressionStatement	"set_mml ( & opt -> len , min , max )"	4819:6:108846:108874	1185212	9	True				
ANR	1186992	CallExpression	"set_mml ( & opt -> len , min , max )"		1185212	0					
ANR	1186993	Callee	set_mml		1185212	0					
ANR	1186994	Identifier	set_mml		1185212	0					
ANR	1186995	ArgumentList	& opt -> len		1185212	1					
ANR	1186996	Argument	& opt -> len		1185212	0					
ANR	1186997	UnaryOperationExpression	& opt -> len		1185212	0					
ANR	1186998	UnaryOperator	&		1185212	0					
ANR	1186999	PtrMemberAccess	opt -> len		1185212	1					
ANR	1187000	Identifier	opt		1185212	0					
ANR	1187001	Identifier	len		1185212	1					
ANR	1187002	Argument	min		1185212	1					
ANR	1187003	Identifier	min		1185212	0					
ANR	1187004	Argument	max		1185212	2					
ANR	1187005	Identifier	max		1185212	0					
ANR	1187006	BreakStatement	break ;	4821:4:108886:108891	1185212	29	True				
ANR	1187007	Label	case NT_ENCLOSE :	4823:2:108896:108911	1185212	30	True				
ANR	1187008	Identifier	NT_ENCLOSE		1185212	0					
ANR	1187009	CompoundStatement		287:6:6801:6833	1185212	31					
ANR	1187010	IdentifierDeclStatement	EncloseNode * en = NENCLOSE ( node ) ;	4825:6:108925:108957	1185212	0	True				
ANR	1187011	IdentifierDecl	* en = NENCLOSE ( node )		1185212	0					
ANR	1187012	IdentifierDeclType	EncloseNode *		1185212	0					
ANR	1187013	Identifier	en		1185212	1					
ANR	1187014	AssignmentExpression	* en = NENCLOSE ( node )		1185212	2		=			
ANR	1187015	Identifier	en		1185212	0					
ANR	1187016	CallExpression	NENCLOSE ( node )		1185212	1					
ANR	1187017	Callee	NENCLOSE		1185212	0					
ANR	1187018	Identifier	NENCLOSE		1185212	0					
ANR	1187019	ArgumentList	node		1185212	1					
ANR	1187020	Argument	node		1185212	0					
ANR	1187021	Identifier	node		1185212	0					
ANR	1187022	SwitchStatement	switch ( en -> type )		1185212	1					
ANR	1187023	Condition	en -> type	4827:14:108974:108981	1185212	0	True				
ANR	1187024	PtrMemberAccess	en -> type		1185212	0					
ANR	1187025	Identifier	en		1185212	0					
ANR	1187026	Identifier	type		1185212	1					
ANR	1187027	CompoundStatement		289:24:6860:6860	1185212	1					
ANR	1187028	Label	case ENCLOSE_OPTION :	4828:6:108992:109011	1185212	0	True				
ANR	1187029	Identifier	ENCLOSE_OPTION		1185212	0					
ANR	1187030	CompoundStatement		292:3:6895:6929	1185212	1					
ANR	1187031	IdentifierDeclStatement	OnigOptionType save = env -> options ;	4830:3:109019:109053	1185212	0	True				
ANR	1187032	IdentifierDecl	save = env -> options		1185212	0					
ANR	1187033	IdentifierDeclType	OnigOptionType		1185212	0					
ANR	1187034	Identifier	save		1185212	1					
ANR	1187035	AssignmentExpression	save = env -> options		1185212	2		=			
ANR	1187036	Identifier	save		1185212	0					
ANR	1187037	PtrMemberAccess	env -> options		1185212	1					
ANR	1187038	Identifier	env		1185212	0					
ANR	1187039	Identifier	options		1185212	1					
ANR	1187040	ExpressionStatement	env -> options = en -> option	4832:3:109059:109084	1185212	1	True				
ANR	1187041	AssignmentExpression	env -> options = en -> option		1185212	0		=			
ANR	1187042	PtrMemberAccess	env -> options		1185212	0					
ANR	1187043	Identifier	env		1185212	0					
ANR	1187044	Identifier	options		1185212	1					
ANR	1187045	PtrMemberAccess	en -> option		1185212	1					
ANR	1187046	Identifier	en		1185212	0					
ANR	1187047	Identifier	option		1185212	1					
ANR	1187048	ExpressionStatement	"r = optimize_node_left ( en -> target , opt , env )"	4833:3:109089:109133	1185212	2	True				
ANR	1187049	AssignmentExpression	"r = optimize_node_left ( en -> target , opt , env )"		1185212	0		=			
ANR	1187050	Identifier	r		1185212	0					
ANR	1187051	CallExpression	"optimize_node_left ( en -> target , opt , env )"		1185212	1					
ANR	1187052	Callee	optimize_node_left		1185212	0					
ANR	1187053	Identifier	optimize_node_left		1185212	0					
ANR	1187054	ArgumentList	en -> target		1185212	1					
ANR	1187055	Argument	en -> target		1185212	0					
ANR	1187056	PtrMemberAccess	en -> target		1185212	0					
ANR	1187057	Identifier	en		1185212	0					
ANR	1187058	Identifier	target		1185212	1					
ANR	1187059	Argument	opt		1185212	1					
ANR	1187060	Identifier	opt		1185212	0					
ANR	1187061	Argument	env		1185212	2					
ANR	1187062	Identifier	env		1185212	0					
ANR	1187063	ExpressionStatement	env -> options = save	4834:3:109138:109157	1185212	3	True				
ANR	1187064	AssignmentExpression	env -> options = save		1185212	0		=			
ANR	1187065	PtrMemberAccess	env -> options		1185212	0					
ANR	1187066	Identifier	env		1185212	0					
ANR	1187067	Identifier	options		1185212	1					
ANR	1187068	Identifier	save		1185212	1					
ANR	1187069	BreakStatement	break ;	4836:1:109163:109168	1185212	2	True				
ANR	1187070	Label	case ENCLOSE_MEMORY :	4838:6:109177:109196	1185212	3	True				
ANR	1187071	Identifier	ENCLOSE_MEMORY		1185212	0					
ANR	1187072	ExpressionStatement	en -> opt_count ++	4840:1:109222:109237	1185212	4	True				
ANR	1187073	PostIncDecOperationExpression	en -> opt_count ++		1185212	0					
ANR	1187074	PtrMemberAccess	en -> opt_count		1185212	0					
ANR	1187075	Identifier	en		1185212	0					
ANR	1187076	Identifier	opt_count		1185212	1					
ANR	1187077	IncDec	++		1185212	1					
ANR	1187078	IfStatement	if ( en -> opt_count > MAX_NODE_OPT_INFO_REF_COUNT )		1185212	5					
ANR	1187079	Condition	en -> opt_count > MAX_NODE_OPT_INFO_REF_COUNT	4841:5:109244:109286	1185212	0	True				
ANR	1187080	RelationalExpression	en -> opt_count > MAX_NODE_OPT_INFO_REF_COUNT		1185212	0		>			
ANR	1187081	PtrMemberAccess	en -> opt_count		1185212	0					
ANR	1187082	Identifier	en		1185212	0					
ANR	1187083	Identifier	opt_count		1185212	1					
ANR	1187084	Identifier	MAX_NODE_OPT_INFO_REF_COUNT		1185212	1					
ANR	1187085	CompoundStatement		304:3:7170:7191	1185212	1					
ANR	1187086	IdentifierDeclStatement	"OnigDistance min , max ;"	4842:3:109294:109315	1185212	0	True				
ANR	1187087	IdentifierDecl	min		1185212	0					
ANR	1187088	IdentifierDeclType	OnigDistance		1185212	0					
ANR	1187089	Identifier	min		1185212	1					
ANR	1187090	IdentifierDecl	max		1185212	1					
ANR	1187091	IdentifierDeclType	OnigDistance		1185212	0					
ANR	1187092	Identifier	max		1185212	1					
ANR	1187093	ExpressionStatement	min = 0	4844:3:109321:109328	1185212	1	True				
ANR	1187094	AssignmentExpression	min = 0		1185212	0		=			
ANR	1187095	Identifier	min		1185212	0					
ANR	1187096	PrimaryExpression	0		1185212	1					
ANR	1187097	ExpressionStatement	max = ONIG_INFINITE_DISTANCE	4845:3:109333:109361	1185212	2	True				
ANR	1187098	AssignmentExpression	max = ONIG_INFINITE_DISTANCE		1185212	0		=			
ANR	1187099	Identifier	max		1185212	0					
ANR	1187100	Identifier	ONIG_INFINITE_DISTANCE		1185212	1					
ANR	1187101	IfStatement	if ( IS_ENCLOSE_MIN_FIXED ( en ) )		1185212	3					
ANR	1187102	Condition	IS_ENCLOSE_MIN_FIXED ( en )	4846:7:109370:109393	1185212	0	True				
ANR	1187103	CallExpression	IS_ENCLOSE_MIN_FIXED ( en )		1185212	0					
ANR	1187104	Callee	IS_ENCLOSE_MIN_FIXED		1185212	0					
ANR	1187105	Identifier	IS_ENCLOSE_MIN_FIXED		1185212	0					
ANR	1187106	ArgumentList	en		1185212	1					
ANR	1187107	Argument	en		1185212	0					
ANR	1187108	Identifier	en		1185212	0					
ANR	1187109	ExpressionStatement	min = en -> min_len	4846:33:109396:109413	1185212	1	True				
ANR	1187110	AssignmentExpression	min = en -> min_len		1185212	0		=			
ANR	1187111	Identifier	min		1185212	0					
ANR	1187112	PtrMemberAccess	en -> min_len		1185212	1					
ANR	1187113	Identifier	en		1185212	0					
ANR	1187114	Identifier	min_len		1185212	1					
ANR	1187115	IfStatement	if ( IS_ENCLOSE_MAX_FIXED ( en ) )		1185212	4					
ANR	1187116	Condition	IS_ENCLOSE_MAX_FIXED ( en )	4847:7:109422:109445	1185212	0	True				
ANR	1187117	CallExpression	IS_ENCLOSE_MAX_FIXED ( en )		1185212	0					
ANR	1187118	Callee	IS_ENCLOSE_MAX_FIXED		1185212	0					
ANR	1187119	Identifier	IS_ENCLOSE_MAX_FIXED		1185212	0					
ANR	1187120	ArgumentList	en		1185212	1					
ANR	1187121	Argument	en		1185212	0					
ANR	1187122	Identifier	en		1185212	0					
ANR	1187123	ExpressionStatement	max = en -> max_len	4847:33:109448:109465	1185212	1	True				
ANR	1187124	AssignmentExpression	max = en -> max_len		1185212	0		=			
ANR	1187125	Identifier	max		1185212	0					
ANR	1187126	PtrMemberAccess	en -> max_len		1185212	1					
ANR	1187127	Identifier	en		1185212	0					
ANR	1187128	Identifier	max_len		1185212	1					
ANR	1187129	ExpressionStatement	"set_mml ( & opt -> len , min , max )"	4848:3:109470:109498	1185212	5	True				
ANR	1187130	CallExpression	"set_mml ( & opt -> len , min , max )"		1185212	0					
ANR	1187131	Callee	set_mml		1185212	0					
ANR	1187132	Identifier	set_mml		1185212	0					
ANR	1187133	ArgumentList	& opt -> len		1185212	1					
ANR	1187134	Argument	& opt -> len		1185212	0					
ANR	1187135	UnaryOperationExpression	& opt -> len		1185212	0					
ANR	1187136	UnaryOperator	&		1185212	0					
ANR	1187137	PtrMemberAccess	opt -> len		1185212	1					
ANR	1187138	Identifier	opt		1185212	0					
ANR	1187139	Identifier	len		1185212	1					
ANR	1187140	Argument	min		1185212	1					
ANR	1187141	Identifier	min		1185212	0					
ANR	1187142	Argument	max		1185212	2					
ANR	1187143	Identifier	max		1185212	0					
ANR	1187144	ElseStatement	else		1185212	0					
ANR	1187145	CompoundStatement		314:1:7393:7393	1185212	0					
ANR	1187146	ExpressionStatement	"r = optimize_node_left ( en -> target , opt , env )"	4853:3:109522:109566	1185212	0	True				
ANR	1187147	AssignmentExpression	"r = optimize_node_left ( en -> target , opt , env )"		1185212	0		=			
ANR	1187148	Identifier	r		1185212	0					
ANR	1187149	CallExpression	"optimize_node_left ( en -> target , opt , env )"		1185212	1					
ANR	1187150	Callee	optimize_node_left		1185212	0					
ANR	1187151	Identifier	optimize_node_left		1185212	0					
ANR	1187152	ArgumentList	en -> target		1185212	1					
ANR	1187153	Argument	en -> target		1185212	0					
ANR	1187154	PtrMemberAccess	en -> target		1185212	0					
ANR	1187155	Identifier	en		1185212	0					
ANR	1187156	Identifier	target		1185212	1					
ANR	1187157	Argument	opt		1185212	1					
ANR	1187158	Identifier	opt		1185212	0					
ANR	1187159	Argument	env		1185212	2					
ANR	1187160	Identifier	env		1185212	0					
ANR	1187161	IfStatement	"if ( is_set_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_MASK ) )"		1185212	1					
ANR	1187162	Condition	"is_set_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_MASK )"	4855:7:109576:109631	1185212	0	True				
ANR	1187163	CallExpression	"is_set_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_MASK )"		1185212	0					
ANR	1187164	Callee	is_set_opt_anc_info		1185212	0					
ANR	1187165	Identifier	is_set_opt_anc_info		1185212	0					
ANR	1187166	ArgumentList	& opt -> anc		1185212	1					
ANR	1187167	Argument	& opt -> anc		1185212	0					
ANR	1187168	UnaryOperationExpression	& opt -> anc		1185212	0					
ANR	1187169	UnaryOperator	&		1185212	0					
ANR	1187170	PtrMemberAccess	opt -> anc		1185212	1					
ANR	1187171	Identifier	opt		1185212	0					
ANR	1187172	Identifier	anc		1185212	1					
ANR	1187173	Argument	ANCHOR_ANYCHAR_STAR_MASK		1185212	1					
ANR	1187174	Identifier	ANCHOR_ANYCHAR_STAR_MASK		1185212	0					
ANR	1187175	CompoundStatement		317:65:7510:7510	1185212	1					
ANR	1187176	IfStatement	"if ( BIT_STATUS_AT ( env -> scan_env -> backrefed_mem , en -> regnum ) )"		1185212	0					
ANR	1187177	Condition	"BIT_STATUS_AT ( env -> scan_env -> backrefed_mem , en -> regnum )"	4856:9:109645:109699	1185212	0	True				
ANR	1187178	CallExpression	"BIT_STATUS_AT ( env -> scan_env -> backrefed_mem , en -> regnum )"		1185212	0					
ANR	1187179	Callee	BIT_STATUS_AT		1185212	0					
ANR	1187180	Identifier	BIT_STATUS_AT		1185212	0					
ANR	1187181	ArgumentList	env -> scan_env -> backrefed_mem		1185212	1					
ANR	1187182	Argument	env -> scan_env -> backrefed_mem		1185212	0					
ANR	1187183	PtrMemberAccess	env -> scan_env -> backrefed_mem		1185212	0					
ANR	1187184	PtrMemberAccess	env -> scan_env		1185212	0					
ANR	1187185	Identifier	env		1185212	0					
ANR	1187186	Identifier	scan_env		1185212	1					
ANR	1187187	Identifier	backrefed_mem		1185212	1					
ANR	1187188	Argument	en -> regnum		1185212	1					
ANR	1187189	PtrMemberAccess	en -> regnum		1185212	0					
ANR	1187190	Identifier	en		1185212	0					
ANR	1187191	Identifier	regnum		1185212	1					
ANR	1187192	ExpressionStatement	"remove_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_MASK )"	4857:7:109709:109765	1185212	1	True				
ANR	1187193	CallExpression	"remove_opt_anc_info ( & opt -> anc , ANCHOR_ANYCHAR_STAR_MASK )"		1185212	0					
ANR	1187194	Callee	remove_opt_anc_info		1185212	0					
ANR	1187195	Identifier	remove_opt_anc_info		1185212	0					
ANR	1187196	ArgumentList	& opt -> anc		1185212	1					
ANR	1187197	Argument	& opt -> anc		1185212	0					
ANR	1187198	UnaryOperationExpression	& opt -> anc		1185212	0					
ANR	1187199	UnaryOperator	&		1185212	0					
ANR	1187200	PtrMemberAccess	opt -> anc		1185212	1					
ANR	1187201	Identifier	opt		1185212	0					
ANR	1187202	Identifier	anc		1185212	1					
ANR	1187203	Argument	ANCHOR_ANYCHAR_STAR_MASK		1185212	1					
ANR	1187204	Identifier	ANCHOR_ANYCHAR_STAR_MASK		1185212	0					
ANR	1187205	BreakStatement	break ;	4860:1:109776:109781	1185212	6	True				
ANR	1187206	Label	case ENCLOSE_STOP_BACKTRACK :	4862:6:109790:109817	1185212	7	True				
ANR	1187207	Identifier	ENCLOSE_STOP_BACKTRACK		1185212	0					
ANR	1187208	ExpressionStatement	"r = optimize_node_left ( en -> target , opt , env )"	4863:1:109820:109864	1185212	8	True				
ANR	1187209	AssignmentExpression	"r = optimize_node_left ( en -> target , opt , env )"		1185212	0		=			
ANR	1187210	Identifier	r		1185212	0					
ANR	1187211	CallExpression	"optimize_node_left ( en -> target , opt , env )"		1185212	1					
ANR	1187212	Callee	optimize_node_left		1185212	0					
ANR	1187213	Identifier	optimize_node_left		1185212	0					
ANR	1187214	ArgumentList	en -> target		1185212	1					
ANR	1187215	Argument	en -> target		1185212	0					
ANR	1187216	PtrMemberAccess	en -> target		1185212	0					
ANR	1187217	Identifier	en		1185212	0					
ANR	1187218	Identifier	target		1185212	1					
ANR	1187219	Argument	opt		1185212	1					
ANR	1187220	Identifier	opt		1185212	0					
ANR	1187221	Argument	env		1185212	2					
ANR	1187222	Identifier	env		1185212	0					
ANR	1187223	BreakStatement	break ;	4864:1:109867:109872	1185212	9	True				
ANR	1187224	BreakStatement	break ;	4867:4:109892:109897	1185212	32	True				
ANR	1187225	Label	default :	4869:2:109902:109909	1185212	33	True				
ANR	1187226	Identifier	default		1185212	0					
ANR	1187227	ExpressionStatement	"fprintf ( stderr , ""optimize_node_left: undefined node type %d\\n"" , NTYPE ( node ) )"	4871:4:109933:110014	1185212	34	True				
ANR	1187228	CallExpression	"fprintf ( stderr , ""optimize_node_left: undefined node type %d\\n"" , NTYPE ( node ) )"		1185212	0					
ANR	1187229	Callee	fprintf		1185212	0					
ANR	1187230	Identifier	fprintf		1185212	0					
ANR	1187231	ArgumentList	stderr		1185212	1					
ANR	1187232	Argument	stderr		1185212	0					
ANR	1187233	Identifier	stderr		1185212	0					
ANR	1187234	Argument	"""optimize_node_left: undefined node type %d\\n"""		1185212	1					
ANR	1187235	PrimaryExpression	"""optimize_node_left: undefined node type %d\\n"""		1185212	0					
ANR	1187236	Argument	NTYPE ( node )		1185212	2					
ANR	1187237	CallExpression	NTYPE ( node )		1185212	0					
ANR	1187238	Callee	NTYPE		1185212	0					
ANR	1187239	Identifier	NTYPE		1185212	0					
ANR	1187240	ArgumentList	node		1185212	1					
ANR	1187241	Argument	node		1185212	0					
ANR	1187242	Identifier	node		1185212	0					
ANR	1187243	ExpressionStatement	r = ONIGERR_TYPE_BUG	4874:4:110027:110047	1185212	35	True				
ANR	1187244	AssignmentExpression	r = ONIGERR_TYPE_BUG		1185212	0		=			
ANR	1187245	Identifier	r		1185212	0					
ANR	1187246	Identifier	ONIGERR_TYPE_BUG		1185212	1					
ANR	1187247	BreakStatement	break ;	4875:4:110053:110058	1185212	36	True				
ANR	1187248	ReturnStatement	return r ;	4878:2:110067:110075	1185212	6	True				
ANR	1187249	Identifier	r		1185212	0					
ANR	1187250	ReturnType	static int		1185212	1					
ANR	1187251	Identifier	optimize_node_left		1185212	2					
ANR	1187252	ParameterList	"Node * node , NodeOptInfo * opt , OptEnv * env"		1185212	3					
ANR	1187253	Parameter	Node * node	4538:19:102080:102089	1185212	0	True				
ANR	1187254	ParameterType	Node *		1185212	0					
ANR	1187255	Identifier	node		1185212	1					
ANR	1187256	Parameter	NodeOptInfo * opt	4538:31:102092:102107	1185212	1	True				
ANR	1187257	ParameterType	NodeOptInfo *		1185212	0					
ANR	1187258	Identifier	opt		1185212	1					
ANR	1187259	Parameter	OptEnv * env	4538:49:102110:102120	1185212	2	True				
ANR	1187260	ParameterType	OptEnv *		1185212	0					
ANR	1187261	Identifier	env		1185212	1					
ANR	1187262	CFGEntryNode	ENTRY		1185212		True				
ANR	1187263	CFGExitNode	EXIT		1185212		True				
ANR	1187264	Symbol	* sn		1185212						
ANR	1187265	Symbol	* cc		1185212						
ANR	1187266	Symbol	* backs		1185212						
ANR	1187267	Symbol	cc -> mbuf		1185212						
ANR	1187268	Symbol	type		1185212						
ANR	1187269	Symbol	NQTFR		1185212						
ANR	1187270	Symbol	opt -> exm . reach_end		1185212						
ANR	1187271	Symbol	ONIG_INFINITE_DISTANCE		1185212						
ANR	1187272	Symbol	nopt . map . value		1185212						
ANR	1187273	Symbol	* br		1185212						
ANR	1187274	Symbol	en -> type		1185212						
ANR	1187275	Symbol	SCANENV_MEM_NODES		1185212						
ANR	1187276	Symbol	IS_REPEAT_INFINITE		1185212						
ANR	1187277	Symbol	* env -> scan_env		1185212						
ANR	1187278	Symbol	qn		1185212						
ANR	1187279	Symbol	opt -> expr . reach_end		1185212						
ANR	1187280	Symbol	NSTRING_IS_AMBIG		1185212						
ANR	1187281	Symbol	en -> regnum		1185212						
ANR	1187282	Symbol	NCDR		1185212						
ANR	1187283	Symbol	NSTR		1185212						
ANR	1187284	Symbol	* sn -> s		1185212						
ANR	1187285	Symbol	qn -> target		1185212						
ANR	1187286	Symbol	cc -> bs		1185212						
ANR	1187287	Symbol	env -> options		1185212						
ANR	1187288	Symbol	distance_multiply		1185212						
ANR	1187289	Symbol	opt -> exb . reach_end		1185212						
ANR	1187290	Symbol	node		1185212						
ANR	1187291	Symbol	BACKREFS_P		1185212						
ANR	1187292	Symbol	get_max_match_length		1185212						
ANR	1187293	Symbol	& nopt . len		1185212						
ANR	1187294	Symbol	is_raw		1185212						
ANR	1187295	Symbol	opt -> expr		1185212						
ANR	1187296	Symbol	& nopt . exm		1185212						
ANR	1187297	Symbol	IS_ENCLOSE_MIN_FIXED		1185212						
ANR	1187298	Symbol	* * env		1185212						
ANR	1187299	Symbol	NCTYPE ( node ) -> ctype		1185212						
ANR	1187300	Symbol	tmax		1185212						
ANR	1187301	Symbol	ONIGENC_MBC_MINLEN		1185212						
ANR	1187302	Symbol	save		1185212						
ANR	1187303	Symbol	env -> enc		1185212						
ANR	1187304	Symbol	NSTRING_IS_RAW		1185212						
ANR	1187305	Symbol	opt -> exb . ignore_case		1185212						
ANR	1187306	Symbol	nopt . map		1185212						
ANR	1187307	Symbol	* en		1185212						
ANR	1187308	Symbol	& max		1185212						
ANR	1187309	Symbol	br		1185212						
ANR	1187310	Symbol	qn -> lower		1185212						
ANR	1187311	Symbol	min		1185212						
ANR	1187312	Symbol	* * backs		1185212						
ANR	1187313	Symbol	onigenc_strlen		1185212						
ANR	1187314	Symbol	NBREF		1185212						
ANR	1187315	Symbol	NT_CANY		1185212						
ANR	1187316	Symbol	* NANCHOR		1185212						
ANR	1187317	Symbol	NST_RECURSION		1185212						
ANR	1187318	Symbol	NENCLOSE		1185212						
ANR	1187319	Symbol	NCALL ( node ) -> target		1185212						
ANR	1187320	Symbol	sn		1185212						
ANR	1187321	Symbol	env -> mmd		1185212						
ANR	1187322	Symbol	cc		1185212						
ANR	1187323	Symbol	& opt -> map		1185212						
ANR	1187324	Symbol	max		1185212						
ANR	1187325	Symbol	tmin		1185212						
ANR	1187326	Symbol	i		1185212						
ANR	1187327	Symbol	nopt . exb . reach_end		1185212						
ANR	1187328	Symbol	nopt . exm . len		1185212						
ANR	1187329	Symbol	* ( sn -> s )		1185212						
ANR	1187330	Symbol	n		1185212						
ANR	1187331	Symbol	& nopt . map		1185212						
ANR	1187332	Symbol	MAX_NODE_OPT_INFO_REF_COUNT		1185212						
ANR	1187333	Symbol	r		1185212						
ANR	1187334	Symbol	env -> scan_env -> backrefed_mem		1185212						
ANR	1187335	Symbol	NCTYPE ( node ) -> not		1185212						
ANR	1187336	Symbol	en -> target		1185212						
ANR	1187337	Symbol	env -> case_fold_flag		1185212						
ANR	1187338	Symbol	br -> state		1185212						
ANR	1187339	Symbol	z		1185212						
ANR	1187340	Symbol	is_full_opt_exact_info		1185212						
ANR	1187341	Symbol	ANCHOR_ANYCHAR_STAR		1185212						
ANR	1187342	Symbol	& min		1185212						
ANR	1187343	Symbol	nopt . len . min		1185212						
ANR	1187344	Symbol	BITSET_AT		1185212						
ANR	1187345	Symbol	NCAR		1185212						
ANR	1187346	Symbol	br -> back_num		1185212						
ANR	1187347	Symbol	IS_NCCLASS_NOT		1185212						
ANR	1187348	Symbol	nopt . exb		1185212						
ANR	1187349	Symbol	nopt . exm		1185212						
ANR	1187350	Symbol	nenv		1185212						
ANR	1187351	Symbol	nopt . len		1185212						
ANR	1187352	Symbol	NCCLASS		1185212						
ANR	1187353	Symbol	ANCHOR_ANYCHAR_STAR_MASK		1185212						
ANR	1187354	Symbol	& env -> mmd		1185212						
ANR	1187355	Symbol	* NCTYPE		1185212						
ANR	1187356	Symbol	nopt . len . max		1185212						
ANR	1187357	Symbol	sn -> s		1185212						
ANR	1187358	Symbol	ONIGENC_MBC_MAXLEN_DIST		1185212						
ANR	1187359	Symbol	* nodes		1185212						
ANR	1187360	Symbol	NCTYPE		1185212						
ANR	1187361	Symbol	NSTRING_IS_DONT_GET_OPT_INFO		1185212						
ANR	1187362	Symbol	SINGLE_BYTE_SIZE		1185212						
ANR	1187363	Symbol	BIT_STATUS_AT		1185212						
ANR	1187364	Symbol	* * i		1185212						
ANR	1187365	Symbol	en -> option		1185212						
ANR	1187366	Symbol	IS_ENCLOSE_MAX_FIXED		1185212						
ANR	1187367	Symbol	* env		1185212						
ANR	1187368	Symbol	NANCHOR ( node ) -> target		1185212						
ANR	1187369	Symbol	en		1185212						
ANR	1187370	Symbol	stderr		1185212						
ANR	1187371	Symbol	ONIGERR_TYPE_BUG		1185212						
ANR	1187372	Symbol	add_char_amb_opt_map_info		1185212						
ANR	1187373	Symbol	qn -> upper		1185212						
ANR	1187374	Symbol	en -> max_len		1185212						
ANR	1187375	Symbol	opt		1185212						
ANR	1187376	Symbol	is_set_opt_anc_info		1185212						
ANR	1187377	Symbol	nopt		1185212						
ANR	1187378	Symbol	nd		1185212						
ANR	1187379	Symbol	& opt -> exb		1185212						
ANR	1187380	Symbol	& nenv		1185212						
ANR	1187381	Symbol	get_min_match_length		1185212						
ANR	1187382	Symbol	IS_CALL_RECURSION		1185212						
ANR	1187383	Symbol	en -> opt_count		1185212						
ANR	1187384	Symbol	& opt -> len		1185212						
ANR	1187385	Symbol	opt -> exb . len		1185212						
ANR	1187386	Symbol	en -> min_len		1185212						
ANR	1187387	Symbol	* qn		1185212						
ANR	1187388	Symbol	qn -> greedy		1185212						
ANR	1187389	Symbol	IS_NOT_NULL		1185212						
ANR	1187390	Symbol	* * sn		1185212						
ANR	1187391	Symbol	& nopt . exb		1185212						
ANR	1187392	Symbol	NCALL		1185212						
ANR	1187393	Symbol	* NENCLOSE		1185212						
ANR	1187394	Symbol	& tmin		1185212						
ANR	1187395	Symbol	NENCLOSE ( NCALL ( node ) -> target ) -> option		1185212						
ANR	1187396	Symbol	NANCHOR ( node ) -> type		1185212						
ANR	1187397	Symbol	ONIGENC_IS_CODE_WORD		1185212						
ANR	1187398	Symbol	& opt -> expr		1185212						
ANR	1187399	Symbol	nopt . exb . len		1185212						
ANR	1187400	Symbol	sn -> end		1185212						
ANR	1187401	Symbol	env -> mmd . max		1185212						
ANR	1187402	Symbol	* opt		1185212						
ANR	1187403	Symbol	ANCHOR_ANYCHAR_STAR_ML		1185212						
ANR	1187404	Symbol	opt -> exm		1185212						
ANR	1187405	Symbol	env		1185212						
ANR	1187406	Symbol	& nopt		1185212						
ANR	1187407	Symbol	opt -> exb		1185212						
ANR	1187408	Symbol	nodes		1185212						
ANR	1187409	Symbol	* i		1185212						
ANR	1187410	Symbol	env -> scan_env		1185212						
ANR	1187411	Symbol	slen		1185212						
ANR	1187412	Symbol	optimize_node_left		1185212						
ANR	1187413	Symbol	NANCHOR		1185212						
ANR	1187414	Symbol	IS_MULTILINE		1185212						
ANR	1187415	Symbol	NTYPE		1185212						
ANR	1187416	Symbol	& tmax		1185212						
ANR	1187417	Symbol	& nenv . mmd		1185212						
ANR	1187418	Symbol	* NCALL		1185212						
ANR	1187419	Symbol	backs		1185212						
ANR	1187420	Symbol	& opt -> anc		1185212						
ANR	1187421	Function	set_optimize_exact_info	4881:0:110080:111235							
ANR	1187422	FunctionDef	"set_optimize_exact_info (regex_t * reg , OptExactInfo * e)"		1187421	0					
ANR	1187423	CompoundStatement		4883:0:110146:111235	1187421	0					
ANR	1187424	IdentifierDeclStatement	int r ;	4884:2:110150:110155	1187421	0	True				
ANR	1187425	IdentifierDecl	r		1187421	0					
ANR	1187426	IdentifierDeclType	int		1187421	0					
ANR	1187427	Identifier	r		1187421	1					
ANR	1187428	IfStatement	if ( e -> len == 0 )		1187421	1					
ANR	1187429	Condition	e -> len == 0	4886:6:110164:110174	1187421	0	True				
ANR	1187430	EqualityExpression	e -> len == 0		1187421	0		==			
ANR	1187431	PtrMemberAccess	e -> len		1187421	0					
ANR	1187432	Identifier	e		1187421	0					
ANR	1187433	Identifier	len		1187421	1					
ANR	1187434	PrimaryExpression	0		1187421	1					
ANR	1187435	ReturnStatement	return 0 ;	4886:19:110177:110185	1187421	1	True				
ANR	1187436	PrimaryExpression	0		1187421	0					
ANR	1187437	IfStatement	if ( e -> ignore_case )		1187421	2					
ANR	1187438	Condition	e -> ignore_case	4888:6:110194:110207	1187421	0	True				
ANR	1187439	PtrMemberAccess	e -> ignore_case		1187421	0					
ANR	1187440	Identifier	e		1187421	0					
ANR	1187441	Identifier	ignore_case		1187421	1					
ANR	1187442	CompoundStatement		6:22:63:63	1187421	1					
ANR	1187443	ExpressionStatement	reg -> exact = ( UChar * ) xmalloc ( e -> len )	4889:4:110216:110253	1187421	0	True				
ANR	1187444	AssignmentExpression	reg -> exact = ( UChar * ) xmalloc ( e -> len )		1187421	0		=			
ANR	1187445	PtrMemberAccess	reg -> exact		1187421	0					
ANR	1187446	Identifier	reg		1187421	0					
ANR	1187447	Identifier	exact		1187421	1					
ANR	1187448	CastExpression	( UChar * ) xmalloc ( e -> len )		1187421	1					
ANR	1187449	CastTarget	UChar *		1187421	0					
ANR	1187450	CallExpression	xmalloc ( e -> len )		1187421	1					
ANR	1187451	Callee	xmalloc		1187421	0					
ANR	1187452	Identifier	xmalloc		1187421	0					
ANR	1187453	ArgumentList	e -> len		1187421	1					
ANR	1187454	Argument	e -> len		1187421	0					
ANR	1187455	PtrMemberAccess	e -> len		1187421	0					
ANR	1187456	Identifier	e		1187421	0					
ANR	1187457	Identifier	len		1187421	1					
ANR	1187458	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( reg -> exact )	4890:4:110259:110295	1187421	1	True				
ANR	1187459	CallExpression	CHECK_NULL_RETURN_MEMERR ( reg -> exact )		1187421	0					
ANR	1187460	Callee	CHECK_NULL_RETURN_MEMERR		1187421	0					
ANR	1187461	Identifier	CHECK_NULL_RETURN_MEMERR		1187421	0					
ANR	1187462	ArgumentList	reg -> exact		1187421	1					
ANR	1187463	Argument	reg -> exact		1187421	0					
ANR	1187464	PtrMemberAccess	reg -> exact		1187421	0					
ANR	1187465	Identifier	reg		1187421	0					
ANR	1187466	Identifier	exact		1187421	1					
ANR	1187467	ExpressionStatement	"xmemcpy ( reg -> exact , e -> s , e -> len )"	4891:4:110301:110334	1187421	2	True				
ANR	1187468	CallExpression	"xmemcpy ( reg -> exact , e -> s , e -> len )"		1187421	0					
ANR	1187469	Callee	xmemcpy		1187421	0					
ANR	1187470	Identifier	xmemcpy		1187421	0					
ANR	1187471	ArgumentList	reg -> exact		1187421	1					
ANR	1187472	Argument	reg -> exact		1187421	0					
ANR	1187473	PtrMemberAccess	reg -> exact		1187421	0					
ANR	1187474	Identifier	reg		1187421	0					
ANR	1187475	Identifier	exact		1187421	1					
ANR	1187476	Argument	e -> s		1187421	1					
ANR	1187477	PtrMemberAccess	e -> s		1187421	0					
ANR	1187478	Identifier	e		1187421	0					
ANR	1187479	Identifier	s		1187421	1					
ANR	1187480	Argument	e -> len		1187421	2					
ANR	1187481	PtrMemberAccess	e -> len		1187421	0					
ANR	1187482	Identifier	e		1187421	0					
ANR	1187483	Identifier	len		1187421	1					
ANR	1187484	ExpressionStatement	reg -> exact_end = reg -> exact + e -> len	4892:4:110340:110376	1187421	3	True				
ANR	1187485	AssignmentExpression	reg -> exact_end = reg -> exact + e -> len		1187421	0		=			
ANR	1187486	PtrMemberAccess	reg -> exact_end		1187421	0					
ANR	1187487	Identifier	reg		1187421	0					
ANR	1187488	Identifier	exact_end		1187421	1					
ANR	1187489	AdditiveExpression	reg -> exact + e -> len		1187421	1		+			
ANR	1187490	PtrMemberAccess	reg -> exact		1187421	0					
ANR	1187491	Identifier	reg		1187421	0					
ANR	1187492	Identifier	exact		1187421	1					
ANR	1187493	PtrMemberAccess	e -> len		1187421	1					
ANR	1187494	Identifier	e		1187421	0					
ANR	1187495	Identifier	len		1187421	1					
ANR	1187496	ExpressionStatement	reg -> optimize = ONIG_OPTIMIZE_EXACT_IC	4893:4:110382:110420	1187421	4	True				
ANR	1187497	AssignmentExpression	reg -> optimize = ONIG_OPTIMIZE_EXACT_IC		1187421	0		=			
ANR	1187498	PtrMemberAccess	reg -> optimize		1187421	0					
ANR	1187499	Identifier	reg		1187421	0					
ANR	1187500	Identifier	optimize		1187421	1					
ANR	1187501	Identifier	ONIG_OPTIMIZE_EXACT_IC		1187421	1					
ANR	1187502	ElseStatement	else		1187421	0					
ANR	1187503	CompoundStatement		14:4:292:309	1187421	0					
ANR	1187504	IdentifierDeclStatement	int allow_reverse ;	4896:4:110439:110456	1187421	0	True				
ANR	1187505	IdentifierDecl	allow_reverse		1187421	0					
ANR	1187506	IdentifierDeclType	int		1187421	0					
ANR	1187507	Identifier	allow_reverse		1187421	1					
ANR	1187508	ExpressionStatement	"reg -> exact = str_dup ( e -> s , e -> s + e -> len )"	4898:4:110463:110504	1187421	1	True				
ANR	1187509	AssignmentExpression	"reg -> exact = str_dup ( e -> s , e -> s + e -> len )"		1187421	0		=			
ANR	1187510	PtrMemberAccess	reg -> exact		1187421	0					
ANR	1187511	Identifier	reg		1187421	0					
ANR	1187512	Identifier	exact		1187421	1					
ANR	1187513	CallExpression	"str_dup ( e -> s , e -> s + e -> len )"		1187421	1					
ANR	1187514	Callee	str_dup		1187421	0					
ANR	1187515	Identifier	str_dup		1187421	0					
ANR	1187516	ArgumentList	e -> s		1187421	1					
ANR	1187517	Argument	e -> s		1187421	0					
ANR	1187518	PtrMemberAccess	e -> s		1187421	0					
ANR	1187519	Identifier	e		1187421	0					
ANR	1187520	Identifier	s		1187421	1					
ANR	1187521	Argument	e -> s + e -> len		1187421	1					
ANR	1187522	AdditiveExpression	e -> s + e -> len		1187421	0		+			
ANR	1187523	PtrMemberAccess	e -> s		1187421	0					
ANR	1187524	Identifier	e		1187421	0					
ANR	1187525	Identifier	s		1187421	1					
ANR	1187526	PtrMemberAccess	e -> len		1187421	1					
ANR	1187527	Identifier	e		1187421	0					
ANR	1187528	Identifier	len		1187421	1					
ANR	1187529	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( reg -> exact )	4899:4:110510:110546	1187421	2	True				
ANR	1187530	CallExpression	CHECK_NULL_RETURN_MEMERR ( reg -> exact )		1187421	0					
ANR	1187531	Callee	CHECK_NULL_RETURN_MEMERR		1187421	0					
ANR	1187532	Identifier	CHECK_NULL_RETURN_MEMERR		1187421	0					
ANR	1187533	ArgumentList	reg -> exact		1187421	1					
ANR	1187534	Argument	reg -> exact		1187421	0					
ANR	1187535	PtrMemberAccess	reg -> exact		1187421	0					
ANR	1187536	Identifier	reg		1187421	0					
ANR	1187537	Identifier	exact		1187421	1					
ANR	1187538	ExpressionStatement	reg -> exact_end = reg -> exact + e -> len	4900:4:110552:110588	1187421	3	True				
ANR	1187539	AssignmentExpression	reg -> exact_end = reg -> exact + e -> len		1187421	0		=			
ANR	1187540	PtrMemberAccess	reg -> exact_end		1187421	0					
ANR	1187541	Identifier	reg		1187421	0					
ANR	1187542	Identifier	exact_end		1187421	1					
ANR	1187543	AdditiveExpression	reg -> exact + e -> len		1187421	1		+			
ANR	1187544	PtrMemberAccess	reg -> exact		1187421	0					
ANR	1187545	Identifier	reg		1187421	0					
ANR	1187546	Identifier	exact		1187421	1					
ANR	1187547	PtrMemberAccess	e -> len		1187421	1					
ANR	1187548	Identifier	e		1187421	0					
ANR	1187549	Identifier	len		1187421	1					
ANR	1187550	ExpressionStatement	"allow_reverse = ONIGENC_IS_ALLOWED_REVERSE_MATCH ( reg -> enc , reg -> exact , reg -> exact_end )"	4902:4:110596:110683	1187421	4	True				
ANR	1187551	AssignmentExpression	"allow_reverse = ONIGENC_IS_ALLOWED_REVERSE_MATCH ( reg -> enc , reg -> exact , reg -> exact_end )"		1187421	0		=			
ANR	1187552	Identifier	allow_reverse		1187421	0					
ANR	1187553	CallExpression	"ONIGENC_IS_ALLOWED_REVERSE_MATCH ( reg -> enc , reg -> exact , reg -> exact_end )"		1187421	1					
ANR	1187554	Callee	ONIGENC_IS_ALLOWED_REVERSE_MATCH		1187421	0					
ANR	1187555	Identifier	ONIGENC_IS_ALLOWED_REVERSE_MATCH		1187421	0					
ANR	1187556	ArgumentList	reg -> enc		1187421	1					
ANR	1187557	Argument	reg -> enc		1187421	0					
ANR	1187558	PtrMemberAccess	reg -> enc		1187421	0					
ANR	1187559	Identifier	reg		1187421	0					
ANR	1187560	Identifier	enc		1187421	1					
ANR	1187561	Argument	reg -> exact		1187421	1					
ANR	1187562	PtrMemberAccess	reg -> exact		1187421	0					
ANR	1187563	Identifier	reg		1187421	0					
ANR	1187564	Identifier	exact		1187421	1					
ANR	1187565	Argument	reg -> exact_end		1187421	2					
ANR	1187566	PtrMemberAccess	reg -> exact_end		1187421	0					
ANR	1187567	Identifier	reg		1187421	0					
ANR	1187568	Identifier	exact_end		1187421	1					
ANR	1187569	IfStatement	if ( e -> len >= 3 || ( e -> len >= 2 && allow_reverse ) )		1187421	5					
ANR	1187570	Condition	e -> len >= 3 || ( e -> len >= 2 && allow_reverse )	4905:8:110694:110738	1187421	0	True				
ANR	1187571	OrExpression	e -> len >= 3 || ( e -> len >= 2 && allow_reverse )		1187421	0		||			
ANR	1187572	RelationalExpression	e -> len >= 3		1187421	0		>=			
ANR	1187573	PtrMemberAccess	e -> len		1187421	0					
ANR	1187574	Identifier	e		1187421	0					
ANR	1187575	Identifier	len		1187421	1					
ANR	1187576	PrimaryExpression	3		1187421	1					
ANR	1187577	AndExpression	e -> len >= 2 && allow_reverse		1187421	1		&&			
ANR	1187578	RelationalExpression	e -> len >= 2		1187421	0		>=			
ANR	1187579	PtrMemberAccess	e -> len		1187421	0					
ANR	1187580	Identifier	e		1187421	0					
ANR	1187581	Identifier	len		1187421	1					
ANR	1187582	PrimaryExpression	2		1187421	1					
ANR	1187583	Identifier	allow_reverse		1187421	1					
ANR	1187584	CompoundStatement		23:55:594:594	1187421	1					
ANR	1187585	ExpressionStatement	"r = set_bm_skip ( reg -> exact , reg -> exact_end , reg -> enc , reg -> map , & ( reg -> int_map ) )"	4906:6:110749:110844	1187421	0	True				
ANR	1187586	AssignmentExpression	"r = set_bm_skip ( reg -> exact , reg -> exact_end , reg -> enc , reg -> map , & ( reg -> int_map ) )"		1187421	0		=			
ANR	1187587	Identifier	r		1187421	0					
ANR	1187588	CallExpression	"set_bm_skip ( reg -> exact , reg -> exact_end , reg -> enc , reg -> map , & ( reg -> int_map ) )"		1187421	1					
ANR	1187589	Callee	set_bm_skip		1187421	0					
ANR	1187590	Identifier	set_bm_skip		1187421	0					
ANR	1187591	ArgumentList	reg -> exact		1187421	1					
ANR	1187592	Argument	reg -> exact		1187421	0					
ANR	1187593	PtrMemberAccess	reg -> exact		1187421	0					
ANR	1187594	Identifier	reg		1187421	0					
ANR	1187595	Identifier	exact		1187421	1					
ANR	1187596	Argument	reg -> exact_end		1187421	1					
ANR	1187597	PtrMemberAccess	reg -> exact_end		1187421	0					
ANR	1187598	Identifier	reg		1187421	0					
ANR	1187599	Identifier	exact_end		1187421	1					
ANR	1187600	Argument	reg -> enc		1187421	2					
ANR	1187601	PtrMemberAccess	reg -> enc		1187421	0					
ANR	1187602	Identifier	reg		1187421	0					
ANR	1187603	Identifier	enc		1187421	1					
ANR	1187604	Argument	reg -> map		1187421	3					
ANR	1187605	PtrMemberAccess	reg -> map		1187421	0					
ANR	1187606	Identifier	reg		1187421	0					
ANR	1187607	Identifier	map		1187421	1					
ANR	1187608	Argument	& ( reg -> int_map )		1187421	4					
ANR	1187609	UnaryOperationExpression	& ( reg -> int_map )		1187421	0					
ANR	1187610	UnaryOperator	&		1187421	0					
ANR	1187611	PtrMemberAccess	reg -> int_map		1187421	1					
ANR	1187612	Identifier	reg		1187421	0					
ANR	1187613	Identifier	int_map		1187421	1					
ANR	1187614	IfStatement	if ( r )		1187421	1					
ANR	1187615	Condition	r	4908:10:110856:110856	1187421	0	True				
ANR	1187616	Identifier	r		1187421	0					
ANR	1187617	ReturnStatement	return r ;	4908:13:110859:110867	1187421	1	True				
ANR	1187618	Identifier	r		1187421	0					
ANR	1187619	ExpressionStatement	reg -> optimize = ( allow_reverse != 0 ? ONIG_OPTIMIZE_EXACT_BM : ONIG_OPTIMIZE_EXACT_BM_NOT_REV )	4910:6:110876:110979	1187421	2	True				
ANR	1187620	AssignmentExpression	reg -> optimize = ( allow_reverse != 0 ? ONIG_OPTIMIZE_EXACT_BM : ONIG_OPTIMIZE_EXACT_BM_NOT_REV )		1187421	0		=			
ANR	1187621	PtrMemberAccess	reg -> optimize		1187421	0					
ANR	1187622	Identifier	reg		1187421	0					
ANR	1187623	Identifier	optimize		1187421	1					
ANR	1187624	ConditionalExpression	allow_reverse != 0 ? ONIG_OPTIMIZE_EXACT_BM : ONIG_OPTIMIZE_EXACT_BM_NOT_REV		1187421	1					
ANR	1187625	Condition	allow_reverse != 0		1187421	0					
ANR	1187626	EqualityExpression	allow_reverse != 0		1187421	0		!=			
ANR	1187627	Identifier	allow_reverse		1187421	0					
ANR	1187628	PrimaryExpression	0		1187421	1					
ANR	1187629	Identifier	ONIG_OPTIMIZE_EXACT_BM		1187421	1					
ANR	1187630	Identifier	ONIG_OPTIMIZE_EXACT_BM_NOT_REV		1187421	2					
ANR	1187631	ElseStatement	else		1187421	0					
ANR	1187632	CompoundStatement		31:9:849:849	1187421	0					
ANR	1187633	ExpressionStatement	reg -> optimize = ONIG_OPTIMIZE_EXACT	4914:6:111004:111039	1187421	0	True				
ANR	1187634	AssignmentExpression	reg -> optimize = ONIG_OPTIMIZE_EXACT		1187421	0		=			
ANR	1187635	PtrMemberAccess	reg -> optimize		1187421	0					
ANR	1187636	Identifier	reg		1187421	0					
ANR	1187637	Identifier	optimize		1187421	1					
ANR	1187638	Identifier	ONIG_OPTIMIZE_EXACT		1187421	1					
ANR	1187639	ExpressionStatement	reg -> dmin = e -> mmd . min	4918:2:111054:111076	1187421	3	True				
ANR	1187640	AssignmentExpression	reg -> dmin = e -> mmd . min		1187421	0		=			
ANR	1187641	PtrMemberAccess	reg -> dmin		1187421	0					
ANR	1187642	Identifier	reg		1187421	0					
ANR	1187643	Identifier	dmin		1187421	1					
ANR	1187644	MemberAccess	e -> mmd . min		1187421	1					
ANR	1187645	PtrMemberAccess	e -> mmd		1187421	0					
ANR	1187646	Identifier	e		1187421	0					
ANR	1187647	Identifier	mmd		1187421	1					
ANR	1187648	Identifier	min		1187421	1					
ANR	1187649	ExpressionStatement	reg -> dmax = e -> mmd . max	4919:2:111080:111102	1187421	4	True				
ANR	1187650	AssignmentExpression	reg -> dmax = e -> mmd . max		1187421	0		=			
ANR	1187651	PtrMemberAccess	reg -> dmax		1187421	0					
ANR	1187652	Identifier	reg		1187421	0					
ANR	1187653	Identifier	dmax		1187421	1					
ANR	1187654	MemberAccess	e -> mmd . max		1187421	1					
ANR	1187655	PtrMemberAccess	e -> mmd		1187421	0					
ANR	1187656	Identifier	e		1187421	0					
ANR	1187657	Identifier	mmd		1187421	1					
ANR	1187658	Identifier	max		1187421	1					
ANR	1187659	IfStatement	if ( reg -> dmin != ONIG_INFINITE_DISTANCE )		1187421	5					
ANR	1187660	Condition	reg -> dmin != ONIG_INFINITE_DISTANCE	4921:6:111111:111145	1187421	0	True				
ANR	1187661	EqualityExpression	reg -> dmin != ONIG_INFINITE_DISTANCE		1187421	0		!=			
ANR	1187662	PtrMemberAccess	reg -> dmin		1187421	0					
ANR	1187663	Identifier	reg		1187421	0					
ANR	1187664	Identifier	dmin		1187421	1					
ANR	1187665	Identifier	ONIG_INFINITE_DISTANCE		1187421	1					
ANR	1187666	CompoundStatement		39:43:1001:1001	1187421	1					
ANR	1187667	ExpressionStatement	reg -> threshold_len = reg -> dmin + ( reg -> exact_end - reg -> exact )	4922:4:111154:111216	1187421	0	True				
ANR	1187668	AssignmentExpression	reg -> threshold_len = reg -> dmin + ( reg -> exact_end - reg -> exact )		1187421	0		=			
ANR	1187669	PtrMemberAccess	reg -> threshold_len		1187421	0					
ANR	1187670	Identifier	reg		1187421	0					
ANR	1187671	Identifier	threshold_len		1187421	1					
ANR	1187672	AdditiveExpression	reg -> dmin + ( reg -> exact_end - reg -> exact )		1187421	1		+			
ANR	1187673	PtrMemberAccess	reg -> dmin		1187421	0					
ANR	1187674	Identifier	reg		1187421	0					
ANR	1187675	Identifier	dmin		1187421	1					
ANR	1187676	AdditiveExpression	reg -> exact_end - reg -> exact		1187421	1		-			
ANR	1187677	PtrMemberAccess	reg -> exact_end		1187421	0					
ANR	1187678	Identifier	reg		1187421	0					
ANR	1187679	Identifier	exact_end		1187421	1					
ANR	1187680	PtrMemberAccess	reg -> exact		1187421	1					
ANR	1187681	Identifier	reg		1187421	0					
ANR	1187682	Identifier	exact		1187421	1					
ANR	1187683	ReturnStatement	return 0 ;	4925:2:111225:111233	1187421	6	True				
ANR	1187684	PrimaryExpression	0		1187421	0					
ANR	1187685	ReturnType	static int		1187421	1					
ANR	1187686	Identifier	set_optimize_exact_info		1187421	2					
ANR	1187687	ParameterList	"regex_t * reg , OptExactInfo * e"		1187421	3					
ANR	1187688	Parameter	regex_t * reg	4882:24:110115:110126	1187421	0	True				
ANR	1187689	ParameterType	regex_t *		1187421	0					
ANR	1187690	Identifier	reg		1187421	1					
ANR	1187691	Parameter	OptExactInfo * e	4882:38:110129:110143	1187421	1	True				
ANR	1187692	ParameterType	OptExactInfo *		1187421	0					
ANR	1187693	Identifier	e		1187421	1					
ANR	1187694	CFGEntryNode	ENTRY		1187421		True				
ANR	1187695	CFGExitNode	EXIT		1187421		True				
ANR	1187696	Symbol	ONIGENC_IS_ALLOWED_REVERSE_MATCH		1187421						
ANR	1187697	Symbol	reg -> dmin		1187421						
ANR	1187698	Symbol	reg -> threshold_len		1187421						
ANR	1187699	Symbol	set_bm_skip		1187421						
ANR	1187700	Symbol	reg -> exact_end		1187421						
ANR	1187701	Symbol	& reg -> int_map		1187421						
ANR	1187702	Symbol	e -> mmd . max		1187421						
ANR	1187703	Symbol	ONIG_INFINITE_DISTANCE		1187421						
ANR	1187704	Symbol	e -> mmd		1187421						
ANR	1187705	Symbol	reg		1187421						
ANR	1187706	Symbol	xmalloc		1187421						
ANR	1187707	Symbol	reg -> optimize		1187421						
ANR	1187708	Symbol	ONIG_OPTIMIZE_EXACT		1187421						
ANR	1187709	Symbol	str_dup		1187421						
ANR	1187710	Symbol	reg -> map		1187421						
ANR	1187711	Symbol	e -> mmd . min		1187421						
ANR	1187712	Symbol	e -> len		1187421						
ANR	1187713	Symbol	ONIG_OPTIMIZE_EXACT_BM		1187421						
ANR	1187714	Symbol	e		1187421						
ANR	1187715	Symbol	ONIG_OPTIMIZE_EXACT_BM_NOT_REV		1187421						
ANR	1187716	Symbol	e -> s		1187421						
ANR	1187717	Symbol	* e		1187421						
ANR	1187718	Symbol	reg -> enc		1187421						
ANR	1187719	Symbol	r		1187421						
ANR	1187720	Symbol	ONIG_OPTIMIZE_EXACT_IC		1187421						
ANR	1187721	Symbol	allow_reverse		1187421						
ANR	1187722	Symbol	reg -> dmax		1187421						
ANR	1187723	Symbol	reg -> exact		1187421						
ANR	1187724	Symbol	e -> ignore_case		1187421						
ANR	1187725	Symbol	* reg		1187421						
ANR	1187726	Function	set_optimize_map_info	4928:0:111238:111581							
ANR	1187727	FunctionDef	"set_optimize_map_info (regex_t * reg , OptMapInfo * m)"		1187726	0					
ANR	1187728	CompoundStatement		4930:0:111301:111581	1187726	0					
ANR	1187729	IdentifierDeclStatement	int i ;	4931:2:111305:111310	1187726	0	True				
ANR	1187730	IdentifierDecl	i		1187726	0					
ANR	1187731	IdentifierDeclType	int		1187726	0					
ANR	1187732	Identifier	i		1187726	1					
ANR	1187733	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		1187726	1					
ANR	1187734	ForInit	i = 0 ;	4933:7:111320:111325	1187726	0	True				
ANR	1187735	AssignmentExpression	i = 0		1187726	0		=			
ANR	1187736	Identifier	i		1187726	0					
ANR	1187737	PrimaryExpression	0		1187726	1					
ANR	1187738	Condition	i < ONIG_CHAR_TABLE_SIZE	4933:14:111327:111350	1187726	1	True				
ANR	1187739	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		1187726	0		<			
ANR	1187740	Identifier	i		1187726	0					
ANR	1187741	Identifier	ONIG_CHAR_TABLE_SIZE		1187726	1					
ANR	1187742	PostIncDecOperationExpression	i ++	4933:40:111353:111355	1187726	2	True				
ANR	1187743	Identifier	i		1187726	0					
ANR	1187744	IncDec	++		1187726	1					
ANR	1187745	ExpressionStatement	reg -> map [ i ] = m -> map [ i ]	4934:4:111362:111385	1187726	3	True				
ANR	1187746	AssignmentExpression	reg -> map [ i ] = m -> map [ i ]		1187726	0		=			
ANR	1187747	ArrayIndexing	reg -> map [ i ]		1187726	0					
ANR	1187748	PtrMemberAccess	reg -> map		1187726	0					
ANR	1187749	Identifier	reg		1187726	0					
ANR	1187750	Identifier	map		1187726	1					
ANR	1187751	Identifier	i		1187726	1					
ANR	1187752	ArrayIndexing	m -> map [ i ]		1187726	1					
ANR	1187753	PtrMemberAccess	m -> map		1187726	0					
ANR	1187754	Identifier	m		1187726	0					
ANR	1187755	Identifier	map		1187726	1					
ANR	1187756	Identifier	i		1187726	1					
ANR	1187757	ExpressionStatement	reg -> optimize = ONIG_OPTIMIZE_MAP	4936:2:111390:111425	1187726	2	True				
ANR	1187758	AssignmentExpression	reg -> optimize = ONIG_OPTIMIZE_MAP		1187726	0		=			
ANR	1187759	PtrMemberAccess	reg -> optimize		1187726	0					
ANR	1187760	Identifier	reg		1187726	0					
ANR	1187761	Identifier	optimize		1187726	1					
ANR	1187762	Identifier	ONIG_OPTIMIZE_MAP		1187726	1					
ANR	1187763	ExpressionStatement	reg -> dmin = m -> mmd . min	4937:2:111429:111457	1187726	3	True				
ANR	1187764	AssignmentExpression	reg -> dmin = m -> mmd . min		1187726	0		=			
ANR	1187765	PtrMemberAccess	reg -> dmin		1187726	0					
ANR	1187766	Identifier	reg		1187726	0					
ANR	1187767	Identifier	dmin		1187726	1					
ANR	1187768	MemberAccess	m -> mmd . min		1187726	1					
ANR	1187769	PtrMemberAccess	m -> mmd		1187726	0					
ANR	1187770	Identifier	m		1187726	0					
ANR	1187771	Identifier	mmd		1187726	1					
ANR	1187772	Identifier	min		1187726	1					
ANR	1187773	ExpressionStatement	reg -> dmax = m -> mmd . max	4938:2:111461:111489	1187726	4	True				
ANR	1187774	AssignmentExpression	reg -> dmax = m -> mmd . max		1187726	0		=			
ANR	1187775	PtrMemberAccess	reg -> dmax		1187726	0					
ANR	1187776	Identifier	reg		1187726	0					
ANR	1187777	Identifier	dmax		1187726	1					
ANR	1187778	MemberAccess	m -> mmd . max		1187726	1					
ANR	1187779	PtrMemberAccess	m -> mmd		1187726	0					
ANR	1187780	Identifier	m		1187726	0					
ANR	1187781	Identifier	mmd		1187726	1					
ANR	1187782	Identifier	max		1187726	1					
ANR	1187783	IfStatement	if ( reg -> dmin != ONIG_INFINITE_DISTANCE )		1187726	5					
ANR	1187784	Condition	reg -> dmin != ONIG_INFINITE_DISTANCE	4940:6:111498:111532	1187726	0	True				
ANR	1187785	EqualityExpression	reg -> dmin != ONIG_INFINITE_DISTANCE		1187726	0		!=			
ANR	1187786	PtrMemberAccess	reg -> dmin		1187726	0					
ANR	1187787	Identifier	reg		1187726	0					
ANR	1187788	Identifier	dmin		1187726	1					
ANR	1187789	Identifier	ONIG_INFINITE_DISTANCE		1187726	1					
ANR	1187790	CompoundStatement		11:43:233:233	1187726	1					
ANR	1187791	ExpressionStatement	reg -> threshold_len = reg -> dmin + 1	4941:4:111541:111575	1187726	0	True				
ANR	1187792	AssignmentExpression	reg -> threshold_len = reg -> dmin + 1		1187726	0		=			
ANR	1187793	PtrMemberAccess	reg -> threshold_len		1187726	0					
ANR	1187794	Identifier	reg		1187726	0					
ANR	1187795	Identifier	threshold_len		1187726	1					
ANR	1187796	AdditiveExpression	reg -> dmin + 1		1187726	1		+			
ANR	1187797	PtrMemberAccess	reg -> dmin		1187726	0					
ANR	1187798	Identifier	reg		1187726	0					
ANR	1187799	Identifier	dmin		1187726	1					
ANR	1187800	PrimaryExpression	1		1187726	1					
ANR	1187801	ReturnType	static void		1187726	1					
ANR	1187802	Identifier	set_optimize_map_info		1187726	2					
ANR	1187803	ParameterList	"regex_t * reg , OptMapInfo * m"		1187726	3					
ANR	1187804	Parameter	regex_t * reg	4929:22:111272:111283	1187726	0	True				
ANR	1187805	ParameterType	regex_t *		1187726	0					
ANR	1187806	Identifier	reg		1187726	1					
ANR	1187807	Parameter	OptMapInfo * m	4929:36:111286:111298	1187726	1	True				
ANR	1187808	ParameterType	OptMapInfo *		1187726	0					
ANR	1187809	Identifier	m		1187726	1					
ANR	1187810	CFGEntryNode	ENTRY		1187726		True				
ANR	1187811	CFGExitNode	EXIT		1187726		True				
ANR	1187812	Symbol	reg -> map		1187726						
ANR	1187813	Symbol	m -> mmd		1187726						
ANR	1187814	Symbol	reg -> dmin		1187726						
ANR	1187815	Symbol	reg -> threshold_len		1187726						
ANR	1187816	Symbol	* * reg		1187726						
ANR	1187817	Symbol	i		1187726						
ANR	1187818	Symbol	m -> mmd . min		1187726						
ANR	1187819	Symbol	m -> map		1187726						
ANR	1187820	Symbol	m		1187726						
ANR	1187821	Symbol	ONIG_INFINITE_DISTANCE		1187726						
ANR	1187822	Symbol	ONIG_CHAR_TABLE_SIZE		1187726						
ANR	1187823	Symbol	* i		1187726						
ANR	1187824	Symbol	* m -> map		1187726						
ANR	1187825	Symbol	reg		1187726						
ANR	1187826	Symbol	reg -> dmax		1187726						
ANR	1187827	Symbol	reg -> optimize		1187726						
ANR	1187828	Symbol	* m		1187726						
ANR	1187829	Symbol	ONIG_OPTIMIZE_MAP		1187726						
ANR	1187830	Symbol	* reg -> map		1187726						
ANR	1187831	Symbol	m -> mmd . max		1187726						
ANR	1187832	Symbol	* reg		1187726						
ANR	1187833	Symbol	* * m		1187726						
ANR	1187834	Function	set_sub_anchor	4945:0:111584:111762							
ANR	1187835	FunctionDef	"set_sub_anchor (regex_t * reg , OptAncInfo * anc)"		1187834	0					
ANR	1187836	CompoundStatement		4947:0:111642:111762	1187834	0					
ANR	1187837	ExpressionStatement	reg -> sub_anchor |= anc -> left_anchor & ANCHOR_BEGIN_LINE	4948:2:111646:111702	1187834	0	True				
ANR	1187838	AssignmentExpression	reg -> sub_anchor |= anc -> left_anchor & ANCHOR_BEGIN_LINE		1187834	0		|=			
ANR	1187839	PtrMemberAccess	reg -> sub_anchor		1187834	0					
ANR	1187840	Identifier	reg		1187834	0					
ANR	1187841	Identifier	sub_anchor		1187834	1					
ANR	1187842	BitAndExpression	anc -> left_anchor & ANCHOR_BEGIN_LINE		1187834	1		&			
ANR	1187843	PtrMemberAccess	anc -> left_anchor		1187834	0					
ANR	1187844	Identifier	anc		1187834	0					
ANR	1187845	Identifier	left_anchor		1187834	1					
ANR	1187846	Identifier	ANCHOR_BEGIN_LINE		1187834	1					
ANR	1187847	ExpressionStatement	reg -> sub_anchor |= anc -> right_anchor & ANCHOR_END_LINE	4949:2:111706:111760	1187834	1	True				
ANR	1187848	AssignmentExpression	reg -> sub_anchor |= anc -> right_anchor & ANCHOR_END_LINE		1187834	0		|=			
ANR	1187849	PtrMemberAccess	reg -> sub_anchor		1187834	0					
ANR	1187850	Identifier	reg		1187834	0					
ANR	1187851	Identifier	sub_anchor		1187834	1					
ANR	1187852	BitAndExpression	anc -> right_anchor & ANCHOR_END_LINE		1187834	1		&			
ANR	1187853	PtrMemberAccess	anc -> right_anchor		1187834	0					
ANR	1187854	Identifier	anc		1187834	0					
ANR	1187855	Identifier	right_anchor		1187834	1					
ANR	1187856	Identifier	ANCHOR_END_LINE		1187834	1					
ANR	1187857	ReturnType	static void		1187834	1					
ANR	1187858	Identifier	set_sub_anchor		1187834	2					
ANR	1187859	ParameterList	"regex_t * reg , OptAncInfo * anc"		1187834	3					
ANR	1187860	Parameter	regex_t * reg	4946:15:111611:111622	1187834	0	True				
ANR	1187861	ParameterType	regex_t *		1187834	0					
ANR	1187862	Identifier	reg		1187834	1					
ANR	1187863	Parameter	OptAncInfo * anc	4946:29:111625:111639	1187834	1	True				
ANR	1187864	ParameterType	OptAncInfo *		1187834	0					
ANR	1187865	Identifier	anc		1187834	1					
ANR	1187866	CFGEntryNode	ENTRY		1187834		True				
ANR	1187867	CFGExitNode	EXIT		1187834		True				
ANR	1187868	Symbol	anc -> left_anchor		1187834						
ANR	1187869	Symbol	reg		1187834						
ANR	1187870	Symbol	reg -> sub_anchor		1187834						
ANR	1187871	Symbol	anc		1187834						
ANR	1187872	Symbol	ANCHOR_END_LINE		1187834						
ANR	1187873	Symbol	ANCHOR_BEGIN_LINE		1187834						
ANR	1187874	Symbol	anc -> right_anchor		1187834						
ANR	1187875	Symbol	* reg		1187834						
ANR	1187876	Symbol	* anc		1187834						
ANR	1187877	DeclStmt									
ANR	1187878	Decl							void	"void ( FILE * f , regex_t * reg )"	print_optimize_info
ANR	1187879	Function	set_optimize_info_from_tree	4956:0:111847:113302							
ANR	1187880	FunctionDef	"set_optimize_info_from_tree (Node * node , regex_t * reg , ScanEnv * scan_env)"		1187879	0					
ANR	1187881	CompoundStatement		4958:0:111931:113302	1187879	0					
ANR	1187882	IdentifierDeclStatement	int r ;	4960:2:111936:111941	1187879	0	True				
ANR	1187883	IdentifierDecl	r		1187879	0					
ANR	1187884	IdentifierDeclType	int		1187879	0					
ANR	1187885	Identifier	r		1187879	1					
ANR	1187886	IdentifierDeclStatement	NodeOptInfo opt ;	4961:2:111945:111960	1187879	1	True				
ANR	1187887	IdentifierDecl	opt		1187879	0					
ANR	1187888	IdentifierDeclType	NodeOptInfo		1187879	0					
ANR	1187889	Identifier	opt		1187879	1					
ANR	1187890	IdentifierDeclStatement	OptEnv env ;	4962:2:111964:111974	1187879	2	True				
ANR	1187891	IdentifierDecl	env		1187879	0					
ANR	1187892	IdentifierDeclType	OptEnv		1187879	0					
ANR	1187893	Identifier	env		1187879	1					
ANR	1187894	ExpressionStatement	env . enc = reg -> enc	4964:2:111979:112008	1187879	3	True				
ANR	1187895	AssignmentExpression	env . enc = reg -> enc		1187879	0		=			
ANR	1187896	MemberAccess	env . enc		1187879	0					
ANR	1187897	Identifier	env		1187879	0					
ANR	1187898	Identifier	enc		1187879	1					
ANR	1187899	PtrMemberAccess	reg -> enc		1187879	1					
ANR	1187900	Identifier	reg		1187879	0					
ANR	1187901	Identifier	enc		1187879	1					
ANR	1187902	ExpressionStatement	env . options = reg -> options	4965:2:112012:112045	1187879	4	True				
ANR	1187903	AssignmentExpression	env . options = reg -> options		1187879	0		=			
ANR	1187904	MemberAccess	env . options		1187879	0					
ANR	1187905	Identifier	env		1187879	0					
ANR	1187906	Identifier	options		1187879	1					
ANR	1187907	PtrMemberAccess	reg -> options		1187879	1					
ANR	1187908	Identifier	reg		1187879	0					
ANR	1187909	Identifier	options		1187879	1					
ANR	1187910	ExpressionStatement	env . case_fold_flag = reg -> case_fold_flag	4966:2:112049:112089	1187879	5	True				
ANR	1187911	AssignmentExpression	env . case_fold_flag = reg -> case_fold_flag		1187879	0		=			
ANR	1187912	MemberAccess	env . case_fold_flag		1187879	0					
ANR	1187913	Identifier	env		1187879	0					
ANR	1187914	Identifier	case_fold_flag		1187879	1					
ANR	1187915	PtrMemberAccess	reg -> case_fold_flag		1187879	1					
ANR	1187916	Identifier	reg		1187879	0					
ANR	1187917	Identifier	case_fold_flag		1187879	1					
ANR	1187918	ExpressionStatement	env . scan_env = scan_env	4967:2:112093:112118	1187879	6	True				
ANR	1187919	AssignmentExpression	env . scan_env = scan_env		1187879	0		=			
ANR	1187920	MemberAccess	env . scan_env		1187879	0					
ANR	1187921	Identifier	env		1187879	0					
ANR	1187922	Identifier	scan_env		1187879	1					
ANR	1187923	Identifier	scan_env		1187879	1					
ANR	1187924	ExpressionStatement	clear_mml ( & env . mmd )	4968:2:112122:112141	1187879	7	True				
ANR	1187925	CallExpression	clear_mml ( & env . mmd )		1187879	0					
ANR	1187926	Callee	clear_mml		1187879	0					
ANR	1187927	Identifier	clear_mml		1187879	0					
ANR	1187928	ArgumentList	& env . mmd		1187879	1					
ANR	1187929	Argument	& env . mmd		1187879	0					
ANR	1187930	UnaryOperationExpression	& env . mmd		1187879	0					
ANR	1187931	UnaryOperator	&		1187879	0					
ANR	1187932	MemberAccess	env . mmd		1187879	1					
ANR	1187933	Identifier	env		1187879	0					
ANR	1187934	Identifier	mmd		1187879	1					
ANR	1187935	ExpressionStatement	"r = optimize_node_left ( node , & opt , & env )"	4970:2:112146:112186	1187879	8	True				
ANR	1187936	AssignmentExpression	"r = optimize_node_left ( node , & opt , & env )"		1187879	0		=			
ANR	1187937	Identifier	r		1187879	0					
ANR	1187938	CallExpression	"optimize_node_left ( node , & opt , & env )"		1187879	1					
ANR	1187939	Callee	optimize_node_left		1187879	0					
ANR	1187940	Identifier	optimize_node_left		1187879	0					
ANR	1187941	ArgumentList	node		1187879	1					
ANR	1187942	Argument	node		1187879	0					
ANR	1187943	Identifier	node		1187879	0					
ANR	1187944	Argument	& opt		1187879	1					
ANR	1187945	UnaryOperationExpression	& opt		1187879	0					
ANR	1187946	UnaryOperator	&		1187879	0					
ANR	1187947	Identifier	opt		1187879	1					
ANR	1187948	Argument	& env		1187879	2					
ANR	1187949	UnaryOperationExpression	& env		1187879	0					
ANR	1187950	UnaryOperator	&		1187879	0					
ANR	1187951	Identifier	env		1187879	1					
ANR	1187952	IfStatement	if ( r )		1187879	9					
ANR	1187953	Condition	r	4971:6:112194:112194	1187879	0	True				
ANR	1187954	Identifier	r		1187879	0					
ANR	1187955	ReturnStatement	return r ;	4971:9:112197:112205	1187879	1	True				
ANR	1187956	Identifier	r		1187879	0					
ANR	1187957	ExpressionStatement	reg -> anchor = opt . anc . left_anchor & ( ANCHOR_BEGIN_BUF | ANCHOR_BEGIN_POSITION | ANCHOR_ANYCHAR_STAR | ANCHOR_ANYCHAR_STAR_ML )	4973:2:112210:112343	1187879	10	True				
ANR	1187958	AssignmentExpression	reg -> anchor = opt . anc . left_anchor & ( ANCHOR_BEGIN_BUF | ANCHOR_BEGIN_POSITION | ANCHOR_ANYCHAR_STAR | ANCHOR_ANYCHAR_STAR_ML )		1187879	0		=			
ANR	1187959	PtrMemberAccess	reg -> anchor		1187879	0					
ANR	1187960	Identifier	reg		1187879	0					
ANR	1187961	Identifier	anchor		1187879	1					
ANR	1187962	BitAndExpression	opt . anc . left_anchor & ( ANCHOR_BEGIN_BUF | ANCHOR_BEGIN_POSITION | ANCHOR_ANYCHAR_STAR | ANCHOR_ANYCHAR_STAR_ML )		1187879	1		&			
ANR	1187963	MemberAccess	opt . anc . left_anchor		1187879	0					
ANR	1187964	MemberAccess	opt . anc		1187879	0					
ANR	1187965	Identifier	opt		1187879	0					
ANR	1187966	Identifier	anc		1187879	1					
ANR	1187967	Identifier	left_anchor		1187879	1					
ANR	1187968	InclusiveOrExpression	ANCHOR_BEGIN_BUF | ANCHOR_BEGIN_POSITION | ANCHOR_ANYCHAR_STAR | ANCHOR_ANYCHAR_STAR_ML		1187879	1		|			
ANR	1187969	Identifier	ANCHOR_BEGIN_BUF		1187879	0					
ANR	1187970	InclusiveOrExpression	ANCHOR_BEGIN_POSITION | ANCHOR_ANYCHAR_STAR | ANCHOR_ANYCHAR_STAR_ML		1187879	1		|			
ANR	1187971	Identifier	ANCHOR_BEGIN_POSITION		1187879	0					
ANR	1187972	InclusiveOrExpression	ANCHOR_ANYCHAR_STAR | ANCHOR_ANYCHAR_STAR_ML		1187879	1		|			
ANR	1187973	Identifier	ANCHOR_ANYCHAR_STAR		1187879	0					
ANR	1187974	Identifier	ANCHOR_ANYCHAR_STAR_ML		1187879	1					
ANR	1187975	ExpressionStatement	reg -> anchor |= opt . anc . right_anchor & ( ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF )	4976:2:112348:112424	1187879	11	True				
ANR	1187976	AssignmentExpression	reg -> anchor |= opt . anc . right_anchor & ( ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF )		1187879	0		|=			
ANR	1187977	PtrMemberAccess	reg -> anchor		1187879	0					
ANR	1187978	Identifier	reg		1187879	0					
ANR	1187979	Identifier	anchor		1187879	1					
ANR	1187980	BitAndExpression	opt . anc . right_anchor & ( ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF )		1187879	1		&			
ANR	1187981	MemberAccess	opt . anc . right_anchor		1187879	0					
ANR	1187982	MemberAccess	opt . anc		1187879	0					
ANR	1187983	Identifier	opt		1187879	0					
ANR	1187984	Identifier	anc		1187879	1					
ANR	1187985	Identifier	right_anchor		1187879	1					
ANR	1187986	InclusiveOrExpression	ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF		1187879	1		|			
ANR	1187987	Identifier	ANCHOR_END_BUF		1187879	0					
ANR	1187988	Identifier	ANCHOR_SEMI_END_BUF		1187879	1					
ANR	1187989	IfStatement	if ( reg -> anchor & ( ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF ) )		1187879	12					
ANR	1187990	Condition	reg -> anchor & ( ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF )	4978:6:112433:112484	1187879	0	True				
ANR	1187991	BitAndExpression	reg -> anchor & ( ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF )		1187879	0		&			
ANR	1187992	PtrMemberAccess	reg -> anchor		1187879	0					
ANR	1187993	Identifier	reg		1187879	0					
ANR	1187994	Identifier	anchor		1187879	1					
ANR	1187995	InclusiveOrExpression	ANCHOR_END_BUF | ANCHOR_SEMI_END_BUF		1187879	1		|			
ANR	1187996	Identifier	ANCHOR_END_BUF		1187879	0					
ANR	1187997	Identifier	ANCHOR_SEMI_END_BUF		1187879	1					
ANR	1187998	CompoundStatement		21:60:555:555	1187879	1					
ANR	1187999	ExpressionStatement	reg -> anchor_dmin = opt . len . min	4979:4:112493:112523	1187879	0	True				
ANR	1188000	AssignmentExpression	reg -> anchor_dmin = opt . len . min		1187879	0		=			
ANR	1188001	PtrMemberAccess	reg -> anchor_dmin		1187879	0					
ANR	1188002	Identifier	reg		1187879	0					
ANR	1188003	Identifier	anchor_dmin		1187879	1					
ANR	1188004	MemberAccess	opt . len . min		1187879	1					
ANR	1188005	MemberAccess	opt . len		1187879	0					
ANR	1188006	Identifier	opt		1187879	0					
ANR	1188007	Identifier	len		1187879	1					
ANR	1188008	Identifier	min		1187879	1					
ANR	1188009	ExpressionStatement	reg -> anchor_dmax = opt . len . max	4980:4:112529:112559	1187879	1	True				
ANR	1188010	AssignmentExpression	reg -> anchor_dmax = opt . len . max		1187879	0		=			
ANR	1188011	PtrMemberAccess	reg -> anchor_dmax		1187879	0					
ANR	1188012	Identifier	reg		1187879	0					
ANR	1188013	Identifier	anchor_dmax		1187879	1					
ANR	1188014	MemberAccess	opt . len . max		1187879	1					
ANR	1188015	MemberAccess	opt . len		1187879	0					
ANR	1188016	Identifier	opt		1187879	0					
ANR	1188017	Identifier	len		1187879	1					
ANR	1188018	Identifier	max		1187879	1					
ANR	1188019	IfStatement	if ( opt . exb . len > 0 || opt . exm . len > 0 )		1187879	13					
ANR	1188020	Condition	opt . exb . len > 0 || opt . exm . len > 0	4983:6:112572:112605	1187879	0	True				
ANR	1188021	OrExpression	opt . exb . len > 0 || opt . exm . len > 0		1187879	0		||			
ANR	1188022	RelationalExpression	opt . exb . len > 0		1187879	0		>			
ANR	1188023	MemberAccess	opt . exb . len		1187879	0					
ANR	1188024	MemberAccess	opt . exb		1187879	0					
ANR	1188025	Identifier	opt		1187879	0					
ANR	1188026	Identifier	exb		1187879	1					
ANR	1188027	Identifier	len		1187879	1					
ANR	1188028	PrimaryExpression	0		1187879	1					
ANR	1188029	RelationalExpression	opt . exm . len > 0		1187879	1		>			
ANR	1188030	MemberAccess	opt . exm . len		1187879	0					
ANR	1188031	MemberAccess	opt . exm		1187879	0					
ANR	1188032	Identifier	opt		1187879	0					
ANR	1188033	Identifier	exm		1187879	1					
ANR	1188034	Identifier	len		1187879	1					
ANR	1188035	PrimaryExpression	0		1187879	1					
ANR	1188036	CompoundStatement		26:42:676:676	1187879	1					
ANR	1188037	ExpressionStatement	"select_opt_exact_info ( reg -> enc , & opt . exb , & opt . exm )"	4984:4:112614:112665	1187879	0	True				
ANR	1188038	CallExpression	"select_opt_exact_info ( reg -> enc , & opt . exb , & opt . exm )"		1187879	0					
ANR	1188039	Callee	select_opt_exact_info		1187879	0					
ANR	1188040	Identifier	select_opt_exact_info		1187879	0					
ANR	1188041	ArgumentList	reg -> enc		1187879	1					
ANR	1188042	Argument	reg -> enc		1187879	0					
ANR	1188043	PtrMemberAccess	reg -> enc		1187879	0					
ANR	1188044	Identifier	reg		1187879	0					
ANR	1188045	Identifier	enc		1187879	1					
ANR	1188046	Argument	& opt . exb		1187879	1					
ANR	1188047	UnaryOperationExpression	& opt . exb		1187879	0					
ANR	1188048	UnaryOperator	&		1187879	0					
ANR	1188049	MemberAccess	opt . exb		1187879	1					
ANR	1188050	Identifier	opt		1187879	0					
ANR	1188051	Identifier	exb		1187879	1					
ANR	1188052	Argument	& opt . exm		1187879	2					
ANR	1188053	UnaryOperationExpression	& opt . exm		1187879	0					
ANR	1188054	UnaryOperator	&		1187879	0					
ANR	1188055	MemberAccess	opt . exm		1187879	1					
ANR	1188056	Identifier	opt		1187879	0					
ANR	1188057	Identifier	exm		1187879	1					
ANR	1188058	IfStatement	"if ( opt . map . value > 0 && comp_opt_exact_or_map_info ( & opt . exb , & opt . map ) > 0 )"		1187879	1					
ANR	1188059	Condition	"opt . map . value > 0 && comp_opt_exact_or_map_info ( & opt . exb , & opt . map ) > 0"	4985:8:112675:112746	1187879	0	True				
ANR	1188060	AndExpression	"opt . map . value > 0 && comp_opt_exact_or_map_info ( & opt . exb , & opt . map ) > 0"		1187879	0		&&			
ANR	1188061	RelationalExpression	opt . map . value > 0		1187879	0		>			
ANR	1188062	MemberAccess	opt . map . value		1187879	0					
ANR	1188063	MemberAccess	opt . map		1187879	0					
ANR	1188064	Identifier	opt		1187879	0					
ANR	1188065	Identifier	map		1187879	1					
ANR	1188066	Identifier	value		1187879	1					
ANR	1188067	PrimaryExpression	0		1187879	1					
ANR	1188068	RelationalExpression	"comp_opt_exact_or_map_info ( & opt . exb , & opt . map ) > 0"		1187879	1		>			
ANR	1188069	CallExpression	"comp_opt_exact_or_map_info ( & opt . exb , & opt . map )"		1187879	0					
ANR	1188070	Callee	comp_opt_exact_or_map_info		1187879	0					
ANR	1188071	Identifier	comp_opt_exact_or_map_info		1187879	0					
ANR	1188072	ArgumentList	& opt . exb		1187879	1					
ANR	1188073	Argument	& opt . exb		1187879	0					
ANR	1188074	UnaryOperationExpression	& opt . exb		1187879	0					
ANR	1188075	UnaryOperator	&		1187879	0					
ANR	1188076	MemberAccess	opt . exb		1187879	1					
ANR	1188077	Identifier	opt		1187879	0					
ANR	1188078	Identifier	exb		1187879	1					
ANR	1188079	Argument	& opt . map		1187879	1					
ANR	1188080	UnaryOperationExpression	& opt . map		1187879	0					
ANR	1188081	UnaryOperator	&		1187879	0					
ANR	1188082	MemberAccess	opt . map		1187879	1					
ANR	1188083	Identifier	opt		1187879	0					
ANR	1188084	Identifier	map		1187879	1					
ANR	1188085	PrimaryExpression	0		1187879	1					
ANR	1188086	CompoundStatement		29:53:817:817	1187879	1					
ANR	1188087	GotoStatement	goto set_map ;	4987:6:112757:112769	1187879	0	True				
ANR	1188088	Identifier	set_map		1187879	0					
ANR	1188089	ElseStatement	else		1187879	0					
ANR	1188090	CompoundStatement		32:9:854:854	1187879	0					
ANR	1188091	ExpressionStatement	"r = set_optimize_exact_info ( reg , & opt . exb )"	4990:6:112794:112836	1187879	0	True				
ANR	1188092	AssignmentExpression	"r = set_optimize_exact_info ( reg , & opt . exb )"		1187879	0		=			
ANR	1188093	Identifier	r		1187879	0					
ANR	1188094	CallExpression	"set_optimize_exact_info ( reg , & opt . exb )"		1187879	1					
ANR	1188095	Callee	set_optimize_exact_info		1187879	0					
ANR	1188096	Identifier	set_optimize_exact_info		1187879	0					
ANR	1188097	ArgumentList	reg		1187879	1					
ANR	1188098	Argument	reg		1187879	0					
ANR	1188099	Identifier	reg		1187879	0					
ANR	1188100	Argument	& opt . exb		1187879	1					
ANR	1188101	UnaryOperationExpression	& opt . exb		1187879	0					
ANR	1188102	UnaryOperator	&		1187879	0					
ANR	1188103	MemberAccess	opt . exb		1187879	1					
ANR	1188104	Identifier	opt		1187879	0					
ANR	1188105	Identifier	exb		1187879	1					
ANR	1188106	ExpressionStatement	"set_sub_anchor ( reg , & opt . exb . anc )"	4991:6:112844:112877	1187879	1	True				
ANR	1188107	CallExpression	"set_sub_anchor ( reg , & opt . exb . anc )"		1187879	0					
ANR	1188108	Callee	set_sub_anchor		1187879	0					
ANR	1188109	Identifier	set_sub_anchor		1187879	0					
ANR	1188110	ArgumentList	reg		1187879	1					
ANR	1188111	Argument	reg		1187879	0					
ANR	1188112	Identifier	reg		1187879	0					
ANR	1188113	Argument	& opt . exb . anc		1187879	1					
ANR	1188114	UnaryOperationExpression	& opt . exb . anc		1187879	0					
ANR	1188115	UnaryOperator	&		1187879	0					
ANR	1188116	MemberAccess	opt . exb . anc		1187879	1					
ANR	1188117	MemberAccess	opt . exb		1187879	0					
ANR	1188118	Identifier	opt		1187879	0					
ANR	1188119	Identifier	exb		1187879	1					
ANR	1188120	Identifier	anc		1187879	1					
ANR	1188121	ElseStatement	else		1187879	0					
ANR	1188122	IfStatement	if ( opt . map . value > 0 )		1187879	0					
ANR	1188123	Condition	opt . map . value > 0	4994:11:112900:112916	1187879	0	True				
ANR	1188124	RelationalExpression	opt . map . value > 0		1187879	0		>			
ANR	1188125	MemberAccess	opt . map . value		1187879	0					
ANR	1188126	MemberAccess	opt . map		1187879	0					
ANR	1188127	Identifier	opt		1187879	0					
ANR	1188128	Identifier	map		1187879	1					
ANR	1188129	Identifier	value		1187879	1					
ANR	1188130	PrimaryExpression	0		1187879	1					
ANR	1188131	CompoundStatement		37:30:987:987	1187879	1					
ANR	1188132	Label	set_map :	4995:2:112923:112930	1187879	0	True				
ANR	1188133	Identifier	set_map		1187879	0					
ANR	1188134	ExpressionStatement	"set_optimize_map_info ( reg , & opt . map )"	4996:4:112936:112972	1187879	1	True				
ANR	1188135	CallExpression	"set_optimize_map_info ( reg , & opt . map )"		1187879	0					
ANR	1188136	Callee	set_optimize_map_info		1187879	0					
ANR	1188137	Identifier	set_optimize_map_info		1187879	0					
ANR	1188138	ArgumentList	reg		1187879	1					
ANR	1188139	Argument	reg		1187879	0					
ANR	1188140	Identifier	reg		1187879	0					
ANR	1188141	Argument	& opt . map		1187879	1					
ANR	1188142	UnaryOperationExpression	& opt . map		1187879	0					
ANR	1188143	UnaryOperator	&		1187879	0					
ANR	1188144	MemberAccess	opt . map		1187879	1					
ANR	1188145	Identifier	opt		1187879	0					
ANR	1188146	Identifier	map		1187879	1					
ANR	1188147	ExpressionStatement	"set_sub_anchor ( reg , & opt . map . anc )"	4997:4:112978:113011	1187879	2	True				
ANR	1188148	CallExpression	"set_sub_anchor ( reg , & opt . map . anc )"		1187879	0					
ANR	1188149	Callee	set_sub_anchor		1187879	0					
ANR	1188150	Identifier	set_sub_anchor		1187879	0					
ANR	1188151	ArgumentList	reg		1187879	1					
ANR	1188152	Argument	reg		1187879	0					
ANR	1188153	Identifier	reg		1187879	0					
ANR	1188154	Argument	& opt . map . anc		1187879	1					
ANR	1188155	UnaryOperationExpression	& opt . map . anc		1187879	0					
ANR	1188156	UnaryOperator	&		1187879	0					
ANR	1188157	MemberAccess	opt . map . anc		1187879	1					
ANR	1188158	MemberAccess	opt . map		1187879	0					
ANR	1188159	Identifier	opt		1187879	0					
ANR	1188160	Identifier	map		1187879	1					
ANR	1188161	Identifier	anc		1187879	1					
ANR	1188162	ElseStatement	else		1187879	0					
ANR	1188163	CompoundStatement		42:7:1092:1092	1187879	0					
ANR	1188164	ExpressionStatement	reg -> sub_anchor |= opt . anc . left_anchor & ANCHOR_BEGIN_LINE	5000:4:113030:113088	1187879	0	True				
ANR	1188165	AssignmentExpression	reg -> sub_anchor |= opt . anc . left_anchor & ANCHOR_BEGIN_LINE		1187879	0		|=			
ANR	1188166	PtrMemberAccess	reg -> sub_anchor		1187879	0					
ANR	1188167	Identifier	reg		1187879	0					
ANR	1188168	Identifier	sub_anchor		1187879	1					
ANR	1188169	BitAndExpression	opt . anc . left_anchor & ANCHOR_BEGIN_LINE		1187879	1		&			
ANR	1188170	MemberAccess	opt . anc . left_anchor		1187879	0					
ANR	1188171	MemberAccess	opt . anc		1187879	0					
ANR	1188172	Identifier	opt		1187879	0					
ANR	1188173	Identifier	anc		1187879	1					
ANR	1188174	Identifier	left_anchor		1187879	1					
ANR	1188175	Identifier	ANCHOR_BEGIN_LINE		1187879	1					
ANR	1188176	IfStatement	if ( opt . len . max == 0 )		1187879	1					
ANR	1188177	Condition	opt . len . max == 0	5001:8:113098:113113	1187879	0	True				
ANR	1188178	EqualityExpression	opt . len . max == 0		1187879	0		==			
ANR	1188179	MemberAccess	opt . len . max		1187879	0					
ANR	1188180	MemberAccess	opt . len		1187879	0					
ANR	1188181	Identifier	opt		1187879	0					
ANR	1188182	Identifier	len		1187879	1					
ANR	1188183	Identifier	max		1187879	1					
ANR	1188184	PrimaryExpression	0		1187879	1					
ANR	1188185	ExpressionStatement	reg -> sub_anchor |= opt . anc . right_anchor & ANCHOR_END_LINE	5002:6:113122:113179	1187879	1	True				
ANR	1188186	AssignmentExpression	reg -> sub_anchor |= opt . anc . right_anchor & ANCHOR_END_LINE		1187879	0		|=			
ANR	1188187	PtrMemberAccess	reg -> sub_anchor		1187879	0					
ANR	1188188	Identifier	reg		1187879	0					
ANR	1188189	Identifier	sub_anchor		1187879	1					
ANR	1188190	BitAndExpression	opt . anc . right_anchor & ANCHOR_END_LINE		1187879	1		&			
ANR	1188191	MemberAccess	opt . anc . right_anchor		1187879	0					
ANR	1188192	MemberAccess	opt . anc		1187879	0					
ANR	1188193	Identifier	opt		1187879	0					
ANR	1188194	Identifier	anc		1187879	1					
ANR	1188195	Identifier	right_anchor		1187879	1					
ANR	1188196	Identifier	ANCHOR_END_LINE		1187879	1					
ANR	1188197	ExpressionStatement	"print_optimize_info ( stderr , reg )"	5006:2:113249:113281	1187879	14	True				
ANR	1188198	CallExpression	"print_optimize_info ( stderr , reg )"		1187879	0					
ANR	1188199	Callee	print_optimize_info		1187879	0					
ANR	1188200	Identifier	print_optimize_info		1187879	0					
ANR	1188201	ArgumentList	stderr		1187879	1					
ANR	1188202	Argument	stderr		1187879	0					
ANR	1188203	Identifier	stderr		1187879	0					
ANR	1188204	Argument	reg		1187879	1					
ANR	1188205	Identifier	reg		1187879	0					
ANR	1188206	ReturnStatement	return r ;	5008:2:113292:113300	1187879	15	True				
ANR	1188207	Identifier	r		1187879	0					
ANR	1188208	ReturnType	static int		1187879	1					
ANR	1188209	Identifier	set_optimize_info_from_tree		1187879	2					
ANR	1188210	ParameterList	"Node * node , regex_t * reg , ScanEnv * scan_env"		1187879	3					
ANR	1188211	Parameter	Node * node	4957:28:111886:111895	1187879	0	True				
ANR	1188212	ParameterType	Node *		1187879	0					
ANR	1188213	Identifier	node		1187879	1					
ANR	1188214	Parameter	regex_t * reg	4957:40:111898:111909	1187879	1	True				
ANR	1188215	ParameterType	regex_t *		1187879	0					
ANR	1188216	Identifier	reg		1187879	1					
ANR	1188217	Parameter	ScanEnv * scan_env	4957:54:111912:111928	1187879	2	True				
ANR	1188218	ParameterType	ScanEnv *		1187879	0					
ANR	1188219	Identifier	scan_env		1187879	1					
ANR	1188220	CFGEntryNode	ENTRY		1187879		True				
ANR	1188221	CFGExitNode	EXIT		1187879		True				
ANR	1188222	Symbol	ANCHOR_END_BUF		1187879						
ANR	1188223	Symbol	opt . anc		1187879						
ANR	1188224	Symbol	env . scan_env		1187879						
ANR	1188225	Symbol	ANCHOR_END_LINE		1187879						
ANR	1188226	Symbol	opt . map		1187879						
ANR	1188227	Symbol	opt . len . max		1187879						
ANR	1188228	Symbol	reg		1187879						
ANR	1188229	Symbol	reg -> anchor_dmax		1187879						
ANR	1188230	Symbol	& opt . map		1187879						
ANR	1188231	Symbol	reg -> options		1187879						
ANR	1188232	Symbol	opt . exb . len		1187879						
ANR	1188233	Symbol	& opt . map . anc		1187879						
ANR	1188234	Symbol	& opt		1187879						
ANR	1188235	Symbol	& opt . exb		1187879						
ANR	1188236	Symbol	ANCHOR_BEGIN_POSITION		1187879						
ANR	1188237	Symbol	reg -> anchor_dmin		1187879						
ANR	1188238	Symbol	stderr		1187879						
ANR	1188239	Symbol	env . options		1187879						
ANR	1188240	Symbol	reg -> enc		1187879						
ANR	1188241	Symbol	node		1187879						
ANR	1188242	Symbol	opt		1187879						
ANR	1188243	Symbol	opt . anc . right_anchor		1187879						
ANR	1188244	Symbol	ANCHOR_BEGIN_LINE		1187879						
ANR	1188245	Symbol	opt . len		1187879						
ANR	1188246	Symbol	ANCHOR_SEMI_END_BUF		1187879						
ANR	1188247	Symbol	reg -> anchor		1187879						
ANR	1188248	Symbol	ANCHOR_BEGIN_BUF		1187879						
ANR	1188249	Symbol	opt . exb		1187879						
ANR	1188250	Symbol	set_optimize_exact_info		1187879						
ANR	1188251	Symbol	opt . exm		1187879						
ANR	1188252	Symbol	& env . mmd		1187879						
ANR	1188253	Symbol	opt . map . value		1187879						
ANR	1188254	Symbol	& env		1187879						
ANR	1188255	Symbol	env . case_fold_flag		1187879						
ANR	1188256	Symbol	reg -> sub_anchor		1187879						
ANR	1188257	Symbol	& opt . exm		1187879						
ANR	1188258	Symbol	scan_env		1187879						
ANR	1188259	Symbol	& opt . exb . anc		1187879						
ANR	1188260	Symbol	ANCHOR_ANYCHAR_STAR_ML		1187879						
ANR	1188261	Symbol	comp_opt_exact_or_map_info		1187879						
ANR	1188262	Symbol	env . enc		1187879						
ANR	1188263	Symbol	opt . anc . left_anchor		1187879						
ANR	1188264	Symbol	env		1187879						
ANR	1188265	Symbol	opt . len . min		1187879						
ANR	1188266	Symbol	r		1187879						
ANR	1188267	Symbol	opt . exm . len		1187879						
ANR	1188268	Symbol	optimize_node_left		1187879						
ANR	1188269	Symbol	reg -> case_fold_flag		1187879						
ANR	1188270	Symbol	ANCHOR_ANYCHAR_STAR		1187879						
ANR	1188271	Symbol	* reg		1187879						
ANR	1188272	Function	clear_optimize_info	5011:0:113305:113656							
ANR	1188273	FunctionDef	clear_optimize_info (regex_t * reg)		1188272	0					
ANR	1188274	CompoundStatement		5013:0:113351:113656	1188272	0					
ANR	1188275	ExpressionStatement	reg -> optimize = ONIG_OPTIMIZE_NONE	5014:2:113355:113394	1188272	0	True				
ANR	1188276	AssignmentExpression	reg -> optimize = ONIG_OPTIMIZE_NONE		1188272	0		=			
ANR	1188277	PtrMemberAccess	reg -> optimize		1188272	0					
ANR	1188278	Identifier	reg		1188272	0					
ANR	1188279	Identifier	optimize		1188272	1					
ANR	1188280	Identifier	ONIG_OPTIMIZE_NONE		1188272	1					
ANR	1188281	ExpressionStatement	reg -> anchor = 0	5015:2:113398:113420	1188272	1	True				
ANR	1188282	AssignmentExpression	reg -> anchor = 0		1188272	0		=			
ANR	1188283	PtrMemberAccess	reg -> anchor		1188272	0					
ANR	1188284	Identifier	reg		1188272	0					
ANR	1188285	Identifier	anchor		1188272	1					
ANR	1188286	PrimaryExpression	0		1188272	1					
ANR	1188287	ExpressionStatement	reg -> anchor_dmin = 0	5016:2:113424:113446	1188272	2	True				
ANR	1188288	AssignmentExpression	reg -> anchor_dmin = 0		1188272	0		=			
ANR	1188289	PtrMemberAccess	reg -> anchor_dmin		1188272	0					
ANR	1188290	Identifier	reg		1188272	0					
ANR	1188291	Identifier	anchor_dmin		1188272	1					
ANR	1188292	PrimaryExpression	0		1188272	1					
ANR	1188293	ExpressionStatement	reg -> anchor_dmax = 0	5017:2:113450:113472	1188272	3	True				
ANR	1188294	AssignmentExpression	reg -> anchor_dmax = 0		1188272	0		=			
ANR	1188295	PtrMemberAccess	reg -> anchor_dmax		1188272	0					
ANR	1188296	Identifier	reg		1188272	0					
ANR	1188297	Identifier	anchor_dmax		1188272	1					
ANR	1188298	PrimaryExpression	0		1188272	1					
ANR	1188299	ExpressionStatement	reg -> sub_anchor = 0	5018:2:113476:113498	1188272	4	True				
ANR	1188300	AssignmentExpression	reg -> sub_anchor = 0		1188272	0		=			
ANR	1188301	PtrMemberAccess	reg -> sub_anchor		1188272	0					
ANR	1188302	Identifier	reg		1188272	0					
ANR	1188303	Identifier	sub_anchor		1188272	1					
ANR	1188304	PrimaryExpression	0		1188272	1					
ANR	1188305	ExpressionStatement	reg -> exact_end = ( UChar * ) NULL	5019:2:113502:113536	1188272	5	True				
ANR	1188306	AssignmentExpression	reg -> exact_end = ( UChar * ) NULL		1188272	0		=			
ANR	1188307	PtrMemberAccess	reg -> exact_end		1188272	0					
ANR	1188308	Identifier	reg		1188272	0					
ANR	1188309	Identifier	exact_end		1188272	1					
ANR	1188310	CastExpression	( UChar * ) NULL		1188272	1					
ANR	1188311	CastTarget	UChar *		1188272	0					
ANR	1188312	Identifier	NULL		1188272	1					
ANR	1188313	ExpressionStatement	reg -> threshold_len = 0	5020:2:113540:113562	1188272	6	True				
ANR	1188314	AssignmentExpression	reg -> threshold_len = 0		1188272	0		=			
ANR	1188315	PtrMemberAccess	reg -> threshold_len		1188272	0					
ANR	1188316	Identifier	reg		1188272	0					
ANR	1188317	Identifier	threshold_len		1188272	1					
ANR	1188318	PrimaryExpression	0		1188272	1					
ANR	1188319	IfStatement	if ( IS_NOT_NULL ( reg -> exact ) )		1188272	7					
ANR	1188320	Condition	IS_NOT_NULL ( reg -> exact )	5021:6:113570:113592	1188272	0	True				
ANR	1188321	CallExpression	IS_NOT_NULL ( reg -> exact )		1188272	0					
ANR	1188322	Callee	IS_NOT_NULL		1188272	0					
ANR	1188323	Identifier	IS_NOT_NULL		1188272	0					
ANR	1188324	ArgumentList	reg -> exact		1188272	1					
ANR	1188325	Argument	reg -> exact		1188272	0					
ANR	1188326	PtrMemberAccess	reg -> exact		1188272	0					
ANR	1188327	Identifier	reg		1188272	0					
ANR	1188328	Identifier	exact		1188272	1					
ANR	1188329	CompoundStatement		9:31:243:243	1188272	1					
ANR	1188330	ExpressionStatement	xfree ( reg -> exact )	5022:4:113601:113618	1188272	0	True				
ANR	1188331	CallExpression	xfree ( reg -> exact )		1188272	0					
ANR	1188332	Callee	xfree		1188272	0					
ANR	1188333	Identifier	xfree		1188272	0					
ANR	1188334	ArgumentList	reg -> exact		1188272	1					
ANR	1188335	Argument	reg -> exact		1188272	0					
ANR	1188336	PtrMemberAccess	reg -> exact		1188272	0					
ANR	1188337	Identifier	reg		1188272	0					
ANR	1188338	Identifier	exact		1188272	1					
ANR	1188339	ExpressionStatement	reg -> exact = ( UChar * ) NULL	5023:4:113624:113650	1188272	1	True				
ANR	1188340	AssignmentExpression	reg -> exact = ( UChar * ) NULL		1188272	0		=			
ANR	1188341	PtrMemberAccess	reg -> exact		1188272	0					
ANR	1188342	Identifier	reg		1188272	0					
ANR	1188343	Identifier	exact		1188272	1					
ANR	1188344	CastExpression	( UChar * ) NULL		1188272	1					
ANR	1188345	CastTarget	UChar *		1188272	0					
ANR	1188346	Identifier	NULL		1188272	1					
ANR	1188347	ReturnType	static void		1188272	1					
ANR	1188348	Identifier	clear_optimize_info		1188272	2					
ANR	1188349	ParameterList	regex_t * reg		1188272	3					
ANR	1188350	Parameter	regex_t * reg	5012:20:113337:113348	1188272	0	True				
ANR	1188351	ParameterType	regex_t *		1188272	0					
ANR	1188352	Identifier	reg		1188272	1					
ANR	1188353	CFGEntryNode	ENTRY		1188272		True				
ANR	1188354	CFGExitNode	EXIT		1188272		True				
ANR	1188355	Symbol	IS_NOT_NULL		1188272						
ANR	1188356	Symbol	reg -> anchor		1188272						
ANR	1188357	Symbol	NULL		1188272						
ANR	1188358	Symbol	reg -> anchor_dmin		1188272						
ANR	1188359	Symbol	reg -> threshold_len		1188272						
ANR	1188360	Symbol	reg -> exact_end		1188272						
ANR	1188361	Symbol	reg		1188272						
ANR	1188362	Symbol	reg -> anchor_dmax		1188272						
ANR	1188363	Symbol	reg -> optimize		1188272						
ANR	1188364	Symbol	reg -> sub_anchor		1188272						
ANR	1188365	Symbol	reg -> exact		1188272						
ANR	1188366	Symbol	ONIG_OPTIMIZE_NONE		1188272						
ANR	1188367	Symbol	* reg		1188272						
ANR	1188368	Function	print_enc_string	5029:0:113678:114230							
ANR	1188369	FunctionDef	"print_enc_string (FILE * fp , OnigEncoding enc , const UChar * s , const UChar * end)"		1188368	0					
ANR	1188370	CompoundStatement		5031:0:113777:114230	1188368	0					
ANR	1188371	ExpressionStatement	"fprintf ( fp , ""\\nPATTERN: /"" )"	5032:2:113781:113808	1188368	0	True				
ANR	1188372	CallExpression	"fprintf ( fp , ""\\nPATTERN: /"" )"		1188368	0					
ANR	1188373	Callee	fprintf		1188368	0					
ANR	1188374	Identifier	fprintf		1188368	0					
ANR	1188375	ArgumentList	fp		1188368	1					
ANR	1188376	Argument	fp		1188368	0					
ANR	1188377	Identifier	fp		1188368	0					
ANR	1188378	Argument	"""\\nPATTERN: /"""		1188368	1					
ANR	1188379	PrimaryExpression	"""\\nPATTERN: /"""		1188368	0					
ANR	1188380	IfStatement	if ( ONIGENC_MBC_MINLEN ( enc ) > 1 )		1188368	1					
ANR	1188381	Condition	ONIGENC_MBC_MINLEN ( enc ) > 1	5034:6:113817:113843	1188368	0	True				
ANR	1188382	RelationalExpression	ONIGENC_MBC_MINLEN ( enc ) > 1		1188368	0		>			
ANR	1188383	CallExpression	ONIGENC_MBC_MINLEN ( enc )		1188368	0					
ANR	1188384	Callee	ONIGENC_MBC_MINLEN		1188368	0					
ANR	1188385	Identifier	ONIGENC_MBC_MINLEN		1188368	0					
ANR	1188386	ArgumentList	enc		1188368	1					
ANR	1188387	Argument	enc		1188368	0					
ANR	1188388	Identifier	enc		1188368	0					
ANR	1188389	PrimaryExpression	1		1188368	1					
ANR	1188390	CompoundStatement		6:4:94:112	1188368	1					
ANR	1188391	IdentifierDeclStatement	const UChar * p ;	5035:4:113852:113866	1188368	0	True				
ANR	1188392	IdentifierDecl	* p		1188368	0					
ANR	1188393	IdentifierDeclType	const UChar *		1188368	0					
ANR	1188394	Identifier	p		1188368	1					
ANR	1188395	IdentifierDeclStatement	OnigCodePoint code ;	5036:4:113872:113890	1188368	1	True				
ANR	1188396	IdentifierDecl	code		1188368	0					
ANR	1188397	IdentifierDeclType	OnigCodePoint		1188368	0					
ANR	1188398	Identifier	code		1188368	1					
ANR	1188399	ExpressionStatement	p = s	5038:4:113897:113902	1188368	2	True				
ANR	1188400	AssignmentExpression	p = s		1188368	0		=			
ANR	1188401	Identifier	p		1188368	0					
ANR	1188402	Identifier	s		1188368	1					
ANR	1188403	WhileStatement	while ( p < end )		1188368	3					
ANR	1188404	Condition	p < end	5039:11:113915:113921	1188368	0	True				
ANR	1188405	RelationalExpression	p < end		1188368	0		<			
ANR	1188406	Identifier	p		1188368	0					
ANR	1188407	Identifier	end		1188368	1					
ANR	1188408	CompoundStatement		9:20:146:146	1188368	1					
ANR	1188409	ExpressionStatement	"code = ONIGENC_MBC_TO_CODE ( enc , p , end )"	5040:6:113932:113971	1188368	0	True				
ANR	1188410	AssignmentExpression	"code = ONIGENC_MBC_TO_CODE ( enc , p , end )"		1188368	0		=			
ANR	1188411	Identifier	code		1188368	0					
ANR	1188412	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , p , end )"		1188368	1					
ANR	1188413	Callee	ONIGENC_MBC_TO_CODE		1188368	0					
ANR	1188414	Identifier	ONIGENC_MBC_TO_CODE		1188368	0					
ANR	1188415	ArgumentList	enc		1188368	1					
ANR	1188416	Argument	enc		1188368	0					
ANR	1188417	Identifier	enc		1188368	0					
ANR	1188418	Argument	p		1188368	1					
ANR	1188419	Identifier	p		1188368	0					
ANR	1188420	Argument	end		1188368	2					
ANR	1188421	Identifier	end		1188368	0					
ANR	1188422	IfStatement	if ( code >= 0x80 )		1188368	1					
ANR	1188423	Condition	code >= 0x80	5041:10:113983:113994	1188368	0	True				
ANR	1188424	RelationalExpression	code >= 0x80		1188368	0		>=			
ANR	1188425	Identifier	code		1188368	0					
ANR	1188426	PrimaryExpression	0x80		1188368	1					
ANR	1188427	CompoundStatement		11:24:219:219	1188368	1					
ANR	1188428	ExpressionStatement	"fprintf ( fp , "" 0x%04x "" , ( int ) code )"	5042:1:114000:114035	1188368	0	True				
ANR	1188429	CallExpression	"fprintf ( fp , "" 0x%04x "" , ( int ) code )"		1188368	0					
ANR	1188430	Callee	fprintf		1188368	0					
ANR	1188431	Identifier	fprintf		1188368	0					
ANR	1188432	ArgumentList	fp		1188368	1					
ANR	1188433	Argument	fp		1188368	0					
ANR	1188434	Identifier	fp		1188368	0					
ANR	1188435	Argument	""" 0x%04x """		1188368	1					
ANR	1188436	PrimaryExpression	""" 0x%04x """		1188368	0					
ANR	1188437	Argument	( int ) code		1188368	2					
ANR	1188438	CastExpression	( int ) code		1188368	0					
ANR	1188439	CastTarget	int		1188368	0					
ANR	1188440	Identifier	code		1188368	1					
ANR	1188441	ElseStatement	else		1188368	0					
ANR	1188442	CompoundStatement		14:11:278:278	1188368	0					
ANR	1188443	ExpressionStatement	"fputc ( ( int ) code , fp )"	5045:1:114059:114080	1188368	0	True				
ANR	1188444	CallExpression	"fputc ( ( int ) code , fp )"		1188368	0					
ANR	1188445	Callee	fputc		1188368	0					
ANR	1188446	Identifier	fputc		1188368	0					
ANR	1188447	ArgumentList	( int ) code		1188368	1					
ANR	1188448	Argument	( int ) code		1188368	0					
ANR	1188449	CastExpression	( int ) code		1188368	0					
ANR	1188450	CastTarget	int		1188368	0					
ANR	1188451	Identifier	code		1188368	1					
ANR	1188452	Argument	fp		1188368	1					
ANR	1188453	Identifier	fp		1188368	0					
ANR	1188454	ExpressionStatement	"p += enclen ( enc , p )"	5048:6:114097:114116	1188368	2	True				
ANR	1188455	AssignmentExpression	"p += enclen ( enc , p )"		1188368	0		+=			
ANR	1188456	Identifier	p		1188368	0					
ANR	1188457	CallExpression	"enclen ( enc , p )"		1188368	1					
ANR	1188458	Callee	enclen		1188368	0					
ANR	1188459	Identifier	enclen		1188368	0					
ANR	1188460	ArgumentList	enc		1188368	1					
ANR	1188461	Argument	enc		1188368	0					
ANR	1188462	Identifier	enc		1188368	0					
ANR	1188463	Argument	p		1188368	1					
ANR	1188464	Identifier	p		1188368	0					
ANR	1188465	ElseStatement	else		1188368	0					
ANR	1188466	CompoundStatement		21:7:357:357	1188368	0					
ANR	1188467	WhileStatement	while ( s < end )		1188368	0					
ANR	1188468	Condition	s < end	5052:11:114148:114154	1188368	0	True				
ANR	1188469	RelationalExpression	s < end		1188368	0		<			
ANR	1188470	Identifier	s		1188368	0					
ANR	1188471	Identifier	end		1188368	1					
ANR	1188472	CompoundStatement		22:20:379:379	1188368	1					
ANR	1188473	ExpressionStatement	"fputc ( ( int ) * s , fp )"	5053:6:114165:114184	1188368	0	True				
ANR	1188474	CallExpression	"fputc ( ( int ) * s , fp )"		1188368	0					
ANR	1188475	Callee	fputc		1188368	0					
ANR	1188476	Identifier	fputc		1188368	0					
ANR	1188477	ArgumentList	( int ) * s		1188368	1					
ANR	1188478	Argument	( int ) * s		1188368	0					
ANR	1188479	CastExpression	( int ) * s		1188368	0					
ANR	1188480	CastTarget	int		1188368	0					
ANR	1188481	UnaryOperationExpression	* s		1188368	1					
ANR	1188482	UnaryOperator	*		1188368	0					
ANR	1188483	Identifier	s		1188368	1					
ANR	1188484	Argument	fp		1188368	1					
ANR	1188485	Identifier	fp		1188368	0					
ANR	1188486	ExpressionStatement	s ++	5054:6:114192:114195	1188368	1	True				
ANR	1188487	PostIncDecOperationExpression	s ++		1188368	0					
ANR	1188488	Identifier	s		1188368	0					
ANR	1188489	IncDec	++		1188368	1					
ANR	1188490	ExpressionStatement	"fprintf ( fp , ""/\\n"" )"	5058:2:114210:114228	1188368	2	True				
ANR	1188491	CallExpression	"fprintf ( fp , ""/\\n"" )"		1188368	0					
ANR	1188492	Callee	fprintf		1188368	0					
ANR	1188493	Identifier	fprintf		1188368	0					
ANR	1188494	ArgumentList	fp		1188368	1					
ANR	1188495	Argument	fp		1188368	0					
ANR	1188496	Identifier	fp		1188368	0					
ANR	1188497	Argument	"""/\\n"""		1188368	1					
ANR	1188498	PrimaryExpression	"""/\\n"""		1188368	0					
ANR	1188499	ReturnType	static void		1188368	1					
ANR	1188500	Identifier	print_enc_string		1188368	2					
ANR	1188501	ParameterList	"FILE * fp , OnigEncoding enc , const UChar * s , const UChar * end"		1188368	3					
ANR	1188502	Parameter	FILE * fp	5029:29:113707:113714	1188368	0	True				
ANR	1188503	ParameterType	FILE *		1188368	0					
ANR	1188504	Identifier	fp		1188368	1					
ANR	1188505	Parameter	OnigEncoding enc	5029:39:113717:113732	1188368	1	True				
ANR	1188506	ParameterType	OnigEncoding		1188368	0					
ANR	1188507	Identifier	enc		1188368	1					
ANR	1188508	Parameter	const UChar * s	5030:8:113743:113756	1188368	2	True				
ANR	1188509	ParameterType	const UChar *		1188368	0					
ANR	1188510	Identifier	s		1188368	1					
ANR	1188511	Parameter	const UChar * end	5030:24:113759:113774	1188368	3	True				
ANR	1188512	ParameterType	const UChar *		1188368	0					
ANR	1188513	Identifier	end		1188368	1					
ANR	1188514	CFGEntryNode	ENTRY		1188368		True				
ANR	1188515	CFGExitNode	EXIT		1188368		True				
ANR	1188516	Symbol	p		1188368						
ANR	1188517	Symbol	s		1188368						
ANR	1188518	Symbol	code		1188368						
ANR	1188519	Symbol	ONIGENC_MBC_MINLEN		1188368						
ANR	1188520	Symbol	fp		1188368						
ANR	1188521	Symbol	end		1188368						
ANR	1188522	Symbol	enc		1188368						
ANR	1188523	Symbol	enclen		1188368						
ANR	1188524	Symbol	* s		1188368						
ANR	1188525	Symbol	ONIGENC_MBC_TO_CODE		1188368						
ANR	1188526	Function	print_distance_range	5061:0:114233:114508							
ANR	1188527	FunctionDef	"print_distance_range (FILE * f , OnigDistance a , OnigDistance b)"		1188526	0					
ANR	1188528	CompoundStatement		5063:0:114307:114508	1188526	0					
ANR	1188529	IfStatement	if ( a == ONIG_INFINITE_DISTANCE )		1188526	0					
ANR	1188530	Condition	a == ONIG_INFINITE_DISTANCE	5064:6:114315:114341	1188526	0	True				
ANR	1188531	EqualityExpression	a == ONIG_INFINITE_DISTANCE		1188526	0		==			
ANR	1188532	Identifier	a		1188526	0					
ANR	1188533	Identifier	ONIG_INFINITE_DISTANCE		1188526	1					
ANR	1188534	ExpressionStatement	"fputs ( ""inf"" , f )"	5065:4:114348:114363	1188526	1	True				
ANR	1188535	CallExpression	"fputs ( ""inf"" , f )"		1188526	0					
ANR	1188536	Callee	fputs		1188526	0					
ANR	1188537	Identifier	fputs		1188526	0					
ANR	1188538	ArgumentList	"""inf"""		1188526	1					
ANR	1188539	Argument	"""inf"""		1188526	0					
ANR	1188540	PrimaryExpression	"""inf"""		1188526	0					
ANR	1188541	Argument	f		1188526	1					
ANR	1188542	Identifier	f		1188526	0					
ANR	1188543	ElseStatement	else		1188526	0					
ANR	1188544	ExpressionStatement	"fprintf ( f , ""(%u)"" , a )"	5067:4:114376:114397	1188526	0	True				
ANR	1188545	CallExpression	"fprintf ( f , ""(%u)"" , a )"		1188526	0					
ANR	1188546	Callee	fprintf		1188526	0					
ANR	1188547	Identifier	fprintf		1188526	0					
ANR	1188548	ArgumentList	f		1188526	1					
ANR	1188549	Argument	f		1188526	0					
ANR	1188550	Identifier	f		1188526	0					
ANR	1188551	Argument	"""(%u)"""		1188526	1					
ANR	1188552	PrimaryExpression	"""(%u)"""		1188526	0					
ANR	1188553	Argument	a		1188526	2					
ANR	1188554	Identifier	a		1188526	0					
ANR	1188555	ExpressionStatement	"fputs ( ""-"" , f )"	5069:2:114402:114415	1188526	1	True				
ANR	1188556	CallExpression	"fputs ( ""-"" , f )"		1188526	0					
ANR	1188557	Callee	fputs		1188526	0					
ANR	1188558	Identifier	fputs		1188526	0					
ANR	1188559	ArgumentList	"""-"""		1188526	1					
ANR	1188560	Argument	"""-"""		1188526	0					
ANR	1188561	PrimaryExpression	"""-"""		1188526	0					
ANR	1188562	Argument	f		1188526	1					
ANR	1188563	Identifier	f		1188526	0					
ANR	1188564	IfStatement	if ( b == ONIG_INFINITE_DISTANCE )		1188526	2					
ANR	1188565	Condition	b == ONIG_INFINITE_DISTANCE	5071:6:114424:114450	1188526	0	True				
ANR	1188566	EqualityExpression	b == ONIG_INFINITE_DISTANCE		1188526	0		==			
ANR	1188567	Identifier	b		1188526	0					
ANR	1188568	Identifier	ONIG_INFINITE_DISTANCE		1188526	1					
ANR	1188569	ExpressionStatement	"fputs ( ""inf"" , f )"	5072:4:114457:114472	1188526	1	True				
ANR	1188570	CallExpression	"fputs ( ""inf"" , f )"		1188526	0					
ANR	1188571	Callee	fputs		1188526	0					
ANR	1188572	Identifier	fputs		1188526	0					
ANR	1188573	ArgumentList	"""inf"""		1188526	1					
ANR	1188574	Argument	"""inf"""		1188526	0					
ANR	1188575	PrimaryExpression	"""inf"""		1188526	0					
ANR	1188576	Argument	f		1188526	1					
ANR	1188577	Identifier	f		1188526	0					
ANR	1188578	ElseStatement	else		1188526	0					
ANR	1188579	ExpressionStatement	"fprintf ( f , ""(%u)"" , b )"	5074:4:114485:114506	1188526	0	True				
ANR	1188580	CallExpression	"fprintf ( f , ""(%u)"" , b )"		1188526	0					
ANR	1188581	Callee	fprintf		1188526	0					
ANR	1188582	Identifier	fprintf		1188526	0					
ANR	1188583	ArgumentList	f		1188526	1					
ANR	1188584	Argument	f		1188526	0					
ANR	1188585	Identifier	f		1188526	0					
ANR	1188586	Argument	"""(%u)"""		1188526	1					
ANR	1188587	PrimaryExpression	"""(%u)"""		1188526	0					
ANR	1188588	Argument	b		1188526	2					
ANR	1188589	Identifier	b		1188526	0					
ANR	1188590	ReturnType	static void		1188526	1					
ANR	1188591	Identifier	print_distance_range		1188526	2					
ANR	1188592	ParameterList	"FILE * f , OnigDistance a , OnigDistance b"		1188526	3					
ANR	1188593	Parameter	FILE * f	5062:21:114266:114272	1188526	0	True				
ANR	1188594	ParameterType	FILE *		1188526	0					
ANR	1188595	Identifier	f		1188526	1					
ANR	1188596	Parameter	OnigDistance a	5062:30:114275:114288	1188526	1	True				
ANR	1188597	ParameterType	OnigDistance		1188526	0					
ANR	1188598	Identifier	a		1188526	1					
ANR	1188599	Parameter	OnigDistance b	5062:46:114291:114304	1188526	2	True				
ANR	1188600	ParameterType	OnigDistance		1188526	0					
ANR	1188601	Identifier	b		1188526	1					
ANR	1188602	CFGEntryNode	ENTRY		1188526		True				
ANR	1188603	CFGExitNode	EXIT		1188526		True				
ANR	1188604	Symbol	a		1188526						
ANR	1188605	Symbol	ONIG_INFINITE_DISTANCE		1188526						
ANR	1188606	Symbol	b		1188526						
ANR	1188607	Symbol	f		1188526						
ANR	1188608	Function	print_anchor	5077:0:114511:115462							
ANR	1188609	FunctionDef	"print_anchor (FILE * f , int anchor)"		1188608	0					
ANR	1188610	CompoundStatement		5079:0:114557:115462	1188608	0					
ANR	1188611	IdentifierDeclStatement	int q = 0 ;	5080:2:114561:114570	1188608	0	True				
ANR	1188612	IdentifierDecl	q = 0		1188608	0					
ANR	1188613	IdentifierDeclType	int		1188608	0					
ANR	1188614	Identifier	q		1188608	1					
ANR	1188615	AssignmentExpression	q = 0		1188608	2		=			
ANR	1188616	Identifier	q		1188608	0					
ANR	1188617	PrimaryExpression	0		1188608	1					
ANR	1188618	ExpressionStatement	"fprintf ( f , ""["" )"	5082:2:114575:114590	1188608	1	True				
ANR	1188619	CallExpression	"fprintf ( f , ""["" )"		1188608	0					
ANR	1188620	Callee	fprintf		1188608	0					
ANR	1188621	Identifier	fprintf		1188608	0					
ANR	1188622	ArgumentList	f		1188608	1					
ANR	1188623	Argument	f		1188608	0					
ANR	1188624	Identifier	f		1188608	0					
ANR	1188625	Argument	"""["""		1188608	1					
ANR	1188626	PrimaryExpression	"""["""		1188608	0					
ANR	1188627	IfStatement	if ( anchor & ANCHOR_BEGIN_BUF )		1188608	2					
ANR	1188628	Condition	anchor & ANCHOR_BEGIN_BUF	5084:6:114599:114623	1188608	0	True				
ANR	1188629	BitAndExpression	anchor & ANCHOR_BEGIN_BUF		1188608	0		&			
ANR	1188630	Identifier	anchor		1188608	0					
ANR	1188631	Identifier	ANCHOR_BEGIN_BUF		1188608	1					
ANR	1188632	CompoundStatement		6:33:68:68	1188608	1					
ANR	1188633	ExpressionStatement	"fprintf ( f , ""begin-buf"" )"	5085:4:114632:114655	1188608	0	True				
ANR	1188634	CallExpression	"fprintf ( f , ""begin-buf"" )"		1188608	0					
ANR	1188635	Callee	fprintf		1188608	0					
ANR	1188636	Identifier	fprintf		1188608	0					
ANR	1188637	ArgumentList	f		1188608	1					
ANR	1188638	Argument	f		1188608	0					
ANR	1188639	Identifier	f		1188608	0					
ANR	1188640	Argument	"""begin-buf"""		1188608	1					
ANR	1188641	PrimaryExpression	"""begin-buf"""		1188608	0					
ANR	1188642	ExpressionStatement	q = 1	5086:4:114661:114666	1188608	1	True				
ANR	1188643	AssignmentExpression	q = 1		1188608	0		=			
ANR	1188644	Identifier	q		1188608	0					
ANR	1188645	PrimaryExpression	1		1188608	1					
ANR	1188646	IfStatement	if ( anchor & ANCHOR_BEGIN_LINE )		1188608	3					
ANR	1188647	Condition	anchor & ANCHOR_BEGIN_LINE	5088:6:114678:114703	1188608	0	True				
ANR	1188648	BitAndExpression	anchor & ANCHOR_BEGIN_LINE		1188608	0		&			
ANR	1188649	Identifier	anchor		1188608	0					
ANR	1188650	Identifier	ANCHOR_BEGIN_LINE		1188608	1					
ANR	1188651	CompoundStatement		10:34:148:148	1188608	1					
ANR	1188652	IfStatement	if ( q )		1188608	0					
ANR	1188653	Condition	q	5089:8:114716:114716	1188608	0	True				
ANR	1188654	Identifier	q		1188608	0					
ANR	1188655	ExpressionStatement	"fprintf ( f , "", "" )"	5089:11:114719:114735	1188608	1	True				
ANR	1188656	CallExpression	"fprintf ( f , "", "" )"		1188608	0					
ANR	1188657	Callee	fprintf		1188608	0					
ANR	1188658	Identifier	fprintf		1188608	0					
ANR	1188659	ArgumentList	f		1188608	1					
ANR	1188660	Argument	f		1188608	0					
ANR	1188661	Identifier	f		1188608	0					
ANR	1188662	Argument	""", """		1188608	1					
ANR	1188663	PrimaryExpression	""", """		1188608	0					
ANR	1188664	ExpressionStatement	q = 1	5090:4:114741:114746	1188608	1	True				
ANR	1188665	AssignmentExpression	q = 1		1188608	0		=			
ANR	1188666	Identifier	q		1188608	0					
ANR	1188667	PrimaryExpression	1		1188608	1					
ANR	1188668	ExpressionStatement	"fprintf ( f , ""begin-line"" )"	5091:4:114752:114776	1188608	2	True				
ANR	1188669	CallExpression	"fprintf ( f , ""begin-line"" )"		1188608	0					
ANR	1188670	Callee	fprintf		1188608	0					
ANR	1188671	Identifier	fprintf		1188608	0					
ANR	1188672	ArgumentList	f		1188608	1					
ANR	1188673	Argument	f		1188608	0					
ANR	1188674	Identifier	f		1188608	0					
ANR	1188675	Argument	"""begin-line"""		1188608	1					
ANR	1188676	PrimaryExpression	"""begin-line"""		1188608	0					
ANR	1188677	IfStatement	if ( anchor & ANCHOR_BEGIN_POSITION )		1188608	4					
ANR	1188678	Condition	anchor & ANCHOR_BEGIN_POSITION	5093:6:114788:114817	1188608	0	True				
ANR	1188679	BitAndExpression	anchor & ANCHOR_BEGIN_POSITION		1188608	0		&			
ANR	1188680	Identifier	anchor		1188608	0					
ANR	1188681	Identifier	ANCHOR_BEGIN_POSITION		1188608	1					
ANR	1188682	CompoundStatement		15:38:262:262	1188608	1					
ANR	1188683	IfStatement	if ( q )		1188608	0					
ANR	1188684	Condition	q	5094:8:114830:114830	1188608	0	True				
ANR	1188685	Identifier	q		1188608	0					
ANR	1188686	ExpressionStatement	"fprintf ( f , "", "" )"	5094:11:114833:114849	1188608	1	True				
ANR	1188687	CallExpression	"fprintf ( f , "", "" )"		1188608	0					
ANR	1188688	Callee	fprintf		1188608	0					
ANR	1188689	Identifier	fprintf		1188608	0					
ANR	1188690	ArgumentList	f		1188608	1					
ANR	1188691	Argument	f		1188608	0					
ANR	1188692	Identifier	f		1188608	0					
ANR	1188693	Argument	""", """		1188608	1					
ANR	1188694	PrimaryExpression	""", """		1188608	0					
ANR	1188695	ExpressionStatement	q = 1	5095:4:114855:114860	1188608	1	True				
ANR	1188696	AssignmentExpression	q = 1		1188608	0		=			
ANR	1188697	Identifier	q		1188608	0					
ANR	1188698	PrimaryExpression	1		1188608	1					
ANR	1188699	ExpressionStatement	"fprintf ( f , ""begin-pos"" )"	5096:4:114866:114889	1188608	2	True				
ANR	1188700	CallExpression	"fprintf ( f , ""begin-pos"" )"		1188608	0					
ANR	1188701	Callee	fprintf		1188608	0					
ANR	1188702	Identifier	fprintf		1188608	0					
ANR	1188703	ArgumentList	f		1188608	1					
ANR	1188704	Argument	f		1188608	0					
ANR	1188705	Identifier	f		1188608	0					
ANR	1188706	Argument	"""begin-pos"""		1188608	1					
ANR	1188707	PrimaryExpression	"""begin-pos"""		1188608	0					
ANR	1188708	IfStatement	if ( anchor & ANCHOR_END_BUF )		1188608	5					
ANR	1188709	Condition	anchor & ANCHOR_END_BUF	5098:6:114901:114923	1188608	0	True				
ANR	1188710	BitAndExpression	anchor & ANCHOR_END_BUF		1188608	0		&			
ANR	1188711	Identifier	anchor		1188608	0					
ANR	1188712	Identifier	ANCHOR_END_BUF		1188608	1					
ANR	1188713	CompoundStatement		20:31:368:368	1188608	1					
ANR	1188714	IfStatement	if ( q )		1188608	0					
ANR	1188715	Condition	q	5099:8:114936:114936	1188608	0	True				
ANR	1188716	Identifier	q		1188608	0					
ANR	1188717	ExpressionStatement	"fprintf ( f , "", "" )"	5099:11:114939:114955	1188608	1	True				
ANR	1188718	CallExpression	"fprintf ( f , "", "" )"		1188608	0					
ANR	1188719	Callee	fprintf		1188608	0					
ANR	1188720	Identifier	fprintf		1188608	0					
ANR	1188721	ArgumentList	f		1188608	1					
ANR	1188722	Argument	f		1188608	0					
ANR	1188723	Identifier	f		1188608	0					
ANR	1188724	Argument	""", """		1188608	1					
ANR	1188725	PrimaryExpression	""", """		1188608	0					
ANR	1188726	ExpressionStatement	q = 1	5100:4:114961:114966	1188608	1	True				
ANR	1188727	AssignmentExpression	q = 1		1188608	0		=			
ANR	1188728	Identifier	q		1188608	0					
ANR	1188729	PrimaryExpression	1		1188608	1					
ANR	1188730	ExpressionStatement	"fprintf ( f , ""end-buf"" )"	5101:4:114972:114993	1188608	2	True				
ANR	1188731	CallExpression	"fprintf ( f , ""end-buf"" )"		1188608	0					
ANR	1188732	Callee	fprintf		1188608	0					
ANR	1188733	Identifier	fprintf		1188608	0					
ANR	1188734	ArgumentList	f		1188608	1					
ANR	1188735	Argument	f		1188608	0					
ANR	1188736	Identifier	f		1188608	0					
ANR	1188737	Argument	"""end-buf"""		1188608	1					
ANR	1188738	PrimaryExpression	"""end-buf"""		1188608	0					
ANR	1188739	IfStatement	if ( anchor & ANCHOR_SEMI_END_BUF )		1188608	6					
ANR	1188740	Condition	anchor & ANCHOR_SEMI_END_BUF	5103:6:115005:115032	1188608	0	True				
ANR	1188741	BitAndExpression	anchor & ANCHOR_SEMI_END_BUF		1188608	0		&			
ANR	1188742	Identifier	anchor		1188608	0					
ANR	1188743	Identifier	ANCHOR_SEMI_END_BUF		1188608	1					
ANR	1188744	CompoundStatement		25:36:477:477	1188608	1					
ANR	1188745	IfStatement	if ( q )		1188608	0					
ANR	1188746	Condition	q	5104:8:115045:115045	1188608	0	True				
ANR	1188747	Identifier	q		1188608	0					
ANR	1188748	ExpressionStatement	"fprintf ( f , "", "" )"	5104:11:115048:115064	1188608	1	True				
ANR	1188749	CallExpression	"fprintf ( f , "", "" )"		1188608	0					
ANR	1188750	Callee	fprintf		1188608	0					
ANR	1188751	Identifier	fprintf		1188608	0					
ANR	1188752	ArgumentList	f		1188608	1					
ANR	1188753	Argument	f		1188608	0					
ANR	1188754	Identifier	f		1188608	0					
ANR	1188755	Argument	""", """		1188608	1					
ANR	1188756	PrimaryExpression	""", """		1188608	0					
ANR	1188757	ExpressionStatement	q = 1	5105:4:115070:115075	1188608	1	True				
ANR	1188758	AssignmentExpression	q = 1		1188608	0		=			
ANR	1188759	Identifier	q		1188608	0					
ANR	1188760	PrimaryExpression	1		1188608	1					
ANR	1188761	ExpressionStatement	"fprintf ( f , ""semi-end-buf"" )"	5106:4:115081:115107	1188608	2	True				
ANR	1188762	CallExpression	"fprintf ( f , ""semi-end-buf"" )"		1188608	0					
ANR	1188763	Callee	fprintf		1188608	0					
ANR	1188764	Identifier	fprintf		1188608	0					
ANR	1188765	ArgumentList	f		1188608	1					
ANR	1188766	Argument	f		1188608	0					
ANR	1188767	Identifier	f		1188608	0					
ANR	1188768	Argument	"""semi-end-buf"""		1188608	1					
ANR	1188769	PrimaryExpression	"""semi-end-buf"""		1188608	0					
ANR	1188770	IfStatement	if ( anchor & ANCHOR_END_LINE )		1188608	7					
ANR	1188771	Condition	anchor & ANCHOR_END_LINE	5108:6:115119:115142	1188608	0	True				
ANR	1188772	BitAndExpression	anchor & ANCHOR_END_LINE		1188608	0		&			
ANR	1188773	Identifier	anchor		1188608	0					
ANR	1188774	Identifier	ANCHOR_END_LINE		1188608	1					
ANR	1188775	CompoundStatement		30:32:587:587	1188608	1					
ANR	1188776	IfStatement	if ( q )		1188608	0					
ANR	1188777	Condition	q	5109:8:115155:115155	1188608	0	True				
ANR	1188778	Identifier	q		1188608	0					
ANR	1188779	ExpressionStatement	"fprintf ( f , "", "" )"	5109:11:115158:115174	1188608	1	True				
ANR	1188780	CallExpression	"fprintf ( f , "", "" )"		1188608	0					
ANR	1188781	Callee	fprintf		1188608	0					
ANR	1188782	Identifier	fprintf		1188608	0					
ANR	1188783	ArgumentList	f		1188608	1					
ANR	1188784	Argument	f		1188608	0					
ANR	1188785	Identifier	f		1188608	0					
ANR	1188786	Argument	""", """		1188608	1					
ANR	1188787	PrimaryExpression	""", """		1188608	0					
ANR	1188788	ExpressionStatement	q = 1	5110:4:115180:115185	1188608	1	True				
ANR	1188789	AssignmentExpression	q = 1		1188608	0		=			
ANR	1188790	Identifier	q		1188608	0					
ANR	1188791	PrimaryExpression	1		1188608	1					
ANR	1188792	ExpressionStatement	"fprintf ( f , ""end-line"" )"	5111:4:115191:115213	1188608	2	True				
ANR	1188793	CallExpression	"fprintf ( f , ""end-line"" )"		1188608	0					
ANR	1188794	Callee	fprintf		1188608	0					
ANR	1188795	Identifier	fprintf		1188608	0					
ANR	1188796	ArgumentList	f		1188608	1					
ANR	1188797	Argument	f		1188608	0					
ANR	1188798	Identifier	f		1188608	0					
ANR	1188799	Argument	"""end-line"""		1188608	1					
ANR	1188800	PrimaryExpression	"""end-line"""		1188608	0					
ANR	1188801	IfStatement	if ( anchor & ANCHOR_ANYCHAR_STAR )		1188608	8					
ANR	1188802	Condition	anchor & ANCHOR_ANYCHAR_STAR	5113:6:115225:115252	1188608	0	True				
ANR	1188803	BitAndExpression	anchor & ANCHOR_ANYCHAR_STAR		1188608	0		&			
ANR	1188804	Identifier	anchor		1188608	0					
ANR	1188805	Identifier	ANCHOR_ANYCHAR_STAR		1188608	1					
ANR	1188806	CompoundStatement		35:36:697:697	1188608	1					
ANR	1188807	IfStatement	if ( q )		1188608	0					
ANR	1188808	Condition	q	5114:8:115265:115265	1188608	0	True				
ANR	1188809	Identifier	q		1188608	0					
ANR	1188810	ExpressionStatement	"fprintf ( f , "", "" )"	5114:11:115268:115284	1188608	1	True				
ANR	1188811	CallExpression	"fprintf ( f , "", "" )"		1188608	0					
ANR	1188812	Callee	fprintf		1188608	0					
ANR	1188813	Identifier	fprintf		1188608	0					
ANR	1188814	ArgumentList	f		1188608	1					
ANR	1188815	Argument	f		1188608	0					
ANR	1188816	Identifier	f		1188608	0					
ANR	1188817	Argument	""", """		1188608	1					
ANR	1188818	PrimaryExpression	""", """		1188608	0					
ANR	1188819	ExpressionStatement	q = 1	5115:4:115290:115295	1188608	1	True				
ANR	1188820	AssignmentExpression	q = 1		1188608	0		=			
ANR	1188821	Identifier	q		1188608	0					
ANR	1188822	PrimaryExpression	1		1188608	1					
ANR	1188823	ExpressionStatement	"fprintf ( f , ""anychar-star"" )"	5116:4:115301:115327	1188608	2	True				
ANR	1188824	CallExpression	"fprintf ( f , ""anychar-star"" )"		1188608	0					
ANR	1188825	Callee	fprintf		1188608	0					
ANR	1188826	Identifier	fprintf		1188608	0					
ANR	1188827	ArgumentList	f		1188608	1					
ANR	1188828	Argument	f		1188608	0					
ANR	1188829	Identifier	f		1188608	0					
ANR	1188830	Argument	"""anychar-star"""		1188608	1					
ANR	1188831	PrimaryExpression	"""anychar-star"""		1188608	0					
ANR	1188832	IfStatement	if ( anchor & ANCHOR_ANYCHAR_STAR_ML )		1188608	9					
ANR	1188833	Condition	anchor & ANCHOR_ANYCHAR_STAR_ML	5118:6:115339:115369	1188608	0	True				
ANR	1188834	BitAndExpression	anchor & ANCHOR_ANYCHAR_STAR_ML		1188608	0		&			
ANR	1188835	Identifier	anchor		1188608	0					
ANR	1188836	Identifier	ANCHOR_ANYCHAR_STAR_ML		1188608	1					
ANR	1188837	CompoundStatement		40:39:814:814	1188608	1					
ANR	1188838	IfStatement	if ( q )		1188608	0					
ANR	1188839	Condition	q	5119:8:115382:115382	1188608	0	True				
ANR	1188840	Identifier	q		1188608	0					
ANR	1188841	ExpressionStatement	"fprintf ( f , "", "" )"	5119:11:115385:115401	1188608	1	True				
ANR	1188842	CallExpression	"fprintf ( f , "", "" )"		1188608	0					
ANR	1188843	Callee	fprintf		1188608	0					
ANR	1188844	Identifier	fprintf		1188608	0					
ANR	1188845	ArgumentList	f		1188608	1					
ANR	1188846	Argument	f		1188608	0					
ANR	1188847	Identifier	f		1188608	0					
ANR	1188848	Argument	""", """		1188608	1					
ANR	1188849	PrimaryExpression	""", """		1188608	0					
ANR	1188850	ExpressionStatement	"fprintf ( f , ""anychar-star-pl"" )"	5120:4:115407:115436	1188608	1	True				
ANR	1188851	CallExpression	"fprintf ( f , ""anychar-star-pl"" )"		1188608	0					
ANR	1188852	Callee	fprintf		1188608	0					
ANR	1188853	Identifier	fprintf		1188608	0					
ANR	1188854	ArgumentList	f		1188608	1					
ANR	1188855	Argument	f		1188608	0					
ANR	1188856	Identifier	f		1188608	0					
ANR	1188857	Argument	"""anychar-star-pl"""		1188608	1					
ANR	1188858	PrimaryExpression	"""anychar-star-pl"""		1188608	0					
ANR	1188859	ExpressionStatement	"fprintf ( f , ""]"" )"	5123:2:115445:115460	1188608	10	True				
ANR	1188860	CallExpression	"fprintf ( f , ""]"" )"		1188608	0					
ANR	1188861	Callee	fprintf		1188608	0					
ANR	1188862	Identifier	fprintf		1188608	0					
ANR	1188863	ArgumentList	f		1188608	1					
ANR	1188864	Argument	f		1188608	0					
ANR	1188865	Identifier	f		1188608	0					
ANR	1188866	Argument	"""]"""		1188608	1					
ANR	1188867	PrimaryExpression	"""]"""		1188608	0					
ANR	1188868	ReturnType	static void		1188608	1					
ANR	1188869	Identifier	print_anchor		1188608	2					
ANR	1188870	ParameterList	"FILE * f , int anchor"		1188608	3					
ANR	1188871	Parameter	FILE * f	5078:13:114536:114542	1188608	0	True				
ANR	1188872	ParameterType	FILE *		1188608	0					
ANR	1188873	Identifier	f		1188608	1					
ANR	1188874	Parameter	int anchor	5078:22:114545:114554	1188608	1	True				
ANR	1188875	ParameterType	int		1188608	0					
ANR	1188876	Identifier	anchor		1188608	1					
ANR	1188877	CFGEntryNode	ENTRY		1188608		True				
ANR	1188878	CFGExitNode	EXIT		1188608		True				
ANR	1188879	Symbol	q		1188608						
ANR	1188880	Symbol	ANCHOR_END_BUF		1188608						
ANR	1188881	Symbol	ANCHOR_ANYCHAR_STAR_ML		1188608						
ANR	1188882	Symbol	ANCHOR_SEMI_END_BUF		1188608						
ANR	1188883	Symbol	ANCHOR_BEGIN_BUF		1188608						
ANR	1188884	Symbol	f		1188608						
ANR	1188885	Symbol	anchor		1188608						
ANR	1188886	Symbol	ANCHOR_BEGIN_POSITION		1188608						
ANR	1188887	Symbol	ANCHOR_END_LINE		1188608						
ANR	1188888	Symbol	ANCHOR_BEGIN_LINE		1188608						
ANR	1188889	Symbol	ANCHOR_ANYCHAR_STAR		1188608						
ANR	1188890	Function	print_optimize_info	5126:0:115465:116847							
ANR	1188891	FunctionDef	"print_optimize_info (FILE * f , regex_t * reg)"		1188890	0					
ANR	1188892	CompoundStatement		5128:0:115520:116847	1188890	0					
ANR	1188893	Statement	static	5129:2:115524:115529	1188890	0	True				
ANR	1188894	IdentifierDeclStatement	"const char * on [ ] = { ""NONE"" , ""EXACT"" , ""EXACT_BM"" , ""EXACT_BM_NOT_REV"" , ""EXACT_IC"" , ""MAP"" } ;"	5129:9:115531:115650	1188890	1	True				
ANR	1188895	IdentifierDecl	"* on [ ] = { ""NONE"" , ""EXACT"" , ""EXACT_BM"" , ""EXACT_BM_NOT_REV"" , ""EXACT_IC"" , ""MAP"" }"		1188890	0					
ANR	1188896	IdentifierDeclType	const char * [ ]		1188890	0					
ANR	1188897	Identifier	on		1188890	1					
ANR	1188898	AssignmentExpression	"* on [ ] = { ""NONE"" , ""EXACT"" , ""EXACT_BM"" , ""EXACT_BM_NOT_REV"" , ""EXACT_IC"" , ""MAP"" }"		1188890	2		=			
ANR	1188899	Identifier	on		1188890	0					
ANR	1188900	InitializerList	"""NONE"""		1188890	1					
ANR	1188901	PrimaryExpression	"""NONE"""		1188890	0					
ANR	1188902	PrimaryExpression	"""EXACT"""		1188890	1					
ANR	1188903	PrimaryExpression	"""EXACT_BM"""		1188890	2					
ANR	1188904	PrimaryExpression	"""EXACT_BM_NOT_REV"""		1188890	3					
ANR	1188905	PrimaryExpression	"""EXACT_IC"""		1188890	4					
ANR	1188906	PrimaryExpression	"""MAP"""		1188890	5					
ANR	1188907	ExpressionStatement	"fprintf ( f , ""optimize: %s\\n"" , on [ reg -> optimize ] )"	5132:2:115655:115702	1188890	2	True				
ANR	1188908	CallExpression	"fprintf ( f , ""optimize: %s\\n"" , on [ reg -> optimize ] )"		1188890	0					
ANR	1188909	Callee	fprintf		1188890	0					
ANR	1188910	Identifier	fprintf		1188890	0					
ANR	1188911	ArgumentList	f		1188890	1					
ANR	1188912	Argument	f		1188890	0					
ANR	1188913	Identifier	f		1188890	0					
ANR	1188914	Argument	"""optimize: %s\\n"""		1188890	1					
ANR	1188915	PrimaryExpression	"""optimize: %s\\n"""		1188890	0					
ANR	1188916	Argument	on [ reg -> optimize ]		1188890	2					
ANR	1188917	ArrayIndexing	on [ reg -> optimize ]		1188890	0					
ANR	1188918	Identifier	on		1188890	0					
ANR	1188919	PtrMemberAccess	reg -> optimize		1188890	1					
ANR	1188920	Identifier	reg		1188890	0					
ANR	1188921	Identifier	optimize		1188890	1					
ANR	1188922	ExpressionStatement	"fprintf ( f , ""  anchor: "" )"	5133:2:115706:115730	1188890	3	True				
ANR	1188923	CallExpression	"fprintf ( f , ""  anchor: "" )"		1188890	0					
ANR	1188924	Callee	fprintf		1188890	0					
ANR	1188925	Identifier	fprintf		1188890	0					
ANR	1188926	ArgumentList	f		1188890	1					
ANR	1188927	Argument	f		1188890	0					
ANR	1188928	Identifier	f		1188890	0					
ANR	1188929	Argument	"""  anchor: """		1188890	1					
ANR	1188930	PrimaryExpression	"""  anchor: """		1188890	0					
ANR	1188931	ExpressionStatement	"print_anchor ( f , reg -> anchor )"	5133:28:115732:115760	1188890	4	True				
ANR	1188932	CallExpression	"print_anchor ( f , reg -> anchor )"		1188890	0					
ANR	1188933	Callee	print_anchor		1188890	0					
ANR	1188934	Identifier	print_anchor		1188890	0					
ANR	1188935	ArgumentList	f		1188890	1					
ANR	1188936	Argument	f		1188890	0					
ANR	1188937	Identifier	f		1188890	0					
ANR	1188938	Argument	reg -> anchor		1188890	1					
ANR	1188939	PtrMemberAccess	reg -> anchor		1188890	0					
ANR	1188940	Identifier	reg		1188890	0					
ANR	1188941	Identifier	anchor		1188890	1					
ANR	1188942	IfStatement	if ( ( reg -> anchor & ANCHOR_END_BUF_MASK ) != 0 )		1188890	5					
ANR	1188943	Condition	( reg -> anchor & ANCHOR_END_BUF_MASK ) != 0	5134:6:115768:115807	1188890	0	True				
ANR	1188944	EqualityExpression	( reg -> anchor & ANCHOR_END_BUF_MASK ) != 0		1188890	0		!=			
ANR	1188945	BitAndExpression	reg -> anchor & ANCHOR_END_BUF_MASK		1188890	0		&			
ANR	1188946	PtrMemberAccess	reg -> anchor		1188890	0					
ANR	1188947	Identifier	reg		1188890	0					
ANR	1188948	Identifier	anchor		1188890	1					
ANR	1188949	Identifier	ANCHOR_END_BUF_MASK		1188890	1					
ANR	1188950	PrimaryExpression	0		1188890	1					
ANR	1188951	ExpressionStatement	"print_distance_range ( f , reg -> anchor_dmin , reg -> anchor_dmax )"	5135:4:115814:115873	1188890	1	True				
ANR	1188952	CallExpression	"print_distance_range ( f , reg -> anchor_dmin , reg -> anchor_dmax )"		1188890	0					
ANR	1188953	Callee	print_distance_range		1188890	0					
ANR	1188954	Identifier	print_distance_range		1188890	0					
ANR	1188955	ArgumentList	f		1188890	1					
ANR	1188956	Argument	f		1188890	0					
ANR	1188957	Identifier	f		1188890	0					
ANR	1188958	Argument	reg -> anchor_dmin		1188890	1					
ANR	1188959	PtrMemberAccess	reg -> anchor_dmin		1188890	0					
ANR	1188960	Identifier	reg		1188890	0					
ANR	1188961	Identifier	anchor_dmin		1188890	1					
ANR	1188962	Argument	reg -> anchor_dmax		1188890	2					
ANR	1188963	PtrMemberAccess	reg -> anchor_dmax		1188890	0					
ANR	1188964	Identifier	reg		1188890	0					
ANR	1188965	Identifier	anchor_dmax		1188890	1					
ANR	1188966	ExpressionStatement	"fprintf ( f , ""\\n"" )"	5136:2:115877:115893	1188890	6	True				
ANR	1188967	CallExpression	"fprintf ( f , ""\\n"" )"		1188890	0					
ANR	1188968	Callee	fprintf		1188890	0					
ANR	1188969	Identifier	fprintf		1188890	0					
ANR	1188970	ArgumentList	f		1188890	1					
ANR	1188971	Argument	f		1188890	0					
ANR	1188972	Identifier	f		1188890	0					
ANR	1188973	Argument	"""\\n"""		1188890	1					
ANR	1188974	PrimaryExpression	"""\\n"""		1188890	0					
ANR	1188975	IfStatement	if ( reg -> optimize )		1188890	7					
ANR	1188976	Condition	reg -> optimize	5138:6:115902:115914	1188890	0	True				
ANR	1188977	PtrMemberAccess	reg -> optimize		1188890	0					
ANR	1188978	Identifier	reg		1188890	0					
ANR	1188979	Identifier	optimize		1188890	1					
ANR	1188980	CompoundStatement		11:21:396:396	1188890	1					
ANR	1188981	ExpressionStatement	"fprintf ( f , ""  sub anchor: "" )"	5139:4:115923:115951	1188890	0	True				
ANR	1188982	CallExpression	"fprintf ( f , ""  sub anchor: "" )"		1188890	0					
ANR	1188983	Callee	fprintf		1188890	0					
ANR	1188984	Identifier	fprintf		1188890	0					
ANR	1188985	ArgumentList	f		1188890	1					
ANR	1188986	Argument	f		1188890	0					
ANR	1188987	Identifier	f		1188890	0					
ANR	1188988	Argument	"""  sub anchor: """		1188890	1					
ANR	1188989	PrimaryExpression	"""  sub anchor: """		1188890	0					
ANR	1188990	ExpressionStatement	"print_anchor ( f , reg -> sub_anchor )"	5139:34:115953:115985	1188890	1	True				
ANR	1188991	CallExpression	"print_anchor ( f , reg -> sub_anchor )"		1188890	0					
ANR	1188992	Callee	print_anchor		1188890	0					
ANR	1188993	Identifier	print_anchor		1188890	0					
ANR	1188994	ArgumentList	f		1188890	1					
ANR	1188995	Argument	f		1188890	0					
ANR	1188996	Identifier	f		1188890	0					
ANR	1188997	Argument	reg -> sub_anchor		1188890	1					
ANR	1188998	PtrMemberAccess	reg -> sub_anchor		1188890	0					
ANR	1188999	Identifier	reg		1188890	0					
ANR	1189000	Identifier	sub_anchor		1188890	1					
ANR	1189001	ExpressionStatement	"fprintf ( f , ""\\n"" )"	5140:4:115991:116007	1188890	2	True				
ANR	1189002	CallExpression	"fprintf ( f , ""\\n"" )"		1188890	0					
ANR	1189003	Callee	fprintf		1188890	0					
ANR	1189004	Identifier	fprintf		1188890	0					
ANR	1189005	ArgumentList	f		1188890	1					
ANR	1189006	Argument	f		1188890	0					
ANR	1189007	Identifier	f		1188890	0					
ANR	1189008	Argument	"""\\n"""		1188890	1					
ANR	1189009	PrimaryExpression	"""\\n"""		1188890	0					
ANR	1189010	ExpressionStatement	"fprintf ( f , ""\\n"" )"	5142:2:116015:116031	1188890	8	True				
ANR	1189011	CallExpression	"fprintf ( f , ""\\n"" )"		1188890	0					
ANR	1189012	Callee	fprintf		1188890	0					
ANR	1189013	Identifier	fprintf		1188890	0					
ANR	1189014	ArgumentList	f		1188890	1					
ANR	1189015	Argument	f		1188890	0					
ANR	1189016	Identifier	f		1188890	0					
ANR	1189017	Argument	"""\\n"""		1188890	1					
ANR	1189018	PrimaryExpression	"""\\n"""		1188890	0					
ANR	1189019	IfStatement	if ( reg -> exact )		1188890	9					
ANR	1189020	Condition	reg -> exact	5144:6:116040:116049	1188890	0	True				
ANR	1189021	PtrMemberAccess	reg -> exact		1188890	0					
ANR	1189022	Identifier	reg		1188890	0					
ANR	1189023	Identifier	exact		1188890	1					
ANR	1189024	CompoundStatement		18:4:537:545	1188890	1					
ANR	1189025	IdentifierDeclStatement	UChar * p ;	5145:4:116058:116066	1188890	0	True				
ANR	1189026	IdentifierDecl	* p		1188890	0					
ANR	1189027	IdentifierDeclType	UChar *		1188890	0					
ANR	1189028	Identifier	p		1188890	1					
ANR	1189029	ExpressionStatement	"fprintf ( f , ""exact: ["" )"	5146:4:116072:116094	1188890	1	True				
ANR	1189030	CallExpression	"fprintf ( f , ""exact: ["" )"		1188890	0					
ANR	1189031	Callee	fprintf		1188890	0					
ANR	1189032	Identifier	fprintf		1188890	0					
ANR	1189033	ArgumentList	f		1188890	1					
ANR	1189034	Argument	f		1188890	0					
ANR	1189035	Identifier	f		1188890	0					
ANR	1189036	Argument	"""exact: ["""		1188890	1					
ANR	1189037	PrimaryExpression	"""exact: ["""		1188890	0					
ANR	1189038	ForStatement	for ( p = reg -> exact ; p < reg -> exact_end ; p ++ )		1188890	2					
ANR	1189039	ForInit	p = reg -> exact ;	5147:9:116105:116119	1188890	0	True				
ANR	1189040	AssignmentExpression	p = reg -> exact		1188890	0		=			
ANR	1189041	Identifier	p		1188890	0					
ANR	1189042	PtrMemberAccess	reg -> exact		1188890	1					
ANR	1189043	Identifier	reg		1188890	0					
ANR	1189044	Identifier	exact		1188890	1					
ANR	1189045	Condition	p < reg -> exact_end	5147:25:116121:116138	1188890	1	True				
ANR	1189046	RelationalExpression	p < reg -> exact_end		1188890	0		<			
ANR	1189047	Identifier	p		1188890	0					
ANR	1189048	PtrMemberAccess	reg -> exact_end		1188890	1					
ANR	1189049	Identifier	reg		1188890	0					
ANR	1189050	Identifier	exact_end		1188890	1					
ANR	1189051	PostIncDecOperationExpression	p ++	5147:45:116141:116143	1188890	2	True				
ANR	1189052	Identifier	p		1188890	0					
ANR	1189053	IncDec	++		1188890	1					
ANR	1189054	CompoundStatement		20:50:625:625	1188890	3					
ANR	1189055	ExpressionStatement	"fputc ( * p , f )"	5148:6:116154:116166	1188890	0	True				
ANR	1189056	CallExpression	"fputc ( * p , f )"		1188890	0					
ANR	1189057	Callee	fputc		1188890	0					
ANR	1189058	Identifier	fputc		1188890	0					
ANR	1189059	ArgumentList	* p		1188890	1					
ANR	1189060	Argument	* p		1188890	0					
ANR	1189061	UnaryOperationExpression	* p		1188890	0					
ANR	1189062	UnaryOperator	*		1188890	0					
ANR	1189063	Identifier	p		1188890	1					
ANR	1189064	Argument	f		1188890	1					
ANR	1189065	Identifier	f		1188890	0					
ANR	1189066	ExpressionStatement	"fprintf ( f , ""]: length: %d\\n"" , ( reg -> exact_end - reg -> exact ) )"	5150:4:116178:116238	1188890	3	True				
ANR	1189067	CallExpression	"fprintf ( f , ""]: length: %d\\n"" , ( reg -> exact_end - reg -> exact ) )"		1188890	0					
ANR	1189068	Callee	fprintf		1188890	0					
ANR	1189069	Identifier	fprintf		1188890	0					
ANR	1189070	ArgumentList	f		1188890	1					
ANR	1189071	Argument	f		1188890	0					
ANR	1189072	Identifier	f		1188890	0					
ANR	1189073	Argument	"""]: length: %d\\n"""		1188890	1					
ANR	1189074	PrimaryExpression	"""]: length: %d\\n"""		1188890	0					
ANR	1189075	Argument	reg -> exact_end - reg -> exact		1188890	2					
ANR	1189076	AdditiveExpression	reg -> exact_end - reg -> exact		1188890	0		-			
ANR	1189077	PtrMemberAccess	reg -> exact_end		1188890	0					
ANR	1189078	Identifier	reg		1188890	0					
ANR	1189079	Identifier	exact_end		1188890	1					
ANR	1189080	PtrMemberAccess	reg -> exact		1188890	1					
ANR	1189081	Identifier	reg		1188890	0					
ANR	1189082	Identifier	exact		1188890	1					
ANR	1189083	ElseStatement	else		1188890	0					
ANR	1189084	IfStatement	if ( reg -> optimize & ONIG_OPTIMIZE_MAP )		1188890	0					
ANR	1189085	Condition	reg -> optimize & ONIG_OPTIMIZE_MAP	5152:11:116255:116287	1188890	0	True				
ANR	1189086	BitAndExpression	reg -> optimize & ONIG_OPTIMIZE_MAP		1188890	0		&			
ANR	1189087	PtrMemberAccess	reg -> optimize		1188890	0					
ANR	1189088	Identifier	reg		1188890	0					
ANR	1189089	Identifier	optimize		1188890	1					
ANR	1189090	Identifier	ONIG_OPTIMIZE_MAP		1188890	1					
ANR	1189091	CompoundStatement		26:4:775:790	1188890	1					
ANR	1189092	IdentifierDeclStatement	"int c , i , n = 0 ;"	5153:4:116296:116311	1188890	0	True				
ANR	1189093	IdentifierDecl	c		1188890	0					
ANR	1189094	IdentifierDeclType	int		1188890	0					
ANR	1189095	Identifier	c		1188890	1					
ANR	1189096	IdentifierDecl	i		1188890	1					
ANR	1189097	IdentifierDeclType	int		1188890	0					
ANR	1189098	Identifier	i		1188890	1					
ANR	1189099	IdentifierDecl	n = 0		1188890	2					
ANR	1189100	IdentifierDeclType	int		1188890	0					
ANR	1189101	Identifier	n		1188890	1					
ANR	1189102	AssignmentExpression	n = 0		1188890	2		=			
ANR	1189103	Identifier	n		1188890	0					
ANR	1189104	PrimaryExpression	0		1188890	1					
ANR	1189105	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		1188890	1					
ANR	1189106	ForInit	i = 0 ;	5155:9:116323:116328	1188890	0	True				
ANR	1189107	AssignmentExpression	i = 0		1188890	0		=			
ANR	1189108	Identifier	i		1188890	0					
ANR	1189109	PrimaryExpression	0		1188890	1					
ANR	1189110	Condition	i < ONIG_CHAR_TABLE_SIZE	5155:16:116330:116353	1188890	1	True				
ANR	1189111	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		1188890	0		<			
ANR	1189112	Identifier	i		1188890	0					
ANR	1189113	Identifier	ONIG_CHAR_TABLE_SIZE		1188890	1					
ANR	1189114	PostIncDecOperationExpression	i ++	5155:42:116356:116358	1188890	2	True				
ANR	1189115	Identifier	i		1188890	0					
ANR	1189116	IncDec	++		1188890	1					
ANR	1189117	IfStatement	if ( reg -> map [ i ] )		1188890	3					
ANR	1189118	Condition	reg -> map [ i ]	5156:10:116371:116381	1188890	0	True				
ANR	1189119	ArrayIndexing	reg -> map [ i ]		1188890	0					
ANR	1189120	PtrMemberAccess	reg -> map		1188890	0					
ANR	1189121	Identifier	reg		1188890	0					
ANR	1189122	Identifier	map		1188890	1					
ANR	1189123	Identifier	i		1188890	1					
ANR	1189124	ExpressionStatement	n ++	5156:23:116384:116387	1188890	1	True				
ANR	1189125	PostIncDecOperationExpression	n ++		1188890	0					
ANR	1189126	Identifier	n		1188890	0					
ANR	1189127	IncDec	++		1188890	1					
ANR	1189128	ExpressionStatement	"fprintf ( f , ""map: n=%d\\n"" , n )"	5158:4:116394:116422	1188890	2	True				
ANR	1189129	CallExpression	"fprintf ( f , ""map: n=%d\\n"" , n )"		1188890	0					
ANR	1189130	Callee	fprintf		1188890	0					
ANR	1189131	Identifier	fprintf		1188890	0					
ANR	1189132	ArgumentList	f		1188890	1					
ANR	1189133	Argument	f		1188890	0					
ANR	1189134	Identifier	f		1188890	0					
ANR	1189135	Argument	"""map: n=%d\\n"""		1188890	1					
ANR	1189136	PrimaryExpression	"""map: n=%d\\n"""		1188890	0					
ANR	1189137	Argument	n		1188890	2					
ANR	1189138	Identifier	n		1188890	0					
ANR	1189139	IfStatement	if ( n > 0 )		1188890	3					
ANR	1189140	Condition	n > 0	5159:8:116432:116436	1188890	0	True				
ANR	1189141	RelationalExpression	n > 0		1188890	0		>			
ANR	1189142	Identifier	n		1188890	0					
ANR	1189143	PrimaryExpression	0		1188890	1					
ANR	1189144	CompoundStatement		32:15:918:918	1188890	1					
ANR	1189145	ExpressionStatement	c = 0	5160:6:116447:116452	1188890	0	True				
ANR	1189146	AssignmentExpression	c = 0		1188890	0		=			
ANR	1189147	Identifier	c		1188890	0					
ANR	1189148	PrimaryExpression	0		1188890	1					
ANR	1189149	ExpressionStatement	"fputc ( '[' , f )"	5161:6:116460:116473	1188890	1	True				
ANR	1189150	CallExpression	"fputc ( '[' , f )"		1188890	0					
ANR	1189151	Callee	fputc		1188890	0					
ANR	1189152	Identifier	fputc		1188890	0					
ANR	1189153	ArgumentList	'['		1188890	1					
ANR	1189154	Argument	'['		1188890	0					
ANR	1189155	PrimaryExpression	'['		1188890	0					
ANR	1189156	Argument	f		1188890	1					
ANR	1189157	Identifier	f		1188890	0					
ANR	1189158	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		1188890	2					
ANR	1189159	ForInit	i = 0 ;	5162:11:116486:116491	1188890	0	True				
ANR	1189160	AssignmentExpression	i = 0		1188890	0		=			
ANR	1189161	Identifier	i		1188890	0					
ANR	1189162	PrimaryExpression	0		1188890	1					
ANR	1189163	Condition	i < ONIG_CHAR_TABLE_SIZE	5162:18:116493:116516	1188890	1	True				
ANR	1189164	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		1188890	0		<			
ANR	1189165	Identifier	i		1188890	0					
ANR	1189166	Identifier	ONIG_CHAR_TABLE_SIZE		1188890	1					
ANR	1189167	PostIncDecOperationExpression	i ++	5162:44:116519:116521	1188890	2	True				
ANR	1189168	Identifier	i		1188890	0					
ANR	1189169	IncDec	++		1188890	1					
ANR	1189170	CompoundStatement		35:49:1003:1003	1188890	3					
ANR	1189171	IfStatement	if ( reg -> map [ i ] != 0 )		1188890	0					
ANR	1189172	Condition	reg -> map [ i ] != 0	5163:5:116531:116546	1188890	0	True				
ANR	1189173	EqualityExpression	reg -> map [ i ] != 0		1188890	0		!=			
ANR	1189174	ArrayIndexing	reg -> map [ i ]		1188890	0					
ANR	1189175	PtrMemberAccess	reg -> map		1188890	0					
ANR	1189176	Identifier	reg		1188890	0					
ANR	1189177	Identifier	map		1188890	1					
ANR	1189178	Identifier	i		1188890	1					
ANR	1189179	PrimaryExpression	0		1188890	1					
ANR	1189180	CompoundStatement		36:23:1028:1028	1188890	1					
ANR	1189181	IfStatement	if ( c > 0 )		1188890	0					
ANR	1189182	Condition	c > 0	5164:14:116565:116569	1188890	0	True				
ANR	1189183	RelationalExpression	c > 0		1188890	0		>			
ANR	1189184	Identifier	c		1188890	0					
ANR	1189185	PrimaryExpression	0		1188890	1					
ANR	1189186	ExpressionStatement	"fputs ( "", "" , f )"	5164:22:116573:116587	1188890	1	True				
ANR	1189187	CallExpression	"fputs ( "", "" , f )"		1188890	0					
ANR	1189188	Callee	fputs		1188890	0					
ANR	1189189	Identifier	fputs		1188890	0					
ANR	1189190	ArgumentList	""", """		1188890	1					
ANR	1189191	Argument	""", """		1188890	0					
ANR	1189192	PrimaryExpression	""", """		1188890	0					
ANR	1189193	Argument	f		1188890	1					
ANR	1189194	Identifier	f		1188890	0					
ANR	1189195	ExpressionStatement	c ++	5165:10:116599:116602	1188890	1	True				
ANR	1189196	PostIncDecOperationExpression	c ++		1188890	0					
ANR	1189197	Identifier	c		1188890	0					
ANR	1189198	IncDec	++		1188890	1					
ANR	1189199	IfStatement	"if ( ONIGENC_MBC_MAXLEN ( reg -> enc ) == 1 && ONIGENC_IS_CODE_PRINT ( reg -> enc , ( OnigCodePoint ) i ) )"		1188890	2					
ANR	1189200	Condition	"ONIGENC_MBC_MAXLEN ( reg -> enc ) == 1 && ONIGENC_IS_CODE_PRINT ( reg -> enc , ( OnigCodePoint ) i )"	5166:14:116618:116718	1188890	0	True				
ANR	1189201	AndExpression	"ONIGENC_MBC_MAXLEN ( reg -> enc ) == 1 && ONIGENC_IS_CODE_PRINT ( reg -> enc , ( OnigCodePoint ) i )"		1188890	0		&&			
ANR	1189202	EqualityExpression	ONIGENC_MBC_MAXLEN ( reg -> enc ) == 1		1188890	0		==			
ANR	1189203	CallExpression	ONIGENC_MBC_MAXLEN ( reg -> enc )		1188890	0					
ANR	1189204	Callee	ONIGENC_MBC_MAXLEN		1188890	0					
ANR	1189205	Identifier	ONIGENC_MBC_MAXLEN		1188890	0					
ANR	1189206	ArgumentList	reg -> enc		1188890	1					
ANR	1189207	Argument	reg -> enc		1188890	0					
ANR	1189208	PtrMemberAccess	reg -> enc		1188890	0					
ANR	1189209	Identifier	reg		1188890	0					
ANR	1189210	Identifier	enc		1188890	1					
ANR	1189211	PrimaryExpression	1		1188890	1					
ANR	1189212	CallExpression	"ONIGENC_IS_CODE_PRINT ( reg -> enc , ( OnigCodePoint ) i )"		1188890	1					
ANR	1189213	Callee	ONIGENC_IS_CODE_PRINT		1188890	0					
ANR	1189214	Identifier	ONIGENC_IS_CODE_PRINT		1188890	0					
ANR	1189215	ArgumentList	reg -> enc		1188890	1					
ANR	1189216	Argument	reg -> enc		1188890	0					
ANR	1189217	PtrMemberAccess	reg -> enc		1188890	0					
ANR	1189218	Identifier	reg		1188890	0					
ANR	1189219	Identifier	enc		1188890	1					
ANR	1189220	Argument	( OnigCodePoint ) i		1188890	1					
ANR	1189221	CastExpression	( OnigCodePoint ) i		1188890	0					
ANR	1189222	CastTarget	OnigCodePoint		1188890	0					
ANR	1189223	Identifier	i		1188890	1					
ANR	1189224	ExpressionStatement	"fputc ( i , f )"	5168:12:116733:116744	1188890	1	True				
ANR	1189225	CallExpression	"fputc ( i , f )"		1188890	0					
ANR	1189226	Callee	fputc		1188890	0					
ANR	1189227	Identifier	fputc		1188890	0					
ANR	1189228	ArgumentList	i		1188890	1					
ANR	1189229	Argument	i		1188890	0					
ANR	1189230	Identifier	i		1188890	0					
ANR	1189231	Argument	f		1188890	1					
ANR	1189232	Identifier	f		1188890	0					
ANR	1189233	ElseStatement	else		1188890	0					
ANR	1189234	ExpressionStatement	"fprintf ( f , ""%d"" , i )"	5170:12:116773:116792	1188890	0	True				
ANR	1189235	CallExpression	"fprintf ( f , ""%d"" , i )"		1188890	0					
ANR	1189236	Callee	fprintf		1188890	0					
ANR	1189237	Identifier	fprintf		1188890	0					
ANR	1189238	ArgumentList	f		1188890	1					
ANR	1189239	Argument	f		1188890	0					
ANR	1189240	Identifier	f		1188890	0					
ANR	1189241	Argument	"""%d"""		1188890	1					
ANR	1189242	PrimaryExpression	"""%d"""		1188890	0					
ANR	1189243	Argument	i		1188890	2					
ANR	1189244	Identifier	i		1188890	0					
ANR	1189245	ExpressionStatement	"fprintf ( f , ""]\\n"" )"	5173:6:116818:116835	1188890	3	True				
ANR	1189246	CallExpression	"fprintf ( f , ""]\\n"" )"		1188890	0					
ANR	1189247	Callee	fprintf		1188890	0					
ANR	1189248	Identifier	fprintf		1188890	0					
ANR	1189249	ArgumentList	f		1188890	1					
ANR	1189250	Argument	f		1188890	0					
ANR	1189251	Identifier	f		1188890	0					
ANR	1189252	Argument	"""]\\n"""		1188890	1					
ANR	1189253	PrimaryExpression	"""]\\n"""		1188890	0					
ANR	1189254	ReturnType	static void		1188890	1					
ANR	1189255	Identifier	print_optimize_info		1188890	2					
ANR	1189256	ParameterList	"FILE * f , regex_t * reg"		1188890	3					
ANR	1189257	Parameter	FILE * f	5127:20:115497:115503	1188890	0	True				
ANR	1189258	ParameterType	FILE *		1188890	0					
ANR	1189259	Identifier	f		1188890	1					
ANR	1189260	Parameter	regex_t * reg	5127:29:115506:115517	1188890	1	True				
ANR	1189261	ParameterType	regex_t *		1188890	0					
ANR	1189262	Identifier	reg		1188890	1					
ANR	1189263	CFGEntryNode	ENTRY		1188890		True				
ANR	1189264	CFGExitNode	EXIT		1188890		True				
ANR	1189265	Symbol	reg -> anchor		1188890						
ANR	1189266	Symbol	* on		1188890						
ANR	1189267	Symbol	reg -> exact_end		1188890						
ANR	1189268	Symbol	reg		1188890						
ANR	1189269	Symbol	reg -> anchor_dmax		1188890						
ANR	1189270	Symbol	reg -> optimize		1188890						
ANR	1189271	Symbol	reg -> sub_anchor		1188890						
ANR	1189272	Symbol	on		1188890						
ANR	1189273	Symbol	reg -> map		1188890						
ANR	1189274	Symbol	ONIGENC_MBC_MAXLEN		1188890						
ANR	1189275	Symbol	c		1188890						
ANR	1189276	Symbol	f		1188890						
ANR	1189277	Symbol	reg -> anchor_dmin		1188890						
ANR	1189278	Symbol	* * reg		1188890						
ANR	1189279	Symbol	i		1188890						
ANR	1189280	Symbol	n		1188890						
ANR	1189281	Symbol	reg -> enc		1188890						
ANR	1189282	Symbol	p		1188890						
ANR	1189283	Symbol	ONIG_CHAR_TABLE_SIZE		1188890						
ANR	1189284	Symbol	* i		1188890						
ANR	1189285	Symbol	reg -> exact		1188890						
ANR	1189286	Symbol	ONIGENC_IS_CODE_PRINT		1188890						
ANR	1189287	Symbol	ONIG_OPTIMIZE_MAP		1188890						
ANR	1189288	Symbol	* reg -> optimize		1188890						
ANR	1189289	Symbol	* p		1188890						
ANR	1189290	Symbol	* reg -> map		1188890						
ANR	1189291	Symbol	* reg		1188890						
ANR	1189292	Symbol	ANCHOR_END_BUF_MASK		1188890						
ANR	1189293	Function	onig_free_body	5180:0:116875:117403							
ANR	1189294	FunctionDef	onig_free_body (regex_t * reg)		1189293	0					
ANR	1189295	CompoundStatement		5182:0:116916:117403	1189293	0					
ANR	1189296	IfStatement	if ( IS_NOT_NULL ( reg ) )		1189293	0					
ANR	1189297	Condition	IS_NOT_NULL ( reg )	5183:6:116924:116939	1189293	0	True				
ANR	1189298	CallExpression	IS_NOT_NULL ( reg )		1189293	0					
ANR	1189299	Callee	IS_NOT_NULL		1189293	0					
ANR	1189300	Identifier	IS_NOT_NULL		1189293	0					
ANR	1189301	ArgumentList	reg		1189293	1					
ANR	1189302	Argument	reg		1189293	0					
ANR	1189303	Identifier	reg		1189293	0					
ANR	1189304	CompoundStatement		2:24:25:25	1189293	1					
ANR	1189305	IfStatement	if ( IS_NOT_NULL ( reg -> p ) )		1189293	0					
ANR	1189306	Condition	IS_NOT_NULL ( reg -> p )	5184:8:116952:116970	1189293	0	True				
ANR	1189307	CallExpression	IS_NOT_NULL ( reg -> p )		1189293	0					
ANR	1189308	Callee	IS_NOT_NULL		1189293	0					
ANR	1189309	Identifier	IS_NOT_NULL		1189293	0					
ANR	1189310	ArgumentList	reg -> p		1189293	1					
ANR	1189311	Argument	reg -> p		1189293	0					
ANR	1189312	PtrMemberAccess	reg -> p		1189293	0					
ANR	1189313	Identifier	reg		1189293	0					
ANR	1189314	Identifier	p		1189293	1					
ANR	1189315	ExpressionStatement	xfree ( reg -> p )	5184:44:116988:117001	1189293	1	True				
ANR	1189316	CallExpression	xfree ( reg -> p )		1189293	0					
ANR	1189317	Callee	xfree		1189293	0					
ANR	1189318	Identifier	xfree		1189293	0					
ANR	1189319	ArgumentList	reg -> p		1189293	1					
ANR	1189320	Argument	reg -> p		1189293	0					
ANR	1189321	PtrMemberAccess	reg -> p		1189293	0					
ANR	1189322	Identifier	reg		1189293	0					
ANR	1189323	Identifier	p		1189293	1					
ANR	1189324	IfStatement	if ( IS_NOT_NULL ( reg -> exact ) )		1189293	1					
ANR	1189325	Condition	IS_NOT_NULL ( reg -> exact )	5185:8:117011:117033	1189293	0	True				
ANR	1189326	CallExpression	IS_NOT_NULL ( reg -> exact )		1189293	0					
ANR	1189327	Callee	IS_NOT_NULL		1189293	0					
ANR	1189328	Identifier	IS_NOT_NULL		1189293	0					
ANR	1189329	ArgumentList	reg -> exact		1189293	1					
ANR	1189330	Argument	reg -> exact		1189293	0					
ANR	1189331	PtrMemberAccess	reg -> exact		1189293	0					
ANR	1189332	Identifier	reg		1189293	0					
ANR	1189333	Identifier	exact		1189293	1					
ANR	1189334	ExpressionStatement	xfree ( reg -> exact )	5185:44:117047:117064	1189293	1	True				
ANR	1189335	CallExpression	xfree ( reg -> exact )		1189293	0					
ANR	1189336	Callee	xfree		1189293	0					
ANR	1189337	Identifier	xfree		1189293	0					
ANR	1189338	ArgumentList	reg -> exact		1189293	1					
ANR	1189339	Argument	reg -> exact		1189293	0					
ANR	1189340	PtrMemberAccess	reg -> exact		1189293	0					
ANR	1189341	Identifier	reg		1189293	0					
ANR	1189342	Identifier	exact		1189293	1					
ANR	1189343	IfStatement	if ( IS_NOT_NULL ( reg -> int_map ) )		1189293	2					
ANR	1189344	Condition	IS_NOT_NULL ( reg -> int_map )	5186:8:117074:117098	1189293	0	True				
ANR	1189345	CallExpression	IS_NOT_NULL ( reg -> int_map )		1189293	0					
ANR	1189346	Callee	IS_NOT_NULL		1189293	0					
ANR	1189347	Identifier	IS_NOT_NULL		1189293	0					
ANR	1189348	ArgumentList	reg -> int_map		1189293	1					
ANR	1189349	Argument	reg -> int_map		1189293	0					
ANR	1189350	PtrMemberAccess	reg -> int_map		1189293	0					
ANR	1189351	Identifier	reg		1189293	0					
ANR	1189352	Identifier	int_map		1189293	1					
ANR	1189353	ExpressionStatement	xfree ( reg -> int_map )	5186:44:117110:117129	1189293	1	True				
ANR	1189354	CallExpression	xfree ( reg -> int_map )		1189293	0					
ANR	1189355	Callee	xfree		1189293	0					
ANR	1189356	Identifier	xfree		1189293	0					
ANR	1189357	ArgumentList	reg -> int_map		1189293	1					
ANR	1189358	Argument	reg -> int_map		1189293	0					
ANR	1189359	PtrMemberAccess	reg -> int_map		1189293	0					
ANR	1189360	Identifier	reg		1189293	0					
ANR	1189361	Identifier	int_map		1189293	1					
ANR	1189362	IfStatement	if ( IS_NOT_NULL ( reg -> int_map_backward ) )		1189293	3					
ANR	1189363	Condition	IS_NOT_NULL ( reg -> int_map_backward )	5187:8:117139:117172	1189293	0	True				
ANR	1189364	CallExpression	IS_NOT_NULL ( reg -> int_map_backward )		1189293	0					
ANR	1189365	Callee	IS_NOT_NULL		1189293	0					
ANR	1189366	Identifier	IS_NOT_NULL		1189293	0					
ANR	1189367	ArgumentList	reg -> int_map_backward		1189293	1					
ANR	1189368	Argument	reg -> int_map_backward		1189293	0					
ANR	1189369	PtrMemberAccess	reg -> int_map_backward		1189293	0					
ANR	1189370	Identifier	reg		1189293	0					
ANR	1189371	Identifier	int_map_backward		1189293	1					
ANR	1189372	ExpressionStatement	xfree ( reg -> int_map_backward )	5187:44:117175:117203	1189293	1	True				
ANR	1189373	CallExpression	xfree ( reg -> int_map_backward )		1189293	0					
ANR	1189374	Callee	xfree		1189293	0					
ANR	1189375	Identifier	xfree		1189293	0					
ANR	1189376	ArgumentList	reg -> int_map_backward		1189293	1					
ANR	1189377	Argument	reg -> int_map_backward		1189293	0					
ANR	1189378	PtrMemberAccess	reg -> int_map_backward		1189293	0					
ANR	1189379	Identifier	reg		1189293	0					
ANR	1189380	Identifier	int_map_backward		1189293	1					
ANR	1189381	IfStatement	if ( IS_NOT_NULL ( reg -> repeat_range ) )		1189293	4					
ANR	1189382	Condition	IS_NOT_NULL ( reg -> repeat_range )	5188:8:117213:117242	1189293	0	True				
ANR	1189383	CallExpression	IS_NOT_NULL ( reg -> repeat_range )		1189293	0					
ANR	1189384	Callee	IS_NOT_NULL		1189293	0					
ANR	1189385	Identifier	IS_NOT_NULL		1189293	0					
ANR	1189386	ArgumentList	reg -> repeat_range		1189293	1					
ANR	1189387	Argument	reg -> repeat_range		1189293	0					
ANR	1189388	PtrMemberAccess	reg -> repeat_range		1189293	0					
ANR	1189389	Identifier	reg		1189293	0					
ANR	1189390	Identifier	repeat_range		1189293	1					
ANR	1189391	ExpressionStatement	xfree ( reg -> repeat_range )	5188:44:117249:117273	1189293	1	True				
ANR	1189392	CallExpression	xfree ( reg -> repeat_range )		1189293	0					
ANR	1189393	Callee	xfree		1189293	0					
ANR	1189394	Identifier	xfree		1189293	0					
ANR	1189395	ArgumentList	reg -> repeat_range		1189293	1					
ANR	1189396	Argument	reg -> repeat_range		1189293	0					
ANR	1189397	PtrMemberAccess	reg -> repeat_range		1189293	0					
ANR	1189398	Identifier	reg		1189293	0					
ANR	1189399	Identifier	repeat_range		1189293	1					
ANR	1189400	IfStatement	if ( IS_NOT_NULL ( reg -> chain ) )		1189293	5					
ANR	1189401	Condition	IS_NOT_NULL ( reg -> chain )	5189:8:117283:117305	1189293	0	True				
ANR	1189402	CallExpression	IS_NOT_NULL ( reg -> chain )		1189293	0					
ANR	1189403	Callee	IS_NOT_NULL		1189293	0					
ANR	1189404	Identifier	IS_NOT_NULL		1189293	0					
ANR	1189405	ArgumentList	reg -> chain		1189293	1					
ANR	1189406	Argument	reg -> chain		1189293	0					
ANR	1189407	PtrMemberAccess	reg -> chain		1189293	0					
ANR	1189408	Identifier	reg		1189293	0					
ANR	1189409	Identifier	chain		1189293	1					
ANR	1189410	ExpressionStatement	onig_free ( reg -> chain )	5189:44:117319:117340	1189293	1	True				
ANR	1189411	CallExpression	onig_free ( reg -> chain )		1189293	0					
ANR	1189412	Callee	onig_free		1189293	0					
ANR	1189413	Identifier	onig_free		1189293	0					
ANR	1189414	ArgumentList	reg -> chain		1189293	1					
ANR	1189415	Argument	reg -> chain		1189293	0					
ANR	1189416	PtrMemberAccess	reg -> chain		1189293	0					
ANR	1189417	Identifier	reg		1189293	0					
ANR	1189418	Identifier	chain		1189293	1					
ANR	1189419	ExpressionStatement	onig_names_free ( reg )	5192:4:117370:117390	1189293	6	True				
ANR	1189420	CallExpression	onig_names_free ( reg )		1189293	0					
ANR	1189421	Callee	onig_names_free		1189293	0					
ANR	1189422	Identifier	onig_names_free		1189293	0					
ANR	1189423	ArgumentList	reg		1189293	1					
ANR	1189424	Argument	reg		1189293	0					
ANR	1189425	Identifier	reg		1189293	0					
ANR	1189426	ReturnType	extern void		1189293	1					
ANR	1189427	Identifier	onig_free_body		1189293	2					
ANR	1189428	ParameterList	regex_t * reg		1189293	3					
ANR	1189429	Parameter	regex_t * reg	5181:15:116902:116913	1189293	0	True				
ANR	1189430	ParameterType	regex_t *		1189293	0					
ANR	1189431	Identifier	reg		1189293	1					
ANR	1189432	CFGEntryNode	ENTRY		1189293		True				
ANR	1189433	CFGExitNode	EXIT		1189293		True				
ANR	1189434	Symbol	reg -> int_map		1189293						
ANR	1189435	Symbol	reg -> int_map_backward		1189293						
ANR	1189436	Symbol	IS_NOT_NULL		1189293						
ANR	1189437	Symbol	reg -> repeat_range		1189293						
ANR	1189438	Symbol	reg		1189293						
ANR	1189439	Symbol	reg -> exact		1189293						
ANR	1189440	Symbol	reg -> chain		1189293						
ANR	1189441	Symbol	reg -> p		1189293						
ANR	1189442	Symbol	* reg		1189293						
ANR	1189443	Function	onig_free	5197:0:117406:117515							
ANR	1189444	FunctionDef	onig_free (regex_t * reg)		1189443	0					
ANR	1189445	CompoundStatement		5199:0:117442:117515	1189443	0					
ANR	1189446	IfStatement	if ( IS_NOT_NULL ( reg ) )		1189443	0					
ANR	1189447	Condition	IS_NOT_NULL ( reg )	5200:6:117450:117465	1189443	0	True				
ANR	1189448	CallExpression	IS_NOT_NULL ( reg )		1189443	0					
ANR	1189449	Callee	IS_NOT_NULL		1189443	0					
ANR	1189450	Identifier	IS_NOT_NULL		1189443	0					
ANR	1189451	ArgumentList	reg		1189443	1					
ANR	1189452	Argument	reg		1189443	0					
ANR	1189453	Identifier	reg		1189443	0					
ANR	1189454	CompoundStatement		2:24:25:25	1189443	1					
ANR	1189455	ExpressionStatement	onig_free_body ( reg )	5201:4:117474:117493	1189443	0	True				
ANR	1189456	CallExpression	onig_free_body ( reg )		1189443	0					
ANR	1189457	Callee	onig_free_body		1189443	0					
ANR	1189458	Identifier	onig_free_body		1189443	0					
ANR	1189459	ArgumentList	reg		1189443	1					
ANR	1189460	Argument	reg		1189443	0					
ANR	1189461	Identifier	reg		1189443	0					
ANR	1189462	ExpressionStatement	xfree ( reg )	5202:4:117499:117509	1189443	1	True				
ANR	1189463	CallExpression	xfree ( reg )		1189443	0					
ANR	1189464	Callee	xfree		1189443	0					
ANR	1189465	Identifier	xfree		1189443	0					
ANR	1189466	ArgumentList	reg		1189443	1					
ANR	1189467	Argument	reg		1189443	0					
ANR	1189468	Identifier	reg		1189443	0					
ANR	1189469	ReturnType	extern void		1189443	1					
ANR	1189470	Identifier	onig_free		1189443	2					
ANR	1189471	ParameterList	regex_t * reg		1189443	3					
ANR	1189472	Parameter	regex_t * reg	5198:10:117428:117439	1189443	0	True				
ANR	1189473	ParameterType	regex_t *		1189443	0					
ANR	1189474	Identifier	reg		1189443	1					
ANR	1189475	CFGEntryNode	ENTRY		1189443		True				
ANR	1189476	CFGExitNode	EXIT		1189443		True				
ANR	1189477	Symbol	IS_NOT_NULL		1189443						
ANR	1189478	Symbol	reg		1189443						
ANR	1189479	Function	onig_transfer	5213:0:117683:117811							
ANR	1189480	FunctionDef	"onig_transfer (regex_t * to , regex_t * from)"		1189479	0					
ANR	1189481	CompoundStatement		5215:0:117737:117811	1189479	0					
ANR	1189482	ExpressionStatement	THREAD_ATOMIC_START	5216:2:117741:117760	1189479	0	True				
ANR	1189483	Identifier	THREAD_ATOMIC_START		1189479	0					
ANR	1189484	ExpressionStatement	"REGEX_TRANSFER ( to , from )"	5217:2:117764:117788	1189479	1	True				
ANR	1189485	CallExpression	"REGEX_TRANSFER ( to , from )"		1189479	0					
ANR	1189486	Callee	REGEX_TRANSFER		1189479	0					
ANR	1189487	Identifier	REGEX_TRANSFER		1189479	0					
ANR	1189488	ArgumentList	to		1189479	1					
ANR	1189489	Argument	to		1189479	0					
ANR	1189490	Identifier	to		1189479	0					
ANR	1189491	Argument	from		1189479	1					
ANR	1189492	Identifier	from		1189479	0					
ANR	1189493	ExpressionStatement	THREAD_ATOMIC_END	5218:2:117792:117809	1189479	2	True				
ANR	1189494	Identifier	THREAD_ATOMIC_END		1189479	0					
ANR	1189495	ReturnType	extern void		1189479	1					
ANR	1189496	Identifier	onig_transfer		1189479	2					
ANR	1189497	ParameterList	"regex_t * to , regex_t * from"		1189479	3					
ANR	1189498	Parameter	regex_t * to	5214:14:117709:117719	1189479	0	True				
ANR	1189499	ParameterType	regex_t *		1189479	0					
ANR	1189500	Identifier	to		1189479	1					
ANR	1189501	Parameter	regex_t * from	5214:27:117722:117734	1189479	1	True				
ANR	1189502	ParameterType	regex_t *		1189479	0					
ANR	1189503	Identifier	from		1189479	1					
ANR	1189504	CFGEntryNode	ENTRY		1189479		True				
ANR	1189505	CFGExitNode	EXIT		1189479		True				
ANR	1189506	Symbol	from		1189479						
ANR	1189507	Symbol	to		1189479						
ANR	1189508	Function	onig_chain_link_add	5227:0:117934:118082							
ANR	1189509	FunctionDef	"onig_chain_link_add (regex_t * to , regex_t * add)"		1189508	0					
ANR	1189510	CompoundStatement		5229:0:117993:118082	1189508	0					
ANR	1189511	ExpressionStatement	THREAD_ATOMIC_START	5230:2:117997:118016	1189508	0	True				
ANR	1189512	Identifier	THREAD_ATOMIC_START		1189508	0					
ANR	1189513	ExpressionStatement	REGEX_CHAIN_HEAD ( to )	5231:2:118020:118040	1189508	1	True				
ANR	1189514	CallExpression	REGEX_CHAIN_HEAD ( to )		1189508	0					
ANR	1189515	Callee	REGEX_CHAIN_HEAD		1189508	0					
ANR	1189516	Identifier	REGEX_CHAIN_HEAD		1189508	0					
ANR	1189517	ArgumentList	to		1189508	1					
ANR	1189518	Argument	to		1189508	0					
ANR	1189519	Identifier	to		1189508	0					
ANR	1189520	ExpressionStatement	to -> chain = add	5232:2:118044:118059	1189508	2	True				
ANR	1189521	AssignmentExpression	to -> chain = add		1189508	0		=			
ANR	1189522	PtrMemberAccess	to -> chain		1189508	0					
ANR	1189523	Identifier	to		1189508	0					
ANR	1189524	Identifier	chain		1189508	1					
ANR	1189525	Identifier	add		1189508	1					
ANR	1189526	ExpressionStatement	THREAD_ATOMIC_END	5233:2:118063:118080	1189508	3	True				
ANR	1189527	Identifier	THREAD_ATOMIC_END		1189508	0					
ANR	1189528	ReturnType	extern void		1189508	1					
ANR	1189529	Identifier	onig_chain_link_add		1189508	2					
ANR	1189530	ParameterList	"regex_t * to , regex_t * add"		1189508	3					
ANR	1189531	Parameter	regex_t * to	5228:20:117966:117976	1189508	0	True				
ANR	1189532	ParameterType	regex_t *		1189508	0					
ANR	1189533	Identifier	to		1189508	1					
ANR	1189534	Parameter	regex_t * add	5228:33:117979:117990	1189508	1	True				
ANR	1189535	ParameterType	regex_t *		1189508	0					
ANR	1189536	Identifier	add		1189508	1					
ANR	1189537	CFGEntryNode	ENTRY		1189508		True				
ANR	1189538	CFGExitNode	EXIT		1189508		True				
ANR	1189539	Symbol	add		1189508						
ANR	1189540	Symbol	* to		1189508						
ANR	1189541	Symbol	to -> chain		1189508						
ANR	1189542	Symbol	to		1189508						
ANR	1189543	Function	onig_chain_reduce	5236:0:118085:118415							
ANR	1189544	FunctionDef	onig_chain_reduce (regex_t * reg)		1189543	0					
ANR	1189545	CompoundStatement		5238:0:118129:118415	1189543	0					
ANR	1189546	IdentifierDeclStatement	"regex_t * head , * prev ;"	5239:2:118133:118153	1189543	0	True				
ANR	1189547	IdentifierDecl	* head		1189543	0					
ANR	1189548	IdentifierDeclType	regex_t *		1189543	0					
ANR	1189549	Identifier	head		1189543	1					
ANR	1189550	IdentifierDecl	* prev		1189543	1					
ANR	1189551	IdentifierDeclType	regex_t *		1189543	0					
ANR	1189552	Identifier	prev		1189543	1					
ANR	1189553	ExpressionStatement	prev = reg	5241:2:118158:118168	1189543	1	True				
ANR	1189554	AssignmentExpression	prev = reg		1189543	0		=			
ANR	1189555	Identifier	prev		1189543	0					
ANR	1189556	Identifier	reg		1189543	1					
ANR	1189557	ExpressionStatement	head = prev -> chain	5242:2:118172:118190	1189543	2	True				
ANR	1189558	AssignmentExpression	head = prev -> chain		1189543	0		=			
ANR	1189559	Identifier	head		1189543	0					
ANR	1189560	PtrMemberAccess	prev -> chain		1189543	1					
ANR	1189561	Identifier	prev		1189543	0					
ANR	1189562	Identifier	chain		1189543	1					
ANR	1189563	IfStatement	if ( IS_NOT_NULL ( head ) )		1189543	3					
ANR	1189564	Condition	IS_NOT_NULL ( head )	5243:6:118198:118214	1189543	0	True				
ANR	1189565	CallExpression	IS_NOT_NULL ( head )		1189543	0					
ANR	1189566	Callee	IS_NOT_NULL		1189543	0					
ANR	1189567	Identifier	IS_NOT_NULL		1189543	0					
ANR	1189568	ArgumentList	head		1189543	1					
ANR	1189569	Argument	head		1189543	0					
ANR	1189570	Identifier	head		1189543	0					
ANR	1189571	CompoundStatement		6:25:87:87	1189543	1					
ANR	1189572	ExpressionStatement	reg -> state = ONIG_STATE_MODIFY	5244:4:118223:118253	1189543	0	True				
ANR	1189573	AssignmentExpression	reg -> state = ONIG_STATE_MODIFY		1189543	0		=			
ANR	1189574	PtrMemberAccess	reg -> state		1189543	0					
ANR	1189575	Identifier	reg		1189543	0					
ANR	1189576	Identifier	state		1189543	1					
ANR	1189577	Identifier	ONIG_STATE_MODIFY		1189543	1					
ANR	1189578	WhileStatement	while ( IS_NOT_NULL ( head -> chain ) )		1189543	1					
ANR	1189579	Condition	IS_NOT_NULL ( head -> chain )	5245:11:118266:118289	1189543	0	True				
ANR	1189580	CallExpression	IS_NOT_NULL ( head -> chain )		1189543	0					
ANR	1189581	Callee	IS_NOT_NULL		1189543	0					
ANR	1189582	Identifier	IS_NOT_NULL		1189543	0					
ANR	1189583	ArgumentList	head -> chain		1189543	1					
ANR	1189584	Argument	head -> chain		1189543	0					
ANR	1189585	PtrMemberAccess	head -> chain		1189543	0					
ANR	1189586	Identifier	head		1189543	0					
ANR	1189587	Identifier	chain		1189543	1					
ANR	1189588	CompoundStatement		8:37:162:162	1189543	1					
ANR	1189589	ExpressionStatement	prev = head	5246:6:118300:118311	1189543	0	True				
ANR	1189590	AssignmentExpression	prev = head		1189543	0		=			
ANR	1189591	Identifier	prev		1189543	0					
ANR	1189592	Identifier	head		1189543	1					
ANR	1189593	ExpressionStatement	head = head -> chain	5247:6:118319:118337	1189543	1	True				
ANR	1189594	AssignmentExpression	head = head -> chain		1189543	0		=			
ANR	1189595	Identifier	head		1189543	0					
ANR	1189596	PtrMemberAccess	head -> chain		1189543	1					
ANR	1189597	Identifier	head		1189543	0					
ANR	1189598	Identifier	chain		1189543	1					
ANR	1189599	ExpressionStatement	prev -> chain = ( regex_t * ) NULL	5249:4:118349:118378	1189543	2	True				
ANR	1189600	AssignmentExpression	prev -> chain = ( regex_t * ) NULL		1189543	0		=			
ANR	1189601	PtrMemberAccess	prev -> chain		1189543	0					
ANR	1189602	Identifier	prev		1189543	0					
ANR	1189603	Identifier	chain		1189543	1					
ANR	1189604	CastExpression	( regex_t * ) NULL		1189543	1					
ANR	1189605	CastTarget	regex_t *		1189543	0					
ANR	1189606	Identifier	NULL		1189543	1					
ANR	1189607	ExpressionStatement	"REGEX_TRANSFER ( reg , head )"	5250:4:118384:118409	1189543	3	True				
ANR	1189608	CallExpression	"REGEX_TRANSFER ( reg , head )"		1189543	0					
ANR	1189609	Callee	REGEX_TRANSFER		1189543	0					
ANR	1189610	Identifier	REGEX_TRANSFER		1189543	0					
ANR	1189611	ArgumentList	reg		1189543	1					
ANR	1189612	Argument	reg		1189543	0					
ANR	1189613	Identifier	reg		1189543	0					
ANR	1189614	Argument	head		1189543	1					
ANR	1189615	Identifier	head		1189543	0					
ANR	1189616	ReturnType	extern void		1189543	1					
ANR	1189617	Identifier	onig_chain_reduce		1189543	2					
ANR	1189618	ParameterList	regex_t * reg		1189543	3					
ANR	1189619	Parameter	regex_t * reg	5237:18:118115:118126	1189543	0	True				
ANR	1189620	ParameterType	regex_t *		1189543	0					
ANR	1189621	Identifier	reg		1189543	1					
ANR	1189622	CFGEntryNode	ENTRY		1189543		True				
ANR	1189623	CFGExitNode	EXIT		1189543		True				
ANR	1189624	Symbol	head		1189543						
ANR	1189625	Symbol	IS_NOT_NULL		1189543						
ANR	1189626	Symbol	reg -> state		1189543						
ANR	1189627	Symbol	NULL		1189543						
ANR	1189628	Symbol	reg		1189543						
ANR	1189629	Symbol	prev		1189543						
ANR	1189630	Symbol	ONIG_STATE_MODIFY		1189543						
ANR	1189631	Symbol	prev -> chain		1189543						
ANR	1189632	Symbol	* head		1189543						
ANR	1189633	Symbol	* prev		1189543						
ANR	1189634	Symbol	* reg		1189543						
ANR	1189635	Symbol	head -> chain		1189543						
ANR	1189636	DeclStmt									
ANR	1189637	Decl							void print_compiled_byte_code_list	void print_compiled_byte_code_list	P_
ANR	1189638	DeclStmt									
ANR	1189639	Decl							void print_tree	void print_tree	P_
ANR	1189640	Function	onig_compile	5261:0:118601:123231							
ANR	1189641	FunctionDef	"onig_compile (regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigErrorInfo * einfo)"		1189640	0					
ANR	1189642	CompoundStatement		5264:0:118716:123231	1189640	0					
ANR	1189643	Statement	define	5265:1:118719:118724	1189640	0	True				
ANR	1189644	Statement	COMPILE_INIT_SIZE	5265:8:118726:118742	1189640	1	True				
ANR	1189645	Statement	20	5265:27:118745:118746	1189640	2	True				
ANR	1189646	IdentifierDeclStatement	"int r , init_size ;"	5267:2:118751:118767	1189640	3	True				
ANR	1189647	IdentifierDecl	r		1189640	0					
ANR	1189648	IdentifierDeclType	int		1189640	0					
ANR	1189649	Identifier	r		1189640	1					
ANR	1189650	IdentifierDecl	init_size		1189640	1					
ANR	1189651	IdentifierDeclType	int		1189640	0					
ANR	1189652	Identifier	init_size		1189640	1					
ANR	1189653	IdentifierDeclStatement	Node * root ;	5268:2:118771:118782	1189640	4	True				
ANR	1189654	IdentifierDecl	* root		1189640	0					
ANR	1189655	IdentifierDeclType	Node *		1189640	0					
ANR	1189656	Identifier	root		1189640	1					
ANR	1189657	IdentifierDeclStatement	ScanEnv scan_env ;	5269:2:118786:118803	1189640	5	True				
ANR	1189658	IdentifierDecl	scan_env		1189640	0					
ANR	1189659	IdentifierDeclType	ScanEnv		1189640	0					
ANR	1189660	Identifier	scan_env		1189640	1					
ANR	1189661	IdentifierDeclStatement	UnsetAddrList uslist ;	5271:2:118830:118851	1189640	6	True				
ANR	1189662	IdentifierDecl	uslist		1189640	0					
ANR	1189663	IdentifierDeclType	UnsetAddrList		1189640	0					
ANR	1189664	Identifier	uslist		1189640	1					
ANR	1189665	IfStatement	if ( IS_NOT_NULL ( einfo ) )		1189640	7					
ANR	1189666	Condition	IS_NOT_NULL ( einfo )	5274:6:118867:118884	1189640	0	True				
ANR	1189667	CallExpression	IS_NOT_NULL ( einfo )		1189640	0					
ANR	1189668	Callee	IS_NOT_NULL		1189640	0					
ANR	1189669	Identifier	IS_NOT_NULL		1189640	0					
ANR	1189670	ArgumentList	einfo		1189640	1					
ANR	1189671	Argument	einfo		1189640	0					
ANR	1189672	Identifier	einfo		1189640	0					
ANR	1189673	ExpressionStatement	einfo -> par = ( UChar * ) NULL	5274:26:118887:118913	1189640	1	True				
ANR	1189674	AssignmentExpression	einfo -> par = ( UChar * ) NULL		1189640	0		=			
ANR	1189675	PtrMemberAccess	einfo -> par		1189640	0					
ANR	1189676	Identifier	einfo		1189640	0					
ANR	1189677	Identifier	par		1189640	1					
ANR	1189678	CastExpression	( UChar * ) NULL		1189640	1					
ANR	1189679	CastTarget	UChar *		1189640	0					
ANR	1189680	Identifier	NULL		1189640	1					
ANR	1189681	ExpressionStatement	reg -> state = ONIG_STATE_COMPILING	5276:2:118918:118951	1189640	8	True				
ANR	1189682	AssignmentExpression	reg -> state = ONIG_STATE_COMPILING		1189640	0		=			
ANR	1189683	PtrMemberAccess	reg -> state		1189640	0					
ANR	1189684	Identifier	reg		1189640	0					
ANR	1189685	Identifier	state		1189640	1					
ANR	1189686	Identifier	ONIG_STATE_COMPILING		1189640	1					
ANR	1189687	ExpressionStatement	"print_enc_string ( stderr , reg -> enc , pattern , pattern_end )"	5279:2:118974:119030	1189640	9	True				
ANR	1189688	CallExpression	"print_enc_string ( stderr , reg -> enc , pattern , pattern_end )"		1189640	0					
ANR	1189689	Callee	print_enc_string		1189640	0					
ANR	1189690	Identifier	print_enc_string		1189640	0					
ANR	1189691	ArgumentList	stderr		1189640	1					
ANR	1189692	Argument	stderr		1189640	0					
ANR	1189693	Identifier	stderr		1189640	0					
ANR	1189694	Argument	reg -> enc		1189640	1					
ANR	1189695	PtrMemberAccess	reg -> enc		1189640	0					
ANR	1189696	Identifier	reg		1189640	0					
ANR	1189697	Identifier	enc		1189640	1					
ANR	1189698	Argument	pattern		1189640	2					
ANR	1189699	Identifier	pattern		1189640	0					
ANR	1189700	Argument	pattern_end		1189640	3					
ANR	1189701	Identifier	pattern_end		1189640	0					
ANR	1189702	IfStatement	if ( reg -> alloc == 0 )		1189640	10					
ANR	1189703	Condition	reg -> alloc == 0	5282:6:119046:119060	1189640	0	True				
ANR	1189704	EqualityExpression	reg -> alloc == 0		1189640	0		==			
ANR	1189705	PtrMemberAccess	reg -> alloc		1189640	0					
ANR	1189706	Identifier	reg		1189640	0					
ANR	1189707	Identifier	alloc		1189640	1					
ANR	1189708	PrimaryExpression	0		1189640	1					
ANR	1189709	CompoundStatement		19:23:346:346	1189640	1					
ANR	1189710	ExpressionStatement	init_size = ( pattern_end - pattern ) * 2	5283:4:119069:119108	1189640	0	True				
ANR	1189711	AssignmentExpression	init_size = ( pattern_end - pattern ) * 2		1189640	0		=			
ANR	1189712	Identifier	init_size		1189640	0					
ANR	1189713	MultiplicativeExpression	( pattern_end - pattern ) * 2		1189640	1		*			
ANR	1189714	AdditiveExpression	pattern_end - pattern		1189640	0		-			
ANR	1189715	Identifier	pattern_end		1189640	0					
ANR	1189716	Identifier	pattern		1189640	1					
ANR	1189717	PrimaryExpression	2		1189640	1					
ANR	1189718	IfStatement	if ( init_size <= 0 )		1189640	1					
ANR	1189719	Condition	init_size <= 0	5284:8:119118:119131	1189640	0	True				
ANR	1189720	RelationalExpression	init_size <= 0		1189640	0		<=			
ANR	1189721	Identifier	init_size		1189640	0					
ANR	1189722	PrimaryExpression	0		1189640	1					
ANR	1189723	ExpressionStatement	init_size = COMPILE_INIT_SIZE	5284:24:119134:119163	1189640	1	True				
ANR	1189724	AssignmentExpression	init_size = COMPILE_INIT_SIZE		1189640	0		=			
ANR	1189725	Identifier	init_size		1189640	0					
ANR	1189726	Identifier	COMPILE_INIT_SIZE		1189640	1					
ANR	1189727	ExpressionStatement	"r = BBUF_INIT ( reg , init_size )"	5285:4:119169:119198	1189640	2	True				
ANR	1189728	AssignmentExpression	"r = BBUF_INIT ( reg , init_size )"		1189640	0		=			
ANR	1189729	Identifier	r		1189640	0					
ANR	1189730	CallExpression	"BBUF_INIT ( reg , init_size )"		1189640	1					
ANR	1189731	Callee	BBUF_INIT		1189640	0					
ANR	1189732	Identifier	BBUF_INIT		1189640	0					
ANR	1189733	ArgumentList	reg		1189640	1					
ANR	1189734	Argument	reg		1189640	0					
ANR	1189735	Identifier	reg		1189640	0					
ANR	1189736	Argument	init_size		1189640	1					
ANR	1189737	Identifier	init_size		1189640	0					
ANR	1189738	IfStatement	if ( r != 0 )		1189640	3					
ANR	1189739	Condition	r != 0	5286:8:119208:119213	1189640	0	True				
ANR	1189740	EqualityExpression	r != 0		1189640	0		!=			
ANR	1189741	Identifier	r		1189640	0					
ANR	1189742	PrimaryExpression	0		1189640	1					
ANR	1189743	GotoStatement	goto end ;	5286:16:119216:119224	1189640	1	True				
ANR	1189744	Identifier	end		1189640	0					
ANR	1189745	ElseStatement	else		1189640	0					
ANR	1189746	ExpressionStatement	reg -> used = 0	5289:4:119241:119254	1189640	0	True				
ANR	1189747	AssignmentExpression	reg -> used = 0		1189640	0		=			
ANR	1189748	PtrMemberAccess	reg -> used		1189640	0					
ANR	1189749	Identifier	reg		1189640	0					
ANR	1189750	Identifier	used		1189640	1					
ANR	1189751	PrimaryExpression	0		1189640	1					
ANR	1189752	ExpressionStatement	reg -> num_mem = 0	5291:2:119259:119286	1189640	11	True				
ANR	1189753	AssignmentExpression	reg -> num_mem = 0		1189640	0		=			
ANR	1189754	PtrMemberAccess	reg -> num_mem		1189640	0					
ANR	1189755	Identifier	reg		1189640	0					
ANR	1189756	Identifier	num_mem		1189640	1					
ANR	1189757	PrimaryExpression	0		1189640	1					
ANR	1189758	ExpressionStatement	reg -> num_repeat = 0	5292:2:119290:119317	1189640	12	True				
ANR	1189759	AssignmentExpression	reg -> num_repeat = 0		1189640	0		=			
ANR	1189760	PtrMemberAccess	reg -> num_repeat		1189640	0					
ANR	1189761	Identifier	reg		1189640	0					
ANR	1189762	Identifier	num_repeat		1189640	1					
ANR	1189763	PrimaryExpression	0		1189640	1					
ANR	1189764	ExpressionStatement	reg -> num_null_check = 0	5293:2:119321:119348	1189640	13	True				
ANR	1189765	AssignmentExpression	reg -> num_null_check = 0		1189640	0		=			
ANR	1189766	PtrMemberAccess	reg -> num_null_check		1189640	0					
ANR	1189767	Identifier	reg		1189640	0					
ANR	1189768	Identifier	num_null_check		1189640	1					
ANR	1189769	PrimaryExpression	0		1189640	1					
ANR	1189770	ExpressionStatement	reg -> repeat_range_alloc = 0	5294:2:119352:119379	1189640	14	True				
ANR	1189771	AssignmentExpression	reg -> repeat_range_alloc = 0		1189640	0		=			
ANR	1189772	PtrMemberAccess	reg -> repeat_range_alloc		1189640	0					
ANR	1189773	Identifier	reg		1189640	0					
ANR	1189774	Identifier	repeat_range_alloc		1189640	1					
ANR	1189775	PrimaryExpression	0		1189640	1					
ANR	1189776	ExpressionStatement	reg -> repeat_range = ( OnigRepeatRange * ) NULL	5295:2:119383:119432	1189640	15	True				
ANR	1189777	AssignmentExpression	reg -> repeat_range = ( OnigRepeatRange * ) NULL		1189640	0		=			
ANR	1189778	PtrMemberAccess	reg -> repeat_range		1189640	0					
ANR	1189779	Identifier	reg		1189640	0					
ANR	1189780	Identifier	repeat_range		1189640	1					
ANR	1189781	CastExpression	( OnigRepeatRange * ) NULL		1189640	1					
ANR	1189782	CastTarget	OnigRepeatRange *		1189640	0					
ANR	1189783	Identifier	NULL		1189640	1					
ANR	1189784	ExpressionStatement	reg -> num_comb_exp_check = 0	5297:2:119475:119502	1189640	16	True				
ANR	1189785	AssignmentExpression	reg -> num_comb_exp_check = 0		1189640	0		=			
ANR	1189786	PtrMemberAccess	reg -> num_comb_exp_check		1189640	0					
ANR	1189787	Identifier	reg		1189640	0					
ANR	1189788	Identifier	num_comb_exp_check		1189640	1					
ANR	1189789	PrimaryExpression	0		1189640	1					
ANR	1189790	ExpressionStatement	"r = onig_parse_make_tree ( & root , pattern , pattern_end , reg , & scan_env )"	5300:2:119514:119583	1189640	17	True				
ANR	1189791	AssignmentExpression	"r = onig_parse_make_tree ( & root , pattern , pattern_end , reg , & scan_env )"		1189640	0		=			
ANR	1189792	Identifier	r		1189640	0					
ANR	1189793	CallExpression	"onig_parse_make_tree ( & root , pattern , pattern_end , reg , & scan_env )"		1189640	1					
ANR	1189794	Callee	onig_parse_make_tree		1189640	0					
ANR	1189795	Identifier	onig_parse_make_tree		1189640	0					
ANR	1189796	ArgumentList	& root		1189640	1					
ANR	1189797	Argument	& root		1189640	0					
ANR	1189798	UnaryOperationExpression	& root		1189640	0					
ANR	1189799	UnaryOperator	&		1189640	0					
ANR	1189800	Identifier	root		1189640	1					
ANR	1189801	Argument	pattern		1189640	1					
ANR	1189802	Identifier	pattern		1189640	0					
ANR	1189803	Argument	pattern_end		1189640	2					
ANR	1189804	Identifier	pattern_end		1189640	0					
ANR	1189805	Argument	reg		1189640	3					
ANR	1189806	Identifier	reg		1189640	0					
ANR	1189807	Argument	& scan_env		1189640	4					
ANR	1189808	UnaryOperationExpression	& scan_env		1189640	0					
ANR	1189809	UnaryOperator	&		1189640	0					
ANR	1189810	Identifier	scan_env		1189640	1					
ANR	1189811	IfStatement	if ( r != 0 )		1189640	18					
ANR	1189812	Condition	r != 0	5301:6:119591:119596	1189640	0	True				
ANR	1189813	EqualityExpression	r != 0		1189640	0		!=			
ANR	1189814	Identifier	r		1189640	0					
ANR	1189815	PrimaryExpression	0		1189640	1					
ANR	1189816	GotoStatement	goto err ;	5301:14:119599:119607	1189640	1	True				
ANR	1189817	Identifier	err		1189640	0					
ANR	1189818	IfStatement	"if ( scan_env . num_named > 0 && IS_SYNTAX_BV ( scan_env . syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP ) )"		1189640	19					
ANR	1189819	Condition	"scan_env . num_named > 0 && IS_SYNTAX_BV ( scan_env . syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"	5305:6:119688:119852	1189640	0	True				
ANR	1189820	AndExpression	"scan_env . num_named > 0 && IS_SYNTAX_BV ( scan_env . syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		1189640	0		&&			
ANR	1189821	RelationalExpression	scan_env . num_named > 0		1189640	0		>			
ANR	1189822	MemberAccess	scan_env . num_named		1189640	0					
ANR	1189823	Identifier	scan_env		1189640	0					
ANR	1189824	Identifier	num_named		1189640	1					
ANR	1189825	PrimaryExpression	0		1189640	1					
ANR	1189826	AndExpression	"IS_SYNTAX_BV ( scan_env . syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		1189640	1		&&			
ANR	1189827	CallExpression	"IS_SYNTAX_BV ( scan_env . syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP )"		1189640	0					
ANR	1189828	Callee	IS_SYNTAX_BV		1189640	0					
ANR	1189829	Identifier	IS_SYNTAX_BV		1189640	0					
ANR	1189830	ArgumentList	scan_env . syntax		1189640	1					
ANR	1189831	Argument	scan_env . syntax		1189640	0					
ANR	1189832	MemberAccess	scan_env . syntax		1189640	0					
ANR	1189833	Identifier	scan_env		1189640	0					
ANR	1189834	Identifier	syntax		1189640	1					
ANR	1189835	Argument	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		1189640	1					
ANR	1189836	Identifier	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		1189640	0					
ANR	1189837	UnaryOperationExpression	"! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		1189640	1					
ANR	1189838	UnaryOperator	!		1189640	0					
ANR	1189839	CallExpression	"ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		1189640	1					
ANR	1189840	Callee	ONIG_IS_OPTION_ON		1189640	0					
ANR	1189841	Identifier	ONIG_IS_OPTION_ON		1189640	0					
ANR	1189842	ArgumentList	reg -> options		1189640	1					
ANR	1189843	Argument	reg -> options		1189640	0					
ANR	1189844	PtrMemberAccess	reg -> options		1189640	0					
ANR	1189845	Identifier	reg		1189640	0					
ANR	1189846	Identifier	options		1189640	1					
ANR	1189847	Argument	ONIG_OPTION_CAPTURE_GROUP		1189640	1					
ANR	1189848	Identifier	ONIG_OPTION_CAPTURE_GROUP		1189640	0					
ANR	1189849	CompoundStatement		44:67:1138:1138	1189640	1					
ANR	1189850	IfStatement	if ( scan_env . num_named != scan_env . num_mem )		1189640	0					
ANR	1189851	Condition	scan_env . num_named != scan_env . num_mem	5308:8:119865:119902	1189640	0	True				
ANR	1189852	EqualityExpression	scan_env . num_named != scan_env . num_mem		1189640	0		!=			
ANR	1189853	MemberAccess	scan_env . num_named		1189640	0					
ANR	1189854	Identifier	scan_env		1189640	0					
ANR	1189855	Identifier	num_named		1189640	1					
ANR	1189856	MemberAccess	scan_env . num_mem		1189640	1					
ANR	1189857	Identifier	scan_env		1189640	0					
ANR	1189858	Identifier	num_mem		1189640	1					
ANR	1189859	ExpressionStatement	"r = disable_noname_group_capture ( & root , reg , & scan_env )"	5309:6:119911:119966	1189640	1	True				
ANR	1189860	AssignmentExpression	"r = disable_noname_group_capture ( & root , reg , & scan_env )"		1189640	0		=			
ANR	1189861	Identifier	r		1189640	0					
ANR	1189862	CallExpression	"disable_noname_group_capture ( & root , reg , & scan_env )"		1189640	1					
ANR	1189863	Callee	disable_noname_group_capture		1189640	0					
ANR	1189864	Identifier	disable_noname_group_capture		1189640	0					
ANR	1189865	ArgumentList	& root		1189640	1					
ANR	1189866	Argument	& root		1189640	0					
ANR	1189867	UnaryOperationExpression	& root		1189640	0					
ANR	1189868	UnaryOperator	&		1189640	0					
ANR	1189869	Identifier	root		1189640	1					
ANR	1189870	Argument	reg		1189640	1					
ANR	1189871	Identifier	reg		1189640	0					
ANR	1189872	Argument	& scan_env		1189640	2					
ANR	1189873	UnaryOperationExpression	& scan_env		1189640	0					
ANR	1189874	UnaryOperator	&		1189640	0					
ANR	1189875	Identifier	scan_env		1189640	1					
ANR	1189876	ElseStatement	else		1189640	0					
ANR	1189877	ExpressionStatement	r = numbered_ref_check ( root )	5311:6:119983:120011	1189640	0	True				
ANR	1189878	AssignmentExpression	r = numbered_ref_check ( root )		1189640	0		=			
ANR	1189879	Identifier	r		1189640	0					
ANR	1189880	CallExpression	numbered_ref_check ( root )		1189640	1					
ANR	1189881	Callee	numbered_ref_check		1189640	0					
ANR	1189882	Identifier	numbered_ref_check		1189640	0					
ANR	1189883	ArgumentList	root		1189640	1					
ANR	1189884	Argument	root		1189640	0					
ANR	1189885	Identifier	root		1189640	0					
ANR	1189886	IfStatement	if ( r != 0 )		1189640	1					
ANR	1189887	Condition	r != 0	5313:8:120022:120027	1189640	0	True				
ANR	1189888	EqualityExpression	r != 0		1189640	0		!=			
ANR	1189889	Identifier	r		1189640	0					
ANR	1189890	PrimaryExpression	0		1189640	1					
ANR	1189891	GotoStatement	goto err ;	5313:16:120030:120038	1189640	1	True				
ANR	1189892	Identifier	err		1189640	0					
ANR	1189893	IfStatement	if ( scan_env . num_call > 0 )		1189640	20					
ANR	1189894	Condition	scan_env . num_call > 0	5318:6:120081:120101	1189640	0	True				
ANR	1189895	RelationalExpression	scan_env . num_call > 0		1189640	0		>			
ANR	1189896	MemberAccess	scan_env . num_call		1189640	0					
ANR	1189897	Identifier	scan_env		1189640	0					
ANR	1189898	Identifier	num_call		1189640	1					
ANR	1189899	PrimaryExpression	0		1189640	1					
ANR	1189900	CompoundStatement		55:29:1387:1387	1189640	1					
ANR	1189901	ExpressionStatement	"r = unset_addr_list_init ( & uslist , scan_env . num_call )"	5319:4:120110:120162	1189640	0	True				
ANR	1189902	AssignmentExpression	"r = unset_addr_list_init ( & uslist , scan_env . num_call )"		1189640	0		=			
ANR	1189903	Identifier	r		1189640	0					
ANR	1189904	CallExpression	"unset_addr_list_init ( & uslist , scan_env . num_call )"		1189640	1					
ANR	1189905	Callee	unset_addr_list_init		1189640	0					
ANR	1189906	Identifier	unset_addr_list_init		1189640	0					
ANR	1189907	ArgumentList	& uslist		1189640	1					
ANR	1189908	Argument	& uslist		1189640	0					
ANR	1189909	UnaryOperationExpression	& uslist		1189640	0					
ANR	1189910	UnaryOperator	&		1189640	0					
ANR	1189911	Identifier	uslist		1189640	1					
ANR	1189912	Argument	scan_env . num_call		1189640	1					
ANR	1189913	MemberAccess	scan_env . num_call		1189640	0					
ANR	1189914	Identifier	scan_env		1189640	0					
ANR	1189915	Identifier	num_call		1189640	1					
ANR	1189916	IfStatement	if ( r != 0 )		1189640	1					
ANR	1189917	Condition	r != 0	5320:8:120172:120177	1189640	0	True				
ANR	1189918	EqualityExpression	r != 0		1189640	0		!=			
ANR	1189919	Identifier	r		1189640	0					
ANR	1189920	PrimaryExpression	0		1189640	1					
ANR	1189921	GotoStatement	goto err ;	5320:16:120180:120188	1189640	1	True				
ANR	1189922	Identifier	err		1189640	0					
ANR	1189923	ExpressionStatement	scan_env . unset_addr_list = & uslist	5321:4:120194:120228	1189640	2	True				
ANR	1189924	AssignmentExpression	scan_env . unset_addr_list = & uslist		1189640	0		=			
ANR	1189925	MemberAccess	scan_env . unset_addr_list		1189640	0					
ANR	1189926	Identifier	scan_env		1189640	0					
ANR	1189927	Identifier	unset_addr_list		1189640	1					
ANR	1189928	UnaryOperationExpression	& uslist		1189640	1					
ANR	1189929	UnaryOperator	&		1189640	0					
ANR	1189930	Identifier	uslist		1189640	1					
ANR	1189931	ExpressionStatement	"r = setup_subexp_call ( root , & scan_env )"	5322:4:120234:120272	1189640	3	True				
ANR	1189932	AssignmentExpression	"r = setup_subexp_call ( root , & scan_env )"		1189640	0		=			
ANR	1189933	Identifier	r		1189640	0					
ANR	1189934	CallExpression	"setup_subexp_call ( root , & scan_env )"		1189640	1					
ANR	1189935	Callee	setup_subexp_call		1189640	0					
ANR	1189936	Identifier	setup_subexp_call		1189640	0					
ANR	1189937	ArgumentList	root		1189640	1					
ANR	1189938	Argument	root		1189640	0					
ANR	1189939	Identifier	root		1189640	0					
ANR	1189940	Argument	& scan_env		1189640	1					
ANR	1189941	UnaryOperationExpression	& scan_env		1189640	0					
ANR	1189942	UnaryOperator	&		1189640	0					
ANR	1189943	Identifier	scan_env		1189640	1					
ANR	1189944	IfStatement	if ( r != 0 )		1189640	4					
ANR	1189945	Condition	r != 0	5323:8:120282:120287	1189640	0	True				
ANR	1189946	EqualityExpression	r != 0		1189640	0		!=			
ANR	1189947	Identifier	r		1189640	0					
ANR	1189948	PrimaryExpression	0		1189640	1					
ANR	1189949	GotoStatement	goto err_unset ;	5323:16:120290:120304	1189640	1	True				
ANR	1189950	Identifier	err_unset		1189640	0					
ANR	1189951	ExpressionStatement	"r = subexp_recursive_check_trav ( root , & scan_env )"	5324:4:120310:120358	1189640	5	True				
ANR	1189952	AssignmentExpression	"r = subexp_recursive_check_trav ( root , & scan_env )"		1189640	0		=			
ANR	1189953	Identifier	r		1189640	0					
ANR	1189954	CallExpression	"subexp_recursive_check_trav ( root , & scan_env )"		1189640	1					
ANR	1189955	Callee	subexp_recursive_check_trav		1189640	0					
ANR	1189956	Identifier	subexp_recursive_check_trav		1189640	0					
ANR	1189957	ArgumentList	root		1189640	1					
ANR	1189958	Argument	root		1189640	0					
ANR	1189959	Identifier	root		1189640	0					
ANR	1189960	Argument	& scan_env		1189640	1					
ANR	1189961	UnaryOperationExpression	& scan_env		1189640	0					
ANR	1189962	UnaryOperator	&		1189640	0					
ANR	1189963	Identifier	scan_env		1189640	1					
ANR	1189964	IfStatement	if ( r < 0 )		1189640	6					
ANR	1189965	Condition	r < 0	5325:8:120368:120373	1189640	0	True				
ANR	1189966	RelationalExpression	r < 0		1189640	0		<			
ANR	1189967	Identifier	r		1189640	0					
ANR	1189968	PrimaryExpression	0		1189640	1					
ANR	1189969	GotoStatement	goto err_unset ;	5325:16:120376:120390	1189640	1	True				
ANR	1189970	Identifier	err_unset		1189640	0					
ANR	1189971	ExpressionStatement	"r = subexp_inf_recursive_check_trav ( root , & scan_env )"	5326:4:120396:120448	1189640	7	True				
ANR	1189972	AssignmentExpression	"r = subexp_inf_recursive_check_trav ( root , & scan_env )"		1189640	0		=			
ANR	1189973	Identifier	r		1189640	0					
ANR	1189974	CallExpression	"subexp_inf_recursive_check_trav ( root , & scan_env )"		1189640	1					
ANR	1189975	Callee	subexp_inf_recursive_check_trav		1189640	0					
ANR	1189976	Identifier	subexp_inf_recursive_check_trav		1189640	0					
ANR	1189977	ArgumentList	root		1189640	1					
ANR	1189978	Argument	root		1189640	0					
ANR	1189979	Identifier	root		1189640	0					
ANR	1189980	Argument	& scan_env		1189640	1					
ANR	1189981	UnaryOperationExpression	& scan_env		1189640	0					
ANR	1189982	UnaryOperator	&		1189640	0					
ANR	1189983	Identifier	scan_env		1189640	1					
ANR	1189984	IfStatement	if ( r != 0 )		1189640	8					
ANR	1189985	Condition	r != 0	5327:8:120458:120463	1189640	0	True				
ANR	1189986	EqualityExpression	r != 0		1189640	0		!=			
ANR	1189987	Identifier	r		1189640	0					
ANR	1189988	PrimaryExpression	0		1189640	1					
ANR	1189989	GotoStatement	goto err_unset ;	5327:16:120466:120480	1189640	1	True				
ANR	1189990	Identifier	err_unset		1189640	0					
ANR	1189991	ExpressionStatement	reg -> num_call = scan_env . num_call	5329:4:120487:120520	1189640	9	True				
ANR	1189992	AssignmentExpression	reg -> num_call = scan_env . num_call		1189640	0		=			
ANR	1189993	PtrMemberAccess	reg -> num_call		1189640	0					
ANR	1189994	Identifier	reg		1189640	0					
ANR	1189995	Identifier	num_call		1189640	1					
ANR	1189996	MemberAccess	scan_env . num_call		1189640	1					
ANR	1189997	Identifier	scan_env		1189640	0					
ANR	1189998	Identifier	num_call		1189640	1					
ANR	1189999	ElseStatement	else		1189640	0					
ANR	1190000	ExpressionStatement	reg -> num_call = 0	5332:4:120537:120554	1189640	0	True				
ANR	1190001	AssignmentExpression	reg -> num_call = 0		1189640	0		=			
ANR	1190002	PtrMemberAccess	reg -> num_call		1189640	0					
ANR	1190003	Identifier	reg		1189640	0					
ANR	1190004	Identifier	num_call		1189640	1					
ANR	1190005	PrimaryExpression	0		1189640	1					
ANR	1190006	ExpressionStatement	"r = setup_tree ( root , reg , 0 , & scan_env )"	5335:2:120566:120605	1189640	21	True				
ANR	1190007	AssignmentExpression	"r = setup_tree ( root , reg , 0 , & scan_env )"		1189640	0		=			
ANR	1190008	Identifier	r		1189640	0					
ANR	1190009	CallExpression	"setup_tree ( root , reg , 0 , & scan_env )"		1189640	1					
ANR	1190010	Callee	setup_tree		1189640	0					
ANR	1190011	Identifier	setup_tree		1189640	0					
ANR	1190012	ArgumentList	root		1189640	1					
ANR	1190013	Argument	root		1189640	0					
ANR	1190014	Identifier	root		1189640	0					
ANR	1190015	Argument	reg		1189640	1					
ANR	1190016	Identifier	reg		1189640	0					
ANR	1190017	Argument	0		1189640	2					
ANR	1190018	PrimaryExpression	0		1189640	0					
ANR	1190019	Argument	& scan_env		1189640	3					
ANR	1190020	UnaryOperationExpression	& scan_env		1189640	0					
ANR	1190021	UnaryOperator	&		1189640	0					
ANR	1190022	Identifier	scan_env		1189640	1					
ANR	1190023	IfStatement	if ( r != 0 )		1189640	22					
ANR	1190024	Condition	r != 0	5336:6:120613:120618	1189640	0	True				
ANR	1190025	EqualityExpression	r != 0		1189640	0		!=			
ANR	1190026	Identifier	r		1189640	0					
ANR	1190027	PrimaryExpression	0		1189640	1					
ANR	1190028	GotoStatement	goto err_unset ;	5336:14:120621:120635	1189640	1	True				
ANR	1190029	Identifier	err_unset		1189640	0					
ANR	1190030	ExpressionStatement	"print_tree ( stderr , root )"	5339:2:120669:120693	1189640	23	True				
ANR	1190031	CallExpression	"print_tree ( stderr , root )"		1189640	0					
ANR	1190032	Callee	print_tree		1189640	0					
ANR	1190033	Identifier	print_tree		1189640	0					
ANR	1190034	ArgumentList	stderr		1189640	1					
ANR	1190035	Argument	stderr		1189640	0					
ANR	1190036	Identifier	stderr		1189640	0					
ANR	1190037	Argument	root		1189640	1					
ANR	1190038	Identifier	root		1189640	0					
ANR	1190039	ExpressionStatement	reg -> capture_history = scan_env . capture_history	5342:2:120705:120753	1189640	24	True				
ANR	1190040	AssignmentExpression	reg -> capture_history = scan_env . capture_history		1189640	0		=			
ANR	1190041	PtrMemberAccess	reg -> capture_history		1189640	0					
ANR	1190042	Identifier	reg		1189640	0					
ANR	1190043	Identifier	capture_history		1189640	1					
ANR	1190044	MemberAccess	scan_env . capture_history		1189640	1					
ANR	1190045	Identifier	scan_env		1189640	0					
ANR	1190046	Identifier	capture_history		1189640	1					
ANR	1190047	ExpressionStatement	reg -> bt_mem_start = scan_env . bt_mem_start	5343:2:120757:120802	1189640	25	True				
ANR	1190048	AssignmentExpression	reg -> bt_mem_start = scan_env . bt_mem_start		1189640	0		=			
ANR	1190049	PtrMemberAccess	reg -> bt_mem_start		1189640	0					
ANR	1190050	Identifier	reg		1189640	0					
ANR	1190051	Identifier	bt_mem_start		1189640	1					
ANR	1190052	MemberAccess	scan_env . bt_mem_start		1189640	1					
ANR	1190053	Identifier	scan_env		1189640	0					
ANR	1190054	Identifier	bt_mem_start		1189640	1					
ANR	1190055	ExpressionStatement	reg -> bt_mem_start |= reg -> capture_history	5344:2:120806:120850	1189640	26	True				
ANR	1190056	AssignmentExpression	reg -> bt_mem_start |= reg -> capture_history		1189640	0		|=			
ANR	1190057	PtrMemberAccess	reg -> bt_mem_start		1189640	0					
ANR	1190058	Identifier	reg		1189640	0					
ANR	1190059	Identifier	bt_mem_start		1189640	1					
ANR	1190060	PtrMemberAccess	reg -> capture_history		1189640	1					
ANR	1190061	Identifier	reg		1189640	0					
ANR	1190062	Identifier	capture_history		1189640	1					
ANR	1190063	IfStatement	if ( IS_FIND_CONDITION ( reg -> options ) )		1189640	27					
ANR	1190064	Condition	IS_FIND_CONDITION ( reg -> options )	5345:6:120858:120888	1189640	0	True				
ANR	1190065	CallExpression	IS_FIND_CONDITION ( reg -> options )		1189640	0					
ANR	1190066	Callee	IS_FIND_CONDITION		1189640	0					
ANR	1190067	Identifier	IS_FIND_CONDITION		1189640	0					
ANR	1190068	ArgumentList	reg -> options		1189640	1					
ANR	1190069	Argument	reg -> options		1189640	0					
ANR	1190070	PtrMemberAccess	reg -> options		1189640	0					
ANR	1190071	Identifier	reg		1189640	0					
ANR	1190072	Identifier	options		1189640	1					
ANR	1190073	ExpressionStatement	BIT_STATUS_ON_ALL ( reg -> bt_mem_end )	5346:4:120895:120929	1189640	1	True				
ANR	1190074	CallExpression	BIT_STATUS_ON_ALL ( reg -> bt_mem_end )		1189640	0					
ANR	1190075	Callee	BIT_STATUS_ON_ALL		1189640	0					
ANR	1190076	Identifier	BIT_STATUS_ON_ALL		1189640	0					
ANR	1190077	ArgumentList	reg -> bt_mem_end		1189640	1					
ANR	1190078	Argument	reg -> bt_mem_end		1189640	0					
ANR	1190079	PtrMemberAccess	reg -> bt_mem_end		1189640	0					
ANR	1190080	Identifier	reg		1189640	0					
ANR	1190081	Identifier	bt_mem_end		1189640	1					
ANR	1190082	ElseStatement	else		1189640	0					
ANR	1190083	CompoundStatement		84:7:2221:2221	1189640	0					
ANR	1190084	ExpressionStatement	reg -> bt_mem_end = scan_env . bt_mem_end	5348:4:120944:120982	1189640	0	True				
ANR	1190085	AssignmentExpression	reg -> bt_mem_end = scan_env . bt_mem_end		1189640	0		=			
ANR	1190086	PtrMemberAccess	reg -> bt_mem_end		1189640	0					
ANR	1190087	Identifier	reg		1189640	0					
ANR	1190088	Identifier	bt_mem_end		1189640	1					
ANR	1190089	MemberAccess	scan_env . bt_mem_end		1189640	1					
ANR	1190090	Identifier	scan_env		1189640	0					
ANR	1190091	Identifier	bt_mem_end		1189640	1					
ANR	1190092	ExpressionStatement	reg -> bt_mem_end |= reg -> capture_history	5349:4:120988:121027	1189640	1	True				
ANR	1190093	AssignmentExpression	reg -> bt_mem_end |= reg -> capture_history		1189640	0		|=			
ANR	1190094	PtrMemberAccess	reg -> bt_mem_end		1189640	0					
ANR	1190095	Identifier	reg		1189640	0					
ANR	1190096	Identifier	bt_mem_end		1189640	1					
ANR	1190097	PtrMemberAccess	reg -> capture_history		1189640	1					
ANR	1190098	Identifier	reg		1189640	0					
ANR	1190099	Identifier	capture_history		1189640	1					
ANR	1190100	Statement	if	5353:2:121075:121076	1189640	28	True				
ANR	1190101	Statement	(	5353:5:121078:121078	1189640	29	True				
ANR	1190102	Statement	scan_env	5353:6:121079:121086	1189640	30	True				
ANR	1190103	Statement	.	5353:14:121087:121087	1189640	31	True				
ANR	1190104	Statement	backrefed_mem	5353:15:121088:121100	1189640	32	True				
ANR	1190105	Statement	==	5353:29:121102:121103	1189640	33	True				
ANR	1190106	Statement	0	5353:32:121105:121105	1189640	34	True				
ANR	1190107	Statement	||	5355:6:121136:121137	1189640	35	True				
ANR	1190108	Statement	scan_env	5355:9:121139:121146	1189640	36	True				
ANR	1190109	Statement	.	5355:17:121147:121147	1189640	37	True				
ANR	1190110	Statement	num_call	5355:18:121148:121155	1189640	38	True				
ANR	1190111	Statement	==	5355:27:121157:121158	1189640	39	True				
ANR	1190112	Statement	0	5355:30:121160:121160	1189640	40	True				
ANR	1190113	Statement	)	5357:6:121175:121175	1189640	41	True				
ANR	1190114	CompoundStatement		94:8:2460:2460	1189640	42					
ANR	1190115	ExpressionStatement	"setup_comb_exp_check ( root , 0 , & scan_env )"	5358:4:121183:121223	1189640	0	True				
ANR	1190116	CallExpression	"setup_comb_exp_check ( root , 0 , & scan_env )"		1189640	0					
ANR	1190117	Callee	setup_comb_exp_check		1189640	0					
ANR	1190118	Identifier	setup_comb_exp_check		1189640	0					
ANR	1190119	ArgumentList	root		1189640	1					
ANR	1190120	Argument	root		1189640	0					
ANR	1190121	Identifier	root		1189640	0					
ANR	1190122	Argument	0		1189640	1					
ANR	1190123	PrimaryExpression	0		1189640	0					
ANR	1190124	Argument	& scan_env		1189640	2					
ANR	1190125	UnaryOperationExpression	& scan_env		1189640	0					
ANR	1190126	UnaryOperator	&		1189640	0					
ANR	1190127	Identifier	scan_env		1189640	1					
ANR	1190128	IfStatement	if ( scan_env . has_recursion != 0 )		1189640	1					
ANR	1190129	Condition	scan_env . has_recursion != 0	5360:8:121256:121282	1189640	0	True				
ANR	1190130	EqualityExpression	scan_env . has_recursion != 0		1189640	0		!=			
ANR	1190131	MemberAccess	scan_env . has_recursion		1189640	0					
ANR	1190132	Identifier	scan_env		1189640	0					
ANR	1190133	Identifier	has_recursion		1189640	1					
ANR	1190134	PrimaryExpression	0		1189640	1					
ANR	1190135	CompoundStatement		97:37:2568:2568	1189640	1					
ANR	1190136	ExpressionStatement	scan_env . num_comb_exp_check = 0	5361:6:121293:121324	1189640	0	True				
ANR	1190137	AssignmentExpression	scan_env . num_comb_exp_check = 0		1189640	0		=			
ANR	1190138	MemberAccess	scan_env . num_comb_exp_check		1189640	0					
ANR	1190139	Identifier	scan_env		1189640	0					
ANR	1190140	Identifier	num_comb_exp_check		1189640	1					
ANR	1190141	PrimaryExpression	0		1189640	1					
ANR	1190142	ElseStatement	else		1189640	0					
ANR	1190143	IfStatement	if ( scan_env . comb_exp_max_regnum > 0 )		1189640	0					
ANR	1190144	Condition	scan_env . comb_exp_max_regnum > 0	5365:8:121356:121387	1189640	0	True				
ANR	1190145	RelationalExpression	scan_env . comb_exp_max_regnum > 0		1189640	0		>			
ANR	1190146	MemberAccess	scan_env . comb_exp_max_regnum		1189640	0					
ANR	1190147	Identifier	scan_env		1189640	0					
ANR	1190148	Identifier	comb_exp_max_regnum		1189640	1					
ANR	1190149	PrimaryExpression	0		1189640	1					
ANR	1190150	CompoundStatement		103:6:2681:2686	1189640	1					
ANR	1190151	IdentifierDeclStatement	int i ;	5366:6:121398:121403	1189640	0	True				
ANR	1190152	IdentifierDecl	i		1189640	0					
ANR	1190153	IdentifierDeclType	int		1189640	0					
ANR	1190154	Identifier	i		1189640	1					
ANR	1190155	ForStatement	for ( i = 1 ; i <= scan_env . comb_exp_max_regnum ; i ++ )		1189640	1					
ANR	1190156	ForInit	i = 1 ;	5367:11:121416:121421	1189640	0	True				
ANR	1190157	AssignmentExpression	i = 1		1189640	0		=			
ANR	1190158	Identifier	i		1189640	0					
ANR	1190159	PrimaryExpression	1		1189640	1					
ANR	1190160	Condition	i <= scan_env . comb_exp_max_regnum	5367:18:121423:121455	1189640	1	True				
ANR	1190161	RelationalExpression	i <= scan_env . comb_exp_max_regnum		1189640	0		<=			
ANR	1190162	Identifier	i		1189640	0					
ANR	1190163	MemberAccess	scan_env . comb_exp_max_regnum		1189640	1					
ANR	1190164	Identifier	scan_env		1189640	0					
ANR	1190165	Identifier	comb_exp_max_regnum		1189640	1					
ANR	1190166	PostIncDecOperationExpression	i ++	5367:53:121458:121460	1189640	2	True				
ANR	1190167	Identifier	i		1189640	0					
ANR	1190168	IncDec	++		1189640	1					
ANR	1190169	CompoundStatement		104:58:2746:2746	1189640	3					
ANR	1190170	IfStatement	"if ( BIT_STATUS_AT ( scan_env . backrefed_mem , i ) != 0 )"		1189640	0					
ANR	1190171	Condition	"BIT_STATUS_AT ( scan_env . backrefed_mem , i ) != 0"	5368:5:121470:121514	1189640	0	True				
ANR	1190172	EqualityExpression	"BIT_STATUS_AT ( scan_env . backrefed_mem , i ) != 0"		1189640	0		!=			
ANR	1190173	CallExpression	"BIT_STATUS_AT ( scan_env . backrefed_mem , i )"		1189640	0					
ANR	1190174	Callee	BIT_STATUS_AT		1189640	0					
ANR	1190175	Identifier	BIT_STATUS_AT		1189640	0					
ANR	1190176	ArgumentList	scan_env . backrefed_mem		1189640	1					
ANR	1190177	Argument	scan_env . backrefed_mem		1189640	0					
ANR	1190178	MemberAccess	scan_env . backrefed_mem		1189640	0					
ANR	1190179	Identifier	scan_env		1189640	0					
ANR	1190180	Identifier	backrefed_mem		1189640	1					
ANR	1190181	Argument	i		1189640	1					
ANR	1190182	Identifier	i		1189640	0					
ANR	1190183	PrimaryExpression	0		1189640	1					
ANR	1190184	CompoundStatement		105:52:2800:2800	1189640	1					
ANR	1190185	ExpressionStatement	scan_env . num_comb_exp_check = 0	5369:3:121522:121553	1189640	0	True				
ANR	1190186	AssignmentExpression	scan_env . num_comb_exp_check = 0		1189640	0		=			
ANR	1190187	MemberAccess	scan_env . num_comb_exp_check		1189640	0					
ANR	1190188	Identifier	scan_env		1189640	0					
ANR	1190189	Identifier	num_comb_exp_check		1189640	1					
ANR	1190190	PrimaryExpression	0		1189640	1					
ANR	1190191	BreakStatement	break ;	5370:3:121558:121563	1189640	1	True				
ANR	1190192	ExpressionStatement	reg -> num_comb_exp_check = scan_env . num_comb_exp_check	5376:2:121589:121642	1189640	43	True				
ANR	1190193	AssignmentExpression	reg -> num_comb_exp_check = scan_env . num_comb_exp_check		1189640	0		=			
ANR	1190194	PtrMemberAccess	reg -> num_comb_exp_check		1189640	0					
ANR	1190195	Identifier	reg		1189640	0					
ANR	1190196	Identifier	num_comb_exp_check		1189640	1					
ANR	1190197	MemberAccess	scan_env . num_comb_exp_check		1189640	1					
ANR	1190198	Identifier	scan_env		1189640	0					
ANR	1190199	Identifier	num_comb_exp_check		1189640	1					
ANR	1190200	ExpressionStatement	clear_optimize_info ( reg )	5379:2:121654:121678	1189640	44	True				
ANR	1190201	CallExpression	clear_optimize_info ( reg )		1189640	0					
ANR	1190202	Callee	clear_optimize_info		1189640	0					
ANR	1190203	Identifier	clear_optimize_info		1189640	0					
ANR	1190204	ArgumentList	reg		1189640	1					
ANR	1190205	Argument	reg		1189640	0					
ANR	1190206	Identifier	reg		1189640	0					
ANR	1190207	ExpressionStatement	"r = set_optimize_info_from_tree ( root , reg , & scan_env )"	5381:2:121709:121762	1189640	45	True				
ANR	1190208	AssignmentExpression	"r = set_optimize_info_from_tree ( root , reg , & scan_env )"		1189640	0		=			
ANR	1190209	Identifier	r		1189640	0					
ANR	1190210	CallExpression	"set_optimize_info_from_tree ( root , reg , & scan_env )"		1189640	1					
ANR	1190211	Callee	set_optimize_info_from_tree		1189640	0					
ANR	1190212	Identifier	set_optimize_info_from_tree		1189640	0					
ANR	1190213	ArgumentList	root		1189640	1					
ANR	1190214	Argument	root		1189640	0					
ANR	1190215	Identifier	root		1189640	0					
ANR	1190216	Argument	reg		1189640	1					
ANR	1190217	Identifier	reg		1189640	0					
ANR	1190218	Argument	& scan_env		1189640	2					
ANR	1190219	UnaryOperationExpression	& scan_env		1189640	0					
ANR	1190220	UnaryOperator	&		1189640	0					
ANR	1190221	Identifier	scan_env		1189640	1					
ANR	1190222	IfStatement	if ( r != 0 )		1189640	46					
ANR	1190223	Condition	r != 0	5382:6:121770:121775	1189640	0	True				
ANR	1190224	EqualityExpression	r != 0		1189640	0		!=			
ANR	1190225	Identifier	r		1189640	0					
ANR	1190226	PrimaryExpression	0		1189640	1					
ANR	1190227	GotoStatement	goto err_unset ;	5382:14:121778:121792	1189640	1	True				
ANR	1190228	Identifier	err_unset		1189640	0					
ANR	1190229	IfStatement	if ( IS_NOT_NULL ( scan_env . mem_nodes_dynamic ) )		1189640	47					
ANR	1190230	Condition	IS_NOT_NULL ( scan_env . mem_nodes_dynamic )	5385:6:121808:121846	1189640	0	True				
ANR	1190231	CallExpression	IS_NOT_NULL ( scan_env . mem_nodes_dynamic )		1189640	0					
ANR	1190232	Callee	IS_NOT_NULL		1189640	0					
ANR	1190233	Identifier	IS_NOT_NULL		1189640	0					
ANR	1190234	ArgumentList	scan_env . mem_nodes_dynamic		1189640	1					
ANR	1190235	Argument	scan_env . mem_nodes_dynamic		1189640	0					
ANR	1190236	MemberAccess	scan_env . mem_nodes_dynamic		1189640	0					
ANR	1190237	Identifier	scan_env		1189640	0					
ANR	1190238	Identifier	mem_nodes_dynamic		1189640	1					
ANR	1190239	CompoundStatement		122:47:3132:3132	1189640	1					
ANR	1190240	ExpressionStatement	xfree ( scan_env . mem_nodes_dynamic )	5386:4:121855:121888	1189640	0	True				
ANR	1190241	CallExpression	xfree ( scan_env . mem_nodes_dynamic )		1189640	0					
ANR	1190242	Callee	xfree		1189640	0					
ANR	1190243	Identifier	xfree		1189640	0					
ANR	1190244	ArgumentList	scan_env . mem_nodes_dynamic		1189640	1					
ANR	1190245	Argument	scan_env . mem_nodes_dynamic		1189640	0					
ANR	1190246	MemberAccess	scan_env . mem_nodes_dynamic		1189640	0					
ANR	1190247	Identifier	scan_env		1189640	0					
ANR	1190248	Identifier	mem_nodes_dynamic		1189640	1					
ANR	1190249	ExpressionStatement	scan_env . mem_nodes_dynamic = ( Node * * ) NULL	5387:4:121894:121936	1189640	1	True				
ANR	1190250	AssignmentExpression	scan_env . mem_nodes_dynamic = ( Node * * ) NULL		1189640	0		=			
ANR	1190251	MemberAccess	scan_env . mem_nodes_dynamic		1189640	0					
ANR	1190252	Identifier	scan_env		1189640	0					
ANR	1190253	Identifier	mem_nodes_dynamic		1189640	1					
ANR	1190254	CastExpression	( Node * * ) NULL		1189640	1					
ANR	1190255	CastTarget	Node * *		1189640	0					
ANR	1190256	Identifier	NULL		1189640	1					
ANR	1190257	ExpressionStatement	"r = compile_tree ( root , reg )"	5390:2:121945:121972	1189640	48	True				
ANR	1190258	AssignmentExpression	"r = compile_tree ( root , reg )"		1189640	0		=			
ANR	1190259	Identifier	r		1189640	0					
ANR	1190260	CallExpression	"compile_tree ( root , reg )"		1189640	1					
ANR	1190261	Callee	compile_tree		1189640	0					
ANR	1190262	Identifier	compile_tree		1189640	0					
ANR	1190263	ArgumentList	root		1189640	1					
ANR	1190264	Argument	root		1189640	0					
ANR	1190265	Identifier	root		1189640	0					
ANR	1190266	Argument	reg		1189640	1					
ANR	1190267	Identifier	reg		1189640	0					
ANR	1190268	IfStatement	if ( r == 0 )		1189640	49					
ANR	1190269	Condition	r == 0	5391:6:121980:121985	1189640	0	True				
ANR	1190270	EqualityExpression	r == 0		1189640	0		==			
ANR	1190271	Identifier	r		1189640	0					
ANR	1190272	PrimaryExpression	0		1189640	1					
ANR	1190273	CompoundStatement		128:14:3271:3271	1189640	1					
ANR	1190274	ExpressionStatement	"r = add_opcode ( reg , OP_END )"	5392:4:121994:122021	1189640	0	True				
ANR	1190275	AssignmentExpression	"r = add_opcode ( reg , OP_END )"		1189640	0		=			
ANR	1190276	Identifier	r		1189640	0					
ANR	1190277	CallExpression	"add_opcode ( reg , OP_END )"		1189640	1					
ANR	1190278	Callee	add_opcode		1189640	0					
ANR	1190279	Identifier	add_opcode		1189640	0					
ANR	1190280	ArgumentList	reg		1189640	1					
ANR	1190281	Argument	reg		1189640	0					
ANR	1190282	Identifier	reg		1189640	0					
ANR	1190283	Argument	OP_END		1189640	1					
ANR	1190284	Identifier	OP_END		1189640	0					
ANR	1190285	IfStatement	if ( scan_env . num_call > 0 )		1189640	1					
ANR	1190286	Condition	scan_env . num_call > 0	5394:8:122054:122074	1189640	0	True				
ANR	1190287	RelationalExpression	scan_env . num_call > 0		1189640	0		>			
ANR	1190288	MemberAccess	scan_env . num_call		1189640	0					
ANR	1190289	Identifier	scan_env		1189640	0					
ANR	1190290	Identifier	num_call		1189640	1					
ANR	1190291	PrimaryExpression	0		1189640	1					
ANR	1190292	CompoundStatement		131:31:3360:3360	1189640	1					
ANR	1190293	ExpressionStatement	"r = unset_addr_list_fix ( & uslist , reg )"	5395:6:122085:122122	1189640	0	True				
ANR	1190294	AssignmentExpression	"r = unset_addr_list_fix ( & uslist , reg )"		1189640	0		=			
ANR	1190295	Identifier	r		1189640	0					
ANR	1190296	CallExpression	"unset_addr_list_fix ( & uslist , reg )"		1189640	1					
ANR	1190297	Callee	unset_addr_list_fix		1189640	0					
ANR	1190298	Identifier	unset_addr_list_fix		1189640	0					
ANR	1190299	ArgumentList	& uslist		1189640	1					
ANR	1190300	Argument	& uslist		1189640	0					
ANR	1190301	UnaryOperationExpression	& uslist		1189640	0					
ANR	1190302	UnaryOperator	&		1189640	0					
ANR	1190303	Identifier	uslist		1189640	1					
ANR	1190304	Argument	reg		1189640	1					
ANR	1190305	Identifier	reg		1189640	0					
ANR	1190306	ExpressionStatement	unset_addr_list_end ( & uslist )	5396:6:122130:122158	1189640	1	True				
ANR	1190307	CallExpression	unset_addr_list_end ( & uslist )		1189640	0					
ANR	1190308	Callee	unset_addr_list_end		1189640	0					
ANR	1190309	Identifier	unset_addr_list_end		1189640	0					
ANR	1190310	ArgumentList	& uslist		1189640	1					
ANR	1190311	Argument	& uslist		1189640	0					
ANR	1190312	UnaryOperationExpression	& uslist		1189640	0					
ANR	1190313	UnaryOperator	&		1189640	0					
ANR	1190314	Identifier	uslist		1189640	1					
ANR	1190315	IfStatement	if ( r )		1189640	2					
ANR	1190316	Condition	r	5397:10:122170:122170	1189640	0	True				
ANR	1190317	Identifier	r		1189640	0					
ANR	1190318	GotoStatement	goto err ;	5397:13:122173:122181	1189640	1	True				
ANR	1190319	Identifier	err		1189640	0					
ANR	1190320	IfStatement	if ( ( reg -> num_repeat != 0 ) || ( reg -> bt_mem_end != 0 ) )		1189640	2					
ANR	1190321	Condition	( reg -> num_repeat != 0 ) || ( reg -> bt_mem_end != 0 )	5401:8:122205:122252	1189640	0	True				
ANR	1190322	OrExpression	( reg -> num_repeat != 0 ) || ( reg -> bt_mem_end != 0 )		1189640	0		||			
ANR	1190323	EqualityExpression	reg -> num_repeat != 0		1189640	0		!=			
ANR	1190324	PtrMemberAccess	reg -> num_repeat		1189640	0					
ANR	1190325	Identifier	reg		1189640	0					
ANR	1190326	Identifier	num_repeat		1189640	1					
ANR	1190327	PrimaryExpression	0		1189640	1					
ANR	1190328	EqualityExpression	reg -> bt_mem_end != 0		1189640	1		!=			
ANR	1190329	PtrMemberAccess	reg -> bt_mem_end		1189640	0					
ANR	1190330	Identifier	reg		1189640	0					
ANR	1190331	Identifier	bt_mem_end		1189640	1					
ANR	1190332	PrimaryExpression	0		1189640	1					
ANR	1190333	ExpressionStatement	reg -> stack_pop_level = STACK_POP_LEVEL_ALL	5402:6:122261:122303	1189640	1	True				
ANR	1190334	AssignmentExpression	reg -> stack_pop_level = STACK_POP_LEVEL_ALL		1189640	0		=			
ANR	1190335	PtrMemberAccess	reg -> stack_pop_level		1189640	0					
ANR	1190336	Identifier	reg		1189640	0					
ANR	1190337	Identifier	stack_pop_level		1189640	1					
ANR	1190338	Identifier	STACK_POP_LEVEL_ALL		1189640	1					
ANR	1190339	ElseStatement	else		1189640	0					
ANR	1190340	CompoundStatement		140:9:3597:3597	1189640	0					
ANR	1190341	IfStatement	if ( reg -> bt_mem_start != 0 )		1189640	0					
ANR	1190342	Condition	reg -> bt_mem_start != 0	5404:10:122326:122347	1189640	0	True				
ANR	1190343	EqualityExpression	reg -> bt_mem_start != 0		1189640	0		!=			
ANR	1190344	PtrMemberAccess	reg -> bt_mem_start		1189640	0					
ANR	1190345	Identifier	reg		1189640	0					
ANR	1190346	Identifier	bt_mem_start		1189640	1					
ANR	1190347	PrimaryExpression	0		1189640	1					
ANR	1190348	ExpressionStatement	reg -> stack_pop_level = STACK_POP_LEVEL_MEM_START	5405:1:122351:122399	1189640	1	True				
ANR	1190349	AssignmentExpression	reg -> stack_pop_level = STACK_POP_LEVEL_MEM_START		1189640	0		=			
ANR	1190350	PtrMemberAccess	reg -> stack_pop_level		1189640	0					
ANR	1190351	Identifier	reg		1189640	0					
ANR	1190352	Identifier	stack_pop_level		1189640	1					
ANR	1190353	Identifier	STACK_POP_LEVEL_MEM_START		1189640	1					
ANR	1190354	ElseStatement	else		1189640	0					
ANR	1190355	ExpressionStatement	reg -> stack_pop_level = STACK_POP_LEVEL_FREE	5407:1:122413:122456	1189640	0	True				
ANR	1190356	AssignmentExpression	reg -> stack_pop_level = STACK_POP_LEVEL_FREE		1189640	0		=			
ANR	1190357	PtrMemberAccess	reg -> stack_pop_level		1189640	0					
ANR	1190358	Identifier	reg		1189640	0					
ANR	1190359	Identifier	stack_pop_level		1189640	1					
ANR	1190360	Identifier	STACK_POP_LEVEL_FREE		1189640	1					
ANR	1190361	ElseStatement	else		1189640	0					
ANR	1190362	IfStatement	if ( scan_env . num_call > 0 )		1189640	0					
ANR	1190363	Condition	scan_env . num_call > 0	5411:11:122502:122522	1189640	0	True				
ANR	1190364	RelationalExpression	scan_env . num_call > 0		1189640	0		>			
ANR	1190365	MemberAccess	scan_env . num_call		1189640	0					
ANR	1190366	Identifier	scan_env		1189640	0					
ANR	1190367	Identifier	num_call		1189640	1					
ANR	1190368	PrimaryExpression	0		1189640	1					
ANR	1190369	CompoundStatement		148:34:3808:3808	1189640	1					
ANR	1190370	ExpressionStatement	unset_addr_list_end ( & uslist )	5412:4:122531:122559	1189640	0	True				
ANR	1190371	CallExpression	unset_addr_list_end ( & uslist )		1189640	0					
ANR	1190372	Callee	unset_addr_list_end		1189640	0					
ANR	1190373	Identifier	unset_addr_list_end		1189640	0					
ANR	1190374	ArgumentList	& uslist		1189640	1					
ANR	1190375	Argument	& uslist		1189640	0					
ANR	1190376	UnaryOperationExpression	& uslist		1189640	0					
ANR	1190377	UnaryOperator	&		1189640	0					
ANR	1190378	Identifier	uslist		1189640	1					
ANR	1190379	ExpressionStatement	onig_node_free ( root )	5415:2:122574:122594	1189640	50	True				
ANR	1190380	CallExpression	onig_node_free ( root )		1189640	0					
ANR	1190381	Callee	onig_node_free		1189640	0					
ANR	1190382	Identifier	onig_node_free		1189640	0					
ANR	1190383	ArgumentList	root		1189640	1					
ANR	1190384	Argument	root		1189640	0					
ANR	1190385	Identifier	root		1189640	0					
ANR	1190386	ExpressionStatement	"onig_print_names ( stderr , reg )"	5419:2:122648:122677	1189640	51	True				
ANR	1190387	CallExpression	"onig_print_names ( stderr , reg )"		1189640	0					
ANR	1190388	Callee	onig_print_names		1189640	0					
ANR	1190389	Identifier	onig_print_names		1189640	0					
ANR	1190390	ArgumentList	stderr		1189640	1					
ANR	1190391	Argument	stderr		1189640	0					
ANR	1190392	Identifier	stderr		1189640	0					
ANR	1190393	Argument	reg		1189640	1					
ANR	1190394	Identifier	reg		1189640	0					
ANR	1190395	ExpressionStatement	"print_compiled_byte_code_list ( stderr , reg )"	5421:2:122688:122730	1189640	52	True				
ANR	1190396	CallExpression	"print_compiled_byte_code_list ( stderr , reg )"		1189640	0					
ANR	1190397	Callee	print_compiled_byte_code_list		1189640	0					
ANR	1190398	Identifier	print_compiled_byte_code_list		1189640	0					
ANR	1190399	ArgumentList	stderr		1189640	1					
ANR	1190400	Argument	stderr		1189640	0					
ANR	1190401	Identifier	stderr		1189640	0					
ANR	1190402	Argument	reg		1189640	1					
ANR	1190403	Identifier	reg		1189640	0					
ANR	1190404	Label	end :	5424:1:122741:122744	1189640	53	True				
ANR	1190405	Identifier	end		1189640	0					
ANR	1190406	ExpressionStatement	reg -> state = ONIG_STATE_NORMAL	5425:2:122748:122778	1189640	54	True				
ANR	1190407	AssignmentExpression	reg -> state = ONIG_STATE_NORMAL		1189640	0		=			
ANR	1190408	PtrMemberAccess	reg -> state		1189640	0					
ANR	1190409	Identifier	reg		1189640	0					
ANR	1190410	Identifier	state		1189640	1					
ANR	1190411	Identifier	ONIG_STATE_NORMAL		1189640	1					
ANR	1190412	ReturnStatement	return r ;	5426:2:122782:122790	1189640	55	True				
ANR	1190413	Identifier	r		1189640	0					
ANR	1190414	Label	err_unset :	5428:1:122794:122803	1189640	56	True				
ANR	1190415	Identifier	err_unset		1189640	0					
ANR	1190416	IfStatement	if ( scan_env . num_call > 0 )		1189640	57					
ANR	1190417	Condition	scan_env . num_call > 0	5430:6:122834:122854	1189640	0	True				
ANR	1190418	RelationalExpression	scan_env . num_call > 0		1189640	0		>			
ANR	1190419	MemberAccess	scan_env . num_call		1189640	0					
ANR	1190420	Identifier	scan_env		1189640	0					
ANR	1190421	Identifier	num_call		1189640	1					
ANR	1190422	PrimaryExpression	0		1189640	1					
ANR	1190423	CompoundStatement		167:29:4140:4140	1189640	1					
ANR	1190424	ExpressionStatement	unset_addr_list_end ( & uslist )	5431:4:122863:122891	1189640	0	True				
ANR	1190425	CallExpression	unset_addr_list_end ( & uslist )		1189640	0					
ANR	1190426	Callee	unset_addr_list_end		1189640	0					
ANR	1190427	Identifier	unset_addr_list_end		1189640	0					
ANR	1190428	ArgumentList	& uslist		1189640	1					
ANR	1190429	Argument	& uslist		1189640	0					
ANR	1190430	UnaryOperationExpression	& uslist		1189640	0					
ANR	1190431	UnaryOperator	&		1189640	0					
ANR	1190432	Identifier	uslist		1189640	1					
ANR	1190433	Label	err :	5434:1:122905:122908	1189640	58	True				
ANR	1190434	Identifier	err		1189640	0					
ANR	1190435	IfStatement	if ( IS_NOT_NULL ( scan_env . error ) )		1189640	59					
ANR	1190436	Condition	IS_NOT_NULL ( scan_env . error )	5435:6:122916:122942	1189640	0	True				
ANR	1190437	CallExpression	IS_NOT_NULL ( scan_env . error )		1189640	0					
ANR	1190438	Callee	IS_NOT_NULL		1189640	0					
ANR	1190439	Identifier	IS_NOT_NULL		1189640	0					
ANR	1190440	ArgumentList	scan_env . error		1189640	1					
ANR	1190441	Argument	scan_env . error		1189640	0					
ANR	1190442	MemberAccess	scan_env . error		1189640	0					
ANR	1190443	Identifier	scan_env		1189640	0					
ANR	1190444	Identifier	error		1189640	1					
ANR	1190445	CompoundStatement		172:35:4228:4228	1189640	1					
ANR	1190446	IfStatement	if ( IS_NOT_NULL ( einfo ) )		1189640	0					
ANR	1190447	Condition	IS_NOT_NULL ( einfo )	5436:8:122955:122972	1189640	0	True				
ANR	1190448	CallExpression	IS_NOT_NULL ( einfo )		1189640	0					
ANR	1190449	Callee	IS_NOT_NULL		1189640	0					
ANR	1190450	Identifier	IS_NOT_NULL		1189640	0					
ANR	1190451	ArgumentList	einfo		1189640	1					
ANR	1190452	Argument	einfo		1189640	0					
ANR	1190453	Identifier	einfo		1189640	0					
ANR	1190454	CompoundStatement		173:28:4258:4258	1189640	1					
ANR	1190455	ExpressionStatement	einfo -> enc = scan_env . enc	5437:6:122983:123012	1189640	0	True				
ANR	1190456	AssignmentExpression	einfo -> enc = scan_env . enc		1189640	0		=			
ANR	1190457	PtrMemberAccess	einfo -> enc		1189640	0					
ANR	1190458	Identifier	einfo		1189640	0					
ANR	1190459	Identifier	enc		1189640	1					
ANR	1190460	MemberAccess	scan_env . enc		1189640	1					
ANR	1190461	Identifier	scan_env		1189640	0					
ANR	1190462	Identifier	enc		1189640	1					
ANR	1190463	ExpressionStatement	einfo -> par = scan_env . error	5438:6:123020:123051	1189640	1	True				
ANR	1190464	AssignmentExpression	einfo -> par = scan_env . error		1189640	0		=			
ANR	1190465	PtrMemberAccess	einfo -> par		1189640	0					
ANR	1190466	Identifier	einfo		1189640	0					
ANR	1190467	Identifier	par		1189640	1					
ANR	1190468	MemberAccess	scan_env . error		1189640	1					
ANR	1190469	Identifier	scan_env		1189640	0					
ANR	1190470	Identifier	error		1189640	1					
ANR	1190471	ExpressionStatement	einfo -> par_end = scan_env . error_end	5439:6:123059:123094	1189640	2	True				
ANR	1190472	AssignmentExpression	einfo -> par_end = scan_env . error_end		1189640	0		=			
ANR	1190473	PtrMemberAccess	einfo -> par_end		1189640	0					
ANR	1190474	Identifier	einfo		1189640	0					
ANR	1190475	Identifier	par_end		1189640	1					
ANR	1190476	MemberAccess	scan_env . error_end		1189640	1					
ANR	1190477	Identifier	scan_env		1189640	0					
ANR	1190478	Identifier	error_end		1189640	1					
ANR	1190479	ExpressionStatement	onig_node_free ( root )	5443:2:123109:123129	1189640	60	True				
ANR	1190480	CallExpression	onig_node_free ( root )		1189640	0					
ANR	1190481	Callee	onig_node_free		1189640	0					
ANR	1190482	Identifier	onig_node_free		1189640	0					
ANR	1190483	ArgumentList	root		1189640	1					
ANR	1190484	Argument	root		1189640	0					
ANR	1190485	Identifier	root		1189640	0					
ANR	1190486	IfStatement	if ( IS_NOT_NULL ( scan_env . mem_nodes_dynamic ) )		1189640	61					
ANR	1190487	Condition	IS_NOT_NULL ( scan_env . mem_nodes_dynamic )	5444:6:123137:123175	1189640	0	True				
ANR	1190488	CallExpression	IS_NOT_NULL ( scan_env . mem_nodes_dynamic )		1189640	0					
ANR	1190489	Callee	IS_NOT_NULL		1189640	0					
ANR	1190490	Identifier	IS_NOT_NULL		1189640	0					
ANR	1190491	ArgumentList	scan_env . mem_nodes_dynamic		1189640	1					
ANR	1190492	Argument	scan_env . mem_nodes_dynamic		1189640	0					
ANR	1190493	MemberAccess	scan_env . mem_nodes_dynamic		1189640	0					
ANR	1190494	Identifier	scan_env		1189640	0					
ANR	1190495	Identifier	mem_nodes_dynamic		1189640	1					
ANR	1190496	ExpressionStatement	xfree ( scan_env . mem_nodes_dynamic )	5445:6:123184:123217	1189640	1	True				
ANR	1190497	CallExpression	xfree ( scan_env . mem_nodes_dynamic )		1189640	0					
ANR	1190498	Callee	xfree		1189640	0					
ANR	1190499	Identifier	xfree		1189640	0					
ANR	1190500	ArgumentList	scan_env . mem_nodes_dynamic		1189640	1					
ANR	1190501	Argument	scan_env . mem_nodes_dynamic		1189640	0					
ANR	1190502	MemberAccess	scan_env . mem_nodes_dynamic		1189640	0					
ANR	1190503	Identifier	scan_env		1189640	0					
ANR	1190504	Identifier	mem_nodes_dynamic		1189640	1					
ANR	1190505	ReturnStatement	return r ;	5446:2:123221:123229	1189640	62	True				
ANR	1190506	Identifier	r		1189640	0					
ANR	1190507	ReturnType	extern int		1189640	1					
ANR	1190508	Identifier	onig_compile		1189640	2					
ANR	1190509	ParameterList	"regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigErrorInfo * einfo"		1189640	3					
ANR	1190510	Parameter	regex_t * reg	5262:13:118625:118636	1189640	0	True				
ANR	1190511	ParameterType	regex_t *		1189640	0					
ANR	1190512	Identifier	reg		1189640	1					
ANR	1190513	Parameter	const UChar * pattern	5262:27:118639:118658	1189640	1	True				
ANR	1190514	ParameterType	const UChar *		1189640	0					
ANR	1190515	Identifier	pattern		1189640	1					
ANR	1190516	Parameter	const UChar * pattern_end	5262:49:118661:118684	1189640	2	True				
ANR	1190517	ParameterType	const UChar *		1189640	0					
ANR	1190518	Identifier	pattern_end		1189640	1					
ANR	1190519	Parameter	OnigErrorInfo * einfo	5263:7:118694:118713	1189640	3	True				
ANR	1190520	ParameterType	OnigErrorInfo *		1189640	0					
ANR	1190521	Identifier	einfo		1189640	1					
ANR	1190522	CFGEntryNode	ENTRY		1189640		True				
ANR	1190523	CFGExitNode	EXIT		1189640		True				
ANR	1190524	Symbol	& scan_env		1189640						
ANR	1190525	Symbol	scan_env . backrefed_mem		1189640						
ANR	1190526	Symbol	reg -> state		1189640						
ANR	1190527	Symbol	scan_env . enc		1189640						
ANR	1190528	Symbol	scan_env . comb_exp_max_regnum		1189640						
ANR	1190529	Symbol	einfo -> par_end		1189640						
ANR	1190530	Symbol	disable_noname_group_capture		1189640						
ANR	1190531	Symbol	scan_env . capture_history		1189640						
ANR	1190532	Symbol	scan_env . syntax		1189640						
ANR	1190533	Symbol	scan_env . num_mem		1189640						
ANR	1190534	Symbol	uslist		1189640						
ANR	1190535	Symbol	setup_subexp_call		1189640						
ANR	1190536	Symbol	onig_parse_make_tree		1189640						
ANR	1190537	Symbol	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		1189640						
ANR	1190538	Symbol	& uslist		1189640						
ANR	1190539	Symbol	reg		1189640						
ANR	1190540	Symbol	reg -> options		1189640						
ANR	1190541	Symbol	IS_SYNTAX_BV		1189640						
ANR	1190542	Symbol	add_opcode		1189640						
ANR	1190543	Symbol	scan_env . unset_addr_list		1189640						
ANR	1190544	Symbol	ONIG_STATE_COMPILING		1189640						
ANR	1190545	Symbol	IS_FIND_CONDITION		1189640						
ANR	1190546	Symbol	BIT_STATUS_AT		1189640						
ANR	1190547	Symbol	reg -> stack_pop_level		1189640						
ANR	1190548	Symbol	NULL		1189640						
ANR	1190549	Symbol	subexp_inf_recursive_check_trav		1189640						
ANR	1190550	Symbol	scan_env . bt_mem_start		1189640						
ANR	1190551	Symbol	pattern_end		1189640						
ANR	1190552	Symbol	reg -> capture_history		1189640						
ANR	1190553	Symbol	stderr		1189640						
ANR	1190554	Symbol	reg -> enc		1189640						
ANR	1190555	Symbol	reg -> num_null_check		1189640						
ANR	1190556	Symbol	scan_env . num_named		1189640						
ANR	1190557	Symbol	unset_addr_list_fix		1189640						
ANR	1190558	Symbol	einfo -> par		1189640						
ANR	1190559	Symbol	numbered_ref_check		1189640						
ANR	1190560	Symbol	* einfo		1189640						
ANR	1190561	Symbol	scan_env . num_comb_exp_check		1189640						
ANR	1190562	Symbol	OP_END		1189640						
ANR	1190563	Symbol	ONIG_STATE_NORMAL		1189640						
ANR	1190564	Symbol	IS_NOT_NULL		1189640						
ANR	1190565	Symbol	reg -> repeat_range		1189640						
ANR	1190566	Symbol	pattern		1189640						
ANR	1190567	Symbol	scan_env . bt_mem_end		1189640						
ANR	1190568	Symbol	BBUF_INIT		1189640						
ANR	1190569	Symbol	STACK_POP_LEVEL_FREE		1189640						
ANR	1190570	Symbol	& root		1189640						
ANR	1190571	Symbol	einfo		1189640						
ANR	1190572	Symbol	reg -> repeat_range_alloc		1189640						
ANR	1190573	Symbol	reg -> bt_mem_end		1189640						
ANR	1190574	Symbol	STACK_POP_LEVEL_MEM_START		1189640						
ANR	1190575	Symbol	root		1189640						
ANR	1190576	Symbol	reg -> num_comb_exp_check		1189640						
ANR	1190577	Symbol	scan_env . mem_nodes_dynamic		1189640						
ANR	1190578	Symbol	scan_env		1189640						
ANR	1190579	Symbol	reg -> num_mem		1189640						
ANR	1190580	Symbol	scan_env . error_end		1189640						
ANR	1190581	Symbol	COMPILE_INIT_SIZE		1189640						
ANR	1190582	Symbol	unset_addr_list_init		1189640						
ANR	1190583	Symbol	ONIG_IS_OPTION_ON		1189640						
ANR	1190584	Symbol	set_optimize_info_from_tree		1189640						
ANR	1190585	Symbol	i		1189640						
ANR	1190586	Symbol	reg -> num_call		1189640						
ANR	1190587	Symbol	scan_env . num_call		1189640						
ANR	1190588	Symbol	ONIG_OPTION_CAPTURE_GROUP		1189640						
ANR	1190589	Symbol	setup_tree		1189640						
ANR	1190590	Symbol	STACK_POP_LEVEL_ALL		1189640						
ANR	1190591	Symbol	r		1189640						
ANR	1190592	Symbol	init_size		1189640						
ANR	1190593	Symbol	compile_tree		1189640						
ANR	1190594	Symbol	reg -> bt_mem_start		1189640						
ANR	1190595	Symbol	scan_env . has_recursion		1189640						
ANR	1190596	Symbol	scan_env . error		1189640						
ANR	1190597	Symbol	subexp_recursive_check_trav		1189640						
ANR	1190598	Symbol	einfo -> enc		1189640						
ANR	1190599	Symbol	* reg		1189640						
ANR	1190600	Symbol	reg -> alloc		1189640						
ANR	1190601	Symbol	reg -> used		1189640						
ANR	1190602	Symbol	reg -> num_repeat		1189640						
ANR	1190603	Function	onig_recompile	5450:0:123259:123718							
ANR	1190604	FunctionDef	"onig_recompile (regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigOptionType option , OnigEncoding enc , OnigSyntaxType * syntax , OnigErrorInfo * einfo)"		1190603	0					
ANR	1190605	CompoundStatement		5454:0:123444:123718	1190603	0					
ANR	1190606	IdentifierDeclStatement	int r ;	5455:2:123448:123453	1190603	0	True				
ANR	1190607	IdentifierDecl	r		1190603	0					
ANR	1190608	IdentifierDeclType	int		1190603	0					
ANR	1190609	Identifier	r		1190603	1					
ANR	1190610	IdentifierDeclStatement	regex_t * new_reg ;	5456:2:123457:123473	1190603	1	True				
ANR	1190611	IdentifierDecl	* new_reg		1190603	0					
ANR	1190612	IdentifierDeclType	regex_t *		1190603	0					
ANR	1190613	Identifier	new_reg		1190603	1					
ANR	1190614	ExpressionStatement	"r = onig_new ( & new_reg , pattern , pattern_end , option , enc , syntax , einfo )"	5458:2:123478:123550	1190603	2	True				
ANR	1190615	AssignmentExpression	"r = onig_new ( & new_reg , pattern , pattern_end , option , enc , syntax , einfo )"		1190603	0		=			
ANR	1190616	Identifier	r		1190603	0					
ANR	1190617	CallExpression	"onig_new ( & new_reg , pattern , pattern_end , option , enc , syntax , einfo )"		1190603	1					
ANR	1190618	Callee	onig_new		1190603	0					
ANR	1190619	Identifier	onig_new		1190603	0					
ANR	1190620	ArgumentList	& new_reg		1190603	1					
ANR	1190621	Argument	& new_reg		1190603	0					
ANR	1190622	UnaryOperationExpression	& new_reg		1190603	0					
ANR	1190623	UnaryOperator	&		1190603	0					
ANR	1190624	Identifier	new_reg		1190603	1					
ANR	1190625	Argument	pattern		1190603	1					
ANR	1190626	Identifier	pattern		1190603	0					
ANR	1190627	Argument	pattern_end		1190603	2					
ANR	1190628	Identifier	pattern_end		1190603	0					
ANR	1190629	Argument	option		1190603	3					
ANR	1190630	Identifier	option		1190603	0					
ANR	1190631	Argument	enc		1190603	4					
ANR	1190632	Identifier	enc		1190603	0					
ANR	1190633	Argument	syntax		1190603	5					
ANR	1190634	Identifier	syntax		1190603	0					
ANR	1190635	Argument	einfo		1190603	6					
ANR	1190636	Identifier	einfo		1190603	0					
ANR	1190637	IfStatement	if ( r )		1190603	3					
ANR	1190638	Condition	r	5459:6:123558:123558	1190603	0	True				
ANR	1190639	Identifier	r		1190603	0					
ANR	1190640	ReturnStatement	return r ;	5459:9:123561:123569	1190603	1	True				
ANR	1190641	Identifier	r		1190603	0					
ANR	1190642	IfStatement	if ( ONIG_STATE ( reg ) == ONIG_STATE_NORMAL )		1190603	4					
ANR	1190643	Condition	ONIG_STATE ( reg ) == ONIG_STATE_NORMAL	5460:6:123577:123612	1190603	0	True				
ANR	1190644	EqualityExpression	ONIG_STATE ( reg ) == ONIG_STATE_NORMAL		1190603	0		==			
ANR	1190645	CallExpression	ONIG_STATE ( reg )		1190603	0					
ANR	1190646	Callee	ONIG_STATE		1190603	0					
ANR	1190647	Identifier	ONIG_STATE		1190603	0					
ANR	1190648	ArgumentList	reg		1190603	1					
ANR	1190649	Argument	reg		1190603	0					
ANR	1190650	Identifier	reg		1190603	0					
ANR	1190651	Identifier	ONIG_STATE_NORMAL		1190603	1					
ANR	1190652	CompoundStatement		7:44:170:170	1190603	1					
ANR	1190653	ExpressionStatement	"onig_transfer ( reg , new_reg )"	5461:4:123621:123648	1190603	0	True				
ANR	1190654	CallExpression	"onig_transfer ( reg , new_reg )"		1190603	0					
ANR	1190655	Callee	onig_transfer		1190603	0					
ANR	1190656	Identifier	onig_transfer		1190603	0					
ANR	1190657	ArgumentList	reg		1190603	1					
ANR	1190658	Argument	reg		1190603	0					
ANR	1190659	Identifier	reg		1190603	0					
ANR	1190660	Argument	new_reg		1190603	1					
ANR	1190661	Identifier	new_reg		1190603	0					
ANR	1190662	ElseStatement	else		1190603	0					
ANR	1190663	CompoundStatement		10:7:216:216	1190603	0					
ANR	1190664	ExpressionStatement	"onig_chain_link_add ( reg , new_reg )"	5464:4:123667:123700	1190603	0	True				
ANR	1190665	CallExpression	"onig_chain_link_add ( reg , new_reg )"		1190603	0					
ANR	1190666	Callee	onig_chain_link_add		1190603	0					
ANR	1190667	Identifier	onig_chain_link_add		1190603	0					
ANR	1190668	ArgumentList	reg		1190603	1					
ANR	1190669	Argument	reg		1190603	0					
ANR	1190670	Identifier	reg		1190603	0					
ANR	1190671	Argument	new_reg		1190603	1					
ANR	1190672	Identifier	new_reg		1190603	0					
ANR	1190673	ReturnStatement	return 0 ;	5466:2:123708:123716	1190603	5	True				
ANR	1190674	PrimaryExpression	0		1190603	0					
ANR	1190675	ReturnType	extern int		1190603	1					
ANR	1190676	Identifier	onig_recompile		1190603	2					
ANR	1190677	ParameterList	"regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigOptionType option , OnigEncoding enc , OnigSyntaxType * syntax , OnigErrorInfo * einfo"		1190603	3					
ANR	1190678	Parameter	regex_t * reg	5451:15:123285:123296	1190603	0	True				
ANR	1190679	ParameterType	regex_t *		1190603	0					
ANR	1190680	Identifier	reg		1190603	1					
ANR	1190681	Parameter	const UChar * pattern	5451:29:123299:123318	1190603	1	True				
ANR	1190682	ParameterType	const UChar *		1190603	0					
ANR	1190683	Identifier	pattern		1190603	1					
ANR	1190684	Parameter	const UChar * pattern_end	5451:51:123321:123344	1190603	2	True				
ANR	1190685	ParameterType	const UChar *		1190603	0					
ANR	1190686	Identifier	pattern_end		1190603	1					
ANR	1190687	Parameter	OnigOptionType option	5452:5:123352:123372	1190603	3	True				
ANR	1190688	ParameterType	OnigOptionType		1190603	0					
ANR	1190689	Identifier	option		1190603	1					
ANR	1190690	Parameter	OnigEncoding enc	5452:28:123375:123390	1190603	4	True				
ANR	1190691	ParameterType	OnigEncoding		1190603	0					
ANR	1190692	Identifier	enc		1190603	1					
ANR	1190693	Parameter	OnigSyntaxType * syntax	5452:46:123393:123414	1190603	5	True				
ANR	1190694	ParameterType	OnigSyntaxType *		1190603	0					
ANR	1190695	Identifier	syntax		1190603	1					
ANR	1190696	Parameter	OnigErrorInfo * einfo	5453:5:123422:123441	1190603	6	True				
ANR	1190697	ParameterType	OnigErrorInfo *		1190603	0					
ANR	1190698	Identifier	einfo		1190603	1					
ANR	1190699	CFGEntryNode	ENTRY		1190603		True				
ANR	1190700	CFGExitNode	EXIT		1190603		True				
ANR	1190701	Symbol	ONIG_STATE		1190603						
ANR	1190702	Symbol	pattern		1190603						
ANR	1190703	Symbol	pattern_end		1190603						
ANR	1190704	Symbol	onig_new		1190603						
ANR	1190705	Symbol	r		1190603						
ANR	1190706	Symbol	einfo		1190603						
ANR	1190707	Symbol	reg		1190603						
ANR	1190708	Symbol	new_reg		1190603						
ANR	1190709	Symbol	& new_reg		1190603						
ANR	1190710	Symbol	syntax		1190603						
ANR	1190711	Symbol	enc		1190603						
ANR	1190712	Symbol	option		1190603						
ANR	1190713	Symbol	ONIG_STATE_NORMAL		1190603						
ANR	1190714	DeclStmt									
ANR	1190715	Decl							int	int	onig_inited
ANR	1190716	Function	onig_reg_init	5472:0:123757:125007							
ANR	1190717	FunctionDef	"onig_reg_init (regex_t * reg , OnigOptionType option , OnigCaseFoldType case_fold_flag , OnigEncoding enc , OnigSyntaxType * syntax)"		1190716	0					
ANR	1190718	CompoundStatement		5476:0:123908:125007	1190716	0					
ANR	1190719	IfStatement	if ( ! onig_inited )		1190716	0					
ANR	1190720	Condition	! onig_inited	5477:6:123916:123928	1190716	0	True				
ANR	1190721	UnaryOperationExpression	! onig_inited		1190716	0					
ANR	1190722	UnaryOperator	!		1190716	0					
ANR	1190723	Identifier	onig_inited		1190716	1					
ANR	1190724	ExpressionStatement	onig_init ( )	5478:4:123935:123946	1190716	1	True				
ANR	1190725	CallExpression	onig_init ( )		1190716	0					
ANR	1190726	Callee	onig_init		1190716	0					
ANR	1190727	Identifier	onig_init		1190716	0					
ANR	1190728	ArgumentList			1190716	1					
ANR	1190729	IfStatement	if ( IS_NULL ( reg ) )		1190716	1					
ANR	1190730	Condition	IS_NULL ( reg )	5480:6:123955:123966	1190716	0	True				
ANR	1190731	CallExpression	IS_NULL ( reg )		1190716	0					
ANR	1190732	Callee	IS_NULL		1190716	0					
ANR	1190733	Identifier	IS_NULL		1190716	0					
ANR	1190734	ArgumentList	reg		1190716	1					
ANR	1190735	Argument	reg		1190716	0					
ANR	1190736	Identifier	reg		1190716	0					
ANR	1190737	ReturnStatement	return ONIGERR_INVALID_ARGUMENT ;	5481:4:123973:124004	1190716	1	True				
ANR	1190738	Identifier	ONIGERR_INVALID_ARGUMENT		1190716	0					
ANR	1190739	IfStatement	if ( ONIGENC_IS_UNDEF ( enc ) )		1190716	2					
ANR	1190740	Condition	ONIGENC_IS_UNDEF ( enc )	5483:6:124013:124033	1190716	0	True				
ANR	1190741	CallExpression	ONIGENC_IS_UNDEF ( enc )		1190716	0					
ANR	1190742	Callee	ONIGENC_IS_UNDEF		1190716	0					
ANR	1190743	Identifier	ONIGENC_IS_UNDEF		1190716	0					
ANR	1190744	ArgumentList	enc		1190716	1					
ANR	1190745	Argument	enc		1190716	0					
ANR	1190746	Identifier	enc		1190716	0					
ANR	1190747	ReturnStatement	return ONIGERR_DEFAULT_ENCODING_IS_NOT_SETTED ;	5484:4:124040:124085	1190716	1	True				
ANR	1190748	Identifier	ONIGERR_DEFAULT_ENCODING_IS_NOT_SETTED		1190716	0					
ANR	1190749	IfStatement	if ( ( option & ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP ) ) == ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP ) )		1190716	3					
ANR	1190750	Condition	( option & ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP ) ) == ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP )	5486:6:124094:124230	1190716	0	True				
ANR	1190751	EqualityExpression	( option & ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP ) ) == ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP )		1190716	0		==			
ANR	1190752	BitAndExpression	option & ( ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP )		1190716	0		&			
ANR	1190753	Identifier	option		1190716	0					
ANR	1190754	InclusiveOrExpression	ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP		1190716	1		|			
ANR	1190755	Identifier	ONIG_OPTION_DONT_CAPTURE_GROUP		1190716	0					
ANR	1190756	Identifier	ONIG_OPTION_CAPTURE_GROUP		1190716	1					
ANR	1190757	InclusiveOrExpression	ONIG_OPTION_DONT_CAPTURE_GROUP | ONIG_OPTION_CAPTURE_GROUP		1190716	1		|			
ANR	1190758	Identifier	ONIG_OPTION_DONT_CAPTURE_GROUP		1190716	0					
ANR	1190759	Identifier	ONIG_OPTION_CAPTURE_GROUP		1190716	1					
ANR	1190760	CompoundStatement		12:69:324:324	1190716	1					
ANR	1190761	ReturnStatement	return ONIGERR_INVALID_COMBINATION_OF_OPTIONS ;	5488:4:124239:124284	1190716	0	True				
ANR	1190762	Identifier	ONIGERR_INVALID_COMBINATION_OF_OPTIONS		1190716	0					
ANR	1190763	ExpressionStatement	( reg ) -> state = ONIG_STATE_MODIFY	5491:2:124293:124325	1190716	4	True				
ANR	1190764	AssignmentExpression	( reg ) -> state = ONIG_STATE_MODIFY		1190716	0		=			
ANR	1190765	PtrMemberAccess	( reg ) -> state		1190716	0					
ANR	1190766	Identifier	reg		1190716	0					
ANR	1190767	Identifier	state		1190716	1					
ANR	1190768	Identifier	ONIG_STATE_MODIFY		1190716	1					
ANR	1190769	IfStatement	if ( ( option & ONIG_OPTION_NEGATE_SINGLELINE ) != 0 )		1190716	5					
ANR	1190770	Condition	( option & ONIG_OPTION_NEGATE_SINGLELINE ) != 0	5493:6:124334:124378	1190716	0	True				
ANR	1190771	EqualityExpression	( option & ONIG_OPTION_NEGATE_SINGLELINE ) != 0		1190716	0		!=			
ANR	1190772	BitAndExpression	option & ONIG_OPTION_NEGATE_SINGLELINE		1190716	0		&			
ANR	1190773	Identifier	option		1190716	0					
ANR	1190774	Identifier	ONIG_OPTION_NEGATE_SINGLELINE		1190716	1					
ANR	1190775	PrimaryExpression	0		1190716	1					
ANR	1190776	CompoundStatement		18:53:472:472	1190716	1					
ANR	1190777	ExpressionStatement	option |= syntax -> options	5494:4:124387:124412	1190716	0	True				
ANR	1190778	AssignmentExpression	option |= syntax -> options		1190716	0		|=			
ANR	1190779	Identifier	option		1190716	0					
ANR	1190780	PtrMemberAccess	syntax -> options		1190716	1					
ANR	1190781	Identifier	syntax		1190716	0					
ANR	1190782	Identifier	options		1190716	1					
ANR	1190783	ExpressionStatement	option &= ~ONIG_OPTION_SINGLELINE	5495:4:124418:124451	1190716	1	True				
ANR	1190784	AssignmentExpression	option &= ~ONIG_OPTION_SINGLELINE		1190716	0		&=			
ANR	1190785	Identifier	option		1190716	0					
ANR	1190786	Identifier	~ONIG_OPTION_SINGLELINE		1190716	1					
ANR	1190787	ElseStatement	else		1190716	0					
ANR	1190788	ExpressionStatement	option |= syntax -> options	5498:4:124468:124493	1190716	0	True				
ANR	1190789	AssignmentExpression	option |= syntax -> options		1190716	0		|=			
ANR	1190790	Identifier	option		1190716	0					
ANR	1190791	PtrMemberAccess	syntax -> options		1190716	1					
ANR	1190792	Identifier	syntax		1190716	0					
ANR	1190793	Identifier	options		1190716	1					
ANR	1190794	ExpressionStatement	( reg ) -> enc = enc	5500:2:124498:124527	1190716	6	True				
ANR	1190795	AssignmentExpression	( reg ) -> enc = enc		1190716	0		=			
ANR	1190796	PtrMemberAccess	( reg ) -> enc		1190716	0					
ANR	1190797	Identifier	reg		1190716	0					
ANR	1190798	Identifier	enc		1190716	1					
ANR	1190799	Identifier	enc		1190716	1					
ANR	1190800	ExpressionStatement	( reg ) -> options = option	5501:2:124531:124563	1190716	7	True				
ANR	1190801	AssignmentExpression	( reg ) -> options = option		1190716	0		=			
ANR	1190802	PtrMemberAccess	( reg ) -> options		1190716	0					
ANR	1190803	Identifier	reg		1190716	0					
ANR	1190804	Identifier	options		1190716	1					
ANR	1190805	Identifier	option		1190716	1					
ANR	1190806	ExpressionStatement	( reg ) -> syntax = syntax	5502:2:124567:124599	1190716	8	True				
ANR	1190807	AssignmentExpression	( reg ) -> syntax = syntax		1190716	0		=			
ANR	1190808	PtrMemberAccess	( reg ) -> syntax		1190716	0					
ANR	1190809	Identifier	reg		1190716	0					
ANR	1190810	Identifier	syntax		1190716	1					
ANR	1190811	Identifier	syntax		1190716	1					
ANR	1190812	ExpressionStatement	( reg ) -> optimize = 0	5503:2:124603:124630	1190716	9	True				
ANR	1190813	AssignmentExpression	( reg ) -> optimize = 0		1190716	0		=			
ANR	1190814	PtrMemberAccess	( reg ) -> optimize		1190716	0					
ANR	1190815	Identifier	reg		1190716	0					
ANR	1190816	Identifier	optimize		1190716	1					
ANR	1190817	PrimaryExpression	0		1190716	1					
ANR	1190818	ExpressionStatement	( reg ) -> exact = ( UChar * ) NULL	5504:2:124634:124673	1190716	10	True				
ANR	1190819	AssignmentExpression	( reg ) -> exact = ( UChar * ) NULL		1190716	0		=			
ANR	1190820	PtrMemberAccess	( reg ) -> exact		1190716	0					
ANR	1190821	Identifier	reg		1190716	0					
ANR	1190822	Identifier	exact		1190716	1					
ANR	1190823	CastExpression	( UChar * ) NULL		1190716	1					
ANR	1190824	CastTarget	UChar *		1190716	0					
ANR	1190825	Identifier	NULL		1190716	1					
ANR	1190826	ExpressionStatement	( reg ) -> int_map = ( int * ) NULL	5505:2:124677:124714	1190716	11	True				
ANR	1190827	AssignmentExpression	( reg ) -> int_map = ( int * ) NULL		1190716	0		=			
ANR	1190828	PtrMemberAccess	( reg ) -> int_map		1190716	0					
ANR	1190829	Identifier	reg		1190716	0					
ANR	1190830	Identifier	int_map		1190716	1					
ANR	1190831	CastExpression	( int * ) NULL		1190716	1					
ANR	1190832	CastTarget	int *		1190716	0					
ANR	1190833	Identifier	NULL		1190716	1					
ANR	1190834	ExpressionStatement	( reg ) -> int_map_backward = ( int * ) NULL	5506:2:124718:124755	1190716	12	True				
ANR	1190835	AssignmentExpression	( reg ) -> int_map_backward = ( int * ) NULL		1190716	0		=			
ANR	1190836	PtrMemberAccess	( reg ) -> int_map_backward		1190716	0					
ANR	1190837	Identifier	reg		1190716	0					
ANR	1190838	Identifier	int_map_backward		1190716	1					
ANR	1190839	CastExpression	( int * ) NULL		1190716	1					
ANR	1190840	CastTarget	int *		1190716	0					
ANR	1190841	Identifier	NULL		1190716	1					
ANR	1190842	ExpressionStatement	( reg ) -> chain = ( regex_t * ) NULL	5507:2:124759:124800	1190716	13	True				
ANR	1190843	AssignmentExpression	( reg ) -> chain = ( regex_t * ) NULL		1190716	0		=			
ANR	1190844	PtrMemberAccess	( reg ) -> chain		1190716	0					
ANR	1190845	Identifier	reg		1190716	0					
ANR	1190846	Identifier	chain		1190716	1					
ANR	1190847	CastExpression	( regex_t * ) NULL		1190716	1					
ANR	1190848	CastTarget	regex_t *		1190716	0					
ANR	1190849	Identifier	NULL		1190716	1					
ANR	1190850	ExpressionStatement	( reg ) -> p = ( UChar * ) NULL	5509:2:124805:124844	1190716	14	True				
ANR	1190851	AssignmentExpression	( reg ) -> p = ( UChar * ) NULL		1190716	0		=			
ANR	1190852	PtrMemberAccess	( reg ) -> p		1190716	0					
ANR	1190853	Identifier	reg		1190716	0					
ANR	1190854	Identifier	p		1190716	1					
ANR	1190855	CastExpression	( UChar * ) NULL		1190716	1					
ANR	1190856	CastTarget	UChar *		1190716	0					
ANR	1190857	Identifier	NULL		1190716	1					
ANR	1190858	ExpressionStatement	( reg ) -> alloc = 0	5510:2:124848:124875	1190716	15	True				
ANR	1190859	AssignmentExpression	( reg ) -> alloc = 0		1190716	0		=			
ANR	1190860	PtrMemberAccess	( reg ) -> alloc		1190716	0					
ANR	1190861	Identifier	reg		1190716	0					
ANR	1190862	Identifier	alloc		1190716	1					
ANR	1190863	PrimaryExpression	0		1190716	1					
ANR	1190864	ExpressionStatement	( reg ) -> used = 0	5511:2:124879:124906	1190716	16	True				
ANR	1190865	AssignmentExpression	( reg ) -> used = 0		1190716	0		=			
ANR	1190866	PtrMemberAccess	( reg ) -> used		1190716	0					
ANR	1190867	Identifier	reg		1190716	0					
ANR	1190868	Identifier	used		1190716	1					
ANR	1190869	PrimaryExpression	0		1190716	1					
ANR	1190870	ExpressionStatement	( reg ) -> name_table = ( void * ) NULL	5512:2:124910:124948	1190716	17	True				
ANR	1190871	AssignmentExpression	( reg ) -> name_table = ( void * ) NULL		1190716	0		=			
ANR	1190872	PtrMemberAccess	( reg ) -> name_table		1190716	0					
ANR	1190873	Identifier	reg		1190716	0					
ANR	1190874	Identifier	name_table		1190716	1					
ANR	1190875	CastExpression	( void * ) NULL		1190716	1					
ANR	1190876	CastTarget	void *		1190716	0					
ANR	1190877	Identifier	NULL		1190716	1					
ANR	1190878	ExpressionStatement	( reg ) -> case_fold_flag = case_fold_flag	5514:2:124953:124993	1190716	18	True				
ANR	1190879	AssignmentExpression	( reg ) -> case_fold_flag = case_fold_flag		1190716	0		=			
ANR	1190880	PtrMemberAccess	( reg ) -> case_fold_flag		1190716	0					
ANR	1190881	Identifier	reg		1190716	0					
ANR	1190882	Identifier	case_fold_flag		1190716	1					
ANR	1190883	Identifier	case_fold_flag		1190716	1					
ANR	1190884	ReturnStatement	return 0 ;	5515:2:124997:125005	1190716	19	True				
ANR	1190885	PrimaryExpression	0		1190716	0					
ANR	1190886	ReturnType	extern int		1190716	1					
ANR	1190887	Identifier	onig_reg_init		1190716	2					
ANR	1190888	ParameterList	"regex_t * reg , OnigOptionType option , OnigCaseFoldType case_fold_flag , OnigEncoding enc , OnigSyntaxType * syntax"		1190716	3					
ANR	1190889	Parameter	regex_t * reg	5473:14:123782:123793	1190716	0	True				
ANR	1190890	ParameterType	regex_t *		1190716	0					
ANR	1190891	Identifier	reg		1190716	1					
ANR	1190892	Parameter	OnigOptionType option	5473:28:123796:123816	1190716	1	True				
ANR	1190893	ParameterType	OnigOptionType		1190716	0					
ANR	1190894	Identifier	option		1190716	1					
ANR	1190895	Parameter	OnigCaseFoldType case_fold_flag	5474:7:123826:123856	1190716	2	True				
ANR	1190896	ParameterType	OnigCaseFoldType		1190716	0					
ANR	1190897	Identifier	case_fold_flag		1190716	1					
ANR	1190898	Parameter	OnigEncoding enc	5475:7:123866:123881	1190716	3	True				
ANR	1190899	ParameterType	OnigEncoding		1190716	0					
ANR	1190900	Identifier	enc		1190716	1					
ANR	1190901	Parameter	OnigSyntaxType * syntax	5475:25:123884:123905	1190716	4	True				
ANR	1190902	ParameterType	OnigSyntaxType *		1190716	0					
ANR	1190903	Identifier	syntax		1190716	1					
ANR	1190904	CFGEntryNode	ENTRY		1190716		True				
ANR	1190905	CFGExitNode	EXIT		1190716		True				
ANR	1190906	Symbol	ONIG_STATE_MODIFY		1190716						
ANR	1190907	Symbol	ONIGERR_INVALID_ARGUMENT		1190716						
ANR	1190908	Symbol	( reg ) -> chain		1190716						
ANR	1190909	Symbol	* syntax		1190716						
ANR	1190910	Symbol	onig_inited		1190716						
ANR	1190911	Symbol	case_fold_flag		1190716						
ANR	1190912	Symbol	( reg ) -> options		1190716						
ANR	1190913	Symbol	( reg ) -> enc		1190716						
ANR	1190914	Symbol	ONIGENC_IS_UNDEF		1190716						
ANR	1190915	Symbol	IS_NULL		1190716						
ANR	1190916	Symbol	ONIG_OPTION_NEGATE_SINGLELINE		1190716						
ANR	1190917	Symbol	reg		1190716						
ANR	1190918	Symbol	enc		1190716						
ANR	1190919	Symbol	( reg ) -> syntax		1190716						
ANR	1190920	Symbol	ONIGERR_INVALID_COMBINATION_OF_OPTIONS		1190716						
ANR	1190921	Symbol	( reg ) -> optimize		1190716						
ANR	1190922	Symbol	NULL		1190716						
ANR	1190923	Symbol	( reg ) -> case_fold_flag		1190716						
ANR	1190924	Symbol	( reg ) -> p		1190716						
ANR	1190925	Symbol	~ONIG_OPTION_SINGLELINE		1190716						
ANR	1190926	Symbol	( reg ) -> alloc		1190716						
ANR	1190927	Symbol	ONIG_OPTION_CAPTURE_GROUP		1190716						
ANR	1190928	Symbol	( reg ) -> exact		1190716						
ANR	1190929	Symbol	( reg ) -> used		1190716						
ANR	1190930	Symbol	( reg ) -> name_table		1190716						
ANR	1190931	Symbol	( reg ) -> int_map_backward		1190716						
ANR	1190932	Symbol	ONIGERR_DEFAULT_ENCODING_IS_NOT_SETTED		1190716						
ANR	1190933	Symbol	( reg ) -> state		1190716						
ANR	1190934	Symbol	syntax		1190716						
ANR	1190935	Symbol	ONIG_OPTION_DONT_CAPTURE_GROUP		1190716						
ANR	1190936	Symbol	syntax -> options		1190716						
ANR	1190937	Symbol	* reg		1190716						
ANR	1190938	Symbol	option		1190716						
ANR	1190939	Symbol	( reg ) -> int_map		1190716						
ANR	1190940	Function	onig_new_without_alloc	5518:0:125010:125385							
ANR	1190941	FunctionDef	"onig_new_without_alloc (regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigOptionType option , OnigEncoding enc , OnigSyntaxType * syntax , OnigErrorInfo * einfo)"		1190940	0					
ANR	1190942	CompoundStatement		5522:0:125213:125385	1190940	0					
ANR	1190943	IdentifierDeclStatement	int r ;	5523:2:125217:125222	1190940	0	True				
ANR	1190944	IdentifierDecl	r		1190940	0					
ANR	1190945	IdentifierDeclType	int		1190940	0					
ANR	1190946	Identifier	r		1190940	1					
ANR	1190947	ExpressionStatement	"r = onig_reg_init ( reg , option , ONIGENC_CASE_FOLD_DEFAULT , enc , syntax )"	5525:2:125227:125297	1190940	1	True				
ANR	1190948	AssignmentExpression	"r = onig_reg_init ( reg , option , ONIGENC_CASE_FOLD_DEFAULT , enc , syntax )"		1190940	0		=			
ANR	1190949	Identifier	r		1190940	0					
ANR	1190950	CallExpression	"onig_reg_init ( reg , option , ONIGENC_CASE_FOLD_DEFAULT , enc , syntax )"		1190940	1					
ANR	1190951	Callee	onig_reg_init		1190940	0					
ANR	1190952	Identifier	onig_reg_init		1190940	0					
ANR	1190953	ArgumentList	reg		1190940	1					
ANR	1190954	Argument	reg		1190940	0					
ANR	1190955	Identifier	reg		1190940	0					
ANR	1190956	Argument	option		1190940	1					
ANR	1190957	Identifier	option		1190940	0					
ANR	1190958	Argument	ONIGENC_CASE_FOLD_DEFAULT		1190940	2					
ANR	1190959	Identifier	ONIGENC_CASE_FOLD_DEFAULT		1190940	0					
ANR	1190960	Argument	enc		1190940	3					
ANR	1190961	Identifier	enc		1190940	0					
ANR	1190962	Argument	syntax		1190940	4					
ANR	1190963	Identifier	syntax		1190940	0					
ANR	1190964	IfStatement	if ( r )		1190940	2					
ANR	1190965	Condition	r	5526:6:125305:125305	1190940	0	True				
ANR	1190966	Identifier	r		1190940	0					
ANR	1190967	ReturnStatement	return r ;	5526:9:125308:125316	1190940	1	True				
ANR	1190968	Identifier	r		1190940	0					
ANR	1190969	ExpressionStatement	"r = onig_compile ( reg , pattern , pattern_end , einfo )"	5528:2:125321:125371	1190940	3	True				
ANR	1190970	AssignmentExpression	"r = onig_compile ( reg , pattern , pattern_end , einfo )"		1190940	0		=			
ANR	1190971	Identifier	r		1190940	0					
ANR	1190972	CallExpression	"onig_compile ( reg , pattern , pattern_end , einfo )"		1190940	1					
ANR	1190973	Callee	onig_compile		1190940	0					
ANR	1190974	Identifier	onig_compile		1190940	0					
ANR	1190975	ArgumentList	reg		1190940	1					
ANR	1190976	Argument	reg		1190940	0					
ANR	1190977	Identifier	reg		1190940	0					
ANR	1190978	Argument	pattern		1190940	1					
ANR	1190979	Identifier	pattern		1190940	0					
ANR	1190980	Argument	pattern_end		1190940	2					
ANR	1190981	Identifier	pattern_end		1190940	0					
ANR	1190982	Argument	einfo		1190940	3					
ANR	1190983	Identifier	einfo		1190940	0					
ANR	1190984	ReturnStatement	return r ;	5529:2:125375:125383	1190940	4	True				
ANR	1190985	Identifier	r		1190940	0					
ANR	1190986	ReturnType	extern int		1190940	1					
ANR	1190987	Identifier	onig_new_without_alloc		1190940	2					
ANR	1190988	ParameterList	"regex_t * reg , const UChar * pattern , const UChar * pattern_end , OnigOptionType option , OnigEncoding enc , OnigSyntaxType * syntax , OnigErrorInfo * einfo"		1190940	3					
ANR	1190989	Parameter	regex_t * reg	5519:23:125044:125055	1190940	0	True				
ANR	1190990	ParameterType	regex_t *		1190940	0					
ANR	1190991	Identifier	reg		1190940	1					
ANR	1190992	Parameter	const UChar * pattern	5519:37:125058:125077	1190940	1	True				
ANR	1190993	ParameterType	const UChar *		1190940	0					
ANR	1190994	Identifier	pattern		1190940	1					
ANR	1190995	Parameter	const UChar * pattern_end	5520:10:125090:125113	1190940	2	True				
ANR	1190996	ParameterType	const UChar *		1190940	0					
ANR	1190997	Identifier	pattern_end		1190940	1					
ANR	1190998	Parameter	OnigOptionType option	5520:36:125116:125136	1190940	3	True				
ANR	1190999	ParameterType	OnigOptionType		1190940	0					
ANR	1191000	Identifier	option		1190940	1					
ANR	1191001	Parameter	OnigEncoding enc	5520:59:125139:125154	1190940	4	True				
ANR	1191002	ParameterType	OnigEncoding		1190940	0					
ANR	1191003	Identifier	enc		1190940	1					
ANR	1191004	Parameter	OnigSyntaxType * syntax	5521:10:125167:125188	1190940	5	True				
ANR	1191005	ParameterType	OnigSyntaxType *		1190940	0					
ANR	1191006	Identifier	syntax		1190940	1					
ANR	1191007	Parameter	OnigErrorInfo * einfo	5521:34:125191:125210	1190940	6	True				
ANR	1191008	ParameterType	OnigErrorInfo *		1190940	0					
ANR	1191009	Identifier	einfo		1190940	1					
ANR	1191010	CFGEntryNode	ENTRY		1190940		True				
ANR	1191011	CFGExitNode	EXIT		1190940		True				
ANR	1191012	Symbol	r		1190940						
ANR	1191013	Symbol	einfo		1190940						
ANR	1191014	Symbol	onig_reg_init		1190940						
ANR	1191015	Symbol	reg		1190940						
ANR	1191016	Symbol	pattern		1190940						
ANR	1191017	Symbol	pattern_end		1190940						
ANR	1191018	Symbol	syntax		1190940						
ANR	1191019	Symbol	ONIGENC_CASE_FOLD_DEFAULT		1190940						
ANR	1191020	Symbol	enc		1190940						
ANR	1191021	Symbol	onig_compile		1190940						
ANR	1191022	Symbol	option		1190940						
ANR	1191023	Function	onig_new	5532:0:125388:125889							
ANR	1191024	FunctionDef	"onig_new (regex_t * * reg , const UChar * pattern , const UChar * pattern_end , OnigOptionType option , OnigEncoding enc , OnigSyntaxType * syntax , OnigErrorInfo * einfo)"		1191023	0					
ANR	1191025	CompoundStatement		5536:0:125564:125889	1191023	0					
ANR	1191026	IdentifierDeclStatement	int r ;	5537:2:125568:125573	1191023	0	True				
ANR	1191027	IdentifierDecl	r		1191023	0					
ANR	1191028	IdentifierDeclType	int		1191023	0					
ANR	1191029	Identifier	r		1191023	1					
ANR	1191030	ExpressionStatement	* reg = ( regex_t * ) xmalloc ( sizeof ( regex_t ) )	5539:2:125578:125620	1191023	1	True				
ANR	1191031	AssignmentExpression	* reg = ( regex_t * ) xmalloc ( sizeof ( regex_t ) )		1191023	0		=			
ANR	1191032	UnaryOperationExpression	* reg		1191023	0					
ANR	1191033	UnaryOperator	*		1191023	0					
ANR	1191034	Identifier	reg		1191023	1					
ANR	1191035	CastExpression	( regex_t * ) xmalloc ( sizeof ( regex_t ) )		1191023	1					
ANR	1191036	CastTarget	regex_t *		1191023	0					
ANR	1191037	CallExpression	xmalloc ( sizeof ( regex_t ) )		1191023	1					
ANR	1191038	Callee	xmalloc		1191023	0					
ANR	1191039	Identifier	xmalloc		1191023	0					
ANR	1191040	ArgumentList	sizeof ( regex_t )		1191023	1					
ANR	1191041	Argument	sizeof ( regex_t )		1191023	0					
ANR	1191042	SizeofExpression	sizeof ( regex_t )		1191023	0					
ANR	1191043	Sizeof	sizeof		1191023	0					
ANR	1191044	SizeofOperand	regex_t		1191023	1					
ANR	1191045	IfStatement	if ( IS_NULL ( * reg ) )		1191023	2					
ANR	1191046	Condition	IS_NULL ( * reg )	5540:6:125628:125640	1191023	0	True				
ANR	1191047	CallExpression	IS_NULL ( * reg )		1191023	0					
ANR	1191048	Callee	IS_NULL		1191023	0					
ANR	1191049	Identifier	IS_NULL		1191023	0					
ANR	1191050	ArgumentList	* reg		1191023	1					
ANR	1191051	Argument	* reg		1191023	0					
ANR	1191052	UnaryOperationExpression	* reg		1191023	0					
ANR	1191053	UnaryOperator	*		1191023	0					
ANR	1191054	Identifier	reg		1191023	1					
ANR	1191055	ReturnStatement	return ONIGERR_MEMORY ;	5540:21:125643:125664	1191023	1	True				
ANR	1191056	Identifier	ONIGERR_MEMORY		1191023	0					
ANR	1191057	ExpressionStatement	"r = onig_reg_init ( * reg , option , ONIGENC_CASE_FOLD_DEFAULT , enc , syntax )"	5542:2:125669:125740	1191023	3	True				
ANR	1191058	AssignmentExpression	"r = onig_reg_init ( * reg , option , ONIGENC_CASE_FOLD_DEFAULT , enc , syntax )"		1191023	0		=			
ANR	1191059	Identifier	r		1191023	0					
ANR	1191060	CallExpression	"onig_reg_init ( * reg , option , ONIGENC_CASE_FOLD_DEFAULT , enc , syntax )"		1191023	1					
ANR	1191061	Callee	onig_reg_init		1191023	0					
ANR	1191062	Identifier	onig_reg_init		1191023	0					
ANR	1191063	ArgumentList	* reg		1191023	1					
ANR	1191064	Argument	* reg		1191023	0					
ANR	1191065	UnaryOperationExpression	* reg		1191023	0					
ANR	1191066	UnaryOperator	*		1191023	0					
ANR	1191067	Identifier	reg		1191023	1					
ANR	1191068	Argument	option		1191023	1					
ANR	1191069	Identifier	option		1191023	0					
ANR	1191070	Argument	ONIGENC_CASE_FOLD_DEFAULT		1191023	2					
ANR	1191071	Identifier	ONIGENC_CASE_FOLD_DEFAULT		1191023	0					
ANR	1191072	Argument	enc		1191023	3					
ANR	1191073	Identifier	enc		1191023	0					
ANR	1191074	Argument	syntax		1191023	4					
ANR	1191075	Identifier	syntax		1191023	0					
ANR	1191076	IfStatement	if ( r )		1191023	4					
ANR	1191077	Condition	r	5543:6:125748:125748	1191023	0	True				
ANR	1191078	Identifier	r		1191023	0					
ANR	1191079	GotoStatement	goto err ;	5543:9:125751:125759	1191023	1	True				
ANR	1191080	Identifier	err		1191023	0					
ANR	1191081	ExpressionStatement	"r = onig_compile ( * reg , pattern , pattern_end , einfo )"	5545:2:125764:125815	1191023	5	True				
ANR	1191082	AssignmentExpression	"r = onig_compile ( * reg , pattern , pattern_end , einfo )"		1191023	0		=			
ANR	1191083	Identifier	r		1191023	0					
ANR	1191084	CallExpression	"onig_compile ( * reg , pattern , pattern_end , einfo )"		1191023	1					
ANR	1191085	Callee	onig_compile		1191023	0					
ANR	1191086	Identifier	onig_compile		1191023	0					
ANR	1191087	ArgumentList	* reg		1191023	1					
ANR	1191088	Argument	* reg		1191023	0					
ANR	1191089	UnaryOperationExpression	* reg		1191023	0					
ANR	1191090	UnaryOperator	*		1191023	0					
ANR	1191091	Identifier	reg		1191023	1					
ANR	1191092	Argument	pattern		1191023	1					
ANR	1191093	Identifier	pattern		1191023	0					
ANR	1191094	Argument	pattern_end		1191023	2					
ANR	1191095	Identifier	pattern_end		1191023	0					
ANR	1191096	Argument	einfo		1191023	3					
ANR	1191097	Identifier	einfo		1191023	0					
ANR	1191098	IfStatement	if ( r )		1191023	6					
ANR	1191099	Condition	r	5546:6:125823:125823	1191023	0	True				
ANR	1191100	Identifier	r		1191023	0					
ANR	1191101	CompoundStatement		11:9:261:261	1191023	1					
ANR	1191102	Label	err :	5547:2:125830:125833	1191023	0	True				
ANR	1191103	Identifier	err		1191023	0					
ANR	1191104	ExpressionStatement	onig_free ( * reg )	5548:4:125839:125854	1191023	1	True				
ANR	1191105	CallExpression	onig_free ( * reg )		1191023	0					
ANR	1191106	Callee	onig_free		1191023	0					
ANR	1191107	Identifier	onig_free		1191023	0					
ANR	1191108	ArgumentList	* reg		1191023	1					
ANR	1191109	Argument	* reg		1191023	0					
ANR	1191110	UnaryOperationExpression	* reg		1191023	0					
ANR	1191111	UnaryOperator	*		1191023	0					
ANR	1191112	Identifier	reg		1191023	1					
ANR	1191113	ExpressionStatement	* reg = NULL	5549:4:125860:125871	1191023	2	True				
ANR	1191114	AssignmentExpression	* reg = NULL		1191023	0		=			
ANR	1191115	UnaryOperationExpression	* reg		1191023	0					
ANR	1191116	UnaryOperator	*		1191023	0					
ANR	1191117	Identifier	reg		1191023	1					
ANR	1191118	Identifier	NULL		1191023	1					
ANR	1191119	ReturnStatement	return r ;	5551:2:125879:125887	1191023	7	True				
ANR	1191120	Identifier	r		1191023	0					
ANR	1191121	ReturnType	extern int		1191023	1					
ANR	1191122	Identifier	onig_new		1191023	2					
ANR	1191123	ParameterList	"regex_t * * reg , const UChar * pattern , const UChar * pattern_end , OnigOptionType option , OnigEncoding enc , OnigSyntaxType * syntax , OnigErrorInfo * einfo"		1191023	3					
ANR	1191124	Parameter	regex_t * * reg	5533:9:125408:125420	1191023	0	True				
ANR	1191125	ParameterType	regex_t * *		1191023	0					
ANR	1191126	Identifier	reg		1191023	1					
ANR	1191127	Parameter	const UChar * pattern	5533:24:125423:125442	1191023	1	True				
ANR	1191128	ParameterType	const UChar *		1191023	0					
ANR	1191129	Identifier	pattern		1191023	1					
ANR	1191130	Parameter	const UChar * pattern_end	5533:46:125445:125468	1191023	2	True				
ANR	1191131	ParameterType	const UChar *		1191023	0					
ANR	1191132	Identifier	pattern_end		1191023	1					
ANR	1191133	Parameter	OnigOptionType option	5534:3:125474:125494	1191023	3	True				
ANR	1191134	ParameterType	OnigOptionType		1191023	0					
ANR	1191135	Identifier	option		1191023	1					
ANR	1191136	Parameter	OnigEncoding enc	5534:26:125497:125512	1191023	4	True				
ANR	1191137	ParameterType	OnigEncoding		1191023	0					
ANR	1191138	Identifier	enc		1191023	1					
ANR	1191139	Parameter	OnigSyntaxType * syntax	5534:44:125515:125536	1191023	5	True				
ANR	1191140	ParameterType	OnigSyntaxType *		1191023	0					
ANR	1191141	Identifier	syntax		1191023	1					
ANR	1191142	Parameter	OnigErrorInfo * einfo	5535:3:125542:125561	1191023	6	True				
ANR	1191143	ParameterType	OnigErrorInfo *		1191023	0					
ANR	1191144	Identifier	einfo		1191023	1					
ANR	1191145	CFGEntryNode	ENTRY		1191023		True				
ANR	1191146	CFGExitNode	EXIT		1191023		True				
ANR	1191147	Symbol	NULL		1191023						
ANR	1191148	Symbol	pattern		1191023						
ANR	1191149	Symbol	ONIGERR_MEMORY		1191023						
ANR	1191150	Symbol	pattern_end		1191023						
ANR	1191151	Symbol	ONIGENC_CASE_FOLD_DEFAULT		1191023						
ANR	1191152	Symbol	r		1191023						
ANR	1191153	Symbol	einfo		1191023						
ANR	1191154	Symbol	onig_reg_init		1191023						
ANR	1191155	Symbol	IS_NULL		1191023						
ANR	1191156	Symbol	reg		1191023						
ANR	1191157	Symbol	xmalloc		1191023						
ANR	1191158	Symbol	syntax		1191023						
ANR	1191159	Symbol	enc		1191023						
ANR	1191160	Symbol	onig_compile		1191023						
ANR	1191161	Symbol	* reg		1191023						
ANR	1191162	Symbol	option		1191023						
ANR	1191163	Function	onig_init	5555:0:125893:126198							
ANR	1191164	FunctionDef	onig_init ()		1191163	0					
ANR	1191165	CompoundStatement		5557:0:125920:126198	1191163	0					
ANR	1191166	IfStatement	if ( onig_inited != 0 )		1191163	0					
ANR	1191167	Condition	onig_inited != 0	5558:6:125928:125943	1191163	0	True				
ANR	1191168	EqualityExpression	onig_inited != 0		1191163	0		!=			
ANR	1191169	Identifier	onig_inited		1191163	0					
ANR	1191170	PrimaryExpression	0		1191163	1					
ANR	1191171	ReturnStatement	return 0 ;	5559:4:125950:125958	1191163	1	True				
ANR	1191172	PrimaryExpression	0		1191163	0					
ANR	1191173	ExpressionStatement	THREAD_SYSTEM_INIT	5561:2:125963:125981	1191163	1	True				
ANR	1191174	Identifier	THREAD_SYSTEM_INIT		1191163	0					
ANR	1191175	ExpressionStatement	THREAD_ATOMIC_START	5562:2:125985:126004	1191163	2	True				
ANR	1191176	Identifier	THREAD_ATOMIC_START		1191163	0					
ANR	1191177	ExpressionStatement	onig_inited = 1	5564:2:126009:126024	1191163	3	True				
ANR	1191178	AssignmentExpression	onig_inited = 1		1191163	0		=			
ANR	1191179	Identifier	onig_inited		1191163	0					
ANR	1191180	PrimaryExpression	1		1191163	1					
ANR	1191181	ExpressionStatement	onigenc_init ( )	5566:2:126029:126043	1191163	4	True				
ANR	1191182	CallExpression	onigenc_init ( )		1191163	0					
ANR	1191183	Callee	onigenc_init		1191163	0					
ANR	1191184	Identifier	onigenc_init		1191163	0					
ANR	1191185	ArgumentList			1191163	1					
ANR	1191186	ExpressionStatement	onig_statistics_init ( )	5570:2:126133:126155	1191163	5	True				
ANR	1191187	CallExpression	onig_statistics_init ( )		1191163	0					
ANR	1191188	Callee	onig_statistics_init		1191163	0					
ANR	1191189	Identifier	onig_statistics_init		1191163	0					
ANR	1191190	ArgumentList			1191163	1					
ANR	1191191	ExpressionStatement	THREAD_ATOMIC_END	5573:2:126167:126184	1191163	6	True				
ANR	1191192	Identifier	THREAD_ATOMIC_END		1191163	0					
ANR	1191193	ReturnStatement	return 0 ;	5574:2:126188:126196	1191163	7	True				
ANR	1191194	PrimaryExpression	0		1191163	0					
ANR	1191195	ReturnType	extern int		1191163	1					
ANR	1191196	Identifier	onig_init		1191163	2					
ANR	1191197	ParameterList			1191163	3					
ANR	1191198	CFGEntryNode	ENTRY		1191163		True				
ANR	1191199	CFGExitNode	EXIT		1191163		True				
ANR	1191200	Symbol	onig_inited		1191163						
ANR	1191201	DeclStmt									
ANR	1191202	Decl							OnigEndCallListItemType	OnigEndCallListItemType *	EndCallTop
ANR	1191203	Function	onig_add_end_call	5580:0:126247:126490							
ANR	1191204	FunctionDef	onig_add_end_call (void ( * func ) ( void ))		1191203	0					
ANR	1191205	CompoundStatement		5581:0:126297:126490	1191203	0					
ANR	1191206	IdentifierDeclStatement	OnigEndCallListItemType * item ;	5582:2:126301:126330	1191203	0	True				
ANR	1191207	IdentifierDecl	* item		1191203	0					
ANR	1191208	IdentifierDeclType	OnigEndCallListItemType *		1191203	0					
ANR	1191209	Identifier	item		1191203	1					
ANR	1191210	ExpressionStatement	item = ( OnigEndCallListItemType * ) xmalloc ( sizeof ( * item ) )	5584:2:126335:126391	1191203	1	True				
ANR	1191211	AssignmentExpression	item = ( OnigEndCallListItemType * ) xmalloc ( sizeof ( * item ) )		1191203	0		=			
ANR	1191212	Identifier	item		1191203	0					
ANR	1191213	CastExpression	( OnigEndCallListItemType * ) xmalloc ( sizeof ( * item ) )		1191203	1					
ANR	1191214	CastTarget	OnigEndCallListItemType *		1191203	0					
ANR	1191215	CallExpression	xmalloc ( sizeof ( * item ) )		1191203	1					
ANR	1191216	Callee	xmalloc		1191203	0					
ANR	1191217	Identifier	xmalloc		1191203	0					
ANR	1191218	ArgumentList	sizeof ( * item )		1191203	1					
ANR	1191219	Argument	sizeof ( * item )		1191203	0					
ANR	1191220	SizeofExpression	sizeof ( * item )		1191203	0					
ANR	1191221	Sizeof	sizeof		1191203	0					
ANR	1191222	UnaryOperationExpression	* item		1191203	1					
ANR	1191223	UnaryOperator	*		1191203	0					
ANR	1191224	Identifier	item		1191203	1					
ANR	1191225	IfStatement	if ( item == 0 )		1191203	2					
ANR	1191226	Condition	item == 0	5585:6:126399:126407	1191203	0	True				
ANR	1191227	EqualityExpression	item == 0		1191203	0		==			
ANR	1191228	Identifier	item		1191203	0					
ANR	1191229	PrimaryExpression	0		1191203	1					
ANR	1191230	ReturnStatement	return ;	5585:17:126410:126417	1191203	1	True				
ANR	1191231	ExpressionStatement	item -> next = EndCallTop	5587:2:126422:126445	1191203	3	True				
ANR	1191232	AssignmentExpression	item -> next = EndCallTop		1191203	0		=			
ANR	1191233	PtrMemberAccess	item -> next		1191203	0					
ANR	1191234	Identifier	item		1191203	0					
ANR	1191235	Identifier	next		1191203	1					
ANR	1191236	Identifier	EndCallTop		1191203	1					
ANR	1191237	ExpressionStatement	item -> func = func	5588:2:126449:126466	1191203	4	True				
ANR	1191238	AssignmentExpression	item -> func = func		1191203	0		=			
ANR	1191239	PtrMemberAccess	item -> func		1191203	0					
ANR	1191240	Identifier	item		1191203	0					
ANR	1191241	Identifier	func		1191203	1					
ANR	1191242	Identifier	func		1191203	1					
ANR	1191243	ExpressionStatement	EndCallTop = item	5590:2:126471:126488	1191203	5	True				
ANR	1191244	AssignmentExpression	EndCallTop = item		1191203	0		=			
ANR	1191245	Identifier	EndCallTop		1191203	0					
ANR	1191246	Identifier	item		1191203	1					
ANR	1191247	ReturnType	extern void		1191203	1					
ANR	1191248	Identifier	onig_add_end_call		1191203	2					
ANR	1191249	ParameterList	void ( * func ) ( void )		1191203	3					
ANR	1191250	Parameter	void ( * func ) ( void )	5580:30:126277:126294	1191203	0	True				
ANR	1191251	ParameterType	(( void ) void) *		1191203	0					
ANR	1191252	Identifier	func		1191203	1					
ANR	1191253	CFGEntryNode	ENTRY		1191203		True				
ANR	1191254	CFGExitNode	EXIT		1191203		True				
ANR	1191255	Symbol	item		1191203						
ANR	1191256	Symbol	func		1191203						
ANR	1191257	Symbol	xmalloc		1191203						
ANR	1191258	Symbol	* item		1191203						
ANR	1191259	Symbol	EndCallTop		1191203						
ANR	1191260	Symbol	item -> next		1191203						
ANR	1191261	Symbol	item -> func		1191203						
ANR	1191262	Function	exec_end_call_list	5593:0:126493:126740							
ANR	1191263	FunctionDef	exec_end_call_list ()		1191262	0					
ANR	1191264	CompoundStatement		5595:0:126530:126740	1191262	0					
ANR	1191265	IdentifierDeclStatement	OnigEndCallListItemType * prev ;	5596:2:126534:126563	1191262	0	True				
ANR	1191266	IdentifierDecl	* prev		1191262	0					
ANR	1191267	IdentifierDeclType	OnigEndCallListItemType *		1191262	0					
ANR	1191268	Identifier	prev		1191262	1					
ANR	1191269	IdentifierDeclStatement	void ( * func ) ( void ) ;	5597:2:126567:126585	1191262	1	True				
ANR	1191270	IdentifierDecl	( * func ) ( void )		1191262	0					
ANR	1191271	IdentifierDeclType	void ( * ) ( void )		1191262	0					
ANR	1191272	Identifier	func		1191262	1					
ANR	1191273	WhileStatement	while ( EndCallTop != 0 )		1191262	2					
ANR	1191274	Condition	EndCallTop != 0	5599:9:126597:126611	1191262	0	True				
ANR	1191275	EqualityExpression	EndCallTop != 0		1191262	0		!=			
ANR	1191276	Identifier	EndCallTop		1191262	0					
ANR	1191277	PrimaryExpression	0		1191262	1					
ANR	1191278	CompoundStatement		5:26:83:83	1191262	1					
ANR	1191279	ExpressionStatement	func = EndCallTop -> func	5600:4:126620:126643	1191262	0	True				
ANR	1191280	AssignmentExpression	func = EndCallTop -> func		1191262	0		=			
ANR	1191281	Identifier	func		1191262	0					
ANR	1191282	PtrMemberAccess	EndCallTop -> func		1191262	1					
ANR	1191283	Identifier	EndCallTop		1191262	0					
ANR	1191284	Identifier	func		1191262	1					
ANR	1191285	ExpressionStatement	( * func ) ( )	5601:4:126649:126658	1191262	1	True				
ANR	1191286	CallExpression	( * func ) ( )		1191262	0					
ANR	1191287	Callee	* func		1191262	0					
ANR	1191288	UnaryOperationExpression	* func		1191262	0					
ANR	1191289	UnaryOperator	*		1191262	0					
ANR	1191290	Identifier	func		1191262	1					
ANR	1191291	ArgumentList			1191262	1					
ANR	1191292	ExpressionStatement	prev = EndCallTop	5603:4:126665:126682	1191262	2	True				
ANR	1191293	AssignmentExpression	prev = EndCallTop		1191262	0		=			
ANR	1191294	Identifier	prev		1191262	0					
ANR	1191295	Identifier	EndCallTop		1191262	1					
ANR	1191296	ExpressionStatement	EndCallTop = EndCallTop -> next	5604:4:126688:126717	1191262	3	True				
ANR	1191297	AssignmentExpression	EndCallTop = EndCallTop -> next		1191262	0		=			
ANR	1191298	Identifier	EndCallTop		1191262	0					
ANR	1191299	PtrMemberAccess	EndCallTop -> next		1191262	1					
ANR	1191300	Identifier	EndCallTop		1191262	0					
ANR	1191301	Identifier	next		1191262	1					
ANR	1191302	ExpressionStatement	xfree ( prev )	5605:4:126723:126734	1191262	4	True				
ANR	1191303	CallExpression	xfree ( prev )		1191262	0					
ANR	1191304	Callee	xfree		1191262	0					
ANR	1191305	Identifier	xfree		1191262	0					
ANR	1191306	ArgumentList	prev		1191262	1					
ANR	1191307	Argument	prev		1191262	0					
ANR	1191308	Identifier	prev		1191262	0					
ANR	1191309	ReturnType	static void		1191262	1					
ANR	1191310	Identifier	exec_end_call_list		1191262	2					
ANR	1191311	ParameterList			1191262	3					
ANR	1191312	CFGEntryNode	ENTRY		1191262		True				
ANR	1191313	CFGExitNode	EXIT		1191262		True				
ANR	1191314	Symbol	* EndCallTop		1191262						
ANR	1191315	Symbol	EndCallTop -> next		1191262						
ANR	1191316	Symbol	func		1191262						
ANR	1191317	Symbol	EndCallTop -> func		1191262						
ANR	1191318	Symbol	prev		1191262						
ANR	1191319	Symbol	EndCallTop		1191262						
ANR	1191320	Function	onig_end	5609:0:126743:127106							
ANR	1191321	FunctionDef	onig_end ()		1191320	0					
ANR	1191322	CompoundStatement		5611:0:126769:127106	1191320	0					
ANR	1191323	ExpressionStatement	THREAD_ATOMIC_START	5612:2:126773:126792	1191320	0	True				
ANR	1191324	Identifier	THREAD_ATOMIC_START		1191320	0					
ANR	1191325	ExpressionStatement	exec_end_call_list ( )	5614:2:126797:126817	1191320	1	True				
ANR	1191326	CallExpression	exec_end_call_list ( )		1191320	0					
ANR	1191327	Callee	exec_end_call_list		1191320	0					
ANR	1191328	Identifier	exec_end_call_list		1191320	0					
ANR	1191329	ArgumentList			1191320	1					
ANR	1191330	ExpressionStatement	onig_print_statistics ( stderr )	5617:2:126851:126880	1191320	2	True				
ANR	1191331	CallExpression	onig_print_statistics ( stderr )		1191320	0					
ANR	1191332	Callee	onig_print_statistics		1191320	0					
ANR	1191333	Identifier	onig_print_statistics		1191320	0					
ANR	1191334	ArgumentList	stderr		1191320	1					
ANR	1191335	Argument	stderr		1191320	0					
ANR	1191336	Identifier	stderr		1191320	0					
ANR	1191337	ExpressionStatement	onig_free_shared_cclass_table ( )	5621:2:126923:126954	1191320	3	True				
ANR	1191338	CallExpression	onig_free_shared_cclass_table ( )		1191320	0					
ANR	1191339	Callee	onig_free_shared_cclass_table		1191320	0					
ANR	1191340	Identifier	onig_free_shared_cclass_table		1191320	0					
ANR	1191341	ArgumentList			1191320	1					
ANR	1191342	ExpressionStatement	onig_free_node_list ( )	5625:2:127001:127022	1191320	4	True				
ANR	1191343	CallExpression	onig_free_node_list ( )		1191320	0					
ANR	1191344	Callee	onig_free_node_list		1191320	0					
ANR	1191345	Identifier	onig_free_node_list		1191320	0					
ANR	1191346	ArgumentList			1191320	1					
ANR	1191347	ExpressionStatement	onig_inited = 0	5628:2:127034:127049	1191320	5	True				
ANR	1191348	AssignmentExpression	onig_inited = 0		1191320	0		=			
ANR	1191349	Identifier	onig_inited		1191320	0					
ANR	1191350	PrimaryExpression	0		1191320	1					
ANR	1191351	ExpressionStatement	THREAD_ATOMIC_END	5630:2:127054:127071	1191320	6	True				
ANR	1191352	Identifier	THREAD_ATOMIC_END		1191320	0					
ANR	1191353	ExpressionStatement	THREAD_SYSTEM_END	5631:2:127075:127092	1191320	7	True				
ANR	1191354	Identifier	THREAD_SYSTEM_END		1191320	0					
ANR	1191355	ReturnStatement	return 0 ;	5632:2:127096:127104	1191320	8	True				
ANR	1191356	PrimaryExpression	0		1191320	0					
ANR	1191357	ReturnType	extern int		1191320	1					
ANR	1191358	Identifier	onig_end		1191320	2					
ANR	1191359	ParameterList			1191320	3					
ANR	1191360	CFGEntryNode	ENTRY		1191320		True				
ANR	1191361	CFGExitNode	EXIT		1191320		True				
ANR	1191362	Symbol	stderr		1191320						
ANR	1191363	Symbol	onig_inited		1191320						
ANR	1191364	Function	onig_is_in_code_range	5635:0:127109:127506							
ANR	1191365	FunctionDef	"onig_is_in_code_range (const UChar * p , OnigCodePoint code)"		1191364	0					
ANR	1191366	CompoundStatement		5637:0:127178:127506	1191364	0					
ANR	1191367	IdentifierDeclStatement	"OnigCodePoint n , * data ;"	5638:2:127182:127204	1191364	0	True				
ANR	1191368	IdentifierDecl	n		1191364	0					
ANR	1191369	IdentifierDeclType	OnigCodePoint		1191364	0					
ANR	1191370	Identifier	n		1191364	1					
ANR	1191371	IdentifierDecl	* data		1191364	1					
ANR	1191372	IdentifierDeclType	OnigCodePoint *		1191364	0					
ANR	1191373	Identifier	data		1191364	1					
ANR	1191374	IdentifierDeclStatement	"OnigCodePoint low , high , x ;"	5639:2:127208:127234	1191364	1	True				
ANR	1191375	IdentifierDecl	low		1191364	0					
ANR	1191376	IdentifierDeclType	OnigCodePoint		1191364	0					
ANR	1191377	Identifier	low		1191364	1					
ANR	1191378	IdentifierDecl	high		1191364	1					
ANR	1191379	IdentifierDeclType	OnigCodePoint		1191364	0					
ANR	1191380	Identifier	high		1191364	1					
ANR	1191381	IdentifierDecl	x		1191364	2					
ANR	1191382	IdentifierDeclType	OnigCodePoint		1191364	0					
ANR	1191383	Identifier	x		1191364	1					
ANR	1191384	ExpressionStatement	"GET_CODE_POINT ( n , p )"	5641:2:127239:127259	1191364	2	True				
ANR	1191385	CallExpression	"GET_CODE_POINT ( n , p )"		1191364	0					
ANR	1191386	Callee	GET_CODE_POINT		1191364	0					
ANR	1191387	Identifier	GET_CODE_POINT		1191364	0					
ANR	1191388	ArgumentList	n		1191364	1					
ANR	1191389	Argument	n		1191364	0					
ANR	1191390	Identifier	n		1191364	0					
ANR	1191391	Argument	p		1191364	1					
ANR	1191392	Identifier	p		1191364	0					
ANR	1191393	ExpressionStatement	data = ( OnigCodePoint * ) p	5642:2:127263:127288	1191364	3	True				
ANR	1191394	AssignmentExpression	data = ( OnigCodePoint * ) p		1191364	0		=			
ANR	1191395	Identifier	data		1191364	0					
ANR	1191396	CastExpression	( OnigCodePoint * ) p		1191364	1					
ANR	1191397	CastTarget	OnigCodePoint *		1191364	0					
ANR	1191398	Identifier	p		1191364	1					
ANR	1191399	ExpressionStatement	data ++	5643:2:127292:127298	1191364	4	True				
ANR	1191400	PostIncDecOperationExpression	data ++		1191364	0					
ANR	1191401	Identifier	data		1191364	0					
ANR	1191402	IncDec	++		1191364	1					
ANR	1191403	ForStatement	"for ( low = 0 , high = n ; low < high ; )"		1191364	5					
ANR	1191404	ForInit	"low = 0 , high = n ;"	5645:7:127308:127325	1191364	0	True				
ANR	1191405	Expression	"low = 0 , high = n"		1191364	0					
ANR	1191406	AssignmentExpression	low = 0		1191364	0		=			
ANR	1191407	Identifier	low		1191364	0					
ANR	1191408	PrimaryExpression	0		1191364	1					
ANR	1191409	AssignmentExpression	high = n		1191364	1		=			
ANR	1191410	Identifier	high		1191364	0					
ANR	1191411	Identifier	n		1191364	1					
ANR	1191412	Condition	low < high	5645:26:127327:127336	1191364	1	True				
ANR	1191413	RelationalExpression	low < high		1191364	0		<			
ANR	1191414	Identifier	low		1191364	0					
ANR	1191415	Identifier	high		1191364	1					
ANR	1191416	CompoundStatement		9:40:162:162	1191364	2					
ANR	1191417	ExpressionStatement	x = ( low + high ) >> 1	5646:4:127347:127368	1191364	0	True				
ANR	1191418	AssignmentExpression	x = ( low + high ) >> 1		1191364	0		=			
ANR	1191419	Identifier	x		1191364	0					
ANR	1191420	ShiftExpression	( low + high ) >> 1		1191364	1		>>			
ANR	1191421	AdditiveExpression	low + high		1191364	0		+			
ANR	1191422	Identifier	low		1191364	0					
ANR	1191423	Identifier	high		1191364	1					
ANR	1191424	PrimaryExpression	1		1191364	1					
ANR	1191425	IfStatement	if ( code > data [ x * 2 + 1 ] )		1191364	1					
ANR	1191426	Condition	code > data [ x * 2 + 1 ]	5647:8:127378:127399	1191364	0	True				
ANR	1191427	RelationalExpression	code > data [ x * 2 + 1 ]		1191364	0		>			
ANR	1191428	Identifier	code		1191364	0					
ANR	1191429	ArrayIndexing	data [ x * 2 + 1 ]		1191364	1					
ANR	1191430	Identifier	data		1191364	0					
ANR	1191431	AdditiveExpression	x * 2 + 1		1191364	1		+			
ANR	1191432	MultiplicativeExpression	x * 2		1191364	0		*			
ANR	1191433	Identifier	x		1191364	0					
ANR	1191434	PrimaryExpression	2		1191364	1					
ANR	1191435	PrimaryExpression	1		1191364	1					
ANR	1191436	ExpressionStatement	low = x + 1	5648:6:127408:127419	1191364	1	True				
ANR	1191437	AssignmentExpression	low = x + 1		1191364	0		=			
ANR	1191438	Identifier	low		1191364	0					
ANR	1191439	AdditiveExpression	x + 1		1191364	1		+			
ANR	1191440	Identifier	x		1191364	0					
ANR	1191441	PrimaryExpression	1		1191364	1					
ANR	1191442	ElseStatement	else		1191364	0					
ANR	1191443	ExpressionStatement	high = x	5650:6:127436:127444	1191364	0	True				
ANR	1191444	AssignmentExpression	high = x		1191364	0		=			
ANR	1191445	Identifier	high		1191364	0					
ANR	1191446	Identifier	x		1191364	1					
ANR	1191447	ReturnStatement	return ( ( low < n && code >= data [ low * 2 ] ) ? 1 : 0 ) ;	5653:2:127453:127504	1191364	6	True				
ANR	1191448	ConditionalExpression	( low < n && code >= data [ low * 2 ] ) ? 1 : 0		1191364	0					
ANR	1191449	Condition	low < n && code >= data [ low * 2 ]		1191364	0					
ANR	1191450	AndExpression	low < n && code >= data [ low * 2 ]		1191364	0		&&			
ANR	1191451	RelationalExpression	low < n		1191364	0		<			
ANR	1191452	Identifier	low		1191364	0					
ANR	1191453	Identifier	n		1191364	1					
ANR	1191454	RelationalExpression	code >= data [ low * 2 ]		1191364	1		>=			
ANR	1191455	Identifier	code		1191364	0					
ANR	1191456	ArrayIndexing	data [ low * 2 ]		1191364	1					
ANR	1191457	Identifier	data		1191364	0					
ANR	1191458	MultiplicativeExpression	low * 2		1191364	1		*			
ANR	1191459	Identifier	low		1191364	0					
ANR	1191460	PrimaryExpression	2		1191364	1					
ANR	1191461	PrimaryExpression	1		1191364	1					
ANR	1191462	PrimaryExpression	0		1191364	2					
ANR	1191463	ReturnType	extern int		1191364	1					
ANR	1191464	Identifier	onig_is_in_code_range		1191364	2					
ANR	1191465	ParameterList	"const UChar * p , OnigCodePoint code"		1191364	3					
ANR	1191466	Parameter	const UChar * p	5636:22:127142:127155	1191364	0	True				
ANR	1191467	ParameterType	const UChar *		1191364	0					
ANR	1191468	Identifier	p		1191364	1					
ANR	1191469	Parameter	OnigCodePoint code	5636:38:127158:127175	1191364	1	True				
ANR	1191470	ParameterType	OnigCodePoint		1191364	0					
ANR	1191471	Identifier	code		1191364	1					
ANR	1191472	CFGEntryNode	ENTRY		1191364		True				
ANR	1191473	CFGExitNode	EXIT		1191364		True				
ANR	1191474	Symbol	p		1191364						
ANR	1191475	Symbol	high		1191364						
ANR	1191476	Symbol	* x		1191364						
ANR	1191477	Symbol	code		1191364						
ANR	1191478	Symbol	data		1191364						
ANR	1191479	Symbol	low		1191364						
ANR	1191480	Symbol	x		1191364						
ANR	1191481	Symbol	* data		1191364						
ANR	1191482	Symbol	n		1191364						
ANR	1191483	Symbol	* low		1191364						
ANR	1191484	Function	onig_is_code_in_cc_len	5656:0:127509:127933							
ANR	1191485	FunctionDef	"onig_is_code_in_cc_len (int elen , OnigCodePoint code , CClassNode * cc)"		1191484	0					
ANR	1191486	CompoundStatement		5658:0:127589:127933	1191484	0					
ANR	1191487	IdentifierDeclStatement	int found ;	5659:2:127593:127602	1191484	0	True				
ANR	1191488	IdentifierDecl	found		1191484	0					
ANR	1191489	IdentifierDeclType	int		1191484	0					
ANR	1191490	Identifier	found		1191484	1					
ANR	1191491	IfStatement	if ( elen > 1 || ( code >= SINGLE_BYTE_SIZE ) )		1191484	1					
ANR	1191492	Condition	elen > 1 || ( code >= SINGLE_BYTE_SIZE )	5661:6:127611:127648	1191484	0	True				
ANR	1191493	OrExpression	elen > 1 || ( code >= SINGLE_BYTE_SIZE )		1191484	0		||			
ANR	1191494	RelationalExpression	elen > 1		1191484	0		>			
ANR	1191495	Identifier	elen		1191484	0					
ANR	1191496	PrimaryExpression	1		1191484	1					
ANR	1191497	RelationalExpression	code >= SINGLE_BYTE_SIZE		1191484	1		>=			
ANR	1191498	Identifier	code		1191484	0					
ANR	1191499	Identifier	SINGLE_BYTE_SIZE		1191484	1					
ANR	1191500	CompoundStatement		4:46:61:61	1191484	1					
ANR	1191501	IfStatement	if ( IS_NULL ( cc -> mbuf ) )		1191484	0					
ANR	1191502	Condition	IS_NULL ( cc -> mbuf )	5662:8:127661:127677	1191484	0	True				
ANR	1191503	CallExpression	IS_NULL ( cc -> mbuf )		1191484	0					
ANR	1191504	Callee	IS_NULL		1191484	0					
ANR	1191505	Identifier	IS_NULL		1191484	0					
ANR	1191506	ArgumentList	cc -> mbuf		1191484	1					
ANR	1191507	Argument	cc -> mbuf		1191484	0					
ANR	1191508	PtrMemberAccess	cc -> mbuf		1191484	0					
ANR	1191509	Identifier	cc		1191484	0					
ANR	1191510	Identifier	mbuf		1191484	1					
ANR	1191511	CompoundStatement		5:27:90:90	1191484	1					
ANR	1191512	ExpressionStatement	found = 0	5663:6:127688:127697	1191484	0	True				
ANR	1191513	AssignmentExpression	found = 0		1191484	0		=			
ANR	1191514	Identifier	found		1191484	0					
ANR	1191515	PrimaryExpression	0		1191484	1					
ANR	1191516	ElseStatement	else		1191484	0					
ANR	1191517	CompoundStatement		8:9:124:124	1191484	0					
ANR	1191518	ExpressionStatement	"found = ( onig_is_in_code_range ( cc -> mbuf -> p , code ) != 0 ? 1 : 0 )"	5666:6:127722:127785	1191484	0	True				
ANR	1191519	AssignmentExpression	"found = ( onig_is_in_code_range ( cc -> mbuf -> p , code ) != 0 ? 1 : 0 )"		1191484	0		=			
ANR	1191520	Identifier	found		1191484	0					
ANR	1191521	ConditionalExpression	"onig_is_in_code_range ( cc -> mbuf -> p , code ) != 0 ? 1 : 0"		1191484	1					
ANR	1191522	Condition	"onig_is_in_code_range ( cc -> mbuf -> p , code ) != 0"		1191484	0					
ANR	1191523	EqualityExpression	"onig_is_in_code_range ( cc -> mbuf -> p , code ) != 0"		1191484	0		!=			
ANR	1191524	CallExpression	"onig_is_in_code_range ( cc -> mbuf -> p , code )"		1191484	0					
ANR	1191525	Callee	onig_is_in_code_range		1191484	0					
ANR	1191526	Identifier	onig_is_in_code_range		1191484	0					
ANR	1191527	ArgumentList	cc -> mbuf -> p		1191484	1					
ANR	1191528	Argument	cc -> mbuf -> p		1191484	0					
ANR	1191529	PtrMemberAccess	cc -> mbuf -> p		1191484	0					
ANR	1191530	PtrMemberAccess	cc -> mbuf		1191484	0					
ANR	1191531	Identifier	cc		1191484	0					
ANR	1191532	Identifier	mbuf		1191484	1					
ANR	1191533	Identifier	p		1191484	1					
ANR	1191534	Argument	code		1191484	1					
ANR	1191535	Identifier	code		1191484	0					
ANR	1191536	PrimaryExpression	0		1191484	1					
ANR	1191537	PrimaryExpression	1		1191484	1					
ANR	1191538	PrimaryExpression	0		1191484	2					
ANR	1191539	ElseStatement	else		1191484	0					
ANR	1191540	CompoundStatement		12:7:214:214	1191484	0					
ANR	1191541	ExpressionStatement	"found = ( BITSET_AT ( cc -> bs , code ) == 0 ? 0 : 1 )"	5670:4:127810:127856	1191484	0	True				
ANR	1191542	AssignmentExpression	"found = ( BITSET_AT ( cc -> bs , code ) == 0 ? 0 : 1 )"		1191484	0		=			
ANR	1191543	Identifier	found		1191484	0					
ANR	1191544	ConditionalExpression	"BITSET_AT ( cc -> bs , code ) == 0 ? 0 : 1"		1191484	1					
ANR	1191545	Condition	"BITSET_AT ( cc -> bs , code ) == 0"		1191484	0					
ANR	1191546	EqualityExpression	"BITSET_AT ( cc -> bs , code ) == 0"		1191484	0		==			
ANR	1191547	CallExpression	"BITSET_AT ( cc -> bs , code )"		1191484	0					
ANR	1191548	Callee	BITSET_AT		1191484	0					
ANR	1191549	Identifier	BITSET_AT		1191484	0					
ANR	1191550	ArgumentList	cc -> bs		1191484	1					
ANR	1191551	Argument	cc -> bs		1191484	0					
ANR	1191552	PtrMemberAccess	cc -> bs		1191484	0					
ANR	1191553	Identifier	cc		1191484	0					
ANR	1191554	Identifier	bs		1191484	1					
ANR	1191555	Argument	code		1191484	1					
ANR	1191556	Identifier	code		1191484	0					
ANR	1191557	PrimaryExpression	0		1191484	1					
ANR	1191558	PrimaryExpression	0		1191484	1					
ANR	1191559	PrimaryExpression	1		1191484	2					
ANR	1191560	IfStatement	if ( IS_NCCLASS_NOT ( cc ) )		1191484	2					
ANR	1191561	Condition	IS_NCCLASS_NOT ( cc )	5673:6:127869:127886	1191484	0	True				
ANR	1191562	CallExpression	IS_NCCLASS_NOT ( cc )		1191484	0					
ANR	1191563	Callee	IS_NCCLASS_NOT		1191484	0					
ANR	1191564	Identifier	IS_NCCLASS_NOT		1191484	0					
ANR	1191565	ArgumentList	cc		1191484	1					
ANR	1191566	Argument	cc		1191484	0					
ANR	1191567	Identifier	cc		1191484	0					
ANR	1191568	ReturnStatement	return ! found ;	5674:4:127893:127906	1191484	1	True				
ANR	1191569	UnaryOperationExpression	! found		1191484	0					
ANR	1191570	UnaryOperator	!		1191484	0					
ANR	1191571	Identifier	found		1191484	1					
ANR	1191572	ElseStatement	else		1191484	0					
ANR	1191573	ReturnStatement	return found ;	5676:4:127919:127931	1191484	0	True				
ANR	1191574	Identifier	found		1191484	0					
ANR	1191575	ReturnType	extern int		1191484	1					
ANR	1191576	Identifier	onig_is_code_in_cc_len		1191484	2					
ANR	1191577	ParameterList	"int elen , OnigCodePoint code , CClassNode * cc"		1191484	3					
ANR	1191578	Parameter	int elen	5657:23:127543:127550	1191484	0	True				
ANR	1191579	ParameterType	int		1191484	0					
ANR	1191580	Identifier	elen		1191484	1					
ANR	1191581	Parameter	OnigCodePoint code	5657:33:127553:127570	1191484	1	True				
ANR	1191582	ParameterType	OnigCodePoint		1191484	0					
ANR	1191583	Identifier	code		1191484	1					
ANR	1191584	Parameter	CClassNode * cc	5657:53:127573:127586	1191484	2	True				
ANR	1191585	ParameterType	CClassNode *		1191484	0					
ANR	1191586	Identifier	cc		1191484	1					
ANR	1191587	CFGEntryNode	ENTRY		1191484		True				
ANR	1191588	CFGExitNode	EXIT		1191484		True				
ANR	1191589	Symbol	cc		1191484						
ANR	1191590	Symbol	SINGLE_BYTE_SIZE		1191484						
ANR	1191591	Symbol	BITSET_AT		1191484						
ANR	1191592	Symbol	code		1191484						
ANR	1191593	Symbol	* cc		1191484						
ANR	1191594	Symbol	IS_NCCLASS_NOT		1191484						
ANR	1191595	Symbol	cc -> mbuf		1191484						
ANR	1191596	Symbol	cc -> mbuf -> p		1191484						
ANR	1191597	Symbol	* * cc		1191484						
ANR	1191598	Symbol	cc -> bs		1191484						
ANR	1191599	Symbol	* cc -> mbuf		1191484						
ANR	1191600	Symbol	found		1191484						
ANR	1191601	Symbol	IS_NULL		1191484						
ANR	1191602	Symbol	onig_is_in_code_range		1191484						
ANR	1191603	Symbol	elen		1191484						
ANR	1191604	Function	onig_is_code_in_cc	5679:0:127936:128194							
ANR	1191605	FunctionDef	"onig_is_code_in_cc (OnigEncoding enc , OnigCodePoint code , CClassNode * cc)"		1191604	0					
ANR	1191606	CompoundStatement		5681:0:128020:128194	1191604	0					
ANR	1191607	IdentifierDeclStatement	int len ;	5682:2:128024:128031	1191604	0	True				
ANR	1191608	IdentifierDecl	len		1191604	0					
ANR	1191609	IdentifierDeclType	int		1191604	0					
ANR	1191610	Identifier	len		1191604	1					
ANR	1191611	IfStatement	if ( ONIGENC_MBC_MINLEN ( enc ) > 1 )		1191604	1					
ANR	1191612	Condition	ONIGENC_MBC_MINLEN ( enc ) > 1	5684:6:128040:128066	1191604	0	True				
ANR	1191613	RelationalExpression	ONIGENC_MBC_MINLEN ( enc ) > 1		1191604	0		>			
ANR	1191614	CallExpression	ONIGENC_MBC_MINLEN ( enc )		1191604	0					
ANR	1191615	Callee	ONIGENC_MBC_MINLEN		1191604	0					
ANR	1191616	Identifier	ONIGENC_MBC_MINLEN		1191604	0					
ANR	1191617	ArgumentList	enc		1191604	1					
ANR	1191618	Argument	enc		1191604	0					
ANR	1191619	Identifier	enc		1191604	0					
ANR	1191620	PrimaryExpression	1		1191604	1					
ANR	1191621	CompoundStatement		4:35:48:48	1191604	1					
ANR	1191622	ExpressionStatement	len = 2	5685:4:128075:128082	1191604	0	True				
ANR	1191623	AssignmentExpression	len = 2		1191604	0		=			
ANR	1191624	Identifier	len		1191604	0					
ANR	1191625	PrimaryExpression	2		1191604	1					
ANR	1191626	ElseStatement	else		1191604	0					
ANR	1191627	CompoundStatement		7:7:74:74	1191604	0					
ANR	1191628	ExpressionStatement	"len = ONIGENC_CODE_TO_MBCLEN ( enc , code )"	5688:4:128101:128140	1191604	0	True				
ANR	1191629	AssignmentExpression	"len = ONIGENC_CODE_TO_MBCLEN ( enc , code )"		1191604	0		=			
ANR	1191630	Identifier	len		1191604	0					
ANR	1191631	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( enc , code )"		1191604	1					
ANR	1191632	Callee	ONIGENC_CODE_TO_MBCLEN		1191604	0					
ANR	1191633	Identifier	ONIGENC_CODE_TO_MBCLEN		1191604	0					
ANR	1191634	ArgumentList	enc		1191604	1					
ANR	1191635	Argument	enc		1191604	0					
ANR	1191636	Identifier	enc		1191604	0					
ANR	1191637	Argument	code		1191604	1					
ANR	1191638	Identifier	code		1191604	0					
ANR	1191639	ReturnStatement	"return onig_is_code_in_cc_len ( len , code , cc ) ;"	5690:2:128148:128192	1191604	2	True				
ANR	1191640	CallExpression	"onig_is_code_in_cc_len ( len , code , cc )"		1191604	0					
ANR	1191641	Callee	onig_is_code_in_cc_len		1191604	0					
ANR	1191642	Identifier	onig_is_code_in_cc_len		1191604	0					
ANR	1191643	ArgumentList	len		1191604	1					
ANR	1191644	Argument	len		1191604	0					
ANR	1191645	Identifier	len		1191604	0					
ANR	1191646	Argument	code		1191604	1					
ANR	1191647	Identifier	code		1191604	0					
ANR	1191648	Argument	cc		1191604	2					
ANR	1191649	Identifier	cc		1191604	0					
ANR	1191650	ReturnType	extern int		1191604	1					
ANR	1191651	Identifier	onig_is_code_in_cc		1191604	2					
ANR	1191652	ParameterList	"OnigEncoding enc , OnigCodePoint code , CClassNode * cc"		1191604	3					
ANR	1191653	Parameter	OnigEncoding enc	5680:19:127966:127981	1191604	0	True				
ANR	1191654	ParameterType	OnigEncoding		1191604	0					
ANR	1191655	Identifier	enc		1191604	1					
ANR	1191656	Parameter	OnigCodePoint code	5680:37:127984:128001	1191604	1	True				
ANR	1191657	ParameterType	OnigCodePoint		1191604	0					
ANR	1191658	Identifier	code		1191604	1					
ANR	1191659	Parameter	CClassNode * cc	5680:57:128004:128017	1191604	2	True				
ANR	1191660	ParameterType	CClassNode *		1191604	0					
ANR	1191661	Identifier	cc		1191604	1					
ANR	1191662	CFGEntryNode	ENTRY		1191604		True				
ANR	1191663	CFGExitNode	EXIT		1191604		True				
ANR	1191664	Symbol	cc		1191604						
ANR	1191665	Symbol	ONIGENC_CODE_TO_MBCLEN		1191604						
ANR	1191666	Symbol	code		1191604						
ANR	1191667	Symbol	len		1191604						
ANR	1191668	Symbol	ONIGENC_MBC_MINLEN		1191604						
ANR	1191669	Symbol	enc		1191604						
ANR	1191670	Symbol	onig_is_code_in_cc_len		1191604						
ANR	1191671	DeclStmt									
ANR	1191672	Decl							OnigOpInfoType	OnigOpInfoType [ ]	OnigOpInfo
ANR	1191673	Function	op2name	5799:0:134138:134321							
ANR	1191674	FunctionDef	op2name (int opcode)		1191673	0					
ANR	1191675	CompoundStatement		5801:0:134171:134321	1191673	0					
ANR	1191676	IdentifierDeclStatement	int i ;	5802:2:134175:134180	1191673	0	True				
ANR	1191677	IdentifierDecl	i		1191673	0					
ANR	1191678	IdentifierDeclType	int		1191673	0					
ANR	1191679	Identifier	i		1191673	1					
ANR	1191680	ForStatement	for ( i = 0 ; OnigOpInfo [ i ] . opcode >= 0 ; i ++ )		1191673	1					
ANR	1191681	ForInit	i = 0 ;	5804:7:134190:134195	1191673	0	True				
ANR	1191682	AssignmentExpression	i = 0		1191673	0		=			
ANR	1191683	Identifier	i		1191673	0					
ANR	1191684	PrimaryExpression	0		1191673	1					
ANR	1191685	Condition	OnigOpInfo [ i ] . opcode >= 0	5804:14:134197:134221	1191673	1	True				
ANR	1191686	RelationalExpression	OnigOpInfo [ i ] . opcode >= 0		1191673	0		>=			
ANR	1191687	MemberAccess	OnigOpInfo [ i ] . opcode		1191673	0					
ANR	1191688	ArrayIndexing	OnigOpInfo [ i ]		1191673	0					
ANR	1191689	Identifier	OnigOpInfo		1191673	0					
ANR	1191690	Identifier	i		1191673	1					
ANR	1191691	Identifier	opcode		1191673	1					
ANR	1191692	PrimaryExpression	0		1191673	1					
ANR	1191693	PostIncDecOperationExpression	i ++	5804:41:134224:134226	1191673	2	True				
ANR	1191694	Identifier	i		1191673	0					
ANR	1191695	IncDec	++		1191673	1					
ANR	1191696	CompoundStatement		4:46:57:57	1191673	3					
ANR	1191697	IfStatement	if ( opcode == OnigOpInfo [ i ] . opcode )		1191673	0					
ANR	1191698	Condition	opcode == OnigOpInfo [ i ] . opcode	5805:8:134239:134268	1191673	0	True				
ANR	1191699	EqualityExpression	opcode == OnigOpInfo [ i ] . opcode		1191673	0		==			
ANR	1191700	Identifier	opcode		1191673	0					
ANR	1191701	MemberAccess	OnigOpInfo [ i ] . opcode		1191673	1					
ANR	1191702	ArrayIndexing	OnigOpInfo [ i ]		1191673	0					
ANR	1191703	Identifier	OnigOpInfo		1191673	0					
ANR	1191704	Identifier	i		1191673	1					
ANR	1191705	Identifier	opcode		1191673	1					
ANR	1191706	ReturnStatement	return OnigOpInfo [ i ] . name ;	5806:6:134277:134302	1191673	1	True				
ANR	1191707	MemberAccess	OnigOpInfo [ i ] . name		1191673	0					
ANR	1191708	ArrayIndexing	OnigOpInfo [ i ]		1191673	0					
ANR	1191709	Identifier	OnigOpInfo		1191673	0					
ANR	1191710	Identifier	i		1191673	1					
ANR	1191711	Identifier	name		1191673	1					
ANR	1191712	ReturnStatement	"return """" ;"	5808:2:134310:134319	1191673	2	True				
ANR	1191713	PrimaryExpression	""""""		1191673	0					
ANR	1191714	ReturnType	static char *		1191673	1					
ANR	1191715	Identifier	op2name		1191673	2					
ANR	1191716	ParameterList	int opcode		1191673	3					
ANR	1191717	Parameter	int opcode	5800:8:134159:134168	1191673	0	True				
ANR	1191718	ParameterType	int		1191673	0					
ANR	1191719	Identifier	opcode		1191673	1					
ANR	1191720	CFGEntryNode	ENTRY		1191673		True				
ANR	1191721	CFGExitNode	EXIT		1191673		True				
ANR	1191722	Symbol	OnigOpInfo [ i ] . opcode		1191673						
ANR	1191723	Symbol	* i		1191673						
ANR	1191724	Symbol	* OnigOpInfo		1191673						
ANR	1191725	Symbol	OnigOpInfo		1191673						
ANR	1191726	Symbol	i		1191673						
ANR	1191727	Symbol	opcode		1191673						
ANR	1191728	Symbol	OnigOpInfo [ i ] . name		1191673						
ANR	1191729	Function	op2arg_type	5811:0:134324:134522							
ANR	1191730	FunctionDef	op2arg_type (int opcode)		1191729	0					
ANR	1191731	CompoundStatement		5813:0:134359:134522	1191729	0					
ANR	1191732	IdentifierDeclStatement	int i ;	5814:2:134363:134368	1191729	0	True				
ANR	1191733	IdentifierDecl	i		1191729	0					
ANR	1191734	IdentifierDeclType	int		1191729	0					
ANR	1191735	Identifier	i		1191729	1					
ANR	1191736	ForStatement	for ( i = 0 ; OnigOpInfo [ i ] . opcode >= 0 ; i ++ )		1191729	1					
ANR	1191737	ForInit	i = 0 ;	5816:7:134378:134383	1191729	0	True				
ANR	1191738	AssignmentExpression	i = 0		1191729	0		=			
ANR	1191739	Identifier	i		1191729	0					
ANR	1191740	PrimaryExpression	0		1191729	1					
ANR	1191741	Condition	OnigOpInfo [ i ] . opcode >= 0	5816:14:134385:134409	1191729	1	True				
ANR	1191742	RelationalExpression	OnigOpInfo [ i ] . opcode >= 0		1191729	0		>=			
ANR	1191743	MemberAccess	OnigOpInfo [ i ] . opcode		1191729	0					
ANR	1191744	ArrayIndexing	OnigOpInfo [ i ]		1191729	0					
ANR	1191745	Identifier	OnigOpInfo		1191729	0					
ANR	1191746	Identifier	i		1191729	1					
ANR	1191747	Identifier	opcode		1191729	1					
ANR	1191748	PrimaryExpression	0		1191729	1					
ANR	1191749	PostIncDecOperationExpression	i ++	5816:41:134412:134414	1191729	2	True				
ANR	1191750	Identifier	i		1191729	0					
ANR	1191751	IncDec	++		1191729	1					
ANR	1191752	CompoundStatement		4:46:57:57	1191729	3					
ANR	1191753	IfStatement	if ( opcode == OnigOpInfo [ i ] . opcode )		1191729	0					
ANR	1191754	Condition	opcode == OnigOpInfo [ i ] . opcode	5817:8:134427:134456	1191729	0	True				
ANR	1191755	EqualityExpression	opcode == OnigOpInfo [ i ] . opcode		1191729	0		==			
ANR	1191756	Identifier	opcode		1191729	0					
ANR	1191757	MemberAccess	OnigOpInfo [ i ] . opcode		1191729	1					
ANR	1191758	ArrayIndexing	OnigOpInfo [ i ]		1191729	0					
ANR	1191759	Identifier	OnigOpInfo		1191729	0					
ANR	1191760	Identifier	i		1191729	1					
ANR	1191761	Identifier	opcode		1191729	1					
ANR	1191762	ReturnStatement	return OnigOpInfo [ i ] . arg_type ;	5818:6:134465:134494	1191729	1	True				
ANR	1191763	MemberAccess	OnigOpInfo [ i ] . arg_type		1191729	0					
ANR	1191764	ArrayIndexing	OnigOpInfo [ i ]		1191729	0					
ANR	1191765	Identifier	OnigOpInfo		1191729	0					
ANR	1191766	Identifier	i		1191729	1					
ANR	1191767	Identifier	arg_type		1191729	1					
ANR	1191768	ReturnStatement	return ARG_SPECIAL ;	5820:2:134502:134520	1191729	2	True				
ANR	1191769	Identifier	ARG_SPECIAL		1191729	0					
ANR	1191770	ReturnType	static int		1191729	1					
ANR	1191771	Identifier	op2arg_type		1191729	2					
ANR	1191772	ParameterList	int opcode		1191729	3					
ANR	1191773	Parameter	int opcode	5812:12:134347:134356	1191729	0	True				
ANR	1191774	ParameterType	int		1191729	0					
ANR	1191775	Identifier	opcode		1191729	1					
ANR	1191776	CFGEntryNode	ENTRY		1191729		True				
ANR	1191777	CFGExitNode	EXIT		1191729		True				
ANR	1191778	Symbol	OnigOpInfo [ i ] . arg_type		1191729						
ANR	1191779	Symbol	OnigOpInfo [ i ] . opcode		1191729						
ANR	1191780	Symbol	* i		1191729						
ANR	1191781	Symbol	* OnigOpInfo		1191729						
ANR	1191782	Symbol	OnigOpInfo		1191729						
ANR	1191783	Symbol	ARG_SPECIAL		1191729						
ANR	1191784	Symbol	i		1191729						
ANR	1191785	Symbol	opcode		1191729						
ANR	1191786	Function	Indent	5823:0:134525:134621							
ANR	1191787	FunctionDef	"Indent (FILE * f , int indent)"		1191786	0					
ANR	1191788	CompoundStatement		5825:0:134565:134621	1191786	0					
ANR	1191789	IdentifierDeclStatement	int i ;	5826:2:134569:134574	1191786	0	True				
ANR	1191790	IdentifierDecl	i		1191786	0					
ANR	1191791	IdentifierDeclType	int		1191786	0					
ANR	1191792	Identifier	i		1191786	1					
ANR	1191793	ForStatement	for ( i = 0 ; i < indent ; i ++ )		1191786	1					
ANR	1191794	ForInit	i = 0 ;	5827:7:134583:134588	1191786	0	True				
ANR	1191795	AssignmentExpression	i = 0		1191786	0		=			
ANR	1191796	Identifier	i		1191786	0					
ANR	1191797	PrimaryExpression	0		1191786	1					
ANR	1191798	Condition	i < indent	5827:14:134590:134599	1191786	1	True				
ANR	1191799	RelationalExpression	i < indent		1191786	0		<			
ANR	1191800	Identifier	i		1191786	0					
ANR	1191801	Identifier	indent		1191786	1					
ANR	1191802	PostIncDecOperationExpression	i ++	5827:26:134602:134604	1191786	2	True				
ANR	1191803	Identifier	i		1191786	0					
ANR	1191804	IncDec	++		1191786	1					
ANR	1191805	ExpressionStatement	"putc ( ' ' , f )"	5827:31:134607:134619	1191786	3	True				
ANR	1191806	CallExpression	"putc ( ' ' , f )"		1191786	0					
ANR	1191807	Callee	putc		1191786	0					
ANR	1191808	Identifier	putc		1191786	0					
ANR	1191809	ArgumentList	' '		1191786	1					
ANR	1191810	Argument	' '		1191786	0					
ANR	1191811	PrimaryExpression	' '		1191786	0					
ANR	1191812	Argument	f		1191786	1					
ANR	1191813	Identifier	f		1191786	0					
ANR	1191814	ReturnType	static void		1191786	1					
ANR	1191815	Identifier	Indent		1191786	2					
ANR	1191816	ParameterList	"FILE * f , int indent"		1191786	3					
ANR	1191817	Parameter	FILE * f	5824:7:134544:134550	1191786	0	True				
ANR	1191818	ParameterType	FILE *		1191786	0					
ANR	1191819	Identifier	f		1191786	1					
ANR	1191820	Parameter	int indent	5824:16:134553:134562	1191786	1	True				
ANR	1191821	ParameterType	int		1191786	0					
ANR	1191822	Identifier	indent		1191786	1					
ANR	1191823	CFGEntryNode	ENTRY		1191786		True				
ANR	1191824	CFGExitNode	EXIT		1191786		True				
ANR	1191825	Symbol	indent		1191786						
ANR	1191826	Symbol	f		1191786						
ANR	1191827	Symbol	i		1191786						
ANR	1191828	Function	p_string	5830:0:134624:134732							
ANR	1191829	FunctionDef	"p_string (FILE * f , int len , UChar * s)"		1191828	0					
ANR	1191830	CompoundStatement		5832:0:134673:134732	1191828	0					
ANR	1191831	ExpressionStatement	"fputs ( "":"" , f )"	5833:2:134677:134690	1191828	0	True				
ANR	1191832	CallExpression	"fputs ( "":"" , f )"		1191828	0					
ANR	1191833	Callee	fputs		1191828	0					
ANR	1191834	Identifier	fputs		1191828	0					
ANR	1191835	ArgumentList	""":"""		1191828	1					
ANR	1191836	Argument	""":"""		1191828	0					
ANR	1191837	PrimaryExpression	""":"""		1191828	0					
ANR	1191838	Argument	f		1191828	1					
ANR	1191839	Identifier	f		1191828	0					
ANR	1191840	WhileStatement	while ( len -- > 0 )		1191828	1					
ANR	1191841	Condition	len -- > 0	5834:9:134701:134709	1191828	0	True				
ANR	1191842	RelationalExpression	len -- > 0		1191828	0		>			
ANR	1191843	PostIncDecOperationExpression	len --		1191828	0					
ANR	1191844	Identifier	len		1191828	0					
ANR	1191845	IncDec	--		1191828	1					
ANR	1191846	PrimaryExpression	0		1191828	1					
ANR	1191847	CompoundStatement		3:20:38:38	1191828	1					
ANR	1191848	ExpressionStatement	"fputc ( * s ++ , f )"	5834:22:134714:134728	1191828	0	True				
ANR	1191849	CallExpression	"fputc ( * s ++ , f )"		1191828	0					
ANR	1191850	Callee	fputc		1191828	0					
ANR	1191851	Identifier	fputc		1191828	0					
ANR	1191852	ArgumentList	* s ++		1191828	1					
ANR	1191853	Argument	* s ++		1191828	0					
ANR	1191854	UnaryOperationExpression	* s ++		1191828	0					
ANR	1191855	UnaryOperator	*		1191828	0					
ANR	1191856	PostIncDecOperationExpression	s ++		1191828	1					
ANR	1191857	Identifier	s		1191828	0					
ANR	1191858	IncDec	++		1191828	1					
ANR	1191859	Argument	f		1191828	1					
ANR	1191860	Identifier	f		1191828	0					
ANR	1191861	ReturnType	static void		1191828	1					
ANR	1191862	Identifier	p_string		1191828	2					
ANR	1191863	ParameterList	"FILE * f , int len , UChar * s"		1191828	3					
ANR	1191864	Parameter	FILE * f	5831:9:134645:134651	1191828	0	True				
ANR	1191865	ParameterType	FILE *		1191828	0					
ANR	1191866	Identifier	f		1191828	1					
ANR	1191867	Parameter	int len	5831:18:134654:134660	1191828	1	True				
ANR	1191868	ParameterType	int		1191828	0					
ANR	1191869	Identifier	len		1191828	1					
ANR	1191870	Parameter	UChar * s	5831:27:134663:134670	1191828	2	True				
ANR	1191871	ParameterType	UChar *		1191828	0					
ANR	1191872	Identifier	s		1191828	1					
ANR	1191873	CFGEntryNode	ENTRY		1191828		True				
ANR	1191874	CFGExitNode	EXIT		1191828		True				
ANR	1191875	Symbol	* s ++		1191828						
ANR	1191876	Symbol	s		1191828						
ANR	1191877	Symbol	len		1191828						
ANR	1191878	Symbol	f		1191828						
ANR	1191879	Function	p_len_string	5837:0:134735:134899							
ANR	1191880	FunctionDef	"p_len_string (FILE * f , LengthType len , int mb_len , UChar * s)"		1191879	0					
ANR	1191881	CompoundStatement		5839:0:134807:134899	1191879	0					
ANR	1191882	IdentifierDeclStatement	int x = len * mb_len ;	5840:2:134811:134831	1191879	0	True				
ANR	1191883	IdentifierDecl	x = len * mb_len		1191879	0					
ANR	1191884	IdentifierDeclType	int		1191879	0					
ANR	1191885	Identifier	x		1191879	1					
ANR	1191886	AssignmentExpression	x = len * mb_len		1191879	2		=			
ANR	1191887	Identifier	x		1191879	0					
ANR	1191888	MultiplicativeExpression	len * mb_len		1191879	1		*			
ANR	1191889	Identifier	len		1191879	0					
ANR	1191890	Identifier	mb_len		1191879	1					
ANR	1191891	ExpressionStatement	"fprintf ( f , "":%d:"" , len )"	5842:2:134836:134859	1191879	1	True				
ANR	1191892	CallExpression	"fprintf ( f , "":%d:"" , len )"		1191879	0					
ANR	1191893	Callee	fprintf		1191879	0					
ANR	1191894	Identifier	fprintf		1191879	0					
ANR	1191895	ArgumentList	f		1191879	1					
ANR	1191896	Argument	f		1191879	0					
ANR	1191897	Identifier	f		1191879	0					
ANR	1191898	Argument	""":%d:"""		1191879	1					
ANR	1191899	PrimaryExpression	""":%d:"""		1191879	0					
ANR	1191900	Argument	len		1191879	2					
ANR	1191901	Identifier	len		1191879	0					
ANR	1191902	WhileStatement	while ( x -- > 0 )		1191879	2					
ANR	1191903	Condition	x -- > 0	5843:9:134870:134876	1191879	0	True				
ANR	1191904	RelationalExpression	x -- > 0		1191879	0		>			
ANR	1191905	PostIncDecOperationExpression	x --		1191879	0					
ANR	1191906	Identifier	x		1191879	0					
ANR	1191907	IncDec	--		1191879	1					
ANR	1191908	PrimaryExpression	0		1191879	1					
ANR	1191909	CompoundStatement		5:18:71:71	1191879	1					
ANR	1191910	ExpressionStatement	"fputc ( * s ++ , f )"	5843:20:134881:134895	1191879	0	True				
ANR	1191911	CallExpression	"fputc ( * s ++ , f )"		1191879	0					
ANR	1191912	Callee	fputc		1191879	0					
ANR	1191913	Identifier	fputc		1191879	0					
ANR	1191914	ArgumentList	* s ++		1191879	1					
ANR	1191915	Argument	* s ++		1191879	0					
ANR	1191916	UnaryOperationExpression	* s ++		1191879	0					
ANR	1191917	UnaryOperator	*		1191879	0					
ANR	1191918	PostIncDecOperationExpression	s ++		1191879	1					
ANR	1191919	Identifier	s		1191879	0					
ANR	1191920	IncDec	++		1191879	1					
ANR	1191921	Argument	f		1191879	1					
ANR	1191922	Identifier	f		1191879	0					
ANR	1191923	ReturnType	static void		1191879	1					
ANR	1191924	Identifier	p_len_string		1191879	2					
ANR	1191925	ParameterList	"FILE * f , LengthType len , int mb_len , UChar * s"		1191879	3					
ANR	1191926	Parameter	FILE * f	5838:13:134760:134766	1191879	0	True				
ANR	1191927	ParameterType	FILE *		1191879	0					
ANR	1191928	Identifier	f		1191879	1					
ANR	1191929	Parameter	LengthType len	5838:22:134769:134782	1191879	1	True				
ANR	1191930	ParameterType	LengthType		1191879	0					
ANR	1191931	Identifier	len		1191879	1					
ANR	1191932	Parameter	int mb_len	5838:38:134785:134794	1191879	2	True				
ANR	1191933	ParameterType	int		1191879	0					
ANR	1191934	Identifier	mb_len		1191879	1					
ANR	1191935	Parameter	UChar * s	5838:50:134797:134804	1191879	3	True				
ANR	1191936	ParameterType	UChar *		1191879	0					
ANR	1191937	Identifier	s		1191879	1					
ANR	1191938	CFGEntryNode	ENTRY		1191879		True				
ANR	1191939	CFGExitNode	EXIT		1191879		True				
ANR	1191940	Symbol	* s ++		1191879						
ANR	1191941	Symbol	s		1191879						
ANR	1191942	Symbol	len		1191879						
ANR	1191943	Symbol	f		1191879						
ANR	1191944	Symbol	x		1191879						
ANR	1191945	Symbol	mb_len		1191879						
ANR	1191946	Function	onig_print_compiled_byte_code	5846:0:134902:140392							
ANR	1191947	FunctionDef	"onig_print_compiled_byte_code (FILE * f , UChar * bp , UChar * * nextp , OnigEncoding enc)"		1191946	0					
ANR	1191948	CompoundStatement		5849:0:135027:140392	1191946	0					
ANR	1191949	IdentifierDeclStatement	"int i , n , arg_type ;"	5850:2:135031:135049	1191946	0	True				
ANR	1191950	IdentifierDecl	i		1191946	0					
ANR	1191951	IdentifierDeclType	int		1191946	0					
ANR	1191952	Identifier	i		1191946	1					
ANR	1191953	IdentifierDecl	n		1191946	1					
ANR	1191954	IdentifierDeclType	int		1191946	0					
ANR	1191955	Identifier	n		1191946	1					
ANR	1191956	IdentifierDecl	arg_type		1191946	2					
ANR	1191957	IdentifierDeclType	int		1191946	0					
ANR	1191958	Identifier	arg_type		1191946	1					
ANR	1191959	IdentifierDeclStatement	RelAddrType addr ;	5851:2:135053:135069	1191946	1	True				
ANR	1191960	IdentifierDecl	addr		1191946	0					
ANR	1191961	IdentifierDeclType	RelAddrType		1191946	0					
ANR	1191962	Identifier	addr		1191946	1					
ANR	1191963	IdentifierDeclStatement	LengthType len ;	5852:2:135073:135087	1191946	2	True				
ANR	1191964	IdentifierDecl	len		1191946	0					
ANR	1191965	IdentifierDeclType	LengthType		1191946	0					
ANR	1191966	Identifier	len		1191946	1					
ANR	1191967	IdentifierDeclStatement	MemNumType mem ;	5853:2:135091:135105	1191946	3	True				
ANR	1191968	IdentifierDecl	mem		1191946	0					
ANR	1191969	IdentifierDeclType	MemNumType		1191946	0					
ANR	1191970	Identifier	mem		1191946	1					
ANR	1191971	IdentifierDeclStatement	StateCheckNumType scn ;	5854:2:135109:135130	1191946	4	True				
ANR	1191972	IdentifierDecl	scn		1191946	0					
ANR	1191973	IdentifierDeclType	StateCheckNumType		1191946	0					
ANR	1191974	Identifier	scn		1191946	1					
ANR	1191975	IdentifierDeclStatement	OnigCodePoint code ;	5855:2:135134:135152	1191946	5	True				
ANR	1191976	IdentifierDecl	code		1191946	0					
ANR	1191977	IdentifierDeclType	OnigCodePoint		1191946	0					
ANR	1191978	Identifier	code		1191946	1					
ANR	1191979	IdentifierDeclStatement	UChar * q ;	5856:2:135156:135164	1191946	6	True				
ANR	1191980	IdentifierDecl	* q		1191946	0					
ANR	1191981	IdentifierDeclType	UChar *		1191946	0					
ANR	1191982	Identifier	q		1191946	1					
ANR	1191983	ExpressionStatement	"fprintf ( f , ""[%s"" , op2name ( * bp ) )"	5858:2:135169:135200	1191946	7	True				
ANR	1191984	CallExpression	"fprintf ( f , ""[%s"" , op2name ( * bp ) )"		1191946	0					
ANR	1191985	Callee	fprintf		1191946	0					
ANR	1191986	Identifier	fprintf		1191946	0					
ANR	1191987	ArgumentList	f		1191946	1					
ANR	1191988	Argument	f		1191946	0					
ANR	1191989	Identifier	f		1191946	0					
ANR	1191990	Argument	"""[%s"""		1191946	1					
ANR	1191991	PrimaryExpression	"""[%s"""		1191946	0					
ANR	1191992	Argument	op2name ( * bp )		1191946	2					
ANR	1191993	CallExpression	op2name ( * bp )		1191946	0					
ANR	1191994	Callee	op2name		1191946	0					
ANR	1191995	Identifier	op2name		1191946	0					
ANR	1191996	ArgumentList	* bp		1191946	1					
ANR	1191997	Argument	* bp		1191946	0					
ANR	1191998	UnaryOperationExpression	* bp		1191946	0					
ANR	1191999	UnaryOperator	*		1191946	0					
ANR	1192000	Identifier	bp		1191946	1					
ANR	1192001	ExpressionStatement	arg_type = op2arg_type ( * bp )	5859:2:135204:135231	1191946	8	True				
ANR	1192002	AssignmentExpression	arg_type = op2arg_type ( * bp )		1191946	0		=			
ANR	1192003	Identifier	arg_type		1191946	0					
ANR	1192004	CallExpression	op2arg_type ( * bp )		1191946	1					
ANR	1192005	Callee	op2arg_type		1191946	0					
ANR	1192006	Identifier	op2arg_type		1191946	0					
ANR	1192007	ArgumentList	* bp		1191946	1					
ANR	1192008	Argument	* bp		1191946	0					
ANR	1192009	UnaryOperationExpression	* bp		1191946	0					
ANR	1192010	UnaryOperator	*		1191946	0					
ANR	1192011	Identifier	bp		1191946	1					
ANR	1192012	IfStatement	if ( arg_type != ARG_SPECIAL )		1191946	9					
ANR	1192013	Condition	arg_type != ARG_SPECIAL	5860:6:135239:135261	1191946	0	True				
ANR	1192014	EqualityExpression	arg_type != ARG_SPECIAL		1191946	0		!=			
ANR	1192015	Identifier	arg_type		1191946	0					
ANR	1192016	Identifier	ARG_SPECIAL		1191946	1					
ANR	1192017	CompoundStatement		12:31:236:236	1191946	1					
ANR	1192018	ExpressionStatement	bp ++	5861:4:135270:135274	1191946	0	True				
ANR	1192019	PostIncDecOperationExpression	bp ++		1191946	0					
ANR	1192020	Identifier	bp		1191946	0					
ANR	1192021	IncDec	++		1191946	1					
ANR	1192022	SwitchStatement	switch ( arg_type )		1191946	1					
ANR	1192023	Condition	arg_type	5862:12:135288:135295	1191946	0	True				
ANR	1192024	Identifier	arg_type		1191946	0					
ANR	1192025	CompoundStatement		14:22:270:270	1191946	1					
ANR	1192026	Label	case ARG_NON :	5863:4:135304:135316	1191946	0	True				
ANR	1192027	Identifier	ARG_NON		1191946	0					
ANR	1192028	BreakStatement	break ;	5864:6:135324:135329	1191946	1	True				
ANR	1192029	Label	case ARG_RELADDR :	5865:4:135335:135351	1191946	2	True				
ANR	1192030	Identifier	ARG_RELADDR		1191946	0					
ANR	1192031	ExpressionStatement	"GET_RELADDR_INC ( addr , bp )"	5866:6:135359:135384	1191946	3	True				
ANR	1192032	CallExpression	"GET_RELADDR_INC ( addr , bp )"		1191946	0					
ANR	1192033	Callee	GET_RELADDR_INC		1191946	0					
ANR	1192034	Identifier	GET_RELADDR_INC		1191946	0					
ANR	1192035	ArgumentList	addr		1191946	1					
ANR	1192036	Argument	addr		1191946	0					
ANR	1192037	Identifier	addr		1191946	0					
ANR	1192038	Argument	bp		1191946	1					
ANR	1192039	Identifier	bp		1191946	0					
ANR	1192040	ExpressionStatement	"fprintf ( f , "":(%d)"" , addr )"	5867:6:135392:135417	1191946	4	True				
ANR	1192041	CallExpression	"fprintf ( f , "":(%d)"" , addr )"		1191946	0					
ANR	1192042	Callee	fprintf		1191946	0					
ANR	1192043	Identifier	fprintf		1191946	0					
ANR	1192044	ArgumentList	f		1191946	1					
ANR	1192045	Argument	f		1191946	0					
ANR	1192046	Identifier	f		1191946	0					
ANR	1192047	Argument	""":(%d)"""		1191946	1					
ANR	1192048	PrimaryExpression	""":(%d)"""		1191946	0					
ANR	1192049	Argument	addr		1191946	2					
ANR	1192050	Identifier	addr		1191946	0					
ANR	1192051	BreakStatement	break ;	5868:6:135425:135430	1191946	5	True				
ANR	1192052	Label	case ARG_ABSADDR :	5869:4:135436:135452	1191946	6	True				
ANR	1192053	Identifier	ARG_ABSADDR		1191946	0					
ANR	1192054	ExpressionStatement	"GET_ABSADDR_INC ( addr , bp )"	5870:6:135460:135485	1191946	7	True				
ANR	1192055	CallExpression	"GET_ABSADDR_INC ( addr , bp )"		1191946	0					
ANR	1192056	Callee	GET_ABSADDR_INC		1191946	0					
ANR	1192057	Identifier	GET_ABSADDR_INC		1191946	0					
ANR	1192058	ArgumentList	addr		1191946	1					
ANR	1192059	Argument	addr		1191946	0					
ANR	1192060	Identifier	addr		1191946	0					
ANR	1192061	Argument	bp		1191946	1					
ANR	1192062	Identifier	bp		1191946	0					
ANR	1192063	ExpressionStatement	"fprintf ( f , "":(%d)"" , addr )"	5871:6:135493:135518	1191946	8	True				
ANR	1192064	CallExpression	"fprintf ( f , "":(%d)"" , addr )"		1191946	0					
ANR	1192065	Callee	fprintf		1191946	0					
ANR	1192066	Identifier	fprintf		1191946	0					
ANR	1192067	ArgumentList	f		1191946	1					
ANR	1192068	Argument	f		1191946	0					
ANR	1192069	Identifier	f		1191946	0					
ANR	1192070	Argument	""":(%d)"""		1191946	1					
ANR	1192071	PrimaryExpression	""":(%d)"""		1191946	0					
ANR	1192072	Argument	addr		1191946	2					
ANR	1192073	Identifier	addr		1191946	0					
ANR	1192074	BreakStatement	break ;	5872:6:135526:135531	1191946	9	True				
ANR	1192075	Label	case ARG_LENGTH :	5873:4:135537:135552	1191946	10	True				
ANR	1192076	Identifier	ARG_LENGTH		1191946	0					
ANR	1192077	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5874:6:135560:135583	1191946	11	True				
ANR	1192078	CallExpression	"GET_LENGTH_INC ( len , bp )"		1191946	0					
ANR	1192079	Callee	GET_LENGTH_INC		1191946	0					
ANR	1192080	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1192081	ArgumentList	len		1191946	1					
ANR	1192082	Argument	len		1191946	0					
ANR	1192083	Identifier	len		1191946	0					
ANR	1192084	Argument	bp		1191946	1					
ANR	1192085	Identifier	bp		1191946	0					
ANR	1192086	ExpressionStatement	"fprintf ( f , "":%d"" , len )"	5875:6:135591:135613	1191946	12	True				
ANR	1192087	CallExpression	"fprintf ( f , "":%d"" , len )"		1191946	0					
ANR	1192088	Callee	fprintf		1191946	0					
ANR	1192089	Identifier	fprintf		1191946	0					
ANR	1192090	ArgumentList	f		1191946	1					
ANR	1192091	Argument	f		1191946	0					
ANR	1192092	Identifier	f		1191946	0					
ANR	1192093	Argument	""":%d"""		1191946	1					
ANR	1192094	PrimaryExpression	""":%d"""		1191946	0					
ANR	1192095	Argument	len		1191946	2					
ANR	1192096	Identifier	len		1191946	0					
ANR	1192097	BreakStatement	break ;	5876:6:135621:135626	1191946	13	True				
ANR	1192098	Label	case ARG_MEMNUM :	5877:4:135632:135647	1191946	14	True				
ANR	1192099	Identifier	ARG_MEMNUM		1191946	0					
ANR	1192100	ExpressionStatement	mem = * ( ( MemNumType * ) bp )	5878:6:135655:135680	1191946	15	True				
ANR	1192101	AssignmentExpression	mem = * ( ( MemNumType * ) bp )		1191946	0		=			
ANR	1192102	Identifier	mem		1191946	0					
ANR	1192103	UnaryOperationExpression	* ( ( MemNumType * ) bp )		1191946	1					
ANR	1192104	UnaryOperator	*		1191946	0					
ANR	1192105	CastExpression	( MemNumType * ) bp		1191946	1					
ANR	1192106	CastTarget	MemNumType *		1191946	0					
ANR	1192107	Identifier	bp		1191946	1					
ANR	1192108	ExpressionStatement	bp += SIZE_MEMNUM	5879:6:135688:135705	1191946	16	True				
ANR	1192109	AssignmentExpression	bp += SIZE_MEMNUM		1191946	0		+=			
ANR	1192110	Identifier	bp		1191946	0					
ANR	1192111	Identifier	SIZE_MEMNUM		1191946	1					
ANR	1192112	ExpressionStatement	"fprintf ( f , "":%d"" , mem )"	5880:6:135713:135735	1191946	17	True				
ANR	1192113	CallExpression	"fprintf ( f , "":%d"" , mem )"		1191946	0					
ANR	1192114	Callee	fprintf		1191946	0					
ANR	1192115	Identifier	fprintf		1191946	0					
ANR	1192116	ArgumentList	f		1191946	1					
ANR	1192117	Argument	f		1191946	0					
ANR	1192118	Identifier	f		1191946	0					
ANR	1192119	Argument	""":%d"""		1191946	1					
ANR	1192120	PrimaryExpression	""":%d"""		1191946	0					
ANR	1192121	Argument	mem		1191946	2					
ANR	1192122	Identifier	mem		1191946	0					
ANR	1192123	BreakStatement	break ;	5881:6:135743:135748	1191946	18	True				
ANR	1192124	Label	case ARG_OPTION :	5882:4:135754:135769	1191946	19	True				
ANR	1192125	Identifier	ARG_OPTION		1191946	0					
ANR	1192126	CompoundStatement		36:1:752:799	1191946	20					
ANR	1192127	IdentifierDeclStatement	OnigOptionType option = * ( ( OnigOptionType * ) bp ) ;	5884:1:135780:135827	1191946	0	True				
ANR	1192128	IdentifierDecl	option = * ( ( OnigOptionType * ) bp )		1191946	0					
ANR	1192129	IdentifierDeclType	OnigOptionType		1191946	0					
ANR	1192130	Identifier	option		1191946	1					
ANR	1192131	AssignmentExpression	option = * ( ( OnigOptionType * ) bp )		1191946	2		=			
ANR	1192132	Identifier	option		1191946	0					
ANR	1192133	UnaryOperationExpression	* ( ( OnigOptionType * ) bp )		1191946	1					
ANR	1192134	UnaryOperator	*		1191946	0					
ANR	1192135	CastExpression	( OnigOptionType * ) bp		1191946	1					
ANR	1192136	CastTarget	OnigOptionType *		1191946	0					
ANR	1192137	Identifier	bp		1191946	1					
ANR	1192138	ExpressionStatement	bp += SIZE_OPTION	5885:1:135830:135847	1191946	1	True				
ANR	1192139	AssignmentExpression	bp += SIZE_OPTION		1191946	0		+=			
ANR	1192140	Identifier	bp		1191946	0					
ANR	1192141	Identifier	SIZE_OPTION		1191946	1					
ANR	1192142	ExpressionStatement	"fprintf ( f , "":%d"" , option )"	5886:1:135850:135875	1191946	2	True				
ANR	1192143	CallExpression	"fprintf ( f , "":%d"" , option )"		1191946	0					
ANR	1192144	Callee	fprintf		1191946	0					
ANR	1192145	Identifier	fprintf		1191946	0					
ANR	1192146	ArgumentList	f		1191946	1					
ANR	1192147	Argument	f		1191946	0					
ANR	1192148	Identifier	f		1191946	0					
ANR	1192149	Argument	""":%d"""		1191946	1					
ANR	1192150	PrimaryExpression	""":%d"""		1191946	0					
ANR	1192151	Argument	option		1191946	2					
ANR	1192152	Identifier	option		1191946	0					
ANR	1192153	BreakStatement	break ;	5888:6:135891:135896	1191946	21	True				
ANR	1192154	Label	case ARG_STATE_CHECK :	5890:4:135903:135923	1191946	22	True				
ANR	1192155	Identifier	ARG_STATE_CHECK		1191946	0					
ANR	1192156	ExpressionStatement	scn = * ( ( StateCheckNumType * ) bp )	5891:6:135931:135963	1191946	23	True				
ANR	1192157	AssignmentExpression	scn = * ( ( StateCheckNumType * ) bp )		1191946	0		=			
ANR	1192158	Identifier	scn		1191946	0					
ANR	1192159	UnaryOperationExpression	* ( ( StateCheckNumType * ) bp )		1191946	1					
ANR	1192160	UnaryOperator	*		1191946	0					
ANR	1192161	CastExpression	( StateCheckNumType * ) bp		1191946	1					
ANR	1192162	CastTarget	StateCheckNumType *		1191946	0					
ANR	1192163	Identifier	bp		1191946	1					
ANR	1192164	ExpressionStatement	bp += SIZE_STATE_CHECK_NUM	5892:6:135971:135997	1191946	24	True				
ANR	1192165	AssignmentExpression	bp += SIZE_STATE_CHECK_NUM		1191946	0		+=			
ANR	1192166	Identifier	bp		1191946	0					
ANR	1192167	Identifier	SIZE_STATE_CHECK_NUM		1191946	1					
ANR	1192168	ExpressionStatement	"fprintf ( f , "":%d"" , scn )"	5893:6:136005:136027	1191946	25	True				
ANR	1192169	CallExpression	"fprintf ( f , "":%d"" , scn )"		1191946	0					
ANR	1192170	Callee	fprintf		1191946	0					
ANR	1192171	Identifier	fprintf		1191946	0					
ANR	1192172	ArgumentList	f		1191946	1					
ANR	1192173	Argument	f		1191946	0					
ANR	1192174	Identifier	f		1191946	0					
ANR	1192175	Argument	""":%d"""		1191946	1					
ANR	1192176	PrimaryExpression	""":%d"""		1191946	0					
ANR	1192177	Argument	scn		1191946	2					
ANR	1192178	Identifier	scn		1191946	0					
ANR	1192179	BreakStatement	break ;	5894:6:136035:136040	1191946	26	True				
ANR	1192180	ElseStatement	else		1191946	0					
ANR	1192181	CompoundStatement		49:7:1031:1031	1191946	0					
ANR	1192182	SwitchStatement	switch ( * bp ++ )		1191946	0					
ANR	1192183	Condition	* bp ++	5898:12:136073:136077	1191946	0	True				
ANR	1192184	UnaryOperationExpression	* bp ++		1191946	0					
ANR	1192185	UnaryOperator	*		1191946	0					
ANR	1192186	PostIncDecOperationExpression	bp ++		1191946	1					
ANR	1192187	Identifier	bp		1191946	0					
ANR	1192188	IncDec	++		1191946	1					
ANR	1192189	CompoundStatement		50:19:1052:1052	1191946	1					
ANR	1192190	Label	case OP_EXACT1 :	5899:4:136086:136100	1191946	0	True				
ANR	1192191	Identifier	OP_EXACT1		1191946	0					
ANR	1192192	Label	case OP_ANYCHAR_STAR_PEEK_NEXT :	5900:4:136106:136136	1191946	1	True				
ANR	1192193	Identifier	OP_ANYCHAR_STAR_PEEK_NEXT		1191946	0					
ANR	1192194	Label	case OP_ANYCHAR_ML_STAR_PEEK_NEXT :	5901:4:136142:136175	1191946	2	True				
ANR	1192195	Identifier	OP_ANYCHAR_ML_STAR_PEEK_NEXT		1191946	0					
ANR	1192196	ExpressionStatement	"p_string ( f , 1 , bp ++ )"	5902:6:136183:136203	1191946	3	True				
ANR	1192197	CallExpression	"p_string ( f , 1 , bp ++ )"		1191946	0					
ANR	1192198	Callee	p_string		1191946	0					
ANR	1192199	Identifier	p_string		1191946	0					
ANR	1192200	ArgumentList	f		1191946	1					
ANR	1192201	Argument	f		1191946	0					
ANR	1192202	Identifier	f		1191946	0					
ANR	1192203	Argument	1		1191946	1					
ANR	1192204	PrimaryExpression	1		1191946	0					
ANR	1192205	Argument	bp ++		1191946	2					
ANR	1192206	PostIncDecOperationExpression	bp ++		1191946	0					
ANR	1192207	Identifier	bp		1191946	0					
ANR	1192208	IncDec	++		1191946	1					
ANR	1192209	BreakStatement	break ;	5902:28:136205:136210	1191946	4	True				
ANR	1192210	Label	case OP_EXACT2 :	5903:4:136216:136230	1191946	5	True				
ANR	1192211	Identifier	OP_EXACT2		1191946	0					
ANR	1192212	ExpressionStatement	"p_string ( f , 2 , bp )"	5904:6:136238:136256	1191946	6	True				
ANR	1192213	CallExpression	"p_string ( f , 2 , bp )"		1191946	0					
ANR	1192214	Callee	p_string		1191946	0					
ANR	1192215	Identifier	p_string		1191946	0					
ANR	1192216	ArgumentList	f		1191946	1					
ANR	1192217	Argument	f		1191946	0					
ANR	1192218	Identifier	f		1191946	0					
ANR	1192219	Argument	2		1191946	1					
ANR	1192220	PrimaryExpression	2		1191946	0					
ANR	1192221	Argument	bp		1191946	2					
ANR	1192222	Identifier	bp		1191946	0					
ANR	1192223	ExpressionStatement	bp += 2	5904:26:136258:136265	1191946	7	True				
ANR	1192224	AssignmentExpression	bp += 2		1191946	0		+=			
ANR	1192225	Identifier	bp		1191946	0					
ANR	1192226	PrimaryExpression	2		1191946	1					
ANR	1192227	BreakStatement	break ;	5904:35:136267:136272	1191946	8	True				
ANR	1192228	Label	case OP_EXACT3 :	5905:4:136278:136292	1191946	9	True				
ANR	1192229	Identifier	OP_EXACT3		1191946	0					
ANR	1192230	ExpressionStatement	"p_string ( f , 3 , bp )"	5906:6:136300:136318	1191946	10	True				
ANR	1192231	CallExpression	"p_string ( f , 3 , bp )"		1191946	0					
ANR	1192232	Callee	p_string		1191946	0					
ANR	1192233	Identifier	p_string		1191946	0					
ANR	1192234	ArgumentList	f		1191946	1					
ANR	1192235	Argument	f		1191946	0					
ANR	1192236	Identifier	f		1191946	0					
ANR	1192237	Argument	3		1191946	1					
ANR	1192238	PrimaryExpression	3		1191946	0					
ANR	1192239	Argument	bp		1191946	2					
ANR	1192240	Identifier	bp		1191946	0					
ANR	1192241	ExpressionStatement	bp += 3	5906:26:136320:136327	1191946	11	True				
ANR	1192242	AssignmentExpression	bp += 3		1191946	0		+=			
ANR	1192243	Identifier	bp		1191946	0					
ANR	1192244	PrimaryExpression	3		1191946	1					
ANR	1192245	BreakStatement	break ;	5906:35:136329:136334	1191946	12	True				
ANR	1192246	Label	case OP_EXACT4 :	5907:4:136340:136354	1191946	13	True				
ANR	1192247	Identifier	OP_EXACT4		1191946	0					
ANR	1192248	ExpressionStatement	"p_string ( f , 4 , bp )"	5908:6:136362:136380	1191946	14	True				
ANR	1192249	CallExpression	"p_string ( f , 4 , bp )"		1191946	0					
ANR	1192250	Callee	p_string		1191946	0					
ANR	1192251	Identifier	p_string		1191946	0					
ANR	1192252	ArgumentList	f		1191946	1					
ANR	1192253	Argument	f		1191946	0					
ANR	1192254	Identifier	f		1191946	0					
ANR	1192255	Argument	4		1191946	1					
ANR	1192256	PrimaryExpression	4		1191946	0					
ANR	1192257	Argument	bp		1191946	2					
ANR	1192258	Identifier	bp		1191946	0					
ANR	1192259	ExpressionStatement	bp += 4	5908:26:136382:136389	1191946	15	True				
ANR	1192260	AssignmentExpression	bp += 4		1191946	0		+=			
ANR	1192261	Identifier	bp		1191946	0					
ANR	1192262	PrimaryExpression	4		1191946	1					
ANR	1192263	BreakStatement	break ;	5908:35:136391:136396	1191946	16	True				
ANR	1192264	Label	case OP_EXACT5 :	5909:4:136402:136416	1191946	17	True				
ANR	1192265	Identifier	OP_EXACT5		1191946	0					
ANR	1192266	ExpressionStatement	"p_string ( f , 5 , bp )"	5910:6:136424:136442	1191946	18	True				
ANR	1192267	CallExpression	"p_string ( f , 5 , bp )"		1191946	0					
ANR	1192268	Callee	p_string		1191946	0					
ANR	1192269	Identifier	p_string		1191946	0					
ANR	1192270	ArgumentList	f		1191946	1					
ANR	1192271	Argument	f		1191946	0					
ANR	1192272	Identifier	f		1191946	0					
ANR	1192273	Argument	5		1191946	1					
ANR	1192274	PrimaryExpression	5		1191946	0					
ANR	1192275	Argument	bp		1191946	2					
ANR	1192276	Identifier	bp		1191946	0					
ANR	1192277	ExpressionStatement	bp += 5	5910:26:136444:136451	1191946	19	True				
ANR	1192278	AssignmentExpression	bp += 5		1191946	0		+=			
ANR	1192279	Identifier	bp		1191946	0					
ANR	1192280	PrimaryExpression	5		1191946	1					
ANR	1192281	BreakStatement	break ;	5910:35:136453:136458	1191946	20	True				
ANR	1192282	Label	case OP_EXACTN :	5911:4:136464:136478	1191946	21	True				
ANR	1192283	Identifier	OP_EXACTN		1191946	0					
ANR	1192284	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5912:6:136486:136509	1191946	22	True				
ANR	1192285	CallExpression	"GET_LENGTH_INC ( len , bp )"		1191946	0					
ANR	1192286	Callee	GET_LENGTH_INC		1191946	0					
ANR	1192287	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1192288	ArgumentList	len		1191946	1					
ANR	1192289	Argument	len		1191946	0					
ANR	1192290	Identifier	len		1191946	0					
ANR	1192291	Argument	bp		1191946	1					
ANR	1192292	Identifier	bp		1191946	0					
ANR	1192293	ExpressionStatement	"p_len_string ( f , len , 1 , bp )"	5913:6:136517:136544	1191946	23	True				
ANR	1192294	CallExpression	"p_len_string ( f , len , 1 , bp )"		1191946	0					
ANR	1192295	Callee	p_len_string		1191946	0					
ANR	1192296	Identifier	p_len_string		1191946	0					
ANR	1192297	ArgumentList	f		1191946	1					
ANR	1192298	Argument	f		1191946	0					
ANR	1192299	Identifier	f		1191946	0					
ANR	1192300	Argument	len		1191946	1					
ANR	1192301	Identifier	len		1191946	0					
ANR	1192302	Argument	1		1191946	2					
ANR	1192303	PrimaryExpression	1		1191946	0					
ANR	1192304	Argument	bp		1191946	3					
ANR	1192305	Identifier	bp		1191946	0					
ANR	1192306	ExpressionStatement	bp += len	5914:6:136552:136561	1191946	24	True				
ANR	1192307	AssignmentExpression	bp += len		1191946	0		+=			
ANR	1192308	Identifier	bp		1191946	0					
ANR	1192309	Identifier	len		1191946	1					
ANR	1192310	BreakStatement	break ;	5915:6:136569:136574	1191946	25	True				
ANR	1192311	Label	case OP_EXACTMB2N1 :	5917:4:136585:136603	1191946	26	True				
ANR	1192312	Identifier	OP_EXACTMB2N1		1191946	0					
ANR	1192313	ExpressionStatement	"p_string ( f , 2 , bp )"	5918:6:136611:136629	1191946	27	True				
ANR	1192314	CallExpression	"p_string ( f , 2 , bp )"		1191946	0					
ANR	1192315	Callee	p_string		1191946	0					
ANR	1192316	Identifier	p_string		1191946	0					
ANR	1192317	ArgumentList	f		1191946	1					
ANR	1192318	Argument	f		1191946	0					
ANR	1192319	Identifier	f		1191946	0					
ANR	1192320	Argument	2		1191946	1					
ANR	1192321	PrimaryExpression	2		1191946	0					
ANR	1192322	Argument	bp		1191946	2					
ANR	1192323	Identifier	bp		1191946	0					
ANR	1192324	ExpressionStatement	bp += 2	5918:26:136631:136638	1191946	28	True				
ANR	1192325	AssignmentExpression	bp += 2		1191946	0		+=			
ANR	1192326	Identifier	bp		1191946	0					
ANR	1192327	PrimaryExpression	2		1191946	1					
ANR	1192328	BreakStatement	break ;	5918:35:136640:136645	1191946	29	True				
ANR	1192329	Label	case OP_EXACTMB2N2 :	5919:4:136651:136669	1191946	30	True				
ANR	1192330	Identifier	OP_EXACTMB2N2		1191946	0					
ANR	1192331	ExpressionStatement	"p_string ( f , 4 , bp )"	5920:6:136677:136695	1191946	31	True				
ANR	1192332	CallExpression	"p_string ( f , 4 , bp )"		1191946	0					
ANR	1192333	Callee	p_string		1191946	0					
ANR	1192334	Identifier	p_string		1191946	0					
ANR	1192335	ArgumentList	f		1191946	1					
ANR	1192336	Argument	f		1191946	0					
ANR	1192337	Identifier	f		1191946	0					
ANR	1192338	Argument	4		1191946	1					
ANR	1192339	PrimaryExpression	4		1191946	0					
ANR	1192340	Argument	bp		1191946	2					
ANR	1192341	Identifier	bp		1191946	0					
ANR	1192342	ExpressionStatement	bp += 4	5920:26:136697:136704	1191946	32	True				
ANR	1192343	AssignmentExpression	bp += 4		1191946	0		+=			
ANR	1192344	Identifier	bp		1191946	0					
ANR	1192345	PrimaryExpression	4		1191946	1					
ANR	1192346	BreakStatement	break ;	5920:35:136706:136711	1191946	33	True				
ANR	1192347	Label	case OP_EXACTMB2N3 :	5921:4:136717:136735	1191946	34	True				
ANR	1192348	Identifier	OP_EXACTMB2N3		1191946	0					
ANR	1192349	ExpressionStatement	"p_string ( f , 6 , bp )"	5922:6:136743:136761	1191946	35	True				
ANR	1192350	CallExpression	"p_string ( f , 6 , bp )"		1191946	0					
ANR	1192351	Callee	p_string		1191946	0					
ANR	1192352	Identifier	p_string		1191946	0					
ANR	1192353	ArgumentList	f		1191946	1					
ANR	1192354	Argument	f		1191946	0					
ANR	1192355	Identifier	f		1191946	0					
ANR	1192356	Argument	6		1191946	1					
ANR	1192357	PrimaryExpression	6		1191946	0					
ANR	1192358	Argument	bp		1191946	2					
ANR	1192359	Identifier	bp		1191946	0					
ANR	1192360	ExpressionStatement	bp += 6	5922:26:136763:136770	1191946	36	True				
ANR	1192361	AssignmentExpression	bp += 6		1191946	0		+=			
ANR	1192362	Identifier	bp		1191946	0					
ANR	1192363	PrimaryExpression	6		1191946	1					
ANR	1192364	BreakStatement	break ;	5922:35:136772:136777	1191946	37	True				
ANR	1192365	Label	case OP_EXACTMB2N :	5923:4:136783:136800	1191946	38	True				
ANR	1192366	Identifier	OP_EXACTMB2N		1191946	0					
ANR	1192367	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5924:6:136808:136831	1191946	39	True				
ANR	1192368	CallExpression	"GET_LENGTH_INC ( len , bp )"		1191946	0					
ANR	1192369	Callee	GET_LENGTH_INC		1191946	0					
ANR	1192370	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1192371	ArgumentList	len		1191946	1					
ANR	1192372	Argument	len		1191946	0					
ANR	1192373	Identifier	len		1191946	0					
ANR	1192374	Argument	bp		1191946	1					
ANR	1192375	Identifier	bp		1191946	0					
ANR	1192376	ExpressionStatement	"p_len_string ( f , len , 2 , bp )"	5925:6:136839:136866	1191946	40	True				
ANR	1192377	CallExpression	"p_len_string ( f , len , 2 , bp )"		1191946	0					
ANR	1192378	Callee	p_len_string		1191946	0					
ANR	1192379	Identifier	p_len_string		1191946	0					
ANR	1192380	ArgumentList	f		1191946	1					
ANR	1192381	Argument	f		1191946	0					
ANR	1192382	Identifier	f		1191946	0					
ANR	1192383	Argument	len		1191946	1					
ANR	1192384	Identifier	len		1191946	0					
ANR	1192385	Argument	2		1191946	2					
ANR	1192386	PrimaryExpression	2		1191946	0					
ANR	1192387	Argument	bp		1191946	3					
ANR	1192388	Identifier	bp		1191946	0					
ANR	1192389	ExpressionStatement	bp += len * 2	5926:6:136874:136887	1191946	41	True				
ANR	1192390	AssignmentExpression	bp += len * 2		1191946	0		+=			
ANR	1192391	Identifier	bp		1191946	0					
ANR	1192392	MultiplicativeExpression	len * 2		1191946	1		*			
ANR	1192393	Identifier	len		1191946	0					
ANR	1192394	PrimaryExpression	2		1191946	1					
ANR	1192395	BreakStatement	break ;	5927:6:136895:136900	1191946	42	True				
ANR	1192396	Label	case OP_EXACTMB3N :	5928:4:136906:136923	1191946	43	True				
ANR	1192397	Identifier	OP_EXACTMB3N		1191946	0					
ANR	1192398	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5929:6:136931:136954	1191946	44	True				
ANR	1192399	CallExpression	"GET_LENGTH_INC ( len , bp )"		1191946	0					
ANR	1192400	Callee	GET_LENGTH_INC		1191946	0					
ANR	1192401	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1192402	ArgumentList	len		1191946	1					
ANR	1192403	Argument	len		1191946	0					
ANR	1192404	Identifier	len		1191946	0					
ANR	1192405	Argument	bp		1191946	1					
ANR	1192406	Identifier	bp		1191946	0					
ANR	1192407	ExpressionStatement	"p_len_string ( f , len , 3 , bp )"	5930:6:136962:136989	1191946	45	True				
ANR	1192408	CallExpression	"p_len_string ( f , len , 3 , bp )"		1191946	0					
ANR	1192409	Callee	p_len_string		1191946	0					
ANR	1192410	Identifier	p_len_string		1191946	0					
ANR	1192411	ArgumentList	f		1191946	1					
ANR	1192412	Argument	f		1191946	0					
ANR	1192413	Identifier	f		1191946	0					
ANR	1192414	Argument	len		1191946	1					
ANR	1192415	Identifier	len		1191946	0					
ANR	1192416	Argument	3		1191946	2					
ANR	1192417	PrimaryExpression	3		1191946	0					
ANR	1192418	Argument	bp		1191946	3					
ANR	1192419	Identifier	bp		1191946	0					
ANR	1192420	ExpressionStatement	bp += len * 3	5931:6:136997:137010	1191946	46	True				
ANR	1192421	AssignmentExpression	bp += len * 3		1191946	0		+=			
ANR	1192422	Identifier	bp		1191946	0					
ANR	1192423	MultiplicativeExpression	len * 3		1191946	1		*			
ANR	1192424	Identifier	len		1191946	0					
ANR	1192425	PrimaryExpression	3		1191946	1					
ANR	1192426	BreakStatement	break ;	5932:6:137018:137023	1191946	47	True				
ANR	1192427	Label	case OP_EXACTMBN :	5933:4:137029:137045	1191946	48	True				
ANR	1192428	Identifier	OP_EXACTMBN		1191946	0					
ANR	1192429	CompoundStatement		87:1:2028:2038	1191946	49					
ANR	1192430	IdentifierDeclStatement	int mb_len ;	5935:1:137056:137066	1191946	0	True				
ANR	1192431	IdentifierDecl	mb_len		1191946	0					
ANR	1192432	IdentifierDeclType	int		1191946	0					
ANR	1192433	Identifier	mb_len		1191946	1					
ANR	1192434	ExpressionStatement	"GET_LENGTH_INC ( mb_len , bp )"	5937:1:137076:137102	1191946	1	True				
ANR	1192435	CallExpression	"GET_LENGTH_INC ( mb_len , bp )"		1191946	0					
ANR	1192436	Callee	GET_LENGTH_INC		1191946	0					
ANR	1192437	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1192438	ArgumentList	mb_len		1191946	1					
ANR	1192439	Argument	mb_len		1191946	0					
ANR	1192440	Identifier	mb_len		1191946	0					
ANR	1192441	Argument	bp		1191946	1					
ANR	1192442	Identifier	bp		1191946	0					
ANR	1192443	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5938:1:137105:137128	1191946	2	True				
ANR	1192444	CallExpression	"GET_LENGTH_INC ( len , bp )"		1191946	0					
ANR	1192445	Callee	GET_LENGTH_INC		1191946	0					
ANR	1192446	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1192447	ArgumentList	len		1191946	1					
ANR	1192448	Argument	len		1191946	0					
ANR	1192449	Identifier	len		1191946	0					
ANR	1192450	Argument	bp		1191946	1					
ANR	1192451	Identifier	bp		1191946	0					
ANR	1192452	ExpressionStatement	"fprintf ( f , "":%d:%d:"" , mb_len , len )"	5939:1:137131:137165	1191946	3	True				
ANR	1192453	CallExpression	"fprintf ( f , "":%d:%d:"" , mb_len , len )"		1191946	0					
ANR	1192454	Callee	fprintf		1191946	0					
ANR	1192455	Identifier	fprintf		1191946	0					
ANR	1192456	ArgumentList	f		1191946	1					
ANR	1192457	Argument	f		1191946	0					
ANR	1192458	Identifier	f		1191946	0					
ANR	1192459	Argument	""":%d:%d:"""		1191946	1					
ANR	1192460	PrimaryExpression	""":%d:%d:"""		1191946	0					
ANR	1192461	Argument	mb_len		1191946	2					
ANR	1192462	Identifier	mb_len		1191946	0					
ANR	1192463	Argument	len		1191946	3					
ANR	1192464	Identifier	len		1191946	0					
ANR	1192465	ExpressionStatement	n = len * mb_len	5940:1:137168:137184	1191946	4	True				
ANR	1192466	AssignmentExpression	n = len * mb_len		1191946	0		=			
ANR	1192467	Identifier	n		1191946	0					
ANR	1192468	MultiplicativeExpression	len * mb_len		1191946	1		*			
ANR	1192469	Identifier	len		1191946	0					
ANR	1192470	Identifier	mb_len		1191946	1					
ANR	1192471	WhileStatement	while ( n -- > 0 )		1191946	5					
ANR	1192472	Condition	n -- > 0	5941:8:137194:137200	1191946	0	True				
ANR	1192473	RelationalExpression	n -- > 0		1191946	0		>			
ANR	1192474	PostIncDecOperationExpression	n --		1191946	0					
ANR	1192475	Identifier	n		1191946	0					
ANR	1192476	IncDec	--		1191946	1					
ANR	1192477	PrimaryExpression	0		1191946	1					
ANR	1192478	CompoundStatement		93:17:2175:2175	1191946	1					
ANR	1192479	ExpressionStatement	"fputc ( * bp ++ , f )"	5941:19:137205:137220	1191946	0	True				
ANR	1192480	CallExpression	"fputc ( * bp ++ , f )"		1191946	0					
ANR	1192481	Callee	fputc		1191946	0					
ANR	1192482	Identifier	fputc		1191946	0					
ANR	1192483	ArgumentList	* bp ++		1191946	1					
ANR	1192484	Argument	* bp ++		1191946	0					
ANR	1192485	UnaryOperationExpression	* bp ++		1191946	0					
ANR	1192486	UnaryOperator	*		1191946	0					
ANR	1192487	PostIncDecOperationExpression	bp ++		1191946	1					
ANR	1192488	Identifier	bp		1191946	0					
ANR	1192489	IncDec	++		1191946	1					
ANR	1192490	Argument	f		1191946	1					
ANR	1192491	Identifier	f		1191946	0					
ANR	1192492	BreakStatement	break ;	5943:6:137238:137243	1191946	50	True				
ANR	1192493	Label	case OP_EXACT1_IC :	5945:4:137250:137267	1191946	51	True				
ANR	1192494	Identifier	OP_EXACT1_IC		1191946	0					
ANR	1192495	ExpressionStatement	"len = enclen ( enc , bp )"	5946:6:137275:137296	1191946	52	True				
ANR	1192496	AssignmentExpression	"len = enclen ( enc , bp )"		1191946	0		=			
ANR	1192497	Identifier	len		1191946	0					
ANR	1192498	CallExpression	"enclen ( enc , bp )"		1191946	1					
ANR	1192499	Callee	enclen		1191946	0					
ANR	1192500	Identifier	enclen		1191946	0					
ANR	1192501	ArgumentList	enc		1191946	1					
ANR	1192502	Argument	enc		1191946	0					
ANR	1192503	Identifier	enc		1191946	0					
ANR	1192504	Argument	bp		1191946	1					
ANR	1192505	Identifier	bp		1191946	0					
ANR	1192506	ExpressionStatement	"p_string ( f , len , bp )"	5947:6:137304:137324	1191946	53	True				
ANR	1192507	CallExpression	"p_string ( f , len , bp )"		1191946	0					
ANR	1192508	Callee	p_string		1191946	0					
ANR	1192509	Identifier	p_string		1191946	0					
ANR	1192510	ArgumentList	f		1191946	1					
ANR	1192511	Argument	f		1191946	0					
ANR	1192512	Identifier	f		1191946	0					
ANR	1192513	Argument	len		1191946	1					
ANR	1192514	Identifier	len		1191946	0					
ANR	1192515	Argument	bp		1191946	2					
ANR	1192516	Identifier	bp		1191946	0					
ANR	1192517	ExpressionStatement	bp += len	5948:6:137332:137341	1191946	54	True				
ANR	1192518	AssignmentExpression	bp += len		1191946	0		+=			
ANR	1192519	Identifier	bp		1191946	0					
ANR	1192520	Identifier	len		1191946	1					
ANR	1192521	BreakStatement	break ;	5949:6:137349:137354	1191946	55	True				
ANR	1192522	Label	case OP_EXACTN_IC :	5950:4:137360:137377	1191946	56	True				
ANR	1192523	Identifier	OP_EXACTN_IC		1191946	0					
ANR	1192524	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5951:6:137385:137408	1191946	57	True				
ANR	1192525	CallExpression	"GET_LENGTH_INC ( len , bp )"		1191946	0					
ANR	1192526	Callee	GET_LENGTH_INC		1191946	0					
ANR	1192527	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1192528	ArgumentList	len		1191946	1					
ANR	1192529	Argument	len		1191946	0					
ANR	1192530	Identifier	len		1191946	0					
ANR	1192531	Argument	bp		1191946	1					
ANR	1192532	Identifier	bp		1191946	0					
ANR	1192533	ExpressionStatement	"p_len_string ( f , len , 1 , bp )"	5952:6:137416:137443	1191946	58	True				
ANR	1192534	CallExpression	"p_len_string ( f , len , 1 , bp )"		1191946	0					
ANR	1192535	Callee	p_len_string		1191946	0					
ANR	1192536	Identifier	p_len_string		1191946	0					
ANR	1192537	ArgumentList	f		1191946	1					
ANR	1192538	Argument	f		1191946	0					
ANR	1192539	Identifier	f		1191946	0					
ANR	1192540	Argument	len		1191946	1					
ANR	1192541	Identifier	len		1191946	0					
ANR	1192542	Argument	1		1191946	2					
ANR	1192543	PrimaryExpression	1		1191946	0					
ANR	1192544	Argument	bp		1191946	3					
ANR	1192545	Identifier	bp		1191946	0					
ANR	1192546	ExpressionStatement	bp += len	5953:6:137451:137460	1191946	59	True				
ANR	1192547	AssignmentExpression	bp += len		1191946	0		+=			
ANR	1192548	Identifier	bp		1191946	0					
ANR	1192549	Identifier	len		1191946	1					
ANR	1192550	BreakStatement	break ;	5954:6:137468:137473	1191946	60	True				
ANR	1192551	Label	case OP_CCLASS :	5956:4:137480:137494	1191946	61	True				
ANR	1192552	Identifier	OP_CCLASS		1191946	0					
ANR	1192553	ExpressionStatement	n = bitset_on_num ( ( BitSetRef ) bp )	5957:6:137502:137535	1191946	62	True				
ANR	1192554	AssignmentExpression	n = bitset_on_num ( ( BitSetRef ) bp )		1191946	0		=			
ANR	1192555	Identifier	n		1191946	0					
ANR	1192556	CallExpression	bitset_on_num ( ( BitSetRef ) bp )		1191946	1					
ANR	1192557	Callee	bitset_on_num		1191946	0					
ANR	1192558	Identifier	bitset_on_num		1191946	0					
ANR	1192559	ArgumentList	( BitSetRef ) bp		1191946	1					
ANR	1192560	Argument	( BitSetRef ) bp		1191946	0					
ANR	1192561	CastExpression	( BitSetRef ) bp		1191946	0					
ANR	1192562	CastTarget	BitSetRef		1191946	0					
ANR	1192563	Identifier	bp		1191946	1					
ANR	1192564	ExpressionStatement	bp += SIZE_BITSET	5958:6:137543:137560	1191946	63	True				
ANR	1192565	AssignmentExpression	bp += SIZE_BITSET		1191946	0		+=			
ANR	1192566	Identifier	bp		1191946	0					
ANR	1192567	Identifier	SIZE_BITSET		1191946	1					
ANR	1192568	ExpressionStatement	"fprintf ( f , "":%d"" , n )"	5959:6:137568:137588	1191946	64	True				
ANR	1192569	CallExpression	"fprintf ( f , "":%d"" , n )"		1191946	0					
ANR	1192570	Callee	fprintf		1191946	0					
ANR	1192571	Identifier	fprintf		1191946	0					
ANR	1192572	ArgumentList	f		1191946	1					
ANR	1192573	Argument	f		1191946	0					
ANR	1192574	Identifier	f		1191946	0					
ANR	1192575	Argument	""":%d"""		1191946	1					
ANR	1192576	PrimaryExpression	""":%d"""		1191946	0					
ANR	1192577	Argument	n		1191946	2					
ANR	1192578	Identifier	n		1191946	0					
ANR	1192579	BreakStatement	break ;	5960:6:137596:137601	1191946	65	True				
ANR	1192580	Label	case OP_CCLASS_NOT :	5962:4:137608:137626	1191946	66	True				
ANR	1192581	Identifier	OP_CCLASS_NOT		1191946	0					
ANR	1192582	ExpressionStatement	n = bitset_on_num ( ( BitSetRef ) bp )	5963:6:137634:137667	1191946	67	True				
ANR	1192583	AssignmentExpression	n = bitset_on_num ( ( BitSetRef ) bp )		1191946	0		=			
ANR	1192584	Identifier	n		1191946	0					
ANR	1192585	CallExpression	bitset_on_num ( ( BitSetRef ) bp )		1191946	1					
ANR	1192586	Callee	bitset_on_num		1191946	0					
ANR	1192587	Identifier	bitset_on_num		1191946	0					
ANR	1192588	ArgumentList	( BitSetRef ) bp		1191946	1					
ANR	1192589	Argument	( BitSetRef ) bp		1191946	0					
ANR	1192590	CastExpression	( BitSetRef ) bp		1191946	0					
ANR	1192591	CastTarget	BitSetRef		1191946	0					
ANR	1192592	Identifier	bp		1191946	1					
ANR	1192593	ExpressionStatement	bp += SIZE_BITSET	5964:6:137675:137692	1191946	68	True				
ANR	1192594	AssignmentExpression	bp += SIZE_BITSET		1191946	0		+=			
ANR	1192595	Identifier	bp		1191946	0					
ANR	1192596	Identifier	SIZE_BITSET		1191946	1					
ANR	1192597	ExpressionStatement	"fprintf ( f , "":%d"" , n )"	5965:6:137700:137720	1191946	69	True				
ANR	1192598	CallExpression	"fprintf ( f , "":%d"" , n )"		1191946	0					
ANR	1192599	Callee	fprintf		1191946	0					
ANR	1192600	Identifier	fprintf		1191946	0					
ANR	1192601	ArgumentList	f		1191946	1					
ANR	1192602	Argument	f		1191946	0					
ANR	1192603	Identifier	f		1191946	0					
ANR	1192604	Argument	""":%d"""		1191946	1					
ANR	1192605	PrimaryExpression	""":%d"""		1191946	0					
ANR	1192606	Argument	n		1191946	2					
ANR	1192607	Identifier	n		1191946	0					
ANR	1192608	BreakStatement	break ;	5966:6:137728:137733	1191946	70	True				
ANR	1192609	Label	case OP_CCLASS_MB :	5968:4:137740:137757	1191946	71	True				
ANR	1192610	Identifier	OP_CCLASS_MB		1191946	0					
ANR	1192611	Label	case OP_CCLASS_MB_NOT :	5969:4:137763:137784	1191946	72	True				
ANR	1192612	Identifier	OP_CCLASS_MB_NOT		1191946	0					
ANR	1192613	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5970:6:137792:137815	1191946	73	True				
ANR	1192614	CallExpression	"GET_LENGTH_INC ( len , bp )"		1191946	0					
ANR	1192615	Callee	GET_LENGTH_INC		1191946	0					
ANR	1192616	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1192617	ArgumentList	len		1191946	1					
ANR	1192618	Argument	len		1191946	0					
ANR	1192619	Identifier	len		1191946	0					
ANR	1192620	Argument	bp		1191946	1					
ANR	1192621	Identifier	bp		1191946	0					
ANR	1192622	ExpressionStatement	q = bp	5971:6:137823:137829	1191946	74	True				
ANR	1192623	AssignmentExpression	q = bp		1191946	0		=			
ANR	1192624	Identifier	q		1191946	0					
ANR	1192625	Identifier	bp		1191946	1					
ANR	1192626	ExpressionStatement	ALIGNMENT_RIGHT ( q )	5973:6:137876:137894	1191946	75	True				
ANR	1192627	CallExpression	ALIGNMENT_RIGHT ( q )		1191946	0					
ANR	1192628	Callee	ALIGNMENT_RIGHT		1191946	0					
ANR	1192629	Identifier	ALIGNMENT_RIGHT		1191946	0					
ANR	1192630	ArgumentList	q		1191946	1					
ANR	1192631	Argument	q		1191946	0					
ANR	1192632	Identifier	q		1191946	0					
ANR	1192633	ExpressionStatement	"GET_CODE_POINT ( code , q )"	5975:6:137909:137932	1191946	76	True				
ANR	1192634	CallExpression	"GET_CODE_POINT ( code , q )"		1191946	0					
ANR	1192635	Callee	GET_CODE_POINT		1191946	0					
ANR	1192636	Identifier	GET_CODE_POINT		1191946	0					
ANR	1192637	ArgumentList	code		1191946	1					
ANR	1192638	Argument	code		1191946	0					
ANR	1192639	Identifier	code		1191946	0					
ANR	1192640	Argument	q		1191946	1					
ANR	1192641	Identifier	q		1191946	0					
ANR	1192642	ExpressionStatement	bp += len	5976:6:137940:137949	1191946	77	True				
ANR	1192643	AssignmentExpression	bp += len		1191946	0		+=			
ANR	1192644	Identifier	bp		1191946	0					
ANR	1192645	Identifier	len		1191946	1					
ANR	1192646	ExpressionStatement	"fprintf ( f , "":%d:%d"" , ( int ) code , len )"	5977:6:137957:137994	1191946	78	True				
ANR	1192647	CallExpression	"fprintf ( f , "":%d:%d"" , ( int ) code , len )"		1191946	0					
ANR	1192648	Callee	fprintf		1191946	0					
ANR	1192649	Identifier	fprintf		1191946	0					
ANR	1192650	ArgumentList	f		1191946	1					
ANR	1192651	Argument	f		1191946	0					
ANR	1192652	Identifier	f		1191946	0					
ANR	1192653	Argument	""":%d:%d"""		1191946	1					
ANR	1192654	PrimaryExpression	""":%d:%d"""		1191946	0					
ANR	1192655	Argument	( int ) code		1191946	2					
ANR	1192656	CastExpression	( int ) code		1191946	0					
ANR	1192657	CastTarget	int		1191946	0					
ANR	1192658	Identifier	code		1191946	1					
ANR	1192659	Argument	len		1191946	3					
ANR	1192660	Identifier	len		1191946	0					
ANR	1192661	BreakStatement	break ;	5978:6:138002:138007	1191946	79	True				
ANR	1192662	Label	case OP_CCLASS_MIX :	5980:4:138014:138032	1191946	80	True				
ANR	1192663	Identifier	OP_CCLASS_MIX		1191946	0					
ANR	1192664	Label	case OP_CCLASS_MIX_NOT :	5981:4:138038:138060	1191946	81	True				
ANR	1192665	Identifier	OP_CCLASS_MIX_NOT		1191946	0					
ANR	1192666	ExpressionStatement	n = bitset_on_num ( ( BitSetRef ) bp )	5982:6:138068:138101	1191946	82	True				
ANR	1192667	AssignmentExpression	n = bitset_on_num ( ( BitSetRef ) bp )		1191946	0		=			
ANR	1192668	Identifier	n		1191946	0					
ANR	1192669	CallExpression	bitset_on_num ( ( BitSetRef ) bp )		1191946	1					
ANR	1192670	Callee	bitset_on_num		1191946	0					
ANR	1192671	Identifier	bitset_on_num		1191946	0					
ANR	1192672	ArgumentList	( BitSetRef ) bp		1191946	1					
ANR	1192673	Argument	( BitSetRef ) bp		1191946	0					
ANR	1192674	CastExpression	( BitSetRef ) bp		1191946	0					
ANR	1192675	CastTarget	BitSetRef		1191946	0					
ANR	1192676	Identifier	bp		1191946	1					
ANR	1192677	ExpressionStatement	bp += SIZE_BITSET	5983:6:138109:138126	1191946	83	True				
ANR	1192678	AssignmentExpression	bp += SIZE_BITSET		1191946	0		+=			
ANR	1192679	Identifier	bp		1191946	0					
ANR	1192680	Identifier	SIZE_BITSET		1191946	1					
ANR	1192681	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	5984:6:138134:138157	1191946	84	True				
ANR	1192682	CallExpression	"GET_LENGTH_INC ( len , bp )"		1191946	0					
ANR	1192683	Callee	GET_LENGTH_INC		1191946	0					
ANR	1192684	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1192685	ArgumentList	len		1191946	1					
ANR	1192686	Argument	len		1191946	0					
ANR	1192687	Identifier	len		1191946	0					
ANR	1192688	Argument	bp		1191946	1					
ANR	1192689	Identifier	bp		1191946	0					
ANR	1192690	ExpressionStatement	q = bp	5985:6:138165:138171	1191946	85	True				
ANR	1192691	AssignmentExpression	q = bp		1191946	0		=			
ANR	1192692	Identifier	q		1191946	0					
ANR	1192693	Identifier	bp		1191946	1					
ANR	1192694	ExpressionStatement	ALIGNMENT_RIGHT ( q )	5987:6:138218:138236	1191946	86	True				
ANR	1192695	CallExpression	ALIGNMENT_RIGHT ( q )		1191946	0					
ANR	1192696	Callee	ALIGNMENT_RIGHT		1191946	0					
ANR	1192697	Identifier	ALIGNMENT_RIGHT		1191946	0					
ANR	1192698	ArgumentList	q		1191946	1					
ANR	1192699	Argument	q		1191946	0					
ANR	1192700	Identifier	q		1191946	0					
ANR	1192701	ExpressionStatement	"GET_CODE_POINT ( code , q )"	5989:6:138251:138274	1191946	87	True				
ANR	1192702	CallExpression	"GET_CODE_POINT ( code , q )"		1191946	0					
ANR	1192703	Callee	GET_CODE_POINT		1191946	0					
ANR	1192704	Identifier	GET_CODE_POINT		1191946	0					
ANR	1192705	ArgumentList	code		1191946	1					
ANR	1192706	Argument	code		1191946	0					
ANR	1192707	Identifier	code		1191946	0					
ANR	1192708	Argument	q		1191946	1					
ANR	1192709	Identifier	q		1191946	0					
ANR	1192710	ExpressionStatement	bp += len	5990:6:138282:138291	1191946	88	True				
ANR	1192711	AssignmentExpression	bp += len		1191946	0		+=			
ANR	1192712	Identifier	bp		1191946	0					
ANR	1192713	Identifier	len		1191946	1					
ANR	1192714	ExpressionStatement	"fprintf ( f , "":%d:%d:%d"" , n , ( int ) code , len )"	5991:6:138299:138342	1191946	89	True				
ANR	1192715	CallExpression	"fprintf ( f , "":%d:%d:%d"" , n , ( int ) code , len )"		1191946	0					
ANR	1192716	Callee	fprintf		1191946	0					
ANR	1192717	Identifier	fprintf		1191946	0					
ANR	1192718	ArgumentList	f		1191946	1					
ANR	1192719	Argument	f		1191946	0					
ANR	1192720	Identifier	f		1191946	0					
ANR	1192721	Argument	""":%d:%d:%d"""		1191946	1					
ANR	1192722	PrimaryExpression	""":%d:%d:%d"""		1191946	0					
ANR	1192723	Argument	n		1191946	2					
ANR	1192724	Identifier	n		1191946	0					
ANR	1192725	Argument	( int ) code		1191946	3					
ANR	1192726	CastExpression	( int ) code		1191946	0					
ANR	1192727	CastTarget	int		1191946	0					
ANR	1192728	Identifier	code		1191946	1					
ANR	1192729	Argument	len		1191946	4					
ANR	1192730	Identifier	len		1191946	0					
ANR	1192731	BreakStatement	break ;	5992:6:138350:138355	1191946	90	True				
ANR	1192732	Label	case OP_CCLASS_NODE :	5994:4:138362:138381	1191946	91	True				
ANR	1192733	Identifier	OP_CCLASS_NODE		1191946	0					
ANR	1192734	CompoundStatement		148:8:3371:3385	1191946	92					
ANR	1192735	IdentifierDeclStatement	CClassNode * cc ;	5996:8:138399:138413	1191946	0	True				
ANR	1192736	IdentifierDecl	* cc		1191946	0					
ANR	1192737	IdentifierDeclType	CClassNode *		1191946	0					
ANR	1192738	Identifier	cc		1191946	1					
ANR	1192739	ExpressionStatement	"GET_POINTER_INC ( cc , bp )"	5998:8:138424:138447	1191946	1	True				
ANR	1192740	CallExpression	"GET_POINTER_INC ( cc , bp )"		1191946	0					
ANR	1192741	Callee	GET_POINTER_INC		1191946	0					
ANR	1192742	Identifier	GET_POINTER_INC		1191946	0					
ANR	1192743	ArgumentList	cc		1191946	1					
ANR	1192744	Argument	cc		1191946	0					
ANR	1192745	Identifier	cc		1191946	0					
ANR	1192746	Argument	bp		1191946	1					
ANR	1192747	Identifier	bp		1191946	0					
ANR	1192748	ExpressionStatement	n = bitset_on_num ( cc -> bs )	5999:8:138457:138482	1191946	2	True				
ANR	1192749	AssignmentExpression	n = bitset_on_num ( cc -> bs )		1191946	0		=			
ANR	1192750	Identifier	n		1191946	0					
ANR	1192751	CallExpression	bitset_on_num ( cc -> bs )		1191946	1					
ANR	1192752	Callee	bitset_on_num		1191946	0					
ANR	1192753	Identifier	bitset_on_num		1191946	0					
ANR	1192754	ArgumentList	cc -> bs		1191946	1					
ANR	1192755	Argument	cc -> bs		1191946	0					
ANR	1192756	PtrMemberAccess	cc -> bs		1191946	0					
ANR	1192757	Identifier	cc		1191946	0					
ANR	1192758	Identifier	bs		1191946	1					
ANR	1192759	ExpressionStatement	"fprintf ( f , "":%u:%d"" , ( unsigned int ) cc , n )"	6000:8:138492:138534	1191946	3	True				
ANR	1192760	CallExpression	"fprintf ( f , "":%u:%d"" , ( unsigned int ) cc , n )"		1191946	0					
ANR	1192761	Callee	fprintf		1191946	0					
ANR	1192762	Identifier	fprintf		1191946	0					
ANR	1192763	ArgumentList	f		1191946	1					
ANR	1192764	Argument	f		1191946	0					
ANR	1192765	Identifier	f		1191946	0					
ANR	1192766	Argument	""":%u:%d"""		1191946	1					
ANR	1192767	PrimaryExpression	""":%u:%d"""		1191946	0					
ANR	1192768	Argument	( unsigned int ) cc		1191946	2					
ANR	1192769	CastExpression	( unsigned int ) cc		1191946	0					
ANR	1192770	CastTarget	unsigned int		1191946	0					
ANR	1192771	Identifier	cc		1191946	1					
ANR	1192772	Argument	n		1191946	3					
ANR	1192773	Identifier	n		1191946	0					
ANR	1192774	BreakStatement	break ;	6002:6:138550:138555	1191946	93	True				
ANR	1192775	Label	case OP_BACKREFN_IC :	6004:4:138562:138581	1191946	94	True				
ANR	1192776	Identifier	OP_BACKREFN_IC		1191946	0					
ANR	1192777	ExpressionStatement	mem = * ( ( MemNumType * ) bp )	6005:6:138589:138614	1191946	95	True				
ANR	1192778	AssignmentExpression	mem = * ( ( MemNumType * ) bp )		1191946	0		=			
ANR	1192779	Identifier	mem		1191946	0					
ANR	1192780	UnaryOperationExpression	* ( ( MemNumType * ) bp )		1191946	1					
ANR	1192781	UnaryOperator	*		1191946	0					
ANR	1192782	CastExpression	( MemNumType * ) bp		1191946	1					
ANR	1192783	CastTarget	MemNumType *		1191946	0					
ANR	1192784	Identifier	bp		1191946	1					
ANR	1192785	ExpressionStatement	bp += SIZE_MEMNUM	6006:6:138622:138639	1191946	96	True				
ANR	1192786	AssignmentExpression	bp += SIZE_MEMNUM		1191946	0		+=			
ANR	1192787	Identifier	bp		1191946	0					
ANR	1192788	Identifier	SIZE_MEMNUM		1191946	1					
ANR	1192789	ExpressionStatement	"fprintf ( f , "":%d"" , mem )"	6007:6:138647:138669	1191946	97	True				
ANR	1192790	CallExpression	"fprintf ( f , "":%d"" , mem )"		1191946	0					
ANR	1192791	Callee	fprintf		1191946	0					
ANR	1192792	Identifier	fprintf		1191946	0					
ANR	1192793	ArgumentList	f		1191946	1					
ANR	1192794	Argument	f		1191946	0					
ANR	1192795	Identifier	f		1191946	0					
ANR	1192796	Argument	""":%d"""		1191946	1					
ANR	1192797	PrimaryExpression	""":%d"""		1191946	0					
ANR	1192798	Argument	mem		1191946	2					
ANR	1192799	Identifier	mem		1191946	0					
ANR	1192800	BreakStatement	break ;	6008:6:138677:138682	1191946	98	True				
ANR	1192801	Label	case OP_BACKREF_MULTI_IC :	6010:4:138689:138713	1191946	99	True				
ANR	1192802	Identifier	OP_BACKREF_MULTI_IC		1191946	0					
ANR	1192803	Label	case OP_BACKREF_MULTI :	6011:4:138719:138740	1191946	100	True				
ANR	1192804	Identifier	OP_BACKREF_MULTI		1191946	0					
ANR	1192805	ExpressionStatement	"fputs ( "" "" , f )"	6012:6:138748:138761	1191946	101	True				
ANR	1192806	CallExpression	"fputs ( "" "" , f )"		1191946	0					
ANR	1192807	Callee	fputs		1191946	0					
ANR	1192808	Identifier	fputs		1191946	0					
ANR	1192809	ArgumentList	""" """		1191946	1					
ANR	1192810	Argument	""" """		1191946	0					
ANR	1192811	PrimaryExpression	""" """		1191946	0					
ANR	1192812	Argument	f		1191946	1					
ANR	1192813	Identifier	f		1191946	0					
ANR	1192814	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	6013:6:138769:138792	1191946	102	True				
ANR	1192815	CallExpression	"GET_LENGTH_INC ( len , bp )"		1191946	0					
ANR	1192816	Callee	GET_LENGTH_INC		1191946	0					
ANR	1192817	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1192818	ArgumentList	len		1191946	1					
ANR	1192819	Argument	len		1191946	0					
ANR	1192820	Identifier	len		1191946	0					
ANR	1192821	Argument	bp		1191946	1					
ANR	1192822	Identifier	bp		1191946	0					
ANR	1192823	ForStatement	for ( i = 0 ; i < len ; i ++ )		1191946	103					
ANR	1192824	ForInit	i = 0 ;	6014:11:138805:138810	1191946	0	True				
ANR	1192825	AssignmentExpression	i = 0		1191946	0		=			
ANR	1192826	Identifier	i		1191946	0					
ANR	1192827	PrimaryExpression	0		1191946	1					
ANR	1192828	Condition	i < len	6014:18:138812:138818	1191946	1	True				
ANR	1192829	RelationalExpression	i < len		1191946	0		<			
ANR	1192830	Identifier	i		1191946	0					
ANR	1192831	Identifier	len		1191946	1					
ANR	1192832	PostIncDecOperationExpression	i ++	6014:27:138821:138823	1191946	2	True				
ANR	1192833	Identifier	i		1191946	0					
ANR	1192834	IncDec	++		1191946	1					
ANR	1192835	CompoundStatement		166:32:3798:3798	1191946	3					
ANR	1192836	ExpressionStatement	"GET_MEMNUM_INC ( mem , bp )"	6015:1:138829:138852	1191946	0	True				
ANR	1192837	CallExpression	"GET_MEMNUM_INC ( mem , bp )"		1191946	0					
ANR	1192838	Callee	GET_MEMNUM_INC		1191946	0					
ANR	1192839	Identifier	GET_MEMNUM_INC		1191946	0					
ANR	1192840	ArgumentList	mem		1191946	1					
ANR	1192841	Argument	mem		1191946	0					
ANR	1192842	Identifier	mem		1191946	0					
ANR	1192843	Argument	bp		1191946	1					
ANR	1192844	Identifier	bp		1191946	0					
ANR	1192845	IfStatement	if ( i > 0 )		1191946	1					
ANR	1192846	Condition	i > 0	6016:5:138859:138863	1191946	0	True				
ANR	1192847	RelationalExpression	i > 0		1191946	0		>			
ANR	1192848	Identifier	i		1191946	0					
ANR	1192849	PrimaryExpression	0		1191946	1					
ANR	1192850	ExpressionStatement	"fputs ( "", "" , f )"	6016:12:138866:138880	1191946	1	True				
ANR	1192851	CallExpression	"fputs ( "", "" , f )"		1191946	0					
ANR	1192852	Callee	fputs		1191946	0					
ANR	1192853	Identifier	fputs		1191946	0					
ANR	1192854	ArgumentList	""", """		1191946	1					
ANR	1192855	Argument	""", """		1191946	0					
ANR	1192856	PrimaryExpression	""", """		1191946	0					
ANR	1192857	Argument	f		1191946	1					
ANR	1192858	Identifier	f		1191946	0					
ANR	1192859	ExpressionStatement	"fprintf ( f , ""%d"" , mem )"	6017:1:138883:138904	1191946	2	True				
ANR	1192860	CallExpression	"fprintf ( f , ""%d"" , mem )"		1191946	0					
ANR	1192861	Callee	fprintf		1191946	0					
ANR	1192862	Identifier	fprintf		1191946	0					
ANR	1192863	ArgumentList	f		1191946	1					
ANR	1192864	Argument	f		1191946	0					
ANR	1192865	Identifier	f		1191946	0					
ANR	1192866	Argument	"""%d"""		1191946	1					
ANR	1192867	PrimaryExpression	"""%d"""		1191946	0					
ANR	1192868	Argument	mem		1191946	2					
ANR	1192869	Identifier	mem		1191946	0					
ANR	1192870	BreakStatement	break ;	6019:6:138920:138925	1191946	104	True				
ANR	1192871	Label	case OP_BACKREF_WITH_LEVEL :	6021:4:138932:138958	1191946	105	True				
ANR	1192872	Identifier	OP_BACKREF_WITH_LEVEL		1191946	0					
ANR	1192873	CompoundStatement		176:1:3965:3981	1191946	106					
ANR	1192874	IdentifierDeclStatement	OnigOptionType option ;	6023:1:138969:138990	1191946	0	True				
ANR	1192875	IdentifierDecl	option		1191946	0					
ANR	1192876	IdentifierDeclType	OnigOptionType		1191946	0					
ANR	1192877	Identifier	option		1191946	1					
ANR	1192878	IdentifierDeclStatement	LengthType level ;	6024:1:138993:139009	1191946	1	True				
ANR	1192879	IdentifierDecl	level		1191946	0					
ANR	1192880	IdentifierDeclType	LengthType		1191946	0					
ANR	1192881	Identifier	level		1191946	1					
ANR	1192882	ExpressionStatement	"GET_OPTION_INC ( option , bp )"	6026:1:139013:139039	1191946	2	True				
ANR	1192883	CallExpression	"GET_OPTION_INC ( option , bp )"		1191946	0					
ANR	1192884	Callee	GET_OPTION_INC		1191946	0					
ANR	1192885	Identifier	GET_OPTION_INC		1191946	0					
ANR	1192886	ArgumentList	option		1191946	1					
ANR	1192887	Argument	option		1191946	0					
ANR	1192888	Identifier	option		1191946	0					
ANR	1192889	Argument	bp		1191946	1					
ANR	1192890	Identifier	bp		1191946	0					
ANR	1192891	ExpressionStatement	"fprintf ( f , "":%d"" , option )"	6027:1:139042:139067	1191946	3	True				
ANR	1192892	CallExpression	"fprintf ( f , "":%d"" , option )"		1191946	0					
ANR	1192893	Callee	fprintf		1191946	0					
ANR	1192894	Identifier	fprintf		1191946	0					
ANR	1192895	ArgumentList	f		1191946	1					
ANR	1192896	Argument	f		1191946	0					
ANR	1192897	Identifier	f		1191946	0					
ANR	1192898	Argument	""":%d"""		1191946	1					
ANR	1192899	PrimaryExpression	""":%d"""		1191946	0					
ANR	1192900	Argument	option		1191946	2					
ANR	1192901	Identifier	option		1191946	0					
ANR	1192902	ExpressionStatement	"GET_LENGTH_INC ( level , bp )"	6028:1:139070:139095	1191946	4	True				
ANR	1192903	CallExpression	"GET_LENGTH_INC ( level , bp )"		1191946	0					
ANR	1192904	Callee	GET_LENGTH_INC		1191946	0					
ANR	1192905	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1192906	ArgumentList	level		1191946	1					
ANR	1192907	Argument	level		1191946	0					
ANR	1192908	Identifier	level		1191946	0					
ANR	1192909	Argument	bp		1191946	1					
ANR	1192910	Identifier	bp		1191946	0					
ANR	1192911	ExpressionStatement	"fprintf ( f , "":%d"" , level )"	6029:1:139098:139122	1191946	5	True				
ANR	1192912	CallExpression	"fprintf ( f , "":%d"" , level )"		1191946	0					
ANR	1192913	Callee	fprintf		1191946	0					
ANR	1192914	Identifier	fprintf		1191946	0					
ANR	1192915	ArgumentList	f		1191946	1					
ANR	1192916	Argument	f		1191946	0					
ANR	1192917	Identifier	f		1191946	0					
ANR	1192918	Argument	""":%d"""		1191946	1					
ANR	1192919	PrimaryExpression	""":%d"""		1191946	0					
ANR	1192920	Argument	level		1191946	2					
ANR	1192921	Identifier	level		1191946	0					
ANR	1192922	ExpressionStatement	"fputs ( "" "" , f )"	6031:1:139126:139139	1191946	6	True				
ANR	1192923	CallExpression	"fputs ( "" "" , f )"		1191946	0					
ANR	1192924	Callee	fputs		1191946	0					
ANR	1192925	Identifier	fputs		1191946	0					
ANR	1192926	ArgumentList	""" """		1191946	1					
ANR	1192927	Argument	""" """		1191946	0					
ANR	1192928	PrimaryExpression	""" """		1191946	0					
ANR	1192929	Argument	f		1191946	1					
ANR	1192930	Identifier	f		1191946	0					
ANR	1192931	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	6032:1:139142:139165	1191946	7	True				
ANR	1192932	CallExpression	"GET_LENGTH_INC ( len , bp )"		1191946	0					
ANR	1192933	Callee	GET_LENGTH_INC		1191946	0					
ANR	1192934	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1192935	ArgumentList	len		1191946	1					
ANR	1192936	Argument	len		1191946	0					
ANR	1192937	Identifier	len		1191946	0					
ANR	1192938	Argument	bp		1191946	1					
ANR	1192939	Identifier	bp		1191946	0					
ANR	1192940	ForStatement	for ( i = 0 ; i < len ; i ++ )		1191946	8					
ANR	1192941	ForInit	i = 0 ;	6033:6:139173:139178	1191946	0	True				
ANR	1192942	AssignmentExpression	i = 0		1191946	0		=			
ANR	1192943	Identifier	i		1191946	0					
ANR	1192944	PrimaryExpression	0		1191946	1					
ANR	1192945	Condition	i < len	6033:13:139180:139186	1191946	1	True				
ANR	1192946	RelationalExpression	i < len		1191946	0		<			
ANR	1192947	Identifier	i		1191946	0					
ANR	1192948	Identifier	len		1191946	1					
ANR	1192949	PostIncDecOperationExpression	i ++	6033:22:139189:139191	1191946	2	True				
ANR	1192950	Identifier	i		1191946	0					
ANR	1192951	IncDec	++		1191946	1					
ANR	1192952	CompoundStatement		185:27:4166:4166	1191946	3					
ANR	1192953	ExpressionStatement	"GET_MEMNUM_INC ( mem , bp )"	6034:3:139199:139222	1191946	0	True				
ANR	1192954	CallExpression	"GET_MEMNUM_INC ( mem , bp )"		1191946	0					
ANR	1192955	Callee	GET_MEMNUM_INC		1191946	0					
ANR	1192956	Identifier	GET_MEMNUM_INC		1191946	0					
ANR	1192957	ArgumentList	mem		1191946	1					
ANR	1192958	Argument	mem		1191946	0					
ANR	1192959	Identifier	mem		1191946	0					
ANR	1192960	Argument	bp		1191946	1					
ANR	1192961	Identifier	bp		1191946	0					
ANR	1192962	IfStatement	if ( i > 0 )		1191946	1					
ANR	1192963	Condition	i > 0	6035:7:139231:139235	1191946	0	True				
ANR	1192964	RelationalExpression	i > 0		1191946	0		>			
ANR	1192965	Identifier	i		1191946	0					
ANR	1192966	PrimaryExpression	0		1191946	1					
ANR	1192967	ExpressionStatement	"fputs ( "", "" , f )"	6035:14:139238:139252	1191946	1	True				
ANR	1192968	CallExpression	"fputs ( "", "" , f )"		1191946	0					
ANR	1192969	Callee	fputs		1191946	0					
ANR	1192970	Identifier	fputs		1191946	0					
ANR	1192971	ArgumentList	""", """		1191946	1					
ANR	1192972	Argument	""", """		1191946	0					
ANR	1192973	PrimaryExpression	""", """		1191946	0					
ANR	1192974	Argument	f		1191946	1					
ANR	1192975	Identifier	f		1191946	0					
ANR	1192976	ExpressionStatement	"fprintf ( f , ""%d"" , mem )"	6036:3:139257:139278	1191946	2	True				
ANR	1192977	CallExpression	"fprintf ( f , ""%d"" , mem )"		1191946	0					
ANR	1192978	Callee	fprintf		1191946	0					
ANR	1192979	Identifier	fprintf		1191946	0					
ANR	1192980	ArgumentList	f		1191946	1					
ANR	1192981	Argument	f		1191946	0					
ANR	1192982	Identifier	f		1191946	0					
ANR	1192983	Argument	"""%d"""		1191946	1					
ANR	1192984	PrimaryExpression	"""%d"""		1191946	0					
ANR	1192985	Argument	mem		1191946	2					
ANR	1192986	Identifier	mem		1191946	0					
ANR	1192987	BreakStatement	break ;	6039:6:139297:139302	1191946	107	True				
ANR	1192988	Label	case OP_REPEAT :	6041:4:139309:139323	1191946	108	True				
ANR	1192989	Identifier	OP_REPEAT		1191946	0					
ANR	1192990	Label	case OP_REPEAT_NG :	6042:4:139329:139346	1191946	109	True				
ANR	1192991	Identifier	OP_REPEAT_NG		1191946	0					
ANR	1192992	CompoundStatement		195:6:4326:4326	1191946	110					
ANR	1192993	ExpressionStatement	mem = * ( ( MemNumType * ) bp )	6044:1:139357:139382	1191946	0	True				
ANR	1192994	AssignmentExpression	mem = * ( ( MemNumType * ) bp )		1191946	0		=			
ANR	1192995	Identifier	mem		1191946	0					
ANR	1192996	UnaryOperationExpression	* ( ( MemNumType * ) bp )		1191946	1					
ANR	1192997	UnaryOperator	*		1191946	0					
ANR	1192998	CastExpression	( MemNumType * ) bp		1191946	1					
ANR	1192999	CastTarget	MemNumType *		1191946	0					
ANR	1193000	Identifier	bp		1191946	1					
ANR	1193001	ExpressionStatement	bp += SIZE_MEMNUM	6045:1:139385:139402	1191946	1	True				
ANR	1193002	AssignmentExpression	bp += SIZE_MEMNUM		1191946	0		+=			
ANR	1193003	Identifier	bp		1191946	0					
ANR	1193004	Identifier	SIZE_MEMNUM		1191946	1					
ANR	1193005	ExpressionStatement	addr = * ( ( RelAddrType * ) bp )	6046:1:139405:139432	1191946	2	True				
ANR	1193006	AssignmentExpression	addr = * ( ( RelAddrType * ) bp )		1191946	0		=			
ANR	1193007	Identifier	addr		1191946	0					
ANR	1193008	UnaryOperationExpression	* ( ( RelAddrType * ) bp )		1191946	1					
ANR	1193009	UnaryOperator	*		1191946	0					
ANR	1193010	CastExpression	( RelAddrType * ) bp		1191946	1					
ANR	1193011	CastTarget	RelAddrType *		1191946	0					
ANR	1193012	Identifier	bp		1191946	1					
ANR	1193013	ExpressionStatement	bp += SIZE_RELADDR	6047:1:139435:139453	1191946	3	True				
ANR	1193014	AssignmentExpression	bp += SIZE_RELADDR		1191946	0		+=			
ANR	1193015	Identifier	bp		1191946	0					
ANR	1193016	Identifier	SIZE_RELADDR		1191946	1					
ANR	1193017	ExpressionStatement	"fprintf ( f , "":%d:%d"" , mem , addr )"	6048:1:139456:139487	1191946	4	True				
ANR	1193018	CallExpression	"fprintf ( f , "":%d:%d"" , mem , addr )"		1191946	0					
ANR	1193019	Callee	fprintf		1191946	0					
ANR	1193020	Identifier	fprintf		1191946	0					
ANR	1193021	ArgumentList	f		1191946	1					
ANR	1193022	Argument	f		1191946	0					
ANR	1193023	Identifier	f		1191946	0					
ANR	1193024	Argument	""":%d:%d"""		1191946	1					
ANR	1193025	PrimaryExpression	""":%d:%d"""		1191946	0					
ANR	1193026	Argument	mem		1191946	2					
ANR	1193027	Identifier	mem		1191946	0					
ANR	1193028	Argument	addr		1191946	3					
ANR	1193029	Identifier	addr		1191946	0					
ANR	1193030	BreakStatement	break ;	6050:6:139503:139508	1191946	111	True				
ANR	1193031	Label	case OP_PUSH_OR_JUMP_EXACT1 :	6052:4:139515:139542	1191946	112	True				
ANR	1193032	Identifier	OP_PUSH_OR_JUMP_EXACT1		1191946	0					
ANR	1193033	Label	case OP_PUSH_IF_PEEK_NEXT :	6053:4:139548:139573	1191946	113	True				
ANR	1193034	Identifier	OP_PUSH_IF_PEEK_NEXT		1191946	0					
ANR	1193035	ExpressionStatement	addr = * ( ( RelAddrType * ) bp )	6054:6:139581:139608	1191946	114	True				
ANR	1193036	AssignmentExpression	addr = * ( ( RelAddrType * ) bp )		1191946	0		=			
ANR	1193037	Identifier	addr		1191946	0					
ANR	1193038	UnaryOperationExpression	* ( ( RelAddrType * ) bp )		1191946	1					
ANR	1193039	UnaryOperator	*		1191946	0					
ANR	1193040	CastExpression	( RelAddrType * ) bp		1191946	1					
ANR	1193041	CastTarget	RelAddrType *		1191946	0					
ANR	1193042	Identifier	bp		1191946	1					
ANR	1193043	ExpressionStatement	bp += SIZE_RELADDR	6055:6:139616:139634	1191946	115	True				
ANR	1193044	AssignmentExpression	bp += SIZE_RELADDR		1191946	0		+=			
ANR	1193045	Identifier	bp		1191946	0					
ANR	1193046	Identifier	SIZE_RELADDR		1191946	1					
ANR	1193047	ExpressionStatement	"fprintf ( f , "":(%d)"" , addr )"	6056:6:139642:139667	1191946	116	True				
ANR	1193048	CallExpression	"fprintf ( f , "":(%d)"" , addr )"		1191946	0					
ANR	1193049	Callee	fprintf		1191946	0					
ANR	1193050	Identifier	fprintf		1191946	0					
ANR	1193051	ArgumentList	f		1191946	1					
ANR	1193052	Argument	f		1191946	0					
ANR	1193053	Identifier	f		1191946	0					
ANR	1193054	Argument	""":(%d)"""		1191946	1					
ANR	1193055	PrimaryExpression	""":(%d)"""		1191946	0					
ANR	1193056	Argument	addr		1191946	2					
ANR	1193057	Identifier	addr		1191946	0					
ANR	1193058	ExpressionStatement	"p_string ( f , 1 , bp )"	6057:6:139675:139693	1191946	117	True				
ANR	1193059	CallExpression	"p_string ( f , 1 , bp )"		1191946	0					
ANR	1193060	Callee	p_string		1191946	0					
ANR	1193061	Identifier	p_string		1191946	0					
ANR	1193062	ArgumentList	f		1191946	1					
ANR	1193063	Argument	f		1191946	0					
ANR	1193064	Identifier	f		1191946	0					
ANR	1193065	Argument	1		1191946	1					
ANR	1193066	PrimaryExpression	1		1191946	0					
ANR	1193067	Argument	bp		1191946	2					
ANR	1193068	Identifier	bp		1191946	0					
ANR	1193069	ExpressionStatement	bp += 1	6058:6:139701:139708	1191946	118	True				
ANR	1193070	AssignmentExpression	bp += 1		1191946	0		+=			
ANR	1193071	Identifier	bp		1191946	0					
ANR	1193072	PrimaryExpression	1		1191946	1					
ANR	1193073	BreakStatement	break ;	6059:6:139716:139721	1191946	119	True				
ANR	1193074	Label	case OP_LOOK_BEHIND :	6061:4:139728:139747	1191946	120	True				
ANR	1193075	Identifier	OP_LOOK_BEHIND		1191946	0					
ANR	1193076	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	6062:6:139755:139778	1191946	121	True				
ANR	1193077	CallExpression	"GET_LENGTH_INC ( len , bp )"		1191946	0					
ANR	1193078	Callee	GET_LENGTH_INC		1191946	0					
ANR	1193079	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1193080	ArgumentList	len		1191946	1					
ANR	1193081	Argument	len		1191946	0					
ANR	1193082	Identifier	len		1191946	0					
ANR	1193083	Argument	bp		1191946	1					
ANR	1193084	Identifier	bp		1191946	0					
ANR	1193085	ExpressionStatement	"fprintf ( f , "":%d"" , len )"	6063:6:139786:139808	1191946	122	True				
ANR	1193086	CallExpression	"fprintf ( f , "":%d"" , len )"		1191946	0					
ANR	1193087	Callee	fprintf		1191946	0					
ANR	1193088	Identifier	fprintf		1191946	0					
ANR	1193089	ArgumentList	f		1191946	1					
ANR	1193090	Argument	f		1191946	0					
ANR	1193091	Identifier	f		1191946	0					
ANR	1193092	Argument	""":%d"""		1191946	1					
ANR	1193093	PrimaryExpression	""":%d"""		1191946	0					
ANR	1193094	Argument	len		1191946	2					
ANR	1193095	Identifier	len		1191946	0					
ANR	1193096	BreakStatement	break ;	6064:6:139816:139821	1191946	123	True				
ANR	1193097	Label	case OP_PUSH_LOOK_BEHIND_NOT :	6066:4:139828:139856	1191946	124	True				
ANR	1193098	Identifier	OP_PUSH_LOOK_BEHIND_NOT		1191946	0					
ANR	1193099	ExpressionStatement	"GET_RELADDR_INC ( addr , bp )"	6067:6:139864:139889	1191946	125	True				
ANR	1193100	CallExpression	"GET_RELADDR_INC ( addr , bp )"		1191946	0					
ANR	1193101	Callee	GET_RELADDR_INC		1191946	0					
ANR	1193102	Identifier	GET_RELADDR_INC		1191946	0					
ANR	1193103	ArgumentList	addr		1191946	1					
ANR	1193104	Argument	addr		1191946	0					
ANR	1193105	Identifier	addr		1191946	0					
ANR	1193106	Argument	bp		1191946	1					
ANR	1193107	Identifier	bp		1191946	0					
ANR	1193108	ExpressionStatement	"GET_LENGTH_INC ( len , bp )"	6068:6:139897:139920	1191946	126	True				
ANR	1193109	CallExpression	"GET_LENGTH_INC ( len , bp )"		1191946	0					
ANR	1193110	Callee	GET_LENGTH_INC		1191946	0					
ANR	1193111	Identifier	GET_LENGTH_INC		1191946	0					
ANR	1193112	ArgumentList	len		1191946	1					
ANR	1193113	Argument	len		1191946	0					
ANR	1193114	Identifier	len		1191946	0					
ANR	1193115	Argument	bp		1191946	1					
ANR	1193116	Identifier	bp		1191946	0					
ANR	1193117	ExpressionStatement	"fprintf ( f , "":%d:(%d)"" , len , addr )"	6069:6:139928:139961	1191946	127	True				
ANR	1193118	CallExpression	"fprintf ( f , "":%d:(%d)"" , len , addr )"		1191946	0					
ANR	1193119	Callee	fprintf		1191946	0					
ANR	1193120	Identifier	fprintf		1191946	0					
ANR	1193121	ArgumentList	f		1191946	1					
ANR	1193122	Argument	f		1191946	0					
ANR	1193123	Identifier	f		1191946	0					
ANR	1193124	Argument	""":%d:(%d)"""		1191946	1					
ANR	1193125	PrimaryExpression	""":%d:(%d)"""		1191946	0					
ANR	1193126	Argument	len		1191946	2					
ANR	1193127	Identifier	len		1191946	0					
ANR	1193128	Argument	addr		1191946	3					
ANR	1193129	Identifier	addr		1191946	0					
ANR	1193130	BreakStatement	break ;	6070:6:139969:139974	1191946	128	True				
ANR	1193131	Label	case OP_STATE_CHECK_PUSH :	6072:4:139981:140005	1191946	129	True				
ANR	1193132	Identifier	OP_STATE_CHECK_PUSH		1191946	0					
ANR	1193133	Label	case OP_STATE_CHECK_PUSH_OR_JUMP :	6073:4:140011:140043	1191946	130	True				
ANR	1193134	Identifier	OP_STATE_CHECK_PUSH_OR_JUMP		1191946	0					
ANR	1193135	ExpressionStatement	scn = * ( ( StateCheckNumType * ) bp )	6074:6:140051:140083	1191946	131	True				
ANR	1193136	AssignmentExpression	scn = * ( ( StateCheckNumType * ) bp )		1191946	0		=			
ANR	1193137	Identifier	scn		1191946	0					
ANR	1193138	UnaryOperationExpression	* ( ( StateCheckNumType * ) bp )		1191946	1					
ANR	1193139	UnaryOperator	*		1191946	0					
ANR	1193140	CastExpression	( StateCheckNumType * ) bp		1191946	1					
ANR	1193141	CastTarget	StateCheckNumType *		1191946	0					
ANR	1193142	Identifier	bp		1191946	1					
ANR	1193143	ExpressionStatement	bp += SIZE_STATE_CHECK_NUM	6075:6:140091:140117	1191946	132	True				
ANR	1193144	AssignmentExpression	bp += SIZE_STATE_CHECK_NUM		1191946	0		+=			
ANR	1193145	Identifier	bp		1191946	0					
ANR	1193146	Identifier	SIZE_STATE_CHECK_NUM		1191946	1					
ANR	1193147	ExpressionStatement	addr = * ( ( RelAddrType * ) bp )	6076:6:140125:140152	1191946	133	True				
ANR	1193148	AssignmentExpression	addr = * ( ( RelAddrType * ) bp )		1191946	0		=			
ANR	1193149	Identifier	addr		1191946	0					
ANR	1193150	UnaryOperationExpression	* ( ( RelAddrType * ) bp )		1191946	1					
ANR	1193151	UnaryOperator	*		1191946	0					
ANR	1193152	CastExpression	( RelAddrType * ) bp		1191946	1					
ANR	1193153	CastTarget	RelAddrType *		1191946	0					
ANR	1193154	Identifier	bp		1191946	1					
ANR	1193155	ExpressionStatement	bp += SIZE_RELADDR	6077:6:140160:140178	1191946	134	True				
ANR	1193156	AssignmentExpression	bp += SIZE_RELADDR		1191946	0		+=			
ANR	1193157	Identifier	bp		1191946	0					
ANR	1193158	Identifier	SIZE_RELADDR		1191946	1					
ANR	1193159	ExpressionStatement	"fprintf ( f , "":%d:(%d)"" , scn , addr )"	6078:6:140186:140219	1191946	135	True				
ANR	1193160	CallExpression	"fprintf ( f , "":%d:(%d)"" , scn , addr )"		1191946	0					
ANR	1193161	Callee	fprintf		1191946	0					
ANR	1193162	Identifier	fprintf		1191946	0					
ANR	1193163	ArgumentList	f		1191946	1					
ANR	1193164	Argument	f		1191946	0					
ANR	1193165	Identifier	f		1191946	0					
ANR	1193166	Argument	""":%d:(%d)"""		1191946	1					
ANR	1193167	PrimaryExpression	""":%d:(%d)"""		1191946	0					
ANR	1193168	Argument	scn		1191946	2					
ANR	1193169	Identifier	scn		1191946	0					
ANR	1193170	Argument	addr		1191946	3					
ANR	1193171	Identifier	addr		1191946	0					
ANR	1193172	BreakStatement	break ;	6079:6:140227:140232	1191946	136	True				
ANR	1193173	Label	default :	6081:4:140239:140246	1191946	137	True				
ANR	1193174	Identifier	default		1191946	0					
ANR	1193175	ExpressionStatement	"fprintf ( stderr , ""onig_print_compiled_byte_code: undefined code %d\\n"" , * -- bp )"	6082:6:140254:140337	1191946	138	True				
ANR	1193176	CallExpression	"fprintf ( stderr , ""onig_print_compiled_byte_code: undefined code %d\\n"" , * -- bp )"		1191946	0					
ANR	1193177	Callee	fprintf		1191946	0					
ANR	1193178	Identifier	fprintf		1191946	0					
ANR	1193179	ArgumentList	stderr		1191946	1					
ANR	1193180	Argument	stderr		1191946	0					
ANR	1193181	Identifier	stderr		1191946	0					
ANR	1193182	Argument	"""onig_print_compiled_byte_code: undefined code %d\\n"""		1191946	1					
ANR	1193183	PrimaryExpression	"""onig_print_compiled_byte_code: undefined code %d\\n"""		1191946	0					
ANR	1193184	Argument	* -- bp		1191946	2					
ANR	1193185	UnaryOperationExpression	* -- bp		1191946	0					
ANR	1193186	UnaryOperator	*		1191946	0					
ANR	1193187	UnaryExpression	-- bp		1191946	1					
ANR	1193188	IncDec	--		1191946	0					
ANR	1193189	Identifier	bp		1191946	1					
ANR	1193190	ExpressionStatement	"fputs ( ""]"" , f )"	6086:2:140351:140364	1191946	10	True				
ANR	1193191	CallExpression	"fputs ( ""]"" , f )"		1191946	0					
ANR	1193192	Callee	fputs		1191946	0					
ANR	1193193	Identifier	fputs		1191946	0					
ANR	1193194	ArgumentList	"""]"""		1191946	1					
ANR	1193195	Argument	"""]"""		1191946	0					
ANR	1193196	PrimaryExpression	"""]"""		1191946	0					
ANR	1193197	Argument	f		1191946	1					
ANR	1193198	Identifier	f		1191946	0					
ANR	1193199	IfStatement	if ( nextp )		1191946	11					
ANR	1193200	Condition	nextp	6087:6:140372:140376	1191946	0	True				
ANR	1193201	Identifier	nextp		1191946	0					
ANR	1193202	ExpressionStatement	* nextp = bp	6087:13:140379:140390	1191946	1	True				
ANR	1193203	AssignmentExpression	* nextp = bp		1191946	0		=			
ANR	1193204	UnaryOperationExpression	* nextp		1191946	0					
ANR	1193205	UnaryOperator	*		1191946	0					
ANR	1193206	Identifier	nextp		1191946	1					
ANR	1193207	Identifier	bp		1191946	1					
ANR	1193208	ReturnType	extern void		1191946	1					
ANR	1193209	Identifier	onig_print_compiled_byte_code		1191946	2					
ANR	1193210	ParameterList	"FILE * f , UChar * bp , UChar * * nextp , OnigEncoding enc"		1191946	3					
ANR	1193211	Parameter	FILE * f	5847:30:134944:134950	1191946	0	True				
ANR	1193212	ParameterType	FILE *		1191946	0					
ANR	1193213	Identifier	f		1191946	1					
ANR	1193214	Parameter	UChar * bp	5847:39:134953:134961	1191946	1	True				
ANR	1193215	ParameterType	UChar *		1191946	0					
ANR	1193216	Identifier	bp		1191946	1					
ANR	1193217	Parameter	UChar * * nextp	5847:50:134964:134976	1191946	2	True				
ANR	1193218	ParameterType	UChar * *		1191946	0					
ANR	1193219	Identifier	nextp		1191946	1					
ANR	1193220	Parameter	OnigEncoding enc	5848:30:135009:135024	1191946	3	True				
ANR	1193221	ParameterType	OnigEncoding		1191946	0					
ANR	1193222	Identifier	enc		1191946	1					
ANR	1193223	CFGEntryNode	ENTRY		1191946		True				
ANR	1193224	CFGExitNode	EXIT		1191946		True				
ANR	1193225	Symbol	op2arg_type		1191946						
ANR	1193226	Symbol	SIZE_RELADDR		1191946						
ANR	1193227	Symbol	code		1191946						
ANR	1193228	Symbol	* ( ( RelAddrType * ) bp )		1191946						
ANR	1193229	Symbol	* bp ++		1191946						
ANR	1193230	Symbol	* cc		1191946						
ANR	1193231	Symbol	bp		1191946						
ANR	1193232	Symbol	SIZE_STATE_CHECK_NUM		1191946						
ANR	1193233	Symbol	arg_type		1191946						
ANR	1193234	Symbol	SIZE_MEMNUM		1191946						
ANR	1193235	Symbol	len		1191946						
ANR	1193236	Symbol	mem		1191946						
ANR	1193237	Symbol	* bp		1191946						
ANR	1193238	Symbol	SIZE_OPTION		1191946						
ANR	1193239	Symbol	op2name		1191946						
ANR	1193240	Symbol	enc		1191946						
ANR	1193241	Symbol	addr		1191946						
ANR	1193242	Symbol	scn		1191946						
ANR	1193243	Symbol	nextp		1191946						
ANR	1193244	Symbol	SIZE_BITSET		1191946						
ANR	1193245	Symbol	cc		1191946						
ANR	1193246	Symbol	level		1191946						
ANR	1193247	Symbol	f		1191946						
ANR	1193248	Symbol	ARG_SPECIAL		1191946						
ANR	1193249	Symbol	i		1191946						
ANR	1193250	Symbol	stderr		1191946						
ANR	1193251	Symbol	enclen		1191946						
ANR	1193252	Symbol	n		1191946						
ANR	1193253	Symbol	* ( ( OnigOptionType * ) bp )		1191946						
ANR	1193254	Symbol	* ( ( StateCheckNumType * ) bp )		1191946						
ANR	1193255	Symbol	cc -> bs		1191946						
ANR	1193256	Symbol	q		1191946						
ANR	1193257	Symbol	bitset_on_num		1191946						
ANR	1193258	Symbol	* -- bp		1191946						
ANR	1193259	Symbol	* ( ( MemNumType * ) bp )		1191946						
ANR	1193260	Symbol	mb_len		1191946						
ANR	1193261	Symbol	* nextp		1191946						
ANR	1193262	Symbol	option		1191946						
ANR	1193263	Function	print_compiled_byte_code_list	6090:0:140395:140810							
ANR	1193264	FunctionDef	"print_compiled_byte_code_list (FILE * f , regex_t * reg)"		1193263	0					
ANR	1193265	CompoundStatement		6092:0:140460:140810	1193263	0					
ANR	1193266	IdentifierDeclStatement	int ncode ;	6093:2:140464:140473	1193263	0	True				
ANR	1193267	IdentifierDecl	ncode		1193263	0					
ANR	1193268	IdentifierDeclType	int		1193263	0					
ANR	1193269	Identifier	ncode		1193263	1					
ANR	1193270	IdentifierDeclStatement	UChar * bp = reg -> p ;	6094:2:140477:140495	1193263	1	True				
ANR	1193271	IdentifierDecl	* bp = reg -> p		1193263	0					
ANR	1193272	IdentifierDeclType	UChar *		1193263	0					
ANR	1193273	Identifier	bp		1193263	1					
ANR	1193274	AssignmentExpression	* bp = reg -> p		1193263	2		=			
ANR	1193275	Identifier	bp		1193263	0					
ANR	1193276	PtrMemberAccess	reg -> p		1193263	1					
ANR	1193277	Identifier	reg		1193263	0					
ANR	1193278	Identifier	p		1193263	1					
ANR	1193279	IdentifierDeclStatement	UChar * end = reg -> p + reg -> used ;	6095:2:140499:140530	1193263	2	True				
ANR	1193280	IdentifierDecl	* end = reg -> p + reg -> used		1193263	0					
ANR	1193281	IdentifierDeclType	UChar *		1193263	0					
ANR	1193282	Identifier	end		1193263	1					
ANR	1193283	AssignmentExpression	* end = reg -> p + reg -> used		1193263	2		=			
ANR	1193284	Identifier	end		1193263	0					
ANR	1193285	AdditiveExpression	reg -> p + reg -> used		1193263	1		+			
ANR	1193286	PtrMemberAccess	reg -> p		1193263	0					
ANR	1193287	Identifier	reg		1193263	0					
ANR	1193288	Identifier	p		1193263	1					
ANR	1193289	PtrMemberAccess	reg -> used		1193263	1					
ANR	1193290	Identifier	reg		1193263	0					
ANR	1193291	Identifier	used		1193263	1					
ANR	1193292	ExpressionStatement	"fprintf ( f , ""code length: %d\\n"" , reg -> used )"	6097:2:140535:140577	1193263	3	True				
ANR	1193293	CallExpression	"fprintf ( f , ""code length: %d\\n"" , reg -> used )"		1193263	0					
ANR	1193294	Callee	fprintf		1193263	0					
ANR	1193295	Identifier	fprintf		1193263	0					
ANR	1193296	ArgumentList	f		1193263	1					
ANR	1193297	Argument	f		1193263	0					
ANR	1193298	Identifier	f		1193263	0					
ANR	1193299	Argument	"""code length: %d\\n"""		1193263	1					
ANR	1193300	PrimaryExpression	"""code length: %d\\n"""		1193263	0					
ANR	1193301	Argument	reg -> used		1193263	2					
ANR	1193302	PtrMemberAccess	reg -> used		1193263	0					
ANR	1193303	Identifier	reg		1193263	0					
ANR	1193304	Identifier	used		1193263	1					
ANR	1193305	ExpressionStatement	ncode = 0	6099:2:140582:140591	1193263	4	True				
ANR	1193306	AssignmentExpression	ncode = 0		1193263	0		=			
ANR	1193307	Identifier	ncode		1193263	0					
ANR	1193308	PrimaryExpression	0		1193263	1					
ANR	1193309	WhileStatement	while ( bp < end )		1193263	5					
ANR	1193310	Condition	bp < end	6100:9:140602:140609	1193263	0	True				
ANR	1193311	RelationalExpression	bp < end		1193263	0		<			
ANR	1193312	Identifier	bp		1193263	0					
ANR	1193313	Identifier	end		1193263	1					
ANR	1193314	CompoundStatement		9:19:151:151	1193263	1					
ANR	1193315	ExpressionStatement	ncode ++	6101:4:140618:140625	1193263	0	True				
ANR	1193316	PostIncDecOperationExpression	ncode ++		1193263	0					
ANR	1193317	Identifier	ncode		1193263	0					
ANR	1193318	IncDec	++		1193263	1					
ANR	1193319	IfStatement	if ( bp > reg -> p )		1193263	1					
ANR	1193320	Condition	bp > reg -> p	6102:8:140635:140645	1193263	0	True				
ANR	1193321	RelationalExpression	bp > reg -> p		1193263	0		>			
ANR	1193322	Identifier	bp		1193263	0					
ANR	1193323	PtrMemberAccess	reg -> p		1193263	1					
ANR	1193324	Identifier	reg		1193263	0					
ANR	1193325	Identifier	p		1193263	1					
ANR	1193326	CompoundStatement		11:21:187:187	1193263	1					
ANR	1193327	IfStatement	if ( ncode % 5 == 0 )		1193263	0					
ANR	1193328	Condition	ncode % 5 == 0	6103:10:140660:140673	1193263	0	True				
ANR	1193329	EqualityExpression	ncode % 5 == 0		1193263	0		==			
ANR	1193330	MultiplicativeExpression	ncode % 5		1193263	0		%			
ANR	1193331	Identifier	ncode		1193263	0					
ANR	1193332	PrimaryExpression	5		1193263	1					
ANR	1193333	PrimaryExpression	0		1193263	1					
ANR	1193334	ExpressionStatement	"fprintf ( f , ""\\n"" )"	6104:1:140677:140693	1193263	1	True				
ANR	1193335	CallExpression	"fprintf ( f , ""\\n"" )"		1193263	0					
ANR	1193336	Callee	fprintf		1193263	0					
ANR	1193337	Identifier	fprintf		1193263	0					
ANR	1193338	ArgumentList	f		1193263	1					
ANR	1193339	Argument	f		1193263	0					
ANR	1193340	Identifier	f		1193263	0					
ANR	1193341	Argument	"""\\n"""		1193263	1					
ANR	1193342	PrimaryExpression	"""\\n"""		1193263	0					
ANR	1193343	ElseStatement	else		1193263	0					
ANR	1193344	ExpressionStatement	"fputs ( "" "" , f )"	6106:1:140707:140720	1193263	0	True				
ANR	1193345	CallExpression	"fputs ( "" "" , f )"		1193263	0					
ANR	1193346	Callee	fputs		1193263	0					
ANR	1193347	Identifier	fputs		1193263	0					
ANR	1193348	ArgumentList	""" """		1193263	1					
ANR	1193349	Argument	""" """		1193263	0					
ANR	1193350	PrimaryExpression	""" """		1193263	0					
ANR	1193351	Argument	f		1193263	1					
ANR	1193352	Identifier	f		1193263	0					
ANR	1193353	ExpressionStatement	"onig_print_compiled_byte_code ( f , bp , & bp , reg -> enc )"	6108:4:140732:140783	1193263	2	True				
ANR	1193354	CallExpression	"onig_print_compiled_byte_code ( f , bp , & bp , reg -> enc )"		1193263	0					
ANR	1193355	Callee	onig_print_compiled_byte_code		1193263	0					
ANR	1193356	Identifier	onig_print_compiled_byte_code		1193263	0					
ANR	1193357	ArgumentList	f		1193263	1					
ANR	1193358	Argument	f		1193263	0					
ANR	1193359	Identifier	f		1193263	0					
ANR	1193360	Argument	bp		1193263	1					
ANR	1193361	Identifier	bp		1193263	0					
ANR	1193362	Argument	& bp		1193263	2					
ANR	1193363	UnaryOperationExpression	& bp		1193263	0					
ANR	1193364	UnaryOperator	&		1193263	0					
ANR	1193365	Identifier	bp		1193263	1					
ANR	1193366	Argument	reg -> enc		1193263	3					
ANR	1193367	PtrMemberAccess	reg -> enc		1193263	0					
ANR	1193368	Identifier	reg		1193263	0					
ANR	1193369	Identifier	enc		1193263	1					
ANR	1193370	ExpressionStatement	"fprintf ( f , ""\\n"" )"	6111:2:140792:140808	1193263	6	True				
ANR	1193371	CallExpression	"fprintf ( f , ""\\n"" )"		1193263	0					
ANR	1193372	Callee	fprintf		1193263	0					
ANR	1193373	Identifier	fprintf		1193263	0					
ANR	1193374	ArgumentList	f		1193263	1					
ANR	1193375	Argument	f		1193263	0					
ANR	1193376	Identifier	f		1193263	0					
ANR	1193377	Argument	"""\\n"""		1193263	1					
ANR	1193378	PrimaryExpression	"""\\n"""		1193263	0					
ANR	1193379	ReturnType	static void		1193263	1					
ANR	1193380	Identifier	print_compiled_byte_code_list		1193263	2					
ANR	1193381	ParameterList	"FILE * f , regex_t * reg"		1193263	3					
ANR	1193382	Parameter	FILE * f	6091:30:140437:140443	1193263	0	True				
ANR	1193383	ParameterType	FILE *		1193263	0					
ANR	1193384	Identifier	f		1193263	1					
ANR	1193385	Parameter	regex_t * reg	6091:39:140446:140457	1193263	1	True				
ANR	1193386	ParameterType	regex_t *		1193263	0					
ANR	1193387	Identifier	reg		1193263	1					
ANR	1193388	CFGEntryNode	ENTRY		1193263		True				
ANR	1193389	CFGExitNode	EXIT		1193263		True				
ANR	1193390	Symbol	reg		1193263						
ANR	1193391	Symbol	f		1193263						
ANR	1193392	Symbol	ncode		1193263						
ANR	1193393	Symbol	& bp		1193263						
ANR	1193394	Symbol	end		1193263						
ANR	1193395	Symbol	reg -> p		1193263						
ANR	1193396	Symbol	* reg		1193263						
ANR	1193397	Symbol	bp		1193263						
ANR	1193398	Symbol	reg -> used		1193263						
ANR	1193399	Symbol	reg -> enc		1193263						
ANR	1193400	Function	print_indent_tree	6114:0:140813:145106							
ANR	1193401	FunctionDef	"print_indent_tree (FILE * f , Node * node , int indent)"		1193400	0					
ANR	1193402	CompoundStatement		6116:0:140876:145106	1193400	0					
ANR	1193403	IdentifierDeclStatement	"int i , type ;"	6117:2:140880:140891	1193400	0	True				
ANR	1193404	IdentifierDecl	i		1193400	0					
ANR	1193405	IdentifierDeclType	int		1193400	0					
ANR	1193406	Identifier	i		1193400	1					
ANR	1193407	IdentifierDecl	type		1193400	1					
ANR	1193408	IdentifierDeclType	int		1193400	0					
ANR	1193409	Identifier	type		1193400	1					
ANR	1193410	IdentifierDeclStatement	int add = 3 ;	6118:2:140895:140906	1193400	1	True				
ANR	1193411	IdentifierDecl	add = 3		1193400	0					
ANR	1193412	IdentifierDeclType	int		1193400	0					
ANR	1193413	Identifier	add		1193400	1					
ANR	1193414	AssignmentExpression	add = 3		1193400	2		=			
ANR	1193415	Identifier	add		1193400	0					
ANR	1193416	PrimaryExpression	3		1193400	1					
ANR	1193417	IdentifierDeclStatement	UChar * p ;	6119:2:140910:140918	1193400	2	True				
ANR	1193418	IdentifierDecl	* p		1193400	0					
ANR	1193419	IdentifierDeclType	UChar *		1193400	0					
ANR	1193420	Identifier	p		1193400	1					
ANR	1193421	ExpressionStatement	"Indent ( f , indent )"	6121:2:140923:140940	1193400	3	True				
ANR	1193422	CallExpression	"Indent ( f , indent )"		1193400	0					
ANR	1193423	Callee	Indent		1193400	0					
ANR	1193424	Identifier	Indent		1193400	0					
ANR	1193425	ArgumentList	f		1193400	1					
ANR	1193426	Argument	f		1193400	0					
ANR	1193427	Identifier	f		1193400	0					
ANR	1193428	Argument	indent		1193400	1					
ANR	1193429	Identifier	indent		1193400	0					
ANR	1193430	IfStatement	if ( IS_NULL ( node ) )		1193400	4					
ANR	1193431	Condition	IS_NULL ( node )	6122:6:140948:140960	1193400	0	True				
ANR	1193432	CallExpression	IS_NULL ( node )		1193400	0					
ANR	1193433	Callee	IS_NULL		1193400	0					
ANR	1193434	Identifier	IS_NULL		1193400	0					
ANR	1193435	ArgumentList	node		1193400	1					
ANR	1193436	Argument	node		1193400	0					
ANR	1193437	Identifier	node		1193400	0					
ANR	1193438	CompoundStatement		7:21:86:86	1193400	1					
ANR	1193439	ExpressionStatement	"fprintf ( f , ""ERROR: null node!!!\\n"" )"	6123:4:140969:141004	1193400	0	True				
ANR	1193440	CallExpression	"fprintf ( f , ""ERROR: null node!!!\\n"" )"		1193400	0					
ANR	1193441	Callee	fprintf		1193400	0					
ANR	1193442	Identifier	fprintf		1193400	0					
ANR	1193443	ArgumentList	f		1193400	1					
ANR	1193444	Argument	f		1193400	0					
ANR	1193445	Identifier	f		1193400	0					
ANR	1193446	Argument	"""ERROR: null node!!!\\n"""		1193400	1					
ANR	1193447	PrimaryExpression	"""ERROR: null node!!!\\n"""		1193400	0					
ANR	1193448	ExpressionStatement	exit ( 0 )	6124:4:141010:141018	1193400	1	True				
ANR	1193449	CallExpression	exit ( 0 )		1193400	0					
ANR	1193450	Callee	exit		1193400	0					
ANR	1193451	Identifier	exit		1193400	0					
ANR	1193452	ArgumentList	0		1193400	1					
ANR	1193453	Argument	0		1193400	0					
ANR	1193454	PrimaryExpression	0		1193400	0					
ANR	1193455	ExpressionStatement	type = NTYPE ( node )	6127:2:141027:141045	1193400	5	True				
ANR	1193456	AssignmentExpression	type = NTYPE ( node )		1193400	0		=			
ANR	1193457	Identifier	type		1193400	0					
ANR	1193458	CallExpression	NTYPE ( node )		1193400	1					
ANR	1193459	Callee	NTYPE		1193400	0					
ANR	1193460	Identifier	NTYPE		1193400	0					
ANR	1193461	ArgumentList	node		1193400	1					
ANR	1193462	Argument	node		1193400	0					
ANR	1193463	Identifier	node		1193400	0					
ANR	1193464	SwitchStatement	switch ( type )		1193400	6					
ANR	1193465	Condition	type	6128:10:141057:141060	1193400	0	True				
ANR	1193466	Identifier	type		1193400	0					
ANR	1193467	CompoundStatement		13:16:186:186	1193400	1					
ANR	1193468	Label	case NT_LIST :	6129:2:141067:141079	1193400	0	True				
ANR	1193469	Identifier	NT_LIST		1193400	0					
ANR	1193470	Label	case NT_ALT :	6130:2:141083:141094	1193400	1	True				
ANR	1193471	Identifier	NT_ALT		1193400	0					
ANR	1193472	IfStatement	if ( NTYPE ( node ) == NT_LIST )		1193400	2					
ANR	1193473	Condition	NTYPE ( node ) == NT_LIST	6131:8:141104:141125	1193400	0	True				
ANR	1193474	EqualityExpression	NTYPE ( node ) == NT_LIST		1193400	0		==			
ANR	1193475	CallExpression	NTYPE ( node )		1193400	0					
ANR	1193476	Callee	NTYPE		1193400	0					
ANR	1193477	Identifier	NTYPE		1193400	0					
ANR	1193478	ArgumentList	node		1193400	1					
ANR	1193479	Argument	node		1193400	0					
ANR	1193480	Identifier	node		1193400	0					
ANR	1193481	Identifier	NT_LIST		1193400	1					
ANR	1193482	ExpressionStatement	"fprintf ( f , ""<list:%x>\\n"" , ( int ) node )"	6132:6:141134:141171	1193400	1	True				
ANR	1193483	CallExpression	"fprintf ( f , ""<list:%x>\\n"" , ( int ) node )"		1193400	0					
ANR	1193484	Callee	fprintf		1193400	0					
ANR	1193485	Identifier	fprintf		1193400	0					
ANR	1193486	ArgumentList	f		1193400	1					
ANR	1193487	Argument	f		1193400	0					
ANR	1193488	Identifier	f		1193400	0					
ANR	1193489	Argument	"""<list:%x>\\n"""		1193400	1					
ANR	1193490	PrimaryExpression	"""<list:%x>\\n"""		1193400	0					
ANR	1193491	Argument	( int ) node		1193400	2					
ANR	1193492	CastExpression	( int ) node		1193400	0					
ANR	1193493	CastTarget	int		1193400	0					
ANR	1193494	Identifier	node		1193400	1					
ANR	1193495	ElseStatement	else		1193400	0					
ANR	1193496	ExpressionStatement	"fprintf ( f , ""<alt:%x>\\n"" , ( int ) node )"	6134:6:141188:141224	1193400	0	True				
ANR	1193497	CallExpression	"fprintf ( f , ""<alt:%x>\\n"" , ( int ) node )"		1193400	0					
ANR	1193498	Callee	fprintf		1193400	0					
ANR	1193499	Identifier	fprintf		1193400	0					
ANR	1193500	ArgumentList	f		1193400	1					
ANR	1193501	Argument	f		1193400	0					
ANR	1193502	Identifier	f		1193400	0					
ANR	1193503	Argument	"""<alt:%x>\\n"""		1193400	1					
ANR	1193504	PrimaryExpression	"""<alt:%x>\\n"""		1193400	0					
ANR	1193505	Argument	( int ) node		1193400	2					
ANR	1193506	CastExpression	( int ) node		1193400	0					
ANR	1193507	CastTarget	int		1193400	0					
ANR	1193508	Identifier	node		1193400	1					
ANR	1193509	ExpressionStatement	"print_indent_tree ( f , NCAR ( node ) , indent + add )"	6136:4:141231:141277	1193400	3	True				
ANR	1193510	CallExpression	"print_indent_tree ( f , NCAR ( node ) , indent + add )"		1193400	0					
ANR	1193511	Callee	print_indent_tree		1193400	0					
ANR	1193512	Identifier	print_indent_tree		1193400	0					
ANR	1193513	ArgumentList	f		1193400	1					
ANR	1193514	Argument	f		1193400	0					
ANR	1193515	Identifier	f		1193400	0					
ANR	1193516	Argument	NCAR ( node )		1193400	1					
ANR	1193517	CallExpression	NCAR ( node )		1193400	0					
ANR	1193518	Callee	NCAR		1193400	0					
ANR	1193519	Identifier	NCAR		1193400	0					
ANR	1193520	ArgumentList	node		1193400	1					
ANR	1193521	Argument	node		1193400	0					
ANR	1193522	Identifier	node		1193400	0					
ANR	1193523	Argument	indent + add		1193400	2					
ANR	1193524	AdditiveExpression	indent + add		1193400	0		+			
ANR	1193525	Identifier	indent		1193400	0					
ANR	1193526	Identifier	add		1193400	1					
ANR	1193527	WhileStatement	while ( IS_NOT_NULL ( node = NCDR ( node ) ) )		1193400	4					
ANR	1193528	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	6137:11:141290:141319	1193400	0	True				
ANR	1193529	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1193400	0					
ANR	1193530	Callee	IS_NOT_NULL		1193400	0					
ANR	1193531	Identifier	IS_NOT_NULL		1193400	0					
ANR	1193532	ArgumentList	node = NCDR ( node )		1193400	1					
ANR	1193533	Argument	node = NCDR ( node )		1193400	0					
ANR	1193534	AssignmentExpression	node = NCDR ( node )		1193400	0		=			
ANR	1193535	Identifier	node		1193400	0					
ANR	1193536	CallExpression	NCDR ( node )		1193400	1					
ANR	1193537	Callee	NCDR		1193400	0					
ANR	1193538	Identifier	NCDR		1193400	0					
ANR	1193539	ArgumentList	node		1193400	1					
ANR	1193540	Argument	node		1193400	0					
ANR	1193541	Identifier	node		1193400	0					
ANR	1193542	CompoundStatement		22:43:445:445	1193400	1					
ANR	1193543	IfStatement	if ( NTYPE ( node ) != type )		1193400	0					
ANR	1193544	Condition	NTYPE ( node ) != type	6138:10:141334:141352	1193400	0	True				
ANR	1193545	EqualityExpression	NTYPE ( node ) != type		1193400	0		!=			
ANR	1193546	CallExpression	NTYPE ( node )		1193400	0					
ANR	1193547	Callee	NTYPE		1193400	0					
ANR	1193548	Identifier	NTYPE		1193400	0					
ANR	1193549	ArgumentList	node		1193400	1					
ANR	1193550	Argument	node		1193400	0					
ANR	1193551	Identifier	node		1193400	0					
ANR	1193552	Identifier	type		1193400	1					
ANR	1193553	CompoundStatement		23:31:478:478	1193400	1					
ANR	1193554	ExpressionStatement	"fprintf ( f , ""ERROR: list/alt right is not a cons. %d\\n"" , NTYPE ( node ) )"	6139:1:141358:141426	1193400	0	True				
ANR	1193555	CallExpression	"fprintf ( f , ""ERROR: list/alt right is not a cons. %d\\n"" , NTYPE ( node ) )"		1193400	0					
ANR	1193556	Callee	fprintf		1193400	0					
ANR	1193557	Identifier	fprintf		1193400	0					
ANR	1193558	ArgumentList	f		1193400	1					
ANR	1193559	Argument	f		1193400	0					
ANR	1193560	Identifier	f		1193400	0					
ANR	1193561	Argument	"""ERROR: list/alt right is not a cons. %d\\n"""		1193400	1					
ANR	1193562	PrimaryExpression	"""ERROR: list/alt right is not a cons. %d\\n"""		1193400	0					
ANR	1193563	Argument	NTYPE ( node )		1193400	2					
ANR	1193564	CallExpression	NTYPE ( node )		1193400	0					
ANR	1193565	Callee	NTYPE		1193400	0					
ANR	1193566	Identifier	NTYPE		1193400	0					
ANR	1193567	ArgumentList	node		1193400	1					
ANR	1193568	Argument	node		1193400	0					
ANR	1193569	Identifier	node		1193400	0					
ANR	1193570	ExpressionStatement	exit ( 0 )	6140:1:141429:141436	1193400	1	True				
ANR	1193571	CallExpression	exit ( 0 )		1193400	0					
ANR	1193572	Callee	exit		1193400	0					
ANR	1193573	Identifier	exit		1193400	0					
ANR	1193574	ArgumentList	0		1193400	1					
ANR	1193575	Argument	0		1193400	0					
ANR	1193576	PrimaryExpression	0		1193400	0					
ANR	1193577	ExpressionStatement	"print_indent_tree ( f , NCAR ( node ) , indent + add )"	6142:6:141452:141498	1193400	1	True				
ANR	1193578	CallExpression	"print_indent_tree ( f , NCAR ( node ) , indent + add )"		1193400	0					
ANR	1193579	Callee	print_indent_tree		1193400	0					
ANR	1193580	Identifier	print_indent_tree		1193400	0					
ANR	1193581	ArgumentList	f		1193400	1					
ANR	1193582	Argument	f		1193400	0					
ANR	1193583	Identifier	f		1193400	0					
ANR	1193584	Argument	NCAR ( node )		1193400	1					
ANR	1193585	CallExpression	NCAR ( node )		1193400	0					
ANR	1193586	Callee	NCAR		1193400	0					
ANR	1193587	Identifier	NCAR		1193400	0					
ANR	1193588	ArgumentList	node		1193400	1					
ANR	1193589	Argument	node		1193400	0					
ANR	1193590	Identifier	node		1193400	0					
ANR	1193591	Argument	indent + add		1193400	2					
ANR	1193592	AdditiveExpression	indent + add		1193400	0		+			
ANR	1193593	Identifier	indent		1193400	0					
ANR	1193594	Identifier	add		1193400	1					
ANR	1193595	BreakStatement	break ;	6144:4:141510:141515	1193400	5	True				
ANR	1193596	Label	case NT_STR :	6146:2:141520:141531	1193400	6	True				
ANR	1193597	Identifier	NT_STR		1193400	0					
ANR	1193598	ExpressionStatement	"fprintf ( f , ""<string%s:%x>"" , ( NSTRING_IS_RAW ( node ) ? ""-raw"" : """" ) , ( int ) node )"	6147:4:141537:141619	1193400	7	True				
ANR	1193599	CallExpression	"fprintf ( f , ""<string%s:%x>"" , ( NSTRING_IS_RAW ( node ) ? ""-raw"" : """" ) , ( int ) node )"		1193400	0					
ANR	1193600	Callee	fprintf		1193400	0					
ANR	1193601	Identifier	fprintf		1193400	0					
ANR	1193602	ArgumentList	f		1193400	1					
ANR	1193603	Argument	f		1193400	0					
ANR	1193604	Identifier	f		1193400	0					
ANR	1193605	Argument	"""<string%s:%x>"""		1193400	1					
ANR	1193606	PrimaryExpression	"""<string%s:%x>"""		1193400	0					
ANR	1193607	Argument	"NSTRING_IS_RAW ( node ) ? ""-raw"" : """""		1193400	2					
ANR	1193608	ConditionalExpression	"NSTRING_IS_RAW ( node ) ? ""-raw"" : """""		1193400	0					
ANR	1193609	Condition	NSTRING_IS_RAW ( node )		1193400	0					
ANR	1193610	CallExpression	NSTRING_IS_RAW ( node )		1193400	0					
ANR	1193611	Callee	NSTRING_IS_RAW		1193400	0					
ANR	1193612	Identifier	NSTRING_IS_RAW		1193400	0					
ANR	1193613	ArgumentList	node		1193400	1					
ANR	1193614	Argument	node		1193400	0					
ANR	1193615	Identifier	node		1193400	0					
ANR	1193616	PrimaryExpression	"""-raw"""		1193400	1					
ANR	1193617	PrimaryExpression	""""""		1193400	2					
ANR	1193618	Argument	( int ) node		1193400	3					
ANR	1193619	CastExpression	( int ) node		1193400	0					
ANR	1193620	CastTarget	int		1193400	0					
ANR	1193621	Identifier	node		1193400	1					
ANR	1193622	ForStatement	for ( p = NSTR ( node ) -> s ; p < NSTR ( node ) -> end ; p ++ )		1193400	8					
ANR	1193623	ForInit	p = NSTR ( node ) -> s ;	6149:9:141630:141647	1193400	0	True				
ANR	1193624	AssignmentExpression	p = NSTR ( node ) -> s		1193400	0		=			
ANR	1193625	Identifier	p		1193400	0					
ANR	1193626	PtrMemberAccess	NSTR ( node ) -> s		1193400	1					
ANR	1193627	CallExpression	NSTR ( node )		1193400	0					
ANR	1193628	Callee	NSTR		1193400	0					
ANR	1193629	Identifier	NSTR		1193400	0					
ANR	1193630	ArgumentList	node		1193400	1					
ANR	1193631	Argument	node		1193400	0					
ANR	1193632	Identifier	node		1193400	0					
ANR	1193633	Identifier	s		1193400	1					
ANR	1193634	Condition	p < NSTR ( node ) -> end	6149:28:141649:141667	1193400	1	True				
ANR	1193635	RelationalExpression	p < NSTR ( node ) -> end		1193400	0		<			
ANR	1193636	Identifier	p		1193400	0					
ANR	1193637	PtrMemberAccess	NSTR ( node ) -> end		1193400	1					
ANR	1193638	CallExpression	NSTR ( node )		1193400	0					
ANR	1193639	Callee	NSTR		1193400	0					
ANR	1193640	Identifier	NSTR		1193400	0					
ANR	1193641	ArgumentList	node		1193400	1					
ANR	1193642	Argument	node		1193400	0					
ANR	1193643	Identifier	node		1193400	0					
ANR	1193644	Identifier	end		1193400	1					
ANR	1193645	PostIncDecOperationExpression	p ++	6149:49:141670:141672	1193400	2	True				
ANR	1193646	Identifier	p		1193400	0					
ANR	1193647	IncDec	++		1193400	1					
ANR	1193648	CompoundStatement		34:54:798:798	1193400	3					
ANR	1193649	IfStatement	if ( * p >= 0x20 && * p < 0x7f )		1193400	0					
ANR	1193650	Condition	* p >= 0x20 && * p < 0x7f	6150:10:141687:141709	1193400	0	True				
ANR	1193651	AndExpression	* p >= 0x20 && * p < 0x7f		1193400	0		&&			
ANR	1193652	RelationalExpression	* p >= 0x20		1193400	0		>=			
ANR	1193653	UnaryOperationExpression	* p		1193400	0					
ANR	1193654	UnaryOperator	*		1193400	0					
ANR	1193655	Identifier	p		1193400	1					
ANR	1193656	PrimaryExpression	0x20		1193400	1					
ANR	1193657	RelationalExpression	* p < 0x7f		1193400	1		<			
ANR	1193658	UnaryOperationExpression	* p		1193400	0					
ANR	1193659	UnaryOperator	*		1193400	0					
ANR	1193660	Identifier	p		1193400	1					
ANR	1193661	PrimaryExpression	0x7f		1193400	1					
ANR	1193662	ExpressionStatement	"fputc ( * p , f )"	6151:1:141713:141725	1193400	1	True				
ANR	1193663	CallExpression	"fputc ( * p , f )"		1193400	0					
ANR	1193664	Callee	fputc		1193400	0					
ANR	1193665	Identifier	fputc		1193400	0					
ANR	1193666	ArgumentList	* p		1193400	1					
ANR	1193667	Argument	* p		1193400	0					
ANR	1193668	UnaryOperationExpression	* p		1193400	0					
ANR	1193669	UnaryOperator	*		1193400	0					
ANR	1193670	Identifier	p		1193400	1					
ANR	1193671	Argument	f		1193400	1					
ANR	1193672	Identifier	f		1193400	0					
ANR	1193673	ElseStatement	else		1193400	0					
ANR	1193674	CompoundStatement		37:11:861:861	1193400	0					
ANR	1193675	ExpressionStatement	"fprintf ( f , "" 0x%02x"" , * p )"	6153:1:141741:141766	1193400	0	True				
ANR	1193676	CallExpression	"fprintf ( f , "" 0x%02x"" , * p )"		1193400	0					
ANR	1193677	Callee	fprintf		1193400	0					
ANR	1193678	Identifier	fprintf		1193400	0					
ANR	1193679	ArgumentList	f		1193400	1					
ANR	1193680	Argument	f		1193400	0					
ANR	1193681	Identifier	f		1193400	0					
ANR	1193682	Argument	""" 0x%02x"""		1193400	1					
ANR	1193683	PrimaryExpression	""" 0x%02x"""		1193400	0					
ANR	1193684	Argument	* p		1193400	2					
ANR	1193685	UnaryOperationExpression	* p		1193400	0					
ANR	1193686	UnaryOperator	*		1193400	0					
ANR	1193687	Identifier	p		1193400	1					
ANR	1193688	BreakStatement	break ;	6156:4:141786:141791	1193400	9	True				
ANR	1193689	Label	case NT_CCLASS :	6158:2:141796:141810	1193400	10	True				
ANR	1193690	Identifier	NT_CCLASS		1193400	0					
ANR	1193691	ExpressionStatement	"fprintf ( f , ""<cclass:%x>"" , ( int ) node )"	6159:4:141816:141853	1193400	11	True				
ANR	1193692	CallExpression	"fprintf ( f , ""<cclass:%x>"" , ( int ) node )"		1193400	0					
ANR	1193693	Callee	fprintf		1193400	0					
ANR	1193694	Identifier	fprintf		1193400	0					
ANR	1193695	ArgumentList	f		1193400	1					
ANR	1193696	Argument	f		1193400	0					
ANR	1193697	Identifier	f		1193400	0					
ANR	1193698	Argument	"""<cclass:%x>"""		1193400	1					
ANR	1193699	PrimaryExpression	"""<cclass:%x>"""		1193400	0					
ANR	1193700	Argument	( int ) node		1193400	2					
ANR	1193701	CastExpression	( int ) node		1193400	0					
ANR	1193702	CastTarget	int		1193400	0					
ANR	1193703	Identifier	node		1193400	1					
ANR	1193704	IfStatement	if ( IS_NCCLASS_NOT ( NCCLASS ( node ) ) )		1193400	12					
ANR	1193705	Condition	IS_NCCLASS_NOT ( NCCLASS ( node ) )	6160:8:141863:141891	1193400	0	True				
ANR	1193706	CallExpression	IS_NCCLASS_NOT ( NCCLASS ( node ) )		1193400	0					
ANR	1193707	Callee	IS_NCCLASS_NOT		1193400	0					
ANR	1193708	Identifier	IS_NCCLASS_NOT		1193400	0					
ANR	1193709	ArgumentList	NCCLASS ( node )		1193400	1					
ANR	1193710	Argument	NCCLASS ( node )		1193400	0					
ANR	1193711	CallExpression	NCCLASS ( node )		1193400	0					
ANR	1193712	Callee	NCCLASS		1193400	0					
ANR	1193713	Identifier	NCCLASS		1193400	0					
ANR	1193714	ArgumentList	node		1193400	1					
ANR	1193715	Argument	node		1193400	0					
ANR	1193716	Identifier	node		1193400	0					
ANR	1193717	ExpressionStatement	"fputs ( "" not"" , f )"	6160:39:141894:141910	1193400	1	True				
ANR	1193718	CallExpression	"fputs ( "" not"" , f )"		1193400	0					
ANR	1193719	Callee	fputs		1193400	0					
ANR	1193720	Identifier	fputs		1193400	0					
ANR	1193721	ArgumentList	""" not"""		1193400	1					
ANR	1193722	Argument	""" not"""		1193400	0					
ANR	1193723	PrimaryExpression	""" not"""		1193400	0					
ANR	1193724	Argument	f		1193400	1					
ANR	1193725	Identifier	f		1193400	0					
ANR	1193726	IfStatement	if ( NCCLASS ( node ) -> mbuf )		1193400	13					
ANR	1193727	Condition	NCCLASS ( node ) -> mbuf	6161:8:141920:141938	1193400	0	True				
ANR	1193728	PtrMemberAccess	NCCLASS ( node ) -> mbuf		1193400	0					
ANR	1193729	CallExpression	NCCLASS ( node )		1193400	0					
ANR	1193730	Callee	NCCLASS		1193400	0					
ANR	1193731	Identifier	NCCLASS		1193400	0					
ANR	1193732	ArgumentList	node		1193400	1					
ANR	1193733	Argument	node		1193400	0					
ANR	1193734	Identifier	node		1193400	0					
ANR	1193735	Identifier	mbuf		1193400	1					
ANR	1193736	CompoundStatement		47:6:1072:1104	1193400	1					
ANR	1193737	IdentifierDeclStatement	BBuf * bbuf = NCCLASS ( node ) -> mbuf ;	6162:6:141949:141981	1193400	0	True				
ANR	1193738	IdentifierDecl	* bbuf = NCCLASS ( node ) -> mbuf		1193400	0					
ANR	1193739	IdentifierDeclType	BBuf *		1193400	0					
ANR	1193740	Identifier	bbuf		1193400	1					
ANR	1193741	AssignmentExpression	* bbuf = NCCLASS ( node ) -> mbuf		1193400	2		=			
ANR	1193742	Identifier	bbuf		1193400	0					
ANR	1193743	PtrMemberAccess	NCCLASS ( node ) -> mbuf		1193400	1					
ANR	1193744	CallExpression	NCCLASS ( node )		1193400	0					
ANR	1193745	Callee	NCCLASS		1193400	0					
ANR	1193746	Identifier	NCCLASS		1193400	0					
ANR	1193747	ArgumentList	node		1193400	1					
ANR	1193748	Argument	node		1193400	0					
ANR	1193749	Identifier	node		1193400	0					
ANR	1193750	Identifier	mbuf		1193400	1					
ANR	1193751	ForStatement	for ( i = 0 ; i < bbuf -> used ; i ++ )		1193400	1					
ANR	1193752	ForInit	i = 0 ;	6163:11:141994:141999	1193400	0	True				
ANR	1193753	AssignmentExpression	i = 0		1193400	0		=			
ANR	1193754	Identifier	i		1193400	0					
ANR	1193755	PrimaryExpression	0		1193400	1					
ANR	1193756	Condition	i < bbuf -> used	6163:18:142001:142014	1193400	1	True				
ANR	1193757	RelationalExpression	i < bbuf -> used		1193400	0		<			
ANR	1193758	Identifier	i		1193400	0					
ANR	1193759	PtrMemberAccess	bbuf -> used		1193400	1					
ANR	1193760	Identifier	bbuf		1193400	0					
ANR	1193761	Identifier	used		1193400	1					
ANR	1193762	PostIncDecOperationExpression	i ++	6163:34:142017:142019	1193400	2	True				
ANR	1193763	Identifier	i		1193400	0					
ANR	1193764	IncDec	++		1193400	1					
ANR	1193765	CompoundStatement		48:39:1145:1145	1193400	3					
ANR	1193766	IfStatement	if ( i > 0 )		1193400	0					
ANR	1193767	Condition	i > 0	6164:5:142029:142033	1193400	0	True				
ANR	1193768	RelationalExpression	i > 0		1193400	0		>			
ANR	1193769	Identifier	i		1193400	0					
ANR	1193770	PrimaryExpression	0		1193400	1					
ANR	1193771	ExpressionStatement	"fprintf ( f , "","" )"	6164:12:142036:142051	1193400	1	True				
ANR	1193772	CallExpression	"fprintf ( f , "","" )"		1193400	0					
ANR	1193773	Callee	fprintf		1193400	0					
ANR	1193774	Identifier	fprintf		1193400	0					
ANR	1193775	ArgumentList	f		1193400	1					
ANR	1193776	Argument	f		1193400	0					
ANR	1193777	Identifier	f		1193400	0					
ANR	1193778	Argument	""","""		1193400	1					
ANR	1193779	PrimaryExpression	""","""		1193400	0					
ANR	1193780	ExpressionStatement	"fprintf ( f , ""%0x"" , bbuf -> p [ i ] )"	6165:1:142054:142083	1193400	1	True				
ANR	1193781	CallExpression	"fprintf ( f , ""%0x"" , bbuf -> p [ i ] )"		1193400	0					
ANR	1193782	Callee	fprintf		1193400	0					
ANR	1193783	Identifier	fprintf		1193400	0					
ANR	1193784	ArgumentList	f		1193400	1					
ANR	1193785	Argument	f		1193400	0					
ANR	1193786	Identifier	f		1193400	0					
ANR	1193787	Argument	"""%0x"""		1193400	1					
ANR	1193788	PrimaryExpression	"""%0x"""		1193400	0					
ANR	1193789	Argument	bbuf -> p [ i ]		1193400	2					
ANR	1193790	ArrayIndexing	bbuf -> p [ i ]		1193400	0					
ANR	1193791	PtrMemberAccess	bbuf -> p		1193400	0					
ANR	1193792	Identifier	bbuf		1193400	0					
ANR	1193793	Identifier	p		1193400	1					
ANR	1193794	Identifier	i		1193400	1					
ANR	1193795	BreakStatement	break ;	6168:4:142103:142108	1193400	14	True				
ANR	1193796	Label	case NT_CTYPE :	6170:2:142113:142126	1193400	15	True				
ANR	1193797	Identifier	NT_CTYPE		1193400	0					
ANR	1193798	ExpressionStatement	"fprintf ( f , ""<ctype:%x> "" , ( int ) node )"	6171:4:142132:142169	1193400	16	True				
ANR	1193799	CallExpression	"fprintf ( f , ""<ctype:%x> "" , ( int ) node )"		1193400	0					
ANR	1193800	Callee	fprintf		1193400	0					
ANR	1193801	Identifier	fprintf		1193400	0					
ANR	1193802	ArgumentList	f		1193400	1					
ANR	1193803	Argument	f		1193400	0					
ANR	1193804	Identifier	f		1193400	0					
ANR	1193805	Argument	"""<ctype:%x> """		1193400	1					
ANR	1193806	PrimaryExpression	"""<ctype:%x> """		1193400	0					
ANR	1193807	Argument	( int ) node		1193400	2					
ANR	1193808	CastExpression	( int ) node		1193400	0					
ANR	1193809	CastTarget	int		1193400	0					
ANR	1193810	Identifier	node		1193400	1					
ANR	1193811	SwitchStatement	switch ( NCTYPE ( node ) -> ctype )		1193400	17					
ANR	1193812	Condition	NCTYPE ( node ) -> ctype	6172:12:142183:142201	1193400	0	True				
ANR	1193813	PtrMemberAccess	NCTYPE ( node ) -> ctype		1193400	0					
ANR	1193814	CallExpression	NCTYPE ( node )		1193400	0					
ANR	1193815	Callee	NCTYPE		1193400	0					
ANR	1193816	Identifier	NCTYPE		1193400	0					
ANR	1193817	ArgumentList	node		1193400	1					
ANR	1193818	Argument	node		1193400	0					
ANR	1193819	Identifier	node		1193400	0					
ANR	1193820	Identifier	ctype		1193400	1					
ANR	1193821	CompoundStatement		57:33:1327:1327	1193400	1					
ANR	1193822	Label	case ONIGENC_CTYPE_WORD :	6173:4:142210:142233	1193400	0	True				
ANR	1193823	Identifier	ONIGENC_CTYPE_WORD		1193400	0					
ANR	1193824	IfStatement	if ( NCTYPE ( node ) -> not != 0 )		1193400	1					
ANR	1193825	Condition	NCTYPE ( node ) -> not != 0	6174:10:142245:142266	1193400	0	True				
ANR	1193826	EqualityExpression	NCTYPE ( node ) -> not != 0		1193400	0		!=			
ANR	1193827	PtrMemberAccess	NCTYPE ( node ) -> not		1193400	0					
ANR	1193828	CallExpression	NCTYPE ( node )		1193400	0					
ANR	1193829	Callee	NCTYPE		1193400	0					
ANR	1193830	Identifier	NCTYPE		1193400	0					
ANR	1193831	ArgumentList	node		1193400	1					
ANR	1193832	Argument	node		1193400	0					
ANR	1193833	Identifier	node		1193400	0					
ANR	1193834	Identifier	not		1193400	1					
ANR	1193835	PrimaryExpression	0		1193400	1					
ANR	1193836	ExpressionStatement	"fputs ( ""not word"" , f )"	6175:1:142270:142296	1193400	1	True				
ANR	1193837	CallExpression	"fputs ( ""not word"" , f )"		1193400	0					
ANR	1193838	Callee	fputs		1193400	0					
ANR	1193839	Identifier	fputs		1193400	0					
ANR	1193840	ArgumentList	"""not word"""		1193400	1					
ANR	1193841	Argument	"""not word"""		1193400	0					
ANR	1193842	PrimaryExpression	"""not word"""		1193400	0					
ANR	1193843	Argument	f		1193400	1					
ANR	1193844	Identifier	f		1193400	0					
ANR	1193845	ElseStatement	else		1193400	0					
ANR	1193846	ExpressionStatement	"fputs ( ""word"" , f )"	6177:1:142310:142336	1193400	0	True				
ANR	1193847	CallExpression	"fputs ( ""word"" , f )"		1193400	0					
ANR	1193848	Callee	fputs		1193400	0					
ANR	1193849	Identifier	fputs		1193400	0					
ANR	1193850	ArgumentList	"""word"""		1193400	1					
ANR	1193851	Argument	"""word"""		1193400	0					
ANR	1193852	PrimaryExpression	"""word"""		1193400	0					
ANR	1193853	Argument	f		1193400	1					
ANR	1193854	Identifier	f		1193400	0					
ANR	1193855	BreakStatement	break ;	6178:6:142344:142349	1193400	2	True				
ANR	1193856	Label	default :	6180:4:142356:142363	1193400	3	True				
ANR	1193857	Identifier	default		1193400	0					
ANR	1193858	ExpressionStatement	"fprintf ( f , ""ERROR: undefined ctype.\\n"" )"	6181:6:142371:142410	1193400	4	True				
ANR	1193859	CallExpression	"fprintf ( f , ""ERROR: undefined ctype.\\n"" )"		1193400	0					
ANR	1193860	Callee	fprintf		1193400	0					
ANR	1193861	Identifier	fprintf		1193400	0					
ANR	1193862	ArgumentList	f		1193400	1					
ANR	1193863	Argument	f		1193400	0					
ANR	1193864	Identifier	f		1193400	0					
ANR	1193865	Argument	"""ERROR: undefined ctype.\\n"""		1193400	1					
ANR	1193866	PrimaryExpression	"""ERROR: undefined ctype.\\n"""		1193400	0					
ANR	1193867	ExpressionStatement	exit ( 0 )	6182:6:142418:142425	1193400	5	True				
ANR	1193868	CallExpression	exit ( 0 )		1193400	0					
ANR	1193869	Callee	exit		1193400	0					
ANR	1193870	Identifier	exit		1193400	0					
ANR	1193871	ArgumentList	0		1193400	1					
ANR	1193872	Argument	0		1193400	0					
ANR	1193873	PrimaryExpression	0		1193400	0					
ANR	1193874	BreakStatement	break ;	6184:4:142437:142442	1193400	18	True				
ANR	1193875	Label	case NT_CANY :	6186:2:142447:142459	1193400	19	True				
ANR	1193876	Identifier	NT_CANY		1193400	0					
ANR	1193877	ExpressionStatement	"fprintf ( f , ""<anychar:%x>"" , ( int ) node )"	6187:4:142465:142503	1193400	20	True				
ANR	1193878	CallExpression	"fprintf ( f , ""<anychar:%x>"" , ( int ) node )"		1193400	0					
ANR	1193879	Callee	fprintf		1193400	0					
ANR	1193880	Identifier	fprintf		1193400	0					
ANR	1193881	ArgumentList	f		1193400	1					
ANR	1193882	Argument	f		1193400	0					
ANR	1193883	Identifier	f		1193400	0					
ANR	1193884	Argument	"""<anychar:%x>"""		1193400	1					
ANR	1193885	PrimaryExpression	"""<anychar:%x>"""		1193400	0					
ANR	1193886	Argument	( int ) node		1193400	2					
ANR	1193887	CastExpression	( int ) node		1193400	0					
ANR	1193888	CastTarget	int		1193400	0					
ANR	1193889	Identifier	node		1193400	1					
ANR	1193890	BreakStatement	break ;	6188:4:142509:142514	1193400	21	True				
ANR	1193891	Label	case NT_ANCHOR :	6190:2:142519:142533	1193400	22	True				
ANR	1193892	Identifier	NT_ANCHOR		1193400	0					
ANR	1193893	ExpressionStatement	"fprintf ( f , ""<anchor:%x> "" , ( int ) node )"	6191:4:142539:142577	1193400	23	True				
ANR	1193894	CallExpression	"fprintf ( f , ""<anchor:%x> "" , ( int ) node )"		1193400	0					
ANR	1193895	Callee	fprintf		1193400	0					
ANR	1193896	Identifier	fprintf		1193400	0					
ANR	1193897	ArgumentList	f		1193400	1					
ANR	1193898	Argument	f		1193400	0					
ANR	1193899	Identifier	f		1193400	0					
ANR	1193900	Argument	"""<anchor:%x> """		1193400	1					
ANR	1193901	PrimaryExpression	"""<anchor:%x> """		1193400	0					
ANR	1193902	Argument	( int ) node		1193400	2					
ANR	1193903	CastExpression	( int ) node		1193400	0					
ANR	1193904	CastTarget	int		1193400	0					
ANR	1193905	Identifier	node		1193400	1					
ANR	1193906	SwitchStatement	switch ( NANCHOR ( node ) -> type )		1193400	24					
ANR	1193907	Condition	NANCHOR ( node ) -> type	6192:12:142591:142609	1193400	0	True				
ANR	1193908	PtrMemberAccess	NANCHOR ( node ) -> type		1193400	0					
ANR	1193909	CallExpression	NANCHOR ( node )		1193400	0					
ANR	1193910	Callee	NANCHOR		1193400	0					
ANR	1193911	Identifier	NANCHOR		1193400	0					
ANR	1193912	ArgumentList	node		1193400	1					
ANR	1193913	Argument	node		1193400	0					
ANR	1193914	Identifier	node		1193400	0					
ANR	1193915	Identifier	type		1193400	1					
ANR	1193916	CompoundStatement		77:33:1735:1735	1193400	1					
ANR	1193917	Label	case ANCHOR_BEGIN_BUF :	6193:4:142618:142639	1193400	0	True				
ANR	1193918	Identifier	ANCHOR_BEGIN_BUF		1193400	0					
ANR	1193919	ExpressionStatement	"fputs ( ""begin buf"" , f )"	6193:32:142646:142672	1193400	1	True				
ANR	1193920	CallExpression	"fputs ( ""begin buf"" , f )"		1193400	0					
ANR	1193921	Callee	fputs		1193400	0					
ANR	1193922	Identifier	fputs		1193400	0					
ANR	1193923	ArgumentList	"""begin buf"""		1193400	1					
ANR	1193924	Argument	"""begin buf"""		1193400	0					
ANR	1193925	PrimaryExpression	"""begin buf"""		1193400	0					
ANR	1193926	Argument	f		1193400	1					
ANR	1193927	Identifier	f		1193400	0					
ANR	1193928	BreakStatement	break ;	6193:60:142674:142679	1193400	2	True				
ANR	1193929	Label	case ANCHOR_END_BUF :	6194:4:142685:142704	1193400	3	True				
ANR	1193930	Identifier	ANCHOR_END_BUF		1193400	0					
ANR	1193931	ExpressionStatement	"fputs ( ""end buf"" , f )"	6194:32:142713:142739	1193400	4	True				
ANR	1193932	CallExpression	"fputs ( ""end buf"" , f )"		1193400	0					
ANR	1193933	Callee	fputs		1193400	0					
ANR	1193934	Identifier	fputs		1193400	0					
ANR	1193935	ArgumentList	"""end buf"""		1193400	1					
ANR	1193936	Argument	"""end buf"""		1193400	0					
ANR	1193937	PrimaryExpression	"""end buf"""		1193400	0					
ANR	1193938	Argument	f		1193400	1					
ANR	1193939	Identifier	f		1193400	0					
ANR	1193940	BreakStatement	break ;	6194:60:142741:142746	1193400	5	True				
ANR	1193941	Label	case ANCHOR_BEGIN_LINE :	6195:4:142752:142774	1193400	6	True				
ANR	1193942	Identifier	ANCHOR_BEGIN_LINE		1193400	0					
ANR	1193943	ExpressionStatement	"fputs ( ""begin line"" , f )"	6195:32:142780:142806	1193400	7	True				
ANR	1193944	CallExpression	"fputs ( ""begin line"" , f )"		1193400	0					
ANR	1193945	Callee	fputs		1193400	0					
ANR	1193946	Identifier	fputs		1193400	0					
ANR	1193947	ArgumentList	"""begin line"""		1193400	1					
ANR	1193948	Argument	"""begin line"""		1193400	0					
ANR	1193949	PrimaryExpression	"""begin line"""		1193400	0					
ANR	1193950	Argument	f		1193400	1					
ANR	1193951	Identifier	f		1193400	0					
ANR	1193952	BreakStatement	break ;	6195:60:142808:142813	1193400	8	True				
ANR	1193953	Label	case ANCHOR_END_LINE :	6196:4:142819:142839	1193400	9	True				
ANR	1193954	Identifier	ANCHOR_END_LINE		1193400	0					
ANR	1193955	ExpressionStatement	"fputs ( ""end line"" , f )"	6196:32:142847:142873	1193400	10	True				
ANR	1193956	CallExpression	"fputs ( ""end line"" , f )"		1193400	0					
ANR	1193957	Callee	fputs		1193400	0					
ANR	1193958	Identifier	fputs		1193400	0					
ANR	1193959	ArgumentList	"""end line"""		1193400	1					
ANR	1193960	Argument	"""end line"""		1193400	0					
ANR	1193961	PrimaryExpression	"""end line"""		1193400	0					
ANR	1193962	Argument	f		1193400	1					
ANR	1193963	Identifier	f		1193400	0					
ANR	1193964	BreakStatement	break ;	6196:60:142875:142880	1193400	11	True				
ANR	1193965	Label	case ANCHOR_SEMI_END_BUF :	6197:4:142886:142910	1193400	12	True				
ANR	1193966	Identifier	ANCHOR_SEMI_END_BUF		1193400	0					
ANR	1193967	ExpressionStatement	"fputs ( ""semi end buf"" , f )"	6197:32:142914:142940	1193400	13	True				
ANR	1193968	CallExpression	"fputs ( ""semi end buf"" , f )"		1193400	0					
ANR	1193969	Callee	fputs		1193400	0					
ANR	1193970	Identifier	fputs		1193400	0					
ANR	1193971	ArgumentList	"""semi end buf"""		1193400	1					
ANR	1193972	Argument	"""semi end buf"""		1193400	0					
ANR	1193973	PrimaryExpression	"""semi end buf"""		1193400	0					
ANR	1193974	Argument	f		1193400	1					
ANR	1193975	Identifier	f		1193400	0					
ANR	1193976	BreakStatement	break ;	6197:60:142942:142947	1193400	14	True				
ANR	1193977	Label	case ANCHOR_BEGIN_POSITION :	6198:4:142953:142979	1193400	15	True				
ANR	1193978	Identifier	ANCHOR_BEGIN_POSITION		1193400	0					
ANR	1193979	ExpressionStatement	"fputs ( ""begin position"" , f )"	6198:32:142981:143007	1193400	16	True				
ANR	1193980	CallExpression	"fputs ( ""begin position"" , f )"		1193400	0					
ANR	1193981	Callee	fputs		1193400	0					
ANR	1193982	Identifier	fputs		1193400	0					
ANR	1193983	ArgumentList	"""begin position"""		1193400	1					
ANR	1193984	Argument	"""begin position"""		1193400	0					
ANR	1193985	PrimaryExpression	"""begin position"""		1193400	0					
ANR	1193986	Argument	f		1193400	1					
ANR	1193987	Identifier	f		1193400	0					
ANR	1193988	BreakStatement	break ;	6198:60:143009:143014	1193400	17	True				
ANR	1193989	Label	case ANCHOR_WORD_BOUND :	6200:4:143021:143043	1193400	18	True				
ANR	1193990	Identifier	ANCHOR_WORD_BOUND		1193400	0					
ANR	1193991	ExpressionStatement	"fputs ( ""word bound"" , f )"	6200:33:143050:143076	1193400	19	True				
ANR	1193992	CallExpression	"fputs ( ""word bound"" , f )"		1193400	0					
ANR	1193993	Callee	fputs		1193400	0					
ANR	1193994	Identifier	fputs		1193400	0					
ANR	1193995	ArgumentList	"""word bound"""		1193400	1					
ANR	1193996	Argument	"""word bound"""		1193400	0					
ANR	1193997	PrimaryExpression	"""word bound"""		1193400	0					
ANR	1193998	Argument	f		1193400	1					
ANR	1193999	Identifier	f		1193400	0					
ANR	1194000	BreakStatement	break ;	6200:61:143078:143083	1193400	20	True				
ANR	1194001	Label	case ANCHOR_NOT_WORD_BOUND :	6201:4:143089:143115	1193400	21	True				
ANR	1194002	Identifier	ANCHOR_NOT_WORD_BOUND		1193400	0					
ANR	1194003	ExpressionStatement	"fputs ( ""not word bound"" , f )"	6201:33:143118:143144	1193400	22	True				
ANR	1194004	CallExpression	"fputs ( ""not word bound"" , f )"		1193400	0					
ANR	1194005	Callee	fputs		1193400	0					
ANR	1194006	Identifier	fputs		1193400	0					
ANR	1194007	ArgumentList	"""not word bound"""		1193400	1					
ANR	1194008	Argument	"""not word bound"""		1193400	0					
ANR	1194009	PrimaryExpression	"""not word bound"""		1193400	0					
ANR	1194010	Argument	f		1193400	1					
ANR	1194011	Identifier	f		1193400	0					
ANR	1194012	BreakStatement	break ;	6201:61:143146:143151	1193400	23	True				
ANR	1194013	Label	case ANCHOR_WORD_BEGIN :	6203:4:143183:143205	1193400	24	True				
ANR	1194014	Identifier	ANCHOR_WORD_BEGIN		1193400	0					
ANR	1194015	ExpressionStatement	"fputs ( ""word begin"" , f )"	6203:33:143212:143234	1193400	25	True				
ANR	1194016	CallExpression	"fputs ( ""word begin"" , f )"		1193400	0					
ANR	1194017	Callee	fputs		1193400	0					
ANR	1194018	Identifier	fputs		1193400	0					
ANR	1194019	ArgumentList	"""word begin"""		1193400	1					
ANR	1194020	Argument	"""word begin"""		1193400	0					
ANR	1194021	PrimaryExpression	"""word begin"""		1193400	0					
ANR	1194022	Argument	f		1193400	1					
ANR	1194023	Identifier	f		1193400	0					
ANR	1194024	BreakStatement	break ;	6203:61:143240:143245	1193400	26	True				
ANR	1194025	Label	case ANCHOR_WORD_END :	6204:4:143251:143271	1193400	27	True				
ANR	1194026	Identifier	ANCHOR_WORD_END		1193400	0					
ANR	1194027	ExpressionStatement	"fputs ( ""word end"" , f )"	6204:33:143280:143300	1193400	28	True				
ANR	1194028	CallExpression	"fputs ( ""word end"" , f )"		1193400	0					
ANR	1194029	Callee	fputs		1193400	0					
ANR	1194030	Identifier	fputs		1193400	0					
ANR	1194031	ArgumentList	"""word end"""		1193400	1					
ANR	1194032	Argument	"""word end"""		1193400	0					
ANR	1194033	PrimaryExpression	"""word end"""		1193400	0					
ANR	1194034	Argument	f		1193400	1					
ANR	1194035	Identifier	f		1193400	0					
ANR	1194036	BreakStatement	break ;	6204:61:143308:143313	1193400	29	True				
ANR	1194037	Label	case ANCHOR_PREC_READ :	6206:4:143326:143347	1193400	30	True				
ANR	1194038	Identifier	ANCHOR_PREC_READ		1193400	0					
ANR	1194039	ExpressionStatement	"fputs ( ""prec read"" , f )"	6206:33:143355:143381	1193400	31	True				
ANR	1194040	CallExpression	"fputs ( ""prec read"" , f )"		1193400	0					
ANR	1194041	Callee	fputs		1193400	0					
ANR	1194042	Identifier	fputs		1193400	0					
ANR	1194043	ArgumentList	"""prec read"""		1193400	1					
ANR	1194044	Argument	"""prec read"""		1193400	0					
ANR	1194045	PrimaryExpression	"""prec read"""		1193400	0					
ANR	1194046	Argument	f		1193400	1					
ANR	1194047	Identifier	f		1193400	0					
ANR	1194048	BreakStatement	break ;	6206:61:143383:143388	1193400	32	True				
ANR	1194049	Label	case ANCHOR_PREC_READ_NOT :	6207:4:143394:143419	1193400	33	True				
ANR	1194050	Identifier	ANCHOR_PREC_READ_NOT		1193400	0					
ANR	1194051	ExpressionStatement	"fputs ( ""prec read not"" , f )"	6207:33:143423:143449	1193400	34	True				
ANR	1194052	CallExpression	"fputs ( ""prec read not"" , f )"		1193400	0					
ANR	1194053	Callee	fputs		1193400	0					
ANR	1194054	Identifier	fputs		1193400	0					
ANR	1194055	ArgumentList	"""prec read not"""		1193400	1					
ANR	1194056	Argument	"""prec read not"""		1193400	0					
ANR	1194057	PrimaryExpression	"""prec read not"""		1193400	0					
ANR	1194058	Argument	f		1193400	1					
ANR	1194059	Identifier	f		1193400	0					
ANR	1194060	BreakStatement	break ;	6207:61:143451:143456	1193400	35	True				
ANR	1194061	Label	case ANCHOR_LOOK_BEHIND :	6208:4:143462:143485	1193400	36	True				
ANR	1194062	Identifier	ANCHOR_LOOK_BEHIND		1193400	0					
ANR	1194063	ExpressionStatement	"fputs ( ""look_behind"" , f )"	6208:33:143491:143517	1193400	37	True				
ANR	1194064	CallExpression	"fputs ( ""look_behind"" , f )"		1193400	0					
ANR	1194065	Callee	fputs		1193400	0					
ANR	1194066	Identifier	fputs		1193400	0					
ANR	1194067	ArgumentList	"""look_behind"""		1193400	1					
ANR	1194068	Argument	"""look_behind"""		1193400	0					
ANR	1194069	PrimaryExpression	"""look_behind"""		1193400	0					
ANR	1194070	Argument	f		1193400	1					
ANR	1194071	Identifier	f		1193400	0					
ANR	1194072	BreakStatement	break ;	6208:61:143519:143524	1193400	38	True				
ANR	1194073	Label	case ANCHOR_LOOK_BEHIND_NOT :	6209:4:143530:143557	1193400	39	True				
ANR	1194074	Identifier	ANCHOR_LOOK_BEHIND_NOT		1193400	0					
ANR	1194075	ExpressionStatement	"fputs ( ""look_behind_not"" , f )"	6209:33:143559:143585	1193400	40	True				
ANR	1194076	CallExpression	"fputs ( ""look_behind_not"" , f )"		1193400	0					
ANR	1194077	Callee	fputs		1193400	0					
ANR	1194078	Identifier	fputs		1193400	0					
ANR	1194079	ArgumentList	"""look_behind_not"""		1193400	1					
ANR	1194080	Argument	"""look_behind_not"""		1193400	0					
ANR	1194081	PrimaryExpression	"""look_behind_not"""		1193400	0					
ANR	1194082	Argument	f		1193400	1					
ANR	1194083	Identifier	f		1193400	0					
ANR	1194084	BreakStatement	break ;	6209:61:143587:143592	1193400	41	True				
ANR	1194085	Label	default :	6211:4:143599:143606	1193400	42	True				
ANR	1194086	Identifier	default		1193400	0					
ANR	1194087	ExpressionStatement	"fprintf ( f , ""ERROR: undefined anchor type.\\n"" )"	6212:6:143614:143659	1193400	43	True				
ANR	1194088	CallExpression	"fprintf ( f , ""ERROR: undefined anchor type.\\n"" )"		1193400	0					
ANR	1194089	Callee	fprintf		1193400	0					
ANR	1194090	Identifier	fprintf		1193400	0					
ANR	1194091	ArgumentList	f		1193400	1					
ANR	1194092	Argument	f		1193400	0					
ANR	1194093	Identifier	f		1193400	0					
ANR	1194094	Argument	"""ERROR: undefined anchor type.\\n"""		1193400	1					
ANR	1194095	PrimaryExpression	"""ERROR: undefined anchor type.\\n"""		1193400	0					
ANR	1194096	BreakStatement	break ;	6213:6:143667:143672	1193400	44	True				
ANR	1194097	BreakStatement	break ;	6215:4:143684:143689	1193400	25	True				
ANR	1194098	Label	case NT_BREF :	6217:2:143694:143706	1193400	26	True				
ANR	1194099	Identifier	NT_BREF		1193400	0					
ANR	1194100	CompoundStatement		105:6:2857:2883	1193400	27					
ANR	1194101	IdentifierDeclStatement	int * p ;	6219:6:143720:143726	1193400	0	True				
ANR	1194102	IdentifierDecl	* p		1193400	0					
ANR	1194103	IdentifierDeclType	int *		1193400	0					
ANR	1194104	Identifier	p		1193400	1					
ANR	1194105	IdentifierDeclStatement	BRefNode * br = NBREF ( node ) ;	6220:6:143734:143760	1193400	1	True				
ANR	1194106	IdentifierDecl	* br = NBREF ( node )		1193400	0					
ANR	1194107	IdentifierDeclType	BRefNode *		1193400	0					
ANR	1194108	Identifier	br		1193400	1					
ANR	1194109	AssignmentExpression	* br = NBREF ( node )		1193400	2		=			
ANR	1194110	Identifier	br		1193400	0					
ANR	1194111	CallExpression	NBREF ( node )		1193400	1					
ANR	1194112	Callee	NBREF		1193400	0					
ANR	1194113	Identifier	NBREF		1193400	0					
ANR	1194114	ArgumentList	node		1193400	1					
ANR	1194115	Argument	node		1193400	0					
ANR	1194116	Identifier	node		1193400	0					
ANR	1194117	ExpressionStatement	p = BACKREFS_P ( br )	6221:6:143768:143786	1193400	2	True				
ANR	1194118	AssignmentExpression	p = BACKREFS_P ( br )		1193400	0		=			
ANR	1194119	Identifier	p		1193400	0					
ANR	1194120	CallExpression	BACKREFS_P ( br )		1193400	1					
ANR	1194121	Callee	BACKREFS_P		1193400	0					
ANR	1194122	Identifier	BACKREFS_P		1193400	0					
ANR	1194123	ArgumentList	br		1193400	1					
ANR	1194124	Argument	br		1193400	0					
ANR	1194125	Identifier	br		1193400	0					
ANR	1194126	ExpressionStatement	"fprintf ( f , ""<backref:%x>"" , ( int ) node )"	6222:6:143794:143832	1193400	3	True				
ANR	1194127	CallExpression	"fprintf ( f , ""<backref:%x>"" , ( int ) node )"		1193400	0					
ANR	1194128	Callee	fprintf		1193400	0					
ANR	1194129	Identifier	fprintf		1193400	0					
ANR	1194130	ArgumentList	f		1193400	1					
ANR	1194131	Argument	f		1193400	0					
ANR	1194132	Identifier	f		1193400	0					
ANR	1194133	Argument	"""<backref:%x>"""		1193400	1					
ANR	1194134	PrimaryExpression	"""<backref:%x>"""		1193400	0					
ANR	1194135	Argument	( int ) node		1193400	2					
ANR	1194136	CastExpression	( int ) node		1193400	0					
ANR	1194137	CastTarget	int		1193400	0					
ANR	1194138	Identifier	node		1193400	1					
ANR	1194139	ForStatement	for ( i = 0 ; i < br -> back_num ; i ++ )		1193400	4					
ANR	1194140	ForInit	i = 0 ;	6223:11:143845:143850	1193400	0	True				
ANR	1194141	AssignmentExpression	i = 0		1193400	0		=			
ANR	1194142	Identifier	i		1193400	0					
ANR	1194143	PrimaryExpression	0		1193400	1					
ANR	1194144	Condition	i < br -> back_num	6223:18:143852:143867	1193400	1	True				
ANR	1194145	RelationalExpression	i < br -> back_num		1193400	0		<			
ANR	1194146	Identifier	i		1193400	0					
ANR	1194147	PtrMemberAccess	br -> back_num		1193400	1					
ANR	1194148	Identifier	br		1193400	0					
ANR	1194149	Identifier	back_num		1193400	1					
ANR	1194150	PostIncDecOperationExpression	i ++	6223:36:143870:143872	1193400	2	True				
ANR	1194151	Identifier	i		1193400	0					
ANR	1194152	IncDec	++		1193400	1					
ANR	1194153	CompoundStatement		108:41:2998:2998	1193400	3					
ANR	1194154	IfStatement	if ( i > 0 )		1193400	0					
ANR	1194155	Condition	i > 0	6224:5:143882:143886	1193400	0	True				
ANR	1194156	RelationalExpression	i > 0		1193400	0		>			
ANR	1194157	Identifier	i		1193400	0					
ANR	1194158	PrimaryExpression	0		1193400	1					
ANR	1194159	ExpressionStatement	"fputs ( "", "" , f )"	6224:12:143889:143903	1193400	1	True				
ANR	1194160	CallExpression	"fputs ( "", "" , f )"		1193400	0					
ANR	1194161	Callee	fputs		1193400	0					
ANR	1194162	Identifier	fputs		1193400	0					
ANR	1194163	ArgumentList	""", """		1193400	1					
ANR	1194164	Argument	""", """		1193400	0					
ANR	1194165	PrimaryExpression	""", """		1193400	0					
ANR	1194166	Argument	f		1193400	1					
ANR	1194167	Identifier	f		1193400	0					
ANR	1194168	ExpressionStatement	"fprintf ( f , ""%d"" , p [ i ] )"	6225:1:143906:143928	1193400	1	True				
ANR	1194169	CallExpression	"fprintf ( f , ""%d"" , p [ i ] )"		1193400	0					
ANR	1194170	Callee	fprintf		1193400	0					
ANR	1194171	Identifier	fprintf		1193400	0					
ANR	1194172	ArgumentList	f		1193400	1					
ANR	1194173	Argument	f		1193400	0					
ANR	1194174	Identifier	f		1193400	0					
ANR	1194175	Argument	"""%d"""		1193400	1					
ANR	1194176	PrimaryExpression	"""%d"""		1193400	0					
ANR	1194177	Argument	p [ i ]		1193400	2					
ANR	1194178	ArrayIndexing	p [ i ]		1193400	0					
ANR	1194179	Identifier	p		1193400	0					
ANR	1194180	Identifier	i		1193400	1					
ANR	1194181	BreakStatement	break ;	6228:4:143948:143953	1193400	28	True				
ANR	1194182	Label	case NT_CALL :	6231:2:143981:143993	1193400	29	True				
ANR	1194183	Identifier	NT_CALL		1193400	0					
ANR	1194184	CompoundStatement		118:6:3130:3156	1193400	30					
ANR	1194185	IdentifierDeclStatement	CallNode * cn = NCALL ( node ) ;	6233:6:144007:144033	1193400	0	True				
ANR	1194186	IdentifierDecl	* cn = NCALL ( node )		1193400	0					
ANR	1194187	IdentifierDeclType	CallNode *		1193400	0					
ANR	1194188	Identifier	cn		1193400	1					
ANR	1194189	AssignmentExpression	* cn = NCALL ( node )		1193400	2		=			
ANR	1194190	Identifier	cn		1193400	0					
ANR	1194191	CallExpression	NCALL ( node )		1193400	1					
ANR	1194192	Callee	NCALL		1193400	0					
ANR	1194193	Identifier	NCALL		1193400	0					
ANR	1194194	ArgumentList	node		1193400	1					
ANR	1194195	Argument	node		1193400	0					
ANR	1194196	Identifier	node		1193400	0					
ANR	1194197	ExpressionStatement	"fprintf ( f , ""<call:%x>"" , ( int ) node )"	6234:6:144041:144076	1193400	1	True				
ANR	1194198	CallExpression	"fprintf ( f , ""<call:%x>"" , ( int ) node )"		1193400	0					
ANR	1194199	Callee	fprintf		1193400	0					
ANR	1194200	Identifier	fprintf		1193400	0					
ANR	1194201	ArgumentList	f		1193400	1					
ANR	1194202	Argument	f		1193400	0					
ANR	1194203	Identifier	f		1193400	0					
ANR	1194204	Argument	"""<call:%x>"""		1193400	1					
ANR	1194205	PrimaryExpression	"""<call:%x>"""		1193400	0					
ANR	1194206	Argument	( int ) node		1193400	2					
ANR	1194207	CastExpression	( int ) node		1193400	0					
ANR	1194208	CastTarget	int		1193400	0					
ANR	1194209	Identifier	node		1193400	1					
ANR	1194210	ExpressionStatement	"p_string ( f , cn -> name_end - cn -> name , cn -> name )"	6235:6:144084:144130	1193400	2	True				
ANR	1194211	CallExpression	"p_string ( f , cn -> name_end - cn -> name , cn -> name )"		1193400	0					
ANR	1194212	Callee	p_string		1193400	0					
ANR	1194213	Identifier	p_string		1193400	0					
ANR	1194214	ArgumentList	f		1193400	1					
ANR	1194215	Argument	f		1193400	0					
ANR	1194216	Identifier	f		1193400	0					
ANR	1194217	Argument	cn -> name_end - cn -> name		1193400	1					
ANR	1194218	AdditiveExpression	cn -> name_end - cn -> name		1193400	0		-			
ANR	1194219	PtrMemberAccess	cn -> name_end		1193400	0					
ANR	1194220	Identifier	cn		1193400	0					
ANR	1194221	Identifier	name_end		1193400	1					
ANR	1194222	PtrMemberAccess	cn -> name		1193400	1					
ANR	1194223	Identifier	cn		1193400	0					
ANR	1194224	Identifier	name		1193400	1					
ANR	1194225	Argument	cn -> name		1193400	2					
ANR	1194226	PtrMemberAccess	cn -> name		1193400	0					
ANR	1194227	Identifier	cn		1193400	0					
ANR	1194228	Identifier	name		1193400	1					
ANR	1194229	BreakStatement	break ;	6237:4:144142:144147	1193400	31	True				
ANR	1194230	Label	case NT_QTFR :	6240:2:144159:144171	1193400	32	True				
ANR	1194231	Identifier	NT_QTFR		1193400	0					
ANR	1194232	ExpressionStatement	"fprintf ( f , ""<quantifier:%x>{%d,%d}%s\\n"" , ( int ) node , NQTFR ( node ) -> lower , NQTFR ( node ) -> upper , ( NQTFR ( node ) -> greedy ? """" : ""?"" ) )"	6241:4:144177:144313	1193400	33	True				
ANR	1194233	CallExpression	"fprintf ( f , ""<quantifier:%x>{%d,%d}%s\\n"" , ( int ) node , NQTFR ( node ) -> lower , NQTFR ( node ) -> upper , ( NQTFR ( node ) -> greedy ? """" : ""?"" ) )"		1193400	0					
ANR	1194234	Callee	fprintf		1193400	0					
ANR	1194235	Identifier	fprintf		1193400	0					
ANR	1194236	ArgumentList	f		1193400	1					
ANR	1194237	Argument	f		1193400	0					
ANR	1194238	Identifier	f		1193400	0					
ANR	1194239	Argument	"""<quantifier:%x>{%d,%d}%s\\n"""		1193400	1					
ANR	1194240	PrimaryExpression	"""<quantifier:%x>{%d,%d}%s\\n"""		1193400	0					
ANR	1194241	Argument	( int ) node		1193400	2					
ANR	1194242	CastExpression	( int ) node		1193400	0					
ANR	1194243	CastTarget	int		1193400	0					
ANR	1194244	Identifier	node		1193400	1					
ANR	1194245	Argument	NQTFR ( node ) -> lower		1193400	3					
ANR	1194246	PtrMemberAccess	NQTFR ( node ) -> lower		1193400	0					
ANR	1194247	CallExpression	NQTFR ( node )		1193400	0					
ANR	1194248	Callee	NQTFR		1193400	0					
ANR	1194249	Identifier	NQTFR		1193400	0					
ANR	1194250	ArgumentList	node		1193400	1					
ANR	1194251	Argument	node		1193400	0					
ANR	1194252	Identifier	node		1193400	0					
ANR	1194253	Identifier	lower		1193400	1					
ANR	1194254	Argument	NQTFR ( node ) -> upper		1193400	4					
ANR	1194255	PtrMemberAccess	NQTFR ( node ) -> upper		1193400	0					
ANR	1194256	CallExpression	NQTFR ( node )		1193400	0					
ANR	1194257	Callee	NQTFR		1193400	0					
ANR	1194258	Identifier	NQTFR		1193400	0					
ANR	1194259	ArgumentList	node		1193400	1					
ANR	1194260	Argument	node		1193400	0					
ANR	1194261	Identifier	node		1193400	0					
ANR	1194262	Identifier	upper		1193400	1					
ANR	1194263	Argument	"NQTFR ( node ) -> greedy ? """" : ""?"""		1193400	5					
ANR	1194264	ConditionalExpression	"NQTFR ( node ) -> greedy ? """" : ""?"""		1193400	0					
ANR	1194265	Condition	NQTFR ( node ) -> greedy		1193400	0					
ANR	1194266	PtrMemberAccess	NQTFR ( node ) -> greedy		1193400	0					
ANR	1194267	CallExpression	NQTFR ( node )		1193400	0					
ANR	1194268	Callee	NQTFR		1193400	0					
ANR	1194269	Identifier	NQTFR		1193400	0					
ANR	1194270	ArgumentList	node		1193400	1					
ANR	1194271	Argument	node		1193400	0					
ANR	1194272	Identifier	node		1193400	0					
ANR	1194273	Identifier	greedy		1193400	1					
ANR	1194274	PrimaryExpression	""""""		1193400	1					
ANR	1194275	PrimaryExpression	"""?"""		1193400	2					
ANR	1194276	ExpressionStatement	"print_indent_tree ( f , NQTFR ( node ) -> target , indent + add )"	6244:4:144319:144374	1193400	34	True				
ANR	1194277	CallExpression	"print_indent_tree ( f , NQTFR ( node ) -> target , indent + add )"		1193400	0					
ANR	1194278	Callee	print_indent_tree		1193400	0					
ANR	1194279	Identifier	print_indent_tree		1193400	0					
ANR	1194280	ArgumentList	f		1193400	1					
ANR	1194281	Argument	f		1193400	0					
ANR	1194282	Identifier	f		1193400	0					
ANR	1194283	Argument	NQTFR ( node ) -> target		1193400	1					
ANR	1194284	PtrMemberAccess	NQTFR ( node ) -> target		1193400	0					
ANR	1194285	CallExpression	NQTFR ( node )		1193400	0					
ANR	1194286	Callee	NQTFR		1193400	0					
ANR	1194287	Identifier	NQTFR		1193400	0					
ANR	1194288	ArgumentList	node		1193400	1					
ANR	1194289	Argument	node		1193400	0					
ANR	1194290	Identifier	node		1193400	0					
ANR	1194291	Identifier	target		1193400	1					
ANR	1194292	Argument	indent + add		1193400	2					
ANR	1194293	AdditiveExpression	indent + add		1193400	0		+			
ANR	1194294	Identifier	indent		1193400	0					
ANR	1194295	Identifier	add		1193400	1					
ANR	1194296	BreakStatement	break ;	6245:4:144380:144385	1193400	35	True				
ANR	1194297	Label	case NT_ENCLOSE :	6247:2:144390:144405	1193400	36	True				
ANR	1194298	Identifier	NT_ENCLOSE		1193400	0					
ANR	1194299	ExpressionStatement	"fprintf ( f , ""<enclose:%x> "" , ( int ) node )"	6248:4:144411:144450	1193400	37	True				
ANR	1194300	CallExpression	"fprintf ( f , ""<enclose:%x> "" , ( int ) node )"		1193400	0					
ANR	1194301	Callee	fprintf		1193400	0					
ANR	1194302	Identifier	fprintf		1193400	0					
ANR	1194303	ArgumentList	f		1193400	1					
ANR	1194304	Argument	f		1193400	0					
ANR	1194305	Identifier	f		1193400	0					
ANR	1194306	Argument	"""<enclose:%x> """		1193400	1					
ANR	1194307	PrimaryExpression	"""<enclose:%x> """		1193400	0					
ANR	1194308	Argument	( int ) node		1193400	2					
ANR	1194309	CastExpression	( int ) node		1193400	0					
ANR	1194310	CastTarget	int		1193400	0					
ANR	1194311	Identifier	node		1193400	1					
ANR	1194312	SwitchStatement	switch ( NENCLOSE ( node ) -> type )		1193400	38					
ANR	1194313	Condition	NENCLOSE ( node ) -> type	6249:12:144464:144483	1193400	0	True				
ANR	1194314	PtrMemberAccess	NENCLOSE ( node ) -> type		1193400	0					
ANR	1194315	CallExpression	NENCLOSE ( node )		1193400	0					
ANR	1194316	Callee	NENCLOSE		1193400	0					
ANR	1194317	Identifier	NENCLOSE		1193400	0					
ANR	1194318	ArgumentList	node		1193400	1					
ANR	1194319	Argument	node		1193400	0					
ANR	1194320	Identifier	node		1193400	0					
ANR	1194321	Identifier	type		1193400	1					
ANR	1194322	CompoundStatement		134:34:3609:3609	1193400	1					
ANR	1194323	Label	case ENCLOSE_OPTION :	6250:4:144492:144511	1193400	0	True				
ANR	1194324	Identifier	ENCLOSE_OPTION		1193400	0					
ANR	1194325	ExpressionStatement	"fprintf ( f , ""option:%d"" , NENCLOSE ( node ) -> option )"	6251:6:144519:144566	1193400	1	True				
ANR	1194326	CallExpression	"fprintf ( f , ""option:%d"" , NENCLOSE ( node ) -> option )"		1193400	0					
ANR	1194327	Callee	fprintf		1193400	0					
ANR	1194328	Identifier	fprintf		1193400	0					
ANR	1194329	ArgumentList	f		1193400	1					
ANR	1194330	Argument	f		1193400	0					
ANR	1194331	Identifier	f		1193400	0					
ANR	1194332	Argument	"""option:%d"""		1193400	1					
ANR	1194333	PrimaryExpression	"""option:%d"""		1193400	0					
ANR	1194334	Argument	NENCLOSE ( node ) -> option		1193400	2					
ANR	1194335	PtrMemberAccess	NENCLOSE ( node ) -> option		1193400	0					
ANR	1194336	CallExpression	NENCLOSE ( node )		1193400	0					
ANR	1194337	Callee	NENCLOSE		1193400	0					
ANR	1194338	Identifier	NENCLOSE		1193400	0					
ANR	1194339	ArgumentList	node		1193400	1					
ANR	1194340	Argument	node		1193400	0					
ANR	1194341	Identifier	node		1193400	0					
ANR	1194342	Identifier	option		1193400	1					
ANR	1194343	BreakStatement	break ;	6252:6:144574:144579	1193400	2	True				
ANR	1194344	Label	case ENCLOSE_MEMORY :	6253:4:144585:144604	1193400	3	True				
ANR	1194345	Identifier	ENCLOSE_MEMORY		1193400	0					
ANR	1194346	ExpressionStatement	"fprintf ( f , ""memory:%d"" , NENCLOSE ( node ) -> regnum )"	6254:6:144612:144659	1193400	4	True				
ANR	1194347	CallExpression	"fprintf ( f , ""memory:%d"" , NENCLOSE ( node ) -> regnum )"		1193400	0					
ANR	1194348	Callee	fprintf		1193400	0					
ANR	1194349	Identifier	fprintf		1193400	0					
ANR	1194350	ArgumentList	f		1193400	1					
ANR	1194351	Argument	f		1193400	0					
ANR	1194352	Identifier	f		1193400	0					
ANR	1194353	Argument	"""memory:%d"""		1193400	1					
ANR	1194354	PrimaryExpression	"""memory:%d"""		1193400	0					
ANR	1194355	Argument	NENCLOSE ( node ) -> regnum		1193400	2					
ANR	1194356	PtrMemberAccess	NENCLOSE ( node ) -> regnum		1193400	0					
ANR	1194357	CallExpression	NENCLOSE ( node )		1193400	0					
ANR	1194358	Callee	NENCLOSE		1193400	0					
ANR	1194359	Identifier	NENCLOSE		1193400	0					
ANR	1194360	ArgumentList	node		1193400	1					
ANR	1194361	Argument	node		1193400	0					
ANR	1194362	Identifier	node		1193400	0					
ANR	1194363	Identifier	regnum		1193400	1					
ANR	1194364	BreakStatement	break ;	6255:6:144667:144672	1193400	5	True				
ANR	1194365	Label	case ENCLOSE_STOP_BACKTRACK :	6256:4:144678:144705	1193400	6	True				
ANR	1194366	Identifier	ENCLOSE_STOP_BACKTRACK		1193400	0					
ANR	1194367	ExpressionStatement	"fprintf ( f , ""stop-bt"" )"	6257:6:144713:144734	1193400	7	True				
ANR	1194368	CallExpression	"fprintf ( f , ""stop-bt"" )"		1193400	0					
ANR	1194369	Callee	fprintf		1193400	0					
ANR	1194370	Identifier	fprintf		1193400	0					
ANR	1194371	ArgumentList	f		1193400	1					
ANR	1194372	Argument	f		1193400	0					
ANR	1194373	Identifier	f		1193400	0					
ANR	1194374	Argument	"""stop-bt"""		1193400	1					
ANR	1194375	PrimaryExpression	"""stop-bt"""		1193400	0					
ANR	1194376	BreakStatement	break ;	6258:6:144742:144747	1193400	8	True				
ANR	1194377	Label	default :	6260:4:144754:144761	1193400	9	True				
ANR	1194378	Identifier	default		1193400	0					
ANR	1194379	BreakStatement	break ;	6261:6:144769:144774	1193400	10	True				
ANR	1194380	ExpressionStatement	"fprintf ( f , ""\\n"" )"	6263:4:144786:144802	1193400	39	True				
ANR	1194381	CallExpression	"fprintf ( f , ""\\n"" )"		1193400	0					
ANR	1194382	Callee	fprintf		1193400	0					
ANR	1194383	Identifier	fprintf		1193400	0					
ANR	1194384	ArgumentList	f		1193400	1					
ANR	1194385	Argument	f		1193400	0					
ANR	1194386	Identifier	f		1193400	0					
ANR	1194387	Argument	"""\\n"""		1193400	1					
ANR	1194388	PrimaryExpression	"""\\n"""		1193400	0					
ANR	1194389	ExpressionStatement	"print_indent_tree ( f , NENCLOSE ( node ) -> target , indent + add )"	6264:4:144808:144866	1193400	40	True				
ANR	1194390	CallExpression	"print_indent_tree ( f , NENCLOSE ( node ) -> target , indent + add )"		1193400	0					
ANR	1194391	Callee	print_indent_tree		1193400	0					
ANR	1194392	Identifier	print_indent_tree		1193400	0					
ANR	1194393	ArgumentList	f		1193400	1					
ANR	1194394	Argument	f		1193400	0					
ANR	1194395	Identifier	f		1193400	0					
ANR	1194396	Argument	NENCLOSE ( node ) -> target		1193400	1					
ANR	1194397	PtrMemberAccess	NENCLOSE ( node ) -> target		1193400	0					
ANR	1194398	CallExpression	NENCLOSE ( node )		1193400	0					
ANR	1194399	Callee	NENCLOSE		1193400	0					
ANR	1194400	Identifier	NENCLOSE		1193400	0					
ANR	1194401	ArgumentList	node		1193400	1					
ANR	1194402	Argument	node		1193400	0					
ANR	1194403	Identifier	node		1193400	0					
ANR	1194404	Identifier	target		1193400	1					
ANR	1194405	Argument	indent + add		1193400	2					
ANR	1194406	AdditiveExpression	indent + add		1193400	0		+			
ANR	1194407	Identifier	indent		1193400	0					
ANR	1194408	Identifier	add		1193400	1					
ANR	1194409	BreakStatement	break ;	6265:4:144872:144877	1193400	41	True				
ANR	1194410	Label	default :	6267:2:144882:144889	1193400	42	True				
ANR	1194411	Identifier	default		1193400	0					
ANR	1194412	ExpressionStatement	"fprintf ( f , ""print_indent_tree: undefined node type %d\\n"" , NTYPE ( node ) )"	6268:4:144895:144965	1193400	43	True				
ANR	1194413	CallExpression	"fprintf ( f , ""print_indent_tree: undefined node type %d\\n"" , NTYPE ( node ) )"		1193400	0					
ANR	1194414	Callee	fprintf		1193400	0					
ANR	1194415	Identifier	fprintf		1193400	0					
ANR	1194416	ArgumentList	f		1193400	1					
ANR	1194417	Argument	f		1193400	0					
ANR	1194418	Identifier	f		1193400	0					
ANR	1194419	Argument	"""print_indent_tree: undefined node type %d\\n"""		1193400	1					
ANR	1194420	PrimaryExpression	"""print_indent_tree: undefined node type %d\\n"""		1193400	0					
ANR	1194421	Argument	NTYPE ( node )		1193400	2					
ANR	1194422	CallExpression	NTYPE ( node )		1193400	0					
ANR	1194423	Callee	NTYPE		1193400	0					
ANR	1194424	Identifier	NTYPE		1193400	0					
ANR	1194425	ArgumentList	node		1193400	1					
ANR	1194426	Argument	node		1193400	0					
ANR	1194427	Identifier	node		1193400	0					
ANR	1194428	BreakStatement	break ;	6269:4:144971:144976	1193400	44	True				
ANR	1194429	IfStatement	if ( type != NT_LIST && type != NT_ALT && type != NT_QTFR && type != NT_ENCLOSE )		1193400	7					
ANR	1194430	Condition	type != NT_LIST && type != NT_ALT && type != NT_QTFR && type != NT_ENCLOSE	6272:6:144989:145068	1193400	0	True				
ANR	1194431	AndExpression	type != NT_LIST && type != NT_ALT && type != NT_QTFR && type != NT_ENCLOSE		1193400	0		&&			
ANR	1194432	EqualityExpression	type != NT_LIST		1193400	0		!=			
ANR	1194433	Identifier	type		1193400	0					
ANR	1194434	Identifier	NT_LIST		1193400	1					
ANR	1194435	AndExpression	type != NT_ALT && type != NT_QTFR && type != NT_ENCLOSE		1193400	1		&&			
ANR	1194436	EqualityExpression	type != NT_ALT		1193400	0		!=			
ANR	1194437	Identifier	type		1193400	0					
ANR	1194438	Identifier	NT_ALT		1193400	1					
ANR	1194439	AndExpression	type != NT_QTFR && type != NT_ENCLOSE		1193400	1		&&			
ANR	1194440	EqualityExpression	type != NT_QTFR		1193400	0		!=			
ANR	1194441	Identifier	type		1193400	0					
ANR	1194442	Identifier	NT_QTFR		1193400	1					
ANR	1194443	EqualityExpression	type != NT_ENCLOSE		1193400	1		!=			
ANR	1194444	Identifier	type		1193400	0					
ANR	1194445	Identifier	NT_ENCLOSE		1193400	1					
ANR	1194446	ExpressionStatement	"fprintf ( f , ""\\n"" )"	6274:4:145075:145091	1193400	1	True				
ANR	1194447	CallExpression	"fprintf ( f , ""\\n"" )"		1193400	0					
ANR	1194448	Callee	fprintf		1193400	0					
ANR	1194449	Identifier	fprintf		1193400	0					
ANR	1194450	ArgumentList	f		1193400	1					
ANR	1194451	Argument	f		1193400	0					
ANR	1194452	Identifier	f		1193400	0					
ANR	1194453	Argument	"""\\n"""		1193400	1					
ANR	1194454	PrimaryExpression	"""\\n"""		1193400	0					
ANR	1194455	ExpressionStatement	fflush ( f )	6275:2:145095:145104	1193400	8	True				
ANR	1194456	CallExpression	fflush ( f )		1193400	0					
ANR	1194457	Callee	fflush		1193400	0					
ANR	1194458	Identifier	fflush		1193400	0					
ANR	1194459	ArgumentList	f		1193400	1					
ANR	1194460	Argument	f		1193400	0					
ANR	1194461	Identifier	f		1193400	0					
ANR	1194462	ReturnType	static void		1193400	1					
ANR	1194463	Identifier	print_indent_tree		1193400	2					
ANR	1194464	ParameterList	"FILE * f , Node * node , int indent"		1193400	3					
ANR	1194465	Parameter	FILE * f	6115:18:140843:140849	1193400	0	True				
ANR	1194466	ParameterType	FILE *		1193400	0					
ANR	1194467	Identifier	f		1193400	1					
ANR	1194468	Parameter	Node * node	6115:27:140852:140861	1193400	1	True				
ANR	1194469	ParameterType	Node *		1193400	0					
ANR	1194470	Identifier	node		1193400	1					
ANR	1194471	Parameter	int indent	6115:39:140864:140873	1193400	2	True				
ANR	1194472	ParameterType	int		1193400	0					
ANR	1194473	Identifier	indent		1193400	1					
ANR	1194474	CFGEntryNode	ENTRY		1193400		True				
ANR	1194475	CFGExitNode	EXIT		1193400		True				
ANR	1194476	Symbol	NQTFR ( node ) -> target		1193400						
ANR	1194477	Symbol	NCAR		1193400						
ANR	1194478	Symbol	* bbuf -> p		1193400						
ANR	1194479	Symbol	br -> back_num		1193400						
ANR	1194480	Symbol	IS_NCCLASS_NOT		1193400						
ANR	1194481	Symbol	cn -> name_end		1193400						
ANR	1194482	Symbol	type		1193400						
ANR	1194483	Symbol	NQTFR		1193400						
ANR	1194484	Symbol	NCCLASS		1193400						
ANR	1194485	Symbol	* NCTYPE		1193400						
ANR	1194486	Symbol	* br		1193400						
ANR	1194487	Symbol	NENCLOSE ( node ) -> regnum		1193400						
ANR	1194488	Symbol	* bbuf		1193400						
ANR	1194489	Symbol	NCTYPE		1193400						
ANR	1194490	Symbol	NENCLOSE ( node ) -> option		1193400						
ANR	1194491	Symbol	add		1193400						
ANR	1194492	Symbol	NQTFR ( node ) -> upper		1193400						
ANR	1194493	Symbol	NCDR		1193400						
ANR	1194494	Symbol	NSTR		1193400						
ANR	1194495	Symbol	NCCLASS ( node ) -> mbuf		1193400						
ANR	1194496	Symbol	* NSTR		1193400						
ANR	1194497	Symbol	NT_LIST		1193400						
ANR	1194498	Symbol	NENCLOSE ( node ) -> target		1193400						
ANR	1194499	Symbol	node		1193400						
ANR	1194500	Symbol	NSTR ( node ) -> s		1193400						
ANR	1194501	Symbol	* cn		1193400						
ANR	1194502	Symbol	BACKREFS_P		1193400						
ANR	1194503	Symbol	bbuf -> p		1193400						
ANR	1194504	Symbol	NT_ENCLOSE		1193400						
ANR	1194505	Symbol	bbuf -> used		1193400						
ANR	1194506	Symbol	IS_NOT_NULL		1193400						
ANR	1194507	Symbol	indent		1193400						
ANR	1194508	Symbol	NCTYPE ( node ) -> ctype		1193400						
ANR	1194509	Symbol	NCALL		1193400						
ANR	1194510	Symbol	NQTFR ( node ) -> lower		1193400						
ANR	1194511	Symbol	* NENCLOSE		1193400						
ANR	1194512	Symbol	cn -> name		1193400						
ANR	1194513	Symbol	NSTRING_IS_RAW		1193400						
ANR	1194514	Symbol	NANCHOR ( node ) -> type		1193400						
ANR	1194515	Symbol	NENCLOSE ( node ) -> type		1193400						
ANR	1194516	Symbol	br		1193400						
ANR	1194517	Symbol	NSTR ( node ) -> end		1193400						
ANR	1194518	Symbol	IS_NULL		1193400						
ANR	1194519	Symbol	NBREF		1193400						
ANR	1194520	Symbol	* NQTFR		1193400						
ANR	1194521	Symbol	NT_QTFR		1193400						
ANR	1194522	Symbol	* NANCHOR		1193400						
ANR	1194523	Symbol	NENCLOSE		1193400						
ANR	1194524	Symbol	NQTFR ( node ) -> greedy		1193400						
ANR	1194525	Symbol	* NCCLASS		1193400						
ANR	1194526	Symbol	f		1193400						
ANR	1194527	Symbol	* * bbuf		1193400						
ANR	1194528	Symbol	i		1193400						
ANR	1194529	Symbol	cn		1193400						
ANR	1194530	Symbol	p		1193400						
ANR	1194531	Symbol	* i		1193400						
ANR	1194532	Symbol	NT_ALT		1193400						
ANR	1194533	Symbol	NCTYPE ( node ) -> not		1193400						
ANR	1194534	Symbol	NANCHOR		1193400						
ANR	1194535	Symbol	NTYPE		1193400						
ANR	1194536	Symbol	* p		1193400						
ANR	1194537	Symbol	bbuf		1193400						
ANR	1194538	Function	print_tree	6280:0:145162:145241							
ANR	1194539	FunctionDef	"print_tree (FILE * f , Node * node)"		1194538	0					
ANR	1194540	CompoundStatement		6282:0:145206:145241	1194538	0					
ANR	1194541	ExpressionStatement	"print_indent_tree ( f , node , 0 )"	6283:2:145210:145239	1194538	0	True				
ANR	1194542	CallExpression	"print_indent_tree ( f , node , 0 )"		1194538	0					
ANR	1194543	Callee	print_indent_tree		1194538	0					
ANR	1194544	Identifier	print_indent_tree		1194538	0					
ANR	1194545	ArgumentList	f		1194538	1					
ANR	1194546	Argument	f		1194538	0					
ANR	1194547	Identifier	f		1194538	0					
ANR	1194548	Argument	node		1194538	1					
ANR	1194549	Identifier	node		1194538	0					
ANR	1194550	Argument	0		1194538	2					
ANR	1194551	PrimaryExpression	0		1194538	0					
ANR	1194552	ReturnType	static void		1194538	1					
ANR	1194553	Identifier	print_tree		1194538	2					
ANR	1194554	ParameterList	"FILE * f , Node * node"		1194538	3					
ANR	1194555	Parameter	FILE * f	6281:11:145185:145191	1194538	0	True				
ANR	1194556	ParameterType	FILE *		1194538	0					
ANR	1194557	Identifier	f		1194538	1					
ANR	1194558	Parameter	Node * node	6281:20:145194:145203	1194538	1	True				
ANR	1194559	ParameterType	Node *		1194538	0					
ANR	1194560	Identifier	node		1194538	1					
ANR	1194561	CFGEntryNode	ENTRY		1194538		True				
ANR	1194562	CFGExitNode	EXIT		1194538		True				
ANR	1194563	Symbol	node		1194538						
ANR	1194564	Symbol	f		1194538						
