command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3483764	File	data/converged/CVE-2015-8617_php-src/regparse.c								
ANR	3483765	DeclStmt									
ANR	3483766	Decl							define CASE_FOLD_IS_APPLIED_INSIDE_NEGATIVE_CCLASS OnigSyntaxType	define CASE_FOLD_IS_APPLIED_INSIDE_NEGATIVE_CCLASS OnigSyntaxType	OnigSyntaxRuby
ANR	3483767	DeclStmt									
ANR	3483768	Decl							OnigSyntaxType	OnigSyntaxType *	OnigDefaultSyntax
ANR	3483769	DeclStmt									
ANR	3483770	Decl							OnigWarnFunc	OnigWarnFunc	onig_warn
ANR	3483771	DeclStmt									
ANR	3483772	Decl							OnigWarnFunc	OnigWarnFunc	onig_warn
ANR	3483773	DeclStmt									
ANR	3483774	Decl							OnigWarnFunc	OnigWarnFunc	onig_verb_warn
ANR	3483775	DeclStmt									
ANR	3483776	Decl							OnigWarnFunc	OnigWarnFunc	onig_verb_warn
ANR	3483777	Function	onig_set_warn_func	90:0:3760:3826							
ANR	3483778	FunctionDef	onig_set_warn_func (OnigWarnFunc f)		3483777	0					
ANR	3483779	CompoundStatement		91:0:3807:3826	3483777	0					
ANR	3483780	ExpressionStatement	onig_warn = f	92:2:3811:3824	3483777	0	True				
ANR	3483781	AssignmentExpression	onig_warn = f		3483777	0		=			
ANR	3483782	Identifier	onig_warn		3483777	0					
ANR	3483783	Identifier	f		3483777	1					
ANR	3483784	ReturnType	extern void		3483777	1					
ANR	3483785	Identifier	onig_set_warn_func		3483777	2					
ANR	3483786	ParameterList	OnigWarnFunc f		3483777	3					
ANR	3483787	Parameter	OnigWarnFunc f	90:31:3791:3804	3483777	0	True				
ANR	3483788	ParameterType	OnigWarnFunc		3483777	0					
ANR	3483789	Identifier	f		3483777	1					
ANR	3483790	CFGEntryNode	ENTRY		3483777		True				
ANR	3483791	CFGExitNode	EXIT		3483777		True				
ANR	3483792	Symbol	f		3483777						
ANR	3483793	Symbol	onig_warn		3483777						
ANR	3483794	Function	onig_set_verb_warn_func	95:0:3829:3905							
ANR	3483795	FunctionDef	onig_set_verb_warn_func (OnigWarnFunc f)		3483794	0					
ANR	3483796	CompoundStatement		96:0:3881:3905	3483794	0					
ANR	3483797	ExpressionStatement	onig_verb_warn = f	97:2:3885:3903	3483794	0	True				
ANR	3483798	AssignmentExpression	onig_verb_warn = f		3483794	0		=			
ANR	3483799	Identifier	onig_verb_warn		3483794	0					
ANR	3483800	Identifier	f		3483794	1					
ANR	3483801	ReturnType	extern void		3483794	1					
ANR	3483802	Identifier	onig_set_verb_warn_func		3483794	2					
ANR	3483803	ParameterList	OnigWarnFunc f		3483794	3					
ANR	3483804	Parameter	OnigWarnFunc f	95:36:3865:3878	3483794	0	True				
ANR	3483805	ParameterType	OnigWarnFunc		3483794	0					
ANR	3483806	Identifier	f		3483794	1					
ANR	3483807	CFGEntryNode	ENTRY		3483794		True				
ANR	3483808	CFGExitNode	EXIT		3483794		True				
ANR	3483809	Symbol	f		3483794						
ANR	3483810	Symbol	onig_verb_warn		3483794						
ANR	3483811	Function	bbuf_free	100:0:3908:4038							
ANR	3483812	FunctionDef	bbuf_free (BBuf * bbuf)		3483811	0					
ANR	3483813	CompoundStatement		102:0:3942:4038	3483811	0					
ANR	3483814	IfStatement	if ( IS_NOT_NULL ( bbuf ) )		3483811	0					
ANR	3483815	Condition	IS_NOT_NULL ( bbuf )	103:6:3950:3966	3483811	0	True				
ANR	3483816	CallExpression	IS_NOT_NULL ( bbuf )		3483811	0					
ANR	3483817	Callee	IS_NOT_NULL		3483811	0					
ANR	3483818	Identifier	IS_NOT_NULL		3483811	0					
ANR	3483819	ArgumentList	bbuf		3483811	1					
ANR	3483820	Argument	bbuf		3483811	0					
ANR	3483821	Identifier	bbuf		3483811	0					
ANR	3483822	CompoundStatement		2:25:26:26	3483811	1					
ANR	3483823	IfStatement	if ( IS_NOT_NULL ( bbuf -> p ) )		3483811	0					
ANR	3483824	Condition	IS_NOT_NULL ( bbuf -> p )	104:8:3979:3998	3483811	0	True				
ANR	3483825	CallExpression	IS_NOT_NULL ( bbuf -> p )		3483811	0					
ANR	3483826	Callee	IS_NOT_NULL		3483811	0					
ANR	3483827	Identifier	IS_NOT_NULL		3483811	0					
ANR	3483828	ArgumentList	bbuf -> p		3483811	1					
ANR	3483829	Argument	bbuf -> p		3483811	0					
ANR	3483830	PtrMemberAccess	bbuf -> p		3483811	0					
ANR	3483831	Identifier	bbuf		3483811	0					
ANR	3483832	Identifier	p		3483811	1					
ANR	3483833	ExpressionStatement	xfree ( bbuf -> p )	104:30:4001:4015	3483811	1	True				
ANR	3483834	CallExpression	xfree ( bbuf -> p )		3483811	0					
ANR	3483835	Callee	xfree		3483811	0					
ANR	3483836	Identifier	xfree		3483811	0					
ANR	3483837	ArgumentList	bbuf -> p		3483811	1					
ANR	3483838	Argument	bbuf -> p		3483811	0					
ANR	3483839	PtrMemberAccess	bbuf -> p		3483811	0					
ANR	3483840	Identifier	bbuf		3483811	0					
ANR	3483841	Identifier	p		3483811	1					
ANR	3483842	ExpressionStatement	xfree ( bbuf )	105:4:4021:4032	3483811	1	True				
ANR	3483843	CallExpression	xfree ( bbuf )		3483811	0					
ANR	3483844	Callee	xfree		3483811	0					
ANR	3483845	Identifier	xfree		3483811	0					
ANR	3483846	ArgumentList	bbuf		3483811	1					
ANR	3483847	Argument	bbuf		3483811	0					
ANR	3483848	Identifier	bbuf		3483811	0					
ANR	3483849	ReturnType	static void		3483811	1					
ANR	3483850	Identifier	bbuf_free		3483811	2					
ANR	3483851	ParameterList	BBuf * bbuf		3483811	3					
ANR	3483852	Parameter	BBuf * bbuf	101:10:3930:3939	3483811	0	True				
ANR	3483853	ParameterType	BBuf *		3483811	0					
ANR	3483854	Identifier	bbuf		3483811	1					
ANR	3483855	CFGEntryNode	ENTRY		3483811		True				
ANR	3483856	CFGExitNode	EXIT		3483811		True				
ANR	3483857	Symbol	IS_NOT_NULL		3483811						
ANR	3483858	Symbol	bbuf -> p		3483811						
ANR	3483859	Symbol	* bbuf		3483811						
ANR	3483860	Symbol	bbuf		3483811						
ANR	3483861	Function	bbuf_clone	109:0:4041:4322							
ANR	3483862	FunctionDef	"bbuf_clone (BBuf * * rto , BBuf * from)"		3483861	0					
ANR	3483863	CompoundStatement		111:0:4087:4322	3483861	0					
ANR	3483864	IdentifierDeclStatement	int r ;	112:2:4091:4096	3483861	0	True				
ANR	3483865	IdentifierDecl	r		3483861	0					
ANR	3483866	IdentifierDeclType	int		3483861	0					
ANR	3483867	Identifier	r		3483861	1					
ANR	3483868	IdentifierDeclStatement	BBuf * to ;	113:2:4100:4108	3483861	1	True				
ANR	3483869	IdentifierDecl	* to		3483861	0					
ANR	3483870	IdentifierDeclType	BBuf *		3483861	0					
ANR	3483871	Identifier	to		3483861	1					
ANR	3483872	ExpressionStatement	* rto = to = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )	115:2:4113:4154	3483861	2	True				
ANR	3483873	AssignmentExpression	* rto = to = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		3483861	0		=			
ANR	3483874	UnaryOperationExpression	* rto		3483861	0					
ANR	3483875	UnaryOperator	*		3483861	0					
ANR	3483876	Identifier	rto		3483861	1					
ANR	3483877	AssignmentExpression	to = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		3483861	1		=			
ANR	3483878	Identifier	to		3483861	0					
ANR	3483879	CastExpression	( BBuf * ) xmalloc ( sizeof ( BBuf ) )		3483861	1					
ANR	3483880	CastTarget	BBuf *		3483861	0					
ANR	3483881	CallExpression	xmalloc ( sizeof ( BBuf ) )		3483861	1					
ANR	3483882	Callee	xmalloc		3483861	0					
ANR	3483883	Identifier	xmalloc		3483861	0					
ANR	3483884	ArgumentList	sizeof ( BBuf )		3483861	1					
ANR	3483885	Argument	sizeof ( BBuf )		3483861	0					
ANR	3483886	SizeofExpression	sizeof ( BBuf )		3483861	0					
ANR	3483887	Sizeof	sizeof		3483861	0					
ANR	3483888	SizeofOperand	BBuf		3483861	1					
ANR	3483889	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( to )	116:2:4158:4186	3483861	3	True				
ANR	3483890	CallExpression	CHECK_NULL_RETURN_MEMERR ( to )		3483861	0					
ANR	3483891	Callee	CHECK_NULL_RETURN_MEMERR		3483861	0					
ANR	3483892	Identifier	CHECK_NULL_RETURN_MEMERR		3483861	0					
ANR	3483893	ArgumentList	to		3483861	1					
ANR	3483894	Argument	to		3483861	0					
ANR	3483895	Identifier	to		3483861	0					
ANR	3483896	ExpressionStatement	"r = BBUF_INIT ( to , from -> alloc )"	117:2:4190:4220	3483861	4	True				
ANR	3483897	AssignmentExpression	"r = BBUF_INIT ( to , from -> alloc )"		3483861	0		=			
ANR	3483898	Identifier	r		3483861	0					
ANR	3483899	CallExpression	"BBUF_INIT ( to , from -> alloc )"		3483861	1					
ANR	3483900	Callee	BBUF_INIT		3483861	0					
ANR	3483901	Identifier	BBUF_INIT		3483861	0					
ANR	3483902	ArgumentList	to		3483861	1					
ANR	3483903	Argument	to		3483861	0					
ANR	3483904	Identifier	to		3483861	0					
ANR	3483905	Argument	from -> alloc		3483861	1					
ANR	3483906	PtrMemberAccess	from -> alloc		3483861	0					
ANR	3483907	Identifier	from		3483861	0					
ANR	3483908	Identifier	alloc		3483861	1					
ANR	3483909	IfStatement	if ( r != 0 )		3483861	5					
ANR	3483910	Condition	r != 0	118:6:4228:4233	3483861	0	True				
ANR	3483911	EqualityExpression	r != 0		3483861	0		!=			
ANR	3483912	Identifier	r		3483861	0					
ANR	3483913	PrimaryExpression	0		3483861	1					
ANR	3483914	ReturnStatement	return r ;	118:14:4236:4244	3483861	1	True				
ANR	3483915	Identifier	r		3483861	0					
ANR	3483916	ExpressionStatement	to -> used = from -> used	119:2:4248:4269	3483861	6	True				
ANR	3483917	AssignmentExpression	to -> used = from -> used		3483861	0		=			
ANR	3483918	PtrMemberAccess	to -> used		3483861	0					
ANR	3483919	Identifier	to		3483861	0					
ANR	3483920	Identifier	used		3483861	1					
ANR	3483921	PtrMemberAccess	from -> used		3483861	1					
ANR	3483922	Identifier	from		3483861	0					
ANR	3483923	Identifier	used		3483861	1					
ANR	3483924	ExpressionStatement	"xmemcpy ( to -> p , from -> p , from -> used )"	120:2:4273:4308	3483861	7	True				
ANR	3483925	CallExpression	"xmemcpy ( to -> p , from -> p , from -> used )"		3483861	0					
ANR	3483926	Callee	xmemcpy		3483861	0					
ANR	3483927	Identifier	xmemcpy		3483861	0					
ANR	3483928	ArgumentList	to -> p		3483861	1					
ANR	3483929	Argument	to -> p		3483861	0					
ANR	3483930	PtrMemberAccess	to -> p		3483861	0					
ANR	3483931	Identifier	to		3483861	0					
ANR	3483932	Identifier	p		3483861	1					
ANR	3483933	Argument	from -> p		3483861	1					
ANR	3483934	PtrMemberAccess	from -> p		3483861	0					
ANR	3483935	Identifier	from		3483861	0					
ANR	3483936	Identifier	p		3483861	1					
ANR	3483937	Argument	from -> used		3483861	2					
ANR	3483938	PtrMemberAccess	from -> used		3483861	0					
ANR	3483939	Identifier	from		3483861	0					
ANR	3483940	Identifier	used		3483861	1					
ANR	3483941	ReturnStatement	return 0 ;	121:2:4312:4320	3483861	8	True				
ANR	3483942	PrimaryExpression	0		3483861	0					
ANR	3483943	ReturnType	static int		3483861	1					
ANR	3483944	Identifier	bbuf_clone		3483861	2					
ANR	3483945	ParameterList	"BBuf * * rto , BBuf * from"		3483861	3					
ANR	3483946	Parameter	BBuf * * rto	110:11:4063:4072	3483861	0	True				
ANR	3483947	ParameterType	BBuf * *		3483861	0					
ANR	3483948	Identifier	rto		3483861	1					
ANR	3483949	Parameter	BBuf * from	110:23:4075:4084	3483861	1	True				
ANR	3483950	ParameterType	BBuf *		3483861	0					
ANR	3483951	Identifier	from		3483861	1					
ANR	3483952	CFGEntryNode	ENTRY		3483861		True				
ANR	3483953	CFGExitNode	EXIT		3483861		True				
ANR	3483954	Symbol	from -> p		3483861						
ANR	3483955	Symbol	* to		3483861						
ANR	3483956	Symbol	from -> used		3483861						
ANR	3483957	Symbol	BBUF_INIT		3483861						
ANR	3483958	Symbol	rto		3483861						
ANR	3483959	Symbol	to -> used		3483861						
ANR	3483960	Symbol	r		3483861						
ANR	3483961	Symbol	to -> p		3483861						
ANR	3483962	Symbol	from -> alloc		3483861						
ANR	3483963	Symbol	xmalloc		3483861						
ANR	3483964	Symbol	* rto		3483861						
ANR	3483965	Symbol	from		3483861						
ANR	3483966	Symbol	to		3483861						
ANR	3483967	Symbol	* from		3483861						
ANR	3483968	DeclStmt									
ANR	3483969	Decl							int	int	i
ANR	3483970	Function	bitset_set_range	153:0:5053:5213							
ANR	3483971	FunctionDef	"bitset_set_range (BitSetRef bs , int from , int to)"		3483970	0					
ANR	3483972	CompoundStatement		155:0:5114:5213	3483970	0					
ANR	3483973	IdentifierDeclStatement	int i ;	156:2:5118:5123	3483970	0	True				
ANR	3483974	IdentifierDecl	i		3483970	0					
ANR	3483975	IdentifierDeclType	int		3483970	0					
ANR	3483976	Identifier	i		3483970	1					
ANR	3483977	ForStatement	for ( i = from ; i <= to && i < SINGLE_BYTE_SIZE ; i ++ )		3483970	1					
ANR	3483978	ForInit	i = from ;	157:7:5132:5140	3483970	0	True				
ANR	3483979	AssignmentExpression	i = from		3483970	0		=			
ANR	3483980	Identifier	i		3483970	0					
ANR	3483981	Identifier	from		3483970	1					
ANR	3483982	Condition	i <= to && i < SINGLE_BYTE_SIZE	157:17:5142:5172	3483970	1	True				
ANR	3483983	AndExpression	i <= to && i < SINGLE_BYTE_SIZE		3483970	0		&&			
ANR	3483984	RelationalExpression	i <= to		3483970	0		<=			
ANR	3483985	Identifier	i		3483970	0					
ANR	3483986	Identifier	to		3483970	1					
ANR	3483987	RelationalExpression	i < SINGLE_BYTE_SIZE		3483970	1		<			
ANR	3483988	Identifier	i		3483970	0					
ANR	3483989	Identifier	SINGLE_BYTE_SIZE		3483970	1					
ANR	3483990	PostIncDecOperationExpression	i ++	157:50:5175:5177	3483970	2	True				
ANR	3483991	Identifier	i		3483970	0					
ANR	3483992	IncDec	++		3483970	1					
ANR	3483993	CompoundStatement		3:55:65:65	3483970	3					
ANR	3483994	ExpressionStatement	"BITSET_SET_BIT ( bs , i )"	158:4:5186:5207	3483970	0	True				
ANR	3483995	CallExpression	"BITSET_SET_BIT ( bs , i )"		3483970	0					
ANR	3483996	Callee	BITSET_SET_BIT		3483970	0					
ANR	3483997	Identifier	BITSET_SET_BIT		3483970	0					
ANR	3483998	ArgumentList	bs		3483970	1					
ANR	3483999	Argument	bs		3483970	0					
ANR	3484000	Identifier	bs		3483970	0					
ANR	3484001	Argument	i		3483970	1					
ANR	3484002	Identifier	i		3483970	0					
ANR	3484003	ReturnType	static void		3483970	1					
ANR	3484004	Identifier	bitset_set_range		3483970	2					
ANR	3484005	ParameterList	"BitSetRef bs , int from , int to"		3483970	3					
ANR	3484006	Parameter	BitSetRef bs	154:17:5082:5093	3483970	0	True				
ANR	3484007	ParameterType	BitSetRef		3483970	0					
ANR	3484008	Identifier	bs		3483970	1					
ANR	3484009	Parameter	int from	154:31:5096:5103	3483970	1	True				
ANR	3484010	ParameterType	int		3483970	0					
ANR	3484011	Identifier	from		3483970	1					
ANR	3484012	Parameter	int to	154:41:5106:5111	3483970	2	True				
ANR	3484013	ParameterType	int		3483970	0					
ANR	3484014	Identifier	to		3483970	1					
ANR	3484015	CFGEntryNode	ENTRY		3483970		True				
ANR	3484016	CFGExitNode	EXIT		3483970		True				
ANR	3484017	Symbol	SINGLE_BYTE_SIZE		3483970						
ANR	3484018	Symbol	bs		3483970						
ANR	3484019	Symbol	i		3483970						
ANR	3484020	Symbol	from		3483970						
ANR	3484021	Symbol	to		3483970						
ANR	3484022	Function	bitset_set_all	163:0:5222:5335							
ANR	3484023	FunctionDef	bitset_set_all (BitSetRef bs)		3484022	0					
ANR	3484024	CompoundStatement		165:0:5263:5335	3484022	0					
ANR	3484025	IdentifierDeclStatement	int i ;	166:2:5267:5272	3484022	0	True				
ANR	3484026	IdentifierDecl	i		3484022	0					
ANR	3484027	IdentifierDeclType	int		3484022	0					
ANR	3484028	Identifier	i		3484022	1					
ANR	3484029	ForStatement	for ( i = 0 ; i < BITSET_SIZE ; i ++ )		3484022	1					
ANR	3484030	ForInit	i = 0 ;	167:7:5281:5286	3484022	0	True				
ANR	3484031	AssignmentExpression	i = 0		3484022	0		=			
ANR	3484032	Identifier	i		3484022	0					
ANR	3484033	PrimaryExpression	0		3484022	1					
ANR	3484034	Condition	i < BITSET_SIZE	167:14:5288:5302	3484022	1	True				
ANR	3484035	RelationalExpression	i < BITSET_SIZE		3484022	0		<			
ANR	3484036	Identifier	i		3484022	0					
ANR	3484037	Identifier	BITSET_SIZE		3484022	1					
ANR	3484038	PostIncDecOperationExpression	i ++	167:31:5305:5307	3484022	2	True				
ANR	3484039	Identifier	i		3484022	0					
ANR	3484040	IncDec	++		3484022	1					
ANR	3484041	CompoundStatement		3:36:46:46	3484022	3					
ANR	3484042	ExpressionStatement	bs [ i ] = ~ ( ( Bits ) 0 )	167:38:5312:5331	3484022	0	True				
ANR	3484043	AssignmentExpression	bs [ i ] = ~ ( ( Bits ) 0 )		3484022	0		=			
ANR	3484044	ArrayIndexing	bs [ i ]		3484022	0					
ANR	3484045	Identifier	bs		3484022	0					
ANR	3484046	Identifier	i		3484022	1					
ANR	3484047	UnaryOperationExpression	~ ( ( Bits ) 0 )		3484022	1					
ANR	3484048	UnaryOperator	~		3484022	0					
ANR	3484049	CastExpression	( Bits ) 0		3484022	1					
ANR	3484050	CastTarget	Bits		3484022	0					
ANR	3484051	PrimaryExpression	0		3484022	1					
ANR	3484052	ReturnType	static void		3484022	1					
ANR	3484053	Identifier	bitset_set_all		3484022	2					
ANR	3484054	ParameterList	BitSetRef bs		3484022	3					
ANR	3484055	Parameter	BitSetRef bs	164:15:5249:5260	3484022	0	True				
ANR	3484056	ParameterType	BitSetRef		3484022	0					
ANR	3484057	Identifier	bs		3484022	1					
ANR	3484058	CFGEntryNode	ENTRY		3484022		True				
ANR	3484059	CFGExitNode	EXIT		3484022		True				
ANR	3484060	Symbol	bs		3484022						
ANR	3484061	Symbol	* i		3484022						
ANR	3484062	Symbol	* bs		3484022						
ANR	3484063	Symbol	BITSET_SIZE		3484022						
ANR	3484064	Symbol	i		3484022						
ANR	3484065	Function	bitset_invert	171:0:5345:5460							
ANR	3484066	FunctionDef	bitset_invert (BitSetRef bs)		3484065	0					
ANR	3484067	CompoundStatement		173:0:5385:5460	3484065	0					
ANR	3484068	IdentifierDeclStatement	int i ;	174:2:5389:5394	3484065	0	True				
ANR	3484069	IdentifierDecl	i		3484065	0					
ANR	3484070	IdentifierDeclType	int		3484065	0					
ANR	3484071	Identifier	i		3484065	1					
ANR	3484072	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		3484065	1					
ANR	3484073	ForInit	i = 0 ;	175:7:5403:5408	3484065	0	True				
ANR	3484074	AssignmentExpression	i = 0		3484065	0		=			
ANR	3484075	Identifier	i		3484065	0					
ANR	3484076	PrimaryExpression	0		3484065	1					
ANR	3484077	Condition	i < ( int ) BITSET_SIZE	175:14:5410:5430	3484065	1	True				
ANR	3484078	RelationalExpression	i < ( int ) BITSET_SIZE		3484065	0		<			
ANR	3484079	Identifier	i		3484065	0					
ANR	3484080	CastExpression	( int ) BITSET_SIZE		3484065	1					
ANR	3484081	CastTarget	int		3484065	0					
ANR	3484082	Identifier	BITSET_SIZE		3484065	1					
ANR	3484083	PostIncDecOperationExpression	i ++	175:37:5433:5435	3484065	2	True				
ANR	3484084	Identifier	i		3484065	0					
ANR	3484085	IncDec	++		3484065	1					
ANR	3484086	CompoundStatement		3:42:52:52	3484065	3					
ANR	3484087	ExpressionStatement	bs [ i ] = ~ ( bs [ i ] )	175:44:5440:5456	3484065	0	True				
ANR	3484088	AssignmentExpression	bs [ i ] = ~ ( bs [ i ] )		3484065	0		=			
ANR	3484089	ArrayIndexing	bs [ i ]		3484065	0					
ANR	3484090	Identifier	bs		3484065	0					
ANR	3484091	Identifier	i		3484065	1					
ANR	3484092	UnaryOperationExpression	~ ( bs [ i ] )		3484065	1					
ANR	3484093	UnaryOperator	~		3484065	0					
ANR	3484094	ArrayIndexing	bs [ i ]		3484065	1					
ANR	3484095	Identifier	bs		3484065	0					
ANR	3484096	Identifier	i		3484065	1					
ANR	3484097	ReturnType	static void		3484065	1					
ANR	3484098	Identifier	bitset_invert		3484065	2					
ANR	3484099	ParameterList	BitSetRef bs		3484065	3					
ANR	3484100	Parameter	BitSetRef bs	172:14:5371:5382	3484065	0	True				
ANR	3484101	ParameterType	BitSetRef		3484065	0					
ANR	3484102	Identifier	bs		3484065	1					
ANR	3484103	CFGEntryNode	ENTRY		3484065		True				
ANR	3484104	CFGExitNode	EXIT		3484065		True				
ANR	3484105	Symbol	bs		3484065						
ANR	3484106	Symbol	* i		3484065						
ANR	3484107	Symbol	* bs		3484065						
ANR	3484108	Symbol	BITSET_SIZE		3484065						
ANR	3484109	Symbol	i		3484065						
ANR	3484110	Function	bitset_invert_to	178:0:5463:5599							
ANR	3484111	FunctionDef	"bitset_invert_to (BitSetRef from , BitSetRef to)"		3484110	0					
ANR	3484112	CompoundStatement		180:0:5522:5599	3484110	0					
ANR	3484113	IdentifierDeclStatement	int i ;	181:2:5526:5531	3484110	0	True				
ANR	3484114	IdentifierDecl	i		3484110	0					
ANR	3484115	IdentifierDeclType	int		3484110	0					
ANR	3484116	Identifier	i		3484110	1					
ANR	3484117	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		3484110	1					
ANR	3484118	ForInit	i = 0 ;	182:7:5540:5545	3484110	0	True				
ANR	3484119	AssignmentExpression	i = 0		3484110	0		=			
ANR	3484120	Identifier	i		3484110	0					
ANR	3484121	PrimaryExpression	0		3484110	1					
ANR	3484122	Condition	i < ( int ) BITSET_SIZE	182:14:5547:5567	3484110	1	True				
ANR	3484123	RelationalExpression	i < ( int ) BITSET_SIZE		3484110	0		<			
ANR	3484124	Identifier	i		3484110	0					
ANR	3484125	CastExpression	( int ) BITSET_SIZE		3484110	1					
ANR	3484126	CastTarget	int		3484110	0					
ANR	3484127	Identifier	BITSET_SIZE		3484110	1					
ANR	3484128	PostIncDecOperationExpression	i ++	182:37:5570:5572	3484110	2	True				
ANR	3484129	Identifier	i		3484110	0					
ANR	3484130	IncDec	++		3484110	1					
ANR	3484131	CompoundStatement		3:42:52:52	3484110	3					
ANR	3484132	ExpressionStatement	to [ i ] = ~ ( from [ i ] )	182:44:5577:5595	3484110	0	True				
ANR	3484133	AssignmentExpression	to [ i ] = ~ ( from [ i ] )		3484110	0		=			
ANR	3484134	ArrayIndexing	to [ i ]		3484110	0					
ANR	3484135	Identifier	to		3484110	0					
ANR	3484136	Identifier	i		3484110	1					
ANR	3484137	UnaryOperationExpression	~ ( from [ i ] )		3484110	1					
ANR	3484138	UnaryOperator	~		3484110	0					
ANR	3484139	ArrayIndexing	from [ i ]		3484110	1					
ANR	3484140	Identifier	from		3484110	0					
ANR	3484141	Identifier	i		3484110	1					
ANR	3484142	ReturnType	static void		3484110	1					
ANR	3484143	Identifier	bitset_invert_to		3484110	2					
ANR	3484144	ParameterList	"BitSetRef from , BitSetRef to"		3484110	3					
ANR	3484145	Parameter	BitSetRef from	179:17:5492:5505	3484110	0	True				
ANR	3484146	ParameterType	BitSetRef		3484110	0					
ANR	3484147	Identifier	from		3484110	1					
ANR	3484148	Parameter	BitSetRef to	179:33:5508:5519	3484110	1	True				
ANR	3484149	ParameterType	BitSetRef		3484110	0					
ANR	3484150	Identifier	to		3484110	1					
ANR	3484151	CFGEntryNode	ENTRY		3484110		True				
ANR	3484152	CFGExitNode	EXIT		3484110		True				
ANR	3484153	Symbol	* to		3484110						
ANR	3484154	Symbol	* i		3484110						
ANR	3484155	Symbol	BITSET_SIZE		3484110						
ANR	3484156	Symbol	i		3484110						
ANR	3484157	Symbol	from		3484110						
ANR	3484158	Symbol	to		3484110						
ANR	3484159	Symbol	* from		3484110						
ANR	3484160	Function	bitset_and	185:0:5602:5730							
ANR	3484161	FunctionDef	"bitset_and (BitSetRef dest , BitSetRef bs)"		3484160	0					
ANR	3484162	CompoundStatement		187:0:5655:5730	3484160	0					
ANR	3484163	IdentifierDeclStatement	int i ;	188:2:5659:5664	3484160	0	True				
ANR	3484164	IdentifierDecl	i		3484160	0					
ANR	3484165	IdentifierDeclType	int		3484160	0					
ANR	3484166	Identifier	i		3484160	1					
ANR	3484167	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		3484160	1					
ANR	3484168	ForInit	i = 0 ;	189:7:5673:5678	3484160	0	True				
ANR	3484169	AssignmentExpression	i = 0		3484160	0		=			
ANR	3484170	Identifier	i		3484160	0					
ANR	3484171	PrimaryExpression	0		3484160	1					
ANR	3484172	Condition	i < ( int ) BITSET_SIZE	189:14:5680:5700	3484160	1	True				
ANR	3484173	RelationalExpression	i < ( int ) BITSET_SIZE		3484160	0		<			
ANR	3484174	Identifier	i		3484160	0					
ANR	3484175	CastExpression	( int ) BITSET_SIZE		3484160	1					
ANR	3484176	CastTarget	int		3484160	0					
ANR	3484177	Identifier	BITSET_SIZE		3484160	1					
ANR	3484178	PostIncDecOperationExpression	i ++	189:37:5703:5705	3484160	2	True				
ANR	3484179	Identifier	i		3484160	0					
ANR	3484180	IncDec	++		3484160	1					
ANR	3484181	CompoundStatement		3:42:52:52	3484160	3					
ANR	3484182	ExpressionStatement	dest [ i ] &= bs [ i ]	189:44:5710:5726	3484160	0	True				
ANR	3484183	AssignmentExpression	dest [ i ] &= bs [ i ]		3484160	0		&=			
ANR	3484184	ArrayIndexing	dest [ i ]		3484160	0					
ANR	3484185	Identifier	dest		3484160	0					
ANR	3484186	Identifier	i		3484160	1					
ANR	3484187	ArrayIndexing	bs [ i ]		3484160	1					
ANR	3484188	Identifier	bs		3484160	0					
ANR	3484189	Identifier	i		3484160	1					
ANR	3484190	ReturnType	static void		3484160	1					
ANR	3484191	Identifier	bitset_and		3484160	2					
ANR	3484192	ParameterList	"BitSetRef dest , BitSetRef bs"		3484160	3					
ANR	3484193	Parameter	BitSetRef dest	186:11:5625:5638	3484160	0	True				
ANR	3484194	ParameterType	BitSetRef		3484160	0					
ANR	3484195	Identifier	dest		3484160	1					
ANR	3484196	Parameter	BitSetRef bs	186:27:5641:5652	3484160	1	True				
ANR	3484197	ParameterType	BitSetRef		3484160	0					
ANR	3484198	Identifier	bs		3484160	1					
ANR	3484199	CFGEntryNode	ENTRY		3484160		True				
ANR	3484200	CFGExitNode	EXIT		3484160		True				
ANR	3484201	Symbol	bs		3484160						
ANR	3484202	Symbol	* i		3484160						
ANR	3484203	Symbol	* bs		3484160						
ANR	3484204	Symbol	* dest		3484160						
ANR	3484205	Symbol	BITSET_SIZE		3484160						
ANR	3484206	Symbol	i		3484160						
ANR	3484207	Symbol	dest		3484160						
ANR	3484208	Function	bitset_or	192:0:5733:5860							
ANR	3484209	FunctionDef	"bitset_or (BitSetRef dest , BitSetRef bs)"		3484208	0					
ANR	3484210	CompoundStatement		194:0:5785:5860	3484208	0					
ANR	3484211	IdentifierDeclStatement	int i ;	195:2:5789:5794	3484208	0	True				
ANR	3484212	IdentifierDecl	i		3484208	0					
ANR	3484213	IdentifierDeclType	int		3484208	0					
ANR	3484214	Identifier	i		3484208	1					
ANR	3484215	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		3484208	1					
ANR	3484216	ForInit	i = 0 ;	196:7:5803:5808	3484208	0	True				
ANR	3484217	AssignmentExpression	i = 0		3484208	0		=			
ANR	3484218	Identifier	i		3484208	0					
ANR	3484219	PrimaryExpression	0		3484208	1					
ANR	3484220	Condition	i < ( int ) BITSET_SIZE	196:14:5810:5830	3484208	1	True				
ANR	3484221	RelationalExpression	i < ( int ) BITSET_SIZE		3484208	0		<			
ANR	3484222	Identifier	i		3484208	0					
ANR	3484223	CastExpression	( int ) BITSET_SIZE		3484208	1					
ANR	3484224	CastTarget	int		3484208	0					
ANR	3484225	Identifier	BITSET_SIZE		3484208	1					
ANR	3484226	PostIncDecOperationExpression	i ++	196:37:5833:5835	3484208	2	True				
ANR	3484227	Identifier	i		3484208	0					
ANR	3484228	IncDec	++		3484208	1					
ANR	3484229	CompoundStatement		3:42:52:52	3484208	3					
ANR	3484230	ExpressionStatement	dest [ i ] |= bs [ i ]	196:44:5840:5856	3484208	0	True				
ANR	3484231	AssignmentExpression	dest [ i ] |= bs [ i ]		3484208	0		|=			
ANR	3484232	ArrayIndexing	dest [ i ]		3484208	0					
ANR	3484233	Identifier	dest		3484208	0					
ANR	3484234	Identifier	i		3484208	1					
ANR	3484235	ArrayIndexing	bs [ i ]		3484208	1					
ANR	3484236	Identifier	bs		3484208	0					
ANR	3484237	Identifier	i		3484208	1					
ANR	3484238	ReturnType	static void		3484208	1					
ANR	3484239	Identifier	bitset_or		3484208	2					
ANR	3484240	ParameterList	"BitSetRef dest , BitSetRef bs"		3484208	3					
ANR	3484241	Parameter	BitSetRef dest	193:10:5755:5768	3484208	0	True				
ANR	3484242	ParameterType	BitSetRef		3484208	0					
ANR	3484243	Identifier	dest		3484208	1					
ANR	3484244	Parameter	BitSetRef bs	193:26:5771:5782	3484208	1	True				
ANR	3484245	ParameterType	BitSetRef		3484208	0					
ANR	3484246	Identifier	bs		3484208	1					
ANR	3484247	CFGEntryNode	ENTRY		3484208		True				
ANR	3484248	CFGExitNode	EXIT		3484208		True				
ANR	3484249	Symbol	bs		3484208						
ANR	3484250	Symbol	* i		3484208						
ANR	3484251	Symbol	* bs		3484208						
ANR	3484252	Symbol	* dest		3484208						
ANR	3484253	Symbol	BITSET_SIZE		3484208						
ANR	3484254	Symbol	i		3484208						
ANR	3484255	Symbol	dest		3484208						
ANR	3484256	Function	bitset_copy	199:0:5863:5991							
ANR	3484257	FunctionDef	"bitset_copy (BitSetRef dest , BitSetRef bs)"		3484256	0					
ANR	3484258	CompoundStatement		201:0:5917:5991	3484256	0					
ANR	3484259	IdentifierDeclStatement	int i ;	202:2:5921:5926	3484256	0	True				
ANR	3484260	IdentifierDecl	i		3484256	0					
ANR	3484261	IdentifierDeclType	int		3484256	0					
ANR	3484262	Identifier	i		3484256	1					
ANR	3484263	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		3484256	1					
ANR	3484264	ForInit	i = 0 ;	203:7:5935:5940	3484256	0	True				
ANR	3484265	AssignmentExpression	i = 0		3484256	0		=			
ANR	3484266	Identifier	i		3484256	0					
ANR	3484267	PrimaryExpression	0		3484256	1					
ANR	3484268	Condition	i < ( int ) BITSET_SIZE	203:14:5942:5962	3484256	1	True				
ANR	3484269	RelationalExpression	i < ( int ) BITSET_SIZE		3484256	0		<			
ANR	3484270	Identifier	i		3484256	0					
ANR	3484271	CastExpression	( int ) BITSET_SIZE		3484256	1					
ANR	3484272	CastTarget	int		3484256	0					
ANR	3484273	Identifier	BITSET_SIZE		3484256	1					
ANR	3484274	PostIncDecOperationExpression	i ++	203:37:5965:5967	3484256	2	True				
ANR	3484275	Identifier	i		3484256	0					
ANR	3484276	IncDec	++		3484256	1					
ANR	3484277	CompoundStatement		3:42:52:52	3484256	3					
ANR	3484278	ExpressionStatement	dest [ i ] = bs [ i ]	203:44:5972:5987	3484256	0	True				
ANR	3484279	AssignmentExpression	dest [ i ] = bs [ i ]		3484256	0		=			
ANR	3484280	ArrayIndexing	dest [ i ]		3484256	0					
ANR	3484281	Identifier	dest		3484256	0					
ANR	3484282	Identifier	i		3484256	1					
ANR	3484283	ArrayIndexing	bs [ i ]		3484256	1					
ANR	3484284	Identifier	bs		3484256	0					
ANR	3484285	Identifier	i		3484256	1					
ANR	3484286	ReturnType	static void		3484256	1					
ANR	3484287	Identifier	bitset_copy		3484256	2					
ANR	3484288	ParameterList	"BitSetRef dest , BitSetRef bs"		3484256	3					
ANR	3484289	Parameter	BitSetRef dest	200:12:5887:5900	3484256	0	True				
ANR	3484290	ParameterType	BitSetRef		3484256	0					
ANR	3484291	Identifier	dest		3484256	1					
ANR	3484292	Parameter	BitSetRef bs	200:28:5903:5914	3484256	1	True				
ANR	3484293	ParameterType	BitSetRef		3484256	0					
ANR	3484294	Identifier	bs		3484256	1					
ANR	3484295	CFGEntryNode	ENTRY		3484256		True				
ANR	3484296	CFGExitNode	EXIT		3484256		True				
ANR	3484297	Symbol	bs		3484256						
ANR	3484298	Symbol	* i		3484256						
ANR	3484299	Symbol	* bs		3484256						
ANR	3484300	Symbol	* dest		3484256						
ANR	3484301	Symbol	BITSET_SIZE		3484256						
ANR	3484302	Symbol	i		3484256						
ANR	3484303	Symbol	dest		3484256						
ANR	3484304	Function	onig_strncmp	206:0:5994:6151							
ANR	3484305	FunctionDef	"onig_strncmp (const UChar * s1 , const UChar * s2 , int n)"		3484304	0					
ANR	3484306	CompoundStatement		208:0:6059:6151	3484304	0					
ANR	3484307	IdentifierDeclStatement	int x ;	209:2:6063:6068	3484304	0	True				
ANR	3484308	IdentifierDecl	x		3484304	0					
ANR	3484309	IdentifierDeclType	int		3484304	0					
ANR	3484310	Identifier	x		3484304	1					
ANR	3484311	WhileStatement	while ( n -- > 0 )		3484304	1					
ANR	3484312	Condition	n -- > 0	211:9:6080:6086	3484304	0	True				
ANR	3484313	RelationalExpression	n -- > 0		3484304	0		>			
ANR	3484314	PostIncDecOperationExpression	n --		3484304	0					
ANR	3484315	Identifier	n		3484304	0					
ANR	3484316	IncDec	--		3484304	1					
ANR	3484317	PrimaryExpression	0		3484304	1					
ANR	3484318	CompoundStatement		4:18:29:29	3484304	1					
ANR	3484319	ExpressionStatement	x = * s2 ++ - * s1 ++	212:4:6095:6112	3484304	0	True				
ANR	3484320	AssignmentExpression	x = * s2 ++ - * s1 ++		3484304	0		=			
ANR	3484321	Identifier	x		3484304	0					
ANR	3484322	AdditiveExpression	* s2 ++ - * s1 ++		3484304	1		-			
ANR	3484323	UnaryOperationExpression	* s2 ++		3484304	0					
ANR	3484324	UnaryOperator	*		3484304	0					
ANR	3484325	PostIncDecOperationExpression	s2 ++		3484304	1					
ANR	3484326	Identifier	s2		3484304	0					
ANR	3484327	IncDec	++		3484304	1					
ANR	3484328	UnaryOperationExpression	* s1 ++		3484304	1					
ANR	3484329	UnaryOperator	*		3484304	0					
ANR	3484330	PostIncDecOperationExpression	s1 ++		3484304	1					
ANR	3484331	Identifier	s1		3484304	0					
ANR	3484332	IncDec	++		3484304	1					
ANR	3484333	IfStatement	if ( x )		3484304	1					
ANR	3484334	Condition	x	213:8:6122:6122	3484304	0	True				
ANR	3484335	Identifier	x		3484304	0					
ANR	3484336	ReturnStatement	return x ;	213:11:6125:6133	3484304	1	True				
ANR	3484337	Identifier	x		3484304	0					
ANR	3484338	ReturnStatement	return 0 ;	215:2:6141:6149	3484304	2	True				
ANR	3484339	PrimaryExpression	0		3484304	0					
ANR	3484340	ReturnType	extern int		3484304	1					
ANR	3484341	Identifier	onig_strncmp		3484304	2					
ANR	3484342	ParameterList	"const UChar * s1 , const UChar * s2 , int n"		3484304	3					
ANR	3484343	Parameter	const UChar * s1	207:13:6018:6032	3484304	0	True				
ANR	3484344	ParameterType	const UChar *		3484304	0					
ANR	3484345	Identifier	s1		3484304	1					
ANR	3484346	Parameter	const UChar * s2	207:30:6035:6049	3484304	1	True				
ANR	3484347	ParameterType	const UChar *		3484304	0					
ANR	3484348	Identifier	s2		3484304	1					
ANR	3484349	Parameter	int n	207:47:6052:6056	3484304	2	True				
ANR	3484350	ParameterType	int		3484304	0					
ANR	3484351	Identifier	n		3484304	1					
ANR	3484352	CFGEntryNode	ENTRY		3484304		True				
ANR	3484353	CFGExitNode	EXIT		3484304		True				
ANR	3484354	Symbol	* s1 ++		3484304						
ANR	3484355	Symbol	* s2 ++		3484304						
ANR	3484356	Symbol	x		3484304						
ANR	3484357	Symbol	s1		3484304						
ANR	3484358	Symbol	n		3484304						
ANR	3484359	Symbol	s2		3484304						
ANR	3484360	Function	onig_strcpy	218:0:6154:6329							
ANR	3484361	FunctionDef	"onig_strcpy (UChar * dest , const UChar * src , const UChar * end)"		3484360	0					
ANR	3484362	CompoundStatement		220:0:6227:6329	3484360	0					
ANR	3484363	IdentifierDeclStatement	int len = end - src ;	221:2:6231:6250	3484360	0	True				
ANR	3484364	IdentifierDecl	len = end - src		3484360	0					
ANR	3484365	IdentifierDeclType	int		3484360	0					
ANR	3484366	Identifier	len		3484360	1					
ANR	3484367	AssignmentExpression	len = end - src		3484360	2		=			
ANR	3484368	Identifier	len		3484360	0					
ANR	3484369	AdditiveExpression	end - src		3484360	1		-			
ANR	3484370	Identifier	end		3484360	0					
ANR	3484371	Identifier	src		3484360	1					
ANR	3484372	IfStatement	if ( len > 0 )		3484360	1					
ANR	3484373	Condition	len > 0	222:6:6258:6264	3484360	0	True				
ANR	3484374	RelationalExpression	len > 0		3484360	0		>			
ANR	3484375	Identifier	len		3484360	0					
ANR	3484376	PrimaryExpression	0		3484360	1					
ANR	3484377	CompoundStatement		3:15:39:39	3484360	1					
ANR	3484378	ExpressionStatement	"xmemcpy ( dest , src , len )"	223:4:6273:6296	3484360	0	True				
ANR	3484379	CallExpression	"xmemcpy ( dest , src , len )"		3484360	0					
ANR	3484380	Callee	xmemcpy		3484360	0					
ANR	3484381	Identifier	xmemcpy		3484360	0					
ANR	3484382	ArgumentList	dest		3484360	1					
ANR	3484383	Argument	dest		3484360	0					
ANR	3484384	Identifier	dest		3484360	0					
ANR	3484385	Argument	src		3484360	1					
ANR	3484386	Identifier	src		3484360	0					
ANR	3484387	Argument	len		3484360	2					
ANR	3484388	Identifier	len		3484360	0					
ANR	3484389	ExpressionStatement	dest [ len ] = ( UChar ) 0	224:4:6302:6323	3484360	1	True				
ANR	3484390	AssignmentExpression	dest [ len ] = ( UChar ) 0		3484360	0		=			
ANR	3484391	ArrayIndexing	dest [ len ]		3484360	0					
ANR	3484392	Identifier	dest		3484360	0					
ANR	3484393	Identifier	len		3484360	1					
ANR	3484394	CastExpression	( UChar ) 0		3484360	1					
ANR	3484395	CastTarget	UChar		3484360	0					
ANR	3484396	PrimaryExpression	0		3484360	1					
ANR	3484397	ReturnType	extern void		3484360	1					
ANR	3484398	Identifier	onig_strcpy		3484360	2					
ANR	3484399	ParameterList	"UChar * dest , const UChar * src , const UChar * end"		3484360	3					
ANR	3484400	Parameter	UChar * dest	219:12:6178:6188	3484360	0	True				
ANR	3484401	ParameterType	UChar *		3484360	0					
ANR	3484402	Identifier	dest		3484360	1					
ANR	3484403	Parameter	const UChar * src	219:25:6191:6206	3484360	1	True				
ANR	3484404	ParameterType	const UChar *		3484360	0					
ANR	3484405	Identifier	src		3484360	1					
ANR	3484406	Parameter	const UChar * end	219:43:6209:6224	3484360	2	True				
ANR	3484407	ParameterType	const UChar *		3484360	0					
ANR	3484408	Identifier	end		3484360	1					
ANR	3484409	CFGEntryNode	ENTRY		3484360		True				
ANR	3484410	CFGExitNode	EXIT		3484360		True				
ANR	3484411	Symbol	len		3484360						
ANR	3484412	Symbol	src		3484360						
ANR	3484413	Symbol	* dest		3484360						
ANR	3484414	Symbol	end		3484360						
ANR	3484415	Symbol	dest		3484360						
ANR	3484416	Symbol	* len		3484360						
ANR	3484417	Function	strdup_with_null	229:0:6355:6687							
ANR	3484418	FunctionDef	"strdup_with_null (OnigEncoding enc , UChar * s , UChar * end)"		3484417	0					
ANR	3484419	CompoundStatement		231:0:6426:6687	3484417	0					
ANR	3484420	IdentifierDeclStatement	"int slen , term_len , i ;"	232:2:6430:6451	3484417	0	True				
ANR	3484421	IdentifierDecl	slen		3484417	0					
ANR	3484422	IdentifierDeclType	int		3484417	0					
ANR	3484423	Identifier	slen		3484417	1					
ANR	3484424	IdentifierDecl	term_len		3484417	1					
ANR	3484425	IdentifierDeclType	int		3484417	0					
ANR	3484426	Identifier	term_len		3484417	1					
ANR	3484427	IdentifierDecl	i		3484417	2					
ANR	3484428	IdentifierDeclType	int		3484417	0					
ANR	3484429	Identifier	i		3484417	1					
ANR	3484430	IdentifierDeclStatement	UChar * r ;	233:2:6455:6463	3484417	1	True				
ANR	3484431	IdentifierDecl	* r		3484417	0					
ANR	3484432	IdentifierDeclType	UChar *		3484417	0					
ANR	3484433	Identifier	r		3484417	1					
ANR	3484434	ExpressionStatement	slen = end - s	235:2:6468:6482	3484417	2	True				
ANR	3484435	AssignmentExpression	slen = end - s		3484417	0		=			
ANR	3484436	Identifier	slen		3484417	0					
ANR	3484437	AdditiveExpression	end - s		3484417	1		-			
ANR	3484438	Identifier	end		3484417	0					
ANR	3484439	Identifier	s		3484417	1					
ANR	3484440	ExpressionStatement	term_len = ONIGENC_MBC_MINLEN ( enc )	236:2:6486:6520	3484417	3	True				
ANR	3484441	AssignmentExpression	term_len = ONIGENC_MBC_MINLEN ( enc )		3484417	0		=			
ANR	3484442	Identifier	term_len		3484417	0					
ANR	3484443	CallExpression	ONIGENC_MBC_MINLEN ( enc )		3484417	1					
ANR	3484444	Callee	ONIGENC_MBC_MINLEN		3484417	0					
ANR	3484445	Identifier	ONIGENC_MBC_MINLEN		3484417	0					
ANR	3484446	ArgumentList	enc		3484417	1					
ANR	3484447	Argument	enc		3484417	0					
ANR	3484448	Identifier	enc		3484417	0					
ANR	3484449	ExpressionStatement	r = ( UChar * ) xmalloc ( slen + term_len )	238:2:6525:6562	3484417	4	True				
ANR	3484450	AssignmentExpression	r = ( UChar * ) xmalloc ( slen + term_len )		3484417	0		=			
ANR	3484451	Identifier	r		3484417	0					
ANR	3484452	CastExpression	( UChar * ) xmalloc ( slen + term_len )		3484417	1					
ANR	3484453	CastTarget	UChar *		3484417	0					
ANR	3484454	CallExpression	xmalloc ( slen + term_len )		3484417	1					
ANR	3484455	Callee	xmalloc		3484417	0					
ANR	3484456	Identifier	xmalloc		3484417	0					
ANR	3484457	ArgumentList	slen + term_len		3484417	1					
ANR	3484458	Argument	slen + term_len		3484417	0					
ANR	3484459	AdditiveExpression	slen + term_len		3484417	0		+			
ANR	3484460	Identifier	slen		3484417	0					
ANR	3484461	Identifier	term_len		3484417	1					
ANR	3484462	ExpressionStatement	CHECK_NULL_RETURN ( r )	239:2:6566:6586	3484417	5	True				
ANR	3484463	CallExpression	CHECK_NULL_RETURN ( r )		3484417	0					
ANR	3484464	Callee	CHECK_NULL_RETURN		3484417	0					
ANR	3484465	Identifier	CHECK_NULL_RETURN		3484417	0					
ANR	3484466	ArgumentList	r		3484417	1					
ANR	3484467	Argument	r		3484417	0					
ANR	3484468	Identifier	r		3484417	0					
ANR	3484469	ExpressionStatement	"xmemcpy ( r , s , slen )"	240:2:6590:6609	3484417	6	True				
ANR	3484470	CallExpression	"xmemcpy ( r , s , slen )"		3484417	0					
ANR	3484471	Callee	xmemcpy		3484417	0					
ANR	3484472	Identifier	xmemcpy		3484417	0					
ANR	3484473	ArgumentList	r		3484417	1					
ANR	3484474	Argument	r		3484417	0					
ANR	3484475	Identifier	r		3484417	0					
ANR	3484476	Argument	s		3484417	1					
ANR	3484477	Identifier	s		3484417	0					
ANR	3484478	Argument	slen		3484417	2					
ANR	3484479	Identifier	slen		3484417	0					
ANR	3484480	ForStatement	for ( i = 0 ; i < term_len ; i ++ )		3484417	7					
ANR	3484481	ForInit	i = 0 ;	242:7:6619:6624	3484417	0	True				
ANR	3484482	AssignmentExpression	i = 0		3484417	0		=			
ANR	3484483	Identifier	i		3484417	0					
ANR	3484484	PrimaryExpression	0		3484417	1					
ANR	3484485	Condition	i < term_len	242:14:6626:6637	3484417	1	True				
ANR	3484486	RelationalExpression	i < term_len		3484417	0		<			
ANR	3484487	Identifier	i		3484417	0					
ANR	3484488	Identifier	term_len		3484417	1					
ANR	3484489	PostIncDecOperationExpression	i ++	242:28:6640:6642	3484417	2	True				
ANR	3484490	Identifier	i		3484417	0					
ANR	3484491	IncDec	++		3484417	1					
ANR	3484492	ExpressionStatement	r [ slen + i ] = ( UChar ) 0	243:4:6649:6672	3484417	3	True				
ANR	3484493	AssignmentExpression	r [ slen + i ] = ( UChar ) 0		3484417	0		=			
ANR	3484494	ArrayIndexing	r [ slen + i ]		3484417	0					
ANR	3484495	Identifier	r		3484417	0					
ANR	3484496	AdditiveExpression	slen + i		3484417	1		+			
ANR	3484497	Identifier	slen		3484417	0					
ANR	3484498	Identifier	i		3484417	1					
ANR	3484499	CastExpression	( UChar ) 0		3484417	1					
ANR	3484500	CastTarget	UChar		3484417	0					
ANR	3484501	PrimaryExpression	0		3484417	1					
ANR	3484502	ReturnStatement	return r ;	245:2:6677:6685	3484417	8	True				
ANR	3484503	Identifier	r		3484417	0					
ANR	3484504	ReturnType	static UChar *		3484417	1					
ANR	3484505	Identifier	strdup_with_null		3484417	2					
ANR	3484506	ParameterList	"OnigEncoding enc , UChar * s , UChar * end"		3484417	3					
ANR	3484507	Parameter	OnigEncoding enc	230:17:6386:6401	3484417	0	True				
ANR	3484508	ParameterType	OnigEncoding		3484417	0					
ANR	3484509	Identifier	enc		3484417	1					
ANR	3484510	Parameter	UChar * s	230:35:6404:6411	3484417	1	True				
ANR	3484511	ParameterType	UChar *		3484417	0					
ANR	3484512	Identifier	s		3484417	1					
ANR	3484513	Parameter	UChar * end	230:45:6414:6423	3484417	2	True				
ANR	3484514	ParameterType	UChar *		3484417	0					
ANR	3484515	Identifier	end		3484417	1					
ANR	3484516	CFGEntryNode	ENTRY		3484417		True				
ANR	3484517	CFGExitNode	EXIT		3484417		True				
ANR	3484518	Symbol	term_len		3484417						
ANR	3484519	Symbol	r		3484417						
ANR	3484520	Symbol	s		3484417						
ANR	3484521	Symbol	* i		3484417						
ANR	3484522	Symbol	xmalloc		3484417						
ANR	3484523	Symbol	slen		3484417						
ANR	3484524	Symbol	ONIGENC_MBC_MINLEN		3484417						
ANR	3484525	Symbol	i		3484417						
ANR	3484526	Symbol	end		3484417						
ANR	3484527	Symbol	enc		3484417						
ANR	3484528	Symbol	* slen		3484417						
ANR	3484529	Symbol	* r		3484417						
ANR	3484530	DeclStmt									
ANR	3484531	Decl							define PUNFETCH	define PUNFETCH	p
ANR	3484532	Function	str_end_cmp	314:0:8154:8434							
ANR	3484533	FunctionDef	"str_end_cmp (st_str_end_key * x , st_str_end_key * y)"		3484532	0					
ANR	3484534	CompoundStatement		316:0:8215:8434	3484532	0					
ANR	3484535	IdentifierDeclStatement	"UChar * p , * q ;"	317:2:8219:8231	3484532	0	True				
ANR	3484536	IdentifierDecl	* p		3484532	0					
ANR	3484537	IdentifierDeclType	UChar *		3484532	0					
ANR	3484538	Identifier	p		3484532	1					
ANR	3484539	IdentifierDecl	* q		3484532	1					
ANR	3484540	IdentifierDeclType	UChar *		3484532	0					
ANR	3484541	Identifier	q		3484532	1					
ANR	3484542	IdentifierDeclStatement	int c ;	318:2:8235:8240	3484532	1	True				
ANR	3484543	IdentifierDecl	c		3484532	0					
ANR	3484544	IdentifierDeclType	int		3484532	0					
ANR	3484545	Identifier	c		3484532	1					
ANR	3484546	IfStatement	if ( ( x -> end - x -> s ) != ( y -> end - y -> s ) )		3484532	2					
ANR	3484547	Condition	( x -> end - x -> s ) != ( y -> end - y -> s )	320:6:8249:8282	3484532	0	True				
ANR	3484548	EqualityExpression	( x -> end - x -> s ) != ( y -> end - y -> s )		3484532	0		!=			
ANR	3484549	AdditiveExpression	x -> end - x -> s		3484532	0		-			
ANR	3484550	PtrMemberAccess	x -> end		3484532	0					
ANR	3484551	Identifier	x		3484532	0					
ANR	3484552	Identifier	end		3484532	1					
ANR	3484553	PtrMemberAccess	x -> s		3484532	1					
ANR	3484554	Identifier	x		3484532	0					
ANR	3484555	Identifier	s		3484532	1					
ANR	3484556	AdditiveExpression	y -> end - y -> s		3484532	1		-			
ANR	3484557	PtrMemberAccess	y -> end		3484532	0					
ANR	3484558	Identifier	y		3484532	0					
ANR	3484559	Identifier	end		3484532	1					
ANR	3484560	PtrMemberAccess	y -> s		3484532	1					
ANR	3484561	Identifier	y		3484532	0					
ANR	3484562	Identifier	s		3484532	1					
ANR	3484563	ReturnStatement	return 1 ;	321:4:8289:8297	3484532	1	True				
ANR	3484564	PrimaryExpression	1		3484532	0					
ANR	3484565	ExpressionStatement	p = x -> s	323:2:8302:8310	3484532	3	True				
ANR	3484566	AssignmentExpression	p = x -> s		3484532	0		=			
ANR	3484567	Identifier	p		3484532	0					
ANR	3484568	PtrMemberAccess	x -> s		3484532	1					
ANR	3484569	Identifier	x		3484532	0					
ANR	3484570	Identifier	s		3484532	1					
ANR	3484571	ExpressionStatement	q = y -> s	324:2:8314:8322	3484532	4	True				
ANR	3484572	AssignmentExpression	q = y -> s		3484532	0		=			
ANR	3484573	Identifier	q		3484532	0					
ANR	3484574	PtrMemberAccess	y -> s		3484532	1					
ANR	3484575	Identifier	y		3484532	0					
ANR	3484576	Identifier	s		3484532	1					
ANR	3484577	WhileStatement	while ( p < x -> end )		3484532	5					
ANR	3484578	Condition	p < x -> end	325:9:8333:8342	3484532	0	True				
ANR	3484579	RelationalExpression	p < x -> end		3484532	0		<			
ANR	3484580	Identifier	p		3484532	0					
ANR	3484581	PtrMemberAccess	x -> end		3484532	1					
ANR	3484582	Identifier	x		3484532	0					
ANR	3484583	Identifier	end		3484532	1					
ANR	3484584	CompoundStatement		10:21:129:129	3484532	1					
ANR	3484585	ExpressionStatement	c = ( int ) * p - ( int ) * q	326:4:8351:8374	3484532	0	True				
ANR	3484586	AssignmentExpression	c = ( int ) * p - ( int ) * q		3484532	0		=			
ANR	3484587	Identifier	c		3484532	0					
ANR	3484588	AdditiveExpression	( int ) * p - ( int ) * q		3484532	1		-			
ANR	3484589	CastExpression	( int ) * p		3484532	0					
ANR	3484590	CastTarget	int		3484532	0					
ANR	3484591	UnaryOperationExpression	* p		3484532	1					
ANR	3484592	UnaryOperator	*		3484532	0					
ANR	3484593	Identifier	p		3484532	1					
ANR	3484594	CastExpression	( int ) * q		3484532	1					
ANR	3484595	CastTarget	int		3484532	0					
ANR	3484596	UnaryOperationExpression	* q		3484532	1					
ANR	3484597	UnaryOperator	*		3484532	0					
ANR	3484598	Identifier	q		3484532	1					
ANR	3484599	IfStatement	if ( c != 0 )		3484532	1					
ANR	3484600	Condition	c != 0	327:8:8384:8389	3484532	0	True				
ANR	3484601	EqualityExpression	c != 0		3484532	0		!=			
ANR	3484602	Identifier	c		3484532	0					
ANR	3484603	PrimaryExpression	0		3484532	1					
ANR	3484604	ReturnStatement	return c ;	327:16:8392:8400	3484532	1	True				
ANR	3484605	Identifier	c		3484532	0					
ANR	3484606	ExpressionStatement	p ++	329:4:8407:8410	3484532	2	True				
ANR	3484607	PostIncDecOperationExpression	p ++		3484532	0					
ANR	3484608	Identifier	p		3484532	0					
ANR	3484609	IncDec	++		3484532	1					
ANR	3484610	ExpressionStatement	q ++	329:9:8412:8415	3484532	3	True				
ANR	3484611	PostIncDecOperationExpression	q ++		3484532	0					
ANR	3484612	Identifier	q		3484532	0					
ANR	3484613	IncDec	++		3484532	1					
ANR	3484614	ReturnStatement	return 0 ;	332:2:8424:8432	3484532	6	True				
ANR	3484615	PrimaryExpression	0		3484532	0					
ANR	3484616	ReturnType	static int		3484532	1					
ANR	3484617	Identifier	str_end_cmp		3484532	2					
ANR	3484618	ParameterList	"st_str_end_key * x , st_str_end_key * y"		3484532	3					
ANR	3484619	Parameter	st_str_end_key * x	315:12:8177:8193	3484532	0	True				
ANR	3484620	ParameterType	st_str_end_key *		3484532	0					
ANR	3484621	Identifier	x		3484532	1					
ANR	3484622	Parameter	st_str_end_key * y	315:31:8196:8212	3484532	1	True				
ANR	3484623	ParameterType	st_str_end_key *		3484532	0					
ANR	3484624	Identifier	y		3484532	1					
ANR	3484625	CFGEntryNode	ENTRY		3484532		True				
ANR	3484626	CFGExitNode	EXIT		3484532		True				
ANR	3484627	Symbol	* x		3484532						
ANR	3484628	Symbol	c		3484532						
ANR	3484629	Symbol	* y		3484532						
ANR	3484630	Symbol	y -> end		3484532						
ANR	3484631	Symbol	x -> end		3484532						
ANR	3484632	Symbol	p		3484532						
ANR	3484633	Symbol	q		3484532						
ANR	3484634	Symbol	x -> s		3484532						
ANR	3484635	Symbol	x		3484532						
ANR	3484636	Symbol	y		3484532						
ANR	3484637	Symbol	y -> s		3484532						
ANR	3484638	Symbol	* p		3484532						
ANR	3484639	Symbol	* q		3484532						
ANR	3484640	Function	str_end_hash	335:0:8437:8611							
ANR	3484641	FunctionDef	str_end_hash (st_str_end_key * x)		3484640	0					
ANR	3484642	CompoundStatement		337:0:8480:8611	3484640	0					
ANR	3484643	IdentifierDeclStatement	UChar * p ;	338:2:8484:8492	3484640	0	True				
ANR	3484644	IdentifierDecl	* p		3484640	0					
ANR	3484645	IdentifierDeclType	UChar *		3484640	0					
ANR	3484646	Identifier	p		3484640	1					
ANR	3484647	IdentifierDeclStatement	int val = 0 ;	339:2:8496:8507	3484640	1	True				
ANR	3484648	IdentifierDecl	val = 0		3484640	0					
ANR	3484649	IdentifierDeclType	int		3484640	0					
ANR	3484650	Identifier	val		3484640	1					
ANR	3484651	AssignmentExpression	val = 0		3484640	2		=			
ANR	3484652	Identifier	val		3484640	0					
ANR	3484653	PrimaryExpression	0		3484640	1					
ANR	3484654	ExpressionStatement	p = x -> s	341:2:8512:8520	3484640	2	True				
ANR	3484655	AssignmentExpression	p = x -> s		3484640	0		=			
ANR	3484656	Identifier	p		3484640	0					
ANR	3484657	PtrMemberAccess	x -> s		3484640	1					
ANR	3484658	Identifier	x		3484640	0					
ANR	3484659	Identifier	s		3484640	1					
ANR	3484660	WhileStatement	while ( p < x -> end )		3484640	3					
ANR	3484661	Condition	p < x -> end	342:9:8531:8540	3484640	0	True				
ANR	3484662	RelationalExpression	p < x -> end		3484640	0		<			
ANR	3484663	Identifier	p		3484640	0					
ANR	3484664	PtrMemberAccess	x -> end		3484640	1					
ANR	3484665	Identifier	x		3484640	0					
ANR	3484666	Identifier	end		3484640	1					
ANR	3484667	CompoundStatement		6:21:62:62	3484640	1					
ANR	3484668	ExpressionStatement	val = val * 997 + ( int ) * p ++	343:4:8549:8577	3484640	0	True				
ANR	3484669	AssignmentExpression	val = val * 997 + ( int ) * p ++		3484640	0		=			
ANR	3484670	Identifier	val		3484640	0					
ANR	3484671	AdditiveExpression	val * 997 + ( int ) * p ++		3484640	1		+			
ANR	3484672	MultiplicativeExpression	val * 997		3484640	0		*			
ANR	3484673	Identifier	val		3484640	0					
ANR	3484674	PrimaryExpression	997		3484640	1					
ANR	3484675	CastExpression	( int ) * p ++		3484640	1					
ANR	3484676	CastTarget	int		3484640	0					
ANR	3484677	UnaryOperationExpression	* p ++		3484640	1					
ANR	3484678	UnaryOperator	*		3484640	0					
ANR	3484679	PostIncDecOperationExpression	p ++		3484640	1					
ANR	3484680	Identifier	p		3484640	0					
ANR	3484681	IncDec	++		3484640	1					
ANR	3484682	ReturnStatement	return val + ( val >> 5 ) ;	346:2:8586:8609	3484640	4	True				
ANR	3484683	AdditiveExpression	val + ( val >> 5 )		3484640	0		+			
ANR	3484684	Identifier	val		3484640	0					
ANR	3484685	ShiftExpression	val >> 5		3484640	1		>>			
ANR	3484686	Identifier	val		3484640	0					
ANR	3484687	PrimaryExpression	5		3484640	1					
ANR	3484688	ReturnType	static int		3484640	1					
ANR	3484689	Identifier	str_end_hash		3484640	2					
ANR	3484690	ParameterList	st_str_end_key * x		3484640	3					
ANR	3484691	Parameter	st_str_end_key * x	336:13:8461:8477	3484640	0	True				
ANR	3484692	ParameterType	st_str_end_key *		3484640	0					
ANR	3484693	Identifier	x		3484640	1					
ANR	3484694	CFGEntryNode	ENTRY		3484640		True				
ANR	3484695	CFGExitNode	EXIT		3484640		True				
ANR	3484696	Symbol	p		3484640						
ANR	3484697	Symbol	val		3484640						
ANR	3484698	Symbol	x -> s		3484640						
ANR	3484699	Symbol	* x		3484640						
ANR	3484700	Symbol	* p ++		3484640						
ANR	3484701	Symbol	x		3484640						
ANR	3484702	Symbol	x -> end		3484640						
ANR	3484703	Function	onig_st_init_strend_table_with_size	349:0:8614:8856							
ANR	3484704	FunctionDef	onig_st_init_strend_table_with_size (int size)		3484703	0					
ANR	3484705	CompoundStatement		351:0:8684:8856	3484703	0					
ANR	3484706	Statement	static	352:2:8688:8693	3484703	0	True				
ANR	3484707	Statement	struct	352:9:8695:8700	3484703	1	True				
ANR	3484708	Statement	st_hash_type	352:16:8702:8713	3484703	2	True				
ANR	3484709	Statement	hashType	352:29:8715:8722	3484703	3	True				
ANR	3484710	Statement	=	352:38:8724:8724	3484703	4	True				
ANR	3484711	CompoundStatement		2:40:41:41	3484703	5					
ANR	3484712	Statement	str_end_cmp	353:4:8732:8742	3484703	0	True				
ANR	3484713	Statement	","	353:15:8743:8743	3484703	1	True				
ANR	3484714	Statement	str_end_hash	354:4:8749:8760	3484703	2	True				
ANR	3484715	Statement	","	354:16:8761:8761	3484703	3	True				
ANR	3484716	ExpressionStatement		355:3:8766:8766	3484703	6	True				
ANR	3484717	ReturnStatement	"return ( hash_table_type * ) onig_st_init_table_with_size ( & hashType , size ) ;"	357:2:8771:8854	3484703	7	True				
ANR	3484718	CastExpression	"( hash_table_type * ) onig_st_init_table_with_size ( & hashType , size )"		3484703	0					
ANR	3484719	CastTarget	hash_table_type *		3484703	0					
ANR	3484720	CallExpression	"onig_st_init_table_with_size ( & hashType , size )"		3484703	1					
ANR	3484721	Callee	onig_st_init_table_with_size		3484703	0					
ANR	3484722	Identifier	onig_st_init_table_with_size		3484703	0					
ANR	3484723	ArgumentList	& hashType		3484703	1					
ANR	3484724	Argument	& hashType		3484703	0					
ANR	3484725	UnaryOperationExpression	& hashType		3484703	0					
ANR	3484726	UnaryOperator	&		3484703	0					
ANR	3484727	Identifier	hashType		3484703	1					
ANR	3484728	Argument	size		3484703	1					
ANR	3484729	Identifier	size		3484703	0					
ANR	3484730	ReturnType	extern hash_table_type *		3484703	1					
ANR	3484731	Identifier	onig_st_init_strend_table_with_size		3484703	2					
ANR	3484732	ParameterList	int size		3484703	3					
ANR	3484733	Parameter	int size	350:36:8674:8681	3484703	0	True				
ANR	3484734	ParameterType	int		3484703	0					
ANR	3484735	Identifier	size		3484703	1					
ANR	3484736	CFGEntryNode	ENTRY		3484703		True				
ANR	3484737	CFGExitNode	EXIT		3484703		True				
ANR	3484738	Symbol	size		3484703						
ANR	3484739	Symbol	& hashType		3484703						
ANR	3484740	Symbol	onig_st_init_table_with_size		3484703						
ANR	3484741	Function	onig_st_lookup_strend	361:0:8859:9136							
ANR	3484742	FunctionDef	"onig_st_lookup_strend (hash_table_type * table , const UChar * str_key , const UChar * end_key , hash_data_type * value)"		3484741	0					
ANR	3484743	CompoundStatement		364:0:8991:9136	3484741	0					
ANR	3484744	IdentifierDeclStatement	st_str_end_key key ;	365:2:8995:9013	3484741	0	True				
ANR	3484745	IdentifierDecl	key		3484741	0					
ANR	3484746	IdentifierDeclType	st_str_end_key		3484741	0					
ANR	3484747	Identifier	key		3484741	1					
ANR	3484748	ExpressionStatement	key . s = ( UChar * ) str_key	367:2:9018:9044	3484741	1	True				
ANR	3484749	AssignmentExpression	key . s = ( UChar * ) str_key		3484741	0		=			
ANR	3484750	MemberAccess	key . s		3484741	0					
ANR	3484751	Identifier	key		3484741	0					
ANR	3484752	Identifier	s		3484741	1					
ANR	3484753	CastExpression	( UChar * ) str_key		3484741	1					
ANR	3484754	CastTarget	UChar *		3484741	0					
ANR	3484755	Identifier	str_key		3484741	1					
ANR	3484756	ExpressionStatement	key . end = ( UChar * ) end_key	368:2:9048:9074	3484741	2	True				
ANR	3484757	AssignmentExpression	key . end = ( UChar * ) end_key		3484741	0		=			
ANR	3484758	MemberAccess	key . end		3484741	0					
ANR	3484759	Identifier	key		3484741	0					
ANR	3484760	Identifier	end		3484741	1					
ANR	3484761	CastExpression	( UChar * ) end_key		3484741	1					
ANR	3484762	CastTarget	UChar *		3484741	0					
ANR	3484763	Identifier	end_key		3484741	1					
ANR	3484764	ReturnStatement	"return onig_st_lookup ( table , ( st_data_t ) ( & key ) , value ) ;"	370:2:9079:9134	3484741	3	True				
ANR	3484765	CallExpression	"onig_st_lookup ( table , ( st_data_t ) ( & key ) , value )"		3484741	0					
ANR	3484766	Callee	onig_st_lookup		3484741	0					
ANR	3484767	Identifier	onig_st_lookup		3484741	0					
ANR	3484768	ArgumentList	table		3484741	1					
ANR	3484769	Argument	table		3484741	0					
ANR	3484770	Identifier	table		3484741	0					
ANR	3484771	Argument	( st_data_t ) ( & key )		3484741	1					
ANR	3484772	CastExpression	( st_data_t ) ( & key )		3484741	0					
ANR	3484773	CastTarget	st_data_t		3484741	0					
ANR	3484774	UnaryOperationExpression	& key		3484741	1					
ANR	3484775	UnaryOperator	&		3484741	0					
ANR	3484776	Identifier	key		3484741	1					
ANR	3484777	Argument	value		3484741	2					
ANR	3484778	Identifier	value		3484741	0					
ANR	3484779	ReturnType	extern int		3484741	1					
ANR	3484780	Identifier	onig_st_lookup_strend		3484741	2					
ANR	3484781	ParameterList	"hash_table_type * table , const UChar * str_key , const UChar * end_key , hash_data_type * value"		3484741	3					
ANR	3484782	Parameter	hash_table_type * table	362:22:8892:8913	3484741	0	True				
ANR	3484783	ParameterType	hash_table_type *		3484741	0					
ANR	3484784	Identifier	table		3484741	1					
ANR	3484785	Parameter	const UChar * str_key	362:46:8916:8935	3484741	1	True				
ANR	3484786	ParameterType	const UChar *		3484741	0					
ANR	3484787	Identifier	str_key		3484741	1					
ANR	3484788	Parameter	const UChar * end_key	363:8:8946:8965	3484741	2	True				
ANR	3484789	ParameterType	const UChar *		3484741	0					
ANR	3484790	Identifier	end_key		3484741	1					
ANR	3484791	Parameter	hash_data_type * value	363:30:8968:8988	3484741	3	True				
ANR	3484792	ParameterType	hash_data_type *		3484741	0					
ANR	3484793	Identifier	value		3484741	1					
ANR	3484794	CFGEntryNode	ENTRY		3484741		True				
ANR	3484795	CFGExitNode	EXIT		3484741		True				
ANR	3484796	Symbol	& key		3484741						
ANR	3484797	Symbol	str_key		3484741						
ANR	3484798	Symbol	end_key		3484741						
ANR	3484799	Symbol	key . s		3484741						
ANR	3484800	Symbol	onig_st_lookup		3484741						
ANR	3484801	Symbol	value		3484741						
ANR	3484802	Symbol	table		3484741						
ANR	3484803	Symbol	key		3484741						
ANR	3484804	Symbol	key . end		3484741						
ANR	3484805	Function	onig_st_insert_strend	373:0:9139:9542							
ANR	3484806	FunctionDef	"onig_st_insert_strend (hash_table_type * table , const UChar * str_key , const UChar * end_key , hash_data_type value)"		3484805	0					
ANR	3484807	CompoundStatement		376:0:9270:9542	3484805	0					
ANR	3484808	IdentifierDeclStatement	st_str_end_key * key ;	377:2:9274:9293	3484805	0	True				
ANR	3484809	IdentifierDecl	* key		3484805	0					
ANR	3484810	IdentifierDeclType	st_str_end_key *		3484805	0					
ANR	3484811	Identifier	key		3484805	1					
ANR	3484812	IdentifierDeclStatement	int result ;	378:2:9297:9307	3484805	1	True				
ANR	3484813	IdentifierDecl	result		3484805	0					
ANR	3484814	IdentifierDeclType	int		3484805	0					
ANR	3484815	Identifier	result		3484805	1					
ANR	3484816	ExpressionStatement	key = ( st_str_end_key * ) xmalloc ( sizeof ( st_str_end_key ) )	380:2:9312:9367	3484805	2	True				
ANR	3484817	AssignmentExpression	key = ( st_str_end_key * ) xmalloc ( sizeof ( st_str_end_key ) )		3484805	0		=			
ANR	3484818	Identifier	key		3484805	0					
ANR	3484819	CastExpression	( st_str_end_key * ) xmalloc ( sizeof ( st_str_end_key ) )		3484805	1					
ANR	3484820	CastTarget	st_str_end_key *		3484805	0					
ANR	3484821	CallExpression	xmalloc ( sizeof ( st_str_end_key ) )		3484805	1					
ANR	3484822	Callee	xmalloc		3484805	0					
ANR	3484823	Identifier	xmalloc		3484805	0					
ANR	3484824	ArgumentList	sizeof ( st_str_end_key )		3484805	1					
ANR	3484825	Argument	sizeof ( st_str_end_key )		3484805	0					
ANR	3484826	SizeofExpression	sizeof ( st_str_end_key )		3484805	0					
ANR	3484827	Sizeof	sizeof		3484805	0					
ANR	3484828	SizeofOperand	st_str_end_key		3484805	1					
ANR	3484829	ExpressionStatement	key -> s = ( UChar * ) str_key	381:2:9371:9398	3484805	3	True				
ANR	3484830	AssignmentExpression	key -> s = ( UChar * ) str_key		3484805	0		=			
ANR	3484831	PtrMemberAccess	key -> s		3484805	0					
ANR	3484832	Identifier	key		3484805	0					
ANR	3484833	Identifier	s		3484805	1					
ANR	3484834	CastExpression	( UChar * ) str_key		3484805	1					
ANR	3484835	CastTarget	UChar *		3484805	0					
ANR	3484836	Identifier	str_key		3484805	1					
ANR	3484837	ExpressionStatement	key -> end = ( UChar * ) end_key	382:2:9402:9429	3484805	4	True				
ANR	3484838	AssignmentExpression	key -> end = ( UChar * ) end_key		3484805	0		=			
ANR	3484839	PtrMemberAccess	key -> end		3484805	0					
ANR	3484840	Identifier	key		3484805	0					
ANR	3484841	Identifier	end		3484805	1					
ANR	3484842	CastExpression	( UChar * ) end_key		3484805	1					
ANR	3484843	CastTarget	UChar *		3484805	0					
ANR	3484844	Identifier	end_key		3484805	1					
ANR	3484845	ExpressionStatement	"result = onig_st_insert ( table , ( st_data_t ) key , value )"	383:2:9433:9487	3484805	5	True				
ANR	3484846	AssignmentExpression	"result = onig_st_insert ( table , ( st_data_t ) key , value )"		3484805	0		=			
ANR	3484847	Identifier	result		3484805	0					
ANR	3484848	CallExpression	"onig_st_insert ( table , ( st_data_t ) key , value )"		3484805	1					
ANR	3484849	Callee	onig_st_insert		3484805	0					
ANR	3484850	Identifier	onig_st_insert		3484805	0					
ANR	3484851	ArgumentList	table		3484805	1					
ANR	3484852	Argument	table		3484805	0					
ANR	3484853	Identifier	table		3484805	0					
ANR	3484854	Argument	( st_data_t ) key		3484805	1					
ANR	3484855	CastExpression	( st_data_t ) key		3484805	0					
ANR	3484856	CastTarget	st_data_t		3484805	0					
ANR	3484857	Identifier	key		3484805	1					
ANR	3484858	Argument	value		3484805	2					
ANR	3484859	Identifier	value		3484805	0					
ANR	3484860	IfStatement	if ( result )		3484805	6					
ANR	3484861	Condition	result	384:6:9495:9500	3484805	0	True				
ANR	3484862	Identifier	result		3484805	0					
ANR	3484863	CompoundStatement		9:14:232:232	3484805	1					
ANR	3484864	ExpressionStatement	xfree ( key )	385:4:9509:9519	3484805	0	True				
ANR	3484865	CallExpression	xfree ( key )		3484805	0					
ANR	3484866	Callee	xfree		3484805	0					
ANR	3484867	Identifier	xfree		3484805	0					
ANR	3484868	ArgumentList	key		3484805	1					
ANR	3484869	Argument	key		3484805	0					
ANR	3484870	Identifier	key		3484805	0					
ANR	3484871	ReturnStatement	return result ;	387:2:9527:9540	3484805	7	True				
ANR	3484872	Identifier	result		3484805	0					
ANR	3484873	ReturnType	extern int		3484805	1					
ANR	3484874	Identifier	onig_st_insert_strend		3484805	2					
ANR	3484875	ParameterList	"hash_table_type * table , const UChar * str_key , const UChar * end_key , hash_data_type value"		3484805	3					
ANR	3484876	Parameter	hash_table_type * table	374:22:9172:9193	3484805	0	True				
ANR	3484877	ParameterType	hash_table_type *		3484805	0					
ANR	3484878	Identifier	table		3484805	1					
ANR	3484879	Parameter	const UChar * str_key	374:46:9196:9215	3484805	1	True				
ANR	3484880	ParameterType	const UChar *		3484805	0					
ANR	3484881	Identifier	str_key		3484805	1					
ANR	3484882	Parameter	const UChar * end_key	375:8:9226:9245	3484805	2	True				
ANR	3484883	ParameterType	const UChar *		3484805	0					
ANR	3484884	Identifier	end_key		3484805	1					
ANR	3484885	Parameter	hash_data_type value	375:30:9248:9267	3484805	3	True				
ANR	3484886	ParameterType	hash_data_type		3484805	0					
ANR	3484887	Identifier	value		3484805	1					
ANR	3484888	CFGEntryNode	ENTRY		3484805		True				
ANR	3484889	CFGExitNode	EXIT		3484805		True				
ANR	3484890	Symbol	result		3484805						
ANR	3484891	Symbol	key -> s		3484805						
ANR	3484892	Symbol	str_key		3484805						
ANR	3484893	Symbol	end_key		3484805						
ANR	3484894	Symbol	xmalloc		3484805						
ANR	3484895	Symbol	key -> end		3484805						
ANR	3484896	Symbol	* key		3484805						
ANR	3484897	Symbol	onig_st_insert		3484805						
ANR	3484898	Symbol	value		3484805						
ANR	3484899	Symbol	table		3484805						
ANR	3484900	Symbol	key		3484805						
ANR	3484901	ClassDef	<unnamed>	397:8:9649:9830							
ANR	3484902	DeclStmt									
ANR	3484903	Decl							UChar	UChar *	name
ANR	3484904	DeclStmt									
ANR	3484905	Decl							int	int	name_len
ANR	3484906	DeclStmt									
ANR	3484907	Decl							int	int	back_num
ANR	3484908	DeclStmt									
ANR	3484909	Decl							int	int	back_alloc
ANR	3484910	DeclStmt									
ANR	3484911	Decl							int	int	back_ref1
ANR	3484912	DeclStmt									
ANR	3484913	Decl							int	int *	back_refs
ANR	3484914	DeclStmt									
ANR	3484915	Decl									NameEntry
ANR	3484916	DeclStmt									
ANR	3484917	Decl							st_table	st_table	NameTable
ANR	3484918	DeclStmt									
ANR	3484919	Decl							st_data_t	st_data_t	HashDataType
ANR	3484920	Function	i_print_name_entry	415:0:10038:10463							
ANR	3484921	FunctionDef	"i_print_name_entry (UChar * key , NameEntry * e , void * arg)"		3484920	0					
ANR	3484922	CompoundStatement		417:0:10105:10463	3484920	0					
ANR	3484923	IdentifierDeclStatement	int i ;	418:2:10109:10114	3484920	0	True				
ANR	3484924	IdentifierDecl	i		3484920	0					
ANR	3484925	IdentifierDeclType	int		3484920	0					
ANR	3484926	Identifier	i		3484920	1					
ANR	3484927	IdentifierDeclStatement	FILE * fp = ( FILE * ) arg ;	419:2:10118:10140	3484920	1	True				
ANR	3484928	IdentifierDecl	* fp = ( FILE * ) arg		3484920	0					
ANR	3484929	IdentifierDeclType	FILE *		3484920	0					
ANR	3484930	Identifier	fp		3484920	1					
ANR	3484931	AssignmentExpression	* fp = ( FILE * ) arg		3484920	2		=			
ANR	3484932	Identifier	fp		3484920	0					
ANR	3484933	CastExpression	( FILE * ) arg		3484920	1					
ANR	3484934	CastTarget	FILE *		3484920	0					
ANR	3484935	Identifier	arg		3484920	1					
ANR	3484936	ExpressionStatement	"fprintf ( fp , ""%s: "" , e -> name )"	421:2:10145:10173	3484920	2	True				
ANR	3484937	CallExpression	"fprintf ( fp , ""%s: "" , e -> name )"		3484920	0					
ANR	3484938	Callee	fprintf		3484920	0					
ANR	3484939	Identifier	fprintf		3484920	0					
ANR	3484940	ArgumentList	fp		3484920	1					
ANR	3484941	Argument	fp		3484920	0					
ANR	3484942	Identifier	fp		3484920	0					
ANR	3484943	Argument	"""%s: """		3484920	1					
ANR	3484944	PrimaryExpression	"""%s: """		3484920	0					
ANR	3484945	Argument	e -> name		3484920	2					
ANR	3484946	PtrMemberAccess	e -> name		3484920	0					
ANR	3484947	Identifier	e		3484920	0					
ANR	3484948	Identifier	name		3484920	1					
ANR	3484949	IfStatement	if ( e -> back_num == 0 )		3484920	3					
ANR	3484950	Condition	e -> back_num == 0	422:6:10181:10196	3484920	0	True				
ANR	3484951	EqualityExpression	e -> back_num == 0		3484920	0		==			
ANR	3484952	PtrMemberAccess	e -> back_num		3484920	0					
ANR	3484953	Identifier	e		3484920	0					
ANR	3484954	Identifier	back_num		3484920	1					
ANR	3484955	PrimaryExpression	0		3484920	1					
ANR	3484956	ExpressionStatement	"fputs ( ""-"" , fp )"	423:4:10203:10217	3484920	1	True				
ANR	3484957	CallExpression	"fputs ( ""-"" , fp )"		3484920	0					
ANR	3484958	Callee	fputs		3484920	0					
ANR	3484959	Identifier	fputs		3484920	0					
ANR	3484960	ArgumentList	"""-"""		3484920	1					
ANR	3484961	Argument	"""-"""		3484920	0					
ANR	3484962	PrimaryExpression	"""-"""		3484920	0					
ANR	3484963	Argument	fp		3484920	1					
ANR	3484964	Identifier	fp		3484920	0					
ANR	3484965	ElseStatement	else		3484920	0					
ANR	3484966	IfStatement	if ( e -> back_num == 1 )		3484920	0					
ANR	3484967	Condition	e -> back_num == 1	424:11:10230:10245	3484920	0	True				
ANR	3484968	EqualityExpression	e -> back_num == 1		3484920	0		==			
ANR	3484969	PtrMemberAccess	e -> back_num		3484920	0					
ANR	3484970	Identifier	e		3484920	0					
ANR	3484971	Identifier	back_num		3484920	1					
ANR	3484972	PrimaryExpression	1		3484920	1					
ANR	3484973	ExpressionStatement	"fprintf ( fp , ""%d"" , e -> back_ref1 )"	425:4:10252:10283	3484920	1	True				
ANR	3484974	CallExpression	"fprintf ( fp , ""%d"" , e -> back_ref1 )"		3484920	0					
ANR	3484975	Callee	fprintf		3484920	0					
ANR	3484976	Identifier	fprintf		3484920	0					
ANR	3484977	ArgumentList	fp		3484920	1					
ANR	3484978	Argument	fp		3484920	0					
ANR	3484979	Identifier	fp		3484920	0					
ANR	3484980	Argument	"""%d"""		3484920	1					
ANR	3484981	PrimaryExpression	"""%d"""		3484920	0					
ANR	3484982	Argument	e -> back_ref1		3484920	2					
ANR	3484983	PtrMemberAccess	e -> back_ref1		3484920	0					
ANR	3484984	Identifier	e		3484920	0					
ANR	3484985	Identifier	back_ref1		3484920	1					
ANR	3484986	ElseStatement	else		3484920	0					
ANR	3484987	CompoundStatement		10:7:186:186	3484920	0					
ANR	3484988	ForStatement	for ( i = 0 ; i < e -> back_num ; i ++ )		3484920	0					
ANR	3484989	ForInit	i = 0 ;	427:9:10303:10308	3484920	0	True				
ANR	3484990	AssignmentExpression	i = 0		3484920	0		=			
ANR	3484991	Identifier	i		3484920	0					
ANR	3484992	PrimaryExpression	0		3484920	1					
ANR	3484993	Condition	i < e -> back_num	427:16:10310:10324	3484920	1	True				
ANR	3484994	RelationalExpression	i < e -> back_num		3484920	0		<			
ANR	3484995	Identifier	i		3484920	0					
ANR	3484996	PtrMemberAccess	e -> back_num		3484920	1					
ANR	3484997	Identifier	e		3484920	0					
ANR	3484998	Identifier	back_num		3484920	1					
ANR	3484999	PostIncDecOperationExpression	i ++	427:33:10327:10329	3484920	2	True				
ANR	3485000	Identifier	i		3484920	0					
ANR	3485001	IncDec	++		3484920	1					
ANR	3485002	CompoundStatement		11:38:226:226	3484920	3					
ANR	3485003	IfStatement	if ( i > 0 )		3484920	0					
ANR	3485004	Condition	i > 0	428:10:10344:10348	3484920	0	True				
ANR	3485005	RelationalExpression	i > 0		3484920	0		>			
ANR	3485006	Identifier	i		3484920	0					
ANR	3485007	PrimaryExpression	0		3484920	1					
ANR	3485008	ExpressionStatement	"fprintf ( fp , "", "" )"	428:17:10351:10368	3484920	1	True				
ANR	3485009	CallExpression	"fprintf ( fp , "", "" )"		3484920	0					
ANR	3485010	Callee	fprintf		3484920	0					
ANR	3485011	Identifier	fprintf		3484920	0					
ANR	3485012	ArgumentList	fp		3484920	1					
ANR	3485013	Argument	fp		3484920	0					
ANR	3485014	Identifier	fp		3484920	0					
ANR	3485015	Argument	""", """		3484920	1					
ANR	3485016	PrimaryExpression	""", """		3484920	0					
ANR	3485017	ExpressionStatement	"fprintf ( fp , ""%d"" , e -> back_refs [ i ] )"	429:6:10376:10410	3484920	1	True				
ANR	3485018	CallExpression	"fprintf ( fp , ""%d"" , e -> back_refs [ i ] )"		3484920	0					
ANR	3485019	Callee	fprintf		3484920	0					
ANR	3485020	Identifier	fprintf		3484920	0					
ANR	3485021	ArgumentList	fp		3484920	1					
ANR	3485022	Argument	fp		3484920	0					
ANR	3485023	Identifier	fp		3484920	0					
ANR	3485024	Argument	"""%d"""		3484920	1					
ANR	3485025	PrimaryExpression	"""%d"""		3484920	0					
ANR	3485026	Argument	e -> back_refs [ i ]		3484920	2					
ANR	3485027	ArrayIndexing	e -> back_refs [ i ]		3484920	0					
ANR	3485028	PtrMemberAccess	e -> back_refs		3484920	0					
ANR	3485029	Identifier	e		3484920	0					
ANR	3485030	Identifier	back_refs		3484920	1					
ANR	3485031	Identifier	i		3484920	1					
ANR	3485032	ExpressionStatement	"fputs ( ""\\n"" , fp )"	432:2:10424:10439	3484920	4	True				
ANR	3485033	CallExpression	"fputs ( ""\\n"" , fp )"		3484920	0					
ANR	3485034	Callee	fputs		3484920	0					
ANR	3485035	Identifier	fputs		3484920	0					
ANR	3485036	ArgumentList	"""\\n"""		3484920	1					
ANR	3485037	Argument	"""\\n"""		3484920	0					
ANR	3485038	PrimaryExpression	"""\\n"""		3484920	0					
ANR	3485039	Argument	fp		3484920	1					
ANR	3485040	Identifier	fp		3484920	0					
ANR	3485041	ReturnStatement	return ST_CONTINUE ;	433:2:10443:10461	3484920	5	True				
ANR	3485042	Identifier	ST_CONTINUE		3484920	0					
ANR	3485043	ReturnType	static int		3484920	1					
ANR	3485044	Identifier	i_print_name_entry		3484920	2					
ANR	3485045	ParameterList	"UChar * key , NameEntry * e , void * arg"		3484920	3					
ANR	3485046	Parameter	UChar * key	416:19:10068:10077	3484920	0	True				
ANR	3485047	ParameterType	UChar *		3484920	0					
ANR	3485048	Identifier	key		3484920	1					
ANR	3485049	Parameter	NameEntry * e	416:31:10080:10091	3484920	1	True				
ANR	3485050	ParameterType	NameEntry *		3484920	0					
ANR	3485051	Identifier	e		3484920	1					
ANR	3485052	Parameter	void * arg	416:45:10094:10102	3484920	2	True				
ANR	3485053	ParameterType	void *		3484920	0					
ANR	3485054	Identifier	arg		3484920	1					
ANR	3485055	CFGEntryNode	ENTRY		3484920		True				
ANR	3485056	CFGExitNode	EXIT		3484920		True				
ANR	3485057	Symbol	e -> back_ref1		3484920						
ANR	3485058	Symbol	e -> back_num		3484920						
ANR	3485059	Symbol	e -> back_refs		3484920						
ANR	3485060	Symbol	e		3484920						
ANR	3485061	Symbol	* * e		3484920						
ANR	3485062	Symbol	* e -> back_refs		3484920						
ANR	3485063	Symbol	i		3484920						
ANR	3485064	Symbol	fp		3484920						
ANR	3485065	Symbol	* e		3484920						
ANR	3485066	Symbol	* i		3484920						
ANR	3485067	Symbol	arg		3484920						
ANR	3485068	Symbol	key		3484920						
ANR	3485069	Symbol	ST_CONTINUE		3484920						
ANR	3485070	Symbol	e -> name		3484920						
ANR	3485071	Function	onig_print_names	436:0:10466:10725							
ANR	3485072	FunctionDef	"onig_print_names (FILE * fp , regex_t * reg)"		3485071	0					
ANR	3485073	CompoundStatement		438:0:10518:10725	3485071	0					
ANR	3485074	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	439:2:10522:10565	3485071	0	True				
ANR	3485075	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		3485071	0					
ANR	3485076	IdentifierDeclType	NameTable *		3485071	0					
ANR	3485077	Identifier	t		3485071	1					
ANR	3485078	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		3485071	2		=			
ANR	3485079	Identifier	t		3485071	0					
ANR	3485080	CastExpression	( NameTable * ) reg -> name_table		3485071	1					
ANR	3485081	CastTarget	NameTable *		3485071	0					
ANR	3485082	PtrMemberAccess	reg -> name_table		3485071	1					
ANR	3485083	Identifier	reg		3485071	0					
ANR	3485084	Identifier	name_table		3485071	1					
ANR	3485085	IfStatement	if ( IS_NOT_NULL ( t ) )		3485071	1					
ANR	3485086	Condition	IS_NOT_NULL ( t )	441:6:10574:10587	3485071	0	True				
ANR	3485087	CallExpression	IS_NOT_NULL ( t )		3485071	0					
ANR	3485088	Callee	IS_NOT_NULL		3485071	0					
ANR	3485089	Identifier	IS_NOT_NULL		3485071	0					
ANR	3485090	ArgumentList	t		3485071	1					
ANR	3485091	Argument	t		3485071	0					
ANR	3485092	Identifier	t		3485071	0					
ANR	3485093	CompoundStatement		4:22:71:71	3485071	1					
ANR	3485094	ExpressionStatement	"fprintf ( fp , ""name table\\n"" )"	442:4:10596:10623	3485071	0	True				
ANR	3485095	CallExpression	"fprintf ( fp , ""name table\\n"" )"		3485071	0					
ANR	3485096	Callee	fprintf		3485071	0					
ANR	3485097	Identifier	fprintf		3485071	0					
ANR	3485098	ArgumentList	fp		3485071	1					
ANR	3485099	Argument	fp		3485071	0					
ANR	3485100	Identifier	fp		3485071	0					
ANR	3485101	Argument	"""name table\\n"""		3485071	1					
ANR	3485102	PrimaryExpression	"""name table\\n"""		3485071	0					
ANR	3485103	ExpressionStatement	"onig_st_foreach ( t , i_print_name_entry , ( HashDataType ) fp )"	443:4:10629:10686	3485071	1	True				
ANR	3485104	CallExpression	"onig_st_foreach ( t , i_print_name_entry , ( HashDataType ) fp )"		3485071	0					
ANR	3485105	Callee	onig_st_foreach		3485071	0					
ANR	3485106	Identifier	onig_st_foreach		3485071	0					
ANR	3485107	ArgumentList	t		3485071	1					
ANR	3485108	Argument	t		3485071	0					
ANR	3485109	Identifier	t		3485071	0					
ANR	3485110	Argument	i_print_name_entry		3485071	1					
ANR	3485111	Identifier	i_print_name_entry		3485071	0					
ANR	3485112	Argument	( HashDataType ) fp		3485071	2					
ANR	3485113	CastExpression	( HashDataType ) fp		3485071	0					
ANR	3485114	CastTarget	HashDataType		3485071	0					
ANR	3485115	Identifier	fp		3485071	1					
ANR	3485116	ExpressionStatement	"fputs ( ""\\n"" , fp )"	444:4:10692:10707	3485071	2	True				
ANR	3485117	CallExpression	"fputs ( ""\\n"" , fp )"		3485071	0					
ANR	3485118	Callee	fputs		3485071	0					
ANR	3485119	Identifier	fputs		3485071	0					
ANR	3485120	ArgumentList	"""\\n"""		3485071	1					
ANR	3485121	Argument	"""\\n"""		3485071	0					
ANR	3485122	PrimaryExpression	"""\\n"""		3485071	0					
ANR	3485123	Argument	fp		3485071	1					
ANR	3485124	Identifier	fp		3485071	0					
ANR	3485125	ReturnStatement	return 0 ;	446:2:10715:10723	3485071	2	True				
ANR	3485126	PrimaryExpression	0		3485071	0					
ANR	3485127	ReturnType	extern int		3485071	1					
ANR	3485128	Identifier	onig_print_names		3485071	2					
ANR	3485129	ParameterList	"FILE * fp , regex_t * reg"		3485071	3					
ANR	3485130	Parameter	FILE * fp	437:17:10494:10501	3485071	0	True				
ANR	3485131	ParameterType	FILE *		3485071	0					
ANR	3485132	Identifier	fp		3485071	1					
ANR	3485133	Parameter	regex_t * reg	437:27:10504:10515	3485071	1	True				
ANR	3485134	ParameterType	regex_t *		3485071	0					
ANR	3485135	Identifier	reg		3485071	1					
ANR	3485136	CFGEntryNode	ENTRY		3485071		True				
ANR	3485137	CFGExitNode	EXIT		3485071		True				
ANR	3485138	Symbol	IS_NOT_NULL		3485071						
ANR	3485139	Symbol	t		3485071						
ANR	3485140	Symbol	reg		3485071						
ANR	3485141	Symbol	reg -> name_table		3485071						
ANR	3485142	Symbol	fp		3485071						
ANR	3485143	Symbol	* reg		3485071						
ANR	3485144	Symbol	i_print_name_entry		3485071						
ANR	3485145	Function	names_clear	460:0:10952:11125							
ANR	3485146	FunctionDef	names_clear (regex_t * reg)		3485145	0					
ANR	3485147	CompoundStatement		462:0:10989:11125	3485145	0					
ANR	3485148	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	463:2:10993:11036	3485145	0	True				
ANR	3485149	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		3485145	0					
ANR	3485150	IdentifierDeclType	NameTable *		3485145	0					
ANR	3485151	Identifier	t		3485145	1					
ANR	3485152	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		3485145	2		=			
ANR	3485153	Identifier	t		3485145	0					
ANR	3485154	CastExpression	( NameTable * ) reg -> name_table		3485145	1					
ANR	3485155	CastTarget	NameTable *		3485145	0					
ANR	3485156	PtrMemberAccess	reg -> name_table		3485145	1					
ANR	3485157	Identifier	reg		3485145	0					
ANR	3485158	Identifier	name_table		3485145	1					
ANR	3485159	IfStatement	if ( IS_NOT_NULL ( t ) )		3485145	1					
ANR	3485160	Condition	IS_NOT_NULL ( t )	465:6:11045:11058	3485145	0	True				
ANR	3485161	CallExpression	IS_NOT_NULL ( t )		3485145	0					
ANR	3485162	Callee	IS_NOT_NULL		3485145	0					
ANR	3485163	Identifier	IS_NOT_NULL		3485145	0					
ANR	3485164	ArgumentList	t		3485145	1					
ANR	3485165	Argument	t		3485145	0					
ANR	3485166	Identifier	t		3485145	0					
ANR	3485167	CompoundStatement		4:22:71:71	3485145	1					
ANR	3485168	ExpressionStatement	"onig_st_foreach ( t , i_free_name_entry , 0 )"	466:4:11067:11107	3485145	0	True				
ANR	3485169	CallExpression	"onig_st_foreach ( t , i_free_name_entry , 0 )"		3485145	0					
ANR	3485170	Callee	onig_st_foreach		3485145	0					
ANR	3485171	Identifier	onig_st_foreach		3485145	0					
ANR	3485172	ArgumentList	t		3485145	1					
ANR	3485173	Argument	t		3485145	0					
ANR	3485174	Identifier	t		3485145	0					
ANR	3485175	Argument	i_free_name_entry		3485145	1					
ANR	3485176	Identifier	i_free_name_entry		3485145	0					
ANR	3485177	Argument	0		3485145	2					
ANR	3485178	PrimaryExpression	0		3485145	0					
ANR	3485179	ReturnStatement	return 0 ;	468:2:11115:11123	3485145	2	True				
ANR	3485180	PrimaryExpression	0		3485145	0					
ANR	3485181	ReturnType	static int		3485145	1					
ANR	3485182	Identifier	names_clear		3485145	2					
ANR	3485183	ParameterList	regex_t * reg		3485145	3					
ANR	3485184	Parameter	regex_t * reg	461:12:10975:10986	3485145	0	True				
ANR	3485185	ParameterType	regex_t *		3485145	0					
ANR	3485186	Identifier	reg		3485145	1					
ANR	3485187	CFGEntryNode	ENTRY		3485145		True				
ANR	3485188	CFGExitNode	EXIT		3485145		True				
ANR	3485189	Symbol	IS_NOT_NULL		3485145						
ANR	3485190	Symbol	t		3485145						
ANR	3485191	Symbol	reg		3485145						
ANR	3485192	Symbol	reg -> name_table		3485145						
ANR	3485193	Symbol	* reg		3485145						
ANR	3485194	Symbol	i_free_name_entry		3485145						
ANR	3485195	Function	onig_names_free	471:0:11128:11368							
ANR	3485196	FunctionDef	onig_names_free (regex_t * reg)		3485195	0					
ANR	3485197	CompoundStatement		473:0:11169:11368	3485195	0					
ANR	3485198	IdentifierDeclStatement	int r ;	474:2:11173:11178	3485195	0	True				
ANR	3485199	IdentifierDecl	r		3485195	0					
ANR	3485200	IdentifierDeclType	int		3485195	0					
ANR	3485201	Identifier	r		3485195	1					
ANR	3485202	IdentifierDeclStatement	NameTable * t ;	475:2:11182:11194	3485195	1	True				
ANR	3485203	IdentifierDecl	* t		3485195	0					
ANR	3485204	IdentifierDeclType	NameTable *		3485195	0					
ANR	3485205	Identifier	t		3485195	1					
ANR	3485206	ExpressionStatement	r = names_clear ( reg )	477:2:11199:11219	3485195	2	True				
ANR	3485207	AssignmentExpression	r = names_clear ( reg )		3485195	0		=			
ANR	3485208	Identifier	r		3485195	0					
ANR	3485209	CallExpression	names_clear ( reg )		3485195	1					
ANR	3485210	Callee	names_clear		3485195	0					
ANR	3485211	Identifier	names_clear		3485195	0					
ANR	3485212	ArgumentList	reg		3485195	1					
ANR	3485213	Argument	reg		3485195	0					
ANR	3485214	Identifier	reg		3485195	0					
ANR	3485215	IfStatement	if ( r )		3485195	3					
ANR	3485216	Condition	r	478:6:11227:11227	3485195	0	True				
ANR	3485217	Identifier	r		3485195	0					
ANR	3485218	ReturnStatement	return r ;	478:9:11230:11238	3485195	1	True				
ANR	3485219	Identifier	r		3485195	0					
ANR	3485220	ExpressionStatement	t = ( NameTable * ) reg -> name_table	480:2:11243:11275	3485195	4	True				
ANR	3485221	AssignmentExpression	t = ( NameTable * ) reg -> name_table		3485195	0		=			
ANR	3485222	Identifier	t		3485195	0					
ANR	3485223	CastExpression	( NameTable * ) reg -> name_table		3485195	1					
ANR	3485224	CastTarget	NameTable *		3485195	0					
ANR	3485225	PtrMemberAccess	reg -> name_table		3485195	1					
ANR	3485226	Identifier	reg		3485195	0					
ANR	3485227	Identifier	name_table		3485195	1					
ANR	3485228	IfStatement	if ( IS_NOT_NULL ( t ) )		3485195	5					
ANR	3485229	Condition	IS_NOT_NULL ( t )	481:6:11283:11296	3485195	0	True				
ANR	3485230	CallExpression	IS_NOT_NULL ( t )		3485195	0					
ANR	3485231	Callee	IS_NOT_NULL		3485195	0					
ANR	3485232	Identifier	IS_NOT_NULL		3485195	0					
ANR	3485233	ArgumentList	t		3485195	1					
ANR	3485234	Argument	t		3485195	0					
ANR	3485235	Identifier	t		3485195	0					
ANR	3485236	ExpressionStatement	onig_st_free_table ( t )	481:22:11299:11320	3485195	1	True				
ANR	3485237	CallExpression	onig_st_free_table ( t )		3485195	0					
ANR	3485238	Callee	onig_st_free_table		3485195	0					
ANR	3485239	Identifier	onig_st_free_table		3485195	0					
ANR	3485240	ArgumentList	t		3485195	1					
ANR	3485241	Argument	t		3485195	0					
ANR	3485242	Identifier	t		3485195	0					
ANR	3485243	ExpressionStatement	reg -> name_table = ( void * ) NULL	482:2:11324:11354	3485195	6	True				
ANR	3485244	AssignmentExpression	reg -> name_table = ( void * ) NULL		3485195	0		=			
ANR	3485245	PtrMemberAccess	reg -> name_table		3485195	0					
ANR	3485246	Identifier	reg		3485195	0					
ANR	3485247	Identifier	name_table		3485195	1					
ANR	3485248	CastExpression	( void * ) NULL		3485195	1					
ANR	3485249	CastTarget	void *		3485195	0					
ANR	3485250	Identifier	NULL		3485195	1					
ANR	3485251	ReturnStatement	return 0 ;	483:2:11358:11366	3485195	7	True				
ANR	3485252	PrimaryExpression	0		3485195	0					
ANR	3485253	ReturnType	extern int		3485195	1					
ANR	3485254	Identifier	onig_names_free		3485195	2					
ANR	3485255	ParameterList	regex_t * reg		3485195	3					
ANR	3485256	Parameter	regex_t * reg	472:16:11155:11166	3485195	0	True				
ANR	3485257	ParameterType	regex_t *		3485195	0					
ANR	3485258	Identifier	reg		3485195	1					
ANR	3485259	CFGEntryNode	ENTRY		3485195		True				
ANR	3485260	CFGExitNode	EXIT		3485195		True				
ANR	3485261	Symbol	r		3485195						
ANR	3485262	Symbol	IS_NOT_NULL		3485195						
ANR	3485263	Symbol	NULL		3485195						
ANR	3485264	Symbol	t		3485195						
ANR	3485265	Symbol	reg		3485195						
ANR	3485266	Symbol	names_clear		3485195						
ANR	3485267	Symbol	reg -> name_table		3485195						
ANR	3485268	Symbol	* reg		3485195						
ANR	3485269	Function	name_find	486:0:11371:11664							
ANR	3485270	FunctionDef	"name_find (regex_t * reg , const UChar * name , const UChar * name_end)"		3485269	0					
ANR	3485271	CompoundStatement		488:0:11455:11664	3485269	0					
ANR	3485272	IdentifierDeclStatement	NameEntry * e ;	489:2:11459:11471	3485269	0	True				
ANR	3485273	IdentifierDecl	* e		3485269	0					
ANR	3485274	IdentifierDeclType	NameEntry *		3485269	0					
ANR	3485275	Identifier	e		3485269	1					
ANR	3485276	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	490:2:11475:11518	3485269	1	True				
ANR	3485277	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		3485269	0					
ANR	3485278	IdentifierDeclType	NameTable *		3485269	0					
ANR	3485279	Identifier	t		3485269	1					
ANR	3485280	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		3485269	2		=			
ANR	3485281	Identifier	t		3485269	0					
ANR	3485282	CastExpression	( NameTable * ) reg -> name_table		3485269	1					
ANR	3485283	CastTarget	NameTable *		3485269	0					
ANR	3485284	PtrMemberAccess	reg -> name_table		3485269	1					
ANR	3485285	Identifier	reg		3485269	0					
ANR	3485286	Identifier	name_table		3485269	1					
ANR	3485287	ExpressionStatement	e = ( NameEntry * ) NULL	492:2:11523:11544	3485269	2	True				
ANR	3485288	AssignmentExpression	e = ( NameEntry * ) NULL		3485269	0		=			
ANR	3485289	Identifier	e		3485269	0					
ANR	3485290	CastExpression	( NameEntry * ) NULL		3485269	1					
ANR	3485291	CastTarget	NameEntry *		3485269	0					
ANR	3485292	Identifier	NULL		3485269	1					
ANR	3485293	IfStatement	if ( IS_NOT_NULL ( t ) )		3485269	3					
ANR	3485294	Condition	IS_NOT_NULL ( t )	493:6:11552:11565	3485269	0	True				
ANR	3485295	CallExpression	IS_NOT_NULL ( t )		3485269	0					
ANR	3485296	Callee	IS_NOT_NULL		3485269	0					
ANR	3485297	Identifier	IS_NOT_NULL		3485269	0					
ANR	3485298	ArgumentList	t		3485269	1					
ANR	3485299	Argument	t		3485269	0					
ANR	3485300	Identifier	t		3485269	0					
ANR	3485301	CompoundStatement		6:22:112:112	3485269	1					
ANR	3485302	ExpressionStatement	"onig_st_lookup_strend ( t , name , name_end , ( HashDataType * ) ( ( void * ) ( & e ) ) )"	494:4:11574:11646	3485269	0	True				
ANR	3485303	CallExpression	"onig_st_lookup_strend ( t , name , name_end , ( HashDataType * ) ( ( void * ) ( & e ) ) )"		3485269	0					
ANR	3485304	Callee	onig_st_lookup_strend		3485269	0					
ANR	3485305	Identifier	onig_st_lookup_strend		3485269	0					
ANR	3485306	ArgumentList	t		3485269	1					
ANR	3485307	Argument	t		3485269	0					
ANR	3485308	Identifier	t		3485269	0					
ANR	3485309	Argument	name		3485269	1					
ANR	3485310	Identifier	name		3485269	0					
ANR	3485311	Argument	name_end		3485269	2					
ANR	3485312	Identifier	name_end		3485269	0					
ANR	3485313	Argument	( HashDataType * ) ( ( void * ) ( & e ) )		3485269	3					
ANR	3485314	CastExpression	( HashDataType * ) ( ( void * ) ( & e ) )		3485269	0					
ANR	3485315	CastTarget	HashDataType *		3485269	0					
ANR	3485316	CastExpression	( void * ) ( & e )		3485269	1					
ANR	3485317	CastTarget	void *		3485269	0					
ANR	3485318	UnaryOperationExpression	& e		3485269	1					
ANR	3485319	UnaryOperator	&		3485269	0					
ANR	3485320	Identifier	e		3485269	1					
ANR	3485321	ReturnStatement	return e ;	496:2:11654:11662	3485269	4	True				
ANR	3485322	Identifier	e		3485269	0					
ANR	3485323	ReturnType	static NameEntry *		3485269	1					
ANR	3485324	Identifier	name_find		3485269	2					
ANR	3485325	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end"		3485269	3					
ANR	3485326	Parameter	regex_t * reg	487:10:11399:11410	3485269	0	True				
ANR	3485327	ParameterType	regex_t *		3485269	0					
ANR	3485328	Identifier	reg		3485269	1					
ANR	3485329	Parameter	const UChar * name	487:24:11413:11429	3485269	1	True				
ANR	3485330	ParameterType	const UChar *		3485269	0					
ANR	3485331	Identifier	name		3485269	1					
ANR	3485332	Parameter	const UChar * name_end	487:43:11432:11452	3485269	2	True				
ANR	3485333	ParameterType	const UChar *		3485269	0					
ANR	3485334	Identifier	name_end		3485269	1					
ANR	3485335	CFGEntryNode	ENTRY		3485269		True				
ANR	3485336	CFGExitNode	EXIT		3485269		True				
ANR	3485337	Symbol	IS_NOT_NULL		3485269						
ANR	3485338	Symbol	NULL		3485269						
ANR	3485339	Symbol	t		3485269						
ANR	3485340	Symbol	reg		3485269						
ANR	3485341	Symbol	e		3485269						
ANR	3485342	Symbol	name		3485269						
ANR	3485343	Symbol	reg -> name_table		3485269						
ANR	3485344	Symbol	& e		3485269						
ANR	3485345	Symbol	name_end		3485269						
ANR	3485346	Symbol	* reg		3485269						
ANR	3485347	ClassDef	<unnamed>	499:8:11675:11822							
ANR	3485348	DeclStmt									
ANR	3485349	Decl							"int ( * ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	"int ( * ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	func
ANR	3485350	DeclStmt									
ANR	3485351	Decl							regex_t	regex_t *	reg
ANR	3485352	DeclStmt									
ANR	3485353	Decl							void	void *	arg
ANR	3485354	DeclStmt									
ANR	3485355	Decl							int	int	ret
ANR	3485356	DeclStmt									
ANR	3485357	Decl							OnigEncoding	OnigEncoding	enc
ANR	3485358	DeclStmt									
ANR	3485359	Decl									INamesArg
ANR	3485360	DeclStmt									
ANR	3485361	Decl							int	int	r
ANR	3485362	Function	onig_foreach_name	522:0:12183:12614							
ANR	3485363	FunctionDef	"onig_foreach_name (regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg)"		3485362	0					
ANR	3485364	CompoundStatement		525:0:12304:12614	3485362	0					
ANR	3485365	IdentifierDeclStatement	INamesArg narg ;	526:2:12308:12322	3485362	0	True				
ANR	3485366	IdentifierDecl	narg		3485362	0					
ANR	3485367	IdentifierDeclType	INamesArg		3485362	0					
ANR	3485368	Identifier	narg		3485362	1					
ANR	3485369	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	527:2:12326:12369	3485362	1	True				
ANR	3485370	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		3485362	0					
ANR	3485371	IdentifierDeclType	NameTable *		3485362	0					
ANR	3485372	Identifier	t		3485362	1					
ANR	3485373	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		3485362	2		=			
ANR	3485374	Identifier	t		3485362	0					
ANR	3485375	CastExpression	( NameTable * ) reg -> name_table		3485362	1					
ANR	3485376	CastTarget	NameTable *		3485362	0					
ANR	3485377	PtrMemberAccess	reg -> name_table		3485362	1					
ANR	3485378	Identifier	reg		3485362	0					
ANR	3485379	Identifier	name_table		3485362	1					
ANR	3485380	ExpressionStatement	narg . ret = 0	529:2:12374:12386	3485362	2	True				
ANR	3485381	AssignmentExpression	narg . ret = 0		3485362	0		=			
ANR	3485382	MemberAccess	narg . ret		3485362	0					
ANR	3485383	Identifier	narg		3485362	0					
ANR	3485384	Identifier	ret		3485362	1					
ANR	3485385	PrimaryExpression	0		3485362	1					
ANR	3485386	IfStatement	if ( IS_NOT_NULL ( t ) )		3485362	3					
ANR	3485387	Condition	IS_NOT_NULL ( t )	530:6:12394:12407	3485362	0	True				
ANR	3485388	CallExpression	IS_NOT_NULL ( t )		3485362	0					
ANR	3485389	Callee	IS_NOT_NULL		3485362	0					
ANR	3485390	Identifier	IS_NOT_NULL		3485362	0					
ANR	3485391	ArgumentList	t		3485362	1					
ANR	3485392	Argument	t		3485362	0					
ANR	3485393	Identifier	t		3485362	0					
ANR	3485394	CompoundStatement		6:22:105:105	3485362	1					
ANR	3485395	ExpressionStatement	narg . func = func	531:4:12416:12432	3485362	0	True				
ANR	3485396	AssignmentExpression	narg . func = func		3485362	0		=			
ANR	3485397	MemberAccess	narg . func		3485362	0					
ANR	3485398	Identifier	narg		3485362	0					
ANR	3485399	Identifier	func		3485362	1					
ANR	3485400	Identifier	func		3485362	1					
ANR	3485401	ExpressionStatement	narg . reg = reg	532:4:12438:12453	3485362	1	True				
ANR	3485402	AssignmentExpression	narg . reg = reg		3485362	0		=			
ANR	3485403	MemberAccess	narg . reg		3485362	0					
ANR	3485404	Identifier	narg		3485362	0					
ANR	3485405	Identifier	reg		3485362	1					
ANR	3485406	Identifier	reg		3485362	1					
ANR	3485407	ExpressionStatement	narg . arg = arg	533:4:12459:12474	3485362	2	True				
ANR	3485408	AssignmentExpression	narg . arg = arg		3485362	0		=			
ANR	3485409	MemberAccess	narg . arg		3485362	0					
ANR	3485410	Identifier	narg		3485362	0					
ANR	3485411	Identifier	arg		3485362	1					
ANR	3485412	Identifier	arg		3485362	1					
ANR	3485413	ExpressionStatement	narg . enc = reg -> enc	534:4:12480:12500	3485362	3	True				
ANR	3485414	AssignmentExpression	narg . enc = reg -> enc		3485362	0		=			
ANR	3485415	MemberAccess	narg . enc		3485362	0					
ANR	3485416	Identifier	narg		3485362	0					
ANR	3485417	Identifier	enc		3485362	1					
ANR	3485418	PtrMemberAccess	reg -> enc		3485362	1					
ANR	3485419	Identifier	reg		3485362	0					
ANR	3485420	Identifier	enc		3485362	1					
ANR	3485421	ExpressionStatement	"onig_st_foreach ( t , i_names , ( HashDataType ) & narg )"	535:4:12540:12589	3485362	4	True				
ANR	3485422	CallExpression	"onig_st_foreach ( t , i_names , ( HashDataType ) & narg )"		3485362	0					
ANR	3485423	Callee	onig_st_foreach		3485362	0					
ANR	3485424	Identifier	onig_st_foreach		3485362	0					
ANR	3485425	ArgumentList	t		3485362	1					
ANR	3485426	Argument	t		3485362	0					
ANR	3485427	Identifier	t		3485362	0					
ANR	3485428	Argument	i_names		3485362	1					
ANR	3485429	Identifier	i_names		3485362	0					
ANR	3485430	Argument	( HashDataType ) & narg		3485362	2					
ANR	3485431	CastExpression	( HashDataType ) & narg		3485362	0					
ANR	3485432	CastTarget	HashDataType		3485362	0					
ANR	3485433	UnaryOperationExpression	& narg		3485362	1					
ANR	3485434	UnaryOperator	&		3485362	0					
ANR	3485435	Identifier	narg		3485362	1					
ANR	3485436	ReturnStatement	return narg . ret ;	537:2:12597:12612	3485362	4	True				
ANR	3485437	MemberAccess	narg . ret		3485362	0					
ANR	3485438	Identifier	narg		3485362	0					
ANR	3485439	Identifier	ret		3485362	1					
ANR	3485440	ReturnType	extern int		3485362	1					
ANR	3485441	Identifier	onig_foreach_name		3485362	2					
ANR	3485442	ParameterList	"regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg"		3485362	3					
ANR	3485443	Parameter	regex_t * reg	523:18:12212:12223	3485362	0	True				
ANR	3485444	ParameterType	regex_t *		3485362	0					
ANR	3485445	Identifier	reg		3485362	1					
ANR	3485446	Parameter	"int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	524:2:12228:12290	3485362	1	True				
ANR	3485447	ParameterType	"(( const UChar * , const UChar * , int , int * , regex_t * , void * ) int) *"		3485362	0					
ANR	3485448	Identifier	func		3485362	1					
ANR	3485449	Parameter	void * arg	524:67:12293:12301	3485362	2	True				
ANR	3485450	ParameterType	void *		3485362	0					
ANR	3485451	Identifier	arg		3485362	1					
ANR	3485452	CFGEntryNode	ENTRY		3485362		True				
ANR	3485453	CFGExitNode	EXIT		3485362		True				
ANR	3485454	Symbol	IS_NOT_NULL		3485362						
ANR	3485455	Symbol	narg . enc		3485362						
ANR	3485456	Symbol	reg -> name_table		3485362						
ANR	3485457	Symbol	narg . func		3485362						
ANR	3485458	Symbol	& narg		3485362						
ANR	3485459	Symbol	narg . ret		3485362						
ANR	3485460	Symbol	reg -> enc		3485362						
ANR	3485461	Symbol	narg . reg		3485362						
ANR	3485462	Symbol	func		3485362						
ANR	3485463	Symbol	t		3485362						
ANR	3485464	Symbol	i_names		3485362						
ANR	3485465	Symbol	reg		3485362						
ANR	3485466	Symbol	arg		3485362						
ANR	3485467	Symbol	narg		3485362						
ANR	3485468	Symbol	narg . arg		3485362						
ANR	3485469	Symbol	* reg		3485362						
ANR	3485470	DeclStmt									
ANR	3485471	Decl							int	int	i
ANR	3485472	Function	onig_renumber_name_table	557:0:12949:13170							
ANR	3485473	FunctionDef	"onig_renumber_name_table (regex_t * reg , GroupNumRemap * map)"		3485472	0					
ANR	3485474	CompoundStatement		559:0:13019:13170	3485472	0					
ANR	3485475	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	560:2:13023:13066	3485472	0	True				
ANR	3485476	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		3485472	0					
ANR	3485477	IdentifierDeclType	NameTable *		3485472	0					
ANR	3485478	Identifier	t		3485472	1					
ANR	3485479	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		3485472	2		=			
ANR	3485480	Identifier	t		3485472	0					
ANR	3485481	CastExpression	( NameTable * ) reg -> name_table		3485472	1					
ANR	3485482	CastTarget	NameTable *		3485472	0					
ANR	3485483	PtrMemberAccess	reg -> name_table		3485472	1					
ANR	3485484	Identifier	reg		3485472	0					
ANR	3485485	Identifier	name_table		3485472	1					
ANR	3485486	IfStatement	if ( IS_NOT_NULL ( t ) )		3485472	1					
ANR	3485487	Condition	IS_NOT_NULL ( t )	562:6:13075:13088	3485472	0	True				
ANR	3485488	CallExpression	IS_NOT_NULL ( t )		3485472	0					
ANR	3485489	Callee	IS_NOT_NULL		3485472	0					
ANR	3485490	Identifier	IS_NOT_NULL		3485472	0					
ANR	3485491	ArgumentList	t		3485472	1					
ANR	3485492	Argument	t		3485472	0					
ANR	3485493	Identifier	t		3485472	0					
ANR	3485494	CompoundStatement		4:22:71:71	3485472	1					
ANR	3485495	ExpressionStatement	"onig_st_foreach ( t , i_renumber_name , ( HashDataType ) map )"	563:4:13097:13152	3485472	0	True				
ANR	3485496	CallExpression	"onig_st_foreach ( t , i_renumber_name , ( HashDataType ) map )"		3485472	0					
ANR	3485497	Callee	onig_st_foreach		3485472	0					
ANR	3485498	Identifier	onig_st_foreach		3485472	0					
ANR	3485499	ArgumentList	t		3485472	1					
ANR	3485500	Argument	t		3485472	0					
ANR	3485501	Identifier	t		3485472	0					
ANR	3485502	Argument	i_renumber_name		3485472	1					
ANR	3485503	Identifier	i_renumber_name		3485472	0					
ANR	3485504	Argument	( HashDataType ) map		3485472	2					
ANR	3485505	CastExpression	( HashDataType ) map		3485472	0					
ANR	3485506	CastTarget	HashDataType		3485472	0					
ANR	3485507	Identifier	map		3485472	1					
ANR	3485508	ReturnStatement	return 0 ;	565:2:13160:13168	3485472	2	True				
ANR	3485509	PrimaryExpression	0		3485472	0					
ANR	3485510	ReturnType	extern int		3485472	1					
ANR	3485511	Identifier	onig_renumber_name_table		3485472	2					
ANR	3485512	ParameterList	"regex_t * reg , GroupNumRemap * map"		3485472	3					
ANR	3485513	Parameter	regex_t * reg	558:25:12985:12996	3485472	0	True				
ANR	3485514	ParameterType	regex_t *		3485472	0					
ANR	3485515	Identifier	reg		3485472	1					
ANR	3485516	Parameter	GroupNumRemap * map	558:39:12999:13016	3485472	1	True				
ANR	3485517	ParameterType	GroupNumRemap *		3485472	0					
ANR	3485518	Identifier	map		3485472	1					
ANR	3485519	CFGEntryNode	ENTRY		3485472		True				
ANR	3485520	CFGExitNode	EXIT		3485472		True				
ANR	3485521	Symbol	IS_NOT_NULL		3485472						
ANR	3485522	Symbol	t		3485472						
ANR	3485523	Symbol	reg		3485472						
ANR	3485524	Symbol	reg -> name_table		3485472						
ANR	3485525	Symbol	i_renumber_name		3485472						
ANR	3485526	Symbol	map		3485472						
ANR	3485527	Symbol	* reg		3485472						
ANR	3485528	Function	onig_number_of_names	569:0:13174:13340							
ANR	3485529	FunctionDef	onig_number_of_names (regex_t * reg)		3485528	0					
ANR	3485530	CompoundStatement		571:0:13220:13340	3485528	0					
ANR	3485531	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	572:2:13224:13267	3485528	0	True				
ANR	3485532	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		3485528	0					
ANR	3485533	IdentifierDeclType	NameTable *		3485528	0					
ANR	3485534	Identifier	t		3485528	1					
ANR	3485535	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		3485528	2		=			
ANR	3485536	Identifier	t		3485528	0					
ANR	3485537	CastExpression	( NameTable * ) reg -> name_table		3485528	1					
ANR	3485538	CastTarget	NameTable *		3485528	0					
ANR	3485539	PtrMemberAccess	reg -> name_table		3485528	1					
ANR	3485540	Identifier	reg		3485528	0					
ANR	3485541	Identifier	name_table		3485528	1					
ANR	3485542	IfStatement	if ( IS_NOT_NULL ( t ) )		3485528	1					
ANR	3485543	Condition	IS_NOT_NULL ( t )	574:6:13276:13289	3485528	0	True				
ANR	3485544	CallExpression	IS_NOT_NULL ( t )		3485528	0					
ANR	3485545	Callee	IS_NOT_NULL		3485528	0					
ANR	3485546	Identifier	IS_NOT_NULL		3485528	0					
ANR	3485547	ArgumentList	t		3485528	1					
ANR	3485548	Argument	t		3485528	0					
ANR	3485549	Identifier	t		3485528	0					
ANR	3485550	ReturnStatement	return t -> num_entries ;	575:4:13296:13317	3485528	1	True				
ANR	3485551	PtrMemberAccess	t -> num_entries		3485528	0					
ANR	3485552	Identifier	t		3485528	0					
ANR	3485553	Identifier	num_entries		3485528	1					
ANR	3485554	ElseStatement	else		3485528	0					
ANR	3485555	ReturnStatement	return 0 ;	577:4:13330:13338	3485528	0	True				
ANR	3485556	PrimaryExpression	0		3485528	0					
ANR	3485557	ReturnType	extern int		3485528	1					
ANR	3485558	Identifier	onig_number_of_names		3485528	2					
ANR	3485559	ParameterList	regex_t * reg		3485528	3					
ANR	3485560	Parameter	regex_t * reg	570:21:13206:13217	3485528	0	True				
ANR	3485561	ParameterType	regex_t *		3485528	0					
ANR	3485562	Identifier	reg		3485528	1					
ANR	3485563	CFGEntryNode	ENTRY		3485528		True				
ANR	3485564	CFGExitNode	EXIT		3485528		True				
ANR	3485565	Symbol	IS_NOT_NULL		3485528						
ANR	3485566	Symbol	t		3485528						
ANR	3485567	Symbol	reg		3485528						
ANR	3485568	Symbol	reg -> name_table		3485528						
ANR	3485569	Symbol	t -> num_entries		3485528						
ANR	3485570	Symbol	* reg		3485528						
ANR	3485571	Symbol	* t		3485528						
ANR	3485572	ClassDef	<unnamed>	584:8:13415:13489							
ANR	3485573	DeclStmt									
ANR	3485574	Decl							NameEntry	NameEntry *	e
ANR	3485575	DeclStmt									
ANR	3485576	Decl							int	int	num
ANR	3485577	DeclStmt									
ANR	3485578	Decl							int	int	alloc
ANR	3485579	DeclStmt									
ANR	3485580	Decl									NameTable
ANR	3485581	Function	onig_print_names	591:0:13510:14135							
ANR	3485582	FunctionDef	"onig_print_names (FILE * fp , regex_t * reg)"		3485581	0					
ANR	3485583	CompoundStatement		593:0:13562:14135	3485581	0					
ANR	3485584	IdentifierDeclStatement	"int i , j ;"	594:2:13566:13574	3485581	0	True				
ANR	3485585	IdentifierDecl	i		3485581	0					
ANR	3485586	IdentifierDeclType	int		3485581	0					
ANR	3485587	Identifier	i		3485581	1					
ANR	3485588	IdentifierDecl	j		3485581	1					
ANR	3485589	IdentifierDeclType	int		3485581	0					
ANR	3485590	Identifier	j		3485581	1					
ANR	3485591	IdentifierDeclStatement	NameEntry * e ;	595:2:13578:13590	3485581	1	True				
ANR	3485592	IdentifierDecl	* e		3485581	0					
ANR	3485593	IdentifierDeclType	NameEntry *		3485581	0					
ANR	3485594	Identifier	e		3485581	1					
ANR	3485595	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	596:2:13594:13637	3485581	2	True				
ANR	3485596	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		3485581	0					
ANR	3485597	IdentifierDeclType	NameTable *		3485581	0					
ANR	3485598	Identifier	t		3485581	1					
ANR	3485599	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		3485581	2		=			
ANR	3485600	Identifier	t		3485581	0					
ANR	3485601	CastExpression	( NameTable * ) reg -> name_table		3485581	1					
ANR	3485602	CastTarget	NameTable *		3485581	0					
ANR	3485603	PtrMemberAccess	reg -> name_table		3485581	1					
ANR	3485604	Identifier	reg		3485581	0					
ANR	3485605	Identifier	name_table		3485581	1					
ANR	3485606	IfStatement	if ( IS_NOT_NULL ( t ) && t -> num > 0 )		3485581	3					
ANR	3485607	Condition	IS_NOT_NULL ( t ) && t -> num > 0	598:6:13646:13673	3485581	0	True				
ANR	3485608	AndExpression	IS_NOT_NULL ( t ) && t -> num > 0		3485581	0		&&			
ANR	3485609	CallExpression	IS_NOT_NULL ( t )		3485581	0					
ANR	3485610	Callee	IS_NOT_NULL		3485581	0					
ANR	3485611	Identifier	IS_NOT_NULL		3485581	0					
ANR	3485612	ArgumentList	t		3485581	1					
ANR	3485613	Argument	t		3485581	0					
ANR	3485614	Identifier	t		3485581	0					
ANR	3485615	RelationalExpression	t -> num > 0		3485581	1		>			
ANR	3485616	PtrMemberAccess	t -> num		3485581	0					
ANR	3485617	Identifier	t		3485581	0					
ANR	3485618	Identifier	num		3485581	1					
ANR	3485619	PrimaryExpression	0		3485581	1					
ANR	3485620	CompoundStatement		6:36:113:113	3485581	1					
ANR	3485621	ExpressionStatement	"fprintf ( fp , ""name table\\n"" )"	599:4:13682:13709	3485581	0	True				
ANR	3485622	CallExpression	"fprintf ( fp , ""name table\\n"" )"		3485581	0					
ANR	3485623	Callee	fprintf		3485581	0					
ANR	3485624	Identifier	fprintf		3485581	0					
ANR	3485625	ArgumentList	fp		3485581	1					
ANR	3485626	Argument	fp		3485581	0					
ANR	3485627	Identifier	fp		3485581	0					
ANR	3485628	Argument	"""name table\\n"""		3485581	1					
ANR	3485629	PrimaryExpression	"""name table\\n"""		3485581	0					
ANR	3485630	ForStatement	for ( i = 0 ; i < t -> num ; i ++ )		3485581	1					
ANR	3485631	ForInit	i = 0 ;	600:9:13720:13725	3485581	0	True				
ANR	3485632	AssignmentExpression	i = 0		3485581	0		=			
ANR	3485633	Identifier	i		3485581	0					
ANR	3485634	PrimaryExpression	0		3485581	1					
ANR	3485635	Condition	i < t -> num	600:16:13727:13736	3485581	1	True				
ANR	3485636	RelationalExpression	i < t -> num		3485581	0		<			
ANR	3485637	Identifier	i		3485581	0					
ANR	3485638	PtrMemberAccess	t -> num		3485581	1					
ANR	3485639	Identifier	t		3485581	0					
ANR	3485640	Identifier	num		3485581	1					
ANR	3485641	PostIncDecOperationExpression	i ++	600:28:13739:13741	3485581	2	True				
ANR	3485642	Identifier	i		3485581	0					
ANR	3485643	IncDec	++		3485581	1					
ANR	3485644	CompoundStatement		8:33:181:181	3485581	3					
ANR	3485645	ExpressionStatement	e = & ( t -> e [ i ] )	601:6:13752:13766	3485581	0	True				
ANR	3485646	AssignmentExpression	e = & ( t -> e [ i ] )		3485581	0		=			
ANR	3485647	Identifier	e		3485581	0					
ANR	3485648	UnaryOperationExpression	& ( t -> e [ i ] )		3485581	1					
ANR	3485649	UnaryOperator	&		3485581	0					
ANR	3485650	ArrayIndexing	t -> e [ i ]		3485581	1					
ANR	3485651	PtrMemberAccess	t -> e		3485581	0					
ANR	3485652	Identifier	t		3485581	0					
ANR	3485653	Identifier	e		3485581	1					
ANR	3485654	Identifier	i		3485581	1					
ANR	3485655	ExpressionStatement	"fprintf ( fp , ""%s: "" , e -> name )"	602:6:13774:13802	3485581	1	True				
ANR	3485656	CallExpression	"fprintf ( fp , ""%s: "" , e -> name )"		3485581	0					
ANR	3485657	Callee	fprintf		3485581	0					
ANR	3485658	Identifier	fprintf		3485581	0					
ANR	3485659	ArgumentList	fp		3485581	1					
ANR	3485660	Argument	fp		3485581	0					
ANR	3485661	Identifier	fp		3485581	0					
ANR	3485662	Argument	"""%s: """		3485581	1					
ANR	3485663	PrimaryExpression	"""%s: """		3485581	0					
ANR	3485664	Argument	e -> name		3485581	2					
ANR	3485665	PtrMemberAccess	e -> name		3485581	0					
ANR	3485666	Identifier	e		3485581	0					
ANR	3485667	Identifier	name		3485581	1					
ANR	3485668	IfStatement	if ( e -> back_num == 0 )		3485581	2					
ANR	3485669	Condition	e -> back_num == 0	603:10:13814:13829	3485581	0	True				
ANR	3485670	EqualityExpression	e -> back_num == 0		3485581	0		==			
ANR	3485671	PtrMemberAccess	e -> back_num		3485581	0					
ANR	3485672	Identifier	e		3485581	0					
ANR	3485673	Identifier	back_num		3485581	1					
ANR	3485674	PrimaryExpression	0		3485581	1					
ANR	3485675	CompoundStatement		11:28:269:269	3485581	1					
ANR	3485676	ExpressionStatement	"fputs ( ""-"" , fp )"	604:1:13835:13849	3485581	0	True				
ANR	3485677	CallExpression	"fputs ( ""-"" , fp )"		3485581	0					
ANR	3485678	Callee	fputs		3485581	0					
ANR	3485679	Identifier	fputs		3485581	0					
ANR	3485680	ArgumentList	"""-"""		3485581	1					
ANR	3485681	Argument	"""-"""		3485581	0					
ANR	3485682	PrimaryExpression	"""-"""		3485581	0					
ANR	3485683	Argument	fp		3485581	1					
ANR	3485684	Identifier	fp		3485581	0					
ANR	3485685	ElseStatement	else		3485581	0					
ANR	3485686	IfStatement	if ( e -> back_num == 1 )		3485581	0					
ANR	3485687	Condition	e -> back_num == 1	606:15:13874:13889	3485581	0	True				
ANR	3485688	EqualityExpression	e -> back_num == 1		3485581	0		==			
ANR	3485689	PtrMemberAccess	e -> back_num		3485581	0					
ANR	3485690	Identifier	e		3485581	0					
ANR	3485691	Identifier	back_num		3485581	1					
ANR	3485692	PrimaryExpression	1		3485581	1					
ANR	3485693	CompoundStatement		14:33:329:329	3485581	1					
ANR	3485694	ExpressionStatement	"fprintf ( fp , ""%d"" , e -> back_ref1 )"	607:1:13895:13926	3485581	0	True				
ANR	3485695	CallExpression	"fprintf ( fp , ""%d"" , e -> back_ref1 )"		3485581	0					
ANR	3485696	Callee	fprintf		3485581	0					
ANR	3485697	Identifier	fprintf		3485581	0					
ANR	3485698	ArgumentList	fp		3485581	1					
ANR	3485699	Argument	fp		3485581	0					
ANR	3485700	Identifier	fp		3485581	0					
ANR	3485701	Argument	"""%d"""		3485581	1					
ANR	3485702	PrimaryExpression	"""%d"""		3485581	0					
ANR	3485703	Argument	e -> back_ref1		3485581	2					
ANR	3485704	PtrMemberAccess	e -> back_ref1		3485581	0					
ANR	3485705	Identifier	e		3485581	0					
ANR	3485706	Identifier	back_ref1		3485581	1					
ANR	3485707	ElseStatement	else		3485581	0					
ANR	3485708	CompoundStatement		17:11:384:384	3485581	0					
ANR	3485709	ForStatement	for ( j = 0 ; j < e -> back_num ; j ++ )		3485581	0					
ANR	3485710	ForInit	j = 0 ;	610:6:13955:13960	3485581	0	True				
ANR	3485711	AssignmentExpression	j = 0		3485581	0		=			
ANR	3485712	Identifier	j		3485581	0					
ANR	3485713	PrimaryExpression	0		3485581	1					
ANR	3485714	Condition	j < e -> back_num	610:13:13962:13976	3485581	1	True				
ANR	3485715	RelationalExpression	j < e -> back_num		3485581	0		<			
ANR	3485716	Identifier	j		3485581	0					
ANR	3485717	PtrMemberAccess	e -> back_num		3485581	1					
ANR	3485718	Identifier	e		3485581	0					
ANR	3485719	Identifier	back_num		3485581	1					
ANR	3485720	PostIncDecOperationExpression	j ++	610:30:13979:13981	3485581	2	True				
ANR	3485721	Identifier	j		3485581	0					
ANR	3485722	IncDec	++		3485581	1					
ANR	3485723	CompoundStatement		18:35:421:421	3485581	3					
ANR	3485724	IfStatement	if ( j > 0 )		3485581	0					
ANR	3485725	Condition	j > 0	611:7:13993:13997	3485581	0	True				
ANR	3485726	RelationalExpression	j > 0		3485581	0		>			
ANR	3485727	Identifier	j		3485581	0					
ANR	3485728	PrimaryExpression	0		3485581	1					
ANR	3485729	ExpressionStatement	"fprintf ( fp , "", "" )"	611:14:14000:14017	3485581	1	True				
ANR	3485730	CallExpression	"fprintf ( fp , "", "" )"		3485581	0					
ANR	3485731	Callee	fprintf		3485581	0					
ANR	3485732	Identifier	fprintf		3485581	0					
ANR	3485733	ArgumentList	fp		3485581	1					
ANR	3485734	Argument	fp		3485581	0					
ANR	3485735	Identifier	fp		3485581	0					
ANR	3485736	Argument	""", """		3485581	1					
ANR	3485737	PrimaryExpression	""", """		3485581	0					
ANR	3485738	ExpressionStatement	"fprintf ( fp , ""%d"" , e -> back_refs [ j ] )"	612:3:14022:14056	3485581	1	True				
ANR	3485739	CallExpression	"fprintf ( fp , ""%d"" , e -> back_refs [ j ] )"		3485581	0					
ANR	3485740	Callee	fprintf		3485581	0					
ANR	3485741	Identifier	fprintf		3485581	0					
ANR	3485742	ArgumentList	fp		3485581	1					
ANR	3485743	Argument	fp		3485581	0					
ANR	3485744	Identifier	fp		3485581	0					
ANR	3485745	Argument	"""%d"""		3485581	1					
ANR	3485746	PrimaryExpression	"""%d"""		3485581	0					
ANR	3485747	Argument	e -> back_refs [ j ]		3485581	2					
ANR	3485748	ArrayIndexing	e -> back_refs [ j ]		3485581	0					
ANR	3485749	PtrMemberAccess	e -> back_refs		3485581	0					
ANR	3485750	Identifier	e		3485581	0					
ANR	3485751	Identifier	back_refs		3485581	1					
ANR	3485752	Identifier	j		3485581	1					
ANR	3485753	ExpressionStatement	"fputs ( ""\\n"" , fp )"	615:6:14075:14090	3485581	3	True				
ANR	3485754	CallExpression	"fputs ( ""\\n"" , fp )"		3485581	0					
ANR	3485755	Callee	fputs		3485581	0					
ANR	3485756	Identifier	fputs		3485581	0					
ANR	3485757	ArgumentList	"""\\n"""		3485581	1					
ANR	3485758	Argument	"""\\n"""		3485581	0					
ANR	3485759	PrimaryExpression	"""\\n"""		3485581	0					
ANR	3485760	Argument	fp		3485581	1					
ANR	3485761	Identifier	fp		3485581	0					
ANR	3485762	ExpressionStatement	"fputs ( ""\\n"" , fp )"	617:4:14102:14117	3485581	2	True				
ANR	3485763	CallExpression	"fputs ( ""\\n"" , fp )"		3485581	0					
ANR	3485764	Callee	fputs		3485581	0					
ANR	3485765	Identifier	fputs		3485581	0					
ANR	3485766	ArgumentList	"""\\n"""		3485581	1					
ANR	3485767	Argument	"""\\n"""		3485581	0					
ANR	3485768	PrimaryExpression	"""\\n"""		3485581	0					
ANR	3485769	Argument	fp		3485581	1					
ANR	3485770	Identifier	fp		3485581	0					
ANR	3485771	ReturnStatement	return 0 ;	619:2:14125:14133	3485581	4	True				
ANR	3485772	PrimaryExpression	0		3485581	0					
ANR	3485773	ReturnType	extern int		3485581	1					
ANR	3485774	Identifier	onig_print_names		3485581	2					
ANR	3485775	ParameterList	"FILE * fp , regex_t * reg"		3485581	3					
ANR	3485776	Parameter	FILE * fp	592:17:13538:13545	3485581	0	True				
ANR	3485777	ParameterType	FILE *		3485581	0					
ANR	3485778	Identifier	fp		3485581	1					
ANR	3485779	Parameter	regex_t * reg	592:27:13548:13559	3485581	1	True				
ANR	3485780	ParameterType	regex_t *		3485581	0					
ANR	3485781	Identifier	reg		3485581	1					
ANR	3485782	CFGEntryNode	ENTRY		3485581		True				
ANR	3485783	CFGExitNode	EXIT		3485581		True				
ANR	3485784	Symbol	IS_NOT_NULL		3485581						
ANR	3485785	Symbol	e -> back_ref1		3485581						
ANR	3485786	Symbol	e -> back_num		3485581						
ANR	3485787	Symbol	e -> back_refs		3485581						
ANR	3485788	Symbol	e		3485581						
ANR	3485789	Symbol	* * e		3485581						
ANR	3485790	Symbol	* e -> back_refs		3485581						
ANR	3485791	Symbol	reg -> name_table		3485581						
ANR	3485792	Symbol	t -> e		3485581						
ANR	3485793	Symbol	i		3485581						
ANR	3485794	Symbol	fp		3485581						
ANR	3485795	Symbol	j		3485581						
ANR	3485796	Symbol	* e		3485581						
ANR	3485797	Symbol	t -> num		3485581						
ANR	3485798	Symbol	t		3485581						
ANR	3485799	Symbol	* j		3485581						
ANR	3485800	Symbol	reg		3485581						
ANR	3485801	Symbol	* reg		3485581						
ANR	3485802	Symbol	* t		3485581						
ANR	3485803	Symbol	e -> name		3485581						
ANR	3485804	Function	names_clear	623:0:14145:14673							
ANR	3485805	FunctionDef	names_clear (regex_t * reg)		3485804	0					
ANR	3485806	CompoundStatement		625:0:14182:14673	3485804	0					
ANR	3485807	IdentifierDeclStatement	int i ;	626:2:14186:14191	3485804	0	True				
ANR	3485808	IdentifierDecl	i		3485804	0					
ANR	3485809	IdentifierDeclType	int		3485804	0					
ANR	3485810	Identifier	i		3485804	1					
ANR	3485811	IdentifierDeclStatement	NameEntry * e ;	627:2:14195:14207	3485804	1	True				
ANR	3485812	IdentifierDecl	* e		3485804	0					
ANR	3485813	IdentifierDeclType	NameEntry *		3485804	0					
ANR	3485814	Identifier	e		3485804	1					
ANR	3485815	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	628:2:14211:14254	3485804	2	True				
ANR	3485816	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		3485804	0					
ANR	3485817	IdentifierDeclType	NameTable *		3485804	0					
ANR	3485818	Identifier	t		3485804	1					
ANR	3485819	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		3485804	2		=			
ANR	3485820	Identifier	t		3485804	0					
ANR	3485821	CastExpression	( NameTable * ) reg -> name_table		3485804	1					
ANR	3485822	CastTarget	NameTable *		3485804	0					
ANR	3485823	PtrMemberAccess	reg -> name_table		3485804	1					
ANR	3485824	Identifier	reg		3485804	0					
ANR	3485825	Identifier	name_table		3485804	1					
ANR	3485826	IfStatement	if ( IS_NOT_NULL ( t ) )		3485804	3					
ANR	3485827	Condition	IS_NOT_NULL ( t )	630:6:14263:14276	3485804	0	True				
ANR	3485828	CallExpression	IS_NOT_NULL ( t )		3485804	0					
ANR	3485829	Callee	IS_NOT_NULL		3485804	0					
ANR	3485830	Identifier	IS_NOT_NULL		3485804	0					
ANR	3485831	ArgumentList	t		3485804	1					
ANR	3485832	Argument	t		3485804	0					
ANR	3485833	Identifier	t		3485804	0					
ANR	3485834	CompoundStatement		6:22:96:96	3485804	1					
ANR	3485835	ForStatement	for ( i = 0 ; i < t -> num ; i ++ )		3485804	0					
ANR	3485836	ForInit	i = 0 ;	631:9:14290:14295	3485804	0	True				
ANR	3485837	AssignmentExpression	i = 0		3485804	0		=			
ANR	3485838	Identifier	i		3485804	0					
ANR	3485839	PrimaryExpression	0		3485804	1					
ANR	3485840	Condition	i < t -> num	631:16:14297:14306	3485804	1	True				
ANR	3485841	RelationalExpression	i < t -> num		3485804	0		<			
ANR	3485842	Identifier	i		3485804	0					
ANR	3485843	PtrMemberAccess	t -> num		3485804	1					
ANR	3485844	Identifier	t		3485804	0					
ANR	3485845	Identifier	num		3485804	1					
ANR	3485846	PostIncDecOperationExpression	i ++	631:28:14309:14311	3485804	2	True				
ANR	3485847	Identifier	i		3485804	0					
ANR	3485848	IncDec	++		3485804	1					
ANR	3485849	CompoundStatement		7:33:131:131	3485804	3					
ANR	3485850	ExpressionStatement	e = & ( t -> e [ i ] )	632:6:14322:14336	3485804	0	True				
ANR	3485851	AssignmentExpression	e = & ( t -> e [ i ] )		3485804	0		=			
ANR	3485852	Identifier	e		3485804	0					
ANR	3485853	UnaryOperationExpression	& ( t -> e [ i ] )		3485804	1					
ANR	3485854	UnaryOperator	&		3485804	0					
ANR	3485855	ArrayIndexing	t -> e [ i ]		3485804	1					
ANR	3485856	PtrMemberAccess	t -> e		3485804	0					
ANR	3485857	Identifier	t		3485804	0					
ANR	3485858	Identifier	e		3485804	1					
ANR	3485859	Identifier	i		3485804	1					
ANR	3485860	IfStatement	if ( IS_NOT_NULL ( e -> name ) )		3485804	1					
ANR	3485861	Condition	IS_NOT_NULL ( e -> name )	633:10:14348:14367	3485804	0	True				
ANR	3485862	CallExpression	IS_NOT_NULL ( e -> name )		3485804	0					
ANR	3485863	Callee	IS_NOT_NULL		3485804	0					
ANR	3485864	Identifier	IS_NOT_NULL		3485804	0					
ANR	3485865	ArgumentList	e -> name		3485804	1					
ANR	3485866	Argument	e -> name		3485804	0					
ANR	3485867	PtrMemberAccess	e -> name		3485804	0					
ANR	3485868	Identifier	e		3485804	0					
ANR	3485869	Identifier	name		3485804	1					
ANR	3485870	CompoundStatement		9:32:187:187	3485804	1					
ANR	3485871	ExpressionStatement	xfree ( e -> name )	634:1:14373:14387	3485804	0	True				
ANR	3485872	CallExpression	xfree ( e -> name )		3485804	0					
ANR	3485873	Callee	xfree		3485804	0					
ANR	3485874	Identifier	xfree		3485804	0					
ANR	3485875	ArgumentList	e -> name		3485804	1					
ANR	3485876	Argument	e -> name		3485804	0					
ANR	3485877	PtrMemberAccess	e -> name		3485804	0					
ANR	3485878	Identifier	e		3485804	0					
ANR	3485879	Identifier	name		3485804	1					
ANR	3485880	ExpressionStatement	e -> name = NULL	635:1:14390:14410	3485804	1	True				
ANR	3485881	AssignmentExpression	e -> name = NULL		3485804	0		=			
ANR	3485882	PtrMemberAccess	e -> name		3485804	0					
ANR	3485883	Identifier	e		3485804	0					
ANR	3485884	Identifier	name		3485804	1					
ANR	3485885	Identifier	NULL		3485804	1					
ANR	3485886	ExpressionStatement	e -> name_len = 0	636:1:14413:14430	3485804	2	True				
ANR	3485887	AssignmentExpression	e -> name_len = 0		3485804	0		=			
ANR	3485888	PtrMemberAccess	e -> name_len		3485804	0					
ANR	3485889	Identifier	e		3485804	0					
ANR	3485890	Identifier	name_len		3485804	1					
ANR	3485891	PrimaryExpression	0		3485804	1					
ANR	3485892	ExpressionStatement	e -> back_num = 0	637:1:14433:14450	3485804	3	True				
ANR	3485893	AssignmentExpression	e -> back_num = 0		3485804	0		=			
ANR	3485894	PtrMemberAccess	e -> back_num		3485804	0					
ANR	3485895	Identifier	e		3485804	0					
ANR	3485896	Identifier	back_num		3485804	1					
ANR	3485897	PrimaryExpression	0		3485804	1					
ANR	3485898	ExpressionStatement	e -> back_alloc = 0	638:1:14453:14470	3485804	4	True				
ANR	3485899	AssignmentExpression	e -> back_alloc = 0		3485804	0		=			
ANR	3485900	PtrMemberAccess	e -> back_alloc		3485804	0					
ANR	3485901	Identifier	e		3485804	0					
ANR	3485902	Identifier	back_alloc		3485804	1					
ANR	3485903	PrimaryExpression	0		3485804	1					
ANR	3485904	IfStatement	if ( IS_NOT_NULL ( e -> back_refs ) )		3485804	5					
ANR	3485905	Condition	IS_NOT_NULL ( e -> back_refs )	639:5:14477:14501	3485804	0	True				
ANR	3485906	CallExpression	IS_NOT_NULL ( e -> back_refs )		3485804	0					
ANR	3485907	Callee	IS_NOT_NULL		3485804	0					
ANR	3485908	Identifier	IS_NOT_NULL		3485804	0					
ANR	3485909	ArgumentList	e -> back_refs		3485804	1					
ANR	3485910	Argument	e -> back_refs		3485804	0					
ANR	3485911	PtrMemberAccess	e -> back_refs		3485804	0					
ANR	3485912	Identifier	e		3485804	0					
ANR	3485913	Identifier	back_refs		3485804	1					
ANR	3485914	ExpressionStatement	xfree ( e -> back_refs )	639:32:14504:14523	3485804	1	True				
ANR	3485915	CallExpression	xfree ( e -> back_refs )		3485804	0					
ANR	3485916	Callee	xfree		3485804	0					
ANR	3485917	Identifier	xfree		3485804	0					
ANR	3485918	ArgumentList	e -> back_refs		3485804	1					
ANR	3485919	Argument	e -> back_refs		3485804	0					
ANR	3485920	PtrMemberAccess	e -> back_refs		3485804	0					
ANR	3485921	Identifier	e		3485804	0					
ANR	3485922	Identifier	back_refs		3485804	1					
ANR	3485923	ExpressionStatement	e -> back_refs = ( int * ) NULL	640:1:14526:14552	3485804	6	True				
ANR	3485924	AssignmentExpression	e -> back_refs = ( int * ) NULL		3485804	0		=			
ANR	3485925	PtrMemberAccess	e -> back_refs		3485804	0					
ANR	3485926	Identifier	e		3485804	0					
ANR	3485927	Identifier	back_refs		3485804	1					
ANR	3485928	CastExpression	( int * ) NULL		3485804	1					
ANR	3485929	CastTarget	int *		3485804	0					
ANR	3485930	Identifier	NULL		3485804	1					
ANR	3485931	IfStatement	if ( IS_NOT_NULL ( t -> e ) )		3485804	1					
ANR	3485932	Condition	IS_NOT_NULL ( t -> e )	643:8:14576:14592	3485804	0	True				
ANR	3485933	CallExpression	IS_NOT_NULL ( t -> e )		3485804	0					
ANR	3485934	Callee	IS_NOT_NULL		3485804	0					
ANR	3485935	Identifier	IS_NOT_NULL		3485804	0					
ANR	3485936	ArgumentList	t -> e		3485804	1					
ANR	3485937	Argument	t -> e		3485804	0					
ANR	3485938	PtrMemberAccess	t -> e		3485804	0					
ANR	3485939	Identifier	t		3485804	0					
ANR	3485940	Identifier	e		3485804	1					
ANR	3485941	CompoundStatement		19:27:412:412	3485804	1					
ANR	3485942	ExpressionStatement	xfree ( t -> e )	644:6:14603:14614	3485804	0	True				
ANR	3485943	CallExpression	xfree ( t -> e )		3485804	0					
ANR	3485944	Callee	xfree		3485804	0					
ANR	3485945	Identifier	xfree		3485804	0					
ANR	3485946	ArgumentList	t -> e		3485804	1					
ANR	3485947	Argument	t -> e		3485804	0					
ANR	3485948	PtrMemberAccess	t -> e		3485804	0					
ANR	3485949	Identifier	t		3485804	0					
ANR	3485950	Identifier	e		3485804	1					
ANR	3485951	ExpressionStatement	t -> e = NULL	645:6:14622:14633	3485804	1	True				
ANR	3485952	AssignmentExpression	t -> e = NULL		3485804	0		=			
ANR	3485953	PtrMemberAccess	t -> e		3485804	0					
ANR	3485954	Identifier	t		3485804	0					
ANR	3485955	Identifier	e		3485804	1					
ANR	3485956	Identifier	NULL		3485804	1					
ANR	3485957	ExpressionStatement	t -> num = 0	647:4:14645:14655	3485804	2	True				
ANR	3485958	AssignmentExpression	t -> num = 0		3485804	0		=			
ANR	3485959	PtrMemberAccess	t -> num		3485804	0					
ANR	3485960	Identifier	t		3485804	0					
ANR	3485961	Identifier	num		3485804	1					
ANR	3485962	PrimaryExpression	0		3485804	1					
ANR	3485963	ReturnStatement	return 0 ;	649:2:14663:14671	3485804	4	True				
ANR	3485964	PrimaryExpression	0		3485804	0					
ANR	3485965	ReturnType	static int		3485804	1					
ANR	3485966	Identifier	names_clear		3485804	2					
ANR	3485967	ParameterList	regex_t * reg		3485804	3					
ANR	3485968	Parameter	regex_t * reg	624:12:14168:14179	3485804	0	True				
ANR	3485969	ParameterType	regex_t *		3485804	0					
ANR	3485970	Identifier	reg		3485804	1					
ANR	3485971	CFGEntryNode	ENTRY		3485804		True				
ANR	3485972	CFGExitNode	EXIT		3485804		True				
ANR	3485973	Symbol	IS_NOT_NULL		3485804						
ANR	3485974	Symbol	NULL		3485804						
ANR	3485975	Symbol	e -> back_num		3485804						
ANR	3485976	Symbol	e -> back_refs		3485804						
ANR	3485977	Symbol	e		3485804						
ANR	3485978	Symbol	reg -> name_table		3485804						
ANR	3485979	Symbol	t -> e		3485804						
ANR	3485980	Symbol	i		3485804						
ANR	3485981	Symbol	* e		3485804						
ANR	3485982	Symbol	t -> num		3485804						
ANR	3485983	Symbol	t		3485804						
ANR	3485984	Symbol	reg		3485804						
ANR	3485985	Symbol	* reg		3485804						
ANR	3485986	Symbol	* t		3485804						
ANR	3485987	Symbol	e -> back_alloc		3485804						
ANR	3485988	Symbol	e -> name		3485804						
ANR	3485989	Symbol	e -> name_len		3485804						
ANR	3485990	Function	onig_names_free	652:0:14676:14895							
ANR	3485991	FunctionDef	onig_names_free (regex_t * reg)		3485990	0					
ANR	3485992	CompoundStatement		654:0:14717:14895	3485990	0					
ANR	3485993	IdentifierDeclStatement	int r ;	655:2:14721:14726	3485990	0	True				
ANR	3485994	IdentifierDecl	r		3485990	0					
ANR	3485995	IdentifierDeclType	int		3485990	0					
ANR	3485996	Identifier	r		3485990	1					
ANR	3485997	IdentifierDeclStatement	NameTable * t ;	656:2:14730:14742	3485990	1	True				
ANR	3485998	IdentifierDecl	* t		3485990	0					
ANR	3485999	IdentifierDeclType	NameTable *		3485990	0					
ANR	3486000	Identifier	t		3485990	1					
ANR	3486001	ExpressionStatement	r = names_clear ( reg )	658:2:14747:14767	3485990	2	True				
ANR	3486002	AssignmentExpression	r = names_clear ( reg )		3485990	0		=			
ANR	3486003	Identifier	r		3485990	0					
ANR	3486004	CallExpression	names_clear ( reg )		3485990	1					
ANR	3486005	Callee	names_clear		3485990	0					
ANR	3486006	Identifier	names_clear		3485990	0					
ANR	3486007	ArgumentList	reg		3485990	1					
ANR	3486008	Argument	reg		3485990	0					
ANR	3486009	Identifier	reg		3485990	0					
ANR	3486010	IfStatement	if ( r )		3485990	3					
ANR	3486011	Condition	r	659:6:14775:14775	3485990	0	True				
ANR	3486012	Identifier	r		3485990	0					
ANR	3486013	ReturnStatement	return r ;	659:9:14778:14786	3485990	1	True				
ANR	3486014	Identifier	r		3485990	0					
ANR	3486015	ExpressionStatement	t = ( NameTable * ) reg -> name_table	661:2:14791:14823	3485990	4	True				
ANR	3486016	AssignmentExpression	t = ( NameTable * ) reg -> name_table		3485990	0		=			
ANR	3486017	Identifier	t		3485990	0					
ANR	3486018	CastExpression	( NameTable * ) reg -> name_table		3485990	1					
ANR	3486019	CastTarget	NameTable *		3485990	0					
ANR	3486020	PtrMemberAccess	reg -> name_table		3485990	1					
ANR	3486021	Identifier	reg		3485990	0					
ANR	3486022	Identifier	name_table		3485990	1					
ANR	3486023	IfStatement	if ( IS_NOT_NULL ( t ) )		3485990	5					
ANR	3486024	Condition	IS_NOT_NULL ( t )	662:6:14831:14844	3485990	0	True				
ANR	3486025	CallExpression	IS_NOT_NULL ( t )		3485990	0					
ANR	3486026	Callee	IS_NOT_NULL		3485990	0					
ANR	3486027	Identifier	IS_NOT_NULL		3485990	0					
ANR	3486028	ArgumentList	t		3485990	1					
ANR	3486029	Argument	t		3485990	0					
ANR	3486030	Identifier	t		3485990	0					
ANR	3486031	ExpressionStatement	xfree ( t )	662:22:14847:14855	3485990	1	True				
ANR	3486032	CallExpression	xfree ( t )		3485990	0					
ANR	3486033	Callee	xfree		3485990	0					
ANR	3486034	Identifier	xfree		3485990	0					
ANR	3486035	ArgumentList	t		3485990	1					
ANR	3486036	Argument	t		3485990	0					
ANR	3486037	Identifier	t		3485990	0					
ANR	3486038	ExpressionStatement	reg -> name_table = NULL	663:2:14859:14881	3485990	6	True				
ANR	3486039	AssignmentExpression	reg -> name_table = NULL		3485990	0		=			
ANR	3486040	PtrMemberAccess	reg -> name_table		3485990	0					
ANR	3486041	Identifier	reg		3485990	0					
ANR	3486042	Identifier	name_table		3485990	1					
ANR	3486043	Identifier	NULL		3485990	1					
ANR	3486044	ReturnStatement	return 0 ;	664:2:14885:14893	3485990	7	True				
ANR	3486045	PrimaryExpression	0		3485990	0					
ANR	3486046	ReturnType	extern int		3485990	1					
ANR	3486047	Identifier	onig_names_free		3485990	2					
ANR	3486048	ParameterList	regex_t * reg		3485990	3					
ANR	3486049	Parameter	regex_t * reg	653:16:14703:14714	3485990	0	True				
ANR	3486050	ParameterType	regex_t *		3485990	0					
ANR	3486051	Identifier	reg		3485990	1					
ANR	3486052	CFGEntryNode	ENTRY		3485990		True				
ANR	3486053	CFGExitNode	EXIT		3485990		True				
ANR	3486054	Symbol	r		3485990						
ANR	3486055	Symbol	IS_NOT_NULL		3485990						
ANR	3486056	Symbol	NULL		3485990						
ANR	3486057	Symbol	t		3485990						
ANR	3486058	Symbol	reg		3485990						
ANR	3486059	Symbol	names_clear		3485990						
ANR	3486060	Symbol	reg -> name_table		3485990						
ANR	3486061	Symbol	* reg		3485990						
ANR	3486062	Function	name_find	667:0:14898:15278							
ANR	3486063	FunctionDef	"name_find (regex_t * reg , UChar * name , UChar * name_end)"		3486062	0					
ANR	3486064	CompoundStatement		669:0:14970:15278	3486062	0					
ANR	3486065	IdentifierDeclStatement	"int i , len ;"	670:2:14974:14984	3486062	0	True				
ANR	3486066	IdentifierDecl	i		3486062	0					
ANR	3486067	IdentifierDeclType	int		3486062	0					
ANR	3486068	Identifier	i		3486062	1					
ANR	3486069	IdentifierDecl	len		3486062	1					
ANR	3486070	IdentifierDeclType	int		3486062	0					
ANR	3486071	Identifier	len		3486062	1					
ANR	3486072	IdentifierDeclStatement	NameEntry * e ;	671:2:14988:15000	3486062	1	True				
ANR	3486073	IdentifierDecl	* e		3486062	0					
ANR	3486074	IdentifierDeclType	NameEntry *		3486062	0					
ANR	3486075	Identifier	e		3486062	1					
ANR	3486076	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	672:2:15004:15047	3486062	2	True				
ANR	3486077	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		3486062	0					
ANR	3486078	IdentifierDeclType	NameTable *		3486062	0					
ANR	3486079	Identifier	t		3486062	1					
ANR	3486080	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		3486062	2		=			
ANR	3486081	Identifier	t		3486062	0					
ANR	3486082	CastExpression	( NameTable * ) reg -> name_table		3486062	1					
ANR	3486083	CastTarget	NameTable *		3486062	0					
ANR	3486084	PtrMemberAccess	reg -> name_table		3486062	1					
ANR	3486085	Identifier	reg		3486062	0					
ANR	3486086	Identifier	name_table		3486062	1					
ANR	3486087	IfStatement	if ( IS_NOT_NULL ( t ) )		3486062	3					
ANR	3486088	Condition	IS_NOT_NULL ( t )	674:6:15056:15069	3486062	0	True				
ANR	3486089	CallExpression	IS_NOT_NULL ( t )		3486062	0					
ANR	3486090	Callee	IS_NOT_NULL		3486062	0					
ANR	3486091	Identifier	IS_NOT_NULL		3486062	0					
ANR	3486092	ArgumentList	t		3486062	1					
ANR	3486093	Argument	t		3486062	0					
ANR	3486094	Identifier	t		3486062	0					
ANR	3486095	CompoundStatement		6:22:101:101	3486062	1					
ANR	3486096	ExpressionStatement	len = name_end - name	675:4:15078:15099	3486062	0	True				
ANR	3486097	AssignmentExpression	len = name_end - name		3486062	0		=			
ANR	3486098	Identifier	len		3486062	0					
ANR	3486099	AdditiveExpression	name_end - name		3486062	1		-			
ANR	3486100	Identifier	name_end		3486062	0					
ANR	3486101	Identifier	name		3486062	1					
ANR	3486102	ForStatement	for ( i = 0 ; i < t -> num ; i ++ )		3486062	1					
ANR	3486103	ForInit	i = 0 ;	676:9:15110:15115	3486062	0	True				
ANR	3486104	AssignmentExpression	i = 0		3486062	0		=			
ANR	3486105	Identifier	i		3486062	0					
ANR	3486106	PrimaryExpression	0		3486062	1					
ANR	3486107	Condition	i < t -> num	676:16:15117:15126	3486062	1	True				
ANR	3486108	RelationalExpression	i < t -> num		3486062	0		<			
ANR	3486109	Identifier	i		3486062	0					
ANR	3486110	PtrMemberAccess	t -> num		3486062	1					
ANR	3486111	Identifier	t		3486062	0					
ANR	3486112	Identifier	num		3486062	1					
ANR	3486113	PostIncDecOperationExpression	i ++	676:28:15129:15131	3486062	2	True				
ANR	3486114	Identifier	i		3486062	0					
ANR	3486115	IncDec	++		3486062	1					
ANR	3486116	CompoundStatement		8:33:163:163	3486062	3					
ANR	3486117	ExpressionStatement	e = & ( t -> e [ i ] )	677:6:15142:15156	3486062	0	True				
ANR	3486118	AssignmentExpression	e = & ( t -> e [ i ] )		3486062	0		=			
ANR	3486119	Identifier	e		3486062	0					
ANR	3486120	UnaryOperationExpression	& ( t -> e [ i ] )		3486062	1					
ANR	3486121	UnaryOperator	&		3486062	0					
ANR	3486122	ArrayIndexing	t -> e [ i ]		3486062	1					
ANR	3486123	PtrMemberAccess	t -> e		3486062	0					
ANR	3486124	Identifier	t		3486062	0					
ANR	3486125	Identifier	e		3486062	1					
ANR	3486126	Identifier	i		3486062	1					
ANR	3486127	IfStatement	"if ( len == e -> name_len && onig_strncmp ( name , e -> name , len ) == 0 )"		3486062	1					
ANR	3486128	Condition	"len == e -> name_len && onig_strncmp ( name , e -> name , len ) == 0"	678:10:15168:15226	3486062	0	True				
ANR	3486129	AndExpression	"len == e -> name_len && onig_strncmp ( name , e -> name , len ) == 0"		3486062	0		&&			
ANR	3486130	EqualityExpression	len == e -> name_len		3486062	0		==			
ANR	3486131	Identifier	len		3486062	0					
ANR	3486132	PtrMemberAccess	e -> name_len		3486062	1					
ANR	3486133	Identifier	e		3486062	0					
ANR	3486134	Identifier	name_len		3486062	1					
ANR	3486135	EqualityExpression	"onig_strncmp ( name , e -> name , len ) == 0"		3486062	1		==			
ANR	3486136	CallExpression	"onig_strncmp ( name , e -> name , len )"		3486062	0					
ANR	3486137	Callee	onig_strncmp		3486062	0					
ANR	3486138	Identifier	onig_strncmp		3486062	0					
ANR	3486139	ArgumentList	name		3486062	1					
ANR	3486140	Argument	name		3486062	0					
ANR	3486141	Identifier	name		3486062	0					
ANR	3486142	Argument	e -> name		3486062	1					
ANR	3486143	PtrMemberAccess	e -> name		3486062	0					
ANR	3486144	Identifier	e		3486062	0					
ANR	3486145	Identifier	name		3486062	1					
ANR	3486146	Argument	len		3486062	2					
ANR	3486147	Identifier	len		3486062	0					
ANR	3486148	PrimaryExpression	0		3486062	1					
ANR	3486149	ReturnStatement	return e ;	679:1:15230:15238	3486062	1	True				
ANR	3486150	Identifier	e		3486062	0					
ANR	3486151	ReturnStatement	return ( NameEntry * ) NULL ;	682:2:15252:15276	3486062	4	True				
ANR	3486152	CastExpression	( NameEntry * ) NULL		3486062	0					
ANR	3486153	CastTarget	NameEntry *		3486062	0					
ANR	3486154	Identifier	NULL		3486062	1					
ANR	3486155	ReturnType	static NameEntry *		3486062	1					
ANR	3486156	Identifier	name_find		3486062	2					
ANR	3486157	ParameterList	"regex_t * reg , UChar * name , UChar * name_end"		3486062	3					
ANR	3486158	Parameter	regex_t * reg	668:10:14926:14937	3486062	0	True				
ANR	3486159	ParameterType	regex_t *		3486062	0					
ANR	3486160	Identifier	reg		3486062	1					
ANR	3486161	Parameter	UChar * name	668:24:14940:14950	3486062	1	True				
ANR	3486162	ParameterType	UChar *		3486062	0					
ANR	3486163	Identifier	name		3486062	1					
ANR	3486164	Parameter	UChar * name_end	668:37:14953:14967	3486062	2	True				
ANR	3486165	ParameterType	UChar *		3486062	0					
ANR	3486166	Identifier	name_end		3486062	1					
ANR	3486167	CFGEntryNode	ENTRY		3486062		True				
ANR	3486168	CFGExitNode	EXIT		3486062		True				
ANR	3486169	Symbol	IS_NOT_NULL		3486062						
ANR	3486170	Symbol	NULL		3486062						
ANR	3486171	Symbol	e		3486062						
ANR	3486172	Symbol	reg -> name_table		3486062						
ANR	3486173	Symbol	t -> e		3486062						
ANR	3486174	Symbol	i		3486062						
ANR	3486175	Symbol	* e		3486062						
ANR	3486176	Symbol	t -> num		3486062						
ANR	3486177	Symbol	len		3486062						
ANR	3486178	Symbol	t		3486062						
ANR	3486179	Symbol	reg		3486062						
ANR	3486180	Symbol	name		3486062						
ANR	3486181	Symbol	onig_strncmp		3486062						
ANR	3486182	Symbol	name_end		3486062						
ANR	3486183	Symbol	* reg		3486062						
ANR	3486184	Symbol	* t		3486062						
ANR	3486185	Symbol	e -> name		3486062						
ANR	3486186	Symbol	e -> name_len		3486062						
ANR	3486187	Function	onig_foreach_name	685:0:15281:15745							
ANR	3486188	FunctionDef	"onig_foreach_name (regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg)"		3486187	0					
ANR	3486189	CompoundStatement		688:0:15402:15745	3486187	0					
ANR	3486190	IdentifierDeclStatement	"int i , r ;"	689:2:15406:15414	3486187	0	True				
ANR	3486191	IdentifierDecl	i		3486187	0					
ANR	3486192	IdentifierDeclType	int		3486187	0					
ANR	3486193	Identifier	i		3486187	1					
ANR	3486194	IdentifierDecl	r		3486187	1					
ANR	3486195	IdentifierDeclType	int		3486187	0					
ANR	3486196	Identifier	r		3486187	1					
ANR	3486197	IdentifierDeclStatement	NameEntry * e ;	690:2:15418:15430	3486187	1	True				
ANR	3486198	IdentifierDecl	* e		3486187	0					
ANR	3486199	IdentifierDeclType	NameEntry *		3486187	0					
ANR	3486200	Identifier	e		3486187	1					
ANR	3486201	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	691:2:15434:15477	3486187	2	True				
ANR	3486202	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		3486187	0					
ANR	3486203	IdentifierDeclType	NameTable *		3486187	0					
ANR	3486204	Identifier	t		3486187	1					
ANR	3486205	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		3486187	2		=			
ANR	3486206	Identifier	t		3486187	0					
ANR	3486207	CastExpression	( NameTable * ) reg -> name_table		3486187	1					
ANR	3486208	CastTarget	NameTable *		3486187	0					
ANR	3486209	PtrMemberAccess	reg -> name_table		3486187	1					
ANR	3486210	Identifier	reg		3486187	0					
ANR	3486211	Identifier	name_table		3486187	1					
ANR	3486212	IfStatement	if ( IS_NOT_NULL ( t ) )		3486187	3					
ANR	3486213	Condition	IS_NOT_NULL ( t )	693:6:15486:15499	3486187	0	True				
ANR	3486214	CallExpression	IS_NOT_NULL ( t )		3486187	0					
ANR	3486215	Callee	IS_NOT_NULL		3486187	0					
ANR	3486216	Identifier	IS_NOT_NULL		3486187	0					
ANR	3486217	ArgumentList	t		3486187	1					
ANR	3486218	Argument	t		3486187	0					
ANR	3486219	Identifier	t		3486187	0					
ANR	3486220	CompoundStatement		6:22:99:99	3486187	1					
ANR	3486221	ForStatement	for ( i = 0 ; i < t -> num ; i ++ )		3486187	0					
ANR	3486222	ForInit	i = 0 ;	694:9:15513:15518	3486187	0	True				
ANR	3486223	AssignmentExpression	i = 0		3486187	0		=			
ANR	3486224	Identifier	i		3486187	0					
ANR	3486225	PrimaryExpression	0		3486187	1					
ANR	3486226	Condition	i < t -> num	694:16:15520:15529	3486187	1	True				
ANR	3486227	RelationalExpression	i < t -> num		3486187	0		<			
ANR	3486228	Identifier	i		3486187	0					
ANR	3486229	PtrMemberAccess	t -> num		3486187	1					
ANR	3486230	Identifier	t		3486187	0					
ANR	3486231	Identifier	num		3486187	1					
ANR	3486232	PostIncDecOperationExpression	i ++	694:28:15532:15534	3486187	2	True				
ANR	3486233	Identifier	i		3486187	0					
ANR	3486234	IncDec	++		3486187	1					
ANR	3486235	CompoundStatement		7:33:134:134	3486187	3					
ANR	3486236	ExpressionStatement	e = & ( t -> e [ i ] )	695:6:15545:15559	3486187	0	True				
ANR	3486237	AssignmentExpression	e = & ( t -> e [ i ] )		3486187	0		=			
ANR	3486238	Identifier	e		3486187	0					
ANR	3486239	UnaryOperationExpression	& ( t -> e [ i ] )		3486187	1					
ANR	3486240	UnaryOperator	&		3486187	0					
ANR	3486241	ArrayIndexing	t -> e [ i ]		3486187	1					
ANR	3486242	PtrMemberAccess	t -> e		3486187	0					
ANR	3486243	Identifier	t		3486187	0					
ANR	3486244	Identifier	e		3486187	1					
ANR	3486245	Identifier	i		3486187	1					
ANR	3486246	ExpressionStatement	"r = ( * func ) ( e -> name , e -> name + e -> name_len , e -> back_num , ( e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 ) ) , reg , arg )"	696:6:15567:15693	3486187	1	True				
ANR	3486247	AssignmentExpression	"r = ( * func ) ( e -> name , e -> name + e -> name_len , e -> back_num , ( e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 ) ) , reg , arg )"		3486187	0		=			
ANR	3486248	Identifier	r		3486187	0					
ANR	3486249	CallExpression	"( * func ) ( e -> name , e -> name + e -> name_len , e -> back_num , ( e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 ) ) , reg , arg )"		3486187	1					
ANR	3486250	Callee	* func		3486187	0					
ANR	3486251	UnaryOperationExpression	* func		3486187	0					
ANR	3486252	UnaryOperator	*		3486187	0					
ANR	3486253	Identifier	func		3486187	1					
ANR	3486254	ArgumentList	e -> name		3486187	1					
ANR	3486255	Argument	e -> name		3486187	0					
ANR	3486256	PtrMemberAccess	e -> name		3486187	0					
ANR	3486257	Identifier	e		3486187	0					
ANR	3486258	Identifier	name		3486187	1					
ANR	3486259	Argument	e -> name + e -> name_len		3486187	1					
ANR	3486260	AdditiveExpression	e -> name + e -> name_len		3486187	0		+			
ANR	3486261	PtrMemberAccess	e -> name		3486187	0					
ANR	3486262	Identifier	e		3486187	0					
ANR	3486263	Identifier	name		3486187	1					
ANR	3486264	PtrMemberAccess	e -> name_len		3486187	1					
ANR	3486265	Identifier	e		3486187	0					
ANR	3486266	Identifier	name_len		3486187	1					
ANR	3486267	Argument	e -> back_num		3486187	2					
ANR	3486268	PtrMemberAccess	e -> back_num		3486187	0					
ANR	3486269	Identifier	e		3486187	0					
ANR	3486270	Identifier	back_num		3486187	1					
ANR	3486271	Argument	e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 )		3486187	3					
ANR	3486272	ConditionalExpression	e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 )		3486187	0					
ANR	3486273	Condition	e -> back_num > 1		3486187	0					
ANR	3486274	RelationalExpression	e -> back_num > 1		3486187	0		>			
ANR	3486275	PtrMemberAccess	e -> back_num		3486187	0					
ANR	3486276	Identifier	e		3486187	0					
ANR	3486277	Identifier	back_num		3486187	1					
ANR	3486278	PrimaryExpression	1		3486187	1					
ANR	3486279	PtrMemberAccess	e -> back_refs		3486187	1					
ANR	3486280	Identifier	e		3486187	0					
ANR	3486281	Identifier	back_refs		3486187	1					
ANR	3486282	UnaryOperationExpression	& ( e -> back_ref1 )		3486187	2					
ANR	3486283	UnaryOperator	&		3486187	0					
ANR	3486284	PtrMemberAccess	e -> back_ref1		3486187	1					
ANR	3486285	Identifier	e		3486187	0					
ANR	3486286	Identifier	back_ref1		3486187	1					
ANR	3486287	Argument	reg		3486187	4					
ANR	3486288	Identifier	reg		3486187	0					
ANR	3486289	Argument	arg		3486187	5					
ANR	3486290	Identifier	arg		3486187	0					
ANR	3486291	IfStatement	if ( r != 0 )		3486187	2					
ANR	3486292	Condition	r != 0	699:10:15705:15710	3486187	0	True				
ANR	3486293	EqualityExpression	r != 0		3486187	0		!=			
ANR	3486294	Identifier	r		3486187	0					
ANR	3486295	PrimaryExpression	0		3486187	1					
ANR	3486296	ReturnStatement	return r ;	699:18:15713:15721	3486187	1	True				
ANR	3486297	Identifier	r		3486187	0					
ANR	3486298	ReturnStatement	return 0 ;	702:2:15735:15743	3486187	4	True				
ANR	3486299	PrimaryExpression	0		3486187	0					
ANR	3486300	ReturnType	extern int		3486187	1					
ANR	3486301	Identifier	onig_foreach_name		3486187	2					
ANR	3486302	ParameterList	"regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg"		3486187	3					
ANR	3486303	Parameter	regex_t * reg	686:18:15310:15321	3486187	0	True				
ANR	3486304	ParameterType	regex_t *		3486187	0					
ANR	3486305	Identifier	reg		3486187	1					
ANR	3486306	Parameter	"int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	687:2:15326:15388	3486187	1	True				
ANR	3486307	ParameterType	"(( const UChar * , const UChar * , int , int * , regex_t * , void * ) int) *"		3486187	0					
ANR	3486308	Identifier	func		3486187	1					
ANR	3486309	Parameter	void * arg	687:67:15391:15399	3486187	2	True				
ANR	3486310	ParameterType	void *		3486187	0					
ANR	3486311	Identifier	arg		3486187	1					
ANR	3486312	CFGEntryNode	ENTRY		3486187		True				
ANR	3486313	CFGExitNode	EXIT		3486187		True				
ANR	3486314	Symbol	IS_NOT_NULL		3486187						
ANR	3486315	Symbol	e -> back_num		3486187						
ANR	3486316	Symbol	e -> back_refs		3486187						
ANR	3486317	Symbol	* func		3486187						
ANR	3486318	Symbol	e		3486187						
ANR	3486319	Symbol	reg -> name_table		3486187						
ANR	3486320	Symbol	t -> e		3486187						
ANR	3486321	Symbol	i		3486187						
ANR	3486322	Symbol	& e -> back_ref1		3486187						
ANR	3486323	Symbol	* e		3486187						
ANR	3486324	Symbol	t -> num		3486187						
ANR	3486325	Symbol	r		3486187						
ANR	3486326	Symbol	func		3486187						
ANR	3486327	Symbol	t		3486187						
ANR	3486328	Symbol	reg		3486187						
ANR	3486329	Symbol	arg		3486187						
ANR	3486330	Symbol	* reg		3486187						
ANR	3486331	Symbol	* t		3486187						
ANR	3486332	Symbol	e -> name		3486187						
ANR	3486333	Symbol	e -> name_len		3486187						
ANR	3486334	Function	onig_number_of_names	705:0:15748:15906							
ANR	3486335	FunctionDef	onig_number_of_names (regex_t * reg)		3486334	0					
ANR	3486336	CompoundStatement		707:0:15794:15906	3486334	0					
ANR	3486337	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	708:2:15798:15841	3486334	0	True				
ANR	3486338	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		3486334	0					
ANR	3486339	IdentifierDeclType	NameTable *		3486334	0					
ANR	3486340	Identifier	t		3486334	1					
ANR	3486341	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		3486334	2		=			
ANR	3486342	Identifier	t		3486334	0					
ANR	3486343	CastExpression	( NameTable * ) reg -> name_table		3486334	1					
ANR	3486344	CastTarget	NameTable *		3486334	0					
ANR	3486345	PtrMemberAccess	reg -> name_table		3486334	1					
ANR	3486346	Identifier	reg		3486334	0					
ANR	3486347	Identifier	name_table		3486334	1					
ANR	3486348	IfStatement	if ( IS_NOT_NULL ( t ) )		3486334	1					
ANR	3486349	Condition	IS_NOT_NULL ( t )	710:6:15850:15863	3486334	0	True				
ANR	3486350	CallExpression	IS_NOT_NULL ( t )		3486334	0					
ANR	3486351	Callee	IS_NOT_NULL		3486334	0					
ANR	3486352	Identifier	IS_NOT_NULL		3486334	0					
ANR	3486353	ArgumentList	t		3486334	1					
ANR	3486354	Argument	t		3486334	0					
ANR	3486355	Identifier	t		3486334	0					
ANR	3486356	ReturnStatement	return t -> num ;	711:4:15870:15883	3486334	1	True				
ANR	3486357	PtrMemberAccess	t -> num		3486334	0					
ANR	3486358	Identifier	t		3486334	0					
ANR	3486359	Identifier	num		3486334	1					
ANR	3486360	ElseStatement	else		3486334	0					
ANR	3486361	ReturnStatement	return 0 ;	713:4:15896:15904	3486334	0	True				
ANR	3486362	PrimaryExpression	0		3486334	0					
ANR	3486363	ReturnType	extern int		3486334	1					
ANR	3486364	Identifier	onig_number_of_names		3486334	2					
ANR	3486365	ParameterList	regex_t * reg		3486334	3					
ANR	3486366	Parameter	regex_t * reg	706:21:15780:15791	3486334	0	True				
ANR	3486367	ParameterType	regex_t *		3486334	0					
ANR	3486368	Identifier	reg		3486334	1					
ANR	3486369	CFGEntryNode	ENTRY		3486334		True				
ANR	3486370	CFGExitNode	EXIT		3486334		True				
ANR	3486371	Symbol	t -> num		3486334						
ANR	3486372	Symbol	IS_NOT_NULL		3486334						
ANR	3486373	Symbol	t		3486334						
ANR	3486374	Symbol	reg		3486334						
ANR	3486375	Symbol	reg -> name_table		3486334						
ANR	3486376	Symbol	* reg		3486334						
ANR	3486377	Symbol	* t		3486334						
ANR	3486378	Function	name_add	718:0:15943:18757							
ANR	3486379	FunctionDef	"name_add (regex_t * reg , UChar * name , UChar * name_end , int backref , ScanEnv * env)"		3486378	0					
ANR	3486380	CompoundStatement		720:0:16034:18757	3486378	0					
ANR	3486381	IdentifierDeclStatement	int alloc ;	721:2:16038:16047	3486378	0	True				
ANR	3486382	IdentifierDecl	alloc		3486378	0					
ANR	3486383	IdentifierDeclType	int		3486378	0					
ANR	3486384	Identifier	alloc		3486378	1					
ANR	3486385	IdentifierDeclStatement	NameEntry * e ;	722:2:16051:16063	3486378	1	True				
ANR	3486386	IdentifierDecl	* e		3486378	0					
ANR	3486387	IdentifierDeclType	NameEntry *		3486378	0					
ANR	3486388	Identifier	e		3486378	1					
ANR	3486389	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	723:2:16067:16110	3486378	2	True				
ANR	3486390	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		3486378	0					
ANR	3486391	IdentifierDeclType	NameTable *		3486378	0					
ANR	3486392	Identifier	t		3486378	1					
ANR	3486393	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		3486378	2		=			
ANR	3486394	Identifier	t		3486378	0					
ANR	3486395	CastExpression	( NameTable * ) reg -> name_table		3486378	1					
ANR	3486396	CastTarget	NameTable *		3486378	0					
ANR	3486397	PtrMemberAccess	reg -> name_table		3486378	1					
ANR	3486398	Identifier	reg		3486378	0					
ANR	3486399	Identifier	name_table		3486378	1					
ANR	3486400	IfStatement	if ( name_end - name <= 0 )		3486378	3					
ANR	3486401	Condition	name_end - name <= 0	725:6:16119:16138	3486378	0	True				
ANR	3486402	RelationalExpression	name_end - name <= 0		3486378	0		<=			
ANR	3486403	AdditiveExpression	name_end - name		3486378	0		-			
ANR	3486404	Identifier	name_end		3486378	0					
ANR	3486405	Identifier	name		3486378	1					
ANR	3486406	PrimaryExpression	0		3486378	1					
ANR	3486407	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	726:4:16145:16176	3486378	1	True				
ANR	3486408	Identifier	ONIGERR_EMPTY_GROUP_NAME		3486378	0					
ANR	3486409	ExpressionStatement	"e = name_find ( reg , name , name_end )"	728:2:16181:16215	3486378	4	True				
ANR	3486410	AssignmentExpression	"e = name_find ( reg , name , name_end )"		3486378	0		=			
ANR	3486411	Identifier	e		3486378	0					
ANR	3486412	CallExpression	"name_find ( reg , name , name_end )"		3486378	1					
ANR	3486413	Callee	name_find		3486378	0					
ANR	3486414	Identifier	name_find		3486378	0					
ANR	3486415	ArgumentList	reg		3486378	1					
ANR	3486416	Argument	reg		3486378	0					
ANR	3486417	Identifier	reg		3486378	0					
ANR	3486418	Argument	name		3486378	1					
ANR	3486419	Identifier	name		3486378	0					
ANR	3486420	Argument	name_end		3486378	2					
ANR	3486421	Identifier	name_end		3486378	0					
ANR	3486422	IfStatement	if ( IS_NULL ( e ) )		3486378	5					
ANR	3486423	Condition	IS_NULL ( e )	729:6:16223:16232	3486378	0	True				
ANR	3486424	CallExpression	IS_NULL ( e )		3486378	0					
ANR	3486425	Callee	IS_NULL		3486378	0					
ANR	3486426	Identifier	IS_NULL		3486378	0					
ANR	3486427	ArgumentList	e		3486378	1					
ANR	3486428	Argument	e		3486378	0					
ANR	3486429	Identifier	e		3486378	0					
ANR	3486430	CompoundStatement		10:18:200:200	3486378	1					
ANR	3486431	IfStatement	if ( IS_NULL ( t ) )		3486378	0					
ANR	3486432	Condition	IS_NULL ( t )	731:8:16267:16276	3486378	0	True				
ANR	3486433	CallExpression	IS_NULL ( t )		3486378	0					
ANR	3486434	Callee	IS_NULL		3486378	0					
ANR	3486435	Identifier	IS_NULL		3486378	0					
ANR	3486436	ArgumentList	t		3486378	1					
ANR	3486437	Argument	t		3486378	0					
ANR	3486438	Identifier	t		3486378	0					
ANR	3486439	CompoundStatement		12:20:244:244	3486378	1					
ANR	3486440	ExpressionStatement	t = onig_st_init_strend_table_with_size ( 5 )	732:6:16287:16329	3486378	0	True				
ANR	3486441	AssignmentExpression	t = onig_st_init_strend_table_with_size ( 5 )		3486378	0		=			
ANR	3486442	Identifier	t		3486378	0					
ANR	3486443	CallExpression	onig_st_init_strend_table_with_size ( 5 )		3486378	1					
ANR	3486444	Callee	onig_st_init_strend_table_with_size		3486378	0					
ANR	3486445	Identifier	onig_st_init_strend_table_with_size		3486378	0					
ANR	3486446	ArgumentList	5		3486378	1					
ANR	3486447	Argument	5		3486378	0					
ANR	3486448	PrimaryExpression	5		3486378	0					
ANR	3486449	ExpressionStatement	reg -> name_table = ( void * ) t	733:6:16337:16364	3486378	1	True				
ANR	3486450	AssignmentExpression	reg -> name_table = ( void * ) t		3486378	0		=			
ANR	3486451	PtrMemberAccess	reg -> name_table		3486378	0					
ANR	3486452	Identifier	reg		3486378	0					
ANR	3486453	Identifier	name_table		3486378	1					
ANR	3486454	CastExpression	( void * ) t		3486378	1					
ANR	3486455	CastTarget	void *		3486378	0					
ANR	3486456	Identifier	t		3486378	1					
ANR	3486457	ExpressionStatement	e = ( NameEntry * ) xmalloc ( sizeof ( NameEntry ) )	735:4:16376:16419	3486378	1	True				
ANR	3486458	AssignmentExpression	e = ( NameEntry * ) xmalloc ( sizeof ( NameEntry ) )		3486378	0		=			
ANR	3486459	Identifier	e		3486378	0					
ANR	3486460	CastExpression	( NameEntry * ) xmalloc ( sizeof ( NameEntry ) )		3486378	1					
ANR	3486461	CastTarget	NameEntry *		3486378	0					
ANR	3486462	CallExpression	xmalloc ( sizeof ( NameEntry ) )		3486378	1					
ANR	3486463	Callee	xmalloc		3486378	0					
ANR	3486464	Identifier	xmalloc		3486378	0					
ANR	3486465	ArgumentList	sizeof ( NameEntry )		3486378	1					
ANR	3486466	Argument	sizeof ( NameEntry )		3486378	0					
ANR	3486467	SizeofExpression	sizeof ( NameEntry )		3486378	0					
ANR	3486468	Sizeof	sizeof		3486378	0					
ANR	3486469	SizeofOperand	NameEntry		3486378	1					
ANR	3486470	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( e )	736:4:16425:16452	3486378	2	True				
ANR	3486471	CallExpression	CHECK_NULL_RETURN_MEMERR ( e )		3486378	0					
ANR	3486472	Callee	CHECK_NULL_RETURN_MEMERR		3486378	0					
ANR	3486473	Identifier	CHECK_NULL_RETURN_MEMERR		3486378	0					
ANR	3486474	ArgumentList	e		3486378	1					
ANR	3486475	Argument	e		3486378	0					
ANR	3486476	Identifier	e		3486378	0					
ANR	3486477	ExpressionStatement	"e -> name = strdup_with_null ( reg -> enc , name , name_end )"	738:4:16459:16511	3486378	3	True				
ANR	3486478	AssignmentExpression	"e -> name = strdup_with_null ( reg -> enc , name , name_end )"		3486378	0		=			
ANR	3486479	PtrMemberAccess	e -> name		3486378	0					
ANR	3486480	Identifier	e		3486378	0					
ANR	3486481	Identifier	name		3486378	1					
ANR	3486482	CallExpression	"strdup_with_null ( reg -> enc , name , name_end )"		3486378	1					
ANR	3486483	Callee	strdup_with_null		3486378	0					
ANR	3486484	Identifier	strdup_with_null		3486378	0					
ANR	3486485	ArgumentList	reg -> enc		3486378	1					
ANR	3486486	Argument	reg -> enc		3486378	0					
ANR	3486487	PtrMemberAccess	reg -> enc		3486378	0					
ANR	3486488	Identifier	reg		3486378	0					
ANR	3486489	Identifier	enc		3486378	1					
ANR	3486490	Argument	name		3486378	1					
ANR	3486491	Identifier	name		3486378	0					
ANR	3486492	Argument	name_end		3486378	2					
ANR	3486493	Identifier	name_end		3486378	0					
ANR	3486494	IfStatement	if ( IS_NULL ( e -> name ) )		3486378	4					
ANR	3486495	Condition	IS_NULL ( e -> name )	739:8:16521:16536	3486378	0	True				
ANR	3486496	CallExpression	IS_NULL ( e -> name )		3486378	0					
ANR	3486497	Callee	IS_NULL		3486378	0					
ANR	3486498	Identifier	IS_NULL		3486378	0					
ANR	3486499	ArgumentList	e -> name		3486378	1					
ANR	3486500	Argument	e -> name		3486378	0					
ANR	3486501	PtrMemberAccess	e -> name		3486378	0					
ANR	3486502	Identifier	e		3486378	0					
ANR	3486503	Identifier	name		3486378	1					
ANR	3486504	CompoundStatement		20:26:504:504	3486378	1					
ANR	3486505	ExpressionStatement	xfree ( e )	740:6:16547:16555	3486378	0	True				
ANR	3486506	CallExpression	xfree ( e )		3486378	0					
ANR	3486507	Callee	xfree		3486378	0					
ANR	3486508	Identifier	xfree		3486378	0					
ANR	3486509	ArgumentList	e		3486378	1					
ANR	3486510	Argument	e		3486378	0					
ANR	3486511	Identifier	e		3486378	0					
ANR	3486512	ReturnStatement	return ONIGERR_MEMORY ;	740:17:16558:16579	3486378	1	True				
ANR	3486513	Identifier	ONIGERR_MEMORY		3486378	0					
ANR	3486514	ExpressionStatement	"onig_st_insert_strend ( t , e -> name , ( e -> name + ( name_end - name ) ) , ( HashDataType ) e )"	742:4:16591:16699	3486378	5	True				
ANR	3486515	CallExpression	"onig_st_insert_strend ( t , e -> name , ( e -> name + ( name_end - name ) ) , ( HashDataType ) e )"		3486378	0					
ANR	3486516	Callee	onig_st_insert_strend		3486378	0					
ANR	3486517	Identifier	onig_st_insert_strend		3486378	0					
ANR	3486518	ArgumentList	t		3486378	1					
ANR	3486519	Argument	t		3486378	0					
ANR	3486520	Identifier	t		3486378	0					
ANR	3486521	Argument	e -> name		3486378	1					
ANR	3486522	PtrMemberAccess	e -> name		3486378	0					
ANR	3486523	Identifier	e		3486378	0					
ANR	3486524	Identifier	name		3486378	1					
ANR	3486525	Argument	e -> name + ( name_end - name )		3486378	2					
ANR	3486526	AdditiveExpression	e -> name + ( name_end - name )		3486378	0		+			
ANR	3486527	PtrMemberAccess	e -> name		3486378	0					
ANR	3486528	Identifier	e		3486378	0					
ANR	3486529	Identifier	name		3486378	1					
ANR	3486530	AdditiveExpression	name_end - name		3486378	1		-			
ANR	3486531	Identifier	name_end		3486378	0					
ANR	3486532	Identifier	name		3486378	1					
ANR	3486533	Argument	( HashDataType ) e		3486378	3					
ANR	3486534	CastExpression	( HashDataType ) e		3486378	0					
ANR	3486535	CastTarget	HashDataType		3486378	0					
ANR	3486536	Identifier	e		3486378	1					
ANR	3486537	ExpressionStatement	e -> name_len = name_end - name	745:4:16706:16737	3486378	6	True				
ANR	3486538	AssignmentExpression	e -> name_len = name_end - name		3486378	0		=			
ANR	3486539	PtrMemberAccess	e -> name_len		3486378	0					
ANR	3486540	Identifier	e		3486378	0					
ANR	3486541	Identifier	name_len		3486378	1					
ANR	3486542	AdditiveExpression	name_end - name		3486378	1		-			
ANR	3486543	Identifier	name_end		3486378	0					
ANR	3486544	Identifier	name		3486378	1					
ANR	3486545	ExpressionStatement	e -> back_num = 0	746:4:16743:16760	3486378	7	True				
ANR	3486546	AssignmentExpression	e -> back_num = 0		3486378	0		=			
ANR	3486547	PtrMemberAccess	e -> back_num		3486378	0					
ANR	3486548	Identifier	e		3486378	0					
ANR	3486549	Identifier	back_num		3486378	1					
ANR	3486550	PrimaryExpression	0		3486378	1					
ANR	3486551	ExpressionStatement	e -> back_alloc = 0	747:4:16766:16783	3486378	8	True				
ANR	3486552	AssignmentExpression	e -> back_alloc = 0		3486378	0		=			
ANR	3486553	PtrMemberAccess	e -> back_alloc		3486378	0					
ANR	3486554	Identifier	e		3486378	0					
ANR	3486555	Identifier	back_alloc		3486378	1					
ANR	3486556	PrimaryExpression	0		3486378	1					
ANR	3486557	ExpressionStatement	e -> back_refs = ( int * ) NULL	748:4:16789:16816	3486378	9	True				
ANR	3486558	AssignmentExpression	e -> back_refs = ( int * ) NULL		3486378	0		=			
ANR	3486559	PtrMemberAccess	e -> back_refs		3486378	0					
ANR	3486560	Identifier	e		3486378	0					
ANR	3486561	Identifier	back_refs		3486378	1					
ANR	3486562	CastExpression	( int * ) NULL		3486378	1					
ANR	3486563	CastTarget	int *		3486378	0					
ANR	3486564	Identifier	NULL		3486378	1					
ANR	3486565	IfStatement	"if ( e -> back_num >= 1 && ! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME ) )"		3486378	6					
ANR	3486566	Condition	"e -> back_num >= 1 && ! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME )"	794:6:17856:17950	3486378	0	True				
ANR	3486567	AndExpression	"e -> back_num >= 1 && ! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME )"		3486378	0		&&			
ANR	3486568	RelationalExpression	e -> back_num >= 1		3486378	0		>=			
ANR	3486569	PtrMemberAccess	e -> back_num		3486378	0					
ANR	3486570	Identifier	e		3486378	0					
ANR	3486571	Identifier	back_num		3486378	1					
ANR	3486572	PrimaryExpression	1		3486378	1					
ANR	3486573	UnaryOperationExpression	"! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME )"		3486378	1					
ANR	3486574	UnaryOperator	!		3486378	0					
ANR	3486575	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME )"		3486378	1					
ANR	3486576	Callee	IS_SYNTAX_BV		3486378	0					
ANR	3486577	Identifier	IS_SYNTAX_BV		3486378	0					
ANR	3486578	ArgumentList	env -> syntax		3486378	1					
ANR	3486579	Argument	env -> syntax		3486378	0					
ANR	3486580	PtrMemberAccess	env -> syntax		3486378	0					
ANR	3486581	Identifier	env		3486378	0					
ANR	3486582	Identifier	syntax		3486378	1					
ANR	3486583	Argument	ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME		3486378	1					
ANR	3486584	Identifier	ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME		3486378	0					
ANR	3486585	CompoundStatement		76:77:1918:1918	3486378	1					
ANR	3486586	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_MULTIPLEX_DEFINED_NAME , name , name_end )"	796:4:17959:18050	3486378	0	True				
ANR	3486587	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_MULTIPLEX_DEFINED_NAME , name , name_end )"		3486378	0					
ANR	3486588	Callee	onig_scan_env_set_error_string		3486378	0					
ANR	3486589	Identifier	onig_scan_env_set_error_string		3486378	0					
ANR	3486590	ArgumentList	env		3486378	1					
ANR	3486591	Argument	env		3486378	0					
ANR	3486592	Identifier	env		3486378	0					
ANR	3486593	Argument	ONIGERR_MULTIPLEX_DEFINED_NAME		3486378	1					
ANR	3486594	Identifier	ONIGERR_MULTIPLEX_DEFINED_NAME		3486378	0					
ANR	3486595	Argument	name		3486378	2					
ANR	3486596	Identifier	name		3486378	0					
ANR	3486597	Argument	name_end		3486378	3					
ANR	3486598	Identifier	name_end		3486378	0					
ANR	3486599	ReturnStatement	return ONIGERR_MULTIPLEX_DEFINED_NAME ;	798:4:18056:18093	3486378	1	True				
ANR	3486600	Identifier	ONIGERR_MULTIPLEX_DEFINED_NAME		3486378	0					
ANR	3486601	ExpressionStatement	e -> back_num ++	801:2:18102:18115	3486378	7	True				
ANR	3486602	PostIncDecOperationExpression	e -> back_num ++		3486378	0					
ANR	3486603	PtrMemberAccess	e -> back_num		3486378	0					
ANR	3486604	Identifier	e		3486378	0					
ANR	3486605	Identifier	back_num		3486378	1					
ANR	3486606	IncDec	++		3486378	1					
ANR	3486607	IfStatement	if ( e -> back_num == 1 )		3486378	8					
ANR	3486608	Condition	e -> back_num == 1	802:6:18123:18138	3486378	0	True				
ANR	3486609	EqualityExpression	e -> back_num == 1		3486378	0		==			
ANR	3486610	PtrMemberAccess	e -> back_num		3486378	0					
ANR	3486611	Identifier	e		3486378	0					
ANR	3486612	Identifier	back_num		3486378	1					
ANR	3486613	PrimaryExpression	1		3486378	1					
ANR	3486614	CompoundStatement		83:24:2106:2106	3486378	1					
ANR	3486615	ExpressionStatement	e -> back_ref1 = backref	803:4:18147:18169	3486378	0	True				
ANR	3486616	AssignmentExpression	e -> back_ref1 = backref		3486378	0		=			
ANR	3486617	PtrMemberAccess	e -> back_ref1		3486378	0					
ANR	3486618	Identifier	e		3486378	0					
ANR	3486619	Identifier	back_ref1		3486378	1					
ANR	3486620	Identifier	backref		3486378	1					
ANR	3486621	ElseStatement	else		3486378	0					
ANR	3486622	CompoundStatement		86:7:2147:2147	3486378	0					
ANR	3486623	IfStatement	if ( e -> back_num == 2 )		3486378	0					
ANR	3486624	Condition	e -> back_num == 2	806:8:18192:18207	3486378	0	True				
ANR	3486625	EqualityExpression	e -> back_num == 2		3486378	0		==			
ANR	3486626	PtrMemberAccess	e -> back_num		3486378	0					
ANR	3486627	Identifier	e		3486378	0					
ANR	3486628	Identifier	back_num		3486378	1					
ANR	3486629	PrimaryExpression	2		3486378	1					
ANR	3486630	CompoundStatement		87:26:2175:2175	3486378	1					
ANR	3486631	ExpressionStatement	alloc = INIT_NAME_BACKREFS_ALLOC_NUM	807:6:18218:18254	3486378	0	True				
ANR	3486632	AssignmentExpression	alloc = INIT_NAME_BACKREFS_ALLOC_NUM		3486378	0		=			
ANR	3486633	Identifier	alloc		3486378	0					
ANR	3486634	Identifier	INIT_NAME_BACKREFS_ALLOC_NUM		3486378	1					
ANR	3486635	ExpressionStatement	e -> back_refs = ( int * ) xmalloc ( sizeof ( int ) * alloc )	808:6:18262:18312	3486378	1	True				
ANR	3486636	AssignmentExpression	e -> back_refs = ( int * ) xmalloc ( sizeof ( int ) * alloc )		3486378	0		=			
ANR	3486637	PtrMemberAccess	e -> back_refs		3486378	0					
ANR	3486638	Identifier	e		3486378	0					
ANR	3486639	Identifier	back_refs		3486378	1					
ANR	3486640	CastExpression	( int * ) xmalloc ( sizeof ( int ) * alloc )		3486378	1					
ANR	3486641	CastTarget	int *		3486378	0					
ANR	3486642	CallExpression	xmalloc ( sizeof ( int ) * alloc )		3486378	1					
ANR	3486643	Callee	xmalloc		3486378	0					
ANR	3486644	Identifier	xmalloc		3486378	0					
ANR	3486645	ArgumentList	sizeof ( int ) * alloc		3486378	1					
ANR	3486646	Argument	sizeof ( int ) * alloc		3486378	0					
ANR	3486647	MultiplicativeExpression	sizeof ( int ) * alloc		3486378	0		*			
ANR	3486648	SizeofExpression	sizeof ( int )		3486378	0					
ANR	3486649	Sizeof	sizeof		3486378	0					
ANR	3486650	SizeofOperand	int		3486378	1					
ANR	3486651	Identifier	alloc		3486378	1					
ANR	3486652	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( e -> back_refs )	809:6:18320:18358	3486378	2	True				
ANR	3486653	CallExpression	CHECK_NULL_RETURN_MEMERR ( e -> back_refs )		3486378	0					
ANR	3486654	Callee	CHECK_NULL_RETURN_MEMERR		3486378	0					
ANR	3486655	Identifier	CHECK_NULL_RETURN_MEMERR		3486378	0					
ANR	3486656	ArgumentList	e -> back_refs		3486378	1					
ANR	3486657	Argument	e -> back_refs		3486378	0					
ANR	3486658	PtrMemberAccess	e -> back_refs		3486378	0					
ANR	3486659	Identifier	e		3486378	0					
ANR	3486660	Identifier	back_refs		3486378	1					
ANR	3486661	ExpressionStatement	e -> back_alloc = alloc	810:6:18366:18387	3486378	3	True				
ANR	3486662	AssignmentExpression	e -> back_alloc = alloc		3486378	0		=			
ANR	3486663	PtrMemberAccess	e -> back_alloc		3486378	0					
ANR	3486664	Identifier	e		3486378	0					
ANR	3486665	Identifier	back_alloc		3486378	1					
ANR	3486666	Identifier	alloc		3486378	1					
ANR	3486667	ExpressionStatement	e -> back_refs [ 0 ] = e -> back_ref1	811:6:18395:18425	3486378	4	True				
ANR	3486668	AssignmentExpression	e -> back_refs [ 0 ] = e -> back_ref1		3486378	0		=			
ANR	3486669	ArrayIndexing	e -> back_refs [ 0 ]		3486378	0					
ANR	3486670	PtrMemberAccess	e -> back_refs		3486378	0					
ANR	3486671	Identifier	e		3486378	0					
ANR	3486672	Identifier	back_refs		3486378	1					
ANR	3486673	PrimaryExpression	0		3486378	1					
ANR	3486674	PtrMemberAccess	e -> back_ref1		3486378	1					
ANR	3486675	Identifier	e		3486378	0					
ANR	3486676	Identifier	back_ref1		3486378	1					
ANR	3486677	ExpressionStatement	e -> back_refs [ 1 ] = backref	812:6:18433:18458	3486378	5	True				
ANR	3486678	AssignmentExpression	e -> back_refs [ 1 ] = backref		3486378	0		=			
ANR	3486679	ArrayIndexing	e -> back_refs [ 1 ]		3486378	0					
ANR	3486680	PtrMemberAccess	e -> back_refs		3486378	0					
ANR	3486681	Identifier	e		3486378	0					
ANR	3486682	Identifier	back_refs		3486378	1					
ANR	3486683	PrimaryExpression	1		3486378	1					
ANR	3486684	Identifier	backref		3486378	1					
ANR	3486685	ElseStatement	else		3486378	0					
ANR	3486686	CompoundStatement		95:9:2440:2440	3486378	0					
ANR	3486687	IfStatement	if ( e -> back_num > e -> back_alloc )		3486378	0					
ANR	3486688	Condition	e -> back_num > e -> back_alloc	815:10:18487:18513	3486378	0	True				
ANR	3486689	RelationalExpression	e -> back_num > e -> back_alloc		3486378	0		>			
ANR	3486690	PtrMemberAccess	e -> back_num		3486378	0					
ANR	3486691	Identifier	e		3486378	0					
ANR	3486692	Identifier	back_num		3486378	1					
ANR	3486693	PtrMemberAccess	e -> back_alloc		3486378	1					
ANR	3486694	Identifier	e		3486378	0					
ANR	3486695	Identifier	back_alloc		3486378	1					
ANR	3486696	CompoundStatement		96:39:2481:2481	3486378	1					
ANR	3486697	ExpressionStatement	alloc = e -> back_alloc * 2	816:1:18519:18544	3486378	0	True				
ANR	3486698	AssignmentExpression	alloc = e -> back_alloc * 2		3486378	0		=			
ANR	3486699	Identifier	alloc		3486378	0					
ANR	3486700	MultiplicativeExpression	e -> back_alloc * 2		3486378	1		*			
ANR	3486701	PtrMemberAccess	e -> back_alloc		3486378	0					
ANR	3486702	Identifier	e		3486378	0					
ANR	3486703	Identifier	back_alloc		3486378	1					
ANR	3486704	PrimaryExpression	2		3486378	1					
ANR	3486705	ExpressionStatement	"e -> back_refs = ( int * ) xrealloc ( e -> back_refs , sizeof ( int ) * alloc )"	817:1:18547:18612	3486378	1	True				
ANR	3486706	AssignmentExpression	"e -> back_refs = ( int * ) xrealloc ( e -> back_refs , sizeof ( int ) * alloc )"		3486378	0		=			
ANR	3486707	PtrMemberAccess	e -> back_refs		3486378	0					
ANR	3486708	Identifier	e		3486378	0					
ANR	3486709	Identifier	back_refs		3486378	1					
ANR	3486710	CastExpression	"( int * ) xrealloc ( e -> back_refs , sizeof ( int ) * alloc )"		3486378	1					
ANR	3486711	CastTarget	int *		3486378	0					
ANR	3486712	CallExpression	"xrealloc ( e -> back_refs , sizeof ( int ) * alloc )"		3486378	1					
ANR	3486713	Callee	xrealloc		3486378	0					
ANR	3486714	Identifier	xrealloc		3486378	0					
ANR	3486715	ArgumentList	e -> back_refs		3486378	1					
ANR	3486716	Argument	e -> back_refs		3486378	0					
ANR	3486717	PtrMemberAccess	e -> back_refs		3486378	0					
ANR	3486718	Identifier	e		3486378	0					
ANR	3486719	Identifier	back_refs		3486378	1					
ANR	3486720	Argument	sizeof ( int ) * alloc		3486378	1					
ANR	3486721	MultiplicativeExpression	sizeof ( int ) * alloc		3486378	0		*			
ANR	3486722	SizeofExpression	sizeof ( int )		3486378	0					
ANR	3486723	Sizeof	sizeof		3486378	0					
ANR	3486724	SizeofOperand	int		3486378	1					
ANR	3486725	Identifier	alloc		3486378	1					
ANR	3486726	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( e -> back_refs )	818:1:18615:18653	3486378	2	True				
ANR	3486727	CallExpression	CHECK_NULL_RETURN_MEMERR ( e -> back_refs )		3486378	0					
ANR	3486728	Callee	CHECK_NULL_RETURN_MEMERR		3486378	0					
ANR	3486729	Identifier	CHECK_NULL_RETURN_MEMERR		3486378	0					
ANR	3486730	ArgumentList	e -> back_refs		3486378	1					
ANR	3486731	Argument	e -> back_refs		3486378	0					
ANR	3486732	PtrMemberAccess	e -> back_refs		3486378	0					
ANR	3486733	Identifier	e		3486378	0					
ANR	3486734	Identifier	back_refs		3486378	1					
ANR	3486735	ExpressionStatement	e -> back_alloc = alloc	819:1:18656:18677	3486378	3	True				
ANR	3486736	AssignmentExpression	e -> back_alloc = alloc		3486378	0		=			
ANR	3486737	PtrMemberAccess	e -> back_alloc		3486378	0					
ANR	3486738	Identifier	e		3486378	0					
ANR	3486739	Identifier	back_alloc		3486378	1					
ANR	3486740	Identifier	alloc		3486378	1					
ANR	3486741	ExpressionStatement	e -> back_refs [ e -> back_num - 1 ] = backref	821:6:18693:18732	3486378	1	True				
ANR	3486742	AssignmentExpression	e -> back_refs [ e -> back_num - 1 ] = backref		3486378	0		=			
ANR	3486743	ArrayIndexing	e -> back_refs [ e -> back_num - 1 ]		3486378	0					
ANR	3486744	PtrMemberAccess	e -> back_refs		3486378	0					
ANR	3486745	Identifier	e		3486378	0					
ANR	3486746	Identifier	back_refs		3486378	1					
ANR	3486747	AdditiveExpression	e -> back_num - 1		3486378	1		-			
ANR	3486748	PtrMemberAccess	e -> back_num		3486378	0					
ANR	3486749	Identifier	e		3486378	0					
ANR	3486750	Identifier	back_num		3486378	1					
ANR	3486751	PrimaryExpression	1		3486378	1					
ANR	3486752	Identifier	backref		3486378	1					
ANR	3486753	ReturnStatement	return 0 ;	825:2:18747:18755	3486378	9	True				
ANR	3486754	PrimaryExpression	0		3486378	0					
ANR	3486755	ReturnType	static int		3486378	1					
ANR	3486756	Identifier	name_add		3486378	2					
ANR	3486757	ParameterList	"regex_t * reg , UChar * name , UChar * name_end , int backref , ScanEnv * env"		3486378	3					
ANR	3486758	Parameter	regex_t * reg	719:9:15963:15974	3486378	0	True				
ANR	3486759	ParameterType	regex_t *		3486378	0					
ANR	3486760	Identifier	reg		3486378	1					
ANR	3486761	Parameter	UChar * name	719:23:15977:15987	3486378	1	True				
ANR	3486762	ParameterType	UChar *		3486378	0					
ANR	3486763	Identifier	name		3486378	1					
ANR	3486764	Parameter	UChar * name_end	719:36:15990:16004	3486378	2	True				
ANR	3486765	ParameterType	UChar *		3486378	0					
ANR	3486766	Identifier	name_end		3486378	1					
ANR	3486767	Parameter	int backref	719:53:16007:16017	3486378	3	True				
ANR	3486768	ParameterType	int		3486378	0					
ANR	3486769	Identifier	backref		3486378	1					
ANR	3486770	Parameter	ScanEnv * env	719:66:16020:16031	3486378	4	True				
ANR	3486771	ParameterType	ScanEnv *		3486378	0					
ANR	3486772	Identifier	env		3486378	1					
ANR	3486773	CFGEntryNode	ENTRY		3486378		True				
ANR	3486774	CFGExitNode	EXIT		3486378		True				
ANR	3486775	Symbol	ONIGERR_EMPTY_GROUP_NAME		3486378						
ANR	3486776	Symbol	backref		3486378						
ANR	3486777	Symbol	e -> back_ref1		3486378						
ANR	3486778	Symbol	e -> back_refs		3486378						
ANR	3486779	Symbol	strdup_with_null		3486378						
ANR	3486780	Symbol	INIT_NAME_BACKREFS_ALLOC_NUM		3486378						
ANR	3486781	Symbol	IS_NULL		3486378						
ANR	3486782	Symbol	reg		3486378						
ANR	3486783	Symbol	xmalloc		3486378						
ANR	3486784	Symbol	* e -> back_num		3486378						
ANR	3486785	Symbol	IS_SYNTAX_BV		3486378						
ANR	3486786	Symbol	xrealloc		3486378						
ANR	3486787	Symbol	name_end		3486378						
ANR	3486788	Symbol	e -> back_alloc		3486378						
ANR	3486789	Symbol	e -> name_len		3486378						
ANR	3486790	Symbol	e -> back_num		3486378						
ANR	3486791	Symbol	NULL		3486378						
ANR	3486792	Symbol	ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME		3486378						
ANR	3486793	Symbol	e		3486378						
ANR	3486794	Symbol	* * e		3486378						
ANR	3486795	Symbol	* e -> back_refs		3486378						
ANR	3486796	Symbol	reg -> name_table		3486378						
ANR	3486797	Symbol	name_find		3486378						
ANR	3486798	Symbol	ONIGERR_MEMORY		3486378						
ANR	3486799	Symbol	* env		3486378						
ANR	3486800	Symbol	env		3486378						
ANR	3486801	Symbol	env -> syntax		3486378						
ANR	3486802	Symbol	* e		3486378						
ANR	3486803	Symbol	reg -> enc		3486378						
ANR	3486804	Symbol	onig_st_init_strend_table_with_size		3486378						
ANR	3486805	Symbol	ONIGERR_MULTIPLEX_DEFINED_NAME		3486378						
ANR	3486806	Symbol	t		3486378						
ANR	3486807	Symbol	name		3486378						
ANR	3486808	Symbol	alloc		3486378						
ANR	3486809	Symbol	* reg		3486378						
ANR	3486810	Symbol	e -> name		3486378						
ANR	3486811	Function	onig_name_to_group_numbers	828:0:18760:19154							
ANR	3486812	FunctionDef	"onig_name_to_group_numbers (regex_t * reg , const UChar * name , const UChar * name_end , int * * nums)"		3486811	0					
ANR	3486813	CompoundStatement		831:0:18872:19154	3486811	0					
ANR	3486814	IdentifierDeclStatement	"NameEntry * e = name_find ( reg , name , name_end ) ;"	832:2:18876:18921	3486811	0	True				
ANR	3486815	IdentifierDecl	"* e = name_find ( reg , name , name_end )"		3486811	0					
ANR	3486816	IdentifierDeclType	NameEntry *		3486811	0					
ANR	3486817	Identifier	e		3486811	1					
ANR	3486818	AssignmentExpression	"* e = name_find ( reg , name , name_end )"		3486811	2		=			
ANR	3486819	Identifier	e		3486811	0					
ANR	3486820	CallExpression	"name_find ( reg , name , name_end )"		3486811	1					
ANR	3486821	Callee	name_find		3486811	0					
ANR	3486822	Identifier	name_find		3486811	0					
ANR	3486823	ArgumentList	reg		3486811	1					
ANR	3486824	Argument	reg		3486811	0					
ANR	3486825	Identifier	reg		3486811	0					
ANR	3486826	Argument	name		3486811	1					
ANR	3486827	Identifier	name		3486811	0					
ANR	3486828	Argument	name_end		3486811	2					
ANR	3486829	Identifier	name_end		3486811	0					
ANR	3486830	IfStatement	if ( IS_NULL ( e ) )		3486811	1					
ANR	3486831	Condition	IS_NULL ( e )	834:6:18930:18939	3486811	0	True				
ANR	3486832	CallExpression	IS_NULL ( e )		3486811	0					
ANR	3486833	Callee	IS_NULL		3486811	0					
ANR	3486834	Identifier	IS_NULL		3486811	0					
ANR	3486835	ArgumentList	e		3486811	1					
ANR	3486836	Argument	e		3486811	0					
ANR	3486837	Identifier	e		3486811	0					
ANR	3486838	ReturnStatement	return ONIGERR_UNDEFINED_NAME_REFERENCE ;	834:18:18942:18981	3486811	1	True				
ANR	3486839	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		3486811	0					
ANR	3486840	SwitchStatement	switch ( e -> back_num )		3486811	2					
ANR	3486841	Condition	e -> back_num	836:10:18994:19004	3486811	0	True				
ANR	3486842	PtrMemberAccess	e -> back_num		3486811	0					
ANR	3486843	Identifier	e		3486811	0					
ANR	3486844	Identifier	back_num		3486811	1					
ANR	3486845	CompoundStatement		6:23:134:134	3486811	1					
ANR	3486846	Label	case 0 :	837:2:19011:19017	3486811	0	True				
ANR	3486847	BreakStatement	break ;	838:4:19023:19028	3486811	1	True				
ANR	3486848	Label	case 1 :	839:2:19032:19038	3486811	2	True				
ANR	3486849	ExpressionStatement	* nums = & ( e -> back_ref1 )	840:4:19044:19067	3486811	3	True				
ANR	3486850	AssignmentExpression	* nums = & ( e -> back_ref1 )		3486811	0		=			
ANR	3486851	UnaryOperationExpression	* nums		3486811	0					
ANR	3486852	UnaryOperator	*		3486811	0					
ANR	3486853	Identifier	nums		3486811	1					
ANR	3486854	UnaryOperationExpression	& ( e -> back_ref1 )		3486811	1					
ANR	3486855	UnaryOperator	&		3486811	0					
ANR	3486856	PtrMemberAccess	e -> back_ref1		3486811	1					
ANR	3486857	Identifier	e		3486811	0					
ANR	3486858	Identifier	back_ref1		3486811	1					
ANR	3486859	BreakStatement	break ;	841:4:19073:19078	3486811	4	True				
ANR	3486860	Label	default :	842:2:19082:19089	3486811	5	True				
ANR	3486861	Identifier	default		3486811	0					
ANR	3486862	ExpressionStatement	* nums = e -> back_refs	843:4:19095:19115	3486811	6	True				
ANR	3486863	AssignmentExpression	* nums = e -> back_refs		3486811	0		=			
ANR	3486864	UnaryOperationExpression	* nums		3486811	0					
ANR	3486865	UnaryOperator	*		3486811	0					
ANR	3486866	Identifier	nums		3486811	1					
ANR	3486867	PtrMemberAccess	e -> back_refs		3486811	1					
ANR	3486868	Identifier	e		3486811	0					
ANR	3486869	Identifier	back_refs		3486811	1					
ANR	3486870	BreakStatement	break ;	844:4:19121:19126	3486811	7	True				
ANR	3486871	ReturnStatement	return e -> back_num ;	846:2:19134:19152	3486811	3	True				
ANR	3486872	PtrMemberAccess	e -> back_num		3486811	0					
ANR	3486873	Identifier	e		3486811	0					
ANR	3486874	Identifier	back_num		3486811	1					
ANR	3486875	ReturnType	extern int		3486811	1					
ANR	3486876	Identifier	onig_name_to_group_numbers		3486811	2					
ANR	3486877	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end , int * * nums"		3486811	3					
ANR	3486878	Parameter	regex_t * reg	829:27:18798:18809	3486811	0	True				
ANR	3486879	ParameterType	regex_t *		3486811	0					
ANR	3486880	Identifier	reg		3486811	1					
ANR	3486881	Parameter	const UChar * name	829:41:18812:18828	3486811	1	True				
ANR	3486882	ParameterType	const UChar *		3486811	0					
ANR	3486883	Identifier	name		3486811	1					
ANR	3486884	Parameter	const UChar * name_end	830:6:18837:18857	3486811	2	True				
ANR	3486885	ParameterType	const UChar *		3486811	0					
ANR	3486886	Identifier	name_end		3486811	1					
ANR	3486887	Parameter	int * * nums	830:29:18860:18869	3486811	3	True				
ANR	3486888	ParameterType	int * *		3486811	0					
ANR	3486889	Identifier	nums		3486811	1					
ANR	3486890	CFGEntryNode	ENTRY		3486811		True				
ANR	3486891	CFGExitNode	EXIT		3486811		True				
ANR	3486892	Symbol	* nums		3486811						
ANR	3486893	Symbol	e -> back_num		3486811						
ANR	3486894	Symbol	e -> back_refs		3486811						
ANR	3486895	Symbol	e		3486811						
ANR	3486896	Symbol	name_find		3486811						
ANR	3486897	Symbol	& e -> back_ref1		3486811						
ANR	3486898	Symbol	* e		3486811						
ANR	3486899	Symbol	IS_NULL		3486811						
ANR	3486900	Symbol	reg		3486811						
ANR	3486901	Symbol	ONIGERR_UNDEFINED_NAME_REFERENCE		3486811						
ANR	3486902	Symbol	name		3486811						
ANR	3486903	Symbol	name_end		3486811						
ANR	3486904	Symbol	nums		3486811						
ANR	3486905	Function	onig_name_to_backref_number	849:0:19157:19666							
ANR	3486906	FunctionDef	"onig_name_to_backref_number (regex_t * reg , const UChar * name , const UChar * name_end , OnigRegion * region)"		3486905	0					
ANR	3486907	CompoundStatement		852:0:19279:19666	3486905	0					
ANR	3486908	IdentifierDeclStatement	"int i , n , * nums ;"	853:2:19283:19298	3486905	0	True				
ANR	3486909	IdentifierDecl	i		3486905	0					
ANR	3486910	IdentifierDeclType	int		3486905	0					
ANR	3486911	Identifier	i		3486905	1					
ANR	3486912	IdentifierDecl	n		3486905	1					
ANR	3486913	IdentifierDeclType	int		3486905	0					
ANR	3486914	Identifier	n		3486905	1					
ANR	3486915	IdentifierDecl	* nums		3486905	2					
ANR	3486916	IdentifierDeclType	int *		3486905	0					
ANR	3486917	Identifier	nums		3486905	1					
ANR	3486918	ExpressionStatement	"n = onig_name_to_group_numbers ( reg , name , name_end , & nums )"	855:2:19303:19361	3486905	1	True				
ANR	3486919	AssignmentExpression	"n = onig_name_to_group_numbers ( reg , name , name_end , & nums )"		3486905	0		=			
ANR	3486920	Identifier	n		3486905	0					
ANR	3486921	CallExpression	"onig_name_to_group_numbers ( reg , name , name_end , & nums )"		3486905	1					
ANR	3486922	Callee	onig_name_to_group_numbers		3486905	0					
ANR	3486923	Identifier	onig_name_to_group_numbers		3486905	0					
ANR	3486924	ArgumentList	reg		3486905	1					
ANR	3486925	Argument	reg		3486905	0					
ANR	3486926	Identifier	reg		3486905	0					
ANR	3486927	Argument	name		3486905	1					
ANR	3486928	Identifier	name		3486905	0					
ANR	3486929	Argument	name_end		3486905	2					
ANR	3486930	Identifier	name_end		3486905	0					
ANR	3486931	Argument	& nums		3486905	3					
ANR	3486932	UnaryOperationExpression	& nums		3486905	0					
ANR	3486933	UnaryOperator	&		3486905	0					
ANR	3486934	Identifier	nums		3486905	1					
ANR	3486935	IfStatement	if ( n < 0 )		3486905	2					
ANR	3486936	Condition	n < 0	856:6:19369:19373	3486905	0	True				
ANR	3486937	RelationalExpression	n < 0		3486905	0		<			
ANR	3486938	Identifier	n		3486905	0					
ANR	3486939	PrimaryExpression	0		3486905	1					
ANR	3486940	ReturnStatement	return n ;	857:4:19380:19388	3486905	1	True				
ANR	3486941	Identifier	n		3486905	0					
ANR	3486942	ElseStatement	else		3486905	0					
ANR	3486943	IfStatement	if ( n == 0 )		3486905	0					
ANR	3486944	Condition	n == 0	858:11:19401:19406	3486905	0	True				
ANR	3486945	EqualityExpression	n == 0		3486905	0		==			
ANR	3486946	Identifier	n		3486905	0					
ANR	3486947	PrimaryExpression	0		3486905	1					
ANR	3486948	ReturnStatement	return ONIGERR_PARSER_BUG ;	859:4:19413:19438	3486905	1	True				
ANR	3486949	Identifier	ONIGERR_PARSER_BUG		3486905	0					
ANR	3486950	ElseStatement	else		3486905	0					
ANR	3486951	IfStatement	if ( n == 1 )		3486905	0					
ANR	3486952	Condition	n == 1	860:11:19451:19456	3486905	0	True				
ANR	3486953	EqualityExpression	n == 1		3486905	0		==			
ANR	3486954	Identifier	n		3486905	0					
ANR	3486955	PrimaryExpression	1		3486905	1					
ANR	3486956	ReturnStatement	return nums [ 0 ] ;	861:4:19463:19477	3486905	1	True				
ANR	3486957	ArrayIndexing	nums [ 0 ]		3486905	0					
ANR	3486958	Identifier	nums		3486905	0					
ANR	3486959	PrimaryExpression	0		3486905	1					
ANR	3486960	ElseStatement	else		3486905	0					
ANR	3486961	CompoundStatement		11:7:206:206	3486905	0					
ANR	3486962	IfStatement	if ( IS_NOT_NULL ( region ) )		3486905	0					
ANR	3486963	Condition	IS_NOT_NULL ( region )	863:8:19496:19514	3486905	0	True				
ANR	3486964	CallExpression	IS_NOT_NULL ( region )		3486905	0					
ANR	3486965	Callee	IS_NOT_NULL		3486905	0					
ANR	3486966	Identifier	IS_NOT_NULL		3486905	0					
ANR	3486967	ArgumentList	region		3486905	1					
ANR	3486968	Argument	region		3486905	0					
ANR	3486969	Identifier	region		3486905	0					
ANR	3486970	CompoundStatement		12:29:237:237	3486905	1					
ANR	3486971	ForStatement	for ( i = n - 1 ; i >= 0 ; i -- )		3486905	0					
ANR	3486972	ForInit	i = n - 1 ;	864:11:19530:19539	3486905	0	True				
ANR	3486973	AssignmentExpression	i = n - 1		3486905	0		=			
ANR	3486974	Identifier	i		3486905	0					
ANR	3486975	AdditiveExpression	n - 1		3486905	1		-			
ANR	3486976	Identifier	n		3486905	0					
ANR	3486977	PrimaryExpression	1		3486905	1					
ANR	3486978	Condition	i >= 0	864:22:19541:19546	3486905	1	True				
ANR	3486979	RelationalExpression	i >= 0		3486905	0		>=			
ANR	3486980	Identifier	i		3486905	0					
ANR	3486981	PrimaryExpression	0		3486905	1					
ANR	3486982	PostIncDecOperationExpression	i --	864:30:19549:19551	3486905	2	True				
ANR	3486983	Identifier	i		3486905	0					
ANR	3486984	IncDec	--		3486905	1					
ANR	3486985	CompoundStatement		13:35:274:274	3486905	3					
ANR	3486986	IfStatement	if ( region -> beg [ nums [ i ] ] != ONIG_REGION_NOTPOS )		3486905	0					
ANR	3486987	Condition	region -> beg [ nums [ i ] ] != ONIG_REGION_NOTPOS	865:5:19561:19602	3486905	0	True				
ANR	3486988	EqualityExpression	region -> beg [ nums [ i ] ] != ONIG_REGION_NOTPOS		3486905	0		!=			
ANR	3486989	ArrayIndexing	region -> beg [ nums [ i ] ]		3486905	0					
ANR	3486990	PtrMemberAccess	region -> beg		3486905	0					
ANR	3486991	Identifier	region		3486905	0					
ANR	3486992	Identifier	beg		3486905	1					
ANR	3486993	ArrayIndexing	nums [ i ]		3486905	1					
ANR	3486994	Identifier	nums		3486905	0					
ANR	3486995	Identifier	i		3486905	1					
ANR	3486996	Identifier	ONIG_REGION_NOTPOS		3486905	1					
ANR	3486997	ReturnStatement	return nums [ i ] ;	866:3:19608:19622	3486905	1	True				
ANR	3486998	ArrayIndexing	nums [ i ]		3486905	0					
ANR	3486999	Identifier	nums		3486905	0					
ANR	3487000	Identifier	i		3486905	1					
ANR	3487001	ReturnStatement	return nums [ n - 1 ] ;	869:4:19642:19660	3486905	1	True				
ANR	3487002	ArrayIndexing	nums [ n - 1 ]		3486905	0					
ANR	3487003	Identifier	nums		3486905	0					
ANR	3487004	AdditiveExpression	n - 1		3486905	1		-			
ANR	3487005	Identifier	n		3486905	0					
ANR	3487006	PrimaryExpression	1		3486905	1					
ANR	3487007	ReturnType	extern int		3486905	1					
ANR	3487008	Identifier	onig_name_to_backref_number		3486905	2					
ANR	3487009	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end , OnigRegion * region"		3486905	3					
ANR	3487010	Parameter	regex_t * reg	850:28:19196:19207	3486905	0	True				
ANR	3487011	ParameterType	regex_t *		3486905	0					
ANR	3487012	Identifier	reg		3486905	1					
ANR	3487013	Parameter	const UChar * name	850:42:19210:19226	3486905	1	True				
ANR	3487014	ParameterType	const UChar *		3486905	0					
ANR	3487015	Identifier	name		3486905	1					
ANR	3487016	Parameter	const UChar * name_end	851:7:19236:19256	3486905	2	True				
ANR	3487017	ParameterType	const UChar *		3486905	0					
ANR	3487018	Identifier	name_end		3486905	1					
ANR	3487019	Parameter	OnigRegion * region	851:30:19259:19276	3486905	3	True				
ANR	3487020	ParameterType	OnigRegion *		3486905	0					
ANR	3487021	Identifier	region		3486905	1					
ANR	3487022	CFGEntryNode	ENTRY		3486905		True				
ANR	3487023	CFGExitNode	EXIT		3486905		True				
ANR	3487024	Symbol	* nums		3486905						
ANR	3487025	Symbol	IS_NOT_NULL		3486905						
ANR	3487026	Symbol	* * nums		3486905						
ANR	3487027	Symbol	* * i		3486905						
ANR	3487028	Symbol	onig_name_to_group_numbers		3486905						
ANR	3487029	Symbol	* region -> beg		3486905						
ANR	3487030	Symbol	i		3486905						
ANR	3487031	Symbol	& nums		3486905						
ANR	3487032	Symbol	region -> beg		3486905						
ANR	3487033	Symbol	* region		3486905						
ANR	3487034	Symbol	n		3486905						
ANR	3487035	Symbol	ONIGERR_PARSER_BUG		3486905						
ANR	3487036	Symbol	ONIG_REGION_NOTPOS		3486905						
ANR	3487037	Symbol	* i		3486905						
ANR	3487038	Symbol	reg		3486905						
ANR	3487039	Symbol	name		3486905						
ANR	3487040	Symbol	* n		3486905						
ANR	3487041	Symbol	* * region		3486905						
ANR	3487042	Symbol	region		3486905						
ANR	3487043	Symbol	name_end		3486905						
ANR	3487044	Symbol	nums		3486905						
ANR	3487045	Function	onig_name_to_group_numbers	875:0:19698:19845							
ANR	3487046	FunctionDef	"onig_name_to_group_numbers (regex_t * reg , const UChar * name , const UChar * name_end , int * * nums)"		3487045	0					
ANR	3487047	CompoundStatement		878:0:19810:19845	3487045	0					
ANR	3487048	ReturnStatement	return ONIG_NO_SUPPORT_CONFIG ;	879:2:19814:19843	3487045	0	True				
ANR	3487049	Identifier	ONIG_NO_SUPPORT_CONFIG		3487045	0					
ANR	3487050	ReturnType	extern int		3487045	1					
ANR	3487051	Identifier	onig_name_to_group_numbers		3487045	2					
ANR	3487052	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end , int * * nums"		3487045	3					
ANR	3487053	Parameter	regex_t * reg	876:27:19736:19747	3487045	0	True				
ANR	3487054	ParameterType	regex_t *		3487045	0					
ANR	3487055	Identifier	reg		3487045	1					
ANR	3487056	Parameter	const UChar * name	876:41:19750:19766	3487045	1	True				
ANR	3487057	ParameterType	const UChar *		3487045	0					
ANR	3487058	Identifier	name		3487045	1					
ANR	3487059	Parameter	const UChar * name_end	877:6:19775:19795	3487045	2	True				
ANR	3487060	ParameterType	const UChar *		3487045	0					
ANR	3487061	Identifier	name_end		3487045	1					
ANR	3487062	Parameter	int * * nums	877:29:19798:19807	3487045	3	True				
ANR	3487063	ParameterType	int * *		3487045	0					
ANR	3487064	Identifier	nums		3487045	1					
ANR	3487065	CFGEntryNode	ENTRY		3487045		True				
ANR	3487066	CFGExitNode	EXIT		3487045		True				
ANR	3487067	Symbol	ONIG_NO_SUPPORT_CONFIG		3487045						
ANR	3487068	Symbol	reg		3487045						
ANR	3487069	Symbol	name		3487045						
ANR	3487070	Symbol	name_end		3487045						
ANR	3487071	Symbol	nums		3487045						
ANR	3487072	Function	onig_name_to_backref_number	882:0:19848:20005							
ANR	3487073	FunctionDef	"onig_name_to_backref_number (regex_t * reg , const UChar * name , const UChar * name_end , OnigRegion * region)"		3487072	0					
ANR	3487074	CompoundStatement		885:0:19970:20005	3487072	0					
ANR	3487075	ReturnStatement	return ONIG_NO_SUPPORT_CONFIG ;	886:2:19974:20003	3487072	0	True				
ANR	3487076	Identifier	ONIG_NO_SUPPORT_CONFIG		3487072	0					
ANR	3487077	ReturnType	extern int		3487072	1					
ANR	3487078	Identifier	onig_name_to_backref_number		3487072	2					
ANR	3487079	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end , OnigRegion * region"		3487072	3					
ANR	3487080	Parameter	regex_t * reg	883:28:19887:19898	3487072	0	True				
ANR	3487081	ParameterType	regex_t *		3487072	0					
ANR	3487082	Identifier	reg		3487072	1					
ANR	3487083	Parameter	const UChar * name	883:42:19901:19917	3487072	1	True				
ANR	3487084	ParameterType	const UChar *		3487072	0					
ANR	3487085	Identifier	name		3487072	1					
ANR	3487086	Parameter	const UChar * name_end	884:7:19927:19947	3487072	2	True				
ANR	3487087	ParameterType	const UChar *		3487072	0					
ANR	3487088	Identifier	name_end		3487072	1					
ANR	3487089	Parameter	OnigRegion * region	884:30:19950:19967	3487072	3	True				
ANR	3487090	ParameterType	OnigRegion *		3487072	0					
ANR	3487091	Identifier	region		3487072	1					
ANR	3487092	CFGEntryNode	ENTRY		3487072		True				
ANR	3487093	CFGExitNode	EXIT		3487072		True				
ANR	3487094	Symbol	ONIG_NO_SUPPORT_CONFIG		3487072						
ANR	3487095	Symbol	reg		3487072						
ANR	3487096	Symbol	name		3487072						
ANR	3487097	Symbol	region		3487072						
ANR	3487098	Symbol	name_end		3487072						
ANR	3487099	Function	onig_foreach_name	889:0:20008:20164							
ANR	3487100	FunctionDef	"onig_foreach_name (regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg)"		3487099	0					
ANR	3487101	CompoundStatement		892:0:20129:20164	3487099	0					
ANR	3487102	ReturnStatement	return ONIG_NO_SUPPORT_CONFIG ;	893:2:20133:20162	3487099	0	True				
ANR	3487103	Identifier	ONIG_NO_SUPPORT_CONFIG		3487099	0					
ANR	3487104	ReturnType	extern int		3487099	1					
ANR	3487105	Identifier	onig_foreach_name		3487099	2					
ANR	3487106	ParameterList	"regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg"		3487099	3					
ANR	3487107	Parameter	regex_t * reg	890:18:20037:20048	3487099	0	True				
ANR	3487108	ParameterType	regex_t *		3487099	0					
ANR	3487109	Identifier	reg		3487099	1					
ANR	3487110	Parameter	"int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	891:2:20053:20115	3487099	1	True				
ANR	3487111	ParameterType	"(( const UChar * , const UChar * , int , int * , regex_t * , void * ) int) *"		3487099	0					
ANR	3487112	Identifier	func		3487099	1					
ANR	3487113	Parameter	void * arg	891:67:20118:20126	3487099	2	True				
ANR	3487114	ParameterType	void *		3487099	0					
ANR	3487115	Identifier	arg		3487099	1					
ANR	3487116	CFGEntryNode	ENTRY		3487099		True				
ANR	3487117	CFGExitNode	EXIT		3487099		True				
ANR	3487118	Symbol	func		3487099						
ANR	3487119	Symbol	ONIG_NO_SUPPORT_CONFIG		3487099						
ANR	3487120	Symbol	reg		3487099						
ANR	3487121	Symbol	arg		3487099						
ANR	3487122	Function	onig_number_of_names	896:0:20167:20227							
ANR	3487123	FunctionDef	onig_number_of_names (regex_t * reg)		3487122	0					
ANR	3487124	CompoundStatement		898:0:20213:20227	3487122	0					
ANR	3487125	ReturnStatement	return 0 ;	899:2:20217:20225	3487122	0	True				
ANR	3487126	PrimaryExpression	0		3487122	0					
ANR	3487127	ReturnType	extern int		3487122	1					
ANR	3487128	Identifier	onig_number_of_names		3487122	2					
ANR	3487129	ParameterList	regex_t * reg		3487122	3					
ANR	3487130	Parameter	regex_t * reg	897:21:20199:20210	3487122	0	True				
ANR	3487131	ParameterType	regex_t *		3487122	0					
ANR	3487132	Identifier	reg		3487122	1					
ANR	3487133	CFGEntryNode	ENTRY		3487122		True				
ANR	3487134	CFGExitNode	EXIT		3487122		True				
ANR	3487135	Symbol	reg		3487122						
ANR	3487136	Function	onig_noname_group_capture_is_active	903:0:20264:20652							
ANR	3487137	FunctionDef	onig_noname_group_capture_is_active (regex_t * reg)		3487136	0					
ANR	3487138	CompoundStatement		905:0:20325:20652	3487136	0					
ANR	3487139	IfStatement	"if ( ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_DONT_CAPTURE_GROUP ) )"		3487136	0					
ANR	3487140	Condition	"ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_DONT_CAPTURE_GROUP )"	906:6:20333:20395	3487136	0	True				
ANR	3487141	CallExpression	"ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_DONT_CAPTURE_GROUP )"		3487136	0					
ANR	3487142	Callee	ONIG_IS_OPTION_ON		3487136	0					
ANR	3487143	Identifier	ONIG_IS_OPTION_ON		3487136	0					
ANR	3487144	ArgumentList	reg -> options		3487136	1					
ANR	3487145	Argument	reg -> options		3487136	0					
ANR	3487146	PtrMemberAccess	reg -> options		3487136	0					
ANR	3487147	Identifier	reg		3487136	0					
ANR	3487148	Identifier	options		3487136	1					
ANR	3487149	Argument	ONIG_OPTION_DONT_CAPTURE_GROUP		3487136	1					
ANR	3487150	Identifier	ONIG_OPTION_DONT_CAPTURE_GROUP		3487136	0					
ANR	3487151	ReturnStatement	return 0 ;	907:4:20402:20410	3487136	1	True				
ANR	3487152	PrimaryExpression	0		3487136	0					
ANR	3487153	IfStatement	"if ( onig_number_of_names ( reg ) > 0 && IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP ) )"		3487136	1					
ANR	3487154	Condition	"onig_number_of_names ( reg ) > 0 && IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"	910:6:20442:20609	3487136	0	True				
ANR	3487155	AndExpression	"onig_number_of_names ( reg ) > 0 && IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		3487136	0		&&			
ANR	3487156	RelationalExpression	onig_number_of_names ( reg ) > 0		3487136	0		>			
ANR	3487157	CallExpression	onig_number_of_names ( reg )		3487136	0					
ANR	3487158	Callee	onig_number_of_names		3487136	0					
ANR	3487159	Identifier	onig_number_of_names		3487136	0					
ANR	3487160	ArgumentList	reg		3487136	1					
ANR	3487161	Argument	reg		3487136	0					
ANR	3487162	Identifier	reg		3487136	0					
ANR	3487163	PrimaryExpression	0		3487136	1					
ANR	3487164	AndExpression	"IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		3487136	1		&&			
ANR	3487165	CallExpression	"IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP )"		3487136	0					
ANR	3487166	Callee	IS_SYNTAX_BV		3487136	0					
ANR	3487167	Identifier	IS_SYNTAX_BV		3487136	0					
ANR	3487168	ArgumentList	reg -> syntax		3487136	1					
ANR	3487169	Argument	reg -> syntax		3487136	0					
ANR	3487170	PtrMemberAccess	reg -> syntax		3487136	0					
ANR	3487171	Identifier	reg		3487136	0					
ANR	3487172	Identifier	syntax		3487136	1					
ANR	3487173	Argument	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		3487136	1					
ANR	3487174	Identifier	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		3487136	0					
ANR	3487175	UnaryOperationExpression	"! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		3487136	1					
ANR	3487176	UnaryOperator	!		3487136	0					
ANR	3487177	CallExpression	"ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		3487136	1					
ANR	3487178	Callee	ONIG_IS_OPTION_ON		3487136	0					
ANR	3487179	Identifier	ONIG_IS_OPTION_ON		3487136	0					
ANR	3487180	ArgumentList	reg -> options		3487136	1					
ANR	3487181	Argument	reg -> options		3487136	0					
ANR	3487182	PtrMemberAccess	reg -> options		3487136	0					
ANR	3487183	Identifier	reg		3487136	0					
ANR	3487184	Identifier	options		3487136	1					
ANR	3487185	Argument	ONIG_OPTION_CAPTURE_GROUP		3487136	1					
ANR	3487186	Identifier	ONIG_OPTION_CAPTURE_GROUP		3487136	0					
ANR	3487187	CompoundStatement		8:67:286:286	3487136	1					
ANR	3487188	ReturnStatement	return 0 ;	913:4:20618:20626	3487136	0	True				
ANR	3487189	PrimaryExpression	0		3487136	0					
ANR	3487190	ReturnStatement	return 1 ;	917:2:20642:20650	3487136	2	True				
ANR	3487191	PrimaryExpression	1		3487136	0					
ANR	3487192	ReturnType	extern int		3487136	1					
ANR	3487193	Identifier	onig_noname_group_capture_is_active		3487136	2					
ANR	3487194	ParameterList	regex_t * reg		3487136	3					
ANR	3487195	Parameter	regex_t * reg	904:36:20311:20322	3487136	0	True				
ANR	3487196	ParameterType	regex_t *		3487136	0					
ANR	3487197	Identifier	reg		3487136	1					
ANR	3487198	CFGEntryNode	ENTRY		3487136		True				
ANR	3487199	CFGExitNode	EXIT		3487136		True				
ANR	3487200	Symbol	ONIG_IS_OPTION_ON		3487136						
ANR	3487201	Symbol	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		3487136						
ANR	3487202	Symbol	reg		3487136						
ANR	3487203	Symbol	reg -> syntax		3487136						
ANR	3487204	Symbol	reg -> options		3487136						
ANR	3487205	Symbol	IS_SYNTAX_BV		3487136						
ANR	3487206	Symbol	ONIG_OPTION_DONT_CAPTURE_GROUP		3487136						
ANR	3487207	Symbol	ONIG_OPTION_CAPTURE_GROUP		3487136						
ANR	3487208	Symbol	* reg		3487136						
ANR	3487209	Symbol	onig_number_of_names		3487136						
ANR	3487210	Function	scan_env_clear	923:0:20703:21419							
ANR	3487211	FunctionDef	scan_env_clear (ScanEnv * env)		3487210	0					
ANR	3487212	CompoundStatement		925:0:20744:21419	3487210	0					
ANR	3487213	IdentifierDeclStatement	int i ;	926:2:20748:20753	3487210	0	True				
ANR	3487214	IdentifierDecl	i		3487210	0					
ANR	3487215	IdentifierDeclType	int		3487210	0					
ANR	3487216	Identifier	i		3487210	1					
ANR	3487217	ExpressionStatement	BIT_STATUS_CLEAR ( env -> capture_history )	928:2:20758:20796	3487210	1	True				
ANR	3487218	CallExpression	BIT_STATUS_CLEAR ( env -> capture_history )		3487210	0					
ANR	3487219	Callee	BIT_STATUS_CLEAR		3487210	0					
ANR	3487220	Identifier	BIT_STATUS_CLEAR		3487210	0					
ANR	3487221	ArgumentList	env -> capture_history		3487210	1					
ANR	3487222	Argument	env -> capture_history		3487210	0					
ANR	3487223	PtrMemberAccess	env -> capture_history		3487210	0					
ANR	3487224	Identifier	env		3487210	0					
ANR	3487225	Identifier	capture_history		3487210	1					
ANR	3487226	ExpressionStatement	BIT_STATUS_CLEAR ( env -> bt_mem_start )	929:2:20800:20835	3487210	2	True				
ANR	3487227	CallExpression	BIT_STATUS_CLEAR ( env -> bt_mem_start )		3487210	0					
ANR	3487228	Callee	BIT_STATUS_CLEAR		3487210	0					
ANR	3487229	Identifier	BIT_STATUS_CLEAR		3487210	0					
ANR	3487230	ArgumentList	env -> bt_mem_start		3487210	1					
ANR	3487231	Argument	env -> bt_mem_start		3487210	0					
ANR	3487232	PtrMemberAccess	env -> bt_mem_start		3487210	0					
ANR	3487233	Identifier	env		3487210	0					
ANR	3487234	Identifier	bt_mem_start		3487210	1					
ANR	3487235	ExpressionStatement	BIT_STATUS_CLEAR ( env -> bt_mem_end )	930:2:20839:20872	3487210	3	True				
ANR	3487236	CallExpression	BIT_STATUS_CLEAR ( env -> bt_mem_end )		3487210	0					
ANR	3487237	Callee	BIT_STATUS_CLEAR		3487210	0					
ANR	3487238	Identifier	BIT_STATUS_CLEAR		3487210	0					
ANR	3487239	ArgumentList	env -> bt_mem_end		3487210	1					
ANR	3487240	Argument	env -> bt_mem_end		3487210	0					
ANR	3487241	PtrMemberAccess	env -> bt_mem_end		3487210	0					
ANR	3487242	Identifier	env		3487210	0					
ANR	3487243	Identifier	bt_mem_end		3487210	1					
ANR	3487244	ExpressionStatement	BIT_STATUS_CLEAR ( env -> backrefed_mem )	931:2:20876:20912	3487210	4	True				
ANR	3487245	CallExpression	BIT_STATUS_CLEAR ( env -> backrefed_mem )		3487210	0					
ANR	3487246	Callee	BIT_STATUS_CLEAR		3487210	0					
ANR	3487247	Identifier	BIT_STATUS_CLEAR		3487210	0					
ANR	3487248	ArgumentList	env -> backrefed_mem		3487210	1					
ANR	3487249	Argument	env -> backrefed_mem		3487210	0					
ANR	3487250	PtrMemberAccess	env -> backrefed_mem		3487210	0					
ANR	3487251	Identifier	env		3487210	0					
ANR	3487252	Identifier	backrefed_mem		3487210	1					
ANR	3487253	ExpressionStatement	env -> error = ( UChar * ) NULL	932:2:20916:20947	3487210	5	True				
ANR	3487254	AssignmentExpression	env -> error = ( UChar * ) NULL		3487210	0		=			
ANR	3487255	PtrMemberAccess	env -> error		3487210	0					
ANR	3487256	Identifier	env		3487210	0					
ANR	3487257	Identifier	error		3487210	1					
ANR	3487258	CastExpression	( UChar * ) NULL		3487210	1					
ANR	3487259	CastTarget	UChar *		3487210	0					
ANR	3487260	Identifier	NULL		3487210	1					
ANR	3487261	ExpressionStatement	env -> error_end = ( UChar * ) NULL	933:2:20951:20982	3487210	6	True				
ANR	3487262	AssignmentExpression	env -> error_end = ( UChar * ) NULL		3487210	0		=			
ANR	3487263	PtrMemberAccess	env -> error_end		3487210	0					
ANR	3487264	Identifier	env		3487210	0					
ANR	3487265	Identifier	error_end		3487210	1					
ANR	3487266	CastExpression	( UChar * ) NULL		3487210	1					
ANR	3487267	CastTarget	UChar *		3487210	0					
ANR	3487268	Identifier	NULL		3487210	1					
ANR	3487269	ExpressionStatement	env -> num_call = 0	934:2:20986:21005	3487210	7	True				
ANR	3487270	AssignmentExpression	env -> num_call = 0		3487210	0		=			
ANR	3487271	PtrMemberAccess	env -> num_call		3487210	0					
ANR	3487272	Identifier	env		3487210	0					
ANR	3487273	Identifier	num_call		3487210	1					
ANR	3487274	PrimaryExpression	0		3487210	1					
ANR	3487275	ExpressionStatement	env -> num_mem = 0	935:2:21009:21028	3487210	8	True				
ANR	3487276	AssignmentExpression	env -> num_mem = 0		3487210	0		=			
ANR	3487277	PtrMemberAccess	env -> num_mem		3487210	0					
ANR	3487278	Identifier	env		3487210	0					
ANR	3487279	Identifier	num_mem		3487210	1					
ANR	3487280	PrimaryExpression	0		3487210	1					
ANR	3487281	ExpressionStatement	env -> num_named = 0	937:2:21055:21074	3487210	9	True				
ANR	3487282	AssignmentExpression	env -> num_named = 0		3487210	0		=			
ANR	3487283	PtrMemberAccess	env -> num_named		3487210	0					
ANR	3487284	Identifier	env		3487210	0					
ANR	3487285	Identifier	num_named		3487210	1					
ANR	3487286	PrimaryExpression	0		3487210	1					
ANR	3487287	ExpressionStatement	env -> mem_alloc = 0	939:2:21085:21111	3487210	10	True				
ANR	3487288	AssignmentExpression	env -> mem_alloc = 0		3487210	0		=			
ANR	3487289	PtrMemberAccess	env -> mem_alloc		3487210	0					
ANR	3487290	Identifier	env		3487210	0					
ANR	3487291	Identifier	mem_alloc		3487210	1					
ANR	3487292	PrimaryExpression	0		3487210	1					
ANR	3487293	ExpressionStatement	env -> mem_nodes_dynamic = ( Node * * ) NULL	940:2:21115:21153	3487210	11	True				
ANR	3487294	AssignmentExpression	env -> mem_nodes_dynamic = ( Node * * ) NULL		3487210	0		=			
ANR	3487295	PtrMemberAccess	env -> mem_nodes_dynamic		3487210	0					
ANR	3487296	Identifier	env		3487210	0					
ANR	3487297	Identifier	mem_nodes_dynamic		3487210	1					
ANR	3487298	CastExpression	( Node * * ) NULL		3487210	1					
ANR	3487299	CastTarget	Node * *		3487210	0					
ANR	3487300	Identifier	NULL		3487210	1					
ANR	3487301	ForStatement	for ( i = 0 ; i < SCANENV_MEMNODES_SIZE ; i ++ )		3487210	12					
ANR	3487302	ForInit	i = 0 ;	942:7:21163:21168	3487210	0	True				
ANR	3487303	AssignmentExpression	i = 0		3487210	0		=			
ANR	3487304	Identifier	i		3487210	0					
ANR	3487305	PrimaryExpression	0		3487210	1					
ANR	3487306	Condition	i < SCANENV_MEMNODES_SIZE	942:14:21170:21194	3487210	1	True				
ANR	3487307	RelationalExpression	i < SCANENV_MEMNODES_SIZE		3487210	0		<			
ANR	3487308	Identifier	i		3487210	0					
ANR	3487309	Identifier	SCANENV_MEMNODES_SIZE		3487210	1					
ANR	3487310	PostIncDecOperationExpression	i ++	942:41:21197:21199	3487210	2	True				
ANR	3487311	Identifier	i		3487210	0					
ANR	3487312	IncDec	++		3487210	1					
ANR	3487313	ExpressionStatement	env -> mem_nodes_static [ i ] = NULL_NODE	943:4:21206:21242	3487210	3	True				
ANR	3487314	AssignmentExpression	env -> mem_nodes_static [ i ] = NULL_NODE		3487210	0		=			
ANR	3487315	ArrayIndexing	env -> mem_nodes_static [ i ]		3487210	0					
ANR	3487316	PtrMemberAccess	env -> mem_nodes_static		3487210	0					
ANR	3487317	Identifier	env		3487210	0					
ANR	3487318	Identifier	mem_nodes_static		3487210	1					
ANR	3487319	Identifier	i		3487210	1					
ANR	3487320	Identifier	NULL_NODE		3487210	1					
ANR	3487321	ExpressionStatement	env -> num_comb_exp_check = 0	946:2:21286:21314	3487210	13	True				
ANR	3487322	AssignmentExpression	env -> num_comb_exp_check = 0		3487210	0		=			
ANR	3487323	PtrMemberAccess	env -> num_comb_exp_check		3487210	0					
ANR	3487324	Identifier	env		3487210	0					
ANR	3487325	Identifier	num_comb_exp_check		3487210	1					
ANR	3487326	PrimaryExpression	0		3487210	1					
ANR	3487327	ExpressionStatement	env -> comb_exp_max_regnum = 0	947:2:21318:21346	3487210	14	True				
ANR	3487328	AssignmentExpression	env -> comb_exp_max_regnum = 0		3487210	0		=			
ANR	3487329	PtrMemberAccess	env -> comb_exp_max_regnum		3487210	0					
ANR	3487330	Identifier	env		3487210	0					
ANR	3487331	Identifier	comb_exp_max_regnum		3487210	1					
ANR	3487332	PrimaryExpression	0		3487210	1					
ANR	3487333	ExpressionStatement	env -> curr_max_regnum = 0	948:2:21350:21378	3487210	15	True				
ANR	3487334	AssignmentExpression	env -> curr_max_regnum = 0		3487210	0		=			
ANR	3487335	PtrMemberAccess	env -> curr_max_regnum		3487210	0					
ANR	3487336	Identifier	env		3487210	0					
ANR	3487337	Identifier	curr_max_regnum		3487210	1					
ANR	3487338	PrimaryExpression	0		3487210	1					
ANR	3487339	ExpressionStatement	env -> has_recursion = 0	949:2:21382:21410	3487210	16	True				
ANR	3487340	AssignmentExpression	env -> has_recursion = 0		3487210	0		=			
ANR	3487341	PtrMemberAccess	env -> has_recursion		3487210	0					
ANR	3487342	Identifier	env		3487210	0					
ANR	3487343	Identifier	has_recursion		3487210	1					
ANR	3487344	PrimaryExpression	0		3487210	1					
ANR	3487345	ReturnType	static void		3487210	1					
ANR	3487346	Identifier	scan_env_clear		3487210	2					
ANR	3487347	ParameterList	ScanEnv * env		3487210	3					
ANR	3487348	Parameter	ScanEnv * env	924:15:20730:20741	3487210	0	True				
ANR	3487349	ParameterType	ScanEnv *		3487210	0					
ANR	3487350	Identifier	env		3487210	1					
ANR	3487351	CFGEntryNode	ENTRY		3487210		True				
ANR	3487352	CFGExitNode	EXIT		3487210		True				
ANR	3487353	Symbol	* * env		3487210						
ANR	3487354	Symbol	env -> bt_mem_start		3487210						
ANR	3487355	Symbol	env -> num_named		3487210						
ANR	3487356	Symbol	env -> num_comb_exp_check		3487210						
ANR	3487357	Symbol	env -> mem_alloc		3487210						
ANR	3487358	Symbol	SCANENV_MEMNODES_SIZE		3487210						
ANR	3487359	Symbol	env -> bt_mem_end		3487210						
ANR	3487360	Symbol	env -> error		3487210						
ANR	3487361	Symbol	env -> mem_nodes_static		3487210						
ANR	3487362	Symbol	env -> comb_exp_max_regnum		3487210						
ANR	3487363	Symbol	env -> curr_max_regnum		3487210						
ANR	3487364	Symbol	env -> capture_history		3487210						
ANR	3487365	Symbol	env -> backrefed_mem		3487210						
ANR	3487366	Symbol	NULL		3487210						
ANR	3487367	Symbol	* env		3487210						
ANR	3487368	Symbol	env -> num_mem		3487210						
ANR	3487369	Symbol	i		3487210						
ANR	3487370	Symbol	env		3487210						
ANR	3487371	Symbol	env -> error_end		3487210						
ANR	3487372	Symbol	env -> has_recursion		3487210						
ANR	3487373	Symbol	* i		3487210						
ANR	3487374	Symbol	env -> num_call		3487210						
ANR	3487375	Symbol	env -> mem_nodes_dynamic		3487210						
ANR	3487376	Symbol	NULL_NODE		3487210						
ANR	3487377	Symbol	* env -> mem_nodes_static		3487210						
ANR	3487378	Function	scan_env_add_mem_entry	953:0:21422:22168							
ANR	3487379	FunctionDef	scan_env_add_mem_entry (ScanEnv * env)		3487378	0					
ANR	3487380	CompoundStatement		955:0:21470:22168	3487378	0					
ANR	3487381	IdentifierDeclStatement	"int i , need , alloc ;"	956:2:21474:21492	3487378	0	True				
ANR	3487382	IdentifierDecl	i		3487378	0					
ANR	3487383	IdentifierDeclType	int		3487378	0					
ANR	3487384	Identifier	i		3487378	1					
ANR	3487385	IdentifierDecl	need		3487378	1					
ANR	3487386	IdentifierDeclType	int		3487378	0					
ANR	3487387	Identifier	need		3487378	1					
ANR	3487388	IdentifierDecl	alloc		3487378	2					
ANR	3487389	IdentifierDeclType	int		3487378	0					
ANR	3487390	Identifier	alloc		3487378	1					
ANR	3487391	IdentifierDeclStatement	Node * * p ;	957:2:21496:21504	3487378	1	True				
ANR	3487392	IdentifierDecl	* * p		3487378	0					
ANR	3487393	IdentifierDeclType	Node * *		3487378	0					
ANR	3487394	Identifier	p		3487378	1					
ANR	3487395	ExpressionStatement	need = env -> num_mem + 1	959:2:21509:21532	3487378	2	True				
ANR	3487396	AssignmentExpression	need = env -> num_mem + 1		3487378	0		=			
ANR	3487397	Identifier	need		3487378	0					
ANR	3487398	AdditiveExpression	env -> num_mem + 1		3487378	1		+			
ANR	3487399	PtrMemberAccess	env -> num_mem		3487378	0					
ANR	3487400	Identifier	env		3487378	0					
ANR	3487401	Identifier	num_mem		3487378	1					
ANR	3487402	PrimaryExpression	1		3487378	1					
ANR	3487403	IfStatement	if ( need >= SCANENV_MEMNODES_SIZE )		3487378	3					
ANR	3487404	Condition	need >= SCANENV_MEMNODES_SIZE	960:6:21540:21568	3487378	0	True				
ANR	3487405	RelationalExpression	need >= SCANENV_MEMNODES_SIZE		3487378	0		>=			
ANR	3487406	Identifier	need		3487378	0					
ANR	3487407	Identifier	SCANENV_MEMNODES_SIZE		3487378	1					
ANR	3487408	CompoundStatement		6:37:100:100	3487378	1					
ANR	3487409	IfStatement	if ( env -> mem_alloc <= need )		3487378	0					
ANR	3487410	Condition	env -> mem_alloc <= need	961:8:21581:21602	3487378	0	True				
ANR	3487411	RelationalExpression	env -> mem_alloc <= need		3487378	0		<=			
ANR	3487412	PtrMemberAccess	env -> mem_alloc		3487378	0					
ANR	3487413	Identifier	env		3487378	0					
ANR	3487414	Identifier	mem_alloc		3487378	1					
ANR	3487415	Identifier	need		3487378	1					
ANR	3487416	CompoundStatement		7:32:134:134	3487378	1					
ANR	3487417	IfStatement	if ( IS_NULL ( env -> mem_nodes_dynamic ) )		3487378	0					
ANR	3487418	Condition	IS_NULL ( env -> mem_nodes_dynamic )	962:10:21617:21647	3487378	0	True				
ANR	3487419	CallExpression	IS_NULL ( env -> mem_nodes_dynamic )		3487378	0					
ANR	3487420	Callee	IS_NULL		3487378	0					
ANR	3487421	Identifier	IS_NULL		3487378	0					
ANR	3487422	ArgumentList	env -> mem_nodes_dynamic		3487378	1					
ANR	3487423	Argument	env -> mem_nodes_dynamic		3487378	0					
ANR	3487424	PtrMemberAccess	env -> mem_nodes_dynamic		3487378	0					
ANR	3487425	Identifier	env		3487378	0					
ANR	3487426	Identifier	mem_nodes_dynamic		3487378	1					
ANR	3487427	CompoundStatement		8:43:179:179	3487378	1					
ANR	3487428	ExpressionStatement	alloc = INIT_SCANENV_MEMNODES_ALLOC_SIZE	963:1:21653:21693	3487378	0	True				
ANR	3487429	AssignmentExpression	alloc = INIT_SCANENV_MEMNODES_ALLOC_SIZE		3487378	0		=			
ANR	3487430	Identifier	alloc		3487378	0					
ANR	3487431	Identifier	INIT_SCANENV_MEMNODES_ALLOC_SIZE		3487378	1					
ANR	3487432	ExpressionStatement	p = ( Node * * ) xmalloc ( sizeof ( Node * ) * alloc )	964:1:21696:21739	3487378	1	True				
ANR	3487433	AssignmentExpression	p = ( Node * * ) xmalloc ( sizeof ( Node * ) * alloc )		3487378	0		=			
ANR	3487434	Identifier	p		3487378	0					
ANR	3487435	CastExpression	( Node * * ) xmalloc ( sizeof ( Node * ) * alloc )		3487378	1					
ANR	3487436	CastTarget	Node * *		3487378	0					
ANR	3487437	CallExpression	xmalloc ( sizeof ( Node * ) * alloc )		3487378	1					
ANR	3487438	Callee	xmalloc		3487378	0					
ANR	3487439	Identifier	xmalloc		3487378	0					
ANR	3487440	ArgumentList	sizeof ( Node * ) * alloc		3487378	1					
ANR	3487441	Argument	sizeof ( Node * ) * alloc		3487378	0					
ANR	3487442	MultiplicativeExpression	sizeof ( Node * ) * alloc		3487378	0		*			
ANR	3487443	SizeofExpression	sizeof ( Node * )		3487378	0					
ANR	3487444	Sizeof	sizeof		3487378	0					
ANR	3487445	SizeofOperand	Node *		3487378	1					
ANR	3487446	Identifier	alloc		3487378	1					
ANR	3487447	ExpressionStatement	"xmemcpy ( p , env -> mem_nodes_static , sizeof ( Node * ) * SCANENV_MEMNODES_SIZE )"	965:1:21742:21816	3487378	2	True				
ANR	3487448	CallExpression	"xmemcpy ( p , env -> mem_nodes_static , sizeof ( Node * ) * SCANENV_MEMNODES_SIZE )"		3487378	0					
ANR	3487449	Callee	xmemcpy		3487378	0					
ANR	3487450	Identifier	xmemcpy		3487378	0					
ANR	3487451	ArgumentList	p		3487378	1					
ANR	3487452	Argument	p		3487378	0					
ANR	3487453	Identifier	p		3487378	0					
ANR	3487454	Argument	env -> mem_nodes_static		3487378	1					
ANR	3487455	PtrMemberAccess	env -> mem_nodes_static		3487378	0					
ANR	3487456	Identifier	env		3487378	0					
ANR	3487457	Identifier	mem_nodes_static		3487378	1					
ANR	3487458	Argument	sizeof ( Node * ) * SCANENV_MEMNODES_SIZE		3487378	2					
ANR	3487459	MultiplicativeExpression	sizeof ( Node * ) * SCANENV_MEMNODES_SIZE		3487378	0		*			
ANR	3487460	SizeofExpression	sizeof ( Node * )		3487378	0					
ANR	3487461	Sizeof	sizeof		3487378	0					
ANR	3487462	SizeofOperand	Node *		3487378	1					
ANR	3487463	Identifier	SCANENV_MEMNODES_SIZE		3487378	1					
ANR	3487464	ElseStatement	else		3487378	0					
ANR	3487465	CompoundStatement		14:11:366:366	3487378	0					
ANR	3487466	ExpressionStatement	alloc = env -> mem_alloc * 2	969:1:21840:21866	3487378	0	True				
ANR	3487467	AssignmentExpression	alloc = env -> mem_alloc * 2		3487378	0		=			
ANR	3487468	Identifier	alloc		3487378	0					
ANR	3487469	MultiplicativeExpression	env -> mem_alloc * 2		3487378	1		*			
ANR	3487470	PtrMemberAccess	env -> mem_alloc		3487378	0					
ANR	3487471	Identifier	env		3487378	0					
ANR	3487472	Identifier	mem_alloc		3487378	1					
ANR	3487473	PrimaryExpression	2		3487378	1					
ANR	3487474	ExpressionStatement	"p = ( Node * * ) xrealloc ( env -> mem_nodes_dynamic , sizeof ( Node * ) * alloc )"	970:1:21869:21937	3487378	1	True				
ANR	3487475	AssignmentExpression	"p = ( Node * * ) xrealloc ( env -> mem_nodes_dynamic , sizeof ( Node * ) * alloc )"		3487378	0		=			
ANR	3487476	Identifier	p		3487378	0					
ANR	3487477	CastExpression	"( Node * * ) xrealloc ( env -> mem_nodes_dynamic , sizeof ( Node * ) * alloc )"		3487378	1					
ANR	3487478	CastTarget	Node * *		3487378	0					
ANR	3487479	CallExpression	"xrealloc ( env -> mem_nodes_dynamic , sizeof ( Node * ) * alloc )"		3487378	1					
ANR	3487480	Callee	xrealloc		3487378	0					
ANR	3487481	Identifier	xrealloc		3487378	0					
ANR	3487482	ArgumentList	env -> mem_nodes_dynamic		3487378	1					
ANR	3487483	Argument	env -> mem_nodes_dynamic		3487378	0					
ANR	3487484	PtrMemberAccess	env -> mem_nodes_dynamic		3487378	0					
ANR	3487485	Identifier	env		3487378	0					
ANR	3487486	Identifier	mem_nodes_dynamic		3487378	1					
ANR	3487487	Argument	sizeof ( Node * ) * alloc		3487378	1					
ANR	3487488	MultiplicativeExpression	sizeof ( Node * ) * alloc		3487378	0		*			
ANR	3487489	SizeofExpression	sizeof ( Node * )		3487378	0					
ANR	3487490	Sizeof	sizeof		3487378	0					
ANR	3487491	SizeofOperand	Node *		3487378	1					
ANR	3487492	Identifier	alloc		3487378	1					
ANR	3487493	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	972:6:21953:21980	3487378	1	True				
ANR	3487494	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		3487378	0					
ANR	3487495	Callee	CHECK_NULL_RETURN_MEMERR		3487378	0					
ANR	3487496	Identifier	CHECK_NULL_RETURN_MEMERR		3487378	0					
ANR	3487497	ArgumentList	p		3487378	1					
ANR	3487498	Argument	p		3487378	0					
ANR	3487499	Identifier	p		3487378	0					
ANR	3487500	ForStatement	for ( i = env -> num_mem + 1 ; i < alloc ; i ++ )		3487378	2					
ANR	3487501	ForInit	i = env -> num_mem + 1 ;	974:11:21994:22014	3487378	0	True				
ANR	3487502	AssignmentExpression	i = env -> num_mem + 1		3487378	0		=			
ANR	3487503	Identifier	i		3487378	0					
ANR	3487504	AdditiveExpression	env -> num_mem + 1		3487378	1		+			
ANR	3487505	PtrMemberAccess	env -> num_mem		3487378	0					
ANR	3487506	Identifier	env		3487378	0					
ANR	3487507	Identifier	num_mem		3487378	1					
ANR	3487508	PrimaryExpression	1		3487378	1					
ANR	3487509	Condition	i < alloc	974:33:22016:22024	3487378	1	True				
ANR	3487510	RelationalExpression	i < alloc		3487378	0		<			
ANR	3487511	Identifier	i		3487378	0					
ANR	3487512	Identifier	alloc		3487378	1					
ANR	3487513	PostIncDecOperationExpression	i ++	974:44:22027:22029	3487378	2	True				
ANR	3487514	Identifier	i		3487378	0					
ANR	3487515	IncDec	++		3487378	1					
ANR	3487516	ExpressionStatement	p [ i ] = NULL_NODE	975:1:22033:22049	3487378	3	True				
ANR	3487517	AssignmentExpression	p [ i ] = NULL_NODE		3487378	0		=			
ANR	3487518	ArrayIndexing	p [ i ]		3487378	0					
ANR	3487519	Identifier	p		3487378	0					
ANR	3487520	Identifier	i		3487378	1					
ANR	3487521	Identifier	NULL_NODE		3487378	1					
ANR	3487522	ExpressionStatement	env -> mem_nodes_dynamic = p	977:6:22058:22084	3487378	3	True				
ANR	3487523	AssignmentExpression	env -> mem_nodes_dynamic = p		3487378	0		=			
ANR	3487524	PtrMemberAccess	env -> mem_nodes_dynamic		3487378	0					
ANR	3487525	Identifier	env		3487378	0					
ANR	3487526	Identifier	mem_nodes_dynamic		3487378	1					
ANR	3487527	Identifier	p		3487378	1					
ANR	3487528	ExpressionStatement	env -> mem_alloc = alloc	978:6:22092:22114	3487378	4	True				
ANR	3487529	AssignmentExpression	env -> mem_alloc = alloc		3487378	0		=			
ANR	3487530	PtrMemberAccess	env -> mem_alloc		3487378	0					
ANR	3487531	Identifier	env		3487378	0					
ANR	3487532	Identifier	mem_alloc		3487378	1					
ANR	3487533	Identifier	alloc		3487378	1					
ANR	3487534	ExpressionStatement	env -> num_mem ++	982:2:22129:22143	3487378	4	True				
ANR	3487535	PostIncDecOperationExpression	env -> num_mem ++		3487378	0					
ANR	3487536	PtrMemberAccess	env -> num_mem		3487378	0					
ANR	3487537	Identifier	env		3487378	0					
ANR	3487538	Identifier	num_mem		3487378	1					
ANR	3487539	IncDec	++		3487378	1					
ANR	3487540	ReturnStatement	return env -> num_mem ;	983:2:22147:22166	3487378	5	True				
ANR	3487541	PtrMemberAccess	env -> num_mem		3487378	0					
ANR	3487542	Identifier	env		3487378	0					
ANR	3487543	Identifier	num_mem		3487378	1					
ANR	3487544	ReturnType	static int		3487378	1					
ANR	3487545	Identifier	scan_env_add_mem_entry		3487378	2					
ANR	3487546	ParameterList	ScanEnv * env		3487378	3					
ANR	3487547	Parameter	ScanEnv * env	954:23:21456:21467	3487378	0	True				
ANR	3487548	ParameterType	ScanEnv *		3487378	0					
ANR	3487549	Identifier	env		3487378	1					
ANR	3487550	CFGEntryNode	ENTRY		3487378		True				
ANR	3487551	CFGExitNode	EXIT		3487378		True				
ANR	3487552	Symbol	need		3487378						
ANR	3487553	Symbol	* env		3487378						
ANR	3487554	Symbol	env -> num_mem		3487378						
ANR	3487555	Symbol	i		3487378						
ANR	3487556	Symbol	env		3487378						
ANR	3487557	Symbol	env -> mem_alloc		3487378						
ANR	3487558	Symbol	INIT_SCANENV_MEMNODES_ALLOC_SIZE		3487378						
ANR	3487559	Symbol	SCANENV_MEMNODES_SIZE		3487378						
ANR	3487560	Symbol	p		3487378						
ANR	3487561	Symbol	* i		3487378						
ANR	3487562	Symbol	IS_NULL		3487378						
ANR	3487563	Symbol	xmalloc		3487378						
ANR	3487564	Symbol	env -> mem_nodes_static		3487378						
ANR	3487565	Symbol	env -> mem_nodes_dynamic		3487378						
ANR	3487566	Symbol	* p		3487378						
ANR	3487567	Symbol	alloc		3487378						
ANR	3487568	Symbol	xrealloc		3487378						
ANR	3487569	Symbol	NULL_NODE		3487378						
ANR	3487570	Function	scan_env_set_mem_node	986:0:22171:22358							
ANR	3487571	FunctionDef	"scan_env_set_mem_node (ScanEnv * env , int num , Node * node)"		3487570	0					
ANR	3487572	CompoundStatement		988:0:22239:22358	3487570	0					
ANR	3487573	IfStatement	if ( env -> num_mem >= num )		3487570	0					
ANR	3487574	Condition	env -> num_mem >= num	989:6:22247:22265	3487570	0	True				
ANR	3487575	RelationalExpression	env -> num_mem >= num		3487570	0		>=			
ANR	3487576	PtrMemberAccess	env -> num_mem		3487570	0					
ANR	3487577	Identifier	env		3487570	0					
ANR	3487578	Identifier	num_mem		3487570	1					
ANR	3487579	Identifier	num		3487570	1					
ANR	3487580	ExpressionStatement	SCANENV_MEM_NODES ( env ) [ num ] = node	990:4:22272:22306	3487570	1	True				
ANR	3487581	AssignmentExpression	SCANENV_MEM_NODES ( env ) [ num ] = node		3487570	0		=			
ANR	3487582	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ num ]		3487570	0					
ANR	3487583	CallExpression	SCANENV_MEM_NODES ( env )		3487570	0					
ANR	3487584	Callee	SCANENV_MEM_NODES		3487570	0					
ANR	3487585	Identifier	SCANENV_MEM_NODES		3487570	0					
ANR	3487586	ArgumentList	env		3487570	1					
ANR	3487587	Argument	env		3487570	0					
ANR	3487588	Identifier	env		3487570	0					
ANR	3487589	Identifier	num		3487570	1					
ANR	3487590	Identifier	node		3487570	1					
ANR	3487591	ElseStatement	else		3487570	0					
ANR	3487592	ReturnStatement	return ONIGERR_PARSER_BUG ;	992:4:22319:22344	3487570	0	True				
ANR	3487593	Identifier	ONIGERR_PARSER_BUG		3487570	0					
ANR	3487594	ReturnStatement	return 0 ;	993:2:22348:22356	3487570	1	True				
ANR	3487595	PrimaryExpression	0		3487570	0					
ANR	3487596	ReturnType	static int		3487570	1					
ANR	3487597	Identifier	scan_env_set_mem_node		3487570	2					
ANR	3487598	ParameterList	"ScanEnv * env , int num , Node * node"		3487570	3					
ANR	3487599	Parameter	ScanEnv * env	987:22:22204:22215	3487570	0	True				
ANR	3487600	ParameterType	ScanEnv *		3487570	0					
ANR	3487601	Identifier	env		3487570	1					
ANR	3487602	Parameter	int num	987:36:22218:22224	3487570	1	True				
ANR	3487603	ParameterType	int		3487570	0					
ANR	3487604	Identifier	num		3487570	1					
ANR	3487605	Parameter	Node * node	987:45:22227:22236	3487570	2	True				
ANR	3487606	ParameterType	Node *		3487570	0					
ANR	3487607	Identifier	node		3487570	1					
ANR	3487608	CFGEntryNode	ENTRY		3487570		True				
ANR	3487609	CFGExitNode	EXIT		3487570		True				
ANR	3487610	Symbol	* SCANENV_MEM_NODES		3487570						
ANR	3487611	Symbol	* num		3487570						
ANR	3487612	Symbol	node		3487570						
ANR	3487613	Symbol	num		3487570						
ANR	3487614	Symbol	* env		3487570						
ANR	3487615	Symbol	env -> num_mem		3487570						
ANR	3487616	Symbol	SCANENV_MEM_NODES		3487570						
ANR	3487617	Symbol	env		3487570						
ANR	3487618	Symbol	ONIGERR_PARSER_BUG		3487570						
ANR	3487619	ClassDef	_FreeNode	998:8:22405:22460							
ANR	3487620	DeclStmt									
ANR	3487621	Decl							struct _FreeNode	struct _FreeNode *	next
ANR	3487622	DeclStmt									
ANR	3487623	Decl							_FreeNode	_FreeNode	FreeNode
ANR	3487624	DeclStmt									
ANR	3487625	Decl							FreeNode	FreeNode *	FreeNodeList
ANR	3487626	Function	onig_node_free	1005:0:22521:23982							
ANR	3487627	FunctionDef	onig_node_free (Node * node)		3487626	0					
ANR	3487628	CompoundStatement		1007:0:22560:23982	3487626	0					
ANR	3487629	Label	start :	1008:1:22563:22568	3487626	0	True				
ANR	3487630	Identifier	start		3487626	0					
ANR	3487631	IfStatement	if ( IS_NULL ( node ) )		3487626	1					
ANR	3487632	Condition	IS_NULL ( node )	1009:6:22576:22588	3487626	0	True				
ANR	3487633	CallExpression	IS_NULL ( node )		3487626	0					
ANR	3487634	Callee	IS_NULL		3487626	0					
ANR	3487635	Identifier	IS_NULL		3487626	0					
ANR	3487636	ArgumentList	node		3487626	1					
ANR	3487637	Argument	node		3487626	0					
ANR	3487638	Identifier	node		3487626	0					
ANR	3487639	ReturnStatement	return ;	1009:21:22591:22598	3487626	1	True				
ANR	3487640	SwitchStatement	switch ( NTYPE ( node ) )		3487626	2					
ANR	3487641	Condition	NTYPE ( node )	1011:10:22611:22621	3487626	0	True				
ANR	3487642	CallExpression	NTYPE ( node )		3487626	0					
ANR	3487643	Callee	NTYPE		3487626	0					
ANR	3487644	Identifier	NTYPE		3487626	0					
ANR	3487645	ArgumentList	node		3487626	1					
ANR	3487646	Argument	node		3487626	0					
ANR	3487647	Identifier	node		3487626	0					
ANR	3487648	CompoundStatement		5:23:63:63	3487626	1					
ANR	3487649	Label	case NT_STR :	1012:2:22628:22639	3487626	0	True				
ANR	3487650	Identifier	NT_STR		3487626	0					
ANR	3487651	IfStatement	if ( NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf )		3487626	1					
ANR	3487652	Condition	NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf	1013:8:22649:22736	3487626	0	True				
ANR	3487653	AndExpression	NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf		3487626	0		&&			
ANR	3487654	EqualityExpression	NSTR ( node ) -> capa != 0		3487626	0		!=			
ANR	3487655	PtrMemberAccess	NSTR ( node ) -> capa		3487626	0					
ANR	3487656	CallExpression	NSTR ( node )		3487626	0					
ANR	3487657	Callee	NSTR		3487626	0					
ANR	3487658	Identifier	NSTR		3487626	0					
ANR	3487659	ArgumentList	node		3487626	1					
ANR	3487660	Argument	node		3487626	0					
ANR	3487661	Identifier	node		3487626	0					
ANR	3487662	Identifier	capa		3487626	1					
ANR	3487663	PrimaryExpression	0		3487626	1					
ANR	3487664	AndExpression	IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf		3487626	1		&&			
ANR	3487665	CallExpression	IS_NOT_NULL ( NSTR ( node ) -> s )		3487626	0					
ANR	3487666	Callee	IS_NOT_NULL		3487626	0					
ANR	3487667	Identifier	IS_NOT_NULL		3487626	0					
ANR	3487668	ArgumentList	NSTR ( node ) -> s		3487626	1					
ANR	3487669	Argument	NSTR ( node ) -> s		3487626	0					
ANR	3487670	PtrMemberAccess	NSTR ( node ) -> s		3487626	0					
ANR	3487671	CallExpression	NSTR ( node )		3487626	0					
ANR	3487672	Callee	NSTR		3487626	0					
ANR	3487673	Identifier	NSTR		3487626	0					
ANR	3487674	ArgumentList	node		3487626	1					
ANR	3487675	Argument	node		3487626	0					
ANR	3487676	Identifier	node		3487626	0					
ANR	3487677	Identifier	s		3487626	1					
ANR	3487678	EqualityExpression	NSTR ( node ) -> s != NSTR ( node ) -> buf		3487626	1		!=			
ANR	3487679	PtrMemberAccess	NSTR ( node ) -> s		3487626	0					
ANR	3487680	CallExpression	NSTR ( node )		3487626	0					
ANR	3487681	Callee	NSTR		3487626	0					
ANR	3487682	Identifier	NSTR		3487626	0					
ANR	3487683	ArgumentList	node		3487626	1					
ANR	3487684	Argument	node		3487626	0					
ANR	3487685	Identifier	node		3487626	0					
ANR	3487686	Identifier	s		3487626	1					
ANR	3487687	PtrMemberAccess	NSTR ( node ) -> buf		3487626	1					
ANR	3487688	CallExpression	NSTR ( node )		3487626	0					
ANR	3487689	Callee	NSTR		3487626	0					
ANR	3487690	Identifier	NSTR		3487626	0					
ANR	3487691	ArgumentList	node		3487626	1					
ANR	3487692	Argument	node		3487626	0					
ANR	3487693	Identifier	node		3487626	0					
ANR	3487694	Identifier	buf		3487626	1					
ANR	3487695	CompoundStatement		8:65:178:178	3487626	1					
ANR	3487696	ExpressionStatement	xfree ( NSTR ( node ) -> s )	1015:6:22747:22767	3487626	0	True				
ANR	3487697	CallExpression	xfree ( NSTR ( node ) -> s )		3487626	0					
ANR	3487698	Callee	xfree		3487626	0					
ANR	3487699	Identifier	xfree		3487626	0					
ANR	3487700	ArgumentList	NSTR ( node ) -> s		3487626	1					
ANR	3487701	Argument	NSTR ( node ) -> s		3487626	0					
ANR	3487702	PtrMemberAccess	NSTR ( node ) -> s		3487626	0					
ANR	3487703	CallExpression	NSTR ( node )		3487626	0					
ANR	3487704	Callee	NSTR		3487626	0					
ANR	3487705	Identifier	NSTR		3487626	0					
ANR	3487706	ArgumentList	node		3487626	1					
ANR	3487707	Argument	node		3487626	0					
ANR	3487708	Identifier	node		3487626	0					
ANR	3487709	Identifier	s		3487626	1					
ANR	3487710	BreakStatement	break ;	1017:4:22779:22784	3487626	2	True				
ANR	3487711	Label	case NT_LIST :	1019:2:22789:22801	3487626	3	True				
ANR	3487712	Identifier	NT_LIST		3487626	0					
ANR	3487713	Label	case NT_ALT :	1020:2:22805:22816	3487626	4	True				
ANR	3487714	Identifier	NT_ALT		3487626	0					
ANR	3487715	ExpressionStatement	onig_node_free ( NCAR ( node ) )	1021:4:22822:22848	3487626	5	True				
ANR	3487716	CallExpression	onig_node_free ( NCAR ( node ) )		3487626	0					
ANR	3487717	Callee	onig_node_free		3487626	0					
ANR	3487718	Identifier	onig_node_free		3487626	0					
ANR	3487719	ArgumentList	NCAR ( node )		3487626	1					
ANR	3487720	Argument	NCAR ( node )		3487626	0					
ANR	3487721	CallExpression	NCAR ( node )		3487626	0					
ANR	3487722	Callee	NCAR		3487626	0					
ANR	3487723	Identifier	NCAR		3487626	0					
ANR	3487724	ArgumentList	node		3487626	1					
ANR	3487725	Argument	node		3487626	0					
ANR	3487726	Identifier	node		3487626	0					
ANR	3487727	CompoundStatement		17:6:301:329	3487626	6					
ANR	3487728	IdentifierDeclStatement	Node * next_node = NCDR ( node ) ;	1023:6:22862:22890	3487626	0	True				
ANR	3487729	IdentifierDecl	* next_node = NCDR ( node )		3487626	0					
ANR	3487730	IdentifierDeclType	Node *		3487626	0					
ANR	3487731	Identifier	next_node		3487626	1					
ANR	3487732	AssignmentExpression	* next_node = NCDR ( node )		3487626	2		=			
ANR	3487733	Identifier	next_node		3487626	0					
ANR	3487734	CallExpression	NCDR ( node )		3487626	1					
ANR	3487735	Callee	NCDR		3487626	0					
ANR	3487736	Identifier	NCDR		3487626	0					
ANR	3487737	ArgumentList	node		3487626	1					
ANR	3487738	Argument	node		3487626	0					
ANR	3487739	Identifier	node		3487626	0					
ANR	3487740	CompoundStatement		21:1:376:406	3487626	1					
ANR	3487741	IdentifierDeclStatement	FreeNode * n = ( FreeNode * ) node ;	1027:1:22937:22967	3487626	0	True				
ANR	3487742	IdentifierDecl	* n = ( FreeNode * ) node		3487626	0					
ANR	3487743	IdentifierDeclType	FreeNode *		3487626	0					
ANR	3487744	Identifier	n		3487626	1					
ANR	3487745	AssignmentExpression	* n = ( FreeNode * ) node		3487626	2		=			
ANR	3487746	Identifier	n		3487626	0					
ANR	3487747	CastExpression	( FreeNode * ) node		3487626	1					
ANR	3487748	CastTarget	FreeNode *		3487626	0					
ANR	3487749	Identifier	node		3487626	1					
ANR	3487750	ExpressionStatement	THREAD_ATOMIC_START	1029:8:22978:22997	3487626	1	True				
ANR	3487751	Identifier	THREAD_ATOMIC_START		3487626	0					
ANR	3487752	ExpressionStatement	n -> next = FreeNodeList	1030:1:23000:23022	3487626	2	True				
ANR	3487753	AssignmentExpression	n -> next = FreeNodeList		3487626	0		=			
ANR	3487754	PtrMemberAccess	n -> next		3487626	0					
ANR	3487755	Identifier	n		3487626	0					
ANR	3487756	Identifier	next		3487626	1					
ANR	3487757	Identifier	FreeNodeList		3487626	1					
ANR	3487758	ExpressionStatement	FreeNodeList = n	1031:1:23025:23041	3487626	3	True				
ANR	3487759	AssignmentExpression	FreeNodeList = n		3487626	0		=			
ANR	3487760	Identifier	FreeNodeList		3487626	0					
ANR	3487761	Identifier	n		3487626	1					
ANR	3487762	ExpressionStatement	THREAD_ATOMIC_END	1032:8:23051:23068	3487626	4	True				
ANR	3487763	Identifier	THREAD_ATOMIC_END		3487626	0					
ANR	3487764	ExpressionStatement	node = next_node	1037:6:23116:23132	3487626	2	True				
ANR	3487765	AssignmentExpression	node = next_node		3487626	0		=			
ANR	3487766	Identifier	node		3487626	0					
ANR	3487767	Identifier	next_node		3487626	1					
ANR	3487768	GotoStatement	goto start ;	1038:6:23140:23150	3487626	3	True				
ANR	3487769	Identifier	start		3487626	0					
ANR	3487770	BreakStatement	break ;	1040:4:23162:23167	3487626	7	True				
ANR	3487771	Label	case NT_CCLASS :	1042:2:23172:23186	3487626	8	True				
ANR	3487772	Identifier	NT_CCLASS		3487626	0					
ANR	3487773	CompoundStatement		38:6:639:669	3487626	9					
ANR	3487774	IdentifierDeclStatement	CClassNode * cc = NCCLASS ( node ) ;	1044:6:23200:23230	3487626	0	True				
ANR	3487775	IdentifierDecl	* cc = NCCLASS ( node )		3487626	0					
ANR	3487776	IdentifierDeclType	CClassNode *		3487626	0					
ANR	3487777	Identifier	cc		3487626	1					
ANR	3487778	AssignmentExpression	* cc = NCCLASS ( node )		3487626	2		=			
ANR	3487779	Identifier	cc		3487626	0					
ANR	3487780	CallExpression	NCCLASS ( node )		3487626	1					
ANR	3487781	Callee	NCCLASS		3487626	0					
ANR	3487782	Identifier	NCCLASS		3487626	0					
ANR	3487783	ArgumentList	node		3487626	1					
ANR	3487784	Argument	node		3487626	0					
ANR	3487785	Identifier	node		3487626	0					
ANR	3487786	IfStatement	if ( IS_NCCLASS_SHARE ( cc ) )		3487626	1					
ANR	3487787	Condition	IS_NCCLASS_SHARE ( cc )	1046:10:23243:23262	3487626	0	True				
ANR	3487788	CallExpression	IS_NCCLASS_SHARE ( cc )		3487626	0					
ANR	3487789	Callee	IS_NCCLASS_SHARE		3487626	0					
ANR	3487790	Identifier	IS_NCCLASS_SHARE		3487626	0					
ANR	3487791	ArgumentList	cc		3487626	1					
ANR	3487792	Argument	cc		3487626	0					
ANR	3487793	Identifier	cc		3487626	0					
ANR	3487794	ReturnStatement	return ;	1046:32:23265:23272	3487626	1	True				
ANR	3487795	IfStatement	if ( cc -> mbuf )		3487626	2					
ANR	3487796	Condition	cc -> mbuf	1047:10:23284:23291	3487626	0	True				
ANR	3487797	PtrMemberAccess	cc -> mbuf		3487626	0					
ANR	3487798	Identifier	cc		3487626	0					
ANR	3487799	Identifier	mbuf		3487626	1					
ANR	3487800	ExpressionStatement	bbuf_free ( cc -> mbuf )	1048:8:23302:23321	3487626	1	True				
ANR	3487801	CallExpression	bbuf_free ( cc -> mbuf )		3487626	0					
ANR	3487802	Callee	bbuf_free		3487626	0					
ANR	3487803	Identifier	bbuf_free		3487626	0					
ANR	3487804	ArgumentList	cc -> mbuf		3487626	1					
ANR	3487805	Argument	cc -> mbuf		3487626	0					
ANR	3487806	PtrMemberAccess	cc -> mbuf		3487626	0					
ANR	3487807	Identifier	cc		3487626	0					
ANR	3487808	Identifier	mbuf		3487626	1					
ANR	3487809	BreakStatement	break ;	1050:4:23333:23338	3487626	10	True				
ANR	3487810	Label	case NT_QTFR :	1052:2:23343:23355	3487626	11	True				
ANR	3487811	Identifier	NT_QTFR		3487626	0					
ANR	3487812	IfStatement	if ( NQTFR ( node ) -> target )		3487626	12					
ANR	3487813	Condition	NQTFR ( node ) -> target	1053:8:23365:23383	3487626	0	True				
ANR	3487814	PtrMemberAccess	NQTFR ( node ) -> target		3487626	0					
ANR	3487815	CallExpression	NQTFR ( node )		3487626	0					
ANR	3487816	Callee	NQTFR		3487626	0					
ANR	3487817	Identifier	NQTFR		3487626	0					
ANR	3487818	ArgumentList	node		3487626	1					
ANR	3487819	Argument	node		3487626	0					
ANR	3487820	Identifier	node		3487626	0					
ANR	3487821	Identifier	target		3487626	1					
ANR	3487822	ExpressionStatement	onig_node_free ( NQTFR ( node ) -> target )	1054:6:23392:23427	3487626	1	True				
ANR	3487823	CallExpression	onig_node_free ( NQTFR ( node ) -> target )		3487626	0					
ANR	3487824	Callee	onig_node_free		3487626	0					
ANR	3487825	Identifier	onig_node_free		3487626	0					
ANR	3487826	ArgumentList	NQTFR ( node ) -> target		3487626	1					
ANR	3487827	Argument	NQTFR ( node ) -> target		3487626	0					
ANR	3487828	PtrMemberAccess	NQTFR ( node ) -> target		3487626	0					
ANR	3487829	CallExpression	NQTFR ( node )		3487626	0					
ANR	3487830	Callee	NQTFR		3487626	0					
ANR	3487831	Identifier	NQTFR		3487626	0					
ANR	3487832	ArgumentList	node		3487626	1					
ANR	3487833	Argument	node		3487626	0					
ANR	3487834	Identifier	node		3487626	0					
ANR	3487835	Identifier	target		3487626	1					
ANR	3487836	BreakStatement	break ;	1055:4:23433:23438	3487626	13	True				
ANR	3487837	Label	case NT_ENCLOSE :	1057:2:23443:23458	3487626	14	True				
ANR	3487838	Identifier	NT_ENCLOSE		3487626	0					
ANR	3487839	IfStatement	if ( NENCLOSE ( node ) -> target )		3487626	15					
ANR	3487840	Condition	NENCLOSE ( node ) -> target	1058:8:23468:23489	3487626	0	True				
ANR	3487841	PtrMemberAccess	NENCLOSE ( node ) -> target		3487626	0					
ANR	3487842	CallExpression	NENCLOSE ( node )		3487626	0					
ANR	3487843	Callee	NENCLOSE		3487626	0					
ANR	3487844	Identifier	NENCLOSE		3487626	0					
ANR	3487845	ArgumentList	node		3487626	1					
ANR	3487846	Argument	node		3487626	0					
ANR	3487847	Identifier	node		3487626	0					
ANR	3487848	Identifier	target		3487626	1					
ANR	3487849	ExpressionStatement	onig_node_free ( NENCLOSE ( node ) -> target )	1059:6:23498:23536	3487626	1	True				
ANR	3487850	CallExpression	onig_node_free ( NENCLOSE ( node ) -> target )		3487626	0					
ANR	3487851	Callee	onig_node_free		3487626	0					
ANR	3487852	Identifier	onig_node_free		3487626	0					
ANR	3487853	ArgumentList	NENCLOSE ( node ) -> target		3487626	1					
ANR	3487854	Argument	NENCLOSE ( node ) -> target		3487626	0					
ANR	3487855	PtrMemberAccess	NENCLOSE ( node ) -> target		3487626	0					
ANR	3487856	CallExpression	NENCLOSE ( node )		3487626	0					
ANR	3487857	Callee	NENCLOSE		3487626	0					
ANR	3487858	Identifier	NENCLOSE		3487626	0					
ANR	3487859	ArgumentList	node		3487626	1					
ANR	3487860	Argument	node		3487626	0					
ANR	3487861	Identifier	node		3487626	0					
ANR	3487862	Identifier	target		3487626	1					
ANR	3487863	BreakStatement	break ;	1060:4:23542:23547	3487626	16	True				
ANR	3487864	Label	case NT_BREF :	1062:2:23552:23564	3487626	17	True				
ANR	3487865	Identifier	NT_BREF		3487626	0					
ANR	3487866	IfStatement	if ( IS_NOT_NULL ( NBREF ( node ) -> back_dynamic ) )		3487626	18					
ANR	3487867	Condition	IS_NOT_NULL ( NBREF ( node ) -> back_dynamic )	1063:8:23574:23611	3487626	0	True				
ANR	3487868	CallExpression	IS_NOT_NULL ( NBREF ( node ) -> back_dynamic )		3487626	0					
ANR	3487869	Callee	IS_NOT_NULL		3487626	0					
ANR	3487870	Identifier	IS_NOT_NULL		3487626	0					
ANR	3487871	ArgumentList	NBREF ( node ) -> back_dynamic		3487626	1					
ANR	3487872	Argument	NBREF ( node ) -> back_dynamic		3487626	0					
ANR	3487873	PtrMemberAccess	NBREF ( node ) -> back_dynamic		3487626	0					
ANR	3487874	CallExpression	NBREF ( node )		3487626	0					
ANR	3487875	Callee	NBREF		3487626	0					
ANR	3487876	Identifier	NBREF		3487626	0					
ANR	3487877	ArgumentList	node		3487626	1					
ANR	3487878	Argument	node		3487626	0					
ANR	3487879	Identifier	node		3487626	0					
ANR	3487880	Identifier	back_dynamic		3487626	1					
ANR	3487881	ExpressionStatement	xfree ( NBREF ( node ) -> back_dynamic )	1064:6:23620:23652	3487626	1	True				
ANR	3487882	CallExpression	xfree ( NBREF ( node ) -> back_dynamic )		3487626	0					
ANR	3487883	Callee	xfree		3487626	0					
ANR	3487884	Identifier	xfree		3487626	0					
ANR	3487885	ArgumentList	NBREF ( node ) -> back_dynamic		3487626	1					
ANR	3487886	Argument	NBREF ( node ) -> back_dynamic		3487626	0					
ANR	3487887	PtrMemberAccess	NBREF ( node ) -> back_dynamic		3487626	0					
ANR	3487888	CallExpression	NBREF ( node )		3487626	0					
ANR	3487889	Callee	NBREF		3487626	0					
ANR	3487890	Identifier	NBREF		3487626	0					
ANR	3487891	ArgumentList	node		3487626	1					
ANR	3487892	Argument	node		3487626	0					
ANR	3487893	Identifier	node		3487626	0					
ANR	3487894	Identifier	back_dynamic		3487626	1					
ANR	3487895	BreakStatement	break ;	1065:4:23658:23663	3487626	19	True				
ANR	3487896	Label	case NT_ANCHOR :	1067:2:23668:23682	3487626	20	True				
ANR	3487897	Identifier	NT_ANCHOR		3487626	0					
ANR	3487898	IfStatement	if ( NANCHOR ( node ) -> target )		3487626	21					
ANR	3487899	Condition	NANCHOR ( node ) -> target	1068:8:23692:23712	3487626	0	True				
ANR	3487900	PtrMemberAccess	NANCHOR ( node ) -> target		3487626	0					
ANR	3487901	CallExpression	NANCHOR ( node )		3487626	0					
ANR	3487902	Callee	NANCHOR		3487626	0					
ANR	3487903	Identifier	NANCHOR		3487626	0					
ANR	3487904	ArgumentList	node		3487626	1					
ANR	3487905	Argument	node		3487626	0					
ANR	3487906	Identifier	node		3487626	0					
ANR	3487907	Identifier	target		3487626	1					
ANR	3487908	ExpressionStatement	onig_node_free ( NANCHOR ( node ) -> target )	1069:6:23721:23758	3487626	1	True				
ANR	3487909	CallExpression	onig_node_free ( NANCHOR ( node ) -> target )		3487626	0					
ANR	3487910	Callee	onig_node_free		3487626	0					
ANR	3487911	Identifier	onig_node_free		3487626	0					
ANR	3487912	ArgumentList	NANCHOR ( node ) -> target		3487626	1					
ANR	3487913	Argument	NANCHOR ( node ) -> target		3487626	0					
ANR	3487914	PtrMemberAccess	NANCHOR ( node ) -> target		3487626	0					
ANR	3487915	CallExpression	NANCHOR ( node )		3487626	0					
ANR	3487916	Callee	NANCHOR		3487626	0					
ANR	3487917	Identifier	NANCHOR		3487626	0					
ANR	3487918	ArgumentList	node		3487626	1					
ANR	3487919	Argument	node		3487626	0					
ANR	3487920	Identifier	node		3487626	0					
ANR	3487921	Identifier	target		3487626	1					
ANR	3487922	BreakStatement	break ;	1070:4:23764:23769	3487626	22	True				
ANR	3487923	CompoundStatement		69:4:1258:1288	3487626	3					
ANR	3487924	IdentifierDeclStatement	FreeNode * n = ( FreeNode * ) node ;	1075:4:23819:23849	3487626	0	True				
ANR	3487925	IdentifierDecl	* n = ( FreeNode * ) node		3487626	0					
ANR	3487926	IdentifierDeclType	FreeNode *		3487626	0					
ANR	3487927	Identifier	n		3487626	1					
ANR	3487928	AssignmentExpression	* n = ( FreeNode * ) node		3487626	2		=			
ANR	3487929	Identifier	n		3487626	0					
ANR	3487930	CastExpression	( FreeNode * ) node		3487626	1					
ANR	3487931	CastTarget	FreeNode *		3487626	0					
ANR	3487932	Identifier	node		3487626	1					
ANR	3487933	ExpressionStatement	THREAD_ATOMIC_START	1077:4:23856:23875	3487626	1	True				
ANR	3487934	Identifier	THREAD_ATOMIC_START		3487626	0					
ANR	3487935	ExpressionStatement	n -> next = FreeNodeList	1078:4:23881:23903	3487626	2	True				
ANR	3487936	AssignmentExpression	n -> next = FreeNodeList		3487626	0		=			
ANR	3487937	PtrMemberAccess	n -> next		3487626	0					
ANR	3487938	Identifier	n		3487626	0					
ANR	3487939	Identifier	next		3487626	1					
ANR	3487940	Identifier	FreeNodeList		3487626	1					
ANR	3487941	ExpressionStatement	FreeNodeList = n	1079:4:23909:23925	3487626	3	True				
ANR	3487942	AssignmentExpression	FreeNodeList = n		3487626	0		=			
ANR	3487943	Identifier	FreeNodeList		3487626	0					
ANR	3487944	Identifier	n		3487626	1					
ANR	3487945	ExpressionStatement	THREAD_ATOMIC_END	1080:4:23931:23948	3487626	4	True				
ANR	3487946	Identifier	THREAD_ATOMIC_END		3487626	0					
ANR	3487947	ReturnType	extern void		3487626	1					
ANR	3487948	Identifier	onig_node_free		3487626	2					
ANR	3487949	ParameterList	Node * node		3487626	3					
ANR	3487950	Parameter	Node * node	1006:15:22548:22557	3487626	0	True				
ANR	3487951	ParameterType	Node *		3487626	0					
ANR	3487952	Identifier	node		3487626	1					
ANR	3487953	CFGEntryNode	ENTRY		3487626		True				
ANR	3487954	CFGExitNode	EXIT		3487626		True				
ANR	3487955	Symbol	NQTFR ( node ) -> target		3487626						
ANR	3487956	Symbol	IS_NOT_NULL		3487626						
ANR	3487957	Symbol	NCAR		3487626						
ANR	3487958	Symbol	NBREF ( node ) -> back_dynamic		3487626						
ANR	3487959	Symbol	* NBREF		3487626						
ANR	3487960	Symbol	next_node		3487626						
ANR	3487961	Symbol	* cc		3487626						
ANR	3487962	Symbol	* NENCLOSE		3487626						
ANR	3487963	Symbol	FreeNodeList		3487626						
ANR	3487964	Symbol	cc -> mbuf		3487626						
ANR	3487965	Symbol	NQTFR		3487626						
ANR	3487966	Symbol	NCCLASS		3487626						
ANR	3487967	Symbol	IS_NULL		3487626						
ANR	3487968	Symbol	* NQTFR		3487626						
ANR	3487969	Symbol	NBREF		3487626						
ANR	3487970	Symbol	NENCLOSE		3487626						
ANR	3487971	Symbol	* NANCHOR		3487626						
ANR	3487972	Symbol	n -> next		3487626						
ANR	3487973	Symbol	NSTR ( node ) -> capa		3487626						
ANR	3487974	Symbol	IS_NCCLASS_SHARE		3487626						
ANR	3487975	Symbol	cc		3487626						
ANR	3487976	Symbol	NSTR		3487626						
ANR	3487977	Symbol	NCDR		3487626						
ANR	3487978	Symbol	NANCHOR ( node ) -> target		3487626						
ANR	3487979	Symbol	* NSTR		3487626						
ANR	3487980	Symbol	n		3487626						
ANR	3487981	Symbol	NENCLOSE ( node ) -> target		3487626						
ANR	3487982	Symbol	node		3487626						
ANR	3487983	Symbol	NSTR ( node ) -> s		3487626						
ANR	3487984	Symbol	* n		3487626						
ANR	3487985	Symbol	NANCHOR		3487626						
ANR	3487986	Symbol	NTYPE		3487626						
ANR	3487987	Symbol	NSTR ( node ) -> buf		3487626						
ANR	3487988	Function	onig_free_node_list	1088:0:24020:24260							
ANR	3487989	FunctionDef	onig_free_node_list ()		3487988	0					
ANR	3487990	CompoundStatement		1090:0:24057:24260	3487988	0					
ANR	3487991	IdentifierDeclStatement	FreeNode * n ;	1091:2:24061:24072	3487988	0	True				
ANR	3487992	IdentifierDecl	* n		3487988	0					
ANR	3487993	IdentifierDeclType	FreeNode *		3487988	0					
ANR	3487994	Identifier	n		3487988	1					
ANR	3487995	WhileStatement	while ( IS_NOT_NULL ( FreeNodeList ) )		3487988	1					
ANR	3487996	Condition	IS_NOT_NULL ( FreeNodeList )	1094:9:24113:24137	3487988	0	True				
ANR	3487997	CallExpression	IS_NOT_NULL ( FreeNodeList )		3487988	0					
ANR	3487998	Callee	IS_NOT_NULL		3487988	0					
ANR	3487999	Identifier	IS_NOT_NULL		3487988	0					
ANR	3488000	ArgumentList	FreeNodeList		3487988	1					
ANR	3488001	Argument	FreeNodeList		3487988	0					
ANR	3488002	Identifier	FreeNodeList		3487988	0					
ANR	3488003	CompoundStatement		5:36:82:82	3487988	1					
ANR	3488004	ExpressionStatement	n = FreeNodeList	1095:4:24146:24162	3487988	0	True				
ANR	3488005	AssignmentExpression	n = FreeNodeList		3487988	0		=			
ANR	3488006	Identifier	n		3487988	0					
ANR	3488007	Identifier	FreeNodeList		3487988	1					
ANR	3488008	ExpressionStatement	FreeNodeList = FreeNodeList -> next	1096:4:24168:24201	3487988	1	True				
ANR	3488009	AssignmentExpression	FreeNodeList = FreeNodeList -> next		3487988	0		=			
ANR	3488010	Identifier	FreeNodeList		3487988	0					
ANR	3488011	PtrMemberAccess	FreeNodeList -> next		3487988	1					
ANR	3488012	Identifier	FreeNodeList		3487988	0					
ANR	3488013	Identifier	next		3487988	1					
ANR	3488014	ExpressionStatement	xfree ( n )	1097:4:24207:24215	3487988	2	True				
ANR	3488015	CallExpression	xfree ( n )		3487988	0					
ANR	3488016	Callee	xfree		3487988	0					
ANR	3488017	Identifier	xfree		3487988	0					
ANR	3488018	ArgumentList	n		3487988	1					
ANR	3488019	Argument	n		3487988	0					
ANR	3488020	Identifier	n		3487988	0					
ANR	3488021	ReturnStatement	return 0 ;	1100:2:24250:24258	3487988	2	True				
ANR	3488022	PrimaryExpression	0		3487988	0					
ANR	3488023	ReturnType	extern int		3487988	1					
ANR	3488024	Identifier	onig_free_node_list		3487988	2					
ANR	3488025	ParameterList			3487988	3					
ANR	3488026	CFGEntryNode	ENTRY		3487988		True				
ANR	3488027	CFGExitNode	EXIT		3487988		True				
ANR	3488028	Symbol	IS_NOT_NULL		3487988						
ANR	3488029	Symbol	FreeNodeList		3487988						
ANR	3488030	Symbol	FreeNodeList -> next		3487988						
ANR	3488031	Symbol	* FreeNodeList		3487988						
ANR	3488032	Symbol	n		3487988						
ANR	3488033	Function	node_new	1104:0:24270:24648							
ANR	3488034	FunctionDef	node_new ()		3488033	0					
ANR	3488035	CompoundStatement		1106:0:24298:24648	3488033	0					
ANR	3488036	IdentifierDeclStatement	Node * node ;	1107:2:24302:24312	3488033	0	True				
ANR	3488037	IdentifierDecl	* node		3488033	0					
ANR	3488038	IdentifierDeclType	Node *		3488033	0					
ANR	3488039	Identifier	node		3488033	1					
ANR	3488040	ExpressionStatement	THREAD_ATOMIC_START	1110:2:24352:24371	3488033	1	True				
ANR	3488041	Identifier	THREAD_ATOMIC_START		3488033	0					
ANR	3488042	IfStatement	if ( IS_NOT_NULL ( FreeNodeList ) )		3488033	2					
ANR	3488043	Condition	IS_NOT_NULL ( FreeNodeList )	1111:6:24379:24403	3488033	0	True				
ANR	3488044	CallExpression	IS_NOT_NULL ( FreeNodeList )		3488033	0					
ANR	3488045	Callee	IS_NOT_NULL		3488033	0					
ANR	3488046	Identifier	IS_NOT_NULL		3488033	0					
ANR	3488047	ArgumentList	FreeNodeList		3488033	1					
ANR	3488048	Argument	FreeNodeList		3488033	0					
ANR	3488049	Identifier	FreeNodeList		3488033	0					
ANR	3488050	CompoundStatement		6:33:107:107	3488033	1					
ANR	3488051	ExpressionStatement	node = ( Node * ) FreeNodeList	1112:4:24412:24439	3488033	0	True				
ANR	3488052	AssignmentExpression	node = ( Node * ) FreeNodeList		3488033	0		=			
ANR	3488053	Identifier	node		3488033	0					
ANR	3488054	CastExpression	( Node * ) FreeNodeList		3488033	1					
ANR	3488055	CastTarget	Node *		3488033	0					
ANR	3488056	Identifier	FreeNodeList		3488033	1					
ANR	3488057	ExpressionStatement	FreeNodeList = FreeNodeList -> next	1113:4:24445:24478	3488033	1	True				
ANR	3488058	AssignmentExpression	FreeNodeList = FreeNodeList -> next		3488033	0		=			
ANR	3488059	Identifier	FreeNodeList		3488033	0					
ANR	3488060	PtrMemberAccess	FreeNodeList -> next		3488033	1					
ANR	3488061	Identifier	FreeNodeList		3488033	0					
ANR	3488062	Identifier	next		3488033	1					
ANR	3488063	ExpressionStatement	THREAD_ATOMIC_END	1114:4:24484:24501	3488033	2	True				
ANR	3488064	Identifier	THREAD_ATOMIC_END		3488033	0					
ANR	3488065	ReturnStatement	return node ;	1115:4:24507:24518	3488033	3	True				
ANR	3488066	Identifier	node		3488033	0					
ANR	3488067	ExpressionStatement	THREAD_ATOMIC_END	1117:2:24526:24543	3488033	3	True				
ANR	3488068	Identifier	THREAD_ATOMIC_END		3488033	0					
ANR	3488069	ExpressionStatement	node = ( Node * ) xmalloc ( sizeof ( Node ) )	1120:2:24555:24591	3488033	4	True				
ANR	3488070	AssignmentExpression	node = ( Node * ) xmalloc ( sizeof ( Node ) )		3488033	0		=			
ANR	3488071	Identifier	node		3488033	0					
ANR	3488072	CastExpression	( Node * ) xmalloc ( sizeof ( Node ) )		3488033	1					
ANR	3488073	CastTarget	Node *		3488033	0					
ANR	3488074	CallExpression	xmalloc ( sizeof ( Node ) )		3488033	1					
ANR	3488075	Callee	xmalloc		3488033	0					
ANR	3488076	Identifier	xmalloc		3488033	0					
ANR	3488077	ArgumentList	sizeof ( Node )		3488033	1					
ANR	3488078	Argument	sizeof ( Node )		3488033	0					
ANR	3488079	SizeofExpression	sizeof ( Node )		3488033	0					
ANR	3488080	Sizeof	sizeof		3488033	0					
ANR	3488081	SizeofOperand	Node		3488033	1					
ANR	3488082	ReturnStatement	return node ;	1122:2:24635:24646	3488033	5	True				
ANR	3488083	Identifier	node		3488033	0					
ANR	3488084	ReturnType	static Node *		3488033	1					
ANR	3488085	Identifier	node_new		3488033	2					
ANR	3488086	ParameterList			3488033	3					
ANR	3488087	CFGEntryNode	ENTRY		3488033		True				
ANR	3488088	CFGExitNode	EXIT		3488033		True				
ANR	3488089	Symbol	node		3488033						
ANR	3488090	Symbol	IS_NOT_NULL		3488033						
ANR	3488091	Symbol	xmalloc		3488033						
ANR	3488092	Symbol	FreeNodeList		3488033						
ANR	3488093	Symbol	FreeNodeList -> next		3488033						
ANR	3488094	Symbol	* FreeNodeList		3488033						
ANR	3488095	Function	initialize_cclass	1126:0:24652:24789							
ANR	3488096	FunctionDef	initialize_cclass (CClassNode * cc)		3488095	0					
ANR	3488097	CompoundStatement		1128:0:24698:24789	3488095	0					
ANR	3488098	ExpressionStatement	BITSET_CLEAR ( cc -> bs )	1129:2:24702:24722	3488095	0	True				
ANR	3488099	CallExpression	BITSET_CLEAR ( cc -> bs )		3488095	0					
ANR	3488100	Callee	BITSET_CLEAR		3488095	0					
ANR	3488101	Identifier	BITSET_CLEAR		3488095	0					
ANR	3488102	ArgumentList	cc -> bs		3488095	1					
ANR	3488103	Argument	cc -> bs		3488095	0					
ANR	3488104	PtrMemberAccess	cc -> bs		3488095	0					
ANR	3488105	Identifier	cc		3488095	0					
ANR	3488106	Identifier	bs		3488095	1					
ANR	3488107	ExpressionStatement	cc -> flags = 0	1131:2:24754:24767	3488095	1	True				
ANR	3488108	AssignmentExpression	cc -> flags = 0		3488095	0		=			
ANR	3488109	PtrMemberAccess	cc -> flags		3488095	0					
ANR	3488110	Identifier	cc		3488095	0					
ANR	3488111	Identifier	flags		3488095	1					
ANR	3488112	PrimaryExpression	0		3488095	1					
ANR	3488113	ExpressionStatement	cc -> mbuf = NULL	1132:2:24771:24787	3488095	2	True				
ANR	3488114	AssignmentExpression	cc -> mbuf = NULL		3488095	0		=			
ANR	3488115	PtrMemberAccess	cc -> mbuf		3488095	0					
ANR	3488116	Identifier	cc		3488095	0					
ANR	3488117	Identifier	mbuf		3488095	1					
ANR	3488118	Identifier	NULL		3488095	1					
ANR	3488119	ReturnType	static void		3488095	1					
ANR	3488120	Identifier	initialize_cclass		3488095	2					
ANR	3488121	ParameterList	CClassNode * cc		3488095	3					
ANR	3488122	Parameter	CClassNode * cc	1127:18:24682:24695	3488095	0	True				
ANR	3488123	ParameterType	CClassNode *		3488095	0					
ANR	3488124	Identifier	cc		3488095	1					
ANR	3488125	CFGEntryNode	ENTRY		3488095		True				
ANR	3488126	CFGExitNode	EXIT		3488095		True				
ANR	3488127	Symbol	cc		3488095						
ANR	3488128	Symbol	NULL		3488095						
ANR	3488129	Symbol	* cc		3488095						
ANR	3488130	Symbol	cc -> mbuf		3488095						
ANR	3488131	Symbol	cc -> bs		3488095						
ANR	3488132	Symbol	cc -> flags		3488095						
ANR	3488133	Function	node_new_cclass	1135:0:24792:24965							
ANR	3488134	FunctionDef	node_new_cclass ()		3488133	0					
ANR	3488135	CompoundStatement		1137:0:24827:24965	3488133	0					
ANR	3488136	IdentifierDeclStatement	Node * node = node_new ( ) ;	1138:2:24831:24854	3488133	0	True				
ANR	3488137	IdentifierDecl	* node = node_new ( )		3488133	0					
ANR	3488138	IdentifierDeclType	Node *		3488133	0					
ANR	3488139	Identifier	node		3488133	1					
ANR	3488140	AssignmentExpression	* node = node_new ( )		3488133	2		=			
ANR	3488141	Identifier	node		3488133	0					
ANR	3488142	CallExpression	node_new ( )		3488133	1					
ANR	3488143	Callee	node_new		3488133	0					
ANR	3488144	Identifier	node_new		3488133	0					
ANR	3488145	ArgumentList			3488133	1					
ANR	3488146	ExpressionStatement	CHECK_NULL_RETURN ( node )	1139:2:24858:24881	3488133	1	True				
ANR	3488147	CallExpression	CHECK_NULL_RETURN ( node )		3488133	0					
ANR	3488148	Callee	CHECK_NULL_RETURN		3488133	0					
ANR	3488149	Identifier	CHECK_NULL_RETURN		3488133	0					
ANR	3488150	ArgumentList	node		3488133	1					
ANR	3488151	Argument	node		3488133	0					
ANR	3488152	Identifier	node		3488133	0					
ANR	3488153	ExpressionStatement	"SET_NTYPE ( node , NT_CCLASS )"	1141:2:24886:24912	3488133	2	True				
ANR	3488154	CallExpression	"SET_NTYPE ( node , NT_CCLASS )"		3488133	0					
ANR	3488155	Callee	SET_NTYPE		3488133	0					
ANR	3488156	Identifier	SET_NTYPE		3488133	0					
ANR	3488157	ArgumentList	node		3488133	1					
ANR	3488158	Argument	node		3488133	0					
ANR	3488159	Identifier	node		3488133	0					
ANR	3488160	Argument	NT_CCLASS		3488133	1					
ANR	3488161	Identifier	NT_CCLASS		3488133	0					
ANR	3488162	ExpressionStatement	initialize_cclass ( NCCLASS ( node ) )	1142:2:24916:24948	3488133	3	True				
ANR	3488163	CallExpression	initialize_cclass ( NCCLASS ( node ) )		3488133	0					
ANR	3488164	Callee	initialize_cclass		3488133	0					
ANR	3488165	Identifier	initialize_cclass		3488133	0					
ANR	3488166	ArgumentList	NCCLASS ( node )		3488133	1					
ANR	3488167	Argument	NCCLASS ( node )		3488133	0					
ANR	3488168	CallExpression	NCCLASS ( node )		3488133	0					
ANR	3488169	Callee	NCCLASS		3488133	0					
ANR	3488170	Identifier	NCCLASS		3488133	0					
ANR	3488171	ArgumentList	node		3488133	1					
ANR	3488172	Argument	node		3488133	0					
ANR	3488173	Identifier	node		3488133	0					
ANR	3488174	ReturnStatement	return node ;	1143:2:24952:24963	3488133	4	True				
ANR	3488175	Identifier	node		3488133	0					
ANR	3488176	ReturnType	static Node *		3488133	1					
ANR	3488177	Identifier	node_new_cclass		3488133	2					
ANR	3488178	ParameterList			3488133	3					
ANR	3488179	CFGEntryNode	ENTRY		3488133		True				
ANR	3488180	CFGExitNode	EXIT		3488133		True				
ANR	3488181	Symbol	node		3488133						
ANR	3488182	Symbol	node_new		3488133						
ANR	3488183	Symbol	NT_CCLASS		3488133						
ANR	3488184	Symbol	NCCLASS		3488133						
ANR	3488185	Function	node_new_cclass_by_codepoint_range	1146:0:24968:25981							
ANR	3488186	FunctionDef	"node_new_cclass_by_codepoint_range (int not , OnigCodePoint sb_out , const OnigCodePoint ranges [ ])"		3488185	0					
ANR	3488187	CompoundStatement		1149:0:25084:25981	3488185	0					
ANR	3488188	IdentifierDeclStatement	"int n , i ;"	1150:2:25088:25096	3488185	0	True				
ANR	3488189	IdentifierDecl	n		3488185	0					
ANR	3488190	IdentifierDeclType	int		3488185	0					
ANR	3488191	Identifier	n		3488185	1					
ANR	3488192	IdentifierDecl	i		3488185	1					
ANR	3488193	IdentifierDeclType	int		3488185	0					
ANR	3488194	Identifier	i		3488185	1					
ANR	3488195	IdentifierDeclStatement	CClassNode * cc ;	1151:2:25100:25114	3488185	1	True				
ANR	3488196	IdentifierDecl	* cc		3488185	0					
ANR	3488197	IdentifierDeclType	CClassNode *		3488185	0					
ANR	3488198	Identifier	cc		3488185	1					
ANR	3488199	IdentifierDeclStatement	OnigCodePoint j ;	1152:2:25118:25133	3488185	2	True				
ANR	3488200	IdentifierDecl	j		3488185	0					
ANR	3488201	IdentifierDeclType	OnigCodePoint		3488185	0					
ANR	3488202	Identifier	j		3488185	1					
ANR	3488203	IdentifierDeclStatement	Node * node = node_new_cclass ( ) ;	1154:2:25138:25168	3488185	3	True				
ANR	3488204	IdentifierDecl	* node = node_new_cclass ( )		3488185	0					
ANR	3488205	IdentifierDeclType	Node *		3488185	0					
ANR	3488206	Identifier	node		3488185	1					
ANR	3488207	AssignmentExpression	* node = node_new_cclass ( )		3488185	2		=			
ANR	3488208	Identifier	node		3488185	0					
ANR	3488209	CallExpression	node_new_cclass ( )		3488185	1					
ANR	3488210	Callee	node_new_cclass		3488185	0					
ANR	3488211	Identifier	node_new_cclass		3488185	0					
ANR	3488212	ArgumentList			3488185	1					
ANR	3488213	ExpressionStatement	CHECK_NULL_RETURN ( node )	1155:2:25172:25195	3488185	4	True				
ANR	3488214	CallExpression	CHECK_NULL_RETURN ( node )		3488185	0					
ANR	3488215	Callee	CHECK_NULL_RETURN		3488185	0					
ANR	3488216	Identifier	CHECK_NULL_RETURN		3488185	0					
ANR	3488217	ArgumentList	node		3488185	1					
ANR	3488218	Argument	node		3488185	0					
ANR	3488219	Identifier	node		3488185	0					
ANR	3488220	ExpressionStatement	cc = NCCLASS ( node )	1157:2:25200:25218	3488185	5	True				
ANR	3488221	AssignmentExpression	cc = NCCLASS ( node )		3488185	0		=			
ANR	3488222	Identifier	cc		3488185	0					
ANR	3488223	CallExpression	NCCLASS ( node )		3488185	1					
ANR	3488224	Callee	NCCLASS		3488185	0					
ANR	3488225	Identifier	NCCLASS		3488185	0					
ANR	3488226	ArgumentList	node		3488185	1					
ANR	3488227	Argument	node		3488185	0					
ANR	3488228	Identifier	node		3488185	0					
ANR	3488229	IfStatement	if ( not != 0 )		3488185	6					
ANR	3488230	Condition	not != 0	1158:6:25226:25233	3488185	0	True				
ANR	3488231	EqualityExpression	not != 0		3488185	0		!=			
ANR	3488232	Identifier	not		3488185	0					
ANR	3488233	PrimaryExpression	0		3488185	1					
ANR	3488234	ExpressionStatement	NCCLASS_SET_NOT ( cc )	1158:16:25236:25255	3488185	1	True				
ANR	3488235	CallExpression	NCCLASS_SET_NOT ( cc )		3488185	0					
ANR	3488236	Callee	NCCLASS_SET_NOT		3488185	0					
ANR	3488237	Identifier	NCCLASS_SET_NOT		3488185	0					
ANR	3488238	ArgumentList	cc		3488185	1					
ANR	3488239	Argument	cc		3488185	0					
ANR	3488240	Identifier	cc		3488185	0					
ANR	3488241	ExpressionStatement	BITSET_CLEAR ( cc -> bs )	1160:2:25260:25280	3488185	7	True				
ANR	3488242	CallExpression	BITSET_CLEAR ( cc -> bs )		3488185	0					
ANR	3488243	Callee	BITSET_CLEAR		3488185	0					
ANR	3488244	Identifier	BITSET_CLEAR		3488185	0					
ANR	3488245	ArgumentList	cc -> bs		3488185	1					
ANR	3488246	Argument	cc -> bs		3488185	0					
ANR	3488247	PtrMemberAccess	cc -> bs		3488185	0					
ANR	3488248	Identifier	cc		3488185	0					
ANR	3488249	Identifier	bs		3488185	1					
ANR	3488250	IfStatement	if ( sb_out > 0 && IS_NOT_NULL ( ranges ) )		3488185	8					
ANR	3488251	Condition	sb_out > 0 && IS_NOT_NULL ( ranges )	1161:6:25288:25320	3488185	0	True				
ANR	3488252	AndExpression	sb_out > 0 && IS_NOT_NULL ( ranges )		3488185	0		&&			
ANR	3488253	RelationalExpression	sb_out > 0		3488185	0		>			
ANR	3488254	Identifier	sb_out		3488185	0					
ANR	3488255	PrimaryExpression	0		3488185	1					
ANR	3488256	CallExpression	IS_NOT_NULL ( ranges )		3488185	1					
ANR	3488257	Callee	IS_NOT_NULL		3488185	0					
ANR	3488258	Identifier	IS_NOT_NULL		3488185	0					
ANR	3488259	ArgumentList	ranges		3488185	1					
ANR	3488260	Argument	ranges		3488185	0					
ANR	3488261	Identifier	ranges		3488185	0					
ANR	3488262	CompoundStatement		13:41:238:238	3488185	1					
ANR	3488263	ExpressionStatement	n = ONIGENC_CODE_RANGE_NUM ( ranges )	1162:4:25329:25363	3488185	0	True				
ANR	3488264	AssignmentExpression	n = ONIGENC_CODE_RANGE_NUM ( ranges )		3488185	0		=			
ANR	3488265	Identifier	n		3488185	0					
ANR	3488266	CallExpression	ONIGENC_CODE_RANGE_NUM ( ranges )		3488185	1					
ANR	3488267	Callee	ONIGENC_CODE_RANGE_NUM		3488185	0					
ANR	3488268	Identifier	ONIGENC_CODE_RANGE_NUM		3488185	0					
ANR	3488269	ArgumentList	ranges		3488185	1					
ANR	3488270	Argument	ranges		3488185	0					
ANR	3488271	Identifier	ranges		3488185	0					
ANR	3488272	ForStatement	for ( i = 0 ; i < n ; i ++ )		3488185	1					
ANR	3488273	ForInit	i = 0 ;	1163:9:25374:25379	3488185	0	True				
ANR	3488274	AssignmentExpression	i = 0		3488185	0		=			
ANR	3488275	Identifier	i		3488185	0					
ANR	3488276	PrimaryExpression	0		3488185	1					
ANR	3488277	Condition	i < n	1163:16:25381:25385	3488185	1	True				
ANR	3488278	RelationalExpression	i < n		3488185	0		<			
ANR	3488279	Identifier	i		3488185	0					
ANR	3488280	Identifier	n		3488185	1					
ANR	3488281	PostIncDecOperationExpression	i ++	1163:23:25388:25390	3488185	2	True				
ANR	3488282	Identifier	i		3488185	0					
ANR	3488283	IncDec	++		3488185	1					
ANR	3488284	CompoundStatement		15:28:308:308	3488185	3					
ANR	3488285	ForStatement	"for ( j = ONIGENC_CODE_RANGE_FROM ( ranges , i ) ; j <= ( OnigCodePoint ) ONIGENC_CODE_RANGE_TO ( ranges , i ) ; j ++ )"		3488185	0					
ANR	3488286	ForInit	"j = ONIGENC_CODE_RANGE_FROM ( ranges , i ) ;"	1164:11:25406:25445	3488185	0	True				
ANR	3488287	AssignmentExpression	"j = ONIGENC_CODE_RANGE_FROM ( ranges , i )"		3488185	0		=			
ANR	3488288	Identifier	j		3488185	0					
ANR	3488289	CallExpression	"ONIGENC_CODE_RANGE_FROM ( ranges , i )"		3488185	1					
ANR	3488290	Callee	ONIGENC_CODE_RANGE_FROM		3488185	0					
ANR	3488291	Identifier	ONIGENC_CODE_RANGE_FROM		3488185	0					
ANR	3488292	ArgumentList	ranges		3488185	1					
ANR	3488293	Argument	ranges		3488185	0					
ANR	3488294	Identifier	ranges		3488185	0					
ANR	3488295	Argument	i		3488185	1					
ANR	3488296	Identifier	i		3488185	0					
ANR	3488297	Condition	"j <= ( OnigCodePoint ) ONIGENC_CODE_RANGE_TO ( ranges , i )"	1165:11:25458:25510	3488185	1	True				
ANR	3488298	RelationalExpression	"j <= ( OnigCodePoint ) ONIGENC_CODE_RANGE_TO ( ranges , i )"		3488185	0		<=			
ANR	3488299	Identifier	j		3488185	0					
ANR	3488300	CastExpression	"( OnigCodePoint ) ONIGENC_CODE_RANGE_TO ( ranges , i )"		3488185	1					
ANR	3488301	CastTarget	OnigCodePoint		3488185	0					
ANR	3488302	CallExpression	"ONIGENC_CODE_RANGE_TO ( ranges , i )"		3488185	1					
ANR	3488303	Callee	ONIGENC_CODE_RANGE_TO		3488185	0					
ANR	3488304	Identifier	ONIGENC_CODE_RANGE_TO		3488185	0					
ANR	3488305	ArgumentList	ranges		3488185	1					
ANR	3488306	Argument	ranges		3488185	0					
ANR	3488307	Identifier	ranges		3488185	0					
ANR	3488308	Argument	i		3488185	1					
ANR	3488309	Identifier	i		3488185	0					
ANR	3488310	PostIncDecOperationExpression	j ++	1165:66:25513:25515	3488185	2	True				
ANR	3488311	Identifier	j		3488185	0					
ANR	3488312	IncDec	++		3488185	1					
ANR	3488313	CompoundStatement		17:71:433:433	3488185	3					
ANR	3488314	IfStatement	if ( j >= sb_out )		3488185	0					
ANR	3488315	Condition	j >= sb_out	1166:5:25525:25535	3488185	0	True				
ANR	3488316	RelationalExpression	j >= sb_out		3488185	0		>=			
ANR	3488317	Identifier	j		3488185	0					
ANR	3488318	Identifier	sb_out		3488185	1					
ANR	3488319	GotoStatement	goto sb_end ;	1166:18:25538:25549	3488185	1	True				
ANR	3488320	Identifier	sb_end		3488185	0					
ANR	3488321	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , j )"	1168:8:25560:25585	3488185	1	True				
ANR	3488322	CallExpression	"BITSET_SET_BIT ( cc -> bs , j )"		3488185	0					
ANR	3488323	Callee	BITSET_SET_BIT		3488185	0					
ANR	3488324	Identifier	BITSET_SET_BIT		3488185	0					
ANR	3488325	ArgumentList	cc -> bs		3488185	1					
ANR	3488326	Argument	cc -> bs		3488185	0					
ANR	3488327	PtrMemberAccess	cc -> bs		3488185	0					
ANR	3488328	Identifier	cc		3488185	0					
ANR	3488329	Identifier	bs		3488185	1					
ANR	3488330	Argument	j		3488185	1					
ANR	3488331	Identifier	j		3488185	0					
ANR	3488332	Label	sb_end :	1173:1:25607:25613	3488185	9	True				
ANR	3488333	Identifier	sb_end		3488185	0					
ANR	3488334	IfStatement	if ( IS_NULL ( ranges ) )		3488185	10					
ANR	3488335	Condition	IS_NULL ( ranges )	1174:6:25621:25635	3488185	0	True				
ANR	3488336	CallExpression	IS_NULL ( ranges )		3488185	0					
ANR	3488337	Callee	IS_NULL		3488185	0					
ANR	3488338	Identifier	IS_NULL		3488185	0					
ANR	3488339	ArgumentList	ranges		3488185	1					
ANR	3488340	Argument	ranges		3488185	0					
ANR	3488341	Identifier	ranges		3488185	0					
ANR	3488342	CompoundStatement		26:23:553:553	3488185	1					
ANR	3488343	Label	is_null :	1175:2:25642:25649	3488185	0	True				
ANR	3488344	Identifier	is_null		3488185	0					
ANR	3488345	ExpressionStatement	cc -> mbuf = NULL	1176:4:25655:25670	3488185	1	True				
ANR	3488346	AssignmentExpression	cc -> mbuf = NULL		3488185	0		=			
ANR	3488347	PtrMemberAccess	cc -> mbuf		3488185	0					
ANR	3488348	Identifier	cc		3488185	0					
ANR	3488349	Identifier	mbuf		3488185	1					
ANR	3488350	Identifier	NULL		3488185	1					
ANR	3488351	ElseStatement	else		3488185	0					
ANR	3488352	CompoundStatement		31:4:604:614	3488185	0					
ANR	3488353	IdentifierDeclStatement	BBuf * bbuf ;	1179:4:25689:25699	3488185	0	True				
ANR	3488354	IdentifierDecl	* bbuf		3488185	0					
ANR	3488355	IdentifierDeclType	BBuf *		3488185	0					
ANR	3488356	Identifier	bbuf		3488185	1					
ANR	3488357	ExpressionStatement	n = ONIGENC_CODE_RANGE_NUM ( ranges )	1181:4:25706:25740	3488185	1	True				
ANR	3488358	AssignmentExpression	n = ONIGENC_CODE_RANGE_NUM ( ranges )		3488185	0		=			
ANR	3488359	Identifier	n		3488185	0					
ANR	3488360	CallExpression	ONIGENC_CODE_RANGE_NUM ( ranges )		3488185	1					
ANR	3488361	Callee	ONIGENC_CODE_RANGE_NUM		3488185	0					
ANR	3488362	Identifier	ONIGENC_CODE_RANGE_NUM		3488185	0					
ANR	3488363	ArgumentList	ranges		3488185	1					
ANR	3488364	Argument	ranges		3488185	0					
ANR	3488365	Identifier	ranges		3488185	0					
ANR	3488366	IfStatement	if ( n == 0 )		3488185	2					
ANR	3488367	Condition	n == 0	1182:8:25750:25755	3488185	0	True				
ANR	3488368	EqualityExpression	n == 0		3488185	0		==			
ANR	3488369	Identifier	n		3488185	0					
ANR	3488370	PrimaryExpression	0		3488185	1					
ANR	3488371	GotoStatement	goto is_null ;	1182:16:25758:25770	3488185	1	True				
ANR	3488372	Identifier	is_null		3488185	0					
ANR	3488373	ExpressionStatement	bbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )	1184:4:25777:25813	3488185	3	True				
ANR	3488374	AssignmentExpression	bbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		3488185	0		=			
ANR	3488375	Identifier	bbuf		3488185	0					
ANR	3488376	CastExpression	( BBuf * ) xmalloc ( sizeof ( BBuf ) )		3488185	1					
ANR	3488377	CastTarget	BBuf *		3488185	0					
ANR	3488378	CallExpression	xmalloc ( sizeof ( BBuf ) )		3488185	1					
ANR	3488379	Callee	xmalloc		3488185	0					
ANR	3488380	Identifier	xmalloc		3488185	0					
ANR	3488381	ArgumentList	sizeof ( BBuf )		3488185	1					
ANR	3488382	Argument	sizeof ( BBuf )		3488185	0					
ANR	3488383	SizeofExpression	sizeof ( BBuf )		3488185	0					
ANR	3488384	Sizeof	sizeof		3488185	0					
ANR	3488385	SizeofOperand	BBuf		3488185	1					
ANR	3488386	ExpressionStatement	CHECK_NULL_RETURN ( bbuf )	1185:4:25819:25842	3488185	4	True				
ANR	3488387	CallExpression	CHECK_NULL_RETURN ( bbuf )		3488185	0					
ANR	3488388	Callee	CHECK_NULL_RETURN		3488185	0					
ANR	3488389	Identifier	CHECK_NULL_RETURN		3488185	0					
ANR	3488390	ArgumentList	bbuf		3488185	1					
ANR	3488391	Argument	bbuf		3488185	0					
ANR	3488392	Identifier	bbuf		3488185	0					
ANR	3488393	ExpressionStatement	bbuf -> alloc = n + 1	1186:4:25848:25867	3488185	5	True				
ANR	3488394	AssignmentExpression	bbuf -> alloc = n + 1		3488185	0		=			
ANR	3488395	PtrMemberAccess	bbuf -> alloc		3488185	0					
ANR	3488396	Identifier	bbuf		3488185	0					
ANR	3488397	Identifier	alloc		3488185	1					
ANR	3488398	AdditiveExpression	n + 1		3488185	1		+			
ANR	3488399	Identifier	n		3488185	0					
ANR	3488400	PrimaryExpression	1		3488185	1					
ANR	3488401	ExpressionStatement	bbuf -> used = n + 1	1187:4:25873:25892	3488185	6	True				
ANR	3488402	AssignmentExpression	bbuf -> used = n + 1		3488185	0		=			
ANR	3488403	PtrMemberAccess	bbuf -> used		3488185	0					
ANR	3488404	Identifier	bbuf		3488185	0					
ANR	3488405	Identifier	used		3488185	1					
ANR	3488406	AdditiveExpression	n + 1		3488185	1		+			
ANR	3488407	Identifier	n		3488185	0					
ANR	3488408	PrimaryExpression	1		3488185	1					
ANR	3488409	ExpressionStatement	bbuf -> p = ( UChar * ) ( ( void * ) ranges )	1188:4:25898:25937	3488185	7	True				
ANR	3488410	AssignmentExpression	bbuf -> p = ( UChar * ) ( ( void * ) ranges )		3488185	0		=			
ANR	3488411	PtrMemberAccess	bbuf -> p		3488185	0					
ANR	3488412	Identifier	bbuf		3488185	0					
ANR	3488413	Identifier	p		3488185	1					
ANR	3488414	CastExpression	( UChar * ) ( ( void * ) ranges )		3488185	1					
ANR	3488415	CastTarget	UChar *		3488185	0					
ANR	3488416	CastExpression	( void * ) ranges		3488185	1					
ANR	3488417	CastTarget	void *		3488185	0					
ANR	3488418	Identifier	ranges		3488185	1					
ANR	3488419	ExpressionStatement	cc -> mbuf = bbuf	1190:4:25944:25959	3488185	8	True				
ANR	3488420	AssignmentExpression	cc -> mbuf = bbuf		3488185	0		=			
ANR	3488421	PtrMemberAccess	cc -> mbuf		3488185	0					
ANR	3488422	Identifier	cc		3488185	0					
ANR	3488423	Identifier	mbuf		3488185	1					
ANR	3488424	Identifier	bbuf		3488185	1					
ANR	3488425	ReturnStatement	return node ;	1193:2:25968:25979	3488185	11	True				
ANR	3488426	Identifier	node		3488185	0					
ANR	3488427	ReturnType	static Node *		3488185	1					
ANR	3488428	Identifier	node_new_cclass_by_codepoint_range		3488185	2					
ANR	3488429	ParameterList	"int not , OnigCodePoint sb_out , const OnigCodePoint ranges [ ]"		3488185	3					
ANR	3488430	Parameter	int not	1147:35:25016:25022	3488185	0	True				
ANR	3488431	ParameterType	int		3488185	0					
ANR	3488432	Identifier	not		3488185	1					
ANR	3488433	Parameter	OnigCodePoint sb_out	1147:44:25025:25044	3488185	1	True				
ANR	3488434	ParameterType	OnigCodePoint		3488185	0					
ANR	3488435	Identifier	sb_out		3488185	1					
ANR	3488436	Parameter	const OnigCodePoint ranges [ ]	1148:7:25054:25081	3488185	2	True				
ANR	3488437	ParameterType	const OnigCodePoint [ ]		3488185	0					
ANR	3488438	Identifier	ranges		3488185	1					
ANR	3488439	CFGEntryNode	ENTRY		3488185		True				
ANR	3488440	CFGExitNode	EXIT		3488185		True				
ANR	3488441	Symbol	IS_NOT_NULL		3488185						
ANR	3488442	Symbol	ranges		3488185						
ANR	3488443	Symbol	ONIGENC_CODE_RANGE_TO		3488185						
ANR	3488444	Symbol	node_new_cclass		3488185						
ANR	3488445	Symbol	* cc		3488185						
ANR	3488446	Symbol	bbuf -> alloc		3488185						
ANR	3488447	Symbol	cc -> mbuf		3488185						
ANR	3488448	Symbol	NCCLASS		3488185						
ANR	3488449	Symbol	sb_out		3488185						
ANR	3488450	Symbol	not		3488185						
ANR	3488451	Symbol	IS_NULL		3488185						
ANR	3488452	Symbol	xmalloc		3488185						
ANR	3488453	Symbol	ONIGENC_CODE_RANGE_FROM		3488185						
ANR	3488454	Symbol	* bbuf		3488185						
ANR	3488455	Symbol	cc		3488185						
ANR	3488456	Symbol	NULL		3488185						
ANR	3488457	Symbol	i		3488185						
ANR	3488458	Symbol	j		3488185						
ANR	3488459	Symbol	n		3488185						
ANR	3488460	Symbol	cc -> bs		3488185						
ANR	3488461	Symbol	node		3488185						
ANR	3488462	Symbol	bbuf -> p		3488185						
ANR	3488463	Symbol	ONIGENC_CODE_RANGE_NUM		3488185						
ANR	3488464	Symbol	bbuf -> used		3488185						
ANR	3488465	Symbol	bbuf		3488185						
ANR	3488466	Function	node_new_ctype	1196:0:25984:26191							
ANR	3488467	FunctionDef	"node_new_ctype (int type , int not)"		3488466	0					
ANR	3488468	CompoundStatement		1198:0:26031:26191	3488466	0					
ANR	3488469	IdentifierDeclStatement	Node * node = node_new ( ) ;	1199:2:26035:26058	3488466	0	True				
ANR	3488470	IdentifierDecl	* node = node_new ( )		3488466	0					
ANR	3488471	IdentifierDeclType	Node *		3488466	0					
ANR	3488472	Identifier	node		3488466	1					
ANR	3488473	AssignmentExpression	* node = node_new ( )		3488466	2		=			
ANR	3488474	Identifier	node		3488466	0					
ANR	3488475	CallExpression	node_new ( )		3488466	1					
ANR	3488476	Callee	node_new		3488466	0					
ANR	3488477	Identifier	node_new		3488466	0					
ANR	3488478	ArgumentList			3488466	1					
ANR	3488479	ExpressionStatement	CHECK_NULL_RETURN ( node )	1200:2:26062:26085	3488466	1	True				
ANR	3488480	CallExpression	CHECK_NULL_RETURN ( node )		3488466	0					
ANR	3488481	Callee	CHECK_NULL_RETURN		3488466	0					
ANR	3488482	Identifier	CHECK_NULL_RETURN		3488466	0					
ANR	3488483	ArgumentList	node		3488466	1					
ANR	3488484	Argument	node		3488466	0					
ANR	3488485	Identifier	node		3488466	0					
ANR	3488486	ExpressionStatement	"SET_NTYPE ( node , NT_CTYPE )"	1202:2:26090:26115	3488466	2	True				
ANR	3488487	CallExpression	"SET_NTYPE ( node , NT_CTYPE )"		3488466	0					
ANR	3488488	Callee	SET_NTYPE		3488466	0					
ANR	3488489	Identifier	SET_NTYPE		3488466	0					
ANR	3488490	ArgumentList	node		3488466	1					
ANR	3488491	Argument	node		3488466	0					
ANR	3488492	Identifier	node		3488466	0					
ANR	3488493	Argument	NT_CTYPE		3488466	1					
ANR	3488494	Identifier	NT_CTYPE		3488466	0					
ANR	3488495	ExpressionStatement	NCTYPE ( node ) -> ctype = type	1203:2:26119:26145	3488466	3	True				
ANR	3488496	AssignmentExpression	NCTYPE ( node ) -> ctype = type		3488466	0		=			
ANR	3488497	PtrMemberAccess	NCTYPE ( node ) -> ctype		3488466	0					
ANR	3488498	CallExpression	NCTYPE ( node )		3488466	0					
ANR	3488499	Callee	NCTYPE		3488466	0					
ANR	3488500	Identifier	NCTYPE		3488466	0					
ANR	3488501	ArgumentList	node		3488466	1					
ANR	3488502	Argument	node		3488466	0					
ANR	3488503	Identifier	node		3488466	0					
ANR	3488504	Identifier	ctype		3488466	1					
ANR	3488505	Identifier	type		3488466	1					
ANR	3488506	ExpressionStatement	NCTYPE ( node ) -> not = not	1204:2:26149:26174	3488466	4	True				
ANR	3488507	AssignmentExpression	NCTYPE ( node ) -> not = not		3488466	0		=			
ANR	3488508	PtrMemberAccess	NCTYPE ( node ) -> not		3488466	0					
ANR	3488509	CallExpression	NCTYPE ( node )		3488466	0					
ANR	3488510	Callee	NCTYPE		3488466	0					
ANR	3488511	Identifier	NCTYPE		3488466	0					
ANR	3488512	ArgumentList	node		3488466	1					
ANR	3488513	Argument	node		3488466	0					
ANR	3488514	Identifier	node		3488466	0					
ANR	3488515	Identifier	not		3488466	1					
ANR	3488516	Identifier	not		3488466	1					
ANR	3488517	ReturnStatement	return node ;	1205:2:26178:26189	3488466	5	True				
ANR	3488518	Identifier	node		3488466	0					
ANR	3488519	ReturnType	static Node *		3488466	1					
ANR	3488520	Identifier	node_new_ctype		3488466	2					
ANR	3488521	ParameterList	"int type , int not"		3488466	3					
ANR	3488522	Parameter	int type	1197:15:26012:26019	3488466	0	True				
ANR	3488523	ParameterType	int		3488466	0					
ANR	3488524	Identifier	type		3488466	1					
ANR	3488525	Parameter	int not	1197:25:26022:26028	3488466	1	True				
ANR	3488526	ParameterType	int		3488466	0					
ANR	3488527	Identifier	not		3488466	1					
ANR	3488528	CFGEntryNode	ENTRY		3488466		True				
ANR	3488529	CFGExitNode	EXIT		3488466		True				
ANR	3488530	Symbol	node		3488466						
ANR	3488531	Symbol	not		3488466						
ANR	3488532	Symbol	NCTYPE ( node ) -> ctype		3488466						
ANR	3488533	Symbol	node_new		3488466						
ANR	3488534	Symbol	NCTYPE ( node ) -> not		3488466						
ANR	3488535	Symbol	type		3488466						
ANR	3488536	Symbol	NCTYPE		3488466						
ANR	3488537	Symbol	NT_CTYPE		3488466						
ANR	3488538	Symbol	* NCTYPE		3488466						
ANR	3488539	Function	node_new_anychar	1208:0:26194:26330							
ANR	3488540	FunctionDef	node_new_anychar ()		3488539	0					
ANR	3488541	CompoundStatement		1210:0:26230:26330	3488539	0					
ANR	3488542	IdentifierDeclStatement	Node * node = node_new ( ) ;	1211:2:26234:26257	3488539	0	True				
ANR	3488543	IdentifierDecl	* node = node_new ( )		3488539	0					
ANR	3488544	IdentifierDeclType	Node *		3488539	0					
ANR	3488545	Identifier	node		3488539	1					
ANR	3488546	AssignmentExpression	* node = node_new ( )		3488539	2		=			
ANR	3488547	Identifier	node		3488539	0					
ANR	3488548	CallExpression	node_new ( )		3488539	1					
ANR	3488549	Callee	node_new		3488539	0					
ANR	3488550	Identifier	node_new		3488539	0					
ANR	3488551	ArgumentList			3488539	1					
ANR	3488552	ExpressionStatement	CHECK_NULL_RETURN ( node )	1212:2:26261:26284	3488539	1	True				
ANR	3488553	CallExpression	CHECK_NULL_RETURN ( node )		3488539	0					
ANR	3488554	Callee	CHECK_NULL_RETURN		3488539	0					
ANR	3488555	Identifier	CHECK_NULL_RETURN		3488539	0					
ANR	3488556	ArgumentList	node		3488539	1					
ANR	3488557	Argument	node		3488539	0					
ANR	3488558	Identifier	node		3488539	0					
ANR	3488559	ExpressionStatement	"SET_NTYPE ( node , NT_CANY )"	1214:2:26289:26313	3488539	2	True				
ANR	3488560	CallExpression	"SET_NTYPE ( node , NT_CANY )"		3488539	0					
ANR	3488561	Callee	SET_NTYPE		3488539	0					
ANR	3488562	Identifier	SET_NTYPE		3488539	0					
ANR	3488563	ArgumentList	node		3488539	1					
ANR	3488564	Argument	node		3488539	0					
ANR	3488565	Identifier	node		3488539	0					
ANR	3488566	Argument	NT_CANY		3488539	1					
ANR	3488567	Identifier	NT_CANY		3488539	0					
ANR	3488568	ReturnStatement	return node ;	1215:2:26317:26328	3488539	3	True				
ANR	3488569	Identifier	node		3488539	0					
ANR	3488570	ReturnType	static Node *		3488539	1					
ANR	3488571	Identifier	node_new_anychar		3488539	2					
ANR	3488572	ParameterList			3488539	3					
ANR	3488573	CFGEntryNode	ENTRY		3488539		True				
ANR	3488574	CFGExitNode	EXIT		3488539		True				
ANR	3488575	Symbol	node		3488539						
ANR	3488576	Symbol	NT_CANY		3488539						
ANR	3488577	Symbol	node_new		3488539						
ANR	3488578	Function	node_new_list	1218:0:26333:26529							
ANR	3488579	FunctionDef	"node_new_list (Node * left , Node * right)"		3488578	0					
ANR	3488580	CompoundStatement		1220:0:26385:26529	3488578	0					
ANR	3488581	IdentifierDeclStatement	Node * node = node_new ( ) ;	1221:2:26389:26412	3488578	0	True				
ANR	3488582	IdentifierDecl	* node = node_new ( )		3488578	0					
ANR	3488583	IdentifierDeclType	Node *		3488578	0					
ANR	3488584	Identifier	node		3488578	1					
ANR	3488585	AssignmentExpression	* node = node_new ( )		3488578	2		=			
ANR	3488586	Identifier	node		3488578	0					
ANR	3488587	CallExpression	node_new ( )		3488578	1					
ANR	3488588	Callee	node_new		3488578	0					
ANR	3488589	Identifier	node_new		3488578	0					
ANR	3488590	ArgumentList			3488578	1					
ANR	3488591	ExpressionStatement	CHECK_NULL_RETURN ( node )	1222:2:26416:26439	3488578	1	True				
ANR	3488592	CallExpression	CHECK_NULL_RETURN ( node )		3488578	0					
ANR	3488593	Callee	CHECK_NULL_RETURN		3488578	0					
ANR	3488594	Identifier	CHECK_NULL_RETURN		3488578	0					
ANR	3488595	ArgumentList	node		3488578	1					
ANR	3488596	Argument	node		3488578	0					
ANR	3488597	Identifier	node		3488578	0					
ANR	3488598	ExpressionStatement	"SET_NTYPE ( node , NT_LIST )"	1224:2:26444:26468	3488578	2	True				
ANR	3488599	CallExpression	"SET_NTYPE ( node , NT_LIST )"		3488578	0					
ANR	3488600	Callee	SET_NTYPE		3488578	0					
ANR	3488601	Identifier	SET_NTYPE		3488578	0					
ANR	3488602	ArgumentList	node		3488578	1					
ANR	3488603	Argument	node		3488578	0					
ANR	3488604	Identifier	node		3488578	0					
ANR	3488605	Argument	NT_LIST		3488578	1					
ANR	3488606	Identifier	NT_LIST		3488578	0					
ANR	3488607	ExpressionStatement	NCAR ( node ) = left	1225:2:26472:26490	3488578	3	True				
ANR	3488608	AssignmentExpression	NCAR ( node ) = left		3488578	0		=			
ANR	3488609	CallExpression	NCAR ( node )		3488578	0					
ANR	3488610	Callee	NCAR		3488578	0					
ANR	3488611	Identifier	NCAR		3488578	0					
ANR	3488612	ArgumentList	node		3488578	1					
ANR	3488613	Argument	node		3488578	0					
ANR	3488614	Identifier	node		3488578	0					
ANR	3488615	Identifier	left		3488578	1					
ANR	3488616	ExpressionStatement	NCDR ( node ) = right	1226:2:26494:26512	3488578	4	True				
ANR	3488617	AssignmentExpression	NCDR ( node ) = right		3488578	0		=			
ANR	3488618	CallExpression	NCDR ( node )		3488578	0					
ANR	3488619	Callee	NCDR		3488578	0					
ANR	3488620	Identifier	NCDR		3488578	0					
ANR	3488621	ArgumentList	node		3488578	1					
ANR	3488622	Argument	node		3488578	0					
ANR	3488623	Identifier	node		3488578	0					
ANR	3488624	Identifier	right		3488578	1					
ANR	3488625	ReturnStatement	return node ;	1227:2:26516:26527	3488578	5	True				
ANR	3488626	Identifier	node		3488578	0					
ANR	3488627	ReturnType	static Node *		3488578	1					
ANR	3488628	Identifier	node_new_list		3488578	2					
ANR	3488629	ParameterList	"Node * left , Node * right"		3488578	3					
ANR	3488630	Parameter	Node * left	1219:14:26360:26369	3488578	0	True				
ANR	3488631	ParameterType	Node *		3488578	0					
ANR	3488632	Identifier	left		3488578	1					
ANR	3488633	Parameter	Node * right	1219:26:26372:26382	3488578	1	True				
ANR	3488634	ParameterType	Node *		3488578	0					
ANR	3488635	Identifier	right		3488578	1					
ANR	3488636	CFGEntryNode	ENTRY		3488578		True				
ANR	3488637	CFGExitNode	EXIT		3488578		True				
ANR	3488638	Symbol	node		3488578						
ANR	3488639	Symbol	NCAR		3488578						
ANR	3488640	Symbol	left		3488578						
ANR	3488641	Symbol	node_new		3488578						
ANR	3488642	Symbol	NCDR		3488578						
ANR	3488643	Symbol	right		3488578						
ANR	3488644	Symbol	NT_LIST		3488578						
ANR	3488645	Function	onig_node_new_list	1230:0:26532:26628							
ANR	3488646	FunctionDef	"onig_node_new_list (Node * left , Node * right)"		3488645	0					
ANR	3488647	CompoundStatement		1232:0:26589:26628	3488645	0					
ANR	3488648	ReturnStatement	"return node_new_list ( left , right ) ;"	1233:2:26593:26626	3488645	0	True				
ANR	3488649	CallExpression	"node_new_list ( left , right )"		3488645	0					
ANR	3488650	Callee	node_new_list		3488645	0					
ANR	3488651	Identifier	node_new_list		3488645	0					
ANR	3488652	ArgumentList	left		3488645	1					
ANR	3488653	Argument	left		3488645	0					
ANR	3488654	Identifier	left		3488645	0					
ANR	3488655	Argument	right		3488645	1					
ANR	3488656	Identifier	right		3488645	0					
ANR	3488657	ReturnType	extern Node *		3488645	1					
ANR	3488658	Identifier	onig_node_new_list		3488645	2					
ANR	3488659	ParameterList	"Node * left , Node * right"		3488645	3					
ANR	3488660	Parameter	Node * left	1231:19:26564:26573	3488645	0	True				
ANR	3488661	ParameterType	Node *		3488645	0					
ANR	3488662	Identifier	left		3488645	1					
ANR	3488663	Parameter	Node * right	1231:31:26576:26586	3488645	1	True				
ANR	3488664	ParameterType	Node *		3488645	0					
ANR	3488665	Identifier	right		3488645	1					
ANR	3488666	CFGEntryNode	ENTRY		3488645		True				
ANR	3488667	CFGExitNode	EXIT		3488645		True				
ANR	3488668	Symbol	left		3488645						
ANR	3488669	Symbol	node_new_list		3488645						
ANR	3488670	Symbol	right		3488645						
ANR	3488671	Function	onig_node_list_add	1236:0:26631:26896							
ANR	3488672	FunctionDef	"onig_node_list_add (Node * list , Node * x)"		3488671	0					
ANR	3488673	CompoundStatement		1238:0:26684:26896	3488671	0					
ANR	3488674	IdentifierDeclStatement	Node * n ;	1239:2:26688:26695	3488671	0	True				
ANR	3488675	IdentifierDecl	* n		3488671	0					
ANR	3488676	IdentifierDeclType	Node *		3488671	0					
ANR	3488677	Identifier	n		3488671	1					
ANR	3488678	ExpressionStatement	"n = onig_node_new_list ( x , NULL )"	1241:2:26700:26731	3488671	1	True				
ANR	3488679	AssignmentExpression	"n = onig_node_new_list ( x , NULL )"		3488671	0		=			
ANR	3488680	Identifier	n		3488671	0					
ANR	3488681	CallExpression	"onig_node_new_list ( x , NULL )"		3488671	1					
ANR	3488682	Callee	onig_node_new_list		3488671	0					
ANR	3488683	Identifier	onig_node_new_list		3488671	0					
ANR	3488684	ArgumentList	x		3488671	1					
ANR	3488685	Argument	x		3488671	0					
ANR	3488686	Identifier	x		3488671	0					
ANR	3488687	Argument	NULL		3488671	1					
ANR	3488688	Identifier	NULL		3488671	0					
ANR	3488689	IfStatement	if ( IS_NULL ( n ) )		3488671	2					
ANR	3488690	Condition	IS_NULL ( n )	1242:6:26739:26748	3488671	0	True				
ANR	3488691	CallExpression	IS_NULL ( n )		3488671	0					
ANR	3488692	Callee	IS_NULL		3488671	0					
ANR	3488693	Identifier	IS_NULL		3488671	0					
ANR	3488694	ArgumentList	n		3488671	1					
ANR	3488695	Argument	n		3488671	0					
ANR	3488696	Identifier	n		3488671	0					
ANR	3488697	ReturnStatement	return NULL_NODE ;	1242:18:26751:26767	3488671	1	True				
ANR	3488698	Identifier	NULL_NODE		3488671	0					
ANR	3488699	IfStatement	if ( IS_NOT_NULL ( list ) )		3488671	3					
ANR	3488700	Condition	IS_NOT_NULL ( list )	1244:6:26776:26792	3488671	0	True				
ANR	3488701	CallExpression	IS_NOT_NULL ( list )		3488671	0					
ANR	3488702	Callee	IS_NOT_NULL		3488671	0					
ANR	3488703	Identifier	IS_NOT_NULL		3488671	0					
ANR	3488704	ArgumentList	list		3488671	1					
ANR	3488705	Argument	list		3488671	0					
ANR	3488706	Identifier	list		3488671	0					
ANR	3488707	CompoundStatement		7:25:110:110	3488671	1					
ANR	3488708	WhileStatement	while ( IS_NOT_NULL ( NCDR ( list ) ) )		3488671	0					
ANR	3488709	Condition	IS_NOT_NULL ( NCDR ( list ) )	1245:11:26808:26830	3488671	0	True				
ANR	3488710	CallExpression	IS_NOT_NULL ( NCDR ( list ) )		3488671	0					
ANR	3488711	Callee	IS_NOT_NULL		3488671	0					
ANR	3488712	Identifier	IS_NOT_NULL		3488671	0					
ANR	3488713	ArgumentList	NCDR ( list )		3488671	1					
ANR	3488714	Argument	NCDR ( list )		3488671	0					
ANR	3488715	CallExpression	NCDR ( list )		3488671	0					
ANR	3488716	Callee	NCDR		3488671	0					
ANR	3488717	Identifier	NCDR		3488671	0					
ANR	3488718	ArgumentList	list		3488671	1					
ANR	3488719	Argument	list		3488671	0					
ANR	3488720	Identifier	list		3488671	0					
ANR	3488721	ExpressionStatement	list = NCDR ( list )	1246:6:26839:26856	3488671	1	True				
ANR	3488722	AssignmentExpression	list = NCDR ( list )		3488671	0		=			
ANR	3488723	Identifier	list		3488671	0					
ANR	3488724	CallExpression	NCDR ( list )		3488671	1					
ANR	3488725	Callee	NCDR		3488671	0					
ANR	3488726	Identifier	NCDR		3488671	0					
ANR	3488727	ArgumentList	list		3488671	1					
ANR	3488728	Argument	list		3488671	0					
ANR	3488729	Identifier	list		3488671	0					
ANR	3488730	ExpressionStatement	NCDR ( list ) = n	1248:4:26863:26877	3488671	1	True				
ANR	3488731	AssignmentExpression	NCDR ( list ) = n		3488671	0		=			
ANR	3488732	CallExpression	NCDR ( list )		3488671	0					
ANR	3488733	Callee	NCDR		3488671	0					
ANR	3488734	Identifier	NCDR		3488671	0					
ANR	3488735	ArgumentList	list		3488671	1					
ANR	3488736	Argument	list		3488671	0					
ANR	3488737	Identifier	list		3488671	0					
ANR	3488738	Identifier	n		3488671	1					
ANR	3488739	ReturnStatement	return n ;	1251:2:26886:26894	3488671	4	True				
ANR	3488740	Identifier	n		3488671	0					
ANR	3488741	ReturnType	extern Node *		3488671	1					
ANR	3488742	Identifier	onig_node_list_add		3488671	2					
ANR	3488743	ParameterList	"Node * list , Node * x"		3488671	3					
ANR	3488744	Parameter	Node * list	1237:19:26663:26672	3488671	0	True				
ANR	3488745	ParameterType	Node *		3488671	0					
ANR	3488746	Identifier	list		3488671	1					
ANR	3488747	Parameter	Node * x	1237:31:26675:26681	3488671	1	True				
ANR	3488748	ParameterType	Node *		3488671	0					
ANR	3488749	Identifier	x		3488671	1					
ANR	3488750	CFGEntryNode	ENTRY		3488671		True				
ANR	3488751	CFGExitNode	EXIT		3488671		True				
ANR	3488752	Symbol	IS_NOT_NULL		3488671						
ANR	3488753	Symbol	NULL		3488671						
ANR	3488754	Symbol	IS_NULL		3488671						
ANR	3488755	Symbol	NCDR		3488671						
ANR	3488756	Symbol	x		3488671						
ANR	3488757	Symbol	list		3488671						
ANR	3488758	Symbol	onig_node_new_list		3488671						
ANR	3488759	Symbol	NULL_NODE		3488671						
ANR	3488760	Symbol	n		3488671						
ANR	3488761	Function	onig_node_new_alt	1254:0:26899:27098							
ANR	3488762	FunctionDef	"onig_node_new_alt (Node * left , Node * right)"		3488761	0					
ANR	3488763	CompoundStatement		1256:0:26955:27098	3488761	0					
ANR	3488764	IdentifierDeclStatement	Node * node = node_new ( ) ;	1257:2:26959:26982	3488761	0	True				
ANR	3488765	IdentifierDecl	* node = node_new ( )		3488761	0					
ANR	3488766	IdentifierDeclType	Node *		3488761	0					
ANR	3488767	Identifier	node		3488761	1					
ANR	3488768	AssignmentExpression	* node = node_new ( )		3488761	2		=			
ANR	3488769	Identifier	node		3488761	0					
ANR	3488770	CallExpression	node_new ( )		3488761	1					
ANR	3488771	Callee	node_new		3488761	0					
ANR	3488772	Identifier	node_new		3488761	0					
ANR	3488773	ArgumentList			3488761	1					
ANR	3488774	ExpressionStatement	CHECK_NULL_RETURN ( node )	1258:2:26986:27009	3488761	1	True				
ANR	3488775	CallExpression	CHECK_NULL_RETURN ( node )		3488761	0					
ANR	3488776	Callee	CHECK_NULL_RETURN		3488761	0					
ANR	3488777	Identifier	CHECK_NULL_RETURN		3488761	0					
ANR	3488778	ArgumentList	node		3488761	1					
ANR	3488779	Argument	node		3488761	0					
ANR	3488780	Identifier	node		3488761	0					
ANR	3488781	ExpressionStatement	"SET_NTYPE ( node , NT_ALT )"	1260:2:27014:27037	3488761	2	True				
ANR	3488782	CallExpression	"SET_NTYPE ( node , NT_ALT )"		3488761	0					
ANR	3488783	Callee	SET_NTYPE		3488761	0					
ANR	3488784	Identifier	SET_NTYPE		3488761	0					
ANR	3488785	ArgumentList	node		3488761	1					
ANR	3488786	Argument	node		3488761	0					
ANR	3488787	Identifier	node		3488761	0					
ANR	3488788	Argument	NT_ALT		3488761	1					
ANR	3488789	Identifier	NT_ALT		3488761	0					
ANR	3488790	ExpressionStatement	NCAR ( node ) = left	1261:2:27041:27059	3488761	3	True				
ANR	3488791	AssignmentExpression	NCAR ( node ) = left		3488761	0		=			
ANR	3488792	CallExpression	NCAR ( node )		3488761	0					
ANR	3488793	Callee	NCAR		3488761	0					
ANR	3488794	Identifier	NCAR		3488761	0					
ANR	3488795	ArgumentList	node		3488761	1					
ANR	3488796	Argument	node		3488761	0					
ANR	3488797	Identifier	node		3488761	0					
ANR	3488798	Identifier	left		3488761	1					
ANR	3488799	ExpressionStatement	NCDR ( node ) = right	1262:2:27063:27081	3488761	4	True				
ANR	3488800	AssignmentExpression	NCDR ( node ) = right		3488761	0		=			
ANR	3488801	CallExpression	NCDR ( node )		3488761	0					
ANR	3488802	Callee	NCDR		3488761	0					
ANR	3488803	Identifier	NCDR		3488761	0					
ANR	3488804	ArgumentList	node		3488761	1					
ANR	3488805	Argument	node		3488761	0					
ANR	3488806	Identifier	node		3488761	0					
ANR	3488807	Identifier	right		3488761	1					
ANR	3488808	ReturnStatement	return node ;	1263:2:27085:27096	3488761	5	True				
ANR	3488809	Identifier	node		3488761	0					
ANR	3488810	ReturnType	extern Node *		3488761	1					
ANR	3488811	Identifier	onig_node_new_alt		3488761	2					
ANR	3488812	ParameterList	"Node * left , Node * right"		3488761	3					
ANR	3488813	Parameter	Node * left	1255:18:26930:26939	3488761	0	True				
ANR	3488814	ParameterType	Node *		3488761	0					
ANR	3488815	Identifier	left		3488761	1					
ANR	3488816	Parameter	Node * right	1255:30:26942:26952	3488761	1	True				
ANR	3488817	ParameterType	Node *		3488761	0					
ANR	3488818	Identifier	right		3488761	1					
ANR	3488819	CFGEntryNode	ENTRY		3488761		True				
ANR	3488820	CFGExitNode	EXIT		3488761		True				
ANR	3488821	Symbol	node		3488761						
ANR	3488822	Symbol	NCAR		3488761						
ANR	3488823	Symbol	left		3488761						
ANR	3488824	Symbol	NT_ALT		3488761						
ANR	3488825	Symbol	node_new		3488761						
ANR	3488826	Symbol	NCDR		3488761						
ANR	3488827	Symbol	right		3488761						
ANR	3488828	Function	onig_node_new_anchor	1266:0:27101:27347							
ANR	3488829	FunctionDef	onig_node_new_anchor (int type)		3488828	0					
ANR	3488830	CompoundStatement		1268:0:27145:27347	3488828	0					
ANR	3488831	IdentifierDeclStatement	Node * node = node_new ( ) ;	1269:2:27149:27172	3488828	0	True				
ANR	3488832	IdentifierDecl	* node = node_new ( )		3488828	0					
ANR	3488833	IdentifierDeclType	Node *		3488828	0					
ANR	3488834	Identifier	node		3488828	1					
ANR	3488835	AssignmentExpression	* node = node_new ( )		3488828	2		=			
ANR	3488836	Identifier	node		3488828	0					
ANR	3488837	CallExpression	node_new ( )		3488828	1					
ANR	3488838	Callee	node_new		3488828	0					
ANR	3488839	Identifier	node_new		3488828	0					
ANR	3488840	ArgumentList			3488828	1					
ANR	3488841	ExpressionStatement	CHECK_NULL_RETURN ( node )	1270:2:27176:27199	3488828	1	True				
ANR	3488842	CallExpression	CHECK_NULL_RETURN ( node )		3488828	0					
ANR	3488843	Callee	CHECK_NULL_RETURN		3488828	0					
ANR	3488844	Identifier	CHECK_NULL_RETURN		3488828	0					
ANR	3488845	ArgumentList	node		3488828	1					
ANR	3488846	Argument	node		3488828	0					
ANR	3488847	Identifier	node		3488828	0					
ANR	3488848	ExpressionStatement	"SET_NTYPE ( node , NT_ANCHOR )"	1272:2:27204:27230	3488828	2	True				
ANR	3488849	CallExpression	"SET_NTYPE ( node , NT_ANCHOR )"		3488828	0					
ANR	3488850	Callee	SET_NTYPE		3488828	0					
ANR	3488851	Identifier	SET_NTYPE		3488828	0					
ANR	3488852	ArgumentList	node		3488828	1					
ANR	3488853	Argument	node		3488828	0					
ANR	3488854	Identifier	node		3488828	0					
ANR	3488855	Argument	NT_ANCHOR		3488828	1					
ANR	3488856	Identifier	NT_ANCHOR		3488828	0					
ANR	3488857	ExpressionStatement	NANCHOR ( node ) -> type = type	1273:2:27234:27264	3488828	3	True				
ANR	3488858	AssignmentExpression	NANCHOR ( node ) -> type = type		3488828	0		=			
ANR	3488859	PtrMemberAccess	NANCHOR ( node ) -> type		3488828	0					
ANR	3488860	CallExpression	NANCHOR ( node )		3488828	0					
ANR	3488861	Callee	NANCHOR		3488828	0					
ANR	3488862	Identifier	NANCHOR		3488828	0					
ANR	3488863	ArgumentList	node		3488828	1					
ANR	3488864	Argument	node		3488828	0					
ANR	3488865	Identifier	node		3488828	0					
ANR	3488866	Identifier	type		3488828	1					
ANR	3488867	Identifier	type		3488828	1					
ANR	3488868	ExpressionStatement	NANCHOR ( node ) -> target = NULL	1274:2:27268:27298	3488828	4	True				
ANR	3488869	AssignmentExpression	NANCHOR ( node ) -> target = NULL		3488828	0		=			
ANR	3488870	PtrMemberAccess	NANCHOR ( node ) -> target		3488828	0					
ANR	3488871	CallExpression	NANCHOR ( node )		3488828	0					
ANR	3488872	Callee	NANCHOR		3488828	0					
ANR	3488873	Identifier	NANCHOR		3488828	0					
ANR	3488874	ArgumentList	node		3488828	1					
ANR	3488875	Argument	node		3488828	0					
ANR	3488876	Identifier	node		3488828	0					
ANR	3488877	Identifier	target		3488828	1					
ANR	3488878	Identifier	NULL		3488828	1					
ANR	3488879	ExpressionStatement	NANCHOR ( node ) -> char_len = - 1	1275:2:27302:27330	3488828	5	True				
ANR	3488880	AssignmentExpression	NANCHOR ( node ) -> char_len = - 1		3488828	0		=			
ANR	3488881	PtrMemberAccess	NANCHOR ( node ) -> char_len		3488828	0					
ANR	3488882	CallExpression	NANCHOR ( node )		3488828	0					
ANR	3488883	Callee	NANCHOR		3488828	0					
ANR	3488884	Identifier	NANCHOR		3488828	0					
ANR	3488885	ArgumentList	node		3488828	1					
ANR	3488886	Argument	node		3488828	0					
ANR	3488887	Identifier	node		3488828	0					
ANR	3488888	Identifier	char_len		3488828	1					
ANR	3488889	UnaryOperationExpression	- 1		3488828	1					
ANR	3488890	UnaryOperator	-		3488828	0					
ANR	3488891	PrimaryExpression	1		3488828	1					
ANR	3488892	ReturnStatement	return node ;	1276:2:27334:27345	3488828	6	True				
ANR	3488893	Identifier	node		3488828	0					
ANR	3488894	ReturnType	extern Node *		3488828	1					
ANR	3488895	Identifier	onig_node_new_anchor		3488828	2					
ANR	3488896	ParameterList	int type		3488828	3					
ANR	3488897	Parameter	int type	1267:21:27135:27142	3488828	0	True				
ANR	3488898	ParameterType	int		3488828	0					
ANR	3488899	Identifier	type		3488828	1					
ANR	3488900	CFGEntryNode	ENTRY		3488828		True				
ANR	3488901	CFGExitNode	EXIT		3488828		True				
ANR	3488902	Symbol	node		3488828						
ANR	3488903	Symbol	NULL		3488828						
ANR	3488904	Symbol	node_new		3488828						
ANR	3488905	Symbol	* NANCHOR		3488828						
ANR	3488906	Symbol	NANCHOR		3488828						
ANR	3488907	Symbol	NANCHOR ( node ) -> target		3488828						
ANR	3488908	Symbol	NANCHOR ( node ) -> type		3488828						
ANR	3488909	Symbol	type		3488828						
ANR	3488910	Symbol	NT_ANCHOR		3488828						
ANR	3488911	Symbol	NANCHOR ( node ) -> char_len		3488828						
ANR	3488912	DeclStmt									
ANR	3488913	Decl							int	int	i
ANR	3488914	DeclStmt									
ANR	3488915	Decl							Node	Node *	node
ANR	3488916	DeclStmt									
ANR	3488917	Decl							int	int *	p
ANR	3488918	Function	node_new_call	1331:0:28546:28919							
ANR	3488919	FunctionDef	"node_new_call (UChar * name , UChar * name_end , int gnum)"		3488918	0					
ANR	3488920	CompoundStatement		1333:0:28613:28919	3488918	0					
ANR	3488921	IdentifierDeclStatement	Node * node = node_new ( ) ;	1334:2:28617:28640	3488918	0	True				
ANR	3488922	IdentifierDecl	* node = node_new ( )		3488918	0					
ANR	3488923	IdentifierDeclType	Node *		3488918	0					
ANR	3488924	Identifier	node		3488918	1					
ANR	3488925	AssignmentExpression	* node = node_new ( )		3488918	2		=			
ANR	3488926	Identifier	node		3488918	0					
ANR	3488927	CallExpression	node_new ( )		3488918	1					
ANR	3488928	Callee	node_new		3488918	0					
ANR	3488929	Identifier	node_new		3488918	0					
ANR	3488930	ArgumentList			3488918	1					
ANR	3488931	ExpressionStatement	CHECK_NULL_RETURN ( node )	1335:2:28644:28667	3488918	1	True				
ANR	3488932	CallExpression	CHECK_NULL_RETURN ( node )		3488918	0					
ANR	3488933	Callee	CHECK_NULL_RETURN		3488918	0					
ANR	3488934	Identifier	CHECK_NULL_RETURN		3488918	0					
ANR	3488935	ArgumentList	node		3488918	1					
ANR	3488936	Argument	node		3488918	0					
ANR	3488937	Identifier	node		3488918	0					
ANR	3488938	ExpressionStatement	"SET_NTYPE ( node , NT_CALL )"	1337:2:28672:28696	3488918	2	True				
ANR	3488939	CallExpression	"SET_NTYPE ( node , NT_CALL )"		3488918	0					
ANR	3488940	Callee	SET_NTYPE		3488918	0					
ANR	3488941	Identifier	SET_NTYPE		3488918	0					
ANR	3488942	ArgumentList	node		3488918	1					
ANR	3488943	Argument	node		3488918	0					
ANR	3488944	Identifier	node		3488918	0					
ANR	3488945	Argument	NT_CALL		3488918	1					
ANR	3488946	Identifier	NT_CALL		3488918	0					
ANR	3488947	ExpressionStatement	NCALL ( node ) -> state = 0	1338:2:28700:28726	3488918	3	True				
ANR	3488948	AssignmentExpression	NCALL ( node ) -> state = 0		3488918	0		=			
ANR	3488949	PtrMemberAccess	NCALL ( node ) -> state		3488918	0					
ANR	3488950	CallExpression	NCALL ( node )		3488918	0					
ANR	3488951	Callee	NCALL		3488918	0					
ANR	3488952	Identifier	NCALL		3488918	0					
ANR	3488953	ArgumentList	node		3488918	1					
ANR	3488954	Argument	node		3488918	0					
ANR	3488955	Identifier	node		3488918	0					
ANR	3488956	Identifier	state		3488918	1					
ANR	3488957	PrimaryExpression	0		3488918	1					
ANR	3488958	ExpressionStatement	NCALL ( node ) -> target = NULL_NODE	1339:2:28730:28764	3488918	4	True				
ANR	3488959	AssignmentExpression	NCALL ( node ) -> target = NULL_NODE		3488918	0		=			
ANR	3488960	PtrMemberAccess	NCALL ( node ) -> target		3488918	0					
ANR	3488961	CallExpression	NCALL ( node )		3488918	0					
ANR	3488962	Callee	NCALL		3488918	0					
ANR	3488963	Identifier	NCALL		3488918	0					
ANR	3488964	ArgumentList	node		3488918	1					
ANR	3488965	Argument	node		3488918	0					
ANR	3488966	Identifier	node		3488918	0					
ANR	3488967	Identifier	target		3488918	1					
ANR	3488968	Identifier	NULL_NODE		3488918	1					
ANR	3488969	ExpressionStatement	NCALL ( node ) -> name = name	1340:2:28768:28797	3488918	5	True				
ANR	3488970	AssignmentExpression	NCALL ( node ) -> name = name		3488918	0		=			
ANR	3488971	PtrMemberAccess	NCALL ( node ) -> name		3488918	0					
ANR	3488972	CallExpression	NCALL ( node )		3488918	0					
ANR	3488973	Callee	NCALL		3488918	0					
ANR	3488974	Identifier	NCALL		3488918	0					
ANR	3488975	ArgumentList	node		3488918	1					
ANR	3488976	Argument	node		3488918	0					
ANR	3488977	Identifier	node		3488918	0					
ANR	3488978	Identifier	name		3488918	1					
ANR	3488979	Identifier	name		3488918	1					
ANR	3488980	ExpressionStatement	NCALL ( node ) -> name_end = name_end	1341:2:28801:28834	3488918	6	True				
ANR	3488981	AssignmentExpression	NCALL ( node ) -> name_end = name_end		3488918	0		=			
ANR	3488982	PtrMemberAccess	NCALL ( node ) -> name_end		3488918	0					
ANR	3488983	CallExpression	NCALL ( node )		3488918	0					
ANR	3488984	Callee	NCALL		3488918	0					
ANR	3488985	Identifier	NCALL		3488918	0					
ANR	3488986	ArgumentList	node		3488918	1					
ANR	3488987	Argument	node		3488918	0					
ANR	3488988	Identifier	node		3488918	0					
ANR	3488989	Identifier	name_end		3488918	1					
ANR	3488990	Identifier	name_end		3488918	1					
ANR	3488991	ExpressionStatement	NCALL ( node ) -> group_num = gnum	1342:2:28838:28867	3488918	7	True				
ANR	3488992	AssignmentExpression	NCALL ( node ) -> group_num = gnum		3488918	0		=			
ANR	3488993	PtrMemberAccess	NCALL ( node ) -> group_num		3488918	0					
ANR	3488994	CallExpression	NCALL ( node )		3488918	0					
ANR	3488995	Callee	NCALL		3488918	0					
ANR	3488996	Identifier	NCALL		3488918	0					
ANR	3488997	ArgumentList	node		3488918	1					
ANR	3488998	Argument	node		3488918	0					
ANR	3488999	Identifier	node		3488918	0					
ANR	3489000	Identifier	group_num		3488918	1					
ANR	3489001	Identifier	gnum		3488918	1					
ANR	3489002	ReturnStatement	return node ;	1343:2:28906:28917	3488918	8	True				
ANR	3489003	Identifier	node		3488918	0					
ANR	3489004	ReturnType	static Node *		3488918	1					
ANR	3489005	Identifier	node_new_call		3488918	2					
ANR	3489006	ParameterList	"UChar * name , UChar * name_end , int gnum"		3488918	3					
ANR	3489007	Parameter	UChar * name	1332:14:28573:28583	3488918	0	True				
ANR	3489008	ParameterType	UChar *		3488918	0					
ANR	3489009	Identifier	name		3488918	1					
ANR	3489010	Parameter	UChar * name_end	1332:27:28586:28600	3488918	1	True				
ANR	3489011	ParameterType	UChar *		3488918	0					
ANR	3489012	Identifier	name_end		3488918	1					
ANR	3489013	Parameter	int gnum	1332:44:28603:28610	3488918	2	True				
ANR	3489014	ParameterType	int		3488918	0					
ANR	3489015	Identifier	gnum		3488918	1					
ANR	3489016	CFGEntryNode	ENTRY		3488918		True				
ANR	3489017	CFGExitNode	EXIT		3488918		True				
ANR	3489018	Symbol	NT_CALL		3488918						
ANR	3489019	Symbol	NCALL		3488918						
ANR	3489020	Symbol	NCALL ( node ) -> name		3488918						
ANR	3489021	Symbol	gnum		3488918						
ANR	3489022	Symbol	node		3488918						
ANR	3489023	Symbol	node_new		3488918						
ANR	3489024	Symbol	name		3488918						
ANR	3489025	Symbol	NCALL ( node ) -> target		3488918						
ANR	3489026	Symbol	NCALL ( node ) -> state		3488918						
ANR	3489027	Symbol	NULL_NODE		3488918						
ANR	3489028	Symbol	* NCALL		3488918						
ANR	3489029	Symbol	NCALL ( node ) -> group_num		3488918						
ANR	3489030	Symbol	name_end		3488918						
ANR	3489031	Symbol	NCALL ( node ) -> name_end		3488918						
ANR	3489032	Function	node_new_quantifier	1347:0:28929:29583							
ANR	3489033	FunctionDef	"node_new_quantifier (int lower , int upper , int by_number)"		3489032	0					
ANR	3489034	CompoundStatement		1349:0:28999:29583	3489032	0					
ANR	3489035	IdentifierDeclStatement	Node * node = node_new ( ) ;	1350:2:29003:29026	3489032	0	True				
ANR	3489036	IdentifierDecl	* node = node_new ( )		3489032	0					
ANR	3489037	IdentifierDeclType	Node *		3489032	0					
ANR	3489038	Identifier	node		3489032	1					
ANR	3489039	AssignmentExpression	* node = node_new ( )		3489032	2		=			
ANR	3489040	Identifier	node		3489032	0					
ANR	3489041	CallExpression	node_new ( )		3489032	1					
ANR	3489042	Callee	node_new		3489032	0					
ANR	3489043	Identifier	node_new		3489032	0					
ANR	3489044	ArgumentList			3489032	1					
ANR	3489045	ExpressionStatement	CHECK_NULL_RETURN ( node )	1351:2:29030:29053	3489032	1	True				
ANR	3489046	CallExpression	CHECK_NULL_RETURN ( node )		3489032	0					
ANR	3489047	Callee	CHECK_NULL_RETURN		3489032	0					
ANR	3489048	Identifier	CHECK_NULL_RETURN		3489032	0					
ANR	3489049	ArgumentList	node		3489032	1					
ANR	3489050	Argument	node		3489032	0					
ANR	3489051	Identifier	node		3489032	0					
ANR	3489052	ExpressionStatement	"SET_NTYPE ( node , NT_QTFR )"	1353:2:29058:29082	3489032	2	True				
ANR	3489053	CallExpression	"SET_NTYPE ( node , NT_QTFR )"		3489032	0					
ANR	3489054	Callee	SET_NTYPE		3489032	0					
ANR	3489055	Identifier	SET_NTYPE		3489032	0					
ANR	3489056	ArgumentList	node		3489032	1					
ANR	3489057	Argument	node		3489032	0					
ANR	3489058	Identifier	node		3489032	0					
ANR	3489059	Argument	NT_QTFR		3489032	1					
ANR	3489060	Identifier	NT_QTFR		3489032	0					
ANR	3489061	ExpressionStatement	NQTFR ( node ) -> state = 0	1354:2:29086:29109	3489032	3	True				
ANR	3489062	AssignmentExpression	NQTFR ( node ) -> state = 0		3489032	0		=			
ANR	3489063	PtrMemberAccess	NQTFR ( node ) -> state		3489032	0					
ANR	3489064	CallExpression	NQTFR ( node )		3489032	0					
ANR	3489065	Callee	NQTFR		3489032	0					
ANR	3489066	Identifier	NQTFR		3489032	0					
ANR	3489067	ArgumentList	node		3489032	1					
ANR	3489068	Argument	node		3489032	0					
ANR	3489069	Identifier	node		3489032	0					
ANR	3489070	Identifier	state		3489032	1					
ANR	3489071	PrimaryExpression	0		3489032	1					
ANR	3489072	ExpressionStatement	NQTFR ( node ) -> target = NULL	1355:2:29113:29139	3489032	4	True				
ANR	3489073	AssignmentExpression	NQTFR ( node ) -> target = NULL		3489032	0		=			
ANR	3489074	PtrMemberAccess	NQTFR ( node ) -> target		3489032	0					
ANR	3489075	CallExpression	NQTFR ( node )		3489032	0					
ANR	3489076	Callee	NQTFR		3489032	0					
ANR	3489077	Identifier	NQTFR		3489032	0					
ANR	3489078	ArgumentList	node		3489032	1					
ANR	3489079	Argument	node		3489032	0					
ANR	3489080	Identifier	node		3489032	0					
ANR	3489081	Identifier	target		3489032	1					
ANR	3489082	Identifier	NULL		3489032	1					
ANR	3489083	ExpressionStatement	NQTFR ( node ) -> lower = lower	1356:2:29143:29170	3489032	5	True				
ANR	3489084	AssignmentExpression	NQTFR ( node ) -> lower = lower		3489032	0		=			
ANR	3489085	PtrMemberAccess	NQTFR ( node ) -> lower		3489032	0					
ANR	3489086	CallExpression	NQTFR ( node )		3489032	0					
ANR	3489087	Callee	NQTFR		3489032	0					
ANR	3489088	Identifier	NQTFR		3489032	0					
ANR	3489089	ArgumentList	node		3489032	1					
ANR	3489090	Argument	node		3489032	0					
ANR	3489091	Identifier	node		3489032	0					
ANR	3489092	Identifier	lower		3489032	1					
ANR	3489093	Identifier	lower		3489032	1					
ANR	3489094	ExpressionStatement	NQTFR ( node ) -> upper = upper	1357:2:29174:29201	3489032	6	True				
ANR	3489095	AssignmentExpression	NQTFR ( node ) -> upper = upper		3489032	0		=			
ANR	3489096	PtrMemberAccess	NQTFR ( node ) -> upper		3489032	0					
ANR	3489097	CallExpression	NQTFR ( node )		3489032	0					
ANR	3489098	Callee	NQTFR		3489032	0					
ANR	3489099	Identifier	NQTFR		3489032	0					
ANR	3489100	ArgumentList	node		3489032	1					
ANR	3489101	Argument	node		3489032	0					
ANR	3489102	Identifier	node		3489032	0					
ANR	3489103	Identifier	upper		3489032	1					
ANR	3489104	Identifier	upper		3489032	1					
ANR	3489105	ExpressionStatement	NQTFR ( node ) -> greedy = 1	1358:2:29205:29228	3489032	7	True				
ANR	3489106	AssignmentExpression	NQTFR ( node ) -> greedy = 1		3489032	0		=			
ANR	3489107	PtrMemberAccess	NQTFR ( node ) -> greedy		3489032	0					
ANR	3489108	CallExpression	NQTFR ( node )		3489032	0					
ANR	3489109	Callee	NQTFR		3489032	0					
ANR	3489110	Identifier	NQTFR		3489032	0					
ANR	3489111	ArgumentList	node		3489032	1					
ANR	3489112	Argument	node		3489032	0					
ANR	3489113	Identifier	node		3489032	0					
ANR	3489114	Identifier	greedy		3489032	1					
ANR	3489115	PrimaryExpression	1		3489032	1					
ANR	3489116	ExpressionStatement	NQTFR ( node ) -> target_empty_info = NQ_TARGET_ISNOT_EMPTY	1359:2:29232:29286	3489032	8	True				
ANR	3489117	AssignmentExpression	NQTFR ( node ) -> target_empty_info = NQ_TARGET_ISNOT_EMPTY		3489032	0		=			
ANR	3489118	PtrMemberAccess	NQTFR ( node ) -> target_empty_info		3489032	0					
ANR	3489119	CallExpression	NQTFR ( node )		3489032	0					
ANR	3489120	Callee	NQTFR		3489032	0					
ANR	3489121	Identifier	NQTFR		3489032	0					
ANR	3489122	ArgumentList	node		3489032	1					
ANR	3489123	Argument	node		3489032	0					
ANR	3489124	Identifier	node		3489032	0					
ANR	3489125	Identifier	target_empty_info		3489032	1					
ANR	3489126	Identifier	NQ_TARGET_ISNOT_EMPTY		3489032	1					
ANR	3489127	ExpressionStatement	NQTFR ( node ) -> head_exact = NULL_NODE	1360:2:29290:29332	3489032	9	True				
ANR	3489128	AssignmentExpression	NQTFR ( node ) -> head_exact = NULL_NODE		3489032	0		=			
ANR	3489129	PtrMemberAccess	NQTFR ( node ) -> head_exact		3489032	0					
ANR	3489130	CallExpression	NQTFR ( node )		3489032	0					
ANR	3489131	Callee	NQTFR		3489032	0					
ANR	3489132	Identifier	NQTFR		3489032	0					
ANR	3489133	ArgumentList	node		3489032	1					
ANR	3489134	Argument	node		3489032	0					
ANR	3489135	Identifier	node		3489032	0					
ANR	3489136	Identifier	head_exact		3489032	1					
ANR	3489137	Identifier	NULL_NODE		3489032	1					
ANR	3489138	ExpressionStatement	NQTFR ( node ) -> next_head_exact = NULL_NODE	1361:2:29336:29378	3489032	10	True				
ANR	3489139	AssignmentExpression	NQTFR ( node ) -> next_head_exact = NULL_NODE		3489032	0		=			
ANR	3489140	PtrMemberAccess	NQTFR ( node ) -> next_head_exact		3489032	0					
ANR	3489141	CallExpression	NQTFR ( node )		3489032	0					
ANR	3489142	Callee	NQTFR		3489032	0					
ANR	3489143	Identifier	NQTFR		3489032	0					
ANR	3489144	ArgumentList	node		3489032	1					
ANR	3489145	Argument	node		3489032	0					
ANR	3489146	Identifier	node		3489032	0					
ANR	3489147	Identifier	next_head_exact		3489032	1					
ANR	3489148	Identifier	NULL_NODE		3489032	1					
ANR	3489149	ExpressionStatement	NQTFR ( node ) -> is_refered = 0	1362:2:29382:29416	3489032	11	True				
ANR	3489150	AssignmentExpression	NQTFR ( node ) -> is_refered = 0		3489032	0		=			
ANR	3489151	PtrMemberAccess	NQTFR ( node ) -> is_refered		3489032	0					
ANR	3489152	CallExpression	NQTFR ( node )		3489032	0					
ANR	3489153	Callee	NQTFR		3489032	0					
ANR	3489154	Identifier	NQTFR		3489032	0					
ANR	3489155	ArgumentList	node		3489032	1					
ANR	3489156	Argument	node		3489032	0					
ANR	3489157	Identifier	node		3489032	0					
ANR	3489158	Identifier	is_refered		3489032	1					
ANR	3489159	PrimaryExpression	0		3489032	1					
ANR	3489160	IfStatement	if ( by_number != 0 )		3489032	12					
ANR	3489161	Condition	by_number != 0	1363:6:29424:29437	3489032	0	True				
ANR	3489162	EqualityExpression	by_number != 0		3489032	0		!=			
ANR	3489163	Identifier	by_number		3489032	0					
ANR	3489164	PrimaryExpression	0		3489032	1					
ANR	3489165	ExpressionStatement	NQTFR ( node ) -> state |= NST_BY_NUMBER	1364:4:29444:29479	3489032	1	True				
ANR	3489166	AssignmentExpression	NQTFR ( node ) -> state |= NST_BY_NUMBER		3489032	0		|=			
ANR	3489167	PtrMemberAccess	NQTFR ( node ) -> state		3489032	0					
ANR	3489168	CallExpression	NQTFR ( node )		3489032	0					
ANR	3489169	Callee	NQTFR		3489032	0					
ANR	3489170	Identifier	NQTFR		3489032	0					
ANR	3489171	ArgumentList	node		3489032	1					
ANR	3489172	Argument	node		3489032	0					
ANR	3489173	Identifier	node		3489032	0					
ANR	3489174	Identifier	state		3489032	1					
ANR	3489175	Identifier	NST_BY_NUMBER		3489032	1					
ANR	3489176	ExpressionStatement	NQTFR ( node ) -> comb_exp_check_num = 0	1367:2:29523:29558	3489032	13	True				
ANR	3489177	AssignmentExpression	NQTFR ( node ) -> comb_exp_check_num = 0		3489032	0		=			
ANR	3489178	PtrMemberAccess	NQTFR ( node ) -> comb_exp_check_num		3489032	0					
ANR	3489179	CallExpression	NQTFR ( node )		3489032	0					
ANR	3489180	Callee	NQTFR		3489032	0					
ANR	3489181	Identifier	NQTFR		3489032	0					
ANR	3489182	ArgumentList	node		3489032	1					
ANR	3489183	Argument	node		3489032	0					
ANR	3489184	Identifier	node		3489032	0					
ANR	3489185	Identifier	comb_exp_check_num		3489032	1					
ANR	3489186	PrimaryExpression	0		3489032	1					
ANR	3489187	ReturnStatement	return node ;	1370:2:29570:29581	3489032	14	True				
ANR	3489188	Identifier	node		3489032	0					
ANR	3489189	ReturnType	static Node *		3489032	1					
ANR	3489190	Identifier	node_new_quantifier		3489032	2					
ANR	3489191	ParameterList	"int lower , int upper , int by_number"		3489032	3					
ANR	3489192	Parameter	int lower	1348:20:28962:28970	3489032	0	True				
ANR	3489193	ParameterType	int		3489032	0					
ANR	3489194	Identifier	lower		3489032	1					
ANR	3489195	Parameter	int upper	1348:31:28973:28981	3489032	1	True				
ANR	3489196	ParameterType	int		3489032	0					
ANR	3489197	Identifier	upper		3489032	1					
ANR	3489198	Parameter	int by_number	1348:42:28984:28996	3489032	2	True				
ANR	3489199	ParameterType	int		3489032	0					
ANR	3489200	Identifier	by_number		3489032	1					
ANR	3489201	CFGEntryNode	ENTRY		3489032		True				
ANR	3489202	CFGExitNode	EXIT		3489032		True				
ANR	3489203	Symbol	NQTFR ( node ) -> head_exact		3489032						
ANR	3489204	Symbol	NQTFR ( node ) -> target		3489032						
ANR	3489205	Symbol	NQ_TARGET_ISNOT_EMPTY		3489032						
ANR	3489206	Symbol	NULL		3489032						
ANR	3489207	Symbol	NQTFR ( node ) -> upper		3489032						
ANR	3489208	Symbol	NQTFR ( node ) -> lower		3489032						
ANR	3489209	Symbol	lower		3489032						
ANR	3489210	Symbol	upper		3489032						
ANR	3489211	Symbol	NQTFR ( node ) -> is_refered		3489032						
ANR	3489212	Symbol	NQTFR		3489032						
ANR	3489213	Symbol	NQTFR ( node ) -> next_head_exact		3489032						
ANR	3489214	Symbol	node		3489032						
ANR	3489215	Symbol	NQTFR ( node ) -> state		3489032						
ANR	3489216	Symbol	NT_QTFR		3489032						
ANR	3489217	Symbol	* NQTFR		3489032						
ANR	3489218	Symbol	node_new		3489032						
ANR	3489219	Symbol	NQTFR ( node ) -> greedy		3489032						
ANR	3489220	Symbol	NQTFR ( node ) -> comb_exp_check_num		3489032						
ANR	3489221	Symbol	by_number		3489032						
ANR	3489222	Symbol	NST_BY_NUMBER		3489032						
ANR	3489223	Symbol	NULL_NODE		3489032						
ANR	3489224	Symbol	NQTFR ( node ) -> target_empty_info		3489032						
ANR	3489225	Function	node_new_enclose	1373:0:29586:29971							
ANR	3489226	FunctionDef	node_new_enclose (int type)		3489225	0					
ANR	3489227	CompoundStatement		1375:0:29626:29971	3489225	0					
ANR	3489228	IdentifierDeclStatement	Node * node = node_new ( ) ;	1376:2:29630:29653	3489225	0	True				
ANR	3489229	IdentifierDecl	* node = node_new ( )		3489225	0					
ANR	3489230	IdentifierDeclType	Node *		3489225	0					
ANR	3489231	Identifier	node		3489225	1					
ANR	3489232	AssignmentExpression	* node = node_new ( )		3489225	2		=			
ANR	3489233	Identifier	node		3489225	0					
ANR	3489234	CallExpression	node_new ( )		3489225	1					
ANR	3489235	Callee	node_new		3489225	0					
ANR	3489236	Identifier	node_new		3489225	0					
ANR	3489237	ArgumentList			3489225	1					
ANR	3489238	ExpressionStatement	CHECK_NULL_RETURN ( node )	1377:2:29657:29680	3489225	1	True				
ANR	3489239	CallExpression	CHECK_NULL_RETURN ( node )		3489225	0					
ANR	3489240	Callee	CHECK_NULL_RETURN		3489225	0					
ANR	3489241	Identifier	CHECK_NULL_RETURN		3489225	0					
ANR	3489242	ArgumentList	node		3489225	1					
ANR	3489243	Argument	node		3489225	0					
ANR	3489244	Identifier	node		3489225	0					
ANR	3489245	ExpressionStatement	"SET_NTYPE ( node , NT_ENCLOSE )"	1379:2:29685:29712	3489225	2	True				
ANR	3489246	CallExpression	"SET_NTYPE ( node , NT_ENCLOSE )"		3489225	0					
ANR	3489247	Callee	SET_NTYPE		3489225	0					
ANR	3489248	Identifier	SET_NTYPE		3489225	0					
ANR	3489249	ArgumentList	node		3489225	1					
ANR	3489250	Argument	node		3489225	0					
ANR	3489251	Identifier	node		3489225	0					
ANR	3489252	Argument	NT_ENCLOSE		3489225	1					
ANR	3489253	Identifier	NT_ENCLOSE		3489225	0					
ANR	3489254	ExpressionStatement	NENCLOSE ( node ) -> type = type	1380:2:29716:29748	3489225	3	True				
ANR	3489255	AssignmentExpression	NENCLOSE ( node ) -> type = type		3489225	0		=			
ANR	3489256	PtrMemberAccess	NENCLOSE ( node ) -> type		3489225	0					
ANR	3489257	CallExpression	NENCLOSE ( node )		3489225	0					
ANR	3489258	Callee	NENCLOSE		3489225	0					
ANR	3489259	Identifier	NENCLOSE		3489225	0					
ANR	3489260	ArgumentList	node		3489225	1					
ANR	3489261	Argument	node		3489225	0					
ANR	3489262	Identifier	node		3489225	0					
ANR	3489263	Identifier	type		3489225	1					
ANR	3489264	Identifier	type		3489225	1					
ANR	3489265	ExpressionStatement	NENCLOSE ( node ) -> state = 0	1381:2:29752:29782	3489225	4	True				
ANR	3489266	AssignmentExpression	NENCLOSE ( node ) -> state = 0		3489225	0		=			
ANR	3489267	PtrMemberAccess	NENCLOSE ( node ) -> state		3489225	0					
ANR	3489268	CallExpression	NENCLOSE ( node )		3489225	0					
ANR	3489269	Callee	NENCLOSE		3489225	0					
ANR	3489270	Identifier	NENCLOSE		3489225	0					
ANR	3489271	ArgumentList	node		3489225	1					
ANR	3489272	Argument	node		3489225	0					
ANR	3489273	Identifier	node		3489225	0					
ANR	3489274	Identifier	state		3489225	1					
ANR	3489275	PrimaryExpression	0		3489225	1					
ANR	3489276	ExpressionStatement	NENCLOSE ( node ) -> regnum = 0	1382:2:29786:29816	3489225	5	True				
ANR	3489277	AssignmentExpression	NENCLOSE ( node ) -> regnum = 0		3489225	0		=			
ANR	3489278	PtrMemberAccess	NENCLOSE ( node ) -> regnum		3489225	0					
ANR	3489279	CallExpression	NENCLOSE ( node )		3489225	0					
ANR	3489280	Callee	NENCLOSE		3489225	0					
ANR	3489281	Identifier	NENCLOSE		3489225	0					
ANR	3489282	ArgumentList	node		3489225	1					
ANR	3489283	Argument	node		3489225	0					
ANR	3489284	Identifier	node		3489225	0					
ANR	3489285	Identifier	regnum		3489225	1					
ANR	3489286	PrimaryExpression	0		3489225	1					
ANR	3489287	ExpressionStatement	NENCLOSE ( node ) -> option = 0	1383:2:29820:29850	3489225	6	True				
ANR	3489288	AssignmentExpression	NENCLOSE ( node ) -> option = 0		3489225	0		=			
ANR	3489289	PtrMemberAccess	NENCLOSE ( node ) -> option		3489225	0					
ANR	3489290	CallExpression	NENCLOSE ( node )		3489225	0					
ANR	3489291	Callee	NENCLOSE		3489225	0					
ANR	3489292	Identifier	NENCLOSE		3489225	0					
ANR	3489293	ArgumentList	node		3489225	1					
ANR	3489294	Argument	node		3489225	0					
ANR	3489295	Identifier	node		3489225	0					
ANR	3489296	Identifier	option		3489225	1					
ANR	3489297	PrimaryExpression	0		3489225	1					
ANR	3489298	ExpressionStatement	NENCLOSE ( node ) -> target = NULL	1384:2:29854:29886	3489225	7	True				
ANR	3489299	AssignmentExpression	NENCLOSE ( node ) -> target = NULL		3489225	0		=			
ANR	3489300	PtrMemberAccess	NENCLOSE ( node ) -> target		3489225	0					
ANR	3489301	CallExpression	NENCLOSE ( node )		3489225	0					
ANR	3489302	Callee	NENCLOSE		3489225	0					
ANR	3489303	Identifier	NENCLOSE		3489225	0					
ANR	3489304	ArgumentList	node		3489225	1					
ANR	3489305	Argument	node		3489225	0					
ANR	3489306	Identifier	node		3489225	0					
ANR	3489307	Identifier	target		3489225	1					
ANR	3489308	Identifier	NULL		3489225	1					
ANR	3489309	ExpressionStatement	NENCLOSE ( node ) -> call_addr = - 1	1385:2:29890:29920	3489225	8	True				
ANR	3489310	AssignmentExpression	NENCLOSE ( node ) -> call_addr = - 1		3489225	0		=			
ANR	3489311	PtrMemberAccess	NENCLOSE ( node ) -> call_addr		3489225	0					
ANR	3489312	CallExpression	NENCLOSE ( node )		3489225	0					
ANR	3489313	Callee	NENCLOSE		3489225	0					
ANR	3489314	Identifier	NENCLOSE		3489225	0					
ANR	3489315	ArgumentList	node		3489225	1					
ANR	3489316	Argument	node		3489225	0					
ANR	3489317	Identifier	node		3489225	0					
ANR	3489318	Identifier	call_addr		3489225	1					
ANR	3489319	UnaryOperationExpression	- 1		3489225	1					
ANR	3489320	UnaryOperator	-		3489225	0					
ANR	3489321	PrimaryExpression	1		3489225	1					
ANR	3489322	ExpressionStatement	NENCLOSE ( node ) -> opt_count = 0	1386:2:29924:29954	3489225	9	True				
ANR	3489323	AssignmentExpression	NENCLOSE ( node ) -> opt_count = 0		3489225	0		=			
ANR	3489324	PtrMemberAccess	NENCLOSE ( node ) -> opt_count		3489225	0					
ANR	3489325	CallExpression	NENCLOSE ( node )		3489225	0					
ANR	3489326	Callee	NENCLOSE		3489225	0					
ANR	3489327	Identifier	NENCLOSE		3489225	0					
ANR	3489328	ArgumentList	node		3489225	1					
ANR	3489329	Argument	node		3489225	0					
ANR	3489330	Identifier	node		3489225	0					
ANR	3489331	Identifier	opt_count		3489225	1					
ANR	3489332	PrimaryExpression	0		3489225	1					
ANR	3489333	ReturnStatement	return node ;	1387:2:29958:29969	3489225	10	True				
ANR	3489334	Identifier	node		3489225	0					
ANR	3489335	ReturnType	static Node *		3489225	1					
ANR	3489336	Identifier	node_new_enclose		3489225	2					
ANR	3489337	ParameterList	int type		3489225	3					
ANR	3489338	Parameter	int type	1374:17:29616:29623	3489225	0	True				
ANR	3489339	ParameterType	int		3489225	0					
ANR	3489340	Identifier	type		3489225	1					
ANR	3489341	CFGEntryNode	ENTRY		3489225		True				
ANR	3489342	CFGExitNode	EXIT		3489225		True				
ANR	3489343	Symbol	NULL		3489225						
ANR	3489344	Symbol	* NENCLOSE		3489225						
ANR	3489345	Symbol	NENCLOSE ( node ) -> opt_count		3489225						
ANR	3489346	Symbol	NENCLOSE ( node ) -> call_addr		3489225						
ANR	3489347	Symbol	NENCLOSE ( node ) -> type		3489225						
ANR	3489348	Symbol	type		3489225						
ANR	3489349	Symbol	NENCLOSE ( node ) -> target		3489225						
ANR	3489350	Symbol	node		3489225						
ANR	3489351	Symbol	NENCLOSE ( node ) -> regnum		3489225						
ANR	3489352	Symbol	node_new		3489225						
ANR	3489353	Symbol	NT_ENCLOSE		3489225						
ANR	3489354	Symbol	NENCLOSE		3489225						
ANR	3489355	Symbol	NENCLOSE ( node ) -> state		3489225						
ANR	3489356	Symbol	NENCLOSE ( node ) -> option		3489225						
ANR	3489357	Function	onig_node_new_enclose	1390:0:29974:30054							
ANR	3489358	FunctionDef	onig_node_new_enclose (int type)		3489357	0					
ANR	3489359	CompoundStatement		1392:0:30019:30054	3489357	0					
ANR	3489360	ReturnStatement	return node_new_enclose ( type ) ;	1393:2:30023:30052	3489357	0	True				
ANR	3489361	CallExpression	node_new_enclose ( type )		3489357	0					
ANR	3489362	Callee	node_new_enclose		3489357	0					
ANR	3489363	Identifier	node_new_enclose		3489357	0					
ANR	3489364	ArgumentList	type		3489357	1					
ANR	3489365	Argument	type		3489357	0					
ANR	3489366	Identifier	type		3489357	0					
ANR	3489367	ReturnType	extern Node *		3489357	1					
ANR	3489368	Identifier	onig_node_new_enclose		3489357	2					
ANR	3489369	ParameterList	int type		3489357	3					
ANR	3489370	Parameter	int type	1391:22:30009:30016	3489357	0	True				
ANR	3489371	ParameterType	int		3489357	0					
ANR	3489372	Identifier	type		3489357	1					
ANR	3489373	CFGEntryNode	ENTRY		3489357		True				
ANR	3489374	CFGExitNode	EXIT		3489357		True				
ANR	3489375	Symbol	type		3489357						
ANR	3489376	Symbol	node_new_enclose		3489357						
ANR	3489377	Function	node_new_enclose_memory	1396:0:30057:30358							
ANR	3489378	FunctionDef	"node_new_enclose_memory (OnigOptionType option , int is_named)"		3489377	0					
ANR	3489379	CompoundStatement		1398:0:30131:30358	3489377	0					
ANR	3489380	IdentifierDeclStatement	Node * node = node_new_enclose ( ENCLOSE_MEMORY ) ;	1399:2:30135:30180	3489377	0	True				
ANR	3489381	IdentifierDecl	* node = node_new_enclose ( ENCLOSE_MEMORY )		3489377	0					
ANR	3489382	IdentifierDeclType	Node *		3489377	0					
ANR	3489383	Identifier	node		3489377	1					
ANR	3489384	AssignmentExpression	* node = node_new_enclose ( ENCLOSE_MEMORY )		3489377	2		=			
ANR	3489385	Identifier	node		3489377	0					
ANR	3489386	CallExpression	node_new_enclose ( ENCLOSE_MEMORY )		3489377	1					
ANR	3489387	Callee	node_new_enclose		3489377	0					
ANR	3489388	Identifier	node_new_enclose		3489377	0					
ANR	3489389	ArgumentList	ENCLOSE_MEMORY		3489377	1					
ANR	3489390	Argument	ENCLOSE_MEMORY		3489377	0					
ANR	3489391	Identifier	ENCLOSE_MEMORY		3489377	0					
ANR	3489392	ExpressionStatement	CHECK_NULL_RETURN ( node )	1400:2:30184:30207	3489377	1	True				
ANR	3489393	CallExpression	CHECK_NULL_RETURN ( node )		3489377	0					
ANR	3489394	Callee	CHECK_NULL_RETURN		3489377	0					
ANR	3489395	Identifier	CHECK_NULL_RETURN		3489377	0					
ANR	3489396	ArgumentList	node		3489377	1					
ANR	3489397	Argument	node		3489377	0					
ANR	3489398	Identifier	node		3489377	0					
ANR	3489399	IfStatement	if ( is_named != 0 )		3489377	2					
ANR	3489400	Condition	is_named != 0	1401:6:30215:30227	3489377	0	True				
ANR	3489401	EqualityExpression	is_named != 0		3489377	0		!=			
ANR	3489402	Identifier	is_named		3489377	0					
ANR	3489403	PrimaryExpression	0		3489377	1					
ANR	3489404	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_NAMED_GROUP )"	1402:4:30234:30275	3489377	1	True				
ANR	3489405	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_NAMED_GROUP )"		3489377	0					
ANR	3489406	Callee	SET_ENCLOSE_STATUS		3489377	0					
ANR	3489407	Identifier	SET_ENCLOSE_STATUS		3489377	0					
ANR	3489408	ArgumentList	node		3489377	1					
ANR	3489409	Argument	node		3489377	0					
ANR	3489410	Identifier	node		3489377	0					
ANR	3489411	Argument	NST_NAMED_GROUP		3489377	1					
ANR	3489412	Identifier	NST_NAMED_GROUP		3489377	0					
ANR	3489413	ExpressionStatement	NENCLOSE ( node ) -> option = option	1405:2:30303:30334	3489377	3	True				
ANR	3489414	AssignmentExpression	NENCLOSE ( node ) -> option = option		3489377	0		=			
ANR	3489415	PtrMemberAccess	NENCLOSE ( node ) -> option		3489377	0					
ANR	3489416	CallExpression	NENCLOSE ( node )		3489377	0					
ANR	3489417	Callee	NENCLOSE		3489377	0					
ANR	3489418	Identifier	NENCLOSE		3489377	0					
ANR	3489419	ArgumentList	node		3489377	1					
ANR	3489420	Argument	node		3489377	0					
ANR	3489421	Identifier	node		3489377	0					
ANR	3489422	Identifier	option		3489377	1					
ANR	3489423	Identifier	option		3489377	1					
ANR	3489424	ReturnStatement	return node ;	1407:2:30345:30356	3489377	4	True				
ANR	3489425	Identifier	node		3489377	0					
ANR	3489426	ReturnType	static Node *		3489377	1					
ANR	3489427	Identifier	node_new_enclose_memory		3489377	2					
ANR	3489428	ParameterList	"OnigOptionType option , int is_named"		3489377	3					
ANR	3489429	Parameter	OnigOptionType option	1397:24:30094:30114	3489377	0	True				
ANR	3489430	ParameterType	OnigOptionType		3489377	0					
ANR	3489431	Identifier	option		3489377	1					
ANR	3489432	Parameter	int is_named	1397:47:30117:30128	3489377	1	True				
ANR	3489433	ParameterType	int		3489377	0					
ANR	3489434	Identifier	is_named		3489377	1					
ANR	3489435	CFGEntryNode	ENTRY		3489377		True				
ANR	3489436	CFGExitNode	EXIT		3489377		True				
ANR	3489437	Symbol	node		3489377						
ANR	3489438	Symbol	NST_NAMED_GROUP		3489377						
ANR	3489439	Symbol	is_named		3489377						
ANR	3489440	Symbol	ENCLOSE_MEMORY		3489377						
ANR	3489441	Symbol	* NENCLOSE		3489377						
ANR	3489442	Symbol	NENCLOSE		3489377						
ANR	3489443	Symbol	node_new_enclose		3489377						
ANR	3489444	Symbol	NENCLOSE ( node ) -> option		3489377						
ANR	3489445	Symbol	option		3489377						
ANR	3489446	Function	node_new_option	1410:0:30361:30541							
ANR	3489447	FunctionDef	node_new_option (OnigOptionType option)		3489446	0					
ANR	3489448	CompoundStatement		1412:0:30413:30541	3489446	0					
ANR	3489449	IdentifierDeclStatement	Node * node = node_new_enclose ( ENCLOSE_OPTION ) ;	1413:2:30417:30462	3489446	0	True				
ANR	3489450	IdentifierDecl	* node = node_new_enclose ( ENCLOSE_OPTION )		3489446	0					
ANR	3489451	IdentifierDeclType	Node *		3489446	0					
ANR	3489452	Identifier	node		3489446	1					
ANR	3489453	AssignmentExpression	* node = node_new_enclose ( ENCLOSE_OPTION )		3489446	2		=			
ANR	3489454	Identifier	node		3489446	0					
ANR	3489455	CallExpression	node_new_enclose ( ENCLOSE_OPTION )		3489446	1					
ANR	3489456	Callee	node_new_enclose		3489446	0					
ANR	3489457	Identifier	node_new_enclose		3489446	0					
ANR	3489458	ArgumentList	ENCLOSE_OPTION		3489446	1					
ANR	3489459	Argument	ENCLOSE_OPTION		3489446	0					
ANR	3489460	Identifier	ENCLOSE_OPTION		3489446	0					
ANR	3489461	ExpressionStatement	CHECK_NULL_RETURN ( node )	1414:2:30466:30489	3489446	1	True				
ANR	3489462	CallExpression	CHECK_NULL_RETURN ( node )		3489446	0					
ANR	3489463	Callee	CHECK_NULL_RETURN		3489446	0					
ANR	3489464	Identifier	CHECK_NULL_RETURN		3489446	0					
ANR	3489465	ArgumentList	node		3489446	1					
ANR	3489466	Argument	node		3489446	0					
ANR	3489467	Identifier	node		3489446	0					
ANR	3489468	ExpressionStatement	NENCLOSE ( node ) -> option = option	1415:2:30493:30524	3489446	2	True				
ANR	3489469	AssignmentExpression	NENCLOSE ( node ) -> option = option		3489446	0		=			
ANR	3489470	PtrMemberAccess	NENCLOSE ( node ) -> option		3489446	0					
ANR	3489471	CallExpression	NENCLOSE ( node )		3489446	0					
ANR	3489472	Callee	NENCLOSE		3489446	0					
ANR	3489473	Identifier	NENCLOSE		3489446	0					
ANR	3489474	ArgumentList	node		3489446	1					
ANR	3489475	Argument	node		3489446	0					
ANR	3489476	Identifier	node		3489446	0					
ANR	3489477	Identifier	option		3489446	1					
ANR	3489478	Identifier	option		3489446	1					
ANR	3489479	ReturnStatement	return node ;	1416:2:30528:30539	3489446	3	True				
ANR	3489480	Identifier	node		3489446	0					
ANR	3489481	ReturnType	static Node *		3489446	1					
ANR	3489482	Identifier	node_new_option		3489446	2					
ANR	3489483	ParameterList	OnigOptionType option		3489446	3					
ANR	3489484	Parameter	OnigOptionType option	1411:16:30390:30410	3489446	0	True				
ANR	3489485	ParameterType	OnigOptionType		3489446	0					
ANR	3489486	Identifier	option		3489446	1					
ANR	3489487	CFGEntryNode	ENTRY		3489446		True				
ANR	3489488	CFGExitNode	EXIT		3489446		True				
ANR	3489489	Symbol	node		3489446						
ANR	3489490	Symbol	* NENCLOSE		3489446						
ANR	3489491	Symbol	NENCLOSE		3489446						
ANR	3489492	Symbol	ENCLOSE_OPTION		3489446						
ANR	3489493	Symbol	node_new_enclose		3489446						
ANR	3489494	Symbol	NENCLOSE ( node ) -> option		3489446						
ANR	3489495	Symbol	option		3489446						
ANR	3489496	Function	onig_node_str_cat	1419:0:30544:31384							
ANR	3489497	FunctionDef	"onig_node_str_cat (Node * node , const UChar * s , const UChar * end)"		3489496	0					
ANR	3489498	CompoundStatement		1421:0:30619:31384	3489496	0					
ANR	3489499	IdentifierDeclStatement	int addlen = end - s ;	1422:2:30623:30643	3489496	0	True				
ANR	3489500	IdentifierDecl	addlen = end - s		3489496	0					
ANR	3489501	IdentifierDeclType	int		3489496	0					
ANR	3489502	Identifier	addlen		3489496	1					
ANR	3489503	AssignmentExpression	addlen = end - s		3489496	2		=			
ANR	3489504	Identifier	addlen		3489496	0					
ANR	3489505	AdditiveExpression	end - s		3489496	1		-			
ANR	3489506	Identifier	end		3489496	0					
ANR	3489507	Identifier	s		3489496	1					
ANR	3489508	IfStatement	if ( addlen > 0 )		3489496	1					
ANR	3489509	Condition	addlen > 0	1424:6:30652:30661	3489496	0	True				
ANR	3489510	RelationalExpression	addlen > 0		3489496	0		>			
ANR	3489511	Identifier	addlen		3489496	0					
ANR	3489512	PrimaryExpression	0		3489496	1					
ANR	3489513	CompoundStatement		5:4:50:92	3489496	1					
ANR	3489514	IdentifierDeclStatement	int len = NSTR ( node ) -> end - NSTR ( node ) -> s ;	1425:4:30670:30712	3489496	0	True				
ANR	3489515	IdentifierDecl	len = NSTR ( node ) -> end - NSTR ( node ) -> s		3489496	0					
ANR	3489516	IdentifierDeclType	int		3489496	0					
ANR	3489517	Identifier	len		3489496	1					
ANR	3489518	AssignmentExpression	len = NSTR ( node ) -> end - NSTR ( node ) -> s		3489496	2		=			
ANR	3489519	Identifier	len		3489496	0					
ANR	3489520	AdditiveExpression	NSTR ( node ) -> end - NSTR ( node ) -> s		3489496	1		-			
ANR	3489521	PtrMemberAccess	NSTR ( node ) -> end		3489496	0					
ANR	3489522	CallExpression	NSTR ( node )		3489496	0					
ANR	3489523	Callee	NSTR		3489496	0					
ANR	3489524	Identifier	NSTR		3489496	0					
ANR	3489525	ArgumentList	node		3489496	1					
ANR	3489526	Argument	node		3489496	0					
ANR	3489527	Identifier	node		3489496	0					
ANR	3489528	Identifier	end		3489496	1					
ANR	3489529	PtrMemberAccess	NSTR ( node ) -> s		3489496	1					
ANR	3489530	CallExpression	NSTR ( node )		3489496	0					
ANR	3489531	Callee	NSTR		3489496	0					
ANR	3489532	Identifier	NSTR		3489496	0					
ANR	3489533	ArgumentList	node		3489496	1					
ANR	3489534	Argument	node		3489496	0					
ANR	3489535	Identifier	node		3489496	0					
ANR	3489536	Identifier	s		3489496	1					
ANR	3489537	IfStatement	if ( NSTR ( node ) -> capa > 0 || ( len + addlen > NODE_STR_BUF_SIZE - 1 ) )		3489496	1					
ANR	3489538	Condition	NSTR ( node ) -> capa > 0 || ( len + addlen > NODE_STR_BUF_SIZE - 1 )	1427:8:30723:30784	3489496	0	True				
ANR	3489539	OrExpression	NSTR ( node ) -> capa > 0 || ( len + addlen > NODE_STR_BUF_SIZE - 1 )		3489496	0		||			
ANR	3489540	RelationalExpression	NSTR ( node ) -> capa > 0		3489496	0		>			
ANR	3489541	PtrMemberAccess	NSTR ( node ) -> capa		3489496	0					
ANR	3489542	CallExpression	NSTR ( node )		3489496	0					
ANR	3489543	Callee	NSTR		3489496	0					
ANR	3489544	Identifier	NSTR		3489496	0					
ANR	3489545	ArgumentList	node		3489496	1					
ANR	3489546	Argument	node		3489496	0					
ANR	3489547	Identifier	node		3489496	0					
ANR	3489548	Identifier	capa		3489496	1					
ANR	3489549	PrimaryExpression	0		3489496	1					
ANR	3489550	RelationalExpression	len + addlen > NODE_STR_BUF_SIZE - 1		3489496	1		>			
ANR	3489551	AdditiveExpression	len + addlen		3489496	0		+			
ANR	3489552	Identifier	len		3489496	0					
ANR	3489553	Identifier	addlen		3489496	1					
ANR	3489554	AdditiveExpression	NODE_STR_BUF_SIZE - 1		3489496	1		-			
ANR	3489555	Identifier	NODE_STR_BUF_SIZE		3489496	0					
ANR	3489556	PrimaryExpression	1		3489496	1					
ANR	3489557	CompoundStatement		9:6:191:232	3489496	1					
ANR	3489558	IdentifierDeclStatement	UChar * p ;	1428:6:30795:30803	3489496	0	True				
ANR	3489559	IdentifierDecl	* p		3489496	0					
ANR	3489560	IdentifierDeclType	UChar *		3489496	0					
ANR	3489561	Identifier	p		3489496	1					
ANR	3489562	IdentifierDeclStatement	int capa = len + addlen + NODE_STR_MARGIN ;	1429:6:30811:30852	3489496	1	True				
ANR	3489563	IdentifierDecl	capa = len + addlen + NODE_STR_MARGIN		3489496	0					
ANR	3489564	IdentifierDeclType	int		3489496	0					
ANR	3489565	Identifier	capa		3489496	1					
ANR	3489566	AssignmentExpression	capa = len + addlen + NODE_STR_MARGIN		3489496	2		=			
ANR	3489567	Identifier	capa		3489496	0					
ANR	3489568	AdditiveExpression	len + addlen + NODE_STR_MARGIN		3489496	1		+			
ANR	3489569	Identifier	len		3489496	0					
ANR	3489570	AdditiveExpression	addlen + NODE_STR_MARGIN		3489496	1		+			
ANR	3489571	Identifier	addlen		3489496	0					
ANR	3489572	Identifier	NODE_STR_MARGIN		3489496	1					
ANR	3489573	IfStatement	if ( capa <= NSTR ( node ) -> capa )		3489496	2					
ANR	3489574	Condition	capa <= NSTR ( node ) -> capa	1431:10:30865:30888	3489496	0	True				
ANR	3489575	RelationalExpression	capa <= NSTR ( node ) -> capa		3489496	0		<=			
ANR	3489576	Identifier	capa		3489496	0					
ANR	3489577	PtrMemberAccess	NSTR ( node ) -> capa		3489496	1					
ANR	3489578	CallExpression	NSTR ( node )		3489496	0					
ANR	3489579	Callee	NSTR		3489496	0					
ANR	3489580	Identifier	NSTR		3489496	0					
ANR	3489581	ArgumentList	node		3489496	1					
ANR	3489582	Argument	node		3489496	0					
ANR	3489583	Identifier	node		3489496	0					
ANR	3489584	Identifier	capa		3489496	1					
ANR	3489585	CompoundStatement		11:36:271:271	3489496	1					
ANR	3489586	ExpressionStatement	"onig_strcpy ( NSTR ( node ) -> s + len , s , end )"	1432:1:30894:30934	3489496	0	True				
ANR	3489587	CallExpression	"onig_strcpy ( NSTR ( node ) -> s + len , s , end )"		3489496	0					
ANR	3489588	Callee	onig_strcpy		3489496	0					
ANR	3489589	Identifier	onig_strcpy		3489496	0					
ANR	3489590	ArgumentList	NSTR ( node ) -> s + len		3489496	1					
ANR	3489591	Argument	NSTR ( node ) -> s + len		3489496	0					
ANR	3489592	AdditiveExpression	NSTR ( node ) -> s + len		3489496	0		+			
ANR	3489593	PtrMemberAccess	NSTR ( node ) -> s		3489496	0					
ANR	3489594	CallExpression	NSTR ( node )		3489496	0					
ANR	3489595	Callee	NSTR		3489496	0					
ANR	3489596	Identifier	NSTR		3489496	0					
ANR	3489597	ArgumentList	node		3489496	1					
ANR	3489598	Argument	node		3489496	0					
ANR	3489599	Identifier	node		3489496	0					
ANR	3489600	Identifier	s		3489496	1					
ANR	3489601	Identifier	len		3489496	1					
ANR	3489602	Argument	s		3489496	1					
ANR	3489603	Identifier	s		3489496	0					
ANR	3489604	Argument	end		3489496	2					
ANR	3489605	Identifier	end		3489496	0					
ANR	3489606	ElseStatement	else		3489496	0					
ANR	3489607	CompoundStatement		14:11:335:335	3489496	0					
ANR	3489608	IfStatement	if ( NSTR ( node ) -> s == NSTR ( node ) -> buf )		3489496	0					
ANR	3489609	Condition	NSTR ( node ) -> s == NSTR ( node ) -> buf	1435:5:30962:30993	3489496	0	True				
ANR	3489610	EqualityExpression	NSTR ( node ) -> s == NSTR ( node ) -> buf		3489496	0		==			
ANR	3489611	PtrMemberAccess	NSTR ( node ) -> s		3489496	0					
ANR	3489612	CallExpression	NSTR ( node )		3489496	0					
ANR	3489613	Callee	NSTR		3489496	0					
ANR	3489614	Identifier	NSTR		3489496	0					
ANR	3489615	ArgumentList	node		3489496	1					
ANR	3489616	Argument	node		3489496	0					
ANR	3489617	Identifier	node		3489496	0					
ANR	3489618	Identifier	s		3489496	1					
ANR	3489619	PtrMemberAccess	NSTR ( node ) -> buf		3489496	1					
ANR	3489620	CallExpression	NSTR ( node )		3489496	0					
ANR	3489621	Callee	NSTR		3489496	0					
ANR	3489622	Identifier	NSTR		3489496	0					
ANR	3489623	ArgumentList	node		3489496	1					
ANR	3489624	Argument	node		3489496	0					
ANR	3489625	Identifier	node		3489496	0					
ANR	3489626	Identifier	buf		3489496	1					
ANR	3489627	ExpressionStatement	"p = strcat_capa_from_static ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"	1436:3:30999:31082	3489496	1	True				
ANR	3489628	AssignmentExpression	"p = strcat_capa_from_static ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"		3489496	0		=			
ANR	3489629	Identifier	p		3489496	0					
ANR	3489630	CallExpression	"strcat_capa_from_static ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"		3489496	1					
ANR	3489631	Callee	strcat_capa_from_static		3489496	0					
ANR	3489632	Identifier	strcat_capa_from_static		3489496	0					
ANR	3489633	ArgumentList	NSTR ( node ) -> s		3489496	1					
ANR	3489634	Argument	NSTR ( node ) -> s		3489496	0					
ANR	3489635	PtrMemberAccess	NSTR ( node ) -> s		3489496	0					
ANR	3489636	CallExpression	NSTR ( node )		3489496	0					
ANR	3489637	Callee	NSTR		3489496	0					
ANR	3489638	Identifier	NSTR		3489496	0					
ANR	3489639	ArgumentList	node		3489496	1					
ANR	3489640	Argument	node		3489496	0					
ANR	3489641	Identifier	node		3489496	0					
ANR	3489642	Identifier	s		3489496	1					
ANR	3489643	Argument	NSTR ( node ) -> end		3489496	1					
ANR	3489644	PtrMemberAccess	NSTR ( node ) -> end		3489496	0					
ANR	3489645	CallExpression	NSTR ( node )		3489496	0					
ANR	3489646	Callee	NSTR		3489496	0					
ANR	3489647	Identifier	NSTR		3489496	0					
ANR	3489648	ArgumentList	node		3489496	1					
ANR	3489649	Argument	node		3489496	0					
ANR	3489650	Identifier	node		3489496	0					
ANR	3489651	Identifier	end		3489496	1					
ANR	3489652	Argument	s		3489496	2					
ANR	3489653	Identifier	s		3489496	0					
ANR	3489654	Argument	end		3489496	3					
ANR	3489655	Identifier	end		3489496	0					
ANR	3489656	Argument	capa		3489496	4					
ANR	3489657	Identifier	capa		3489496	0					
ANR	3489658	ElseStatement	else		3489496	0					
ANR	3489659	ExpressionStatement	"p = strcat_capa ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"	1439:3:31093:31154	3489496	0	True				
ANR	3489660	AssignmentExpression	"p = strcat_capa ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"		3489496	0		=			
ANR	3489661	Identifier	p		3489496	0					
ANR	3489662	CallExpression	"strcat_capa ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"		3489496	1					
ANR	3489663	Callee	strcat_capa		3489496	0					
ANR	3489664	Identifier	strcat_capa		3489496	0					
ANR	3489665	ArgumentList	NSTR ( node ) -> s		3489496	1					
ANR	3489666	Argument	NSTR ( node ) -> s		3489496	0					
ANR	3489667	PtrMemberAccess	NSTR ( node ) -> s		3489496	0					
ANR	3489668	CallExpression	NSTR ( node )		3489496	0					
ANR	3489669	Callee	NSTR		3489496	0					
ANR	3489670	Identifier	NSTR		3489496	0					
ANR	3489671	ArgumentList	node		3489496	1					
ANR	3489672	Argument	node		3489496	0					
ANR	3489673	Identifier	node		3489496	0					
ANR	3489674	Identifier	s		3489496	1					
ANR	3489675	Argument	NSTR ( node ) -> end		3489496	1					
ANR	3489676	PtrMemberAccess	NSTR ( node ) -> end		3489496	0					
ANR	3489677	CallExpression	NSTR ( node )		3489496	0					
ANR	3489678	Callee	NSTR		3489496	0					
ANR	3489679	Identifier	NSTR		3489496	0					
ANR	3489680	ArgumentList	node		3489496	1					
ANR	3489681	Argument	node		3489496	0					
ANR	3489682	Identifier	node		3489496	0					
ANR	3489683	Identifier	end		3489496	1					
ANR	3489684	Argument	s		3489496	2					
ANR	3489685	Identifier	s		3489496	0					
ANR	3489686	Argument	end		3489496	3					
ANR	3489687	Identifier	end		3489496	0					
ANR	3489688	Argument	capa		3489496	4					
ANR	3489689	Identifier	capa		3489496	0					
ANR	3489690	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	1441:1:31158:31185	3489496	1	True				
ANR	3489691	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		3489496	0					
ANR	3489692	Callee	CHECK_NULL_RETURN_MEMERR		3489496	0					
ANR	3489693	Identifier	CHECK_NULL_RETURN_MEMERR		3489496	0					
ANR	3489694	ArgumentList	p		3489496	1					
ANR	3489695	Argument	p		3489496	0					
ANR	3489696	Identifier	p		3489496	0					
ANR	3489697	ExpressionStatement	NSTR ( node ) -> s = p	1442:1:31188:31208	3489496	2	True				
ANR	3489698	AssignmentExpression	NSTR ( node ) -> s = p		3489496	0		=			
ANR	3489699	PtrMemberAccess	NSTR ( node ) -> s		3489496	0					
ANR	3489700	CallExpression	NSTR ( node )		3489496	0					
ANR	3489701	Callee	NSTR		3489496	0					
ANR	3489702	Identifier	NSTR		3489496	0					
ANR	3489703	ArgumentList	node		3489496	1					
ANR	3489704	Argument	node		3489496	0					
ANR	3489705	Identifier	node		3489496	0					
ANR	3489706	Identifier	s		3489496	1					
ANR	3489707	Identifier	p		3489496	1					
ANR	3489708	ExpressionStatement	NSTR ( node ) -> capa = capa	1443:1:31211:31234	3489496	3	True				
ANR	3489709	AssignmentExpression	NSTR ( node ) -> capa = capa		3489496	0		=			
ANR	3489710	PtrMemberAccess	NSTR ( node ) -> capa		3489496	0					
ANR	3489711	CallExpression	NSTR ( node )		3489496	0					
ANR	3489712	Callee	NSTR		3489496	0					
ANR	3489713	Identifier	NSTR		3489496	0					
ANR	3489714	ArgumentList	node		3489496	1					
ANR	3489715	Argument	node		3489496	0					
ANR	3489716	Identifier	node		3489496	0					
ANR	3489717	Identifier	capa		3489496	1					
ANR	3489718	Identifier	capa		3489496	1					
ANR	3489719	ElseStatement	else		3489496	0					
ANR	3489720	CompoundStatement		26:9:639:639	3489496	0					
ANR	3489721	ExpressionStatement	"onig_strcpy ( NSTR ( node ) -> s + len , s , end )"	1447:6:31267:31307	3489496	0	True				
ANR	3489722	CallExpression	"onig_strcpy ( NSTR ( node ) -> s + len , s , end )"		3489496	0					
ANR	3489723	Callee	onig_strcpy		3489496	0					
ANR	3489724	Identifier	onig_strcpy		3489496	0					
ANR	3489725	ArgumentList	NSTR ( node ) -> s + len		3489496	1					
ANR	3489726	Argument	NSTR ( node ) -> s + len		3489496	0					
ANR	3489727	AdditiveExpression	NSTR ( node ) -> s + len		3489496	0		+			
ANR	3489728	PtrMemberAccess	NSTR ( node ) -> s		3489496	0					
ANR	3489729	CallExpression	NSTR ( node )		3489496	0					
ANR	3489730	Callee	NSTR		3489496	0					
ANR	3489731	Identifier	NSTR		3489496	0					
ANR	3489732	ArgumentList	node		3489496	1					
ANR	3489733	Argument	node		3489496	0					
ANR	3489734	Identifier	node		3489496	0					
ANR	3489735	Identifier	s		3489496	1					
ANR	3489736	Identifier	len		3489496	1					
ANR	3489737	Argument	s		3489496	1					
ANR	3489738	Identifier	s		3489496	0					
ANR	3489739	Argument	end		3489496	2					
ANR	3489740	Identifier	end		3489496	0					
ANR	3489741	ExpressionStatement	NSTR ( node ) -> end = NSTR ( node ) -> s + len + addlen	1449:4:31319:31365	3489496	2	True				
ANR	3489742	AssignmentExpression	NSTR ( node ) -> end = NSTR ( node ) -> s + len + addlen		3489496	0		=			
ANR	3489743	PtrMemberAccess	NSTR ( node ) -> end		3489496	0					
ANR	3489744	CallExpression	NSTR ( node )		3489496	0					
ANR	3489745	Callee	NSTR		3489496	0					
ANR	3489746	Identifier	NSTR		3489496	0					
ANR	3489747	ArgumentList	node		3489496	1					
ANR	3489748	Argument	node		3489496	0					
ANR	3489749	Identifier	node		3489496	0					
ANR	3489750	Identifier	end		3489496	1					
ANR	3489751	AdditiveExpression	NSTR ( node ) -> s + len + addlen		3489496	1		+			
ANR	3489752	PtrMemberAccess	NSTR ( node ) -> s		3489496	0					
ANR	3489753	CallExpression	NSTR ( node )		3489496	0					
ANR	3489754	Callee	NSTR		3489496	0					
ANR	3489755	Identifier	NSTR		3489496	0					
ANR	3489756	ArgumentList	node		3489496	1					
ANR	3489757	Argument	node		3489496	0					
ANR	3489758	Identifier	node		3489496	0					
ANR	3489759	Identifier	s		3489496	1					
ANR	3489760	AdditiveExpression	len + addlen		3489496	1		+			
ANR	3489761	Identifier	len		3489496	0					
ANR	3489762	Identifier	addlen		3489496	1					
ANR	3489763	ReturnStatement	return 0 ;	1452:2:31374:31382	3489496	2	True				
ANR	3489764	PrimaryExpression	0		3489496	0					
ANR	3489765	ReturnType	extern int		3489496	1					
ANR	3489766	Identifier	onig_node_str_cat		3489496	2					
ANR	3489767	ParameterList	"Node * node , const UChar * s , const UChar * end"		3489496	3					
ANR	3489768	Parameter	Node * node	1420:18:30573:30582	3489496	0	True				
ANR	3489769	ParameterType	Node *		3489496	0					
ANR	3489770	Identifier	node		3489496	1					
ANR	3489771	Parameter	const UChar * s	1420:30:30585:30598	3489496	1	True				
ANR	3489772	ParameterType	const UChar *		3489496	0					
ANR	3489773	Identifier	s		3489496	1					
ANR	3489774	Parameter	const UChar * end	1420:46:30601:30616	3489496	2	True				
ANR	3489775	ParameterType	const UChar *		3489496	0					
ANR	3489776	Identifier	end		3489496	1					
ANR	3489777	CFGEntryNode	ENTRY		3489496		True				
ANR	3489778	CFGExitNode	EXIT		3489496		True				
ANR	3489779	Symbol	strcat_capa		3489496						
ANR	3489780	Symbol	capa		3489496						
ANR	3489781	Symbol	addlen		3489496						
ANR	3489782	Symbol	NSTR		3489496						
ANR	3489783	Symbol	strcat_capa_from_static		3489496						
ANR	3489784	Symbol	* NSTR		3489496						
ANR	3489785	Symbol	NODE_STR_BUF_SIZE		3489496						
ANR	3489786	Symbol	p		3489496						
ANR	3489787	Symbol	node		3489496						
ANR	3489788	Symbol	NSTR ( node ) -> end		3489496						
ANR	3489789	Symbol	NSTR ( node ) -> s		3489496						
ANR	3489790	Symbol	s		3489496						
ANR	3489791	Symbol	len		3489496						
ANR	3489792	Symbol	NODE_STR_MARGIN		3489496						
ANR	3489793	Symbol	end		3489496						
ANR	3489794	Symbol	NSTR ( node ) -> capa		3489496						
ANR	3489795	Symbol	NSTR ( node ) -> buf		3489496						
ANR	3489796	Function	onig_node_str_set	1455:0:31387:31535							
ANR	3489797	FunctionDef	"onig_node_str_set (Node * node , const UChar * s , const UChar * end)"		3489796	0					
ANR	3489798	CompoundStatement		1457:0:31462:31535	3489796	0					
ANR	3489799	ExpressionStatement	onig_node_str_clear ( node )	1458:2:31466:31491	3489796	0	True				
ANR	3489800	CallExpression	onig_node_str_clear ( node )		3489796	0					
ANR	3489801	Callee	onig_node_str_clear		3489796	0					
ANR	3489802	Identifier	onig_node_str_clear		3489796	0					
ANR	3489803	ArgumentList	node		3489796	1					
ANR	3489804	Argument	node		3489796	0					
ANR	3489805	Identifier	node		3489796	0					
ANR	3489806	ReturnStatement	"return onig_node_str_cat ( node , s , end ) ;"	1459:2:31495:31533	3489796	1	True				
ANR	3489807	CallExpression	"onig_node_str_cat ( node , s , end )"		3489796	0					
ANR	3489808	Callee	onig_node_str_cat		3489796	0					
ANR	3489809	Identifier	onig_node_str_cat		3489796	0					
ANR	3489810	ArgumentList	node		3489796	1					
ANR	3489811	Argument	node		3489796	0					
ANR	3489812	Identifier	node		3489796	0					
ANR	3489813	Argument	s		3489796	1					
ANR	3489814	Identifier	s		3489796	0					
ANR	3489815	Argument	end		3489796	2					
ANR	3489816	Identifier	end		3489796	0					
ANR	3489817	ReturnType	extern int		3489796	1					
ANR	3489818	Identifier	onig_node_str_set		3489796	2					
ANR	3489819	ParameterList	"Node * node , const UChar * s , const UChar * end"		3489796	3					
ANR	3489820	Parameter	Node * node	1456:18:31416:31425	3489796	0	True				
ANR	3489821	ParameterType	Node *		3489796	0					
ANR	3489822	Identifier	node		3489796	1					
ANR	3489823	Parameter	const UChar * s	1456:30:31428:31441	3489796	1	True				
ANR	3489824	ParameterType	const UChar *		3489796	0					
ANR	3489825	Identifier	s		3489796	1					
ANR	3489826	Parameter	const UChar * end	1456:46:31444:31459	3489796	2	True				
ANR	3489827	ParameterType	const UChar *		3489796	0					
ANR	3489828	Identifier	end		3489796	1					
ANR	3489829	CFGEntryNode	ENTRY		3489796		True				
ANR	3489830	CFGExitNode	EXIT		3489796		True				
ANR	3489831	Symbol	node		3489796						
ANR	3489832	Symbol	s		3489796						
ANR	3489833	Symbol	onig_node_str_cat		3489796						
ANR	3489834	Symbol	end		3489796						
ANR	3489835	Function	node_str_cat_char	1462:0:31538:31661							
ANR	3489836	FunctionDef	"node_str_cat_char (Node * node , UChar c)"		3489835	0					
ANR	3489837	CompoundStatement		1464:0:31588:31661	3489835	0					
ANR	3489838	IdentifierDeclStatement	UChar s [ 1 ] ;	1465:2:31592:31602	3489835	0	True				
ANR	3489839	IdentifierDecl	s [ 1 ]		3489835	0					
ANR	3489840	IdentifierDeclType	UChar [ 1 ]		3489835	0					
ANR	3489841	Identifier	s		3489835	1					
ANR	3489842	PrimaryExpression	1		3489835	2					
ANR	3489843	ExpressionStatement	s [ 0 ] = c	1467:2:31607:31615	3489835	1	True				
ANR	3489844	AssignmentExpression	s [ 0 ] = c		3489835	0		=			
ANR	3489845	ArrayIndexing	s [ 0 ]		3489835	0					
ANR	3489846	Identifier	s		3489835	0					
ANR	3489847	PrimaryExpression	0		3489835	1					
ANR	3489848	Identifier	c		3489835	1					
ANR	3489849	ReturnStatement	"return onig_node_str_cat ( node , s , s + 1 ) ;"	1468:2:31619:31659	3489835	2	True				
ANR	3489850	CallExpression	"onig_node_str_cat ( node , s , s + 1 )"		3489835	0					
ANR	3489851	Callee	onig_node_str_cat		3489835	0					
ANR	3489852	Identifier	onig_node_str_cat		3489835	0					
ANR	3489853	ArgumentList	node		3489835	1					
ANR	3489854	Argument	node		3489835	0					
ANR	3489855	Identifier	node		3489835	0					
ANR	3489856	Argument	s		3489835	1					
ANR	3489857	Identifier	s		3489835	0					
ANR	3489858	Argument	s + 1		3489835	2					
ANR	3489859	AdditiveExpression	s + 1		3489835	0		+			
ANR	3489860	Identifier	s		3489835	0					
ANR	3489861	PrimaryExpression	1		3489835	1					
ANR	3489862	ReturnType	static int		3489835	1					
ANR	3489863	Identifier	node_str_cat_char		3489835	2					
ANR	3489864	ParameterList	"Node * node , UChar c"		3489835	3					
ANR	3489865	Parameter	Node * node	1463:18:31567:31576	3489835	0	True				
ANR	3489866	ParameterType	Node *		3489835	0					
ANR	3489867	Identifier	node		3489835	1					
ANR	3489868	Parameter	UChar c	1463:30:31579:31585	3489835	1	True				
ANR	3489869	ParameterType	UChar		3489835	0					
ANR	3489870	Identifier	c		3489835	1					
ANR	3489871	CFGEntryNode	ENTRY		3489835		True				
ANR	3489872	CFGExitNode	EXIT		3489835		True				
ANR	3489873	Symbol	node		3489835						
ANR	3489874	Symbol	c		3489835						
ANR	3489875	Symbol	s		3489835						
ANR	3489876	Symbol	onig_node_str_cat		3489835						
ANR	3489877	Symbol	* s		3489835						
ANR	3489878	Function	onig_node_conv_to_str_node	1471:0:31664:31881							
ANR	3489879	FunctionDef	"onig_node_conv_to_str_node (Node * node , int flag)"		3489878	0					
ANR	3489880	CompoundStatement		1473:0:31725:31881	3489878	0					
ANR	3489881	ExpressionStatement	"SET_NTYPE ( node , NT_STR )"	1474:2:31729:31752	3489878	0	True				
ANR	3489882	CallExpression	"SET_NTYPE ( node , NT_STR )"		3489878	0					
ANR	3489883	Callee	SET_NTYPE		3489878	0					
ANR	3489884	Identifier	SET_NTYPE		3489878	0					
ANR	3489885	ArgumentList	node		3489878	1					
ANR	3489886	Argument	node		3489878	0					
ANR	3489887	Identifier	node		3489878	0					
ANR	3489888	Argument	NT_STR		3489878	1					
ANR	3489889	Identifier	NT_STR		3489878	0					
ANR	3489890	ExpressionStatement	NSTR ( node ) -> flag = flag	1475:2:31756:31779	3489878	1	True				
ANR	3489891	AssignmentExpression	NSTR ( node ) -> flag = flag		3489878	0		=			
ANR	3489892	PtrMemberAccess	NSTR ( node ) -> flag		3489878	0					
ANR	3489893	CallExpression	NSTR ( node )		3489878	0					
ANR	3489894	Callee	NSTR		3489878	0					
ANR	3489895	Identifier	NSTR		3489878	0					
ANR	3489896	ArgumentList	node		3489878	1					
ANR	3489897	Argument	node		3489878	0					
ANR	3489898	Identifier	node		3489878	0					
ANR	3489899	Identifier	flag		3489878	1					
ANR	3489900	Identifier	flag		3489878	1					
ANR	3489901	ExpressionStatement	NSTR ( node ) -> capa = 0	1476:2:31783:31803	3489878	2	True				
ANR	3489902	AssignmentExpression	NSTR ( node ) -> capa = 0		3489878	0		=			
ANR	3489903	PtrMemberAccess	NSTR ( node ) -> capa		3489878	0					
ANR	3489904	CallExpression	NSTR ( node )		3489878	0					
ANR	3489905	Callee	NSTR		3489878	0					
ANR	3489906	Identifier	NSTR		3489878	0					
ANR	3489907	ArgumentList	node		3489878	1					
ANR	3489908	Argument	node		3489878	0					
ANR	3489909	Identifier	node		3489878	0					
ANR	3489910	Identifier	capa		3489878	1					
ANR	3489911	PrimaryExpression	0		3489878	1					
ANR	3489912	ExpressionStatement	NSTR ( node ) -> s = NSTR ( node ) -> buf	1477:2:31807:31841	3489878	3	True				
ANR	3489913	AssignmentExpression	NSTR ( node ) -> s = NSTR ( node ) -> buf		3489878	0		=			
ANR	3489914	PtrMemberAccess	NSTR ( node ) -> s		3489878	0					
ANR	3489915	CallExpression	NSTR ( node )		3489878	0					
ANR	3489916	Callee	NSTR		3489878	0					
ANR	3489917	Identifier	NSTR		3489878	0					
ANR	3489918	ArgumentList	node		3489878	1					
ANR	3489919	Argument	node		3489878	0					
ANR	3489920	Identifier	node		3489878	0					
ANR	3489921	Identifier	s		3489878	1					
ANR	3489922	PtrMemberAccess	NSTR ( node ) -> buf		3489878	1					
ANR	3489923	CallExpression	NSTR ( node )		3489878	0					
ANR	3489924	Callee	NSTR		3489878	0					
ANR	3489925	Identifier	NSTR		3489878	0					
ANR	3489926	ArgumentList	node		3489878	1					
ANR	3489927	Argument	node		3489878	0					
ANR	3489928	Identifier	node		3489878	0					
ANR	3489929	Identifier	buf		3489878	1					
ANR	3489930	ExpressionStatement	NSTR ( node ) -> end = NSTR ( node ) -> buf	1478:2:31845:31879	3489878	4	True				
ANR	3489931	AssignmentExpression	NSTR ( node ) -> end = NSTR ( node ) -> buf		3489878	0		=			
ANR	3489932	PtrMemberAccess	NSTR ( node ) -> end		3489878	0					
ANR	3489933	CallExpression	NSTR ( node )		3489878	0					
ANR	3489934	Callee	NSTR		3489878	0					
ANR	3489935	Identifier	NSTR		3489878	0					
ANR	3489936	ArgumentList	node		3489878	1					
ANR	3489937	Argument	node		3489878	0					
ANR	3489938	Identifier	node		3489878	0					
ANR	3489939	Identifier	end		3489878	1					
ANR	3489940	PtrMemberAccess	NSTR ( node ) -> buf		3489878	1					
ANR	3489941	CallExpression	NSTR ( node )		3489878	0					
ANR	3489942	Callee	NSTR		3489878	0					
ANR	3489943	Identifier	NSTR		3489878	0					
ANR	3489944	ArgumentList	node		3489878	1					
ANR	3489945	Argument	node		3489878	0					
ANR	3489946	Identifier	node		3489878	0					
ANR	3489947	Identifier	buf		3489878	1					
ANR	3489948	ReturnType	extern void		3489878	1					
ANR	3489949	Identifier	onig_node_conv_to_str_node		3489878	2					
ANR	3489950	ParameterList	"Node * node , int flag"		3489878	3					
ANR	3489951	Parameter	Node * node	1472:27:31703:31712	3489878	0	True				
ANR	3489952	ParameterType	Node *		3489878	0					
ANR	3489953	Identifier	node		3489878	1					
ANR	3489954	Parameter	int flag	1472:39:31715:31722	3489878	1	True				
ANR	3489955	ParameterType	int		3489878	0					
ANR	3489956	Identifier	flag		3489878	1					
ANR	3489957	CFGEntryNode	ENTRY		3489878		True				
ANR	3489958	CFGExitNode	EXIT		3489878		True				
ANR	3489959	Symbol	node		3489878						
ANR	3489960	Symbol	NSTR ( node ) -> s		3489878						
ANR	3489961	Symbol	NSTR ( node ) -> end		3489878						
ANR	3489962	Symbol	flag		3489878						
ANR	3489963	Symbol	NSTR		3489878						
ANR	3489964	Symbol	* NSTR		3489878						
ANR	3489965	Symbol	NSTR ( node ) -> capa		3489878						
ANR	3489966	Symbol	NSTR ( node ) -> buf		3489878						
ANR	3489967	Symbol	NSTR ( node ) -> flag		3489878						
ANR	3489968	Symbol	NT_STR		3489878						
ANR	3489969	Function	onig_node_str_clear	1481:0:31884:32188							
ANR	3489970	FunctionDef	onig_node_str_clear (Node * node)		3489969	0					
ANR	3489971	CompoundStatement		1483:0:31928:32188	3489969	0					
ANR	3489972	IfStatement	if ( NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf )		3489969	0					
ANR	3489973	Condition	NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf	1484:6:31936:32028	3489969	0	True				
ANR	3489974	AndExpression	NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf		3489969	0		&&			
ANR	3489975	EqualityExpression	NSTR ( node ) -> capa != 0		3489969	0		!=			
ANR	3489976	PtrMemberAccess	NSTR ( node ) -> capa		3489969	0					
ANR	3489977	CallExpression	NSTR ( node )		3489969	0					
ANR	3489978	Callee	NSTR		3489969	0					
ANR	3489979	Identifier	NSTR		3489969	0					
ANR	3489980	ArgumentList	node		3489969	1					
ANR	3489981	Argument	node		3489969	0					
ANR	3489982	Identifier	node		3489969	0					
ANR	3489983	Identifier	capa		3489969	1					
ANR	3489984	PrimaryExpression	0		3489969	1					
ANR	3489985	AndExpression	IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf		3489969	1		&&			
ANR	3489986	CallExpression	IS_NOT_NULL ( NSTR ( node ) -> s )		3489969	0					
ANR	3489987	Callee	IS_NOT_NULL		3489969	0					
ANR	3489988	Identifier	IS_NOT_NULL		3489969	0					
ANR	3489989	ArgumentList	NSTR ( node ) -> s		3489969	1					
ANR	3489990	Argument	NSTR ( node ) -> s		3489969	0					
ANR	3489991	PtrMemberAccess	NSTR ( node ) -> s		3489969	0					
ANR	3489992	CallExpression	NSTR ( node )		3489969	0					
ANR	3489993	Callee	NSTR		3489969	0					
ANR	3489994	Identifier	NSTR		3489969	0					
ANR	3489995	ArgumentList	node		3489969	1					
ANR	3489996	Argument	node		3489969	0					
ANR	3489997	Identifier	node		3489969	0					
ANR	3489998	Identifier	s		3489969	1					
ANR	3489999	EqualityExpression	NSTR ( node ) -> s != NSTR ( node ) -> buf		3489969	1		!=			
ANR	3490000	PtrMemberAccess	NSTR ( node ) -> s		3489969	0					
ANR	3490001	CallExpression	NSTR ( node )		3489969	0					
ANR	3490002	Callee	NSTR		3489969	0					
ANR	3490003	Identifier	NSTR		3489969	0					
ANR	3490004	ArgumentList	node		3489969	1					
ANR	3490005	Argument	node		3489969	0					
ANR	3490006	Identifier	node		3489969	0					
ANR	3490007	Identifier	s		3489969	1					
ANR	3490008	PtrMemberAccess	NSTR ( node ) -> buf		3489969	1					
ANR	3490009	CallExpression	NSTR ( node )		3489969	0					
ANR	3490010	Callee	NSTR		3489969	0					
ANR	3490011	Identifier	NSTR		3489969	0					
ANR	3490012	ArgumentList	node		3489969	1					
ANR	3490013	Argument	node		3489969	0					
ANR	3490014	Identifier	node		3489969	0					
ANR	3490015	Identifier	buf		3489969	1					
ANR	3490016	CompoundStatement		3:70:102:102	3489969	1					
ANR	3490017	ExpressionStatement	xfree ( NSTR ( node ) -> s )	1486:4:32037:32057	3489969	0	True				
ANR	3490018	CallExpression	xfree ( NSTR ( node ) -> s )		3489969	0					
ANR	3490019	Callee	xfree		3489969	0					
ANR	3490020	Identifier	xfree		3489969	0					
ANR	3490021	ArgumentList	NSTR ( node ) -> s		3489969	1					
ANR	3490022	Argument	NSTR ( node ) -> s		3489969	0					
ANR	3490023	PtrMemberAccess	NSTR ( node ) -> s		3489969	0					
ANR	3490024	CallExpression	NSTR ( node )		3489969	0					
ANR	3490025	Callee	NSTR		3489969	0					
ANR	3490026	Identifier	NSTR		3489969	0					
ANR	3490027	ArgumentList	node		3489969	1					
ANR	3490028	Argument	node		3489969	0					
ANR	3490029	Identifier	node		3489969	0					
ANR	3490030	Identifier	s		3489969	1					
ANR	3490031	ExpressionStatement	NSTR ( node ) -> capa = 0	1489:2:32066:32086	3489969	1	True				
ANR	3490032	AssignmentExpression	NSTR ( node ) -> capa = 0		3489969	0		=			
ANR	3490033	PtrMemberAccess	NSTR ( node ) -> capa		3489969	0					
ANR	3490034	CallExpression	NSTR ( node )		3489969	0					
ANR	3490035	Callee	NSTR		3489969	0					
ANR	3490036	Identifier	NSTR		3489969	0					
ANR	3490037	ArgumentList	node		3489969	1					
ANR	3490038	Argument	node		3489969	0					
ANR	3490039	Identifier	node		3489969	0					
ANR	3490040	Identifier	capa		3489969	1					
ANR	3490041	PrimaryExpression	0		3489969	1					
ANR	3490042	ExpressionStatement	NSTR ( node ) -> flag = 0	1490:2:32090:32110	3489969	2	True				
ANR	3490043	AssignmentExpression	NSTR ( node ) -> flag = 0		3489969	0		=			
ANR	3490044	PtrMemberAccess	NSTR ( node ) -> flag		3489969	0					
ANR	3490045	CallExpression	NSTR ( node )		3489969	0					
ANR	3490046	Callee	NSTR		3489969	0					
ANR	3490047	Identifier	NSTR		3489969	0					
ANR	3490048	ArgumentList	node		3489969	1					
ANR	3490049	Argument	node		3489969	0					
ANR	3490050	Identifier	node		3489969	0					
ANR	3490051	Identifier	flag		3489969	1					
ANR	3490052	PrimaryExpression	0		3489969	1					
ANR	3490053	ExpressionStatement	NSTR ( node ) -> s = NSTR ( node ) -> buf	1491:2:32114:32148	3489969	3	True				
ANR	3490054	AssignmentExpression	NSTR ( node ) -> s = NSTR ( node ) -> buf		3489969	0		=			
ANR	3490055	PtrMemberAccess	NSTR ( node ) -> s		3489969	0					
ANR	3490056	CallExpression	NSTR ( node )		3489969	0					
ANR	3490057	Callee	NSTR		3489969	0					
ANR	3490058	Identifier	NSTR		3489969	0					
ANR	3490059	ArgumentList	node		3489969	1					
ANR	3490060	Argument	node		3489969	0					
ANR	3490061	Identifier	node		3489969	0					
ANR	3490062	Identifier	s		3489969	1					
ANR	3490063	PtrMemberAccess	NSTR ( node ) -> buf		3489969	1					
ANR	3490064	CallExpression	NSTR ( node )		3489969	0					
ANR	3490065	Callee	NSTR		3489969	0					
ANR	3490066	Identifier	NSTR		3489969	0					
ANR	3490067	ArgumentList	node		3489969	1					
ANR	3490068	Argument	node		3489969	0					
ANR	3490069	Identifier	node		3489969	0					
ANR	3490070	Identifier	buf		3489969	1					
ANR	3490071	ExpressionStatement	NSTR ( node ) -> end = NSTR ( node ) -> buf	1492:2:32152:32186	3489969	4	True				
ANR	3490072	AssignmentExpression	NSTR ( node ) -> end = NSTR ( node ) -> buf		3489969	0		=			
ANR	3490073	PtrMemberAccess	NSTR ( node ) -> end		3489969	0					
ANR	3490074	CallExpression	NSTR ( node )		3489969	0					
ANR	3490075	Callee	NSTR		3489969	0					
ANR	3490076	Identifier	NSTR		3489969	0					
ANR	3490077	ArgumentList	node		3489969	1					
ANR	3490078	Argument	node		3489969	0					
ANR	3490079	Identifier	node		3489969	0					
ANR	3490080	Identifier	end		3489969	1					
ANR	3490081	PtrMemberAccess	NSTR ( node ) -> buf		3489969	1					
ANR	3490082	CallExpression	NSTR ( node )		3489969	0					
ANR	3490083	Callee	NSTR		3489969	0					
ANR	3490084	Identifier	NSTR		3489969	0					
ANR	3490085	ArgumentList	node		3489969	1					
ANR	3490086	Argument	node		3489969	0					
ANR	3490087	Identifier	node		3489969	0					
ANR	3490088	Identifier	buf		3489969	1					
ANR	3490089	ReturnType	extern void		3489969	1					
ANR	3490090	Identifier	onig_node_str_clear		3489969	2					
ANR	3490091	ParameterList	Node * node		3489969	3					
ANR	3490092	Parameter	Node * node	1482:20:31916:31925	3489969	0	True				
ANR	3490093	ParameterType	Node *		3489969	0					
ANR	3490094	Identifier	node		3489969	1					
ANR	3490095	CFGEntryNode	ENTRY		3489969		True				
ANR	3490096	CFGExitNode	EXIT		3489969		True				
ANR	3490097	Symbol	node		3489969						
ANR	3490098	Symbol	NSTR ( node ) -> s		3489969						
ANR	3490099	Symbol	IS_NOT_NULL		3489969						
ANR	3490100	Symbol	NSTR ( node ) -> end		3489969						
ANR	3490101	Symbol	NSTR		3489969						
ANR	3490102	Symbol	NSTR ( node ) -> capa		3489969						
ANR	3490103	Symbol	* NSTR		3489969						
ANR	3490104	Symbol	NSTR ( node ) -> buf		3489969						
ANR	3490105	Symbol	NSTR ( node ) -> flag		3489969						
ANR	3490106	Function	node_new_str	1495:0:32191:32562							
ANR	3490107	FunctionDef	"node_new_str (const UChar * s , const UChar * end)"		3490106	0					
ANR	3490108	CompoundStatement		1497:0:32251:32562	3490106	0					
ANR	3490109	IdentifierDeclStatement	Node * node = node_new ( ) ;	1498:2:32255:32278	3490106	0	True				
ANR	3490110	IdentifierDecl	* node = node_new ( )		3490106	0					
ANR	3490111	IdentifierDeclType	Node *		3490106	0					
ANR	3490112	Identifier	node		3490106	1					
ANR	3490113	AssignmentExpression	* node = node_new ( )		3490106	2		=			
ANR	3490114	Identifier	node		3490106	0					
ANR	3490115	CallExpression	node_new ( )		3490106	1					
ANR	3490116	Callee	node_new		3490106	0					
ANR	3490117	Identifier	node_new		3490106	0					
ANR	3490118	ArgumentList			3490106	1					
ANR	3490119	ExpressionStatement	CHECK_NULL_RETURN ( node )	1499:2:32282:32305	3490106	1	True				
ANR	3490120	CallExpression	CHECK_NULL_RETURN ( node )		3490106	0					
ANR	3490121	Callee	CHECK_NULL_RETURN		3490106	0					
ANR	3490122	Identifier	CHECK_NULL_RETURN		3490106	0					
ANR	3490123	ArgumentList	node		3490106	1					
ANR	3490124	Argument	node		3490106	0					
ANR	3490125	Identifier	node		3490106	0					
ANR	3490126	ExpressionStatement	"SET_NTYPE ( node , NT_STR )"	1501:2:32310:32333	3490106	2	True				
ANR	3490127	CallExpression	"SET_NTYPE ( node , NT_STR )"		3490106	0					
ANR	3490128	Callee	SET_NTYPE		3490106	0					
ANR	3490129	Identifier	SET_NTYPE		3490106	0					
ANR	3490130	ArgumentList	node		3490106	1					
ANR	3490131	Argument	node		3490106	0					
ANR	3490132	Identifier	node		3490106	0					
ANR	3490133	Argument	NT_STR		3490106	1					
ANR	3490134	Identifier	NT_STR		3490106	0					
ANR	3490135	ExpressionStatement	NSTR ( node ) -> capa = 0	1502:2:32337:32357	3490106	3	True				
ANR	3490136	AssignmentExpression	NSTR ( node ) -> capa = 0		3490106	0		=			
ANR	3490137	PtrMemberAccess	NSTR ( node ) -> capa		3490106	0					
ANR	3490138	CallExpression	NSTR ( node )		3490106	0					
ANR	3490139	Callee	NSTR		3490106	0					
ANR	3490140	Identifier	NSTR		3490106	0					
ANR	3490141	ArgumentList	node		3490106	1					
ANR	3490142	Argument	node		3490106	0					
ANR	3490143	Identifier	node		3490106	0					
ANR	3490144	Identifier	capa		3490106	1					
ANR	3490145	PrimaryExpression	0		3490106	1					
ANR	3490146	ExpressionStatement	NSTR ( node ) -> flag = 0	1503:2:32361:32381	3490106	4	True				
ANR	3490147	AssignmentExpression	NSTR ( node ) -> flag = 0		3490106	0		=			
ANR	3490148	PtrMemberAccess	NSTR ( node ) -> flag		3490106	0					
ANR	3490149	CallExpression	NSTR ( node )		3490106	0					
ANR	3490150	Callee	NSTR		3490106	0					
ANR	3490151	Identifier	NSTR		3490106	0					
ANR	3490152	ArgumentList	node		3490106	1					
ANR	3490153	Argument	node		3490106	0					
ANR	3490154	Identifier	node		3490106	0					
ANR	3490155	Identifier	flag		3490106	1					
ANR	3490156	PrimaryExpression	0		3490106	1					
ANR	3490157	ExpressionStatement	NSTR ( node ) -> s = NSTR ( node ) -> buf	1504:2:32385:32419	3490106	5	True				
ANR	3490158	AssignmentExpression	NSTR ( node ) -> s = NSTR ( node ) -> buf		3490106	0		=			
ANR	3490159	PtrMemberAccess	NSTR ( node ) -> s		3490106	0					
ANR	3490160	CallExpression	NSTR ( node )		3490106	0					
ANR	3490161	Callee	NSTR		3490106	0					
ANR	3490162	Identifier	NSTR		3490106	0					
ANR	3490163	ArgumentList	node		3490106	1					
ANR	3490164	Argument	node		3490106	0					
ANR	3490165	Identifier	node		3490106	0					
ANR	3490166	Identifier	s		3490106	1					
ANR	3490167	PtrMemberAccess	NSTR ( node ) -> buf		3490106	1					
ANR	3490168	CallExpression	NSTR ( node )		3490106	0					
ANR	3490169	Callee	NSTR		3490106	0					
ANR	3490170	Identifier	NSTR		3490106	0					
ANR	3490171	ArgumentList	node		3490106	1					
ANR	3490172	Argument	node		3490106	0					
ANR	3490173	Identifier	node		3490106	0					
ANR	3490174	Identifier	buf		3490106	1					
ANR	3490175	ExpressionStatement	NSTR ( node ) -> end = NSTR ( node ) -> buf	1505:2:32423:32457	3490106	6	True				
ANR	3490176	AssignmentExpression	NSTR ( node ) -> end = NSTR ( node ) -> buf		3490106	0		=			
ANR	3490177	PtrMemberAccess	NSTR ( node ) -> end		3490106	0					
ANR	3490178	CallExpression	NSTR ( node )		3490106	0					
ANR	3490179	Callee	NSTR		3490106	0					
ANR	3490180	Identifier	NSTR		3490106	0					
ANR	3490181	ArgumentList	node		3490106	1					
ANR	3490182	Argument	node		3490106	0					
ANR	3490183	Identifier	node		3490106	0					
ANR	3490184	Identifier	end		3490106	1					
ANR	3490185	PtrMemberAccess	NSTR ( node ) -> buf		3490106	1					
ANR	3490186	CallExpression	NSTR ( node )		3490106	0					
ANR	3490187	Callee	NSTR		3490106	0					
ANR	3490188	Identifier	NSTR		3490106	0					
ANR	3490189	ArgumentList	node		3490106	1					
ANR	3490190	Argument	node		3490106	0					
ANR	3490191	Identifier	node		3490106	0					
ANR	3490192	Identifier	buf		3490106	1					
ANR	3490193	IfStatement	"if ( onig_node_str_cat ( node , s , end ) )"		3490106	7					
ANR	3490194	Condition	"onig_node_str_cat ( node , s , end )"	1506:6:32465:32495	3490106	0	True				
ANR	3490195	CallExpression	"onig_node_str_cat ( node , s , end )"		3490106	0					
ANR	3490196	Callee	onig_node_str_cat		3490106	0					
ANR	3490197	Identifier	onig_node_str_cat		3490106	0					
ANR	3490198	ArgumentList	node		3490106	1					
ANR	3490199	Argument	node		3490106	0					
ANR	3490200	Identifier	node		3490106	0					
ANR	3490201	Argument	s		3490106	1					
ANR	3490202	Identifier	s		3490106	0					
ANR	3490203	Argument	end		3490106	2					
ANR	3490204	Identifier	end		3490106	0					
ANR	3490205	CompoundStatement		10:39:246:246	3490106	1					
ANR	3490206	ExpressionStatement	onig_node_free ( node )	1507:4:32504:32524	3490106	0	True				
ANR	3490207	CallExpression	onig_node_free ( node )		3490106	0					
ANR	3490208	Callee	onig_node_free		3490106	0					
ANR	3490209	Identifier	onig_node_free		3490106	0					
ANR	3490210	ArgumentList	node		3490106	1					
ANR	3490211	Argument	node		3490106	0					
ANR	3490212	Identifier	node		3490106	0					
ANR	3490213	ReturnStatement	return NULL ;	1508:4:32530:32541	3490106	1	True				
ANR	3490214	Identifier	NULL		3490106	0					
ANR	3490215	ReturnStatement	return node ;	1510:2:32549:32560	3490106	8	True				
ANR	3490216	Identifier	node		3490106	0					
ANR	3490217	ReturnType	static Node *		3490106	1					
ANR	3490218	Identifier	node_new_str		3490106	2					
ANR	3490219	ParameterList	"const UChar * s , const UChar * end"		3490106	3					
ANR	3490220	Parameter	const UChar * s	1496:13:32217:32230	3490106	0	True				
ANR	3490221	ParameterType	const UChar *		3490106	0					
ANR	3490222	Identifier	s		3490106	1					
ANR	3490223	Parameter	const UChar * end	1496:29:32233:32248	3490106	1	True				
ANR	3490224	ParameterType	const UChar *		3490106	0					
ANR	3490225	Identifier	end		3490106	1					
ANR	3490226	CFGEntryNode	ENTRY		3490106		True				
ANR	3490227	CFGExitNode	EXIT		3490106		True				
ANR	3490228	Symbol	NULL		3490106						
ANR	3490229	Symbol	NSTR		3490106						
ANR	3490230	Symbol	* NSTR		3490106						
ANR	3490231	Symbol	node		3490106						
ANR	3490232	Symbol	NSTR ( node ) -> s		3490106						
ANR	3490233	Symbol	NSTR ( node ) -> end		3490106						
ANR	3490234	Symbol	s		3490106						
ANR	3490235	Symbol	onig_node_str_cat		3490106						
ANR	3490236	Symbol	node_new		3490106						
ANR	3490237	Symbol	end		3490106						
ANR	3490238	Symbol	NSTR ( node ) -> capa		3490106						
ANR	3490239	Symbol	NSTR ( node ) -> buf		3490106						
ANR	3490240	Symbol	NSTR ( node ) -> flag		3490106						
ANR	3490241	Symbol	NT_STR		3490106						
ANR	3490242	Function	onig_node_new_str	1513:0:32565:32663							
ANR	3490243	FunctionDef	"onig_node_new_str (const UChar * s , const UChar * end)"		3490242	0					
ANR	3490244	CompoundStatement		1515:0:32630:32663	3490242	0					
ANR	3490245	ReturnStatement	"return node_new_str ( s , end ) ;"	1516:2:32634:32661	3490242	0	True				
ANR	3490246	CallExpression	"node_new_str ( s , end )"		3490242	0					
ANR	3490247	Callee	node_new_str		3490242	0					
ANR	3490248	Identifier	node_new_str		3490242	0					
ANR	3490249	ArgumentList	s		3490242	1					
ANR	3490250	Argument	s		3490242	0					
ANR	3490251	Identifier	s		3490242	0					
ANR	3490252	Argument	end		3490242	1					
ANR	3490253	Identifier	end		3490242	0					
ANR	3490254	ReturnType	extern Node *		3490242	1					
ANR	3490255	Identifier	onig_node_new_str		3490242	2					
ANR	3490256	ParameterList	"const UChar * s , const UChar * end"		3490242	3					
ANR	3490257	Parameter	const UChar * s	1514:18:32596:32609	3490242	0	True				
ANR	3490258	ParameterType	const UChar *		3490242	0					
ANR	3490259	Identifier	s		3490242	1					
ANR	3490260	Parameter	const UChar * end	1514:34:32612:32627	3490242	1	True				
ANR	3490261	ParameterType	const UChar *		3490242	0					
ANR	3490262	Identifier	end		3490242	1					
ANR	3490263	CFGEntryNode	ENTRY		3490242		True				
ANR	3490264	CFGExitNode	EXIT		3490242		True				
ANR	3490265	Symbol	s		3490242						
ANR	3490266	Symbol	end		3490242						
ANR	3490267	Symbol	node_new_str		3490242						
ANR	3490268	Function	node_new_str_raw	1519:0:32666:32797							
ANR	3490269	FunctionDef	"node_new_str_raw (UChar * s , UChar * end)"		3490268	0					
ANR	3490270	CompoundStatement		1521:0:32718:32797	3490268	0					
ANR	3490271	IdentifierDeclStatement	"Node * node = node_new_str ( s , end ) ;"	1522:2:32722:32755	3490268	0	True				
ANR	3490272	IdentifierDecl	"* node = node_new_str ( s , end )"		3490268	0					
ANR	3490273	IdentifierDeclType	Node *		3490268	0					
ANR	3490274	Identifier	node		3490268	1					
ANR	3490275	AssignmentExpression	"* node = node_new_str ( s , end )"		3490268	2		=			
ANR	3490276	Identifier	node		3490268	0					
ANR	3490277	CallExpression	"node_new_str ( s , end )"		3490268	1					
ANR	3490278	Callee	node_new_str		3490268	0					
ANR	3490279	Identifier	node_new_str		3490268	0					
ANR	3490280	ArgumentList	s		3490268	1					
ANR	3490281	Argument	s		3490268	0					
ANR	3490282	Identifier	s		3490268	0					
ANR	3490283	Argument	end		3490268	1					
ANR	3490284	Identifier	end		3490268	0					
ANR	3490285	ExpressionStatement	NSTRING_SET_RAW ( node )	1523:2:32759:32780	3490268	1	True				
ANR	3490286	CallExpression	NSTRING_SET_RAW ( node )		3490268	0					
ANR	3490287	Callee	NSTRING_SET_RAW		3490268	0					
ANR	3490288	Identifier	NSTRING_SET_RAW		3490268	0					
ANR	3490289	ArgumentList	node		3490268	1					
ANR	3490290	Argument	node		3490268	0					
ANR	3490291	Identifier	node		3490268	0					
ANR	3490292	ReturnStatement	return node ;	1524:2:32784:32795	3490268	2	True				
ANR	3490293	Identifier	node		3490268	0					
ANR	3490294	ReturnType	static Node *		3490268	1					
ANR	3490295	Identifier	node_new_str_raw		3490268	2					
ANR	3490296	ParameterList	"UChar * s , UChar * end"		3490268	3					
ANR	3490297	Parameter	UChar * s	1520:17:32696:32703	3490268	0	True				
ANR	3490298	ParameterType	UChar *		3490268	0					
ANR	3490299	Identifier	s		3490268	1					
ANR	3490300	Parameter	UChar * end	1520:27:32706:32715	3490268	1	True				
ANR	3490301	ParameterType	UChar *		3490268	0					
ANR	3490302	Identifier	end		3490268	1					
ANR	3490303	CFGEntryNode	ENTRY		3490268		True				
ANR	3490304	CFGExitNode	EXIT		3490268		True				
ANR	3490305	Symbol	node		3490268						
ANR	3490306	Symbol	s		3490268						
ANR	3490307	Symbol	end		3490268						
ANR	3490308	Symbol	node_new_str		3490268						
ANR	3490309	Function	node_new_empty	1527:0:32800:32871							
ANR	3490310	FunctionDef	node_new_empty ()		3490309	0					
ANR	3490311	CompoundStatement		1529:0:32834:32871	3490309	0					
ANR	3490312	ReturnStatement	"return node_new_str ( NULL , NULL ) ;"	1530:2:32838:32869	3490309	0	True				
ANR	3490313	CallExpression	"node_new_str ( NULL , NULL )"		3490309	0					
ANR	3490314	Callee	node_new_str		3490309	0					
ANR	3490315	Identifier	node_new_str		3490309	0					
ANR	3490316	ArgumentList	NULL		3490309	1					
ANR	3490317	Argument	NULL		3490309	0					
ANR	3490318	Identifier	NULL		3490309	0					
ANR	3490319	Argument	NULL		3490309	1					
ANR	3490320	Identifier	NULL		3490309	0					
ANR	3490321	ReturnType	static Node *		3490309	1					
ANR	3490322	Identifier	node_new_empty		3490309	2					
ANR	3490323	ParameterList			3490309	3					
ANR	3490324	CFGEntryNode	ENTRY		3490309		True				
ANR	3490325	CFGExitNode	EXIT		3490309		True				
ANR	3490326	Symbol	NULL		3490309						
ANR	3490327	Symbol	node_new_str		3490309						
ANR	3490328	Function	node_new_str_raw_char	1533:0:32874:32984							
ANR	3490329	FunctionDef	node_new_str_raw_char (UChar c)		3490328	0					
ANR	3490330	CompoundStatement		1535:0:32918:32984	3490328	0					
ANR	3490331	IdentifierDeclStatement	UChar p [ 1 ] ;	1536:2:32922:32932	3490328	0	True				
ANR	3490332	IdentifierDecl	p [ 1 ]		3490328	0					
ANR	3490333	IdentifierDeclType	UChar [ 1 ]		3490328	0					
ANR	3490334	Identifier	p		3490328	1					
ANR	3490335	PrimaryExpression	1		3490328	2					
ANR	3490336	ExpressionStatement	p [ 0 ] = c	1538:2:32937:32945	3490328	1	True				
ANR	3490337	AssignmentExpression	p [ 0 ] = c		3490328	0		=			
ANR	3490338	ArrayIndexing	p [ 0 ]		3490328	0					
ANR	3490339	Identifier	p		3490328	0					
ANR	3490340	PrimaryExpression	0		3490328	1					
ANR	3490341	Identifier	c		3490328	1					
ANR	3490342	ReturnStatement	"return node_new_str_raw ( p , p + 1 ) ;"	1539:2:32949:32982	3490328	2	True				
ANR	3490343	CallExpression	"node_new_str_raw ( p , p + 1 )"		3490328	0					
ANR	3490344	Callee	node_new_str_raw		3490328	0					
ANR	3490345	Identifier	node_new_str_raw		3490328	0					
ANR	3490346	ArgumentList	p		3490328	1					
ANR	3490347	Argument	p		3490328	0					
ANR	3490348	Identifier	p		3490328	0					
ANR	3490349	Argument	p + 1		3490328	1					
ANR	3490350	AdditiveExpression	p + 1		3490328	0		+			
ANR	3490351	Identifier	p		3490328	0					
ANR	3490352	PrimaryExpression	1		3490328	1					
ANR	3490353	ReturnType	static Node *		3490328	1					
ANR	3490354	Identifier	node_new_str_raw_char		3490328	2					
ANR	3490355	ParameterList	UChar c		3490328	3					
ANR	3490356	Parameter	UChar c	1534:22:32909:32915	3490328	0	True				
ANR	3490357	ParameterType	UChar		3490328	0					
ANR	3490358	Identifier	c		3490328	1					
ANR	3490359	CFGEntryNode	ENTRY		3490328		True				
ANR	3490360	CFGExitNode	EXIT		3490328		True				
ANR	3490361	Symbol	p		3490328						
ANR	3490362	Symbol	c		3490328						
ANR	3490363	Symbol	* p		3490328						
ANR	3490364	Symbol	node_new_str_raw		3490328						
ANR	3490365	Function	str_node_split_last_char	1542:0:32987:33376							
ANR	3490366	FunctionDef	"str_node_split_last_char (StrNode * sn , OnigEncoding enc)"		3490365	0					
ANR	3490367	CompoundStatement		1544:0:33056:33376	3490365	0					
ANR	3490368	IdentifierDeclStatement	const UChar * p ;	1545:2:33060:33074	3490365	0	True				
ANR	3490369	IdentifierDecl	* p		3490365	0					
ANR	3490370	IdentifierDeclType	const UChar *		3490365	0					
ANR	3490371	Identifier	p		3490365	1					
ANR	3490372	IdentifierDeclStatement	Node * n = NULL_NODE ;	1546:2:33078:33097	3490365	1	True				
ANR	3490373	IdentifierDecl	* n = NULL_NODE		3490365	0					
ANR	3490374	IdentifierDeclType	Node *		3490365	0					
ANR	3490375	Identifier	n		3490365	1					
ANR	3490376	AssignmentExpression	* n = NULL_NODE		3490365	2		=			
ANR	3490377	Identifier	NULL_NODE		3490365	0					
ANR	3490378	Identifier	NULL_NODE		3490365	1					
ANR	3490379	IfStatement	if ( sn -> end > sn -> s )		3490365	2					
ANR	3490380	Condition	sn -> end > sn -> s	1548:6:33106:33120	3490365	0	True				
ANR	3490381	RelationalExpression	sn -> end > sn -> s		3490365	0		>			
ANR	3490382	PtrMemberAccess	sn -> end		3490365	0					
ANR	3490383	Identifier	sn		3490365	0					
ANR	3490384	Identifier	end		3490365	1					
ANR	3490385	PtrMemberAccess	sn -> s		3490365	1					
ANR	3490386	Identifier	sn		3490365	0					
ANR	3490387	Identifier	s		3490365	1					
ANR	3490388	CompoundStatement		5:23:66:66	3490365	1					
ANR	3490389	ExpressionStatement	"p = onigenc_get_prev_char_head ( enc , sn -> s , sn -> end )"	1549:4:33129:33180	3490365	0	True				
ANR	3490390	AssignmentExpression	"p = onigenc_get_prev_char_head ( enc , sn -> s , sn -> end )"		3490365	0		=			
ANR	3490391	Identifier	p		3490365	0					
ANR	3490392	CallExpression	"onigenc_get_prev_char_head ( enc , sn -> s , sn -> end )"		3490365	1					
ANR	3490393	Callee	onigenc_get_prev_char_head		3490365	0					
ANR	3490394	Identifier	onigenc_get_prev_char_head		3490365	0					
ANR	3490395	ArgumentList	enc		3490365	1					
ANR	3490396	Argument	enc		3490365	0					
ANR	3490397	Identifier	enc		3490365	0					
ANR	3490398	Argument	sn -> s		3490365	1					
ANR	3490399	PtrMemberAccess	sn -> s		3490365	0					
ANR	3490400	Identifier	sn		3490365	0					
ANR	3490401	Identifier	s		3490365	1					
ANR	3490402	Argument	sn -> end		3490365	2					
ANR	3490403	PtrMemberAccess	sn -> end		3490365	0					
ANR	3490404	Identifier	sn		3490365	0					
ANR	3490405	Identifier	end		3490365	1					
ANR	3490406	IfStatement	if ( p && p > sn -> s )		3490365	1					
ANR	3490407	Condition	p && p > sn -> s	1550:8:33190:33203	3490365	0	True				
ANR	3490408	AndExpression	p && p > sn -> s		3490365	0		&&			
ANR	3490409	Identifier	p		3490365	0					
ANR	3490410	RelationalExpression	p > sn -> s		3490365	1		>			
ANR	3490411	Identifier	p		3490365	0					
ANR	3490412	PtrMemberAccess	sn -> s		3490365	1					
ANR	3490413	Identifier	sn		3490365	0					
ANR	3490414	Identifier	s		3490365	1					
ANR	3490415	CompoundStatement		7:24:149:149	3490365	1					
ANR	3490416	ExpressionStatement	"n = node_new_str ( p , sn -> end )"	1551:6:33237:33265	3490365	0	True				
ANR	3490417	AssignmentExpression	"n = node_new_str ( p , sn -> end )"		3490365	0		=			
ANR	3490418	Identifier	n		3490365	0					
ANR	3490419	CallExpression	"node_new_str ( p , sn -> end )"		3490365	1					
ANR	3490420	Callee	node_new_str		3490365	0					
ANR	3490421	Identifier	node_new_str		3490365	0					
ANR	3490422	ArgumentList	p		3490365	1					
ANR	3490423	Argument	p		3490365	0					
ANR	3490424	Identifier	p		3490365	0					
ANR	3490425	Argument	sn -> end		3490365	1					
ANR	3490426	PtrMemberAccess	sn -> end		3490365	0					
ANR	3490427	Identifier	sn		3490365	0					
ANR	3490428	Identifier	end		3490365	1					
ANR	3490429	IfStatement	if ( ( sn -> flag & NSTR_RAW ) != 0 )		3490365	1					
ANR	3490430	Condition	( sn -> flag & NSTR_RAW ) != 0	1552:10:33277:33302	3490365	0	True				
ANR	3490431	EqualityExpression	( sn -> flag & NSTR_RAW ) != 0		3490365	0		!=			
ANR	3490432	BitAndExpression	sn -> flag & NSTR_RAW		3490365	0		&			
ANR	3490433	PtrMemberAccess	sn -> flag		3490365	0					
ANR	3490434	Identifier	sn		3490365	0					
ANR	3490435	Identifier	flag		3490365	1					
ANR	3490436	Identifier	NSTR_RAW		3490365	1					
ANR	3490437	PrimaryExpression	0		3490365	1					
ANR	3490438	ExpressionStatement	NSTRING_SET_RAW ( n )	1553:1:33306:33324	3490365	1	True				
ANR	3490439	CallExpression	NSTRING_SET_RAW ( n )		3490365	0					
ANR	3490440	Callee	NSTRING_SET_RAW		3490365	0					
ANR	3490441	Identifier	NSTRING_SET_RAW		3490365	0					
ANR	3490442	ArgumentList	n		3490365	1					
ANR	3490443	Argument	n		3490365	0					
ANR	3490444	Identifier	n		3490365	0					
ANR	3490445	ExpressionStatement	sn -> end = ( UChar * ) p	1554:6:33332:33352	3490365	2	True				
ANR	3490446	AssignmentExpression	sn -> end = ( UChar * ) p		3490365	0		=			
ANR	3490447	PtrMemberAccess	sn -> end		3490365	0					
ANR	3490448	Identifier	sn		3490365	0					
ANR	3490449	Identifier	end		3490365	1					
ANR	3490450	CastExpression	( UChar * ) p		3490365	1					
ANR	3490451	CastTarget	UChar *		3490365	0					
ANR	3490452	Identifier	p		3490365	1					
ANR	3490453	ReturnStatement	return n ;	1557:2:33366:33374	3490365	3	True				
ANR	3490454	Identifier	n		3490365	0					
ANR	3490455	ReturnType	static Node *		3490365	1					
ANR	3490456	Identifier	str_node_split_last_char		3490365	2					
ANR	3490457	ParameterList	"StrNode * sn , OnigEncoding enc"		3490365	3					
ANR	3490458	Parameter	StrNode * sn	1543:25:33025:33035	3490365	0	True				
ANR	3490459	ParameterType	StrNode *		3490365	0					
ANR	3490460	Identifier	sn		3490365	1					
ANR	3490461	Parameter	OnigEncoding enc	1543:38:33038:33053	3490365	1	True				
ANR	3490462	ParameterType	OnigEncoding		3490365	0					
ANR	3490463	Identifier	enc		3490365	1					
ANR	3490464	CFGEntryNode	ENTRY		3490365		True				
ANR	3490465	CFGExitNode	EXIT		3490365		True				
ANR	3490466	Symbol	p		3490365						
ANR	3490467	Symbol	* sn		3490365						
ANR	3490468	Symbol	sn -> s		3490365						
ANR	3490469	Symbol	sn -> flag		3490365						
ANR	3490470	Symbol	onigenc_get_prev_char_head		3490365						
ANR	3490471	Symbol	sn		3490365						
ANR	3490472	Symbol	enc		3490365						
ANR	3490473	Symbol	sn -> end		3490365						
ANR	3490474	Symbol	node_new_str		3490365						
ANR	3490475	Symbol	NSTR_RAW		3490365						
ANR	3490476	Symbol	NULL_NODE		3490365						
ANR	3490477	Symbol	n		3490365						
ANR	3490478	Function	str_node_can_be_split	1560:0:33379:33549							
ANR	3490479	FunctionDef	"str_node_can_be_split (StrNode * sn , OnigEncoding enc)"		3490478	0					
ANR	3490480	CompoundStatement		1562:0:33443:33549	3490478	0					
ANR	3490481	IfStatement	if ( sn -> end > sn -> s )		3490478	0					
ANR	3490482	Condition	sn -> end > sn -> s	1563:6:33451:33465	3490478	0	True				
ANR	3490483	RelationalExpression	sn -> end > sn -> s		3490478	0		>			
ANR	3490484	PtrMemberAccess	sn -> end		3490478	0					
ANR	3490485	Identifier	sn		3490478	0					
ANR	3490486	Identifier	end		3490478	1					
ANR	3490487	PtrMemberAccess	sn -> s		3490478	1					
ANR	3490488	Identifier	sn		3490478	0					
ANR	3490489	Identifier	s		3490478	1					
ANR	3490490	CompoundStatement		2:23:24:24	3490478	1					
ANR	3490491	ReturnStatement	"return ( ( enclen ( enc , sn -> s ) < sn -> end - sn -> s ) ? 1 : 0 ) ;"	1564:4:33474:33531	3490478	0	True				
ANR	3490492	ConditionalExpression	"( enclen ( enc , sn -> s ) < sn -> end - sn -> s ) ? 1 : 0"		3490478	0					
ANR	3490493	Condition	"enclen ( enc , sn -> s ) < sn -> end - sn -> s"		3490478	0					
ANR	3490494	RelationalExpression	"enclen ( enc , sn -> s ) < sn -> end - sn -> s"		3490478	0		<			
ANR	3490495	CallExpression	"enclen ( enc , sn -> s )"		3490478	0					
ANR	3490496	Callee	enclen		3490478	0					
ANR	3490497	Identifier	enclen		3490478	0					
ANR	3490498	ArgumentList	enc		3490478	1					
ANR	3490499	Argument	enc		3490478	0					
ANR	3490500	Identifier	enc		3490478	0					
ANR	3490501	Argument	sn -> s		3490478	1					
ANR	3490502	PtrMemberAccess	sn -> s		3490478	0					
ANR	3490503	Identifier	sn		3490478	0					
ANR	3490504	Identifier	s		3490478	1					
ANR	3490505	AdditiveExpression	sn -> end - sn -> s		3490478	1		-			
ANR	3490506	PtrMemberAccess	sn -> end		3490478	0					
ANR	3490507	Identifier	sn		3490478	0					
ANR	3490508	Identifier	end		3490478	1					
ANR	3490509	PtrMemberAccess	sn -> s		3490478	1					
ANR	3490510	Identifier	sn		3490478	0					
ANR	3490511	Identifier	s		3490478	1					
ANR	3490512	PrimaryExpression	1		3490478	1					
ANR	3490513	PrimaryExpression	0		3490478	2					
ANR	3490514	ReturnStatement	return 0 ;	1566:2:33539:33547	3490478	1	True				
ANR	3490515	PrimaryExpression	0		3490478	0					
ANR	3490516	ReturnType	static int		3490478	1					
ANR	3490517	Identifier	str_node_can_be_split		3490478	2					
ANR	3490518	ParameterList	"StrNode * sn , OnigEncoding enc"		3490478	3					
ANR	3490519	Parameter	StrNode * sn	1561:22:33412:33422	3490478	0	True				
ANR	3490520	ParameterType	StrNode *		3490478	0					
ANR	3490521	Identifier	sn		3490478	1					
ANR	3490522	Parameter	OnigEncoding enc	1561:35:33425:33440	3490478	1	True				
ANR	3490523	ParameterType	OnigEncoding		3490478	0					
ANR	3490524	Identifier	enc		3490478	1					
ANR	3490525	CFGEntryNode	ENTRY		3490478		True				
ANR	3490526	CFGExitNode	EXIT		3490478		True				
ANR	3490527	Symbol	* sn		3490478						
ANR	3490528	Symbol	sn -> s		3490478						
ANR	3490529	Symbol	sn		3490478						
ANR	3490530	Symbol	enc		3490478						
ANR	3490531	Symbol	sn -> end		3490478						
ANR	3490532	Symbol	enclen		3490478						
ANR	3490533	Function	node_str_head_pad	1570:0:33586:33877							
ANR	3490534	FunctionDef	"node_str_head_pad (StrNode * sn , int num , UChar val)"		3490533	0					
ANR	3490535	CompoundStatement		1572:0:33648:33877	3490533	0					
ANR	3490536	IdentifierDeclStatement	UChar buf [ NODE_STR_BUF_SIZE ] ;	1573:2:33652:33680	3490533	0	True				
ANR	3490537	IdentifierDecl	buf [ NODE_STR_BUF_SIZE ]		3490533	0					
ANR	3490538	IdentifierDeclType	UChar [ NODE_STR_BUF_SIZE ]		3490533	0					
ANR	3490539	Identifier	buf		3490533	1					
ANR	3490540	Identifier	NODE_STR_BUF_SIZE		3490533	2					
ANR	3490541	IdentifierDeclStatement	"int i , len ;"	1574:2:33684:33694	3490533	1	True				
ANR	3490542	IdentifierDecl	i		3490533	0					
ANR	3490543	IdentifierDeclType	int		3490533	0					
ANR	3490544	Identifier	i		3490533	1					
ANR	3490545	IdentifierDecl	len		3490533	1					
ANR	3490546	IdentifierDeclType	int		3490533	0					
ANR	3490547	Identifier	len		3490533	1					
ANR	3490548	ExpressionStatement	len = sn -> end - sn -> s	1576:2:33699:33720	3490533	2	True				
ANR	3490549	AssignmentExpression	len = sn -> end - sn -> s		3490533	0		=			
ANR	3490550	Identifier	len		3490533	0					
ANR	3490551	AdditiveExpression	sn -> end - sn -> s		3490533	1		-			
ANR	3490552	PtrMemberAccess	sn -> end		3490533	0					
ANR	3490553	Identifier	sn		3490533	0					
ANR	3490554	Identifier	end		3490533	1					
ANR	3490555	PtrMemberAccess	sn -> s		3490533	1					
ANR	3490556	Identifier	sn		3490533	0					
ANR	3490557	Identifier	s		3490533	1					
ANR	3490558	ExpressionStatement	"onig_strcpy ( buf , sn -> s , sn -> end )"	1577:2:33724:33756	3490533	3	True				
ANR	3490559	CallExpression	"onig_strcpy ( buf , sn -> s , sn -> end )"		3490533	0					
ANR	3490560	Callee	onig_strcpy		3490533	0					
ANR	3490561	Identifier	onig_strcpy		3490533	0					
ANR	3490562	ArgumentList	buf		3490533	1					
ANR	3490563	Argument	buf		3490533	0					
ANR	3490564	Identifier	buf		3490533	0					
ANR	3490565	Argument	sn -> s		3490533	1					
ANR	3490566	PtrMemberAccess	sn -> s		3490533	0					
ANR	3490567	Identifier	sn		3490533	0					
ANR	3490568	Identifier	s		3490533	1					
ANR	3490569	Argument	sn -> end		3490533	2					
ANR	3490570	PtrMemberAccess	sn -> end		3490533	0					
ANR	3490571	Identifier	sn		3490533	0					
ANR	3490572	Identifier	end		3490533	1					
ANR	3490573	ExpressionStatement	"onig_strcpy ( & ( sn -> s [ num ] ) , buf , buf + len )"	1578:2:33760:33802	3490533	4	True				
ANR	3490574	CallExpression	"onig_strcpy ( & ( sn -> s [ num ] ) , buf , buf + len )"		3490533	0					
ANR	3490575	Callee	onig_strcpy		3490533	0					
ANR	3490576	Identifier	onig_strcpy		3490533	0					
ANR	3490577	ArgumentList	& ( sn -> s [ num ] )		3490533	1					
ANR	3490578	Argument	& ( sn -> s [ num ] )		3490533	0					
ANR	3490579	UnaryOperationExpression	& ( sn -> s [ num ] )		3490533	0					
ANR	3490580	UnaryOperator	&		3490533	0					
ANR	3490581	ArrayIndexing	sn -> s [ num ]		3490533	1					
ANR	3490582	PtrMemberAccess	sn -> s		3490533	0					
ANR	3490583	Identifier	sn		3490533	0					
ANR	3490584	Identifier	s		3490533	1					
ANR	3490585	Identifier	num		3490533	1					
ANR	3490586	Argument	buf		3490533	1					
ANR	3490587	Identifier	buf		3490533	0					
ANR	3490588	Argument	buf + len		3490533	2					
ANR	3490589	AdditiveExpression	buf + len		3490533	0		+			
ANR	3490590	Identifier	buf		3490533	0					
ANR	3490591	Identifier	len		3490533	1					
ANR	3490592	ExpressionStatement	sn -> end += num	1579:2:33806:33820	3490533	5	True				
ANR	3490593	AssignmentExpression	sn -> end += num		3490533	0		+=			
ANR	3490594	PtrMemberAccess	sn -> end		3490533	0					
ANR	3490595	Identifier	sn		3490533	0					
ANR	3490596	Identifier	end		3490533	1					
ANR	3490597	Identifier	num		3490533	1					
ANR	3490598	ForStatement	for ( i = 0 ; i < num ; i ++ )		3490533	6					
ANR	3490599	ForInit	i = 0 ;	1581:7:33830:33835	3490533	0	True				
ANR	3490600	AssignmentExpression	i = 0		3490533	0		=			
ANR	3490601	Identifier	i		3490533	0					
ANR	3490602	PrimaryExpression	0		3490533	1					
ANR	3490603	Condition	i < num	1581:14:33837:33843	3490533	1	True				
ANR	3490604	RelationalExpression	i < num		3490533	0		<			
ANR	3490605	Identifier	i		3490533	0					
ANR	3490606	Identifier	num		3490533	1					
ANR	3490607	PostIncDecOperationExpression	i ++	1581:23:33846:33848	3490533	2	True				
ANR	3490608	Identifier	i		3490533	0					
ANR	3490609	IncDec	++		3490533	1					
ANR	3490610	CompoundStatement		10:28:202:202	3490533	3					
ANR	3490611	ExpressionStatement	sn -> s [ i ] = val	1582:4:33857:33871	3490533	0	True				
ANR	3490612	AssignmentExpression	sn -> s [ i ] = val		3490533	0		=			
ANR	3490613	ArrayIndexing	sn -> s [ i ]		3490533	0					
ANR	3490614	PtrMemberAccess	sn -> s		3490533	0					
ANR	3490615	Identifier	sn		3490533	0					
ANR	3490616	Identifier	s		3490533	1					
ANR	3490617	Identifier	i		3490533	1					
ANR	3490618	Identifier	val		3490533	1					
ANR	3490619	ReturnType	static int		3490533	1					
ANR	3490620	Identifier	node_str_head_pad		3490533	2					
ANR	3490621	ParameterList	"StrNode * sn , int num , UChar val"		3490533	3					
ANR	3490622	Parameter	StrNode * sn	1571:18:33615:33625	3490533	0	True				
ANR	3490623	ParameterType	StrNode *		3490533	0					
ANR	3490624	Identifier	sn		3490533	1					
ANR	3490625	Parameter	int num	1571:31:33628:33634	3490533	1	True				
ANR	3490626	ParameterType	int		3490533	0					
ANR	3490627	Identifier	num		3490533	1					
ANR	3490628	Parameter	UChar val	1571:40:33637:33645	3490533	2	True				
ANR	3490629	ParameterType	UChar		3490533	0					
ANR	3490630	Identifier	val		3490533	1					
ANR	3490631	CFGEntryNode	ENTRY		3490533		True				
ANR	3490632	CFGExitNode	EXIT		3490533		True				
ANR	3490633	Symbol	val		3490533						
ANR	3490634	Symbol	buf		3490533						
ANR	3490635	Symbol	* sn		3490533						
ANR	3490636	Symbol	sn -> s		3490533						
ANR	3490637	Symbol	* i		3490533						
ANR	3490638	Symbol	len		3490533						
ANR	3490639	Symbol	* * sn		3490533						
ANR	3490640	Symbol	num		3490533						
ANR	3490641	Symbol	i		3490533						
ANR	3490642	Symbol	* sn -> s		3490533						
ANR	3490643	Symbol	sn		3490533						
ANR	3490644	Symbol	sn -> end		3490533						
ANR	3490645	Function	onig_scan_unsigned_number	1587:0:33887:34365							
ANR	3490646	FunctionDef	"onig_scan_unsigned_number (UChar * * src , const UChar * end , OnigEncoding enc)"		3490645	0					
ANR	3490647	CompoundStatement		1589:0:33973:34365	3490645	0					
ANR	3490648	IdentifierDeclStatement	"unsigned int num , val ;"	1590:2:33977:33998	3490645	0	True				
ANR	3490649	IdentifierDecl	num		3490645	0					
ANR	3490650	IdentifierDeclType	unsigned int		3490645	0					
ANR	3490651	Identifier	num		3490645	1					
ANR	3490652	IdentifierDecl	val		3490645	1					
ANR	3490653	IdentifierDeclType	unsigned int		3490645	0					
ANR	3490654	Identifier	val		3490645	1					
ANR	3490655	IdentifierDeclStatement	OnigCodePoint c ;	1591:2:34002:34017	3490645	1	True				
ANR	3490656	IdentifierDecl	c		3490645	0					
ANR	3490657	IdentifierDeclType	OnigCodePoint		3490645	0					
ANR	3490658	Identifier	c		3490645	1					
ANR	3490659	IdentifierDeclStatement	UChar * p = * src ;	1592:2:34021:34036	3490645	2	True				
ANR	3490660	IdentifierDecl	* p = * src		3490645	0					
ANR	3490661	IdentifierDeclType	UChar *		3490645	0					
ANR	3490662	Identifier	p		3490645	1					
ANR	3490663	AssignmentExpression	* p = * src		3490645	2		=			
ANR	3490664	Identifier	p		3490645	0					
ANR	3490665	UnaryOperationExpression	* src		3490645	1					
ANR	3490666	UnaryOperator	*		3490645	0					
ANR	3490667	Identifier	src		3490645	1					
ANR	3490668	ExpressionStatement	PFETCH_READY	1593:2:34040:34052	3490645	3	True				
ANR	3490669	Identifier	PFETCH_READY		3490645	0					
ANR	3490670	ExpressionStatement	num = 0	1595:2:34057:34064	3490645	4	True				
ANR	3490671	AssignmentExpression	num = 0		3490645	0		=			
ANR	3490672	Identifier	num		3490645	0					
ANR	3490673	PrimaryExpression	0		3490645	1					
ANR	3490674	WhileStatement	while ( ! PEND )		3490645	5					
ANR	3490675	Condition	! PEND	1596:9:34075:34079	3490645	0	True				
ANR	3490676	UnaryOperationExpression	! PEND		3490645	0					
ANR	3490677	UnaryOperator	!		3490645	0					
ANR	3490678	Identifier	PEND		3490645	1					
ANR	3490679	CompoundStatement		8:16:108:108	3490645	1					
ANR	3490680	ExpressionStatement	PFETCH ( c )	1597:4:34088:34097	3490645	0	True				
ANR	3490681	CallExpression	PFETCH ( c )		3490645	0					
ANR	3490682	Callee	PFETCH		3490645	0					
ANR	3490683	Identifier	PFETCH		3490645	0					
ANR	3490684	ArgumentList	c		3490645	1					
ANR	3490685	Argument	c		3490645	0					
ANR	3490686	Identifier	c		3490645	0					
ANR	3490687	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		3490645	1					
ANR	3490688	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	1598:8:34107:34135	3490645	0	True				
ANR	3490689	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		3490645	0					
ANR	3490690	Callee	ONIGENC_IS_CODE_DIGIT		3490645	0					
ANR	3490691	Identifier	ONIGENC_IS_CODE_DIGIT		3490645	0					
ANR	3490692	ArgumentList	enc		3490645	1					
ANR	3490693	Argument	enc		3490645	0					
ANR	3490694	Identifier	enc		3490645	0					
ANR	3490695	Argument	c		3490645	1					
ANR	3490696	Identifier	c		3490645	0					
ANR	3490697	CompoundStatement		10:39:164:164	3490645	1					
ANR	3490698	ExpressionStatement	val = ( unsigned int ) DIGITVAL ( c )	1599:6:34146:34178	3490645	0	True				
ANR	3490699	AssignmentExpression	val = ( unsigned int ) DIGITVAL ( c )		3490645	0		=			
ANR	3490700	Identifier	val		3490645	0					
ANR	3490701	CastExpression	( unsigned int ) DIGITVAL ( c )		3490645	1					
ANR	3490702	CastTarget	unsigned int		3490645	0					
ANR	3490703	CallExpression	DIGITVAL ( c )		3490645	1					
ANR	3490704	Callee	DIGITVAL		3490645	0					
ANR	3490705	Identifier	DIGITVAL		3490645	0					
ANR	3490706	ArgumentList	c		3490645	1					
ANR	3490707	Argument	c		3490645	0					
ANR	3490708	Identifier	c		3490645	0					
ANR	3490709	IfStatement	if ( ( INT_MAX_LIMIT - val ) / 10UL < num )		3490645	1					
ANR	3490710	Condition	( INT_MAX_LIMIT - val ) / 10UL < num	1600:10:34190:34223	3490645	0	True				
ANR	3490711	RelationalExpression	( INT_MAX_LIMIT - val ) / 10UL < num		3490645	0		<			
ANR	3490712	MultiplicativeExpression	( INT_MAX_LIMIT - val ) / 10UL		3490645	0		/			
ANR	3490713	AdditiveExpression	INT_MAX_LIMIT - val		3490645	0		-			
ANR	3490714	Identifier	INT_MAX_LIMIT		3490645	0					
ANR	3490715	Identifier	val		3490645	1					
ANR	3490716	PrimaryExpression	10UL		3490645	1					
ANR	3490717	Identifier	num		3490645	1					
ANR	3490718	ReturnStatement	return - 1 ;	1601:1:34227:34236	3490645	1	True				
ANR	3490719	UnaryOperationExpression	- 1		3490645	0					
ANR	3490720	UnaryOperator	-		3490645	0					
ANR	3490721	PrimaryExpression	1		3490645	1					
ANR	3490722	ExpressionStatement	num = num * 10 + val	1603:6:34261:34281	3490645	2	True				
ANR	3490723	AssignmentExpression	num = num * 10 + val		3490645	0		=			
ANR	3490724	Identifier	num		3490645	0					
ANR	3490725	AdditiveExpression	num * 10 + val		3490645	1		+			
ANR	3490726	MultiplicativeExpression	num * 10		3490645	0		*			
ANR	3490727	Identifier	num		3490645	0					
ANR	3490728	PrimaryExpression	10		3490645	1					
ANR	3490729	Identifier	val		3490645	1					
ANR	3490730	ElseStatement	else		3490645	0					
ANR	3490731	CompoundStatement		17:9:324:324	3490645	0					
ANR	3490732	ExpressionStatement	PUNFETCH	1606:6:34306:34314	3490645	0	True				
ANR	3490733	Identifier	PUNFETCH		3490645	0					
ANR	3490734	BreakStatement	break ;	1607:6:34322:34327	3490645	1	True				
ANR	3490735	ExpressionStatement	* src = p	1610:2:34341:34349	3490645	6	True				
ANR	3490736	AssignmentExpression	* src = p		3490645	0		=			
ANR	3490737	UnaryOperationExpression	* src		3490645	0					
ANR	3490738	UnaryOperator	*		3490645	0					
ANR	3490739	Identifier	src		3490645	1					
ANR	3490740	Identifier	p		3490645	1					
ANR	3490741	ReturnStatement	return num ;	1611:2:34353:34363	3490645	7	True				
ANR	3490742	Identifier	num		3490645	0					
ANR	3490743	ReturnType	extern int		3490645	1					
ANR	3490744	Identifier	onig_scan_unsigned_number		3490645	2					
ANR	3490745	ParameterList	"UChar * * src , const UChar * end , OnigEncoding enc"		3490645	3					
ANR	3490746	Parameter	UChar * * src	1588:26:33924:33934	3490645	0	True				
ANR	3490747	ParameterType	UChar * *		3490645	0					
ANR	3490748	Identifier	src		3490645	1					
ANR	3490749	Parameter	const UChar * end	1588:39:33937:33952	3490645	1	True				
ANR	3490750	ParameterType	const UChar *		3490645	0					
ANR	3490751	Identifier	end		3490645	1					
ANR	3490752	Parameter	OnigEncoding enc	1588:57:33955:33970	3490645	2	True				
ANR	3490753	ParameterType	OnigEncoding		3490645	0					
ANR	3490754	Identifier	enc		3490645	1					
ANR	3490755	CFGEntryNode	ENTRY		3490645		True				
ANR	3490756	CFGExitNode	EXIT		3490645		True				
ANR	3490757	Symbol	val		3490645						
ANR	3490758	Symbol	p		3490645						
ANR	3490759	Symbol	c		3490645						
ANR	3490760	Symbol	src		3490645						
ANR	3490761	Symbol	num		3490645						
ANR	3490762	Symbol	ONIGENC_IS_CODE_DIGIT		3490645						
ANR	3490763	Symbol	end		3490645						
ANR	3490764	Symbol	enc		3490645						
ANR	3490765	Symbol	INT_MAX_LIMIT		3490645						
ANR	3490766	Symbol	* src		3490645						
ANR	3490767	Symbol	PEND		3490645						
ANR	3490768	Symbol	DIGITVAL		3490645						
ANR	3490769	Function	scan_unsigned_hexadecimal_number	1614:0:34368:34902							
ANR	3490770	FunctionDef	"scan_unsigned_hexadecimal_number (UChar * * src , UChar * end , int maxlen , OnigEncoding enc)"		3490769	0					
ANR	3490771	CompoundStatement		1617:0:34472:34902	3490769	0					
ANR	3490772	IdentifierDeclStatement	OnigCodePoint c ;	1618:2:34476:34491	3490769	0	True				
ANR	3490773	IdentifierDecl	c		3490769	0					
ANR	3490774	IdentifierDeclType	OnigCodePoint		3490769	0					
ANR	3490775	Identifier	c		3490769	1					
ANR	3490776	IdentifierDeclStatement	"unsigned int num , val ;"	1619:2:34495:34516	3490769	1	True				
ANR	3490777	IdentifierDecl	num		3490769	0					
ANR	3490778	IdentifierDeclType	unsigned int		3490769	0					
ANR	3490779	Identifier	num		3490769	1					
ANR	3490780	IdentifierDecl	val		3490769	1					
ANR	3490781	IdentifierDeclType	unsigned int		3490769	0					
ANR	3490782	Identifier	val		3490769	1					
ANR	3490783	IdentifierDeclStatement	UChar * p = * src ;	1620:2:34520:34535	3490769	2	True				
ANR	3490784	IdentifierDecl	* p = * src		3490769	0					
ANR	3490785	IdentifierDeclType	UChar *		3490769	0					
ANR	3490786	Identifier	p		3490769	1					
ANR	3490787	AssignmentExpression	* p = * src		3490769	2		=			
ANR	3490788	Identifier	p		3490769	0					
ANR	3490789	UnaryOperationExpression	* src		3490769	1					
ANR	3490790	UnaryOperator	*		3490769	0					
ANR	3490791	Identifier	src		3490769	1					
ANR	3490792	ExpressionStatement	PFETCH_READY	1621:2:34539:34551	3490769	3	True				
ANR	3490793	Identifier	PFETCH_READY		3490769	0					
ANR	3490794	ExpressionStatement	num = 0	1623:2:34556:34563	3490769	4	True				
ANR	3490795	AssignmentExpression	num = 0		3490769	0		=			
ANR	3490796	Identifier	num		3490769	0					
ANR	3490797	PrimaryExpression	0		3490769	1					
ANR	3490798	WhileStatement	while ( ! PEND && maxlen -- != 0 )		3490769	5					
ANR	3490799	Condition	! PEND && maxlen -- != 0	1624:9:34574:34595	3490769	0	True				
ANR	3490800	AndExpression	! PEND && maxlen -- != 0		3490769	0		&&			
ANR	3490801	UnaryOperationExpression	! PEND		3490769	0					
ANR	3490802	UnaryOperator	!		3490769	0					
ANR	3490803	Identifier	PEND		3490769	1					
ANR	3490804	EqualityExpression	maxlen -- != 0		3490769	1		!=			
ANR	3490805	PostIncDecOperationExpression	maxlen --		3490769	0					
ANR	3490806	Identifier	maxlen		3490769	0					
ANR	3490807	IncDec	--		3490769	1					
ANR	3490808	PrimaryExpression	0		3490769	1					
ANR	3490809	CompoundStatement		8:33:125:125	3490769	1					
ANR	3490810	ExpressionStatement	PFETCH ( c )	1625:4:34604:34613	3490769	0	True				
ANR	3490811	CallExpression	PFETCH ( c )		3490769	0					
ANR	3490812	Callee	PFETCH		3490769	0					
ANR	3490813	Identifier	PFETCH		3490769	0					
ANR	3490814	ArgumentList	c		3490769	1					
ANR	3490815	Argument	c		3490769	0					
ANR	3490816	Identifier	c		3490769	0					
ANR	3490817	IfStatement	"if ( ONIGENC_IS_CODE_XDIGIT ( enc , c ) )"		3490769	1					
ANR	3490818	Condition	"ONIGENC_IS_CODE_XDIGIT ( enc , c )"	1626:8:34623:34652	3490769	0	True				
ANR	3490819	CallExpression	"ONIGENC_IS_CODE_XDIGIT ( enc , c )"		3490769	0					
ANR	3490820	Callee	ONIGENC_IS_CODE_XDIGIT		3490769	0					
ANR	3490821	Identifier	ONIGENC_IS_CODE_XDIGIT		3490769	0					
ANR	3490822	ArgumentList	enc		3490769	1					
ANR	3490823	Argument	enc		3490769	0					
ANR	3490824	Identifier	enc		3490769	0					
ANR	3490825	Argument	c		3490769	1					
ANR	3490826	Identifier	c		3490769	0					
ANR	3490827	CompoundStatement		10:40:182:182	3490769	1					
ANR	3490828	ExpressionStatement	"val = ( unsigned int ) XDIGITVAL ( enc , c )"	1627:6:34663:34700	3490769	0	True				
ANR	3490829	AssignmentExpression	"val = ( unsigned int ) XDIGITVAL ( enc , c )"		3490769	0		=			
ANR	3490830	Identifier	val		3490769	0					
ANR	3490831	CastExpression	"( unsigned int ) XDIGITVAL ( enc , c )"		3490769	1					
ANR	3490832	CastTarget	unsigned int		3490769	0					
ANR	3490833	CallExpression	"XDIGITVAL ( enc , c )"		3490769	1					
ANR	3490834	Callee	XDIGITVAL		3490769	0					
ANR	3490835	Identifier	XDIGITVAL		3490769	0					
ANR	3490836	ArgumentList	enc		3490769	1					
ANR	3490837	Argument	enc		3490769	0					
ANR	3490838	Identifier	enc		3490769	0					
ANR	3490839	Argument	c		3490769	1					
ANR	3490840	Identifier	c		3490769	0					
ANR	3490841	IfStatement	if ( ( INT_MAX_LIMIT - val ) / 16UL < num )		3490769	1					
ANR	3490842	Condition	( INT_MAX_LIMIT - val ) / 16UL < num	1628:10:34712:34745	3490769	0	True				
ANR	3490843	RelationalExpression	( INT_MAX_LIMIT - val ) / 16UL < num		3490769	0		<			
ANR	3490844	MultiplicativeExpression	( INT_MAX_LIMIT - val ) / 16UL		3490769	0		/			
ANR	3490845	AdditiveExpression	INT_MAX_LIMIT - val		3490769	0		-			
ANR	3490846	Identifier	INT_MAX_LIMIT		3490769	0					
ANR	3490847	Identifier	val		3490769	1					
ANR	3490848	PrimaryExpression	16UL		3490769	1					
ANR	3490849	Identifier	num		3490769	1					
ANR	3490850	ReturnStatement	return - 1 ;	1629:1:34749:34758	3490769	1	True				
ANR	3490851	UnaryOperationExpression	- 1		3490769	0					
ANR	3490852	UnaryOperator	-		3490769	0					
ANR	3490853	PrimaryExpression	1		3490769	1					
ANR	3490854	ExpressionStatement	"num = ( num << 4 ) + XDIGITVAL ( enc , c )"	1631:6:34783:34818	3490769	2	True				
ANR	3490855	AssignmentExpression	"num = ( num << 4 ) + XDIGITVAL ( enc , c )"		3490769	0		=			
ANR	3490856	Identifier	num		3490769	0					
ANR	3490857	AdditiveExpression	"( num << 4 ) + XDIGITVAL ( enc , c )"		3490769	1		+			
ANR	3490858	ShiftExpression	num << 4		3490769	0		<<			
ANR	3490859	Identifier	num		3490769	0					
ANR	3490860	PrimaryExpression	4		3490769	1					
ANR	3490861	CallExpression	"XDIGITVAL ( enc , c )"		3490769	1					
ANR	3490862	Callee	XDIGITVAL		3490769	0					
ANR	3490863	Identifier	XDIGITVAL		3490769	0					
ANR	3490864	ArgumentList	enc		3490769	1					
ANR	3490865	Argument	enc		3490769	0					
ANR	3490866	Identifier	enc		3490769	0					
ANR	3490867	Argument	c		3490769	1					
ANR	3490868	Identifier	c		3490769	0					
ANR	3490869	ElseStatement	else		3490769	0					
ANR	3490870	CompoundStatement		17:9:362:362	3490769	0					
ANR	3490871	ExpressionStatement	PUNFETCH	1634:6:34843:34851	3490769	0	True				
ANR	3490872	Identifier	PUNFETCH		3490769	0					
ANR	3490873	BreakStatement	break ;	1635:6:34859:34864	3490769	1	True				
ANR	3490874	ExpressionStatement	* src = p	1638:2:34878:34886	3490769	6	True				
ANR	3490875	AssignmentExpression	* src = p		3490769	0		=			
ANR	3490876	UnaryOperationExpression	* src		3490769	0					
ANR	3490877	UnaryOperator	*		3490769	0					
ANR	3490878	Identifier	src		3490769	1					
ANR	3490879	Identifier	p		3490769	1					
ANR	3490880	ReturnStatement	return num ;	1639:2:34890:34900	3490769	7	True				
ANR	3490881	Identifier	num		3490769	0					
ANR	3490882	ReturnType	static int		3490769	1					
ANR	3490883	Identifier	scan_unsigned_hexadecimal_number		3490769	2					
ANR	3490884	ParameterList	"UChar * * src , UChar * end , int maxlen , OnigEncoding enc"		3490769	3					
ANR	3490885	Parameter	UChar * * src	1615:33:34412:34422	3490769	0	True				
ANR	3490886	ParameterType	UChar * *		3490769	0					
ANR	3490887	Identifier	src		3490769	1					
ANR	3490888	Parameter	UChar * end	1615:46:34425:34434	3490769	1	True				
ANR	3490889	ParameterType	UChar *		3490769	0					
ANR	3490890	Identifier	end		3490769	1					
ANR	3490891	Parameter	int maxlen	1615:58:34437:34446	3490769	2	True				
ANR	3490892	ParameterType	int		3490769	0					
ANR	3490893	Identifier	maxlen		3490769	1					
ANR	3490894	Parameter	OnigEncoding enc	1616:5:34454:34469	3490769	3	True				
ANR	3490895	ParameterType	OnigEncoding		3490769	0					
ANR	3490896	Identifier	enc		3490769	1					
ANR	3490897	CFGEntryNode	ENTRY		3490769		True				
ANR	3490898	CFGExitNode	EXIT		3490769		True				
ANR	3490899	Symbol	val		3490769						
ANR	3490900	Symbol	c		3490769						
ANR	3490901	Symbol	ONIGENC_IS_CODE_XDIGIT		3490769						
ANR	3490902	Symbol	src		3490769						
ANR	3490903	Symbol	num		3490769						
ANR	3490904	Symbol	INT_MAX_LIMIT		3490769						
ANR	3490905	Symbol	* src		3490769						
ANR	3490906	Symbol	PEND		3490769						
ANR	3490907	Symbol	p		3490769						
ANR	3490908	Symbol	end		3490769						
ANR	3490909	Symbol	enc		3490769						
ANR	3490910	Symbol	XDIGITVAL		3490769						
ANR	3490911	Symbol	maxlen		3490769						
ANR	3490912	Function	scan_unsigned_octal_number	1642:0:34905:35411							
ANR	3490913	FunctionDef	"scan_unsigned_octal_number (UChar * * src , UChar * end , int maxlen , OnigEncoding enc)"		3490912	0					
ANR	3490914	CompoundStatement		1645:0:35004:35411	3490912	0					
ANR	3490915	IdentifierDeclStatement	OnigCodePoint c ;	1646:2:35008:35023	3490912	0	True				
ANR	3490916	IdentifierDecl	c		3490912	0					
ANR	3490917	IdentifierDeclType	OnigCodePoint		3490912	0					
ANR	3490918	Identifier	c		3490912	1					
ANR	3490919	IdentifierDeclStatement	"unsigned int num , val ;"	1647:2:35027:35048	3490912	1	True				
ANR	3490920	IdentifierDecl	num		3490912	0					
ANR	3490921	IdentifierDeclType	unsigned int		3490912	0					
ANR	3490922	Identifier	num		3490912	1					
ANR	3490923	IdentifierDecl	val		3490912	1					
ANR	3490924	IdentifierDeclType	unsigned int		3490912	0					
ANR	3490925	Identifier	val		3490912	1					
ANR	3490926	IdentifierDeclStatement	UChar * p = * src ;	1648:2:35052:35067	3490912	2	True				
ANR	3490927	IdentifierDecl	* p = * src		3490912	0					
ANR	3490928	IdentifierDeclType	UChar *		3490912	0					
ANR	3490929	Identifier	p		3490912	1					
ANR	3490930	AssignmentExpression	* p = * src		3490912	2		=			
ANR	3490931	Identifier	p		3490912	0					
ANR	3490932	UnaryOperationExpression	* src		3490912	1					
ANR	3490933	UnaryOperator	*		3490912	0					
ANR	3490934	Identifier	src		3490912	1					
ANR	3490935	ExpressionStatement	PFETCH_READY	1649:2:35071:35083	3490912	3	True				
ANR	3490936	Identifier	PFETCH_READY		3490912	0					
ANR	3490937	ExpressionStatement	num = 0	1651:2:35088:35095	3490912	4	True				
ANR	3490938	AssignmentExpression	num = 0		3490912	0		=			
ANR	3490939	Identifier	num		3490912	0					
ANR	3490940	PrimaryExpression	0		3490912	1					
ANR	3490941	WhileStatement	while ( ! PEND && maxlen -- != 0 )		3490912	5					
ANR	3490942	Condition	! PEND && maxlen -- != 0	1652:9:35106:35127	3490912	0	True				
ANR	3490943	AndExpression	! PEND && maxlen -- != 0		3490912	0		&&			
ANR	3490944	UnaryOperationExpression	! PEND		3490912	0					
ANR	3490945	UnaryOperator	!		3490912	0					
ANR	3490946	Identifier	PEND		3490912	1					
ANR	3490947	EqualityExpression	maxlen -- != 0		3490912	1		!=			
ANR	3490948	PostIncDecOperationExpression	maxlen --		3490912	0					
ANR	3490949	Identifier	maxlen		3490912	0					
ANR	3490950	IncDec	--		3490912	1					
ANR	3490951	PrimaryExpression	0		3490912	1					
ANR	3490952	CompoundStatement		8:33:125:125	3490912	1					
ANR	3490953	ExpressionStatement	PFETCH ( c )	1653:4:35136:35145	3490912	0	True				
ANR	3490954	CallExpression	PFETCH ( c )		3490912	0					
ANR	3490955	Callee	PFETCH		3490912	0					
ANR	3490956	Identifier	PFETCH		3490912	0					
ANR	3490957	ArgumentList	c		3490912	1					
ANR	3490958	Argument	c		3490912	0					
ANR	3490959	Identifier	c		3490912	0					
ANR	3490960	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) && c < '8' )"		3490912	1					
ANR	3490961	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c ) && c < '8'"	1654:8:35155:35194	3490912	0	True				
ANR	3490962	AndExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c ) && c < '8'"		3490912	0		&&			
ANR	3490963	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		3490912	0					
ANR	3490964	Callee	ONIGENC_IS_CODE_DIGIT		3490912	0					
ANR	3490965	Identifier	ONIGENC_IS_CODE_DIGIT		3490912	0					
ANR	3490966	ArgumentList	enc		3490912	1					
ANR	3490967	Argument	enc		3490912	0					
ANR	3490968	Identifier	enc		3490912	0					
ANR	3490969	Argument	c		3490912	1					
ANR	3490970	Identifier	c		3490912	0					
ANR	3490971	RelationalExpression	c < '8'		3490912	1		<			
ANR	3490972	Identifier	c		3490912	0					
ANR	3490973	PrimaryExpression	'8'		3490912	1					
ANR	3490974	CompoundStatement		10:50:192:192	3490912	1					
ANR	3490975	ExpressionStatement	val = ODIGITVAL ( c )	1655:6:35205:35223	3490912	0	True				
ANR	3490976	AssignmentExpression	val = ODIGITVAL ( c )		3490912	0		=			
ANR	3490977	Identifier	val		3490912	0					
ANR	3490978	CallExpression	ODIGITVAL ( c )		3490912	1					
ANR	3490979	Callee	ODIGITVAL		3490912	0					
ANR	3490980	Identifier	ODIGITVAL		3490912	0					
ANR	3490981	ArgumentList	c		3490912	1					
ANR	3490982	Argument	c		3490912	0					
ANR	3490983	Identifier	c		3490912	0					
ANR	3490984	IfStatement	if ( ( INT_MAX_LIMIT - val ) / 8UL < num )		3490912	1					
ANR	3490985	Condition	( INT_MAX_LIMIT - val ) / 8UL < num	1656:10:35235:35267	3490912	0	True				
ANR	3490986	RelationalExpression	( INT_MAX_LIMIT - val ) / 8UL < num		3490912	0		<			
ANR	3490987	MultiplicativeExpression	( INT_MAX_LIMIT - val ) / 8UL		3490912	0		/			
ANR	3490988	AdditiveExpression	INT_MAX_LIMIT - val		3490912	0		-			
ANR	3490989	Identifier	INT_MAX_LIMIT		3490912	0					
ANR	3490990	Identifier	val		3490912	1					
ANR	3490991	PrimaryExpression	8UL		3490912	1					
ANR	3490992	Identifier	num		3490912	1					
ANR	3490993	ReturnStatement	return - 1 ;	1657:1:35271:35280	3490912	1	True				
ANR	3490994	UnaryOperationExpression	- 1		3490912	0					
ANR	3490995	UnaryOperator	-		3490912	0					
ANR	3490996	PrimaryExpression	1		3490912	1					
ANR	3490997	ExpressionStatement	num = ( num << 3 ) + val	1659:6:35305:35327	3490912	2	True				
ANR	3490998	AssignmentExpression	num = ( num << 3 ) + val		3490912	0		=			
ANR	3490999	Identifier	num		3490912	0					
ANR	3491000	AdditiveExpression	( num << 3 ) + val		3490912	1		+			
ANR	3491001	ShiftExpression	num << 3		3490912	0		<<			
ANR	3491002	Identifier	num		3490912	0					
ANR	3491003	PrimaryExpression	3		3490912	1					
ANR	3491004	Identifier	val		3490912	1					
ANR	3491005	ElseStatement	else		3490912	0					
ANR	3491006	CompoundStatement		17:9:339:339	3490912	0					
ANR	3491007	ExpressionStatement	PUNFETCH	1662:6:35352:35360	3490912	0	True				
ANR	3491008	Identifier	PUNFETCH		3490912	0					
ANR	3491009	BreakStatement	break ;	1663:6:35368:35373	3490912	1	True				
ANR	3491010	ExpressionStatement	* src = p	1666:2:35387:35395	3490912	6	True				
ANR	3491011	AssignmentExpression	* src = p		3490912	0		=			
ANR	3491012	UnaryOperationExpression	* src		3490912	0					
ANR	3491013	UnaryOperator	*		3490912	0					
ANR	3491014	Identifier	src		3490912	1					
ANR	3491015	Identifier	p		3490912	1					
ANR	3491016	ReturnStatement	return num ;	1667:2:35399:35409	3490912	7	True				
ANR	3491017	Identifier	num		3490912	0					
ANR	3491018	ReturnType	static int		3490912	1					
ANR	3491019	Identifier	scan_unsigned_octal_number		3490912	2					
ANR	3491020	ParameterList	"UChar * * src , UChar * end , int maxlen , OnigEncoding enc"		3490912	3					
ANR	3491021	Parameter	UChar * * src	1643:27:34943:34953	3490912	0	True				
ANR	3491022	ParameterType	UChar * *		3490912	0					
ANR	3491023	Identifier	src		3490912	1					
ANR	3491024	Parameter	UChar * end	1643:40:34956:34965	3490912	1	True				
ANR	3491025	ParameterType	UChar *		3490912	0					
ANR	3491026	Identifier	end		3490912	1					
ANR	3491027	Parameter	int maxlen	1643:52:34968:34977	3490912	2	True				
ANR	3491028	ParameterType	int		3490912	0					
ANR	3491029	Identifier	maxlen		3490912	1					
ANR	3491030	Parameter	OnigEncoding enc	1644:6:34986:35001	3490912	3	True				
ANR	3491031	ParameterType	OnigEncoding		3490912	0					
ANR	3491032	Identifier	enc		3490912	1					
ANR	3491033	CFGEntryNode	ENTRY		3490912		True				
ANR	3491034	CFGExitNode	EXIT		3490912		True				
ANR	3491035	Symbol	val		3490912						
ANR	3491036	Symbol	c		3490912						
ANR	3491037	Symbol	src		3490912						
ANR	3491038	Symbol	num		3490912						
ANR	3491039	Symbol	ONIGENC_IS_CODE_DIGIT		3490912						
ANR	3491040	Symbol	ODIGITVAL		3490912						
ANR	3491041	Symbol	INT_MAX_LIMIT		3490912						
ANR	3491042	Symbol	* src		3490912						
ANR	3491043	Symbol	PEND		3490912						
ANR	3491044	Symbol	p		3490912						
ANR	3491045	Symbol	end		3490912						
ANR	3491046	Symbol	enc		3490912						
ANR	3491047	Symbol	maxlen		3490912						
ANR	3491048	Function	new_code_range	1678:0:35629:35984							
ANR	3491049	FunctionDef	new_code_range (BBuf * * pbuf)		3491048	0					
ANR	3491050	CompoundStatement		1680:0:35668:35984	3491048	0					
ANR	3491051	Statement	define	1681:1:35671:35676	3491048	0	True				
ANR	3491052	Statement	INIT_MULTI_BYTE_RANGE_SIZE	1681:8:35678:35703	3491048	1	True				
ANR	3491053	Statement	(	1681:36:35706:35706	3491048	2	True				
ANR	3491054	Statement	SIZE_CODE_POINT	1681:37:35707:35721	3491048	3	True				
ANR	3491055	Statement	*	1681:53:35723:35723	3491048	4	True				
ANR	3491056	Statement	5	1681:55:35725:35725	3491048	5	True				
ANR	3491057	Statement	)	1681:56:35726:35726	3491048	6	True				
ANR	3491058	IdentifierDeclStatement	int r ;	1682:2:35730:35735	3491048	7	True				
ANR	3491059	IdentifierDecl	r		3491048	0					
ANR	3491060	IdentifierDeclType	int		3491048	0					
ANR	3491061	Identifier	r		3491048	1					
ANR	3491062	IdentifierDeclStatement	OnigCodePoint n ;	1683:2:35739:35754	3491048	8	True				
ANR	3491063	IdentifierDecl	n		3491048	0					
ANR	3491064	IdentifierDeclType	OnigCodePoint		3491048	0					
ANR	3491065	Identifier	n		3491048	1					
ANR	3491066	IdentifierDeclStatement	BBuf * bbuf ;	1684:2:35758:35768	3491048	9	True				
ANR	3491067	IdentifierDecl	* bbuf		3491048	0					
ANR	3491068	IdentifierDeclType	BBuf *		3491048	0					
ANR	3491069	Identifier	bbuf		3491048	1					
ANR	3491070	ExpressionStatement	bbuf = * pbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )	1686:2:35773:35817	3491048	10	True				
ANR	3491071	AssignmentExpression	bbuf = * pbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		3491048	0		=			
ANR	3491072	Identifier	bbuf		3491048	0					
ANR	3491073	AssignmentExpression	* pbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		3491048	1		=			
ANR	3491074	UnaryOperationExpression	* pbuf		3491048	0					
ANR	3491075	UnaryOperator	*		3491048	0					
ANR	3491076	Identifier	pbuf		3491048	1					
ANR	3491077	CastExpression	( BBuf * ) xmalloc ( sizeof ( BBuf ) )		3491048	1					
ANR	3491078	CastTarget	BBuf *		3491048	0					
ANR	3491079	CallExpression	xmalloc ( sizeof ( BBuf ) )		3491048	1					
ANR	3491080	Callee	xmalloc		3491048	0					
ANR	3491081	Identifier	xmalloc		3491048	0					
ANR	3491082	ArgumentList	sizeof ( BBuf )		3491048	1					
ANR	3491083	Argument	sizeof ( BBuf )		3491048	0					
ANR	3491084	SizeofExpression	sizeof ( BBuf )		3491048	0					
ANR	3491085	Sizeof	sizeof		3491048	0					
ANR	3491086	SizeofOperand	BBuf		3491048	1					
ANR	3491087	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * pbuf )	1687:2:35821:35852	3491048	11	True				
ANR	3491088	CallExpression	CHECK_NULL_RETURN_MEMERR ( * pbuf )		3491048	0					
ANR	3491089	Callee	CHECK_NULL_RETURN_MEMERR		3491048	0					
ANR	3491090	Identifier	CHECK_NULL_RETURN_MEMERR		3491048	0					
ANR	3491091	ArgumentList	* pbuf		3491048	1					
ANR	3491092	Argument	* pbuf		3491048	0					
ANR	3491093	UnaryOperationExpression	* pbuf		3491048	0					
ANR	3491094	UnaryOperator	*		3491048	0					
ANR	3491095	Identifier	pbuf		3491048	1					
ANR	3491096	ExpressionStatement	"r = BBUF_INIT ( * pbuf , INIT_MULTI_BYTE_RANGE_SIZE )"	1688:2:35856:35904	3491048	12	True				
ANR	3491097	AssignmentExpression	"r = BBUF_INIT ( * pbuf , INIT_MULTI_BYTE_RANGE_SIZE )"		3491048	0		=			
ANR	3491098	Identifier	r		3491048	0					
ANR	3491099	CallExpression	"BBUF_INIT ( * pbuf , INIT_MULTI_BYTE_RANGE_SIZE )"		3491048	1					
ANR	3491100	Callee	BBUF_INIT		3491048	0					
ANR	3491101	Identifier	BBUF_INIT		3491048	0					
ANR	3491102	ArgumentList	* pbuf		3491048	1					
ANR	3491103	Argument	* pbuf		3491048	0					
ANR	3491104	UnaryOperationExpression	* pbuf		3491048	0					
ANR	3491105	UnaryOperator	*		3491048	0					
ANR	3491106	Identifier	pbuf		3491048	1					
ANR	3491107	Argument	INIT_MULTI_BYTE_RANGE_SIZE		3491048	1					
ANR	3491108	Identifier	INIT_MULTI_BYTE_RANGE_SIZE		3491048	0					
ANR	3491109	IfStatement	if ( r )		3491048	13					
ANR	3491110	Condition	r	1689:6:35912:35912	3491048	0	True				
ANR	3491111	Identifier	r		3491048	0					
ANR	3491112	ReturnStatement	return r ;	1689:9:35915:35923	3491048	1	True				
ANR	3491113	Identifier	r		3491048	0					
ANR	3491114	ExpressionStatement	n = 0	1691:2:35928:35933	3491048	14	True				
ANR	3491115	AssignmentExpression	n = 0		3491048	0		=			
ANR	3491116	Identifier	n		3491048	0					
ANR	3491117	PrimaryExpression	0		3491048	1					
ANR	3491118	ExpressionStatement	"BBUF_WRITE_CODE_POINT ( bbuf , 0 , n )"	1692:2:35937:35970	3491048	15	True				
ANR	3491119	CallExpression	"BBUF_WRITE_CODE_POINT ( bbuf , 0 , n )"		3491048	0					
ANR	3491120	Callee	BBUF_WRITE_CODE_POINT		3491048	0					
ANR	3491121	Identifier	BBUF_WRITE_CODE_POINT		3491048	0					
ANR	3491122	ArgumentList	bbuf		3491048	1					
ANR	3491123	Argument	bbuf		3491048	0					
ANR	3491124	Identifier	bbuf		3491048	0					
ANR	3491125	Argument	0		3491048	1					
ANR	3491126	PrimaryExpression	0		3491048	0					
ANR	3491127	Argument	n		3491048	2					
ANR	3491128	Identifier	n		3491048	0					
ANR	3491129	ReturnStatement	return 0 ;	1693:2:35974:35982	3491048	16	True				
ANR	3491130	PrimaryExpression	0		3491048	0					
ANR	3491131	ReturnType	static int		3491048	1					
ANR	3491132	Identifier	new_code_range		3491048	2					
ANR	3491133	ParameterList	BBuf * * pbuf		3491048	3					
ANR	3491134	Parameter	BBuf * * pbuf	1679:15:35655:35665	3491048	0	True				
ANR	3491135	ParameterType	BBuf * *		3491048	0					
ANR	3491136	Identifier	pbuf		3491048	1					
ANR	3491137	CFGEntryNode	ENTRY		3491048		True				
ANR	3491138	CFGExitNode	EXIT		3491048		True				
ANR	3491139	Symbol	r		3491048						
ANR	3491140	Symbol	xmalloc		3491048						
ANR	3491141	Symbol	pbuf		3491048						
ANR	3491142	Symbol	INIT_MULTI_BYTE_RANGE_SIZE		3491048						
ANR	3491143	Symbol	BBUF_INIT		3491048						
ANR	3491144	Symbol	* pbuf		3491048						
ANR	3491145	Symbol	n		3491048						
ANR	3491146	Symbol	bbuf		3491048						
ANR	3491147	Function	add_code_range_to_buf	1696:0:35987:37644							
ANR	3491148	FunctionDef	"add_code_range_to_buf (BBuf * * pbuf , OnigCodePoint from , OnigCodePoint to)"		3491147	0					
ANR	3491149	CompoundStatement		1698:0:36071:37644	3491147	0					
ANR	3491150	IdentifierDeclStatement	"int r , inc_n , pos ;"	1699:2:36075:36092	3491147	0	True				
ANR	3491151	IdentifierDecl	r		3491147	0					
ANR	3491152	IdentifierDeclType	int		3491147	0					
ANR	3491153	Identifier	r		3491147	1					
ANR	3491154	IdentifierDecl	inc_n		3491147	1					
ANR	3491155	IdentifierDeclType	int		3491147	0					
ANR	3491156	Identifier	inc_n		3491147	1					
ANR	3491157	IdentifierDecl	pos		3491147	2					
ANR	3491158	IdentifierDeclType	int		3491147	0					
ANR	3491159	Identifier	pos		3491147	1					
ANR	3491160	IdentifierDeclStatement	"int low , high , bound , x ;"	1700:2:36096:36119	3491147	1	True				
ANR	3491161	IdentifierDecl	low		3491147	0					
ANR	3491162	IdentifierDeclType	int		3491147	0					
ANR	3491163	Identifier	low		3491147	1					
ANR	3491164	IdentifierDecl	high		3491147	1					
ANR	3491165	IdentifierDeclType	int		3491147	0					
ANR	3491166	Identifier	high		3491147	1					
ANR	3491167	IdentifierDecl	bound		3491147	2					
ANR	3491168	IdentifierDeclType	int		3491147	0					
ANR	3491169	Identifier	bound		3491147	1					
ANR	3491170	IdentifierDecl	x		3491147	3					
ANR	3491171	IdentifierDeclType	int		3491147	0					
ANR	3491172	Identifier	x		3491147	1					
ANR	3491173	IdentifierDeclStatement	"OnigCodePoint n , * data ;"	1701:2:36123:36145	3491147	2	True				
ANR	3491174	IdentifierDecl	n		3491147	0					
ANR	3491175	IdentifierDeclType	OnigCodePoint		3491147	0					
ANR	3491176	Identifier	n		3491147	1					
ANR	3491177	IdentifierDecl	* data		3491147	1					
ANR	3491178	IdentifierDeclType	OnigCodePoint *		3491147	0					
ANR	3491179	Identifier	data		3491147	1					
ANR	3491180	IdentifierDeclStatement	BBuf * bbuf ;	1702:2:36149:36159	3491147	3	True				
ANR	3491181	IdentifierDecl	* bbuf		3491147	0					
ANR	3491182	IdentifierDeclType	BBuf *		3491147	0					
ANR	3491183	Identifier	bbuf		3491147	1					
ANR	3491184	IfStatement	if ( from > to )		3491147	4					
ANR	3491185	Condition	from > to	1704:6:36168:36176	3491147	0	True				
ANR	3491186	RelationalExpression	from > to		3491147	0		>			
ANR	3491187	Identifier	from		3491147	0					
ANR	3491188	Identifier	to		3491147	1					
ANR	3491189	CompoundStatement		7:17:107:107	3491147	1					
ANR	3491190	ExpressionStatement	n = from	1705:4:36185:36193	3491147	0	True				
ANR	3491191	AssignmentExpression	n = from		3491147	0		=			
ANR	3491192	Identifier	n		3491147	0					
ANR	3491193	Identifier	from		3491147	1					
ANR	3491194	ExpressionStatement	from = to	1705:14:36195:36204	3491147	1	True				
ANR	3491195	AssignmentExpression	from = to		3491147	0		=			
ANR	3491196	Identifier	from		3491147	0					
ANR	3491197	Identifier	to		3491147	1					
ANR	3491198	ExpressionStatement	to = n	1705:25:36206:36212	3491147	2	True				
ANR	3491199	AssignmentExpression	to = n		3491147	0		=			
ANR	3491200	Identifier	to		3491147	0					
ANR	3491201	Identifier	n		3491147	1					
ANR	3491202	IfStatement	if ( IS_NULL ( * pbuf ) )		3491147	5					
ANR	3491203	Condition	IS_NULL ( * pbuf )	1708:6:36225:36238	3491147	0	True				
ANR	3491204	CallExpression	IS_NULL ( * pbuf )		3491147	0					
ANR	3491205	Callee	IS_NULL		3491147	0					
ANR	3491206	Identifier	IS_NULL		3491147	0					
ANR	3491207	ArgumentList	* pbuf		3491147	1					
ANR	3491208	Argument	* pbuf		3491147	0					
ANR	3491209	UnaryOperationExpression	* pbuf		3491147	0					
ANR	3491210	UnaryOperator	*		3491147	0					
ANR	3491211	Identifier	pbuf		3491147	1					
ANR	3491212	CompoundStatement		11:22:169:169	3491147	1					
ANR	3491213	ExpressionStatement	r = new_code_range ( pbuf )	1709:4:36247:36271	3491147	0	True				
ANR	3491214	AssignmentExpression	r = new_code_range ( pbuf )		3491147	0		=			
ANR	3491215	Identifier	r		3491147	0					
ANR	3491216	CallExpression	new_code_range ( pbuf )		3491147	1					
ANR	3491217	Callee	new_code_range		3491147	0					
ANR	3491218	Identifier	new_code_range		3491147	0					
ANR	3491219	ArgumentList	pbuf		3491147	1					
ANR	3491220	Argument	pbuf		3491147	0					
ANR	3491221	Identifier	pbuf		3491147	0					
ANR	3491222	IfStatement	if ( r )		3491147	1					
ANR	3491223	Condition	r	1710:8:36281:36281	3491147	0	True				
ANR	3491224	Identifier	r		3491147	0					
ANR	3491225	ReturnStatement	return r ;	1710:11:36284:36292	3491147	1	True				
ANR	3491226	Identifier	r		3491147	0					
ANR	3491227	ExpressionStatement	bbuf = * pbuf	1711:4:36298:36310	3491147	2	True				
ANR	3491228	AssignmentExpression	bbuf = * pbuf		3491147	0		=			
ANR	3491229	Identifier	bbuf		3491147	0					
ANR	3491230	UnaryOperationExpression	* pbuf		3491147	1					
ANR	3491231	UnaryOperator	*		3491147	0					
ANR	3491232	Identifier	pbuf		3491147	1					
ANR	3491233	ExpressionStatement	n = 0	1712:4:36316:36321	3491147	3	True				
ANR	3491234	AssignmentExpression	n = 0		3491147	0		=			
ANR	3491235	Identifier	n		3491147	0					
ANR	3491236	PrimaryExpression	0		3491147	1					
ANR	3491237	ElseStatement	else		3491147	0					
ANR	3491238	CompoundStatement		17:7:262:262	3491147	0					
ANR	3491239	ExpressionStatement	bbuf = * pbuf	1715:4:36340:36352	3491147	0	True				
ANR	3491240	AssignmentExpression	bbuf = * pbuf		3491147	0		=			
ANR	3491241	Identifier	bbuf		3491147	0					
ANR	3491242	UnaryOperationExpression	* pbuf		3491147	1					
ANR	3491243	UnaryOperator	*		3491147	0					
ANR	3491244	Identifier	pbuf		3491147	1					
ANR	3491245	ExpressionStatement	"GET_CODE_POINT ( n , bbuf -> p )"	1716:4:36358:36384	3491147	1	True				
ANR	3491246	CallExpression	"GET_CODE_POINT ( n , bbuf -> p )"		3491147	0					
ANR	3491247	Callee	GET_CODE_POINT		3491147	0					
ANR	3491248	Identifier	GET_CODE_POINT		3491147	0					
ANR	3491249	ArgumentList	n		3491147	1					
ANR	3491250	Argument	n		3491147	0					
ANR	3491251	Identifier	n		3491147	0					
ANR	3491252	Argument	bbuf -> p		3491147	1					
ANR	3491253	PtrMemberAccess	bbuf -> p		3491147	0					
ANR	3491254	Identifier	bbuf		3491147	0					
ANR	3491255	Identifier	p		3491147	1					
ANR	3491256	ExpressionStatement	data = ( OnigCodePoint * ) ( bbuf -> p )	1718:2:36392:36425	3491147	6	True				
ANR	3491257	AssignmentExpression	data = ( OnigCodePoint * ) ( bbuf -> p )		3491147	0		=			
ANR	3491258	Identifier	data		3491147	0					
ANR	3491259	CastExpression	( OnigCodePoint * ) ( bbuf -> p )		3491147	1					
ANR	3491260	CastTarget	OnigCodePoint *		3491147	0					
ANR	3491261	PtrMemberAccess	bbuf -> p		3491147	1					
ANR	3491262	Identifier	bbuf		3491147	0					
ANR	3491263	Identifier	p		3491147	1					
ANR	3491264	ExpressionStatement	data ++	1719:2:36429:36435	3491147	7	True				
ANR	3491265	PostIncDecOperationExpression	data ++		3491147	0					
ANR	3491266	Identifier	data		3491147	0					
ANR	3491267	IncDec	++		3491147	1					
ANR	3491268	ForStatement	"for ( low = 0 , bound = n ; low < bound ; )"		3491147	8					
ANR	3491269	ForInit	"low = 0 , bound = n ;"	1721:7:36445:36463	3491147	0	True				
ANR	3491270	Expression	"low = 0 , bound = n"		3491147	0					
ANR	3491271	AssignmentExpression	low = 0		3491147	0		=			
ANR	3491272	Identifier	low		3491147	0					
ANR	3491273	PrimaryExpression	0		3491147	1					
ANR	3491274	AssignmentExpression	bound = n		3491147	1		=			
ANR	3491275	Identifier	bound		3491147	0					
ANR	3491276	Identifier	n		3491147	1					
ANR	3491277	Condition	low < bound	1721:27:36465:36475	3491147	1	True				
ANR	3491278	RelationalExpression	low < bound		3491147	0		<			
ANR	3491279	Identifier	low		3491147	0					
ANR	3491280	Identifier	bound		3491147	1					
ANR	3491281	CompoundStatement		24:42:408:408	3491147	2					
ANR	3491282	ExpressionStatement	x = ( low + bound ) >> 1	1722:4:36486:36508	3491147	0	True				
ANR	3491283	AssignmentExpression	x = ( low + bound ) >> 1		3491147	0		=			
ANR	3491284	Identifier	x		3491147	0					
ANR	3491285	ShiftExpression	( low + bound ) >> 1		3491147	1		>>			
ANR	3491286	AdditiveExpression	low + bound		3491147	0		+			
ANR	3491287	Identifier	low		3491147	0					
ANR	3491288	Identifier	bound		3491147	1					
ANR	3491289	PrimaryExpression	1		3491147	1					
ANR	3491290	IfStatement	if ( from > data [ x * 2 + 1 ] )		3491147	1					
ANR	3491291	Condition	from > data [ x * 2 + 1 ]	1723:8:36518:36537	3491147	0	True				
ANR	3491292	RelationalExpression	from > data [ x * 2 + 1 ]		3491147	0		>			
ANR	3491293	Identifier	from		3491147	0					
ANR	3491294	ArrayIndexing	data [ x * 2 + 1 ]		3491147	1					
ANR	3491295	Identifier	data		3491147	0					
ANR	3491296	AdditiveExpression	x * 2 + 1		3491147	1		+			
ANR	3491297	MultiplicativeExpression	x * 2		3491147	0		*			
ANR	3491298	Identifier	x		3491147	0					
ANR	3491299	PrimaryExpression	2		3491147	1					
ANR	3491300	PrimaryExpression	1		3491147	1					
ANR	3491301	ExpressionStatement	low = x + 1	1724:6:36546:36557	3491147	1	True				
ANR	3491302	AssignmentExpression	low = x + 1		3491147	0		=			
ANR	3491303	Identifier	low		3491147	0					
ANR	3491304	AdditiveExpression	x + 1		3491147	1		+			
ANR	3491305	Identifier	x		3491147	0					
ANR	3491306	PrimaryExpression	1		3491147	1					
ANR	3491307	ElseStatement	else		3491147	0					
ANR	3491308	ExpressionStatement	bound = x	1726:6:36574:36583	3491147	0	True				
ANR	3491309	AssignmentExpression	bound = x		3491147	0		=			
ANR	3491310	Identifier	bound		3491147	0					
ANR	3491311	Identifier	x		3491147	1					
ANR	3491312	ForStatement	"for ( high = low , bound = n ; high < bound ; )"		3491147	9					
ANR	3491313	ForInit	"high = low , bound = n ;"	1729:7:36597:36618	3491147	0	True				
ANR	3491314	Expression	"high = low , bound = n"		3491147	0					
ANR	3491315	AssignmentExpression	high = low		3491147	0		=			
ANR	3491316	Identifier	high		3491147	0					
ANR	3491317	Identifier	low		3491147	1					
ANR	3491318	AssignmentExpression	bound = n		3491147	1		=			
ANR	3491319	Identifier	bound		3491147	0					
ANR	3491320	Identifier	n		3491147	1					
ANR	3491321	Condition	high < bound	1729:30:36620:36631	3491147	1	True				
ANR	3491322	RelationalExpression	high < bound		3491147	0		<			
ANR	3491323	Identifier	high		3491147	0					
ANR	3491324	Identifier	bound		3491147	1					
ANR	3491325	CompoundStatement		32:46:564:564	3491147	2					
ANR	3491326	ExpressionStatement	x = ( high + bound ) >> 1	1730:4:36642:36665	3491147	0	True				
ANR	3491327	AssignmentExpression	x = ( high + bound ) >> 1		3491147	0		=			
ANR	3491328	Identifier	x		3491147	0					
ANR	3491329	ShiftExpression	( high + bound ) >> 1		3491147	1		>>			
ANR	3491330	AdditiveExpression	high + bound		3491147	0		+			
ANR	3491331	Identifier	high		3491147	0					
ANR	3491332	Identifier	bound		3491147	1					
ANR	3491333	PrimaryExpression	1		3491147	1					
ANR	3491334	IfStatement	if ( to >= data [ x * 2 ] - 1 )		3491147	1					
ANR	3491335	Condition	to >= data [ x * 2 ] - 1	1731:8:36675:36693	3491147	0	True				
ANR	3491336	RelationalExpression	to >= data [ x * 2 ] - 1		3491147	0		>=			
ANR	3491337	Identifier	to		3491147	0					
ANR	3491338	AdditiveExpression	data [ x * 2 ] - 1		3491147	1		-			
ANR	3491339	ArrayIndexing	data [ x * 2 ]		3491147	0					
ANR	3491340	Identifier	data		3491147	0					
ANR	3491341	MultiplicativeExpression	x * 2		3491147	1		*			
ANR	3491342	Identifier	x		3491147	0					
ANR	3491343	PrimaryExpression	2		3491147	1					
ANR	3491344	PrimaryExpression	1		3491147	1					
ANR	3491345	ExpressionStatement	high = x + 1	1732:6:36702:36714	3491147	1	True				
ANR	3491346	AssignmentExpression	high = x + 1		3491147	0		=			
ANR	3491347	Identifier	high		3491147	0					
ANR	3491348	AdditiveExpression	x + 1		3491147	1		+			
ANR	3491349	Identifier	x		3491147	0					
ANR	3491350	PrimaryExpression	1		3491147	1					
ANR	3491351	ElseStatement	else		3491147	0					
ANR	3491352	ExpressionStatement	bound = x	1734:6:36731:36740	3491147	0	True				
ANR	3491353	AssignmentExpression	bound = x		3491147	0		=			
ANR	3491354	Identifier	bound		3491147	0					
ANR	3491355	Identifier	x		3491147	1					
ANR	3491356	ExpressionStatement	inc_n = low + 1 - high	1737:2:36749:36771	3491147	10	True				
ANR	3491357	AssignmentExpression	inc_n = low + 1 - high		3491147	0		=			
ANR	3491358	Identifier	inc_n		3491147	0					
ANR	3491359	AdditiveExpression	low + 1 - high		3491147	1		+			
ANR	3491360	Identifier	low		3491147	0					
ANR	3491361	AdditiveExpression	1 - high		3491147	1		-			
ANR	3491362	PrimaryExpression	1		3491147	0					
ANR	3491363	Identifier	high		3491147	1					
ANR	3491364	IfStatement	if ( n + inc_n > ONIG_MAX_MULTI_BYTE_RANGES_NUM )		3491147	11					
ANR	3491365	Condition	n + inc_n > ONIG_MAX_MULTI_BYTE_RANGES_NUM	1738:6:36779:36820	3491147	0	True				
ANR	3491366	RelationalExpression	n + inc_n > ONIG_MAX_MULTI_BYTE_RANGES_NUM		3491147	0		>			
ANR	3491367	AdditiveExpression	n + inc_n		3491147	0		+			
ANR	3491368	Identifier	n		3491147	0					
ANR	3491369	Identifier	inc_n		3491147	1					
ANR	3491370	Identifier	ONIG_MAX_MULTI_BYTE_RANGES_NUM		3491147	1					
ANR	3491371	ReturnStatement	return ONIGERR_TOO_MANY_MULTI_BYTE_RANGES ;	1739:4:36827:36868	3491147	1	True				
ANR	3491372	Identifier	ONIGERR_TOO_MANY_MULTI_BYTE_RANGES		3491147	0					
ANR	3491373	IfStatement	if ( inc_n != 1 )		3491147	12					
ANR	3491374	Condition	inc_n != 1	1741:6:36877:36886	3491147	0	True				
ANR	3491375	EqualityExpression	inc_n != 1		3491147	0		!=			
ANR	3491376	Identifier	inc_n		3491147	0					
ANR	3491377	PrimaryExpression	1		3491147	1					
ANR	3491378	CompoundStatement		44:18:817:817	3491147	1					
ANR	3491379	IfStatement	if ( from > data [ low * 2 ] )		3491147	0					
ANR	3491380	Condition	from > data [ low * 2 ]	1742:8:36899:36916	3491147	0	True				
ANR	3491381	RelationalExpression	from > data [ low * 2 ]		3491147	0		>			
ANR	3491382	Identifier	from		3491147	0					
ANR	3491383	ArrayIndexing	data [ low * 2 ]		3491147	1					
ANR	3491384	Identifier	data		3491147	0					
ANR	3491385	MultiplicativeExpression	low * 2		3491147	1		*			
ANR	3491386	Identifier	low		3491147	0					
ANR	3491387	PrimaryExpression	2		3491147	1					
ANR	3491388	ExpressionStatement	from = data [ low * 2 ]	1743:6:36925:36943	3491147	1	True				
ANR	3491389	AssignmentExpression	from = data [ low * 2 ]		3491147	0		=			
ANR	3491390	Identifier	from		3491147	0					
ANR	3491391	ArrayIndexing	data [ low * 2 ]		3491147	1					
ANR	3491392	Identifier	data		3491147	0					
ANR	3491393	MultiplicativeExpression	low * 2		3491147	1		*			
ANR	3491394	Identifier	low		3491147	0					
ANR	3491395	PrimaryExpression	2		3491147	1					
ANR	3491396	IfStatement	if ( to < data [ ( high - 1 ) * 2 + 1 ] )		3491147	1					
ANR	3491397	Condition	to < data [ ( high - 1 ) * 2 + 1 ]	1744:8:36953:36979	3491147	0	True				
ANR	3491398	RelationalExpression	to < data [ ( high - 1 ) * 2 + 1 ]		3491147	0		<			
ANR	3491399	Identifier	to		3491147	0					
ANR	3491400	ArrayIndexing	data [ ( high - 1 ) * 2 + 1 ]		3491147	1					
ANR	3491401	Identifier	data		3491147	0					
ANR	3491402	AdditiveExpression	( high - 1 ) * 2 + 1		3491147	1		+			
ANR	3491403	MultiplicativeExpression	( high - 1 ) * 2		3491147	0		*			
ANR	3491404	AdditiveExpression	high - 1		3491147	0		-			
ANR	3491405	Identifier	high		3491147	0					
ANR	3491406	PrimaryExpression	1		3491147	1					
ANR	3491407	PrimaryExpression	2		3491147	1					
ANR	3491408	PrimaryExpression	1		3491147	1					
ANR	3491409	ExpressionStatement	to = data [ ( high - 1 ) * 2 + 1 ]	1745:6:36988:37015	3491147	1	True				
ANR	3491410	AssignmentExpression	to = data [ ( high - 1 ) * 2 + 1 ]		3491147	0		=			
ANR	3491411	Identifier	to		3491147	0					
ANR	3491412	ArrayIndexing	data [ ( high - 1 ) * 2 + 1 ]		3491147	1					
ANR	3491413	Identifier	data		3491147	0					
ANR	3491414	AdditiveExpression	( high - 1 ) * 2 + 1		3491147	1		+			
ANR	3491415	MultiplicativeExpression	( high - 1 ) * 2		3491147	0		*			
ANR	3491416	AdditiveExpression	high - 1		3491147	0		-			
ANR	3491417	Identifier	high		3491147	0					
ANR	3491418	PrimaryExpression	1		3491147	1					
ANR	3491419	PrimaryExpression	2		3491147	1					
ANR	3491420	PrimaryExpression	1		3491147	1					
ANR	3491421	IfStatement	if ( inc_n != 0 && ( OnigCodePoint ) high < n )		3491147	13					
ANR	3491422	Condition	inc_n != 0 && ( OnigCodePoint ) high < n	1748:6:37028:37065	3491147	0	True				
ANR	3491423	AndExpression	inc_n != 0 && ( OnigCodePoint ) high < n		3491147	0		&&			
ANR	3491424	EqualityExpression	inc_n != 0		3491147	0		!=			
ANR	3491425	Identifier	inc_n		3491147	0					
ANR	3491426	PrimaryExpression	0		3491147	1					
ANR	3491427	RelationalExpression	( OnigCodePoint ) high < n		3491147	1		<			
ANR	3491428	CastExpression	( OnigCodePoint ) high		3491147	0					
ANR	3491429	CastTarget	OnigCodePoint		3491147	0					
ANR	3491430	Identifier	high		3491147	1					
ANR	3491431	Identifier	n		3491147	1					
ANR	3491432	CompoundStatement		54:4:1113:1156	3491147	1					
ANR	3491433	IdentifierDeclStatement	int from_pos = SIZE_CODE_POINT * ( 1 + high * 2 ) ;	1749:4:37074:37121	3491147	0	True				
ANR	3491434	IdentifierDecl	from_pos = SIZE_CODE_POINT * ( 1 + high * 2 )		3491147	0					
ANR	3491435	IdentifierDeclType	int		3491147	0					
ANR	3491436	Identifier	from_pos		3491147	1					
ANR	3491437	AssignmentExpression	from_pos = SIZE_CODE_POINT * ( 1 + high * 2 )		3491147	2		=			
ANR	3491438	Identifier	from_pos		3491147	0					
ANR	3491439	MultiplicativeExpression	SIZE_CODE_POINT * ( 1 + high * 2 )		3491147	1		*			
ANR	3491440	Identifier	SIZE_CODE_POINT		3491147	0					
ANR	3491441	AdditiveExpression	1 + high * 2		3491147	1		+			
ANR	3491442	PrimaryExpression	1		3491147	0					
ANR	3491443	MultiplicativeExpression	high * 2		3491147	1		*			
ANR	3491444	Identifier	high		3491147	0					
ANR	3491445	PrimaryExpression	2		3491147	1					
ANR	3491446	IdentifierDeclStatement	int to_pos = SIZE_CODE_POINT * ( 1 + ( low + 1 ) * 2 ) ;	1750:4:37127:37179	3491147	1	True				
ANR	3491447	IdentifierDecl	to_pos = SIZE_CODE_POINT * ( 1 + ( low + 1 ) * 2 )		3491147	0					
ANR	3491448	IdentifierDeclType	int		3491147	0					
ANR	3491449	Identifier	to_pos		3491147	1					
ANR	3491450	AssignmentExpression	to_pos = SIZE_CODE_POINT * ( 1 + ( low + 1 ) * 2 )		3491147	2		=			
ANR	3491451	Identifier	to_pos		3491147	0					
ANR	3491452	MultiplicativeExpression	SIZE_CODE_POINT * ( 1 + ( low + 1 ) * 2 )		3491147	1		*			
ANR	3491453	Identifier	SIZE_CODE_POINT		3491147	0					
ANR	3491454	AdditiveExpression	1 + ( low + 1 ) * 2		3491147	1		+			
ANR	3491455	PrimaryExpression	1		3491147	0					
ANR	3491456	MultiplicativeExpression	( low + 1 ) * 2		3491147	1		*			
ANR	3491457	AdditiveExpression	low + 1		3491147	0		+			
ANR	3491458	Identifier	low		3491147	0					
ANR	3491459	PrimaryExpression	1		3491147	1					
ANR	3491460	PrimaryExpression	2		3491147	1					
ANR	3491461	IdentifierDeclStatement	int size = ( n - high ) * 2 * SIZE_CODE_POINT ;	1751:4:37185:37228	3491147	2	True				
ANR	3491462	IdentifierDecl	size = ( n - high ) * 2 * SIZE_CODE_POINT		3491147	0					
ANR	3491463	IdentifierDeclType	int		3491147	0					
ANR	3491464	Identifier	size		3491147	1					
ANR	3491465	AssignmentExpression	size = ( n - high ) * 2 * SIZE_CODE_POINT		3491147	2		=			
ANR	3491466	Identifier	size		3491147	0					
ANR	3491467	MultiplicativeExpression	( n - high ) * 2 * SIZE_CODE_POINT		3491147	1		*			
ANR	3491468	AdditiveExpression	n - high		3491147	0		-			
ANR	3491469	Identifier	n		3491147	0					
ANR	3491470	Identifier	high		3491147	1					
ANR	3491471	MultiplicativeExpression	2 * SIZE_CODE_POINT		3491147	1		*			
ANR	3491472	PrimaryExpression	2		3491147	0					
ANR	3491473	Identifier	SIZE_CODE_POINT		3491147	1					
ANR	3491474	IfStatement	if ( inc_n > 0 )		3491147	3					
ANR	3491475	Condition	inc_n > 0	1753:8:37239:37247	3491147	0	True				
ANR	3491476	RelationalExpression	inc_n > 0		3491147	0		>			
ANR	3491477	Identifier	inc_n		3491147	0					
ANR	3491478	PrimaryExpression	0		3491147	1					
ANR	3491479	CompoundStatement		56:19:1178:1178	3491147	1					
ANR	3491480	ExpressionStatement	"BBUF_MOVE_RIGHT ( bbuf , from_pos , to_pos , size )"	1754:6:37258:37303	3491147	0	True				
ANR	3491481	CallExpression	"BBUF_MOVE_RIGHT ( bbuf , from_pos , to_pos , size )"		3491147	0					
ANR	3491482	Callee	BBUF_MOVE_RIGHT		3491147	0					
ANR	3491483	Identifier	BBUF_MOVE_RIGHT		3491147	0					
ANR	3491484	ArgumentList	bbuf		3491147	1					
ANR	3491485	Argument	bbuf		3491147	0					
ANR	3491486	Identifier	bbuf		3491147	0					
ANR	3491487	Argument	from_pos		3491147	1					
ANR	3491488	Identifier	from_pos		3491147	0					
ANR	3491489	Argument	to_pos		3491147	2					
ANR	3491490	Identifier	to_pos		3491147	0					
ANR	3491491	Argument	size		3491147	3					
ANR	3491492	Identifier	size		3491147	0					
ANR	3491493	ElseStatement	else		3491147	0					
ANR	3491494	CompoundStatement		59:9:1248:1248	3491147	0					
ANR	3491495	ExpressionStatement	"BBUF_MOVE_LEFT_REDUCE ( bbuf , from_pos , to_pos )"	1757:6:37328:37373	3491147	0	True				
ANR	3491496	CallExpression	"BBUF_MOVE_LEFT_REDUCE ( bbuf , from_pos , to_pos )"		3491147	0					
ANR	3491497	Callee	BBUF_MOVE_LEFT_REDUCE		3491147	0					
ANR	3491498	Identifier	BBUF_MOVE_LEFT_REDUCE		3491147	0					
ANR	3491499	ArgumentList	bbuf		3491147	1					
ANR	3491500	Argument	bbuf		3491147	0					
ANR	3491501	Identifier	bbuf		3491147	0					
ANR	3491502	Argument	from_pos		3491147	1					
ANR	3491503	Identifier	from_pos		3491147	0					
ANR	3491504	Argument	to_pos		3491147	2					
ANR	3491505	Identifier	to_pos		3491147	0					
ANR	3491506	ExpressionStatement	pos = SIZE_CODE_POINT * ( 1 + low * 2 )	1761:2:37388:37425	3491147	14	True				
ANR	3491507	AssignmentExpression	pos = SIZE_CODE_POINT * ( 1 + low * 2 )		3491147	0		=			
ANR	3491508	Identifier	pos		3491147	0					
ANR	3491509	MultiplicativeExpression	SIZE_CODE_POINT * ( 1 + low * 2 )		3491147	1		*			
ANR	3491510	Identifier	SIZE_CODE_POINT		3491147	0					
ANR	3491511	AdditiveExpression	1 + low * 2		3491147	1		+			
ANR	3491512	PrimaryExpression	1		3491147	0					
ANR	3491513	MultiplicativeExpression	low * 2		3491147	1		*			
ANR	3491514	Identifier	low		3491147	0					
ANR	3491515	PrimaryExpression	2		3491147	1					
ANR	3491516	ExpressionStatement	"BBUF_ENSURE_SIZE ( bbuf , pos + SIZE_CODE_POINT * 2 )"	1762:2:37429:37478	3491147	15	True				
ANR	3491517	CallExpression	"BBUF_ENSURE_SIZE ( bbuf , pos + SIZE_CODE_POINT * 2 )"		3491147	0					
ANR	3491518	Callee	BBUF_ENSURE_SIZE		3491147	0					
ANR	3491519	Identifier	BBUF_ENSURE_SIZE		3491147	0					
ANR	3491520	ArgumentList	bbuf		3491147	1					
ANR	3491521	Argument	bbuf		3491147	0					
ANR	3491522	Identifier	bbuf		3491147	0					
ANR	3491523	Argument	pos + SIZE_CODE_POINT * 2		3491147	1					
ANR	3491524	AdditiveExpression	pos + SIZE_CODE_POINT * 2		3491147	0		+			
ANR	3491525	Identifier	pos		3491147	0					
ANR	3491526	MultiplicativeExpression	SIZE_CODE_POINT * 2		3491147	1		*			
ANR	3491527	Identifier	SIZE_CODE_POINT		3491147	0					
ANR	3491528	PrimaryExpression	2		3491147	1					
ANR	3491529	ExpressionStatement	"BBUF_WRITE_CODE_POINT ( bbuf , pos , from )"	1763:2:37482:37520	3491147	16	True				
ANR	3491530	CallExpression	"BBUF_WRITE_CODE_POINT ( bbuf , pos , from )"		3491147	0					
ANR	3491531	Callee	BBUF_WRITE_CODE_POINT		3491147	0					
ANR	3491532	Identifier	BBUF_WRITE_CODE_POINT		3491147	0					
ANR	3491533	ArgumentList	bbuf		3491147	1					
ANR	3491534	Argument	bbuf		3491147	0					
ANR	3491535	Identifier	bbuf		3491147	0					
ANR	3491536	Argument	pos		3491147	1					
ANR	3491537	Identifier	pos		3491147	0					
ANR	3491538	Argument	from		3491147	2					
ANR	3491539	Identifier	from		3491147	0					
ANR	3491540	ExpressionStatement	"BBUF_WRITE_CODE_POINT ( bbuf , pos + SIZE_CODE_POINT , to )"	1764:2:37524:37578	3491147	17	True				
ANR	3491541	CallExpression	"BBUF_WRITE_CODE_POINT ( bbuf , pos + SIZE_CODE_POINT , to )"		3491147	0					
ANR	3491542	Callee	BBUF_WRITE_CODE_POINT		3491147	0					
ANR	3491543	Identifier	BBUF_WRITE_CODE_POINT		3491147	0					
ANR	3491544	ArgumentList	bbuf		3491147	1					
ANR	3491545	Argument	bbuf		3491147	0					
ANR	3491546	Identifier	bbuf		3491147	0					
ANR	3491547	Argument	pos + SIZE_CODE_POINT		3491147	1					
ANR	3491548	AdditiveExpression	pos + SIZE_CODE_POINT		3491147	0		+			
ANR	3491549	Identifier	pos		3491147	0					
ANR	3491550	Identifier	SIZE_CODE_POINT		3491147	1					
ANR	3491551	Argument	to		3491147	2					
ANR	3491552	Identifier	to		3491147	0					
ANR	3491553	ExpressionStatement	n += inc_n	1765:2:37582:37592	3491147	18	True				
ANR	3491554	AssignmentExpression	n += inc_n		3491147	0		+=			
ANR	3491555	Identifier	n		3491147	0					
ANR	3491556	Identifier	inc_n		3491147	1					
ANR	3491557	ExpressionStatement	"BBUF_WRITE_CODE_POINT ( bbuf , 0 , n )"	1766:2:37596:37629	3491147	19	True				
ANR	3491558	CallExpression	"BBUF_WRITE_CODE_POINT ( bbuf , 0 , n )"		3491147	0					
ANR	3491559	Callee	BBUF_WRITE_CODE_POINT		3491147	0					
ANR	3491560	Identifier	BBUF_WRITE_CODE_POINT		3491147	0					
ANR	3491561	ArgumentList	bbuf		3491147	1					
ANR	3491562	Argument	bbuf		3491147	0					
ANR	3491563	Identifier	bbuf		3491147	0					
ANR	3491564	Argument	0		3491147	1					
ANR	3491565	PrimaryExpression	0		3491147	0					
ANR	3491566	Argument	n		3491147	2					
ANR	3491567	Identifier	n		3491147	0					
ANR	3491568	ReturnStatement	return 0 ;	1768:2:37634:37642	3491147	20	True				
ANR	3491569	PrimaryExpression	0		3491147	0					
ANR	3491570	ReturnType	static int		3491147	1					
ANR	3491571	Identifier	add_code_range_to_buf		3491147	2					
ANR	3491572	ParameterList	"BBuf * * pbuf , OnigCodePoint from , OnigCodePoint to"		3491147	3					
ANR	3491573	Parameter	BBuf * * pbuf	1697:22:36020:36030	3491147	0	True				
ANR	3491574	ParameterType	BBuf * *		3491147	0					
ANR	3491575	Identifier	pbuf		3491147	1					
ANR	3491576	Parameter	OnigCodePoint from	1697:35:36033:36050	3491147	1	True				
ANR	3491577	ParameterType	OnigCodePoint		3491147	0					
ANR	3491578	Identifier	from		3491147	1					
ANR	3491579	Parameter	OnigCodePoint to	1697:55:36053:36068	3491147	2	True				
ANR	3491580	ParameterType	OnigCodePoint		3491147	0					
ANR	3491581	Identifier	to		3491147	1					
ANR	3491582	CFGEntryNode	ENTRY		3491147		True				
ANR	3491583	CFGExitNode	EXIT		3491147		True				
ANR	3491584	Symbol	* x		3491147						
ANR	3491585	Symbol	data		3491147						
ANR	3491586	Symbol	* high		3491147						
ANR	3491587	Symbol	ONIG_MAX_MULTI_BYTE_RANGES_NUM		3491147						
ANR	3491588	Symbol	high		3491147						
ANR	3491589	Symbol	SIZE_CODE_POINT		3491147						
ANR	3491590	Symbol	IS_NULL		3491147						
ANR	3491591	Symbol	pos		3491147						
ANR	3491592	Symbol	low		3491147						
ANR	3491593	Symbol	ONIGERR_TOO_MANY_MULTI_BYTE_RANGES		3491147						
ANR	3491594	Symbol	from		3491147						
ANR	3491595	Symbol	* pbuf		3491147						
ANR	3491596	Symbol	* bbuf		3491147						
ANR	3491597	Symbol	bound		3491147						
ANR	3491598	Symbol	from_pos		3491147						
ANR	3491599	Symbol	to_pos		3491147						
ANR	3491600	Symbol	n		3491147						
ANR	3491601	Symbol	r		3491147						
ANR	3491602	Symbol	new_code_range		3491147						
ANR	3491603	Symbol	size		3491147						
ANR	3491604	Symbol	bbuf -> p		3491147						
ANR	3491605	Symbol	inc_n		3491147						
ANR	3491606	Symbol	pbuf		3491147						
ANR	3491607	Symbol	x		3491147						
ANR	3491608	Symbol	to		3491147						
ANR	3491609	Symbol	* data		3491147						
ANR	3491610	Symbol	* low		3491147						
ANR	3491611	Symbol	bbuf		3491147						
ANR	3491612	Function	add_code_range	1771:0:37647:37954							
ANR	3491613	FunctionDef	"add_code_range (BBuf * * pbuf , ScanEnv * env , OnigCodePoint from , OnigCodePoint to)"		3491612	0					
ANR	3491614	CompoundStatement		1773:0:37738:37954	3491612	0					
ANR	3491615	IfStatement	if ( from > to )		3491612	0					
ANR	3491616	Condition	from > to	1774:6:37746:37754	3491612	0	True				
ANR	3491617	RelationalExpression	from > to		3491612	0		>			
ANR	3491618	Identifier	from		3491612	0					
ANR	3491619	Identifier	to		3491612	1					
ANR	3491620	CompoundStatement		2:17:18:18	3491612	1					
ANR	3491621	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC ) )"		3491612	0					
ANR	3491622	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"	1775:8:37767:37825	3491612	0	True				
ANR	3491623	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"		3491612	0					
ANR	3491624	Callee	IS_SYNTAX_BV		3491612	0					
ANR	3491625	Identifier	IS_SYNTAX_BV		3491612	0					
ANR	3491626	ArgumentList	env -> syntax		3491612	1					
ANR	3491627	Argument	env -> syntax		3491612	0					
ANR	3491628	PtrMemberAccess	env -> syntax		3491612	0					
ANR	3491629	Identifier	env		3491612	0					
ANR	3491630	Identifier	syntax		3491612	1					
ANR	3491631	Argument	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		3491612	1					
ANR	3491632	Identifier	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		3491612	0					
ANR	3491633	ReturnStatement	return 0 ;	1776:6:37834:37842	3491612	1	True				
ANR	3491634	PrimaryExpression	0		3491612	0					
ANR	3491635	ElseStatement	else		3491612	0					
ANR	3491636	ReturnStatement	return ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS ;	1778:6:37859:37899	3491612	0	True				
ANR	3491637	Identifier	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		3491612	0					
ANR	3491638	ReturnStatement	"return add_code_range_to_buf ( pbuf , from , to ) ;"	1781:2:37908:37952	3491612	1	True				
ANR	3491639	CallExpression	"add_code_range_to_buf ( pbuf , from , to )"		3491612	0					
ANR	3491640	Callee	add_code_range_to_buf		3491612	0					
ANR	3491641	Identifier	add_code_range_to_buf		3491612	0					
ANR	3491642	ArgumentList	pbuf		3491612	1					
ANR	3491643	Argument	pbuf		3491612	0					
ANR	3491644	Identifier	pbuf		3491612	0					
ANR	3491645	Argument	from		3491612	1					
ANR	3491646	Identifier	from		3491612	0					
ANR	3491647	Argument	to		3491612	2					
ANR	3491648	Identifier	to		3491612	0					
ANR	3491649	ReturnType	static int		3491612	1					
ANR	3491650	Identifier	add_code_range		3491612	2					
ANR	3491651	ParameterList	"BBuf * * pbuf , ScanEnv * env , OnigCodePoint from , OnigCodePoint to"		3491612	3					
ANR	3491652	Parameter	BBuf * * pbuf	1772:15:37673:37683	3491612	0	True				
ANR	3491653	ParameterType	BBuf * *		3491612	0					
ANR	3491654	Identifier	pbuf		3491612	1					
ANR	3491655	Parameter	ScanEnv * env	1772:28:37686:37697	3491612	1	True				
ANR	3491656	ParameterType	ScanEnv *		3491612	0					
ANR	3491657	Identifier	env		3491612	1					
ANR	3491658	Parameter	OnigCodePoint from	1772:42:37700:37717	3491612	2	True				
ANR	3491659	ParameterType	OnigCodePoint		3491612	0					
ANR	3491660	Identifier	from		3491612	1					
ANR	3491661	Parameter	OnigCodePoint to	1772:62:37720:37735	3491612	3	True				
ANR	3491662	ParameterType	OnigCodePoint		3491612	0					
ANR	3491663	Identifier	to		3491612	1					
ANR	3491664	CFGEntryNode	ENTRY		3491612		True				
ANR	3491665	CFGExitNode	EXIT		3491612		True				
ANR	3491666	Symbol	pbuf		3491612						
ANR	3491667	Symbol	* env		3491612						
ANR	3491668	Symbol	IS_SYNTAX_BV		3491612						
ANR	3491669	Symbol	from		3491612						
ANR	3491670	Symbol	add_code_range_to_buf		3491612						
ANR	3491671	Symbol	to		3491612						
ANR	3491672	Symbol	env		3491612						
ANR	3491673	Symbol	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		3491612						
ANR	3491674	Symbol	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		3491612						
ANR	3491675	Symbol	env -> syntax		3491612						
ANR	3491676	Function	not_code_range_buf	1784:0:37957:38716							
ANR	3491677	FunctionDef	"not_code_range_buf (OnigEncoding enc , BBuf * bbuf , BBuf * * pbuf)"		3491676	0					
ANR	3491678	CompoundStatement		1786:0:38030:38716	3491676	0					
ANR	3491679	IdentifierDeclStatement	"int r , i , n ;"	1787:2:38034:38045	3491676	0	True				
ANR	3491680	IdentifierDecl	r		3491676	0					
ANR	3491681	IdentifierDeclType	int		3491676	0					
ANR	3491682	Identifier	r		3491676	1					
ANR	3491683	IdentifierDecl	i		3491676	1					
ANR	3491684	IdentifierDeclType	int		3491676	0					
ANR	3491685	Identifier	i		3491676	1					
ANR	3491686	IdentifierDecl	n		3491676	2					
ANR	3491687	IdentifierDeclType	int		3491676	0					
ANR	3491688	Identifier	n		3491676	1					
ANR	3491689	IdentifierDeclStatement	"OnigCodePoint pre , from , * data , to = 0 ;"	1788:2:38049:38087	3491676	1	True				
ANR	3491690	IdentifierDecl	pre		3491676	0					
ANR	3491691	IdentifierDeclType	OnigCodePoint		3491676	0					
ANR	3491692	Identifier	pre		3491676	1					
ANR	3491693	IdentifierDecl	from		3491676	1					
ANR	3491694	IdentifierDeclType	OnigCodePoint		3491676	0					
ANR	3491695	Identifier	from		3491676	1					
ANR	3491696	IdentifierDecl	* data		3491676	2					
ANR	3491697	IdentifierDeclType	OnigCodePoint *		3491676	0					
ANR	3491698	Identifier	data		3491676	1					
ANR	3491699	IdentifierDecl	to = 0		3491676	3					
ANR	3491700	IdentifierDeclType	OnigCodePoint		3491676	0					
ANR	3491701	Identifier	to		3491676	1					
ANR	3491702	AssignmentExpression	to = 0		3491676	2		=			
ANR	3491703	Identifier	to		3491676	0					
ANR	3491704	PrimaryExpression	0		3491676	1					
ANR	3491705	ExpressionStatement	* pbuf = ( BBuf * ) NULL	1790:2:38092:38112	3491676	2	True				
ANR	3491706	AssignmentExpression	* pbuf = ( BBuf * ) NULL		3491676	0		=			
ANR	3491707	UnaryOperationExpression	* pbuf		3491676	0					
ANR	3491708	UnaryOperator	*		3491676	0					
ANR	3491709	Identifier	pbuf		3491676	1					
ANR	3491710	CastExpression	( BBuf * ) NULL		3491676	1					
ANR	3491711	CastTarget	BBuf *		3491676	0					
ANR	3491712	Identifier	NULL		3491676	1					
ANR	3491713	IfStatement	if ( IS_NULL ( bbuf ) )		3491676	3					
ANR	3491714	Condition	IS_NULL ( bbuf )	1791:6:38120:38132	3491676	0	True				
ANR	3491715	CallExpression	IS_NULL ( bbuf )		3491676	0					
ANR	3491716	Callee	IS_NULL		3491676	0					
ANR	3491717	Identifier	IS_NULL		3491676	0					
ANR	3491718	ArgumentList	bbuf		3491676	1					
ANR	3491719	Argument	bbuf		3491676	0					
ANR	3491720	Identifier	bbuf		3491676	0					
ANR	3491721	CompoundStatement		6:21:104:104	3491676	1					
ANR	3491722	Label	set_all :	1792:2:38139:38146	3491676	0	True				
ANR	3491723	Identifier	set_all		3491676	0					
ANR	3491724	ReturnStatement	"return SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf ) ;"	1793:4:38152:38194	3491676	1	True				
ANR	3491725	CallExpression	"SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf )"		3491676	0					
ANR	3491726	Callee	SET_ALL_MULTI_BYTE_RANGE		3491676	0					
ANR	3491727	Identifier	SET_ALL_MULTI_BYTE_RANGE		3491676	0					
ANR	3491728	ArgumentList	enc		3491676	1					
ANR	3491729	Argument	enc		3491676	0					
ANR	3491730	Identifier	enc		3491676	0					
ANR	3491731	Argument	pbuf		3491676	1					
ANR	3491732	Identifier	pbuf		3491676	0					
ANR	3491733	ExpressionStatement	data = ( OnigCodePoint * ) ( bbuf -> p )	1796:2:38203:38236	3491676	4	True				
ANR	3491734	AssignmentExpression	data = ( OnigCodePoint * ) ( bbuf -> p )		3491676	0		=			
ANR	3491735	Identifier	data		3491676	0					
ANR	3491736	CastExpression	( OnigCodePoint * ) ( bbuf -> p )		3491676	1					
ANR	3491737	CastTarget	OnigCodePoint *		3491676	0					
ANR	3491738	PtrMemberAccess	bbuf -> p		3491676	1					
ANR	3491739	Identifier	bbuf		3491676	0					
ANR	3491740	Identifier	p		3491676	1					
ANR	3491741	ExpressionStatement	"GET_CODE_POINT ( n , data )"	1797:2:38240:38263	3491676	5	True				
ANR	3491742	CallExpression	"GET_CODE_POINT ( n , data )"		3491676	0					
ANR	3491743	Callee	GET_CODE_POINT		3491676	0					
ANR	3491744	Identifier	GET_CODE_POINT		3491676	0					
ANR	3491745	ArgumentList	n		3491676	1					
ANR	3491746	Argument	n		3491676	0					
ANR	3491747	Identifier	n		3491676	0					
ANR	3491748	Argument	data		3491676	1					
ANR	3491749	Identifier	data		3491676	0					
ANR	3491750	ExpressionStatement	data ++	1798:2:38267:38273	3491676	6	True				
ANR	3491751	PostIncDecOperationExpression	data ++		3491676	0					
ANR	3491752	Identifier	data		3491676	0					
ANR	3491753	IncDec	++		3491676	1					
ANR	3491754	IfStatement	if ( n <= 0 )		3491676	7					
ANR	3491755	Condition	n <= 0	1799:6:38281:38286	3491676	0	True				
ANR	3491756	RelationalExpression	n <= 0		3491676	0		<=			
ANR	3491757	Identifier	n		3491676	0					
ANR	3491758	PrimaryExpression	0		3491676	1					
ANR	3491759	GotoStatement	goto set_all ;	1799:14:38289:38301	3491676	1	True				
ANR	3491760	Identifier	set_all		3491676	0					
ANR	3491761	ExpressionStatement	r = 0	1801:2:38306:38311	3491676	8	True				
ANR	3491762	AssignmentExpression	r = 0		3491676	0		=			
ANR	3491763	Identifier	r		3491676	0					
ANR	3491764	PrimaryExpression	0		3491676	1					
ANR	3491765	ExpressionStatement	pre = MBCODE_START_POS ( enc )	1802:2:38315:38342	3491676	9	True				
ANR	3491766	AssignmentExpression	pre = MBCODE_START_POS ( enc )		3491676	0		=			
ANR	3491767	Identifier	pre		3491676	0					
ANR	3491768	CallExpression	MBCODE_START_POS ( enc )		3491676	1					
ANR	3491769	Callee	MBCODE_START_POS		3491676	0					
ANR	3491770	Identifier	MBCODE_START_POS		3491676	0					
ANR	3491771	ArgumentList	enc		3491676	1					
ANR	3491772	Argument	enc		3491676	0					
ANR	3491773	Identifier	enc		3491676	0					
ANR	3491774	ForStatement	for ( i = 0 ; i < n ; i ++ )		3491676	10					
ANR	3491775	ForInit	i = 0 ;	1803:7:38351:38356	3491676	0	True				
ANR	3491776	AssignmentExpression	i = 0		3491676	0		=			
ANR	3491777	Identifier	i		3491676	0					
ANR	3491778	PrimaryExpression	0		3491676	1					
ANR	3491779	Condition	i < n	1803:14:38358:38362	3491676	1	True				
ANR	3491780	RelationalExpression	i < n		3491676	0		<			
ANR	3491781	Identifier	i		3491676	0					
ANR	3491782	Identifier	n		3491676	1					
ANR	3491783	PostIncDecOperationExpression	i ++	1803:21:38365:38367	3491676	2	True				
ANR	3491784	Identifier	i		3491676	0					
ANR	3491785	IncDec	++		3491676	1					
ANR	3491786	CompoundStatement		18:26:339:339	3491676	3					
ANR	3491787	ExpressionStatement	from = data [ i * 2 ]	1804:4:38376:38392	3491676	0	True				
ANR	3491788	AssignmentExpression	from = data [ i * 2 ]		3491676	0		=			
ANR	3491789	Identifier	from		3491676	0					
ANR	3491790	ArrayIndexing	data [ i * 2 ]		3491676	1					
ANR	3491791	Identifier	data		3491676	0					
ANR	3491792	MultiplicativeExpression	i * 2		3491676	1		*			
ANR	3491793	Identifier	i		3491676	0					
ANR	3491794	PrimaryExpression	2		3491676	1					
ANR	3491795	ExpressionStatement	to = data [ i * 2 + 1 ]	1805:4:38398:38416	3491676	1	True				
ANR	3491796	AssignmentExpression	to = data [ i * 2 + 1 ]		3491676	0		=			
ANR	3491797	Identifier	to		3491676	0					
ANR	3491798	ArrayIndexing	data [ i * 2 + 1 ]		3491676	1					
ANR	3491799	Identifier	data		3491676	0					
ANR	3491800	AdditiveExpression	i * 2 + 1		3491676	1		+			
ANR	3491801	MultiplicativeExpression	i * 2		3491676	0		*			
ANR	3491802	Identifier	i		3491676	0					
ANR	3491803	PrimaryExpression	2		3491676	1					
ANR	3491804	PrimaryExpression	1		3491676	1					
ANR	3491805	IfStatement	if ( pre <= from - 1 )		3491676	2					
ANR	3491806	Condition	pre <= from - 1	1806:8:38426:38440	3491676	0	True				
ANR	3491807	RelationalExpression	pre <= from - 1		3491676	0		<=			
ANR	3491808	Identifier	pre		3491676	0					
ANR	3491809	AdditiveExpression	from - 1		3491676	1		-			
ANR	3491810	Identifier	from		3491676	0					
ANR	3491811	PrimaryExpression	1		3491676	1					
ANR	3491812	CompoundStatement		21:25:412:412	3491676	1					
ANR	3491813	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , pre , from - 1 )"	1807:6:38451:38497	3491676	0	True				
ANR	3491814	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , pre , from - 1 )"		3491676	0		=			
ANR	3491815	Identifier	r		3491676	0					
ANR	3491816	CallExpression	"add_code_range_to_buf ( pbuf , pre , from - 1 )"		3491676	1					
ANR	3491817	Callee	add_code_range_to_buf		3491676	0					
ANR	3491818	Identifier	add_code_range_to_buf		3491676	0					
ANR	3491819	ArgumentList	pbuf		3491676	1					
ANR	3491820	Argument	pbuf		3491676	0					
ANR	3491821	Identifier	pbuf		3491676	0					
ANR	3491822	Argument	pre		3491676	1					
ANR	3491823	Identifier	pre		3491676	0					
ANR	3491824	Argument	from - 1		3491676	2					
ANR	3491825	AdditiveExpression	from - 1		3491676	0		-			
ANR	3491826	Identifier	from		3491676	0					
ANR	3491827	PrimaryExpression	1		3491676	1					
ANR	3491828	IfStatement	if ( r != 0 )		3491676	1					
ANR	3491829	Condition	r != 0	1808:10:38509:38514	3491676	0	True				
ANR	3491830	EqualityExpression	r != 0		3491676	0		!=			
ANR	3491831	Identifier	r		3491676	0					
ANR	3491832	PrimaryExpression	0		3491676	1					
ANR	3491833	ReturnStatement	return r ;	1808:18:38517:38525	3491676	1	True				
ANR	3491834	Identifier	r		3491676	0					
ANR	3491835	IfStatement	if ( to == ~ ( ( OnigCodePoint ) 0 ) )		3491676	3					
ANR	3491836	Condition	to == ~ ( ( OnigCodePoint ) 0 )	1810:8:38541:38566	3491676	0	True				
ANR	3491837	EqualityExpression	to == ~ ( ( OnigCodePoint ) 0 )		3491676	0		==			
ANR	3491838	Identifier	to		3491676	0					
ANR	3491839	UnaryOperationExpression	~ ( ( OnigCodePoint ) 0 )		3491676	1					
ANR	3491840	UnaryOperator	~		3491676	0					
ANR	3491841	CastExpression	( OnigCodePoint ) 0		3491676	1					
ANR	3491842	CastTarget	OnigCodePoint		3491676	0					
ANR	3491843	PrimaryExpression	0		3491676	1					
ANR	3491844	BreakStatement	break ;	1810:36:38569:38574	3491676	1	True				
ANR	3491845	ExpressionStatement	pre = to + 1	1811:4:38580:38592	3491676	4	True				
ANR	3491846	AssignmentExpression	pre = to + 1		3491676	0		=			
ANR	3491847	Identifier	pre		3491676	0					
ANR	3491848	AdditiveExpression	to + 1		3491676	1		+			
ANR	3491849	Identifier	to		3491676	0					
ANR	3491850	PrimaryExpression	1		3491676	1					
ANR	3491851	IfStatement	if ( to < ~ ( ( OnigCodePoint ) 0 ) )		3491676	11					
ANR	3491852	Condition	to < ~ ( ( OnigCodePoint ) 0 )	1813:6:38604:38628	3491676	0	True				
ANR	3491853	RelationalExpression	to < ~ ( ( OnigCodePoint ) 0 )		3491676	0		<			
ANR	3491854	Identifier	to		3491676	0					
ANR	3491855	UnaryOperationExpression	~ ( ( OnigCodePoint ) 0 )		3491676	1					
ANR	3491856	UnaryOperator	~		3491676	0					
ANR	3491857	CastExpression	( OnigCodePoint ) 0		3491676	1					
ANR	3491858	CastTarget	OnigCodePoint		3491676	0					
ANR	3491859	PrimaryExpression	0		3491676	1					
ANR	3491860	CompoundStatement		28:33:600:600	3491676	1					
ANR	3491861	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , to + 1 , ~ ( ( OnigCodePoint ) 0 ) )"	1814:4:38637:38698	3491676	0	True				
ANR	3491862	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , to + 1 , ~ ( ( OnigCodePoint ) 0 ) )"		3491676	0		=			
ANR	3491863	Identifier	r		3491676	0					
ANR	3491864	CallExpression	"add_code_range_to_buf ( pbuf , to + 1 , ~ ( ( OnigCodePoint ) 0 ) )"		3491676	1					
ANR	3491865	Callee	add_code_range_to_buf		3491676	0					
ANR	3491866	Identifier	add_code_range_to_buf		3491676	0					
ANR	3491867	ArgumentList	pbuf		3491676	1					
ANR	3491868	Argument	pbuf		3491676	0					
ANR	3491869	Identifier	pbuf		3491676	0					
ANR	3491870	Argument	to + 1		3491676	1					
ANR	3491871	AdditiveExpression	to + 1		3491676	0		+			
ANR	3491872	Identifier	to		3491676	0					
ANR	3491873	PrimaryExpression	1		3491676	1					
ANR	3491874	Argument	~ ( ( OnigCodePoint ) 0 )		3491676	2					
ANR	3491875	UnaryOperationExpression	~ ( ( OnigCodePoint ) 0 )		3491676	0					
ANR	3491876	UnaryOperator	~		3491676	0					
ANR	3491877	CastExpression	( OnigCodePoint ) 0		3491676	1					
ANR	3491878	CastTarget	OnigCodePoint		3491676	0					
ANR	3491879	PrimaryExpression	0		3491676	1					
ANR	3491880	ReturnStatement	return r ;	1816:2:38706:38714	3491676	12	True				
ANR	3491881	Identifier	r		3491676	0					
ANR	3491882	ReturnType	static int		3491676	1					
ANR	3491883	Identifier	not_code_range_buf		3491676	2					
ANR	3491884	ParameterList	"OnigEncoding enc , BBuf * bbuf , BBuf * * pbuf"		3491676	3					
ANR	3491885	Parameter	OnigEncoding enc	1785:19:37987:38002	3491676	0	True				
ANR	3491886	ParameterType	OnigEncoding		3491676	0					
ANR	3491887	Identifier	enc		3491676	1					
ANR	3491888	Parameter	BBuf * bbuf	1785:37:38005:38014	3491676	1	True				
ANR	3491889	ParameterType	BBuf *		3491676	0					
ANR	3491890	Identifier	bbuf		3491676	1					
ANR	3491891	Parameter	BBuf * * pbuf	1785:49:38017:38027	3491676	2	True				
ANR	3491892	ParameterType	BBuf * *		3491676	0					
ANR	3491893	Identifier	pbuf		3491676	1					
ANR	3491894	CFGEntryNode	ENTRY		3491676		True				
ANR	3491895	CFGExitNode	EXIT		3491676		True				
ANR	3491896	Symbol	pre		3491676						
ANR	3491897	Symbol	NULL		3491676						
ANR	3491898	Symbol	data		3491676						
ANR	3491899	Symbol	i		3491676						
ANR	3491900	Symbol	n		3491676						
ANR	3491901	Symbol	SET_ALL_MULTI_BYTE_RANGE		3491676						
ANR	3491902	Symbol	r		3491676						
ANR	3491903	Symbol	* i		3491676						
ANR	3491904	Symbol	IS_NULL		3491676						
ANR	3491905	Symbol	bbuf -> p		3491676						
ANR	3491906	Symbol	pbuf		3491676						
ANR	3491907	Symbol	MBCODE_START_POS		3491676						
ANR	3491908	Symbol	from		3491676						
ANR	3491909	Symbol	add_code_range_to_buf		3491676						
ANR	3491910	Symbol	enc		3491676						
ANR	3491911	Symbol	to		3491676						
ANR	3491912	Symbol	* pbuf		3491676						
ANR	3491913	Symbol	* bbuf		3491676						
ANR	3491914	Symbol	* data		3491676						
ANR	3491915	Symbol	bbuf		3491676						
ANR	3491916	DeclStmt									
ANR	3491917	Decl							BBuf	BBuf *	tbuf
ANR	3491918	DeclStmt									
ANR	3491919	Decl							int	int	tnot
ANR	3491920	Function	or_code_range_buf	1826:0:38911:40111							
ANR	3491921	FunctionDef	"or_code_range_buf (OnigEncoding enc , BBuf * bbuf1 , int not1 , BBuf * bbuf2 , int not2 , BBuf * * pbuf)"		3491920	0					
ANR	3491922	CompoundStatement		1829:0:39035:40111	3491920	0					
ANR	3491923	IdentifierDeclStatement	int r ;	1830:2:39039:39044	3491920	0	True				
ANR	3491924	IdentifierDecl	r		3491920	0					
ANR	3491925	IdentifierDeclType	int		3491920	0					
ANR	3491926	Identifier	r		3491920	1					
ANR	3491927	IdentifierDeclStatement	"OnigCodePoint i , n1 , * data1 ;"	1831:2:39048:39075	3491920	1	True				
ANR	3491928	IdentifierDecl	i		3491920	0					
ANR	3491929	IdentifierDeclType	OnigCodePoint		3491920	0					
ANR	3491930	Identifier	i		3491920	1					
ANR	3491931	IdentifierDecl	n1		3491920	1					
ANR	3491932	IdentifierDeclType	OnigCodePoint		3491920	0					
ANR	3491933	Identifier	n1		3491920	1					
ANR	3491934	IdentifierDecl	* data1		3491920	2					
ANR	3491935	IdentifierDeclType	OnigCodePoint *		3491920	0					
ANR	3491936	Identifier	data1		3491920	1					
ANR	3491937	IdentifierDeclStatement	"OnigCodePoint from , to ;"	1832:2:39079:39101	3491920	2	True				
ANR	3491938	IdentifierDecl	from		3491920	0					
ANR	3491939	IdentifierDeclType	OnigCodePoint		3491920	0					
ANR	3491940	Identifier	from		3491920	1					
ANR	3491941	IdentifierDecl	to		3491920	1					
ANR	3491942	IdentifierDeclType	OnigCodePoint		3491920	0					
ANR	3491943	Identifier	to		3491920	1					
ANR	3491944	ExpressionStatement	* pbuf = ( BBuf * ) NULL	1834:2:39106:39126	3491920	3	True				
ANR	3491945	AssignmentExpression	* pbuf = ( BBuf * ) NULL		3491920	0		=			
ANR	3491946	UnaryOperationExpression	* pbuf		3491920	0					
ANR	3491947	UnaryOperator	*		3491920	0					
ANR	3491948	Identifier	pbuf		3491920	1					
ANR	3491949	CastExpression	( BBuf * ) NULL		3491920	1					
ANR	3491950	CastTarget	BBuf *		3491920	0					
ANR	3491951	Identifier	NULL		3491920	1					
ANR	3491952	IfStatement	if ( IS_NULL ( bbuf1 ) && IS_NULL ( bbuf2 ) )		3491920	4					
ANR	3491953	Condition	IS_NULL ( bbuf1 ) && IS_NULL ( bbuf2 )	1835:6:39134:39165	3491920	0	True				
ANR	3491954	AndExpression	IS_NULL ( bbuf1 ) && IS_NULL ( bbuf2 )		3491920	0		&&			
ANR	3491955	CallExpression	IS_NULL ( bbuf1 )		3491920	0					
ANR	3491956	Callee	IS_NULL		3491920	0					
ANR	3491957	Identifier	IS_NULL		3491920	0					
ANR	3491958	ArgumentList	bbuf1		3491920	1					
ANR	3491959	Argument	bbuf1		3491920	0					
ANR	3491960	Identifier	bbuf1		3491920	0					
ANR	3491961	CallExpression	IS_NULL ( bbuf2 )		3491920	1					
ANR	3491962	Callee	IS_NULL		3491920	0					
ANR	3491963	Identifier	IS_NULL		3491920	0					
ANR	3491964	ArgumentList	bbuf2		3491920	1					
ANR	3491965	Argument	bbuf2		3491920	0					
ANR	3491966	Identifier	bbuf2		3491920	0					
ANR	3491967	CompoundStatement		7:40:132:132	3491920	1					
ANR	3491968	IfStatement	if ( not1 != 0 || not2 != 0 )		3491920	0					
ANR	3491969	Condition	not1 != 0 || not2 != 0	1836:8:39178:39199	3491920	0	True				
ANR	3491970	OrExpression	not1 != 0 || not2 != 0		3491920	0		||			
ANR	3491971	EqualityExpression	not1 != 0		3491920	0		!=			
ANR	3491972	Identifier	not1		3491920	0					
ANR	3491973	PrimaryExpression	0		3491920	1					
ANR	3491974	EqualityExpression	not2 != 0		3491920	1		!=			
ANR	3491975	Identifier	not2		3491920	0					
ANR	3491976	PrimaryExpression	0		3491920	1					
ANR	3491977	ReturnStatement	"return SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf ) ;"	1837:6:39208:39250	3491920	1	True				
ANR	3491978	CallExpression	"SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf )"		3491920	0					
ANR	3491979	Callee	SET_ALL_MULTI_BYTE_RANGE		3491920	0					
ANR	3491980	Identifier	SET_ALL_MULTI_BYTE_RANGE		3491920	0					
ANR	3491981	ArgumentList	enc		3491920	1					
ANR	3491982	Argument	enc		3491920	0					
ANR	3491983	Identifier	enc		3491920	0					
ANR	3491984	Argument	pbuf		3491920	1					
ANR	3491985	Identifier	pbuf		3491920	0					
ANR	3491986	ReturnStatement	return 0 ;	1838:4:39256:39264	3491920	1	True				
ANR	3491987	PrimaryExpression	0		3491920	0					
ANR	3491988	ExpressionStatement	r = 0	1841:2:39273:39278	3491920	5	True				
ANR	3491989	AssignmentExpression	r = 0		3491920	0		=			
ANR	3491990	Identifier	r		3491920	0					
ANR	3491991	PrimaryExpression	0		3491920	1					
ANR	3491992	IfStatement	if ( IS_NULL ( bbuf2 ) )		3491920	6					
ANR	3491993	Condition	IS_NULL ( bbuf2 )	1842:6:39286:39299	3491920	0	True				
ANR	3491994	CallExpression	IS_NULL ( bbuf2 )		3491920	0					
ANR	3491995	Callee	IS_NULL		3491920	0					
ANR	3491996	Identifier	IS_NULL		3491920	0					
ANR	3491997	ArgumentList	bbuf2		3491920	1					
ANR	3491998	Argument	bbuf2		3491920	0					
ANR	3491999	Identifier	bbuf2		3491920	0					
ANR	3492000	ExpressionStatement	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"	1843:4:39306:39345	3491920	1	True				
ANR	3492001	CallExpression	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"		3491920	0					
ANR	3492002	Callee	SWAP_BBUF_NOT		3491920	0					
ANR	3492003	Identifier	SWAP_BBUF_NOT		3491920	0					
ANR	3492004	ArgumentList	bbuf1		3491920	1					
ANR	3492005	Argument	bbuf1		3491920	0					
ANR	3492006	Identifier	bbuf1		3491920	0					
ANR	3492007	Argument	not1		3491920	1					
ANR	3492008	Identifier	not1		3491920	0					
ANR	3492009	Argument	bbuf2		3491920	2					
ANR	3492010	Identifier	bbuf2		3491920	0					
ANR	3492011	Argument	not2		3491920	3					
ANR	3492012	Identifier	not2		3491920	0					
ANR	3492013	IfStatement	if ( IS_NULL ( bbuf1 ) )		3491920	7					
ANR	3492014	Condition	IS_NULL ( bbuf1 )	1845:6:39354:39367	3491920	0	True				
ANR	3492015	CallExpression	IS_NULL ( bbuf1 )		3491920	0					
ANR	3492016	Callee	IS_NULL		3491920	0					
ANR	3492017	Identifier	IS_NULL		3491920	0					
ANR	3492018	ArgumentList	bbuf1		3491920	1					
ANR	3492019	Argument	bbuf1		3491920	0					
ANR	3492020	Identifier	bbuf1		3491920	0					
ANR	3492021	CompoundStatement		17:22:334:334	3491920	1					
ANR	3492022	IfStatement	if ( not1 != 0 )		3491920	0					
ANR	3492023	Condition	not1 != 0	1846:8:39380:39388	3491920	0	True				
ANR	3492024	EqualityExpression	not1 != 0		3491920	0		!=			
ANR	3492025	Identifier	not1		3491920	0					
ANR	3492026	PrimaryExpression	0		3491920	1					
ANR	3492027	CompoundStatement		18:19:355:355	3491920	1					
ANR	3492028	ReturnStatement	"return SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf ) ;"	1847:6:39399:39441	3491920	0	True				
ANR	3492029	CallExpression	"SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf )"		3491920	0					
ANR	3492030	Callee	SET_ALL_MULTI_BYTE_RANGE		3491920	0					
ANR	3492031	Identifier	SET_ALL_MULTI_BYTE_RANGE		3491920	0					
ANR	3492032	ArgumentList	enc		3491920	1					
ANR	3492033	Argument	enc		3491920	0					
ANR	3492034	Identifier	enc		3491920	0					
ANR	3492035	Argument	pbuf		3491920	1					
ANR	3492036	Identifier	pbuf		3491920	0					
ANR	3492037	ElseStatement	else		3491920	0					
ANR	3492038	CompoundStatement		21:9:422:422	3491920	0					
ANR	3492039	IfStatement	if ( not2 == 0 )		3491920	0					
ANR	3492040	Condition	not2 == 0	1850:10:39470:39478	3491920	0	True				
ANR	3492041	EqualityExpression	not2 == 0		3491920	0		==			
ANR	3492042	Identifier	not2		3491920	0					
ANR	3492043	PrimaryExpression	0		3491920	1					
ANR	3492044	CompoundStatement		22:21:445:445	3491920	1					
ANR	3492045	ReturnStatement	"return bbuf_clone ( pbuf , bbuf2 ) ;"	1851:1:39484:39514	3491920	0	True				
ANR	3492046	CallExpression	"bbuf_clone ( pbuf , bbuf2 )"		3491920	0					
ANR	3492047	Callee	bbuf_clone		3491920	0					
ANR	3492048	Identifier	bbuf_clone		3491920	0					
ANR	3492049	ArgumentList	pbuf		3491920	1					
ANR	3492050	Argument	pbuf		3491920	0					
ANR	3492051	Identifier	pbuf		3491920	0					
ANR	3492052	Argument	bbuf2		3491920	1					
ANR	3492053	Identifier	bbuf2		3491920	0					
ANR	3492054	ElseStatement	else		3491920	0					
ANR	3492055	CompoundStatement		25:11:499:499	3491920	0					
ANR	3492056	ReturnStatement	"return not_code_range_buf ( enc , bbuf2 , pbuf ) ;"	1854:1:39538:39581	3491920	0	True				
ANR	3492057	CallExpression	"not_code_range_buf ( enc , bbuf2 , pbuf )"		3491920	0					
ANR	3492058	Callee	not_code_range_buf		3491920	0					
ANR	3492059	Identifier	not_code_range_buf		3491920	0					
ANR	3492060	ArgumentList	enc		3491920	1					
ANR	3492061	Argument	enc		3491920	0					
ANR	3492062	Identifier	enc		3491920	0					
ANR	3492063	Argument	bbuf2		3491920	1					
ANR	3492064	Identifier	bbuf2		3491920	0					
ANR	3492065	Argument	pbuf		3491920	2					
ANR	3492066	Identifier	pbuf		3491920	0					
ANR	3492067	IfStatement	if ( not1 != 0 )		3491920	8					
ANR	3492068	Condition	not1 != 0	1859:6:39608:39616	3491920	0	True				
ANR	3492069	EqualityExpression	not1 != 0		3491920	0		!=			
ANR	3492070	Identifier	not1		3491920	0					
ANR	3492071	PrimaryExpression	0		3491920	1					
ANR	3492072	ExpressionStatement	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"	1860:4:39623:39662	3491920	1	True				
ANR	3492073	CallExpression	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"		3491920	0					
ANR	3492074	Callee	SWAP_BBUF_NOT		3491920	0					
ANR	3492075	Identifier	SWAP_BBUF_NOT		3491920	0					
ANR	3492076	ArgumentList	bbuf1		3491920	1					
ANR	3492077	Argument	bbuf1		3491920	0					
ANR	3492078	Identifier	bbuf1		3491920	0					
ANR	3492079	Argument	not1		3491920	1					
ANR	3492080	Identifier	not1		3491920	0					
ANR	3492081	Argument	bbuf2		3491920	2					
ANR	3492082	Identifier	bbuf2		3491920	0					
ANR	3492083	Argument	not2		3491920	3					
ANR	3492084	Identifier	not2		3491920	0					
ANR	3492085	ExpressionStatement	data1 = ( OnigCodePoint * ) ( bbuf1 -> p )	1862:2:39667:39702	3491920	9	True				
ANR	3492086	AssignmentExpression	data1 = ( OnigCodePoint * ) ( bbuf1 -> p )		3491920	0		=			
ANR	3492087	Identifier	data1		3491920	0					
ANR	3492088	CastExpression	( OnigCodePoint * ) ( bbuf1 -> p )		3491920	1					
ANR	3492089	CastTarget	OnigCodePoint *		3491920	0					
ANR	3492090	PtrMemberAccess	bbuf1 -> p		3491920	1					
ANR	3492091	Identifier	bbuf1		3491920	0					
ANR	3492092	Identifier	p		3491920	1					
ANR	3492093	ExpressionStatement	"GET_CODE_POINT ( n1 , data1 )"	1863:2:39706:39731	3491920	10	True				
ANR	3492094	CallExpression	"GET_CODE_POINT ( n1 , data1 )"		3491920	0					
ANR	3492095	Callee	GET_CODE_POINT		3491920	0					
ANR	3492096	Identifier	GET_CODE_POINT		3491920	0					
ANR	3492097	ArgumentList	n1		3491920	1					
ANR	3492098	Argument	n1		3491920	0					
ANR	3492099	Identifier	n1		3491920	0					
ANR	3492100	Argument	data1		3491920	1					
ANR	3492101	Identifier	data1		3491920	0					
ANR	3492102	ExpressionStatement	data1 ++	1864:2:39735:39742	3491920	11	True				
ANR	3492103	PostIncDecOperationExpression	data1 ++		3491920	0					
ANR	3492104	Identifier	data1		3491920	0					
ANR	3492105	IncDec	++		3491920	1					
ANR	3492106	IfStatement	if ( not2 == 0 && not1 == 0 )		3491920	12					
ANR	3492107	Condition	not2 == 0 && not1 == 0	1866:6:39751:39772	3491920	0	True				
ANR	3492108	AndExpression	not2 == 0 && not1 == 0		3491920	0		&&			
ANR	3492109	EqualityExpression	not2 == 0		3491920	0		==			
ANR	3492110	Identifier	not2		3491920	0					
ANR	3492111	PrimaryExpression	0		3491920	1					
ANR	3492112	EqualityExpression	not1 == 0		3491920	1		==			
ANR	3492113	Identifier	not1		3491920	0					
ANR	3492114	PrimaryExpression	0		3491920	1					
ANR	3492115	CompoundStatement		38:30:739:739	3491920	1					
ANR	3492116	ExpressionStatement	"r = bbuf_clone ( pbuf , bbuf2 )"	1867:4:39794:39821	3491920	0	True				
ANR	3492117	AssignmentExpression	"r = bbuf_clone ( pbuf , bbuf2 )"		3491920	0		=			
ANR	3492118	Identifier	r		3491920	0					
ANR	3492119	CallExpression	"bbuf_clone ( pbuf , bbuf2 )"		3491920	1					
ANR	3492120	Callee	bbuf_clone		3491920	0					
ANR	3492121	Identifier	bbuf_clone		3491920	0					
ANR	3492122	ArgumentList	pbuf		3491920	1					
ANR	3492123	Argument	pbuf		3491920	0					
ANR	3492124	Identifier	pbuf		3491920	0					
ANR	3492125	Argument	bbuf2		3491920	1					
ANR	3492126	Identifier	bbuf2		3491920	0					
ANR	3492127	ElseStatement	else		3491920	0					
ANR	3492128	IfStatement	if ( not1 == 0 )		3491920	0					
ANR	3492129	Condition	not1 == 0	1869:11:39838:39846	3491920	0	True				
ANR	3492130	EqualityExpression	not1 == 0		3491920	0		==			
ANR	3492131	Identifier	not1		3491920	0					
ANR	3492132	PrimaryExpression	0		3491920	1					
ANR	3492133	CompoundStatement		41:22:813:813	3491920	1					
ANR	3492134	ExpressionStatement	"r = not_code_range_buf ( enc , bbuf2 , pbuf )"	1870:4:39874:39914	3491920	0	True				
ANR	3492135	AssignmentExpression	"r = not_code_range_buf ( enc , bbuf2 , pbuf )"		3491920	0		=			
ANR	3492136	Identifier	r		3491920	0					
ANR	3492137	CallExpression	"not_code_range_buf ( enc , bbuf2 , pbuf )"		3491920	1					
ANR	3492138	Callee	not_code_range_buf		3491920	0					
ANR	3492139	Identifier	not_code_range_buf		3491920	0					
ANR	3492140	ArgumentList	enc		3491920	1					
ANR	3492141	Argument	enc		3491920	0					
ANR	3492142	Identifier	enc		3491920	0					
ANR	3492143	Argument	bbuf2		3491920	1					
ANR	3492144	Identifier	bbuf2		3491920	0					
ANR	3492145	Argument	pbuf		3491920	2					
ANR	3492146	Identifier	pbuf		3491920	0					
ANR	3492147	IfStatement	if ( r != 0 )		3491920	13					
ANR	3492148	Condition	r != 0	1872:6:39926:39931	3491920	0	True				
ANR	3492149	EqualityExpression	r != 0		3491920	0		!=			
ANR	3492150	Identifier	r		3491920	0					
ANR	3492151	PrimaryExpression	0		3491920	1					
ANR	3492152	ReturnStatement	return r ;	1872:14:39934:39942	3491920	1	True				
ANR	3492153	Identifier	r		3491920	0					
ANR	3492154	ForStatement	for ( i = 0 ; i < n1 ; i ++ )		3491920	14					
ANR	3492155	ForInit	i = 0 ;	1874:7:39952:39957	3491920	0	True				
ANR	3492156	AssignmentExpression	i = 0		3491920	0		=			
ANR	3492157	Identifier	i		3491920	0					
ANR	3492158	PrimaryExpression	0		3491920	1					
ANR	3492159	Condition	i < n1	1874:14:39959:39964	3491920	1	True				
ANR	3492160	RelationalExpression	i < n1		3491920	0		<			
ANR	3492161	Identifier	i		3491920	0					
ANR	3492162	Identifier	n1		3491920	1					
ANR	3492163	PostIncDecOperationExpression	i ++	1874:22:39967:39969	3491920	2	True				
ANR	3492164	Identifier	i		3491920	0					
ANR	3492165	IncDec	++		3491920	1					
ANR	3492166	CompoundStatement		46:27:936:936	3491920	3					
ANR	3492167	ExpressionStatement	from = data1 [ i * 2 ]	1875:4:39978:39995	3491920	0	True				
ANR	3492168	AssignmentExpression	from = data1 [ i * 2 ]		3491920	0		=			
ANR	3492169	Identifier	from		3491920	0					
ANR	3492170	ArrayIndexing	data1 [ i * 2 ]		3491920	1					
ANR	3492171	Identifier	data1		3491920	0					
ANR	3492172	MultiplicativeExpression	i * 2		3491920	1		*			
ANR	3492173	Identifier	i		3491920	0					
ANR	3492174	PrimaryExpression	2		3491920	1					
ANR	3492175	ExpressionStatement	to = data1 [ i * 2 + 1 ]	1876:4:40001:40020	3491920	1	True				
ANR	3492176	AssignmentExpression	to = data1 [ i * 2 + 1 ]		3491920	0		=			
ANR	3492177	Identifier	to		3491920	0					
ANR	3492178	ArrayIndexing	data1 [ i * 2 + 1 ]		3491920	1					
ANR	3492179	Identifier	data1		3491920	0					
ANR	3492180	AdditiveExpression	i * 2 + 1		3491920	1		+			
ANR	3492181	MultiplicativeExpression	i * 2		3491920	0		*			
ANR	3492182	Identifier	i		3491920	0					
ANR	3492183	PrimaryExpression	2		3491920	1					
ANR	3492184	PrimaryExpression	1		3491920	1					
ANR	3492185	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , from , to )"	1877:4:40026:40067	3491920	2	True				
ANR	3492186	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , from , to )"		3491920	0		=			
ANR	3492187	Identifier	r		3491920	0					
ANR	3492188	CallExpression	"add_code_range_to_buf ( pbuf , from , to )"		3491920	1					
ANR	3492189	Callee	add_code_range_to_buf		3491920	0					
ANR	3492190	Identifier	add_code_range_to_buf		3491920	0					
ANR	3492191	ArgumentList	pbuf		3491920	1					
ANR	3492192	Argument	pbuf		3491920	0					
ANR	3492193	Identifier	pbuf		3491920	0					
ANR	3492194	Argument	from		3491920	1					
ANR	3492195	Identifier	from		3491920	0					
ANR	3492196	Argument	to		3491920	2					
ANR	3492197	Identifier	to		3491920	0					
ANR	3492198	IfStatement	if ( r != 0 )		3491920	3					
ANR	3492199	Condition	r != 0	1878:8:40077:40082	3491920	0	True				
ANR	3492200	EqualityExpression	r != 0		3491920	0		!=			
ANR	3492201	Identifier	r		3491920	0					
ANR	3492202	PrimaryExpression	0		3491920	1					
ANR	3492203	ReturnStatement	return r ;	1878:16:40085:40093	3491920	1	True				
ANR	3492204	Identifier	r		3491920	0					
ANR	3492205	ReturnStatement	return 0 ;	1880:2:40101:40109	3491920	15	True				
ANR	3492206	PrimaryExpression	0		3491920	0					
ANR	3492207	ReturnType	static int		3491920	1					
ANR	3492208	Identifier	or_code_range_buf		3491920	2					
ANR	3492209	ParameterList	"OnigEncoding enc , BBuf * bbuf1 , int not1 , BBuf * bbuf2 , int not2 , BBuf * * pbuf"		3491920	3					
ANR	3492210	Parameter	OnigEncoding enc	1827:18:38940:38955	3491920	0	True				
ANR	3492211	ParameterType	OnigEncoding		3491920	0					
ANR	3492212	Identifier	enc		3491920	1					
ANR	3492213	Parameter	BBuf * bbuf1	1827:36:38958:38968	3491920	1	True				
ANR	3492214	ParameterType	BBuf *		3491920	0					
ANR	3492215	Identifier	bbuf1		3491920	1					
ANR	3492216	Parameter	int not1	1827:49:38971:38978	3491920	2	True				
ANR	3492217	ParameterType	int		3491920	0					
ANR	3492218	Identifier	not1		3491920	1					
ANR	3492219	Parameter	BBuf * bbuf2	1828:18:38999:39009	3491920	3	True				
ANR	3492220	ParameterType	BBuf *		3491920	0					
ANR	3492221	Identifier	bbuf2		3491920	1					
ANR	3492222	Parameter	int not2	1828:31:39012:39019	3491920	4	True				
ANR	3492223	ParameterType	int		3491920	0					
ANR	3492224	Identifier	not2		3491920	1					
ANR	3492225	Parameter	BBuf * * pbuf	1828:41:39022:39032	3491920	5	True				
ANR	3492226	ParameterType	BBuf * *		3491920	0					
ANR	3492227	Identifier	pbuf		3491920	1					
ANR	3492228	CFGEntryNode	ENTRY		3491920		True				
ANR	3492229	CFGExitNode	EXIT		3491920		True				
ANR	3492230	Symbol	n1		3491920						
ANR	3492231	Symbol	NULL		3491920						
ANR	3492232	Symbol	not_code_range_buf		3491920						
ANR	3492233	Symbol	data1		3491920						
ANR	3492234	Symbol	i		3491920						
ANR	3492235	Symbol	bbuf1 -> p		3491920						
ANR	3492236	Symbol	not2		3491920						
ANR	3492237	Symbol	not1		3491920						
ANR	3492238	Symbol	SET_ALL_MULTI_BYTE_RANGE		3491920						
ANR	3492239	Symbol	bbuf2		3491920						
ANR	3492240	Symbol	r		3491920						
ANR	3492241	Symbol	bbuf1		3491920						
ANR	3492242	Symbol	* i		3491920						
ANR	3492243	Symbol	IS_NULL		3491920						
ANR	3492244	Symbol	pbuf		3491920						
ANR	3492245	Symbol	bbuf_clone		3491920						
ANR	3492246	Symbol	from		3491920						
ANR	3492247	Symbol	add_code_range_to_buf		3491920						
ANR	3492248	Symbol	enc		3491920						
ANR	3492249	Symbol	to		3491920						
ANR	3492250	Symbol	* pbuf		3491920						
ANR	3492251	Symbol	* bbuf1		3491920						
ANR	3492252	Symbol	* data1		3491920						
ANR	3492253	Function	and_code_range1	1883:0:40114:40866							
ANR	3492254	FunctionDef	"and_code_range1 (BBuf * * pbuf , OnigCodePoint from1 , OnigCodePoint to1 , OnigCodePoint * data , int n)"		3492253	0					
ANR	3492255	CompoundStatement		1886:0:40231:40866	3492253	0					
ANR	3492256	IdentifierDeclStatement	"int i , r ;"	1887:2:40235:40243	3492253	0	True				
ANR	3492257	IdentifierDecl	i		3492253	0					
ANR	3492258	IdentifierDeclType	int		3492253	0					
ANR	3492259	Identifier	i		3492253	1					
ANR	3492260	IdentifierDecl	r		3492253	1					
ANR	3492261	IdentifierDeclType	int		3492253	0					
ANR	3492262	Identifier	r		3492253	1					
ANR	3492263	IdentifierDeclStatement	"OnigCodePoint from2 , to2 ;"	1888:2:40247:40271	3492253	1	True				
ANR	3492264	IdentifierDecl	from2		3492253	0					
ANR	3492265	IdentifierDeclType	OnigCodePoint		3492253	0					
ANR	3492266	Identifier	from2		3492253	1					
ANR	3492267	IdentifierDecl	to2		3492253	1					
ANR	3492268	IdentifierDeclType	OnigCodePoint		3492253	0					
ANR	3492269	Identifier	to2		3492253	1					
ANR	3492270	ForStatement	for ( i = 0 ; i < n ; i ++ )		3492253	2					
ANR	3492271	ForInit	i = 0 ;	1890:7:40281:40286	3492253	0	True				
ANR	3492272	AssignmentExpression	i = 0		3492253	0		=			
ANR	3492273	Identifier	i		3492253	0					
ANR	3492274	PrimaryExpression	0		3492253	1					
ANR	3492275	Condition	i < n	1890:14:40288:40292	3492253	1	True				
ANR	3492276	RelationalExpression	i < n		3492253	0		<			
ANR	3492277	Identifier	i		3492253	0					
ANR	3492278	Identifier	n		3492253	1					
ANR	3492279	PostIncDecOperationExpression	i ++	1890:21:40295:40297	3492253	2	True				
ANR	3492280	Identifier	i		3492253	0					
ANR	3492281	IncDec	++		3492253	1					
ANR	3492282	CompoundStatement		5:26:68:68	3492253	3					
ANR	3492283	ExpressionStatement	from2 = data [ i * 2 ]	1891:4:40306:40323	3492253	0	True				
ANR	3492284	AssignmentExpression	from2 = data [ i * 2 ]		3492253	0		=			
ANR	3492285	Identifier	from2		3492253	0					
ANR	3492286	ArrayIndexing	data [ i * 2 ]		3492253	1					
ANR	3492287	Identifier	data		3492253	0					
ANR	3492288	MultiplicativeExpression	i * 2		3492253	1		*			
ANR	3492289	Identifier	i		3492253	0					
ANR	3492290	PrimaryExpression	2		3492253	1					
ANR	3492291	ExpressionStatement	to2 = data [ i * 2 + 1 ]	1892:4:40329:40348	3492253	1	True				
ANR	3492292	AssignmentExpression	to2 = data [ i * 2 + 1 ]		3492253	0		=			
ANR	3492293	Identifier	to2		3492253	0					
ANR	3492294	ArrayIndexing	data [ i * 2 + 1 ]		3492253	1					
ANR	3492295	Identifier	data		3492253	0					
ANR	3492296	AdditiveExpression	i * 2 + 1		3492253	1		+			
ANR	3492297	MultiplicativeExpression	i * 2		3492253	0		*			
ANR	3492298	Identifier	i		3492253	0					
ANR	3492299	PrimaryExpression	2		3492253	1					
ANR	3492300	PrimaryExpression	1		3492253	1					
ANR	3492301	IfStatement	if ( from2 < from1 )		3492253	2					
ANR	3492302	Condition	from2 < from1	1893:8:40358:40370	3492253	0	True				
ANR	3492303	RelationalExpression	from2 < from1		3492253	0		<			
ANR	3492304	Identifier	from2		3492253	0					
ANR	3492305	Identifier	from1		3492253	1					
ANR	3492306	CompoundStatement		8:23:141:141	3492253	1					
ANR	3492307	IfStatement	if ( to2 < from1 )		3492253	0					
ANR	3492308	Condition	to2 < from1	1894:10:40385:40395	3492253	0	True				
ANR	3492309	RelationalExpression	to2 < from1		3492253	0		<			
ANR	3492310	Identifier	to2		3492253	0					
ANR	3492311	Identifier	from1		3492253	1					
ANR	3492312	ContinueStatement	continue ;	1894:23:40398:40406	3492253	1	True				
ANR	3492313	ElseStatement	else		3492253	0					
ANR	3492314	CompoundStatement		10:11:187:187	3492253	0					
ANR	3492315	ExpressionStatement	from1 = to2 + 1	1896:1:40422:40437	3492253	0	True				
ANR	3492316	AssignmentExpression	from1 = to2 + 1		3492253	0		=			
ANR	3492317	Identifier	from1		3492253	0					
ANR	3492318	AdditiveExpression	to2 + 1		3492253	1		+			
ANR	3492319	Identifier	to2		3492253	0					
ANR	3492320	PrimaryExpression	1		3492253	1					
ANR	3492321	ElseStatement	else		3492253	0					
ANR	3492322	IfStatement	if ( from2 <= to1 )		3492253	0					
ANR	3492323	Condition	from2 <= to1	1899:13:40466:40477	3492253	0	True				
ANR	3492324	RelationalExpression	from2 <= to1		3492253	0		<=			
ANR	3492325	Identifier	from2		3492253	0					
ANR	3492326	Identifier	to1		3492253	1					
ANR	3492327	CompoundStatement		14:27:248:248	3492253	1					
ANR	3492328	IfStatement	if ( to2 < to1 )		3492253	0					
ANR	3492329	Condition	to2 < to1	1900:10:40492:40500	3492253	0	True				
ANR	3492330	RelationalExpression	to2 < to1		3492253	0		<			
ANR	3492331	Identifier	to2		3492253	0					
ANR	3492332	Identifier	to1		3492253	1					
ANR	3492333	CompoundStatement		15:21:271:271	3492253	1					
ANR	3492334	IfStatement	if ( from1 <= from2 - 1 )		3492253	0					
ANR	3492335	Condition	from1 <= from2 - 1	1901:5:40510:40527	3492253	0	True				
ANR	3492336	RelationalExpression	from1 <= from2 - 1		3492253	0		<=			
ANR	3492337	Identifier	from1		3492253	0					
ANR	3492338	AdditiveExpression	from2 - 1		3492253	1		-			
ANR	3492339	Identifier	from2		3492253	0					
ANR	3492340	PrimaryExpression	1		3492253	1					
ANR	3492341	CompoundStatement		16:25:298:298	3492253	1					
ANR	3492342	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , from1 , from2 - 1 )"	1902:3:40535:40582	3492253	0	True				
ANR	3492343	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , from1 , from2 - 1 )"		3492253	0		=			
ANR	3492344	Identifier	r		3492253	0					
ANR	3492345	CallExpression	"add_code_range_to_buf ( pbuf , from1 , from2 - 1 )"		3492253	1					
ANR	3492346	Callee	add_code_range_to_buf		3492253	0					
ANR	3492347	Identifier	add_code_range_to_buf		3492253	0					
ANR	3492348	ArgumentList	pbuf		3492253	1					
ANR	3492349	Argument	pbuf		3492253	0					
ANR	3492350	Identifier	pbuf		3492253	0					
ANR	3492351	Argument	from1		3492253	1					
ANR	3492352	Identifier	from1		3492253	0					
ANR	3492353	Argument	from2 - 1		3492253	2					
ANR	3492354	AdditiveExpression	from2 - 1		3492253	0		-			
ANR	3492355	Identifier	from2		3492253	0					
ANR	3492356	PrimaryExpression	1		3492253	1					
ANR	3492357	IfStatement	if ( r != 0 )		3492253	1					
ANR	3492358	Condition	r != 0	1903:7:40591:40596	3492253	0	True				
ANR	3492359	EqualityExpression	r != 0		3492253	0		!=			
ANR	3492360	Identifier	r		3492253	0					
ANR	3492361	PrimaryExpression	0		3492253	1					
ANR	3492362	ReturnStatement	return r ;	1903:15:40599:40607	3492253	1	True				
ANR	3492363	Identifier	r		3492253	0					
ANR	3492364	ExpressionStatement	from1 = to2 + 1	1905:1:40613:40628	3492253	1	True				
ANR	3492365	AssignmentExpression	from1 = to2 + 1		3492253	0		=			
ANR	3492366	Identifier	from1		3492253	0					
ANR	3492367	AdditiveExpression	to2 + 1		3492253	1		+			
ANR	3492368	Identifier	to2		3492253	0					
ANR	3492369	PrimaryExpression	1		3492253	1					
ANR	3492370	ElseStatement	else		3492253	0					
ANR	3492371	CompoundStatement		22:11:417:417	3492253	0					
ANR	3492372	ExpressionStatement	to1 = from2 - 1	1908:1:40652:40667	3492253	0	True				
ANR	3492373	AssignmentExpression	to1 = from2 - 1		3492253	0		=			
ANR	3492374	Identifier	to1		3492253	0					
ANR	3492375	AdditiveExpression	from2 - 1		3492253	1		-			
ANR	3492376	Identifier	from2		3492253	0					
ANR	3492377	PrimaryExpression	1		3492253	1					
ANR	3492378	ElseStatement	else		3492253	0					
ANR	3492379	CompoundStatement		26:9:460:460	3492253	0					
ANR	3492380	ExpressionStatement	from1 = from2	1912:6:40700:40713	3492253	0	True				
ANR	3492381	AssignmentExpression	from1 = from2		3492253	0		=			
ANR	3492382	Identifier	from1		3492253	0					
ANR	3492383	Identifier	from2		3492253	1					
ANR	3492384	IfStatement	if ( from1 > to1 )		3492253	3					
ANR	3492385	Condition	from1 > to1	1914:8:40729:40739	3492253	0	True				
ANR	3492386	RelationalExpression	from1 > to1		3492253	0		>			
ANR	3492387	Identifier	from1		3492253	0					
ANR	3492388	Identifier	to1		3492253	1					
ANR	3492389	BreakStatement	break ;	1914:21:40742:40747	3492253	1	True				
ANR	3492390	IfStatement	if ( from1 <= to1 )		3492253	3					
ANR	3492391	Condition	from1 <= to1	1916:6:40759:40770	3492253	0	True				
ANR	3492392	RelationalExpression	from1 <= to1		3492253	0		<=			
ANR	3492393	Identifier	from1		3492253	0					
ANR	3492394	Identifier	to1		3492253	1					
ANR	3492395	CompoundStatement		31:20:541:541	3492253	1					
ANR	3492396	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , from1 , to1 )"	1917:4:40779:40822	3492253	0	True				
ANR	3492397	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , from1 , to1 )"		3492253	0		=			
ANR	3492398	Identifier	r		3492253	0					
ANR	3492399	CallExpression	"add_code_range_to_buf ( pbuf , from1 , to1 )"		3492253	1					
ANR	3492400	Callee	add_code_range_to_buf		3492253	0					
ANR	3492401	Identifier	add_code_range_to_buf		3492253	0					
ANR	3492402	ArgumentList	pbuf		3492253	1					
ANR	3492403	Argument	pbuf		3492253	0					
ANR	3492404	Identifier	pbuf		3492253	0					
ANR	3492405	Argument	from1		3492253	1					
ANR	3492406	Identifier	from1		3492253	0					
ANR	3492407	Argument	to1		3492253	2					
ANR	3492408	Identifier	to1		3492253	0					
ANR	3492409	IfStatement	if ( r != 0 )		3492253	1					
ANR	3492410	Condition	r != 0	1918:8:40832:40837	3492253	0	True				
ANR	3492411	EqualityExpression	r != 0		3492253	0		!=			
ANR	3492412	Identifier	r		3492253	0					
ANR	3492413	PrimaryExpression	0		3492253	1					
ANR	3492414	ReturnStatement	return r ;	1918:16:40840:40848	3492253	1	True				
ANR	3492415	Identifier	r		3492253	0					
ANR	3492416	ReturnStatement	return 0 ;	1920:2:40856:40864	3492253	4	True				
ANR	3492417	PrimaryExpression	0		3492253	0					
ANR	3492418	ReturnType	static int		3492253	1					
ANR	3492419	Identifier	and_code_range1		3492253	2					
ANR	3492420	ParameterList	"BBuf * * pbuf , OnigCodePoint from1 , OnigCodePoint to1 , OnigCodePoint * data , int n"		3492253	3					
ANR	3492421	Parameter	BBuf * * pbuf	1884:16:40141:40151	3492253	0	True				
ANR	3492422	ParameterType	BBuf * *		3492253	0					
ANR	3492423	Identifier	pbuf		3492253	1					
ANR	3492424	Parameter	OnigCodePoint from1	1884:29:40154:40172	3492253	1	True				
ANR	3492425	ParameterType	OnigCodePoint		3492253	0					
ANR	3492426	Identifier	from1		3492253	1					
ANR	3492427	Parameter	OnigCodePoint to1	1884:50:40175:40191	3492253	2	True				
ANR	3492428	ParameterType	OnigCodePoint		3492253	0					
ANR	3492429	Identifier	to1		3492253	1					
ANR	3492430	Parameter	OnigCodePoint * data	1885:9:40203:40221	3492253	3	True				
ANR	3492431	ParameterType	OnigCodePoint *		3492253	0					
ANR	3492432	Identifier	data		3492253	1					
ANR	3492433	Parameter	int n	1885:30:40224:40228	3492253	4	True				
ANR	3492434	ParameterType	int		3492253	0					
ANR	3492435	Identifier	n		3492253	1					
ANR	3492436	CFGEntryNode	ENTRY		3492253		True				
ANR	3492437	CFGExitNode	EXIT		3492253		True				
ANR	3492438	Symbol	r		3492253						
ANR	3492439	Symbol	* i		3492253						
ANR	3492440	Symbol	data		3492253						
ANR	3492441	Symbol	from1		3492253						
ANR	3492442	Symbol	to2		3492253						
ANR	3492443	Symbol	pbuf		3492253						
ANR	3492444	Symbol	to1		3492253						
ANR	3492445	Symbol	i		3492253						
ANR	3492446	Symbol	from2		3492253						
ANR	3492447	Symbol	add_code_range_to_buf		3492253						
ANR	3492448	Symbol	* data		3492253						
ANR	3492449	Symbol	n		3492253						
ANR	3492450	Function	and_code_range_buf	1923:0:40869:42199							
ANR	3492451	FunctionDef	"and_code_range_buf (BBuf * bbuf1 , int not1 , BBuf * bbuf2 , int not2 , BBuf * * pbuf)"		3492450	0					
ANR	3492452	CompoundStatement		1925:0:40958:42199	3492450	0					
ANR	3492453	IdentifierDeclStatement	int r ;	1926:2:40962:40967	3492450	0	True				
ANR	3492454	IdentifierDecl	r		3492450	0					
ANR	3492455	IdentifierDeclType	int		3492450	0					
ANR	3492456	Identifier	r		3492450	1					
ANR	3492457	IdentifierDeclStatement	"OnigCodePoint i , j , n1 , n2 , * data1 , * data2 ;"	1927:2:40971:41013	3492450	1	True				
ANR	3492458	IdentifierDecl	i		3492450	0					
ANR	3492459	IdentifierDeclType	OnigCodePoint		3492450	0					
ANR	3492460	Identifier	i		3492450	1					
ANR	3492461	IdentifierDecl	j		3492450	1					
ANR	3492462	IdentifierDeclType	OnigCodePoint		3492450	0					
ANR	3492463	Identifier	j		3492450	1					
ANR	3492464	IdentifierDecl	n1		3492450	2					
ANR	3492465	IdentifierDeclType	OnigCodePoint		3492450	0					
ANR	3492466	Identifier	n1		3492450	1					
ANR	3492467	IdentifierDecl	n2		3492450	3					
ANR	3492468	IdentifierDeclType	OnigCodePoint		3492450	0					
ANR	3492469	Identifier	n2		3492450	1					
ANR	3492470	IdentifierDecl	* data1		3492450	4					
ANR	3492471	IdentifierDeclType	OnigCodePoint *		3492450	0					
ANR	3492472	Identifier	data1		3492450	1					
ANR	3492473	IdentifierDecl	* data2		3492450	5					
ANR	3492474	IdentifierDeclType	OnigCodePoint *		3492450	0					
ANR	3492475	Identifier	data2		3492450	1					
ANR	3492476	IdentifierDeclStatement	"OnigCodePoint from , to , from1 , to1 , from2 , to2 ;"	1928:2:41017:41063	3492450	2	True				
ANR	3492477	IdentifierDecl	from		3492450	0					
ANR	3492478	IdentifierDeclType	OnigCodePoint		3492450	0					
ANR	3492479	Identifier	from		3492450	1					
ANR	3492480	IdentifierDecl	to		3492450	1					
ANR	3492481	IdentifierDeclType	OnigCodePoint		3492450	0					
ANR	3492482	Identifier	to		3492450	1					
ANR	3492483	IdentifierDecl	from1		3492450	2					
ANR	3492484	IdentifierDeclType	OnigCodePoint		3492450	0					
ANR	3492485	Identifier	from1		3492450	1					
ANR	3492486	IdentifierDecl	to1		3492450	3					
ANR	3492487	IdentifierDeclType	OnigCodePoint		3492450	0					
ANR	3492488	Identifier	to1		3492450	1					
ANR	3492489	IdentifierDecl	from2		3492450	4					
ANR	3492490	IdentifierDeclType	OnigCodePoint		3492450	0					
ANR	3492491	Identifier	from2		3492450	1					
ANR	3492492	IdentifierDecl	to2		3492450	5					
ANR	3492493	IdentifierDeclType	OnigCodePoint		3492450	0					
ANR	3492494	Identifier	to2		3492450	1					
ANR	3492495	ExpressionStatement	* pbuf = ( BBuf * ) NULL	1930:2:41068:41088	3492450	3	True				
ANR	3492496	AssignmentExpression	* pbuf = ( BBuf * ) NULL		3492450	0		=			
ANR	3492497	UnaryOperationExpression	* pbuf		3492450	0					
ANR	3492498	UnaryOperator	*		3492450	0					
ANR	3492499	Identifier	pbuf		3492450	1					
ANR	3492500	CastExpression	( BBuf * ) NULL		3492450	1					
ANR	3492501	CastTarget	BBuf *		3492450	0					
ANR	3492502	Identifier	NULL		3492450	1					
ANR	3492503	IfStatement	if ( IS_NULL ( bbuf1 ) )		3492450	4					
ANR	3492504	Condition	IS_NULL ( bbuf1 )	1931:6:41096:41109	3492450	0	True				
ANR	3492505	CallExpression	IS_NULL ( bbuf1 )		3492450	0					
ANR	3492506	Callee	IS_NULL		3492450	0					
ANR	3492507	Identifier	IS_NULL		3492450	0					
ANR	3492508	ArgumentList	bbuf1		3492450	1					
ANR	3492509	Argument	bbuf1		3492450	0					
ANR	3492510	Identifier	bbuf1		3492450	0					
ANR	3492511	CompoundStatement		7:22:153:153	3492450	1					
ANR	3492512	IfStatement	if ( not1 != 0 && IS_NOT_NULL ( bbuf2 ) )		3492450	0					
ANR	3492513	Condition	not1 != 0 && IS_NOT_NULL ( bbuf2 )	1932:8:41122:41152	3492450	0	True				
ANR	3492514	AndExpression	not1 != 0 && IS_NOT_NULL ( bbuf2 )		3492450	0		&&			
ANR	3492515	EqualityExpression	not1 != 0		3492450	0		!=			
ANR	3492516	Identifier	not1		3492450	0					
ANR	3492517	PrimaryExpression	0		3492450	1					
ANR	3492518	CallExpression	IS_NOT_NULL ( bbuf2 )		3492450	1					
ANR	3492519	Callee	IS_NOT_NULL		3492450	0					
ANR	3492520	Identifier	IS_NOT_NULL		3492450	0					
ANR	3492521	ArgumentList	bbuf2		3492450	1					
ANR	3492522	Argument	bbuf2		3492450	0					
ANR	3492523	Identifier	bbuf2		3492450	0					
ANR	3492524	ReturnStatement	"return bbuf_clone ( pbuf , bbuf2 ) ;"	1933:6:41190:41220	3492450	1	True				
ANR	3492525	CallExpression	"bbuf_clone ( pbuf , bbuf2 )"		3492450	0					
ANR	3492526	Callee	bbuf_clone		3492450	0					
ANR	3492527	Identifier	bbuf_clone		3492450	0					
ANR	3492528	ArgumentList	pbuf		3492450	1					
ANR	3492529	Argument	pbuf		3492450	0					
ANR	3492530	Identifier	pbuf		3492450	0					
ANR	3492531	Argument	bbuf2		3492450	1					
ANR	3492532	Identifier	bbuf2		3492450	0					
ANR	3492533	ReturnStatement	return 0 ;	1934:4:41226:41234	3492450	1	True				
ANR	3492534	PrimaryExpression	0		3492450	0					
ANR	3492535	ElseStatement	else		3492450	0					
ANR	3492536	IfStatement	if ( IS_NULL ( bbuf2 ) )		3492450	0					
ANR	3492537	Condition	IS_NULL ( bbuf2 )	1936:11:41251:41264	3492450	0	True				
ANR	3492538	CallExpression	IS_NULL ( bbuf2 )		3492450	0					
ANR	3492539	Callee	IS_NULL		3492450	0					
ANR	3492540	Identifier	IS_NULL		3492450	0					
ANR	3492541	ArgumentList	bbuf2		3492450	1					
ANR	3492542	Argument	bbuf2		3492450	0					
ANR	3492543	Identifier	bbuf2		3492450	0					
ANR	3492544	CompoundStatement		12:27:308:308	3492450	1					
ANR	3492545	IfStatement	if ( not2 != 0 )		3492450	0					
ANR	3492546	Condition	not2 != 0	1937:8:41277:41285	3492450	0	True				
ANR	3492547	EqualityExpression	not2 != 0		3492450	0		!=			
ANR	3492548	Identifier	not2		3492450	0					
ANR	3492549	PrimaryExpression	0		3492450	1					
ANR	3492550	ReturnStatement	"return bbuf_clone ( pbuf , bbuf1 ) ;"	1938:6:41294:41324	3492450	1	True				
ANR	3492551	CallExpression	"bbuf_clone ( pbuf , bbuf1 )"		3492450	0					
ANR	3492552	Callee	bbuf_clone		3492450	0					
ANR	3492553	Identifier	bbuf_clone		3492450	0					
ANR	3492554	ArgumentList	pbuf		3492450	1					
ANR	3492555	Argument	pbuf		3492450	0					
ANR	3492556	Identifier	pbuf		3492450	0					
ANR	3492557	Argument	bbuf1		3492450	1					
ANR	3492558	Identifier	bbuf1		3492450	0					
ANR	3492559	ReturnStatement	return 0 ;	1939:4:41330:41338	3492450	1	True				
ANR	3492560	PrimaryExpression	0		3492450	0					
ANR	3492561	IfStatement	if ( not1 != 0 )		3492450	5					
ANR	3492562	Condition	not1 != 0	1942:6:41351:41359	3492450	0	True				
ANR	3492563	EqualityExpression	not1 != 0		3492450	0		!=			
ANR	3492564	Identifier	not1		3492450	0					
ANR	3492565	PrimaryExpression	0		3492450	1					
ANR	3492566	ExpressionStatement	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"	1943:4:41366:41405	3492450	1	True				
ANR	3492567	CallExpression	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"		3492450	0					
ANR	3492568	Callee	SWAP_BBUF_NOT		3492450	0					
ANR	3492569	Identifier	SWAP_BBUF_NOT		3492450	0					
ANR	3492570	ArgumentList	bbuf1		3492450	1					
ANR	3492571	Argument	bbuf1		3492450	0					
ANR	3492572	Identifier	bbuf1		3492450	0					
ANR	3492573	Argument	not1		3492450	1					
ANR	3492574	Identifier	not1		3492450	0					
ANR	3492575	Argument	bbuf2		3492450	2					
ANR	3492576	Identifier	bbuf2		3492450	0					
ANR	3492577	Argument	not2		3492450	3					
ANR	3492578	Identifier	not2		3492450	0					
ANR	3492579	ExpressionStatement	data1 = ( OnigCodePoint * ) ( bbuf1 -> p )	1945:2:41410:41445	3492450	6	True				
ANR	3492580	AssignmentExpression	data1 = ( OnigCodePoint * ) ( bbuf1 -> p )		3492450	0		=			
ANR	3492581	Identifier	data1		3492450	0					
ANR	3492582	CastExpression	( OnigCodePoint * ) ( bbuf1 -> p )		3492450	1					
ANR	3492583	CastTarget	OnigCodePoint *		3492450	0					
ANR	3492584	PtrMemberAccess	bbuf1 -> p		3492450	1					
ANR	3492585	Identifier	bbuf1		3492450	0					
ANR	3492586	Identifier	p		3492450	1					
ANR	3492587	ExpressionStatement	data2 = ( OnigCodePoint * ) ( bbuf2 -> p )	1946:2:41449:41484	3492450	7	True				
ANR	3492588	AssignmentExpression	data2 = ( OnigCodePoint * ) ( bbuf2 -> p )		3492450	0		=			
ANR	3492589	Identifier	data2		3492450	0					
ANR	3492590	CastExpression	( OnigCodePoint * ) ( bbuf2 -> p )		3492450	1					
ANR	3492591	CastTarget	OnigCodePoint *		3492450	0					
ANR	3492592	PtrMemberAccess	bbuf2 -> p		3492450	1					
ANR	3492593	Identifier	bbuf2		3492450	0					
ANR	3492594	Identifier	p		3492450	1					
ANR	3492595	ExpressionStatement	"GET_CODE_POINT ( n1 , data1 )"	1947:2:41488:41513	3492450	8	True				
ANR	3492596	CallExpression	"GET_CODE_POINT ( n1 , data1 )"		3492450	0					
ANR	3492597	Callee	GET_CODE_POINT		3492450	0					
ANR	3492598	Identifier	GET_CODE_POINT		3492450	0					
ANR	3492599	ArgumentList	n1		3492450	1					
ANR	3492600	Argument	n1		3492450	0					
ANR	3492601	Identifier	n1		3492450	0					
ANR	3492602	Argument	data1		3492450	1					
ANR	3492603	Identifier	data1		3492450	0					
ANR	3492604	ExpressionStatement	"GET_CODE_POINT ( n2 , data2 )"	1948:2:41517:41542	3492450	9	True				
ANR	3492605	CallExpression	"GET_CODE_POINT ( n2 , data2 )"		3492450	0					
ANR	3492606	Callee	GET_CODE_POINT		3492450	0					
ANR	3492607	Identifier	GET_CODE_POINT		3492450	0					
ANR	3492608	ArgumentList	n2		3492450	1					
ANR	3492609	Argument	n2		3492450	0					
ANR	3492610	Identifier	n2		3492450	0					
ANR	3492611	Argument	data2		3492450	1					
ANR	3492612	Identifier	data2		3492450	0					
ANR	3492613	ExpressionStatement	data1 ++	1949:2:41546:41553	3492450	10	True				
ANR	3492614	PostIncDecOperationExpression	data1 ++		3492450	0					
ANR	3492615	Identifier	data1		3492450	0					
ANR	3492616	IncDec	++		3492450	1					
ANR	3492617	ExpressionStatement	data2 ++	1950:2:41557:41564	3492450	11	True				
ANR	3492618	PostIncDecOperationExpression	data2 ++		3492450	0					
ANR	3492619	Identifier	data2		3492450	0					
ANR	3492620	IncDec	++		3492450	1					
ANR	3492621	IfStatement	if ( not2 == 0 && not1 == 0 )		3492450	12					
ANR	3492622	Condition	not2 == 0 && not1 == 0	1952:6:41573:41594	3492450	0	True				
ANR	3492623	AndExpression	not2 == 0 && not1 == 0		3492450	0		&&			
ANR	3492624	EqualityExpression	not2 == 0		3492450	0		==			
ANR	3492625	Identifier	not2		3492450	0					
ANR	3492626	PrimaryExpression	0		3492450	1					
ANR	3492627	EqualityExpression	not1 == 0		3492450	1		==			
ANR	3492628	Identifier	not1		3492450	0					
ANR	3492629	PrimaryExpression	0		3492450	1					
ANR	3492630	CompoundStatement		28:30:638:638	3492450	1					
ANR	3492631	ForStatement	for ( i = 0 ; i < n1 ; i ++ )		3492450	0					
ANR	3492632	ForInit	i = 0 ;	1953:9:41622:41627	3492450	0	True				
ANR	3492633	AssignmentExpression	i = 0		3492450	0		=			
ANR	3492634	Identifier	i		3492450	0					
ANR	3492635	PrimaryExpression	0		3492450	1					
ANR	3492636	Condition	i < n1	1953:16:41629:41634	3492450	1	True				
ANR	3492637	RelationalExpression	i < n1		3492450	0		<			
ANR	3492638	Identifier	i		3492450	0					
ANR	3492639	Identifier	n1		3492450	1					
ANR	3492640	PostIncDecOperationExpression	i ++	1953:24:41637:41639	3492450	2	True				
ANR	3492641	Identifier	i		3492450	0					
ANR	3492642	IncDec	++		3492450	1					
ANR	3492643	CompoundStatement		29:29:683:683	3492450	3					
ANR	3492644	ExpressionStatement	from1 = data1 [ i * 2 ]	1954:6:41650:41668	3492450	0	True				
ANR	3492645	AssignmentExpression	from1 = data1 [ i * 2 ]		3492450	0		=			
ANR	3492646	Identifier	from1		3492450	0					
ANR	3492647	ArrayIndexing	data1 [ i * 2 ]		3492450	1					
ANR	3492648	Identifier	data1		3492450	0					
ANR	3492649	MultiplicativeExpression	i * 2		3492450	1		*			
ANR	3492650	Identifier	i		3492450	0					
ANR	3492651	PrimaryExpression	2		3492450	1					
ANR	3492652	ExpressionStatement	to1 = data1 [ i * 2 + 1 ]	1955:6:41676:41696	3492450	1	True				
ANR	3492653	AssignmentExpression	to1 = data1 [ i * 2 + 1 ]		3492450	0		=			
ANR	3492654	Identifier	to1		3492450	0					
ANR	3492655	ArrayIndexing	data1 [ i * 2 + 1 ]		3492450	1					
ANR	3492656	Identifier	data1		3492450	0					
ANR	3492657	AdditiveExpression	i * 2 + 1		3492450	1		+			
ANR	3492658	MultiplicativeExpression	i * 2		3492450	0		*			
ANR	3492659	Identifier	i		3492450	0					
ANR	3492660	PrimaryExpression	2		3492450	1					
ANR	3492661	PrimaryExpression	1		3492450	1					
ANR	3492662	ForStatement	for ( j = 0 ; j < n2 ; j ++ )		3492450	2					
ANR	3492663	ForInit	j = 0 ;	1956:11:41709:41714	3492450	0	True				
ANR	3492664	AssignmentExpression	j = 0		3492450	0		=			
ANR	3492665	Identifier	j		3492450	0					
ANR	3492666	PrimaryExpression	0		3492450	1					
ANR	3492667	Condition	j < n2	1956:18:41716:41721	3492450	1	True				
ANR	3492668	RelationalExpression	j < n2		3492450	0		<			
ANR	3492669	Identifier	j		3492450	0					
ANR	3492670	Identifier	n2		3492450	1					
ANR	3492671	PostIncDecOperationExpression	j ++	1956:26:41724:41726	3492450	2	True				
ANR	3492672	Identifier	j		3492450	0					
ANR	3492673	IncDec	++		3492450	1					
ANR	3492674	CompoundStatement		32:31:770:770	3492450	3					
ANR	3492675	ExpressionStatement	from2 = data2 [ j * 2 ]	1957:1:41732:41750	3492450	0	True				
ANR	3492676	AssignmentExpression	from2 = data2 [ j * 2 ]		3492450	0		=			
ANR	3492677	Identifier	from2		3492450	0					
ANR	3492678	ArrayIndexing	data2 [ j * 2 ]		3492450	1					
ANR	3492679	Identifier	data2		3492450	0					
ANR	3492680	MultiplicativeExpression	j * 2		3492450	1		*			
ANR	3492681	Identifier	j		3492450	0					
ANR	3492682	PrimaryExpression	2		3492450	1					
ANR	3492683	ExpressionStatement	to2 = data2 [ j * 2 + 1 ]	1958:1:41753:41773	3492450	1	True				
ANR	3492684	AssignmentExpression	to2 = data2 [ j * 2 + 1 ]		3492450	0		=			
ANR	3492685	Identifier	to2		3492450	0					
ANR	3492686	ArrayIndexing	data2 [ j * 2 + 1 ]		3492450	1					
ANR	3492687	Identifier	data2		3492450	0					
ANR	3492688	AdditiveExpression	j * 2 + 1		3492450	1		+			
ANR	3492689	MultiplicativeExpression	j * 2		3492450	0		*			
ANR	3492690	Identifier	j		3492450	0					
ANR	3492691	PrimaryExpression	2		3492450	1					
ANR	3492692	PrimaryExpression	1		3492450	1					
ANR	3492693	IfStatement	if ( from2 > to1 )		3492450	2					
ANR	3492694	Condition	from2 > to1	1959:5:41780:41790	3492450	0	True				
ANR	3492695	RelationalExpression	from2 > to1		3492450	0		>			
ANR	3492696	Identifier	from2		3492450	0					
ANR	3492697	Identifier	to1		3492450	1					
ANR	3492698	BreakStatement	break ;	1959:18:41793:41798	3492450	1	True				
ANR	3492699	IfStatement	if ( to2 < from1 )		3492450	3					
ANR	3492700	Condition	to2 < from1	1960:5:41805:41815	3492450	0	True				
ANR	3492701	RelationalExpression	to2 < from1		3492450	0		<			
ANR	3492702	Identifier	to2		3492450	0					
ANR	3492703	Identifier	from1		3492450	1					
ANR	3492704	ContinueStatement	continue ;	1960:18:41818:41826	3492450	1	True				
ANR	3492705	ExpressionStatement	"from = MAX ( from1 , from2 )"	1961:1:41829:41853	3492450	4	True				
ANR	3492706	AssignmentExpression	"from = MAX ( from1 , from2 )"		3492450	0		=			
ANR	3492707	Identifier	from		3492450	0					
ANR	3492708	CallExpression	"MAX ( from1 , from2 )"		3492450	1					
ANR	3492709	Callee	MAX		3492450	0					
ANR	3492710	Identifier	MAX		3492450	0					
ANR	3492711	ArgumentList	from1		3492450	1					
ANR	3492712	Argument	from1		3492450	0					
ANR	3492713	Identifier	from1		3492450	0					
ANR	3492714	Argument	from2		3492450	1					
ANR	3492715	Identifier	from2		3492450	0					
ANR	3492716	ExpressionStatement	"to = MIN ( to1 , to2 )"	1962:1:41856:41876	3492450	5	True				
ANR	3492717	AssignmentExpression	"to = MIN ( to1 , to2 )"		3492450	0		=			
ANR	3492718	Identifier	to		3492450	0					
ANR	3492719	CallExpression	"MIN ( to1 , to2 )"		3492450	1					
ANR	3492720	Callee	MIN		3492450	0					
ANR	3492721	Identifier	MIN		3492450	0					
ANR	3492722	ArgumentList	to1		3492450	1					
ANR	3492723	Argument	to1		3492450	0					
ANR	3492724	Identifier	to1		3492450	0					
ANR	3492725	Argument	to2		3492450	1					
ANR	3492726	Identifier	to2		3492450	0					
ANR	3492727	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , from , to )"	1963:1:41879:41920	3492450	6	True				
ANR	3492728	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , from , to )"		3492450	0		=			
ANR	3492729	Identifier	r		3492450	0					
ANR	3492730	CallExpression	"add_code_range_to_buf ( pbuf , from , to )"		3492450	1					
ANR	3492731	Callee	add_code_range_to_buf		3492450	0					
ANR	3492732	Identifier	add_code_range_to_buf		3492450	0					
ANR	3492733	ArgumentList	pbuf		3492450	1					
ANR	3492734	Argument	pbuf		3492450	0					
ANR	3492735	Identifier	pbuf		3492450	0					
ANR	3492736	Argument	from		3492450	1					
ANR	3492737	Identifier	from		3492450	0					
ANR	3492738	Argument	to		3492450	2					
ANR	3492739	Identifier	to		3492450	0					
ANR	3492740	IfStatement	if ( r != 0 )		3492450	7					
ANR	3492741	Condition	r != 0	1964:5:41927:41932	3492450	0	True				
ANR	3492742	EqualityExpression	r != 0		3492450	0		!=			
ANR	3492743	Identifier	r		3492450	0					
ANR	3492744	PrimaryExpression	0		3492450	1					
ANR	3492745	ReturnStatement	return r ;	1964:13:41935:41943	3492450	1	True				
ANR	3492746	Identifier	r		3492450	0					
ANR	3492747	ElseStatement	else		3492450	0					
ANR	3492748	IfStatement	if ( not1 == 0 )		3492450	0					
ANR	3492749	Condition	not1 == 0	1968:11:41974:41982	3492450	0	True				
ANR	3492750	EqualityExpression	not1 == 0		3492450	0		==			
ANR	3492751	Identifier	not1		3492450	0					
ANR	3492752	PrimaryExpression	0		3492450	1					
ANR	3492753	CompoundStatement		44:22:1026:1026	3492450	1					
ANR	3492754	ForStatement	for ( i = 0 ; i < n1 ; i ++ )		3492450	0					
ANR	3492755	ForInit	i = 0 ;	1969:9:42016:42021	3492450	0	True				
ANR	3492756	AssignmentExpression	i = 0		3492450	0		=			
ANR	3492757	Identifier	i		3492450	0					
ANR	3492758	PrimaryExpression	0		3492450	1					
ANR	3492759	Condition	i < n1	1969:16:42023:42028	3492450	1	True				
ANR	3492760	RelationalExpression	i < n1		3492450	0		<			
ANR	3492761	Identifier	i		3492450	0					
ANR	3492762	Identifier	n1		3492450	1					
ANR	3492763	PostIncDecOperationExpression	i ++	1969:24:42031:42033	3492450	2	True				
ANR	3492764	Identifier	i		3492450	0					
ANR	3492765	IncDec	++		3492450	1					
ANR	3492766	CompoundStatement		45:29:1077:1077	3492450	3					
ANR	3492767	ExpressionStatement	from1 = data1 [ i * 2 ]	1970:6:42044:42062	3492450	0	True				
ANR	3492768	AssignmentExpression	from1 = data1 [ i * 2 ]		3492450	0		=			
ANR	3492769	Identifier	from1		3492450	0					
ANR	3492770	ArrayIndexing	data1 [ i * 2 ]		3492450	1					
ANR	3492771	Identifier	data1		3492450	0					
ANR	3492772	MultiplicativeExpression	i * 2		3492450	1		*			
ANR	3492773	Identifier	i		3492450	0					
ANR	3492774	PrimaryExpression	2		3492450	1					
ANR	3492775	ExpressionStatement	to1 = data1 [ i * 2 + 1 ]	1971:6:42070:42090	3492450	1	True				
ANR	3492776	AssignmentExpression	to1 = data1 [ i * 2 + 1 ]		3492450	0		=			
ANR	3492777	Identifier	to1		3492450	0					
ANR	3492778	ArrayIndexing	data1 [ i * 2 + 1 ]		3492450	1					
ANR	3492779	Identifier	data1		3492450	0					
ANR	3492780	AdditiveExpression	i * 2 + 1		3492450	1		+			
ANR	3492781	MultiplicativeExpression	i * 2		3492450	0		*			
ANR	3492782	Identifier	i		3492450	0					
ANR	3492783	PrimaryExpression	2		3492450	1					
ANR	3492784	PrimaryExpression	1		3492450	1					
ANR	3492785	ExpressionStatement	"r = and_code_range1 ( pbuf , from1 , to1 , data2 , n2 )"	1972:6:42098:42146	3492450	2	True				
ANR	3492786	AssignmentExpression	"r = and_code_range1 ( pbuf , from1 , to1 , data2 , n2 )"		3492450	0		=			
ANR	3492787	Identifier	r		3492450	0					
ANR	3492788	CallExpression	"and_code_range1 ( pbuf , from1 , to1 , data2 , n2 )"		3492450	1					
ANR	3492789	Callee	and_code_range1		3492450	0					
ANR	3492790	Identifier	and_code_range1		3492450	0					
ANR	3492791	ArgumentList	pbuf		3492450	1					
ANR	3492792	Argument	pbuf		3492450	0					
ANR	3492793	Identifier	pbuf		3492450	0					
ANR	3492794	Argument	from1		3492450	1					
ANR	3492795	Identifier	from1		3492450	0					
ANR	3492796	Argument	to1		3492450	2					
ANR	3492797	Identifier	to1		3492450	0					
ANR	3492798	Argument	data2		3492450	3					
ANR	3492799	Identifier	data2		3492450	0					
ANR	3492800	Argument	n2		3492450	4					
ANR	3492801	Identifier	n2		3492450	0					
ANR	3492802	IfStatement	if ( r != 0 )		3492450	3					
ANR	3492803	Condition	r != 0	1973:10:42158:42163	3492450	0	True				
ANR	3492804	EqualityExpression	r != 0		3492450	0		!=			
ANR	3492805	Identifier	r		3492450	0					
ANR	3492806	PrimaryExpression	0		3492450	1					
ANR	3492807	ReturnStatement	return r ;	1973:18:42166:42174	3492450	1	True				
ANR	3492808	Identifier	r		3492450	0					
ANR	3492809	ReturnStatement	return 0 ;	1977:2:42189:42197	3492450	13	True				
ANR	3492810	PrimaryExpression	0		3492450	0					
ANR	3492811	ReturnType	static int		3492450	1					
ANR	3492812	Identifier	and_code_range_buf		3492450	2					
ANR	3492813	ParameterList	"BBuf * bbuf1 , int not1 , BBuf * bbuf2 , int not2 , BBuf * * pbuf"		3492450	3					
ANR	3492814	Parameter	BBuf * bbuf1	1924:19:40899:40909	3492450	0	True				
ANR	3492815	ParameterType	BBuf *		3492450	0					
ANR	3492816	Identifier	bbuf1		3492450	1					
ANR	3492817	Parameter	int not1	1924:32:40912:40919	3492450	1	True				
ANR	3492818	ParameterType	int		3492450	0					
ANR	3492819	Identifier	not1		3492450	1					
ANR	3492820	Parameter	BBuf * bbuf2	1924:42:40922:40932	3492450	2	True				
ANR	3492821	ParameterType	BBuf *		3492450	0					
ANR	3492822	Identifier	bbuf2		3492450	1					
ANR	3492823	Parameter	int not2	1924:55:40935:40942	3492450	3	True				
ANR	3492824	ParameterType	int		3492450	0					
ANR	3492825	Identifier	not2		3492450	1					
ANR	3492826	Parameter	BBuf * * pbuf	1924:65:40945:40955	3492450	4	True				
ANR	3492827	ParameterType	BBuf * *		3492450	0					
ANR	3492828	Identifier	pbuf		3492450	1					
ANR	3492829	CFGEntryNode	ENTRY		3492450		True				
ANR	3492830	CFGExitNode	EXIT		3492450		True				
ANR	3492831	Symbol	IS_NOT_NULL		3492450						
ANR	3492832	Symbol	n1		3492450						
ANR	3492833	Symbol	n2		3492450						
ANR	3492834	Symbol	MAX		3492450						
ANR	3492835	Symbol	bbuf1 -> p		3492450						
ANR	3492836	Symbol	not2		3492450						
ANR	3492837	Symbol	not1		3492450						
ANR	3492838	Symbol	bbuf2		3492450						
ANR	3492839	Symbol	bbuf1		3492450						
ANR	3492840	Symbol	IS_NULL		3492450						
ANR	3492841	Symbol	from1		3492450						
ANR	3492842	Symbol	to2		3492450						
ANR	3492843	Symbol	and_code_range1		3492450						
ANR	3492844	Symbol	to1		3492450						
ANR	3492845	Symbol	bbuf_clone		3492450						
ANR	3492846	Symbol	from2		3492450						
ANR	3492847	Symbol	from		3492450						
ANR	3492848	Symbol	add_code_range_to_buf		3492450						
ANR	3492849	Symbol	* pbuf		3492450						
ANR	3492850	Symbol	* data2		3492450						
ANR	3492851	Symbol	* data1		3492450						
ANR	3492852	Symbol	bbuf2 -> p		3492450						
ANR	3492853	Symbol	NULL		3492450						
ANR	3492854	Symbol	data2		3492450						
ANR	3492855	Symbol	data1		3492450						
ANR	3492856	Symbol	i		3492450						
ANR	3492857	Symbol	j		3492450						
ANR	3492858	Symbol	r		3492450						
ANR	3492859	Symbol	* i		3492450						
ANR	3492860	Symbol	MIN		3492450						
ANR	3492861	Symbol	* j		3492450						
ANR	3492862	Symbol	pbuf		3492450						
ANR	3492863	Symbol	to		3492450						
ANR	3492864	Symbol	* bbuf1		3492450						
ANR	3492865	Symbol	* bbuf2		3492450						
ANR	3492866	Function	and_cclass	1980:0:42202:43311							
ANR	3492867	FunctionDef	"and_cclass (CClassNode * dest , CClassNode * cc , OnigEncoding enc)"		3492866	0					
ANR	3492868	CompoundStatement		1982:0:42276:43311	3492866	0					
ANR	3492869	IdentifierDeclStatement	"int r , not1 , not2 ;"	1983:2:42280:42297	3492866	0	True				
ANR	3492870	IdentifierDecl	r		3492866	0					
ANR	3492871	IdentifierDeclType	int		3492866	0					
ANR	3492872	Identifier	r		3492866	1					
ANR	3492873	IdentifierDecl	not1		3492866	1					
ANR	3492874	IdentifierDeclType	int		3492866	0					
ANR	3492875	Identifier	not1		3492866	1					
ANR	3492876	IdentifierDecl	not2		3492866	2					
ANR	3492877	IdentifierDeclType	int		3492866	0					
ANR	3492878	Identifier	not2		3492866	1					
ANR	3492879	IdentifierDeclStatement	"BBuf * buf1 , * buf2 , * pbuf ;"	1984:2:42301:42325	3492866	1	True				
ANR	3492880	IdentifierDecl	* buf1		3492866	0					
ANR	3492881	IdentifierDeclType	BBuf *		3492866	0					
ANR	3492882	Identifier	buf1		3492866	1					
ANR	3492883	IdentifierDecl	* buf2		3492866	1					
ANR	3492884	IdentifierDeclType	BBuf *		3492866	0					
ANR	3492885	Identifier	buf2		3492866	1					
ANR	3492886	IdentifierDecl	* pbuf		3492866	2					
ANR	3492887	IdentifierDeclType	BBuf *		3492866	0					
ANR	3492888	Identifier	pbuf		3492866	1					
ANR	3492889	IdentifierDeclStatement	"BitSetRef bsr1 , bsr2 ;"	1985:2:42329:42349	3492866	2	True				
ANR	3492890	IdentifierDecl	bsr1		3492866	0					
ANR	3492891	IdentifierDeclType	BitSetRef		3492866	0					
ANR	3492892	Identifier	bsr1		3492866	1					
ANR	3492893	IdentifierDecl	bsr2		3492866	1					
ANR	3492894	IdentifierDeclType	BitSetRef		3492866	0					
ANR	3492895	Identifier	bsr2		3492866	1					
ANR	3492896	IdentifierDeclStatement	"BitSet bs1 , bs2 ;"	1986:2:42353:42368	3492866	3	True				
ANR	3492897	IdentifierDecl	bs1		3492866	0					
ANR	3492898	IdentifierDeclType	BitSet		3492866	0					
ANR	3492899	Identifier	bs1		3492866	1					
ANR	3492900	IdentifierDecl	bs2		3492866	1					
ANR	3492901	IdentifierDeclType	BitSet		3492866	0					
ANR	3492902	Identifier	bs2		3492866	1					
ANR	3492903	ExpressionStatement	not1 = IS_NCCLASS_NOT ( dest )	1988:2:42373:42400	3492866	4	True				
ANR	3492904	AssignmentExpression	not1 = IS_NCCLASS_NOT ( dest )		3492866	0		=			
ANR	3492905	Identifier	not1		3492866	0					
ANR	3492906	CallExpression	IS_NCCLASS_NOT ( dest )		3492866	1					
ANR	3492907	Callee	IS_NCCLASS_NOT		3492866	0					
ANR	3492908	Identifier	IS_NCCLASS_NOT		3492866	0					
ANR	3492909	ArgumentList	dest		3492866	1					
ANR	3492910	Argument	dest		3492866	0					
ANR	3492911	Identifier	dest		3492866	0					
ANR	3492912	ExpressionStatement	bsr1 = dest -> bs	1989:2:42404:42419	3492866	5	True				
ANR	3492913	AssignmentExpression	bsr1 = dest -> bs		3492866	0		=			
ANR	3492914	Identifier	bsr1		3492866	0					
ANR	3492915	PtrMemberAccess	dest -> bs		3492866	1					
ANR	3492916	Identifier	dest		3492866	0					
ANR	3492917	Identifier	bs		3492866	1					
ANR	3492918	ExpressionStatement	buf1 = dest -> mbuf	1990:2:42423:42440	3492866	6	True				
ANR	3492919	AssignmentExpression	buf1 = dest -> mbuf		3492866	0		=			
ANR	3492920	Identifier	buf1		3492866	0					
ANR	3492921	PtrMemberAccess	dest -> mbuf		3492866	1					
ANR	3492922	Identifier	dest		3492866	0					
ANR	3492923	Identifier	mbuf		3492866	1					
ANR	3492924	ExpressionStatement	not2 = IS_NCCLASS_NOT ( cc )	1991:2:42444:42469	3492866	7	True				
ANR	3492925	AssignmentExpression	not2 = IS_NCCLASS_NOT ( cc )		3492866	0		=			
ANR	3492926	Identifier	not2		3492866	0					
ANR	3492927	CallExpression	IS_NCCLASS_NOT ( cc )		3492866	1					
ANR	3492928	Callee	IS_NCCLASS_NOT		3492866	0					
ANR	3492929	Identifier	IS_NCCLASS_NOT		3492866	0					
ANR	3492930	ArgumentList	cc		3492866	1					
ANR	3492931	Argument	cc		3492866	0					
ANR	3492932	Identifier	cc		3492866	0					
ANR	3492933	ExpressionStatement	bsr2 = cc -> bs	1992:2:42473:42486	3492866	8	True				
ANR	3492934	AssignmentExpression	bsr2 = cc -> bs		3492866	0		=			
ANR	3492935	Identifier	bsr2		3492866	0					
ANR	3492936	PtrMemberAccess	cc -> bs		3492866	1					
ANR	3492937	Identifier	cc		3492866	0					
ANR	3492938	Identifier	bs		3492866	1					
ANR	3492939	ExpressionStatement	buf2 = cc -> mbuf	1993:2:42490:42505	3492866	9	True				
ANR	3492940	AssignmentExpression	buf2 = cc -> mbuf		3492866	0		=			
ANR	3492941	Identifier	buf2		3492866	0					
ANR	3492942	PtrMemberAccess	cc -> mbuf		3492866	1					
ANR	3492943	Identifier	cc		3492866	0					
ANR	3492944	Identifier	mbuf		3492866	1					
ANR	3492945	IfStatement	if ( not1 != 0 )		3492866	10					
ANR	3492946	Condition	not1 != 0	1995:6:42514:42522	3492866	0	True				
ANR	3492947	EqualityExpression	not1 != 0		3492866	0		!=			
ANR	3492948	Identifier	not1		3492866	0					
ANR	3492949	PrimaryExpression	0		3492866	1					
ANR	3492950	CompoundStatement		14:17:248:248	3492866	1					
ANR	3492951	ExpressionStatement	"bitset_invert_to ( bsr1 , bs1 )"	1996:4:42531:42558	3492866	0	True				
ANR	3492952	CallExpression	"bitset_invert_to ( bsr1 , bs1 )"		3492866	0					
ANR	3492953	Callee	bitset_invert_to		3492866	0					
ANR	3492954	Identifier	bitset_invert_to		3492866	0					
ANR	3492955	ArgumentList	bsr1		3492866	1					
ANR	3492956	Argument	bsr1		3492866	0					
ANR	3492957	Identifier	bsr1		3492866	0					
ANR	3492958	Argument	bs1		3492866	1					
ANR	3492959	Identifier	bs1		3492866	0					
ANR	3492960	ExpressionStatement	bsr1 = bs1	1997:4:42564:42574	3492866	1	True				
ANR	3492961	AssignmentExpression	bsr1 = bs1		3492866	0		=			
ANR	3492962	Identifier	bsr1		3492866	0					
ANR	3492963	Identifier	bs1		3492866	1					
ANR	3492964	IfStatement	if ( not2 != 0 )		3492866	11					
ANR	3492965	Condition	not2 != 0	1999:6:42586:42594	3492866	0	True				
ANR	3492966	EqualityExpression	not2 != 0		3492866	0		!=			
ANR	3492967	Identifier	not2		3492866	0					
ANR	3492968	PrimaryExpression	0		3492866	1					
ANR	3492969	CompoundStatement		18:17:320:320	3492866	1					
ANR	3492970	ExpressionStatement	"bitset_invert_to ( bsr2 , bs2 )"	2000:4:42603:42630	3492866	0	True				
ANR	3492971	CallExpression	"bitset_invert_to ( bsr2 , bs2 )"		3492866	0					
ANR	3492972	Callee	bitset_invert_to		3492866	0					
ANR	3492973	Identifier	bitset_invert_to		3492866	0					
ANR	3492974	ArgumentList	bsr2		3492866	1					
ANR	3492975	Argument	bsr2		3492866	0					
ANR	3492976	Identifier	bsr2		3492866	0					
ANR	3492977	Argument	bs2		3492866	1					
ANR	3492978	Identifier	bs2		3492866	0					
ANR	3492979	ExpressionStatement	bsr2 = bs2	2001:4:42636:42646	3492866	1	True				
ANR	3492980	AssignmentExpression	bsr2 = bs2		3492866	0		=			
ANR	3492981	Identifier	bsr2		3492866	0					
ANR	3492982	Identifier	bs2		3492866	1					
ANR	3492983	ExpressionStatement	"bitset_and ( bsr1 , bsr2 )"	2003:2:42654:42676	3492866	12	True				
ANR	3492984	CallExpression	"bitset_and ( bsr1 , bsr2 )"		3492866	0					
ANR	3492985	Callee	bitset_and		3492866	0					
ANR	3492986	Identifier	bitset_and		3492866	0					
ANR	3492987	ArgumentList	bsr1		3492866	1					
ANR	3492988	Argument	bsr1		3492866	0					
ANR	3492989	Identifier	bsr1		3492866	0					
ANR	3492990	Argument	bsr2		3492866	1					
ANR	3492991	Identifier	bsr2		3492866	0					
ANR	3492992	IfStatement	if ( bsr1 != dest -> bs )		3492866	13					
ANR	3492993	Condition	bsr1 != dest -> bs	2004:6:42684:42699	3492866	0	True				
ANR	3492994	EqualityExpression	bsr1 != dest -> bs		3492866	0		!=			
ANR	3492995	Identifier	bsr1		3492866	0					
ANR	3492996	PtrMemberAccess	dest -> bs		3492866	1					
ANR	3492997	Identifier	dest		3492866	0					
ANR	3492998	Identifier	bs		3492866	1					
ANR	3492999	CompoundStatement		23:24:425:425	3492866	1					
ANR	3493000	ExpressionStatement	"bitset_copy ( dest -> bs , bsr1 )"	2005:4:42708:42735	3492866	0	True				
ANR	3493001	CallExpression	"bitset_copy ( dest -> bs , bsr1 )"		3492866	0					
ANR	3493002	Callee	bitset_copy		3492866	0					
ANR	3493003	Identifier	bitset_copy		3492866	0					
ANR	3493004	ArgumentList	dest -> bs		3492866	1					
ANR	3493005	Argument	dest -> bs		3492866	0					
ANR	3493006	PtrMemberAccess	dest -> bs		3492866	0					
ANR	3493007	Identifier	dest		3492866	0					
ANR	3493008	Identifier	bs		3492866	1					
ANR	3493009	Argument	bsr1		3492866	1					
ANR	3493010	Identifier	bsr1		3492866	0					
ANR	3493011	ExpressionStatement	bsr1 = dest -> bs	2006:4:42741:42756	3492866	1	True				
ANR	3493012	AssignmentExpression	bsr1 = dest -> bs		3492866	0		=			
ANR	3493013	Identifier	bsr1		3492866	0					
ANR	3493014	PtrMemberAccess	dest -> bs		3492866	1					
ANR	3493015	Identifier	dest		3492866	0					
ANR	3493016	Identifier	bs		3492866	1					
ANR	3493017	IfStatement	if ( not1 != 0 )		3492866	14					
ANR	3493018	Condition	not1 != 0	2008:6:42768:42776	3492866	0	True				
ANR	3493019	EqualityExpression	not1 != 0		3492866	0		!=			
ANR	3493020	Identifier	not1		3492866	0					
ANR	3493021	PrimaryExpression	0		3492866	1					
ANR	3493022	CompoundStatement		27:17:502:502	3492866	1					
ANR	3493023	ExpressionStatement	bitset_invert ( dest -> bs )	2009:4:42785:42808	3492866	0	True				
ANR	3493024	CallExpression	bitset_invert ( dest -> bs )		3492866	0					
ANR	3493025	Callee	bitset_invert		3492866	0					
ANR	3493026	Identifier	bitset_invert		3492866	0					
ANR	3493027	ArgumentList	dest -> bs		3492866	1					
ANR	3493028	Argument	dest -> bs		3492866	0					
ANR	3493029	PtrMemberAccess	dest -> bs		3492866	0					
ANR	3493030	Identifier	dest		3492866	0					
ANR	3493031	Identifier	bs		3492866	1					
ANR	3493032	IfStatement	if ( ! ONIGENC_IS_SINGLEBYTE ( enc ) )		3492866	15					
ANR	3493033	Condition	! ONIGENC_IS_SINGLEBYTE ( enc )	2012:6:42821:42848	3492866	0	True				
ANR	3493034	UnaryOperationExpression	! ONIGENC_IS_SINGLEBYTE ( enc )		3492866	0					
ANR	3493035	UnaryOperator	!		3492866	0					
ANR	3493036	CallExpression	ONIGENC_IS_SINGLEBYTE ( enc )		3492866	1					
ANR	3493037	Callee	ONIGENC_IS_SINGLEBYTE		3492866	0					
ANR	3493038	Identifier	ONIGENC_IS_SINGLEBYTE		3492866	0					
ANR	3493039	ArgumentList	enc		3492866	1					
ANR	3493040	Argument	enc		3492866	0					
ANR	3493041	Identifier	enc		3492866	0					
ANR	3493042	CompoundStatement		31:36:574:574	3492866	1					
ANR	3493043	IfStatement	if ( not1 != 0 && not2 != 0 )		3492866	0					
ANR	3493044	Condition	not1 != 0 && not2 != 0	2013:8:42861:42882	3492866	0	True				
ANR	3493045	AndExpression	not1 != 0 && not2 != 0		3492866	0		&&			
ANR	3493046	EqualityExpression	not1 != 0		3492866	0		!=			
ANR	3493047	Identifier	not1		3492866	0					
ANR	3493048	PrimaryExpression	0		3492866	1					
ANR	3493049	EqualityExpression	not2 != 0		3492866	1		!=			
ANR	3493050	Identifier	not2		3492866	0					
ANR	3493051	PrimaryExpression	0		3492866	1					
ANR	3493052	CompoundStatement		32:32:608:608	3492866	1					
ANR	3493053	ExpressionStatement	"r = or_code_range_buf ( enc , buf1 , 0 , buf2 , 0 , & pbuf )"	2014:6:42893:42944	3492866	0	True				
ANR	3493054	AssignmentExpression	"r = or_code_range_buf ( enc , buf1 , 0 , buf2 , 0 , & pbuf )"		3492866	0		=			
ANR	3493055	Identifier	r		3492866	0					
ANR	3493056	CallExpression	"or_code_range_buf ( enc , buf1 , 0 , buf2 , 0 , & pbuf )"		3492866	1					
ANR	3493057	Callee	or_code_range_buf		3492866	0					
ANR	3493058	Identifier	or_code_range_buf		3492866	0					
ANR	3493059	ArgumentList	enc		3492866	1					
ANR	3493060	Argument	enc		3492866	0					
ANR	3493061	Identifier	enc		3492866	0					
ANR	3493062	Argument	buf1		3492866	1					
ANR	3493063	Identifier	buf1		3492866	0					
ANR	3493064	Argument	0		3492866	2					
ANR	3493065	PrimaryExpression	0		3492866	0					
ANR	3493066	Argument	buf2		3492866	3					
ANR	3493067	Identifier	buf2		3492866	0					
ANR	3493068	Argument	0		3492866	4					
ANR	3493069	PrimaryExpression	0		3492866	0					
ANR	3493070	Argument	& pbuf		3492866	5					
ANR	3493071	UnaryOperationExpression	& pbuf		3492866	0					
ANR	3493072	UnaryOperator	&		3492866	0					
ANR	3493073	Identifier	pbuf		3492866	1					
ANR	3493074	ElseStatement	else		3492866	0					
ANR	3493075	CompoundStatement		35:9:684:684	3492866	0					
ANR	3493076	ExpressionStatement	"r = and_code_range_buf ( buf1 , not1 , buf2 , not2 , & pbuf )"	2017:6:42969:43022	3492866	0	True				
ANR	3493077	AssignmentExpression	"r = and_code_range_buf ( buf1 , not1 , buf2 , not2 , & pbuf )"		3492866	0		=			
ANR	3493078	Identifier	r		3492866	0					
ANR	3493079	CallExpression	"and_code_range_buf ( buf1 , not1 , buf2 , not2 , & pbuf )"		3492866	1					
ANR	3493080	Callee	and_code_range_buf		3492866	0					
ANR	3493081	Identifier	and_code_range_buf		3492866	0					
ANR	3493082	ArgumentList	buf1		3492866	1					
ANR	3493083	Argument	buf1		3492866	0					
ANR	3493084	Identifier	buf1		3492866	0					
ANR	3493085	Argument	not1		3492866	1					
ANR	3493086	Identifier	not1		3492866	0					
ANR	3493087	Argument	buf2		3492866	2					
ANR	3493088	Identifier	buf2		3492866	0					
ANR	3493089	Argument	not2		3492866	3					
ANR	3493090	Identifier	not2		3492866	0					
ANR	3493091	Argument	& pbuf		3492866	4					
ANR	3493092	UnaryOperationExpression	& pbuf		3492866	0					
ANR	3493093	UnaryOperator	&		3492866	0					
ANR	3493094	Identifier	pbuf		3492866	1					
ANR	3493095	IfStatement	if ( r == 0 && not1 != 0 )		3492866	1					
ANR	3493096	Condition	r == 0 && not1 != 0	2018:10:43034:43052	3492866	0	True				
ANR	3493097	AndExpression	r == 0 && not1 != 0		3492866	0		&&			
ANR	3493098	EqualityExpression	r == 0		3492866	0		==			
ANR	3493099	Identifier	r		3492866	0					
ANR	3493100	PrimaryExpression	0		3492866	1					
ANR	3493101	EqualityExpression	not1 != 0		3492866	1		!=			
ANR	3493102	Identifier	not1		3492866	0					
ANR	3493103	PrimaryExpression	0		3492866	1					
ANR	3493104	CompoundStatement		38:1:781:791	3492866	1					
ANR	3493105	IdentifierDeclStatement	BBuf * tbuf ;	2019:1:43058:43068	3492866	0	True				
ANR	3493106	IdentifierDecl	* tbuf		3492866	0					
ANR	3493107	IdentifierDeclType	BBuf *		3492866	0					
ANR	3493108	Identifier	tbuf		3492866	1					
ANR	3493109	ExpressionStatement	"r = not_code_range_buf ( enc , pbuf , & tbuf )"	2020:1:43071:43111	3492866	1	True				
ANR	3493110	AssignmentExpression	"r = not_code_range_buf ( enc , pbuf , & tbuf )"		3492866	0		=			
ANR	3493111	Identifier	r		3492866	0					
ANR	3493112	CallExpression	"not_code_range_buf ( enc , pbuf , & tbuf )"		3492866	1					
ANR	3493113	Callee	not_code_range_buf		3492866	0					
ANR	3493114	Identifier	not_code_range_buf		3492866	0					
ANR	3493115	ArgumentList	enc		3492866	1					
ANR	3493116	Argument	enc		3492866	0					
ANR	3493117	Identifier	enc		3492866	0					
ANR	3493118	Argument	pbuf		3492866	1					
ANR	3493119	Identifier	pbuf		3492866	0					
ANR	3493120	Argument	& tbuf		3492866	2					
ANR	3493121	UnaryOperationExpression	& tbuf		3492866	0					
ANR	3493122	UnaryOperator	&		3492866	0					
ANR	3493123	Identifier	tbuf		3492866	1					
ANR	3493124	IfStatement	if ( r != 0 )		3492866	2					
ANR	3493125	Condition	r != 0	2021:5:43118:43123	3492866	0	True				
ANR	3493126	EqualityExpression	r != 0		3492866	0		!=			
ANR	3493127	Identifier	r		3492866	0					
ANR	3493128	PrimaryExpression	0		3492866	1					
ANR	3493129	CompoundStatement		40:13:849:849	3492866	1					
ANR	3493130	ExpressionStatement	bbuf_free ( pbuf )	2022:3:43131:43146	3492866	0	True				
ANR	3493131	CallExpression	bbuf_free ( pbuf )		3492866	0					
ANR	3493132	Callee	bbuf_free		3492866	0					
ANR	3493133	Identifier	bbuf_free		3492866	0					
ANR	3493134	ArgumentList	pbuf		3492866	1					
ANR	3493135	Argument	pbuf		3492866	0					
ANR	3493136	Identifier	pbuf		3492866	0					
ANR	3493137	ReturnStatement	return r ;	2023:3:43151:43159	3492866	1	True				
ANR	3493138	Identifier	r		3492866	0					
ANR	3493139	ExpressionStatement	bbuf_free ( pbuf )	2025:1:43165:43180	3492866	3	True				
ANR	3493140	CallExpression	bbuf_free ( pbuf )		3492866	0					
ANR	3493141	Callee	bbuf_free		3492866	0					
ANR	3493142	Identifier	bbuf_free		3492866	0					
ANR	3493143	ArgumentList	pbuf		3492866	1					
ANR	3493144	Argument	pbuf		3492866	0					
ANR	3493145	Identifier	pbuf		3492866	0					
ANR	3493146	ExpressionStatement	pbuf = tbuf	2026:1:43183:43194	3492866	4	True				
ANR	3493147	AssignmentExpression	pbuf = tbuf		3492866	0		=			
ANR	3493148	Identifier	pbuf		3492866	0					
ANR	3493149	Identifier	tbuf		3492866	1					
ANR	3493150	IfStatement	if ( r != 0 )		3492866	1					
ANR	3493151	Condition	r != 0	2029:8:43218:43223	3492866	0	True				
ANR	3493152	EqualityExpression	r != 0		3492866	0		!=			
ANR	3493153	Identifier	r		3492866	0					
ANR	3493154	PrimaryExpression	0		3492866	1					
ANR	3493155	ReturnStatement	return r ;	2029:16:43226:43234	3492866	1	True				
ANR	3493156	Identifier	r		3492866	0					
ANR	3493157	ExpressionStatement	dest -> mbuf = pbuf	2031:4:43241:43258	3492866	2	True				
ANR	3493158	AssignmentExpression	dest -> mbuf = pbuf		3492866	0		=			
ANR	3493159	PtrMemberAccess	dest -> mbuf		3492866	0					
ANR	3493160	Identifier	dest		3492866	0					
ANR	3493161	Identifier	mbuf		3492866	1					
ANR	3493162	Identifier	pbuf		3492866	1					
ANR	3493163	ExpressionStatement	bbuf_free ( buf1 )	2032:4:43264:43279	3492866	3	True				
ANR	3493164	CallExpression	bbuf_free ( buf1 )		3492866	0					
ANR	3493165	Callee	bbuf_free		3492866	0					
ANR	3493166	Identifier	bbuf_free		3492866	0					
ANR	3493167	ArgumentList	buf1		3492866	1					
ANR	3493168	Argument	buf1		3492866	0					
ANR	3493169	Identifier	buf1		3492866	0					
ANR	3493170	ReturnStatement	return r ;	2033:4:43285:43293	3492866	4	True				
ANR	3493171	Identifier	r		3492866	0					
ANR	3493172	ReturnStatement	return 0 ;	2035:2:43301:43309	3492866	16	True				
ANR	3493173	PrimaryExpression	0		3492866	0					
ANR	3493174	ReturnType	static int		3492866	1					
ANR	3493175	Identifier	and_cclass		3492866	2					
ANR	3493176	ParameterList	"CClassNode * dest , CClassNode * cc , OnigEncoding enc"		3492866	3					
ANR	3493177	Parameter	CClassNode * dest	1981:11:42224:42239	3492866	0	True				
ANR	3493178	ParameterType	CClassNode *		3492866	0					
ANR	3493179	Identifier	dest		3492866	1					
ANR	3493180	Parameter	CClassNode * cc	1981:29:42242:42255	3492866	1	True				
ANR	3493181	ParameterType	CClassNode *		3492866	0					
ANR	3493182	Identifier	cc		3492866	1					
ANR	3493183	Parameter	OnigEncoding enc	1981:45:42258:42273	3492866	2	True				
ANR	3493184	ParameterType	OnigEncoding		3492866	0					
ANR	3493185	Identifier	enc		3492866	1					
ANR	3493186	CFGEntryNode	ENTRY		3492866		True				
ANR	3493187	CFGExitNode	EXIT		3492866		True				
ANR	3493188	Symbol	bs2		3492866						
ANR	3493189	Symbol	bs1		3492866						
ANR	3493190	Symbol	not_code_range_buf		3492866						
ANR	3493191	Symbol	* dest		3492866						
ANR	3493192	Symbol	* cc		3492866						
ANR	3493193	Symbol	IS_NCCLASS_NOT		3492866						
ANR	3493194	Symbol	dest -> mbuf		3492866						
ANR	3493195	Symbol	tbuf		3492866						
ANR	3493196	Symbol	cc -> mbuf		3492866						
ANR	3493197	Symbol	dest		3492866						
ANR	3493198	Symbol	not2		3492866						
ANR	3493199	Symbol	not1		3492866						
ANR	3493200	Symbol	or_code_range_buf		3492866						
ANR	3493201	Symbol	enc		3492866						
ANR	3493202	Symbol	ONIGENC_IS_SINGLEBYTE		3492866						
ANR	3493203	Symbol	and_code_range_buf		3492866						
ANR	3493204	Symbol	cc		3492866						
ANR	3493205	Symbol	& tbuf		3492866						
ANR	3493206	Symbol	cc -> bs		3492866						
ANR	3493207	Symbol	buf1		3492866						
ANR	3493208	Symbol	buf2		3492866						
ANR	3493209	Symbol	r		3492866						
ANR	3493210	Symbol	& pbuf		3492866						
ANR	3493211	Symbol	pbuf		3492866						
ANR	3493212	Symbol	dest -> bs		3492866						
ANR	3493213	Symbol	bsr1		3492866						
ANR	3493214	Symbol	bsr2		3492866						
ANR	3493215	Function	or_cclass	2038:0:43314:44430							
ANR	3493216	FunctionDef	"or_cclass (CClassNode * dest , CClassNode * cc , OnigEncoding enc)"		3493215	0					
ANR	3493217	CompoundStatement		2040:0:43387:44430	3493215	0					
ANR	3493218	IdentifierDeclStatement	"int r , not1 , not2 ;"	2041:2:43391:43408	3493215	0	True				
ANR	3493219	IdentifierDecl	r		3493215	0					
ANR	3493220	IdentifierDeclType	int		3493215	0					
ANR	3493221	Identifier	r		3493215	1					
ANR	3493222	IdentifierDecl	not1		3493215	1					
ANR	3493223	IdentifierDeclType	int		3493215	0					
ANR	3493224	Identifier	not1		3493215	1					
ANR	3493225	IdentifierDecl	not2		3493215	2					
ANR	3493226	IdentifierDeclType	int		3493215	0					
ANR	3493227	Identifier	not2		3493215	1					
ANR	3493228	IdentifierDeclStatement	"BBuf * buf1 , * buf2 , * pbuf ;"	2042:2:43412:43436	3493215	1	True				
ANR	3493229	IdentifierDecl	* buf1		3493215	0					
ANR	3493230	IdentifierDeclType	BBuf *		3493215	0					
ANR	3493231	Identifier	buf1		3493215	1					
ANR	3493232	IdentifierDecl	* buf2		3493215	1					
ANR	3493233	IdentifierDeclType	BBuf *		3493215	0					
ANR	3493234	Identifier	buf2		3493215	1					
ANR	3493235	IdentifierDecl	* pbuf		3493215	2					
ANR	3493236	IdentifierDeclType	BBuf *		3493215	0					
ANR	3493237	Identifier	pbuf		3493215	1					
ANR	3493238	IdentifierDeclStatement	"BitSetRef bsr1 , bsr2 ;"	2043:2:43440:43460	3493215	2	True				
ANR	3493239	IdentifierDecl	bsr1		3493215	0					
ANR	3493240	IdentifierDeclType	BitSetRef		3493215	0					
ANR	3493241	Identifier	bsr1		3493215	1					
ANR	3493242	IdentifierDecl	bsr2		3493215	1					
ANR	3493243	IdentifierDeclType	BitSetRef		3493215	0					
ANR	3493244	Identifier	bsr2		3493215	1					
ANR	3493245	IdentifierDeclStatement	"BitSet bs1 , bs2 ;"	2044:2:43464:43479	3493215	3	True				
ANR	3493246	IdentifierDecl	bs1		3493215	0					
ANR	3493247	IdentifierDeclType	BitSet		3493215	0					
ANR	3493248	Identifier	bs1		3493215	1					
ANR	3493249	IdentifierDecl	bs2		3493215	1					
ANR	3493250	IdentifierDeclType	BitSet		3493215	0					
ANR	3493251	Identifier	bs2		3493215	1					
ANR	3493252	ExpressionStatement	not1 = IS_NCCLASS_NOT ( dest )	2046:2:43484:43511	3493215	4	True				
ANR	3493253	AssignmentExpression	not1 = IS_NCCLASS_NOT ( dest )		3493215	0		=			
ANR	3493254	Identifier	not1		3493215	0					
ANR	3493255	CallExpression	IS_NCCLASS_NOT ( dest )		3493215	1					
ANR	3493256	Callee	IS_NCCLASS_NOT		3493215	0					
ANR	3493257	Identifier	IS_NCCLASS_NOT		3493215	0					
ANR	3493258	ArgumentList	dest		3493215	1					
ANR	3493259	Argument	dest		3493215	0					
ANR	3493260	Identifier	dest		3493215	0					
ANR	3493261	ExpressionStatement	bsr1 = dest -> bs	2047:2:43515:43530	3493215	5	True				
ANR	3493262	AssignmentExpression	bsr1 = dest -> bs		3493215	0		=			
ANR	3493263	Identifier	bsr1		3493215	0					
ANR	3493264	PtrMemberAccess	dest -> bs		3493215	1					
ANR	3493265	Identifier	dest		3493215	0					
ANR	3493266	Identifier	bs		3493215	1					
ANR	3493267	ExpressionStatement	buf1 = dest -> mbuf	2048:2:43534:43551	3493215	6	True				
ANR	3493268	AssignmentExpression	buf1 = dest -> mbuf		3493215	0		=			
ANR	3493269	Identifier	buf1		3493215	0					
ANR	3493270	PtrMemberAccess	dest -> mbuf		3493215	1					
ANR	3493271	Identifier	dest		3493215	0					
ANR	3493272	Identifier	mbuf		3493215	1					
ANR	3493273	ExpressionStatement	not2 = IS_NCCLASS_NOT ( cc )	2049:2:43555:43580	3493215	7	True				
ANR	3493274	AssignmentExpression	not2 = IS_NCCLASS_NOT ( cc )		3493215	0		=			
ANR	3493275	Identifier	not2		3493215	0					
ANR	3493276	CallExpression	IS_NCCLASS_NOT ( cc )		3493215	1					
ANR	3493277	Callee	IS_NCCLASS_NOT		3493215	0					
ANR	3493278	Identifier	IS_NCCLASS_NOT		3493215	0					
ANR	3493279	ArgumentList	cc		3493215	1					
ANR	3493280	Argument	cc		3493215	0					
ANR	3493281	Identifier	cc		3493215	0					
ANR	3493282	ExpressionStatement	bsr2 = cc -> bs	2050:2:43584:43597	3493215	8	True				
ANR	3493283	AssignmentExpression	bsr2 = cc -> bs		3493215	0		=			
ANR	3493284	Identifier	bsr2		3493215	0					
ANR	3493285	PtrMemberAccess	cc -> bs		3493215	1					
ANR	3493286	Identifier	cc		3493215	0					
ANR	3493287	Identifier	bs		3493215	1					
ANR	3493288	ExpressionStatement	buf2 = cc -> mbuf	2051:2:43601:43616	3493215	9	True				
ANR	3493289	AssignmentExpression	buf2 = cc -> mbuf		3493215	0		=			
ANR	3493290	Identifier	buf2		3493215	0					
ANR	3493291	PtrMemberAccess	cc -> mbuf		3493215	1					
ANR	3493292	Identifier	cc		3493215	0					
ANR	3493293	Identifier	mbuf		3493215	1					
ANR	3493294	IfStatement	if ( not1 != 0 )		3493215	10					
ANR	3493295	Condition	not1 != 0	2053:6:43625:43633	3493215	0	True				
ANR	3493296	EqualityExpression	not1 != 0		3493215	0		!=			
ANR	3493297	Identifier	not1		3493215	0					
ANR	3493298	PrimaryExpression	0		3493215	1					
ANR	3493299	CompoundStatement		14:17:248:248	3493215	1					
ANR	3493300	ExpressionStatement	"bitset_invert_to ( bsr1 , bs1 )"	2054:4:43642:43669	3493215	0	True				
ANR	3493301	CallExpression	"bitset_invert_to ( bsr1 , bs1 )"		3493215	0					
ANR	3493302	Callee	bitset_invert_to		3493215	0					
ANR	3493303	Identifier	bitset_invert_to		3493215	0					
ANR	3493304	ArgumentList	bsr1		3493215	1					
ANR	3493305	Argument	bsr1		3493215	0					
ANR	3493306	Identifier	bsr1		3493215	0					
ANR	3493307	Argument	bs1		3493215	1					
ANR	3493308	Identifier	bs1		3493215	0					
ANR	3493309	ExpressionStatement	bsr1 = bs1	2055:4:43675:43685	3493215	1	True				
ANR	3493310	AssignmentExpression	bsr1 = bs1		3493215	0		=			
ANR	3493311	Identifier	bsr1		3493215	0					
ANR	3493312	Identifier	bs1		3493215	1					
ANR	3493313	IfStatement	if ( not2 != 0 )		3493215	11					
ANR	3493314	Condition	not2 != 0	2057:6:43697:43705	3493215	0	True				
ANR	3493315	EqualityExpression	not2 != 0		3493215	0		!=			
ANR	3493316	Identifier	not2		3493215	0					
ANR	3493317	PrimaryExpression	0		3493215	1					
ANR	3493318	CompoundStatement		18:17:320:320	3493215	1					
ANR	3493319	ExpressionStatement	"bitset_invert_to ( bsr2 , bs2 )"	2058:4:43714:43741	3493215	0	True				
ANR	3493320	CallExpression	"bitset_invert_to ( bsr2 , bs2 )"		3493215	0					
ANR	3493321	Callee	bitset_invert_to		3493215	0					
ANR	3493322	Identifier	bitset_invert_to		3493215	0					
ANR	3493323	ArgumentList	bsr2		3493215	1					
ANR	3493324	Argument	bsr2		3493215	0					
ANR	3493325	Identifier	bsr2		3493215	0					
ANR	3493326	Argument	bs2		3493215	1					
ANR	3493327	Identifier	bs2		3493215	0					
ANR	3493328	ExpressionStatement	bsr2 = bs2	2059:4:43747:43757	3493215	1	True				
ANR	3493329	AssignmentExpression	bsr2 = bs2		3493215	0		=			
ANR	3493330	Identifier	bsr2		3493215	0					
ANR	3493331	Identifier	bs2		3493215	1					
ANR	3493332	ExpressionStatement	"bitset_or ( bsr1 , bsr2 )"	2061:2:43765:43786	3493215	12	True				
ANR	3493333	CallExpression	"bitset_or ( bsr1 , bsr2 )"		3493215	0					
ANR	3493334	Callee	bitset_or		3493215	0					
ANR	3493335	Identifier	bitset_or		3493215	0					
ANR	3493336	ArgumentList	bsr1		3493215	1					
ANR	3493337	Argument	bsr1		3493215	0					
ANR	3493338	Identifier	bsr1		3493215	0					
ANR	3493339	Argument	bsr2		3493215	1					
ANR	3493340	Identifier	bsr2		3493215	0					
ANR	3493341	IfStatement	if ( bsr1 != dest -> bs )		3493215	13					
ANR	3493342	Condition	bsr1 != dest -> bs	2062:6:43794:43809	3493215	0	True				
ANR	3493343	EqualityExpression	bsr1 != dest -> bs		3493215	0		!=			
ANR	3493344	Identifier	bsr1		3493215	0					
ANR	3493345	PtrMemberAccess	dest -> bs		3493215	1					
ANR	3493346	Identifier	dest		3493215	0					
ANR	3493347	Identifier	bs		3493215	1					
ANR	3493348	CompoundStatement		23:24:424:424	3493215	1					
ANR	3493349	ExpressionStatement	"bitset_copy ( dest -> bs , bsr1 )"	2063:4:43818:43845	3493215	0	True				
ANR	3493350	CallExpression	"bitset_copy ( dest -> bs , bsr1 )"		3493215	0					
ANR	3493351	Callee	bitset_copy		3493215	0					
ANR	3493352	Identifier	bitset_copy		3493215	0					
ANR	3493353	ArgumentList	dest -> bs		3493215	1					
ANR	3493354	Argument	dest -> bs		3493215	0					
ANR	3493355	PtrMemberAccess	dest -> bs		3493215	0					
ANR	3493356	Identifier	dest		3493215	0					
ANR	3493357	Identifier	bs		3493215	1					
ANR	3493358	Argument	bsr1		3493215	1					
ANR	3493359	Identifier	bsr1		3493215	0					
ANR	3493360	ExpressionStatement	bsr1 = dest -> bs	2064:4:43851:43866	3493215	1	True				
ANR	3493361	AssignmentExpression	bsr1 = dest -> bs		3493215	0		=			
ANR	3493362	Identifier	bsr1		3493215	0					
ANR	3493363	PtrMemberAccess	dest -> bs		3493215	1					
ANR	3493364	Identifier	dest		3493215	0					
ANR	3493365	Identifier	bs		3493215	1					
ANR	3493366	IfStatement	if ( not1 != 0 )		3493215	14					
ANR	3493367	Condition	not1 != 0	2066:6:43878:43886	3493215	0	True				
ANR	3493368	EqualityExpression	not1 != 0		3493215	0		!=			
ANR	3493369	Identifier	not1		3493215	0					
ANR	3493370	PrimaryExpression	0		3493215	1					
ANR	3493371	CompoundStatement		27:17:501:501	3493215	1					
ANR	3493372	ExpressionStatement	bitset_invert ( dest -> bs )	2067:4:43895:43918	3493215	0	True				
ANR	3493373	CallExpression	bitset_invert ( dest -> bs )		3493215	0					
ANR	3493374	Callee	bitset_invert		3493215	0					
ANR	3493375	Identifier	bitset_invert		3493215	0					
ANR	3493376	ArgumentList	dest -> bs		3493215	1					
ANR	3493377	Argument	dest -> bs		3493215	0					
ANR	3493378	PtrMemberAccess	dest -> bs		3493215	0					
ANR	3493379	Identifier	dest		3493215	0					
ANR	3493380	Identifier	bs		3493215	1					
ANR	3493381	IfStatement	if ( ! ONIGENC_IS_SINGLEBYTE ( enc ) )		3493215	15					
ANR	3493382	Condition	! ONIGENC_IS_SINGLEBYTE ( enc )	2070:6:43931:43958	3493215	0	True				
ANR	3493383	UnaryOperationExpression	! ONIGENC_IS_SINGLEBYTE ( enc )		3493215	0					
ANR	3493384	UnaryOperator	!		3493215	0					
ANR	3493385	CallExpression	ONIGENC_IS_SINGLEBYTE ( enc )		3493215	1					
ANR	3493386	Callee	ONIGENC_IS_SINGLEBYTE		3493215	0					
ANR	3493387	Identifier	ONIGENC_IS_SINGLEBYTE		3493215	0					
ANR	3493388	ArgumentList	enc		3493215	1					
ANR	3493389	Argument	enc		3493215	0					
ANR	3493390	Identifier	enc		3493215	0					
ANR	3493391	CompoundStatement		31:36:573:573	3493215	1					
ANR	3493392	IfStatement	if ( not1 != 0 && not2 != 0 )		3493215	0					
ANR	3493393	Condition	not1 != 0 && not2 != 0	2071:8:43971:43992	3493215	0	True				
ANR	3493394	AndExpression	not1 != 0 && not2 != 0		3493215	0		&&			
ANR	3493395	EqualityExpression	not1 != 0		3493215	0		!=			
ANR	3493396	Identifier	not1		3493215	0					
ANR	3493397	PrimaryExpression	0		3493215	1					
ANR	3493398	EqualityExpression	not2 != 0		3493215	1		!=			
ANR	3493399	Identifier	not2		3493215	0					
ANR	3493400	PrimaryExpression	0		3493215	1					
ANR	3493401	CompoundStatement		32:32:607:607	3493215	1					
ANR	3493402	ExpressionStatement	"r = and_code_range_buf ( buf1 , 0 , buf2 , 0 , & pbuf )"	2072:6:44003:44050	3493215	0	True				
ANR	3493403	AssignmentExpression	"r = and_code_range_buf ( buf1 , 0 , buf2 , 0 , & pbuf )"		3493215	0		=			
ANR	3493404	Identifier	r		3493215	0					
ANR	3493405	CallExpression	"and_code_range_buf ( buf1 , 0 , buf2 , 0 , & pbuf )"		3493215	1					
ANR	3493406	Callee	and_code_range_buf		3493215	0					
ANR	3493407	Identifier	and_code_range_buf		3493215	0					
ANR	3493408	ArgumentList	buf1		3493215	1					
ANR	3493409	Argument	buf1		3493215	0					
ANR	3493410	Identifier	buf1		3493215	0					
ANR	3493411	Argument	0		3493215	1					
ANR	3493412	PrimaryExpression	0		3493215	0					
ANR	3493413	Argument	buf2		3493215	2					
ANR	3493414	Identifier	buf2		3493215	0					
ANR	3493415	Argument	0		3493215	3					
ANR	3493416	PrimaryExpression	0		3493215	0					
ANR	3493417	Argument	& pbuf		3493215	4					
ANR	3493418	UnaryOperationExpression	& pbuf		3493215	0					
ANR	3493419	UnaryOperator	&		3493215	0					
ANR	3493420	Identifier	pbuf		3493215	1					
ANR	3493421	ElseStatement	else		3493215	0					
ANR	3493422	CompoundStatement		35:9:679:679	3493215	0					
ANR	3493423	ExpressionStatement	"r = or_code_range_buf ( enc , buf1 , not1 , buf2 , not2 , & pbuf )"	2075:6:44075:44132	3493215	0	True				
ANR	3493424	AssignmentExpression	"r = or_code_range_buf ( enc , buf1 , not1 , buf2 , not2 , & pbuf )"		3493215	0		=			
ANR	3493425	Identifier	r		3493215	0					
ANR	3493426	CallExpression	"or_code_range_buf ( enc , buf1 , not1 , buf2 , not2 , & pbuf )"		3493215	1					
ANR	3493427	Callee	or_code_range_buf		3493215	0					
ANR	3493428	Identifier	or_code_range_buf		3493215	0					
ANR	3493429	ArgumentList	enc		3493215	1					
ANR	3493430	Argument	enc		3493215	0					
ANR	3493431	Identifier	enc		3493215	0					
ANR	3493432	Argument	buf1		3493215	1					
ANR	3493433	Identifier	buf1		3493215	0					
ANR	3493434	Argument	not1		3493215	2					
ANR	3493435	Identifier	not1		3493215	0					
ANR	3493436	Argument	buf2		3493215	3					
ANR	3493437	Identifier	buf2		3493215	0					
ANR	3493438	Argument	not2		3493215	4					
ANR	3493439	Identifier	not2		3493215	0					
ANR	3493440	Argument	& pbuf		3493215	5					
ANR	3493441	UnaryOperationExpression	& pbuf		3493215	0					
ANR	3493442	UnaryOperator	&		3493215	0					
ANR	3493443	Identifier	pbuf		3493215	1					
ANR	3493444	IfStatement	if ( r == 0 && not1 != 0 )		3493215	1					
ANR	3493445	Condition	r == 0 && not1 != 0	2076:10:44144:44162	3493215	0	True				
ANR	3493446	AndExpression	r == 0 && not1 != 0		3493215	0		&&			
ANR	3493447	EqualityExpression	r == 0		3493215	0		==			
ANR	3493448	Identifier	r		3493215	0					
ANR	3493449	PrimaryExpression	0		3493215	1					
ANR	3493450	EqualityExpression	not1 != 0		3493215	1		!=			
ANR	3493451	Identifier	not1		3493215	0					
ANR	3493452	PrimaryExpression	0		3493215	1					
ANR	3493453	CompoundStatement		38:1:780:790	3493215	1					
ANR	3493454	IdentifierDeclStatement	BBuf * tbuf ;	2077:1:44168:44178	3493215	0	True				
ANR	3493455	IdentifierDecl	* tbuf		3493215	0					
ANR	3493456	IdentifierDeclType	BBuf *		3493215	0					
ANR	3493457	Identifier	tbuf		3493215	1					
ANR	3493458	ExpressionStatement	"r = not_code_range_buf ( enc , pbuf , & tbuf )"	2078:1:44181:44221	3493215	1	True				
ANR	3493459	AssignmentExpression	"r = not_code_range_buf ( enc , pbuf , & tbuf )"		3493215	0		=			
ANR	3493460	Identifier	r		3493215	0					
ANR	3493461	CallExpression	"not_code_range_buf ( enc , pbuf , & tbuf )"		3493215	1					
ANR	3493462	Callee	not_code_range_buf		3493215	0					
ANR	3493463	Identifier	not_code_range_buf		3493215	0					
ANR	3493464	ArgumentList	enc		3493215	1					
ANR	3493465	Argument	enc		3493215	0					
ANR	3493466	Identifier	enc		3493215	0					
ANR	3493467	Argument	pbuf		3493215	1					
ANR	3493468	Identifier	pbuf		3493215	0					
ANR	3493469	Argument	& tbuf		3493215	2					
ANR	3493470	UnaryOperationExpression	& tbuf		3493215	0					
ANR	3493471	UnaryOperator	&		3493215	0					
ANR	3493472	Identifier	tbuf		3493215	1					
ANR	3493473	IfStatement	if ( r != 0 )		3493215	2					
ANR	3493474	Condition	r != 0	2079:5:44228:44233	3493215	0	True				
ANR	3493475	EqualityExpression	r != 0		3493215	0		!=			
ANR	3493476	Identifier	r		3493215	0					
ANR	3493477	PrimaryExpression	0		3493215	1					
ANR	3493478	CompoundStatement		40:13:848:848	3493215	1					
ANR	3493479	ExpressionStatement	bbuf_free ( pbuf )	2080:3:44241:44256	3493215	0	True				
ANR	3493480	CallExpression	bbuf_free ( pbuf )		3493215	0					
ANR	3493481	Callee	bbuf_free		3493215	0					
ANR	3493482	Identifier	bbuf_free		3493215	0					
ANR	3493483	ArgumentList	pbuf		3493215	1					
ANR	3493484	Argument	pbuf		3493215	0					
ANR	3493485	Identifier	pbuf		3493215	0					
ANR	3493486	ReturnStatement	return r ;	2081:3:44261:44269	3493215	1	True				
ANR	3493487	Identifier	r		3493215	0					
ANR	3493488	ExpressionStatement	bbuf_free ( pbuf )	2083:1:44275:44290	3493215	3	True				
ANR	3493489	CallExpression	bbuf_free ( pbuf )		3493215	0					
ANR	3493490	Callee	bbuf_free		3493215	0					
ANR	3493491	Identifier	bbuf_free		3493215	0					
ANR	3493492	ArgumentList	pbuf		3493215	1					
ANR	3493493	Argument	pbuf		3493215	0					
ANR	3493494	Identifier	pbuf		3493215	0					
ANR	3493495	ExpressionStatement	pbuf = tbuf	2084:1:44293:44304	3493215	4	True				
ANR	3493496	AssignmentExpression	pbuf = tbuf		3493215	0		=			
ANR	3493497	Identifier	pbuf		3493215	0					
ANR	3493498	Identifier	tbuf		3493215	1					
ANR	3493499	IfStatement	if ( r != 0 )		3493215	1					
ANR	3493500	Condition	r != 0	2087:8:44328:44333	3493215	0	True				
ANR	3493501	EqualityExpression	r != 0		3493215	0		!=			
ANR	3493502	Identifier	r		3493215	0					
ANR	3493503	PrimaryExpression	0		3493215	1					
ANR	3493504	ReturnStatement	return r ;	2087:16:44336:44344	3493215	1	True				
ANR	3493505	Identifier	r		3493215	0					
ANR	3493506	ExpressionStatement	dest -> mbuf = pbuf	2089:4:44351:44368	3493215	2	True				
ANR	3493507	AssignmentExpression	dest -> mbuf = pbuf		3493215	0		=			
ANR	3493508	PtrMemberAccess	dest -> mbuf		3493215	0					
ANR	3493509	Identifier	dest		3493215	0					
ANR	3493510	Identifier	mbuf		3493215	1					
ANR	3493511	Identifier	pbuf		3493215	1					
ANR	3493512	ExpressionStatement	bbuf_free ( buf1 )	2090:4:44374:44389	3493215	3	True				
ANR	3493513	CallExpression	bbuf_free ( buf1 )		3493215	0					
ANR	3493514	Callee	bbuf_free		3493215	0					
ANR	3493515	Identifier	bbuf_free		3493215	0					
ANR	3493516	ArgumentList	buf1		3493215	1					
ANR	3493517	Argument	buf1		3493215	0					
ANR	3493518	Identifier	buf1		3493215	0					
ANR	3493519	ReturnStatement	return r ;	2091:4:44395:44403	3493215	4	True				
ANR	3493520	Identifier	r		3493215	0					
ANR	3493521	ElseStatement	else		3493215	0					
ANR	3493522	ReturnStatement	return 0 ;	2094:4:44420:44428	3493215	0	True				
ANR	3493523	PrimaryExpression	0		3493215	0					
ANR	3493524	ReturnType	static int		3493215	1					
ANR	3493525	Identifier	or_cclass		3493215	2					
ANR	3493526	ParameterList	"CClassNode * dest , CClassNode * cc , OnigEncoding enc"		3493215	3					
ANR	3493527	Parameter	CClassNode * dest	2039:10:43335:43350	3493215	0	True				
ANR	3493528	ParameterType	CClassNode *		3493215	0					
ANR	3493529	Identifier	dest		3493215	1					
ANR	3493530	Parameter	CClassNode * cc	2039:28:43353:43366	3493215	1	True				
ANR	3493531	ParameterType	CClassNode *		3493215	0					
ANR	3493532	Identifier	cc		3493215	1					
ANR	3493533	Parameter	OnigEncoding enc	2039:44:43369:43384	3493215	2	True				
ANR	3493534	ParameterType	OnigEncoding		3493215	0					
ANR	3493535	Identifier	enc		3493215	1					
ANR	3493536	CFGEntryNode	ENTRY		3493215		True				
ANR	3493537	CFGExitNode	EXIT		3493215		True				
ANR	3493538	Symbol	bs2		3493215						
ANR	3493539	Symbol	bs1		3493215						
ANR	3493540	Symbol	not_code_range_buf		3493215						
ANR	3493541	Symbol	* dest		3493215						
ANR	3493542	Symbol	* cc		3493215						
ANR	3493543	Symbol	IS_NCCLASS_NOT		3493215						
ANR	3493544	Symbol	dest -> mbuf		3493215						
ANR	3493545	Symbol	tbuf		3493215						
ANR	3493546	Symbol	cc -> mbuf		3493215						
ANR	3493547	Symbol	dest		3493215						
ANR	3493548	Symbol	not2		3493215						
ANR	3493549	Symbol	not1		3493215						
ANR	3493550	Symbol	or_code_range_buf		3493215						
ANR	3493551	Symbol	enc		3493215						
ANR	3493552	Symbol	ONIGENC_IS_SINGLEBYTE		3493215						
ANR	3493553	Symbol	and_code_range_buf		3493215						
ANR	3493554	Symbol	cc		3493215						
ANR	3493555	Symbol	& tbuf		3493215						
ANR	3493556	Symbol	cc -> bs		3493215						
ANR	3493557	Symbol	buf1		3493215						
ANR	3493558	Symbol	buf2		3493215						
ANR	3493559	Symbol	r		3493215						
ANR	3493560	Symbol	& pbuf		3493215						
ANR	3493561	Symbol	pbuf		3493215						
ANR	3493562	Symbol	dest -> bs		3493215						
ANR	3493563	Symbol	bsr1		3493215						
ANR	3493564	Symbol	bsr2		3493215						
ANR	3493565	Function	conv_backslash_value	2097:0:44433:44919							
ANR	3493566	FunctionDef	"conv_backslash_value (int c , ScanEnv * env)"		3493565	0					
ANR	3493567	CompoundStatement		2099:0:44486:44919	3493565	0					
ANR	3493568	IfStatement	"if ( IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_CONTROL_CHARS ) )"		3493565	0					
ANR	3493569	Condition	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_CONTROL_CHARS )"	2100:6:44494:44549	3493565	0	True				
ANR	3493570	CallExpression	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_CONTROL_CHARS )"		3493565	0					
ANR	3493571	Callee	IS_SYNTAX_OP		3493565	0					
ANR	3493572	Identifier	IS_SYNTAX_OP		3493565	0					
ANR	3493573	ArgumentList	env -> syntax		3493565	1					
ANR	3493574	Argument	env -> syntax		3493565	0					
ANR	3493575	PtrMemberAccess	env -> syntax		3493565	0					
ANR	3493576	Identifier	env		3493565	0					
ANR	3493577	Identifier	syntax		3493565	1					
ANR	3493578	Argument	ONIG_SYN_OP_ESC_CONTROL_CHARS		3493565	1					
ANR	3493579	Identifier	ONIG_SYN_OP_ESC_CONTROL_CHARS		3493565	0					
ANR	3493580	CompoundStatement		2:64:65:65	3493565	1					
ANR	3493581	SwitchStatement	switch ( c )		3493565	0					
ANR	3493582	Condition	c	2101:12:44566:44566	3493565	0	True				
ANR	3493583	Identifier	c		3493565	0					
ANR	3493584	CompoundStatement		3:15:82:82	3493565	1					
ANR	3493585	Label	case 'n' :	2102:4:44575:44583	3493565	0	True				
ANR	3493586	ReturnStatement	return '\\n' ;	2102:14:44585:44596	3493565	1	True				
ANR	3493587	PrimaryExpression	'\\n'		3493565	0					
ANR	3493588	Label	case 't' :	2103:4:44602:44610	3493565	2	True				
ANR	3493589	ReturnStatement	return '\\t' ;	2103:14:44612:44623	3493565	3	True				
ANR	3493590	PrimaryExpression	'\\t'		3493565	0					
ANR	3493591	Label	case 'r' :	2104:4:44629:44637	3493565	4	True				
ANR	3493592	ReturnStatement	return '\\r' ;	2104:14:44639:44650	3493565	5	True				
ANR	3493593	PrimaryExpression	'\\r'		3493565	0					
ANR	3493594	Label	case 'f' :	2105:4:44656:44664	3493565	6	True				
ANR	3493595	ReturnStatement	return '\\f' ;	2105:14:44666:44677	3493565	7	True				
ANR	3493596	PrimaryExpression	'\\f'		3493565	0					
ANR	3493597	Label	case 'a' :	2106:4:44683:44691	3493565	8	True				
ANR	3493598	ReturnStatement	return '\\007' ;	2106:14:44693:44706	3493565	9	True				
ANR	3493599	PrimaryExpression	'\\007'		3493565	0					
ANR	3493600	Label	case 'b' :	2107:4:44712:44720	3493565	10	True				
ANR	3493601	ReturnStatement	return '\\010' ;	2107:14:44722:44735	3493565	11	True				
ANR	3493602	PrimaryExpression	'\\010'		3493565	0					
ANR	3493603	Label	case 'e' :	2108:4:44741:44749	3493565	12	True				
ANR	3493604	ReturnStatement	return '\\033' ;	2108:14:44751:44764	3493565	13	True				
ANR	3493605	PrimaryExpression	'\\033'		3493565	0					
ANR	3493606	Label	case 'v' :	2109:4:44770:44778	3493565	14	True				
ANR	3493607	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_V_VTAB ) )"		3493565	15					
ANR	3493608	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_V_VTAB )"	2110:10:44790:44840	3493565	0	True				
ANR	3493609	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_V_VTAB )"		3493565	0					
ANR	3493610	Callee	IS_SYNTAX_OP2		3493565	0					
ANR	3493611	Identifier	IS_SYNTAX_OP2		3493565	0					
ANR	3493612	ArgumentList	env -> syntax		3493565	1					
ANR	3493613	Argument	env -> syntax		3493565	0					
ANR	3493614	PtrMemberAccess	env -> syntax		3493565	0					
ANR	3493615	Identifier	env		3493565	0					
ANR	3493616	Identifier	syntax		3493565	1					
ANR	3493617	Argument	ONIG_SYN_OP2_ESC_V_VTAB		3493565	1					
ANR	3493618	Identifier	ONIG_SYN_OP2_ESC_V_VTAB		3493565	0					
ANR	3493619	ReturnStatement	return '\\v' ;	2111:1:44844:44855	3493565	1	True				
ANR	3493620	PrimaryExpression	'\\v'		3493565	0					
ANR	3493621	BreakStatement	break ;	2112:6:44863:44868	3493565	16	True				
ANR	3493622	Label	default :	2114:4:44875:44882	3493565	17	True				
ANR	3493623	Identifier	default		3493565	0					
ANR	3493624	BreakStatement	break ;	2115:6:44890:44895	3493565	18	True				
ANR	3493625	ReturnStatement	return c ;	2118:2:44909:44917	3493565	1	True				
ANR	3493626	Identifier	c		3493565	0					
ANR	3493627	ReturnType	static int		3493565	1					
ANR	3493628	Identifier	conv_backslash_value		3493565	2					
ANR	3493629	ParameterList	"int c , ScanEnv * env"		3493565	3					
ANR	3493630	Parameter	int c	2098:21:44465:44469	3493565	0	True				
ANR	3493631	ParameterType	int		3493565	0					
ANR	3493632	Identifier	c		3493565	1					
ANR	3493633	Parameter	ScanEnv * env	2098:28:44472:44483	3493565	1	True				
ANR	3493634	ParameterType	ScanEnv *		3493565	0					
ANR	3493635	Identifier	env		3493565	1					
ANR	3493636	CFGEntryNode	ENTRY		3493565		True				
ANR	3493637	CFGExitNode	EXIT		3493565		True				
ANR	3493638	Symbol	c		3493565						
ANR	3493639	Symbol	ONIG_SYN_OP_ESC_CONTROL_CHARS		3493565						
ANR	3493640	Symbol	* env		3493565						
ANR	3493641	Symbol	IS_SYNTAX_OP		3493565						
ANR	3493642	Symbol	ONIG_SYN_OP2_ESC_V_VTAB		3493565						
ANR	3493643	Symbol	env		3493565						
ANR	3493644	Symbol	env -> syntax		3493565						
ANR	3493645	Symbol	IS_SYNTAX_OP2		3493565						
ANR	3493646	Function	is_invalid_quantifier_target	2121:0:44922:45524							
ANR	3493647	FunctionDef	is_invalid_quantifier_target (Node * node)		3493646	0					
ANR	3493648	CompoundStatement		2123:0:44974:45524	3493646	0					
ANR	3493649	SwitchStatement	switch ( NTYPE ( node ) )		3493646	0					
ANR	3493650	Condition	NTYPE ( node )	2124:10:44986:44996	3493646	0	True				
ANR	3493651	CallExpression	NTYPE ( node )		3493646	0					
ANR	3493652	Callee	NTYPE		3493646	0					
ANR	3493653	Identifier	NTYPE		3493646	0					
ANR	3493654	ArgumentList	node		3493646	1					
ANR	3493655	Argument	node		3493646	0					
ANR	3493656	Identifier	node		3493646	0					
ANR	3493657	CompoundStatement		2:23:24:24	3493646	1					
ANR	3493658	Label	case NT_ANCHOR :	2125:2:45003:45017	3493646	0	True				
ANR	3493659	Identifier	NT_ANCHOR		3493646	0					
ANR	3493660	ReturnStatement	return 1 ;	2126:4:45023:45031	3493646	1	True				
ANR	3493661	PrimaryExpression	1		3493646	0					
ANR	3493662	BreakStatement	break ;	2127:4:45037:45042	3493646	2	True				
ANR	3493663	Label	case NT_ENCLOSE :	2129:2:45047:45062	3493646	3	True				
ANR	3493664	Identifier	NT_ENCLOSE		3493646	0					
ANR	3493665	BreakStatement	break ;	2132:4:45173:45178	3493646	4	True				
ANR	3493666	Label	case NT_LIST :	2134:2:45183:45195	3493646	5	True				
ANR	3493667	Identifier	NT_LIST		3493646	0					
ANR	3493668	DoStatement	do		3493646	6					
ANR	3493669	CompoundStatement		13:7:229:229	3493646	0					
ANR	3493670	IfStatement	if ( ! is_invalid_quantifier_target ( NCAR ( node ) ) )		3493646	0					
ANR	3493671	Condition	! is_invalid_quantifier_target ( NCAR ( node ) )	2136:10:45216:45257	3493646	0	True				
ANR	3493672	UnaryOperationExpression	! is_invalid_quantifier_target ( NCAR ( node ) )		3493646	0					
ANR	3493673	UnaryOperator	!		3493646	0					
ANR	3493674	CallExpression	is_invalid_quantifier_target ( NCAR ( node ) )		3493646	1					
ANR	3493675	Callee	is_invalid_quantifier_target		3493646	0					
ANR	3493676	Identifier	is_invalid_quantifier_target		3493646	0					
ANR	3493677	ArgumentList	NCAR ( node )		3493646	1					
ANR	3493678	Argument	NCAR ( node )		3493646	0					
ANR	3493679	CallExpression	NCAR ( node )		3493646	0					
ANR	3493680	Callee	NCAR		3493646	0					
ANR	3493681	Identifier	NCAR		3493646	0					
ANR	3493682	ArgumentList	node		3493646	1					
ANR	3493683	Argument	node		3493646	0					
ANR	3493684	Identifier	node		3493646	0					
ANR	3493685	ReturnStatement	return 0 ;	2136:54:45260:45268	3493646	1	True				
ANR	3493686	PrimaryExpression	0		3493646	0					
ANR	3493687	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	2137:13:45283:45312	3493646	1	True				
ANR	3493688	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3493646	0					
ANR	3493689	Callee	IS_NOT_NULL		3493646	0					
ANR	3493690	Identifier	IS_NOT_NULL		3493646	0					
ANR	3493691	ArgumentList	node = NCDR ( node )		3493646	1					
ANR	3493692	Argument	node = NCDR ( node )		3493646	0					
ANR	3493693	AssignmentExpression	node = NCDR ( node )		3493646	0		=			
ANR	3493694	Identifier	node		3493646	0					
ANR	3493695	CallExpression	NCDR ( node )		3493646	1					
ANR	3493696	Callee	NCDR		3493646	0					
ANR	3493697	Identifier	NCDR		3493646	0					
ANR	3493698	ArgumentList	node		3493646	1					
ANR	3493699	Argument	node		3493646	0					
ANR	3493700	Identifier	node		3493646	0					
ANR	3493701	ReturnStatement	return 0 ;	2138:4:45320:45328	3493646	7	True				
ANR	3493702	PrimaryExpression	0		3493646	0					
ANR	3493703	BreakStatement	break ;	2139:4:45334:45339	3493646	8	True				
ANR	3493704	Label	case NT_ALT :	2141:2:45344:45355	3493646	9	True				
ANR	3493705	Identifier	NT_ALT		3493646	0					
ANR	3493706	DoStatement	do		3493646	10					
ANR	3493707	CompoundStatement		20:7:389:389	3493646	0					
ANR	3493708	IfStatement	if ( is_invalid_quantifier_target ( NCAR ( node ) ) )		3493646	0					
ANR	3493709	Condition	is_invalid_quantifier_target ( NCAR ( node ) )	2143:10:45376:45415	3493646	0	True				
ANR	3493710	CallExpression	is_invalid_quantifier_target ( NCAR ( node ) )		3493646	0					
ANR	3493711	Callee	is_invalid_quantifier_target		3493646	0					
ANR	3493712	Identifier	is_invalid_quantifier_target		3493646	0					
ANR	3493713	ArgumentList	NCAR ( node )		3493646	1					
ANR	3493714	Argument	NCAR ( node )		3493646	0					
ANR	3493715	CallExpression	NCAR ( node )		3493646	0					
ANR	3493716	Callee	NCAR		3493646	0					
ANR	3493717	Identifier	NCAR		3493646	0					
ANR	3493718	ArgumentList	node		3493646	1					
ANR	3493719	Argument	node		3493646	0					
ANR	3493720	Identifier	node		3493646	0					
ANR	3493721	ReturnStatement	return 1 ;	2143:52:45418:45426	3493646	1	True				
ANR	3493722	PrimaryExpression	1		3493646	0					
ANR	3493723	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	2144:13:45441:45470	3493646	1	True				
ANR	3493724	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		3493646	0					
ANR	3493725	Callee	IS_NOT_NULL		3493646	0					
ANR	3493726	Identifier	IS_NOT_NULL		3493646	0					
ANR	3493727	ArgumentList	node = NCDR ( node )		3493646	1					
ANR	3493728	Argument	node = NCDR ( node )		3493646	0					
ANR	3493729	AssignmentExpression	node = NCDR ( node )		3493646	0		=			
ANR	3493730	Identifier	node		3493646	0					
ANR	3493731	CallExpression	NCDR ( node )		3493646	1					
ANR	3493732	Callee	NCDR		3493646	0					
ANR	3493733	Identifier	NCDR		3493646	0					
ANR	3493734	ArgumentList	node		3493646	1					
ANR	3493735	Argument	node		3493646	0					
ANR	3493736	Identifier	node		3493646	0					
ANR	3493737	BreakStatement	break ;	2145:4:45478:45483	3493646	11	True				
ANR	3493738	Label	default :	2147:2:45488:45495	3493646	12	True				
ANR	3493739	Identifier	default		3493646	0					
ANR	3493740	BreakStatement	break ;	2148:4:45501:45506	3493646	13	True				
ANR	3493741	ReturnStatement	return 0 ;	2150:2:45514:45522	3493646	1	True				
ANR	3493742	PrimaryExpression	0		3493646	0					
ANR	3493743	ReturnType	static int		3493646	1					
ANR	3493744	Identifier	is_invalid_quantifier_target		3493646	2					
ANR	3493745	ParameterList	Node * node		3493646	3					
ANR	3493746	Parameter	Node * node	2122:29:44962:44971	3493646	0	True				
ANR	3493747	ParameterType	Node *		3493646	0					
ANR	3493748	Identifier	node		3493646	1					
ANR	3493749	CFGEntryNode	ENTRY		3493646		True				
ANR	3493750	CFGExitNode	EXIT		3493646		True				
ANR	3493751	Symbol	is_invalid_quantifier_target		3493646						
ANR	3493752	Symbol	node		3493646						
ANR	3493753	Symbol	IS_NOT_NULL		3493646						
ANR	3493754	Symbol	NCAR		3493646						
ANR	3493755	Symbol	NCDR		3493646						
ANR	3493756	Symbol	NTYPE		3493646						
ANR	3493757	Function	popular_quantifier_num	2154:0:45565:46077							
ANR	3493758	FunctionDef	popular_quantifier_num (QtfrNode * q)		3493757	0					
ANR	3493759	CompoundStatement		2156:0:45612:46077	3493757	0					
ANR	3493760	IfStatement	if ( q -> greedy )		3493757	0					
ANR	3493761	Condition	q -> greedy	2157:6:45620:45628	3493757	0	True				
ANR	3493762	PtrMemberAccess	q -> greedy		3493757	0					
ANR	3493763	Identifier	q		3493757	0					
ANR	3493764	Identifier	greedy		3493757	1					
ANR	3493765	CompoundStatement		2:17:18:18	3493757	1					
ANR	3493766	IfStatement	if ( q -> lower == 0 )		3493757	0					
ANR	3493767	Condition	q -> lower == 0	2158:8:45641:45653	3493757	0	True				
ANR	3493768	EqualityExpression	q -> lower == 0		3493757	0		==			
ANR	3493769	PtrMemberAccess	q -> lower		3493757	0					
ANR	3493770	Identifier	q		3493757	0					
ANR	3493771	Identifier	lower		3493757	1					
ANR	3493772	PrimaryExpression	0		3493757	1					
ANR	3493773	CompoundStatement		3:23:43:43	3493757	1					
ANR	3493774	IfStatement	if ( q -> upper == 1 )		3493757	0					
ANR	3493775	Condition	q -> upper == 1	2159:10:45668:45680	3493757	0	True				
ANR	3493776	EqualityExpression	q -> upper == 1		3493757	0		==			
ANR	3493777	PtrMemberAccess	q -> upper		3493757	0					
ANR	3493778	Identifier	q		3493757	0					
ANR	3493779	Identifier	upper		3493757	1					
ANR	3493780	PrimaryExpression	1		3493757	1					
ANR	3493781	ReturnStatement	return 0 ;	2159:25:45683:45691	3493757	1	True				
ANR	3493782	PrimaryExpression	0		3493757	0					
ANR	3493783	ElseStatement	else		3493757	0					
ANR	3493784	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) )		3493757	0					
ANR	3493785	Condition	IS_REPEAT_INFINITE ( q -> upper )	2160:15:45708:45735	3493757	0	True				
ANR	3493786	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		3493757	0					
ANR	3493787	Callee	IS_REPEAT_INFINITE		3493757	0					
ANR	3493788	Identifier	IS_REPEAT_INFINITE		3493757	0					
ANR	3493789	ArgumentList	q -> upper		3493757	1					
ANR	3493790	Argument	q -> upper		3493757	0					
ANR	3493791	PtrMemberAccess	q -> upper		3493757	0					
ANR	3493792	Identifier	q		3493757	0					
ANR	3493793	Identifier	upper		3493757	1					
ANR	3493794	ReturnStatement	return 1 ;	2160:45:45738:45746	3493757	1	True				
ANR	3493795	PrimaryExpression	1		3493757	0					
ANR	3493796	ElseStatement	else		3493757	0					
ANR	3493797	IfStatement	if ( q -> lower == 1 )		3493757	0					
ANR	3493798	Condition	q -> lower == 1	2162:13:45767:45779	3493757	0	True				
ANR	3493799	EqualityExpression	q -> lower == 1		3493757	0		==			
ANR	3493800	PtrMemberAccess	q -> lower		3493757	0					
ANR	3493801	Identifier	q		3493757	0					
ANR	3493802	Identifier	lower		3493757	1					
ANR	3493803	PrimaryExpression	1		3493757	1					
ANR	3493804	CompoundStatement		7:28:169:169	3493757	1					
ANR	3493805	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) )		3493757	0					
ANR	3493806	Condition	IS_REPEAT_INFINITE ( q -> upper )	2163:10:45794:45821	3493757	0	True				
ANR	3493807	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		3493757	0					
ANR	3493808	Callee	IS_REPEAT_INFINITE		3493757	0					
ANR	3493809	Identifier	IS_REPEAT_INFINITE		3493757	0					
ANR	3493810	ArgumentList	q -> upper		3493757	1					
ANR	3493811	Argument	q -> upper		3493757	0					
ANR	3493812	PtrMemberAccess	q -> upper		3493757	0					
ANR	3493813	Identifier	q		3493757	0					
ANR	3493814	Identifier	upper		3493757	1					
ANR	3493815	ReturnStatement	return 2 ;	2163:40:45824:45832	3493757	1	True				
ANR	3493816	PrimaryExpression	2		3493757	0					
ANR	3493817	ElseStatement	else		3493757	0					
ANR	3493818	CompoundStatement		11:7:238:238	3493757	0					
ANR	3493819	IfStatement	if ( q -> lower == 0 )		3493757	0					
ANR	3493820	Condition	q -> lower == 0	2167:8:45861:45873	3493757	0	True				
ANR	3493821	EqualityExpression	q -> lower == 0		3493757	0		==			
ANR	3493822	PtrMemberAccess	q -> lower		3493757	0					
ANR	3493823	Identifier	q		3493757	0					
ANR	3493824	Identifier	lower		3493757	1					
ANR	3493825	PrimaryExpression	0		3493757	1					
ANR	3493826	CompoundStatement		12:23:263:263	3493757	1					
ANR	3493827	IfStatement	if ( q -> upper == 1 )		3493757	0					
ANR	3493828	Condition	q -> upper == 1	2168:10:45888:45900	3493757	0	True				
ANR	3493829	EqualityExpression	q -> upper == 1		3493757	0		==			
ANR	3493830	PtrMemberAccess	q -> upper		3493757	0					
ANR	3493831	Identifier	q		3493757	0					
ANR	3493832	Identifier	upper		3493757	1					
ANR	3493833	PrimaryExpression	1		3493757	1					
ANR	3493834	ReturnStatement	return 3 ;	2168:25:45903:45911	3493757	1	True				
ANR	3493835	PrimaryExpression	3		3493757	0					
ANR	3493836	ElseStatement	else		3493757	0					
ANR	3493837	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) )		3493757	0					
ANR	3493838	Condition	IS_REPEAT_INFINITE ( q -> upper )	2169:15:45928:45955	3493757	0	True				
ANR	3493839	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		3493757	0					
ANR	3493840	Callee	IS_REPEAT_INFINITE		3493757	0					
ANR	3493841	Identifier	IS_REPEAT_INFINITE		3493757	0					
ANR	3493842	ArgumentList	q -> upper		3493757	1					
ANR	3493843	Argument	q -> upper		3493757	0					
ANR	3493844	PtrMemberAccess	q -> upper		3493757	0					
ANR	3493845	Identifier	q		3493757	0					
ANR	3493846	Identifier	upper		3493757	1					
ANR	3493847	ReturnStatement	return 4 ;	2169:45:45958:45966	3493757	1	True				
ANR	3493848	PrimaryExpression	4		3493757	0					
ANR	3493849	ElseStatement	else		3493757	0					
ANR	3493850	IfStatement	if ( q -> lower == 1 )		3493757	0					
ANR	3493851	Condition	q -> lower == 1	2171:13:45987:45999	3493757	0	True				
ANR	3493852	EqualityExpression	q -> lower == 1		3493757	0		==			
ANR	3493853	PtrMemberAccess	q -> lower		3493757	0					
ANR	3493854	Identifier	q		3493757	0					
ANR	3493855	Identifier	lower		3493757	1					
ANR	3493856	PrimaryExpression	1		3493757	1					
ANR	3493857	CompoundStatement		16:28:389:389	3493757	1					
ANR	3493858	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) )		3493757	0					
ANR	3493859	Condition	IS_REPEAT_INFINITE ( q -> upper )	2172:10:46014:46041	3493757	0	True				
ANR	3493860	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		3493757	0					
ANR	3493861	Callee	IS_REPEAT_INFINITE		3493757	0					
ANR	3493862	Identifier	IS_REPEAT_INFINITE		3493757	0					
ANR	3493863	ArgumentList	q -> upper		3493757	1					
ANR	3493864	Argument	q -> upper		3493757	0					
ANR	3493865	PtrMemberAccess	q -> upper		3493757	0					
ANR	3493866	Identifier	q		3493757	0					
ANR	3493867	Identifier	upper		3493757	1					
ANR	3493868	ReturnStatement	return 5 ;	2172:40:46044:46052	3493757	1	True				
ANR	3493869	PrimaryExpression	5		3493757	0					
ANR	3493870	ReturnStatement	return - 1 ;	2175:2:46066:46075	3493757	1	True				
ANR	3493871	UnaryOperationExpression	- 1		3493757	0					
ANR	3493872	UnaryOperator	-		3493757	0					
ANR	3493873	PrimaryExpression	1		3493757	1					
ANR	3493874	ReturnType	static int		3493757	1					
ANR	3493875	Identifier	popular_quantifier_num		3493757	2					
ANR	3493876	ParameterList	QtfrNode * q		3493757	3					
ANR	3493877	Parameter	QtfrNode * q	2155:23:45599:45609	3493757	0	True				
ANR	3493878	ParameterType	QtfrNode *		3493757	0					
ANR	3493879	Identifier	q		3493757	1					
ANR	3493880	CFGEntryNode	ENTRY		3493757		True				
ANR	3493881	CFGExitNode	EXIT		3493757		True				
ANR	3493882	Symbol	q -> lower		3493757						
ANR	3493883	Symbol	q		3493757						
ANR	3493884	Symbol	q -> greedy		3493757						
ANR	3493885	Symbol	q -> upper		3493757						
ANR	3493886	Symbol	* q		3493757						
ANR	3493887	Symbol	IS_REPEAT_INFINITE		3493757						
ANR	3493888	ClassDef	ReduceType	2179:0:46081:46316							
ANR	3493889	Function	onig_reduce_nested_quantifier	2198:0:46781:47931							
ANR	3493890	FunctionDef	"onig_reduce_nested_quantifier (Node * pnode , Node * cnode)"		3493889	0					
ANR	3493891	CompoundStatement		2200:0:46849:47931	3493889	0					
ANR	3493892	IdentifierDeclStatement	"int pnum , cnum ;"	2201:2:46853:46867	3493889	0	True				
ANR	3493893	IdentifierDecl	pnum		3493889	0					
ANR	3493894	IdentifierDeclType	int		3493889	0					
ANR	3493895	Identifier	pnum		3493889	1					
ANR	3493896	IdentifierDecl	cnum		3493889	1					
ANR	3493897	IdentifierDeclType	int		3493889	0					
ANR	3493898	Identifier	cnum		3493889	1					
ANR	3493899	IdentifierDeclStatement	"QtfrNode * p , * c ;"	2202:2:46871:46886	3493889	1	True				
ANR	3493900	IdentifierDecl	* p		3493889	0					
ANR	3493901	IdentifierDeclType	QtfrNode *		3493889	0					
ANR	3493902	Identifier	p		3493889	1					
ANR	3493903	IdentifierDecl	* c		3493889	1					
ANR	3493904	IdentifierDeclType	QtfrNode *		3493889	0					
ANR	3493905	Identifier	c		3493889	1					
ANR	3493906	ExpressionStatement	p = NQTFR ( pnode )	2204:2:46891:46907	3493889	2	True				
ANR	3493907	AssignmentExpression	p = NQTFR ( pnode )		3493889	0		=			
ANR	3493908	Identifier	p		3493889	0					
ANR	3493909	CallExpression	NQTFR ( pnode )		3493889	1					
ANR	3493910	Callee	NQTFR		3493889	0					
ANR	3493911	Identifier	NQTFR		3493889	0					
ANR	3493912	ArgumentList	pnode		3493889	1					
ANR	3493913	Argument	pnode		3493889	0					
ANR	3493914	Identifier	pnode		3493889	0					
ANR	3493915	ExpressionStatement	c = NQTFR ( cnode )	2205:2:46911:46927	3493889	3	True				
ANR	3493916	AssignmentExpression	c = NQTFR ( cnode )		3493889	0		=			
ANR	3493917	Identifier	c		3493889	0					
ANR	3493918	CallExpression	NQTFR ( cnode )		3493889	1					
ANR	3493919	Callee	NQTFR		3493889	0					
ANR	3493920	Identifier	NQTFR		3493889	0					
ANR	3493921	ArgumentList	cnode		3493889	1					
ANR	3493922	Argument	cnode		3493889	0					
ANR	3493923	Identifier	cnode		3493889	0					
ANR	3493924	ExpressionStatement	pnum = popular_quantifier_num ( p )	2206:2:46931:46963	3493889	4	True				
ANR	3493925	AssignmentExpression	pnum = popular_quantifier_num ( p )		3493889	0		=			
ANR	3493926	Identifier	pnum		3493889	0					
ANR	3493927	CallExpression	popular_quantifier_num ( p )		3493889	1					
ANR	3493928	Callee	popular_quantifier_num		3493889	0					
ANR	3493929	Identifier	popular_quantifier_num		3493889	0					
ANR	3493930	ArgumentList	p		3493889	1					
ANR	3493931	Argument	p		3493889	0					
ANR	3493932	Identifier	p		3493889	0					
ANR	3493933	ExpressionStatement	cnum = popular_quantifier_num ( c )	2207:2:46967:46999	3493889	5	True				
ANR	3493934	AssignmentExpression	cnum = popular_quantifier_num ( c )		3493889	0		=			
ANR	3493935	Identifier	cnum		3493889	0					
ANR	3493936	CallExpression	popular_quantifier_num ( c )		3493889	1					
ANR	3493937	Callee	popular_quantifier_num		3493889	0					
ANR	3493938	Identifier	popular_quantifier_num		3493889	0					
ANR	3493939	ArgumentList	c		3493889	1					
ANR	3493940	Argument	c		3493889	0					
ANR	3493941	Identifier	c		3493889	0					
ANR	3493942	IfStatement	if ( pnum < 0 || cnum < 0 )		3493889	6					
ANR	3493943	Condition	pnum < 0 || cnum < 0	2208:6:47007:47026	3493889	0	True				
ANR	3493944	OrExpression	pnum < 0 || cnum < 0		3493889	0		||			
ANR	3493945	RelationalExpression	pnum < 0		3493889	0		<			
ANR	3493946	Identifier	pnum		3493889	0					
ANR	3493947	PrimaryExpression	0		3493889	1					
ANR	3493948	RelationalExpression	cnum < 0		3493889	1		<			
ANR	3493949	Identifier	cnum		3493889	0					
ANR	3493950	PrimaryExpression	0		3493889	1					
ANR	3493951	ReturnStatement	return ;	2208:28:47029:47036	3493889	1	True				
ANR	3493952	SwitchStatement	switch ( ReduceTypeTable [ cnum ] [ pnum ] )		3493889	7					
ANR	3493953	Condition	ReduceTypeTable [ cnum ] [ pnum ]	2210:9:47048:47074	3493889	0	True				
ANR	3493954	ArrayIndexing	ReduceTypeTable [ cnum ] [ pnum ]		3493889	0					
ANR	3493955	ArrayIndexing	ReduceTypeTable [ cnum ]		3493889	0					
ANR	3493956	Identifier	ReduceTypeTable		3493889	0					
ANR	3493957	Identifier	cnum		3493889	1					
ANR	3493958	Identifier	pnum		3493889	1					
ANR	3493959	CompoundStatement		11:38:227:227	3493889	1					
ANR	3493960	Label	case RQ_DEL :	2211:2:47081:47092	3493889	0	True				
ANR	3493961	Identifier	RQ_DEL		3493889	0					
ANR	3493962	ExpressionStatement	* pnode = * cnode	2212:4:47098:47113	3493889	1	True				
ANR	3493963	AssignmentExpression	* pnode = * cnode		3493889	0		=			
ANR	3493964	UnaryOperationExpression	* pnode		3493889	0					
ANR	3493965	UnaryOperator	*		3493889	0					
ANR	3493966	Identifier	pnode		3493889	1					
ANR	3493967	UnaryOperationExpression	* cnode		3493889	1					
ANR	3493968	UnaryOperator	*		3493889	0					
ANR	3493969	Identifier	cnode		3493889	1					
ANR	3493970	BreakStatement	break ;	2213:4:47119:47124	3493889	2	True				
ANR	3493971	Label	case RQ_A :	2214:2:47128:47137	3493889	3	True				
ANR	3493972	Identifier	RQ_A		3493889	0					
ANR	3493973	ExpressionStatement	p -> target = c -> target	2215:4:47143:47164	3493889	4	True				
ANR	3493974	AssignmentExpression	p -> target = c -> target		3493889	0		=			
ANR	3493975	PtrMemberAccess	p -> target		3493889	0					
ANR	3493976	Identifier	p		3493889	0					
ANR	3493977	Identifier	target		3493889	1					
ANR	3493978	PtrMemberAccess	c -> target		3493889	1					
ANR	3493979	Identifier	c		3493889	0					
ANR	3493980	Identifier	target		3493889	1					
ANR	3493981	ExpressionStatement	p -> lower = 0	2216:4:47170:47183	3493889	5	True				
ANR	3493982	AssignmentExpression	p -> lower = 0		3493889	0		=			
ANR	3493983	PtrMemberAccess	p -> lower		3493889	0					
ANR	3493984	Identifier	p		3493889	0					
ANR	3493985	Identifier	lower		3493889	1					
ANR	3493986	PrimaryExpression	0		3493889	1					
ANR	3493987	ExpressionStatement	p -> upper = REPEAT_INFINITE	2216:20:47186:47212	3493889	6	True				
ANR	3493988	AssignmentExpression	p -> upper = REPEAT_INFINITE		3493889	0		=			
ANR	3493989	PtrMemberAccess	p -> upper		3493889	0					
ANR	3493990	Identifier	p		3493889	0					
ANR	3493991	Identifier	upper		3493889	1					
ANR	3493992	Identifier	REPEAT_INFINITE		3493889	1					
ANR	3493993	ExpressionStatement	p -> greedy = 1	2216:49:47215:47228	3493889	7	True				
ANR	3493994	AssignmentExpression	p -> greedy = 1		3493889	0		=			
ANR	3493995	PtrMemberAccess	p -> greedy		3493889	0					
ANR	3493996	Identifier	p		3493889	0					
ANR	3493997	Identifier	greedy		3493889	1					
ANR	3493998	PrimaryExpression	1		3493889	1					
ANR	3493999	BreakStatement	break ;	2217:4:47234:47239	3493889	8	True				
ANR	3494000	Label	case RQ_AQ :	2218:2:47243:47253	3493889	9	True				
ANR	3494001	Identifier	RQ_AQ		3493889	0					
ANR	3494002	ExpressionStatement	p -> target = c -> target	2219:4:47259:47280	3493889	10	True				
ANR	3494003	AssignmentExpression	p -> target = c -> target		3493889	0		=			
ANR	3494004	PtrMemberAccess	p -> target		3493889	0					
ANR	3494005	Identifier	p		3493889	0					
ANR	3494006	Identifier	target		3493889	1					
ANR	3494007	PtrMemberAccess	c -> target		3493889	1					
ANR	3494008	Identifier	c		3493889	0					
ANR	3494009	Identifier	target		3493889	1					
ANR	3494010	ExpressionStatement	p -> lower = 0	2220:4:47286:47299	3493889	11	True				
ANR	3494011	AssignmentExpression	p -> lower = 0		3493889	0		=			
ANR	3494012	PtrMemberAccess	p -> lower		3493889	0					
ANR	3494013	Identifier	p		3493889	0					
ANR	3494014	Identifier	lower		3493889	1					
ANR	3494015	PrimaryExpression	0		3493889	1					
ANR	3494016	ExpressionStatement	p -> upper = REPEAT_INFINITE	2220:20:47302:47328	3493889	12	True				
ANR	3494017	AssignmentExpression	p -> upper = REPEAT_INFINITE		3493889	0		=			
ANR	3494018	PtrMemberAccess	p -> upper		3493889	0					
ANR	3494019	Identifier	p		3493889	0					
ANR	3494020	Identifier	upper		3493889	1					
ANR	3494021	Identifier	REPEAT_INFINITE		3493889	1					
ANR	3494022	ExpressionStatement	p -> greedy = 0	2220:49:47331:47344	3493889	13	True				
ANR	3494023	AssignmentExpression	p -> greedy = 0		3493889	0		=			
ANR	3494024	PtrMemberAccess	p -> greedy		3493889	0					
ANR	3494025	Identifier	p		3493889	0					
ANR	3494026	Identifier	greedy		3493889	1					
ANR	3494027	PrimaryExpression	0		3493889	1					
ANR	3494028	BreakStatement	break ;	2221:4:47350:47355	3493889	14	True				
ANR	3494029	Label	case RQ_QQ :	2222:2:47359:47369	3493889	15	True				
ANR	3494030	Identifier	RQ_QQ		3493889	0					
ANR	3494031	ExpressionStatement	p -> target = c -> target	2223:4:47375:47396	3493889	16	True				
ANR	3494032	AssignmentExpression	p -> target = c -> target		3493889	0		=			
ANR	3494033	PtrMemberAccess	p -> target		3493889	0					
ANR	3494034	Identifier	p		3493889	0					
ANR	3494035	Identifier	target		3493889	1					
ANR	3494036	PtrMemberAccess	c -> target		3493889	1					
ANR	3494037	Identifier	c		3493889	0					
ANR	3494038	Identifier	target		3493889	1					
ANR	3494039	ExpressionStatement	p -> lower = 0	2224:4:47402:47415	3493889	17	True				
ANR	3494040	AssignmentExpression	p -> lower = 0		3493889	0		=			
ANR	3494041	PtrMemberAccess	p -> lower		3493889	0					
ANR	3494042	Identifier	p		3493889	0					
ANR	3494043	Identifier	lower		3493889	1					
ANR	3494044	PrimaryExpression	0		3493889	1					
ANR	3494045	ExpressionStatement	p -> upper = 1	2224:20:47418:47430	3493889	18	True				
ANR	3494046	AssignmentExpression	p -> upper = 1		3493889	0		=			
ANR	3494047	PtrMemberAccess	p -> upper		3493889	0					
ANR	3494048	Identifier	p		3493889	0					
ANR	3494049	Identifier	upper		3493889	1					
ANR	3494050	PrimaryExpression	1		3493889	1					
ANR	3494051	ExpressionStatement	p -> greedy = 0	2224:35:47433:47446	3493889	19	True				
ANR	3494052	AssignmentExpression	p -> greedy = 0		3493889	0		=			
ANR	3494053	PtrMemberAccess	p -> greedy		3493889	0					
ANR	3494054	Identifier	p		3493889	0					
ANR	3494055	Identifier	greedy		3493889	1					
ANR	3494056	PrimaryExpression	0		3493889	1					
ANR	3494057	BreakStatement	break ;	2225:4:47452:47457	3493889	20	True				
ANR	3494058	Label	case RQ_P_QQ :	2226:2:47461:47473	3493889	21	True				
ANR	3494059	Identifier	RQ_P_QQ		3493889	0					
ANR	3494060	ExpressionStatement	p -> target = cnode	2227:4:47479:47496	3493889	22	True				
ANR	3494061	AssignmentExpression	p -> target = cnode		3493889	0		=			
ANR	3494062	PtrMemberAccess	p -> target		3493889	0					
ANR	3494063	Identifier	p		3493889	0					
ANR	3494064	Identifier	target		3493889	1					
ANR	3494065	Identifier	cnode		3493889	1					
ANR	3494066	ExpressionStatement	p -> lower = 0	2228:4:47502:47515	3493889	23	True				
ANR	3494067	AssignmentExpression	p -> lower = 0		3493889	0		=			
ANR	3494068	PtrMemberAccess	p -> lower		3493889	0					
ANR	3494069	Identifier	p		3493889	0					
ANR	3494070	Identifier	lower		3493889	1					
ANR	3494071	PrimaryExpression	0		3493889	1					
ANR	3494072	ExpressionStatement	p -> upper = 1	2228:20:47518:47530	3493889	24	True				
ANR	3494073	AssignmentExpression	p -> upper = 1		3493889	0		=			
ANR	3494074	PtrMemberAccess	p -> upper		3493889	0					
ANR	3494075	Identifier	p		3493889	0					
ANR	3494076	Identifier	upper		3493889	1					
ANR	3494077	PrimaryExpression	1		3493889	1					
ANR	3494078	ExpressionStatement	p -> greedy = 0	2228:35:47533:47546	3493889	25	True				
ANR	3494079	AssignmentExpression	p -> greedy = 0		3493889	0		=			
ANR	3494080	PtrMemberAccess	p -> greedy		3493889	0					
ANR	3494081	Identifier	p		3493889	0					
ANR	3494082	Identifier	greedy		3493889	1					
ANR	3494083	PrimaryExpression	0		3493889	1					
ANR	3494084	ExpressionStatement	c -> lower = 1	2229:4:47552:47565	3493889	26	True				
ANR	3494085	AssignmentExpression	c -> lower = 1		3493889	0		=			
ANR	3494086	PtrMemberAccess	c -> lower		3493889	0					
ANR	3494087	Identifier	c		3493889	0					
ANR	3494088	Identifier	lower		3493889	1					
ANR	3494089	PrimaryExpression	1		3493889	1					
ANR	3494090	ExpressionStatement	c -> upper = REPEAT_INFINITE	2229:20:47568:47594	3493889	27	True				
ANR	3494091	AssignmentExpression	c -> upper = REPEAT_INFINITE		3493889	0		=			
ANR	3494092	PtrMemberAccess	c -> upper		3493889	0					
ANR	3494093	Identifier	c		3493889	0					
ANR	3494094	Identifier	upper		3493889	1					
ANR	3494095	Identifier	REPEAT_INFINITE		3493889	1					
ANR	3494096	ExpressionStatement	c -> greedy = 1	2229:49:47597:47610	3493889	28	True				
ANR	3494097	AssignmentExpression	c -> greedy = 1		3493889	0		=			
ANR	3494098	PtrMemberAccess	c -> greedy		3493889	0					
ANR	3494099	Identifier	c		3493889	0					
ANR	3494100	Identifier	greedy		3493889	1					
ANR	3494101	PrimaryExpression	1		3493889	1					
ANR	3494102	ReturnStatement	return ;	2230:4:47616:47623	3493889	29	True				
ANR	3494103	BreakStatement	break ;	2231:4:47629:47634	3493889	30	True				
ANR	3494104	Label	case RQ_PQ_Q :	2232:2:47638:47650	3493889	31	True				
ANR	3494105	Identifier	RQ_PQ_Q		3493889	0					
ANR	3494106	ExpressionStatement	p -> target = cnode	2233:4:47656:47673	3493889	32	True				
ANR	3494107	AssignmentExpression	p -> target = cnode		3493889	0		=			
ANR	3494108	PtrMemberAccess	p -> target		3493889	0					
ANR	3494109	Identifier	p		3493889	0					
ANR	3494110	Identifier	target		3493889	1					
ANR	3494111	Identifier	cnode		3493889	1					
ANR	3494112	ExpressionStatement	p -> lower = 0	2234:4:47679:47692	3493889	33	True				
ANR	3494113	AssignmentExpression	p -> lower = 0		3493889	0		=			
ANR	3494114	PtrMemberAccess	p -> lower		3493889	0					
ANR	3494115	Identifier	p		3493889	0					
ANR	3494116	Identifier	lower		3493889	1					
ANR	3494117	PrimaryExpression	0		3493889	1					
ANR	3494118	ExpressionStatement	p -> upper = 1	2234:20:47695:47707	3493889	34	True				
ANR	3494119	AssignmentExpression	p -> upper = 1		3493889	0		=			
ANR	3494120	PtrMemberAccess	p -> upper		3493889	0					
ANR	3494121	Identifier	p		3493889	0					
ANR	3494122	Identifier	upper		3493889	1					
ANR	3494123	PrimaryExpression	1		3493889	1					
ANR	3494124	ExpressionStatement	p -> greedy = 1	2234:35:47710:47723	3493889	35	True				
ANR	3494125	AssignmentExpression	p -> greedy = 1		3493889	0		=			
ANR	3494126	PtrMemberAccess	p -> greedy		3493889	0					
ANR	3494127	Identifier	p		3493889	0					
ANR	3494128	Identifier	greedy		3493889	1					
ANR	3494129	PrimaryExpression	1		3493889	1					
ANR	3494130	ExpressionStatement	c -> lower = 1	2235:4:47729:47742	3493889	36	True				
ANR	3494131	AssignmentExpression	c -> lower = 1		3493889	0		=			
ANR	3494132	PtrMemberAccess	c -> lower		3493889	0					
ANR	3494133	Identifier	c		3493889	0					
ANR	3494134	Identifier	lower		3493889	1					
ANR	3494135	PrimaryExpression	1		3493889	1					
ANR	3494136	ExpressionStatement	c -> upper = REPEAT_INFINITE	2235:20:47745:47771	3493889	37	True				
ANR	3494137	AssignmentExpression	c -> upper = REPEAT_INFINITE		3493889	0		=			
ANR	3494138	PtrMemberAccess	c -> upper		3493889	0					
ANR	3494139	Identifier	c		3493889	0					
ANR	3494140	Identifier	upper		3493889	1					
ANR	3494141	Identifier	REPEAT_INFINITE		3493889	1					
ANR	3494142	ExpressionStatement	c -> greedy = 0	2235:49:47774:47787	3493889	38	True				
ANR	3494143	AssignmentExpression	c -> greedy = 0		3493889	0		=			
ANR	3494144	PtrMemberAccess	c -> greedy		3493889	0					
ANR	3494145	Identifier	c		3493889	0					
ANR	3494146	Identifier	greedy		3493889	1					
ANR	3494147	PrimaryExpression	0		3493889	1					
ANR	3494148	ReturnStatement	return ;	2236:4:47793:47800	3493889	39	True				
ANR	3494149	BreakStatement	break ;	2237:4:47806:47811	3493889	40	True				
ANR	3494150	Label	case RQ_ASIS :	2238:2:47815:47827	3493889	41	True				
ANR	3494151	Identifier	RQ_ASIS		3493889	0					
ANR	3494152	ExpressionStatement	p -> target = cnode	2239:4:47833:47850	3493889	42	True				
ANR	3494153	AssignmentExpression	p -> target = cnode		3493889	0		=			
ANR	3494154	PtrMemberAccess	p -> target		3493889	0					
ANR	3494155	Identifier	p		3493889	0					
ANR	3494156	Identifier	target		3493889	1					
ANR	3494157	Identifier	cnode		3493889	1					
ANR	3494158	ReturnStatement	return ;	2240:4:47856:47863	3493889	43	True				
ANR	3494159	BreakStatement	break ;	2241:4:47869:47874	3493889	44	True				
ANR	3494160	ExpressionStatement	c -> target = NULL_NODE	2244:2:47883:47904	3493889	8	True				
ANR	3494161	AssignmentExpression	c -> target = NULL_NODE		3493889	0		=			
ANR	3494162	PtrMemberAccess	c -> target		3493889	0					
ANR	3494163	Identifier	c		3493889	0					
ANR	3494164	Identifier	target		3493889	1					
ANR	3494165	Identifier	NULL_NODE		3493889	1					
ANR	3494166	ExpressionStatement	onig_node_free ( cnode )	2245:2:47908:47929	3493889	9	True				
ANR	3494167	CallExpression	onig_node_free ( cnode )		3493889	0					
ANR	3494168	Callee	onig_node_free		3493889	0					
ANR	3494169	Identifier	onig_node_free		3493889	0					
ANR	3494170	ArgumentList	cnode		3493889	1					
ANR	3494171	Argument	cnode		3493889	0					
ANR	3494172	Identifier	cnode		3493889	0					
ANR	3494173	ReturnType	extern void		3493889	1					
ANR	3494174	Identifier	onig_reduce_nested_quantifier		3493889	2					
ANR	3494175	ParameterList	"Node * pnode , Node * cnode"		3493889	3					
ANR	3494176	Parameter	Node * pnode	2199:30:46823:46833	3493889	0	True				
ANR	3494177	ParameterType	Node *		3493889	0					
ANR	3494178	Identifier	pnode		3493889	1					
ANR	3494179	Parameter	Node * cnode	2199:43:46836:46846	3493889	1	True				
ANR	3494180	ParameterType	Node *		3493889	0					
ANR	3494181	Identifier	cnode		3493889	1					
ANR	3494182	CFGEntryNode	ENTRY		3493889		True				
ANR	3494183	CFGExitNode	EXIT		3493889		True				
ANR	3494184	Symbol	* * ReduceTypeTable		3493889						
ANR	3494185	Symbol	* pnode		3493889						
ANR	3494186	Symbol	c -> greedy		3493889						
ANR	3494187	Symbol	cnode		3493889						
ANR	3494188	Symbol	p -> lower		3493889						
ANR	3494189	Symbol	NQTFR		3493889						
ANR	3494190	Symbol	popular_quantifier_num		3493889						
ANR	3494191	Symbol	REPEAT_INFINITE		3493889						
ANR	3494192	Symbol	c -> target		3493889						
ANR	3494193	Symbol	ReduceTypeTable		3493889						
ANR	3494194	Symbol	c -> upper		3493889						
ANR	3494195	Symbol	pnum		3493889						
ANR	3494196	Symbol	p -> target		3493889						
ANR	3494197	Symbol	c -> lower		3493889						
ANR	3494198	Symbol	c		3493889						
ANR	3494199	Symbol	* cnum		3493889						
ANR	3494200	Symbol	p -> upper		3493889						
ANR	3494201	Symbol	* cnode		3493889						
ANR	3494202	Symbol	cnum		3493889						
ANR	3494203	Symbol	* c		3493889						
ANR	3494204	Symbol	pnode		3493889						
ANR	3494205	Symbol	* pnum		3493889						
ANR	3494206	Symbol	p		3493889						
ANR	3494207	Symbol	p -> greedy		3493889						
ANR	3494208	Symbol	* ReduceTypeTable		3493889						
ANR	3494209	Symbol	* * cnum		3493889						
ANR	3494210	Symbol	* p		3493889						
ANR	3494211	Symbol	NULL_NODE		3493889						
ANR	3494212	ClassDef	TokenSyms	2249:0:47935:48454							
ANR	3494213	ClassDef	<unnamed>	2277:8:48466:49139							
ANR	3494214	DeclStmt									
ANR	3494215	Decl							enum TokenSyms	enum TokenSyms	type
ANR	3494216	DeclStmt									
ANR	3494217	Decl							int	int	escaped
ANR	3494218	DeclStmt									
ANR	3494219	Decl							int	int	base
ANR	3494220	DeclStmt									
ANR	3494221	Decl							UChar	UChar *	backp
ANR	3494222	ClassDef	<unnamed>	2282:2:48585:49126							
ANR	3494223	DeclStmt									
ANR	3494224	Decl							UChar	UChar *	s
ANR	3494225	DeclStmt									
ANR	3494226	Decl							int	int	c
ANR	3494227	DeclStmt									
ANR	3494228	Decl							OnigCodePoint	OnigCodePoint	code
ANR	3494229	DeclStmt									
ANR	3494230	Decl							int	int	anchor
ANR	3494231	DeclStmt									
ANR	3494232	Decl							int	int	subtype
ANR	3494233	ClassDef	<unnamed>	2288:4:48685:48780							
ANR	3494234	DeclStmt									
ANR	3494235	Decl							int	int	lower
ANR	3494236	DeclStmt									
ANR	3494237	Decl							int	int	upper
ANR	3494238	DeclStmt									
ANR	3494239	Decl							int	int	greedy
ANR	3494240	DeclStmt									
ANR	3494241	Decl							int	int	possessive
ANR	3494242	DeclStmt									
ANR	3494243	Decl									repeat
ANR	3494244	ClassDef	<unnamed>	2294:4:48786:48976							
ANR	3494245	DeclStmt									
ANR	3494246	Decl							int	int	num
ANR	3494247	DeclStmt									
ANR	3494248	Decl							int	int	ref1
ANR	3494249	DeclStmt									
ANR	3494250	Decl							int	int *	refs
ANR	3494251	DeclStmt									
ANR	3494252	Decl							int	int	by_name
ANR	3494253	DeclStmt									
ANR	3494254	Decl							int	int	exist_level
ANR	3494255	DeclStmt									
ANR	3494256	Decl							int	int	level
ANR	3494257	DeclStmt									
ANR	3494258	Decl									backref
ANR	3494259	ClassDef	<unnamed>	2304:4:48982:49062							
ANR	3494260	DeclStmt									
ANR	3494261	Decl							UChar	UChar *	name
ANR	3494262	DeclStmt									
ANR	3494263	Decl							UChar	UChar *	name_end
ANR	3494264	DeclStmt									
ANR	3494265	Decl							int	int	gnum
ANR	3494266	DeclStmt									
ANR	3494267	Decl									call
ANR	3494268	ClassDef	<unnamed>	2309:4:49068:49119							
ANR	3494269	DeclStmt									
ANR	3494270	Decl							int	int	ctype
ANR	3494271	DeclStmt									
ANR	3494272	Decl							int	int	not
ANR	3494273	DeclStmt									
ANR	3494274	Decl									prop
ANR	3494275	DeclStmt									
ANR	3494276	Decl									u
ANR	3494277	DeclStmt									
ANR	3494278	Decl									OnigToken
ANR	3494279	Function	fetch_range_quantifier	2317:0:49143:51285							
ANR	3494280	FunctionDef	"fetch_range_quantifier (UChar * * src , UChar * end , OnigToken * tok , ScanEnv * env)"		3494279	0					
ANR	3494281	CompoundStatement		2319:0:49232:51285	3494279	0					
ANR	3494282	IdentifierDeclStatement	"int low , up , syn_allow , non_low = 0 ;"	2320:2:49236:49271	3494279	0	True				
ANR	3494283	IdentifierDecl	low		3494279	0					
ANR	3494284	IdentifierDeclType	int		3494279	0					
ANR	3494285	Identifier	low		3494279	1					
ANR	3494286	IdentifierDecl	up		3494279	1					
ANR	3494287	IdentifierDeclType	int		3494279	0					
ANR	3494288	Identifier	up		3494279	1					
ANR	3494289	IdentifierDecl	syn_allow		3494279	2					
ANR	3494290	IdentifierDeclType	int		3494279	0					
ANR	3494291	Identifier	syn_allow		3494279	1					
ANR	3494292	IdentifierDecl	non_low = 0		3494279	3					
ANR	3494293	IdentifierDeclType	int		3494279	0					
ANR	3494294	Identifier	non_low		3494279	1					
ANR	3494295	AssignmentExpression	non_low = 0		3494279	2		=			
ANR	3494296	Identifier	non_low		3494279	0					
ANR	3494297	PrimaryExpression	0		3494279	1					
ANR	3494298	IdentifierDeclStatement	int r = 0 ;	2321:2:49275:49284	3494279	1	True				
ANR	3494299	IdentifierDecl	r = 0		3494279	0					
ANR	3494300	IdentifierDeclType	int		3494279	0					
ANR	3494301	Identifier	r		3494279	1					
ANR	3494302	AssignmentExpression	r = 0		3494279	2		=			
ANR	3494303	Identifier	r		3494279	0					
ANR	3494304	PrimaryExpression	0		3494279	1					
ANR	3494305	IdentifierDeclStatement	OnigCodePoint c ;	2322:2:49288:49303	3494279	2	True				
ANR	3494306	IdentifierDecl	c		3494279	0					
ANR	3494307	IdentifierDeclType	OnigCodePoint		3494279	0					
ANR	3494308	Identifier	c		3494279	1					
ANR	3494309	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2323:2:49307:49334	3494279	3	True				
ANR	3494310	IdentifierDecl	enc = env -> enc		3494279	0					
ANR	3494311	IdentifierDeclType	OnigEncoding		3494279	0					
ANR	3494312	Identifier	enc		3494279	1					
ANR	3494313	AssignmentExpression	enc = env -> enc		3494279	2		=			
ANR	3494314	Identifier	enc		3494279	0					
ANR	3494315	PtrMemberAccess	env -> enc		3494279	1					
ANR	3494316	Identifier	env		3494279	0					
ANR	3494317	Identifier	enc		3494279	1					
ANR	3494318	IdentifierDeclStatement	UChar * p = * src ;	2324:2:49338:49353	3494279	4	True				
ANR	3494319	IdentifierDecl	* p = * src		3494279	0					
ANR	3494320	IdentifierDeclType	UChar *		3494279	0					
ANR	3494321	Identifier	p		3494279	1					
ANR	3494322	AssignmentExpression	* p = * src		3494279	2		=			
ANR	3494323	Identifier	p		3494279	0					
ANR	3494324	UnaryOperationExpression	* src		3494279	1					
ANR	3494325	UnaryOperator	*		3494279	0					
ANR	3494326	Identifier	src		3494279	1					
ANR	3494327	ExpressionStatement	PFETCH_READY	2325:2:49357:49369	3494279	5	True				
ANR	3494328	Identifier	PFETCH_READY		3494279	0					
ANR	3494329	ExpressionStatement	"syn_allow = IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INVALID_INTERVAL )"	2327:2:49374:49444	3494279	6	True				
ANR	3494330	AssignmentExpression	"syn_allow = IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INVALID_INTERVAL )"		3494279	0		=			
ANR	3494331	Identifier	syn_allow		3494279	0					
ANR	3494332	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INVALID_INTERVAL )"		3494279	1					
ANR	3494333	Callee	IS_SYNTAX_BV		3494279	0					
ANR	3494334	Identifier	IS_SYNTAX_BV		3494279	0					
ANR	3494335	ArgumentList	env -> syntax		3494279	1					
ANR	3494336	Argument	env -> syntax		3494279	0					
ANR	3494337	PtrMemberAccess	env -> syntax		3494279	0					
ANR	3494338	Identifier	env		3494279	0					
ANR	3494339	Identifier	syntax		3494279	1					
ANR	3494340	Argument	ONIG_SYN_ALLOW_INVALID_INTERVAL		3494279	1					
ANR	3494341	Identifier	ONIG_SYN_ALLOW_INVALID_INTERVAL		3494279	0					
ANR	3494342	IfStatement	if ( PEND )		3494279	7					
ANR	3494343	Condition	PEND	2329:6:49453:49456	3494279	0	True				
ANR	3494344	Identifier	PEND		3494279	0					
ANR	3494345	CompoundStatement		11:12:226:226	3494279	1					
ANR	3494346	IfStatement	if ( syn_allow )		3494279	0					
ANR	3494347	Condition	syn_allow	2330:8:49469:49477	3494279	0	True				
ANR	3494348	Identifier	syn_allow		3494279	0					
ANR	3494349	ReturnStatement	return 1 ;	2331:6:49486:49494	3494279	1	True				
ANR	3494350	PrimaryExpression	1		3494279	0					
ANR	3494351	ElseStatement	else		3494279	0					
ANR	3494352	ReturnStatement	return ONIGERR_END_PATTERN_AT_LEFT_BRACE ;	2333:6:49532:49572	3494279	0	True				
ANR	3494353	Identifier	ONIGERR_END_PATTERN_AT_LEFT_BRACE		3494279	0					
ANR	3494354	IfStatement	if ( ! syn_allow )		3494279	8					
ANR	3494355	Condition	! syn_allow	2336:6:49613:49623	3494279	0	True				
ANR	3494356	UnaryOperationExpression	! syn_allow		3494279	0					
ANR	3494357	UnaryOperator	!		3494279	0					
ANR	3494358	Identifier	syn_allow		3494279	1					
ANR	3494359	CompoundStatement		18:19:393:393	3494279	1					
ANR	3494360	ExpressionStatement	c = PPEEK	2337:4:49632:49641	3494279	0	True				
ANR	3494361	AssignmentExpression	c = PPEEK		3494279	0		=			
ANR	3494362	Identifier	c		3494279	0					
ANR	3494363	Identifier	PPEEK		3494279	1					
ANR	3494364	IfStatement	if ( c == ')' || c == '(' || c == '|' )		3494279	1					
ANR	3494365	Condition	c == ')' || c == '(' || c == '|'	2338:8:49651:49682	3494279	0	True				
ANR	3494366	OrExpression	c == ')' || c == '(' || c == '|'		3494279	0		||			
ANR	3494367	EqualityExpression	c == ')'		3494279	0		==			
ANR	3494368	Identifier	c		3494279	0					
ANR	3494369	PrimaryExpression	')'		3494279	1					
ANR	3494370	OrExpression	c == '(' || c == '|'		3494279	1		||			
ANR	3494371	EqualityExpression	c == '('		3494279	0		==			
ANR	3494372	Identifier	c		3494279	0					
ANR	3494373	PrimaryExpression	'('		3494279	1					
ANR	3494374	EqualityExpression	c == '|'		3494279	1		==			
ANR	3494375	Identifier	c		3494279	0					
ANR	3494376	PrimaryExpression	'|'		3494279	1					
ANR	3494377	CompoundStatement		20:42:452:452	3494279	1					
ANR	3494378	ReturnStatement	return ONIGERR_END_PATTERN_AT_LEFT_BRACE ;	2339:6:49693:49733	3494279	0	True				
ANR	3494379	Identifier	ONIGERR_END_PATTERN_AT_LEFT_BRACE		3494279	0					
ANR	3494380	ExpressionStatement	"low = onig_scan_unsigned_number ( & p , end , env -> enc )"	2343:2:49748:49798	3494279	9	True				
ANR	3494381	AssignmentExpression	"low = onig_scan_unsigned_number ( & p , end , env -> enc )"		3494279	0		=			
ANR	3494382	Identifier	low		3494279	0					
ANR	3494383	CallExpression	"onig_scan_unsigned_number ( & p , end , env -> enc )"		3494279	1					
ANR	3494384	Callee	onig_scan_unsigned_number		3494279	0					
ANR	3494385	Identifier	onig_scan_unsigned_number		3494279	0					
ANR	3494386	ArgumentList	& p		3494279	1					
ANR	3494387	Argument	& p		3494279	0					
ANR	3494388	UnaryOperationExpression	& p		3494279	0					
ANR	3494389	UnaryOperator	&		3494279	0					
ANR	3494390	Identifier	p		3494279	1					
ANR	3494391	Argument	end		3494279	1					
ANR	3494392	Identifier	end		3494279	0					
ANR	3494393	Argument	env -> enc		3494279	2					
ANR	3494394	PtrMemberAccess	env -> enc		3494279	0					
ANR	3494395	Identifier	env		3494279	0					
ANR	3494396	Identifier	enc		3494279	1					
ANR	3494397	IfStatement	if ( low < 0 )		3494279	10					
ANR	3494398	Condition	low < 0	2344:6:49806:49812	3494279	0	True				
ANR	3494399	RelationalExpression	low < 0		3494279	0		<			
ANR	3494400	Identifier	low		3494279	0					
ANR	3494401	PrimaryExpression	0		3494279	1					
ANR	3494402	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE ;	2344:15:49815:49861	3494279	1	True				
ANR	3494403	Identifier	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		3494279	0					
ANR	3494404	IfStatement	if ( low > ONIG_MAX_REPEAT_NUM )		3494279	11					
ANR	3494405	Condition	low > ONIG_MAX_REPEAT_NUM	2345:6:49869:49893	3494279	0	True				
ANR	3494406	RelationalExpression	low > ONIG_MAX_REPEAT_NUM		3494279	0		>			
ANR	3494407	Identifier	low		3494279	0					
ANR	3494408	Identifier	ONIG_MAX_REPEAT_NUM		3494279	1					
ANR	3494409	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE ;	2346:4:49900:49946	3494279	1	True				
ANR	3494410	Identifier	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		3494279	0					
ANR	3494411	IfStatement	if ( p == * src )		3494279	12					
ANR	3494412	Condition	p == * src	2348:6:49955:49963	3494279	0	True				
ANR	3494413	EqualityExpression	p == * src		3494279	0		==			
ANR	3494414	Identifier	p		3494279	0					
ANR	3494415	UnaryOperationExpression	* src		3494279	1					
ANR	3494416	UnaryOperator	*		3494279	0					
ANR	3494417	Identifier	src		3494279	1					
ANR	3494418	CompoundStatement		30:17:733:733	3494279	1					
ANR	3494419	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV ) )"		3494279	0					
ANR	3494420	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV )"	2349:8:49997:50057	3494279	0	True				
ANR	3494421	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV )"		3494279	0					
ANR	3494422	Callee	IS_SYNTAX_BV		3494279	0					
ANR	3494423	Identifier	IS_SYNTAX_BV		3494279	0					
ANR	3494424	ArgumentList	env -> syntax		3494279	1					
ANR	3494425	Argument	env -> syntax		3494279	0					
ANR	3494426	PtrMemberAccess	env -> syntax		3494279	0					
ANR	3494427	Identifier	env		3494279	0					
ANR	3494428	Identifier	syntax		3494279	1					
ANR	3494429	Argument	ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV		3494279	1					
ANR	3494430	Identifier	ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV		3494279	0					
ANR	3494431	CompoundStatement		31:71:827:827	3494279	1					
ANR	3494432	ExpressionStatement	low = 0	2351:6:50100:50107	3494279	0	True				
ANR	3494433	AssignmentExpression	low = 0		3494279	0		=			
ANR	3494434	Identifier	low		3494279	0					
ANR	3494435	PrimaryExpression	0		3494279	1					
ANR	3494436	ExpressionStatement	non_low = 1	2352:6:50115:50126	3494279	1	True				
ANR	3494437	AssignmentExpression	non_low = 1		3494279	0		=			
ANR	3494438	Identifier	non_low		3494279	0					
ANR	3494439	PrimaryExpression	1		3494279	1					
ANR	3494440	ElseStatement	else		3494279	0					
ANR	3494441	GotoStatement	goto invalid ;	2355:6:50149:50161	3494279	0	True				
ANR	3494442	Identifier	invalid		3494279	0					
ANR	3494443	IfStatement	if ( PEND )		3494279	13					
ANR	3494444	Condition	PEND	2358:6:50174:50177	3494279	0	True				
ANR	3494445	Identifier	PEND		3494279	0					
ANR	3494446	GotoStatement	goto invalid ;	2358:12:50180:50192	3494279	1	True				
ANR	3494447	Identifier	invalid		3494279	0					
ANR	3494448	ExpressionStatement	PFETCH ( c )	2359:2:50196:50205	3494279	14	True				
ANR	3494449	CallExpression	PFETCH ( c )		3494279	0					
ANR	3494450	Callee	PFETCH		3494279	0					
ANR	3494451	Identifier	PFETCH		3494279	0					
ANR	3494452	ArgumentList	c		3494279	1					
ANR	3494453	Argument	c		3494279	0					
ANR	3494454	Identifier	c		3494279	0					
ANR	3494455	IfStatement	"if ( c == ',' )"		3494279	15					
ANR	3494456	Condition	"c == ','"	2360:6:50213:50220	3494279	0	True				
ANR	3494457	EqualityExpression	"c == ','"		3494279	0		==			
ANR	3494458	Identifier	c		3494279	0					
ANR	3494459	PrimaryExpression	"','"		3494279	1					
ANR	3494460	CompoundStatement		43:4:996:1011	3494279	1					
ANR	3494461	IdentifierDeclStatement	UChar * prev = p ;	2361:4:50229:50244	3494279	0	True				
ANR	3494462	IdentifierDecl	* prev = p		3494279	0					
ANR	3494463	IdentifierDeclType	UChar *		3494279	0					
ANR	3494464	Identifier	prev		3494279	1					
ANR	3494465	AssignmentExpression	* prev = p		3494279	2		=			
ANR	3494466	Identifier	p		3494279	0					
ANR	3494467	Identifier	p		3494279	1					
ANR	3494468	ExpressionStatement	"up = onig_scan_unsigned_number ( & p , end , env -> enc )"	2362:4:50250:50299	3494279	1	True				
ANR	3494469	AssignmentExpression	"up = onig_scan_unsigned_number ( & p , end , env -> enc )"		3494279	0		=			
ANR	3494470	Identifier	up		3494279	0					
ANR	3494471	CallExpression	"onig_scan_unsigned_number ( & p , end , env -> enc )"		3494279	1					
ANR	3494472	Callee	onig_scan_unsigned_number		3494279	0					
ANR	3494473	Identifier	onig_scan_unsigned_number		3494279	0					
ANR	3494474	ArgumentList	& p		3494279	1					
ANR	3494475	Argument	& p		3494279	0					
ANR	3494476	UnaryOperationExpression	& p		3494279	0					
ANR	3494477	UnaryOperator	&		3494279	0					
ANR	3494478	Identifier	p		3494279	1					
ANR	3494479	Argument	end		3494279	1					
ANR	3494480	Identifier	end		3494279	0					
ANR	3494481	Argument	env -> enc		3494279	2					
ANR	3494482	PtrMemberAccess	env -> enc		3494279	0					
ANR	3494483	Identifier	env		3494279	0					
ANR	3494484	Identifier	enc		3494279	1					
ANR	3494485	IfStatement	if ( up < 0 )		3494279	2					
ANR	3494486	Condition	up < 0	2363:8:50309:50314	3494279	0	True				
ANR	3494487	RelationalExpression	up < 0		3494279	0		<			
ANR	3494488	Identifier	up		3494279	0					
ANR	3494489	PrimaryExpression	0		3494279	1					
ANR	3494490	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE ;	2363:16:50317:50363	3494279	1	True				
ANR	3494491	Identifier	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		3494279	0					
ANR	3494492	IfStatement	if ( up > ONIG_MAX_REPEAT_NUM )		3494279	3					
ANR	3494493	Condition	up > ONIG_MAX_REPEAT_NUM	2364:8:50373:50396	3494279	0	True				
ANR	3494494	RelationalExpression	up > ONIG_MAX_REPEAT_NUM		3494279	0		>			
ANR	3494495	Identifier	up		3494279	0					
ANR	3494496	Identifier	ONIG_MAX_REPEAT_NUM		3494279	1					
ANR	3494497	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE ;	2365:6:50405:50451	3494279	1	True				
ANR	3494498	Identifier	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		3494279	0					
ANR	3494499	IfStatement	if ( p == prev )		3494279	4					
ANR	3494500	Condition	p == prev	2367:8:50462:50470	3494279	0	True				
ANR	3494501	EqualityExpression	p == prev		3494279	0		==			
ANR	3494502	Identifier	p		3494279	0					
ANR	3494503	Identifier	prev		3494279	1					
ANR	3494504	CompoundStatement		49:19:1240:1240	3494279	1					
ANR	3494505	IfStatement	if ( non_low != 0 )		3494279	0					
ANR	3494506	Condition	non_low != 0	2368:10:50485:50496	3494279	0	True				
ANR	3494507	EqualityExpression	non_low != 0		3494279	0		!=			
ANR	3494508	Identifier	non_low		3494279	0					
ANR	3494509	PrimaryExpression	0		3494279	1					
ANR	3494510	GotoStatement	goto invalid ;	2369:1:50500:50512	3494279	1	True				
ANR	3494511	Identifier	invalid		3494279	0					
ANR	3494512	ExpressionStatement	up = REPEAT_INFINITE	2370:6:50520:50540	3494279	1	True				
ANR	3494513	AssignmentExpression	up = REPEAT_INFINITE		3494279	0		=			
ANR	3494514	Identifier	up		3494279	0					
ANR	3494515	Identifier	REPEAT_INFINITE		3494279	1					
ANR	3494516	ElseStatement	else		3494279	0					
ANR	3494517	CompoundStatement		55:7:1353:1353	3494279	0					
ANR	3494518	IfStatement	if ( non_low != 0 )		3494279	0					
ANR	3494519	Condition	non_low != 0	2374:8:50596:50607	3494279	0	True				
ANR	3494520	EqualityExpression	non_low != 0		3494279	0		!=			
ANR	3494521	Identifier	non_low		3494279	0					
ANR	3494522	PrimaryExpression	0		3494279	1					
ANR	3494523	GotoStatement	goto invalid ;	2375:6:50616:50628	3494279	1	True				
ANR	3494524	Identifier	invalid		3494279	0					
ANR	3494525	ExpressionStatement	PUNFETCH	2377:4:50635:50643	3494279	1	True				
ANR	3494526	Identifier	PUNFETCH		3494279	0					
ANR	3494527	ExpressionStatement	up = low	2378:4:50649:50657	3494279	2	True				
ANR	3494528	AssignmentExpression	up = low		3494279	0		=			
ANR	3494529	Identifier	up		3494279	0					
ANR	3494530	Identifier	low		3494279	1					
ANR	3494531	ExpressionStatement	r = 2	2379:4:50690:50695	3494279	3	True				
ANR	3494532	AssignmentExpression	r = 2		3494279	0		=			
ANR	3494533	Identifier	r		3494279	0					
ANR	3494534	PrimaryExpression	2		3494279	1					
ANR	3494535	IfStatement	if ( PEND )		3494279	16					
ANR	3494536	Condition	PEND	2382:6:50724:50727	3494279	0	True				
ANR	3494537	Identifier	PEND		3494279	0					
ANR	3494538	GotoStatement	goto invalid ;	2382:12:50730:50742	3494279	1	True				
ANR	3494539	Identifier	invalid		3494279	0					
ANR	3494540	ExpressionStatement	PFETCH ( c )	2383:2:50746:50755	3494279	17	True				
ANR	3494541	CallExpression	PFETCH ( c )		3494279	0					
ANR	3494542	Callee	PFETCH		3494279	0					
ANR	3494543	Identifier	PFETCH		3494279	0					
ANR	3494544	ArgumentList	c		3494279	1					
ANR	3494545	Argument	c		3494279	0					
ANR	3494546	Identifier	c		3494279	0					
ANR	3494547	IfStatement	"if ( IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_BRACE_INTERVAL ) )"		3494279	18					
ANR	3494548	Condition	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"	2384:6:50763:50819	3494279	0	True				
ANR	3494549	CallExpression	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"		3494279	0					
ANR	3494550	Callee	IS_SYNTAX_OP		3494279	0					
ANR	3494551	Identifier	IS_SYNTAX_OP		3494279	0					
ANR	3494552	ArgumentList	env -> syntax		3494279	1					
ANR	3494553	Argument	env -> syntax		3494279	0					
ANR	3494554	PtrMemberAccess	env -> syntax		3494279	0					
ANR	3494555	Identifier	env		3494279	0					
ANR	3494556	Identifier	syntax		3494279	1					
ANR	3494557	Argument	ONIG_SYN_OP_ESC_BRACE_INTERVAL		3494279	1					
ANR	3494558	Identifier	ONIG_SYN_OP_ESC_BRACE_INTERVAL		3494279	0					
ANR	3494559	CompoundStatement		66:65:1589:1589	3494279	1					
ANR	3494560	IfStatement	if ( c != MC_ESC ( env -> syntax ) )		3494279	0					
ANR	3494561	Condition	c != MC_ESC ( env -> syntax )	2385:8:50832:50855	3494279	0	True				
ANR	3494562	EqualityExpression	c != MC_ESC ( env -> syntax )		3494279	0		!=			
ANR	3494563	Identifier	c		3494279	0					
ANR	3494564	CallExpression	MC_ESC ( env -> syntax )		3494279	1					
ANR	3494565	Callee	MC_ESC		3494279	0					
ANR	3494566	Identifier	MC_ESC		3494279	0					
ANR	3494567	ArgumentList	env -> syntax		3494279	1					
ANR	3494568	Argument	env -> syntax		3494279	0					
ANR	3494569	PtrMemberAccess	env -> syntax		3494279	0					
ANR	3494570	Identifier	env		3494279	0					
ANR	3494571	Identifier	syntax		3494279	1					
ANR	3494572	GotoStatement	goto invalid ;	2385:34:50858:50870	3494279	1	True				
ANR	3494573	Identifier	invalid		3494279	0					
ANR	3494574	ExpressionStatement	PFETCH ( c )	2386:4:50876:50885	3494279	1	True				
ANR	3494575	CallExpression	PFETCH ( c )		3494279	0					
ANR	3494576	Callee	PFETCH		3494279	0					
ANR	3494577	Identifier	PFETCH		3494279	0					
ANR	3494578	ArgumentList	c		3494279	1					
ANR	3494579	Argument	c		3494279	0					
ANR	3494580	Identifier	c		3494279	0					
ANR	3494581	IfStatement	if ( c != '}' )		3494279	19					
ANR	3494582	Condition	c != '}'	2388:6:50897:50904	3494279	0	True				
ANR	3494583	EqualityExpression	c != '}'		3494279	0		!=			
ANR	3494584	Identifier	c		3494279	0					
ANR	3494585	PrimaryExpression	'}'		3494279	1					
ANR	3494586	GotoStatement	goto invalid ;	2388:16:50907:50919	3494279	1	True				
ANR	3494587	Identifier	invalid		3494279	0					
ANR	3494588	IfStatement	if ( ! IS_REPEAT_INFINITE ( up ) && low > up )		3494279	20					
ANR	3494589	Condition	! IS_REPEAT_INFINITE ( up ) && low > up	2390:6:50928:50962	3494279	0	True				
ANR	3494590	AndExpression	! IS_REPEAT_INFINITE ( up ) && low > up		3494279	0		&&			
ANR	3494591	UnaryOperationExpression	! IS_REPEAT_INFINITE ( up )		3494279	0					
ANR	3494592	UnaryOperator	!		3494279	0					
ANR	3494593	CallExpression	IS_REPEAT_INFINITE ( up )		3494279	1					
ANR	3494594	Callee	IS_REPEAT_INFINITE		3494279	0					
ANR	3494595	Identifier	IS_REPEAT_INFINITE		3494279	0					
ANR	3494596	ArgumentList	up		3494279	1					
ANR	3494597	Argument	up		3494279	0					
ANR	3494598	Identifier	up		3494279	0					
ANR	3494599	RelationalExpression	low > up		3494279	1		>			
ANR	3494600	Identifier	low		3494279	0					
ANR	3494601	Identifier	up		3494279	1					
ANR	3494602	CompoundStatement		72:43:1732:1732	3494279	1					
ANR	3494603	ReturnStatement	return ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE ;	2391:4:50971:51026	3494279	0	True				
ANR	3494604	Identifier	ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE		3494279	0					
ANR	3494605	ExpressionStatement	tok -> type = TK_INTERVAL	2394:2:51035:51058	3494279	21	True				
ANR	3494606	AssignmentExpression	tok -> type = TK_INTERVAL		3494279	0		=			
ANR	3494607	PtrMemberAccess	tok -> type		3494279	0					
ANR	3494608	Identifier	tok		3494279	0					
ANR	3494609	Identifier	type		3494279	1					
ANR	3494610	Identifier	TK_INTERVAL		3494279	1					
ANR	3494611	ExpressionStatement	tok -> u . repeat . lower = low	2395:2:51062:51087	3494279	22	True				
ANR	3494612	AssignmentExpression	tok -> u . repeat . lower = low		3494279	0		=			
ANR	3494613	MemberAccess	tok -> u . repeat . lower		3494279	0					
ANR	3494614	MemberAccess	tok -> u . repeat		3494279	0					
ANR	3494615	PtrMemberAccess	tok -> u		3494279	0					
ANR	3494616	Identifier	tok		3494279	0					
ANR	3494617	Identifier	u		3494279	1					
ANR	3494618	Identifier	repeat		3494279	1					
ANR	3494619	Identifier	lower		3494279	1					
ANR	3494620	Identifier	low		3494279	1					
ANR	3494621	ExpressionStatement	tok -> u . repeat . upper = up	2396:2:51091:51115	3494279	23	True				
ANR	3494622	AssignmentExpression	tok -> u . repeat . upper = up		3494279	0		=			
ANR	3494623	MemberAccess	tok -> u . repeat . upper		3494279	0					
ANR	3494624	MemberAccess	tok -> u . repeat		3494279	0					
ANR	3494625	PtrMemberAccess	tok -> u		3494279	0					
ANR	3494626	Identifier	tok		3494279	0					
ANR	3494627	Identifier	u		3494279	1					
ANR	3494628	Identifier	repeat		3494279	1					
ANR	3494629	Identifier	upper		3494279	1					
ANR	3494630	Identifier	up		3494279	1					
ANR	3494631	ExpressionStatement	* src = p	2397:2:51119:51127	3494279	24	True				
ANR	3494632	AssignmentExpression	* src = p		3494279	0		=			
ANR	3494633	UnaryOperationExpression	* src		3494279	0					
ANR	3494634	UnaryOperator	*		3494279	0					
ANR	3494635	Identifier	src		3494279	1					
ANR	3494636	Identifier	p		3494279	1					
ANR	3494637	ReturnStatement	return r ;	2398:2:51131:51139	3494279	25	True				
ANR	3494638	Identifier	r		3494279	0					
ANR	3494639	Label	invalid :	2400:1:51179:51186	3494279	26	True				
ANR	3494640	Identifier	invalid		3494279	0					
ANR	3494641	IfStatement	if ( syn_allow )		3494279	27					
ANR	3494642	Condition	syn_allow	2401:6:51194:51202	3494279	0	True				
ANR	3494643	Identifier	syn_allow		3494279	0					
ANR	3494644	ReturnStatement	return 1 ;	2402:4:51209:51217	3494279	1	True				
ANR	3494645	PrimaryExpression	1		3494279	0					
ANR	3494646	ElseStatement	else		3494279	0					
ANR	3494647	ReturnStatement	return ONIGERR_INVALID_REPEAT_RANGE_PATTERN ;	2404:4:51240:51283	3494279	0	True				
ANR	3494648	Identifier	ONIGERR_INVALID_REPEAT_RANGE_PATTERN		3494279	0					
ANR	3494649	ReturnType	static int		3494279	1					
ANR	3494650	Identifier	fetch_range_quantifier		3494279	2					
ANR	3494651	ParameterList	"UChar * * src , UChar * end , OnigToken * tok , ScanEnv * env"		3494279	3					
ANR	3494652	Parameter	UChar * * src	2318:23:49177:49187	3494279	0	True				
ANR	3494653	ParameterType	UChar * *		3494279	0					
ANR	3494654	Identifier	src		3494279	1					
ANR	3494655	Parameter	UChar * end	2318:36:49190:49199	3494279	1	True				
ANR	3494656	ParameterType	UChar *		3494279	0					
ANR	3494657	Identifier	end		3494279	1					
ANR	3494658	Parameter	OnigToken * tok	2318:48:49202:49215	3494279	2	True				
ANR	3494659	ParameterType	OnigToken *		3494279	0					
ANR	3494660	Identifier	tok		3494279	1					
ANR	3494661	Parameter	ScanEnv * env	2318:64:49218:49229	3494279	3	True				
ANR	3494662	ParameterType	ScanEnv *		3494279	0					
ANR	3494663	Identifier	env		3494279	1					
ANR	3494664	CFGEntryNode	ENTRY		3494279		True				
ANR	3494665	CFGExitNode	EXIT		3494279		True				
ANR	3494666	Symbol	ONIG_MAX_REPEAT_NUM		3494279						
ANR	3494667	Symbol	ONIG_SYN_ALLOW_INVALID_INTERVAL		3494279						
ANR	3494668	Symbol	prev		3494279						
ANR	3494669	Symbol	env -> enc		3494279						
ANR	3494670	Symbol	ONIGERR_END_PATTERN_AT_LEFT_BRACE		3494279						
ANR	3494671	Symbol	onig_scan_unsigned_number		3494279						
ANR	3494672	Symbol	* src		3494279						
ANR	3494673	Symbol	PEND		3494279						
ANR	3494674	Symbol	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		3494279						
ANR	3494675	Symbol	tok -> type		3494279						
ANR	3494676	Symbol	tok		3494279						
ANR	3494677	Symbol	REPEAT_INFINITE		3494279						
ANR	3494678	Symbol	TK_INTERVAL		3494279						
ANR	3494679	Symbol	low		3494279						
ANR	3494680	Symbol	ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE		3494279						
ANR	3494681	Symbol	tok -> u . repeat . upper		3494279						
ANR	3494682	Symbol	IS_SYNTAX_BV		3494279						
ANR	3494683	Symbol	end		3494279						
ANR	3494684	Symbol	up		3494279						
ANR	3494685	Symbol	enc		3494279						
ANR	3494686	Symbol	IS_REPEAT_INFINITE		3494279						
ANR	3494687	Symbol	tok -> u		3494279						
ANR	3494688	Symbol	ONIG_SYN_OP_ESC_BRACE_INTERVAL		3494279						
ANR	3494689	Symbol	c		3494279						
ANR	3494690	Symbol	tok -> u . repeat		3494279						
ANR	3494691	Symbol	src		3494279						
ANR	3494692	Symbol	ONIGERR_INVALID_REPEAT_RANGE_PATTERN		3494279						
ANR	3494693	Symbol	PPEEK		3494279						
ANR	3494694	Symbol	* env		3494279						
ANR	3494695	Symbol	IS_SYNTAX_OP		3494279						
ANR	3494696	Symbol	env		3494279						
ANR	3494697	Symbol	syn_allow		3494279						
ANR	3494698	Symbol	MC_ESC		3494279						
ANR	3494699	Symbol	env -> syntax		3494279						
ANR	3494700	Symbol	non_low		3494279						
ANR	3494701	Symbol	p		3494279						
ANR	3494702	Symbol	r		3494279						
ANR	3494703	Symbol	ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV		3494279						
ANR	3494704	Symbol	tok -> u . repeat . lower		3494279						
ANR	3494705	Symbol	& p		3494279						
ANR	3494706	Symbol	* tok		3494279						
ANR	3494707	Function	fetch_escaped_value	2408:0:51316:52916							
ANR	3494708	FunctionDef	"fetch_escaped_value (UChar * * src , UChar * end , ScanEnv * env)"		3494707	0					
ANR	3494709	CompoundStatement		2410:0:51386:52916	3494707	0					
ANR	3494710	IdentifierDeclStatement	int v ;	2411:2:51390:51395	3494707	0	True				
ANR	3494711	IdentifierDecl	v		3494707	0					
ANR	3494712	IdentifierDeclType	int		3494707	0					
ANR	3494713	Identifier	v		3494707	1					
ANR	3494714	IdentifierDeclStatement	OnigCodePoint c ;	2412:2:51399:51414	3494707	1	True				
ANR	3494715	IdentifierDecl	c		3494707	0					
ANR	3494716	IdentifierDeclType	OnigCodePoint		3494707	0					
ANR	3494717	Identifier	c		3494707	1					
ANR	3494718	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2413:2:51418:51445	3494707	2	True				
ANR	3494719	IdentifierDecl	enc = env -> enc		3494707	0					
ANR	3494720	IdentifierDeclType	OnigEncoding		3494707	0					
ANR	3494721	Identifier	enc		3494707	1					
ANR	3494722	AssignmentExpression	enc = env -> enc		3494707	2		=			
ANR	3494723	Identifier	enc		3494707	0					
ANR	3494724	PtrMemberAccess	env -> enc		3494707	1					
ANR	3494725	Identifier	env		3494707	0					
ANR	3494726	Identifier	enc		3494707	1					
ANR	3494727	IdentifierDeclStatement	UChar * p = * src ;	2414:2:51449:51464	3494707	3	True				
ANR	3494728	IdentifierDecl	* p = * src		3494707	0					
ANR	3494729	IdentifierDeclType	UChar *		3494707	0					
ANR	3494730	Identifier	p		3494707	1					
ANR	3494731	AssignmentExpression	* p = * src		3494707	2		=			
ANR	3494732	Identifier	p		3494707	0					
ANR	3494733	UnaryOperationExpression	* src		3494707	1					
ANR	3494734	UnaryOperator	*		3494707	0					
ANR	3494735	Identifier	src		3494707	1					
ANR	3494736	IfStatement	if ( PEND )		3494707	4					
ANR	3494737	Condition	PEND	2416:6:51473:51476	3494707	0	True				
ANR	3494738	Identifier	PEND		3494707	0					
ANR	3494739	ReturnStatement	return ONIGERR_END_PATTERN_AT_ESCAPE ;	2416:12:51479:51515	3494707	1	True				
ANR	3494740	Identifier	ONIGERR_END_PATTERN_AT_ESCAPE		3494707	0					
ANR	3494741	ExpressionStatement	PFETCH_S ( c )	2418:2:51520:51531	3494707	5	True				
ANR	3494742	CallExpression	PFETCH_S ( c )		3494707	0					
ANR	3494743	Callee	PFETCH_S		3494707	0					
ANR	3494744	Identifier	PFETCH_S		3494707	0					
ANR	3494745	ArgumentList	c		3494707	1					
ANR	3494746	Argument	c		3494707	0					
ANR	3494747	Identifier	c		3494707	0					
ANR	3494748	SwitchStatement	switch ( c )		3494707	6					
ANR	3494749	Condition	c	2419:10:51543:51543	3494707	0	True				
ANR	3494750	Identifier	c		3494707	0					
ANR	3494751	CompoundStatement		10:13:159:159	3494707	1					
ANR	3494752	Label	case 'M' :	2420:2:51550:51558	3494707	0	True				
ANR	3494753	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META ) )"		3494707	1					
ANR	3494754	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META )"	2421:8:51568:51630	3494707	0	True				
ANR	3494755	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META )"		3494707	0					
ANR	3494756	Callee	IS_SYNTAX_OP2		3494707	0					
ANR	3494757	Identifier	IS_SYNTAX_OP2		3494707	0					
ANR	3494758	ArgumentList	env -> syntax		3494707	1					
ANR	3494759	Argument	env -> syntax		3494707	0					
ANR	3494760	PtrMemberAccess	env -> syntax		3494707	0					
ANR	3494761	Identifier	env		3494707	0					
ANR	3494762	Identifier	syntax		3494707	1					
ANR	3494763	Argument	ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META		3494707	1					
ANR	3494764	Identifier	ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META		3494707	0					
ANR	3494765	CompoundStatement		12:73:246:246	3494707	1					
ANR	3494766	IfStatement	if ( PEND )		3494707	0					
ANR	3494767	Condition	PEND	2422:10:51645:51648	3494707	0	True				
ANR	3494768	Identifier	PEND		3494707	0					
ANR	3494769	ReturnStatement	return ONIGERR_END_PATTERN_AT_META ;	2422:16:51651:51685	3494707	1	True				
ANR	3494770	Identifier	ONIGERR_END_PATTERN_AT_META		3494707	0					
ANR	3494771	ExpressionStatement	PFETCH_S ( c )	2423:6:51693:51704	3494707	1	True				
ANR	3494772	CallExpression	PFETCH_S ( c )		3494707	0					
ANR	3494773	Callee	PFETCH_S		3494707	0					
ANR	3494774	Identifier	PFETCH_S		3494707	0					
ANR	3494775	ArgumentList	c		3494707	1					
ANR	3494776	Argument	c		3494707	0					
ANR	3494777	Identifier	c		3494707	0					
ANR	3494778	IfStatement	if ( c != '-' )		3494707	2					
ANR	3494779	Condition	c != '-'	2424:10:51716:51723	3494707	0	True				
ANR	3494780	EqualityExpression	c != '-'		3494707	0		!=			
ANR	3494781	Identifier	c		3494707	0					
ANR	3494782	PrimaryExpression	'-'		3494707	1					
ANR	3494783	ReturnStatement	return ONIGERR_META_CODE_SYNTAX ;	2424:20:51726:51757	3494707	1	True				
ANR	3494784	Identifier	ONIGERR_META_CODE_SYNTAX		3494707	0					
ANR	3494785	IfStatement	if ( PEND )		3494707	3					
ANR	3494786	Condition	PEND	2425:10:51769:51772	3494707	0	True				
ANR	3494787	Identifier	PEND		3494707	0					
ANR	3494788	ReturnStatement	return ONIGERR_END_PATTERN_AT_META ;	2425:16:51775:51809	3494707	1	True				
ANR	3494789	Identifier	ONIGERR_END_PATTERN_AT_META		3494707	0					
ANR	3494790	ExpressionStatement	PFETCH_S ( c )	2426:6:51817:51828	3494707	4	True				
ANR	3494791	CallExpression	PFETCH_S ( c )		3494707	0					
ANR	3494792	Callee	PFETCH_S		3494707	0					
ANR	3494793	Identifier	PFETCH_S		3494707	0					
ANR	3494794	ArgumentList	c		3494707	1					
ANR	3494795	Argument	c		3494707	0					
ANR	3494796	Identifier	c		3494707	0					
ANR	3494797	IfStatement	if ( c == MC_ESC ( env -> syntax ) )		3494707	5					
ANR	3494798	Condition	c == MC_ESC ( env -> syntax )	2427:10:51840:51863	3494707	0	True				
ANR	3494799	EqualityExpression	c == MC_ESC ( env -> syntax )		3494707	0		==			
ANR	3494800	Identifier	c		3494707	0					
ANR	3494801	CallExpression	MC_ESC ( env -> syntax )		3494707	1					
ANR	3494802	Callee	MC_ESC		3494707	0					
ANR	3494803	Identifier	MC_ESC		3494707	0					
ANR	3494804	ArgumentList	env -> syntax		3494707	1					
ANR	3494805	Argument	env -> syntax		3494707	0					
ANR	3494806	PtrMemberAccess	env -> syntax		3494707	0					
ANR	3494807	Identifier	env		3494707	0					
ANR	3494808	Identifier	syntax		3494707	1					
ANR	3494809	CompoundStatement		18:36:479:479	3494707	1					
ANR	3494810	ExpressionStatement	"v = fetch_escaped_value ( & p , end , env )"	2428:8:51876:51913	3494707	0	True				
ANR	3494811	AssignmentExpression	"v = fetch_escaped_value ( & p , end , env )"		3494707	0		=			
ANR	3494812	Identifier	v		3494707	0					
ANR	3494813	CallExpression	"fetch_escaped_value ( & p , end , env )"		3494707	1					
ANR	3494814	Callee	fetch_escaped_value		3494707	0					
ANR	3494815	Identifier	fetch_escaped_value		3494707	0					
ANR	3494816	ArgumentList	& p		3494707	1					
ANR	3494817	Argument	& p		3494707	0					
ANR	3494818	UnaryOperationExpression	& p		3494707	0					
ANR	3494819	UnaryOperator	&		3494707	0					
ANR	3494820	Identifier	p		3494707	1					
ANR	3494821	Argument	end		3494707	1					
ANR	3494822	Identifier	end		3494707	0					
ANR	3494823	Argument	env		3494707	2					
ANR	3494824	Identifier	env		3494707	0					
ANR	3494825	IfStatement	if ( v < 0 )		3494707	1					
ANR	3494826	Condition	v < 0	2429:12:51927:51931	3494707	0	True				
ANR	3494827	RelationalExpression	v < 0		3494707	0		<			
ANR	3494828	Identifier	v		3494707	0					
ANR	3494829	PrimaryExpression	0		3494707	1					
ANR	3494830	ReturnStatement	return v ;	2429:19:51934:51942	3494707	1	True				
ANR	3494831	Identifier	v		3494707	0					
ANR	3494832	ExpressionStatement	c = ( OnigCodePoint ) v	2430:8:51952:51973	3494707	2	True				
ANR	3494833	AssignmentExpression	c = ( OnigCodePoint ) v		3494707	0		=			
ANR	3494834	Identifier	c		3494707	0					
ANR	3494835	CastExpression	( OnigCodePoint ) v		3494707	1					
ANR	3494836	CastTarget	OnigCodePoint		3494707	0					
ANR	3494837	Identifier	v		3494707	1					
ANR	3494838	ExpressionStatement	c = ( ( c & 0xff ) | 0x80 )	2432:6:51989:52012	3494707	6	True				
ANR	3494839	AssignmentExpression	c = ( ( c & 0xff ) | 0x80 )		3494707	0		=			
ANR	3494840	Identifier	c		3494707	0					
ANR	3494841	InclusiveOrExpression	( c & 0xff ) | 0x80		3494707	1		|			
ANR	3494842	BitAndExpression	c & 0xff		3494707	0		&			
ANR	3494843	Identifier	c		3494707	0					
ANR	3494844	PrimaryExpression	0xff		3494707	1					
ANR	3494845	PrimaryExpression	0x80		3494707	1					
ANR	3494846	ElseStatement	else		3494707	0					
ANR	3494847	GotoStatement	goto backslash ;	2435:6:52035:52049	3494707	0	True				
ANR	3494848	Identifier	backslash		3494707	0					
ANR	3494849	BreakStatement	break ;	2436:4:52055:52060	3494707	2	True				
ANR	3494850	Label	case 'C' :	2438:2:52065:52073	3494707	3	True				
ANR	3494851	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL ) )"		3494707	4					
ANR	3494852	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL )"	2439:8:52083:52148	3494707	0	True				
ANR	3494853	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL )"		3494707	0					
ANR	3494854	Callee	IS_SYNTAX_OP2		3494707	0					
ANR	3494855	Identifier	IS_SYNTAX_OP2		3494707	0					
ANR	3494856	ArgumentList	env -> syntax		3494707	1					
ANR	3494857	Argument	env -> syntax		3494707	0					
ANR	3494858	PtrMemberAccess	env -> syntax		3494707	0					
ANR	3494859	Identifier	env		3494707	0					
ANR	3494860	Identifier	syntax		3494707	1					
ANR	3494861	Argument	ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL		3494707	1					
ANR	3494862	Identifier	ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL		3494707	0					
ANR	3494863	CompoundStatement		30:76:764:764	3494707	1					
ANR	3494864	IfStatement	if ( PEND )		3494707	0					
ANR	3494865	Condition	PEND	2440:10:52163:52166	3494707	0	True				
ANR	3494866	Identifier	PEND		3494707	0					
ANR	3494867	ReturnStatement	return ONIGERR_END_PATTERN_AT_CONTROL ;	2440:16:52169:52206	3494707	1	True				
ANR	3494868	Identifier	ONIGERR_END_PATTERN_AT_CONTROL		3494707	0					
ANR	3494869	ExpressionStatement	PFETCH_S ( c )	2441:6:52214:52225	3494707	1	True				
ANR	3494870	CallExpression	PFETCH_S ( c )		3494707	0					
ANR	3494871	Callee	PFETCH_S		3494707	0					
ANR	3494872	Identifier	PFETCH_S		3494707	0					
ANR	3494873	ArgumentList	c		3494707	1					
ANR	3494874	Argument	c		3494707	0					
ANR	3494875	Identifier	c		3494707	0					
ANR	3494876	IfStatement	if ( c != '-' )		3494707	2					
ANR	3494877	Condition	c != '-'	2442:10:52237:52244	3494707	0	True				
ANR	3494878	EqualityExpression	c != '-'		3494707	0		!=			
ANR	3494879	Identifier	c		3494707	0					
ANR	3494880	PrimaryExpression	'-'		3494707	1					
ANR	3494881	ReturnStatement	return ONIGERR_CONTROL_CODE_SYNTAX ;	2442:20:52247:52281	3494707	1	True				
ANR	3494882	Identifier	ONIGERR_CONTROL_CODE_SYNTAX		3494707	0					
ANR	3494883	GotoStatement	goto control ;	2443:6:52289:52301	3494707	3	True				
ANR	3494884	Identifier	control		3494707	0					
ANR	3494885	ElseStatement	else		3494707	0					
ANR	3494886	GotoStatement	goto backslash ;	2446:6:52324:52338	3494707	0	True				
ANR	3494887	Identifier	backslash		3494707	0					
ANR	3494888	Label	case 'c' :	2448:2:52343:52351	3494707	5	True				
ANR	3494889	IfStatement	"if ( IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_C_CONTROL ) )"		3494707	6					
ANR	3494890	Condition	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_C_CONTROL )"	2449:8:52361:52412	3494707	0	True				
ANR	3494891	CallExpression	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_C_CONTROL )"		3494707	0					
ANR	3494892	Callee	IS_SYNTAX_OP		3494707	0					
ANR	3494893	Identifier	IS_SYNTAX_OP		3494707	0					
ANR	3494894	ArgumentList	env -> syntax		3494707	1					
ANR	3494895	Argument	env -> syntax		3494707	0					
ANR	3494896	PtrMemberAccess	env -> syntax		3494707	0					
ANR	3494897	Identifier	env		3494707	0					
ANR	3494898	Identifier	syntax		3494707	1					
ANR	3494899	Argument	ONIG_SYN_OP_ESC_C_CONTROL		3494707	1					
ANR	3494900	Identifier	ONIG_SYN_OP_ESC_C_CONTROL		3494707	0					
ANR	3494901	CompoundStatement		40:62:1028:1028	3494707	1					
ANR	3494902	Label	control :	2450:4:52421:52428	3494707	0	True				
ANR	3494903	Identifier	control		3494707	0					
ANR	3494904	IfStatement	if ( PEND )		3494707	1					
ANR	3494905	Condition	PEND	2451:10:52440:52443	3494707	0	True				
ANR	3494906	Identifier	PEND		3494707	0					
ANR	3494907	ReturnStatement	return ONIGERR_END_PATTERN_AT_CONTROL ;	2451:16:52446:52483	3494707	1	True				
ANR	3494908	Identifier	ONIGERR_END_PATTERN_AT_CONTROL		3494707	0					
ANR	3494909	ExpressionStatement	PFETCH_S ( c )	2452:6:52491:52502	3494707	2	True				
ANR	3494910	CallExpression	PFETCH_S ( c )		3494707	0					
ANR	3494911	Callee	PFETCH_S		3494707	0					
ANR	3494912	Identifier	PFETCH_S		3494707	0					
ANR	3494913	ArgumentList	c		3494707	1					
ANR	3494914	Argument	c		3494707	0					
ANR	3494915	Identifier	c		3494707	0					
ANR	3494916	IfStatement	if ( c == '?' )		3494707	3					
ANR	3494917	Condition	c == '?'	2453:10:52514:52521	3494707	0	True				
ANR	3494918	EqualityExpression	c == '?'		3494707	0		==			
ANR	3494919	Identifier	c		3494707	0					
ANR	3494920	PrimaryExpression	'?'		3494707	1					
ANR	3494921	CompoundStatement		44:20:1137:1137	3494707	1					
ANR	3494922	ExpressionStatement	c = 0177	2454:8:52534:52542	3494707	0	True				
ANR	3494923	AssignmentExpression	c = 0177		3494707	0		=			
ANR	3494924	Identifier	c		3494707	0					
ANR	3494925	PrimaryExpression	0177		3494707	1					
ANR	3494926	ElseStatement	else		3494707	0					
ANR	3494927	CompoundStatement		47:11:1176:1176	3494707	0					
ANR	3494928	IfStatement	if ( c == MC_ESC ( env -> syntax ) )		3494707	0					
ANR	3494929	Condition	c == MC_ESC ( env -> syntax )	2457:12:52577:52600	3494707	0	True				
ANR	3494930	EqualityExpression	c == MC_ESC ( env -> syntax )		3494707	0		==			
ANR	3494931	Identifier	c		3494707	0					
ANR	3494932	CallExpression	MC_ESC ( env -> syntax )		3494707	1					
ANR	3494933	Callee	MC_ESC		3494707	0					
ANR	3494934	Identifier	MC_ESC		3494707	0					
ANR	3494935	ArgumentList	env -> syntax		3494707	1					
ANR	3494936	Argument	env -> syntax		3494707	0					
ANR	3494937	PtrMemberAccess	env -> syntax		3494707	0					
ANR	3494938	Identifier	env		3494707	0					
ANR	3494939	Identifier	syntax		3494707	1					
ANR	3494940	CompoundStatement		48:38:1216:1216	3494707	1					
ANR	3494941	ExpressionStatement	"v = fetch_escaped_value ( & p , end , env )"	2458:10:52615:52652	3494707	0	True				
ANR	3494942	AssignmentExpression	"v = fetch_escaped_value ( & p , end , env )"		3494707	0		=			
ANR	3494943	Identifier	v		3494707	0					
ANR	3494944	CallExpression	"fetch_escaped_value ( & p , end , env )"		3494707	1					
ANR	3494945	Callee	fetch_escaped_value		3494707	0					
ANR	3494946	Identifier	fetch_escaped_value		3494707	0					
ANR	3494947	ArgumentList	& p		3494707	1					
ANR	3494948	Argument	& p		3494707	0					
ANR	3494949	UnaryOperationExpression	& p		3494707	0					
ANR	3494950	UnaryOperator	&		3494707	0					
ANR	3494951	Identifier	p		3494707	1					
ANR	3494952	Argument	end		3494707	1					
ANR	3494953	Identifier	end		3494707	0					
ANR	3494954	Argument	env		3494707	2					
ANR	3494955	Identifier	env		3494707	0					
ANR	3494956	IfStatement	if ( v < 0 )		3494707	1					
ANR	3494957	Condition	v < 0	2459:14:52668:52672	3494707	0	True				
ANR	3494958	RelationalExpression	v < 0		3494707	0		<			
ANR	3494959	Identifier	v		3494707	0					
ANR	3494960	PrimaryExpression	0		3494707	1					
ANR	3494961	ReturnStatement	return v ;	2459:21:52675:52683	3494707	1	True				
ANR	3494962	Identifier	v		3494707	0					
ANR	3494963	ExpressionStatement	c = ( OnigCodePoint ) v	2460:10:52695:52716	3494707	2	True				
ANR	3494964	AssignmentExpression	c = ( OnigCodePoint ) v		3494707	0		=			
ANR	3494965	Identifier	c		3494707	0					
ANR	3494966	CastExpression	( OnigCodePoint ) v		3494707	1					
ANR	3494967	CastTarget	OnigCodePoint		3494707	0					
ANR	3494968	Identifier	v		3494707	1					
ANR	3494969	ExpressionStatement	c &= 0x9f	2462:8:52736:52745	3494707	1	True				
ANR	3494970	AssignmentExpression	c &= 0x9f		3494707	0		&=			
ANR	3494971	Identifier	c		3494707	0					
ANR	3494972	PrimaryExpression	0x9f		3494707	1					
ANR	3494973	BreakStatement	break ;	2464:6:52761:52766	3494707	4	True				
ANR	3494974	Label	default :	2468:2:52800:52807	3494707	7	True				
ANR	3494975	Identifier	default		3494707	0					
ANR	3494976	CompoundStatement		60:4:1426:1426	3494707	8					
ANR	3494977	Label	backslash :	2470:4:52819:52828	3494707	0	True				
ANR	3494978	Identifier	backslash		3494707	0					
ANR	3494979	ExpressionStatement	"c = conv_backslash_value ( c , env )"	2471:6:52836:52868	3494707	1	True				
ANR	3494980	AssignmentExpression	"c = conv_backslash_value ( c , env )"		3494707	0		=			
ANR	3494981	Identifier	c		3494707	0					
ANR	3494982	CallExpression	"conv_backslash_value ( c , env )"		3494707	1					
ANR	3494983	Callee	conv_backslash_value		3494707	0					
ANR	3494984	Identifier	conv_backslash_value		3494707	0					
ANR	3494985	ArgumentList	c		3494707	1					
ANR	3494986	Argument	c		3494707	0					
ANR	3494987	Identifier	c		3494707	0					
ANR	3494988	Argument	env		3494707	1					
ANR	3494989	Identifier	env		3494707	0					
ANR	3494990	BreakStatement	break ;	2473:4:52880:52885	3494707	9	True				
ANR	3494991	ExpressionStatement	* src = p	2476:2:52894:52902	3494707	7	True				
ANR	3494992	AssignmentExpression	* src = p		3494707	0		=			
ANR	3494993	UnaryOperationExpression	* src		3494707	0					
ANR	3494994	UnaryOperator	*		3494707	0					
ANR	3494995	Identifier	src		3494707	1					
ANR	3494996	Identifier	p		3494707	1					
ANR	3494997	ReturnStatement	return c ;	2477:2:52906:52914	3494707	8	True				
ANR	3494998	Identifier	c		3494707	0					
ANR	3494999	ReturnType	static int		3494707	1					
ANR	3495000	Identifier	fetch_escaped_value		3494707	2					
ANR	3495001	ParameterList	"UChar * * src , UChar * end , ScanEnv * env"		3494707	3					
ANR	3495002	Parameter	UChar * * src	2409:20:51347:51357	3494707	0	True				
ANR	3495003	ParameterType	UChar * *		3494707	0					
ANR	3495004	Identifier	src		3494707	1					
ANR	3495005	Parameter	UChar * end	2409:33:51360:51369	3494707	1	True				
ANR	3495006	ParameterType	UChar *		3494707	0					
ANR	3495007	Identifier	end		3494707	1					
ANR	3495008	Parameter	ScanEnv * env	2409:45:51372:51383	3494707	2	True				
ANR	3495009	ParameterType	ScanEnv *		3494707	0					
ANR	3495010	Identifier	env		3494707	1					
ANR	3495011	CFGEntryNode	ENTRY		3494707		True				
ANR	3495012	CFGExitNode	EXIT		3494707		True				
ANR	3495013	Symbol	ONIG_SYN_OP_ESC_C_CONTROL		3494707						
ANR	3495014	Symbol	env -> enc		3494707						
ANR	3495015	Symbol	* src		3494707						
ANR	3495016	Symbol	PEND		3494707						
ANR	3495017	Symbol	IS_SYNTAX_OP2		3494707						
ANR	3495018	Symbol	ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META		3494707						
ANR	3495019	Symbol	end		3494707						
ANR	3495020	Symbol	enc		3494707						
ANR	3495021	Symbol	ONIGERR_END_PATTERN_AT_CONTROL		3494707						
ANR	3495022	Symbol	ONIGERR_END_PATTERN_AT_META		3494707						
ANR	3495023	Symbol	c		3494707						
ANR	3495024	Symbol	ONIGERR_META_CODE_SYNTAX		3494707						
ANR	3495025	Symbol	ONIGERR_CONTROL_CODE_SYNTAX		3494707						
ANR	3495026	Symbol	src		3494707						
ANR	3495027	Symbol	* env		3494707						
ANR	3495028	Symbol	IS_SYNTAX_OP		3494707						
ANR	3495029	Symbol	env		3494707						
ANR	3495030	Symbol	MC_ESC		3494707						
ANR	3495031	Symbol	env -> syntax		3494707						
ANR	3495032	Symbol	p		3494707						
ANR	3495033	Symbol	ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL		3494707						
ANR	3495034	Symbol	v		3494707						
ANR	3495035	Symbol	& p		3494707						
ANR	3495036	Symbol	fetch_escaped_value		3494707						
ANR	3495037	Symbol	conv_backslash_value		3494707						
ANR	3495038	Symbol	ONIGERR_END_PATTERN_AT_ESCAPE		3494707						
ANR	3495039	DeclStmt									
ANR	3495040	Decl							int	"int ( OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env )"	fetch_token
ANR	3495041	Function	get_name_end_code_point	2482:0:52999:53238							
ANR	3495042	FunctionDef	get_name_end_code_point (OnigCodePoint start)		3495041	0					
ANR	3495043	CompoundStatement		2484:0:53065:53238	3495041	0					
ANR	3495044	SwitchStatement	switch ( start )		3495041	0					
ANR	3495045	Condition	start	2485:10:53077:53081	3495041	0	True				
ANR	3495046	Identifier	start		3495041	0					
ANR	3495047	CompoundStatement		2:17:18:18	3495041	1					
ANR	3495048	Label	case '<' :	2486:2:53088:53096	3495041	0	True				
ANR	3495049	ReturnStatement	return ( OnigCodePoint ) '>' ;	2486:13:53099:53125	3495041	1	True				
ANR	3495050	CastExpression	( OnigCodePoint ) '>'		3495041	0					
ANR	3495051	CastTarget	OnigCodePoint		3495041	0					
ANR	3495052	PrimaryExpression	'>'		3495041	1					
ANR	3495053	BreakStatement	break ;	2486:41:53127:53132	3495041	2	True				
ANR	3495054	Label	case '\\'' :	2487:2:53136:53145	3495041	3	True				
ANR	3495055	ReturnStatement	return ( OnigCodePoint ) '\\'' ;	2487:13:53147:53174	3495041	4	True				
ANR	3495056	CastExpression	( OnigCodePoint ) '\\''		3495041	0					
ANR	3495057	CastTarget	OnigCodePoint		3495041	0					
ANR	3495058	PrimaryExpression	'\\''		3495041	1					
ANR	3495059	BreakStatement	break ;	2487:42:53176:53181	3495041	5	True				
ANR	3495060	Label	default :	2488:2:53185:53192	3495041	6	True				
ANR	3495061	Identifier	default		3495041	0					
ANR	3495062	BreakStatement	break ;	2489:4:53198:53203	3495041	7	True				
ANR	3495063	ReturnStatement	return ( OnigCodePoint ) 0 ;	2492:2:53212:53236	3495041	1	True				
ANR	3495064	CastExpression	( OnigCodePoint ) 0		3495041	0					
ANR	3495065	CastTarget	OnigCodePoint		3495041	0					
ANR	3495066	PrimaryExpression	0		3495041	1					
ANR	3495067	ReturnType	static OnigCodePoint		3495041	1					
ANR	3495068	Identifier	get_name_end_code_point		3495041	2					
ANR	3495069	ParameterList	OnigCodePoint start		3495041	3					
ANR	3495070	Parameter	OnigCodePoint start	2483:24:53044:53062	3495041	0	True				
ANR	3495071	ParameterType	OnigCodePoint		3495041	0					
ANR	3495072	Identifier	start		3495041	1					
ANR	3495073	CFGEntryNode	ENTRY		3495041		True				
ANR	3495074	CFGExitNode	EXIT		3495041		True				
ANR	3495075	Symbol	start		3495041						
ANR	3495076	Function	fetch_name_with_level	2502:0:53377:55673							
ANR	3495077	FunctionDef	"fetch_name_with_level (OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int * rlevel)"		3495076	0					
ANR	3495078	CompoundStatement		2506:0:53539:55673	3495076	0					
ANR	3495079	IdentifierDeclStatement	"int r , sign , is_num , exist_level ;"	2507:2:53543:53575	3495076	0	True				
ANR	3495080	IdentifierDecl	r		3495076	0					
ANR	3495081	IdentifierDeclType	int		3495076	0					
ANR	3495082	Identifier	r		3495076	1					
ANR	3495083	IdentifierDecl	sign		3495076	1					
ANR	3495084	IdentifierDeclType	int		3495076	0					
ANR	3495085	Identifier	sign		3495076	1					
ANR	3495086	IdentifierDecl	is_num		3495076	2					
ANR	3495087	IdentifierDeclType	int		3495076	0					
ANR	3495088	Identifier	is_num		3495076	1					
ANR	3495089	IdentifierDecl	exist_level		3495076	3					
ANR	3495090	IdentifierDeclType	int		3495076	0					
ANR	3495091	Identifier	exist_level		3495076	1					
ANR	3495092	IdentifierDeclStatement	OnigCodePoint end_code ;	2508:2:53579:53601	3495076	1	True				
ANR	3495093	IdentifierDecl	end_code		3495076	0					
ANR	3495094	IdentifierDeclType	OnigCodePoint		3495076	0					
ANR	3495095	Identifier	end_code		3495076	1					
ANR	3495096	IdentifierDeclStatement	OnigCodePoint c = 0 ;	2509:2:53605:53624	3495076	2	True				
ANR	3495097	IdentifierDecl	c = 0		3495076	0					
ANR	3495098	IdentifierDeclType	OnigCodePoint		3495076	0					
ANR	3495099	Identifier	c		3495076	1					
ANR	3495100	AssignmentExpression	c = 0		3495076	2		=			
ANR	3495101	Identifier	c		3495076	0					
ANR	3495102	PrimaryExpression	0		3495076	1					
ANR	3495103	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2510:2:53628:53655	3495076	3	True				
ANR	3495104	IdentifierDecl	enc = env -> enc		3495076	0					
ANR	3495105	IdentifierDeclType	OnigEncoding		3495076	0					
ANR	3495106	Identifier	enc		3495076	1					
ANR	3495107	AssignmentExpression	enc = env -> enc		3495076	2		=			
ANR	3495108	Identifier	enc		3495076	0					
ANR	3495109	PtrMemberAccess	env -> enc		3495076	1					
ANR	3495110	Identifier	env		3495076	0					
ANR	3495111	Identifier	enc		3495076	1					
ANR	3495112	IdentifierDeclStatement	UChar * name_end ;	2511:2:53659:53674	3495076	4	True				
ANR	3495113	IdentifierDecl	* name_end		3495076	0					
ANR	3495114	IdentifierDeclType	UChar *		3495076	0					
ANR	3495115	Identifier	name_end		3495076	1					
ANR	3495116	IdentifierDeclStatement	UChar * pnum_head ;	2512:2:53678:53694	3495076	5	True				
ANR	3495117	IdentifierDecl	* pnum_head		3495076	0					
ANR	3495118	IdentifierDeclType	UChar *		3495076	0					
ANR	3495119	Identifier	pnum_head		3495076	1					
ANR	3495120	IdentifierDeclStatement	UChar * p = * src ;	2513:2:53698:53713	3495076	6	True				
ANR	3495121	IdentifierDecl	* p = * src		3495076	0					
ANR	3495122	IdentifierDeclType	UChar *		3495076	0					
ANR	3495123	Identifier	p		3495076	1					
ANR	3495124	AssignmentExpression	* p = * src		3495076	2		=			
ANR	3495125	Identifier	p		3495076	0					
ANR	3495126	UnaryOperationExpression	* src		3495076	1					
ANR	3495127	UnaryOperator	*		3495076	0					
ANR	3495128	Identifier	src		3495076	1					
ANR	3495129	ExpressionStatement	PFETCH_READY	2514:2:53717:53729	3495076	7	True				
ANR	3495130	Identifier	PFETCH_READY		3495076	0					
ANR	3495131	ExpressionStatement	* rback_num = 0	2516:2:53734:53748	3495076	8	True				
ANR	3495132	AssignmentExpression	* rback_num = 0		3495076	0		=			
ANR	3495133	UnaryOperationExpression	* rback_num		3495076	0					
ANR	3495134	UnaryOperator	*		3495076	0					
ANR	3495135	Identifier	rback_num		3495076	1					
ANR	3495136	PrimaryExpression	0		3495076	1					
ANR	3495137	ExpressionStatement	is_num = exist_level = 0	2517:2:53752:53776	3495076	9	True				
ANR	3495138	AssignmentExpression	is_num = exist_level = 0		3495076	0		=			
ANR	3495139	Identifier	is_num		3495076	0					
ANR	3495140	AssignmentExpression	exist_level = 0		3495076	1		=			
ANR	3495141	Identifier	exist_level		3495076	0					
ANR	3495142	PrimaryExpression	0		3495076	1					
ANR	3495143	ExpressionStatement	sign = 1	2518:2:53780:53788	3495076	10	True				
ANR	3495144	AssignmentExpression	sign = 1		3495076	0		=			
ANR	3495145	Identifier	sign		3495076	0					
ANR	3495146	PrimaryExpression	1		3495076	1					
ANR	3495147	ExpressionStatement	pnum_head = * src	2519:2:53792:53808	3495076	11	True				
ANR	3495148	AssignmentExpression	pnum_head = * src		3495076	0		=			
ANR	3495149	Identifier	pnum_head		3495076	0					
ANR	3495150	UnaryOperationExpression	* src		3495076	1					
ANR	3495151	UnaryOperator	*		3495076	0					
ANR	3495152	Identifier	src		3495076	1					
ANR	3495153	ExpressionStatement	end_code = get_name_end_code_point ( start_code )	2521:2:53813:53859	3495076	12	True				
ANR	3495154	AssignmentExpression	end_code = get_name_end_code_point ( start_code )		3495076	0		=			
ANR	3495155	Identifier	end_code		3495076	0					
ANR	3495156	CallExpression	get_name_end_code_point ( start_code )		3495076	1					
ANR	3495157	Callee	get_name_end_code_point		3495076	0					
ANR	3495158	Identifier	get_name_end_code_point		3495076	0					
ANR	3495159	ArgumentList	start_code		3495076	1					
ANR	3495160	Argument	start_code		3495076	0					
ANR	3495161	Identifier	start_code		3495076	0					
ANR	3495162	ExpressionStatement	name_end = end	2523:2:53864:53878	3495076	13	True				
ANR	3495163	AssignmentExpression	name_end = end		3495076	0		=			
ANR	3495164	Identifier	name_end		3495076	0					
ANR	3495165	Identifier	end		3495076	1					
ANR	3495166	ExpressionStatement	r = 0	2524:2:53882:53887	3495076	14	True				
ANR	3495167	AssignmentExpression	r = 0		3495076	0		=			
ANR	3495168	Identifier	r		3495076	0					
ANR	3495169	PrimaryExpression	0		3495076	1					
ANR	3495170	IfStatement	if ( PEND )		3495076	15					
ANR	3495171	Condition	PEND	2525:6:53895:53898	3495076	0	True				
ANR	3495172	Identifier	PEND		3495076	0					
ANR	3495173	CompoundStatement		20:12:361:361	3495076	1					
ANR	3495174	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2526:4:53907:53938	3495076	0	True				
ANR	3495175	Identifier	ONIGERR_EMPTY_GROUP_NAME		3495076	0					
ANR	3495176	ElseStatement	else		3495076	0					
ANR	3495177	CompoundStatement		23:7:411:411	3495076	0					
ANR	3495178	ExpressionStatement	PFETCH ( c )	2529:4:53957:53966	3495076	0	True				
ANR	3495179	CallExpression	PFETCH ( c )		3495076	0					
ANR	3495180	Callee	PFETCH		3495076	0					
ANR	3495181	Identifier	PFETCH		3495076	0					
ANR	3495182	ArgumentList	c		3495076	1					
ANR	3495183	Argument	c		3495076	0					
ANR	3495184	Identifier	c		3495076	0					
ANR	3495185	IfStatement	if ( c == end_code )		3495076	1					
ANR	3495186	Condition	c == end_code	2530:8:53976:53988	3495076	0	True				
ANR	3495187	EqualityExpression	c == end_code		3495076	0		==			
ANR	3495188	Identifier	c		3495076	0					
ANR	3495189	Identifier	end_code		3495076	1					
ANR	3495190	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2531:6:53997:54028	3495076	1	True				
ANR	3495191	Identifier	ONIGERR_EMPTY_GROUP_NAME		3495076	0					
ANR	3495192	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		3495076	2					
ANR	3495193	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2533:8:54039:54067	3495076	0	True				
ANR	3495194	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		3495076	0					
ANR	3495195	Callee	ONIGENC_IS_CODE_DIGIT		3495076	0					
ANR	3495196	Identifier	ONIGENC_IS_CODE_DIGIT		3495076	0					
ANR	3495197	ArgumentList	enc		3495076	1					
ANR	3495198	Argument	enc		3495076	0					
ANR	3495199	Identifier	enc		3495076	0					
ANR	3495200	Argument	c		3495076	1					
ANR	3495201	Identifier	c		3495076	0					
ANR	3495202	CompoundStatement		28:39:530:530	3495076	1					
ANR	3495203	ExpressionStatement	is_num = 1	2534:6:54078:54088	3495076	0	True				
ANR	3495204	AssignmentExpression	is_num = 1		3495076	0		=			
ANR	3495205	Identifier	is_num		3495076	0					
ANR	3495206	PrimaryExpression	1		3495076	1					
ANR	3495207	ElseStatement	else		3495076	0					
ANR	3495208	IfStatement	if ( c == '-' )		3495076	0					
ANR	3495209	Condition	c == '-'	2536:13:54109:54116	3495076	0	True				
ANR	3495210	EqualityExpression	c == '-'		3495076	0		==			
ANR	3495211	Identifier	c		3495076	0					
ANR	3495212	PrimaryExpression	'-'		3495076	1					
ANR	3495213	CompoundStatement		31:23:579:579	3495076	1					
ANR	3495214	ExpressionStatement	is_num = 2	2537:6:54127:54137	3495076	0	True				
ANR	3495215	AssignmentExpression	is_num = 2		3495076	0		=			
ANR	3495216	Identifier	is_num		3495076	0					
ANR	3495217	PrimaryExpression	2		3495076	1					
ANR	3495218	ExpressionStatement	sign = - 1	2538:6:54145:54154	3495076	1	True				
ANR	3495219	AssignmentExpression	sign = - 1		3495076	0		=			
ANR	3495220	Identifier	sign		3495076	0					
ANR	3495221	UnaryOperationExpression	- 1		3495076	1					
ANR	3495222	UnaryOperator	-		3495076	0					
ANR	3495223	PrimaryExpression	1		3495076	1					
ANR	3495224	ExpressionStatement	pnum_head = p	2539:6:54162:54175	3495076	2	True				
ANR	3495225	AssignmentExpression	pnum_head = p		3495076	0		=			
ANR	3495226	Identifier	pnum_head		3495076	0					
ANR	3495227	Identifier	p		3495076	1					
ANR	3495228	ElseStatement	else		3495076	0					
ANR	3495229	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		3495076	0					
ANR	3495230	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2541:13:54196:54224	3495076	0	True				
ANR	3495231	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		3495076	0					
ANR	3495232	UnaryOperator	!		3495076	0					
ANR	3495233	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		3495076	1					
ANR	3495234	Callee	ONIGENC_IS_CODE_WORD		3495076	0					
ANR	3495235	Identifier	ONIGENC_IS_CODE_WORD		3495076	0					
ANR	3495236	ArgumentList	enc		3495076	1					
ANR	3495237	Argument	enc		3495076	0					
ANR	3495238	Identifier	enc		3495076	0					
ANR	3495239	Argument	c		3495076	1					
ANR	3495240	Identifier	c		3495076	0					
ANR	3495241	CompoundStatement		36:44:687:687	3495076	1					
ANR	3495242	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2542:6:54235:54273	3495076	0	True				
ANR	3495243	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3495076	0		=			
ANR	3495244	Identifier	r		3495076	0					
ANR	3495245	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3495076	1					
ANR	3495246	WhileStatement	while ( ! PEND )		3495076	16					
ANR	3495247	Condition	! PEND	2546:9:54295:54299	3495076	0	True				
ANR	3495248	UnaryOperationExpression	! PEND		3495076	0					
ANR	3495249	UnaryOperator	!		3495076	0					
ANR	3495250	Identifier	PEND		3495076	1					
ANR	3495251	CompoundStatement		41:16:762:762	3495076	1					
ANR	3495252	ExpressionStatement	name_end = p	2547:4:54308:54320	3495076	0	True				
ANR	3495253	AssignmentExpression	name_end = p		3495076	0		=			
ANR	3495254	Identifier	name_end		3495076	0					
ANR	3495255	Identifier	p		3495076	1					
ANR	3495256	ExpressionStatement	PFETCH ( c )	2548:4:54326:54335	3495076	1	True				
ANR	3495257	CallExpression	PFETCH ( c )		3495076	0					
ANR	3495258	Callee	PFETCH		3495076	0					
ANR	3495259	Identifier	PFETCH		3495076	0					
ANR	3495260	ArgumentList	c		3495076	1					
ANR	3495261	Argument	c		3495076	0					
ANR	3495262	Identifier	c		3495076	0					
ANR	3495263	IfStatement	if ( c == end_code || c == ')' || c == '+' || c == '-' )		3495076	2					
ANR	3495264	Condition	c == end_code || c == ')' || c == '+' || c == '-'	2549:8:54345:54393	3495076	0	True				
ANR	3495265	OrExpression	c == end_code || c == ')' || c == '+' || c == '-'		3495076	0		||			
ANR	3495266	EqualityExpression	c == end_code		3495076	0		==			
ANR	3495267	Identifier	c		3495076	0					
ANR	3495268	Identifier	end_code		3495076	1					
ANR	3495269	OrExpression	c == ')' || c == '+' || c == '-'		3495076	1		||			
ANR	3495270	EqualityExpression	c == ')'		3495076	0		==			
ANR	3495271	Identifier	c		3495076	0					
ANR	3495272	PrimaryExpression	')'		3495076	1					
ANR	3495273	OrExpression	c == '+' || c == '-'		3495076	1		||			
ANR	3495274	EqualityExpression	c == '+'		3495076	0		==			
ANR	3495275	Identifier	c		3495076	0					
ANR	3495276	PrimaryExpression	'+'		3495076	1					
ANR	3495277	EqualityExpression	c == '-'		3495076	1		==			
ANR	3495278	Identifier	c		3495076	0					
ANR	3495279	PrimaryExpression	'-'		3495076	1					
ANR	3495280	CompoundStatement		44:59:856:856	3495076	1					
ANR	3495281	IfStatement	if ( is_num == 2 )		3495076	0					
ANR	3495282	Condition	is_num == 2	2550:10:54408:54418	3495076	0	True				
ANR	3495283	EqualityExpression	is_num == 2		3495076	0		==			
ANR	3495284	Identifier	is_num		3495076	0					
ANR	3495285	PrimaryExpression	2		3495076	1					
ANR	3495286	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2550:24:54422:54452	3495076	1	True				
ANR	3495287	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		3495076	0		=			
ANR	3495288	Identifier	r		3495076	0					
ANR	3495289	Identifier	ONIGERR_INVALID_GROUP_NAME		3495076	1					
ANR	3495290	BreakStatement	break ;	2551:6:54460:54465	3495076	1	True				
ANR	3495291	IfStatement	if ( is_num != 0 )		3495076	3					
ANR	3495292	Condition	is_num != 0	2554:8:54482:54492	3495076	0	True				
ANR	3495293	EqualityExpression	is_num != 0		3495076	0		!=			
ANR	3495294	Identifier	is_num		3495076	0					
ANR	3495295	PrimaryExpression	0		3495076	1					
ANR	3495296	CompoundStatement		49:21:955:955	3495076	1					
ANR	3495297	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		3495076	0					
ANR	3495298	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2555:10:54507:54535	3495076	0	True				
ANR	3495299	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		3495076	0					
ANR	3495300	Callee	ONIGENC_IS_CODE_DIGIT		3495076	0					
ANR	3495301	Identifier	ONIGENC_IS_CODE_DIGIT		3495076	0					
ANR	3495302	ArgumentList	enc		3495076	1					
ANR	3495303	Argument	enc		3495076	0					
ANR	3495304	Identifier	enc		3495076	0					
ANR	3495305	Argument	c		3495076	1					
ANR	3495306	Identifier	c		3495076	0					
ANR	3495307	CompoundStatement		50:41:998:998	3495076	1					
ANR	3495308	ExpressionStatement	is_num = 1	2556:8:54548:54558	3495076	0	True				
ANR	3495309	AssignmentExpression	is_num = 1		3495076	0		=			
ANR	3495310	Identifier	is_num		3495076	0					
ANR	3495311	PrimaryExpression	1		3495076	1					
ANR	3495312	ElseStatement	else		3495076	0					
ANR	3495313	CompoundStatement		53:11:1039:1039	3495076	0					
ANR	3495314	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2559:8:54589:54619	3495076	0	True				
ANR	3495315	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		3495076	0		=			
ANR	3495316	Identifier	r		3495076	0					
ANR	3495317	Identifier	ONIGERR_INVALID_GROUP_NAME		3495076	1					
ANR	3495318	ExpressionStatement	is_num = 0	2560:8:54629:54639	3495076	1	True				
ANR	3495319	AssignmentExpression	is_num = 0		3495076	0		=			
ANR	3495320	Identifier	is_num		3495076	0					
ANR	3495321	PrimaryExpression	0		3495076	1					
ANR	3495322	ElseStatement	else		3495076	0					
ANR	3495323	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		3495076	0					
ANR	3495324	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2563:13:54668:54696	3495076	0	True				
ANR	3495325	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		3495076	0					
ANR	3495326	UnaryOperator	!		3495076	0					
ANR	3495327	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		3495076	1					
ANR	3495328	Callee	ONIGENC_IS_CODE_WORD		3495076	0					
ANR	3495329	Identifier	ONIGENC_IS_CODE_WORD		3495076	0					
ANR	3495330	ArgumentList	enc		3495076	1					
ANR	3495331	Argument	enc		3495076	0					
ANR	3495332	Identifier	enc		3495076	0					
ANR	3495333	Argument	c		3495076	1					
ANR	3495334	Identifier	c		3495076	0					
ANR	3495335	CompoundStatement		58:44:1159:1159	3495076	1					
ANR	3495336	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2564:6:54707:54745	3495076	0	True				
ANR	3495337	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3495076	0		=			
ANR	3495338	Identifier	r		3495076	0					
ANR	3495339	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3495076	1					
ANR	3495340	IfStatement	if ( r == 0 && c != end_code )		3495076	17					
ANR	3495341	Condition	r == 0 && c != end_code	2568:6:54764:54786	3495076	0	True				
ANR	3495342	AndExpression	r == 0 && c != end_code		3495076	0		&&			
ANR	3495343	EqualityExpression	r == 0		3495076	0		==			
ANR	3495344	Identifier	r		3495076	0					
ANR	3495345	PrimaryExpression	0		3495076	1					
ANR	3495346	EqualityExpression	c != end_code		3495076	1		!=			
ANR	3495347	Identifier	c		3495076	0					
ANR	3495348	Identifier	end_code		3495076	1					
ANR	3495349	CompoundStatement		63:31:1249:1249	3495076	1					
ANR	3495350	IfStatement	if ( c == '+' || c == '-' )		3495076	0					
ANR	3495351	Condition	c == '+' || c == '-'	2569:8:54799:54818	3495076	0	True				
ANR	3495352	OrExpression	c == '+' || c == '-'		3495076	0		||			
ANR	3495353	EqualityExpression	c == '+'		3495076	0		==			
ANR	3495354	Identifier	c		3495076	0					
ANR	3495355	PrimaryExpression	'+'		3495076	1					
ANR	3495356	EqualityExpression	c == '-'		3495076	1		==			
ANR	3495357	Identifier	c		3495076	0					
ANR	3495358	PrimaryExpression	'-'		3495076	1					
ANR	3495359	CompoundStatement		66:6:1306:1336	3495076	1					
ANR	3495360	IdentifierDeclStatement	int level ;	2570:6:54829:54838	3495076	0	True				
ANR	3495361	IdentifierDecl	level		3495076	0					
ANR	3495362	IdentifierDeclType	int		3495076	0					
ANR	3495363	Identifier	level		3495076	1					
ANR	3495364	IdentifierDeclStatement	int flag = ( c == '-' ? - 1 : 1 ) ;	2571:6:54846:54876	3495076	1	True				
ANR	3495365	IdentifierDecl	flag = ( c == '-' ? - 1 : 1 )		3495076	0					
ANR	3495366	IdentifierDeclType	int		3495076	0					
ANR	3495367	Identifier	flag		3495076	1					
ANR	3495368	AssignmentExpression	flag = ( c == '-' ? - 1 : 1 )		3495076	2		=			
ANR	3495369	Identifier	flag		3495076	0					
ANR	3495370	ConditionalExpression	c == '-' ? - 1 : 1		3495076	1					
ANR	3495371	Condition	c == '-'		3495076	0					
ANR	3495372	EqualityExpression	c == '-'		3495076	0		==			
ANR	3495373	Identifier	c		3495076	0					
ANR	3495374	PrimaryExpression	'-'		3495076	1					
ANR	3495375	UnaryOperationExpression	- 1		3495076	1					
ANR	3495376	UnaryOperator	-		3495076	0					
ANR	3495377	PrimaryExpression	1		3495076	1					
ANR	3495378	PrimaryExpression	1		3495076	2					
ANR	3495379	ExpressionStatement	PFETCH ( c )	2573:6:54885:54894	3495076	2	True				
ANR	3495380	CallExpression	PFETCH ( c )		3495076	0					
ANR	3495381	Callee	PFETCH		3495076	0					
ANR	3495382	Identifier	PFETCH		3495076	0					
ANR	3495383	ArgumentList	c		3495076	1					
ANR	3495384	Argument	c		3495076	0					
ANR	3495385	Identifier	c		3495076	0					
ANR	3495386	IfStatement	"if ( ! ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		3495076	3					
ANR	3495387	Condition	"! ONIGENC_IS_CODE_DIGIT ( enc , c )"	2574:10:54906:54936	3495076	0	True				
ANR	3495388	UnaryOperationExpression	"! ONIGENC_IS_CODE_DIGIT ( enc , c )"		3495076	0					
ANR	3495389	UnaryOperator	!		3495076	0					
ANR	3495390	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		3495076	1					
ANR	3495391	Callee	ONIGENC_IS_CODE_DIGIT		3495076	0					
ANR	3495392	Identifier	ONIGENC_IS_CODE_DIGIT		3495076	0					
ANR	3495393	ArgumentList	enc		3495076	1					
ANR	3495394	Argument	enc		3495076	0					
ANR	3495395	Identifier	enc		3495076	0					
ANR	3495396	Argument	c		3495076	1					
ANR	3495397	Identifier	c		3495076	0					
ANR	3495398	GotoStatement	goto err ;	2574:43:54939:54947	3495076	1	True				
ANR	3495399	Identifier	err		3495076	0					
ANR	3495400	ExpressionStatement	PUNFETCH	2575:6:54955:54963	3495076	4	True				
ANR	3495401	Identifier	PUNFETCH		3495076	0					
ANR	3495402	ExpressionStatement	"level = onig_scan_unsigned_number ( & p , end , enc )"	2576:6:54971:55018	3495076	5	True				
ANR	3495403	AssignmentExpression	"level = onig_scan_unsigned_number ( & p , end , enc )"		3495076	0		=			
ANR	3495404	Identifier	level		3495076	0					
ANR	3495405	CallExpression	"onig_scan_unsigned_number ( & p , end , enc )"		3495076	1					
ANR	3495406	Callee	onig_scan_unsigned_number		3495076	0					
ANR	3495407	Identifier	onig_scan_unsigned_number		3495076	0					
ANR	3495408	ArgumentList	& p		3495076	1					
ANR	3495409	Argument	& p		3495076	0					
ANR	3495410	UnaryOperationExpression	& p		3495076	0					
ANR	3495411	UnaryOperator	&		3495076	0					
ANR	3495412	Identifier	p		3495076	1					
ANR	3495413	Argument	end		3495076	1					
ANR	3495414	Identifier	end		3495076	0					
ANR	3495415	Argument	enc		3495076	2					
ANR	3495416	Identifier	enc		3495076	0					
ANR	3495417	IfStatement	if ( level < 0 )		3495076	6					
ANR	3495418	Condition	level < 0	2577:10:55030:55038	3495076	0	True				
ANR	3495419	RelationalExpression	level < 0		3495076	0		<			
ANR	3495420	Identifier	level		3495076	0					
ANR	3495421	PrimaryExpression	0		3495076	1					
ANR	3495422	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	2577:21:55041:55070	3495076	1	True				
ANR	3495423	Identifier	ONIGERR_TOO_BIG_NUMBER		3495076	0					
ANR	3495424	ExpressionStatement	* rlevel = ( level * flag )	2578:6:55078:55102	3495076	7	True				
ANR	3495425	AssignmentExpression	* rlevel = ( level * flag )		3495076	0		=			
ANR	3495426	UnaryOperationExpression	* rlevel		3495076	0					
ANR	3495427	UnaryOperator	*		3495076	0					
ANR	3495428	Identifier	rlevel		3495076	1					
ANR	3495429	MultiplicativeExpression	level * flag		3495076	1		*			
ANR	3495430	Identifier	level		3495076	0					
ANR	3495431	Identifier	flag		3495076	1					
ANR	3495432	ExpressionStatement	exist_level = 1	2579:6:55110:55125	3495076	8	True				
ANR	3495433	AssignmentExpression	exist_level = 1		3495076	0		=			
ANR	3495434	Identifier	exist_level		3495076	0					
ANR	3495435	PrimaryExpression	1		3495076	1					
ANR	3495436	ExpressionStatement	PFETCH ( c )	2581:6:55134:55143	3495076	9	True				
ANR	3495437	CallExpression	PFETCH ( c )		3495076	0					
ANR	3495438	Callee	PFETCH		3495076	0					
ANR	3495439	Identifier	PFETCH		3495076	0					
ANR	3495440	ArgumentList	c		3495076	1					
ANR	3495441	Argument	c		3495076	0					
ANR	3495442	Identifier	c		3495076	0					
ANR	3495443	IfStatement	if ( c == end_code )		3495076	10					
ANR	3495444	Condition	c == end_code	2582:10:55155:55167	3495076	0	True				
ANR	3495445	EqualityExpression	c == end_code		3495076	0		==			
ANR	3495446	Identifier	c		3495076	0					
ANR	3495447	Identifier	end_code		3495076	1					
ANR	3495448	GotoStatement	goto end ;	2583:1:55171:55179	3495076	1	True				
ANR	3495449	Identifier	end		3495076	0					
ANR	3495450	Label	err :	2586:2:55190:55193	3495076	1	True				
ANR	3495451	Identifier	err		3495076	0					
ANR	3495452	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2587:4:55199:55229	3495076	2	True				
ANR	3495453	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		3495076	0		=			
ANR	3495454	Identifier	r		3495076	0					
ANR	3495455	Identifier	ONIGERR_INVALID_GROUP_NAME		3495076	1					
ANR	3495456	ExpressionStatement	name_end = end	2588:4:55235:55249	3495076	3	True				
ANR	3495457	AssignmentExpression	name_end = end		3495076	0		=			
ANR	3495458	Identifier	name_end		3495076	0					
ANR	3495459	Identifier	end		3495076	1					
ANR	3495460	Label	end :	2591:1:55257:55260	3495076	18	True				
ANR	3495461	Identifier	end		3495076	0					
ANR	3495462	IfStatement	if ( r == 0 )		3495076	19					
ANR	3495463	Condition	r == 0	2592:6:55268:55273	3495076	0	True				
ANR	3495464	EqualityExpression	r == 0		3495076	0		==			
ANR	3495465	Identifier	r		3495076	0					
ANR	3495466	PrimaryExpression	0		3495076	1					
ANR	3495467	CompoundStatement		87:14:1736:1736	3495076	1					
ANR	3495468	IfStatement	if ( is_num != 0 )		3495076	0					
ANR	3495469	Condition	is_num != 0	2593:8:55286:55296	3495076	0	True				
ANR	3495470	EqualityExpression	is_num != 0		3495076	0		!=			
ANR	3495471	Identifier	is_num		3495076	0					
ANR	3495472	PrimaryExpression	0		3495076	1					
ANR	3495473	CompoundStatement		88:21:1759:1759	3495076	1					
ANR	3495474	ExpressionStatement	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"	2594:6:55307:55372	3495076	0	True				
ANR	3495475	AssignmentExpression	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		3495076	0		=			
ANR	3495476	UnaryOperationExpression	* rback_num		3495076	0					
ANR	3495477	UnaryOperator	*		3495076	0					
ANR	3495478	Identifier	rback_num		3495076	1					
ANR	3495479	CallExpression	"onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		3495076	1					
ANR	3495480	Callee	onig_scan_unsigned_number		3495076	0					
ANR	3495481	Identifier	onig_scan_unsigned_number		3495076	0					
ANR	3495482	ArgumentList	& pnum_head		3495076	1					
ANR	3495483	Argument	& pnum_head		3495076	0					
ANR	3495484	UnaryOperationExpression	& pnum_head		3495076	0					
ANR	3495485	UnaryOperator	&		3495076	0					
ANR	3495486	Identifier	pnum_head		3495076	1					
ANR	3495487	Argument	name_end		3495076	1					
ANR	3495488	Identifier	name_end		3495076	0					
ANR	3495489	Argument	enc		3495076	2					
ANR	3495490	Identifier	enc		3495076	0					
ANR	3495491	IfStatement	if ( * rback_num < 0 )		3495076	1					
ANR	3495492	Condition	* rback_num < 0	2595:10:55384:55397	3495076	0	True				
ANR	3495493	RelationalExpression	* rback_num < 0		3495076	0		<			
ANR	3495494	UnaryOperationExpression	* rback_num		3495076	0					
ANR	3495495	UnaryOperator	*		3495076	0					
ANR	3495496	Identifier	rback_num		3495076	1					
ANR	3495497	PrimaryExpression	0		3495076	1					
ANR	3495498	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	2595:26:55400:55429	3495076	1	True				
ANR	3495499	Identifier	ONIGERR_TOO_BIG_NUMBER		3495076	0					
ANR	3495500	ElseStatement	else		3495076	0					
ANR	3495501	IfStatement	if ( * rback_num == 0 )		3495076	0					
ANR	3495502	Condition	* rback_num == 0	2596:15:55446:55460	3495076	0	True				
ANR	3495503	EqualityExpression	* rback_num == 0		3495076	0		==			
ANR	3495504	UnaryOperationExpression	* rback_num		3495076	0					
ANR	3495505	UnaryOperator	*		3495076	0					
ANR	3495506	Identifier	rback_num		3495076	1					
ANR	3495507	PrimaryExpression	0		3495076	1					
ANR	3495508	GotoStatement	goto err ;	2596:32:55463:55471	3495076	1	True				
ANR	3495509	Identifier	err		3495076	0					
ANR	3495510	ExpressionStatement	* rback_num *= sign	2598:6:55480:55498	3495076	2	True				
ANR	3495511	AssignmentExpression	* rback_num *= sign		3495076	0		*=			
ANR	3495512	UnaryOperationExpression	* rback_num		3495076	0					
ANR	3495513	UnaryOperator	*		3495076	0					
ANR	3495514	Identifier	rback_num		3495076	1					
ANR	3495515	Identifier	sign		3495076	1					
ANR	3495516	ExpressionStatement	* rname_end = name_end	2601:4:55511:55532	3495076	1	True				
ANR	3495517	AssignmentExpression	* rname_end = name_end		3495076	0		=			
ANR	3495518	UnaryOperationExpression	* rname_end		3495076	0					
ANR	3495519	UnaryOperator	*		3495076	0					
ANR	3495520	Identifier	rname_end		3495076	1					
ANR	3495521	Identifier	name_end		3495076	1					
ANR	3495522	ExpressionStatement	* src = p	2602:4:55538:55546	3495076	2	True				
ANR	3495523	AssignmentExpression	* src = p		3495076	0		=			
ANR	3495524	UnaryOperationExpression	* src		3495076	0					
ANR	3495525	UnaryOperator	*		3495076	0					
ANR	3495526	Identifier	src		3495076	1					
ANR	3495527	Identifier	p		3495076	1					
ANR	3495528	ReturnStatement	return ( exist_level ? 1 : 0 ) ;	2603:4:55552:55580	3495076	3	True				
ANR	3495529	ConditionalExpression	exist_level ? 1 : 0		3495076	0					
ANR	3495530	Condition	exist_level		3495076	0					
ANR	3495531	Identifier	exist_level		3495076	0					
ANR	3495532	PrimaryExpression	1		3495076	1					
ANR	3495533	PrimaryExpression	0		3495076	2					
ANR	3495534	ElseStatement	else		3495076	0					
ANR	3495535	CompoundStatement		100:7:2053:2053	3495076	0					
ANR	3495536	ExpressionStatement	"onig_scan_env_set_error_string ( env , r , * src , name_end )"	2606:4:55599:55653	3495076	0	True				
ANR	3495537	CallExpression	"onig_scan_env_set_error_string ( env , r , * src , name_end )"		3495076	0					
ANR	3495538	Callee	onig_scan_env_set_error_string		3495076	0					
ANR	3495539	Identifier	onig_scan_env_set_error_string		3495076	0					
ANR	3495540	ArgumentList	env		3495076	1					
ANR	3495541	Argument	env		3495076	0					
ANR	3495542	Identifier	env		3495076	0					
ANR	3495543	Argument	r		3495076	1					
ANR	3495544	Identifier	r		3495076	0					
ANR	3495545	Argument	* src		3495076	2					
ANR	3495546	UnaryOperationExpression	* src		3495076	0					
ANR	3495547	UnaryOperator	*		3495076	0					
ANR	3495548	Identifier	src		3495076	1					
ANR	3495549	Argument	name_end		3495076	3					
ANR	3495550	Identifier	name_end		3495076	0					
ANR	3495551	ReturnStatement	return r ;	2607:4:55659:55667	3495076	1	True				
ANR	3495552	Identifier	r		3495076	0					
ANR	3495553	ReturnType	static int		3495076	1					
ANR	3495554	Identifier	fetch_name_with_level		3495076	2					
ANR	3495555	ParameterList	"OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int * rlevel"		3495076	3					
ANR	3495556	Parameter	OnigCodePoint start_code	2503:22:53410:53433	3495076	0	True				
ANR	3495557	ParameterType	OnigCodePoint		3495076	0					
ANR	3495558	Identifier	start_code		3495076	1					
ANR	3495559	Parameter	UChar * * src	2503:48:53436:53446	3495076	1	True				
ANR	3495560	ParameterType	UChar * *		3495076	0					
ANR	3495561	Identifier	src		3495076	1					
ANR	3495562	Parameter	UChar * end	2503:61:53449:53458	3495076	2	True				
ANR	3495563	ParameterType	UChar *		3495076	0					
ANR	3495564	Identifier	end		3495076	1					
ANR	3495565	Parameter	UChar * * rname_end	2504:8:53469:53485	3495076	3	True				
ANR	3495566	ParameterType	UChar * *		3495076	0					
ANR	3495567	Identifier	rname_end		3495076	1					
ANR	3495568	Parameter	ScanEnv * env	2504:27:53488:53499	3495076	4	True				
ANR	3495569	ParameterType	ScanEnv *		3495076	0					
ANR	3495570	Identifier	env		3495076	1					
ANR	3495571	Parameter	int * rback_num	2505:8:53510:53523	3495076	5	True				
ANR	3495572	ParameterType	int *		3495076	0					
ANR	3495573	Identifier	rback_num		3495076	1					
ANR	3495574	Parameter	int * rlevel	2505:24:53526:53536	3495076	6	True				
ANR	3495575	ParameterType	int *		3495076	0					
ANR	3495576	Identifier	rlevel		3495076	1					
ANR	3495577	CFGEntryNode	ENTRY		3495076		True				
ANR	3495578	CFGExitNode	EXIT		3495076		True				
ANR	3495579	Symbol	ONIGERR_EMPTY_GROUP_NAME		3495076						
ANR	3495580	Symbol	end_code		3495076						
ANR	3495581	Symbol	flag		3495076						
ANR	3495582	Symbol	* rname_end		3495076						
ANR	3495583	Symbol	ONIGENC_IS_CODE_DIGIT		3495076						
ANR	3495584	Symbol	sign		3495076						
ANR	3495585	Symbol	rback_num		3495076						
ANR	3495586	Symbol	env -> enc		3495076						
ANR	3495587	Symbol	ONIGENC_IS_CODE_WORD		3495076						
ANR	3495588	Symbol	ONIGERR_INVALID_GROUP_NAME		3495076						
ANR	3495589	Symbol	onig_scan_unsigned_number		3495076						
ANR	3495590	Symbol	exist_level		3495076						
ANR	3495591	Symbol	* src		3495076						
ANR	3495592	Symbol	PEND		3495076						
ANR	3495593	Symbol	& pnum_head		3495076						
ANR	3495594	Symbol	end		3495076						
ANR	3495595	Symbol	enc		3495076						
ANR	3495596	Symbol	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3495076						
ANR	3495597	Symbol	start_code		3495076						
ANR	3495598	Symbol	name_end		3495076						
ANR	3495599	Symbol	is_num		3495076						
ANR	3495600	Symbol	c		3495076						
ANR	3495601	Symbol	ONIGERR_TOO_BIG_NUMBER		3495076						
ANR	3495602	Symbol	src		3495076						
ANR	3495603	Symbol	level		3495076						
ANR	3495604	Symbol	* env		3495076						
ANR	3495605	Symbol	rname_end		3495076						
ANR	3495606	Symbol	get_name_end_code_point		3495076						
ANR	3495607	Symbol	* rlevel		3495076						
ANR	3495608	Symbol	env		3495076						
ANR	3495609	Symbol	p		3495076						
ANR	3495610	Symbol	r		3495076						
ANR	3495611	Symbol	* rback_num		3495076						
ANR	3495612	Symbol	& p		3495076						
ANR	3495613	Symbol	rlevel		3495076						
ANR	3495614	Symbol	pnum_head		3495076						
ANR	3495615	Function	fetch_name	2616:0:55818:58207							
ANR	3495616	FunctionDef	"fetch_name (OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int ref)"		3495615	0					
ANR	3495617	CompoundStatement		2619:0:55953:58207	3495615	0					
ANR	3495618	IdentifierDeclStatement	"int r , is_num , sign ;"	2620:2:55957:55976	3495615	0	True				
ANR	3495619	IdentifierDecl	r		3495615	0					
ANR	3495620	IdentifierDeclType	int		3495615	0					
ANR	3495621	Identifier	r		3495615	1					
ANR	3495622	IdentifierDecl	is_num		3495615	1					
ANR	3495623	IdentifierDeclType	int		3495615	0					
ANR	3495624	Identifier	is_num		3495615	1					
ANR	3495625	IdentifierDecl	sign		3495615	2					
ANR	3495626	IdentifierDeclType	int		3495615	0					
ANR	3495627	Identifier	sign		3495615	1					
ANR	3495628	IdentifierDeclStatement	OnigCodePoint end_code ;	2621:2:55980:56002	3495615	1	True				
ANR	3495629	IdentifierDecl	end_code		3495615	0					
ANR	3495630	IdentifierDeclType	OnigCodePoint		3495615	0					
ANR	3495631	Identifier	end_code		3495615	1					
ANR	3495632	IdentifierDeclStatement	OnigCodePoint c = 0 ;	2622:2:56006:56025	3495615	2	True				
ANR	3495633	IdentifierDecl	c = 0		3495615	0					
ANR	3495634	IdentifierDeclType	OnigCodePoint		3495615	0					
ANR	3495635	Identifier	c		3495615	1					
ANR	3495636	AssignmentExpression	c = 0		3495615	2		=			
ANR	3495637	Identifier	c		3495615	0					
ANR	3495638	PrimaryExpression	0		3495615	1					
ANR	3495639	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2623:2:56029:56056	3495615	3	True				
ANR	3495640	IdentifierDecl	enc = env -> enc		3495615	0					
ANR	3495641	IdentifierDeclType	OnigEncoding		3495615	0					
ANR	3495642	Identifier	enc		3495615	1					
ANR	3495643	AssignmentExpression	enc = env -> enc		3495615	2		=			
ANR	3495644	Identifier	enc		3495615	0					
ANR	3495645	PtrMemberAccess	env -> enc		3495615	1					
ANR	3495646	Identifier	env		3495615	0					
ANR	3495647	Identifier	enc		3495615	1					
ANR	3495648	IdentifierDeclStatement	UChar * name_end ;	2624:2:56060:56075	3495615	4	True				
ANR	3495649	IdentifierDecl	* name_end		3495615	0					
ANR	3495650	IdentifierDeclType	UChar *		3495615	0					
ANR	3495651	Identifier	name_end		3495615	1					
ANR	3495652	IdentifierDeclStatement	UChar * pnum_head ;	2625:2:56079:56095	3495615	5	True				
ANR	3495653	IdentifierDecl	* pnum_head		3495615	0					
ANR	3495654	IdentifierDeclType	UChar *		3495615	0					
ANR	3495655	Identifier	pnum_head		3495615	1					
ANR	3495656	IdentifierDeclStatement	UChar * p = * src ;	2626:2:56099:56114	3495615	6	True				
ANR	3495657	IdentifierDecl	* p = * src		3495615	0					
ANR	3495658	IdentifierDeclType	UChar *		3495615	0					
ANR	3495659	Identifier	p		3495615	1					
ANR	3495660	AssignmentExpression	* p = * src		3495615	2		=			
ANR	3495661	Identifier	p		3495615	0					
ANR	3495662	UnaryOperationExpression	* src		3495615	1					
ANR	3495663	UnaryOperator	*		3495615	0					
ANR	3495664	Identifier	src		3495615	1					
ANR	3495665	ExpressionStatement	* rback_num = 0	2628:2:56119:56133	3495615	7	True				
ANR	3495666	AssignmentExpression	* rback_num = 0		3495615	0		=			
ANR	3495667	UnaryOperationExpression	* rback_num		3495615	0					
ANR	3495668	UnaryOperator	*		3495615	0					
ANR	3495669	Identifier	rback_num		3495615	1					
ANR	3495670	PrimaryExpression	0		3495615	1					
ANR	3495671	ExpressionStatement	end_code = get_name_end_code_point ( start_code )	2630:2:56138:56184	3495615	8	True				
ANR	3495672	AssignmentExpression	end_code = get_name_end_code_point ( start_code )		3495615	0		=			
ANR	3495673	Identifier	end_code		3495615	0					
ANR	3495674	CallExpression	get_name_end_code_point ( start_code )		3495615	1					
ANR	3495675	Callee	get_name_end_code_point		3495615	0					
ANR	3495676	Identifier	get_name_end_code_point		3495615	0					
ANR	3495677	ArgumentList	start_code		3495615	1					
ANR	3495678	Argument	start_code		3495615	0					
ANR	3495679	Identifier	start_code		3495615	0					
ANR	3495680	ExpressionStatement	name_end = end	2632:2:56189:56203	3495615	9	True				
ANR	3495681	AssignmentExpression	name_end = end		3495615	0		=			
ANR	3495682	Identifier	name_end		3495615	0					
ANR	3495683	Identifier	end		3495615	1					
ANR	3495684	ExpressionStatement	pnum_head = * src	2633:2:56207:56223	3495615	10	True				
ANR	3495685	AssignmentExpression	pnum_head = * src		3495615	0		=			
ANR	3495686	Identifier	pnum_head		3495615	0					
ANR	3495687	UnaryOperationExpression	* src		3495615	1					
ANR	3495688	UnaryOperator	*		3495615	0					
ANR	3495689	Identifier	src		3495615	1					
ANR	3495690	ExpressionStatement	r = 0	2634:2:56227:56232	3495615	11	True				
ANR	3495691	AssignmentExpression	r = 0		3495615	0		=			
ANR	3495692	Identifier	r		3495615	0					
ANR	3495693	PrimaryExpression	0		3495615	1					
ANR	3495694	ExpressionStatement	is_num = 0	2635:2:56236:56246	3495615	12	True				
ANR	3495695	AssignmentExpression	is_num = 0		3495615	0		=			
ANR	3495696	Identifier	is_num		3495615	0					
ANR	3495697	PrimaryExpression	0		3495615	1					
ANR	3495698	ExpressionStatement	sign = 1	2636:2:56250:56258	3495615	13	True				
ANR	3495699	AssignmentExpression	sign = 1		3495615	0		=			
ANR	3495700	Identifier	sign		3495615	0					
ANR	3495701	PrimaryExpression	1		3495615	1					
ANR	3495702	IfStatement	if ( PEND )		3495615	14					
ANR	3495703	Condition	PEND	2637:6:56266:56269	3495615	0	True				
ANR	3495704	Identifier	PEND		3495615	0					
ANR	3495705	CompoundStatement		19:12:318:318	3495615	1					
ANR	3495706	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2638:4:56278:56309	3495615	0	True				
ANR	3495707	Identifier	ONIGERR_EMPTY_GROUP_NAME		3495615	0					
ANR	3495708	ElseStatement	else		3495615	0					
ANR	3495709	CompoundStatement		22:7:368:368	3495615	0					
ANR	3495710	ExpressionStatement	PFETCH_S ( c )	2641:4:56328:56339	3495615	0	True				
ANR	3495711	CallExpression	PFETCH_S ( c )		3495615	0					
ANR	3495712	Callee	PFETCH_S		3495615	0					
ANR	3495713	Identifier	PFETCH_S		3495615	0					
ANR	3495714	ArgumentList	c		3495615	1					
ANR	3495715	Argument	c		3495615	0					
ANR	3495716	Identifier	c		3495615	0					
ANR	3495717	IfStatement	if ( c == end_code )		3495615	1					
ANR	3495718	Condition	c == end_code	2642:8:56349:56361	3495615	0	True				
ANR	3495719	EqualityExpression	c == end_code		3495615	0		==			
ANR	3495720	Identifier	c		3495615	0					
ANR	3495721	Identifier	end_code		3495615	1					
ANR	3495722	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2643:6:56370:56401	3495615	1	True				
ANR	3495723	Identifier	ONIGERR_EMPTY_GROUP_NAME		3495615	0					
ANR	3495724	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		3495615	2					
ANR	3495725	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2645:8:56412:56440	3495615	0	True				
ANR	3495726	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		3495615	0					
ANR	3495727	Callee	ONIGENC_IS_CODE_DIGIT		3495615	0					
ANR	3495728	Identifier	ONIGENC_IS_CODE_DIGIT		3495615	0					
ANR	3495729	ArgumentList	enc		3495615	1					
ANR	3495730	Argument	enc		3495615	0					
ANR	3495731	Identifier	enc		3495615	0					
ANR	3495732	Argument	c		3495615	1					
ANR	3495733	Identifier	c		3495615	0					
ANR	3495734	CompoundStatement		27:39:489:489	3495615	1					
ANR	3495735	IfStatement	if ( ref == 1 )		3495615	0					
ANR	3495736	Condition	ref == 1	2646:10:56455:56462	3495615	0	True				
ANR	3495737	EqualityExpression	ref == 1		3495615	0		==			
ANR	3495738	Identifier	ref		3495615	0					
ANR	3495739	PrimaryExpression	1		3495615	1					
ANR	3495740	ExpressionStatement	is_num = 1	2647:8:56473:56483	3495615	1	True				
ANR	3495741	AssignmentExpression	is_num = 1		3495615	0		=			
ANR	3495742	Identifier	is_num		3495615	0					
ANR	3495743	PrimaryExpression	1		3495615	1					
ANR	3495744	ElseStatement	else		3495615	0					
ANR	3495745	CompoundStatement		30:11:542:542	3495615	0					
ANR	3495746	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2649:8:56506:56536	3495615	0	True				
ANR	3495747	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		3495615	0		=			
ANR	3495748	Identifier	r		3495615	0					
ANR	3495749	Identifier	ONIGERR_INVALID_GROUP_NAME		3495615	1					
ANR	3495750	ExpressionStatement	is_num = 0	2650:8:56546:56556	3495615	1	True				
ANR	3495751	AssignmentExpression	is_num = 0		3495615	0		=			
ANR	3495752	Identifier	is_num		3495615	0					
ANR	3495753	PrimaryExpression	0		3495615	1					
ANR	3495754	ElseStatement	else		3495615	0					
ANR	3495755	IfStatement	if ( c == '-' )		3495615	0					
ANR	3495756	Condition	c == '-'	2653:13:56585:56592	3495615	0	True				
ANR	3495757	EqualityExpression	c == '-'		3495615	0		==			
ANR	3495758	Identifier	c		3495615	0					
ANR	3495759	PrimaryExpression	'-'		3495615	1					
ANR	3495760	CompoundStatement		35:23:641:641	3495615	1					
ANR	3495761	IfStatement	if ( ref == 1 )		3495615	0					
ANR	3495762	Condition	ref == 1	2654:10:56607:56614	3495615	0	True				
ANR	3495763	EqualityExpression	ref == 1		3495615	0		==			
ANR	3495764	Identifier	ref		3495615	0					
ANR	3495765	PrimaryExpression	1		3495615	1					
ANR	3495766	CompoundStatement		36:20:663:663	3495615	1					
ANR	3495767	ExpressionStatement	is_num = 2	2655:8:56627:56637	3495615	0	True				
ANR	3495768	AssignmentExpression	is_num = 2		3495615	0		=			
ANR	3495769	Identifier	is_num		3495615	0					
ANR	3495770	PrimaryExpression	2		3495615	1					
ANR	3495771	ExpressionStatement	sign = - 1	2656:8:56647:56656	3495615	1	True				
ANR	3495772	AssignmentExpression	sign = - 1		3495615	0		=			
ANR	3495773	Identifier	sign		3495615	0					
ANR	3495774	UnaryOperationExpression	- 1		3495615	1					
ANR	3495775	UnaryOperator	-		3495615	0					
ANR	3495776	PrimaryExpression	1		3495615	1					
ANR	3495777	ExpressionStatement	pnum_head = p	2657:8:56666:56679	3495615	2	True				
ANR	3495778	AssignmentExpression	pnum_head = p		3495615	0		=			
ANR	3495779	Identifier	pnum_head		3495615	0					
ANR	3495780	Identifier	p		3495615	1					
ANR	3495781	ElseStatement	else		3495615	0					
ANR	3495782	CompoundStatement		41:11:746:746	3495615	0					
ANR	3495783	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2660:8:56710:56740	3495615	0	True				
ANR	3495784	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		3495615	0		=			
ANR	3495785	Identifier	r		3495615	0					
ANR	3495786	Identifier	ONIGERR_INVALID_GROUP_NAME		3495615	1					
ANR	3495787	ExpressionStatement	is_num = 0	2661:8:56750:56760	3495615	1	True				
ANR	3495788	AssignmentExpression	is_num = 0		3495615	0		=			
ANR	3495789	Identifier	is_num		3495615	0					
ANR	3495790	PrimaryExpression	0		3495615	1					
ANR	3495791	ElseStatement	else		3495615	0					
ANR	3495792	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		3495615	0					
ANR	3495793	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2664:13:56789:56817	3495615	0	True				
ANR	3495794	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		3495615	0					
ANR	3495795	UnaryOperator	!		3495615	0					
ANR	3495796	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		3495615	1					
ANR	3495797	Callee	ONIGENC_IS_CODE_WORD		3495615	0					
ANR	3495798	Identifier	ONIGENC_IS_CODE_WORD		3495615	0					
ANR	3495799	ArgumentList	enc		3495615	1					
ANR	3495800	Argument	enc		3495615	0					
ANR	3495801	Identifier	enc		3495615	0					
ANR	3495802	Argument	c		3495615	1					
ANR	3495803	Identifier	c		3495615	0					
ANR	3495804	CompoundStatement		46:44:866:866	3495615	1					
ANR	3495805	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2665:6:56828:56866	3495615	0	True				
ANR	3495806	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3495615	0		=			
ANR	3495807	Identifier	r		3495615	0					
ANR	3495808	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3495615	1					
ANR	3495809	IfStatement	if ( r == 0 )		3495615	15					
ANR	3495810	Condition	r == 0	2669:6:56885:56890	3495615	0	True				
ANR	3495811	EqualityExpression	r == 0		3495615	0		==			
ANR	3495812	Identifier	r		3495615	0					
ANR	3495813	PrimaryExpression	0		3495615	1					
ANR	3495814	CompoundStatement		51:14:939:939	3495615	1					
ANR	3495815	WhileStatement	while ( ! PEND )		3495615	0					
ANR	3495816	Condition	! PEND	2670:11:56906:56910	3495615	0	True				
ANR	3495817	UnaryOperationExpression	! PEND		3495615	0					
ANR	3495818	UnaryOperator	!		3495615	0					
ANR	3495819	Identifier	PEND		3495615	1					
ANR	3495820	CompoundStatement		52:18:959:959	3495615	1					
ANR	3495821	ExpressionStatement	name_end = p	2671:6:56921:56933	3495615	0	True				
ANR	3495822	AssignmentExpression	name_end = p		3495615	0		=			
ANR	3495823	Identifier	name_end		3495615	0					
ANR	3495824	Identifier	p		3495615	1					
ANR	3495825	ExpressionStatement	PFETCH_S ( c )	2672:6:56941:56952	3495615	1	True				
ANR	3495826	CallExpression	PFETCH_S ( c )		3495615	0					
ANR	3495827	Callee	PFETCH_S		3495615	0					
ANR	3495828	Identifier	PFETCH_S		3495615	0					
ANR	3495829	ArgumentList	c		3495615	1					
ANR	3495830	Argument	c		3495615	0					
ANR	3495831	Identifier	c		3495615	0					
ANR	3495832	IfStatement	if ( c == end_code || c == ')' )		3495615	2					
ANR	3495833	Condition	c == end_code || c == ')'	2673:10:56964:56988	3495615	0	True				
ANR	3495834	OrExpression	c == end_code || c == ')'		3495615	0		||			
ANR	3495835	EqualityExpression	c == end_code		3495615	0		==			
ANR	3495836	Identifier	c		3495615	0					
ANR	3495837	Identifier	end_code		3495615	1					
ANR	3495838	EqualityExpression	c == ')'		3495615	1		==			
ANR	3495839	Identifier	c		3495615	0					
ANR	3495840	PrimaryExpression	')'		3495615	1					
ANR	3495841	CompoundStatement		55:37:1037:1037	3495615	1					
ANR	3495842	IfStatement	if ( is_num == 2 )		3495615	0					
ANR	3495843	Condition	is_num == 2	2674:12:57005:57015	3495615	0	True				
ANR	3495844	EqualityExpression	is_num == 2		3495615	0		==			
ANR	3495845	Identifier	is_num		3495615	0					
ANR	3495846	PrimaryExpression	2		3495615	1					
ANR	3495847	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2674:26:57019:57049	3495615	1	True				
ANR	3495848	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		3495615	0		=			
ANR	3495849	Identifier	r		3495615	0					
ANR	3495850	Identifier	ONIGERR_INVALID_GROUP_NAME		3495615	1					
ANR	3495851	BreakStatement	break ;	2675:8:57059:57064	3495615	1	True				
ANR	3495852	IfStatement	if ( is_num != 0 )		3495615	3					
ANR	3495853	Condition	is_num != 0	2678:10:57085:57095	3495615	0	True				
ANR	3495854	EqualityExpression	is_num != 0		3495615	0		!=			
ANR	3495855	Identifier	is_num		3495615	0					
ANR	3495856	PrimaryExpression	0		3495615	1					
ANR	3495857	CompoundStatement		60:23:1144:1144	3495615	1					
ANR	3495858	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		3495615	0					
ANR	3495859	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2679:12:57112:57140	3495615	0	True				
ANR	3495860	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		3495615	0					
ANR	3495861	Callee	ONIGENC_IS_CODE_DIGIT		3495615	0					
ANR	3495862	Identifier	ONIGENC_IS_CODE_DIGIT		3495615	0					
ANR	3495863	ArgumentList	enc		3495615	1					
ANR	3495864	Argument	enc		3495615	0					
ANR	3495865	Identifier	enc		3495615	0					
ANR	3495866	Argument	c		3495615	1					
ANR	3495867	Identifier	c		3495615	0					
ANR	3495868	CompoundStatement		61:43:1189:1189	3495615	1					
ANR	3495869	ExpressionStatement	is_num = 1	2680:10:57155:57165	3495615	0	True				
ANR	3495870	AssignmentExpression	is_num = 1		3495615	0		=			
ANR	3495871	Identifier	is_num		3495615	0					
ANR	3495872	PrimaryExpression	1		3495615	1					
ANR	3495873	ElseStatement	else		3495615	0					
ANR	3495874	CompoundStatement		64:13:1236:1236	3495615	0					
ANR	3495875	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		3495615	0					
ANR	3495876	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2683:14:57206:57234	3495615	0	True				
ANR	3495877	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		3495615	0					
ANR	3495878	UnaryOperator	!		3495615	0					
ANR	3495879	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		3495615	1					
ANR	3495880	Callee	ONIGENC_IS_CODE_WORD		3495615	0					
ANR	3495881	Identifier	ONIGENC_IS_CODE_WORD		3495615	0					
ANR	3495882	ArgumentList	enc		3495615	1					
ANR	3495883	Argument	enc		3495615	0					
ANR	3495884	Identifier	enc		3495615	0					
ANR	3495885	Argument	c		3495615	1					
ANR	3495886	Identifier	c		3495615	0					
ANR	3495887	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2684:12:57249:57287	3495615	1	True				
ANR	3495888	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3495615	0		=			
ANR	3495889	Identifier	r		3495615	0					
ANR	3495890	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3495615	1					
ANR	3495891	ElseStatement	else		3495615	0					
ANR	3495892	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2686:12:57316:57346	3495615	0	True				
ANR	3495893	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		3495615	0		=			
ANR	3495894	Identifier	r		3495615	0					
ANR	3495895	Identifier	ONIGERR_INVALID_GROUP_NAME		3495615	1					
ANR	3495896	ExpressionStatement	is_num = 0	2687:10:57358:57368	3495615	1	True				
ANR	3495897	AssignmentExpression	is_num = 0		3495615	0		=			
ANR	3495898	Identifier	is_num		3495615	0					
ANR	3495899	PrimaryExpression	0		3495615	1					
ANR	3495900	ElseStatement	else		3495615	0					
ANR	3495901	CompoundStatement		72:11:1445:1445	3495615	0					
ANR	3495902	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		3495615	0					
ANR	3495903	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2691:12:57413:57441	3495615	0	True				
ANR	3495904	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		3495615	0					
ANR	3495905	UnaryOperator	!		3495615	0					
ANR	3495906	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		3495615	1					
ANR	3495907	Callee	ONIGENC_IS_CODE_WORD		3495615	0					
ANR	3495908	Identifier	ONIGENC_IS_CODE_WORD		3495615	0					
ANR	3495909	ArgumentList	enc		3495615	1					
ANR	3495910	Argument	enc		3495615	0					
ANR	3495911	Identifier	enc		3495615	0					
ANR	3495912	Argument	c		3495615	1					
ANR	3495913	Identifier	c		3495615	0					
ANR	3495914	CompoundStatement		73:43:1490:1490	3495615	1					
ANR	3495915	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2692:10:57456:57494	3495615	0	True				
ANR	3495916	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3495615	0		=			
ANR	3495917	Identifier	r		3495615	0					
ANR	3495918	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3495615	1					
ANR	3495919	IfStatement	if ( c != end_code )		3495615	1					
ANR	3495920	Condition	c != end_code	2697:8:57529:57541	3495615	0	True				
ANR	3495921	EqualityExpression	c != end_code		3495615	0		!=			
ANR	3495922	Identifier	c		3495615	0					
ANR	3495923	Identifier	end_code		3495615	1					
ANR	3495924	CompoundStatement		79:23:1590:1590	3495615	1					
ANR	3495925	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2698:6:57552:57582	3495615	0	True				
ANR	3495926	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		3495615	0		=			
ANR	3495927	Identifier	r		3495615	0					
ANR	3495928	Identifier	ONIGERR_INVALID_GROUP_NAME		3495615	1					
ANR	3495929	ExpressionStatement	name_end = end	2699:6:57590:57604	3495615	1	True				
ANR	3495930	AssignmentExpression	name_end = end		3495615	0		=			
ANR	3495931	Identifier	name_end		3495615	0					
ANR	3495932	Identifier	end		3495615	1					
ANR	3495933	IfStatement	if ( is_num != 0 )		3495615	2					
ANR	3495934	Condition	is_num != 0	2702:8:57621:57631	3495615	0	True				
ANR	3495935	EqualityExpression	is_num != 0		3495615	0		!=			
ANR	3495936	Identifier	is_num		3495615	0					
ANR	3495937	PrimaryExpression	0		3495615	1					
ANR	3495938	CompoundStatement		84:21:1680:1680	3495615	1					
ANR	3495939	ExpressionStatement	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"	2703:6:57642:57707	3495615	0	True				
ANR	3495940	AssignmentExpression	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		3495615	0		=			
ANR	3495941	UnaryOperationExpression	* rback_num		3495615	0					
ANR	3495942	UnaryOperator	*		3495615	0					
ANR	3495943	Identifier	rback_num		3495615	1					
ANR	3495944	CallExpression	"onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		3495615	1					
ANR	3495945	Callee	onig_scan_unsigned_number		3495615	0					
ANR	3495946	Identifier	onig_scan_unsigned_number		3495615	0					
ANR	3495947	ArgumentList	& pnum_head		3495615	1					
ANR	3495948	Argument	& pnum_head		3495615	0					
ANR	3495949	UnaryOperationExpression	& pnum_head		3495615	0					
ANR	3495950	UnaryOperator	&		3495615	0					
ANR	3495951	Identifier	pnum_head		3495615	1					
ANR	3495952	Argument	name_end		3495615	1					
ANR	3495953	Identifier	name_end		3495615	0					
ANR	3495954	Argument	enc		3495615	2					
ANR	3495955	Identifier	enc		3495615	0					
ANR	3495956	IfStatement	if ( * rback_num < 0 )		3495615	1					
ANR	3495957	Condition	* rback_num < 0	2704:10:57719:57732	3495615	0	True				
ANR	3495958	RelationalExpression	* rback_num < 0		3495615	0		<			
ANR	3495959	UnaryOperationExpression	* rback_num		3495615	0					
ANR	3495960	UnaryOperator	*		3495615	0					
ANR	3495961	Identifier	rback_num		3495615	1					
ANR	3495962	PrimaryExpression	0		3495615	1					
ANR	3495963	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	2704:26:57735:57764	3495615	1	True				
ANR	3495964	Identifier	ONIGERR_TOO_BIG_NUMBER		3495615	0					
ANR	3495965	ElseStatement	else		3495615	0					
ANR	3495966	IfStatement	if ( * rback_num == 0 )		3495615	0					
ANR	3495967	Condition	* rback_num == 0	2705:15:57781:57795	3495615	0	True				
ANR	3495968	EqualityExpression	* rback_num == 0		3495615	0		==			
ANR	3495969	UnaryOperationExpression	* rback_num		3495615	0					
ANR	3495970	UnaryOperator	*		3495615	0					
ANR	3495971	Identifier	rback_num		3495615	1					
ANR	3495972	PrimaryExpression	0		3495615	1					
ANR	3495973	CompoundStatement		87:32:1844:1844	3495615	1					
ANR	3495974	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2706:8:57808:57838	3495615	0	True				
ANR	3495975	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		3495615	0		=			
ANR	3495976	Identifier	r		3495615	0					
ANR	3495977	Identifier	ONIGERR_INVALID_GROUP_NAME		3495615	1					
ANR	3495978	GotoStatement	goto err ;	2707:8:57848:57856	3495615	1	True				
ANR	3495979	Identifier	err		3495615	0					
ANR	3495980	ExpressionStatement	* rback_num *= sign	2710:6:57873:57891	3495615	2	True				
ANR	3495981	AssignmentExpression	* rback_num *= sign		3495615	0		*=			
ANR	3495982	UnaryOperationExpression	* rback_num		3495615	0					
ANR	3495983	UnaryOperator	*		3495615	0					
ANR	3495984	Identifier	rback_num		3495615	1					
ANR	3495985	Identifier	sign		3495615	1					
ANR	3495986	ExpressionStatement	* rname_end = name_end	2713:4:57904:57925	3495615	3	True				
ANR	3495987	AssignmentExpression	* rname_end = name_end		3495615	0		=			
ANR	3495988	UnaryOperationExpression	* rname_end		3495615	0					
ANR	3495989	UnaryOperator	*		3495615	0					
ANR	3495990	Identifier	rname_end		3495615	1					
ANR	3495991	Identifier	name_end		3495615	1					
ANR	3495992	ExpressionStatement	* src = p	2714:4:57931:57939	3495615	4	True				
ANR	3495993	AssignmentExpression	* src = p		3495615	0		=			
ANR	3495994	UnaryOperationExpression	* src		3495615	0					
ANR	3495995	UnaryOperator	*		3495615	0					
ANR	3495996	Identifier	src		3495615	1					
ANR	3495997	Identifier	p		3495615	1					
ANR	3495998	ReturnStatement	return 0 ;	2715:4:57945:57953	3495615	5	True				
ANR	3495999	PrimaryExpression	0		3495615	0					
ANR	3496000	ElseStatement	else		3495615	0					
ANR	3496001	CompoundStatement		99:7:2012:2012	3495615	0					
ANR	3496002	WhileStatement	while ( ! PEND )		3495615	0					
ANR	3496003	Condition	! PEND	2718:11:57979:57983	3495615	0	True				
ANR	3496004	UnaryOperationExpression	! PEND		3495615	0					
ANR	3496005	UnaryOperator	!		3495615	0					
ANR	3496006	Identifier	PEND		3495615	1					
ANR	3496007	CompoundStatement		100:18:2032:2032	3495615	1					
ANR	3496008	ExpressionStatement	name_end = p	2719:6:57994:58006	3495615	0	True				
ANR	3496009	AssignmentExpression	name_end = p		3495615	0		=			
ANR	3496010	Identifier	name_end		3495615	0					
ANR	3496011	Identifier	p		3495615	1					
ANR	3496012	ExpressionStatement	PFETCH_S ( c )	2720:6:58014:58025	3495615	1	True				
ANR	3496013	CallExpression	PFETCH_S ( c )		3495615	0					
ANR	3496014	Callee	PFETCH_S		3495615	0					
ANR	3496015	Identifier	PFETCH_S		3495615	0					
ANR	3496016	ArgumentList	c		3495615	1					
ANR	3496017	Argument	c		3495615	0					
ANR	3496018	Identifier	c		3495615	0					
ANR	3496019	IfStatement	if ( c == end_code || c == ')' )		3495615	2					
ANR	3496020	Condition	c == end_code || c == ')'	2721:10:58037:58061	3495615	0	True				
ANR	3496021	OrExpression	c == end_code || c == ')'		3495615	0		||			
ANR	3496022	EqualityExpression	c == end_code		3495615	0		==			
ANR	3496023	Identifier	c		3495615	0					
ANR	3496024	Identifier	end_code		3495615	1					
ANR	3496025	EqualityExpression	c == ')'		3495615	1		==			
ANR	3496026	Identifier	c		3495615	0					
ANR	3496027	PrimaryExpression	')'		3495615	1					
ANR	3496028	BreakStatement	break ;	2722:8:58072:58077	3495615	1	True				
ANR	3496029	IfStatement	if ( PEND )		3495615	1					
ANR	3496030	Condition	PEND	2724:8:58093:58096	3495615	0	True				
ANR	3496031	Identifier	PEND		3495615	0					
ANR	3496032	ExpressionStatement	name_end = end	2725:6:58105:58119	3495615	1	True				
ANR	3496033	AssignmentExpression	name_end = end		3495615	0		=			
ANR	3496034	Identifier	name_end		3495615	0					
ANR	3496035	Identifier	end		3495615	1					
ANR	3496036	Label	err :	2727:2:58124:58127	3495615	2	True				
ANR	3496037	Identifier	err		3495615	0					
ANR	3496038	ExpressionStatement	"onig_scan_env_set_error_string ( env , r , * src , name_end )"	2728:4:58133:58187	3495615	3	True				
ANR	3496039	CallExpression	"onig_scan_env_set_error_string ( env , r , * src , name_end )"		3495615	0					
ANR	3496040	Callee	onig_scan_env_set_error_string		3495615	0					
ANR	3496041	Identifier	onig_scan_env_set_error_string		3495615	0					
ANR	3496042	ArgumentList	env		3495615	1					
ANR	3496043	Argument	env		3495615	0					
ANR	3496044	Identifier	env		3495615	0					
ANR	3496045	Argument	r		3495615	1					
ANR	3496046	Identifier	r		3495615	0					
ANR	3496047	Argument	* src		3495615	2					
ANR	3496048	UnaryOperationExpression	* src		3495615	0					
ANR	3496049	UnaryOperator	*		3495615	0					
ANR	3496050	Identifier	src		3495615	1					
ANR	3496051	Argument	name_end		3495615	3					
ANR	3496052	Identifier	name_end		3495615	0					
ANR	3496053	ReturnStatement	return r ;	2729:4:58193:58201	3495615	4	True				
ANR	3496054	Identifier	r		3495615	0					
ANR	3496055	ReturnType	static int		3495615	1					
ANR	3496056	Identifier	fetch_name		3495615	2					
ANR	3496057	ParameterList	"OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int ref"		3495615	3					
ANR	3496058	Parameter	OnigCodePoint start_code	2617:11:55840:55863	3495615	0	True				
ANR	3496059	ParameterType	OnigCodePoint		3495615	0					
ANR	3496060	Identifier	start_code		3495615	1					
ANR	3496061	Parameter	UChar * * src	2617:37:55866:55876	3495615	1	True				
ANR	3496062	ParameterType	UChar * *		3495615	0					
ANR	3496063	Identifier	src		3495615	1					
ANR	3496064	Parameter	UChar * end	2617:50:55879:55888	3495615	2	True				
ANR	3496065	ParameterType	UChar *		3495615	0					
ANR	3496066	Identifier	end		3495615	1					
ANR	3496067	Parameter	UChar * * rname_end	2618:4:55895:55911	3495615	3	True				
ANR	3496068	ParameterType	UChar * *		3495615	0					
ANR	3496069	Identifier	rname_end		3495615	1					
ANR	3496070	Parameter	ScanEnv * env	2618:23:55914:55925	3495615	4	True				
ANR	3496071	ParameterType	ScanEnv *		3495615	0					
ANR	3496072	Identifier	env		3495615	1					
ANR	3496073	Parameter	int * rback_num	2618:37:55928:55941	3495615	5	True				
ANR	3496074	ParameterType	int *		3495615	0					
ANR	3496075	Identifier	rback_num		3495615	1					
ANR	3496076	Parameter	int ref	2618:53:55944:55950	3495615	6	True				
ANR	3496077	ParameterType	int		3495615	0					
ANR	3496078	Identifier	ref		3495615	1					
ANR	3496079	CFGEntryNode	ENTRY		3495615		True				
ANR	3496080	CFGExitNode	EXIT		3495615		True				
ANR	3496081	Symbol	ONIGERR_EMPTY_GROUP_NAME		3495615						
ANR	3496082	Symbol	end_code		3495615						
ANR	3496083	Symbol	* rname_end		3495615						
ANR	3496084	Symbol	ONIGENC_IS_CODE_DIGIT		3495615						
ANR	3496085	Symbol	sign		3495615						
ANR	3496086	Symbol	rback_num		3495615						
ANR	3496087	Symbol	env -> enc		3495615						
ANR	3496088	Symbol	ONIGERR_INVALID_GROUP_NAME		3495615						
ANR	3496089	Symbol	ONIGENC_IS_CODE_WORD		3495615						
ANR	3496090	Symbol	onig_scan_unsigned_number		3495615						
ANR	3496091	Symbol	* src		3495615						
ANR	3496092	Symbol	PEND		3495615						
ANR	3496093	Symbol	ref		3495615						
ANR	3496094	Symbol	& pnum_head		3495615						
ANR	3496095	Symbol	end		3495615						
ANR	3496096	Symbol	enc		3495615						
ANR	3496097	Symbol	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3495615						
ANR	3496098	Symbol	start_code		3495615						
ANR	3496099	Symbol	name_end		3495615						
ANR	3496100	Symbol	is_num		3495615						
ANR	3496101	Symbol	c		3495615						
ANR	3496102	Symbol	ONIGERR_TOO_BIG_NUMBER		3495615						
ANR	3496103	Symbol	src		3495615						
ANR	3496104	Symbol	* env		3495615						
ANR	3496105	Symbol	rname_end		3495615						
ANR	3496106	Symbol	get_name_end_code_point		3495615						
ANR	3496107	Symbol	env		3495615						
ANR	3496108	Symbol	p		3495615						
ANR	3496109	Symbol	r		3495615						
ANR	3496110	Symbol	* rback_num		3495615						
ANR	3496111	Symbol	pnum_head		3495615						
ANR	3496112	Function	fetch_name	2733:0:58215:59740							
ANR	3496113	FunctionDef	"fetch_name (OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int ref)"		3496112	0					
ANR	3496114	CompoundStatement		2736:0:58350:59740	3496112	0					
ANR	3496115	IdentifierDeclStatement	"int r , is_num , sign ;"	2737:2:58354:58373	3496112	0	True				
ANR	3496116	IdentifierDecl	r		3496112	0					
ANR	3496117	IdentifierDeclType	int		3496112	0					
ANR	3496118	Identifier	r		3496112	1					
ANR	3496119	IdentifierDecl	is_num		3496112	1					
ANR	3496120	IdentifierDeclType	int		3496112	0					
ANR	3496121	Identifier	is_num		3496112	1					
ANR	3496122	IdentifierDecl	sign		3496112	2					
ANR	3496123	IdentifierDeclType	int		3496112	0					
ANR	3496124	Identifier	sign		3496112	1					
ANR	3496125	IdentifierDeclStatement	OnigCodePoint end_code ;	2738:2:58377:58399	3496112	1	True				
ANR	3496126	IdentifierDecl	end_code		3496112	0					
ANR	3496127	IdentifierDeclType	OnigCodePoint		3496112	0					
ANR	3496128	Identifier	end_code		3496112	1					
ANR	3496129	IdentifierDeclStatement	OnigCodePoint c = 0 ;	2739:2:58403:58422	3496112	2	True				
ANR	3496130	IdentifierDecl	c = 0		3496112	0					
ANR	3496131	IdentifierDeclType	OnigCodePoint		3496112	0					
ANR	3496132	Identifier	c		3496112	1					
ANR	3496133	AssignmentExpression	c = 0		3496112	2		=			
ANR	3496134	Identifier	c		3496112	0					
ANR	3496135	PrimaryExpression	0		3496112	1					
ANR	3496136	IdentifierDeclStatement	UChar * name_end ;	2740:2:58426:58441	3496112	3	True				
ANR	3496137	IdentifierDecl	* name_end		3496112	0					
ANR	3496138	IdentifierDeclType	UChar *		3496112	0					
ANR	3496139	Identifier	name_end		3496112	1					
ANR	3496140	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2741:2:58445:58472	3496112	4	True				
ANR	3496141	IdentifierDecl	enc = env -> enc		3496112	0					
ANR	3496142	IdentifierDeclType	OnigEncoding		3496112	0					
ANR	3496143	Identifier	enc		3496112	1					
ANR	3496144	AssignmentExpression	enc = env -> enc		3496112	2		=			
ANR	3496145	Identifier	enc		3496112	0					
ANR	3496146	PtrMemberAccess	env -> enc		3496112	1					
ANR	3496147	Identifier	env		3496112	0					
ANR	3496148	Identifier	enc		3496112	1					
ANR	3496149	IdentifierDeclStatement	UChar * pnum_head ;	2742:2:58476:58492	3496112	5	True				
ANR	3496150	IdentifierDecl	* pnum_head		3496112	0					
ANR	3496151	IdentifierDeclType	UChar *		3496112	0					
ANR	3496152	Identifier	pnum_head		3496112	1					
ANR	3496153	IdentifierDeclStatement	UChar * p = * src ;	2743:2:58496:58511	3496112	6	True				
ANR	3496154	IdentifierDecl	* p = * src		3496112	0					
ANR	3496155	IdentifierDeclType	UChar *		3496112	0					
ANR	3496156	Identifier	p		3496112	1					
ANR	3496157	AssignmentExpression	* p = * src		3496112	2		=			
ANR	3496158	Identifier	p		3496112	0					
ANR	3496159	UnaryOperationExpression	* src		3496112	1					
ANR	3496160	UnaryOperator	*		3496112	0					
ANR	3496161	Identifier	src		3496112	1					
ANR	3496162	ExpressionStatement	PFETCH_READY	2744:2:58515:58527	3496112	7	True				
ANR	3496163	Identifier	PFETCH_READY		3496112	0					
ANR	3496164	ExpressionStatement	* rback_num = 0	2746:2:58532:58546	3496112	8	True				
ANR	3496165	AssignmentExpression	* rback_num = 0		3496112	0		=			
ANR	3496166	UnaryOperationExpression	* rback_num		3496112	0					
ANR	3496167	UnaryOperator	*		3496112	0					
ANR	3496168	Identifier	rback_num		3496112	1					
ANR	3496169	PrimaryExpression	0		3496112	1					
ANR	3496170	ExpressionStatement	end_code = get_name_end_code_point ( start_code )	2748:2:58551:58597	3496112	9	True				
ANR	3496171	AssignmentExpression	end_code = get_name_end_code_point ( start_code )		3496112	0		=			
ANR	3496172	Identifier	end_code		3496112	0					
ANR	3496173	CallExpression	get_name_end_code_point ( start_code )		3496112	1					
ANR	3496174	Callee	get_name_end_code_point		3496112	0					
ANR	3496175	Identifier	get_name_end_code_point		3496112	0					
ANR	3496176	ArgumentList	start_code		3496112	1					
ANR	3496177	Argument	start_code		3496112	0					
ANR	3496178	Identifier	start_code		3496112	0					
ANR	3496179	ExpressionStatement	* rname_end = name_end = end	2750:2:58602:58629	3496112	10	True				
ANR	3496180	AssignmentExpression	* rname_end = name_end = end		3496112	0		=			
ANR	3496181	UnaryOperationExpression	* rname_end		3496112	0					
ANR	3496182	UnaryOperator	*		3496112	0					
ANR	3496183	Identifier	rname_end		3496112	1					
ANR	3496184	AssignmentExpression	name_end = end		3496112	1		=			
ANR	3496185	Identifier	name_end		3496112	0					
ANR	3496186	Identifier	end		3496112	1					
ANR	3496187	ExpressionStatement	r = 0	2751:2:58633:58638	3496112	11	True				
ANR	3496188	AssignmentExpression	r = 0		3496112	0		=			
ANR	3496189	Identifier	r		3496112	0					
ANR	3496190	PrimaryExpression	0		3496112	1					
ANR	3496191	ExpressionStatement	pnum_head = * src	2752:2:58642:58658	3496112	12	True				
ANR	3496192	AssignmentExpression	pnum_head = * src		3496112	0		=			
ANR	3496193	Identifier	pnum_head		3496112	0					
ANR	3496194	UnaryOperationExpression	* src		3496112	1					
ANR	3496195	UnaryOperator	*		3496112	0					
ANR	3496196	Identifier	src		3496112	1					
ANR	3496197	ExpressionStatement	is_num = 0	2753:2:58662:58672	3496112	13	True				
ANR	3496198	AssignmentExpression	is_num = 0		3496112	0		=			
ANR	3496199	Identifier	is_num		3496112	0					
ANR	3496200	PrimaryExpression	0		3496112	1					
ANR	3496201	ExpressionStatement	sign = 1	2754:2:58676:58684	3496112	14	True				
ANR	3496202	AssignmentExpression	sign = 1		3496112	0		=			
ANR	3496203	Identifier	sign		3496112	0					
ANR	3496204	PrimaryExpression	1		3496112	1					
ANR	3496205	IfStatement	if ( PEND )		3496112	15					
ANR	3496206	Condition	PEND	2756:6:58693:58696	3496112	0	True				
ANR	3496207	Identifier	PEND		3496112	0					
ANR	3496208	CompoundStatement		21:12:348:348	3496112	1					
ANR	3496209	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2757:4:58705:58736	3496112	0	True				
ANR	3496210	Identifier	ONIGERR_EMPTY_GROUP_NAME		3496112	0					
ANR	3496211	ElseStatement	else		3496112	0					
ANR	3496212	CompoundStatement		24:7:398:398	3496112	0					
ANR	3496213	ExpressionStatement	PFETCH ( c )	2760:4:58755:58764	3496112	0	True				
ANR	3496214	CallExpression	PFETCH ( c )		3496112	0					
ANR	3496215	Callee	PFETCH		3496112	0					
ANR	3496216	Identifier	PFETCH		3496112	0					
ANR	3496217	ArgumentList	c		3496112	1					
ANR	3496218	Argument	c		3496112	0					
ANR	3496219	Identifier	c		3496112	0					
ANR	3496220	IfStatement	if ( c == end_code )		3496112	1					
ANR	3496221	Condition	c == end_code	2761:8:58774:58786	3496112	0	True				
ANR	3496222	EqualityExpression	c == end_code		3496112	0		==			
ANR	3496223	Identifier	c		3496112	0					
ANR	3496224	Identifier	end_code		3496112	1					
ANR	3496225	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2762:6:58795:58826	3496112	1	True				
ANR	3496226	Identifier	ONIGERR_EMPTY_GROUP_NAME		3496112	0					
ANR	3496227	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		3496112	2					
ANR	3496228	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2764:8:58837:58865	3496112	0	True				
ANR	3496229	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		3496112	0					
ANR	3496230	Callee	ONIGENC_IS_CODE_DIGIT		3496112	0					
ANR	3496231	Identifier	ONIGENC_IS_CODE_DIGIT		3496112	0					
ANR	3496232	ArgumentList	enc		3496112	1					
ANR	3496233	Argument	enc		3496112	0					
ANR	3496234	Identifier	enc		3496112	0					
ANR	3496235	Argument	c		3496112	1					
ANR	3496236	Identifier	c		3496112	0					
ANR	3496237	CompoundStatement		29:39:517:517	3496112	1					
ANR	3496238	ExpressionStatement	is_num = 1	2765:6:58876:58886	3496112	0	True				
ANR	3496239	AssignmentExpression	is_num = 1		3496112	0		=			
ANR	3496240	Identifier	is_num		3496112	0					
ANR	3496241	PrimaryExpression	1		3496112	1					
ANR	3496242	ElseStatement	else		3496112	0					
ANR	3496243	IfStatement	if ( c == '-' )		3496112	0					
ANR	3496244	Condition	c == '-'	2767:13:58907:58914	3496112	0	True				
ANR	3496245	EqualityExpression	c == '-'		3496112	0		==			
ANR	3496246	Identifier	c		3496112	0					
ANR	3496247	PrimaryExpression	'-'		3496112	1					
ANR	3496248	CompoundStatement		32:23:566:566	3496112	1					
ANR	3496249	ExpressionStatement	is_num = 2	2768:6:58925:58935	3496112	0	True				
ANR	3496250	AssignmentExpression	is_num = 2		3496112	0		=			
ANR	3496251	Identifier	is_num		3496112	0					
ANR	3496252	PrimaryExpression	2		3496112	1					
ANR	3496253	ExpressionStatement	sign = - 1	2769:6:58943:58952	3496112	1	True				
ANR	3496254	AssignmentExpression	sign = - 1		3496112	0		=			
ANR	3496255	Identifier	sign		3496112	0					
ANR	3496256	UnaryOperationExpression	- 1		3496112	1					
ANR	3496257	UnaryOperator	-		3496112	0					
ANR	3496258	PrimaryExpression	1		3496112	1					
ANR	3496259	ExpressionStatement	pnum_head = p	2770:6:58960:58973	3496112	2	True				
ANR	3496260	AssignmentExpression	pnum_head = p		3496112	0		=			
ANR	3496261	Identifier	pnum_head		3496112	0					
ANR	3496262	Identifier	p		3496112	1					
ANR	3496263	ElseStatement	else		3496112	0					
ANR	3496264	CompoundStatement		37:9:639:639	3496112	0					
ANR	3496265	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2773:6:58998:59036	3496112	0	True				
ANR	3496266	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3496112	0		=			
ANR	3496267	Identifier	r		3496112	0					
ANR	3496268	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3496112	1					
ANR	3496269	WhileStatement	while ( ! PEND )		3496112	16					
ANR	3496270	Condition	! PEND	2777:9:59058:59062	3496112	0	True				
ANR	3496271	UnaryOperationExpression	! PEND		3496112	0					
ANR	3496272	UnaryOperator	!		3496112	0					
ANR	3496273	Identifier	PEND		3496112	1					
ANR	3496274	CompoundStatement		42:16:714:714	3496112	1					
ANR	3496275	ExpressionStatement	name_end = p	2778:4:59071:59083	3496112	0	True				
ANR	3496276	AssignmentExpression	name_end = p		3496112	0		=			
ANR	3496277	Identifier	name_end		3496112	0					
ANR	3496278	Identifier	p		3496112	1					
ANR	3496279	ExpressionStatement	PFETCH ( c )	2780:4:59090:59099	3496112	1	True				
ANR	3496280	CallExpression	PFETCH ( c )		3496112	0					
ANR	3496281	Callee	PFETCH		3496112	0					
ANR	3496282	Identifier	PFETCH		3496112	0					
ANR	3496283	ArgumentList	c		3496112	1					
ANR	3496284	Argument	c		3496112	0					
ANR	3496285	Identifier	c		3496112	0					
ANR	3496286	IfStatement	if ( c == end_code || c == ')' )		3496112	2					
ANR	3496287	Condition	c == end_code || c == ')'	2781:8:59109:59133	3496112	0	True				
ANR	3496288	OrExpression	c == end_code || c == ')'		3496112	0		||			
ANR	3496289	EqualityExpression	c == end_code		3496112	0		==			
ANR	3496290	Identifier	c		3496112	0					
ANR	3496291	Identifier	end_code		3496112	1					
ANR	3496292	EqualityExpression	c == ')'		3496112	1		==			
ANR	3496293	Identifier	c		3496112	0					
ANR	3496294	PrimaryExpression	')'		3496112	1					
ANR	3496295	BreakStatement	break ;	2781:35:59136:59141	3496112	1	True				
ANR	3496296	IfStatement	"if ( ! ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		3496112	3					
ANR	3496297	Condition	"! ONIGENC_IS_CODE_DIGIT ( enc , c )"	2782:8:59151:59181	3496112	0	True				
ANR	3496298	UnaryOperationExpression	"! ONIGENC_IS_CODE_DIGIT ( enc , c )"		3496112	0					
ANR	3496299	UnaryOperator	!		3496112	0					
ANR	3496300	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		3496112	1					
ANR	3496301	Callee	ONIGENC_IS_CODE_DIGIT		3496112	0					
ANR	3496302	Identifier	ONIGENC_IS_CODE_DIGIT		3496112	0					
ANR	3496303	ArgumentList	enc		3496112	1					
ANR	3496304	Argument	enc		3496112	0					
ANR	3496305	Identifier	enc		3496112	0					
ANR	3496306	Argument	c		3496112	1					
ANR	3496307	Identifier	c		3496112	0					
ANR	3496308	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2783:6:59190:59228	3496112	1	True				
ANR	3496309	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3496112	0		=			
ANR	3496310	Identifier	r		3496112	0					
ANR	3496311	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3496112	1					
ANR	3496312	IfStatement	if ( r == 0 && c != end_code )		3496112	17					
ANR	3496313	Condition	r == 0 && c != end_code	2785:6:59240:59262	3496112	0	True				
ANR	3496314	AndExpression	r == 0 && c != end_code		3496112	0		&&			
ANR	3496315	EqualityExpression	r == 0		3496112	0		==			
ANR	3496316	Identifier	r		3496112	0					
ANR	3496317	PrimaryExpression	0		3496112	1					
ANR	3496318	EqualityExpression	c != end_code		3496112	1		!=			
ANR	3496319	Identifier	c		3496112	0					
ANR	3496320	Identifier	end_code		3496112	1					
ANR	3496321	CompoundStatement		50:31:914:914	3496112	1					
ANR	3496322	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2786:4:59271:59301	3496112	0	True				
ANR	3496323	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		3496112	0		=			
ANR	3496324	Identifier	r		3496112	0					
ANR	3496325	Identifier	ONIGERR_INVALID_GROUP_NAME		3496112	1					
ANR	3496326	ExpressionStatement	name_end = end	2787:4:59307:59321	3496112	1	True				
ANR	3496327	AssignmentExpression	name_end = end		3496112	0		=			
ANR	3496328	Identifier	name_end		3496112	0					
ANR	3496329	Identifier	end		3496112	1					
ANR	3496330	IfStatement	if ( r == 0 )		3496112	18					
ANR	3496331	Condition	r == 0	2790:6:59334:59339	3496112	0	True				
ANR	3496332	EqualityExpression	r == 0		3496112	0		==			
ANR	3496333	Identifier	r		3496112	0					
ANR	3496334	PrimaryExpression	0		3496112	1					
ANR	3496335	CompoundStatement		55:14:991:991	3496112	1					
ANR	3496336	ExpressionStatement	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"	2791:4:59348:59413	3496112	0	True				
ANR	3496337	AssignmentExpression	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		3496112	0		=			
ANR	3496338	UnaryOperationExpression	* rback_num		3496112	0					
ANR	3496339	UnaryOperator	*		3496112	0					
ANR	3496340	Identifier	rback_num		3496112	1					
ANR	3496341	CallExpression	"onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		3496112	1					
ANR	3496342	Callee	onig_scan_unsigned_number		3496112	0					
ANR	3496343	Identifier	onig_scan_unsigned_number		3496112	0					
ANR	3496344	ArgumentList	& pnum_head		3496112	1					
ANR	3496345	Argument	& pnum_head		3496112	0					
ANR	3496346	UnaryOperationExpression	& pnum_head		3496112	0					
ANR	3496347	UnaryOperator	&		3496112	0					
ANR	3496348	Identifier	pnum_head		3496112	1					
ANR	3496349	Argument	name_end		3496112	1					
ANR	3496350	Identifier	name_end		3496112	0					
ANR	3496351	Argument	enc		3496112	2					
ANR	3496352	Identifier	enc		3496112	0					
ANR	3496353	IfStatement	if ( * rback_num < 0 )		3496112	1					
ANR	3496354	Condition	* rback_num < 0	2792:8:59423:59436	3496112	0	True				
ANR	3496355	RelationalExpression	* rback_num < 0		3496112	0		<			
ANR	3496356	UnaryOperationExpression	* rback_num		3496112	0					
ANR	3496357	UnaryOperator	*		3496112	0					
ANR	3496358	Identifier	rback_num		3496112	1					
ANR	3496359	PrimaryExpression	0		3496112	1					
ANR	3496360	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	2792:24:59439:59468	3496112	1	True				
ANR	3496361	Identifier	ONIGERR_TOO_BIG_NUMBER		3496112	0					
ANR	3496362	ElseStatement	else		3496112	0					
ANR	3496363	IfStatement	if ( * rback_num == 0 )		3496112	0					
ANR	3496364	Condition	* rback_num == 0	2793:13:59483:59497	3496112	0	True				
ANR	3496365	EqualityExpression	* rback_num == 0		3496112	0		==			
ANR	3496366	UnaryOperationExpression	* rback_num		3496112	0					
ANR	3496367	UnaryOperator	*		3496112	0					
ANR	3496368	Identifier	rback_num		3496112	1					
ANR	3496369	PrimaryExpression	0		3496112	1					
ANR	3496370	CompoundStatement		58:30:1149:1149	3496112	1					
ANR	3496371	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2794:6:59508:59538	3496112	0	True				
ANR	3496372	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		3496112	0		=			
ANR	3496373	Identifier	r		3496112	0					
ANR	3496374	Identifier	ONIGERR_INVALID_GROUP_NAME		3496112	1					
ANR	3496375	GotoStatement	goto err ;	2795:6:59546:59554	3496112	1	True				
ANR	3496376	Identifier	err		3496112	0					
ANR	3496377	ExpressionStatement	* rback_num *= sign	2797:4:59566:59584	3496112	2	True				
ANR	3496378	AssignmentExpression	* rback_num *= sign		3496112	0		*=			
ANR	3496379	UnaryOperationExpression	* rback_num		3496112	0					
ANR	3496380	UnaryOperator	*		3496112	0					
ANR	3496381	Identifier	rback_num		3496112	1					
ANR	3496382	Identifier	sign		3496112	1					
ANR	3496383	ExpressionStatement	* rname_end = name_end	2799:4:59591:59612	3496112	3	True				
ANR	3496384	AssignmentExpression	* rname_end = name_end		3496112	0		=			
ANR	3496385	UnaryOperationExpression	* rname_end		3496112	0					
ANR	3496386	UnaryOperator	*		3496112	0					
ANR	3496387	Identifier	rname_end		3496112	1					
ANR	3496388	Identifier	name_end		3496112	1					
ANR	3496389	ExpressionStatement	* src = p	2800:4:59618:59626	3496112	4	True				
ANR	3496390	AssignmentExpression	* src = p		3496112	0		=			
ANR	3496391	UnaryOperationExpression	* src		3496112	0					
ANR	3496392	UnaryOperator	*		3496112	0					
ANR	3496393	Identifier	src		3496112	1					
ANR	3496394	Identifier	p		3496112	1					
ANR	3496395	ReturnStatement	return 0 ;	2801:4:59632:59640	3496112	5	True				
ANR	3496396	PrimaryExpression	0		3496112	0					
ANR	3496397	ElseStatement	else		3496112	0					
ANR	3496398	CompoundStatement		68:7:1302:1302	3496112	0					
ANR	3496399	Label	err :	2804:2:59657:59660	3496112	0	True				
ANR	3496400	Identifier	err		3496112	0					
ANR	3496401	ExpressionStatement	"onig_scan_env_set_error_string ( env , r , * src , name_end )"	2805:4:59666:59720	3496112	1	True				
ANR	3496402	CallExpression	"onig_scan_env_set_error_string ( env , r , * src , name_end )"		3496112	0					
ANR	3496403	Callee	onig_scan_env_set_error_string		3496112	0					
ANR	3496404	Identifier	onig_scan_env_set_error_string		3496112	0					
ANR	3496405	ArgumentList	env		3496112	1					
ANR	3496406	Argument	env		3496112	0					
ANR	3496407	Identifier	env		3496112	0					
ANR	3496408	Argument	r		3496112	1					
ANR	3496409	Identifier	r		3496112	0					
ANR	3496410	Argument	* src		3496112	2					
ANR	3496411	UnaryOperationExpression	* src		3496112	0					
ANR	3496412	UnaryOperator	*		3496112	0					
ANR	3496413	Identifier	src		3496112	1					
ANR	3496414	Argument	name_end		3496112	3					
ANR	3496415	Identifier	name_end		3496112	0					
ANR	3496416	ReturnStatement	return r ;	2806:4:59726:59734	3496112	2	True				
ANR	3496417	Identifier	r		3496112	0					
ANR	3496418	ReturnType	static int		3496112	1					
ANR	3496419	Identifier	fetch_name		3496112	2					
ANR	3496420	ParameterList	"OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int ref"		3496112	3					
ANR	3496421	Parameter	OnigCodePoint start_code	2734:11:58237:58260	3496112	0	True				
ANR	3496422	ParameterType	OnigCodePoint		3496112	0					
ANR	3496423	Identifier	start_code		3496112	1					
ANR	3496424	Parameter	UChar * * src	2734:37:58263:58273	3496112	1	True				
ANR	3496425	ParameterType	UChar * *		3496112	0					
ANR	3496426	Identifier	src		3496112	1					
ANR	3496427	Parameter	UChar * end	2734:50:58276:58285	3496112	2	True				
ANR	3496428	ParameterType	UChar *		3496112	0					
ANR	3496429	Identifier	end		3496112	1					
ANR	3496430	Parameter	UChar * * rname_end	2735:4:58292:58308	3496112	3	True				
ANR	3496431	ParameterType	UChar * *		3496112	0					
ANR	3496432	Identifier	rname_end		3496112	1					
ANR	3496433	Parameter	ScanEnv * env	2735:23:58311:58322	3496112	4	True				
ANR	3496434	ParameterType	ScanEnv *		3496112	0					
ANR	3496435	Identifier	env		3496112	1					
ANR	3496436	Parameter	int * rback_num	2735:37:58325:58338	3496112	5	True				
ANR	3496437	ParameterType	int *		3496112	0					
ANR	3496438	Identifier	rback_num		3496112	1					
ANR	3496439	Parameter	int ref	2735:53:58341:58347	3496112	6	True				
ANR	3496440	ParameterType	int		3496112	0					
ANR	3496441	Identifier	ref		3496112	1					
ANR	3496442	CFGEntryNode	ENTRY		3496112		True				
ANR	3496443	CFGExitNode	EXIT		3496112		True				
ANR	3496444	Symbol	ONIGERR_EMPTY_GROUP_NAME		3496112						
ANR	3496445	Symbol	end_code		3496112						
ANR	3496446	Symbol	* rname_end		3496112						
ANR	3496447	Symbol	ONIGENC_IS_CODE_DIGIT		3496112						
ANR	3496448	Symbol	sign		3496112						
ANR	3496449	Symbol	rback_num		3496112						
ANR	3496450	Symbol	env -> enc		3496112						
ANR	3496451	Symbol	ONIGERR_INVALID_GROUP_NAME		3496112						
ANR	3496452	Symbol	onig_scan_unsigned_number		3496112						
ANR	3496453	Symbol	* src		3496112						
ANR	3496454	Symbol	PEND		3496112						
ANR	3496455	Symbol	ref		3496112						
ANR	3496456	Symbol	& pnum_head		3496112						
ANR	3496457	Symbol	end		3496112						
ANR	3496458	Symbol	enc		3496112						
ANR	3496459	Symbol	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		3496112						
ANR	3496460	Symbol	start_code		3496112						
ANR	3496461	Symbol	name_end		3496112						
ANR	3496462	Symbol	is_num		3496112						
ANR	3496463	Symbol	c		3496112						
ANR	3496464	Symbol	ONIGERR_TOO_BIG_NUMBER		3496112						
ANR	3496465	Symbol	src		3496112						
ANR	3496466	Symbol	* env		3496112						
ANR	3496467	Symbol	rname_end		3496112						
ANR	3496468	Symbol	get_name_end_code_point		3496112						
ANR	3496469	Symbol	env		3496112						
ANR	3496470	Symbol	p		3496112						
ANR	3496471	Symbol	r		3496112						
ANR	3496472	Symbol	* rback_num		3496112						
ANR	3496473	Symbol	pnum_head		3496112						
ANR	3496474	Function	CC_ESC_WARN	2811:0:59772:60233							
ANR	3496475	FunctionDef	"CC_ESC_WARN (ScanEnv * env , UChar * c)"		3496474	0					
ANR	3496476	CompoundStatement		2813:0:59820:60233	3496474	0					
ANR	3496477	IfStatement	if ( onig_warn == onig_null_warn )		3496474	0					
ANR	3496478	Condition	onig_warn == onig_null_warn	2814:6:59828:59854	3496474	0	True				
ANR	3496479	EqualityExpression	onig_warn == onig_null_warn		3496474	0		==			
ANR	3496480	Identifier	onig_warn		3496474	0					
ANR	3496481	Identifier	onig_null_warn		3496474	1					
ANR	3496482	ReturnStatement	return ;	2814:35:59857:59864	3496474	1	True				
ANR	3496483	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC ) )"		3496474	1					
ANR	3496484	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"	2816:6:59873:59998	3496474	0	True				
ANR	3496485	AndExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"		3496474	0		&&			
ANR	3496486	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED )"		3496474	0					
ANR	3496487	Callee	IS_SYNTAX_BV		3496474	0					
ANR	3496488	Identifier	IS_SYNTAX_BV		3496474	0					
ANR	3496489	ArgumentList	env -> syntax		3496474	1					
ANR	3496490	Argument	env -> syntax		3496474	0					
ANR	3496491	PtrMemberAccess	env -> syntax		3496474	0					
ANR	3496492	Identifier	env		3496474	0					
ANR	3496493	Identifier	syntax		3496474	1					
ANR	3496494	Argument	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		3496474	1					
ANR	3496495	Identifier	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		3496474	0					
ANR	3496496	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"		3496474	1					
ANR	3496497	Callee	IS_SYNTAX_BV		3496474	0					
ANR	3496498	Identifier	IS_SYNTAX_BV		3496474	0					
ANR	3496499	ArgumentList	env -> syntax		3496474	1					
ANR	3496500	Argument	env -> syntax		3496474	0					
ANR	3496501	PtrMemberAccess	env -> syntax		3496474	0					
ANR	3496502	Identifier	env		3496474	0					
ANR	3496503	Identifier	syntax		3496474	1					
ANR	3496504	Argument	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		3496474	1					
ANR	3496505	Identifier	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		3496474	0					
ANR	3496506	CompoundStatement		6:4:186:209	3496474	1					
ANR	3496507	IdentifierDeclStatement	UChar buf [ WARN_BUFSIZE ] ;	2818:4:60007:60030	3496474	0	True				
ANR	3496508	IdentifierDecl	buf [ WARN_BUFSIZE ]		3496474	0					
ANR	3496509	IdentifierDeclType	UChar [ WARN_BUFSIZE ]		3496474	0					
ANR	3496510	Identifier	buf		3496474	1					
ANR	3496511	Identifier	WARN_BUFSIZE		3496474	2					
ANR	3496512	ExpressionStatement	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""character class has '%s' without escape"" , c )"	2819:4:60036:60196	3496474	1	True				
ANR	3496513	CallExpression	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""character class has '%s' without escape"" , c )"		3496474	0					
ANR	3496514	Callee	onig_snprintf_with_pattern		3496474	0					
ANR	3496515	Identifier	onig_snprintf_with_pattern		3496474	0					
ANR	3496516	ArgumentList	buf		3496474	1					
ANR	3496517	Argument	buf		3496474	0					
ANR	3496518	Identifier	buf		3496474	0					
ANR	3496519	Argument	WARN_BUFSIZE		3496474	1					
ANR	3496520	Identifier	WARN_BUFSIZE		3496474	0					
ANR	3496521	Argument	env -> enc		3496474	2					
ANR	3496522	PtrMemberAccess	env -> enc		3496474	0					
ANR	3496523	Identifier	env		3496474	0					
ANR	3496524	Identifier	enc		3496474	1					
ANR	3496525	Argument	env -> pattern		3496474	3					
ANR	3496526	PtrMemberAccess	env -> pattern		3496474	0					
ANR	3496527	Identifier	env		3496474	0					
ANR	3496528	Identifier	pattern		3496474	1					
ANR	3496529	Argument	env -> pattern_end		3496474	4					
ANR	3496530	PtrMemberAccess	env -> pattern_end		3496474	0					
ANR	3496531	Identifier	env		3496474	0					
ANR	3496532	Identifier	pattern_end		3496474	1					
ANR	3496533	Argument	"( UChar * ) ""character class has '%s' without escape"""		3496474	5					
ANR	3496534	CastExpression	"( UChar * ) ""character class has '%s' without escape"""		3496474	0					
ANR	3496535	CastTarget	UChar *		3496474	0					
ANR	3496536	PrimaryExpression	"""character class has '%s' without escape"""		3496474	1					
ANR	3496537	Argument	c		3496474	6					
ANR	3496538	Identifier	c		3496474	0					
ANR	3496539	ExpressionStatement	( * onig_warn ) ( ( char * ) buf )	2822:4:60202:60227	3496474	2	True				
ANR	3496540	CallExpression	( * onig_warn ) ( ( char * ) buf )		3496474	0					
ANR	3496541	Callee	* onig_warn		3496474	0					
ANR	3496542	UnaryOperationExpression	* onig_warn		3496474	0					
ANR	3496543	UnaryOperator	*		3496474	0					
ANR	3496544	Identifier	onig_warn		3496474	1					
ANR	3496545	ArgumentList	( char * ) buf		3496474	1					
ANR	3496546	Argument	( char * ) buf		3496474	0					
ANR	3496547	CastExpression	( char * ) buf		3496474	0					
ANR	3496548	CastTarget	char *		3496474	0					
ANR	3496549	Identifier	buf		3496474	1					
ANR	3496550	ReturnType	static void		3496474	1					
ANR	3496551	Identifier	CC_ESC_WARN		3496474	2					
ANR	3496552	ParameterList	"ScanEnv * env , UChar * c"		3496474	3					
ANR	3496553	Parameter	ScanEnv * env	2812:12:59796:59807	3496474	0	True				
ANR	3496554	ParameterType	ScanEnv *		3496474	0					
ANR	3496555	Identifier	env		3496474	1					
ANR	3496556	Parameter	UChar * c	2812:26:59810:59817	3496474	1	True				
ANR	3496557	ParameterType	UChar *		3496474	0					
ANR	3496558	Identifier	c		3496474	1					
ANR	3496559	CFGEntryNode	ENTRY		3496474		True				
ANR	3496560	CFGExitNode	EXIT		3496474		True				
ANR	3496561	Symbol	c		3496474						
ANR	3496562	Symbol	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		3496474						
ANR	3496563	Symbol	* env		3496474						
ANR	3496564	Symbol	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		3496474						
ANR	3496565	Symbol	env -> enc		3496474						
ANR	3496566	Symbol	env		3496474						
ANR	3496567	Symbol	env -> syntax		3496474						
ANR	3496568	Symbol	buf		3496474						
ANR	3496569	Symbol	WARN_BUFSIZE		3496474						
ANR	3496570	Symbol	onig_null_warn		3496474						
ANR	3496571	Symbol	env -> pattern		3496474						
ANR	3496572	Symbol	env -> pattern_end		3496474						
ANR	3496573	Symbol	onig_warn		3496474						
ANR	3496574	Symbol	IS_SYNTAX_BV		3496474						
ANR	3496575	Function	CLOSE_BRACKET_WITHOUT_ESC_WARN	2826:0:60236:60645							
ANR	3496576	FunctionDef	"CLOSE_BRACKET_WITHOUT_ESC_WARN (ScanEnv * env , UChar * c)"		3496575	0					
ANR	3496577	CompoundStatement		2828:0:60303:60645	3496575	0					
ANR	3496578	IfStatement	if ( onig_warn == onig_null_warn )		3496575	0					
ANR	3496579	Condition	onig_warn == onig_null_warn	2829:6:60311:60337	3496575	0	True				
ANR	3496580	EqualityExpression	onig_warn == onig_null_warn		3496575	0		==			
ANR	3496581	Identifier	onig_warn		3496575	0					
ANR	3496582	Identifier	onig_null_warn		3496575	1					
ANR	3496583	ReturnStatement	return ;	2829:35:60340:60347	3496575	1	True				
ANR	3496584	IfStatement	"if ( IS_SYNTAX_BV ( ( env ) -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED ) )"		3496575	1					
ANR	3496585	Condition	"IS_SYNTAX_BV ( ( env ) -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED )"	2831:6:60356:60415	3496575	0	True				
ANR	3496586	CallExpression	"IS_SYNTAX_BV ( ( env ) -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED )"		3496575	0					
ANR	3496587	Callee	IS_SYNTAX_BV		3496575	0					
ANR	3496588	Identifier	IS_SYNTAX_BV		3496575	0					
ANR	3496589	ArgumentList	( env ) -> syntax		3496575	1					
ANR	3496590	Argument	( env ) -> syntax		3496575	0					
ANR	3496591	PtrMemberAccess	( env ) -> syntax		3496575	0					
ANR	3496592	Identifier	env		3496575	0					
ANR	3496593	Identifier	syntax		3496575	1					
ANR	3496594	Argument	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		3496575	1					
ANR	3496595	Identifier	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		3496575	0					
ANR	3496596	CompoundStatement		5:4:120:143	3496575	1					
ANR	3496597	IdentifierDeclStatement	UChar buf [ WARN_BUFSIZE ] ;	2832:4:60424:60447	3496575	0	True				
ANR	3496598	IdentifierDecl	buf [ WARN_BUFSIZE ]		3496575	0					
ANR	3496599	IdentifierDeclType	UChar [ WARN_BUFSIZE ]		3496575	0					
ANR	3496600	Identifier	buf		3496575	1					
ANR	3496601	Identifier	WARN_BUFSIZE		3496575	2					
ANR	3496602	ExpressionStatement	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , ( env ) -> enc , ( env ) -> pattern , ( env ) -> pattern_end , ( UChar * ) ""regular expression has '%s' without escape"" , c )"	2833:4:60453:60608	3496575	1	True				
ANR	3496603	CallExpression	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , ( env ) -> enc , ( env ) -> pattern , ( env ) -> pattern_end , ( UChar * ) ""regular expression has '%s' without escape"" , c )"		3496575	0					
ANR	3496604	Callee	onig_snprintf_with_pattern		3496575	0					
ANR	3496605	Identifier	onig_snprintf_with_pattern		3496575	0					
ANR	3496606	ArgumentList	buf		3496575	1					
ANR	3496607	Argument	buf		3496575	0					
ANR	3496608	Identifier	buf		3496575	0					
ANR	3496609	Argument	WARN_BUFSIZE		3496575	1					
ANR	3496610	Identifier	WARN_BUFSIZE		3496575	0					
ANR	3496611	Argument	( env ) -> enc		3496575	2					
ANR	3496612	PtrMemberAccess	( env ) -> enc		3496575	0					
ANR	3496613	Identifier	env		3496575	0					
ANR	3496614	Identifier	enc		3496575	1					
ANR	3496615	Argument	( env ) -> pattern		3496575	3					
ANR	3496616	PtrMemberAccess	( env ) -> pattern		3496575	0					
ANR	3496617	Identifier	env		3496575	0					
ANR	3496618	Identifier	pattern		3496575	1					
ANR	3496619	Argument	( env ) -> pattern_end		3496575	4					
ANR	3496620	PtrMemberAccess	( env ) -> pattern_end		3496575	0					
ANR	3496621	Identifier	env		3496575	0					
ANR	3496622	Identifier	pattern_end		3496575	1					
ANR	3496623	Argument	"( UChar * ) ""regular expression has '%s' without escape"""		3496575	5					
ANR	3496624	CastExpression	"( UChar * ) ""regular expression has '%s' without escape"""		3496575	0					
ANR	3496625	CastTarget	UChar *		3496575	0					
ANR	3496626	PrimaryExpression	"""regular expression has '%s' without escape"""		3496575	1					
ANR	3496627	Argument	c		3496575	6					
ANR	3496628	Identifier	c		3496575	0					
ANR	3496629	ExpressionStatement	( * onig_warn ) ( ( char * ) buf )	2836:4:60614:60639	3496575	2	True				
ANR	3496630	CallExpression	( * onig_warn ) ( ( char * ) buf )		3496575	0					
ANR	3496631	Callee	* onig_warn		3496575	0					
ANR	3496632	UnaryOperationExpression	* onig_warn		3496575	0					
ANR	3496633	UnaryOperator	*		3496575	0					
ANR	3496634	Identifier	onig_warn		3496575	1					
ANR	3496635	ArgumentList	( char * ) buf		3496575	1					
ANR	3496636	Argument	( char * ) buf		3496575	0					
ANR	3496637	CastExpression	( char * ) buf		3496575	0					
ANR	3496638	CastTarget	char *		3496575	0					
ANR	3496639	Identifier	buf		3496575	1					
ANR	3496640	ReturnType	static void		3496575	1					
ANR	3496641	Identifier	CLOSE_BRACKET_WITHOUT_ESC_WARN		3496575	2					
ANR	3496642	ParameterList	"ScanEnv * env , UChar * c"		3496575	3					
ANR	3496643	Parameter	ScanEnv * env	2827:31:60279:60290	3496575	0	True				
ANR	3496644	ParameterType	ScanEnv *		3496575	0					
ANR	3496645	Identifier	env		3496575	1					
ANR	3496646	Parameter	UChar * c	2827:45:60293:60300	3496575	1	True				
ANR	3496647	ParameterType	UChar *		3496575	0					
ANR	3496648	Identifier	c		3496575	1					
ANR	3496649	CFGEntryNode	ENTRY		3496575		True				
ANR	3496650	CFGExitNode	EXIT		3496575		True				
ANR	3496651	Symbol	c		3496575						
ANR	3496652	Symbol	* env		3496575						
ANR	3496653	Symbol	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		3496575						
ANR	3496654	Symbol	( env ) -> enc		3496575						
ANR	3496655	Symbol	env		3496575						
ANR	3496656	Symbol	( env ) -> syntax		3496575						
ANR	3496657	Symbol	buf		3496575						
ANR	3496658	Symbol	WARN_BUFSIZE		3496575						
ANR	3496659	Symbol	onig_null_warn		3496575						
ANR	3496660	Symbol	( env ) -> pattern_end		3496575						
ANR	3496661	Symbol	( env ) -> pattern		3496575						
ANR	3496662	Symbol	onig_warn		3496575						
ANR	3496663	Symbol	IS_SYNTAX_BV		3496575						
ANR	3496664	Function	find_str_position	2840:0:60648:61192							
ANR	3496665	FunctionDef	"find_str_position (OnigCodePoint s [ ] , int n , UChar * from , UChar * to , UChar * * next , OnigEncoding enc)"		3496664	0					
ANR	3496666	CompoundStatement		2843:0:60766:61192	3496664	0					
ANR	3496667	IdentifierDeclStatement	int i ;	2844:2:60770:60775	3496664	0	True				
ANR	3496668	IdentifierDecl	i		3496664	0					
ANR	3496669	IdentifierDeclType	int		3496664	0					
ANR	3496670	Identifier	i		3496664	1					
ANR	3496671	IdentifierDeclStatement	OnigCodePoint x ;	2845:2:60779:60794	3496664	1	True				
ANR	3496672	IdentifierDecl	x		3496664	0					
ANR	3496673	IdentifierDeclType	OnigCodePoint		3496664	0					
ANR	3496674	Identifier	x		3496664	1					
ANR	3496675	IdentifierDeclStatement	UChar * q ;	2846:2:60798:60806	3496664	2	True				
ANR	3496676	IdentifierDecl	* q		3496664	0					
ANR	3496677	IdentifierDeclType	UChar *		3496664	0					
ANR	3496678	Identifier	q		3496664	1					
ANR	3496679	IdentifierDeclStatement	UChar * p = from ;	2847:2:60810:60825	3496664	3	True				
ANR	3496680	IdentifierDecl	* p = from		3496664	0					
ANR	3496681	IdentifierDeclType	UChar *		3496664	0					
ANR	3496682	Identifier	p		3496664	1					
ANR	3496683	AssignmentExpression	* p = from		3496664	2		=			
ANR	3496684	Identifier	from		3496664	0					
ANR	3496685	Identifier	from		3496664	1					
ANR	3496686	WhileStatement	while ( p < to )		3496664	4					
ANR	3496687	Condition	p < to	2849:9:60839:60844	3496664	0	True				
ANR	3496688	RelationalExpression	p < to		3496664	0		<			
ANR	3496689	Identifier	p		3496664	0					
ANR	3496690	Identifier	to		3496664	1					
ANR	3496691	CompoundStatement		7:17:80:80	3496664	1					
ANR	3496692	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"	2850:4:60853:60888	3496664	0	True				
ANR	3496693	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"		3496664	0		=			
ANR	3496694	Identifier	x		3496664	0					
ANR	3496695	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , p , to )"		3496664	1					
ANR	3496696	Callee	ONIGENC_MBC_TO_CODE		3496664	0					
ANR	3496697	Identifier	ONIGENC_MBC_TO_CODE		3496664	0					
ANR	3496698	ArgumentList	enc		3496664	1					
ANR	3496699	Argument	enc		3496664	0					
ANR	3496700	Identifier	enc		3496664	0					
ANR	3496701	Argument	p		3496664	1					
ANR	3496702	Identifier	p		3496664	0					
ANR	3496703	Argument	to		3496664	2					
ANR	3496704	Identifier	to		3496664	0					
ANR	3496705	ExpressionStatement	"q = p + enclen ( enc , p )"	2851:4:60894:60916	3496664	1	True				
ANR	3496706	AssignmentExpression	"q = p + enclen ( enc , p )"		3496664	0		=			
ANR	3496707	Identifier	q		3496664	0					
ANR	3496708	AdditiveExpression	"p + enclen ( enc , p )"		3496664	1		+			
ANR	3496709	Identifier	p		3496664	0					
ANR	3496710	CallExpression	"enclen ( enc , p )"		3496664	1					
ANR	3496711	Callee	enclen		3496664	0					
ANR	3496712	Identifier	enclen		3496664	0					
ANR	3496713	ArgumentList	enc		3496664	1					
ANR	3496714	Argument	enc		3496664	0					
ANR	3496715	Identifier	enc		3496664	0					
ANR	3496716	Argument	p		3496664	1					
ANR	3496717	Identifier	p		3496664	0					
ANR	3496718	IfStatement	if ( x == s [ 0 ] )		3496664	2					
ANR	3496719	Condition	x == s [ 0 ]	2852:8:60926:60934	3496664	0	True				
ANR	3496720	EqualityExpression	x == s [ 0 ]		3496664	0		==			
ANR	3496721	Identifier	x		3496664	0					
ANR	3496722	ArrayIndexing	s [ 0 ]		3496664	1					
ANR	3496723	Identifier	s		3496664	0					
ANR	3496724	PrimaryExpression	0		3496664	1					
ANR	3496725	CompoundStatement		10:19:170:170	3496664	1					
ANR	3496726	ForStatement	for ( i = 1 ; i < n && q < to ; i ++ )		3496664	0					
ANR	3496727	ForInit	i = 1 ;	2853:11:60950:60955	3496664	0	True				
ANR	3496728	AssignmentExpression	i = 1		3496664	0		=			
ANR	3496729	Identifier	i		3496664	0					
ANR	3496730	PrimaryExpression	1		3496664	1					
ANR	3496731	Condition	i < n && q < to	2853:18:60957:60971	3496664	1	True				
ANR	3496732	AndExpression	i < n && q < to		3496664	0		&&			
ANR	3496733	RelationalExpression	i < n		3496664	0		<			
ANR	3496734	Identifier	i		3496664	0					
ANR	3496735	Identifier	n		3496664	1					
ANR	3496736	RelationalExpression	q < to		3496664	1		<			
ANR	3496737	Identifier	q		3496664	0					
ANR	3496738	Identifier	to		3496664	1					
ANR	3496739	PostIncDecOperationExpression	i ++	2853:35:60974:60976	3496664	2	True				
ANR	3496740	Identifier	i		3496664	0					
ANR	3496741	IncDec	++		3496664	1					
ANR	3496742	CompoundStatement		11:40:212:212	3496664	3					
ANR	3496743	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , q , to )"	2854:1:60982:61017	3496664	0	True				
ANR	3496744	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , q , to )"		3496664	0		=			
ANR	3496745	Identifier	x		3496664	0					
ANR	3496746	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , q , to )"		3496664	1					
ANR	3496747	Callee	ONIGENC_MBC_TO_CODE		3496664	0					
ANR	3496748	Identifier	ONIGENC_MBC_TO_CODE		3496664	0					
ANR	3496749	ArgumentList	enc		3496664	1					
ANR	3496750	Argument	enc		3496664	0					
ANR	3496751	Identifier	enc		3496664	0					
ANR	3496752	Argument	q		3496664	1					
ANR	3496753	Identifier	q		3496664	0					
ANR	3496754	Argument	to		3496664	2					
ANR	3496755	Identifier	to		3496664	0					
ANR	3496756	IfStatement	if ( x != s [ i ] )		3496664	1					
ANR	3496757	Condition	x != s [ i ]	2855:5:61024:61032	3496664	0	True				
ANR	3496758	EqualityExpression	x != s [ i ]		3496664	0		!=			
ANR	3496759	Identifier	x		3496664	0					
ANR	3496760	ArrayIndexing	s [ i ]		3496664	1					
ANR	3496761	Identifier	s		3496664	0					
ANR	3496762	Identifier	i		3496664	1					
ANR	3496763	BreakStatement	break ;	2855:16:61035:61040	3496664	1	True				
ANR	3496764	ExpressionStatement	"q += enclen ( enc , q )"	2856:1:61043:61062	3496664	2	True				
ANR	3496765	AssignmentExpression	"q += enclen ( enc , q )"		3496664	0		+=			
ANR	3496766	Identifier	q		3496664	0					
ANR	3496767	CallExpression	"enclen ( enc , q )"		3496664	1					
ANR	3496768	Callee	enclen		3496664	0					
ANR	3496769	Identifier	enclen		3496664	0					
ANR	3496770	ArgumentList	enc		3496664	1					
ANR	3496771	Argument	enc		3496664	0					
ANR	3496772	Identifier	enc		3496664	0					
ANR	3496773	Argument	q		3496664	1					
ANR	3496774	Identifier	q		3496664	0					
ANR	3496775	IfStatement	if ( i >= n )		3496664	1					
ANR	3496776	Condition	i >= n	2858:10:61082:61087	3496664	0	True				
ANR	3496777	RelationalExpression	i >= n		3496664	0		>=			
ANR	3496778	Identifier	i		3496664	0					
ANR	3496779	Identifier	n		3496664	1					
ANR	3496780	CompoundStatement		16:18:323:323	3496664	1					
ANR	3496781	IfStatement	if ( IS_NOT_NULL ( next ) )		3496664	0					
ANR	3496782	Condition	IS_NOT_NULL ( next )	2859:5:61097:61113	3496664	0	True				
ANR	3496783	CallExpression	IS_NOT_NULL ( next )		3496664	0					
ANR	3496784	Callee	IS_NOT_NULL		3496664	0					
ANR	3496785	Identifier	IS_NOT_NULL		3496664	0					
ANR	3496786	ArgumentList	next		3496664	1					
ANR	3496787	Argument	next		3496664	0					
ANR	3496788	Identifier	next		3496664	0					
ANR	3496789	ExpressionStatement	* next = q	2860:3:61119:61128	3496664	1	True				
ANR	3496790	AssignmentExpression	* next = q		3496664	0		=			
ANR	3496791	UnaryOperationExpression	* next		3496664	0					
ANR	3496792	UnaryOperator	*		3496664	0					
ANR	3496793	Identifier	next		3496664	1					
ANR	3496794	Identifier	q		3496664	1					
ANR	3496795	ReturnStatement	return p ;	2861:1:61131:61139	3496664	1	True				
ANR	3496796	Identifier	p		3496664	0					
ANR	3496797	ExpressionStatement	p = q	2864:4:61159:61164	3496664	3	True				
ANR	3496798	AssignmentExpression	p = q		3496664	0		=			
ANR	3496799	Identifier	p		3496664	0					
ANR	3496800	Identifier	q		3496664	1					
ANR	3496801	ReturnStatement	return NULL_UCHARP ;	2866:2:61172:61190	3496664	5	True				
ANR	3496802	Identifier	NULL_UCHARP		3496664	0					
ANR	3496803	ReturnType	static UChar *		3496664	1					
ANR	3496804	Identifier	find_str_position		3496664	2					
ANR	3496805	ParameterList	"OnigCodePoint s [ ] , int n , UChar * from , UChar * to , UChar * * next , OnigEncoding enc"		3496664	3					
ANR	3496806	Parameter	OnigCodePoint s [ ]	2841:18:60680:60696	3496664	0	True				
ANR	3496807	ParameterType	OnigCodePoint [ ]		3496664	0					
ANR	3496808	Identifier	s		3496664	1					
ANR	3496809	Parameter	int n	2841:37:60699:60703	3496664	1	True				
ANR	3496810	ParameterType	int		3496664	0					
ANR	3496811	Identifier	n		3496664	1					
ANR	3496812	Parameter	UChar * from	2841:44:60706:60716	3496664	2	True				
ANR	3496813	ParameterType	UChar *		3496664	0					
ANR	3496814	Identifier	from		3496664	1					
ANR	3496815	Parameter	UChar * to	2841:57:60719:60727	3496664	3	True				
ANR	3496816	ParameterType	UChar *		3496664	0					
ANR	3496817	Identifier	to		3496664	1					
ANR	3496818	Parameter	UChar * * next	2842:4:60734:60745	3496664	4	True				
ANR	3496819	ParameterType	UChar * *		3496664	0					
ANR	3496820	Identifier	next		3496664	1					
ANR	3496821	Parameter	OnigEncoding enc	2842:18:60748:60763	3496664	5	True				
ANR	3496822	ParameterType	OnigEncoding		3496664	0					
ANR	3496823	Identifier	enc		3496664	1					
ANR	3496824	CFGEntryNode	ENTRY		3496664		True				
ANR	3496825	CFGExitNode	EXIT		3496664		True				
ANR	3496826	Symbol	next		3496664						
ANR	3496827	Symbol	IS_NOT_NULL		3496664						
ANR	3496828	Symbol	i		3496664						
ANR	3496829	Symbol	* next		3496664						
ANR	3496830	Symbol	enclen		3496664						
ANR	3496831	Symbol	n		3496664						
ANR	3496832	Symbol	p		3496664						
ANR	3496833	Symbol	q		3496664						
ANR	3496834	Symbol	s		3496664						
ANR	3496835	Symbol	* i		3496664						
ANR	3496836	Symbol	NULL_UCHARP		3496664						
ANR	3496837	Symbol	x		3496664						
ANR	3496838	Symbol	from		3496664						
ANR	3496839	Symbol	to		3496664						
ANR	3496840	Symbol	enc		3496664						
ANR	3496841	Symbol	* s		3496664						
ANR	3496842	Symbol	ONIGENC_MBC_TO_CODE		3496664						
ANR	3496843	Function	str_exist_check_with_esc	2869:0:61195:61957							
ANR	3496844	FunctionDef	"str_exist_check_with_esc (OnigCodePoint s [ ] , int n , UChar * from , UChar * to , OnigCodePoint bad , OnigEncoding enc , OnigSyntaxType * syn)"		3496843	0					
ANR	3496845	CompoundStatement		2872:0:61342:61957	3496843	0					
ANR	3496846	IdentifierDeclStatement	"int i , in_esc ;"	2873:2:61346:61359	3496843	0	True				
ANR	3496847	IdentifierDecl	i		3496843	0					
ANR	3496848	IdentifierDeclType	int		3496843	0					
ANR	3496849	Identifier	i		3496843	1					
ANR	3496850	IdentifierDecl	in_esc		3496843	1					
ANR	3496851	IdentifierDeclType	int		3496843	0					
ANR	3496852	Identifier	in_esc		3496843	1					
ANR	3496853	IdentifierDeclStatement	OnigCodePoint x ;	2874:2:61363:61378	3496843	1	True				
ANR	3496854	IdentifierDecl	x		3496843	0					
ANR	3496855	IdentifierDeclType	OnigCodePoint		3496843	0					
ANR	3496856	Identifier	x		3496843	1					
ANR	3496857	IdentifierDeclStatement	UChar * q ;	2875:2:61382:61390	3496843	2	True				
ANR	3496858	IdentifierDecl	* q		3496843	0					
ANR	3496859	IdentifierDeclType	UChar *		3496843	0					
ANR	3496860	Identifier	q		3496843	1					
ANR	3496861	IdentifierDeclStatement	UChar * p = from ;	2876:2:61394:61409	3496843	3	True				
ANR	3496862	IdentifierDecl	* p = from		3496843	0					
ANR	3496863	IdentifierDeclType	UChar *		3496843	0					
ANR	3496864	Identifier	p		3496843	1					
ANR	3496865	AssignmentExpression	* p = from		3496843	2		=			
ANR	3496866	Identifier	from		3496843	0					
ANR	3496867	Identifier	from		3496843	1					
ANR	3496868	ExpressionStatement	in_esc = 0	2878:2:61414:61424	3496843	4	True				
ANR	3496869	AssignmentExpression	in_esc = 0		3496843	0		=			
ANR	3496870	Identifier	in_esc		3496843	0					
ANR	3496871	PrimaryExpression	0		3496843	1					
ANR	3496872	WhileStatement	while ( p < to )		3496843	5					
ANR	3496873	Condition	p < to	2879:9:61435:61440	3496843	0	True				
ANR	3496874	RelationalExpression	p < to		3496843	0		<			
ANR	3496875	Identifier	p		3496843	0					
ANR	3496876	Identifier	to		3496843	1					
ANR	3496877	CompoundStatement		8:17:100:100	3496843	1					
ANR	3496878	IfStatement	if ( in_esc )		3496843	0					
ANR	3496879	Condition	in_esc	2880:8:61453:61458	3496843	0	True				
ANR	3496880	Identifier	in_esc		3496843	0					
ANR	3496881	CompoundStatement		9:16:118:118	3496843	1					
ANR	3496882	ExpressionStatement	in_esc = 0	2881:6:61469:61479	3496843	0	True				
ANR	3496883	AssignmentExpression	in_esc = 0		3496843	0		=			
ANR	3496884	Identifier	in_esc		3496843	0					
ANR	3496885	PrimaryExpression	0		3496843	1					
ANR	3496886	ExpressionStatement	"p += enclen ( enc , p )"	2882:6:61487:61506	3496843	1	True				
ANR	3496887	AssignmentExpression	"p += enclen ( enc , p )"		3496843	0		+=			
ANR	3496888	Identifier	p		3496843	0					
ANR	3496889	CallExpression	"enclen ( enc , p )"		3496843	1					
ANR	3496890	Callee	enclen		3496843	0					
ANR	3496891	Identifier	enclen		3496843	0					
ANR	3496892	ArgumentList	enc		3496843	1					
ANR	3496893	Argument	enc		3496843	0					
ANR	3496894	Identifier	enc		3496843	0					
ANR	3496895	Argument	p		3496843	1					
ANR	3496896	Identifier	p		3496843	0					
ANR	3496897	ElseStatement	else		3496843	0					
ANR	3496898	CompoundStatement		13:9:180:180	3496843	0					
ANR	3496899	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"	2885:6:61531:61566	3496843	0	True				
ANR	3496900	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"		3496843	0		=			
ANR	3496901	Identifier	x		3496843	0					
ANR	3496902	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , p , to )"		3496843	1					
ANR	3496903	Callee	ONIGENC_MBC_TO_CODE		3496843	0					
ANR	3496904	Identifier	ONIGENC_MBC_TO_CODE		3496843	0					
ANR	3496905	ArgumentList	enc		3496843	1					
ANR	3496906	Argument	enc		3496843	0					
ANR	3496907	Identifier	enc		3496843	0					
ANR	3496908	Argument	p		3496843	1					
ANR	3496909	Identifier	p		3496843	0					
ANR	3496910	Argument	to		3496843	2					
ANR	3496911	Identifier	to		3496843	0					
ANR	3496912	ExpressionStatement	"q = p + enclen ( enc , p )"	2886:6:61574:61596	3496843	1	True				
ANR	3496913	AssignmentExpression	"q = p + enclen ( enc , p )"		3496843	0		=			
ANR	3496914	Identifier	q		3496843	0					
ANR	3496915	AdditiveExpression	"p + enclen ( enc , p )"		3496843	1		+			
ANR	3496916	Identifier	p		3496843	0					
ANR	3496917	CallExpression	"enclen ( enc , p )"		3496843	1					
ANR	3496918	Callee	enclen		3496843	0					
ANR	3496919	Identifier	enclen		3496843	0					
ANR	3496920	ArgumentList	enc		3496843	1					
ANR	3496921	Argument	enc		3496843	0					
ANR	3496922	Identifier	enc		3496843	0					
ANR	3496923	Argument	p		3496843	1					
ANR	3496924	Identifier	p		3496843	0					
ANR	3496925	IfStatement	if ( x == s [ 0 ] )		3496843	2					
ANR	3496926	Condition	x == s [ 0 ]	2887:10:61608:61616	3496843	0	True				
ANR	3496927	EqualityExpression	x == s [ 0 ]		3496843	0		==			
ANR	3496928	Identifier	x		3496843	0					
ANR	3496929	ArrayIndexing	s [ 0 ]		3496843	1					
ANR	3496930	Identifier	s		3496843	0					
ANR	3496931	PrimaryExpression	0		3496843	1					
ANR	3496932	CompoundStatement		16:21:276:276	3496843	1					
ANR	3496933	ForStatement	for ( i = 1 ; i < n && q < to ; i ++ )		3496843	0					
ANR	3496934	ForInit	i = 1 ;	2888:6:61627:61632	3496843	0	True				
ANR	3496935	AssignmentExpression	i = 1		3496843	0		=			
ANR	3496936	Identifier	i		3496843	0					
ANR	3496937	PrimaryExpression	1		3496843	1					
ANR	3496938	Condition	i < n && q < to	2888:13:61634:61648	3496843	1	True				
ANR	3496939	AndExpression	i < n && q < to		3496843	0		&&			
ANR	3496940	RelationalExpression	i < n		3496843	0		<			
ANR	3496941	Identifier	i		3496843	0					
ANR	3496942	Identifier	n		3496843	1					
ANR	3496943	RelationalExpression	q < to		3496843	1		<			
ANR	3496944	Identifier	q		3496843	0					
ANR	3496945	Identifier	to		3496843	1					
ANR	3496946	PostIncDecOperationExpression	i ++	2888:30:61651:61653	3496843	2	True				
ANR	3496947	Identifier	i		3496843	0					
ANR	3496948	IncDec	++		3496843	1					
ANR	3496949	CompoundStatement		17:35:313:313	3496843	3					
ANR	3496950	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , q , to )"	2889:3:61661:61696	3496843	0	True				
ANR	3496951	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , q , to )"		3496843	0		=			
ANR	3496952	Identifier	x		3496843	0					
ANR	3496953	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , q , to )"		3496843	1					
ANR	3496954	Callee	ONIGENC_MBC_TO_CODE		3496843	0					
ANR	3496955	Identifier	ONIGENC_MBC_TO_CODE		3496843	0					
ANR	3496956	ArgumentList	enc		3496843	1					
ANR	3496957	Argument	enc		3496843	0					
ANR	3496958	Identifier	enc		3496843	0					
ANR	3496959	Argument	q		3496843	1					
ANR	3496960	Identifier	q		3496843	0					
ANR	3496961	Argument	to		3496843	2					
ANR	3496962	Identifier	to		3496843	0					
ANR	3496963	IfStatement	if ( x != s [ i ] )		3496843	1					
ANR	3496964	Condition	x != s [ i ]	2890:7:61705:61713	3496843	0	True				
ANR	3496965	EqualityExpression	x != s [ i ]		3496843	0		!=			
ANR	3496966	Identifier	x		3496843	0					
ANR	3496967	ArrayIndexing	s [ i ]		3496843	1					
ANR	3496968	Identifier	s		3496843	0					
ANR	3496969	Identifier	i		3496843	1					
ANR	3496970	BreakStatement	break ;	2890:18:61716:61721	3496843	1	True				
ANR	3496971	ExpressionStatement	"q += enclen ( enc , q )"	2891:3:61726:61745	3496843	2	True				
ANR	3496972	AssignmentExpression	"q += enclen ( enc , q )"		3496843	0		+=			
ANR	3496973	Identifier	q		3496843	0					
ANR	3496974	CallExpression	"enclen ( enc , q )"		3496843	1					
ANR	3496975	Callee	enclen		3496843	0					
ANR	3496976	Identifier	enclen		3496843	0					
ANR	3496977	ArgumentList	enc		3496843	1					
ANR	3496978	Argument	enc		3496843	0					
ANR	3496979	Identifier	enc		3496843	0					
ANR	3496980	Argument	q		3496843	1					
ANR	3496981	Identifier	q		3496843	0					
ANR	3496982	IfStatement	if ( i >= n )		3496843	1					
ANR	3496983	Condition	i >= n	2893:5:61755:61760	3496843	0	True				
ANR	3496984	RelationalExpression	i >= n		3496843	0		>=			
ANR	3496985	Identifier	i		3496843	0					
ANR	3496986	Identifier	n		3496843	1					
ANR	3496987	ReturnStatement	return 1 ;	2893:13:61763:61771	3496843	1	True				
ANR	3496988	PrimaryExpression	1		3496843	0					
ANR	3496989	ExpressionStatement	"p += enclen ( enc , p )"	2894:1:61774:61793	3496843	2	True				
ANR	3496990	AssignmentExpression	"p += enclen ( enc , p )"		3496843	0		+=			
ANR	3496991	Identifier	p		3496843	0					
ANR	3496992	CallExpression	"enclen ( enc , p )"		3496843	1					
ANR	3496993	Callee	enclen		3496843	0					
ANR	3496994	Identifier	enclen		3496843	0					
ANR	3496995	ArgumentList	enc		3496843	1					
ANR	3496996	Argument	enc		3496843	0					
ANR	3496997	Identifier	enc		3496843	0					
ANR	3496998	Argument	p		3496843	1					
ANR	3496999	Identifier	p		3496843	0					
ANR	3497000	ElseStatement	else		3496843	0					
ANR	3497001	CompoundStatement		25:11:471:471	3496843	0					
ANR	3497002	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"	2897:1:61817:61852	3496843	0	True				
ANR	3497003	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"		3496843	0		=			
ANR	3497004	Identifier	x		3496843	0					
ANR	3497005	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , p , to )"		3496843	1					
ANR	3497006	Callee	ONIGENC_MBC_TO_CODE		3496843	0					
ANR	3497007	Identifier	ONIGENC_MBC_TO_CODE		3496843	0					
ANR	3497008	ArgumentList	enc		3496843	1					
ANR	3497009	Argument	enc		3496843	0					
ANR	3497010	Identifier	enc		3496843	0					
ANR	3497011	Argument	p		3496843	1					
ANR	3497012	Identifier	p		3496843	0					
ANR	3497013	Argument	to		3496843	2					
ANR	3497014	Identifier	to		3496843	0					
ANR	3497015	IfStatement	if ( x == bad )		3496843	1					
ANR	3497016	Condition	x == bad	2898:5:61859:61866	3496843	0	True				
ANR	3497017	EqualityExpression	x == bad		3496843	0		==			
ANR	3497018	Identifier	x		3496843	0					
ANR	3497019	Identifier	bad		3496843	1					
ANR	3497020	ReturnStatement	return 0 ;	2898:15:61869:61877	3496843	1	True				
ANR	3497021	PrimaryExpression	0		3496843	0					
ANR	3497022	ElseStatement	else		3496843	0					
ANR	3497023	IfStatement	if ( x == MC_ESC ( syn ) )		3496843	0					
ANR	3497024	Condition	x == MC_ESC ( syn )	2899:10:61889:61904	3496843	0	True				
ANR	3497025	EqualityExpression	x == MC_ESC ( syn )		3496843	0		==			
ANR	3497026	Identifier	x		3496843	0					
ANR	3497027	CallExpression	MC_ESC ( syn )		3496843	1					
ANR	3497028	Callee	MC_ESC		3496843	0					
ANR	3497029	Identifier	MC_ESC		3496843	0					
ANR	3497030	ArgumentList	syn		3496843	1					
ANR	3497031	Argument	syn		3496843	0					
ANR	3497032	Identifier	syn		3496843	0					
ANR	3497033	ExpressionStatement	in_esc = 1	2899:28:61907:61917	3496843	1	True				
ANR	3497034	AssignmentExpression	in_esc = 1		3496843	0		=			
ANR	3497035	Identifier	in_esc		3496843	0					
ANR	3497036	PrimaryExpression	1		3496843	1					
ANR	3497037	ExpressionStatement	p = q	2900:1:61920:61925	3496843	2	True				
ANR	3497038	AssignmentExpression	p = q		3496843	0		=			
ANR	3497039	Identifier	p		3496843	0					
ANR	3497040	Identifier	q		3496843	1					
ANR	3497041	ReturnStatement	return 0 ;	2904:2:61947:61955	3496843	6	True				
ANR	3497042	PrimaryExpression	0		3496843	0					
ANR	3497043	ReturnType	static int		3496843	1					
ANR	3497044	Identifier	str_exist_check_with_esc		3496843	2					
ANR	3497045	ParameterList	"OnigCodePoint s [ ] , int n , UChar * from , UChar * to , OnigCodePoint bad , OnigEncoding enc , OnigSyntaxType * syn"		3496843	3					
ANR	3497046	Parameter	OnigCodePoint s [ ]	2870:25:61231:61247	3496843	0	True				
ANR	3497047	ParameterType	OnigCodePoint [ ]		3496843	0					
ANR	3497048	Identifier	s		3496843	1					
ANR	3497049	Parameter	int n	2870:44:61250:61254	3496843	1	True				
ANR	3497050	ParameterType	int		3496843	0					
ANR	3497051	Identifier	n		3496843	1					
ANR	3497052	Parameter	UChar * from	2870:51:61257:61267	3496843	2	True				
ANR	3497053	ParameterType	UChar *		3496843	0					
ANR	3497054	Identifier	from		3496843	1					
ANR	3497055	Parameter	UChar * to	2870:64:61270:61278	3496843	3	True				
ANR	3497056	ParameterType	UChar *		3496843	0					
ANR	3497057	Identifier	to		3496843	1					
ANR	3497058	Parameter	OnigCodePoint bad	2871:3:61284:61300	3496843	4	True				
ANR	3497059	ParameterType	OnigCodePoint		3496843	0					
ANR	3497060	Identifier	bad		3496843	1					
ANR	3497061	Parameter	OnigEncoding enc	2871:22:61303:61318	3496843	5	True				
ANR	3497062	ParameterType	OnigEncoding		3496843	0					
ANR	3497063	Identifier	enc		3496843	1					
ANR	3497064	Parameter	OnigSyntaxType * syn	2871:40:61321:61339	3496843	6	True				
ANR	3497065	ParameterType	OnigSyntaxType *		3496843	0					
ANR	3497066	Identifier	syn		3496843	1					
ANR	3497067	CFGEntryNode	ENTRY		3496843		True				
ANR	3497068	CFGExitNode	EXIT		3496843		True				
ANR	3497069	Symbol	bad		3496843						
ANR	3497070	Symbol	syn		3496843						
ANR	3497071	Symbol	i		3496843						
ANR	3497072	Symbol	enclen		3496843						
ANR	3497073	Symbol	MC_ESC		3496843						
ANR	3497074	Symbol	n		3496843						
ANR	3497075	Symbol	p		3496843						
ANR	3497076	Symbol	q		3496843						
ANR	3497077	Symbol	s		3496843						
ANR	3497078	Symbol	* i		3496843						
ANR	3497079	Symbol	x		3496843						
ANR	3497080	Symbol	from		3496843						
ANR	3497081	Symbol	to		3496843						
ANR	3497082	Symbol	enc		3496843						
ANR	3497083	Symbol	in_esc		3496843						
ANR	3497084	Symbol	* s		3496843						
ANR	3497085	Symbol	ONIGENC_MBC_TO_CODE		3496843						
ANR	3497086	Function	fetch_token_in_cc	2907:0:61960:67219							
ANR	3497087	FunctionDef	"fetch_token_in_cc (OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env)"		3497086	0					
ANR	3497088	CompoundStatement		2909:0:62044:67219	3497086	0					
ANR	3497089	IdentifierDeclStatement	int num ;	2910:2:62048:62055	3497086	0	True				
ANR	3497090	IdentifierDecl	num		3497086	0					
ANR	3497091	IdentifierDeclType	int		3497086	0					
ANR	3497092	Identifier	num		3497086	1					
ANR	3497093	IdentifierDeclStatement	"OnigCodePoint c , c2 ;"	2911:2:62059:62078	3497086	1	True				
ANR	3497094	IdentifierDecl	c		3497086	0					
ANR	3497095	IdentifierDeclType	OnigCodePoint		3497086	0					
ANR	3497096	Identifier	c		3497086	1					
ANR	3497097	IdentifierDecl	c2		3497086	1					
ANR	3497098	IdentifierDeclType	OnigCodePoint		3497086	0					
ANR	3497099	Identifier	c2		3497086	1					
ANR	3497100	IdentifierDeclStatement	OnigSyntaxType * syn = env -> syntax ;	2912:2:62082:62115	3497086	2	True				
ANR	3497101	IdentifierDecl	* syn = env -> syntax		3497086	0					
ANR	3497102	IdentifierDeclType	OnigSyntaxType *		3497086	0					
ANR	3497103	Identifier	syn		3497086	1					
ANR	3497104	AssignmentExpression	* syn = env -> syntax		3497086	2		=			
ANR	3497105	Identifier	syn		3497086	0					
ANR	3497106	PtrMemberAccess	env -> syntax		3497086	1					
ANR	3497107	Identifier	env		3497086	0					
ANR	3497108	Identifier	syntax		3497086	1					
ANR	3497109	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2913:2:62119:62146	3497086	3	True				
ANR	3497110	IdentifierDecl	enc = env -> enc		3497086	0					
ANR	3497111	IdentifierDeclType	OnigEncoding		3497086	0					
ANR	3497112	Identifier	enc		3497086	1					
ANR	3497113	AssignmentExpression	enc = env -> enc		3497086	2		=			
ANR	3497114	Identifier	enc		3497086	0					
ANR	3497115	PtrMemberAccess	env -> enc		3497086	1					
ANR	3497116	Identifier	env		3497086	0					
ANR	3497117	Identifier	enc		3497086	1					
ANR	3497118	IdentifierDeclStatement	UChar * prev ;	2914:2:62150:62161	3497086	4	True				
ANR	3497119	IdentifierDecl	* prev		3497086	0					
ANR	3497120	IdentifierDeclType	UChar *		3497086	0					
ANR	3497121	Identifier	prev		3497086	1					
ANR	3497122	IdentifierDeclStatement	UChar * p = * src ;	2915:2:62165:62180	3497086	5	True				
ANR	3497123	IdentifierDecl	* p = * src		3497086	0					
ANR	3497124	IdentifierDeclType	UChar *		3497086	0					
ANR	3497125	Identifier	p		3497086	1					
ANR	3497126	AssignmentExpression	* p = * src		3497086	2		=			
ANR	3497127	Identifier	p		3497086	0					
ANR	3497128	UnaryOperationExpression	* src		3497086	1					
ANR	3497129	UnaryOperator	*		3497086	0					
ANR	3497130	Identifier	src		3497086	1					
ANR	3497131	ExpressionStatement	PFETCH_READY	2916:2:62184:62196	3497086	6	True				
ANR	3497132	Identifier	PFETCH_READY		3497086	0					
ANR	3497133	IfStatement	if ( PEND )		3497086	7					
ANR	3497134	Condition	PEND	2918:6:62205:62208	3497086	0	True				
ANR	3497135	Identifier	PEND		3497086	0					
ANR	3497136	CompoundStatement		10:12:166:166	3497086	1					
ANR	3497137	ExpressionStatement	tok -> type = TK_EOT	2919:4:62217:62235	3497086	0	True				
ANR	3497138	AssignmentExpression	tok -> type = TK_EOT		3497086	0		=			
ANR	3497139	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497140	Identifier	tok		3497086	0					
ANR	3497141	Identifier	type		3497086	1					
ANR	3497142	Identifier	TK_EOT		3497086	1					
ANR	3497143	ReturnStatement	return tok -> type ;	2920:4:62241:62257	3497086	1	True				
ANR	3497144	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497145	Identifier	tok		3497086	0					
ANR	3497146	Identifier	type		3497086	1					
ANR	3497147	ExpressionStatement	PFETCH ( c )	2923:2:62266:62275	3497086	8	True				
ANR	3497148	CallExpression	PFETCH ( c )		3497086	0					
ANR	3497149	Callee	PFETCH		3497086	0					
ANR	3497150	Identifier	PFETCH		3497086	0					
ANR	3497151	ArgumentList	c		3497086	1					
ANR	3497152	Argument	c		3497086	0					
ANR	3497153	Identifier	c		3497086	0					
ANR	3497154	ExpressionStatement	tok -> type = TK_CHAR	2924:2:62279:62298	3497086	9	True				
ANR	3497155	AssignmentExpression	tok -> type = TK_CHAR		3497086	0		=			
ANR	3497156	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497157	Identifier	tok		3497086	0					
ANR	3497158	Identifier	type		3497086	1					
ANR	3497159	Identifier	TK_CHAR		3497086	1					
ANR	3497160	ExpressionStatement	tok -> base = 0	2925:2:62302:62315	3497086	10	True				
ANR	3497161	AssignmentExpression	tok -> base = 0		3497086	0		=			
ANR	3497162	PtrMemberAccess	tok -> base		3497086	0					
ANR	3497163	Identifier	tok		3497086	0					
ANR	3497164	Identifier	base		3497086	1					
ANR	3497165	PrimaryExpression	0		3497086	1					
ANR	3497166	ExpressionStatement	tok -> u . c = c	2926:2:62319:62332	3497086	11	True				
ANR	3497167	AssignmentExpression	tok -> u . c = c		3497086	0		=			
ANR	3497168	MemberAccess	tok -> u . c		3497086	0					
ANR	3497169	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497170	Identifier	tok		3497086	0					
ANR	3497171	Identifier	u		3497086	1					
ANR	3497172	Identifier	c		3497086	1					
ANR	3497173	Identifier	c		3497086	1					
ANR	3497174	ExpressionStatement	tok -> escaped = 0	2927:2:62336:62352	3497086	12	True				
ANR	3497175	AssignmentExpression	tok -> escaped = 0		3497086	0		=			
ANR	3497176	PtrMemberAccess	tok -> escaped		3497086	0					
ANR	3497177	Identifier	tok		3497086	0					
ANR	3497178	Identifier	escaped		3497086	1					
ANR	3497179	PrimaryExpression	0		3497086	1					
ANR	3497180	IfStatement	if ( c == ']' )		3497086	13					
ANR	3497181	Condition	c == ']'	2929:6:62361:62368	3497086	0	True				
ANR	3497182	EqualityExpression	c == ']'		3497086	0		==			
ANR	3497183	Identifier	c		3497086	0					
ANR	3497184	PrimaryExpression	']'		3497086	1					
ANR	3497185	CompoundStatement		21:16:326:326	3497086	1					
ANR	3497186	ExpressionStatement	tok -> type = TK_CC_CLOSE	2930:4:62377:62400	3497086	0	True				
ANR	3497187	AssignmentExpression	tok -> type = TK_CC_CLOSE		3497086	0		=			
ANR	3497188	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497189	Identifier	tok		3497086	0					
ANR	3497190	Identifier	type		3497086	1					
ANR	3497191	Identifier	TK_CC_CLOSE		3497086	1					
ANR	3497192	ElseStatement	else		3497086	0					
ANR	3497193	IfStatement	if ( c == '-' )		3497086	0					
ANR	3497194	Condition	c == '-'	2932:11:62417:62424	3497086	0	True				
ANR	3497195	EqualityExpression	c == '-'		3497086	0		==			
ANR	3497196	Identifier	c		3497086	0					
ANR	3497197	PrimaryExpression	'-'		3497086	1					
ANR	3497198	CompoundStatement		24:21:382:382	3497086	1					
ANR	3497199	ExpressionStatement	tok -> type = TK_CC_RANGE	2933:4:62433:62456	3497086	0	True				
ANR	3497200	AssignmentExpression	tok -> type = TK_CC_RANGE		3497086	0		=			
ANR	3497201	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497202	Identifier	tok		3497086	0					
ANR	3497203	Identifier	type		3497086	1					
ANR	3497204	Identifier	TK_CC_RANGE		3497086	1					
ANR	3497205	ElseStatement	else		3497086	0					
ANR	3497206	IfStatement	if ( c == MC_ESC ( syn ) )		3497086	0					
ANR	3497207	Condition	c == MC_ESC ( syn )	2935:11:62473:62488	3497086	0	True				
ANR	3497208	EqualityExpression	c == MC_ESC ( syn )		3497086	0		==			
ANR	3497209	Identifier	c		3497086	0					
ANR	3497210	CallExpression	MC_ESC ( syn )		3497086	1					
ANR	3497211	Callee	MC_ESC		3497086	0					
ANR	3497212	Identifier	MC_ESC		3497086	0					
ANR	3497213	ArgumentList	syn		3497086	1					
ANR	3497214	Argument	syn		3497086	0					
ANR	3497215	Identifier	syn		3497086	0					
ANR	3497216	CompoundStatement		27:29:446:446	3497086	1					
ANR	3497217	IfStatement	"if ( ! IS_SYNTAX_BV ( syn , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC ) )"		3497086	0					
ANR	3497218	Condition	"! IS_SYNTAX_BV ( syn , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"	2936:8:62501:62552	3497086	0	True				
ANR	3497219	UnaryOperationExpression	"! IS_SYNTAX_BV ( syn , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"		3497086	0					
ANR	3497220	UnaryOperator	!		3497086	0					
ANR	3497221	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"		3497086	1					
ANR	3497222	Callee	IS_SYNTAX_BV		3497086	0					
ANR	3497223	Identifier	IS_SYNTAX_BV		3497086	0					
ANR	3497224	ArgumentList	syn		3497086	1					
ANR	3497225	Argument	syn		3497086	0					
ANR	3497226	Identifier	syn		3497086	0					
ANR	3497227	Argument	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		3497086	1					
ANR	3497228	Identifier	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		3497086	0					
ANR	3497229	GotoStatement	goto end ;	2937:6:62561:62569	3497086	1	True				
ANR	3497230	Identifier	end		3497086	0					
ANR	3497231	IfStatement	if ( PEND )		3497086	1					
ANR	3497232	Condition	PEND	2939:8:62580:62583	3497086	0	True				
ANR	3497233	Identifier	PEND		3497086	0					
ANR	3497234	ReturnStatement	return ONIGERR_END_PATTERN_AT_ESCAPE ;	2939:14:62586:62622	3497086	1	True				
ANR	3497235	Identifier	ONIGERR_END_PATTERN_AT_ESCAPE		3497086	0					
ANR	3497236	ExpressionStatement	PFETCH ( c )	2941:4:62629:62638	3497086	2	True				
ANR	3497237	CallExpression	PFETCH ( c )		3497086	0					
ANR	3497238	Callee	PFETCH		3497086	0					
ANR	3497239	Identifier	PFETCH		3497086	0					
ANR	3497240	ArgumentList	c		3497086	1					
ANR	3497241	Argument	c		3497086	0					
ANR	3497242	Identifier	c		3497086	0					
ANR	3497243	ExpressionStatement	tok -> escaped = 1	2942:4:62644:62660	3497086	3	True				
ANR	3497244	AssignmentExpression	tok -> escaped = 1		3497086	0		=			
ANR	3497245	PtrMemberAccess	tok -> escaped		3497086	0					
ANR	3497246	Identifier	tok		3497086	0					
ANR	3497247	Identifier	escaped		3497086	1					
ANR	3497248	PrimaryExpression	1		3497086	1					
ANR	3497249	ExpressionStatement	tok -> u . c = c	2943:4:62666:62678	3497086	4	True				
ANR	3497250	AssignmentExpression	tok -> u . c = c		3497086	0		=			
ANR	3497251	MemberAccess	tok -> u . c		3497086	0					
ANR	3497252	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497253	Identifier	tok		3497086	0					
ANR	3497254	Identifier	u		3497086	1					
ANR	3497255	Identifier	c		3497086	1					
ANR	3497256	Identifier	c		3497086	1					
ANR	3497257	SwitchStatement	switch ( c )		3497086	5					
ANR	3497258	Condition	c	2944:12:62692:62692	3497086	0	True				
ANR	3497259	Identifier	c		3497086	0					
ANR	3497260	CompoundStatement		36:15:650:650	3497086	1					
ANR	3497261	Label	case 'w' :	2945:4:62701:62709	3497086	0	True				
ANR	3497262	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2946:6:62717:62741	3497086	1	True				
ANR	3497263	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3497086	0		=			
ANR	3497264	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497265	Identifier	tok		3497086	0					
ANR	3497266	Identifier	type		3497086	1					
ANR	3497267	Identifier	TK_CHAR_TYPE		3497086	1					
ANR	3497268	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD	2947:6:62749:62787	3497086	2	True				
ANR	3497269	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD		3497086	0		=			
ANR	3497270	MemberAccess	tok -> u . prop . ctype		3497086	0					
ANR	3497271	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497272	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497273	Identifier	tok		3497086	0					
ANR	3497274	Identifier	u		3497086	1					
ANR	3497275	Identifier	prop		3497086	1					
ANR	3497276	Identifier	ctype		3497086	1					
ANR	3497277	Identifier	ONIGENC_CTYPE_WORD		3497086	1					
ANR	3497278	ExpressionStatement	tok -> u . prop . not = 0	2948:6:62795:62816	3497086	3	True				
ANR	3497279	AssignmentExpression	tok -> u . prop . not = 0		3497086	0		=			
ANR	3497280	MemberAccess	tok -> u . prop . not		3497086	0					
ANR	3497281	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497282	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497283	Identifier	tok		3497086	0					
ANR	3497284	Identifier	u		3497086	1					
ANR	3497285	Identifier	prop		3497086	1					
ANR	3497286	Identifier	not		3497086	1					
ANR	3497287	PrimaryExpression	0		3497086	1					
ANR	3497288	BreakStatement	break ;	2949:6:62824:62829	3497086	4	True				
ANR	3497289	Label	case 'W' :	2950:4:62835:62843	3497086	5	True				
ANR	3497290	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2951:6:62851:62875	3497086	6	True				
ANR	3497291	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3497086	0		=			
ANR	3497292	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497293	Identifier	tok		3497086	0					
ANR	3497294	Identifier	type		3497086	1					
ANR	3497295	Identifier	TK_CHAR_TYPE		3497086	1					
ANR	3497296	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD	2952:6:62883:62921	3497086	7	True				
ANR	3497297	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD		3497086	0		=			
ANR	3497298	MemberAccess	tok -> u . prop . ctype		3497086	0					
ANR	3497299	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497300	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497301	Identifier	tok		3497086	0					
ANR	3497302	Identifier	u		3497086	1					
ANR	3497303	Identifier	prop		3497086	1					
ANR	3497304	Identifier	ctype		3497086	1					
ANR	3497305	Identifier	ONIGENC_CTYPE_WORD		3497086	1					
ANR	3497306	ExpressionStatement	tok -> u . prop . not = 1	2953:6:62929:62950	3497086	8	True				
ANR	3497307	AssignmentExpression	tok -> u . prop . not = 1		3497086	0		=			
ANR	3497308	MemberAccess	tok -> u . prop . not		3497086	0					
ANR	3497309	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497310	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497311	Identifier	tok		3497086	0					
ANR	3497312	Identifier	u		3497086	1					
ANR	3497313	Identifier	prop		3497086	1					
ANR	3497314	Identifier	not		3497086	1					
ANR	3497315	PrimaryExpression	1		3497086	1					
ANR	3497316	BreakStatement	break ;	2954:6:62958:62963	3497086	9	True				
ANR	3497317	Label	case 'd' :	2955:4:62969:62977	3497086	10	True				
ANR	3497318	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2956:6:62985:63009	3497086	11	True				
ANR	3497319	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3497086	0		=			
ANR	3497320	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497321	Identifier	tok		3497086	0					
ANR	3497322	Identifier	type		3497086	1					
ANR	3497323	Identifier	TK_CHAR_TYPE		3497086	1					
ANR	3497324	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT	2957:6:63017:63056	3497086	12	True				
ANR	3497325	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT		3497086	0		=			
ANR	3497326	MemberAccess	tok -> u . prop . ctype		3497086	0					
ANR	3497327	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497328	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497329	Identifier	tok		3497086	0					
ANR	3497330	Identifier	u		3497086	1					
ANR	3497331	Identifier	prop		3497086	1					
ANR	3497332	Identifier	ctype		3497086	1					
ANR	3497333	Identifier	ONIGENC_CTYPE_DIGIT		3497086	1					
ANR	3497334	ExpressionStatement	tok -> u . prop . not = 0	2958:6:63064:63085	3497086	13	True				
ANR	3497335	AssignmentExpression	tok -> u . prop . not = 0		3497086	0		=			
ANR	3497336	MemberAccess	tok -> u . prop . not		3497086	0					
ANR	3497337	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497338	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497339	Identifier	tok		3497086	0					
ANR	3497340	Identifier	u		3497086	1					
ANR	3497341	Identifier	prop		3497086	1					
ANR	3497342	Identifier	not		3497086	1					
ANR	3497343	PrimaryExpression	0		3497086	1					
ANR	3497344	BreakStatement	break ;	2959:6:63093:63098	3497086	14	True				
ANR	3497345	Label	case 'D' :	2960:4:63104:63112	3497086	15	True				
ANR	3497346	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2961:6:63120:63144	3497086	16	True				
ANR	3497347	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3497086	0		=			
ANR	3497348	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497349	Identifier	tok		3497086	0					
ANR	3497350	Identifier	type		3497086	1					
ANR	3497351	Identifier	TK_CHAR_TYPE		3497086	1					
ANR	3497352	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT	2962:6:63152:63191	3497086	17	True				
ANR	3497353	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT		3497086	0		=			
ANR	3497354	MemberAccess	tok -> u . prop . ctype		3497086	0					
ANR	3497355	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497356	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497357	Identifier	tok		3497086	0					
ANR	3497358	Identifier	u		3497086	1					
ANR	3497359	Identifier	prop		3497086	1					
ANR	3497360	Identifier	ctype		3497086	1					
ANR	3497361	Identifier	ONIGENC_CTYPE_DIGIT		3497086	1					
ANR	3497362	ExpressionStatement	tok -> u . prop . not = 1	2963:6:63199:63220	3497086	18	True				
ANR	3497363	AssignmentExpression	tok -> u . prop . not = 1		3497086	0		=			
ANR	3497364	MemberAccess	tok -> u . prop . not		3497086	0					
ANR	3497365	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497366	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497367	Identifier	tok		3497086	0					
ANR	3497368	Identifier	u		3497086	1					
ANR	3497369	Identifier	prop		3497086	1					
ANR	3497370	Identifier	not		3497086	1					
ANR	3497371	PrimaryExpression	1		3497086	1					
ANR	3497372	BreakStatement	break ;	2964:6:63228:63233	3497086	19	True				
ANR	3497373	Label	case 's' :	2965:4:63239:63247	3497086	20	True				
ANR	3497374	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2966:6:63255:63279	3497086	21	True				
ANR	3497375	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3497086	0		=			
ANR	3497376	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497377	Identifier	tok		3497086	0					
ANR	3497378	Identifier	type		3497086	1					
ANR	3497379	Identifier	TK_CHAR_TYPE		3497086	1					
ANR	3497380	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE	2967:6:63287:63326	3497086	22	True				
ANR	3497381	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE		3497086	0		=			
ANR	3497382	MemberAccess	tok -> u . prop . ctype		3497086	0					
ANR	3497383	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497384	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497385	Identifier	tok		3497086	0					
ANR	3497386	Identifier	u		3497086	1					
ANR	3497387	Identifier	prop		3497086	1					
ANR	3497388	Identifier	ctype		3497086	1					
ANR	3497389	Identifier	ONIGENC_CTYPE_SPACE		3497086	1					
ANR	3497390	ExpressionStatement	tok -> u . prop . not = 0	2968:6:63334:63355	3497086	23	True				
ANR	3497391	AssignmentExpression	tok -> u . prop . not = 0		3497086	0		=			
ANR	3497392	MemberAccess	tok -> u . prop . not		3497086	0					
ANR	3497393	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497394	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497395	Identifier	tok		3497086	0					
ANR	3497396	Identifier	u		3497086	1					
ANR	3497397	Identifier	prop		3497086	1					
ANR	3497398	Identifier	not		3497086	1					
ANR	3497399	PrimaryExpression	0		3497086	1					
ANR	3497400	BreakStatement	break ;	2969:6:63363:63368	3497086	24	True				
ANR	3497401	Label	case 'S' :	2970:4:63374:63382	3497086	25	True				
ANR	3497402	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2971:6:63390:63414	3497086	26	True				
ANR	3497403	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3497086	0		=			
ANR	3497404	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497405	Identifier	tok		3497086	0					
ANR	3497406	Identifier	type		3497086	1					
ANR	3497407	Identifier	TK_CHAR_TYPE		3497086	1					
ANR	3497408	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE	2972:6:63422:63461	3497086	27	True				
ANR	3497409	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE		3497086	0		=			
ANR	3497410	MemberAccess	tok -> u . prop . ctype		3497086	0					
ANR	3497411	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497412	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497413	Identifier	tok		3497086	0					
ANR	3497414	Identifier	u		3497086	1					
ANR	3497415	Identifier	prop		3497086	1					
ANR	3497416	Identifier	ctype		3497086	1					
ANR	3497417	Identifier	ONIGENC_CTYPE_SPACE		3497086	1					
ANR	3497418	ExpressionStatement	tok -> u . prop . not = 1	2973:6:63469:63490	3497086	28	True				
ANR	3497419	AssignmentExpression	tok -> u . prop . not = 1		3497086	0		=			
ANR	3497420	MemberAccess	tok -> u . prop . not		3497086	0					
ANR	3497421	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497422	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497423	Identifier	tok		3497086	0					
ANR	3497424	Identifier	u		3497086	1					
ANR	3497425	Identifier	prop		3497086	1					
ANR	3497426	Identifier	not		3497086	1					
ANR	3497427	PrimaryExpression	1		3497086	1					
ANR	3497428	BreakStatement	break ;	2974:6:63498:63503	3497086	29	True				
ANR	3497429	Label	case 'h' :	2975:4:63509:63517	3497086	30	True				
ANR	3497430	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT ) )"		3497086	31					
ANR	3497431	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"	2976:10:63529:63575	3497086	0	True				
ANR	3497432	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		3497086	0					
ANR	3497433	UnaryOperator	!		3497086	0					
ANR	3497434	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		3497086	1					
ANR	3497435	Callee	IS_SYNTAX_OP2		3497086	0					
ANR	3497436	Identifier	IS_SYNTAX_OP2		3497086	0					
ANR	3497437	ArgumentList	syn		3497086	1					
ANR	3497438	Argument	syn		3497086	0					
ANR	3497439	Identifier	syn		3497086	0					
ANR	3497440	Argument	ONIG_SYN_OP2_ESC_H_XDIGIT		3497086	1					
ANR	3497441	Identifier	ONIG_SYN_OP2_ESC_H_XDIGIT		3497086	0					
ANR	3497442	BreakStatement	break ;	2976:59:63578:63583	3497086	1	True				
ANR	3497443	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2977:6:63591:63615	3497086	32	True				
ANR	3497444	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3497086	0		=			
ANR	3497445	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497446	Identifier	tok		3497086	0					
ANR	3497447	Identifier	type		3497086	1					
ANR	3497448	Identifier	TK_CHAR_TYPE		3497086	1					
ANR	3497449	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT	2978:6:63623:63663	3497086	33	True				
ANR	3497450	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT		3497086	0		=			
ANR	3497451	MemberAccess	tok -> u . prop . ctype		3497086	0					
ANR	3497452	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497453	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497454	Identifier	tok		3497086	0					
ANR	3497455	Identifier	u		3497086	1					
ANR	3497456	Identifier	prop		3497086	1					
ANR	3497457	Identifier	ctype		3497086	1					
ANR	3497458	Identifier	ONIGENC_CTYPE_XDIGIT		3497086	1					
ANR	3497459	ExpressionStatement	tok -> u . prop . not = 0	2979:6:63671:63692	3497086	34	True				
ANR	3497460	AssignmentExpression	tok -> u . prop . not = 0		3497086	0		=			
ANR	3497461	MemberAccess	tok -> u . prop . not		3497086	0					
ANR	3497462	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497463	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497464	Identifier	tok		3497086	0					
ANR	3497465	Identifier	u		3497086	1					
ANR	3497466	Identifier	prop		3497086	1					
ANR	3497467	Identifier	not		3497086	1					
ANR	3497468	PrimaryExpression	0		3497086	1					
ANR	3497469	BreakStatement	break ;	2980:6:63700:63705	3497086	35	True				
ANR	3497470	Label	case 'H' :	2981:4:63711:63719	3497086	36	True				
ANR	3497471	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT ) )"		3497086	37					
ANR	3497472	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"	2982:10:63731:63777	3497086	0	True				
ANR	3497473	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		3497086	0					
ANR	3497474	UnaryOperator	!		3497086	0					
ANR	3497475	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		3497086	1					
ANR	3497476	Callee	IS_SYNTAX_OP2		3497086	0					
ANR	3497477	Identifier	IS_SYNTAX_OP2		3497086	0					
ANR	3497478	ArgumentList	syn		3497086	1					
ANR	3497479	Argument	syn		3497086	0					
ANR	3497480	Identifier	syn		3497086	0					
ANR	3497481	Argument	ONIG_SYN_OP2_ESC_H_XDIGIT		3497086	1					
ANR	3497482	Identifier	ONIG_SYN_OP2_ESC_H_XDIGIT		3497086	0					
ANR	3497483	BreakStatement	break ;	2982:59:63780:63785	3497086	1	True				
ANR	3497484	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2983:6:63793:63817	3497086	38	True				
ANR	3497485	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3497086	0		=			
ANR	3497486	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497487	Identifier	tok		3497086	0					
ANR	3497488	Identifier	type		3497086	1					
ANR	3497489	Identifier	TK_CHAR_TYPE		3497086	1					
ANR	3497490	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT	2984:6:63825:63865	3497086	39	True				
ANR	3497491	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT		3497086	0		=			
ANR	3497492	MemberAccess	tok -> u . prop . ctype		3497086	0					
ANR	3497493	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497494	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497495	Identifier	tok		3497086	0					
ANR	3497496	Identifier	u		3497086	1					
ANR	3497497	Identifier	prop		3497086	1					
ANR	3497498	Identifier	ctype		3497086	1					
ANR	3497499	Identifier	ONIGENC_CTYPE_XDIGIT		3497086	1					
ANR	3497500	ExpressionStatement	tok -> u . prop . not = 1	2985:6:63873:63894	3497086	40	True				
ANR	3497501	AssignmentExpression	tok -> u . prop . not = 1		3497086	0		=			
ANR	3497502	MemberAccess	tok -> u . prop . not		3497086	0					
ANR	3497503	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497504	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497505	Identifier	tok		3497086	0					
ANR	3497506	Identifier	u		3497086	1					
ANR	3497507	Identifier	prop		3497086	1					
ANR	3497508	Identifier	not		3497086	1					
ANR	3497509	PrimaryExpression	1		3497086	1					
ANR	3497510	BreakStatement	break ;	2986:6:63902:63907	3497086	41	True				
ANR	3497511	Label	case 'p' :	2988:4:63914:63922	3497086	42	True				
ANR	3497512	Label	case 'P' :	2989:4:63928:63936	3497086	43	True				
ANR	3497513	ExpressionStatement	c2 = PPEEK	2990:6:63944:63954	3497086	44	True				
ANR	3497514	AssignmentExpression	c2 = PPEEK		3497086	0		=			
ANR	3497515	Identifier	c2		3497086	0					
ANR	3497516	Identifier	PPEEK		3497086	1					
ANR	3497517	IfStatement	"if ( c2 == '{' && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY ) )"		3497086	45					
ANR	3497518	Condition	"c2 == '{' && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"	2991:10:63966:64039	3497086	0	True				
ANR	3497519	AndExpression	"c2 == '{' && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"		3497086	0		&&			
ANR	3497520	EqualityExpression	c2 == '{'		3497086	0		==			
ANR	3497521	Identifier	c2		3497086	0					
ANR	3497522	PrimaryExpression	'{'		3497086	1					
ANR	3497523	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"		3497086	1					
ANR	3497524	Callee	IS_SYNTAX_OP2		3497086	0					
ANR	3497525	Identifier	IS_SYNTAX_OP2		3497086	0					
ANR	3497526	ArgumentList	syn		3497086	1					
ANR	3497527	Argument	syn		3497086	0					
ANR	3497528	Identifier	syn		3497086	0					
ANR	3497529	Argument	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		3497086	1					
ANR	3497530	Identifier	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		3497086	0					
ANR	3497531	CompoundStatement		84:63:1997:1997	3497086	1					
ANR	3497532	ExpressionStatement	PINC	2993:1:64045:64049	3497086	0	True				
ANR	3497533	Identifier	PINC		3497086	0					
ANR	3497534	ExpressionStatement	tok -> type = TK_CHAR_PROPERTY	2994:1:64052:64080	3497086	1	True				
ANR	3497535	AssignmentExpression	tok -> type = TK_CHAR_PROPERTY		3497086	0		=			
ANR	3497536	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497537	Identifier	tok		3497086	0					
ANR	3497538	Identifier	type		3497086	1					
ANR	3497539	Identifier	TK_CHAR_PROPERTY		3497086	1					
ANR	3497540	ExpressionStatement	tok -> u . prop . not = ( c == 'P' ? 1 : 0 )	2995:1:64083:64119	3497086	2	True				
ANR	3497541	AssignmentExpression	tok -> u . prop . not = ( c == 'P' ? 1 : 0 )		3497086	0		=			
ANR	3497542	MemberAccess	tok -> u . prop . not		3497086	0					
ANR	3497543	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497544	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497545	Identifier	tok		3497086	0					
ANR	3497546	Identifier	u		3497086	1					
ANR	3497547	Identifier	prop		3497086	1					
ANR	3497548	Identifier	not		3497086	1					
ANR	3497549	ConditionalExpression	c == 'P' ? 1 : 0		3497086	1					
ANR	3497550	Condition	c == 'P'		3497086	0					
ANR	3497551	EqualityExpression	c == 'P'		3497086	0		==			
ANR	3497552	Identifier	c		3497086	0					
ANR	3497553	PrimaryExpression	'P'		3497086	1					
ANR	3497554	PrimaryExpression	1		3497086	1					
ANR	3497555	PrimaryExpression	0		3497086	2					
ANR	3497556	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT ) )"		3497086	3					
ANR	3497557	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT )"	2997:5:64127:64185	3497086	0	True				
ANR	3497558	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT )"		3497086	0					
ANR	3497559	Callee	IS_SYNTAX_OP2		3497086	0					
ANR	3497560	Identifier	IS_SYNTAX_OP2		3497086	0					
ANR	3497561	ArgumentList	syn		3497086	1					
ANR	3497562	Argument	syn		3497086	0					
ANR	3497563	Identifier	syn		3497086	0					
ANR	3497564	Argument	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		3497086	1					
ANR	3497565	Identifier	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		3497086	0					
ANR	3497566	CompoundStatement		89:66:2143:2143	3497086	1					
ANR	3497567	ExpressionStatement	PFETCH ( c2 )	2998:3:64193:64203	3497086	0	True				
ANR	3497568	CallExpression	PFETCH ( c2 )		3497086	0					
ANR	3497569	Callee	PFETCH		3497086	0					
ANR	3497570	Identifier	PFETCH		3497086	0					
ANR	3497571	ArgumentList	c2		3497086	1					
ANR	3497572	Argument	c2		3497086	0					
ANR	3497573	Identifier	c2		3497086	0					
ANR	3497574	IfStatement	if ( c2 == '^' )		3497086	1					
ANR	3497575	Condition	c2 == '^'	2999:7:64212:64220	3497086	0	True				
ANR	3497576	EqualityExpression	c2 == '^'		3497086	0		==			
ANR	3497577	Identifier	c2		3497086	0					
ANR	3497578	PrimaryExpression	'^'		3497086	1					
ANR	3497579	CompoundStatement		91:18:2178:2178	3497086	1					
ANR	3497580	ExpressionStatement	tok -> u . prop . not = ( tok -> u . prop . not == 0 ? 1 : 0 )	3000:5:64230:64278	3497086	0	True				
ANR	3497581	AssignmentExpression	tok -> u . prop . not = ( tok -> u . prop . not == 0 ? 1 : 0 )		3497086	0		=			
ANR	3497582	MemberAccess	tok -> u . prop . not		3497086	0					
ANR	3497583	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497584	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497585	Identifier	tok		3497086	0					
ANR	3497586	Identifier	u		3497086	1					
ANR	3497587	Identifier	prop		3497086	1					
ANR	3497588	Identifier	not		3497086	1					
ANR	3497589	ConditionalExpression	tok -> u . prop . not == 0 ? 1 : 0		3497086	1					
ANR	3497590	Condition	tok -> u . prop . not == 0		3497086	0					
ANR	3497591	EqualityExpression	tok -> u . prop . not == 0		3497086	0		==			
ANR	3497592	MemberAccess	tok -> u . prop . not		3497086	0					
ANR	3497593	MemberAccess	tok -> u . prop		3497086	0					
ANR	3497594	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497595	Identifier	tok		3497086	0					
ANR	3497596	Identifier	u		3497086	1					
ANR	3497597	Identifier	prop		3497086	1					
ANR	3497598	Identifier	not		3497086	1					
ANR	3497599	PrimaryExpression	0		3497086	1					
ANR	3497600	PrimaryExpression	1		3497086	1					
ANR	3497601	PrimaryExpression	0		3497086	2					
ANR	3497602	ElseStatement	else		3497086	0					
ANR	3497603	ExpressionStatement	PUNFETCH	3003:5:64298:64306	3497086	0	True				
ANR	3497604	Identifier	PUNFETCH		3497086	0					
ANR	3497605	BreakStatement	break ;	3006:6:64325:64330	3497086	46	True				
ANR	3497606	Label	case 'x' :	3008:4:64337:64345	3497086	47	True				
ANR	3497607	IfStatement	if ( PEND )		3497086	48					
ANR	3497608	Condition	PEND	3009:10:64357:64360	3497086	0	True				
ANR	3497609	Identifier	PEND		3497086	0					
ANR	3497610	BreakStatement	break ;	3009:16:64363:64368	3497086	1	True				
ANR	3497611	ExpressionStatement	prev = p	3011:6:64377:64385	3497086	49	True				
ANR	3497612	AssignmentExpression	prev = p		3497086	0		=			
ANR	3497613	Identifier	prev		3497086	0					
ANR	3497614	Identifier	p		3497086	1					
ANR	3497615	IfStatement	"if ( PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 ) )"		3497086	50					
ANR	3497616	Condition	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"	3012:10:64397:64460	3497086	0	True				
ANR	3497617	AndExpression	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"		3497086	0		&&			
ANR	3497618	CallExpression	PPEEK_IS ( '{' )		3497086	0					
ANR	3497619	Callee	PPEEK_IS		3497086	0					
ANR	3497620	Identifier	PPEEK_IS		3497086	0					
ANR	3497621	ArgumentList	'{'		3497086	1					
ANR	3497622	Argument	'{'		3497086	0					
ANR	3497623	PrimaryExpression	'{'		3497086	0					
ANR	3497624	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"		3497086	1					
ANR	3497625	Callee	IS_SYNTAX_OP		3497086	0					
ANR	3497626	Identifier	IS_SYNTAX_OP		3497086	0					
ANR	3497627	ArgumentList	syn		3497086	1					
ANR	3497628	Argument	syn		3497086	0					
ANR	3497629	Identifier	syn		3497086	0					
ANR	3497630	Argument	ONIG_SYN_OP_ESC_X_BRACE_HEX8		3497086	1					
ANR	3497631	Identifier	ONIG_SYN_OP_ESC_X_BRACE_HEX8		3497086	0					
ANR	3497632	CompoundStatement		104:76:2418:2418	3497086	1					
ANR	3497633	ExpressionStatement	PINC	3013:1:64466:64470	3497086	0	True				
ANR	3497634	Identifier	PINC		3497086	0					
ANR	3497635	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"	3014:1:64473:64528	3497086	1	True				
ANR	3497636	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"		3497086	0		=			
ANR	3497637	Identifier	num		3497086	0					
ANR	3497638	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"		3497086	1					
ANR	3497639	Callee	scan_unsigned_hexadecimal_number		3497086	0					
ANR	3497640	Identifier	scan_unsigned_hexadecimal_number		3497086	0					
ANR	3497641	ArgumentList	& p		3497086	1					
ANR	3497642	Argument	& p		3497086	0					
ANR	3497643	UnaryOperationExpression	& p		3497086	0					
ANR	3497644	UnaryOperator	&		3497086	0					
ANR	3497645	Identifier	p		3497086	1					
ANR	3497646	Argument	end		3497086	1					
ANR	3497647	Identifier	end		3497086	0					
ANR	3497648	Argument	8		3497086	2					
ANR	3497649	PrimaryExpression	8		3497086	0					
ANR	3497650	Argument	enc		3497086	3					
ANR	3497651	Identifier	enc		3497086	0					
ANR	3497652	IfStatement	if ( num < 0 )		3497086	2					
ANR	3497653	Condition	num < 0	3015:5:64535:64541	3497086	0	True				
ANR	3497654	RelationalExpression	num < 0		3497086	0		<			
ANR	3497655	Identifier	num		3497086	0					
ANR	3497656	PrimaryExpression	0		3497086	1					
ANR	3497657	ReturnStatement	return ONIGERR_TOO_BIG_WIDE_CHAR_VALUE ;	3015:14:64544:64582	3497086	1	True				
ANR	3497658	Identifier	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		3497086	0					
ANR	3497659	IfStatement	if ( ! PEND )		3497086	3					
ANR	3497660	Condition	! PEND	3016:5:64589:64593	3497086	0	True				
ANR	3497661	UnaryOperationExpression	! PEND		3497086	0					
ANR	3497662	UnaryOperator	!		3497086	0					
ANR	3497663	Identifier	PEND		3497086	1					
ANR	3497664	CompoundStatement		108:12:2551:2551	3497086	1					
ANR	3497665	ExpressionStatement	c2 = PPEEK	3017:10:64608:64618	3497086	0	True				
ANR	3497666	AssignmentExpression	c2 = PPEEK		3497086	0		=			
ANR	3497667	Identifier	c2		3497086	0					
ANR	3497668	Identifier	PPEEK		3497086	1					
ANR	3497669	IfStatement	"if ( ONIGENC_IS_CODE_XDIGIT ( enc , c2 ) )"		3497086	1					
ANR	3497670	Condition	"ONIGENC_IS_CODE_XDIGIT ( enc , c2 )"	3018:14:64634:64664	3497086	0	True				
ANR	3497671	CallExpression	"ONIGENC_IS_CODE_XDIGIT ( enc , c2 )"		3497086	0					
ANR	3497672	Callee	ONIGENC_IS_CODE_XDIGIT		3497086	0					
ANR	3497673	Identifier	ONIGENC_IS_CODE_XDIGIT		3497086	0					
ANR	3497674	ArgumentList	enc		3497086	1					
ANR	3497675	Argument	enc		3497086	0					
ANR	3497676	Identifier	enc		3497086	0					
ANR	3497677	Argument	c2		3497086	1					
ANR	3497678	Identifier	c2		3497086	0					
ANR	3497679	ReturnStatement	return ONIGERR_TOO_LONG_WIDE_CHAR_VALUE ;	3019:12:64679:64718	3497086	1	True				
ANR	3497680	Identifier	ONIGERR_TOO_LONG_WIDE_CHAR_VALUE		3497086	0					
ANR	3497681	IfStatement	"if ( p > prev + enclen ( enc , prev ) && ! PEND && ( PPEEK_IS ( '}' ) ) )"		3497086	4					
ANR	3497682	Condition	"p > prev + enclen ( enc , prev ) && ! PEND && ( PPEEK_IS ( '}' ) )"	3022:5:64736:64791	3497086	0	True				
ANR	3497683	AndExpression	"p > prev + enclen ( enc , prev ) && ! PEND && ( PPEEK_IS ( '}' ) )"		3497086	0		&&			
ANR	3497684	RelationalExpression	"p > prev + enclen ( enc , prev )"		3497086	0		>			
ANR	3497685	Identifier	p		3497086	0					
ANR	3497686	AdditiveExpression	"prev + enclen ( enc , prev )"		3497086	1		+			
ANR	3497687	Identifier	prev		3497086	0					
ANR	3497688	CallExpression	"enclen ( enc , prev )"		3497086	1					
ANR	3497689	Callee	enclen		3497086	0					
ANR	3497690	Identifier	enclen		3497086	0					
ANR	3497691	ArgumentList	enc		3497086	1					
ANR	3497692	Argument	enc		3497086	0					
ANR	3497693	Identifier	enc		3497086	0					
ANR	3497694	Argument	prev		3497086	1					
ANR	3497695	Identifier	prev		3497086	0					
ANR	3497696	AndExpression	! PEND && ( PPEEK_IS ( '}' ) )		3497086	1		&&			
ANR	3497697	UnaryOperationExpression	! PEND		3497086	0					
ANR	3497698	UnaryOperator	!		3497086	0					
ANR	3497699	Identifier	PEND		3497086	1					
ANR	3497700	CallExpression	PPEEK_IS ( '}' )		3497086	1					
ANR	3497701	Callee	PPEEK_IS		3497086	0					
ANR	3497702	Identifier	PPEEK_IS		3497086	0					
ANR	3497703	ArgumentList	'}'		3497086	1					
ANR	3497704	Argument	'}'		3497086	0					
ANR	3497705	PrimaryExpression	'}'		3497086	0					
ANR	3497706	CompoundStatement		114:63:2749:2749	3497086	1					
ANR	3497707	ExpressionStatement	PINC	3023:3:64799:64803	3497086	0	True				
ANR	3497708	Identifier	PINC		3497086	0					
ANR	3497709	ExpressionStatement	tok -> type = TK_CODE_POINT	3024:3:64808:64835	3497086	1	True				
ANR	3497710	AssignmentExpression	tok -> type = TK_CODE_POINT		3497086	0		=			
ANR	3497711	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497712	Identifier	tok		3497086	0					
ANR	3497713	Identifier	type		3497086	1					
ANR	3497714	Identifier	TK_CODE_POINT		3497086	1					
ANR	3497715	ExpressionStatement	tok -> base = 16	3025:3:64840:64856	3497086	2	True				
ANR	3497716	AssignmentExpression	tok -> base = 16		3497086	0		=			
ANR	3497717	PtrMemberAccess	tok -> base		3497086	0					
ANR	3497718	Identifier	tok		3497086	0					
ANR	3497719	Identifier	base		3497086	1					
ANR	3497720	PrimaryExpression	16		3497086	1					
ANR	3497721	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3026:3:64861:64894	3497086	3	True				
ANR	3497722	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		3497086	0		=			
ANR	3497723	MemberAccess	tok -> u . code		3497086	0					
ANR	3497724	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497725	Identifier	tok		3497086	0					
ANR	3497726	Identifier	u		3497086	1					
ANR	3497727	Identifier	code		3497086	1					
ANR	3497728	CastExpression	( OnigCodePoint ) num		3497086	1					
ANR	3497729	CastTarget	OnigCodePoint		3497086	0					
ANR	3497730	Identifier	num		3497086	1					
ANR	3497731	ElseStatement	else		3497086	0					
ANR	3497732	CompoundStatement		120:6:2860:2860	3497086	0					
ANR	3497733	ExpressionStatement	p = prev	3030:3:64956:64964	3497086	0	True				
ANR	3497734	AssignmentExpression	p = prev		3497086	0		=			
ANR	3497735	Identifier	p		3497086	0					
ANR	3497736	Identifier	prev		3497086	1					
ANR	3497737	ElseStatement	else		3497086	0					
ANR	3497738	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 ) )"		3497086	0					
ANR	3497739	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 )"	3033:15:64992:65032	3497086	0	True				
ANR	3497740	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 )"		3497086	0					
ANR	3497741	Callee	IS_SYNTAX_OP		3497086	0					
ANR	3497742	Identifier	IS_SYNTAX_OP		3497086	0					
ANR	3497743	ArgumentList	syn		3497086	1					
ANR	3497744	Argument	syn		3497086	0					
ANR	3497745	Identifier	syn		3497086	0					
ANR	3497746	Argument	ONIG_SYN_OP_ESC_X_HEX2		3497086	1					
ANR	3497747	Identifier	ONIG_SYN_OP_ESC_X_HEX2		3497086	0					
ANR	3497748	CompoundStatement		125:58:2990:2990	3497086	1					
ANR	3497749	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"	3034:1:65038:65093	3497086	0	True				
ANR	3497750	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"		3497086	0		=			
ANR	3497751	Identifier	num		3497086	0					
ANR	3497752	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"		3497086	1					
ANR	3497753	Callee	scan_unsigned_hexadecimal_number		3497086	0					
ANR	3497754	Identifier	scan_unsigned_hexadecimal_number		3497086	0					
ANR	3497755	ArgumentList	& p		3497086	1					
ANR	3497756	Argument	& p		3497086	0					
ANR	3497757	UnaryOperationExpression	& p		3497086	0					
ANR	3497758	UnaryOperator	&		3497086	0					
ANR	3497759	Identifier	p		3497086	1					
ANR	3497760	Argument	end		3497086	1					
ANR	3497761	Identifier	end		3497086	0					
ANR	3497762	Argument	2		3497086	2					
ANR	3497763	PrimaryExpression	2		3497086	0					
ANR	3497764	Argument	enc		3497086	3					
ANR	3497765	Identifier	enc		3497086	0					
ANR	3497766	IfStatement	if ( num < 0 )		3497086	1					
ANR	3497767	Condition	num < 0	3035:5:65100:65106	3497086	0	True				
ANR	3497768	RelationalExpression	num < 0		3497086	0		<			
ANR	3497769	Identifier	num		3497086	0					
ANR	3497770	PrimaryExpression	0		3497086	1					
ANR	3497771	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3035:14:65109:65138	3497086	1	True				
ANR	3497772	Identifier	ONIGERR_TOO_BIG_NUMBER		3497086	0					
ANR	3497773	IfStatement	if ( p == prev )		3497086	2					
ANR	3497774	Condition	p == prev	3036:5:65145:65153	3497086	0	True				
ANR	3497775	EqualityExpression	p == prev		3497086	0		==			
ANR	3497776	Identifier	p		3497086	0					
ANR	3497777	Identifier	prev		3497086	1					
ANR	3497778	CompoundStatement		128:16:3111:3111	3497086	1					
ANR	3497779	ExpressionStatement	num = 0	3037:3:65188:65195	3497086	0	True				
ANR	3497780	AssignmentExpression	num = 0		3497086	0		=			
ANR	3497781	Identifier	num		3497086	0					
ANR	3497782	PrimaryExpression	0		3497086	1					
ANR	3497783	ExpressionStatement	tok -> type = TK_RAW_BYTE	3039:1:65227:65250	3497086	3	True				
ANR	3497784	AssignmentExpression	tok -> type = TK_RAW_BYTE		3497086	0		=			
ANR	3497785	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497786	Identifier	tok		3497086	0					
ANR	3497787	Identifier	type		3497086	1					
ANR	3497788	Identifier	TK_RAW_BYTE		3497086	1					
ANR	3497789	ExpressionStatement	tok -> base = 16	3040:1:65253:65267	3497086	4	True				
ANR	3497790	AssignmentExpression	tok -> base = 16		3497086	0		=			
ANR	3497791	PtrMemberAccess	tok -> base		3497086	0					
ANR	3497792	Identifier	tok		3497086	0					
ANR	3497793	Identifier	base		3497086	1					
ANR	3497794	PrimaryExpression	16		3497086	1					
ANR	3497795	ExpressionStatement	tok -> u . c = num	3041:1:65270:65285	3497086	5	True				
ANR	3497796	AssignmentExpression	tok -> u . c = num		3497086	0		=			
ANR	3497797	MemberAccess	tok -> u . c		3497086	0					
ANR	3497798	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497799	Identifier	tok		3497086	0					
ANR	3497800	Identifier	u		3497086	1					
ANR	3497801	Identifier	c		3497086	1					
ANR	3497802	Identifier	num		3497086	1					
ANR	3497803	BreakStatement	break ;	3043:6:65301:65306	3497086	51	True				
ANR	3497804	Label	case 'u' :	3045:4:65313:65321	3497086	52	True				
ANR	3497805	IfStatement	if ( PEND )		3497086	53					
ANR	3497806	Condition	PEND	3046:10:65333:65336	3497086	0	True				
ANR	3497807	Identifier	PEND		3497086	0					
ANR	3497808	BreakStatement	break ;	3046:16:65339:65344	3497086	1	True				
ANR	3497809	ExpressionStatement	prev = p	3048:6:65353:65361	3497086	54	True				
ANR	3497810	AssignmentExpression	prev = p		3497086	0		=			
ANR	3497811	Identifier	prev		3497086	0					
ANR	3497812	Identifier	p		3497086	1					
ANR	3497813	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 ) )"		3497086	55					
ANR	3497814	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 )"	3049:10:65373:65415	3497086	0	True				
ANR	3497815	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 )"		3497086	0					
ANR	3497816	Callee	IS_SYNTAX_OP2		3497086	0					
ANR	3497817	Identifier	IS_SYNTAX_OP2		3497086	0					
ANR	3497818	ArgumentList	syn		3497086	1					
ANR	3497819	Argument	syn		3497086	0					
ANR	3497820	Identifier	syn		3497086	0					
ANR	3497821	Argument	ONIG_SYN_OP2_ESC_U_HEX4		3497086	1					
ANR	3497822	Identifier	ONIG_SYN_OP2_ESC_U_HEX4		3497086	0					
ANR	3497823	CompoundStatement		141:55:3373:3373	3497086	1					
ANR	3497824	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"	3050:1:65421:65476	3497086	0	True				
ANR	3497825	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"		3497086	0		=			
ANR	3497826	Identifier	num		3497086	0					
ANR	3497827	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"		3497086	1					
ANR	3497828	Callee	scan_unsigned_hexadecimal_number		3497086	0					
ANR	3497829	Identifier	scan_unsigned_hexadecimal_number		3497086	0					
ANR	3497830	ArgumentList	& p		3497086	1					
ANR	3497831	Argument	& p		3497086	0					
ANR	3497832	UnaryOperationExpression	& p		3497086	0					
ANR	3497833	UnaryOperator	&		3497086	0					
ANR	3497834	Identifier	p		3497086	1					
ANR	3497835	Argument	end		3497086	1					
ANR	3497836	Identifier	end		3497086	0					
ANR	3497837	Argument	4		3497086	2					
ANR	3497838	PrimaryExpression	4		3497086	0					
ANR	3497839	Argument	enc		3497086	3					
ANR	3497840	Identifier	enc		3497086	0					
ANR	3497841	IfStatement	if ( num < 0 )		3497086	1					
ANR	3497842	Condition	num < 0	3051:5:65483:65489	3497086	0	True				
ANR	3497843	RelationalExpression	num < 0		3497086	0		<			
ANR	3497844	Identifier	num		3497086	0					
ANR	3497845	PrimaryExpression	0		3497086	1					
ANR	3497846	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3051:14:65492:65521	3497086	1	True				
ANR	3497847	Identifier	ONIGERR_TOO_BIG_NUMBER		3497086	0					
ANR	3497848	IfStatement	if ( p == prev )		3497086	2					
ANR	3497849	Condition	p == prev	3052:5:65528:65536	3497086	0	True				
ANR	3497850	EqualityExpression	p == prev		3497086	0		==			
ANR	3497851	Identifier	p		3497086	0					
ANR	3497852	Identifier	prev		3497086	1					
ANR	3497853	CompoundStatement		144:16:3494:3494	3497086	1					
ANR	3497854	ExpressionStatement	num = 0	3053:3:65571:65578	3497086	0	True				
ANR	3497855	AssignmentExpression	num = 0		3497086	0		=			
ANR	3497856	Identifier	num		3497086	0					
ANR	3497857	PrimaryExpression	0		3497086	1					
ANR	3497858	ExpressionStatement	tok -> type = TK_CODE_POINT	3055:1:65610:65637	3497086	3	True				
ANR	3497859	AssignmentExpression	tok -> type = TK_CODE_POINT		3497086	0		=			
ANR	3497860	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497861	Identifier	tok		3497086	0					
ANR	3497862	Identifier	type		3497086	1					
ANR	3497863	Identifier	TK_CODE_POINT		3497086	1					
ANR	3497864	ExpressionStatement	tok -> base = 16	3056:1:65640:65656	3497086	4	True				
ANR	3497865	AssignmentExpression	tok -> base = 16		3497086	0		=			
ANR	3497866	PtrMemberAccess	tok -> base		3497086	0					
ANR	3497867	Identifier	tok		3497086	0					
ANR	3497868	Identifier	base		3497086	1					
ANR	3497869	PrimaryExpression	16		3497086	1					
ANR	3497870	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3057:1:65659:65692	3497086	5	True				
ANR	3497871	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		3497086	0		=			
ANR	3497872	MemberAccess	tok -> u . code		3497086	0					
ANR	3497873	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497874	Identifier	tok		3497086	0					
ANR	3497875	Identifier	u		3497086	1					
ANR	3497876	Identifier	code		3497086	1					
ANR	3497877	CastExpression	( OnigCodePoint ) num		3497086	1					
ANR	3497878	CastTarget	OnigCodePoint		3497086	0					
ANR	3497879	Identifier	num		3497086	1					
ANR	3497880	BreakStatement	break ;	3059:6:65708:65713	3497086	56	True				
ANR	3497881	Label	case '0' :	3061:4:65720:65728	3497086	57	True				
ANR	3497882	Label	case '1' :	3062:4:65734:65742	3497086	58	True				
ANR	3497883	Label	case '2' :	3062:14:65744:65752	3497086	59	True				
ANR	3497884	Label	case '3' :	3062:24:65754:65762	3497086	60	True				
ANR	3497885	Label	case '4' :	3062:34:65764:65772	3497086	61	True				
ANR	3497886	Label	case '5' :	3062:44:65774:65782	3497086	62	True				
ANR	3497887	Label	case '6' :	3062:54:65784:65792	3497086	63	True				
ANR	3497888	Label	case '7' :	3062:64:65794:65802	3497086	64	True				
ANR	3497889	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 ) )"		3497086	65					
ANR	3497890	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 )"	3063:10:65814:65854	3497086	0	True				
ANR	3497891	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 )"		3497086	0					
ANR	3497892	Callee	IS_SYNTAX_OP		3497086	0					
ANR	3497893	Identifier	IS_SYNTAX_OP		3497086	0					
ANR	3497894	ArgumentList	syn		3497086	1					
ANR	3497895	Argument	syn		3497086	0					
ANR	3497896	Identifier	syn		3497086	0					
ANR	3497897	Argument	ONIG_SYN_OP_ESC_OCTAL3		3497086	1					
ANR	3497898	Identifier	ONIG_SYN_OP_ESC_OCTAL3		3497086	0					
ANR	3497899	CompoundStatement		155:53:3812:3812	3497086	1					
ANR	3497900	ExpressionStatement	PUNFETCH	3064:1:65860:65868	3497086	0	True				
ANR	3497901	Identifier	PUNFETCH		3497086	0					
ANR	3497902	ExpressionStatement	prev = p	3065:1:65871:65879	3497086	1	True				
ANR	3497903	AssignmentExpression	prev = p		3497086	0		=			
ANR	3497904	Identifier	prev		3497086	0					
ANR	3497905	Identifier	p		3497086	1					
ANR	3497906	ExpressionStatement	"num = scan_unsigned_octal_number ( & p , end , 3 , enc )"	3066:1:65882:65931	3497086	2	True				
ANR	3497907	AssignmentExpression	"num = scan_unsigned_octal_number ( & p , end , 3 , enc )"		3497086	0		=			
ANR	3497908	Identifier	num		3497086	0					
ANR	3497909	CallExpression	"scan_unsigned_octal_number ( & p , end , 3 , enc )"		3497086	1					
ANR	3497910	Callee	scan_unsigned_octal_number		3497086	0					
ANR	3497911	Identifier	scan_unsigned_octal_number		3497086	0					
ANR	3497912	ArgumentList	& p		3497086	1					
ANR	3497913	Argument	& p		3497086	0					
ANR	3497914	UnaryOperationExpression	& p		3497086	0					
ANR	3497915	UnaryOperator	&		3497086	0					
ANR	3497916	Identifier	p		3497086	1					
ANR	3497917	Argument	end		3497086	1					
ANR	3497918	Identifier	end		3497086	0					
ANR	3497919	Argument	3		3497086	2					
ANR	3497920	PrimaryExpression	3		3497086	0					
ANR	3497921	Argument	enc		3497086	3					
ANR	3497922	Identifier	enc		3497086	0					
ANR	3497923	IfStatement	if ( num < 0 )		3497086	3					
ANR	3497924	Condition	num < 0	3067:5:65938:65944	3497086	0	True				
ANR	3497925	RelationalExpression	num < 0		3497086	0		<			
ANR	3497926	Identifier	num		3497086	0					
ANR	3497927	PrimaryExpression	0		3497086	1					
ANR	3497928	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3067:14:65947:65976	3497086	1	True				
ANR	3497929	Identifier	ONIGERR_TOO_BIG_NUMBER		3497086	0					
ANR	3497930	IfStatement	if ( p == prev )		3497086	4					
ANR	3497931	Condition	p == prev	3068:5:65983:65991	3497086	0	True				
ANR	3497932	EqualityExpression	p == prev		3497086	0		==			
ANR	3497933	Identifier	p		3497086	0					
ANR	3497934	Identifier	prev		3497086	1					
ANR	3497935	CompoundStatement		160:16:3949:3949	3497086	1					
ANR	3497936	ExpressionStatement	num = 0	3069:3:66026:66033	3497086	0	True				
ANR	3497937	AssignmentExpression	num = 0		3497086	0		=			
ANR	3497938	Identifier	num		3497086	0					
ANR	3497939	PrimaryExpression	0		3497086	1					
ANR	3497940	ExpressionStatement	tok -> type = TK_RAW_BYTE	3071:1:66065:66088	3497086	5	True				
ANR	3497941	AssignmentExpression	tok -> type = TK_RAW_BYTE		3497086	0		=			
ANR	3497942	PtrMemberAccess	tok -> type		3497086	0					
ANR	3497943	Identifier	tok		3497086	0					
ANR	3497944	Identifier	type		3497086	1					
ANR	3497945	Identifier	TK_RAW_BYTE		3497086	1					
ANR	3497946	ExpressionStatement	tok -> base = 8	3072:1:66091:66104	3497086	6	True				
ANR	3497947	AssignmentExpression	tok -> base = 8		3497086	0		=			
ANR	3497948	PtrMemberAccess	tok -> base		3497086	0					
ANR	3497949	Identifier	tok		3497086	0					
ANR	3497950	Identifier	base		3497086	1					
ANR	3497951	PrimaryExpression	8		3497086	1					
ANR	3497952	ExpressionStatement	tok -> u . c = num	3073:1:66107:66122	3497086	7	True				
ANR	3497953	AssignmentExpression	tok -> u . c = num		3497086	0		=			
ANR	3497954	MemberAccess	tok -> u . c		3497086	0					
ANR	3497955	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497956	Identifier	tok		3497086	0					
ANR	3497957	Identifier	u		3497086	1					
ANR	3497958	Identifier	c		3497086	1					
ANR	3497959	Identifier	num		3497086	1					
ANR	3497960	BreakStatement	break ;	3075:6:66138:66143	3497086	66	True				
ANR	3497961	Label	default :	3077:4:66150:66157	3497086	67	True				
ANR	3497962	Identifier	default		3497086	0					
ANR	3497963	ExpressionStatement	PUNFETCH	3078:6:66165:66173	3497086	68	True				
ANR	3497964	Identifier	PUNFETCH		3497086	0					
ANR	3497965	ExpressionStatement	"num = fetch_escaped_value ( & p , end , env )"	3079:6:66181:66220	3497086	69	True				
ANR	3497966	AssignmentExpression	"num = fetch_escaped_value ( & p , end , env )"		3497086	0		=			
ANR	3497967	Identifier	num		3497086	0					
ANR	3497968	CallExpression	"fetch_escaped_value ( & p , end , env )"		3497086	1					
ANR	3497969	Callee	fetch_escaped_value		3497086	0					
ANR	3497970	Identifier	fetch_escaped_value		3497086	0					
ANR	3497971	ArgumentList	& p		3497086	1					
ANR	3497972	Argument	& p		3497086	0					
ANR	3497973	UnaryOperationExpression	& p		3497086	0					
ANR	3497974	UnaryOperator	&		3497086	0					
ANR	3497975	Identifier	p		3497086	1					
ANR	3497976	Argument	end		3497086	1					
ANR	3497977	Identifier	end		3497086	0					
ANR	3497978	Argument	env		3497086	2					
ANR	3497979	Identifier	env		3497086	0					
ANR	3497980	IfStatement	if ( num < 0 )		3497086	70					
ANR	3497981	Condition	num < 0	3080:10:66232:66238	3497086	0	True				
ANR	3497982	RelationalExpression	num < 0		3497086	0		<			
ANR	3497983	Identifier	num		3497086	0					
ANR	3497984	PrimaryExpression	0		3497086	1					
ANR	3497985	ReturnStatement	return num ;	3080:19:66241:66251	3497086	1	True				
ANR	3497986	Identifier	num		3497086	0					
ANR	3497987	IfStatement	if ( tok -> u . c != num )		3497086	71					
ANR	3497988	Condition	tok -> u . c != num	3081:10:66263:66277	3497086	0	True				
ANR	3497989	EqualityExpression	tok -> u . c != num		3497086	0		!=			
ANR	3497990	MemberAccess	tok -> u . c		3497086	0					
ANR	3497991	PtrMemberAccess	tok -> u		3497086	0					
ANR	3497992	Identifier	tok		3497086	0					
ANR	3497993	Identifier	u		3497086	1					
ANR	3497994	Identifier	c		3497086	1					
ANR	3497995	Identifier	num		3497086	1					
ANR	3497996	CompoundStatement		173:27:4235:4235	3497086	1					
ANR	3497997	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3082:1:66283:66316	3497086	0	True				
ANR	3497998	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		3497086	0		=			
ANR	3497999	MemberAccess	tok -> u . code		3497086	0					
ANR	3498000	PtrMemberAccess	tok -> u		3497086	0					
ANR	3498001	Identifier	tok		3497086	0					
ANR	3498002	Identifier	u		3497086	1					
ANR	3498003	Identifier	code		3497086	1					
ANR	3498004	CastExpression	( OnigCodePoint ) num		3497086	1					
ANR	3498005	CastTarget	OnigCodePoint		3497086	0					
ANR	3498006	Identifier	num		3497086	1					
ANR	3498007	ExpressionStatement	tok -> type = TK_CODE_POINT	3083:1:66319:66346	3497086	1	True				
ANR	3498008	AssignmentExpression	tok -> type = TK_CODE_POINT		3497086	0		=			
ANR	3498009	PtrMemberAccess	tok -> type		3497086	0					
ANR	3498010	Identifier	tok		3497086	0					
ANR	3498011	Identifier	type		3497086	1					
ANR	3498012	Identifier	TK_CODE_POINT		3497086	1					
ANR	3498013	BreakStatement	break ;	3085:6:66362:66367	3497086	72	True				
ANR	3498014	ElseStatement	else		3497086	0					
ANR	3498015	IfStatement	if ( c == '[' )		3497086	0					
ANR	3498016	Condition	c == '['	3088:11:66390:66397	3497086	0	True				
ANR	3498017	EqualityExpression	c == '['		3497086	0		==			
ANR	3498018	Identifier	c		3497086	0					
ANR	3498019	PrimaryExpression	'['		3497086	1					
ANR	3498020	CompoundStatement		180:21:4355:4355	3497086	1					
ANR	3498021	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_POSIX_BRACKET ) && ( PPEEK_IS ( ':' ) ) )"		3497086	0					
ANR	3498022	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_POSIX_BRACKET ) && ( PPEEK_IS ( ':' ) )"	3089:8:66410:66472	3497086	0	True				
ANR	3498023	AndExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_POSIX_BRACKET ) && ( PPEEK_IS ( ':' ) )"		3497086	0		&&			
ANR	3498024	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_POSIX_BRACKET )"		3497086	0					
ANR	3498025	Callee	IS_SYNTAX_OP		3497086	0					
ANR	3498026	Identifier	IS_SYNTAX_OP		3497086	0					
ANR	3498027	ArgumentList	syn		3497086	1					
ANR	3498028	Argument	syn		3497086	0					
ANR	3498029	Identifier	syn		3497086	0					
ANR	3498030	Argument	ONIG_SYN_OP_POSIX_BRACKET		3497086	1					
ANR	3498031	Identifier	ONIG_SYN_OP_POSIX_BRACKET		3497086	0					
ANR	3498032	CallExpression	PPEEK_IS ( ':' )		3497086	1					
ANR	3498033	Callee	PPEEK_IS		3497086	0					
ANR	3498034	Identifier	PPEEK_IS		3497086	0					
ANR	3498035	ArgumentList	':'		3497086	1					
ANR	3498036	Argument	':'		3497086	0					
ANR	3498037	PrimaryExpression	':'		3497086	0					
ANR	3498038	CompoundStatement		182:6:4438:4505	3497086	1					
ANR	3498039	IdentifierDeclStatement	"OnigCodePoint send [ ] = { ( OnigCodePoint ) ':' , ( OnigCodePoint ) ']' } ;"	3090:6:66483:66550	3497086	0	True				
ANR	3498040	IdentifierDecl	"send [ ] = { ( OnigCodePoint ) ':' , ( OnigCodePoint ) ']' }"		3497086	0					
ANR	3498041	IdentifierDeclType	OnigCodePoint [ ]		3497086	0					
ANR	3498042	Identifier	send		3497086	1					
ANR	3498043	AssignmentExpression	"send [ ] = { ( OnigCodePoint ) ':' , ( OnigCodePoint ) ']' }"		3497086	2		=			
ANR	3498044	Identifier	send		3497086	0					
ANR	3498045	InitializerList	( OnigCodePoint ) ':'		3497086	1					
ANR	3498046	CastExpression	( OnigCodePoint ) ':'		3497086	0					
ANR	3498047	CastTarget	OnigCodePoint		3497086	0					
ANR	3498048	PrimaryExpression	':'		3497086	1					
ANR	3498049	CastExpression	( OnigCodePoint ) ']'		3497086	1					
ANR	3498050	CastTarget	OnigCodePoint		3497086	0					
ANR	3498051	PrimaryExpression	']'		3497086	1					
ANR	3498052	ExpressionStatement	tok -> backp = p	3091:6:66558:66572	3497086	1	True				
ANR	3498053	AssignmentExpression	tok -> backp = p		3497086	0		=			
ANR	3498054	PtrMemberAccess	tok -> backp		3497086	0					
ANR	3498055	Identifier	tok		3497086	0					
ANR	3498056	Identifier	backp		3497086	1					
ANR	3498057	Identifier	p		3497086	1					
ANR	3498058	ExpressionStatement	PINC	3092:6:66609:66613	3497086	2	True				
ANR	3498059	Identifier	PINC		3497086	0					
ANR	3498060	IfStatement	"if ( str_exist_check_with_esc ( send , 2 , p , end , ( OnigCodePoint ) ']' , enc , syn ) )"		3497086	3					
ANR	3498061	Condition	"str_exist_check_with_esc ( send , 2 , p , end , ( OnigCodePoint ) ']' , enc , syn )"	3093:10:66625:66731	3497086	0	True				
ANR	3498062	CallExpression	"str_exist_check_with_esc ( send , 2 , p , end , ( OnigCodePoint ) ']' , enc , syn )"		3497086	0					
ANR	3498063	Callee	str_exist_check_with_esc		3497086	0					
ANR	3498064	Identifier	str_exist_check_with_esc		3497086	0					
ANR	3498065	ArgumentList	send		3497086	1					
ANR	3498066	Argument	send		3497086	0					
ANR	3498067	Identifier	send		3497086	0					
ANR	3498068	Argument	2		3497086	1					
ANR	3498069	PrimaryExpression	2		3497086	0					
ANR	3498070	Argument	p		3497086	2					
ANR	3498071	Identifier	p		3497086	0					
ANR	3498072	Argument	end		3497086	3					
ANR	3498073	Identifier	end		3497086	0					
ANR	3498074	Argument	( OnigCodePoint ) ']'		3497086	4					
ANR	3498075	CastExpression	( OnigCodePoint ) ']'		3497086	0					
ANR	3498076	CastTarget	OnigCodePoint		3497086	0					
ANR	3498077	PrimaryExpression	']'		3497086	1					
ANR	3498078	Argument	enc		3497086	5					
ANR	3498079	Identifier	enc		3497086	0					
ANR	3498080	Argument	syn		3497086	6					
ANR	3498081	Identifier	syn		3497086	0					
ANR	3498082	CompoundStatement		186:67:4689:4689	3497086	1					
ANR	3498083	ExpressionStatement	tok -> type = TK_POSIX_BRACKET_OPEN	3095:1:66737:66770	3497086	0	True				
ANR	3498084	AssignmentExpression	tok -> type = TK_POSIX_BRACKET_OPEN		3497086	0		=			
ANR	3498085	PtrMemberAccess	tok -> type		3497086	0					
ANR	3498086	Identifier	tok		3497086	0					
ANR	3498087	Identifier	type		3497086	1					
ANR	3498088	Identifier	TK_POSIX_BRACKET_OPEN		3497086	1					
ANR	3498089	ElseStatement	else		3497086	0					
ANR	3498090	CompoundStatement		189:11:4746:4746	3497086	0					
ANR	3498091	ExpressionStatement	PUNFETCH	3098:1:66794:66802	3497086	0	True				
ANR	3498092	Identifier	PUNFETCH		3497086	0					
ANR	3498093	GotoStatement	goto cc_in_cc ;	3099:1:66805:66818	3497086	1	True				
ANR	3498094	Identifier	cc_in_cc		3497086	0					
ANR	3498095	ElseStatement	else		3497086	0					
ANR	3498096	CompoundStatement		194:9:4798:4798	3497086	0					
ANR	3498097	Label	cc_in_cc :	3103:4:66849:66857	3497086	0	True				
ANR	3498098	Identifier	cc_in_cc		3497086	0					
ANR	3498099	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP ) )"		3497086	1					
ANR	3498100	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP )"	3104:10:66869:66914	3497086	0	True				
ANR	3498101	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP )"		3497086	0					
ANR	3498102	Callee	IS_SYNTAX_OP2		3497086	0					
ANR	3498103	Identifier	IS_SYNTAX_OP2		3497086	0					
ANR	3498104	ArgumentList	syn		3497086	1					
ANR	3498105	Argument	syn		3497086	0					
ANR	3498106	Identifier	syn		3497086	0					
ANR	3498107	Argument	ONIG_SYN_OP2_CCLASS_SET_OP		3497086	1					
ANR	3498108	Identifier	ONIG_SYN_OP2_CCLASS_SET_OP		3497086	0					
ANR	3498109	CompoundStatement		196:58:4872:4872	3497086	1					
ANR	3498110	ExpressionStatement	tok -> type = TK_CC_CC_OPEN	3105:1:66920:66945	3497086	0	True				
ANR	3498111	AssignmentExpression	tok -> type = TK_CC_CC_OPEN		3497086	0		=			
ANR	3498112	PtrMemberAccess	tok -> type		3497086	0					
ANR	3498113	Identifier	tok		3497086	0					
ANR	3498114	Identifier	type		3497086	1					
ANR	3498115	Identifier	TK_CC_CC_OPEN		3497086	1					
ANR	3498116	ElseStatement	else		3497086	0					
ANR	3498117	CompoundStatement		199:11:4921:4921	3497086	0					
ANR	3498118	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""["" )"	3108:1:66969:66999	3497086	0	True				
ANR	3498119	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""["" )"		3497086	0					
ANR	3498120	Callee	CC_ESC_WARN		3497086	0					
ANR	3498121	Identifier	CC_ESC_WARN		3497086	0					
ANR	3498122	ArgumentList	env		3497086	1					
ANR	3498123	Argument	env		3497086	0					
ANR	3498124	Identifier	env		3497086	0					
ANR	3498125	Argument	"( UChar * ) ""["""		3497086	1					
ANR	3498126	CastExpression	"( UChar * ) ""["""		3497086	0					
ANR	3498127	CastTarget	UChar *		3497086	0					
ANR	3498128	PrimaryExpression	"""["""		3497086	1					
ANR	3498129	ElseStatement	else		3497086	0					
ANR	3498130	IfStatement	if ( c == '&' )		3497086	0					
ANR	3498131	Condition	c == '&'	3112:11:67030:67037	3497086	0	True				
ANR	3498132	EqualityExpression	c == '&'		3497086	0		==			
ANR	3498133	Identifier	c		3497086	0					
ANR	3498134	PrimaryExpression	'&'		3497086	1					
ANR	3498135	CompoundStatement		204:21:4995:4995	3497086	1					
ANR	3498136	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP ) && ! PEND && ( PPEEK_IS ( '&' ) ) )"		3497086	0					
ANR	3498137	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP ) && ! PEND && ( PPEEK_IS ( '&' ) )"	3113:8:67050:67124	3497086	0	True				
ANR	3498138	AndExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP ) && ! PEND && ( PPEEK_IS ( '&' ) )"		3497086	0		&&			
ANR	3498139	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP )"		3497086	0					
ANR	3498140	Callee	IS_SYNTAX_OP2		3497086	0					
ANR	3498141	Identifier	IS_SYNTAX_OP2		3497086	0					
ANR	3498142	ArgumentList	syn		3497086	1					
ANR	3498143	Argument	syn		3497086	0					
ANR	3498144	Identifier	syn		3497086	0					
ANR	3498145	Argument	ONIG_SYN_OP2_CCLASS_SET_OP		3497086	1					
ANR	3498146	Identifier	ONIG_SYN_OP2_CCLASS_SET_OP		3497086	0					
ANR	3498147	AndExpression	! PEND && ( PPEEK_IS ( '&' ) )		3497086	1		&&			
ANR	3498148	UnaryOperationExpression	! PEND		3497086	0					
ANR	3498149	UnaryOperator	!		3497086	0					
ANR	3498150	Identifier	PEND		3497086	1					
ANR	3498151	CallExpression	PPEEK_IS ( '&' )		3497086	1					
ANR	3498152	Callee	PPEEK_IS		3497086	0					
ANR	3498153	Identifier	PPEEK_IS		3497086	0					
ANR	3498154	ArgumentList	'&'		3497086	1					
ANR	3498155	Argument	'&'		3497086	0					
ANR	3498156	PrimaryExpression	'&'		3497086	0					
ANR	3498157	CompoundStatement		206:27:5082:5082	3497086	1					
ANR	3498158	ExpressionStatement	PINC	3115:6:67135:67139	3497086	0	True				
ANR	3498159	Identifier	PINC		3497086	0					
ANR	3498160	ExpressionStatement	tok -> type = TK_CC_AND	3116:6:67147:67168	3497086	1	True				
ANR	3498161	AssignmentExpression	tok -> type = TK_CC_AND		3497086	0		=			
ANR	3498162	PtrMemberAccess	tok -> type		3497086	0					
ANR	3498163	Identifier	tok		3497086	0					
ANR	3498164	Identifier	type		3497086	1					
ANR	3498165	Identifier	TK_CC_AND		3497086	1					
ANR	3498166	Label	end :	3120:1:67182:67185	3497086	14	True				
ANR	3498167	Identifier	end		3497086	0					
ANR	3498168	ExpressionStatement	* src = p	3121:2:67189:67197	3497086	15	True				
ANR	3498169	AssignmentExpression	* src = p		3497086	0		=			
ANR	3498170	UnaryOperationExpression	* src		3497086	0					
ANR	3498171	UnaryOperator	*		3497086	0					
ANR	3498172	Identifier	src		3497086	1					
ANR	3498173	Identifier	p		3497086	1					
ANR	3498174	ReturnStatement	return tok -> type ;	3122:2:67201:67217	3497086	16	True				
ANR	3498175	PtrMemberAccess	tok -> type		3497086	0					
ANR	3498176	Identifier	tok		3497086	0					
ANR	3498177	Identifier	type		3497086	1					
ANR	3498178	ReturnType	static int		3497086	1					
ANR	3498179	Identifier	fetch_token_in_cc		3497086	2					
ANR	3498180	ParameterList	"OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env"		3497086	3					
ANR	3498181	Parameter	OnigToken * tok	2908:18:61989:62002	3497086	0	True				
ANR	3498182	ParameterType	OnigToken *		3497086	0					
ANR	3498183	Identifier	tok		3497086	1					
ANR	3498184	Parameter	UChar * * src	2908:34:62005:62015	3497086	1	True				
ANR	3498185	ParameterType	UChar * *		3497086	0					
ANR	3498186	Identifier	src		3497086	1					
ANR	3498187	Parameter	UChar * end	2908:47:62018:62027	3497086	2	True				
ANR	3498188	ParameterType	UChar *		3497086	0					
ANR	3498189	Identifier	end		3497086	1					
ANR	3498190	Parameter	ScanEnv * env	2908:59:62030:62041	3497086	3	True				
ANR	3498191	ParameterType	ScanEnv *		3497086	0					
ANR	3498192	Identifier	env		3497086	1					
ANR	3498193	CFGEntryNode	ENTRY		3497086		True				
ANR	3498194	CFGExitNode	EXIT		3497086		True				
ANR	3498195	Symbol	ONIG_SYN_OP_ESC_X_HEX2		3497086						
ANR	3498196	Symbol	ONIG_SYN_OP2_ESC_U_HEX4		3497086						
ANR	3498197	Symbol	TK_EOT		3497086						
ANR	3498198	Symbol	num		3497086						
ANR	3498199	Symbol	prev		3497086						
ANR	3498200	Symbol	str_exist_check_with_esc		3497086						
ANR	3498201	Symbol	* src		3497086						
ANR	3498202	Symbol	tok -> type		3497086						
ANR	3498203	Symbol	TK_CC_CLOSE		3497086						
ANR	3498204	Symbol	ONIGENC_CTYPE_SPACE		3497086						
ANR	3498205	Symbol	tok -> u . prop . not		3497086						
ANR	3498206	Symbol	IS_SYNTAX_BV		3497086						
ANR	3498207	Symbol	ONIGERR_TOO_LONG_WIDE_CHAR_VALUE		3497086						
ANR	3498208	Symbol	tok -> escaped		3497086						
ANR	3498209	Symbol	tok -> u . prop		3497086						
ANR	3498210	Symbol	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		3497086						
ANR	3498211	Symbol	ONIGENC_IS_CODE_XDIGIT		3497086						
ANR	3498212	Symbol	TK_CODE_POINT		3497086						
ANR	3498213	Symbol	TK_CC_RANGE		3497086						
ANR	3498214	Symbol	PPEEK		3497086						
ANR	3498215	Symbol	ONIG_SYN_OP_POSIX_BRACKET		3497086						
ANR	3498216	Symbol	* env		3497086						
ANR	3498217	Symbol	IS_SYNTAX_OP		3497086						
ANR	3498218	Symbol	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		3497086						
ANR	3498219	Symbol	TK_POSIX_BRACKET_OPEN		3497086						
ANR	3498220	Symbol	TK_CC_AND		3497086						
ANR	3498221	Symbol	env -> syntax		3497086						
ANR	3498222	Symbol	c2		3497086						
ANR	3498223	Symbol	TK_CHAR_TYPE		3497086						
ANR	3498224	Symbol	ONIG_SYN_OP2_ESC_H_XDIGIT		3497086						
ANR	3498225	Symbol	ONIG_SYN_OP_ESC_X_BRACE_HEX8		3497086						
ANR	3498226	Symbol	* tok		3497086						
ANR	3498227	Symbol	ONIGERR_END_PATTERN_AT_ESCAPE		3497086						
ANR	3498228	Symbol	tok -> u . c		3497086						
ANR	3498229	Symbol	send		3497086						
ANR	3498230	Symbol	TK_CC_CC_OPEN		3497086						
ANR	3498231	Symbol	PPEEK_IS		3497086						
ANR	3498232	Symbol	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		3497086						
ANR	3498233	Symbol	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		3497086						
ANR	3498234	Symbol	syn		3497086						
ANR	3498235	Symbol	env -> enc		3497086						
ANR	3498236	Symbol	PEND		3497086						
ANR	3498237	Symbol	IS_SYNTAX_OP2		3497086						
ANR	3498238	Symbol	tok		3497086						
ANR	3498239	Symbol	tok -> u . code		3497086						
ANR	3498240	Symbol	ONIG_SYN_OP2_CCLASS_SET_OP		3497086						
ANR	3498241	Symbol	end		3497086						
ANR	3498242	Symbol	enc		3497086						
ANR	3498243	Symbol	tok -> u		3497086						
ANR	3498244	Symbol	ONIGENC_CTYPE_XDIGIT		3497086						
ANR	3498245	Symbol	c		3497086						
ANR	3498246	Symbol	ONIGERR_TOO_BIG_NUMBER		3497086						
ANR	3498247	Symbol	src		3497086						
ANR	3498248	Symbol	tok -> backp		3497086						
ANR	3498249	Symbol	ONIGENC_CTYPE_DIGIT		3497086						
ANR	3498250	Symbol	env		3497086						
ANR	3498251	Symbol	MC_ESC		3497086						
ANR	3498252	Symbol	enclen		3497086						
ANR	3498253	Symbol	p		3497086						
ANR	3498254	Symbol	scan_unsigned_octal_number		3497086						
ANR	3498255	Symbol	TK_CHAR_PROPERTY		3497086						
ANR	3498256	Symbol	& p		3497086						
ANR	3498257	Symbol	fetch_escaped_value		3497086						
ANR	3498258	Symbol	ONIG_SYN_OP_ESC_OCTAL3		3497086						
ANR	3498259	Symbol	tok -> u . prop . ctype		3497086						
ANR	3498260	Symbol	ONIGENC_CTYPE_WORD		3497086						
ANR	3498261	Symbol	tok -> base		3497086						
ANR	3498262	Symbol	TK_RAW_BYTE		3497086						
ANR	3498263	Symbol	TK_CHAR		3497086						
ANR	3498264	Symbol	scan_unsigned_hexadecimal_number		3497086						
ANR	3498265	Function	fetch_token	3125:0:67222:82995							
ANR	3498266	FunctionDef	"fetch_token (OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env)"		3498265	0					
ANR	3498267	CompoundStatement		3127:0:67300:82995	3498265	0					
ANR	3498268	IdentifierDeclStatement	"int r , num ;"	3128:2:67304:67314	3498265	0	True				
ANR	3498269	IdentifierDecl	r		3498265	0					
ANR	3498270	IdentifierDeclType	int		3498265	0					
ANR	3498271	Identifier	r		3498265	1					
ANR	3498272	IdentifierDecl	num		3498265	1					
ANR	3498273	IdentifierDeclType	int		3498265	0					
ANR	3498274	Identifier	num		3498265	1					
ANR	3498275	IdentifierDeclStatement	OnigCodePoint c ;	3129:2:67318:67333	3498265	1	True				
ANR	3498276	IdentifierDecl	c		3498265	0					
ANR	3498277	IdentifierDeclType	OnigCodePoint		3498265	0					
ANR	3498278	Identifier	c		3498265	1					
ANR	3498279	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	3130:2:67337:67364	3498265	2	True				
ANR	3498280	IdentifierDecl	enc = env -> enc		3498265	0					
ANR	3498281	IdentifierDeclType	OnigEncoding		3498265	0					
ANR	3498282	Identifier	enc		3498265	1					
ANR	3498283	AssignmentExpression	enc = env -> enc		3498265	2		=			
ANR	3498284	Identifier	enc		3498265	0					
ANR	3498285	PtrMemberAccess	env -> enc		3498265	1					
ANR	3498286	Identifier	env		3498265	0					
ANR	3498287	Identifier	enc		3498265	1					
ANR	3498288	IdentifierDeclStatement	OnigSyntaxType * syn = env -> syntax ;	3131:2:67368:67401	3498265	3	True				
ANR	3498289	IdentifierDecl	* syn = env -> syntax		3498265	0					
ANR	3498290	IdentifierDeclType	OnigSyntaxType *		3498265	0					
ANR	3498291	Identifier	syn		3498265	1					
ANR	3498292	AssignmentExpression	* syn = env -> syntax		3498265	2		=			
ANR	3498293	Identifier	syn		3498265	0					
ANR	3498294	PtrMemberAccess	env -> syntax		3498265	1					
ANR	3498295	Identifier	env		3498265	0					
ANR	3498296	Identifier	syntax		3498265	1					
ANR	3498297	IdentifierDeclStatement	UChar * prev ;	3132:2:67405:67416	3498265	4	True				
ANR	3498298	IdentifierDecl	* prev		3498265	0					
ANR	3498299	IdentifierDeclType	UChar *		3498265	0					
ANR	3498300	Identifier	prev		3498265	1					
ANR	3498301	IdentifierDeclStatement	UChar * p = * src ;	3133:2:67420:67435	3498265	5	True				
ANR	3498302	IdentifierDecl	* p = * src		3498265	0					
ANR	3498303	IdentifierDeclType	UChar *		3498265	0					
ANR	3498304	Identifier	p		3498265	1					
ANR	3498305	AssignmentExpression	* p = * src		3498265	2		=			
ANR	3498306	Identifier	p		3498265	0					
ANR	3498307	UnaryOperationExpression	* src		3498265	1					
ANR	3498308	UnaryOperator	*		3498265	0					
ANR	3498309	Identifier	src		3498265	1					
ANR	3498310	ExpressionStatement	PFETCH_READY	3134:2:67439:67451	3498265	6	True				
ANR	3498311	Identifier	PFETCH_READY		3498265	0					
ANR	3498312	Label	start :	3136:1:67455:67460	3498265	7	True				
ANR	3498313	Identifier	start		3498265	0					
ANR	3498314	IfStatement	if ( PEND )		3498265	8					
ANR	3498315	Condition	PEND	3137:6:67468:67471	3498265	0	True				
ANR	3498316	Identifier	PEND		3498265	0					
ANR	3498317	CompoundStatement		11:12:173:173	3498265	1					
ANR	3498318	ExpressionStatement	tok -> type = TK_EOT	3138:4:67480:67498	3498265	0	True				
ANR	3498319	AssignmentExpression	tok -> type = TK_EOT		3498265	0		=			
ANR	3498320	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498321	Identifier	tok		3498265	0					
ANR	3498322	Identifier	type		3498265	1					
ANR	3498323	Identifier	TK_EOT		3498265	1					
ANR	3498324	ReturnStatement	return tok -> type ;	3139:4:67504:67520	3498265	1	True				
ANR	3498325	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498326	Identifier	tok		3498265	0					
ANR	3498327	Identifier	type		3498265	1					
ANR	3498328	ExpressionStatement	tok -> type = TK_STRING	3142:2:67529:67551	3498265	9	True				
ANR	3498329	AssignmentExpression	tok -> type = TK_STRING		3498265	0		=			
ANR	3498330	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498331	Identifier	tok		3498265	0					
ANR	3498332	Identifier	type		3498265	1					
ANR	3498333	Identifier	TK_STRING		3498265	1					
ANR	3498334	ExpressionStatement	tok -> base = 0	3143:2:67555:67569	3498265	10	True				
ANR	3498335	AssignmentExpression	tok -> base = 0		3498265	0		=			
ANR	3498336	PtrMemberAccess	tok -> base		3498265	0					
ANR	3498337	Identifier	tok		3498265	0					
ANR	3498338	Identifier	base		3498265	1					
ANR	3498339	PrimaryExpression	0		3498265	1					
ANR	3498340	ExpressionStatement	tok -> backp = p	3144:2:67573:67587	3498265	11	True				
ANR	3498341	AssignmentExpression	tok -> backp = p		3498265	0		=			
ANR	3498342	PtrMemberAccess	tok -> backp		3498265	0					
ANR	3498343	Identifier	tok		3498265	0					
ANR	3498344	Identifier	backp		3498265	1					
ANR	3498345	Identifier	p		3498265	1					
ANR	3498346	ExpressionStatement	PFETCH ( c )	3146:2:67592:67601	3498265	12	True				
ANR	3498347	CallExpression	PFETCH ( c )		3498265	0					
ANR	3498348	Callee	PFETCH		3498265	0					
ANR	3498349	Identifier	PFETCH		3498265	0					
ANR	3498350	ArgumentList	c		3498265	1					
ANR	3498351	Argument	c		3498265	0					
ANR	3498352	Identifier	c		3498265	0					
ANR	3498353	IfStatement	"if ( IS_MC_ESC_CODE ( c , syn ) )"		3498265	13					
ANR	3498354	Condition	"IS_MC_ESC_CODE ( c , syn )"	3147:6:67609:67630	3498265	0	True				
ANR	3498355	CallExpression	"IS_MC_ESC_CODE ( c , syn )"		3498265	0					
ANR	3498356	Callee	IS_MC_ESC_CODE		3498265	0					
ANR	3498357	Identifier	IS_MC_ESC_CODE		3498265	0					
ANR	3498358	ArgumentList	c		3498265	1					
ANR	3498359	Argument	c		3498265	0					
ANR	3498360	Identifier	c		3498265	0					
ANR	3498361	Argument	syn		3498265	1					
ANR	3498362	Identifier	syn		3498265	0					
ANR	3498363	CompoundStatement		21:30:332:332	3498265	1					
ANR	3498364	IfStatement	if ( PEND )		3498265	0					
ANR	3498365	Condition	PEND	3148:8:67643:67646	3498265	0	True				
ANR	3498366	Identifier	PEND		3498265	0					
ANR	3498367	ReturnStatement	return ONIGERR_END_PATTERN_AT_ESCAPE ;	3148:14:67649:67685	3498265	1	True				
ANR	3498368	Identifier	ONIGERR_END_PATTERN_AT_ESCAPE		3498265	0					
ANR	3498369	ExpressionStatement	tok -> backp = p	3150:4:67692:67706	3498265	1	True				
ANR	3498370	AssignmentExpression	tok -> backp = p		3498265	0		=			
ANR	3498371	PtrMemberAccess	tok -> backp		3498265	0					
ANR	3498372	Identifier	tok		3498265	0					
ANR	3498373	Identifier	backp		3498265	1					
ANR	3498374	Identifier	p		3498265	1					
ANR	3498375	ExpressionStatement	PFETCH ( c )	3151:4:67712:67721	3498265	2	True				
ANR	3498376	CallExpression	PFETCH ( c )		3498265	0					
ANR	3498377	Callee	PFETCH		3498265	0					
ANR	3498378	Identifier	PFETCH		3498265	0					
ANR	3498379	ArgumentList	c		3498265	1					
ANR	3498380	Argument	c		3498265	0					
ANR	3498381	Identifier	c		3498265	0					
ANR	3498382	ExpressionStatement	tok -> u . c = c	3153:4:67728:67740	3498265	3	True				
ANR	3498383	AssignmentExpression	tok -> u . c = c		3498265	0		=			
ANR	3498384	MemberAccess	tok -> u . c		3498265	0					
ANR	3498385	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498386	Identifier	tok		3498265	0					
ANR	3498387	Identifier	u		3498265	1					
ANR	3498388	Identifier	c		3498265	1					
ANR	3498389	Identifier	c		3498265	1					
ANR	3498390	ExpressionStatement	tok -> escaped = 1	3154:4:67746:67762	3498265	4	True				
ANR	3498391	AssignmentExpression	tok -> escaped = 1		3498265	0		=			
ANR	3498392	PtrMemberAccess	tok -> escaped		3498265	0					
ANR	3498393	Identifier	tok		3498265	0					
ANR	3498394	Identifier	escaped		3498265	1					
ANR	3498395	PrimaryExpression	1		3498265	1					
ANR	3498396	SwitchStatement	switch ( c )		3498265	5					
ANR	3498397	Condition	c	3155:12:67776:67776	3498265	0	True				
ANR	3498398	Identifier	c		3498265	0					
ANR	3498399	CompoundStatement		29:15:478:478	3498265	1					
ANR	3498400	Label	case '*' :	3156:4:67785:67793	3498265	0	True				
ANR	3498401	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF ) )"		3498265	1					
ANR	3498402	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF )"	3157:10:67805:67858	3498265	0	True				
ANR	3498403	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF )"		3498265	0					
ANR	3498404	UnaryOperator	!		3498265	0					
ANR	3498405	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF )"		3498265	1					
ANR	3498406	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498407	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498408	ArgumentList	syn		3498265	1					
ANR	3498409	Argument	syn		3498265	0					
ANR	3498410	Identifier	syn		3498265	0					
ANR	3498411	Argument	ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF		3498265	1					
ANR	3498412	Identifier	ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF		3498265	0					
ANR	3498413	BreakStatement	break ;	3157:66:67861:67866	3498265	1	True				
ANR	3498414	ExpressionStatement	tok -> type = TK_OP_REPEAT	3158:6:67874:67898	3498265	2	True				
ANR	3498415	AssignmentExpression	tok -> type = TK_OP_REPEAT		3498265	0		=			
ANR	3498416	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498417	Identifier	tok		3498265	0					
ANR	3498418	Identifier	type		3498265	1					
ANR	3498419	Identifier	TK_OP_REPEAT		3498265	1					
ANR	3498420	ExpressionStatement	tok -> u . repeat . lower = 0	3159:6:67906:67929	3498265	3	True				
ANR	3498421	AssignmentExpression	tok -> u . repeat . lower = 0		3498265	0		=			
ANR	3498422	MemberAccess	tok -> u . repeat . lower		3498265	0					
ANR	3498423	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3498424	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498425	Identifier	tok		3498265	0					
ANR	3498426	Identifier	u		3498265	1					
ANR	3498427	Identifier	repeat		3498265	1					
ANR	3498428	Identifier	lower		3498265	1					
ANR	3498429	PrimaryExpression	0		3498265	1					
ANR	3498430	ExpressionStatement	tok -> u . repeat . upper = REPEAT_INFINITE	3160:6:67937:67974	3498265	4	True				
ANR	3498431	AssignmentExpression	tok -> u . repeat . upper = REPEAT_INFINITE		3498265	0		=			
ANR	3498432	MemberAccess	tok -> u . repeat . upper		3498265	0					
ANR	3498433	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3498434	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498435	Identifier	tok		3498265	0					
ANR	3498436	Identifier	u		3498265	1					
ANR	3498437	Identifier	repeat		3498265	1					
ANR	3498438	Identifier	upper		3498265	1					
ANR	3498439	Identifier	REPEAT_INFINITE		3498265	1					
ANR	3498440	GotoStatement	goto greedy_check ;	3161:6:67982:67999	3498265	5	True				
ANR	3498441	Identifier	greedy_check		3498265	0					
ANR	3498442	BreakStatement	break ;	3162:6:68007:68012	3498265	6	True				
ANR	3498443	Label	case '+' :	3164:4:68019:68027	3498265	7	True				
ANR	3498444	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_PLUS_ONE_INF ) )"		3498265	8					
ANR	3498445	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_PLUS_ONE_INF )"	3165:10:68039:68087	3498265	0	True				
ANR	3498446	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_PLUS_ONE_INF )"		3498265	0					
ANR	3498447	UnaryOperator	!		3498265	0					
ANR	3498448	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_PLUS_ONE_INF )"		3498265	1					
ANR	3498449	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498450	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498451	ArgumentList	syn		3498265	1					
ANR	3498452	Argument	syn		3498265	0					
ANR	3498453	Identifier	syn		3498265	0					
ANR	3498454	Argument	ONIG_SYN_OP_ESC_PLUS_ONE_INF		3498265	1					
ANR	3498455	Identifier	ONIG_SYN_OP_ESC_PLUS_ONE_INF		3498265	0					
ANR	3498456	BreakStatement	break ;	3165:61:68090:68095	3498265	1	True				
ANR	3498457	ExpressionStatement	tok -> type = TK_OP_REPEAT	3166:6:68103:68127	3498265	9	True				
ANR	3498458	AssignmentExpression	tok -> type = TK_OP_REPEAT		3498265	0		=			
ANR	3498459	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498460	Identifier	tok		3498265	0					
ANR	3498461	Identifier	type		3498265	1					
ANR	3498462	Identifier	TK_OP_REPEAT		3498265	1					
ANR	3498463	ExpressionStatement	tok -> u . repeat . lower = 1	3167:6:68135:68158	3498265	10	True				
ANR	3498464	AssignmentExpression	tok -> u . repeat . lower = 1		3498265	0		=			
ANR	3498465	MemberAccess	tok -> u . repeat . lower		3498265	0					
ANR	3498466	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3498467	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498468	Identifier	tok		3498265	0					
ANR	3498469	Identifier	u		3498265	1					
ANR	3498470	Identifier	repeat		3498265	1					
ANR	3498471	Identifier	lower		3498265	1					
ANR	3498472	PrimaryExpression	1		3498265	1					
ANR	3498473	ExpressionStatement	tok -> u . repeat . upper = REPEAT_INFINITE	3168:6:68166:68203	3498265	11	True				
ANR	3498474	AssignmentExpression	tok -> u . repeat . upper = REPEAT_INFINITE		3498265	0		=			
ANR	3498475	MemberAccess	tok -> u . repeat . upper		3498265	0					
ANR	3498476	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3498477	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498478	Identifier	tok		3498265	0					
ANR	3498479	Identifier	u		3498265	1					
ANR	3498480	Identifier	repeat		3498265	1					
ANR	3498481	Identifier	upper		3498265	1					
ANR	3498482	Identifier	REPEAT_INFINITE		3498265	1					
ANR	3498483	GotoStatement	goto greedy_check ;	3169:6:68211:68228	3498265	12	True				
ANR	3498484	Identifier	greedy_check		3498265	0					
ANR	3498485	BreakStatement	break ;	3170:6:68236:68241	3498265	13	True				
ANR	3498486	Label	case '?' :	3172:4:68248:68256	3498265	14	True				
ANR	3498487	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_QMARK_ZERO_ONE ) )"		3498265	15					
ANR	3498488	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_QMARK_ZERO_ONE )"	3173:10:68268:68318	3498265	0	True				
ANR	3498489	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_QMARK_ZERO_ONE )"		3498265	0					
ANR	3498490	UnaryOperator	!		3498265	0					
ANR	3498491	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_QMARK_ZERO_ONE )"		3498265	1					
ANR	3498492	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498493	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498494	ArgumentList	syn		3498265	1					
ANR	3498495	Argument	syn		3498265	0					
ANR	3498496	Identifier	syn		3498265	0					
ANR	3498497	Argument	ONIG_SYN_OP_ESC_QMARK_ZERO_ONE		3498265	1					
ANR	3498498	Identifier	ONIG_SYN_OP_ESC_QMARK_ZERO_ONE		3498265	0					
ANR	3498499	BreakStatement	break ;	3173:63:68321:68326	3498265	1	True				
ANR	3498500	ExpressionStatement	tok -> type = TK_OP_REPEAT	3174:6:68334:68358	3498265	16	True				
ANR	3498501	AssignmentExpression	tok -> type = TK_OP_REPEAT		3498265	0		=			
ANR	3498502	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498503	Identifier	tok		3498265	0					
ANR	3498504	Identifier	type		3498265	1					
ANR	3498505	Identifier	TK_OP_REPEAT		3498265	1					
ANR	3498506	ExpressionStatement	tok -> u . repeat . lower = 0	3175:6:68366:68389	3498265	17	True				
ANR	3498507	AssignmentExpression	tok -> u . repeat . lower = 0		3498265	0		=			
ANR	3498508	MemberAccess	tok -> u . repeat . lower		3498265	0					
ANR	3498509	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3498510	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498511	Identifier	tok		3498265	0					
ANR	3498512	Identifier	u		3498265	1					
ANR	3498513	Identifier	repeat		3498265	1					
ANR	3498514	Identifier	lower		3498265	1					
ANR	3498515	PrimaryExpression	0		3498265	1					
ANR	3498516	ExpressionStatement	tok -> u . repeat . upper = 1	3176:6:68397:68420	3498265	18	True				
ANR	3498517	AssignmentExpression	tok -> u . repeat . upper = 1		3498265	0		=			
ANR	3498518	MemberAccess	tok -> u . repeat . upper		3498265	0					
ANR	3498519	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3498520	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498521	Identifier	tok		3498265	0					
ANR	3498522	Identifier	u		3498265	1					
ANR	3498523	Identifier	repeat		3498265	1					
ANR	3498524	Identifier	upper		3498265	1					
ANR	3498525	PrimaryExpression	1		3498265	1					
ANR	3498526	Label	greedy_check :	3177:4:68426:68438	3498265	19	True				
ANR	3498527	Identifier	greedy_check		3498265	0					
ANR	3498528	IfStatement	"if ( ! PEND && PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY ) )"		3498265	20					
ANR	3498529	Condition	"! PEND && PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY )"	3178:10:68450:68525	3498265	0	True				
ANR	3498530	AndExpression	"! PEND && PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY )"		3498265	0		&&			
ANR	3498531	UnaryOperationExpression	! PEND		3498265	0					
ANR	3498532	UnaryOperator	!		3498265	0					
ANR	3498533	Identifier	PEND		3498265	1					
ANR	3498534	AndExpression	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY )"		3498265	1		&&			
ANR	3498535	CallExpression	PPEEK_IS ( '?' )		3498265	0					
ANR	3498536	Callee	PPEEK_IS		3498265	0					
ANR	3498537	Identifier	PPEEK_IS		3498265	0					
ANR	3498538	ArgumentList	'?'		3498265	1					
ANR	3498539	Argument	'?'		3498265	0					
ANR	3498540	PrimaryExpression	'?'		3498265	0					
ANR	3498541	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY )"		3498265	1					
ANR	3498542	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498543	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498544	ArgumentList	syn		3498265	1					
ANR	3498545	Argument	syn		3498265	0					
ANR	3498546	Identifier	syn		3498265	0					
ANR	3498547	Argument	ONIG_SYN_OP_QMARK_NON_GREEDY		3498265	1					
ANR	3498548	Identifier	ONIG_SYN_OP_QMARK_NON_GREEDY		3498265	0					
ANR	3498549	CompoundStatement		53:52:1227:1227	3498265	1					
ANR	3498550	ExpressionStatement	PFETCH ( c )	3180:1:68531:68540	3498265	0	True				
ANR	3498551	CallExpression	PFETCH ( c )		3498265	0					
ANR	3498552	Callee	PFETCH		3498265	0					
ANR	3498553	Identifier	PFETCH		3498265	0					
ANR	3498554	ArgumentList	c		3498265	1					
ANR	3498555	Argument	c		3498265	0					
ANR	3498556	Identifier	c		3498265	0					
ANR	3498557	ExpressionStatement	tok -> u . repeat . greedy = 0	3181:1:68543:68571	3498265	1	True				
ANR	3498558	AssignmentExpression	tok -> u . repeat . greedy = 0		3498265	0		=			
ANR	3498559	MemberAccess	tok -> u . repeat . greedy		3498265	0					
ANR	3498560	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3498561	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498562	Identifier	tok		3498265	0					
ANR	3498563	Identifier	u		3498265	1					
ANR	3498564	Identifier	repeat		3498265	1					
ANR	3498565	Identifier	greedy		3498265	1					
ANR	3498566	PrimaryExpression	0		3498265	1					
ANR	3498567	ExpressionStatement	tok -> u . repeat . possessive = 0	3182:1:68574:68602	3498265	2	True				
ANR	3498568	AssignmentExpression	tok -> u . repeat . possessive = 0		3498265	0		=			
ANR	3498569	MemberAccess	tok -> u . repeat . possessive		3498265	0					
ANR	3498570	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3498571	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498572	Identifier	tok		3498265	0					
ANR	3498573	Identifier	u		3498265	1					
ANR	3498574	Identifier	repeat		3498265	1					
ANR	3498575	Identifier	possessive		3498265	1					
ANR	3498576	PrimaryExpression	0		3498265	1					
ANR	3498577	ElseStatement	else		3498265	0					
ANR	3498578	CompoundStatement		58:11:1322:1322	3498265	0					
ANR	3498579	Label	possessive_check :	3185:6:68631:68647	3498265	0	True				
ANR	3498580	Identifier	possessive_check		3498265	0					
ANR	3498581	IfStatement	"if ( ! PEND && PPEEK_IS ( '+' ) && ( ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL ) ) )"		3498265	1					
ANR	3498582	Condition	"! PEND && PPEEK_IS ( '+' ) && ( ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL ) )"	3186:5:68654:68883	3498265	0	True				
ANR	3498583	AndExpression	"! PEND && PPEEK_IS ( '+' ) && ( ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL ) )"		3498265	0		&&			
ANR	3498584	UnaryOperationExpression	! PEND		3498265	0					
ANR	3498585	UnaryOperator	!		3498265	0					
ANR	3498586	Identifier	PEND		3498265	1					
ANR	3498587	AndExpression	"PPEEK_IS ( '+' ) && ( ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL ) )"		3498265	1		&&			
ANR	3498588	CallExpression	PPEEK_IS ( '+' )		3498265	0					
ANR	3498589	Callee	PPEEK_IS		3498265	0					
ANR	3498590	Identifier	PPEEK_IS		3498265	0					
ANR	3498591	ArgumentList	'+'		3498265	1					
ANR	3498592	Argument	'+'		3498265	0					
ANR	3498593	PrimaryExpression	'+'		3498265	0					
ANR	3498594	OrExpression	"( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL )"		3498265	1		||			
ANR	3498595	AndExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL"		3498265	0		&&			
ANR	3498596	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT )"		3498265	0					
ANR	3498597	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3498598	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3498599	ArgumentList	syn		3498265	1					
ANR	3498600	Argument	syn		3498265	0					
ANR	3498601	Identifier	syn		3498265	0					
ANR	3498602	Argument	ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT		3498265	1					
ANR	3498603	Identifier	ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT		3498265	0					
ANR	3498604	EqualityExpression	tok -> type != TK_INTERVAL		3498265	1		!=			
ANR	3498605	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498606	Identifier	tok		3498265	0					
ANR	3498607	Identifier	type		3498265	1					
ANR	3498608	Identifier	TK_INTERVAL		3498265	1					
ANR	3498609	AndExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL"		3498265	1		&&			
ANR	3498610	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL )"		3498265	0					
ANR	3498611	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3498612	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3498613	ArgumentList	syn		3498265	1					
ANR	3498614	Argument	syn		3498265	0					
ANR	3498615	Identifier	syn		3498265	0					
ANR	3498616	Argument	ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL		3498265	1					
ANR	3498617	Identifier	ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL		3498265	0					
ANR	3498618	EqualityExpression	tok -> type == TK_INTERVAL		3498265	1		==			
ANR	3498619	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498620	Identifier	tok		3498265	0					
ANR	3498621	Identifier	type		3498265	1					
ANR	3498622	Identifier	TK_INTERVAL		3498265	1					
ANR	3498623	CompoundStatement		64:35:1585:1585	3498265	1					
ANR	3498624	ExpressionStatement	PFETCH ( c )	3191:3:68891:68900	3498265	0	True				
ANR	3498625	CallExpression	PFETCH ( c )		3498265	0					
ANR	3498626	Callee	PFETCH		3498265	0					
ANR	3498627	Identifier	PFETCH		3498265	0					
ANR	3498628	ArgumentList	c		3498265	1					
ANR	3498629	Argument	c		3498265	0					
ANR	3498630	Identifier	c		3498265	0					
ANR	3498631	ExpressionStatement	tok -> u . repeat . greedy = 1	3192:3:68905:68933	3498265	1	True				
ANR	3498632	AssignmentExpression	tok -> u . repeat . greedy = 1		3498265	0		=			
ANR	3498633	MemberAccess	tok -> u . repeat . greedy		3498265	0					
ANR	3498634	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3498635	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498636	Identifier	tok		3498265	0					
ANR	3498637	Identifier	u		3498265	1					
ANR	3498638	Identifier	repeat		3498265	1					
ANR	3498639	Identifier	greedy		3498265	1					
ANR	3498640	PrimaryExpression	1		3498265	1					
ANR	3498641	ExpressionStatement	tok -> u . repeat . possessive = 1	3193:3:68938:68966	3498265	2	True				
ANR	3498642	AssignmentExpression	tok -> u . repeat . possessive = 1		3498265	0		=			
ANR	3498643	MemberAccess	tok -> u . repeat . possessive		3498265	0					
ANR	3498644	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3498645	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498646	Identifier	tok		3498265	0					
ANR	3498647	Identifier	u		3498265	1					
ANR	3498648	Identifier	repeat		3498265	1					
ANR	3498649	Identifier	possessive		3498265	1					
ANR	3498650	PrimaryExpression	1		3498265	1					
ANR	3498651	ElseStatement	else		3498265	0					
ANR	3498652	CompoundStatement		69:6:1676:1676	3498265	0					
ANR	3498653	ExpressionStatement	tok -> u . repeat . greedy = 1	3196:3:68982:69010	3498265	0	True				
ANR	3498654	AssignmentExpression	tok -> u . repeat . greedy = 1		3498265	0		=			
ANR	3498655	MemberAccess	tok -> u . repeat . greedy		3498265	0					
ANR	3498656	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3498657	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498658	Identifier	tok		3498265	0					
ANR	3498659	Identifier	u		3498265	1					
ANR	3498660	Identifier	repeat		3498265	1					
ANR	3498661	Identifier	greedy		3498265	1					
ANR	3498662	PrimaryExpression	1		3498265	1					
ANR	3498663	ExpressionStatement	tok -> u . repeat . possessive = 0	3197:3:69015:69043	3498265	1	True				
ANR	3498664	AssignmentExpression	tok -> u . repeat . possessive = 0		3498265	0		=			
ANR	3498665	MemberAccess	tok -> u . repeat . possessive		3498265	0					
ANR	3498666	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3498667	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498668	Identifier	tok		3498265	0					
ANR	3498669	Identifier	u		3498265	1					
ANR	3498670	Identifier	repeat		3498265	1					
ANR	3498671	Identifier	possessive		3498265	1					
ANR	3498672	PrimaryExpression	0		3498265	1					
ANR	3498673	BreakStatement	break ;	3200:6:69062:69067	3498265	21	True				
ANR	3498674	Label	case '{' :	3202:4:69074:69082	3498265	22	True				
ANR	3498675	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_BRACE_INTERVAL ) )"		3498265	23					
ANR	3498676	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"	3203:10:69094:69144	3498265	0	True				
ANR	3498677	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"		3498265	0					
ANR	3498678	UnaryOperator	!		3498265	0					
ANR	3498679	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"		3498265	1					
ANR	3498680	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498681	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498682	ArgumentList	syn		3498265	1					
ANR	3498683	Argument	syn		3498265	0					
ANR	3498684	Identifier	syn		3498265	0					
ANR	3498685	Argument	ONIG_SYN_OP_ESC_BRACE_INTERVAL		3498265	1					
ANR	3498686	Identifier	ONIG_SYN_OP_ESC_BRACE_INTERVAL		3498265	0					
ANR	3498687	BreakStatement	break ;	3203:63:69147:69152	3498265	1	True				
ANR	3498688	ExpressionStatement	"r = fetch_range_quantifier ( & p , end , tok , env )"	3204:6:69160:69205	3498265	24	True				
ANR	3498689	AssignmentExpression	"r = fetch_range_quantifier ( & p , end , tok , env )"		3498265	0		=			
ANR	3498690	Identifier	r		3498265	0					
ANR	3498691	CallExpression	"fetch_range_quantifier ( & p , end , tok , env )"		3498265	1					
ANR	3498692	Callee	fetch_range_quantifier		3498265	0					
ANR	3498693	Identifier	fetch_range_quantifier		3498265	0					
ANR	3498694	ArgumentList	& p		3498265	1					
ANR	3498695	Argument	& p		3498265	0					
ANR	3498696	UnaryOperationExpression	& p		3498265	0					
ANR	3498697	UnaryOperator	&		3498265	0					
ANR	3498698	Identifier	p		3498265	1					
ANR	3498699	Argument	end		3498265	1					
ANR	3498700	Identifier	end		3498265	0					
ANR	3498701	Argument	tok		3498265	2					
ANR	3498702	Identifier	tok		3498265	0					
ANR	3498703	Argument	env		3498265	3					
ANR	3498704	Identifier	env		3498265	0					
ANR	3498705	IfStatement	if ( r < 0 )		3498265	25					
ANR	3498706	Condition	r < 0	3205:10:69217:69221	3498265	0	True				
ANR	3498707	RelationalExpression	r < 0		3498265	0		<			
ANR	3498708	Identifier	r		3498265	0					
ANR	3498709	PrimaryExpression	0		3498265	1					
ANR	3498710	ReturnStatement	return r ;	3205:17:69224:69232	3498265	1	True				
ANR	3498711	Identifier	r		3498265	0					
ANR	3498712	IfStatement	if ( r == 0 )		3498265	26					
ANR	3498713	Condition	r == 0	3206:10:69257:69262	3498265	0	True				
ANR	3498714	EqualityExpression	r == 0		3498265	0		==			
ANR	3498715	Identifier	r		3498265	0					
ANR	3498716	PrimaryExpression	0		3498265	1					
ANR	3498717	GotoStatement	goto greedy_check ;	3206:18:69265:69282	3498265	1	True				
ANR	3498718	Identifier	greedy_check		3498265	0					
ANR	3498719	ElseStatement	else		3498265	0					
ANR	3498720	IfStatement	if ( r == 2 )		3498265	0					
ANR	3498721	Condition	r == 2	3207:15:69299:69304	3498265	0	True				
ANR	3498722	EqualityExpression	r == 2		3498265	0		==			
ANR	3498723	Identifier	r		3498265	0					
ANR	3498724	PrimaryExpression	2		3498265	1					
ANR	3498725	CompoundStatement		81:23:2006:2006	3498265	1					
ANR	3498726	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY ) )"		3498265	0					
ANR	3498727	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY )"	3208:5:69324:69380	3498265	0	True				
ANR	3498728	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY )"		3498265	0					
ANR	3498729	Callee	IS_SYNTAX_BV		3498265	0					
ANR	3498730	Identifier	IS_SYNTAX_BV		3498265	0					
ANR	3498731	ArgumentList	syn		3498265	1					
ANR	3498732	Argument	syn		3498265	0					
ANR	3498733	Identifier	syn		3498265	0					
ANR	3498734	Argument	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		3498265	1					
ANR	3498735	Identifier	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		3498265	0					
ANR	3498736	GotoStatement	goto possessive_check ;	3209:3:69386:69407	3498265	1	True				
ANR	3498737	Identifier	possessive_check		3498265	0					
ANR	3498738	GotoStatement	goto greedy_check ;	3211:1:69411:69428	3498265	1	True				
ANR	3498739	Identifier	greedy_check		3498265	0					
ANR	3498740	BreakStatement	break ;	3214:6:69477:69482	3498265	27	True				
ANR	3498741	Label	case '|' :	3216:4:69489:69497	3498265	28	True				
ANR	3498742	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_VBAR_ALT ) )"		3498265	29					
ANR	3498743	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_VBAR_ALT )"	3217:10:69509:69553	3498265	0	True				
ANR	3498744	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_VBAR_ALT )"		3498265	0					
ANR	3498745	UnaryOperator	!		3498265	0					
ANR	3498746	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_VBAR_ALT )"		3498265	1					
ANR	3498747	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498748	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498749	ArgumentList	syn		3498265	1					
ANR	3498750	Argument	syn		3498265	0					
ANR	3498751	Identifier	syn		3498265	0					
ANR	3498752	Argument	ONIG_SYN_OP_ESC_VBAR_ALT		3498265	1					
ANR	3498753	Identifier	ONIG_SYN_OP_ESC_VBAR_ALT		3498265	0					
ANR	3498754	BreakStatement	break ;	3217:57:69556:69561	3498265	1	True				
ANR	3498755	ExpressionStatement	tok -> type = TK_ALT	3218:6:69569:69587	3498265	30	True				
ANR	3498756	AssignmentExpression	tok -> type = TK_ALT		3498265	0		=			
ANR	3498757	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498758	Identifier	tok		3498265	0					
ANR	3498759	Identifier	type		3498265	1					
ANR	3498760	Identifier	TK_ALT		3498265	1					
ANR	3498761	BreakStatement	break ;	3219:6:69595:69600	3498265	31	True				
ANR	3498762	Label	case '(' :	3221:4:69607:69615	3498265	32	True				
ANR	3498763	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP ) )"		3498265	33					
ANR	3498764	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"	3222:10:69627:69676	3498265	0	True				
ANR	3498765	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"		3498265	0					
ANR	3498766	UnaryOperator	!		3498265	0					
ANR	3498767	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"		3498265	1					
ANR	3498768	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498769	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498770	ArgumentList	syn		3498265	1					
ANR	3498771	Argument	syn		3498265	0					
ANR	3498772	Identifier	syn		3498265	0					
ANR	3498773	Argument	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		3498265	1					
ANR	3498774	Identifier	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		3498265	0					
ANR	3498775	BreakStatement	break ;	3222:62:69679:69684	3498265	1	True				
ANR	3498776	ExpressionStatement	tok -> type = TK_SUBEXP_OPEN	3223:6:69692:69718	3498265	34	True				
ANR	3498777	AssignmentExpression	tok -> type = TK_SUBEXP_OPEN		3498265	0		=			
ANR	3498778	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498779	Identifier	tok		3498265	0					
ANR	3498780	Identifier	type		3498265	1					
ANR	3498781	Identifier	TK_SUBEXP_OPEN		3498265	1					
ANR	3498782	BreakStatement	break ;	3224:6:69726:69731	3498265	35	True				
ANR	3498783	Label	case ')' :	3226:4:69738:69746	3498265	36	True				
ANR	3498784	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP ) )"		3498265	37					
ANR	3498785	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"	3227:10:69758:69807	3498265	0	True				
ANR	3498786	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"		3498265	0					
ANR	3498787	UnaryOperator	!		3498265	0					
ANR	3498788	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"		3498265	1					
ANR	3498789	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498790	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498791	ArgumentList	syn		3498265	1					
ANR	3498792	Argument	syn		3498265	0					
ANR	3498793	Identifier	syn		3498265	0					
ANR	3498794	Argument	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		3498265	1					
ANR	3498795	Identifier	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		3498265	0					
ANR	3498796	BreakStatement	break ;	3227:62:69810:69815	3498265	1	True				
ANR	3498797	ExpressionStatement	tok -> type = TK_SUBEXP_CLOSE	3228:6:69823:69850	3498265	38	True				
ANR	3498798	AssignmentExpression	tok -> type = TK_SUBEXP_CLOSE		3498265	0		=			
ANR	3498799	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498800	Identifier	tok		3498265	0					
ANR	3498801	Identifier	type		3498265	1					
ANR	3498802	Identifier	TK_SUBEXP_CLOSE		3498265	1					
ANR	3498803	BreakStatement	break ;	3229:6:69858:69863	3498265	39	True				
ANR	3498804	Label	case 'w' :	3231:4:69870:69878	3498265	40	True				
ANR	3498805	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD ) )"		3498265	41					
ANR	3498806	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"	3232:10:69890:69932	3498265	0	True				
ANR	3498807	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"		3498265	0					
ANR	3498808	UnaryOperator	!		3498265	0					
ANR	3498809	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"		3498265	1					
ANR	3498810	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498811	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498812	ArgumentList	syn		3498265	1					
ANR	3498813	Argument	syn		3498265	0					
ANR	3498814	Identifier	syn		3498265	0					
ANR	3498815	Argument	ONIG_SYN_OP_ESC_W_WORD		3498265	1					
ANR	3498816	Identifier	ONIG_SYN_OP_ESC_W_WORD		3498265	0					
ANR	3498817	BreakStatement	break ;	3232:55:69935:69940	3498265	1	True				
ANR	3498818	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3233:6:69948:69972	3498265	42	True				
ANR	3498819	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3498265	0		=			
ANR	3498820	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498821	Identifier	tok		3498265	0					
ANR	3498822	Identifier	type		3498265	1					
ANR	3498823	Identifier	TK_CHAR_TYPE		3498265	1					
ANR	3498824	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD	3234:6:69980:70018	3498265	43	True				
ANR	3498825	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD		3498265	0		=			
ANR	3498826	MemberAccess	tok -> u . prop . ctype		3498265	0					
ANR	3498827	MemberAccess	tok -> u . prop		3498265	0					
ANR	3498828	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498829	Identifier	tok		3498265	0					
ANR	3498830	Identifier	u		3498265	1					
ANR	3498831	Identifier	prop		3498265	1					
ANR	3498832	Identifier	ctype		3498265	1					
ANR	3498833	Identifier	ONIGENC_CTYPE_WORD		3498265	1					
ANR	3498834	ExpressionStatement	tok -> u . prop . not = 0	3235:6:70026:70047	3498265	44	True				
ANR	3498835	AssignmentExpression	tok -> u . prop . not = 0		3498265	0		=			
ANR	3498836	MemberAccess	tok -> u . prop . not		3498265	0					
ANR	3498837	MemberAccess	tok -> u . prop		3498265	0					
ANR	3498838	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498839	Identifier	tok		3498265	0					
ANR	3498840	Identifier	u		3498265	1					
ANR	3498841	Identifier	prop		3498265	1					
ANR	3498842	Identifier	not		3498265	1					
ANR	3498843	PrimaryExpression	0		3498265	1					
ANR	3498844	BreakStatement	break ;	3236:6:70055:70060	3498265	45	True				
ANR	3498845	Label	case 'W' :	3238:4:70067:70075	3498265	46	True				
ANR	3498846	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD ) )"		3498265	47					
ANR	3498847	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"	3239:10:70087:70129	3498265	0	True				
ANR	3498848	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"		3498265	0					
ANR	3498849	UnaryOperator	!		3498265	0					
ANR	3498850	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"		3498265	1					
ANR	3498851	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498852	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498853	ArgumentList	syn		3498265	1					
ANR	3498854	Argument	syn		3498265	0					
ANR	3498855	Identifier	syn		3498265	0					
ANR	3498856	Argument	ONIG_SYN_OP_ESC_W_WORD		3498265	1					
ANR	3498857	Identifier	ONIG_SYN_OP_ESC_W_WORD		3498265	0					
ANR	3498858	BreakStatement	break ;	3239:55:70132:70137	3498265	1	True				
ANR	3498859	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3240:6:70145:70169	3498265	48	True				
ANR	3498860	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3498265	0		=			
ANR	3498861	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498862	Identifier	tok		3498265	0					
ANR	3498863	Identifier	type		3498265	1					
ANR	3498864	Identifier	TK_CHAR_TYPE		3498265	1					
ANR	3498865	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD	3241:6:70177:70215	3498265	49	True				
ANR	3498866	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD		3498265	0		=			
ANR	3498867	MemberAccess	tok -> u . prop . ctype		3498265	0					
ANR	3498868	MemberAccess	tok -> u . prop		3498265	0					
ANR	3498869	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498870	Identifier	tok		3498265	0					
ANR	3498871	Identifier	u		3498265	1					
ANR	3498872	Identifier	prop		3498265	1					
ANR	3498873	Identifier	ctype		3498265	1					
ANR	3498874	Identifier	ONIGENC_CTYPE_WORD		3498265	1					
ANR	3498875	ExpressionStatement	tok -> u . prop . not = 1	3242:6:70223:70244	3498265	50	True				
ANR	3498876	AssignmentExpression	tok -> u . prop . not = 1		3498265	0		=			
ANR	3498877	MemberAccess	tok -> u . prop . not		3498265	0					
ANR	3498878	MemberAccess	tok -> u . prop		3498265	0					
ANR	3498879	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498880	Identifier	tok		3498265	0					
ANR	3498881	Identifier	u		3498265	1					
ANR	3498882	Identifier	prop		3498265	1					
ANR	3498883	Identifier	not		3498265	1					
ANR	3498884	PrimaryExpression	1		3498265	1					
ANR	3498885	BreakStatement	break ;	3243:6:70252:70257	3498265	51	True				
ANR	3498886	Label	case 'b' :	3245:4:70264:70272	3498265	52	True				
ANR	3498887	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND ) )"		3498265	53					
ANR	3498888	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"	3246:10:70284:70332	3498265	0	True				
ANR	3498889	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"		3498265	0					
ANR	3498890	UnaryOperator	!		3498265	0					
ANR	3498891	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"		3498265	1					
ANR	3498892	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498893	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498894	ArgumentList	syn		3498265	1					
ANR	3498895	Argument	syn		3498265	0					
ANR	3498896	Identifier	syn		3498265	0					
ANR	3498897	Argument	ONIG_SYN_OP_ESC_B_WORD_BOUND		3498265	1					
ANR	3498898	Identifier	ONIG_SYN_OP_ESC_B_WORD_BOUND		3498265	0					
ANR	3498899	BreakStatement	break ;	3246:61:70335:70340	3498265	1	True				
ANR	3498900	ExpressionStatement	tok -> type = TK_ANCHOR	3247:6:70348:70369	3498265	54	True				
ANR	3498901	AssignmentExpression	tok -> type = TK_ANCHOR		3498265	0		=			
ANR	3498902	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498903	Identifier	tok		3498265	0					
ANR	3498904	Identifier	type		3498265	1					
ANR	3498905	Identifier	TK_ANCHOR		3498265	1					
ANR	3498906	ExpressionStatement	tok -> u . anchor = ANCHOR_WORD_BOUND	3248:6:70377:70410	3498265	55	True				
ANR	3498907	AssignmentExpression	tok -> u . anchor = ANCHOR_WORD_BOUND		3498265	0		=			
ANR	3498908	MemberAccess	tok -> u . anchor		3498265	0					
ANR	3498909	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498910	Identifier	tok		3498265	0					
ANR	3498911	Identifier	u		3498265	1					
ANR	3498912	Identifier	anchor		3498265	1					
ANR	3498913	Identifier	ANCHOR_WORD_BOUND		3498265	1					
ANR	3498914	BreakStatement	break ;	3249:6:70418:70423	3498265	56	True				
ANR	3498915	Label	case 'B' :	3251:4:70430:70438	3498265	57	True				
ANR	3498916	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND ) )"		3498265	58					
ANR	3498917	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"	3252:10:70450:70498	3498265	0	True				
ANR	3498918	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"		3498265	0					
ANR	3498919	UnaryOperator	!		3498265	0					
ANR	3498920	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"		3498265	1					
ANR	3498921	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498922	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498923	ArgumentList	syn		3498265	1					
ANR	3498924	Argument	syn		3498265	0					
ANR	3498925	Identifier	syn		3498265	0					
ANR	3498926	Argument	ONIG_SYN_OP_ESC_B_WORD_BOUND		3498265	1					
ANR	3498927	Identifier	ONIG_SYN_OP_ESC_B_WORD_BOUND		3498265	0					
ANR	3498928	BreakStatement	break ;	3252:61:70501:70506	3498265	1	True				
ANR	3498929	ExpressionStatement	tok -> type = TK_ANCHOR	3253:6:70514:70535	3498265	59	True				
ANR	3498930	AssignmentExpression	tok -> type = TK_ANCHOR		3498265	0		=			
ANR	3498931	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498932	Identifier	tok		3498265	0					
ANR	3498933	Identifier	type		3498265	1					
ANR	3498934	Identifier	TK_ANCHOR		3498265	1					
ANR	3498935	ExpressionStatement	tok -> u . anchor = ANCHOR_NOT_WORD_BOUND	3254:6:70543:70580	3498265	60	True				
ANR	3498936	AssignmentExpression	tok -> u . anchor = ANCHOR_NOT_WORD_BOUND		3498265	0		=			
ANR	3498937	MemberAccess	tok -> u . anchor		3498265	0					
ANR	3498938	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498939	Identifier	tok		3498265	0					
ANR	3498940	Identifier	u		3498265	1					
ANR	3498941	Identifier	anchor		3498265	1					
ANR	3498942	Identifier	ANCHOR_NOT_WORD_BOUND		3498265	1					
ANR	3498943	BreakStatement	break ;	3255:6:70588:70593	3498265	61	True				
ANR	3498944	Label	case '<' :	3258:4:70626:70634	3498265	62	True				
ANR	3498945	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END ) )"		3498265	63					
ANR	3498946	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"	3259:10:70646:70701	3498265	0	True				
ANR	3498947	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"		3498265	0					
ANR	3498948	UnaryOperator	!		3498265	0					
ANR	3498949	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"		3498265	1					
ANR	3498950	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498951	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498952	ArgumentList	syn		3498265	1					
ANR	3498953	Argument	syn		3498265	0					
ANR	3498954	Identifier	syn		3498265	0					
ANR	3498955	Argument	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		3498265	1					
ANR	3498956	Identifier	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		3498265	0					
ANR	3498957	BreakStatement	break ;	3259:68:70704:70709	3498265	1	True				
ANR	3498958	ExpressionStatement	tok -> type = TK_ANCHOR	3260:6:70717:70738	3498265	64	True				
ANR	3498959	AssignmentExpression	tok -> type = TK_ANCHOR		3498265	0		=			
ANR	3498960	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498961	Identifier	tok		3498265	0					
ANR	3498962	Identifier	type		3498265	1					
ANR	3498963	Identifier	TK_ANCHOR		3498265	1					
ANR	3498964	ExpressionStatement	tok -> u . anchor = ANCHOR_WORD_BEGIN	3261:6:70746:70779	3498265	65	True				
ANR	3498965	AssignmentExpression	tok -> u . anchor = ANCHOR_WORD_BEGIN		3498265	0		=			
ANR	3498966	MemberAccess	tok -> u . anchor		3498265	0					
ANR	3498967	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498968	Identifier	tok		3498265	0					
ANR	3498969	Identifier	u		3498265	1					
ANR	3498970	Identifier	anchor		3498265	1					
ANR	3498971	Identifier	ANCHOR_WORD_BEGIN		3498265	1					
ANR	3498972	BreakStatement	break ;	3262:6:70787:70792	3498265	66	True				
ANR	3498973	Label	case '>' :	3264:4:70799:70807	3498265	67	True				
ANR	3498974	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END ) )"		3498265	68					
ANR	3498975	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"	3265:10:70819:70874	3498265	0	True				
ANR	3498976	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"		3498265	0					
ANR	3498977	UnaryOperator	!		3498265	0					
ANR	3498978	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"		3498265	1					
ANR	3498979	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3498980	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3498981	ArgumentList	syn		3498265	1					
ANR	3498982	Argument	syn		3498265	0					
ANR	3498983	Identifier	syn		3498265	0					
ANR	3498984	Argument	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		3498265	1					
ANR	3498985	Identifier	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		3498265	0					
ANR	3498986	BreakStatement	break ;	3265:68:70877:70882	3498265	1	True				
ANR	3498987	ExpressionStatement	tok -> type = TK_ANCHOR	3266:6:70890:70911	3498265	69	True				
ANR	3498988	AssignmentExpression	tok -> type = TK_ANCHOR		3498265	0		=			
ANR	3498989	PtrMemberAccess	tok -> type		3498265	0					
ANR	3498990	Identifier	tok		3498265	0					
ANR	3498991	Identifier	type		3498265	1					
ANR	3498992	Identifier	TK_ANCHOR		3498265	1					
ANR	3498993	ExpressionStatement	tok -> u . anchor = ANCHOR_WORD_END	3267:6:70919:70950	3498265	70	True				
ANR	3498994	AssignmentExpression	tok -> u . anchor = ANCHOR_WORD_END		3498265	0		=			
ANR	3498995	MemberAccess	tok -> u . anchor		3498265	0					
ANR	3498996	PtrMemberAccess	tok -> u		3498265	0					
ANR	3498997	Identifier	tok		3498265	0					
ANR	3498998	Identifier	u		3498265	1					
ANR	3498999	Identifier	anchor		3498265	1					
ANR	3499000	Identifier	ANCHOR_WORD_END		3498265	1					
ANR	3499001	BreakStatement	break ;	3268:6:70958:70963	3498265	71	True				
ANR	3499002	Label	case 's' :	3271:4:70977:70985	3498265	72	True				
ANR	3499003	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE ) )"		3498265	73					
ANR	3499004	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"	3272:10:70997:71046	3498265	0	True				
ANR	3499005	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"		3498265	0					
ANR	3499006	UnaryOperator	!		3498265	0					
ANR	3499007	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"		3498265	1					
ANR	3499008	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3499009	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3499010	ArgumentList	syn		3498265	1					
ANR	3499011	Argument	syn		3498265	0					
ANR	3499012	Identifier	syn		3498265	0					
ANR	3499013	Argument	ONIG_SYN_OP_ESC_S_WHITE_SPACE		3498265	1					
ANR	3499014	Identifier	ONIG_SYN_OP_ESC_S_WHITE_SPACE		3498265	0					
ANR	3499015	BreakStatement	break ;	3272:62:71049:71054	3498265	1	True				
ANR	3499016	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3273:6:71062:71086	3498265	74	True				
ANR	3499017	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3498265	0		=			
ANR	3499018	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499019	Identifier	tok		3498265	0					
ANR	3499020	Identifier	type		3498265	1					
ANR	3499021	Identifier	TK_CHAR_TYPE		3498265	1					
ANR	3499022	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE	3274:6:71094:71133	3498265	75	True				
ANR	3499023	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE		3498265	0		=			
ANR	3499024	MemberAccess	tok -> u . prop . ctype		3498265	0					
ANR	3499025	MemberAccess	tok -> u . prop		3498265	0					
ANR	3499026	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499027	Identifier	tok		3498265	0					
ANR	3499028	Identifier	u		3498265	1					
ANR	3499029	Identifier	prop		3498265	1					
ANR	3499030	Identifier	ctype		3498265	1					
ANR	3499031	Identifier	ONIGENC_CTYPE_SPACE		3498265	1					
ANR	3499032	ExpressionStatement	tok -> u . prop . not = 0	3275:6:71141:71162	3498265	76	True				
ANR	3499033	AssignmentExpression	tok -> u . prop . not = 0		3498265	0		=			
ANR	3499034	MemberAccess	tok -> u . prop . not		3498265	0					
ANR	3499035	MemberAccess	tok -> u . prop		3498265	0					
ANR	3499036	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499037	Identifier	tok		3498265	0					
ANR	3499038	Identifier	u		3498265	1					
ANR	3499039	Identifier	prop		3498265	1					
ANR	3499040	Identifier	not		3498265	1					
ANR	3499041	PrimaryExpression	0		3498265	1					
ANR	3499042	BreakStatement	break ;	3276:6:71170:71175	3498265	77	True				
ANR	3499043	Label	case 'S' :	3278:4:71182:71190	3498265	78	True				
ANR	3499044	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE ) )"		3498265	79					
ANR	3499045	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"	3279:10:71202:71251	3498265	0	True				
ANR	3499046	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"		3498265	0					
ANR	3499047	UnaryOperator	!		3498265	0					
ANR	3499048	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"		3498265	1					
ANR	3499049	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3499050	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3499051	ArgumentList	syn		3498265	1					
ANR	3499052	Argument	syn		3498265	0					
ANR	3499053	Identifier	syn		3498265	0					
ANR	3499054	Argument	ONIG_SYN_OP_ESC_S_WHITE_SPACE		3498265	1					
ANR	3499055	Identifier	ONIG_SYN_OP_ESC_S_WHITE_SPACE		3498265	0					
ANR	3499056	BreakStatement	break ;	3279:62:71254:71259	3498265	1	True				
ANR	3499057	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3280:6:71267:71291	3498265	80	True				
ANR	3499058	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3498265	0		=			
ANR	3499059	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499060	Identifier	tok		3498265	0					
ANR	3499061	Identifier	type		3498265	1					
ANR	3499062	Identifier	TK_CHAR_TYPE		3498265	1					
ANR	3499063	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE	3281:6:71299:71338	3498265	81	True				
ANR	3499064	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE		3498265	0		=			
ANR	3499065	MemberAccess	tok -> u . prop . ctype		3498265	0					
ANR	3499066	MemberAccess	tok -> u . prop		3498265	0					
ANR	3499067	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499068	Identifier	tok		3498265	0					
ANR	3499069	Identifier	u		3498265	1					
ANR	3499070	Identifier	prop		3498265	1					
ANR	3499071	Identifier	ctype		3498265	1					
ANR	3499072	Identifier	ONIGENC_CTYPE_SPACE		3498265	1					
ANR	3499073	ExpressionStatement	tok -> u . prop . not = 1	3282:6:71346:71367	3498265	82	True				
ANR	3499074	AssignmentExpression	tok -> u . prop . not = 1		3498265	0		=			
ANR	3499075	MemberAccess	tok -> u . prop . not		3498265	0					
ANR	3499076	MemberAccess	tok -> u . prop		3498265	0					
ANR	3499077	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499078	Identifier	tok		3498265	0					
ANR	3499079	Identifier	u		3498265	1					
ANR	3499080	Identifier	prop		3498265	1					
ANR	3499081	Identifier	not		3498265	1					
ANR	3499082	PrimaryExpression	1		3498265	1					
ANR	3499083	BreakStatement	break ;	3283:6:71375:71380	3498265	83	True				
ANR	3499084	Label	case 'd' :	3285:4:71387:71395	3498265	84	True				
ANR	3499085	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT ) )"		3498265	85					
ANR	3499086	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"	3286:10:71407:71450	3498265	0	True				
ANR	3499087	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"		3498265	0					
ANR	3499088	UnaryOperator	!		3498265	0					
ANR	3499089	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"		3498265	1					
ANR	3499090	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3499091	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3499092	ArgumentList	syn		3498265	1					
ANR	3499093	Argument	syn		3498265	0					
ANR	3499094	Identifier	syn		3498265	0					
ANR	3499095	Argument	ONIG_SYN_OP_ESC_D_DIGIT		3498265	1					
ANR	3499096	Identifier	ONIG_SYN_OP_ESC_D_DIGIT		3498265	0					
ANR	3499097	BreakStatement	break ;	3286:56:71453:71458	3498265	1	True				
ANR	3499098	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3287:6:71466:71490	3498265	86	True				
ANR	3499099	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3498265	0		=			
ANR	3499100	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499101	Identifier	tok		3498265	0					
ANR	3499102	Identifier	type		3498265	1					
ANR	3499103	Identifier	TK_CHAR_TYPE		3498265	1					
ANR	3499104	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT	3288:6:71498:71537	3498265	87	True				
ANR	3499105	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT		3498265	0		=			
ANR	3499106	MemberAccess	tok -> u . prop . ctype		3498265	0					
ANR	3499107	MemberAccess	tok -> u . prop		3498265	0					
ANR	3499108	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499109	Identifier	tok		3498265	0					
ANR	3499110	Identifier	u		3498265	1					
ANR	3499111	Identifier	prop		3498265	1					
ANR	3499112	Identifier	ctype		3498265	1					
ANR	3499113	Identifier	ONIGENC_CTYPE_DIGIT		3498265	1					
ANR	3499114	ExpressionStatement	tok -> u . prop . not = 0	3289:6:71545:71566	3498265	88	True				
ANR	3499115	AssignmentExpression	tok -> u . prop . not = 0		3498265	0		=			
ANR	3499116	MemberAccess	tok -> u . prop . not		3498265	0					
ANR	3499117	MemberAccess	tok -> u . prop		3498265	0					
ANR	3499118	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499119	Identifier	tok		3498265	0					
ANR	3499120	Identifier	u		3498265	1					
ANR	3499121	Identifier	prop		3498265	1					
ANR	3499122	Identifier	not		3498265	1					
ANR	3499123	PrimaryExpression	0		3498265	1					
ANR	3499124	BreakStatement	break ;	3290:6:71574:71579	3498265	89	True				
ANR	3499125	Label	case 'D' :	3292:4:71586:71594	3498265	90	True				
ANR	3499126	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT ) )"		3498265	91					
ANR	3499127	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"	3293:10:71606:71649	3498265	0	True				
ANR	3499128	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"		3498265	0					
ANR	3499129	UnaryOperator	!		3498265	0					
ANR	3499130	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"		3498265	1					
ANR	3499131	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3499132	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3499133	ArgumentList	syn		3498265	1					
ANR	3499134	Argument	syn		3498265	0					
ANR	3499135	Identifier	syn		3498265	0					
ANR	3499136	Argument	ONIG_SYN_OP_ESC_D_DIGIT		3498265	1					
ANR	3499137	Identifier	ONIG_SYN_OP_ESC_D_DIGIT		3498265	0					
ANR	3499138	BreakStatement	break ;	3293:56:71652:71657	3498265	1	True				
ANR	3499139	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3294:6:71665:71689	3498265	92	True				
ANR	3499140	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3498265	0		=			
ANR	3499141	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499142	Identifier	tok		3498265	0					
ANR	3499143	Identifier	type		3498265	1					
ANR	3499144	Identifier	TK_CHAR_TYPE		3498265	1					
ANR	3499145	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT	3295:6:71697:71736	3498265	93	True				
ANR	3499146	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT		3498265	0		=			
ANR	3499147	MemberAccess	tok -> u . prop . ctype		3498265	0					
ANR	3499148	MemberAccess	tok -> u . prop		3498265	0					
ANR	3499149	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499150	Identifier	tok		3498265	0					
ANR	3499151	Identifier	u		3498265	1					
ANR	3499152	Identifier	prop		3498265	1					
ANR	3499153	Identifier	ctype		3498265	1					
ANR	3499154	Identifier	ONIGENC_CTYPE_DIGIT		3498265	1					
ANR	3499155	ExpressionStatement	tok -> u . prop . not = 1	3296:6:71744:71765	3498265	94	True				
ANR	3499156	AssignmentExpression	tok -> u . prop . not = 1		3498265	0		=			
ANR	3499157	MemberAccess	tok -> u . prop . not		3498265	0					
ANR	3499158	MemberAccess	tok -> u . prop		3498265	0					
ANR	3499159	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499160	Identifier	tok		3498265	0					
ANR	3499161	Identifier	u		3498265	1					
ANR	3499162	Identifier	prop		3498265	1					
ANR	3499163	Identifier	not		3498265	1					
ANR	3499164	PrimaryExpression	1		3498265	1					
ANR	3499165	BreakStatement	break ;	3297:6:71773:71778	3498265	95	True				
ANR	3499166	Label	case 'h' :	3299:4:71785:71793	3498265	96	True				
ANR	3499167	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT ) )"		3498265	97					
ANR	3499168	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"	3300:10:71805:71851	3498265	0	True				
ANR	3499169	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		3498265	0					
ANR	3499170	UnaryOperator	!		3498265	0					
ANR	3499171	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		3498265	1					
ANR	3499172	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3499173	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3499174	ArgumentList	syn		3498265	1					
ANR	3499175	Argument	syn		3498265	0					
ANR	3499176	Identifier	syn		3498265	0					
ANR	3499177	Argument	ONIG_SYN_OP2_ESC_H_XDIGIT		3498265	1					
ANR	3499178	Identifier	ONIG_SYN_OP2_ESC_H_XDIGIT		3498265	0					
ANR	3499179	BreakStatement	break ;	3300:59:71854:71859	3498265	1	True				
ANR	3499180	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3301:6:71867:71891	3498265	98	True				
ANR	3499181	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3498265	0		=			
ANR	3499182	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499183	Identifier	tok		3498265	0					
ANR	3499184	Identifier	type		3498265	1					
ANR	3499185	Identifier	TK_CHAR_TYPE		3498265	1					
ANR	3499186	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT	3302:6:71899:71939	3498265	99	True				
ANR	3499187	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT		3498265	0		=			
ANR	3499188	MemberAccess	tok -> u . prop . ctype		3498265	0					
ANR	3499189	MemberAccess	tok -> u . prop		3498265	0					
ANR	3499190	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499191	Identifier	tok		3498265	0					
ANR	3499192	Identifier	u		3498265	1					
ANR	3499193	Identifier	prop		3498265	1					
ANR	3499194	Identifier	ctype		3498265	1					
ANR	3499195	Identifier	ONIGENC_CTYPE_XDIGIT		3498265	1					
ANR	3499196	ExpressionStatement	tok -> u . prop . not = 0	3303:6:71947:71968	3498265	100	True				
ANR	3499197	AssignmentExpression	tok -> u . prop . not = 0		3498265	0		=			
ANR	3499198	MemberAccess	tok -> u . prop . not		3498265	0					
ANR	3499199	MemberAccess	tok -> u . prop		3498265	0					
ANR	3499200	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499201	Identifier	tok		3498265	0					
ANR	3499202	Identifier	u		3498265	1					
ANR	3499203	Identifier	prop		3498265	1					
ANR	3499204	Identifier	not		3498265	1					
ANR	3499205	PrimaryExpression	0		3498265	1					
ANR	3499206	BreakStatement	break ;	3304:6:71976:71981	3498265	101	True				
ANR	3499207	Label	case 'H' :	3306:4:71988:71996	3498265	102	True				
ANR	3499208	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT ) )"		3498265	103					
ANR	3499209	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"	3307:10:72008:72054	3498265	0	True				
ANR	3499210	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		3498265	0					
ANR	3499211	UnaryOperator	!		3498265	0					
ANR	3499212	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		3498265	1					
ANR	3499213	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3499214	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3499215	ArgumentList	syn		3498265	1					
ANR	3499216	Argument	syn		3498265	0					
ANR	3499217	Identifier	syn		3498265	0					
ANR	3499218	Argument	ONIG_SYN_OP2_ESC_H_XDIGIT		3498265	1					
ANR	3499219	Identifier	ONIG_SYN_OP2_ESC_H_XDIGIT		3498265	0					
ANR	3499220	BreakStatement	break ;	3307:59:72057:72062	3498265	1	True				
ANR	3499221	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3308:6:72070:72094	3498265	104	True				
ANR	3499222	AssignmentExpression	tok -> type = TK_CHAR_TYPE		3498265	0		=			
ANR	3499223	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499224	Identifier	tok		3498265	0					
ANR	3499225	Identifier	type		3498265	1					
ANR	3499226	Identifier	TK_CHAR_TYPE		3498265	1					
ANR	3499227	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT	3309:6:72102:72142	3498265	105	True				
ANR	3499228	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT		3498265	0		=			
ANR	3499229	MemberAccess	tok -> u . prop . ctype		3498265	0					
ANR	3499230	MemberAccess	tok -> u . prop		3498265	0					
ANR	3499231	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499232	Identifier	tok		3498265	0					
ANR	3499233	Identifier	u		3498265	1					
ANR	3499234	Identifier	prop		3498265	1					
ANR	3499235	Identifier	ctype		3498265	1					
ANR	3499236	Identifier	ONIGENC_CTYPE_XDIGIT		3498265	1					
ANR	3499237	ExpressionStatement	tok -> u . prop . not = 1	3310:6:72150:72171	3498265	106	True				
ANR	3499238	AssignmentExpression	tok -> u . prop . not = 1		3498265	0		=			
ANR	3499239	MemberAccess	tok -> u . prop . not		3498265	0					
ANR	3499240	MemberAccess	tok -> u . prop		3498265	0					
ANR	3499241	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499242	Identifier	tok		3498265	0					
ANR	3499243	Identifier	u		3498265	1					
ANR	3499244	Identifier	prop		3498265	1					
ANR	3499245	Identifier	not		3498265	1					
ANR	3499246	PrimaryExpression	1		3498265	1					
ANR	3499247	BreakStatement	break ;	3311:6:72179:72184	3498265	107	True				
ANR	3499248	Label	case 'A' :	3313:4:72191:72199	3498265	108	True				
ANR	3499249	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR ) )"		3498265	109					
ANR	3499250	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"	3314:10:72211:72260	3498265	0	True				
ANR	3499251	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		3498265	0					
ANR	3499252	UnaryOperator	!		3498265	0					
ANR	3499253	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		3498265	1					
ANR	3499254	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3499255	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3499256	ArgumentList	syn		3498265	1					
ANR	3499257	Argument	syn		3498265	0					
ANR	3499258	Identifier	syn		3498265	0					
ANR	3499259	Argument	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		3498265	1					
ANR	3499260	Identifier	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		3498265	0					
ANR	3499261	BreakStatement	break ;	3314:62:72263:72268	3498265	1	True				
ANR	3499262	Label	begin_buf :	3315:4:72274:72283	3498265	110	True				
ANR	3499263	Identifier	begin_buf		3498265	0					
ANR	3499264	ExpressionStatement	tok -> type = TK_ANCHOR	3316:6:72291:72312	3498265	111	True				
ANR	3499265	AssignmentExpression	tok -> type = TK_ANCHOR		3498265	0		=			
ANR	3499266	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499267	Identifier	tok		3498265	0					
ANR	3499268	Identifier	type		3498265	1					
ANR	3499269	Identifier	TK_ANCHOR		3498265	1					
ANR	3499270	ExpressionStatement	tok -> u . subtype = ANCHOR_BEGIN_BUF	3317:6:72320:72353	3498265	112	True				
ANR	3499271	AssignmentExpression	tok -> u . subtype = ANCHOR_BEGIN_BUF		3498265	0		=			
ANR	3499272	MemberAccess	tok -> u . subtype		3498265	0					
ANR	3499273	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499274	Identifier	tok		3498265	0					
ANR	3499275	Identifier	u		3498265	1					
ANR	3499276	Identifier	subtype		3498265	1					
ANR	3499277	Identifier	ANCHOR_BEGIN_BUF		3498265	1					
ANR	3499278	BreakStatement	break ;	3318:6:72361:72366	3498265	113	True				
ANR	3499279	Label	case 'Z' :	3320:4:72373:72381	3498265	114	True				
ANR	3499280	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR ) )"		3498265	115					
ANR	3499281	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"	3321:10:72393:72442	3498265	0	True				
ANR	3499282	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		3498265	0					
ANR	3499283	UnaryOperator	!		3498265	0					
ANR	3499284	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		3498265	1					
ANR	3499285	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3499286	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3499287	ArgumentList	syn		3498265	1					
ANR	3499288	Argument	syn		3498265	0					
ANR	3499289	Identifier	syn		3498265	0					
ANR	3499290	Argument	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		3498265	1					
ANR	3499291	Identifier	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		3498265	0					
ANR	3499292	BreakStatement	break ;	3321:62:72445:72450	3498265	1	True				
ANR	3499293	ExpressionStatement	tok -> type = TK_ANCHOR	3322:6:72458:72479	3498265	116	True				
ANR	3499294	AssignmentExpression	tok -> type = TK_ANCHOR		3498265	0		=			
ANR	3499295	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499296	Identifier	tok		3498265	0					
ANR	3499297	Identifier	type		3498265	1					
ANR	3499298	Identifier	TK_ANCHOR		3498265	1					
ANR	3499299	ExpressionStatement	tok -> u . subtype = ANCHOR_SEMI_END_BUF	3323:6:72487:72523	3498265	117	True				
ANR	3499300	AssignmentExpression	tok -> u . subtype = ANCHOR_SEMI_END_BUF		3498265	0		=			
ANR	3499301	MemberAccess	tok -> u . subtype		3498265	0					
ANR	3499302	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499303	Identifier	tok		3498265	0					
ANR	3499304	Identifier	u		3498265	1					
ANR	3499305	Identifier	subtype		3498265	1					
ANR	3499306	Identifier	ANCHOR_SEMI_END_BUF		3498265	1					
ANR	3499307	BreakStatement	break ;	3324:6:72531:72536	3498265	118	True				
ANR	3499308	Label	case 'z' :	3326:4:72543:72551	3498265	119	True				
ANR	3499309	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR ) )"		3498265	120					
ANR	3499310	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"	3327:10:72563:72612	3498265	0	True				
ANR	3499311	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		3498265	0					
ANR	3499312	UnaryOperator	!		3498265	0					
ANR	3499313	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		3498265	1					
ANR	3499314	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3499315	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3499316	ArgumentList	syn		3498265	1					
ANR	3499317	Argument	syn		3498265	0					
ANR	3499318	Identifier	syn		3498265	0					
ANR	3499319	Argument	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		3498265	1					
ANR	3499320	Identifier	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		3498265	0					
ANR	3499321	BreakStatement	break ;	3327:62:72615:72620	3498265	1	True				
ANR	3499322	Label	end_buf :	3328:4:72626:72633	3498265	121	True				
ANR	3499323	Identifier	end_buf		3498265	0					
ANR	3499324	ExpressionStatement	tok -> type = TK_ANCHOR	3329:6:72641:72662	3498265	122	True				
ANR	3499325	AssignmentExpression	tok -> type = TK_ANCHOR		3498265	0		=			
ANR	3499326	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499327	Identifier	tok		3498265	0					
ANR	3499328	Identifier	type		3498265	1					
ANR	3499329	Identifier	TK_ANCHOR		3498265	1					
ANR	3499330	ExpressionStatement	tok -> u . subtype = ANCHOR_END_BUF	3330:6:72670:72701	3498265	123	True				
ANR	3499331	AssignmentExpression	tok -> u . subtype = ANCHOR_END_BUF		3498265	0		=			
ANR	3499332	MemberAccess	tok -> u . subtype		3498265	0					
ANR	3499333	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499334	Identifier	tok		3498265	0					
ANR	3499335	Identifier	u		3498265	1					
ANR	3499336	Identifier	subtype		3498265	1					
ANR	3499337	Identifier	ANCHOR_END_BUF		3498265	1					
ANR	3499338	BreakStatement	break ;	3331:6:72709:72714	3498265	124	True				
ANR	3499339	Label	case 'G' :	3333:4:72721:72729	3498265	125	True				
ANR	3499340	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR ) )"		3498265	126					
ANR	3499341	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR )"	3334:10:72741:72799	3498265	0	True				
ANR	3499342	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR )"		3498265	0					
ANR	3499343	UnaryOperator	!		3498265	0					
ANR	3499344	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR )"		3498265	1					
ANR	3499345	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3499346	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3499347	ArgumentList	syn		3498265	1					
ANR	3499348	Argument	syn		3498265	0					
ANR	3499349	Identifier	syn		3498265	0					
ANR	3499350	Argument	ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR		3498265	1					
ANR	3499351	Identifier	ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR		3498265	0					
ANR	3499352	BreakStatement	break ;	3334:71:72802:72807	3498265	1	True				
ANR	3499353	ExpressionStatement	tok -> type = TK_ANCHOR	3335:6:72815:72836	3498265	127	True				
ANR	3499354	AssignmentExpression	tok -> type = TK_ANCHOR		3498265	0		=			
ANR	3499355	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499356	Identifier	tok		3498265	0					
ANR	3499357	Identifier	type		3498265	1					
ANR	3499358	Identifier	TK_ANCHOR		3498265	1					
ANR	3499359	ExpressionStatement	tok -> u . subtype = ANCHOR_BEGIN_POSITION	3336:6:72844:72882	3498265	128	True				
ANR	3499360	AssignmentExpression	tok -> u . subtype = ANCHOR_BEGIN_POSITION		3498265	0		=			
ANR	3499361	MemberAccess	tok -> u . subtype		3498265	0					
ANR	3499362	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499363	Identifier	tok		3498265	0					
ANR	3499364	Identifier	u		3498265	1					
ANR	3499365	Identifier	subtype		3498265	1					
ANR	3499366	Identifier	ANCHOR_BEGIN_POSITION		3498265	1					
ANR	3499367	BreakStatement	break ;	3337:6:72890:72895	3498265	129	True				
ANR	3499368	Label	case '`' :	3339:4:72902:72910	3498265	130	True				
ANR	3499369	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR ) )"		3498265	131					
ANR	3499370	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"	3340:10:72922:72974	3498265	0	True				
ANR	3499371	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"		3498265	0					
ANR	3499372	UnaryOperator	!		3498265	0					
ANR	3499373	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"		3498265	1					
ANR	3499374	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3499375	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3499376	ArgumentList	syn		3498265	1					
ANR	3499377	Argument	syn		3498265	0					
ANR	3499378	Identifier	syn		3498265	0					
ANR	3499379	Argument	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		3498265	1					
ANR	3499380	Identifier	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		3498265	0					
ANR	3499381	BreakStatement	break ;	3340:65:72977:72982	3498265	1	True				
ANR	3499382	GotoStatement	goto begin_buf ;	3341:6:72990:73004	3498265	132	True				
ANR	3499383	Identifier	begin_buf		3498265	0					
ANR	3499384	BreakStatement	break ;	3342:6:73012:73017	3498265	133	True				
ANR	3499385	Label	case '\\'' :	3344:4:73024:73033	3498265	134	True				
ANR	3499386	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR ) )"		3498265	135					
ANR	3499387	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"	3345:10:73045:73097	3498265	0	True				
ANR	3499388	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"		3498265	0					
ANR	3499389	UnaryOperator	!		3498265	0					
ANR	3499390	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"		3498265	1					
ANR	3499391	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3499392	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3499393	ArgumentList	syn		3498265	1					
ANR	3499394	Argument	syn		3498265	0					
ANR	3499395	Identifier	syn		3498265	0					
ANR	3499396	Argument	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		3498265	1					
ANR	3499397	Identifier	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		3498265	0					
ANR	3499398	BreakStatement	break ;	3345:65:73100:73105	3498265	1	True				
ANR	3499399	GotoStatement	goto end_buf ;	3346:6:73113:73125	3498265	136	True				
ANR	3499400	Identifier	end_buf		3498265	0					
ANR	3499401	BreakStatement	break ;	3347:6:73133:73138	3498265	137	True				
ANR	3499402	Label	case 'x' :	3349:4:73145:73153	3498265	138	True				
ANR	3499403	IfStatement	if ( PEND )		3498265	139					
ANR	3499404	Condition	PEND	3350:10:73165:73168	3498265	0	True				
ANR	3499405	Identifier	PEND		3498265	0					
ANR	3499406	BreakStatement	break ;	3350:16:73171:73176	3498265	1	True				
ANR	3499407	ExpressionStatement	prev = p	3352:6:73185:73193	3498265	140	True				
ANR	3499408	AssignmentExpression	prev = p		3498265	0		=			
ANR	3499409	Identifier	prev		3498265	0					
ANR	3499410	Identifier	p		3498265	1					
ANR	3499411	IfStatement	"if ( PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 ) )"		3498265	141					
ANR	3499412	Condition	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"	3353:10:73205:73268	3498265	0	True				
ANR	3499413	AndExpression	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"		3498265	0		&&			
ANR	3499414	CallExpression	PPEEK_IS ( '{' )		3498265	0					
ANR	3499415	Callee	PPEEK_IS		3498265	0					
ANR	3499416	Identifier	PPEEK_IS		3498265	0					
ANR	3499417	ArgumentList	'{'		3498265	1					
ANR	3499418	Argument	'{'		3498265	0					
ANR	3499419	PrimaryExpression	'{'		3498265	0					
ANR	3499420	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"		3498265	1					
ANR	3499421	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3499422	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3499423	ArgumentList	syn		3498265	1					
ANR	3499424	Argument	syn		3498265	0					
ANR	3499425	Identifier	syn		3498265	0					
ANR	3499426	Argument	ONIG_SYN_OP_ESC_X_BRACE_HEX8		3498265	1					
ANR	3499427	Identifier	ONIG_SYN_OP_ESC_X_BRACE_HEX8		3498265	0					
ANR	3499428	CompoundStatement		227:76:5970:5970	3498265	1					
ANR	3499429	ExpressionStatement	PINC	3354:1:73274:73278	3498265	0	True				
ANR	3499430	Identifier	PINC		3498265	0					
ANR	3499431	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"	3355:1:73281:73336	3498265	1	True				
ANR	3499432	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"		3498265	0		=			
ANR	3499433	Identifier	num		3498265	0					
ANR	3499434	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"		3498265	1					
ANR	3499435	Callee	scan_unsigned_hexadecimal_number		3498265	0					
ANR	3499436	Identifier	scan_unsigned_hexadecimal_number		3498265	0					
ANR	3499437	ArgumentList	& p		3498265	1					
ANR	3499438	Argument	& p		3498265	0					
ANR	3499439	UnaryOperationExpression	& p		3498265	0					
ANR	3499440	UnaryOperator	&		3498265	0					
ANR	3499441	Identifier	p		3498265	1					
ANR	3499442	Argument	end		3498265	1					
ANR	3499443	Identifier	end		3498265	0					
ANR	3499444	Argument	8		3498265	2					
ANR	3499445	PrimaryExpression	8		3498265	0					
ANR	3499446	Argument	enc		3498265	3					
ANR	3499447	Identifier	enc		3498265	0					
ANR	3499448	IfStatement	if ( num < 0 )		3498265	2					
ANR	3499449	Condition	num < 0	3356:5:73343:73349	3498265	0	True				
ANR	3499450	RelationalExpression	num < 0		3498265	0		<			
ANR	3499451	Identifier	num		3498265	0					
ANR	3499452	PrimaryExpression	0		3498265	1					
ANR	3499453	ReturnStatement	return ONIGERR_TOO_BIG_WIDE_CHAR_VALUE ;	3356:14:73352:73390	3498265	1	True				
ANR	3499454	Identifier	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		3498265	0					
ANR	3499455	IfStatement	if ( ! PEND )		3498265	3					
ANR	3499456	Condition	! PEND	3357:5:73397:73401	3498265	0	True				
ANR	3499457	UnaryOperationExpression	! PEND		3498265	0					
ANR	3499458	UnaryOperator	!		3498265	0					
ANR	3499459	Identifier	PEND		3498265	1					
ANR	3499460	CompoundStatement		231:12:6103:6103	3498265	1					
ANR	3499461	IfStatement	"if ( ONIGENC_IS_CODE_XDIGIT ( enc , PPEEK ) )"		3498265	0					
ANR	3499462	Condition	"ONIGENC_IS_CODE_XDIGIT ( enc , PPEEK )"	3358:14:73420:73453	3498265	0	True				
ANR	3499463	CallExpression	"ONIGENC_IS_CODE_XDIGIT ( enc , PPEEK )"		3498265	0					
ANR	3499464	Callee	ONIGENC_IS_CODE_XDIGIT		3498265	0					
ANR	3499465	Identifier	ONIGENC_IS_CODE_XDIGIT		3498265	0					
ANR	3499466	ArgumentList	enc		3498265	1					
ANR	3499467	Argument	enc		3498265	0					
ANR	3499468	Identifier	enc		3498265	0					
ANR	3499469	Argument	PPEEK		3498265	1					
ANR	3499470	Identifier	PPEEK		3498265	0					
ANR	3499471	ReturnStatement	return ONIGERR_TOO_LONG_WIDE_CHAR_VALUE ;	3359:12:73468:73507	3498265	1	True				
ANR	3499472	Identifier	ONIGERR_TOO_LONG_WIDE_CHAR_VALUE		3498265	0					
ANR	3499473	IfStatement	"if ( ( p > prev + enclen ( enc , prev ) ) && ! PEND && PPEEK_IS ( '}' ) )"		3498265	4					
ANR	3499474	Condition	"( p > prev + enclen ( enc , prev ) ) && ! PEND && PPEEK_IS ( '}' )"	3362:5:73525:73580	3498265	0	True				
ANR	3499475	AndExpression	"( p > prev + enclen ( enc , prev ) ) && ! PEND && PPEEK_IS ( '}' )"		3498265	0		&&			
ANR	3499476	RelationalExpression	"p > prev + enclen ( enc , prev )"		3498265	0		>			
ANR	3499477	Identifier	p		3498265	0					
ANR	3499478	AdditiveExpression	"prev + enclen ( enc , prev )"		3498265	1		+			
ANR	3499479	Identifier	prev		3498265	0					
ANR	3499480	CallExpression	"enclen ( enc , prev )"		3498265	1					
ANR	3499481	Callee	enclen		3498265	0					
ANR	3499482	Identifier	enclen		3498265	0					
ANR	3499483	ArgumentList	enc		3498265	1					
ANR	3499484	Argument	enc		3498265	0					
ANR	3499485	Identifier	enc		3498265	0					
ANR	3499486	Argument	prev		3498265	1					
ANR	3499487	Identifier	prev		3498265	0					
ANR	3499488	AndExpression	! PEND && PPEEK_IS ( '}' )		3498265	1		&&			
ANR	3499489	UnaryOperationExpression	! PEND		3498265	0					
ANR	3499490	UnaryOperator	!		3498265	0					
ANR	3499491	Identifier	PEND		3498265	1					
ANR	3499492	CallExpression	PPEEK_IS ( '}' )		3498265	1					
ANR	3499493	Callee	PPEEK_IS		3498265	0					
ANR	3499494	Identifier	PPEEK_IS		3498265	0					
ANR	3499495	ArgumentList	'}'		3498265	1					
ANR	3499496	Argument	'}'		3498265	0					
ANR	3499497	PrimaryExpression	'}'		3498265	0					
ANR	3499498	CompoundStatement		236:63:6282:6282	3498265	1					
ANR	3499499	ExpressionStatement	PINC	3363:3:73588:73592	3498265	0	True				
ANR	3499500	Identifier	PINC		3498265	0					
ANR	3499501	ExpressionStatement	tok -> type = TK_CODE_POINT	3364:3:73597:73624	3498265	1	True				
ANR	3499502	AssignmentExpression	tok -> type = TK_CODE_POINT		3498265	0		=			
ANR	3499503	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499504	Identifier	tok		3498265	0					
ANR	3499505	Identifier	type		3498265	1					
ANR	3499506	Identifier	TK_CODE_POINT		3498265	1					
ANR	3499507	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3365:3:73629:73662	3498265	2	True				
ANR	3499508	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		3498265	0		=			
ANR	3499509	MemberAccess	tok -> u . code		3498265	0					
ANR	3499510	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499511	Identifier	tok		3498265	0					
ANR	3499512	Identifier	u		3498265	1					
ANR	3499513	Identifier	code		3498265	1					
ANR	3499514	CastExpression	( OnigCodePoint ) num		3498265	1					
ANR	3499515	CastTarget	OnigCodePoint		3498265	0					
ANR	3499516	Identifier	num		3498265	1					
ANR	3499517	ElseStatement	else		3498265	0					
ANR	3499518	CompoundStatement		241:6:6372:6372	3498265	0					
ANR	3499519	ExpressionStatement	p = prev	3369:3:73724:73732	3498265	0	True				
ANR	3499520	AssignmentExpression	p = prev		3498265	0		=			
ANR	3499521	Identifier	p		3498265	0					
ANR	3499522	Identifier	prev		3498265	1					
ANR	3499523	ElseStatement	else		3498265	0					
ANR	3499524	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 ) )"		3498265	0					
ANR	3499525	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 )"	3372:15:73760:73800	3498265	0	True				
ANR	3499526	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 )"		3498265	0					
ANR	3499527	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3499528	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3499529	ArgumentList	syn		3498265	1					
ANR	3499530	Argument	syn		3498265	0					
ANR	3499531	Identifier	syn		3498265	0					
ANR	3499532	Argument	ONIG_SYN_OP_ESC_X_HEX2		3498265	1					
ANR	3499533	Identifier	ONIG_SYN_OP_ESC_X_HEX2		3498265	0					
ANR	3499534	CompoundStatement		246:58:6502:6502	3498265	1					
ANR	3499535	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"	3373:1:73806:73861	3498265	0	True				
ANR	3499536	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"		3498265	0		=			
ANR	3499537	Identifier	num		3498265	0					
ANR	3499538	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"		3498265	1					
ANR	3499539	Callee	scan_unsigned_hexadecimal_number		3498265	0					
ANR	3499540	Identifier	scan_unsigned_hexadecimal_number		3498265	0					
ANR	3499541	ArgumentList	& p		3498265	1					
ANR	3499542	Argument	& p		3498265	0					
ANR	3499543	UnaryOperationExpression	& p		3498265	0					
ANR	3499544	UnaryOperator	&		3498265	0					
ANR	3499545	Identifier	p		3498265	1					
ANR	3499546	Argument	end		3498265	1					
ANR	3499547	Identifier	end		3498265	0					
ANR	3499548	Argument	2		3498265	2					
ANR	3499549	PrimaryExpression	2		3498265	0					
ANR	3499550	Argument	enc		3498265	3					
ANR	3499551	Identifier	enc		3498265	0					
ANR	3499552	IfStatement	if ( num < 0 )		3498265	1					
ANR	3499553	Condition	num < 0	3374:5:73868:73874	3498265	0	True				
ANR	3499554	RelationalExpression	num < 0		3498265	0		<			
ANR	3499555	Identifier	num		3498265	0					
ANR	3499556	PrimaryExpression	0		3498265	1					
ANR	3499557	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3374:14:73877:73906	3498265	1	True				
ANR	3499558	Identifier	ONIGERR_TOO_BIG_NUMBER		3498265	0					
ANR	3499559	IfStatement	if ( p == prev )		3498265	2					
ANR	3499560	Condition	p == prev	3375:5:73913:73921	3498265	0	True				
ANR	3499561	EqualityExpression	p == prev		3498265	0		==			
ANR	3499562	Identifier	p		3498265	0					
ANR	3499563	Identifier	prev		3498265	1					
ANR	3499564	CompoundStatement		249:16:6623:6623	3498265	1					
ANR	3499565	ExpressionStatement	num = 0	3376:3:73956:73963	3498265	0	True				
ANR	3499566	AssignmentExpression	num = 0		3498265	0		=			
ANR	3499567	Identifier	num		3498265	0					
ANR	3499568	PrimaryExpression	0		3498265	1					
ANR	3499569	ExpressionStatement	tok -> type = TK_RAW_BYTE	3378:1:73995:74018	3498265	3	True				
ANR	3499570	AssignmentExpression	tok -> type = TK_RAW_BYTE		3498265	0		=			
ANR	3499571	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499572	Identifier	tok		3498265	0					
ANR	3499573	Identifier	type		3498265	1					
ANR	3499574	Identifier	TK_RAW_BYTE		3498265	1					
ANR	3499575	ExpressionStatement	tok -> base = 16	3379:1:74021:74035	3498265	4	True				
ANR	3499576	AssignmentExpression	tok -> base = 16		3498265	0		=			
ANR	3499577	PtrMemberAccess	tok -> base		3498265	0					
ANR	3499578	Identifier	tok		3498265	0					
ANR	3499579	Identifier	base		3498265	1					
ANR	3499580	PrimaryExpression	16		3498265	1					
ANR	3499581	ExpressionStatement	tok -> u . c = num	3380:1:74038:74053	3498265	5	True				
ANR	3499582	AssignmentExpression	tok -> u . c = num		3498265	0		=			
ANR	3499583	MemberAccess	tok -> u . c		3498265	0					
ANR	3499584	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499585	Identifier	tok		3498265	0					
ANR	3499586	Identifier	u		3498265	1					
ANR	3499587	Identifier	c		3498265	1					
ANR	3499588	Identifier	num		3498265	1					
ANR	3499589	BreakStatement	break ;	3382:6:74069:74074	3498265	142	True				
ANR	3499590	Label	case 'u' :	3384:4:74081:74089	3498265	143	True				
ANR	3499591	IfStatement	if ( PEND )		3498265	144					
ANR	3499592	Condition	PEND	3385:10:74101:74104	3498265	0	True				
ANR	3499593	Identifier	PEND		3498265	0					
ANR	3499594	BreakStatement	break ;	3385:16:74107:74112	3498265	1	True				
ANR	3499595	ExpressionStatement	prev = p	3387:6:74121:74129	3498265	145	True				
ANR	3499596	AssignmentExpression	prev = p		3498265	0		=			
ANR	3499597	Identifier	prev		3498265	0					
ANR	3499598	Identifier	p		3498265	1					
ANR	3499599	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 ) )"		3498265	146					
ANR	3499600	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 )"	3388:10:74141:74183	3498265	0	True				
ANR	3499601	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 )"		3498265	0					
ANR	3499602	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3499603	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3499604	ArgumentList	syn		3498265	1					
ANR	3499605	Argument	syn		3498265	0					
ANR	3499606	Identifier	syn		3498265	0					
ANR	3499607	Argument	ONIG_SYN_OP2_ESC_U_HEX4		3498265	1					
ANR	3499608	Identifier	ONIG_SYN_OP2_ESC_U_HEX4		3498265	0					
ANR	3499609	CompoundStatement		262:55:6885:6885	3498265	1					
ANR	3499610	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"	3389:1:74189:74244	3498265	0	True				
ANR	3499611	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"		3498265	0		=			
ANR	3499612	Identifier	num		3498265	0					
ANR	3499613	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"		3498265	1					
ANR	3499614	Callee	scan_unsigned_hexadecimal_number		3498265	0					
ANR	3499615	Identifier	scan_unsigned_hexadecimal_number		3498265	0					
ANR	3499616	ArgumentList	& p		3498265	1					
ANR	3499617	Argument	& p		3498265	0					
ANR	3499618	UnaryOperationExpression	& p		3498265	0					
ANR	3499619	UnaryOperator	&		3498265	0					
ANR	3499620	Identifier	p		3498265	1					
ANR	3499621	Argument	end		3498265	1					
ANR	3499622	Identifier	end		3498265	0					
ANR	3499623	Argument	4		3498265	2					
ANR	3499624	PrimaryExpression	4		3498265	0					
ANR	3499625	Argument	enc		3498265	3					
ANR	3499626	Identifier	enc		3498265	0					
ANR	3499627	IfStatement	if ( num < 0 )		3498265	1					
ANR	3499628	Condition	num < 0	3390:5:74251:74257	3498265	0	True				
ANR	3499629	RelationalExpression	num < 0		3498265	0		<			
ANR	3499630	Identifier	num		3498265	0					
ANR	3499631	PrimaryExpression	0		3498265	1					
ANR	3499632	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3390:14:74260:74289	3498265	1	True				
ANR	3499633	Identifier	ONIGERR_TOO_BIG_NUMBER		3498265	0					
ANR	3499634	IfStatement	if ( p == prev )		3498265	2					
ANR	3499635	Condition	p == prev	3391:5:74296:74304	3498265	0	True				
ANR	3499636	EqualityExpression	p == prev		3498265	0		==			
ANR	3499637	Identifier	p		3498265	0					
ANR	3499638	Identifier	prev		3498265	1					
ANR	3499639	CompoundStatement		265:16:7006:7006	3498265	1					
ANR	3499640	ExpressionStatement	num = 0	3392:3:74339:74346	3498265	0	True				
ANR	3499641	AssignmentExpression	num = 0		3498265	0		=			
ANR	3499642	Identifier	num		3498265	0					
ANR	3499643	PrimaryExpression	0		3498265	1					
ANR	3499644	ExpressionStatement	tok -> type = TK_CODE_POINT	3394:1:74378:74405	3498265	3	True				
ANR	3499645	AssignmentExpression	tok -> type = TK_CODE_POINT		3498265	0		=			
ANR	3499646	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499647	Identifier	tok		3498265	0					
ANR	3499648	Identifier	type		3498265	1					
ANR	3499649	Identifier	TK_CODE_POINT		3498265	1					
ANR	3499650	ExpressionStatement	tok -> base = 16	3395:1:74408:74424	3498265	4	True				
ANR	3499651	AssignmentExpression	tok -> base = 16		3498265	0		=			
ANR	3499652	PtrMemberAccess	tok -> base		3498265	0					
ANR	3499653	Identifier	tok		3498265	0					
ANR	3499654	Identifier	base		3498265	1					
ANR	3499655	PrimaryExpression	16		3498265	1					
ANR	3499656	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3396:1:74427:74460	3498265	5	True				
ANR	3499657	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		3498265	0		=			
ANR	3499658	MemberAccess	tok -> u . code		3498265	0					
ANR	3499659	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499660	Identifier	tok		3498265	0					
ANR	3499661	Identifier	u		3498265	1					
ANR	3499662	Identifier	code		3498265	1					
ANR	3499663	CastExpression	( OnigCodePoint ) num		3498265	1					
ANR	3499664	CastTarget	OnigCodePoint		3498265	0					
ANR	3499665	Identifier	num		3498265	1					
ANR	3499666	BreakStatement	break ;	3398:6:74476:74481	3498265	147	True				
ANR	3499667	Label	case '1' :	3400:4:74488:74496	3498265	148	True				
ANR	3499668	Label	case '2' :	3400:14:74498:74506	3498265	149	True				
ANR	3499669	Label	case '3' :	3400:24:74508:74516	3498265	150	True				
ANR	3499670	Label	case '4' :	3400:34:74518:74526	3498265	151	True				
ANR	3499671	Label	case '5' :	3401:4:74532:74540	3498265	152	True				
ANR	3499672	Label	case '6' :	3401:14:74542:74550	3498265	153	True				
ANR	3499673	Label	case '7' :	3401:24:74552:74560	3498265	154	True				
ANR	3499674	Label	case '8' :	3401:34:74562:74570	3498265	155	True				
ANR	3499675	Label	case '9' :	3401:44:74572:74580	3498265	156	True				
ANR	3499676	ExpressionStatement	PUNFETCH	3402:6:74588:74596	3498265	157	True				
ANR	3499677	Identifier	PUNFETCH		3498265	0					
ANR	3499678	ExpressionStatement	prev = p	3403:6:74604:74612	3498265	158	True				
ANR	3499679	AssignmentExpression	prev = p		3498265	0		=			
ANR	3499680	Identifier	prev		3498265	0					
ANR	3499681	Identifier	p		3498265	1					
ANR	3499682	ExpressionStatement	"num = onig_scan_unsigned_number ( & p , end , enc )"	3404:6:74620:74665	3498265	159	True				
ANR	3499683	AssignmentExpression	"num = onig_scan_unsigned_number ( & p , end , enc )"		3498265	0		=			
ANR	3499684	Identifier	num		3498265	0					
ANR	3499685	CallExpression	"onig_scan_unsigned_number ( & p , end , enc )"		3498265	1					
ANR	3499686	Callee	onig_scan_unsigned_number		3498265	0					
ANR	3499687	Identifier	onig_scan_unsigned_number		3498265	0					
ANR	3499688	ArgumentList	& p		3498265	1					
ANR	3499689	Argument	& p		3498265	0					
ANR	3499690	UnaryOperationExpression	& p		3498265	0					
ANR	3499691	UnaryOperator	&		3498265	0					
ANR	3499692	Identifier	p		3498265	1					
ANR	3499693	Argument	end		3498265	1					
ANR	3499694	Identifier	end		3498265	0					
ANR	3499695	Argument	enc		3498265	2					
ANR	3499696	Identifier	enc		3498265	0					
ANR	3499697	IfStatement	if ( num < 0 || num > ONIG_MAX_BACKREF_NUM )		3498265	160					
ANR	3499698	Condition	num < 0 || num > ONIG_MAX_BACKREF_NUM	3405:10:74677:74713	3498265	0	True				
ANR	3499699	OrExpression	num < 0 || num > ONIG_MAX_BACKREF_NUM		3498265	0		||			
ANR	3499700	RelationalExpression	num < 0		3498265	0		<			
ANR	3499701	Identifier	num		3498265	0					
ANR	3499702	PrimaryExpression	0		3498265	1					
ANR	3499703	RelationalExpression	num > ONIG_MAX_BACKREF_NUM		3498265	1		>			
ANR	3499704	Identifier	num		3498265	0					
ANR	3499705	Identifier	ONIG_MAX_BACKREF_NUM		3498265	1					
ANR	3499706	CompoundStatement		279:49:7415:7415	3498265	1					
ANR	3499707	GotoStatement	goto skip_backref ;	3406:8:74726:74743	3498265	0	True				
ANR	3499708	Identifier	skip_backref		3498265	0					
ANR	3499709	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DECIMAL_BACKREF ) && ( num <= env -> num_mem || num <= 9 ) )"		3498265	161					
ANR	3499710	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DECIMAL_BACKREF ) && ( num <= env -> num_mem || num <= 9 )"	3409:10:74764:74850	3498265	0	True				
ANR	3499711	AndExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DECIMAL_BACKREF ) && ( num <= env -> num_mem || num <= 9 )"		3498265	0		&&			
ANR	3499712	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DECIMAL_BACKREF )"		3498265	0					
ANR	3499713	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3499714	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3499715	ArgumentList	syn		3498265	1					
ANR	3499716	Argument	syn		3498265	0					
ANR	3499717	Identifier	syn		3498265	0					
ANR	3499718	Argument	ONIG_SYN_OP_DECIMAL_BACKREF		3498265	1					
ANR	3499719	Identifier	ONIG_SYN_OP_DECIMAL_BACKREF		3498265	0					
ANR	3499720	OrExpression	num <= env -> num_mem || num <= 9		3498265	1		||			
ANR	3499721	RelationalExpression	num <= env -> num_mem		3498265	0		<=			
ANR	3499722	Identifier	num		3498265	0					
ANR	3499723	PtrMemberAccess	env -> num_mem		3498265	1					
ANR	3499724	Identifier	env		3498265	0					
ANR	3499725	Identifier	num_mem		3498265	1					
ANR	3499726	RelationalExpression	num <= 9		3498265	1		<=			
ANR	3499727	Identifier	num		3498265	0					
ANR	3499728	PrimaryExpression	9		3498265	1					
ANR	3499729	CompoundStatement		284:38:7552:7552	3498265	1					
ANR	3499730	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF ) )"		3498265	0					
ANR	3499731	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"	3411:5:74892:74939	3498265	0	True				
ANR	3499732	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"		3498265	0					
ANR	3499733	Callee	IS_SYNTAX_BV		3498265	0					
ANR	3499734	Identifier	IS_SYNTAX_BV		3498265	0					
ANR	3499735	ArgumentList	syn		3498265	1					
ANR	3499736	Argument	syn		3498265	0					
ANR	3499737	Identifier	syn		3498265	0					
ANR	3499738	Argument	ONIG_SYN_STRICT_CHECK_BACKREF		3498265	1					
ANR	3499739	Identifier	ONIG_SYN_STRICT_CHECK_BACKREF		3498265	0					
ANR	3499740	CompoundStatement		285:55:7641:7641	3498265	1					
ANR	3499741	IfStatement	if ( num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ num ] ) )		3498265	0					
ANR	3499742	Condition	num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ num ] )	3412:7:74951:75008	3498265	0	True				
ANR	3499743	OrExpression	num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ num ] )		3498265	0		||			
ANR	3499744	RelationalExpression	num > env -> num_mem		3498265	0		>			
ANR	3499745	Identifier	num		3498265	0					
ANR	3499746	PtrMemberAccess	env -> num_mem		3498265	1					
ANR	3499747	Identifier	env		3498265	0					
ANR	3499748	Identifier	num_mem		3498265	1					
ANR	3499749	CallExpression	IS_NULL ( SCANENV_MEM_NODES ( env ) [ num ] )		3498265	1					
ANR	3499750	Callee	IS_NULL		3498265	0					
ANR	3499751	Identifier	IS_NULL		3498265	0					
ANR	3499752	ArgumentList	SCANENV_MEM_NODES ( env ) [ num ]		3498265	1					
ANR	3499753	Argument	SCANENV_MEM_NODES ( env ) [ num ]		3498265	0					
ANR	3499754	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ num ]		3498265	0					
ANR	3499755	CallExpression	SCANENV_MEM_NODES ( env )		3498265	0					
ANR	3499756	Callee	SCANENV_MEM_NODES		3498265	0					
ANR	3499757	Identifier	SCANENV_MEM_NODES		3498265	0					
ANR	3499758	ArgumentList	env		3498265	1					
ANR	3499759	Argument	env		3498265	0					
ANR	3499760	Identifier	env		3498265	0					
ANR	3499761	Identifier	num		3498265	1					
ANR	3499762	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3413:5:75016:75046	3498265	1	True				
ANR	3499763	Identifier	ONIGERR_INVALID_BACKREF		3498265	0					
ANR	3499764	ExpressionStatement	tok -> type = TK_BACKREF	3416:1:75053:75075	3498265	1	True				
ANR	3499765	AssignmentExpression	tok -> type = TK_BACKREF		3498265	0		=			
ANR	3499766	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499767	Identifier	tok		3498265	0					
ANR	3499768	Identifier	type		3498265	1					
ANR	3499769	Identifier	TK_BACKREF		3498265	1					
ANR	3499770	ExpressionStatement	tok -> u . backref . num = 1	3417:1:75078:75104	3498265	2	True				
ANR	3499771	AssignmentExpression	tok -> u . backref . num = 1		3498265	0		=			
ANR	3499772	MemberAccess	tok -> u . backref . num		3498265	0					
ANR	3499773	MemberAccess	tok -> u . backref		3498265	0					
ANR	3499774	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499775	Identifier	tok		3498265	0					
ANR	3499776	Identifier	u		3498265	1					
ANR	3499777	Identifier	backref		3498265	1					
ANR	3499778	Identifier	num		3498265	1					
ANR	3499779	PrimaryExpression	1		3498265	1					
ANR	3499780	ExpressionStatement	tok -> u . backref . ref1 = num	3418:1:75107:75135	3498265	3	True				
ANR	3499781	AssignmentExpression	tok -> u . backref . ref1 = num		3498265	0		=			
ANR	3499782	MemberAccess	tok -> u . backref . ref1		3498265	0					
ANR	3499783	MemberAccess	tok -> u . backref		3498265	0					
ANR	3499784	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499785	Identifier	tok		3498265	0					
ANR	3499786	Identifier	u		3498265	1					
ANR	3499787	Identifier	backref		3498265	1					
ANR	3499788	Identifier	ref1		3498265	1					
ANR	3499789	Identifier	num		3498265	1					
ANR	3499790	ExpressionStatement	tok -> u . backref . by_name = 0	3419:1:75138:75164	3498265	4	True				
ANR	3499791	AssignmentExpression	tok -> u . backref . by_name = 0		3498265	0		=			
ANR	3499792	MemberAccess	tok -> u . backref . by_name		3498265	0					
ANR	3499793	MemberAccess	tok -> u . backref		3498265	0					
ANR	3499794	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499795	Identifier	tok		3498265	0					
ANR	3499796	Identifier	u		3498265	1					
ANR	3499797	Identifier	backref		3498265	1					
ANR	3499798	Identifier	by_name		3498265	1					
ANR	3499799	PrimaryExpression	0		3498265	1					
ANR	3499800	ExpressionStatement	tok -> u . backref . exist_level = 0	3421:1:75197:75227	3498265	5	True				
ANR	3499801	AssignmentExpression	tok -> u . backref . exist_level = 0		3498265	0		=			
ANR	3499802	MemberAccess	tok -> u . backref . exist_level		3498265	0					
ANR	3499803	MemberAccess	tok -> u . backref		3498265	0					
ANR	3499804	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499805	Identifier	tok		3498265	0					
ANR	3499806	Identifier	u		3498265	1					
ANR	3499807	Identifier	backref		3498265	1					
ANR	3499808	Identifier	exist_level		3498265	1					
ANR	3499809	PrimaryExpression	0		3498265	1					
ANR	3499810	BreakStatement	break ;	3423:1:75237:75242	3498265	6	True				
ANR	3499811	Label	skip_backref :	3426:4:75257:75269	3498265	162	True				
ANR	3499812	Identifier	skip_backref		3498265	0					
ANR	3499813	IfStatement	if ( c == '8' || c == '9' )		3498265	163					
ANR	3499814	Condition	c == '8' || c == '9'	3427:10:75281:75300	3498265	0	True				
ANR	3499815	OrExpression	c == '8' || c == '9'		3498265	0		||			
ANR	3499816	EqualityExpression	c == '8'		3498265	0		==			
ANR	3499817	Identifier	c		3498265	0					
ANR	3499818	PrimaryExpression	'8'		3498265	1					
ANR	3499819	EqualityExpression	c == '9'		3498265	1		==			
ANR	3499820	Identifier	c		3498265	0					
ANR	3499821	PrimaryExpression	'9'		3498265	1					
ANR	3499822	CompoundStatement		301:32:8002:8002	3498265	1					
ANR	3499823	ExpressionStatement	p = prev	3429:1:75325:75333	3498265	0	True				
ANR	3499824	AssignmentExpression	p = prev		3498265	0		=			
ANR	3499825	Identifier	p		3498265	0					
ANR	3499826	Identifier	prev		3498265	1					
ANR	3499827	ExpressionStatement	PINC	3429:11:75335:75339	3498265	1	True				
ANR	3499828	Identifier	PINC		3498265	0					
ANR	3499829	BreakStatement	break ;	3430:1:75342:75347	3498265	2	True				
ANR	3499830	ExpressionStatement	p = prev	3433:6:75364:75372	3498265	164	True				
ANR	3499831	AssignmentExpression	p = prev		3498265	0		=			
ANR	3499832	Identifier	p		3498265	0					
ANR	3499833	Identifier	prev		3498265	1					
ANR	3499834	Label	case '0' :	3435:4:75403:75411	3498265	165	True				
ANR	3499835	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 ) )"		3498265	166					
ANR	3499836	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 )"	3436:10:75423:75463	3498265	0	True				
ANR	3499837	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 )"		3498265	0					
ANR	3499838	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3499839	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3499840	ArgumentList	syn		3498265	1					
ANR	3499841	Argument	syn		3498265	0					
ANR	3499842	Identifier	syn		3498265	0					
ANR	3499843	Argument	ONIG_SYN_OP_ESC_OCTAL3		3498265	1					
ANR	3499844	Identifier	ONIG_SYN_OP_ESC_OCTAL3		3498265	0					
ANR	3499845	CompoundStatement		310:53:8165:8165	3498265	1					
ANR	3499846	ExpressionStatement	prev = p	3437:1:75469:75477	3498265	0	True				
ANR	3499847	AssignmentExpression	prev = p		3498265	0		=			
ANR	3499848	Identifier	prev		3498265	0					
ANR	3499849	Identifier	p		3498265	1					
ANR	3499850	ExpressionStatement	"num = scan_unsigned_octal_number ( & p , end , ( c == '0' ? 2 : 3 ) , enc )"	3438:1:75480:75544	3498265	1	True				
ANR	3499851	AssignmentExpression	"num = scan_unsigned_octal_number ( & p , end , ( c == '0' ? 2 : 3 ) , enc )"		3498265	0		=			
ANR	3499852	Identifier	num		3498265	0					
ANR	3499853	CallExpression	"scan_unsigned_octal_number ( & p , end , ( c == '0' ? 2 : 3 ) , enc )"		3498265	1					
ANR	3499854	Callee	scan_unsigned_octal_number		3498265	0					
ANR	3499855	Identifier	scan_unsigned_octal_number		3498265	0					
ANR	3499856	ArgumentList	& p		3498265	1					
ANR	3499857	Argument	& p		3498265	0					
ANR	3499858	UnaryOperationExpression	& p		3498265	0					
ANR	3499859	UnaryOperator	&		3498265	0					
ANR	3499860	Identifier	p		3498265	1					
ANR	3499861	Argument	end		3498265	1					
ANR	3499862	Identifier	end		3498265	0					
ANR	3499863	Argument	c == '0' ? 2 : 3		3498265	2					
ANR	3499864	ConditionalExpression	c == '0' ? 2 : 3		3498265	0					
ANR	3499865	Condition	c == '0'		3498265	0					
ANR	3499866	EqualityExpression	c == '0'		3498265	0		==			
ANR	3499867	Identifier	c		3498265	0					
ANR	3499868	PrimaryExpression	'0'		3498265	1					
ANR	3499869	PrimaryExpression	2		3498265	1					
ANR	3499870	PrimaryExpression	3		3498265	2					
ANR	3499871	Argument	enc		3498265	3					
ANR	3499872	Identifier	enc		3498265	0					
ANR	3499873	IfStatement	if ( num < 0 )		3498265	2					
ANR	3499874	Condition	num < 0	3439:5:75551:75557	3498265	0	True				
ANR	3499875	RelationalExpression	num < 0		3498265	0		<			
ANR	3499876	Identifier	num		3498265	0					
ANR	3499877	PrimaryExpression	0		3498265	1					
ANR	3499878	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3439:14:75560:75589	3498265	1	True				
ANR	3499879	Identifier	ONIGERR_TOO_BIG_NUMBER		3498265	0					
ANR	3499880	IfStatement	if ( p == prev )		3498265	3					
ANR	3499881	Condition	p == prev	3440:5:75596:75604	3498265	0	True				
ANR	3499882	EqualityExpression	p == prev		3498265	0		==			
ANR	3499883	Identifier	p		3498265	0					
ANR	3499884	Identifier	prev		3498265	1					
ANR	3499885	CompoundStatement		314:16:8306:8306	3498265	1					
ANR	3499886	ExpressionStatement	num = 0	3441:3:75639:75646	3498265	0	True				
ANR	3499887	AssignmentExpression	num = 0		3498265	0		=			
ANR	3499888	Identifier	num		3498265	0					
ANR	3499889	PrimaryExpression	0		3498265	1					
ANR	3499890	ExpressionStatement	tok -> type = TK_RAW_BYTE	3443:1:75678:75701	3498265	4	True				
ANR	3499891	AssignmentExpression	tok -> type = TK_RAW_BYTE		3498265	0		=			
ANR	3499892	PtrMemberAccess	tok -> type		3498265	0					
ANR	3499893	Identifier	tok		3498265	0					
ANR	3499894	Identifier	type		3498265	1					
ANR	3499895	Identifier	TK_RAW_BYTE		3498265	1					
ANR	3499896	ExpressionStatement	tok -> base = 8	3444:1:75704:75717	3498265	5	True				
ANR	3499897	AssignmentExpression	tok -> base = 8		3498265	0		=			
ANR	3499898	PtrMemberAccess	tok -> base		3498265	0					
ANR	3499899	Identifier	tok		3498265	0					
ANR	3499900	Identifier	base		3498265	1					
ANR	3499901	PrimaryExpression	8		3498265	1					
ANR	3499902	ExpressionStatement	tok -> u . c = num	3445:1:75720:75735	3498265	6	True				
ANR	3499903	AssignmentExpression	tok -> u . c = num		3498265	0		=			
ANR	3499904	MemberAccess	tok -> u . c		3498265	0					
ANR	3499905	PtrMemberAccess	tok -> u		3498265	0					
ANR	3499906	Identifier	tok		3498265	0					
ANR	3499907	Identifier	u		3498265	1					
ANR	3499908	Identifier	c		3498265	1					
ANR	3499909	Identifier	num		3498265	1					
ANR	3499910	ElseStatement	else		3498265	0					
ANR	3499911	IfStatement	if ( c != '0' )		3498265	0					
ANR	3499912	Condition	c != '0'	3447:15:75760:75767	3498265	0	True				
ANR	3499913	EqualityExpression	c != '0'		3498265	0		!=			
ANR	3499914	Identifier	c		3498265	0					
ANR	3499915	PrimaryExpression	'0'		3498265	1					
ANR	3499916	CompoundStatement		321:25:8469:8469	3498265	1					
ANR	3499917	ExpressionStatement	PINC	3448:1:75773:75777	3498265	0	True				
ANR	3499918	Identifier	PINC		3498265	0					
ANR	3499919	BreakStatement	break ;	3450:6:75793:75798	3498265	167	True				
ANR	3499920	Label	case 'k' :	3453:4:75828:75836	3498265	168	True				
ANR	3499921	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_K_NAMED_BACKREF ) )"		3498265	169					
ANR	3499922	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_K_NAMED_BACKREF )"	3454:10:75848:75899	3498265	0	True				
ANR	3499923	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_K_NAMED_BACKREF )"		3498265	0					
ANR	3499924	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3499925	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3499926	ArgumentList	syn		3498265	1					
ANR	3499927	Argument	syn		3498265	0					
ANR	3499928	Identifier	syn		3498265	0					
ANR	3499929	Argument	ONIG_SYN_OP2_ESC_K_NAMED_BACKREF		3498265	1					
ANR	3499930	Identifier	ONIG_SYN_OP2_ESC_K_NAMED_BACKREF		3498265	0					
ANR	3499931	CompoundStatement		328:64:8601:8601	3498265	1					
ANR	3499932	ExpressionStatement	PFETCH ( c )	3455:1:75905:75914	3498265	0	True				
ANR	3499933	CallExpression	PFETCH ( c )		3498265	0					
ANR	3499934	Callee	PFETCH		3498265	0					
ANR	3499935	Identifier	PFETCH		3498265	0					
ANR	3499936	ArgumentList	c		3498265	1					
ANR	3499937	Argument	c		3498265	0					
ANR	3499938	Identifier	c		3498265	0					
ANR	3499939	IfStatement	if ( c == '<' || c == '\\'' )		3498265	1					
ANR	3499940	Condition	c == '<' || c == '\\''	3456:5:75921:75941	3498265	0	True				
ANR	3499941	OrExpression	c == '<' || c == '\\''		3498265	0		||			
ANR	3499942	EqualityExpression	c == '<'		3498265	0		==			
ANR	3499943	Identifier	c		3498265	0					
ANR	3499944	PrimaryExpression	'<'		3498265	1					
ANR	3499945	EqualityExpression	c == '\\''		3498265	1		==			
ANR	3499946	Identifier	c		3498265	0					
ANR	3499947	PrimaryExpression	'\\''		3498265	1					
ANR	3499948	CompoundStatement		333:3:8683:8695	3498265	1					
ANR	3499949	IdentifierDeclStatement	UChar * name_end ;	3457:3:75949:75964	3498265	0	True				
ANR	3499950	IdentifierDecl	* name_end		3498265	0					
ANR	3499951	IdentifierDeclType	UChar *		3498265	0					
ANR	3499952	Identifier	name_end		3498265	1					
ANR	3499953	IdentifierDeclStatement	int * backs ;	3458:3:75969:75979	3498265	1	True				
ANR	3499954	IdentifierDecl	* backs		3498265	0					
ANR	3499955	IdentifierDeclType	int *		3498265	0					
ANR	3499956	Identifier	backs		3498265	1					
ANR	3499957	IdentifierDeclStatement	int back_num ;	3459:3:75984:75996	3498265	2	True				
ANR	3499958	IdentifierDecl	back_num		3498265	0					
ANR	3499959	IdentifierDeclType	int		3498265	0					
ANR	3499960	Identifier	back_num		3498265	1					
ANR	3499961	ExpressionStatement	prev = p	3461:3:76002:76010	3498265	3	True				
ANR	3499962	AssignmentExpression	prev = p		3498265	0		=			
ANR	3499963	Identifier	prev		3498265	0					
ANR	3499964	Identifier	p		3498265	1					
ANR	3499965	ExpressionStatement	name_end = NULL_UCHARP	3464:3:76046:76068	3498265	4	True				
ANR	3499966	AssignmentExpression	name_end = NULL_UCHARP		3498265	0		=			
ANR	3499967	Identifier	name_end		3498265	0					
ANR	3499968	Identifier	NULL_UCHARP		3498265	1					
ANR	3499969	ExpressionStatement	"r = fetch_name_with_level ( ( OnigCodePoint ) c , & p , end , & name_end , env , & back_num , & tok -> u . backref . level )"	3465:3:76108:76219	3498265	5	True				
ANR	3499970	AssignmentExpression	"r = fetch_name_with_level ( ( OnigCodePoint ) c , & p , end , & name_end , env , & back_num , & tok -> u . backref . level )"		3498265	0		=			
ANR	3499971	Identifier	r		3498265	0					
ANR	3499972	CallExpression	"fetch_name_with_level ( ( OnigCodePoint ) c , & p , end , & name_end , env , & back_num , & tok -> u . backref . level )"		3498265	1					
ANR	3499973	Callee	fetch_name_with_level		3498265	0					
ANR	3499974	Identifier	fetch_name_with_level		3498265	0					
ANR	3499975	ArgumentList	( OnigCodePoint ) c		3498265	1					
ANR	3499976	Argument	( OnigCodePoint ) c		3498265	0					
ANR	3499977	CastExpression	( OnigCodePoint ) c		3498265	0					
ANR	3499978	CastTarget	OnigCodePoint		3498265	0					
ANR	3499979	Identifier	c		3498265	1					
ANR	3499980	Argument	& p		3498265	1					
ANR	3499981	UnaryOperationExpression	& p		3498265	0					
ANR	3499982	UnaryOperator	&		3498265	0					
ANR	3499983	Identifier	p		3498265	1					
ANR	3499984	Argument	end		3498265	2					
ANR	3499985	Identifier	end		3498265	0					
ANR	3499986	Argument	& name_end		3498265	3					
ANR	3499987	UnaryOperationExpression	& name_end		3498265	0					
ANR	3499988	UnaryOperator	&		3498265	0					
ANR	3499989	Identifier	name_end		3498265	1					
ANR	3499990	Argument	env		3498265	4					
ANR	3499991	Identifier	env		3498265	0					
ANR	3499992	Argument	& back_num		3498265	5					
ANR	3499993	UnaryOperationExpression	& back_num		3498265	0					
ANR	3499994	UnaryOperator	&		3498265	0					
ANR	3499995	Identifier	back_num		3498265	1					
ANR	3499996	Argument	& tok -> u . backref . level		3498265	6					
ANR	3499997	UnaryOperationExpression	& tok -> u . backref . level		3498265	0					
ANR	3499998	UnaryOperator	&		3498265	0					
ANR	3499999	MemberAccess	tok -> u . backref . level		3498265	1					
ANR	3500000	MemberAccess	tok -> u . backref		3498265	0					
ANR	3500001	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500002	Identifier	tok		3498265	0					
ANR	3500003	Identifier	u		3498265	1					
ANR	3500004	Identifier	backref		3498265	1					
ANR	3500005	Identifier	level		3498265	1					
ANR	3500006	IfStatement	if ( r == 1 )		3498265	6					
ANR	3500007	Condition	r == 1	3467:7:76228:76233	3498265	0	True				
ANR	3500008	EqualityExpression	r == 1		3498265	0		==			
ANR	3500009	Identifier	r		3498265	0					
ANR	3500010	PrimaryExpression	1		3498265	1					
ANR	3500011	ExpressionStatement	tok -> u . backref . exist_level = 1	3467:15:76236:76266	3498265	1	True				
ANR	3500012	AssignmentExpression	tok -> u . backref . exist_level = 1		3498265	0		=			
ANR	3500013	MemberAccess	tok -> u . backref . exist_level		3498265	0					
ANR	3500014	MemberAccess	tok -> u . backref		3498265	0					
ANR	3500015	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500016	Identifier	tok		3498265	0					
ANR	3500017	Identifier	u		3498265	1					
ANR	3500018	Identifier	backref		3498265	1					
ANR	3500019	Identifier	exist_level		3498265	1					
ANR	3500020	PrimaryExpression	1		3498265	1					
ANR	3500021	ElseStatement	else		3498265	0					
ANR	3500022	ExpressionStatement	tok -> u . backref . exist_level = 0	3468:15:76283:76313	3498265	0	True				
ANR	3500023	AssignmentExpression	tok -> u . backref . exist_level = 0		3498265	0		=			
ANR	3500024	MemberAccess	tok -> u . backref . exist_level		3498265	0					
ANR	3500025	MemberAccess	tok -> u . backref		3498265	0					
ANR	3500026	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500027	Identifier	tok		3498265	0					
ANR	3500028	Identifier	u		3498265	1					
ANR	3500029	Identifier	backref		3498265	1					
ANR	3500030	Identifier	exist_level		3498265	1					
ANR	3500031	PrimaryExpression	0		3498265	1					
ANR	3500032	IfStatement	if ( r < 0 )		3498265	7					
ANR	3500033	Condition	r < 0	3472:7:76393:76397	3498265	0	True				
ANR	3500034	RelationalExpression	r < 0		3498265	0		<			
ANR	3500035	Identifier	r		3498265	0					
ANR	3500036	PrimaryExpression	0		3498265	1					
ANR	3500037	ReturnStatement	return r ;	3472:14:76400:76408	3498265	1	True				
ANR	3500038	Identifier	r		3498265	0					
ANR	3500039	IfStatement	if ( back_num != 0 )		3498265	8					
ANR	3500040	Condition	back_num != 0	3474:7:76418:76430	3498265	0	True				
ANR	3500041	EqualityExpression	back_num != 0		3498265	0		!=			
ANR	3500042	Identifier	back_num		3498265	0					
ANR	3500043	PrimaryExpression	0		3498265	1					
ANR	3500044	CompoundStatement		348:22:9132:9132	3498265	1					
ANR	3500045	IfStatement	if ( back_num < 0 )		3498265	0					
ANR	3500046	Condition	back_num < 0	3475:9:76444:76455	3498265	0	True				
ANR	3500047	RelationalExpression	back_num < 0		3498265	0		<			
ANR	3500048	Identifier	back_num		3498265	0					
ANR	3500049	PrimaryExpression	0		3498265	1					
ANR	3500050	CompoundStatement		349:23:9157:9157	3498265	1					
ANR	3500051	ExpressionStatement	"back_num = BACKREF_REL_TO_ABS ( back_num , env )"	3476:7:76467:76511	3498265	0	True				
ANR	3500052	AssignmentExpression	"back_num = BACKREF_REL_TO_ABS ( back_num , env )"		3498265	0		=			
ANR	3500053	Identifier	back_num		3498265	0					
ANR	3500054	CallExpression	"BACKREF_REL_TO_ABS ( back_num , env )"		3498265	1					
ANR	3500055	Callee	BACKREF_REL_TO_ABS		3498265	0					
ANR	3500056	Identifier	BACKREF_REL_TO_ABS		3498265	0					
ANR	3500057	ArgumentList	back_num		3498265	1					
ANR	3500058	Argument	back_num		3498265	0					
ANR	3500059	Identifier	back_num		3498265	0					
ANR	3500060	Argument	env		3498265	1					
ANR	3500061	Identifier	env		3498265	0					
ANR	3500062	IfStatement	if ( back_num <= 0 )		3498265	1					
ANR	3500063	Condition	back_num <= 0	3477:11:76524:76536	3498265	0	True				
ANR	3500064	RelationalExpression	back_num <= 0		3498265	0		<=			
ANR	3500065	Identifier	back_num		3498265	0					
ANR	3500066	PrimaryExpression	0		3498265	1					
ANR	3500067	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3478:2:76541:76571	3498265	1	True				
ANR	3500068	Identifier	ONIGERR_INVALID_BACKREF		3498265	0					
ANR	3500069	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF ) )"		3498265	1					
ANR	3500070	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"	3481:9:76590:76637	3498265	0	True				
ANR	3500071	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"		3498265	0					
ANR	3500072	Callee	IS_SYNTAX_BV		3498265	0					
ANR	3500073	Identifier	IS_SYNTAX_BV		3498265	0					
ANR	3500074	ArgumentList	syn		3498265	1					
ANR	3500075	Argument	syn		3498265	0					
ANR	3500076	Identifier	syn		3498265	0					
ANR	3500077	Argument	ONIG_SYN_STRICT_CHECK_BACKREF		3498265	1					
ANR	3500078	Identifier	ONIG_SYN_STRICT_CHECK_BACKREF		3498265	0					
ANR	3500079	CompoundStatement		355:59:9339:9339	3498265	1					
ANR	3500080	IfStatement	if ( back_num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ back_num ] ) )		3498265	0					
ANR	3500081	Condition	back_num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ back_num ] )	3482:11:76653:76724	3498265	0	True				
ANR	3500082	OrExpression	back_num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ back_num ] )		3498265	0		||			
ANR	3500083	RelationalExpression	back_num > env -> num_mem		3498265	0		>			
ANR	3500084	Identifier	back_num		3498265	0					
ANR	3500085	PtrMemberAccess	env -> num_mem		3498265	1					
ANR	3500086	Identifier	env		3498265	0					
ANR	3500087	Identifier	num_mem		3498265	1					
ANR	3500088	CallExpression	IS_NULL ( SCANENV_MEM_NODES ( env ) [ back_num ] )		3498265	1					
ANR	3500089	Callee	IS_NULL		3498265	0					
ANR	3500090	Identifier	IS_NULL		3498265	0					
ANR	3500091	ArgumentList	SCANENV_MEM_NODES ( env ) [ back_num ]		3498265	1					
ANR	3500092	Argument	SCANENV_MEM_NODES ( env ) [ back_num ]		3498265	0					
ANR	3500093	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ back_num ]		3498265	0					
ANR	3500094	CallExpression	SCANENV_MEM_NODES ( env )		3498265	0					
ANR	3500095	Callee	SCANENV_MEM_NODES		3498265	0					
ANR	3500096	Identifier	SCANENV_MEM_NODES		3498265	0					
ANR	3500097	ArgumentList	env		3498265	1					
ANR	3500098	Argument	env		3498265	0					
ANR	3500099	Identifier	env		3498265	0					
ANR	3500100	Identifier	back_num		3498265	1					
ANR	3500101	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3484:2:76729:76759	3498265	1	True				
ANR	3500102	Identifier	ONIGERR_INVALID_BACKREF		3498265	0					
ANR	3500103	ExpressionStatement	tok -> type = TK_BACKREF	3486:5:76773:76795	3498265	2	True				
ANR	3500104	AssignmentExpression	tok -> type = TK_BACKREF		3498265	0		=			
ANR	3500105	PtrMemberAccess	tok -> type		3498265	0					
ANR	3500106	Identifier	tok		3498265	0					
ANR	3500107	Identifier	type		3498265	1					
ANR	3500108	Identifier	TK_BACKREF		3498265	1					
ANR	3500109	ExpressionStatement	tok -> u . backref . by_name = 0	3487:5:76802:76828	3498265	3	True				
ANR	3500110	AssignmentExpression	tok -> u . backref . by_name = 0		3498265	0		=			
ANR	3500111	MemberAccess	tok -> u . backref . by_name		3498265	0					
ANR	3500112	MemberAccess	tok -> u . backref		3498265	0					
ANR	3500113	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500114	Identifier	tok		3498265	0					
ANR	3500115	Identifier	u		3498265	1					
ANR	3500116	Identifier	backref		3498265	1					
ANR	3500117	Identifier	by_name		3498265	1					
ANR	3500118	PrimaryExpression	0		3498265	1					
ANR	3500119	ExpressionStatement	tok -> u . backref . num = 1	3488:5:76835:76858	3498265	4	True				
ANR	3500120	AssignmentExpression	tok -> u . backref . num = 1		3498265	0		=			
ANR	3500121	MemberAccess	tok -> u . backref . num		3498265	0					
ANR	3500122	MemberAccess	tok -> u . backref		3498265	0					
ANR	3500123	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500124	Identifier	tok		3498265	0					
ANR	3500125	Identifier	u		3498265	1					
ANR	3500126	Identifier	backref		3498265	1					
ANR	3500127	Identifier	num		3498265	1					
ANR	3500128	PrimaryExpression	1		3498265	1					
ANR	3500129	ExpressionStatement	tok -> u . backref . ref1 = back_num	3489:5:76865:76895	3498265	5	True				
ANR	3500130	AssignmentExpression	tok -> u . backref . ref1 = back_num		3498265	0		=			
ANR	3500131	MemberAccess	tok -> u . backref . ref1		3498265	0					
ANR	3500132	MemberAccess	tok -> u . backref		3498265	0					
ANR	3500133	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500134	Identifier	tok		3498265	0					
ANR	3500135	Identifier	u		3498265	1					
ANR	3500136	Identifier	backref		3498265	1					
ANR	3500137	Identifier	ref1		3498265	1					
ANR	3500138	Identifier	back_num		3498265	1					
ANR	3500139	ElseStatement	else		3498265	0					
ANR	3500140	CompoundStatement		365:8:9609:9609	3498265	0					
ANR	3500141	ExpressionStatement	"num = onig_name_to_group_numbers ( env -> reg , prev , name_end , & backs )"	3492:5:76917:76983	3498265	0	True				
ANR	3500142	AssignmentExpression	"num = onig_name_to_group_numbers ( env -> reg , prev , name_end , & backs )"		3498265	0		=			
ANR	3500143	Identifier	num		3498265	0					
ANR	3500144	CallExpression	"onig_name_to_group_numbers ( env -> reg , prev , name_end , & backs )"		3498265	1					
ANR	3500145	Callee	onig_name_to_group_numbers		3498265	0					
ANR	3500146	Identifier	onig_name_to_group_numbers		3498265	0					
ANR	3500147	ArgumentList	env -> reg		3498265	1					
ANR	3500148	Argument	env -> reg		3498265	0					
ANR	3500149	PtrMemberAccess	env -> reg		3498265	0					
ANR	3500150	Identifier	env		3498265	0					
ANR	3500151	Identifier	reg		3498265	1					
ANR	3500152	Argument	prev		3498265	1					
ANR	3500153	Identifier	prev		3498265	0					
ANR	3500154	Argument	name_end		3498265	2					
ANR	3500155	Identifier	name_end		3498265	0					
ANR	3500156	Argument	& backs		3498265	3					
ANR	3500157	UnaryOperationExpression	& backs		3498265	0					
ANR	3500158	UnaryOperator	&		3498265	0					
ANR	3500159	Identifier	backs		3498265	1					
ANR	3500160	IfStatement	if ( num <= 0 )		3498265	1					
ANR	3500161	Condition	num <= 0	3493:9:76994:77001	3498265	0	True				
ANR	3500162	RelationalExpression	num <= 0		3498265	0		<=			
ANR	3500163	Identifier	num		3498265	0					
ANR	3500164	PrimaryExpression	0		3498265	1					
ANR	3500165	CompoundStatement		367:19:9703:9703	3498265	1					
ANR	3500166	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , prev , name_end )"	3494:7:77013:77106	3498265	0	True				
ANR	3500167	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , prev , name_end )"		3498265	0					
ANR	3500168	Callee	onig_scan_env_set_error_string		3498265	0					
ANR	3500169	Identifier	onig_scan_env_set_error_string		3498265	0					
ANR	3500170	ArgumentList	env		3498265	1					
ANR	3500171	Argument	env		3498265	0					
ANR	3500172	Identifier	env		3498265	0					
ANR	3500173	Argument	ONIGERR_UNDEFINED_NAME_REFERENCE		3498265	1					
ANR	3500174	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		3498265	0					
ANR	3500175	Argument	prev		3498265	2					
ANR	3500176	Identifier	prev		3498265	0					
ANR	3500177	Argument	name_end		3498265	3					
ANR	3500178	Identifier	name_end		3498265	0					
ANR	3500179	ReturnStatement	return ONIGERR_UNDEFINED_NAME_REFERENCE ;	3496:7:77115:77154	3498265	1	True				
ANR	3500180	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		3498265	0					
ANR	3500181	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF ) )"		3498265	2					
ANR	3500182	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"	3498:9:77172:77219	3498265	0	True				
ANR	3500183	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"		3498265	0					
ANR	3500184	Callee	IS_SYNTAX_BV		3498265	0					
ANR	3500185	Identifier	IS_SYNTAX_BV		3498265	0					
ANR	3500186	ArgumentList	syn		3498265	1					
ANR	3500187	Argument	syn		3498265	0					
ANR	3500188	Identifier	syn		3498265	0					
ANR	3500189	Argument	ONIG_SYN_STRICT_CHECK_BACKREF		3498265	1					
ANR	3500190	Identifier	ONIG_SYN_STRICT_CHECK_BACKREF		3498265	0					
ANR	3500191	CompoundStatement		373:7:9930:9935	3498265	1					
ANR	3500192	IdentifierDeclStatement	int i ;	3499:7:77231:77236	3498265	0	True				
ANR	3500193	IdentifierDecl	i		3498265	0					
ANR	3500194	IdentifierDeclType	int		3498265	0					
ANR	3500195	Identifier	i		3498265	1					
ANR	3500196	ForStatement	for ( i = 0 ; i < num ; i ++ )		3498265	1					
ANR	3500197	ForInit	i = 0 ;	3500:12:77250:77255	3498265	0	True				
ANR	3500198	AssignmentExpression	i = 0		3498265	0		=			
ANR	3500199	Identifier	i		3498265	0					
ANR	3500200	PrimaryExpression	0		3498265	1					
ANR	3500201	Condition	i < num	3500:19:77257:77263	3498265	1	True				
ANR	3500202	RelationalExpression	i < num		3498265	0		<			
ANR	3500203	Identifier	i		3498265	0					
ANR	3500204	Identifier	num		3498265	1					
ANR	3500205	PostIncDecOperationExpression	i ++	3500:28:77266:77268	3498265	2	True				
ANR	3500206	Identifier	i		3498265	0					
ANR	3500207	IncDec	++		3498265	1					
ANR	3500208	CompoundStatement		374:33:9970:9970	3498265	3					
ANR	3500209	IfStatement	if ( backs [ i ] > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ backs [ i ] ] ) )		3498265	0					
ANR	3500210	Condition	backs [ i ] > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ backs [ i ] ] )	3501:6:77279:77352	3498265	0	True				
ANR	3500211	OrExpression	backs [ i ] > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ backs [ i ] ] )		3498265	0		||			
ANR	3500212	RelationalExpression	backs [ i ] > env -> num_mem		3498265	0		>			
ANR	3500213	ArrayIndexing	backs [ i ]		3498265	0					
ANR	3500214	Identifier	backs		3498265	0					
ANR	3500215	Identifier	i		3498265	1					
ANR	3500216	PtrMemberAccess	env -> num_mem		3498265	1					
ANR	3500217	Identifier	env		3498265	0					
ANR	3500218	Identifier	num_mem		3498265	1					
ANR	3500219	CallExpression	IS_NULL ( SCANENV_MEM_NODES ( env ) [ backs [ i ] ] )		3498265	1					
ANR	3500220	Callee	IS_NULL		3498265	0					
ANR	3500221	Identifier	IS_NULL		3498265	0					
ANR	3500222	ArgumentList	SCANENV_MEM_NODES ( env ) [ backs [ i ] ]		3498265	1					
ANR	3500223	Argument	SCANENV_MEM_NODES ( env ) [ backs [ i ] ]		3498265	0					
ANR	3500224	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ backs [ i ] ]		3498265	0					
ANR	3500225	CallExpression	SCANENV_MEM_NODES ( env )		3498265	0					
ANR	3500226	Callee	SCANENV_MEM_NODES		3498265	0					
ANR	3500227	Identifier	SCANENV_MEM_NODES		3498265	0					
ANR	3500228	ArgumentList	env		3498265	1					
ANR	3500229	Argument	env		3498265	0					
ANR	3500230	Identifier	env		3498265	0					
ANR	3500231	ArrayIndexing	backs [ i ]		3498265	1					
ANR	3500232	Identifier	backs		3498265	0					
ANR	3500233	Identifier	i		3498265	1					
ANR	3500234	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3503:4:77359:77389	3498265	1	True				
ANR	3500235	Identifier	ONIGERR_INVALID_BACKREF		3498265	0					
ANR	3500236	ExpressionStatement	tok -> type = TK_BACKREF	3507:5:77413:77435	3498265	3	True				
ANR	3500237	AssignmentExpression	tok -> type = TK_BACKREF		3498265	0		=			
ANR	3500238	PtrMemberAccess	tok -> type		3498265	0					
ANR	3500239	Identifier	tok		3498265	0					
ANR	3500240	Identifier	type		3498265	1					
ANR	3500241	Identifier	TK_BACKREF		3498265	1					
ANR	3500242	ExpressionStatement	tok -> u . backref . by_name = 1	3508:5:77442:77468	3498265	4	True				
ANR	3500243	AssignmentExpression	tok -> u . backref . by_name = 1		3498265	0		=			
ANR	3500244	MemberAccess	tok -> u . backref . by_name		3498265	0					
ANR	3500245	MemberAccess	tok -> u . backref		3498265	0					
ANR	3500246	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500247	Identifier	tok		3498265	0					
ANR	3500248	Identifier	u		3498265	1					
ANR	3500249	Identifier	backref		3498265	1					
ANR	3500250	Identifier	by_name		3498265	1					
ANR	3500251	PrimaryExpression	1		3498265	1					
ANR	3500252	IfStatement	if ( num == 1 )		3498265	5					
ANR	3500253	Condition	num == 1	3509:9:77479:77486	3498265	0	True				
ANR	3500254	EqualityExpression	num == 1		3498265	0		==			
ANR	3500255	Identifier	num		3498265	0					
ANR	3500256	PrimaryExpression	1		3498265	1					
ANR	3500257	CompoundStatement		383:19:10188:10188	3498265	1					
ANR	3500258	ExpressionStatement	tok -> u . backref . num = 1	3510:7:77498:77521	3498265	0	True				
ANR	3500259	AssignmentExpression	tok -> u . backref . num = 1		3498265	0		=			
ANR	3500260	MemberAccess	tok -> u . backref . num		3498265	0					
ANR	3500261	MemberAccess	tok -> u . backref		3498265	0					
ANR	3500262	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500263	Identifier	tok		3498265	0					
ANR	3500264	Identifier	u		3498265	1					
ANR	3500265	Identifier	backref		3498265	1					
ANR	3500266	Identifier	num		3498265	1					
ANR	3500267	PrimaryExpression	1		3498265	1					
ANR	3500268	ExpressionStatement	tok -> u . backref . ref1 = backs [ 0 ]	3511:7:77530:77560	3498265	1	True				
ANR	3500269	AssignmentExpression	tok -> u . backref . ref1 = backs [ 0 ]		3498265	0		=			
ANR	3500270	MemberAccess	tok -> u . backref . ref1		3498265	0					
ANR	3500271	MemberAccess	tok -> u . backref		3498265	0					
ANR	3500272	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500273	Identifier	tok		3498265	0					
ANR	3500274	Identifier	u		3498265	1					
ANR	3500275	Identifier	backref		3498265	1					
ANR	3500276	Identifier	ref1		3498265	1					
ANR	3500277	ArrayIndexing	backs [ 0 ]		3498265	1					
ANR	3500278	Identifier	backs		3498265	0					
ANR	3500279	PrimaryExpression	0		3498265	1					
ANR	3500280	ElseStatement	else		3498265	0					
ANR	3500281	CompoundStatement		387:10:10278:10278	3498265	0					
ANR	3500282	ExpressionStatement	tok -> u . backref . num = num	3514:7:77588:77613	3498265	0	True				
ANR	3500283	AssignmentExpression	tok -> u . backref . num = num		3498265	0		=			
ANR	3500284	MemberAccess	tok -> u . backref . num		3498265	0					
ANR	3500285	MemberAccess	tok -> u . backref		3498265	0					
ANR	3500286	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500287	Identifier	tok		3498265	0					
ANR	3500288	Identifier	u		3498265	1					
ANR	3500289	Identifier	backref		3498265	1					
ANR	3500290	Identifier	num		3498265	1					
ANR	3500291	Identifier	num		3498265	1					
ANR	3500292	ExpressionStatement	tok -> u . backref . refs = backs	3515:7:77622:77649	3498265	1	True				
ANR	3500293	AssignmentExpression	tok -> u . backref . refs = backs		3498265	0		=			
ANR	3500294	MemberAccess	tok -> u . backref . refs		3498265	0					
ANR	3500295	MemberAccess	tok -> u . backref		3498265	0					
ANR	3500296	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500297	Identifier	tok		3498265	0					
ANR	3500298	Identifier	u		3498265	1					
ANR	3500299	Identifier	backref		3498265	1					
ANR	3500300	Identifier	refs		3498265	1					
ANR	3500301	Identifier	backs		3498265	1					
ANR	3500302	ElseStatement	else		3498265	0					
ANR	3500303	ExpressionStatement	PUNFETCH	3520:3:77675:77683	3498265	0	True				
ANR	3500304	Identifier	PUNFETCH		3498265	0					
ANR	3500305	BreakStatement	break ;	3522:6:77699:77704	3498265	170	True				
ANR	3500306	Label	case 'g' :	3526:4:77741:77749	3498265	171	True				
ANR	3500307	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_G_SUBEXP_CALL ) )"		3498265	172					
ANR	3500308	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_G_SUBEXP_CALL )"	3527:10:77761:77810	3498265	0	True				
ANR	3500309	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_G_SUBEXP_CALL )"		3498265	0					
ANR	3500310	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3500311	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3500312	ArgumentList	syn		3498265	1					
ANR	3500313	Argument	syn		3498265	0					
ANR	3500314	Identifier	syn		3498265	0					
ANR	3500315	Argument	ONIG_SYN_OP2_ESC_G_SUBEXP_CALL		3498265	1					
ANR	3500316	Identifier	ONIG_SYN_OP2_ESC_G_SUBEXP_CALL		3498265	0					
ANR	3500317	CompoundStatement		401:62:10512:10512	3498265	1					
ANR	3500318	ExpressionStatement	PFETCH ( c )	3528:1:77816:77825	3498265	0	True				
ANR	3500319	CallExpression	PFETCH ( c )		3498265	0					
ANR	3500320	Callee	PFETCH		3498265	0					
ANR	3500321	Identifier	PFETCH		3498265	0					
ANR	3500322	ArgumentList	c		3498265	1					
ANR	3500323	Argument	c		3498265	0					
ANR	3500324	Identifier	c		3498265	0					
ANR	3500325	IfStatement	if ( c == '<' || c == '\\'' )		3498265	1					
ANR	3500326	Condition	c == '<' || c == '\\''	3529:5:77832:77852	3498265	0	True				
ANR	3500327	OrExpression	c == '<' || c == '\\''		3498265	0		||			
ANR	3500328	EqualityExpression	c == '<'		3498265	0		==			
ANR	3500329	Identifier	c		3498265	0					
ANR	3500330	PrimaryExpression	'<'		3498265	1					
ANR	3500331	EqualityExpression	c == '\\''		3498265	1		==			
ANR	3500332	Identifier	c		3498265	0					
ANR	3500333	PrimaryExpression	'\\''		3498265	1					
ANR	3500334	CompoundStatement		405:3:10572:10587	3498265	1					
ANR	3500335	IdentifierDeclStatement	int gnum ;	3530:3:77860:77868	3498265	0	True				
ANR	3500336	IdentifierDecl	gnum		3498265	0					
ANR	3500337	IdentifierDeclType	int		3498265	0					
ANR	3500338	Identifier	gnum		3498265	1					
ANR	3500339	IdentifierDeclStatement	UChar * name_end ;	3531:3:77873:77888	3498265	1	True				
ANR	3500340	IdentifierDecl	* name_end		3498265	0					
ANR	3500341	IdentifierDeclType	UChar *		3498265	0					
ANR	3500342	Identifier	name_end		3498265	1					
ANR	3500343	ExpressionStatement	prev = p	3533:3:77894:77902	3498265	2	True				
ANR	3500344	AssignmentExpression	prev = p		3498265	0		=			
ANR	3500345	Identifier	prev		3498265	0					
ANR	3500346	Identifier	p		3498265	1					
ANR	3500347	ExpressionStatement	"r = fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & gnum , 1 )"	3534:3:77907:77975	3498265	3	True				
ANR	3500348	AssignmentExpression	"r = fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & gnum , 1 )"		3498265	0		=			
ANR	3500349	Identifier	r		3498265	0					
ANR	3500350	CallExpression	"fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & gnum , 1 )"		3498265	1					
ANR	3500351	Callee	fetch_name		3498265	0					
ANR	3500352	Identifier	fetch_name		3498265	0					
ANR	3500353	ArgumentList	( OnigCodePoint ) c		3498265	1					
ANR	3500354	Argument	( OnigCodePoint ) c		3498265	0					
ANR	3500355	CastExpression	( OnigCodePoint ) c		3498265	0					
ANR	3500356	CastTarget	OnigCodePoint		3498265	0					
ANR	3500357	Identifier	c		3498265	1					
ANR	3500358	Argument	& p		3498265	1					
ANR	3500359	UnaryOperationExpression	& p		3498265	0					
ANR	3500360	UnaryOperator	&		3498265	0					
ANR	3500361	Identifier	p		3498265	1					
ANR	3500362	Argument	end		3498265	2					
ANR	3500363	Identifier	end		3498265	0					
ANR	3500364	Argument	& name_end		3498265	3					
ANR	3500365	UnaryOperationExpression	& name_end		3498265	0					
ANR	3500366	UnaryOperator	&		3498265	0					
ANR	3500367	Identifier	name_end		3498265	1					
ANR	3500368	Argument	env		3498265	4					
ANR	3500369	Identifier	env		3498265	0					
ANR	3500370	Argument	& gnum		3498265	5					
ANR	3500371	UnaryOperationExpression	& gnum		3498265	0					
ANR	3500372	UnaryOperator	&		3498265	0					
ANR	3500373	Identifier	gnum		3498265	1					
ANR	3500374	Argument	1		3498265	6					
ANR	3500375	PrimaryExpression	1		3498265	0					
ANR	3500376	IfStatement	if ( r < 0 )		3498265	4					
ANR	3500377	Condition	r < 0	3535:7:77984:77988	3498265	0	True				
ANR	3500378	RelationalExpression	r < 0		3498265	0		<			
ANR	3500379	Identifier	r		3498265	0					
ANR	3500380	PrimaryExpression	0		3498265	1					
ANR	3500381	ReturnStatement	return r ;	3535:14:77991:77999	3498265	1	True				
ANR	3500382	Identifier	r		3498265	0					
ANR	3500383	ExpressionStatement	tok -> type = TK_CALL	3537:3:78005:78024	3498265	5	True				
ANR	3500384	AssignmentExpression	tok -> type = TK_CALL		3498265	0		=			
ANR	3500385	PtrMemberAccess	tok -> type		3498265	0					
ANR	3500386	Identifier	tok		3498265	0					
ANR	3500387	Identifier	type		3498265	1					
ANR	3500388	Identifier	TK_CALL		3498265	1					
ANR	3500389	ExpressionStatement	tok -> u . call . name = prev	3538:3:78029:78056	3498265	6	True				
ANR	3500390	AssignmentExpression	tok -> u . call . name = prev		3498265	0		=			
ANR	3500391	MemberAccess	tok -> u . call . name		3498265	0					
ANR	3500392	MemberAccess	tok -> u . call		3498265	0					
ANR	3500393	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500394	Identifier	tok		3498265	0					
ANR	3500395	Identifier	u		3498265	1					
ANR	3500396	Identifier	call		3498265	1					
ANR	3500397	Identifier	name		3498265	1					
ANR	3500398	Identifier	prev		3498265	1					
ANR	3500399	ExpressionStatement	tok -> u . call . name_end = name_end	3539:3:78061:78092	3498265	7	True				
ANR	3500400	AssignmentExpression	tok -> u . call . name_end = name_end		3498265	0		=			
ANR	3500401	MemberAccess	tok -> u . call . name_end		3498265	0					
ANR	3500402	MemberAccess	tok -> u . call		3498265	0					
ANR	3500403	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500404	Identifier	tok		3498265	0					
ANR	3500405	Identifier	u		3498265	1					
ANR	3500406	Identifier	call		3498265	1					
ANR	3500407	Identifier	name_end		3498265	1					
ANR	3500408	Identifier	name_end		3498265	1					
ANR	3500409	ExpressionStatement	tok -> u . call . gnum = gnum	3540:3:78097:78124	3498265	8	True				
ANR	3500410	AssignmentExpression	tok -> u . call . gnum = gnum		3498265	0		=			
ANR	3500411	MemberAccess	tok -> u . call . gnum		3498265	0					
ANR	3500412	MemberAccess	tok -> u . call		3498265	0					
ANR	3500413	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500414	Identifier	tok		3498265	0					
ANR	3500415	Identifier	u		3498265	1					
ANR	3500416	Identifier	call		3498265	1					
ANR	3500417	Identifier	gnum		3498265	1					
ANR	3500418	Identifier	gnum		3498265	1					
ANR	3500419	ElseStatement	else		3498265	0					
ANR	3500420	ExpressionStatement	PUNFETCH	3543:3:78138:78146	3498265	0	True				
ANR	3500421	Identifier	PUNFETCH		3498265	0					
ANR	3500422	BreakStatement	break ;	3545:6:78162:78167	3498265	173	True				
ANR	3500423	Label	case 'Q' :	3548:4:78181:78189	3498265	174	True				
ANR	3500424	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE ) )"		3498265	175					
ANR	3500425	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE )"	3549:10:78201:78252	3498265	0	True				
ANR	3500426	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE )"		3498265	0					
ANR	3500427	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3500428	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3500429	ArgumentList	syn		3498265	1					
ANR	3500430	Argument	syn		3498265	0					
ANR	3500431	Identifier	syn		3498265	0					
ANR	3500432	Argument	ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE		3498265	1					
ANR	3500433	Identifier	ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE		3498265	0					
ANR	3500434	CompoundStatement		423:64:10954:10954	3498265	1					
ANR	3500435	ExpressionStatement	tok -> type = TK_QUOTE_OPEN	3550:1:78258:78283	3498265	0	True				
ANR	3500436	AssignmentExpression	tok -> type = TK_QUOTE_OPEN		3498265	0		=			
ANR	3500437	PtrMemberAccess	tok -> type		3498265	0					
ANR	3500438	Identifier	tok		3498265	0					
ANR	3500439	Identifier	type		3498265	1					
ANR	3500440	Identifier	TK_QUOTE_OPEN		3498265	1					
ANR	3500441	BreakStatement	break ;	3552:6:78299:78304	3498265	176	True				
ANR	3500442	Label	case 'p' :	3554:4:78311:78319	3498265	177	True				
ANR	3500443	Label	case 'P' :	3555:4:78325:78333	3498265	178	True				
ANR	3500444	IfStatement	"if ( PPEEK_IS ( '{' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY ) )"		3498265	179					
ANR	3500445	Condition	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"	3556:10:78345:78422	3498265	0	True				
ANR	3500446	AndExpression	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"		3498265	0		&&			
ANR	3500447	CallExpression	PPEEK_IS ( '{' )		3498265	0					
ANR	3500448	Callee	PPEEK_IS		3498265	0					
ANR	3500449	Identifier	PPEEK_IS		3498265	0					
ANR	3500450	ArgumentList	'{'		3498265	1					
ANR	3500451	Argument	'{'		3498265	0					
ANR	3500452	PrimaryExpression	'{'		3498265	0					
ANR	3500453	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"		3498265	1					
ANR	3500454	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3500455	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3500456	ArgumentList	syn		3498265	1					
ANR	3500457	Argument	syn		3498265	0					
ANR	3500458	Identifier	syn		3498265	0					
ANR	3500459	Argument	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		3498265	1					
ANR	3500460	Identifier	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		3498265	0					
ANR	3500461	CompoundStatement		431:63:11124:11124	3498265	1					
ANR	3500462	ExpressionStatement	PINC	3558:1:78428:78432	3498265	0	True				
ANR	3500463	Identifier	PINC		3498265	0					
ANR	3500464	ExpressionStatement	tok -> type = TK_CHAR_PROPERTY	3559:1:78435:78463	3498265	1	True				
ANR	3500465	AssignmentExpression	tok -> type = TK_CHAR_PROPERTY		3498265	0		=			
ANR	3500466	PtrMemberAccess	tok -> type		3498265	0					
ANR	3500467	Identifier	tok		3498265	0					
ANR	3500468	Identifier	type		3498265	1					
ANR	3500469	Identifier	TK_CHAR_PROPERTY		3498265	1					
ANR	3500470	ExpressionStatement	tok -> u . prop . not = ( c == 'P' ? 1 : 0 )	3560:1:78466:78502	3498265	2	True				
ANR	3500471	AssignmentExpression	tok -> u . prop . not = ( c == 'P' ? 1 : 0 )		3498265	0		=			
ANR	3500472	MemberAccess	tok -> u . prop . not		3498265	0					
ANR	3500473	MemberAccess	tok -> u . prop		3498265	0					
ANR	3500474	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500475	Identifier	tok		3498265	0					
ANR	3500476	Identifier	u		3498265	1					
ANR	3500477	Identifier	prop		3498265	1					
ANR	3500478	Identifier	not		3498265	1					
ANR	3500479	ConditionalExpression	c == 'P' ? 1 : 0		3498265	1					
ANR	3500480	Condition	c == 'P'		3498265	0					
ANR	3500481	EqualityExpression	c == 'P'		3498265	0		==			
ANR	3500482	Identifier	c		3498265	0					
ANR	3500483	PrimaryExpression	'P'		3498265	1					
ANR	3500484	PrimaryExpression	1		3498265	1					
ANR	3500485	PrimaryExpression	0		3498265	2					
ANR	3500486	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT ) )"		3498265	3					
ANR	3500487	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT )"	3562:5:78510:78568	3498265	0	True				
ANR	3500488	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT )"		3498265	0					
ANR	3500489	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3500490	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3500491	ArgumentList	syn		3498265	1					
ANR	3500492	Argument	syn		3498265	0					
ANR	3500493	Identifier	syn		3498265	0					
ANR	3500494	Argument	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		3498265	1					
ANR	3500495	Identifier	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		3498265	0					
ANR	3500496	CompoundStatement		436:66:11270:11270	3498265	1					
ANR	3500497	ExpressionStatement	PFETCH ( c )	3563:3:78576:78585	3498265	0	True				
ANR	3500498	CallExpression	PFETCH ( c )		3498265	0					
ANR	3500499	Callee	PFETCH		3498265	0					
ANR	3500500	Identifier	PFETCH		3498265	0					
ANR	3500501	ArgumentList	c		3498265	1					
ANR	3500502	Argument	c		3498265	0					
ANR	3500503	Identifier	c		3498265	0					
ANR	3500504	IfStatement	if ( c == '^' )		3498265	1					
ANR	3500505	Condition	c == '^'	3564:7:78594:78601	3498265	0	True				
ANR	3500506	EqualityExpression	c == '^'		3498265	0		==			
ANR	3500507	Identifier	c		3498265	0					
ANR	3500508	PrimaryExpression	'^'		3498265	1					
ANR	3500509	CompoundStatement		438:17:11303:11303	3498265	1					
ANR	3500510	ExpressionStatement	tok -> u . prop . not = ( tok -> u . prop . not == 0 ? 1 : 0 )	3565:5:78611:78659	3498265	0	True				
ANR	3500511	AssignmentExpression	tok -> u . prop . not = ( tok -> u . prop . not == 0 ? 1 : 0 )		3498265	0		=			
ANR	3500512	MemberAccess	tok -> u . prop . not		3498265	0					
ANR	3500513	MemberAccess	tok -> u . prop		3498265	0					
ANR	3500514	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500515	Identifier	tok		3498265	0					
ANR	3500516	Identifier	u		3498265	1					
ANR	3500517	Identifier	prop		3498265	1					
ANR	3500518	Identifier	not		3498265	1					
ANR	3500519	ConditionalExpression	tok -> u . prop . not == 0 ? 1 : 0		3498265	1					
ANR	3500520	Condition	tok -> u . prop . not == 0		3498265	0					
ANR	3500521	EqualityExpression	tok -> u . prop . not == 0		3498265	0		==			
ANR	3500522	MemberAccess	tok -> u . prop . not		3498265	0					
ANR	3500523	MemberAccess	tok -> u . prop		3498265	0					
ANR	3500524	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500525	Identifier	tok		3498265	0					
ANR	3500526	Identifier	u		3498265	1					
ANR	3500527	Identifier	prop		3498265	1					
ANR	3500528	Identifier	not		3498265	1					
ANR	3500529	PrimaryExpression	0		3498265	1					
ANR	3500530	PrimaryExpression	1		3498265	1					
ANR	3500531	PrimaryExpression	0		3498265	2					
ANR	3500532	ElseStatement	else		3498265	0					
ANR	3500533	ExpressionStatement	PUNFETCH	3568:5:78679:78687	3498265	0	True				
ANR	3500534	Identifier	PUNFETCH		3498265	0					
ANR	3500535	BreakStatement	break ;	3571:6:78706:78711	3498265	180	True				
ANR	3500536	Label	default :	3573:4:78718:78725	3498265	181	True				
ANR	3500537	Identifier	default		3498265	0					
ANR	3500538	ExpressionStatement	PUNFETCH	3574:6:78733:78741	3498265	182	True				
ANR	3500539	Identifier	PUNFETCH		3498265	0					
ANR	3500540	ExpressionStatement	"num = fetch_escaped_value ( & p , end , env )"	3575:6:78749:78788	3498265	183	True				
ANR	3500541	AssignmentExpression	"num = fetch_escaped_value ( & p , end , env )"		3498265	0		=			
ANR	3500542	Identifier	num		3498265	0					
ANR	3500543	CallExpression	"fetch_escaped_value ( & p , end , env )"		3498265	1					
ANR	3500544	Callee	fetch_escaped_value		3498265	0					
ANR	3500545	Identifier	fetch_escaped_value		3498265	0					
ANR	3500546	ArgumentList	& p		3498265	1					
ANR	3500547	Argument	& p		3498265	0					
ANR	3500548	UnaryOperationExpression	& p		3498265	0					
ANR	3500549	UnaryOperator	&		3498265	0					
ANR	3500550	Identifier	p		3498265	1					
ANR	3500551	Argument	end		3498265	1					
ANR	3500552	Identifier	end		3498265	0					
ANR	3500553	Argument	env		3498265	2					
ANR	3500554	Identifier	env		3498265	0					
ANR	3500555	IfStatement	if ( num < 0 )		3498265	184					
ANR	3500556	Condition	num < 0	3576:10:78800:78806	3498265	0	True				
ANR	3500557	RelationalExpression	num < 0		3498265	0		<			
ANR	3500558	Identifier	num		3498265	0					
ANR	3500559	PrimaryExpression	0		3498265	1					
ANR	3500560	ReturnStatement	return num ;	3576:19:78809:78819	3498265	1	True				
ANR	3500561	Identifier	num		3498265	0					
ANR	3500562	IfStatement	if ( tok -> u . c != num )		3498265	185					
ANR	3500563	Condition	tok -> u . c != num	3578:10:78852:78866	3498265	0	True				
ANR	3500564	EqualityExpression	tok -> u . c != num		3498265	0		!=			
ANR	3500565	MemberAccess	tok -> u . c		3498265	0					
ANR	3500566	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500567	Identifier	tok		3498265	0					
ANR	3500568	Identifier	u		3498265	1					
ANR	3500569	Identifier	c		3498265	1					
ANR	3500570	Identifier	num		3498265	1					
ANR	3500571	CompoundStatement		452:27:11568:11568	3498265	1					
ANR	3500572	ExpressionStatement	tok -> type = TK_CODE_POINT	3579:1:78872:78897	3498265	0	True				
ANR	3500573	AssignmentExpression	tok -> type = TK_CODE_POINT		3498265	0		=			
ANR	3500574	PtrMemberAccess	tok -> type		3498265	0					
ANR	3500575	Identifier	tok		3498265	0					
ANR	3500576	Identifier	type		3498265	1					
ANR	3500577	Identifier	TK_CODE_POINT		3498265	1					
ANR	3500578	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3580:1:78900:78933	3498265	1	True				
ANR	3500579	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		3498265	0		=			
ANR	3500580	MemberAccess	tok -> u . code		3498265	0					
ANR	3500581	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500582	Identifier	tok		3498265	0					
ANR	3500583	Identifier	u		3498265	1					
ANR	3500584	Identifier	code		3498265	1					
ANR	3500585	CastExpression	( OnigCodePoint ) num		3498265	1					
ANR	3500586	CastTarget	OnigCodePoint		3498265	0					
ANR	3500587	Identifier	num		3498265	1					
ANR	3500588	ElseStatement	else		3498265	0					
ANR	3500589	CompoundStatement		456:11:11653:11653	3498265	0					
ANR	3500590	ExpressionStatement	"p = tok -> backp + enclen ( enc , tok -> backp )"	3583:1:78970:79010	3498265	0	True				
ANR	3500591	AssignmentExpression	"p = tok -> backp + enclen ( enc , tok -> backp )"		3498265	0		=			
ANR	3500592	Identifier	p		3498265	0					
ANR	3500593	AdditiveExpression	"tok -> backp + enclen ( enc , tok -> backp )"		3498265	1		+			
ANR	3500594	PtrMemberAccess	tok -> backp		3498265	0					
ANR	3500595	Identifier	tok		3498265	0					
ANR	3500596	Identifier	backp		3498265	1					
ANR	3500597	CallExpression	"enclen ( enc , tok -> backp )"		3498265	1					
ANR	3500598	Callee	enclen		3498265	0					
ANR	3500599	Identifier	enclen		3498265	0					
ANR	3500600	ArgumentList	enc		3498265	1					
ANR	3500601	Argument	enc		3498265	0					
ANR	3500602	Identifier	enc		3498265	0					
ANR	3500603	Argument	tok -> backp		3498265	1					
ANR	3500604	PtrMemberAccess	tok -> backp		3498265	0					
ANR	3500605	Identifier	tok		3498265	0					
ANR	3500606	Identifier	backp		3498265	1					
ANR	3500607	BreakStatement	break ;	3585:6:79026:79031	3498265	186	True				
ANR	3500608	ElseStatement	else		3498265	0					
ANR	3500609	CompoundStatement		462:7:11749:11749	3498265	0					
ANR	3500610	ExpressionStatement	tok -> u . c = c	3589:4:79056:79068	3498265	0	True				
ANR	3500611	AssignmentExpression	tok -> u . c = c		3498265	0		=			
ANR	3500612	MemberAccess	tok -> u . c		3498265	0					
ANR	3500613	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500614	Identifier	tok		3498265	0					
ANR	3500615	Identifier	u		3498265	1					
ANR	3500616	Identifier	c		3498265	1					
ANR	3500617	Identifier	c		3498265	1					
ANR	3500618	ExpressionStatement	tok -> escaped = 0	3590:4:79074:79090	3498265	1	True				
ANR	3500619	AssignmentExpression	tok -> escaped = 0		3498265	0		=			
ANR	3500620	PtrMemberAccess	tok -> escaped		3498265	0					
ANR	3500621	Identifier	tok		3498265	0					
ANR	3500622	Identifier	escaped		3498265	1					
ANR	3500623	PrimaryExpression	0		3498265	1					
ANR	3500624	IfStatement	"if ( ( c != ONIG_INEFFECTIVE_META_CHAR ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VARIABLE_META_CHARACTERS ) )"		3498265	2					
ANR	3500625	Condition	"( c != ONIG_INEFFECTIVE_META_CHAR ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VARIABLE_META_CHARACTERS )"	3593:8:79132:79224	3498265	0	True				
ANR	3500626	AndExpression	"( c != ONIG_INEFFECTIVE_META_CHAR ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VARIABLE_META_CHARACTERS )"		3498265	0		&&			
ANR	3500627	EqualityExpression	c != ONIG_INEFFECTIVE_META_CHAR		3498265	0		!=			
ANR	3500628	Identifier	c		3498265	0					
ANR	3500629	Identifier	ONIG_INEFFECTIVE_META_CHAR		3498265	1					
ANR	3500630	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VARIABLE_META_CHARACTERS )"		3498265	1					
ANR	3500631	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3500632	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3500633	ArgumentList	syn		3498265	1					
ANR	3500634	Argument	syn		3498265	0					
ANR	3500635	Identifier	syn		3498265	0					
ANR	3500636	Argument	ONIG_SYN_OP_VARIABLE_META_CHARACTERS		3498265	1					
ANR	3500637	Identifier	ONIG_SYN_OP_VARIABLE_META_CHARACTERS		3498265	0					
ANR	3500638	CompoundStatement		468:58:11926:11926	3498265	1					
ANR	3500639	IfStatement	if ( c == MC_ANYCHAR ( syn ) )		3498265	0					
ANR	3500640	Condition	c == MC_ANYCHAR ( syn )	3595:10:79239:79258	3498265	0	True				
ANR	3500641	EqualityExpression	c == MC_ANYCHAR ( syn )		3498265	0		==			
ANR	3500642	Identifier	c		3498265	0					
ANR	3500643	CallExpression	MC_ANYCHAR ( syn )		3498265	1					
ANR	3500644	Callee	MC_ANYCHAR		3498265	0					
ANR	3500645	Identifier	MC_ANYCHAR		3498265	0					
ANR	3500646	ArgumentList	syn		3498265	1					
ANR	3500647	Argument	syn		3498265	0					
ANR	3500648	Identifier	syn		3498265	0					
ANR	3500649	GotoStatement	goto any_char ;	3596:1:79262:79275	3498265	1	True				
ANR	3500650	Identifier	any_char		3498265	0					
ANR	3500651	ElseStatement	else		3498265	0					
ANR	3500652	IfStatement	if ( c == MC_ANYTIME ( syn ) )		3498265	0					
ANR	3500653	Condition	c == MC_ANYTIME ( syn )	3597:15:79292:79311	3498265	0	True				
ANR	3500654	EqualityExpression	c == MC_ANYTIME ( syn )		3498265	0		==			
ANR	3500655	Identifier	c		3498265	0					
ANR	3500656	CallExpression	MC_ANYTIME ( syn )		3498265	1					
ANR	3500657	Callee	MC_ANYTIME		3498265	0					
ANR	3500658	Identifier	MC_ANYTIME		3498265	0					
ANR	3500659	ArgumentList	syn		3498265	1					
ANR	3500660	Argument	syn		3498265	0					
ANR	3500661	Identifier	syn		3498265	0					
ANR	3500662	GotoStatement	goto anytime ;	3598:1:79315:79327	3498265	1	True				
ANR	3500663	Identifier	anytime		3498265	0					
ANR	3500664	ElseStatement	else		3498265	0					
ANR	3500665	IfStatement	if ( c == MC_ZERO_OR_ONE_TIME ( syn ) )		3498265	0					
ANR	3500666	Condition	c == MC_ZERO_OR_ONE_TIME ( syn )	3599:15:79344:79372	3498265	0	True				
ANR	3500667	EqualityExpression	c == MC_ZERO_OR_ONE_TIME ( syn )		3498265	0		==			
ANR	3500668	Identifier	c		3498265	0					
ANR	3500669	CallExpression	MC_ZERO_OR_ONE_TIME ( syn )		3498265	1					
ANR	3500670	Callee	MC_ZERO_OR_ONE_TIME		3498265	0					
ANR	3500671	Identifier	MC_ZERO_OR_ONE_TIME		3498265	0					
ANR	3500672	ArgumentList	syn		3498265	1					
ANR	3500673	Argument	syn		3498265	0					
ANR	3500674	Identifier	syn		3498265	0					
ANR	3500675	GotoStatement	goto zero_or_one_time ;	3600:1:79376:79397	3498265	1	True				
ANR	3500676	Identifier	zero_or_one_time		3498265	0					
ANR	3500677	ElseStatement	else		3498265	0					
ANR	3500678	IfStatement	if ( c == MC_ONE_OR_MORE_TIME ( syn ) )		3498265	0					
ANR	3500679	Condition	c == MC_ONE_OR_MORE_TIME ( syn )	3601:15:79414:79442	3498265	0	True				
ANR	3500680	EqualityExpression	c == MC_ONE_OR_MORE_TIME ( syn )		3498265	0		==			
ANR	3500681	Identifier	c		3498265	0					
ANR	3500682	CallExpression	MC_ONE_OR_MORE_TIME ( syn )		3498265	1					
ANR	3500683	Callee	MC_ONE_OR_MORE_TIME		3498265	0					
ANR	3500684	Identifier	MC_ONE_OR_MORE_TIME		3498265	0					
ANR	3500685	ArgumentList	syn		3498265	1					
ANR	3500686	Argument	syn		3498265	0					
ANR	3500687	Identifier	syn		3498265	0					
ANR	3500688	GotoStatement	goto one_or_more_time ;	3602:1:79446:79467	3498265	1	True				
ANR	3500689	Identifier	one_or_more_time		3498265	0					
ANR	3500690	ElseStatement	else		3498265	0					
ANR	3500691	IfStatement	if ( c == MC_ANYCHAR_ANYTIME ( syn ) )		3498265	0					
ANR	3500692	Condition	c == MC_ANYCHAR_ANYTIME ( syn )	3603:15:79484:79511	3498265	0	True				
ANR	3500693	EqualityExpression	c == MC_ANYCHAR_ANYTIME ( syn )		3498265	0		==			
ANR	3500694	Identifier	c		3498265	0					
ANR	3500695	CallExpression	MC_ANYCHAR_ANYTIME ( syn )		3498265	1					
ANR	3500696	Callee	MC_ANYCHAR_ANYTIME		3498265	0					
ANR	3500697	Identifier	MC_ANYCHAR_ANYTIME		3498265	0					
ANR	3500698	ArgumentList	syn		3498265	1					
ANR	3500699	Argument	syn		3498265	0					
ANR	3500700	Identifier	syn		3498265	0					
ANR	3500701	CompoundStatement		477:45:12213:12213	3498265	1					
ANR	3500702	ExpressionStatement	tok -> type = TK_ANYCHAR_ANYTIME	3604:1:79517:79547	3498265	0	True				
ANR	3500703	AssignmentExpression	tok -> type = TK_ANYCHAR_ANYTIME		3498265	0		=			
ANR	3500704	PtrMemberAccess	tok -> type		3498265	0					
ANR	3500705	Identifier	tok		3498265	0					
ANR	3500706	Identifier	type		3498265	1					
ANR	3500707	Identifier	TK_ANYCHAR_ANYTIME		3498265	1					
ANR	3500708	GotoStatement	goto out ;	3605:1:79550:79558	3498265	1	True				
ANR	3500709	Identifier	out		3498265	0					
ANR	3500710	SwitchStatement	switch ( c )		3498265	3					
ANR	3500711	Condition	c	3610:12:79594:79594	3498265	0	True				
ANR	3500712	Identifier	c		3498265	0					
ANR	3500713	CompoundStatement		484:15:12296:12296	3498265	1					
ANR	3500714	Label	case '.' :	3611:4:79603:79611	3498265	0	True				
ANR	3500715	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DOT_ANYCHAR ) )"		3498265	1					
ANR	3500716	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DOT_ANYCHAR )"	3612:10:79623:79666	3498265	0	True				
ANR	3500717	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DOT_ANYCHAR )"		3498265	0					
ANR	3500718	UnaryOperator	!		3498265	0					
ANR	3500719	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DOT_ANYCHAR )"		3498265	1					
ANR	3500720	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3500721	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3500722	ArgumentList	syn		3498265	1					
ANR	3500723	Argument	syn		3498265	0					
ANR	3500724	Identifier	syn		3498265	0					
ANR	3500725	Argument	ONIG_SYN_OP_DOT_ANYCHAR		3498265	1					
ANR	3500726	Identifier	ONIG_SYN_OP_DOT_ANYCHAR		3498265	0					
ANR	3500727	BreakStatement	break ;	3612:56:79669:79674	3498265	1	True				
ANR	3500728	Label	any_char :	3614:4:79711:79719	3498265	2	True				
ANR	3500729	Identifier	any_char		3498265	0					
ANR	3500730	ExpressionStatement	tok -> type = TK_ANYCHAR	3616:6:79734:79756	3498265	3	True				
ANR	3500731	AssignmentExpression	tok -> type = TK_ANYCHAR		3498265	0		=			
ANR	3500732	PtrMemberAccess	tok -> type		3498265	0					
ANR	3500733	Identifier	tok		3498265	0					
ANR	3500734	Identifier	type		3498265	1					
ANR	3500735	Identifier	TK_ANYCHAR		3498265	1					
ANR	3500736	BreakStatement	break ;	3617:6:79764:79769	3498265	4	True				
ANR	3500737	Label	case '*' :	3619:4:79776:79784	3498265	5	True				
ANR	3500738	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ASTERISK_ZERO_INF ) )"		3498265	6					
ANR	3500739	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ASTERISK_ZERO_INF )"	3620:10:79796:79845	3498265	0	True				
ANR	3500740	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ASTERISK_ZERO_INF )"		3498265	0					
ANR	3500741	UnaryOperator	!		3498265	0					
ANR	3500742	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ASTERISK_ZERO_INF )"		3498265	1					
ANR	3500743	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3500744	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3500745	ArgumentList	syn		3498265	1					
ANR	3500746	Argument	syn		3498265	0					
ANR	3500747	Identifier	syn		3498265	0					
ANR	3500748	Argument	ONIG_SYN_OP_ASTERISK_ZERO_INF		3498265	1					
ANR	3500749	Identifier	ONIG_SYN_OP_ASTERISK_ZERO_INF		3498265	0					
ANR	3500750	BreakStatement	break ;	3620:62:79848:79853	3498265	1	True				
ANR	3500751	Label	anytime :	3622:4:79890:79897	3498265	7	True				
ANR	3500752	Identifier	anytime		3498265	0					
ANR	3500753	ExpressionStatement	tok -> type = TK_OP_REPEAT	3624:6:79912:79936	3498265	8	True				
ANR	3500754	AssignmentExpression	tok -> type = TK_OP_REPEAT		3498265	0		=			
ANR	3500755	PtrMemberAccess	tok -> type		3498265	0					
ANR	3500756	Identifier	tok		3498265	0					
ANR	3500757	Identifier	type		3498265	1					
ANR	3500758	Identifier	TK_OP_REPEAT		3498265	1					
ANR	3500759	ExpressionStatement	tok -> u . repeat . lower = 0	3625:6:79944:79967	3498265	9	True				
ANR	3500760	AssignmentExpression	tok -> u . repeat . lower = 0		3498265	0		=			
ANR	3500761	MemberAccess	tok -> u . repeat . lower		3498265	0					
ANR	3500762	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3500763	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500764	Identifier	tok		3498265	0					
ANR	3500765	Identifier	u		3498265	1					
ANR	3500766	Identifier	repeat		3498265	1					
ANR	3500767	Identifier	lower		3498265	1					
ANR	3500768	PrimaryExpression	0		3498265	1					
ANR	3500769	ExpressionStatement	tok -> u . repeat . upper = REPEAT_INFINITE	3626:6:79975:80012	3498265	10	True				
ANR	3500770	AssignmentExpression	tok -> u . repeat . upper = REPEAT_INFINITE		3498265	0		=			
ANR	3500771	MemberAccess	tok -> u . repeat . upper		3498265	0					
ANR	3500772	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3500773	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500774	Identifier	tok		3498265	0					
ANR	3500775	Identifier	u		3498265	1					
ANR	3500776	Identifier	repeat		3498265	1					
ANR	3500777	Identifier	upper		3498265	1					
ANR	3500778	Identifier	REPEAT_INFINITE		3498265	1					
ANR	3500779	GotoStatement	goto greedy_check ;	3627:6:80020:80037	3498265	11	True				
ANR	3500780	Identifier	greedy_check		3498265	0					
ANR	3500781	BreakStatement	break ;	3628:6:80045:80050	3498265	12	True				
ANR	3500782	Label	case '+' :	3630:4:80057:80065	3498265	13	True				
ANR	3500783	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_PLUS_ONE_INF ) )"		3498265	14					
ANR	3500784	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_PLUS_ONE_INF )"	3631:10:80077:80121	3498265	0	True				
ANR	3500785	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_PLUS_ONE_INF )"		3498265	0					
ANR	3500786	UnaryOperator	!		3498265	0					
ANR	3500787	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_PLUS_ONE_INF )"		3498265	1					
ANR	3500788	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3500789	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3500790	ArgumentList	syn		3498265	1					
ANR	3500791	Argument	syn		3498265	0					
ANR	3500792	Identifier	syn		3498265	0					
ANR	3500793	Argument	ONIG_SYN_OP_PLUS_ONE_INF		3498265	1					
ANR	3500794	Identifier	ONIG_SYN_OP_PLUS_ONE_INF		3498265	0					
ANR	3500795	BreakStatement	break ;	3631:57:80124:80129	3498265	1	True				
ANR	3500796	Label	one_or_more_time :	3633:4:80166:80182	3498265	15	True				
ANR	3500797	Identifier	one_or_more_time		3498265	0					
ANR	3500798	ExpressionStatement	tok -> type = TK_OP_REPEAT	3635:6:80197:80221	3498265	16	True				
ANR	3500799	AssignmentExpression	tok -> type = TK_OP_REPEAT		3498265	0		=			
ANR	3500800	PtrMemberAccess	tok -> type		3498265	0					
ANR	3500801	Identifier	tok		3498265	0					
ANR	3500802	Identifier	type		3498265	1					
ANR	3500803	Identifier	TK_OP_REPEAT		3498265	1					
ANR	3500804	ExpressionStatement	tok -> u . repeat . lower = 1	3636:6:80229:80252	3498265	17	True				
ANR	3500805	AssignmentExpression	tok -> u . repeat . lower = 1		3498265	0		=			
ANR	3500806	MemberAccess	tok -> u . repeat . lower		3498265	0					
ANR	3500807	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3500808	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500809	Identifier	tok		3498265	0					
ANR	3500810	Identifier	u		3498265	1					
ANR	3500811	Identifier	repeat		3498265	1					
ANR	3500812	Identifier	lower		3498265	1					
ANR	3500813	PrimaryExpression	1		3498265	1					
ANR	3500814	ExpressionStatement	tok -> u . repeat . upper = REPEAT_INFINITE	3637:6:80260:80297	3498265	18	True				
ANR	3500815	AssignmentExpression	tok -> u . repeat . upper = REPEAT_INFINITE		3498265	0		=			
ANR	3500816	MemberAccess	tok -> u . repeat . upper		3498265	0					
ANR	3500817	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3500818	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500819	Identifier	tok		3498265	0					
ANR	3500820	Identifier	u		3498265	1					
ANR	3500821	Identifier	repeat		3498265	1					
ANR	3500822	Identifier	upper		3498265	1					
ANR	3500823	Identifier	REPEAT_INFINITE		3498265	1					
ANR	3500824	GotoStatement	goto greedy_check ;	3638:6:80305:80322	3498265	19	True				
ANR	3500825	Identifier	greedy_check		3498265	0					
ANR	3500826	BreakStatement	break ;	3639:6:80330:80335	3498265	20	True				
ANR	3500827	Label	case '?' :	3641:4:80342:80350	3498265	21	True				
ANR	3500828	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_ZERO_ONE ) )"		3498265	22					
ANR	3500829	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_ZERO_ONE )"	3642:10:80362:80408	3498265	0	True				
ANR	3500830	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_ZERO_ONE )"		3498265	0					
ANR	3500831	UnaryOperator	!		3498265	0					
ANR	3500832	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_ZERO_ONE )"		3498265	1					
ANR	3500833	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3500834	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3500835	ArgumentList	syn		3498265	1					
ANR	3500836	Argument	syn		3498265	0					
ANR	3500837	Identifier	syn		3498265	0					
ANR	3500838	Argument	ONIG_SYN_OP_QMARK_ZERO_ONE		3498265	1					
ANR	3500839	Identifier	ONIG_SYN_OP_QMARK_ZERO_ONE		3498265	0					
ANR	3500840	BreakStatement	break ;	3642:59:80411:80416	3498265	1	True				
ANR	3500841	Label	zero_or_one_time :	3644:4:80453:80469	3498265	23	True				
ANR	3500842	Identifier	zero_or_one_time		3498265	0					
ANR	3500843	ExpressionStatement	tok -> type = TK_OP_REPEAT	3646:6:80484:80508	3498265	24	True				
ANR	3500844	AssignmentExpression	tok -> type = TK_OP_REPEAT		3498265	0		=			
ANR	3500845	PtrMemberAccess	tok -> type		3498265	0					
ANR	3500846	Identifier	tok		3498265	0					
ANR	3500847	Identifier	type		3498265	1					
ANR	3500848	Identifier	TK_OP_REPEAT		3498265	1					
ANR	3500849	ExpressionStatement	tok -> u . repeat . lower = 0	3647:6:80516:80539	3498265	25	True				
ANR	3500850	AssignmentExpression	tok -> u . repeat . lower = 0		3498265	0		=			
ANR	3500851	MemberAccess	tok -> u . repeat . lower		3498265	0					
ANR	3500852	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3500853	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500854	Identifier	tok		3498265	0					
ANR	3500855	Identifier	u		3498265	1					
ANR	3500856	Identifier	repeat		3498265	1					
ANR	3500857	Identifier	lower		3498265	1					
ANR	3500858	PrimaryExpression	0		3498265	1					
ANR	3500859	ExpressionStatement	tok -> u . repeat . upper = 1	3648:6:80547:80570	3498265	26	True				
ANR	3500860	AssignmentExpression	tok -> u . repeat . upper = 1		3498265	0		=			
ANR	3500861	MemberAccess	tok -> u . repeat . upper		3498265	0					
ANR	3500862	MemberAccess	tok -> u . repeat		3498265	0					
ANR	3500863	PtrMemberAccess	tok -> u		3498265	0					
ANR	3500864	Identifier	tok		3498265	0					
ANR	3500865	Identifier	u		3498265	1					
ANR	3500866	Identifier	repeat		3498265	1					
ANR	3500867	Identifier	upper		3498265	1					
ANR	3500868	PrimaryExpression	1		3498265	1					
ANR	3500869	GotoStatement	goto greedy_check ;	3649:6:80578:80595	3498265	27	True				
ANR	3500870	Identifier	greedy_check		3498265	0					
ANR	3500871	BreakStatement	break ;	3650:6:80603:80608	3498265	28	True				
ANR	3500872	Label	case '{' :	3652:4:80615:80623	3498265	29	True				
ANR	3500873	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACE_INTERVAL ) )"		3498265	30					
ANR	3500874	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACE_INTERVAL )"	3653:10:80635:80681	3498265	0	True				
ANR	3500875	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACE_INTERVAL )"		3498265	0					
ANR	3500876	UnaryOperator	!		3498265	0					
ANR	3500877	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACE_INTERVAL )"		3498265	1					
ANR	3500878	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3500879	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3500880	ArgumentList	syn		3498265	1					
ANR	3500881	Argument	syn		3498265	0					
ANR	3500882	Identifier	syn		3498265	0					
ANR	3500883	Argument	ONIG_SYN_OP_BRACE_INTERVAL		3498265	1					
ANR	3500884	Identifier	ONIG_SYN_OP_BRACE_INTERVAL		3498265	0					
ANR	3500885	BreakStatement	break ;	3653:59:80684:80689	3498265	1	True				
ANR	3500886	ExpressionStatement	"r = fetch_range_quantifier ( & p , end , tok , env )"	3654:6:80697:80742	3498265	31	True				
ANR	3500887	AssignmentExpression	"r = fetch_range_quantifier ( & p , end , tok , env )"		3498265	0		=			
ANR	3500888	Identifier	r		3498265	0					
ANR	3500889	CallExpression	"fetch_range_quantifier ( & p , end , tok , env )"		3498265	1					
ANR	3500890	Callee	fetch_range_quantifier		3498265	0					
ANR	3500891	Identifier	fetch_range_quantifier		3498265	0					
ANR	3500892	ArgumentList	& p		3498265	1					
ANR	3500893	Argument	& p		3498265	0					
ANR	3500894	UnaryOperationExpression	& p		3498265	0					
ANR	3500895	UnaryOperator	&		3498265	0					
ANR	3500896	Identifier	p		3498265	1					
ANR	3500897	Argument	end		3498265	1					
ANR	3500898	Identifier	end		3498265	0					
ANR	3500899	Argument	tok		3498265	2					
ANR	3500900	Identifier	tok		3498265	0					
ANR	3500901	Argument	env		3498265	3					
ANR	3500902	Identifier	env		3498265	0					
ANR	3500903	IfStatement	if ( r < 0 )		3498265	32					
ANR	3500904	Condition	r < 0	3655:10:80754:80758	3498265	0	True				
ANR	3500905	RelationalExpression	r < 0		3498265	0		<			
ANR	3500906	Identifier	r		3498265	0					
ANR	3500907	PrimaryExpression	0		3498265	1					
ANR	3500908	ReturnStatement	return r ;	3655:17:80761:80769	3498265	1	True				
ANR	3500909	Identifier	r		3498265	0					
ANR	3500910	IfStatement	if ( r == 0 )		3498265	33					
ANR	3500911	Condition	r == 0	3656:10:80794:80799	3498265	0	True				
ANR	3500912	EqualityExpression	r == 0		3498265	0		==			
ANR	3500913	Identifier	r		3498265	0					
ANR	3500914	PrimaryExpression	0		3498265	1					
ANR	3500915	GotoStatement	goto greedy_check ;	3656:18:80802:80819	3498265	1	True				
ANR	3500916	Identifier	greedy_check		3498265	0					
ANR	3500917	ElseStatement	else		3498265	0					
ANR	3500918	IfStatement	if ( r == 2 )		3498265	0					
ANR	3500919	Condition	r == 2	3657:15:80836:80841	3498265	0	True				
ANR	3500920	EqualityExpression	r == 2		3498265	0		==			
ANR	3500921	Identifier	r		3498265	0					
ANR	3500922	PrimaryExpression	2		3498265	1					
ANR	3500923	CompoundStatement		531:23:13543:13543	3498265	1					
ANR	3500924	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY ) )"		3498265	0					
ANR	3500925	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY )"	3658:5:80861:80917	3498265	0	True				
ANR	3500926	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY )"		3498265	0					
ANR	3500927	Callee	IS_SYNTAX_BV		3498265	0					
ANR	3500928	Identifier	IS_SYNTAX_BV		3498265	0					
ANR	3500929	ArgumentList	syn		3498265	1					
ANR	3500930	Argument	syn		3498265	0					
ANR	3500931	Identifier	syn		3498265	0					
ANR	3500932	Argument	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		3498265	1					
ANR	3500933	Identifier	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		3498265	0					
ANR	3500934	GotoStatement	goto possessive_check ;	3659:3:80923:80944	3498265	1	True				
ANR	3500935	Identifier	possessive_check		3498265	0					
ANR	3500936	GotoStatement	goto greedy_check ;	3661:1:80948:80965	3498265	1	True				
ANR	3500937	Identifier	greedy_check		3498265	0					
ANR	3500938	BreakStatement	break ;	3664:6:81014:81019	3498265	34	True				
ANR	3500939	Label	case '|' :	3666:4:81026:81034	3498265	35	True				
ANR	3500940	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VBAR_ALT ) )"		3498265	36					
ANR	3500941	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VBAR_ALT )"	3667:10:81046:81086	3498265	0	True				
ANR	3500942	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VBAR_ALT )"		3498265	0					
ANR	3500943	UnaryOperator	!		3498265	0					
ANR	3500944	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VBAR_ALT )"		3498265	1					
ANR	3500945	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3500946	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3500947	ArgumentList	syn		3498265	1					
ANR	3500948	Argument	syn		3498265	0					
ANR	3500949	Identifier	syn		3498265	0					
ANR	3500950	Argument	ONIG_SYN_OP_VBAR_ALT		3498265	1					
ANR	3500951	Identifier	ONIG_SYN_OP_VBAR_ALT		3498265	0					
ANR	3500952	BreakStatement	break ;	3667:53:81089:81094	3498265	1	True				
ANR	3500953	ExpressionStatement	tok -> type = TK_ALT	3668:6:81102:81120	3498265	37	True				
ANR	3500954	AssignmentExpression	tok -> type = TK_ALT		3498265	0		=			
ANR	3500955	PtrMemberAccess	tok -> type		3498265	0					
ANR	3500956	Identifier	tok		3498265	0					
ANR	3500957	Identifier	type		3498265	1					
ANR	3500958	Identifier	TK_ALT		3498265	1					
ANR	3500959	BreakStatement	break ;	3669:6:81128:81133	3498265	38	True				
ANR	3500960	Label	case '(' :	3671:4:81140:81148	3498265	39	True				
ANR	3500961	IfStatement	"if ( PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_QMARK_GROUP_EFFECT ) )"		3498265	40					
ANR	3500962	Condition	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"	3672:10:81160:81237	3498265	0	True				
ANR	3500963	AndExpression	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"		3498265	0		&&			
ANR	3500964	CallExpression	PPEEK_IS ( '?' )		3498265	0					
ANR	3500965	Callee	PPEEK_IS		3498265	0					
ANR	3500966	Identifier	PPEEK_IS		3498265	0					
ANR	3500967	ArgumentList	'?'		3498265	1					
ANR	3500968	Argument	'?'		3498265	0					
ANR	3500969	PrimaryExpression	'?'		3498265	0					
ANR	3500970	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"		3498265	1					
ANR	3500971	Callee	IS_SYNTAX_OP2		3498265	0					
ANR	3500972	Identifier	IS_SYNTAX_OP2		3498265	0					
ANR	3500973	ArgumentList	syn		3498265	1					
ANR	3500974	Argument	syn		3498265	0					
ANR	3500975	Identifier	syn		3498265	0					
ANR	3500976	Argument	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		3498265	1					
ANR	3500977	Identifier	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		3498265	0					
ANR	3500978	CompoundStatement		547:63:13939:13939	3498265	1					
ANR	3500979	ExpressionStatement	PINC	3674:8:81250:81254	3498265	0	True				
ANR	3500980	Identifier	PINC		3498265	0					
ANR	3500981	IfStatement	if ( PPEEK_IS ( '#' ) )		3498265	1					
ANR	3500982	Condition	PPEEK_IS ( '#' )	3675:12:81268:81280	3498265	0	True				
ANR	3500983	CallExpression	PPEEK_IS ( '#' )		3498265	0					
ANR	3500984	Callee	PPEEK_IS		3498265	0					
ANR	3500985	Identifier	PPEEK_IS		3498265	0					
ANR	3500986	ArgumentList	'#'		3498265	1					
ANR	3500987	Argument	'#'		3498265	0					
ANR	3500988	PrimaryExpression	'#'		3498265	0					
ANR	3500989	CompoundStatement		549:27:13982:13982	3498265	1					
ANR	3500990	ExpressionStatement	PFETCH ( c )	3676:10:81295:81304	3498265	0	True				
ANR	3500991	CallExpression	PFETCH ( c )		3498265	0					
ANR	3500992	Callee	PFETCH		3498265	0					
ANR	3500993	Identifier	PFETCH		3498265	0					
ANR	3500994	ArgumentList	c		3498265	1					
ANR	3500995	Argument	c		3498265	0					
ANR	3500996	Identifier	c		3498265	0					
ANR	3500997	WhileStatement	while ( 1 )		3498265	1					
ANR	3500998	Condition	1	3677:17:81323:81323	3498265	0	True				
ANR	3500999	PrimaryExpression	1		3498265	0					
ANR	3501000	CompoundStatement		551:20:14025:14025	3498265	1					
ANR	3501001	IfStatement	if ( PEND )		3498265	0					
ANR	3501002	Condition	PEND	3678:16:81344:81347	3498265	0	True				
ANR	3501003	Identifier	PEND		3498265	0					
ANR	3501004	ReturnStatement	return ONIGERR_END_PATTERN_IN_GROUP ;	3678:22:81350:81385	3498265	1	True				
ANR	3501005	Identifier	ONIGERR_END_PATTERN_IN_GROUP		3498265	0					
ANR	3501006	ExpressionStatement	PFETCH ( c )	3679:12:81399:81408	3498265	1	True				
ANR	3501007	CallExpression	PFETCH ( c )		3498265	0					
ANR	3501008	Callee	PFETCH		3498265	0					
ANR	3501009	Identifier	PFETCH		3498265	0					
ANR	3501010	ArgumentList	c		3498265	1					
ANR	3501011	Argument	c		3498265	0					
ANR	3501012	Identifier	c		3498265	0					
ANR	3501013	IfStatement	if ( c == MC_ESC ( syn ) )		3498265	2					
ANR	3501014	Condition	c == MC_ESC ( syn )	3680:16:81426:81441	3498265	0	True				
ANR	3501015	EqualityExpression	c == MC_ESC ( syn )		3498265	0		==			
ANR	3501016	Identifier	c		3498265	0					
ANR	3501017	CallExpression	MC_ESC ( syn )		3498265	1					
ANR	3501018	Callee	MC_ESC		3498265	0					
ANR	3501019	Identifier	MC_ESC		3498265	0					
ANR	3501020	ArgumentList	syn		3498265	1					
ANR	3501021	Argument	syn		3498265	0					
ANR	3501022	Identifier	syn		3498265	0					
ANR	3501023	CompoundStatement		554:34:14143:14143	3498265	1					
ANR	3501024	IfStatement	if ( ! PEND )		3498265	0					
ANR	3501025	Condition	! PEND	3681:18:81464:81468	3498265	0	True				
ANR	3501026	UnaryOperationExpression	! PEND		3498265	0					
ANR	3501027	UnaryOperator	!		3498265	0					
ANR	3501028	Identifier	PEND		3498265	1					
ANR	3501029	ExpressionStatement	PFETCH ( c )	3681:25:81471:81480	3498265	1	True				
ANR	3501030	CallExpression	PFETCH ( c )		3498265	0					
ANR	3501031	Callee	PFETCH		3498265	0					
ANR	3501032	Identifier	PFETCH		3498265	0					
ANR	3501033	ArgumentList	c		3498265	1					
ANR	3501034	Argument	c		3498265	0					
ANR	3501035	Identifier	c		3498265	0					
ANR	3501036	ElseStatement	else		3498265	0					
ANR	3501037	CompoundStatement		557:17:14212:14212	3498265	0					
ANR	3501038	IfStatement	if ( c == ')' )		3498265	0					
ANR	3501039	Condition	c == ')'	3684:18:81533:81540	3498265	0	True				
ANR	3501040	EqualityExpression	c == ')'		3498265	0		==			
ANR	3501041	Identifier	c		3498265	0					
ANR	3501042	PrimaryExpression	')'		3498265	1					
ANR	3501043	BreakStatement	break ;	3684:28:81543:81548	3498265	1	True				
ANR	3501044	GotoStatement	goto start ;	3687:10:81586:81596	3498265	2	True				
ANR	3501045	Identifier	start		3498265	0					
ANR	3501046	ExpressionStatement	PUNFETCH	3689:8:81616:81624	3498265	2	True				
ANR	3501047	Identifier	PUNFETCH		3498265	0					
ANR	3501048	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP ) )"		3498265	41					
ANR	3501049	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"	3692:10:81645:81690	3498265	0	True				
ANR	3501050	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"		3498265	0					
ANR	3501051	UnaryOperator	!		3498265	0					
ANR	3501052	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"		3498265	1					
ANR	3501053	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3501054	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3501055	ArgumentList	syn		3498265	1					
ANR	3501056	Argument	syn		3498265	0					
ANR	3501057	Identifier	syn		3498265	0					
ANR	3501058	Argument	ONIG_SYN_OP_LPAREN_SUBEXP		3498265	1					
ANR	3501059	Identifier	ONIG_SYN_OP_LPAREN_SUBEXP		3498265	0					
ANR	3501060	BreakStatement	break ;	3692:58:81693:81698	3498265	1	True				
ANR	3501061	ExpressionStatement	tok -> type = TK_SUBEXP_OPEN	3693:6:81706:81732	3498265	42	True				
ANR	3501062	AssignmentExpression	tok -> type = TK_SUBEXP_OPEN		3498265	0		=			
ANR	3501063	PtrMemberAccess	tok -> type		3498265	0					
ANR	3501064	Identifier	tok		3498265	0					
ANR	3501065	Identifier	type		3498265	1					
ANR	3501066	Identifier	TK_SUBEXP_OPEN		3498265	1					
ANR	3501067	BreakStatement	break ;	3694:6:81740:81745	3498265	43	True				
ANR	3501068	Label	case ')' :	3696:4:81752:81760	3498265	44	True				
ANR	3501069	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP ) )"		3498265	45					
ANR	3501070	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"	3697:10:81772:81817	3498265	0	True				
ANR	3501071	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"		3498265	0					
ANR	3501072	UnaryOperator	!		3498265	0					
ANR	3501073	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"		3498265	1					
ANR	3501074	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3501075	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3501076	ArgumentList	syn		3498265	1					
ANR	3501077	Argument	syn		3498265	0					
ANR	3501078	Identifier	syn		3498265	0					
ANR	3501079	Argument	ONIG_SYN_OP_LPAREN_SUBEXP		3498265	1					
ANR	3501080	Identifier	ONIG_SYN_OP_LPAREN_SUBEXP		3498265	0					
ANR	3501081	BreakStatement	break ;	3697:58:81820:81825	3498265	1	True				
ANR	3501082	ExpressionStatement	tok -> type = TK_SUBEXP_CLOSE	3698:6:81833:81860	3498265	46	True				
ANR	3501083	AssignmentExpression	tok -> type = TK_SUBEXP_CLOSE		3498265	0		=			
ANR	3501084	PtrMemberAccess	tok -> type		3498265	0					
ANR	3501085	Identifier	tok		3498265	0					
ANR	3501086	Identifier	type		3498265	1					
ANR	3501087	Identifier	TK_SUBEXP_CLOSE		3498265	1					
ANR	3501088	BreakStatement	break ;	3699:6:81868:81873	3498265	47	True				
ANR	3501089	Label	case '^' :	3701:4:81880:81888	3498265	48	True				
ANR	3501090	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR ) )"		3498265	49					
ANR	3501091	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"	3702:10:81900:81943	3498265	0	True				
ANR	3501092	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"		3498265	0					
ANR	3501093	UnaryOperator	!		3498265	0					
ANR	3501094	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"		3498265	1					
ANR	3501095	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3501096	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3501097	ArgumentList	syn		3498265	1					
ANR	3501098	Argument	syn		3498265	0					
ANR	3501099	Identifier	syn		3498265	0					
ANR	3501100	Argument	ONIG_SYN_OP_LINE_ANCHOR		3498265	1					
ANR	3501101	Identifier	ONIG_SYN_OP_LINE_ANCHOR		3498265	0					
ANR	3501102	BreakStatement	break ;	3702:56:81946:81951	3498265	1	True				
ANR	3501103	ExpressionStatement	tok -> type = TK_ANCHOR	3703:6:81959:81980	3498265	50	True				
ANR	3501104	AssignmentExpression	tok -> type = TK_ANCHOR		3498265	0		=			
ANR	3501105	PtrMemberAccess	tok -> type		3498265	0					
ANR	3501106	Identifier	tok		3498265	0					
ANR	3501107	Identifier	type		3498265	1					
ANR	3501108	Identifier	TK_ANCHOR		3498265	1					
ANR	3501109	ExpressionStatement	tok -> u . subtype = ( IS_SINGLELINE ( env -> option ) ? ANCHOR_BEGIN_BUF : ANCHOR_BEGIN_LINE )	3704:6:81988:82075	3498265	51	True				
ANR	3501110	AssignmentExpression	tok -> u . subtype = ( IS_SINGLELINE ( env -> option ) ? ANCHOR_BEGIN_BUF : ANCHOR_BEGIN_LINE )		3498265	0		=			
ANR	3501111	MemberAccess	tok -> u . subtype		3498265	0					
ANR	3501112	PtrMemberAccess	tok -> u		3498265	0					
ANR	3501113	Identifier	tok		3498265	0					
ANR	3501114	Identifier	u		3498265	1					
ANR	3501115	Identifier	subtype		3498265	1					
ANR	3501116	ConditionalExpression	IS_SINGLELINE ( env -> option ) ? ANCHOR_BEGIN_BUF : ANCHOR_BEGIN_LINE		3498265	1					
ANR	3501117	Condition	IS_SINGLELINE ( env -> option )		3498265	0					
ANR	3501118	CallExpression	IS_SINGLELINE ( env -> option )		3498265	0					
ANR	3501119	Callee	IS_SINGLELINE		3498265	0					
ANR	3501120	Identifier	IS_SINGLELINE		3498265	0					
ANR	3501121	ArgumentList	env -> option		3498265	1					
ANR	3501122	Argument	env -> option		3498265	0					
ANR	3501123	PtrMemberAccess	env -> option		3498265	0					
ANR	3501124	Identifier	env		3498265	0					
ANR	3501125	Identifier	option		3498265	1					
ANR	3501126	Identifier	ANCHOR_BEGIN_BUF		3498265	1					
ANR	3501127	Identifier	ANCHOR_BEGIN_LINE		3498265	2					
ANR	3501128	BreakStatement	break ;	3706:6:82083:82088	3498265	52	True				
ANR	3501129	Label	case '$' :	3708:4:82095:82103	3498265	53	True				
ANR	3501130	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR ) )"		3498265	54					
ANR	3501131	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"	3709:10:82115:82158	3498265	0	True				
ANR	3501132	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"		3498265	0					
ANR	3501133	UnaryOperator	!		3498265	0					
ANR	3501134	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"		3498265	1					
ANR	3501135	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3501136	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3501137	ArgumentList	syn		3498265	1					
ANR	3501138	Argument	syn		3498265	0					
ANR	3501139	Identifier	syn		3498265	0					
ANR	3501140	Argument	ONIG_SYN_OP_LINE_ANCHOR		3498265	1					
ANR	3501141	Identifier	ONIG_SYN_OP_LINE_ANCHOR		3498265	0					
ANR	3501142	BreakStatement	break ;	3709:56:82161:82166	3498265	1	True				
ANR	3501143	ExpressionStatement	tok -> type = TK_ANCHOR	3710:6:82174:82195	3498265	55	True				
ANR	3501144	AssignmentExpression	tok -> type = TK_ANCHOR		3498265	0		=			
ANR	3501145	PtrMemberAccess	tok -> type		3498265	0					
ANR	3501146	Identifier	tok		3498265	0					
ANR	3501147	Identifier	type		3498265	1					
ANR	3501148	Identifier	TK_ANCHOR		3498265	1					
ANR	3501149	ExpressionStatement	tok -> u . subtype = ( IS_SINGLELINE ( env -> option ) ? ANCHOR_SEMI_END_BUF : ANCHOR_END_LINE )	3711:6:82203:82291	3498265	56	True				
ANR	3501150	AssignmentExpression	tok -> u . subtype = ( IS_SINGLELINE ( env -> option ) ? ANCHOR_SEMI_END_BUF : ANCHOR_END_LINE )		3498265	0		=			
ANR	3501151	MemberAccess	tok -> u . subtype		3498265	0					
ANR	3501152	PtrMemberAccess	tok -> u		3498265	0					
ANR	3501153	Identifier	tok		3498265	0					
ANR	3501154	Identifier	u		3498265	1					
ANR	3501155	Identifier	subtype		3498265	1					
ANR	3501156	ConditionalExpression	IS_SINGLELINE ( env -> option ) ? ANCHOR_SEMI_END_BUF : ANCHOR_END_LINE		3498265	1					
ANR	3501157	Condition	IS_SINGLELINE ( env -> option )		3498265	0					
ANR	3501158	CallExpression	IS_SINGLELINE ( env -> option )		3498265	0					
ANR	3501159	Callee	IS_SINGLELINE		3498265	0					
ANR	3501160	Identifier	IS_SINGLELINE		3498265	0					
ANR	3501161	ArgumentList	env -> option		3498265	1					
ANR	3501162	Argument	env -> option		3498265	0					
ANR	3501163	PtrMemberAccess	env -> option		3498265	0					
ANR	3501164	Identifier	env		3498265	0					
ANR	3501165	Identifier	option		3498265	1					
ANR	3501166	Identifier	ANCHOR_SEMI_END_BUF		3498265	1					
ANR	3501167	Identifier	ANCHOR_END_LINE		3498265	2					
ANR	3501168	BreakStatement	break ;	3713:6:82299:82304	3498265	57	True				
ANR	3501169	Label	case '[' :	3715:4:82311:82319	3498265	58	True				
ANR	3501170	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACKET_CC ) )"		3498265	59					
ANR	3501171	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACKET_CC )"	3716:10:82331:82373	3498265	0	True				
ANR	3501172	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACKET_CC )"		3498265	0					
ANR	3501173	UnaryOperator	!		3498265	0					
ANR	3501174	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACKET_CC )"		3498265	1					
ANR	3501175	Callee	IS_SYNTAX_OP		3498265	0					
ANR	3501176	Identifier	IS_SYNTAX_OP		3498265	0					
ANR	3501177	ArgumentList	syn		3498265	1					
ANR	3501178	Argument	syn		3498265	0					
ANR	3501179	Identifier	syn		3498265	0					
ANR	3501180	Argument	ONIG_SYN_OP_BRACKET_CC		3498265	1					
ANR	3501181	Identifier	ONIG_SYN_OP_BRACKET_CC		3498265	0					
ANR	3501182	BreakStatement	break ;	3716:55:82376:82381	3498265	1	True				
ANR	3501183	ExpressionStatement	tok -> type = TK_CC_OPEN	3717:6:82389:82411	3498265	60	True				
ANR	3501184	AssignmentExpression	tok -> type = TK_CC_OPEN		3498265	0		=			
ANR	3501185	PtrMemberAccess	tok -> type		3498265	0					
ANR	3501186	Identifier	tok		3498265	0					
ANR	3501187	Identifier	type		3498265	1					
ANR	3501188	Identifier	TK_CC_OPEN		3498265	1					
ANR	3501189	BreakStatement	break ;	3718:6:82419:82424	3498265	61	True				
ANR	3501190	Label	case ']' :	3720:4:82431:82439	3498265	62	True				
ANR	3501191	IfStatement	if ( * src > env -> pattern )		3498265	63					
ANR	3501192	Condition	* src > env -> pattern	3721:10:82451:82469	3498265	0	True				
ANR	3501193	RelationalExpression	* src > env -> pattern		3498265	0		>			
ANR	3501194	UnaryOperationExpression	* src		3498265	0					
ANR	3501195	UnaryOperator	*		3498265	0					
ANR	3501196	Identifier	src		3498265	1					
ANR	3501197	PtrMemberAccess	env -> pattern		3498265	1					
ANR	3501198	Identifier	env		3498265	0					
ANR	3501199	Identifier	pattern		3498265	1					
ANR	3501200	ExpressionStatement	"CLOSE_BRACKET_WITHOUT_ESC_WARN ( env , ( UChar * ) ""]"" )"	3722:1:82500:82549	3498265	1	True				
ANR	3501201	CallExpression	"CLOSE_BRACKET_WITHOUT_ESC_WARN ( env , ( UChar * ) ""]"" )"		3498265	0					
ANR	3501202	Callee	CLOSE_BRACKET_WITHOUT_ESC_WARN		3498265	0					
ANR	3501203	Identifier	CLOSE_BRACKET_WITHOUT_ESC_WARN		3498265	0					
ANR	3501204	ArgumentList	env		3498265	1					
ANR	3501205	Argument	env		3498265	0					
ANR	3501206	Identifier	env		3498265	0					
ANR	3501207	Argument	"( UChar * ) ""]"""		3498265	1					
ANR	3501208	CastExpression	"( UChar * ) ""]"""		3498265	0					
ANR	3501209	CastTarget	UChar *		3498265	0					
ANR	3501210	PrimaryExpression	"""]"""		3498265	1					
ANR	3501211	BreakStatement	break ;	3723:6:82557:82562	3498265	64	True				
ANR	3501212	Label	case '#' :	3725:4:82569:82577	3498265	65	True				
ANR	3501213	IfStatement	if ( IS_EXTEND ( env -> option ) )		3498265	66					
ANR	3501214	Condition	IS_EXTEND ( env -> option )	3726:10:82589:82610	3498265	0	True				
ANR	3501215	CallExpression	IS_EXTEND ( env -> option )		3498265	0					
ANR	3501216	Callee	IS_EXTEND		3498265	0					
ANR	3501217	Identifier	IS_EXTEND		3498265	0					
ANR	3501218	ArgumentList	env -> option		3498265	1					
ANR	3501219	Argument	env -> option		3498265	0					
ANR	3501220	PtrMemberAccess	env -> option		3498265	0					
ANR	3501221	Identifier	env		3498265	0					
ANR	3501222	Identifier	option		3498265	1					
ANR	3501223	CompoundStatement		600:34:15312:15312	3498265	1					
ANR	3501224	WhileStatement	while ( ! PEND )		3498265	0					
ANR	3501225	Condition	! PEND	3727:8:82623:82627	3498265	0	True				
ANR	3501226	UnaryOperationExpression	! PEND		3498265	0					
ANR	3501227	UnaryOperator	!		3498265	0					
ANR	3501228	Identifier	PEND		3498265	1					
ANR	3501229	CompoundStatement		601:15:15329:15329	3498265	1					
ANR	3501230	ExpressionStatement	PFETCH ( c )	3728:3:82635:82644	3498265	0	True				
ANR	3501231	CallExpression	PFETCH ( c )		3498265	0					
ANR	3501232	Callee	PFETCH		3498265	0					
ANR	3501233	Identifier	PFETCH		3498265	0					
ANR	3501234	ArgumentList	c		3498265	1					
ANR	3501235	Argument	c		3498265	0					
ANR	3501236	Identifier	c		3498265	0					
ANR	3501237	IfStatement	"if ( ONIGENC_IS_CODE_NEWLINE ( enc , c ) )"		3498265	1					
ANR	3501238	Condition	"ONIGENC_IS_CODE_NEWLINE ( enc , c )"	3729:7:82653:82683	3498265	0	True				
ANR	3501239	CallExpression	"ONIGENC_IS_CODE_NEWLINE ( enc , c )"		3498265	0					
ANR	3501240	Callee	ONIGENC_IS_CODE_NEWLINE		3498265	0					
ANR	3501241	Identifier	ONIGENC_IS_CODE_NEWLINE		3498265	0					
ANR	3501242	ArgumentList	enc		3498265	1					
ANR	3501243	Argument	enc		3498265	0					
ANR	3501244	Identifier	enc		3498265	0					
ANR	3501245	Argument	c		3498265	1					
ANR	3501246	Identifier	c		3498265	0					
ANR	3501247	BreakStatement	break ;	3730:5:82691:82696	3498265	1	True				
ANR	3501248	GotoStatement	goto start ;	3732:1:82702:82712	3498265	1	True				
ANR	3501249	Identifier	start		3498265	0					
ANR	3501250	BreakStatement	break ;	3733:1:82715:82720	3498265	2	True				
ANR	3501251	BreakStatement	break ;	3735:6:82736:82741	3498265	67	True				
ANR	3501252	Label	case ' ' :	3737:4:82748:82756	3498265	68	True				
ANR	3501253	Label	case '\\t' :	3737:14:82758:82767	3498265	69	True				
ANR	3501254	Label	case '\\n' :	3737:25:82769:82778	3498265	70	True				
ANR	3501255	Label	case '\\r' :	3737:36:82780:82789	3498265	71	True				
ANR	3501256	Label	case '\\f' :	3737:47:82791:82800	3498265	72	True				
ANR	3501257	IfStatement	if ( IS_EXTEND ( env -> option ) )		3498265	73					
ANR	3501258	Condition	IS_EXTEND ( env -> option )	3738:10:82812:82833	3498265	0	True				
ANR	3501259	CallExpression	IS_EXTEND ( env -> option )		3498265	0					
ANR	3501260	Callee	IS_EXTEND		3498265	0					
ANR	3501261	Identifier	IS_EXTEND		3498265	0					
ANR	3501262	ArgumentList	env -> option		3498265	1					
ANR	3501263	Argument	env -> option		3498265	0					
ANR	3501264	PtrMemberAccess	env -> option		3498265	0					
ANR	3501265	Identifier	env		3498265	0					
ANR	3501266	Identifier	option		3498265	1					
ANR	3501267	GotoStatement	goto start ;	3739:1:82837:82847	3498265	1	True				
ANR	3501268	Identifier	start		3498265	0					
ANR	3501269	BreakStatement	break ;	3740:6:82855:82860	3498265	74	True				
ANR	3501270	Label	default :	3742:4:82867:82874	3498265	75	True				
ANR	3501271	Identifier	default		3498265	0					
ANR	3501272	BreakStatement	break ;	3744:6:82901:82906	3498265	76	True				
ANR	3501273	Label	out :	3749:1:82951:82954	3498265	14	True				
ANR	3501274	Identifier	out		3498265	0					
ANR	3501275	ExpressionStatement	* src = p	3751:2:82965:82973	3498265	15	True				
ANR	3501276	AssignmentExpression	* src = p		3498265	0		=			
ANR	3501277	UnaryOperationExpression	* src		3498265	0					
ANR	3501278	UnaryOperator	*		3498265	0					
ANR	3501279	Identifier	src		3498265	1					
ANR	3501280	Identifier	p		3498265	1					
ANR	3501281	ReturnStatement	return tok -> type ;	3752:2:82977:82993	3498265	16	True				
ANR	3501282	PtrMemberAccess	tok -> type		3498265	0					
ANR	3501283	Identifier	tok		3498265	0					
ANR	3501284	Identifier	type		3498265	1					
ANR	3501285	ReturnType	static int		3498265	1					
ANR	3501286	Identifier	fetch_token		3498265	2					
ANR	3501287	ParameterList	"OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env"		3498265	3					
ANR	3501288	Parameter	OnigToken * tok	3126:12:67245:67258	3498265	0	True				
ANR	3501289	ParameterType	OnigToken *		3498265	0					
ANR	3501290	Identifier	tok		3498265	1					
ANR	3501291	Parameter	UChar * * src	3126:28:67261:67271	3498265	1	True				
ANR	3501292	ParameterType	UChar * *		3498265	0					
ANR	3501293	Identifier	src		3498265	1					
ANR	3501294	Parameter	UChar * end	3126:41:67274:67283	3498265	2	True				
ANR	3501295	ParameterType	UChar *		3498265	0					
ANR	3501296	Identifier	end		3498265	1					
ANR	3501297	Parameter	ScanEnv * env	3126:53:67286:67297	3498265	3	True				
ANR	3501298	ParameterType	ScanEnv *		3498265	0					
ANR	3501299	Identifier	env		3498265	1					
ANR	3501300	CFGEntryNode	ENTRY		3498265		True				
ANR	3501301	CFGExitNode	EXIT		3498265		True				
ANR	3501302	Symbol	ANCHOR_END_BUF		3498265						
ANR	3501303	Symbol	ONIG_SYN_OP2_ESC_U_HEX4		3498265						
ANR	3501304	Symbol	ONIG_SYN_OP_QMARK_ZERO_ONE		3498265						
ANR	3501305	Symbol	* backs		3498265						
ANR	3501306	Symbol	prev		3498265						
ANR	3501307	Symbol	ONIG_SYN_OP2_ESC_K_NAMED_BACKREF		3498265						
ANR	3501308	Symbol	ANCHOR_END_LINE		3498265						
ANR	3501309	Symbol	& back_num		3498265						
ANR	3501310	Symbol	tok -> type		3498265						
ANR	3501311	Symbol	env -> reg		3498265						
ANR	3501312	Symbol	MC_ANYCHAR_ANYTIME		3498265						
ANR	3501313	Symbol	TK_ANYCHAR		3498265						
ANR	3501314	Symbol	ANCHOR_WORD_BEGIN		3498265						
ANR	3501315	Symbol	TK_QUOTE_OPEN		3498265						
ANR	3501316	Symbol	TK_INTERVAL		3498265						
ANR	3501317	Symbol	ONIGERR_UNDEFINED_NAME_REFERENCE		3498265						
ANR	3501318	Symbol	ONIG_SYN_STRICT_CHECK_BACKREF		3498265						
ANR	3501319	Symbol	SCANENV_MEM_NODES		3498265						
ANR	3501320	Symbol	BACKREF_REL_TO_ABS		3498265						
ANR	3501321	Symbol	ONIGERR_TOO_LONG_WIDE_CHAR_VALUE		3498265						
ANR	3501322	Symbol	tok -> escaped		3498265						
ANR	3501323	Symbol	& tok -> u . backref . level		3498265						
ANR	3501324	Symbol	ANCHOR_WORD_END		3498265						
ANR	3501325	Symbol	ONIG_SYN_OP_ESC_VBAR_ALT		3498265						
ANR	3501326	Symbol	PPEEK		3498265						
ANR	3501327	Symbol	IS_SYNTAX_OP		3498265						
ANR	3501328	Symbol	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		3498265						
ANR	3501329	Symbol	ONIG_SYN_OP_DOT_ANYCHAR		3498265						
ANR	3501330	Symbol	ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL		3498265						
ANR	3501331	Symbol	TK_CHAR_TYPE		3498265						
ANR	3501332	Symbol	ONIGENC_IS_CODE_NEWLINE		3498265						
ANR	3501333	Symbol	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		3498265						
ANR	3501334	Symbol	ONIG_SYN_OP2_ESC_H_XDIGIT		3498265						
ANR	3501335	Symbol	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		3498265						
ANR	3501336	Symbol	* tok		3498265						
ANR	3501337	Symbol	ONIG_SYN_OP_ASTERISK_ZERO_INF		3498265						
ANR	3501338	Symbol	ANCHOR_BEGIN_LINE		3498265						
ANR	3501339	Symbol	tok -> u . c		3498265						
ANR	3501340	Symbol	ONIG_SYN_OP_ESC_W_WORD		3498265						
ANR	3501341	Symbol	ANCHOR_SEMI_END_BUF		3498265						
ANR	3501342	Symbol	tok -> u . call . name		3498265						
ANR	3501343	Symbol	env -> enc		3498265						
ANR	3501344	Symbol	IS_SINGLELINE		3498265						
ANR	3501345	Symbol	PEND		3498265						
ANR	3501346	Symbol	fetch_range_quantifier		3498265						
ANR	3501347	Symbol	TK_ANCHOR		3498265						
ANR	3501348	Symbol	tok		3498265						
ANR	3501349	Symbol	tok -> u . code		3498265						
ANR	3501350	Symbol	REPEAT_INFINITE		3498265						
ANR	3501351	Symbol	& tok -> u . backref		3498265						
ANR	3501352	Symbol	* * backs		3498265						
ANR	3501353	Symbol	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		3498265						
ANR	3501354	Symbol	tok -> u . anchor		3498265						
ANR	3501355	Symbol	MC_ANYCHAR		3498265						
ANR	3501356	Symbol	back_num		3498265						
ANR	3501357	Symbol	TK_SUBEXP_OPEN		3498265						
ANR	3501358	Symbol	c		3498265						
ANR	3501359	Symbol	TK_ALT		3498265						
ANR	3501360	Symbol	tok -> backp		3498265						
ANR	3501361	Symbol	ANCHOR_WORD_BOUND		3498265						
ANR	3501362	Symbol	ONIGENC_CTYPE_DIGIT		3498265						
ANR	3501363	Symbol	i		3498265						
ANR	3501364	Symbol	ONIG_SYN_OP_DECIMAL_BACKREF		3498265						
ANR	3501365	Symbol	enclen		3498265						
ANR	3501366	Symbol	MC_ESC		3498265						
ANR	3501367	Symbol	* back_num		3498265						
ANR	3501368	Symbol	p		3498265						
ANR	3501369	Symbol	scan_unsigned_octal_number		3498265						
ANR	3501370	Symbol	r		3498265						
ANR	3501371	Symbol	TK_SUBEXP_CLOSE		3498265						
ANR	3501372	Symbol	tok -> u . backref . by_name		3498265						
ANR	3501373	Symbol	ONIG_SYN_OP_QMARK_NON_GREEDY		3498265						
ANR	3501374	Symbol	ONIGENC_CTYPE_WORD		3498265						
ANR	3501375	Symbol	IS_EXTEND		3498265						
ANR	3501376	Symbol	tok -> base		3498265						
ANR	3501377	Symbol	ANCHOR_NOT_WORD_BOUND		3498265						
ANR	3501378	Symbol	scan_unsigned_hexadecimal_number		3498265						
ANR	3501379	Symbol	ONIG_SYN_OP_ESC_X_HEX2		3498265						
ANR	3501380	Symbol	tok -> u . repeat . possessive		3498265						
ANR	3501381	Symbol	TK_EOT		3498265						
ANR	3501382	Symbol	num		3498265						
ANR	3501383	Symbol	ONIG_SYN_OP2_ESC_G_SUBEXP_CALL		3498265						
ANR	3501384	Symbol	ONIG_INEFFECTIVE_META_CHAR		3498265						
ANR	3501385	Symbol	tok -> u . call . gnum		3498265						
ANR	3501386	Symbol	ONIG_SYN_OP_ESC_PLUS_ONE_INF		3498265						
ANR	3501387	Symbol	* src		3498265						
ANR	3501388	Symbol	gnum		3498265						
ANR	3501389	Symbol	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		3498265						
ANR	3501390	Symbol	* SCANENV_MEM_NODES		3498265						
ANR	3501391	Symbol	env -> option		3498265						
ANR	3501392	Symbol	ONIG_SYN_OP_ESC_B_WORD_BOUND		3498265						
ANR	3501393	Symbol	ONIGENC_CTYPE_SPACE		3498265						
ANR	3501394	Symbol	tok -> u . prop . not		3498265						
ANR	3501395	Symbol	IS_MC_ESC_CODE		3498265						
ANR	3501396	Symbol	IS_SYNTAX_BV		3498265						
ANR	3501397	Symbol	tok -> u . subtype		3498265						
ANR	3501398	Symbol	ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR		3498265						
ANR	3501399	Symbol	ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE		3498265						
ANR	3501400	Symbol	TK_ANYCHAR_ANYTIME		3498265						
ANR	3501401	Symbol	TK_STRING		3498265						
ANR	3501402	Symbol	tok -> u . prop		3498265						
ANR	3501403	Symbol	name_end		3498265						
ANR	3501404	Symbol	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		3498265						
ANR	3501405	Symbol	ONIG_SYN_OP_ESC_D_DIGIT		3498265						
ANR	3501406	Symbol	* * i		3498265						
ANR	3501407	Symbol	ONIGENC_IS_CODE_XDIGIT		3498265						
ANR	3501408	Symbol	TK_CODE_POINT		3498265						
ANR	3501409	Symbol	TK_OP_REPEAT		3498265						
ANR	3501410	Symbol	ANCHOR_BEGIN_POSITION		3498265						
ANR	3501411	Symbol	* env		3498265						
ANR	3501412	Symbol	& backs		3498265						
ANR	3501413	Symbol	TK_CC_OPEN		3498265						
ANR	3501414	Symbol	TK_BACKREF		3498265						
ANR	3501415	Symbol	tok -> u . backref . refs		3498265						
ANR	3501416	Symbol	env -> syntax		3498265						
ANR	3501417	Symbol	ONIG_MAX_BACKREF_NUM		3498265						
ANR	3501418	Symbol	& gnum		3498265						
ANR	3501419	Symbol	NULL_UCHARP		3498265						
ANR	3501420	Symbol	ONIG_SYN_OP_ESC_X_BRACE_HEX8		3498265						
ANR	3501421	Symbol	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		3498265						
ANR	3501422	Symbol	ONIGERR_END_PATTERN_AT_ESCAPE		3498265						
ANR	3501423	Symbol	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		3498265						
ANR	3501424	Symbol	PPEEK_IS		3498265						
ANR	3501425	Symbol	tok -> u . repeat . greedy		3498265						
ANR	3501426	Symbol	ONIGERR_INVALID_BACKREF		3498265						
ANR	3501427	Symbol	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		3498265						
ANR	3501428	Symbol	ANCHOR_BEGIN_BUF		3498265						
ANR	3501429	Symbol	onig_name_to_group_numbers		3498265						
ANR	3501430	Symbol	TK_CALL		3498265						
ANR	3501431	Symbol	syn		3498265						
ANR	3501432	Symbol	tok -> u . call . name_end		3498265						
ANR	3501433	Symbol	fetch_name		3498265						
ANR	3501434	Symbol	ONIG_SYN_OP_ESC_QMARK_ZERO_ONE		3498265						
ANR	3501435	Symbol	onig_scan_unsigned_number		3498265						
ANR	3501436	Symbol	ONIG_SYN_OP_LINE_ANCHOR		3498265						
ANR	3501437	Symbol	IS_SYNTAX_OP2		3498265						
ANR	3501438	Symbol	tok -> u . backref . num		3498265						
ANR	3501439	Symbol	& name_end		3498265						
ANR	3501440	Symbol	tok -> u . backref . exist_level		3498265						
ANR	3501441	Symbol	IS_NULL		3498265						
ANR	3501442	Symbol	ONIG_SYN_OP_BRACE_INTERVAL		3498265						
ANR	3501443	Symbol	ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF		3498265						
ANR	3501444	Symbol	tok -> u . repeat . upper		3498265						
ANR	3501445	Symbol	tok -> u . backref		3498265						
ANR	3501446	Symbol	ONIG_SYN_OP_LPAREN_SUBEXP		3498265						
ANR	3501447	Symbol	end		3498265						
ANR	3501448	Symbol	fetch_name_with_level		3498265						
ANR	3501449	Symbol	enc		3498265						
ANR	3501450	Symbol	tok -> u		3498265						
ANR	3501451	Symbol	MC_ANYTIME		3498265						
ANR	3501452	Symbol	ONIGENC_CTYPE_XDIGIT		3498265						
ANR	3501453	Symbol	ONIG_SYN_OP_ESC_BRACE_INTERVAL		3498265						
ANR	3501454	Symbol	ONIG_SYN_OP_BRACKET_CC		3498265						
ANR	3501455	Symbol	tok -> u . call		3498265						
ANR	3501456	Symbol	ONIG_SYN_OP_VBAR_ALT		3498265						
ANR	3501457	Symbol	tok -> u . repeat		3498265						
ANR	3501458	Symbol	ONIGERR_TOO_BIG_NUMBER		3498265						
ANR	3501459	Symbol	ONIGERR_END_PATTERN_IN_GROUP		3498265						
ANR	3501460	Symbol	src		3498265						
ANR	3501461	Symbol	env -> num_mem		3498265						
ANR	3501462	Symbol	env		3498265						
ANR	3501463	Symbol	ONIG_SYN_OP_ESC_S_WHITE_SPACE		3498265						
ANR	3501464	Symbol	tok -> u . backref . ref1		3498265						
ANR	3501465	Symbol	& tok -> u		3498265						
ANR	3501466	Symbol	* num		3498265						
ANR	3501467	Symbol	TK_CHAR_PROPERTY		3498265						
ANR	3501468	Symbol	ONIG_SYN_OP_PLUS_ONE_INF		3498265						
ANR	3501469	Symbol	* i		3498265						
ANR	3501470	Symbol	tok -> u . repeat . lower		3498265						
ANR	3501471	Symbol	env -> pattern		3498265						
ANR	3501472	Symbol	& p		3498265						
ANR	3501473	Symbol	fetch_escaped_value		3498265						
ANR	3501474	Symbol	ONIG_SYN_OP_VARIABLE_META_CHARACTERS		3498265						
ANR	3501475	Symbol	ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT		3498265						
ANR	3501476	Symbol	ONIG_SYN_OP_ESC_OCTAL3		3498265						
ANR	3501477	Symbol	tok -> u . prop . ctype		3498265						
ANR	3501478	Symbol	MC_ONE_OR_MORE_TIME		3498265						
ANR	3501479	Symbol	TK_RAW_BYTE		3498265						
ANR	3501480	Symbol	backs		3498265						
ANR	3501481	Symbol	MC_ZERO_OR_ONE_TIME		3498265						
ANR	3501482	Function	add_ctype_to_cc_by_range	3755:0:82998:84786							
ANR	3501483	FunctionDef	"add_ctype_to_cc_by_range (CClassNode * cc , int ctype ARG_UNUSED , int not , OnigEncoding enc ARG_UNUSED , OnigCodePoint sb_out , const OnigCodePoint mbr [ ])"		3501482	0					
ANR	3501484	CompoundStatement		3759:0:83188:84786	3501482	0					
ANR	3501485	IdentifierDeclStatement	"int i , r ;"	3760:2:83192:83200	3501482	0	True				
ANR	3501486	IdentifierDecl	i		3501482	0					
ANR	3501487	IdentifierDeclType	int		3501482	0					
ANR	3501488	Identifier	i		3501482	1					
ANR	3501489	IdentifierDecl	r		3501482	1					
ANR	3501490	IdentifierDeclType	int		3501482	0					
ANR	3501491	Identifier	r		3501482	1					
ANR	3501492	IdentifierDeclStatement	OnigCodePoint j ;	3761:2:83204:83219	3501482	1	True				
ANR	3501493	IdentifierDecl	j		3501482	0					
ANR	3501494	IdentifierDeclType	OnigCodePoint		3501482	0					
ANR	3501495	Identifier	j		3501482	1					
ANR	3501496	IdentifierDeclStatement	int n = ONIGENC_CODE_RANGE_NUM ( mbr ) ;	3763:2:83224:83259	3501482	2	True				
ANR	3501497	IdentifierDecl	n = ONIGENC_CODE_RANGE_NUM ( mbr )		3501482	0					
ANR	3501498	IdentifierDeclType	int		3501482	0					
ANR	3501499	Identifier	n		3501482	1					
ANR	3501500	AssignmentExpression	n = ONIGENC_CODE_RANGE_NUM ( mbr )		3501482	2		=			
ANR	3501501	Identifier	n		3501482	0					
ANR	3501502	CallExpression	ONIGENC_CODE_RANGE_NUM ( mbr )		3501482	1					
ANR	3501503	Callee	ONIGENC_CODE_RANGE_NUM		3501482	0					
ANR	3501504	Identifier	ONIGENC_CODE_RANGE_NUM		3501482	0					
ANR	3501505	ArgumentList	mbr		3501482	1					
ANR	3501506	Argument	mbr		3501482	0					
ANR	3501507	Identifier	mbr		3501482	0					
ANR	3501508	IfStatement	if ( not == 0 )		3501482	3					
ANR	3501509	Condition	not == 0	3765:6:83268:83275	3501482	0	True				
ANR	3501510	EqualityExpression	not == 0		3501482	0		==			
ANR	3501511	Identifier	not		3501482	0					
ANR	3501512	PrimaryExpression	0		3501482	1					
ANR	3501513	CompoundStatement		7:16:89:89	3501482	1					
ANR	3501514	ForStatement	for ( i = 0 ; i < n ; i ++ )		3501482	0					
ANR	3501515	ForInit	i = 0 ;	3766:9:83289:83294	3501482	0	True				
ANR	3501516	AssignmentExpression	i = 0		3501482	0		=			
ANR	3501517	Identifier	i		3501482	0					
ANR	3501518	PrimaryExpression	0		3501482	1					
ANR	3501519	Condition	i < n	3766:16:83296:83300	3501482	1	True				
ANR	3501520	RelationalExpression	i < n		3501482	0		<			
ANR	3501521	Identifier	i		3501482	0					
ANR	3501522	Identifier	n		3501482	1					
ANR	3501523	PostIncDecOperationExpression	i ++	3766:23:83303:83305	3501482	2	True				
ANR	3501524	Identifier	i		3501482	0					
ANR	3501525	IncDec	++		3501482	1					
ANR	3501526	CompoundStatement		8:28:119:119	3501482	3					
ANR	3501527	ForStatement	"for ( j = ONIGENC_CODE_RANGE_FROM ( mbr , i ) ; j <= ONIGENC_CODE_RANGE_TO ( mbr , i ) ; j ++ )"		3501482	0					
ANR	3501528	ForInit	"j = ONIGENC_CODE_RANGE_FROM ( mbr , i ) ;"	3767:11:83321:83357	3501482	0	True				
ANR	3501529	AssignmentExpression	"j = ONIGENC_CODE_RANGE_FROM ( mbr , i )"		3501482	0		=			
ANR	3501530	Identifier	j		3501482	0					
ANR	3501531	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		3501482	1					
ANR	3501532	Callee	ONIGENC_CODE_RANGE_FROM		3501482	0					
ANR	3501533	Identifier	ONIGENC_CODE_RANGE_FROM		3501482	0					
ANR	3501534	ArgumentList	mbr		3501482	1					
ANR	3501535	Argument	mbr		3501482	0					
ANR	3501536	Identifier	mbr		3501482	0					
ANR	3501537	Argument	i		3501482	1					
ANR	3501538	Identifier	i		3501482	0					
ANR	3501539	Condition	"j <= ONIGENC_CODE_RANGE_TO ( mbr , i )"	3768:11:83370:83403	3501482	1	True				
ANR	3501540	RelationalExpression	"j <= ONIGENC_CODE_RANGE_TO ( mbr , i )"		3501482	0		<=			
ANR	3501541	Identifier	j		3501482	0					
ANR	3501542	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		3501482	1					
ANR	3501543	Callee	ONIGENC_CODE_RANGE_TO		3501482	0					
ANR	3501544	Identifier	ONIGENC_CODE_RANGE_TO		3501482	0					
ANR	3501545	ArgumentList	mbr		3501482	1					
ANR	3501546	Argument	mbr		3501482	0					
ANR	3501547	Identifier	mbr		3501482	0					
ANR	3501548	Argument	i		3501482	1					
ANR	3501549	Identifier	i		3501482	0					
ANR	3501550	PostIncDecOperationExpression	j ++	3768:47:83406:83408	3501482	2	True				
ANR	3501551	Identifier	j		3501482	0					
ANR	3501552	IncDec	++		3501482	1					
ANR	3501553	CompoundStatement		10:52:222:222	3501482	3					
ANR	3501554	IfStatement	if ( j >= sb_out )		3501482	0					
ANR	3501555	Condition	j >= sb_out	3769:5:83418:83428	3501482	0	True				
ANR	3501556	RelationalExpression	j >= sb_out		3501482	0		>=			
ANR	3501557	Identifier	j		3501482	0					
ANR	3501558	Identifier	sb_out		3501482	1					
ANR	3501559	CompoundStatement		11:18:242:242	3501482	1					
ANR	3501560	IfStatement	"if ( j == ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		3501482	0					
ANR	3501561	Condition	"j == ONIGENC_CODE_RANGE_TO ( mbr , i )"	3770:7:83440:83473	3501482	0	True				
ANR	3501562	EqualityExpression	"j == ONIGENC_CODE_RANGE_TO ( mbr , i )"		3501482	0		==			
ANR	3501563	Identifier	j		3501482	0					
ANR	3501564	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		3501482	1					
ANR	3501565	Callee	ONIGENC_CODE_RANGE_TO		3501482	0					
ANR	3501566	Identifier	ONIGENC_CODE_RANGE_TO		3501482	0					
ANR	3501567	ArgumentList	mbr		3501482	1					
ANR	3501568	Argument	mbr		3501482	0					
ANR	3501569	Identifier	mbr		3501482	0					
ANR	3501570	Argument	i		3501482	1					
ANR	3501571	Identifier	i		3501482	0					
ANR	3501572	ExpressionStatement	i ++	3770:43:83476:83479	3501482	1	True				
ANR	3501573	PostIncDecOperationExpression	i ++		3501482	0					
ANR	3501574	Identifier	i		3501482	0					
ANR	3501575	IncDec	++		3501482	1					
ANR	3501576	ElseStatement	else		3501482	0					
ANR	3501577	IfStatement	"if ( j > ONIGENC_CODE_RANGE_FROM ( mbr , i ) )"		3501482	0					
ANR	3501578	Condition	"j > ONIGENC_CODE_RANGE_FROM ( mbr , i )"	3771:12:83493:83527	3501482	0	True				
ANR	3501579	RelationalExpression	"j > ONIGENC_CODE_RANGE_FROM ( mbr , i )"		3501482	0		>			
ANR	3501580	Identifier	j		3501482	0					
ANR	3501581	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		3501482	1					
ANR	3501582	Callee	ONIGENC_CODE_RANGE_FROM		3501482	0					
ANR	3501583	Identifier	ONIGENC_CODE_RANGE_FROM		3501482	0					
ANR	3501584	ArgumentList	mbr		3501482	1					
ANR	3501585	Argument	mbr		3501482	0					
ANR	3501586	Identifier	mbr		3501482	0					
ANR	3501587	Argument	i		3501482	1					
ANR	3501588	Identifier	i		3501482	0					
ANR	3501589	CompoundStatement		13:49:341:341	3501482	1					
ANR	3501590	ExpressionStatement	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , j , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"	3772:5:83537:83619	3501482	0	True				
ANR	3501591	AssignmentExpression	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , j , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		3501482	0		=			
ANR	3501592	Identifier	r		3501482	0					
ANR	3501593	CallExpression	"add_code_range_to_buf ( & ( cc -> mbuf ) , j , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		3501482	1					
ANR	3501594	Callee	add_code_range_to_buf		3501482	0					
ANR	3501595	Identifier	add_code_range_to_buf		3501482	0					
ANR	3501596	ArgumentList	& ( cc -> mbuf )		3501482	1					
ANR	3501597	Argument	& ( cc -> mbuf )		3501482	0					
ANR	3501598	UnaryOperationExpression	& ( cc -> mbuf )		3501482	0					
ANR	3501599	UnaryOperator	&		3501482	0					
ANR	3501600	PtrMemberAccess	cc -> mbuf		3501482	1					
ANR	3501601	Identifier	cc		3501482	0					
ANR	3501602	Identifier	mbuf		3501482	1					
ANR	3501603	Argument	j		3501482	1					
ANR	3501604	Identifier	j		3501482	0					
ANR	3501605	Argument	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		3501482	2					
ANR	3501606	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		3501482	0					
ANR	3501607	Callee	ONIGENC_CODE_RANGE_TO		3501482	0					
ANR	3501608	Identifier	ONIGENC_CODE_RANGE_TO		3501482	0					
ANR	3501609	ArgumentList	mbr		3501482	1					
ANR	3501610	Argument	mbr		3501482	0					
ANR	3501611	Identifier	mbr		3501482	0					
ANR	3501612	Argument	i		3501482	1					
ANR	3501613	Identifier	i		3501482	0					
ANR	3501614	IfStatement	if ( r != 0 )		3501482	1					
ANR	3501615	Condition	r != 0	3774:9:83630:83635	3501482	0	True				
ANR	3501616	EqualityExpression	r != 0		3501482	0		!=			
ANR	3501617	Identifier	r		3501482	0					
ANR	3501618	PrimaryExpression	0		3501482	1					
ANR	3501619	ReturnStatement	return r ;	3774:17:83638:83646	3501482	1	True				
ANR	3501620	Identifier	r		3501482	0					
ANR	3501621	ExpressionStatement	i ++	3775:5:83653:83656	3501482	2	True				
ANR	3501622	PostIncDecOperationExpression	i ++		3501482	0					
ANR	3501623	Identifier	i		3501482	0					
ANR	3501624	IncDec	++		3501482	1					
ANR	3501625	GotoStatement	goto sb_end ;	3778:3:83667:83678	3501482	1	True				
ANR	3501626	Identifier	sb_end		3501482	0					
ANR	3501627	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , j )"	3780:8:83691:83716	3501482	1	True				
ANR	3501628	CallExpression	"BITSET_SET_BIT ( cc -> bs , j )"		3501482	0					
ANR	3501629	Callee	BITSET_SET_BIT		3501482	0					
ANR	3501630	Identifier	BITSET_SET_BIT		3501482	0					
ANR	3501631	ArgumentList	cc -> bs		3501482	1					
ANR	3501632	Argument	cc -> bs		3501482	0					
ANR	3501633	PtrMemberAccess	cc -> bs		3501482	0					
ANR	3501634	Identifier	cc		3501482	0					
ANR	3501635	Identifier	bs		3501482	1					
ANR	3501636	Argument	j		3501482	1					
ANR	3501637	Identifier	j		3501482	0					
ANR	3501638	Label	sb_end :	3784:2:83735:83741	3501482	1	True				
ANR	3501639	Identifier	sb_end		3501482	0					
ANR	3501640	ForStatement	for ( ; i < n ; i ++ )		3501482	2					
ANR	3501641	Condition	i < n	3785:12:83755:83759	3501482	0	True				
ANR	3501642	RelationalExpression	i < n		3501482	0		<			
ANR	3501643	Identifier	i		3501482	0					
ANR	3501644	Identifier	n		3501482	1					
ANR	3501645	PostIncDecOperationExpression	i ++	3785:19:83762:83764	3501482	1	True				
ANR	3501646	Identifier	i		3501482	0					
ANR	3501647	IncDec	++		3501482	1					
ANR	3501648	CompoundStatement		27:24:578:578	3501482	2					
ANR	3501649	ExpressionStatement	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , ONIGENC_CODE_RANGE_FROM ( mbr , i ) , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"	3786:6:83775:83941	3501482	0	True				
ANR	3501650	AssignmentExpression	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , ONIGENC_CODE_RANGE_FROM ( mbr , i ) , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		3501482	0		=			
ANR	3501651	Identifier	r		3501482	0					
ANR	3501652	CallExpression	"add_code_range_to_buf ( & ( cc -> mbuf ) , ONIGENC_CODE_RANGE_FROM ( mbr , i ) , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		3501482	1					
ANR	3501653	Callee	add_code_range_to_buf		3501482	0					
ANR	3501654	Identifier	add_code_range_to_buf		3501482	0					
ANR	3501655	ArgumentList	& ( cc -> mbuf )		3501482	1					
ANR	3501656	Argument	& ( cc -> mbuf )		3501482	0					
ANR	3501657	UnaryOperationExpression	& ( cc -> mbuf )		3501482	0					
ANR	3501658	UnaryOperator	&		3501482	0					
ANR	3501659	PtrMemberAccess	cc -> mbuf		3501482	1					
ANR	3501660	Identifier	cc		3501482	0					
ANR	3501661	Identifier	mbuf		3501482	1					
ANR	3501662	Argument	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		3501482	1					
ANR	3501663	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		3501482	0					
ANR	3501664	Callee	ONIGENC_CODE_RANGE_FROM		3501482	0					
ANR	3501665	Identifier	ONIGENC_CODE_RANGE_FROM		3501482	0					
ANR	3501666	ArgumentList	mbr		3501482	1					
ANR	3501667	Argument	mbr		3501482	0					
ANR	3501668	Identifier	mbr		3501482	0					
ANR	3501669	Argument	i		3501482	1					
ANR	3501670	Identifier	i		3501482	0					
ANR	3501671	Argument	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		3501482	2					
ANR	3501672	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		3501482	0					
ANR	3501673	Callee	ONIGENC_CODE_RANGE_TO		3501482	0					
ANR	3501674	Identifier	ONIGENC_CODE_RANGE_TO		3501482	0					
ANR	3501675	ArgumentList	mbr		3501482	1					
ANR	3501676	Argument	mbr		3501482	0					
ANR	3501677	Identifier	mbr		3501482	0					
ANR	3501678	Argument	i		3501482	1					
ANR	3501679	Identifier	i		3501482	0					
ANR	3501680	IfStatement	if ( r != 0 )		3501482	1					
ANR	3501681	Condition	r != 0	3789:10:83953:83958	3501482	0	True				
ANR	3501682	EqualityExpression	r != 0		3501482	0		!=			
ANR	3501683	Identifier	r		3501482	0					
ANR	3501684	PrimaryExpression	0		3501482	1					
ANR	3501685	ReturnStatement	return r ;	3789:18:83961:83969	3501482	1	True				
ANR	3501686	Identifier	r		3501482	0					
ANR	3501687	ElseStatement	else		3501482	0					
ANR	3501688	CompoundStatement		35:4:805:827	3501482	0					
ANR	3501689	IdentifierDeclStatement	OnigCodePoint prev = 0 ;	3793:4:83994:84016	3501482	0	True				
ANR	3501690	IdentifierDecl	prev = 0		3501482	0					
ANR	3501691	IdentifierDeclType	OnigCodePoint		3501482	0					
ANR	3501692	Identifier	prev		3501482	1					
ANR	3501693	AssignmentExpression	prev = 0		3501482	2		=			
ANR	3501694	Identifier	prev		3501482	0					
ANR	3501695	PrimaryExpression	0		3501482	1					
ANR	3501696	ForStatement	for ( i = 0 ; i < n ; i ++ )		3501482	1					
ANR	3501697	ForInit	i = 0 ;	3795:9:84028:84033	3501482	0	True				
ANR	3501698	AssignmentExpression	i = 0		3501482	0		=			
ANR	3501699	Identifier	i		3501482	0					
ANR	3501700	PrimaryExpression	0		3501482	1					
ANR	3501701	Condition	i < n	3795:16:84035:84039	3501482	1	True				
ANR	3501702	RelationalExpression	i < n		3501482	0		<			
ANR	3501703	Identifier	i		3501482	0					
ANR	3501704	Identifier	n		3501482	1					
ANR	3501705	PostIncDecOperationExpression	i ++	3795:23:84042:84044	3501482	2	True				
ANR	3501706	Identifier	i		3501482	0					
ANR	3501707	IncDec	++		3501482	1					
ANR	3501708	CompoundStatement		37:28:858:858	3501482	3					
ANR	3501709	ForStatement	"for ( j = prev ; j < ONIGENC_CODE_RANGE_FROM ( mbr , i ) ; j ++ )"		3501482	0					
ANR	3501710	ForInit	j = prev ;	3796:11:84060:84068	3501482	0	True				
ANR	3501711	AssignmentExpression	j = prev		3501482	0		=			
ANR	3501712	Identifier	j		3501482	0					
ANR	3501713	Identifier	prev		3501482	1					
ANR	3501714	Condition	"j < ONIGENC_CODE_RANGE_FROM ( mbr , i )"	3797:4:84074:84108	3501482	1	True				
ANR	3501715	RelationalExpression	"j < ONIGENC_CODE_RANGE_FROM ( mbr , i )"		3501482	0		<			
ANR	3501716	Identifier	j		3501482	0					
ANR	3501717	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		3501482	1					
ANR	3501718	Callee	ONIGENC_CODE_RANGE_FROM		3501482	0					
ANR	3501719	Identifier	ONIGENC_CODE_RANGE_FROM		3501482	0					
ANR	3501720	ArgumentList	mbr		3501482	1					
ANR	3501721	Argument	mbr		3501482	0					
ANR	3501722	Identifier	mbr		3501482	0					
ANR	3501723	Argument	i		3501482	1					
ANR	3501724	Identifier	i		3501482	0					
ANR	3501725	PostIncDecOperationExpression	j ++	3797:41:84111:84113	3501482	2	True				
ANR	3501726	Identifier	j		3501482	0					
ANR	3501727	IncDec	++		3501482	1					
ANR	3501728	CompoundStatement		39:46:927:927	3501482	3					
ANR	3501729	IfStatement	if ( j >= sb_out )		3501482	0					
ANR	3501730	Condition	j >= sb_out	3798:5:84123:84133	3501482	0	True				
ANR	3501731	RelationalExpression	j >= sb_out		3501482	0		>=			
ANR	3501732	Identifier	j		3501482	0					
ANR	3501733	Identifier	sb_out		3501482	1					
ANR	3501734	CompoundStatement		40:18:947:947	3501482	1					
ANR	3501735	GotoStatement	goto sb_end2 ;	3799:3:84141:84153	3501482	0	True				
ANR	3501736	Identifier	sb_end2		3501482	0					
ANR	3501737	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , j )"	3801:1:84159:84184	3501482	1	True				
ANR	3501738	CallExpression	"BITSET_SET_BIT ( cc -> bs , j )"		3501482	0					
ANR	3501739	Callee	BITSET_SET_BIT		3501482	0					
ANR	3501740	Identifier	BITSET_SET_BIT		3501482	0					
ANR	3501741	ArgumentList	cc -> bs		3501482	1					
ANR	3501742	Argument	cc -> bs		3501482	0					
ANR	3501743	PtrMemberAccess	cc -> bs		3501482	0					
ANR	3501744	Identifier	cc		3501482	0					
ANR	3501745	Identifier	bs		3501482	1					
ANR	3501746	Argument	j		3501482	1					
ANR	3501747	Identifier	j		3501482	0					
ANR	3501748	ExpressionStatement	"prev = ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"	3803:6:84200:84240	3501482	1	True				
ANR	3501749	AssignmentExpression	"prev = ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"		3501482	0		=			
ANR	3501750	Identifier	prev		3501482	0					
ANR	3501751	AdditiveExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"		3501482	1		+			
ANR	3501752	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		3501482	0					
ANR	3501753	Callee	ONIGENC_CODE_RANGE_TO		3501482	0					
ANR	3501754	Identifier	ONIGENC_CODE_RANGE_TO		3501482	0					
ANR	3501755	ArgumentList	mbr		3501482	1					
ANR	3501756	Argument	mbr		3501482	0					
ANR	3501757	Identifier	mbr		3501482	0					
ANR	3501758	Argument	i		3501482	1					
ANR	3501759	Identifier	i		3501482	0					
ANR	3501760	PrimaryExpression	1		3501482	1					
ANR	3501761	ForStatement	for ( j = prev ; j < sb_out ; j ++ )		3501482	2					
ANR	3501762	ForInit	j = prev ;	3805:9:84257:84265	3501482	0	True				
ANR	3501763	AssignmentExpression	j = prev		3501482	0		=			
ANR	3501764	Identifier	j		3501482	0					
ANR	3501765	Identifier	prev		3501482	1					
ANR	3501766	Condition	j < sb_out	3805:19:84267:84276	3501482	1	True				
ANR	3501767	RelationalExpression	j < sb_out		3501482	0		<			
ANR	3501768	Identifier	j		3501482	0					
ANR	3501769	Identifier	sb_out		3501482	1					
ANR	3501770	PostIncDecOperationExpression	j ++	3805:31:84279:84281	3501482	2	True				
ANR	3501771	Identifier	j		3501482	0					
ANR	3501772	IncDec	++		3501482	1					
ANR	3501773	CompoundStatement		47:36:1095:1095	3501482	3					
ANR	3501774	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , j )"	3806:6:84292:84317	3501482	0	True				
ANR	3501775	CallExpression	"BITSET_SET_BIT ( cc -> bs , j )"		3501482	0					
ANR	3501776	Callee	BITSET_SET_BIT		3501482	0					
ANR	3501777	Identifier	BITSET_SET_BIT		3501482	0					
ANR	3501778	ArgumentList	cc -> bs		3501482	1					
ANR	3501779	Argument	cc -> bs		3501482	0					
ANR	3501780	PtrMemberAccess	cc -> bs		3501482	0					
ANR	3501781	Identifier	cc		3501482	0					
ANR	3501782	Identifier	bs		3501482	1					
ANR	3501783	Argument	j		3501482	1					
ANR	3501784	Identifier	j		3501482	0					
ANR	3501785	Label	sb_end2 :	3809:2:84328:84335	3501482	3	True				
ANR	3501786	Identifier	sb_end2		3501482	0					
ANR	3501787	ExpressionStatement	prev = sb_out	3810:4:84341:84354	3501482	4	True				
ANR	3501788	AssignmentExpression	prev = sb_out		3501482	0		=			
ANR	3501789	Identifier	prev		3501482	0					
ANR	3501790	Identifier	sb_out		3501482	1					
ANR	3501791	ForStatement	for ( i = 0 ; i < n ; i ++ )		3501482	5					
ANR	3501792	ForInit	i = 0 ;	3812:9:84366:84371	3501482	0	True				
ANR	3501793	AssignmentExpression	i = 0		3501482	0		=			
ANR	3501794	Identifier	i		3501482	0					
ANR	3501795	PrimaryExpression	0		3501482	1					
ANR	3501796	Condition	i < n	3812:16:84373:84377	3501482	1	True				
ANR	3501797	RelationalExpression	i < n		3501482	0		<			
ANR	3501798	Identifier	i		3501482	0					
ANR	3501799	Identifier	n		3501482	1					
ANR	3501800	PostIncDecOperationExpression	i ++	3812:23:84380:84382	3501482	2	True				
ANR	3501801	Identifier	i		3501482	0					
ANR	3501802	IncDec	++		3501482	1					
ANR	3501803	CompoundStatement		54:28:1196:1196	3501482	3					
ANR	3501804	IfStatement	"if ( prev < ONIGENC_CODE_RANGE_FROM ( mbr , i ) )"		3501482	0					
ANR	3501805	Condition	"prev < ONIGENC_CODE_RANGE_FROM ( mbr , i )"	3813:10:84397:84434	3501482	0	True				
ANR	3501806	RelationalExpression	"prev < ONIGENC_CODE_RANGE_FROM ( mbr , i )"		3501482	0		<			
ANR	3501807	Identifier	prev		3501482	0					
ANR	3501808	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		3501482	1					
ANR	3501809	Callee	ONIGENC_CODE_RANGE_FROM		3501482	0					
ANR	3501810	Identifier	ONIGENC_CODE_RANGE_FROM		3501482	0					
ANR	3501811	ArgumentList	mbr		3501482	1					
ANR	3501812	Argument	mbr		3501482	0					
ANR	3501813	Identifier	mbr		3501482	0					
ANR	3501814	Argument	i		3501482	1					
ANR	3501815	Identifier	i		3501482	0					
ANR	3501816	CompoundStatement		55:50:1248:1248	3501482	1					
ANR	3501817	ExpressionStatement	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , prev , ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1 )"	3814:1:84440:84555	3501482	0	True				
ANR	3501818	AssignmentExpression	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , prev , ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1 )"		3501482	0		=			
ANR	3501819	Identifier	r		3501482	0					
ANR	3501820	CallExpression	"add_code_range_to_buf ( & ( cc -> mbuf ) , prev , ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1 )"		3501482	1					
ANR	3501821	Callee	add_code_range_to_buf		3501482	0					
ANR	3501822	Identifier	add_code_range_to_buf		3501482	0					
ANR	3501823	ArgumentList	& ( cc -> mbuf )		3501482	1					
ANR	3501824	Argument	& ( cc -> mbuf )		3501482	0					
ANR	3501825	UnaryOperationExpression	& ( cc -> mbuf )		3501482	0					
ANR	3501826	UnaryOperator	&		3501482	0					
ANR	3501827	PtrMemberAccess	cc -> mbuf		3501482	1					
ANR	3501828	Identifier	cc		3501482	0					
ANR	3501829	Identifier	mbuf		3501482	1					
ANR	3501830	Argument	prev		3501482	1					
ANR	3501831	Identifier	prev		3501482	0					
ANR	3501832	Argument	"ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1"		3501482	2					
ANR	3501833	AdditiveExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1"		3501482	0		-			
ANR	3501834	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		3501482	0					
ANR	3501835	Callee	ONIGENC_CODE_RANGE_FROM		3501482	0					
ANR	3501836	Identifier	ONIGENC_CODE_RANGE_FROM		3501482	0					
ANR	3501837	ArgumentList	mbr		3501482	1					
ANR	3501838	Argument	mbr		3501482	0					
ANR	3501839	Identifier	mbr		3501482	0					
ANR	3501840	Argument	i		3501482	1					
ANR	3501841	Identifier	i		3501482	0					
ANR	3501842	PrimaryExpression	1		3501482	1					
ANR	3501843	IfStatement	if ( r != 0 )		3501482	1					
ANR	3501844	Condition	r != 0	3816:5:84562:84567	3501482	0	True				
ANR	3501845	EqualityExpression	r != 0		3501482	0		!=			
ANR	3501846	Identifier	r		3501482	0					
ANR	3501847	PrimaryExpression	0		3501482	1					
ANR	3501848	ReturnStatement	return r ;	3816:13:84570:84578	3501482	1	True				
ANR	3501849	Identifier	r		3501482	0					
ANR	3501850	ExpressionStatement	"prev = ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"	3818:6:84594:84634	3501482	1	True				
ANR	3501851	AssignmentExpression	"prev = ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"		3501482	0		=			
ANR	3501852	Identifier	prev		3501482	0					
ANR	3501853	AdditiveExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"		3501482	1		+			
ANR	3501854	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		3501482	0					
ANR	3501855	Callee	ONIGENC_CODE_RANGE_TO		3501482	0					
ANR	3501856	Identifier	ONIGENC_CODE_RANGE_TO		3501482	0					
ANR	3501857	ArgumentList	mbr		3501482	1					
ANR	3501858	Argument	mbr		3501482	0					
ANR	3501859	Identifier	mbr		3501482	0					
ANR	3501860	Argument	i		3501482	1					
ANR	3501861	Identifier	i		3501482	0					
ANR	3501862	PrimaryExpression	1		3501482	1					
ANR	3501863	IfStatement	if ( prev < 0x7fffffff )		3501482	6					
ANR	3501864	Condition	prev < 0x7fffffff	3820:8:84650:84666	3501482	0	True				
ANR	3501865	RelationalExpression	prev < 0x7fffffff		3501482	0		<			
ANR	3501866	Identifier	prev		3501482	0					
ANR	3501867	PrimaryExpression	0x7fffffff		3501482	1					
ANR	3501868	CompoundStatement		62:27:1480:1480	3501482	1					
ANR	3501869	ExpressionStatement	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , prev , 0x7fffffff )"	3821:6:84677:84733	3501482	0	True				
ANR	3501870	AssignmentExpression	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , prev , 0x7fffffff )"		3501482	0		=			
ANR	3501871	Identifier	r		3501482	0					
ANR	3501872	CallExpression	"add_code_range_to_buf ( & ( cc -> mbuf ) , prev , 0x7fffffff )"		3501482	1					
ANR	3501873	Callee	add_code_range_to_buf		3501482	0					
ANR	3501874	Identifier	add_code_range_to_buf		3501482	0					
ANR	3501875	ArgumentList	& ( cc -> mbuf )		3501482	1					
ANR	3501876	Argument	& ( cc -> mbuf )		3501482	0					
ANR	3501877	UnaryOperationExpression	& ( cc -> mbuf )		3501482	0					
ANR	3501878	UnaryOperator	&		3501482	0					
ANR	3501879	PtrMemberAccess	cc -> mbuf		3501482	1					
ANR	3501880	Identifier	cc		3501482	0					
ANR	3501881	Identifier	mbuf		3501482	1					
ANR	3501882	Argument	prev		3501482	1					
ANR	3501883	Identifier	prev		3501482	0					
ANR	3501884	Argument	0x7fffffff		3501482	2					
ANR	3501885	PrimaryExpression	0x7fffffff		3501482	0					
ANR	3501886	IfStatement	if ( r != 0 )		3501482	1					
ANR	3501887	Condition	r != 0	3822:10:84745:84750	3501482	0	True				
ANR	3501888	EqualityExpression	r != 0		3501482	0		!=			
ANR	3501889	Identifier	r		3501482	0					
ANR	3501890	PrimaryExpression	0		3501482	1					
ANR	3501891	ReturnStatement	return r ;	3822:18:84753:84761	3501482	1	True				
ANR	3501892	Identifier	r		3501482	0					
ANR	3501893	ReturnStatement	return 0 ;	3826:2:84776:84784	3501482	4	True				
ANR	3501894	PrimaryExpression	0		3501482	0					
ANR	3501895	ReturnType	static int		3501482	1					
ANR	3501896	Identifier	add_ctype_to_cc_by_range		3501482	2					
ANR	3501897	ParameterList	"CClassNode * cc , int ctype ARG_UNUSED , int not , OnigEncoding enc ARG_UNUSED , OnigCodePoint sb_out , const OnigCodePoint mbr [ ]"		3501482	3					
ANR	3501898	Parameter	CClassNode * cc	3756:25:83034:83047	3501482	0	True				
ANR	3501899	ParameterType	CClassNode *		3501482	0					
ANR	3501900	Identifier	cc		3501482	1					
ANR	3501901	Parameter	int ctype ARG_UNUSED	3756:41:83050:83069	3501482	1	True				
ANR	3501902	ParameterType	int ctype		3501482	0					
ANR	3501903	Identifier	ARG_UNUSED		3501482	1					
ANR	3501904	Parameter	int not	3756:63:83072:83078	3501482	2	True				
ANR	3501905	ParameterType	int		3501482	0					
ANR	3501906	Identifier	not		3501482	1					
ANR	3501907	Parameter	OnigEncoding enc ARG_UNUSED	3757:4:83085:83111	3501482	3	True				
ANR	3501908	ParameterType	OnigEncoding enc		3501482	0					
ANR	3501909	Identifier	ARG_UNUSED		3501482	1					
ANR	3501910	Parameter	OnigCodePoint sb_out	3758:25:83139:83158	3501482	4	True				
ANR	3501911	ParameterType	OnigCodePoint		3501482	0					
ANR	3501912	Identifier	sb_out		3501482	1					
ANR	3501913	Parameter	const OnigCodePoint mbr [ ]	3758:47:83161:83185	3501482	5	True				
ANR	3501914	ParameterType	const OnigCodePoint [ ]		3501482	0					
ANR	3501915	Identifier	mbr		3501482	1					
ANR	3501916	CFGEntryNode	ENTRY		3501482		True				
ANR	3501917	CFGExitNode	EXIT		3501482		True				
ANR	3501918	Symbol	cc		3501482						
ANR	3501919	Symbol	ONIGENC_CODE_RANGE_TO		3501482						
ANR	3501920	Symbol	* cc		3501482						
ANR	3501921	Symbol	prev		3501482						
ANR	3501922	Symbol	i		3501482						
ANR	3501923	Symbol	j		3501482						
ANR	3501924	Symbol	ARG_UNUSED		3501482						
ANR	3501925	Symbol	n		3501482						
ANR	3501926	Symbol	cc -> bs		3501482						
ANR	3501927	Symbol	sb_out		3501482						
ANR	3501928	Symbol	not		3501482						
ANR	3501929	Symbol	r		3501482						
ANR	3501930	Symbol	ONIGENC_CODE_RANGE_NUM		3501482						
ANR	3501931	Symbol	ONIGENC_CODE_RANGE_FROM		3501482						
ANR	3501932	Symbol	add_code_range_to_buf		3501482						
ANR	3501933	Symbol	mbr		3501482						
ANR	3501934	Symbol	& cc -> mbuf		3501482						
ANR	3501935	Function	add_ctype_to_cc	3829:0:84789:86886							
ANR	3501936	FunctionDef	"add_ctype_to_cc (CClassNode * cc , int ctype , int not , ScanEnv * env)"		3501935	0					
ANR	3501937	CompoundStatement		3831:0:84866:86886	3501935	0					
ANR	3501938	IdentifierDeclStatement	"int c , r ;"	3832:2:84870:84878	3501935	0	True				
ANR	3501939	IdentifierDecl	c		3501935	0					
ANR	3501940	IdentifierDeclType	int		3501935	0					
ANR	3501941	Identifier	c		3501935	1					
ANR	3501942	IdentifierDecl	r		3501935	1					
ANR	3501943	IdentifierDeclType	int		3501935	0					
ANR	3501944	Identifier	r		3501935	1					
ANR	3501945	IdentifierDeclStatement	const OnigCodePoint * ranges ;	3833:2:84882:84909	3501935	1	True				
ANR	3501946	IdentifierDecl	* ranges		3501935	0					
ANR	3501947	IdentifierDeclType	const OnigCodePoint *		3501935	0					
ANR	3501948	Identifier	ranges		3501935	1					
ANR	3501949	IdentifierDeclStatement	OnigCodePoint sb_out ;	3834:2:84913:84933	3501935	2	True				
ANR	3501950	IdentifierDecl	sb_out		3501935	0					
ANR	3501951	IdentifierDeclType	OnigCodePoint		3501935	0					
ANR	3501952	Identifier	sb_out		3501935	1					
ANR	3501953	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	3835:2:84937:84964	3501935	3	True				
ANR	3501954	IdentifierDecl	enc = env -> enc		3501935	0					
ANR	3501955	IdentifierDeclType	OnigEncoding		3501935	0					
ANR	3501956	Identifier	enc		3501935	1					
ANR	3501957	AssignmentExpression	enc = env -> enc		3501935	2		=			
ANR	3501958	Identifier	enc		3501935	0					
ANR	3501959	PtrMemberAccess	env -> enc		3501935	1					
ANR	3501960	Identifier	env		3501935	0					
ANR	3501961	Identifier	enc		3501935	1					
ANR	3501962	ExpressionStatement	"r = ONIGENC_GET_CTYPE_CODE_RANGE ( enc , ctype , & sb_out , & ranges )"	3837:2:84969:85031	3501935	4	True				
ANR	3501963	AssignmentExpression	"r = ONIGENC_GET_CTYPE_CODE_RANGE ( enc , ctype , & sb_out , & ranges )"		3501935	0		=			
ANR	3501964	Identifier	r		3501935	0					
ANR	3501965	CallExpression	"ONIGENC_GET_CTYPE_CODE_RANGE ( enc , ctype , & sb_out , & ranges )"		3501935	1					
ANR	3501966	Callee	ONIGENC_GET_CTYPE_CODE_RANGE		3501935	0					
ANR	3501967	Identifier	ONIGENC_GET_CTYPE_CODE_RANGE		3501935	0					
ANR	3501968	ArgumentList	enc		3501935	1					
ANR	3501969	Argument	enc		3501935	0					
ANR	3501970	Identifier	enc		3501935	0					
ANR	3501971	Argument	ctype		3501935	1					
ANR	3501972	Identifier	ctype		3501935	0					
ANR	3501973	Argument	& sb_out		3501935	2					
ANR	3501974	UnaryOperationExpression	& sb_out		3501935	0					
ANR	3501975	UnaryOperator	&		3501935	0					
ANR	3501976	Identifier	sb_out		3501935	1					
ANR	3501977	Argument	& ranges		3501935	3					
ANR	3501978	UnaryOperationExpression	& ranges		3501935	0					
ANR	3501979	UnaryOperator	&		3501935	0					
ANR	3501980	Identifier	ranges		3501935	1					
ANR	3501981	IfStatement	if ( r == 0 )		3501935	5					
ANR	3501982	Condition	r == 0	3838:6:85039:85044	3501935	0	True				
ANR	3501983	EqualityExpression	r == 0		3501935	0		==			
ANR	3501984	Identifier	r		3501935	0					
ANR	3501985	PrimaryExpression	0		3501935	1					
ANR	3501986	CompoundStatement		8:14:180:180	3501935	1					
ANR	3501987	ReturnStatement	"return add_ctype_to_cc_by_range ( cc , ctype , not , env -> enc , sb_out , ranges ) ;"	3839:4:85053:85126	3501935	0	True				
ANR	3501988	CallExpression	"add_ctype_to_cc_by_range ( cc , ctype , not , env -> enc , sb_out , ranges )"		3501935	0					
ANR	3501989	Callee	add_ctype_to_cc_by_range		3501935	0					
ANR	3501990	Identifier	add_ctype_to_cc_by_range		3501935	0					
ANR	3501991	ArgumentList	cc		3501935	1					
ANR	3501992	Argument	cc		3501935	0					
ANR	3501993	Identifier	cc		3501935	0					
ANR	3501994	Argument	ctype		3501935	1					
ANR	3501995	Identifier	ctype		3501935	0					
ANR	3501996	Argument	not		3501935	2					
ANR	3501997	Identifier	not		3501935	0					
ANR	3501998	Argument	env -> enc		3501935	3					
ANR	3501999	PtrMemberAccess	env -> enc		3501935	0					
ANR	3502000	Identifier	env		3501935	0					
ANR	3502001	Identifier	enc		3501935	1					
ANR	3502002	Argument	sb_out		3501935	4					
ANR	3502003	Identifier	sb_out		3501935	0					
ANR	3502004	Argument	ranges		3501935	5					
ANR	3502005	Identifier	ranges		3501935	0					
ANR	3502006	ElseStatement	else		3501935	0					
ANR	3502007	IfStatement	if ( r != ONIG_NO_SUPPORT_CONFIG )		3501935	0					
ANR	3502008	Condition	r != ONIG_NO_SUPPORT_CONFIG	3841:11:85143:85169	3501935	0	True				
ANR	3502009	EqualityExpression	r != ONIG_NO_SUPPORT_CONFIG		3501935	0		!=			
ANR	3502010	Identifier	r		3501935	0					
ANR	3502011	Identifier	ONIG_NO_SUPPORT_CONFIG		3501935	1					
ANR	3502012	CompoundStatement		11:40:305:305	3501935	1					
ANR	3502013	ReturnStatement	return r ;	3842:4:85178:85186	3501935	0	True				
ANR	3502014	Identifier	r		3501935	0					
ANR	3502015	ExpressionStatement	r = 0	3845:2:85195:85200	3501935	6	True				
ANR	3502016	AssignmentExpression	r = 0		3501935	0		=			
ANR	3502017	Identifier	r		3501935	0					
ANR	3502018	PrimaryExpression	0		3501935	1					
ANR	3502019	SwitchStatement	switch ( ctype )		3501935	7					
ANR	3502020	Condition	ctype	3846:10:85212:85216	3501935	0	True				
ANR	3502021	Identifier	ctype		3501935	0					
ANR	3502022	CompoundStatement		16:17:352:352	3501935	1					
ANR	3502023	Label	case ONIGENC_CTYPE_ALPHA :	3847:2:85223:85247	3501935	0	True				
ANR	3502024	Identifier	ONIGENC_CTYPE_ALPHA		3501935	0					
ANR	3502025	Label	case ONIGENC_CTYPE_BLANK :	3848:2:85251:85275	3501935	1	True				
ANR	3502026	Identifier	ONIGENC_CTYPE_BLANK		3501935	0					
ANR	3502027	Label	case ONIGENC_CTYPE_CNTRL :	3849:2:85279:85303	3501935	2	True				
ANR	3502028	Identifier	ONIGENC_CTYPE_CNTRL		3501935	0					
ANR	3502029	Label	case ONIGENC_CTYPE_DIGIT :	3850:2:85307:85331	3501935	3	True				
ANR	3502030	Identifier	ONIGENC_CTYPE_DIGIT		3501935	0					
ANR	3502031	Label	case ONIGENC_CTYPE_LOWER :	3851:2:85335:85359	3501935	4	True				
ANR	3502032	Identifier	ONIGENC_CTYPE_LOWER		3501935	0					
ANR	3502033	Label	case ONIGENC_CTYPE_PUNCT :	3852:2:85363:85387	3501935	5	True				
ANR	3502034	Identifier	ONIGENC_CTYPE_PUNCT		3501935	0					
ANR	3502035	Label	case ONIGENC_CTYPE_SPACE :	3853:2:85391:85415	3501935	6	True				
ANR	3502036	Identifier	ONIGENC_CTYPE_SPACE		3501935	0					
ANR	3502037	Label	case ONIGENC_CTYPE_UPPER :	3854:2:85419:85443	3501935	7	True				
ANR	3502038	Identifier	ONIGENC_CTYPE_UPPER		3501935	0					
ANR	3502039	Label	case ONIGENC_CTYPE_XDIGIT :	3855:2:85447:85472	3501935	8	True				
ANR	3502040	Identifier	ONIGENC_CTYPE_XDIGIT		3501935	0					
ANR	3502041	Label	case ONIGENC_CTYPE_ASCII :	3856:2:85476:85500	3501935	9	True				
ANR	3502042	Identifier	ONIGENC_CTYPE_ASCII		3501935	0					
ANR	3502043	Label	case ONIGENC_CTYPE_ALNUM :	3857:2:85504:85528	3501935	10	True				
ANR	3502044	Identifier	ONIGENC_CTYPE_ALNUM		3501935	0					
ANR	3502045	IfStatement	if ( not != 0 )		3501935	11					
ANR	3502046	Condition	not != 0	3858:8:85538:85545	3501935	0	True				
ANR	3502047	EqualityExpression	not != 0		3501935	0		!=			
ANR	3502048	Identifier	not		3501935	0					
ANR	3502049	PrimaryExpression	0		3501935	1					
ANR	3502050	CompoundStatement		28:18:681:681	3501935	1					
ANR	3502051	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		3501935	0					
ANR	3502052	ForInit	c = 0 ;	3859:11:85561:85566	3501935	0	True				
ANR	3502053	AssignmentExpression	c = 0		3501935	0		=			
ANR	3502054	Identifier	c		3501935	0					
ANR	3502055	PrimaryExpression	0		3501935	1					
ANR	3502056	Condition	c < SINGLE_BYTE_SIZE	3859:18:85568:85587	3501935	1	True				
ANR	3502057	RelationalExpression	c < SINGLE_BYTE_SIZE		3501935	0		<			
ANR	3502058	Identifier	c		3501935	0					
ANR	3502059	Identifier	SINGLE_BYTE_SIZE		3501935	1					
ANR	3502060	PostIncDecOperationExpression	c ++	3859:40:85590:85592	3501935	2	True				
ANR	3502061	Identifier	c		3501935	0					
ANR	3502062	IncDec	++		3501935	1					
ANR	3502063	CompoundStatement		29:45:728:728	3501935	3					
ANR	3502064	IfStatement	"if ( ! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype ) )"		3501935	0					
ANR	3502065	Condition	"! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"	3860:5:85602:85655	3501935	0	True				
ANR	3502066	UnaryOperationExpression	"! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		3501935	0					
ANR	3502067	UnaryOperator	!		3501935	0					
ANR	3502068	CallExpression	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		3501935	1					
ANR	3502069	Callee	ONIGENC_IS_CODE_CTYPE		3501935	0					
ANR	3502070	Identifier	ONIGENC_IS_CODE_CTYPE		3501935	0					
ANR	3502071	ArgumentList	enc		3501935	1					
ANR	3502072	Argument	enc		3501935	0					
ANR	3502073	Identifier	enc		3501935	0					
ANR	3502074	Argument	( OnigCodePoint ) c		3501935	1					
ANR	3502075	CastExpression	( OnigCodePoint ) c		3501935	0					
ANR	3502076	CastTarget	OnigCodePoint		3501935	0					
ANR	3502077	Identifier	c		3501935	1					
ANR	3502078	Argument	ctype		3501935	2					
ANR	3502079	Identifier	ctype		3501935	0					
ANR	3502080	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3861:3:85661:85686	3501935	1	True				
ANR	3502081	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		3501935	0					
ANR	3502082	Callee	BITSET_SET_BIT		3501935	0					
ANR	3502083	Identifier	BITSET_SET_BIT		3501935	0					
ANR	3502084	ArgumentList	cc -> bs		3501935	1					
ANR	3502085	Argument	cc -> bs		3501935	0					
ANR	3502086	PtrMemberAccess	cc -> bs		3501935	0					
ANR	3502087	Identifier	cc		3501935	0					
ANR	3502088	Identifier	bs		3501935	1					
ANR	3502089	Argument	c		3501935	1					
ANR	3502090	Identifier	c		3501935	0					
ANR	3502091	ExpressionStatement	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"	3863:6:85702:85741	3501935	1	True				
ANR	3502092	CallExpression	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"		3501935	0					
ANR	3502093	Callee	ADD_ALL_MULTI_BYTE_RANGE		3501935	0					
ANR	3502094	Identifier	ADD_ALL_MULTI_BYTE_RANGE		3501935	0					
ANR	3502095	ArgumentList	enc		3501935	1					
ANR	3502096	Argument	enc		3501935	0					
ANR	3502097	Identifier	enc		3501935	0					
ANR	3502098	Argument	cc -> mbuf		3501935	1					
ANR	3502099	PtrMemberAccess	cc -> mbuf		3501935	0					
ANR	3502100	Identifier	cc		3501935	0					
ANR	3502101	Identifier	mbuf		3501935	1					
ANR	3502102	ElseStatement	else		3501935	0					
ANR	3502103	CompoundStatement		35:9:891:891	3501935	0					
ANR	3502104	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		3501935	0					
ANR	3502105	ForInit	c = 0 ;	3866:11:85771:85776	3501935	0	True				
ANR	3502106	AssignmentExpression	c = 0		3501935	0		=			
ANR	3502107	Identifier	c		3501935	0					
ANR	3502108	PrimaryExpression	0		3501935	1					
ANR	3502109	Condition	c < SINGLE_BYTE_SIZE	3866:18:85778:85797	3501935	1	True				
ANR	3502110	RelationalExpression	c < SINGLE_BYTE_SIZE		3501935	0		<			
ANR	3502111	Identifier	c		3501935	0					
ANR	3502112	Identifier	SINGLE_BYTE_SIZE		3501935	1					
ANR	3502113	PostIncDecOperationExpression	c ++	3866:40:85800:85802	3501935	2	True				
ANR	3502114	Identifier	c		3501935	0					
ANR	3502115	IncDec	++		3501935	1					
ANR	3502116	CompoundStatement		36:45:938:938	3501935	3					
ANR	3502117	IfStatement	"if ( ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype ) )"		3501935	0					
ANR	3502118	Condition	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"	3867:5:85812:85863	3501935	0	True				
ANR	3502119	CallExpression	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		3501935	0					
ANR	3502120	Callee	ONIGENC_IS_CODE_CTYPE		3501935	0					
ANR	3502121	Identifier	ONIGENC_IS_CODE_CTYPE		3501935	0					
ANR	3502122	ArgumentList	enc		3501935	1					
ANR	3502123	Argument	enc		3501935	0					
ANR	3502124	Identifier	enc		3501935	0					
ANR	3502125	Argument	( OnigCodePoint ) c		3501935	1					
ANR	3502126	CastExpression	( OnigCodePoint ) c		3501935	0					
ANR	3502127	CastTarget	OnigCodePoint		3501935	0					
ANR	3502128	Identifier	c		3501935	1					
ANR	3502129	Argument	ctype		3501935	2					
ANR	3502130	Identifier	ctype		3501935	0					
ANR	3502131	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3868:3:85869:85894	3501935	1	True				
ANR	3502132	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		3501935	0					
ANR	3502133	Callee	BITSET_SET_BIT		3501935	0					
ANR	3502134	Identifier	BITSET_SET_BIT		3501935	0					
ANR	3502135	ArgumentList	cc -> bs		3501935	1					
ANR	3502136	Argument	cc -> bs		3501935	0					
ANR	3502137	PtrMemberAccess	cc -> bs		3501935	0					
ANR	3502138	Identifier	cc		3501935	0					
ANR	3502139	Identifier	bs		3501935	1					
ANR	3502140	Argument	c		3501935	1					
ANR	3502141	Identifier	c		3501935	0					
ANR	3502142	BreakStatement	break ;	3871:4:85914:85919	3501935	12	True				
ANR	3502143	Label	case ONIGENC_CTYPE_GRAPH :	3873:2:85924:85948	3501935	13	True				
ANR	3502144	Identifier	ONIGENC_CTYPE_GRAPH		3501935	0					
ANR	3502145	Label	case ONIGENC_CTYPE_PRINT :	3874:2:85952:85976	3501935	14	True				
ANR	3502146	Identifier	ONIGENC_CTYPE_PRINT		3501935	0					
ANR	3502147	IfStatement	if ( not != 0 )		3501935	15					
ANR	3502148	Condition	not != 0	3875:8:85986:85993	3501935	0	True				
ANR	3502149	EqualityExpression	not != 0		3501935	0		!=			
ANR	3502150	Identifier	not		3501935	0					
ANR	3502151	PrimaryExpression	0		3501935	1					
ANR	3502152	CompoundStatement		45:18:1129:1129	3501935	1					
ANR	3502153	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		3501935	0					
ANR	3502154	ForInit	c = 0 ;	3876:11:86009:86014	3501935	0	True				
ANR	3502155	AssignmentExpression	c = 0		3501935	0		=			
ANR	3502156	Identifier	c		3501935	0					
ANR	3502157	PrimaryExpression	0		3501935	1					
ANR	3502158	Condition	c < SINGLE_BYTE_SIZE	3876:18:86016:86035	3501935	1	True				
ANR	3502159	RelationalExpression	c < SINGLE_BYTE_SIZE		3501935	0		<			
ANR	3502160	Identifier	c		3501935	0					
ANR	3502161	Identifier	SINGLE_BYTE_SIZE		3501935	1					
ANR	3502162	PostIncDecOperationExpression	c ++	3876:40:86038:86040	3501935	2	True				
ANR	3502163	Identifier	c		3501935	0					
ANR	3502164	IncDec	++		3501935	1					
ANR	3502165	CompoundStatement		46:45:1176:1176	3501935	3					
ANR	3502166	IfStatement	"if ( ! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype ) )"		3501935	0					
ANR	3502167	Condition	"! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"	3877:5:86050:86103	3501935	0	True				
ANR	3502168	UnaryOperationExpression	"! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		3501935	0					
ANR	3502169	UnaryOperator	!		3501935	0					
ANR	3502170	CallExpression	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		3501935	1					
ANR	3502171	Callee	ONIGENC_IS_CODE_CTYPE		3501935	0					
ANR	3502172	Identifier	ONIGENC_IS_CODE_CTYPE		3501935	0					
ANR	3502173	ArgumentList	enc		3501935	1					
ANR	3502174	Argument	enc		3501935	0					
ANR	3502175	Identifier	enc		3501935	0					
ANR	3502176	Argument	( OnigCodePoint ) c		3501935	1					
ANR	3502177	CastExpression	( OnigCodePoint ) c		3501935	0					
ANR	3502178	CastTarget	OnigCodePoint		3501935	0					
ANR	3502179	Identifier	c		3501935	1					
ANR	3502180	Argument	ctype		3501935	2					
ANR	3502181	Identifier	ctype		3501935	0					
ANR	3502182	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3878:3:86109:86134	3501935	1	True				
ANR	3502183	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		3501935	0					
ANR	3502184	Callee	BITSET_SET_BIT		3501935	0					
ANR	3502185	Identifier	BITSET_SET_BIT		3501935	0					
ANR	3502186	ArgumentList	cc -> bs		3501935	1					
ANR	3502187	Argument	cc -> bs		3501935	0					
ANR	3502188	PtrMemberAccess	cc -> bs		3501935	0					
ANR	3502189	Identifier	cc		3501935	0					
ANR	3502190	Identifier	bs		3501935	1					
ANR	3502191	Argument	c		3501935	1					
ANR	3502192	Identifier	c		3501935	0					
ANR	3502193	ElseStatement	else		3501935	0					
ANR	3502194	CompoundStatement		51:9:1292:1292	3501935	0					
ANR	3502195	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		3501935	0					
ANR	3502196	ForInit	c = 0 ;	3882:11:86172:86177	3501935	0	True				
ANR	3502197	AssignmentExpression	c = 0		3501935	0		=			
ANR	3502198	Identifier	c		3501935	0					
ANR	3502199	PrimaryExpression	0		3501935	1					
ANR	3502200	Condition	c < SINGLE_BYTE_SIZE	3882:18:86179:86198	3501935	1	True				
ANR	3502201	RelationalExpression	c < SINGLE_BYTE_SIZE		3501935	0		<			
ANR	3502202	Identifier	c		3501935	0					
ANR	3502203	Identifier	SINGLE_BYTE_SIZE		3501935	1					
ANR	3502204	PostIncDecOperationExpression	c ++	3882:40:86201:86203	3501935	2	True				
ANR	3502205	Identifier	c		3501935	0					
ANR	3502206	IncDec	++		3501935	1					
ANR	3502207	CompoundStatement		52:45:1339:1339	3501935	3					
ANR	3502208	IfStatement	"if ( ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype ) )"		3501935	0					
ANR	3502209	Condition	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"	3883:5:86213:86264	3501935	0	True				
ANR	3502210	CallExpression	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		3501935	0					
ANR	3502211	Callee	ONIGENC_IS_CODE_CTYPE		3501935	0					
ANR	3502212	Identifier	ONIGENC_IS_CODE_CTYPE		3501935	0					
ANR	3502213	ArgumentList	enc		3501935	1					
ANR	3502214	Argument	enc		3501935	0					
ANR	3502215	Identifier	enc		3501935	0					
ANR	3502216	Argument	( OnigCodePoint ) c		3501935	1					
ANR	3502217	CastExpression	( OnigCodePoint ) c		3501935	0					
ANR	3502218	CastTarget	OnigCodePoint		3501935	0					
ANR	3502219	Identifier	c		3501935	1					
ANR	3502220	Argument	ctype		3501935	2					
ANR	3502221	Identifier	ctype		3501935	0					
ANR	3502222	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3884:3:86270:86295	3501935	1	True				
ANR	3502223	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		3501935	0					
ANR	3502224	Callee	BITSET_SET_BIT		3501935	0					
ANR	3502225	Identifier	BITSET_SET_BIT		3501935	0					
ANR	3502226	ArgumentList	cc -> bs		3501935	1					
ANR	3502227	Argument	cc -> bs		3501935	0					
ANR	3502228	PtrMemberAccess	cc -> bs		3501935	0					
ANR	3502229	Identifier	cc		3501935	0					
ANR	3502230	Identifier	bs		3501935	1					
ANR	3502231	Argument	c		3501935	1					
ANR	3502232	Identifier	c		3501935	0					
ANR	3502233	ExpressionStatement	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"	3886:6:86311:86350	3501935	1	True				
ANR	3502234	CallExpression	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"		3501935	0					
ANR	3502235	Callee	ADD_ALL_MULTI_BYTE_RANGE		3501935	0					
ANR	3502236	Identifier	ADD_ALL_MULTI_BYTE_RANGE		3501935	0					
ANR	3502237	ArgumentList	enc		3501935	1					
ANR	3502238	Argument	enc		3501935	0					
ANR	3502239	Identifier	enc		3501935	0					
ANR	3502240	Argument	cc -> mbuf		3501935	1					
ANR	3502241	PtrMemberAccess	cc -> mbuf		3501935	0					
ANR	3502242	Identifier	cc		3501935	0					
ANR	3502243	Identifier	mbuf		3501935	1					
ANR	3502244	BreakStatement	break ;	3888:4:86362:86367	3501935	16	True				
ANR	3502245	Label	case ONIGENC_CTYPE_WORD :	3890:2:86372:86395	3501935	17	True				
ANR	3502246	Identifier	ONIGENC_CTYPE_WORD		3501935	0					
ANR	3502247	IfStatement	if ( not == 0 )		3501935	18					
ANR	3502248	Condition	not == 0	3891:8:86405:86412	3501935	0	True				
ANR	3502249	EqualityExpression	not == 0		3501935	0		==			
ANR	3502250	Identifier	not		3501935	0					
ANR	3502251	PrimaryExpression	0		3501935	1					
ANR	3502252	CompoundStatement		61:18:1548:1548	3501935	1					
ANR	3502253	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		3501935	0					
ANR	3502254	ForInit	c = 0 ;	3892:11:86428:86433	3501935	0	True				
ANR	3502255	AssignmentExpression	c = 0		3501935	0		=			
ANR	3502256	Identifier	c		3501935	0					
ANR	3502257	PrimaryExpression	0		3501935	1					
ANR	3502258	Condition	c < SINGLE_BYTE_SIZE	3892:18:86435:86454	3501935	1	True				
ANR	3502259	RelationalExpression	c < SINGLE_BYTE_SIZE		3501935	0		<			
ANR	3502260	Identifier	c		3501935	0					
ANR	3502261	Identifier	SINGLE_BYTE_SIZE		3501935	1					
ANR	3502262	PostIncDecOperationExpression	c ++	3892:40:86457:86459	3501935	2	True				
ANR	3502263	Identifier	c		3501935	0					
ANR	3502264	IncDec	++		3501935	1					
ANR	3502265	CompoundStatement		62:45:1595:1595	3501935	3					
ANR	3502266	IfStatement	"if ( IS_CODE_SB_WORD ( enc , c ) )"		3501935	0					
ANR	3502267	Condition	"IS_CODE_SB_WORD ( enc , c )"	3893:5:86469:86491	3501935	0	True				
ANR	3502268	CallExpression	"IS_CODE_SB_WORD ( enc , c )"		3501935	0					
ANR	3502269	Callee	IS_CODE_SB_WORD		3501935	0					
ANR	3502270	Identifier	IS_CODE_SB_WORD		3501935	0					
ANR	3502271	ArgumentList	enc		3501935	1					
ANR	3502272	Argument	enc		3501935	0					
ANR	3502273	Identifier	enc		3501935	0					
ANR	3502274	Argument	c		3501935	1					
ANR	3502275	Identifier	c		3501935	0					
ANR	3502276	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3893:30:86494:86519	3501935	1	True				
ANR	3502277	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		3501935	0					
ANR	3502278	Callee	BITSET_SET_BIT		3501935	0					
ANR	3502279	Identifier	BITSET_SET_BIT		3501935	0					
ANR	3502280	ArgumentList	cc -> bs		3501935	1					
ANR	3502281	Argument	cc -> bs		3501935	0					
ANR	3502282	PtrMemberAccess	cc -> bs		3501935	0					
ANR	3502283	Identifier	cc		3501935	0					
ANR	3502284	Identifier	bs		3501935	1					
ANR	3502285	Argument	c		3501935	1					
ANR	3502286	Identifier	c		3501935	0					
ANR	3502287	ExpressionStatement	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"	3895:6:86535:86574	3501935	1	True				
ANR	3502288	CallExpression	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"		3501935	0					
ANR	3502289	Callee	ADD_ALL_MULTI_BYTE_RANGE		3501935	0					
ANR	3502290	Identifier	ADD_ALL_MULTI_BYTE_RANGE		3501935	0					
ANR	3502291	ArgumentList	enc		3501935	1					
ANR	3502292	Argument	enc		3501935	0					
ANR	3502293	Identifier	enc		3501935	0					
ANR	3502294	Argument	cc -> mbuf		3501935	1					
ANR	3502295	PtrMemberAccess	cc -> mbuf		3501935	0					
ANR	3502296	Identifier	cc		3501935	0					
ANR	3502297	Identifier	mbuf		3501935	1					
ANR	3502298	ElseStatement	else		3501935	0					
ANR	3502299	CompoundStatement		67:9:1724:1724	3501935	0					
ANR	3502300	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		3501935	0					
ANR	3502301	ForInit	c = 0 ;	3898:11:86604:86609	3501935	0	True				
ANR	3502302	AssignmentExpression	c = 0		3501935	0		=			
ANR	3502303	Identifier	c		3501935	0					
ANR	3502304	PrimaryExpression	0		3501935	1					
ANR	3502305	Condition	c < SINGLE_BYTE_SIZE	3898:18:86611:86630	3501935	1	True				
ANR	3502306	RelationalExpression	c < SINGLE_BYTE_SIZE		3501935	0		<			
ANR	3502307	Identifier	c		3501935	0					
ANR	3502308	Identifier	SINGLE_BYTE_SIZE		3501935	1					
ANR	3502309	PostIncDecOperationExpression	c ++	3898:40:86633:86635	3501935	2	True				
ANR	3502310	Identifier	c		3501935	0					
ANR	3502311	IncDec	++		3501935	1					
ANR	3502312	CompoundStatement		68:45:1771:1771	3501935	3					
ANR	3502313	IfStatement	"if ( ( ONIGENC_CODE_TO_MBCLEN ( enc , c ) > 0 ) && ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		3501935	0					
ANR	3502314	Condition	"( ONIGENC_CODE_TO_MBCLEN ( enc , c ) > 0 ) && ! ONIGENC_IS_CODE_WORD ( enc , c )"	3899:12:86652:86757	3501935	0	True				
ANR	3502315	AndExpression	"( ONIGENC_CODE_TO_MBCLEN ( enc , c ) > 0 ) && ! ONIGENC_IS_CODE_WORD ( enc , c )"		3501935	0		&&			
ANR	3502316	RelationalExpression	"ONIGENC_CODE_TO_MBCLEN ( enc , c ) > 0"		3501935	0		>			
ANR	3502317	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( enc , c )"		3501935	0					
ANR	3502318	Callee	ONIGENC_CODE_TO_MBCLEN		3501935	0					
ANR	3502319	Identifier	ONIGENC_CODE_TO_MBCLEN		3501935	0					
ANR	3502320	ArgumentList	enc		3501935	1					
ANR	3502321	Argument	enc		3501935	0					
ANR	3502322	Identifier	enc		3501935	0					
ANR	3502323	Argument	c		3501935	1					
ANR	3502324	Identifier	c		3501935	0					
ANR	3502325	PrimaryExpression	0		3501935	1					
ANR	3502326	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		3501935	1					
ANR	3502327	UnaryOperator	!		3501935	0					
ANR	3502328	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		3501935	1					
ANR	3502329	Callee	ONIGENC_IS_CODE_WORD		3501935	0					
ANR	3502330	Identifier	ONIGENC_IS_CODE_WORD		3501935	0					
ANR	3502331	ArgumentList	enc		3501935	1					
ANR	3502332	Argument	enc		3501935	0					
ANR	3502333	Identifier	enc		3501935	0					
ANR	3502334	Argument	c		3501935	1					
ANR	3502335	Identifier	c		3501935	0					
ANR	3502336	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3901:3:86763:86788	3501935	1	True				
ANR	3502337	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		3501935	0					
ANR	3502338	Callee	BITSET_SET_BIT		3501935	0					
ANR	3502339	Identifier	BITSET_SET_BIT		3501935	0					
ANR	3502340	ArgumentList	cc -> bs		3501935	1					
ANR	3502341	Argument	cc -> bs		3501935	0					
ANR	3502342	PtrMemberAccess	cc -> bs		3501935	0					
ANR	3502343	Identifier	cc		3501935	0					
ANR	3502344	Identifier	bs		3501935	1					
ANR	3502345	Argument	c		3501935	1					
ANR	3502346	Identifier	c		3501935	0					
ANR	3502347	BreakStatement	break ;	3904:4:86808:86813	3501935	19	True				
ANR	3502348	Label	default :	3906:2:86818:86825	3501935	20	True				
ANR	3502349	Identifier	default		3501935	0					
ANR	3502350	ReturnStatement	return ONIGERR_PARSER_BUG ;	3907:4:86831:86856	3501935	21	True				
ANR	3502351	Identifier	ONIGERR_PARSER_BUG		3501935	0					
ANR	3502352	BreakStatement	break ;	3908:4:86862:86867	3501935	22	True				
ANR	3502353	ReturnStatement	return r ;	3911:2:86876:86884	3501935	8	True				
ANR	3502354	Identifier	r		3501935	0					
ANR	3502355	ReturnType	static int		3501935	1					
ANR	3502356	Identifier	add_ctype_to_cc		3501935	2					
ANR	3502357	ParameterList	"CClassNode * cc , int ctype , int not , ScanEnv * env"		3501935	3					
ANR	3502358	Parameter	CClassNode * cc	3830:16:84816:84829	3501935	0	True				
ANR	3502359	ParameterType	CClassNode *		3501935	0					
ANR	3502360	Identifier	cc		3501935	1					
ANR	3502361	Parameter	int ctype	3830:32:84832:84840	3501935	1	True				
ANR	3502362	ParameterType	int		3501935	0					
ANR	3502363	Identifier	ctype		3501935	1					
ANR	3502364	Parameter	int not	3830:43:84843:84849	3501935	2	True				
ANR	3502365	ParameterType	int		3501935	0					
ANR	3502366	Identifier	not		3501935	1					
ANR	3502367	Parameter	ScanEnv * env	3830:52:84852:84863	3501935	3	True				
ANR	3502368	ParameterType	ScanEnv *		3501935	0					
ANR	3502369	Identifier	env		3501935	1					
ANR	3502370	CFGEntryNode	ENTRY		3501935		True				
ANR	3502371	CFGExitNode	EXIT		3501935		True				
ANR	3502372	Symbol	ranges		3501935						
ANR	3502373	Symbol	* cc		3501935						
ANR	3502374	Symbol	env -> enc		3501935						
ANR	3502375	Symbol	cc -> mbuf		3501935						
ANR	3502376	Symbol	IS_CODE_SB_WORD		3501935						
ANR	3502377	Symbol	ONIGENC_IS_CODE_WORD		3501935						
ANR	3502378	Symbol	sb_out		3501935						
ANR	3502379	Symbol	not		3501935						
ANR	3502380	Symbol	& ranges		3501935						
ANR	3502381	Symbol	ONIGENC_GET_CTYPE_CODE_RANGE		3501935						
ANR	3502382	Symbol	enc		3501935						
ANR	3502383	Symbol	& sb_out		3501935						
ANR	3502384	Symbol	add_ctype_to_cc_by_range		3501935						
ANR	3502385	Symbol	cc		3501935						
ANR	3502386	Symbol	SINGLE_BYTE_SIZE		3501935						
ANR	3502387	Symbol	c		3501935						
ANR	3502388	Symbol	* env		3501935						
ANR	3502389	Symbol	env		3501935						
ANR	3502390	Symbol	ONIGERR_PARSER_BUG		3501935						
ANR	3502391	Symbol	cc -> bs		3501935						
ANR	3502392	Symbol	ONIGENC_CODE_TO_MBCLEN		3501935						
ANR	3502393	Symbol	r		3501935						
ANR	3502394	Symbol	ctype		3501935						
ANR	3502395	Symbol	ONIG_NO_SUPPORT_CONFIG		3501935						
ANR	3502396	Symbol	ONIGENC_IS_CODE_CTYPE		3501935						
ANR	3502397	Function	parse_posix_bracket	3914:0:86889:88992							
ANR	3502398	FunctionDef	"parse_posix_bracket (CClassNode * cc , UChar * * src , UChar * end , ScanEnv * env)"		3502397	0					
ANR	3502399	CompoundStatement		3916:0:86975:88992	3502397	0					
ANR	3502400	Statement	define	3917:1:86978:86983	3502397	0	True				
ANR	3502401	Statement	POSIX_BRACKET_CHECK_LIMIT_LENGTH	3917:8:86985:87016	3502397	1	True				
ANR	3502402	Statement	20	3917:42:87019:87020	3502397	2	True				
ANR	3502403	Statement	define	3918:1:87023:87028	3502397	3	True				
ANR	3502404	Statement	POSIX_BRACKET_NAME_MIN_LEN	3918:8:87030:87055	3502397	4	True				
ANR	3502405	Statement	4	3918:43:87065:87065	3502397	5	True				
ANR	3502406	Statement	static	3920:2:87070:87075	3502397	6	True				
ANR	3502407	IdentifierDeclStatement	"PosixBracketEntryType PBS [ ] = { { ( UChar * ) ""alnum"" , ONIGENC_CTYPE_ALNUM , 5 } , { ( UChar * ) ""alpha"" , ONIGENC_CTYPE_ALPHA , 5 } , { ( UChar * ) ""blank"" , ONIGENC_CTYPE_BLANK , 5 } , { ( UChar * ) ""cntrl"" , ONIGENC_CTYPE_CNTRL , 5 } , { ( UChar * ) ""digit"" , ONIGENC_CTYPE_DIGIT , 5 } , { ( UChar * ) ""graph"" , ONIGENC_CTYPE_GRAPH , 5 } , { ( UChar * ) ""lower"" , ONIGENC_CTYPE_LOWER , 5 } , { ( UChar * ) ""print"" , ONIGENC_CTYPE_PRINT , 5 } , { ( UChar * ) ""punct"" , ONIGENC_CTYPE_PUNCT , 5 } , { ( UChar * ) ""space"" , ONIGENC_CTYPE_SPACE , 5 } , { ( UChar * ) ""upper"" , ONIGENC_CTYPE_UPPER , 5 } , { ( UChar * ) ""xdigit"" , ONIGENC_CTYPE_XDIGIT , 6 } , { ( UChar * ) ""ascii"" , ONIGENC_CTYPE_ASCII , 5 } , { ( UChar * ) ""word"" , ONIGENC_CTYPE_WORD , 4 } , { ( UChar * ) NULL , - 1 , 0 } } ;"	3920:9:87077:87873	3502397	7	True				
ANR	3502408	IdentifierDecl	"PBS [ ] = { { ( UChar * ) ""alnum"" , ONIGENC_CTYPE_ALNUM , 5 } , { ( UChar * ) ""alpha"" , ONIGENC_CTYPE_ALPHA , 5 } , { ( UChar * ) ""blank"" , ONIGENC_CTYPE_BLANK , 5 } , { ( UChar * ) ""cntrl"" , ONIGENC_CTYPE_CNTRL , 5 } , { ( UChar * ) ""digit"" , ONIGENC_CTYPE_DIGIT , 5 } , { ( UChar * ) ""graph"" , ONIGENC_CTYPE_GRAPH , 5 } , { ( UChar * ) ""lower"" , ONIGENC_CTYPE_LOWER , 5 } , { ( UChar * ) ""print"" , ONIGENC_CTYPE_PRINT , 5 } , { ( UChar * ) ""punct"" , ONIGENC_CTYPE_PUNCT , 5 } , { ( UChar * ) ""space"" , ONIGENC_CTYPE_SPACE , 5 } , { ( UChar * ) ""upper"" , ONIGENC_CTYPE_UPPER , 5 } , { ( UChar * ) ""xdigit"" , ONIGENC_CTYPE_XDIGIT , 6 } , { ( UChar * ) ""ascii"" , ONIGENC_CTYPE_ASCII , 5 } , { ( UChar * ) ""word"" , ONIGENC_CTYPE_WORD , 4 } , { ( UChar * ) NULL , - 1 , 0 } }"		3502397	0					
ANR	3502409	IdentifierDeclType	PosixBracketEntryType [ ]		3502397	0					
ANR	3502410	Identifier	PBS		3502397	1					
ANR	3502411	AssignmentExpression	"PBS [ ] = { { ( UChar * ) ""alnum"" , ONIGENC_CTYPE_ALNUM , 5 } , { ( UChar * ) ""alpha"" , ONIGENC_CTYPE_ALPHA , 5 } , { ( UChar * ) ""blank"" , ONIGENC_CTYPE_BLANK , 5 } , { ( UChar * ) ""cntrl"" , ONIGENC_CTYPE_CNTRL , 5 } , { ( UChar * ) ""digit"" , ONIGENC_CTYPE_DIGIT , 5 } , { ( UChar * ) ""graph"" , ONIGENC_CTYPE_GRAPH , 5 } , { ( UChar * ) ""lower"" , ONIGENC_CTYPE_LOWER , 5 } , { ( UChar * ) ""print"" , ONIGENC_CTYPE_PRINT , 5 } , { ( UChar * ) ""punct"" , ONIGENC_CTYPE_PUNCT , 5 } , { ( UChar * ) ""space"" , ONIGENC_CTYPE_SPACE , 5 } , { ( UChar * ) ""upper"" , ONIGENC_CTYPE_UPPER , 5 } , { ( UChar * ) ""xdigit"" , ONIGENC_CTYPE_XDIGIT , 6 } , { ( UChar * ) ""ascii"" , ONIGENC_CTYPE_ASCII , 5 } , { ( UChar * ) ""word"" , ONIGENC_CTYPE_WORD , 4 } , { ( UChar * ) NULL , - 1 , 0 } }"		3502397	2		=			
ANR	3502412	Identifier	PBS		3502397	0					
ANR	3502413	InitializerList	"( UChar * ) ""alnum"""		3502397	1					
ANR	3502414	InitializerList	"( UChar * ) ""alnum"""		3502397	0					
ANR	3502415	CastExpression	"( UChar * ) ""alnum"""		3502397	0					
ANR	3502416	CastTarget	UChar *		3502397	0					
ANR	3502417	PrimaryExpression	"""alnum"""		3502397	1					
ANR	3502418	Identifier	ONIGENC_CTYPE_ALNUM		3502397	1					
ANR	3502419	PrimaryExpression	5		3502397	2					
ANR	3502420	InitializerList	"( UChar * ) ""alpha"""		3502397	1					
ANR	3502421	CastExpression	"( UChar * ) ""alpha"""		3502397	0					
ANR	3502422	CastTarget	UChar *		3502397	0					
ANR	3502423	PrimaryExpression	"""alpha"""		3502397	1					
ANR	3502424	Identifier	ONIGENC_CTYPE_ALPHA		3502397	1					
ANR	3502425	PrimaryExpression	5		3502397	2					
ANR	3502426	InitializerList	"( UChar * ) ""blank"""		3502397	2					
ANR	3502427	CastExpression	"( UChar * ) ""blank"""		3502397	0					
ANR	3502428	CastTarget	UChar *		3502397	0					
ANR	3502429	PrimaryExpression	"""blank"""		3502397	1					
ANR	3502430	Identifier	ONIGENC_CTYPE_BLANK		3502397	1					
ANR	3502431	PrimaryExpression	5		3502397	2					
ANR	3502432	InitializerList	"( UChar * ) ""cntrl"""		3502397	3					
ANR	3502433	CastExpression	"( UChar * ) ""cntrl"""		3502397	0					
ANR	3502434	CastTarget	UChar *		3502397	0					
ANR	3502435	PrimaryExpression	"""cntrl"""		3502397	1					
ANR	3502436	Identifier	ONIGENC_CTYPE_CNTRL		3502397	1					
ANR	3502437	PrimaryExpression	5		3502397	2					
ANR	3502438	InitializerList	"( UChar * ) ""digit"""		3502397	4					
ANR	3502439	CastExpression	"( UChar * ) ""digit"""		3502397	0					
ANR	3502440	CastTarget	UChar *		3502397	0					
ANR	3502441	PrimaryExpression	"""digit"""		3502397	1					
ANR	3502442	Identifier	ONIGENC_CTYPE_DIGIT		3502397	1					
ANR	3502443	PrimaryExpression	5		3502397	2					
ANR	3502444	InitializerList	"( UChar * ) ""graph"""		3502397	5					
ANR	3502445	CastExpression	"( UChar * ) ""graph"""		3502397	0					
ANR	3502446	CastTarget	UChar *		3502397	0					
ANR	3502447	PrimaryExpression	"""graph"""		3502397	1					
ANR	3502448	Identifier	ONIGENC_CTYPE_GRAPH		3502397	1					
ANR	3502449	PrimaryExpression	5		3502397	2					
ANR	3502450	InitializerList	"( UChar * ) ""lower"""		3502397	6					
ANR	3502451	CastExpression	"( UChar * ) ""lower"""		3502397	0					
ANR	3502452	CastTarget	UChar *		3502397	0					
ANR	3502453	PrimaryExpression	"""lower"""		3502397	1					
ANR	3502454	Identifier	ONIGENC_CTYPE_LOWER		3502397	1					
ANR	3502455	PrimaryExpression	5		3502397	2					
ANR	3502456	InitializerList	"( UChar * ) ""print"""		3502397	7					
ANR	3502457	CastExpression	"( UChar * ) ""print"""		3502397	0					
ANR	3502458	CastTarget	UChar *		3502397	0					
ANR	3502459	PrimaryExpression	"""print"""		3502397	1					
ANR	3502460	Identifier	ONIGENC_CTYPE_PRINT		3502397	1					
ANR	3502461	PrimaryExpression	5		3502397	2					
ANR	3502462	InitializerList	"( UChar * ) ""punct"""		3502397	8					
ANR	3502463	CastExpression	"( UChar * ) ""punct"""		3502397	0					
ANR	3502464	CastTarget	UChar *		3502397	0					
ANR	3502465	PrimaryExpression	"""punct"""		3502397	1					
ANR	3502466	Identifier	ONIGENC_CTYPE_PUNCT		3502397	1					
ANR	3502467	PrimaryExpression	5		3502397	2					
ANR	3502468	InitializerList	"( UChar * ) ""space"""		3502397	9					
ANR	3502469	CastExpression	"( UChar * ) ""space"""		3502397	0					
ANR	3502470	CastTarget	UChar *		3502397	0					
ANR	3502471	PrimaryExpression	"""space"""		3502397	1					
ANR	3502472	Identifier	ONIGENC_CTYPE_SPACE		3502397	1					
ANR	3502473	PrimaryExpression	5		3502397	2					
ANR	3502474	InitializerList	"( UChar * ) ""upper"""		3502397	10					
ANR	3502475	CastExpression	"( UChar * ) ""upper"""		3502397	0					
ANR	3502476	CastTarget	UChar *		3502397	0					
ANR	3502477	PrimaryExpression	"""upper"""		3502397	1					
ANR	3502478	Identifier	ONIGENC_CTYPE_UPPER		3502397	1					
ANR	3502479	PrimaryExpression	5		3502397	2					
ANR	3502480	InitializerList	"( UChar * ) ""xdigit"""		3502397	11					
ANR	3502481	CastExpression	"( UChar * ) ""xdigit"""		3502397	0					
ANR	3502482	CastTarget	UChar *		3502397	0					
ANR	3502483	PrimaryExpression	"""xdigit"""		3502397	1					
ANR	3502484	Identifier	ONIGENC_CTYPE_XDIGIT		3502397	1					
ANR	3502485	PrimaryExpression	6		3502397	2					
ANR	3502486	InitializerList	"( UChar * ) ""ascii"""		3502397	12					
ANR	3502487	CastExpression	"( UChar * ) ""ascii"""		3502397	0					
ANR	3502488	CastTarget	UChar *		3502397	0					
ANR	3502489	PrimaryExpression	"""ascii"""		3502397	1					
ANR	3502490	Identifier	ONIGENC_CTYPE_ASCII		3502397	1					
ANR	3502491	PrimaryExpression	5		3502397	2					
ANR	3502492	InitializerList	"( UChar * ) ""word"""		3502397	13					
ANR	3502493	CastExpression	"( UChar * ) ""word"""		3502397	0					
ANR	3502494	CastTarget	UChar *		3502397	0					
ANR	3502495	PrimaryExpression	"""word"""		3502397	1					
ANR	3502496	Identifier	ONIGENC_CTYPE_WORD		3502397	1					
ANR	3502497	PrimaryExpression	4		3502397	2					
ANR	3502498	InitializerList	( UChar * ) NULL		3502397	14					
ANR	3502499	CastExpression	( UChar * ) NULL		3502397	0					
ANR	3502500	CastTarget	UChar *		3502397	0					
ANR	3502501	Identifier	NULL		3502397	1					
ANR	3502502	UnaryOperationExpression	- 1		3502397	1					
ANR	3502503	UnaryOperator	-		3502397	0					
ANR	3502504	PrimaryExpression	1		3502397	1					
ANR	3502505	PrimaryExpression	0		3502397	2					
ANR	3502506	IdentifierDeclStatement	PosixBracketEntryType * pb ;	3938:2:87878:87903	3502397	8	True				
ANR	3502507	IdentifierDecl	* pb		3502397	0					
ANR	3502508	IdentifierDeclType	PosixBracketEntryType *		3502397	0					
ANR	3502509	Identifier	pb		3502397	1					
ANR	3502510	IdentifierDeclStatement	"int not , i , r ;"	3939:2:87907:87920	3502397	9	True				
ANR	3502511	IdentifierDecl	not		3502397	0					
ANR	3502512	IdentifierDeclType	int		3502397	0					
ANR	3502513	Identifier	not		3502397	1					
ANR	3502514	IdentifierDecl	i		3502397	1					
ANR	3502515	IdentifierDeclType	int		3502397	0					
ANR	3502516	Identifier	i		3502397	1					
ANR	3502517	IdentifierDecl	r		3502397	2					
ANR	3502518	IdentifierDeclType	int		3502397	0					
ANR	3502519	Identifier	r		3502397	1					
ANR	3502520	IdentifierDeclStatement	OnigCodePoint c ;	3940:2:87924:87939	3502397	10	True				
ANR	3502521	IdentifierDecl	c		3502397	0					
ANR	3502522	IdentifierDeclType	OnigCodePoint		3502397	0					
ANR	3502523	Identifier	c		3502397	1					
ANR	3502524	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	3941:2:87943:87970	3502397	11	True				
ANR	3502525	IdentifierDecl	enc = env -> enc		3502397	0					
ANR	3502526	IdentifierDeclType	OnigEncoding		3502397	0					
ANR	3502527	Identifier	enc		3502397	1					
ANR	3502528	AssignmentExpression	enc = env -> enc		3502397	2		=			
ANR	3502529	Identifier	enc		3502397	0					
ANR	3502530	PtrMemberAccess	env -> enc		3502397	1					
ANR	3502531	Identifier	env		3502397	0					
ANR	3502532	Identifier	enc		3502397	1					
ANR	3502533	IdentifierDeclStatement	UChar * p = * src ;	3942:2:87974:87989	3502397	12	True				
ANR	3502534	IdentifierDecl	* p = * src		3502397	0					
ANR	3502535	IdentifierDeclType	UChar *		3502397	0					
ANR	3502536	Identifier	p		3502397	1					
ANR	3502537	AssignmentExpression	* p = * src		3502397	2		=			
ANR	3502538	Identifier	p		3502397	0					
ANR	3502539	UnaryOperationExpression	* src		3502397	1					
ANR	3502540	UnaryOperator	*		3502397	0					
ANR	3502541	Identifier	src		3502397	1					
ANR	3502542	IfStatement	if ( PPEEK_IS ( '^' ) )		3502397	13					
ANR	3502543	Condition	PPEEK_IS ( '^' )	3944:6:87998:88010	3502397	0	True				
ANR	3502544	CallExpression	PPEEK_IS ( '^' )		3502397	0					
ANR	3502545	Callee	PPEEK_IS		3502397	0					
ANR	3502546	Identifier	PPEEK_IS		3502397	0					
ANR	3502547	ArgumentList	'^'		3502397	1					
ANR	3502548	Argument	'^'		3502397	0					
ANR	3502549	PrimaryExpression	'^'		3502397	0					
ANR	3502550	CompoundStatement		29:21:1037:1037	3502397	1					
ANR	3502551	ExpressionStatement	PINC_S	3945:4:88019:88025	3502397	0	True				
ANR	3502552	Identifier	PINC_S		3502397	0					
ANR	3502553	ExpressionStatement	not = 1	3946:4:88031:88038	3502397	1	True				
ANR	3502554	AssignmentExpression	not = 1		3502397	0		=			
ANR	3502555	Identifier	not		3502397	0					
ANR	3502556	PrimaryExpression	1		3502397	1					
ANR	3502557	ElseStatement	else		3502397	0					
ANR	3502558	ExpressionStatement	not = 0	3949:4:88055:88062	3502397	0	True				
ANR	3502559	AssignmentExpression	not = 0		3502397	0		=			
ANR	3502560	Identifier	not		3502397	0					
ANR	3502561	PrimaryExpression	0		3502397	1					
ANR	3502562	IfStatement	"if ( onigenc_strlen ( enc , p , end ) < POSIX_BRACKET_NAME_MIN_LEN + 3 )"		3502397	14					
ANR	3502563	Condition	"onigenc_strlen ( enc , p , end ) < POSIX_BRACKET_NAME_MIN_LEN + 3"	3951:6:88071:88130	3502397	0	True				
ANR	3502564	RelationalExpression	"onigenc_strlen ( enc , p , end ) < POSIX_BRACKET_NAME_MIN_LEN + 3"		3502397	0		<			
ANR	3502565	CallExpression	"onigenc_strlen ( enc , p , end )"		3502397	0					
ANR	3502566	Callee	onigenc_strlen		3502397	0					
ANR	3502567	Identifier	onigenc_strlen		3502397	0					
ANR	3502568	ArgumentList	enc		3502397	1					
ANR	3502569	Argument	enc		3502397	0					
ANR	3502570	Identifier	enc		3502397	0					
ANR	3502571	Argument	p		3502397	1					
ANR	3502572	Identifier	p		3502397	0					
ANR	3502573	Argument	end		3502397	2					
ANR	3502574	Identifier	end		3502397	0					
ANR	3502575	AdditiveExpression	POSIX_BRACKET_NAME_MIN_LEN + 3		3502397	1		+			
ANR	3502576	Identifier	POSIX_BRACKET_NAME_MIN_LEN		3502397	0					
ANR	3502577	PrimaryExpression	3		3502397	1					
ANR	3502578	GotoStatement	goto not_posix_bracket ;	3952:4:88137:88159	3502397	1	True				
ANR	3502579	Identifier	not_posix_bracket		3502397	0					
ANR	3502580	ForStatement	for ( pb = PBS ; IS_NOT_NULL ( pb -> name ) ; pb ++ )		3502397	15					
ANR	3502581	ForInit	pb = PBS ;	3954:7:88169:88177	3502397	0	True				
ANR	3502582	AssignmentExpression	pb = PBS		3502397	0		=			
ANR	3502583	Identifier	pb		3502397	0					
ANR	3502584	Identifier	PBS		3502397	1					
ANR	3502585	Condition	IS_NOT_NULL ( pb -> name )	3954:17:88179:88199	3502397	1	True				
ANR	3502586	CallExpression	IS_NOT_NULL ( pb -> name )		3502397	0					
ANR	3502587	Callee	IS_NOT_NULL		3502397	0					
ANR	3502588	Identifier	IS_NOT_NULL		3502397	0					
ANR	3502589	ArgumentList	pb -> name		3502397	1					
ANR	3502590	Argument	pb -> name		3502397	0					
ANR	3502591	PtrMemberAccess	pb -> name		3502397	0					
ANR	3502592	Identifier	pb		3502397	0					
ANR	3502593	Identifier	name		3502397	1					
ANR	3502594	PostIncDecOperationExpression	pb ++	3954:40:88202:88205	3502397	2	True				
ANR	3502595	Identifier	pb		3502397	0					
ANR	3502596	IncDec	++		3502397	1					
ANR	3502597	CompoundStatement		39:46:1232:1232	3502397	3					
ANR	3502598	IfStatement	"if ( onigenc_with_ascii_strncmp ( enc , p , end , pb -> name , pb -> len ) == 0 )"		3502397	0					
ANR	3502599	Condition	"onigenc_with_ascii_strncmp ( enc , p , end , pb -> name , pb -> len ) == 0"	3955:8:88218:88280	3502397	0	True				
ANR	3502600	EqualityExpression	"onigenc_with_ascii_strncmp ( enc , p , end , pb -> name , pb -> len ) == 0"		3502397	0		==			
ANR	3502601	CallExpression	"onigenc_with_ascii_strncmp ( enc , p , end , pb -> name , pb -> len )"		3502397	0					
ANR	3502602	Callee	onigenc_with_ascii_strncmp		3502397	0					
ANR	3502603	Identifier	onigenc_with_ascii_strncmp		3502397	0					
ANR	3502604	ArgumentList	enc		3502397	1					
ANR	3502605	Argument	enc		3502397	0					
ANR	3502606	Identifier	enc		3502397	0					
ANR	3502607	Argument	p		3502397	1					
ANR	3502608	Identifier	p		3502397	0					
ANR	3502609	Argument	end		3502397	2					
ANR	3502610	Identifier	end		3502397	0					
ANR	3502611	Argument	pb -> name		3502397	3					
ANR	3502612	PtrMemberAccess	pb -> name		3502397	0					
ANR	3502613	Identifier	pb		3502397	0					
ANR	3502614	Identifier	name		3502397	1					
ANR	3502615	Argument	pb -> len		3502397	4					
ANR	3502616	PtrMemberAccess	pb -> len		3502397	0					
ANR	3502617	Identifier	pb		3502397	0					
ANR	3502618	Identifier	len		3502397	1					
ANR	3502619	PrimaryExpression	0		3502397	1					
ANR	3502620	CompoundStatement		40:73:1307:1307	3502397	1					
ANR	3502621	ExpressionStatement	"p = ( UChar * ) onigenc_step ( enc , p , end , pb -> len )"	3956:6:88291:88338	3502397	0	True				
ANR	3502622	AssignmentExpression	"p = ( UChar * ) onigenc_step ( enc , p , end , pb -> len )"		3502397	0		=			
ANR	3502623	Identifier	p		3502397	0					
ANR	3502624	CastExpression	"( UChar * ) onigenc_step ( enc , p , end , pb -> len )"		3502397	1					
ANR	3502625	CastTarget	UChar *		3502397	0					
ANR	3502626	CallExpression	"onigenc_step ( enc , p , end , pb -> len )"		3502397	1					
ANR	3502627	Callee	onigenc_step		3502397	0					
ANR	3502628	Identifier	onigenc_step		3502397	0					
ANR	3502629	ArgumentList	enc		3502397	1					
ANR	3502630	Argument	enc		3502397	0					
ANR	3502631	Identifier	enc		3502397	0					
ANR	3502632	Argument	p		3502397	1					
ANR	3502633	Identifier	p		3502397	0					
ANR	3502634	Argument	end		3502397	2					
ANR	3502635	Identifier	end		3502397	0					
ANR	3502636	Argument	pb -> len		3502397	3					
ANR	3502637	PtrMemberAccess	pb -> len		3502397	0					
ANR	3502638	Identifier	pb		3502397	0					
ANR	3502639	Identifier	len		3502397	1					
ANR	3502640	IfStatement	"if ( onigenc_with_ascii_strncmp ( enc , p , end , ( UChar * ) "":]"" , 2 ) != 0 )"		3502397	1					
ANR	3502641	Condition	"onigenc_with_ascii_strncmp ( enc , p , end , ( UChar * ) "":]"" , 2 ) != 0"	3957:10:88350:88411	3502397	0	True				
ANR	3502642	EqualityExpression	"onigenc_with_ascii_strncmp ( enc , p , end , ( UChar * ) "":]"" , 2 ) != 0"		3502397	0		!=			
ANR	3502643	CallExpression	"onigenc_with_ascii_strncmp ( enc , p , end , ( UChar * ) "":]"" , 2 )"		3502397	0					
ANR	3502644	Callee	onigenc_with_ascii_strncmp		3502397	0					
ANR	3502645	Identifier	onigenc_with_ascii_strncmp		3502397	0					
ANR	3502646	ArgumentList	enc		3502397	1					
ANR	3502647	Argument	enc		3502397	0					
ANR	3502648	Identifier	enc		3502397	0					
ANR	3502649	Argument	p		3502397	1					
ANR	3502650	Identifier	p		3502397	0					
ANR	3502651	Argument	end		3502397	2					
ANR	3502652	Identifier	end		3502397	0					
ANR	3502653	Argument	"( UChar * ) "":]"""		3502397	3					
ANR	3502654	CastExpression	"( UChar * ) "":]"""		3502397	0					
ANR	3502655	CastTarget	UChar *		3502397	0					
ANR	3502656	PrimaryExpression	""":]"""		3502397	1					
ANR	3502657	Argument	2		3502397	4					
ANR	3502658	PrimaryExpression	2		3502397	0					
ANR	3502659	PrimaryExpression	0		3502397	1					
ANR	3502660	ReturnStatement	return ONIGERR_INVALID_POSIX_BRACKET_TYPE ;	3958:8:88422:88463	3502397	1	True				
ANR	3502661	Identifier	ONIGERR_INVALID_POSIX_BRACKET_TYPE		3502397	0					
ANR	3502662	ExpressionStatement	"r = add_ctype_to_cc ( cc , pb -> ctype , not , env )"	3960:6:88472:88516	3502397	2	True				
ANR	3502663	AssignmentExpression	"r = add_ctype_to_cc ( cc , pb -> ctype , not , env )"		3502397	0		=			
ANR	3502664	Identifier	r		3502397	0					
ANR	3502665	CallExpression	"add_ctype_to_cc ( cc , pb -> ctype , not , env )"		3502397	1					
ANR	3502666	Callee	add_ctype_to_cc		3502397	0					
ANR	3502667	Identifier	add_ctype_to_cc		3502397	0					
ANR	3502668	ArgumentList	cc		3502397	1					
ANR	3502669	Argument	cc		3502397	0					
ANR	3502670	Identifier	cc		3502397	0					
ANR	3502671	Argument	pb -> ctype		3502397	1					
ANR	3502672	PtrMemberAccess	pb -> ctype		3502397	0					
ANR	3502673	Identifier	pb		3502397	0					
ANR	3502674	Identifier	ctype		3502397	1					
ANR	3502675	Argument	not		3502397	2					
ANR	3502676	Identifier	not		3502397	0					
ANR	3502677	Argument	env		3502397	3					
ANR	3502678	Identifier	env		3502397	0					
ANR	3502679	IfStatement	if ( r != 0 )		3502397	3					
ANR	3502680	Condition	r != 0	3961:10:88528:88533	3502397	0	True				
ANR	3502681	EqualityExpression	r != 0		3502397	0		!=			
ANR	3502682	Identifier	r		3502397	0					
ANR	3502683	PrimaryExpression	0		3502397	1					
ANR	3502684	ReturnStatement	return r ;	3961:18:88536:88544	3502397	1	True				
ANR	3502685	Identifier	r		3502397	0					
ANR	3502686	ExpressionStatement	PINC_S	3963:6:88553:88559	3502397	4	True				
ANR	3502687	Identifier	PINC_S		3502397	0					
ANR	3502688	ExpressionStatement	PINC_S	3963:14:88561:88567	3502397	5	True				
ANR	3502689	Identifier	PINC_S		3502397	0					
ANR	3502690	ExpressionStatement	* src = p	3964:6:88575:88583	3502397	6	True				
ANR	3502691	AssignmentExpression	* src = p		3502397	0		=			
ANR	3502692	UnaryOperationExpression	* src		3502397	0					
ANR	3502693	UnaryOperator	*		3502397	0					
ANR	3502694	Identifier	src		3502397	1					
ANR	3502695	Identifier	p		3502397	1					
ANR	3502696	ReturnStatement	return 0 ;	3965:6:88591:88599	3502397	7	True				
ANR	3502697	PrimaryExpression	0		3502397	0					
ANR	3502698	Label	not_posix_bracket :	3969:1:88613:88630	3502397	16	True				
ANR	3502699	Identifier	not_posix_bracket		3502397	0					
ANR	3502700	ExpressionStatement	c = 0	3970:2:88634:88639	3502397	17	True				
ANR	3502701	AssignmentExpression	c = 0		3502397	0		=			
ANR	3502702	Identifier	c		3502397	0					
ANR	3502703	PrimaryExpression	0		3502397	1					
ANR	3502704	ExpressionStatement	i = 0	3971:2:88643:88648	3502397	18	True				
ANR	3502705	AssignmentExpression	i = 0		3502397	0		=			
ANR	3502706	Identifier	i		3502397	0					
ANR	3502707	PrimaryExpression	0		3502397	1					
ANR	3502708	WhileStatement	while ( ! PEND && ( ( c = PPEEK ) != ':' ) && c != ']' )		3502397	19					
ANR	3502709	Condition	! PEND && ( ( c = PPEEK ) != ':' ) && c != ']'	3972:9:88659:88699	3502397	0	True				
ANR	3502710	AndExpression	! PEND && ( ( c = PPEEK ) != ':' ) && c != ']'		3502397	0		&&			
ANR	3502711	UnaryOperationExpression	! PEND		3502397	0					
ANR	3502712	UnaryOperator	!		3502397	0					
ANR	3502713	Identifier	PEND		3502397	1					
ANR	3502714	AndExpression	( ( c = PPEEK ) != ':' ) && c != ']'		3502397	1		&&			
ANR	3502715	EqualityExpression	( c = PPEEK ) != ':'		3502397	0		!=			
ANR	3502716	AssignmentExpression	c = PPEEK		3502397	0		=			
ANR	3502717	Identifier	c		3502397	0					
ANR	3502718	Identifier	PPEEK		3502397	1					
ANR	3502719	PrimaryExpression	':'		3502397	1					
ANR	3502720	EqualityExpression	c != ']'		3502397	1		!=			
ANR	3502721	Identifier	c		3502397	0					
ANR	3502722	PrimaryExpression	']'		3502397	1					
ANR	3502723	CompoundStatement		57:52:1726:1726	3502397	1					
ANR	3502724	ExpressionStatement	PINC_S	3973:4:88708:88714	3502397	0	True				
ANR	3502725	Identifier	PINC_S		3502397	0					
ANR	3502726	IfStatement	if ( ++ i > POSIX_BRACKET_CHECK_LIMIT_LENGTH )		3502397	1					
ANR	3502727	Condition	++ i > POSIX_BRACKET_CHECK_LIMIT_LENGTH	3974:8:88724:88761	3502397	0	True				
ANR	3502728	RelationalExpression	++ i > POSIX_BRACKET_CHECK_LIMIT_LENGTH		3502397	0		>			
ANR	3502729	UnaryExpression	++ i		3502397	0					
ANR	3502730	IncDec	++		3502397	0					
ANR	3502731	Identifier	i		3502397	1					
ANR	3502732	Identifier	POSIX_BRACKET_CHECK_LIMIT_LENGTH		3502397	1					
ANR	3502733	BreakStatement	break ;	3974:48:88764:88769	3502397	1	True				
ANR	3502734	IfStatement	if ( c == ':' && ! PEND )		3502397	20					
ANR	3502735	Condition	c == ':' && ! PEND	3976:6:88781:88798	3502397	0	True				
ANR	3502736	AndExpression	c == ':' && ! PEND		3502397	0		&&			
ANR	3502737	EqualityExpression	c == ':'		3502397	0		==			
ANR	3502738	Identifier	c		3502397	0					
ANR	3502739	PrimaryExpression	':'		3502397	1					
ANR	3502740	UnaryOperationExpression	! PEND		3502397	1					
ANR	3502741	UnaryOperator	!		3502397	0					
ANR	3502742	Identifier	PEND		3502397	1					
ANR	3502743	CompoundStatement		61:26:1825:1825	3502397	1					
ANR	3502744	ExpressionStatement	PINC_S	3977:4:88807:88813	3502397	0	True				
ANR	3502745	Identifier	PINC_S		3502397	0					
ANR	3502746	IfStatement	if ( ! PEND )		3502397	1					
ANR	3502747	Condition	! PEND	3978:8:88823:88828	3502397	0	True				
ANR	3502748	UnaryOperationExpression	! PEND		3502397	0					
ANR	3502749	UnaryOperator	!		3502397	0					
ANR	3502750	Identifier	PEND		3502397	1					
ANR	3502751	CompoundStatement		63:16:1855:1855	3502397	1					
ANR	3502752	ExpressionStatement	PFETCH_S ( c )	3979:6:88839:88850	3502397	0	True				
ANR	3502753	CallExpression	PFETCH_S ( c )		3502397	0					
ANR	3502754	Callee	PFETCH_S		3502397	0					
ANR	3502755	Identifier	PFETCH_S		3502397	0					
ANR	3502756	ArgumentList	c		3502397	1					
ANR	3502757	Argument	c		3502397	0					
ANR	3502758	Identifier	c		3502397	0					
ANR	3502759	IfStatement	if ( c == ']' )		3502397	1					
ANR	3502760	Condition	c == ']'	3980:10:88862:88869	3502397	0	True				
ANR	3502761	EqualityExpression	c == ']'		3502397	0		==			
ANR	3502762	Identifier	c		3502397	0					
ANR	3502763	PrimaryExpression	']'		3502397	1					
ANR	3502764	ReturnStatement	return ONIGERR_INVALID_POSIX_BRACKET_TYPE ;	3981:8:88880:88921	3502397	1	True				
ANR	3502765	Identifier	ONIGERR_INVALID_POSIX_BRACKET_TYPE		3502397	0					
ANR	3502766	ReturnStatement	return 1 ;	3985:2:88936:88944	3502397	21	True				
ANR	3502767	PrimaryExpression	1		3502397	0					
ANR	3502768	ReturnType	static int		3502397	1					
ANR	3502769	Identifier	parse_posix_bracket		3502397	2					
ANR	3502770	ParameterList	"CClassNode * cc , UChar * * src , UChar * end , ScanEnv * env"		3502397	3					
ANR	3502771	Parameter	CClassNode * cc	3915:20:86920:86933	3502397	0	True				
ANR	3502772	ParameterType	CClassNode *		3502397	0					
ANR	3502773	Identifier	cc		3502397	1					
ANR	3502774	Parameter	UChar * * src	3915:36:86936:86946	3502397	1	True				
ANR	3502775	ParameterType	UChar * *		3502397	0					
ANR	3502776	Identifier	src		3502397	1					
ANR	3502777	Parameter	UChar * end	3915:49:86949:86958	3502397	2	True				
ANR	3502778	ParameterType	UChar *		3502397	0					
ANR	3502779	Identifier	end		3502397	1					
ANR	3502780	Parameter	ScanEnv * env	3915:61:86961:86972	3502397	3	True				
ANR	3502781	ParameterType	ScanEnv *		3502397	0					
ANR	3502782	Identifier	env		3502397	1					
ANR	3502783	CFGEntryNode	ENTRY		3502397		True				
ANR	3502784	CFGExitNode	EXIT		3502397		True				
ANR	3502785	Symbol	PPEEK_IS		3502397						
ANR	3502786	Symbol	ONIGENC_CTYPE_ALPHA		3502397						
ANR	3502787	Symbol	IS_NOT_NULL		3502397						
ANR	3502788	Symbol	ONIGENC_CTYPE_PUNCT		3502397						
ANR	3502789	Symbol	ONIGENC_CTYPE_PRINT		3502397						
ANR	3502790	Symbol	onigenc_with_ascii_strncmp		3502397						
ANR	3502791	Symbol	ONIGENC_CTYPE_LOWER		3502397						
ANR	3502792	Symbol	env -> enc		3502397						
ANR	3502793	Symbol	pb -> ctype		3502397						
ANR	3502794	Symbol	* src		3502397						
ANR	3502795	Symbol	PEND		3502397						
ANR	3502796	Symbol	not		3502397						
ANR	3502797	Symbol	ONIGENC_CTYPE_SPACE		3502397						
ANR	3502798	Symbol	onigenc_strlen		3502397						
ANR	3502799	Symbol	ONIGENC_CTYPE_ASCII		3502397						
ANR	3502800	Symbol	onigenc_step		3502397						
ANR	3502801	Symbol	pb -> name		3502397						
ANR	3502802	Symbol	add_ctype_to_cc		3502397						
ANR	3502803	Symbol	end		3502397						
ANR	3502804	Symbol	enc		3502397						
ANR	3502805	Symbol	ONIGENC_CTYPE_XDIGIT		3502397						
ANR	3502806	Symbol	cc		3502397						
ANR	3502807	Symbol	PBS		3502397						
ANR	3502808	Symbol	NULL		3502397						
ANR	3502809	Symbol	c		3502397						
ANR	3502810	Symbol	src		3502397						
ANR	3502811	Symbol	ONIGENC_CTYPE_GRAPH		3502397						
ANR	3502812	Symbol	PPEEK		3502397						
ANR	3502813	Symbol	ONIGENC_CTYPE_DIGIT		3502397						
ANR	3502814	Symbol	* env		3502397						
ANR	3502815	Symbol	i		3502397						
ANR	3502816	Symbol	ONIGENC_CTYPE_UPPER		3502397						
ANR	3502817	Symbol	ONIGENC_CTYPE_CNTRL		3502397						
ANR	3502818	Symbol	env		3502397						
ANR	3502819	Symbol	ONIGENC_CTYPE_ALNUM		3502397						
ANR	3502820	Symbol	p		3502397						
ANR	3502821	Symbol	POSIX_BRACKET_NAME_MIN_LEN		3502397						
ANR	3502822	Symbol	pb		3502397						
ANR	3502823	Symbol	r		3502397						
ANR	3502824	Symbol	ONIGENC_CTYPE_BLANK		3502397						
ANR	3502825	Symbol	* pb		3502397						
ANR	3502826	Symbol	pb -> len		3502397						
ANR	3502827	Symbol	POSIX_BRACKET_CHECK_LIMIT_LENGTH		3502397						
ANR	3502828	Symbol	ONIGENC_CTYPE_WORD		3502397						
ANR	3502829	Symbol	ONIGERR_INVALID_POSIX_BRACKET_TYPE		3502397						
ANR	3502830	Function	fetch_char_property_to_ctype	3988:0:88995:89589							
ANR	3502831	FunctionDef	"fetch_char_property_to_ctype (UChar * * src , UChar * end , ScanEnv * env)"		3502830	0					
ANR	3502832	CompoundStatement		3990:0:89074:89589	3502830	0					
ANR	3502833	IdentifierDeclStatement	int r ;	3991:2:89078:89083	3502830	0	True				
ANR	3502834	IdentifierDecl	r		3502830	0					
ANR	3502835	IdentifierDeclType	int		3502830	0					
ANR	3502836	Identifier	r		3502830	1					
ANR	3502837	IdentifierDeclStatement	OnigCodePoint c ;	3992:2:89087:89102	3502830	1	True				
ANR	3502838	IdentifierDecl	c		3502830	0					
ANR	3502839	IdentifierDeclType	OnigCodePoint		3502830	0					
ANR	3502840	Identifier	c		3502830	1					
ANR	3502841	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	3993:2:89106:89133	3502830	2	True				
ANR	3502842	IdentifierDecl	enc = env -> enc		3502830	0					
ANR	3502843	IdentifierDeclType	OnigEncoding		3502830	0					
ANR	3502844	Identifier	enc		3502830	1					
ANR	3502845	AssignmentExpression	enc = env -> enc		3502830	2		=			
ANR	3502846	Identifier	enc		3502830	0					
ANR	3502847	PtrMemberAccess	env -> enc		3502830	1					
ANR	3502848	Identifier	env		3502830	0					
ANR	3502849	Identifier	enc		3502830	1					
ANR	3502850	IdentifierDeclStatement	"UChar * prev , * start , * p = * src ;"	3994:2:89137:89167	3502830	3	True				
ANR	3502851	IdentifierDecl	* prev		3502830	0					
ANR	3502852	IdentifierDeclType	UChar *		3502830	0					
ANR	3502853	Identifier	prev		3502830	1					
ANR	3502854	IdentifierDecl	* start		3502830	1					
ANR	3502855	IdentifierDeclType	UChar *		3502830	0					
ANR	3502856	Identifier	start		3502830	1					
ANR	3502857	IdentifierDecl	* p = * src		3502830	2					
ANR	3502858	IdentifierDeclType	UChar *		3502830	0					
ANR	3502859	Identifier	p		3502830	1					
ANR	3502860	AssignmentExpression	* p = * src		3502830	2		=			
ANR	3502861	Identifier	p		3502830	0					
ANR	3502862	UnaryOperationExpression	* src		3502830	1					
ANR	3502863	UnaryOperator	*		3502830	0					
ANR	3502864	Identifier	src		3502830	1					
ANR	3502865	ExpressionStatement	r = 0	3996:2:89172:89177	3502830	4	True				
ANR	3502866	AssignmentExpression	r = 0		3502830	0		=			
ANR	3502867	Identifier	r		3502830	0					
ANR	3502868	PrimaryExpression	0		3502830	1					
ANR	3502869	ExpressionStatement	start = prev = p	3997:2:89181:89197	3502830	5	True				
ANR	3502870	AssignmentExpression	start = prev = p		3502830	0		=			
ANR	3502871	Identifier	start		3502830	0					
ANR	3502872	AssignmentExpression	prev = p		3502830	1		=			
ANR	3502873	Identifier	prev		3502830	0					
ANR	3502874	Identifier	p		3502830	1					
ANR	3502875	WhileStatement	while ( ! PEND )		3502830	6					
ANR	3502876	Condition	! PEND	3999:9:89209:89213	3502830	0	True				
ANR	3502877	UnaryOperationExpression	! PEND		3502830	0					
ANR	3502878	UnaryOperator	!		3502830	0					
ANR	3502879	Identifier	PEND		3502830	1					
ANR	3502880	CompoundStatement		10:16:141:141	3502830	1					
ANR	3502881	ExpressionStatement	prev = p	4000:4:89222:89230	3502830	0	True				
ANR	3502882	AssignmentExpression	prev = p		3502830	0		=			
ANR	3502883	Identifier	prev		3502830	0					
ANR	3502884	Identifier	p		3502830	1					
ANR	3502885	ExpressionStatement	PFETCH_S ( c )	4001:4:89236:89247	3502830	1	True				
ANR	3502886	CallExpression	PFETCH_S ( c )		3502830	0					
ANR	3502887	Callee	PFETCH_S		3502830	0					
ANR	3502888	Identifier	PFETCH_S		3502830	0					
ANR	3502889	ArgumentList	c		3502830	1					
ANR	3502890	Argument	c		3502830	0					
ANR	3502891	Identifier	c		3502830	0					
ANR	3502892	IfStatement	if ( c == '}' )		3502830	2					
ANR	3502893	Condition	c == '}'	4002:8:89257:89264	3502830	0	True				
ANR	3502894	EqualityExpression	c == '}'		3502830	0		==			
ANR	3502895	Identifier	c		3502830	0					
ANR	3502896	PrimaryExpression	'}'		3502830	1					
ANR	3502897	CompoundStatement		13:18:192:192	3502830	1					
ANR	3502898	ExpressionStatement	"r = ONIGENC_PROPERTY_NAME_TO_CTYPE ( enc , start , prev )"	4003:6:89275:89327	3502830	0	True				
ANR	3502899	AssignmentExpression	"r = ONIGENC_PROPERTY_NAME_TO_CTYPE ( enc , start , prev )"		3502830	0		=			
ANR	3502900	Identifier	r		3502830	0					
ANR	3502901	CallExpression	"ONIGENC_PROPERTY_NAME_TO_CTYPE ( enc , start , prev )"		3502830	1					
ANR	3502902	Callee	ONIGENC_PROPERTY_NAME_TO_CTYPE		3502830	0					
ANR	3502903	Identifier	ONIGENC_PROPERTY_NAME_TO_CTYPE		3502830	0					
ANR	3502904	ArgumentList	enc		3502830	1					
ANR	3502905	Argument	enc		3502830	0					
ANR	3502906	Identifier	enc		3502830	0					
ANR	3502907	Argument	start		3502830	1					
ANR	3502908	Identifier	start		3502830	0					
ANR	3502909	Argument	prev		3502830	2					
ANR	3502910	Identifier	prev		3502830	0					
ANR	3502911	IfStatement	if ( r < 0 )		3502830	1					
ANR	3502912	Condition	r < 0	4004:10:89339:89343	3502830	0	True				
ANR	3502913	RelationalExpression	r < 0		3502830	0		<			
ANR	3502914	Identifier	r		3502830	0					
ANR	3502915	PrimaryExpression	0		3502830	1					
ANR	3502916	BreakStatement	break ;	4004:17:89346:89351	3502830	1	True				
ANR	3502917	ExpressionStatement	* src = p	4006:6:89360:89368	3502830	2	True				
ANR	3502918	AssignmentExpression	* src = p		3502830	0		=			
ANR	3502919	UnaryOperationExpression	* src		3502830	0					
ANR	3502920	UnaryOperator	*		3502830	0					
ANR	3502921	Identifier	src		3502830	1					
ANR	3502922	Identifier	p		3502830	1					
ANR	3502923	ReturnStatement	return r ;	4007:6:89376:89384	3502830	3	True				
ANR	3502924	Identifier	r		3502830	0					
ANR	3502925	ElseStatement	else		3502830	0					
ANR	3502926	IfStatement	if ( c == '(' || c == ')' || c == '{' || c == '|' )		3502830	0					
ANR	3502927	Condition	c == '(' || c == ')' || c == '{' || c == '|'	4009:13:89405:89448	3502830	0	True				
ANR	3502928	OrExpression	c == '(' || c == ')' || c == '{' || c == '|'		3502830	0		||			
ANR	3502929	EqualityExpression	c == '('		3502830	0		==			
ANR	3502930	Identifier	c		3502830	0					
ANR	3502931	PrimaryExpression	'('		3502830	1					
ANR	3502932	OrExpression	c == ')' || c == '{' || c == '|'		3502830	1		||			
ANR	3502933	EqualityExpression	c == ')'		3502830	0		==			
ANR	3502934	Identifier	c		3502830	0					
ANR	3502935	PrimaryExpression	')'		3502830	1					
ANR	3502936	OrExpression	c == '{' || c == '|'		3502830	1		||			
ANR	3502937	EqualityExpression	c == '{'		3502830	0		==			
ANR	3502938	Identifier	c		3502830	0					
ANR	3502939	PrimaryExpression	'{'		3502830	1					
ANR	3502940	EqualityExpression	c == '|'		3502830	1		==			
ANR	3502941	Identifier	c		3502830	0					
ANR	3502942	PrimaryExpression	'|'		3502830	1					
ANR	3502943	CompoundStatement		20:59:376:376	3502830	1					
ANR	3502944	ExpressionStatement	r = ONIGERR_INVALID_CHAR_PROPERTY_NAME	4010:6:89459:89497	3502830	0	True				
ANR	3502945	AssignmentExpression	r = ONIGERR_INVALID_CHAR_PROPERTY_NAME		3502830	0		=			
ANR	3502946	Identifier	r		3502830	0					
ANR	3502947	Identifier	ONIGERR_INVALID_CHAR_PROPERTY_NAME		3502830	1					
ANR	3502948	BreakStatement	break ;	4011:6:89505:89510	3502830	1	True				
ANR	3502949	ExpressionStatement	"onig_scan_env_set_error_string ( env , r , * src , prev )"	4015:2:89525:89575	3502830	7	True				
ANR	3502950	CallExpression	"onig_scan_env_set_error_string ( env , r , * src , prev )"		3502830	0					
ANR	3502951	Callee	onig_scan_env_set_error_string		3502830	0					
ANR	3502952	Identifier	onig_scan_env_set_error_string		3502830	0					
ANR	3502953	ArgumentList	env		3502830	1					
ANR	3502954	Argument	env		3502830	0					
ANR	3502955	Identifier	env		3502830	0					
ANR	3502956	Argument	r		3502830	1					
ANR	3502957	Identifier	r		3502830	0					
ANR	3502958	Argument	* src		3502830	2					
ANR	3502959	UnaryOperationExpression	* src		3502830	0					
ANR	3502960	UnaryOperator	*		3502830	0					
ANR	3502961	Identifier	src		3502830	1					
ANR	3502962	Argument	prev		3502830	3					
ANR	3502963	Identifier	prev		3502830	0					
ANR	3502964	ReturnStatement	return r ;	4016:2:89579:89587	3502830	8	True				
ANR	3502965	Identifier	r		3502830	0					
ANR	3502966	ReturnType	static int		3502830	1					
ANR	3502967	Identifier	fetch_char_property_to_ctype		3502830	2					
ANR	3502968	ParameterList	"UChar * * src , UChar * end , ScanEnv * env"		3502830	3					
ANR	3502969	Parameter	UChar * * src	3989:29:89035:89045	3502830	0	True				
ANR	3502970	ParameterType	UChar * *		3502830	0					
ANR	3502971	Identifier	src		3502830	1					
ANR	3502972	Parameter	UChar * end	3989:42:89048:89057	3502830	1	True				
ANR	3502973	ParameterType	UChar *		3502830	0					
ANR	3502974	Identifier	end		3502830	1					
ANR	3502975	Parameter	ScanEnv * env	3989:54:89060:89071	3502830	2	True				
ANR	3502976	ParameterType	ScanEnv *		3502830	0					
ANR	3502977	Identifier	env		3502830	1					
ANR	3502978	CFGEntryNode	ENTRY		3502830		True				
ANR	3502979	CFGExitNode	EXIT		3502830		True				
ANR	3502980	Symbol	ONIGERR_INVALID_CHAR_PROPERTY_NAME		3502830						
ANR	3502981	Symbol	c		3502830						
ANR	3502982	Symbol	src		3502830						
ANR	3502983	Symbol	prev		3502830						
ANR	3502984	Symbol	* env		3502830						
ANR	3502985	Symbol	start		3502830						
ANR	3502986	Symbol	env -> enc		3502830						
ANR	3502987	Symbol	env		3502830						
ANR	3502988	Symbol	* src		3502830						
ANR	3502989	Symbol	PEND		3502830						
ANR	3502990	Symbol	p		3502830						
ANR	3502991	Symbol	r		3502830						
ANR	3502992	Symbol	ONIGENC_PROPERTY_NAME_TO_CTYPE		3502830						
ANR	3502993	Symbol	end		3502830						
ANR	3502994	Symbol	enc		3502830						
ANR	3502995	Function	parse_char_property	4019:0:89592:90028							
ANR	3502996	FunctionDef	"parse_char_property (Node * * np , OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env)"		3502995	0					
ANR	3502997	CompoundStatement		4022:0:89695:90028	3502995	0					
ANR	3502998	IdentifierDeclStatement	"int r , ctype ;"	4023:2:89699:89711	3502995	0	True				
ANR	3502999	IdentifierDecl	r		3502995	0					
ANR	3503000	IdentifierDeclType	int		3502995	0					
ANR	3503001	Identifier	r		3502995	1					
ANR	3503002	IdentifierDecl	ctype		3502995	1					
ANR	3503003	IdentifierDeclType	int		3502995	0					
ANR	3503004	Identifier	ctype		3502995	1					
ANR	3503005	IdentifierDeclStatement	CClassNode * cc ;	4024:2:89715:89729	3502995	1	True				
ANR	3503006	IdentifierDecl	* cc		3502995	0					
ANR	3503007	IdentifierDeclType	CClassNode *		3502995	0					
ANR	3503008	Identifier	cc		3502995	1					
ANR	3503009	ExpressionStatement	"ctype = fetch_char_property_to_ctype ( src , end , env )"	4026:2:89734:89785	3502995	2	True				
ANR	3503010	AssignmentExpression	"ctype = fetch_char_property_to_ctype ( src , end , env )"		3502995	0		=			
ANR	3503011	Identifier	ctype		3502995	0					
ANR	3503012	CallExpression	"fetch_char_property_to_ctype ( src , end , env )"		3502995	1					
ANR	3503013	Callee	fetch_char_property_to_ctype		3502995	0					
ANR	3503014	Identifier	fetch_char_property_to_ctype		3502995	0					
ANR	3503015	ArgumentList	src		3502995	1					
ANR	3503016	Argument	src		3502995	0					
ANR	3503017	Identifier	src		3502995	0					
ANR	3503018	Argument	end		3502995	1					
ANR	3503019	Identifier	end		3502995	0					
ANR	3503020	Argument	env		3502995	2					
ANR	3503021	Identifier	env		3502995	0					
ANR	3503022	IfStatement	if ( ctype < 0 )		3502995	3					
ANR	3503023	Condition	ctype < 0	4027:6:89793:89801	3502995	0	True				
ANR	3503024	RelationalExpression	ctype < 0		3502995	0		<			
ANR	3503025	Identifier	ctype		3502995	0					
ANR	3503026	PrimaryExpression	0		3502995	1					
ANR	3503027	ReturnStatement	return ctype ;	4027:17:89804:89816	3502995	1	True				
ANR	3503028	Identifier	ctype		3502995	0					
ANR	3503029	ExpressionStatement	* np = node_new_cclass ( )	4029:2:89821:89844	3502995	4	True				
ANR	3503030	AssignmentExpression	* np = node_new_cclass ( )		3502995	0		=			
ANR	3503031	UnaryOperationExpression	* np		3502995	0					
ANR	3503032	UnaryOperator	*		3502995	0					
ANR	3503033	Identifier	np		3502995	1					
ANR	3503034	CallExpression	node_new_cclass ( )		3502995	1					
ANR	3503035	Callee	node_new_cclass		3502995	0					
ANR	3503036	Identifier	node_new_cclass		3502995	0					
ANR	3503037	ArgumentList			3502995	1					
ANR	3503038	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4030:2:89848:89877	3502995	5	True				
ANR	3503039	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3502995	0					
ANR	3503040	Callee	CHECK_NULL_RETURN_MEMERR		3502995	0					
ANR	3503041	Identifier	CHECK_NULL_RETURN_MEMERR		3502995	0					
ANR	3503042	ArgumentList	* np		3502995	1					
ANR	3503043	Argument	* np		3502995	0					
ANR	3503044	UnaryOperationExpression	* np		3502995	0					
ANR	3503045	UnaryOperator	*		3502995	0					
ANR	3503046	Identifier	np		3502995	1					
ANR	3503047	ExpressionStatement	cc = NCCLASS ( * np )	4031:2:89881:89898	3502995	6	True				
ANR	3503048	AssignmentExpression	cc = NCCLASS ( * np )		3502995	0		=			
ANR	3503049	Identifier	cc		3502995	0					
ANR	3503050	CallExpression	NCCLASS ( * np )		3502995	1					
ANR	3503051	Callee	NCCLASS		3502995	0					
ANR	3503052	Identifier	NCCLASS		3502995	0					
ANR	3503053	ArgumentList	* np		3502995	1					
ANR	3503054	Argument	* np		3502995	0					
ANR	3503055	UnaryOperationExpression	* np		3502995	0					
ANR	3503056	UnaryOperator	*		3502995	0					
ANR	3503057	Identifier	np		3502995	1					
ANR	3503058	ExpressionStatement	"r = add_ctype_to_cc ( cc , ctype , 0 , env )"	4032:2:89902:89940	3502995	7	True				
ANR	3503059	AssignmentExpression	"r = add_ctype_to_cc ( cc , ctype , 0 , env )"		3502995	0		=			
ANR	3503060	Identifier	r		3502995	0					
ANR	3503061	CallExpression	"add_ctype_to_cc ( cc , ctype , 0 , env )"		3502995	1					
ANR	3503062	Callee	add_ctype_to_cc		3502995	0					
ANR	3503063	Identifier	add_ctype_to_cc		3502995	0					
ANR	3503064	ArgumentList	cc		3502995	1					
ANR	3503065	Argument	cc		3502995	0					
ANR	3503066	Identifier	cc		3502995	0					
ANR	3503067	Argument	ctype		3502995	1					
ANR	3503068	Identifier	ctype		3502995	0					
ANR	3503069	Argument	0		3502995	2					
ANR	3503070	PrimaryExpression	0		3502995	0					
ANR	3503071	Argument	env		3502995	3					
ANR	3503072	Identifier	env		3502995	0					
ANR	3503073	IfStatement	if ( r != 0 )		3502995	8					
ANR	3503074	Condition	r != 0	4033:6:89948:89953	3502995	0	True				
ANR	3503075	EqualityExpression	r != 0		3502995	0		!=			
ANR	3503076	Identifier	r		3502995	0					
ANR	3503077	PrimaryExpression	0		3502995	1					
ANR	3503078	ReturnStatement	return r ;	4033:14:89956:89964	3502995	1	True				
ANR	3503079	Identifier	r		3502995	0					
ANR	3503080	IfStatement	if ( tok -> u . prop . not != 0 )		3502995	9					
ANR	3503081	Condition	tok -> u . prop . not != 0	4034:6:89972:89991	3502995	0	True				
ANR	3503082	EqualityExpression	tok -> u . prop . not != 0		3502995	0		!=			
ANR	3503083	MemberAccess	tok -> u . prop . not		3502995	0					
ANR	3503084	MemberAccess	tok -> u . prop		3502995	0					
ANR	3503085	PtrMemberAccess	tok -> u		3502995	0					
ANR	3503086	Identifier	tok		3502995	0					
ANR	3503087	Identifier	u		3502995	1					
ANR	3503088	Identifier	prop		3502995	1					
ANR	3503089	Identifier	not		3502995	1					
ANR	3503090	PrimaryExpression	0		3502995	1					
ANR	3503091	ExpressionStatement	NCCLASS_SET_NOT ( cc )	4034:28:89994:90013	3502995	1	True				
ANR	3503092	CallExpression	NCCLASS_SET_NOT ( cc )		3502995	0					
ANR	3503093	Callee	NCCLASS_SET_NOT		3502995	0					
ANR	3503094	Identifier	NCCLASS_SET_NOT		3502995	0					
ANR	3503095	ArgumentList	cc		3502995	1					
ANR	3503096	Argument	cc		3502995	0					
ANR	3503097	Identifier	cc		3502995	0					
ANR	3503098	ReturnStatement	return 0 ;	4036:2:90018:90026	3502995	10	True				
ANR	3503099	PrimaryExpression	0		3502995	0					
ANR	3503100	ReturnType	static int		3502995	1					
ANR	3503101	Identifier	parse_char_property		3502995	2					
ANR	3503102	ParameterList	"Node * * np , OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env"		3502995	3					
ANR	3503103	Parameter	Node * * np	4020:20:89623:89631	3502995	0	True				
ANR	3503104	ParameterType	Node * *		3502995	0					
ANR	3503105	Identifier	np		3502995	1					
ANR	3503106	Parameter	OnigToken * tok	4020:31:89634:89647	3502995	1	True				
ANR	3503107	ParameterType	OnigToken *		3502995	0					
ANR	3503108	Identifier	tok		3502995	1					
ANR	3503109	Parameter	UChar * * src	4020:47:89650:89660	3502995	2	True				
ANR	3503110	ParameterType	UChar * *		3502995	0					
ANR	3503111	Identifier	src		3502995	1					
ANR	3503112	Parameter	UChar * end	4020:60:89663:89672	3502995	3	True				
ANR	3503113	ParameterType	UChar *		3502995	0					
ANR	3503114	Identifier	end		3502995	1					
ANR	3503115	Parameter	ScanEnv * env	4021:6:89681:89692	3502995	4	True				
ANR	3503116	ParameterType	ScanEnv *		3502995	0					
ANR	3503117	Identifier	env		3502995	1					
ANR	3503118	CFGEntryNode	ENTRY		3502995		True				
ANR	3503119	CFGExitNode	EXIT		3502995		True				
ANR	3503120	Symbol	cc		3502995						
ANR	3503121	Symbol	np		3502995						
ANR	3503122	Symbol	src		3502995						
ANR	3503123	Symbol	node_new_cclass		3502995						
ANR	3503124	Symbol	* np		3502995						
ANR	3503125	Symbol	env		3502995						
ANR	3503126	Symbol	NCCLASS		3502995						
ANR	3503127	Symbol	tok		3502995						
ANR	3503128	Symbol	r		3502995						
ANR	3503129	Symbol	ctype		3502995						
ANR	3503130	Symbol	tok -> u . prop . not		3502995						
ANR	3503131	Symbol	add_ctype_to_cc		3502995						
ANR	3503132	Symbol	end		3502995						
ANR	3503133	Symbol	* tok		3502995						
ANR	3503134	Symbol	tok -> u		3502995						
ANR	3503135	Symbol	fetch_char_property_to_ctype		3502995						
ANR	3503136	Symbol	tok -> u . prop		3502995						
ANR	3503137	ClassDef	CCSTATE	4040:0:90032:90101							
ANR	3503138	ClassDef	CCVALTYPE	4047:0:90105:90162							
ANR	3503139	Function	next_state_class	4053:0:90166:90689							
ANR	3503140	FunctionDef	"next_state_class (CClassNode * cc , OnigCodePoint * vs , enum CCVALTYPE * type , enum CCSTATE * state , ScanEnv * env)"		3503139	0					
ANR	3503141	CompoundStatement		4056:0:90289:90689	3503139	0					
ANR	3503142	IdentifierDeclStatement	int r ;	4057:2:90293:90298	3503139	0	True				
ANR	3503143	IdentifierDecl	r		3503139	0					
ANR	3503144	IdentifierDeclType	int		3503139	0					
ANR	3503145	Identifier	r		3503139	1					
ANR	3503146	IfStatement	if ( * state == CCS_RANGE )		3503139	1					
ANR	3503147	Condition	* state == CCS_RANGE	4059:6:90307:90325	3503139	0	True				
ANR	3503148	EqualityExpression	* state == CCS_RANGE		3503139	0		==			
ANR	3503149	UnaryOperationExpression	* state		3503139	0					
ANR	3503150	UnaryOperator	*		3503139	0					
ANR	3503151	Identifier	state		3503139	1					
ANR	3503152	Identifier	CCS_RANGE		3503139	1					
ANR	3503153	ReturnStatement	return ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE ;	4060:4:90332:90379	3503139	1	True				
ANR	3503154	Identifier	ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE		3503139	0					
ANR	3503155	IfStatement	if ( * state == CCS_VALUE && * type != CCV_CLASS )		3503139	2					
ANR	3503156	Condition	* state == CCS_VALUE && * type != CCV_CLASS	4062:6:90388:90428	3503139	0	True				
ANR	3503157	AndExpression	* state == CCS_VALUE && * type != CCV_CLASS		3503139	0		&&			
ANR	3503158	EqualityExpression	* state == CCS_VALUE		3503139	0		==			
ANR	3503159	UnaryOperationExpression	* state		3503139	0					
ANR	3503160	UnaryOperator	*		3503139	0					
ANR	3503161	Identifier	state		3503139	1					
ANR	3503162	Identifier	CCS_VALUE		3503139	1					
ANR	3503163	EqualityExpression	* type != CCV_CLASS		3503139	1		!=			
ANR	3503164	UnaryOperationExpression	* type		3503139	0					
ANR	3503165	UnaryOperator	*		3503139	0					
ANR	3503166	Identifier	type		3503139	1					
ANR	3503167	Identifier	CCV_CLASS		3503139	1					
ANR	3503168	CompoundStatement		7:49:141:141	3503139	1					
ANR	3503169	IfStatement	if ( * type == CCV_SB )		3503139	0					
ANR	3503170	Condition	* type == CCV_SB	4063:8:90441:90455	3503139	0	True				
ANR	3503171	EqualityExpression	* type == CCV_SB		3503139	0		==			
ANR	3503172	UnaryOperationExpression	* type		3503139	0					
ANR	3503173	UnaryOperator	*		3503139	0					
ANR	3503174	Identifier	type		3503139	1					
ANR	3503175	Identifier	CCV_SB		3503139	1					
ANR	3503176	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , ( int ) ( * vs ) )"	4064:6:90464:90499	3503139	1	True				
ANR	3503177	CallExpression	"BITSET_SET_BIT ( cc -> bs , ( int ) ( * vs ) )"		3503139	0					
ANR	3503178	Callee	BITSET_SET_BIT		3503139	0					
ANR	3503179	Identifier	BITSET_SET_BIT		3503139	0					
ANR	3503180	ArgumentList	cc -> bs		3503139	1					
ANR	3503181	Argument	cc -> bs		3503139	0					
ANR	3503182	PtrMemberAccess	cc -> bs		3503139	0					
ANR	3503183	Identifier	cc		3503139	0					
ANR	3503184	Identifier	bs		3503139	1					
ANR	3503185	Argument	( int ) ( * vs )		3503139	1					
ANR	3503186	CastExpression	( int ) ( * vs )		3503139	0					
ANR	3503187	CastTarget	int		3503139	0					
ANR	3503188	UnaryOperationExpression	* vs		3503139	1					
ANR	3503189	UnaryOperator	*		3503139	0					
ANR	3503190	Identifier	vs		3503139	1					
ANR	3503191	ElseStatement	else		3503139	0					
ANR	3503192	IfStatement	if ( * type == CCV_CODE_POINT )		3503139	0					
ANR	3503193	Condition	* type == CCV_CODE_POINT	4065:13:90514:90536	3503139	0	True				
ANR	3503194	EqualityExpression	* type == CCV_CODE_POINT		3503139	0		==			
ANR	3503195	UnaryOperationExpression	* type		3503139	0					
ANR	3503196	UnaryOperator	*		3503139	0					
ANR	3503197	Identifier	type		3503139	1					
ANR	3503198	Identifier	CCV_CODE_POINT		3503139	1					
ANR	3503199	CompoundStatement		10:38:249:249	3503139	1					
ANR	3503200	ExpressionStatement	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"	4066:6:90547:90593	3503139	0	True				
ANR	3503201	AssignmentExpression	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"		3503139	0		=			
ANR	3503202	Identifier	r		3503139	0					
ANR	3503203	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"		3503139	1					
ANR	3503204	Callee	add_code_range		3503139	0					
ANR	3503205	Identifier	add_code_range		3503139	0					
ANR	3503206	ArgumentList	& ( cc -> mbuf )		3503139	1					
ANR	3503207	Argument	& ( cc -> mbuf )		3503139	0					
ANR	3503208	UnaryOperationExpression	& ( cc -> mbuf )		3503139	0					
ANR	3503209	UnaryOperator	&		3503139	0					
ANR	3503210	PtrMemberAccess	cc -> mbuf		3503139	1					
ANR	3503211	Identifier	cc		3503139	0					
ANR	3503212	Identifier	mbuf		3503139	1					
ANR	3503213	Argument	env		3503139	1					
ANR	3503214	Identifier	env		3503139	0					
ANR	3503215	Argument	* vs		3503139	2					
ANR	3503216	UnaryOperationExpression	* vs		3503139	0					
ANR	3503217	UnaryOperator	*		3503139	0					
ANR	3503218	Identifier	vs		3503139	1					
ANR	3503219	Argument	* vs		3503139	3					
ANR	3503220	UnaryOperationExpression	* vs		3503139	0					
ANR	3503221	UnaryOperator	*		3503139	0					
ANR	3503222	Identifier	vs		3503139	1					
ANR	3503223	IfStatement	if ( r < 0 )		3503139	1					
ANR	3503224	Condition	r < 0	4067:10:90605:90609	3503139	0	True				
ANR	3503225	RelationalExpression	r < 0		3503139	0		<			
ANR	3503226	Identifier	r		3503139	0					
ANR	3503227	PrimaryExpression	0		3503139	1					
ANR	3503228	ReturnStatement	return r ;	4067:17:90612:90620	3503139	1	True				
ANR	3503229	Identifier	r		3503139	0					
ANR	3503230	ExpressionStatement	* state = CCS_VALUE	4071:2:90635:90653	3503139	3	True				
ANR	3503231	AssignmentExpression	* state = CCS_VALUE		3503139	0		=			
ANR	3503232	UnaryOperationExpression	* state		3503139	0					
ANR	3503233	UnaryOperator	*		3503139	0					
ANR	3503234	Identifier	state		3503139	1					
ANR	3503235	Identifier	CCS_VALUE		3503139	1					
ANR	3503236	ExpressionStatement	* type = CCV_CLASS	4072:2:90657:90675	3503139	4	True				
ANR	3503237	AssignmentExpression	* type = CCV_CLASS		3503139	0		=			
ANR	3503238	UnaryOperationExpression	* type		3503139	0					
ANR	3503239	UnaryOperator	*		3503139	0					
ANR	3503240	Identifier	type		3503139	1					
ANR	3503241	Identifier	CCV_CLASS		3503139	1					
ANR	3503242	ReturnStatement	return 0 ;	4073:2:90679:90687	3503139	5	True				
ANR	3503243	PrimaryExpression	0		3503139	0					
ANR	3503244	ReturnType	static int		3503139	1					
ANR	3503245	Identifier	next_state_class		3503139	2					
ANR	3503246	ParameterList	"CClassNode * cc , OnigCodePoint * vs , enum CCVALTYPE * type , enum CCSTATE * state , ScanEnv * env"		3503139	3					
ANR	3503247	Parameter	CClassNode * cc	4054:17:90194:90207	3503139	0	True				
ANR	3503248	ParameterType	CClassNode *		3503139	0					
ANR	3503249	Identifier	cc		3503139	1					
ANR	3503250	Parameter	OnigCodePoint * vs	4054:33:90210:90226	3503139	1	True				
ANR	3503251	ParameterType	OnigCodePoint *		3503139	0					
ANR	3503252	Identifier	vs		3503139	1					
ANR	3503253	Parameter	enum CCVALTYPE * type	4054:52:90229:90248	3503139	2	True				
ANR	3503254	ParameterType	enum CCVALTYPE *		3503139	0					
ANR	3503255	Identifier	type		3503139	1					
ANR	3503256	Parameter	enum CCSTATE * state	4055:3:90254:90272	3503139	3	True				
ANR	3503257	ParameterType	enum CCSTATE *		3503139	0					
ANR	3503258	Identifier	state		3503139	1					
ANR	3503259	Parameter	ScanEnv * env	4055:24:90275:90286	3503139	4	True				
ANR	3503260	ParameterType	ScanEnv *		3503139	0					
ANR	3503261	Identifier	env		3503139	1					
ANR	3503262	CFGEntryNode	ENTRY		3503139		True				
ANR	3503263	CFGExitNode	EXIT		3503139		True				
ANR	3503264	Symbol	cc		3503139						
ANR	3503265	Symbol	* vs		3503139						
ANR	3503266	Symbol	add_code_range		3503139						
ANR	3503267	Symbol	* cc		3503139						
ANR	3503268	Symbol	CCS_RANGE		3503139						
ANR	3503269	Symbol	type		3503139						
ANR	3503270	Symbol	env		3503139						
ANR	3503271	Symbol	ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE		3503139						
ANR	3503272	Symbol	cc -> bs		3503139						
ANR	3503273	Symbol	* state		3503139						
ANR	3503274	Symbol	CCV_CLASS		3503139						
ANR	3503275	Symbol	r		3503139						
ANR	3503276	Symbol	* type		3503139						
ANR	3503277	Symbol	CCV_SB		3503139						
ANR	3503278	Symbol	CCS_VALUE		3503139						
ANR	3503279	Symbol	CCV_CODE_POINT		3503139						
ANR	3503280	Symbol	state		3503139						
ANR	3503281	Symbol	& cc -> mbuf		3503139						
ANR	3503282	Symbol	vs		3503139						
ANR	3503283	Function	next_state_val	4076:0:90692:92363							
ANR	3503284	FunctionDef	"next_state_val (CClassNode * cc , OnigCodePoint * vs , OnigCodePoint v , int * vs_israw , int v_israw , enum CCVALTYPE intype , enum CCVALTYPE * type , enum CCSTATE * state , ScanEnv * env)"		3503283	0					
ANR	3503285	CompoundStatement		4081:0:90902:92363	3503283	0					
ANR	3503286	IdentifierDeclStatement	int r ;	4082:2:90906:90911	3503283	0	True				
ANR	3503287	IdentifierDecl	r		3503283	0					
ANR	3503288	IdentifierDeclType	int		3503283	0					
ANR	3503289	Identifier	r		3503283	1					
ANR	3503290	SwitchStatement	switch ( * state )		3503283	1					
ANR	3503291	Condition	* state	4084:10:90924:90929	3503283	0	True				
ANR	3503292	UnaryOperationExpression	* state		3503283	0					
ANR	3503293	UnaryOperator	*		3503283	0					
ANR	3503294	Identifier	state		3503283	1					
ANR	3503295	CompoundStatement		4:18:29:29	3503283	1					
ANR	3503296	Label	case CCS_VALUE :	4085:2:90936:90950	3503283	0	True				
ANR	3503297	Identifier	CCS_VALUE		3503283	0					
ANR	3503298	IfStatement	if ( * type == CCV_SB )		3503283	1					
ANR	3503299	Condition	* type == CCV_SB	4086:8:90960:90974	3503283	0	True				
ANR	3503300	EqualityExpression	* type == CCV_SB		3503283	0		==			
ANR	3503301	UnaryOperationExpression	* type		3503283	0					
ANR	3503302	UnaryOperator	*		3503283	0					
ANR	3503303	Identifier	type		3503283	1					
ANR	3503304	Identifier	CCV_SB		3503283	1					
ANR	3503305	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , ( int ) ( * vs ) )"	4087:6:90983:91018	3503283	1	True				
ANR	3503306	CallExpression	"BITSET_SET_BIT ( cc -> bs , ( int ) ( * vs ) )"		3503283	0					
ANR	3503307	Callee	BITSET_SET_BIT		3503283	0					
ANR	3503308	Identifier	BITSET_SET_BIT		3503283	0					
ANR	3503309	ArgumentList	cc -> bs		3503283	1					
ANR	3503310	Argument	cc -> bs		3503283	0					
ANR	3503311	PtrMemberAccess	cc -> bs		3503283	0					
ANR	3503312	Identifier	cc		3503283	0					
ANR	3503313	Identifier	bs		3503283	1					
ANR	3503314	Argument	( int ) ( * vs )		3503283	1					
ANR	3503315	CastExpression	( int ) ( * vs )		3503283	0					
ANR	3503316	CastTarget	int		3503283	0					
ANR	3503317	UnaryOperationExpression	* vs		3503283	1					
ANR	3503318	UnaryOperator	*		3503283	0					
ANR	3503319	Identifier	vs		3503283	1					
ANR	3503320	ElseStatement	else		3503283	0					
ANR	3503321	IfStatement	if ( * type == CCV_CODE_POINT )		3503283	0					
ANR	3503322	Condition	* type == CCV_CODE_POINT	4088:13:91033:91055	3503283	0	True				
ANR	3503323	EqualityExpression	* type == CCV_CODE_POINT		3503283	0		==			
ANR	3503324	UnaryOperationExpression	* type		3503283	0					
ANR	3503325	UnaryOperator	*		3503283	0					
ANR	3503326	Identifier	type		3503283	1					
ANR	3503327	Identifier	CCV_CODE_POINT		3503283	1					
ANR	3503328	CompoundStatement		8:38:155:155	3503283	1					
ANR	3503329	ExpressionStatement	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"	4089:6:91066:91112	3503283	0	True				
ANR	3503330	AssignmentExpression	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"		3503283	0		=			
ANR	3503331	Identifier	r		3503283	0					
ANR	3503332	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"		3503283	1					
ANR	3503333	Callee	add_code_range		3503283	0					
ANR	3503334	Identifier	add_code_range		3503283	0					
ANR	3503335	ArgumentList	& ( cc -> mbuf )		3503283	1					
ANR	3503336	Argument	& ( cc -> mbuf )		3503283	0					
ANR	3503337	UnaryOperationExpression	& ( cc -> mbuf )		3503283	0					
ANR	3503338	UnaryOperator	&		3503283	0					
ANR	3503339	PtrMemberAccess	cc -> mbuf		3503283	1					
ANR	3503340	Identifier	cc		3503283	0					
ANR	3503341	Identifier	mbuf		3503283	1					
ANR	3503342	Argument	env		3503283	1					
ANR	3503343	Identifier	env		3503283	0					
ANR	3503344	Argument	* vs		3503283	2					
ANR	3503345	UnaryOperationExpression	* vs		3503283	0					
ANR	3503346	UnaryOperator	*		3503283	0					
ANR	3503347	Identifier	vs		3503283	1					
ANR	3503348	Argument	* vs		3503283	3					
ANR	3503349	UnaryOperationExpression	* vs		3503283	0					
ANR	3503350	UnaryOperator	*		3503283	0					
ANR	3503351	Identifier	vs		3503283	1					
ANR	3503352	IfStatement	if ( r < 0 )		3503283	1					
ANR	3503353	Condition	r < 0	4090:10:91124:91128	3503283	0	True				
ANR	3503354	RelationalExpression	r < 0		3503283	0		<			
ANR	3503355	Identifier	r		3503283	0					
ANR	3503356	PrimaryExpression	0		3503283	1					
ANR	3503357	ReturnStatement	return r ;	4090:17:91131:91139	3503283	1	True				
ANR	3503358	Identifier	r		3503283	0					
ANR	3503359	BreakStatement	break ;	4092:4:91151:91156	3503283	2	True				
ANR	3503360	Label	case CCS_RANGE :	4094:2:91161:91175	3503283	3	True				
ANR	3503361	Identifier	CCS_RANGE		3503283	0					
ANR	3503362	IfStatement	if ( intype == * type )		3503283	4					
ANR	3503363	Condition	intype == * type	4095:8:91185:91199	3503283	0	True				
ANR	3503364	EqualityExpression	intype == * type		3503283	0		==			
ANR	3503365	Identifier	intype		3503283	0					
ANR	3503366	UnaryOperationExpression	* type		3503283	1					
ANR	3503367	UnaryOperator	*		3503283	0					
ANR	3503368	Identifier	type		3503283	1					
ANR	3503369	CompoundStatement		15:25:299:299	3503283	1					
ANR	3503370	IfStatement	if ( intype == CCV_SB )		3503283	0					
ANR	3503371	Condition	intype == CCV_SB	4096:10:91214:91229	3503283	0	True				
ANR	3503372	EqualityExpression	intype == CCV_SB		3503283	0		==			
ANR	3503373	Identifier	intype		3503283	0					
ANR	3503374	Identifier	CCV_SB		3503283	1					
ANR	3503375	CompoundStatement		16:28:329:329	3503283	1					
ANR	3503376	IfStatement	if ( * vs > 0xff || v > 0xff )		3503283	0					
ANR	3503377	Condition	* vs > 0xff || v > 0xff	4097:12:91246:91267	3503283	0	True				
ANR	3503378	OrExpression	* vs > 0xff || v > 0xff		3503283	0		||			
ANR	3503379	RelationalExpression	* vs > 0xff		3503283	0		>			
ANR	3503380	UnaryOperationExpression	* vs		3503283	0					
ANR	3503381	UnaryOperator	*		3503283	0					
ANR	3503382	Identifier	vs		3503283	1					
ANR	3503383	PrimaryExpression	0xff		3503283	1					
ANR	3503384	RelationalExpression	v > 0xff		3503283	1		>			
ANR	3503385	Identifier	v		3503283	0					
ANR	3503386	PrimaryExpression	0xff		3503283	1					
ANR	3503387	ReturnStatement	return ONIGERR_INVALID_CODE_POINT_VALUE ;	4098:10:91280:91319	3503283	1	True				
ANR	3503388	Identifier	ONIGERR_INVALID_CODE_POINT_VALUE		3503283	0					
ANR	3503389	IfStatement	if ( * vs > v )		3503283	1					
ANR	3503390	Condition	* vs > v	4100:5:91327:91333	3503283	0	True				
ANR	3503391	RelationalExpression	* vs > v		3503283	0		>			
ANR	3503392	UnaryOperationExpression	* vs		3503283	0					
ANR	3503393	UnaryOperator	*		3503283	0					
ANR	3503394	Identifier	vs		3503283	1					
ANR	3503395	Identifier	v		3503283	1					
ANR	3503396	CompoundStatement		20:14:433:433	3503283	1					
ANR	3503397	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC ) )"		3503283	0					
ANR	3503398	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"	4101:7:91345:91403	3503283	0	True				
ANR	3503399	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"		3503283	0					
ANR	3503400	Callee	IS_SYNTAX_BV		3503283	0					
ANR	3503401	Identifier	IS_SYNTAX_BV		3503283	0					
ANR	3503402	ArgumentList	env -> syntax		3503283	1					
ANR	3503403	Argument	env -> syntax		3503283	0					
ANR	3503404	PtrMemberAccess	env -> syntax		3503283	0					
ANR	3503405	Identifier	env		3503283	0					
ANR	3503406	Identifier	syntax		3503283	1					
ANR	3503407	Argument	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		3503283	1					
ANR	3503408	Identifier	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		3503283	0					
ANR	3503409	GotoStatement	goto ccs_range_end ;	4102:5:91411:91429	3503283	1	True				
ANR	3503410	Identifier	ccs_range_end		3503283	0					
ANR	3503411	ElseStatement	else		3503283	0					
ANR	3503412	ReturnStatement	return ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS ;	4104:5:91444:91484	3503283	0	True				
ANR	3503413	Identifier	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		3503283	0					
ANR	3503414	ExpressionStatement	"bitset_set_range ( cc -> bs , ( int ) * vs , ( int ) v )"	4106:1:91490:91534	3503283	2	True				
ANR	3503415	CallExpression	"bitset_set_range ( cc -> bs , ( int ) * vs , ( int ) v )"		3503283	0					
ANR	3503416	Callee	bitset_set_range		3503283	0					
ANR	3503417	Identifier	bitset_set_range		3503283	0					
ANR	3503418	ArgumentList	cc -> bs		3503283	1					
ANR	3503419	Argument	cc -> bs		3503283	0					
ANR	3503420	PtrMemberAccess	cc -> bs		3503283	0					
ANR	3503421	Identifier	cc		3503283	0					
ANR	3503422	Identifier	bs		3503283	1					
ANR	3503423	Argument	( int ) * vs		3503283	1					
ANR	3503424	CastExpression	( int ) * vs		3503283	0					
ANR	3503425	CastTarget	int		3503283	0					
ANR	3503426	UnaryOperationExpression	* vs		3503283	1					
ANR	3503427	UnaryOperator	*		3503283	0					
ANR	3503428	Identifier	vs		3503283	1					
ANR	3503429	Argument	( int ) v		3503283	2					
ANR	3503430	CastExpression	( int ) v		3503283	0					
ANR	3503431	CastTarget	int		3503283	0					
ANR	3503432	Identifier	v		3503283	1					
ANR	3503433	ElseStatement	else		3503283	0					
ANR	3503434	CompoundStatement		28:11:652:652	3503283	0					
ANR	3503435	ExpressionStatement	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , v )"	4109:1:91558:91602	3503283	0	True				
ANR	3503436	AssignmentExpression	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , v )"		3503283	0		=			
ANR	3503437	Identifier	r		3503283	0					
ANR	3503438	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , * vs , v )"		3503283	1					
ANR	3503439	Callee	add_code_range		3503283	0					
ANR	3503440	Identifier	add_code_range		3503283	0					
ANR	3503441	ArgumentList	& ( cc -> mbuf )		3503283	1					
ANR	3503442	Argument	& ( cc -> mbuf )		3503283	0					
ANR	3503443	UnaryOperationExpression	& ( cc -> mbuf )		3503283	0					
ANR	3503444	UnaryOperator	&		3503283	0					
ANR	3503445	PtrMemberAccess	cc -> mbuf		3503283	1					
ANR	3503446	Identifier	cc		3503283	0					
ANR	3503447	Identifier	mbuf		3503283	1					
ANR	3503448	Argument	env		3503283	1					
ANR	3503449	Identifier	env		3503283	0					
ANR	3503450	Argument	* vs		3503283	2					
ANR	3503451	UnaryOperationExpression	* vs		3503283	0					
ANR	3503452	UnaryOperator	*		3503283	0					
ANR	3503453	Identifier	vs		3503283	1					
ANR	3503454	Argument	v		3503283	3					
ANR	3503455	Identifier	v		3503283	0					
ANR	3503456	IfStatement	if ( r < 0 )		3503283	1					
ANR	3503457	Condition	r < 0	4110:5:91609:91613	3503283	0	True				
ANR	3503458	RelationalExpression	r < 0		3503283	0		<			
ANR	3503459	Identifier	r		3503283	0					
ANR	3503460	PrimaryExpression	0		3503283	1					
ANR	3503461	ReturnStatement	return r ;	4110:12:91616:91624	3503283	1	True				
ANR	3503462	Identifier	r		3503283	0					
ANR	3503463	ElseStatement	else		3503283	0					
ANR	3503464	CompoundStatement		33:9:746:746	3503283	0					
ANR	3503465	IfStatement	if ( intype == CCV_CODE_POINT && * type == CCV_SB )		3503283	0					
ANR	3503466	Condition	intype == CCV_CODE_POINT && * type == CCV_SB	4115:10:91667:91709	3503283	0	True				
ANR	3503467	AndExpression	intype == CCV_CODE_POINT && * type == CCV_SB		3503283	0		&&			
ANR	3503468	EqualityExpression	intype == CCV_CODE_POINT		3503283	0		==			
ANR	3503469	Identifier	intype		3503283	0					
ANR	3503470	Identifier	CCV_CODE_POINT		3503283	1					
ANR	3503471	EqualityExpression	* type == CCV_SB		3503283	1		==			
ANR	3503472	UnaryOperationExpression	* type		3503283	0					
ANR	3503473	UnaryOperator	*		3503283	0					
ANR	3503474	Identifier	type		3503283	1					
ANR	3503475	Identifier	CCV_SB		3503283	1					
ANR	3503476	CompoundStatement		35:55:809:809	3503283	1					
ANR	3503477	IfStatement	if ( * vs > v )		3503283	0					
ANR	3503478	Condition	* vs > v	4117:5:91726:91732	3503283	0	True				
ANR	3503479	RelationalExpression	* vs > v		3503283	0		>			
ANR	3503480	UnaryOperationExpression	* vs		3503283	0					
ANR	3503481	UnaryOperator	*		3503283	0					
ANR	3503482	Identifier	vs		3503283	1					
ANR	3503483	Identifier	v		3503283	1					
ANR	3503484	CompoundStatement		37:14:832:832	3503283	1					
ANR	3503485	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC ) )"		3503283	0					
ANR	3503486	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"	4118:7:91744:91802	3503283	0	True				
ANR	3503487	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"		3503283	0					
ANR	3503488	Callee	IS_SYNTAX_BV		3503283	0					
ANR	3503489	Identifier	IS_SYNTAX_BV		3503283	0					
ANR	3503490	ArgumentList	env -> syntax		3503283	1					
ANR	3503491	Argument	env -> syntax		3503283	0					
ANR	3503492	PtrMemberAccess	env -> syntax		3503283	0					
ANR	3503493	Identifier	env		3503283	0					
ANR	3503494	Identifier	syntax		3503283	1					
ANR	3503495	Argument	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		3503283	1					
ANR	3503496	Identifier	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		3503283	0					
ANR	3503497	GotoStatement	goto ccs_range_end ;	4119:5:91810:91828	3503283	1	True				
ANR	3503498	Identifier	ccs_range_end		3503283	0					
ANR	3503499	ElseStatement	else		3503283	0					
ANR	3503500	ReturnStatement	return ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS ;	4121:5:91843:91883	3503283	0	True				
ANR	3503501	Identifier	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		3503283	0					
ANR	3503502	ExpressionStatement	"bitset_set_range ( cc -> bs , ( int ) * vs , ( int ) ( v < 0xff ? v : 0xff ) )"	4123:1:91889:91953	3503283	1	True				
ANR	3503503	CallExpression	"bitset_set_range ( cc -> bs , ( int ) * vs , ( int ) ( v < 0xff ? v : 0xff ) )"		3503283	0					
ANR	3503504	Callee	bitset_set_range		3503283	0					
ANR	3503505	Identifier	bitset_set_range		3503283	0					
ANR	3503506	ArgumentList	cc -> bs		3503283	1					
ANR	3503507	Argument	cc -> bs		3503283	0					
ANR	3503508	PtrMemberAccess	cc -> bs		3503283	0					
ANR	3503509	Identifier	cc		3503283	0					
ANR	3503510	Identifier	bs		3503283	1					
ANR	3503511	Argument	( int ) * vs		3503283	1					
ANR	3503512	CastExpression	( int ) * vs		3503283	0					
ANR	3503513	CastTarget	int		3503283	0					
ANR	3503514	UnaryOperationExpression	* vs		3503283	1					
ANR	3503515	UnaryOperator	*		3503283	0					
ANR	3503516	Identifier	vs		3503283	1					
ANR	3503517	Argument	( int ) ( v < 0xff ? v : 0xff )		3503283	2					
ANR	3503518	CastExpression	( int ) ( v < 0xff ? v : 0xff )		3503283	0					
ANR	3503519	CastTarget	int		3503283	0					
ANR	3503520	ConditionalExpression	v < 0xff ? v : 0xff		3503283	1					
ANR	3503521	Condition	v < 0xff		3503283	0					
ANR	3503522	RelationalExpression	v < 0xff		3503283	0		<			
ANR	3503523	Identifier	v		3503283	0					
ANR	3503524	PrimaryExpression	0xff		3503283	1					
ANR	3503525	Identifier	v		3503283	1					
ANR	3503526	PrimaryExpression	0xff		3503283	2					
ANR	3503527	ExpressionStatement	"r = add_code_range ( & ( cc -> mbuf ) , env , ( OnigCodePoint ) * vs , v )"	4124:1:91956:92016	3503283	2	True				
ANR	3503528	AssignmentExpression	"r = add_code_range ( & ( cc -> mbuf ) , env , ( OnigCodePoint ) * vs , v )"		3503283	0		=			
ANR	3503529	Identifier	r		3503283	0					
ANR	3503530	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , ( OnigCodePoint ) * vs , v )"		3503283	1					
ANR	3503531	Callee	add_code_range		3503283	0					
ANR	3503532	Identifier	add_code_range		3503283	0					
ANR	3503533	ArgumentList	& ( cc -> mbuf )		3503283	1					
ANR	3503534	Argument	& ( cc -> mbuf )		3503283	0					
ANR	3503535	UnaryOperationExpression	& ( cc -> mbuf )		3503283	0					
ANR	3503536	UnaryOperator	&		3503283	0					
ANR	3503537	PtrMemberAccess	cc -> mbuf		3503283	1					
ANR	3503538	Identifier	cc		3503283	0					
ANR	3503539	Identifier	mbuf		3503283	1					
ANR	3503540	Argument	env		3503283	1					
ANR	3503541	Identifier	env		3503283	0					
ANR	3503542	Argument	( OnigCodePoint ) * vs		3503283	2					
ANR	3503543	CastExpression	( OnigCodePoint ) * vs		3503283	0					
ANR	3503544	CastTarget	OnigCodePoint		3503283	0					
ANR	3503545	UnaryOperationExpression	* vs		3503283	1					
ANR	3503546	UnaryOperator	*		3503283	0					
ANR	3503547	Identifier	vs		3503283	1					
ANR	3503548	Argument	v		3503283	3					
ANR	3503549	Identifier	v		3503283	0					
ANR	3503550	IfStatement	if ( r < 0 )		3503283	3					
ANR	3503551	Condition	r < 0	4125:5:92023:92027	3503283	0	True				
ANR	3503552	RelationalExpression	r < 0		3503283	0		<			
ANR	3503553	Identifier	r		3503283	0					
ANR	3503554	PrimaryExpression	0		3503283	1					
ANR	3503555	ReturnStatement	return r ;	4125:12:92030:92038	3503283	1	True				
ANR	3503556	Identifier	r		3503283	0					
ANR	3503557	ElseStatement	else		3503283	0					
ANR	3503558	ReturnStatement	return ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE ;	4129:1:92066:92116	3503283	0	True				
ANR	3503559	Identifier	ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE		3503283	0					
ANR	3503560	Label	ccs_range_end :	4132:2:92133:92146	3503283	5	True				
ANR	3503561	Identifier	ccs_range_end		3503283	0					
ANR	3503562	ExpressionStatement	* state = CCS_COMPLETE	4133:4:92152:92173	3503283	6	True				
ANR	3503563	AssignmentExpression	* state = CCS_COMPLETE		3503283	0		=			
ANR	3503564	UnaryOperationExpression	* state		3503283	0					
ANR	3503565	UnaryOperator	*		3503283	0					
ANR	3503566	Identifier	state		3503283	1					
ANR	3503567	Identifier	CCS_COMPLETE		3503283	1					
ANR	3503568	BreakStatement	break ;	4134:4:92179:92184	3503283	7	True				
ANR	3503569	Label	case CCS_COMPLETE :	4136:2:92189:92206	3503283	8	True				
ANR	3503570	Identifier	CCS_COMPLETE		3503283	0					
ANR	3503571	Label	case CCS_START :	4137:2:92210:92224	3503283	9	True				
ANR	3503572	Identifier	CCS_START		3503283	0					
ANR	3503573	ExpressionStatement	* state = CCS_VALUE	4138:4:92230:92248	3503283	10	True				
ANR	3503574	AssignmentExpression	* state = CCS_VALUE		3503283	0		=			
ANR	3503575	UnaryOperationExpression	* state		3503283	0					
ANR	3503576	UnaryOperator	*		3503283	0					
ANR	3503577	Identifier	state		3503283	1					
ANR	3503578	Identifier	CCS_VALUE		3503283	1					
ANR	3503579	BreakStatement	break ;	4139:4:92254:92259	3503283	11	True				
ANR	3503580	Label	default :	4141:2:92264:92271	3503283	12	True				
ANR	3503581	Identifier	default		3503283	0					
ANR	3503582	BreakStatement	break ;	4142:4:92277:92282	3503283	13	True				
ANR	3503583	ExpressionStatement	* vs_israw = v_israw	4145:2:92291:92310	3503283	2	True				
ANR	3503584	AssignmentExpression	* vs_israw = v_israw		3503283	0		=			
ANR	3503585	UnaryOperationExpression	* vs_israw		3503283	0					
ANR	3503586	UnaryOperator	*		3503283	0					
ANR	3503587	Identifier	vs_israw		3503283	1					
ANR	3503588	Identifier	v_israw		3503283	1					
ANR	3503589	ExpressionStatement	* vs = v	4146:2:92314:92327	3503283	3	True				
ANR	3503590	AssignmentExpression	* vs = v		3503283	0		=			
ANR	3503591	UnaryOperationExpression	* vs		3503283	0					
ANR	3503592	UnaryOperator	*		3503283	0					
ANR	3503593	Identifier	vs		3503283	1					
ANR	3503594	Identifier	v		3503283	1					
ANR	3503595	ExpressionStatement	* type = intype	4147:2:92331:92349	3503283	4	True				
ANR	3503596	AssignmentExpression	* type = intype		3503283	0		=			
ANR	3503597	UnaryOperationExpression	* type		3503283	0					
ANR	3503598	UnaryOperator	*		3503283	0					
ANR	3503599	Identifier	type		3503283	1					
ANR	3503600	Identifier	intype		3503283	1					
ANR	3503601	ReturnStatement	return 0 ;	4148:2:92353:92361	3503283	5	True				
ANR	3503602	PrimaryExpression	0		3503283	0					
ANR	3503603	ReturnType	static int		3503283	1					
ANR	3503604	Identifier	next_state_val		3503283	2					
ANR	3503605	ParameterList	"CClassNode * cc , OnigCodePoint * vs , OnigCodePoint v , int * vs_israw , int v_israw , enum CCVALTYPE intype , enum CCVALTYPE * type , enum CCSTATE * state , ScanEnv * env"		3503283	3					
ANR	3503606	Parameter	CClassNode * cc	4077:15:90718:90731	3503283	0	True				
ANR	3503607	ParameterType	CClassNode *		3503283	0					
ANR	3503608	Identifier	cc		3503283	1					
ANR	3503609	Parameter	OnigCodePoint * vs	4077:31:90734:90750	3503283	1	True				
ANR	3503610	ParameterType	OnigCodePoint *		3503283	0					
ANR	3503611	Identifier	vs		3503283	1					
ANR	3503612	Parameter	OnigCodePoint v	4077:50:90753:90767	3503283	2	True				
ANR	3503613	ParameterType	OnigCodePoint		3503283	0					
ANR	3503614	Identifier	v		3503283	1					
ANR	3503615	Parameter	int * vs_israw	4078:8:90778:90790	3503283	3	True				
ANR	3503616	ParameterType	int *		3503283	0					
ANR	3503617	Identifier	vs_israw		3503283	1					
ANR	3503618	Parameter	int v_israw	4078:23:90793:90803	3503283	4	True				
ANR	3503619	ParameterType	int		3503283	0					
ANR	3503620	Identifier	v_israw		3503283	1					
ANR	3503621	Parameter	enum CCVALTYPE intype	4079:8:90814:90834	3503283	5	True				
ANR	3503622	ParameterType	enum CCVALTYPE		3503283	0					
ANR	3503623	Identifier	intype		3503283	1					
ANR	3503624	Parameter	enum CCVALTYPE * type	4079:31:90837:90856	3503283	6	True				
ANR	3503625	ParameterType	enum CCVALTYPE *		3503283	0					
ANR	3503626	Identifier	type		3503283	1					
ANR	3503627	Parameter	enum CCSTATE * state	4080:8:90867:90885	3503283	7	True				
ANR	3503628	ParameterType	enum CCSTATE *		3503283	0					
ANR	3503629	Identifier	state		3503283	1					
ANR	3503630	Parameter	ScanEnv * env	4080:29:90888:90899	3503283	8	True				
ANR	3503631	ParameterType	ScanEnv *		3503283	0					
ANR	3503632	Identifier	env		3503283	1					
ANR	3503633	CFGEntryNode	ENTRY		3503283		True				
ANR	3503634	CFGExitNode	EXIT		3503283		True				
ANR	3503635	Symbol	ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE		3503283						
ANR	3503636	Symbol	* cc		3503283						
ANR	3503637	Symbol	v_israw		3503283						
ANR	3503638	Symbol	type		3503283						
ANR	3503639	Symbol	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		3503283						
ANR	3503640	Symbol	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		3503283						
ANR	3503641	Symbol	CCV_SB		3503283						
ANR	3503642	Symbol	* type		3503283						
ANR	3503643	Symbol	ONIGERR_INVALID_CODE_POINT_VALUE		3503283						
ANR	3503644	Symbol	IS_SYNTAX_BV		3503283						
ANR	3503645	Symbol	* vs_israw		3503283						
ANR	3503646	Symbol	state		3503283						
ANR	3503647	Symbol	& cc -> mbuf		3503283						
ANR	3503648	Symbol	cc		3503283						
ANR	3503649	Symbol	* vs		3503283						
ANR	3503650	Symbol	add_code_range		3503283						
ANR	3503651	Symbol	* env		3503283						
ANR	3503652	Symbol	env		3503283						
ANR	3503653	Symbol	vs_israw		3503283						
ANR	3503654	Symbol	intype		3503283						
ANR	3503655	Symbol	env -> syntax		3503283						
ANR	3503656	Symbol	cc -> bs		3503283						
ANR	3503657	Symbol	* state		3503283						
ANR	3503658	Symbol	r		3503283						
ANR	3503659	Symbol	v		3503283						
ANR	3503660	Symbol	CCS_VALUE		3503283						
ANR	3503661	Symbol	CCV_CODE_POINT		3503283						
ANR	3503662	Symbol	CCS_COMPLETE		3503283						
ANR	3503663	Symbol	vs		3503283						
ANR	3503664	Function	code_exist_check	4151:0:92366:92792							
ANR	3503665	FunctionDef	"code_exist_check (OnigCodePoint c , UChar * from , UChar * end , int ignore_escaped , ScanEnv * env)"		3503664	0					
ANR	3503666	CompoundStatement		4154:0:92473:92792	3503664	0					
ANR	3503667	IdentifierDeclStatement	int in_esc ;	4155:2:92477:92487	3503664	0	True				
ANR	3503668	IdentifierDecl	in_esc		3503664	0					
ANR	3503669	IdentifierDeclType	int		3503664	0					
ANR	3503670	Identifier	in_esc		3503664	1					
ANR	3503671	IdentifierDeclStatement	OnigCodePoint code ;	4156:2:92491:92509	3503664	1	True				
ANR	3503672	IdentifierDecl	code		3503664	0					
ANR	3503673	IdentifierDeclType	OnigCodePoint		3503664	0					
ANR	3503674	Identifier	code		3503664	1					
ANR	3503675	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	4157:2:92513:92540	3503664	2	True				
ANR	3503676	IdentifierDecl	enc = env -> enc		3503664	0					
ANR	3503677	IdentifierDeclType	OnigEncoding		3503664	0					
ANR	3503678	Identifier	enc		3503664	1					
ANR	3503679	AssignmentExpression	enc = env -> enc		3503664	2		=			
ANR	3503680	Identifier	enc		3503664	0					
ANR	3503681	PtrMemberAccess	env -> enc		3503664	1					
ANR	3503682	Identifier	env		3503664	0					
ANR	3503683	Identifier	enc		3503664	1					
ANR	3503684	IdentifierDeclStatement	UChar * p = from ;	4158:2:92544:92559	3503664	3	True				
ANR	3503685	IdentifierDecl	* p = from		3503664	0					
ANR	3503686	IdentifierDeclType	UChar *		3503664	0					
ANR	3503687	Identifier	p		3503664	1					
ANR	3503688	AssignmentExpression	* p = from		3503664	2		=			
ANR	3503689	Identifier	from		3503664	0					
ANR	3503690	Identifier	from		3503664	1					
ANR	3503691	ExpressionStatement	in_esc = 0	4160:2:92564:92574	3503664	4	True				
ANR	3503692	AssignmentExpression	in_esc = 0		3503664	0		=			
ANR	3503693	Identifier	in_esc		3503664	0					
ANR	3503694	PrimaryExpression	0		3503664	1					
ANR	3503695	WhileStatement	while ( ! PEND )		3503664	5					
ANR	3503696	Condition	! PEND	4161:9:92585:92590	3503664	0	True				
ANR	3503697	UnaryOperationExpression	! PEND		3503664	0					
ANR	3503698	UnaryOperator	!		3503664	0					
ANR	3503699	Identifier	PEND		3503664	1					
ANR	3503700	CompoundStatement		8:17:119:119	3503664	1					
ANR	3503701	IfStatement	if ( ignore_escaped && in_esc )		3503664	0					
ANR	3503702	Condition	ignore_escaped && in_esc	4162:8:92603:92626	3503664	0	True				
ANR	3503703	AndExpression	ignore_escaped && in_esc		3503664	0		&&			
ANR	3503704	Identifier	ignore_escaped		3503664	0					
ANR	3503705	Identifier	in_esc		3503664	1					
ANR	3503706	CompoundStatement		9:34:155:155	3503664	1					
ANR	3503707	ExpressionStatement	in_esc = 0	4163:6:92637:92647	3503664	0	True				
ANR	3503708	AssignmentExpression	in_esc = 0		3503664	0		=			
ANR	3503709	Identifier	in_esc		3503664	0					
ANR	3503710	PrimaryExpression	0		3503664	1					
ANR	3503711	ElseStatement	else		3503664	0					
ANR	3503712	CompoundStatement		12:9:190:190	3503664	0					
ANR	3503713	ExpressionStatement	PFETCH_S ( code )	4166:6:92672:92686	3503664	0	True				
ANR	3503714	CallExpression	PFETCH_S ( code )		3503664	0					
ANR	3503715	Callee	PFETCH_S		3503664	0					
ANR	3503716	Identifier	PFETCH_S		3503664	0					
ANR	3503717	ArgumentList	code		3503664	1					
ANR	3503718	Argument	code		3503664	0					
ANR	3503719	Identifier	code		3503664	0					
ANR	3503720	IfStatement	if ( code == c )		3503664	1					
ANR	3503721	Condition	code == c	4167:10:92698:92706	3503664	0	True				
ANR	3503722	EqualityExpression	code == c		3503664	0		==			
ANR	3503723	Identifier	code		3503664	0					
ANR	3503724	Identifier	c		3503664	1					
ANR	3503725	ReturnStatement	return 1 ;	4167:21:92709:92717	3503664	1	True				
ANR	3503726	PrimaryExpression	1		3503664	0					
ANR	3503727	IfStatement	if ( code == MC_ESC ( env -> syntax ) )		3503664	2					
ANR	3503728	Condition	code == MC_ESC ( env -> syntax )	4168:10:92729:92755	3503664	0	True				
ANR	3503729	EqualityExpression	code == MC_ESC ( env -> syntax )		3503664	0		==			
ANR	3503730	Identifier	code		3503664	0					
ANR	3503731	CallExpression	MC_ESC ( env -> syntax )		3503664	1					
ANR	3503732	Callee	MC_ESC		3503664	0					
ANR	3503733	Identifier	MC_ESC		3503664	0					
ANR	3503734	ArgumentList	env -> syntax		3503664	1					
ANR	3503735	Argument	env -> syntax		3503664	0					
ANR	3503736	PtrMemberAccess	env -> syntax		3503664	0					
ANR	3503737	Identifier	env		3503664	0					
ANR	3503738	Identifier	syntax		3503664	1					
ANR	3503739	ExpressionStatement	in_esc = 1	4168:39:92758:92768	3503664	1	True				
ANR	3503740	AssignmentExpression	in_esc = 1		3503664	0		=			
ANR	3503741	Identifier	in_esc		3503664	0					
ANR	3503742	PrimaryExpression	1		3503664	1					
ANR	3503743	ReturnStatement	return 0 ;	4171:2:92782:92790	3503664	6	True				
ANR	3503744	PrimaryExpression	0		3503664	0					
ANR	3503745	ReturnType	static int		3503664	1					
ANR	3503746	Identifier	code_exist_check		3503664	2					
ANR	3503747	ParameterList	"OnigCodePoint c , UChar * from , UChar * end , int ignore_escaped , ScanEnv * env"		3503664	3					
ANR	3503748	Parameter	OnigCodePoint c	4152:17:92394:92408	3503664	0	True				
ANR	3503749	ParameterType	OnigCodePoint		3503664	0					
ANR	3503750	Identifier	c		3503664	1					
ANR	3503751	Parameter	UChar * from	4152:34:92411:92421	3503664	1	True				
ANR	3503752	ParameterType	UChar *		3503664	0					
ANR	3503753	Identifier	from		3503664	1					
ANR	3503754	Parameter	UChar * end	4152:47:92424:92433	3503664	2	True				
ANR	3503755	ParameterType	UChar *		3503664	0					
ANR	3503756	Identifier	end		3503664	1					
ANR	3503757	Parameter	int ignore_escaped	4152:59:92436:92453	3503664	3	True				
ANR	3503758	ParameterType	int		3503664	0					
ANR	3503759	Identifier	ignore_escaped		3503664	1					
ANR	3503760	Parameter	ScanEnv * env	4153:3:92459:92470	3503664	4	True				
ANR	3503761	ParameterType	ScanEnv *		3503664	0					
ANR	3503762	Identifier	env		3503664	1					
ANR	3503763	CFGEntryNode	ENTRY		3503664		True				
ANR	3503764	CFGExitNode	EXIT		3503664		True				
ANR	3503765	Symbol	c		3503664						
ANR	3503766	Symbol	code		3503664						
ANR	3503767	Symbol	* env		3503664						
ANR	3503768	Symbol	env -> enc		3503664						
ANR	3503769	Symbol	env		3503664						
ANR	3503770	Symbol	MC_ESC		3503664						
ANR	3503771	Symbol	PEND		3503664						
ANR	3503772	Symbol	env -> syntax		3503664						
ANR	3503773	Symbol	p		3503664						
ANR	3503774	Symbol	ignore_escaped		3503664						
ANR	3503775	Symbol	from		3503664						
ANR	3503776	Symbol	end		3503664						
ANR	3503777	Symbol	enc		3503664						
ANR	3503778	Symbol	in_esc		3503664						
ANR	3503779	Function	parse_char_class	4174:0:92795:100048							
ANR	3503780	FunctionDef	"parse_char_class (Node * * np , OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env)"		3503779	0					
ANR	3503781	CompoundStatement		4177:0:92892:100048	3503779	0					
ANR	3503782	IdentifierDeclStatement	"int r , neg , len , fetched , and_start ;"	4178:2:92896:92931	3503779	0	True				
ANR	3503783	IdentifierDecl	r		3503779	0					
ANR	3503784	IdentifierDeclType	int		3503779	0					
ANR	3503785	Identifier	r		3503779	1					
ANR	3503786	IdentifierDecl	neg		3503779	1					
ANR	3503787	IdentifierDeclType	int		3503779	0					
ANR	3503788	Identifier	neg		3503779	1					
ANR	3503789	IdentifierDecl	len		3503779	2					
ANR	3503790	IdentifierDeclType	int		3503779	0					
ANR	3503791	Identifier	len		3503779	1					
ANR	3503792	IdentifierDecl	fetched		3503779	3					
ANR	3503793	IdentifierDeclType	int		3503779	0					
ANR	3503794	Identifier	fetched		3503779	1					
ANR	3503795	IdentifierDecl	and_start		3503779	4					
ANR	3503796	IdentifierDeclType	int		3503779	0					
ANR	3503797	Identifier	and_start		3503779	1					
ANR	3503798	IdentifierDeclStatement	"OnigCodePoint v , vs ;"	4179:2:92935:92954	3503779	1	True				
ANR	3503799	IdentifierDecl	v		3503779	0					
ANR	3503800	IdentifierDeclType	OnigCodePoint		3503779	0					
ANR	3503801	Identifier	v		3503779	1					
ANR	3503802	IdentifierDecl	vs		3503779	1					
ANR	3503803	IdentifierDeclType	OnigCodePoint		3503779	0					
ANR	3503804	Identifier	vs		3503779	1					
ANR	3503805	IdentifierDeclStatement	UChar * p ;	4180:2:92958:92966	3503779	2	True				
ANR	3503806	IdentifierDecl	* p		3503779	0					
ANR	3503807	IdentifierDeclType	UChar *		3503779	0					
ANR	3503808	Identifier	p		3503779	1					
ANR	3503809	IdentifierDeclStatement	Node * node ;	4181:2:92970:92980	3503779	3	True				
ANR	3503810	IdentifierDecl	* node		3503779	0					
ANR	3503811	IdentifierDeclType	Node *		3503779	0					
ANR	3503812	Identifier	node		3503779	1					
ANR	3503813	IdentifierDeclStatement	"CClassNode * cc , * prev_cc ;"	4182:2:92984:93008	3503779	4	True				
ANR	3503814	IdentifierDecl	* cc		3503779	0					
ANR	3503815	IdentifierDeclType	CClassNode *		3503779	0					
ANR	3503816	Identifier	cc		3503779	1					
ANR	3503817	IdentifierDecl	* prev_cc		3503779	1					
ANR	3503818	IdentifierDeclType	CClassNode *		3503779	0					
ANR	3503819	Identifier	prev_cc		3503779	1					
ANR	3503820	IdentifierDeclStatement	CClassNode work_cc ;	4183:2:93012:93030	3503779	5	True				
ANR	3503821	IdentifierDecl	work_cc		3503779	0					
ANR	3503822	IdentifierDeclType	CClassNode		3503779	0					
ANR	3503823	Identifier	work_cc		3503779	1					
ANR	3503824	IdentifierDeclStatement	enum CCSTATE state ;	4185:2:93035:93053	3503779	6	True				
ANR	3503825	IdentifierDecl	state		3503779	0					
ANR	3503826	IdentifierDeclType	enum CCSTATE		3503779	0					
ANR	3503827	Identifier	state		3503779	1					
ANR	3503828	IdentifierDeclStatement	"enum CCVALTYPE val_type , in_type ;"	4186:2:93057:93089	3503779	7	True				
ANR	3503829	IdentifierDecl	val_type		3503779	0					
ANR	3503830	IdentifierDeclType	enum CCVALTYPE		3503779	0					
ANR	3503831	Identifier	val_type		3503779	1					
ANR	3503832	IdentifierDecl	in_type		3503779	1					
ANR	3503833	IdentifierDeclType	enum CCVALTYPE		3503779	0					
ANR	3503834	Identifier	in_type		3503779	1					
ANR	3503835	IdentifierDeclStatement	"int val_israw , in_israw ;"	4187:2:93093:93116	3503779	8	True				
ANR	3503836	IdentifierDecl	val_israw		3503779	0					
ANR	3503837	IdentifierDeclType	int		3503779	0					
ANR	3503838	Identifier	val_israw		3503779	1					
ANR	3503839	IdentifierDecl	in_israw		3503779	1					
ANR	3503840	IdentifierDeclType	int		3503779	0					
ANR	3503841	Identifier	in_israw		3503779	1					
ANR	3503842	ExpressionStatement	prev_cc = ( CClassNode * ) NULL	4189:2:93121:93149	3503779	9	True				
ANR	3503843	AssignmentExpression	prev_cc = ( CClassNode * ) NULL		3503779	0		=			
ANR	3503844	Identifier	prev_cc		3503779	0					
ANR	3503845	CastExpression	( CClassNode * ) NULL		3503779	1					
ANR	3503846	CastTarget	CClassNode *		3503779	0					
ANR	3503847	Identifier	NULL		3503779	1					
ANR	3503848	ExpressionStatement	* np = NULL_NODE	4190:2:93153:93168	3503779	10	True				
ANR	3503849	AssignmentExpression	* np = NULL_NODE		3503779	0		=			
ANR	3503850	UnaryOperationExpression	* np		3503779	0					
ANR	3503851	UnaryOperator	*		3503779	0					
ANR	3503852	Identifier	np		3503779	1					
ANR	3503853	Identifier	NULL_NODE		3503779	1					
ANR	3503854	ExpressionStatement	"r = fetch_token_in_cc ( tok , src , end , env )"	4191:2:93172:93213	3503779	11	True				
ANR	3503855	AssignmentExpression	"r = fetch_token_in_cc ( tok , src , end , env )"		3503779	0		=			
ANR	3503856	Identifier	r		3503779	0					
ANR	3503857	CallExpression	"fetch_token_in_cc ( tok , src , end , env )"		3503779	1					
ANR	3503858	Callee	fetch_token_in_cc		3503779	0					
ANR	3503859	Identifier	fetch_token_in_cc		3503779	0					
ANR	3503860	ArgumentList	tok		3503779	1					
ANR	3503861	Argument	tok		3503779	0					
ANR	3503862	Identifier	tok		3503779	0					
ANR	3503863	Argument	src		3503779	1					
ANR	3503864	Identifier	src		3503779	0					
ANR	3503865	Argument	end		3503779	2					
ANR	3503866	Identifier	end		3503779	0					
ANR	3503867	Argument	env		3503779	3					
ANR	3503868	Identifier	env		3503779	0					
ANR	3503869	IfStatement	if ( r == TK_CHAR && tok -> u . c == '^' && tok -> escaped == 0 )		3503779	12					
ANR	3503870	Condition	r == TK_CHAR && tok -> u . c == '^' && tok -> escaped == 0	4192:6:93221:93272	3503779	0	True				
ANR	3503871	AndExpression	r == TK_CHAR && tok -> u . c == '^' && tok -> escaped == 0		3503779	0		&&			
ANR	3503872	EqualityExpression	r == TK_CHAR		3503779	0		==			
ANR	3503873	Identifier	r		3503779	0					
ANR	3503874	Identifier	TK_CHAR		3503779	1					
ANR	3503875	AndExpression	tok -> u . c == '^' && tok -> escaped == 0		3503779	1		&&			
ANR	3503876	EqualityExpression	tok -> u . c == '^'		3503779	0		==			
ANR	3503877	MemberAccess	tok -> u . c		3503779	0					
ANR	3503878	PtrMemberAccess	tok -> u		3503779	0					
ANR	3503879	Identifier	tok		3503779	0					
ANR	3503880	Identifier	u		3503779	1					
ANR	3503881	Identifier	c		3503779	1					
ANR	3503882	PrimaryExpression	'^'		3503779	1					
ANR	3503883	EqualityExpression	tok -> escaped == 0		3503779	1		==			
ANR	3503884	PtrMemberAccess	tok -> escaped		3503779	0					
ANR	3503885	Identifier	tok		3503779	0					
ANR	3503886	Identifier	escaped		3503779	1					
ANR	3503887	PrimaryExpression	0		3503779	1					
ANR	3503888	CompoundStatement		16:60:382:382	3503779	1					
ANR	3503889	ExpressionStatement	neg = 1	4193:4:93281:93288	3503779	0	True				
ANR	3503890	AssignmentExpression	neg = 1		3503779	0		=			
ANR	3503891	Identifier	neg		3503779	0					
ANR	3503892	PrimaryExpression	1		3503779	1					
ANR	3503893	ExpressionStatement	"r = fetch_token_in_cc ( tok , src , end , env )"	4194:4:93294:93335	3503779	1	True				
ANR	3503894	AssignmentExpression	"r = fetch_token_in_cc ( tok , src , end , env )"		3503779	0		=			
ANR	3503895	Identifier	r		3503779	0					
ANR	3503896	CallExpression	"fetch_token_in_cc ( tok , src , end , env )"		3503779	1					
ANR	3503897	Callee	fetch_token_in_cc		3503779	0					
ANR	3503898	Identifier	fetch_token_in_cc		3503779	0					
ANR	3503899	ArgumentList	tok		3503779	1					
ANR	3503900	Argument	tok		3503779	0					
ANR	3503901	Identifier	tok		3503779	0					
ANR	3503902	Argument	src		3503779	1					
ANR	3503903	Identifier	src		3503779	0					
ANR	3503904	Argument	end		3503779	2					
ANR	3503905	Identifier	end		3503779	0					
ANR	3503906	Argument	env		3503779	3					
ANR	3503907	Identifier	env		3503779	0					
ANR	3503908	ElseStatement	else		3503779	0					
ANR	3503909	CompoundStatement		20:7:455:455	3503779	0					
ANR	3503910	ExpressionStatement	neg = 0	4197:4:93354:93361	3503779	0	True				
ANR	3503911	AssignmentExpression	neg = 0		3503779	0		=			
ANR	3503912	Identifier	neg		3503779	0					
ANR	3503913	PrimaryExpression	0		3503779	1					
ANR	3503914	IfStatement	if ( r < 0 )		3503779	13					
ANR	3503915	Condition	r < 0	4200:6:93374:93378	3503779	0	True				
ANR	3503916	RelationalExpression	r < 0		3503779	0		<			
ANR	3503917	Identifier	r		3503779	0					
ANR	3503918	PrimaryExpression	0		3503779	1					
ANR	3503919	ReturnStatement	return r ;	4200:13:93381:93389	3503779	1	True				
ANR	3503920	Identifier	r		3503779	0					
ANR	3503921	IfStatement	if ( r == TK_CC_CLOSE )		3503779	14					
ANR	3503922	Condition	r == TK_CC_CLOSE	4201:6:93397:93412	3503779	0	True				
ANR	3503923	EqualityExpression	r == TK_CC_CLOSE		3503779	0		==			
ANR	3503924	Identifier	r		3503779	0					
ANR	3503925	Identifier	TK_CC_CLOSE		3503779	1					
ANR	3503926	CompoundStatement		25:24:522:522	3503779	1					
ANR	3503927	IfStatement	"if ( ! code_exist_check ( ( OnigCodePoint ) ']' , * src , env -> pattern_end , 1 , env ) )"		3503779	0					
ANR	3503928	Condition	"! code_exist_check ( ( OnigCodePoint ) ']' , * src , env -> pattern_end , 1 , env )"	4202:8:93425:93522	3503779	0	True				
ANR	3503929	UnaryOperationExpression	"! code_exist_check ( ( OnigCodePoint ) ']' , * src , env -> pattern_end , 1 , env )"		3503779	0					
ANR	3503930	UnaryOperator	!		3503779	0					
ANR	3503931	CallExpression	"code_exist_check ( ( OnigCodePoint ) ']' , * src , env -> pattern_end , 1 , env )"		3503779	1					
ANR	3503932	Callee	code_exist_check		3503779	0					
ANR	3503933	Identifier	code_exist_check		3503779	0					
ANR	3503934	ArgumentList	( OnigCodePoint ) ']'		3503779	1					
ANR	3503935	Argument	( OnigCodePoint ) ']'		3503779	0					
ANR	3503936	CastExpression	( OnigCodePoint ) ']'		3503779	0					
ANR	3503937	CastTarget	OnigCodePoint		3503779	0					
ANR	3503938	PrimaryExpression	']'		3503779	1					
ANR	3503939	Argument	* src		3503779	1					
ANR	3503940	UnaryOperationExpression	* src		3503779	0					
ANR	3503941	UnaryOperator	*		3503779	0					
ANR	3503942	Identifier	src		3503779	1					
ANR	3503943	Argument	env -> pattern_end		3503779	2					
ANR	3503944	PtrMemberAccess	env -> pattern_end		3503779	0					
ANR	3503945	Identifier	env		3503779	0					
ANR	3503946	Identifier	pattern_end		3503779	1					
ANR	3503947	Argument	1		3503779	3					
ANR	3503948	PrimaryExpression	1		3503779	0					
ANR	3503949	Argument	env		3503779	4					
ANR	3503950	Identifier	env		3503779	0					
ANR	3503951	ReturnStatement	return ONIGERR_EMPTY_CHAR_CLASS ;	4204:6:93531:93562	3503779	1	True				
ANR	3503952	Identifier	ONIGERR_EMPTY_CHAR_CLASS		3503779	0					
ANR	3503953	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""]"" )"	4206:4:93569:93599	3503779	1	True				
ANR	3503954	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""]"" )"		3503779	0					
ANR	3503955	Callee	CC_ESC_WARN		3503779	0					
ANR	3503956	Identifier	CC_ESC_WARN		3503779	0					
ANR	3503957	ArgumentList	env		3503779	1					
ANR	3503958	Argument	env		3503779	0					
ANR	3503959	Identifier	env		3503779	0					
ANR	3503960	Argument	"( UChar * ) ""]"""		3503779	1					
ANR	3503961	CastExpression	"( UChar * ) ""]"""		3503779	0					
ANR	3503962	CastTarget	UChar *		3503779	0					
ANR	3503963	PrimaryExpression	"""]"""		3503779	1					
ANR	3503964	ExpressionStatement	r = tok -> type = TK_CHAR	4207:4:93605:93628	3503779	2	True				
ANR	3503965	AssignmentExpression	r = tok -> type = TK_CHAR		3503779	0		=			
ANR	3503966	Identifier	r		3503779	0					
ANR	3503967	AssignmentExpression	tok -> type = TK_CHAR		3503779	1		=			
ANR	3503968	PtrMemberAccess	tok -> type		3503779	0					
ANR	3503969	Identifier	tok		3503779	0					
ANR	3503970	Identifier	type		3503779	1					
ANR	3503971	Identifier	TK_CHAR		3503779	1					
ANR	3503972	ExpressionStatement	* np = node = node_new_cclass ( )	4210:2:93657:93687	3503779	15	True				
ANR	3503973	AssignmentExpression	* np = node = node_new_cclass ( )		3503779	0		=			
ANR	3503974	UnaryOperationExpression	* np		3503779	0					
ANR	3503975	UnaryOperator	*		3503779	0					
ANR	3503976	Identifier	np		3503779	1					
ANR	3503977	AssignmentExpression	node = node_new_cclass ( )		3503779	1		=			
ANR	3503978	Identifier	node		3503779	0					
ANR	3503979	CallExpression	node_new_cclass ( )		3503779	1					
ANR	3503980	Callee	node_new_cclass		3503779	0					
ANR	3503981	Identifier	node_new_cclass		3503779	0					
ANR	3503982	ArgumentList			3503779	1					
ANR	3503983	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( node )	4211:2:93691:93721	3503779	16	True				
ANR	3503984	CallExpression	CHECK_NULL_RETURN_MEMERR ( node )		3503779	0					
ANR	3503985	Callee	CHECK_NULL_RETURN_MEMERR		3503779	0					
ANR	3503986	Identifier	CHECK_NULL_RETURN_MEMERR		3503779	0					
ANR	3503987	ArgumentList	node		3503779	1					
ANR	3503988	Argument	node		3503779	0					
ANR	3503989	Identifier	node		3503779	0					
ANR	3503990	ExpressionStatement	cc = NCCLASS ( node )	4212:2:93725:93743	3503779	17	True				
ANR	3503991	AssignmentExpression	cc = NCCLASS ( node )		3503779	0		=			
ANR	3503992	Identifier	cc		3503779	0					
ANR	3503993	CallExpression	NCCLASS ( node )		3503779	1					
ANR	3503994	Callee	NCCLASS		3503779	0					
ANR	3503995	Identifier	NCCLASS		3503779	0					
ANR	3503996	ArgumentList	node		3503779	1					
ANR	3503997	Argument	node		3503779	0					
ANR	3503998	Identifier	node		3503779	0					
ANR	3503999	ExpressionStatement	and_start = 0	4214:2:93748:93761	3503779	18	True				
ANR	3504000	AssignmentExpression	and_start = 0		3503779	0		=			
ANR	3504001	Identifier	and_start		3503779	0					
ANR	3504002	PrimaryExpression	0		3503779	1					
ANR	3504003	ExpressionStatement	state = CCS_START	4215:2:93765:93782	3503779	19	True				
ANR	3504004	AssignmentExpression	state = CCS_START		3503779	0		=			
ANR	3504005	Identifier	state		3503779	0					
ANR	3504006	Identifier	CCS_START		3503779	1					
ANR	3504007	ExpressionStatement	p = * src	4216:2:93786:93794	3503779	20	True				
ANR	3504008	AssignmentExpression	p = * src		3503779	0		=			
ANR	3504009	Identifier	p		3503779	0					
ANR	3504010	UnaryOperationExpression	* src		3503779	1					
ANR	3504011	UnaryOperator	*		3503779	0					
ANR	3504012	Identifier	src		3503779	1					
ANR	3504013	WhileStatement	while ( r != TK_CC_CLOSE )		3503779	21					
ANR	3504014	Condition	r != TK_CC_CLOSE	4217:9:93805:93820	3503779	0	True				
ANR	3504015	EqualityExpression	r != TK_CC_CLOSE		3503779	0		!=			
ANR	3504016	Identifier	r		3503779	0					
ANR	3504017	Identifier	TK_CC_CLOSE		3503779	1					
ANR	3504018	CompoundStatement		41:27:930:930	3503779	1					
ANR	3504019	ExpressionStatement	fetched = 0	4218:4:93829:93840	3503779	0	True				
ANR	3504020	AssignmentExpression	fetched = 0		3503779	0		=			
ANR	3504021	Identifier	fetched		3503779	0					
ANR	3504022	PrimaryExpression	0		3503779	1					
ANR	3504023	SwitchStatement	switch ( r )		3503779	1					
ANR	3504024	Condition	r	4219:12:93854:93854	3503779	0	True				
ANR	3504025	Identifier	r		3503779	0					
ANR	3504026	CompoundStatement		43:15:964:964	3503779	1					
ANR	3504027	Label	case TK_CHAR :	4220:4:93863:93875	3503779	0	True				
ANR	3504028	Identifier	TK_CHAR		3503779	0					
ANR	3504029	ExpressionStatement	"len = ONIGENC_CODE_TO_MBCLEN ( env -> enc , tok -> u . c )"	4221:6:93883:93931	3503779	1	True				
ANR	3504030	AssignmentExpression	"len = ONIGENC_CODE_TO_MBCLEN ( env -> enc , tok -> u . c )"		3503779	0		=			
ANR	3504031	Identifier	len		3503779	0					
ANR	3504032	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , tok -> u . c )"		3503779	1					
ANR	3504033	Callee	ONIGENC_CODE_TO_MBCLEN		3503779	0					
ANR	3504034	Identifier	ONIGENC_CODE_TO_MBCLEN		3503779	0					
ANR	3504035	ArgumentList	env -> enc		3503779	1					
ANR	3504036	Argument	env -> enc		3503779	0					
ANR	3504037	PtrMemberAccess	env -> enc		3503779	0					
ANR	3504038	Identifier	env		3503779	0					
ANR	3504039	Identifier	enc		3503779	1					
ANR	3504040	Argument	tok -> u . c		3503779	1					
ANR	3504041	MemberAccess	tok -> u . c		3503779	0					
ANR	3504042	PtrMemberAccess	tok -> u		3503779	0					
ANR	3504043	Identifier	tok		3503779	0					
ANR	3504044	Identifier	u		3503779	1					
ANR	3504045	Identifier	c		3503779	1					
ANR	3504046	IfStatement	if ( len > 1 )		3503779	2					
ANR	3504047	Condition	len > 1	4222:10:93943:93949	3503779	0	True				
ANR	3504048	RelationalExpression	len > 1		3503779	0		>			
ANR	3504049	Identifier	len		3503779	0					
ANR	3504050	PrimaryExpression	1		3503779	1					
ANR	3504051	CompoundStatement		46:19:1059:1059	3503779	1					
ANR	3504052	ExpressionStatement	in_type = CCV_CODE_POINT	4223:1:93955:93979	3503779	0	True				
ANR	3504053	AssignmentExpression	in_type = CCV_CODE_POINT		3503779	0		=			
ANR	3504054	Identifier	in_type		3503779	0					
ANR	3504055	Identifier	CCV_CODE_POINT		3503779	1					
ANR	3504056	ElseStatement	else		3503779	0					
ANR	3504057	IfStatement	if ( len < 0 )		3503779	0					
ANR	3504058	Condition	len < 0	4225:15:94004:94010	3503779	0	True				
ANR	3504059	RelationalExpression	len < 0		3503779	0		<			
ANR	3504060	Identifier	len		3503779	0					
ANR	3504061	PrimaryExpression	0		3503779	1					
ANR	3504062	CompoundStatement		49:24:1120:1120	3503779	1					
ANR	3504063	ExpressionStatement	r = len	4226:1:94016:94023	3503779	0	True				
ANR	3504064	AssignmentExpression	r = len		3503779	0		=			
ANR	3504065	Identifier	r		3503779	0					
ANR	3504066	Identifier	len		3503779	1					
ANR	3504067	GotoStatement	goto err ;	4227:1:94026:94034	3503779	1	True				
ANR	3504068	Identifier	err		3503779	0					
ANR	3504069	ElseStatement	else		3503779	0					
ANR	3504070	CompoundStatement		53:11:1162:1162	3503779	0					
ANR	3504071	Label	sb_char :	4230:6:94063:94070	3503779	0	True				
ANR	3504072	Identifier	sb_char		3503779	0					
ANR	3504073	ExpressionStatement	in_type = CCV_SB	4231:1:94073:94089	3503779	1	True				
ANR	3504074	AssignmentExpression	in_type = CCV_SB		3503779	0		=			
ANR	3504075	Identifier	in_type		3503779	0					
ANR	3504076	Identifier	CCV_SB		3503779	1					
ANR	3504077	ExpressionStatement	v = ( OnigCodePoint ) tok -> u . c	4233:6:94105:94133	3503779	3	True				
ANR	3504078	AssignmentExpression	v = ( OnigCodePoint ) tok -> u . c		3503779	0		=			
ANR	3504079	Identifier	v		3503779	0					
ANR	3504080	CastExpression	( OnigCodePoint ) tok -> u . c		3503779	1					
ANR	3504081	CastTarget	OnigCodePoint		3503779	0					
ANR	3504082	MemberAccess	tok -> u . c		3503779	1					
ANR	3504083	PtrMemberAccess	tok -> u		3503779	0					
ANR	3504084	Identifier	tok		3503779	0					
ANR	3504085	Identifier	u		3503779	1					
ANR	3504086	Identifier	c		3503779	1					
ANR	3504087	ExpressionStatement	in_israw = 0	4234:6:94141:94153	3503779	4	True				
ANR	3504088	AssignmentExpression	in_israw = 0		3503779	0		=			
ANR	3504089	Identifier	in_israw		3503779	0					
ANR	3504090	PrimaryExpression	0		3503779	1					
ANR	3504091	GotoStatement	goto val_entry2 ;	4235:6:94161:94176	3503779	5	True				
ANR	3504092	Identifier	val_entry2		3503779	0					
ANR	3504093	BreakStatement	break ;	4236:6:94184:94189	3503779	6	True				
ANR	3504094	Label	case TK_RAW_BYTE :	4238:4:94196:94212	3503779	7	True				
ANR	3504095	Identifier	TK_RAW_BYTE		3503779	0					
ANR	3504096	IfStatement	if ( ! ONIGENC_IS_SINGLEBYTE ( env -> enc ) && tok -> base != 0 )		3503779	8					
ANR	3504097	Condition	! ONIGENC_IS_SINGLEBYTE ( env -> enc ) && tok -> base != 0	4240:10:94271:94321	3503779	0	True				
ANR	3504098	AndExpression	! ONIGENC_IS_SINGLEBYTE ( env -> enc ) && tok -> base != 0		3503779	0		&&			
ANR	3504099	UnaryOperationExpression	! ONIGENC_IS_SINGLEBYTE ( env -> enc )		3503779	0					
ANR	3504100	UnaryOperator	!		3503779	0					
ANR	3504101	CallExpression	ONIGENC_IS_SINGLEBYTE ( env -> enc )		3503779	1					
ANR	3504102	Callee	ONIGENC_IS_SINGLEBYTE		3503779	0					
ANR	3504103	Identifier	ONIGENC_IS_SINGLEBYTE		3503779	0					
ANR	3504104	ArgumentList	env -> enc		3503779	1					
ANR	3504105	Argument	env -> enc		3503779	0					
ANR	3504106	PtrMemberAccess	env -> enc		3503779	0					
ANR	3504107	Identifier	env		3503779	0					
ANR	3504108	Identifier	enc		3503779	1					
ANR	3504109	EqualityExpression	tok -> base != 0		3503779	1		!=			
ANR	3504110	PtrMemberAccess	tok -> base		3503779	0					
ANR	3504111	Identifier	tok		3503779	0					
ANR	3504112	Identifier	base		3503779	1					
ANR	3504113	PrimaryExpression	0		3503779	1					
ANR	3504114	CompoundStatement		68:1:1542:1565	3503779	1					
ANR	3504115	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	4241:1:94327:94364	3503779	0	True				
ANR	3504116	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		3503779	0					
ANR	3504117	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		3503779	0					
ANR	3504118	Identifier	buf		3503779	1					
ANR	3504119	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		3503779	2					
ANR	3504120	IdentifierDeclStatement	UChar * bufe = buf + ONIGENC_CODE_TO_MBC_MAXLEN ;	4242:1:94367:94413	3503779	1	True				
ANR	3504121	IdentifierDecl	* bufe = buf + ONIGENC_CODE_TO_MBC_MAXLEN		3503779	0					
ANR	3504122	IdentifierDeclType	UChar *		3503779	0					
ANR	3504123	Identifier	bufe		3503779	1					
ANR	3504124	AssignmentExpression	* bufe = buf + ONIGENC_CODE_TO_MBC_MAXLEN		3503779	2		=			
ANR	3504125	Identifier	bufe		3503779	0					
ANR	3504126	AdditiveExpression	buf + ONIGENC_CODE_TO_MBC_MAXLEN		3503779	1		+			
ANR	3504127	Identifier	buf		3503779	0					
ANR	3504128	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		3503779	1					
ANR	3504129	IdentifierDeclStatement	UChar * psave = p ;	4243:1:94416:94432	3503779	2	True				
ANR	3504130	IdentifierDecl	* psave = p		3503779	0					
ANR	3504131	IdentifierDeclType	UChar *		3503779	0					
ANR	3504132	Identifier	psave		3503779	1					
ANR	3504133	AssignmentExpression	* psave = p		3503779	2		=			
ANR	3504134	Identifier	p		3503779	0					
ANR	3504135	Identifier	p		3503779	1					
ANR	3504136	IdentifierDeclStatement	"int i , base = tok -> base ;"	4244:1:94435:94458	3503779	3	True				
ANR	3504137	IdentifierDecl	i		3503779	0					
ANR	3504138	IdentifierDeclType	int		3503779	0					
ANR	3504139	Identifier	i		3503779	1					
ANR	3504140	IdentifierDecl	base = tok -> base		3503779	1					
ANR	3504141	IdentifierDeclType	int		3503779	0					
ANR	3504142	Identifier	base		3503779	1					
ANR	3504143	AssignmentExpression	base = tok -> base		3503779	2		=			
ANR	3504144	Identifier	base		3503779	0					
ANR	3504145	PtrMemberAccess	tok -> base		3503779	1					
ANR	3504146	Identifier	tok		3503779	0					
ANR	3504147	Identifier	base		3503779	1					
ANR	3504148	ExpressionStatement	buf [ 0 ] = tok -> u . c	4246:1:94462:94479	3503779	4	True				
ANR	3504149	AssignmentExpression	buf [ 0 ] = tok -> u . c		3503779	0		=			
ANR	3504150	ArrayIndexing	buf [ 0 ]		3503779	0					
ANR	3504151	Identifier	buf		3503779	0					
ANR	3504152	PrimaryExpression	0		3503779	1					
ANR	3504153	MemberAccess	tok -> u . c		3503779	1					
ANR	3504154	PtrMemberAccess	tok -> u		3503779	0					
ANR	3504155	Identifier	tok		3503779	0					
ANR	3504156	Identifier	u		3503779	1					
ANR	3504157	Identifier	c		3503779	1					
ANR	3504158	ForStatement	for ( i = 1 ; i < ONIGENC_MBC_MAXLEN ( env -> enc ) ; i ++ )		3503779	5					
ANR	3504159	ForInit	i = 1 ;	4247:6:94487:94492	3503779	0	True				
ANR	3504160	AssignmentExpression	i = 1		3503779	0		=			
ANR	3504161	Identifier	i		3503779	0					
ANR	3504162	PrimaryExpression	1		3503779	1					
ANR	3504163	Condition	i < ONIGENC_MBC_MAXLEN ( env -> enc )	4247:13:94494:94525	3503779	1	True				
ANR	3504164	RelationalExpression	i < ONIGENC_MBC_MAXLEN ( env -> enc )		3503779	0		<			
ANR	3504165	Identifier	i		3503779	0					
ANR	3504166	CallExpression	ONIGENC_MBC_MAXLEN ( env -> enc )		3503779	1					
ANR	3504167	Callee	ONIGENC_MBC_MAXLEN		3503779	0					
ANR	3504168	Identifier	ONIGENC_MBC_MAXLEN		3503779	0					
ANR	3504169	ArgumentList	env -> enc		3503779	1					
ANR	3504170	Argument	env -> enc		3503779	0					
ANR	3504171	PtrMemberAccess	env -> enc		3503779	0					
ANR	3504172	Identifier	env		3503779	0					
ANR	3504173	Identifier	enc		3503779	1					
ANR	3504174	PostIncDecOperationExpression	i ++	4247:47:94528:94530	3503779	2	True				
ANR	3504175	Identifier	i		3503779	0					
ANR	3504176	IncDec	++		3503779	1					
ANR	3504177	CompoundStatement		71:52:1640:1640	3503779	3					
ANR	3504178	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4248:3:94538:94578	3503779	0	True				
ANR	3504179	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		3503779	0		=			
ANR	3504180	Identifier	r		3503779	0					
ANR	3504181	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		3503779	1					
ANR	3504182	Callee	fetch_token_in_cc		3503779	0					
ANR	3504183	Identifier	fetch_token_in_cc		3503779	0					
ANR	3504184	ArgumentList	tok		3503779	1					
ANR	3504185	Argument	tok		3503779	0					
ANR	3504186	Identifier	tok		3503779	0					
ANR	3504187	Argument	& p		3503779	1					
ANR	3504188	UnaryOperationExpression	& p		3503779	0					
ANR	3504189	UnaryOperator	&		3503779	0					
ANR	3504190	Identifier	p		3503779	1					
ANR	3504191	Argument	end		3503779	2					
ANR	3504192	Identifier	end		3503779	0					
ANR	3504193	Argument	env		3503779	3					
ANR	3504194	Identifier	env		3503779	0					
ANR	3504195	IfStatement	if ( r < 0 )		3503779	1					
ANR	3504196	Condition	r < 0	4249:7:94587:94591	3503779	0	True				
ANR	3504197	RelationalExpression	r < 0		3503779	0		<			
ANR	3504198	Identifier	r		3503779	0					
ANR	3504199	PrimaryExpression	0		3503779	1					
ANR	3504200	GotoStatement	goto err ;	4249:14:94594:94602	3503779	1	True				
ANR	3504201	Identifier	err		3503779	0					
ANR	3504202	IfStatement	if ( r != TK_RAW_BYTE || tok -> base != base )		3503779	2					
ANR	3504203	Condition	r != TK_RAW_BYTE || tok -> base != base	4250:7:94611:94647	3503779	0	True				
ANR	3504204	OrExpression	r != TK_RAW_BYTE || tok -> base != base		3503779	0		||			
ANR	3504205	EqualityExpression	r != TK_RAW_BYTE		3503779	0		!=			
ANR	3504206	Identifier	r		3503779	0					
ANR	3504207	Identifier	TK_RAW_BYTE		3503779	1					
ANR	3504208	EqualityExpression	tok -> base != base		3503779	1		!=			
ANR	3504209	PtrMemberAccess	tok -> base		3503779	0					
ANR	3504210	Identifier	tok		3503779	0					
ANR	3504211	Identifier	base		3503779	1					
ANR	3504212	Identifier	base		3503779	1					
ANR	3504213	CompoundStatement		74:46:1757:1757	3503779	1					
ANR	3504214	ExpressionStatement	fetched = 1	4251:5:94657:94668	3503779	0	True				
ANR	3504215	AssignmentExpression	fetched = 1		3503779	0		=			
ANR	3504216	Identifier	fetched		3503779	0					
ANR	3504217	PrimaryExpression	1		3503779	1					
ANR	3504218	BreakStatement	break ;	4252:5:94675:94680	3503779	1	True				
ANR	3504219	ExpressionStatement	buf [ i ] = tok -> u . c	4254:3:94690:94707	3503779	3	True				
ANR	3504220	AssignmentExpression	buf [ i ] = tok -> u . c		3503779	0		=			
ANR	3504221	ArrayIndexing	buf [ i ]		3503779	0					
ANR	3504222	Identifier	buf		3503779	0					
ANR	3504223	Identifier	i		3503779	1					
ANR	3504224	MemberAccess	tok -> u . c		3503779	1					
ANR	3504225	PtrMemberAccess	tok -> u		3503779	0					
ANR	3504226	Identifier	tok		3503779	0					
ANR	3504227	Identifier	u		3503779	1					
ANR	3504228	Identifier	c		3503779	1					
ANR	3504229	IfStatement	if ( i < ONIGENC_MBC_MINLEN ( env -> enc ) )		3503779	6					
ANR	3504230	Condition	i < ONIGENC_MBC_MINLEN ( env -> enc )	4257:5:94718:94749	3503779	0	True				
ANR	3504231	RelationalExpression	i < ONIGENC_MBC_MINLEN ( env -> enc )		3503779	0		<			
ANR	3504232	Identifier	i		3503779	0					
ANR	3504233	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		3503779	1					
ANR	3504234	Callee	ONIGENC_MBC_MINLEN		3503779	0					
ANR	3504235	Identifier	ONIGENC_MBC_MINLEN		3503779	0					
ANR	3504236	ArgumentList	env -> enc		3503779	1					
ANR	3504237	Argument	env -> enc		3503779	0					
ANR	3504238	PtrMemberAccess	env -> enc		3503779	0					
ANR	3504239	Identifier	env		3503779	0					
ANR	3504240	Identifier	enc		3503779	1					
ANR	3504241	CompoundStatement		81:39:1859:1859	3503779	1					
ANR	3504242	ExpressionStatement	r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING	4258:3:94757:94796	3503779	0	True				
ANR	3504243	AssignmentExpression	r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		3503779	0		=			
ANR	3504244	Identifier	r		3503779	0					
ANR	3504245	Identifier	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		3503779	1					
ANR	3504246	GotoStatement	goto err ;	4259:3:94801:94809	3503779	1	True				
ANR	3504247	Identifier	err		3503779	0					
ANR	3504248	ExpressionStatement	"len = enclen ( env -> enc , buf )"	4262:1:94816:94843	3503779	7	True				
ANR	3504249	AssignmentExpression	"len = enclen ( env -> enc , buf )"		3503779	0		=			
ANR	3504250	Identifier	len		3503779	0					
ANR	3504251	CallExpression	"enclen ( env -> enc , buf )"		3503779	1					
ANR	3504252	Callee	enclen		3503779	0					
ANR	3504253	Identifier	enclen		3503779	0					
ANR	3504254	ArgumentList	env -> enc		3503779	1					
ANR	3504255	Argument	env -> enc		3503779	0					
ANR	3504256	PtrMemberAccess	env -> enc		3503779	0					
ANR	3504257	Identifier	env		3503779	0					
ANR	3504258	Identifier	enc		3503779	1					
ANR	3504259	Argument	buf		3503779	1					
ANR	3504260	Identifier	buf		3503779	0					
ANR	3504261	IfStatement	if ( i < len )		3503779	8					
ANR	3504262	Condition	i < len	4263:5:94850:94856	3503779	0	True				
ANR	3504263	RelationalExpression	i < len		3503779	0		<			
ANR	3504264	Identifier	i		3503779	0					
ANR	3504265	Identifier	len		3503779	1					
ANR	3504266	CompoundStatement		87:14:1966:1966	3503779	1					
ANR	3504267	ExpressionStatement	r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING	4264:3:94864:94903	3503779	0	True				
ANR	3504268	AssignmentExpression	r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		3503779	0		=			
ANR	3504269	Identifier	r		3503779	0					
ANR	3504270	Identifier	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		3503779	1					
ANR	3504271	GotoStatement	goto err ;	4265:3:94908:94916	3503779	1	True				
ANR	3504272	Identifier	err		3503779	0					
ANR	3504273	ElseStatement	else		3503779	0					
ANR	3504274	IfStatement	if ( i > len )		3503779	0					
ANR	3504275	Condition	i > len	4267:10:94931:94937	3503779	0	True				
ANR	3504276	RelationalExpression	i > len		3503779	0		>			
ANR	3504277	Identifier	i		3503779	0					
ANR	3504278	Identifier	len		3503779	1					
ANR	3504279	CompoundStatement		91:19:2047:2047	3503779	1					
ANR	3504280	ExpressionStatement	p = psave	4268:3:94962:94971	3503779	0	True				
ANR	3504281	AssignmentExpression	p = psave		3503779	0		=			
ANR	3504282	Identifier	p		3503779	0					
ANR	3504283	Identifier	psave		3503779	1					
ANR	3504284	ForStatement	for ( i = 1 ; i < len ; i ++ )		3503779	1					
ANR	3504285	ForInit	i = 1 ;	4269:8:94981:94986	3503779	0	True				
ANR	3504286	AssignmentExpression	i = 1		3503779	0		=			
ANR	3504287	Identifier	i		3503779	0					
ANR	3504288	PrimaryExpression	1		3503779	1					
ANR	3504289	Condition	i < len	4269:15:94988:94994	3503779	1	True				
ANR	3504290	RelationalExpression	i < len		3503779	0		<			
ANR	3504291	Identifier	i		3503779	0					
ANR	3504292	Identifier	len		3503779	1					
ANR	3504293	PostIncDecOperationExpression	i ++	4269:24:94997:94999	3503779	2	True				
ANR	3504294	Identifier	i		3503779	0					
ANR	3504295	IncDec	++		3503779	1					
ANR	3504296	CompoundStatement		93:29:2109:2109	3503779	3					
ANR	3504297	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4270:5:95009:95049	3503779	0	True				
ANR	3504298	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		3503779	0		=			
ANR	3504299	Identifier	r		3503779	0					
ANR	3504300	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		3503779	1					
ANR	3504301	Callee	fetch_token_in_cc		3503779	0					
ANR	3504302	Identifier	fetch_token_in_cc		3503779	0					
ANR	3504303	ArgumentList	tok		3503779	1					
ANR	3504304	Argument	tok		3503779	0					
ANR	3504305	Identifier	tok		3503779	0					
ANR	3504306	Argument	& p		3503779	1					
ANR	3504307	UnaryOperationExpression	& p		3503779	0					
ANR	3504308	UnaryOperator	&		3503779	0					
ANR	3504309	Identifier	p		3503779	1					
ANR	3504310	Argument	end		3503779	2					
ANR	3504311	Identifier	end		3503779	0					
ANR	3504312	Argument	env		3503779	3					
ANR	3504313	Identifier	env		3503779	0					
ANR	3504314	ExpressionStatement	fetched = 0	4272:3:95059:95070	3503779	2	True				
ANR	3504315	AssignmentExpression	fetched = 0		3503779	0		=			
ANR	3504316	Identifier	fetched		3503779	0					
ANR	3504317	PrimaryExpression	0		3503779	1					
ANR	3504318	IfStatement	if ( i == 1 )		3503779	9					
ANR	3504319	Condition	i == 1	4275:5:95081:95086	3503779	0	True				
ANR	3504320	EqualityExpression	i == 1		3503779	0		==			
ANR	3504321	Identifier	i		3503779	0					
ANR	3504322	PrimaryExpression	1		3503779	1					
ANR	3504323	CompoundStatement		99:13:2196:2196	3503779	1					
ANR	3504324	ExpressionStatement	v = ( OnigCodePoint ) buf [ 0 ]	4276:3:95094:95120	3503779	0	True				
ANR	3504325	AssignmentExpression	v = ( OnigCodePoint ) buf [ 0 ]		3503779	0		=			
ANR	3504326	Identifier	v		3503779	0					
ANR	3504327	CastExpression	( OnigCodePoint ) buf [ 0 ]		3503779	1					
ANR	3504328	CastTarget	OnigCodePoint		3503779	0					
ANR	3504329	ArrayIndexing	buf [ 0 ]		3503779	1					
ANR	3504330	Identifier	buf		3503779	0					
ANR	3504331	PrimaryExpression	0		3503779	1					
ANR	3504332	GotoStatement	goto raw_single ;	4277:3:95125:95140	3503779	1	True				
ANR	3504333	Identifier	raw_single		3503779	0					
ANR	3504334	ElseStatement	else		3503779	0					
ANR	3504335	CompoundStatement		103:6:2258:2258	3503779	0					
ANR	3504336	ExpressionStatement	"v = ONIGENC_MBC_TO_CODE ( env -> enc , buf , bufe )"	4280:3:95156:95200	3503779	0	True				
ANR	3504337	AssignmentExpression	"v = ONIGENC_MBC_TO_CODE ( env -> enc , buf , bufe )"		3503779	0		=			
ANR	3504338	Identifier	v		3503779	0					
ANR	3504339	CallExpression	"ONIGENC_MBC_TO_CODE ( env -> enc , buf , bufe )"		3503779	1					
ANR	3504340	Callee	ONIGENC_MBC_TO_CODE		3503779	0					
ANR	3504341	Identifier	ONIGENC_MBC_TO_CODE		3503779	0					
ANR	3504342	ArgumentList	env -> enc		3503779	1					
ANR	3504343	Argument	env -> enc		3503779	0					
ANR	3504344	PtrMemberAccess	env -> enc		3503779	0					
ANR	3504345	Identifier	env		3503779	0					
ANR	3504346	Identifier	enc		3503779	1					
ANR	3504347	Argument	buf		3503779	1					
ANR	3504348	Identifier	buf		3503779	0					
ANR	3504349	Argument	bufe		3503779	2					
ANR	3504350	Identifier	bufe		3503779	0					
ANR	3504351	ExpressionStatement	in_type = CCV_CODE_POINT	4281:3:95205:95229	3503779	1	True				
ANR	3504352	AssignmentExpression	in_type = CCV_CODE_POINT		3503779	0		=			
ANR	3504353	Identifier	in_type		3503779	0					
ANR	3504354	Identifier	CCV_CODE_POINT		3503779	1					
ANR	3504355	ElseStatement	else		3503779	0					
ANR	3504356	CompoundStatement		108:11:2360:2360	3503779	0					
ANR	3504357	ExpressionStatement	v = ( OnigCodePoint ) tok -> u . c	4285:1:95256:95284	3503779	0	True				
ANR	3504358	AssignmentExpression	v = ( OnigCodePoint ) tok -> u . c		3503779	0		=			
ANR	3504359	Identifier	v		3503779	0					
ANR	3504360	CastExpression	( OnigCodePoint ) tok -> u . c		3503779	1					
ANR	3504361	CastTarget	OnigCodePoint		3503779	0					
ANR	3504362	MemberAccess	tok -> u . c		3503779	1					
ANR	3504363	PtrMemberAccess	tok -> u		3503779	0					
ANR	3504364	Identifier	tok		3503779	0					
ANR	3504365	Identifier	u		3503779	1					
ANR	3504366	Identifier	c		3503779	1					
ANR	3504367	Label	raw_single :	4286:6:95292:95302	3503779	1	True				
ANR	3504368	Identifier	raw_single		3503779	0					
ANR	3504369	ExpressionStatement	in_type = CCV_SB	4287:1:95305:95321	3503779	2	True				
ANR	3504370	AssignmentExpression	in_type = CCV_SB		3503779	0		=			
ANR	3504371	Identifier	in_type		3503779	0					
ANR	3504372	Identifier	CCV_SB		3503779	1					
ANR	3504373	ExpressionStatement	in_israw = 1	4289:6:95337:95349	3503779	9	True				
ANR	3504374	AssignmentExpression	in_israw = 1		3503779	0		=			
ANR	3504375	Identifier	in_israw		3503779	0					
ANR	3504376	PrimaryExpression	1		3503779	1					
ANR	3504377	GotoStatement	goto val_entry2 ;	4290:6:95357:95372	3503779	10	True				
ANR	3504378	Identifier	val_entry2		3503779	0					
ANR	3504379	BreakStatement	break ;	4291:6:95380:95385	3503779	11	True				
ANR	3504380	Label	case TK_CODE_POINT :	4293:4:95392:95410	3503779	12	True				
ANR	3504381	Identifier	TK_CODE_POINT		3503779	0					
ANR	3504382	ExpressionStatement	v = tok -> u . code	4294:6:95418:95433	3503779	13	True				
ANR	3504383	AssignmentExpression	v = tok -> u . code		3503779	0		=			
ANR	3504384	Identifier	v		3503779	0					
ANR	3504385	MemberAccess	tok -> u . code		3503779	1					
ANR	3504386	PtrMemberAccess	tok -> u		3503779	0					
ANR	3504387	Identifier	tok		3503779	0					
ANR	3504388	Identifier	u		3503779	1					
ANR	3504389	Identifier	code		3503779	1					
ANR	3504390	ExpressionStatement	in_israw = 1	4295:6:95441:95453	3503779	14	True				
ANR	3504391	AssignmentExpression	in_israw = 1		3503779	0		=			
ANR	3504392	Identifier	in_israw		3503779	0					
ANR	3504393	PrimaryExpression	1		3503779	1					
ANR	3504394	Label	val_entry :	4296:4:95459:95468	3503779	15	True				
ANR	3504395	Identifier	val_entry		3503779	0					
ANR	3504396	ExpressionStatement	"len = ONIGENC_CODE_TO_MBCLEN ( env -> enc , v )"	4297:6:95476:95517	3503779	16	True				
ANR	3504397	AssignmentExpression	"len = ONIGENC_CODE_TO_MBCLEN ( env -> enc , v )"		3503779	0		=			
ANR	3504398	Identifier	len		3503779	0					
ANR	3504399	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , v )"		3503779	1					
ANR	3504400	Callee	ONIGENC_CODE_TO_MBCLEN		3503779	0					
ANR	3504401	Identifier	ONIGENC_CODE_TO_MBCLEN		3503779	0					
ANR	3504402	ArgumentList	env -> enc		3503779	1					
ANR	3504403	Argument	env -> enc		3503779	0					
ANR	3504404	PtrMemberAccess	env -> enc		3503779	0					
ANR	3504405	Identifier	env		3503779	0					
ANR	3504406	Identifier	enc		3503779	1					
ANR	3504407	Argument	v		3503779	1					
ANR	3504408	Identifier	v		3503779	0					
ANR	3504409	IfStatement	if ( len < 0 )		3503779	17					
ANR	3504410	Condition	len < 0	4298:10:95529:95535	3503779	0	True				
ANR	3504411	RelationalExpression	len < 0		3503779	0		<			
ANR	3504412	Identifier	len		3503779	0					
ANR	3504413	PrimaryExpression	0		3503779	1					
ANR	3504414	CompoundStatement		122:19:2645:2645	3503779	1					
ANR	3504415	ExpressionStatement	r = len	4299:1:95541:95548	3503779	0	True				
ANR	3504416	AssignmentExpression	r = len		3503779	0		=			
ANR	3504417	Identifier	r		3503779	0					
ANR	3504418	Identifier	len		3503779	1					
ANR	3504419	GotoStatement	goto err ;	4300:1:95551:95559	3503779	1	True				
ANR	3504420	Identifier	err		3503779	0					
ANR	3504421	ExpressionStatement	in_type = ( len == 1 ? CCV_SB : CCV_CODE_POINT )	4302:6:95575:95621	3503779	18	True				
ANR	3504422	AssignmentExpression	in_type = ( len == 1 ? CCV_SB : CCV_CODE_POINT )		3503779	0		=			
ANR	3504423	Identifier	in_type		3503779	0					
ANR	3504424	ConditionalExpression	len == 1 ? CCV_SB : CCV_CODE_POINT		3503779	1					
ANR	3504425	Condition	len == 1		3503779	0					
ANR	3504426	EqualityExpression	len == 1		3503779	0		==			
ANR	3504427	Identifier	len		3503779	0					
ANR	3504428	PrimaryExpression	1		3503779	1					
ANR	3504429	Identifier	CCV_SB		3503779	1					
ANR	3504430	Identifier	CCV_CODE_POINT		3503779	2					
ANR	3504431	Label	val_entry2 :	4303:4:95627:95637	3503779	19	True				
ANR	3504432	Identifier	val_entry2		3503779	0					
ANR	3504433	ExpressionStatement	"r = next_state_val ( cc , & vs , v , & val_israw , in_israw , in_type , & val_type , & state , env )"	4304:6:95645:95734	3503779	20	True				
ANR	3504434	AssignmentExpression	"r = next_state_val ( cc , & vs , v , & val_israw , in_israw , in_type , & val_type , & state , env )"		3503779	0		=			
ANR	3504435	Identifier	r		3503779	0					
ANR	3504436	CallExpression	"next_state_val ( cc , & vs , v , & val_israw , in_israw , in_type , & val_type , & state , env )"		3503779	1					
ANR	3504437	Callee	next_state_val		3503779	0					
ANR	3504438	Identifier	next_state_val		3503779	0					
ANR	3504439	ArgumentList	cc		3503779	1					
ANR	3504440	Argument	cc		3503779	0					
ANR	3504441	Identifier	cc		3503779	0					
ANR	3504442	Argument	& vs		3503779	1					
ANR	3504443	UnaryOperationExpression	& vs		3503779	0					
ANR	3504444	UnaryOperator	&		3503779	0					
ANR	3504445	Identifier	vs		3503779	1					
ANR	3504446	Argument	v		3503779	2					
ANR	3504447	Identifier	v		3503779	0					
ANR	3504448	Argument	& val_israw		3503779	3					
ANR	3504449	UnaryOperationExpression	& val_israw		3503779	0					
ANR	3504450	UnaryOperator	&		3503779	0					
ANR	3504451	Identifier	val_israw		3503779	1					
ANR	3504452	Argument	in_israw		3503779	4					
ANR	3504453	Identifier	in_israw		3503779	0					
ANR	3504454	Argument	in_type		3503779	5					
ANR	3504455	Identifier	in_type		3503779	0					
ANR	3504456	Argument	& val_type		3503779	6					
ANR	3504457	UnaryOperationExpression	& val_type		3503779	0					
ANR	3504458	UnaryOperator	&		3503779	0					
ANR	3504459	Identifier	val_type		3503779	1					
ANR	3504460	Argument	& state		3503779	7					
ANR	3504461	UnaryOperationExpression	& state		3503779	0					
ANR	3504462	UnaryOperator	&		3503779	0					
ANR	3504463	Identifier	state		3503779	1					
ANR	3504464	Argument	env		3503779	8					
ANR	3504465	Identifier	env		3503779	0					
ANR	3504466	IfStatement	if ( r != 0 )		3503779	21					
ANR	3504467	Condition	r != 0	4306:10:95746:95751	3503779	0	True				
ANR	3504468	EqualityExpression	r != 0		3503779	0		!=			
ANR	3504469	Identifier	r		3503779	0					
ANR	3504470	PrimaryExpression	0		3503779	1					
ANR	3504471	GotoStatement	goto err ;	4306:18:95754:95762	3503779	1	True				
ANR	3504472	Identifier	err		3503779	0					
ANR	3504473	BreakStatement	break ;	4307:6:95770:95775	3503779	22	True				
ANR	3504474	Label	case TK_POSIX_BRACKET_OPEN :	4309:4:95782:95808	3503779	23	True				
ANR	3504475	Identifier	TK_POSIX_BRACKET_OPEN		3503779	0					
ANR	3504476	ExpressionStatement	"r = parse_posix_bracket ( cc , & p , end , env )"	4310:6:95816:95857	3503779	24	True				
ANR	3504477	AssignmentExpression	"r = parse_posix_bracket ( cc , & p , end , env )"		3503779	0		=			
ANR	3504478	Identifier	r		3503779	0					
ANR	3504479	CallExpression	"parse_posix_bracket ( cc , & p , end , env )"		3503779	1					
ANR	3504480	Callee	parse_posix_bracket		3503779	0					
ANR	3504481	Identifier	parse_posix_bracket		3503779	0					
ANR	3504482	ArgumentList	cc		3503779	1					
ANR	3504483	Argument	cc		3503779	0					
ANR	3504484	Identifier	cc		3503779	0					
ANR	3504485	Argument	& p		3503779	1					
ANR	3504486	UnaryOperationExpression	& p		3503779	0					
ANR	3504487	UnaryOperator	&		3503779	0					
ANR	3504488	Identifier	p		3503779	1					
ANR	3504489	Argument	end		3503779	2					
ANR	3504490	Identifier	end		3503779	0					
ANR	3504491	Argument	env		3503779	3					
ANR	3504492	Identifier	env		3503779	0					
ANR	3504493	IfStatement	if ( r < 0 )		3503779	25					
ANR	3504494	Condition	r < 0	4311:10:95869:95873	3503779	0	True				
ANR	3504495	RelationalExpression	r < 0		3503779	0		<			
ANR	3504496	Identifier	r		3503779	0					
ANR	3504497	PrimaryExpression	0		3503779	1					
ANR	3504498	GotoStatement	goto err ;	4311:17:95876:95884	3503779	1	True				
ANR	3504499	Identifier	err		3503779	0					
ANR	3504500	IfStatement	if ( r == 1 )		3503779	26					
ANR	3504501	Condition	r == 1	4312:10:95896:95901	3503779	0	True				
ANR	3504502	EqualityExpression	r == 1		3503779	0		==			
ANR	3504503	Identifier	r		3503779	0					
ANR	3504504	PrimaryExpression	1		3503779	1					
ANR	3504505	CompoundStatement		136:18:3011:3011	3503779	1					
ANR	3504506	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""["" )"	4313:1:95935:95965	3503779	0	True				
ANR	3504507	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""["" )"		3503779	0					
ANR	3504508	Callee	CC_ESC_WARN		3503779	0					
ANR	3504509	Identifier	CC_ESC_WARN		3503779	0					
ANR	3504510	ArgumentList	env		3503779	1					
ANR	3504511	Argument	env		3503779	0					
ANR	3504512	Identifier	env		3503779	0					
ANR	3504513	Argument	"( UChar * ) ""["""		3503779	1					
ANR	3504514	CastExpression	"( UChar * ) ""["""		3503779	0					
ANR	3504515	CastTarget	UChar *		3503779	0					
ANR	3504516	PrimaryExpression	"""["""		3503779	1					
ANR	3504517	ExpressionStatement	p = tok -> backp	4314:1:95968:95982	3503779	1	True				
ANR	3504518	AssignmentExpression	p = tok -> backp		3503779	0		=			
ANR	3504519	Identifier	p		3503779	0					
ANR	3504520	PtrMemberAccess	tok -> backp		3503779	1					
ANR	3504521	Identifier	tok		3503779	0					
ANR	3504522	Identifier	backp		3503779	1					
ANR	3504523	ExpressionStatement	v = ( OnigCodePoint ) tok -> u . c	4315:1:95985:96013	3503779	2	True				
ANR	3504524	AssignmentExpression	v = ( OnigCodePoint ) tok -> u . c		3503779	0		=			
ANR	3504525	Identifier	v		3503779	0					
ANR	3504526	CastExpression	( OnigCodePoint ) tok -> u . c		3503779	1					
ANR	3504527	CastTarget	OnigCodePoint		3503779	0					
ANR	3504528	MemberAccess	tok -> u . c		3503779	1					
ANR	3504529	PtrMemberAccess	tok -> u		3503779	0					
ANR	3504530	Identifier	tok		3503779	0					
ANR	3504531	Identifier	u		3503779	1					
ANR	3504532	Identifier	c		3503779	1					
ANR	3504533	ExpressionStatement	in_israw = 0	4316:1:96016:96028	3503779	3	True				
ANR	3504534	AssignmentExpression	in_israw = 0		3503779	0		=			
ANR	3504535	Identifier	in_israw		3503779	0					
ANR	3504536	PrimaryExpression	0		3503779	1					
ANR	3504537	GotoStatement	goto val_entry ;	4317:1:96031:96045	3503779	4	True				
ANR	3504538	Identifier	val_entry		3503779	0					
ANR	3504539	GotoStatement	goto next_class ;	4319:6:96061:96076	3503779	27	True				
ANR	3504540	Identifier	next_class		3503779	0					
ANR	3504541	BreakStatement	break ;	4320:6:96084:96089	3503779	28	True				
ANR	3504542	Label	case TK_CHAR_TYPE :	4322:4:96096:96113	3503779	29	True				
ANR	3504543	Identifier	TK_CHAR_TYPE		3503779	0					
ANR	3504544	ExpressionStatement	"r = add_ctype_to_cc ( cc , tok -> u . prop . ctype , tok -> u . prop . not , env )"	4323:6:96121:96185	3503779	30	True				
ANR	3504545	AssignmentExpression	"r = add_ctype_to_cc ( cc , tok -> u . prop . ctype , tok -> u . prop . not , env )"		3503779	0		=			
ANR	3504546	Identifier	r		3503779	0					
ANR	3504547	CallExpression	"add_ctype_to_cc ( cc , tok -> u . prop . ctype , tok -> u . prop . not , env )"		3503779	1					
ANR	3504548	Callee	add_ctype_to_cc		3503779	0					
ANR	3504549	Identifier	add_ctype_to_cc		3503779	0					
ANR	3504550	ArgumentList	cc		3503779	1					
ANR	3504551	Argument	cc		3503779	0					
ANR	3504552	Identifier	cc		3503779	0					
ANR	3504553	Argument	tok -> u . prop . ctype		3503779	1					
ANR	3504554	MemberAccess	tok -> u . prop . ctype		3503779	0					
ANR	3504555	MemberAccess	tok -> u . prop		3503779	0					
ANR	3504556	PtrMemberAccess	tok -> u		3503779	0					
ANR	3504557	Identifier	tok		3503779	0					
ANR	3504558	Identifier	u		3503779	1					
ANR	3504559	Identifier	prop		3503779	1					
ANR	3504560	Identifier	ctype		3503779	1					
ANR	3504561	Argument	tok -> u . prop . not		3503779	2					
ANR	3504562	MemberAccess	tok -> u . prop . not		3503779	0					
ANR	3504563	MemberAccess	tok -> u . prop		3503779	0					
ANR	3504564	PtrMemberAccess	tok -> u		3503779	0					
ANR	3504565	Identifier	tok		3503779	0					
ANR	3504566	Identifier	u		3503779	1					
ANR	3504567	Identifier	prop		3503779	1					
ANR	3504568	Identifier	not		3503779	1					
ANR	3504569	Argument	env		3503779	3					
ANR	3504570	Identifier	env		3503779	0					
ANR	3504571	IfStatement	if ( r != 0 )		3503779	31					
ANR	3504572	Condition	r != 0	4324:10:96197:96202	3503779	0	True				
ANR	3504573	EqualityExpression	r != 0		3503779	0		!=			
ANR	3504574	Identifier	r		3503779	0					
ANR	3504575	PrimaryExpression	0		3503779	1					
ANR	3504576	ReturnStatement	return r ;	4324:18:96205:96213	3503779	1	True				
ANR	3504577	Identifier	r		3503779	0					
ANR	3504578	Label	next_class :	4326:4:96220:96230	3503779	32	True				
ANR	3504579	Identifier	next_class		3503779	0					
ANR	3504580	ExpressionStatement	"r = next_state_class ( cc , & vs , & val_type , & state , env )"	4327:6:96238:96291	3503779	33	True				
ANR	3504581	AssignmentExpression	"r = next_state_class ( cc , & vs , & val_type , & state , env )"		3503779	0		=			
ANR	3504582	Identifier	r		3503779	0					
ANR	3504583	CallExpression	"next_state_class ( cc , & vs , & val_type , & state , env )"		3503779	1					
ANR	3504584	Callee	next_state_class		3503779	0					
ANR	3504585	Identifier	next_state_class		3503779	0					
ANR	3504586	ArgumentList	cc		3503779	1					
ANR	3504587	Argument	cc		3503779	0					
ANR	3504588	Identifier	cc		3503779	0					
ANR	3504589	Argument	& vs		3503779	1					
ANR	3504590	UnaryOperationExpression	& vs		3503779	0					
ANR	3504591	UnaryOperator	&		3503779	0					
ANR	3504592	Identifier	vs		3503779	1					
ANR	3504593	Argument	& val_type		3503779	2					
ANR	3504594	UnaryOperationExpression	& val_type		3503779	0					
ANR	3504595	UnaryOperator	&		3503779	0					
ANR	3504596	Identifier	val_type		3503779	1					
ANR	3504597	Argument	& state		3503779	3					
ANR	3504598	UnaryOperationExpression	& state		3503779	0					
ANR	3504599	UnaryOperator	&		3503779	0					
ANR	3504600	Identifier	state		3503779	1					
ANR	3504601	Argument	env		3503779	4					
ANR	3504602	Identifier	env		3503779	0					
ANR	3504603	IfStatement	if ( r != 0 )		3503779	34					
ANR	3504604	Condition	r != 0	4328:10:96303:96308	3503779	0	True				
ANR	3504605	EqualityExpression	r != 0		3503779	0		!=			
ANR	3504606	Identifier	r		3503779	0					
ANR	3504607	PrimaryExpression	0		3503779	1					
ANR	3504608	GotoStatement	goto err ;	4328:18:96311:96319	3503779	1	True				
ANR	3504609	Identifier	err		3503779	0					
ANR	3504610	BreakStatement	break ;	4329:6:96327:96332	3503779	35	True				
ANR	3504611	Label	case TK_CHAR_PROPERTY :	4331:4:96339:96360	3503779	36	True				
ANR	3504612	Identifier	TK_CHAR_PROPERTY		3503779	0					
ANR	3504613	CompoundStatement		157:1:3478:3487	3503779	37					
ANR	3504614	IdentifierDeclStatement	int ctype ;	4333:1:96371:96380	3503779	0	True				
ANR	3504615	IdentifierDecl	ctype		3503779	0					
ANR	3504616	IdentifierDeclType	int		3503779	0					
ANR	3504617	Identifier	ctype		3503779	1					
ANR	3504618	ExpressionStatement	"ctype = fetch_char_property_to_ctype ( & p , end , env )"	4335:1:96384:96434	3503779	1	True				
ANR	3504619	AssignmentExpression	"ctype = fetch_char_property_to_ctype ( & p , end , env )"		3503779	0		=			
ANR	3504620	Identifier	ctype		3503779	0					
ANR	3504621	CallExpression	"fetch_char_property_to_ctype ( & p , end , env )"		3503779	1					
ANR	3504622	Callee	fetch_char_property_to_ctype		3503779	0					
ANR	3504623	Identifier	fetch_char_property_to_ctype		3503779	0					
ANR	3504624	ArgumentList	& p		3503779	1					
ANR	3504625	Argument	& p		3503779	0					
ANR	3504626	UnaryOperationExpression	& p		3503779	0					
ANR	3504627	UnaryOperator	&		3503779	0					
ANR	3504628	Identifier	p		3503779	1					
ANR	3504629	Argument	end		3503779	1					
ANR	3504630	Identifier	end		3503779	0					
ANR	3504631	Argument	env		3503779	2					
ANR	3504632	Identifier	env		3503779	0					
ANR	3504633	IfStatement	if ( ctype < 0 )		3503779	2					
ANR	3504634	Condition	ctype < 0	4336:5:96441:96449	3503779	0	True				
ANR	3504635	RelationalExpression	ctype < 0		3503779	0		<			
ANR	3504636	Identifier	ctype		3503779	0					
ANR	3504637	PrimaryExpression	0		3503779	1					
ANR	3504638	ReturnStatement	return ctype ;	4336:16:96452:96464	3503779	1	True				
ANR	3504639	Identifier	ctype		3503779	0					
ANR	3504640	ExpressionStatement	"r = add_ctype_to_cc ( cc , ctype , tok -> u . prop . not , env )"	4337:1:96467:96519	3503779	3	True				
ANR	3504641	AssignmentExpression	"r = add_ctype_to_cc ( cc , ctype , tok -> u . prop . not , env )"		3503779	0		=			
ANR	3504642	Identifier	r		3503779	0					
ANR	3504643	CallExpression	"add_ctype_to_cc ( cc , ctype , tok -> u . prop . not , env )"		3503779	1					
ANR	3504644	Callee	add_ctype_to_cc		3503779	0					
ANR	3504645	Identifier	add_ctype_to_cc		3503779	0					
ANR	3504646	ArgumentList	cc		3503779	1					
ANR	3504647	Argument	cc		3503779	0					
ANR	3504648	Identifier	cc		3503779	0					
ANR	3504649	Argument	ctype		3503779	1					
ANR	3504650	Identifier	ctype		3503779	0					
ANR	3504651	Argument	tok -> u . prop . not		3503779	2					
ANR	3504652	MemberAccess	tok -> u . prop . not		3503779	0					
ANR	3504653	MemberAccess	tok -> u . prop		3503779	0					
ANR	3504654	PtrMemberAccess	tok -> u		3503779	0					
ANR	3504655	Identifier	tok		3503779	0					
ANR	3504656	Identifier	u		3503779	1					
ANR	3504657	Identifier	prop		3503779	1					
ANR	3504658	Identifier	not		3503779	1					
ANR	3504659	Argument	env		3503779	3					
ANR	3504660	Identifier	env		3503779	0					
ANR	3504661	IfStatement	if ( r != 0 )		3503779	4					
ANR	3504662	Condition	r != 0	4338:5:96526:96531	3503779	0	True				
ANR	3504663	EqualityExpression	r != 0		3503779	0		!=			
ANR	3504664	Identifier	r		3503779	0					
ANR	3504665	PrimaryExpression	0		3503779	1					
ANR	3504666	ReturnStatement	return r ;	4338:13:96534:96542	3503779	1	True				
ANR	3504667	Identifier	r		3503779	0					
ANR	3504668	GotoStatement	goto next_class ;	4339:1:96545:96560	3503779	5	True				
ANR	3504669	Identifier	next_class		3503779	0					
ANR	3504670	BreakStatement	break ;	4341:6:96576:96581	3503779	38	True				
ANR	3504671	Label	case TK_CC_RANGE :	4343:4:96588:96604	3503779	39	True				
ANR	3504672	Identifier	TK_CC_RANGE		3503779	0					
ANR	3504673	IfStatement	if ( state == CCS_VALUE )		3503779	40					
ANR	3504674	Condition	state == CCS_VALUE	4344:10:96616:96633	3503779	0	True				
ANR	3504675	EqualityExpression	state == CCS_VALUE		3503779	0		==			
ANR	3504676	Identifier	state		3503779	0					
ANR	3504677	Identifier	CCS_VALUE		3503779	1					
ANR	3504678	CompoundStatement		168:30:3743:3743	3503779	1					
ANR	3504679	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4345:1:96639:96679	3503779	0	True				
ANR	3504680	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		3503779	0		=			
ANR	3504681	Identifier	r		3503779	0					
ANR	3504682	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		3503779	1					
ANR	3504683	Callee	fetch_token_in_cc		3503779	0					
ANR	3504684	Identifier	fetch_token_in_cc		3503779	0					
ANR	3504685	ArgumentList	tok		3503779	1					
ANR	3504686	Argument	tok		3503779	0					
ANR	3504687	Identifier	tok		3503779	0					
ANR	3504688	Argument	& p		3503779	1					
ANR	3504689	UnaryOperationExpression	& p		3503779	0					
ANR	3504690	UnaryOperator	&		3503779	0					
ANR	3504691	Identifier	p		3503779	1					
ANR	3504692	Argument	end		3503779	2					
ANR	3504693	Identifier	end		3503779	0					
ANR	3504694	Argument	env		3503779	3					
ANR	3504695	Identifier	env		3503779	0					
ANR	3504696	IfStatement	if ( r < 0 )		3503779	1					
ANR	3504697	Condition	r < 0	4346:5:96686:96690	3503779	0	True				
ANR	3504698	RelationalExpression	r < 0		3503779	0		<			
ANR	3504699	Identifier	r		3503779	0					
ANR	3504700	PrimaryExpression	0		3503779	1					
ANR	3504701	GotoStatement	goto err ;	4346:12:96693:96701	3503779	1	True				
ANR	3504702	Identifier	err		3503779	0					
ANR	3504703	ExpressionStatement	fetched = 1	4347:1:96704:96715	3503779	2	True				
ANR	3504704	AssignmentExpression	fetched = 1		3503779	0		=			
ANR	3504705	Identifier	fetched		3503779	0					
ANR	3504706	PrimaryExpression	1		3503779	1					
ANR	3504707	IfStatement	if ( r == TK_CC_CLOSE )		3503779	3					
ANR	3504708	Condition	r == TK_CC_CLOSE	4348:5:96722:96737	3503779	0	True				
ANR	3504709	EqualityExpression	r == TK_CC_CLOSE		3503779	0		==			
ANR	3504710	Identifier	r		3503779	0					
ANR	3504711	Identifier	TK_CC_CLOSE		3503779	1					
ANR	3504712	CompoundStatement		172:23:3847:3847	3503779	1					
ANR	3504713	Label	range_end_val :	4349:1:96760:96773	3503779	0	True				
ANR	3504714	Identifier	range_end_val		3503779	0					
ANR	3504715	ExpressionStatement	v = ( OnigCodePoint ) '-'	4350:3:96778:96801	3503779	1	True				
ANR	3504716	AssignmentExpression	v = ( OnigCodePoint ) '-'		3503779	0		=			
ANR	3504717	Identifier	v		3503779	0					
ANR	3504718	CastExpression	( OnigCodePoint ) '-'		3503779	1					
ANR	3504719	CastTarget	OnigCodePoint		3503779	0					
ANR	3504720	PrimaryExpression	'-'		3503779	1					
ANR	3504721	ExpressionStatement	in_israw = 0	4351:3:96806:96818	3503779	2	True				
ANR	3504722	AssignmentExpression	in_israw = 0		3503779	0		=			
ANR	3504723	Identifier	in_israw		3503779	0					
ANR	3504724	PrimaryExpression	0		3503779	1					
ANR	3504725	GotoStatement	goto val_entry ;	4352:3:96823:96837	3503779	3	True				
ANR	3504726	Identifier	val_entry		3503779	0					
ANR	3504727	ElseStatement	else		3503779	0					
ANR	3504728	IfStatement	if ( r == TK_CC_AND )		3503779	0					
ANR	3504729	Condition	r == TK_CC_AND	4354:10:96852:96865	3503779	0	True				
ANR	3504730	EqualityExpression	r == TK_CC_AND		3503779	0		==			
ANR	3504731	Identifier	r		3503779	0					
ANR	3504732	Identifier	TK_CC_AND		3503779	1					
ANR	3504733	CompoundStatement		178:26:3975:3975	3503779	1					
ANR	3504734	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4355:3:96873:96903	3503779	0	True				
ANR	3504735	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		3503779	0					
ANR	3504736	Callee	CC_ESC_WARN		3503779	0					
ANR	3504737	Identifier	CC_ESC_WARN		3503779	0					
ANR	3504738	ArgumentList	env		3503779	1					
ANR	3504739	Argument	env		3503779	0					
ANR	3504740	Identifier	env		3503779	0					
ANR	3504741	Argument	"( UChar * ) ""-"""		3503779	1					
ANR	3504742	CastExpression	"( UChar * ) ""-"""		3503779	0					
ANR	3504743	CastTarget	UChar *		3503779	0					
ANR	3504744	PrimaryExpression	"""-"""		3503779	1					
ANR	3504745	GotoStatement	goto range_end_val ;	4356:3:96908:96926	3503779	1	True				
ANR	3504746	Identifier	range_end_val		3503779	0					
ANR	3504747	ExpressionStatement	state = CCS_RANGE	4358:1:96932:96949	3503779	4	True				
ANR	3504748	AssignmentExpression	state = CCS_RANGE		3503779	0		=			
ANR	3504749	Identifier	state		3503779	0					
ANR	3504750	Identifier	CCS_RANGE		3503779	1					
ANR	3504751	ElseStatement	else		3503779	0					
ANR	3504752	IfStatement	if ( state == CCS_START )		3503779	0					
ANR	3504753	Condition	state == CCS_START	4360:15:96974:96991	3503779	0	True				
ANR	3504754	EqualityExpression	state == CCS_START		3503779	0		==			
ANR	3504755	Identifier	state		3503779	0					
ANR	3504756	Identifier	CCS_START		3503779	1					
ANR	3504757	CompoundStatement		184:35:4101:4101	3503779	1					
ANR	3504758	ExpressionStatement	v = ( OnigCodePoint ) tok -> u . c	4362:1:97021:97049	3503779	0	True				
ANR	3504759	AssignmentExpression	v = ( OnigCodePoint ) tok -> u . c		3503779	0		=			
ANR	3504760	Identifier	v		3503779	0					
ANR	3504761	CastExpression	( OnigCodePoint ) tok -> u . c		3503779	1					
ANR	3504762	CastTarget	OnigCodePoint		3503779	0					
ANR	3504763	MemberAccess	tok -> u . c		3503779	1					
ANR	3504764	PtrMemberAccess	tok -> u		3503779	0					
ANR	3504765	Identifier	tok		3503779	0					
ANR	3504766	Identifier	u		3503779	1					
ANR	3504767	Identifier	c		3503779	1					
ANR	3504768	ExpressionStatement	in_israw = 0	4363:1:97052:97064	3503779	1	True				
ANR	3504769	AssignmentExpression	in_israw = 0		3503779	0		=			
ANR	3504770	Identifier	in_israw		3503779	0					
ANR	3504771	PrimaryExpression	0		3503779	1					
ANR	3504772	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4365:1:97068:97108	3503779	2	True				
ANR	3504773	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		3503779	0		=			
ANR	3504774	Identifier	r		3503779	0					
ANR	3504775	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		3503779	1					
ANR	3504776	Callee	fetch_token_in_cc		3503779	0					
ANR	3504777	Identifier	fetch_token_in_cc		3503779	0					
ANR	3504778	ArgumentList	tok		3503779	1					
ANR	3504779	Argument	tok		3503779	0					
ANR	3504780	Identifier	tok		3503779	0					
ANR	3504781	Argument	& p		3503779	1					
ANR	3504782	UnaryOperationExpression	& p		3503779	0					
ANR	3504783	UnaryOperator	&		3503779	0					
ANR	3504784	Identifier	p		3503779	1					
ANR	3504785	Argument	end		3503779	2					
ANR	3504786	Identifier	end		3503779	0					
ANR	3504787	Argument	env		3503779	3					
ANR	3504788	Identifier	env		3503779	0					
ANR	3504789	IfStatement	if ( r < 0 )		3503779	3					
ANR	3504790	Condition	r < 0	4366:5:97115:97119	3503779	0	True				
ANR	3504791	RelationalExpression	r < 0		3503779	0		<			
ANR	3504792	Identifier	r		3503779	0					
ANR	3504793	PrimaryExpression	0		3503779	1					
ANR	3504794	GotoStatement	goto err ;	4366:12:97122:97130	3503779	1	True				
ANR	3504795	Identifier	err		3503779	0					
ANR	3504796	ExpressionStatement	fetched = 1	4367:1:97133:97144	3503779	4	True				
ANR	3504797	AssignmentExpression	fetched = 1		3503779	0		=			
ANR	3504798	Identifier	fetched		3503779	0					
ANR	3504799	PrimaryExpression	1		3503779	1					
ANR	3504800	IfStatement	if ( r == TK_CC_RANGE || and_start != 0 )		3503779	5					
ANR	3504801	Condition	r == TK_CC_RANGE || and_start != 0	4369:5:97186:97219	3503779	0	True				
ANR	3504802	OrExpression	r == TK_CC_RANGE || and_start != 0		3503779	0		||			
ANR	3504803	EqualityExpression	r == TK_CC_RANGE		3503779	0		==			
ANR	3504804	Identifier	r		3503779	0					
ANR	3504805	Identifier	TK_CC_RANGE		3503779	1					
ANR	3504806	EqualityExpression	and_start != 0		3503779	1		!=			
ANR	3504807	Identifier	and_start		3503779	0					
ANR	3504808	PrimaryExpression	0		3503779	1					
ANR	3504809	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4370:3:97225:97255	3503779	1	True				
ANR	3504810	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		3503779	0					
ANR	3504811	Callee	CC_ESC_WARN		3503779	0					
ANR	3504812	Identifier	CC_ESC_WARN		3503779	0					
ANR	3504813	ArgumentList	env		3503779	1					
ANR	3504814	Argument	env		3503779	0					
ANR	3504815	Identifier	env		3503779	0					
ANR	3504816	Argument	"( UChar * ) ""-"""		3503779	1					
ANR	3504817	CastExpression	"( UChar * ) ""-"""		3503779	0					
ANR	3504818	CastTarget	UChar *		3503779	0					
ANR	3504819	PrimaryExpression	"""-"""		3503779	1					
ANR	3504820	GotoStatement	goto val_entry ;	4372:1:97259:97273	3503779	6	True				
ANR	3504821	Identifier	val_entry		3503779	0					
ANR	3504822	ElseStatement	else		3503779	0					
ANR	3504823	IfStatement	if ( state == CCS_RANGE )		3503779	0					
ANR	3504824	Condition	state == CCS_RANGE	4374:15:97298:97315	3503779	0	True				
ANR	3504825	EqualityExpression	state == CCS_RANGE		3503779	0		==			
ANR	3504826	Identifier	state		3503779	0					
ANR	3504827	Identifier	CCS_RANGE		3503779	1					
ANR	3504828	CompoundStatement		198:35:4425:4425	3503779	1					
ANR	3504829	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4375:1:97321:97351	3503779	0	True				
ANR	3504830	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		3503779	0					
ANR	3504831	Callee	CC_ESC_WARN		3503779	0					
ANR	3504832	Identifier	CC_ESC_WARN		3503779	0					
ANR	3504833	ArgumentList	env		3503779	1					
ANR	3504834	Argument	env		3503779	0					
ANR	3504835	Identifier	env		3503779	0					
ANR	3504836	Argument	"( UChar * ) ""-"""		3503779	1					
ANR	3504837	CastExpression	"( UChar * ) ""-"""		3503779	0					
ANR	3504838	CastTarget	UChar *		3503779	0					
ANR	3504839	PrimaryExpression	"""-"""		3503779	1					
ANR	3504840	GotoStatement	goto sb_char ;	4376:1:97354:97366	3503779	1	True				
ANR	3504841	Identifier	sb_char		3503779	0					
ANR	3504842	ElseStatement	else		3503779	0					
ANR	3504843	CompoundStatement		202:11:4519:4519	3503779	0					
ANR	3504844	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4379:1:97434:97474	3503779	0	True				
ANR	3504845	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		3503779	0		=			
ANR	3504846	Identifier	r		3503779	0					
ANR	3504847	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		3503779	1					
ANR	3504848	Callee	fetch_token_in_cc		3503779	0					
ANR	3504849	Identifier	fetch_token_in_cc		3503779	0					
ANR	3504850	ArgumentList	tok		3503779	1					
ANR	3504851	Argument	tok		3503779	0					
ANR	3504852	Identifier	tok		3503779	0					
ANR	3504853	Argument	& p		3503779	1					
ANR	3504854	UnaryOperationExpression	& p		3503779	0					
ANR	3504855	UnaryOperator	&		3503779	0					
ANR	3504856	Identifier	p		3503779	1					
ANR	3504857	Argument	end		3503779	2					
ANR	3504858	Identifier	end		3503779	0					
ANR	3504859	Argument	env		3503779	3					
ANR	3504860	Identifier	env		3503779	0					
ANR	3504861	IfStatement	if ( r < 0 )		3503779	1					
ANR	3504862	Condition	r < 0	4380:5:97481:97485	3503779	0	True				
ANR	3504863	RelationalExpression	r < 0		3503779	0		<			
ANR	3504864	Identifier	r		3503779	0					
ANR	3504865	PrimaryExpression	0		3503779	1					
ANR	3504866	GotoStatement	goto err ;	4380:12:97488:97496	3503779	1	True				
ANR	3504867	Identifier	err		3503779	0					
ANR	3504868	ExpressionStatement	fetched = 1	4381:1:97499:97510	3503779	2	True				
ANR	3504869	AssignmentExpression	fetched = 1		3503779	0		=			
ANR	3504870	Identifier	fetched		3503779	0					
ANR	3504871	PrimaryExpression	1		3503779	1					
ANR	3504872	IfStatement	if ( r == TK_CC_CLOSE )		3503779	3					
ANR	3504873	Condition	r == TK_CC_CLOSE	4382:5:97517:97532	3503779	0	True				
ANR	3504874	EqualityExpression	r == TK_CC_CLOSE		3503779	0		==			
ANR	3504875	Identifier	r		3503779	0					
ANR	3504876	Identifier	TK_CC_CLOSE		3503779	1					
ANR	3504877	GotoStatement	goto range_end_val ;	4382:23:97535:97553	3503779	1	True				
ANR	3504878	Identifier	range_end_val		3503779	0					
ANR	3504879	ElseStatement	else		3503779	0					
ANR	3504880	IfStatement	if ( r == TK_CC_AND )		3503779	0					
ANR	3504881	Condition	r == TK_CC_AND	4383:10:97584:97597	3503779	0	True				
ANR	3504882	EqualityExpression	r == TK_CC_AND		3503779	0		==			
ANR	3504883	Identifier	r		3503779	0					
ANR	3504884	Identifier	TK_CC_AND		3503779	1					
ANR	3504885	CompoundStatement		207:26:4707:4707	3503779	1					
ANR	3504886	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4384:3:97605:97635	3503779	0	True				
ANR	3504887	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		3503779	0					
ANR	3504888	Callee	CC_ESC_WARN		3503779	0					
ANR	3504889	Identifier	CC_ESC_WARN		3503779	0					
ANR	3504890	ArgumentList	env		3503779	1					
ANR	3504891	Argument	env		3503779	0					
ANR	3504892	Identifier	env		3503779	0					
ANR	3504893	Argument	"( UChar * ) ""-"""		3503779	1					
ANR	3504894	CastExpression	"( UChar * ) ""-"""		3503779	0					
ANR	3504895	CastTarget	UChar *		3503779	0					
ANR	3504896	PrimaryExpression	"""-"""		3503779	1					
ANR	3504897	GotoStatement	goto range_end_val ;	4385:3:97640:97658	3503779	1	True				
ANR	3504898	Identifier	range_end_val		3503779	0					
ANR	3504899	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC ) )"		3503779	4					
ANR	3504900	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC )"	4388:5:97670:97732	3503779	0	True				
ANR	3504901	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC )"		3503779	0					
ANR	3504902	Callee	IS_SYNTAX_BV		3503779	0					
ANR	3504903	Identifier	IS_SYNTAX_BV		3503779	0					
ANR	3504904	ArgumentList	env -> syntax		3503779	1					
ANR	3504905	Argument	env -> syntax		3503779	0					
ANR	3504906	PtrMemberAccess	env -> syntax		3503779	0					
ANR	3504907	Identifier	env		3503779	0					
ANR	3504908	Identifier	syntax		3503779	1					
ANR	3504909	Argument	ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC		3503779	1					
ANR	3504910	Identifier	ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC		3503779	0					
ANR	3504911	CompoundStatement		212:70:4842:4842	3503779	1					
ANR	3504912	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4389:3:97740:97770	3503779	0	True				
ANR	3504913	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		3503779	0					
ANR	3504914	Callee	CC_ESC_WARN		3503779	0					
ANR	3504915	Identifier	CC_ESC_WARN		3503779	0					
ANR	3504916	ArgumentList	env		3503779	1					
ANR	3504917	Argument	env		3503779	0					
ANR	3504918	Identifier	env		3503779	0					
ANR	3504919	Argument	"( UChar * ) ""-"""		3503779	1					
ANR	3504920	CastExpression	"( UChar * ) ""-"""		3503779	0					
ANR	3504921	CastTarget	UChar *		3503779	0					
ANR	3504922	PrimaryExpression	"""-"""		3503779	1					
ANR	3504923	GotoStatement	goto sb_char ;	4390:3:97775:97787	3503779	1	True				
ANR	3504924	Identifier	sb_char		3503779	0					
ANR	3504925	ExpressionStatement	r = ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS	4392:1:97832:97883	3503779	5	True				
ANR	3504926	AssignmentExpression	r = ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS		3503779	0		=			
ANR	3504927	Identifier	r		3503779	0					
ANR	3504928	Identifier	ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS		3503779	1					
ANR	3504929	GotoStatement	goto err ;	4393:1:97886:97894	3503779	6	True				
ANR	3504930	Identifier	err		3503779	0					
ANR	3504931	BreakStatement	break ;	4395:6:97910:97915	3503779	41	True				
ANR	3504932	Label	case TK_CC_CC_OPEN :	4397:4:97922:97940	3503779	42	True				
ANR	3504933	Identifier	TK_CC_CC_OPEN		3503779	0					
ANR	3504934	CompoundStatement		224:1:5080:5095	3503779	43					
ANR	3504935	IdentifierDeclStatement	Node * anode ;	4399:1:97959:97970	3503779	0	True				
ANR	3504936	IdentifierDecl	* anode		3503779	0					
ANR	3504937	IdentifierDeclType	Node *		3503779	0					
ANR	3504938	Identifier	anode		3503779	1					
ANR	3504939	IdentifierDeclStatement	CClassNode * acc ;	4400:1:97973:97988	3503779	1	True				
ANR	3504940	IdentifierDecl	* acc		3503779	0					
ANR	3504941	IdentifierDeclType	CClassNode *		3503779	0					
ANR	3504942	Identifier	acc		3503779	1					
ANR	3504943	ExpressionStatement	"r = parse_char_class ( & anode , tok , & p , end , env )"	4402:1:97992:98039	3503779	2	True				
ANR	3504944	AssignmentExpression	"r = parse_char_class ( & anode , tok , & p , end , env )"		3503779	0		=			
ANR	3504945	Identifier	r		3503779	0					
ANR	3504946	CallExpression	"parse_char_class ( & anode , tok , & p , end , env )"		3503779	1					
ANR	3504947	Callee	parse_char_class		3503779	0					
ANR	3504948	Identifier	parse_char_class		3503779	0					
ANR	3504949	ArgumentList	& anode		3503779	1					
ANR	3504950	Argument	& anode		3503779	0					
ANR	3504951	UnaryOperationExpression	& anode		3503779	0					
ANR	3504952	UnaryOperator	&		3503779	0					
ANR	3504953	Identifier	anode		3503779	1					
ANR	3504954	Argument	tok		3503779	1					
ANR	3504955	Identifier	tok		3503779	0					
ANR	3504956	Argument	& p		3503779	2					
ANR	3504957	UnaryOperationExpression	& p		3503779	0					
ANR	3504958	UnaryOperator	&		3503779	0					
ANR	3504959	Identifier	p		3503779	1					
ANR	3504960	Argument	end		3503779	3					
ANR	3504961	Identifier	end		3503779	0					
ANR	3504962	Argument	env		3503779	4					
ANR	3504963	Identifier	env		3503779	0					
ANR	3504964	IfStatement	if ( r != 0 )		3503779	3					
ANR	3504965	Condition	r != 0	4403:5:98046:98051	3503779	0	True				
ANR	3504966	EqualityExpression	r != 0		3503779	0		!=			
ANR	3504967	Identifier	r		3503779	0					
ANR	3504968	PrimaryExpression	0		3503779	1					
ANR	3504969	GotoStatement	goto cc_open_err ;	4403:13:98054:98070	3503779	1	True				
ANR	3504970	Identifier	cc_open_err		3503779	0					
ANR	3504971	ExpressionStatement	acc = NCCLASS ( anode )	4404:1:98073:98093	3503779	4	True				
ANR	3504972	AssignmentExpression	acc = NCCLASS ( anode )		3503779	0		=			
ANR	3504973	Identifier	acc		3503779	0					
ANR	3504974	CallExpression	NCCLASS ( anode )		3503779	1					
ANR	3504975	Callee	NCCLASS		3503779	0					
ANR	3504976	Identifier	NCCLASS		3503779	0					
ANR	3504977	ArgumentList	anode		3503779	1					
ANR	3504978	Argument	anode		3503779	0					
ANR	3504979	Identifier	anode		3503779	0					
ANR	3504980	ExpressionStatement	"r = or_cclass ( cc , acc , env -> enc )"	4405:1:98096:98128	3503779	5	True				
ANR	3504981	AssignmentExpression	"r = or_cclass ( cc , acc , env -> enc )"		3503779	0		=			
ANR	3504982	Identifier	r		3503779	0					
ANR	3504983	CallExpression	"or_cclass ( cc , acc , env -> enc )"		3503779	1					
ANR	3504984	Callee	or_cclass		3503779	0					
ANR	3504985	Identifier	or_cclass		3503779	0					
ANR	3504986	ArgumentList	cc		3503779	1					
ANR	3504987	Argument	cc		3503779	0					
ANR	3504988	Identifier	cc		3503779	0					
ANR	3504989	Argument	acc		3503779	1					
ANR	3504990	Identifier	acc		3503779	0					
ANR	3504991	Argument	env -> enc		3503779	2					
ANR	3504992	PtrMemberAccess	env -> enc		3503779	0					
ANR	3504993	Identifier	env		3503779	0					
ANR	3504994	Identifier	enc		3503779	1					
ANR	3504995	ExpressionStatement	onig_node_free ( anode )	4407:1:98132:98153	3503779	6	True				
ANR	3504996	CallExpression	onig_node_free ( anode )		3503779	0					
ANR	3504997	Callee	onig_node_free		3503779	0					
ANR	3504998	Identifier	onig_node_free		3503779	0					
ANR	3504999	ArgumentList	anode		3503779	1					
ANR	3505000	Argument	anode		3503779	0					
ANR	3505001	Identifier	anode		3503779	0					
ANR	3505002	Label	cc_open_err :	4408:6:98161:98172	3503779	7	True				
ANR	3505003	Identifier	cc_open_err		3503779	0					
ANR	3505004	IfStatement	if ( r != 0 )		3503779	8					
ANR	3505005	Condition	r != 0	4409:5:98179:98184	3503779	0	True				
ANR	3505006	EqualityExpression	r != 0		3503779	0		!=			
ANR	3505007	Identifier	r		3503779	0					
ANR	3505008	PrimaryExpression	0		3503779	1					
ANR	3505009	GotoStatement	goto err ;	4409:13:98187:98195	3503779	1	True				
ANR	3505010	Identifier	err		3503779	0					
ANR	3505011	BreakStatement	break ;	4411:6:98211:98216	3503779	44	True				
ANR	3505012	Label	case TK_CC_AND :	4413:4:98223:98237	3503779	45	True				
ANR	3505013	Identifier	TK_CC_AND		3503779	0					
ANR	3505014	CompoundStatement		238:6:5361:5361	3503779	46					
ANR	3505015	IfStatement	if ( state == CCS_VALUE )		3503779	0					
ANR	3505016	Condition	state == CCS_VALUE	4415:5:98261:98278	3503779	0	True				
ANR	3505017	EqualityExpression	state == CCS_VALUE		3503779	0		==			
ANR	3505018	Identifier	state		3503779	0					
ANR	3505019	Identifier	CCS_VALUE		3503779	1					
ANR	3505020	CompoundStatement		239:25:5388:5388	3503779	1					
ANR	3505021	ExpressionStatement	"r = next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"	4416:3:98286:98373	3503779	0	True				
ANR	3505022	AssignmentExpression	"r = next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"		3503779	0		=			
ANR	3505023	Identifier	r		3503779	0					
ANR	3505024	CallExpression	"next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"		3503779	1					
ANR	3505025	Callee	next_state_val		3503779	0					
ANR	3505026	Identifier	next_state_val		3503779	0					
ANR	3505027	ArgumentList	cc		3503779	1					
ANR	3505028	Argument	cc		3503779	0					
ANR	3505029	Identifier	cc		3503779	0					
ANR	3505030	Argument	& vs		3503779	1					
ANR	3505031	UnaryOperationExpression	& vs		3503779	0					
ANR	3505032	UnaryOperator	&		3503779	0					
ANR	3505033	Identifier	vs		3503779	1					
ANR	3505034	Argument	0		3503779	2					
ANR	3505035	PrimaryExpression	0		3503779	0					
ANR	3505036	Argument	& val_israw		3503779	3					
ANR	3505037	UnaryOperationExpression	& val_israw		3503779	0					
ANR	3505038	UnaryOperator	&		3503779	0					
ANR	3505039	Identifier	val_israw		3503779	1					
ANR	3505040	Argument	0		3503779	4					
ANR	3505041	PrimaryExpression	0		3503779	0					
ANR	3505042	Argument	val_type		3503779	5					
ANR	3505043	Identifier	val_type		3503779	0					
ANR	3505044	Argument	& val_type		3503779	6					
ANR	3505045	UnaryOperationExpression	& val_type		3503779	0					
ANR	3505046	UnaryOperator	&		3503779	0					
ANR	3505047	Identifier	val_type		3503779	1					
ANR	3505048	Argument	& state		3503779	7					
ANR	3505049	UnaryOperationExpression	& state		3503779	0					
ANR	3505050	UnaryOperator	&		3503779	0					
ANR	3505051	Identifier	state		3503779	1					
ANR	3505052	Argument	env		3503779	8					
ANR	3505053	Identifier	env		3503779	0					
ANR	3505054	IfStatement	if ( r != 0 )		3503779	1					
ANR	3505055	Condition	r != 0	4418:7:98382:98387	3503779	0	True				
ANR	3505056	EqualityExpression	r != 0		3503779	0		!=			
ANR	3505057	Identifier	r		3503779	0					
ANR	3505058	PrimaryExpression	0		3503779	1					
ANR	3505059	GotoStatement	goto err ;	4418:15:98390:98398	3503779	1	True				
ANR	3505060	Identifier	err		3503779	0					
ANR	3505061	ExpressionStatement	and_start = 1	4421:1:98438:98451	3503779	1	True				
ANR	3505062	AssignmentExpression	and_start = 1		3503779	0		=			
ANR	3505063	Identifier	and_start		3503779	0					
ANR	3505064	PrimaryExpression	1		3503779	1					
ANR	3505065	ExpressionStatement	state = CCS_START	4422:1:98454:98471	3503779	2	True				
ANR	3505066	AssignmentExpression	state = CCS_START		3503779	0		=			
ANR	3505067	Identifier	state		3503779	0					
ANR	3505068	Identifier	CCS_START		3503779	1					
ANR	3505069	IfStatement	if ( IS_NOT_NULL ( prev_cc ) )		3503779	3					
ANR	3505070	Condition	IS_NOT_NULL ( prev_cc )	4424:5:98479:98498	3503779	0	True				
ANR	3505071	CallExpression	IS_NOT_NULL ( prev_cc )		3503779	0					
ANR	3505072	Callee	IS_NOT_NULL		3503779	0					
ANR	3505073	Identifier	IS_NOT_NULL		3503779	0					
ANR	3505074	ArgumentList	prev_cc		3503779	1					
ANR	3505075	Argument	prev_cc		3503779	0					
ANR	3505076	Identifier	prev_cc		3503779	0					
ANR	3505077	CompoundStatement		248:27:5608:5608	3503779	1					
ANR	3505078	ExpressionStatement	"r = and_cclass ( prev_cc , cc , env -> enc )"	4425:3:98506:98543	3503779	0	True				
ANR	3505079	AssignmentExpression	"r = and_cclass ( prev_cc , cc , env -> enc )"		3503779	0		=			
ANR	3505080	Identifier	r		3503779	0					
ANR	3505081	CallExpression	"and_cclass ( prev_cc , cc , env -> enc )"		3503779	1					
ANR	3505082	Callee	and_cclass		3503779	0					
ANR	3505083	Identifier	and_cclass		3503779	0					
ANR	3505084	ArgumentList	prev_cc		3503779	1					
ANR	3505085	Argument	prev_cc		3503779	0					
ANR	3505086	Identifier	prev_cc		3503779	0					
ANR	3505087	Argument	cc		3503779	1					
ANR	3505088	Identifier	cc		3503779	0					
ANR	3505089	Argument	env -> enc		3503779	2					
ANR	3505090	PtrMemberAccess	env -> enc		3503779	0					
ANR	3505091	Identifier	env		3503779	0					
ANR	3505092	Identifier	enc		3503779	1					
ANR	3505093	IfStatement	if ( r != 0 )		3503779	1					
ANR	3505094	Condition	r != 0	4426:7:98552:98557	3503779	0	True				
ANR	3505095	EqualityExpression	r != 0		3503779	0		!=			
ANR	3505096	Identifier	r		3503779	0					
ANR	3505097	PrimaryExpression	0		3503779	1					
ANR	3505098	GotoStatement	goto err ;	4426:15:98560:98568	3503779	1	True				
ANR	3505099	Identifier	err		3503779	0					
ANR	3505100	ExpressionStatement	bbuf_free ( cc -> mbuf )	4427:3:98573:98592	3503779	2	True				
ANR	3505101	CallExpression	bbuf_free ( cc -> mbuf )		3503779	0					
ANR	3505102	Callee	bbuf_free		3503779	0					
ANR	3505103	Identifier	bbuf_free		3503779	0					
ANR	3505104	ArgumentList	cc -> mbuf		3503779	1					
ANR	3505105	Argument	cc -> mbuf		3503779	0					
ANR	3505106	PtrMemberAccess	cc -> mbuf		3503779	0					
ANR	3505107	Identifier	cc		3503779	0					
ANR	3505108	Identifier	mbuf		3503779	1					
ANR	3505109	ElseStatement	else		3503779	0					
ANR	3505110	CompoundStatement		253:6:5710:5710	3503779	0					
ANR	3505111	ExpressionStatement	prev_cc = cc	4430:3:98608:98620	3503779	0	True				
ANR	3505112	AssignmentExpression	prev_cc = cc		3503779	0		=			
ANR	3505113	Identifier	prev_cc		3503779	0					
ANR	3505114	Identifier	cc		3503779	1					
ANR	3505115	ExpressionStatement	cc = & work_cc	4431:3:98625:98638	3503779	1	True				
ANR	3505116	AssignmentExpression	cc = & work_cc		3503779	0		=			
ANR	3505117	Identifier	cc		3503779	0					
ANR	3505118	UnaryOperationExpression	& work_cc		3503779	1					
ANR	3505119	UnaryOperator	&		3503779	0					
ANR	3505120	Identifier	work_cc		3503779	1					
ANR	3505121	ExpressionStatement	initialize_cclass ( cc )	4433:1:98644:98665	3503779	4	True				
ANR	3505122	CallExpression	initialize_cclass ( cc )		3503779	0					
ANR	3505123	Callee	initialize_cclass		3503779	0					
ANR	3505124	Identifier	initialize_cclass		3503779	0					
ANR	3505125	ArgumentList	cc		3503779	1					
ANR	3505126	Argument	cc		3503779	0					
ANR	3505127	Identifier	cc		3503779	0					
ANR	3505128	BreakStatement	break ;	4435:6:98681:98686	3503779	47	True				
ANR	3505129	Label	case TK_EOT :	4437:4:98693:98704	3503779	48	True				
ANR	3505130	Identifier	TK_EOT		3503779	0					
ANR	3505131	ExpressionStatement	r = ONIGERR_PREMATURE_END_OF_CHAR_CLASS	4438:6:98712:98751	3503779	49	True				
ANR	3505132	AssignmentExpression	r = ONIGERR_PREMATURE_END_OF_CHAR_CLASS		3503779	0		=			
ANR	3505133	Identifier	r		3503779	0					
ANR	3505134	Identifier	ONIGERR_PREMATURE_END_OF_CHAR_CLASS		3503779	1					
ANR	3505135	GotoStatement	goto err ;	4439:6:98759:98767	3503779	50	True				
ANR	3505136	Identifier	err		3503779	0					
ANR	3505137	BreakStatement	break ;	4440:6:98775:98780	3503779	51	True				
ANR	3505138	Label	default :	4441:4:98786:98793	3503779	52	True				
ANR	3505139	Identifier	default		3503779	0					
ANR	3505140	ExpressionStatement	r = ONIGERR_PARSER_BUG	4442:6:98801:98823	3503779	53	True				
ANR	3505141	AssignmentExpression	r = ONIGERR_PARSER_BUG		3503779	0		=			
ANR	3505142	Identifier	r		3503779	0					
ANR	3505143	Identifier	ONIGERR_PARSER_BUG		3503779	1					
ANR	3505144	GotoStatement	goto err ;	4443:6:98831:98839	3503779	54	True				
ANR	3505145	Identifier	err		3503779	0					
ANR	3505146	BreakStatement	break ;	4444:6:98847:98852	3503779	55	True				
ANR	3505147	IfStatement	if ( fetched )		3503779	2					
ANR	3505148	Condition	fetched	4447:8:98869:98875	3503779	0	True				
ANR	3505149	Identifier	fetched		3503779	0					
ANR	3505150	ExpressionStatement	r = tok -> type	4448:6:98884:98897	3503779	1	True				
ANR	3505151	AssignmentExpression	r = tok -> type		3503779	0		=			
ANR	3505152	Identifier	r		3503779	0					
ANR	3505153	PtrMemberAccess	tok -> type		3503779	1					
ANR	3505154	Identifier	tok		3503779	0					
ANR	3505155	Identifier	type		3503779	1					
ANR	3505156	ElseStatement	else		3503779	0					
ANR	3505157	CompoundStatement		273:9:6015:6015	3503779	0					
ANR	3505158	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4450:6:98916:98956	3503779	0	True				
ANR	3505159	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		3503779	0		=			
ANR	3505160	Identifier	r		3503779	0					
ANR	3505161	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		3503779	1					
ANR	3505162	Callee	fetch_token_in_cc		3503779	0					
ANR	3505163	Identifier	fetch_token_in_cc		3503779	0					
ANR	3505164	ArgumentList	tok		3503779	1					
ANR	3505165	Argument	tok		3503779	0					
ANR	3505166	Identifier	tok		3503779	0					
ANR	3505167	Argument	& p		3503779	1					
ANR	3505168	UnaryOperationExpression	& p		3503779	0					
ANR	3505169	UnaryOperator	&		3503779	0					
ANR	3505170	Identifier	p		3503779	1					
ANR	3505171	Argument	end		3503779	2					
ANR	3505172	Identifier	end		3503779	0					
ANR	3505173	Argument	env		3503779	3					
ANR	3505174	Identifier	env		3503779	0					
ANR	3505175	IfStatement	if ( r < 0 )		3503779	1					
ANR	3505176	Condition	r < 0	4451:10:98968:98972	3503779	0	True				
ANR	3505177	RelationalExpression	r < 0		3503779	0		<			
ANR	3505178	Identifier	r		3503779	0					
ANR	3505179	PrimaryExpression	0		3503779	1					
ANR	3505180	GotoStatement	goto err ;	4451:17:98975:98983	3503779	1	True				
ANR	3505181	Identifier	err		3503779	0					
ANR	3505182	IfStatement	if ( state == CCS_VALUE )		3503779	22					
ANR	3505183	Condition	state == CCS_VALUE	4455:6:99002:99019	3503779	0	True				
ANR	3505184	EqualityExpression	state == CCS_VALUE		3503779	0		==			
ANR	3505185	Identifier	state		3503779	0					
ANR	3505186	Identifier	CCS_VALUE		3503779	1					
ANR	3505187	CompoundStatement		279:26:6129:6129	3503779	1					
ANR	3505188	ExpressionStatement	"r = next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"	4456:4:99028:99116	3503779	0	True				
ANR	3505189	AssignmentExpression	"r = next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"		3503779	0		=			
ANR	3505190	Identifier	r		3503779	0					
ANR	3505191	CallExpression	"next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"		3503779	1					
ANR	3505192	Callee	next_state_val		3503779	0					
ANR	3505193	Identifier	next_state_val		3503779	0					
ANR	3505194	ArgumentList	cc		3503779	1					
ANR	3505195	Argument	cc		3503779	0					
ANR	3505196	Identifier	cc		3503779	0					
ANR	3505197	Argument	& vs		3503779	1					
ANR	3505198	UnaryOperationExpression	& vs		3503779	0					
ANR	3505199	UnaryOperator	&		3503779	0					
ANR	3505200	Identifier	vs		3503779	1					
ANR	3505201	Argument	0		3503779	2					
ANR	3505202	PrimaryExpression	0		3503779	0					
ANR	3505203	Argument	& val_israw		3503779	3					
ANR	3505204	UnaryOperationExpression	& val_israw		3503779	0					
ANR	3505205	UnaryOperator	&		3503779	0					
ANR	3505206	Identifier	val_israw		3503779	1					
ANR	3505207	Argument	0		3503779	4					
ANR	3505208	PrimaryExpression	0		3503779	0					
ANR	3505209	Argument	val_type		3503779	5					
ANR	3505210	Identifier	val_type		3503779	0					
ANR	3505211	Argument	& val_type		3503779	6					
ANR	3505212	UnaryOperationExpression	& val_type		3503779	0					
ANR	3505213	UnaryOperator	&		3503779	0					
ANR	3505214	Identifier	val_type		3503779	1					
ANR	3505215	Argument	& state		3503779	7					
ANR	3505216	UnaryOperationExpression	& state		3503779	0					
ANR	3505217	UnaryOperator	&		3503779	0					
ANR	3505218	Identifier	state		3503779	1					
ANR	3505219	Argument	env		3503779	8					
ANR	3505220	Identifier	env		3503779	0					
ANR	3505221	IfStatement	if ( r != 0 )		3503779	1					
ANR	3505222	Condition	r != 0	4458:8:99126:99131	3503779	0	True				
ANR	3505223	EqualityExpression	r != 0		3503779	0		!=			
ANR	3505224	Identifier	r		3503779	0					
ANR	3505225	PrimaryExpression	0		3503779	1					
ANR	3505226	GotoStatement	goto err ;	4458:16:99134:99142	3503779	1	True				
ANR	3505227	Identifier	err		3503779	0					
ANR	3505228	IfStatement	if ( IS_NOT_NULL ( prev_cc ) )		3503779	23					
ANR	3505229	Condition	IS_NOT_NULL ( prev_cc )	4461:6:99155:99174	3503779	0	True				
ANR	3505230	CallExpression	IS_NOT_NULL ( prev_cc )		3503779	0					
ANR	3505231	Callee	IS_NOT_NULL		3503779	0					
ANR	3505232	Identifier	IS_NOT_NULL		3503779	0					
ANR	3505233	ArgumentList	prev_cc		3503779	1					
ANR	3505234	Argument	prev_cc		3503779	0					
ANR	3505235	Identifier	prev_cc		3503779	0					
ANR	3505236	CompoundStatement		285:28:6284:6284	3503779	1					
ANR	3505237	ExpressionStatement	"r = and_cclass ( prev_cc , cc , env -> enc )"	4462:4:99183:99220	3503779	0	True				
ANR	3505238	AssignmentExpression	"r = and_cclass ( prev_cc , cc , env -> enc )"		3503779	0		=			
ANR	3505239	Identifier	r		3503779	0					
ANR	3505240	CallExpression	"and_cclass ( prev_cc , cc , env -> enc )"		3503779	1					
ANR	3505241	Callee	and_cclass		3503779	0					
ANR	3505242	Identifier	and_cclass		3503779	0					
ANR	3505243	ArgumentList	prev_cc		3503779	1					
ANR	3505244	Argument	prev_cc		3503779	0					
ANR	3505245	Identifier	prev_cc		3503779	0					
ANR	3505246	Argument	cc		3503779	1					
ANR	3505247	Identifier	cc		3503779	0					
ANR	3505248	Argument	env -> enc		3503779	2					
ANR	3505249	PtrMemberAccess	env -> enc		3503779	0					
ANR	3505250	Identifier	env		3503779	0					
ANR	3505251	Identifier	enc		3503779	1					
ANR	3505252	IfStatement	if ( r != 0 )		3503779	1					
ANR	3505253	Condition	r != 0	4463:8:99230:99235	3503779	0	True				
ANR	3505254	EqualityExpression	r != 0		3503779	0		!=			
ANR	3505255	Identifier	r		3503779	0					
ANR	3505256	PrimaryExpression	0		3503779	1					
ANR	3505257	GotoStatement	goto err ;	4463:16:99238:99246	3503779	1	True				
ANR	3505258	Identifier	err		3503779	0					
ANR	3505259	ExpressionStatement	bbuf_free ( cc -> mbuf )	4464:4:99252:99271	3503779	2	True				
ANR	3505260	CallExpression	bbuf_free ( cc -> mbuf )		3503779	0					
ANR	3505261	Callee	bbuf_free		3503779	0					
ANR	3505262	Identifier	bbuf_free		3503779	0					
ANR	3505263	ArgumentList	cc -> mbuf		3503779	1					
ANR	3505264	Argument	cc -> mbuf		3503779	0					
ANR	3505265	PtrMemberAccess	cc -> mbuf		3503779	0					
ANR	3505266	Identifier	cc		3503779	0					
ANR	3505267	Identifier	mbuf		3503779	1					
ANR	3505268	ExpressionStatement	cc = prev_cc	4465:4:99277:99289	3503779	3	True				
ANR	3505269	AssignmentExpression	cc = prev_cc		3503779	0		=			
ANR	3505270	Identifier	cc		3503779	0					
ANR	3505271	Identifier	prev_cc		3503779	1					
ANR	3505272	IfStatement	if ( neg != 0 )		3503779	24					
ANR	3505273	Condition	neg != 0	4468:6:99302:99309	3503779	0	True				
ANR	3505274	EqualityExpression	neg != 0		3503779	0		!=			
ANR	3505275	Identifier	neg		3503779	0					
ANR	3505276	PrimaryExpression	0		3503779	1					
ANR	3505277	ExpressionStatement	NCCLASS_SET_NOT ( cc )	4469:4:99316:99335	3503779	1	True				
ANR	3505278	CallExpression	NCCLASS_SET_NOT ( cc )		3503779	0					
ANR	3505279	Callee	NCCLASS_SET_NOT		3503779	0					
ANR	3505280	Identifier	NCCLASS_SET_NOT		3503779	0					
ANR	3505281	ArgumentList	cc		3503779	1					
ANR	3505282	Argument	cc		3503779	0					
ANR	3505283	Identifier	cc		3503779	0					
ANR	3505284	ElseStatement	else		3503779	0					
ANR	3505285	ExpressionStatement	NCCLASS_CLEAR_NOT ( cc )	4471:4:99348:99369	3503779	0	True				
ANR	3505286	CallExpression	NCCLASS_CLEAR_NOT ( cc )		3503779	0					
ANR	3505287	Callee	NCCLASS_CLEAR_NOT		3503779	0					
ANR	3505288	Identifier	NCCLASS_CLEAR_NOT		3503779	0					
ANR	3505289	ArgumentList	cc		3503779	1					
ANR	3505290	Argument	cc		3503779	0					
ANR	3505291	Identifier	cc		3503779	0					
ANR	3505292	IfStatement	"if ( IS_NCCLASS_NOT ( cc ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC ) )"		3503779	25					
ANR	3505293	Condition	"IS_NCCLASS_NOT ( cc ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC )"	4472:6:99377:99466	3503779	0	True				
ANR	3505294	AndExpression	"IS_NCCLASS_NOT ( cc ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC )"		3503779	0		&&			
ANR	3505295	CallExpression	IS_NCCLASS_NOT ( cc )		3503779	0					
ANR	3505296	Callee	IS_NCCLASS_NOT		3503779	0					
ANR	3505297	Identifier	IS_NCCLASS_NOT		3503779	0					
ANR	3505298	ArgumentList	cc		3503779	1					
ANR	3505299	Argument	cc		3503779	0					
ANR	3505300	Identifier	cc		3503779	0					
ANR	3505301	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC )"		3503779	1					
ANR	3505302	Callee	IS_SYNTAX_BV		3503779	0					
ANR	3505303	Identifier	IS_SYNTAX_BV		3503779	0					
ANR	3505304	ArgumentList	env -> syntax		3503779	1					
ANR	3505305	Argument	env -> syntax		3503779	0					
ANR	3505306	PtrMemberAccess	env -> syntax		3503779	0					
ANR	3505307	Identifier	env		3503779	0					
ANR	3505308	Identifier	syntax		3503779	1					
ANR	3505309	Argument	ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC		3503779	1					
ANR	3505310	Identifier	ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC		3503779	0					
ANR	3505311	CompoundStatement		298:4:6582:6594	3503779	1					
ANR	3505312	IdentifierDeclStatement	int is_empty ;	4474:4:99475:99487	3503779	0	True				
ANR	3505313	IdentifierDecl	is_empty		3503779	0					
ANR	3505314	IdentifierDeclType	int		3503779	0					
ANR	3505315	Identifier	is_empty		3503779	1					
ANR	3505316	ExpressionStatement	is_empty = ( IS_NULL ( cc -> mbuf ) ? 1 : 0 )	4476:4:99494:99532	3503779	1	True				
ANR	3505317	AssignmentExpression	is_empty = ( IS_NULL ( cc -> mbuf ) ? 1 : 0 )		3503779	0		=			
ANR	3505318	Identifier	is_empty		3503779	0					
ANR	3505319	ConditionalExpression	IS_NULL ( cc -> mbuf ) ? 1 : 0		3503779	1					
ANR	3505320	Condition	IS_NULL ( cc -> mbuf )		3503779	0					
ANR	3505321	CallExpression	IS_NULL ( cc -> mbuf )		3503779	0					
ANR	3505322	Callee	IS_NULL		3503779	0					
ANR	3505323	Identifier	IS_NULL		3503779	0					
ANR	3505324	ArgumentList	cc -> mbuf		3503779	1					
ANR	3505325	Argument	cc -> mbuf		3503779	0					
ANR	3505326	PtrMemberAccess	cc -> mbuf		3503779	0					
ANR	3505327	Identifier	cc		3503779	0					
ANR	3505328	Identifier	mbuf		3503779	1					
ANR	3505329	PrimaryExpression	1		3503779	1					
ANR	3505330	PrimaryExpression	0		3503779	2					
ANR	3505331	IfStatement	if ( is_empty != 0 )		3503779	2					
ANR	3505332	Condition	is_empty != 0	4477:8:99542:99554	3503779	0	True				
ANR	3505333	EqualityExpression	is_empty != 0		3503779	0		!=			
ANR	3505334	Identifier	is_empty		3503779	0					
ANR	3505335	PrimaryExpression	0		3503779	1					
ANR	3505336	ExpressionStatement	"BITSET_IS_EMPTY ( cc -> bs , is_empty )"	4478:6:99563:99596	3503779	1	True				
ANR	3505337	CallExpression	"BITSET_IS_EMPTY ( cc -> bs , is_empty )"		3503779	0					
ANR	3505338	Callee	BITSET_IS_EMPTY		3503779	0					
ANR	3505339	Identifier	BITSET_IS_EMPTY		3503779	0					
ANR	3505340	ArgumentList	cc -> bs		3503779	1					
ANR	3505341	Argument	cc -> bs		3503779	0					
ANR	3505342	PtrMemberAccess	cc -> bs		3503779	0					
ANR	3505343	Identifier	cc		3503779	0					
ANR	3505344	Identifier	bs		3503779	1					
ANR	3505345	Argument	is_empty		3503779	1					
ANR	3505346	Identifier	is_empty		3503779	0					
ANR	3505347	IfStatement	if ( is_empty == 0 )		3503779	3					
ANR	3505348	Condition	is_empty == 0	4480:8:99607:99619	3503779	0	True				
ANR	3505349	EqualityExpression	is_empty == 0		3503779	0		==			
ANR	3505350	Identifier	is_empty		3503779	0					
ANR	3505351	PrimaryExpression	0		3503779	1					
ANR	3505352	CompoundStatement		304:23:6729:6729	3503779	1					
ANR	3505353	Statement	define	4481:1:99625:99630	3503779	0	True				
ANR	3505354	Statement	NEWLINE_CODE	4481:8:99632:99643	3503779	1	True				
ANR	3505355	Statement	0x0a	4481:24:99648:99651	3503779	2	True				
ANR	3505356	IfStatement	"if ( ONIGENC_IS_CODE_NEWLINE ( env -> enc , NEWLINE_CODE ) )"		3503779	3					
ANR	3505357	Condition	"ONIGENC_IS_CODE_NEWLINE ( env -> enc , NEWLINE_CODE )"	4483:10:99664:99710	3503779	0	True				
ANR	3505358	CallExpression	"ONIGENC_IS_CODE_NEWLINE ( env -> enc , NEWLINE_CODE )"		3503779	0					
ANR	3505359	Callee	ONIGENC_IS_CODE_NEWLINE		3503779	0					
ANR	3505360	Identifier	ONIGENC_IS_CODE_NEWLINE		3503779	0					
ANR	3505361	ArgumentList	env -> enc		3503779	1					
ANR	3505362	Argument	env -> enc		3503779	0					
ANR	3505363	PtrMemberAccess	env -> enc		3503779	0					
ANR	3505364	Identifier	env		3503779	0					
ANR	3505365	Identifier	enc		3503779	1					
ANR	3505366	Argument	NEWLINE_CODE		3503779	1					
ANR	3505367	Identifier	NEWLINE_CODE		3503779	0					
ANR	3505368	CompoundStatement		307:59:6820:6820	3503779	1					
ANR	3505369	IfStatement	"if ( ONIGENC_CODE_TO_MBCLEN ( env -> enc , NEWLINE_CODE ) == 1 )"		3503779	0					
ANR	3505370	Condition	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , NEWLINE_CODE ) == 1"	4484:12:99727:99777	3503779	0	True				
ANR	3505371	EqualityExpression	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , NEWLINE_CODE ) == 1"		3503779	0		==			
ANR	3505372	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , NEWLINE_CODE )"		3503779	0					
ANR	3505373	Callee	ONIGENC_CODE_TO_MBCLEN		3503779	0					
ANR	3505374	Identifier	ONIGENC_CODE_TO_MBCLEN		3503779	0					
ANR	3505375	ArgumentList	env -> enc		3503779	1					
ANR	3505376	Argument	env -> enc		3503779	0					
ANR	3505377	PtrMemberAccess	env -> enc		3503779	0					
ANR	3505378	Identifier	env		3503779	0					
ANR	3505379	Identifier	enc		3503779	1					
ANR	3505380	Argument	NEWLINE_CODE		3503779	1					
ANR	3505381	Identifier	NEWLINE_CODE		3503779	0					
ANR	3505382	PrimaryExpression	1		3503779	1					
ANR	3505383	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , NEWLINE_CODE )"	4485:10:99790:99826	3503779	1	True				
ANR	3505384	CallExpression	"BITSET_SET_BIT ( cc -> bs , NEWLINE_CODE )"		3503779	0					
ANR	3505385	Callee	BITSET_SET_BIT		3503779	0					
ANR	3505386	Identifier	BITSET_SET_BIT		3503779	0					
ANR	3505387	ArgumentList	cc -> bs		3503779	1					
ANR	3505388	Argument	cc -> bs		3503779	0					
ANR	3505389	PtrMemberAccess	cc -> bs		3503779	0					
ANR	3505390	Identifier	cc		3503779	0					
ANR	3505391	Identifier	bs		3503779	1					
ANR	3505392	Argument	NEWLINE_CODE		3503779	1					
ANR	3505393	Identifier	NEWLINE_CODE		3503779	0					
ANR	3505394	ElseStatement	else		3503779	0					
ANR	3505395	ExpressionStatement	"add_code_range ( & ( cc -> mbuf ) , env , NEWLINE_CODE , NEWLINE_CODE )"	4487:10:99851:99911	3503779	0	True				
ANR	3505396	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , NEWLINE_CODE , NEWLINE_CODE )"		3503779	0					
ANR	3505397	Callee	add_code_range		3503779	0					
ANR	3505398	Identifier	add_code_range		3503779	0					
ANR	3505399	ArgumentList	& ( cc -> mbuf )		3503779	1					
ANR	3505400	Argument	& ( cc -> mbuf )		3503779	0					
ANR	3505401	UnaryOperationExpression	& ( cc -> mbuf )		3503779	0					
ANR	3505402	UnaryOperator	&		3503779	0					
ANR	3505403	PtrMemberAccess	cc -> mbuf		3503779	1					
ANR	3505404	Identifier	cc		3503779	0					
ANR	3505405	Identifier	mbuf		3503779	1					
ANR	3505406	Argument	env		3503779	1					
ANR	3505407	Identifier	env		3503779	0					
ANR	3505408	Argument	NEWLINE_CODE		3503779	2					
ANR	3505409	Identifier	NEWLINE_CODE		3503779	0					
ANR	3505410	Argument	NEWLINE_CODE		3503779	3					
ANR	3505411	Identifier	NEWLINE_CODE		3503779	0					
ANR	3505412	ExpressionStatement	* src = p	4491:2:99933:99941	3503779	26	True				
ANR	3505413	AssignmentExpression	* src = p		3503779	0		=			
ANR	3505414	UnaryOperationExpression	* src		3503779	0					
ANR	3505415	UnaryOperator	*		3503779	0					
ANR	3505416	Identifier	src		3503779	1					
ANR	3505417	Identifier	p		3503779	1					
ANR	3505418	ReturnStatement	return 0 ;	4492:2:99945:99953	3503779	27	True				
ANR	3505419	PrimaryExpression	0		3503779	0					
ANR	3505420	Label	err :	4494:1:99957:99960	3503779	28	True				
ANR	3505421	Identifier	err		3503779	0					
ANR	3505422	IfStatement	if ( cc != NCCLASS ( * np ) )		3503779	29					
ANR	3505423	Condition	cc != NCCLASS ( * np )	4495:6:99968:99985	3503779	0	True				
ANR	3505424	EqualityExpression	cc != NCCLASS ( * np )		3503779	0		!=			
ANR	3505425	Identifier	cc		3503779	0					
ANR	3505426	CallExpression	NCCLASS ( * np )		3503779	1					
ANR	3505427	Callee	NCCLASS		3503779	0					
ANR	3505428	Identifier	NCCLASS		3503779	0					
ANR	3505429	ArgumentList	* np		3503779	1					
ANR	3505430	Argument	* np		3503779	0					
ANR	3505431	UnaryOperationExpression	* np		3503779	0					
ANR	3505432	UnaryOperator	*		3503779	0					
ANR	3505433	Identifier	np		3503779	1					
ANR	3505434	ExpressionStatement	bbuf_free ( cc -> mbuf )	4496:4:99992:100011	3503779	1	True				
ANR	3505435	CallExpression	bbuf_free ( cc -> mbuf )		3503779	0					
ANR	3505436	Callee	bbuf_free		3503779	0					
ANR	3505437	Identifier	bbuf_free		3503779	0					
ANR	3505438	ArgumentList	cc -> mbuf		3503779	1					
ANR	3505439	Argument	cc -> mbuf		3503779	0					
ANR	3505440	PtrMemberAccess	cc -> mbuf		3503779	0					
ANR	3505441	Identifier	cc		3503779	0					
ANR	3505442	Identifier	mbuf		3503779	1					
ANR	3505443	ExpressionStatement	onig_node_free ( * np )	4497:2:100015:100034	3503779	30	True				
ANR	3505444	CallExpression	onig_node_free ( * np )		3503779	0					
ANR	3505445	Callee	onig_node_free		3503779	0					
ANR	3505446	Identifier	onig_node_free		3503779	0					
ANR	3505447	ArgumentList	* np		3503779	1					
ANR	3505448	Argument	* np		3503779	0					
ANR	3505449	UnaryOperationExpression	* np		3503779	0					
ANR	3505450	UnaryOperator	*		3503779	0					
ANR	3505451	Identifier	np		3503779	1					
ANR	3505452	ReturnStatement	return r ;	4498:2:100038:100046	3503779	31	True				
ANR	3505453	Identifier	r		3503779	0					
ANR	3505454	ReturnType	static int		3503779	1					
ANR	3505455	Identifier	parse_char_class		3503779	2					
ANR	3505456	ParameterList	"Node * * np , OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env"		3503779	3					
ANR	3505457	Parameter	Node * * np	4175:17:92823:92831	3503779	0	True				
ANR	3505458	ParameterType	Node * *		3503779	0					
ANR	3505459	Identifier	np		3503779	1					
ANR	3505460	Parameter	OnigToken * tok	4175:28:92834:92847	3503779	1	True				
ANR	3505461	ParameterType	OnigToken *		3503779	0					
ANR	3505462	Identifier	tok		3503779	1					
ANR	3505463	Parameter	UChar * * src	4175:44:92850:92860	3503779	2	True				
ANR	3505464	ParameterType	UChar * *		3503779	0					
ANR	3505465	Identifier	src		3503779	1					
ANR	3505466	Parameter	UChar * end	4175:57:92863:92872	3503779	3	True				
ANR	3505467	ParameterType	UChar *		3503779	0					
ANR	3505468	Identifier	end		3503779	1					
ANR	3505469	Parameter	ScanEnv * env	4176:3:92878:92889	3503779	4	True				
ANR	3505470	ParameterType	ScanEnv *		3503779	0					
ANR	3505471	Identifier	env		3503779	1					
ANR	3505472	CFGEntryNode	ENTRY		3503779		True				
ANR	3505473	CFGExitNode	EXIT		3503779		True				
ANR	3505474	Symbol	ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS		3503779						
ANR	3505475	Symbol	ONIGERR_PREMATURE_END_OF_CHAR_CLASS		3503779						
ANR	3505476	Symbol	node_new_cclass		3503779						
ANR	3505477	Symbol	* cc		3503779						
ANR	3505478	Symbol	cc -> mbuf		3503779						
ANR	3505479	Symbol	parse_char_class		3503779						
ANR	3505480	Symbol	tok -> type		3503779						
ANR	3505481	Symbol	len		3503779						
ANR	3505482	Symbol	TK_CC_CLOSE		3503779						
ANR	3505483	Symbol	CCV_SB		3503779						
ANR	3505484	Symbol	state		3503779						
ANR	3505485	Symbol	tok -> escaped		3503779						
ANR	3505486	Symbol	* buf		3503779						
ANR	3505487	Symbol	or_cclass		3503779						
ANR	3505488	Symbol	TK_CC_AND		3503779						
ANR	3505489	Symbol	cc -> bs		3503779						
ANR	3505490	Symbol	node		3503779						
ANR	3505491	Symbol	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		3503779						
ANR	3505492	Symbol	ONIGENC_IS_CODE_NEWLINE		3503779						
ANR	3505493	Symbol	val_israw		3503779						
ANR	3505494	Symbol	CCV_CODE_POINT		3503779						
ANR	3505495	Symbol	* tok		3503779						
ANR	3505496	Symbol	ONIGENC_CODE_TO_MBC_MAXLEN		3503779						
ANR	3505497	Symbol	& anode		3503779						
ANR	3505498	Symbol	tok -> u . c		3503779						
ANR	3505499	Symbol	& state		3503779						
ANR	3505500	Symbol	in_israw		3503779						
ANR	3505501	Symbol	ONIGENC_MBC_MINLEN		3503779						
ANR	3505502	Symbol	env -> enc		3503779						
ANR	3505503	Symbol	tok		3503779						
ANR	3505504	Symbol	tok -> u . code		3503779						
ANR	3505505	Symbol	ONIGERR_EMPTY_CHAR_CLASS		3503779						
ANR	3505506	Symbol	val_type		3503779						
ANR	3505507	Symbol	& cc -> mbuf		3503779						
ANR	3505508	Symbol	is_empty		3503779						
ANR	3505509	Symbol	cc		3503779						
ANR	3505510	Symbol	& work_cc		3503779						
ANR	3505511	Symbol	tok -> backp		3503779						
ANR	3505512	Symbol	i		3503779						
ANR	3505513	Symbol	anode		3503779						
ANR	3505514	Symbol	& val_type		3503779						
ANR	3505515	Symbol	* np		3503779						
ANR	3505516	Symbol	and_cclass		3503779						
ANR	3505517	Symbol	fetch_token_in_cc		3503779						
ANR	3505518	Symbol	enclen		3503779						
ANR	3505519	Symbol	p		3503779						
ANR	3505520	Symbol	ONIGENC_CODE_TO_MBCLEN		3503779						
ANR	3505521	Symbol	r		3503779						
ANR	3505522	Symbol	buf		3503779						
ANR	3505523	Symbol	v		3503779						
ANR	3505524	Symbol	CCS_VALUE		3503779						
ANR	3505525	Symbol	bufe		3503779						
ANR	3505526	Symbol	tok -> base		3503779						
ANR	3505527	Symbol	fetched		3503779						
ANR	3505528	Symbol	in_type		3503779						
ANR	3505529	Symbol	acc		3503779						
ANR	3505530	Symbol	parse_posix_bracket		3503779						
ANR	3505531	Symbol	IS_NCCLASS_NOT		3503779						
ANR	3505532	Symbol	NCCLASS		3503779						
ANR	3505533	Symbol	psave		3503779						
ANR	3505534	Symbol	* src		3503779						
ANR	3505535	Symbol	neg		3503779						
ANR	3505536	Symbol	tok -> u . prop . not		3503779						
ANR	3505537	Symbol	add_ctype_to_cc		3503779						
ANR	3505538	Symbol	IS_SYNTAX_BV		3503779						
ANR	3505539	Symbol	ONIGENC_MBC_TO_CODE		3503779						
ANR	3505540	Symbol	& val_israw		3503779						
ANR	3505541	Symbol	tok -> u . prop		3503779						
ANR	3505542	Symbol	ONIGENC_IS_SINGLEBYTE		3503779						
ANR	3505543	Symbol	NULL		3503779						
ANR	3505544	Symbol	CCS_START		3503779						
ANR	3505545	Symbol	TK_CC_RANGE		3503779						
ANR	3505546	Symbol	work_cc		3503779						
ANR	3505547	Symbol	NEWLINE_CODE		3503779						
ANR	3505548	Symbol	* env		3503779						
ANR	3505549	Symbol	env -> syntax		3503779						
ANR	3505550	Symbol	ONIGERR_PARSER_BUG		3503779						
ANR	3505551	Symbol	ctype		3503779						
ANR	3505552	Symbol	NULL_NODE		3503779						
ANR	3505553	Symbol	vs		3503779						
ANR	3505554	Symbol	fetch_char_property_to_ctype		3503779						
ANR	3505555	Symbol	and_start		3503779						
ANR	3505556	Symbol	np		3503779						
ANR	3505557	Symbol	IS_NOT_NULL		3503779						
ANR	3505558	Symbol	ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC		3503779						
ANR	3505559	Symbol	code_exist_check		3503779						
ANR	3505560	Symbol	IS_NULL		3503779						
ANR	3505561	Symbol	end		3503779						
ANR	3505562	Symbol	tok -> u		3503779						
ANR	3505563	Symbol	ONIGENC_MBC_MAXLEN		3503779						
ANR	3505564	Symbol	prev_cc		3503779						
ANR	3505565	Symbol	ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC		3503779						
ANR	3505566	Symbol	src		3503779						
ANR	3505567	Symbol	& vs		3503779						
ANR	3505568	Symbol	CCS_RANGE		3503779						
ANR	3505569	Symbol	env		3503779						
ANR	3505570	Symbol	next_state_class		3503779						
ANR	3505571	Symbol	next_state_val		3503779						
ANR	3505572	Symbol	* i		3503779						
ANR	3505573	Symbol	& p		3503779						
ANR	3505574	Symbol	env -> pattern_end		3503779						
ANR	3505575	Symbol	tok -> u . prop . ctype		3503779						
ANR	3505576	Symbol	TK_RAW_BYTE		3503779						
ANR	3505577	Symbol	TK_CHAR		3503779						
ANR	3505578	Symbol	base		3503779						
ANR	3505579	DeclStmt									
ANR	3505580	Decl							int	"int ( Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env )"	parse_subexp
ANR	3505581	Function	parse_enclose	4504:0:100157:106147							
ANR	3505582	FunctionDef	"parse_enclose (Node * * np , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env)"		3505581	0					
ANR	3505583	CompoundStatement		4507:0:100265:106147	3505581	0					
ANR	3505584	IdentifierDeclStatement	"int r , num ;"	4508:2:100269:100279	3505581	0	True				
ANR	3505585	IdentifierDecl	r		3505581	0					
ANR	3505586	IdentifierDeclType	int		3505581	0					
ANR	3505587	Identifier	r		3505581	1					
ANR	3505588	IdentifierDecl	num		3505581	1					
ANR	3505589	IdentifierDeclType	int		3505581	0					
ANR	3505590	Identifier	num		3505581	1					
ANR	3505591	IdentifierDeclStatement	Node * target ;	4509:2:100283:100295	3505581	1	True				
ANR	3505592	IdentifierDecl	* target		3505581	0					
ANR	3505593	IdentifierDeclType	Node *		3505581	0					
ANR	3505594	Identifier	target		3505581	1					
ANR	3505595	IdentifierDeclStatement	OnigOptionType option ;	4510:2:100299:100320	3505581	2	True				
ANR	3505596	IdentifierDecl	option		3505581	0					
ANR	3505597	IdentifierDeclType	OnigOptionType		3505581	0					
ANR	3505598	Identifier	option		3505581	1					
ANR	3505599	IdentifierDeclStatement	OnigCodePoint c ;	4511:2:100324:100339	3505581	3	True				
ANR	3505600	IdentifierDecl	c		3505581	0					
ANR	3505601	IdentifierDeclType	OnigCodePoint		3505581	0					
ANR	3505602	Identifier	c		3505581	1					
ANR	3505603	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	4512:2:100343:100370	3505581	4	True				
ANR	3505604	IdentifierDecl	enc = env -> enc		3505581	0					
ANR	3505605	IdentifierDeclType	OnigEncoding		3505581	0					
ANR	3505606	Identifier	enc		3505581	1					
ANR	3505607	AssignmentExpression	enc = env -> enc		3505581	2		=			
ANR	3505608	Identifier	enc		3505581	0					
ANR	3505609	PtrMemberAccess	env -> enc		3505581	1					
ANR	3505610	Identifier	env		3505581	0					
ANR	3505611	Identifier	enc		3505581	1					
ANR	3505612	IdentifierDeclStatement	int list_capture ;	4515:2:100398:100414	3505581	5	True				
ANR	3505613	IdentifierDecl	list_capture		3505581	0					
ANR	3505614	IdentifierDeclType	int		3505581	0					
ANR	3505615	Identifier	list_capture		3505581	1					
ANR	3505616	IdentifierDeclStatement	UChar * p = * src ;	4518:2:100426:100441	3505581	6	True				
ANR	3505617	IdentifierDecl	* p = * src		3505581	0					
ANR	3505618	IdentifierDeclType	UChar *		3505581	0					
ANR	3505619	Identifier	p		3505581	1					
ANR	3505620	AssignmentExpression	* p = * src		3505581	2		=			
ANR	3505621	Identifier	p		3505581	0					
ANR	3505622	UnaryOperationExpression	* src		3505581	1					
ANR	3505623	UnaryOperator	*		3505581	0					
ANR	3505624	Identifier	src		3505581	1					
ANR	3505625	ExpressionStatement	PFETCH_READY	4519:2:100445:100457	3505581	7	True				
ANR	3505626	Identifier	PFETCH_READY		3505581	0					
ANR	3505627	ExpressionStatement	* np = NULL	4521:2:100462:100472	3505581	8	True				
ANR	3505628	AssignmentExpression	* np = NULL		3505581	0		=			
ANR	3505629	UnaryOperationExpression	* np		3505581	0					
ANR	3505630	UnaryOperator	*		3505581	0					
ANR	3505631	Identifier	np		3505581	1					
ANR	3505632	Identifier	NULL		3505581	1					
ANR	3505633	IfStatement	if ( PEND )		3505581	9					
ANR	3505634	Condition	PEND	4522:6:100480:100483	3505581	0	True				
ANR	3505635	Identifier	PEND		3505581	0					
ANR	3505636	ReturnStatement	return ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS ;	4522:12:100486:100539	3505581	1	True				
ANR	3505637	Identifier	ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS		3505581	0					
ANR	3505638	ExpressionStatement	option = env -> option	4524:2:100544:100564	3505581	10	True				
ANR	3505639	AssignmentExpression	option = env -> option		3505581	0		=			
ANR	3505640	Identifier	option		3505581	0					
ANR	3505641	PtrMemberAccess	env -> option		3505581	1					
ANR	3505642	Identifier	env		3505581	0					
ANR	3505643	Identifier	option		3505581	1					
ANR	3505644	IfStatement	"if ( PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_GROUP_EFFECT ) )"		3505581	11					
ANR	3505645	Condition	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"	4525:6:100572:100653	3505581	0	True				
ANR	3505646	AndExpression	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"		3505581	0		&&			
ANR	3505647	CallExpression	PPEEK_IS ( '?' )		3505581	0					
ANR	3505648	Callee	PPEEK_IS		3505581	0					
ANR	3505649	Identifier	PPEEK_IS		3505581	0					
ANR	3505650	ArgumentList	'?'		3505581	1					
ANR	3505651	Argument	'?'		3505581	0					
ANR	3505652	PrimaryExpression	'?'		3505581	0					
ANR	3505653	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"		3505581	1					
ANR	3505654	Callee	IS_SYNTAX_OP2		3505581	0					
ANR	3505655	Identifier	IS_SYNTAX_OP2		3505581	0					
ANR	3505656	ArgumentList	env -> syntax		3505581	1					
ANR	3505657	Argument	env -> syntax		3505581	0					
ANR	3505658	PtrMemberAccess	env -> syntax		3505581	0					
ANR	3505659	Identifier	env		3505581	0					
ANR	3505660	Identifier	syntax		3505581	1					
ANR	3505661	Argument	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		3505581	1					
ANR	3505662	Identifier	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		3505581	0					
ANR	3505663	CompoundStatement		20:67:390:390	3505581	1					
ANR	3505664	ExpressionStatement	PINC	4527:4:100662:100666	3505581	0	True				
ANR	3505665	Identifier	PINC		3505581	0					
ANR	3505666	IfStatement	if ( PEND )		3505581	1					
ANR	3505667	Condition	PEND	4528:8:100676:100679	3505581	0	True				
ANR	3505668	Identifier	PEND		3505581	0					
ANR	3505669	ReturnStatement	return ONIGERR_END_PATTERN_IN_GROUP ;	4528:14:100682:100717	3505581	1	True				
ANR	3505670	Identifier	ONIGERR_END_PATTERN_IN_GROUP		3505581	0					
ANR	3505671	ExpressionStatement	PFETCH ( c )	4530:4:100724:100733	3505581	2	True				
ANR	3505672	CallExpression	PFETCH ( c )		3505581	0					
ANR	3505673	Callee	PFETCH		3505581	0					
ANR	3505674	Identifier	PFETCH		3505581	0					
ANR	3505675	ArgumentList	c		3505581	1					
ANR	3505676	Argument	c		3505581	0					
ANR	3505677	Identifier	c		3505581	0					
ANR	3505678	SwitchStatement	switch ( c )		3505581	3					
ANR	3505679	Condition	c	4531:12:100747:100747	3505581	0	True				
ANR	3505680	Identifier	c		3505581	0					
ANR	3505681	CompoundStatement		25:15:484:484	3505581	1					
ANR	3505682	Label	case ':' :	4532:4:100756:100764	3505581	0	True				
ANR	3505683	Label	group :	4533:4:100800:100805	3505581	1	True				
ANR	3505684	Identifier	group		3505581	0					
ANR	3505685	ExpressionStatement	"r = fetch_token ( tok , & p , end , env )"	4534:6:100813:100847	3505581	2	True				
ANR	3505686	AssignmentExpression	"r = fetch_token ( tok , & p , end , env )"		3505581	0		=			
ANR	3505687	Identifier	r		3505581	0					
ANR	3505688	CallExpression	"fetch_token ( tok , & p , end , env )"		3505581	1					
ANR	3505689	Callee	fetch_token		3505581	0					
ANR	3505690	Identifier	fetch_token		3505581	0					
ANR	3505691	ArgumentList	tok		3505581	1					
ANR	3505692	Argument	tok		3505581	0					
ANR	3505693	Identifier	tok		3505581	0					
ANR	3505694	Argument	& p		3505581	1					
ANR	3505695	UnaryOperationExpression	& p		3505581	0					
ANR	3505696	UnaryOperator	&		3505581	0					
ANR	3505697	Identifier	p		3505581	1					
ANR	3505698	Argument	end		3505581	2					
ANR	3505699	Identifier	end		3505581	0					
ANR	3505700	Argument	env		3505581	3					
ANR	3505701	Identifier	env		3505581	0					
ANR	3505702	IfStatement	if ( r < 0 )		3505581	3					
ANR	3505703	Condition	r < 0	4535:10:100859:100863	3505581	0	True				
ANR	3505704	RelationalExpression	r < 0		3505581	0		<			
ANR	3505705	Identifier	r		3505581	0					
ANR	3505706	PrimaryExpression	0		3505581	1					
ANR	3505707	ReturnStatement	return r ;	4535:17:100866:100874	3505581	1	True				
ANR	3505708	Identifier	r		3505581	0					
ANR	3505709	ExpressionStatement	"r = parse_subexp ( np , tok , term , & p , end , env )"	4536:6:100882:100927	3505581	4	True				
ANR	3505710	AssignmentExpression	"r = parse_subexp ( np , tok , term , & p , end , env )"		3505581	0		=			
ANR	3505711	Identifier	r		3505581	0					
ANR	3505712	CallExpression	"parse_subexp ( np , tok , term , & p , end , env )"		3505581	1					
ANR	3505713	Callee	parse_subexp		3505581	0					
ANR	3505714	Identifier	parse_subexp		3505581	0					
ANR	3505715	ArgumentList	np		3505581	1					
ANR	3505716	Argument	np		3505581	0					
ANR	3505717	Identifier	np		3505581	0					
ANR	3505718	Argument	tok		3505581	1					
ANR	3505719	Identifier	tok		3505581	0					
ANR	3505720	Argument	term		3505581	2					
ANR	3505721	Identifier	term		3505581	0					
ANR	3505722	Argument	& p		3505581	3					
ANR	3505723	UnaryOperationExpression	& p		3505581	0					
ANR	3505724	UnaryOperator	&		3505581	0					
ANR	3505725	Identifier	p		3505581	1					
ANR	3505726	Argument	end		3505581	4					
ANR	3505727	Identifier	end		3505581	0					
ANR	3505728	Argument	env		3505581	5					
ANR	3505729	Identifier	env		3505581	0					
ANR	3505730	IfStatement	if ( r < 0 )		3505581	5					
ANR	3505731	Condition	r < 0	4537:10:100939:100943	3505581	0	True				
ANR	3505732	RelationalExpression	r < 0		3505581	0		<			
ANR	3505733	Identifier	r		3505581	0					
ANR	3505734	PrimaryExpression	0		3505581	1					
ANR	3505735	ReturnStatement	return r ;	4537:17:100946:100954	3505581	1	True				
ANR	3505736	Identifier	r		3505581	0					
ANR	3505737	ExpressionStatement	* src = p	4538:6:100962:100970	3505581	6	True				
ANR	3505738	AssignmentExpression	* src = p		3505581	0		=			
ANR	3505739	UnaryOperationExpression	* src		3505581	0					
ANR	3505740	UnaryOperator	*		3505581	0					
ANR	3505741	Identifier	src		3505581	1					
ANR	3505742	Identifier	p		3505581	1					
ANR	3505743	ReturnStatement	return 1 ;	4539:6:100978:100986	3505581	7	True				
ANR	3505744	PrimaryExpression	1		3505581	0					
ANR	3505745	BreakStatement	break ;	4540:6:101006:101011	3505581	8	True				
ANR	3505746	Label	case '=' :	4542:4:101018:101026	3505581	9	True				
ANR	3505747	ExpressionStatement	* np = onig_node_new_anchor ( ANCHOR_PREC_READ )	4543:6:101034:101078	3505581	10	True				
ANR	3505748	AssignmentExpression	* np = onig_node_new_anchor ( ANCHOR_PREC_READ )		3505581	0		=			
ANR	3505749	UnaryOperationExpression	* np		3505581	0					
ANR	3505750	UnaryOperator	*		3505581	0					
ANR	3505751	Identifier	np		3505581	1					
ANR	3505752	CallExpression	onig_node_new_anchor ( ANCHOR_PREC_READ )		3505581	1					
ANR	3505753	Callee	onig_node_new_anchor		3505581	0					
ANR	3505754	Identifier	onig_node_new_anchor		3505581	0					
ANR	3505755	ArgumentList	ANCHOR_PREC_READ		3505581	1					
ANR	3505756	Argument	ANCHOR_PREC_READ		3505581	0					
ANR	3505757	Identifier	ANCHOR_PREC_READ		3505581	0					
ANR	3505758	BreakStatement	break ;	4544:6:101086:101091	3505581	11	True				
ANR	3505759	Label	case '!' :	4545:4:101097:101105	3505581	12	True				
ANR	3505760	ExpressionStatement	* np = onig_node_new_anchor ( ANCHOR_PREC_READ_NOT )	4546:6:101143:101191	3505581	13	True				
ANR	3505761	AssignmentExpression	* np = onig_node_new_anchor ( ANCHOR_PREC_READ_NOT )		3505581	0		=			
ANR	3505762	UnaryOperationExpression	* np		3505581	0					
ANR	3505763	UnaryOperator	*		3505581	0					
ANR	3505764	Identifier	np		3505581	1					
ANR	3505765	CallExpression	onig_node_new_anchor ( ANCHOR_PREC_READ_NOT )		3505581	1					
ANR	3505766	Callee	onig_node_new_anchor		3505581	0					
ANR	3505767	Identifier	onig_node_new_anchor		3505581	0					
ANR	3505768	ArgumentList	ANCHOR_PREC_READ_NOT		3505581	1					
ANR	3505769	Argument	ANCHOR_PREC_READ_NOT		3505581	0					
ANR	3505770	Identifier	ANCHOR_PREC_READ_NOT		3505581	0					
ANR	3505771	BreakStatement	break ;	4547:6:101199:101204	3505581	14	True				
ANR	3505772	Label	case '>' :	4548:4:101210:101218	3505581	15	True				
ANR	3505773	ExpressionStatement	* np = node_new_enclose ( ENCLOSE_STOP_BACKTRACK )	4549:6:101266:101312	3505581	16	True				
ANR	3505774	AssignmentExpression	* np = node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		3505581	0		=			
ANR	3505775	UnaryOperationExpression	* np		3505581	0					
ANR	3505776	UnaryOperator	*		3505581	0					
ANR	3505777	Identifier	np		3505581	1					
ANR	3505778	CallExpression	node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		3505581	1					
ANR	3505779	Callee	node_new_enclose		3505581	0					
ANR	3505780	Identifier	node_new_enclose		3505581	0					
ANR	3505781	ArgumentList	ENCLOSE_STOP_BACKTRACK		3505581	1					
ANR	3505782	Argument	ENCLOSE_STOP_BACKTRACK		3505581	0					
ANR	3505783	Identifier	ENCLOSE_STOP_BACKTRACK		3505581	0					
ANR	3505784	BreakStatement	break ;	4550:6:101320:101325	3505581	17	True				
ANR	3505785	Label	case '\\'' :	4553:4:101355:101364	3505581	18	True				
ANR	3505786	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP ) )"		3505581	19					
ANR	3505787	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"	4554:10:101376:101436	3505581	0	True				
ANR	3505788	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"		3505581	0					
ANR	3505789	Callee	IS_SYNTAX_OP2		3505581	0					
ANR	3505790	Identifier	IS_SYNTAX_OP2		3505581	0					
ANR	3505791	ArgumentList	env -> syntax		3505581	1					
ANR	3505792	Argument	env -> syntax		3505581	0					
ANR	3505793	PtrMemberAccess	env -> syntax		3505581	0					
ANR	3505794	Identifier	env		3505581	0					
ANR	3505795	Identifier	syntax		3505581	1					
ANR	3505796	Argument	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		3505581	1					
ANR	3505797	Identifier	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		3505581	0					
ANR	3505798	CompoundStatement		48:73:1173:1173	3505581	1					
ANR	3505799	GotoStatement	goto named_group1 ;	4555:1:101442:101459	3505581	0	True				
ANR	3505800	Identifier	named_group1		3505581	0					
ANR	3505801	ElseStatement	else		3505581	0					
ANR	3505802	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4558:1:101481:101518	3505581	0	True				
ANR	3505803	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		3505581	0					
ANR	3505804	BreakStatement	break ;	4559:6:101526:101531	3505581	20	True				
ANR	3505805	Label	case '<' :	4562:4:101545:101553	3505581	21	True				
ANR	3505806	ExpressionStatement	PFETCH ( c )	4563:6:101600:101609	3505581	22	True				
ANR	3505807	CallExpression	PFETCH ( c )		3505581	0					
ANR	3505808	Callee	PFETCH		3505581	0					
ANR	3505809	Identifier	PFETCH		3505581	0					
ANR	3505810	ArgumentList	c		3505581	1					
ANR	3505811	Argument	c		3505581	0					
ANR	3505812	Identifier	c		3505581	0					
ANR	3505813	IfStatement	if ( c == '=' )		3505581	23					
ANR	3505814	Condition	c == '='	4564:10:101621:101628	3505581	0	True				
ANR	3505815	EqualityExpression	c == '='		3505581	0		==			
ANR	3505816	Identifier	c		3505581	0					
ANR	3505817	PrimaryExpression	'='		3505581	1					
ANR	3505818	ExpressionStatement	* np = onig_node_new_anchor ( ANCHOR_LOOK_BEHIND )	4565:1:101632:101678	3505581	1	True				
ANR	3505819	AssignmentExpression	* np = onig_node_new_anchor ( ANCHOR_LOOK_BEHIND )		3505581	0		=			
ANR	3505820	UnaryOperationExpression	* np		3505581	0					
ANR	3505821	UnaryOperator	*		3505581	0					
ANR	3505822	Identifier	np		3505581	1					
ANR	3505823	CallExpression	onig_node_new_anchor ( ANCHOR_LOOK_BEHIND )		3505581	1					
ANR	3505824	Callee	onig_node_new_anchor		3505581	0					
ANR	3505825	Identifier	onig_node_new_anchor		3505581	0					
ANR	3505826	ArgumentList	ANCHOR_LOOK_BEHIND		3505581	1					
ANR	3505827	Argument	ANCHOR_LOOK_BEHIND		3505581	0					
ANR	3505828	Identifier	ANCHOR_LOOK_BEHIND		3505581	0					
ANR	3505829	ElseStatement	else		3505581	0					
ANR	3505830	IfStatement	if ( c == '!' )		3505581	0					
ANR	3505831	Condition	c == '!'	4566:15:101695:101702	3505581	0	True				
ANR	3505832	EqualityExpression	c == '!'		3505581	0		==			
ANR	3505833	Identifier	c		3505581	0					
ANR	3505834	PrimaryExpression	'!'		3505581	1					
ANR	3505835	ExpressionStatement	* np = onig_node_new_anchor ( ANCHOR_LOOK_BEHIND_NOT )	4567:1:101706:101756	3505581	1	True				
ANR	3505836	AssignmentExpression	* np = onig_node_new_anchor ( ANCHOR_LOOK_BEHIND_NOT )		3505581	0		=			
ANR	3505837	UnaryOperationExpression	* np		3505581	0					
ANR	3505838	UnaryOperator	*		3505581	0					
ANR	3505839	Identifier	np		3505581	1					
ANR	3505840	CallExpression	onig_node_new_anchor ( ANCHOR_LOOK_BEHIND_NOT )		3505581	1					
ANR	3505841	Callee	onig_node_new_anchor		3505581	0					
ANR	3505842	Identifier	onig_node_new_anchor		3505581	0					
ANR	3505843	ArgumentList	ANCHOR_LOOK_BEHIND_NOT		3505581	1					
ANR	3505844	Argument	ANCHOR_LOOK_BEHIND_NOT		3505581	0					
ANR	3505845	Identifier	ANCHOR_LOOK_BEHIND_NOT		3505581	0					
ANR	3505846	ElseStatement	else		3505581	0					
ANR	3505847	CompoundStatement		63:11:1526:1526	3505581	0					
ANR	3505848	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP ) )"		3505581	0					
ANR	3505849	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"	4570:5:101799:101859	3505581	0	True				
ANR	3505850	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"		3505581	0					
ANR	3505851	Callee	IS_SYNTAX_OP2		3505581	0					
ANR	3505852	Identifier	IS_SYNTAX_OP2		3505581	0					
ANR	3505853	ArgumentList	env -> syntax		3505581	1					
ANR	3505854	Argument	env -> syntax		3505581	0					
ANR	3505855	PtrMemberAccess	env -> syntax		3505581	0					
ANR	3505856	Identifier	env		3505581	0					
ANR	3505857	Identifier	syntax		3505581	1					
ANR	3505858	Argument	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		3505581	1					
ANR	3505859	Identifier	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		3505581	0					
ANR	3505860	CompoundStatement		66:3:1617:1632	3505581	1					
ANR	3505861	IdentifierDeclStatement	UChar * name ;	4571:3:101867:101878	3505581	0	True				
ANR	3505862	IdentifierDecl	* name		3505581	0					
ANR	3505863	IdentifierDeclType	UChar *		3505581	0					
ANR	3505864	Identifier	name		3505581	1					
ANR	3505865	IdentifierDeclStatement	UChar * name_end ;	4572:3:101883:101898	3505581	1	True				
ANR	3505866	IdentifierDecl	* name_end		3505581	0					
ANR	3505867	IdentifierDeclType	UChar *		3505581	0					
ANR	3505868	Identifier	name_end		3505581	1					
ANR	3505869	ExpressionStatement	PUNFETCH	4574:3:101904:101912	3505581	2	True				
ANR	3505870	Identifier	PUNFETCH		3505581	0					
ANR	3505871	ExpressionStatement	c = '<'	4575:3:101917:101924	3505581	3	True				
ANR	3505872	AssignmentExpression	c = '<'		3505581	0		=			
ANR	3505873	Identifier	c		3505581	0					
ANR	3505874	PrimaryExpression	'<'		3505581	1					
ANR	3505875	Label	named_group1 :	4577:1:101928:101940	3505581	4	True				
ANR	3505876	Identifier	named_group1		3505581	0					
ANR	3505877	ExpressionStatement	list_capture = 0	4578:3:101945:101961	3505581	5	True				
ANR	3505878	AssignmentExpression	list_capture = 0		3505581	0		=			
ANR	3505879	Identifier	list_capture		3505581	0					
ANR	3505880	PrimaryExpression	0		3505581	1					
ANR	3505881	Label	named_group2 :	4580:1:101965:101977	3505581	6	True				
ANR	3505882	Identifier	named_group2		3505581	0					
ANR	3505883	ExpressionStatement	name = p	4581:3:101982:101990	3505581	7	True				
ANR	3505884	AssignmentExpression	name = p		3505581	0		=			
ANR	3505885	Identifier	name		3505581	0					
ANR	3505886	Identifier	p		3505581	1					
ANR	3505887	ExpressionStatement	"r = fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & num , 0 )"	4582:3:101995:102062	3505581	8	True				
ANR	3505888	AssignmentExpression	"r = fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & num , 0 )"		3505581	0		=			
ANR	3505889	Identifier	r		3505581	0					
ANR	3505890	CallExpression	"fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & num , 0 )"		3505581	1					
ANR	3505891	Callee	fetch_name		3505581	0					
ANR	3505892	Identifier	fetch_name		3505581	0					
ANR	3505893	ArgumentList	( OnigCodePoint ) c		3505581	1					
ANR	3505894	Argument	( OnigCodePoint ) c		3505581	0					
ANR	3505895	CastExpression	( OnigCodePoint ) c		3505581	0					
ANR	3505896	CastTarget	OnigCodePoint		3505581	0					
ANR	3505897	Identifier	c		3505581	1					
ANR	3505898	Argument	& p		3505581	1					
ANR	3505899	UnaryOperationExpression	& p		3505581	0					
ANR	3505900	UnaryOperator	&		3505581	0					
ANR	3505901	Identifier	p		3505581	1					
ANR	3505902	Argument	end		3505581	2					
ANR	3505903	Identifier	end		3505581	0					
ANR	3505904	Argument	& name_end		3505581	3					
ANR	3505905	UnaryOperationExpression	& name_end		3505581	0					
ANR	3505906	UnaryOperator	&		3505581	0					
ANR	3505907	Identifier	name_end		3505581	1					
ANR	3505908	Argument	env		3505581	4					
ANR	3505909	Identifier	env		3505581	0					
ANR	3505910	Argument	& num		3505581	5					
ANR	3505911	UnaryOperationExpression	& num		3505581	0					
ANR	3505912	UnaryOperator	&		3505581	0					
ANR	3505913	Identifier	num		3505581	1					
ANR	3505914	Argument	0		3505581	6					
ANR	3505915	PrimaryExpression	0		3505581	0					
ANR	3505916	IfStatement	if ( r < 0 )		3505581	9					
ANR	3505917	Condition	r < 0	4583:7:102071:102075	3505581	0	True				
ANR	3505918	RelationalExpression	r < 0		3505581	0		<			
ANR	3505919	Identifier	r		3505581	0					
ANR	3505920	PrimaryExpression	0		3505581	1					
ANR	3505921	ReturnStatement	return r ;	4583:14:102078:102086	3505581	1	True				
ANR	3505922	Identifier	r		3505581	0					
ANR	3505923	ExpressionStatement	num = scan_env_add_mem_entry ( env )	4585:3:102092:102125	3505581	10	True				
ANR	3505924	AssignmentExpression	num = scan_env_add_mem_entry ( env )		3505581	0		=			
ANR	3505925	Identifier	num		3505581	0					
ANR	3505926	CallExpression	scan_env_add_mem_entry ( env )		3505581	1					
ANR	3505927	Callee	scan_env_add_mem_entry		3505581	0					
ANR	3505928	Identifier	scan_env_add_mem_entry		3505581	0					
ANR	3505929	ArgumentList	env		3505581	1					
ANR	3505930	Argument	env		3505581	0					
ANR	3505931	Identifier	env		3505581	0					
ANR	3505932	IfStatement	if ( num < 0 )		3505581	11					
ANR	3505933	Condition	num < 0	4586:7:102134:102140	3505581	0	True				
ANR	3505934	RelationalExpression	num < 0		3505581	0		<			
ANR	3505935	Identifier	num		3505581	0					
ANR	3505936	PrimaryExpression	0		3505581	1					
ANR	3505937	ReturnStatement	return num ;	4586:16:102143:102153	3505581	1	True				
ANR	3505938	Identifier	num		3505581	0					
ANR	3505939	IfStatement	if ( list_capture != 0 && num >= ( int ) BIT_STATUS_BITS_NUM )		3505581	12					
ANR	3505940	Condition	list_capture != 0 && num >= ( int ) BIT_STATUS_BITS_NUM	4587:7:102162:102214	3505581	0	True				
ANR	3505941	AndExpression	list_capture != 0 && num >= ( int ) BIT_STATUS_BITS_NUM		3505581	0		&&			
ANR	3505942	EqualityExpression	list_capture != 0		3505581	0		!=			
ANR	3505943	Identifier	list_capture		3505581	0					
ANR	3505944	PrimaryExpression	0		3505581	1					
ANR	3505945	RelationalExpression	num >= ( int ) BIT_STATUS_BITS_NUM		3505581	1		>=			
ANR	3505946	Identifier	num		3505581	0					
ANR	3505947	CastExpression	( int ) BIT_STATUS_BITS_NUM		3505581	1					
ANR	3505948	CastTarget	int		3505581	0					
ANR	3505949	Identifier	BIT_STATUS_BITS_NUM		3505581	1					
ANR	3505950	ReturnStatement	return ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY ;	4588:5:102222:102274	3505581	1	True				
ANR	3505951	Identifier	ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY		3505581	0					
ANR	3505952	ExpressionStatement	"r = name_add ( env -> reg , name , name_end , num , env )"	4590:3:102280:102328	3505581	13	True				
ANR	3505953	AssignmentExpression	"r = name_add ( env -> reg , name , name_end , num , env )"		3505581	0		=			
ANR	3505954	Identifier	r		3505581	0					
ANR	3505955	CallExpression	"name_add ( env -> reg , name , name_end , num , env )"		3505581	1					
ANR	3505956	Callee	name_add		3505581	0					
ANR	3505957	Identifier	name_add		3505581	0					
ANR	3505958	ArgumentList	env -> reg		3505581	1					
ANR	3505959	Argument	env -> reg		3505581	0					
ANR	3505960	PtrMemberAccess	env -> reg		3505581	0					
ANR	3505961	Identifier	env		3505581	0					
ANR	3505962	Identifier	reg		3505581	1					
ANR	3505963	Argument	name		3505581	1					
ANR	3505964	Identifier	name		3505581	0					
ANR	3505965	Argument	name_end		3505581	2					
ANR	3505966	Identifier	name_end		3505581	0					
ANR	3505967	Argument	num		3505581	3					
ANR	3505968	Identifier	num		3505581	0					
ANR	3505969	Argument	env		3505581	4					
ANR	3505970	Identifier	env		3505581	0					
ANR	3505971	IfStatement	if ( r != 0 )		3505581	14					
ANR	3505972	Condition	r != 0	4591:7:102337:102342	3505581	0	True				
ANR	3505973	EqualityExpression	r != 0		3505581	0		!=			
ANR	3505974	Identifier	r		3505581	0					
ANR	3505975	PrimaryExpression	0		3505581	1					
ANR	3505976	ReturnStatement	return r ;	4591:15:102345:102353	3505581	1	True				
ANR	3505977	Identifier	r		3505581	0					
ANR	3505978	ExpressionStatement	"* np = node_new_enclose_memory ( env -> option , 1 )"	4592:3:102358:102403	3505581	15	True				
ANR	3505979	AssignmentExpression	"* np = node_new_enclose_memory ( env -> option , 1 )"		3505581	0		=			
ANR	3505980	UnaryOperationExpression	* np		3505581	0					
ANR	3505981	UnaryOperator	*		3505581	0					
ANR	3505982	Identifier	np		3505581	1					
ANR	3505983	CallExpression	"node_new_enclose_memory ( env -> option , 1 )"		3505581	1					
ANR	3505984	Callee	node_new_enclose_memory		3505581	0					
ANR	3505985	Identifier	node_new_enclose_memory		3505581	0					
ANR	3505986	ArgumentList	env -> option		3505581	1					
ANR	3505987	Argument	env -> option		3505581	0					
ANR	3505988	PtrMemberAccess	env -> option		3505581	0					
ANR	3505989	Identifier	env		3505581	0					
ANR	3505990	Identifier	option		3505581	1					
ANR	3505991	Argument	1		3505581	1					
ANR	3505992	PrimaryExpression	1		3505581	0					
ANR	3505993	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4593:3:102408:102437	3505581	16	True				
ANR	3505994	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3505581	0					
ANR	3505995	Callee	CHECK_NULL_RETURN_MEMERR		3505581	0					
ANR	3505996	Identifier	CHECK_NULL_RETURN_MEMERR		3505581	0					
ANR	3505997	ArgumentList	* np		3505581	1					
ANR	3505998	Argument	* np		3505581	0					
ANR	3505999	UnaryOperationExpression	* np		3505581	0					
ANR	3506000	UnaryOperator	*		3505581	0					
ANR	3506001	Identifier	np		3505581	1					
ANR	3506002	ExpressionStatement	NENCLOSE ( * np ) -> regnum = num	4594:3:102442:102469	3505581	17	True				
ANR	3506003	AssignmentExpression	NENCLOSE ( * np ) -> regnum = num		3505581	0		=			
ANR	3506004	PtrMemberAccess	NENCLOSE ( * np ) -> regnum		3505581	0					
ANR	3506005	CallExpression	NENCLOSE ( * np )		3505581	0					
ANR	3506006	Callee	NENCLOSE		3505581	0					
ANR	3506007	Identifier	NENCLOSE		3505581	0					
ANR	3506008	ArgumentList	* np		3505581	1					
ANR	3506009	Argument	* np		3505581	0					
ANR	3506010	UnaryOperationExpression	* np		3505581	0					
ANR	3506011	UnaryOperator	*		3505581	0					
ANR	3506012	Identifier	np		3505581	1					
ANR	3506013	Identifier	regnum		3505581	1					
ANR	3506014	Identifier	num		3505581	1					
ANR	3506015	IfStatement	if ( list_capture != 0 )		3505581	18					
ANR	3506016	Condition	list_capture != 0	4595:7:102478:102494	3505581	0	True				
ANR	3506017	EqualityExpression	list_capture != 0		3505581	0		!=			
ANR	3506018	Identifier	list_capture		3505581	0					
ANR	3506019	PrimaryExpression	0		3505581	1					
ANR	3506020	ExpressionStatement	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , num )"	4596:5:102502:102552	3505581	1	True				
ANR	3506021	CallExpression	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , num )"		3505581	0					
ANR	3506022	Callee	BIT_STATUS_ON_AT_SIMPLE		3505581	0					
ANR	3506023	Identifier	BIT_STATUS_ON_AT_SIMPLE		3505581	0					
ANR	3506024	ArgumentList	env -> capture_history		3505581	1					
ANR	3506025	Argument	env -> capture_history		3505581	0					
ANR	3506026	PtrMemberAccess	env -> capture_history		3505581	0					
ANR	3506027	Identifier	env		3505581	0					
ANR	3506028	Identifier	capture_history		3505581	1					
ANR	3506029	Argument	num		3505581	1					
ANR	3506030	Identifier	num		3505581	0					
ANR	3506031	ExpressionStatement	env -> num_named ++	4597:3:102557:102573	3505581	19	True				
ANR	3506032	PostIncDecOperationExpression	env -> num_named ++		3505581	0					
ANR	3506033	PtrMemberAccess	env -> num_named		3505581	0					
ANR	3506034	Identifier	env		3505581	0					
ANR	3506035	Identifier	num_named		3505581	1					
ANR	3506036	IncDec	++		3505581	1					
ANR	3506037	ElseStatement	else		3505581	0					
ANR	3506038	CompoundStatement		93:6:2318:2318	3505581	0					
ANR	3506039	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4600:3:102589:102626	3505581	0	True				
ANR	3506040	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		3505581	0					
ANR	3506041	BreakStatement	break ;	4608:6:102719:102724	3505581	24	True				
ANR	3506042	Label	case '@' :	4610:4:102731:102739	3505581	25	True				
ANR	3506043	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY ) )"		3505581	26					
ANR	3506044	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY )"	4611:10:102751:102813	3505581	0	True				
ANR	3506045	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY )"		3505581	0					
ANR	3506046	Callee	IS_SYNTAX_OP2		3505581	0					
ANR	3506047	Identifier	IS_SYNTAX_OP2		3505581	0					
ANR	3506048	ArgumentList	env -> syntax		3505581	1					
ANR	3506049	Argument	env -> syntax		3505581	0					
ANR	3506050	PtrMemberAccess	env -> syntax		3505581	0					
ANR	3506051	Identifier	env		3505581	0					
ANR	3506052	Identifier	syntax		3505581	1					
ANR	3506053	Argument	ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY		3505581	1					
ANR	3506054	Identifier	ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY		3505581	0					
ANR	3506055	CompoundStatement		105:75:2550:2550	3505581	1					
ANR	3506056	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP ) )"		3505581	0					
ANR	3506057	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"	4613:5:102846:102906	3505581	0	True				
ANR	3506058	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"		3505581	0					
ANR	3506059	Callee	IS_SYNTAX_OP2		3505581	0					
ANR	3506060	Identifier	IS_SYNTAX_OP2		3505581	0					
ANR	3506061	ArgumentList	env -> syntax		3505581	1					
ANR	3506062	Argument	env -> syntax		3505581	0					
ANR	3506063	PtrMemberAccess	env -> syntax		3505581	0					
ANR	3506064	Identifier	env		3505581	0					
ANR	3506065	Identifier	syntax		3505581	1					
ANR	3506066	Argument	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		3505581	1					
ANR	3506067	Identifier	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		3505581	0					
ANR	3506068	CompoundStatement		107:68:2643:2643	3505581	1					
ANR	3506069	ExpressionStatement	PFETCH ( c )	4614:3:102914:102923	3505581	0	True				
ANR	3506070	CallExpression	PFETCH ( c )		3505581	0					
ANR	3506071	Callee	PFETCH		3505581	0					
ANR	3506072	Identifier	PFETCH		3505581	0					
ANR	3506073	ArgumentList	c		3505581	1					
ANR	3506074	Argument	c		3505581	0					
ANR	3506075	Identifier	c		3505581	0					
ANR	3506076	IfStatement	if ( c == '<' || c == '\\'' )		3505581	1					
ANR	3506077	Condition	c == '<' || c == '\\''	4615:7:102932:102952	3505581	0	True				
ANR	3506078	OrExpression	c == '<' || c == '\\''		3505581	0		||			
ANR	3506079	EqualityExpression	c == '<'		3505581	0		==			
ANR	3506080	Identifier	c		3505581	0					
ANR	3506081	PrimaryExpression	'<'		3505581	1					
ANR	3506082	EqualityExpression	c == '\\''		3505581	1		==			
ANR	3506083	Identifier	c		3505581	0					
ANR	3506084	PrimaryExpression	'\\''		3505581	1					
ANR	3506085	CompoundStatement		109:30:2689:2689	3505581	1					
ANR	3506086	ExpressionStatement	list_capture = 1	4616:5:102962:102978	3505581	0	True				
ANR	3506087	AssignmentExpression	list_capture = 1		3505581	0		=			
ANR	3506088	Identifier	list_capture		3505581	0					
ANR	3506089	PrimaryExpression	1		3505581	1					
ANR	3506090	GotoStatement	goto named_group2 ;	4617:5:102985:103002	3505581	1	True				
ANR	3506091	Identifier	named_group2		3505581	0					
ANR	3506092	ExpressionStatement	PUNFETCH	4619:3:103032:103040	3505581	2	True				
ANR	3506093	Identifier	PUNFETCH		3505581	0					
ANR	3506094	ExpressionStatement	"* np = node_new_enclose_memory ( env -> option , 0 )"	4622:1:103053:103098	3505581	1	True				
ANR	3506095	AssignmentExpression	"* np = node_new_enclose_memory ( env -> option , 0 )"		3505581	0		=			
ANR	3506096	UnaryOperationExpression	* np		3505581	0					
ANR	3506097	UnaryOperator	*		3505581	0					
ANR	3506098	Identifier	np		3505581	1					
ANR	3506099	CallExpression	"node_new_enclose_memory ( env -> option , 0 )"		3505581	1					
ANR	3506100	Callee	node_new_enclose_memory		3505581	0					
ANR	3506101	Identifier	node_new_enclose_memory		3505581	0					
ANR	3506102	ArgumentList	env -> option		3505581	1					
ANR	3506103	Argument	env -> option		3505581	0					
ANR	3506104	PtrMemberAccess	env -> option		3505581	0					
ANR	3506105	Identifier	env		3505581	0					
ANR	3506106	Identifier	option		3505581	1					
ANR	3506107	Argument	0		3505581	1					
ANR	3506108	PrimaryExpression	0		3505581	0					
ANR	3506109	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4623:1:103101:103130	3505581	2	True				
ANR	3506110	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3505581	0					
ANR	3506111	Callee	CHECK_NULL_RETURN_MEMERR		3505581	0					
ANR	3506112	Identifier	CHECK_NULL_RETURN_MEMERR		3505581	0					
ANR	3506113	ArgumentList	* np		3505581	1					
ANR	3506114	Argument	* np		3505581	0					
ANR	3506115	UnaryOperationExpression	* np		3505581	0					
ANR	3506116	UnaryOperator	*		3505581	0					
ANR	3506117	Identifier	np		3505581	1					
ANR	3506118	ExpressionStatement	num = scan_env_add_mem_entry ( env )	4624:1:103133:103166	3505581	3	True				
ANR	3506119	AssignmentExpression	num = scan_env_add_mem_entry ( env )		3505581	0		=			
ANR	3506120	Identifier	num		3505581	0					
ANR	3506121	CallExpression	scan_env_add_mem_entry ( env )		3505581	1					
ANR	3506122	Callee	scan_env_add_mem_entry		3505581	0					
ANR	3506123	Identifier	scan_env_add_mem_entry		3505581	0					
ANR	3506124	ArgumentList	env		3505581	1					
ANR	3506125	Argument	env		3505581	0					
ANR	3506126	Identifier	env		3505581	0					
ANR	3506127	IfStatement	if ( num < 0 )		3505581	4					
ANR	3506128	Condition	num < 0	4625:5:103173:103179	3505581	0	True				
ANR	3506129	RelationalExpression	num < 0		3505581	0		<			
ANR	3506130	Identifier	num		3505581	0					
ANR	3506131	PrimaryExpression	0		3505581	1					
ANR	3506132	CompoundStatement		119:14:2916:2916	3505581	1					
ANR	3506133	ExpressionStatement	onig_node_free ( * np )	4626:3:103187:103206	3505581	0	True				
ANR	3506134	CallExpression	onig_node_free ( * np )		3505581	0					
ANR	3506135	Callee	onig_node_free		3505581	0					
ANR	3506136	Identifier	onig_node_free		3505581	0					
ANR	3506137	ArgumentList	* np		3505581	1					
ANR	3506138	Argument	* np		3505581	0					
ANR	3506139	UnaryOperationExpression	* np		3505581	0					
ANR	3506140	UnaryOperator	*		3505581	0					
ANR	3506141	Identifier	np		3505581	1					
ANR	3506142	ReturnStatement	return num ;	4627:3:103211:103221	3505581	1	True				
ANR	3506143	Identifier	num		3505581	0					
ANR	3506144	ElseStatement	else		3505581	0					
ANR	3506145	IfStatement	if ( num >= ( int ) BIT_STATUS_BITS_NUM )		3505581	0					
ANR	3506146	Condition	num >= ( int ) BIT_STATUS_BITS_NUM	4629:10:103236:103267	3505581	0	True				
ANR	3506147	RelationalExpression	num >= ( int ) BIT_STATUS_BITS_NUM		3505581	0		>=			
ANR	3506148	Identifier	num		3505581	0					
ANR	3506149	CastExpression	( int ) BIT_STATUS_BITS_NUM		3505581	1					
ANR	3506150	CastTarget	int		3505581	0					
ANR	3506151	Identifier	BIT_STATUS_BITS_NUM		3505581	1					
ANR	3506152	CompoundStatement		123:44:3004:3004	3505581	1					
ANR	3506153	ExpressionStatement	onig_node_free ( * np )	4630:3:103275:103294	3505581	0	True				
ANR	3506154	CallExpression	onig_node_free ( * np )		3505581	0					
ANR	3506155	Callee	onig_node_free		3505581	0					
ANR	3506156	Identifier	onig_node_free		3505581	0					
ANR	3506157	ArgumentList	* np		3505581	1					
ANR	3506158	Argument	* np		3505581	0					
ANR	3506159	UnaryOperationExpression	* np		3505581	0					
ANR	3506160	UnaryOperator	*		3505581	0					
ANR	3506161	Identifier	np		3505581	1					
ANR	3506162	ReturnStatement	return ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY ;	4631:3:103299:103351	3505581	1	True				
ANR	3506163	Identifier	ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY		3505581	0					
ANR	3506164	ExpressionStatement	NENCLOSE ( * np ) -> regnum = num	4633:1:103357:103384	3505581	5	True				
ANR	3506165	AssignmentExpression	NENCLOSE ( * np ) -> regnum = num		3505581	0		=			
ANR	3506166	PtrMemberAccess	NENCLOSE ( * np ) -> regnum		3505581	0					
ANR	3506167	CallExpression	NENCLOSE ( * np )		3505581	0					
ANR	3506168	Callee	NENCLOSE		3505581	0					
ANR	3506169	Identifier	NENCLOSE		3505581	0					
ANR	3506170	ArgumentList	* np		3505581	1					
ANR	3506171	Argument	* np		3505581	0					
ANR	3506172	UnaryOperationExpression	* np		3505581	0					
ANR	3506173	UnaryOperator	*		3505581	0					
ANR	3506174	Identifier	np		3505581	1					
ANR	3506175	Identifier	regnum		3505581	1					
ANR	3506176	Identifier	num		3505581	1					
ANR	3506177	ExpressionStatement	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , num )"	4634:1:103387:103437	3505581	6	True				
ANR	3506178	CallExpression	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , num )"		3505581	0					
ANR	3506179	Callee	BIT_STATUS_ON_AT_SIMPLE		3505581	0					
ANR	3506180	Identifier	BIT_STATUS_ON_AT_SIMPLE		3505581	0					
ANR	3506181	ArgumentList	env -> capture_history		3505581	1					
ANR	3506182	Argument	env -> capture_history		3505581	0					
ANR	3506183	PtrMemberAccess	env -> capture_history		3505581	0					
ANR	3506184	Identifier	env		3505581	0					
ANR	3506185	Identifier	capture_history		3505581	1					
ANR	3506186	Argument	num		3505581	1					
ANR	3506187	Identifier	num		3505581	0					
ANR	3506188	ElseStatement	else		3505581	0					
ANR	3506189	CompoundStatement		130:11:3192:3192	3505581	0					
ANR	3506190	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4637:1:103461:103498	3505581	0	True				
ANR	3506191	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		3505581	0					
ANR	3506192	BreakStatement	break ;	4639:6:103514:103519	3505581	27	True				
ANR	3506193	Label	case 'p' :	4642:4:103554:103562	3505581	28	True				
ANR	3506194	Label	case '-' :	4644:4:103575:103583	3505581	29	True				
ANR	3506195	Label	case 'i' :	4644:14:103585:103593	3505581	30	True				
ANR	3506196	Label	case 'm' :	4644:24:103595:103603	3505581	31	True				
ANR	3506197	Label	case 's' :	4644:34:103605:103613	3505581	32	True				
ANR	3506198	Label	case 'x' :	4644:44:103615:103623	3505581	33	True				
ANR	3506199	CompoundStatement		140:1:3368:3379	3505581	34					
ANR	3506200	IdentifierDeclStatement	int neg = 0 ;	4646:1:103634:103645	3505581	0	True				
ANR	3506201	IdentifierDecl	neg = 0		3505581	0					
ANR	3506202	IdentifierDeclType	int		3505581	0					
ANR	3506203	Identifier	neg		3505581	1					
ANR	3506204	AssignmentExpression	neg = 0		3505581	2		=			
ANR	3506205	Identifier	neg		3505581	0					
ANR	3506206	PrimaryExpression	0		3505581	1					
ANR	3506207	WhileStatement	while ( 1 )		3505581	1					
ANR	3506208	Condition	1	4648:8:103656:103656	3505581	0	True				
ANR	3506209	PrimaryExpression	1		3505581	0					
ANR	3506210	CompoundStatement		142:11:3393:3393	3505581	1					
ANR	3506211	SwitchStatement	switch ( c )		3505581	0					
ANR	3506212	Condition	c	4649:11:103672:103672	3505581	0	True				
ANR	3506213	Identifier	c		3505581	0					
ANR	3506214	CompoundStatement		143:14:3409:3409	3505581	1					
ANR	3506215	Label	case ':' :	4650:3:103680:103688	3505581	0	True				
ANR	3506216	Label	case ')' :	4651:3:103693:103701	3505581	1	True				
ANR	3506217	BreakStatement	break ;	4652:3:103706:103711	3505581	2	True				
ANR	3506218	Label	case '-' :	4654:3:103717:103725	3505581	3	True				
ANR	3506219	ExpressionStatement	neg = 1	4654:14:103728:103735	3505581	4	True				
ANR	3506220	AssignmentExpression	neg = 1		3505581	0		=			
ANR	3506221	Identifier	neg		3505581	0					
ANR	3506222	PrimaryExpression	1		3505581	1					
ANR	3506223	BreakStatement	break ;	4654:23:103737:103742	3505581	5	True				
ANR	3506224	Label	case 'x' :	4655:3:103747:103755	3505581	6	True				
ANR	3506225	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_EXTEND , neg )"	4655:14:103758:103800	3505581	7	True				
ANR	3506226	CallExpression	"ONOFF ( option , ONIG_OPTION_EXTEND , neg )"		3505581	0					
ANR	3506227	Callee	ONOFF		3505581	0					
ANR	3506228	Identifier	ONOFF		3505581	0					
ANR	3506229	ArgumentList	option		3505581	1					
ANR	3506230	Argument	option		3505581	0					
ANR	3506231	Identifier	option		3505581	0					
ANR	3506232	Argument	ONIG_OPTION_EXTEND		3505581	1					
ANR	3506233	Identifier	ONIG_OPTION_EXTEND		3505581	0					
ANR	3506234	Argument	neg		3505581	2					
ANR	3506235	Identifier	neg		3505581	0					
ANR	3506236	BreakStatement	break ;	4655:58:103802:103807	3505581	8	True				
ANR	3506237	Label	case 'i' :	4656:3:103812:103820	3505581	9	True				
ANR	3506238	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_IGNORECASE , neg )"	4656:14:103823:103865	3505581	10	True				
ANR	3506239	CallExpression	"ONOFF ( option , ONIG_OPTION_IGNORECASE , neg )"		3505581	0					
ANR	3506240	Callee	ONOFF		3505581	0					
ANR	3506241	Identifier	ONOFF		3505581	0					
ANR	3506242	ArgumentList	option		3505581	1					
ANR	3506243	Argument	option		3505581	0					
ANR	3506244	Identifier	option		3505581	0					
ANR	3506245	Argument	ONIG_OPTION_IGNORECASE		3505581	1					
ANR	3506246	Identifier	ONIG_OPTION_IGNORECASE		3505581	0					
ANR	3506247	Argument	neg		3505581	2					
ANR	3506248	Identifier	neg		3505581	0					
ANR	3506249	BreakStatement	break ;	4656:58:103867:103872	3505581	11	True				
ANR	3506250	Label	case 's' :	4657:3:103877:103885	3505581	12	True				
ANR	3506251	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL ) )"		3505581	13					
ANR	3506252	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL )"	4658:9:103896:103947	3505581	0	True				
ANR	3506253	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL )"		3505581	0					
ANR	3506254	Callee	IS_SYNTAX_OP2		3505581	0					
ANR	3506255	Identifier	IS_SYNTAX_OP2		3505581	0					
ANR	3506256	ArgumentList	env -> syntax		3505581	1					
ANR	3506257	Argument	env -> syntax		3505581	0					
ANR	3506258	PtrMemberAccess	env -> syntax		3505581	0					
ANR	3506259	Identifier	env		3505581	0					
ANR	3506260	Identifier	syntax		3505581	1					
ANR	3506261	Argument	ONIG_SYN_OP2_OPTION_PERL		3505581	1					
ANR	3506262	Identifier	ONIG_SYN_OP2_OPTION_PERL		3505581	0					
ANR	3506263	CompoundStatement		152:63:3684:3684	3505581	1					
ANR	3506264	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_MULTILINE , neg )"	4659:7:103959:104001	3505581	0	True				
ANR	3506265	CallExpression	"ONOFF ( option , ONIG_OPTION_MULTILINE , neg )"		3505581	0					
ANR	3506266	Callee	ONOFF		3505581	0					
ANR	3506267	Identifier	ONOFF		3505581	0					
ANR	3506268	ArgumentList	option		3505581	1					
ANR	3506269	Argument	option		3505581	0					
ANR	3506270	Identifier	option		3505581	0					
ANR	3506271	Argument	ONIG_OPTION_MULTILINE		3505581	1					
ANR	3506272	Identifier	ONIG_OPTION_MULTILINE		3505581	0					
ANR	3506273	Argument	neg		3505581	2					
ANR	3506274	Identifier	neg		3505581	0					
ANR	3506275	ElseStatement	else		3505581	0					
ANR	3506276	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4662:7:104027:104064	3505581	0	True				
ANR	3506277	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		3505581	0					
ANR	3506278	BreakStatement	break ;	4663:5:104071:104076	3505581	14	True				
ANR	3506279	Label	case 'm' :	4665:3:104082:104090	3505581	15	True				
ANR	3506280	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL ) )"		3505581	16					
ANR	3506281	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL )"	4666:9:104101:104152	3505581	0	True				
ANR	3506282	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL )"		3505581	0					
ANR	3506283	Callee	IS_SYNTAX_OP2		3505581	0					
ANR	3506284	Identifier	IS_SYNTAX_OP2		3505581	0					
ANR	3506285	ArgumentList	env -> syntax		3505581	1					
ANR	3506286	Argument	env -> syntax		3505581	0					
ANR	3506287	PtrMemberAccess	env -> syntax		3505581	0					
ANR	3506288	Identifier	env		3505581	0					
ANR	3506289	Identifier	syntax		3505581	1					
ANR	3506290	Argument	ONIG_SYN_OP2_OPTION_PERL		3505581	1					
ANR	3506291	Identifier	ONIG_SYN_OP2_OPTION_PERL		3505581	0					
ANR	3506292	CompoundStatement		160:63:3889:3889	3505581	1					
ANR	3506293	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_SINGLELINE , ( neg == 0 ? 1 : 0 ) )"	4667:7:104164:104221	3505581	0	True				
ANR	3506294	CallExpression	"ONOFF ( option , ONIG_OPTION_SINGLELINE , ( neg == 0 ? 1 : 0 ) )"		3505581	0					
ANR	3506295	Callee	ONOFF		3505581	0					
ANR	3506296	Identifier	ONOFF		3505581	0					
ANR	3506297	ArgumentList	option		3505581	1					
ANR	3506298	Argument	option		3505581	0					
ANR	3506299	Identifier	option		3505581	0					
ANR	3506300	Argument	ONIG_OPTION_SINGLELINE		3505581	1					
ANR	3506301	Identifier	ONIG_OPTION_SINGLELINE		3505581	0					
ANR	3506302	Argument	neg == 0 ? 1 : 0		3505581	2					
ANR	3506303	ConditionalExpression	neg == 0 ? 1 : 0		3505581	0					
ANR	3506304	Condition	neg == 0		3505581	0					
ANR	3506305	EqualityExpression	neg == 0		3505581	0		==			
ANR	3506306	Identifier	neg		3505581	0					
ANR	3506307	PrimaryExpression	0		3505581	1					
ANR	3506308	PrimaryExpression	1		3505581	1					
ANR	3506309	PrimaryExpression	0		3505581	2					
ANR	3506310	ElseStatement	else		3505581	0					
ANR	3506311	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_RUBY ) )"		3505581	0					
ANR	3506312	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_RUBY )"	4669:14:104244:104295	3505581	0	True				
ANR	3506313	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_RUBY )"		3505581	0					
ANR	3506314	Callee	IS_SYNTAX_OP2		3505581	0					
ANR	3506315	Identifier	IS_SYNTAX_OP2		3505581	0					
ANR	3506316	ArgumentList	env -> syntax		3505581	1					
ANR	3506317	Argument	env -> syntax		3505581	0					
ANR	3506318	PtrMemberAccess	env -> syntax		3505581	0					
ANR	3506319	Identifier	env		3505581	0					
ANR	3506320	Identifier	syntax		3505581	1					
ANR	3506321	Argument	ONIG_SYN_OP2_OPTION_RUBY		3505581	1					
ANR	3506322	Identifier	ONIG_SYN_OP2_OPTION_RUBY		3505581	0					
ANR	3506323	CompoundStatement		163:68:4032:4032	3505581	1					
ANR	3506324	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_MULTILINE , neg )"	4670:7:104307:104349	3505581	0	True				
ANR	3506325	CallExpression	"ONOFF ( option , ONIG_OPTION_MULTILINE , neg )"		3505581	0					
ANR	3506326	Callee	ONOFF		3505581	0					
ANR	3506327	Identifier	ONOFF		3505581	0					
ANR	3506328	ArgumentList	option		3505581	1					
ANR	3506329	Argument	option		3505581	0					
ANR	3506330	Identifier	option		3505581	0					
ANR	3506331	Argument	ONIG_OPTION_MULTILINE		3505581	1					
ANR	3506332	Identifier	ONIG_OPTION_MULTILINE		3505581	0					
ANR	3506333	Argument	neg		3505581	2					
ANR	3506334	Identifier	neg		3505581	0					
ANR	3506335	ElseStatement	else		3505581	0					
ANR	3506336	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4673:7:104375:104412	3505581	0	True				
ANR	3506337	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		3505581	0					
ANR	3506338	BreakStatement	break ;	4674:5:104419:104424	3505581	17	True				
ANR	3506339	Label	case 'p' :	4676:3:104457:104465	3505581	18	True				
ANR	3506340	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_MULTILINE | ONIG_OPTION_SINGLELINE , neg )"	4677:5:104472:104536	3505581	19	True				
ANR	3506341	CallExpression	"ONOFF ( option , ONIG_OPTION_MULTILINE | ONIG_OPTION_SINGLELINE , neg )"		3505581	0					
ANR	3506342	Callee	ONOFF		3505581	0					
ANR	3506343	Identifier	ONOFF		3505581	0					
ANR	3506344	ArgumentList	option		3505581	1					
ANR	3506345	Argument	option		3505581	0					
ANR	3506346	Identifier	option		3505581	0					
ANR	3506347	Argument	ONIG_OPTION_MULTILINE | ONIG_OPTION_SINGLELINE		3505581	1					
ANR	3506348	InclusiveOrExpression	ONIG_OPTION_MULTILINE | ONIG_OPTION_SINGLELINE		3505581	0		|			
ANR	3506349	Identifier	ONIG_OPTION_MULTILINE		3505581	0					
ANR	3506350	Identifier	ONIG_OPTION_SINGLELINE		3505581	1					
ANR	3506351	Argument	neg		3505581	2					
ANR	3506352	Identifier	neg		3505581	0					
ANR	3506353	BreakStatement	break ;	4678:5:104543:104548	3505581	20	True				
ANR	3506354	Label	default :	4680:3:104560:104567	3505581	21	True				
ANR	3506355	Identifier	default		3505581	0					
ANR	3506356	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4681:5:104574:104611	3505581	22	True				
ANR	3506357	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		3505581	0					
ANR	3506358	IfStatement	if ( c == ')' )		3505581	1					
ANR	3506359	Condition	c == ')'	4684:7:104626:104633	3505581	0	True				
ANR	3506360	EqualityExpression	c == ')'		3505581	0		==			
ANR	3506361	Identifier	c		3505581	0					
ANR	3506362	PrimaryExpression	')'		3505581	1					
ANR	3506363	CompoundStatement		178:17:4370:4370	3505581	1					
ANR	3506364	ExpressionStatement	* np = node_new_option ( option )	4685:5:104643:104672	3505581	0	True				
ANR	3506365	AssignmentExpression	* np = node_new_option ( option )		3505581	0		=			
ANR	3506366	UnaryOperationExpression	* np		3505581	0					
ANR	3506367	UnaryOperator	*		3505581	0					
ANR	3506368	Identifier	np		3505581	1					
ANR	3506369	CallExpression	node_new_option ( option )		3505581	1					
ANR	3506370	Callee	node_new_option		3505581	0					
ANR	3506371	Identifier	node_new_option		3505581	0					
ANR	3506372	ArgumentList	option		3505581	1					
ANR	3506373	Argument	option		3505581	0					
ANR	3506374	Identifier	option		3505581	0					
ANR	3506375	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4686:5:104679:104708	3505581	1	True				
ANR	3506376	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3505581	0					
ANR	3506377	Callee	CHECK_NULL_RETURN_MEMERR		3505581	0					
ANR	3506378	Identifier	CHECK_NULL_RETURN_MEMERR		3505581	0					
ANR	3506379	ArgumentList	* np		3505581	1					
ANR	3506380	Argument	* np		3505581	0					
ANR	3506381	UnaryOperationExpression	* np		3505581	0					
ANR	3506382	UnaryOperator	*		3505581	0					
ANR	3506383	Identifier	np		3505581	1					
ANR	3506384	ExpressionStatement	* src = p	4687:5:104715:104723	3505581	2	True				
ANR	3506385	AssignmentExpression	* src = p		3505581	0		=			
ANR	3506386	UnaryOperationExpression	* src		3505581	0					
ANR	3506387	UnaryOperator	*		3505581	0					
ANR	3506388	Identifier	src		3505581	1					
ANR	3506389	Identifier	p		3505581	1					
ANR	3506390	ReturnStatement	return 2 ;	4688:5:104730:104738	3505581	3	True				
ANR	3506391	PrimaryExpression	2		3505581	0					
ANR	3506392	ElseStatement	else		3505581	0					
ANR	3506393	IfStatement	if ( c == ':' )		3505581	0					
ANR	3506394	Condition	c == ':'	4690:12:104775:104782	3505581	0	True				
ANR	3506395	EqualityExpression	c == ':'		3505581	0		==			
ANR	3506396	Identifier	c		3505581	0					
ANR	3506397	PrimaryExpression	':'		3505581	1					
ANR	3506398	CompoundStatement		185:5:4526:4559	3505581	1					
ANR	3506399	IdentifierDeclStatement	OnigOptionType prev = env -> option ;	4691:5:104792:104825	3505581	0	True				
ANR	3506400	IdentifierDecl	prev = env -> option		3505581	0					
ANR	3506401	IdentifierDeclType	OnigOptionType		3505581	0					
ANR	3506402	Identifier	prev		3505581	1					
ANR	3506403	AssignmentExpression	prev = env -> option		3505581	2		=			
ANR	3506404	Identifier	prev		3505581	0					
ANR	3506405	PtrMemberAccess	env -> option		3505581	1					
ANR	3506406	Identifier	env		3505581	0					
ANR	3506407	Identifier	option		3505581	1					
ANR	3506408	ExpressionStatement	env -> option = option	4693:5:104833:104857	3505581	1	True				
ANR	3506409	AssignmentExpression	env -> option = option		3505581	0		=			
ANR	3506410	PtrMemberAccess	env -> option		3505581	0					
ANR	3506411	Identifier	env		3505581	0					
ANR	3506412	Identifier	option		3505581	1					
ANR	3506413	Identifier	option		3505581	1					
ANR	3506414	ExpressionStatement	"r = fetch_token ( tok , & p , end , env )"	4694:5:104864:104898	3505581	2	True				
ANR	3506415	AssignmentExpression	"r = fetch_token ( tok , & p , end , env )"		3505581	0		=			
ANR	3506416	Identifier	r		3505581	0					
ANR	3506417	CallExpression	"fetch_token ( tok , & p , end , env )"		3505581	1					
ANR	3506418	Callee	fetch_token		3505581	0					
ANR	3506419	Identifier	fetch_token		3505581	0					
ANR	3506420	ArgumentList	tok		3505581	1					
ANR	3506421	Argument	tok		3505581	0					
ANR	3506422	Identifier	tok		3505581	0					
ANR	3506423	Argument	& p		3505581	1					
ANR	3506424	UnaryOperationExpression	& p		3505581	0					
ANR	3506425	UnaryOperator	&		3505581	0					
ANR	3506426	Identifier	p		3505581	1					
ANR	3506427	Argument	end		3505581	2					
ANR	3506428	Identifier	end		3505581	0					
ANR	3506429	Argument	env		3505581	3					
ANR	3506430	Identifier	env		3505581	0					
ANR	3506431	IfStatement	if ( r < 0 )		3505581	3					
ANR	3506432	Condition	r < 0	4695:9:104909:104913	3505581	0	True				
ANR	3506433	RelationalExpression	r < 0		3505581	0		<			
ANR	3506434	Identifier	r		3505581	0					
ANR	3506435	PrimaryExpression	0		3505581	1					
ANR	3506436	ReturnStatement	return r ;	4695:16:104916:104924	3505581	1	True				
ANR	3506437	Identifier	r		3505581	0					
ANR	3506438	ExpressionStatement	"r = parse_subexp ( & target , tok , term , & p , end , env )"	4696:5:104931:104981	3505581	4	True				
ANR	3506439	AssignmentExpression	"r = parse_subexp ( & target , tok , term , & p , end , env )"		3505581	0		=			
ANR	3506440	Identifier	r		3505581	0					
ANR	3506441	CallExpression	"parse_subexp ( & target , tok , term , & p , end , env )"		3505581	1					
ANR	3506442	Callee	parse_subexp		3505581	0					
ANR	3506443	Identifier	parse_subexp		3505581	0					
ANR	3506444	ArgumentList	& target		3505581	1					
ANR	3506445	Argument	& target		3505581	0					
ANR	3506446	UnaryOperationExpression	& target		3505581	0					
ANR	3506447	UnaryOperator	&		3505581	0					
ANR	3506448	Identifier	target		3505581	1					
ANR	3506449	Argument	tok		3505581	1					
ANR	3506450	Identifier	tok		3505581	0					
ANR	3506451	Argument	term		3505581	2					
ANR	3506452	Identifier	term		3505581	0					
ANR	3506453	Argument	& p		3505581	3					
ANR	3506454	UnaryOperationExpression	& p		3505581	0					
ANR	3506455	UnaryOperator	&		3505581	0					
ANR	3506456	Identifier	p		3505581	1					
ANR	3506457	Argument	end		3505581	4					
ANR	3506458	Identifier	end		3505581	0					
ANR	3506459	Argument	env		3505581	5					
ANR	3506460	Identifier	env		3505581	0					
ANR	3506461	ExpressionStatement	env -> option = prev	4697:5:104988:105006	3505581	5	True				
ANR	3506462	AssignmentExpression	env -> option = prev		3505581	0		=			
ANR	3506463	PtrMemberAccess	env -> option		3505581	0					
ANR	3506464	Identifier	env		3505581	0					
ANR	3506465	Identifier	option		3505581	1					
ANR	3506466	Identifier	prev		3505581	1					
ANR	3506467	IfStatement	if ( r < 0 )		3505581	6					
ANR	3506468	Condition	r < 0	4698:9:105017:105021	3505581	0	True				
ANR	3506469	RelationalExpression	r < 0		3505581	0		<			
ANR	3506470	Identifier	r		3505581	0					
ANR	3506471	PrimaryExpression	0		3505581	1					
ANR	3506472	ReturnStatement	return r ;	4698:16:105024:105032	3505581	1	True				
ANR	3506473	Identifier	r		3505581	0					
ANR	3506474	ExpressionStatement	* np = node_new_option ( option )	4699:5:105039:105068	3505581	7	True				
ANR	3506475	AssignmentExpression	* np = node_new_option ( option )		3505581	0		=			
ANR	3506476	UnaryOperationExpression	* np		3505581	0					
ANR	3506477	UnaryOperator	*		3505581	0					
ANR	3506478	Identifier	np		3505581	1					
ANR	3506479	CallExpression	node_new_option ( option )		3505581	1					
ANR	3506480	Callee	node_new_option		3505581	0					
ANR	3506481	Identifier	node_new_option		3505581	0					
ANR	3506482	ArgumentList	option		3505581	1					
ANR	3506483	Argument	option		3505581	0					
ANR	3506484	Identifier	option		3505581	0					
ANR	3506485	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4700:5:105075:105104	3505581	8	True				
ANR	3506486	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3505581	0					
ANR	3506487	Callee	CHECK_NULL_RETURN_MEMERR		3505581	0					
ANR	3506488	Identifier	CHECK_NULL_RETURN_MEMERR		3505581	0					
ANR	3506489	ArgumentList	* np		3505581	1					
ANR	3506490	Argument	* np		3505581	0					
ANR	3506491	UnaryOperationExpression	* np		3505581	0					
ANR	3506492	UnaryOperator	*		3505581	0					
ANR	3506493	Identifier	np		3505581	1					
ANR	3506494	ExpressionStatement	NENCLOSE ( * np ) -> target = target	4701:5:105111:105141	3505581	9	True				
ANR	3506495	AssignmentExpression	NENCLOSE ( * np ) -> target = target		3505581	0		=			
ANR	3506496	PtrMemberAccess	NENCLOSE ( * np ) -> target		3505581	0					
ANR	3506497	CallExpression	NENCLOSE ( * np )		3505581	0					
ANR	3506498	Callee	NENCLOSE		3505581	0					
ANR	3506499	Identifier	NENCLOSE		3505581	0					
ANR	3506500	ArgumentList	* np		3505581	1					
ANR	3506501	Argument	* np		3505581	0					
ANR	3506502	UnaryOperationExpression	* np		3505581	0					
ANR	3506503	UnaryOperator	*		3505581	0					
ANR	3506504	Identifier	np		3505581	1					
ANR	3506505	Identifier	target		3505581	1					
ANR	3506506	Identifier	target		3505581	1					
ANR	3506507	ExpressionStatement	* src = p	4702:5:105148:105156	3505581	10	True				
ANR	3506508	AssignmentExpression	* src = p		3505581	0		=			
ANR	3506509	UnaryOperationExpression	* src		3505581	0					
ANR	3506510	UnaryOperator	*		3505581	0					
ANR	3506511	Identifier	src		3505581	1					
ANR	3506512	Identifier	p		3505581	1					
ANR	3506513	ReturnStatement	return 0 ;	4703:5:105163:105171	3505581	11	True				
ANR	3506514	PrimaryExpression	0		3505581	0					
ANR	3506515	IfStatement	if ( PEND )		3505581	2					
ANR	3506516	Condition	PEND	4706:7:105186:105189	3505581	0	True				
ANR	3506517	Identifier	PEND		3505581	0					
ANR	3506518	ReturnStatement	return ONIGERR_END_PATTERN_IN_GROUP ;	4706:13:105192:105227	3505581	1	True				
ANR	3506519	Identifier	ONIGERR_END_PATTERN_IN_GROUP		3505581	0					
ANR	3506520	ExpressionStatement	PFETCH ( c )	4707:3:105232:105241	3505581	3	True				
ANR	3506521	CallExpression	PFETCH ( c )		3505581	0					
ANR	3506522	Callee	PFETCH		3505581	0					
ANR	3506523	Identifier	PFETCH		3505581	0					
ANR	3506524	ArgumentList	c		3505581	1					
ANR	3506525	Argument	c		3505581	0					
ANR	3506526	Identifier	c		3505581	0					
ANR	3506527	BreakStatement	break ;	4710:6:105260:105265	3505581	35	True				
ANR	3506528	Label	default :	4712:4:105272:105279	3505581	36	True				
ANR	3506529	Identifier	default		3505581	0					
ANR	3506530	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4713:6:105287:105324	3505581	37	True				
ANR	3506531	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		3505581	0					
ANR	3506532	ElseStatement	else		3505581	0					
ANR	3506533	CompoundStatement		210:7:5077:5077	3505581	0					
ANR	3506534	IfStatement	"if ( ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_DONT_CAPTURE_GROUP ) )"		3505581	0					
ANR	3506535	Condition	"ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_DONT_CAPTURE_GROUP )"	4717:8:105353:105414	3505581	0	True				
ANR	3506536	CallExpression	"ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_DONT_CAPTURE_GROUP )"		3505581	0					
ANR	3506537	Callee	ONIG_IS_OPTION_ON		3505581	0					
ANR	3506538	Identifier	ONIG_IS_OPTION_ON		3505581	0					
ANR	3506539	ArgumentList	env -> option		3505581	1					
ANR	3506540	Argument	env -> option		3505581	0					
ANR	3506541	PtrMemberAccess	env -> option		3505581	0					
ANR	3506542	Identifier	env		3505581	0					
ANR	3506543	Identifier	option		3505581	1					
ANR	3506544	Argument	ONIG_OPTION_DONT_CAPTURE_GROUP		3505581	1					
ANR	3506545	Identifier	ONIG_OPTION_DONT_CAPTURE_GROUP		3505581	0					
ANR	3506546	GotoStatement	goto group ;	4718:6:105423:105433	3505581	1	True				
ANR	3506547	Identifier	group		3505581	0					
ANR	3506548	ExpressionStatement	"* np = node_new_enclose_memory ( env -> option , 0 )"	4720:4:105440:105485	3505581	1	True				
ANR	3506549	AssignmentExpression	"* np = node_new_enclose_memory ( env -> option , 0 )"		3505581	0		=			
ANR	3506550	UnaryOperationExpression	* np		3505581	0					
ANR	3506551	UnaryOperator	*		3505581	0					
ANR	3506552	Identifier	np		3505581	1					
ANR	3506553	CallExpression	"node_new_enclose_memory ( env -> option , 0 )"		3505581	1					
ANR	3506554	Callee	node_new_enclose_memory		3505581	0					
ANR	3506555	Identifier	node_new_enclose_memory		3505581	0					
ANR	3506556	ArgumentList	env -> option		3505581	1					
ANR	3506557	Argument	env -> option		3505581	0					
ANR	3506558	PtrMemberAccess	env -> option		3505581	0					
ANR	3506559	Identifier	env		3505581	0					
ANR	3506560	Identifier	option		3505581	1					
ANR	3506561	Argument	0		3505581	1					
ANR	3506562	PrimaryExpression	0		3505581	0					
ANR	3506563	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4721:4:105491:105520	3505581	2	True				
ANR	3506564	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3505581	0					
ANR	3506565	Callee	CHECK_NULL_RETURN_MEMERR		3505581	0					
ANR	3506566	Identifier	CHECK_NULL_RETURN_MEMERR		3505581	0					
ANR	3506567	ArgumentList	* np		3505581	1					
ANR	3506568	Argument	* np		3505581	0					
ANR	3506569	UnaryOperationExpression	* np		3505581	0					
ANR	3506570	UnaryOperator	*		3505581	0					
ANR	3506571	Identifier	np		3505581	1					
ANR	3506572	ExpressionStatement	num = scan_env_add_mem_entry ( env )	4722:4:105526:105559	3505581	3	True				
ANR	3506573	AssignmentExpression	num = scan_env_add_mem_entry ( env )		3505581	0		=			
ANR	3506574	Identifier	num		3505581	0					
ANR	3506575	CallExpression	scan_env_add_mem_entry ( env )		3505581	1					
ANR	3506576	Callee	scan_env_add_mem_entry		3505581	0					
ANR	3506577	Identifier	scan_env_add_mem_entry		3505581	0					
ANR	3506578	ArgumentList	env		3505581	1					
ANR	3506579	Argument	env		3505581	0					
ANR	3506580	Identifier	env		3505581	0					
ANR	3506581	IfStatement	if ( num < 0 )		3505581	4					
ANR	3506582	Condition	num < 0	4723:8:105569:105575	3505581	0	True				
ANR	3506583	RelationalExpression	num < 0		3505581	0		<			
ANR	3506584	Identifier	num		3505581	0					
ANR	3506585	PrimaryExpression	0		3505581	1					
ANR	3506586	ReturnStatement	return num ;	4723:17:105578:105588	3505581	1	True				
ANR	3506587	Identifier	num		3505581	0					
ANR	3506588	ExpressionStatement	NENCLOSE ( * np ) -> regnum = num	4724:4:105594:105621	3505581	5	True				
ANR	3506589	AssignmentExpression	NENCLOSE ( * np ) -> regnum = num		3505581	0		=			
ANR	3506590	PtrMemberAccess	NENCLOSE ( * np ) -> regnum		3505581	0					
ANR	3506591	CallExpression	NENCLOSE ( * np )		3505581	0					
ANR	3506592	Callee	NENCLOSE		3505581	0					
ANR	3506593	Identifier	NENCLOSE		3505581	0					
ANR	3506594	ArgumentList	* np		3505581	1					
ANR	3506595	Argument	* np		3505581	0					
ANR	3506596	UnaryOperationExpression	* np		3505581	0					
ANR	3506597	UnaryOperator	*		3505581	0					
ANR	3506598	Identifier	np		3505581	1					
ANR	3506599	Identifier	regnum		3505581	1					
ANR	3506600	Identifier	num		3505581	1					
ANR	3506601	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4727:2:105630:105659	3505581	12	True				
ANR	3506602	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3505581	0					
ANR	3506603	Callee	CHECK_NULL_RETURN_MEMERR		3505581	0					
ANR	3506604	Identifier	CHECK_NULL_RETURN_MEMERR		3505581	0					
ANR	3506605	ArgumentList	* np		3505581	1					
ANR	3506606	Argument	* np		3505581	0					
ANR	3506607	UnaryOperationExpression	* np		3505581	0					
ANR	3506608	UnaryOperator	*		3505581	0					
ANR	3506609	Identifier	np		3505581	1					
ANR	3506610	ExpressionStatement	"r = fetch_token ( tok , & p , end , env )"	4728:2:105663:105697	3505581	13	True				
ANR	3506611	AssignmentExpression	"r = fetch_token ( tok , & p , end , env )"		3505581	0		=			
ANR	3506612	Identifier	r		3505581	0					
ANR	3506613	CallExpression	"fetch_token ( tok , & p , end , env )"		3505581	1					
ANR	3506614	Callee	fetch_token		3505581	0					
ANR	3506615	Identifier	fetch_token		3505581	0					
ANR	3506616	ArgumentList	tok		3505581	1					
ANR	3506617	Argument	tok		3505581	0					
ANR	3506618	Identifier	tok		3505581	0					
ANR	3506619	Argument	& p		3505581	1					
ANR	3506620	UnaryOperationExpression	& p		3505581	0					
ANR	3506621	UnaryOperator	&		3505581	0					
ANR	3506622	Identifier	p		3505581	1					
ANR	3506623	Argument	end		3505581	2					
ANR	3506624	Identifier	end		3505581	0					
ANR	3506625	Argument	env		3505581	3					
ANR	3506626	Identifier	env		3505581	0					
ANR	3506627	IfStatement	if ( r < 0 )		3505581	14					
ANR	3506628	Condition	r < 0	4729:6:105705:105709	3505581	0	True				
ANR	3506629	RelationalExpression	r < 0		3505581	0		<			
ANR	3506630	Identifier	r		3505581	0					
ANR	3506631	PrimaryExpression	0		3505581	1					
ANR	3506632	ReturnStatement	return r ;	4729:13:105712:105720	3505581	1	True				
ANR	3506633	Identifier	r		3505581	0					
ANR	3506634	ExpressionStatement	"r = parse_subexp ( & target , tok , term , & p , end , env )"	4730:2:105724:105774	3505581	15	True				
ANR	3506635	AssignmentExpression	"r = parse_subexp ( & target , tok , term , & p , end , env )"		3505581	0		=			
ANR	3506636	Identifier	r		3505581	0					
ANR	3506637	CallExpression	"parse_subexp ( & target , tok , term , & p , end , env )"		3505581	1					
ANR	3506638	Callee	parse_subexp		3505581	0					
ANR	3506639	Identifier	parse_subexp		3505581	0					
ANR	3506640	ArgumentList	& target		3505581	1					
ANR	3506641	Argument	& target		3505581	0					
ANR	3506642	UnaryOperationExpression	& target		3505581	0					
ANR	3506643	UnaryOperator	&		3505581	0					
ANR	3506644	Identifier	target		3505581	1					
ANR	3506645	Argument	tok		3505581	1					
ANR	3506646	Identifier	tok		3505581	0					
ANR	3506647	Argument	term		3505581	2					
ANR	3506648	Identifier	term		3505581	0					
ANR	3506649	Argument	& p		3505581	3					
ANR	3506650	UnaryOperationExpression	& p		3505581	0					
ANR	3506651	UnaryOperator	&		3505581	0					
ANR	3506652	Identifier	p		3505581	1					
ANR	3506653	Argument	end		3505581	4					
ANR	3506654	Identifier	end		3505581	0					
ANR	3506655	Argument	env		3505581	5					
ANR	3506656	Identifier	env		3505581	0					
ANR	3506657	IfStatement	if ( r < 0 )		3505581	16					
ANR	3506658	Condition	r < 0	4731:6:105782:105786	3505581	0	True				
ANR	3506659	RelationalExpression	r < 0		3505581	0		<			
ANR	3506660	Identifier	r		3505581	0					
ANR	3506661	PrimaryExpression	0		3505581	1					
ANR	3506662	ReturnStatement	return r ;	4731:13:105789:105797	3505581	1	True				
ANR	3506663	Identifier	r		3505581	0					
ANR	3506664	IfStatement	if ( NTYPE ( * np ) == NT_ANCHOR )		3505581	17					
ANR	3506665	Condition	NTYPE ( * np ) == NT_ANCHOR	4733:6:105806:105828	3505581	0	True				
ANR	3506666	EqualityExpression	NTYPE ( * np ) == NT_ANCHOR		3505581	0		==			
ANR	3506667	CallExpression	NTYPE ( * np )		3505581	0					
ANR	3506668	Callee	NTYPE		3505581	0					
ANR	3506669	Identifier	NTYPE		3505581	0					
ANR	3506670	ArgumentList	* np		3505581	1					
ANR	3506671	Argument	* np		3505581	0					
ANR	3506672	UnaryOperationExpression	* np		3505581	0					
ANR	3506673	UnaryOperator	*		3505581	0					
ANR	3506674	Identifier	np		3505581	1					
ANR	3506675	Identifier	NT_ANCHOR		3505581	1					
ANR	3506676	ExpressionStatement	NANCHOR ( * np ) -> target = target	4734:4:105835:105864	3505581	1	True				
ANR	3506677	AssignmentExpression	NANCHOR ( * np ) -> target = target		3505581	0		=			
ANR	3506678	PtrMemberAccess	NANCHOR ( * np ) -> target		3505581	0					
ANR	3506679	CallExpression	NANCHOR ( * np )		3505581	0					
ANR	3506680	Callee	NANCHOR		3505581	0					
ANR	3506681	Identifier	NANCHOR		3505581	0					
ANR	3506682	ArgumentList	* np		3505581	1					
ANR	3506683	Argument	* np		3505581	0					
ANR	3506684	UnaryOperationExpression	* np		3505581	0					
ANR	3506685	UnaryOperator	*		3505581	0					
ANR	3506686	Identifier	np		3505581	1					
ANR	3506687	Identifier	target		3505581	1					
ANR	3506688	Identifier	target		3505581	1					
ANR	3506689	ElseStatement	else		3505581	0					
ANR	3506690	CompoundStatement		229:7:5607:5607	3505581	0					
ANR	3506691	ExpressionStatement	NENCLOSE ( * np ) -> target = target	4736:4:105879:105909	3505581	0	True				
ANR	3506692	AssignmentExpression	NENCLOSE ( * np ) -> target = target		3505581	0		=			
ANR	3506693	PtrMemberAccess	NENCLOSE ( * np ) -> target		3505581	0					
ANR	3506694	CallExpression	NENCLOSE ( * np )		3505581	0					
ANR	3506695	Callee	NENCLOSE		3505581	0					
ANR	3506696	Identifier	NENCLOSE		3505581	0					
ANR	3506697	ArgumentList	* np		3505581	1					
ANR	3506698	Argument	* np		3505581	0					
ANR	3506699	UnaryOperationExpression	* np		3505581	0					
ANR	3506700	UnaryOperator	*		3505581	0					
ANR	3506701	Identifier	np		3505581	1					
ANR	3506702	Identifier	target		3505581	1					
ANR	3506703	Identifier	target		3505581	1					
ANR	3506704	IfStatement	if ( NENCLOSE ( * np ) -> type == ENCLOSE_MEMORY )		3505581	1					
ANR	3506705	Condition	NENCLOSE ( * np ) -> type == ENCLOSE_MEMORY	4737:8:105919:105955	3505581	0	True				
ANR	3506706	EqualityExpression	NENCLOSE ( * np ) -> type == ENCLOSE_MEMORY		3505581	0		==			
ANR	3506707	PtrMemberAccess	NENCLOSE ( * np ) -> type		3505581	0					
ANR	3506708	CallExpression	NENCLOSE ( * np )		3505581	0					
ANR	3506709	Callee	NENCLOSE		3505581	0					
ANR	3506710	Identifier	NENCLOSE		3505581	0					
ANR	3506711	ArgumentList	* np		3505581	1					
ANR	3506712	Argument	* np		3505581	0					
ANR	3506713	UnaryOperationExpression	* np		3505581	0					
ANR	3506714	UnaryOperator	*		3505581	0					
ANR	3506715	Identifier	np		3505581	1					
ANR	3506716	Identifier	type		3505581	1					
ANR	3506717	Identifier	ENCLOSE_MEMORY		3505581	1					
ANR	3506718	CompoundStatement		231:47:5692:5692	3505581	1					
ANR	3506719	ExpressionStatement	"r = scan_env_set_mem_node ( env , NENCLOSE ( * np ) -> regnum , * np )"	4739:6:106024:106082	3505581	0	True				
ANR	3506720	AssignmentExpression	"r = scan_env_set_mem_node ( env , NENCLOSE ( * np ) -> regnum , * np )"		3505581	0		=			
ANR	3506721	Identifier	r		3505581	0					
ANR	3506722	CallExpression	"scan_env_set_mem_node ( env , NENCLOSE ( * np ) -> regnum , * np )"		3505581	1					
ANR	3506723	Callee	scan_env_set_mem_node		3505581	0					
ANR	3506724	Identifier	scan_env_set_mem_node		3505581	0					
ANR	3506725	ArgumentList	env		3505581	1					
ANR	3506726	Argument	env		3505581	0					
ANR	3506727	Identifier	env		3505581	0					
ANR	3506728	Argument	NENCLOSE ( * np ) -> regnum		3505581	1					
ANR	3506729	PtrMemberAccess	NENCLOSE ( * np ) -> regnum		3505581	0					
ANR	3506730	CallExpression	NENCLOSE ( * np )		3505581	0					
ANR	3506731	Callee	NENCLOSE		3505581	0					
ANR	3506732	Identifier	NENCLOSE		3505581	0					
ANR	3506733	ArgumentList	* np		3505581	1					
ANR	3506734	Argument	* np		3505581	0					
ANR	3506735	UnaryOperationExpression	* np		3505581	0					
ANR	3506736	UnaryOperator	*		3505581	0					
ANR	3506737	Identifier	np		3505581	1					
ANR	3506738	Identifier	regnum		3505581	1					
ANR	3506739	Argument	* np		3505581	2					
ANR	3506740	UnaryOperationExpression	* np		3505581	0					
ANR	3506741	UnaryOperator	*		3505581	0					
ANR	3506742	Identifier	np		3505581	1					
ANR	3506743	IfStatement	if ( r != 0 )		3505581	1					
ANR	3506744	Condition	r != 0	4740:10:106094:106099	3505581	0	True				
ANR	3506745	EqualityExpression	r != 0		3505581	0		!=			
ANR	3506746	Identifier	r		3505581	0					
ANR	3506747	PrimaryExpression	0		3505581	1					
ANR	3506748	ReturnStatement	return r ;	4740:18:106102:106110	3505581	1	True				
ANR	3506749	Identifier	r		3505581	0					
ANR	3506750	ExpressionStatement	* src = p	4744:2:106125:106133	3505581	18	True				
ANR	3506751	AssignmentExpression	* src = p		3505581	0		=			
ANR	3506752	UnaryOperationExpression	* src		3505581	0					
ANR	3506753	UnaryOperator	*		3505581	0					
ANR	3506754	Identifier	src		3505581	1					
ANR	3506755	Identifier	p		3505581	1					
ANR	3506756	ReturnStatement	return 0 ;	4745:2:106137:106145	3505581	19	True				
ANR	3506757	PrimaryExpression	0		3505581	0					
ANR	3506758	ReturnType	static int		3505581	1					
ANR	3506759	Identifier	parse_enclose		3505581	2					
ANR	3506760	ParameterList	"Node * * np , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env"		3505581	3					
ANR	3506761	Parameter	Node * * np	4505:14:100182:100190	3505581	0	True				
ANR	3506762	ParameterType	Node * *		3505581	0					
ANR	3506763	Identifier	np		3505581	1					
ANR	3506764	Parameter	OnigToken * tok	4505:25:100193:100206	3505581	1	True				
ANR	3506765	ParameterType	OnigToken *		3505581	0					
ANR	3506766	Identifier	tok		3505581	1					
ANR	3506767	Parameter	int term	4505:41:100209:100216	3505581	2	True				
ANR	3506768	ParameterType	int		3505581	0					
ANR	3506769	Identifier	term		3505581	1					
ANR	3506770	Parameter	UChar * * src	4505:51:100219:100229	3505581	3	True				
ANR	3506771	ParameterType	UChar * *		3505581	0					
ANR	3506772	Identifier	src		3505581	1					
ANR	3506773	Parameter	UChar * end	4505:64:100232:100241	3505581	4	True				
ANR	3506774	ParameterType	UChar *		3505581	0					
ANR	3506775	Identifier	end		3505581	1					
ANR	3506776	Parameter	ScanEnv * env	4506:7:100251:100262	3505581	5	True				
ANR	3506777	ParameterType	ScanEnv *		3505581	0					
ANR	3506778	Identifier	env		3505581	1					
ANR	3506779	CFGEntryNode	ENTRY		3505581		True				
ANR	3506780	CFGExitNode	EXIT		3505581		True				
ANR	3506781	Symbol	node_new_enclose_memory		3505581						
ANR	3506782	Symbol	num		3505581						
ANR	3506783	Symbol	ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS		3505581						
ANR	3506784	Symbol	prev		3505581						
ANR	3506785	Symbol	env -> num_named		3505581						
ANR	3506786	Symbol	ONIG_OPTION_IGNORECASE		3505581						
ANR	3506787	Symbol	NANCHOR ( * np ) -> target		3505581						
ANR	3506788	Symbol	ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY		3505581						
ANR	3506789	Symbol	* src		3505581						
ANR	3506790	Symbol	env -> reg		3505581						
ANR	3506791	Symbol	env -> option		3505581						
ANR	3506792	Symbol	ANCHOR_PREC_READ_NOT		3505581						
ANR	3506793	Symbol	neg		3505581						
ANR	3506794	Symbol	ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY		3505581						
ANR	3506795	Symbol	NENCLOSE ( * np ) -> regnum		3505581						
ANR	3506796	Symbol	ENCLOSE_MEMORY		3505581						
ANR	3506797	Symbol	list_capture		3505581						
ANR	3506798	Symbol	env -> capture_history		3505581						
ANR	3506799	Symbol	parse_subexp		3505581						
ANR	3506800	Symbol	name_end		3505581						
ANR	3506801	Symbol	NULL		3505581						
ANR	3506802	Symbol	ENCLOSE_STOP_BACKTRACK		3505581						
ANR	3506803	Symbol	ONIGERR_UNDEFINED_GROUP_OPTION		3505581						
ANR	3506804	Symbol	* env		3505581						
ANR	3506805	Symbol	& num		3505581						
ANR	3506806	Symbol	env -> syntax		3505581						
ANR	3506807	Symbol	ANCHOR_PREC_READ		3505581						
ANR	3506808	Symbol	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		3505581						
ANR	3506809	Symbol	ONIG_SYN_OP2_OPTION_RUBY		3505581						
ANR	3506810	Symbol	name		3505581						
ANR	3506811	Symbol	ONIG_OPTION_DONT_CAPTURE_GROUP		3505581						
ANR	3506812	Symbol	ONIG_OPTION_SINGLELINE		3505581						
ANR	3506813	Symbol	onig_node_new_anchor		3505581						
ANR	3506814	Symbol	option		3505581						
ANR	3506815	Symbol	PPEEK_IS		3505581						
ANR	3506816	Symbol	np		3505581						
ANR	3506817	Symbol	BIT_STATUS_BITS_NUM		3505581						
ANR	3506818	Symbol	* NENCLOSE		3505581						
ANR	3506819	Symbol	ONIG_OPTION_MULTILINE		3505581						
ANR	3506820	Symbol	env -> enc		3505581						
ANR	3506821	Symbol	fetch_name		3505581						
ANR	3506822	Symbol	node_new_enclose		3505581						
ANR	3506823	Symbol	NT_ANCHOR		3505581						
ANR	3506824	Symbol	PEND		3505581						
ANR	3506825	Symbol	IS_SYNTAX_OP2		3505581						
ANR	3506826	Symbol	& name_end		3505581						
ANR	3506827	Symbol	tok		3505581						
ANR	3506828	Symbol	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		3505581						
ANR	3506829	Symbol	name_add		3505581						
ANR	3506830	Symbol	NENCLOSE		3505581						
ANR	3506831	Symbol	* NANCHOR		3505581						
ANR	3506832	Symbol	node_new_option		3505581						
ANR	3506833	Symbol	term		3505581						
ANR	3506834	Symbol	end		3505581						
ANR	3506835	Symbol	enc		3505581						
ANR	3506836	Symbol	fetch_token		3505581						
ANR	3506837	Symbol	ONIG_SYN_OP2_OPTION_PERL		3505581						
ANR	3506838	Symbol	scan_env_add_mem_entry		3505581						
ANR	3506839	Symbol	ONIG_IS_OPTION_ON		3505581						
ANR	3506840	Symbol	c		3505581						
ANR	3506841	Symbol	ONIGERR_END_PATTERN_IN_GROUP		3505581						
ANR	3506842	Symbol	src		3505581						
ANR	3506843	Symbol	scan_env_set_mem_node		3505581						
ANR	3506844	Symbol	NENCLOSE ( * np ) -> type		3505581						
ANR	3506845	Symbol	* np		3505581						
ANR	3506846	Symbol	env		3505581						
ANR	3506847	Symbol	target		3505581						
ANR	3506848	Symbol	p		3505581						
ANR	3506849	Symbol	r		3505581						
ANR	3506850	Symbol	& p		3505581						
ANR	3506851	Symbol	ANCHOR_LOOK_BEHIND_NOT		3505581						
ANR	3506852	Symbol	ANCHOR_LOOK_BEHIND		3505581						
ANR	3506853	Symbol	NANCHOR		3505581						
ANR	3506854	Symbol	& target		3505581						
ANR	3506855	Symbol	NENCLOSE ( * np ) -> target		3505581						
ANR	3506856	Symbol	NTYPE		3505581						
ANR	3506857	Symbol	ONIG_OPTION_EXTEND		3505581						
ANR	3506858	DeclStmt									
ANR	3506859	Decl							const char	const char * [ ]	PopularQStr
ANR	3506860	DeclStmt									
ANR	3506861	Decl							const char	const char * [ ]	ReduceQStr
ANR	3506862	Function	set_quantifier	4756:0:106315:108785							
ANR	3506863	FunctionDef	"set_quantifier (Node * qnode , Node * target , int group , ScanEnv * env)"		3506862	0					
ANR	3506864	CompoundStatement		4758:0:106393:108785	3506862	0					
ANR	3506865	IdentifierDeclStatement	QtfrNode * qn ;	4759:2:106397:106409	3506862	0	True				
ANR	3506866	IdentifierDecl	* qn		3506862	0					
ANR	3506867	IdentifierDeclType	QtfrNode *		3506862	0					
ANR	3506868	Identifier	qn		3506862	1					
ANR	3506869	ExpressionStatement	qn = NQTFR ( qnode )	4761:2:106414:106431	3506862	1	True				
ANR	3506870	AssignmentExpression	qn = NQTFR ( qnode )		3506862	0		=			
ANR	3506871	Identifier	qn		3506862	0					
ANR	3506872	CallExpression	NQTFR ( qnode )		3506862	1					
ANR	3506873	Callee	NQTFR		3506862	0					
ANR	3506874	Identifier	NQTFR		3506862	0					
ANR	3506875	ArgumentList	qnode		3506862	1					
ANR	3506876	Argument	qnode		3506862	0					
ANR	3506877	Identifier	qnode		3506862	0					
ANR	3506878	IfStatement	if ( qn -> lower == 1 && qn -> upper == 1 )		3506862	2					
ANR	3506879	Condition	qn -> lower == 1 && qn -> upper == 1	4762:6:106439:106470	3506862	0	True				
ANR	3506880	AndExpression	qn -> lower == 1 && qn -> upper == 1		3506862	0		&&			
ANR	3506881	EqualityExpression	qn -> lower == 1		3506862	0		==			
ANR	3506882	PtrMemberAccess	qn -> lower		3506862	0					
ANR	3506883	Identifier	qn		3506862	0					
ANR	3506884	Identifier	lower		3506862	1					
ANR	3506885	PrimaryExpression	1		3506862	1					
ANR	3506886	EqualityExpression	qn -> upper == 1		3506862	1		==			
ANR	3506887	PtrMemberAccess	qn -> upper		3506862	0					
ANR	3506888	Identifier	qn		3506862	0					
ANR	3506889	Identifier	upper		3506862	1					
ANR	3506890	PrimaryExpression	1		3506862	1					
ANR	3506891	CompoundStatement		5:40:79:79	3506862	1					
ANR	3506892	ReturnStatement	return 1 ;	4763:4:106479:106487	3506862	0	True				
ANR	3506893	PrimaryExpression	1		3506862	0					
ANR	3506894	SwitchStatement	switch ( NTYPE ( target ) )		3506862	3					
ANR	3506895	Condition	NTYPE ( target )	4766:10:106504:106516	3506862	0	True				
ANR	3506896	CallExpression	NTYPE ( target )		3506862	0					
ANR	3506897	Callee	NTYPE		3506862	0					
ANR	3506898	Identifier	NTYPE		3506862	0					
ANR	3506899	ArgumentList	target		3506862	1					
ANR	3506900	Argument	target		3506862	0					
ANR	3506901	Identifier	target		3506862	0					
ANR	3506902	CompoundStatement		9:25:125:125	3506862	1					
ANR	3506903	Label	case NT_STR :	4767:2:106523:106534	3506862	0	True				
ANR	3506904	Identifier	NT_STR		3506862	0					
ANR	3506905	IfStatement	if ( ! group )		3506862	1					
ANR	3506906	Condition	! group	4768:8:106544:106550	3506862	0	True				
ANR	3506907	UnaryOperationExpression	! group		3506862	0					
ANR	3506908	UnaryOperator	!		3506862	0					
ANR	3506909	Identifier	group		3506862	1					
ANR	3506910	CompoundStatement		12:6:167:193	3506862	1					
ANR	3506911	IdentifierDeclStatement	StrNode * sn = NSTR ( target ) ;	4769:6:106561:106587	3506862	0	True				
ANR	3506912	IdentifierDecl	* sn = NSTR ( target )		3506862	0					
ANR	3506913	IdentifierDeclType	StrNode *		3506862	0					
ANR	3506914	Identifier	sn		3506862	1					
ANR	3506915	AssignmentExpression	* sn = NSTR ( target )		3506862	2		=			
ANR	3506916	Identifier	sn		3506862	0					
ANR	3506917	CallExpression	NSTR ( target )		3506862	1					
ANR	3506918	Callee	NSTR		3506862	0					
ANR	3506919	Identifier	NSTR		3506862	0					
ANR	3506920	ArgumentList	target		3506862	1					
ANR	3506921	Argument	target		3506862	0					
ANR	3506922	Identifier	target		3506862	0					
ANR	3506923	IfStatement	"if ( str_node_can_be_split ( sn , env -> enc ) )"		3506862	1					
ANR	3506924	Condition	"str_node_can_be_split ( sn , env -> enc )"	4770:10:106599:106633	3506862	0	True				
ANR	3506925	CallExpression	"str_node_can_be_split ( sn , env -> enc )"		3506862	0					
ANR	3506926	Callee	str_node_can_be_split		3506862	0					
ANR	3506927	Identifier	str_node_can_be_split		3506862	0					
ANR	3506928	ArgumentList	sn		3506862	1					
ANR	3506929	Argument	sn		3506862	0					
ANR	3506930	Identifier	sn		3506862	0					
ANR	3506931	Argument	env -> enc		3506862	1					
ANR	3506932	PtrMemberAccess	env -> enc		3506862	0					
ANR	3506933	Identifier	env		3506862	0					
ANR	3506934	Identifier	enc		3506862	1					
ANR	3506935	CompoundStatement		14:1:245:293	3506862	1					
ANR	3506936	IdentifierDeclStatement	"Node * n = str_node_split_last_char ( sn , env -> enc ) ;"	4771:1:106639:106687	3506862	0	True				
ANR	3506937	IdentifierDecl	"* n = str_node_split_last_char ( sn , env -> enc )"		3506862	0					
ANR	3506938	IdentifierDeclType	Node *		3506862	0					
ANR	3506939	Identifier	n		3506862	1					
ANR	3506940	AssignmentExpression	"* n = str_node_split_last_char ( sn , env -> enc )"		3506862	2		=			
ANR	3506941	Identifier	n		3506862	0					
ANR	3506942	CallExpression	"str_node_split_last_char ( sn , env -> enc )"		3506862	1					
ANR	3506943	Callee	str_node_split_last_char		3506862	0					
ANR	3506944	Identifier	str_node_split_last_char		3506862	0					
ANR	3506945	ArgumentList	sn		3506862	1					
ANR	3506946	Argument	sn		3506862	0					
ANR	3506947	Identifier	sn		3506862	0					
ANR	3506948	Argument	env -> enc		3506862	1					
ANR	3506949	PtrMemberAccess	env -> enc		3506862	0					
ANR	3506950	Identifier	env		3506862	0					
ANR	3506951	Identifier	enc		3506862	1					
ANR	3506952	IfStatement	if ( IS_NOT_NULL ( n ) )		3506862	1					
ANR	3506953	Condition	IS_NOT_NULL ( n )	4772:5:106694:106707	3506862	0	True				
ANR	3506954	CallExpression	IS_NOT_NULL ( n )		3506862	0					
ANR	3506955	Callee	IS_NOT_NULL		3506862	0					
ANR	3506956	Identifier	IS_NOT_NULL		3506862	0					
ANR	3506957	ArgumentList	n		3506862	1					
ANR	3506958	Argument	n		3506862	0					
ANR	3506959	Identifier	n		3506862	0					
ANR	3506960	CompoundStatement		15:21:316:316	3506862	1					
ANR	3506961	ExpressionStatement	qn -> target = n	4773:3:106715:106729	3506862	0	True				
ANR	3506962	AssignmentExpression	qn -> target = n		3506862	0		=			
ANR	3506963	PtrMemberAccess	qn -> target		3506862	0					
ANR	3506964	Identifier	qn		3506862	0					
ANR	3506965	Identifier	target		3506862	1					
ANR	3506966	Identifier	n		3506862	1					
ANR	3506967	ReturnStatement	return 2 ;	4774:3:106734:106742	3506862	1	True				
ANR	3506968	PrimaryExpression	2		3506862	0					
ANR	3506969	BreakStatement	break ;	4778:4:106765:106770	3506862	2	True				
ANR	3506970	Label	case NT_QTFR :	4780:2:106775:106787	3506862	3	True				
ANR	3506971	Identifier	NT_QTFR		3506862	0					
ANR	3506972	CompoundStatement		28:6:601:646	3506862	4					
ANR	3506973	IdentifierDeclStatement	QtfrNode * qnt = NQTFR ( target ) ;	4783:6:106904:106935	3506862	0	True				
ANR	3506974	IdentifierDecl	* qnt = NQTFR ( target )		3506862	0					
ANR	3506975	IdentifierDeclType	QtfrNode *		3506862	0					
ANR	3506976	Identifier	qnt		3506862	1					
ANR	3506977	AssignmentExpression	* qnt = NQTFR ( target )		3506862	2		=			
ANR	3506978	Identifier	qnt		3506862	0					
ANR	3506979	CallExpression	NQTFR ( target )		3506862	1					
ANR	3506980	Callee	NQTFR		3506862	0					
ANR	3506981	Identifier	NQTFR		3506862	0					
ANR	3506982	ArgumentList	target		3506862	1					
ANR	3506983	Argument	target		3506862	0					
ANR	3506984	Identifier	target		3506862	0					
ANR	3506985	IdentifierDeclStatement	int nestq_num = popular_quantifier_num ( qn ) ;	4784:6:106943:106987	3506862	1	True				
ANR	3506986	IdentifierDecl	nestq_num = popular_quantifier_num ( qn )		3506862	0					
ANR	3506987	IdentifierDeclType	int		3506862	0					
ANR	3506988	Identifier	nestq_num		3506862	1					
ANR	3506989	AssignmentExpression	nestq_num = popular_quantifier_num ( qn )		3506862	2		=			
ANR	3506990	Identifier	nestq_num		3506862	0					
ANR	3506991	CallExpression	popular_quantifier_num ( qn )		3506862	1					
ANR	3506992	Callee	popular_quantifier_num		3506862	0					
ANR	3506993	Identifier	popular_quantifier_num		3506862	0					
ANR	3506994	ArgumentList	qn		3506862	1					
ANR	3506995	Argument	qn		3506862	0					
ANR	3506996	Identifier	qn		3506862	0					
ANR	3506997	IdentifierDeclStatement	int targetq_num = popular_quantifier_num ( qnt ) ;	4785:6:106995:107040	3506862	2	True				
ANR	3506998	IdentifierDecl	targetq_num = popular_quantifier_num ( qnt )		3506862	0					
ANR	3506999	IdentifierDeclType	int		3506862	0					
ANR	3507000	Identifier	targetq_num		3506862	1					
ANR	3507001	AssignmentExpression	targetq_num = popular_quantifier_num ( qnt )		3506862	2		=			
ANR	3507002	Identifier	targetq_num		3506862	0					
ANR	3507003	CallExpression	popular_quantifier_num ( qnt )		3506862	1					
ANR	3507004	Callee	popular_quantifier_num		3506862	0					
ANR	3507005	Identifier	popular_quantifier_num		3506862	0					
ANR	3507006	ArgumentList	qnt		3506862	1					
ANR	3507007	Argument	qnt		3506862	0					
ANR	3507008	Identifier	qnt		3506862	0					
ANR	3507009	IfStatement	"if ( ! IS_QUANTIFIER_BY_NUMBER ( qn ) && ! IS_QUANTIFIER_BY_NUMBER ( qnt ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT ) )"		3506862	3					
ANR	3507010	Condition	"! IS_QUANTIFIER_BY_NUMBER ( qn ) && ! IS_QUANTIFIER_BY_NUMBER ( qnt ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT )"	4788:10:107105:107236	3506862	0	True				
ANR	3507011	AndExpression	"! IS_QUANTIFIER_BY_NUMBER ( qn ) && ! IS_QUANTIFIER_BY_NUMBER ( qnt ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT )"		3506862	0		&&			
ANR	3507012	UnaryOperationExpression	! IS_QUANTIFIER_BY_NUMBER ( qn )		3506862	0					
ANR	3507013	UnaryOperator	!		3506862	0					
ANR	3507014	CallExpression	IS_QUANTIFIER_BY_NUMBER ( qn )		3506862	1					
ANR	3507015	Callee	IS_QUANTIFIER_BY_NUMBER		3506862	0					
ANR	3507016	Identifier	IS_QUANTIFIER_BY_NUMBER		3506862	0					
ANR	3507017	ArgumentList	qn		3506862	1					
ANR	3507018	Argument	qn		3506862	0					
ANR	3507019	Identifier	qn		3506862	0					
ANR	3507020	AndExpression	"! IS_QUANTIFIER_BY_NUMBER ( qnt ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT )"		3506862	1		&&			
ANR	3507021	UnaryOperationExpression	! IS_QUANTIFIER_BY_NUMBER ( qnt )		3506862	0					
ANR	3507022	UnaryOperator	!		3506862	0					
ANR	3507023	CallExpression	IS_QUANTIFIER_BY_NUMBER ( qnt )		3506862	1					
ANR	3507024	Callee	IS_QUANTIFIER_BY_NUMBER		3506862	0					
ANR	3507025	Identifier	IS_QUANTIFIER_BY_NUMBER		3506862	0					
ANR	3507026	ArgumentList	qnt		3506862	1					
ANR	3507027	Argument	qnt		3506862	0					
ANR	3507028	Identifier	qnt		3506862	0					
ANR	3507029	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT )"		3506862	1					
ANR	3507030	Callee	IS_SYNTAX_BV		3506862	0					
ANR	3507031	Identifier	IS_SYNTAX_BV		3506862	0					
ANR	3507032	ArgumentList	env -> syntax		3506862	1					
ANR	3507033	Argument	env -> syntax		3506862	0					
ANR	3507034	PtrMemberAccess	env -> syntax		3506862	0					
ANR	3507035	Identifier	env		3506862	0					
ANR	3507036	Identifier	syntax		3506862	1					
ANR	3507037	Argument	ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT		3506862	1					
ANR	3507038	Identifier	ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT		3506862	0					
ANR	3507039	CompoundStatement		33:8:855:878	3506862	1					
ANR	3507040	IdentifierDeclStatement	UChar buf [ WARN_BUFSIZE ] ;	4790:8:107249:107272	3506862	0	True				
ANR	3507041	IdentifierDecl	buf [ WARN_BUFSIZE ]		3506862	0					
ANR	3507042	IdentifierDeclType	UChar [ WARN_BUFSIZE ]		3506862	0					
ANR	3507043	Identifier	buf		3506862	1					
ANR	3507044	Identifier	WARN_BUFSIZE		3506862	2					
ANR	3507045	SwitchStatement	switch ( ReduceTypeTable [ targetq_num ] [ nestq_num ] )		3506862	1					
ANR	3507046	Condition	ReduceTypeTable [ targetq_num ] [ nestq_num ]	4792:15:107290:107328	3506862	0	True				
ANR	3507047	ArrayIndexing	ReduceTypeTable [ targetq_num ] [ nestq_num ]		3506862	0					
ANR	3507048	ArrayIndexing	ReduceTypeTable [ targetq_num ]		3506862	0					
ANR	3507049	Identifier	ReduceTypeTable		3506862	0					
ANR	3507050	Identifier	targetq_num		3506862	1					
ANR	3507051	Identifier	nestq_num		3506862	1					
ANR	3507052	CompoundStatement		35:56:937:937	3506862	1					
ANR	3507053	Label	case RQ_ASIS :	4793:8:107341:107353	3506862	0	True				
ANR	3507054	Identifier	RQ_ASIS		3506862	0					
ANR	3507055	BreakStatement	break ;	4794:10:107365:107370	3506862	1	True				
ANR	3507056	Label	case RQ_DEL :	4796:8:107381:107392	3506862	2	True				
ANR	3507057	Identifier	RQ_DEL		3506862	0					
ANR	3507058	IfStatement	if ( onig_verb_warn != onig_null_warn )		3506862	3					
ANR	3507059	Condition	onig_verb_warn != onig_null_warn	4797:14:107408:107439	3506862	0	True				
ANR	3507060	EqualityExpression	onig_verb_warn != onig_null_warn		3506862	0		!=			
ANR	3507061	Identifier	onig_verb_warn		3506862	0					
ANR	3507062	Identifier	onig_null_warn		3506862	1					
ANR	3507063	CompoundStatement		40:48:1048:1048	3506862	1					
ANR	3507064	ExpressionStatement	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""redundant nested repeat operator"" )"	4798:12:107456:107654	3506862	0	True				
ANR	3507065	CallExpression	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""redundant nested repeat operator"" )"		3506862	0					
ANR	3507066	Callee	onig_snprintf_with_pattern		3506862	0					
ANR	3507067	Identifier	onig_snprintf_with_pattern		3506862	0					
ANR	3507068	ArgumentList	buf		3506862	1					
ANR	3507069	Argument	buf		3506862	0					
ANR	3507070	Identifier	buf		3506862	0					
ANR	3507071	Argument	WARN_BUFSIZE		3506862	1					
ANR	3507072	Identifier	WARN_BUFSIZE		3506862	0					
ANR	3507073	Argument	env -> enc		3506862	2					
ANR	3507074	PtrMemberAccess	env -> enc		3506862	0					
ANR	3507075	Identifier	env		3506862	0					
ANR	3507076	Identifier	enc		3506862	1					
ANR	3507077	Argument	env -> pattern		3506862	3					
ANR	3507078	PtrMemberAccess	env -> pattern		3506862	0					
ANR	3507079	Identifier	env		3506862	0					
ANR	3507080	Identifier	pattern		3506862	1					
ANR	3507081	Argument	env -> pattern_end		3506862	4					
ANR	3507082	PtrMemberAccess	env -> pattern_end		3506862	0					
ANR	3507083	Identifier	env		3506862	0					
ANR	3507084	Identifier	pattern_end		3506862	1					
ANR	3507085	Argument	"( UChar * ) ""redundant nested repeat operator"""		3506862	5					
ANR	3507086	CastExpression	"( UChar * ) ""redundant nested repeat operator"""		3506862	0					
ANR	3507087	CastTarget	UChar *		3506862	0					
ANR	3507088	PrimaryExpression	"""redundant nested repeat operator"""		3506862	1					
ANR	3507089	ExpressionStatement	( * onig_verb_warn ) ( ( char * ) buf )	4801:12:107668:107698	3506862	1	True				
ANR	3507090	CallExpression	( * onig_verb_warn ) ( ( char * ) buf )		3506862	0					
ANR	3507091	Callee	* onig_verb_warn		3506862	0					
ANR	3507092	UnaryOperationExpression	* onig_verb_warn		3506862	0					
ANR	3507093	UnaryOperator	*		3506862	0					
ANR	3507094	Identifier	onig_verb_warn		3506862	1					
ANR	3507095	ArgumentList	( char * ) buf		3506862	1					
ANR	3507096	Argument	( char * ) buf		3506862	0					
ANR	3507097	CastExpression	( char * ) buf		3506862	0					
ANR	3507098	CastTarget	char *		3506862	0					
ANR	3507099	Identifier	buf		3506862	1					
ANR	3507100	GotoStatement	goto warn_exit ;	4803:10:107722:107736	3506862	4	True				
ANR	3507101	Identifier	warn_exit		3506862	0					
ANR	3507102	BreakStatement	break ;	4804:10:107748:107753	3506862	5	True				
ANR	3507103	Label	default :	4806:8:107764:107771	3506862	6	True				
ANR	3507104	Identifier	default		3506862	0					
ANR	3507105	IfStatement	if ( onig_verb_warn != onig_null_warn )		3506862	7					
ANR	3507106	Condition	onig_verb_warn != onig_null_warn	4807:14:107787:107818	3506862	0	True				
ANR	3507107	EqualityExpression	onig_verb_warn != onig_null_warn		3506862	0		!=			
ANR	3507108	Identifier	onig_verb_warn		3506862	0					
ANR	3507109	Identifier	onig_null_warn		3506862	1					
ANR	3507110	CompoundStatement		50:48:1427:1427	3506862	1					
ANR	3507111	ExpressionStatement	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""nested repeat operator %s and %s was replaced with '%s'"" , PopularQStr [ targetq_num ] , PopularQStr [ nestq_num ] , ReduceQStr [ ReduceTypeTable [ targetq_num ] [ nestq_num ] ] )"	4808:12:107835:108168	3506862	0	True				
ANR	3507112	CallExpression	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""nested repeat operator %s and %s was replaced with '%s'"" , PopularQStr [ targetq_num ] , PopularQStr [ nestq_num ] , ReduceQStr [ ReduceTypeTable [ targetq_num ] [ nestq_num ] ] )"		3506862	0					
ANR	3507113	Callee	onig_snprintf_with_pattern		3506862	0					
ANR	3507114	Identifier	onig_snprintf_with_pattern		3506862	0					
ANR	3507115	ArgumentList	buf		3506862	1					
ANR	3507116	Argument	buf		3506862	0					
ANR	3507117	Identifier	buf		3506862	0					
ANR	3507118	Argument	WARN_BUFSIZE		3506862	1					
ANR	3507119	Identifier	WARN_BUFSIZE		3506862	0					
ANR	3507120	Argument	env -> enc		3506862	2					
ANR	3507121	PtrMemberAccess	env -> enc		3506862	0					
ANR	3507122	Identifier	env		3506862	0					
ANR	3507123	Identifier	enc		3506862	1					
ANR	3507124	Argument	env -> pattern		3506862	3					
ANR	3507125	PtrMemberAccess	env -> pattern		3506862	0					
ANR	3507126	Identifier	env		3506862	0					
ANR	3507127	Identifier	pattern		3506862	1					
ANR	3507128	Argument	env -> pattern_end		3506862	4					
ANR	3507129	PtrMemberAccess	env -> pattern_end		3506862	0					
ANR	3507130	Identifier	env		3506862	0					
ANR	3507131	Identifier	pattern_end		3506862	1					
ANR	3507132	Argument	"( UChar * ) ""nested repeat operator %s and %s was replaced with '%s'"""		3506862	5					
ANR	3507133	CastExpression	"( UChar * ) ""nested repeat operator %s and %s was replaced with '%s'"""		3506862	0					
ANR	3507134	CastTarget	UChar *		3506862	0					
ANR	3507135	PrimaryExpression	"""nested repeat operator %s and %s was replaced with '%s'"""		3506862	1					
ANR	3507136	Argument	PopularQStr [ targetq_num ]		3506862	6					
ANR	3507137	ArrayIndexing	PopularQStr [ targetq_num ]		3506862	0					
ANR	3507138	Identifier	PopularQStr		3506862	0					
ANR	3507139	Identifier	targetq_num		3506862	1					
ANR	3507140	Argument	PopularQStr [ nestq_num ]		3506862	7					
ANR	3507141	ArrayIndexing	PopularQStr [ nestq_num ]		3506862	0					
ANR	3507142	Identifier	PopularQStr		3506862	0					
ANR	3507143	Identifier	nestq_num		3506862	1					
ANR	3507144	Argument	ReduceQStr [ ReduceTypeTable [ targetq_num ] [ nestq_num ] ]		3506862	8					
ANR	3507145	ArrayIndexing	ReduceQStr [ ReduceTypeTable [ targetq_num ] [ nestq_num ] ]		3506862	0					
ANR	3507146	Identifier	ReduceQStr		3506862	0					
ANR	3507147	ArrayIndexing	ReduceTypeTable [ targetq_num ] [ nestq_num ]		3506862	1					
ANR	3507148	ArrayIndexing	ReduceTypeTable [ targetq_num ]		3506862	0					
ANR	3507149	Identifier	ReduceTypeTable		3506862	0					
ANR	3507150	Identifier	targetq_num		3506862	1					
ANR	3507151	Identifier	nestq_num		3506862	1					
ANR	3507152	ExpressionStatement	( * onig_verb_warn ) ( ( char * ) buf )	4813:12:108182:108212	3506862	1	True				
ANR	3507153	CallExpression	( * onig_verb_warn ) ( ( char * ) buf )		3506862	0					
ANR	3507154	Callee	* onig_verb_warn		3506862	0					
ANR	3507155	UnaryOperationExpression	* onig_verb_warn		3506862	0					
ANR	3507156	UnaryOperator	*		3506862	0					
ANR	3507157	Identifier	onig_verb_warn		3506862	1					
ANR	3507158	ArgumentList	( char * ) buf		3506862	1					
ANR	3507159	Argument	( char * ) buf		3506862	0					
ANR	3507160	CastExpression	( char * ) buf		3506862	0					
ANR	3507161	CastTarget	char *		3506862	0					
ANR	3507162	Identifier	buf		3506862	1					
ANR	3507163	GotoStatement	goto warn_exit ;	4815:10:108236:108250	3506862	8	True				
ANR	3507164	Identifier	warn_exit		3506862	0					
ANR	3507165	BreakStatement	break ;	4816:10:108262:108267	3506862	9	True				
ANR	3507166	Label	warn_exit :	4820:4:108292:108301	3506862	4	True				
ANR	3507167	Identifier	warn_exit		3506862	0					
ANR	3507168	IfStatement	if ( targetq_num >= 0 )		3506862	5					
ANR	3507169	Condition	targetq_num >= 0	4822:10:108320:108335	3506862	0	True				
ANR	3507170	RelationalExpression	targetq_num >= 0		3506862	0		>=			
ANR	3507171	Identifier	targetq_num		3506862	0					
ANR	3507172	PrimaryExpression	0		3506862	1					
ANR	3507173	CompoundStatement		65:28:1944:1944	3506862	1					
ANR	3507174	IfStatement	if ( nestq_num >= 0 )		3506862	0					
ANR	3507175	Condition	nestq_num >= 0	4823:5:108345:108358	3506862	0	True				
ANR	3507176	RelationalExpression	nestq_num >= 0		3506862	0		>=			
ANR	3507177	Identifier	nestq_num		3506862	0					
ANR	3507178	PrimaryExpression	0		3506862	1					
ANR	3507179	CompoundStatement		66:21:1967:1967	3506862	1					
ANR	3507180	ExpressionStatement	"onig_reduce_nested_quantifier ( qnode , target )"	4824:3:108366:108410	3506862	0	True				
ANR	3507181	CallExpression	"onig_reduce_nested_quantifier ( qnode , target )"		3506862	0					
ANR	3507182	Callee	onig_reduce_nested_quantifier		3506862	0					
ANR	3507183	Identifier	onig_reduce_nested_quantifier		3506862	0					
ANR	3507184	ArgumentList	qnode		3506862	1					
ANR	3507185	Argument	qnode		3506862	0					
ANR	3507186	Identifier	qnode		3506862	0					
ANR	3507187	Argument	target		3506862	1					
ANR	3507188	Identifier	target		3506862	0					
ANR	3507189	GotoStatement	goto q_exit ;	4825:3:108415:108426	3506862	1	True				
ANR	3507190	Identifier	q_exit		3506862	0					
ANR	3507191	ElseStatement	else		3506862	0					
ANR	3507192	IfStatement	if ( targetq_num == 1 || targetq_num == 2 )		3506862	0					
ANR	3507193	Condition	targetq_num == 1 || targetq_num == 2	4827:10:108441:108476	3506862	0	True				
ANR	3507194	OrExpression	targetq_num == 1 || targetq_num == 2		3506862	0		||			
ANR	3507195	EqualityExpression	targetq_num == 1		3506862	0		==			
ANR	3507196	Identifier	targetq_num		3506862	0					
ANR	3507197	PrimaryExpression	1		3506862	1					
ANR	3507198	EqualityExpression	targetq_num == 2		3506862	1		==			
ANR	3507199	Identifier	targetq_num		3506862	0					
ANR	3507200	PrimaryExpression	2		3506862	1					
ANR	3507201	CompoundStatement		70:48:2085:2085	3506862	1					
ANR	3507202	IfStatement	if ( ! IS_REPEAT_INFINITE ( qn -> upper ) && qn -> upper > 1 && qn -> greedy )		3506862	0					
ANR	3507203	Condition	! IS_REPEAT_INFINITE ( qn -> upper ) && qn -> upper > 1 && qn -> greedy	4829:7:108563:108624	3506862	0	True				
ANR	3507204	AndExpression	! IS_REPEAT_INFINITE ( qn -> upper ) && qn -> upper > 1 && qn -> greedy		3506862	0		&&			
ANR	3507205	UnaryOperationExpression	! IS_REPEAT_INFINITE ( qn -> upper )		3506862	0					
ANR	3507206	UnaryOperator	!		3506862	0					
ANR	3507207	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		3506862	1					
ANR	3507208	Callee	IS_REPEAT_INFINITE		3506862	0					
ANR	3507209	Identifier	IS_REPEAT_INFINITE		3506862	0					
ANR	3507210	ArgumentList	qn -> upper		3506862	1					
ANR	3507211	Argument	qn -> upper		3506862	0					
ANR	3507212	PtrMemberAccess	qn -> upper		3506862	0					
ANR	3507213	Identifier	qn		3506862	0					
ANR	3507214	Identifier	upper		3506862	1					
ANR	3507215	AndExpression	qn -> upper > 1 && qn -> greedy		3506862	1		&&			
ANR	3507216	RelationalExpression	qn -> upper > 1		3506862	0		>			
ANR	3507217	PtrMemberAccess	qn -> upper		3506862	0					
ANR	3507218	Identifier	qn		3506862	0					
ANR	3507219	Identifier	upper		3506862	1					
ANR	3507220	PrimaryExpression	1		3506862	1					
ANR	3507221	PtrMemberAccess	qn -> greedy		3506862	1					
ANR	3507222	Identifier	qn		3506862	0					
ANR	3507223	Identifier	greedy		3506862	1					
ANR	3507224	CompoundStatement		72:71:2233:2233	3506862	1					
ANR	3507225	ExpressionStatement	qn -> upper = ( qn -> lower == 0 ? 1 : qn -> lower )	4830:5:108634:108678	3506862	0	True				
ANR	3507226	AssignmentExpression	qn -> upper = ( qn -> lower == 0 ? 1 : qn -> lower )		3506862	0		=			
ANR	3507227	PtrMemberAccess	qn -> upper		3506862	0					
ANR	3507228	Identifier	qn		3506862	0					
ANR	3507229	Identifier	upper		3506862	1					
ANR	3507230	ConditionalExpression	qn -> lower == 0 ? 1 : qn -> lower		3506862	1					
ANR	3507231	Condition	qn -> lower == 0		3506862	0					
ANR	3507232	EqualityExpression	qn -> lower == 0		3506862	0		==			
ANR	3507233	PtrMemberAccess	qn -> lower		3506862	0					
ANR	3507234	Identifier	qn		3506862	0					
ANR	3507235	Identifier	lower		3506862	1					
ANR	3507236	PrimaryExpression	0		3506862	1					
ANR	3507237	PrimaryExpression	1		3506862	1					
ANR	3507238	PtrMemberAccess	qn -> lower		3506862	2					
ANR	3507239	Identifier	qn		3506862	0					
ANR	3507240	Identifier	lower		3506862	1					
ANR	3507241	BreakStatement	break ;	4835:4:108706:108711	3506862	5	True				
ANR	3507242	Label	default :	4837:2:108716:108723	3506862	6	True				
ANR	3507243	Identifier	default		3506862	0					
ANR	3507244	BreakStatement	break ;	4838:4:108729:108734	3506862	7	True				
ANR	3507245	ExpressionStatement	qn -> target = target	4841:2:108743:108762	3506862	4	True				
ANR	3507246	AssignmentExpression	qn -> target = target		3506862	0		=			
ANR	3507247	PtrMemberAccess	qn -> target		3506862	0					
ANR	3507248	Identifier	qn		3506862	0					
ANR	3507249	Identifier	target		3506862	1					
ANR	3507250	Identifier	target		3506862	1					
ANR	3507251	Label	q_exit :	4842:1:108765:108771	3506862	5	True				
ANR	3507252	Identifier	q_exit		3506862	0					
ANR	3507253	ReturnStatement	return 0 ;	4843:2:108775:108783	3506862	6	True				
ANR	3507254	PrimaryExpression	0		3506862	0					
ANR	3507255	ReturnType	static int		3506862	1					
ANR	3507256	Identifier	set_quantifier		3506862	2					
ANR	3507257	ParameterList	"Node * qnode , Node * target , int group , ScanEnv * env"		3506862	3					
ANR	3507258	Parameter	Node * qnode	4757:15:106341:106351	3506862	0	True				
ANR	3507259	ParameterType	Node *		3506862	0					
ANR	3507260	Identifier	qnode		3506862	1					
ANR	3507261	Parameter	Node * target	4757:28:106354:106365	3506862	1	True				
ANR	3507262	ParameterType	Node *		3506862	0					
ANR	3507263	Identifier	target		3506862	1					
ANR	3507264	Parameter	int group	4757:42:106368:106376	3506862	2	True				
ANR	3507265	ParameterType	int		3506862	0					
ANR	3507266	Identifier	group		3506862	1					
ANR	3507267	Parameter	ScanEnv * env	4757:53:106379:106390	3506862	3	True				
ANR	3507268	ParameterType	ScanEnv *		3506862	0					
ANR	3507269	Identifier	env		3506862	1					
ANR	3507270	CFGEntryNode	ENTRY		3506862		True				
ANR	3507271	CFGExitNode	EXIT		3506862		True				
ANR	3507272	Symbol	* qn		3506862						
ANR	3507273	Symbol	qn -> greedy		3506862						
ANR	3507274	Symbol	IS_NOT_NULL		3506862						
ANR	3507275	Symbol	* * ReduceTypeTable		3506862						
ANR	3507276	Symbol	env -> enc		3506862						
ANR	3507277	Symbol	* ReduceQStr		3506862						
ANR	3507278	Symbol	onig_verb_warn		3506862						
ANR	3507279	Symbol	NQTFR		3506862						
ANR	3507280	Symbol	popular_quantifier_num		3506862						
ANR	3507281	Symbol	qn -> lower		3506862						
ANR	3507282	Symbol	* PopularQStr		3506862						
ANR	3507283	Symbol	WARN_BUFSIZE		3506862						
ANR	3507284	Symbol	IS_SYNTAX_BV		3506862						
ANR	3507285	Symbol	sn		3506862						
ANR	3507286	Symbol	ReduceTypeTable		3506862						
ANR	3507287	Symbol	IS_REPEAT_INFINITE		3506862						
ANR	3507288	Symbol	qn		3506862						
ANR	3507289	Symbol	* * nestq_num		3506862						
ANR	3507290	Symbol	qnode		3506862						
ANR	3507291	Symbol	group		3506862						
ANR	3507292	Symbol	* nestq_num		3506862						
ANR	3507293	Symbol	* * * ReduceTypeTable		3506862						
ANR	3507294	Symbol	* * * targetq_num		3506862						
ANR	3507295	Symbol	str_node_can_be_split		3506862						
ANR	3507296	Symbol	nestq_num		3506862						
ANR	3507297	Symbol	PopularQStr		3506862						
ANR	3507298	Symbol	NSTR		3506862						
ANR	3507299	Symbol	* env		3506862						
ANR	3507300	Symbol	str_node_split_last_char		3506862						
ANR	3507301	Symbol	env		3506862						
ANR	3507302	Symbol	n		3506862						
ANR	3507303	Symbol	qn -> target		3506862						
ANR	3507304	Symbol	IS_QUANTIFIER_BY_NUMBER		3506862						
ANR	3507305	Symbol	env -> syntax		3506862						
ANR	3507306	Symbol	target		3506862						
ANR	3507307	Symbol	qn -> upper		3506862						
ANR	3507308	Symbol	buf		3506862						
ANR	3507309	Symbol	targetq_num		3506862						
ANR	3507310	Symbol	onig_null_warn		3506862						
ANR	3507311	Symbol	env -> pattern		3506862						
ANR	3507312	Symbol	qnt		3506862						
ANR	3507313	Symbol	* targetq_num		3506862						
ANR	3507314	Symbol	* ReduceTypeTable		3506862						
ANR	3507315	Symbol	env -> pattern_end		3506862						
ANR	3507316	Symbol	ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT		3506862						
ANR	3507317	Symbol	NTYPE		3506862						
ANR	3507318	Symbol	* * targetq_num		3506862						
ANR	3507319	Symbol	ReduceQStr		3506862						
ANR	3507320	ClassDef	<unnamed>	4853:8:108914:108983							
ANR	3507321	DeclStmt									
ANR	3507322	Decl							OnigEncoding	OnigEncoding	enc
ANR	3507323	DeclStmt									
ANR	3507324	Decl							int	int	not
ANR	3507325	DeclStmt									
ANR	3507326	Decl							int	int	type
ANR	3507327	DeclStmt									
ANR	3507328	Decl									type_cclass_key
ANR	3507329	Function	type_cclass_cmp	4859:0:108986:109175							
ANR	3507330	FunctionDef	"type_cclass_cmp (type_cclass_key * x , type_cclass_key * y)"		3507329	0					
ANR	3507331	CompoundStatement		4860:0:109053:109175	3507329	0					
ANR	3507332	IfStatement	if ( x -> type != y -> type )		3507329	0					
ANR	3507333	Condition	x -> type != y -> type	4861:6:109061:109078	3507329	0	True				
ANR	3507334	EqualityExpression	x -> type != y -> type		3507329	0		!=			
ANR	3507335	PtrMemberAccess	x -> type		3507329	0					
ANR	3507336	Identifier	x		3507329	0					
ANR	3507337	Identifier	type		3507329	1					
ANR	3507338	PtrMemberAccess	y -> type		3507329	1					
ANR	3507339	Identifier	y		3507329	0					
ANR	3507340	Identifier	type		3507329	1					
ANR	3507341	ReturnStatement	return 1 ;	4861:26:109081:109089	3507329	1	True				
ANR	3507342	PrimaryExpression	1		3507329	0					
ANR	3507343	IfStatement	if ( x -> enc != y -> enc )		3507329	1					
ANR	3507344	Condition	x -> enc != y -> enc	4862:6:109097:109113	3507329	0	True				
ANR	3507345	EqualityExpression	x -> enc != y -> enc		3507329	0		!=			
ANR	3507346	PtrMemberAccess	x -> enc		3507329	0					
ANR	3507347	Identifier	x		3507329	0					
ANR	3507348	Identifier	enc		3507329	1					
ANR	3507349	PtrMemberAccess	y -> enc		3507329	1					
ANR	3507350	Identifier	y		3507329	0					
ANR	3507351	Identifier	enc		3507329	1					
ANR	3507352	ReturnStatement	return 1 ;	4862:26:109117:109125	3507329	1	True				
ANR	3507353	PrimaryExpression	1		3507329	0					
ANR	3507354	IfStatement	if ( x -> not != y -> not )		3507329	2					
ANR	3507355	Condition	x -> not != y -> not	4863:6:109133:109149	3507329	0	True				
ANR	3507356	EqualityExpression	x -> not != y -> not		3507329	0		!=			
ANR	3507357	PtrMemberAccess	x -> not		3507329	0					
ANR	3507358	Identifier	x		3507329	0					
ANR	3507359	Identifier	not		3507329	1					
ANR	3507360	PtrMemberAccess	y -> not		3507329	1					
ANR	3507361	Identifier	y		3507329	0					
ANR	3507362	Identifier	not		3507329	1					
ANR	3507363	ReturnStatement	return 1 ;	4863:26:109153:109161	3507329	1	True				
ANR	3507364	PrimaryExpression	1		3507329	0					
ANR	3507365	ReturnStatement	return 0 ;	4864:2:109165:109173	3507329	3	True				
ANR	3507366	PrimaryExpression	0		3507329	0					
ANR	3507367	ReturnType	static int		3507329	1					
ANR	3507368	Identifier	type_cclass_cmp		3507329	2					
ANR	3507369	ParameterList	"type_cclass_key * x , type_cclass_key * y"		3507329	3					
ANR	3507370	Parameter	type_cclass_key * x	4859:27:109013:109030	3507329	0	True				
ANR	3507371	ParameterType	type_cclass_key *		3507329	0					
ANR	3507372	Identifier	x		3507329	1					
ANR	3507373	Parameter	type_cclass_key * y	4859:47:109033:109050	3507329	1	True				
ANR	3507374	ParameterType	type_cclass_key *		3507329	0					
ANR	3507375	Identifier	y		3507329	1					
ANR	3507376	CFGEntryNode	ENTRY		3507329		True				
ANR	3507377	CFGExitNode	EXIT		3507329		True				
ANR	3507378	Symbol	* x		3507329						
ANR	3507379	Symbol	y -> not		3507329						
ANR	3507380	Symbol	* y		3507329						
ANR	3507381	Symbol	x -> not		3507329						
ANR	3507382	Symbol	x		3507329						
ANR	3507383	Symbol	y		3507329						
ANR	3507384	Symbol	x -> type		3507329						
ANR	3507385	Symbol	y -> enc		3507329						
ANR	3507386	Symbol	x -> enc		3507329						
ANR	3507387	Symbol	y -> type		3507329						
ANR	3507388	Function	type_cclass_hash	4867:0:109178:109549							
ANR	3507389	FunctionDef	type_cclass_hash (type_cclass_key * key)		3507388	0					
ANR	3507390	CompoundStatement		4868:0:109228:109549	3507388	0					
ANR	3507391	IdentifierDeclStatement	"int i , val ;"	4869:2:109232:109242	3507388	0	True				
ANR	3507392	IdentifierDecl	i		3507388	0					
ANR	3507393	IdentifierDeclType	int		3507388	0					
ANR	3507394	Identifier	i		3507388	1					
ANR	3507395	IdentifierDecl	val		3507388	1					
ANR	3507396	IdentifierDeclType	int		3507388	0					
ANR	3507397	Identifier	val		3507388	1					
ANR	3507398	IdentifierDeclStatement	UChar * p ;	4870:2:109246:109254	3507388	1	True				
ANR	3507399	IdentifierDecl	* p		3507388	0					
ANR	3507400	IdentifierDeclType	UChar *		3507388	0					
ANR	3507401	Identifier	p		3507388	1					
ANR	3507402	ExpressionStatement	val = 0	4872:2:109259:109266	3507388	2	True				
ANR	3507403	AssignmentExpression	val = 0		3507388	0		=			
ANR	3507404	Identifier	val		3507388	0					
ANR	3507405	PrimaryExpression	0		3507388	1					
ANR	3507406	ExpressionStatement	p = ( UChar * ) & ( key -> enc )	4874:2:109271:109295	3507388	3	True				
ANR	3507407	AssignmentExpression	p = ( UChar * ) & ( key -> enc )		3507388	0		=			
ANR	3507408	Identifier	p		3507388	0					
ANR	3507409	CastExpression	( UChar * ) & ( key -> enc )		3507388	1					
ANR	3507410	CastTarget	UChar *		3507388	0					
ANR	3507411	UnaryOperationExpression	& ( key -> enc )		3507388	1					
ANR	3507412	UnaryOperator	&		3507388	0					
ANR	3507413	PtrMemberAccess	key -> enc		3507388	1					
ANR	3507414	Identifier	key		3507388	0					
ANR	3507415	Identifier	enc		3507388	1					
ANR	3507416	ForStatement	for ( i = 0 ; i < ( int ) sizeof ( key -> enc ) ; i ++ )		3507388	4					
ANR	3507417	ForInit	i = 0 ;	4875:7:109304:109309	3507388	0	True				
ANR	3507418	AssignmentExpression	i = 0		3507388	0		=			
ANR	3507419	Identifier	i		3507388	0					
ANR	3507420	PrimaryExpression	0		3507388	1					
ANR	3507421	Condition	i < ( int ) sizeof ( key -> enc )	4875:14:109311:109336	3507388	1	True				
ANR	3507422	RelationalExpression	i < ( int ) sizeof ( key -> enc )		3507388	0		<			
ANR	3507423	Identifier	i		3507388	0					
ANR	3507424	CastExpression	( int ) sizeof ( key -> enc )		3507388	1					
ANR	3507425	CastTarget	int		3507388	0					
ANR	3507426	SizeofExpression	sizeof ( key -> enc )		3507388	1					
ANR	3507427	Sizeof	sizeof		3507388	0					
ANR	3507428	PtrMemberAccess	key -> enc		3507388	1					
ANR	3507429	Identifier	key		3507388	0					
ANR	3507430	Identifier	enc		3507388	1					
ANR	3507431	PostIncDecOperationExpression	i ++	4875:42:109339:109341	3507388	2	True				
ANR	3507432	Identifier	i		3507388	0					
ANR	3507433	IncDec	++		3507388	1					
ANR	3507434	CompoundStatement		8:47:115:115	3507388	3					
ANR	3507435	ExpressionStatement	val = val * 997 + ( int ) * p ++	4876:4:109350:109378	3507388	0	True				
ANR	3507436	AssignmentExpression	val = val * 997 + ( int ) * p ++		3507388	0		=			
ANR	3507437	Identifier	val		3507388	0					
ANR	3507438	AdditiveExpression	val * 997 + ( int ) * p ++		3507388	1		+			
ANR	3507439	MultiplicativeExpression	val * 997		3507388	0		*			
ANR	3507440	Identifier	val		3507388	0					
ANR	3507441	PrimaryExpression	997		3507388	1					
ANR	3507442	CastExpression	( int ) * p ++		3507388	1					
ANR	3507443	CastTarget	int		3507388	0					
ANR	3507444	UnaryOperationExpression	* p ++		3507388	1					
ANR	3507445	UnaryOperator	*		3507388	0					
ANR	3507446	PostIncDecOperationExpression	p ++		3507388	1					
ANR	3507447	Identifier	p		3507388	0					
ANR	3507448	IncDec	++		3507388	1					
ANR	3507449	ExpressionStatement	p = ( UChar * ) ( & key -> type )	4879:2:109387:109412	3507388	5	True				
ANR	3507450	AssignmentExpression	p = ( UChar * ) ( & key -> type )		3507388	0		=			
ANR	3507451	Identifier	p		3507388	0					
ANR	3507452	CastExpression	( UChar * ) ( & key -> type )		3507388	1					
ANR	3507453	CastTarget	UChar *		3507388	0					
ANR	3507454	UnaryOperationExpression	& key -> type		3507388	1					
ANR	3507455	UnaryOperator	&		3507388	0					
ANR	3507456	PtrMemberAccess	key -> type		3507388	1					
ANR	3507457	Identifier	key		3507388	0					
ANR	3507458	Identifier	type		3507388	1					
ANR	3507459	ForStatement	for ( i = 0 ; i < ( int ) sizeof ( key -> type ) ; i ++ )		3507388	6					
ANR	3507460	ForInit	i = 0 ;	4880:7:109421:109426	3507388	0	True				
ANR	3507461	AssignmentExpression	i = 0		3507388	0		=			
ANR	3507462	Identifier	i		3507388	0					
ANR	3507463	PrimaryExpression	0		3507388	1					
ANR	3507464	Condition	i < ( int ) sizeof ( key -> type )	4880:14:109428:109454	3507388	1	True				
ANR	3507465	RelationalExpression	i < ( int ) sizeof ( key -> type )		3507388	0		<			
ANR	3507466	Identifier	i		3507388	0					
ANR	3507467	CastExpression	( int ) sizeof ( key -> type )		3507388	1					
ANR	3507468	CastTarget	int		3507388	0					
ANR	3507469	SizeofExpression	sizeof ( key -> type )		3507388	1					
ANR	3507470	Sizeof	sizeof		3507388	0					
ANR	3507471	PtrMemberAccess	key -> type		3507388	1					
ANR	3507472	Identifier	key		3507388	0					
ANR	3507473	Identifier	type		3507388	1					
ANR	3507474	PostIncDecOperationExpression	i ++	4880:43:109457:109459	3507388	2	True				
ANR	3507475	Identifier	i		3507388	0					
ANR	3507476	IncDec	++		3507388	1					
ANR	3507477	CompoundStatement		13:48:233:233	3507388	3					
ANR	3507478	ExpressionStatement	val = val * 997 + ( int ) * p ++	4881:4:109468:109496	3507388	0	True				
ANR	3507479	AssignmentExpression	val = val * 997 + ( int ) * p ++		3507388	0		=			
ANR	3507480	Identifier	val		3507388	0					
ANR	3507481	AdditiveExpression	val * 997 + ( int ) * p ++		3507388	1		+			
ANR	3507482	MultiplicativeExpression	val * 997		3507388	0		*			
ANR	3507483	Identifier	val		3507388	0					
ANR	3507484	PrimaryExpression	997		3507388	1					
ANR	3507485	CastExpression	( int ) * p ++		3507388	1					
ANR	3507486	CastTarget	int		3507388	0					
ANR	3507487	UnaryOperationExpression	* p ++		3507388	1					
ANR	3507488	UnaryOperator	*		3507388	0					
ANR	3507489	PostIncDecOperationExpression	p ++		3507388	1					
ANR	3507490	Identifier	p		3507388	0					
ANR	3507491	IncDec	++		3507388	1					
ANR	3507492	ExpressionStatement	val += key -> not	4884:2:109505:109520	3507388	7	True				
ANR	3507493	AssignmentExpression	val += key -> not		3507388	0		+=			
ANR	3507494	Identifier	val		3507388	0					
ANR	3507495	PtrMemberAccess	key -> not		3507388	1					
ANR	3507496	Identifier	key		3507388	0					
ANR	3507497	Identifier	not		3507388	1					
ANR	3507498	ReturnStatement	return val + ( val >> 5 ) ;	4885:2:109524:109547	3507388	8	True				
ANR	3507499	AdditiveExpression	val + ( val >> 5 )		3507388	0		+			
ANR	3507500	Identifier	val		3507388	0					
ANR	3507501	ShiftExpression	val >> 5		3507388	1		>>			
ANR	3507502	Identifier	val		3507388	0					
ANR	3507503	PrimaryExpression	5		3507388	1					
ANR	3507504	ReturnType	static int		3507388	1					
ANR	3507505	Identifier	type_cclass_hash		3507388	2					
ANR	3507506	ParameterList	type_cclass_key * key		3507388	3					
ANR	3507507	Parameter	type_cclass_key * key	4867:28:109206:109225	3507388	0	True				
ANR	3507508	ParameterType	type_cclass_key *		3507388	0					
ANR	3507509	Identifier	key		3507388	1					
ANR	3507510	CFGEntryNode	ENTRY		3507388		True				
ANR	3507511	CFGExitNode	EXIT		3507388		True				
ANR	3507512	Symbol	val		3507388						
ANR	3507513	Symbol	p		3507388						
ANR	3507514	Symbol	key -> type		3507388						
ANR	3507515	Symbol	& key -> enc		3507388						
ANR	3507516	Symbol	key -> enc		3507388						
ANR	3507517	Symbol	* p ++		3507388						
ANR	3507518	Symbol	i		3507388						
ANR	3507519	Symbol	* key		3507388						
ANR	3507520	Symbol	& key -> type		3507388						
ANR	3507521	Symbol	key		3507388						
ANR	3507522	Symbol	key -> not		3507388						
ANR	3507523	DeclStmt									
ANR	3507524	Decl							struct st_hash_type	struct st_hash_type	type_type_cclass_hash
ANR	3507525	DeclStmt									
ANR	3507526	Decl							st_table	st_table *	OnigTypeCClassTable
ANR	3507527	DeclStmt									
ANR	3507528	Decl							CClassNode	CClassNode *	cc
ANR	3507529	Function	onig_free_shared_cclass_table	4909:0:109973:110224							
ANR	3507530	FunctionDef	onig_free_shared_cclass_table ()		3507529	0					
ANR	3507531	CompoundStatement		4911:0:110020:110224	3507529	0					
ANR	3507532	IfStatement	if ( IS_NOT_NULL ( OnigTypeCClassTable ) )		3507529	0					
ANR	3507533	Condition	IS_NOT_NULL ( OnigTypeCClassTable )	4912:6:110028:110059	3507529	0	True				
ANR	3507534	CallExpression	IS_NOT_NULL ( OnigTypeCClassTable )		3507529	0					
ANR	3507535	Callee	IS_NOT_NULL		3507529	0					
ANR	3507536	Identifier	IS_NOT_NULL		3507529	0					
ANR	3507537	ArgumentList	OnigTypeCClassTable		3507529	1					
ANR	3507538	Argument	OnigTypeCClassTable		3507529	0					
ANR	3507539	Identifier	OnigTypeCClassTable		3507529	0					
ANR	3507540	CompoundStatement		2:40:41:41	3507529	1					
ANR	3507541	ExpressionStatement	"onig_st_foreach ( OnigTypeCClassTable , i_free_shared_class , 0 )"	4913:4:110068:110128	3507529	0	True				
ANR	3507542	CallExpression	"onig_st_foreach ( OnigTypeCClassTable , i_free_shared_class , 0 )"		3507529	0					
ANR	3507543	Callee	onig_st_foreach		3507529	0					
ANR	3507544	Identifier	onig_st_foreach		3507529	0					
ANR	3507545	ArgumentList	OnigTypeCClassTable		3507529	1					
ANR	3507546	Argument	OnigTypeCClassTable		3507529	0					
ANR	3507547	Identifier	OnigTypeCClassTable		3507529	0					
ANR	3507548	Argument	i_free_shared_class		3507529	1					
ANR	3507549	Identifier	i_free_shared_class		3507529	0					
ANR	3507550	Argument	0		3507529	2					
ANR	3507551	PrimaryExpression	0		3507529	0					
ANR	3507552	ExpressionStatement	onig_st_free_table ( OnigTypeCClassTable )	4914:4:110134:110173	3507529	1	True				
ANR	3507553	CallExpression	onig_st_free_table ( OnigTypeCClassTable )		3507529	0					
ANR	3507554	Callee	onig_st_free_table		3507529	0					
ANR	3507555	Identifier	onig_st_free_table		3507529	0					
ANR	3507556	ArgumentList	OnigTypeCClassTable		3507529	1					
ANR	3507557	Argument	OnigTypeCClassTable		3507529	0					
ANR	3507558	Identifier	OnigTypeCClassTable		3507529	0					
ANR	3507559	ExpressionStatement	OnigTypeCClassTable = NULL	4915:4:110179:110205	3507529	2	True				
ANR	3507560	AssignmentExpression	OnigTypeCClassTable = NULL		3507529	0		=			
ANR	3507561	Identifier	OnigTypeCClassTable		3507529	0					
ANR	3507562	Identifier	NULL		3507529	1					
ANR	3507563	ReturnStatement	return 0 ;	4918:2:110214:110222	3507529	1	True				
ANR	3507564	PrimaryExpression	0		3507529	0					
ANR	3507565	ReturnType	extern int		3507529	1					
ANR	3507566	Identifier	onig_free_shared_cclass_table		3507529	2					
ANR	3507567	ParameterList			3507529	3					
ANR	3507568	CFGEntryNode	ENTRY		3507529		True				
ANR	3507569	CFGExitNode	EXIT		3507529		True				
ANR	3507570	Symbol	IS_NOT_NULL		3507529						
ANR	3507571	Symbol	NULL		3507529						
ANR	3507572	Symbol	OnigTypeCClassTable		3507529						
ANR	3507573	Symbol	i_free_shared_class		3507529						
ANR	3507574	Function	clear_not_flag_cclass	4925:0:110318:110689							
ANR	3507575	FunctionDef	"clear_not_flag_cclass (CClassNode * cc , OnigEncoding enc)"		3507574	0					
ANR	3507576	CompoundStatement		4927:0:110385:110689	3507574	0					
ANR	3507577	IdentifierDeclStatement	BBuf * tbuf ;	4928:2:110389:110399	3507574	0	True				
ANR	3507578	IdentifierDecl	* tbuf		3507574	0					
ANR	3507579	IdentifierDeclType	BBuf *		3507574	0					
ANR	3507580	Identifier	tbuf		3507574	1					
ANR	3507581	IdentifierDeclStatement	int r ;	4929:2:110403:110408	3507574	1	True				
ANR	3507582	IdentifierDecl	r		3507574	0					
ANR	3507583	IdentifierDeclType	int		3507574	0					
ANR	3507584	Identifier	r		3507574	1					
ANR	3507585	IfStatement	if ( IS_NCCLASS_NOT ( cc ) )		3507574	2					
ANR	3507586	Condition	IS_NCCLASS_NOT ( cc )	4931:6:110417:110434	3507574	0	True				
ANR	3507587	CallExpression	IS_NCCLASS_NOT ( cc )		3507574	0					
ANR	3507588	Callee	IS_NCCLASS_NOT		3507574	0					
ANR	3507589	Identifier	IS_NCCLASS_NOT		3507574	0					
ANR	3507590	ArgumentList	cc		3507574	1					
ANR	3507591	Argument	cc		3507574	0					
ANR	3507592	Identifier	cc		3507574	0					
ANR	3507593	CompoundStatement		5:26:51:51	3507574	1					
ANR	3507594	ExpressionStatement	bitset_invert ( cc -> bs )	4932:4:110443:110464	3507574	0	True				
ANR	3507595	CallExpression	bitset_invert ( cc -> bs )		3507574	0					
ANR	3507596	Callee	bitset_invert		3507574	0					
ANR	3507597	Identifier	bitset_invert		3507574	0					
ANR	3507598	ArgumentList	cc -> bs		3507574	1					
ANR	3507599	Argument	cc -> bs		3507574	0					
ANR	3507600	PtrMemberAccess	cc -> bs		3507574	0					
ANR	3507601	Identifier	cc		3507574	0					
ANR	3507602	Identifier	bs		3507574	1					
ANR	3507603	IfStatement	if ( ! ONIGENC_IS_SINGLEBYTE ( enc ) )		3507574	1					
ANR	3507604	Condition	! ONIGENC_IS_SINGLEBYTE ( enc )	4934:8:110475:110502	3507574	0	True				
ANR	3507605	UnaryOperationExpression	! ONIGENC_IS_SINGLEBYTE ( enc )		3507574	0					
ANR	3507606	UnaryOperator	!		3507574	0					
ANR	3507607	CallExpression	ONIGENC_IS_SINGLEBYTE ( enc )		3507574	1					
ANR	3507608	Callee	ONIGENC_IS_SINGLEBYTE		3507574	0					
ANR	3507609	Identifier	ONIGENC_IS_SINGLEBYTE		3507574	0					
ANR	3507610	ArgumentList	enc		3507574	1					
ANR	3507611	Argument	enc		3507574	0					
ANR	3507612	Identifier	enc		3507574	0					
ANR	3507613	CompoundStatement		8:38:119:119	3507574	1					
ANR	3507614	ExpressionStatement	"r = not_code_range_buf ( enc , cc -> mbuf , & tbuf )"	4935:6:110513:110557	3507574	0	True				
ANR	3507615	AssignmentExpression	"r = not_code_range_buf ( enc , cc -> mbuf , & tbuf )"		3507574	0		=			
ANR	3507616	Identifier	r		3507574	0					
ANR	3507617	CallExpression	"not_code_range_buf ( enc , cc -> mbuf , & tbuf )"		3507574	1					
ANR	3507618	Callee	not_code_range_buf		3507574	0					
ANR	3507619	Identifier	not_code_range_buf		3507574	0					
ANR	3507620	ArgumentList	enc		3507574	1					
ANR	3507621	Argument	enc		3507574	0					
ANR	3507622	Identifier	enc		3507574	0					
ANR	3507623	Argument	cc -> mbuf		3507574	1					
ANR	3507624	PtrMemberAccess	cc -> mbuf		3507574	0					
ANR	3507625	Identifier	cc		3507574	0					
ANR	3507626	Identifier	mbuf		3507574	1					
ANR	3507627	Argument	& tbuf		3507574	2					
ANR	3507628	UnaryOperationExpression	& tbuf		3507574	0					
ANR	3507629	UnaryOperator	&		3507574	0					
ANR	3507630	Identifier	tbuf		3507574	1					
ANR	3507631	IfStatement	if ( r != 0 )		3507574	1					
ANR	3507632	Condition	r != 0	4936:10:110569:110574	3507574	0	True				
ANR	3507633	EqualityExpression	r != 0		3507574	0		!=			
ANR	3507634	Identifier	r		3507574	0					
ANR	3507635	PrimaryExpression	0		3507574	1					
ANR	3507636	ReturnStatement	return r ;	4936:18:110577:110585	3507574	1	True				
ANR	3507637	Identifier	r		3507574	0					
ANR	3507638	ExpressionStatement	bbuf_free ( cc -> mbuf )	4938:6:110594:110613	3507574	2	True				
ANR	3507639	CallExpression	bbuf_free ( cc -> mbuf )		3507574	0					
ANR	3507640	Callee	bbuf_free		3507574	0					
ANR	3507641	Identifier	bbuf_free		3507574	0					
ANR	3507642	ArgumentList	cc -> mbuf		3507574	1					
ANR	3507643	Argument	cc -> mbuf		3507574	0					
ANR	3507644	PtrMemberAccess	cc -> mbuf		3507574	0					
ANR	3507645	Identifier	cc		3507574	0					
ANR	3507646	Identifier	mbuf		3507574	1					
ANR	3507647	ExpressionStatement	cc -> mbuf = tbuf	4939:6:110621:110636	3507574	3	True				
ANR	3507648	AssignmentExpression	cc -> mbuf = tbuf		3507574	0		=			
ANR	3507649	PtrMemberAccess	cc -> mbuf		3507574	0					
ANR	3507650	Identifier	cc		3507574	0					
ANR	3507651	Identifier	mbuf		3507574	1					
ANR	3507652	Identifier	tbuf		3507574	1					
ANR	3507653	ExpressionStatement	NCCLASS_CLEAR_NOT ( cc )	4942:4:110649:110670	3507574	2	True				
ANR	3507654	CallExpression	NCCLASS_CLEAR_NOT ( cc )		3507574	0					
ANR	3507655	Callee	NCCLASS_CLEAR_NOT		3507574	0					
ANR	3507656	Identifier	NCCLASS_CLEAR_NOT		3507574	0					
ANR	3507657	ArgumentList	cc		3507574	1					
ANR	3507658	Argument	cc		3507574	0					
ANR	3507659	Identifier	cc		3507574	0					
ANR	3507660	ReturnStatement	return 0 ;	4945:2:110679:110687	3507574	3	True				
ANR	3507661	PrimaryExpression	0		3507574	0					
ANR	3507662	ReturnType	static int		3507574	1					
ANR	3507663	Identifier	clear_not_flag_cclass		3507574	2					
ANR	3507664	ParameterList	"CClassNode * cc , OnigEncoding enc"		3507574	3					
ANR	3507665	Parameter	CClassNode * cc	4926:22:110351:110364	3507574	0	True				
ANR	3507666	ParameterType	CClassNode *		3507574	0					
ANR	3507667	Identifier	cc		3507574	1					
ANR	3507668	Parameter	OnigEncoding enc	4926:38:110367:110382	3507574	1	True				
ANR	3507669	ParameterType	OnigEncoding		3507574	0					
ANR	3507670	Identifier	enc		3507574	1					
ANR	3507671	CFGEntryNode	ENTRY		3507574		True				
ANR	3507672	CFGExitNode	EXIT		3507574		True				
ANR	3507673	Symbol	cc		3507574						
ANR	3507674	Symbol	r		3507574						
ANR	3507675	Symbol	not_code_range_buf		3507574						
ANR	3507676	Symbol	* cc		3507574						
ANR	3507677	Symbol	IS_NCCLASS_NOT		3507574						
ANR	3507678	Symbol	& tbuf		3507574						
ANR	3507679	Symbol	tbuf		3507574						
ANR	3507680	Symbol	enc		3507574						
ANR	3507681	Symbol	cc -> mbuf		3507574						
ANR	3507682	Symbol	cc -> bs		3507574						
ANR	3507683	Symbol	ONIGENC_IS_SINGLEBYTE		3507574						
ANR	3507684	ClassDef	<unnamed>	4949:8:110757:110867							
ANR	3507685	DeclStmt									
ANR	3507686	Decl							ScanEnv	ScanEnv *	env
ANR	3507687	DeclStmt									
ANR	3507688	Decl							CClassNode	CClassNode *	cc
ANR	3507689	DeclStmt									
ANR	3507690	Decl							Node	Node *	alt_root
ANR	3507691	DeclStmt									
ANR	3507692	Decl							Node	Node * *	ptail
ANR	3507693	DeclStmt									
ANR	3507694	Decl									IApplyCaseFoldArg
ANR	3507695	Function	i_apply_case_fold	4956:0:110870:112782							
ANR	3507696	FunctionDef	"i_apply_case_fold (OnigCodePoint from , OnigCodePoint to [ ] , int to_len , void * arg)"		3507695	0					
ANR	3507697	CompoundStatement		4959:0:110966:112782	3507695	0					
ANR	3507698	IdentifierDeclStatement	IApplyCaseFoldArg * iarg ;	4960:2:110970:110993	3507695	0	True				
ANR	3507699	IdentifierDecl	* iarg		3507695	0					
ANR	3507700	IdentifierDeclType	IApplyCaseFoldArg *		3507695	0					
ANR	3507701	Identifier	iarg		3507695	1					
ANR	3507702	IdentifierDeclStatement	ScanEnv * env ;	4961:2:110997:111009	3507695	1	True				
ANR	3507703	IdentifierDecl	* env		3507695	0					
ANR	3507704	IdentifierDeclType	ScanEnv *		3507695	0					
ANR	3507705	Identifier	env		3507695	1					
ANR	3507706	IdentifierDeclStatement	CClassNode * cc ;	4962:2:111013:111027	3507695	2	True				
ANR	3507707	IdentifierDecl	* cc		3507695	0					
ANR	3507708	IdentifierDeclType	CClassNode *		3507695	0					
ANR	3507709	Identifier	cc		3507695	1					
ANR	3507710	IdentifierDeclStatement	BitSetRef bs ;	4963:2:111031:111043	3507695	3	True				
ANR	3507711	IdentifierDecl	bs		3507695	0					
ANR	3507712	IdentifierDeclType	BitSetRef		3507695	0					
ANR	3507713	Identifier	bs		3507695	1					
ANR	3507714	ExpressionStatement	iarg = ( IApplyCaseFoldArg * ) arg	4965:2:111048:111079	3507695	4	True				
ANR	3507715	AssignmentExpression	iarg = ( IApplyCaseFoldArg * ) arg		3507695	0		=			
ANR	3507716	Identifier	iarg		3507695	0					
ANR	3507717	CastExpression	( IApplyCaseFoldArg * ) arg		3507695	1					
ANR	3507718	CastTarget	IApplyCaseFoldArg *		3507695	0					
ANR	3507719	Identifier	arg		3507695	1					
ANR	3507720	ExpressionStatement	env = iarg -> env	4966:2:111083:111098	3507695	5	True				
ANR	3507721	AssignmentExpression	env = iarg -> env		3507695	0		=			
ANR	3507722	Identifier	env		3507695	0					
ANR	3507723	PtrMemberAccess	iarg -> env		3507695	1					
ANR	3507724	Identifier	iarg		3507695	0					
ANR	3507725	Identifier	env		3507695	1					
ANR	3507726	ExpressionStatement	cc = iarg -> cc	4967:2:111102:111116	3507695	6	True				
ANR	3507727	AssignmentExpression	cc = iarg -> cc		3507695	0		=			
ANR	3507728	Identifier	cc		3507695	0					
ANR	3507729	PtrMemberAccess	iarg -> cc		3507695	1					
ANR	3507730	Identifier	iarg		3507695	0					
ANR	3507731	Identifier	cc		3507695	1					
ANR	3507732	ExpressionStatement	bs = cc -> bs	4968:2:111120:111131	3507695	7	True				
ANR	3507733	AssignmentExpression	bs = cc -> bs		3507695	0		=			
ANR	3507734	Identifier	bs		3507695	0					
ANR	3507735	PtrMemberAccess	cc -> bs		3507695	1					
ANR	3507736	Identifier	cc		3507695	0					
ANR	3507737	Identifier	bs		3507695	1					
ANR	3507738	IfStatement	if ( to_len == 1 )		3507695	8					
ANR	3507739	Condition	to_len == 1	4970:6:111140:111150	3507695	0	True				
ANR	3507740	EqualityExpression	to_len == 1		3507695	0		==			
ANR	3507741	Identifier	to_len		3507695	0					
ANR	3507742	PrimaryExpression	1		3507695	1					
ANR	3507743	CompoundStatement		13:4:192:242	3507695	1					
ANR	3507744	IdentifierDeclStatement	"int is_in = onig_is_code_in_cc ( env -> enc , from , cc ) ;"	4971:4:111159:111209	3507695	0	True				
ANR	3507745	IdentifierDecl	"is_in = onig_is_code_in_cc ( env -> enc , from , cc )"		3507695	0					
ANR	3507746	IdentifierDeclType	int		3507695	0					
ANR	3507747	Identifier	is_in		3507695	1					
ANR	3507748	AssignmentExpression	"is_in = onig_is_code_in_cc ( env -> enc , from , cc )"		3507695	2		=			
ANR	3507749	Identifier	is_in		3507695	0					
ANR	3507750	CallExpression	"onig_is_code_in_cc ( env -> enc , from , cc )"		3507695	1					
ANR	3507751	Callee	onig_is_code_in_cc		3507695	0					
ANR	3507752	Identifier	onig_is_code_in_cc		3507695	0					
ANR	3507753	ArgumentList	env -> enc		3507695	1					
ANR	3507754	Argument	env -> enc		3507695	0					
ANR	3507755	PtrMemberAccess	env -> enc		3507695	0					
ANR	3507756	Identifier	env		3507695	0					
ANR	3507757	Identifier	enc		3507695	1					
ANR	3507758	Argument	from		3507695	1					
ANR	3507759	Identifier	from		3507695	0					
ANR	3507760	Argument	cc		3507695	2					
ANR	3507761	Identifier	cc		3507695	0					
ANR	3507762	IfStatement	if ( ( is_in != 0 && ! IS_NCCLASS_NOT ( cc ) ) || ( is_in == 0 && IS_NCCLASS_NOT ( cc ) ) )		3507695	1					
ANR	3507763	Condition	( is_in != 0 && ! IS_NCCLASS_NOT ( cc ) ) || ( is_in == 0 && IS_NCCLASS_NOT ( cc ) )	4973:8:111270:111344	3507695	0	True				
ANR	3507764	OrExpression	( is_in != 0 && ! IS_NCCLASS_NOT ( cc ) ) || ( is_in == 0 && IS_NCCLASS_NOT ( cc ) )		3507695	0		||			
ANR	3507765	AndExpression	is_in != 0 && ! IS_NCCLASS_NOT ( cc )		3507695	0		&&			
ANR	3507766	EqualityExpression	is_in != 0		3507695	0		!=			
ANR	3507767	Identifier	is_in		3507695	0					
ANR	3507768	PrimaryExpression	0		3507695	1					
ANR	3507769	UnaryOperationExpression	! IS_NCCLASS_NOT ( cc )		3507695	1					
ANR	3507770	UnaryOperator	!		3507695	0					
ANR	3507771	CallExpression	IS_NCCLASS_NOT ( cc )		3507695	1					
ANR	3507772	Callee	IS_NCCLASS_NOT		3507695	0					
ANR	3507773	Identifier	IS_NCCLASS_NOT		3507695	0					
ANR	3507774	ArgumentList	cc		3507695	1					
ANR	3507775	Argument	cc		3507695	0					
ANR	3507776	Identifier	cc		3507695	0					
ANR	3507777	AndExpression	is_in == 0 && IS_NCCLASS_NOT ( cc )		3507695	1		&&			
ANR	3507778	EqualityExpression	is_in == 0		3507695	0		==			
ANR	3507779	Identifier	is_in		3507695	0					
ANR	3507780	PrimaryExpression	0		3507695	1					
ANR	3507781	CallExpression	IS_NCCLASS_NOT ( cc )		3507695	1					
ANR	3507782	Callee	IS_NCCLASS_NOT		3507695	0					
ANR	3507783	Identifier	IS_NCCLASS_NOT		3507695	0					
ANR	3507784	ArgumentList	cc		3507695	1					
ANR	3507785	Argument	cc		3507695	0					
ANR	3507786	Identifier	cc		3507695	0					
ANR	3507787	CompoundStatement		16:38:380:380	3507695	1					
ANR	3507788	IfStatement	if ( ONIGENC_MBC_MINLEN ( env -> enc ) > 1 || * to >= SINGLE_BYTE_SIZE )		3507695	0					
ANR	3507789	Condition	ONIGENC_MBC_MINLEN ( env -> enc ) > 1 || * to >= SINGLE_BYTE_SIZE	4975:10:111359:111417	3507695	0	True				
ANR	3507790	OrExpression	ONIGENC_MBC_MINLEN ( env -> enc ) > 1 || * to >= SINGLE_BYTE_SIZE		3507695	0		||			
ANR	3507791	RelationalExpression	ONIGENC_MBC_MINLEN ( env -> enc ) > 1		3507695	0		>			
ANR	3507792	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		3507695	0					
ANR	3507793	Callee	ONIGENC_MBC_MINLEN		3507695	0					
ANR	3507794	Identifier	ONIGENC_MBC_MINLEN		3507695	0					
ANR	3507795	ArgumentList	env -> enc		3507695	1					
ANR	3507796	Argument	env -> enc		3507695	0					
ANR	3507797	PtrMemberAccess	env -> enc		3507695	0					
ANR	3507798	Identifier	env		3507695	0					
ANR	3507799	Identifier	enc		3507695	1					
ANR	3507800	PrimaryExpression	1		3507695	1					
ANR	3507801	RelationalExpression	* to >= SINGLE_BYTE_SIZE		3507695	1		>=			
ANR	3507802	UnaryOperationExpression	* to		3507695	0					
ANR	3507803	UnaryOperator	*		3507695	0					
ANR	3507804	Identifier	to		3507695	1					
ANR	3507805	Identifier	SINGLE_BYTE_SIZE		3507695	1					
ANR	3507806	CompoundStatement		17:71:453:453	3507695	1					
ANR	3507807	ExpressionStatement	"add_code_range ( & ( cc -> mbuf ) , env , * to , * to )"	4976:1:111423:111465	3507695	0	True				
ANR	3507808	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , * to , * to )"		3507695	0					
ANR	3507809	Callee	add_code_range		3507695	0					
ANR	3507810	Identifier	add_code_range		3507695	0					
ANR	3507811	ArgumentList	& ( cc -> mbuf )		3507695	1					
ANR	3507812	Argument	& ( cc -> mbuf )		3507695	0					
ANR	3507813	UnaryOperationExpression	& ( cc -> mbuf )		3507695	0					
ANR	3507814	UnaryOperator	&		3507695	0					
ANR	3507815	PtrMemberAccess	cc -> mbuf		3507695	1					
ANR	3507816	Identifier	cc		3507695	0					
ANR	3507817	Identifier	mbuf		3507695	1					
ANR	3507818	Argument	env		3507695	1					
ANR	3507819	Identifier	env		3507695	0					
ANR	3507820	Argument	* to		3507695	2					
ANR	3507821	UnaryOperationExpression	* to		3507695	0					
ANR	3507822	UnaryOperator	*		3507695	0					
ANR	3507823	Identifier	to		3507695	1					
ANR	3507824	Argument	* to		3507695	3					
ANR	3507825	UnaryOperationExpression	* to		3507695	0					
ANR	3507826	UnaryOperator	*		3507695	0					
ANR	3507827	Identifier	to		3507695	1					
ANR	3507828	ElseStatement	else		3507695	0					
ANR	3507829	CompoundStatement		20:11:519:519	3507695	0					
ANR	3507830	ExpressionStatement	"BITSET_SET_BIT ( bs , * to )"	4979:1:111489:111512	3507695	0	True				
ANR	3507831	CallExpression	"BITSET_SET_BIT ( bs , * to )"		3507695	0					
ANR	3507832	Callee	BITSET_SET_BIT		3507695	0					
ANR	3507833	Identifier	BITSET_SET_BIT		3507695	0					
ANR	3507834	ArgumentList	bs		3507695	1					
ANR	3507835	Argument	bs		3507695	0					
ANR	3507836	Identifier	bs		3507695	0					
ANR	3507837	Argument	* to		3507695	1					
ANR	3507838	UnaryOperationExpression	* to		3507695	0					
ANR	3507839	UnaryOperator	*		3507695	0					
ANR	3507840	Identifier	to		3507695	1					
ANR	3507841	ElseStatement	else		3507695	0					
ANR	3507842	CompoundStatement		43:4:1034:1057	3507695	0					
ANR	3507843	IdentifierDeclStatement	"int r , i , len ;"	4999:4:111939:111952	3507695	0	True				
ANR	3507844	IdentifierDecl	r		3507695	0					
ANR	3507845	IdentifierDeclType	int		3507695	0					
ANR	3507846	Identifier	r		3507695	1					
ANR	3507847	IdentifierDecl	i		3507695	1					
ANR	3507848	IdentifierDeclType	int		3507695	0					
ANR	3507849	Identifier	i		3507695	1					
ANR	3507850	IdentifierDecl	len		3507695	2					
ANR	3507851	IdentifierDeclType	int		3507695	0					
ANR	3507852	Identifier	len		3507695	1					
ANR	3507853	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	5000:4:111958:111995	3507695	1	True				
ANR	3507854	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		3507695	0					
ANR	3507855	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		3507695	0					
ANR	3507856	Identifier	buf		3507695	1					
ANR	3507857	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		3507695	2					
ANR	3507858	IdentifierDeclStatement	Node * snode = NULL_NODE ;	5001:4:112001:112024	3507695	2	True				
ANR	3507859	IdentifierDecl	* snode = NULL_NODE		3507695	0					
ANR	3507860	IdentifierDeclType	Node *		3507695	0					
ANR	3507861	Identifier	snode		3507695	1					
ANR	3507862	AssignmentExpression	* snode = NULL_NODE		3507695	2		=			
ANR	3507863	Identifier	NULL_NODE		3507695	0					
ANR	3507864	Identifier	NULL_NODE		3507695	1					
ANR	3507865	Statement	if	5003:4:112031:112032	3507695	3	True				
ANR	3507866	Statement	(	5003:7:112034:112034	3507695	4	True				
ANR	3507867	Statement	onig_is_code_in_cc	5003:8:112035:112052	3507695	5	True				
ANR	3507868	Statement	(	5003:26:112053:112053	3507695	6	True				
ANR	3507869	Statement	env	5003:27:112054:112056	3507695	7	True				
ANR	3507870	Statement	->	5003:30:112057:112058	3507695	8	True				
ANR	3507871	Statement	enc	5003:32:112059:112061	3507695	9	True				
ANR	3507872	Statement	","	5003:35:112062:112062	3507695	10	True				
ANR	3507873	Statement	from	5003:37:112064:112067	3507695	11	True				
ANR	3507874	Statement	","	5003:41:112068:112068	3507695	12	True				
ANR	3507875	Statement	cc	5003:43:112070:112071	3507695	13	True				
ANR	3507876	Statement	)	5003:45:112072:112072	3507695	14	True				
ANR	3507877	Statement	&&	5005:1:112126:112127	3507695	15	True				
ANR	3507878	Statement	!	5005:4:112129:112129	3507695	16	True				
ANR	3507879	Statement	IS_NCCLASS_NOT	5005:5:112130:112143	3507695	17	True				
ANR	3507880	Statement	(	5005:19:112144:112144	3507695	18	True				
ANR	3507881	Statement	cc	5005:20:112145:112146	3507695	19	True				
ANR	3507882	Statement	)	5005:22:112147:112147	3507695	20	True				
ANR	3507883	Statement	)	5007:1:112157:112157	3507695	21	True				
ANR	3507884	CompoundStatement		49:3:1192:1192	3507695	22					
ANR	3507885	ForStatement	for ( i = 0 ; i < to_len ; i ++ )		3507695	0					
ANR	3507886	ForInit	i = 0 ;	5008:11:112172:112177	3507695	0	True				
ANR	3507887	AssignmentExpression	i = 0		3507695	0		=			
ANR	3507888	Identifier	i		3507695	0					
ANR	3507889	PrimaryExpression	0		3507695	1					
ANR	3507890	Condition	i < to_len	5008:18:112179:112188	3507695	1	True				
ANR	3507891	RelationalExpression	i < to_len		3507695	0		<			
ANR	3507892	Identifier	i		3507695	0					
ANR	3507893	Identifier	to_len		3507695	1					
ANR	3507894	PostIncDecOperationExpression	i ++	5008:30:112191:112193	3507695	2	True				
ANR	3507895	Identifier	i		3507695	0					
ANR	3507896	IncDec	++		3507695	1					
ANR	3507897	CompoundStatement		50:35:1229:1229	3507695	3					
ANR	3507898	ExpressionStatement	"len = ONIGENC_CODE_TO_MBC ( env -> enc , to [ i ] , buf )"	5009:1:112199:112246	3507695	0	True				
ANR	3507899	AssignmentExpression	"len = ONIGENC_CODE_TO_MBC ( env -> enc , to [ i ] , buf )"		3507695	0		=			
ANR	3507900	Identifier	len		3507695	0					
ANR	3507901	CallExpression	"ONIGENC_CODE_TO_MBC ( env -> enc , to [ i ] , buf )"		3507695	1					
ANR	3507902	Callee	ONIGENC_CODE_TO_MBC		3507695	0					
ANR	3507903	Identifier	ONIGENC_CODE_TO_MBC		3507695	0					
ANR	3507904	ArgumentList	env -> enc		3507695	1					
ANR	3507905	Argument	env -> enc		3507695	0					
ANR	3507906	PtrMemberAccess	env -> enc		3507695	0					
ANR	3507907	Identifier	env		3507695	0					
ANR	3507908	Identifier	enc		3507695	1					
ANR	3507909	Argument	to [ i ]		3507695	1					
ANR	3507910	ArrayIndexing	to [ i ]		3507695	0					
ANR	3507911	Identifier	to		3507695	0					
ANR	3507912	Identifier	i		3507695	1					
ANR	3507913	Argument	buf		3507695	2					
ANR	3507914	Identifier	buf		3507695	0					
ANR	3507915	IfStatement	if ( i == 0 )		3507695	1					
ANR	3507916	Condition	i == 0	5010:5:112253:112258	3507695	0	True				
ANR	3507917	EqualityExpression	i == 0		3507695	0		==			
ANR	3507918	Identifier	i		3507695	0					
ANR	3507919	PrimaryExpression	0		3507695	1					
ANR	3507920	CompoundStatement		52:13:1294:1294	3507695	1					
ANR	3507921	ExpressionStatement	"snode = onig_node_new_str ( buf , buf + len )"	5011:3:112266:112307	3507695	0	True				
ANR	3507922	AssignmentExpression	"snode = onig_node_new_str ( buf , buf + len )"		3507695	0		=			
ANR	3507923	Identifier	snode		3507695	0					
ANR	3507924	CallExpression	"onig_node_new_str ( buf , buf + len )"		3507695	1					
ANR	3507925	Callee	onig_node_new_str		3507695	0					
ANR	3507926	Identifier	onig_node_new_str		3507695	0					
ANR	3507927	ArgumentList	buf		3507695	1					
ANR	3507928	Argument	buf		3507695	0					
ANR	3507929	Identifier	buf		3507695	0					
ANR	3507930	Argument	buf + len		3507695	1					
ANR	3507931	AdditiveExpression	buf + len		3507695	0		+			
ANR	3507932	Identifier	buf		3507695	0					
ANR	3507933	Identifier	len		3507695	1					
ANR	3507934	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( snode )	5012:3:112312:112343	3507695	1	True				
ANR	3507935	CallExpression	CHECK_NULL_RETURN_MEMERR ( snode )		3507695	0					
ANR	3507936	Callee	CHECK_NULL_RETURN_MEMERR		3507695	0					
ANR	3507937	Identifier	CHECK_NULL_RETURN_MEMERR		3507695	0					
ANR	3507938	ArgumentList	snode		3507695	1					
ANR	3507939	Argument	snode		3507695	0					
ANR	3507940	Identifier	snode		3507695	0					
ANR	3507941	ExpressionStatement	NSTRING_SET_AMBIG ( snode )	5016:3:112442:112466	3507695	2	True				
ANR	3507942	CallExpression	NSTRING_SET_AMBIG ( snode )		3507695	0					
ANR	3507943	Callee	NSTRING_SET_AMBIG		3507695	0					
ANR	3507944	Identifier	NSTRING_SET_AMBIG		3507695	0					
ANR	3507945	ArgumentList	snode		3507695	1					
ANR	3507946	Argument	snode		3507695	0					
ANR	3507947	Identifier	snode		3507695	0					
ANR	3507948	ElseStatement	else		3507695	0					
ANR	3507949	CompoundStatement		60:6:1510:1510	3507695	0					
ANR	3507950	ExpressionStatement	"r = onig_node_str_cat ( snode , buf , buf + len )"	5019:3:112482:112526	3507695	0	True				
ANR	3507951	AssignmentExpression	"r = onig_node_str_cat ( snode , buf , buf + len )"		3507695	0		=			
ANR	3507952	Identifier	r		3507695	0					
ANR	3507953	CallExpression	"onig_node_str_cat ( snode , buf , buf + len )"		3507695	1					
ANR	3507954	Callee	onig_node_str_cat		3507695	0					
ANR	3507955	Identifier	onig_node_str_cat		3507695	0					
ANR	3507956	ArgumentList	snode		3507695	1					
ANR	3507957	Argument	snode		3507695	0					
ANR	3507958	Identifier	snode		3507695	0					
ANR	3507959	Argument	buf		3507695	1					
ANR	3507960	Identifier	buf		3507695	0					
ANR	3507961	Argument	buf + len		3507695	2					
ANR	3507962	AdditiveExpression	buf + len		3507695	0		+			
ANR	3507963	Identifier	buf		3507695	0					
ANR	3507964	Identifier	len		3507695	1					
ANR	3507965	IfStatement	if ( r < 0 )		3507695	1					
ANR	3507966	Condition	r < 0	5020:7:112535:112539	3507695	0	True				
ANR	3507967	RelationalExpression	r < 0		3507695	0		<			
ANR	3507968	Identifier	r		3507695	0					
ANR	3507969	PrimaryExpression	0		3507695	1					
ANR	3507970	CompoundStatement		62:14:1575:1575	3507695	1					
ANR	3507971	ExpressionStatement	onig_node_free ( snode )	5021:5:112549:112570	3507695	0	True				
ANR	3507972	CallExpression	onig_node_free ( snode )		3507695	0					
ANR	3507973	Callee	onig_node_free		3507695	0					
ANR	3507974	Identifier	onig_node_free		3507695	0					
ANR	3507975	ArgumentList	snode		3507695	1					
ANR	3507976	Argument	snode		3507695	0					
ANR	3507977	Identifier	snode		3507695	0					
ANR	3507978	ReturnStatement	return r ;	5022:5:112577:112585	3507695	1	True				
ANR	3507979	Identifier	r		3507695	0					
ANR	3507980	ExpressionStatement	"* ( iarg -> ptail ) = onig_node_new_alt ( snode , NULL_NODE )"	5027:6:112610:112662	3507695	1	True				
ANR	3507981	AssignmentExpression	"* ( iarg -> ptail ) = onig_node_new_alt ( snode , NULL_NODE )"		3507695	0		=			
ANR	3507982	UnaryOperationExpression	* ( iarg -> ptail )		3507695	0					
ANR	3507983	UnaryOperator	*		3507695	0					
ANR	3507984	PtrMemberAccess	iarg -> ptail		3507695	1					
ANR	3507985	Identifier	iarg		3507695	0					
ANR	3507986	Identifier	ptail		3507695	1					
ANR	3507987	CallExpression	"onig_node_new_alt ( snode , NULL_NODE )"		3507695	1					
ANR	3507988	Callee	onig_node_new_alt		3507695	0					
ANR	3507989	Identifier	onig_node_new_alt		3507695	0					
ANR	3507990	ArgumentList	snode		3507695	1					
ANR	3507991	Argument	snode		3507695	0					
ANR	3507992	Identifier	snode		3507695	0					
ANR	3507993	Argument	NULL_NODE		3507695	1					
ANR	3507994	Identifier	NULL_NODE		3507695	0					
ANR	3507995	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * ( iarg -> ptail ) )	5028:6:112670:112710	3507695	2	True				
ANR	3507996	CallExpression	CHECK_NULL_RETURN_MEMERR ( * ( iarg -> ptail ) )		3507695	0					
ANR	3507997	Callee	CHECK_NULL_RETURN_MEMERR		3507695	0					
ANR	3507998	Identifier	CHECK_NULL_RETURN_MEMERR		3507695	0					
ANR	3507999	ArgumentList	* ( iarg -> ptail )		3507695	1					
ANR	3508000	Argument	* ( iarg -> ptail )		3507695	0					
ANR	3508001	UnaryOperationExpression	* ( iarg -> ptail )		3507695	0					
ANR	3508002	UnaryOperator	*		3507695	0					
ANR	3508003	PtrMemberAccess	iarg -> ptail		3507695	1					
ANR	3508004	Identifier	iarg		3507695	0					
ANR	3508005	Identifier	ptail		3507695	1					
ANR	3508006	ExpressionStatement	iarg -> ptail = & ( NCDR ( ( * ( iarg -> ptail ) ) ) )	5029:6:112718:112757	3507695	3	True				
ANR	3508007	AssignmentExpression	iarg -> ptail = & ( NCDR ( ( * ( iarg -> ptail ) ) ) )		3507695	0		=			
ANR	3508008	PtrMemberAccess	iarg -> ptail		3507695	0					
ANR	3508009	Identifier	iarg		3507695	0					
ANR	3508010	Identifier	ptail		3507695	1					
ANR	3508011	UnaryOperationExpression	& ( NCDR ( ( * ( iarg -> ptail ) ) ) )		3507695	1					
ANR	3508012	UnaryOperator	&		3507695	0					
ANR	3508013	CallExpression	NCDR ( ( * ( iarg -> ptail ) ) )		3507695	1					
ANR	3508014	Callee	NCDR		3507695	0					
ANR	3508015	Identifier	NCDR		3507695	0					
ANR	3508016	ArgumentList	* ( iarg -> ptail )		3507695	1					
ANR	3508017	Argument	* ( iarg -> ptail )		3507695	0					
ANR	3508018	UnaryOperationExpression	* ( iarg -> ptail )		3507695	0					
ANR	3508019	UnaryOperator	*		3507695	0					
ANR	3508020	PtrMemberAccess	iarg -> ptail		3507695	1					
ANR	3508021	Identifier	iarg		3507695	0					
ANR	3508022	Identifier	ptail		3507695	1					
ANR	3508023	ReturnStatement	return 0 ;	5033:2:112772:112780	3507695	9	True				
ANR	3508024	PrimaryExpression	0		3507695	0					
ANR	3508025	ReturnType	static int		3507695	1					
ANR	3508026	Identifier	i_apply_case_fold		3507695	2					
ANR	3508027	ParameterList	"OnigCodePoint from , OnigCodePoint to [ ] , int to_len , void * arg"		3507695	3					
ANR	3508028	Parameter	OnigCodePoint from	4957:18:110899:110916	3507695	0	True				
ANR	3508029	ParameterType	OnigCodePoint		3507695	0					
ANR	3508030	Identifier	from		3507695	1					
ANR	3508031	Parameter	OnigCodePoint to [ ]	4957:38:110919:110936	3507695	1	True				
ANR	3508032	ParameterType	OnigCodePoint [ ]		3507695	0					
ANR	3508033	Identifier	to		3507695	1					
ANR	3508034	Parameter	int to_len	4958:4:110943:110952	3507695	2	True				
ANR	3508035	ParameterType	int		3507695	0					
ANR	3508036	Identifier	to_len		3507695	1					
ANR	3508037	Parameter	void * arg	4958:16:110955:110963	3507695	3	True				
ANR	3508038	ParameterType	void *		3507695	0					
ANR	3508039	Identifier	arg		3507695	1					
ANR	3508040	CFGEntryNode	ENTRY		3507695		True				
ANR	3508041	CFGExitNode	EXIT		3507695		True				
ANR	3508042	Symbol	& NCDR		3507695						
ANR	3508043	Symbol	* iarg -> ptail		3507695						
ANR	3508044	Symbol	* cc		3507695						
ANR	3508045	Symbol	IS_NCCLASS_NOT		3507695						
ANR	3508046	Symbol	ONIGENC_MBC_MINLEN		3507695						
ANR	3508047	Symbol	env -> enc		3507695						
ANR	3508048	Symbol	iarg -> env		3507695						
ANR	3508049	Symbol	bs		3507695						
ANR	3508050	Symbol	len		3507695						
ANR	3508051	Symbol	iarg -> ptail		3507695						
ANR	3508052	Symbol	arg		3507695						
ANR	3508053	Symbol	from		3507695						
ANR	3508054	Symbol	* iarg		3507695						
ANR	3508055	Symbol	& cc -> mbuf		3507695						
ANR	3508056	Symbol	onig_is_code_in_cc		3507695						
ANR	3508057	Symbol	cc		3507695						
ANR	3508058	Symbol	SINGLE_BYTE_SIZE		3507695						
ANR	3508059	Symbol	* * iarg		3507695						
ANR	3508060	Symbol	* to		3507695						
ANR	3508061	Symbol	onig_node_new_alt		3507695						
ANR	3508062	Symbol	* ( iarg -> ptail )		3507695						
ANR	3508063	Symbol	is_in		3507695						
ANR	3508064	Symbol	* env		3507695						
ANR	3508065	Symbol	i		3507695						
ANR	3508066	Symbol	to_len		3507695						
ANR	3508067	Symbol	env		3507695						
ANR	3508068	Symbol	cc -> bs		3507695						
ANR	3508069	Symbol	r		3507695						
ANR	3508070	Symbol	buf		3507695						
ANR	3508071	Symbol	* i		3507695						
ANR	3508072	Symbol	ONIGENC_CODE_TO_MBC		3507695						
ANR	3508073	Symbol	onig_node_str_cat		3507695						
ANR	3508074	Symbol	onig_node_new_str		3507695						
ANR	3508075	Symbol	to		3507695						
ANR	3508076	Symbol	iarg -> cc		3507695						
ANR	3508077	Symbol	iarg		3507695						
ANR	3508078	Symbol	NULL_NODE		3507695						
ANR	3508079	Symbol	snode		3507695						
ANR	3508080	Function	parse_exp	5036:0:112785:122115							
ANR	3508081	FunctionDef	"parse_exp (Node * * np , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env)"		3508080	0					
ANR	3508082	CompoundStatement		5039:0:112885:122115	3508080	0					
ANR	3508083	IdentifierDeclStatement	"int r , len , group = 0 ;"	5040:2:112889:112910	3508080	0	True				
ANR	3508084	IdentifierDecl	r		3508080	0					
ANR	3508085	IdentifierDeclType	int		3508080	0					
ANR	3508086	Identifier	r		3508080	1					
ANR	3508087	IdentifierDecl	len		3508080	1					
ANR	3508088	IdentifierDeclType	int		3508080	0					
ANR	3508089	Identifier	len		3508080	1					
ANR	3508090	IdentifierDecl	group = 0		3508080	2					
ANR	3508091	IdentifierDeclType	int		3508080	0					
ANR	3508092	Identifier	group		3508080	1					
ANR	3508093	AssignmentExpression	group = 0		3508080	2		=			
ANR	3508094	Identifier	group		3508080	0					
ANR	3508095	PrimaryExpression	0		3508080	1					
ANR	3508096	IdentifierDeclStatement	Node * qn ;	5041:2:112914:112922	3508080	1	True				
ANR	3508097	IdentifierDecl	* qn		3508080	0					
ANR	3508098	IdentifierDeclType	Node *		3508080	0					
ANR	3508099	Identifier	qn		3508080	1					
ANR	3508100	IdentifierDeclStatement	Node * * targetp ;	5042:2:112926:112940	3508080	2	True				
ANR	3508101	IdentifierDecl	* * targetp		3508080	0					
ANR	3508102	IdentifierDeclType	Node * *		3508080	0					
ANR	3508103	Identifier	targetp		3508080	1					
ANR	3508104	ExpressionStatement	* np = NULL	5044:2:112945:112955	3508080	3	True				
ANR	3508105	AssignmentExpression	* np = NULL		3508080	0		=			
ANR	3508106	UnaryOperationExpression	* np		3508080	0					
ANR	3508107	UnaryOperator	*		3508080	0					
ANR	3508108	Identifier	np		3508080	1					
ANR	3508109	Identifier	NULL		3508080	1					
ANR	3508110	IfStatement	if ( tok -> type == ( enum TokenSyms ) term )		3508080	4					
ANR	3508111	Condition	tok -> type == ( enum TokenSyms ) term	5045:6:112963:112996	3508080	0	True				
ANR	3508112	EqualityExpression	tok -> type == ( enum TokenSyms ) term		3508080	0		==			
ANR	3508113	PtrMemberAccess	tok -> type		3508080	0					
ANR	3508114	Identifier	tok		3508080	0					
ANR	3508115	Identifier	type		3508080	1					
ANR	3508116	CastExpression	( enum TokenSyms ) term		3508080	1					
ANR	3508117	CastTarget	enum TokenSyms		3508080	0					
ANR	3508118	Identifier	term		3508080	1					
ANR	3508119	GotoStatement	goto end_of_token ;	5046:4:113003:113020	3508080	1	True				
ANR	3508120	Identifier	end_of_token		3508080	0					
ANR	3508121	SwitchStatement	switch ( tok -> type )		3508080	5					
ANR	3508122	Condition	tok -> type	5048:10:113033:113041	3508080	0	True				
ANR	3508123	PtrMemberAccess	tok -> type		3508080	0					
ANR	3508124	Identifier	tok		3508080	0					
ANR	3508125	Identifier	type		3508080	1					
ANR	3508126	CompoundStatement		10:21:158:158	3508080	1					
ANR	3508127	Label	case TK_ALT :	5049:2:113048:113059	3508080	0	True				
ANR	3508128	Identifier	TK_ALT		3508080	0					
ANR	3508129	Label	case TK_EOT :	5050:2:113063:113074	3508080	1	True				
ANR	3508130	Identifier	TK_EOT		3508080	0					
ANR	3508131	Label	end_of_token :	5051:2:113078:113090	3508080	2	True				
ANR	3508132	Identifier	end_of_token		3508080	0					
ANR	3508133	ExpressionStatement	* np = node_new_empty ( )	5052:2:113094:113116	3508080	3	True				
ANR	3508134	AssignmentExpression	* np = node_new_empty ( )		3508080	0		=			
ANR	3508135	UnaryOperationExpression	* np		3508080	0					
ANR	3508136	UnaryOperator	*		3508080	0					
ANR	3508137	Identifier	np		3508080	1					
ANR	3508138	CallExpression	node_new_empty ( )		3508080	1					
ANR	3508139	Callee	node_new_empty		3508080	0					
ANR	3508140	Identifier	node_new_empty		3508080	0					
ANR	3508141	ArgumentList			3508080	1					
ANR	3508142	ReturnStatement	return tok -> type ;	5053:2:113120:113136	3508080	4	True				
ANR	3508143	PtrMemberAccess	tok -> type		3508080	0					
ANR	3508144	Identifier	tok		3508080	0					
ANR	3508145	Identifier	type		3508080	1					
ANR	3508146	BreakStatement	break ;	5054:2:113140:113145	3508080	5	True				
ANR	3508147	Label	case TK_SUBEXP_OPEN :	5056:2:113150:113169	3508080	6	True				
ANR	3508148	Identifier	TK_SUBEXP_OPEN		3508080	0					
ANR	3508149	ExpressionStatement	"r = parse_enclose ( np , tok , TK_SUBEXP_CLOSE , src , end , env )"	5057:4:113175:113233	3508080	7	True				
ANR	3508150	AssignmentExpression	"r = parse_enclose ( np , tok , TK_SUBEXP_CLOSE , src , end , env )"		3508080	0		=			
ANR	3508151	Identifier	r		3508080	0					
ANR	3508152	CallExpression	"parse_enclose ( np , tok , TK_SUBEXP_CLOSE , src , end , env )"		3508080	1					
ANR	3508153	Callee	parse_enclose		3508080	0					
ANR	3508154	Identifier	parse_enclose		3508080	0					
ANR	3508155	ArgumentList	np		3508080	1					
ANR	3508156	Argument	np		3508080	0					
ANR	3508157	Identifier	np		3508080	0					
ANR	3508158	Argument	tok		3508080	1					
ANR	3508159	Identifier	tok		3508080	0					
ANR	3508160	Argument	TK_SUBEXP_CLOSE		3508080	2					
ANR	3508161	Identifier	TK_SUBEXP_CLOSE		3508080	0					
ANR	3508162	Argument	src		3508080	3					
ANR	3508163	Identifier	src		3508080	0					
ANR	3508164	Argument	end		3508080	4					
ANR	3508165	Identifier	end		3508080	0					
ANR	3508166	Argument	env		3508080	5					
ANR	3508167	Identifier	env		3508080	0					
ANR	3508168	IfStatement	if ( r < 0 )		3508080	8					
ANR	3508169	Condition	r < 0	5058:8:113243:113247	3508080	0	True				
ANR	3508170	RelationalExpression	r < 0		3508080	0		<			
ANR	3508171	Identifier	r		3508080	0					
ANR	3508172	PrimaryExpression	0		3508080	1					
ANR	3508173	ReturnStatement	return r ;	5058:15:113250:113258	3508080	1	True				
ANR	3508174	Identifier	r		3508080	0					
ANR	3508175	IfStatement	if ( r == 1 )		3508080	9					
ANR	3508176	Condition	r == 1	5059:8:113268:113273	3508080	0	True				
ANR	3508177	EqualityExpression	r == 1		3508080	0		==			
ANR	3508178	Identifier	r		3508080	0					
ANR	3508179	PrimaryExpression	1		3508080	1					
ANR	3508180	ExpressionStatement	group = 1	5059:16:113276:113285	3508080	1	True				
ANR	3508181	AssignmentExpression	group = 1		3508080	0		=			
ANR	3508182	Identifier	group		3508080	0					
ANR	3508183	PrimaryExpression	1		3508080	1					
ANR	3508184	ElseStatement	else		3508080	0					
ANR	3508185	IfStatement	if ( r == 2 )		3508080	0					
ANR	3508186	Condition	r == 2	5060:13:113300:113305	3508080	0	True				
ANR	3508187	EqualityExpression	r == 2		3508080	0		==			
ANR	3508188	Identifier	r		3508080	0					
ANR	3508189	PrimaryExpression	2		3508080	1					
ANR	3508190	CompoundStatement		24:6:468:501	3508080	1					
ANR	3508191	IdentifierDeclStatement	Node * target ;	5061:6:113334:113346	3508080	0	True				
ANR	3508192	IdentifierDecl	* target		3508080	0					
ANR	3508193	IdentifierDeclType	Node *		3508080	0					
ANR	3508194	Identifier	target		3508080	1					
ANR	3508195	IdentifierDeclStatement	OnigOptionType prev = env -> option ;	5062:6:113354:113387	3508080	1	True				
ANR	3508196	IdentifierDecl	prev = env -> option		3508080	0					
ANR	3508197	IdentifierDeclType	OnigOptionType		3508080	0					
ANR	3508198	Identifier	prev		3508080	1					
ANR	3508199	AssignmentExpression	prev = env -> option		3508080	2		=			
ANR	3508200	Identifier	prev		3508080	0					
ANR	3508201	PtrMemberAccess	env -> option		3508080	1					
ANR	3508202	Identifier	env		3508080	0					
ANR	3508203	Identifier	option		3508080	1					
ANR	3508204	ExpressionStatement	env -> option = NENCLOSE ( * np ) -> option	5064:6:113396:113431	3508080	2	True				
ANR	3508205	AssignmentExpression	env -> option = NENCLOSE ( * np ) -> option		3508080	0		=			
ANR	3508206	PtrMemberAccess	env -> option		3508080	0					
ANR	3508207	Identifier	env		3508080	0					
ANR	3508208	Identifier	option		3508080	1					
ANR	3508209	PtrMemberAccess	NENCLOSE ( * np ) -> option		3508080	1					
ANR	3508210	CallExpression	NENCLOSE ( * np )		3508080	0					
ANR	3508211	Callee	NENCLOSE		3508080	0					
ANR	3508212	Identifier	NENCLOSE		3508080	0					
ANR	3508213	ArgumentList	* np		3508080	1					
ANR	3508214	Argument	* np		3508080	0					
ANR	3508215	UnaryOperationExpression	* np		3508080	0					
ANR	3508216	UnaryOperator	*		3508080	0					
ANR	3508217	Identifier	np		3508080	1					
ANR	3508218	Identifier	option		3508080	1					
ANR	3508219	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5065:6:113439:113474	3508080	3	True				
ANR	3508220	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		3508080	0		=			
ANR	3508221	Identifier	r		3508080	0					
ANR	3508222	CallExpression	"fetch_token ( tok , src , end , env )"		3508080	1					
ANR	3508223	Callee	fetch_token		3508080	0					
ANR	3508224	Identifier	fetch_token		3508080	0					
ANR	3508225	ArgumentList	tok		3508080	1					
ANR	3508226	Argument	tok		3508080	0					
ANR	3508227	Identifier	tok		3508080	0					
ANR	3508228	Argument	src		3508080	1					
ANR	3508229	Identifier	src		3508080	0					
ANR	3508230	Argument	end		3508080	2					
ANR	3508231	Identifier	end		3508080	0					
ANR	3508232	Argument	env		3508080	3					
ANR	3508233	Identifier	env		3508080	0					
ANR	3508234	IfStatement	if ( r < 0 )		3508080	4					
ANR	3508235	Condition	r < 0	5066:10:113486:113490	3508080	0	True				
ANR	3508236	RelationalExpression	r < 0		3508080	0		<			
ANR	3508237	Identifier	r		3508080	0					
ANR	3508238	PrimaryExpression	0		3508080	1					
ANR	3508239	ReturnStatement	return r ;	5066:17:113493:113501	3508080	1	True				
ANR	3508240	Identifier	r		3508080	0					
ANR	3508241	ExpressionStatement	"r = parse_subexp ( & target , tok , term , src , end , env )"	5067:6:113509:113560	3508080	5	True				
ANR	3508242	AssignmentExpression	"r = parse_subexp ( & target , tok , term , src , end , env )"		3508080	0		=			
ANR	3508243	Identifier	r		3508080	0					
ANR	3508244	CallExpression	"parse_subexp ( & target , tok , term , src , end , env )"		3508080	1					
ANR	3508245	Callee	parse_subexp		3508080	0					
ANR	3508246	Identifier	parse_subexp		3508080	0					
ANR	3508247	ArgumentList	& target		3508080	1					
ANR	3508248	Argument	& target		3508080	0					
ANR	3508249	UnaryOperationExpression	& target		3508080	0					
ANR	3508250	UnaryOperator	&		3508080	0					
ANR	3508251	Identifier	target		3508080	1					
ANR	3508252	Argument	tok		3508080	1					
ANR	3508253	Identifier	tok		3508080	0					
ANR	3508254	Argument	term		3508080	2					
ANR	3508255	Identifier	term		3508080	0					
ANR	3508256	Argument	src		3508080	3					
ANR	3508257	Identifier	src		3508080	0					
ANR	3508258	Argument	end		3508080	4					
ANR	3508259	Identifier	end		3508080	0					
ANR	3508260	Argument	env		3508080	5					
ANR	3508261	Identifier	env		3508080	0					
ANR	3508262	ExpressionStatement	env -> option = prev	5068:6:113568:113586	3508080	6	True				
ANR	3508263	AssignmentExpression	env -> option = prev		3508080	0		=			
ANR	3508264	PtrMemberAccess	env -> option		3508080	0					
ANR	3508265	Identifier	env		3508080	0					
ANR	3508266	Identifier	option		3508080	1					
ANR	3508267	Identifier	prev		3508080	1					
ANR	3508268	IfStatement	if ( r < 0 )		3508080	7					
ANR	3508269	Condition	r < 0	5069:10:113598:113602	3508080	0	True				
ANR	3508270	RelationalExpression	r < 0		3508080	0		<			
ANR	3508271	Identifier	r		3508080	0					
ANR	3508272	PrimaryExpression	0		3508080	1					
ANR	3508273	ReturnStatement	return r ;	5069:17:113605:113613	3508080	1	True				
ANR	3508274	Identifier	r		3508080	0					
ANR	3508275	ExpressionStatement	NENCLOSE ( * np ) -> target = target	5070:6:113621:113651	3508080	8	True				
ANR	3508276	AssignmentExpression	NENCLOSE ( * np ) -> target = target		3508080	0		=			
ANR	3508277	PtrMemberAccess	NENCLOSE ( * np ) -> target		3508080	0					
ANR	3508278	CallExpression	NENCLOSE ( * np )		3508080	0					
ANR	3508279	Callee	NENCLOSE		3508080	0					
ANR	3508280	Identifier	NENCLOSE		3508080	0					
ANR	3508281	ArgumentList	* np		3508080	1					
ANR	3508282	Argument	* np		3508080	0					
ANR	3508283	UnaryOperationExpression	* np		3508080	0					
ANR	3508284	UnaryOperator	*		3508080	0					
ANR	3508285	Identifier	np		3508080	1					
ANR	3508286	Identifier	target		3508080	1					
ANR	3508287	Identifier	target		3508080	1					
ANR	3508288	ReturnStatement	return tok -> type ;	5071:6:113660:113676	3508080	9	True				
ANR	3508289	PtrMemberAccess	tok -> type		3508080	0					
ANR	3508290	Identifier	tok		3508080	0					
ANR	3508291	Identifier	type		3508080	1					
ANR	3508292	BreakStatement	break ;	5073:4:113688:113693	3508080	10	True				
ANR	3508293	Label	case TK_SUBEXP_CLOSE :	5075:2:113698:113718	3508080	11	True				
ANR	3508294	Identifier	TK_SUBEXP_CLOSE		3508080	0					
ANR	3508295	IfStatement	"if ( ! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP ) )"		3508080	12					
ANR	3508296	Condition	"! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP )"	5076:8:113728:113793	3508080	0	True				
ANR	3508297	UnaryOperationExpression	"! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP )"		3508080	0					
ANR	3508298	UnaryOperator	!		3508080	0					
ANR	3508299	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP )"		3508080	1					
ANR	3508300	Callee	IS_SYNTAX_BV		3508080	0					
ANR	3508301	Identifier	IS_SYNTAX_BV		3508080	0					
ANR	3508302	ArgumentList	env -> syntax		3508080	1					
ANR	3508303	Argument	env -> syntax		3508080	0					
ANR	3508304	PtrMemberAccess	env -> syntax		3508080	0					
ANR	3508305	Identifier	env		3508080	0					
ANR	3508306	Identifier	syntax		3508080	1					
ANR	3508307	Argument	ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP		3508080	1					
ANR	3508308	Identifier	ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP		3508080	0					
ANR	3508309	ReturnStatement	return ONIGERR_UNMATCHED_CLOSE_PARENTHESIS ;	5077:6:113802:113844	3508080	1	True				
ANR	3508310	Identifier	ONIGERR_UNMATCHED_CLOSE_PARENTHESIS		3508080	0					
ANR	3508311	IfStatement	if ( tok -> escaped )		3508080	13					
ANR	3508312	Condition	tok -> escaped	5079:8:113855:113866	3508080	0	True				
ANR	3508313	PtrMemberAccess	tok -> escaped		3508080	0					
ANR	3508314	Identifier	tok		3508080	0					
ANR	3508315	Identifier	escaped		3508080	1					
ANR	3508316	GotoStatement	goto tk_raw_byte ;	5079:22:113869:113885	3508080	1	True				
ANR	3508317	Identifier	tk_raw_byte		3508080	0					
ANR	3508318	ElseStatement	else		3508080	0					
ANR	3508319	GotoStatement	goto tk_byte ;	5080:9:113896:113908	3508080	0	True				
ANR	3508320	Identifier	tk_byte		3508080	0					
ANR	3508321	BreakStatement	break ;	5081:4:113914:113919	3508080	14	True				
ANR	3508322	Label	case TK_STRING :	5083:2:113924:113938	3508080	15	True				
ANR	3508323	Identifier	TK_STRING		3508080	0					
ANR	3508324	Label	tk_byte :	5084:2:113942:113949	3508080	16	True				
ANR	3508325	Identifier	tk_byte		3508080	0					
ANR	3508326	CompoundStatement		47:4:1069:1069	3508080	17					
ANR	3508327	ExpressionStatement	"* np = node_new_str ( tok -> backp , * src )"	5086:6:113963:113999	3508080	0	True				
ANR	3508328	AssignmentExpression	"* np = node_new_str ( tok -> backp , * src )"		3508080	0		=			
ANR	3508329	UnaryOperationExpression	* np		3508080	0					
ANR	3508330	UnaryOperator	*		3508080	0					
ANR	3508331	Identifier	np		3508080	1					
ANR	3508332	CallExpression	"node_new_str ( tok -> backp , * src )"		3508080	1					
ANR	3508333	Callee	node_new_str		3508080	0					
ANR	3508334	Identifier	node_new_str		3508080	0					
ANR	3508335	ArgumentList	tok -> backp		3508080	1					
ANR	3508336	Argument	tok -> backp		3508080	0					
ANR	3508337	PtrMemberAccess	tok -> backp		3508080	0					
ANR	3508338	Identifier	tok		3508080	0					
ANR	3508339	Identifier	backp		3508080	1					
ANR	3508340	Argument	* src		3508080	1					
ANR	3508341	UnaryOperationExpression	* src		3508080	0					
ANR	3508342	UnaryOperator	*		3508080	0					
ANR	3508343	Identifier	src		3508080	1					
ANR	3508344	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5087:6:114007:114036	3508080	1	True				
ANR	3508345	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3508080	0					
ANR	3508346	Callee	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3508347	Identifier	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3508348	ArgumentList	* np		3508080	1					
ANR	3508349	Argument	* np		3508080	0					
ANR	3508350	UnaryOperationExpression	* np		3508080	0					
ANR	3508351	UnaryOperator	*		3508080	0					
ANR	3508352	Identifier	np		3508080	1					
ANR	3508353	WhileStatement	while ( 1 )		3508080	2					
ANR	3508354	Condition	1	5089:13:114052:114052	3508080	0	True				
ANR	3508355	PrimaryExpression	1		3508080	0					
ANR	3508356	CompoundStatement		51:16:1169:1169	3508080	1					
ANR	3508357	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5090:1:114058:114093	3508080	0	True				
ANR	3508358	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		3508080	0		=			
ANR	3508359	Identifier	r		3508080	0					
ANR	3508360	CallExpression	"fetch_token ( tok , src , end , env )"		3508080	1					
ANR	3508361	Callee	fetch_token		3508080	0					
ANR	3508362	Identifier	fetch_token		3508080	0					
ANR	3508363	ArgumentList	tok		3508080	1					
ANR	3508364	Argument	tok		3508080	0					
ANR	3508365	Identifier	tok		3508080	0					
ANR	3508366	Argument	src		3508080	1					
ANR	3508367	Identifier	src		3508080	0					
ANR	3508368	Argument	end		3508080	2					
ANR	3508369	Identifier	end		3508080	0					
ANR	3508370	Argument	env		3508080	3					
ANR	3508371	Identifier	env		3508080	0					
ANR	3508372	IfStatement	if ( r < 0 )		3508080	1					
ANR	3508373	Condition	r < 0	5091:5:114100:114104	3508080	0	True				
ANR	3508374	RelationalExpression	r < 0		3508080	0		<			
ANR	3508375	Identifier	r		3508080	0					
ANR	3508376	PrimaryExpression	0		3508080	1					
ANR	3508377	ReturnStatement	return r ;	5091:12:114107:114115	3508080	1	True				
ANR	3508378	Identifier	r		3508080	0					
ANR	3508379	IfStatement	if ( r != TK_STRING )		3508080	2					
ANR	3508380	Condition	r != TK_STRING	5092:5:114122:114135	3508080	0	True				
ANR	3508381	EqualityExpression	r != TK_STRING		3508080	0		!=			
ANR	3508382	Identifier	r		3508080	0					
ANR	3508383	Identifier	TK_STRING		3508080	1					
ANR	3508384	BreakStatement	break ;	5092:21:114138:114143	3508080	1	True				
ANR	3508385	ExpressionStatement	"r = onig_node_str_cat ( * np , tok -> backp , * src )"	5094:1:114147:114191	3508080	3	True				
ANR	3508386	AssignmentExpression	"r = onig_node_str_cat ( * np , tok -> backp , * src )"		3508080	0		=			
ANR	3508387	Identifier	r		3508080	0					
ANR	3508388	CallExpression	"onig_node_str_cat ( * np , tok -> backp , * src )"		3508080	1					
ANR	3508389	Callee	onig_node_str_cat		3508080	0					
ANR	3508390	Identifier	onig_node_str_cat		3508080	0					
ANR	3508391	ArgumentList	* np		3508080	1					
ANR	3508392	Argument	* np		3508080	0					
ANR	3508393	UnaryOperationExpression	* np		3508080	0					
ANR	3508394	UnaryOperator	*		3508080	0					
ANR	3508395	Identifier	np		3508080	1					
ANR	3508396	Argument	tok -> backp		3508080	1					
ANR	3508397	PtrMemberAccess	tok -> backp		3508080	0					
ANR	3508398	Identifier	tok		3508080	0					
ANR	3508399	Identifier	backp		3508080	1					
ANR	3508400	Argument	* src		3508080	2					
ANR	3508401	UnaryOperationExpression	* src		3508080	0					
ANR	3508402	UnaryOperator	*		3508080	0					
ANR	3508403	Identifier	src		3508080	1					
ANR	3508404	IfStatement	if ( r < 0 )		3508080	4					
ANR	3508405	Condition	r < 0	5095:5:114198:114202	3508080	0	True				
ANR	3508406	RelationalExpression	r < 0		3508080	0		<			
ANR	3508407	Identifier	r		3508080	0					
ANR	3508408	PrimaryExpression	0		3508080	1					
ANR	3508409	ReturnStatement	return r ;	5095:12:114205:114213	3508080	1	True				
ANR	3508410	Identifier	r		3508080	0					
ANR	3508411	Label	string_end :	5098:4:114228:114238	3508080	3	True				
ANR	3508412	Identifier	string_end		3508080	0					
ANR	3508413	ExpressionStatement	targetp = np	5099:6:114246:114258	3508080	4	True				
ANR	3508414	AssignmentExpression	targetp = np		3508080	0		=			
ANR	3508415	Identifier	targetp		3508080	0					
ANR	3508416	Identifier	np		3508080	1					
ANR	3508417	GotoStatement	goto repeat ;	5100:6:114266:114277	3508080	5	True				
ANR	3508418	Identifier	repeat		3508080	0					
ANR	3508419	BreakStatement	break ;	5102:4:114289:114294	3508080	18	True				
ANR	3508420	Label	case TK_RAW_BYTE :	5104:2:114299:114315	3508080	19	True				
ANR	3508421	Identifier	TK_RAW_BYTE		3508080	0					
ANR	3508422	Label	tk_raw_byte :	5105:2:114319:114330	3508080	20	True				
ANR	3508423	Identifier	tk_raw_byte		3508080	0					
ANR	3508424	CompoundStatement		68:4:1450:1450	3508080	21					
ANR	3508425	ExpressionStatement	* np = node_new_str_raw_char ( ( UChar ) tok -> u . c )	5107:6:114344:114389	3508080	0	True				
ANR	3508426	AssignmentExpression	* np = node_new_str_raw_char ( ( UChar ) tok -> u . c )		3508080	0		=			
ANR	3508427	UnaryOperationExpression	* np		3508080	0					
ANR	3508428	UnaryOperator	*		3508080	0					
ANR	3508429	Identifier	np		3508080	1					
ANR	3508430	CallExpression	node_new_str_raw_char ( ( UChar ) tok -> u . c )		3508080	1					
ANR	3508431	Callee	node_new_str_raw_char		3508080	0					
ANR	3508432	Identifier	node_new_str_raw_char		3508080	0					
ANR	3508433	ArgumentList	( UChar ) tok -> u . c		3508080	1					
ANR	3508434	Argument	( UChar ) tok -> u . c		3508080	0					
ANR	3508435	CastExpression	( UChar ) tok -> u . c		3508080	0					
ANR	3508436	CastTarget	UChar		3508080	0					
ANR	3508437	MemberAccess	tok -> u . c		3508080	1					
ANR	3508438	PtrMemberAccess	tok -> u		3508080	0					
ANR	3508439	Identifier	tok		3508080	0					
ANR	3508440	Identifier	u		3508080	1					
ANR	3508441	Identifier	c		3508080	1					
ANR	3508442	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5108:6:114397:114426	3508080	1	True				
ANR	3508443	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3508080	0					
ANR	3508444	Callee	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3508445	Identifier	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3508446	ArgumentList	* np		3508080	1					
ANR	3508447	Argument	* np		3508080	0					
ANR	3508448	UnaryOperationExpression	* np		3508080	0					
ANR	3508449	UnaryOperator	*		3508080	0					
ANR	3508450	Identifier	np		3508080	1					
ANR	3508451	ExpressionStatement	len = 1	5109:6:114434:114441	3508080	2	True				
ANR	3508452	AssignmentExpression	len = 1		3508080	0		=			
ANR	3508453	Identifier	len		3508080	0					
ANR	3508454	PrimaryExpression	1		3508080	1					
ANR	3508455	WhileStatement	while ( 1 )		3508080	3					
ANR	3508456	Condition	1	5110:13:114456:114456	3508080	0	True				
ANR	3508457	PrimaryExpression	1		3508080	0					
ANR	3508458	CompoundStatement		72:16:1573:1573	3508080	1					
ANR	3508459	IfStatement	if ( len >= ONIGENC_MBC_MINLEN ( env -> enc ) )		3508080	0					
ANR	3508460	Condition	len >= ONIGENC_MBC_MINLEN ( env -> enc )	5111:5:114466:114500	3508080	0	True				
ANR	3508461	RelationalExpression	len >= ONIGENC_MBC_MINLEN ( env -> enc )		3508080	0		>=			
ANR	3508462	Identifier	len		3508080	0					
ANR	3508463	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		3508080	1					
ANR	3508464	Callee	ONIGENC_MBC_MINLEN		3508080	0					
ANR	3508465	Identifier	ONIGENC_MBC_MINLEN		3508080	0					
ANR	3508466	ArgumentList	env -> enc		3508080	1					
ANR	3508467	Argument	env -> enc		3508080	0					
ANR	3508468	PtrMemberAccess	env -> enc		3508080	0					
ANR	3508469	Identifier	env		3508080	0					
ANR	3508470	Identifier	enc		3508080	1					
ANR	3508471	CompoundStatement		73:42:1617:1617	3508080	1					
ANR	3508472	IfStatement	"if ( len == enclen ( env -> enc , NSTR ( * np ) -> s ) )"		3508080	0					
ANR	3508473	Condition	"len == enclen ( env -> enc , NSTR ( * np ) -> s )"	5112:7:114512:114548	3508080	0	True				
ANR	3508474	EqualityExpression	"len == enclen ( env -> enc , NSTR ( * np ) -> s )"		3508080	0		==			
ANR	3508475	Identifier	len		3508080	0					
ANR	3508476	CallExpression	"enclen ( env -> enc , NSTR ( * np ) -> s )"		3508080	1					
ANR	3508477	Callee	enclen		3508080	0					
ANR	3508478	Identifier	enclen		3508080	0					
ANR	3508479	ArgumentList	env -> enc		3508080	1					
ANR	3508480	Argument	env -> enc		3508080	0					
ANR	3508481	PtrMemberAccess	env -> enc		3508080	0					
ANR	3508482	Identifier	env		3508080	0					
ANR	3508483	Identifier	enc		3508080	1					
ANR	3508484	Argument	NSTR ( * np ) -> s		3508080	1					
ANR	3508485	PtrMemberAccess	NSTR ( * np ) -> s		3508080	0					
ANR	3508486	CallExpression	NSTR ( * np )		3508080	0					
ANR	3508487	Callee	NSTR		3508080	0					
ANR	3508488	Identifier	NSTR		3508080	0					
ANR	3508489	ArgumentList	* np		3508080	1					
ANR	3508490	Argument	* np		3508080	0					
ANR	3508491	UnaryOperationExpression	* np		3508080	0					
ANR	3508492	UnaryOperator	*		3508080	0					
ANR	3508493	Identifier	np		3508080	1					
ANR	3508494	Identifier	s		3508080	1					
ANR	3508495	CompoundStatement		74:46:1665:1665	3508080	1					
ANR	3508496	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5113:5:114558:114593	3508080	0	True				
ANR	3508497	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		3508080	0		=			
ANR	3508498	Identifier	r		3508080	0					
ANR	3508499	CallExpression	"fetch_token ( tok , src , end , env )"		3508080	1					
ANR	3508500	Callee	fetch_token		3508080	0					
ANR	3508501	Identifier	fetch_token		3508080	0					
ANR	3508502	ArgumentList	tok		3508080	1					
ANR	3508503	Argument	tok		3508080	0					
ANR	3508504	Identifier	tok		3508080	0					
ANR	3508505	Argument	src		3508080	1					
ANR	3508506	Identifier	src		3508080	0					
ANR	3508507	Argument	end		3508080	2					
ANR	3508508	Identifier	end		3508080	0					
ANR	3508509	Argument	env		3508080	3					
ANR	3508510	Identifier	env		3508080	0					
ANR	3508511	ExpressionStatement	NSTRING_CLEAR_RAW ( * np )	5114:5:114600:114622	3508080	1	True				
ANR	3508512	CallExpression	NSTRING_CLEAR_RAW ( * np )		3508080	0					
ANR	3508513	Callee	NSTRING_CLEAR_RAW		3508080	0					
ANR	3508514	Identifier	NSTRING_CLEAR_RAW		3508080	0					
ANR	3508515	ArgumentList	* np		3508080	1					
ANR	3508516	Argument	* np		3508080	0					
ANR	3508517	UnaryOperationExpression	* np		3508080	0					
ANR	3508518	UnaryOperator	*		3508080	0					
ANR	3508519	Identifier	np		3508080	1					
ANR	3508520	GotoStatement	goto string_end ;	5115:5:114629:114644	3508080	2	True				
ANR	3508521	Identifier	string_end		3508080	0					
ANR	3508522	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5119:1:114656:114691	3508080	1	True				
ANR	3508523	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		3508080	0		=			
ANR	3508524	Identifier	r		3508080	0					
ANR	3508525	CallExpression	"fetch_token ( tok , src , end , env )"		3508080	1					
ANR	3508526	Callee	fetch_token		3508080	0					
ANR	3508527	Identifier	fetch_token		3508080	0					
ANR	3508528	ArgumentList	tok		3508080	1					
ANR	3508529	Argument	tok		3508080	0					
ANR	3508530	Identifier	tok		3508080	0					
ANR	3508531	Argument	src		3508080	1					
ANR	3508532	Identifier	src		3508080	0					
ANR	3508533	Argument	end		3508080	2					
ANR	3508534	Identifier	end		3508080	0					
ANR	3508535	Argument	env		3508080	3					
ANR	3508536	Identifier	env		3508080	0					
ANR	3508537	IfStatement	if ( r < 0 )		3508080	2					
ANR	3508538	Condition	r < 0	5120:5:114698:114702	3508080	0	True				
ANR	3508539	RelationalExpression	r < 0		3508080	0		<			
ANR	3508540	Identifier	r		3508080	0					
ANR	3508541	PrimaryExpression	0		3508080	1					
ANR	3508542	ReturnStatement	return r ;	5120:12:114705:114713	3508080	1	True				
ANR	3508543	Identifier	r		3508080	0					
ANR	3508544	IfStatement	if ( r != TK_RAW_BYTE )		3508080	3					
ANR	3508545	Condition	r != TK_RAW_BYTE	5121:5:114720:114735	3508080	0	True				
ANR	3508546	EqualityExpression	r != TK_RAW_BYTE		3508080	0		!=			
ANR	3508547	Identifier	r		3508080	0					
ANR	3508548	Identifier	TK_RAW_BYTE		3508080	1					
ANR	3508549	CompoundStatement		86:3:1957:1964	3508080	1					
ANR	3508550	IdentifierDeclStatement	int rem ;	5124:3:114843:114850	3508080	0	True				
ANR	3508551	IdentifierDecl	rem		3508080	0					
ANR	3508552	IdentifierDeclType	int		3508080	0					
ANR	3508553	Identifier	rem		3508080	1					
ANR	3508554	IfStatement	if ( len < ONIGENC_MBC_MINLEN ( env -> enc ) )		3508080	1					
ANR	3508555	Condition	len < ONIGENC_MBC_MINLEN ( env -> enc )	5125:7:114859:114892	3508080	0	True				
ANR	3508556	RelationalExpression	len < ONIGENC_MBC_MINLEN ( env -> enc )		3508080	0		<			
ANR	3508557	Identifier	len		3508080	0					
ANR	3508558	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		3508080	1					
ANR	3508559	Callee	ONIGENC_MBC_MINLEN		3508080	0					
ANR	3508560	Identifier	ONIGENC_MBC_MINLEN		3508080	0					
ANR	3508561	ArgumentList	env -> enc		3508080	1					
ANR	3508562	Argument	env -> enc		3508080	0					
ANR	3508563	PtrMemberAccess	env -> enc		3508080	0					
ANR	3508564	Identifier	env		3508080	0					
ANR	3508565	Identifier	enc		3508080	1					
ANR	3508566	CompoundStatement		87:43:2009:2009	3508080	1					
ANR	3508567	ExpressionStatement	rem = ONIGENC_MBC_MINLEN ( env -> enc ) - len	5126:5:114902:114942	3508080	0	True				
ANR	3508568	AssignmentExpression	rem = ONIGENC_MBC_MINLEN ( env -> enc ) - len		3508080	0		=			
ANR	3508569	Identifier	rem		3508080	0					
ANR	3508570	AdditiveExpression	ONIGENC_MBC_MINLEN ( env -> enc ) - len		3508080	1		-			
ANR	3508571	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		3508080	0					
ANR	3508572	Callee	ONIGENC_MBC_MINLEN		3508080	0					
ANR	3508573	Identifier	ONIGENC_MBC_MINLEN		3508080	0					
ANR	3508574	ArgumentList	env -> enc		3508080	1					
ANR	3508575	Argument	env -> enc		3508080	0					
ANR	3508576	PtrMemberAccess	env -> enc		3508080	0					
ANR	3508577	Identifier	env		3508080	0					
ANR	3508578	Identifier	enc		3508080	1					
ANR	3508579	Identifier	len		3508080	1					
ANR	3508580	ExpressionStatement	"( void ) node_str_head_pad ( NSTR ( * np ) , rem , ( UChar ) 0 )"	5127:5:114949:115000	3508080	1	True				
ANR	3508581	CastExpression	"( void ) node_str_head_pad ( NSTR ( * np ) , rem , ( UChar ) 0 )"		3508080	0					
ANR	3508582	CastTarget	void		3508080	0					
ANR	3508583	CallExpression	"node_str_head_pad ( NSTR ( * np ) , rem , ( UChar ) 0 )"		3508080	1					
ANR	3508584	Callee	node_str_head_pad		3508080	0					
ANR	3508585	Identifier	node_str_head_pad		3508080	0					
ANR	3508586	ArgumentList	NSTR ( * np )		3508080	1					
ANR	3508587	Argument	NSTR ( * np )		3508080	0					
ANR	3508588	CallExpression	NSTR ( * np )		3508080	0					
ANR	3508589	Callee	NSTR		3508080	0					
ANR	3508590	Identifier	NSTR		3508080	0					
ANR	3508591	ArgumentList	* np		3508080	1					
ANR	3508592	Argument	* np		3508080	0					
ANR	3508593	UnaryOperationExpression	* np		3508080	0					
ANR	3508594	UnaryOperator	*		3508080	0					
ANR	3508595	Identifier	np		3508080	1					
ANR	3508596	Argument	rem		3508080	1					
ANR	3508597	Identifier	rem		3508080	0					
ANR	3508598	Argument	( UChar ) 0		3508080	2					
ANR	3508599	CastExpression	( UChar ) 0		3508080	0					
ANR	3508600	CastTarget	UChar		3508080	0					
ANR	3508601	PrimaryExpression	0		3508080	1					
ANR	3508602	IfStatement	"if ( len + rem == enclen ( env -> enc , NSTR ( * np ) -> s ) )"		3508080	2					
ANR	3508603	Condition	"len + rem == enclen ( env -> enc , NSTR ( * np ) -> s )"	5128:9:115011:115053	3508080	0	True				
ANR	3508604	EqualityExpression	"len + rem == enclen ( env -> enc , NSTR ( * np ) -> s )"		3508080	0		==			
ANR	3508605	AdditiveExpression	len + rem		3508080	0		+			
ANR	3508606	Identifier	len		3508080	0					
ANR	3508607	Identifier	rem		3508080	1					
ANR	3508608	CallExpression	"enclen ( env -> enc , NSTR ( * np ) -> s )"		3508080	1					
ANR	3508609	Callee	enclen		3508080	0					
ANR	3508610	Identifier	enclen		3508080	0					
ANR	3508611	ArgumentList	env -> enc		3508080	1					
ANR	3508612	Argument	env -> enc		3508080	0					
ANR	3508613	PtrMemberAccess	env -> enc		3508080	0					
ANR	3508614	Identifier	env		3508080	0					
ANR	3508615	Identifier	enc		3508080	1					
ANR	3508616	Argument	NSTR ( * np ) -> s		3508080	1					
ANR	3508617	PtrMemberAccess	NSTR ( * np ) -> s		3508080	0					
ANR	3508618	CallExpression	NSTR ( * np )		3508080	0					
ANR	3508619	Callee	NSTR		3508080	0					
ANR	3508620	Identifier	NSTR		3508080	0					
ANR	3508621	ArgumentList	* np		3508080	1					
ANR	3508622	Argument	* np		3508080	0					
ANR	3508623	UnaryOperationExpression	* np		3508080	0					
ANR	3508624	UnaryOperator	*		3508080	0					
ANR	3508625	Identifier	np		3508080	1					
ANR	3508626	Identifier	s		3508080	1					
ANR	3508627	CompoundStatement		90:54:2170:2170	3508080	1					
ANR	3508628	ExpressionStatement	NSTRING_CLEAR_RAW ( * np )	5129:7:115065:115087	3508080	0	True				
ANR	3508629	CallExpression	NSTRING_CLEAR_RAW ( * np )		3508080	0					
ANR	3508630	Callee	NSTRING_CLEAR_RAW		3508080	0					
ANR	3508631	Identifier	NSTRING_CLEAR_RAW		3508080	0					
ANR	3508632	ArgumentList	* np		3508080	1					
ANR	3508633	Argument	* np		3508080	0					
ANR	3508634	UnaryOperationExpression	* np		3508080	0					
ANR	3508635	UnaryOperator	*		3508080	0					
ANR	3508636	Identifier	np		3508080	1					
ANR	3508637	GotoStatement	goto string_end ;	5130:7:115096:115111	3508080	1	True				
ANR	3508638	Identifier	string_end		3508080	0					
ANR	3508639	ReturnStatement	return ONIGERR_TOO_SHORT_MULTI_BYTE_STRING ;	5134:3:115135:115177	3508080	2	True				
ANR	3508640	Identifier	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		3508080	0					
ANR	3508641	ExpressionStatement	"r = node_str_cat_char ( * np , ( UChar ) tok -> u . c )"	5137:1:115184:115228	3508080	4	True				
ANR	3508642	AssignmentExpression	"r = node_str_cat_char ( * np , ( UChar ) tok -> u . c )"		3508080	0		=			
ANR	3508643	Identifier	r		3508080	0					
ANR	3508644	CallExpression	"node_str_cat_char ( * np , ( UChar ) tok -> u . c )"		3508080	1					
ANR	3508645	Callee	node_str_cat_char		3508080	0					
ANR	3508646	Identifier	node_str_cat_char		3508080	0					
ANR	3508647	ArgumentList	* np		3508080	1					
ANR	3508648	Argument	* np		3508080	0					
ANR	3508649	UnaryOperationExpression	* np		3508080	0					
ANR	3508650	UnaryOperator	*		3508080	0					
ANR	3508651	Identifier	np		3508080	1					
ANR	3508652	Argument	( UChar ) tok -> u . c		3508080	1					
ANR	3508653	CastExpression	( UChar ) tok -> u . c		3508080	0					
ANR	3508654	CastTarget	UChar		3508080	0					
ANR	3508655	MemberAccess	tok -> u . c		3508080	1					
ANR	3508656	PtrMemberAccess	tok -> u		3508080	0					
ANR	3508657	Identifier	tok		3508080	0					
ANR	3508658	Identifier	u		3508080	1					
ANR	3508659	Identifier	c		3508080	1					
ANR	3508660	IfStatement	if ( r < 0 )		3508080	5					
ANR	3508661	Condition	r < 0	5138:5:115235:115239	3508080	0	True				
ANR	3508662	RelationalExpression	r < 0		3508080	0		<			
ANR	3508663	Identifier	r		3508080	0					
ANR	3508664	PrimaryExpression	0		3508080	1					
ANR	3508665	ReturnStatement	return r ;	5138:12:115242:115250	3508080	1	True				
ANR	3508666	Identifier	r		3508080	0					
ANR	3508667	ExpressionStatement	len ++	5140:1:115254:115259	3508080	6	True				
ANR	3508668	PostIncDecOperationExpression	len ++		3508080	0					
ANR	3508669	Identifier	len		3508080	0					
ANR	3508670	IncDec	++		3508080	1					
ANR	3508671	BreakStatement	break ;	5143:4:115279:115284	3508080	22	True				
ANR	3508672	Label	case TK_CODE_POINT :	5145:2:115289:115307	3508080	23	True				
ANR	3508673	Identifier	TK_CODE_POINT		3508080	0					
ANR	3508674	CompoundStatement		110:6:2480:2537	3508080	24					
ANR	3508675	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	5147:6:115321:115358	3508080	0	True				
ANR	3508676	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		3508080	0					
ANR	3508677	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		3508080	0					
ANR	3508678	Identifier	buf		3508080	1					
ANR	3508679	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		3508080	2					
ANR	3508680	IdentifierDeclStatement	"int num = ONIGENC_CODE_TO_MBC ( env -> enc , tok -> u . code , buf ) ;"	5148:6:115366:115423	3508080	1	True				
ANR	3508681	IdentifierDecl	"num = ONIGENC_CODE_TO_MBC ( env -> enc , tok -> u . code , buf )"		3508080	0					
ANR	3508682	IdentifierDeclType	int		3508080	0					
ANR	3508683	Identifier	num		3508080	1					
ANR	3508684	AssignmentExpression	"num = ONIGENC_CODE_TO_MBC ( env -> enc , tok -> u . code , buf )"		3508080	2		=			
ANR	3508685	Identifier	num		3508080	0					
ANR	3508686	CallExpression	"ONIGENC_CODE_TO_MBC ( env -> enc , tok -> u . code , buf )"		3508080	1					
ANR	3508687	Callee	ONIGENC_CODE_TO_MBC		3508080	0					
ANR	3508688	Identifier	ONIGENC_CODE_TO_MBC		3508080	0					
ANR	3508689	ArgumentList	env -> enc		3508080	1					
ANR	3508690	Argument	env -> enc		3508080	0					
ANR	3508691	PtrMemberAccess	env -> enc		3508080	0					
ANR	3508692	Identifier	env		3508080	0					
ANR	3508693	Identifier	enc		3508080	1					
ANR	3508694	Argument	tok -> u . code		3508080	1					
ANR	3508695	MemberAccess	tok -> u . code		3508080	0					
ANR	3508696	PtrMemberAccess	tok -> u		3508080	0					
ANR	3508697	Identifier	tok		3508080	0					
ANR	3508698	Identifier	u		3508080	1					
ANR	3508699	Identifier	code		3508080	1					
ANR	3508700	Argument	buf		3508080	2					
ANR	3508701	Identifier	buf		3508080	0					
ANR	3508702	IfStatement	if ( num < 0 )		3508080	2					
ANR	3508703	Condition	num < 0	5149:10:115435:115441	3508080	0	True				
ANR	3508704	RelationalExpression	num < 0		3508080	0		<			
ANR	3508705	Identifier	num		3508080	0					
ANR	3508706	PrimaryExpression	0		3508080	1					
ANR	3508707	ReturnStatement	return num ;	5149:19:115444:115454	3508080	1	True				
ANR	3508708	Identifier	num		3508080	0					
ANR	3508709	ExpressionStatement	"* np = node_new_str_raw ( buf , buf + num )"	5151:6:115501:115539	3508080	3	True				
ANR	3508710	AssignmentExpression	"* np = node_new_str_raw ( buf , buf + num )"		3508080	0		=			
ANR	3508711	UnaryOperationExpression	* np		3508080	0					
ANR	3508712	UnaryOperator	*		3508080	0					
ANR	3508713	Identifier	np		3508080	1					
ANR	3508714	CallExpression	"node_new_str_raw ( buf , buf + num )"		3508080	1					
ANR	3508715	Callee	node_new_str_raw		3508080	0					
ANR	3508716	Identifier	node_new_str_raw		3508080	0					
ANR	3508717	ArgumentList	buf		3508080	1					
ANR	3508718	Argument	buf		3508080	0					
ANR	3508719	Identifier	buf		3508080	0					
ANR	3508720	Argument	buf + num		3508080	1					
ANR	3508721	AdditiveExpression	buf + num		3508080	0		+			
ANR	3508722	Identifier	buf		3508080	0					
ANR	3508723	Identifier	num		3508080	1					
ANR	3508724	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5155:6:115602:115631	3508080	4	True				
ANR	3508725	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3508080	0					
ANR	3508726	Callee	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3508727	Identifier	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3508728	ArgumentList	* np		3508080	1					
ANR	3508729	Argument	* np		3508080	0					
ANR	3508730	UnaryOperationExpression	* np		3508080	0					
ANR	3508731	UnaryOperator	*		3508080	0					
ANR	3508732	Identifier	np		3508080	1					
ANR	3508733	BreakStatement	break ;	5157:4:115643:115648	3508080	25	True				
ANR	3508734	Label	case TK_QUOTE_OPEN :	5159:2:115653:115671	3508080	26	True				
ANR	3508735	Identifier	TK_QUOTE_OPEN		3508080	0					
ANR	3508736	CompoundStatement		124:6:2830:2858	3508080	27					
ANR	3508737	IdentifierDeclStatement	OnigCodePoint end_op [ 2 ] ;	5161:6:115685:115708	3508080	0	True				
ANR	3508738	IdentifierDecl	end_op [ 2 ]		3508080	0					
ANR	3508739	IdentifierDeclType	OnigCodePoint [ 2 ]		3508080	0					
ANR	3508740	Identifier	end_op		3508080	1					
ANR	3508741	PrimaryExpression	2		3508080	2					
ANR	3508742	IdentifierDeclStatement	"UChar * qstart , * qend , * nextp ;"	5162:6:115716:115744	3508080	1	True				
ANR	3508743	IdentifierDecl	* qstart		3508080	0					
ANR	3508744	IdentifierDeclType	UChar *		3508080	0					
ANR	3508745	Identifier	qstart		3508080	1					
ANR	3508746	IdentifierDecl	* qend		3508080	1					
ANR	3508747	IdentifierDeclType	UChar *		3508080	0					
ANR	3508748	Identifier	qend		3508080	1					
ANR	3508749	IdentifierDecl	* nextp		3508080	2					
ANR	3508750	IdentifierDeclType	UChar *		3508080	0					
ANR	3508751	Identifier	nextp		3508080	1					
ANR	3508752	ExpressionStatement	end_op [ 0 ] = ( OnigCodePoint ) MC_ESC ( env -> syntax )	5164:6:115753:115800	3508080	2	True				
ANR	3508753	AssignmentExpression	end_op [ 0 ] = ( OnigCodePoint ) MC_ESC ( env -> syntax )		3508080	0		=			
ANR	3508754	ArrayIndexing	end_op [ 0 ]		3508080	0					
ANR	3508755	Identifier	end_op		3508080	0					
ANR	3508756	PrimaryExpression	0		3508080	1					
ANR	3508757	CastExpression	( OnigCodePoint ) MC_ESC ( env -> syntax )		3508080	1					
ANR	3508758	CastTarget	OnigCodePoint		3508080	0					
ANR	3508759	CallExpression	MC_ESC ( env -> syntax )		3508080	1					
ANR	3508760	Callee	MC_ESC		3508080	0					
ANR	3508761	Identifier	MC_ESC		3508080	0					
ANR	3508762	ArgumentList	env -> syntax		3508080	1					
ANR	3508763	Argument	env -> syntax		3508080	0					
ANR	3508764	PtrMemberAccess	env -> syntax		3508080	0					
ANR	3508765	Identifier	env		3508080	0					
ANR	3508766	Identifier	syntax		3508080	1					
ANR	3508767	ExpressionStatement	end_op [ 1 ] = ( OnigCodePoint ) 'E'	5165:6:115808:115839	3508080	3	True				
ANR	3508768	AssignmentExpression	end_op [ 1 ] = ( OnigCodePoint ) 'E'		3508080	0		=			
ANR	3508769	ArrayIndexing	end_op [ 1 ]		3508080	0					
ANR	3508770	Identifier	end_op		3508080	0					
ANR	3508771	PrimaryExpression	1		3508080	1					
ANR	3508772	CastExpression	( OnigCodePoint ) 'E'		3508080	1					
ANR	3508773	CastTarget	OnigCodePoint		3508080	0					
ANR	3508774	PrimaryExpression	'E'		3508080	1					
ANR	3508775	ExpressionStatement	qstart = * src	5166:6:115847:115860	3508080	4	True				
ANR	3508776	AssignmentExpression	qstart = * src		3508080	0		=			
ANR	3508777	Identifier	qstart		3508080	0					
ANR	3508778	UnaryOperationExpression	* src		3508080	1					
ANR	3508779	UnaryOperator	*		3508080	0					
ANR	3508780	Identifier	src		3508080	1					
ANR	3508781	ExpressionStatement	"qend = find_str_position ( end_op , 2 , qstart , end , & nextp , env -> enc )"	5167:6:115868:115934	3508080	5	True				
ANR	3508782	AssignmentExpression	"qend = find_str_position ( end_op , 2 , qstart , end , & nextp , env -> enc )"		3508080	0		=			
ANR	3508783	Identifier	qend		3508080	0					
ANR	3508784	CallExpression	"find_str_position ( end_op , 2 , qstart , end , & nextp , env -> enc )"		3508080	1					
ANR	3508785	Callee	find_str_position		3508080	0					
ANR	3508786	Identifier	find_str_position		3508080	0					
ANR	3508787	ArgumentList	end_op		3508080	1					
ANR	3508788	Argument	end_op		3508080	0					
ANR	3508789	Identifier	end_op		3508080	0					
ANR	3508790	Argument	2		3508080	1					
ANR	3508791	PrimaryExpression	2		3508080	0					
ANR	3508792	Argument	qstart		3508080	2					
ANR	3508793	Identifier	qstart		3508080	0					
ANR	3508794	Argument	end		3508080	3					
ANR	3508795	Identifier	end		3508080	0					
ANR	3508796	Argument	& nextp		3508080	4					
ANR	3508797	UnaryOperationExpression	& nextp		3508080	0					
ANR	3508798	UnaryOperator	&		3508080	0					
ANR	3508799	Identifier	nextp		3508080	1					
ANR	3508800	Argument	env -> enc		3508080	5					
ANR	3508801	PtrMemberAccess	env -> enc		3508080	0					
ANR	3508802	Identifier	env		3508080	0					
ANR	3508803	Identifier	enc		3508080	1					
ANR	3508804	IfStatement	if ( IS_NULL ( qend ) )		3508080	6					
ANR	3508805	Condition	IS_NULL ( qend )	5168:10:115946:115958	3508080	0	True				
ANR	3508806	CallExpression	IS_NULL ( qend )		3508080	0					
ANR	3508807	Callee	IS_NULL		3508080	0					
ANR	3508808	Identifier	IS_NULL		3508080	0					
ANR	3508809	ArgumentList	qend		3508080	1					
ANR	3508810	Argument	qend		3508080	0					
ANR	3508811	Identifier	qend		3508080	0					
ANR	3508812	CompoundStatement		130:25:3075:3075	3508080	1					
ANR	3508813	ExpressionStatement	nextp = qend = end	5169:1:115964:115982	3508080	0	True				
ANR	3508814	AssignmentExpression	nextp = qend = end		3508080	0		=			
ANR	3508815	Identifier	nextp		3508080	0					
ANR	3508816	AssignmentExpression	qend = end		3508080	1		=			
ANR	3508817	Identifier	qend		3508080	0					
ANR	3508818	Identifier	end		3508080	1					
ANR	3508819	ExpressionStatement	"* np = node_new_str ( qstart , qend )"	5171:6:115998:116030	3508080	7	True				
ANR	3508820	AssignmentExpression	"* np = node_new_str ( qstart , qend )"		3508080	0		=			
ANR	3508821	UnaryOperationExpression	* np		3508080	0					
ANR	3508822	UnaryOperator	*		3508080	0					
ANR	3508823	Identifier	np		3508080	1					
ANR	3508824	CallExpression	"node_new_str ( qstart , qend )"		3508080	1					
ANR	3508825	Callee	node_new_str		3508080	0					
ANR	3508826	Identifier	node_new_str		3508080	0					
ANR	3508827	ArgumentList	qstart		3508080	1					
ANR	3508828	Argument	qstart		3508080	0					
ANR	3508829	Identifier	qstart		3508080	0					
ANR	3508830	Argument	qend		3508080	1					
ANR	3508831	Identifier	qend		3508080	0					
ANR	3508832	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5172:6:116038:116067	3508080	8	True				
ANR	3508833	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3508080	0					
ANR	3508834	Callee	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3508835	Identifier	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3508836	ArgumentList	* np		3508080	1					
ANR	3508837	Argument	* np		3508080	0					
ANR	3508838	UnaryOperationExpression	* np		3508080	0					
ANR	3508839	UnaryOperator	*		3508080	0					
ANR	3508840	Identifier	np		3508080	1					
ANR	3508841	ExpressionStatement	* src = nextp	5173:6:116075:116087	3508080	9	True				
ANR	3508842	AssignmentExpression	* src = nextp		3508080	0		=			
ANR	3508843	UnaryOperationExpression	* src		3508080	0					
ANR	3508844	UnaryOperator	*		3508080	0					
ANR	3508845	Identifier	src		3508080	1					
ANR	3508846	Identifier	nextp		3508080	1					
ANR	3508847	BreakStatement	break ;	5175:4:116099:116104	3508080	28	True				
ANR	3508848	Label	case TK_CHAR_TYPE :	5177:2:116109:116126	3508080	29	True				
ANR	3508849	Identifier	TK_CHAR_TYPE		3508080	0					
ANR	3508850	CompoundStatement		140:4:3246:3246	3508080	30					
ANR	3508851	SwitchStatement	switch ( tok -> u . prop . ctype )		3508080	0					
ANR	3508852	Condition	tok -> u . prop . ctype	5179:14:116148:116164	3508080	0	True				
ANR	3508853	MemberAccess	tok -> u . prop . ctype		3508080	0					
ANR	3508854	MemberAccess	tok -> u . prop		3508080	0					
ANR	3508855	PtrMemberAccess	tok -> u		3508080	0					
ANR	3508856	Identifier	tok		3508080	0					
ANR	3508857	Identifier	u		3508080	1					
ANR	3508858	Identifier	prop		3508080	1					
ANR	3508859	Identifier	ctype		3508080	1					
ANR	3508860	CompoundStatement		141:33:3281:3281	3508080	1					
ANR	3508861	Label	case ONIGENC_CTYPE_WORD :	5180:6:116175:116198	3508080	0	True				
ANR	3508862	Identifier	ONIGENC_CTYPE_WORD		3508080	0					
ANR	3508863	ExpressionStatement	"* np = node_new_ctype ( tok -> u . prop . ctype , tok -> u . prop . not )"	5181:1:116201:116257	3508080	1	True				
ANR	3508864	AssignmentExpression	"* np = node_new_ctype ( tok -> u . prop . ctype , tok -> u . prop . not )"		3508080	0		=			
ANR	3508865	UnaryOperationExpression	* np		3508080	0					
ANR	3508866	UnaryOperator	*		3508080	0					
ANR	3508867	Identifier	np		3508080	1					
ANR	3508868	CallExpression	"node_new_ctype ( tok -> u . prop . ctype , tok -> u . prop . not )"		3508080	1					
ANR	3508869	Callee	node_new_ctype		3508080	0					
ANR	3508870	Identifier	node_new_ctype		3508080	0					
ANR	3508871	ArgumentList	tok -> u . prop . ctype		3508080	1					
ANR	3508872	Argument	tok -> u . prop . ctype		3508080	0					
ANR	3508873	MemberAccess	tok -> u . prop . ctype		3508080	0					
ANR	3508874	MemberAccess	tok -> u . prop		3508080	0					
ANR	3508875	PtrMemberAccess	tok -> u		3508080	0					
ANR	3508876	Identifier	tok		3508080	0					
ANR	3508877	Identifier	u		3508080	1					
ANR	3508878	Identifier	prop		3508080	1					
ANR	3508879	Identifier	ctype		3508080	1					
ANR	3508880	Argument	tok -> u . prop . not		3508080	1					
ANR	3508881	MemberAccess	tok -> u . prop . not		3508080	0					
ANR	3508882	MemberAccess	tok -> u . prop		3508080	0					
ANR	3508883	PtrMemberAccess	tok -> u		3508080	0					
ANR	3508884	Identifier	tok		3508080	0					
ANR	3508885	Identifier	u		3508080	1					
ANR	3508886	Identifier	prop		3508080	1					
ANR	3508887	Identifier	not		3508080	1					
ANR	3508888	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5182:1:116260:116289	3508080	2	True				
ANR	3508889	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3508080	0					
ANR	3508890	Callee	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3508891	Identifier	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3508892	ArgumentList	* np		3508080	1					
ANR	3508893	Argument	* np		3508080	0					
ANR	3508894	UnaryOperationExpression	* np		3508080	0					
ANR	3508895	UnaryOperator	*		3508080	0					
ANR	3508896	Identifier	np		3508080	1					
ANR	3508897	BreakStatement	break ;	5183:1:116292:116297	3508080	3	True				
ANR	3508898	Label	case ONIGENC_CTYPE_SPACE :	5185:6:116306:116330	3508080	4	True				
ANR	3508899	Identifier	ONIGENC_CTYPE_SPACE		3508080	0					
ANR	3508900	Label	case ONIGENC_CTYPE_DIGIT :	5186:6:116338:116362	3508080	5	True				
ANR	3508901	Identifier	ONIGENC_CTYPE_DIGIT		3508080	0					
ANR	3508902	Label	case ONIGENC_CTYPE_XDIGIT :	5187:6:116370:116395	3508080	6	True				
ANR	3508903	Identifier	ONIGENC_CTYPE_XDIGIT		3508080	0					
ANR	3508904	CompoundStatement		155:3:3604:3624	3508080	7					
ANR	3508905	IdentifierDeclStatement	CClassNode * cc ;	5189:3:116403:116417	3508080	0	True				
ANR	3508906	IdentifierDecl	* cc		3508080	0					
ANR	3508907	IdentifierDeclType	CClassNode *		3508080	0					
ANR	3508908	Identifier	cc		3508080	1					
ANR	3508909	IdentifierDeclStatement	const OnigCodePoint * mbr ;	5192:10:116461:116485	3508080	1	True				
ANR	3508910	IdentifierDecl	* mbr		3508080	0					
ANR	3508911	IdentifierDeclType	const OnigCodePoint *		3508080	0					
ANR	3508912	Identifier	mbr		3508080	1					
ANR	3508913	IdentifierDeclStatement	OnigCodePoint sb_out ;	5193:3:116490:116510	3508080	2	True				
ANR	3508914	IdentifierDecl	sb_out		3508080	0					
ANR	3508915	IdentifierDeclType	OnigCodePoint		3508080	0					
ANR	3508916	Identifier	sb_out		3508080	1					
ANR	3508917	ExpressionStatement	"r = ONIGENC_GET_CTYPE_CODE_RANGE ( env -> enc , tok -> u . prop . ctype , & sb_out , & mbr )"	5195:10:116523:116607	3508080	3	True				
ANR	3508918	AssignmentExpression	"r = ONIGENC_GET_CTYPE_CODE_RANGE ( env -> enc , tok -> u . prop . ctype , & sb_out , & mbr )"		3508080	0		=			
ANR	3508919	Identifier	r		3508080	0					
ANR	3508920	CallExpression	"ONIGENC_GET_CTYPE_CODE_RANGE ( env -> enc , tok -> u . prop . ctype , & sb_out , & mbr )"		3508080	1					
ANR	3508921	Callee	ONIGENC_GET_CTYPE_CODE_RANGE		3508080	0					
ANR	3508922	Identifier	ONIGENC_GET_CTYPE_CODE_RANGE		3508080	0					
ANR	3508923	ArgumentList	env -> enc		3508080	1					
ANR	3508924	Argument	env -> enc		3508080	0					
ANR	3508925	PtrMemberAccess	env -> enc		3508080	0					
ANR	3508926	Identifier	env		3508080	0					
ANR	3508927	Identifier	enc		3508080	1					
ANR	3508928	Argument	tok -> u . prop . ctype		3508080	1					
ANR	3508929	MemberAccess	tok -> u . prop . ctype		3508080	0					
ANR	3508930	MemberAccess	tok -> u . prop		3508080	0					
ANR	3508931	PtrMemberAccess	tok -> u		3508080	0					
ANR	3508932	Identifier	tok		3508080	0					
ANR	3508933	Identifier	u		3508080	1					
ANR	3508934	Identifier	prop		3508080	1					
ANR	3508935	Identifier	ctype		3508080	1					
ANR	3508936	Argument	& sb_out		3508080	2					
ANR	3508937	UnaryOperationExpression	& sb_out		3508080	0					
ANR	3508938	UnaryOperator	&		3508080	0					
ANR	3508939	Identifier	sb_out		3508080	1					
ANR	3508940	Argument	& mbr		3508080	3					
ANR	3508941	UnaryOperationExpression	& mbr		3508080	0					
ANR	3508942	UnaryOperator	&		3508080	0					
ANR	3508943	Identifier	mbr		3508080	1					
ANR	3508944	IfStatement	if ( r == 0 && ONIGENC_CODE_RANGE_NUM ( mbr ) >= THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS )		3508080	4					
ANR	3508945	Condition	r == 0 && ONIGENC_CODE_RANGE_NUM ( mbr ) >= THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS	5197:14:116623:116727	3508080	0	True				
ANR	3508946	AndExpression	r == 0 && ONIGENC_CODE_RANGE_NUM ( mbr ) >= THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS		3508080	0		&&			
ANR	3508947	EqualityExpression	r == 0		3508080	0		==			
ANR	3508948	Identifier	r		3508080	0					
ANR	3508949	PrimaryExpression	0		3508080	1					
ANR	3508950	RelationalExpression	ONIGENC_CODE_RANGE_NUM ( mbr ) >= THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS		3508080	1		>=			
ANR	3508951	CallExpression	ONIGENC_CODE_RANGE_NUM ( mbr )		3508080	0					
ANR	3508952	Callee	ONIGENC_CODE_RANGE_NUM		3508080	0					
ANR	3508953	Identifier	ONIGENC_CODE_RANGE_NUM		3508080	0					
ANR	3508954	ArgumentList	mbr		3508080	1					
ANR	3508955	Argument	mbr		3508080	0					
ANR	3508956	Identifier	mbr		3508080	0					
ANR	3508957	Identifier	THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS		3508080	1					
ANR	3508958	CompoundStatement		163:12:3892:3916	3508080	1					
ANR	3508959	IdentifierDeclStatement	type_cclass_key key ;	5200:12:116744:116764	3508080	0	True				
ANR	3508960	IdentifierDecl	key		3508080	0					
ANR	3508961	IdentifierDeclType	type_cclass_key		3508080	0					
ANR	3508962	Identifier	key		3508080	1					
ANR	3508963	IdentifierDeclStatement	type_cclass_key * new_key ;	5201:12:116778:116802	3508080	1	True				
ANR	3508964	IdentifierDecl	* new_key		3508080	0					
ANR	3508965	IdentifierDeclType	type_cclass_key *		3508080	0					
ANR	3508966	Identifier	new_key		3508080	1					
ANR	3508967	ExpressionStatement	key . enc = env -> enc	5203:12:116817:116836	3508080	2	True				
ANR	3508968	AssignmentExpression	key . enc = env -> enc		3508080	0		=			
ANR	3508969	MemberAccess	key . enc		3508080	0					
ANR	3508970	Identifier	key		3508080	0					
ANR	3508971	Identifier	enc		3508080	1					
ANR	3508972	PtrMemberAccess	env -> enc		3508080	1					
ANR	3508973	Identifier	env		3508080	0					
ANR	3508974	Identifier	enc		3508080	1					
ANR	3508975	ExpressionStatement	key . not = tok -> u . prop . not	5204:12:116850:116876	3508080	3	True				
ANR	3508976	AssignmentExpression	key . not = tok -> u . prop . not		3508080	0		=			
ANR	3508977	MemberAccess	key . not		3508080	0					
ANR	3508978	Identifier	key		3508080	0					
ANR	3508979	Identifier	not		3508080	1					
ANR	3508980	MemberAccess	tok -> u . prop . not		3508080	1					
ANR	3508981	MemberAccess	tok -> u . prop		3508080	0					
ANR	3508982	PtrMemberAccess	tok -> u		3508080	0					
ANR	3508983	Identifier	tok		3508080	0					
ANR	3508984	Identifier	u		3508080	1					
ANR	3508985	Identifier	prop		3508080	1					
ANR	3508986	Identifier	not		3508080	1					
ANR	3508987	ExpressionStatement	key . type = tok -> u . prop . ctype	5205:12:116890:116918	3508080	4	True				
ANR	3508988	AssignmentExpression	key . type = tok -> u . prop . ctype		3508080	0		=			
ANR	3508989	MemberAccess	key . type		3508080	0					
ANR	3508990	Identifier	key		3508080	0					
ANR	3508991	Identifier	type		3508080	1					
ANR	3508992	MemberAccess	tok -> u . prop . ctype		3508080	1					
ANR	3508993	MemberAccess	tok -> u . prop		3508080	0					
ANR	3508994	PtrMemberAccess	tok -> u		3508080	0					
ANR	3508995	Identifier	tok		3508080	0					
ANR	3508996	Identifier	u		3508080	1					
ANR	3508997	Identifier	prop		3508080	1					
ANR	3508998	Identifier	ctype		3508080	1					
ANR	3508999	ExpressionStatement	THREAD_ATOMIC_START	5207:12:116933:116952	3508080	5	True				
ANR	3509000	Identifier	THREAD_ATOMIC_START		3508080	0					
ANR	3509001	IfStatement	if ( IS_NULL ( OnigTypeCClassTable ) )		3508080	6					
ANR	3509002	Condition	IS_NULL ( OnigTypeCClassTable )	5209:16:116971:116998	3508080	0	True				
ANR	3509003	CallExpression	IS_NULL ( OnigTypeCClassTable )		3508080	0					
ANR	3509004	Callee	IS_NULL		3508080	0					
ANR	3509005	Identifier	IS_NULL		3508080	0					
ANR	3509006	ArgumentList	OnigTypeCClassTable		3508080	1					
ANR	3509007	Argument	OnigTypeCClassTable		3508080	0					
ANR	3509008	Identifier	OnigTypeCClassTable		3508080	0					
ANR	3509009	CompoundStatement		171:46:4115:4115	3508080	1					
ANR	3509010	ExpressionStatement	"OnigTypeCClassTable = onig_st_init_table_with_size ( & type_type_cclass_hash , 10 )"	5210:14:117017:117111	3508080	0	True				
ANR	3509011	AssignmentExpression	"OnigTypeCClassTable = onig_st_init_table_with_size ( & type_type_cclass_hash , 10 )"		3508080	0		=			
ANR	3509012	Identifier	OnigTypeCClassTable		3508080	0					
ANR	3509013	CallExpression	"onig_st_init_table_with_size ( & type_type_cclass_hash , 10 )"		3508080	1					
ANR	3509014	Callee	onig_st_init_table_with_size		3508080	0					
ANR	3509015	Identifier	onig_st_init_table_with_size		3508080	0					
ANR	3509016	ArgumentList	& type_type_cclass_hash		3508080	1					
ANR	3509017	Argument	& type_type_cclass_hash		3508080	0					
ANR	3509018	UnaryOperationExpression	& type_type_cclass_hash		3508080	0					
ANR	3509019	UnaryOperator	&		3508080	0					
ANR	3509020	Identifier	type_type_cclass_hash		3508080	1					
ANR	3509021	Argument	10		3508080	1					
ANR	3509022	PrimaryExpression	10		3508080	0					
ANR	3509023	IfStatement	if ( IS_NULL ( OnigTypeCClassTable ) )		3508080	1					
ANR	3509024	Condition	IS_NULL ( OnigTypeCClassTable )	5212:18:117131:117158	3508080	0	True				
ANR	3509025	CallExpression	IS_NULL ( OnigTypeCClassTable )		3508080	0					
ANR	3509026	Callee	IS_NULL		3508080	0					
ANR	3509027	Identifier	IS_NULL		3508080	0					
ANR	3509028	ArgumentList	OnigTypeCClassTable		3508080	1					
ANR	3509029	Argument	OnigTypeCClassTable		3508080	0					
ANR	3509030	Identifier	OnigTypeCClassTable		3508080	0					
ANR	3509031	CompoundStatement		174:48:4275:4275	3508080	1					
ANR	3509032	ExpressionStatement	THREAD_ATOMIC_END	5213:16:117179:117196	3508080	0	True				
ANR	3509033	Identifier	THREAD_ATOMIC_END		3508080	0					
ANR	3509034	ReturnStatement	return ONIGERR_MEMORY ;	5214:16:117214:117235	3508080	1	True				
ANR	3509035	Identifier	ONIGERR_MEMORY		3508080	0					
ANR	3509036	ElseStatement	else		3508080	0					
ANR	3509037	CompoundStatement		179:17:4398:4398	3508080	0					
ANR	3509038	IfStatement	"if ( onig_st_lookup ( OnigTypeCClassTable , ( st_data_t ) & key , ( st_data_t * ) np ) )"		3508080	0					
ANR	3509039	Condition	"onig_st_lookup ( OnigTypeCClassTable , ( st_data_t ) & key , ( st_data_t * ) np )"	5218:18:117304:117406	3508080	0	True				
ANR	3509040	CallExpression	"onig_st_lookup ( OnigTypeCClassTable , ( st_data_t ) & key , ( st_data_t * ) np )"		3508080	0					
ANR	3509041	Callee	onig_st_lookup		3508080	0					
ANR	3509042	Identifier	onig_st_lookup		3508080	0					
ANR	3509043	ArgumentList	OnigTypeCClassTable		3508080	1					
ANR	3509044	Argument	OnigTypeCClassTable		3508080	0					
ANR	3509045	Identifier	OnigTypeCClassTable		3508080	0					
ANR	3509046	Argument	( st_data_t ) & key		3508080	1					
ANR	3509047	CastExpression	( st_data_t ) & key		3508080	0					
ANR	3509048	CastTarget	st_data_t		3508080	0					
ANR	3509049	UnaryOperationExpression	& key		3508080	1					
ANR	3509050	UnaryOperator	&		3508080	0					
ANR	3509051	Identifier	key		3508080	1					
ANR	3509052	Argument	( st_data_t * ) np		3508080	2					
ANR	3509053	CastExpression	( st_data_t * ) np		3508080	0					
ANR	3509054	CastTarget	st_data_t *		3508080	0					
ANR	3509055	Identifier	np		3508080	1					
ANR	3509056	CompoundStatement		181:51:4523:4523	3508080	1					
ANR	3509057	ExpressionStatement	THREAD_ATOMIC_END	5220:16:117427:117444	3508080	0	True				
ANR	3509058	Identifier	THREAD_ATOMIC_END		3508080	0					
ANR	3509059	BreakStatement	break ;	5221:16:117462:117467	3508080	1	True				
ANR	3509060	ExpressionStatement	"* np = node_new_cclass_by_codepoint_range ( tok -> u . prop . not , sb_out , mbr )"	5225:12:117512:117593	3508080	7	True				
ANR	3509061	AssignmentExpression	"* np = node_new_cclass_by_codepoint_range ( tok -> u . prop . not , sb_out , mbr )"		3508080	0		=			
ANR	3509062	UnaryOperationExpression	* np		3508080	0					
ANR	3509063	UnaryOperator	*		3508080	0					
ANR	3509064	Identifier	np		3508080	1					
ANR	3509065	CallExpression	"node_new_cclass_by_codepoint_range ( tok -> u . prop . not , sb_out , mbr )"		3508080	1					
ANR	3509066	Callee	node_new_cclass_by_codepoint_range		3508080	0					
ANR	3509067	Identifier	node_new_cclass_by_codepoint_range		3508080	0					
ANR	3509068	ArgumentList	tok -> u . prop . not		3508080	1					
ANR	3509069	Argument	tok -> u . prop . not		3508080	0					
ANR	3509070	MemberAccess	tok -> u . prop . not		3508080	0					
ANR	3509071	MemberAccess	tok -> u . prop		3508080	0					
ANR	3509072	PtrMemberAccess	tok -> u		3508080	0					
ANR	3509073	Identifier	tok		3508080	0					
ANR	3509074	Identifier	u		3508080	1					
ANR	3509075	Identifier	prop		3508080	1					
ANR	3509076	Identifier	not		3508080	1					
ANR	3509077	Argument	sb_out		3508080	1					
ANR	3509078	Identifier	sb_out		3508080	0					
ANR	3509079	Argument	mbr		3508080	2					
ANR	3509080	Identifier	mbr		3508080	0					
ANR	3509081	IfStatement	if ( IS_NULL ( * np ) )		3508080	8					
ANR	3509082	Condition	IS_NULL ( * np )	5227:16:117611:117622	3508080	0	True				
ANR	3509083	CallExpression	IS_NULL ( * np )		3508080	0					
ANR	3509084	Callee	IS_NULL		3508080	0					
ANR	3509085	Identifier	IS_NULL		3508080	0					
ANR	3509086	ArgumentList	* np		3508080	1					
ANR	3509087	Argument	* np		3508080	0					
ANR	3509088	UnaryOperationExpression	* np		3508080	0					
ANR	3509089	UnaryOperator	*		3508080	0					
ANR	3509090	Identifier	np		3508080	1					
ANR	3509091	CompoundStatement		189:30:4739:4739	3508080	1					
ANR	3509092	ExpressionStatement	THREAD_ATOMIC_END	5228:14:117641:117658	3508080	0	True				
ANR	3509093	Identifier	THREAD_ATOMIC_END		3508080	0					
ANR	3509094	ReturnStatement	return ONIGERR_MEMORY ;	5229:14:117674:117695	3508080	1	True				
ANR	3509095	Identifier	ONIGERR_MEMORY		3508080	0					
ANR	3509096	ExpressionStatement	cc = NCCLASS ( * np )	5232:12:117724:117741	3508080	9	True				
ANR	3509097	AssignmentExpression	cc = NCCLASS ( * np )		3508080	0		=			
ANR	3509098	Identifier	cc		3508080	0					
ANR	3509099	CallExpression	NCCLASS ( * np )		3508080	1					
ANR	3509100	Callee	NCCLASS		3508080	0					
ANR	3509101	Identifier	NCCLASS		3508080	0					
ANR	3509102	ArgumentList	* np		3508080	1					
ANR	3509103	Argument	* np		3508080	0					
ANR	3509104	UnaryOperationExpression	* np		3508080	0					
ANR	3509105	UnaryOperator	*		3508080	0					
ANR	3509106	Identifier	np		3508080	1					
ANR	3509107	ExpressionStatement	NCCLASS_SET_SHARE ( cc )	5233:12:117755:117776	3508080	10	True				
ANR	3509108	CallExpression	NCCLASS_SET_SHARE ( cc )		3508080	0					
ANR	3509109	Callee	NCCLASS_SET_SHARE		3508080	0					
ANR	3509110	Identifier	NCCLASS_SET_SHARE		3508080	0					
ANR	3509111	ArgumentList	cc		3508080	1					
ANR	3509112	Argument	cc		3508080	0					
ANR	3509113	Identifier	cc		3508080	0					
ANR	3509114	ExpressionStatement	new_key = ( type_cclass_key * ) xmalloc ( sizeof ( type_cclass_key ) )	5234:12:117790:117851	3508080	11	True				
ANR	3509115	AssignmentExpression	new_key = ( type_cclass_key * ) xmalloc ( sizeof ( type_cclass_key ) )		3508080	0		=			
ANR	3509116	Identifier	new_key		3508080	0					
ANR	3509117	CastExpression	( type_cclass_key * ) xmalloc ( sizeof ( type_cclass_key ) )		3508080	1					
ANR	3509118	CastTarget	type_cclass_key *		3508080	0					
ANR	3509119	CallExpression	xmalloc ( sizeof ( type_cclass_key ) )		3508080	1					
ANR	3509120	Callee	xmalloc		3508080	0					
ANR	3509121	Identifier	xmalloc		3508080	0					
ANR	3509122	ArgumentList	sizeof ( type_cclass_key )		3508080	1					
ANR	3509123	Argument	sizeof ( type_cclass_key )		3508080	0					
ANR	3509124	SizeofExpression	sizeof ( type_cclass_key )		3508080	0					
ANR	3509125	Sizeof	sizeof		3508080	0					
ANR	3509126	SizeofOperand	type_cclass_key		3508080	1					
ANR	3509127	ExpressionStatement	"xmemcpy ( new_key , & key , sizeof ( type_cclass_key ) )"	5235:5:117858:117905	3508080	12	True				
ANR	3509128	CallExpression	"xmemcpy ( new_key , & key , sizeof ( type_cclass_key ) )"		3508080	0					
ANR	3509129	Callee	xmemcpy		3508080	0					
ANR	3509130	Identifier	xmemcpy		3508080	0					
ANR	3509131	ArgumentList	new_key		3508080	1					
ANR	3509132	Argument	new_key		3508080	0					
ANR	3509133	Identifier	new_key		3508080	0					
ANR	3509134	Argument	& key		3508080	1					
ANR	3509135	UnaryOperationExpression	& key		3508080	0					
ANR	3509136	UnaryOperator	&		3508080	0					
ANR	3509137	Identifier	key		3508080	1					
ANR	3509138	Argument	sizeof ( type_cclass_key )		3508080	2					
ANR	3509139	SizeofExpression	sizeof ( type_cclass_key )		3508080	0					
ANR	3509140	Sizeof	sizeof		3508080	0					
ANR	3509141	SizeofOperand	type_cclass_key		3508080	1					
ANR	3509142	ExpressionStatement	"onig_st_add_direct ( OnigTypeCClassTable , ( st_data_t ) new_key , ( st_data_t ) * np )"	5236:12:117919:118027	3508080	13	True				
ANR	3509143	CallExpression	"onig_st_add_direct ( OnigTypeCClassTable , ( st_data_t ) new_key , ( st_data_t ) * np )"		3508080	0					
ANR	3509144	Callee	onig_st_add_direct		3508080	0					
ANR	3509145	Identifier	onig_st_add_direct		3508080	0					
ANR	3509146	ArgumentList	OnigTypeCClassTable		3508080	1					
ANR	3509147	Argument	OnigTypeCClassTable		3508080	0					
ANR	3509148	Identifier	OnigTypeCClassTable		3508080	0					
ANR	3509149	Argument	( st_data_t ) new_key		3508080	1					
ANR	3509150	CastExpression	( st_data_t ) new_key		3508080	0					
ANR	3509151	CastTarget	st_data_t		3508080	0					
ANR	3509152	Identifier	new_key		3508080	1					
ANR	3509153	Argument	( st_data_t ) * np		3508080	2					
ANR	3509154	CastExpression	( st_data_t ) * np		3508080	0					
ANR	3509155	CastTarget	st_data_t		3508080	0					
ANR	3509156	UnaryOperationExpression	* np		3508080	1					
ANR	3509157	UnaryOperator	*		3508080	0					
ANR	3509158	Identifier	np		3508080	1					
ANR	3509159	ExpressionStatement	THREAD_ATOMIC_END	5239:12:118054:118071	3508080	14	True				
ANR	3509160	Identifier	THREAD_ATOMIC_END		3508080	0					
ANR	3509161	ElseStatement	else		3508080	0					
ANR	3509162	CompoundStatement		203:15:5214:5214	3508080	0					
ANR	3509163	ExpressionStatement	* np = node_new_cclass ( )	5243:12:118121:118144	3508080	0	True				
ANR	3509164	AssignmentExpression	* np = node_new_cclass ( )		3508080	0		=			
ANR	3509165	UnaryOperationExpression	* np		3508080	0					
ANR	3509166	UnaryOperator	*		3508080	0					
ANR	3509167	Identifier	np		3508080	1					
ANR	3509168	CallExpression	node_new_cclass ( )		3508080	1					
ANR	3509169	Callee	node_new_cclass		3508080	0					
ANR	3509170	Identifier	node_new_cclass		3508080	0					
ANR	3509171	ArgumentList			3508080	1					
ANR	3509172	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5244:12:118158:118187	3508080	1	True				
ANR	3509173	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3508080	0					
ANR	3509174	Callee	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509175	Identifier	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509176	ArgumentList	* np		3508080	1					
ANR	3509177	Argument	* np		3508080	0					
ANR	3509178	UnaryOperationExpression	* np		3508080	0					
ANR	3509179	UnaryOperator	*		3508080	0					
ANR	3509180	Identifier	np		3508080	1					
ANR	3509181	ExpressionStatement	cc = NCCLASS ( * np )	5245:12:118201:118218	3508080	2	True				
ANR	3509182	AssignmentExpression	cc = NCCLASS ( * np )		3508080	0		=			
ANR	3509183	Identifier	cc		3508080	0					
ANR	3509184	CallExpression	NCCLASS ( * np )		3508080	1					
ANR	3509185	Callee	NCCLASS		3508080	0					
ANR	3509186	Identifier	NCCLASS		3508080	0					
ANR	3509187	ArgumentList	* np		3508080	1					
ANR	3509188	Argument	* np		3508080	0					
ANR	3509189	UnaryOperationExpression	* np		3508080	0					
ANR	3509190	UnaryOperator	*		3508080	0					
ANR	3509191	Identifier	np		3508080	1					
ANR	3509192	ExpressionStatement	"add_ctype_to_cc ( cc , tok -> u . prop . ctype , 0 , env )"	5246:12:118232:118278	3508080	3	True				
ANR	3509193	CallExpression	"add_ctype_to_cc ( cc , tok -> u . prop . ctype , 0 , env )"		3508080	0					
ANR	3509194	Callee	add_ctype_to_cc		3508080	0					
ANR	3509195	Identifier	add_ctype_to_cc		3508080	0					
ANR	3509196	ArgumentList	cc		3508080	1					
ANR	3509197	Argument	cc		3508080	0					
ANR	3509198	Identifier	cc		3508080	0					
ANR	3509199	Argument	tok -> u . prop . ctype		3508080	1					
ANR	3509200	MemberAccess	tok -> u . prop . ctype		3508080	0					
ANR	3509201	MemberAccess	tok -> u . prop		3508080	0					
ANR	3509202	PtrMemberAccess	tok -> u		3508080	0					
ANR	3509203	Identifier	tok		3508080	0					
ANR	3509204	Identifier	u		3508080	1					
ANR	3509205	Identifier	prop		3508080	1					
ANR	3509206	Identifier	ctype		3508080	1					
ANR	3509207	Argument	0		3508080	2					
ANR	3509208	PrimaryExpression	0		3508080	0					
ANR	3509209	Argument	env		3508080	3					
ANR	3509210	Identifier	env		3508080	0					
ANR	3509211	IfStatement	if ( tok -> u . prop . not != 0 )		3508080	4					
ANR	3509212	Condition	tok -> u . prop . not != 0	5247:16:118296:118315	3508080	0	True				
ANR	3509213	EqualityExpression	tok -> u . prop . not != 0		3508080	0		!=			
ANR	3509214	MemberAccess	tok -> u . prop . not		3508080	0					
ANR	3509215	MemberAccess	tok -> u . prop		3508080	0					
ANR	3509216	PtrMemberAccess	tok -> u		3508080	0					
ANR	3509217	Identifier	tok		3508080	0					
ANR	3509218	Identifier	u		3508080	1					
ANR	3509219	Identifier	prop		3508080	1					
ANR	3509220	Identifier	not		3508080	1					
ANR	3509221	PrimaryExpression	0		3508080	1					
ANR	3509222	ExpressionStatement	NCCLASS_SET_NOT ( cc )	5247:38:118318:118337	3508080	1	True				
ANR	3509223	CallExpression	NCCLASS_SET_NOT ( cc )		3508080	0					
ANR	3509224	Callee	NCCLASS_SET_NOT		3508080	0					
ANR	3509225	Identifier	NCCLASS_SET_NOT		3508080	0					
ANR	3509226	ArgumentList	cc		3508080	1					
ANR	3509227	Argument	cc		3508080	0					
ANR	3509228	Identifier	cc		3508080	0					
ANR	3509229	BreakStatement	break ;	5252:1:118393:118398	3508080	8	True				
ANR	3509230	Label	default :	5254:6:118407:118414	3508080	9	True				
ANR	3509231	Identifier	default		3508080	0					
ANR	3509232	ReturnStatement	return ONIGERR_PARSER_BUG ;	5255:1:118417:118442	3508080	10	True				
ANR	3509233	Identifier	ONIGERR_PARSER_BUG		3508080	0					
ANR	3509234	BreakStatement	break ;	5256:1:118445:118450	3508080	11	True				
ANR	3509235	BreakStatement	break ;	5259:4:118470:118475	3508080	31	True				
ANR	3509236	Label	case TK_CHAR_PROPERTY :	5261:2:118480:118501	3508080	32	True				
ANR	3509237	Identifier	TK_CHAR_PROPERTY		3508080	0					
ANR	3509238	ExpressionStatement	"r = parse_char_property ( np , tok , src , end , env )"	5262:4:118507:118554	3508080	33	True				
ANR	3509239	AssignmentExpression	"r = parse_char_property ( np , tok , src , end , env )"		3508080	0		=			
ANR	3509240	Identifier	r		3508080	0					
ANR	3509241	CallExpression	"parse_char_property ( np , tok , src , end , env )"		3508080	1					
ANR	3509242	Callee	parse_char_property		3508080	0					
ANR	3509243	Identifier	parse_char_property		3508080	0					
ANR	3509244	ArgumentList	np		3508080	1					
ANR	3509245	Argument	np		3508080	0					
ANR	3509246	Identifier	np		3508080	0					
ANR	3509247	Argument	tok		3508080	1					
ANR	3509248	Identifier	tok		3508080	0					
ANR	3509249	Argument	src		3508080	2					
ANR	3509250	Identifier	src		3508080	0					
ANR	3509251	Argument	end		3508080	3					
ANR	3509252	Identifier	end		3508080	0					
ANR	3509253	Argument	env		3508080	4					
ANR	3509254	Identifier	env		3508080	0					
ANR	3509255	IfStatement	if ( r != 0 )		3508080	34					
ANR	3509256	Condition	r != 0	5263:8:118564:118569	3508080	0	True				
ANR	3509257	EqualityExpression	r != 0		3508080	0		!=			
ANR	3509258	Identifier	r		3508080	0					
ANR	3509259	PrimaryExpression	0		3508080	1					
ANR	3509260	ReturnStatement	return r ;	5263:16:118572:118580	3508080	1	True				
ANR	3509261	Identifier	r		3508080	0					
ANR	3509262	BreakStatement	break ;	5264:4:118586:118591	3508080	35	True				
ANR	3509263	Label	case TK_CC_OPEN :	5266:2:118596:118611	3508080	36	True				
ANR	3509264	Identifier	TK_CC_OPEN		3508080	0					
ANR	3509265	CompoundStatement		230:6:5739:5753	3508080	37					
ANR	3509266	IdentifierDeclStatement	CClassNode * cc ;	5268:6:118625:118639	3508080	0	True				
ANR	3509267	IdentifierDecl	* cc		3508080	0					
ANR	3509268	IdentifierDeclType	CClassNode *		3508080	0					
ANR	3509269	Identifier	cc		3508080	1					
ANR	3509270	ExpressionStatement	"r = parse_char_class ( np , tok , src , end , env )"	5270:6:118648:118692	3508080	1	True				
ANR	3509271	AssignmentExpression	"r = parse_char_class ( np , tok , src , end , env )"		3508080	0		=			
ANR	3509272	Identifier	r		3508080	0					
ANR	3509273	CallExpression	"parse_char_class ( np , tok , src , end , env )"		3508080	1					
ANR	3509274	Callee	parse_char_class		3508080	0					
ANR	3509275	Identifier	parse_char_class		3508080	0					
ANR	3509276	ArgumentList	np		3508080	1					
ANR	3509277	Argument	np		3508080	0					
ANR	3509278	Identifier	np		3508080	0					
ANR	3509279	Argument	tok		3508080	1					
ANR	3509280	Identifier	tok		3508080	0					
ANR	3509281	Argument	src		3508080	2					
ANR	3509282	Identifier	src		3508080	0					
ANR	3509283	Argument	end		3508080	3					
ANR	3509284	Identifier	end		3508080	0					
ANR	3509285	Argument	env		3508080	4					
ANR	3509286	Identifier	env		3508080	0					
ANR	3509287	IfStatement	if ( r != 0 )		3508080	2					
ANR	3509288	Condition	r != 0	5271:10:118704:118709	3508080	0	True				
ANR	3509289	EqualityExpression	r != 0		3508080	0		!=			
ANR	3509290	Identifier	r		3508080	0					
ANR	3509291	PrimaryExpression	0		3508080	1					
ANR	3509292	ReturnStatement	return r ;	5271:18:118712:118720	3508080	1	True				
ANR	3509293	Identifier	r		3508080	0					
ANR	3509294	ExpressionStatement	cc = NCCLASS ( * np )	5273:6:118729:118746	3508080	3	True				
ANR	3509295	AssignmentExpression	cc = NCCLASS ( * np )		3508080	0		=			
ANR	3509296	Identifier	cc		3508080	0					
ANR	3509297	CallExpression	NCCLASS ( * np )		3508080	1					
ANR	3509298	Callee	NCCLASS		3508080	0					
ANR	3509299	Identifier	NCCLASS		3508080	0					
ANR	3509300	ArgumentList	* np		3508080	1					
ANR	3509301	Argument	* np		3508080	0					
ANR	3509302	UnaryOperationExpression	* np		3508080	0					
ANR	3509303	UnaryOperator	*		3508080	0					
ANR	3509304	Identifier	np		3508080	1					
ANR	3509305	IfStatement	if ( IS_IGNORECASE ( env -> option ) )		3508080	4					
ANR	3509306	Condition	IS_IGNORECASE ( env -> option )	5274:10:118758:118783	3508080	0	True				
ANR	3509307	CallExpression	IS_IGNORECASE ( env -> option )		3508080	0					
ANR	3509308	Callee	IS_IGNORECASE		3508080	0					
ANR	3509309	Identifier	IS_IGNORECASE		3508080	0					
ANR	3509310	ArgumentList	env -> option		3508080	1					
ANR	3509311	Argument	env -> option		3508080	0					
ANR	3509312	PtrMemberAccess	env -> option		3508080	0					
ANR	3509313	Identifier	env		3508080	0					
ANR	3509314	Identifier	option		3508080	1					
ANR	3509315	CompoundStatement		237:1:5903:5925	3508080	1					
ANR	3509316	IdentifierDeclStatement	IApplyCaseFoldArg iarg ;	5275:1:118789:118811	3508080	0	True				
ANR	3509317	IdentifierDecl	iarg		3508080	0					
ANR	3509318	IdentifierDeclType	IApplyCaseFoldArg		3508080	0					
ANR	3509319	Identifier	iarg		3508080	1					
ANR	3509320	ExpressionStatement	iarg . env = env	5277:1:118815:118834	3508080	1	True				
ANR	3509321	AssignmentExpression	iarg . env = env		3508080	0		=			
ANR	3509322	MemberAccess	iarg . env		3508080	0					
ANR	3509323	Identifier	iarg		3508080	0					
ANR	3509324	Identifier	env		3508080	1					
ANR	3509325	Identifier	env		3508080	1					
ANR	3509326	ExpressionStatement	iarg . cc = cc	5278:1:118837:118855	3508080	2	True				
ANR	3509327	AssignmentExpression	iarg . cc = cc		3508080	0		=			
ANR	3509328	MemberAccess	iarg . cc		3508080	0					
ANR	3509329	Identifier	iarg		3508080	0					
ANR	3509330	Identifier	cc		3508080	1					
ANR	3509331	Identifier	cc		3508080	1					
ANR	3509332	ExpressionStatement	iarg . alt_root = NULL_NODE	5279:1:118858:118883	3508080	3	True				
ANR	3509333	AssignmentExpression	iarg . alt_root = NULL_NODE		3508080	0		=			
ANR	3509334	MemberAccess	iarg . alt_root		3508080	0					
ANR	3509335	Identifier	iarg		3508080	0					
ANR	3509336	Identifier	alt_root		3508080	1					
ANR	3509337	Identifier	NULL_NODE		3508080	1					
ANR	3509338	ExpressionStatement	iarg . ptail = & ( iarg . alt_root )	5280:1:118886:118918	3508080	4	True				
ANR	3509339	AssignmentExpression	iarg . ptail = & ( iarg . alt_root )		3508080	0		=			
ANR	3509340	MemberAccess	iarg . ptail		3508080	0					
ANR	3509341	Identifier	iarg		3508080	0					
ANR	3509342	Identifier	ptail		3508080	1					
ANR	3509343	UnaryOperationExpression	& ( iarg . alt_root )		3508080	1					
ANR	3509344	UnaryOperator	&		3508080	0					
ANR	3509345	MemberAccess	iarg . alt_root		3508080	1					
ANR	3509346	Identifier	iarg		3508080	0					
ANR	3509347	Identifier	alt_root		3508080	1					
ANR	3509348	ExpressionStatement	"r = ONIGENC_APPLY_ALL_CASE_FOLD ( env -> enc , env -> case_fold_flag , i_apply_case_fold , & iarg )"	5282:1:118922:119015	3508080	5	True				
ANR	3509349	AssignmentExpression	"r = ONIGENC_APPLY_ALL_CASE_FOLD ( env -> enc , env -> case_fold_flag , i_apply_case_fold , & iarg )"		3508080	0		=			
ANR	3509350	Identifier	r		3508080	0					
ANR	3509351	CallExpression	"ONIGENC_APPLY_ALL_CASE_FOLD ( env -> enc , env -> case_fold_flag , i_apply_case_fold , & iarg )"		3508080	1					
ANR	3509352	Callee	ONIGENC_APPLY_ALL_CASE_FOLD		3508080	0					
ANR	3509353	Identifier	ONIGENC_APPLY_ALL_CASE_FOLD		3508080	0					
ANR	3509354	ArgumentList	env -> enc		3508080	1					
ANR	3509355	Argument	env -> enc		3508080	0					
ANR	3509356	PtrMemberAccess	env -> enc		3508080	0					
ANR	3509357	Identifier	env		3508080	0					
ANR	3509358	Identifier	enc		3508080	1					
ANR	3509359	Argument	env -> case_fold_flag		3508080	1					
ANR	3509360	PtrMemberAccess	env -> case_fold_flag		3508080	0					
ANR	3509361	Identifier	env		3508080	0					
ANR	3509362	Identifier	case_fold_flag		3508080	1					
ANR	3509363	Argument	i_apply_case_fold		3508080	2					
ANR	3509364	Identifier	i_apply_case_fold		3508080	0					
ANR	3509365	Argument	& iarg		3508080	3					
ANR	3509366	UnaryOperationExpression	& iarg		3508080	0					
ANR	3509367	UnaryOperator	&		3508080	0					
ANR	3509368	Identifier	iarg		3508080	1					
ANR	3509369	IfStatement	if ( r != 0 )		3508080	6					
ANR	3509370	Condition	r != 0	5284:5:119022:119027	3508080	0	True				
ANR	3509371	EqualityExpression	r != 0		3508080	0		!=			
ANR	3509372	Identifier	r		3508080	0					
ANR	3509373	PrimaryExpression	0		3508080	1					
ANR	3509374	CompoundStatement		246:13:6144:6144	3508080	1					
ANR	3509375	ExpressionStatement	onig_node_free ( iarg . alt_root )	5285:3:119035:119064	3508080	0	True				
ANR	3509376	CallExpression	onig_node_free ( iarg . alt_root )		3508080	0					
ANR	3509377	Callee	onig_node_free		3508080	0					
ANR	3509378	Identifier	onig_node_free		3508080	0					
ANR	3509379	ArgumentList	iarg . alt_root		3508080	1					
ANR	3509380	Argument	iarg . alt_root		3508080	0					
ANR	3509381	MemberAccess	iarg . alt_root		3508080	0					
ANR	3509382	Identifier	iarg		3508080	0					
ANR	3509383	Identifier	alt_root		3508080	1					
ANR	3509384	ReturnStatement	return r ;	5286:3:119069:119077	3508080	1	True				
ANR	3509385	Identifier	r		3508080	0					
ANR	3509386	IfStatement	if ( IS_NOT_NULL ( iarg . alt_root ) )		3508080	7					
ANR	3509387	Condition	IS_NOT_NULL ( iarg . alt_root )	5288:5:119087:119112	3508080	0	True				
ANR	3509388	CallExpression	IS_NOT_NULL ( iarg . alt_root )		3508080	0					
ANR	3509389	Callee	IS_NOT_NULL		3508080	0					
ANR	3509390	Identifier	IS_NOT_NULL		3508080	0					
ANR	3509391	ArgumentList	iarg . alt_root		3508080	1					
ANR	3509392	Argument	iarg . alt_root		3508080	0					
ANR	3509393	MemberAccess	iarg . alt_root		3508080	0					
ANR	3509394	Identifier	iarg		3508080	0					
ANR	3509395	Identifier	alt_root		3508080	1					
ANR	3509396	CompoundStatement		251:10:6241:6291	3508080	1					
ANR	3509397	IdentifierDeclStatement	"Node * work = onig_node_new_alt ( * np , iarg . alt_root ) ;"	5289:10:119127:119177	3508080	0	True				
ANR	3509398	IdentifierDecl	"* work = onig_node_new_alt ( * np , iarg . alt_root )"		3508080	0					
ANR	3509399	IdentifierDeclType	Node *		3508080	0					
ANR	3509400	Identifier	work		3508080	1					
ANR	3509401	AssignmentExpression	"* work = onig_node_new_alt ( * np , iarg . alt_root )"		3508080	2		=			
ANR	3509402	Identifier	work		3508080	0					
ANR	3509403	CallExpression	"onig_node_new_alt ( * np , iarg . alt_root )"		3508080	1					
ANR	3509404	Callee	onig_node_new_alt		3508080	0					
ANR	3509405	Identifier	onig_node_new_alt		3508080	0					
ANR	3509406	ArgumentList	* np		3508080	1					
ANR	3509407	Argument	* np		3508080	0					
ANR	3509408	UnaryOperationExpression	* np		3508080	0					
ANR	3509409	UnaryOperator	*		3508080	0					
ANR	3509410	Identifier	np		3508080	1					
ANR	3509411	Argument	iarg . alt_root		3508080	1					
ANR	3509412	MemberAccess	iarg . alt_root		3508080	0					
ANR	3509413	Identifier	iarg		3508080	0					
ANR	3509414	Identifier	alt_root		3508080	1					
ANR	3509415	IfStatement	if ( IS_NULL ( work ) )		3508080	1					
ANR	3509416	Condition	IS_NULL ( work )	5290:14:119193:119205	3508080	0	True				
ANR	3509417	CallExpression	IS_NULL ( work )		3508080	0					
ANR	3509418	Callee	IS_NULL		3508080	0					
ANR	3509419	Identifier	IS_NULL		3508080	0					
ANR	3509420	ArgumentList	work		3508080	1					
ANR	3509421	Argument	work		3508080	0					
ANR	3509422	Identifier	work		3508080	0					
ANR	3509423	CompoundStatement		252:29:6322:6322	3508080	1					
ANR	3509424	ExpressionStatement	onig_node_free ( iarg . alt_root )	5291:12:119222:119251	3508080	0	True				
ANR	3509425	CallExpression	onig_node_free ( iarg . alt_root )		3508080	0					
ANR	3509426	Callee	onig_node_free		3508080	0					
ANR	3509427	Identifier	onig_node_free		3508080	0					
ANR	3509428	ArgumentList	iarg . alt_root		3508080	1					
ANR	3509429	Argument	iarg . alt_root		3508080	0					
ANR	3509430	MemberAccess	iarg . alt_root		3508080	0					
ANR	3509431	Identifier	iarg		3508080	0					
ANR	3509432	Identifier	alt_root		3508080	1					
ANR	3509433	ReturnStatement	return ONIGERR_MEMORY ;	5292:12:119265:119286	3508080	1	True				
ANR	3509434	Identifier	ONIGERR_MEMORY		3508080	0					
ANR	3509435	ExpressionStatement	* np = work	5294:10:119310:119320	3508080	2	True				
ANR	3509436	AssignmentExpression	* np = work		3508080	0		=			
ANR	3509437	UnaryOperationExpression	* np		3508080	0					
ANR	3509438	UnaryOperator	*		3508080	0					
ANR	3509439	Identifier	np		3508080	1					
ANR	3509440	Identifier	work		3508080	1					
ANR	3509441	BreakStatement	break ;	5298:4:119343:119348	3508080	38	True				
ANR	3509442	Label	case TK_ANYCHAR :	5300:2:119353:119368	3508080	39	True				
ANR	3509443	Identifier	TK_ANYCHAR		3508080	0					
ANR	3509444	ExpressionStatement	* np = node_new_anychar ( )	5301:4:119374:119398	3508080	40	True				
ANR	3509445	AssignmentExpression	* np = node_new_anychar ( )		3508080	0		=			
ANR	3509446	UnaryOperationExpression	* np		3508080	0					
ANR	3509447	UnaryOperator	*		3508080	0					
ANR	3509448	Identifier	np		3508080	1					
ANR	3509449	CallExpression	node_new_anychar ( )		3508080	1					
ANR	3509450	Callee	node_new_anychar		3508080	0					
ANR	3509451	Identifier	node_new_anychar		3508080	0					
ANR	3509452	ArgumentList			3508080	1					
ANR	3509453	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5302:4:119404:119433	3508080	41	True				
ANR	3509454	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3508080	0					
ANR	3509455	Callee	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509456	Identifier	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509457	ArgumentList	* np		3508080	1					
ANR	3509458	Argument	* np		3508080	0					
ANR	3509459	UnaryOperationExpression	* np		3508080	0					
ANR	3509460	UnaryOperator	*		3508080	0					
ANR	3509461	Identifier	np		3508080	1					
ANR	3509462	BreakStatement	break ;	5303:4:119439:119444	3508080	42	True				
ANR	3509463	Label	case TK_ANYCHAR_ANYTIME :	5305:2:119449:119472	3508080	43	True				
ANR	3509464	Identifier	TK_ANYCHAR_ANYTIME		3508080	0					
ANR	3509465	ExpressionStatement	* np = node_new_anychar ( )	5306:4:119478:119502	3508080	44	True				
ANR	3509466	AssignmentExpression	* np = node_new_anychar ( )		3508080	0		=			
ANR	3509467	UnaryOperationExpression	* np		3508080	0					
ANR	3509468	UnaryOperator	*		3508080	0					
ANR	3509469	Identifier	np		3508080	1					
ANR	3509470	CallExpression	node_new_anychar ( )		3508080	1					
ANR	3509471	Callee	node_new_anychar		3508080	0					
ANR	3509472	Identifier	node_new_anychar		3508080	0					
ANR	3509473	ArgumentList			3508080	1					
ANR	3509474	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5307:4:119508:119537	3508080	45	True				
ANR	3509475	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3508080	0					
ANR	3509476	Callee	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509477	Identifier	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509478	ArgumentList	* np		3508080	1					
ANR	3509479	Argument	* np		3508080	0					
ANR	3509480	UnaryOperationExpression	* np		3508080	0					
ANR	3509481	UnaryOperator	*		3508080	0					
ANR	3509482	Identifier	np		3508080	1					
ANR	3509483	ExpressionStatement	"qn = node_new_quantifier ( 0 , REPEAT_INFINITE , 0 )"	5308:4:119543:119590	3508080	46	True				
ANR	3509484	AssignmentExpression	"qn = node_new_quantifier ( 0 , REPEAT_INFINITE , 0 )"		3508080	0		=			
ANR	3509485	Identifier	qn		3508080	0					
ANR	3509486	CallExpression	"node_new_quantifier ( 0 , REPEAT_INFINITE , 0 )"		3508080	1					
ANR	3509487	Callee	node_new_quantifier		3508080	0					
ANR	3509488	Identifier	node_new_quantifier		3508080	0					
ANR	3509489	ArgumentList	0		3508080	1					
ANR	3509490	Argument	0		3508080	0					
ANR	3509491	PrimaryExpression	0		3508080	0					
ANR	3509492	Argument	REPEAT_INFINITE		3508080	1					
ANR	3509493	Identifier	REPEAT_INFINITE		3508080	0					
ANR	3509494	Argument	0		3508080	2					
ANR	3509495	PrimaryExpression	0		3508080	0					
ANR	3509496	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( qn )	5309:4:119596:119624	3508080	47	True				
ANR	3509497	CallExpression	CHECK_NULL_RETURN_MEMERR ( qn )		3508080	0					
ANR	3509498	Callee	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509499	Identifier	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509500	ArgumentList	qn		3508080	1					
ANR	3509501	Argument	qn		3508080	0					
ANR	3509502	Identifier	qn		3508080	0					
ANR	3509503	ExpressionStatement	NQTFR ( qn ) -> target = * np	5310:4:119630:119653	3508080	48	True				
ANR	3509504	AssignmentExpression	NQTFR ( qn ) -> target = * np		3508080	0		=			
ANR	3509505	PtrMemberAccess	NQTFR ( qn ) -> target		3508080	0					
ANR	3509506	CallExpression	NQTFR ( qn )		3508080	0					
ANR	3509507	Callee	NQTFR		3508080	0					
ANR	3509508	Identifier	NQTFR		3508080	0					
ANR	3509509	ArgumentList	qn		3508080	1					
ANR	3509510	Argument	qn		3508080	0					
ANR	3509511	Identifier	qn		3508080	0					
ANR	3509512	Identifier	target		3508080	1					
ANR	3509513	UnaryOperationExpression	* np		3508080	1					
ANR	3509514	UnaryOperator	*		3508080	0					
ANR	3509515	Identifier	np		3508080	1					
ANR	3509516	ExpressionStatement	* np = qn	5311:4:119659:119667	3508080	49	True				
ANR	3509517	AssignmentExpression	* np = qn		3508080	0		=			
ANR	3509518	UnaryOperationExpression	* np		3508080	0					
ANR	3509519	UnaryOperator	*		3508080	0					
ANR	3509520	Identifier	np		3508080	1					
ANR	3509521	Identifier	qn		3508080	1					
ANR	3509522	BreakStatement	break ;	5312:4:119673:119678	3508080	50	True				
ANR	3509523	Label	case TK_BACKREF :	5314:2:119683:119698	3508080	51	True				
ANR	3509524	Identifier	TK_BACKREF		3508080	0					
ANR	3509525	ExpressionStatement	len = tok -> u . backref . num	5315:4:119704:119728	3508080	52	True				
ANR	3509526	AssignmentExpression	len = tok -> u . backref . num		3508080	0		=			
ANR	3509527	Identifier	len		3508080	0					
ANR	3509528	MemberAccess	tok -> u . backref . num		3508080	1					
ANR	3509529	MemberAccess	tok -> u . backref		3508080	0					
ANR	3509530	PtrMemberAccess	tok -> u		3508080	0					
ANR	3509531	Identifier	tok		3508080	0					
ANR	3509532	Identifier	u		3508080	1					
ANR	3509533	Identifier	backref		3508080	1					
ANR	3509534	Identifier	num		3508080	1					
ANR	3509535	Statement	*	5316:4:119734:119734	3508080	53	True				
ANR	3509536	Statement	np	5316:5:119735:119736	3508080	54	True				
ANR	3509537	Statement	=	5316:8:119738:119738	3508080	55	True				
ANR	3509538	Statement	node_new_backref	5316:10:119740:119755	3508080	56	True				
ANR	3509539	Statement	(	5316:26:119756:119756	3508080	57	True				
ANR	3509540	Statement	len	5316:27:119757:119759	3508080	58	True				
ANR	3509541	Statement	","	5316:30:119760:119760	3508080	59	True				
ANR	3509542	Statement	(	5317:5:119767:119767	3508080	60	True				
ANR	3509543	Statement	len	5317:6:119768:119770	3508080	61	True				
ANR	3509544	Statement	>	5317:10:119772:119772	3508080	62	True				
ANR	3509545	Statement	1	5317:12:119774:119774	3508080	63	True				
ANR	3509546	Statement	?	5317:14:119776:119776	3508080	64	True				
ANR	3509547	Statement	tok	5317:16:119778:119780	3508080	65	True				
ANR	3509548	Statement	->	5317:19:119781:119782	3508080	66	True				
ANR	3509549	Statement	u	5317:21:119783:119783	3508080	67	True				
ANR	3509550	Statement	.	5317:22:119784:119784	3508080	68	True				
ANR	3509551	Statement	backref	5317:23:119785:119791	3508080	69	True				
ANR	3509552	Statement	.	5317:30:119792:119792	3508080	70	True				
ANR	3509553	Label	refs :	5317:31:119793:119798	3508080	71	True				
ANR	3509554	Identifier	refs		3508080	0					
ANR	3509555	Statement	&	5317:38:119800:119800	3508080	72	True				
ANR	3509556	Statement	(	5317:39:119801:119801	3508080	73	True				
ANR	3509557	Statement	tok	5317:40:119802:119804	3508080	74	True				
ANR	3509558	Statement	->	5317:43:119805:119806	3508080	75	True				
ANR	3509559	Statement	u	5317:45:119807:119807	3508080	76	True				
ANR	3509560	Statement	.	5317:46:119808:119808	3508080	77	True				
ANR	3509561	Statement	backref	5317:47:119809:119815	3508080	78	True				
ANR	3509562	Statement	.	5317:54:119816:119816	3508080	79	True				
ANR	3509563	Statement	ref1	5317:55:119817:119820	3508080	80	True				
ANR	3509564	Statement	)	5317:59:119821:119821	3508080	81	True				
ANR	3509565	Statement	)	5317:60:119822:119822	3508080	82	True				
ANR	3509566	Statement	","	5317:61:119823:119823	3508080	83	True				
ANR	3509567	Statement	tok	5318:6:119831:119833	3508080	84	True				
ANR	3509568	Statement	->	5318:9:119834:119835	3508080	85	True				
ANR	3509569	Statement	u	5318:11:119836:119836	3508080	86	True				
ANR	3509570	Statement	.	5318:12:119837:119837	3508080	87	True				
ANR	3509571	Statement	backref	5318:13:119838:119844	3508080	88	True				
ANR	3509572	Statement	.	5318:20:119845:119845	3508080	89	True				
ANR	3509573	Statement	by_name	5318:21:119846:119852	3508080	90	True				
ANR	3509574	Statement	","	5318:28:119853:119853	3508080	91	True				
ANR	3509575	Statement	tok	5320:6:119891:119893	3508080	92	True				
ANR	3509576	Statement	->	5320:9:119894:119895	3508080	93	True				
ANR	3509577	Statement	u	5320:11:119896:119896	3508080	94	True				
ANR	3509578	Statement	.	5320:12:119897:119897	3508080	95	True				
ANR	3509579	Statement	backref	5320:13:119898:119904	3508080	96	True				
ANR	3509580	Statement	.	5320:20:119905:119905	3508080	97	True				
ANR	3509581	Statement	exist_level	5320:21:119906:119916	3508080	98	True				
ANR	3509582	Statement	","	5320:32:119917:119917	3508080	99	True				
ANR	3509583	Statement	tok	5321:6:119925:119927	3508080	100	True				
ANR	3509584	Statement	->	5321:9:119928:119929	3508080	101	True				
ANR	3509585	Statement	u	5321:11:119930:119930	3508080	102	True				
ANR	3509586	Statement	.	5321:12:119931:119931	3508080	103	True				
ANR	3509587	Statement	backref	5321:13:119932:119938	3508080	104	True				
ANR	3509588	Statement	.	5321:20:119939:119939	3508080	105	True				
ANR	3509589	Statement	level	5321:21:119940:119944	3508080	106	True				
ANR	3509590	Statement	","	5321:26:119945:119945	3508080	107	True				
ANR	3509591	Statement	env	5323:6:119960:119962	3508080	108	True				
ANR	3509592	Statement	)	5323:9:119963:119963	3508080	109	True				
ANR	3509593	ExpressionStatement		5323:10:119964:119964	3508080	110	True				
ANR	3509594	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5324:4:119970:119999	3508080	111	True				
ANR	3509595	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3508080	0					
ANR	3509596	Callee	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509597	Identifier	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509598	ArgumentList	* np		3508080	1					
ANR	3509599	Argument	* np		3508080	0					
ANR	3509600	UnaryOperationExpression	* np		3508080	0					
ANR	3509601	UnaryOperator	*		3508080	0					
ANR	3509602	Identifier	np		3508080	1					
ANR	3509603	BreakStatement	break ;	5325:4:120005:120010	3508080	112	True				
ANR	3509604	Label	case TK_CALL :	5328:2:120038:120050	3508080	113	True				
ANR	3509605	Identifier	TK_CALL		3508080	0					
ANR	3509606	CompoundStatement		292:6:7178:7205	3508080	114					
ANR	3509607	IdentifierDeclStatement	int gnum = tok -> u . call . gnum ;	5330:6:120064:120091	3508080	0	True				
ANR	3509608	IdentifierDecl	gnum = tok -> u . call . gnum		3508080	0					
ANR	3509609	IdentifierDeclType	int		3508080	0					
ANR	3509610	Identifier	gnum		3508080	1					
ANR	3509611	AssignmentExpression	gnum = tok -> u . call . gnum		3508080	2		=			
ANR	3509612	Identifier	gnum		3508080	0					
ANR	3509613	MemberAccess	tok -> u . call . gnum		3508080	1					
ANR	3509614	MemberAccess	tok -> u . call		3508080	0					
ANR	3509615	PtrMemberAccess	tok -> u		3508080	0					
ANR	3509616	Identifier	tok		3508080	0					
ANR	3509617	Identifier	u		3508080	1					
ANR	3509618	Identifier	call		3508080	1					
ANR	3509619	Identifier	gnum		3508080	1					
ANR	3509620	IfStatement	if ( gnum < 0 )		3508080	1					
ANR	3509621	Condition	gnum < 0	5332:10:120104:120111	3508080	0	True				
ANR	3509622	RelationalExpression	gnum < 0		3508080	0		<			
ANR	3509623	Identifier	gnum		3508080	0					
ANR	3509624	PrimaryExpression	0		3508080	1					
ANR	3509625	CompoundStatement		294:20:7228:7228	3508080	1					
ANR	3509626	ExpressionStatement	"gnum = BACKREF_REL_TO_ABS ( gnum , env )"	5333:1:120117:120153	3508080	0	True				
ANR	3509627	AssignmentExpression	"gnum = BACKREF_REL_TO_ABS ( gnum , env )"		3508080	0		=			
ANR	3509628	Identifier	gnum		3508080	0					
ANR	3509629	CallExpression	"BACKREF_REL_TO_ABS ( gnum , env )"		3508080	1					
ANR	3509630	Callee	BACKREF_REL_TO_ABS		3508080	0					
ANR	3509631	Identifier	BACKREF_REL_TO_ABS		3508080	0					
ANR	3509632	ArgumentList	gnum		3508080	1					
ANR	3509633	Argument	gnum		3508080	0					
ANR	3509634	Identifier	gnum		3508080	0					
ANR	3509635	Argument	env		3508080	1					
ANR	3509636	Identifier	env		3508080	0					
ANR	3509637	IfStatement	if ( gnum <= 0 )		3508080	1					
ANR	3509638	Condition	gnum <= 0	5334:5:120160:120168	3508080	0	True				
ANR	3509639	RelationalExpression	gnum <= 0		3508080	0		<=			
ANR	3509640	Identifier	gnum		3508080	0					
ANR	3509641	PrimaryExpression	0		3508080	1					
ANR	3509642	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	5335:3:120174:120204	3508080	1	True				
ANR	3509643	Identifier	ONIGERR_INVALID_BACKREF		3508080	0					
ANR	3509644	ExpressionStatement	"* np = node_new_call ( tok -> u . call . name , tok -> u . call . name_end , gnum )"	5337:6:120220:120285	3508080	2	True				
ANR	3509645	AssignmentExpression	"* np = node_new_call ( tok -> u . call . name , tok -> u . call . name_end , gnum )"		3508080	0		=			
ANR	3509646	UnaryOperationExpression	* np		3508080	0					
ANR	3509647	UnaryOperator	*		3508080	0					
ANR	3509648	Identifier	np		3508080	1					
ANR	3509649	CallExpression	"node_new_call ( tok -> u . call . name , tok -> u . call . name_end , gnum )"		3508080	1					
ANR	3509650	Callee	node_new_call		3508080	0					
ANR	3509651	Identifier	node_new_call		3508080	0					
ANR	3509652	ArgumentList	tok -> u . call . name		3508080	1					
ANR	3509653	Argument	tok -> u . call . name		3508080	0					
ANR	3509654	MemberAccess	tok -> u . call . name		3508080	0					
ANR	3509655	MemberAccess	tok -> u . call		3508080	0					
ANR	3509656	PtrMemberAccess	tok -> u		3508080	0					
ANR	3509657	Identifier	tok		3508080	0					
ANR	3509658	Identifier	u		3508080	1					
ANR	3509659	Identifier	call		3508080	1					
ANR	3509660	Identifier	name		3508080	1					
ANR	3509661	Argument	tok -> u . call . name_end		3508080	1					
ANR	3509662	MemberAccess	tok -> u . call . name_end		3508080	0					
ANR	3509663	MemberAccess	tok -> u . call		3508080	0					
ANR	3509664	PtrMemberAccess	tok -> u		3508080	0					
ANR	3509665	Identifier	tok		3508080	0					
ANR	3509666	Identifier	u		3508080	1					
ANR	3509667	Identifier	call		3508080	1					
ANR	3509668	Identifier	name_end		3508080	1					
ANR	3509669	Argument	gnum		3508080	2					
ANR	3509670	Identifier	gnum		3508080	0					
ANR	3509671	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5338:6:120293:120322	3508080	3	True				
ANR	3509672	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		3508080	0					
ANR	3509673	Callee	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509674	Identifier	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509675	ArgumentList	* np		3508080	1					
ANR	3509676	Argument	* np		3508080	0					
ANR	3509677	UnaryOperationExpression	* np		3508080	0					
ANR	3509678	UnaryOperator	*		3508080	0					
ANR	3509679	Identifier	np		3508080	1					
ANR	3509680	ExpressionStatement	env -> num_call ++	5339:6:120330:120345	3508080	4	True				
ANR	3509681	PostIncDecOperationExpression	env -> num_call ++		3508080	0					
ANR	3509682	PtrMemberAccess	env -> num_call		3508080	0					
ANR	3509683	Identifier	env		3508080	0					
ANR	3509684	Identifier	num_call		3508080	1					
ANR	3509685	IncDec	++		3508080	1					
ANR	3509686	BreakStatement	break ;	5341:4:120357:120362	3508080	115	True				
ANR	3509687	Label	case TK_ANCHOR :	5344:2:120374:120388	3508080	116	True				
ANR	3509688	Identifier	TK_ANCHOR		3508080	0					
ANR	3509689	ExpressionStatement	* np = onig_node_new_anchor ( tok -> u . anchor )	5345:4:120394:120435	3508080	117	True				
ANR	3509690	AssignmentExpression	* np = onig_node_new_anchor ( tok -> u . anchor )		3508080	0		=			
ANR	3509691	UnaryOperationExpression	* np		3508080	0					
ANR	3509692	UnaryOperator	*		3508080	0					
ANR	3509693	Identifier	np		3508080	1					
ANR	3509694	CallExpression	onig_node_new_anchor ( tok -> u . anchor )		3508080	1					
ANR	3509695	Callee	onig_node_new_anchor		3508080	0					
ANR	3509696	Identifier	onig_node_new_anchor		3508080	0					
ANR	3509697	ArgumentList	tok -> u . anchor		3508080	1					
ANR	3509698	Argument	tok -> u . anchor		3508080	0					
ANR	3509699	MemberAccess	tok -> u . anchor		3508080	0					
ANR	3509700	PtrMemberAccess	tok -> u		3508080	0					
ANR	3509701	Identifier	tok		3508080	0					
ANR	3509702	Identifier	u		3508080	1					
ANR	3509703	Identifier	anchor		3508080	1					
ANR	3509704	BreakStatement	break ;	5346:4:120441:120446	3508080	118	True				
ANR	3509705	Label	case TK_OP_REPEAT :	5348:2:120451:120468	3508080	119	True				
ANR	3509706	Identifier	TK_OP_REPEAT		3508080	0					
ANR	3509707	Label	case TK_INTERVAL :	5349:2:120472:120488	3508080	120	True				
ANR	3509708	Identifier	TK_INTERVAL		3508080	0					
ANR	3509709	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS ) )"		3508080	121					
ANR	3509710	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS )"	5350:8:120498:120557	3508080	0	True				
ANR	3509711	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS )"		3508080	0					
ANR	3509712	Callee	IS_SYNTAX_BV		3508080	0					
ANR	3509713	Identifier	IS_SYNTAX_BV		3508080	0					
ANR	3509714	ArgumentList	env -> syntax		3508080	1					
ANR	3509715	Argument	env -> syntax		3508080	0					
ANR	3509716	PtrMemberAccess	env -> syntax		3508080	0					
ANR	3509717	Identifier	env		3508080	0					
ANR	3509718	Identifier	syntax		3508080	1					
ANR	3509719	Argument	ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS		3508080	1					
ANR	3509720	Identifier	ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS		3508080	0					
ANR	3509721	CompoundStatement		312:70:7674:7674	3508080	1					
ANR	3509722	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS ) )"		3508080	0					
ANR	3509723	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS )"	5351:10:120572:120633	3508080	0	True				
ANR	3509724	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS )"		3508080	0					
ANR	3509725	Callee	IS_SYNTAX_BV		3508080	0					
ANR	3509726	Identifier	IS_SYNTAX_BV		3508080	0					
ANR	3509727	ArgumentList	env -> syntax		3508080	1					
ANR	3509728	Argument	env -> syntax		3508080	0					
ANR	3509729	PtrMemberAccess	env -> syntax		3508080	0					
ANR	3509730	Identifier	env		3508080	0					
ANR	3509731	Identifier	syntax		3508080	1					
ANR	3509732	Argument	ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS		3508080	1					
ANR	3509733	Identifier	ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS		3508080	0					
ANR	3509734	ReturnStatement	return ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED ;	5352:1:120637:120691	3508080	1	True				
ANR	3509735	Identifier	ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED		3508080	0					
ANR	3509736	ElseStatement	else		3508080	0					
ANR	3509737	ExpressionStatement	* np = node_new_empty ( )	5354:1:120705:120727	3508080	0	True				
ANR	3509738	AssignmentExpression	* np = node_new_empty ( )		3508080	0		=			
ANR	3509739	UnaryOperationExpression	* np		3508080	0					
ANR	3509740	UnaryOperator	*		3508080	0					
ANR	3509741	Identifier	np		3508080	1					
ANR	3509742	CallExpression	node_new_empty ( )		3508080	1					
ANR	3509743	Callee	node_new_empty		3508080	0					
ANR	3509744	Identifier	node_new_empty		3508080	0					
ANR	3509745	ArgumentList			3508080	1					
ANR	3509746	ElseStatement	else		3508080	0					
ANR	3509747	CompoundStatement		318:9:7858:7858	3508080	0					
ANR	3509748	GotoStatement	goto tk_byte ;	5357:6:120752:120764	3508080	0	True				
ANR	3509749	Identifier	tk_byte		3508080	0					
ANR	3509750	BreakStatement	break ;	5359:4:120776:120781	3508080	122	True				
ANR	3509751	Label	default :	5361:2:120786:120793	3508080	123	True				
ANR	3509752	Identifier	default		3508080	0					
ANR	3509753	ReturnStatement	return ONIGERR_PARSER_BUG ;	5362:4:120799:120824	3508080	124	True				
ANR	3509754	Identifier	ONIGERR_PARSER_BUG		3508080	0					
ANR	3509755	BreakStatement	break ;	5363:4:120830:120835	3508080	125	True				
ANR	3509756	CompoundStatement		328:2:7958:7958	3508080	6					
ANR	3509757	ExpressionStatement	targetp = np	5367:4:120850:120862	3508080	0	True				
ANR	3509758	AssignmentExpression	targetp = np		3508080	0		=			
ANR	3509759	Identifier	targetp		3508080	0					
ANR	3509760	Identifier	np		3508080	1					
ANR	3509761	Label	re_entry :	5369:2:120867:120875	3508080	1	True				
ANR	3509762	Identifier	re_entry		3508080	0					
ANR	3509763	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5370:4:120881:120916	3508080	2	True				
ANR	3509764	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		3508080	0		=			
ANR	3509765	Identifier	r		3508080	0					
ANR	3509766	CallExpression	"fetch_token ( tok , src , end , env )"		3508080	1					
ANR	3509767	Callee	fetch_token		3508080	0					
ANR	3509768	Identifier	fetch_token		3508080	0					
ANR	3509769	ArgumentList	tok		3508080	1					
ANR	3509770	Argument	tok		3508080	0					
ANR	3509771	Identifier	tok		3508080	0					
ANR	3509772	Argument	src		3508080	1					
ANR	3509773	Identifier	src		3508080	0					
ANR	3509774	Argument	end		3508080	2					
ANR	3509775	Identifier	end		3508080	0					
ANR	3509776	Argument	env		3508080	3					
ANR	3509777	Identifier	env		3508080	0					
ANR	3509778	IfStatement	if ( r < 0 )		3508080	3					
ANR	3509779	Condition	r < 0	5371:8:120926:120930	3508080	0	True				
ANR	3509780	RelationalExpression	r < 0		3508080	0		<			
ANR	3509781	Identifier	r		3508080	0					
ANR	3509782	PrimaryExpression	0		3508080	1					
ANR	3509783	ReturnStatement	return r ;	5371:15:120933:120941	3508080	1	True				
ANR	3509784	Identifier	r		3508080	0					
ANR	3509785	Label	repeat :	5373:2:120946:120952	3508080	4	True				
ANR	3509786	Identifier	repeat		3508080	0					
ANR	3509787	IfStatement	if ( r == TK_OP_REPEAT || r == TK_INTERVAL )		3508080	5					
ANR	3509788	Condition	r == TK_OP_REPEAT || r == TK_INTERVAL	5374:8:120962:120998	3508080	0	True				
ANR	3509789	OrExpression	r == TK_OP_REPEAT || r == TK_INTERVAL		3508080	0		||			
ANR	3509790	EqualityExpression	r == TK_OP_REPEAT		3508080	0		==			
ANR	3509791	Identifier	r		3508080	0					
ANR	3509792	Identifier	TK_OP_REPEAT		3508080	1					
ANR	3509793	EqualityExpression	r == TK_INTERVAL		3508080	1		==			
ANR	3509794	Identifier	r		3508080	0					
ANR	3509795	Identifier	TK_INTERVAL		3508080	1					
ANR	3509796	CompoundStatement		336:47:8115:8115	3508080	1					
ANR	3509797	IfStatement	if ( is_invalid_quantifier_target ( * targetp ) )		3508080	0					
ANR	3509798	Condition	is_invalid_quantifier_target ( * targetp )	5375:10:121013:121050	3508080	0	True				
ANR	3509799	CallExpression	is_invalid_quantifier_target ( * targetp )		3508080	0					
ANR	3509800	Callee	is_invalid_quantifier_target		3508080	0					
ANR	3509801	Identifier	is_invalid_quantifier_target		3508080	0					
ANR	3509802	ArgumentList	* targetp		3508080	1					
ANR	3509803	Argument	* targetp		3508080	0					
ANR	3509804	UnaryOperationExpression	* targetp		3508080	0					
ANR	3509805	UnaryOperator	*		3508080	0					
ANR	3509806	Identifier	targetp		3508080	1					
ANR	3509807	ReturnStatement	return ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID ;	5376:1:121054:121102	3508080	1	True				
ANR	3509808	Identifier	ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID		3508080	0					
ANR	3509809	ExpressionStatement	"qn = node_new_quantifier ( tok -> u . repeat . lower , tok -> u . repeat . upper , ( r == TK_INTERVAL ? 1 : 0 ) )"	5378:6:121111:121215	3508080	1	True				
ANR	3509810	AssignmentExpression	"qn = node_new_quantifier ( tok -> u . repeat . lower , tok -> u . repeat . upper , ( r == TK_INTERVAL ? 1 : 0 ) )"		3508080	0		=			
ANR	3509811	Identifier	qn		3508080	0					
ANR	3509812	CallExpression	"node_new_quantifier ( tok -> u . repeat . lower , tok -> u . repeat . upper , ( r == TK_INTERVAL ? 1 : 0 ) )"		3508080	1					
ANR	3509813	Callee	node_new_quantifier		3508080	0					
ANR	3509814	Identifier	node_new_quantifier		3508080	0					
ANR	3509815	ArgumentList	tok -> u . repeat . lower		3508080	1					
ANR	3509816	Argument	tok -> u . repeat . lower		3508080	0					
ANR	3509817	MemberAccess	tok -> u . repeat . lower		3508080	0					
ANR	3509818	MemberAccess	tok -> u . repeat		3508080	0					
ANR	3509819	PtrMemberAccess	tok -> u		3508080	0					
ANR	3509820	Identifier	tok		3508080	0					
ANR	3509821	Identifier	u		3508080	1					
ANR	3509822	Identifier	repeat		3508080	1					
ANR	3509823	Identifier	lower		3508080	1					
ANR	3509824	Argument	tok -> u . repeat . upper		3508080	1					
ANR	3509825	MemberAccess	tok -> u . repeat . upper		3508080	0					
ANR	3509826	MemberAccess	tok -> u . repeat		3508080	0					
ANR	3509827	PtrMemberAccess	tok -> u		3508080	0					
ANR	3509828	Identifier	tok		3508080	0					
ANR	3509829	Identifier	u		3508080	1					
ANR	3509830	Identifier	repeat		3508080	1					
ANR	3509831	Identifier	upper		3508080	1					
ANR	3509832	Argument	r == TK_INTERVAL ? 1 : 0		3508080	2					
ANR	3509833	ConditionalExpression	r == TK_INTERVAL ? 1 : 0		3508080	0					
ANR	3509834	Condition	r == TK_INTERVAL		3508080	0					
ANR	3509835	EqualityExpression	r == TK_INTERVAL		3508080	0		==			
ANR	3509836	Identifier	r		3508080	0					
ANR	3509837	Identifier	TK_INTERVAL		3508080	1					
ANR	3509838	PrimaryExpression	1		3508080	1					
ANR	3509839	PrimaryExpression	0		3508080	2					
ANR	3509840	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( qn )	5380:6:121223:121251	3508080	2	True				
ANR	3509841	CallExpression	CHECK_NULL_RETURN_MEMERR ( qn )		3508080	0					
ANR	3509842	Callee	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509843	Identifier	CHECK_NULL_RETURN_MEMERR		3508080	0					
ANR	3509844	ArgumentList	qn		3508080	1					
ANR	3509845	Argument	qn		3508080	0					
ANR	3509846	Identifier	qn		3508080	0					
ANR	3509847	ExpressionStatement	NQTFR ( qn ) -> greedy = tok -> u . repeat . greedy	5381:6:121259:121299	3508080	3	True				
ANR	3509848	AssignmentExpression	NQTFR ( qn ) -> greedy = tok -> u . repeat . greedy		3508080	0		=			
ANR	3509849	PtrMemberAccess	NQTFR ( qn ) -> greedy		3508080	0					
ANR	3509850	CallExpression	NQTFR ( qn )		3508080	0					
ANR	3509851	Callee	NQTFR		3508080	0					
ANR	3509852	Identifier	NQTFR		3508080	0					
ANR	3509853	ArgumentList	qn		3508080	1					
ANR	3509854	Argument	qn		3508080	0					
ANR	3509855	Identifier	qn		3508080	0					
ANR	3509856	Identifier	greedy		3508080	1					
ANR	3509857	MemberAccess	tok -> u . repeat . greedy		3508080	1					
ANR	3509858	MemberAccess	tok -> u . repeat		3508080	0					
ANR	3509859	PtrMemberAccess	tok -> u		3508080	0					
ANR	3509860	Identifier	tok		3508080	0					
ANR	3509861	Identifier	u		3508080	1					
ANR	3509862	Identifier	repeat		3508080	1					
ANR	3509863	Identifier	greedy		3508080	1					
ANR	3509864	ExpressionStatement	"r = set_quantifier ( qn , * targetp , group , env )"	5382:6:121307:121351	3508080	4	True				
ANR	3509865	AssignmentExpression	"r = set_quantifier ( qn , * targetp , group , env )"		3508080	0		=			
ANR	3509866	Identifier	r		3508080	0					
ANR	3509867	CallExpression	"set_quantifier ( qn , * targetp , group , env )"		3508080	1					
ANR	3509868	Callee	set_quantifier		3508080	0					
ANR	3509869	Identifier	set_quantifier		3508080	0					
ANR	3509870	ArgumentList	qn		3508080	1					
ANR	3509871	Argument	qn		3508080	0					
ANR	3509872	Identifier	qn		3508080	0					
ANR	3509873	Argument	* targetp		3508080	1					
ANR	3509874	UnaryOperationExpression	* targetp		3508080	0					
ANR	3509875	UnaryOperator	*		3508080	0					
ANR	3509876	Identifier	targetp		3508080	1					
ANR	3509877	Argument	group		3508080	2					
ANR	3509878	Identifier	group		3508080	0					
ANR	3509879	Argument	env		3508080	3					
ANR	3509880	Identifier	env		3508080	0					
ANR	3509881	IfStatement	if ( r < 0 )		3508080	5					
ANR	3509882	Condition	r < 0	5383:10:121363:121367	3508080	0	True				
ANR	3509883	RelationalExpression	r < 0		3508080	0		<			
ANR	3509884	Identifier	r		3508080	0					
ANR	3509885	PrimaryExpression	0		3508080	1					
ANR	3509886	CompoundStatement		345:17:8484:8484	3508080	1					
ANR	3509887	ExpressionStatement	onig_node_free ( qn )	5384:1:121373:121391	3508080	0	True				
ANR	3509888	CallExpression	onig_node_free ( qn )		3508080	0					
ANR	3509889	Callee	onig_node_free		3508080	0					
ANR	3509890	Identifier	onig_node_free		3508080	0					
ANR	3509891	ArgumentList	qn		3508080	1					
ANR	3509892	Argument	qn		3508080	0					
ANR	3509893	Identifier	qn		3508080	0					
ANR	3509894	ReturnStatement	return r ;	5385:1:121394:121402	3508080	1	True				
ANR	3509895	Identifier	r		3508080	0					
ANR	3509896	IfStatement	if ( tok -> u . repeat . possessive != 0 )		3508080	6					
ANR	3509897	Condition	tok -> u . repeat . possessive != 0	5388:10:121423:121451	3508080	0	True				
ANR	3509898	EqualityExpression	tok -> u . repeat . possessive != 0		3508080	0		!=			
ANR	3509899	MemberAccess	tok -> u . repeat . possessive		3508080	0					
ANR	3509900	MemberAccess	tok -> u . repeat		3508080	0					
ANR	3509901	PtrMemberAccess	tok -> u		3508080	0					
ANR	3509902	Identifier	tok		3508080	0					
ANR	3509903	Identifier	u		3508080	1					
ANR	3509904	Identifier	repeat		3508080	1					
ANR	3509905	Identifier	possessive		3508080	1					
ANR	3509906	PrimaryExpression	0		3508080	1					
ANR	3509907	CompoundStatement		351:1:8571:8579	3508080	1					
ANR	3509908	IdentifierDeclStatement	Node * en ;	5389:1:121457:121465	3508080	0	True				
ANR	3509909	IdentifierDecl	* en		3508080	0					
ANR	3509910	IdentifierDeclType	Node *		3508080	0					
ANR	3509911	Identifier	en		3508080	1					
ANR	3509912	ExpressionStatement	en = node_new_enclose ( ENCLOSE_STOP_BACKTRACK )	5390:1:121468:121513	3508080	1	True				
ANR	3509913	AssignmentExpression	en = node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		3508080	0		=			
ANR	3509914	Identifier	en		3508080	0					
ANR	3509915	CallExpression	node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		3508080	1					
ANR	3509916	Callee	node_new_enclose		3508080	0					
ANR	3509917	Identifier	node_new_enclose		3508080	0					
ANR	3509918	ArgumentList	ENCLOSE_STOP_BACKTRACK		3508080	1					
ANR	3509919	Argument	ENCLOSE_STOP_BACKTRACK		3508080	0					
ANR	3509920	Identifier	ENCLOSE_STOP_BACKTRACK		3508080	0					
ANR	3509921	IfStatement	if ( IS_NULL ( en ) )		3508080	2					
ANR	3509922	Condition	IS_NULL ( en )	5391:5:121520:121530	3508080	0	True				
ANR	3509923	CallExpression	IS_NULL ( en )		3508080	0					
ANR	3509924	Callee	IS_NULL		3508080	0					
ANR	3509925	Identifier	IS_NULL		3508080	0					
ANR	3509926	ArgumentList	en		3508080	1					
ANR	3509927	Argument	en		3508080	0					
ANR	3509928	Identifier	en		3508080	0					
ANR	3509929	CompoundStatement		353:18:8647:8647	3508080	1					
ANR	3509930	ExpressionStatement	onig_node_free ( qn )	5392:3:121538:121556	3508080	0	True				
ANR	3509931	CallExpression	onig_node_free ( qn )		3508080	0					
ANR	3509932	Callee	onig_node_free		3508080	0					
ANR	3509933	Identifier	onig_node_free		3508080	0					
ANR	3509934	ArgumentList	qn		3508080	1					
ANR	3509935	Argument	qn		3508080	0					
ANR	3509936	Identifier	qn		3508080	0					
ANR	3509937	ReturnStatement	return ONIGERR_MEMORY ;	5393:3:121561:121582	3508080	1	True				
ANR	3509938	Identifier	ONIGERR_MEMORY		3508080	0					
ANR	3509939	ExpressionStatement	NENCLOSE ( en ) -> target = qn	5395:1:121588:121613	3508080	3	True				
ANR	3509940	AssignmentExpression	NENCLOSE ( en ) -> target = qn		3508080	0		=			
ANR	3509941	PtrMemberAccess	NENCLOSE ( en ) -> target		3508080	0					
ANR	3509942	CallExpression	NENCLOSE ( en )		3508080	0					
ANR	3509943	Callee	NENCLOSE		3508080	0					
ANR	3509944	Identifier	NENCLOSE		3508080	0					
ANR	3509945	ArgumentList	en		3508080	1					
ANR	3509946	Argument	en		3508080	0					
ANR	3509947	Identifier	en		3508080	0					
ANR	3509948	Identifier	target		3508080	1					
ANR	3509949	Identifier	qn		3508080	1					
ANR	3509950	ExpressionStatement	qn = en	5396:1:121616:121623	3508080	4	True				
ANR	3509951	AssignmentExpression	qn = en		3508080	0		=			
ANR	3509952	Identifier	qn		3508080	0					
ANR	3509953	Identifier	en		3508080	1					
ANR	3509954	IfStatement	if ( r == 0 )		3508080	7					
ANR	3509955	Condition	r == 0	5399:10:121644:121649	3508080	0	True				
ANR	3509956	EqualityExpression	r == 0		3508080	0		==			
ANR	3509957	Identifier	r		3508080	0					
ANR	3509958	PrimaryExpression	0		3508080	1					
ANR	3509959	CompoundStatement		361:18:8766:8766	3508080	1					
ANR	3509960	ExpressionStatement	* targetp = qn	5400:1:121655:121668	3508080	0	True				
ANR	3509961	AssignmentExpression	* targetp = qn		3508080	0		=			
ANR	3509962	UnaryOperationExpression	* targetp		3508080	0					
ANR	3509963	UnaryOperator	*		3508080	0					
ANR	3509964	Identifier	targetp		3508080	1					
ANR	3509965	Identifier	qn		3508080	1					
ANR	3509966	ElseStatement	else		3508080	0					
ANR	3509967	IfStatement	if ( r == 1 )		3508080	0					
ANR	3509968	Condition	r == 1	5402:15:121693:121698	3508080	0	True				
ANR	3509969	EqualityExpression	r == 1		3508080	0		==			
ANR	3509970	Identifier	r		3508080	0					
ANR	3509971	PrimaryExpression	1		3508080	1					
ANR	3509972	CompoundStatement		364:23:8815:8815	3508080	1					
ANR	3509973	ExpressionStatement	onig_node_free ( qn )	5403:1:121704:121722	3508080	0	True				
ANR	3509974	CallExpression	onig_node_free ( qn )		3508080	0					
ANR	3509975	Callee	onig_node_free		3508080	0					
ANR	3509976	Identifier	onig_node_free		3508080	0					
ANR	3509977	ArgumentList	qn		3508080	1					
ANR	3509978	Argument	qn		3508080	0					
ANR	3509979	Identifier	qn		3508080	0					
ANR	3509980	ElseStatement	else		3508080	0					
ANR	3509981	IfStatement	if ( r == 2 )		3508080	0					
ANR	3509982	Condition	r == 2	5405:15:121747:121752	3508080	0	True				
ANR	3509983	EqualityExpression	r == 2		3508080	0		==			
ANR	3509984	Identifier	r		3508080	0					
ANR	3509985	PrimaryExpression	2		3508080	1					
ANR	3509986	CompoundStatement		368:1:8897:8906	3508080	1					
ANR	3509987	IdentifierDeclStatement	Node * tmp ;	5406:1:121783:121792	3508080	0	True				
ANR	3509988	IdentifierDecl	* tmp		3508080	0					
ANR	3509989	IdentifierDeclType	Node *		3508080	0					
ANR	3509990	Identifier	tmp		3508080	1					
ANR	3509991	ExpressionStatement	"* targetp = node_new_list ( * targetp , NULL )"	5408:1:121796:121836	3508080	1	True				
ANR	3509992	AssignmentExpression	"* targetp = node_new_list ( * targetp , NULL )"		3508080	0		=			
ANR	3509993	UnaryOperationExpression	* targetp		3508080	0					
ANR	3509994	UnaryOperator	*		3508080	0					
ANR	3509995	Identifier	targetp		3508080	1					
ANR	3509996	CallExpression	"node_new_list ( * targetp , NULL )"		3508080	1					
ANR	3509997	Callee	node_new_list		3508080	0					
ANR	3509998	Identifier	node_new_list		3508080	0					
ANR	3509999	ArgumentList	* targetp		3508080	1					
ANR	3510000	Argument	* targetp		3508080	0					
ANR	3510001	UnaryOperationExpression	* targetp		3508080	0					
ANR	3510002	UnaryOperator	*		3508080	0					
ANR	3510003	Identifier	targetp		3508080	1					
ANR	3510004	Argument	NULL		3508080	1					
ANR	3510005	Identifier	NULL		3508080	0					
ANR	3510006	IfStatement	if ( IS_NULL ( * targetp ) )		3508080	2					
ANR	3510007	Condition	IS_NULL ( * targetp )	5409:5:121843:121859	3508080	0	True				
ANR	3510008	CallExpression	IS_NULL ( * targetp )		3508080	0					
ANR	3510009	Callee	IS_NULL		3508080	0					
ANR	3510010	Identifier	IS_NULL		3508080	0					
ANR	3510011	ArgumentList	* targetp		3508080	1					
ANR	3510012	Argument	* targetp		3508080	0					
ANR	3510013	UnaryOperationExpression	* targetp		3508080	0					
ANR	3510014	UnaryOperator	*		3508080	0					
ANR	3510015	Identifier	targetp		3508080	1					
ANR	3510016	CompoundStatement		371:24:8976:8976	3508080	1					
ANR	3510017	ExpressionStatement	onig_node_free ( qn )	5410:3:121867:121885	3508080	0	True				
ANR	3510018	CallExpression	onig_node_free ( qn )		3508080	0					
ANR	3510019	Callee	onig_node_free		3508080	0					
ANR	3510020	Identifier	onig_node_free		3508080	0					
ANR	3510021	ArgumentList	qn		3508080	1					
ANR	3510022	Argument	qn		3508080	0					
ANR	3510023	Identifier	qn		3508080	0					
ANR	3510024	ReturnStatement	return ONIGERR_MEMORY ;	5411:3:121890:121911	3508080	1	True				
ANR	3510025	Identifier	ONIGERR_MEMORY		3508080	0					
ANR	3510026	ExpressionStatement	"tmp = NCDR ( * targetp ) = node_new_list ( qn , NULL )"	5413:1:121917:121963	3508080	3	True				
ANR	3510027	AssignmentExpression	"tmp = NCDR ( * targetp ) = node_new_list ( qn , NULL )"		3508080	0		=			
ANR	3510028	Identifier	tmp		3508080	0					
ANR	3510029	AssignmentExpression	"NCDR ( * targetp ) = node_new_list ( qn , NULL )"		3508080	1		=			
ANR	3510030	CallExpression	NCDR ( * targetp )		3508080	0					
ANR	3510031	Callee	NCDR		3508080	0					
ANR	3510032	Identifier	NCDR		3508080	0					
ANR	3510033	ArgumentList	* targetp		3508080	1					
ANR	3510034	Argument	* targetp		3508080	0					
ANR	3510035	UnaryOperationExpression	* targetp		3508080	0					
ANR	3510036	UnaryOperator	*		3508080	0					
ANR	3510037	Identifier	targetp		3508080	1					
ANR	3510038	CallExpression	"node_new_list ( qn , NULL )"		3508080	1					
ANR	3510039	Callee	node_new_list		3508080	0					
ANR	3510040	Identifier	node_new_list		3508080	0					
ANR	3510041	ArgumentList	qn		3508080	1					
ANR	3510042	Argument	qn		3508080	0					
ANR	3510043	Identifier	qn		3508080	0					
ANR	3510044	Argument	NULL		3508080	1					
ANR	3510045	Identifier	NULL		3508080	0					
ANR	3510046	IfStatement	if ( IS_NULL ( tmp ) )		3508080	4					
ANR	3510047	Condition	IS_NULL ( tmp )	5414:5:121970:121981	3508080	0	True				
ANR	3510048	CallExpression	IS_NULL ( tmp )		3508080	0					
ANR	3510049	Callee	IS_NULL		3508080	0					
ANR	3510050	Identifier	IS_NULL		3508080	0					
ANR	3510051	ArgumentList	tmp		3508080	1					
ANR	3510052	Argument	tmp		3508080	0					
ANR	3510053	Identifier	tmp		3508080	0					
ANR	3510054	CompoundStatement		376:19:9098:9098	3508080	1					
ANR	3510055	ExpressionStatement	onig_node_free ( qn )	5415:3:121989:122007	3508080	0	True				
ANR	3510056	CallExpression	onig_node_free ( qn )		3508080	0					
ANR	3510057	Callee	onig_node_free		3508080	0					
ANR	3510058	Identifier	onig_node_free		3508080	0					
ANR	3510059	ArgumentList	qn		3508080	1					
ANR	3510060	Argument	qn		3508080	0					
ANR	3510061	Identifier	qn		3508080	0					
ANR	3510062	ReturnStatement	return ONIGERR_MEMORY ;	5416:3:122012:122033	3508080	1	True				
ANR	3510063	Identifier	ONIGERR_MEMORY		3508080	0					
ANR	3510064	ExpressionStatement	targetp = & ( NCAR ( tmp ) )	5418:1:122039:122061	3508080	5	True				
ANR	3510065	AssignmentExpression	targetp = & ( NCAR ( tmp ) )		3508080	0		=			
ANR	3510066	Identifier	targetp		3508080	0					
ANR	3510067	UnaryOperationExpression	& ( NCAR ( tmp ) )		3508080	1					
ANR	3510068	UnaryOperator	&		3508080	0					
ANR	3510069	CallExpression	NCAR ( tmp )		3508080	1					
ANR	3510070	Callee	NCAR		3508080	0					
ANR	3510071	Identifier	NCAR		3508080	0					
ANR	3510072	ArgumentList	tmp		3508080	1					
ANR	3510073	Argument	tmp		3508080	0					
ANR	3510074	Identifier	tmp		3508080	0					
ANR	3510075	GotoStatement	goto re_entry ;	5420:6:122077:122090	3508080	8	True				
ANR	3510076	Identifier	re_entry		3508080	0					
ANR	3510077	ReturnStatement	return r ;	5424:2:122105:122113	3508080	7	True				
ANR	3510078	Identifier	r		3508080	0					
ANR	3510079	ReturnType	static int		3508080	1					
ANR	3510080	Identifier	parse_exp		3508080	2					
ANR	3510081	ParameterList	"Node * * np , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env"		3508080	3					
ANR	3510082	Parameter	Node * * np	5037:10:112806:112814	3508080	0	True				
ANR	3510083	ParameterType	Node * *		3508080	0					
ANR	3510084	Identifier	np		3508080	1					
ANR	3510085	Parameter	OnigToken * tok	5037:21:112817:112830	3508080	1	True				
ANR	3510086	ParameterType	OnigToken *		3508080	0					
ANR	3510087	Identifier	tok		3508080	1					
ANR	3510088	Parameter	int term	5037:37:112833:112840	3508080	2	True				
ANR	3510089	ParameterType	int		3508080	0					
ANR	3510090	Identifier	term		3508080	1					
ANR	3510091	Parameter	UChar * * src	5038:3:112846:112856	3508080	3	True				
ANR	3510092	ParameterType	UChar * *		3508080	0					
ANR	3510093	Identifier	src		3508080	1					
ANR	3510094	Parameter	UChar * end	5038:16:112859:112868	3508080	4	True				
ANR	3510095	ParameterType	UChar *		3508080	0					
ANR	3510096	Identifier	end		3508080	1					
ANR	3510097	Parameter	ScanEnv * env	5038:28:112871:112882	3508080	5	True				
ANR	3510098	ParameterType	ScanEnv *		3508080	0					
ANR	3510099	Identifier	env		3508080	1					
ANR	3510100	CFGEntryNode	ENTRY		3508080		True				
ANR	3510101	CFGExitNode	EXIT		3508080		True				
ANR	3510102	Symbol	iarg . cc		3508080						
ANR	3510103	Symbol	node_new_quantifier		3508080						
ANR	3510104	Symbol	node_new_cclass		3508080						
ANR	3510105	Symbol	prev		3508080						
ANR	3510106	Symbol	NQTFR		3508080						
ANR	3510107	Symbol	parse_char_class		3508080						
ANR	3510108	Symbol	tok -> type		3508080						
ANR	3510109	Symbol	len		3508080						
ANR	3510110	Symbol	TK_INTERVAL		3508080						
ANR	3510111	Symbol	xmalloc		3508080						
ANR	3510112	Symbol	tmp		3508080						
ANR	3510113	Symbol	BACKREF_REL_TO_ABS		3508080						
ANR	3510114	Symbol	find_str_position		3508080						
ANR	3510115	Symbol	iarg . alt_root		3508080						
ANR	3510116	Symbol	parse_subexp		3508080						
ANR	3510117	Symbol	qn		3508080						
ANR	3510118	Symbol	tok -> escaped		3508080						
ANR	3510119	Symbol	ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED		3508080						
ANR	3510120	Symbol	node_new_call		3508080						
ANR	3510121	Symbol	work		3508080						
ANR	3510122	Symbol	NSTR		3508080						
ANR	3510123	Symbol	THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS		3508080						
ANR	3510124	Symbol	NCDR		3508080						
ANR	3510125	Symbol	ONIGERR_MEMORY		3508080						
ANR	3510126	Symbol	ONIGENC_APPLY_ALL_CASE_FOLD		3508080						
ANR	3510127	Symbol	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		3508080						
ANR	3510128	Symbol	* end_op		3508080						
ANR	3510129	Symbol	env -> num_call		3508080						
ANR	3510130	Symbol	* tok		3508080						
ANR	3510131	Symbol	iarg . ptail		3508080						
ANR	3510132	Symbol	onig_node_new_anchor		3508080						
ANR	3510133	Symbol	tok -> u . c		3508080						
ANR	3510134	Symbol	node_new_str_raw		3508080						
ANR	3510135	Symbol	new_key		3508080						
ANR	3510136	Symbol	iarg . env		3508080						
ANR	3510137	Symbol	& key		3508080						
ANR	3510138	Symbol	tok -> u . call . name		3508080						
ANR	3510139	Symbol	ONIGENC_MBC_MINLEN		3508080						
ANR	3510140	Symbol	env -> enc		3508080						
ANR	3510141	Symbol	node_new_enclose		3508080						
ANR	3510142	Symbol	tok		3508080						
ANR	3510143	Symbol	tok -> u . code		3508080						
ANR	3510144	Symbol	end_op		3508080						
ANR	3510145	Symbol	parse_char_property		3508080						
ANR	3510146	Symbol	REPEAT_INFINITE		3508080						
ANR	3510147	Symbol	parse_enclose		3508080						
ANR	3510148	Symbol	NENCLOSE		3508080						
ANR	3510149	Symbol	tok -> u . anchor		3508080						
ANR	3510150	Symbol	term		3508080						
ANR	3510151	Symbol	& iarg . alt_root		3508080						
ANR	3510152	Symbol	fetch_token		3508080						
ANR	3510153	Symbol	key		3508080						
ANR	3510154	Symbol	cc		3508080						
ANR	3510155	Symbol	& nextp		3508080						
ANR	3510156	Symbol	node_new_list		3508080						
ANR	3510157	Symbol	tok -> backp		3508080						
ANR	3510158	Symbol	NENCLOSE ( en ) -> target		3508080						
ANR	3510159	Symbol	* np		3508080						
ANR	3510160	Symbol	node_new_str		3508080						
ANR	3510161	Symbol	enclen		3508080						
ANR	3510162	Symbol	MC_ESC		3508080						
ANR	3510163	Symbol	NQTFR ( qn ) -> target		3508080						
ANR	3510164	Symbol	r		3508080						
ANR	3510165	Symbol	buf		3508080						
ANR	3510166	Symbol	ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS		3508080						
ANR	3510167	Symbol	ONIGERR_UNMATCHED_CLOSE_PARENTHESIS		3508080						
ANR	3510168	Symbol	TK_SUBEXP_CLOSE		3508080						
ANR	3510169	Symbol	ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID		3508080						
ANR	3510170	Symbol	ONIGENC_CODE_RANGE_NUM		3508080						
ANR	3510171	Symbol	IS_IGNORECASE		3508080						
ANR	3510172	Symbol	env -> case_fold_flag		3508080						
ANR	3510173	Symbol	& target		3508080						
ANR	3510174	Symbol	NENCLOSE ( * np ) -> target		3508080						
ANR	3510175	Symbol	mbr		3508080						
ANR	3510176	Symbol	iarg		3508080						
ANR	3510177	Symbol	tok -> u . repeat . possessive		3508080						
ANR	3510178	Symbol	num		3508080						
ANR	3510179	Symbol	tok -> u . call . gnum		3508080						
ANR	3510180	Symbol	NCCLASS		3508080						
ANR	3510181	Symbol	* src		3508080						
ANR	3510182	Symbol	gnum		3508080						
ANR	3510183	Symbol	env -> option		3508080						
ANR	3510184	Symbol	sb_out		3508080						
ANR	3510185	Symbol	key . enc		3508080						
ANR	3510186	Symbol	NENCLOSE ( * np ) -> option		3508080						
ANR	3510187	Symbol	tok -> u . prop . not		3508080						
ANR	3510188	Symbol	key . not		3508080						
ANR	3510189	Symbol	IS_SYNTAX_BV		3508080						
ANR	3510190	Symbol	rem		3508080						
ANR	3510191	Symbol	& sb_out		3508080						
ANR	3510192	Symbol	TK_STRING		3508080						
ANR	3510193	Symbol	tok -> u . prop		3508080						
ANR	3510194	Symbol	node_new_anychar		3508080						
ANR	3510195	Symbol	group		3508080						
ANR	3510196	Symbol	NULL		3508080						
ANR	3510197	Symbol	& mbr		3508080						
ANR	3510198	Symbol	TK_OP_REPEAT		3508080						
ANR	3510199	Symbol	* targetp		3508080						
ANR	3510200	Symbol	ENCLOSE_STOP_BACKTRACK		3508080						
ANR	3510201	Symbol	* env		3508080						
ANR	3510202	Symbol	en		3508080						
ANR	3510203	Symbol	* NSTR		3508080						
ANR	3510204	Symbol	key . type		3508080						
ANR	3510205	Symbol	env -> syntax		3508080						
ANR	3510206	Symbol	ONIGERR_PARSER_BUG		3508080						
ANR	3510207	Symbol	onig_st_init_table_with_size		3508080						
ANR	3510208	Symbol	targetp		3508080						
ANR	3510209	Symbol	is_invalid_quantifier_target		3508080						
ANR	3510210	Symbol	node_new_str_raw_char		3508080						
ANR	3510211	Symbol	ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP		3508080						
ANR	3510212	Symbol	ONIGENC_CODE_TO_MBC		3508080						
ANR	3510213	Symbol	set_quantifier		3508080						
ANR	3510214	Symbol	NQTFR ( qn ) -> greedy		3508080						
ANR	3510215	Symbol	NULL_NODE		3508080						
ANR	3510216	Symbol	tok -> u . repeat . greedy		3508080						
ANR	3510217	Symbol	np		3508080						
ANR	3510218	Symbol	IS_NOT_NULL		3508080						
ANR	3510219	Symbol	ONIGERR_INVALID_BACKREF		3508080						
ANR	3510220	Symbol	node_new_cclass_by_codepoint_range		3508080						
ANR	3510221	Symbol	* NENCLOSE		3508080						
ANR	3510222	Symbol	node_new_ctype		3508080						
ANR	3510223	Symbol	tok -> u . call . name_end		3508080						
ANR	3510224	Symbol	& iarg		3508080						
ANR	3510225	Symbol	node_str_cat_char		3508080						
ANR	3510226	Symbol	qstart		3508080						
ANR	3510227	Symbol	tok -> u . backref . num		3508080						
ANR	3510228	Symbol	IS_NULL		3508080						
ANR	3510229	Symbol	OnigTypeCClassTable		3508080						
ANR	3510230	Symbol	* NQTFR		3508080						
ANR	3510231	Symbol	tok -> u . repeat . upper		3508080						
ANR	3510232	Symbol	tok -> u . backref		3508080						
ANR	3510233	Symbol	ONIGENC_GET_CTYPE_CODE_RANGE		3508080						
ANR	3510234	Symbol	i_apply_case_fold		3508080						
ANR	3510235	Symbol	end		3508080						
ANR	3510236	Symbol	tok -> u		3508080						
ANR	3510237	Symbol	& NCAR		3508080						
ANR	3510238	Symbol	nextp		3508080						
ANR	3510239	Symbol	tok -> u . call		3508080						
ANR	3510240	Symbol	onig_node_new_alt		3508080						
ANR	3510241	Symbol	tok -> u . repeat		3508080						
ANR	3510242	Symbol	src		3508080						
ANR	3510243	Symbol	NSTR ( * np ) -> s		3508080						
ANR	3510244	Symbol	& type_type_cclass_hash		3508080						
ANR	3510245	Symbol	env		3508080						
ANR	3510246	Symbol	node_new_empty		3508080						
ANR	3510247	Symbol	target		3508080						
ANR	3510248	Symbol	onig_node_str_cat		3508080						
ANR	3510249	Symbol	tok -> u . repeat . lower		3508080						
ANR	3510250	Symbol	tok -> u . prop . ctype		3508080						
ANR	3510251	Symbol	onig_st_lookup		3508080						
ANR	3510252	Symbol	ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS		3508080						
ANR	3510253	Symbol	TK_RAW_BYTE		3508080						
ANR	3510254	Symbol	qend		3508080						
ANR	3510255	Function	parse_branch	5427:0:122118:122873							
ANR	3510256	FunctionDef	"parse_branch (Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env)"		3510255	0					
ANR	3510257	CompoundStatement		5430:0:122225:122873	3510255	0					
ANR	3510258	IdentifierDeclStatement	int r ;	5431:2:122229:122234	3510255	0	True				
ANR	3510259	IdentifierDecl	r		3510255	0					
ANR	3510260	IdentifierDeclType	int		3510255	0					
ANR	3510261	Identifier	r		3510255	1					
ANR	3510262	IdentifierDeclStatement	"Node * node , * * headp ;"	5432:2:122238:122257	3510255	1	True				
ANR	3510263	IdentifierDecl	* node		3510255	0					
ANR	3510264	IdentifierDeclType	Node *		3510255	0					
ANR	3510265	Identifier	node		3510255	1					
ANR	3510266	IdentifierDecl	* * headp		3510255	1					
ANR	3510267	IdentifierDeclType	Node * *		3510255	0					
ANR	3510268	Identifier	headp		3510255	1					
ANR	3510269	ExpressionStatement	* top = NULL	5434:2:122262:122273	3510255	2	True				
ANR	3510270	AssignmentExpression	* top = NULL		3510255	0		=			
ANR	3510271	UnaryOperationExpression	* top		3510255	0					
ANR	3510272	UnaryOperator	*		3510255	0					
ANR	3510273	Identifier	top		3510255	1					
ANR	3510274	Identifier	NULL		3510255	1					
ANR	3510275	ExpressionStatement	"r = parse_exp ( & node , tok , term , src , end , env )"	5435:2:122277:122323	3510255	3	True				
ANR	3510276	AssignmentExpression	"r = parse_exp ( & node , tok , term , src , end , env )"		3510255	0		=			
ANR	3510277	Identifier	r		3510255	0					
ANR	3510278	CallExpression	"parse_exp ( & node , tok , term , src , end , env )"		3510255	1					
ANR	3510279	Callee	parse_exp		3510255	0					
ANR	3510280	Identifier	parse_exp		3510255	0					
ANR	3510281	ArgumentList	& node		3510255	1					
ANR	3510282	Argument	& node		3510255	0					
ANR	3510283	UnaryOperationExpression	& node		3510255	0					
ANR	3510284	UnaryOperator	&		3510255	0					
ANR	3510285	Identifier	node		3510255	1					
ANR	3510286	Argument	tok		3510255	1					
ANR	3510287	Identifier	tok		3510255	0					
ANR	3510288	Argument	term		3510255	2					
ANR	3510289	Identifier	term		3510255	0					
ANR	3510290	Argument	src		3510255	3					
ANR	3510291	Identifier	src		3510255	0					
ANR	3510292	Argument	end		3510255	4					
ANR	3510293	Identifier	end		3510255	0					
ANR	3510294	Argument	env		3510255	5					
ANR	3510295	Identifier	env		3510255	0					
ANR	3510296	IfStatement	if ( r < 0 )		3510255	4					
ANR	3510297	Condition	r < 0	5436:6:122331:122335	3510255	0	True				
ANR	3510298	RelationalExpression	r < 0		3510255	0		<			
ANR	3510299	Identifier	r		3510255	0					
ANR	3510300	PrimaryExpression	0		3510255	1					
ANR	3510301	ReturnStatement	return r ;	5436:13:122338:122346	3510255	1	True				
ANR	3510302	Identifier	r		3510255	0					
ANR	3510303	IfStatement	if ( r == TK_EOT || r == term || r == TK_ALT )		3510255	5					
ANR	3510304	Condition	r == TK_EOT || r == term || r == TK_ALT	5438:6:122355:122393	3510255	0	True				
ANR	3510305	OrExpression	r == TK_EOT || r == term || r == TK_ALT		3510255	0		||			
ANR	3510306	EqualityExpression	r == TK_EOT		3510255	0		==			
ANR	3510307	Identifier	r		3510255	0					
ANR	3510308	Identifier	TK_EOT		3510255	1					
ANR	3510309	OrExpression	r == term || r == TK_ALT		3510255	1		||			
ANR	3510310	EqualityExpression	r == term		3510255	0		==			
ANR	3510311	Identifier	r		3510255	0					
ANR	3510312	Identifier	term		3510255	1					
ANR	3510313	EqualityExpression	r == TK_ALT		3510255	1		==			
ANR	3510314	Identifier	r		3510255	0					
ANR	3510315	Identifier	TK_ALT		3510255	1					
ANR	3510316	CompoundStatement		9:47:170:170	3510255	1					
ANR	3510317	ExpressionStatement	* top = node	5439:4:122402:122413	3510255	0	True				
ANR	3510318	AssignmentExpression	* top = node		3510255	0		=			
ANR	3510319	UnaryOperationExpression	* top		3510255	0					
ANR	3510320	UnaryOperator	*		3510255	0					
ANR	3510321	Identifier	top		3510255	1					
ANR	3510322	Identifier	node		3510255	1					
ANR	3510323	ElseStatement	else		3510255	0					
ANR	3510324	CompoundStatement		12:7:200:200	3510255	0					
ANR	3510325	ExpressionStatement	"* top = node_new_list ( node , NULL )"	5442:4:122432:122465	3510255	0	True				
ANR	3510326	AssignmentExpression	"* top = node_new_list ( node , NULL )"		3510255	0		=			
ANR	3510327	UnaryOperationExpression	* top		3510255	0					
ANR	3510328	UnaryOperator	*		3510255	0					
ANR	3510329	Identifier	top		3510255	1					
ANR	3510330	CallExpression	"node_new_list ( node , NULL )"		3510255	1					
ANR	3510331	Callee	node_new_list		3510255	0					
ANR	3510332	Identifier	node_new_list		3510255	0					
ANR	3510333	ArgumentList	node		3510255	1					
ANR	3510334	Argument	node		3510255	0					
ANR	3510335	Identifier	node		3510255	0					
ANR	3510336	Argument	NULL		3510255	1					
ANR	3510337	Identifier	NULL		3510255	0					
ANR	3510338	ExpressionStatement	headp = & ( NCDR ( * top ) )	5443:4:122471:122492	3510255	1	True				
ANR	3510339	AssignmentExpression	headp = & ( NCDR ( * top ) )		3510255	0		=			
ANR	3510340	Identifier	headp		3510255	0					
ANR	3510341	UnaryOperationExpression	& ( NCDR ( * top ) )		3510255	1					
ANR	3510342	UnaryOperator	&		3510255	0					
ANR	3510343	CallExpression	NCDR ( * top )		3510255	1					
ANR	3510344	Callee	NCDR		3510255	0					
ANR	3510345	Identifier	NCDR		3510255	0					
ANR	3510346	ArgumentList	* top		3510255	1					
ANR	3510347	Argument	* top		3510255	0					
ANR	3510348	UnaryOperationExpression	* top		3510255	0					
ANR	3510349	UnaryOperator	*		3510255	0					
ANR	3510350	Identifier	top		3510255	1					
ANR	3510351	WhileStatement	while ( r != TK_EOT && r != term && r != TK_ALT )		3510255	2					
ANR	3510352	Condition	r != TK_EOT && r != term && r != TK_ALT	5444:11:122505:122543	3510255	0	True				
ANR	3510353	AndExpression	r != TK_EOT && r != term && r != TK_ALT		3510255	0		&&			
ANR	3510354	EqualityExpression	r != TK_EOT		3510255	0		!=			
ANR	3510355	Identifier	r		3510255	0					
ANR	3510356	Identifier	TK_EOT		3510255	1					
ANR	3510357	AndExpression	r != term && r != TK_ALT		3510255	1		&&			
ANR	3510358	EqualityExpression	r != term		3510255	0		!=			
ANR	3510359	Identifier	r		3510255	0					
ANR	3510360	Identifier	term		3510255	1					
ANR	3510361	EqualityExpression	r != TK_ALT		3510255	1		!=			
ANR	3510362	Identifier	r		3510255	0					
ANR	3510363	Identifier	TK_ALT		3510255	1					
ANR	3510364	CompoundStatement		15:52:320:320	3510255	1					
ANR	3510365	ExpressionStatement	"r = parse_exp ( & node , tok , term , src , end , env )"	5445:6:122554:122600	3510255	0	True				
ANR	3510366	AssignmentExpression	"r = parse_exp ( & node , tok , term , src , end , env )"		3510255	0		=			
ANR	3510367	Identifier	r		3510255	0					
ANR	3510368	CallExpression	"parse_exp ( & node , tok , term , src , end , env )"		3510255	1					
ANR	3510369	Callee	parse_exp		3510255	0					
ANR	3510370	Identifier	parse_exp		3510255	0					
ANR	3510371	ArgumentList	& node		3510255	1					
ANR	3510372	Argument	& node		3510255	0					
ANR	3510373	UnaryOperationExpression	& node		3510255	0					
ANR	3510374	UnaryOperator	&		3510255	0					
ANR	3510375	Identifier	node		3510255	1					
ANR	3510376	Argument	tok		3510255	1					
ANR	3510377	Identifier	tok		3510255	0					
ANR	3510378	Argument	term		3510255	2					
ANR	3510379	Identifier	term		3510255	0					
ANR	3510380	Argument	src		3510255	3					
ANR	3510381	Identifier	src		3510255	0					
ANR	3510382	Argument	end		3510255	4					
ANR	3510383	Identifier	end		3510255	0					
ANR	3510384	Argument	env		3510255	5					
ANR	3510385	Identifier	env		3510255	0					
ANR	3510386	IfStatement	if ( r < 0 )		3510255	1					
ANR	3510387	Condition	r < 0	5446:10:122612:122616	3510255	0	True				
ANR	3510388	RelationalExpression	r < 0		3510255	0		<			
ANR	3510389	Identifier	r		3510255	0					
ANR	3510390	PrimaryExpression	0		3510255	1					
ANR	3510391	ReturnStatement	return r ;	5446:17:122619:122627	3510255	1	True				
ANR	3510392	Identifier	r		3510255	0					
ANR	3510393	IfStatement	if ( NTYPE ( node ) == NT_LIST )		3510255	2					
ANR	3510394	Condition	NTYPE ( node ) == NT_LIST	5448:10:122640:122661	3510255	0	True				
ANR	3510395	EqualityExpression	NTYPE ( node ) == NT_LIST		3510255	0		==			
ANR	3510396	CallExpression	NTYPE ( node )		3510255	0					
ANR	3510397	Callee	NTYPE		3510255	0					
ANR	3510398	Identifier	NTYPE		3510255	0					
ANR	3510399	ArgumentList	node		3510255	1					
ANR	3510400	Argument	node		3510255	0					
ANR	3510401	Identifier	node		3510255	0					
ANR	3510402	Identifier	NT_LIST		3510255	1					
ANR	3510403	CompoundStatement		19:34:438:438	3510255	1					
ANR	3510404	ExpressionStatement	* headp = node	5449:1:122667:122680	3510255	0	True				
ANR	3510405	AssignmentExpression	* headp = node		3510255	0		=			
ANR	3510406	UnaryOperationExpression	* headp		3510255	0					
ANR	3510407	UnaryOperator	*		3510255	0					
ANR	3510408	Identifier	headp		3510255	1					
ANR	3510409	Identifier	node		3510255	1					
ANR	3510410	WhileStatement	while ( IS_NOT_NULL ( NCDR ( node ) ) )		3510255	1					
ANR	3510411	Condition	IS_NOT_NULL ( NCDR ( node ) )	5450:8:122690:122712	3510255	0	True				
ANR	3510412	CallExpression	IS_NOT_NULL ( NCDR ( node ) )		3510255	0					
ANR	3510413	Callee	IS_NOT_NULL		3510255	0					
ANR	3510414	Identifier	IS_NOT_NULL		3510255	0					
ANR	3510415	ArgumentList	NCDR ( node )		3510255	1					
ANR	3510416	Argument	NCDR ( node )		3510255	0					
ANR	3510417	CallExpression	NCDR ( node )		3510255	0					
ANR	3510418	Callee	NCDR		3510255	0					
ANR	3510419	Identifier	NCDR		3510255	0					
ANR	3510420	ArgumentList	node		3510255	1					
ANR	3510421	Argument	node		3510255	0					
ANR	3510422	Identifier	node		3510255	0					
ANR	3510423	ExpressionStatement	node = NCDR ( node )	5450:33:122715:122732	3510255	1	True				
ANR	3510424	AssignmentExpression	node = NCDR ( node )		3510255	0		=			
ANR	3510425	Identifier	node		3510255	0					
ANR	3510426	CallExpression	NCDR ( node )		3510255	1					
ANR	3510427	Callee	NCDR		3510255	0					
ANR	3510428	Identifier	NCDR		3510255	0					
ANR	3510429	ArgumentList	node		3510255	1					
ANR	3510430	Argument	node		3510255	0					
ANR	3510431	Identifier	node		3510255	0					
ANR	3510432	ExpressionStatement	headp = & ( NCDR ( node ) )	5451:1:122735:122756	3510255	2	True				
ANR	3510433	AssignmentExpression	headp = & ( NCDR ( node ) )		3510255	0		=			
ANR	3510434	Identifier	headp		3510255	0					
ANR	3510435	UnaryOperationExpression	& ( NCDR ( node ) )		3510255	1					
ANR	3510436	UnaryOperator	&		3510255	0					
ANR	3510437	CallExpression	NCDR ( node )		3510255	1					
ANR	3510438	Callee	NCDR		3510255	0					
ANR	3510439	Identifier	NCDR		3510255	0					
ANR	3510440	ArgumentList	node		3510255	1					
ANR	3510441	Argument	node		3510255	0					
ANR	3510442	Identifier	node		3510255	0					
ANR	3510443	ElseStatement	else		3510255	0					
ANR	3510444	CompoundStatement		24:11:551:551	3510255	0					
ANR	3510445	ExpressionStatement	"* headp = node_new_list ( node , NULL )"	5454:1:122780:122814	3510255	0	True				
ANR	3510446	AssignmentExpression	"* headp = node_new_list ( node , NULL )"		3510255	0		=			
ANR	3510447	UnaryOperationExpression	* headp		3510255	0					
ANR	3510448	UnaryOperator	*		3510255	0					
ANR	3510449	Identifier	headp		3510255	1					
ANR	3510450	CallExpression	"node_new_list ( node , NULL )"		3510255	1					
ANR	3510451	Callee	node_new_list		3510255	0					
ANR	3510452	Identifier	node_new_list		3510255	0					
ANR	3510453	ArgumentList	node		3510255	1					
ANR	3510454	Argument	node		3510255	0					
ANR	3510455	Identifier	node		3510255	0					
ANR	3510456	Argument	NULL		3510255	1					
ANR	3510457	Identifier	NULL		3510255	0					
ANR	3510458	ExpressionStatement	headp = & ( NCDR ( * headp ) )	5455:1:122817:122840	3510255	1	True				
ANR	3510459	AssignmentExpression	headp = & ( NCDR ( * headp ) )		3510255	0		=			
ANR	3510460	Identifier	headp		3510255	0					
ANR	3510461	UnaryOperationExpression	& ( NCDR ( * headp ) )		3510255	1					
ANR	3510462	UnaryOperator	&		3510255	0					
ANR	3510463	CallExpression	NCDR ( * headp )		3510255	1					
ANR	3510464	Callee	NCDR		3510255	0					
ANR	3510465	Identifier	NCDR		3510255	0					
ANR	3510466	ArgumentList	* headp		3510255	1					
ANR	3510467	Argument	* headp		3510255	0					
ANR	3510468	UnaryOperationExpression	* headp		3510255	0					
ANR	3510469	UnaryOperator	*		3510255	0					
ANR	3510470	Identifier	headp		3510255	1					
ANR	3510471	ReturnStatement	return r ;	5460:2:122863:122871	3510255	6	True				
ANR	3510472	Identifier	r		3510255	0					
ANR	3510473	ReturnType	static int		3510255	1					
ANR	3510474	Identifier	parse_branch		3510255	2					
ANR	3510475	ParameterList	"Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env"		3510255	3					
ANR	3510476	Parameter	Node * * top	5428:13:122142:122151	3510255	0	True				
ANR	3510477	ParameterType	Node * *		3510255	0					
ANR	3510478	Identifier	top		3510255	1					
ANR	3510479	Parameter	OnigToken * tok	5428:25:122154:122167	3510255	1	True				
ANR	3510480	ParameterType	OnigToken *		3510255	0					
ANR	3510481	Identifier	tok		3510255	1					
ANR	3510482	Parameter	int term	5428:41:122170:122177	3510255	2	True				
ANR	3510483	ParameterType	int		3510255	0					
ANR	3510484	Identifier	term		3510255	1					
ANR	3510485	Parameter	UChar * * src	5429:6:122186:122196	3510255	3	True				
ANR	3510486	ParameterType	UChar * *		3510255	0					
ANR	3510487	Identifier	src		3510255	1					
ANR	3510488	Parameter	UChar * end	5429:19:122199:122208	3510255	4	True				
ANR	3510489	ParameterType	UChar *		3510255	0					
ANR	3510490	Identifier	end		3510255	1					
ANR	3510491	Parameter	ScanEnv * env	5429:31:122211:122222	3510255	5	True				
ANR	3510492	ParameterType	ScanEnv *		3510255	0					
ANR	3510493	Identifier	env		3510255	1					
ANR	3510494	CFGEntryNode	ENTRY		3510255		True				
ANR	3510495	CFGExitNode	EXIT		3510255		True				
ANR	3510496	Symbol	& NCDR		3510255						
ANR	3510497	Symbol	IS_NOT_NULL		3510255						
ANR	3510498	Symbol	NULL		3510255						
ANR	3510499	Symbol	src		3510255						
ANR	3510500	Symbol	TK_ALT		3510255						
ANR	3510501	Symbol	TK_EOT		3510255						
ANR	3510502	Symbol	node_new_list		3510255						
ANR	3510503	Symbol	NCDR		3510255						
ANR	3510504	Symbol	env		3510255						
ANR	3510505	Symbol	NT_LIST		3510255						
ANR	3510506	Symbol	tok		3510255						
ANR	3510507	Symbol	node		3510255						
ANR	3510508	Symbol	r		3510255						
ANR	3510509	Symbol	& node		3510255						
ANR	3510510	Symbol	parse_exp		3510255						
ANR	3510511	Symbol	* headp		3510255						
ANR	3510512	Symbol	top		3510255						
ANR	3510513	Symbol	headp		3510255						
ANR	3510514	Symbol	term		3510255						
ANR	3510515	Symbol	end		3510255						
ANR	3510516	Symbol	NTYPE		3510255						
ANR	3510517	Symbol	* top		3510255						
ANR	3510518	Function	parse_subexp	5464:0:122918:123822							
ANR	3510519	FunctionDef	"parse_subexp (Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env)"		3510518	0					
ANR	3510520	CompoundStatement		5467:0:123025:123822	3510518	0					
ANR	3510521	IdentifierDeclStatement	int r ;	5468:2:123029:123034	3510518	0	True				
ANR	3510522	IdentifierDecl	r		3510518	0					
ANR	3510523	IdentifierDeclType	int		3510518	0					
ANR	3510524	Identifier	r		3510518	1					
ANR	3510525	IdentifierDeclStatement	"Node * node , * * headp ;"	5469:2:123038:123057	3510518	1	True				
ANR	3510526	IdentifierDecl	* node		3510518	0					
ANR	3510527	IdentifierDeclType	Node *		3510518	0					
ANR	3510528	Identifier	node		3510518	1					
ANR	3510529	IdentifierDecl	* * headp		3510518	1					
ANR	3510530	IdentifierDeclType	Node * *		3510518	0					
ANR	3510531	Identifier	headp		3510518	1					
ANR	3510532	ExpressionStatement	* top = NULL	5471:2:123062:123073	3510518	2	True				
ANR	3510533	AssignmentExpression	* top = NULL		3510518	0		=			
ANR	3510534	UnaryOperationExpression	* top		3510518	0					
ANR	3510535	UnaryOperator	*		3510518	0					
ANR	3510536	Identifier	top		3510518	1					
ANR	3510537	Identifier	NULL		3510518	1					
ANR	3510538	ExpressionStatement	"r = parse_branch ( & node , tok , term , src , end , env )"	5472:2:123077:123126	3510518	3	True				
ANR	3510539	AssignmentExpression	"r = parse_branch ( & node , tok , term , src , end , env )"		3510518	0		=			
ANR	3510540	Identifier	r		3510518	0					
ANR	3510541	CallExpression	"parse_branch ( & node , tok , term , src , end , env )"		3510518	1					
ANR	3510542	Callee	parse_branch		3510518	0					
ANR	3510543	Identifier	parse_branch		3510518	0					
ANR	3510544	ArgumentList	& node		3510518	1					
ANR	3510545	Argument	& node		3510518	0					
ANR	3510546	UnaryOperationExpression	& node		3510518	0					
ANR	3510547	UnaryOperator	&		3510518	0					
ANR	3510548	Identifier	node		3510518	1					
ANR	3510549	Argument	tok		3510518	1					
ANR	3510550	Identifier	tok		3510518	0					
ANR	3510551	Argument	term		3510518	2					
ANR	3510552	Identifier	term		3510518	0					
ANR	3510553	Argument	src		3510518	3					
ANR	3510554	Identifier	src		3510518	0					
ANR	3510555	Argument	end		3510518	4					
ANR	3510556	Identifier	end		3510518	0					
ANR	3510557	Argument	env		3510518	5					
ANR	3510558	Identifier	env		3510518	0					
ANR	3510559	IfStatement	if ( r < 0 )		3510518	4					
ANR	3510560	Condition	r < 0	5473:6:123134:123138	3510518	0	True				
ANR	3510561	RelationalExpression	r < 0		3510518	0		<			
ANR	3510562	Identifier	r		3510518	0					
ANR	3510563	PrimaryExpression	0		3510518	1					
ANR	3510564	CompoundStatement		7:13:115:115	3510518	1					
ANR	3510565	ExpressionStatement	onig_node_free ( node )	5474:4:123147:123167	3510518	0	True				
ANR	3510566	CallExpression	onig_node_free ( node )		3510518	0					
ANR	3510567	Callee	onig_node_free		3510518	0					
ANR	3510568	Identifier	onig_node_free		3510518	0					
ANR	3510569	ArgumentList	node		3510518	1					
ANR	3510570	Argument	node		3510518	0					
ANR	3510571	Identifier	node		3510518	0					
ANR	3510572	ReturnStatement	return r ;	5475:4:123173:123181	3510518	1	True				
ANR	3510573	Identifier	r		3510518	0					
ANR	3510574	IfStatement	if ( r == term )		3510518	5					
ANR	3510575	Condition	r == term	5478:6:123194:123202	3510518	0	True				
ANR	3510576	EqualityExpression	r == term		3510518	0		==			
ANR	3510577	Identifier	r		3510518	0					
ANR	3510578	Identifier	term		3510518	1					
ANR	3510579	CompoundStatement		12:17:179:179	3510518	1					
ANR	3510580	ExpressionStatement	* top = node	5479:4:123211:123222	3510518	0	True				
ANR	3510581	AssignmentExpression	* top = node		3510518	0		=			
ANR	3510582	UnaryOperationExpression	* top		3510518	0					
ANR	3510583	UnaryOperator	*		3510518	0					
ANR	3510584	Identifier	top		3510518	1					
ANR	3510585	Identifier	node		3510518	1					
ANR	3510586	ElseStatement	else		3510518	0					
ANR	3510587	IfStatement	if ( r == TK_ALT )		3510518	0					
ANR	3510588	Condition	r == TK_ALT	5481:11:123239:123249	3510518	0	True				
ANR	3510589	EqualityExpression	r == TK_ALT		3510518	0		==			
ANR	3510590	Identifier	r		3510518	0					
ANR	3510591	Identifier	TK_ALT		3510518	1					
ANR	3510592	CompoundStatement		15:24:226:226	3510518	1					
ANR	3510593	ExpressionStatement	"* top = onig_node_new_alt ( node , NULL )"	5482:4:123258:123295	3510518	0	True				
ANR	3510594	AssignmentExpression	"* top = onig_node_new_alt ( node , NULL )"		3510518	0		=			
ANR	3510595	UnaryOperationExpression	* top		3510518	0					
ANR	3510596	UnaryOperator	*		3510518	0					
ANR	3510597	Identifier	top		3510518	1					
ANR	3510598	CallExpression	"onig_node_new_alt ( node , NULL )"		3510518	1					
ANR	3510599	Callee	onig_node_new_alt		3510518	0					
ANR	3510600	Identifier	onig_node_new_alt		3510518	0					
ANR	3510601	ArgumentList	node		3510518	1					
ANR	3510602	Argument	node		3510518	0					
ANR	3510603	Identifier	node		3510518	0					
ANR	3510604	Argument	NULL		3510518	1					
ANR	3510605	Identifier	NULL		3510518	0					
ANR	3510606	ExpressionStatement	headp = & ( NCDR ( * top ) )	5483:4:123301:123322	3510518	1	True				
ANR	3510607	AssignmentExpression	headp = & ( NCDR ( * top ) )		3510518	0		=			
ANR	3510608	Identifier	headp		3510518	0					
ANR	3510609	UnaryOperationExpression	& ( NCDR ( * top ) )		3510518	1					
ANR	3510610	UnaryOperator	&		3510518	0					
ANR	3510611	CallExpression	NCDR ( * top )		3510518	1					
ANR	3510612	Callee	NCDR		3510518	0					
ANR	3510613	Identifier	NCDR		3510518	0					
ANR	3510614	ArgumentList	* top		3510518	1					
ANR	3510615	Argument	* top		3510518	0					
ANR	3510616	UnaryOperationExpression	* top		3510518	0					
ANR	3510617	UnaryOperator	*		3510518	0					
ANR	3510618	Identifier	top		3510518	1					
ANR	3510619	WhileStatement	while ( r == TK_ALT )		3510518	2					
ANR	3510620	Condition	r == TK_ALT	5484:11:123335:123345	3510518	0	True				
ANR	3510621	EqualityExpression	r == TK_ALT		3510518	0		==			
ANR	3510622	Identifier	r		3510518	0					
ANR	3510623	Identifier	TK_ALT		3510518	1					
ANR	3510624	CompoundStatement		18:24:322:322	3510518	1					
ANR	3510625	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5485:6:123356:123391	3510518	0	True				
ANR	3510626	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		3510518	0		=			
ANR	3510627	Identifier	r		3510518	0					
ANR	3510628	CallExpression	"fetch_token ( tok , src , end , env )"		3510518	1					
ANR	3510629	Callee	fetch_token		3510518	0					
ANR	3510630	Identifier	fetch_token		3510518	0					
ANR	3510631	ArgumentList	tok		3510518	1					
ANR	3510632	Argument	tok		3510518	0					
ANR	3510633	Identifier	tok		3510518	0					
ANR	3510634	Argument	src		3510518	1					
ANR	3510635	Identifier	src		3510518	0					
ANR	3510636	Argument	end		3510518	2					
ANR	3510637	Identifier	end		3510518	0					
ANR	3510638	Argument	env		3510518	3					
ANR	3510639	Identifier	env		3510518	0					
ANR	3510640	IfStatement	if ( r < 0 )		3510518	1					
ANR	3510641	Condition	r < 0	5486:10:123403:123407	3510518	0	True				
ANR	3510642	RelationalExpression	r < 0		3510518	0		<			
ANR	3510643	Identifier	r		3510518	0					
ANR	3510644	PrimaryExpression	0		3510518	1					
ANR	3510645	ReturnStatement	return r ;	5486:17:123410:123418	3510518	1	True				
ANR	3510646	Identifier	r		3510518	0					
ANR	3510647	ExpressionStatement	"r = parse_branch ( & node , tok , term , src , end , env )"	5487:6:123426:123475	3510518	2	True				
ANR	3510648	AssignmentExpression	"r = parse_branch ( & node , tok , term , src , end , env )"		3510518	0		=			
ANR	3510649	Identifier	r		3510518	0					
ANR	3510650	CallExpression	"parse_branch ( & node , tok , term , src , end , env )"		3510518	1					
ANR	3510651	Callee	parse_branch		3510518	0					
ANR	3510652	Identifier	parse_branch		3510518	0					
ANR	3510653	ArgumentList	& node		3510518	1					
ANR	3510654	Argument	& node		3510518	0					
ANR	3510655	UnaryOperationExpression	& node		3510518	0					
ANR	3510656	UnaryOperator	&		3510518	0					
ANR	3510657	Identifier	node		3510518	1					
ANR	3510658	Argument	tok		3510518	1					
ANR	3510659	Identifier	tok		3510518	0					
ANR	3510660	Argument	term		3510518	2					
ANR	3510661	Identifier	term		3510518	0					
ANR	3510662	Argument	src		3510518	3					
ANR	3510663	Identifier	src		3510518	0					
ANR	3510664	Argument	end		3510518	4					
ANR	3510665	Identifier	end		3510518	0					
ANR	3510666	Argument	env		3510518	5					
ANR	3510667	Identifier	env		3510518	0					
ANR	3510668	IfStatement	if ( r < 0 )		3510518	3					
ANR	3510669	Condition	r < 0	5488:10:123487:123491	3510518	0	True				
ANR	3510670	RelationalExpression	r < 0		3510518	0		<			
ANR	3510671	Identifier	r		3510518	0					
ANR	3510672	PrimaryExpression	0		3510518	1					
ANR	3510673	ReturnStatement	return r ;	5488:17:123494:123502	3510518	1	True				
ANR	3510674	Identifier	r		3510518	0					
ANR	3510675	ExpressionStatement	"* headp = onig_node_new_alt ( node , NULL )"	5490:6:123511:123549	3510518	4	True				
ANR	3510676	AssignmentExpression	"* headp = onig_node_new_alt ( node , NULL )"		3510518	0		=			
ANR	3510677	UnaryOperationExpression	* headp		3510518	0					
ANR	3510678	UnaryOperator	*		3510518	0					
ANR	3510679	Identifier	headp		3510518	1					
ANR	3510680	CallExpression	"onig_node_new_alt ( node , NULL )"		3510518	1					
ANR	3510681	Callee	onig_node_new_alt		3510518	0					
ANR	3510682	Identifier	onig_node_new_alt		3510518	0					
ANR	3510683	ArgumentList	node		3510518	1					
ANR	3510684	Argument	node		3510518	0					
ANR	3510685	Identifier	node		3510518	0					
ANR	3510686	Argument	NULL		3510518	1					
ANR	3510687	Identifier	NULL		3510518	0					
ANR	3510688	ExpressionStatement	headp = & ( NCDR ( * headp ) )	5491:6:123557:123580	3510518	5	True				
ANR	3510689	AssignmentExpression	headp = & ( NCDR ( * headp ) )		3510518	0		=			
ANR	3510690	Identifier	headp		3510518	0					
ANR	3510691	UnaryOperationExpression	& ( NCDR ( * headp ) )		3510518	1					
ANR	3510692	UnaryOperator	&		3510518	0					
ANR	3510693	CallExpression	NCDR ( * headp )		3510518	1					
ANR	3510694	Callee	NCDR		3510518	0					
ANR	3510695	Identifier	NCDR		3510518	0					
ANR	3510696	ArgumentList	* headp		3510518	1					
ANR	3510697	Argument	* headp		3510518	0					
ANR	3510698	UnaryOperationExpression	* headp		3510518	0					
ANR	3510699	UnaryOperator	*		3510518	0					
ANR	3510700	Identifier	headp		3510518	1					
ANR	3510701	IfStatement	if ( tok -> type != ( enum TokenSyms ) term )		3510518	3					
ANR	3510702	Condition	tok -> type != ( enum TokenSyms ) term	5494:8:123597:123630	3510518	0	True				
ANR	3510703	EqualityExpression	tok -> type != ( enum TokenSyms ) term		3510518	0		!=			
ANR	3510704	PtrMemberAccess	tok -> type		3510518	0					
ANR	3510705	Identifier	tok		3510518	0					
ANR	3510706	Identifier	type		3510518	1					
ANR	3510707	CastExpression	( enum TokenSyms ) term		3510518	1					
ANR	3510708	CastTarget	enum TokenSyms		3510518	0					
ANR	3510709	Identifier	term		3510518	1					
ANR	3510710	GotoStatement	goto err ;	5495:6:123639:123647	3510518	1	True				
ANR	3510711	Identifier	err		3510518	0					
ANR	3510712	ElseStatement	else		3510518	0					
ANR	3510713	CompoundStatement		31:7:634:634	3510518	0					
ANR	3510714	Label	err :	5498:2:123664:123667	3510518	0	True				
ANR	3510715	Identifier	err		3510518	0					
ANR	3510716	IfStatement	if ( term == TK_SUBEXP_CLOSE )		3510518	1					
ANR	3510717	Condition	term == TK_SUBEXP_CLOSE	5499:8:123677:123699	3510518	0	True				
ANR	3510718	EqualityExpression	term == TK_SUBEXP_CLOSE		3510518	0		==			
ANR	3510719	Identifier	term		3510518	0					
ANR	3510720	Identifier	TK_SUBEXP_CLOSE		3510518	1					
ANR	3510721	ReturnStatement	return ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS ;	5500:6:123708:123761	3510518	1	True				
ANR	3510722	Identifier	ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS		3510518	0					
ANR	3510723	ElseStatement	else		3510518	0					
ANR	3510724	ReturnStatement	return ONIGERR_PARSER_BUG ;	5502:6:123778:123803	3510518	0	True				
ANR	3510725	Identifier	ONIGERR_PARSER_BUG		3510518	0					
ANR	3510726	ReturnStatement	return r ;	5505:2:123812:123820	3510518	6	True				
ANR	3510727	Identifier	r		3510518	0					
ANR	3510728	ReturnType	static int		3510518	1					
ANR	3510729	Identifier	parse_subexp		3510518	2					
ANR	3510730	ParameterList	"Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env"		3510518	3					
ANR	3510731	Parameter	Node * * top	5465:13:122942:122951	3510518	0	True				
ANR	3510732	ParameterType	Node * *		3510518	0					
ANR	3510733	Identifier	top		3510518	1					
ANR	3510734	Parameter	OnigToken * tok	5465:25:122954:122967	3510518	1	True				
ANR	3510735	ParameterType	OnigToken *		3510518	0					
ANR	3510736	Identifier	tok		3510518	1					
ANR	3510737	Parameter	int term	5465:41:122970:122977	3510518	2	True				
ANR	3510738	ParameterType	int		3510518	0					
ANR	3510739	Identifier	term		3510518	1					
ANR	3510740	Parameter	UChar * * src	5466:6:122986:122996	3510518	3	True				
ANR	3510741	ParameterType	UChar * *		3510518	0					
ANR	3510742	Identifier	src		3510518	1					
ANR	3510743	Parameter	UChar * end	5466:19:122999:123008	3510518	4	True				
ANR	3510744	ParameterType	UChar *		3510518	0					
ANR	3510745	Identifier	end		3510518	1					
ANR	3510746	Parameter	ScanEnv * env	5466:31:123011:123022	3510518	5	True				
ANR	3510747	ParameterType	ScanEnv *		3510518	0					
ANR	3510748	Identifier	env		3510518	1					
ANR	3510749	CFGEntryNode	ENTRY		3510518		True				
ANR	3510750	CFGExitNode	EXIT		3510518		True				
ANR	3510751	Symbol	onig_node_new_alt		3510518						
ANR	3510752	Symbol	& NCDR		3510518						
ANR	3510753	Symbol	NULL		3510518						
ANR	3510754	Symbol	src		3510518						
ANR	3510755	Symbol	TK_ALT		3510518						
ANR	3510756	Symbol	parse_branch		3510518						
ANR	3510757	Symbol	ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS		3510518						
ANR	3510758	Symbol	env		3510518						
ANR	3510759	Symbol	tok -> type		3510518						
ANR	3510760	Symbol	ONIGERR_PARSER_BUG		3510518						
ANR	3510761	Symbol	tok		3510518						
ANR	3510762	Symbol	node		3510518						
ANR	3510763	Symbol	r		3510518						
ANR	3510764	Symbol	& node		3510518						
ANR	3510765	Symbol	* headp		3510518						
ANR	3510766	Symbol	top		3510518						
ANR	3510767	Symbol	TK_SUBEXP_CLOSE		3510518						
ANR	3510768	Symbol	headp		3510518						
ANR	3510769	Symbol	term		3510518						
ANR	3510770	Symbol	end		3510518						
ANR	3510771	Symbol	* tok		3510518						
ANR	3510772	Symbol	fetch_token		3510518						
ANR	3510773	Symbol	* top		3510518						
ANR	3510774	Function	parse_regexp	5508:0:123825:124081							
ANR	3510775	FunctionDef	"parse_regexp (Node * * top , UChar * * src , UChar * end , ScanEnv * env)"		3510774	0					
ANR	3510776	CompoundStatement		5510:0:123900:124081	3510774	0					
ANR	3510777	IdentifierDeclStatement	int r ;	5511:2:123904:123909	3510774	0	True				
ANR	3510778	IdentifierDecl	r		3510774	0					
ANR	3510779	IdentifierDeclType	int		3510774	0					
ANR	3510780	Identifier	r		3510774	1					
ANR	3510781	IdentifierDeclStatement	OnigToken tok ;	5512:2:123913:123926	3510774	1	True				
ANR	3510782	IdentifierDecl	tok		3510774	0					
ANR	3510783	IdentifierDeclType	OnigToken		3510774	0					
ANR	3510784	Identifier	tok		3510774	1					
ANR	3510785	ExpressionStatement	"r = fetch_token ( & tok , src , end , env )"	5514:2:123931:123967	3510774	2	True				
ANR	3510786	AssignmentExpression	"r = fetch_token ( & tok , src , end , env )"		3510774	0		=			
ANR	3510787	Identifier	r		3510774	0					
ANR	3510788	CallExpression	"fetch_token ( & tok , src , end , env )"		3510774	1					
ANR	3510789	Callee	fetch_token		3510774	0					
ANR	3510790	Identifier	fetch_token		3510774	0					
ANR	3510791	ArgumentList	& tok		3510774	1					
ANR	3510792	Argument	& tok		3510774	0					
ANR	3510793	UnaryOperationExpression	& tok		3510774	0					
ANR	3510794	UnaryOperator	&		3510774	0					
ANR	3510795	Identifier	tok		3510774	1					
ANR	3510796	Argument	src		3510774	1					
ANR	3510797	Identifier	src		3510774	0					
ANR	3510798	Argument	end		3510774	2					
ANR	3510799	Identifier	end		3510774	0					
ANR	3510800	Argument	env		3510774	3					
ANR	3510801	Identifier	env		3510774	0					
ANR	3510802	IfStatement	if ( r < 0 )		3510774	3					
ANR	3510803	Condition	r < 0	5515:6:123975:123979	3510774	0	True				
ANR	3510804	RelationalExpression	r < 0		3510774	0		<			
ANR	3510805	Identifier	r		3510774	0					
ANR	3510806	PrimaryExpression	0		3510774	1					
ANR	3510807	ReturnStatement	return r ;	5515:13:123982:123990	3510774	1	True				
ANR	3510808	Identifier	r		3510774	0					
ANR	3510809	ExpressionStatement	"r = parse_subexp ( top , & tok , TK_EOT , src , end , env )"	5516:2:123994:124044	3510774	4	True				
ANR	3510810	AssignmentExpression	"r = parse_subexp ( top , & tok , TK_EOT , src , end , env )"		3510774	0		=			
ANR	3510811	Identifier	r		3510774	0					
ANR	3510812	CallExpression	"parse_subexp ( top , & tok , TK_EOT , src , end , env )"		3510774	1					
ANR	3510813	Callee	parse_subexp		3510774	0					
ANR	3510814	Identifier	parse_subexp		3510774	0					
ANR	3510815	ArgumentList	top		3510774	1					
ANR	3510816	Argument	top		3510774	0					
ANR	3510817	Identifier	top		3510774	0					
ANR	3510818	Argument	& tok		3510774	1					
ANR	3510819	UnaryOperationExpression	& tok		3510774	0					
ANR	3510820	UnaryOperator	&		3510774	0					
ANR	3510821	Identifier	tok		3510774	1					
ANR	3510822	Argument	TK_EOT		3510774	2					
ANR	3510823	Identifier	TK_EOT		3510774	0					
ANR	3510824	Argument	src		3510774	3					
ANR	3510825	Identifier	src		3510774	0					
ANR	3510826	Argument	end		3510774	4					
ANR	3510827	Identifier	end		3510774	0					
ANR	3510828	Argument	env		3510774	5					
ANR	3510829	Identifier	env		3510774	0					
ANR	3510830	IfStatement	if ( r < 0 )		3510774	5					
ANR	3510831	Condition	r < 0	5517:6:124052:124056	3510774	0	True				
ANR	3510832	RelationalExpression	r < 0		3510774	0		<			
ANR	3510833	Identifier	r		3510774	0					
ANR	3510834	PrimaryExpression	0		3510774	1					
ANR	3510835	ReturnStatement	return r ;	5517:13:124059:124067	3510774	1	True				
ANR	3510836	Identifier	r		3510774	0					
ANR	3510837	ReturnStatement	return 0 ;	5518:2:124071:124079	3510774	6	True				
ANR	3510838	PrimaryExpression	0		3510774	0					
ANR	3510839	ReturnType	static int		3510774	1					
ANR	3510840	Identifier	parse_regexp		3510774	2					
ANR	3510841	ParameterList	"Node * * top , UChar * * src , UChar * end , ScanEnv * env"		3510774	3					
ANR	3510842	Parameter	Node * * top	5509:13:123849:123858	3510774	0	True				
ANR	3510843	ParameterType	Node * *		3510774	0					
ANR	3510844	Identifier	top		3510774	1					
ANR	3510845	Parameter	UChar * * src	5509:25:123861:123871	3510774	1	True				
ANR	3510846	ParameterType	UChar * *		3510774	0					
ANR	3510847	Identifier	src		3510774	1					
ANR	3510848	Parameter	UChar * end	5509:38:123874:123883	3510774	2	True				
ANR	3510849	ParameterType	UChar *		3510774	0					
ANR	3510850	Identifier	end		3510774	1					
ANR	3510851	Parameter	ScanEnv * env	5509:50:123886:123897	3510774	3	True				
ANR	3510852	ParameterType	ScanEnv *		3510774	0					
ANR	3510853	Identifier	env		3510774	1					
ANR	3510854	CFGEntryNode	ENTRY		3510774		True				
ANR	3510855	CFGExitNode	EXIT		3510774		True				
ANR	3510856	Symbol	tok		3510774						
ANR	3510857	Symbol	& tok		3510774						
ANR	3510858	Symbol	r		3510774						
ANR	3510859	Symbol	top		3510774						
ANR	3510860	Symbol	src		3510774						
ANR	3510861	Symbol	TK_EOT		3510774						
ANR	3510862	Symbol	end		3510774						
ANR	3510863	Symbol	env		3510774						
ANR	3510864	Symbol	parse_subexp		3510774						
ANR	3510865	Symbol	fetch_token		3510774						
ANR	3510866	Function	onig_parse_make_tree	5521:0:124084:124698							
ANR	3510867	FunctionDef	"onig_parse_make_tree (Node * * root , const UChar * pattern , const UChar * end , regex_t * reg , ScanEnv * env)"		3510866	0					
ANR	3510868	CompoundStatement		5524:0:124204:124698	3510866	0					
ANR	3510869	IdentifierDeclStatement	int r ;	5525:2:124208:124213	3510866	0	True				
ANR	3510870	IdentifierDecl	r		3510866	0					
ANR	3510871	IdentifierDeclType	int		3510866	0					
ANR	3510872	Identifier	r		3510866	1					
ANR	3510873	IdentifierDeclStatement	UChar * p ;	5526:2:124217:124225	3510866	1	True				
ANR	3510874	IdentifierDecl	* p		3510866	0					
ANR	3510875	IdentifierDeclType	UChar *		3510866	0					
ANR	3510876	Identifier	p		3510866	1					
ANR	3510877	ExpressionStatement	names_clear ( reg )	5529:2:124253:124269	3510866	2	True				
ANR	3510878	CallExpression	names_clear ( reg )		3510866	0					
ANR	3510879	Callee	names_clear		3510866	0					
ANR	3510880	Identifier	names_clear		3510866	0					
ANR	3510881	ArgumentList	reg		3510866	1					
ANR	3510882	Argument	reg		3510866	0					
ANR	3510883	Identifier	reg		3510866	0					
ANR	3510884	ExpressionStatement	scan_env_clear ( env )	5532:2:124281:124300	3510866	3	True				
ANR	3510885	CallExpression	scan_env_clear ( env )		3510866	0					
ANR	3510886	Callee	scan_env_clear		3510866	0					
ANR	3510887	Identifier	scan_env_clear		3510866	0					
ANR	3510888	ArgumentList	env		3510866	1					
ANR	3510889	Argument	env		3510866	0					
ANR	3510890	Identifier	env		3510866	0					
ANR	3510891	ExpressionStatement	env -> option = reg -> options	5533:2:124304:124338	3510866	4	True				
ANR	3510892	AssignmentExpression	env -> option = reg -> options		3510866	0		=			
ANR	3510893	PtrMemberAccess	env -> option		3510866	0					
ANR	3510894	Identifier	env		3510866	0					
ANR	3510895	Identifier	option		3510866	1					
ANR	3510896	PtrMemberAccess	reg -> options		3510866	1					
ANR	3510897	Identifier	reg		3510866	0					
ANR	3510898	Identifier	options		3510866	1					
ANR	3510899	ExpressionStatement	env -> case_fold_flag = reg -> case_fold_flag	5534:2:124342:124383	3510866	5	True				
ANR	3510900	AssignmentExpression	env -> case_fold_flag = reg -> case_fold_flag		3510866	0		=			
ANR	3510901	PtrMemberAccess	env -> case_fold_flag		3510866	0					
ANR	3510902	Identifier	env		3510866	0					
ANR	3510903	Identifier	case_fold_flag		3510866	1					
ANR	3510904	PtrMemberAccess	reg -> case_fold_flag		3510866	1					
ANR	3510905	Identifier	reg		3510866	0					
ANR	3510906	Identifier	case_fold_flag		3510866	1					
ANR	3510907	ExpressionStatement	env -> enc = reg -> enc	5535:2:124387:124417	3510866	6	True				
ANR	3510908	AssignmentExpression	env -> enc = reg -> enc		3510866	0		=			
ANR	3510909	PtrMemberAccess	env -> enc		3510866	0					
ANR	3510910	Identifier	env		3510866	0					
ANR	3510911	Identifier	enc		3510866	1					
ANR	3510912	PtrMemberAccess	reg -> enc		3510866	1					
ANR	3510913	Identifier	reg		3510866	0					
ANR	3510914	Identifier	enc		3510866	1					
ANR	3510915	ExpressionStatement	env -> syntax = reg -> syntax	5536:2:124421:124454	3510866	7	True				
ANR	3510916	AssignmentExpression	env -> syntax = reg -> syntax		3510866	0		=			
ANR	3510917	PtrMemberAccess	env -> syntax		3510866	0					
ANR	3510918	Identifier	env		3510866	0					
ANR	3510919	Identifier	syntax		3510866	1					
ANR	3510920	PtrMemberAccess	reg -> syntax		3510866	1					
ANR	3510921	Identifier	reg		3510866	0					
ANR	3510922	Identifier	syntax		3510866	1					
ANR	3510923	ExpressionStatement	env -> pattern = ( UChar * ) pattern	5537:2:124458:124496	3510866	8	True				
ANR	3510924	AssignmentExpression	env -> pattern = ( UChar * ) pattern		3510866	0		=			
ANR	3510925	PtrMemberAccess	env -> pattern		3510866	0					
ANR	3510926	Identifier	env		3510866	0					
ANR	3510927	Identifier	pattern		3510866	1					
ANR	3510928	CastExpression	( UChar * ) pattern		3510866	1					
ANR	3510929	CastTarget	UChar *		3510866	0					
ANR	3510930	Identifier	pattern		3510866	1					
ANR	3510931	ExpressionStatement	env -> pattern_end = ( UChar * ) end	5538:2:124500:124534	3510866	9	True				
ANR	3510932	AssignmentExpression	env -> pattern_end = ( UChar * ) end		3510866	0		=			
ANR	3510933	PtrMemberAccess	env -> pattern_end		3510866	0					
ANR	3510934	Identifier	env		3510866	0					
ANR	3510935	Identifier	pattern_end		3510866	1					
ANR	3510936	CastExpression	( UChar * ) end		3510866	1					
ANR	3510937	CastTarget	UChar *		3510866	0					
ANR	3510938	Identifier	end		3510866	1					
ANR	3510939	ExpressionStatement	env -> reg = reg	5539:2:124538:124563	3510866	10	True				
ANR	3510940	AssignmentExpression	env -> reg = reg		3510866	0		=			
ANR	3510941	PtrMemberAccess	env -> reg		3510866	0					
ANR	3510942	Identifier	env		3510866	0					
ANR	3510943	Identifier	reg		3510866	1					
ANR	3510944	Identifier	reg		3510866	1					
ANR	3510945	ExpressionStatement	* root = NULL	5541:2:124568:124580	3510866	11	True				
ANR	3510946	AssignmentExpression	* root = NULL		3510866	0		=			
ANR	3510947	UnaryOperationExpression	* root		3510866	0					
ANR	3510948	UnaryOperator	*		3510866	0					
ANR	3510949	Identifier	root		3510866	1					
ANR	3510950	Identifier	NULL		3510866	1					
ANR	3510951	ExpressionStatement	p = ( UChar * ) pattern	5542:2:124584:124604	3510866	12	True				
ANR	3510952	AssignmentExpression	p = ( UChar * ) pattern		3510866	0		=			
ANR	3510953	Identifier	p		3510866	0					
ANR	3510954	CastExpression	( UChar * ) pattern		3510866	1					
ANR	3510955	CastTarget	UChar *		3510866	0					
ANR	3510956	Identifier	pattern		3510866	1					
ANR	3510957	ExpressionStatement	"r = parse_regexp ( root , & p , ( UChar * ) end , env )"	5543:2:124608:124653	3510866	13	True				
ANR	3510958	AssignmentExpression	"r = parse_regexp ( root , & p , ( UChar * ) end , env )"		3510866	0		=			
ANR	3510959	Identifier	r		3510866	0					
ANR	3510960	CallExpression	"parse_regexp ( root , & p , ( UChar * ) end , env )"		3510866	1					
ANR	3510961	Callee	parse_regexp		3510866	0					
ANR	3510962	Identifier	parse_regexp		3510866	0					
ANR	3510963	ArgumentList	root		3510866	1					
ANR	3510964	Argument	root		3510866	0					
ANR	3510965	Identifier	root		3510866	0					
ANR	3510966	Argument	& p		3510866	1					
ANR	3510967	UnaryOperationExpression	& p		3510866	0					
ANR	3510968	UnaryOperator	&		3510866	0					
ANR	3510969	Identifier	p		3510866	1					
ANR	3510970	Argument	( UChar * ) end		3510866	2					
ANR	3510971	CastExpression	( UChar * ) end		3510866	0					
ANR	3510972	CastTarget	UChar *		3510866	0					
ANR	3510973	Identifier	end		3510866	1					
ANR	3510974	Argument	env		3510866	3					
ANR	3510975	Identifier	env		3510866	0					
ANR	3510976	ExpressionStatement	reg -> num_mem = env -> num_mem	5544:2:124657:124684	3510866	14	True				
ANR	3510977	AssignmentExpression	reg -> num_mem = env -> num_mem		3510866	0		=			
ANR	3510978	PtrMemberAccess	reg -> num_mem		3510866	0					
ANR	3510979	Identifier	reg		3510866	0					
ANR	3510980	Identifier	num_mem		3510866	1					
ANR	3510981	PtrMemberAccess	env -> num_mem		3510866	1					
ANR	3510982	Identifier	env		3510866	0					
ANR	3510983	Identifier	num_mem		3510866	1					
ANR	3510984	ReturnStatement	return r ;	5545:2:124688:124696	3510866	15	True				
ANR	3510985	Identifier	r		3510866	0					
ANR	3510986	ReturnType	extern int		3510866	1					
ANR	3510987	Identifier	onig_parse_make_tree		3510866	2					
ANR	3510988	ParameterList	"Node * * root , const UChar * pattern , const UChar * end , regex_t * reg , ScanEnv * env"		3510866	3					
ANR	3510989	Parameter	Node * * root	5522:21:124116:124126	3510866	0	True				
ANR	3510990	ParameterType	Node * *		3510866	0					
ANR	3510991	Identifier	root		3510866	1					
ANR	3510992	Parameter	const UChar * pattern	5522:34:124129:124148	3510866	1	True				
ANR	3510993	ParameterType	const UChar *		3510866	0					
ANR	3510994	Identifier	pattern		3510866	1					
ANR	3510995	Parameter	const UChar * end	5522:56:124151:124166	3510866	2	True				
ANR	3510996	ParameterType	const UChar *		3510866	0					
ANR	3510997	Identifier	end		3510866	1					
ANR	3510998	Parameter	regex_t * reg	5523:7:124176:124187	3510866	3	True				
ANR	3510999	ParameterType	regex_t *		3510866	0					
ANR	3511000	Identifier	reg		3510866	1					
ANR	3511001	Parameter	ScanEnv * env	5523:21:124190:124201	3510866	4	True				
ANR	3511002	ParameterType	ScanEnv *		3510866	0					
ANR	3511003	Identifier	env		3510866	1					
ANR	3511004	CFGEntryNode	ENTRY		3510866		True				
ANR	3511005	CFGExitNode	EXIT		3510866		True				
ANR	3511006	Symbol	pattern		3510866						
ANR	3511007	Symbol	env -> enc		3510866						
ANR	3511008	Symbol	env -> reg		3510866						
ANR	3511009	Symbol	env -> option		3510866						
ANR	3511010	Symbol	reg		3510866						
ANR	3511011	Symbol	reg -> options		3510866						
ANR	3511012	Symbol	root		3510866						
ANR	3511013	Symbol	end		3510866						
ANR	3511014	Symbol	reg -> num_mem		3510866						
ANR	3511015	Symbol	NULL		3510866						
ANR	3511016	Symbol	* env		3510866						
ANR	3511017	Symbol	env -> num_mem		3510866						
ANR	3511018	Symbol	env		3510866						
ANR	3511019	Symbol	env -> syntax		3510866						
ANR	3511020	Symbol	reg -> enc		3510866						
ANR	3511021	Symbol	p		3510866						
ANR	3511022	Symbol	r		3510866						
ANR	3511023	Symbol	env -> pattern		3510866						
ANR	3511024	Symbol	parse_regexp		3510866						
ANR	3511025	Symbol	reg -> syntax		3510866						
ANR	3511026	Symbol	& p		3510866						
ANR	3511027	Symbol	env -> pattern_end		3510866						
ANR	3511028	Symbol	env -> case_fold_flag		3510866						
ANR	3511029	Symbol	reg -> case_fold_flag		3510866						
ANR	3511030	Symbol	* root		3510866						
ANR	3511031	Symbol	* reg		3510866						
ANR	3511032	Function	onig_scan_env_set_error_string	5548:0:124701:124866							
ANR	3511033	FunctionDef	"onig_scan_env_set_error_string (ScanEnv * env , int ecode ARG_UNUSED , UChar * arg , UChar * arg_end)"		3511032	0					
ANR	3511034	CompoundStatement		5551:0:124812:124866	3511032	0					
ANR	3511035	ExpressionStatement	env -> error = arg	5552:2:124816:124836	3511032	0	True				
ANR	3511036	AssignmentExpression	env -> error = arg		3511032	0		=			
ANR	3511037	PtrMemberAccess	env -> error		3511032	0					
ANR	3511038	Identifier	env		3511032	0					
ANR	3511039	Identifier	error		3511032	1					
ANR	3511040	Identifier	arg		3511032	1					
ANR	3511041	ExpressionStatement	env -> error_end = arg_end	5553:2:124840:124864	3511032	1	True				
ANR	3511042	AssignmentExpression	env -> error_end = arg_end		3511032	0		=			
ANR	3511043	PtrMemberAccess	env -> error_end		3511032	0					
ANR	3511044	Identifier	env		3511032	0					
ANR	3511045	Identifier	error_end		3511032	1					
ANR	3511046	Identifier	arg_end		3511032	1					
ANR	3511047	ReturnType	extern void		3511032	1					
ANR	3511048	Identifier	onig_scan_env_set_error_string		3511032	2					
ANR	3511049	ParameterList	"ScanEnv * env , int ecode ARG_UNUSED , UChar * arg , UChar * arg_end"		3511032	3					
ANR	3511050	Parameter	ScanEnv * env	5549:31:124744:124755	3511032	0	True				
ANR	3511051	ParameterType	ScanEnv *		3511032	0					
ANR	3511052	Identifier	env		3511032	1					
ANR	3511053	Parameter	int ecode ARG_UNUSED	5549:45:124758:124777	3511032	1	True				
ANR	3511054	ParameterType	int ecode		3511032	0					
ANR	3511055	Identifier	ARG_UNUSED		3511032	1					
ANR	3511056	Parameter	UChar * arg	5550:4:124784:124793	3511032	2	True				
ANR	3511057	ParameterType	UChar *		3511032	0					
ANR	3511058	Identifier	arg		3511032	1					
ANR	3511059	Parameter	UChar * arg_end	5550:16:124796:124809	3511032	3	True				
ANR	3511060	ParameterType	UChar *		3511032	0					
ANR	3511061	Identifier	arg_end		3511032	1					
ANR	3511062	CFGEntryNode	ENTRY		3511032		True				
ANR	3511063	CFGExitNode	EXIT		3511032		True				
ANR	3511064	Symbol	env -> error		3511032						
ANR	3511065	Symbol	arg		3511032						
ANR	3511066	Symbol	* env		3511032						
ANR	3511067	Symbol	env		3511032						
ANR	3511068	Symbol	ARG_UNUSED		3511032						
ANR	3511069	Symbol	env -> error_end		3511032						
ANR	3511070	Symbol	arg_end		3511032						
