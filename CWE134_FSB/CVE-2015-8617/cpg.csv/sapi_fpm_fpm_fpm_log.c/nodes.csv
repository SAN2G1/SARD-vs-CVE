command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3576745	File	data/converged/CVE-2015-8617_php-src/sapi_fpm_fpm_fpm_log.c								
ANR	3576746	DeclStmt									
ANR	3576747	Decl							char	char *	fpm_log_format
ANR	3576748	DeclStmt									
ANR	3576749	Decl							int	int	fpm_log_fd
ANR	3576750	Function	fpm_log_open	33:0:597:1388							
ANR	3576751	FunctionDef	fpm_log_open (int reopen)		3576750	0					
ANR	3576752	CompoundStatement		34:0:636:1388	3576750	0					
ANR	3576753	IdentifierDeclStatement	struct fpm_worker_pool_s * wp ;	35:1:639:667	3576750	0	True				
ANR	3576754	IdentifierDecl	* wp		3576750	0					
ANR	3576755	IdentifierDeclType	struct fpm_worker_pool_s *		3576750	0					
ANR	3576756	Identifier	wp		3576750	1					
ANR	3576757	IdentifierDeclStatement	int ret = 1 ;	36:1:670:681	3576750	1	True				
ANR	3576758	IdentifierDecl	ret = 1		3576750	0					
ANR	3576759	IdentifierDeclType	int		3576750	0					
ANR	3576760	Identifier	ret		3576750	1					
ANR	3576761	AssignmentExpression	ret = 1		3576750	2		=			
ANR	3576762	Identifier	ret		3576750	0					
ANR	3576763	PrimaryExpression	1		3576750	1					
ANR	3576764	IdentifierDeclStatement	int fd ;	38:1:685:691	3576750	2	True				
ANR	3576765	IdentifierDecl	fd		3576750	0					
ANR	3576766	IdentifierDeclType	int		3576750	0					
ANR	3576767	Identifier	fd		3576750	1					
ANR	3576768	ForStatement	for ( wp = fpm_worker_all_pools ; wp ; wp = wp -> next )		3576750	3					
ANR	3576769	ForInit	wp = fpm_worker_all_pools ;	39:6:699:724	3576750	0	True				
ANR	3576770	AssignmentExpression	wp = fpm_worker_all_pools		3576750	0		=			
ANR	3576771	Identifier	wp		3576750	0					
ANR	3576772	Identifier	fpm_worker_all_pools		3576750	1					
ANR	3576773	Condition	wp	39:33:726:727	3576750	1	True				
ANR	3576774	Identifier	wp		3576750	0					
ANR	3576775	AssignmentExpression	wp = wp -> next	39:37:730:742	3576750	2	True	=			
ANR	3576776	Identifier	wp		3576750	0					
ANR	3576777	PtrMemberAccess	wp -> next		3576750	1					
ANR	3576778	Identifier	wp		3576750	0					
ANR	3576779	Identifier	next		3576750	1					
ANR	3576780	CompoundStatement		6:52:108:108	3576750	3					
ANR	3576781	IfStatement	if ( ! wp -> config -> access_log )		3576750	0					
ANR	3576782	Condition	! wp -> config -> access_log	40:6:753:775	3576750	0	True				
ANR	3576783	UnaryOperationExpression	! wp -> config -> access_log		3576750	0					
ANR	3576784	UnaryOperator	!		3576750	0					
ANR	3576785	PtrMemberAccess	wp -> config -> access_log		3576750	1					
ANR	3576786	PtrMemberAccess	wp -> config		3576750	0					
ANR	3576787	Identifier	wp		3576750	0					
ANR	3576788	Identifier	config		3576750	1					
ANR	3576789	Identifier	access_log		3576750	1					
ANR	3576790	CompoundStatement		7:31:141:141	3576750	1					
ANR	3576791	ContinueStatement	continue ;	41:3:783:791	3576750	0	True				
ANR	3576792	ExpressionStatement	ret = 0	43:2:799:806	3576750	1	True				
ANR	3576793	AssignmentExpression	ret = 0		3576750	0		=			
ANR	3576794	Identifier	ret		3576750	0					
ANR	3576795	PrimaryExpression	0		3576750	1					
ANR	3576796	ExpressionStatement	"fd = open ( wp -> config -> access_log , O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR )"	45:2:811:894	3576750	2	True				
ANR	3576797	AssignmentExpression	"fd = open ( wp -> config -> access_log , O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR )"		3576750	0		=			
ANR	3576798	Identifier	fd		3576750	0					
ANR	3576799	CallExpression	"open ( wp -> config -> access_log , O_WRONLY | O_APPEND | O_CREAT , S_IRUSR | S_IWUSR )"		3576750	1					
ANR	3576800	Callee	open		3576750	0					
ANR	3576801	Identifier	open		3576750	0					
ANR	3576802	ArgumentList	wp -> config -> access_log		3576750	1					
ANR	3576803	Argument	wp -> config -> access_log		3576750	0					
ANR	3576804	PtrMemberAccess	wp -> config -> access_log		3576750	0					
ANR	3576805	PtrMemberAccess	wp -> config		3576750	0					
ANR	3576806	Identifier	wp		3576750	0					
ANR	3576807	Identifier	config		3576750	1					
ANR	3576808	Identifier	access_log		3576750	1					
ANR	3576809	Argument	O_WRONLY | O_APPEND | O_CREAT		3576750	1					
ANR	3576810	InclusiveOrExpression	O_WRONLY | O_APPEND | O_CREAT		3576750	0		|			
ANR	3576811	Identifier	O_WRONLY		3576750	0					
ANR	3576812	InclusiveOrExpression	O_APPEND | O_CREAT		3576750	1		|			
ANR	3576813	Identifier	O_APPEND		3576750	0					
ANR	3576814	Identifier	O_CREAT		3576750	1					
ANR	3576815	Argument	S_IRUSR | S_IWUSR		3576750	2					
ANR	3576816	InclusiveOrExpression	S_IRUSR | S_IWUSR		3576750	0		|			
ANR	3576817	Identifier	S_IRUSR		3576750	0					
ANR	3576818	Identifier	S_IWUSR		3576750	1					
ANR	3576819	IfStatement	if ( 0 > fd )		3576750	3					
ANR	3576820	Condition	0 > fd	46:6:902:907	3576750	0	True				
ANR	3576821	RelationalExpression	0 > fd		3576750	0		>			
ANR	3576822	PrimaryExpression	0		3576750	0					
ANR	3576823	Identifier	fd		3576750	1					
ANR	3576824	CompoundStatement		13:14:273:273	3576750	1					
ANR	3576825	ExpressionStatement	"zlog ( ZLOG_SYSERROR , ""failed to open access log (%s)"" , wp -> config -> access_log )"	47:3:915:992	3576750	0	True				
ANR	3576826	CallExpression	"zlog ( ZLOG_SYSERROR , ""failed to open access log (%s)"" , wp -> config -> access_log )"		3576750	0					
ANR	3576827	Callee	zlog		3576750	0					
ANR	3576828	Identifier	zlog		3576750	0					
ANR	3576829	ArgumentList	ZLOG_SYSERROR		3576750	1					
ANR	3576830	Argument	ZLOG_SYSERROR		3576750	0					
ANR	3576831	Identifier	ZLOG_SYSERROR		3576750	0					
ANR	3576832	Argument	"""failed to open access log (%s)"""		3576750	1					
ANR	3576833	PrimaryExpression	"""failed to open access log (%s)"""		3576750	0					
ANR	3576834	Argument	wp -> config -> access_log		3576750	2					
ANR	3576835	PtrMemberAccess	wp -> config -> access_log		3576750	0					
ANR	3576836	PtrMemberAccess	wp -> config		3576750	0					
ANR	3576837	Identifier	wp		3576750	0					
ANR	3576838	Identifier	config		3576750	1					
ANR	3576839	Identifier	access_log		3576750	1					
ANR	3576840	ReturnStatement	return - 1 ;	48:3:997:1006	3576750	1	True				
ANR	3576841	UnaryOperationExpression	- 1		3576750	0					
ANR	3576842	UnaryOperator	-		3576750	0					
ANR	3576843	PrimaryExpression	1		3576750	1					
ANR	3576844	ElseStatement	else		3576750	0					
ANR	3576845	CompoundStatement		16:9:380:380	3576750	0					
ANR	3576846	ExpressionStatement	"zlog ( ZLOG_DEBUG , ""open access log (%s)"" , wp -> config -> access_log )"	50:3:1022:1086	3576750	0	True				
ANR	3576847	CallExpression	"zlog ( ZLOG_DEBUG , ""open access log (%s)"" , wp -> config -> access_log )"		3576750	0					
ANR	3576848	Callee	zlog		3576750	0					
ANR	3576849	Identifier	zlog		3576750	0					
ANR	3576850	ArgumentList	ZLOG_DEBUG		3576750	1					
ANR	3576851	Argument	ZLOG_DEBUG		3576750	0					
ANR	3576852	Identifier	ZLOG_DEBUG		3576750	0					
ANR	3576853	Argument	"""open access log (%s)"""		3576750	1					
ANR	3576854	PrimaryExpression	"""open access log (%s)"""		3576750	0					
ANR	3576855	Argument	wp -> config -> access_log		3576750	2					
ANR	3576856	PtrMemberAccess	wp -> config -> access_log		3576750	0					
ANR	3576857	PtrMemberAccess	wp -> config		3576750	0					
ANR	3576858	Identifier	wp		3576750	0					
ANR	3576859	Identifier	config		3576750	1					
ANR	3576860	Identifier	access_log		3576750	1					
ANR	3576861	IfStatement	if ( reopen )		3576750	4					
ANR	3576862	Condition	reopen	53:6:1099:1104	3576750	0	True				
ANR	3576863	Identifier	reopen		3576750	0					
ANR	3576864	CompoundStatement		20:14:470:470	3576750	1					
ANR	3576865	ExpressionStatement	"dup2 ( fd , wp -> log_fd )"	54:3:1112:1132	3576750	0	True				
ANR	3576866	CallExpression	"dup2 ( fd , wp -> log_fd )"		3576750	0					
ANR	3576867	Callee	dup2		3576750	0					
ANR	3576868	Identifier	dup2		3576750	0					
ANR	3576869	ArgumentList	fd		3576750	1					
ANR	3576870	Argument	fd		3576750	0					
ANR	3576871	Identifier	fd		3576750	0					
ANR	3576872	Argument	wp -> log_fd		3576750	1					
ANR	3576873	PtrMemberAccess	wp -> log_fd		3576750	0					
ANR	3576874	Identifier	wp		3576750	0					
ANR	3576875	Identifier	log_fd		3576750	1					
ANR	3576876	ExpressionStatement	close ( fd )	55:3:1137:1146	3576750	1	True				
ANR	3576877	CallExpression	close ( fd )		3576750	0					
ANR	3576878	Callee	close		3576750	0					
ANR	3576879	Identifier	close		3576750	0					
ANR	3576880	ArgumentList	fd		3576750	1					
ANR	3576881	Argument	fd		3576750	0					
ANR	3576882	Identifier	fd		3576750	0					
ANR	3576883	ExpressionStatement	fd = wp -> log_fd	56:3:1151:1166	3576750	2	True				
ANR	3576884	AssignmentExpression	fd = wp -> log_fd		3576750	0		=			
ANR	3576885	Identifier	fd		3576750	0					
ANR	3576886	PtrMemberAccess	wp -> log_fd		3576750	1					
ANR	3576887	Identifier	wp		3576750	0					
ANR	3576888	Identifier	log_fd		3576750	1					
ANR	3576889	ExpressionStatement	fpm_pctl_kill_all ( SIGQUIT )	57:3:1171:1197	3576750	3	True				
ANR	3576890	CallExpression	fpm_pctl_kill_all ( SIGQUIT )		3576750	0					
ANR	3576891	Callee	fpm_pctl_kill_all		3576750	0					
ANR	3576892	Identifier	fpm_pctl_kill_all		3576750	0					
ANR	3576893	ArgumentList	SIGQUIT		3576750	1					
ANR	3576894	Argument	SIGQUIT		3576750	0					
ANR	3576895	Identifier	SIGQUIT		3576750	0					
ANR	3576896	ElseStatement	else		3576750	0					
ANR	3576897	CompoundStatement		25:9:571:571	3576750	0					
ANR	3576898	ExpressionStatement	wp -> log_fd = fd	59:3:1213:1228	3576750	0	True				
ANR	3576899	AssignmentExpression	wp -> log_fd = fd		3576750	0		=			
ANR	3576900	PtrMemberAccess	wp -> log_fd		3576750	0					
ANR	3576901	Identifier	wp		3576750	0					
ANR	3576902	Identifier	log_fd		3576750	1					
ANR	3576903	Identifier	fd		3576750	1					
ANR	3576904	IfStatement	"if ( 0 > fcntl ( fd , F_SETFD , fcntl ( fd , F_GETFD ) | FD_CLOEXEC ) )"		3576750	5					
ANR	3576905	Condition	"0 > fcntl ( fd , F_SETFD , fcntl ( fd , F_GETFD ) | FD_CLOEXEC )"	62:6:1241:1295	3576750	0	True				
ANR	3576906	RelationalExpression	"0 > fcntl ( fd , F_SETFD , fcntl ( fd , F_GETFD ) | FD_CLOEXEC )"		3576750	0		>			
ANR	3576907	PrimaryExpression	0		3576750	0					
ANR	3576908	CallExpression	"fcntl ( fd , F_SETFD , fcntl ( fd , F_GETFD ) | FD_CLOEXEC )"		3576750	1					
ANR	3576909	Callee	fcntl		3576750	0					
ANR	3576910	Identifier	fcntl		3576750	0					
ANR	3576911	ArgumentList	fd		3576750	1					
ANR	3576912	Argument	fd		3576750	0					
ANR	3576913	Identifier	fd		3576750	0					
ANR	3576914	Argument	F_SETFD		3576750	1					
ANR	3576915	Identifier	F_SETFD		3576750	0					
ANR	3576916	Argument	"fcntl ( fd , F_GETFD ) | FD_CLOEXEC"		3576750	2					
ANR	3576917	InclusiveOrExpression	"fcntl ( fd , F_GETFD ) | FD_CLOEXEC"		3576750	0		|			
ANR	3576918	CallExpression	"fcntl ( fd , F_GETFD )"		3576750	0					
ANR	3576919	Callee	fcntl		3576750	0					
ANR	3576920	Identifier	fcntl		3576750	0					
ANR	3576921	ArgumentList	fd		3576750	1					
ANR	3576922	Argument	fd		3576750	0					
ANR	3576923	Identifier	fd		3576750	0					
ANR	3576924	Argument	F_GETFD		3576750	1					
ANR	3576925	Identifier	F_GETFD		3576750	0					
ANR	3576926	Identifier	FD_CLOEXEC		3576750	1					
ANR	3576927	CompoundStatement		29:63:661:661	3576750	1					
ANR	3576928	ExpressionStatement	"zlog ( ZLOG_WARNING , ""failed to change attribute of access_log"" )"	63:3:1303:1365	3576750	0	True				
ANR	3576929	CallExpression	"zlog ( ZLOG_WARNING , ""failed to change attribute of access_log"" )"		3576750	0					
ANR	3576930	Callee	zlog		3576750	0					
ANR	3576931	Identifier	zlog		3576750	0					
ANR	3576932	ArgumentList	ZLOG_WARNING		3576750	1					
ANR	3576933	Argument	ZLOG_WARNING		3576750	0					
ANR	3576934	Identifier	ZLOG_WARNING		3576750	0					
ANR	3576935	Argument	"""failed to change attribute of access_log"""		3576750	1					
ANR	3576936	PrimaryExpression	"""failed to change attribute of access_log"""		3576750	0					
ANR	3576937	ReturnStatement	return ret ;	67:1:1376:1386	3576750	4	True				
ANR	3576938	Identifier	ret		3576750	0					
ANR	3576939	ReturnType	int		3576750	1					
ANR	3576940	Identifier	fpm_log_open		3576750	2					
ANR	3576941	ParameterList	int reopen		3576750	3					
ANR	3576942	Parameter	int reopen	33:17:614:623	3576750	0	True				
ANR	3576943	ParameterType	int		3576750	0					
ANR	3576944	Identifier	reopen		3576750	1					
ANR	3576945	CFGEntryNode	ENTRY		3576750		True				
ANR	3576946	CFGExitNode	EXIT		3576750		True				
ANR	3576947	Symbol	SIGQUIT		3576750						
ANR	3576948	Symbol	F_SETFD		3576750						
ANR	3576949	Symbol	fcntl		3576750						
ANR	3576950	Symbol	O_CREAT		3576750						
ANR	3576951	Symbol	* * wp		3576750						
ANR	3576952	Symbol	fpm_worker_all_pools		3576750						
ANR	3576953	Symbol	ZLOG_DEBUG		3576750						
ANR	3576954	Symbol	wp -> next		3576750						
ANR	3576955	Symbol	S_IRUSR		3576750						
ANR	3576956	Symbol	wp		3576750						
ANR	3576957	Symbol	ZLOG_WARNING		3576750						
ANR	3576958	Symbol	* wp		3576750						
ANR	3576959	Symbol	wp -> log_fd		3576750						
ANR	3576960	Symbol	ret		3576750						
ANR	3576961	Symbol	F_GETFD		3576750						
ANR	3576962	Symbol	* wp -> config		3576750						
ANR	3576963	Symbol	FD_CLOEXEC		3576750						
ANR	3576964	Symbol	wp -> config		3576750						
ANR	3576965	Symbol	O_APPEND		3576750						
ANR	3576966	Symbol	wp -> config -> access_log		3576750						
ANR	3576967	Symbol	S_IWUSR		3576750						
ANR	3576968	Symbol	ZLOG_SYSERROR		3576750						
ANR	3576969	Symbol	reopen		3576750						
ANR	3576970	Symbol	O_WRONLY		3576750						
ANR	3576971	Symbol	fd		3576750						
ANR	3576972	Symbol	open		3576750						
ANR	3576973	Function	fpm_log_init_child	72:0:1411:1902							
ANR	3576974	FunctionDef	fpm_log_init_child (struct fpm_worker_pool_s * wp)		3576973	0					
ANR	3576975	CompoundStatement		73:0:1475:1902	3576973	0					
ANR	3576976	IfStatement	if ( ! wp || ! wp -> config )		3576973	0					
ANR	3576977	Condition	! wp || ! wp -> config	74:5:1482:1499	3576973	0	True				
ANR	3576978	OrExpression	! wp || ! wp -> config		3576973	0		||			
ANR	3576979	UnaryOperationExpression	! wp		3576973	0					
ANR	3576980	UnaryOperator	!		3576973	0					
ANR	3576981	Identifier	wp		3576973	1					
ANR	3576982	UnaryOperationExpression	! wp -> config		3576973	1					
ANR	3576983	UnaryOperator	!		3576973	0					
ANR	3576984	PtrMemberAccess	wp -> config		3576973	1					
ANR	3576985	Identifier	wp		3576973	0					
ANR	3576986	Identifier	config		3576973	1					
ANR	3576987	CompoundStatement		2:25:26:26	3576973	1					
ANR	3576988	ReturnStatement	return - 1 ;	75:2:1506:1515	3576973	0	True				
ANR	3576989	UnaryOperationExpression	- 1		3576973	0					
ANR	3576990	UnaryOperator	-		3576973	0					
ANR	3576991	PrimaryExpression	1		3576973	1					
ANR	3576992	IfStatement	if ( wp -> config -> access_log && * wp -> config -> access_log )		3576973	1					
ANR	3576993	Condition	wp -> config -> access_log && * wp -> config -> access_log	78:5:1526:1574	3576973	0	True				
ANR	3576994	AndExpression	wp -> config -> access_log && * wp -> config -> access_log		3576973	0		&&			
ANR	3576995	PtrMemberAccess	wp -> config -> access_log		3576973	0					
ANR	3576996	PtrMemberAccess	wp -> config		3576973	0					
ANR	3576997	Identifier	wp		3576973	0					
ANR	3576998	Identifier	config		3576973	1					
ANR	3576999	Identifier	access_log		3576973	1					
ANR	3577000	UnaryOperationExpression	* wp -> config -> access_log		3576973	1					
ANR	3577001	UnaryOperator	*		3576973	0					
ANR	3577002	PtrMemberAccess	wp -> config -> access_log		3576973	1					
ANR	3577003	PtrMemberAccess	wp -> config		3576973	0					
ANR	3577004	Identifier	wp		3576973	0					
ANR	3577005	Identifier	config		3576973	1					
ANR	3577006	Identifier	access_log		3576973	1					
ANR	3577007	CompoundStatement		6:56:101:101	3576973	1					
ANR	3577008	IfStatement	if ( wp -> config -> access_format )		3576973	0					
ANR	3577009	Condition	wp -> config -> access_format	79:6:1585:1609	3576973	0	True				
ANR	3577010	PtrMemberAccess	wp -> config -> access_format		3576973	0					
ANR	3577011	PtrMemberAccess	wp -> config		3576973	0					
ANR	3577012	Identifier	wp		3576973	0					
ANR	3577013	Identifier	config		3576973	1					
ANR	3577014	Identifier	access_format		3576973	1					
ANR	3577015	CompoundStatement		7:33:136:136	3576973	1					
ANR	3577016	ExpressionStatement	fpm_log_format = strdup ( wp -> config -> access_format )	80:3:1617:1667	3576973	0	True				
ANR	3577017	AssignmentExpression	fpm_log_format = strdup ( wp -> config -> access_format )		3576973	0		=			
ANR	3577018	Identifier	fpm_log_format		3576973	0					
ANR	3577019	CallExpression	strdup ( wp -> config -> access_format )		3576973	1					
ANR	3577020	Callee	strdup		3576973	0					
ANR	3577021	Identifier	strdup		3576973	0					
ANR	3577022	ArgumentList	wp -> config -> access_format		3576973	1					
ANR	3577023	Argument	wp -> config -> access_format		3576973	0					
ANR	3577024	PtrMemberAccess	wp -> config -> access_format		3576973	0					
ANR	3577025	PtrMemberAccess	wp -> config		3576973	0					
ANR	3577026	Identifier	wp		3576973	0					
ANR	3577027	Identifier	config		3576973	1					
ANR	3577028	Identifier	access_format		3576973	1					
ANR	3577029	IfStatement	if ( fpm_log_fd == - 1 )		3576973	2					
ANR	3577030	Condition	fpm_log_fd == - 1	84:5:1682:1697	3576973	0	True				
ANR	3577031	EqualityExpression	fpm_log_fd == - 1		3576973	0		==			
ANR	3577032	Identifier	fpm_log_fd		3576973	0					
ANR	3577033	UnaryOperationExpression	- 1		3576973	1					
ANR	3577034	UnaryOperator	-		3576973	0					
ANR	3577035	PrimaryExpression	1		3576973	1					
ANR	3577036	CompoundStatement		12:23:224:224	3576973	1					
ANR	3577037	ExpressionStatement	fpm_log_fd = wp -> log_fd	85:2:1704:1727	3576973	0	True				
ANR	3577038	AssignmentExpression	fpm_log_fd = wp -> log_fd		3576973	0		=			
ANR	3577039	Identifier	fpm_log_fd		3576973	0					
ANR	3577040	PtrMemberAccess	wp -> log_fd		3576973	1					
ANR	3577041	Identifier	wp		3576973	0					
ANR	3577042	Identifier	log_fd		3576973	1					
ANR	3577043	ForStatement	for ( wp = fpm_worker_all_pools ; wp ; wp = wp -> next )		3576973	3					
ANR	3577044	ForInit	wp = fpm_worker_all_pools ;	89:6:1740:1765	3576973	0	True				
ANR	3577045	AssignmentExpression	wp = fpm_worker_all_pools		3576973	0		=			
ANR	3577046	Identifier	wp		3576973	0					
ANR	3577047	Identifier	fpm_worker_all_pools		3576973	1					
ANR	3577048	Condition	wp	89:33:1767:1768	3576973	1	True				
ANR	3577049	Identifier	wp		3576973	0					
ANR	3577050	AssignmentExpression	wp = wp -> next	89:37:1771:1783	3576973	2	True	=			
ANR	3577051	Identifier	wp		3576973	0					
ANR	3577052	PtrMemberAccess	wp -> next		3576973	1					
ANR	3577053	Identifier	wp		3576973	0					
ANR	3577054	Identifier	next		3576973	1					
ANR	3577055	CompoundStatement		17:52:310:310	3576973	3					
ANR	3577056	IfStatement	if ( wp -> log_fd > - 1 && wp -> log_fd != fpm_log_fd )		3576973	0					
ANR	3577057	Condition	wp -> log_fd > - 1 && wp -> log_fd != fpm_log_fd	90:6:1794:1836	3576973	0	True				
ANR	3577058	AndExpression	wp -> log_fd > - 1 && wp -> log_fd != fpm_log_fd		3576973	0		&&			
ANR	3577059	RelationalExpression	wp -> log_fd > - 1		3576973	0		>			
ANR	3577060	PtrMemberAccess	wp -> log_fd		3576973	0					
ANR	3577061	Identifier	wp		3576973	0					
ANR	3577062	Identifier	log_fd		3576973	1					
ANR	3577063	UnaryOperationExpression	- 1		3576973	1					
ANR	3577064	UnaryOperator	-		3576973	0					
ANR	3577065	PrimaryExpression	1		3576973	1					
ANR	3577066	EqualityExpression	wp -> log_fd != fpm_log_fd		3576973	1		!=			
ANR	3577067	PtrMemberAccess	wp -> log_fd		3576973	0					
ANR	3577068	Identifier	wp		3576973	0					
ANR	3577069	Identifier	log_fd		3576973	1					
ANR	3577070	Identifier	fpm_log_fd		3576973	1					
ANR	3577071	CompoundStatement		18:51:363:363	3576973	1					
ANR	3577072	ExpressionStatement	close ( wp -> log_fd )	91:3:1844:1861	3576973	0	True				
ANR	3577073	CallExpression	close ( wp -> log_fd )		3576973	0					
ANR	3577074	Callee	close		3576973	0					
ANR	3577075	Identifier	close		3576973	0					
ANR	3577076	ArgumentList	wp -> log_fd		3576973	1					
ANR	3577077	Argument	wp -> log_fd		3576973	0					
ANR	3577078	PtrMemberAccess	wp -> log_fd		3576973	0					
ANR	3577079	Identifier	wp		3576973	0					
ANR	3577080	Identifier	log_fd		3576973	1					
ANR	3577081	ExpressionStatement	wp -> log_fd = - 1	92:3:1866:1881	3576973	1	True				
ANR	3577082	AssignmentExpression	wp -> log_fd = - 1		3576973	0		=			
ANR	3577083	PtrMemberAccess	wp -> log_fd		3576973	0					
ANR	3577084	Identifier	wp		3576973	0					
ANR	3577085	Identifier	log_fd		3576973	1					
ANR	3577086	UnaryOperationExpression	- 1		3576973	1					
ANR	3577087	UnaryOperator	-		3576973	0					
ANR	3577088	PrimaryExpression	1		3576973	1					
ANR	3577089	ReturnStatement	return 0 ;	96:1:1892:1900	3576973	4	True				
ANR	3577090	PrimaryExpression	0		3576973	0					
ANR	3577091	ReturnType	int		3576973	1					
ANR	3577092	Identifier	fpm_log_init_child		3576973	2					
ANR	3577093	ParameterList	struct fpm_worker_pool_s * wp		3576973	3					
ANR	3577094	Parameter	struct fpm_worker_pool_s * wp	72:23:1434:1461	3576973	0	True				
ANR	3577095	ParameterType	struct fpm_worker_pool_s *		3576973	0					
ANR	3577096	Identifier	wp		3576973	1					
ANR	3577097	CFGEntryNode	ENTRY		3576973		True				
ANR	3577098	CFGExitNode	EXIT		3576973		True				
ANR	3577099	Symbol	* * * wp		3576973						
ANR	3577100	Symbol	wp -> config -> access_format		3576973						
ANR	3577101	Symbol	* * wp		3576973						
ANR	3577102	Symbol	fpm_worker_all_pools		3576973						
ANR	3577103	Symbol	* wp -> config		3576973						
ANR	3577104	Symbol	wp -> config		3576973						
ANR	3577105	Symbol	fpm_log_format		3576973						
ANR	3577106	Symbol	fpm_log_fd		3576973						
ANR	3577107	Symbol	wp -> next		3576973						
ANR	3577108	Symbol	* * wp -> config		3576973						
ANR	3577109	Symbol	wp -> config -> access_log		3576973						
ANR	3577110	Symbol	* wp -> config -> access_log		3576973						
ANR	3577111	Symbol	wp		3576973						
ANR	3577112	Symbol	strdup		3576973						
ANR	3577113	Symbol	* wp		3576973						
ANR	3577114	Symbol	wp -> log_fd		3576973						
ANR	3577115	Function	fpm_log_write	100:0:1915:11588							
ANR	3577116	FunctionDef	fpm_log_write (char * log_format)		3577115	0					
ANR	3577117	CompoundStatement		101:0:1961:11588	3577115	0					
ANR	3577118	IdentifierDeclStatement	"char * s , * b ;"	102:1:1964:1975	3577115	0	True				
ANR	3577119	IdentifierDecl	* s		3577115	0					
ANR	3577120	IdentifierDeclType	char *		3577115	0					
ANR	3577121	Identifier	s		3577115	1					
ANR	3577122	IdentifierDecl	* b		3577115	1					
ANR	3577123	IdentifierDeclType	char *		3577115	0					
ANR	3577124	Identifier	b		3577115	1					
ANR	3577125	IdentifierDeclStatement	char buffer [ FPM_LOG_BUFFER + 1 ] ;	103:1:1978:2007	3577115	1	True				
ANR	3577126	IdentifierDecl	buffer [ FPM_LOG_BUFFER + 1 ]		3577115	0					
ANR	3577127	IdentifierDeclType	char [ FPM_LOG_BUFFER + 1 ]		3577115	0					
ANR	3577128	Identifier	buffer		3577115	1					
ANR	3577129	AdditiveExpression	FPM_LOG_BUFFER + 1		3577115	2		+			
ANR	3577130	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3577131	PrimaryExpression	1		3577115	1					
ANR	3577132	IdentifierDeclStatement	"int token , test ;"	104:1:2010:2025	3577115	2	True				
ANR	3577133	IdentifierDecl	token		3577115	0					
ANR	3577134	IdentifierDeclType	int		3577115	0					
ANR	3577135	Identifier	token		3577115	1					
ANR	3577136	IdentifierDecl	test		3577115	1					
ANR	3577137	IdentifierDeclType	int		3577115	0					
ANR	3577138	Identifier	test		3577115	1					
ANR	3577139	IdentifierDeclStatement	"size_t len , len2 ;"	105:1:2028:2044	3577115	3	True				
ANR	3577140	IdentifierDecl	len		3577115	0					
ANR	3577141	IdentifierDeclType	size_t		3577115	0					
ANR	3577142	Identifier	len		3577115	1					
ANR	3577143	IdentifierDecl	len2		3577115	1					
ANR	3577144	IdentifierDeclType	size_t		3577115	0					
ANR	3577145	Identifier	len2		3577115	1					
ANR	3577146	IdentifierDeclStatement	"struct fpm_scoreboard_proc_s proc , * proc_p ;"	106:1:2047:2089	3577115	4	True				
ANR	3577147	IdentifierDecl	proc		3577115	0					
ANR	3577148	IdentifierDeclType	struct fpm_scoreboard_proc_s		3577115	0					
ANR	3577149	Identifier	proc		3577115	1					
ANR	3577150	IdentifierDecl	* proc_p		3577115	1					
ANR	3577151	IdentifierDeclType	struct fpm_scoreboard_proc_s *		3577115	0					
ANR	3577152	Identifier	proc_p		3577115	1					
ANR	3577153	IdentifierDeclStatement	struct fpm_scoreboard_s * scoreboard ;	107:1:2092:2127	3577115	5	True				
ANR	3577154	IdentifierDecl	* scoreboard		3577115	0					
ANR	3577155	IdentifierDeclType	struct fpm_scoreboard_s *		3577115	0					
ANR	3577156	Identifier	scoreboard		3577115	1					
ANR	3577157	IdentifierDeclStatement	char tmp [ 129 ] ;	108:1:2130:2143	3577115	6	True				
ANR	3577158	IdentifierDecl	tmp [ 129 ]		3577115	0					
ANR	3577159	IdentifierDeclType	char [ 129 ]		3577115	0					
ANR	3577160	Identifier	tmp		3577115	1					
ANR	3577161	PrimaryExpression	129		3577115	2					
ANR	3577162	IdentifierDeclStatement	char format [ 129 ] ;	109:1:2146:2162	3577115	7	True				
ANR	3577163	IdentifierDecl	format [ 129 ]		3577115	0					
ANR	3577164	IdentifierDeclType	char [ 129 ]		3577115	0					
ANR	3577165	Identifier	format		3577115	1					
ANR	3577166	PrimaryExpression	129		3577115	2					
ANR	3577167	IdentifierDeclStatement	time_t now_epoch ;	110:1:2165:2181	3577115	8	True				
ANR	3577168	IdentifierDecl	now_epoch		3577115	0					
ANR	3577169	IdentifierDeclType	time_t		3577115	0					
ANR	3577170	Identifier	now_epoch		3577115	1					
ANR	3577171	IdentifierDeclStatement	clock_t tms_total ;	112:1:2202:2219	3577115	9	True				
ANR	3577172	IdentifierDecl	tms_total		3577115	0					
ANR	3577173	IdentifierDeclType	clock_t		3577115	0					
ANR	3577174	Identifier	tms_total		3577115	1					
ANR	3577175	IfStatement	if ( ! log_format && ( ! fpm_log_format || fpm_log_fd == - 1 ) )		3577115	10					
ANR	3577176	Condition	! log_format && ( ! fpm_log_format || fpm_log_fd == - 1 )	115:5:2234:2285	3577115	0	True				
ANR	3577177	AndExpression	! log_format && ( ! fpm_log_format || fpm_log_fd == - 1 )		3577115	0		&&			
ANR	3577178	UnaryOperationExpression	! log_format		3577115	0					
ANR	3577179	UnaryOperator	!		3577115	0					
ANR	3577180	Identifier	log_format		3577115	1					
ANR	3577181	OrExpression	! fpm_log_format || fpm_log_fd == - 1		3577115	1		||			
ANR	3577182	UnaryOperationExpression	! fpm_log_format		3577115	0					
ANR	3577183	UnaryOperator	!		3577115	0					
ANR	3577184	Identifier	fpm_log_format		3577115	1					
ANR	3577185	EqualityExpression	fpm_log_fd == - 1		3577115	1		==			
ANR	3577186	Identifier	fpm_log_fd		3577115	0					
ANR	3577187	UnaryOperationExpression	- 1		3577115	1					
ANR	3577188	UnaryOperator	-		3577115	0					
ANR	3577189	PrimaryExpression	1		3577115	1					
ANR	3577190	CompoundStatement		15:59:326:326	3577115	1					
ANR	3577191	ReturnStatement	return - 1 ;	116:2:2292:2301	3577115	0	True				
ANR	3577192	UnaryOperationExpression	- 1		3577115	0					
ANR	3577193	UnaryOperator	-		3577115	0					
ANR	3577194	PrimaryExpression	1		3577115	1					
ANR	3577195	IfStatement	if ( ! log_format )		3577115	11					
ANR	3577196	Condition	! log_format	119:5:2312:2322	3577115	0	True				
ANR	3577197	UnaryOperationExpression	! log_format		3577115	0					
ANR	3577198	UnaryOperator	!		3577115	0					
ANR	3577199	Identifier	log_format		3577115	1					
ANR	3577200	CompoundStatement		19:18:363:363	3577115	1					
ANR	3577201	ExpressionStatement	log_format = fpm_log_format	120:2:2329:2356	3577115	0	True				
ANR	3577202	AssignmentExpression	log_format = fpm_log_format		3577115	0		=			
ANR	3577203	Identifier	log_format		3577115	0					
ANR	3577204	Identifier	fpm_log_format		3577115	1					
ANR	3577205	ExpressionStatement	test = 0	121:2:2360:2368	3577115	1	True				
ANR	3577206	AssignmentExpression	test = 0		3577115	0		=			
ANR	3577207	Identifier	test		3577115	0					
ANR	3577208	PrimaryExpression	0		3577115	1					
ANR	3577209	ElseStatement	else		3577115	0					
ANR	3577210	CompoundStatement		22:8:416:416	3577115	0					
ANR	3577211	ExpressionStatement	test = 1	123:2:2382:2390	3577115	0	True				
ANR	3577212	AssignmentExpression	test = 1		3577115	0		=			
ANR	3577213	Identifier	test		3577115	0					
ANR	3577214	PrimaryExpression	1		3577115	1					
ANR	3577215	ExpressionStatement	now_epoch = time ( NULL )	126:1:2397:2419	3577115	12	True				
ANR	3577216	AssignmentExpression	now_epoch = time ( NULL )		3577115	0		=			
ANR	3577217	Identifier	now_epoch		3577115	0					
ANR	3577218	CallExpression	time ( NULL )		3577115	1					
ANR	3577219	Callee	time		3577115	0					
ANR	3577220	Identifier	time		3577115	0					
ANR	3577221	ArgumentList	NULL		3577115	1					
ANR	3577222	Argument	NULL		3577115	0					
ANR	3577223	Identifier	NULL		3577115	0					
ANR	3577224	IfStatement	if ( ! test )		3577115	13					
ANR	3577225	Condition	! test	128:5:2427:2431	3577115	0	True				
ANR	3577226	UnaryOperationExpression	! test		3577115	0					
ANR	3577227	UnaryOperator	!		3577115	0					
ANR	3577228	Identifier	test		3577115	1					
ANR	3577229	CompoundStatement		28:12:472:472	3577115	1					
ANR	3577230	ExpressionStatement	scoreboard = fpm_scoreboard_get ( )	129:2:2438:2471	3577115	0	True				
ANR	3577231	AssignmentExpression	scoreboard = fpm_scoreboard_get ( )		3577115	0		=			
ANR	3577232	Identifier	scoreboard		3577115	0					
ANR	3577233	CallExpression	fpm_scoreboard_get ( )		3577115	1					
ANR	3577234	Callee	fpm_scoreboard_get		3577115	0					
ANR	3577235	Identifier	fpm_scoreboard_get		3577115	0					
ANR	3577236	ArgumentList			3577115	1					
ANR	3577237	IfStatement	if ( ! scoreboard )		3577115	1					
ANR	3577238	Condition	! scoreboard	130:6:2479:2489	3577115	0	True				
ANR	3577239	UnaryOperationExpression	! scoreboard		3577115	0					
ANR	3577240	UnaryOperator	!		3577115	0					
ANR	3577241	Identifier	scoreboard		3577115	1					
ANR	3577242	CompoundStatement		30:19:530:530	3577115	1					
ANR	3577243	ExpressionStatement	"zlog ( ZLOG_WARNING , ""unable to get scoreboard while preparing the access log"" )"	131:3:2497:2574	3577115	0	True				
ANR	3577244	CallExpression	"zlog ( ZLOG_WARNING , ""unable to get scoreboard while preparing the access log"" )"		3577115	0					
ANR	3577245	Callee	zlog		3577115	0					
ANR	3577246	Identifier	zlog		3577115	0					
ANR	3577247	ArgumentList	ZLOG_WARNING		3577115	1					
ANR	3577248	Argument	ZLOG_WARNING		3577115	0					
ANR	3577249	Identifier	ZLOG_WARNING		3577115	0					
ANR	3577250	Argument	"""unable to get scoreboard while preparing the access log"""		3577115	1					
ANR	3577251	PrimaryExpression	"""unable to get scoreboard while preparing the access log"""		3577115	0					
ANR	3577252	ReturnStatement	return - 1 ;	132:3:2579:2588	3577115	1	True				
ANR	3577253	UnaryOperationExpression	- 1		3577115	0					
ANR	3577254	UnaryOperator	-		3577115	0					
ANR	3577255	PrimaryExpression	1		3577115	1					
ANR	3577256	ExpressionStatement	"proc_p = fpm_scoreboard_proc_acquire ( NULL , - 1 , 0 )"	134:2:2596:2645	3577115	2	True				
ANR	3577257	AssignmentExpression	"proc_p = fpm_scoreboard_proc_acquire ( NULL , - 1 , 0 )"		3577115	0		=			
ANR	3577258	Identifier	proc_p		3577115	0					
ANR	3577259	CallExpression	"fpm_scoreboard_proc_acquire ( NULL , - 1 , 0 )"		3577115	1					
ANR	3577260	Callee	fpm_scoreboard_proc_acquire		3577115	0					
ANR	3577261	Identifier	fpm_scoreboard_proc_acquire		3577115	0					
ANR	3577262	ArgumentList	NULL		3577115	1					
ANR	3577263	Argument	NULL		3577115	0					
ANR	3577264	Identifier	NULL		3577115	0					
ANR	3577265	Argument	- 1		3577115	1					
ANR	3577266	UnaryOperationExpression	- 1		3577115	0					
ANR	3577267	UnaryOperator	-		3577115	0					
ANR	3577268	PrimaryExpression	1		3577115	1					
ANR	3577269	Argument	0		3577115	2					
ANR	3577270	PrimaryExpression	0		3577115	0					
ANR	3577271	IfStatement	if ( ! proc_p )		3577115	3					
ANR	3577272	Condition	! proc_p	135:6:2653:2659	3577115	0	True				
ANR	3577273	UnaryOperationExpression	! proc_p		3577115	0					
ANR	3577274	UnaryOperator	!		3577115	0					
ANR	3577275	Identifier	proc_p		3577115	1					
ANR	3577276	CompoundStatement		35:15:700:700	3577115	1					
ANR	3577277	ExpressionStatement	"zlog ( ZLOG_WARNING , ""[pool %s] Unable to acquire shm slot while preparing the access log"" , scoreboard -> pool )"	136:3:2667:2774	3577115	0	True				
ANR	3577278	CallExpression	"zlog ( ZLOG_WARNING , ""[pool %s] Unable to acquire shm slot while preparing the access log"" , scoreboard -> pool )"		3577115	0					
ANR	3577279	Callee	zlog		3577115	0					
ANR	3577280	Identifier	zlog		3577115	0					
ANR	3577281	ArgumentList	ZLOG_WARNING		3577115	1					
ANR	3577282	Argument	ZLOG_WARNING		3577115	0					
ANR	3577283	Identifier	ZLOG_WARNING		3577115	0					
ANR	3577284	Argument	"""[pool %s] Unable to acquire shm slot while preparing the access log"""		3577115	1					
ANR	3577285	PrimaryExpression	"""[pool %s] Unable to acquire shm slot while preparing the access log"""		3577115	0					
ANR	3577286	Argument	scoreboard -> pool		3577115	2					
ANR	3577287	PtrMemberAccess	scoreboard -> pool		3577115	0					
ANR	3577288	Identifier	scoreboard		3577115	0					
ANR	3577289	Identifier	pool		3577115	1					
ANR	3577290	ReturnStatement	return - 1 ;	137:3:2779:2788	3577115	1	True				
ANR	3577291	UnaryOperationExpression	- 1		3577115	0					
ANR	3577292	UnaryOperator	-		3577115	0					
ANR	3577293	PrimaryExpression	1		3577115	1					
ANR	3577294	ExpressionStatement	proc = * proc_p	139:2:2796:2810	3577115	4	True				
ANR	3577295	AssignmentExpression	proc = * proc_p		3577115	0		=			
ANR	3577296	Identifier	proc		3577115	0					
ANR	3577297	UnaryOperationExpression	* proc_p		3577115	1					
ANR	3577298	UnaryOperator	*		3577115	0					
ANR	3577299	Identifier	proc_p		3577115	1					
ANR	3577300	ExpressionStatement	fpm_scoreboard_proc_release ( proc_p )	140:2:2814:2849	3577115	5	True				
ANR	3577301	CallExpression	fpm_scoreboard_proc_release ( proc_p )		3577115	0					
ANR	3577302	Callee	fpm_scoreboard_proc_release		3577115	0					
ANR	3577303	Identifier	fpm_scoreboard_proc_release		3577115	0					
ANR	3577304	ArgumentList	proc_p		3577115	1					
ANR	3577305	Argument	proc_p		3577115	0					
ANR	3577306	Identifier	proc_p		3577115	0					
ANR	3577307	ExpressionStatement	token = 0	143:1:2856:2865	3577115	14	True				
ANR	3577308	AssignmentExpression	token = 0		3577115	0		=			
ANR	3577309	Identifier	token		3577115	0					
ANR	3577310	PrimaryExpression	0		3577115	1					
ANR	3577311	ExpressionStatement	"memset ( buffer , '\\0' , sizeof ( buffer ) )"	145:1:2869:2905	3577115	15	True				
ANR	3577312	CallExpression	"memset ( buffer , '\\0' , sizeof ( buffer ) )"		3577115	0					
ANR	3577313	Callee	memset		3577115	0					
ANR	3577314	Identifier	memset		3577115	0					
ANR	3577315	ArgumentList	buffer		3577115	1					
ANR	3577316	Argument	buffer		3577115	0					
ANR	3577317	Identifier	buffer		3577115	0					
ANR	3577318	Argument	'\\0'		3577115	1					
ANR	3577319	PrimaryExpression	'\\0'		3577115	0					
ANR	3577320	Argument	sizeof ( buffer )		3577115	2					
ANR	3577321	SizeofExpression	sizeof ( buffer )		3577115	0					
ANR	3577322	Sizeof	sizeof		3577115	0					
ANR	3577323	SizeofOperand	buffer		3577115	1					
ANR	3577324	ExpressionStatement	b = buffer	146:1:2908:2918	3577115	16	True				
ANR	3577325	AssignmentExpression	b = buffer		3577115	0		=			
ANR	3577326	Identifier	b		3577115	0					
ANR	3577327	Identifier	buffer		3577115	1					
ANR	3577328	ExpressionStatement	len = 0	147:1:2921:2928	3577115	17	True				
ANR	3577329	AssignmentExpression	len = 0		3577115	0		=			
ANR	3577330	Identifier	len		3577115	0					
ANR	3577331	PrimaryExpression	0		3577115	1					
ANR	3577332	ExpressionStatement	s = log_format	150:1:2933:2947	3577115	18	True				
ANR	3577333	AssignmentExpression	s = log_format		3577115	0		=			
ANR	3577334	Identifier	s		3577115	0					
ANR	3577335	Identifier	log_format		3577115	1					
ANR	3577336	WhileStatement	while ( * s != '\\0' )		3577115	19					
ANR	3577337	Condition	* s != '\\0'	152:8:2958:2967	3577115	0	True				
ANR	3577338	EqualityExpression	* s != '\\0'		3577115	0		!=			
ANR	3577339	UnaryOperationExpression	* s		3577115	0					
ANR	3577340	UnaryOperator	*		3577115	0					
ANR	3577341	Identifier	s		3577115	1					
ANR	3577342	PrimaryExpression	'\\0'		3577115	1					
ANR	3577343	CompoundStatement		52:20:1008:1008	3577115	1					
ANR	3577344	IfStatement	if ( len >= FPM_LOG_BUFFER )		3577115	0					
ANR	3577345	Condition	len >= FPM_LOG_BUFFER	154:6:3025:3045	3577115	0	True				
ANR	3577346	RelationalExpression	len >= FPM_LOG_BUFFER		3577115	0		>=			
ANR	3577347	Identifier	len		3577115	0					
ANR	3577348	Identifier	FPM_LOG_BUFFER		3577115	1					
ANR	3577349	CompoundStatement		54:29:1086:1086	3577115	1					
ANR	3577350	ExpressionStatement	"zlog ( ZLOG_NOTICE , ""the log buffer is full (%d). The access log request has been truncated."" , FPM_LOG_BUFFER )"	155:3:3053:3161	3577115	0	True				
ANR	3577351	CallExpression	"zlog ( ZLOG_NOTICE , ""the log buffer is full (%d). The access log request has been truncated."" , FPM_LOG_BUFFER )"		3577115	0					
ANR	3577352	Callee	zlog		3577115	0					
ANR	3577353	Identifier	zlog		3577115	0					
ANR	3577354	ArgumentList	ZLOG_NOTICE		3577115	1					
ANR	3577355	Argument	ZLOG_NOTICE		3577115	0					
ANR	3577356	Identifier	ZLOG_NOTICE		3577115	0					
ANR	3577357	Argument	"""the log buffer is full (%d). The access log request has been truncated."""		3577115	1					
ANR	3577358	PrimaryExpression	"""the log buffer is full (%d). The access log request has been truncated."""		3577115	0					
ANR	3577359	Argument	FPM_LOG_BUFFER		3577115	2					
ANR	3577360	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3577361	ExpressionStatement	len = FPM_LOG_BUFFER	156:3:3166:3186	3577115	1	True				
ANR	3577362	AssignmentExpression	len = FPM_LOG_BUFFER		3577115	0		=			
ANR	3577363	Identifier	len		3577115	0					
ANR	3577364	Identifier	FPM_LOG_BUFFER		3577115	1					
ANR	3577365	BreakStatement	break ;	157:3:3191:3196	3577115	2	True				
ANR	3577366	IfStatement	if ( ! token && * s == '%' )		3577115	1					
ANR	3577367	Condition	! token && * s == '%'	160:6:3209:3227	3577115	0	True				
ANR	3577368	AndExpression	! token && * s == '%'		3577115	0		&&			
ANR	3577369	UnaryOperationExpression	! token		3577115	0					
ANR	3577370	UnaryOperator	!		3577115	0					
ANR	3577371	Identifier	token		3577115	1					
ANR	3577372	EqualityExpression	* s == '%'		3577115	1		==			
ANR	3577373	UnaryOperationExpression	* s		3577115	0					
ANR	3577374	UnaryOperator	*		3577115	0					
ANR	3577375	Identifier	s		3577115	1					
ANR	3577376	PrimaryExpression	'%'		3577115	1					
ANR	3577377	CompoundStatement		60:27:1268:1268	3577115	1					
ANR	3577378	ExpressionStatement	token = 1	161:3:3235:3244	3577115	0	True				
ANR	3577379	AssignmentExpression	token = 1		3577115	0		=			
ANR	3577380	Identifier	token		3577115	0					
ANR	3577381	PrimaryExpression	1		3577115	1					
ANR	3577382	ExpressionStatement	"memset ( format , '\\0' , sizeof ( format ) )"	162:3:3249:3285	3577115	1	True				
ANR	3577383	CallExpression	"memset ( format , '\\0' , sizeof ( format ) )"		3577115	0					
ANR	3577384	Callee	memset		3577115	0					
ANR	3577385	Identifier	memset		3577115	0					
ANR	3577386	ArgumentList	format		3577115	1					
ANR	3577387	Argument	format		3577115	0					
ANR	3577388	Identifier	format		3577115	0					
ANR	3577389	Argument	'\\0'		3577115	1					
ANR	3577390	PrimaryExpression	'\\0'		3577115	0					
ANR	3577391	Argument	sizeof ( format )		3577115	2					
ANR	3577392	SizeofExpression	sizeof ( format )		3577115	0					
ANR	3577393	Sizeof	sizeof		3577115	0					
ANR	3577394	SizeofOperand	format		3577115	1					
ANR	3577395	ExpressionStatement	s ++	163:3:3309:3312	3577115	2	True				
ANR	3577396	PostIncDecOperationExpression	s ++		3577115	0					
ANR	3577397	Identifier	s		3577115	0					
ANR	3577398	IncDec	++		3577115	1					
ANR	3577399	ContinueStatement	continue ;	164:3:3317:3325	3577115	3	True				
ANR	3577400	IfStatement	if ( token )		3577115	2					
ANR	3577401	Condition	token	167:6:3338:3342	3577115	0	True				
ANR	3577402	Identifier	token		3577115	0					
ANR	3577403	CompoundStatement		67:13:1383:1383	3577115	1					
ANR	3577404	ExpressionStatement	token = 0	168:3:3350:3359	3577115	0	True				
ANR	3577405	AssignmentExpression	token = 0		3577115	0		=			
ANR	3577406	Identifier	token		3577115	0					
ANR	3577407	PrimaryExpression	0		3577115	1					
ANR	3577408	ExpressionStatement	len2 = 0	169:3:3364:3372	3577115	1	True				
ANR	3577409	AssignmentExpression	len2 = 0		3577115	0		=			
ANR	3577410	Identifier	len2		3577115	0					
ANR	3577411	PrimaryExpression	0		3577115	1					
ANR	3577412	SwitchStatement	switch ( * s )		3577115	2					
ANR	3577413	Condition	* s	170:11:3385:3386	3577115	0	True				
ANR	3577414	UnaryOperationExpression	* s		3577115	0					
ANR	3577415	UnaryOperator	*		3577115	0					
ANR	3577416	Identifier	s		3577115	1					
ANR	3577417	CompoundStatement		70:15:1427:1427	3577115	1					
ANR	3577418	Label	case '%' :	172:4:3396:3404	3577115	0	True				
ANR	3577419	ExpressionStatement	* b = '%'	173:5:3421:3429	3577115	1	True				
ANR	3577420	AssignmentExpression	* b = '%'		3577115	0		=			
ANR	3577421	UnaryOperationExpression	* b		3577115	0					
ANR	3577422	UnaryOperator	*		3577115	0					
ANR	3577423	Identifier	b		3577115	1					
ANR	3577424	PrimaryExpression	'%'		3577115	1					
ANR	3577425	ExpressionStatement	len2 = 1	174:5:3436:3444	3577115	2	True				
ANR	3577426	AssignmentExpression	len2 = 1		3577115	0		=			
ANR	3577427	Identifier	len2		3577115	0					
ANR	3577428	PrimaryExpression	1		3577115	1					
ANR	3577429	BreakStatement	break ;	175:5:3451:3456	3577115	3	True				
ANR	3577430	Label	case 'C' :	178:4:3481:3489	3577115	4	True				
ANR	3577431	IfStatement	"if ( format [ 0 ] == '\\0' || ! strcasecmp ( format , ""total"" ) )"		3577115	5					
ANR	3577432	Condition	"format [ 0 ] == '\\0' || ! strcasecmp ( format , ""total"" )"	179:9:3511:3559	3577115	0	True				
ANR	3577433	OrExpression	"format [ 0 ] == '\\0' || ! strcasecmp ( format , ""total"" )"		3577115	0		||			
ANR	3577434	EqualityExpression	format [ 0 ] == '\\0'		3577115	0		==			
ANR	3577435	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3577436	Identifier	format		3577115	0					
ANR	3577437	PrimaryExpression	0		3577115	1					
ANR	3577438	PrimaryExpression	'\\0'		3577115	1					
ANR	3577439	UnaryOperationExpression	"! strcasecmp ( format , ""total"" )"		3577115	1					
ANR	3577440	UnaryOperator	!		3577115	0					
ANR	3577441	CallExpression	"strcasecmp ( format , ""total"" )"		3577115	1					
ANR	3577442	Callee	strcasecmp		3577115	0					
ANR	3577443	Identifier	strcasecmp		3577115	0					
ANR	3577444	ArgumentList	format		3577115	1					
ANR	3577445	Argument	format		3577115	0					
ANR	3577446	Identifier	format		3577115	0					
ANR	3577447	Argument	"""total"""		3577115	1					
ANR	3577448	PrimaryExpression	"""total"""		3577115	0					
ANR	3577449	CompoundStatement		79:60:1600:1600	3577115	1					
ANR	3577450	IfStatement	if ( ! test )		3577115	0					
ANR	3577451	Condition	! test	180:10:3574:3578	3577115	0	True				
ANR	3577452	UnaryOperationExpression	! test		3577115	0					
ANR	3577453	UnaryOperator	!		3577115	0					
ANR	3577454	Identifier	test		3577115	1					
ANR	3577455	CompoundStatement		80:17:1619:1619	3577115	1					
ANR	3577456	ExpressionStatement	tms_total = proc . last_request_cpu . tms_utime + proc . last_request_cpu . tms_stime + proc . last_request_cpu . tms_cutime + proc . last_request_cpu . tms_cstime	181:7:3590:3737	3577115	0	True				
ANR	3577457	AssignmentExpression	tms_total = proc . last_request_cpu . tms_utime + proc . last_request_cpu . tms_stime + proc . last_request_cpu . tms_cutime + proc . last_request_cpu . tms_cstime		3577115	0		=			
ANR	3577458	Identifier	tms_total		3577115	0					
ANR	3577459	AdditiveExpression	proc . last_request_cpu . tms_utime + proc . last_request_cpu . tms_stime + proc . last_request_cpu . tms_cutime + proc . last_request_cpu . tms_cstime		3577115	1		+			
ANR	3577460	MemberAccess	proc . last_request_cpu . tms_utime		3577115	0					
ANR	3577461	MemberAccess	proc . last_request_cpu		3577115	0					
ANR	3577462	Identifier	proc		3577115	0					
ANR	3577463	Identifier	last_request_cpu		3577115	1					
ANR	3577464	Identifier	tms_utime		3577115	1					
ANR	3577465	AdditiveExpression	proc . last_request_cpu . tms_stime + proc . last_request_cpu . tms_cutime + proc . last_request_cpu . tms_cstime		3577115	1		+			
ANR	3577466	MemberAccess	proc . last_request_cpu . tms_stime		3577115	0					
ANR	3577467	MemberAccess	proc . last_request_cpu		3577115	0					
ANR	3577468	Identifier	proc		3577115	0					
ANR	3577469	Identifier	last_request_cpu		3577115	1					
ANR	3577470	Identifier	tms_stime		3577115	1					
ANR	3577471	AdditiveExpression	proc . last_request_cpu . tms_cutime + proc . last_request_cpu . tms_cstime		3577115	1		+			
ANR	3577472	MemberAccess	proc . last_request_cpu . tms_cutime		3577115	0					
ANR	3577473	MemberAccess	proc . last_request_cpu		3577115	0					
ANR	3577474	Identifier	proc		3577115	0					
ANR	3577475	Identifier	last_request_cpu		3577115	1					
ANR	3577476	Identifier	tms_cutime		3577115	1					
ANR	3577477	MemberAccess	proc . last_request_cpu . tms_cstime		3577115	1					
ANR	3577478	MemberAccess	proc . last_request_cpu		3577115	0					
ANR	3577479	Identifier	proc		3577115	0					
ANR	3577480	Identifier	last_request_cpu		3577115	1					
ANR	3577481	Identifier	tms_cstime		3577115	1					
ANR	3577482	ElseStatement	else		3577115	0					
ANR	3577483	IfStatement	"if ( ! strcasecmp ( format , ""user"" ) )"		3577115	0					
ANR	3577484	Condition	"! strcasecmp ( format , ""user"" )"	183:16:3763:3789	3577115	0	True				
ANR	3577485	UnaryOperationExpression	"! strcasecmp ( format , ""user"" )"		3577115	0					
ANR	3577486	UnaryOperator	!		3577115	0					
ANR	3577487	CallExpression	"strcasecmp ( format , ""user"" )"		3577115	1					
ANR	3577488	Callee	strcasecmp		3577115	0					
ANR	3577489	Identifier	strcasecmp		3577115	0					
ANR	3577490	ArgumentList	format		3577115	1					
ANR	3577491	Argument	format		3577115	0					
ANR	3577492	Identifier	format		3577115	0					
ANR	3577493	Argument	"""user"""		3577115	1					
ANR	3577494	PrimaryExpression	"""user"""		3577115	0					
ANR	3577495	CompoundStatement		83:45:1830:1830	3577115	1					
ANR	3577496	IfStatement	if ( ! test )		3577115	0					
ANR	3577497	Condition	! test	184:10:3804:3808	3577115	0	True				
ANR	3577498	UnaryOperationExpression	! test		3577115	0					
ANR	3577499	UnaryOperator	!		3577115	0					
ANR	3577500	Identifier	test		3577115	1					
ANR	3577501	CompoundStatement		84:17:1849:1849	3577115	1					
ANR	3577502	ExpressionStatement	tms_total = proc . last_request_cpu . tms_utime + proc . last_request_cpu . tms_cutime	185:7:3820:3898	3577115	0	True				
ANR	3577503	AssignmentExpression	tms_total = proc . last_request_cpu . tms_utime + proc . last_request_cpu . tms_cutime		3577115	0		=			
ANR	3577504	Identifier	tms_total		3577115	0					
ANR	3577505	AdditiveExpression	proc . last_request_cpu . tms_utime + proc . last_request_cpu . tms_cutime		3577115	1		+			
ANR	3577506	MemberAccess	proc . last_request_cpu . tms_utime		3577115	0					
ANR	3577507	MemberAccess	proc . last_request_cpu		3577115	0					
ANR	3577508	Identifier	proc		3577115	0					
ANR	3577509	Identifier	last_request_cpu		3577115	1					
ANR	3577510	Identifier	tms_utime		3577115	1					
ANR	3577511	MemberAccess	proc . last_request_cpu . tms_cutime		3577115	1					
ANR	3577512	MemberAccess	proc . last_request_cpu		3577115	0					
ANR	3577513	Identifier	proc		3577115	0					
ANR	3577514	Identifier	last_request_cpu		3577115	1					
ANR	3577515	Identifier	tms_cutime		3577115	1					
ANR	3577516	ElseStatement	else		3577115	0					
ANR	3577517	IfStatement	"if ( ! strcasecmp ( format , ""system"" ) )"		3577115	0					
ANR	3577518	Condition	"! strcasecmp ( format , ""system"" )"	187:16:3924:3952	3577115	0	True				
ANR	3577519	UnaryOperationExpression	"! strcasecmp ( format , ""system"" )"		3577115	0					
ANR	3577520	UnaryOperator	!		3577115	0					
ANR	3577521	CallExpression	"strcasecmp ( format , ""system"" )"		3577115	1					
ANR	3577522	Callee	strcasecmp		3577115	0					
ANR	3577523	Identifier	strcasecmp		3577115	0					
ANR	3577524	ArgumentList	format		3577115	1					
ANR	3577525	Argument	format		3577115	0					
ANR	3577526	Identifier	format		3577115	0					
ANR	3577527	Argument	"""system"""		3577115	1					
ANR	3577528	PrimaryExpression	"""system"""		3577115	0					
ANR	3577529	CompoundStatement		87:47:1993:1993	3577115	1					
ANR	3577530	IfStatement	if ( ! test )		3577115	0					
ANR	3577531	Condition	! test	188:10:3967:3971	3577115	0	True				
ANR	3577532	UnaryOperationExpression	! test		3577115	0					
ANR	3577533	UnaryOperator	!		3577115	0					
ANR	3577534	Identifier	test		3577115	1					
ANR	3577535	CompoundStatement		88:17:2012:2012	3577115	1					
ANR	3577536	ExpressionStatement	tms_total = proc . last_request_cpu . tms_stime + proc . last_request_cpu . tms_cstime	189:7:3983:4061	3577115	0	True				
ANR	3577537	AssignmentExpression	tms_total = proc . last_request_cpu . tms_stime + proc . last_request_cpu . tms_cstime		3577115	0		=			
ANR	3577538	Identifier	tms_total		3577115	0					
ANR	3577539	AdditiveExpression	proc . last_request_cpu . tms_stime + proc . last_request_cpu . tms_cstime		3577115	1		+			
ANR	3577540	MemberAccess	proc . last_request_cpu . tms_stime		3577115	0					
ANR	3577541	MemberAccess	proc . last_request_cpu		3577115	0					
ANR	3577542	Identifier	proc		3577115	0					
ANR	3577543	Identifier	last_request_cpu		3577115	1					
ANR	3577544	Identifier	tms_stime		3577115	1					
ANR	3577545	MemberAccess	proc . last_request_cpu . tms_cstime		3577115	1					
ANR	3577546	MemberAccess	proc . last_request_cpu		3577115	0					
ANR	3577547	Identifier	proc		3577115	0					
ANR	3577548	Identifier	last_request_cpu		3577115	1					
ANR	3577549	Identifier	tms_cstime		3577115	1					
ANR	3577550	ElseStatement	else		3577115	0					
ANR	3577551	CompoundStatement		91:12:2121:2121	3577115	0					
ANR	3577552	ExpressionStatement	"zlog ( ZLOG_WARNING , ""only 'total', 'user' or 'system' are allowed as a modifier for %%%c ('%s')"" , * s , format )"	192:6:4091:4199	3577115	0	True				
ANR	3577553	CallExpression	"zlog ( ZLOG_WARNING , ""only 'total', 'user' or 'system' are allowed as a modifier for %%%c ('%s')"" , * s , format )"		3577115	0					
ANR	3577554	Callee	zlog		3577115	0					
ANR	3577555	Identifier	zlog		3577115	0					
ANR	3577556	ArgumentList	ZLOG_WARNING		3577115	1					
ANR	3577557	Argument	ZLOG_WARNING		3577115	0					
ANR	3577558	Identifier	ZLOG_WARNING		3577115	0					
ANR	3577559	Argument	"""only 'total', 'user' or 'system' are allowed as a modifier for %%%c ('%s')"""		3577115	1					
ANR	3577560	PrimaryExpression	"""only 'total', 'user' or 'system' are allowed as a modifier for %%%c ('%s')"""		3577115	0					
ANR	3577561	Argument	* s		3577115	2					
ANR	3577562	UnaryOperationExpression	* s		3577115	0					
ANR	3577563	UnaryOperator	*		3577115	0					
ANR	3577564	Identifier	s		3577115	1					
ANR	3577565	Argument	format		3577115	3					
ANR	3577566	Identifier	format		3577115	0					
ANR	3577567	ReturnStatement	return - 1 ;	193:6:4207:4216	3577115	1	True				
ANR	3577568	UnaryOperationExpression	- 1		3577115	0					
ANR	3577569	UnaryOperator	-		3577115	0					
ANR	3577570	PrimaryExpression	1		3577115	1					
ANR	3577571	ExpressionStatement	format [ 0 ] = '\\0'	196:5:4231:4247	3577115	6	True				
ANR	3577572	AssignmentExpression	format [ 0 ] = '\\0'		3577115	0		=			
ANR	3577573	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3577574	Identifier	format		3577115	0					
ANR	3577575	PrimaryExpression	0		3577115	1					
ANR	3577576	PrimaryExpression	'\\0'		3577115	1					
ANR	3577577	IfStatement	if ( ! test )		3577115	7					
ANR	3577578	Condition	! test	197:9:4258:4262	3577115	0	True				
ANR	3577579	UnaryOperationExpression	! test		3577115	0					
ANR	3577580	UnaryOperator	!		3577115	0					
ANR	3577581	Identifier	test		3577115	1					
ANR	3577582	CompoundStatement		97:16:2303:2303	3577115	1					
ANR	3577583	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%.2f"" , tms_total / fpm_scoreboard_get_tick ( ) / ( proc . cpu_duration . tv_sec + proc . cpu_duration . tv_usec / 1000000. ) * 100. )"	198:6:4273:4435	3577115	0	True				
ANR	3577584	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%.2f"" , tms_total / fpm_scoreboard_get_tick ( ) / ( proc . cpu_duration . tv_sec + proc . cpu_duration . tv_usec / 1000000. ) * 100. )"		3577115	0		=			
ANR	3577585	Identifier	len2		3577115	0					
ANR	3577586	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%.2f"" , tms_total / fpm_scoreboard_get_tick ( ) / ( proc . cpu_duration . tv_sec + proc . cpu_duration . tv_usec / 1000000. ) * 100. )"		3577115	1					
ANR	3577587	Callee	snprintf		3577115	0					
ANR	3577588	Identifier	snprintf		3577115	0					
ANR	3577589	ArgumentList	b		3577115	1					
ANR	3577590	Argument	b		3577115	0					
ANR	3577591	Identifier	b		3577115	0					
ANR	3577592	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3577593	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3577594	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3577595	Identifier	len		3577115	1					
ANR	3577596	Argument	"""%.2f"""		3577115	2					
ANR	3577597	PrimaryExpression	"""%.2f"""		3577115	0					
ANR	3577598	Argument	tms_total / fpm_scoreboard_get_tick ( ) / ( proc . cpu_duration . tv_sec + proc . cpu_duration . tv_usec / 1000000. ) * 100.		3577115	3					
ANR	3577599	MultiplicativeExpression	tms_total / fpm_scoreboard_get_tick ( ) / ( proc . cpu_duration . tv_sec + proc . cpu_duration . tv_usec / 1000000. ) * 100.		3577115	0		/			
ANR	3577600	Identifier	tms_total		3577115	0					
ANR	3577601	MultiplicativeExpression	fpm_scoreboard_get_tick ( ) / ( proc . cpu_duration . tv_sec + proc . cpu_duration . tv_usec / 1000000. ) * 100.		3577115	1		/			
ANR	3577602	CallExpression	fpm_scoreboard_get_tick ( )		3577115	0					
ANR	3577603	Callee	fpm_scoreboard_get_tick		3577115	0					
ANR	3577604	Identifier	fpm_scoreboard_get_tick		3577115	0					
ANR	3577605	ArgumentList			3577115	1					
ANR	3577606	MultiplicativeExpression	( proc . cpu_duration . tv_sec + proc . cpu_duration . tv_usec / 1000000. ) * 100.		3577115	1		*			
ANR	3577607	AdditiveExpression	proc . cpu_duration . tv_sec + proc . cpu_duration . tv_usec / 1000000.		3577115	0		+			
ANR	3577608	MemberAccess	proc . cpu_duration . tv_sec		3577115	0					
ANR	3577609	MemberAccess	proc . cpu_duration		3577115	0					
ANR	3577610	Identifier	proc		3577115	0					
ANR	3577611	Identifier	cpu_duration		3577115	1					
ANR	3577612	Identifier	tv_sec		3577115	1					
ANR	3577613	MultiplicativeExpression	proc . cpu_duration . tv_usec / 1000000.		3577115	1		/			
ANR	3577614	MemberAccess	proc . cpu_duration . tv_usec		3577115	0					
ANR	3577615	MemberAccess	proc . cpu_duration		3577115	0					
ANR	3577616	Identifier	proc		3577115	0					
ANR	3577617	Identifier	cpu_duration		3577115	1					
ANR	3577618	Identifier	tv_usec		3577115	1					
ANR	3577619	PrimaryExpression	1000000.		3577115	1					
ANR	3577620	PrimaryExpression	100.		3577115	1					
ANR	3577621	BreakStatement	break ;	200:5:4449:4454	3577115	8	True				
ANR	3577622	Label	case 'd' :	203:4:4468:4476	3577115	9	True				
ANR	3577623	IfStatement	"if ( format [ 0 ] == '\\0' || ! strcasecmp ( format , ""seconds"" ) )"		3577115	10					
ANR	3577624	Condition	"format [ 0 ] == '\\0' || ! strcasecmp ( format , ""seconds"" )"	205:9:4525:4575	3577115	0	True				
ANR	3577625	OrExpression	"format [ 0 ] == '\\0' || ! strcasecmp ( format , ""seconds"" )"		3577115	0		||			
ANR	3577626	EqualityExpression	format [ 0 ] == '\\0'		3577115	0		==			
ANR	3577627	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3577628	Identifier	format		3577115	0					
ANR	3577629	PrimaryExpression	0		3577115	1					
ANR	3577630	PrimaryExpression	'\\0'		3577115	1					
ANR	3577631	UnaryOperationExpression	"! strcasecmp ( format , ""seconds"" )"		3577115	1					
ANR	3577632	UnaryOperator	!		3577115	0					
ANR	3577633	CallExpression	"strcasecmp ( format , ""seconds"" )"		3577115	1					
ANR	3577634	Callee	strcasecmp		3577115	0					
ANR	3577635	Identifier	strcasecmp		3577115	0					
ANR	3577636	ArgumentList	format		3577115	1					
ANR	3577637	Argument	format		3577115	0					
ANR	3577638	Identifier	format		3577115	0					
ANR	3577639	Argument	"""seconds"""		3577115	1					
ANR	3577640	PrimaryExpression	"""seconds"""		3577115	0					
ANR	3577641	CompoundStatement		105:62:2616:2616	3577115	1					
ANR	3577642	IfStatement	if ( ! test )		3577115	0					
ANR	3577643	Condition	! test	206:10:4590:4594	3577115	0	True				
ANR	3577644	UnaryOperationExpression	! test		3577115	0					
ANR	3577645	UnaryOperator	!		3577115	0					
ANR	3577646	Identifier	test		3577115	1					
ANR	3577647	CompoundStatement		106:17:2635:2635	3577115	1					
ANR	3577648	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%.3f"" , proc . duration . tv_sec + proc . duration . tv_usec / 1000000. )"	207:7:4606:4711	3577115	0	True				
ANR	3577649	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%.3f"" , proc . duration . tv_sec + proc . duration . tv_usec / 1000000. )"		3577115	0		=			
ANR	3577650	Identifier	len2		3577115	0					
ANR	3577651	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%.3f"" , proc . duration . tv_sec + proc . duration . tv_usec / 1000000. )"		3577115	1					
ANR	3577652	Callee	snprintf		3577115	0					
ANR	3577653	Identifier	snprintf		3577115	0					
ANR	3577654	ArgumentList	b		3577115	1					
ANR	3577655	Argument	b		3577115	0					
ANR	3577656	Identifier	b		3577115	0					
ANR	3577657	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3577658	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3577659	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3577660	Identifier	len		3577115	1					
ANR	3577661	Argument	"""%.3f"""		3577115	2					
ANR	3577662	PrimaryExpression	"""%.3f"""		3577115	0					
ANR	3577663	Argument	proc . duration . tv_sec + proc . duration . tv_usec / 1000000.		3577115	3					
ANR	3577664	AdditiveExpression	proc . duration . tv_sec + proc . duration . tv_usec / 1000000.		3577115	0		+			
ANR	3577665	MemberAccess	proc . duration . tv_sec		3577115	0					
ANR	3577666	MemberAccess	proc . duration		3577115	0					
ANR	3577667	Identifier	proc		3577115	0					
ANR	3577668	Identifier	duration		3577115	1					
ANR	3577669	Identifier	tv_sec		3577115	1					
ANR	3577670	MultiplicativeExpression	proc . duration . tv_usec / 1000000.		3577115	1		/			
ANR	3577671	MemberAccess	proc . duration . tv_usec		3577115	0					
ANR	3577672	MemberAccess	proc . duration		3577115	0					
ANR	3577673	Identifier	proc		3577115	0					
ANR	3577674	Identifier	duration		3577115	1					
ANR	3577675	Identifier	tv_usec		3577115	1					
ANR	3577676	PrimaryExpression	1000000.		3577115	1					
ANR	3577677	ElseStatement	else		3577115	0					
ANR	3577678	IfStatement	"if ( ! strcasecmp ( format , ""miliseconds"" ) || ! strcasecmp ( format , ""mili"" ) )"		3577115	0					
ANR	3577679	Condition	"! strcasecmp ( format , ""miliseconds"" ) || ! strcasecmp ( format , ""mili"" )"	211:16:4761:4825	3577115	0	True				
ANR	3577680	OrExpression	"! strcasecmp ( format , ""miliseconds"" ) || ! strcasecmp ( format , ""mili"" )"		3577115	0		||			
ANR	3577681	UnaryOperationExpression	"! strcasecmp ( format , ""miliseconds"" )"		3577115	0					
ANR	3577682	UnaryOperator	!		3577115	0					
ANR	3577683	CallExpression	"strcasecmp ( format , ""miliseconds"" )"		3577115	1					
ANR	3577684	Callee	strcasecmp		3577115	0					
ANR	3577685	Identifier	strcasecmp		3577115	0					
ANR	3577686	ArgumentList	format		3577115	1					
ANR	3577687	Argument	format		3577115	0					
ANR	3577688	Identifier	format		3577115	0					
ANR	3577689	Argument	"""miliseconds"""		3577115	1					
ANR	3577690	PrimaryExpression	"""miliseconds"""		3577115	0					
ANR	3577691	UnaryOperationExpression	"! strcasecmp ( format , ""mili"" )"		3577115	1					
ANR	3577692	UnaryOperator	!		3577115	0					
ANR	3577693	CallExpression	"strcasecmp ( format , ""mili"" )"		3577115	1					
ANR	3577694	Callee	strcasecmp		3577115	0					
ANR	3577695	Identifier	strcasecmp		3577115	0					
ANR	3577696	ArgumentList	format		3577115	1					
ANR	3577697	Argument	format		3577115	0					
ANR	3577698	Identifier	format		3577115	0					
ANR	3577699	Argument	"""mili"""		3577115	1					
ANR	3577700	PrimaryExpression	"""mili"""		3577115	0					
ANR	3577701	CompoundStatement		111:83:2866:2866	3577115	1					
ANR	3577702	IfStatement	if ( ! test )		3577115	0					
ANR	3577703	Condition	! test	212:10:4840:4844	3577115	0	True				
ANR	3577704	UnaryOperationExpression	! test		3577115	0					
ANR	3577705	UnaryOperator	!		3577115	0					
ANR	3577706	Identifier	test		3577115	1					
ANR	3577707	CompoundStatement		112:17:2885:2885	3577115	1					
ANR	3577708	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%.3f"" , proc . duration . tv_sec * 1000. + proc . duration . tv_usec / 1000. )"	213:7:4856:4966	3577115	0	True				
ANR	3577709	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%.3f"" , proc . duration . tv_sec * 1000. + proc . duration . tv_usec / 1000. )"		3577115	0		=			
ANR	3577710	Identifier	len2		3577115	0					
ANR	3577711	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%.3f"" , proc . duration . tv_sec * 1000. + proc . duration . tv_usec / 1000. )"		3577115	1					
ANR	3577712	Callee	snprintf		3577115	0					
ANR	3577713	Identifier	snprintf		3577115	0					
ANR	3577714	ArgumentList	b		3577115	1					
ANR	3577715	Argument	b		3577115	0					
ANR	3577716	Identifier	b		3577115	0					
ANR	3577717	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3577718	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3577719	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3577720	Identifier	len		3577115	1					
ANR	3577721	Argument	"""%.3f"""		3577115	2					
ANR	3577722	PrimaryExpression	"""%.3f"""		3577115	0					
ANR	3577723	Argument	proc . duration . tv_sec * 1000. + proc . duration . tv_usec / 1000.		3577115	3					
ANR	3577724	AdditiveExpression	proc . duration . tv_sec * 1000. + proc . duration . tv_usec / 1000.		3577115	0		+			
ANR	3577725	MultiplicativeExpression	proc . duration . tv_sec * 1000.		3577115	0		*			
ANR	3577726	MemberAccess	proc . duration . tv_sec		3577115	0					
ANR	3577727	MemberAccess	proc . duration		3577115	0					
ANR	3577728	Identifier	proc		3577115	0					
ANR	3577729	Identifier	duration		3577115	1					
ANR	3577730	Identifier	tv_sec		3577115	1					
ANR	3577731	PrimaryExpression	1000.		3577115	1					
ANR	3577732	MultiplicativeExpression	proc . duration . tv_usec / 1000.		3577115	1		/			
ANR	3577733	MemberAccess	proc . duration . tv_usec		3577115	0					
ANR	3577734	MemberAccess	proc . duration		3577115	0					
ANR	3577735	Identifier	proc		3577115	0					
ANR	3577736	Identifier	duration		3577115	1					
ANR	3577737	Identifier	tv_usec		3577115	1					
ANR	3577738	PrimaryExpression	1000.		3577115	1					
ANR	3577739	ElseStatement	else		3577115	0					
ANR	3577740	IfStatement	"if ( ! strcasecmp ( format , ""microseconds"" ) || ! strcasecmp ( format , ""micro"" ) )"		3577115	0					
ANR	3577741	Condition	"! strcasecmp ( format , ""microseconds"" ) || ! strcasecmp ( format , ""micro"" )"	217:16:5017:5083	3577115	0	True				
ANR	3577742	OrExpression	"! strcasecmp ( format , ""microseconds"" ) || ! strcasecmp ( format , ""micro"" )"		3577115	0		||			
ANR	3577743	UnaryOperationExpression	"! strcasecmp ( format , ""microseconds"" )"		3577115	0					
ANR	3577744	UnaryOperator	!		3577115	0					
ANR	3577745	CallExpression	"strcasecmp ( format , ""microseconds"" )"		3577115	1					
ANR	3577746	Callee	strcasecmp		3577115	0					
ANR	3577747	Identifier	strcasecmp		3577115	0					
ANR	3577748	ArgumentList	format		3577115	1					
ANR	3577749	Argument	format		3577115	0					
ANR	3577750	Identifier	format		3577115	0					
ANR	3577751	Argument	"""microseconds"""		3577115	1					
ANR	3577752	PrimaryExpression	"""microseconds"""		3577115	0					
ANR	3577753	UnaryOperationExpression	"! strcasecmp ( format , ""micro"" )"		3577115	1					
ANR	3577754	UnaryOperator	!		3577115	0					
ANR	3577755	CallExpression	"strcasecmp ( format , ""micro"" )"		3577115	1					
ANR	3577756	Callee	strcasecmp		3577115	0					
ANR	3577757	Identifier	strcasecmp		3577115	0					
ANR	3577758	ArgumentList	format		3577115	1					
ANR	3577759	Argument	format		3577115	0					
ANR	3577760	Identifier	format		3577115	0					
ANR	3577761	Argument	"""micro"""		3577115	1					
ANR	3577762	PrimaryExpression	"""micro"""		3577115	0					
ANR	3577763	CompoundStatement		117:85:3124:3124	3577115	1					
ANR	3577764	IfStatement	if ( ! test )		3577115	0					
ANR	3577765	Condition	! test	218:10:5098:5102	3577115	0	True				
ANR	3577766	UnaryOperationExpression	! test		3577115	0					
ANR	3577767	UnaryOperator	!		3577115	0					
ANR	3577768	Identifier	test		3577115	1					
ANR	3577769	CompoundStatement		118:17:3143:3143	3577115	1					
ANR	3577770	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%lu"" , proc . duration . tv_sec * 1000000UL + proc . duration . tv_usec )"	219:7:5114:5219	3577115	0	True				
ANR	3577771	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%lu"" , proc . duration . tv_sec * 1000000UL + proc . duration . tv_usec )"		3577115	0		=			
ANR	3577772	Identifier	len2		3577115	0					
ANR	3577773	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%lu"" , proc . duration . tv_sec * 1000000UL + proc . duration . tv_usec )"		3577115	1					
ANR	3577774	Callee	snprintf		3577115	0					
ANR	3577775	Identifier	snprintf		3577115	0					
ANR	3577776	ArgumentList	b		3577115	1					
ANR	3577777	Argument	b		3577115	0					
ANR	3577778	Identifier	b		3577115	0					
ANR	3577779	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3577780	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3577781	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3577782	Identifier	len		3577115	1					
ANR	3577783	Argument	"""%lu"""		3577115	2					
ANR	3577784	PrimaryExpression	"""%lu"""		3577115	0					
ANR	3577785	Argument	proc . duration . tv_sec * 1000000UL + proc . duration . tv_usec		3577115	3					
ANR	3577786	AdditiveExpression	proc . duration . tv_sec * 1000000UL + proc . duration . tv_usec		3577115	0		+			
ANR	3577787	MultiplicativeExpression	proc . duration . tv_sec * 1000000UL		3577115	0		*			
ANR	3577788	MemberAccess	proc . duration . tv_sec		3577115	0					
ANR	3577789	MemberAccess	proc . duration		3577115	0					
ANR	3577790	Identifier	proc		3577115	0					
ANR	3577791	Identifier	duration		3577115	1					
ANR	3577792	Identifier	tv_sec		3577115	1					
ANR	3577793	PrimaryExpression	1000000UL		3577115	1					
ANR	3577794	MemberAccess	proc . duration . tv_usec		3577115	1					
ANR	3577795	MemberAccess	proc . duration		3577115	0					
ANR	3577796	Identifier	proc		3577115	0					
ANR	3577797	Identifier	duration		3577115	1					
ANR	3577798	Identifier	tv_usec		3577115	1					
ANR	3577799	ElseStatement	else		3577115	0					
ANR	3577800	CompoundStatement		122:12:3280:3280	3577115	0					
ANR	3577801	ExpressionStatement	"zlog ( ZLOG_WARNING , ""only 'seconds', 'mili', 'miliseconds', 'micro' or 'microseconds' are allowed as a modifier for %%%c ('%s')"" , * s , format )"	223:6:5250:5390	3577115	0	True				
ANR	3577802	CallExpression	"zlog ( ZLOG_WARNING , ""only 'seconds', 'mili', 'miliseconds', 'micro' or 'microseconds' are allowed as a modifier for %%%c ('%s')"" , * s , format )"		3577115	0					
ANR	3577803	Callee	zlog		3577115	0					
ANR	3577804	Identifier	zlog		3577115	0					
ANR	3577805	ArgumentList	ZLOG_WARNING		3577115	1					
ANR	3577806	Argument	ZLOG_WARNING		3577115	0					
ANR	3577807	Identifier	ZLOG_WARNING		3577115	0					
ANR	3577808	Argument	"""only 'seconds', 'mili', 'miliseconds', 'micro' or 'microseconds' are allowed as a modifier for %%%c ('%s')"""		3577115	1					
ANR	3577809	PrimaryExpression	"""only 'seconds', 'mili', 'miliseconds', 'micro' or 'microseconds' are allowed as a modifier for %%%c ('%s')"""		3577115	0					
ANR	3577810	Argument	* s		3577115	2					
ANR	3577811	UnaryOperationExpression	* s		3577115	0					
ANR	3577812	UnaryOperator	*		3577115	0					
ANR	3577813	Identifier	s		3577115	1					
ANR	3577814	Argument	format		3577115	3					
ANR	3577815	Identifier	format		3577115	0					
ANR	3577816	ReturnStatement	return - 1 ;	224:6:5398:5407	3577115	1	True				
ANR	3577817	UnaryOperationExpression	- 1		3577115	0					
ANR	3577818	UnaryOperator	-		3577115	0					
ANR	3577819	PrimaryExpression	1		3577115	1					
ANR	3577820	ExpressionStatement	format [ 0 ] = '\\0'	226:5:5421:5437	3577115	11	True				
ANR	3577821	AssignmentExpression	format [ 0 ] = '\\0'		3577115	0		=			
ANR	3577822	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3577823	Identifier	format		3577115	0					
ANR	3577824	PrimaryExpression	0		3577115	1					
ANR	3577825	PrimaryExpression	'\\0'		3577115	1					
ANR	3577826	BreakStatement	break ;	227:5:5444:5449	3577115	12	True				
ANR	3577827	Label	case 'e' :	229:4:5456:5464	3577115	13	True				
ANR	3577828	IfStatement	if ( format [ 0 ] == '\\0' )		3577115	14					
ANR	3577829	Condition	format [ 0 ] == '\\0'	230:9:5494:5510	3577115	0	True				
ANR	3577830	EqualityExpression	format [ 0 ] == '\\0'		3577115	0		==			
ANR	3577831	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3577832	Identifier	format		3577115	0					
ANR	3577833	PrimaryExpression	0		3577115	1					
ANR	3577834	PrimaryExpression	'\\0'		3577115	1					
ANR	3577835	CompoundStatement		130:28:3551:3551	3577115	1					
ANR	3577836	ExpressionStatement	"zlog ( ZLOG_WARNING , ""the name of the environment variable must be set between embraces for %%%c"" , * s )"	231:6:5521:5621	3577115	0	True				
ANR	3577837	CallExpression	"zlog ( ZLOG_WARNING , ""the name of the environment variable must be set between embraces for %%%c"" , * s )"		3577115	0					
ANR	3577838	Callee	zlog		3577115	0					
ANR	3577839	Identifier	zlog		3577115	0					
ANR	3577840	ArgumentList	ZLOG_WARNING		3577115	1					
ANR	3577841	Argument	ZLOG_WARNING		3577115	0					
ANR	3577842	Identifier	ZLOG_WARNING		3577115	0					
ANR	3577843	Argument	"""the name of the environment variable must be set between embraces for %%%c"""		3577115	1					
ANR	3577844	PrimaryExpression	"""the name of the environment variable must be set between embraces for %%%c"""		3577115	0					
ANR	3577845	Argument	* s		3577115	2					
ANR	3577846	UnaryOperationExpression	* s		3577115	0					
ANR	3577847	UnaryOperator	*		3577115	0					
ANR	3577848	Identifier	s		3577115	1					
ANR	3577849	ReturnStatement	return - 1 ;	232:6:5629:5638	3577115	1	True				
ANR	3577850	UnaryOperationExpression	- 1		3577115	0					
ANR	3577851	UnaryOperator	-		3577115	0					
ANR	3577852	PrimaryExpression	1		3577115	1					
ANR	3577853	IfStatement	if ( ! test )		3577115	15					
ANR	3577854	Condition	! test	235:9:5657:5661	3577115	0	True				
ANR	3577855	UnaryOperationExpression	! test		3577115	0					
ANR	3577856	UnaryOperator	!		3577115	0					
ANR	3577857	Identifier	test		3577115	1					
ANR	3577858	CompoundStatement		136:6:3710:3793	3577115	1					
ANR	3577859	IdentifierDeclStatement	"char * env = fcgi_getenv ( ( fcgi_request * ) SG ( server_context ) , format , strlen ( format ) ) ;"	236:6:5672:5755	3577115	0	True				
ANR	3577860	IdentifierDecl	"* env = fcgi_getenv ( ( fcgi_request * ) SG ( server_context ) , format , strlen ( format ) )"		3577115	0					
ANR	3577861	IdentifierDeclType	char *		3577115	0					
ANR	3577862	Identifier	env		3577115	1					
ANR	3577863	AssignmentExpression	"* env = fcgi_getenv ( ( fcgi_request * ) SG ( server_context ) , format , strlen ( format ) )"		3577115	2		=			
ANR	3577864	Identifier	env		3577115	0					
ANR	3577865	CallExpression	"fcgi_getenv ( ( fcgi_request * ) SG ( server_context ) , format , strlen ( format ) )"		3577115	1					
ANR	3577866	Callee	fcgi_getenv		3577115	0					
ANR	3577867	Identifier	fcgi_getenv		3577115	0					
ANR	3577868	ArgumentList	( fcgi_request * ) SG ( server_context )		3577115	1					
ANR	3577869	Argument	( fcgi_request * ) SG ( server_context )		3577115	0					
ANR	3577870	CastExpression	( fcgi_request * ) SG ( server_context )		3577115	0					
ANR	3577871	CastTarget	fcgi_request *		3577115	0					
ANR	3577872	CallExpression	SG ( server_context )		3577115	1					
ANR	3577873	Callee	SG		3577115	0					
ANR	3577874	Identifier	SG		3577115	0					
ANR	3577875	ArgumentList	server_context		3577115	1					
ANR	3577876	Argument	server_context		3577115	0					
ANR	3577877	Identifier	server_context		3577115	0					
ANR	3577878	Argument	format		3577115	1					
ANR	3577879	Identifier	format		3577115	0					
ANR	3577880	Argument	strlen ( format )		3577115	2					
ANR	3577881	CallExpression	strlen ( format )		3577115	0					
ANR	3577882	Callee	strlen		3577115	0					
ANR	3577883	Identifier	strlen		3577115	0					
ANR	3577884	ArgumentList	format		3577115	1					
ANR	3577885	Argument	format		3577115	0					
ANR	3577886	Identifier	format		3577115	0					
ANR	3577887	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , env ? env : ""-"" )"	237:6:5763:5826	3577115	1	True				
ANR	3577888	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , env ? env : ""-"" )"		3577115	0		=			
ANR	3577889	Identifier	len2		3577115	0					
ANR	3577890	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , env ? env : ""-"" )"		3577115	1					
ANR	3577891	Callee	snprintf		3577115	0					
ANR	3577892	Identifier	snprintf		3577115	0					
ANR	3577893	ArgumentList	b		3577115	1					
ANR	3577894	Argument	b		3577115	0					
ANR	3577895	Identifier	b		3577115	0					
ANR	3577896	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3577897	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3577898	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3577899	Identifier	len		3577115	1					
ANR	3577900	Argument	"""%s"""		3577115	2					
ANR	3577901	PrimaryExpression	"""%s"""		3577115	0					
ANR	3577902	Argument	"env ? env : ""-"""		3577115	3					
ANR	3577903	ConditionalExpression	"env ? env : ""-"""		3577115	0					
ANR	3577904	Condition	env		3577115	0					
ANR	3577905	Identifier	env		3577115	0					
ANR	3577906	Identifier	env		3577115	1					
ANR	3577907	PrimaryExpression	"""-"""		3577115	2					
ANR	3577908	ExpressionStatement	format [ 0 ] = '\\0'	239:5:5840:5856	3577115	16	True				
ANR	3577909	AssignmentExpression	format [ 0 ] = '\\0'		3577115	0		=			
ANR	3577910	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3577911	Identifier	format		3577115	0					
ANR	3577912	PrimaryExpression	0		3577115	1					
ANR	3577913	PrimaryExpression	'\\0'		3577115	1					
ANR	3577914	BreakStatement	break ;	240:5:5863:5868	3577115	17	True				
ANR	3577915	Label	case 'f' :	242:4:5875:5883	3577115	18	True				
ANR	3577916	IfStatement	if ( ! test )		3577115	19					
ANR	3577917	Condition	! test	243:9:5907:5911	3577115	0	True				
ANR	3577918	UnaryOperationExpression	! test		3577115	0					
ANR	3577919	UnaryOperator	!		3577115	0					
ANR	3577920	Identifier	test		3577115	1					
ANR	3577921	CompoundStatement		143:16:3952:3952	3577115	1					
ANR	3577922	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , * proc . script_filename ? proc . script_filename : ""-"" )"	244:6:5922:6021	3577115	0	True				
ANR	3577923	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , * proc . script_filename ? proc . script_filename : ""-"" )"		3577115	0		=			
ANR	3577924	Identifier	len2		3577115	0					
ANR	3577925	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , * proc . script_filename ? proc . script_filename : ""-"" )"		3577115	1					
ANR	3577926	Callee	snprintf		3577115	0					
ANR	3577927	Identifier	snprintf		3577115	0					
ANR	3577928	ArgumentList	b		3577115	1					
ANR	3577929	Argument	b		3577115	0					
ANR	3577930	Identifier	b		3577115	0					
ANR	3577931	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3577932	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3577933	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3577934	Identifier	len		3577115	1					
ANR	3577935	Argument	"""%s"""		3577115	2					
ANR	3577936	PrimaryExpression	"""%s"""		3577115	0					
ANR	3577937	Argument	"* proc . script_filename ? proc . script_filename : ""-"""		3577115	3					
ANR	3577938	ConditionalExpression	"* proc . script_filename ? proc . script_filename : ""-"""		3577115	0					
ANR	3577939	Condition	* proc . script_filename		3577115	0					
ANR	3577940	UnaryOperationExpression	* proc . script_filename		3577115	0					
ANR	3577941	UnaryOperator	*		3577115	0					
ANR	3577942	MemberAccess	proc . script_filename		3577115	1					
ANR	3577943	Identifier	proc		3577115	0					
ANR	3577944	Identifier	script_filename		3577115	1					
ANR	3577945	MemberAccess	proc . script_filename		3577115	1					
ANR	3577946	Identifier	proc		3577115	0					
ANR	3577947	Identifier	script_filename		3577115	1					
ANR	3577948	PrimaryExpression	"""-"""		3577115	2					
ANR	3577949	BreakStatement	break ;	246:5:6035:6040	3577115	20	True				
ANR	3577950	Label	case 'l' :	248:4:6047:6055	3577115	21	True				
ANR	3577951	IfStatement	if ( ! test )		3577115	22					
ANR	3577952	Condition	! test	249:9:6087:6091	3577115	0	True				
ANR	3577953	UnaryOperationExpression	! test		3577115	0					
ANR	3577954	UnaryOperator	!		3577115	0					
ANR	3577955	Identifier	test		3577115	1					
ANR	3577956	CompoundStatement		149:16:4132:4132	3577115	1					
ANR	3577957	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%zu"" , proc . content_length )"	250:6:6102:6170	3577115	0	True				
ANR	3577958	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%zu"" , proc . content_length )"		3577115	0		=			
ANR	3577959	Identifier	len2		3577115	0					
ANR	3577960	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%zu"" , proc . content_length )"		3577115	1					
ANR	3577961	Callee	snprintf		3577115	0					
ANR	3577962	Identifier	snprintf		3577115	0					
ANR	3577963	ArgumentList	b		3577115	1					
ANR	3577964	Argument	b		3577115	0					
ANR	3577965	Identifier	b		3577115	0					
ANR	3577966	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3577967	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3577968	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3577969	Identifier	len		3577115	1					
ANR	3577970	Argument	"""%zu"""		3577115	2					
ANR	3577971	PrimaryExpression	"""%zu"""		3577115	0					
ANR	3577972	Argument	proc . content_length		3577115	3					
ANR	3577973	MemberAccess	proc . content_length		3577115	0					
ANR	3577974	Identifier	proc		3577115	0					
ANR	3577975	Identifier	content_length		3577115	1					
ANR	3577976	BreakStatement	break ;	252:5:6184:6189	3577115	23	True				
ANR	3577977	Label	case 'm' :	254:4:6196:6204	3577115	24	True				
ANR	3577978	IfStatement	if ( ! test )		3577115	25					
ANR	3577979	Condition	! test	255:9:6228:6232	3577115	0	True				
ANR	3577980	UnaryOperationExpression	! test		3577115	0					
ANR	3577981	UnaryOperator	!		3577115	0					
ANR	3577982	Identifier	test		3577115	1					
ANR	3577983	CompoundStatement		155:16:4273:4273	3577115	1					
ANR	3577984	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , * proc . request_method ? proc . request_method : ""-"" )"	256:6:6243:6339	3577115	0	True				
ANR	3577985	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , * proc . request_method ? proc . request_method : ""-"" )"		3577115	0		=			
ANR	3577986	Identifier	len2		3577115	0					
ANR	3577987	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , * proc . request_method ? proc . request_method : ""-"" )"		3577115	1					
ANR	3577988	Callee	snprintf		3577115	0					
ANR	3577989	Identifier	snprintf		3577115	0					
ANR	3577990	ArgumentList	b		3577115	1					
ANR	3577991	Argument	b		3577115	0					
ANR	3577992	Identifier	b		3577115	0					
ANR	3577993	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3577994	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3577995	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3577996	Identifier	len		3577115	1					
ANR	3577997	Argument	"""%s"""		3577115	2					
ANR	3577998	PrimaryExpression	"""%s"""		3577115	0					
ANR	3577999	Argument	"* proc . request_method ? proc . request_method : ""-"""		3577115	3					
ANR	3578000	ConditionalExpression	"* proc . request_method ? proc . request_method : ""-"""		3577115	0					
ANR	3578001	Condition	* proc . request_method		3577115	0					
ANR	3578002	UnaryOperationExpression	* proc . request_method		3577115	0					
ANR	3578003	UnaryOperator	*		3577115	0					
ANR	3578004	MemberAccess	proc . request_method		3577115	1					
ANR	3578005	Identifier	proc		3577115	0					
ANR	3578006	Identifier	request_method		3577115	1					
ANR	3578007	MemberAccess	proc . request_method		3577115	1					
ANR	3578008	Identifier	proc		3577115	0					
ANR	3578009	Identifier	request_method		3577115	1					
ANR	3578010	PrimaryExpression	"""-"""		3577115	2					
ANR	3578011	BreakStatement	break ;	258:5:6353:6358	3577115	26	True				
ANR	3578012	Label	case 'M' :	260:4:6365:6373	3577115	27	True				
ANR	3578013	IfStatement	"if ( format [ 0 ] == '\\0' || ! strcasecmp ( format , ""bytes"" ) )"		3577115	28					
ANR	3578014	Condition	"format [ 0 ] == '\\0' || ! strcasecmp ( format , ""bytes"" )"	262:9:6416:6464	3577115	0	True				
ANR	3578015	OrExpression	"format [ 0 ] == '\\0' || ! strcasecmp ( format , ""bytes"" )"		3577115	0		||			
ANR	3578016	EqualityExpression	format [ 0 ] == '\\0'		3577115	0		==			
ANR	3578017	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3578018	Identifier	format		3577115	0					
ANR	3578019	PrimaryExpression	0		3577115	1					
ANR	3578020	PrimaryExpression	'\\0'		3577115	1					
ANR	3578021	UnaryOperationExpression	"! strcasecmp ( format , ""bytes"" )"		3577115	1					
ANR	3578022	UnaryOperator	!		3577115	0					
ANR	3578023	CallExpression	"strcasecmp ( format , ""bytes"" )"		3577115	1					
ANR	3578024	Callee	strcasecmp		3577115	0					
ANR	3578025	Identifier	strcasecmp		3577115	0					
ANR	3578026	ArgumentList	format		3577115	1					
ANR	3578027	Argument	format		3577115	0					
ANR	3578028	Identifier	format		3577115	0					
ANR	3578029	Argument	"""bytes"""		3577115	1					
ANR	3578030	PrimaryExpression	"""bytes"""		3577115	0					
ANR	3578031	CompoundStatement		162:60:4505:4505	3577115	1					
ANR	3578032	IfStatement	if ( ! test )		3577115	0					
ANR	3578033	Condition	! test	263:10:6479:6483	3577115	0	True				
ANR	3578034	UnaryOperationExpression	! test		3577115	0					
ANR	3578035	UnaryOperator	!		3577115	0					
ANR	3578036	Identifier	test		3577115	1					
ANR	3578037	CompoundStatement		163:17:4524:4524	3577115	1					
ANR	3578038	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%zu"" , proc . memory )"	264:7:6495:6555	3577115	0	True				
ANR	3578039	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%zu"" , proc . memory )"		3577115	0		=			
ANR	3578040	Identifier	len2		3577115	0					
ANR	3578041	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%zu"" , proc . memory )"		3577115	1					
ANR	3578042	Callee	snprintf		3577115	0					
ANR	3578043	Identifier	snprintf		3577115	0					
ANR	3578044	ArgumentList	b		3577115	1					
ANR	3578045	Argument	b		3577115	0					
ANR	3578046	Identifier	b		3577115	0					
ANR	3578047	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578048	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578049	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578050	Identifier	len		3577115	1					
ANR	3578051	Argument	"""%zu"""		3577115	2					
ANR	3578052	PrimaryExpression	"""%zu"""		3577115	0					
ANR	3578053	Argument	proc . memory		3577115	3					
ANR	3578054	MemberAccess	proc . memory		3577115	0					
ANR	3578055	Identifier	proc		3577115	0					
ANR	3578056	Identifier	memory		3577115	1					
ANR	3578057	ElseStatement	else		3577115	0					
ANR	3578058	IfStatement	"if ( ! strcasecmp ( format , ""kilobytes"" ) || ! strcasecmp ( format , ""kilo"" ) )"		3577115	0					
ANR	3578059	Condition	"! strcasecmp ( format , ""kilobytes"" ) || ! strcasecmp ( format , ""kilo"" )"	268:16:6603:6665	3577115	0	True				
ANR	3578060	OrExpression	"! strcasecmp ( format , ""kilobytes"" ) || ! strcasecmp ( format , ""kilo"" )"		3577115	0		||			
ANR	3578061	UnaryOperationExpression	"! strcasecmp ( format , ""kilobytes"" )"		3577115	0					
ANR	3578062	UnaryOperator	!		3577115	0					
ANR	3578063	CallExpression	"strcasecmp ( format , ""kilobytes"" )"		3577115	1					
ANR	3578064	Callee	strcasecmp		3577115	0					
ANR	3578065	Identifier	strcasecmp		3577115	0					
ANR	3578066	ArgumentList	format		3577115	1					
ANR	3578067	Argument	format		3577115	0					
ANR	3578068	Identifier	format		3577115	0					
ANR	3578069	Argument	"""kilobytes"""		3577115	1					
ANR	3578070	PrimaryExpression	"""kilobytes"""		3577115	0					
ANR	3578071	UnaryOperationExpression	"! strcasecmp ( format , ""kilo"" )"		3577115	1					
ANR	3578072	UnaryOperator	!		3577115	0					
ANR	3578073	CallExpression	"strcasecmp ( format , ""kilo"" )"		3577115	1					
ANR	3578074	Callee	strcasecmp		3577115	0					
ANR	3578075	Identifier	strcasecmp		3577115	0					
ANR	3578076	ArgumentList	format		3577115	1					
ANR	3578077	Argument	format		3577115	0					
ANR	3578078	Identifier	format		3577115	0					
ANR	3578079	Argument	"""kilo"""		3577115	1					
ANR	3578080	PrimaryExpression	"""kilo"""		3577115	0					
ANR	3578081	CompoundStatement		168:81:4706:4706	3577115	1					
ANR	3578082	IfStatement	if ( ! test )		3577115	0					
ANR	3578083	Condition	! test	269:10:6680:6684	3577115	0	True				
ANR	3578084	UnaryOperationExpression	! test		3577115	0					
ANR	3578085	UnaryOperator	!		3577115	0					
ANR	3578086	Identifier	test		3577115	1					
ANR	3578087	CompoundStatement		169:17:4725:4725	3577115	1					
ANR	3578088	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%lu"" , proc . memory / 1024 )"	270:7:6696:6763	3577115	0	True				
ANR	3578089	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%lu"" , proc . memory / 1024 )"		3577115	0		=			
ANR	3578090	Identifier	len2		3577115	0					
ANR	3578091	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%lu"" , proc . memory / 1024 )"		3577115	1					
ANR	3578092	Callee	snprintf		3577115	0					
ANR	3578093	Identifier	snprintf		3577115	0					
ANR	3578094	ArgumentList	b		3577115	1					
ANR	3578095	Argument	b		3577115	0					
ANR	3578096	Identifier	b		3577115	0					
ANR	3578097	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578098	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578099	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578100	Identifier	len		3577115	1					
ANR	3578101	Argument	"""%lu"""		3577115	2					
ANR	3578102	PrimaryExpression	"""%lu"""		3577115	0					
ANR	3578103	Argument	proc . memory / 1024		3577115	3					
ANR	3578104	MultiplicativeExpression	proc . memory / 1024		3577115	0		/			
ANR	3578105	MemberAccess	proc . memory		3577115	0					
ANR	3578106	Identifier	proc		3577115	0					
ANR	3578107	Identifier	memory		3577115	1					
ANR	3578108	PrimaryExpression	1024		3577115	1					
ANR	3578109	ElseStatement	else		3577115	0					
ANR	3578110	IfStatement	"if ( ! strcasecmp ( format , ""megabytes"" ) || ! strcasecmp ( format , ""mega"" ) )"		3577115	0					
ANR	3578111	Condition	"! strcasecmp ( format , ""megabytes"" ) || ! strcasecmp ( format , ""mega"" )"	274:16:6811:6873	3577115	0	True				
ANR	3578112	OrExpression	"! strcasecmp ( format , ""megabytes"" ) || ! strcasecmp ( format , ""mega"" )"		3577115	0		||			
ANR	3578113	UnaryOperationExpression	"! strcasecmp ( format , ""megabytes"" )"		3577115	0					
ANR	3578114	UnaryOperator	!		3577115	0					
ANR	3578115	CallExpression	"strcasecmp ( format , ""megabytes"" )"		3577115	1					
ANR	3578116	Callee	strcasecmp		3577115	0					
ANR	3578117	Identifier	strcasecmp		3577115	0					
ANR	3578118	ArgumentList	format		3577115	1					
ANR	3578119	Argument	format		3577115	0					
ANR	3578120	Identifier	format		3577115	0					
ANR	3578121	Argument	"""megabytes"""		3577115	1					
ANR	3578122	PrimaryExpression	"""megabytes"""		3577115	0					
ANR	3578123	UnaryOperationExpression	"! strcasecmp ( format , ""mega"" )"		3577115	1					
ANR	3578124	UnaryOperator	!		3577115	0					
ANR	3578125	CallExpression	"strcasecmp ( format , ""mega"" )"		3577115	1					
ANR	3578126	Callee	strcasecmp		3577115	0					
ANR	3578127	Identifier	strcasecmp		3577115	0					
ANR	3578128	ArgumentList	format		3577115	1					
ANR	3578129	Argument	format		3577115	0					
ANR	3578130	Identifier	format		3577115	0					
ANR	3578131	Argument	"""mega"""		3577115	1					
ANR	3578132	PrimaryExpression	"""mega"""		3577115	0					
ANR	3578133	CompoundStatement		174:81:4914:4914	3577115	1					
ANR	3578134	IfStatement	if ( ! test )		3577115	0					
ANR	3578135	Condition	! test	275:10:6888:6892	3577115	0	True				
ANR	3578136	UnaryOperationExpression	! test		3577115	0					
ANR	3578137	UnaryOperator	!		3577115	0					
ANR	3578138	Identifier	test		3577115	1					
ANR	3578139	CompoundStatement		175:17:4933:4933	3577115	1					
ANR	3578140	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%lu"" , proc . memory / 1024 / 1024 )"	276:7:6904:6978	3577115	0	True				
ANR	3578141	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%lu"" , proc . memory / 1024 / 1024 )"		3577115	0		=			
ANR	3578142	Identifier	len2		3577115	0					
ANR	3578143	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%lu"" , proc . memory / 1024 / 1024 )"		3577115	1					
ANR	3578144	Callee	snprintf		3577115	0					
ANR	3578145	Identifier	snprintf		3577115	0					
ANR	3578146	ArgumentList	b		3577115	1					
ANR	3578147	Argument	b		3577115	0					
ANR	3578148	Identifier	b		3577115	0					
ANR	3578149	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578150	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578151	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578152	Identifier	len		3577115	1					
ANR	3578153	Argument	"""%lu"""		3577115	2					
ANR	3578154	PrimaryExpression	"""%lu"""		3577115	0					
ANR	3578155	Argument	proc . memory / 1024 / 1024		3577115	3					
ANR	3578156	MultiplicativeExpression	proc . memory / 1024 / 1024		3577115	0		/			
ANR	3578157	MemberAccess	proc . memory		3577115	0					
ANR	3578158	Identifier	proc		3577115	0					
ANR	3578159	Identifier	memory		3577115	1					
ANR	3578160	MultiplicativeExpression	1024 / 1024		3577115	1		/			
ANR	3578161	PrimaryExpression	1024		3577115	0					
ANR	3578162	PrimaryExpression	1024		3577115	1					
ANR	3578163	ElseStatement	else		3577115	0					
ANR	3578164	CompoundStatement		179:12:5039:5039	3577115	0					
ANR	3578165	ExpressionStatement	"zlog ( ZLOG_WARNING , ""only 'bytes', 'kilo', 'kilobytes', 'mega' or 'megabytes' are allowed as a modifier for %%%c ('%s')"" , * s , format )"	280:6:7009:7141	3577115	0	True				
ANR	3578166	CallExpression	"zlog ( ZLOG_WARNING , ""only 'bytes', 'kilo', 'kilobytes', 'mega' or 'megabytes' are allowed as a modifier for %%%c ('%s')"" , * s , format )"		3577115	0					
ANR	3578167	Callee	zlog		3577115	0					
ANR	3578168	Identifier	zlog		3577115	0					
ANR	3578169	ArgumentList	ZLOG_WARNING		3577115	1					
ANR	3578170	Argument	ZLOG_WARNING		3577115	0					
ANR	3578171	Identifier	ZLOG_WARNING		3577115	0					
ANR	3578172	Argument	"""only 'bytes', 'kilo', 'kilobytes', 'mega' or 'megabytes' are allowed as a modifier for %%%c ('%s')"""		3577115	1					
ANR	3578173	PrimaryExpression	"""only 'bytes', 'kilo', 'kilobytes', 'mega' or 'megabytes' are allowed as a modifier for %%%c ('%s')"""		3577115	0					
ANR	3578174	Argument	* s		3577115	2					
ANR	3578175	UnaryOperationExpression	* s		3577115	0					
ANR	3578176	UnaryOperator	*		3577115	0					
ANR	3578177	Identifier	s		3577115	1					
ANR	3578178	Argument	format		3577115	3					
ANR	3578179	Identifier	format		3577115	0					
ANR	3578180	ReturnStatement	return - 1 ;	281:6:7149:7158	3577115	1	True				
ANR	3578181	UnaryOperationExpression	- 1		3577115	0					
ANR	3578182	UnaryOperator	-		3577115	0					
ANR	3578183	PrimaryExpression	1		3577115	1					
ANR	3578184	ExpressionStatement	format [ 0 ] = '\\0'	283:5:7172:7188	3577115	29	True				
ANR	3578185	AssignmentExpression	format [ 0 ] = '\\0'		3577115	0		=			
ANR	3578186	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3578187	Identifier	format		3577115	0					
ANR	3578188	PrimaryExpression	0		3577115	1					
ANR	3578189	PrimaryExpression	'\\0'		3577115	1					
ANR	3578190	BreakStatement	break ;	284:5:7195:7200	3577115	30	True				
ANR	3578191	Label	case 'n' :	286:4:7207:7215	3577115	31	True				
ANR	3578192	IfStatement	if ( ! test )		3577115	32					
ANR	3578193	Condition	! test	287:9:7242:7246	3577115	0	True				
ANR	3578194	UnaryOperationExpression	! test		3577115	0					
ANR	3578195	UnaryOperator	!		3577115	0					
ANR	3578196	Identifier	test		3577115	1					
ANR	3578197	CompoundStatement		187:16:5287:5287	3577115	1					
ANR	3578198	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , scoreboard -> pool [ 0 ] ? scoreboard -> pool : ""-"" )"	288:6:7257:7349	3577115	0	True				
ANR	3578199	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , scoreboard -> pool [ 0 ] ? scoreboard -> pool : ""-"" )"		3577115	0		=			
ANR	3578200	Identifier	len2		3577115	0					
ANR	3578201	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , scoreboard -> pool [ 0 ] ? scoreboard -> pool : ""-"" )"		3577115	1					
ANR	3578202	Callee	snprintf		3577115	0					
ANR	3578203	Identifier	snprintf		3577115	0					
ANR	3578204	ArgumentList	b		3577115	1					
ANR	3578205	Argument	b		3577115	0					
ANR	3578206	Identifier	b		3577115	0					
ANR	3578207	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578208	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578209	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578210	Identifier	len		3577115	1					
ANR	3578211	Argument	"""%s"""		3577115	2					
ANR	3578212	PrimaryExpression	"""%s"""		3577115	0					
ANR	3578213	Argument	"scoreboard -> pool [ 0 ] ? scoreboard -> pool : ""-"""		3577115	3					
ANR	3578214	ConditionalExpression	"scoreboard -> pool [ 0 ] ? scoreboard -> pool : ""-"""		3577115	0					
ANR	3578215	Condition	scoreboard -> pool [ 0 ]		3577115	0					
ANR	3578216	ArrayIndexing	scoreboard -> pool [ 0 ]		3577115	0					
ANR	3578217	PtrMemberAccess	scoreboard -> pool		3577115	0					
ANR	3578218	Identifier	scoreboard		3577115	0					
ANR	3578219	Identifier	pool		3577115	1					
ANR	3578220	PrimaryExpression	0		3577115	1					
ANR	3578221	PtrMemberAccess	scoreboard -> pool		3577115	1					
ANR	3578222	Identifier	scoreboard		3577115	0					
ANR	3578223	Identifier	pool		3577115	1					
ANR	3578224	PrimaryExpression	"""-"""		3577115	2					
ANR	3578225	BreakStatement	break ;	290:5:7363:7368	3577115	33	True				
ANR	3578226	Label	case 'o' :	292:4:7375:7383	3577115	34	True				
ANR	3578227	IfStatement	if ( format [ 0 ] == '\\0' )		3577115	35					
ANR	3578228	Condition	format [ 0 ] == '\\0'	293:9:7415:7431	3577115	0	True				
ANR	3578229	EqualityExpression	format [ 0 ] == '\\0'		3577115	0		==			
ANR	3578230	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3578231	Identifier	format		3577115	0					
ANR	3578232	PrimaryExpression	0		3577115	1					
ANR	3578233	PrimaryExpression	'\\0'		3577115	1					
ANR	3578234	CompoundStatement		193:28:5472:5472	3577115	1					
ANR	3578235	ExpressionStatement	"zlog ( ZLOG_WARNING , ""the name of the header must be set between embraces for %%%c"" , * s )"	294:6:7442:7528	3577115	0	True				
ANR	3578236	CallExpression	"zlog ( ZLOG_WARNING , ""the name of the header must be set between embraces for %%%c"" , * s )"		3577115	0					
ANR	3578237	Callee	zlog		3577115	0					
ANR	3578238	Identifier	zlog		3577115	0					
ANR	3578239	ArgumentList	ZLOG_WARNING		3577115	1					
ANR	3578240	Argument	ZLOG_WARNING		3577115	0					
ANR	3578241	Identifier	ZLOG_WARNING		3577115	0					
ANR	3578242	Argument	"""the name of the header must be set between embraces for %%%c"""		3577115	1					
ANR	3578243	PrimaryExpression	"""the name of the header must be set between embraces for %%%c"""		3577115	0					
ANR	3578244	Argument	* s		3577115	2					
ANR	3578245	UnaryOperationExpression	* s		3577115	0					
ANR	3578246	UnaryOperator	*		3577115	0					
ANR	3578247	Identifier	s		3577115	1					
ANR	3578248	ReturnStatement	return - 1 ;	295:6:7536:7545	3577115	1	True				
ANR	3578249	UnaryOperationExpression	- 1		3577115	0					
ANR	3578250	UnaryOperator	-		3577115	0					
ANR	3578251	PrimaryExpression	1		3577115	1					
ANR	3578252	IfStatement	if ( ! test )		3577115	36					
ANR	3578253	Condition	! test	297:9:7563:7567	3577115	0	True				
ANR	3578254	UnaryOperationExpression	! test		3577115	0					
ANR	3578255	UnaryOperator	!		3577115	0					
ANR	3578256	Identifier	test		3577115	1					
ANR	3578257	CompoundStatement		201:6:5737:5771	3577115	1					
ANR	3578258	IdentifierDeclStatement	sapi_header_struct * h ;	298:6:7578:7599	3577115	0	True				
ANR	3578259	IdentifierDecl	* h		3577115	0					
ANR	3578260	IdentifierDeclType	sapi_header_struct *		3577115	0					
ANR	3578261	Identifier	h		3577115	1					
ANR	3578262	IdentifierDeclStatement	zend_llist_position pos ;	299:6:7607:7630	3577115	1	True				
ANR	3578263	IdentifierDecl	pos		3577115	0					
ANR	3578264	IdentifierDeclType	zend_llist_position		3577115	0					
ANR	3578265	Identifier	pos		3577115	1					
ANR	3578266	IdentifierDeclStatement	sapi_headers_struct * sapi_headers = & SG ( sapi_headers ) ;	300:6:7638:7691	3577115	2	True				
ANR	3578267	IdentifierDecl	* sapi_headers = & SG ( sapi_headers )		3577115	0					
ANR	3578268	IdentifierDeclType	sapi_headers_struct *		3577115	0					
ANR	3578269	Identifier	sapi_headers		3577115	1					
ANR	3578270	AssignmentExpression	* sapi_headers = & SG ( sapi_headers )		3577115	2		=			
ANR	3578271	Identifier	sapi_headers		3577115	0					
ANR	3578272	UnaryOperationExpression	& SG ( sapi_headers )		3577115	1					
ANR	3578273	UnaryOperator	&		3577115	0					
ANR	3578274	CallExpression	SG ( sapi_headers )		3577115	1					
ANR	3578275	Callee	SG		3577115	0					
ANR	3578276	Identifier	SG		3577115	0					
ANR	3578277	ArgumentList	sapi_headers		3577115	1					
ANR	3578278	Argument	sapi_headers		3577115	0					
ANR	3578279	Identifier	sapi_headers		3577115	0					
ANR	3578280	IdentifierDeclStatement	size_t format_len = strlen ( format ) ;	301:6:7699:7733	3577115	3	True				
ANR	3578281	IdentifierDecl	format_len = strlen ( format )		3577115	0					
ANR	3578282	IdentifierDeclType	size_t		3577115	0					
ANR	3578283	Identifier	format_len		3577115	1					
ANR	3578284	AssignmentExpression	format_len = strlen ( format )		3577115	2		=			
ANR	3578285	Identifier	format_len		3577115	0					
ANR	3578286	CallExpression	strlen ( format )		3577115	1					
ANR	3578287	Callee	strlen		3577115	0					
ANR	3578288	Identifier	strlen		3577115	0					
ANR	3578289	ArgumentList	format		3577115	1					
ANR	3578290	Argument	format		3577115	0					
ANR	3578291	Identifier	format		3577115	0					
ANR	3578292	ExpressionStatement	"h = ( sapi_header_struct * ) zend_llist_get_first_ex ( & sapi_headers -> headers , & pos )"	303:6:7742:7820	3577115	4	True				
ANR	3578293	AssignmentExpression	"h = ( sapi_header_struct * ) zend_llist_get_first_ex ( & sapi_headers -> headers , & pos )"		3577115	0		=			
ANR	3578294	Identifier	h		3577115	0					
ANR	3578295	CastExpression	"( sapi_header_struct * ) zend_llist_get_first_ex ( & sapi_headers -> headers , & pos )"		3577115	1					
ANR	3578296	CastTarget	sapi_header_struct *		3577115	0					
ANR	3578297	CallExpression	"zend_llist_get_first_ex ( & sapi_headers -> headers , & pos )"		3577115	1					
ANR	3578298	Callee	zend_llist_get_first_ex		3577115	0					
ANR	3578299	Identifier	zend_llist_get_first_ex		3577115	0					
ANR	3578300	ArgumentList	& sapi_headers -> headers		3577115	1					
ANR	3578301	Argument	& sapi_headers -> headers		3577115	0					
ANR	3578302	UnaryOperationExpression	& sapi_headers -> headers		3577115	0					
ANR	3578303	UnaryOperator	&		3577115	0					
ANR	3578304	PtrMemberAccess	sapi_headers -> headers		3577115	1					
ANR	3578305	Identifier	sapi_headers		3577115	0					
ANR	3578306	Identifier	headers		3577115	1					
ANR	3578307	Argument	& pos		3577115	1					
ANR	3578308	UnaryOperationExpression	& pos		3577115	0					
ANR	3578309	UnaryOperator	&		3577115	0					
ANR	3578310	Identifier	pos		3577115	1					
ANR	3578311	WhileStatement	while ( h )		3577115	5					
ANR	3578312	Condition	h	304:13:7835:7835	3577115	0	True				
ANR	3578313	Identifier	h		3577115	0					
ANR	3578314	CompoundStatement		205:7:5885:5897	3577115	1					
ANR	3578315	IdentifierDeclStatement	char * header ;	305:7:7847:7859	3577115	0	True				
ANR	3578316	IdentifierDecl	* header		3577115	0					
ANR	3578317	IdentifierDeclType	char *		3577115	0					
ANR	3578318	Identifier	header		3577115	1					
ANR	3578319	IfStatement	if ( ! h -> header_len )		3577115	1					
ANR	3578320	Condition	! h -> header_len	306:11:7872:7885	3577115	0	True				
ANR	3578321	UnaryOperationExpression	! h -> header_len		3577115	0					
ANR	3578322	UnaryOperator	!		3577115	0					
ANR	3578323	PtrMemberAccess	h -> header_len		3577115	1					
ANR	3578324	Identifier	h		3577115	0					
ANR	3578325	Identifier	header_len		3577115	1					
ANR	3578326	CompoundStatement		206:27:5926:5926	3577115	1					
ANR	3578327	ExpressionStatement	"h = ( sapi_header_struct * ) zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"	307:8:7898:7975	3577115	0	True				
ANR	3578328	AssignmentExpression	"h = ( sapi_header_struct * ) zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"		3577115	0		=			
ANR	3578329	Identifier	h		3577115	0					
ANR	3578330	CastExpression	"( sapi_header_struct * ) zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"		3577115	1					
ANR	3578331	CastTarget	sapi_header_struct *		3577115	0					
ANR	3578332	CallExpression	"zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"		3577115	1					
ANR	3578333	Callee	zend_llist_get_next_ex		3577115	0					
ANR	3578334	Identifier	zend_llist_get_next_ex		3577115	0					
ANR	3578335	ArgumentList	& sapi_headers -> headers		3577115	1					
ANR	3578336	Argument	& sapi_headers -> headers		3577115	0					
ANR	3578337	UnaryOperationExpression	& sapi_headers -> headers		3577115	0					
ANR	3578338	UnaryOperator	&		3577115	0					
ANR	3578339	PtrMemberAccess	sapi_headers -> headers		3577115	1					
ANR	3578340	Identifier	sapi_headers		3577115	0					
ANR	3578341	Identifier	headers		3577115	1					
ANR	3578342	Argument	& pos		3577115	1					
ANR	3578343	UnaryOperationExpression	& pos		3577115	0					
ANR	3578344	UnaryOperator	&		3577115	0					
ANR	3578345	Identifier	pos		3577115	1					
ANR	3578346	ContinueStatement	continue ;	308:8:7985:7993	3577115	1	True				
ANR	3578347	IfStatement	"if ( ! strstr ( h -> header , format ) )"		3577115	2					
ANR	3578348	Condition	"! strstr ( h -> header , format )"	310:11:8015:8040	3577115	0	True				
ANR	3578349	UnaryOperationExpression	"! strstr ( h -> header , format )"		3577115	0					
ANR	3578350	UnaryOperator	!		3577115	0					
ANR	3578351	CallExpression	"strstr ( h -> header , format )"		3577115	1					
ANR	3578352	Callee	strstr		3577115	0					
ANR	3578353	Identifier	strstr		3577115	0					
ANR	3578354	ArgumentList	h -> header		3577115	1					
ANR	3578355	Argument	h -> header		3577115	0					
ANR	3578356	PtrMemberAccess	h -> header		3577115	0					
ANR	3578357	Identifier	h		3577115	0					
ANR	3578358	Identifier	header		3577115	1					
ANR	3578359	Argument	format		3577115	1					
ANR	3578360	Identifier	format		3577115	0					
ANR	3578361	CompoundStatement		210:39:6081:6081	3577115	1					
ANR	3578362	ExpressionStatement	"h = ( sapi_header_struct * ) zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"	311:8:8053:8130	3577115	0	True				
ANR	3578363	AssignmentExpression	"h = ( sapi_header_struct * ) zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"		3577115	0		=			
ANR	3578364	Identifier	h		3577115	0					
ANR	3578365	CastExpression	"( sapi_header_struct * ) zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"		3577115	1					
ANR	3578366	CastTarget	sapi_header_struct *		3577115	0					
ANR	3578367	CallExpression	"zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"		3577115	1					
ANR	3578368	Callee	zend_llist_get_next_ex		3577115	0					
ANR	3578369	Identifier	zend_llist_get_next_ex		3577115	0					
ANR	3578370	ArgumentList	& sapi_headers -> headers		3577115	1					
ANR	3578371	Argument	& sapi_headers -> headers		3577115	0					
ANR	3578372	UnaryOperationExpression	& sapi_headers -> headers		3577115	0					
ANR	3578373	UnaryOperator	&		3577115	0					
ANR	3578374	PtrMemberAccess	sapi_headers -> headers		3577115	1					
ANR	3578375	Identifier	sapi_headers		3577115	0					
ANR	3578376	Identifier	headers		3577115	1					
ANR	3578377	Argument	& pos		3577115	1					
ANR	3578378	UnaryOperationExpression	& pos		3577115	0					
ANR	3578379	UnaryOperator	&		3577115	0					
ANR	3578380	Identifier	pos		3577115	1					
ANR	3578381	ContinueStatement	continue ;	312:8:8140:8148	3577115	1	True				
ANR	3578382	IfStatement	if ( h -> header_len <= format_len + 2 )		3577115	3					
ANR	3578383	Condition	h -> header_len <= format_len + 2	316:11:8234:8264	3577115	0	True				
ANR	3578384	RelationalExpression	h -> header_len <= format_len + 2		3577115	0		<=			
ANR	3578385	PtrMemberAccess	h -> header_len		3577115	0					
ANR	3578386	Identifier	h		3577115	0					
ANR	3578387	Identifier	header_len		3577115	1					
ANR	3578388	AdditiveExpression	format_len + 2		3577115	1		+			
ANR	3578389	Identifier	format_len		3577115	0					
ANR	3578390	PrimaryExpression	2		3577115	1					
ANR	3578391	CompoundStatement		216:44:6305:6305	3577115	1					
ANR	3578392	ExpressionStatement	"h = ( sapi_header_struct * ) zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"	317:8:8277:8354	3577115	0	True				
ANR	3578393	AssignmentExpression	"h = ( sapi_header_struct * ) zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"		3577115	0		=			
ANR	3578394	Identifier	h		3577115	0					
ANR	3578395	CastExpression	"( sapi_header_struct * ) zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"		3577115	1					
ANR	3578396	CastTarget	sapi_header_struct *		3577115	0					
ANR	3578397	CallExpression	"zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"		3577115	1					
ANR	3578398	Callee	zend_llist_get_next_ex		3577115	0					
ANR	3578399	Identifier	zend_llist_get_next_ex		3577115	0					
ANR	3578400	ArgumentList	& sapi_headers -> headers		3577115	1					
ANR	3578401	Argument	& sapi_headers -> headers		3577115	0					
ANR	3578402	UnaryOperationExpression	& sapi_headers -> headers		3577115	0					
ANR	3578403	UnaryOperator	&		3577115	0					
ANR	3578404	PtrMemberAccess	sapi_headers -> headers		3577115	1					
ANR	3578405	Identifier	sapi_headers		3577115	0					
ANR	3578406	Identifier	headers		3577115	1					
ANR	3578407	Argument	& pos		3577115	1					
ANR	3578408	UnaryOperationExpression	& pos		3577115	0					
ANR	3578409	UnaryOperator	&		3577115	0					
ANR	3578410	Identifier	pos		3577115	1					
ANR	3578411	ContinueStatement	continue ;	318:8:8364:8372	3577115	1	True				
ANR	3578412	IfStatement	if ( h -> header [ format_len ] != ':' || h -> header [ format_len + 1 ] != ' ' )		3577115	4					
ANR	3578413	Condition	h -> header [ format_len ] != ':' || h -> header [ format_len + 1 ] != ' '	321:11:8395:8458	3577115	0	True				
ANR	3578414	OrExpression	h -> header [ format_len ] != ':' || h -> header [ format_len + 1 ] != ' '		3577115	0		||			
ANR	3578415	EqualityExpression	h -> header [ format_len ] != ':'		3577115	0		!=			
ANR	3578416	ArrayIndexing	h -> header [ format_len ]		3577115	0					
ANR	3578417	PtrMemberAccess	h -> header		3577115	0					
ANR	3578418	Identifier	h		3577115	0					
ANR	3578419	Identifier	header		3577115	1					
ANR	3578420	Identifier	format_len		3577115	1					
ANR	3578421	PrimaryExpression	':'		3577115	1					
ANR	3578422	EqualityExpression	h -> header [ format_len + 1 ] != ' '		3577115	1		!=			
ANR	3578423	ArrayIndexing	h -> header [ format_len + 1 ]		3577115	0					
ANR	3578424	PtrMemberAccess	h -> header		3577115	0					
ANR	3578425	Identifier	h		3577115	0					
ANR	3578426	Identifier	header		3577115	1					
ANR	3578427	AdditiveExpression	format_len + 1		3577115	1		+			
ANR	3578428	Identifier	format_len		3577115	0					
ANR	3578429	PrimaryExpression	1		3577115	1					
ANR	3578430	PrimaryExpression	' '		3577115	1					
ANR	3578431	CompoundStatement		221:77:6499:6499	3577115	1					
ANR	3578432	ExpressionStatement	"h = ( sapi_header_struct * ) zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"	322:8:8471:8548	3577115	0	True				
ANR	3578433	AssignmentExpression	"h = ( sapi_header_struct * ) zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"		3577115	0		=			
ANR	3578434	Identifier	h		3577115	0					
ANR	3578435	CastExpression	"( sapi_header_struct * ) zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"		3577115	1					
ANR	3578436	CastTarget	sapi_header_struct *		3577115	0					
ANR	3578437	CallExpression	"zend_llist_get_next_ex ( & sapi_headers -> headers , & pos )"		3577115	1					
ANR	3578438	Callee	zend_llist_get_next_ex		3577115	0					
ANR	3578439	Identifier	zend_llist_get_next_ex		3577115	0					
ANR	3578440	ArgumentList	& sapi_headers -> headers		3577115	1					
ANR	3578441	Argument	& sapi_headers -> headers		3577115	0					
ANR	3578442	UnaryOperationExpression	& sapi_headers -> headers		3577115	0					
ANR	3578443	UnaryOperator	&		3577115	0					
ANR	3578444	PtrMemberAccess	sapi_headers -> headers		3577115	1					
ANR	3578445	Identifier	sapi_headers		3577115	0					
ANR	3578446	Identifier	headers		3577115	1					
ANR	3578447	Argument	& pos		3577115	1					
ANR	3578448	UnaryOperationExpression	& pos		3577115	0					
ANR	3578449	UnaryOperator	&		3577115	0					
ANR	3578450	Identifier	pos		3577115	1					
ANR	3578451	ContinueStatement	continue ;	323:8:8558:8566	3577115	1	True				
ANR	3578452	ExpressionStatement	header = h -> header + format_len + 2	326:7:8585:8620	3577115	5	True				
ANR	3578453	AssignmentExpression	header = h -> header + format_len + 2		3577115	0		=			
ANR	3578454	Identifier	header		3577115	0					
ANR	3578455	AdditiveExpression	h -> header + format_len + 2		3577115	1		+			
ANR	3578456	PtrMemberAccess	h -> header		3577115	0					
ANR	3578457	Identifier	h		3577115	0					
ANR	3578458	Identifier	header		3577115	1					
ANR	3578459	AdditiveExpression	format_len + 2		3577115	1		+			
ANR	3578460	Identifier	format_len		3577115	0					
ANR	3578461	PrimaryExpression	2		3577115	1					
ANR	3578462	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , header && * header ? header : ""-"" )"	327:7:8629:8709	3577115	6	True				
ANR	3578463	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , header && * header ? header : ""-"" )"		3577115	0		=			
ANR	3578464	Identifier	len2		3577115	0					
ANR	3578465	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , header && * header ? header : ""-"" )"		3577115	1					
ANR	3578466	Callee	snprintf		3577115	0					
ANR	3578467	Identifier	snprintf		3577115	0					
ANR	3578468	ArgumentList	b		3577115	1					
ANR	3578469	Argument	b		3577115	0					
ANR	3578470	Identifier	b		3577115	0					
ANR	3578471	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578472	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578473	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578474	Identifier	len		3577115	1					
ANR	3578475	Argument	"""%s"""		3577115	2					
ANR	3578476	PrimaryExpression	"""%s"""		3577115	0					
ANR	3578477	Argument	"header && * header ? header : ""-"""		3577115	3					
ANR	3578478	ConditionalExpression	"header && * header ? header : ""-"""		3577115	0					
ANR	3578479	Condition	header && * header		3577115	0					
ANR	3578480	AndExpression	header && * header		3577115	0		&&			
ANR	3578481	Identifier	header		3577115	0					
ANR	3578482	UnaryOperationExpression	* header		3577115	1					
ANR	3578483	UnaryOperator	*		3577115	0					
ANR	3578484	Identifier	header		3577115	1					
ANR	3578485	Identifier	header		3577115	1					
ANR	3578486	PrimaryExpression	"""-"""		3577115	2					
ANR	3578487	BreakStatement	break ;	330:7:8744:8749	3577115	7	True				
ANR	3578488	IfStatement	if ( ! len2 )		3577115	6					
ANR	3578489	Condition	! len2	332:10:8769:8773	3577115	0	True				
ANR	3578490	UnaryOperationExpression	! len2		3577115	0					
ANR	3578491	UnaryOperator	!		3577115	0					
ANR	3578492	Identifier	len2		3577115	1					
ANR	3578493	CompoundStatement		232:17:6814:6814	3577115	1					
ANR	3578494	ExpressionStatement	len2 = 1	333:7:8785:8793	3577115	0	True				
ANR	3578495	AssignmentExpression	len2 = 1		3577115	0		=			
ANR	3578496	Identifier	len2		3577115	0					
ANR	3578497	PrimaryExpression	1		3577115	1					
ANR	3578498	ExpressionStatement	* b = '-'	334:7:8802:8810	3577115	1	True				
ANR	3578499	AssignmentExpression	* b = '-'		3577115	0		=			
ANR	3578500	UnaryOperationExpression	* b		3577115	0					
ANR	3578501	UnaryOperator	*		3577115	0					
ANR	3578502	Identifier	b		3577115	1					
ANR	3578503	PrimaryExpression	'-'		3577115	1					
ANR	3578504	ExpressionStatement	format [ 0 ] = '\\0'	337:5:8832:8848	3577115	37	True				
ANR	3578505	AssignmentExpression	format [ 0 ] = '\\0'		3577115	0		=			
ANR	3578506	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3578507	Identifier	format		3577115	0					
ANR	3578508	PrimaryExpression	0		3577115	1					
ANR	3578509	PrimaryExpression	'\\0'		3577115	1					
ANR	3578510	BreakStatement	break ;	338:5:8855:8860	3577115	38	True				
ANR	3578511	Label	case 'p' :	340:4:8867:8875	3577115	39	True				
ANR	3578512	IfStatement	if ( ! test )		3577115	40					
ANR	3578513	Condition	! test	341:9:8896:8900	3577115	0	True				
ANR	3578514	UnaryOperationExpression	! test		3577115	0					
ANR	3578515	UnaryOperator	!		3577115	0					
ANR	3578516	Identifier	test		3577115	1					
ANR	3578517	CompoundStatement		241:16:6941:6941	3577115	1					
ANR	3578518	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%ld"" , ( long ) getpid ( ) )"	342:6:8911:8974	3577115	0	True				
ANR	3578519	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%ld"" , ( long ) getpid ( ) )"		3577115	0		=			
ANR	3578520	Identifier	len2		3577115	0					
ANR	3578521	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%ld"" , ( long ) getpid ( ) )"		3577115	1					
ANR	3578522	Callee	snprintf		3577115	0					
ANR	3578523	Identifier	snprintf		3577115	0					
ANR	3578524	ArgumentList	b		3577115	1					
ANR	3578525	Argument	b		3577115	0					
ANR	3578526	Identifier	b		3577115	0					
ANR	3578527	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578528	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578529	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578530	Identifier	len		3577115	1					
ANR	3578531	Argument	"""%ld"""		3577115	2					
ANR	3578532	PrimaryExpression	"""%ld"""		3577115	0					
ANR	3578533	Argument	( long ) getpid ( )		3577115	3					
ANR	3578534	CastExpression	( long ) getpid ( )		3577115	0					
ANR	3578535	CastTarget	long		3577115	0					
ANR	3578536	CallExpression	getpid ( )		3577115	1					
ANR	3578537	Callee	getpid		3577115	0					
ANR	3578538	Identifier	getpid		3577115	0					
ANR	3578539	ArgumentList			3577115	1					
ANR	3578540	BreakStatement	break ;	344:5:8988:8993	3577115	41	True				
ANR	3578541	Label	case 'P' :	346:4:9000:9008	3577115	42	True				
ANR	3578542	IfStatement	if ( ! test )		3577115	43					
ANR	3578543	Condition	! test	347:9:9029:9033	3577115	0	True				
ANR	3578544	UnaryOperationExpression	! test		3577115	0					
ANR	3578545	UnaryOperator	!		3577115	0					
ANR	3578546	Identifier	test		3577115	1					
ANR	3578547	CompoundStatement		247:16:7074:7074	3577115	1					
ANR	3578548	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%ld"" , ( long ) getppid ( ) )"	348:6:9044:9108	3577115	0	True				
ANR	3578549	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%ld"" , ( long ) getppid ( ) )"		3577115	0		=			
ANR	3578550	Identifier	len2		3577115	0					
ANR	3578551	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%ld"" , ( long ) getppid ( ) )"		3577115	1					
ANR	3578552	Callee	snprintf		3577115	0					
ANR	3578553	Identifier	snprintf		3577115	0					
ANR	3578554	ArgumentList	b		3577115	1					
ANR	3578555	Argument	b		3577115	0					
ANR	3578556	Identifier	b		3577115	0					
ANR	3578557	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578558	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578559	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578560	Identifier	len		3577115	1					
ANR	3578561	Argument	"""%ld"""		3577115	2					
ANR	3578562	PrimaryExpression	"""%ld"""		3577115	0					
ANR	3578563	Argument	( long ) getppid ( )		3577115	3					
ANR	3578564	CastExpression	( long ) getppid ( )		3577115	0					
ANR	3578565	CastTarget	long		3577115	0					
ANR	3578566	CallExpression	getppid ( )		3577115	1					
ANR	3578567	Callee	getppid		3577115	0					
ANR	3578568	Identifier	getppid		3577115	0					
ANR	3578569	ArgumentList			3577115	1					
ANR	3578570	BreakStatement	break ;	350:5:9122:9127	3577115	44	True				
ANR	3578571	Label	case 'q' :	352:4:9134:9142	3577115	45	True				
ANR	3578572	IfStatement	if ( ! test )		3577115	46					
ANR	3578573	Condition	! test	353:9:9172:9176	3577115	0	True				
ANR	3578574	UnaryOperationExpression	! test		3577115	0					
ANR	3578575	UnaryOperator	!		3577115	0					
ANR	3578576	Identifier	test		3577115	1					
ANR	3578577	CompoundStatement		253:16:7217:7217	3577115	1					
ANR	3578578	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , proc . query_string )"	354:6:9187:9252	3577115	0	True				
ANR	3578579	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , proc . query_string )"		3577115	0		=			
ANR	3578580	Identifier	len2		3577115	0					
ANR	3578581	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , proc . query_string )"		3577115	1					
ANR	3578582	Callee	snprintf		3577115	0					
ANR	3578583	Identifier	snprintf		3577115	0					
ANR	3578584	ArgumentList	b		3577115	1					
ANR	3578585	Argument	b		3577115	0					
ANR	3578586	Identifier	b		3577115	0					
ANR	3578587	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578588	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578589	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578590	Identifier	len		3577115	1					
ANR	3578591	Argument	"""%s"""		3577115	2					
ANR	3578592	PrimaryExpression	"""%s"""		3577115	0					
ANR	3578593	Argument	proc . query_string		3577115	3					
ANR	3578594	MemberAccess	proc . query_string		3577115	0					
ANR	3578595	Identifier	proc		3577115	0					
ANR	3578596	Identifier	query_string		3577115	1					
ANR	3578597	BreakStatement	break ;	356:5:9266:9271	3577115	47	True				
ANR	3578598	Label	case 'Q' :	358:4:9278:9286	3577115	48	True				
ANR	3578599	IfStatement	if ( ! test )		3577115	49					
ANR	3578600	Condition	! test	359:9:9307:9311	3577115	0	True				
ANR	3578601	UnaryOperationExpression	! test		3577115	0					
ANR	3578602	UnaryOperator	!		3577115	0					
ANR	3578603	Identifier	test		3577115	1					
ANR	3578604	CompoundStatement		259:16:7352:7352	3577115	1					
ANR	3578605	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , * proc . query_string ? ""?"" : """" )"	360:6:9322:9400	3577115	0	True				
ANR	3578606	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , * proc . query_string ? ""?"" : """" )"		3577115	0		=			
ANR	3578607	Identifier	len2		3577115	0					
ANR	3578608	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , * proc . query_string ? ""?"" : """" )"		3577115	1					
ANR	3578609	Callee	snprintf		3577115	0					
ANR	3578610	Identifier	snprintf		3577115	0					
ANR	3578611	ArgumentList	b		3577115	1					
ANR	3578612	Argument	b		3577115	0					
ANR	3578613	Identifier	b		3577115	0					
ANR	3578614	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578615	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578616	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578617	Identifier	len		3577115	1					
ANR	3578618	Argument	"""%s"""		3577115	2					
ANR	3578619	PrimaryExpression	"""%s"""		3577115	0					
ANR	3578620	Argument	"* proc . query_string ? ""?"" : """""		3577115	3					
ANR	3578621	ConditionalExpression	"* proc . query_string ? ""?"" : """""		3577115	0					
ANR	3578622	Condition	* proc . query_string		3577115	0					
ANR	3578623	UnaryOperationExpression	* proc . query_string		3577115	0					
ANR	3578624	UnaryOperator	*		3577115	0					
ANR	3578625	MemberAccess	proc . query_string		3577115	1					
ANR	3578626	Identifier	proc		3577115	0					
ANR	3578627	Identifier	query_string		3577115	1					
ANR	3578628	PrimaryExpression	"""?"""		3577115	1					
ANR	3578629	PrimaryExpression	""""""		3577115	2					
ANR	3578630	BreakStatement	break ;	362:5:9414:9419	3577115	50	True				
ANR	3578631	Label	case 'r' :	364:4:9426:9434	3577115	51	True				
ANR	3578632	IfStatement	if ( ! test )		3577115	52					
ANR	3578633	Condition	! test	365:9:9463:9467	3577115	0	True				
ANR	3578634	UnaryOperationExpression	! test		3577115	0					
ANR	3578635	UnaryOperator	!		3577115	0					
ANR	3578636	Identifier	test		3577115	1					
ANR	3578637	CompoundStatement		265:16:7508:7508	3577115	1					
ANR	3578638	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , proc . request_uri )"	366:6:9478:9542	3577115	0	True				
ANR	3578639	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , proc . request_uri )"		3577115	0		=			
ANR	3578640	Identifier	len2		3577115	0					
ANR	3578641	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , proc . request_uri )"		3577115	1					
ANR	3578642	Callee	snprintf		3577115	0					
ANR	3578643	Identifier	snprintf		3577115	0					
ANR	3578644	ArgumentList	b		3577115	1					
ANR	3578645	Argument	b		3577115	0					
ANR	3578646	Identifier	b		3577115	0					
ANR	3578647	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578648	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578649	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578650	Identifier	len		3577115	1					
ANR	3578651	Argument	"""%s"""		3577115	2					
ANR	3578652	PrimaryExpression	"""%s"""		3577115	0					
ANR	3578653	Argument	proc . request_uri		3577115	3					
ANR	3578654	MemberAccess	proc . request_uri		3577115	0					
ANR	3578655	Identifier	proc		3577115	0					
ANR	3578656	Identifier	request_uri		3577115	1					
ANR	3578657	BreakStatement	break ;	368:5:9556:9561	3577115	53	True				
ANR	3578658	Label	case 'R' :	370:4:9568:9576	3577115	54	True				
ANR	3578659	IfStatement	if ( ! test )		3577115	55					
ANR	3578660	Condition	! test	371:9:9611:9615	3577115	0	True				
ANR	3578661	UnaryOperationExpression	! test		3577115	0					
ANR	3578662	UnaryOperator	!		3577115	0					
ANR	3578663	Identifier	test		3577115	1					
ANR	3578664	CompoundStatement		272:6:7664:7707	3577115	1					
ANR	3578665	IdentifierDeclStatement	const char * tmp = fcgi_get_last_client_ip ( ) ;	372:6:9626:9669	3577115	0	True				
ANR	3578666	IdentifierDecl	* tmp = fcgi_get_last_client_ip ( )		3577115	0					
ANR	3578667	IdentifierDeclType	const char *		3577115	0					
ANR	3578668	Identifier	tmp		3577115	1					
ANR	3578669	AssignmentExpression	* tmp = fcgi_get_last_client_ip ( )		3577115	2		=			
ANR	3578670	Identifier	tmp		3577115	0					
ANR	3578671	CallExpression	fcgi_get_last_client_ip ( )		3577115	1					
ANR	3578672	Callee	fcgi_get_last_client_ip		3577115	0					
ANR	3578673	Identifier	fcgi_get_last_client_ip		3577115	0					
ANR	3578674	ArgumentList			3577115	1					
ANR	3578675	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , tmp ? tmp : ""-"" )"	373:6:9677:9740	3577115	1	True				
ANR	3578676	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , tmp ? tmp : ""-"" )"		3577115	0		=			
ANR	3578677	Identifier	len2		3577115	0					
ANR	3578678	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , tmp ? tmp : ""-"" )"		3577115	1					
ANR	3578679	Callee	snprintf		3577115	0					
ANR	3578680	Identifier	snprintf		3577115	0					
ANR	3578681	ArgumentList	b		3577115	1					
ANR	3578682	Argument	b		3577115	0					
ANR	3578683	Identifier	b		3577115	0					
ANR	3578684	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578685	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578686	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578687	Identifier	len		3577115	1					
ANR	3578688	Argument	"""%s"""		3577115	2					
ANR	3578689	PrimaryExpression	"""%s"""		3577115	0					
ANR	3578690	Argument	"tmp ? tmp : ""-"""		3577115	3					
ANR	3578691	ConditionalExpression	"tmp ? tmp : ""-"""		3577115	0					
ANR	3578692	Condition	tmp		3577115	0					
ANR	3578693	Identifier	tmp		3577115	0					
ANR	3578694	Identifier	tmp		3577115	1					
ANR	3578695	PrimaryExpression	"""-"""		3577115	2					
ANR	3578696	BreakStatement	break ;	375:5:9754:9759	3577115	56	True				
ANR	3578697	Label	case 's' :	377:4:9766:9774	3577115	57	True				
ANR	3578698	IfStatement	if ( ! test )		3577115	58					
ANR	3578699	Condition	! test	378:9:9798:9802	3577115	0	True				
ANR	3578700	UnaryOperationExpression	! test		3577115	0					
ANR	3578701	UnaryOperator	!		3577115	0					
ANR	3578702	Identifier	test		3577115	1					
ANR	3578703	CompoundStatement		278:16:7843:7843	3577115	1					
ANR	3578704	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%d"" , SG ( sapi_headers ) . http_response_code )"	379:6:9813:9896	3577115	0	True				
ANR	3578705	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%d"" , SG ( sapi_headers ) . http_response_code )"		3577115	0		=			
ANR	3578706	Identifier	len2		3577115	0					
ANR	3578707	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%d"" , SG ( sapi_headers ) . http_response_code )"		3577115	1					
ANR	3578708	Callee	snprintf		3577115	0					
ANR	3578709	Identifier	snprintf		3577115	0					
ANR	3578710	ArgumentList	b		3577115	1					
ANR	3578711	Argument	b		3577115	0					
ANR	3578712	Identifier	b		3577115	0					
ANR	3578713	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578714	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578715	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578716	Identifier	len		3577115	1					
ANR	3578717	Argument	"""%d"""		3577115	2					
ANR	3578718	PrimaryExpression	"""%d"""		3577115	0					
ANR	3578719	Argument	SG ( sapi_headers ) . http_response_code		3577115	3					
ANR	3578720	MemberAccess	SG ( sapi_headers ) . http_response_code		3577115	0					
ANR	3578721	CallExpression	SG ( sapi_headers )		3577115	0					
ANR	3578722	Callee	SG		3577115	0					
ANR	3578723	Identifier	SG		3577115	0					
ANR	3578724	ArgumentList	sapi_headers		3577115	1					
ANR	3578725	Argument	sapi_headers		3577115	0					
ANR	3578726	Identifier	sapi_headers		3577115	0					
ANR	3578727	Identifier	http_response_code		3577115	1					
ANR	3578728	BreakStatement	break ;	381:5:9910:9915	3577115	59	True				
ANR	3578729	Label	case 'T' :	383:4:9922:9930	3577115	60	True				
ANR	3578730	Label	case 't' :	384:4:9936:9944	3577115	61	True				
ANR	3578731	IfStatement	if ( ! test )		3577115	62					
ANR	3578732	Condition	! test	385:9:9966:9970	3577115	0	True				
ANR	3578733	UnaryOperationExpression	! test		3577115	0					
ANR	3578734	UnaryOperator	!		3577115	0					
ANR	3578735	Identifier	test		3577115	1					
ANR	3578736	CompoundStatement		286:6:8019:8028	3577115	1					
ANR	3578737	IdentifierDeclStatement	time_t * t ;	386:6:9981:9990	3577115	0	True				
ANR	3578738	IdentifierDecl	* t		3577115	0					
ANR	3578739	IdentifierDeclType	time_t *		3577115	0					
ANR	3578740	Identifier	t		3577115	1					
ANR	3578741	IfStatement	if ( * s == 't' )		3577115	1					
ANR	3578742	Condition	* s == 't'	387:10:10002:10010	3577115	0	True				
ANR	3578743	EqualityExpression	* s == 't'		3577115	0		==			
ANR	3578744	UnaryOperationExpression	* s		3577115	0					
ANR	3578745	UnaryOperator	*		3577115	0					
ANR	3578746	Identifier	s		3577115	1					
ANR	3578747	PrimaryExpression	't'		3577115	1					
ANR	3578748	CompoundStatement		287:21:8051:8051	3577115	1					
ANR	3578749	ExpressionStatement	t = & proc . accepted_epoch	388:7:10022:10046	3577115	0	True				
ANR	3578750	AssignmentExpression	t = & proc . accepted_epoch		3577115	0		=			
ANR	3578751	Identifier	t		3577115	0					
ANR	3578752	UnaryOperationExpression	& proc . accepted_epoch		3577115	1					
ANR	3578753	UnaryOperator	&		3577115	0					
ANR	3578754	MemberAccess	proc . accepted_epoch		3577115	1					
ANR	3578755	Identifier	proc		3577115	0					
ANR	3578756	Identifier	accepted_epoch		3577115	1					
ANR	3578757	ElseStatement	else		3577115	0					
ANR	3578758	CompoundStatement		289:13:8099:8099	3577115	0					
ANR	3578759	ExpressionStatement	t = & now_epoch	390:7:10070:10084	3577115	0	True				
ANR	3578760	AssignmentExpression	t = & now_epoch		3577115	0		=			
ANR	3578761	Identifier	t		3577115	0					
ANR	3578762	UnaryOperationExpression	& now_epoch		3577115	1					
ANR	3578763	UnaryOperator	&		3577115	0					
ANR	3578764	Identifier	now_epoch		3577115	1					
ANR	3578765	IfStatement	if ( format [ 0 ] == '\\0' )		3577115	2					
ANR	3578766	Condition	format [ 0 ] == '\\0'	392:10:10104:10120	3577115	0	True				
ANR	3578767	EqualityExpression	format [ 0 ] == '\\0'		3577115	0		==			
ANR	3578768	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3578769	Identifier	format		3577115	0					
ANR	3578770	PrimaryExpression	0		3577115	1					
ANR	3578771	PrimaryExpression	'\\0'		3577115	1					
ANR	3578772	CompoundStatement		292:29:8161:8161	3577115	1					
ANR	3578773	ExpressionStatement	"strftime ( tmp , sizeof ( tmp ) - 1 , ""%d/%b/%Y:%H:%M:%S %z"" , localtime ( t ) )"	393:7:10132:10200	3577115	0	True				
ANR	3578774	CallExpression	"strftime ( tmp , sizeof ( tmp ) - 1 , ""%d/%b/%Y:%H:%M:%S %z"" , localtime ( t ) )"		3577115	0					
ANR	3578775	Callee	strftime		3577115	0					
ANR	3578776	Identifier	strftime		3577115	0					
ANR	3578777	ArgumentList	tmp		3577115	1					
ANR	3578778	Argument	tmp		3577115	0					
ANR	3578779	Identifier	tmp		3577115	0					
ANR	3578780	Argument	sizeof ( tmp ) - 1		3577115	1					
ANR	3578781	AdditiveExpression	sizeof ( tmp ) - 1		3577115	0		-			
ANR	3578782	SizeofExpression	sizeof ( tmp )		3577115	0					
ANR	3578783	Sizeof	sizeof		3577115	0					
ANR	3578784	SizeofOperand	tmp		3577115	1					
ANR	3578785	PrimaryExpression	1		3577115	1					
ANR	3578786	Argument	"""%d/%b/%Y:%H:%M:%S %z"""		3577115	2					
ANR	3578787	PrimaryExpression	"""%d/%b/%Y:%H:%M:%S %z"""		3577115	0					
ANR	3578788	Argument	localtime ( t )		3577115	3					
ANR	3578789	CallExpression	localtime ( t )		3577115	0					
ANR	3578790	Callee	localtime		3577115	0					
ANR	3578791	Identifier	localtime		3577115	0					
ANR	3578792	ArgumentList	t		3577115	1					
ANR	3578793	Argument	t		3577115	0					
ANR	3578794	Identifier	t		3577115	0					
ANR	3578795	ElseStatement	else		3577115	0					
ANR	3578796	CompoundStatement		294:13:8253:8253	3577115	0					
ANR	3578797	ExpressionStatement	"strftime ( tmp , sizeof ( tmp ) - 1 , format , localtime ( t ) )"	395:7:10224:10276	3577115	0	True				
ANR	3578798	CallExpression	"strftime ( tmp , sizeof ( tmp ) - 1 , format , localtime ( t ) )"		3577115	0					
ANR	3578799	Callee	strftime		3577115	0					
ANR	3578800	Identifier	strftime		3577115	0					
ANR	3578801	ArgumentList	tmp		3577115	1					
ANR	3578802	Argument	tmp		3577115	0					
ANR	3578803	Identifier	tmp		3577115	0					
ANR	3578804	Argument	sizeof ( tmp ) - 1		3577115	1					
ANR	3578805	AdditiveExpression	sizeof ( tmp ) - 1		3577115	0		-			
ANR	3578806	SizeofExpression	sizeof ( tmp )		3577115	0					
ANR	3578807	Sizeof	sizeof		3577115	0					
ANR	3578808	SizeofOperand	tmp		3577115	1					
ANR	3578809	PrimaryExpression	1		3577115	1					
ANR	3578810	Argument	format		3577115	2					
ANR	3578811	Identifier	format		3577115	0					
ANR	3578812	Argument	localtime ( t )		3577115	3					
ANR	3578813	CallExpression	localtime ( t )		3577115	0					
ANR	3578814	Callee	localtime		3577115	0					
ANR	3578815	Identifier	localtime		3577115	0					
ANR	3578816	ArgumentList	t		3577115	1					
ANR	3578817	Argument	t		3577115	0					
ANR	3578818	Identifier	t		3577115	0					
ANR	3578819	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , tmp )"	397:6:10292:10343	3577115	3	True				
ANR	3578820	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , tmp )"		3577115	0		=			
ANR	3578821	Identifier	len2		3577115	0					
ANR	3578822	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , tmp )"		3577115	1					
ANR	3578823	Callee	snprintf		3577115	0					
ANR	3578824	Identifier	snprintf		3577115	0					
ANR	3578825	ArgumentList	b		3577115	1					
ANR	3578826	Argument	b		3577115	0					
ANR	3578827	Identifier	b		3577115	0					
ANR	3578828	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578829	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578830	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578831	Identifier	len		3577115	1					
ANR	3578832	Argument	"""%s"""		3577115	2					
ANR	3578833	PrimaryExpression	"""%s"""		3577115	0					
ANR	3578834	Argument	tmp		3577115	3					
ANR	3578835	Identifier	tmp		3577115	0					
ANR	3578836	ExpressionStatement	format [ 0 ] = '\\0'	399:5:10357:10373	3577115	63	True				
ANR	3578837	AssignmentExpression	format [ 0 ] = '\\0'		3577115	0		=			
ANR	3578838	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3578839	Identifier	format		3577115	0					
ANR	3578840	PrimaryExpression	0		3577115	1					
ANR	3578841	PrimaryExpression	'\\0'		3577115	1					
ANR	3578842	BreakStatement	break ;	400:5:10380:10385	3577115	64	True				
ANR	3578843	Label	case 'u' :	402:4:10392:10400	3577115	65	True				
ANR	3578844	IfStatement	if ( ! test )		3577115	66					
ANR	3578845	Condition	! test	403:9:10429:10433	3577115	0	True				
ANR	3578846	UnaryOperationExpression	! test		3577115	0					
ANR	3578847	UnaryOperator	!		3577115	0					
ANR	3578848	Identifier	test		3577115	1					
ANR	3578849	CompoundStatement		303:16:8474:8474	3577115	1					
ANR	3578850	ExpressionStatement	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , proc . auth_user )"	404:6:10444:10506	3577115	0	True				
ANR	3578851	AssignmentExpression	"len2 = snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , proc . auth_user )"		3577115	0		=			
ANR	3578852	Identifier	len2		3577115	0					
ANR	3578853	CallExpression	"snprintf ( b , FPM_LOG_BUFFER - len , ""%s"" , proc . auth_user )"		3577115	1					
ANR	3578854	Callee	snprintf		3577115	0					
ANR	3578855	Identifier	snprintf		3577115	0					
ANR	3578856	ArgumentList	b		3577115	1					
ANR	3578857	Argument	b		3577115	0					
ANR	3578858	Identifier	b		3577115	0					
ANR	3578859	Argument	FPM_LOG_BUFFER - len		3577115	1					
ANR	3578860	AdditiveExpression	FPM_LOG_BUFFER - len		3577115	0		-			
ANR	3578861	Identifier	FPM_LOG_BUFFER		3577115	0					
ANR	3578862	Identifier	len		3577115	1					
ANR	3578863	Argument	"""%s"""		3577115	2					
ANR	3578864	PrimaryExpression	"""%s"""		3577115	0					
ANR	3578865	Argument	proc . auth_user		3577115	3					
ANR	3578866	MemberAccess	proc . auth_user		3577115	0					
ANR	3578867	Identifier	proc		3577115	0					
ANR	3578868	Identifier	auth_user		3577115	1					
ANR	3578869	BreakStatement	break ;	406:5:10520:10525	3577115	67	True				
ANR	3578870	Label	case '{' :	408:4:10532:10540	3577115	68	True				
ANR	3578871	ExpressionStatement	token = 1	409:5:10565:10574	3577115	69	True				
ANR	3578872	AssignmentExpression	token = 1		3577115	0		=			
ANR	3578873	Identifier	token		3577115	0					
ANR	3578874	PrimaryExpression	1		3577115	1					
ANR	3578875	CompoundStatement		312:6:8646:8654	3577115	70					
ANR	3578876	IdentifierDeclStatement	char * start ;	411:6:10589:10600	3577115	0	True				
ANR	3578877	IdentifierDecl	* start		3577115	0					
ANR	3578878	IdentifierDeclType	char *		3577115	0					
ANR	3578879	Identifier	start		3577115	1					
ANR	3578880	IdentifierDeclStatement	size_t l ;	412:6:10608:10616	3577115	1	True				
ANR	3578881	IdentifierDecl	l		3577115	0					
ANR	3578882	IdentifierDeclType	size_t		3577115	0					
ANR	3578883	Identifier	l		3577115	1					
ANR	3578884	ExpressionStatement	start = ++ s	414:6:10625:10636	3577115	2	True				
ANR	3578885	AssignmentExpression	start = ++ s		3577115	0		=			
ANR	3578886	Identifier	start		3577115	0					
ANR	3578887	UnaryExpression	++ s		3577115	1					
ANR	3578888	IncDec	++		3577115	0					
ANR	3578889	Identifier	s		3577115	1					
ANR	3578890	WhileStatement	while ( * s != '\\0' )		3577115	3					
ANR	3578891	Condition	* s != '\\0'	416:13:10652:10661	3577115	0	True				
ANR	3578892	EqualityExpression	* s != '\\0'		3577115	0		!=			
ANR	3578893	UnaryOperationExpression	* s		3577115	0					
ANR	3578894	UnaryOperator	*		3577115	0					
ANR	3578895	Identifier	s		3577115	1					
ANR	3578896	PrimaryExpression	'\\0'		3577115	1					
ANR	3578897	CompoundStatement		316:25:8702:8702	3577115	1					
ANR	3578898	IfStatement	if ( * s == '}' )		3577115	0					
ANR	3578899	Condition	* s == '}'	417:11:10677:10685	3577115	0	True				
ANR	3578900	EqualityExpression	* s == '}'		3577115	0		==			
ANR	3578901	UnaryOperationExpression	* s		3577115	0					
ANR	3578902	UnaryOperator	*		3577115	0					
ANR	3578903	Identifier	s		3577115	1					
ANR	3578904	PrimaryExpression	'}'		3577115	1					
ANR	3578905	CompoundStatement		317:22:8726:8726	3577115	1					
ANR	3578906	ExpressionStatement	l = s - start	418:8:10698:10711	3577115	0	True				
ANR	3578907	AssignmentExpression	l = s - start		3577115	0		=			
ANR	3578908	Identifier	l		3577115	0					
ANR	3578909	AdditiveExpression	s - start		3577115	1		-			
ANR	3578910	Identifier	s		3577115	0					
ANR	3578911	Identifier	start		3577115	1					
ANR	3578912	IfStatement	if ( l >= sizeof ( format ) - 1 )		3577115	1					
ANR	3578913	Condition	l >= sizeof ( format ) - 1	420:12:10726:10748	3577115	0	True				
ANR	3578914	RelationalExpression	l >= sizeof ( format ) - 1		3577115	0		>=			
ANR	3578915	Identifier	l		3577115	0					
ANR	3578916	AdditiveExpression	sizeof ( format ) - 1		3577115	1		-			
ANR	3578917	SizeofExpression	sizeof ( format )		3577115	0					
ANR	3578918	Sizeof	sizeof		3577115	0					
ANR	3578919	SizeofOperand	format		3577115	1					
ANR	3578920	PrimaryExpression	1		3577115	1					
ANR	3578921	CompoundStatement		320:37:8789:8789	3577115	1					
ANR	3578922	ExpressionStatement	l = sizeof ( format ) - 1	421:9:10762:10784	3577115	0	True				
ANR	3578923	AssignmentExpression	l = sizeof ( format ) - 1		3577115	0		=			
ANR	3578924	Identifier	l		3577115	0					
ANR	3578925	AdditiveExpression	sizeof ( format ) - 1		3577115	1		-			
ANR	3578926	SizeofExpression	sizeof ( format )		3577115	0					
ANR	3578927	Sizeof	sizeof		3577115	0					
ANR	3578928	SizeofOperand	format		3577115	1					
ANR	3578929	PrimaryExpression	1		3577115	1					
ANR	3578930	ExpressionStatement	"memcpy ( format , start , l )"	424:8:10805:10829	3577115	2	True				
ANR	3578931	CallExpression	"memcpy ( format , start , l )"		3577115	0					
ANR	3578932	Callee	memcpy		3577115	0					
ANR	3578933	Identifier	memcpy		3577115	0					
ANR	3578934	ArgumentList	format		3577115	1					
ANR	3578935	Argument	format		3577115	0					
ANR	3578936	Identifier	format		3577115	0					
ANR	3578937	Argument	start		3577115	1					
ANR	3578938	Identifier	start		3577115	0					
ANR	3578939	Argument	l		3577115	2					
ANR	3578940	Identifier	l		3577115	0					
ANR	3578941	ExpressionStatement	format [ l ] = '\\0'	425:8:10839:10855	3577115	3	True				
ANR	3578942	AssignmentExpression	format [ l ] = '\\0'		3577115	0		=			
ANR	3578943	ArrayIndexing	format [ l ]		3577115	0					
ANR	3578944	Identifier	format		3577115	0					
ANR	3578945	Identifier	l		3577115	1					
ANR	3578946	PrimaryExpression	'\\0'		3577115	1					
ANR	3578947	BreakStatement	break ;	426:8:10865:10870	3577115	4	True				
ANR	3578948	ExpressionStatement	s ++	428:7:10888:10891	3577115	1	True				
ANR	3578949	PostIncDecOperationExpression	s ++		3577115	0					
ANR	3578950	Identifier	s		3577115	0					
ANR	3578951	IncDec	++		3577115	1					
ANR	3578952	IfStatement	if ( s [ 1 ] == '\\0' )		3577115	4					
ANR	3578953	Condition	s [ 1 ] == '\\0'	430:10:10911:10922	3577115	0	True				
ANR	3578954	EqualityExpression	s [ 1 ] == '\\0'		3577115	0		==			
ANR	3578955	ArrayIndexing	s [ 1 ]		3577115	0					
ANR	3578956	Identifier	s		3577115	0					
ANR	3578957	PrimaryExpression	1		3577115	1					
ANR	3578958	PrimaryExpression	'\\0'		3577115	1					
ANR	3578959	CompoundStatement		330:24:8963:8963	3577115	1					
ANR	3578960	ExpressionStatement	"zlog ( ZLOG_WARNING , ""missing closing embrace in the access.format"" )"	431:7:10934:11000	3577115	0	True				
ANR	3578961	CallExpression	"zlog ( ZLOG_WARNING , ""missing closing embrace in the access.format"" )"		3577115	0					
ANR	3578962	Callee	zlog		3577115	0					
ANR	3578963	Identifier	zlog		3577115	0					
ANR	3578964	ArgumentList	ZLOG_WARNING		3577115	1					
ANR	3578965	Argument	ZLOG_WARNING		3577115	0					
ANR	3578966	Identifier	ZLOG_WARNING		3577115	0					
ANR	3578967	Argument	"""missing closing embrace in the access.format"""		3577115	1					
ANR	3578968	PrimaryExpression	"""missing closing embrace in the access.format"""		3577115	0					
ANR	3578969	ReturnStatement	return - 1 ;	432:7:11009:11018	3577115	1	True				
ANR	3578970	UnaryOperationExpression	- 1		3577115	0					
ANR	3578971	UnaryOperator	-		3577115	0					
ANR	3578972	PrimaryExpression	1		3577115	1					
ANR	3578973	BreakStatement	break ;	435:5:11040:11045	3577115	71	True				
ANR	3578974	Label	default :	437:4:11052:11059	3577115	72	True				
ANR	3578975	Identifier	default		3577115	0					
ANR	3578976	ExpressionStatement	"zlog ( ZLOG_WARNING , ""Invalid token in the access.format (%%%c)"" , * s )"	438:5:11066:11133	3577115	73	True				
ANR	3578977	CallExpression	"zlog ( ZLOG_WARNING , ""Invalid token in the access.format (%%%c)"" , * s )"		3577115	0					
ANR	3578978	Callee	zlog		3577115	0					
ANR	3578979	Identifier	zlog		3577115	0					
ANR	3578980	ArgumentList	ZLOG_WARNING		3577115	1					
ANR	3578981	Argument	ZLOG_WARNING		3577115	0					
ANR	3578982	Identifier	ZLOG_WARNING		3577115	0					
ANR	3578983	Argument	"""Invalid token in the access.format (%%%c)"""		3577115	1					
ANR	3578984	PrimaryExpression	"""Invalid token in the access.format (%%%c)"""		3577115	0					
ANR	3578985	Argument	* s		3577115	2					
ANR	3578986	UnaryOperationExpression	* s		3577115	0					
ANR	3578987	UnaryOperator	*		3577115	0					
ANR	3578988	Identifier	s		3577115	1					
ANR	3578989	ReturnStatement	return - 1 ;	439:5:11140:11149	3577115	74	True				
ANR	3578990	UnaryOperationExpression	- 1		3577115	0					
ANR	3578991	UnaryOperator	-		3577115	0					
ANR	3578992	PrimaryExpression	1		3577115	1					
ANR	3578993	IfStatement	if ( * s != '}' && format [ 0 ] != '\\0' )		3577115	3					
ANR	3578994	Condition	* s != '}' && format [ 0 ] != '\\0'	442:7:11164:11193	3577115	0	True				
ANR	3578995	AndExpression	* s != '}' && format [ 0 ] != '\\0'		3577115	0		&&			
ANR	3578996	EqualityExpression	* s != '}'		3577115	0		!=			
ANR	3578997	UnaryOperationExpression	* s		3577115	0					
ANR	3578998	UnaryOperator	*		3577115	0					
ANR	3578999	Identifier	s		3577115	1					
ANR	3579000	PrimaryExpression	'}'		3577115	1					
ANR	3579001	EqualityExpression	format [ 0 ] != '\\0'		3577115	1		!=			
ANR	3579002	ArrayIndexing	format [ 0 ]		3577115	0					
ANR	3579003	Identifier	format		3577115	0					
ANR	3579004	PrimaryExpression	0		3577115	1					
ANR	3579005	PrimaryExpression	'\\0'		3577115	1					
ANR	3579006	CompoundStatement		342:39:9234:9234	3577115	1					
ANR	3579007	ExpressionStatement	"zlog ( ZLOG_WARNING , ""embrace is not allowed for modifier %%%c"" , * s )"	443:4:11202:11268	3577115	0	True				
ANR	3579008	CallExpression	"zlog ( ZLOG_WARNING , ""embrace is not allowed for modifier %%%c"" , * s )"		3577115	0					
ANR	3579009	Callee	zlog		3577115	0					
ANR	3579010	Identifier	zlog		3577115	0					
ANR	3579011	ArgumentList	ZLOG_WARNING		3577115	1					
ANR	3579012	Argument	ZLOG_WARNING		3577115	0					
ANR	3579013	Identifier	ZLOG_WARNING		3577115	0					
ANR	3579014	Argument	"""embrace is not allowed for modifier %%%c"""		3577115	1					
ANR	3579015	PrimaryExpression	"""embrace is not allowed for modifier %%%c"""		3577115	0					
ANR	3579016	Argument	* s		3577115	2					
ANR	3579017	UnaryOperationExpression	* s		3577115	0					
ANR	3579018	UnaryOperator	*		3577115	0					
ANR	3579019	Identifier	s		3577115	1					
ANR	3579020	ReturnStatement	return - 1 ;	444:4:11274:11283	3577115	1	True				
ANR	3579021	UnaryOperationExpression	- 1		3577115	0					
ANR	3579022	UnaryOperator	-		3577115	0					
ANR	3579023	PrimaryExpression	1		3577115	1					
ANR	3579024	ExpressionStatement	s ++	446:3:11293:11296	3577115	4	True				
ANR	3579025	PostIncDecOperationExpression	s ++		3577115	0					
ANR	3579026	Identifier	s		3577115	0					
ANR	3579027	IncDec	++		3577115	1					
ANR	3579028	IfStatement	if ( ! test )		3577115	5					
ANR	3579029	Condition	! test	447:7:11305:11309	3577115	0	True				
ANR	3579030	UnaryOperationExpression	! test		3577115	0					
ANR	3579031	UnaryOperator	!		3577115	0					
ANR	3579032	Identifier	test		3577115	1					
ANR	3579033	CompoundStatement		347:14:9350:9350	3577115	1					
ANR	3579034	ExpressionStatement	b += len2	448:4:11318:11327	3577115	0	True				
ANR	3579035	AssignmentExpression	b += len2		3577115	0		+=			
ANR	3579036	Identifier	b		3577115	0					
ANR	3579037	Identifier	len2		3577115	1					
ANR	3579038	ExpressionStatement	len += len2	449:4:11333:11344	3577115	1	True				
ANR	3579039	AssignmentExpression	len += len2		3577115	0		+=			
ANR	3579040	Identifier	len		3577115	0					
ANR	3579041	Identifier	len2		3577115	1					
ANR	3579042	ContinueStatement	continue ;	451:3:11354:11362	3577115	6	True				
ANR	3579043	IfStatement	if ( ! test )		3577115	3					
ANR	3579044	Condition	! test	454:6:11375:11379	3577115	0	True				
ANR	3579045	UnaryOperationExpression	! test		3577115	0					
ANR	3579046	UnaryOperator	!		3577115	0					
ANR	3579047	Identifier	test		3577115	1					
ANR	3579048	CompoundStatement		354:13:9420:9420	3577115	1					
ANR	3579049	ExpressionStatement	* b = * s	456:3:11435:11442	3577115	0	True				
ANR	3579050	AssignmentExpression	* b = * s		3577115	0		=			
ANR	3579051	UnaryOperationExpression	* b		3577115	0					
ANR	3579052	UnaryOperator	*		3577115	0					
ANR	3579053	Identifier	b		3577115	1					
ANR	3579054	UnaryOperationExpression	* s		3577115	1					
ANR	3579055	UnaryOperator	*		3577115	0					
ANR	3579056	Identifier	s		3577115	1					
ANR	3579057	ExpressionStatement	b ++	457:3:11447:11450	3577115	1	True				
ANR	3579058	PostIncDecOperationExpression	b ++		3577115	0					
ANR	3579059	Identifier	b		3577115	0					
ANR	3579060	IncDec	++		3577115	1					
ANR	3579061	ExpressionStatement	len ++	458:3:11455:11460	3577115	2	True				
ANR	3579062	PostIncDecOperationExpression	len ++		3577115	0					
ANR	3579063	Identifier	len		3577115	0					
ANR	3579064	IncDec	++		3577115	1					
ANR	3579065	ExpressionStatement	s ++	460:2:11468:11471	3577115	4	True				
ANR	3579066	PostIncDecOperationExpression	s ++		3577115	0					
ANR	3579067	Identifier	s		3577115	0					
ANR	3579068	IncDec	++		3577115	1					
ANR	3579069	IfStatement	if ( ! test && strlen ( buffer ) > 0 )		3577115	20					
ANR	3579070	Condition	! test && strlen ( buffer ) > 0	463:5:11482:11508	3577115	0	True				
ANR	3579071	AndExpression	! test && strlen ( buffer ) > 0		3577115	0		&&			
ANR	3579072	UnaryOperationExpression	! test		3577115	0					
ANR	3579073	UnaryOperator	!		3577115	0					
ANR	3579074	Identifier	test		3577115	1					
ANR	3579075	RelationalExpression	strlen ( buffer ) > 0		3577115	1		>			
ANR	3579076	CallExpression	strlen ( buffer )		3577115	0					
ANR	3579077	Callee	strlen		3577115	0					
ANR	3579078	Identifier	strlen		3577115	0					
ANR	3579079	ArgumentList	buffer		3577115	1					
ANR	3579080	Argument	buffer		3577115	0					
ANR	3579081	Identifier	buffer		3577115	0					
ANR	3579082	PrimaryExpression	0		3577115	1					
ANR	3579083	CompoundStatement		363:34:9549:9549	3577115	1					
ANR	3579084	ExpressionStatement	buffer [ len ] = '\\n'	464:2:11515:11533	3577115	0	True				
ANR	3579085	AssignmentExpression	buffer [ len ] = '\\n'		3577115	0		=			
ANR	3579086	ArrayIndexing	buffer [ len ]		3577115	0					
ANR	3579087	Identifier	buffer		3577115	0					
ANR	3579088	Identifier	len		3577115	1					
ANR	3579089	PrimaryExpression	'\\n'		3577115	1					
ANR	3579090	ExpressionStatement	"write ( fpm_log_fd , buffer , len + 1 )"	465:2:11537:11571	3577115	1	True				
ANR	3579091	CallExpression	"write ( fpm_log_fd , buffer , len + 1 )"		3577115	0					
ANR	3579092	Callee	write		3577115	0					
ANR	3579093	Identifier	write		3577115	0					
ANR	3579094	ArgumentList	fpm_log_fd		3577115	1					
ANR	3579095	Argument	fpm_log_fd		3577115	0					
ANR	3579096	Identifier	fpm_log_fd		3577115	0					
ANR	3579097	Argument	buffer		3577115	1					
ANR	3579098	Identifier	buffer		3577115	0					
ANR	3579099	Argument	len + 1		3577115	2					
ANR	3579100	AdditiveExpression	len + 1		3577115	0		+			
ANR	3579101	Identifier	len		3577115	0					
ANR	3579102	PrimaryExpression	1		3577115	1					
ANR	3579103	ReturnStatement	return 0 ;	468:1:11578:11586	3577115	21	True				
ANR	3579104	PrimaryExpression	0		3577115	0					
ANR	3579105	ReturnType	int		3577115	1					
ANR	3579106	Identifier	fpm_log_write		3577115	2					
ANR	3579107	ParameterList	char * log_format		3577115	3					
ANR	3579108	Parameter	char * log_format	100:18:1933:1948	3577115	0	True				
ANR	3579109	ParameterType	char *		3577115	0					
ANR	3579110	Identifier	log_format		3577115	1					
ANR	3579111	CFGEntryNode	ENTRY		3577115		True				
ANR	3579112	CFGExitNode	EXIT		3577115		True				
ANR	3579113	Symbol	localtime		3577115						
ANR	3579114	Symbol	* scoreboard		3577115						
ANR	3579115	Symbol	SG ( sapi_headers ) . http_response_code		3577115						
ANR	3579116	Symbol	h -> header		3577115						
ANR	3579117	Symbol	proc . duration . tv_sec		3577115						
ANR	3579118	Symbol	* proc . request_method		3577115						
ANR	3579119	Symbol	* proc . query_string		3577115						
ANR	3579120	Symbol	* format_len		3577115						
ANR	3579121	Symbol	len2		3577115						
ANR	3579122	Symbol	now_epoch		3577115						
ANR	3579123	Symbol	fpm_scoreboard_get_tick		3577115						
ANR	3579124	Symbol	proc . duration		3577115						
ANR	3579125	Symbol	* * scoreboard		3577115						
ANR	3579126	Symbol	& sapi_headers -> headers		3577115						
ANR	3579127	Symbol	proc . last_request_cpu . tms_utime		3577115						
ANR	3579128	Symbol	strlen		3577115						
ANR	3579129	Symbol	sapi_headers		3577115						
ANR	3579130	Symbol	len		3577115						
ANR	3579131	Symbol	FPM_LOG_BUFFER		3577115						
ANR	3579132	Symbol	& proc . accepted_epoch		3577115						
ANR	3579133	Symbol	tmp		3577115						
ANR	3579134	Symbol	proc . script_filename		3577115						
ANR	3579135	Symbol	ZLOG_WARNING		3577115						
ANR	3579136	Symbol	proc . last_request_cpu		3577115						
ANR	3579137	Symbol	buffer		3577115						
ANR	3579138	Symbol	scoreboard		3577115						
ANR	3579139	Symbol	strcasecmp		3577115						
ANR	3579140	Symbol	proc . cpu_duration . tv_usec		3577115						
ANR	3579141	Symbol	format_len		3577115						
ANR	3579142	Symbol	proc . request_uri		3577115						
ANR	3579143	Symbol	proc . duration . tv_usec		3577115						
ANR	3579144	Symbol	h -> header_len		3577115						
ANR	3579145	Symbol	& SG		3577115						
ANR	3579146	Symbol	server_context		3577115						
ANR	3579147	Symbol	NULL		3577115						
ANR	3579148	Symbol	* * h		3577115						
ANR	3579149	Symbol	test		3577115						
ANR	3579150	Symbol	format		3577115						
ANR	3579151	Symbol	* proc_p		3577115						
ANR	3579152	Symbol	proc . auth_user		3577115						
ANR	3579153	Symbol	proc . last_request_cpu . tms_cutime		3577115						
ANR	3579154	Symbol	* header		3577115						
ANR	3579155	Symbol	* proc		3577115						
ANR	3579156	Symbol	proc . content_length		3577115						
ANR	3579157	Symbol	proc . memory		3577115						
ANR	3579158	Symbol	proc . cpu_duration		3577115						
ANR	3579159	Symbol	* format		3577115						
ANR	3579160	Symbol	strstr		3577115						
ANR	3579161	Symbol	header		3577115						
ANR	3579162	Symbol	fpm_scoreboard_proc_acquire		3577115						
ANR	3579163	Symbol	zend_llist_get_first_ex		3577115						
ANR	3579164	Symbol	proc . last_request_cpu . tms_cstime		3577115						
ANR	3579165	Symbol	log_format		3577115						
ANR	3579166	Symbol	scoreboard -> pool		3577115						
ANR	3579167	Symbol	proc . request_method		3577115						
ANR	3579168	Symbol	SG		3577115						
ANR	3579169	Symbol	fcgi_getenv		3577115						
ANR	3579170	Symbol	pos		3577115						
ANR	3579171	Symbol	zend_llist_get_next_ex		3577115						
ANR	3579172	Symbol	fcgi_get_last_client_ip		3577115						
ANR	3579173	Symbol	tms_total		3577115						
ANR	3579174	Symbol	proc_p		3577115						
ANR	3579175	Symbol	snprintf		3577115						
ANR	3579176	Symbol	& proc		3577115						
ANR	3579177	Symbol	proc . cpu_duration . tv_sec		3577115						
ANR	3579178	Symbol	b		3577115						
ANR	3579179	Symbol	proc		3577115						
ANR	3579180	Symbol	fpm_scoreboard_get		3577115						
ANR	3579181	Symbol	* buffer		3577115						
ANR	3579182	Symbol	getppid		3577115						
ANR	3579183	Symbol	* scoreboard -> pool		3577115						
ANR	3579184	Symbol	h		3577115						
ANR	3579185	Symbol	start		3577115						
ANR	3579186	Symbol	* b		3577115						
ANR	3579187	Symbol	env		3577115						
ANR	3579188	Symbol	l		3577115						
ANR	3579189	Symbol	fpm_log_format		3577115						
ANR	3579190	Symbol	fpm_log_fd		3577115						
ANR	3579191	Symbol	* proc . script_filename		3577115						
ANR	3579192	Symbol	token		3577115						
ANR	3579193	Symbol	* h		3577115						
ANR	3579194	Symbol	s		3577115						
ANR	3579195	Symbol	proc . query_string		3577115						
ANR	3579196	Symbol	t		3577115						
ANR	3579197	Symbol	& now_epoch		3577115						
ANR	3579198	Symbol	* l		3577115						
ANR	3579199	Symbol	* h -> header		3577115						
ANR	3579200	Symbol	time		3577115						
ANR	3579201	Symbol	* s		3577115						
ANR	3579202	Symbol	ZLOG_NOTICE		3577115						
ANR	3579203	Symbol	& pos		3577115						
ANR	3579204	Symbol	getpid		3577115						
ANR	3579205	Symbol	proc . last_request_cpu . tms_stime		3577115						
ANR	3579206	Symbol	* len		3577115						
