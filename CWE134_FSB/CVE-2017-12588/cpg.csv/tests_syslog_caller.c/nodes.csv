command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	339470	File	data/converged/CVE-2017-12588_rsyslog/tests_syslog_caller.c								
ANR	339471	ClassDef	<unnamed>	41:7:1259:1338							
ANR	339472	DeclStmt									
ANR	339473	Decl									fmt
ANR	339474	Function	usage	44:0:1341:1434							
ANR	339475	FunctionDef	usage ()		339474	0					
ANR	339476	CompoundStatement		45:0:1365:1434	339474	0					
ANR	339477	ExpressionStatement	"fprintf ( stderr , ""usage: syslog_caller num-messages\\n"" )"	46:1:1368:1422	339474	0	True				
ANR	339478	CallExpression	"fprintf ( stderr , ""usage: syslog_caller num-messages\\n"" )"		339474	0					
ANR	339479	Callee	fprintf		339474	0					
ANR	339480	Identifier	fprintf		339474	0					
ANR	339481	ArgumentList	stderr		339474	1					
ANR	339482	Argument	stderr		339474	0					
ANR	339483	Identifier	stderr		339474	0					
ANR	339484	Argument	"""usage: syslog_caller num-messages\\n"""		339474	1					
ANR	339485	PrimaryExpression	"""usage: syslog_caller num-messages\\n"""		339474	0					
ANR	339486	ExpressionStatement	exit ( 1 )	47:1:1425:1432	339474	1	True				
ANR	339487	CallExpression	exit ( 1 )		339474	0					
ANR	339488	Callee	exit		339474	0					
ANR	339489	Identifier	exit		339474	0					
ANR	339490	ArgumentList	1		339474	1					
ANR	339491	Argument	1		339474	0					
ANR	339492	PrimaryExpression	1		339474	0					
ANR	339493	ReturnType	static void		339474	1					
ANR	339494	Identifier	usage		339474	2					
ANR	339495	ParameterList			339474	3					
ANR	339496	CFGEntryNode	ENTRY		339474		True				
ANR	339497	CFGExitNode	EXIT		339474		True				
ANR	339498	Symbol	stderr		339474						
ANR	339499	Function	genMsg	53:0:1510:1808							
ANR	339500	FunctionDef	"genMsg (char * buf , const int sev , const int iRun)"		339499	0					
ANR	339501	CompoundStatement		55:0:1571:1808	339499	0					
ANR	339502	SwitchStatement	switch ( fmt )		339499	0					
ANR	339503	Condition	fmt	56:8:1581:1583	339499	0	True				
ANR	339504	Identifier	fmt		339499	0					
ANR	339505	CompoundStatement		2:13:14:14	339499	1					
ANR	339506	Label	case FMT_NATIVE :	57:1:1589:1604	339499	0	True				
ANR	339507	Identifier	FMT_NATIVE		339499	0					
ANR	339508	ExpressionStatement	"sprintf ( buf , ""test message nbr %d, severity=%d"" , iRun , sev )"	58:2:1608:1667	339499	1	True				
ANR	339509	CallExpression	"sprintf ( buf , ""test message nbr %d, severity=%d"" , iRun , sev )"		339499	0					
ANR	339510	Callee	sprintf		339499	0					
ANR	339511	Identifier	sprintf		339499	0					
ANR	339512	ArgumentList	buf		339499	1					
ANR	339513	Argument	buf		339499	0					
ANR	339514	Identifier	buf		339499	0					
ANR	339515	Argument	"""test message nbr %d, severity=%d"""		339499	1					
ANR	339516	PrimaryExpression	"""test message nbr %d, severity=%d"""		339499	0					
ANR	339517	Argument	iRun		339499	2					
ANR	339518	Identifier	iRun		339499	0					
ANR	339519	Argument	sev		339499	3					
ANR	339520	Identifier	sev		339499	0					
ANR	339521	BreakStatement	break ;	59:2:1671:1676	339499	2	True				
ANR	339522	Label	case FMT_SYSLOG_INJECT_L :	60:1:1679:1703	339499	3	True				
ANR	339523	Identifier	FMT_SYSLOG_INJECT_L		339499	0					
ANR	339524	ExpressionStatement	"sprintf ( buf , ""test\\n"" )"	61:2:1707:1729	339499	4	True				
ANR	339525	CallExpression	"sprintf ( buf , ""test\\n"" )"		339499	0					
ANR	339526	Callee	sprintf		339499	0					
ANR	339527	Identifier	sprintf		339499	0					
ANR	339528	ArgumentList	buf		339499	1					
ANR	339529	Argument	buf		339499	0					
ANR	339530	Identifier	buf		339499	0					
ANR	339531	Argument	"""test\\n"""		339499	1					
ANR	339532	PrimaryExpression	"""test\\n"""		339499	0					
ANR	339533	BreakStatement	break ;	62:2:1733:1738	339499	5	True				
ANR	339534	Label	case FMT_SYSLOG_INJECT_C :	63:1:1741:1765	339499	6	True				
ANR	339535	Identifier	FMT_SYSLOG_INJECT_C		339499	0					
ANR	339536	ExpressionStatement	"sprintf ( buf , ""test 1\\t2"" )"	64:2:1769:1794	339499	7	True				
ANR	339537	CallExpression	"sprintf ( buf , ""test 1\\t2"" )"		339499	0					
ANR	339538	Callee	sprintf		339499	0					
ANR	339539	Identifier	sprintf		339499	0					
ANR	339540	ArgumentList	buf		339499	1					
ANR	339541	Argument	buf		339499	0					
ANR	339542	Identifier	buf		339499	0					
ANR	339543	Argument	"""test 1\\t2"""		339499	1					
ANR	339544	PrimaryExpression	"""test 1\\t2"""		339499	0					
ANR	339545	BreakStatement	break ;	65:2:1798:1803	339499	8	True				
ANR	339546	ReturnType	static void		339499	1					
ANR	339547	Identifier	genMsg		339499	2					
ANR	339548	ParameterList	"char * buf , const int sev , const int iRun"		339499	3					
ANR	339549	Parameter	char * buf	54:7:1529:1537	339499	0	True				
ANR	339550	ParameterType	char *		339499	0					
ANR	339551	Identifier	buf		339499	1					
ANR	339552	Parameter	const int sev	54:18:1540:1552	339499	1	True				
ANR	339553	ParameterType	const int		339499	0					
ANR	339554	Identifier	sev		339499	1					
ANR	339555	Parameter	const int iRun	54:33:1555:1568	339499	2	True				
ANR	339556	ParameterType	const int		339499	0					
ANR	339557	Identifier	iRun		339499	1					
ANR	339558	CFGEntryNode	ENTRY		339499		True				
ANR	339559	CFGExitNode	EXIT		339499		True				
ANR	339560	Symbol	buf		339499						
ANR	339561	Symbol	iRun		339499						
ANR	339562	Symbol	sev		339499						
ANR	339563	Symbol	fmt		339499						
ANR	339564	Function	main	70:0:1818:3448							
ANR	339565	FunctionDef	"main (int argc , char * argv [ ])"		339564	0					
ANR	339566	CompoundStatement		71:0:1851:3448	339564	0					
ANR	339567	IdentifierDeclStatement	int i ;	72:1:1854:1859	339564	0	True				
ANR	339568	IdentifierDecl	i		339564	0					
ANR	339569	IdentifierDeclType	int		339564	0					
ANR	339570	Identifier	i		339564	1					
ANR	339571	IdentifierDeclStatement	int opt ;	73:1:1862:1869	339564	1	True				
ANR	339572	IdentifierDecl	opt		339564	0					
ANR	339573	IdentifierDeclType	int		339564	0					
ANR	339574	Identifier	opt		339564	1					
ANR	339575	IdentifierDeclStatement	int bRollingSev = 0 ;	74:1:1872:1891	339564	2	True				
ANR	339576	IdentifierDecl	bRollingSev = 0		339564	0					
ANR	339577	IdentifierDeclType	int		339564	0					
ANR	339578	Identifier	bRollingSev		339564	1					
ANR	339579	AssignmentExpression	bRollingSev = 0		339564	2		=			
ANR	339580	Identifier	bRollingSev		339564	0					
ANR	339581	PrimaryExpression	0		339564	1					
ANR	339582	IdentifierDeclStatement	int sev = 6 ;	75:1:1894:1905	339564	3	True				
ANR	339583	IdentifierDecl	sev = 6		339564	0					
ANR	339584	IdentifierDeclType	int		339564	0					
ANR	339585	Identifier	sev		339564	1					
ANR	339586	AssignmentExpression	sev = 6		339564	2		=			
ANR	339587	Identifier	sev		339564	0					
ANR	339588	PrimaryExpression	6		339564	1					
ANR	339589	IdentifierDeclStatement	int msgs = 500 ;	76:1:1908:1922	339564	4	True				
ANR	339590	IdentifierDecl	msgs = 500		339564	0					
ANR	339591	IdentifierDeclType	int		339564	0					
ANR	339592	Identifier	msgs		339564	1					
ANR	339593	AssignmentExpression	msgs = 500		339564	2		=			
ANR	339594	Identifier	msgs		339564	0					
ANR	339595	PrimaryExpression	500		339564	1					
ANR	339596	IdentifierDeclStatement	stdlog_channel_t logchan = NULL ;	78:1:1955:1986	339564	5	True				
ANR	339597	IdentifierDecl	logchan = NULL		339564	0					
ANR	339598	IdentifierDeclType	stdlog_channel_t		339564	0					
ANR	339599	Identifier	logchan		339564	1					
ANR	339600	AssignmentExpression	logchan = NULL		339564	2		=			
ANR	339601	Identifier	NULL		339564	0					
ANR	339602	Identifier	NULL		339564	1					
ANR	339603	IdentifierDeclStatement	"const char * chandesc = ""syslog:"" ;"	79:1:1989:2021	339564	6	True				
ANR	339604	IdentifierDecl	"* chandesc = ""syslog:"""		339564	0					
ANR	339605	IdentifierDeclType	const char *		339564	0					
ANR	339606	Identifier	chandesc		339564	1					
ANR	339607	AssignmentExpression	"* chandesc = ""syslog:"""		339564	2		=			
ANR	339608	Identifier	chandesc		339564	0					
ANR	339609	PrimaryExpression	"""syslog:"""		339564	1					
ANR	339610	IdentifierDeclStatement	char msgbuf [ 4096 ] ;	80:1:2024:2041	339564	7	True				
ANR	339611	IdentifierDecl	msgbuf [ 4096 ]		339564	0					
ANR	339612	IdentifierDeclType	char [ 4096 ]		339564	0					
ANR	339613	Identifier	msgbuf		339564	1					
ANR	339614	PrimaryExpression	4096		339564	2					
ANR	339615	ExpressionStatement	stdlog_init ( STDLOG_USE_DFLT_OPTS )	84:1:2082:2115	339564	8	True				
ANR	339616	CallExpression	stdlog_init ( STDLOG_USE_DFLT_OPTS )		339564	0					
ANR	339617	Callee	stdlog_init		339564	0					
ANR	339618	Identifier	stdlog_init		339564	0					
ANR	339619	ArgumentList	STDLOG_USE_DFLT_OPTS		339564	1					
ANR	339620	Argument	STDLOG_USE_DFLT_OPTS		339564	0					
ANR	339621	Identifier	STDLOG_USE_DFLT_OPTS		339564	0					
ANR	339622	WhileStatement	"while ( ( opt = getopt ( argc , argv , ""m:s:C:f:"" ) ) != - 1 )"		339564	9					
ANR	339623	Condition	"( opt = getopt ( argc , argv , ""m:s:C:f:"" ) ) != - 1"	85:7:2124:2167	339564	0	True				
ANR	339624	EqualityExpression	"( opt = getopt ( argc , argv , ""m:s:C:f:"" ) ) != - 1"		339564	0		!=			
ANR	339625	AssignmentExpression	"opt = getopt ( argc , argv , ""m:s:C:f:"" )"		339564	0		=			
ANR	339626	Identifier	opt		339564	0					
ANR	339627	CallExpression	"getopt ( argc , argv , ""m:s:C:f:"" )"		339564	1					
ANR	339628	Callee	getopt		339564	0					
ANR	339629	Identifier	getopt		339564	0					
ANR	339630	ArgumentList	argc		339564	1					
ANR	339631	Argument	argc		339564	0					
ANR	339632	Identifier	argc		339564	0					
ANR	339633	Argument	argv		339564	1					
ANR	339634	Identifier	argv		339564	0					
ANR	339635	Argument	"""m:s:C:f:"""		339564	2					
ANR	339636	PrimaryExpression	"""m:s:C:f:"""		339564	0					
ANR	339637	UnaryOperationExpression	- 1		339564	1					
ANR	339638	UnaryOperator	-		339564	0					
ANR	339639	PrimaryExpression	1		339564	1					
ANR	339640	CompoundStatement		15:53:318:318	339564	1					
ANR	339641	SwitchStatement	switch ( opt )		339564	0					
ANR	339642	Condition	opt	89:10:2246:2248	339564	0	True				
ANR	339643	Identifier	opt		339564	0					
ANR	339644	CompoundStatement		19:15:399:399	339564	1					
ANR	339645	Label	case 's' :	90:2:2255:2263	339564	0	True				
ANR	339646	IfStatement	if ( * optarg == 'r' )		339564	1					
ANR	339647	Condition	* optarg == 'r'	90:15:2268:2281	339564	0	True				
ANR	339648	EqualityExpression	* optarg == 'r'		339564	0		==			
ANR	339649	UnaryOperationExpression	* optarg		339564	0					
ANR	339650	UnaryOperator	*		339564	0					
ANR	339651	Identifier	optarg		339564	1					
ANR	339652	PrimaryExpression	'r'		339564	1					
ANR	339653	CompoundStatement		20:31:432:432	339564	1					
ANR	339654	ExpressionStatement	bRollingSev = 1	91:5:2291:2306	339564	0	True				
ANR	339655	AssignmentExpression	bRollingSev = 1		339564	0		=			
ANR	339656	Identifier	bRollingSev		339564	0					
ANR	339657	PrimaryExpression	1		339564	1					
ANR	339658	ExpressionStatement	sev = 0	92:5:2313:2320	339564	1	True				
ANR	339659	AssignmentExpression	sev = 0		339564	0		=			
ANR	339660	Identifier	sev		339564	0					
ANR	339661	PrimaryExpression	0		339564	1					
ANR	339662	ElseStatement	else		339564	0					
ANR	339663	ExpressionStatement	sev = atoi ( optarg ) % 8	95:5:2368:2390	339564	0	True				
ANR	339664	AssignmentExpression	sev = atoi ( optarg ) % 8		339564	0		=			
ANR	339665	Identifier	sev		339564	0					
ANR	339666	MultiplicativeExpression	atoi ( optarg ) % 8		339564	1		%			
ANR	339667	CallExpression	atoi ( optarg )		339564	0					
ANR	339668	Callee	atoi		339564	0					
ANR	339669	Identifier	atoi		339564	0					
ANR	339670	ArgumentList	optarg		339564	1					
ANR	339671	Argument	optarg		339564	0					
ANR	339672	Identifier	optarg		339564	0					
ANR	339673	PrimaryExpression	8		339564	1					
ANR	339674	BreakStatement	break ;	99:4:2434:2439	339564	2	True				
ANR	339675	Label	case 'm' :	100:2:2443:2451	339564	3	True				
ANR	339676	ExpressionStatement	msgs = atoi ( optarg )	100:12:2453:2472	339564	4	True				
ANR	339677	AssignmentExpression	msgs = atoi ( optarg )		339564	0		=			
ANR	339678	Identifier	msgs		339564	0					
ANR	339679	CallExpression	atoi ( optarg )		339564	1					
ANR	339680	Callee	atoi		339564	0					
ANR	339681	Identifier	atoi		339564	0					
ANR	339682	ArgumentList	optarg		339564	1					
ANR	339683	Argument	optarg		339564	0					
ANR	339684	Identifier	optarg		339564	0					
ANR	339685	BreakStatement	break ;	101:4:2478:2483	339564	5	True				
ANR	339686	Label	case 'C' :	103:2:2517:2525	339564	6	True				
ANR	339687	ExpressionStatement	chandesc = optarg	103:12:2527:2544	339564	7	True				
ANR	339688	AssignmentExpression	chandesc = optarg		339564	0		=			
ANR	339689	Identifier	chandesc		339564	0					
ANR	339690	Identifier	optarg		339564	1					
ANR	339691	BreakStatement	break ;	104:4:2550:2555	339564	8	True				
ANR	339692	Label	case 'f' :	105:2:2559:2567	339564	9	True				
ANR	339693	IfStatement	"if ( ! strcmp ( optarg , ""syslog_inject-l"" ) )"		339564	10					
ANR	339694	Condition	"! strcmp ( optarg , ""syslog_inject-l"" )"	105:15:2572:2605	339564	0	True				
ANR	339695	UnaryOperationExpression	"! strcmp ( optarg , ""syslog_inject-l"" )"		339564	0					
ANR	339696	UnaryOperator	!		339564	0					
ANR	339697	CallExpression	"strcmp ( optarg , ""syslog_inject-l"" )"		339564	1					
ANR	339698	Callee	strcmp		339564	0					
ANR	339699	Identifier	strcmp		339564	0					
ANR	339700	ArgumentList	optarg		339564	1					
ANR	339701	Argument	optarg		339564	0					
ANR	339702	Identifier	optarg		339564	0					
ANR	339703	Argument	"""syslog_inject-l"""		339564	1					
ANR	339704	PrimaryExpression	"""syslog_inject-l"""		339564	0					
ANR	339705	ExpressionStatement	fmt = FMT_SYSLOG_INJECT_L	106:5:2613:2638	339564	1	True				
ANR	339706	AssignmentExpression	fmt = FMT_SYSLOG_INJECT_L		339564	0		=			
ANR	339707	Identifier	fmt		339564	0					
ANR	339708	Identifier	FMT_SYSLOG_INJECT_L		339564	1					
ANR	339709	ElseStatement	else		339564	0					
ANR	339710	IfStatement	"if ( ! strcmp ( optarg , ""syslog_inject-c"" ) )"		339564	0					
ANR	339711	Condition	"! strcmp ( optarg , ""syslog_inject-c"" )"	107:12:2652:2685	339564	0	True				
ANR	339712	UnaryOperationExpression	"! strcmp ( optarg , ""syslog_inject-c"" )"		339564	0					
ANR	339713	UnaryOperator	!		339564	0					
ANR	339714	CallExpression	"strcmp ( optarg , ""syslog_inject-c"" )"		339564	1					
ANR	339715	Callee	strcmp		339564	0					
ANR	339716	Identifier	strcmp		339564	0					
ANR	339717	ArgumentList	optarg		339564	1					
ANR	339718	Argument	optarg		339564	0					
ANR	339719	Identifier	optarg		339564	0					
ANR	339720	Argument	"""syslog_inject-c"""		339564	1					
ANR	339721	PrimaryExpression	"""syslog_inject-c"""		339564	0					
ANR	339722	ExpressionStatement	fmt = FMT_SYSLOG_INJECT_C	108:5:2693:2718	339564	1	True				
ANR	339723	AssignmentExpression	fmt = FMT_SYSLOG_INJECT_C		339564	0		=			
ANR	339724	Identifier	fmt		339564	0					
ANR	339725	Identifier	FMT_SYSLOG_INJECT_C		339564	1					
ANR	339726	ElseStatement	else		339564	0					
ANR	339727	ExpressionStatement	usage ( )	110:5:2734:2741	339564	0	True				
ANR	339728	CallExpression	usage ( )		339564	0					
ANR	339729	Callee	usage		339564	0					
ANR	339730	Identifier	usage		339564	0					
ANR	339731	ArgumentList			339564	1					
ANR	339732	BreakStatement	break ;	111:4:2747:2752	339564	11	True				
ANR	339733	Label	default :	113:2:2763:2770	339564	12	True				
ANR	339734	Identifier	default		339564	0					
ANR	339735	ExpressionStatement	usage ( )	113:11:2772:2779	339564	13	True				
ANR	339736	CallExpression	usage ( )		339564	0					
ANR	339737	Callee	usage		339564	0					
ANR	339738	Identifier	usage		339564	0					
ANR	339739	ArgumentList			339564	1					
ANR	339740	ExpressionStatement	exit ( 1 )	115:4:2815:2822	339564	14	True				
ANR	339741	CallExpression	exit ( 1 )		339564	0					
ANR	339742	Callee	exit		339564	0					
ANR	339743	Identifier	exit		339564	0					
ANR	339744	ArgumentList	1		339564	1					
ANR	339745	Argument	1		339564	0					
ANR	339746	PrimaryExpression	1		339564	0					
ANR	339747	BreakStatement	break ;	117:4:2835:2840	339564	15	True				
ANR	339748	IfStatement	"if ( ( logchan = stdlog_open ( argv [ 0 ] , 0 , STDLOG_LOCAL1 , chandesc ) ) == NULL )"		339564	10					
ANR	339749	Condition	"( logchan = stdlog_open ( argv [ 0 ] , 0 , STDLOG_LOCAL1 , chandesc ) ) == NULL"	122:4:2884:2951	339564	0	True				
ANR	339750	EqualityExpression	"( logchan = stdlog_open ( argv [ 0 ] , 0 , STDLOG_LOCAL1 , chandesc ) ) == NULL"		339564	0		==			
ANR	339751	AssignmentExpression	"logchan = stdlog_open ( argv [ 0 ] , 0 , STDLOG_LOCAL1 , chandesc )"		339564	0		=			
ANR	339752	Identifier	logchan		339564	0					
ANR	339753	CallExpression	"stdlog_open ( argv [ 0 ] , 0 , STDLOG_LOCAL1 , chandesc )"		339564	1					
ANR	339754	Callee	stdlog_open		339564	0					
ANR	339755	Identifier	stdlog_open		339564	0					
ANR	339756	ArgumentList	argv [ 0 ]		339564	1					
ANR	339757	Argument	argv [ 0 ]		339564	0					
ANR	339758	ArrayIndexing	argv [ 0 ]		339564	0					
ANR	339759	Identifier	argv		339564	0					
ANR	339760	PrimaryExpression	0		339564	1					
ANR	339761	Argument	0		339564	1					
ANR	339762	PrimaryExpression	0		339564	0					
ANR	339763	Argument	STDLOG_LOCAL1		339564	2					
ANR	339764	Identifier	STDLOG_LOCAL1		339564	0					
ANR	339765	Argument	chandesc		339564	3					
ANR	339766	Identifier	chandesc		339564	0					
ANR	339767	Identifier	NULL		339564	1					
ANR	339768	CompoundStatement		52:74:1102:1102	339564	1					
ANR	339769	ExpressionStatement	"fprintf ( stderr , ""error opening logchannel '%s': %s\\n"" , chandesc , strerror ( errno ) )"	123:2:2958:3042	339564	0	True				
ANR	339770	CallExpression	"fprintf ( stderr , ""error opening logchannel '%s': %s\\n"" , chandesc , strerror ( errno ) )"		339564	0					
ANR	339771	Callee	fprintf		339564	0					
ANR	339772	Identifier	fprintf		339564	0					
ANR	339773	ArgumentList	stderr		339564	1					
ANR	339774	Argument	stderr		339564	0					
ANR	339775	Identifier	stderr		339564	0					
ANR	339776	Argument	"""error opening logchannel '%s': %s\\n"""		339564	1					
ANR	339777	PrimaryExpression	"""error opening logchannel '%s': %s\\n"""		339564	0					
ANR	339778	Argument	chandesc		339564	2					
ANR	339779	Identifier	chandesc		339564	0					
ANR	339780	Argument	strerror ( errno )		339564	3					
ANR	339781	CallExpression	strerror ( errno )		339564	0					
ANR	339782	Callee	strerror		339564	0					
ANR	339783	Identifier	strerror		339564	0					
ANR	339784	ArgumentList	errno		339564	1					
ANR	339785	Argument	errno		339564	0					
ANR	339786	Identifier	errno		339564	0					
ANR	339787	ExpressionStatement	exit ( 1 )	125:2:3046:3053	339564	1	True				
ANR	339788	CallExpression	exit ( 1 )		339564	0					
ANR	339789	Callee	exit		339564	0					
ANR	339790	Identifier	exit		339564	0					
ANR	339791	ArgumentList	1		339564	1					
ANR	339792	Argument	1		339564	0					
ANR	339793	PrimaryExpression	1		339564	0					
ANR	339794	ForStatement	for ( i = 0 ; i < msgs ; ++ i )		339564	11					
ANR	339795	ForInit	i = 0 ;	128:5:3070:3076	339564	0	True				
ANR	339796	AssignmentExpression	i = 0		339564	0		=			
ANR	339797	Identifier	i		339564	0					
ANR	339798	PrimaryExpression	0		339564	1					
ANR	339799	Condition	i < msgs	128:13:3078:3085	339564	1	True				
ANR	339800	RelationalExpression	i < msgs		339564	0		<			
ANR	339801	Identifier	i		339564	0					
ANR	339802	Identifier	msgs		339564	1					
ANR	339803	UnaryExpression	++ i	128:24:3089:3091	339564	2	True				
ANR	339804	IncDec	++		339564	0					
ANR	339805	Identifier	i		339564	1					
ANR	339806	CompoundStatement		58:29:1242:1242	339564	3					
ANR	339807	ExpressionStatement	"genMsg ( msgbuf , sev , i )"	130:2:3128:3150	339564	0	True				
ANR	339808	CallExpression	"genMsg ( msgbuf , sev , i )"		339564	0					
ANR	339809	Callee	genMsg		339564	0					
ANR	339810	Identifier	genMsg		339564	0					
ANR	339811	ArgumentList	msgbuf		339564	1					
ANR	339812	Argument	msgbuf		339564	0					
ANR	339813	Identifier	msgbuf		339564	0					
ANR	339814	Argument	sev		339564	1					
ANR	339815	Identifier	sev		339564	0					
ANR	339816	Argument	i		339564	2					
ANR	339817	Identifier	i		339564	0					
ANR	339818	IfStatement	"if ( stdlog_log ( logchan , sev , ""%s"" , msgbuf ) != 0 )"		339564	1					
ANR	339819	Condition	"stdlog_log ( logchan , sev , ""%s"" , msgbuf ) != 0"	131:5:3157:3199	339564	0	True				
ANR	339820	EqualityExpression	"stdlog_log ( logchan , sev , ""%s"" , msgbuf ) != 0"		339564	0		!=			
ANR	339821	CallExpression	"stdlog_log ( logchan , sev , ""%s"" , msgbuf )"		339564	0					
ANR	339822	Callee	stdlog_log		339564	0					
ANR	339823	Identifier	stdlog_log		339564	0					
ANR	339824	ArgumentList	logchan		339564	1					
ANR	339825	Argument	logchan		339564	0					
ANR	339826	Identifier	logchan		339564	0					
ANR	339827	Argument	sev		339564	1					
ANR	339828	Identifier	sev		339564	0					
ANR	339829	Argument	"""%s"""		339564	2					
ANR	339830	PrimaryExpression	"""%s"""		339564	0					
ANR	339831	Argument	msgbuf		339564	3					
ANR	339832	Identifier	msgbuf		339564	0					
ANR	339833	PrimaryExpression	0		339564	1					
ANR	339834	CompoundStatement		61:50:1350:1350	339564	1					
ANR	339835	ExpressionStatement	"perror ( ""error writing log record"" )"	132:3:3207:3241	339564	0	True				
ANR	339836	CallExpression	"perror ( ""error writing log record"" )"		339564	0					
ANR	339837	Callee	perror		339564	0					
ANR	339838	Identifier	perror		339564	0					
ANR	339839	ArgumentList	"""error writing log record"""		339564	1					
ANR	339840	Argument	"""error writing log record"""		339564	0					
ANR	339841	PrimaryExpression	"""error writing log record"""		339564	0					
ANR	339842	ExpressionStatement	exit ( 1 )	133:3:3246:3253	339564	1	True				
ANR	339843	CallExpression	exit ( 1 )		339564	0					
ANR	339844	Callee	exit		339564	0					
ANR	339845	Identifier	exit		339564	0					
ANR	339846	ArgumentList	1		339564	1					
ANR	339847	Argument	1		339564	0					
ANR	339848	PrimaryExpression	1		339564	0					
ANR	339849	IfStatement	if ( bRollingSev )		339564	2					
ANR	339850	Condition	bRollingSev	138:5:3344:3354	339564	0	True				
ANR	339851	Identifier	bRollingSev		339564	0					
ANR	339852	ExpressionStatement	sev = ( sev + 1 ) % 8	140:3:3390:3409	339564	1	True				
ANR	339853	AssignmentExpression	sev = ( sev + 1 ) % 8		339564	0		=			
ANR	339854	Identifier	sev		339564	0					
ANR	339855	MultiplicativeExpression	( sev + 1 ) % 8		339564	1		%			
ANR	339856	AdditiveExpression	sev + 1		339564	0		+			
ANR	339857	Identifier	sev		339564	0					
ANR	339858	PrimaryExpression	1		339564	1					
ANR	339859	PrimaryExpression	8		339564	1					
ANR	339860	ReturnStatement	return ( 0 ) ;	145:1:3437:3446	339564	12	True				
ANR	339861	PrimaryExpression	0		339564	0					
ANR	339862	ReturnType	int		339564	1					
ANR	339863	Identifier	main		339564	2					
ANR	339864	ParameterList	"int argc , char * argv [ ]"		339564	3					
ANR	339865	Parameter	int argc	70:9:1827:1834	339564	0	True				
ANR	339866	ParameterType	int		339564	0					
ANR	339867	Identifier	argc		339564	1					
ANR	339868	Parameter	char * argv [ ]	70:19:1837:1848	339564	1	True				
ANR	339869	ParameterType	char * [ ]		339564	0					
ANR	339870	Identifier	argv		339564	1					
ANR	339871	CFGEntryNode	ENTRY		339564		True				
ANR	339872	CFGExitNode	EXIT		339564		True				
ANR	339873	Symbol	FMT_SYSLOG_INJECT_L		339564						
ANR	339874	Symbol	optarg		339564						
ANR	339875	Symbol	* argv		339564						
ANR	339876	Symbol	stdlog_open		339564						
ANR	339877	Symbol	fmt		339564						
ANR	339878	Symbol	argv		339564						
ANR	339879	Symbol	getopt		339564						
ANR	339880	Symbol	STDLOG_USE_DFLT_OPTS		339564						
ANR	339881	Symbol	msgbuf		339564						
ANR	339882	Symbol	FMT_SYSLOG_INJECT_C		339564						
ANR	339883	Symbol	stdlog_log		339564						
ANR	339884	Symbol	argc		339564						
ANR	339885	Symbol	atoi		339564						
ANR	339886	Symbol	strcmp		339564						
ANR	339887	Symbol	msgs		339564						
ANR	339888	Symbol	errno		339564						
ANR	339889	Symbol	NULL		339564						
ANR	339890	Symbol	sev		339564						
ANR	339891	Symbol	bRollingSev		339564						
ANR	339892	Symbol	i		339564						
ANR	339893	Symbol	stderr		339564						
ANR	339894	Symbol	strerror		339564						
ANR	339895	Symbol	opt		339564						
ANR	339896	Symbol	logchan		339564						
ANR	339897	Symbol	STDLOG_LOCAL1		339564						
ANR	339898	Symbol	* optarg		339564						
ANR	339899	Symbol	chandesc		339564						
