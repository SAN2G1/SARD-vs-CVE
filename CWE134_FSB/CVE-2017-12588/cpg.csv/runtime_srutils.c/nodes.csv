command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	291880	File	data/converged/CVE-2017-12588_rsyslog/runtime_srutils.c								
ANR	291881	DeclStmt									
ANR	291882	Decl							syslogName_t	syslogName_t [ ]	syslogPriNames
ANR	291883	DeclStmt									
ANR	291884	Decl							syslogName_t	syslogName_t [ ]	syslogFacNames
ANR	291885	Function	srUtilItoA	127:0:4115:5107							
ANR	291886	FunctionDef	"srUtilItoA (char * pBuf , int iLenBuf , number_t iToConv)"		291885	0					
ANR	291887	CompoundStatement		128:0:4178:5107	291885	0					
ANR	291888	IdentifierDeclStatement	int i ;	129:1:4181:4186	291885	0	True				
ANR	291889	IdentifierDecl	i		291885	0					
ANR	291890	IdentifierDeclType	int		291885	0					
ANR	291891	Identifier	i		291885	1					
ANR	291892	IdentifierDeclStatement	int bIsNegative ;	130:1:4189:4204	291885	1	True				
ANR	291893	IdentifierDecl	bIsNegative		291885	0					
ANR	291894	IdentifierDeclType	int		291885	0					
ANR	291895	Identifier	bIsNegative		291885	1					
ANR	291896	IdentifierDeclStatement	char szBuf [ 64 ] ;	131:1:4207:4221	291885	2	True				
ANR	291897	IdentifierDecl	szBuf [ 64 ]		291885	0					
ANR	291898	IdentifierDeclType	char [ 64 ]		291885	0					
ANR	291899	Identifier	szBuf		291885	1					
ANR	291900	PrimaryExpression	64		291885	2					
ANR	291901	ExpressionStatement	assert ( pBuf != NULL )	133:1:4297:4317	291885	3	True				
ANR	291902	CallExpression	assert ( pBuf != NULL )		291885	0					
ANR	291903	Callee	assert		291885	0					
ANR	291904	Identifier	assert		291885	0					
ANR	291905	ArgumentList	pBuf != NULL		291885	1					
ANR	291906	Argument	pBuf != NULL		291885	0					
ANR	291907	EqualityExpression	pBuf != NULL		291885	0		!=			
ANR	291908	Identifier	pBuf		291885	0					
ANR	291909	Identifier	NULL		291885	1					
ANR	291910	ExpressionStatement	assert ( iLenBuf > 1 )	134:1:4320:4339	291885	4	True				
ANR	291911	CallExpression	assert ( iLenBuf > 1 )		291885	0					
ANR	291912	Callee	assert		291885	0					
ANR	291913	Identifier	assert		291885	0					
ANR	291914	ArgumentList	iLenBuf > 1		291885	1					
ANR	291915	Argument	iLenBuf > 1		291885	0					
ANR	291916	RelationalExpression	iLenBuf > 1		291885	0		>			
ANR	291917	Identifier	iLenBuf		291885	0					
ANR	291918	PrimaryExpression	1		291885	1					
ANR	291919	IfStatement	if ( iToConv < 0 )		291885	5					
ANR	291920	Condition	iToConv < 0	136:4:4409:4419	291885	0	True				
ANR	291921	RelationalExpression	iToConv < 0		291885	0		<			
ANR	291922	Identifier	iToConv		291885	0					
ANR	291923	PrimaryExpression	0		291885	1					
ANR	291924	CompoundStatement		10:1:244:244	291885	1					
ANR	291925	ExpressionStatement	bIsNegative = RSTRUE	138:2:4427:4447	291885	0	True				
ANR	291926	AssignmentExpression	bIsNegative = RSTRUE		291885	0		=			
ANR	291927	Identifier	bIsNegative		291885	0					
ANR	291928	Identifier	RSTRUE		291885	1					
ANR	291929	ExpressionStatement	iToConv *= - 1	139:2:4451:4464	291885	1	True				
ANR	291930	AssignmentExpression	iToConv *= - 1		291885	0		*=			
ANR	291931	Identifier	iToConv		291885	0					
ANR	291932	UnaryOperationExpression	- 1		291885	1					
ANR	291933	UnaryOperator	-		291885	0					
ANR	291934	PrimaryExpression	1		291885	1					
ANR	291935	ElseStatement	else		291885	0					
ANR	291936	ExpressionStatement	bIsNegative = RSFALSE	142:2:4477:4498	291885	0	True				
ANR	291937	AssignmentExpression	bIsNegative = RSFALSE		291885	0		=			
ANR	291938	Identifier	bIsNegative		291885	0					
ANR	291939	Identifier	RSFALSE		291885	1					
ANR	291940	ExpressionStatement	i = 0	145:1:4574:4579	291885	6	True				
ANR	291941	AssignmentExpression	i = 0		291885	0		=			
ANR	291942	Identifier	i		291885	0					
ANR	291943	PrimaryExpression	0		291885	1					
ANR	291944	DoStatement	do		291885	7					
ANR	291945	CompoundStatement		20:1:407:407	291885	0					
ANR	291946	ExpressionStatement	szBuf [ i ++ ] = iToConv % 10 + '0'	148:2:4590:4621	291885	0	True				
ANR	291947	AssignmentExpression	szBuf [ i ++ ] = iToConv % 10 + '0'		291885	0		=			
ANR	291948	ArrayIndexing	szBuf [ i ++ ]		291885	0					
ANR	291949	Identifier	szBuf		291885	0					
ANR	291950	PostIncDecOperationExpression	i ++		291885	1					
ANR	291951	Identifier	i		291885	0					
ANR	291952	IncDec	++		291885	1					
ANR	291953	AdditiveExpression	iToConv % 10 + '0'		291885	1		+			
ANR	291954	MultiplicativeExpression	iToConv % 10		291885	0		%			
ANR	291955	Identifier	iToConv		291885	0					
ANR	291956	PrimaryExpression	10		291885	1					
ANR	291957	PrimaryExpression	'0'		291885	1					
ANR	291958	ExpressionStatement	iToConv /= 10	149:2:4625:4638	291885	1	True				
ANR	291959	AssignmentExpression	iToConv /= 10		291885	0		/=			
ANR	291960	Identifier	iToConv		291885	0					
ANR	291961	PrimaryExpression	10		291885	1					
ANR	291962	Condition	iToConv > 0	150:9:4649:4659	291885	1	True				
ANR	291963	RelationalExpression	iToConv > 0		291885	0		>			
ANR	291964	Identifier	iToConv		291885	0					
ANR	291965	PrimaryExpression	0		291885	1					
ANR	291966	ExpressionStatement	-- i	151:1:4693:4696	291885	8	True				
ANR	291967	UnaryExpression	-- i		291885	0					
ANR	291968	IncDec	--		291885	0					
ANR	291969	Identifier	i		291885	1					
ANR	291970	IfStatement	if ( i + 2 > iLenBuf )		291885	9					
ANR	291971	Condition	i + 2 > iLenBuf	154:4:4806:4820	291885	0	True				
ANR	291972	RelationalExpression	i + 2 > iLenBuf		291885	0		>			
ANR	291973	AdditiveExpression	i + 2		291885	0		+			
ANR	291974	Identifier	i		291885	0					
ANR	291975	PrimaryExpression	2		291885	1					
ANR	291976	Identifier	iLenBuf		291885	1					
ANR	291977	ReturnStatement	return RS_RET_PROVIDED_BUFFER_TOO_SMALL ;	155:2:4879:4918	291885	1	True				
ANR	291978	Identifier	RS_RET_PROVIDED_BUFFER_TOO_SMALL		291885	0					
ANR	291979	IfStatement	if ( bIsNegative == RSTRUE )		291885	10					
ANR	291980	Condition	bIsNegative == RSTRUE	158:4:4971:4991	291885	0	True				
ANR	291981	EqualityExpression	bIsNegative == RSTRUE		291885	0		==			
ANR	291982	Identifier	bIsNegative		291885	0					
ANR	291983	Identifier	RSTRUE		291885	1					
ANR	291984	ExpressionStatement	* pBuf ++ = '-'	159:2:4996:5009	291885	1	True				
ANR	291985	AssignmentExpression	* pBuf ++ = '-'		291885	0		=			
ANR	291986	UnaryOperationExpression	* pBuf ++		291885	0					
ANR	291987	UnaryOperator	*		291885	0					
ANR	291988	PostIncDecOperationExpression	pBuf ++		291885	1					
ANR	291989	Identifier	pBuf		291885	0					
ANR	291990	IncDec	++		291885	1					
ANR	291991	PrimaryExpression	'-'		291885	1					
ANR	291992	WhileStatement	while ( i >= 0 )		291885	11					
ANR	291993	Condition	i >= 0	160:7:5018:5023	291885	0	True				
ANR	291994	RelationalExpression	i >= 0		291885	0		>=			
ANR	291995	Identifier	i		291885	0					
ANR	291996	PrimaryExpression	0		291885	1					
ANR	291997	ExpressionStatement	* pBuf ++ = szBuf [ i -- ]	161:2:5028:5048	291885	1	True				
ANR	291998	AssignmentExpression	* pBuf ++ = szBuf [ i -- ]		291885	0		=			
ANR	291999	UnaryOperationExpression	* pBuf ++		291885	0					
ANR	292000	UnaryOperator	*		291885	0					
ANR	292001	PostIncDecOperationExpression	pBuf ++		291885	1					
ANR	292002	Identifier	pBuf		291885	0					
ANR	292003	IncDec	++		291885	1					
ANR	292004	ArrayIndexing	szBuf [ i -- ]		291885	1					
ANR	292005	Identifier	szBuf		291885	0					
ANR	292006	PostIncDecOperationExpression	i --		291885	1					
ANR	292007	Identifier	i		291885	0					
ANR	292008	IncDec	--		291885	1					
ANR	292009	ExpressionStatement	* pBuf = '\\0'	162:1:5051:5063	291885	12	True				
ANR	292010	AssignmentExpression	* pBuf = '\\0'		291885	0		=			
ANR	292011	UnaryOperationExpression	* pBuf		291885	0					
ANR	292012	UnaryOperator	*		291885	0					
ANR	292013	Identifier	pBuf		291885	1					
ANR	292014	PrimaryExpression	'\\0'		291885	1					
ANR	292015	ReturnStatement	return RS_RET_OK ;	164:1:5089:5105	291885	13	True				
ANR	292016	Identifier	RS_RET_OK		291885	0					
ANR	292017	ReturnType	rsRetVal		291885	1					
ANR	292018	Identifier	srUtilItoA		291885	2					
ANR	292019	ParameterList	"char * pBuf , int iLenBuf , number_t iToConv"		291885	3					
ANR	292020	Parameter	char * pBuf	127:20:4135:4144	291885	0	True				
ANR	292021	ParameterType	char *		291885	0					
ANR	292022	Identifier	pBuf		291885	1					
ANR	292023	Parameter	int iLenBuf	127:32:4147:4157	291885	1	True				
ANR	292024	ParameterType	int		291885	0					
ANR	292025	Identifier	iLenBuf		291885	1					
ANR	292026	Parameter	number_t iToConv	127:45:4160:4175	291885	2	True				
ANR	292027	ParameterType	number_t		291885	0					
ANR	292028	Identifier	iToConv		291885	1					
ANR	292029	CFGEntryNode	ENTRY		291885		True				
ANR	292030	CFGExitNode	EXIT		291885		True				
ANR	292031	Symbol	szBuf		291885						
ANR	292032	Symbol	NULL		291885						
ANR	292033	Symbol	RS_RET_OK		291885						
ANR	292034	Symbol	iLenBuf		291885						
ANR	292035	Symbol	i		291885						
ANR	292036	Symbol	RSTRUE		291885						
ANR	292037	Symbol	RS_RET_PROVIDED_BUFFER_TOO_SMALL		291885						
ANR	292038	Symbol	pBuf		291885						
ANR	292039	Symbol	RSFALSE		291885						
ANR	292040	Symbol	iToConv		291885						
ANR	292041	Symbol	* szBuf		291885						
ANR	292042	Symbol	* pBuf		291885						
ANR	292043	Symbol	bIsNegative		291885						
ANR	292044	Symbol	* pBuf ++		291885						
ANR	292045	Function	srUtilStrDup	167:0:5110:5281							
ANR	292046	FunctionDef	"srUtilStrDup (uchar * pOld , size_t len)"		292045	0					
ANR	292047	CompoundStatement		168:0:5155:5281	292045	0					
ANR	292048	IdentifierDeclStatement	uchar * pNew ;	169:1:5158:5169	292045	0	True				
ANR	292049	IdentifierDecl	* pNew		292045	0					
ANR	292050	IdentifierDeclType	uchar *		292045	0					
ANR	292051	Identifier	pNew		292045	1					
ANR	292052	ExpressionStatement	assert ( pOld != NULL )	171:1:5173:5193	292045	1	True				
ANR	292053	CallExpression	assert ( pOld != NULL )		292045	0					
ANR	292054	Callee	assert		292045	0					
ANR	292055	Identifier	assert		292045	0					
ANR	292056	ArgumentList	pOld != NULL		292045	1					
ANR	292057	Argument	pOld != NULL		292045	0					
ANR	292058	EqualityExpression	pOld != NULL		292045	0		!=			
ANR	292059	Identifier	pOld		292045	0					
ANR	292060	Identifier	NULL		292045	1					
ANR	292061	IfStatement	if ( ( pNew = MALLOC ( len + 1 ) ) != NULL )		292045	2					
ANR	292062	Condition	( pNew = MALLOC ( len + 1 ) ) != NULL	173:4:5201:5232	292045	0	True				
ANR	292063	EqualityExpression	( pNew = MALLOC ( len + 1 ) ) != NULL		292045	0		!=			
ANR	292064	AssignmentExpression	pNew = MALLOC ( len + 1 )		292045	0		=			
ANR	292065	Identifier	pNew		292045	0					
ANR	292066	CallExpression	MALLOC ( len + 1 )		292045	1					
ANR	292067	Callee	MALLOC		292045	0					
ANR	292068	Identifier	MALLOC		292045	0					
ANR	292069	ArgumentList	len + 1		292045	1					
ANR	292070	Argument	len + 1		292045	0					
ANR	292071	AdditiveExpression	len + 1		292045	0		+			
ANR	292072	Identifier	len		292045	0					
ANR	292073	PrimaryExpression	1		292045	1					
ANR	292074	Identifier	NULL		292045	1					
ANR	292075	ExpressionStatement	"memcpy ( pNew , pOld , len + 1 )"	174:2:5237:5264	292045	1	True				
ANR	292076	CallExpression	"memcpy ( pNew , pOld , len + 1 )"		292045	0					
ANR	292077	Callee	memcpy		292045	0					
ANR	292078	Identifier	memcpy		292045	0					
ANR	292079	ArgumentList	pNew		292045	1					
ANR	292080	Argument	pNew		292045	0					
ANR	292081	Identifier	pNew		292045	0					
ANR	292082	Argument	pOld		292045	1					
ANR	292083	Identifier	pOld		292045	0					
ANR	292084	Argument	len + 1		292045	2					
ANR	292085	AdditiveExpression	len + 1		292045	0		+			
ANR	292086	Identifier	len		292045	0					
ANR	292087	PrimaryExpression	1		292045	1					
ANR	292088	ReturnStatement	return pNew ;	176:1:5268:5279	292045	3	True				
ANR	292089	Identifier	pNew		292045	0					
ANR	292090	ReturnType	uchar *		292045	1					
ANR	292091	Identifier	srUtilStrDup		292045	2					
ANR	292092	ParameterList	"uchar * pOld , size_t len"		292045	3					
ANR	292093	Parameter	uchar * pOld	167:20:5130:5140	292045	0	True				
ANR	292094	ParameterType	uchar *		292045	0					
ANR	292095	Identifier	pOld		292045	1					
ANR	292096	Parameter	size_t len	167:33:5143:5152	292045	1	True				
ANR	292097	ParameterType	size_t		292045	0					
ANR	292098	Identifier	len		292045	1					
ANR	292099	CFGEntryNode	ENTRY		292045		True				
ANR	292100	CFGExitNode	EXIT		292045		True				
ANR	292101	Symbol	pOld		292045						
ANR	292102	Symbol	NULL		292045						
ANR	292103	Symbol	len		292045						
ANR	292104	Symbol	pNew		292045						
ANR	292105	Symbol	MALLOC		292045						
ANR	292106	DeclStmt									
ANR	292107	Decl							uchar	uchar *	p
ANR	292108	DeclStmt									
ANR	292109	Decl							uchar	uchar *	pszWork
ANR	292110	DeclStmt									
ANR	292111	Decl							size_t	size_t	len
ANR	292112	DeclStmt									
ANR	292113	Decl							int	int	iTry
ANR	292114	DeclStmt									
ANR	292115	Decl							int	int	bErr
ANR	292116	DeclStmt									
ANR	292117	Decl							char	char [ 1024 ]	errStr
ANR	292118	DeclStmt									
ANR	292119	Decl							int	int	eSave
ANR	292120	Function	execProg	266:0:8357:9822							
ANR	292121	FunctionDef	"execProg (uchar * program , int bWait , uchar * arg)"		292120	0					
ANR	292122	CompoundStatement		267:0:8409:9822	292120	0					
ANR	292123	IdentifierDeclStatement	int pid ;	268:8:8419:8426	292120	0	True				
ANR	292124	IdentifierDecl	pid		292120	0					
ANR	292125	IdentifierDeclType	int		292120	0					
ANR	292126	Identifier	pid		292120	1					
ANR	292127	IdentifierDeclStatement	int sig ;	269:1:8429:8436	292120	1	True				
ANR	292128	IdentifierDecl	sig		292120	0					
ANR	292129	IdentifierDeclType	int		292120	0					
ANR	292130	Identifier	sig		292120	1					
ANR	292131	IdentifierDeclStatement	struct sigaction sigAct ;	270:1:8439:8462	292120	2	True				
ANR	292132	IdentifierDecl	sigAct		292120	0					
ANR	292133	IdentifierDeclType	struct sigaction		292120	0					
ANR	292134	Identifier	sigAct		292120	1					
ANR	292135	ExpressionStatement	"dbgprintf ( ""exec program '%s' with param '%s'\\n"" , program , arg )"	272:1:8466:8528	292120	3	True				
ANR	292136	CallExpression	"dbgprintf ( ""exec program '%s' with param '%s'\\n"" , program , arg )"		292120	0					
ANR	292137	Callee	dbgprintf		292120	0					
ANR	292138	Identifier	dbgprintf		292120	0					
ANR	292139	ArgumentList	"""exec program '%s' with param '%s'\\n"""		292120	1					
ANR	292140	Argument	"""exec program '%s' with param '%s'\\n"""		292120	0					
ANR	292141	PrimaryExpression	"""exec program '%s' with param '%s'\\n"""		292120	0					
ANR	292142	Argument	program		292120	1					
ANR	292143	Identifier	program		292120	0					
ANR	292144	Argument	arg		292120	2					
ANR	292145	Identifier	arg		292120	0					
ANR	292146	ExpressionStatement	pid = fork ( )	273:8:8538:8550	292120	4	True				
ANR	292147	AssignmentExpression	pid = fork ( )		292120	0		=			
ANR	292148	Identifier	pid		292120	0					
ANR	292149	CallExpression	fork ( )		292120	1					
ANR	292150	Callee	fork		292120	0					
ANR	292151	Identifier	fork		292120	0					
ANR	292152	ArgumentList			292120	1					
ANR	292153	IfStatement	if ( pid < 0 )		292120	5					
ANR	292154	Condition	pid < 0	274:12:8564:8570	292120	0	True				
ANR	292155	RelationalExpression	pid < 0		292120	0		<			
ANR	292156	Identifier	pid		292120	0					
ANR	292157	PrimaryExpression	0		292120	1					
ANR	292158	CompoundStatement		8:21:163:163	292120	1					
ANR	292159	ReturnStatement	return 0 ;	275:16:8591:8599	292120	0	True				
ANR	292160	PrimaryExpression	0		292120	0					
ANR	292161	IfStatement	if ( pid )		292120	6					
ANR	292162	Condition	pid	278:11:8623:8625	292120	0	True				
ANR	292163	Identifier	pid		292120	0					
ANR	292164	CompoundStatement		12:16:218:218	292120	1					
ANR	292165	IfStatement	if ( bWait )		292120	0					
ANR	292166	Condition	bWait	279:5:8654:8658	292120	0	True				
ANR	292167	Identifier	bWait		292120	0					
ANR	292168	IfStatement	"if ( waitpid ( pid , NULL , 0 ) == - 1 )"		292120	1					
ANR	292169	Condition	"waitpid ( pid , NULL , 0 ) == - 1"	280:6:8667:8693	292120	0	True				
ANR	292170	EqualityExpression	"waitpid ( pid , NULL , 0 ) == - 1"		292120	0		==			
ANR	292171	CallExpression	"waitpid ( pid , NULL , 0 )"		292120	0					
ANR	292172	Callee	waitpid		292120	0					
ANR	292173	Identifier	waitpid		292120	0					
ANR	292174	ArgumentList	pid		292120	1					
ANR	292175	Argument	pid		292120	0					
ANR	292176	Identifier	pid		292120	0					
ANR	292177	Argument	NULL		292120	1					
ANR	292178	Identifier	NULL		292120	0					
ANR	292179	Argument	0		292120	2					
ANR	292180	PrimaryExpression	0		292120	0					
ANR	292181	UnaryOperationExpression	- 1		292120	1					
ANR	292182	UnaryOperator	-		292120	0					
ANR	292183	PrimaryExpression	1		292120	1					
ANR	292184	IfStatement	if ( errno != ECHILD )		292120	1					
ANR	292185	Condition	errno != ECHILD	281:7:8703:8717	292120	0	True				
ANR	292186	EqualityExpression	errno != ECHILD		292120	0		!=			
ANR	292187	Identifier	errno		292120	0					
ANR	292188	Identifier	ECHILD		292120	1					
ANR	292189	CompoundStatement		15:24:310:310	292120	1					
ANR	292190	ExpressionStatement	"dbgprintf ( ""could not wait on child after executing '%s'"" , ( char * ) program )"	287:5:8892:8978	292120	0	True				
ANR	292191	CallExpression	"dbgprintf ( ""could not wait on child after executing '%s'"" , ( char * ) program )"		292120	0					
ANR	292192	Callee	dbgprintf		292120	0					
ANR	292193	Identifier	dbgprintf		292120	0					
ANR	292194	ArgumentList	"""could not wait on child after executing '%s'"""		292120	1					
ANR	292195	Argument	"""could not wait on child after executing '%s'"""		292120	0					
ANR	292196	PrimaryExpression	"""could not wait on child after executing '%s'"""		292120	0					
ANR	292197	Argument	( char * ) program		292120	1					
ANR	292198	CastExpression	( char * ) program		292120	0					
ANR	292199	CastTarget	char *		292120	0					
ANR	292200	Identifier	program		292120	1					
ANR	292201	ReturnStatement	return pid ;	290:16:9002:9012	292120	1	True				
ANR	292202	Identifier	pid		292120	0					
ANR	292203	ExpressionStatement	alarm ( 0 )	293:1:9038:9046	292120	7	True				
ANR	292204	CallExpression	alarm ( 0 )		292120	0					
ANR	292205	Callee	alarm		292120	0					
ANR	292206	Identifier	alarm		292120	0					
ANR	292207	ArgumentList	0		292120	1					
ANR	292208	Argument	0		292120	0					
ANR	292209	PrimaryExpression	0		292120	0					
ANR	292210	ExpressionStatement	"memset ( & sigAct , 0 , sizeof ( sigAct ) )"	295:1:9113:9147	292120	8	True				
ANR	292211	CallExpression	"memset ( & sigAct , 0 , sizeof ( sigAct ) )"		292120	0					
ANR	292212	Callee	memset		292120	0					
ANR	292213	Identifier	memset		292120	0					
ANR	292214	ArgumentList	& sigAct		292120	1					
ANR	292215	Argument	& sigAct		292120	0					
ANR	292216	UnaryOperationExpression	& sigAct		292120	0					
ANR	292217	UnaryOperator	&		292120	0					
ANR	292218	Identifier	sigAct		292120	1					
ANR	292219	Argument	0		292120	1					
ANR	292220	PrimaryExpression	0		292120	0					
ANR	292221	Argument	sizeof ( sigAct )		292120	2					
ANR	292222	SizeofExpression	sizeof ( sigAct )		292120	0					
ANR	292223	Sizeof	sizeof		292120	0					
ANR	292224	SizeofOperand	sigAct		292120	1					
ANR	292225	ExpressionStatement	sigemptyset ( & sigAct . sa_mask )	296:1:9150:9178	292120	9	True				
ANR	292226	CallExpression	sigemptyset ( & sigAct . sa_mask )		292120	0					
ANR	292227	Callee	sigemptyset		292120	0					
ANR	292228	Identifier	sigemptyset		292120	0					
ANR	292229	ArgumentList	& sigAct . sa_mask		292120	1					
ANR	292230	Argument	& sigAct . sa_mask		292120	0					
ANR	292231	UnaryOperationExpression	& sigAct . sa_mask		292120	0					
ANR	292232	UnaryOperator	&		292120	0					
ANR	292233	MemberAccess	sigAct . sa_mask		292120	1					
ANR	292234	Identifier	sigAct		292120	0					
ANR	292235	Identifier	sa_mask		292120	1					
ANR	292236	ExpressionStatement	sigAct . sa_handler = SIG_DFL	297:1:9181:9208	292120	10	True				
ANR	292237	AssignmentExpression	sigAct . sa_handler = SIG_DFL		292120	0		=			
ANR	292238	MemberAccess	sigAct . sa_handler		292120	0					
ANR	292239	Identifier	sigAct		292120	0					
ANR	292240	Identifier	sa_handler		292120	1					
ANR	292241	Identifier	SIG_DFL		292120	1					
ANR	292242	ForStatement	for ( sig = 1 ; sig < NSIG ; ++ sig )		292120	11					
ANR	292243	ForInit	sig = 1 ;	299:5:9216:9224	292120	0	True				
ANR	292244	AssignmentExpression	sig = 1		292120	0		=			
ANR	292245	Identifier	sig		292120	0					
ANR	292246	PrimaryExpression	1		292120	1					
ANR	292247	Condition	sig < NSIG	299:15:9226:9235	292120	1	True				
ANR	292248	RelationalExpression	sig < NSIG		292120	0		<			
ANR	292249	Identifier	sig		292120	0					
ANR	292250	Identifier	NSIG		292120	1					
ANR	292251	UnaryExpression	++ sig	299:28:9239:9243	292120	2	True				
ANR	292252	IncDec	++		292120	0					
ANR	292253	Identifier	sig		292120	1					
ANR	292254	ExpressionStatement	"sigaction ( sig , & sigAct , NULL )"	300:2:9248:9277	292120	3	True				
ANR	292255	CallExpression	"sigaction ( sig , & sigAct , NULL )"		292120	0					
ANR	292256	Callee	sigaction		292120	0					
ANR	292257	Identifier	sigaction		292120	0					
ANR	292258	ArgumentList	sig		292120	1					
ANR	292259	Argument	sig		292120	0					
ANR	292260	Identifier	sig		292120	0					
ANR	292261	Argument	& sigAct		292120	1					
ANR	292262	UnaryOperationExpression	& sigAct		292120	0					
ANR	292263	UnaryOperator	&		292120	0					
ANR	292264	Identifier	sigAct		292120	1					
ANR	292265	Argument	NULL		292120	2					
ANR	292266	Identifier	NULL		292120	0					
ANR	292267	ExpressionStatement	"execlp ( ( char * ) program , ( char * ) program , ( char * ) arg , NULL )"	302:1:9281:9338	292120	12	True				
ANR	292268	CallExpression	"execlp ( ( char * ) program , ( char * ) program , ( char * ) arg , NULL )"		292120	0					
ANR	292269	Callee	execlp		292120	0					
ANR	292270	Identifier	execlp		292120	0					
ANR	292271	ArgumentList	( char * ) program		292120	1					
ANR	292272	Argument	( char * ) program		292120	0					
ANR	292273	CastExpression	( char * ) program		292120	0					
ANR	292274	CastTarget	char *		292120	0					
ANR	292275	Identifier	program		292120	1					
ANR	292276	Argument	( char * ) program		292120	1					
ANR	292277	CastExpression	( char * ) program		292120	0					
ANR	292278	CastTarget	char *		292120	0					
ANR	292279	Identifier	program		292120	1					
ANR	292280	Argument	( char * ) arg		292120	2					
ANR	292281	CastExpression	( char * ) arg		292120	0					
ANR	292282	CastTarget	char *		292120	0					
ANR	292283	Identifier	arg		292120	1					
ANR	292284	Argument	NULL		292120	3					
ANR	292285	Identifier	NULL		292120	0					
ANR	292286	ExpressionStatement	"perror ( ""exec"" )"	310:1:9758:9772	292120	13	True				
ANR	292287	CallExpression	"perror ( ""exec"" )"		292120	0					
ANR	292288	Callee	perror		292120	0					
ANR	292289	Identifier	perror		292120	0					
ANR	292290	ArgumentList	"""exec"""		292120	1					
ANR	292291	Argument	"""exec"""		292120	0					
ANR	292292	PrimaryExpression	"""exec"""		292120	0					
ANR	292293	ExpressionStatement	exit ( 1 )	311:1:9775:9782	292120	14	True				
ANR	292294	CallExpression	exit ( 1 )		292120	0					
ANR	292295	Callee	exit		292120	0					
ANR	292296	Identifier	exit		292120	0					
ANR	292297	ArgumentList	1		292120	1					
ANR	292298	Argument	1		292120	0					
ANR	292299	PrimaryExpression	1		292120	0					
ANR	292300	ReturnType	int		292120	1					
ANR	292301	Identifier	execProg		292120	2					
ANR	292302	ParameterList	"uchar * program , int bWait , uchar * arg"		292120	3					
ANR	292303	Parameter	uchar * program	266:13:8370:8383	292120	0	True				
ANR	292304	ParameterType	uchar *		292120	0					
ANR	292305	Identifier	program		292120	1					
ANR	292306	Parameter	int bWait	266:29:8386:8394	292120	1	True				
ANR	292307	ParameterType	int		292120	0					
ANR	292308	Identifier	bWait		292120	1					
ANR	292309	Parameter	uchar * arg	266:40:8397:8406	292120	2	True				
ANR	292310	ParameterType	uchar *		292120	0					
ANR	292311	Identifier	arg		292120	1					
ANR	292312	CFGEntryNode	ENTRY		292120		True				
ANR	292313	CFGExitNode	EXIT		292120		True				
ANR	292314	Symbol	errno		292120						
ANR	292315	Symbol	NULL		292120						
ANR	292316	Symbol	ECHILD		292120						
ANR	292317	Symbol	NSIG		292120						
ANR	292318	Symbol	pid		292120						
ANR	292319	Symbol	program		292120						
ANR	292320	Symbol	sigAct . sa_handler		292120						
ANR	292321	Symbol	sig		292120						
ANR	292322	Symbol	fork		292120						
ANR	292323	Symbol	& sigAct		292120						
ANR	292324	Symbol	sigAct		292120						
ANR	292325	Symbol	arg		292120						
ANR	292326	Symbol	SIG_DFL		292120						
ANR	292327	Symbol	bWait		292120						
ANR	292328	Symbol	& sigAct . sa_mask		292120						
ANR	292329	Symbol	waitpid		292120						
ANR	292330	Function	skipWhiteSpace	320:0:10022:10180							
ANR	292331	FunctionDef	skipWhiteSpace (uchar * * pp)		292330	0					
ANR	292332	CompoundStatement		321:0:10054:10180	292330	0					
ANR	292333	Statement	register	322:1:10057:10064	292330	0	True				
ANR	292334	IdentifierDeclStatement	uchar * p ;	322:10:10066:10074	292330	1	True				
ANR	292335	IdentifierDecl	* p		292330	0					
ANR	292336	IdentifierDeclType	uchar *		292330	0					
ANR	292337	Identifier	p		292330	1					
ANR	292338	ExpressionStatement	assert ( pp != NULL )	324:1:10078:10096	292330	2	True				
ANR	292339	CallExpression	assert ( pp != NULL )		292330	0					
ANR	292340	Callee	assert		292330	0					
ANR	292341	Identifier	assert		292330	0					
ANR	292342	ArgumentList	pp != NULL		292330	1					
ANR	292343	Argument	pp != NULL		292330	0					
ANR	292344	EqualityExpression	pp != NULL		292330	0		!=			
ANR	292345	Identifier	pp		292330	0					
ANR	292346	Identifier	NULL		292330	1					
ANR	292347	ExpressionStatement	assert ( * pp != NULL )	325:1:10099:10118	292330	3	True				
ANR	292348	CallExpression	assert ( * pp != NULL )		292330	0					
ANR	292349	Callee	assert		292330	0					
ANR	292350	Identifier	assert		292330	0					
ANR	292351	ArgumentList	* pp != NULL		292330	1					
ANR	292352	Argument	* pp != NULL		292330	0					
ANR	292353	EqualityExpression	* pp != NULL		292330	0		!=			
ANR	292354	UnaryOperationExpression	* pp		292330	0					
ANR	292355	UnaryOperator	*		292330	0					
ANR	292356	Identifier	pp		292330	1					
ANR	292357	Identifier	NULL		292330	1					
ANR	292358	ExpressionStatement	p = * pp	327:1:10122:10129	292330	4	True				
ANR	292359	AssignmentExpression	p = * pp		292330	0		=			
ANR	292360	Identifier	p		292330	0					
ANR	292361	UnaryOperationExpression	* pp		292330	1					
ANR	292362	UnaryOperator	*		292330	0					
ANR	292363	Identifier	pp		292330	1					
ANR	292364	WhileStatement	while ( * p && isspace ( ( int ) * p ) )		292330	5					
ANR	292365	Condition	* p && isspace ( ( int ) * p )	328:7:10138:10160	292330	0	True				
ANR	292366	AndExpression	* p && isspace ( ( int ) * p )		292330	0		&&			
ANR	292367	UnaryOperationExpression	* p		292330	0					
ANR	292368	UnaryOperator	*		292330	0					
ANR	292369	Identifier	p		292330	1					
ANR	292370	CallExpression	isspace ( ( int ) * p )		292330	1					
ANR	292371	Callee	isspace		292330	0					
ANR	292372	Identifier	isspace		292330	0					
ANR	292373	ArgumentList	( int ) * p		292330	1					
ANR	292374	Argument	( int ) * p		292330	0					
ANR	292375	CastExpression	( int ) * p		292330	0					
ANR	292376	CastTarget	int		292330	0					
ANR	292377	UnaryOperationExpression	* p		292330	1					
ANR	292378	UnaryOperator	*		292330	0					
ANR	292379	Identifier	p		292330	1					
ANR	292380	ExpressionStatement	++ p	329:2:10165:10168	292330	1	True				
ANR	292381	UnaryExpression	++ p		292330	0					
ANR	292382	IncDec	++		292330	0					
ANR	292383	Identifier	p		292330	1					
ANR	292384	ExpressionStatement	* pp = p	330:1:10171:10178	292330	6	True				
ANR	292385	AssignmentExpression	* pp = p		292330	0		=			
ANR	292386	UnaryOperationExpression	* pp		292330	0					
ANR	292387	UnaryOperator	*		292330	0					
ANR	292388	Identifier	pp		292330	1					
ANR	292389	Identifier	p		292330	1					
ANR	292390	ReturnType	void		292330	1					
ANR	292391	Identifier	skipWhiteSpace		292330	2					
ANR	292392	ParameterList	uchar * * pp		292330	3					
ANR	292393	Parameter	uchar * * pp	320:20:10042:10051	292330	0	True				
ANR	292394	ParameterType	uchar * *		292330	0					
ANR	292395	Identifier	pp		292330	1					
ANR	292396	CFGEntryNode	ENTRY		292330		True				
ANR	292397	CFGExitNode	EXIT		292330		True				
ANR	292398	Symbol	pp		292330						
ANR	292399	Symbol	p		292330						
ANR	292400	Symbol	NULL		292330						
ANR	292401	Symbol	* pp		292330						
ANR	292402	Symbol	isspace		292330						
ANR	292403	Symbol	* p		292330						
ANR	292404	Function	genFileName	348:0:10785:11901							
ANR	292405	FunctionDef	"genFileName (uchar * * ppName , uchar * pDirName , size_t lenDirName , uchar * pFName , size_t lenFName , int64_t lNum , int lNumDigits)"		292404	0					
ANR	292406	CompoundStatement		350:0:10927:11901	292404	0					
ANR	292407	ExpressionStatement	DEFiRet	351:1:10930:10937	292404	0	True				
ANR	292408	Identifier	DEFiRet		292404	0					
ANR	292409	IdentifierDeclStatement	uchar * pName ;	352:1:10940:10952	292404	1	True				
ANR	292410	IdentifierDecl	* pName		292404	0					
ANR	292411	IdentifierDeclType	uchar *		292404	0					
ANR	292412	Identifier	pName		292404	1					
ANR	292413	IdentifierDeclStatement	uchar * pNameWork ;	353:1:10955:10971	292404	2	True				
ANR	292414	IdentifierDecl	* pNameWork		292404	0					
ANR	292415	IdentifierDeclType	uchar *		292404	0					
ANR	292416	Identifier	pNameWork		292404	1					
ANR	292417	IdentifierDeclStatement	size_t lenName ;	354:1:10974:10988	292404	3	True				
ANR	292418	IdentifierDecl	lenName		292404	0					
ANR	292419	IdentifierDeclType	size_t		292404	0					
ANR	292420	Identifier	lenName		292404	1					
ANR	292421	IdentifierDeclStatement	uchar szBuf [ 128 ] ;	355:1:10991:11007	292404	4	True				
ANR	292422	IdentifierDecl	szBuf [ 128 ]		292404	0					
ANR	292423	IdentifierDeclType	uchar [ 128 ]		292404	0					
ANR	292424	Identifier	szBuf		292404	1					
ANR	292425	PrimaryExpression	128		292404	2					
ANR	292426	IdentifierDeclStatement	char szFmtBuf [ 32 ] ;	356:1:11034:11051	292404	5	True				
ANR	292427	IdentifierDecl	szFmtBuf [ 32 ]		292404	0					
ANR	292428	IdentifierDeclType	char [ 32 ]		292404	0					
ANR	292429	Identifier	szFmtBuf		292404	1					
ANR	292430	PrimaryExpression	32		292404	2					
ANR	292431	IdentifierDeclStatement	size_t lenBuf ;	357:1:11087:11100	292404	6	True				
ANR	292432	IdentifierDecl	lenBuf		292404	0					
ANR	292433	IdentifierDeclType	size_t		292404	0					
ANR	292434	Identifier	lenBuf		292404	1					
ANR	292435	IfStatement	if ( lNum < 0 )		292404	7					
ANR	292436	Condition	lNum < 0	359:4:11107:11114	292404	0	True				
ANR	292437	RelationalExpression	lNum < 0		292404	0		<			
ANR	292438	Identifier	lNum		292404	0					
ANR	292439	PrimaryExpression	0		292404	1					
ANR	292440	CompoundStatement		10:14:189:189	292404	1					
ANR	292441	ExpressionStatement	szBuf [ 0 ] = '\\0'	360:2:11121:11136	292404	0	True				
ANR	292442	AssignmentExpression	szBuf [ 0 ] = '\\0'		292404	0		=			
ANR	292443	ArrayIndexing	szBuf [ 0 ]		292404	0					
ANR	292444	Identifier	szBuf		292404	0					
ANR	292445	PrimaryExpression	0		292404	1					
ANR	292446	PrimaryExpression	'\\0'		292404	1					
ANR	292447	ExpressionStatement	lenBuf = 0	361:2:11140:11150	292404	1	True				
ANR	292448	AssignmentExpression	lenBuf = 0		292404	0		=			
ANR	292449	Identifier	lenBuf		292404	0					
ANR	292450	PrimaryExpression	0		292404	1					
ANR	292451	ElseStatement	else		292404	0					
ANR	292452	CompoundStatement		13:8:232:232	292404	0					
ANR	292453	IfStatement	if ( lNumDigits > 0 )		292404	0					
ANR	292454	Condition	lNumDigits > 0	363:5:11167:11180	292404	0	True				
ANR	292455	RelationalExpression	lNumDigits > 0		292404	0		>			
ANR	292456	Identifier	lNumDigits		292404	0					
ANR	292457	PrimaryExpression	0		292404	1					
ANR	292458	CompoundStatement		14:21:255:255	292404	1					
ANR	292459	Statement	snprintf	364:3:11188:11195	292404	0	True				
ANR	292460	Statement	(	364:11:11196:11196	292404	1	True				
ANR	292461	Statement	szFmtBuf	364:12:11197:11204	292404	2	True				
ANR	292462	Statement	","	364:20:11205:11205	292404	3	True				
ANR	292463	Statement	sizeof	364:22:11207:11212	292404	4	True				
ANR	292464	Statement	(	364:28:11213:11213	292404	5	True				
ANR	292465	Statement	szFmtBuf	364:29:11214:11221	292404	6	True				
ANR	292466	Statement	)	364:37:11222:11222	292404	7	True				
ANR	292467	Statement	","	364:38:11223:11223	292404	8	True				
ANR	292468	Statement	""".%%0%d"""	364:40:11225:11232	292404	9	True				
ANR	292469	Statement	PRId64	364:49:11234:11239	292404	10	True				
ANR	292470	Statement	","	364:55:11240:11240	292404	11	True				
ANR	292471	Statement	lNumDigits	364:57:11242:11251	292404	12	True				
ANR	292472	Statement	)	364:67:11252:11252	292404	13	True				
ANR	292473	ExpressionStatement		364:68:11253:11253	292404	14	True				
ANR	292474	ExpressionStatement	"lenBuf = snprintf ( ( char * ) szBuf , sizeof ( szBuf ) , szFmtBuf , lNum )"	365:3:11258:11320	292404	15	True				
ANR	292475	AssignmentExpression	"lenBuf = snprintf ( ( char * ) szBuf , sizeof ( szBuf ) , szFmtBuf , lNum )"		292404	0		=			
ANR	292476	Identifier	lenBuf		292404	0					
ANR	292477	CallExpression	"snprintf ( ( char * ) szBuf , sizeof ( szBuf ) , szFmtBuf , lNum )"		292404	1					
ANR	292478	Callee	snprintf		292404	0					
ANR	292479	Identifier	snprintf		292404	0					
ANR	292480	ArgumentList	( char * ) szBuf		292404	1					
ANR	292481	Argument	( char * ) szBuf		292404	0					
ANR	292482	CastExpression	( char * ) szBuf		292404	0					
ANR	292483	CastTarget	char *		292404	0					
ANR	292484	Identifier	szBuf		292404	1					
ANR	292485	Argument	sizeof ( szBuf )		292404	1					
ANR	292486	SizeofExpression	sizeof ( szBuf )		292404	0					
ANR	292487	Sizeof	sizeof		292404	0					
ANR	292488	SizeofOperand	szBuf		292404	1					
ANR	292489	Argument	szFmtBuf		292404	2					
ANR	292490	Identifier	szFmtBuf		292404	0					
ANR	292491	Argument	lNum		292404	3					
ANR	292492	Identifier	lNum		292404	0					
ANR	292493	ElseStatement	else		292404	0					
ANR	292494	Statement	lenBuf	367:3:11334:11339	292404	0	True				
ANR	292495	Statement	=	367:10:11341:11341	292404	1	True				
ANR	292496	Statement	snprintf	367:12:11343:11350	292404	2	True				
ANR	292497	Statement	(	367:20:11351:11351	292404	3	True				
ANR	292498	Statement	(	367:21:11352:11352	292404	4	True				
ANR	292499	Statement	char	367:22:11353:11356	292404	5	True				
ANR	292500	Statement	*	367:26:11357:11357	292404	6	True				
ANR	292501	Statement	)	367:27:11358:11358	292404	7	True				
ANR	292502	Statement	szBuf	367:28:11359:11363	292404	8	True				
ANR	292503	Statement	","	367:33:11364:11364	292404	9	True				
ANR	292504	Statement	sizeof	367:35:11366:11371	292404	10	True				
ANR	292505	Statement	(	367:41:11372:11372	292404	11	True				
ANR	292506	Statement	szBuf	367:42:11373:11377	292404	12	True				
ANR	292507	Statement	)	367:47:11378:11378	292404	13	True				
ANR	292508	Statement	","	367:48:11379:11379	292404	14	True				
ANR	292509	Statement	""".%"""	367:50:11381:11384	292404	15	True				
ANR	292510	Statement	PRId64	367:55:11386:11391	292404	16	True				
ANR	292511	Statement	","	367:61:11392:11392	292404	17	True				
ANR	292512	Statement	lNum	367:63:11394:11397	292404	18	True				
ANR	292513	Statement	)	367:67:11398:11398	292404	19	True				
ANR	292514	ExpressionStatement		367:68:11399:11399	292404	20	True				
ANR	292515	ExpressionStatement	lenName = lenDirName + 1 + lenFName + lenBuf + 1	370:1:11406:11454	292404	8	True				
ANR	292516	AssignmentExpression	lenName = lenDirName + 1 + lenFName + lenBuf + 1		292404	0		=			
ANR	292517	Identifier	lenName		292404	0					
ANR	292518	AdditiveExpression	lenDirName + 1 + lenFName + lenBuf + 1		292404	1		+			
ANR	292519	Identifier	lenDirName		292404	0					
ANR	292520	AdditiveExpression	1 + lenFName + lenBuf + 1		292404	1		+			
ANR	292521	PrimaryExpression	1		292404	0					
ANR	292522	AdditiveExpression	lenFName + lenBuf + 1		292404	1		+			
ANR	292523	Identifier	lenFName		292404	0					
ANR	292524	AdditiveExpression	lenBuf + 1		292404	1		+			
ANR	292525	Identifier	lenBuf		292404	0					
ANR	292526	PrimaryExpression	1		292404	1					
ANR	292527	IfStatement	if ( ( pName = MALLOC ( lenName ) ) == NULL )		292404	9					
ANR	292528	Condition	( pName = MALLOC ( lenName ) ) == NULL	371:4:11487:11519	292404	0	True				
ANR	292529	EqualityExpression	( pName = MALLOC ( lenName ) ) == NULL		292404	0		==			
ANR	292530	AssignmentExpression	pName = MALLOC ( lenName )		292404	0		=			
ANR	292531	Identifier	pName		292404	0					
ANR	292532	CallExpression	MALLOC ( lenName )		292404	1					
ANR	292533	Callee	MALLOC		292404	0					
ANR	292534	Identifier	MALLOC		292404	0					
ANR	292535	ArgumentList	lenName		292404	1					
ANR	292536	Argument	lenName		292404	0					
ANR	292537	Identifier	lenName		292404	0					
ANR	292538	Identifier	NULL		292404	1					
ANR	292539	ExpressionStatement	ABORT_FINALIZE ( RS_RET_OUT_OF_MEMORY )	372:2:11524:11560	292404	1	True				
ANR	292540	CallExpression	ABORT_FINALIZE ( RS_RET_OUT_OF_MEMORY )		292404	0					
ANR	292541	Callee	ABORT_FINALIZE		292404	0					
ANR	292542	Identifier	ABORT_FINALIZE		292404	0					
ANR	292543	ArgumentList	RS_RET_OUT_OF_MEMORY		292404	1					
ANR	292544	Argument	RS_RET_OUT_OF_MEMORY		292404	0					
ANR	292545	Identifier	RS_RET_OUT_OF_MEMORY		292404	0					
ANR	292546	ExpressionStatement	"memcpy ( pName , pDirName , lenDirName )"	375:1:11605:11640	292404	10	True				
ANR	292547	CallExpression	"memcpy ( pName , pDirName , lenDirName )"		292404	0					
ANR	292548	Callee	memcpy		292404	0					
ANR	292549	Identifier	memcpy		292404	0					
ANR	292550	ArgumentList	pName		292404	1					
ANR	292551	Argument	pName		292404	0					
ANR	292552	Identifier	pName		292404	0					
ANR	292553	Argument	pDirName		292404	1					
ANR	292554	Identifier	pDirName		292404	0					
ANR	292555	Argument	lenDirName		292404	2					
ANR	292556	Identifier	lenDirName		292404	0					
ANR	292557	ExpressionStatement	pNameWork = pName + lenDirName	376:1:11643:11673	292404	11	True				
ANR	292558	AssignmentExpression	pNameWork = pName + lenDirName		292404	0		=			
ANR	292559	Identifier	pNameWork		292404	0					
ANR	292560	AdditiveExpression	pName + lenDirName		292404	1		+			
ANR	292561	Identifier	pName		292404	0					
ANR	292562	Identifier	lenDirName		292404	1					
ANR	292563	ExpressionStatement	* pNameWork ++ = '/'	377:1:11676:11694	292404	12	True				
ANR	292564	AssignmentExpression	* pNameWork ++ = '/'		292404	0		=			
ANR	292565	UnaryOperationExpression	* pNameWork ++		292404	0					
ANR	292566	UnaryOperator	*		292404	0					
ANR	292567	PostIncDecOperationExpression	pNameWork ++		292404	1					
ANR	292568	Identifier	pNameWork		292404	0					
ANR	292569	IncDec	++		292404	1					
ANR	292570	PrimaryExpression	'/'		292404	1					
ANR	292571	ExpressionStatement	"memcpy ( pNameWork , pFName , lenFName )"	378:1:11697:11732	292404	13	True				
ANR	292572	CallExpression	"memcpy ( pNameWork , pFName , lenFName )"		292404	0					
ANR	292573	Callee	memcpy		292404	0					
ANR	292574	Identifier	memcpy		292404	0					
ANR	292575	ArgumentList	pNameWork		292404	1					
ANR	292576	Argument	pNameWork		292404	0					
ANR	292577	Identifier	pNameWork		292404	0					
ANR	292578	Argument	pFName		292404	1					
ANR	292579	Identifier	pFName		292404	0					
ANR	292580	Argument	lenFName		292404	2					
ANR	292581	Identifier	lenFName		292404	0					
ANR	292582	ExpressionStatement	pNameWork += lenFName	379:1:11735:11756	292404	14	True				
ANR	292583	AssignmentExpression	pNameWork += lenFName		292404	0		+=			
ANR	292584	Identifier	pNameWork		292404	0					
ANR	292585	Identifier	lenFName		292404	1					
ANR	292586	IfStatement	if ( lenBuf > 0 )		292404	15					
ANR	292587	Condition	lenBuf > 0	380:4:11762:11771	292404	0	True				
ANR	292588	RelationalExpression	lenBuf > 0		292404	0		>			
ANR	292589	Identifier	lenBuf		292404	0					
ANR	292590	PrimaryExpression	0		292404	1					
ANR	292591	CompoundStatement		31:16:846:846	292404	1					
ANR	292592	ExpressionStatement	"memcpy ( pNameWork , szBuf , lenBuf )"	381:2:11778:11810	292404	0	True				
ANR	292593	CallExpression	"memcpy ( pNameWork , szBuf , lenBuf )"		292404	0					
ANR	292594	Callee	memcpy		292404	0					
ANR	292595	Identifier	memcpy		292404	0					
ANR	292596	ArgumentList	pNameWork		292404	1					
ANR	292597	Argument	pNameWork		292404	0					
ANR	292598	Identifier	pNameWork		292404	0					
ANR	292599	Argument	szBuf		292404	1					
ANR	292600	Identifier	szBuf		292404	0					
ANR	292601	Argument	lenBuf		292404	2					
ANR	292602	Identifier	lenBuf		292404	0					
ANR	292603	ExpressionStatement	pNameWork += lenBuf	382:2:11814:11833	292404	1	True				
ANR	292604	AssignmentExpression	pNameWork += lenBuf		292404	0		+=			
ANR	292605	Identifier	pNameWork		292404	0					
ANR	292606	Identifier	lenBuf		292404	1					
ANR	292607	ExpressionStatement	* pNameWork = '\\0'	384:1:11839:11856	292404	16	True				
ANR	292608	AssignmentExpression	* pNameWork = '\\0'		292404	0		=			
ANR	292609	UnaryOperationExpression	* pNameWork		292404	0					
ANR	292610	UnaryOperator	*		292404	0					
ANR	292611	Identifier	pNameWork		292404	1					
ANR	292612	PrimaryExpression	'\\0'		292404	1					
ANR	292613	ExpressionStatement	* ppName = pName	386:1:11860:11875	292404	17	True				
ANR	292614	AssignmentExpression	* ppName = pName		292404	0		=			
ANR	292615	UnaryOperationExpression	* ppName		292404	0					
ANR	292616	UnaryOperator	*		292404	0					
ANR	292617	Identifier	ppName		292404	1					
ANR	292618	Identifier	pName		292404	1					
ANR	292619	Label	finalize_it :	388:0:11878:11889	292404	18	True				
ANR	292620	Identifier	finalize_it		292404	0					
ANR	292621	ExpressionStatement	RETiRet	389:1:11892:11899	292404	19	True				
ANR	292622	Identifier	RETiRet		292404	0					
ANR	292623	ReturnType	rsRetVal		292404	1					
ANR	292624	Identifier	genFileName		292404	2					
ANR	292625	ParameterList	"uchar * * ppName , uchar * pDirName , size_t lenDirName , uchar * pFName , size_t lenFName , int64_t lNum , int lNumDigits"		292404	3					
ANR	292626	Parameter	uchar * * ppName	348:21:10806:10819	292404	0	True				
ANR	292627	ParameterType	uchar * *		292404	0					
ANR	292628	Identifier	ppName		292404	1					
ANR	292629	Parameter	uchar * pDirName	348:37:10822:10836	292404	1	True				
ANR	292630	ParameterType	uchar *		292404	0					
ANR	292631	Identifier	pDirName		292404	1					
ANR	292632	Parameter	size_t lenDirName	348:54:10839:10855	292404	2	True				
ANR	292633	ParameterType	size_t		292404	0					
ANR	292634	Identifier	lenDirName		292404	1					
ANR	292635	Parameter	uchar * pFName	348:73:10858:10870	292404	3	True				
ANR	292636	ParameterType	uchar *		292404	0					
ANR	292637	Identifier	pFName		292404	1					
ANR	292638	Parameter	size_t lenFName	349:7:10880:10894	292404	4	True				
ANR	292639	ParameterType	size_t		292404	0					
ANR	292640	Identifier	lenFName		292404	1					
ANR	292641	Parameter	int64_t lNum	349:24:10897:10908	292404	5	True				
ANR	292642	ParameterType	int64_t		292404	0					
ANR	292643	Identifier	lNum		292404	1					
ANR	292644	Parameter	int lNumDigits	349:38:10911:10924	292404	6	True				
ANR	292645	ParameterType	int		292404	0					
ANR	292646	Identifier	lNumDigits		292404	1					
ANR	292647	CFGEntryNode	ENTRY		292404		True				
ANR	292648	CFGExitNode	EXIT		292404		True				
ANR	292649	Symbol	szBuf		292404						
ANR	292650	Symbol	* pNameWork		292404						
ANR	292651	Symbol	NULL		292404						
ANR	292652	Symbol	szFmtBuf		292404						
ANR	292653	Symbol	ppName		292404						
ANR	292654	Symbol	lNumDigits		292404						
ANR	292655	Symbol	* ppName		292404						
ANR	292656	Symbol	lNum		292404						
ANR	292657	Symbol	pDirName		292404						
ANR	292658	Symbol	pNameWork		292404						
ANR	292659	Symbol	lenName		292404						
ANR	292660	Symbol	* pNameWork ++		292404						
ANR	292661	Symbol	lenBuf		292404						
ANR	292662	Symbol	lenFName		292404						
ANR	292663	Symbol	pName		292404						
ANR	292664	Symbol	MALLOC		292404						
ANR	292665	Symbol	RS_RET_OUT_OF_MEMORY		292404						
ANR	292666	Symbol	* szBuf		292404						
ANR	292667	Symbol	lenDirName		292404						
ANR	292668	Symbol	pFName		292404						
ANR	292669	Symbol	snprintf		292404						
ANR	292670	Function	getNumberDigits	399:0:12159:12304							
ANR	292671	FunctionDef	getNumberDigits (long lNum)		292670	0					
ANR	292672	CompoundStatement		400:0:12190:12304	292670	0					
ANR	292673	IdentifierDeclStatement	int iDig ;	401:1:12193:12201	292670	0	True				
ANR	292674	IdentifierDecl	iDig		292670	0					
ANR	292675	IdentifierDeclType	int		292670	0					
ANR	292676	Identifier	iDig		292670	1					
ANR	292677	IfStatement	if ( lNum == 0 )		292670	1					
ANR	292678	Condition	lNum == 0	403:4:12208:12216	292670	0	True				
ANR	292679	EqualityExpression	lNum == 0		292670	0		==			
ANR	292680	Identifier	lNum		292670	0					
ANR	292681	PrimaryExpression	0		292670	1					
ANR	292682	ExpressionStatement	iDig = 1	404:2:12221:12229	292670	1	True				
ANR	292683	AssignmentExpression	iDig = 1		292670	0		=			
ANR	292684	Identifier	iDig		292670	0					
ANR	292685	PrimaryExpression	1		292670	1					
ANR	292686	ElseStatement	else		292670	0					
ANR	292687	ForStatement	for ( iDig = 0 ; lNum != 0 ; ++ iDig )		292670	0					
ANR	292688	ForInit	iDig = 0 ;	406:6:12243:12252	292670	0	True				
ANR	292689	AssignmentExpression	iDig = 0		292670	0		=			
ANR	292690	Identifier	iDig		292670	0					
ANR	292691	PrimaryExpression	0		292670	1					
ANR	292692	Condition	lNum != 0	406:17:12254:12262	292670	1	True				
ANR	292693	EqualityExpression	lNum != 0		292670	0		!=			
ANR	292694	Identifier	lNum		292670	0					
ANR	292695	PrimaryExpression	0		292670	1					
ANR	292696	UnaryExpression	++ iDig	406:29:12266:12271	292670	2	True				
ANR	292697	IncDec	++		292670	0					
ANR	292698	Identifier	iDig		292670	1					
ANR	292699	ExpressionStatement	lNum /= 10	407:3:12277:12287	292670	3	True				
ANR	292700	AssignmentExpression	lNum /= 10		292670	0		/=			
ANR	292701	Identifier	lNum		292670	0					
ANR	292702	PrimaryExpression	10		292670	1					
ANR	292703	ReturnStatement	return iDig ;	409:1:12291:12302	292670	2	True				
ANR	292704	Identifier	iDig		292670	0					
ANR	292705	ReturnType	int		292670	1					
ANR	292706	Identifier	getNumberDigits		292670	2					
ANR	292707	ParameterList	long lNum		292670	3					
ANR	292708	Parameter	long lNum	399:20:12179:12187	292670	0	True				
ANR	292709	ParameterType	long		292670	0					
ANR	292710	Identifier	lNum		292670	1					
ANR	292711	CFGEntryNode	ENTRY		292670		True				
ANR	292712	CFGExitNode	EXIT		292670		True				
ANR	292713	Symbol	lNum		292670						
ANR	292714	Symbol	iDig		292670						
ANR	292715	Function	timeoutComp	417:0:12451:13075							
ANR	292716	FunctionDef	"timeoutComp (struct timespec * pt , long iTimeout)"		292715	0					
ANR	292717	CompoundStatement		419:0:12508:13075	292715	0					
ANR	292718	Statement	if	420:2:12512:12513	292715	0	True				
ANR	292719	Statement	_POSIX_TIMERS	420:5:12515:12527	292715	1	True				
ANR	292720	Statement	<=	420:19:12529:12530	292715	2	True				
ANR	292721	Statement	0	420:22:12532:12532	292715	3	True				
ANR	292722	IdentifierDeclStatement	struct timeval tv ;	421:1:12535:12552	292715	4	True				
ANR	292723	IdentifierDecl	tv		292715	0					
ANR	292724	IdentifierDeclType	struct timeval		292715	0					
ANR	292725	Identifier	tv		292715	1					
ANR	292726	IdentifierDeclStatement	endif BEGINfunc assert ( pt != NULL ) ;	422:2:12556:12593	292715	5	True				
ANR	292727	IdentifierDecl	assert ( pt != NULL )		292715	0					
ANR	292728	IdentifierDeclType	endif BEGINfunc		292715	0					
ANR	292729	Identifier	assert		292715	1					
ANR	292730	EqualityExpression	pt != NULL		292715	2		!=			
ANR	292731	Identifier	pt		292715	0					
ANR	292732	Identifier	NULL		292715	1					
ANR	292733	Statement	if	428:2:12621:12622	292715	6	True				
ANR	292734	Statement	_POSIX_TIMERS	428:5:12624:12636	292715	7	True				
ANR	292735	Statement	>	428:19:12638:12638	292715	8	True				
ANR	292736	Statement	0	428:21:12640:12640	292715	9	True				
ANR	292737	ExpressionStatement	"clock_gettime ( CLOCK_REALTIME , pt )"	430:1:12677:12710	292715	10	True				
ANR	292738	CallExpression	"clock_gettime ( CLOCK_REALTIME , pt )"		292715	0					
ANR	292739	Callee	clock_gettime		292715	0					
ANR	292740	Identifier	clock_gettime		292715	0					
ANR	292741	ArgumentList	CLOCK_REALTIME		292715	1					
ANR	292742	Argument	CLOCK_REALTIME		292715	0					
ANR	292743	Identifier	CLOCK_REALTIME		292715	0					
ANR	292744	Argument	pt		292715	1					
ANR	292745	Identifier	pt		292715	0					
ANR	292746	ReturnType	rsRetVal		292715	1					
ANR	292747	Identifier	timeoutComp		292715	2					
ANR	292748	ParameterList	"struct timespec * pt , long iTimeout"		292715	3					
ANR	292749	Parameter	struct timespec * pt	418:12:12472:12490	292715	0	True				
ANR	292750	ParameterType	struct timespec *		292715	0					
ANR	292751	Identifier	pt		292715	1					
ANR	292752	Parameter	long iTimeout	418:33:12493:12505	292715	1	True				
ANR	292753	ParameterType	long		292715	0					
ANR	292754	Identifier	iTimeout		292715	1					
ANR	292755	CFGEntryNode	ENTRY		292715		True				
ANR	292756	CFGExitNode	EXIT		292715		True				
ANR	292757	Symbol	tv		292715						
ANR	292758	Symbol	pt		292715						
ANR	292759	Symbol	assert		292715						
ANR	292760	Symbol	iTimeout		292715						
ANR	292761	Symbol	CLOCK_REALTIME		292715						
ANR	292762	Function	currentTimeMills	446:0:13078:13411							
ANR	292763	FunctionDef	currentTimeMills ()		292762	0					
ANR	292764	CompoundStatement		448:0:13111:13411	292762	0					
ANR	292765	IdentifierDeclStatement	struct timespec tm ;	449:1:13114:13132	292762	0	True				
ANR	292766	IdentifierDecl	tm		292762	0					
ANR	292767	IdentifierDeclType	struct timespec		292762	0					
ANR	292768	Identifier	tm		292762	1					
ANR	292769	Statement	if	450:2:13136:13137	292762	1	True				
ANR	292770	Statement	_POSIX_TIMERS	450:5:13139:13151	292762	2	True				
ANR	292771	Statement	<=	450:19:13153:13154	292762	3	True				
ANR	292772	Statement	0	450:22:13156:13156	292762	4	True				
ANR	292773	IdentifierDeclStatement	struct timeval tv ;	451:1:13159:13176	292762	5	True				
ANR	292774	IdentifierDecl	tv		292762	0					
ANR	292775	IdentifierDeclType	struct timeval		292762	0					
ANR	292776	Identifier	tv		292762	1					
ANR	292777	Statement	endif	452:2:13180:13184	292762	6	True				
ANR	292778	Statement	if	454:2:13189:13190	292762	7	True				
ANR	292779	Statement	_POSIX_TIMERS	454:5:13192:13204	292762	8	True				
ANR	292780	Statement	>	454:19:13206:13206	292762	9	True				
ANR	292781	Statement	0	454:21:13208:13208	292762	10	True				
ANR	292782	ExpressionStatement	"clock_gettime ( CLOCK_REALTIME , & tm )"	455:1:13211:13245	292762	11	True				
ANR	292783	CallExpression	"clock_gettime ( CLOCK_REALTIME , & tm )"		292762	0					
ANR	292784	Callee	clock_gettime		292762	0					
ANR	292785	Identifier	clock_gettime		292762	0					
ANR	292786	ArgumentList	CLOCK_REALTIME		292762	1					
ANR	292787	Argument	CLOCK_REALTIME		292762	0					
ANR	292788	Identifier	CLOCK_REALTIME		292762	0					
ANR	292789	Argument	& tm		292762	1					
ANR	292790	UnaryOperationExpression	& tm		292762	0					
ANR	292791	UnaryOperator	&		292762	0					
ANR	292792	Identifier	tm		292762	1					
ANR	292793	ReturnType	long long		292762	1					
ANR	292794	Identifier	currentTimeMills		292762	2					
ANR	292795	ParameterList			292762	3					
ANR	292796	CFGEntryNode	ENTRY		292762		True				
ANR	292797	CFGExitNode	EXIT		292762		True				
ANR	292798	Symbol	tv		292762						
ANR	292799	Symbol	& tm		292762						
ANR	292800	Symbol	tm		292762						
ANR	292801	Symbol	CLOCK_REALTIME		292762						
ANR	292802	Function	timeoutVal	471:0:13667:14196							
ANR	292803	FunctionDef	timeoutVal (struct timespec * pt)		292802	0					
ANR	292804	CompoundStatement		473:0:13704:14196	292802	0					
ANR	292805	IdentifierDeclStatement	struct timespec t ;	474:1:13707:13724	292802	0	True				
ANR	292806	IdentifierDecl	t		292802	0					
ANR	292807	IdentifierDeclType	struct timespec		292802	0					
ANR	292808	Identifier	t		292802	1					
ANR	292809	IdentifierDeclStatement	long iTimeout ;	475:1:13727:13740	292802	1	True				
ANR	292810	IdentifierDecl	iTimeout		292802	0					
ANR	292811	IdentifierDeclType	long		292802	0					
ANR	292812	Identifier	iTimeout		292802	1					
ANR	292813	Statement	if	476:2:13744:13745	292802	2	True				
ANR	292814	Statement	_POSIX_TIMERS	476:5:13747:13759	292802	3	True				
ANR	292815	Statement	<=	476:19:13761:13762	292802	4	True				
ANR	292816	Statement	0	476:22:13764:13764	292802	5	True				
ANR	292817	IdentifierDeclStatement	struct timeval tv ;	477:1:13767:13784	292802	6	True				
ANR	292818	IdentifierDecl	tv		292802	0					
ANR	292819	IdentifierDeclType	struct timeval		292802	0					
ANR	292820	Identifier	tv		292802	1					
ANR	292821	IdentifierDeclStatement	endif BEGINfunc assert ( pt != NULL ) ;	478:2:13788:13825	292802	7	True				
ANR	292822	IdentifierDecl	assert ( pt != NULL )		292802	0					
ANR	292823	IdentifierDeclType	endif BEGINfunc		292802	0					
ANR	292824	Identifier	assert		292802	1					
ANR	292825	EqualityExpression	pt != NULL		292802	2		!=			
ANR	292826	Identifier	pt		292802	0					
ANR	292827	Identifier	NULL		292802	1					
ANR	292828	Statement	if	483:2:13852:13853	292802	8	True				
ANR	292829	Statement	_POSIX_TIMERS	483:5:13855:13867	292802	9	True				
ANR	292830	Statement	>	483:19:13869:13869	292802	10	True				
ANR	292831	Statement	0	483:21:13871:13871	292802	11	True				
ANR	292832	ExpressionStatement	"clock_gettime ( CLOCK_REALTIME , & t )"	485:1:13908:13941	292802	12	True				
ANR	292833	CallExpression	"clock_gettime ( CLOCK_REALTIME , & t )"		292802	0					
ANR	292834	Callee	clock_gettime		292802	0					
ANR	292835	Identifier	clock_gettime		292802	0					
ANR	292836	ArgumentList	CLOCK_REALTIME		292802	1					
ANR	292837	Argument	CLOCK_REALTIME		292802	0					
ANR	292838	Identifier	CLOCK_REALTIME		292802	0					
ANR	292839	Argument	& t		292802	1					
ANR	292840	UnaryOperationExpression	& t		292802	0					
ANR	292841	UnaryOperator	&		292802	0					
ANR	292842	Identifier	t		292802	1					
ANR	292843	ReturnType	long		292802	1					
ANR	292844	Identifier	timeoutVal		292802	2					
ANR	292845	ParameterList	struct timespec * pt		292802	3					
ANR	292846	Parameter	struct timespec * pt	472:11:13683:13701	292802	0	True				
ANR	292847	ParameterType	struct timespec *		292802	0					
ANR	292848	Identifier	pt		292802	1					
ANR	292849	CFGEntryNode	ENTRY		292802		True				
ANR	292850	CFGExitNode	EXIT		292802		True				
ANR	292851	Symbol	tv		292802						
ANR	292852	Symbol	pt		292802						
ANR	292853	Symbol	t		292802						
ANR	292854	Symbol	assert		292802						
ANR	292855	Symbol	& t		292802						
ANR	292856	Symbol	iTimeout		292802						
ANR	292857	Symbol	CLOCK_REALTIME		292802						
ANR	292858	Function	mutexCancelCleanup	505:0:14284:14412							
ANR	292859	FunctionDef	mutexCancelCleanup (void * arg)		292858	0					
ANR	292860	CompoundStatement		507:0:14319:14412	292858	0					
ANR	292861	IdentifierDeclStatement	BEGINfunc assert ( arg != NULL ) ;	508:1:14322:14352	292858	0	True				
ANR	292862	IdentifierDecl	assert ( arg != NULL )		292858	0					
ANR	292863	IdentifierDeclType	BEGINfunc		292858	0					
ANR	292864	Identifier	assert		292858	1					
ANR	292865	EqualityExpression	arg != NULL		292858	2		!=			
ANR	292866	Identifier	arg		292858	0					
ANR	292867	Identifier	NULL		292858	1					
ANR	292868	ExpressionStatement	d_pthread_mutex_unlock ( ( pthread_mutex_t * ) arg )	510:1:14355:14401	292858	1	True				
ANR	292869	CallExpression	d_pthread_mutex_unlock ( ( pthread_mutex_t * ) arg )		292858	0					
ANR	292870	Callee	d_pthread_mutex_unlock		292858	0					
ANR	292871	Identifier	d_pthread_mutex_unlock		292858	0					
ANR	292872	ArgumentList	( pthread_mutex_t * ) arg		292858	1					
ANR	292873	Argument	( pthread_mutex_t * ) arg		292858	0					
ANR	292874	CastExpression	( pthread_mutex_t * ) arg		292858	0					
ANR	292875	CastTarget	pthread_mutex_t *		292858	0					
ANR	292876	Identifier	arg		292858	1					
ANR	292877	Statement	ENDfunc	511:1:14404:14410	292858	2	True				
ANR	292878	ReturnType	void		292858	1					
ANR	292879	Identifier	mutexCancelCleanup		292858	2					
ANR	292880	ParameterList	void * arg		292858	3					
ANR	292881	Parameter	void * arg	506:19:14308:14316	292858	0	True				
ANR	292882	ParameterType	void *		292858	0					
ANR	292883	Identifier	arg		292858	1					
ANR	292884	CFGEntryNode	ENTRY		292858		True				
ANR	292885	CFGExitNode	EXIT		292858		True				
ANR	292886	Symbol	assert		292858						
ANR	292887	Symbol	arg		292858						
ANR	292888	Function	srSleep	520:0:14548:14788							
ANR	292889	FunctionDef	"srSleep (int iSeconds , int iuSeconds)"		292888	0					
ANR	292890	CompoundStatement		522:0:14590:14788	292888	0					
ANR	292891	IdentifierDeclStatement	struct timeval tvSelectTimeout ;	523:1:14593:14623	292888	0	True				
ANR	292892	IdentifierDecl	tvSelectTimeout		292888	0					
ANR	292893	IdentifierDeclType	struct timeval		292888	0					
ANR	292894	Identifier	tvSelectTimeout		292888	1					
ANR	292895	Statement	BEGINfunc	525:1:14627:14635	292888	1	True				
ANR	292896	ExpressionStatement	tvSelectTimeout . tv_sec = iSeconds	526:1:14638:14671	292888	2	True				
ANR	292897	AssignmentExpression	tvSelectTimeout . tv_sec = iSeconds		292888	0		=			
ANR	292898	MemberAccess	tvSelectTimeout . tv_sec		292888	0					
ANR	292899	Identifier	tvSelectTimeout		292888	0					
ANR	292900	Identifier	tv_sec		292888	1					
ANR	292901	Identifier	iSeconds		292888	1					
ANR	292902	ExpressionStatement	tvSelectTimeout . tv_usec = iuSeconds	527:1:14674:14709	292888	3	True				
ANR	292903	AssignmentExpression	tvSelectTimeout . tv_usec = iuSeconds		292888	0		=			
ANR	292904	MemberAccess	tvSelectTimeout . tv_usec		292888	0					
ANR	292905	Identifier	tvSelectTimeout		292888	0					
ANR	292906	Identifier	tv_usec		292888	1					
ANR	292907	Identifier	iuSeconds		292888	1					
ANR	292908	ExpressionStatement	"select ( 0 , NULL , NULL , NULL , & tvSelectTimeout )"	528:1:14732:14777	292888	4	True				
ANR	292909	CallExpression	"select ( 0 , NULL , NULL , NULL , & tvSelectTimeout )"		292888	0					
ANR	292910	Callee	select		292888	0					
ANR	292911	Identifier	select		292888	0					
ANR	292912	ArgumentList	0		292888	1					
ANR	292913	Argument	0		292888	0					
ANR	292914	PrimaryExpression	0		292888	0					
ANR	292915	Argument	NULL		292888	1					
ANR	292916	Identifier	NULL		292888	0					
ANR	292917	Argument	NULL		292888	2					
ANR	292918	Identifier	NULL		292888	0					
ANR	292919	Argument	NULL		292888	3					
ANR	292920	Identifier	NULL		292888	0					
ANR	292921	Argument	& tvSelectTimeout		292888	4					
ANR	292922	UnaryOperationExpression	& tvSelectTimeout		292888	0					
ANR	292923	UnaryOperator	&		292888	0					
ANR	292924	Identifier	tvSelectTimeout		292888	1					
ANR	292925	Statement	ENDfunc	529:1:14780:14786	292888	5	True				
ANR	292926	ReturnType	void		292888	1					
ANR	292927	Identifier	srSleep		292888	2					
ANR	292928	ParameterList	"int iSeconds , int iuSeconds"		292888	3					
ANR	292929	Parameter	int iSeconds	521:8:14561:14572	292888	0	True				
ANR	292930	ParameterType	int		292888	0					
ANR	292931	Identifier	iSeconds		292888	1					
ANR	292932	Parameter	int iuSeconds	521:22:14575:14587	292888	1	True				
ANR	292933	ParameterType	int		292888	0					
ANR	292934	Identifier	iuSeconds		292888	1					
ANR	292935	CFGEntryNode	ENTRY		292888		True				
ANR	292936	CFGExitNode	EXIT		292888		True				
ANR	292937	Symbol	iuSeconds		292888						
ANR	292938	Symbol	tvSelectTimeout . tv_sec		292888						
ANR	292939	Symbol	NULL		292888						
ANR	292940	Symbol	iSeconds		292888						
ANR	292941	Symbol	tvSelectTimeout		292888						
ANR	292942	Symbol	tvSelectTimeout . tv_usec		292888						
ANR	292943	Symbol	& tvSelectTimeout		292888						
ANR	292944	Function	rs_strerror_r	548:0:15393:15802							
ANR	292945	FunctionDef	"rs_strerror_r (int errnum , char * buf , size_t buflen)"		292944	0					
ANR	292946	CompoundStatement		548:58:15451:15802	292944	0					
ANR	292947	IdentifierDeclStatement	char * pszErr ;	550:1:15478:15490	292944	0	True				
ANR	292948	IdentifierDecl	* pszErr		292944	0					
ANR	292949	IdentifierDeclType	char *		292944	0					
ANR	292950	Identifier	pszErr		292944	1					
ANR	292951	ExpressionStatement	pszErr = strerror ( errnum )	551:1:15493:15518	292944	1	True				
ANR	292952	AssignmentExpression	pszErr = strerror ( errnum )		292944	0		=			
ANR	292953	Identifier	pszErr		292944	0					
ANR	292954	CallExpression	strerror ( errnum )		292944	1					
ANR	292955	Callee	strerror		292944	0					
ANR	292956	Identifier	strerror		292944	0					
ANR	292957	ArgumentList	errnum		292944	1					
ANR	292958	Argument	errnum		292944	0					
ANR	292959	Identifier	errnum		292944	0					
ANR	292960	ExpressionStatement	"snprintf ( buf , buflen , ""%s"" , pszErr )"	552:1:15521:15556	292944	2	True				
ANR	292961	CallExpression	"snprintf ( buf , buflen , ""%s"" , pszErr )"		292944	0					
ANR	292962	Callee	snprintf		292944	0					
ANR	292963	Identifier	snprintf		292944	0					
ANR	292964	ArgumentList	buf		292944	1					
ANR	292965	Argument	buf		292944	0					
ANR	292966	Identifier	buf		292944	0					
ANR	292967	Argument	buflen		292944	1					
ANR	292968	Identifier	buflen		292944	0					
ANR	292969	Argument	"""%s"""		292944	2					
ANR	292970	PrimaryExpression	"""%s"""		292944	0					
ANR	292971	Argument	pszErr		292944	3					
ANR	292972	Identifier	pszErr		292944	0					
ANR	292973	ReturnStatement	return buf ;	564:1:15790:15800	292944	3	True				
ANR	292974	Identifier	buf		292944	0					
ANR	292975	ReturnType	char *		292944	1					
ANR	292976	Identifier	rs_strerror_r		292944	2					
ANR	292977	ParameterList	"int errnum , char * buf , size_t buflen"		292944	3					
ANR	292978	Parameter	int errnum	548:20:15413:15422	292944	0	True				
ANR	292979	ParameterType	int		292944	0					
ANR	292980	Identifier	errnum		292944	1					
ANR	292981	Parameter	char * buf	548:32:15425:15433	292944	1	True				
ANR	292982	ParameterType	char *		292944	0					
ANR	292983	Identifier	buf		292944	1					
ANR	292984	Parameter	size_t buflen	548:43:15436:15448	292944	2	True				
ANR	292985	ParameterType	size_t		292944	0					
ANR	292986	Identifier	buflen		292944	1					
ANR	292987	CFGEntryNode	ENTRY		292944		True				
ANR	292988	CFGExitNode	EXIT		292944		True				
ANR	292989	Symbol	strerror		292944						
ANR	292990	Symbol	buf		292944						
ANR	292991	Symbol	errnum		292944						
ANR	292992	Symbol	pszErr		292944						
ANR	292993	Symbol	buflen		292944						
ANR	292994	Function	decodeSyslogName	569:0:15855:16451							
ANR	292995	FunctionDef	"decodeSyslogName (uchar * name , syslogName_t * codetab)"		292994	0					
ANR	292996	CompoundStatement		570:0:15912:16451	292994	0					
ANR	292997	Statement	register	571:1:15915:15922	292994	0	True				
ANR	292998	IdentifierDeclStatement	syslogName_t * c ;	571:10:15924:15939	292994	1	True				
ANR	292999	IdentifierDecl	* c		292994	0					
ANR	293000	IdentifierDeclType	syslogName_t *		292994	0					
ANR	293001	Identifier	c		292994	1					
ANR	293002	Statement	register	572:1:15942:15949	292994	2	True				
ANR	293003	IdentifierDeclStatement	uchar * p ;	572:10:15951:15959	292994	3	True				
ANR	293004	IdentifierDecl	* p		292994	0					
ANR	293005	IdentifierDeclType	uchar *		292994	0					
ANR	293006	Identifier	p		292994	1					
ANR	293007	IdentifierDeclStatement	uchar buf [ 80 ] ;	573:1:15962:15975	292994	4	True				
ANR	293008	IdentifierDecl	buf [ 80 ]		292994	0					
ANR	293009	IdentifierDeclType	uchar [ 80 ]		292994	0					
ANR	293010	Identifier	buf		292994	1					
ANR	293011	PrimaryExpression	80		292994	2					
ANR	293012	ExpressionStatement	ASSERT ( name != NULL )	575:1:15979:15999	292994	5	True				
ANR	293013	CallExpression	ASSERT ( name != NULL )		292994	0					
ANR	293014	Callee	ASSERT		292994	0					
ANR	293015	Identifier	ASSERT		292994	0					
ANR	293016	ArgumentList	name != NULL		292994	1					
ANR	293017	Argument	name != NULL		292994	0					
ANR	293018	EqualityExpression	name != NULL		292994	0		!=			
ANR	293019	Identifier	name		292994	0					
ANR	293020	Identifier	NULL		292994	1					
ANR	293021	ExpressionStatement	ASSERT ( codetab != NULL )	576:1:16002:16025	292994	6	True				
ANR	293022	CallExpression	ASSERT ( codetab != NULL )		292994	0					
ANR	293023	Callee	ASSERT		292994	0					
ANR	293024	Identifier	ASSERT		292994	0					
ANR	293025	ArgumentList	codetab != NULL		292994	1					
ANR	293026	Argument	codetab != NULL		292994	0					
ANR	293027	EqualityExpression	codetab != NULL		292994	0		!=			
ANR	293028	Identifier	codetab		292994	0					
ANR	293029	Identifier	NULL		292994	1					
ANR	293030	ExpressionStatement	"DBGPRINTF ( ""symbolic name: %s"" , name )"	578:1:16029:16065	292994	7	True				
ANR	293031	CallExpression	"DBGPRINTF ( ""symbolic name: %s"" , name )"		292994	0					
ANR	293032	Callee	DBGPRINTF		292994	0					
ANR	293033	Identifier	DBGPRINTF		292994	0					
ANR	293034	ArgumentList	"""symbolic name: %s"""		292994	1					
ANR	293035	Argument	"""symbolic name: %s"""		292994	0					
ANR	293036	PrimaryExpression	"""symbolic name: %s"""		292994	0					
ANR	293037	Argument	name		292994	1					
ANR	293038	Identifier	name		292994	0					
ANR	293039	IfStatement	if ( isdigit ( ( int ) * name ) )		292994	8					
ANR	293040	Condition	isdigit ( ( int ) * name )	579:4:16071:16090	292994	0	True				
ANR	293041	CallExpression	isdigit ( ( int ) * name )		292994	0					
ANR	293042	Callee	isdigit		292994	0					
ANR	293043	Identifier	isdigit		292994	0					
ANR	293044	ArgumentList	( int ) * name		292994	1					
ANR	293045	Argument	( int ) * name		292994	0					
ANR	293046	CastExpression	( int ) * name		292994	0					
ANR	293047	CastTarget	int		292994	0					
ANR	293048	UnaryOperationExpression	* name		292994	1					
ANR	293049	UnaryOperator	*		292994	0					
ANR	293050	Identifier	name		292994	1					
ANR	293051	CompoundStatement		10:26:180:180	292994	1					
ANR	293052	ExpressionStatement	"DBGPRINTF ( ""\\n"" )"	580:2:16097:16112	292994	0	True				
ANR	293053	CallExpression	"DBGPRINTF ( ""\\n"" )"		292994	0					
ANR	293054	Callee	DBGPRINTF		292994	0					
ANR	293055	Identifier	DBGPRINTF		292994	0					
ANR	293056	ArgumentList	"""\\n"""		292994	1					
ANR	293057	Argument	"""\\n"""		292994	0					
ANR	293058	PrimaryExpression	"""\\n"""		292994	0					
ANR	293059	ReturnStatement	return ( atoi ( ( char * ) name ) ) ;	581:2:16116:16143	292994	1	True				
ANR	293060	CallExpression	atoi ( ( char * ) name )		292994	0					
ANR	293061	Callee	atoi		292994	0					
ANR	293062	Identifier	atoi		292994	0					
ANR	293063	ArgumentList	( char * ) name		292994	1					
ANR	293064	Argument	( char * ) name		292994	0					
ANR	293065	CastExpression	( char * ) name		292994	0					
ANR	293066	CastTarget	char *		292994	0					
ANR	293067	Identifier	name		292994	1					
ANR	293068	ExpressionStatement	"strncpy ( ( char * ) buf , ( char * ) name , 79 )"	583:1:16149:16187	292994	9	True				
ANR	293069	CallExpression	"strncpy ( ( char * ) buf , ( char * ) name , 79 )"		292994	0					
ANR	293070	Callee	strncpy		292994	0					
ANR	293071	Identifier	strncpy		292994	0					
ANR	293072	ArgumentList	( char * ) buf		292994	1					
ANR	293073	Argument	( char * ) buf		292994	0					
ANR	293074	CastExpression	( char * ) buf		292994	0					
ANR	293075	CastTarget	char *		292994	0					
ANR	293076	Identifier	buf		292994	1					
ANR	293077	Argument	( char * ) name		292994	1					
ANR	293078	CastExpression	( char * ) name		292994	0					
ANR	293079	CastTarget	char *		292994	0					
ANR	293080	Identifier	name		292994	1					
ANR	293081	Argument	79		292994	2					
ANR	293082	PrimaryExpression	79		292994	0					
ANR	293083	ForStatement	for ( p = buf ; * p ; p ++ )		292994	10					
ANR	293084	ForInit	p = buf ;	584:5:16194:16201	292994	0	True				
ANR	293085	AssignmentExpression	p = buf		292994	0		=			
ANR	293086	Identifier	p		292994	0					
ANR	293087	Identifier	buf		292994	1					
ANR	293088	Condition	* p	584:14:16203:16204	292994	1	True				
ANR	293089	UnaryOperationExpression	* p		292994	0					
ANR	293090	UnaryOperator	*		292994	0					
ANR	293091	Identifier	p		292994	1					
ANR	293092	PostIncDecOperationExpression	p ++	584:18:16207:16209	292994	2	True				
ANR	293093	Identifier	p		292994	0					
ANR	293094	IncDec	++		292994	1					
ANR	293095	CompoundStatement		15:23:299:299	292994	3					
ANR	293096	IfStatement	if ( isupper ( ( int ) * p ) )		292994	0					
ANR	293097	Condition	isupper ( ( int ) * p )	585:6:16220:16236	292994	0	True				
ANR	293098	CallExpression	isupper ( ( int ) * p )		292994	0					
ANR	293099	Callee	isupper		292994	0					
ANR	293100	Identifier	isupper		292994	0					
ANR	293101	ArgumentList	( int ) * p		292994	1					
ANR	293102	Argument	( int ) * p		292994	0					
ANR	293103	CastExpression	( int ) * p		292994	0					
ANR	293104	CastTarget	int		292994	0					
ANR	293105	UnaryOperationExpression	* p		292994	1					
ANR	293106	UnaryOperator	*		292994	0					
ANR	293107	Identifier	p		292994	1					
ANR	293108	ExpressionStatement	* p = tolower ( ( int ) * p )	586:3:16242:16264	292994	1	True				
ANR	293109	AssignmentExpression	* p = tolower ( ( int ) * p )		292994	0		=			
ANR	293110	UnaryOperationExpression	* p		292994	0					
ANR	293111	UnaryOperator	*		292994	0					
ANR	293112	Identifier	p		292994	1					
ANR	293113	CallExpression	tolower ( ( int ) * p )		292994	1					
ANR	293114	Callee	tolower		292994	0					
ANR	293115	Identifier	tolower		292994	0					
ANR	293116	ArgumentList	( int ) * p		292994	1					
ANR	293117	Argument	( int ) * p		292994	0					
ANR	293118	CastExpression	( int ) * p		292994	0					
ANR	293119	CastTarget	int		292994	0					
ANR	293120	UnaryOperationExpression	* p		292994	1					
ANR	293121	UnaryOperator	*		292994	0					
ANR	293122	Identifier	p		292994	1					
ANR	293123	ForStatement	for ( c = codetab ; c -> c_name ; c ++ )		292994	11					
ANR	293124	ForInit	c = codetab ;	588:5:16274:16285	292994	0	True				
ANR	293125	AssignmentExpression	c = codetab		292994	0		=			
ANR	293126	Identifier	c		292994	0					
ANR	293127	Identifier	codetab		292994	1					
ANR	293128	Condition	c -> c_name	588:18:16287:16295	292994	1	True				
ANR	293129	PtrMemberAccess	c -> c_name		292994	0					
ANR	293130	Identifier	c		292994	0					
ANR	293131	Identifier	c_name		292994	1					
ANR	293132	PostIncDecOperationExpression	c ++	588:29:16298:16300	292994	2	True				
ANR	293133	Identifier	c		292994	0					
ANR	293134	IncDec	++		292994	1					
ANR	293135	CompoundStatement		19:34:390:390	292994	3					
ANR	293136	IfStatement	"if ( ! strcmp ( ( char * ) buf , ( char * ) c -> c_name ) )"		292994	0					
ANR	293137	Condition	"! strcmp ( ( char * ) buf , ( char * ) c -> c_name )"	589:5:16310:16348	292994	0	True				
ANR	293138	UnaryOperationExpression	"! strcmp ( ( char * ) buf , ( char * ) c -> c_name )"		292994	0					
ANR	293139	UnaryOperator	!		292994	0					
ANR	293140	CallExpression	"strcmp ( ( char * ) buf , ( char * ) c -> c_name )"		292994	1					
ANR	293141	Callee	strcmp		292994	0					
ANR	293142	Identifier	strcmp		292994	0					
ANR	293143	ArgumentList	( char * ) buf		292994	1					
ANR	293144	Argument	( char * ) buf		292994	0					
ANR	293145	CastExpression	( char * ) buf		292994	0					
ANR	293146	CastTarget	char *		292994	0					
ANR	293147	Identifier	buf		292994	1					
ANR	293148	Argument	( char * ) c -> c_name		292994	1					
ANR	293149	CastExpression	( char * ) c -> c_name		292994	0					
ANR	293150	CastTarget	char *		292994	0					
ANR	293151	PtrMemberAccess	c -> c_name		292994	1					
ANR	293152	Identifier	c		292994	0					
ANR	293153	Identifier	c_name		292994	1					
ANR	293154	CompoundStatement		20:46:438:438	292994	1					
ANR	293155	ExpressionStatement	"DBGPRINTF ( "" ==> %d\\n"" , c -> c_val )"	590:3:16356:16388	292994	0	True				
ANR	293156	CallExpression	"DBGPRINTF ( "" ==> %d\\n"" , c -> c_val )"		292994	0					
ANR	293157	Callee	DBGPRINTF		292994	0					
ANR	293158	Identifier	DBGPRINTF		292994	0					
ANR	293159	ArgumentList	""" ==> %d\\n"""		292994	1					
ANR	293160	Argument	""" ==> %d\\n"""		292994	0					
ANR	293161	PrimaryExpression	""" ==> %d\\n"""		292994	0					
ANR	293162	Argument	c -> c_val		292994	1					
ANR	293163	PtrMemberAccess	c -> c_val		292994	0					
ANR	293164	Identifier	c		292994	0					
ANR	293165	Identifier	c_val		292994	1					
ANR	293166	ReturnStatement	return ( c -> c_val ) ;	591:3:16393:16410	292994	1	True				
ANR	293167	PtrMemberAccess	c -> c_val		292994	0					
ANR	293168	Identifier	c		292994	0					
ANR	293169	Identifier	c_val		292994	1					
ANR	293170	ExpressionStatement	"DBGPRINTF ( ""\\n"" )"	594:1:16420:16435	292994	12	True				
ANR	293171	CallExpression	"DBGPRINTF ( ""\\n"" )"		292994	0					
ANR	293172	Callee	DBGPRINTF		292994	0					
ANR	293173	Identifier	DBGPRINTF		292994	0					
ANR	293174	ArgumentList	"""\\n"""		292994	1					
ANR	293175	Argument	"""\\n"""		292994	0					
ANR	293176	PrimaryExpression	"""\\n"""		292994	0					
ANR	293177	ReturnStatement	return ( - 1 ) ;	595:1:16438:16449	292994	13	True				
ANR	293178	UnaryOperationExpression	- 1		292994	0					
ANR	293179	UnaryOperator	-		292994	0					
ANR	293180	PrimaryExpression	1		292994	1					
ANR	293181	ReturnType	int		292994	1					
ANR	293182	Identifier	decodeSyslogName		292994	2					
ANR	293183	ParameterList	"uchar * name , syslogName_t * codetab"		292994	3					
ANR	293184	Parameter	uchar * name	569:21:15876:15886	292994	0	True				
ANR	293185	ParameterType	uchar *		292994	0					
ANR	293186	Identifier	name		292994	1					
ANR	293187	Parameter	syslogName_t * codetab	569:34:15889:15909	292994	1	True				
ANR	293188	ParameterType	syslogName_t *		292994	0					
ANR	293189	Identifier	codetab		292994	1					
ANR	293190	CFGEntryNode	ENTRY		292994		True				
ANR	293191	CFGExitNode	EXIT		292994		True				
ANR	293192	Symbol	* name		292994						
ANR	293193	Symbol	atoi		292994						
ANR	293194	Symbol	strcmp		292994						
ANR	293195	Symbol	c		292994						
ANR	293196	Symbol	NULL		292994						
ANR	293197	Symbol	tolower		292994						
ANR	293198	Symbol	isupper		292994						
ANR	293199	Symbol	codetab		292994						
ANR	293200	Symbol	c -> c_name		292994						
ANR	293201	Symbol	* c		292994						
ANR	293202	Symbol	p		292994						
ANR	293203	Symbol	buf		292994						
ANR	293204	Symbol	c -> c_val		292994						
ANR	293205	Symbol	name		292994						
ANR	293206	Symbol	* p		292994						
ANR	293207	Symbol	isdigit		292994						
ANR	293208	Function	getSubString	619:0:17320:18066							
ANR	293209	FunctionDef	"getSubString (uchar * * ppSrc , char * pDst , size_t DstSize , char cSep)"		293208	0					
ANR	293210	CompoundStatement		620:0:17392:18066	293208	0					
ANR	293211	IdentifierDeclStatement	uchar * pSrc = * ppSrc ;	621:1:17395:17415	293208	0	True				
ANR	293212	IdentifierDecl	* pSrc = * ppSrc		293208	0					
ANR	293213	IdentifierDeclType	uchar *		293208	0					
ANR	293214	Identifier	pSrc		293208	1					
ANR	293215	AssignmentExpression	* pSrc = * ppSrc		293208	2		=			
ANR	293216	Identifier	pSrc		293208	0					
ANR	293217	UnaryOperationExpression	* ppSrc		293208	1					
ANR	293218	UnaryOperator	*		293208	0					
ANR	293219	Identifier	ppSrc		293208	1					
ANR	293220	IdentifierDeclStatement	int iErr = 0 ;	622:1:17418:17430	293208	1	True				
ANR	293221	IdentifierDecl	iErr = 0		293208	0					
ANR	293222	IdentifierDeclType	int		293208	0					
ANR	293223	Identifier	iErr		293208	1					
ANR	293224	AssignmentExpression	iErr = 0		293208	2		=			
ANR	293225	Identifier	iErr		293208	0					
ANR	293226	PrimaryExpression	0		293208	1					
ANR	293227	WhileStatement	while ( ( cSep == ' ' ? ! isspace ( * pSrc ) : * pSrc != cSep ) && * pSrc != '\\n' && * pSrc != '\\0' && DstSize > 1 )		293208	2					
ANR	293228	Condition	( cSep == ' ' ? ! isspace ( * pSrc ) : * pSrc != cSep ) && * pSrc != '\\n' && * pSrc != '\\0' && DstSize > 1	623:7:17470:17563	293208	0	True				
ANR	293229	AndExpression	( cSep == ' ' ? ! isspace ( * pSrc ) : * pSrc != cSep ) && * pSrc != '\\n' && * pSrc != '\\0' && DstSize > 1		293208	0		&&			
ANR	293230	ConditionalExpression	cSep == ' ' ? ! isspace ( * pSrc ) : * pSrc != cSep		293208	0					
ANR	293231	Condition	cSep == ' '		293208	0					
ANR	293232	EqualityExpression	cSep == ' '		293208	0		==			
ANR	293233	Identifier	cSep		293208	0					
ANR	293234	PrimaryExpression	' '		293208	1					
ANR	293235	UnaryOperationExpression	! isspace ( * pSrc )		293208	1					
ANR	293236	UnaryOperator	!		293208	0					
ANR	293237	CallExpression	isspace ( * pSrc )		293208	1					
ANR	293238	Callee	isspace		293208	0					
ANR	293239	Identifier	isspace		293208	0					
ANR	293240	ArgumentList	* pSrc		293208	1					
ANR	293241	Argument	* pSrc		293208	0					
ANR	293242	UnaryOperationExpression	* pSrc		293208	0					
ANR	293243	UnaryOperator	*		293208	0					
ANR	293244	Identifier	pSrc		293208	1					
ANR	293245	EqualityExpression	* pSrc != cSep		293208	2		!=			
ANR	293246	UnaryOperationExpression	* pSrc		293208	0					
ANR	293247	UnaryOperator	*		293208	0					
ANR	293248	Identifier	pSrc		293208	1					
ANR	293249	Identifier	cSep		293208	1					
ANR	293250	AndExpression	* pSrc != '\\n' && * pSrc != '\\0' && DstSize > 1		293208	1		&&			
ANR	293251	EqualityExpression	* pSrc != '\\n'		293208	0		!=			
ANR	293252	UnaryOperationExpression	* pSrc		293208	0					
ANR	293253	UnaryOperator	*		293208	0					
ANR	293254	Identifier	pSrc		293208	1					
ANR	293255	PrimaryExpression	'\\n'		293208	1					
ANR	293256	AndExpression	* pSrc != '\\0' && DstSize > 1		293208	1		&&			
ANR	293257	EqualityExpression	* pSrc != '\\0'		293208	0		!=			
ANR	293258	UnaryOperationExpression	* pSrc		293208	0					
ANR	293259	UnaryOperator	*		293208	0					
ANR	293260	Identifier	pSrc		293208	1					
ANR	293261	PrimaryExpression	'\\0'		293208	1					
ANR	293262	RelationalExpression	DstSize > 1		293208	1		>			
ANR	293263	Identifier	DstSize		293208	0					
ANR	293264	PrimaryExpression	1		293208	1					
ANR	293265	CompoundStatement		4:103:173:173	293208	1					
ANR	293266	ExpressionStatement	* pDst ++ = * ( pSrc ) ++	624:2:17570:17589	293208	0	True				
ANR	293267	AssignmentExpression	* pDst ++ = * ( pSrc ) ++		293208	0		=			
ANR	293268	UnaryOperationExpression	* pDst ++		293208	0					
ANR	293269	UnaryOperator	*		293208	0					
ANR	293270	PostIncDecOperationExpression	pDst ++		293208	1					
ANR	293271	Identifier	pDst		293208	0					
ANR	293272	IncDec	++		293208	1					
ANR	293273	UnaryOperationExpression	* ( pSrc ) ++		293208	1					
ANR	293274	UnaryOperator	*		293208	0					
ANR	293275	PostIncDecOperationExpression	( pSrc ) ++		293208	1					
ANR	293276	Identifier	pSrc		293208	0					
ANR	293277	IncDec	++		293208	1					
ANR	293278	ExpressionStatement	DstSize --	625:2:17593:17602	293208	1	True				
ANR	293279	PostIncDecOperationExpression	DstSize --		293208	0					
ANR	293280	Identifier	DstSize		293208	0					
ANR	293281	IncDec	--		293208	1					
ANR	293282	IfStatement	if ( ( cSep == ' ' ? ! isspace ( * pSrc ) : * pSrc != cSep ) && * pSrc != '\\n' && * pSrc != '\\0' )		293208	3					
ANR	293283	Condition	( cSep == ' ' ? ! isspace ( * pSrc ) : * pSrc != cSep ) && * pSrc != '\\n' && * pSrc != '\\0'	628:5:17656:17736	293208	0	True				
ANR	293284	AndExpression	( cSep == ' ' ? ! isspace ( * pSrc ) : * pSrc != cSep ) && * pSrc != '\\n' && * pSrc != '\\0'		293208	0		&&			
ANR	293285	ConditionalExpression	cSep == ' ' ? ! isspace ( * pSrc ) : * pSrc != cSep		293208	0					
ANR	293286	Condition	cSep == ' '		293208	0					
ANR	293287	EqualityExpression	cSep == ' '		293208	0		==			
ANR	293288	Identifier	cSep		293208	0					
ANR	293289	PrimaryExpression	' '		293208	1					
ANR	293290	UnaryOperationExpression	! isspace ( * pSrc )		293208	1					
ANR	293291	UnaryOperator	!		293208	0					
ANR	293292	CallExpression	isspace ( * pSrc )		293208	1					
ANR	293293	Callee	isspace		293208	0					
ANR	293294	Identifier	isspace		293208	0					
ANR	293295	ArgumentList	* pSrc		293208	1					
ANR	293296	Argument	* pSrc		293208	0					
ANR	293297	UnaryOperationExpression	* pSrc		293208	0					
ANR	293298	UnaryOperator	*		293208	0					
ANR	293299	Identifier	pSrc		293208	1					
ANR	293300	EqualityExpression	* pSrc != cSep		293208	2		!=			
ANR	293301	UnaryOperationExpression	* pSrc		293208	0					
ANR	293302	UnaryOperator	*		293208	0					
ANR	293303	Identifier	pSrc		293208	1					
ANR	293304	Identifier	cSep		293208	1					
ANR	293305	AndExpression	* pSrc != '\\n' && * pSrc != '\\0'		293208	1		&&			
ANR	293306	EqualityExpression	* pSrc != '\\n'		293208	0		!=			
ANR	293307	UnaryOperationExpression	* pSrc		293208	0					
ANR	293308	UnaryOperator	*		293208	0					
ANR	293309	Identifier	pSrc		293208	1					
ANR	293310	PrimaryExpression	'\\n'		293208	1					
ANR	293311	EqualityExpression	* pSrc != '\\0'		293208	1		!=			
ANR	293312	UnaryOperationExpression	* pSrc		293208	0					
ANR	293313	UnaryOperator	*		293208	0					
ANR	293314	Identifier	pSrc		293208	1					
ANR	293315	PrimaryExpression	'\\0'		293208	1					
ANR	293316	CompoundStatement		9:88:346:346	293208	1					
ANR	293317	ExpressionStatement	"dbgprintf ( ""in getSubString, error Src buffer > Dst buffer\\n"" )"	629:2:17744:17805	293208	0	True				
ANR	293318	CallExpression	"dbgprintf ( ""in getSubString, error Src buffer > Dst buffer\\n"" )"		293208	0					
ANR	293319	Callee	dbgprintf		293208	0					
ANR	293320	Identifier	dbgprintf		293208	0					
ANR	293321	ArgumentList	"""in getSubString, error Src buffer > Dst buffer\\n"""		293208	1					
ANR	293322	Argument	"""in getSubString, error Src buffer > Dst buffer\\n"""		293208	0					
ANR	293323	PrimaryExpression	"""in getSubString, error Src buffer > Dst buffer\\n"""		293208	0					
ANR	293324	ExpressionStatement	iErr = 1	630:2:17809:17817	293208	1	True				
ANR	293325	AssignmentExpression	iErr = 1		293208	0		=			
ANR	293326	Identifier	iErr		293208	0					
ANR	293327	PrimaryExpression	1		293208	1					
ANR	293328	IfStatement	if ( * pSrc == '\\0' || * pSrc == '\\n' )		293208	4					
ANR	293329	Condition	* pSrc == '\\0' || * pSrc == '\\n'	632:5:17828:17857	293208	0	True				
ANR	293330	OrExpression	* pSrc == '\\0' || * pSrc == '\\n'		293208	0		||			
ANR	293331	EqualityExpression	* pSrc == '\\0'		293208	0		==			
ANR	293332	UnaryOperationExpression	* pSrc		293208	0					
ANR	293333	UnaryOperator	*		293208	0					
ANR	293334	Identifier	pSrc		293208	1					
ANR	293335	PrimaryExpression	'\\0'		293208	1					
ANR	293336	EqualityExpression	* pSrc == '\\n'		293208	1		==			
ANR	293337	UnaryOperationExpression	* pSrc		293208	0					
ANR	293338	UnaryOperator	*		293208	0					
ANR	293339	Identifier	pSrc		293208	1					
ANR	293340	PrimaryExpression	'\\n'		293208	1					
ANR	293341	ExpressionStatement	* ppSrc = pSrc	636:2:17997:18010	293208	1	True				
ANR	293342	AssignmentExpression	* ppSrc = pSrc		293208	0		=			
ANR	293343	UnaryOperationExpression	* ppSrc		293208	0					
ANR	293344	UnaryOperator	*		293208	0					
ANR	293345	Identifier	ppSrc		293208	1					
ANR	293346	Identifier	pSrc		293208	1					
ANR	293347	ElseStatement	else		293208	0					
ANR	293348	ExpressionStatement	* ppSrc = pSrc + 1	638:2:18020:18035	293208	0	True				
ANR	293349	AssignmentExpression	* ppSrc = pSrc + 1		293208	0		=			
ANR	293350	UnaryOperationExpression	* ppSrc		293208	0					
ANR	293351	UnaryOperator	*		293208	0					
ANR	293352	Identifier	ppSrc		293208	1					
ANR	293353	AdditiveExpression	pSrc + 1		293208	1		+			
ANR	293354	Identifier	pSrc		293208	0					
ANR	293355	PrimaryExpression	1		293208	1					
ANR	293356	ExpressionStatement	* pDst = '\\0'	639:1:18038:18050	293208	5	True				
ANR	293357	AssignmentExpression	* pDst = '\\0'		293208	0		=			
ANR	293358	UnaryOperationExpression	* pDst		293208	0					
ANR	293359	UnaryOperator	*		293208	0					
ANR	293360	Identifier	pDst		293208	1					
ANR	293361	PrimaryExpression	'\\0'		293208	1					
ANR	293362	ReturnStatement	return iErr ;	640:1:18053:18064	293208	6	True				
ANR	293363	Identifier	iErr		293208	0					
ANR	293364	ReturnType	int		293208	1					
ANR	293365	Identifier	getSubString		293208	2					
ANR	293366	ParameterList	"uchar * * ppSrc , char * pDst , size_t DstSize , char cSep"		293208	3					
ANR	293367	Parameter	uchar * * ppSrc	619:17:17337:17349	293208	0	True				
ANR	293368	ParameterType	uchar * *		293208	0					
ANR	293369	Identifier	ppSrc		293208	1					
ANR	293370	Parameter	char * pDst	619:33:17353:17362	293208	1	True				
ANR	293371	ParameterType	char *		293208	0					
ANR	293372	Identifier	pDst		293208	1					
ANR	293373	Parameter	size_t DstSize	619:45:17365:17378	293208	2	True				
ANR	293374	ParameterType	size_t		293208	0					
ANR	293375	Identifier	DstSize		293208	1					
ANR	293376	Parameter	char cSep	619:61:17381:17389	293208	3	True				
ANR	293377	ParameterType	char		293208	0					
ANR	293378	Identifier	cSep		293208	1					
ANR	293379	CFGEntryNode	ENTRY		293208		True				
ANR	293380	CFGExitNode	EXIT		293208		True				
ANR	293381	Symbol	pSrc		293208						
ANR	293382	Symbol	* ppSrc		293208						
ANR	293383	Symbol	cSep		293208						
ANR	293384	Symbol	pDst		293208						
ANR	293385	Symbol	* pSrc		293208						
ANR	293386	Symbol	isspace		293208						
ANR	293387	Symbol	* pDst ++		293208						
ANR	293388	Symbol	DstSize		293208						
ANR	293389	Symbol	* ( pSrc ) ++		293208						
ANR	293390	Symbol	* pDst		293208						
ANR	293391	Symbol	ppSrc		293208						
ANR	293392	Symbol	iErr		293208						
ANR	293393	Function	getFileSize	648:0:18216:18628							
ANR	293394	FunctionDef	"getFileSize (uchar * pszName , off_t * pSize)"		293393	0					
ANR	293395	CompoundStatement		650:0:18267:18628	293393	0					
ANR	293396	IdentifierDeclStatement	int ret ;	651:1:18270:18277	293393	0	True				
ANR	293397	IdentifierDecl	ret		293393	0					
ANR	293398	IdentifierDeclType	int		293393	0					
ANR	293399	Identifier	ret		293393	1					
ANR	293400	IdentifierDeclStatement	struct stat statBuf ;	652:1:18280:18299	293393	1	True				
ANR	293401	IdentifierDecl	statBuf		293393	0					
ANR	293402	IdentifierDeclType	struct stat		293393	0					
ANR	293403	Identifier	statBuf		293393	1					
ANR	293404	ExpressionStatement	DEFiRet	653:1:18302:18309	293393	2	True				
ANR	293405	Identifier	DEFiRet		293393	0					
ANR	293406	ExpressionStatement	"ret = stat ( ( char * ) pszName , & statBuf )"	655:1:18313:18350	293393	3	True				
ANR	293407	AssignmentExpression	"ret = stat ( ( char * ) pszName , & statBuf )"		293393	0		=			
ANR	293408	Identifier	ret		293393	0					
ANR	293409	CallExpression	"stat ( ( char * ) pszName , & statBuf )"		293393	1					
ANR	293410	Callee	stat		293393	0					
ANR	293411	Identifier	stat		293393	0					
ANR	293412	ArgumentList	( char * ) pszName		293393	1					
ANR	293413	Argument	( char * ) pszName		293393	0					
ANR	293414	CastExpression	( char * ) pszName		293393	0					
ANR	293415	CastTarget	char *		293393	0					
ANR	293416	Identifier	pszName		293393	1					
ANR	293417	Argument	& statBuf		293393	1					
ANR	293418	UnaryOperationExpression	& statBuf		293393	0					
ANR	293419	UnaryOperator	&		293393	0					
ANR	293420	Identifier	statBuf		293393	1					
ANR	293421	IfStatement	if ( ret == - 1 )		293393	4					
ANR	293422	Condition	ret == - 1	656:4:18356:18364	293393	0	True				
ANR	293423	EqualityExpression	ret == - 1		293393	0		==			
ANR	293424	Identifier	ret		293393	0					
ANR	293425	UnaryOperationExpression	- 1		293393	1					
ANR	293426	UnaryOperator	-		293393	0					
ANR	293427	PrimaryExpression	1		293393	1					
ANR	293428	CompoundStatement		7:15:99:99	293393	1					
ANR	293429	SwitchStatement	switch ( errno )		293393	0					
ANR	293430	Condition	errno	657:9:18378:18382	293393	0	True				
ANR	293431	Identifier	errno		293393	0					
ANR	293432	CompoundStatement		8:16:117:117	293393	1					
ANR	293433	Label	case EACCES :	658:3:18390:18401	293393	0	True				
ANR	293434	Identifier	EACCES		293393	0					
ANR	293435	ExpressionStatement	ABORT_FINALIZE ( RS_RET_NO_FILE_ACCESS )	658:16:18403:18440	293393	1	True				
ANR	293436	CallExpression	ABORT_FINALIZE ( RS_RET_NO_FILE_ACCESS )		293393	0					
ANR	293437	Callee	ABORT_FINALIZE		293393	0					
ANR	293438	Identifier	ABORT_FINALIZE		293393	0					
ANR	293439	ArgumentList	RS_RET_NO_FILE_ACCESS		293393	1					
ANR	293440	Argument	RS_RET_NO_FILE_ACCESS		293393	0					
ANR	293441	Identifier	RS_RET_NO_FILE_ACCESS		293393	0					
ANR	293442	Label	case ENOTDIR :	659:3:18445:18457	293393	2	True				
ANR	293443	Identifier	ENOTDIR		293393	0					
ANR	293444	Label	case ENOENT :	660:3:18462:18473	293393	3	True				
ANR	293445	Identifier	ENOENT		293393	0					
ANR	293446	ExpressionStatement	ABORT_FINALIZE ( RS_RET_FILE_NOT_FOUND )	660:17:18476:18513	293393	4	True				
ANR	293447	CallExpression	ABORT_FINALIZE ( RS_RET_FILE_NOT_FOUND )		293393	0					
ANR	293448	Callee	ABORT_FINALIZE		293393	0					
ANR	293449	Identifier	ABORT_FINALIZE		293393	0					
ANR	293450	ArgumentList	RS_RET_FILE_NOT_FOUND		293393	1					
ANR	293451	Argument	RS_RET_FILE_NOT_FOUND		293393	0					
ANR	293452	Identifier	RS_RET_FILE_NOT_FOUND		293393	0					
ANR	293453	Label	default :	661:3:18518:18525	293393	5	True				
ANR	293454	Identifier	default		293393	0					
ANR	293455	ExpressionStatement	ABORT_FINALIZE ( RS_RET_FILE_NO_STAT )	661:17:18532:18567	293393	6	True				
ANR	293456	CallExpression	ABORT_FINALIZE ( RS_RET_FILE_NO_STAT )		293393	0					
ANR	293457	Callee	ABORT_FINALIZE		293393	0					
ANR	293458	Identifier	ABORT_FINALIZE		293393	0					
ANR	293459	ArgumentList	RS_RET_FILE_NO_STAT		293393	1					
ANR	293460	Argument	RS_RET_FILE_NO_STAT		293393	0					
ANR	293461	Identifier	RS_RET_FILE_NO_STAT		293393	0					
ANR	293462	ExpressionStatement	* pSize = statBuf . st_size	665:1:18578:18602	293393	5	True				
ANR	293463	AssignmentExpression	* pSize = statBuf . st_size		293393	0		=			
ANR	293464	UnaryOperationExpression	* pSize		293393	0					
ANR	293465	UnaryOperator	*		293393	0					
ANR	293466	Identifier	pSize		293393	1					
ANR	293467	MemberAccess	statBuf . st_size		293393	1					
ANR	293468	Identifier	statBuf		293393	0					
ANR	293469	Identifier	st_size		293393	1					
ANR	293470	Label	finalize_it :	667:0:18605:18616	293393	6	True				
ANR	293471	Identifier	finalize_it		293393	0					
ANR	293472	ExpressionStatement	RETiRet	668:1:18619:18626	293393	7	True				
ANR	293473	Identifier	RETiRet		293393	0					
ANR	293474	ReturnType	rsRetVal		293393	1					
ANR	293475	Identifier	getFileSize		293393	2					
ANR	293476	ParameterList	"uchar * pszName , off_t * pSize"		293393	3					
ANR	293477	Parameter	uchar * pszName	649:12:18237:18250	293393	0	True				
ANR	293478	ParameterType	uchar *		293393	0					
ANR	293479	Identifier	pszName		293393	1					
ANR	293480	Parameter	off_t * pSize	649:28:18253:18264	293393	1	True				
ANR	293481	ParameterType	off_t *		293393	0					
ANR	293482	Identifier	pSize		293393	1					
ANR	293483	CFGEntryNode	ENTRY		293393		True				
ANR	293484	CFGExitNode	EXIT		293393		True				
ANR	293485	Symbol	pSize		293393						
ANR	293486	Symbol	ret		293393						
ANR	293487	Symbol	RS_RET_FILE_NO_STAT		293393						
ANR	293488	Symbol	pszName		293393						
ANR	293489	Symbol	stat		293393						
ANR	293490	Symbol	errno		293393						
ANR	293491	Symbol	statBuf		293393						
ANR	293492	Symbol	RS_RET_NO_FILE_ACCESS		293393						
ANR	293493	Symbol	* pSize		293393						
ANR	293494	Symbol	& statBuf		293393						
ANR	293495	Symbol	statBuf . st_size		293393						
ANR	293496	Symbol	RS_RET_FILE_NOT_FOUND		293393						
ANR	293497	Function	containsGlobWildcard	674:0:18766:19234							
ANR	293498	FunctionDef	containsGlobWildcard (char * str)		293497	0					
ANR	293499	CompoundStatement		676:0:18802:19234	293497	0					
ANR	293500	IdentifierDeclStatement	char * p ;	677:1:18805:18812	293497	0	True				
ANR	293501	IdentifierDecl	* p		293497	0					
ANR	293502	IdentifierDeclType	char *		293497	0					
ANR	293503	Identifier	p		293497	1					
ANR	293504	IfStatement	if ( ! str )		293497	1					
ANR	293505	Condition	! str	678:4:18818:18821	293497	0	True				
ANR	293506	UnaryOperationExpression	! str		293497	0					
ANR	293507	UnaryOperator	!		293497	0					
ANR	293508	Identifier	str		293497	1					
ANR	293509	CompoundStatement		3:10:21:21	293497	1					
ANR	293510	ReturnStatement	return 0 ;	679:2:18828:18836	293497	0	True				
ANR	293511	PrimaryExpression	0		293497	0					
ANR	293512	ForStatement	for ( p = str ; * p != '\\0' ; p ++ )		293497	2					
ANR	293513	ForInit	p = str ;	685:5:19080:19087	293497	0	True				
ANR	293514	AssignmentExpression	p = str		293497	0		=			
ANR	293515	Identifier	p		293497	0					
ANR	293516	Identifier	str		293497	1					
ANR	293517	Condition	* p != '\\0'	685:14:19089:19098	293497	1	True				
ANR	293518	EqualityExpression	* p != '\\0'		293497	0		!=			
ANR	293519	UnaryOperationExpression	* p		293497	0					
ANR	293520	UnaryOperator	*		293497	0					
ANR	293521	Identifier	p		293497	1					
ANR	293522	PrimaryExpression	'\\0'		293497	1					
ANR	293523	PostIncDecOperationExpression	p ++	685:26:19101:19103	293497	2	True				
ANR	293524	Identifier	p		293497	0					
ANR	293525	IncDec	++		293497	1					
ANR	293526	CompoundStatement		10:31:303:303	293497	3					
ANR	293527	IfStatement	if ( ( * p == '?' || * p == '*' || * p == '[' || * p == '{' ) && ( p == str || * ( p - 1 ) != '\\\\' ) )		293497	0					
ANR	293528	Condition	( * p == '?' || * p == '*' || * p == '[' || * p == '{' ) && ( p == str || * ( p - 1 ) != '\\\\' )	686:5:19113:19198	293497	0	True				
ANR	293529	AndExpression	( * p == '?' || * p == '*' || * p == '[' || * p == '{' ) && ( p == str || * ( p - 1 ) != '\\\\' )		293497	0		&&			
ANR	293530	OrExpression	* p == '?' || * p == '*' || * p == '[' || * p == '{'		293497	0		||			
ANR	293531	EqualityExpression	* p == '?'		293497	0		==			
ANR	293532	UnaryOperationExpression	* p		293497	0					
ANR	293533	UnaryOperator	*		293497	0					
ANR	293534	Identifier	p		293497	1					
ANR	293535	PrimaryExpression	'?'		293497	1					
ANR	293536	OrExpression	* p == '*' || * p == '[' || * p == '{'		293497	1		||			
ANR	293537	EqualityExpression	* p == '*'		293497	0		==			
ANR	293538	UnaryOperationExpression	* p		293497	0					
ANR	293539	UnaryOperator	*		293497	0					
ANR	293540	Identifier	p		293497	1					
ANR	293541	PrimaryExpression	'*'		293497	1					
ANR	293542	OrExpression	* p == '[' || * p == '{'		293497	1		||			
ANR	293543	EqualityExpression	* p == '['		293497	0		==			
ANR	293544	UnaryOperationExpression	* p		293497	0					
ANR	293545	UnaryOperator	*		293497	0					
ANR	293546	Identifier	p		293497	1					
ANR	293547	PrimaryExpression	'['		293497	1					
ANR	293548	EqualityExpression	* p == '{'		293497	1		==			
ANR	293549	UnaryOperationExpression	* p		293497	0					
ANR	293550	UnaryOperator	*		293497	0					
ANR	293551	Identifier	p		293497	1					
ANR	293552	PrimaryExpression	'{'		293497	1					
ANR	293553	OrExpression	p == str || * ( p - 1 ) != '\\\\'		293497	1		||			
ANR	293554	EqualityExpression	p == str		293497	0		==			
ANR	293555	Identifier	p		293497	0					
ANR	293556	Identifier	str		293497	1					
ANR	293557	EqualityExpression	* ( p - 1 ) != '\\\\'		293497	1		!=			
ANR	293558	UnaryOperationExpression	* ( p - 1 )		293497	0					
ANR	293559	UnaryOperator	*		293497	0					
ANR	293560	AdditiveExpression	p - 1		293497	1		-			
ANR	293561	Identifier	p		293497	0					
ANR	293562	PrimaryExpression	1		293497	1					
ANR	293563	PrimaryExpression	'\\\\'		293497	1					
ANR	293564	CompoundStatement		12:34:398:398	293497	1					
ANR	293565	ReturnStatement	return 1 ;	688:3:19206:19214	293497	0	True				
ANR	293566	PrimaryExpression	1		293497	0					
ANR	293567	ReturnStatement	return 0 ;	691:1:19224:19232	293497	3	True				
ANR	293568	PrimaryExpression	0		293497	0					
ANR	293569	ReturnType	int		293497	1					
ANR	293570	Identifier	containsGlobWildcard		293497	2					
ANR	293571	ParameterList	char * str		293497	3					
ANR	293572	Parameter	char * str	675:21:18791:18799	293497	0	True				
ANR	293573	ParameterType	char *		293497	0					
ANR	293574	Identifier	str		293497	1					
ANR	293575	CFGEntryNode	ENTRY		293497		True				
ANR	293576	CFGExitNode	EXIT		293497		True				
ANR	293577	Symbol	str		293497						
ANR	293578	Symbol	p		293497						
ANR	293579	Symbol	* ( p - 1 )		293497						
ANR	293580	Symbol	* p		293497						
ANR	293581	Function	seedRandomNumber	694:0:19237:19381							
ANR	293582	FunctionDef	seedRandomNumber ()		293581	0					
ANR	293583	CompoundStatement		695:0:19265:19381	293581	0					
ANR	293584	IdentifierDeclStatement	struct timespec t ;	696:1:19268:19285	293581	0	True				
ANR	293585	IdentifierDecl	t		293581	0					
ANR	293586	IdentifierDeclType	struct timespec		293581	0					
ANR	293587	Identifier	t		293581	1					
ANR	293588	ExpressionStatement	"timeoutComp ( & t , 0 )"	697:1:19288:19306	293581	1	True				
ANR	293589	CallExpression	"timeoutComp ( & t , 0 )"		293581	0					
ANR	293590	Callee	timeoutComp		293581	0					
ANR	293591	Identifier	timeoutComp		293581	0					
ANR	293592	ArgumentList	& t		293581	1					
ANR	293593	Argument	& t		293581	0					
ANR	293594	UnaryOperationExpression	& t		293581	0					
ANR	293595	UnaryOperator	&		293581	0					
ANR	293596	Identifier	t		293581	1					
ANR	293597	Argument	0		293581	1					
ANR	293598	PrimaryExpression	0		293581	0					
ANR	293599	IdentifierDeclStatement	long long x = t . tv_sec * 3 + t . tv_nsec * 2 ;	698:1:19309:19351	293581	2	True				
ANR	293600	IdentifierDecl	x = t . tv_sec * 3 + t . tv_nsec * 2		293581	0					
ANR	293601	IdentifierDeclType	long long		293581	0					
ANR	293602	Identifier	x		293581	1					
ANR	293603	AssignmentExpression	x = t . tv_sec * 3 + t . tv_nsec * 2		293581	2		=			
ANR	293604	Identifier	x		293581	0					
ANR	293605	AdditiveExpression	t . tv_sec * 3 + t . tv_nsec * 2		293581	1		+			
ANR	293606	MultiplicativeExpression	t . tv_sec * 3		293581	0		*			
ANR	293607	MemberAccess	t . tv_sec		293581	0					
ANR	293608	Identifier	t		293581	0					
ANR	293609	Identifier	tv_sec		293581	1					
ANR	293610	PrimaryExpression	3		293581	1					
ANR	293611	MultiplicativeExpression	t . tv_nsec * 2		293581	1		*			
ANR	293612	MemberAccess	t . tv_nsec		293581	0					
ANR	293613	Identifier	t		293581	0					
ANR	293614	Identifier	tv_nsec		293581	1					
ANR	293615	PrimaryExpression	2		293581	1					
ANR	293616	ExpressionStatement	srandom ( ( unsigned int ) x )	699:1:19354:19379	293581	3	True				
ANR	293617	CallExpression	srandom ( ( unsigned int ) x )		293581	0					
ANR	293618	Callee	srandom		293581	0					
ANR	293619	Identifier	srandom		293581	0					
ANR	293620	ArgumentList	( unsigned int ) x		293581	1					
ANR	293621	Argument	( unsigned int ) x		293581	0					
ANR	293622	CastExpression	( unsigned int ) x		293581	0					
ANR	293623	CastTarget	unsigned int		293581	0					
ANR	293624	Identifier	x		293581	1					
ANR	293625	ReturnType	void		293581	1					
ANR	293626	Identifier	seedRandomNumber		293581	2					
ANR	293627	ParameterList			293581	3					
ANR	293628	CFGEntryNode	ENTRY		293581		True				
ANR	293629	CFGExitNode	EXIT		293581		True				
ANR	293630	Symbol	t . tv_sec		293581						
ANR	293631	Symbol	t		293581						
ANR	293632	Symbol	x		293581						
ANR	293633	Symbol	& t		293581						
ANR	293634	Symbol	t . tv_nsec		293581						
ANR	293635	Function	randomNumber	702:0:19384:19432							
ANR	293636	FunctionDef	randomNumber ()		293635	0					
ANR	293637	CompoundStatement		703:0:19412:19432	293635	0					
ANR	293638	ReturnStatement	return random ( ) ;	704:1:19415:19430	293635	0	True				
ANR	293639	CallExpression	random ( )		293635	0					
ANR	293640	Callee	random		293635	0					
ANR	293641	Identifier	random		293635	0					
ANR	293642	ArgumentList			293635	1					
ANR	293643	ReturnType	long int		293635	1					
ANR	293644	Identifier	randomNumber		293635	2					
ANR	293645	ParameterList			293635	3					
ANR	293646	CFGEntryNode	ENTRY		293635		True				
ANR	293647	CFGExitNode	EXIT		293635		True				
ANR	293648	Symbol	random		293635						
