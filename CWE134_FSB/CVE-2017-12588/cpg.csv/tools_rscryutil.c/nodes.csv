command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	356173	File	data/converged/CVE-2017-12588_rsyslog/tools_rscryutil.c								
ANR	356174	ClassDef	<unnamed>	40:7:1091:1146							
ANR	356175	DeclStmt									
ANR	356176	Decl									mode
ANR	356177	DeclStmt									
ANR	356178	Decl							int	int	verbose
ANR	356179	DeclStmt									
ANR	356180	Decl							gcry_cipher_hd_t	gcry_cipher_hd_t	gcry_chd
ANR	356181	DeclStmt									
ANR	356182	Decl							size_t	size_t	blkLength
ANR	356183	DeclStmt									
ANR	356184	Decl							char	char *	keyfile
ANR	356185	DeclStmt									
ANR	356186	Decl							char	char *	keyprog
ANR	356187	DeclStmt									
ANR	356188	Decl							int	int	randomKeyLen
ANR	356189	DeclStmt									
ANR	356190	Decl							char	char *	cry_key
ANR	356191	DeclStmt									
ANR	356192	Decl							unsigned	unsigned	cry_keylen
ANR	356193	DeclStmt									
ANR	356194	Decl							int	int	cry_algo
ANR	356195	DeclStmt									
ANR	356196	Decl							int	int	cry_mode
ANR	356197	DeclStmt									
ANR	356198	Decl							int	int	optionForce
ANR	356199	DeclStmt									
ANR	356200	Decl							int	int	Debug
ANR	356201	DeclStmt									
ANR	356202	Decl							void	"void ( int a __attribute__ ( ( unused ) ) , int b __attribute__ ( ( unused ) ) )"	srSleep
ANR	356203	Function	srSleep	64:0:1942:2018							
ANR	356204	FunctionDef	"srSleep (int a __attribute__ ( ( unused ) ) , int b __attribute__ ( ( unused ) ))"		356203	0					
ANR	356205	CompoundStatement		64:75:2017:2018	356203	0					
ANR	356206	ReturnType	void		356203	1					
ANR	356207	Identifier	srSleep		356203	2					
ANR	356208	ParameterList	"int a __attribute__ ( ( unused ) ) , int b __attribute__ ( ( unused ) )"		356203	3					
ANR	356209	Parameter	int a __attribute__ ( ( unused ) )	64:13:1955:1983	356203	0	True				
ANR	356210	ParameterType	((int a __attribute__))		356203	0					
ANR	356211	Identifier	unused		356203	1					
ANR	356212	Parameter	int b __attribute__ ( ( unused ) )	64:44:1986:2014	356203	1	True				
ANR	356213	ParameterType	((int b __attribute__))		356203	0					
ANR	356214	Identifier	unused		356203	1					
ANR	356215	CFGEntryNode	ENTRY		356203		True				
ANR	356216	CFGExitNode	EXIT		356203		True				
ANR	356217	Symbol	unused		356203						
ANR	356218	Function	eiGetRecord	70:0:2179:2792							
ANR	356219	FunctionDef	"eiGetRecord (FILE * eifp , char * rectype , char * value)"		356218	0					
ANR	356220	CompoundStatement		72:0:2242:2792	356218	0					
ANR	356221	IdentifierDeclStatement	int r ;	73:1:2245:2250	356218	0	True				
ANR	356222	IdentifierDecl	r		356218	0					
ANR	356223	IdentifierDeclType	int		356218	0					
ANR	356224	Identifier	r		356218	1					
ANR	356225	IdentifierDeclStatement	"unsigned short i , j ;"	74:1:2253:2272	356218	1	True				
ANR	356226	IdentifierDecl	i		356218	0					
ANR	356227	IdentifierDeclType	unsigned short		356218	0					
ANR	356228	Identifier	i		356218	1					
ANR	356229	IdentifierDecl	j		356218	1					
ANR	356230	IdentifierDeclType	unsigned short		356218	0					
ANR	356231	Identifier	j		356218	1					
ANR	356232	IdentifierDeclStatement	char buf [ EIF_MAX_RECTYPE_LEN + EIF_MAX_VALUE_LEN + 128 ] ;	75:1:2275:2326	356218	2	True				
ANR	356233	IdentifierDecl	buf [ EIF_MAX_RECTYPE_LEN + EIF_MAX_VALUE_LEN + 128 ]		356218	0					
ANR	356234	IdentifierDeclType	char [ EIF_MAX_RECTYPE_LEN + EIF_MAX_VALUE_LEN + 128 ]		356218	0					
ANR	356235	Identifier	buf		356218	1					
ANR	356236	AdditiveExpression	EIF_MAX_RECTYPE_LEN + EIF_MAX_VALUE_LEN + 128		356218	2		+			
ANR	356237	Identifier	EIF_MAX_RECTYPE_LEN		356218	0					
ANR	356238	AdditiveExpression	EIF_MAX_VALUE_LEN + 128		356218	1		+			
ANR	356239	Identifier	EIF_MAX_VALUE_LEN		356218	0					
ANR	356240	PrimaryExpression	128		356218	1					
ANR	356241	IfStatement	"if ( fgets ( buf , sizeof ( buf ) , eifp ) == NULL )"		356218	3					
ANR	356242	Condition	"fgets ( buf , sizeof ( buf ) , eifp ) == NULL"	78:4:2379:2415	356218	0	True				
ANR	356243	EqualityExpression	"fgets ( buf , sizeof ( buf ) , eifp ) == NULL"		356218	0		==			
ANR	356244	CallExpression	"fgets ( buf , sizeof ( buf ) , eifp )"		356218	0					
ANR	356245	Callee	fgets		356218	0					
ANR	356246	Identifier	fgets		356218	0					
ANR	356247	ArgumentList	buf		356218	1					
ANR	356248	Argument	buf		356218	0					
ANR	356249	Identifier	buf		356218	0					
ANR	356250	Argument	sizeof ( buf )		356218	1					
ANR	356251	SizeofExpression	sizeof ( buf )		356218	0					
ANR	356252	Sizeof	sizeof		356218	0					
ANR	356253	SizeofOperand	buf		356218	1					
ANR	356254	Argument	eifp		356218	2					
ANR	356255	Identifier	eifp		356218	0					
ANR	356256	Identifier	NULL		356218	1					
ANR	356257	CompoundStatement		7:43:175:175	356218	1					
ANR	356258	ExpressionStatement	r = 1	79:2:2422:2427	356218	0	True				
ANR	356259	AssignmentExpression	r = 1		356218	0		=			
ANR	356260	Identifier	r		356218	0					
ANR	356261	PrimaryExpression	1		356218	1					
ANR	356262	GotoStatement	goto done ;	79:9:2429:2438	356218	1	True				
ANR	356263	Identifier	done		356218	0					
ANR	356264	ForStatement	for ( i = 0 ; i < EIF_MAX_RECTYPE_LEN && buf [ i ] != ':' ; ++ i )		356218	4					
ANR	356265	ForInit	i = 0 ;	82:5:2449:2455	356218	0	True				
ANR	356266	AssignmentExpression	i = 0		356218	0		=			
ANR	356267	Identifier	i		356218	0					
ANR	356268	PrimaryExpression	0		356218	1					
ANR	356269	Condition	i < EIF_MAX_RECTYPE_LEN && buf [ i ] != ':'	82:13:2457:2496	356218	1	True				
ANR	356270	AndExpression	i < EIF_MAX_RECTYPE_LEN && buf [ i ] != ':'		356218	0		&&			
ANR	356271	RelationalExpression	i < EIF_MAX_RECTYPE_LEN		356218	0		<			
ANR	356272	Identifier	i		356218	0					
ANR	356273	Identifier	EIF_MAX_RECTYPE_LEN		356218	1					
ANR	356274	EqualityExpression	buf [ i ] != ':'		356218	1		!=			
ANR	356275	ArrayIndexing	buf [ i ]		356218	0					
ANR	356276	Identifier	buf		356218	0					
ANR	356277	Identifier	i		356218	1					
ANR	356278	PrimaryExpression	':'		356218	1					
ANR	356279	UnaryExpression	++ i	82:56:2500:2502	356218	2	True				
ANR	356280	IncDec	++		356218	0					
ANR	356281	Identifier	i		356218	1					
ANR	356282	IfStatement	if ( buf [ i ] == '\\0' )		356218	3					
ANR	356283	Condition	buf [ i ] == '\\0'	83:5:2510:2523	356218	0	True				
ANR	356284	EqualityExpression	buf [ i ] == '\\0'		356218	0		==			
ANR	356285	ArrayIndexing	buf [ i ]		356218	0					
ANR	356286	Identifier	buf		356218	0					
ANR	356287	Identifier	i		356218	1					
ANR	356288	PrimaryExpression	'\\0'		356218	1					
ANR	356289	CompoundStatement		12:21:283:283	356218	1					
ANR	356290	ExpressionStatement	r = 2	84:3:2531:2536	356218	0	True				
ANR	356291	AssignmentExpression	r = 2		356218	0		=			
ANR	356292	Identifier	r		356218	0					
ANR	356293	PrimaryExpression	2		356218	1					
ANR	356294	GotoStatement	goto done ;	84:10:2538:2547	356218	1	True				
ANR	356295	Identifier	done		356218	0					
ANR	356296	ElseStatement	else		356218	0					
ANR	356297	ExpressionStatement	rectype [ i ] = buf [ i ]	86:3:2562:2581	356218	0	True				
ANR	356298	AssignmentExpression	rectype [ i ] = buf [ i ]		356218	0		=			
ANR	356299	ArrayIndexing	rectype [ i ]		356218	0					
ANR	356300	Identifier	rectype		356218	0					
ANR	356301	Identifier	i		356218	1					
ANR	356302	ArrayIndexing	buf [ i ]		356218	1					
ANR	356303	Identifier	buf		356218	0					
ANR	356304	Identifier	i		356218	1					
ANR	356305	ExpressionStatement	rectype [ i ] = '\\0'	87:1:2584:2601	356218	5	True				
ANR	356306	AssignmentExpression	rectype [ i ] = '\\0'		356218	0		=			
ANR	356307	ArrayIndexing	rectype [ i ]		356218	0					
ANR	356308	Identifier	rectype		356218	0					
ANR	356309	Identifier	i		356218	1					
ANR	356310	PrimaryExpression	'\\0'		356218	1					
ANR	356311	ExpressionStatement	j = 0	88:1:2604:2609	356218	6	True				
ANR	356312	AssignmentExpression	j = 0		356218	0		=			
ANR	356313	Identifier	j		356218	0					
ANR	356314	PrimaryExpression	0		356218	1					
ANR	356315	ForStatement	"for ( ++ i ; i < EIF_MAX_VALUE_LEN && buf [ i ] != '\\n' ; ++ i , ++ j )"		356218	7					
ANR	356316	ForInit	++ i ;	89:5:2616:2620	356218	0	True				
ANR	356317	UnaryExpression	++ i		356218	0					
ANR	356318	IncDec	++		356218	0					
ANR	356319	Identifier	i		356218	1					
ANR	356320	Condition	i < EIF_MAX_VALUE_LEN && buf [ i ] != '\\n'	89:11:2622:2660	356218	1	True				
ANR	356321	AndExpression	i < EIF_MAX_VALUE_LEN && buf [ i ] != '\\n'		356218	0		&&			
ANR	356322	RelationalExpression	i < EIF_MAX_VALUE_LEN		356218	0		<			
ANR	356323	Identifier	i		356218	0					
ANR	356324	Identifier	EIF_MAX_VALUE_LEN		356218	1					
ANR	356325	EqualityExpression	buf [ i ] != '\\n'		356218	1		!=			
ANR	356326	ArrayIndexing	buf [ i ]		356218	0					
ANR	356327	Identifier	buf		356218	0					
ANR	356328	Identifier	i		356218	1					
ANR	356329	PrimaryExpression	'\\n'		356218	1					
ANR	356330	Expression	"++ i , ++ j"	89:53:2664:2671	356218	2	True				
ANR	356331	UnaryExpression	++ i		356218	0					
ANR	356332	IncDec	++		356218	0					
ANR	356333	Identifier	i		356218	1					
ANR	356334	UnaryExpression	++ j		356218	1					
ANR	356335	IncDec	++		356218	0					
ANR	356336	Identifier	j		356218	1					
ANR	356337	IfStatement	if ( buf [ i ] == '\\0' )		356218	3					
ANR	356338	Condition	buf [ i ] == '\\0'	90:5:2679:2692	356218	0	True				
ANR	356339	EqualityExpression	buf [ i ] == '\\0'		356218	0		==			
ANR	356340	ArrayIndexing	buf [ i ]		356218	0					
ANR	356341	Identifier	buf		356218	0					
ANR	356342	Identifier	i		356218	1					
ANR	356343	PrimaryExpression	'\\0'		356218	1					
ANR	356344	CompoundStatement		19:21:452:452	356218	1					
ANR	356345	ExpressionStatement	r = 3	91:3:2700:2705	356218	0	True				
ANR	356346	AssignmentExpression	r = 3		356218	0		=			
ANR	356347	Identifier	r		356218	0					
ANR	356348	PrimaryExpression	3		356218	1					
ANR	356349	GotoStatement	goto done ;	91:10:2707:2716	356218	1	True				
ANR	356350	Identifier	done		356218	0					
ANR	356351	ElseStatement	else		356218	0					
ANR	356352	ExpressionStatement	value [ j ] = buf [ i ]	93:3:2731:2748	356218	0	True				
ANR	356353	AssignmentExpression	value [ j ] = buf [ i ]		356218	0		=			
ANR	356354	ArrayIndexing	value [ j ]		356218	0					
ANR	356355	Identifier	value		356218	0					
ANR	356356	Identifier	j		356218	1					
ANR	356357	ArrayIndexing	buf [ i ]		356218	1					
ANR	356358	Identifier	buf		356218	0					
ANR	356359	Identifier	i		356218	1					
ANR	356360	ExpressionStatement	value [ j ] = '\\0'	94:1:2751:2766	356218	8	True				
ANR	356361	AssignmentExpression	value [ j ] = '\\0'		356218	0		=			
ANR	356362	ArrayIndexing	value [ j ]		356218	0					
ANR	356363	Identifier	value		356218	0					
ANR	356364	Identifier	j		356218	1					
ANR	356365	PrimaryExpression	'\\0'		356218	1					
ANR	356366	ExpressionStatement	r = 0	95:1:2769:2774	356218	9	True				
ANR	356367	AssignmentExpression	r = 0		356218	0		=			
ANR	356368	Identifier	r		356218	0					
ANR	356369	PrimaryExpression	0		356218	1					
ANR	356370	Label	done :	96:0:2776:2780	356218	10	True				
ANR	356371	Identifier	done		356218	0					
ANR	356372	ReturnStatement	return r ;	96:6:2782:2790	356218	11	True				
ANR	356373	Identifier	r		356218	0					
ANR	356374	ReturnType	static int		356218	1					
ANR	356375	Identifier	eiGetRecord		356218	2					
ANR	356376	ParameterList	"FILE * eifp , char * rectype , char * value"		356218	3					
ANR	356377	Parameter	FILE * eifp	71:12:2202:2211	356218	0	True				
ANR	356378	ParameterType	FILE *		356218	0					
ANR	356379	Identifier	eifp		356218	1					
ANR	356380	Parameter	char * rectype	71:24:2214:2226	356218	1	True				
ANR	356381	ParameterType	char *		356218	0					
ANR	356382	Identifier	rectype		356218	1					
ANR	356383	Parameter	char * value	71:39:2229:2239	356218	2	True				
ANR	356384	ParameterType	char *		356218	0					
ANR	356385	Identifier	value		356218	1					
ANR	356386	CFGEntryNode	ENTRY		356218		True				
ANR	356387	CFGExitNode	EXIT		356218		True				
ANR	356388	Symbol	eifp		356218						
ANR	356389	Symbol	* buf		356218						
ANR	356390	Symbol	rectype		356218						
ANR	356391	Symbol	NULL		356218						
ANR	356392	Symbol	i		356218						
ANR	356393	Symbol	j		356218						
ANR	356394	Symbol	fgets		356218						
ANR	356395	Symbol	r		356218						
ANR	356396	Symbol	buf		356218						
ANR	356397	Symbol	* i		356218						
ANR	356398	Symbol	* j		356218						
ANR	356399	Symbol	* value		356218						
ANR	356400	Symbol	EIF_MAX_RECTYPE_LEN		356218						
ANR	356401	Symbol	EIF_MAX_VALUE_LEN		356218						
ANR	356402	Symbol	value		356218						
ANR	356403	Symbol	* rectype		356218						
ANR	356404	Function	eiCheckFiletype	99:0:2795:3250							
ANR	356405	FunctionDef	eiCheckFiletype (FILE * eifp)		356404	0					
ANR	356406	CompoundStatement		101:0:2834:3250	356404	0					
ANR	356407	IdentifierDeclStatement	char rectype [ EIF_MAX_RECTYPE_LEN + 1 ] ;	102:1:2837:2872	356404	0	True				
ANR	356408	IdentifierDecl	rectype [ EIF_MAX_RECTYPE_LEN + 1 ]		356404	0					
ANR	356409	IdentifierDeclType	char [ EIF_MAX_RECTYPE_LEN + 1 ]		356404	0					
ANR	356410	Identifier	rectype		356404	1					
ANR	356411	AdditiveExpression	EIF_MAX_RECTYPE_LEN + 1		356404	2		+			
ANR	356412	Identifier	EIF_MAX_RECTYPE_LEN		356404	0					
ANR	356413	PrimaryExpression	1		356404	1					
ANR	356414	IdentifierDeclStatement	char value [ EIF_MAX_VALUE_LEN + 1 ] ;	103:1:2875:2906	356404	1	True				
ANR	356415	IdentifierDecl	value [ EIF_MAX_VALUE_LEN + 1 ]		356404	0					
ANR	356416	IdentifierDeclType	char [ EIF_MAX_VALUE_LEN + 1 ]		356404	0					
ANR	356417	Identifier	value		356404	1					
ANR	356418	AdditiveExpression	EIF_MAX_VALUE_LEN + 1		356404	2		+			
ANR	356419	Identifier	EIF_MAX_VALUE_LEN		356404	0					
ANR	356420	PrimaryExpression	1		356404	1					
ANR	356421	IdentifierDeclStatement	int r ;	104:1:2909:2914	356404	2	True				
ANR	356422	IdentifierDecl	r		356404	0					
ANR	356423	IdentifierDeclType	int		356404	0					
ANR	356424	Identifier	r		356404	1					
ANR	356425	IfStatement	"if ( ( r = eiGetRecord ( eifp , rectype , value ) ) != 0 )"		356404	3					
ANR	356426	Condition	"( r = eiGetRecord ( eifp , rectype , value ) ) != 0"	106:4:2921:2964	356404	0	True				
ANR	356427	EqualityExpression	"( r = eiGetRecord ( eifp , rectype , value ) ) != 0"		356404	0		!=			
ANR	356428	AssignmentExpression	"r = eiGetRecord ( eifp , rectype , value )"		356404	0		=			
ANR	356429	Identifier	r		356404	0					
ANR	356430	CallExpression	"eiGetRecord ( eifp , rectype , value )"		356404	1					
ANR	356431	Callee	eiGetRecord		356404	0					
ANR	356432	Identifier	eiGetRecord		356404	0					
ANR	356433	ArgumentList	eifp		356404	1					
ANR	356434	Argument	eifp		356404	0					
ANR	356435	Identifier	eifp		356404	0					
ANR	356436	Argument	rectype		356404	1					
ANR	356437	Identifier	rectype		356404	0					
ANR	356438	Argument	value		356404	2					
ANR	356439	Identifier	value		356404	0					
ANR	356440	PrimaryExpression	0		356404	1					
ANR	356441	GotoStatement	goto done ;	106:50:2967:2976	356404	1	True				
ANR	356442	Identifier	done		356404	0					
ANR	356443	IfStatement	"if ( strcmp ( rectype , ""FILETYPE"" ) || strcmp ( value , RSGCRY_FILETYPE_NAME ) )"		356404	4					
ANR	356444	Condition	"strcmp ( rectype , ""FILETYPE"" ) || strcmp ( value , RSGCRY_FILETYPE_NAME )"	107:4:2982:3047	356404	0	True				
ANR	356445	OrExpression	"strcmp ( rectype , ""FILETYPE"" ) || strcmp ( value , RSGCRY_FILETYPE_NAME )"		356404	0		||			
ANR	356446	CallExpression	"strcmp ( rectype , ""FILETYPE"" )"		356404	0					
ANR	356447	Callee	strcmp		356404	0					
ANR	356448	Identifier	strcmp		356404	0					
ANR	356449	ArgumentList	rectype		356404	1					
ANR	356450	Argument	rectype		356404	0					
ANR	356451	Identifier	rectype		356404	0					
ANR	356452	Argument	"""FILETYPE"""		356404	1					
ANR	356453	PrimaryExpression	"""FILETYPE"""		356404	0					
ANR	356454	CallExpression	"strcmp ( value , RSGCRY_FILETYPE_NAME )"		356404	1					
ANR	356455	Callee	strcmp		356404	0					
ANR	356456	Identifier	strcmp		356404	0					
ANR	356457	ArgumentList	value		356404	1					
ANR	356458	Argument	value		356404	0					
ANR	356459	Identifier	value		356404	0					
ANR	356460	Argument	RSGCRY_FILETYPE_NAME		356404	1					
ANR	356461	Identifier	RSGCRY_FILETYPE_NAME		356404	0					
ANR	356462	CompoundStatement		7:72:215:215	356404	1					
ANR	356463	Statement	fprintf	108:2:3054:3060	356404	0	True				
ANR	356464	Statement	(	108:9:3061:3061	356404	1	True				
ANR	356465	Statement	stderr	108:10:3062:3067	356404	2	True				
ANR	356466	Statement	","	108:16:3068:3068	356404	3	True				
ANR	356467	Statement	"""invalid filetype \\""cookie\\"" in encryption """	108:18:3070:3113	356404	4	True				
ANR	356468	Statement	"""info file\\n"""	109:3:3118:3130	356404	5	True				
ANR	356469	Statement	)	109:16:3131:3131	356404	6	True				
ANR	356470	ExpressionStatement		109:17:3132:3132	356404	7	True				
ANR	356471	ExpressionStatement	"fprintf ( stderr , ""\\trectype: '%s', value: '%s'\\n"" , rectype , value )"	110:2:3136:3201	356404	8	True				
ANR	356472	CallExpression	"fprintf ( stderr , ""\\trectype: '%s', value: '%s'\\n"" , rectype , value )"		356404	0					
ANR	356473	Callee	fprintf		356404	0					
ANR	356474	Identifier	fprintf		356404	0					
ANR	356475	ArgumentList	stderr		356404	1					
ANR	356476	Argument	stderr		356404	0					
ANR	356477	Identifier	stderr		356404	0					
ANR	356478	Argument	"""\\trectype: '%s', value: '%s'\\n"""		356404	1					
ANR	356479	PrimaryExpression	"""\\trectype: '%s', value: '%s'\\n"""		356404	0					
ANR	356480	Argument	rectype		356404	2					
ANR	356481	Identifier	rectype		356404	0					
ANR	356482	Argument	value		356404	3					
ANR	356483	Identifier	value		356404	0					
ANR	356484	ExpressionStatement	r = 1	111:2:3205:3210	356404	9	True				
ANR	356485	AssignmentExpression	r = 1		356404	0		=			
ANR	356486	Identifier	r		356404	0					
ANR	356487	PrimaryExpression	1		356404	1					
ANR	356488	GotoStatement	goto done ;	111:9:3212:3221	356404	10	True				
ANR	356489	Identifier	done		356404	0					
ANR	356490	ExpressionStatement	r = 0	113:1:3227:3232	356404	5	True				
ANR	356491	AssignmentExpression	r = 0		356404	0		=			
ANR	356492	Identifier	r		356404	0					
ANR	356493	PrimaryExpression	0		356404	1					
ANR	356494	Label	done :	114:0:3234:3238	356404	6	True				
ANR	356495	Identifier	done		356404	0					
ANR	356496	ReturnStatement	return r ;	114:6:3240:3248	356404	7	True				
ANR	356497	Identifier	r		356404	0					
ANR	356498	ReturnType	static int		356404	1					
ANR	356499	Identifier	eiCheckFiletype		356404	2					
ANR	356500	ParameterList	FILE * eifp		356404	3					
ANR	356501	Parameter	FILE * eifp	100:16:2822:2831	356404	0	True				
ANR	356502	ParameterType	FILE *		356404	0					
ANR	356503	Identifier	eifp		356404	1					
ANR	356504	CFGEntryNode	ENTRY		356404		True				
ANR	356505	CFGExitNode	EXIT		356404		True				
ANR	356506	Symbol	strcmp		356404						
ANR	356507	Symbol	eifp		356404						
ANR	356508	Symbol	r		356404						
ANR	356509	Symbol	rectype		356404						
ANR	356510	Symbol	eiGetRecord		356404						
ANR	356511	Symbol	stderr		356404						
ANR	356512	Symbol	value		356404						
ANR	356513	Symbol	RSGCRY_FILETYPE_NAME		356404						
ANR	356514	Function	eiGetIV	117:0:3253:4215							
ANR	356515	FunctionDef	"eiGetIV (FILE * eifp , char * iv , size_t leniv)"		356514	0					
ANR	356516	CompoundStatement		119:0:3308:4215	356514	0					
ANR	356517	IdentifierDeclStatement	char rectype [ EIF_MAX_RECTYPE_LEN + 1 ] ;	120:1:3311:3346	356514	0	True				
ANR	356518	IdentifierDecl	rectype [ EIF_MAX_RECTYPE_LEN + 1 ]		356514	0					
ANR	356519	IdentifierDeclType	char [ EIF_MAX_RECTYPE_LEN + 1 ]		356514	0					
ANR	356520	Identifier	rectype		356514	1					
ANR	356521	AdditiveExpression	EIF_MAX_RECTYPE_LEN + 1		356514	2		+			
ANR	356522	Identifier	EIF_MAX_RECTYPE_LEN		356514	0					
ANR	356523	PrimaryExpression	1		356514	1					
ANR	356524	IdentifierDeclStatement	char value [ EIF_MAX_VALUE_LEN + 1 ] ;	121:1:3349:3380	356514	1	True				
ANR	356525	IdentifierDecl	value [ EIF_MAX_VALUE_LEN + 1 ]		356514	0					
ANR	356526	IdentifierDeclType	char [ EIF_MAX_VALUE_LEN + 1 ]		356514	0					
ANR	356527	Identifier	value		356514	1					
ANR	356528	AdditiveExpression	EIF_MAX_VALUE_LEN + 1		356514	2		+			
ANR	356529	Identifier	EIF_MAX_VALUE_LEN		356514	0					
ANR	356530	PrimaryExpression	1		356514	1					
ANR	356531	IdentifierDeclStatement	size_t valueLen ;	122:1:3383:3398	356514	2	True				
ANR	356532	IdentifierDecl	valueLen		356514	0					
ANR	356533	IdentifierDeclType	size_t		356514	0					
ANR	356534	Identifier	valueLen		356514	1					
ANR	356535	IdentifierDeclStatement	"unsigned short i , j ;"	123:1:3401:3420	356514	3	True				
ANR	356536	IdentifierDecl	i		356514	0					
ANR	356537	IdentifierDeclType	unsigned short		356514	0					
ANR	356538	Identifier	i		356514	1					
ANR	356539	IdentifierDecl	j		356514	1					
ANR	356540	IdentifierDeclType	unsigned short		356514	0					
ANR	356541	Identifier	j		356514	1					
ANR	356542	IdentifierDeclStatement	int r ;	124:1:3423:3428	356514	4	True				
ANR	356543	IdentifierDecl	r		356514	0					
ANR	356544	IdentifierDeclType	int		356514	0					
ANR	356545	Identifier	r		356514	1					
ANR	356546	IdentifierDeclStatement	unsigned char nibble ;	125:1:3431:3451	356514	5	True				
ANR	356547	IdentifierDecl	nibble		356514	0					
ANR	356548	IdentifierDeclType	unsigned char		356514	0					
ANR	356549	Identifier	nibble		356514	1					
ANR	356550	IfStatement	"if ( ( r = eiGetRecord ( eifp , rectype , value ) ) != 0 )"		356514	6					
ANR	356551	Condition	"( r = eiGetRecord ( eifp , rectype , value ) ) != 0"	127:4:3458:3501	356514	0	True				
ANR	356552	EqualityExpression	"( r = eiGetRecord ( eifp , rectype , value ) ) != 0"		356514	0		!=			
ANR	356553	AssignmentExpression	"r = eiGetRecord ( eifp , rectype , value )"		356514	0		=			
ANR	356554	Identifier	r		356514	0					
ANR	356555	CallExpression	"eiGetRecord ( eifp , rectype , value )"		356514	1					
ANR	356556	Callee	eiGetRecord		356514	0					
ANR	356557	Identifier	eiGetRecord		356514	0					
ANR	356558	ArgumentList	eifp		356514	1					
ANR	356559	Argument	eifp		356514	0					
ANR	356560	Identifier	eifp		356514	0					
ANR	356561	Argument	rectype		356514	1					
ANR	356562	Identifier	rectype		356514	0					
ANR	356563	Argument	value		356514	2					
ANR	356564	Identifier	value		356514	0					
ANR	356565	PrimaryExpression	0		356514	1					
ANR	356566	GotoStatement	goto done ;	127:50:3504:3513	356514	1	True				
ANR	356567	Identifier	done		356514	0					
ANR	356568	IfStatement	"if ( strcmp ( rectype , ""IV"" ) )"		356514	7					
ANR	356569	Condition	"strcmp ( rectype , ""IV"" )"	128:4:3519:3539	356514	0	True				
ANR	356570	CallExpression	"strcmp ( rectype , ""IV"" )"		356514	0					
ANR	356571	Callee	strcmp		356514	0					
ANR	356572	Identifier	strcmp		356514	0					
ANR	356573	ArgumentList	rectype		356514	1					
ANR	356574	Argument	rectype		356514	0					
ANR	356575	Identifier	rectype		356514	0					
ANR	356576	Argument	"""IV"""		356514	1					
ANR	356577	PrimaryExpression	"""IV"""		356514	0					
ANR	356578	CompoundStatement		10:27:233:233	356514	1					
ANR	356579	Statement	fprintf	129:2:3546:3552	356514	0	True				
ANR	356580	Statement	(	129:9:3553:3553	356514	1	True				
ANR	356581	Statement	stderr	129:10:3554:3559	356514	2	True				
ANR	356582	Statement	","	129:16:3560:3560	356514	3	True				
ANR	356583	Statement	"""no IV record found when expected, record type """	129:18:3562:3609	356514	4	True				
ANR	356584	Statement	"""seen is '%s'\\n"""	130:3:3614:3629	356514	5	True				
ANR	356585	Statement	","	130:19:3630:3630	356514	6	True				
ANR	356586	Statement	rectype	130:21:3632:3638	356514	7	True				
ANR	356587	Statement	)	130:28:3639:3639	356514	8	True				
ANR	356588	ExpressionStatement		130:29:3640:3640	356514	9	True				
ANR	356589	ExpressionStatement	r = 1	131:2:3644:3649	356514	10	True				
ANR	356590	AssignmentExpression	r = 1		356514	0		=			
ANR	356591	Identifier	r		356514	0					
ANR	356592	PrimaryExpression	1		356514	1					
ANR	356593	GotoStatement	goto done ;	131:9:3651:3660	356514	11	True				
ANR	356594	Identifier	done		356514	0					
ANR	356595	ExpressionStatement	valueLen = strlen ( value )	133:1:3666:3690	356514	8	True				
ANR	356596	AssignmentExpression	valueLen = strlen ( value )		356514	0		=			
ANR	356597	Identifier	valueLen		356514	0					
ANR	356598	CallExpression	strlen ( value )		356514	1					
ANR	356599	Callee	strlen		356514	0					
ANR	356600	Identifier	strlen		356514	0					
ANR	356601	ArgumentList	value		356514	1					
ANR	356602	Argument	value		356514	0					
ANR	356603	Identifier	value		356514	0					
ANR	356604	IfStatement	if ( valueLen / 2 != leniv )		356514	9					
ANR	356605	Condition	valueLen / 2 != leniv	134:4:3696:3714	356514	0	True				
ANR	356606	EqualityExpression	valueLen / 2 != leniv		356514	0		!=			
ANR	356607	MultiplicativeExpression	valueLen / 2		356514	0		/			
ANR	356608	Identifier	valueLen		356514	0					
ANR	356609	PrimaryExpression	2		356514	1					
ANR	356610	Identifier	leniv		356514	1					
ANR	356611	CompoundStatement		16:25:408:408	356514	1					
ANR	356612	ExpressionStatement	"fprintf ( stderr , ""length of IV is %lld, expected %lld\\n"" , ( long long ) valueLen / 2 , ( long long ) leniv )"	135:2:3721:3823	356514	0	True				
ANR	356613	CallExpression	"fprintf ( stderr , ""length of IV is %lld, expected %lld\\n"" , ( long long ) valueLen / 2 , ( long long ) leniv )"		356514	0					
ANR	356614	Callee	fprintf		356514	0					
ANR	356615	Identifier	fprintf		356514	0					
ANR	356616	ArgumentList	stderr		356514	1					
ANR	356617	Argument	stderr		356514	0					
ANR	356618	Identifier	stderr		356514	0					
ANR	356619	Argument	"""length of IV is %lld, expected %lld\\n"""		356514	1					
ANR	356620	PrimaryExpression	"""length of IV is %lld, expected %lld\\n"""		356514	0					
ANR	356621	Argument	( long long ) valueLen / 2		356514	2					
ANR	356622	MultiplicativeExpression	( long long ) valueLen / 2		356514	0		/			
ANR	356623	CastExpression	( long long ) valueLen		356514	0					
ANR	356624	CastTarget	long long		356514	0					
ANR	356625	Identifier	valueLen		356514	1					
ANR	356626	PrimaryExpression	2		356514	1					
ANR	356627	Argument	( long long ) leniv		356514	3					
ANR	356628	CastExpression	( long long ) leniv		356514	0					
ANR	356629	CastTarget	long long		356514	0					
ANR	356630	Identifier	leniv		356514	1					
ANR	356631	ExpressionStatement	r = 1	137:2:3827:3832	356514	1	True				
ANR	356632	AssignmentExpression	r = 1		356514	0		=			
ANR	356633	Identifier	r		356514	0					
ANR	356634	PrimaryExpression	1		356514	1					
ANR	356635	GotoStatement	goto done ;	137:9:3834:3843	356514	2	True				
ANR	356636	Identifier	done		356514	0					
ANR	356637	ForStatement	for ( i = j = 0 ; i < valueLen ; ++ i )		356514	10					
ANR	356638	ForInit	i = j = 0 ;	140:5:3854:3864	356514	0	True				
ANR	356639	AssignmentExpression	i = j = 0		356514	0		=			
ANR	356640	Identifier	i		356514	0					
ANR	356641	AssignmentExpression	j = 0		356514	1		=			
ANR	356642	Identifier	j		356514	0					
ANR	356643	PrimaryExpression	0		356514	1					
ANR	356644	Condition	i < valueLen	140:17:3866:3877	356514	1	True				
ANR	356645	RelationalExpression	i < valueLen		356514	0		<			
ANR	356646	Identifier	i		356514	0					
ANR	356647	Identifier	valueLen		356514	1					
ANR	356648	UnaryExpression	++ i	140:32:3881:3883	356514	2	True				
ANR	356649	IncDec	++		356514	0					
ANR	356650	Identifier	i		356514	1					
ANR	356651	CompoundStatement		22:37:577:577	356514	3					
ANR	356652	IfStatement	if ( value [ i ] >= '0' && value [ i ] <= '9' )		356514	0					
ANR	356653	Condition	value [ i ] >= '0' && value [ i ] <= '9'	141:5:3893:3926	356514	0	True				
ANR	356654	AndExpression	value [ i ] >= '0' && value [ i ] <= '9'		356514	0		&&			
ANR	356655	RelationalExpression	value [ i ] >= '0'		356514	0		>=			
ANR	356656	ArrayIndexing	value [ i ]		356514	0					
ANR	356657	Identifier	value		356514	0					
ANR	356658	Identifier	i		356514	1					
ANR	356659	PrimaryExpression	'0'		356514	1					
ANR	356660	RelationalExpression	value [ i ] <= '9'		356514	1		<=			
ANR	356661	ArrayIndexing	value [ i ]		356514	0					
ANR	356662	Identifier	value		356514	0					
ANR	356663	Identifier	i		356514	1					
ANR	356664	PrimaryExpression	'9'		356514	1					
ANR	356665	ExpressionStatement	nibble = value [ i ] - '0'	142:3:3932:3955	356514	1	True				
ANR	356666	AssignmentExpression	nibble = value [ i ] - '0'		356514	0		=			
ANR	356667	Identifier	nibble		356514	0					
ANR	356668	AdditiveExpression	value [ i ] - '0'		356514	1		-			
ANR	356669	ArrayIndexing	value [ i ]		356514	0					
ANR	356670	Identifier	value		356514	0					
ANR	356671	Identifier	i		356514	1					
ANR	356672	PrimaryExpression	'0'		356514	1					
ANR	356673	ElseStatement	else		356514	0					
ANR	356674	IfStatement	if ( value [ i ] >= 'a' && value [ i ] <= 'f' )		356514	0					
ANR	356675	Condition	value [ i ] >= 'a' && value [ i ] <= 'f'	143:10:3967:4000	356514	0	True				
ANR	356676	AndExpression	value [ i ] >= 'a' && value [ i ] <= 'f'		356514	0		&&			
ANR	356677	RelationalExpression	value [ i ] >= 'a'		356514	0		>=			
ANR	356678	ArrayIndexing	value [ i ]		356514	0					
ANR	356679	Identifier	value		356514	0					
ANR	356680	Identifier	i		356514	1					
ANR	356681	PrimaryExpression	'a'		356514	1					
ANR	356682	RelationalExpression	value [ i ] <= 'f'		356514	1		<=			
ANR	356683	ArrayIndexing	value [ i ]		356514	0					
ANR	356684	Identifier	value		356514	0					
ANR	356685	Identifier	i		356514	1					
ANR	356686	PrimaryExpression	'f'		356514	1					
ANR	356687	ExpressionStatement	nibble = value [ i ] - 'a' + 10	144:3:4006:4034	356514	1	True				
ANR	356688	AssignmentExpression	nibble = value [ i ] - 'a' + 10		356514	0		=			
ANR	356689	Identifier	nibble		356514	0					
ANR	356690	AdditiveExpression	value [ i ] - 'a' + 10		356514	1		-			
ANR	356691	ArrayIndexing	value [ i ]		356514	0					
ANR	356692	Identifier	value		356514	0					
ANR	356693	Identifier	i		356514	1					
ANR	356694	AdditiveExpression	'a' + 10		356514	1		+			
ANR	356695	PrimaryExpression	'a'		356514	0					
ANR	356696	PrimaryExpression	10		356514	1					
ANR	356697	ElseStatement	else		356514	0					
ANR	356698	CompoundStatement		27:7:734:734	356514	0					
ANR	356699	ExpressionStatement	"fprintf ( stderr , ""invalid IV '%s'\\n"" , value )"	146:3:4048:4091	356514	0	True				
ANR	356700	CallExpression	"fprintf ( stderr , ""invalid IV '%s'\\n"" , value )"		356514	0					
ANR	356701	Callee	fprintf		356514	0					
ANR	356702	Identifier	fprintf		356514	0					
ANR	356703	ArgumentList	stderr		356514	1					
ANR	356704	Argument	stderr		356514	0					
ANR	356705	Identifier	stderr		356514	0					
ANR	356706	Argument	"""invalid IV '%s'\\n"""		356514	1					
ANR	356707	PrimaryExpression	"""invalid IV '%s'\\n"""		356514	0					
ANR	356708	Argument	value		356514	2					
ANR	356709	Identifier	value		356514	0					
ANR	356710	ExpressionStatement	r = 1	147:3:4096:4101	356514	1	True				
ANR	356711	AssignmentExpression	r = 1		356514	0		=			
ANR	356712	Identifier	r		356514	0					
ANR	356713	PrimaryExpression	1		356514	1					
ANR	356714	GotoStatement	goto done ;	147:10:4103:4112	356514	2	True				
ANR	356715	Identifier	done		356514	0					
ANR	356716	IfStatement	if ( i % 2 == 0 )		356514	1					
ANR	356717	Condition	i % 2 == 0	149:5:4123:4132	356514	0	True				
ANR	356718	EqualityExpression	i % 2 == 0		356514	0		==			
ANR	356719	MultiplicativeExpression	i % 2		356514	0		%			
ANR	356720	Identifier	i		356514	0					
ANR	356721	PrimaryExpression	2		356514	1					
ANR	356722	PrimaryExpression	0		356514	1					
ANR	356723	ExpressionStatement	iv [ j ] = nibble << 4	150:3:4138:4157	356514	1	True				
ANR	356724	AssignmentExpression	iv [ j ] = nibble << 4		356514	0		=			
ANR	356725	ArrayIndexing	iv [ j ]		356514	0					
ANR	356726	Identifier	iv		356514	0					
ANR	356727	Identifier	j		356514	1					
ANR	356728	ShiftExpression	nibble << 4		356514	1		<<			
ANR	356729	Identifier	nibble		356514	0					
ANR	356730	PrimaryExpression	4		356514	1					
ANR	356731	ElseStatement	else		356514	0					
ANR	356732	ExpressionStatement	iv [ j ++ ] |= nibble	152:3:4169:4186	356514	0	True				
ANR	356733	AssignmentExpression	iv [ j ++ ] |= nibble		356514	0		|=			
ANR	356734	ArrayIndexing	iv [ j ++ ]		356514	0					
ANR	356735	Identifier	iv		356514	0					
ANR	356736	PostIncDecOperationExpression	j ++		356514	1					
ANR	356737	Identifier	j		356514	0					
ANR	356738	IncDec	++		356514	1					
ANR	356739	Identifier	nibble		356514	1					
ANR	356740	ExpressionStatement	r = 0	154:1:4192:4197	356514	11	True				
ANR	356741	AssignmentExpression	r = 0		356514	0		=			
ANR	356742	Identifier	r		356514	0					
ANR	356743	PrimaryExpression	0		356514	1					
ANR	356744	Label	done :	155:0:4199:4203	356514	12	True				
ANR	356745	Identifier	done		356514	0					
ANR	356746	ReturnStatement	return r ;	155:6:4205:4213	356514	13	True				
ANR	356747	Identifier	r		356514	0					
ANR	356748	ReturnType	static int		356514	1					
ANR	356749	Identifier	eiGetIV		356514	2					
ANR	356750	ParameterList	"FILE * eifp , char * iv , size_t leniv"		356514	3					
ANR	356751	Parameter	FILE * eifp	118:8:3272:3281	356514	0	True				
ANR	356752	ParameterType	FILE *		356514	0					
ANR	356753	Identifier	eifp		356514	1					
ANR	356754	Parameter	char * iv	118:20:3284:3291	356514	1	True				
ANR	356755	ParameterType	char *		356514	0					
ANR	356756	Identifier	iv		356514	1					
ANR	356757	Parameter	size_t leniv	118:30:3294:3305	356514	2	True				
ANR	356758	ParameterType	size_t		356514	0					
ANR	356759	Identifier	leniv		356514	1					
ANR	356760	CFGEntryNode	ENTRY		356514		True				
ANR	356761	CFGExitNode	EXIT		356514		True				
ANR	356762	Symbol	strcmp		356514						
ANR	356763	Symbol	eifp		356514						
ANR	356764	Symbol	leniv		356514						
ANR	356765	Symbol	rectype		356514						
ANR	356766	Symbol	i		356514						
ANR	356767	Symbol	j		356514						
ANR	356768	Symbol	eiGetRecord		356514						
ANR	356769	Symbol	stderr		356514						
ANR	356770	Symbol	iv		356514						
ANR	356771	Symbol	* iv		356514						
ANR	356772	Symbol	strlen		356514						
ANR	356773	Symbol	r		356514						
ANR	356774	Symbol	* i		356514						
ANR	356775	Symbol	* j		356514						
ANR	356776	Symbol	valueLen		356514						
ANR	356777	Symbol	* value		356514						
ANR	356778	Symbol	value		356514						
ANR	356779	Symbol	nibble		356514						
ANR	356780	Function	eiGetEND	158:0:4218:4613							
ANR	356781	FunctionDef	"eiGetEND (FILE * eifp , off64_t * offs)"		356780	0					
ANR	356782	CompoundStatement		160:0:4265:4613	356780	0					
ANR	356783	IdentifierDeclStatement	"char rectype [ EIF_MAX_RECTYPE_LEN + 1 ] = """" ;"	161:1:4268:4308	356780	0	True				
ANR	356784	IdentifierDecl	"rectype [ EIF_MAX_RECTYPE_LEN + 1 ] = """""		356780	0					
ANR	356785	IdentifierDeclType	char [ EIF_MAX_RECTYPE_LEN + 1 ]		356780	0					
ANR	356786	Identifier	rectype		356780	1					
ANR	356787	AdditiveExpression	EIF_MAX_RECTYPE_LEN + 1		356780	2		+			
ANR	356788	Identifier	EIF_MAX_RECTYPE_LEN		356780	0					
ANR	356789	PrimaryExpression	1		356780	1					
ANR	356790	AssignmentExpression	"rectype [ EIF_MAX_RECTYPE_LEN + 1 ] = """""		356780	3		=			
ANR	356791	Identifier	rectype		356780	0					
ANR	356792	PrimaryExpression	""""""		356780	1					
ANR	356793	IdentifierDeclStatement	char value [ EIF_MAX_VALUE_LEN + 1 ] ;	162:1:4311:4342	356780	1	True				
ANR	356794	IdentifierDecl	value [ EIF_MAX_VALUE_LEN + 1 ]		356780	0					
ANR	356795	IdentifierDeclType	char [ EIF_MAX_VALUE_LEN + 1 ]		356780	0					
ANR	356796	Identifier	value		356780	1					
ANR	356797	AdditiveExpression	EIF_MAX_VALUE_LEN + 1		356780	2		+			
ANR	356798	Identifier	EIF_MAX_VALUE_LEN		356780	0					
ANR	356799	PrimaryExpression	1		356780	1					
ANR	356800	IdentifierDeclStatement	int r ;	163:1:4345:4350	356780	2	True				
ANR	356801	IdentifierDecl	r		356780	0					
ANR	356802	IdentifierDeclType	int		356780	0					
ANR	356803	Identifier	r		356780	1					
ANR	356804	IfStatement	"if ( ( r = eiGetRecord ( eifp , rectype , value ) ) != 0 )"		356780	3					
ANR	356805	Condition	"( r = eiGetRecord ( eifp , rectype , value ) ) != 0"	165:4:4357:4400	356780	0	True				
ANR	356806	EqualityExpression	"( r = eiGetRecord ( eifp , rectype , value ) ) != 0"		356780	0		!=			
ANR	356807	AssignmentExpression	"r = eiGetRecord ( eifp , rectype , value )"		356780	0		=			
ANR	356808	Identifier	r		356780	0					
ANR	356809	CallExpression	"eiGetRecord ( eifp , rectype , value )"		356780	1					
ANR	356810	Callee	eiGetRecord		356780	0					
ANR	356811	Identifier	eiGetRecord		356780	0					
ANR	356812	ArgumentList	eifp		356780	1					
ANR	356813	Argument	eifp		356780	0					
ANR	356814	Identifier	eifp		356780	0					
ANR	356815	Argument	rectype		356780	1					
ANR	356816	Identifier	rectype		356780	0					
ANR	356817	Argument	value		356780	2					
ANR	356818	Identifier	value		356780	0					
ANR	356819	PrimaryExpression	0		356780	1					
ANR	356820	GotoStatement	goto done ;	165:50:4403:4412	356780	1	True				
ANR	356821	Identifier	done		356780	0					
ANR	356822	IfStatement	"if ( strcmp ( rectype , ""END"" ) )"		356780	4					
ANR	356823	Condition	"strcmp ( rectype , ""END"" )"	166:4:4418:4439	356780	0	True				
ANR	356824	CallExpression	"strcmp ( rectype , ""END"" )"		356780	0					
ANR	356825	Callee	strcmp		356780	0					
ANR	356826	Identifier	strcmp		356780	0					
ANR	356827	ArgumentList	rectype		356780	1					
ANR	356828	Argument	rectype		356780	0					
ANR	356829	Identifier	rectype		356780	0					
ANR	356830	Argument	"""END"""		356780	1					
ANR	356831	PrimaryExpression	"""END"""		356780	0					
ANR	356832	CompoundStatement		7:28:176:176	356780	1					
ANR	356833	Statement	fprintf	167:2:4446:4452	356780	0	True				
ANR	356834	Statement	(	167:9:4453:4453	356780	1	True				
ANR	356835	Statement	stderr	167:10:4454:4459	356780	2	True				
ANR	356836	Statement	","	167:16:4460:4460	356780	3	True				
ANR	356837	Statement	"""no END record found when expected, record type """	167:18:4462:4510	356780	4	True				
ANR	356838	Statement	"""seen is '%s'\\n"""	168:3:4515:4530	356780	5	True				
ANR	356839	Statement	","	168:19:4531:4531	356780	6	True				
ANR	356840	Statement	rectype	168:21:4533:4539	356780	7	True				
ANR	356841	Statement	)	168:28:4540:4540	356780	8	True				
ANR	356842	ExpressionStatement		168:29:4541:4541	356780	9	True				
ANR	356843	ExpressionStatement	r = 1	169:2:4545:4550	356780	10	True				
ANR	356844	AssignmentExpression	r = 1		356780	0		=			
ANR	356845	Identifier	r		356780	0					
ANR	356846	PrimaryExpression	1		356780	1					
ANR	356847	GotoStatement	goto done ;	169:9:4552:4561	356780	11	True				
ANR	356848	Identifier	done		356780	0					
ANR	356849	ExpressionStatement	* offs = atoll ( value )	171:1:4567:4587	356780	5	True				
ANR	356850	AssignmentExpression	* offs = atoll ( value )		356780	0		=			
ANR	356851	UnaryOperationExpression	* offs		356780	0					
ANR	356852	UnaryOperator	*		356780	0					
ANR	356853	Identifier	offs		356780	1					
ANR	356854	CallExpression	atoll ( value )		356780	1					
ANR	356855	Callee	atoll		356780	0					
ANR	356856	Identifier	atoll		356780	0					
ANR	356857	ArgumentList	value		356780	1					
ANR	356858	Argument	value		356780	0					
ANR	356859	Identifier	value		356780	0					
ANR	356860	ExpressionStatement	r = 0	172:1:4590:4595	356780	6	True				
ANR	356861	AssignmentExpression	r = 0		356780	0		=			
ANR	356862	Identifier	r		356780	0					
ANR	356863	PrimaryExpression	0		356780	1					
ANR	356864	Label	done :	173:0:4597:4601	356780	7	True				
ANR	356865	Identifier	done		356780	0					
ANR	356866	ReturnStatement	return r ;	173:6:4603:4611	356780	8	True				
ANR	356867	Identifier	r		356780	0					
ANR	356868	ReturnType	static int		356780	1					
ANR	356869	Identifier	eiGetEND		356780	2					
ANR	356870	ParameterList	"FILE * eifp , off64_t * offs"		356780	3					
ANR	356871	Parameter	FILE * eifp	159:9:4238:4247	356780	0	True				
ANR	356872	ParameterType	FILE *		356780	0					
ANR	356873	Identifier	eifp		356780	1					
ANR	356874	Parameter	off64_t * offs	159:21:4250:4262	356780	1	True				
ANR	356875	ParameterType	off64_t *		356780	0					
ANR	356876	Identifier	offs		356780	1					
ANR	356877	CFGEntryNode	ENTRY		356780		True				
ANR	356878	CFGExitNode	EXIT		356780		True				
ANR	356879	Symbol	offs		356780						
ANR	356880	Symbol	strcmp		356780						
ANR	356881	Symbol	eifp		356780						
ANR	356882	Symbol	atoll		356780						
ANR	356883	Symbol	r		356780						
ANR	356884	Symbol	rectype		356780						
ANR	356885	Symbol	* offs		356780						
ANR	356886	Symbol	eiGetRecord		356780						
ANR	356887	Symbol	value		356780						
ANR	356888	Function	initCrypt	176:0:4616:5932							
ANR	356889	FunctionDef	initCrypt (FILE * eifp)		356888	0					
ANR	356890	CompoundStatement		178:0:4649:5932	356888	0					
ANR	356891	IdentifierDeclStatement	int r = 0 ;	179:2:4653:4662	356888	0	True				
ANR	356892	IdentifierDecl	r = 0		356888	0					
ANR	356893	IdentifierDeclType	int		356888	0					
ANR	356894	Identifier	r		356888	1					
ANR	356895	AssignmentExpression	r = 0		356888	2		=			
ANR	356896	Identifier	r		356888	0					
ANR	356897	PrimaryExpression	0		356888	1					
ANR	356898	IdentifierDeclStatement	gcry_error_t gcryError ;	180:1:4665:4687	356888	1	True				
ANR	356899	IdentifierDecl	gcryError		356888	0					
ANR	356900	IdentifierDeclType	gcry_error_t		356888	0					
ANR	356901	Identifier	gcryError		356888	1					
ANR	356902	IdentifierDeclStatement	char iv [ 4096 ] ;	181:1:4690:4703	356888	2	True				
ANR	356903	IdentifierDecl	iv [ 4096 ]		356888	0					
ANR	356904	IdentifierDeclType	char [ 4096 ]		356888	0					
ANR	356905	Identifier	iv		356888	1					
ANR	356906	PrimaryExpression	4096		356888	2					
ANR	356907	ExpressionStatement	blkLength = gcry_cipher_get_algo_blklen ( cry_algo )	183:1:4707:4756	356888	3	True				
ANR	356908	AssignmentExpression	blkLength = gcry_cipher_get_algo_blklen ( cry_algo )		356888	0		=			
ANR	356909	Identifier	blkLength		356888	0					
ANR	356910	CallExpression	gcry_cipher_get_algo_blklen ( cry_algo )		356888	1					
ANR	356911	Callee	gcry_cipher_get_algo_blklen		356888	0					
ANR	356912	Identifier	gcry_cipher_get_algo_blklen		356888	0					
ANR	356913	ArgumentList	cry_algo		356888	1					
ANR	356914	Argument	cry_algo		356888	0					
ANR	356915	Identifier	cry_algo		356888	0					
ANR	356916	IfStatement	if ( blkLength > sizeof ( iv ) )		356888	4					
ANR	356917	Condition	blkLength > sizeof ( iv )	184:4:4762:4783	356888	0	True				
ANR	356918	RelationalExpression	blkLength > sizeof ( iv )		356888	0		>			
ANR	356919	Identifier	blkLength		356888	0					
ANR	356920	SizeofExpression	sizeof ( iv )		356888	1					
ANR	356921	Sizeof	sizeof		356888	0					
ANR	356922	SizeofOperand	iv		356888	1					
ANR	356923	CompoundStatement		7:28:136:136	356888	1					
ANR	356924	Statement	fprintf	185:2:4790:4796	356888	0	True				
ANR	356925	Statement	(	185:9:4797:4797	356888	1	True				
ANR	356926	Statement	stderr	185:10:4798:4803	356888	2	True				
ANR	356927	Statement	","	185:16:4804:4804	356888	3	True				
ANR	356928	Statement	"""internal error[%s:%d]: block length %lld too large for """	185:18:4806:4862	356888	4	True				
ANR	356929	Statement	"""iv buffer\\n"""	186:3:4867:4879	356888	5	True				
ANR	356930	Statement	","	186:16:4880:4880	356888	6	True				
ANR	356931	Statement	__FILE__	186:18:4882:4889	356888	7	True				
ANR	356932	Statement	","	186:26:4890:4890	356888	8	True				
ANR	356933	Statement	__LINE__	186:28:4892:4899	356888	9	True				
ANR	356934	Statement	","	186:36:4900:4900	356888	10	True				
ANR	356935	Statement	(	186:38:4902:4902	356888	11	True				
ANR	356936	Statement	long	186:39:4903:4906	356888	12	True				
ANR	356937	Statement	long	186:44:4908:4911	356888	13	True				
ANR	356938	Statement	)	186:48:4912:4912	356888	14	True				
ANR	356939	Statement	blkLength	186:50:4914:4922	356888	15	True				
ANR	356940	Statement	)	186:59:4923:4923	356888	16	True				
ANR	356941	ExpressionStatement		186:60:4924:4924	356888	17	True				
ANR	356942	ExpressionStatement	r = 1	187:2:4928:4933	356888	18	True				
ANR	356943	AssignmentExpression	r = 1		356888	0		=			
ANR	356944	Identifier	r		356888	0					
ANR	356945	PrimaryExpression	1		356888	1					
ANR	356946	GotoStatement	goto done ;	187:9:4935:4944	356888	19	True				
ANR	356947	Identifier	done		356888	0					
ANR	356948	IfStatement	"if ( ( r = eiGetIV ( eifp , iv , blkLength ) ) != 0 )"		356888	5					
ANR	356949	Condition	"( r = eiGetIV ( eifp , iv , blkLength ) ) != 0"	189:4:4953:4991	356888	0	True				
ANR	356950	EqualityExpression	"( r = eiGetIV ( eifp , iv , blkLength ) ) != 0"		356888	0		!=			
ANR	356951	AssignmentExpression	"r = eiGetIV ( eifp , iv , blkLength )"		356888	0		=			
ANR	356952	Identifier	r		356888	0					
ANR	356953	CallExpression	"eiGetIV ( eifp , iv , blkLength )"		356888	1					
ANR	356954	Callee	eiGetIV		356888	0					
ANR	356955	Identifier	eiGetIV		356888	0					
ANR	356956	ArgumentList	eifp		356888	1					
ANR	356957	Argument	eifp		356888	0					
ANR	356958	Identifier	eifp		356888	0					
ANR	356959	Argument	iv		356888	1					
ANR	356960	Identifier	iv		356888	0					
ANR	356961	Argument	blkLength		356888	2					
ANR	356962	Identifier	blkLength		356888	0					
ANR	356963	PrimaryExpression	0		356888	1					
ANR	356964	GotoStatement	goto done ;	189:45:4994:5003	356888	1	True				
ANR	356965	Identifier	done		356888	0					
ANR	356966	IdentifierDeclStatement	size_t keyLength = gcry_cipher_get_algo_keylen ( cry_algo ) ;	191:1:5007:5063	356888	6	True				
ANR	356967	IdentifierDecl	keyLength = gcry_cipher_get_algo_keylen ( cry_algo )		356888	0					
ANR	356968	IdentifierDeclType	size_t		356888	0					
ANR	356969	Identifier	keyLength		356888	1					
ANR	356970	AssignmentExpression	keyLength = gcry_cipher_get_algo_keylen ( cry_algo )		356888	2		=			
ANR	356971	Identifier	keyLength		356888	0					
ANR	356972	CallExpression	gcry_cipher_get_algo_keylen ( cry_algo )		356888	1					
ANR	356973	Callee	gcry_cipher_get_algo_keylen		356888	0					
ANR	356974	Identifier	gcry_cipher_get_algo_keylen		356888	0					
ANR	356975	ArgumentList	cry_algo		356888	1					
ANR	356976	Argument	cry_algo		356888	0					
ANR	356977	Identifier	cry_algo		356888	0					
ANR	356978	IfStatement	if ( strlen ( cry_key ) != keyLength )		356888	7					
ANR	356979	Condition	strlen ( cry_key ) != keyLength	192:4:5069:5096	356888	0	True				
ANR	356980	EqualityExpression	strlen ( cry_key ) != keyLength		356888	0		!=			
ANR	356981	CallExpression	strlen ( cry_key )		356888	0					
ANR	356982	Callee	strlen		356888	0					
ANR	356983	Identifier	strlen		356888	0					
ANR	356984	ArgumentList	cry_key		356888	1					
ANR	356985	Argument	cry_key		356888	0					
ANR	356986	Identifier	cry_key		356888	0					
ANR	356987	Identifier	keyLength		356888	1					
ANR	356988	CompoundStatement		15:34:449:449	356888	1					
ANR	356989	Statement	fprintf	193:2:5103:5109	356888	0	True				
ANR	356990	Statement	(	193:9:5110:5110	356888	1	True				
ANR	356991	Statement	stderr	193:10:5111:5116	356888	2	True				
ANR	356992	Statement	","	193:16:5117:5117	356888	3	True				
ANR	356993	Statement	"""invalid key length; key is %u characters, but """	193:18:5119:5166	356888	4	True				
ANR	356994	Statement	"""exactly %llu characters are required\\n"""	194:3:5171:5210	356888	5	True				
ANR	356995	Statement	","	194:43:5211:5211	356888	6	True				
ANR	356996	Statement	cry_keylen	194:45:5213:5222	356888	7	True				
ANR	356997	Statement	","	194:55:5223:5223	356888	8	True				
ANR	356998	Statement	(	195:3:5228:5228	356888	9	True				
ANR	356999	Statement	long	195:4:5229:5232	356888	10	True				
ANR	357000	Statement	long	195:9:5234:5237	356888	11	True				
ANR	357001	Statement	unsigned	195:14:5239:5246	356888	12	True				
ANR	357002	Statement	)	195:22:5247:5247	356888	13	True				
ANR	357003	Statement	keyLength	195:24:5249:5257	356888	14	True				
ANR	357004	Statement	)	195:33:5258:5258	356888	15	True				
ANR	357005	ExpressionStatement		195:34:5259:5259	356888	16	True				
ANR	357006	ExpressionStatement	r = 1	196:2:5263:5268	356888	17	True				
ANR	357007	AssignmentExpression	r = 1		356888	0		=			
ANR	357008	Identifier	r		356888	0					
ANR	357009	PrimaryExpression	1		356888	1					
ANR	357010	GotoStatement	goto done ;	196:9:5270:5279	356888	18	True				
ANR	357011	Identifier	done		356888	0					
ANR	357012	ExpressionStatement	"gcryError = gcry_cipher_open ( & gcry_chd , cry_algo , cry_mode , 0 )"	199:1:5286:5348	356888	8	True				
ANR	357013	AssignmentExpression	"gcryError = gcry_cipher_open ( & gcry_chd , cry_algo , cry_mode , 0 )"		356888	0		=			
ANR	357014	Identifier	gcryError		356888	0					
ANR	357015	CallExpression	"gcry_cipher_open ( & gcry_chd , cry_algo , cry_mode , 0 )"		356888	1					
ANR	357016	Callee	gcry_cipher_open		356888	0					
ANR	357017	Identifier	gcry_cipher_open		356888	0					
ANR	357018	ArgumentList	& gcry_chd		356888	1					
ANR	357019	Argument	& gcry_chd		356888	0					
ANR	357020	UnaryOperationExpression	& gcry_chd		356888	0					
ANR	357021	UnaryOperator	&		356888	0					
ANR	357022	Identifier	gcry_chd		356888	1					
ANR	357023	Argument	cry_algo		356888	1					
ANR	357024	Identifier	cry_algo		356888	0					
ANR	357025	Argument	cry_mode		356888	2					
ANR	357026	Identifier	cry_mode		356888	0					
ANR	357027	Argument	0		356888	3					
ANR	357028	PrimaryExpression	0		356888	0					
ANR	357029	IfStatement	if ( gcryError )		356888	9					
ANR	357030	Condition	gcryError	200:5:5355:5363	356888	0	True				
ANR	357031	Identifier	gcryError		356888	0					
ANR	357032	CompoundStatement		23:16:716:716	356888	1					
ANR	357033	ExpressionStatement	"printf ( ""gcry_cipher_open failed:  %s/%s\\n"" , gcry_strsource ( gcryError ) , gcry_strerror ( gcryError ) )"	201:2:5370:5472	356888	0	True				
ANR	357034	CallExpression	"printf ( ""gcry_cipher_open failed:  %s/%s\\n"" , gcry_strsource ( gcryError ) , gcry_strerror ( gcryError ) )"		356888	0					
ANR	357035	Callee	printf		356888	0					
ANR	357036	Identifier	printf		356888	0					
ANR	357037	ArgumentList	"""gcry_cipher_open failed:  %s/%s\\n"""		356888	1					
ANR	357038	Argument	"""gcry_cipher_open failed:  %s/%s\\n"""		356888	0					
ANR	357039	PrimaryExpression	"""gcry_cipher_open failed:  %s/%s\\n"""		356888	0					
ANR	357040	Argument	gcry_strsource ( gcryError )		356888	1					
ANR	357041	CallExpression	gcry_strsource ( gcryError )		356888	0					
ANR	357042	Callee	gcry_strsource		356888	0					
ANR	357043	Identifier	gcry_strsource		356888	0					
ANR	357044	ArgumentList	gcryError		356888	1					
ANR	357045	Argument	gcryError		356888	0					
ANR	357046	Identifier	gcryError		356888	0					
ANR	357047	Argument	gcry_strerror ( gcryError )		356888	2					
ANR	357048	CallExpression	gcry_strerror ( gcryError )		356888	0					
ANR	357049	Callee	gcry_strerror		356888	0					
ANR	357050	Identifier	gcry_strerror		356888	0					
ANR	357051	ArgumentList	gcryError		356888	1					
ANR	357052	Argument	gcryError		356888	0					
ANR	357053	Identifier	gcryError		356888	0					
ANR	357054	ExpressionStatement	r = 1	204:2:5476:5481	356888	1	True				
ANR	357055	AssignmentExpression	r = 1		356888	0		=			
ANR	357056	Identifier	r		356888	0					
ANR	357057	PrimaryExpression	1		356888	1					
ANR	357058	GotoStatement	goto done ;	204:9:5483:5492	356888	2	True				
ANR	357059	Identifier	done		356888	0					
ANR	357060	ExpressionStatement	"gcryError = gcry_cipher_setkey ( gcry_chd , cry_key , keyLength )"	207:1:5499:5559	356888	10	True				
ANR	357061	AssignmentExpression	"gcryError = gcry_cipher_setkey ( gcry_chd , cry_key , keyLength )"		356888	0		=			
ANR	357062	Identifier	gcryError		356888	0					
ANR	357063	CallExpression	"gcry_cipher_setkey ( gcry_chd , cry_key , keyLength )"		356888	1					
ANR	357064	Callee	gcry_cipher_setkey		356888	0					
ANR	357065	Identifier	gcry_cipher_setkey		356888	0					
ANR	357066	ArgumentList	gcry_chd		356888	1					
ANR	357067	Argument	gcry_chd		356888	0					
ANR	357068	Identifier	gcry_chd		356888	0					
ANR	357069	Argument	cry_key		356888	1					
ANR	357070	Identifier	cry_key		356888	0					
ANR	357071	Argument	keyLength		356888	2					
ANR	357072	Identifier	keyLength		356888	0					
ANR	357073	IfStatement	if ( gcryError )		356888	11					
ANR	357074	Condition	gcryError	208:5:5566:5574	356888	0	True				
ANR	357075	Identifier	gcryError		356888	0					
ANR	357076	CompoundStatement		31:16:927:927	356888	1					
ANR	357077	ExpressionStatement	"printf ( ""gcry_cipher_setkey failed:  %s/%s\\n"" , gcry_strsource ( gcryError ) , gcry_strerror ( gcryError ) )"	209:2:5581:5685	356888	0	True				
ANR	357078	CallExpression	"printf ( ""gcry_cipher_setkey failed:  %s/%s\\n"" , gcry_strsource ( gcryError ) , gcry_strerror ( gcryError ) )"		356888	0					
ANR	357079	Callee	printf		356888	0					
ANR	357080	Identifier	printf		356888	0					
ANR	357081	ArgumentList	"""gcry_cipher_setkey failed:  %s/%s\\n"""		356888	1					
ANR	357082	Argument	"""gcry_cipher_setkey failed:  %s/%s\\n"""		356888	0					
ANR	357083	PrimaryExpression	"""gcry_cipher_setkey failed:  %s/%s\\n"""		356888	0					
ANR	357084	Argument	gcry_strsource ( gcryError )		356888	1					
ANR	357085	CallExpression	gcry_strsource ( gcryError )		356888	0					
ANR	357086	Callee	gcry_strsource		356888	0					
ANR	357087	Identifier	gcry_strsource		356888	0					
ANR	357088	ArgumentList	gcryError		356888	1					
ANR	357089	Argument	gcryError		356888	0					
ANR	357090	Identifier	gcryError		356888	0					
ANR	357091	Argument	gcry_strerror ( gcryError )		356888	2					
ANR	357092	CallExpression	gcry_strerror ( gcryError )		356888	0					
ANR	357093	Callee	gcry_strerror		356888	0					
ANR	357094	Identifier	gcry_strerror		356888	0					
ANR	357095	ArgumentList	gcryError		356888	1					
ANR	357096	Argument	gcryError		356888	0					
ANR	357097	Identifier	gcryError		356888	0					
ANR	357098	ExpressionStatement	r = 1	212:2:5689:5694	356888	1	True				
ANR	357099	AssignmentExpression	r = 1		356888	0		=			
ANR	357100	Identifier	r		356888	0					
ANR	357101	PrimaryExpression	1		356888	1					
ANR	357102	GotoStatement	goto done ;	212:9:5696:5705	356888	2	True				
ANR	357103	Identifier	done		356888	0					
ANR	357104	ExpressionStatement	"gcryError = gcry_cipher_setiv ( gcry_chd , iv , blkLength )"	215:1:5712:5766	356888	12	True				
ANR	357105	AssignmentExpression	"gcryError = gcry_cipher_setiv ( gcry_chd , iv , blkLength )"		356888	0		=			
ANR	357106	Identifier	gcryError		356888	0					
ANR	357107	CallExpression	"gcry_cipher_setiv ( gcry_chd , iv , blkLength )"		356888	1					
ANR	357108	Callee	gcry_cipher_setiv		356888	0					
ANR	357109	Identifier	gcry_cipher_setiv		356888	0					
ANR	357110	ArgumentList	gcry_chd		356888	1					
ANR	357111	Argument	gcry_chd		356888	0					
ANR	357112	Identifier	gcry_chd		356888	0					
ANR	357113	Argument	iv		356888	1					
ANR	357114	Identifier	iv		356888	0					
ANR	357115	Argument	blkLength		356888	2					
ANR	357116	Identifier	blkLength		356888	0					
ANR	357117	IfStatement	if ( gcryError )		356888	13					
ANR	357118	Condition	gcryError	216:5:5773:5781	356888	0	True				
ANR	357119	Identifier	gcryError		356888	0					
ANR	357120	CompoundStatement		39:16:1134:1134	356888	1					
ANR	357121	ExpressionStatement	"printf ( ""gcry_cipher_setiv failed:  %s/%s\\n"" , gcry_strsource ( gcryError ) , gcry_strerror ( gcryError ) )"	217:2:5788:5891	356888	0	True				
ANR	357122	CallExpression	"printf ( ""gcry_cipher_setiv failed:  %s/%s\\n"" , gcry_strsource ( gcryError ) , gcry_strerror ( gcryError ) )"		356888	0					
ANR	357123	Callee	printf		356888	0					
ANR	357124	Identifier	printf		356888	0					
ANR	357125	ArgumentList	"""gcry_cipher_setiv failed:  %s/%s\\n"""		356888	1					
ANR	357126	Argument	"""gcry_cipher_setiv failed:  %s/%s\\n"""		356888	0					
ANR	357127	PrimaryExpression	"""gcry_cipher_setiv failed:  %s/%s\\n"""		356888	0					
ANR	357128	Argument	gcry_strsource ( gcryError )		356888	1					
ANR	357129	CallExpression	gcry_strsource ( gcryError )		356888	0					
ANR	357130	Callee	gcry_strsource		356888	0					
ANR	357131	Identifier	gcry_strsource		356888	0					
ANR	357132	ArgumentList	gcryError		356888	1					
ANR	357133	Argument	gcryError		356888	0					
ANR	357134	Identifier	gcryError		356888	0					
ANR	357135	Argument	gcry_strerror ( gcryError )		356888	2					
ANR	357136	CallExpression	gcry_strerror ( gcryError )		356888	0					
ANR	357137	Callee	gcry_strerror		356888	0					
ANR	357138	Identifier	gcry_strerror		356888	0					
ANR	357139	ArgumentList	gcryError		356888	1					
ANR	357140	Argument	gcryError		356888	0					
ANR	357141	Identifier	gcryError		356888	0					
ANR	357142	ExpressionStatement	r = 1	220:2:5895:5900	356888	1	True				
ANR	357143	AssignmentExpression	r = 1		356888	0		=			
ANR	357144	Identifier	r		356888	0					
ANR	357145	PrimaryExpression	1		356888	1					
ANR	357146	GotoStatement	goto done ;	220:9:5902:5911	356888	2	True				
ANR	357147	Identifier	done		356888	0					
ANR	357148	Label	done :	222:0:5916:5920	356888	14	True				
ANR	357149	Identifier	done		356888	0					
ANR	357150	ReturnStatement	return r ;	222:6:5922:5930	356888	15	True				
ANR	357151	Identifier	r		356888	0					
ANR	357152	ReturnType	static int		356888	1					
ANR	357153	Identifier	initCrypt		356888	2					
ANR	357154	ParameterList	FILE * eifp		356888	3					
ANR	357155	Parameter	FILE * eifp	177:10:4637:4646	356888	0	True				
ANR	357156	ParameterType	FILE *		356888	0					
ANR	357157	Identifier	eifp		356888	1					
ANR	357158	CFGEntryNode	ENTRY		356888		True				
ANR	357159	CFGExitNode	EXIT		356888		True				
ANR	357160	Symbol	eifp		356888						
ANR	357161	Symbol	gcry_cipher_setiv		356888						
ANR	357162	Symbol	gcry_chd		356888						
ANR	357163	Symbol	eiGetIV		356888						
ANR	357164	Symbol	& gcry_chd		356888						
ANR	357165	Symbol	gcry_strsource		356888						
ANR	357166	Symbol	gcry_cipher_setkey		356888						
ANR	357167	Symbol	gcry_cipher_get_algo_keylen		356888						
ANR	357168	Symbol	iv		356888						
ANR	357169	Symbol	cry_key		356888						
ANR	357170	Symbol	gcry_cipher_get_algo_blklen		356888						
ANR	357171	Symbol	strlen		356888						
ANR	357172	Symbol	r		356888						
ANR	357173	Symbol	gcry_cipher_open		356888						
ANR	357174	Symbol	keyLength		356888						
ANR	357175	Symbol	cry_algo		356888						
ANR	357176	Symbol	gcry_strerror		356888						
ANR	357177	Symbol	blkLength		356888						
ANR	357178	Symbol	gcryError		356888						
ANR	357179	Symbol	cry_mode		356888						
ANR	357180	Function	removePadding	225:0:5935:6279							
ANR	357181	FunctionDef	"removePadding (char * buf , size_t * plen)"		357180	0					
ANR	357182	CompoundStatement		227:0:5986:6279	357180	0					
ANR	357183	IdentifierDeclStatement	unsigned len = ( unsigned ) * plen ;	228:1:5989:6020	357180	0	True				
ANR	357184	IdentifierDecl	len = ( unsigned ) * plen		357180	0					
ANR	357185	IdentifierDeclType	unsigned		357180	0					
ANR	357186	Identifier	len		357180	1					
ANR	357187	AssignmentExpression	len = ( unsigned ) * plen		357180	2		=			
ANR	357188	Identifier	len		357180	0					
ANR	357189	CastExpression	( unsigned ) * plen		357180	1					
ANR	357190	CastTarget	unsigned		357180	0					
ANR	357191	UnaryOperationExpression	* plen		357180	1					
ANR	357192	UnaryOperator	*		357180	0					
ANR	357193	Identifier	plen		357180	1					
ANR	357194	IdentifierDeclStatement	"unsigned iSrc , iDst ;"	229:1:6023:6042	357180	1	True				
ANR	357195	IdentifierDecl	iSrc		357180	0					
ANR	357196	IdentifierDeclType	unsigned		357180	0					
ANR	357197	Identifier	iSrc		357180	1					
ANR	357198	IdentifierDecl	iDst		357180	1					
ANR	357199	IdentifierDeclType	unsigned		357180	0					
ANR	357200	Identifier	iDst		357180	1					
ANR	357201	IdentifierDeclStatement	char * frstNUL ;	230:1:6045:6058	357180	2	True				
ANR	357202	IdentifierDecl	* frstNUL		357180	0					
ANR	357203	IdentifierDeclType	char *		357180	0					
ANR	357204	Identifier	frstNUL		357180	1					
ANR	357205	ExpressionStatement	"frstNUL = memchr ( buf , 0x00 , * plen )"	232:1:6062:6096	357180	3	True				
ANR	357206	AssignmentExpression	"frstNUL = memchr ( buf , 0x00 , * plen )"		357180	0		=			
ANR	357207	Identifier	frstNUL		357180	0					
ANR	357208	CallExpression	"memchr ( buf , 0x00 , * plen )"		357180	1					
ANR	357209	Callee	memchr		357180	0					
ANR	357210	Identifier	memchr		357180	0					
ANR	357211	ArgumentList	buf		357180	1					
ANR	357212	Argument	buf		357180	0					
ANR	357213	Identifier	buf		357180	0					
ANR	357214	Argument	0x00		357180	1					
ANR	357215	PrimaryExpression	0x00		357180	0					
ANR	357216	Argument	* plen		357180	2					
ANR	357217	UnaryOperationExpression	* plen		357180	0					
ANR	357218	UnaryOperator	*		357180	0					
ANR	357219	Identifier	plen		357180	1					
ANR	357220	IfStatement	if ( frstNUL == NULL )		357180	4					
ANR	357221	Condition	frstNUL == NULL	233:4:6102:6116	357180	0	True				
ANR	357222	EqualityExpression	frstNUL == NULL		357180	0		==			
ANR	357223	Identifier	frstNUL		357180	0					
ANR	357224	Identifier	NULL		357180	1					
ANR	357225	GotoStatement	goto done ;	234:2:6121:6130	357180	1	True				
ANR	357226	Identifier	done		357180	0					
ANR	357227	ExpressionStatement	iDst = iSrc = frstNUL - buf	235:1:6133:6160	357180	5	True				
ANR	357228	AssignmentExpression	iDst = iSrc = frstNUL - buf		357180	0		=			
ANR	357229	Identifier	iDst		357180	0					
ANR	357230	AssignmentExpression	iSrc = frstNUL - buf		357180	1		=			
ANR	357231	Identifier	iSrc		357180	0					
ANR	357232	AdditiveExpression	frstNUL - buf		357180	1		-			
ANR	357233	Identifier	frstNUL		357180	0					
ANR	357234	Identifier	buf		357180	1					
ANR	357235	WhileStatement	while ( iSrc < len )		357180	6					
ANR	357236	Condition	iSrc < len	237:7:6170:6179	357180	0	True				
ANR	357237	RelationalExpression	iSrc < len		357180	0		<			
ANR	357238	Identifier	iSrc		357180	0					
ANR	357239	Identifier	len		357180	1					
ANR	357240	CompoundStatement		11:19:195:195	357180	1					
ANR	357241	IfStatement	if ( buf [ iSrc ] != 0x00 )		357180	0					
ANR	357242	Condition	buf [ iSrc ] != 0x00	238:5:6189:6205	357180	0	True				
ANR	357243	EqualityExpression	buf [ iSrc ] != 0x00		357180	0		!=			
ANR	357244	ArrayIndexing	buf [ iSrc ]		357180	0					
ANR	357245	Identifier	buf		357180	0					
ANR	357246	Identifier	iSrc		357180	1					
ANR	357247	PrimaryExpression	0x00		357180	1					
ANR	357248	ExpressionStatement	buf [ iDst ++ ] = buf [ iSrc ]	239:3:6211:6234	357180	1	True				
ANR	357249	AssignmentExpression	buf [ iDst ++ ] = buf [ iSrc ]		357180	0		=			
ANR	357250	ArrayIndexing	buf [ iDst ++ ]		357180	0					
ANR	357251	Identifier	buf		357180	0					
ANR	357252	PostIncDecOperationExpression	iDst ++		357180	1					
ANR	357253	Identifier	iDst		357180	0					
ANR	357254	IncDec	++		357180	1					
ANR	357255	ArrayIndexing	buf [ iSrc ]		357180	1					
ANR	357256	Identifier	buf		357180	0					
ANR	357257	Identifier	iSrc		357180	1					
ANR	357258	ExpressionStatement	++ iSrc	240:2:6238:6244	357180	1	True				
ANR	357259	UnaryExpression	++ iSrc		357180	0					
ANR	357260	IncDec	++		357180	0					
ANR	357261	Identifier	iSrc		357180	1					
ANR	357262	ExpressionStatement	* plen = iDst	243:1:6251:6263	357180	7	True				
ANR	357263	AssignmentExpression	* plen = iDst		357180	0		=			
ANR	357264	UnaryOperationExpression	* plen		357180	0					
ANR	357265	UnaryOperator	*		357180	0					
ANR	357266	Identifier	plen		357180	1					
ANR	357267	Identifier	iDst		357180	1					
ANR	357268	Label	done :	244:0:6265:6269	357180	8	True				
ANR	357269	Identifier	done		357180	0					
ANR	357270	ReturnStatement	return ;	244:6:6271:6277	357180	9	True				
ANR	357271	ReturnType	static void		357180	1					
ANR	357272	Identifier	removePadding		357180	2					
ANR	357273	ParameterList	"char * buf , size_t * plen"		357180	3					
ANR	357274	Parameter	char * buf	226:14:5961:5969	357180	0	True				
ANR	357275	ParameterType	char *		357180	0					
ANR	357276	Identifier	buf		357180	1					
ANR	357277	Parameter	size_t * plen	226:25:5972:5983	357180	1	True				
ANR	357278	ParameterType	size_t *		357180	0					
ANR	357279	Identifier	plen		357180	1					
ANR	357280	CFGEntryNode	ENTRY		357180		True				
ANR	357281	CFGExitNode	EXIT		357180		True				
ANR	357282	Symbol	plen		357180						
ANR	357283	Symbol	buf		357180						
ANR	357284	Symbol	* buf		357180						
ANR	357285	Symbol	NULL		357180						
ANR	357286	Symbol	len		357180						
ANR	357287	Symbol	frstNUL		357180						
ANR	357288	Symbol	* plen		357180						
ANR	357289	Symbol	iSrc		357180						
ANR	357290	Symbol	memchr		357180						
ANR	357291	Symbol	iDst		357180						
ANR	357292	Symbol	* iSrc		357180						
ANR	357293	Function	decryptBlock	247:0:6282:7214							
ANR	357294	FunctionDef	"decryptBlock (FILE * fpin , FILE * fpout , off64_t blkEnd , off64_t * pCurrOffs)"		357293	0					
ANR	357295	CompoundStatement		249:0:6368:7214	357293	0					
ANR	357296	IdentifierDeclStatement	gcry_error_t gcryError ;	250:1:6371:6393	357293	0	True				
ANR	357297	IdentifierDecl	gcryError		357293	0					
ANR	357298	IdentifierDeclType	gcry_error_t		357293	0					
ANR	357299	Identifier	gcryError		357293	1					
ANR	357300	IdentifierDeclStatement	"size_t nRead , nWritten ;"	251:1:6396:6418	357293	1	True				
ANR	357301	IdentifierDecl	nRead		357293	0					
ANR	357302	IdentifierDeclType	size_t		357293	0					
ANR	357303	Identifier	nRead		357293	1					
ANR	357304	IdentifierDecl	nWritten		357293	1					
ANR	357305	IdentifierDeclType	size_t		357293	0					
ANR	357306	Identifier	nWritten		357293	1					
ANR	357307	IdentifierDeclStatement	size_t toRead ;	252:1:6421:6434	357293	2	True				
ANR	357308	IdentifierDecl	toRead		357293	0					
ANR	357309	IdentifierDeclType	size_t		357293	0					
ANR	357310	Identifier	toRead		357293	1					
ANR	357311	IdentifierDeclStatement	size_t leftTillBlkEnd ;	253:1:6437:6458	357293	3	True				
ANR	357312	IdentifierDecl	leftTillBlkEnd		357293	0					
ANR	357313	IdentifierDeclType	size_t		357293	0					
ANR	357314	Identifier	leftTillBlkEnd		357293	1					
ANR	357315	IdentifierDeclStatement	char buf [ 64 * 1024 ] ;	254:1:6461:6478	357293	4	True				
ANR	357316	IdentifierDecl	buf [ 64 * 1024 ]		357293	0					
ANR	357317	IdentifierDeclType	char [ 64 * 1024 ]		357293	0					
ANR	357318	Identifier	buf		357293	1					
ANR	357319	MultiplicativeExpression	64 * 1024		357293	2		*			
ANR	357320	PrimaryExpression	64		357293	0					
ANR	357321	PrimaryExpression	1024		357293	1					
ANR	357322	ExpressionStatement	leftTillBlkEnd = blkEnd - * pCurrOffs	256:1:6483:6519	357293	5	True				
ANR	357323	AssignmentExpression	leftTillBlkEnd = blkEnd - * pCurrOffs		357293	0		=			
ANR	357324	Identifier	leftTillBlkEnd		357293	0					
ANR	357325	AdditiveExpression	blkEnd - * pCurrOffs		357293	1		-			
ANR	357326	Identifier	blkEnd		357293	0					
ANR	357327	UnaryOperationExpression	* pCurrOffs		357293	1					
ANR	357328	UnaryOperator	*		357293	0					
ANR	357329	Identifier	pCurrOffs		357293	1					
ANR	357330	WhileStatement	while ( 1 )		357293	6					
ANR	357331	Condition	1	257:7:6528:6528	357293	0	True				
ANR	357332	PrimaryExpression	1		357293	0					
ANR	357333	CompoundStatement		9:10:162:162	357293	1					
ANR	357334	ExpressionStatement	toRead = sizeof ( buf ) <= leftTillBlkEnd ? sizeof ( buf ) : leftTillBlkEnd	258:2:6535:6604	357293	0	True				
ANR	357335	AssignmentExpression	toRead = sizeof ( buf ) <= leftTillBlkEnd ? sizeof ( buf ) : leftTillBlkEnd		357293	0		=			
ANR	357336	Identifier	toRead		357293	0					
ANR	357337	ConditionalExpression	sizeof ( buf ) <= leftTillBlkEnd ? sizeof ( buf ) : leftTillBlkEnd		357293	1					
ANR	357338	Condition	sizeof ( buf ) <= leftTillBlkEnd		357293	0					
ANR	357339	RelationalExpression	sizeof ( buf ) <= leftTillBlkEnd		357293	0		<=			
ANR	357340	SizeofExpression	sizeof ( buf )		357293	0					
ANR	357341	Sizeof	sizeof		357293	0					
ANR	357342	SizeofOperand	buf		357293	1					
ANR	357343	Identifier	leftTillBlkEnd		357293	1					
ANR	357344	SizeofExpression	sizeof ( buf )		357293	1					
ANR	357345	Sizeof	sizeof		357293	0					
ANR	357346	SizeofOperand	buf		357293	1					
ANR	357347	Identifier	leftTillBlkEnd		357293	2					
ANR	357348	ExpressionStatement	toRead = toRead - toRead % blkLength	259:2:6608:6644	357293	1	True				
ANR	357349	AssignmentExpression	toRead = toRead - toRead % blkLength		357293	0		=			
ANR	357350	Identifier	toRead		357293	0					
ANR	357351	AdditiveExpression	toRead - toRead % blkLength		357293	1		-			
ANR	357352	Identifier	toRead		357293	0					
ANR	357353	MultiplicativeExpression	toRead % blkLength		357293	1		%			
ANR	357354	Identifier	toRead		357293	0					
ANR	357355	Identifier	blkLength		357293	1					
ANR	357356	ExpressionStatement	"nRead = fread ( buf , 1 , toRead , fpin )"	260:2:6648:6683	357293	2	True				
ANR	357357	AssignmentExpression	"nRead = fread ( buf , 1 , toRead , fpin )"		357293	0		=			
ANR	357358	Identifier	nRead		357293	0					
ANR	357359	CallExpression	"fread ( buf , 1 , toRead , fpin )"		357293	1					
ANR	357360	Callee	fread		357293	0					
ANR	357361	Identifier	fread		357293	0					
ANR	357362	ArgumentList	buf		357293	1					
ANR	357363	Argument	buf		357293	0					
ANR	357364	Identifier	buf		357293	0					
ANR	357365	Argument	1		357293	1					
ANR	357366	PrimaryExpression	1		357293	0					
ANR	357367	Argument	toRead		357293	2					
ANR	357368	Identifier	toRead		357293	0					
ANR	357369	Argument	fpin		357293	3					
ANR	357370	Identifier	fpin		357293	0					
ANR	357371	IfStatement	if ( nRead == 0 )		357293	3					
ANR	357372	Condition	nRead == 0	261:5:6690:6699	357293	0	True				
ANR	357373	EqualityExpression	nRead == 0		357293	0		==			
ANR	357374	Identifier	nRead		357293	0					
ANR	357375	PrimaryExpression	0		357293	1					
ANR	357376	BreakStatement	break ;	262:3:6705:6710	357293	1	True				
ANR	357377	ExpressionStatement	"leftTillBlkEnd -= nRead , * pCurrOffs += nRead"	263:2:6714:6758	357293	4	True				
ANR	357378	Expression	"leftTillBlkEnd -= nRead , * pCurrOffs += nRead"		357293	0					
ANR	357379	AssignmentExpression	leftTillBlkEnd -= nRead		357293	0		-=			
ANR	357380	Identifier	leftTillBlkEnd		357293	0					
ANR	357381	Identifier	nRead		357293	1					
ANR	357382	AssignmentExpression	* pCurrOffs += nRead		357293	1		+=			
ANR	357383	UnaryOperationExpression	* pCurrOffs		357293	0					
ANR	357384	UnaryOperator	*		357293	0					
ANR	357385	Identifier	pCurrOffs		357293	1					
ANR	357386	Identifier	nRead		357293	1					
ANR	357387	ExpressionStatement	"gcryError = gcry_cipher_decrypt ( gcry_chd , buf , nRead , NULL , 0 )"	264:2:6762:6910	357293	5	True				
ANR	357388	AssignmentExpression	"gcryError = gcry_cipher_decrypt ( gcry_chd , buf , nRead , NULL , 0 )"		357293	0		=			
ANR	357389	Identifier	gcryError		357293	0					
ANR	357390	CallExpression	"gcry_cipher_decrypt ( gcry_chd , buf , nRead , NULL , 0 )"		357293	1					
ANR	357391	Callee	gcry_cipher_decrypt		357293	0					
ANR	357392	Identifier	gcry_cipher_decrypt		357293	0					
ANR	357393	ArgumentList	gcry_chd		357293	1					
ANR	357394	Argument	gcry_chd		357293	0					
ANR	357395	Identifier	gcry_chd		357293	0					
ANR	357396	Argument	buf		357293	1					
ANR	357397	Identifier	buf		357293	0					
ANR	357398	Argument	nRead		357293	2					
ANR	357399	Identifier	nRead		357293	0					
ANR	357400	Argument	NULL		357293	3					
ANR	357401	Identifier	NULL		357293	0					
ANR	357402	Argument	0		357293	4					
ANR	357403	PrimaryExpression	0		357293	0					
ANR	357404	IfStatement	if ( gcryError )		357293	6					
ANR	357405	Condition	gcryError	270:6:6930:6938	357293	0	True				
ANR	357406	Identifier	gcryError		357293	0					
ANR	357407	CompoundStatement		22:17:572:572	357293	1					
ANR	357408	ExpressionStatement	"fprintf ( stderr , ""gcry_cipher_decrypt failed:  %s/%s\\n"" , gcry_strsource ( gcryError ) , gcry_strerror ( gcryError ) )"	271:3:6946:7060	357293	0	True				
ANR	357409	CallExpression	"fprintf ( stderr , ""gcry_cipher_decrypt failed:  %s/%s\\n"" , gcry_strsource ( gcryError ) , gcry_strerror ( gcryError ) )"		357293	0					
ANR	357410	Callee	fprintf		357293	0					
ANR	357411	Identifier	fprintf		357293	0					
ANR	357412	ArgumentList	stderr		357293	1					
ANR	357413	Argument	stderr		357293	0					
ANR	357414	Identifier	stderr		357293	0					
ANR	357415	Argument	"""gcry_cipher_decrypt failed:  %s/%s\\n"""		357293	1					
ANR	357416	PrimaryExpression	"""gcry_cipher_decrypt failed:  %s/%s\\n"""		357293	0					
ANR	357417	Argument	gcry_strsource ( gcryError )		357293	2					
ANR	357418	CallExpression	gcry_strsource ( gcryError )		357293	0					
ANR	357419	Callee	gcry_strsource		357293	0					
ANR	357420	Identifier	gcry_strsource		357293	0					
ANR	357421	ArgumentList	gcryError		357293	1					
ANR	357422	Argument	gcryError		357293	0					
ANR	357423	Identifier	gcryError		357293	0					
ANR	357424	Argument	gcry_strerror ( gcryError )		357293	3					
ANR	357425	CallExpression	gcry_strerror ( gcryError )		357293	0					
ANR	357426	Callee	gcry_strerror		357293	0					
ANR	357427	Identifier	gcry_strerror		357293	0					
ANR	357428	ArgumentList	gcryError		357293	1					
ANR	357429	Argument	gcryError		357293	0					
ANR	357430	Identifier	gcryError		357293	0					
ANR	357431	ReturnStatement	return ;	274:3:7065:7071	357293	1	True				
ANR	357432	ExpressionStatement	"removePadding ( buf , & nRead )"	276:2:7079:7105	357293	7	True				
ANR	357433	CallExpression	"removePadding ( buf , & nRead )"		357293	0					
ANR	357434	Callee	removePadding		357293	0					
ANR	357435	Identifier	removePadding		357293	0					
ANR	357436	ArgumentList	buf		357293	1					
ANR	357437	Argument	buf		357293	0					
ANR	357438	Identifier	buf		357293	0					
ANR	357439	Argument	& nRead		357293	1					
ANR	357440	UnaryOperationExpression	& nRead		357293	0					
ANR	357441	UnaryOperator	&		357293	0					
ANR	357442	Identifier	nRead		357293	1					
ANR	357443	ExpressionStatement	"nWritten = fwrite ( buf , 1 , nRead , fpout )"	277:2:7109:7148	357293	8	True				
ANR	357444	AssignmentExpression	"nWritten = fwrite ( buf , 1 , nRead , fpout )"		357293	0		=			
ANR	357445	Identifier	nWritten		357293	0					
ANR	357446	CallExpression	"fwrite ( buf , 1 , nRead , fpout )"		357293	1					
ANR	357447	Callee	fwrite		357293	0					
ANR	357448	Identifier	fwrite		357293	0					
ANR	357449	ArgumentList	buf		357293	1					
ANR	357450	Argument	buf		357293	0					
ANR	357451	Identifier	buf		357293	0					
ANR	357452	Argument	1		357293	1					
ANR	357453	PrimaryExpression	1		357293	0					
ANR	357454	Argument	nRead		357293	2					
ANR	357455	Identifier	nRead		357293	0					
ANR	357456	Argument	fpout		357293	3					
ANR	357457	Identifier	fpout		357293	0					
ANR	357458	IfStatement	if ( nWritten != nRead )		357293	9					
ANR	357459	Condition	nWritten != nRead	278:5:7155:7171	357293	0	True				
ANR	357460	EqualityExpression	nWritten != nRead		357293	0		!=			
ANR	357461	Identifier	nWritten		357293	0					
ANR	357462	Identifier	nRead		357293	1					
ANR	357463	CompoundStatement		30:24:805:805	357293	1					
ANR	357464	ExpressionStatement	"perror ( ""fpout"" )"	279:3:7179:7194	357293	0	True				
ANR	357465	CallExpression	"perror ( ""fpout"" )"		357293	0					
ANR	357466	Callee	perror		357293	0					
ANR	357467	Identifier	perror		357293	0					
ANR	357468	ArgumentList	"""fpout"""		357293	1					
ANR	357469	Argument	"""fpout"""		357293	0					
ANR	357470	PrimaryExpression	"""fpout"""		357293	0					
ANR	357471	ReturnStatement	return ;	280:3:7199:7205	357293	1	True				
ANR	357472	ReturnType	static void		357293	1					
ANR	357473	Identifier	decryptBlock		357293	2					
ANR	357474	ParameterList	"FILE * fpin , FILE * fpout , off64_t blkEnd , off64_t * pCurrOffs"		357293	3					
ANR	357475	Parameter	FILE * fpin	248:13:6307:6316	357293	0	True				
ANR	357476	ParameterType	FILE *		357293	0					
ANR	357477	Identifier	fpin		357293	1					
ANR	357478	Parameter	FILE * fpout	248:25:6319:6329	357293	1	True				
ANR	357479	ParameterType	FILE *		357293	0					
ANR	357480	Identifier	fpout		357293	1					
ANR	357481	Parameter	off64_t blkEnd	248:38:6332:6345	357293	2	True				
ANR	357482	ParameterType	off64_t		357293	0					
ANR	357483	Identifier	blkEnd		357293	1					
ANR	357484	Parameter	off64_t * pCurrOffs	248:54:6348:6365	357293	3	True				
ANR	357485	ParameterType	off64_t *		357293	0					
ANR	357486	Identifier	pCurrOffs		357293	1					
ANR	357487	CFGEntryNode	ENTRY		357293		True				
ANR	357488	CFGExitNode	EXIT		357293		True				
ANR	357489	Symbol	NULL		357293						
ANR	357490	Symbol	gcry_chd		357293						
ANR	357491	Symbol	blkEnd		357293						
ANR	357492	Symbol	toRead		357293						
ANR	357493	Symbol	gcry_cipher_decrypt		357293						
ANR	357494	Symbol	gcry_strsource		357293						
ANR	357495	Symbol	fwrite		357293						
ANR	357496	Symbol	pCurrOffs		357293						
ANR	357497	Symbol	stderr		357293						
ANR	357498	Symbol	fread		357293						
ANR	357499	Symbol	nWritten		357293						
ANR	357500	Symbol	leftTillBlkEnd		357293						
ANR	357501	Symbol	nRead		357293						
ANR	357502	Symbol	* pCurrOffs		357293						
ANR	357503	Symbol	buf		357293						
ANR	357504	Symbol	fpout		357293						
ANR	357505	Symbol	gcry_strerror		357293						
ANR	357506	Symbol	& nRead		357293						
ANR	357507	Symbol	blkLength		357293						
ANR	357508	Symbol	gcryError		357293						
ANR	357509	Symbol	fpin		357293						
ANR	357510	Function	doDecrypt	286:0:7218:7920							
ANR	357511	FunctionDef	"doDecrypt (FILE * logfp , FILE * eifp , FILE * outfp)"		357510	0					
ANR	357512	CompoundStatement		288:0:7277:7920	357510	0					
ANR	357513	IdentifierDeclStatement	off64_t blkEnd ;	289:1:7280:7294	357510	0	True				
ANR	357514	IdentifierDecl	blkEnd		357510	0					
ANR	357515	IdentifierDeclType	off64_t		357510	0					
ANR	357516	Identifier	blkEnd		357510	1					
ANR	357517	IdentifierDeclStatement	off64_t currOffs = 0 ;	290:1:7297:7317	357510	1	True				
ANR	357518	IdentifierDecl	currOffs = 0		357510	0					
ANR	357519	IdentifierDeclType	off64_t		357510	0					
ANR	357520	Identifier	currOffs		357510	1					
ANR	357521	AssignmentExpression	currOffs = 0		357510	2		=			
ANR	357522	Identifier	currOffs		357510	0					
ANR	357523	PrimaryExpression	0		357510	1					
ANR	357524	IdentifierDeclStatement	int r = 1 ;	291:1:7320:7329	357510	2	True				
ANR	357525	IdentifierDecl	r = 1		357510	0					
ANR	357526	IdentifierDeclType	int		357510	0					
ANR	357527	Identifier	r		357510	1					
ANR	357528	AssignmentExpression	r = 1		357510	2		=			
ANR	357529	Identifier	r		357510	0					
ANR	357530	PrimaryExpression	1		357510	1					
ANR	357531	IdentifierDeclStatement	int fd ;	292:1:7332:7338	357510	3	True				
ANR	357532	IdentifierDecl	fd		357510	0					
ANR	357533	IdentifierDeclType	int		357510	0					
ANR	357534	Identifier	fd		357510	1					
ANR	357535	IdentifierDeclStatement	struct stat buf ;	293:8:7348:7363	357510	4	True				
ANR	357536	IdentifierDecl	buf		357510	0					
ANR	357537	IdentifierDeclType	struct stat		357510	0					
ANR	357538	Identifier	buf		357510	1					
ANR	357539	WhileStatement	while ( 1 )		357510	5					
ANR	357540	Condition	1	295:7:7373:7373	357510	0	True				
ANR	357541	PrimaryExpression	1		357510	0					
ANR	357542	CompoundStatement		8:10:98:98	357510	1					
ANR	357543	IfStatement	if ( initCrypt ( eifp ) != 0 )		357510	0					
ANR	357544	Condition	initCrypt ( eifp ) != 0	297:5:7405:7424	357510	0	True				
ANR	357545	EqualityExpression	initCrypt ( eifp ) != 0		357510	0		!=			
ANR	357546	CallExpression	initCrypt ( eifp )		357510	0					
ANR	357547	Callee	initCrypt		357510	0					
ANR	357548	Identifier	initCrypt		357510	0					
ANR	357549	ArgumentList	eifp		357510	1					
ANR	357550	Argument	eifp		357510	0					
ANR	357551	Identifier	eifp		357510	0					
ANR	357552	PrimaryExpression	0		357510	1					
ANR	357553	GotoStatement	goto done ;	298:3:7430:7439	357510	1	True				
ANR	357554	Identifier	done		357510	0					
ANR	357555	IfStatement	if ( ( fd = fileno ( logfp ) ) == - 1 )		357510	1					
ANR	357556	Condition	( fd = fileno ( logfp ) ) == - 1	300:19:7509:7534	357510	0	True				
ANR	357557	EqualityExpression	( fd = fileno ( logfp ) ) == - 1		357510	0		==			
ANR	357558	AssignmentExpression	fd = fileno ( logfp )		357510	0		=			
ANR	357559	Identifier	fd		357510	0					
ANR	357560	CallExpression	fileno ( logfp )		357510	1					
ANR	357561	Callee	fileno		357510	0					
ANR	357562	Identifier	fileno		357510	0					
ANR	357563	ArgumentList	logfp		357510	1					
ANR	357564	Argument	logfp		357510	0					
ANR	357565	Identifier	logfp		357510	0					
ANR	357566	UnaryOperationExpression	- 1		357510	1					
ANR	357567	UnaryOperator	-		357510	0					
ANR	357568	PrimaryExpression	1		357510	1					
ANR	357569	CompoundStatement		13:47:259:259	357510	1					
ANR	357570	ExpressionStatement	r = - 1	301:24:7563:7569	357510	0	True				
ANR	357571	AssignmentExpression	r = - 1		357510	0		=			
ANR	357572	Identifier	r		357510	0					
ANR	357573	UnaryOperationExpression	- 1		357510	1					
ANR	357574	UnaryOperator	-		357510	0					
ANR	357575	PrimaryExpression	1		357510	1					
ANR	357576	GotoStatement	goto done ;	302:24:7595:7604	357510	1	True				
ANR	357577	Identifier	done		357510	0					
ANR	357578	IfStatement	"if ( ( r = fstat ( fd , & buf ) ) != 0 )"		357510	2					
ANR	357579	Condition	"( r = fstat ( fd , & buf ) ) != 0"	304:19:7643:7668	357510	0	True				
ANR	357580	EqualityExpression	"( r = fstat ( fd , & buf ) ) != 0"		357510	0		!=			
ANR	357581	AssignmentExpression	"r = fstat ( fd , & buf )"		357510	0		=			
ANR	357582	Identifier	r		357510	0					
ANR	357583	CallExpression	"fstat ( fd , & buf )"		357510	1					
ANR	357584	Callee	fstat		357510	0					
ANR	357585	Identifier	fstat		357510	0					
ANR	357586	ArgumentList	fd		357510	1					
ANR	357587	Argument	fd		357510	0					
ANR	357588	Identifier	fd		357510	0					
ANR	357589	Argument	& buf		357510	1					
ANR	357590	UnaryOperationExpression	& buf		357510	0					
ANR	357591	UnaryOperator	&		357510	0					
ANR	357592	Identifier	buf		357510	1					
ANR	357593	PrimaryExpression	0		357510	1					
ANR	357594	GotoStatement	goto done ;	304:47:7671:7680	357510	1	True				
ANR	357595	Identifier	done		357510	0					
ANR	357596	ExpressionStatement	blkEnd = buf . st_size	305:16:7698:7718	357510	3	True				
ANR	357597	AssignmentExpression	blkEnd = buf . st_size		357510	0		=			
ANR	357598	Identifier	blkEnd		357510	0					
ANR	357599	MemberAccess	buf . st_size		357510	1					
ANR	357600	Identifier	buf		357510	0					
ANR	357601	Identifier	st_size		357510	1					
ANR	357602	ExpressionStatement	"r = eiGetEND ( eifp , & blkEnd )"	306:16:7736:7763	357510	4	True				
ANR	357603	AssignmentExpression	"r = eiGetEND ( eifp , & blkEnd )"		357510	0		=			
ANR	357604	Identifier	r		357510	0					
ANR	357605	CallExpression	"eiGetEND ( eifp , & blkEnd )"		357510	1					
ANR	357606	Callee	eiGetEND		357510	0					
ANR	357607	Identifier	eiGetEND		357510	0					
ANR	357608	ArgumentList	eifp		357510	1					
ANR	357609	Argument	eifp		357510	0					
ANR	357610	Identifier	eifp		357510	0					
ANR	357611	Argument	& blkEnd		357510	1					
ANR	357612	UnaryOperationExpression	& blkEnd		357510	0					
ANR	357613	UnaryOperator	&		357510	0					
ANR	357614	Identifier	blkEnd		357510	1					
ANR	357615	IfStatement	if ( r != 0 && r != 1 )		357510	5					
ANR	357616	Condition	r != 0 && r != 1	307:19:7784:7799	357510	0	True				
ANR	357617	AndExpression	r != 0 && r != 1		357510	0		&&			
ANR	357618	EqualityExpression	r != 0		357510	0		!=			
ANR	357619	Identifier	r		357510	0					
ANR	357620	PrimaryExpression	0		357510	1					
ANR	357621	EqualityExpression	r != 1		357510	1		!=			
ANR	357622	Identifier	r		357510	0					
ANR	357623	PrimaryExpression	1		357510	1					
ANR	357624	GotoStatement	goto done ;	307:37:7802:7811	357510	1	True				
ANR	357625	Identifier	done		357510	0					
ANR	357626	ExpressionStatement	"decryptBlock ( logfp , outfp , blkEnd , & currOffs )"	308:2:7815:7860	357510	6	True				
ANR	357627	CallExpression	"decryptBlock ( logfp , outfp , blkEnd , & currOffs )"		357510	0					
ANR	357628	Callee	decryptBlock		357510	0					
ANR	357629	Identifier	decryptBlock		357510	0					
ANR	357630	ArgumentList	logfp		357510	1					
ANR	357631	Argument	logfp		357510	0					
ANR	357632	Identifier	logfp		357510	0					
ANR	357633	Argument	outfp		357510	1					
ANR	357634	Identifier	outfp		357510	0					
ANR	357635	Argument	blkEnd		357510	2					
ANR	357636	Identifier	blkEnd		357510	0					
ANR	357637	Argument	& currOffs		357510	3					
ANR	357638	UnaryOperationExpression	& currOffs		357510	0					
ANR	357639	UnaryOperator	&		357510	0					
ANR	357640	Identifier	currOffs		357510	1					
ANR	357641	ExpressionStatement	gcry_cipher_close ( gcry_chd )	309:2:7864:7891	357510	7	True				
ANR	357642	CallExpression	gcry_cipher_close ( gcry_chd )		357510	0					
ANR	357643	Callee	gcry_cipher_close		357510	0					
ANR	357644	Identifier	gcry_cipher_close		357510	0					
ANR	357645	ArgumentList	gcry_chd		357510	1					
ANR	357646	Argument	gcry_chd		357510	0					
ANR	357647	Identifier	gcry_chd		357510	0					
ANR	357648	ExpressionStatement	r = 0	311:1:7897:7902	357510	6	True				
ANR	357649	AssignmentExpression	r = 0		357510	0		=			
ANR	357650	Identifier	r		357510	0					
ANR	357651	PrimaryExpression	0		357510	1					
ANR	357652	Label	done :	312:0:7904:7908	357510	7	True				
ANR	357653	Identifier	done		357510	0					
ANR	357654	ReturnStatement	return r ;	312:6:7910:7918	357510	8	True				
ANR	357655	Identifier	r		357510	0					
ANR	357656	ReturnType	static int		357510	1					
ANR	357657	Identifier	doDecrypt		357510	2					
ANR	357658	ParameterList	"FILE * logfp , FILE * eifp , FILE * outfp"		357510	3					
ANR	357659	Parameter	FILE * logfp	287:10:7239:7249	357510	0	True				
ANR	357660	ParameterType	FILE *		357510	0					
ANR	357661	Identifier	logfp		357510	1					
ANR	357662	Parameter	FILE * eifp	287:23:7252:7261	357510	1	True				
ANR	357663	ParameterType	FILE *		357510	0					
ANR	357664	Identifier	eifp		357510	1					
ANR	357665	Parameter	FILE * outfp	287:35:7264:7274	357510	2	True				
ANR	357666	ParameterType	FILE *		357510	0					
ANR	357667	Identifier	outfp		357510	1					
ANR	357668	CFGEntryNode	ENTRY		357510		True				
ANR	357669	CFGExitNode	EXIT		357510		True				
ANR	357670	Symbol	eifp		357510						
ANR	357671	Symbol	gcry_chd		357510						
ANR	357672	Symbol	blkEnd		357510						
ANR	357673	Symbol	& blkEnd		357510						
ANR	357674	Symbol	& currOffs		357510						
ANR	357675	Symbol	initCrypt		357510						
ANR	357676	Symbol	buf . st_size		357510						
ANR	357677	Symbol	fstat		357510						
ANR	357678	Symbol	logfp		357510						
ANR	357679	Symbol	outfp		357510						
ANR	357680	Symbol	r		357510						
ANR	357681	Symbol	buf		357510						
ANR	357682	Symbol	fileno		357510						
ANR	357683	Symbol	currOffs		357510						
ANR	357684	Symbol	eiGetEND		357510						
ANR	357685	Symbol	fd		357510						
ANR	357686	Symbol	& buf		357510						
ANR	357687	Function	decrypt	315:0:7923:8656							
ANR	357688	FunctionDef	decrypt (const char * name)		357687	0					
ANR	357689	CompoundStatement		317:0:7961:8656	357687	0					
ANR	357690	IdentifierDeclStatement	"FILE * logfp = NULL , * eifp = NULL ;"	318:1:7964:7996	357687	0	True				
ANR	357691	IdentifierDecl	* logfp = NULL		357687	0					
ANR	357692	IdentifierDeclType	FILE *		357687	0					
ANR	357693	Identifier	logfp		357687	1					
ANR	357694	AssignmentExpression	* logfp = NULL		357687	2		=			
ANR	357695	Identifier	NULL		357687	0					
ANR	357696	Identifier	NULL		357687	1					
ANR	357697	IdentifierDecl	* eifp = NULL		357687	1					
ANR	357698	IdentifierDeclType	FILE *		357687	0					
ANR	357699	Identifier	eifp		357687	1					
ANR	357700	AssignmentExpression	* eifp = NULL		357687	2		=			
ANR	357701	Identifier	NULL		357687	0					
ANR	357702	Identifier	NULL		357687	1					
ANR	357703	IdentifierDeclStatement	int r = 0 ;	319:1:7999:8008	357687	1	True				
ANR	357704	IdentifierDecl	r = 0		357687	0					
ANR	357705	IdentifierDeclType	int		357687	0					
ANR	357706	Identifier	r		357687	1					
ANR	357707	AssignmentExpression	r = 0		357687	2		=			
ANR	357708	Identifier	r		357687	0					
ANR	357709	PrimaryExpression	0		357687	1					
ANR	357710	IdentifierDeclStatement	char eifname [ 4096 ] ;	320:1:8011:8029	357687	2	True				
ANR	357711	IdentifierDecl	eifname [ 4096 ]		357687	0					
ANR	357712	IdentifierDeclType	char [ 4096 ]		357687	0					
ANR	357713	Identifier	eifname		357687	1					
ANR	357714	PrimaryExpression	4096		357687	2					
ANR	357715	IfStatement	"if ( ! strcmp ( name , ""-"" ) )"		357687	3					
ANR	357716	Condition	"! strcmp ( name , ""-"" )"	322:4:8037:8054	357687	0	True				
ANR	357717	UnaryOperationExpression	"! strcmp ( name , ""-"" )"		357687	0					
ANR	357718	UnaryOperator	!		357687	0					
ANR	357719	CallExpression	"strcmp ( name , ""-"" )"		357687	1					
ANR	357720	Callee	strcmp		357687	0					
ANR	357721	Identifier	strcmp		357687	0					
ANR	357722	ArgumentList	name		357687	1					
ANR	357723	Argument	name		357687	0					
ANR	357724	Identifier	name		357687	0					
ANR	357725	Argument	"""-"""		357687	1					
ANR	357726	PrimaryExpression	"""-"""		357687	0					
ANR	357727	CompoundStatement		6:24:95:95	357687	1					
ANR	357728	ExpressionStatement	"fprintf ( stderr , ""decrypt mode cannot work on stdin\\n"" )"	323:2:8061:8115	357687	0	True				
ANR	357729	CallExpression	"fprintf ( stderr , ""decrypt mode cannot work on stdin\\n"" )"		357687	0					
ANR	357730	Callee	fprintf		357687	0					
ANR	357731	Identifier	fprintf		357687	0					
ANR	357732	ArgumentList	stderr		357687	1					
ANR	357733	Argument	stderr		357687	0					
ANR	357734	Identifier	stderr		357687	0					
ANR	357735	Argument	"""decrypt mode cannot work on stdin\\n"""		357687	1					
ANR	357736	PrimaryExpression	"""decrypt mode cannot work on stdin\\n"""		357687	0					
ANR	357737	GotoStatement	goto err ;	324:2:8119:8127	357687	1	True				
ANR	357738	Identifier	err		357687	0					
ANR	357739	ElseStatement	else		357687	0					
ANR	357740	CompoundStatement		9:8:175:175	357687	0					
ANR	357741	IfStatement	"if ( ( logfp = fopen ( name , ""r"" ) ) == NULL )"		357687	0					
ANR	357742	Condition	"( logfp = fopen ( name , ""r"" ) ) == NULL"	326:5:8144:8177	357687	0	True				
ANR	357743	EqualityExpression	"( logfp = fopen ( name , ""r"" ) ) == NULL"		357687	0		==			
ANR	357744	AssignmentExpression	"logfp = fopen ( name , ""r"" )"		357687	0		=			
ANR	357745	Identifier	logfp		357687	0					
ANR	357746	CallExpression	"fopen ( name , ""r"" )"		357687	1					
ANR	357747	Callee	fopen		357687	0					
ANR	357748	Identifier	fopen		357687	0					
ANR	357749	ArgumentList	name		357687	1					
ANR	357750	Argument	name		357687	0					
ANR	357751	Identifier	name		357687	0					
ANR	357752	Argument	"""r"""		357687	1					
ANR	357753	PrimaryExpression	"""r"""		357687	0					
ANR	357754	Identifier	NULL		357687	1					
ANR	357755	CompoundStatement		10:41:218:218	357687	1					
ANR	357756	ExpressionStatement	perror ( name )	327:3:8185:8197	357687	0	True				
ANR	357757	CallExpression	perror ( name )		357687	0					
ANR	357758	Callee	perror		357687	0					
ANR	357759	Identifier	perror		357687	0					
ANR	357760	ArgumentList	name		357687	1					
ANR	357761	Argument	name		357687	0					
ANR	357762	Identifier	name		357687	0					
ANR	357763	GotoStatement	goto err ;	328:3:8202:8210	357687	1	True				
ANR	357764	Identifier	err		357687	0					
ANR	357765	ExpressionStatement	"snprintf ( eifname , sizeof ( eifname ) , ""%s%s"" , name , ENCINFO_SUFFIX )"	330:2:8218:8282	357687	1	True				
ANR	357766	CallExpression	"snprintf ( eifname , sizeof ( eifname ) , ""%s%s"" , name , ENCINFO_SUFFIX )"		357687	0					
ANR	357767	Callee	snprintf		357687	0					
ANR	357768	Identifier	snprintf		357687	0					
ANR	357769	ArgumentList	eifname		357687	1					
ANR	357770	Argument	eifname		357687	0					
ANR	357771	Identifier	eifname		357687	0					
ANR	357772	Argument	sizeof ( eifname )		357687	1					
ANR	357773	SizeofExpression	sizeof ( eifname )		357687	0					
ANR	357774	Sizeof	sizeof		357687	0					
ANR	357775	SizeofOperand	eifname		357687	1					
ANR	357776	Argument	"""%s%s"""		357687	2					
ANR	357777	PrimaryExpression	"""%s%s"""		357687	0					
ANR	357778	Argument	name		357687	3					
ANR	357779	Identifier	name		357687	0					
ANR	357780	Argument	ENCINFO_SUFFIX		357687	4					
ANR	357781	Identifier	ENCINFO_SUFFIX		357687	0					
ANR	357782	ExpressionStatement	eifname [ sizeof ( eifname ) - 1 ] = '\\0'	331:2:8286:8319	357687	2	True				
ANR	357783	AssignmentExpression	eifname [ sizeof ( eifname ) - 1 ] = '\\0'		357687	0		=			
ANR	357784	ArrayIndexing	eifname [ sizeof ( eifname ) - 1 ]		357687	0					
ANR	357785	Identifier	eifname		357687	0					
ANR	357786	AdditiveExpression	sizeof ( eifname ) - 1		357687	1		-			
ANR	357787	SizeofExpression	sizeof ( eifname )		357687	0					
ANR	357788	Sizeof	sizeof		357687	0					
ANR	357789	SizeofOperand	eifname		357687	1					
ANR	357790	PrimaryExpression	1		357687	1					
ANR	357791	PrimaryExpression	'\\0'		357687	1					
ANR	357792	IfStatement	"if ( ( eifp = fopen ( eifname , ""r"" ) ) == NULL )"		357687	3					
ANR	357793	Condition	"( eifp = fopen ( eifname , ""r"" ) ) == NULL"	332:5:8326:8361	357687	0	True				
ANR	357794	EqualityExpression	"( eifp = fopen ( eifname , ""r"" ) ) == NULL"		357687	0		==			
ANR	357795	AssignmentExpression	"eifp = fopen ( eifname , ""r"" )"		357687	0		=			
ANR	357796	Identifier	eifp		357687	0					
ANR	357797	CallExpression	"fopen ( eifname , ""r"" )"		357687	1					
ANR	357798	Callee	fopen		357687	0					
ANR	357799	Identifier	fopen		357687	0					
ANR	357800	ArgumentList	eifname		357687	1					
ANR	357801	Argument	eifname		357687	0					
ANR	357802	Identifier	eifname		357687	0					
ANR	357803	Argument	"""r"""		357687	1					
ANR	357804	PrimaryExpression	"""r"""		357687	0					
ANR	357805	Identifier	NULL		357687	1					
ANR	357806	CompoundStatement		16:43:402:402	357687	1					
ANR	357807	ExpressionStatement	perror ( eifname )	333:3:8369:8384	357687	0	True				
ANR	357808	CallExpression	perror ( eifname )		357687	0					
ANR	357809	Callee	perror		357687	0					
ANR	357810	Identifier	perror		357687	0					
ANR	357811	ArgumentList	eifname		357687	1					
ANR	357812	Argument	eifname		357687	0					
ANR	357813	Identifier	eifname		357687	0					
ANR	357814	GotoStatement	goto err ;	334:3:8389:8397	357687	1	True				
ANR	357815	Identifier	err		357687	0					
ANR	357816	IfStatement	if ( eiCheckFiletype ( eifp ) != 0 )		357687	4					
ANR	357817	Condition	eiCheckFiletype ( eifp ) != 0	336:5:8408:8433	357687	0	True				
ANR	357818	EqualityExpression	eiCheckFiletype ( eifp ) != 0		357687	0		!=			
ANR	357819	CallExpression	eiCheckFiletype ( eifp )		357687	0					
ANR	357820	Callee	eiCheckFiletype		357687	0					
ANR	357821	Identifier	eiCheckFiletype		357687	0					
ANR	357822	ArgumentList	eifp		357687	1					
ANR	357823	Argument	eifp		357687	0					
ANR	357824	Identifier	eifp		357687	0					
ANR	357825	PrimaryExpression	0		357687	1					
ANR	357826	GotoStatement	goto err ;	337:3:8439:8447	357687	1	True				
ANR	357827	Identifier	err		357687	0					
ANR	357828	ExpressionStatement	"doDecrypt ( logfp , eifp , stdout )"	340:1:8454:8484	357687	4	True				
ANR	357829	CallExpression	"doDecrypt ( logfp , eifp , stdout )"		357687	0					
ANR	357830	Callee	doDecrypt		357687	0					
ANR	357831	Identifier	doDecrypt		357687	0					
ANR	357832	ArgumentList	logfp		357687	1					
ANR	357833	Argument	logfp		357687	0					
ANR	357834	Identifier	logfp		357687	0					
ANR	357835	Argument	eifp		357687	1					
ANR	357836	Identifier	eifp		357687	0					
ANR	357837	Argument	stdout		357687	2					
ANR	357838	Identifier	stdout		357687	0					
ANR	357839	ExpressionStatement	fclose ( logfp )	342:1:8488:8501	357687	5	True				
ANR	357840	CallExpression	fclose ( logfp )		357687	0					
ANR	357841	Callee	fclose		357687	0					
ANR	357842	Identifier	fclose		357687	0					
ANR	357843	ArgumentList	logfp		357687	1					
ANR	357844	Argument	logfp		357687	0					
ANR	357845	Identifier	logfp		357687	0					
ANR	357846	ExpressionStatement	logfp = NULL	342:16:8503:8515	357687	6	True				
ANR	357847	AssignmentExpression	logfp = NULL		357687	0		=			
ANR	357848	Identifier	logfp		357687	0					
ANR	357849	Identifier	NULL		357687	1					
ANR	357850	ExpressionStatement	fclose ( eifp )	343:1:8518:8530	357687	7	True				
ANR	357851	CallExpression	fclose ( eifp )		357687	0					
ANR	357852	Callee	fclose		357687	0					
ANR	357853	Identifier	fclose		357687	0					
ANR	357854	ArgumentList	eifp		357687	1					
ANR	357855	Argument	eifp		357687	0					
ANR	357856	Identifier	eifp		357687	0					
ANR	357857	ExpressionStatement	eifp = NULL	343:15:8532:8543	357687	8	True				
ANR	357858	AssignmentExpression	eifp = NULL		357687	0		=			
ANR	357859	Identifier	eifp		357687	0					
ANR	357860	Identifier	NULL		357687	1					
ANR	357861	ReturnStatement	return ;	344:1:8546:8552	357687	9	True				
ANR	357862	Label	err :	346:0:8555:8558	357687	10	True				
ANR	357863	Identifier	err		357687	0					
ANR	357864	ExpressionStatement	"fprintf ( stderr , ""error %d processing file %s\\n"" , r , name )"	347:1:8561:8618	357687	11	True				
ANR	357865	CallExpression	"fprintf ( stderr , ""error %d processing file %s\\n"" , r , name )"		357687	0					
ANR	357866	Callee	fprintf		357687	0					
ANR	357867	Identifier	fprintf		357687	0					
ANR	357868	ArgumentList	stderr		357687	1					
ANR	357869	Argument	stderr		357687	0					
ANR	357870	Identifier	stderr		357687	0					
ANR	357871	Argument	"""error %d processing file %s\\n"""		357687	1					
ANR	357872	PrimaryExpression	"""error %d processing file %s\\n"""		357687	0					
ANR	357873	Argument	r		357687	2					
ANR	357874	Identifier	r		357687	0					
ANR	357875	Argument	name		357687	3					
ANR	357876	Identifier	name		357687	0					
ANR	357877	IfStatement	if ( logfp != NULL )		357687	12					
ANR	357878	Condition	logfp != NULL	348:4:8624:8636	357687	0	True				
ANR	357879	EqualityExpression	logfp != NULL		357687	0		!=			
ANR	357880	Identifier	logfp		357687	0					
ANR	357881	Identifier	NULL		357687	1					
ANR	357882	ExpressionStatement	fclose ( logfp )	349:2:8641:8654	357687	1	True				
ANR	357883	CallExpression	fclose ( logfp )		357687	0					
ANR	357884	Callee	fclose		357687	0					
ANR	357885	Identifier	fclose		357687	0					
ANR	357886	ArgumentList	logfp		357687	1					
ANR	357887	Argument	logfp		357687	0					
ANR	357888	Identifier	logfp		357687	0					
ANR	357889	ReturnType	static void		357687	1					
ANR	357890	Identifier	decrypt		357687	2					
ANR	357891	ParameterList	const char * name		357687	3					
ANR	357892	Parameter	const char * name	316:8:7943:7958	357687	0	True				
ANR	357893	ParameterType	const char *		357687	0					
ANR	357894	Identifier	name		357687	1					
ANR	357895	CFGEntryNode	ENTRY		357687		True				
ANR	357896	CFGExitNode	EXIT		357687		True				
ANR	357897	Symbol	strcmp		357687						
ANR	357898	Symbol	eifp		357687						
ANR	357899	Symbol	fopen		357687						
ANR	357900	Symbol	NULL		357687						
ANR	357901	Symbol	stdout		357687						
ANR	357902	Symbol	* eifname		357687						
ANR	357903	Symbol	logfp		357687						
ANR	357904	Symbol	stderr		357687						
ANR	357905	Symbol	eiCheckFiletype		357687						
ANR	357906	Symbol	r		357687						
ANR	357907	Symbol	ENCINFO_SUFFIX		357687						
ANR	357908	Symbol	name		357687						
ANR	357909	Symbol	eifname		357687						
ANR	357910	Function	write_keyfile	352:0:8659:9161							
ANR	357911	FunctionDef	write_keyfile (char * fn)		357910	0					
ANR	357912	CompoundStatement		354:0:8695:9161	357910	0					
ANR	357913	IdentifierDeclStatement	int fd ;	355:1:8698:8704	357910	0	True				
ANR	357914	IdentifierDecl	fd		357910	0					
ANR	357915	IdentifierDeclType	int		357910	0					
ANR	357916	Identifier	fd		357910	1					
ANR	357917	IdentifierDeclStatement	int r ;	356:1:8707:8712	357910	1	True				
ANR	357918	IdentifierDecl	r		357910	0					
ANR	357919	IdentifierDeclType	int		357910	0					
ANR	357920	Identifier	r		357910	1					
ANR	357921	IdentifierDeclStatement	mode_t fmode ;	357:1:8715:8727	357910	2	True				
ANR	357922	IdentifierDecl	fmode		357910	0					
ANR	357923	IdentifierDeclType	mode_t		357910	0					
ANR	357924	Identifier	fmode		357910	1					
ANR	357925	ExpressionStatement	fmode = O_WRONLY | O_CREAT	359:1:8731:8755	357910	3	True				
ANR	357926	AssignmentExpression	fmode = O_WRONLY | O_CREAT		357910	0		=			
ANR	357927	Identifier	fmode		357910	0					
ANR	357928	InclusiveOrExpression	O_WRONLY | O_CREAT		357910	1		|			
ANR	357929	Identifier	O_WRONLY		357910	0					
ANR	357930	Identifier	O_CREAT		357910	1					
ANR	357931	IfStatement	if ( ! optionForce )		357910	4					
ANR	357932	Condition	! optionForce	360:4:8761:8772	357910	0	True				
ANR	357933	UnaryOperationExpression	! optionForce		357910	0					
ANR	357934	UnaryOperator	!		357910	0					
ANR	357935	Identifier	optionForce		357910	1					
ANR	357936	ExpressionStatement	fmode |= O_EXCL	361:2:8777:8792	357910	1	True				
ANR	357937	AssignmentExpression	fmode |= O_EXCL		357910	0		|=			
ANR	357938	Identifier	fmode		357910	0					
ANR	357939	Identifier	O_EXCL		357910	1					
ANR	357940	IfStatement	if ( fn == NULL )		357910	5					
ANR	357941	Condition	fn == NULL	362:4:8798:8807	357910	0	True				
ANR	357942	EqualityExpression	fn == NULL		357910	0		==			
ANR	357943	Identifier	fn		357910	0					
ANR	357944	Identifier	NULL		357910	1					
ANR	357945	CompoundStatement		9:16:114:114	357910	1					
ANR	357946	ExpressionStatement	"fprintf ( stderr , ""program error: keyfile is NULL"" )"	363:2:8814:8863	357910	0	True				
ANR	357947	CallExpression	"fprintf ( stderr , ""program error: keyfile is NULL"" )"		357910	0					
ANR	357948	Callee	fprintf		357910	0					
ANR	357949	Identifier	fprintf		357910	0					
ANR	357950	ArgumentList	stderr		357910	1					
ANR	357951	Argument	stderr		357910	0					
ANR	357952	Identifier	stderr		357910	0					
ANR	357953	Argument	"""program error: keyfile is NULL"""		357910	1					
ANR	357954	PrimaryExpression	"""program error: keyfile is NULL"""		357910	0					
ANR	357955	ExpressionStatement	exit ( 1 )	364:2:8867:8874	357910	1	True				
ANR	357956	CallExpression	exit ( 1 )		357910	0					
ANR	357957	Callee	exit		357910	0					
ANR	357958	Identifier	exit		357910	0					
ANR	357959	ArgumentList	1		357910	1					
ANR	357960	Argument	1		357910	0					
ANR	357961	PrimaryExpression	1		357910	0					
ANR	357962	IfStatement	"if ( ( fd = open ( fn , fmode , S_IRUSR ) ) == - 1 )"		357910	6					
ANR	357963	Condition	"( fd = open ( fn , fmode , S_IRUSR ) ) == - 1"	366:4:8883:8919	357910	0	True				
ANR	357964	EqualityExpression	"( fd = open ( fn , fmode , S_IRUSR ) ) == - 1"		357910	0		==			
ANR	357965	AssignmentExpression	"fd = open ( fn , fmode , S_IRUSR )"		357910	0		=			
ANR	357966	Identifier	fd		357910	0					
ANR	357967	CallExpression	"open ( fn , fmode , S_IRUSR )"		357910	1					
ANR	357968	Callee	open		357910	0					
ANR	357969	Identifier	open		357910	0					
ANR	357970	ArgumentList	fn		357910	1					
ANR	357971	Argument	fn		357910	0					
ANR	357972	Identifier	fn		357910	0					
ANR	357973	Argument	fmode		357910	1					
ANR	357974	Identifier	fmode		357910	0					
ANR	357975	Argument	S_IRUSR		357910	2					
ANR	357976	Identifier	S_IRUSR		357910	0					
ANR	357977	UnaryOperationExpression	- 1		357910	1					
ANR	357978	UnaryOperator	-		357910	0					
ANR	357979	PrimaryExpression	1		357910	1					
ANR	357980	CompoundStatement		13:43:226:226	357910	1					
ANR	357981	ExpressionStatement	"fprintf ( stderr , ""error opening keyfile "" )"	367:2:8926:8967	357910	0	True				
ANR	357982	CallExpression	"fprintf ( stderr , ""error opening keyfile "" )"		357910	0					
ANR	357983	Callee	fprintf		357910	0					
ANR	357984	Identifier	fprintf		357910	0					
ANR	357985	ArgumentList	stderr		357910	1					
ANR	357986	Argument	stderr		357910	0					
ANR	357987	Identifier	stderr		357910	0					
ANR	357988	Argument	"""error opening keyfile """		357910	1					
ANR	357989	PrimaryExpression	"""error opening keyfile """		357910	0					
ANR	357990	ExpressionStatement	perror ( fn )	368:2:8971:8981	357910	1	True				
ANR	357991	CallExpression	perror ( fn )		357910	0					
ANR	357992	Callee	perror		357910	0					
ANR	357993	Identifier	perror		357910	0					
ANR	357994	ArgumentList	fn		357910	1					
ANR	357995	Argument	fn		357910	0					
ANR	357996	Identifier	fn		357910	0					
ANR	357997	ExpressionStatement	exit ( 1 )	369:2:8985:8992	357910	2	True				
ANR	357998	CallExpression	exit ( 1 )		357910	0					
ANR	357999	Callee	exit		357910	0					
ANR	358000	Identifier	exit		357910	0					
ANR	358001	ArgumentList	1		357910	1					
ANR	358002	Argument	1		357910	0					
ANR	358003	PrimaryExpression	1		357910	0					
ANR	358004	IfStatement	"if ( ( r = write ( fd , cry_key , cry_keylen ) ) != ( ssize_t ) cry_keylen )"		357910	7					
ANR	358005	Condition	"( r = write ( fd , cry_key , cry_keylen ) ) != ( ssize_t ) cry_keylen"	371:4:9001:9059	357910	0	True				
ANR	358006	EqualityExpression	"( r = write ( fd , cry_key , cry_keylen ) ) != ( ssize_t ) cry_keylen"		357910	0		!=			
ANR	358007	AssignmentExpression	"r = write ( fd , cry_key , cry_keylen )"		357910	0		=			
ANR	358008	Identifier	r		357910	0					
ANR	358009	CallExpression	"write ( fd , cry_key , cry_keylen )"		357910	1					
ANR	358010	Callee	write		357910	0					
ANR	358011	Identifier	write		357910	0					
ANR	358012	ArgumentList	fd		357910	1					
ANR	358013	Argument	fd		357910	0					
ANR	358014	Identifier	fd		357910	0					
ANR	358015	Argument	cry_key		357910	1					
ANR	358016	Identifier	cry_key		357910	0					
ANR	358017	Argument	cry_keylen		357910	2					
ANR	358018	Identifier	cry_keylen		357910	0					
ANR	358019	CastExpression	( ssize_t ) cry_keylen		357910	1					
ANR	358020	CastTarget	ssize_t		357910	0					
ANR	358021	Identifier	cry_keylen		357910	1					
ANR	358022	CompoundStatement		18:65:366:366	357910	1					
ANR	358023	ExpressionStatement	"fprintf ( stderr , ""error writing keyfile (ret=%d) "" , r )"	372:2:9066:9119	357910	0	True				
ANR	358024	CallExpression	"fprintf ( stderr , ""error writing keyfile (ret=%d) "" , r )"		357910	0					
ANR	358025	Callee	fprintf		357910	0					
ANR	358026	Identifier	fprintf		357910	0					
ANR	358027	ArgumentList	stderr		357910	1					
ANR	358028	Argument	stderr		357910	0					
ANR	358029	Identifier	stderr		357910	0					
ANR	358030	Argument	"""error writing keyfile (ret=%d) """		357910	1					
ANR	358031	PrimaryExpression	"""error writing keyfile (ret=%d) """		357910	0					
ANR	358032	Argument	r		357910	2					
ANR	358033	Identifier	r		357910	0					
ANR	358034	ExpressionStatement	perror ( fn )	373:2:9123:9133	357910	1	True				
ANR	358035	CallExpression	perror ( fn )		357910	0					
ANR	358036	Callee	perror		357910	0					
ANR	358037	Identifier	perror		357910	0					
ANR	358038	ArgumentList	fn		357910	1					
ANR	358039	Argument	fn		357910	0					
ANR	358040	Identifier	fn		357910	0					
ANR	358041	ExpressionStatement	exit ( 1 )	374:2:9137:9144	357910	2	True				
ANR	358042	CallExpression	exit ( 1 )		357910	0					
ANR	358043	Callee	exit		357910	0					
ANR	358044	Identifier	exit		357910	0					
ANR	358045	ArgumentList	1		357910	1					
ANR	358046	Argument	1		357910	0					
ANR	358047	PrimaryExpression	1		357910	0					
ANR	358048	ExpressionStatement	close ( fd )	376:1:9150:9159	357910	8	True				
ANR	358049	CallExpression	close ( fd )		357910	0					
ANR	358050	Callee	close		357910	0					
ANR	358051	Identifier	close		357910	0					
ANR	358052	ArgumentList	fd		357910	1					
ANR	358053	Argument	fd		357910	0					
ANR	358054	Identifier	fd		357910	0					
ANR	358055	ReturnType	static void		357910	1					
ANR	358056	Identifier	write_keyfile		357910	2					
ANR	358057	ParameterList	char * fn		357910	3					
ANR	358058	Parameter	char * fn	353:14:8685:8692	357910	0	True				
ANR	358059	ParameterType	char *		357910	0					
ANR	358060	Identifier	fn		357910	1					
ANR	358061	CFGEntryNode	ENTRY		357910		True				
ANR	358062	CFGExitNode	EXIT		357910		True				
ANR	358063	Symbol	NULL		357910						
ANR	358064	Symbol	O_CREAT		357910						
ANR	358065	Symbol	O_EXCL		357910						
ANR	358066	Symbol	fn		357910						
ANR	358067	Symbol	stderr		357910						
ANR	358068	Symbol	cry_key		357910						
ANR	358069	Symbol	r		357910						
ANR	358070	Symbol	S_IRUSR		357910						
ANR	358071	Symbol	optionForce		357910						
ANR	358072	Symbol	cry_keylen		357910						
ANR	358073	Symbol	fmode		357910						
ANR	358074	Symbol	O_WRONLY		357910						
ANR	358075	Symbol	write		357910						
ANR	358076	Symbol	fd		357910						
ANR	358077	Symbol	open		357910						
ANR	358078	Function	getKeyFromFile	379:0:9164:9358							
ANR	358079	FunctionDef	getKeyFromFile (char * fn)		358078	0					
ANR	358080	CompoundStatement		381:0:9201:9358	358078	0					
ANR	358081	IdentifierDeclStatement	int r ;	382:1:9204:9209	358078	0	True				
ANR	358082	IdentifierDecl	r		358078	0					
ANR	358083	IdentifierDeclType	int		358078	0					
ANR	358084	Identifier	r		358078	1					
ANR	358085	ExpressionStatement	"r = gcryGetKeyFromFile ( fn , & cry_key , & cry_keylen )"	383:1:9212:9261	358078	1	True				
ANR	358086	AssignmentExpression	"r = gcryGetKeyFromFile ( fn , & cry_key , & cry_keylen )"		358078	0		=			
ANR	358087	Identifier	r		358078	0					
ANR	358088	CallExpression	"gcryGetKeyFromFile ( fn , & cry_key , & cry_keylen )"		358078	1					
ANR	358089	Callee	gcryGetKeyFromFile		358078	0					
ANR	358090	Identifier	gcryGetKeyFromFile		358078	0					
ANR	358091	ArgumentList	fn		358078	1					
ANR	358092	Argument	fn		358078	0					
ANR	358093	Identifier	fn		358078	0					
ANR	358094	Argument	& cry_key		358078	1					
ANR	358095	UnaryOperationExpression	& cry_key		358078	0					
ANR	358096	UnaryOperator	&		358078	0					
ANR	358097	Identifier	cry_key		358078	1					
ANR	358098	Argument	& cry_keylen		358078	2					
ANR	358099	UnaryOperationExpression	& cry_keylen		358078	0					
ANR	358100	UnaryOperator	&		358078	0					
ANR	358101	Identifier	cry_keylen		358078	1					
ANR	358102	IfStatement	if ( r != 0 )		358078	2					
ANR	358103	Condition	r != 0	384:4:9267:9272	358078	0	True				
ANR	358104	EqualityExpression	r != 0		358078	0		!=			
ANR	358105	Identifier	r		358078	0					
ANR	358106	PrimaryExpression	0		358078	1					
ANR	358107	CompoundStatement		4:12:73:73	358078	1					
ANR	358108	ExpressionStatement	"fprintf ( stderr , ""Error %d reading key from file '%s'\\n"" , r , fn )"	385:2:9279:9342	358078	0	True				
ANR	358109	CallExpression	"fprintf ( stderr , ""Error %d reading key from file '%s'\\n"" , r , fn )"		358078	0					
ANR	358110	Callee	fprintf		358078	0					
ANR	358111	Identifier	fprintf		358078	0					
ANR	358112	ArgumentList	stderr		358078	1					
ANR	358113	Argument	stderr		358078	0					
ANR	358114	Identifier	stderr		358078	0					
ANR	358115	Argument	"""Error %d reading key from file '%s'\\n"""		358078	1					
ANR	358116	PrimaryExpression	"""Error %d reading key from file '%s'\\n"""		358078	0					
ANR	358117	Argument	r		358078	2					
ANR	358118	Identifier	r		358078	0					
ANR	358119	Argument	fn		358078	3					
ANR	358120	Identifier	fn		358078	0					
ANR	358121	ExpressionStatement	exit ( 1 )	386:2:9346:9353	358078	1	True				
ANR	358122	CallExpression	exit ( 1 )		358078	0					
ANR	358123	Callee	exit		358078	0					
ANR	358124	Identifier	exit		358078	0					
ANR	358125	ArgumentList	1		358078	1					
ANR	358126	Argument	1		358078	0					
ANR	358127	PrimaryExpression	1		358078	0					
ANR	358128	ReturnType	static void		358078	1					
ANR	358129	Identifier	getKeyFromFile		358078	2					
ANR	358130	ParameterList	char * fn		358078	3					
ANR	358131	Parameter	char * fn	380:15:9191:9198	358078	0	True				
ANR	358132	ParameterType	char *		358078	0					
ANR	358133	Identifier	fn		358078	1					
ANR	358134	CFGEntryNode	ENTRY		358078		True				
ANR	358135	CFGExitNode	EXIT		358078		True				
ANR	358136	Symbol	r		358078						
ANR	358137	Symbol	& cry_keylen		358078						
ANR	358138	Symbol	gcryGetKeyFromFile		358078						
ANR	358139	Symbol	& cry_key		358078						
ANR	358140	Symbol	fn		358078						
ANR	358141	Symbol	stderr		358078						
ANR	358142	Function	getRandomKey	390:0:9361:10008							
ANR	358143	FunctionDef	getRandomKey ()		358142	0					
ANR	358144	CompoundStatement		392:0:9392:10008	358142	0					
ANR	358145	IdentifierDeclStatement	int fd ;	393:1:9395:9401	358142	0	True				
ANR	358146	IdentifierDecl	fd		358142	0					
ANR	358147	IdentifierDeclType	int		358142	0					
ANR	358148	Identifier	fd		358142	1					
ANR	358149	ExpressionStatement	cry_keylen = randomKeyLen	394:1:9404:9429	358142	1	True				
ANR	358150	AssignmentExpression	cry_keylen = randomKeyLen		358142	0		=			
ANR	358151	Identifier	cry_keylen		358142	0					
ANR	358152	Identifier	randomKeyLen		358142	1					
ANR	358153	ExpressionStatement	cry_key = malloc ( randomKeyLen )	395:1:9432:9462	358142	2	True				
ANR	358154	AssignmentExpression	cry_key = malloc ( randomKeyLen )		358142	0		=			
ANR	358155	Identifier	cry_key		358142	0					
ANR	358156	CallExpression	malloc ( randomKeyLen )		358142	1					
ANR	358157	Callee	malloc		358142	0					
ANR	358158	Identifier	malloc		358142	0					
ANR	358159	ArgumentList	randomKeyLen		358142	1					
ANR	358160	Argument	randomKeyLen		358142	0					
ANR	358161	Identifier	randomKeyLen		358142	0					
ANR	358162	IfStatement	"if ( ( fd = open ( ""/dev/urandom"" , O_RDONLY ) ) > 0 )"		358142	3					
ANR	358163	Condition	"( fd = open ( ""/dev/urandom"" , O_RDONLY ) ) > 0"	403:4:9879:9919	358142	0	True				
ANR	358164	RelationalExpression	"( fd = open ( ""/dev/urandom"" , O_RDONLY ) ) > 0"		358142	0		>			
ANR	358165	AssignmentExpression	"fd = open ( ""/dev/urandom"" , O_RDONLY )"		358142	0		=			
ANR	358166	Identifier	fd		358142	0					
ANR	358167	CallExpression	"open ( ""/dev/urandom"" , O_RDONLY )"		358142	1					
ANR	358168	Callee	open		358142	0					
ANR	358169	Identifier	open		358142	0					
ANR	358170	ArgumentList	"""/dev/urandom"""		358142	1					
ANR	358171	Argument	"""/dev/urandom"""		358142	0					
ANR	358172	PrimaryExpression	"""/dev/urandom"""		358142	0					
ANR	358173	Argument	O_RDONLY		358142	1					
ANR	358174	Identifier	O_RDONLY		358142	0					
ANR	358175	PrimaryExpression	0		358142	1					
ANR	358176	CompoundStatement		12:47:529:529	358142	1					
ANR	358177	IfStatement	"if ( read ( fd , cry_key , randomKeyLen ) )"		358142	0					
ANR	358178	Condition	"read ( fd , cry_key , randomKeyLen )"	404:5:9929:9959	358142	0	True				
ANR	358179	CallExpression	"read ( fd , cry_key , randomKeyLen )"		358142	0					
ANR	358180	Callee	read		358142	0					
ANR	358181	Identifier	read		358142	0					
ANR	358182	ArgumentList	fd		358142	1					
ANR	358183	Argument	fd		358142	0					
ANR	358184	Identifier	fd		358142	0					
ANR	358185	Argument	cry_key		358142	1					
ANR	358186	Identifier	cry_key		358142	0					
ANR	358187	Argument	randomKeyLen		358142	2					
ANR	358188	Identifier	randomKeyLen		358142	0					
ANR	358189	CompoundStatement		13:38:569:569	358142	1					
ANR	358190	ExpressionStatement		404:40:9964:9964	358142	1	True				
ANR	358191	ExpressionStatement	close ( fd )	405:2:9994:10003	358142	2	True				
ANR	358192	CallExpression	close ( fd )		358142	0					
ANR	358193	Callee	close		358142	0					
ANR	358194	Identifier	close		358142	0					
ANR	358195	ArgumentList	fd		358142	1					
ANR	358196	Argument	fd		358142	0					
ANR	358197	Identifier	fd		358142	0					
ANR	358198	ReturnType	static void		358142	1					
ANR	358199	Identifier	getRandomKey		358142	2					
ANR	358200	ParameterList			358142	3					
ANR	358201	CFGEntryNode	ENTRY		358142		True				
ANR	358202	CFGExitNode	EXIT		358142		True				
ANR	358203	Symbol	randomKeyLen		358142						
ANR	358204	Symbol	malloc		358142						
ANR	358205	Symbol	O_RDONLY		358142						
ANR	358206	Symbol	read		358142						
ANR	358207	Symbol	cry_keylen		358142						
ANR	358208	Symbol	cry_key		358142						
ANR	358209	Symbol	fd		358142						
ANR	358210	Symbol	open		358142						
ANR	358211	Function	setKey	410:0:10012:10314							
ANR	358212	FunctionDef	setKey ()		358211	0					
ANR	358213	CompoundStatement		412:0:10037:10314	358211	0					
ANR	358214	IfStatement	if ( randomKeyLen != - 1 )		358211	0					
ANR	358215	Condition	randomKeyLen != - 1	413:4:10043:10060	358211	0	True				
ANR	358216	EqualityExpression	randomKeyLen != - 1		358211	0		!=			
ANR	358217	Identifier	randomKeyLen		358211	0					
ANR	358218	UnaryOperationExpression	- 1		358211	1					
ANR	358219	UnaryOperator	-		358211	0					
ANR	358220	PrimaryExpression	1		358211	1					
ANR	358221	ExpressionStatement	getRandomKey ( )	414:2:10065:10079	358211	1	True				
ANR	358222	CallExpression	getRandomKey ( )		358211	0					
ANR	358223	Callee	getRandomKey		358211	0					
ANR	358224	Identifier	getRandomKey		358211	0					
ANR	358225	ArgumentList			358211	1					
ANR	358226	ElseStatement	else		358211	0					
ANR	358227	IfStatement	if ( keyfile != NULL )		358211	0					
ANR	358228	Condition	keyfile != NULL	415:9:10090:10104	358211	0	True				
ANR	358229	EqualityExpression	keyfile != NULL		358211	0		!=			
ANR	358230	Identifier	keyfile		358211	0					
ANR	358231	Identifier	NULL		358211	1					
ANR	358232	ExpressionStatement	getKeyFromFile ( keyfile )	416:2:10109:10132	358211	1	True				
ANR	358233	CallExpression	getKeyFromFile ( keyfile )		358211	0					
ANR	358234	Callee	getKeyFromFile		358211	0					
ANR	358235	Identifier	getKeyFromFile		358211	0					
ANR	358236	ArgumentList	keyfile		358211	1					
ANR	358237	Argument	keyfile		358211	0					
ANR	358238	Identifier	keyfile		358211	0					
ANR	358239	ElseStatement	else		358211	0					
ANR	358240	IfStatement	if ( keyprog != NULL )		358211	0					
ANR	358241	Condition	keyprog != NULL	417:9:10143:10157	358211	0	True				
ANR	358242	EqualityExpression	keyprog != NULL		358211	0		!=			
ANR	358243	Identifier	keyprog		358211	0					
ANR	358244	Identifier	NULL		358211	1					
ANR	358245	ExpressionStatement	"gcryGetKeyFromProg ( keyprog , & cry_key , & cry_keylen )"	418:2:10162:10212	358211	1	True				
ANR	358246	CallExpression	"gcryGetKeyFromProg ( keyprog , & cry_key , & cry_keylen )"		358211	0					
ANR	358247	Callee	gcryGetKeyFromProg		358211	0					
ANR	358248	Identifier	gcryGetKeyFromProg		358211	0					
ANR	358249	ArgumentList	keyprog		358211	1					
ANR	358250	Argument	keyprog		358211	0					
ANR	358251	Identifier	keyprog		358211	0					
ANR	358252	Argument	& cry_key		358211	1					
ANR	358253	UnaryOperationExpression	& cry_key		358211	0					
ANR	358254	UnaryOperator	&		358211	0					
ANR	358255	Identifier	cry_key		358211	1					
ANR	358256	Argument	& cry_keylen		358211	2					
ANR	358257	UnaryOperationExpression	& cry_keylen		358211	0					
ANR	358258	UnaryOperator	&		358211	0					
ANR	358259	Identifier	cry_keylen		358211	1					
ANR	358260	IfStatement	if ( cry_key == NULL )		358211	1					
ANR	358261	Condition	cry_key == NULL	419:4:10218:10232	358211	0	True				
ANR	358262	EqualityExpression	cry_key == NULL		358211	0		==			
ANR	358263	Identifier	cry_key		358211	0					
ANR	358264	Identifier	NULL		358211	1					
ANR	358265	CompoundStatement		8:21:197:197	358211	1					
ANR	358266	ExpressionStatement	"fprintf ( stderr , ""ERROR: key must be set via some method\\n"" )"	420:2:10239:10298	358211	0	True				
ANR	358267	CallExpression	"fprintf ( stderr , ""ERROR: key must be set via some method\\n"" )"		358211	0					
ANR	358268	Callee	fprintf		358211	0					
ANR	358269	Identifier	fprintf		358211	0					
ANR	358270	ArgumentList	stderr		358211	1					
ANR	358271	Argument	stderr		358211	0					
ANR	358272	Identifier	stderr		358211	0					
ANR	358273	Argument	"""ERROR: key must be set via some method\\n"""		358211	1					
ANR	358274	PrimaryExpression	"""ERROR: key must be set via some method\\n"""		358211	0					
ANR	358275	ExpressionStatement	exit ( 1 )	421:2:10302:10309	358211	1	True				
ANR	358276	CallExpression	exit ( 1 )		358211	0					
ANR	358277	Callee	exit		358211	0					
ANR	358278	Identifier	exit		358211	0					
ANR	358279	ArgumentList	1		358211	1					
ANR	358280	Argument	1		358211	0					
ANR	358281	PrimaryExpression	1		358211	0					
ANR	358282	ReturnType	static void		358211	1					
ANR	358283	Identifier	setKey		358211	2					
ANR	358284	ParameterList			358211	3					
ANR	358285	CFGEntryNode	ENTRY		358211		True				
ANR	358286	CFGExitNode	EXIT		358211		True				
ANR	358287	Symbol	randomKeyLen		358211						
ANR	358288	Symbol	NULL		358211						
ANR	358289	Symbol	& cry_keylen		358211						
ANR	358290	Symbol	& cry_key		358211						
ANR	358291	Symbol	keyfile		358211						
ANR	358292	Symbol	keyprog		358211						
ANR	358293	Symbol	stderr		358211						
ANR	358294	Symbol	cry_key		358211						
ANR	358295	DeclStmt									
ANR	358296	Decl							struct option	struct option [ ]	long_options
ANR	358297	Function	main	441:0:10855:12833							
ANR	358298	FunctionDef	"main (int argc , char * argv [ ])"		358297	0					
ANR	358299	CompoundStatement		443:0:10888:12833	358297	0					
ANR	358300	IdentifierDeclStatement	int i ;	444:1:10891:10896	358297	0	True				
ANR	358301	IdentifierDecl	i		358297	0					
ANR	358302	IdentifierDeclType	int		358297	0					
ANR	358303	Identifier	i		358297	1					
ANR	358304	IdentifierDeclStatement	int opt ;	445:1:10899:10906	358297	1	True				
ANR	358305	IdentifierDecl	opt		358297	0					
ANR	358306	IdentifierDeclType	int		358297	0					
ANR	358307	Identifier	opt		358297	1					
ANR	358308	IdentifierDeclStatement	int temp ;	446:1:10909:10917	358297	2	True				
ANR	358309	IdentifierDecl	temp		358297	0					
ANR	358310	IdentifierDeclType	int		358297	0					
ANR	358311	Identifier	temp		358297	1					
ANR	358312	IdentifierDeclStatement	char * newKeyFile = NULL ;	447:1:10920:10943	358297	3	True				
ANR	358313	IdentifierDecl	* newKeyFile = NULL		358297	0					
ANR	358314	IdentifierDeclType	char *		358297	0					
ANR	358315	Identifier	newKeyFile		358297	1					
ANR	358316	AssignmentExpression	* newKeyFile = NULL		358297	2		=			
ANR	358317	Identifier	NULL		358297	0					
ANR	358318	Identifier	NULL		358297	1					
ANR	358319	WhileStatement	while ( 1 )		358297	4					
ANR	358320	Condition	1	449:7:10953:10953	358297	0	True				
ANR	358321	PrimaryExpression	1		358297	0					
ANR	358322	CompoundStatement		7:10:67:67	358297	1					
ANR	358323	ExpressionStatement	"opt = getopt_long ( argc , argv , ""a:dfk:K:m:p:r:vVW:"" , long_options , NULL )"	450:2:10960:11031	358297	0	True				
ANR	358324	AssignmentExpression	"opt = getopt_long ( argc , argv , ""a:dfk:K:m:p:r:vVW:"" , long_options , NULL )"		358297	0		=			
ANR	358325	Identifier	opt		358297	0					
ANR	358326	CallExpression	"getopt_long ( argc , argv , ""a:dfk:K:m:p:r:vVW:"" , long_options , NULL )"		358297	1					
ANR	358327	Callee	getopt_long		358297	0					
ANR	358328	Identifier	getopt_long		358297	0					
ANR	358329	ArgumentList	argc		358297	1					
ANR	358330	Argument	argc		358297	0					
ANR	358331	Identifier	argc		358297	0					
ANR	358332	Argument	argv		358297	1					
ANR	358333	Identifier	argv		358297	0					
ANR	358334	Argument	"""a:dfk:K:m:p:r:vVW:"""		358297	2					
ANR	358335	PrimaryExpression	"""a:dfk:K:m:p:r:vVW:"""		358297	0					
ANR	358336	Argument	long_options		358297	3					
ANR	358337	Identifier	long_options		358297	0					
ANR	358338	Argument	NULL		358297	4					
ANR	358339	Identifier	NULL		358297	0					
ANR	358340	IfStatement	if ( opt == - 1 )		358297	1					
ANR	358341	Condition	opt == - 1	451:5:11038:11046	358297	0	True				
ANR	358342	EqualityExpression	opt == - 1		358297	0		==			
ANR	358343	Identifier	opt		358297	0					
ANR	358344	UnaryOperationExpression	- 1		358297	1					
ANR	358345	UnaryOperator	-		358297	0					
ANR	358346	PrimaryExpression	1		358297	1					
ANR	358347	BreakStatement	break ;	452:3:11052:11057	358297	1	True				
ANR	358348	SwitchStatement	switch ( opt )		358297	2					
ANR	358349	Condition	opt	453:9:11068:11070	358297	0	True				
ANR	358350	Identifier	opt		358297	0					
ANR	358351	CompoundStatement		11:14:184:184	358297	1					
ANR	358352	Label	case 'd' :	454:2:11077:11085	358297	0	True				
ANR	358353	ExpressionStatement	mode = MD_DECRYPT	455:3:11090:11107	358297	1	True				
ANR	358354	AssignmentExpression	mode = MD_DECRYPT		358297	0		=			
ANR	358355	Identifier	mode		358297	0					
ANR	358356	Identifier	MD_DECRYPT		358297	1					
ANR	358357	BreakStatement	break ;	456:3:11112:11117	358297	2	True				
ANR	358358	Label	case 'W' :	457:2:11121:11129	358297	3	True				
ANR	358359	ExpressionStatement	mode = MD_WRITE_KEYFILE	458:3:11134:11157	358297	4	True				
ANR	358360	AssignmentExpression	mode = MD_WRITE_KEYFILE		358297	0		=			
ANR	358361	Identifier	mode		358297	0					
ANR	358362	Identifier	MD_WRITE_KEYFILE		358297	1					
ANR	358363	ExpressionStatement	newKeyFile = optarg	459:3:11162:11181	358297	5	True				
ANR	358364	AssignmentExpression	newKeyFile = optarg		358297	0		=			
ANR	358365	Identifier	newKeyFile		358297	0					
ANR	358366	Identifier	optarg		358297	1					
ANR	358367	BreakStatement	break ;	460:3:11186:11191	358297	6	True				
ANR	358368	Label	case 'k' :	461:2:11195:11203	358297	7	True				
ANR	358369	ExpressionStatement	keyfile = optarg	462:3:11208:11224	358297	8	True				
ANR	358370	AssignmentExpression	keyfile = optarg		358297	0		=			
ANR	358371	Identifier	keyfile		358297	0					
ANR	358372	Identifier	optarg		358297	1					
ANR	358373	BreakStatement	break ;	463:3:11229:11234	358297	9	True				
ANR	358374	Label	case 'p' :	464:2:11238:11246	358297	10	True				
ANR	358375	ExpressionStatement	keyprog = optarg	465:3:11251:11267	358297	11	True				
ANR	358376	AssignmentExpression	keyprog = optarg		358297	0		=			
ANR	358377	Identifier	keyprog		358297	0					
ANR	358378	Identifier	optarg		358297	1					
ANR	358379	BreakStatement	break ;	466:3:11272:11277	358297	12	True				
ANR	358380	Label	case 'f' :	467:2:11281:11289	358297	13	True				
ANR	358381	ExpressionStatement	optionForce = 1	468:3:11294:11309	358297	14	True				
ANR	358382	AssignmentExpression	optionForce = 1		358297	0		=			
ANR	358383	Identifier	optionForce		358297	0					
ANR	358384	PrimaryExpression	1		358297	1					
ANR	358385	BreakStatement	break ;	469:3:11314:11319	358297	15	True				
ANR	358386	Label	case 'r' :	470:2:11323:11331	358297	16	True				
ANR	358387	ExpressionStatement	randomKeyLen = atoi ( optarg )	471:3:11336:11363	358297	17	True				
ANR	358388	AssignmentExpression	randomKeyLen = atoi ( optarg )		358297	0		=			
ANR	358389	Identifier	randomKeyLen		358297	0					
ANR	358390	CallExpression	atoi ( optarg )		358297	1					
ANR	358391	Callee	atoi		358297	0					
ANR	358392	Identifier	atoi		358297	0					
ANR	358393	ArgumentList	optarg		358297	1					
ANR	358394	Argument	optarg		358297	0					
ANR	358395	Identifier	optarg		358297	0					
ANR	358396	IfStatement	if ( randomKeyLen > 64 * 1024 )		358297	18					
ANR	358397	Condition	randomKeyLen > 64 * 1024	472:6:11371:11392	358297	0	True				
ANR	358398	RelationalExpression	randomKeyLen > 64 * 1024		358297	0		>			
ANR	358399	Identifier	randomKeyLen		358297	0					
ANR	358400	MultiplicativeExpression	64 * 1024		358297	1		*			
ANR	358401	PrimaryExpression	64		358297	0					
ANR	358402	PrimaryExpression	1024		358297	1					
ANR	358403	CompoundStatement		30:30:506:506	358297	1					
ANR	358404	Statement	fprintf	473:4:11401:11407	358297	0	True				
ANR	358405	Statement	(	473:11:11408:11408	358297	1	True				
ANR	358406	Statement	stderr	473:12:11409:11414	358297	2	True				
ANR	358407	Statement	","	473:18:11415:11415	358297	3	True				
ANR	358408	Statement	"""ERROR: keys larger than 64KiB are """	473:20:11417:11452	358297	4	True				
ANR	358409	Statement	"""not supported\\n"""	474:5:11459:11475	358297	5	True				
ANR	358410	Statement	)	474:22:11476:11476	358297	6	True				
ANR	358411	ExpressionStatement		474:23:11477:11477	358297	7	True				
ANR	358412	ExpressionStatement	exit ( 1 )	475:4:11483:11490	358297	8	True				
ANR	358413	CallExpression	exit ( 1 )		358297	0					
ANR	358414	Callee	exit		358297	0					
ANR	358415	Identifier	exit		358297	0					
ANR	358416	ArgumentList	1		358297	1					
ANR	358417	Argument	1		358297	0					
ANR	358418	PrimaryExpression	1		358297	0					
ANR	358419	BreakStatement	break ;	477:3:11500:11505	358297	19	True				
ANR	358420	Label	case 'K' :	478:2:11509:11517	358297	20	True				
ANR	358421	Statement	fprintf	479:3:11522:11528	358297	21	True				
ANR	358422	Statement	(	479:10:11529:11529	358297	22	True				
ANR	358423	Statement	stderr	479:11:11530:11535	358297	23	True				
ANR	358424	Statement	","	479:17:11536:11536	358297	24	True				
ANR	358425	Statement	"""WARNING: specifying the actual key """	479:19:11538:11574	358297	25	True				
ANR	358426	Statement	"""via the command line is highly insecure\\n"""	480:4:11580:11622	358297	26	True				
ANR	358427	Statement	"""Do NOT use this for PRODUCTION use.\\n"""	481:4:11628:11666	358297	27	True				
ANR	358428	Statement	)	481:43:11667:11667	358297	28	True				
ANR	358429	ExpressionStatement		481:44:11668:11668	358297	29	True				
ANR	358430	ExpressionStatement	cry_key = optarg	482:3:11673:11689	358297	30	True				
ANR	358431	AssignmentExpression	cry_key = optarg		358297	0		=			
ANR	358432	Identifier	cry_key		358297	0					
ANR	358433	Identifier	optarg		358297	1					
ANR	358434	ExpressionStatement	cry_keylen = strlen ( cry_key )	483:3:11694:11722	358297	31	True				
ANR	358435	AssignmentExpression	cry_keylen = strlen ( cry_key )		358297	0		=			
ANR	358436	Identifier	cry_keylen		358297	0					
ANR	358437	CallExpression	strlen ( cry_key )		358297	1					
ANR	358438	Callee	strlen		358297	0					
ANR	358439	Identifier	strlen		358297	0					
ANR	358440	ArgumentList	cry_key		358297	1					
ANR	358441	Argument	cry_key		358297	0					
ANR	358442	Identifier	cry_key		358297	0					
ANR	358443	BreakStatement	break ;	484:3:11727:11732	358297	32	True				
ANR	358444	Label	case 'a' :	485:2:11736:11744	358297	33	True				
ANR	358445	ExpressionStatement	temp = rsgcryAlgoname2Algo ( optarg )	486:3:11749:11783	358297	34	True				
ANR	358446	AssignmentExpression	temp = rsgcryAlgoname2Algo ( optarg )		358297	0		=			
ANR	358447	Identifier	temp		358297	0					
ANR	358448	CallExpression	rsgcryAlgoname2Algo ( optarg )		358297	1					
ANR	358449	Callee	rsgcryAlgoname2Algo		358297	0					
ANR	358450	Identifier	rsgcryAlgoname2Algo		358297	0					
ANR	358451	ArgumentList	optarg		358297	1					
ANR	358452	Argument	optarg		358297	0					
ANR	358453	Identifier	optarg		358297	0					
ANR	358454	IfStatement	if ( temp == GCRY_CIPHER_NONE )		358297	35					
ANR	358455	Condition	temp == GCRY_CIPHER_NONE	487:6:11791:11814	358297	0	True				
ANR	358456	EqualityExpression	temp == GCRY_CIPHER_NONE		358297	0		==			
ANR	358457	Identifier	temp		358297	0					
ANR	358458	Identifier	GCRY_CIPHER_NONE		358297	1					
ANR	358459	CompoundStatement		45:32:928:928	358297	1					
ANR	358460	Statement	fprintf	488:4:11823:11829	358297	0	True				
ANR	358461	Statement	(	488:11:11830:11830	358297	1	True				
ANR	358462	Statement	stderr	488:12:11831:11836	358297	2	True				
ANR	358463	Statement	","	488:18:11837:11837	358297	3	True				
ANR	358464	Statement	"""ERROR: algorithm \\""%s\\"" is not """	488:20:11839:11871	358297	4	True				
ANR	358465	Statement	"""kown/supported\\n"""	489:5:11878:11895	358297	5	True				
ANR	358466	Statement	","	489:23:11896:11896	358297	6	True				
ANR	358467	Statement	optarg	489:25:11898:11903	358297	7	True				
ANR	358468	Statement	)	489:31:11904:11904	358297	8	True				
ANR	358469	ExpressionStatement		489:32:11905:11905	358297	9	True				
ANR	358470	ExpressionStatement	exit ( 1 )	490:4:11911:11918	358297	10	True				
ANR	358471	CallExpression	exit ( 1 )		358297	0					
ANR	358472	Callee	exit		358297	0					
ANR	358473	Identifier	exit		358297	0					
ANR	358474	ArgumentList	1		358297	1					
ANR	358475	Argument	1		358297	0					
ANR	358476	PrimaryExpression	1		358297	0					
ANR	358477	ExpressionStatement	cry_algo = temp	492:3:11928:11943	358297	36	True				
ANR	358478	AssignmentExpression	cry_algo = temp		358297	0		=			
ANR	358479	Identifier	cry_algo		358297	0					
ANR	358480	Identifier	temp		358297	1					
ANR	358481	BreakStatement	break ;	493:3:11948:11953	358297	37	True				
ANR	358482	Label	case 'm' :	494:2:11957:11965	358297	38	True				
ANR	358483	ExpressionStatement	temp = rsgcryModename2Mode ( optarg )	495:3:11970:12004	358297	39	True				
ANR	358484	AssignmentExpression	temp = rsgcryModename2Mode ( optarg )		358297	0		=			
ANR	358485	Identifier	temp		358297	0					
ANR	358486	CallExpression	rsgcryModename2Mode ( optarg )		358297	1					
ANR	358487	Callee	rsgcryModename2Mode		358297	0					
ANR	358488	Identifier	rsgcryModename2Mode		358297	0					
ANR	358489	ArgumentList	optarg		358297	1					
ANR	358490	Argument	optarg		358297	0					
ANR	358491	Identifier	optarg		358297	0					
ANR	358492	IfStatement	if ( temp == GCRY_CIPHER_MODE_NONE )		358297	40					
ANR	358493	Condition	temp == GCRY_CIPHER_MODE_NONE	496:6:12012:12040	358297	0	True				
ANR	358494	EqualityExpression	temp == GCRY_CIPHER_MODE_NONE		358297	0		==			
ANR	358495	Identifier	temp		358297	0					
ANR	358496	Identifier	GCRY_CIPHER_MODE_NONE		358297	1					
ANR	358497	CompoundStatement		54:37:1154:1154	358297	1					
ANR	358498	Statement	fprintf	497:4:12049:12055	358297	0	True				
ANR	358499	Statement	(	497:11:12056:12056	358297	1	True				
ANR	358500	Statement	stderr	497:12:12057:12062	358297	2	True				
ANR	358501	Statement	","	497:18:12063:12063	358297	3	True				
ANR	358502	Statement	"""ERROR: cipher mode \\""%s\\"" is not """	497:20:12065:12099	358297	4	True				
ANR	358503	Statement	"""kown/supported\\n"""	498:5:12106:12123	358297	5	True				
ANR	358504	Statement	","	498:23:12124:12124	358297	6	True				
ANR	358505	Statement	optarg	498:25:12126:12131	358297	7	True				
ANR	358506	Statement	)	498:31:12132:12132	358297	8	True				
ANR	358507	ExpressionStatement		498:32:12133:12133	358297	9	True				
ANR	358508	ExpressionStatement	exit ( 1 )	499:4:12139:12146	358297	10	True				
ANR	358509	CallExpression	exit ( 1 )		358297	0					
ANR	358510	Callee	exit		358297	0					
ANR	358511	Identifier	exit		358297	0					
ANR	358512	ArgumentList	1		358297	1					
ANR	358513	Argument	1		358297	0					
ANR	358514	PrimaryExpression	1		358297	0					
ANR	358515	ExpressionStatement	cry_mode = temp	501:3:12156:12171	358297	41	True				
ANR	358516	AssignmentExpression	cry_mode = temp		358297	0		=			
ANR	358517	Identifier	cry_mode		358297	0					
ANR	358518	Identifier	temp		358297	1					
ANR	358519	BreakStatement	break ;	502:3:12176:12181	358297	42	True				
ANR	358520	Label	case 'v' :	503:2:12185:12193	358297	43	True				
ANR	358521	ExpressionStatement	verbose = 1	504:3:12198:12209	358297	44	True				
ANR	358522	AssignmentExpression	verbose = 1		358297	0		=			
ANR	358523	Identifier	verbose		358297	0					
ANR	358524	PrimaryExpression	1		358297	1					
ANR	358525	BreakStatement	break ;	505:3:12214:12219	358297	45	True				
ANR	358526	Label	case 'V' :	506:2:12223:12231	358297	46	True				
ANR	358527	Statement	fprintf	507:3:12236:12242	358297	47	True				
ANR	358528	Statement	(	507:10:12243:12243	358297	48	True				
ANR	358529	Statement	stderr	507:11:12244:12249	358297	49	True				
ANR	358530	Statement	","	507:17:12250:12250	358297	50	True				
ANR	358531	Statement	"""rsgtutil """	507:19:12252:12262	358297	51	True				
ANR	358532	Statement	VERSION	507:31:12264:12270	358297	52	True				
ANR	358533	Statement	"""\\n"""	507:39:12272:12275	358297	53	True				
ANR	358534	Statement	)	507:43:12276:12276	358297	54	True				
ANR	358535	ExpressionStatement		507:44:12277:12277	358297	55	True				
ANR	358536	ExpressionStatement	exit ( 0 )	508:3:12282:12289	358297	56	True				
ANR	358537	CallExpression	exit ( 0 )		358297	0					
ANR	358538	Callee	exit		358297	0					
ANR	358539	Identifier	exit		358297	0					
ANR	358540	ArgumentList	0		358297	1					
ANR	358541	Argument	0		358297	0					
ANR	358542	PrimaryExpression	0		358297	0					
ANR	358543	BreakStatement	break ;	509:3:12294:12299	358297	57	True				
ANR	358544	Label	case '?' :	510:2:12303:12311	358297	58	True				
ANR	358545	BreakStatement	break ;	511:3:12316:12321	358297	59	True				
ANR	358546	Label	default :	512:2:12325:12332	358297	60	True				
ANR	358547	Identifier	default		358297	0					
ANR	358548	ExpressionStatement	"fprintf ( stderr , ""getopt_long() returns unknown value %d\\n"" , opt )"	512:10:12333:12397	358297	61	True				
ANR	358549	CallExpression	"fprintf ( stderr , ""getopt_long() returns unknown value %d\\n"" , opt )"		358297	0					
ANR	358550	Callee	fprintf		358297	0					
ANR	358551	Identifier	fprintf		358297	0					
ANR	358552	ArgumentList	stderr		358297	1					
ANR	358553	Argument	stderr		358297	0					
ANR	358554	Identifier	stderr		358297	0					
ANR	358555	Argument	"""getopt_long() returns unknown value %d\\n"""		358297	1					
ANR	358556	PrimaryExpression	"""getopt_long() returns unknown value %d\\n"""		358297	0					
ANR	358557	Argument	opt		358297	2					
ANR	358558	Identifier	opt		358297	0					
ANR	358559	ReturnStatement	return 1 ;	513:3:12402:12410	358297	62	True				
ANR	358560	PrimaryExpression	1		358297	0					
ANR	358561	ExpressionStatement	setKey ( )	517:1:12421:12429	358297	5	True				
ANR	358562	CallExpression	setKey ( )		358297	0					
ANR	358563	Callee	setKey		358297	0					
ANR	358564	Identifier	setKey		358297	0					
ANR	358565	ArgumentList			358297	1					
ANR	358566	IfStatement	if ( mode == MD_WRITE_KEYFILE )		358297	6					
ANR	358567	Condition	mode == MD_WRITE_KEYFILE	519:4:12436:12459	358297	0	True				
ANR	358568	EqualityExpression	mode == MD_WRITE_KEYFILE		358297	0		==			
ANR	358569	Identifier	mode		358297	0					
ANR	358570	Identifier	MD_WRITE_KEYFILE		358297	1					
ANR	358571	CompoundStatement		77:30:1573:1573	358297	1					
ANR	358572	IfStatement	if ( optind != argc )		358297	0					
ANR	358573	Condition	optind != argc	520:5:12469:12482	358297	0	True				
ANR	358574	EqualityExpression	optind != argc		358297	0		!=			
ANR	358575	Identifier	optind		358297	0					
ANR	358576	Identifier	argc		358297	1					
ANR	358577	CompoundStatement		78:21:1596:1596	358297	1					
ANR	358578	Statement	fprintf	521:3:12490:12496	358297	0	True				
ANR	358579	Statement	(	521:10:12497:12497	358297	1	True				
ANR	358580	Statement	stderr	521:11:12498:12503	358297	2	True				
ANR	358581	Statement	","	521:17:12504:12504	358297	3	True				
ANR	358582	Statement	"""ERROR: no file parameters permitted in """	521:19:12506:12546	358297	4	True				
ANR	358583	Statement	"""--write-keyfile mode\\n"""	522:4:12552:12575	358297	5	True				
ANR	358584	Statement	)	522:28:12576:12576	358297	6	True				
ANR	358585	ExpressionStatement		522:29:12577:12577	358297	7	True				
ANR	358586	ExpressionStatement	exit ( 1 )	523:3:12582:12589	358297	8	True				
ANR	358587	CallExpression	exit ( 1 )		358297	0					
ANR	358588	Callee	exit		358297	0					
ANR	358589	Identifier	exit		358297	0					
ANR	358590	ArgumentList	1		358297	1					
ANR	358591	Argument	1		358297	0					
ANR	358592	PrimaryExpression	1		358297	0					
ANR	358593	ExpressionStatement	write_keyfile ( newKeyFile )	525:2:12597:12622	358297	1	True				
ANR	358594	CallExpression	write_keyfile ( newKeyFile )		358297	0					
ANR	358595	Callee	write_keyfile		358297	0					
ANR	358596	Identifier	write_keyfile		358297	0					
ANR	358597	ArgumentList	newKeyFile		358297	1					
ANR	358598	Argument	newKeyFile		358297	0					
ANR	358599	Identifier	newKeyFile		358297	0					
ANR	358600	ElseStatement	else		358297	0					
ANR	358601	CompoundStatement		84:8:1743:1743	358297	0					
ANR	358602	IfStatement	if ( optind == argc )		358297	0					
ANR	358603	Condition	optind == argc	527:5:12639:12652	358297	0	True				
ANR	358604	EqualityExpression	optind == argc		358297	0		==			
ANR	358605	Identifier	optind		358297	0					
ANR	358606	Identifier	argc		358297	1					
ANR	358607	ExpressionStatement	"decrypt ( ""-"" )"	528:3:12658:12670	358297	1	True				
ANR	358608	CallExpression	"decrypt ( ""-"" )"		358297	0					
ANR	358609	Callee	decrypt		358297	0					
ANR	358610	Identifier	decrypt		358297	0					
ANR	358611	ArgumentList	"""-"""		358297	1					
ANR	358612	Argument	"""-"""		358297	0					
ANR	358613	PrimaryExpression	"""-"""		358297	0					
ANR	358614	ElseStatement	else		358297	0					
ANR	358615	CompoundStatement		87:7:1790:1790	358297	0					
ANR	358616	ForStatement	for ( i = optind ; i < argc ; ++ i )		358297	0					
ANR	358617	ForInit	i = optind ;	530:7:12688:12699	358297	0	True				
ANR	358618	AssignmentExpression	i = optind		358297	0		=			
ANR	358619	Identifier	i		358297	0					
ANR	358620	Identifier	optind		358297	1					
ANR	358621	Condition	i < argc	530:20:12701:12708	358297	1	True				
ANR	358622	RelationalExpression	i < argc		358297	0		<			
ANR	358623	Identifier	i		358297	0					
ANR	358624	Identifier	argc		358297	1					
ANR	358625	UnaryExpression	++ i	530:31:12712:12714	358297	2	True				
ANR	358626	IncDec	++		358297	0					
ANR	358627	Identifier	i		358297	1					
ANR	358628	ExpressionStatement	decrypt ( argv [ i ] )	531:4:12721:12737	358297	3	True				
ANR	358629	CallExpression	decrypt ( argv [ i ] )		358297	0					
ANR	358630	Callee	decrypt		358297	0					
ANR	358631	Identifier	decrypt		358297	0					
ANR	358632	ArgumentList	argv [ i ]		358297	1					
ANR	358633	Argument	argv [ i ]		358297	0					
ANR	358634	ArrayIndexing	argv [ i ]		358297	0					
ANR	358635	Identifier	argv		358297	0					
ANR	358636	Identifier	i		358297	1					
ANR	358637	ExpressionStatement	"memset ( cry_key , 0 , cry_keylen )"	535:1:12748:12778	358297	7	True				
ANR	358638	CallExpression	"memset ( cry_key , 0 , cry_keylen )"		358297	0					
ANR	358639	Callee	memset		358297	0					
ANR	358640	Identifier	memset		358297	0					
ANR	358641	ArgumentList	cry_key		358297	1					
ANR	358642	Argument	cry_key		358297	0					
ANR	358643	Identifier	cry_key		358297	0					
ANR	358644	Argument	0		358297	1					
ANR	358645	PrimaryExpression	0		358297	0					
ANR	358646	Argument	cry_keylen		358297	2					
ANR	358647	Identifier	cry_keylen		358297	0					
ANR	358648	ExpressionStatement	cry_keylen = 0	536:1:12806:12820	358297	8	True				
ANR	358649	AssignmentExpression	cry_keylen = 0		358297	0		=			
ANR	358650	Identifier	cry_keylen		358297	0					
ANR	358651	PrimaryExpression	0		358297	1					
ANR	358652	ReturnStatement	return 0 ;	537:1:12823:12831	358297	9	True				
ANR	358653	PrimaryExpression	0		358297	0					
ANR	358654	ReturnType	int		358297	1					
ANR	358655	Identifier	main		358297	2					
ANR	358656	ParameterList	"int argc , char * argv [ ]"		358297	3					
ANR	358657	Parameter	int argc	442:5:10864:10871	358297	0	True				
ANR	358658	ParameterType	int		358297	0					
ANR	358659	Identifier	argc		358297	1					
ANR	358660	Parameter	char * argv [ ]	442:15:10874:10885	358297	1	True				
ANR	358661	ParameterType	char * [ ]		358297	0					
ANR	358662	Identifier	argv		358297	1					
ANR	358663	CFGEntryNode	ENTRY		358297		True				
ANR	358664	CFGExitNode	EXIT		358297		True				
ANR	358665	Symbol	GCRY_CIPHER_MODE_NONE		358297						
ANR	358666	Symbol	optind		358297						
ANR	358667	Symbol	keyprog		358297						
ANR	358668	Symbol	optarg		358297						
ANR	358669	Symbol	* argv		358297						
ANR	358670	Symbol	argv		358297						
ANR	358671	Symbol	mode		358297						
ANR	358672	Symbol	strlen		358297						
ANR	358673	Symbol	long_options		358297						
ANR	358674	Symbol	GCRY_CIPHER_NONE		358297						
ANR	358675	Symbol	MD_DECRYPT		358297						
ANR	358676	Symbol	cry_keylen		358297						
ANR	358677	Symbol	cry_mode		358297						
ANR	358678	Symbol	argc		358297						
ANR	358679	Symbol	randomKeyLen		358297						
ANR	358680	Symbol	atoi		358297						
ANR	358681	Symbol	temp		358297						
ANR	358682	Symbol	NULL		358297						
ANR	358683	Symbol	getopt_long		358297						
ANR	358684	Symbol	i		358297						
ANR	358685	Symbol	newKeyFile		358297						
ANR	358686	Symbol	stderr		358297						
ANR	358687	Symbol	cry_key		358297						
ANR	358688	Symbol	verbose		358297						
ANR	358689	Symbol	opt		358297						
ANR	358690	Symbol	rsgcryModename2Mode		358297						
ANR	358691	Symbol	* i		358297						
ANR	358692	Symbol	cry_algo		358297						
ANR	358693	Symbol	keyfile		358297						
ANR	358694	Symbol	optionForce		358297						
ANR	358695	Symbol	rsgcryAlgoname2Algo		358297						
ANR	358696	Symbol	MD_WRITE_KEYFILE		358297						
