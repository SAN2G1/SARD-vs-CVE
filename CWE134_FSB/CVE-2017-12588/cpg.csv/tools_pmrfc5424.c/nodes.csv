command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	355660	File	data/converged/CVE-2017-12588_rsyslog/tools_pmrfc5424.c								
ANR	355661	Function	parseRFCField	83:0:2415:3012							
ANR	355662	FunctionDef	"parseRFCField (uchar * * pp2parse , uchar * pResult , int * pLenStr)"		355661	0					
ANR	355663	CompoundStatement		84:0:2488:3012	355661	0					
ANR	355664	IdentifierDeclStatement	uchar * p2parse ;	85:1:2491:2505	355661	0	True				
ANR	355665	IdentifierDecl	* p2parse		355661	0					
ANR	355666	IdentifierDeclType	uchar *		355661	0					
ANR	355667	Identifier	p2parse		355661	1					
ANR	355668	IdentifierDeclStatement	int iRet = 0 ;	86:1:2508:2520	355661	1	True				
ANR	355669	IdentifierDecl	iRet = 0		355661	0					
ANR	355670	IdentifierDeclType	int		355661	0					
ANR	355671	Identifier	iRet		355661	1					
ANR	355672	AssignmentExpression	iRet = 0		355661	2		=			
ANR	355673	Identifier	iRet		355661	0					
ANR	355674	PrimaryExpression	0		355661	1					
ANR	355675	ExpressionStatement	assert ( pp2parse != NULL )	88:1:2524:2548	355661	2	True				
ANR	355676	CallExpression	assert ( pp2parse != NULL )		355661	0					
ANR	355677	Callee	assert		355661	0					
ANR	355678	Identifier	assert		355661	0					
ANR	355679	ArgumentList	pp2parse != NULL		355661	1					
ANR	355680	Argument	pp2parse != NULL		355661	0					
ANR	355681	EqualityExpression	pp2parse != NULL		355661	0		!=			
ANR	355682	Identifier	pp2parse		355661	0					
ANR	355683	Identifier	NULL		355661	1					
ANR	355684	ExpressionStatement	assert ( * pp2parse != NULL )	89:1:2551:2576	355661	3	True				
ANR	355685	CallExpression	assert ( * pp2parse != NULL )		355661	0					
ANR	355686	Callee	assert		355661	0					
ANR	355687	Identifier	assert		355661	0					
ANR	355688	ArgumentList	* pp2parse != NULL		355661	1					
ANR	355689	Argument	* pp2parse != NULL		355661	0					
ANR	355690	EqualityExpression	* pp2parse != NULL		355661	0		!=			
ANR	355691	UnaryOperationExpression	* pp2parse		355661	0					
ANR	355692	UnaryOperator	*		355661	0					
ANR	355693	Identifier	pp2parse		355661	1					
ANR	355694	Identifier	NULL		355661	1					
ANR	355695	ExpressionStatement	assert ( pResult != NULL )	90:1:2579:2602	355661	4	True				
ANR	355696	CallExpression	assert ( pResult != NULL )		355661	0					
ANR	355697	Callee	assert		355661	0					
ANR	355698	Identifier	assert		355661	0					
ANR	355699	ArgumentList	pResult != NULL		355661	1					
ANR	355700	Argument	pResult != NULL		355661	0					
ANR	355701	EqualityExpression	pResult != NULL		355661	0		!=			
ANR	355702	Identifier	pResult		355661	0					
ANR	355703	Identifier	NULL		355661	1					
ANR	355704	ExpressionStatement	p2parse = * pp2parse	92:1:2606:2625	355661	5	True				
ANR	355705	AssignmentExpression	p2parse = * pp2parse		355661	0		=			
ANR	355706	Identifier	p2parse		355661	0					
ANR	355707	UnaryOperationExpression	* pp2parse		355661	1					
ANR	355708	UnaryOperator	*		355661	0					
ANR	355709	Identifier	pp2parse		355661	1					
ANR	355710	WhileStatement	while ( * pLenStr > 0 && * p2parse != ' ' )		355661	6					
ANR	355711	Condition	* pLenStr > 0 && * p2parse != ' '	95:7:2674:2705	355661	0	True				
ANR	355712	AndExpression	* pLenStr > 0 && * p2parse != ' '		355661	0		&&			
ANR	355713	RelationalExpression	* pLenStr > 0		355661	0		>			
ANR	355714	UnaryOperationExpression	* pLenStr		355661	0					
ANR	355715	UnaryOperator	*		355661	0					
ANR	355716	Identifier	pLenStr		355661	1					
ANR	355717	PrimaryExpression	0		355661	1					
ANR	355718	EqualityExpression	* p2parse != ' '		355661	1		!=			
ANR	355719	UnaryOperationExpression	* p2parse		355661	0					
ANR	355720	UnaryOperator	*		355661	0					
ANR	355721	Identifier	p2parse		355661	1					
ANR	355722	PrimaryExpression	' '		355661	1					
ANR	355723	CompoundStatement		12:41:219:219	355661	1					
ANR	355724	ExpressionStatement	* pResult ++ = * p2parse ++	96:2:2712:2735	355661	0	True				
ANR	355725	AssignmentExpression	* pResult ++ = * p2parse ++		355661	0		=			
ANR	355726	UnaryOperationExpression	* pResult ++		355661	0					
ANR	355727	UnaryOperator	*		355661	0					
ANR	355728	PostIncDecOperationExpression	pResult ++		355661	1					
ANR	355729	Identifier	pResult		355661	0					
ANR	355730	IncDec	++		355661	1					
ANR	355731	UnaryOperationExpression	* p2parse ++		355661	1					
ANR	355732	UnaryOperator	*		355661	0					
ANR	355733	PostIncDecOperationExpression	p2parse ++		355661	1					
ANR	355734	Identifier	p2parse		355661	0					
ANR	355735	IncDec	++		355661	1					
ANR	355736	ExpressionStatement	-- ( * pLenStr )	97:2:2739:2751	355661	1	True				
ANR	355737	UnaryExpression	-- ( * pLenStr )		355661	0					
ANR	355738	IncDec	--		355661	0					
ANR	355739	UnaryOperationExpression	* pLenStr		355661	1					
ANR	355740	UnaryOperator	*		355661	0					
ANR	355741	Identifier	pLenStr		355661	1					
ANR	355742	IfStatement	if ( * pLenStr > 0 && * p2parse == ' ' )		355661	7					
ANR	355743	Condition	* pLenStr > 0 && * p2parse == ' '	100:4:2761:2791	355661	0	True				
ANR	355744	AndExpression	* pLenStr > 0 && * p2parse == ' '		355661	0		&&			
ANR	355745	RelationalExpression	* pLenStr > 0		355661	0		>			
ANR	355746	UnaryOperationExpression	* pLenStr		355661	0					
ANR	355747	UnaryOperator	*		355661	0					
ANR	355748	Identifier	pLenStr		355661	1					
ANR	355749	PrimaryExpression	0		355661	1					
ANR	355750	EqualityExpression	* p2parse == ' '		355661	1		==			
ANR	355751	UnaryOperationExpression	* p2parse		355661	0					
ANR	355752	UnaryOperator	*		355661	0					
ANR	355753	Identifier	p2parse		355661	1					
ANR	355754	PrimaryExpression	' '		355661	1					
ANR	355755	CompoundStatement		17:37:305:305	355661	1					
ANR	355756	ExpressionStatement	++ p2parse	101:2:2798:2807	355661	0	True				
ANR	355757	UnaryExpression	++ p2parse		355661	0					
ANR	355758	IncDec	++		355661	0					
ANR	355759	Identifier	p2parse		355661	1					
ANR	355760	ExpressionStatement	-- ( * pLenStr )	102:2:2858:2870	355661	1	True				
ANR	355761	UnaryExpression	-- ( * pLenStr )		355661	0					
ANR	355762	IncDec	--		355661	0					
ANR	355763	UnaryOperationExpression	* pLenStr		355661	1					
ANR	355764	UnaryOperator	*		355661	0					
ANR	355765	Identifier	pLenStr		355661	1					
ANR	355766	ElseStatement	else		355661	0					
ANR	355767	CompoundStatement		20:8:391:391	355661	0					
ANR	355768	ExpressionStatement	iRet = 1	104:2:2884:2892	355661	0	True				
ANR	355769	AssignmentExpression	iRet = 1		355661	0		=			
ANR	355770	Identifier	iRet		355661	0					
ANR	355771	PrimaryExpression	1		355661	1					
ANR	355772	ExpressionStatement	* pResult = '\\0'	106:1:2925:2940	355661	8	True				
ANR	355773	AssignmentExpression	* pResult = '\\0'		355661	0		=			
ANR	355774	UnaryOperationExpression	* pResult		355661	0					
ANR	355775	UnaryOperator	*		355661	0					
ANR	355776	Identifier	pResult		355661	1					
ANR	355777	PrimaryExpression	'\\0'		355661	1					
ANR	355778	ExpressionStatement	* pp2parse = p2parse	109:1:2977:2996	355661	9	True				
ANR	355779	AssignmentExpression	* pp2parse = p2parse		355661	0		=			
ANR	355780	UnaryOperationExpression	* pp2parse		355661	0					
ANR	355781	UnaryOperator	*		355661	0					
ANR	355782	Identifier	pp2parse		355661	1					
ANR	355783	Identifier	p2parse		355661	1					
ANR	355784	ReturnStatement	return iRet ;	110:1:2999:3010	355661	10	True				
ANR	355785	Identifier	iRet		355661	0					
ANR	355786	ReturnType	static int		355661	1					
ANR	355787	Identifier	parseRFCField		355661	2					
ANR	355788	ParameterList	"uchar * * pp2parse , uchar * pResult , int * pLenStr"		355661	3					
ANR	355789	Parameter	uchar * * pp2parse	83:25:2440:2455	355661	0	True				
ANR	355790	ParameterType	uchar * *		355661	0					
ANR	355791	Identifier	pp2parse		355661	1					
ANR	355792	Parameter	uchar * pResult	83:43:2458:2471	355661	1	True				
ANR	355793	ParameterType	uchar *		355661	0					
ANR	355794	Identifier	pResult		355661	1					
ANR	355795	Parameter	int * pLenStr	83:59:2474:2485	355661	2	True				
ANR	355796	ParameterType	int *		355661	0					
ANR	355797	Identifier	pLenStr		355661	1					
ANR	355798	CFGEntryNode	ENTRY		355661		True				
ANR	355799	CFGExitNode	EXIT		355661		True				
ANR	355800	Symbol	pLenStr		355661						
ANR	355801	Symbol	* pResult ++		355661						
ANR	355802	Symbol	pResult		355661						
ANR	355803	Symbol	NULL		355661						
ANR	355804	Symbol	* p2parse ++		355661						
ANR	355805	Symbol	p2parse		355661						
ANR	355806	Symbol	* pp2parse		355661						
ANR	355807	Symbol	pp2parse		355661						
ANR	355808	Symbol	iRet		355661						
ANR	355809	Symbol	* pLenStr		355661						
ANR	355810	Symbol	* pResult		355661						
ANR	355811	Symbol	* p2parse		355661						
ANR	355812	Function	parseRFCStructuredData	126:0:3725:5491							
ANR	355813	FunctionDef	"parseRFCStructuredData (uchar * * pp2parse , uchar * pResult , int * pLenStr)"		355812	0					
ANR	355814	CompoundStatement		127:0:3807:5491	355812	0					
ANR	355815	IdentifierDeclStatement	uchar * p2parse ;	128:1:3810:3824	355812	0	True				
ANR	355816	IdentifierDecl	* p2parse		355812	0					
ANR	355817	IdentifierDeclType	uchar *		355812	0					
ANR	355818	Identifier	p2parse		355812	1					
ANR	355819	IdentifierDeclStatement	int bCont = 1 ;	129:1:3827:3840	355812	1	True				
ANR	355820	IdentifierDecl	bCont = 1		355812	0					
ANR	355821	IdentifierDeclType	int		355812	0					
ANR	355822	Identifier	bCont		355812	1					
ANR	355823	AssignmentExpression	bCont = 1		355812	2		=			
ANR	355824	Identifier	bCont		355812	0					
ANR	355825	PrimaryExpression	1		355812	1					
ANR	355826	IdentifierDeclStatement	int iRet = 0 ;	130:1:3843:3855	355812	2	True				
ANR	355827	IdentifierDecl	iRet = 0		355812	0					
ANR	355828	IdentifierDeclType	int		355812	0					
ANR	355829	Identifier	iRet		355812	1					
ANR	355830	AssignmentExpression	iRet = 0		355812	2		=			
ANR	355831	Identifier	iRet		355812	0					
ANR	355832	PrimaryExpression	0		355812	1					
ANR	355833	IdentifierDeclStatement	int lenStr ;	131:1:3858:3868	355812	3	True				
ANR	355834	IdentifierDecl	lenStr		355812	0					
ANR	355835	IdentifierDeclType	int		355812	0					
ANR	355836	Identifier	lenStr		355812	1					
ANR	355837	ExpressionStatement	assert ( pp2parse != NULL )	133:1:3872:3896	355812	4	True				
ANR	355838	CallExpression	assert ( pp2parse != NULL )		355812	0					
ANR	355839	Callee	assert		355812	0					
ANR	355840	Identifier	assert		355812	0					
ANR	355841	ArgumentList	pp2parse != NULL		355812	1					
ANR	355842	Argument	pp2parse != NULL		355812	0					
ANR	355843	EqualityExpression	pp2parse != NULL		355812	0		!=			
ANR	355844	Identifier	pp2parse		355812	0					
ANR	355845	Identifier	NULL		355812	1					
ANR	355846	ExpressionStatement	assert ( * pp2parse != NULL )	134:1:3899:3924	355812	5	True				
ANR	355847	CallExpression	assert ( * pp2parse != NULL )		355812	0					
ANR	355848	Callee	assert		355812	0					
ANR	355849	Identifier	assert		355812	0					
ANR	355850	ArgumentList	* pp2parse != NULL		355812	1					
ANR	355851	Argument	* pp2parse != NULL		355812	0					
ANR	355852	EqualityExpression	* pp2parse != NULL		355812	0		!=			
ANR	355853	UnaryOperationExpression	* pp2parse		355812	0					
ANR	355854	UnaryOperator	*		355812	0					
ANR	355855	Identifier	pp2parse		355812	1					
ANR	355856	Identifier	NULL		355812	1					
ANR	355857	ExpressionStatement	assert ( pResult != NULL )	135:1:3927:3950	355812	6	True				
ANR	355858	CallExpression	assert ( pResult != NULL )		355812	0					
ANR	355859	Callee	assert		355812	0					
ANR	355860	Identifier	assert		355812	0					
ANR	355861	ArgumentList	pResult != NULL		355812	1					
ANR	355862	Argument	pResult != NULL		355812	0					
ANR	355863	EqualityExpression	pResult != NULL		355812	0		!=			
ANR	355864	Identifier	pResult		355812	0					
ANR	355865	Identifier	NULL		355812	1					
ANR	355866	ExpressionStatement	p2parse = * pp2parse	137:1:3954:3973	355812	7	True				
ANR	355867	AssignmentExpression	p2parse = * pp2parse		355812	0		=			
ANR	355868	Identifier	p2parse		355812	0					
ANR	355869	UnaryOperationExpression	* pp2parse		355812	1					
ANR	355870	UnaryOperator	*		355812	0					
ANR	355871	Identifier	pp2parse		355812	1					
ANR	355872	ExpressionStatement	lenStr = * pLenStr	138:1:3976:3993	355812	8	True				
ANR	355873	AssignmentExpression	lenStr = * pLenStr		355812	0		=			
ANR	355874	Identifier	lenStr		355812	0					
ANR	355875	UnaryOperationExpression	* pLenStr		355812	1					
ANR	355876	UnaryOperator	*		355812	0					
ANR	355877	Identifier	pLenStr		355812	1					
ANR	355878	IfStatement	if ( lenStr == 0 || ( * p2parse != '[' && * p2parse != '-' ) )		355812	9					
ANR	355879	Condition	lenStr == 0 || ( * p2parse != '[' && * p2parse != '-' )	146:4:4288:4338	355812	0	True				
ANR	355880	OrExpression	lenStr == 0 || ( * p2parse != '[' && * p2parse != '-' )		355812	0		||			
ANR	355881	EqualityExpression	lenStr == 0		355812	0		==			
ANR	355882	Identifier	lenStr		355812	0					
ANR	355883	PrimaryExpression	0		355812	1					
ANR	355884	AndExpression	* p2parse != '[' && * p2parse != '-'		355812	1		&&			
ANR	355885	EqualityExpression	* p2parse != '['		355812	0		!=			
ANR	355886	UnaryOperationExpression	* p2parse		355812	0					
ANR	355887	UnaryOperator	*		355812	0					
ANR	355888	Identifier	p2parse		355812	1					
ANR	355889	PrimaryExpression	'['		355812	1					
ANR	355890	EqualityExpression	* p2parse != '-'		355812	1		!=			
ANR	355891	UnaryOperationExpression	* p2parse		355812	0					
ANR	355892	UnaryOperator	*		355812	0					
ANR	355893	Identifier	p2parse		355812	1					
ANR	355894	PrimaryExpression	'-'		355812	1					
ANR	355895	ReturnStatement	return 1 ;	147:2:4343:4351	355812	1	True				
ANR	355896	PrimaryExpression	1		355812	0					
ANR	355897	IfStatement	if ( * p2parse == '-' )		355812	10					
ANR	355898	Condition	* p2parse == '-'	149:4:4393:4407	355812	0	True				
ANR	355899	EqualityExpression	* p2parse == '-'		355812	0		==			
ANR	355900	UnaryOperationExpression	* p2parse		355812	0					
ANR	355901	UnaryOperator	*		355812	0					
ANR	355902	Identifier	p2parse		355812	1					
ANR	355903	PrimaryExpression	'-'		355812	1					
ANR	355904	CompoundStatement		23:21:602:602	355812	1					
ANR	355905	ExpressionStatement	* pResult ++ = '-'	150:2:4443:4459	355812	0	True				
ANR	355906	AssignmentExpression	* pResult ++ = '-'		355812	0		=			
ANR	355907	UnaryOperationExpression	* pResult ++		355812	0					
ANR	355908	UnaryOperator	*		355812	0					
ANR	355909	PostIncDecOperationExpression	pResult ++		355812	1					
ANR	355910	Identifier	pResult		355812	0					
ANR	355911	IncDec	++		355812	1					
ANR	355912	PrimaryExpression	'-'		355812	1					
ANR	355913	ExpressionStatement	++ p2parse	151:2:4463:4472	355812	1	True				
ANR	355914	UnaryExpression	++ p2parse		355812	0					
ANR	355915	IncDec	++		355812	0					
ANR	355916	Identifier	p2parse		355812	1					
ANR	355917	ExpressionStatement	-- lenStr	152:2:4476:4484	355812	2	True				
ANR	355918	UnaryExpression	-- lenStr		355812	0					
ANR	355919	IncDec	--		355812	0					
ANR	355920	Identifier	lenStr		355812	1					
ANR	355921	ElseStatement	else		355812	0					
ANR	355922	CompoundStatement		27:8:686:686	355812	0					
ANR	355923	WhileStatement	while ( bCont )		355812	0					
ANR	355924	Condition	bCont	154:8:4504:4508	355812	0	True				
ANR	355925	Identifier	bCont		355812	0					
ANR	355926	CompoundStatement		28:15:703:703	355812	1					
ANR	355927	IfStatement	if ( lenStr < 2 )		355812	0					
ANR	355928	Condition	lenStr < 2	155:6:4519:4528	355812	0	True				
ANR	355929	RelationalExpression	lenStr < 2		355812	0		<			
ANR	355930	Identifier	lenStr		355812	0					
ANR	355931	PrimaryExpression	2		355812	1					
ANR	355932	CompoundStatement		29:18:723:723	355812	1					
ANR	355933	IfStatement	if ( lenStr > 0 && * p2parse == ']' )		355812	0					
ANR	355934	Condition	lenStr > 0 && * p2parse == ']'	157:7:4603:4631	355812	0	True				
ANR	355935	AndExpression	lenStr > 0 && * p2parse == ']'		355812	0		&&			
ANR	355936	RelationalExpression	lenStr > 0		355812	0		>			
ANR	355937	Identifier	lenStr		355812	0					
ANR	355938	PrimaryExpression	0		355812	1					
ANR	355939	EqualityExpression	* p2parse == ']'		355812	1		==			
ANR	355940	UnaryOperationExpression	* p2parse		355812	0					
ANR	355941	UnaryOperator	*		355812	0					
ANR	355942	Identifier	p2parse		355812	1					
ANR	355943	PrimaryExpression	']'		355812	1					
ANR	355944	CompoundStatement		31:38:826:826	355812	1					
ANR	355945	ExpressionStatement	* pResult ++ = * p2parse	158:5:4641:4662	355812	0	True				
ANR	355946	AssignmentExpression	* pResult ++ = * p2parse		355812	0		=			
ANR	355947	UnaryOperationExpression	* pResult ++		355812	0					
ANR	355948	UnaryOperator	*		355812	0					
ANR	355949	PostIncDecOperationExpression	pResult ++		355812	1					
ANR	355950	Identifier	pResult		355812	0					
ANR	355951	IncDec	++		355812	1					
ANR	355952	UnaryOperationExpression	* p2parse		355812	1					
ANR	355953	UnaryOperator	*		355812	0					
ANR	355954	Identifier	p2parse		355812	1					
ANR	355955	ExpressionStatement	p2parse ++	159:5:4669:4678	355812	1	True				
ANR	355956	PostIncDecOperationExpression	p2parse ++		355812	0					
ANR	355957	Identifier	p2parse		355812	0					
ANR	355958	IncDec	++		355812	1					
ANR	355959	ExpressionStatement	lenStr --	160:5:4685:4693	355812	2	True				
ANR	355960	PostIncDecOperationExpression	lenStr --		355812	0					
ANR	355961	Identifier	lenStr		355812	0					
ANR	355962	IncDec	--		355812	1					
ANR	355963	ExpressionStatement	bCont = 0	161:5:4700:4709	355812	3	True				
ANR	355964	AssignmentExpression	bCont = 0		355812	0		=			
ANR	355965	Identifier	bCont		355812	0					
ANR	355966	PrimaryExpression	0		355812	1					
ANR	355967	ElseStatement	else		355812	0					
ANR	355968	CompoundStatement		36:11:914:914	355812	0					
ANR	355969	ExpressionStatement	iRet = 1	163:5:4729:4737	355812	0	True				
ANR	355970	AssignmentExpression	iRet = 1		355812	0		=			
ANR	355971	Identifier	iRet		355812	0					
ANR	355972	PrimaryExpression	1		355812	1					
ANR	355973	ExpressionStatement	bCont = 0	164:5:4769:4778	355812	1	True				
ANR	355974	AssignmentExpression	bCont = 0		355812	0		=			
ANR	355975	Identifier	bCont		355812	0					
ANR	355976	PrimaryExpression	0		355812	1					
ANR	355977	ElseStatement	else		355812	0					
ANR	355978	IfStatement	if ( * p2parse == '\\\\' && * ( p2parse + 1 ) == ']' )		355812	0					
ANR	355979	Condition	* p2parse == '\\\\' && * ( p2parse + 1 ) == ']'	166:13:4799:4837	355812	0	True				
ANR	355980	AndExpression	* p2parse == '\\\\' && * ( p2parse + 1 ) == ']'		355812	0		&&			
ANR	355981	EqualityExpression	* p2parse == '\\\\'		355812	0		==			
ANR	355982	UnaryOperationExpression	* p2parse		355812	0					
ANR	355983	UnaryOperator	*		355812	0					
ANR	355984	Identifier	p2parse		355812	1					
ANR	355985	PrimaryExpression	'\\\\'		355812	1					
ANR	355986	EqualityExpression	* ( p2parse + 1 ) == ']'		355812	1		==			
ANR	355987	UnaryOperationExpression	* ( p2parse + 1 )		355812	0					
ANR	355988	UnaryOperator	*		355812	0					
ANR	355989	AdditiveExpression	p2parse + 1		355812	1		+			
ANR	355990	Identifier	p2parse		355812	0					
ANR	355991	PrimaryExpression	1		355812	1					
ANR	355992	PrimaryExpression	']'		355812	1					
ANR	355993	CompoundStatement		40:54:1032:1032	355812	1					
ANR	355994	ExpressionStatement	* pResult ++ = * p2parse ++	168:4:4891:4914	355812	0	True				
ANR	355995	AssignmentExpression	* pResult ++ = * p2parse ++		355812	0		=			
ANR	355996	UnaryOperationExpression	* pResult ++		355812	0					
ANR	355997	UnaryOperator	*		355812	0					
ANR	355998	PostIncDecOperationExpression	pResult ++		355812	1					
ANR	355999	Identifier	pResult		355812	0					
ANR	356000	IncDec	++		355812	1					
ANR	356001	UnaryOperationExpression	* p2parse ++		355812	1					
ANR	356002	UnaryOperator	*		355812	0					
ANR	356003	PostIncDecOperationExpression	p2parse ++		355812	1					
ANR	356004	Identifier	p2parse		355812	0					
ANR	356005	IncDec	++		355812	1					
ANR	356006	ExpressionStatement	* pResult ++ = * p2parse ++	169:4:4920:4943	355812	1	True				
ANR	356007	AssignmentExpression	* pResult ++ = * p2parse ++		355812	0		=			
ANR	356008	UnaryOperationExpression	* pResult ++		355812	0					
ANR	356009	UnaryOperator	*		355812	0					
ANR	356010	PostIncDecOperationExpression	pResult ++		355812	1					
ANR	356011	Identifier	pResult		355812	0					
ANR	356012	IncDec	++		355812	1					
ANR	356013	UnaryOperationExpression	* p2parse ++		355812	1					
ANR	356014	UnaryOperator	*		355812	0					
ANR	356015	PostIncDecOperationExpression	p2parse ++		355812	1					
ANR	356016	Identifier	p2parse		355812	0					
ANR	356017	IncDec	++		355812	1					
ANR	356018	ExpressionStatement	lenStr -= 2	170:4:4949:4960	355812	2	True				
ANR	356019	AssignmentExpression	lenStr -= 2		355812	0		-=			
ANR	356020	Identifier	lenStr		355812	0					
ANR	356021	PrimaryExpression	2		355812	1					
ANR	356022	ElseStatement	else		355812	0					
ANR	356023	IfStatement	if ( * p2parse == ']' && * ( p2parse + 1 ) == ' ' )		355812	0					
ANR	356024	Condition	* p2parse == ']' && * ( p2parse + 1 ) == ' '	171:13:4975:5012	355812	0	True				
ANR	356025	AndExpression	* p2parse == ']' && * ( p2parse + 1 ) == ' '		355812	0		&&			
ANR	356026	EqualityExpression	* p2parse == ']'		355812	0		==			
ANR	356027	UnaryOperationExpression	* p2parse		355812	0					
ANR	356028	UnaryOperator	*		355812	0					
ANR	356029	Identifier	p2parse		355812	1					
ANR	356030	PrimaryExpression	']'		355812	1					
ANR	356031	EqualityExpression	* ( p2parse + 1 ) == ' '		355812	1		==			
ANR	356032	UnaryOperationExpression	* ( p2parse + 1 )		355812	0					
ANR	356033	UnaryOperator	*		355812	0					
ANR	356034	AdditiveExpression	p2parse + 1		355812	1		+			
ANR	356035	Identifier	p2parse		355812	0					
ANR	356036	PrimaryExpression	1		355812	1					
ANR	356037	PrimaryExpression	' '		355812	1					
ANR	356038	CompoundStatement		45:53:1207:1207	355812	1					
ANR	356039	ExpressionStatement	* pResult ++ = * p2parse	173:4:5081:5102	355812	0	True				
ANR	356040	AssignmentExpression	* pResult ++ = * p2parse		355812	0		=			
ANR	356041	UnaryOperationExpression	* pResult ++		355812	0					
ANR	356042	UnaryOperator	*		355812	0					
ANR	356043	PostIncDecOperationExpression	pResult ++		355812	1					
ANR	356044	Identifier	pResult		355812	0					
ANR	356045	IncDec	++		355812	1					
ANR	356046	UnaryOperationExpression	* p2parse		355812	1					
ANR	356047	UnaryOperator	*		355812	0					
ANR	356048	Identifier	p2parse		355812	1					
ANR	356049	ExpressionStatement	p2parse += 2	174:4:5108:5120	355812	1	True				
ANR	356050	AssignmentExpression	p2parse += 2		355812	0		+=			
ANR	356051	Identifier	p2parse		355812	0					
ANR	356052	PrimaryExpression	2		355812	1					
ANR	356053	ExpressionStatement	lenStr -= 2	175:4:5126:5137	355812	2	True				
ANR	356054	AssignmentExpression	lenStr -= 2		355812	0		-=			
ANR	356055	Identifier	lenStr		355812	0					
ANR	356056	PrimaryExpression	2		355812	1					
ANR	356057	ExpressionStatement	bCont = 0	176:4:5143:5152	355812	3	True				
ANR	356058	AssignmentExpression	bCont = 0		355812	0		=			
ANR	356059	Identifier	bCont		355812	0					
ANR	356060	PrimaryExpression	0		355812	1					
ANR	356061	ElseStatement	else		355812	0					
ANR	356062	CompoundStatement		51:10:1356:1356	355812	0					
ANR	356063	ExpressionStatement	* pResult ++ = * p2parse ++	178:4:5170:5193	355812	0	True				
ANR	356064	AssignmentExpression	* pResult ++ = * p2parse ++		355812	0		=			
ANR	356065	UnaryOperationExpression	* pResult ++		355812	0					
ANR	356066	UnaryOperator	*		355812	0					
ANR	356067	PostIncDecOperationExpression	pResult ++		355812	1					
ANR	356068	Identifier	pResult		355812	0					
ANR	356069	IncDec	++		355812	1					
ANR	356070	UnaryOperationExpression	* p2parse ++		355812	1					
ANR	356071	UnaryOperator	*		355812	0					
ANR	356072	PostIncDecOperationExpression	p2parse ++		355812	1					
ANR	356073	Identifier	p2parse		355812	0					
ANR	356074	IncDec	++		355812	1					
ANR	356075	ExpressionStatement	-- lenStr	179:4:5199:5207	355812	1	True				
ANR	356076	UnaryExpression	-- lenStr		355812	0					
ANR	356077	IncDec	--		355812	0					
ANR	356078	Identifier	lenStr		355812	1					
ANR	356079	IfStatement	if ( lenStr > 0 && * p2parse == ' ' )		355812	11					
ANR	356080	Condition	lenStr > 0 && * p2parse == ' '	184:4:5226:5254	355812	0	True				
ANR	356081	AndExpression	lenStr > 0 && * p2parse == ' '		355812	0		&&			
ANR	356082	RelationalExpression	lenStr > 0		355812	0		>			
ANR	356083	Identifier	lenStr		355812	0					
ANR	356084	PrimaryExpression	0		355812	1					
ANR	356085	EqualityExpression	* p2parse == ' '		355812	1		==			
ANR	356086	UnaryOperationExpression	* p2parse		355812	0					
ANR	356087	UnaryOperator	*		355812	0					
ANR	356088	Identifier	p2parse		355812	1					
ANR	356089	PrimaryExpression	' '		355812	1					
ANR	356090	CompoundStatement		58:35:1449:1449	355812	1					
ANR	356091	ExpressionStatement	++ p2parse	185:2:5261:5270	355812	0	True				
ANR	356092	UnaryExpression	++ p2parse		355812	0					
ANR	356093	IncDec	++		355812	0					
ANR	356094	Identifier	p2parse		355812	1					
ANR	356095	ExpressionStatement	-- lenStr	186:2:5321:5329	355812	1	True				
ANR	356096	UnaryExpression	-- lenStr		355812	0					
ANR	356097	IncDec	--		355812	0					
ANR	356098	Identifier	lenStr		355812	1					
ANR	356099	ElseStatement	else		355812	0					
ANR	356100	CompoundStatement		61:8:1531:1531	355812	0					
ANR	356101	ExpressionStatement	iRet = 1	188:2:5343:5351	355812	0	True				
ANR	356102	AssignmentExpression	iRet = 1		355812	0		=			
ANR	356103	Identifier	iRet		355812	0					
ANR	356104	PrimaryExpression	1		355812	1					
ANR	356105	ExpressionStatement	* pResult = '\\0'	190:1:5384:5399	355812	12	True				
ANR	356106	AssignmentExpression	* pResult = '\\0'		355812	0		=			
ANR	356107	UnaryOperationExpression	* pResult		355812	0					
ANR	356108	UnaryOperator	*		355812	0					
ANR	356109	Identifier	pResult		355812	1					
ANR	356110	PrimaryExpression	'\\0'		355812	1					
ANR	356111	ExpressionStatement	* pp2parse = p2parse	193:1:5436:5455	355812	13	True				
ANR	356112	AssignmentExpression	* pp2parse = p2parse		355812	0		=			
ANR	356113	UnaryOperationExpression	* pp2parse		355812	0					
ANR	356114	UnaryOperator	*		355812	0					
ANR	356115	Identifier	pp2parse		355812	1					
ANR	356116	Identifier	p2parse		355812	1					
ANR	356117	ExpressionStatement	* pLenStr = lenStr	194:1:5458:5475	355812	14	True				
ANR	356118	AssignmentExpression	* pLenStr = lenStr		355812	0		=			
ANR	356119	UnaryOperationExpression	* pLenStr		355812	0					
ANR	356120	UnaryOperator	*		355812	0					
ANR	356121	Identifier	pLenStr		355812	1					
ANR	356122	Identifier	lenStr		355812	1					
ANR	356123	ReturnStatement	return iRet ;	195:1:5478:5489	355812	15	True				
ANR	356124	Identifier	iRet		355812	0					
ANR	356125	ReturnType	static int		355812	1					
ANR	356126	Identifier	parseRFCStructuredData		355812	2					
ANR	356127	ParameterList	"uchar * * pp2parse , uchar * pResult , int * pLenStr"		355812	3					
ANR	356128	Parameter	uchar * * pp2parse	126:34:3759:3774	355812	0	True				
ANR	356129	ParameterType	uchar * *		355812	0					
ANR	356130	Identifier	pp2parse		355812	1					
ANR	356131	Parameter	uchar * pResult	126:52:3777:3790	355812	1	True				
ANR	356132	ParameterType	uchar *		355812	0					
ANR	356133	Identifier	pResult		355812	1					
ANR	356134	Parameter	int * pLenStr	126:68:3793:3804	355812	2	True				
ANR	356135	ParameterType	int *		355812	0					
ANR	356136	Identifier	pLenStr		355812	1					
ANR	356137	CFGEntryNode	ENTRY		355812		True				
ANR	356138	CFGExitNode	EXIT		355812		True				
ANR	356139	Symbol	pLenStr		355812						
ANR	356140	Symbol	pResult		355812						
ANR	356141	Symbol	NULL		355812						
ANR	356142	Symbol	* p2parse ++		355812						
ANR	356143	Symbol	pp2parse		355812						
ANR	356144	Symbol	iRet		355812						
ANR	356145	Symbol	* ( p2parse + 1 )		355812						
ANR	356146	Symbol	* pResult ++		355812						
ANR	356147	Symbol	bCont		355812						
ANR	356148	Symbol	lenStr		355812						
ANR	356149	Symbol	p2parse		355812						
ANR	356150	Symbol	* pp2parse		355812						
ANR	356151	Symbol	* pLenStr		355812						
ANR	356152	Symbol	* pResult		355812						
ANR	356153	Symbol	* p2parse		355812						
ANR	356154	DeclStmt									
ANR	356155	Decl							BEGINparse uchar	BEGINparse uchar *	p2parse
ANR	356156	DeclStmt									
ANR	356157	Decl							uchar	uchar *	pBuf
ANR	356158	DeclStmt									
ANR	356159	Decl							int	int	lenMsg
ANR	356160	DeclStmt									
ANR	356161	Decl							int	int	bContParse
ANR	356162	DeclStmt									
ANR	356163	Decl							CODESTARTparse	CODESTARTparse	assert
ANR	356164	DeclStmt									
ANR	356165	Decl							ENDparse BEGINmodExit CODESTARTmodExit	"ENDparse BEGINmodExit CODESTARTmodExit ( errmsg , CORE_COMPONENT )"	objRelease
ANR	356166	DeclStmt									
ANR	356167	Decl							CODESTARTmodInit	CODESTARTmodInit *	ipIFVersProvided
ANR	356168	DeclStmt									
ANR	356169	Decl							CODEmodInit_QueryRegCFSLineHdlr	"CODEmodInit_QueryRegCFSLineHdlr ( objUse ( glbl , CORE_COMPONENT ) )"	CHKiRet
