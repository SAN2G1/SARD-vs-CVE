command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	335303	File	data/converged/CVE-2017-12588_rsyslog/tests_nettester.c								
ANR	335304	ClassDef	<unnamed>	60:8:2127:2166							
ANR	335305	DeclStmt									
ANR	335306	Decl									inputMode_t
ANR	335307	DeclStmt									
ANR	335308	Decl							inputMode_t	inputMode_t	inputMode
ANR	335309	DeclStmt									
ANR	335310	Decl							pid_t	pid_t	rsyslogdPid
ANR	335311	DeclStmt									
ANR	335312	Decl							char	char *	srcdir
ANR	335313	DeclStmt									
ANR	335314	Decl							char	char *	testSuite
ANR	335315	DeclStmt									
ANR	335316	Decl							int	int	iPort
ANR	335317	DeclStmt									
ANR	335318	Decl							char	char *	pszCustomConf
ANR	335319	DeclStmt									
ANR	335320	Decl							int	int	verbose
ANR	335321	DeclStmt									
ANR	335322	Decl							int	int	IPv4Only
ANR	335323	DeclStmt									
ANR	335324	Decl							char	char * *	ourEnvp
ANR	335325	DeclStmt									
ANR	335326	Decl							char	char *	ourHostName
ANR	335327	DeclStmt									
ANR	335328	Decl							int	int	iFailed
ANR	335329	DeclStmt									
ANR	335330	Decl							int	int	iTests
ANR	335331	Function	inputMode2Str	78:0:2915:3063							
ANR	335332	FunctionDef	inputMode2Str (inputMode_t mode)		335331	0					
ANR	335333	CompoundStatement		79:0:2960:3063	335331	0					
ANR	335334	IdentifierDeclStatement	char * pszMode ;	80:1:2963:2976	335331	0	True				
ANR	335335	IdentifierDecl	* pszMode		335331	0					
ANR	335336	IdentifierDeclType	char *		335331	0					
ANR	335337	Identifier	pszMode		335331	1					
ANR	335338	IfStatement	if ( mode == inputUDP )		335331	1					
ANR	335339	Condition	mode == inputUDP	82:4:2983:2998	335331	0	True				
ANR	335340	EqualityExpression	mode == inputUDP		335331	0		==			
ANR	335341	Identifier	mode		335331	0					
ANR	335342	Identifier	inputUDP		335331	1					
ANR	335343	ExpressionStatement	"pszMode = ""udp"""	83:2:3003:3018	335331	1	True				
ANR	335344	AssignmentExpression	"pszMode = ""udp"""		335331	0		=			
ANR	335345	Identifier	pszMode		335331	0					
ANR	335346	PrimaryExpression	"""udp"""		335331	1					
ANR	335347	ElseStatement	else		335331	0					
ANR	335348	ExpressionStatement	"pszMode = ""tcp"""	85:2:3028:3043	335331	0	True				
ANR	335349	AssignmentExpression	"pszMode = ""tcp"""		335331	0		=			
ANR	335350	Identifier	pszMode		335331	0					
ANR	335351	PrimaryExpression	"""tcp"""		335331	1					
ANR	335352	ReturnStatement	return pszMode ;	87:1:3047:3061	335331	2	True				
ANR	335353	Identifier	pszMode		335331	0					
ANR	335354	ReturnType	static char *		335331	1					
ANR	335355	Identifier	inputMode2Str		335331	2					
ANR	335356	ParameterList	inputMode_t mode		335331	3					
ANR	335357	Parameter	inputMode_t mode	78:27:2942:2957	335331	0	True				
ANR	335358	ParameterType	inputMode_t		335331	0					
ANR	335359	Identifier	mode		335331	1					
ANR	335360	CFGEntryNode	ENTRY		335331		True				
ANR	335361	CFGExitNode	EXIT		335331		True				
ANR	335362	Symbol	mode		335331						
ANR	335363	Symbol	pszMode		335331						
ANR	335364	Symbol	inputUDP		335331						
ANR	335365	Function	readLine	91:0:3067:3693							
ANR	335366	FunctionDef	"readLine (int fd , char * ln)"		335365	0					
ANR	335367	CompoundStatement		92:0:3099:3693	335365	0					
ANR	335368	IdentifierDeclStatement	char * orig = ln ;	93:1:3102:3117	335365	0	True				
ANR	335369	IdentifierDecl	* orig = ln		335365	0					
ANR	335370	IdentifierDeclType	char *		335365	0					
ANR	335371	Identifier	orig		335365	1					
ANR	335372	AssignmentExpression	* orig = ln		335365	2		=			
ANR	335373	Identifier	ln		335365	0					
ANR	335374	Identifier	ln		335365	1					
ANR	335375	IdentifierDeclStatement	char c ;	94:1:3120:3126	335365	1	True				
ANR	335376	IdentifierDecl	c		335365	0					
ANR	335377	IdentifierDeclType	char		335365	0					
ANR	335378	Identifier	c		335365	1					
ANR	335379	IdentifierDeclStatement	int lenRead ;	95:1:3129:3140	335365	2	True				
ANR	335380	IdentifierDecl	lenRead		335365	0					
ANR	335381	IdentifierDeclType	int		335365	0					
ANR	335382	Identifier	lenRead		335365	1					
ANR	335383	IfStatement	if ( verbose )		335365	3					
ANR	335384	Condition	verbose	97:4:3147:3153	335365	0	True				
ANR	335385	Identifier	verbose		335365	0					
ANR	335386	ExpressionStatement	"fprintf ( stderr , ""begin readLine\\n"" )"	98:2:3158:3193	335365	1	True				
ANR	335387	CallExpression	"fprintf ( stderr , ""begin readLine\\n"" )"		335365	0					
ANR	335388	Callee	fprintf		335365	0					
ANR	335389	Identifier	fprintf		335365	0					
ANR	335390	ArgumentList	stderr		335365	1					
ANR	335391	Argument	stderr		335365	0					
ANR	335392	Identifier	stderr		335365	0					
ANR	335393	Argument	"""begin readLine\\n"""		335365	1					
ANR	335394	PrimaryExpression	"""begin readLine\\n"""		335365	0					
ANR	335395	ExpressionStatement	"lenRead = read ( fd , & c , 1 )"	99:1:3196:3221	335365	4	True				
ANR	335396	AssignmentExpression	"lenRead = read ( fd , & c , 1 )"		335365	0		=			
ANR	335397	Identifier	lenRead		335365	0					
ANR	335398	CallExpression	"read ( fd , & c , 1 )"		335365	1					
ANR	335399	Callee	read		335365	0					
ANR	335400	Identifier	read		335365	0					
ANR	335401	ArgumentList	fd		335365	1					
ANR	335402	Argument	fd		335365	0					
ANR	335403	Identifier	fd		335365	0					
ANR	335404	Argument	& c		335365	1					
ANR	335405	UnaryOperationExpression	& c		335365	0					
ANR	335406	UnaryOperator	&		335365	0					
ANR	335407	Identifier	c		335365	1					
ANR	335408	Argument	1		335365	2					
ANR	335409	PrimaryExpression	1		335365	0					
ANR	335410	WhileStatement	while ( lenRead == 1 && c != '\\n' )		335365	5					
ANR	335411	Condition	lenRead == 1 && c != '\\n'	101:7:3231:3255	335365	0	True				
ANR	335412	AndExpression	lenRead == 1 && c != '\\n'		335365	0		&&			
ANR	335413	EqualityExpression	lenRead == 1		335365	0		==			
ANR	335414	Identifier	lenRead		335365	0					
ANR	335415	PrimaryExpression	1		335365	1					
ANR	335416	EqualityExpression	c != '\\n'		335365	1		!=			
ANR	335417	Identifier	c		335365	0					
ANR	335418	PrimaryExpression	'\\n'		335365	1					
ANR	335419	CompoundStatement		10:34:158:158	335365	1					
ANR	335420	IfStatement	if ( c == '\\0' )		335365	0					
ANR	335421	Condition	c == '\\0'	102:5:3265:3273	335365	0	True				
ANR	335422	EqualityExpression	c == '\\0'		335365	0		==			
ANR	335423	Identifier	c		335365	0					
ANR	335424	PrimaryExpression	'\\0'		335365	1					
ANR	335425	CompoundStatement		11:16:176:176	335365	1					
ANR	335426	ExpressionStatement	* ln = c	103:3:3281:3288	335365	0	True				
ANR	335427	AssignmentExpression	* ln = c		335365	0		=			
ANR	335428	UnaryOperationExpression	* ln		335365	0					
ANR	335429	UnaryOperator	*		335365	0					
ANR	335430	Identifier	ln		335365	1					
ANR	335431	Identifier	c		335365	1					
ANR	335432	Statement	fprintf	104:3:3293:3299	335365	1	True				
ANR	335433	Statement	(	104:10:3300:3300	335365	2	True				
ANR	335434	Statement	stderr	104:11:3301:3306	335365	3	True				
ANR	335435	Statement	","	104:17:3307:3307	335365	4	True				
ANR	335436	Statement	"""Warning: there was a '\\\\0'-Byte in the read response """	104:19:3309:3363	335365	5	True				
ANR	335437	Statement	"""right after this string: '%s'\\n"""	105:5:3370:3402	335365	6	True				
ANR	335438	Statement	","	105:38:3403:3403	335365	7	True				
ANR	335439	Statement	orig	105:40:3405:3408	335365	8	True				
ANR	335440	Statement	)	105:44:3409:3409	335365	9	True				
ANR	335441	ExpressionStatement		105:45:3410:3410	335365	10	True				
ANR	335442	ExpressionStatement	c = '?'	106:3:3415:3422	335365	11	True				
ANR	335443	AssignmentExpression	c = '?'		335365	0		=			
ANR	335444	Identifier	c		335365	0					
ANR	335445	PrimaryExpression	'?'		335365	1					
ANR	335446	ExpressionStatement	* ln ++ = c	108:2:3430:3439	335365	1	True				
ANR	335447	AssignmentExpression	* ln ++ = c		335365	0		=			
ANR	335448	UnaryOperationExpression	* ln ++		335365	0					
ANR	335449	UnaryOperator	*		335365	0					
ANR	335450	PostIncDecOperationExpression	ln ++		335365	1					
ANR	335451	Identifier	ln		335365	0					
ANR	335452	IncDec	++		335365	1					
ANR	335453	Identifier	c		335365	1					
ANR	335454	ExpressionStatement	"lenRead = read ( fd , & c , 1 )"	109:2:3443:3468	335365	2	True				
ANR	335455	AssignmentExpression	"lenRead = read ( fd , & c , 1 )"		335365	0		=			
ANR	335456	Identifier	lenRead		335365	0					
ANR	335457	CallExpression	"read ( fd , & c , 1 )"		335365	1					
ANR	335458	Callee	read		335365	0					
ANR	335459	Identifier	read		335365	0					
ANR	335460	ArgumentList	fd		335365	1					
ANR	335461	Argument	fd		335365	0					
ANR	335462	Identifier	fd		335365	0					
ANR	335463	Argument	& c		335365	1					
ANR	335464	UnaryOperationExpression	& c		335365	0					
ANR	335465	UnaryOperator	&		335365	0					
ANR	335466	Identifier	c		335365	1					
ANR	335467	Argument	1		335365	2					
ANR	335468	PrimaryExpression	1		335365	0					
ANR	335469	ExpressionStatement	* ln = '\\0'	111:1:3474:3484	335365	6	True				
ANR	335470	AssignmentExpression	* ln = '\\0'		335365	0		=			
ANR	335471	UnaryOperationExpression	* ln		335365	0					
ANR	335472	UnaryOperator	*		335365	0					
ANR	335473	Identifier	ln		335365	1					
ANR	335474	PrimaryExpression	'\\0'		335365	1					
ANR	335475	IfStatement	if ( lenRead < 0 )		335365	7					
ANR	335476	Condition	lenRead < 0	113:4:3491:3501	335365	0	True				
ANR	335477	RelationalExpression	lenRead < 0		335365	0		<			
ANR	335478	Identifier	lenRead		335365	0					
ANR	335479	PrimaryExpression	0		335365	1					
ANR	335480	CompoundStatement		22:17:404:404	335365	1					
ANR	335481	ExpressionStatement	"fprintf ( stderr , ""read from rsyslogd returned with error '%s' - aborting test\\n"" , strerror ( errno ) )"	114:2:3508:3605	335365	0	True				
ANR	335482	CallExpression	"fprintf ( stderr , ""read from rsyslogd returned with error '%s' - aborting test\\n"" , strerror ( errno ) )"		335365	0					
ANR	335483	Callee	fprintf		335365	0					
ANR	335484	Identifier	fprintf		335365	0					
ANR	335485	ArgumentList	stderr		335365	1					
ANR	335486	Argument	stderr		335365	0					
ANR	335487	Identifier	stderr		335365	0					
ANR	335488	Argument	"""read from rsyslogd returned with error '%s' - aborting test\\n"""		335365	1					
ANR	335489	PrimaryExpression	"""read from rsyslogd returned with error '%s' - aborting test\\n"""		335365	0					
ANR	335490	Argument	strerror ( errno )		335365	2					
ANR	335491	CallExpression	strerror ( errno )		335365	0					
ANR	335492	Callee	strerror		335365	0					
ANR	335493	Identifier	strerror		335365	0					
ANR	335494	ArgumentList	errno		335365	1					
ANR	335495	Argument	errno		335365	0					
ANR	335496	Identifier	errno		335365	0					
ANR	335497	ExpressionStatement	exit ( 1 )	115:2:3609:3616	335365	1	True				
ANR	335498	CallExpression	exit ( 1 )		335365	0					
ANR	335499	Callee	exit		335365	0					
ANR	335500	Identifier	exit		335365	0					
ANR	335501	ArgumentList	1		335365	1					
ANR	335502	Argument	1		335365	0					
ANR	335503	PrimaryExpression	1		335365	0					
ANR	335504	IfStatement	if ( verbose )		335365	8					
ANR	335505	Condition	verbose	118:4:3626:3632	335365	0	True				
ANR	335506	Identifier	verbose		335365	0					
ANR	335507	ExpressionStatement	"fprintf ( stderr , ""end readLine, val read '%s'\\n"" , orig )"	119:2:3637:3691	335365	1	True				
ANR	335508	CallExpression	"fprintf ( stderr , ""end readLine, val read '%s'\\n"" , orig )"		335365	0					
ANR	335509	Callee	fprintf		335365	0					
ANR	335510	Identifier	fprintf		335365	0					
ANR	335511	ArgumentList	stderr		335365	1					
ANR	335512	Argument	stderr		335365	0					
ANR	335513	Identifier	stderr		335365	0					
ANR	335514	Argument	"""end readLine, val read '%s'\\n"""		335365	1					
ANR	335515	PrimaryExpression	"""end readLine, val read '%s'\\n"""		335365	0					
ANR	335516	Argument	orig		335365	2					
ANR	335517	Identifier	orig		335365	0					
ANR	335518	ReturnType	void		335365	1					
ANR	335519	Identifier	readLine		335365	2					
ANR	335520	ParameterList	"int fd , char * ln"		335365	3					
ANR	335521	Parameter	int fd	91:14:3081:3086	335365	0	True				
ANR	335522	ParameterType	int		335365	0					
ANR	335523	Identifier	fd		335365	1					
ANR	335524	Parameter	char * ln	91:22:3089:3096	335365	1	True				
ANR	335525	ParameterType	char *		335365	0					
ANR	335526	Identifier	ln		335365	1					
ANR	335527	CFGEntryNode	ENTRY		335365		True				
ANR	335528	CFGExitNode	EXIT		335365		True				
ANR	335529	Symbol	ln		335365						
ANR	335530	Symbol	errno		335365						
ANR	335531	Symbol	c		335365						
ANR	335532	Symbol	read		335365						
ANR	335533	Symbol	lenRead		335365						
ANR	335534	Symbol	& c		335365						
ANR	335535	Symbol	* ln		335365						
ANR	335536	Symbol	stderr		335365						
ANR	335537	Symbol	* ln ++		335365						
ANR	335538	Symbol	verbose		335365						
ANR	335539	Symbol	strerror		335365						
ANR	335540	Symbol	orig		335365						
ANR	335541	Symbol	fd		335365						
ANR	335542	Function	tcpSend	136:0:4355:5900							
ANR	335543	FunctionDef	"tcpSend (char * buf , int lenBuf)"		335542	0					
ANR	335544	CompoundStatement		138:0:4390:5900	335542	0					
ANR	335545	Statement	static	139:1:4393:4398	335542	0	True				
ANR	335546	IdentifierDeclStatement	int sock = INVALID_SOCKET ;	139:8:4400:4425	335542	1	True				
ANR	335547	IdentifierDecl	sock = INVALID_SOCKET		335542	0					
ANR	335548	IdentifierDeclType	int		335542	0					
ANR	335549	Identifier	sock		335542	1					
ANR	335550	AssignmentExpression	sock = INVALID_SOCKET		335542	2		=			
ANR	335551	Identifier	INVALID_SOCKET		335542	0					
ANR	335552	Identifier	INVALID_SOCKET		335542	1					
ANR	335553	IdentifierDeclStatement	struct sockaddr_in addr ;	140:1:4428:4451	335542	2	True				
ANR	335554	IdentifierDecl	addr		335542	0					
ANR	335555	IdentifierDeclType	struct sockaddr_in		335542	0					
ANR	335556	Identifier	addr		335542	1					
ANR	335557	IdentifierDeclStatement	int retries ;	141:1:4454:4465	335542	3	True				
ANR	335558	IdentifierDecl	retries		335542	0					
ANR	335559	IdentifierDeclType	int		335542	0					
ANR	335560	Identifier	retries		335542	1					
ANR	335561	IdentifierDeclStatement	int ret ;	142:1:4468:4475	335542	4	True				
ANR	335562	IdentifierDecl	ret		335542	0					
ANR	335563	IdentifierDeclType	int		335542	0					
ANR	335564	Identifier	ret		335542	1					
ANR	335565	IdentifierDeclStatement	int iRet = 0 ;	143:1:4478:4490	335542	5	True				
ANR	335566	IdentifierDecl	iRet = 0		335542	0					
ANR	335567	IdentifierDeclType	int		335542	0					
ANR	335568	Identifier	iRet		335542	1					
ANR	335569	AssignmentExpression	iRet = 0		335542	2		=			
ANR	335570	Identifier	iRet		335542	0					
ANR	335571	PrimaryExpression	0		335542	1					
ANR	335572	IfStatement	if ( sock == INVALID_SOCKET )		335542	6					
ANR	335573	Condition	sock == INVALID_SOCKET	145:4:4529:4550	335542	0	True				
ANR	335574	EqualityExpression	sock == INVALID_SOCKET		335542	0		==			
ANR	335575	Identifier	sock		335542	0					
ANR	335576	Identifier	INVALID_SOCKET		335542	1					
ANR	335577	CompoundStatement		8:28:162:162	335542	1					
ANR	335578	ExpressionStatement	retries = 0	147:2:4603:4614	335542	0	True				
ANR	335579	AssignmentExpression	retries = 0		335542	0		=			
ANR	335580	Identifier	retries		335542	0					
ANR	335581	PrimaryExpression	0		335542	1					
ANR	335582	WhileStatement	while ( 1 )		335542	1					
ANR	335583	Condition	1	148:8:4624:4624	335542	0	True				
ANR	335584	PrimaryExpression	1		335542	0					
ANR	335585	CompoundStatement		11:11:236:236	335542	1					
ANR	335586	IfStatement	"if ( ( sock = socket ( AF_INET , SOCK_STREAM , 0 ) ) == - 1 )"		335542	0					
ANR	335587	Condition	"( sock = socket ( AF_INET , SOCK_STREAM , 0 ) ) == - 1"	150:6:4707:4748	335542	0	True				
ANR	335588	EqualityExpression	"( sock = socket ( AF_INET , SOCK_STREAM , 0 ) ) == - 1"		335542	0		==			
ANR	335589	AssignmentExpression	"sock = socket ( AF_INET , SOCK_STREAM , 0 )"		335542	0		=			
ANR	335590	Identifier	sock		335542	0					
ANR	335591	CallExpression	"socket ( AF_INET , SOCK_STREAM , 0 )"		335542	1					
ANR	335592	Callee	socket		335542	0					
ANR	335593	Identifier	socket		335542	0					
ANR	335594	ArgumentList	AF_INET		335542	1					
ANR	335595	Argument	AF_INET		335542	0					
ANR	335596	Identifier	AF_INET		335542	0					
ANR	335597	Argument	SOCK_STREAM		335542	1					
ANR	335598	Identifier	SOCK_STREAM		335542	0					
ANR	335599	Argument	0		335542	2					
ANR	335600	PrimaryExpression	0		335542	0					
ANR	335601	UnaryOperationExpression	- 1		335542	1					
ANR	335602	UnaryOperator	-		335542	0					
ANR	335603	PrimaryExpression	1		335542	1					
ANR	335604	CompoundStatement		13:50:360:360	335542	1					
ANR	335605	ExpressionStatement	"perror ( ""socket()"" )"	151:4:4757:4775	335542	0	True				
ANR	335606	CallExpression	"perror ( ""socket()"" )"		335542	0					
ANR	335607	Callee	perror		335542	0					
ANR	335608	Identifier	perror		335542	0					
ANR	335609	ArgumentList	"""socket()"""		335542	1					
ANR	335610	Argument	"""socket()"""		335542	0					
ANR	335611	PrimaryExpression	"""socket()"""		335542	0					
ANR	335612	ExpressionStatement	iRet = 1	152:4:4781:4789	335542	1	True				
ANR	335613	AssignmentExpression	iRet = 1		335542	0		=			
ANR	335614	Identifier	iRet		335542	0					
ANR	335615	PrimaryExpression	1		335542	1					
ANR	335616	GotoStatement	goto finalize_it ;	153:4:4795:4811	335542	2	True				
ANR	335617	Identifier	finalize_it		335542	0					
ANR	335618	ExpressionStatement	"memset ( ( char * ) & addr , 0 , sizeof ( addr ) )"	155:3:4821:4860	335542	1	True				
ANR	335619	CallExpression	"memset ( ( char * ) & addr , 0 , sizeof ( addr ) )"		335542	0					
ANR	335620	Callee	memset		335542	0					
ANR	335621	Identifier	memset		335542	0					
ANR	335622	ArgumentList	( char * ) & addr		335542	1					
ANR	335623	Argument	( char * ) & addr		335542	0					
ANR	335624	CastExpression	( char * ) & addr		335542	0					
ANR	335625	CastTarget	char *		335542	0					
ANR	335626	UnaryOperationExpression	& addr		335542	1					
ANR	335627	UnaryOperator	&		335542	0					
ANR	335628	Identifier	addr		335542	1					
ANR	335629	Argument	0		335542	1					
ANR	335630	PrimaryExpression	0		335542	0					
ANR	335631	Argument	sizeof ( addr )		335542	2					
ANR	335632	SizeofExpression	sizeof ( addr )		335542	0					
ANR	335633	Sizeof	sizeof		335542	0					
ANR	335634	SizeofOperand	addr		335542	1					
ANR	335635	ExpressionStatement	addr . sin_family = AF_INET	156:3:4865:4890	335542	2	True				
ANR	335636	AssignmentExpression	addr . sin_family = AF_INET		335542	0		=			
ANR	335637	MemberAccess	addr . sin_family		335542	0					
ANR	335638	Identifier	addr		335542	0					
ANR	335639	Identifier	sin_family		335542	1					
ANR	335640	Identifier	AF_INET		335542	1					
ANR	335641	ExpressionStatement	addr . sin_port = htons ( iPort )	157:3:4895:4923	335542	3	True				
ANR	335642	AssignmentExpression	addr . sin_port = htons ( iPort )		335542	0		=			
ANR	335643	MemberAccess	addr . sin_port		335542	0					
ANR	335644	Identifier	addr		335542	0					
ANR	335645	Identifier	sin_port		335542	1					
ANR	335646	CallExpression	htons ( iPort )		335542	1					
ANR	335647	Callee	htons		335542	0					
ANR	335648	Identifier	htons		335542	0					
ANR	335649	ArgumentList	iPort		335542	1					
ANR	335650	Argument	iPort		335542	0					
ANR	335651	Identifier	iPort		335542	0					
ANR	335652	IfStatement	"if ( inet_aton ( ""127.0.0.1"" , & addr . sin_addr ) == 0 )"		335542	4					
ANR	335653	Condition	"inet_aton ( ""127.0.0.1"" , & addr . sin_addr ) == 0"	158:6:4931:4971	335542	0	True				
ANR	335654	EqualityExpression	"inet_aton ( ""127.0.0.1"" , & addr . sin_addr ) == 0"		335542	0		==			
ANR	335655	CallExpression	"inet_aton ( ""127.0.0.1"" , & addr . sin_addr )"		335542	0					
ANR	335656	Callee	inet_aton		335542	0					
ANR	335657	Identifier	inet_aton		335542	0					
ANR	335658	ArgumentList	"""127.0.0.1"""		335542	1					
ANR	335659	Argument	"""127.0.0.1"""		335542	0					
ANR	335660	PrimaryExpression	"""127.0.0.1"""		335542	0					
ANR	335661	Argument	& addr . sin_addr		335542	1					
ANR	335662	UnaryOperationExpression	& addr . sin_addr		335542	0					
ANR	335663	UnaryOperator	&		335542	0					
ANR	335664	MemberAccess	addr . sin_addr		335542	1					
ANR	335665	Identifier	addr		335542	0					
ANR	335666	Identifier	sin_addr		335542	1					
ANR	335667	PrimaryExpression	0		335542	1					
ANR	335668	CompoundStatement		21:49:583:583	335542	1					
ANR	335669	ExpressionStatement	"fprintf ( stderr , ""inet_aton() failed\\n"" )"	159:4:4980:5019	335542	0	True				
ANR	335670	CallExpression	"fprintf ( stderr , ""inet_aton() failed\\n"" )"		335542	0					
ANR	335671	Callee	fprintf		335542	0					
ANR	335672	Identifier	fprintf		335542	0					
ANR	335673	ArgumentList	stderr		335542	1					
ANR	335674	Argument	stderr		335542	0					
ANR	335675	Identifier	stderr		335542	0					
ANR	335676	Argument	"""inet_aton() failed\\n"""		335542	1					
ANR	335677	PrimaryExpression	"""inet_aton() failed\\n"""		335542	0					
ANR	335678	ExpressionStatement	iRet = 1	160:4:5025:5033	335542	1	True				
ANR	335679	AssignmentExpression	iRet = 1		335542	0		=			
ANR	335680	Identifier	iRet		335542	0					
ANR	335681	PrimaryExpression	1		335542	1					
ANR	335682	GotoStatement	goto finalize_it ;	161:4:5039:5055	335542	2	True				
ANR	335683	Identifier	finalize_it		335542	0					
ANR	335684	IfStatement	"if ( ( ret = connect ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) ) == 0 )"		335542	5					
ANR	335685	Condition	"( ret = connect ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) ) == 0"	163:6:5068:5132	335542	0	True				
ANR	335686	EqualityExpression	"( ret = connect ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) ) == 0"		335542	0		==			
ANR	335687	AssignmentExpression	"ret = connect ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) )"		335542	0		=			
ANR	335688	Identifier	ret		335542	0					
ANR	335689	CallExpression	"connect ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) )"		335542	1					
ANR	335690	Callee	connect		335542	0					
ANR	335691	Identifier	connect		335542	0					
ANR	335692	ArgumentList	sock		335542	1					
ANR	335693	Argument	sock		335542	0					
ANR	335694	Identifier	sock		335542	0					
ANR	335695	Argument	( struct sockaddr * ) & addr		335542	1					
ANR	335696	CastExpression	( struct sockaddr * ) & addr		335542	0					
ANR	335697	CastTarget	struct sockaddr *		335542	0					
ANR	335698	UnaryOperationExpression	& addr		335542	1					
ANR	335699	UnaryOperator	&		335542	0					
ANR	335700	Identifier	addr		335542	1					
ANR	335701	Argument	sizeof ( addr )		335542	2					
ANR	335702	SizeofExpression	sizeof ( addr )		335542	0					
ANR	335703	Sizeof	sizeof		335542	0					
ANR	335704	SizeofOperand	addr		335542	1					
ANR	335705	PrimaryExpression	0		335542	1					
ANR	335706	CompoundStatement		26:73:744:744	335542	1					
ANR	335707	BreakStatement	break ;	164:4:5141:5146	335542	0	True				
ANR	335708	ElseStatement	else		335542	0					
ANR	335709	CompoundStatement		28:10:767:767	335542	0					
ANR	335710	IfStatement	if ( retries ++ == 50 )		335542	0					
ANR	335711	Condition	retries ++ == 50	166:7:5167:5181	335542	0	True				
ANR	335712	EqualityExpression	retries ++ == 50		335542	0		==			
ANR	335713	PostIncDecOperationExpression	retries ++		335542	0					
ANR	335714	Identifier	retries		335542	0					
ANR	335715	IncDec	++		335542	1					
ANR	335716	PrimaryExpression	50		335542	1					
ANR	335717	CompoundStatement		29:24:793:793	335542	1					
ANR	335718	ExpressionStatement	"fprintf ( stderr , ""connect() failed\\n"" )"	167:5:5191:5228	335542	0	True				
ANR	335719	CallExpression	"fprintf ( stderr , ""connect() failed\\n"" )"		335542	0					
ANR	335720	Callee	fprintf		335542	0					
ANR	335721	Identifier	fprintf		335542	0					
ANR	335722	ArgumentList	stderr		335542	1					
ANR	335723	Argument	stderr		335542	0					
ANR	335724	Identifier	stderr		335542	0					
ANR	335725	Argument	"""connect() failed\\n"""		335542	1					
ANR	335726	PrimaryExpression	"""connect() failed\\n"""		335542	0					
ANR	335727	ExpressionStatement	iRet = 1	168:5:5235:5243	335542	1	True				
ANR	335728	AssignmentExpression	iRet = 1		335542	0		=			
ANR	335729	Identifier	iRet		335542	0					
ANR	335730	PrimaryExpression	1		335542	1					
ANR	335731	GotoStatement	goto finalize_it ;	169:5:5250:5266	335542	2	True				
ANR	335732	Identifier	finalize_it		335542	0					
ANR	335733	ElseStatement	else		335542	0					
ANR	335734	CompoundStatement		33:11:888:888	335542	0					
ANR	335735	ExpressionStatement	usleep ( 100000 )	171:5:5286:5300	335542	0	True				
ANR	335736	CallExpression	usleep ( 100000 )		335542	0					
ANR	335737	Callee	usleep		335542	0					
ANR	335738	Identifier	usleep		335542	0					
ANR	335739	ArgumentList	100000		335542	1					
ANR	335740	Argument	100000		335542	0					
ANR	335741	PrimaryExpression	100000		335542	0					
ANR	335742	IfStatement	"if ( ( ret = send ( sock , buf , lenBuf , 0 ) ) != lenBuf )"		335542	7					
ANR	335743	Condition	"( ret = send ( sock , buf , lenBuf , 0 ) ) != lenBuf"	178:4:5368:5411	335542	0	True				
ANR	335744	EqualityExpression	"( ret = send ( sock , buf , lenBuf , 0 ) ) != lenBuf"		335542	0		!=			
ANR	335745	AssignmentExpression	"ret = send ( sock , buf , lenBuf , 0 )"		335542	0		=			
ANR	335746	Identifier	ret		335542	0					
ANR	335747	CallExpression	"send ( sock , buf , lenBuf , 0 )"		335542	1					
ANR	335748	Callee	send		335542	0					
ANR	335749	Identifier	send		335542	0					
ANR	335750	ArgumentList	sock		335542	1					
ANR	335751	Argument	sock		335542	0					
ANR	335752	Identifier	sock		335542	0					
ANR	335753	Argument	buf		335542	1					
ANR	335754	Identifier	buf		335542	0					
ANR	335755	Argument	lenBuf		335542	2					
ANR	335756	Identifier	lenBuf		335542	0					
ANR	335757	Argument	0		335542	3					
ANR	335758	PrimaryExpression	0		335542	0					
ANR	335759	Identifier	lenBuf		335542	1					
ANR	335760	CompoundStatement		41:50:1023:1023	335542	1					
ANR	335761	ExpressionStatement	"perror ( ""send test data"" )"	179:2:5418:5442	335542	0	True				
ANR	335762	CallExpression	"perror ( ""send test data"" )"		335542	0					
ANR	335763	Callee	perror		335542	0					
ANR	335764	Identifier	perror		335542	0					
ANR	335765	ArgumentList	"""send test data"""		335542	1					
ANR	335766	Argument	"""send test data"""		335542	0					
ANR	335767	PrimaryExpression	"""send test data"""		335542	0					
ANR	335768	ExpressionStatement	"fprintf ( stderr , ""send() failed, sock=%d, ret=%d\\n"" , sock , ret )"	180:2:5446:5508	335542	1	True				
ANR	335769	CallExpression	"fprintf ( stderr , ""send() failed, sock=%d, ret=%d\\n"" , sock , ret )"		335542	0					
ANR	335770	Callee	fprintf		335542	0					
ANR	335771	Identifier	fprintf		335542	0					
ANR	335772	ArgumentList	stderr		335542	1					
ANR	335773	Argument	stderr		335542	0					
ANR	335774	Identifier	stderr		335542	0					
ANR	335775	Argument	"""send() failed, sock=%d, ret=%d\\n"""		335542	1					
ANR	335776	PrimaryExpression	"""send() failed, sock=%d, ret=%d\\n"""		335542	0					
ANR	335777	Argument	sock		335542	2					
ANR	335778	Identifier	sock		335542	0					
ANR	335779	Argument	ret		335542	3					
ANR	335780	Identifier	ret		335542	0					
ANR	335781	ExpressionStatement	iRet = 1	181:2:5512:5520	335542	2	True				
ANR	335782	AssignmentExpression	iRet = 1		335542	0		=			
ANR	335783	Identifier	iRet		335542	0					
ANR	335784	PrimaryExpression	1		335542	1					
ANR	335785	GotoStatement	goto finalize_it ;	182:2:5524:5540	335542	3	True				
ANR	335786	Identifier	finalize_it		335542	0					
ANR	335787	IfStatement	"if ( send ( sock , ""\\n"" , 1 , 0 ) != 1 )"		335542	8					
ANR	335788	Condition	"send ( sock , ""\\n"" , 1 , 0 ) != 1"	186:4:5580:5606	335542	0	True				
ANR	335789	EqualityExpression	"send ( sock , ""\\n"" , 1 , 0 ) != 1"		335542	0		!=			
ANR	335790	CallExpression	"send ( sock , ""\\n"" , 1 , 0 )"		335542	0					
ANR	335791	Callee	send		335542	0					
ANR	335792	Identifier	send		335542	0					
ANR	335793	ArgumentList	sock		335542	1					
ANR	335794	Argument	sock		335542	0					
ANR	335795	Identifier	sock		335542	0					
ANR	335796	Argument	"""\\n"""		335542	1					
ANR	335797	PrimaryExpression	"""\\n"""		335542	0					
ANR	335798	Argument	1		335542	2					
ANR	335799	PrimaryExpression	1		335542	0					
ANR	335800	Argument	0		335542	3					
ANR	335801	PrimaryExpression	0		335542	0					
ANR	335802	PrimaryExpression	1		335542	1					
ANR	335803	CompoundStatement		49:33:1218:1218	335542	1					
ANR	335804	ExpressionStatement	"perror ( ""send record terminator"" )"	187:2:5613:5645	335542	0	True				
ANR	335805	CallExpression	"perror ( ""send record terminator"" )"		335542	0					
ANR	335806	Callee	perror		335542	0					
ANR	335807	Identifier	perror		335542	0					
ANR	335808	ArgumentList	"""send record terminator"""		335542	1					
ANR	335809	Argument	"""send record terminator"""		335542	0					
ANR	335810	PrimaryExpression	"""send record terminator"""		335542	0					
ANR	335811	ExpressionStatement	"fprintf ( stderr , ""send() failed\\n"" )"	188:2:5649:5683	335542	1	True				
ANR	335812	CallExpression	"fprintf ( stderr , ""send() failed\\n"" )"		335542	0					
ANR	335813	Callee	fprintf		335542	0					
ANR	335814	Identifier	fprintf		335542	0					
ANR	335815	ArgumentList	stderr		335542	1					
ANR	335816	Argument	stderr		335542	0					
ANR	335817	Identifier	stderr		335542	0					
ANR	335818	Argument	"""send() failed\\n"""		335542	1					
ANR	335819	PrimaryExpression	"""send() failed\\n"""		335542	0					
ANR	335820	ExpressionStatement	iRet = 1	189:2:5687:5695	335542	2	True				
ANR	335821	AssignmentExpression	iRet = 1		335542	0		=			
ANR	335822	Identifier	iRet		335542	0					
ANR	335823	PrimaryExpression	1		335542	1					
ANR	335824	GotoStatement	goto finalize_it ;	190:2:5699:5715	335542	3	True				
ANR	335825	Identifier	finalize_it		335542	0					
ANR	335826	Label	finalize_it :	193:0:5721:5732	335542	9	True				
ANR	335827	Identifier	finalize_it		335542	0					
ANR	335828	IfStatement	if ( iRet != 0 )		335542	10					
ANR	335829	Condition	iRet != 0	194:4:5738:5746	335542	0	True				
ANR	335830	EqualityExpression	iRet != 0		335542	0		!=			
ANR	335831	Identifier	iRet		335542	0					
ANR	335832	PrimaryExpression	0		335542	1					
ANR	335833	CompoundStatement		57:15:1358:1358	335542	1					
ANR	335834	IfStatement	if ( sock != INVALID_SOCKET )		335542	0					
ANR	335835	Condition	sock != INVALID_SOCKET	196:5:5797:5818	335542	0	True				
ANR	335836	EqualityExpression	sock != INVALID_SOCKET		335542	0		!=			
ANR	335837	Identifier	sock		335542	0					
ANR	335838	Identifier	INVALID_SOCKET		335542	1					
ANR	335839	CompoundStatement		59:29:1430:1430	335542	1					
ANR	335840	ExpressionStatement	close ( sock )	197:3:5826:5837	335542	0	True				
ANR	335841	CallExpression	close ( sock )		335542	0					
ANR	335842	Callee	close		335542	0					
ANR	335843	Identifier	close		335542	0					
ANR	335844	ArgumentList	sock		335542	1					
ANR	335845	Argument	sock		335542	0					
ANR	335846	Identifier	sock		335542	0					
ANR	335847	ExpressionStatement	sock = INVALID_SOCKET	198:3:5842:5863	335542	1	True				
ANR	335848	AssignmentExpression	sock = INVALID_SOCKET		335542	0		=			
ANR	335849	Identifier	sock		335542	0					
ANR	335850	Identifier	INVALID_SOCKET		335542	1					
ANR	335851	ExpressionStatement	++ iFailed	200:2:5871:5880	335542	1	True				
ANR	335852	UnaryExpression	++ iFailed		335542	0					
ANR	335853	IncDec	++		335542	0					
ANR	335854	Identifier	iFailed		335542	1					
ANR	335855	ReturnStatement	return iRet ;	203:1:5887:5898	335542	11	True				
ANR	335856	Identifier	iRet		335542	0					
ANR	335857	ReturnType	int		335542	1					
ANR	335858	Identifier	tcpSend		335542	2					
ANR	335859	ParameterList	"char * buf , int lenBuf"		335542	3					
ANR	335860	Parameter	char * buf	137:8:4367:4375	335542	0	True				
ANR	335861	ParameterType	char *		335542	0					
ANR	335862	Identifier	buf		335542	1					
ANR	335863	Parameter	int lenBuf	137:19:4378:4387	335542	1	True				
ANR	335864	ParameterType	int		335542	0					
ANR	335865	Identifier	lenBuf		335542	1					
ANR	335866	CFGEntryNode	ENTRY		335542		True				
ANR	335867	CFGExitNode	EXIT		335542		True				
ANR	335868	Symbol	ret		335542						
ANR	335869	Symbol	addr . sin_family		335542						
ANR	335870	Symbol	& addr		335542						
ANR	335871	Symbol	htons		335542						
ANR	335872	Symbol	iPort		335542						
ANR	335873	Symbol	iRet		335542						
ANR	335874	Symbol	addr . sin_port		335542						
ANR	335875	Symbol	AF_INET		335542						
ANR	335876	Symbol	stderr		335542						
ANR	335877	Symbol	INVALID_SOCKET		335542						
ANR	335878	Symbol	sock		335542						
ANR	335879	Symbol	retries		335542						
ANR	335880	Symbol	buf		335542						
ANR	335881	Symbol	SOCK_STREAM		335542						
ANR	335882	Symbol	lenBuf		335542						
ANR	335883	Symbol	& addr . sin_addr		335542						
ANR	335884	Symbol	socket		335542						
ANR	335885	Symbol	addr		335542						
ANR	335886	Symbol	send		335542						
ANR	335887	Symbol	connect		335542						
ANR	335888	Symbol	inet_aton		335542						
ANR	335889	Function	udpSend	210:0:5980:6566							
ANR	335890	FunctionDef	"udpSend (char * buf , int lenBuf)"		335889	0					
ANR	335891	CompoundStatement		212:0:6015:6566	335889	0					
ANR	335892	IdentifierDeclStatement	struct sockaddr_in si_other ;	213:1:6018:6045	335889	0	True				
ANR	335893	IdentifierDecl	si_other		335889	0					
ANR	335894	IdentifierDeclType	struct sockaddr_in		335889	0					
ANR	335895	Identifier	si_other		335889	1					
ANR	335896	IdentifierDeclStatement	"int s , slen = sizeof ( si_other ) ;"	214:1:6048:6076	335889	1	True				
ANR	335897	IdentifierDecl	s		335889	0					
ANR	335898	IdentifierDeclType	int		335889	0					
ANR	335899	Identifier	s		335889	1					
ANR	335900	IdentifierDecl	slen = sizeof ( si_other )		335889	1					
ANR	335901	IdentifierDeclType	int		335889	0					
ANR	335902	Identifier	slen		335889	1					
ANR	335903	AssignmentExpression	slen = sizeof ( si_other )		335889	2		=			
ANR	335904	Identifier	slen		335889	0					
ANR	335905	SizeofExpression	sizeof ( si_other )		335889	1					
ANR	335906	Sizeof	sizeof		335889	0					
ANR	335907	SizeofOperand	si_other		335889	1					
ANR	335908	IfStatement	"if ( ( s = socket ( AF_INET , SOCK_DGRAM , 0 ) ) == - 1 )"		335889	2					
ANR	335909	Condition	"( s = socket ( AF_INET , SOCK_DGRAM , 0 ) ) == - 1"	216:4:6083:6120	335889	0	True				
ANR	335910	EqualityExpression	"( s = socket ( AF_INET , SOCK_DGRAM , 0 ) ) == - 1"		335889	0		==			
ANR	335911	AssignmentExpression	"s = socket ( AF_INET , SOCK_DGRAM , 0 )"		335889	0		=			
ANR	335912	Identifier	s		335889	0					
ANR	335913	CallExpression	"socket ( AF_INET , SOCK_DGRAM , 0 )"		335889	1					
ANR	335914	Callee	socket		335889	0					
ANR	335915	Identifier	socket		335889	0					
ANR	335916	ArgumentList	AF_INET		335889	1					
ANR	335917	Argument	AF_INET		335889	0					
ANR	335918	Identifier	AF_INET		335889	0					
ANR	335919	Argument	SOCK_DGRAM		335889	1					
ANR	335920	Identifier	SOCK_DGRAM		335889	0					
ANR	335921	Argument	0		335889	2					
ANR	335922	PrimaryExpression	0		335889	0					
ANR	335923	UnaryOperationExpression	- 1		335889	1					
ANR	335924	UnaryOperator	-		335889	0					
ANR	335925	PrimaryExpression	1		335889	1					
ANR	335926	CompoundStatement		5:44:107:107	335889	1					
ANR	335927	ExpressionStatement	"perror ( ""socket()"" )"	217:2:6127:6145	335889	0	True				
ANR	335928	CallExpression	"perror ( ""socket()"" )"		335889	0					
ANR	335929	Callee	perror		335889	0					
ANR	335930	Identifier	perror		335889	0					
ANR	335931	ArgumentList	"""socket()"""		335889	1					
ANR	335932	Argument	"""socket()"""		335889	0					
ANR	335933	PrimaryExpression	"""socket()"""		335889	0					
ANR	335934	ReturnStatement	return ( 1 ) ;	218:2:6149:6158	335889	1	True				
ANR	335935	PrimaryExpression	1		335889	0					
ANR	335936	ExpressionStatement	"memset ( ( char * ) & si_other , 0 , sizeof ( si_other ) )"	221:1:6165:6212	335889	3	True				
ANR	335937	CallExpression	"memset ( ( char * ) & si_other , 0 , sizeof ( si_other ) )"		335889	0					
ANR	335938	Callee	memset		335889	0					
ANR	335939	Identifier	memset		335889	0					
ANR	335940	ArgumentList	( char * ) & si_other		335889	1					
ANR	335941	Argument	( char * ) & si_other		335889	0					
ANR	335942	CastExpression	( char * ) & si_other		335889	0					
ANR	335943	CastTarget	char *		335889	0					
ANR	335944	UnaryOperationExpression	& si_other		335889	1					
ANR	335945	UnaryOperator	&		335889	0					
ANR	335946	Identifier	si_other		335889	1					
ANR	335947	Argument	0		335889	1					
ANR	335948	PrimaryExpression	0		335889	0					
ANR	335949	Argument	sizeof ( si_other )		335889	2					
ANR	335950	SizeofExpression	sizeof ( si_other )		335889	0					
ANR	335951	Sizeof	sizeof		335889	0					
ANR	335952	SizeofOperand	si_other		335889	1					
ANR	335953	ExpressionStatement	si_other . sin_family = AF_INET	222:1:6215:6244	335889	4	True				
ANR	335954	AssignmentExpression	si_other . sin_family = AF_INET		335889	0		=			
ANR	335955	MemberAccess	si_other . sin_family		335889	0					
ANR	335956	Identifier	si_other		335889	0					
ANR	335957	Identifier	sin_family		335889	1					
ANR	335958	Identifier	AF_INET		335889	1					
ANR	335959	ExpressionStatement	si_other . sin_port = htons ( iPort )	223:1:6247:6279	335889	5	True				
ANR	335960	AssignmentExpression	si_other . sin_port = htons ( iPort )		335889	0		=			
ANR	335961	MemberAccess	si_other . sin_port		335889	0					
ANR	335962	Identifier	si_other		335889	0					
ANR	335963	Identifier	sin_port		335889	1					
ANR	335964	CallExpression	htons ( iPort )		335889	1					
ANR	335965	Callee	htons		335889	0					
ANR	335966	Identifier	htons		335889	0					
ANR	335967	ArgumentList	iPort		335889	1					
ANR	335968	Argument	iPort		335889	0					
ANR	335969	Identifier	iPort		335889	0					
ANR	335970	IfStatement	"if ( inet_aton ( ""127.0.0.1"" , & si_other . sin_addr ) == 0 )"		335889	6					
ANR	335971	Condition	"inet_aton ( ""127.0.0.1"" , & si_other . sin_addr ) == 0"	224:4:6285:6329	335889	0	True				
ANR	335972	EqualityExpression	"inet_aton ( ""127.0.0.1"" , & si_other . sin_addr ) == 0"		335889	0		==			
ANR	335973	CallExpression	"inet_aton ( ""127.0.0.1"" , & si_other . sin_addr )"		335889	0					
ANR	335974	Callee	inet_aton		335889	0					
ANR	335975	Identifier	inet_aton		335889	0					
ANR	335976	ArgumentList	"""127.0.0.1"""		335889	1					
ANR	335977	Argument	"""127.0.0.1"""		335889	0					
ANR	335978	PrimaryExpression	"""127.0.0.1"""		335889	0					
ANR	335979	Argument	& si_other . sin_addr		335889	1					
ANR	335980	UnaryOperationExpression	& si_other . sin_addr		335889	0					
ANR	335981	UnaryOperator	&		335889	0					
ANR	335982	MemberAccess	si_other . sin_addr		335889	1					
ANR	335983	Identifier	si_other		335889	0					
ANR	335984	Identifier	sin_addr		335889	1					
ANR	335985	PrimaryExpression	0		335889	1					
ANR	335986	CompoundStatement		13:51:316:316	335889	1					
ANR	335987	ExpressionStatement	"fprintf ( stderr , ""inet_aton() failed\\n"" )"	225:2:6336:6375	335889	0	True				
ANR	335988	CallExpression	"fprintf ( stderr , ""inet_aton() failed\\n"" )"		335889	0					
ANR	335989	Callee	fprintf		335889	0					
ANR	335990	Identifier	fprintf		335889	0					
ANR	335991	ArgumentList	stderr		335889	1					
ANR	335992	Argument	stderr		335889	0					
ANR	335993	Identifier	stderr		335889	0					
ANR	335994	Argument	"""inet_aton() failed\\n"""		335889	1					
ANR	335995	PrimaryExpression	"""inet_aton() failed\\n"""		335889	0					
ANR	335996	ReturnStatement	return ( 1 ) ;	226:2:6379:6388	335889	1	True				
ANR	335997	PrimaryExpression	1		335889	0					
ANR	335998	IfStatement	"if ( sendto ( s , buf , lenBuf , 0 , ( struct sockaddr * ) & si_other , slen ) == - 1 )"		335889	7					
ANR	335999	Condition	"sendto ( s , buf , lenBuf , 0 , ( struct sockaddr * ) & si_other , slen ) == - 1"	229:4:6398:6462	335889	0	True				
ANR	336000	EqualityExpression	"sendto ( s , buf , lenBuf , 0 , ( struct sockaddr * ) & si_other , slen ) == - 1"		335889	0		==			
ANR	336001	CallExpression	"sendto ( s , buf , lenBuf , 0 , ( struct sockaddr * ) & si_other , slen )"		335889	0					
ANR	336002	Callee	sendto		335889	0					
ANR	336003	Identifier	sendto		335889	0					
ANR	336004	ArgumentList	s		335889	1					
ANR	336005	Argument	s		335889	0					
ANR	336006	Identifier	s		335889	0					
ANR	336007	Argument	buf		335889	1					
ANR	336008	Identifier	buf		335889	0					
ANR	336009	Argument	lenBuf		335889	2					
ANR	336010	Identifier	lenBuf		335889	0					
ANR	336011	Argument	0		335889	3					
ANR	336012	PrimaryExpression	0		335889	0					
ANR	336013	Argument	( struct sockaddr * ) & si_other		335889	4					
ANR	336014	CastExpression	( struct sockaddr * ) & si_other		335889	0					
ANR	336015	CastTarget	struct sockaddr *		335889	0					
ANR	336016	UnaryOperationExpression	& si_other		335889	1					
ANR	336017	UnaryOperator	&		335889	0					
ANR	336018	Identifier	si_other		335889	1					
ANR	336019	Argument	slen		335889	5					
ANR	336020	Identifier	slen		335889	0					
ANR	336021	UnaryOperationExpression	- 1		335889	1					
ANR	336022	UnaryOperator	-		335889	0					
ANR	336023	PrimaryExpression	1		335889	1					
ANR	336024	CompoundStatement		18:71:449:449	335889	1					
ANR	336025	ExpressionStatement	"perror ( ""sendto"" )"	230:2:6469:6485	335889	0	True				
ANR	336026	CallExpression	"perror ( ""sendto"" )"		335889	0					
ANR	336027	Callee	perror		335889	0					
ANR	336028	Identifier	perror		335889	0					
ANR	336029	ArgumentList	"""sendto"""		335889	1					
ANR	336030	Argument	"""sendto"""		335889	0					
ANR	336031	PrimaryExpression	"""sendto"""		335889	0					
ANR	336032	ExpressionStatement	"fprintf ( stderr , ""sendto() failed\\n"" )"	231:2:6489:6525	335889	1	True				
ANR	336033	CallExpression	"fprintf ( stderr , ""sendto() failed\\n"" )"		335889	0					
ANR	336034	Callee	fprintf		335889	0					
ANR	336035	Identifier	fprintf		335889	0					
ANR	336036	ArgumentList	stderr		335889	1					
ANR	336037	Argument	stderr		335889	0					
ANR	336038	Identifier	stderr		335889	0					
ANR	336039	Argument	"""sendto() failed\\n"""		335889	1					
ANR	336040	PrimaryExpression	"""sendto() failed\\n"""		335889	0					
ANR	336041	ReturnStatement	return ( 1 ) ;	232:2:6529:6538	335889	2	True				
ANR	336042	PrimaryExpression	1		335889	0					
ANR	336043	ExpressionStatement	close ( s )	235:1:6545:6553	335889	8	True				
ANR	336044	CallExpression	close ( s )		335889	0					
ANR	336045	Callee	close		335889	0					
ANR	336046	Identifier	close		335889	0					
ANR	336047	ArgumentList	s		335889	1					
ANR	336048	Argument	s		335889	0					
ANR	336049	Identifier	s		335889	0					
ANR	336050	ReturnStatement	return 0 ;	236:1:6556:6564	335889	9	True				
ANR	336051	PrimaryExpression	0		335889	0					
ANR	336052	ReturnType	int		335889	1					
ANR	336053	Identifier	udpSend		335889	2					
ANR	336054	ParameterList	"char * buf , int lenBuf"		335889	3					
ANR	336055	Parameter	char * buf	211:8:5992:6000	335889	0	True				
ANR	336056	ParameterType	char *		335889	0					
ANR	336057	Identifier	buf		335889	1					
ANR	336058	Parameter	int lenBuf	211:19:6003:6012	335889	1	True				
ANR	336059	ParameterType	int		335889	0					
ANR	336060	Identifier	lenBuf		335889	1					
ANR	336061	CFGEntryNode	ENTRY		335889		True				
ANR	336062	CFGExitNode	EXIT		335889		True				
ANR	336063	Symbol	si_other		335889						
ANR	336064	Symbol	sendto		335889						
ANR	336065	Symbol	iPort		335889						
ANR	336066	Symbol	htons		335889						
ANR	336067	Symbol	AF_INET		335889						
ANR	336068	Symbol	si_other . sin_family		335889						
ANR	336069	Symbol	SOCK_DGRAM		335889						
ANR	336070	Symbol	stderr		335889						
ANR	336071	Symbol	buf		335889						
ANR	336072	Symbol	lenBuf		335889						
ANR	336073	Symbol	s		335889						
ANR	336074	Symbol	slen		335889						
ANR	336075	Symbol	& si_other		335889						
ANR	336076	Symbol	si_other . sin_port		335889						
ANR	336077	Symbol	socket		335889						
ANR	336078	Symbol	& si_other . sin_addr		335889						
ANR	336079	Symbol	inet_aton		335889						
ANR	336080	Function	openPipe	245:0:6765:7807							
ANR	336081	FunctionDef	"openPipe (char * configFile , pid_t * pid , int * pfd)"		336080	0					
ANR	336082	CompoundStatement		246:0:6818:7807	336080	0					
ANR	336083	IdentifierDeclStatement	int pipefd [ 2 ] ;	247:1:6821:6834	336080	0	True				
ANR	336084	IdentifierDecl	pipefd [ 2 ]		336080	0					
ANR	336085	IdentifierDeclType	int [ 2 ]		336080	0					
ANR	336086	Identifier	pipefd		336080	1					
ANR	336087	PrimaryExpression	2		336080	2					
ANR	336088	IdentifierDeclStatement	pid_t cpid ;	248:1:6837:6847	336080	1	True				
ANR	336089	IdentifierDecl	cpid		336080	0					
ANR	336090	IdentifierDeclType	pid_t		336080	0					
ANR	336091	Identifier	cpid		336080	1					
ANR	336092	IdentifierDeclStatement	"char * newargv [ ] = { ""../tools/rsyslogd"" , ""dummy"" , ""-C"" , ""-n"" , ""-irsyslog.pid"" , ""-M../runtime/.libs:../.libs"" , NULL , NULL } ;"	249:1:6850:6976	336080	2	True				
ANR	336093	IdentifierDecl	"* newargv [ ] = { ""../tools/rsyslogd"" , ""dummy"" , ""-C"" , ""-n"" , ""-irsyslog.pid"" , ""-M../runtime/.libs:../.libs"" , NULL , NULL }"		336080	0					
ANR	336094	IdentifierDeclType	char * [ ]		336080	0					
ANR	336095	Identifier	newargv		336080	1					
ANR	336096	AssignmentExpression	"* newargv [ ] = { ""../tools/rsyslogd"" , ""dummy"" , ""-C"" , ""-n"" , ""-irsyslog.pid"" , ""-M../runtime/.libs:../.libs"" , NULL , NULL }"		336080	2		=			
ANR	336097	Identifier	newargv		336080	0					
ANR	336098	InitializerList	"""../tools/rsyslogd"""		336080	1					
ANR	336099	PrimaryExpression	"""../tools/rsyslogd"""		336080	0					
ANR	336100	PrimaryExpression	"""dummy"""		336080	1					
ANR	336101	PrimaryExpression	"""-C"""		336080	2					
ANR	336102	PrimaryExpression	"""-n"""		336080	3					
ANR	336103	PrimaryExpression	"""-irsyslog.pid"""		336080	4					
ANR	336104	PrimaryExpression	"""-M../runtime/.libs:../.libs"""		336080	5					
ANR	336105	Identifier	NULL		336080	6					
ANR	336106	Identifier	NULL		336080	7					
ANR	336107	IdentifierDeclStatement	char confFile [ 1024 ] ;	251:1:6979:6998	336080	3	True				
ANR	336108	IdentifierDecl	confFile [ 1024 ]		336080	0					
ANR	336109	IdentifierDeclType	char [ 1024 ]		336080	0					
ANR	336110	Identifier	confFile		336080	1					
ANR	336111	PrimaryExpression	1024		336080	2					
ANR	336112	ExpressionStatement	"sprintf ( confFile , ""-f%s/testsuites/%s.conf"" , srcdir , ( pszCustomConf == NULL ) ? configFile : pszCustomConf )"	253:1:7002:7110	336080	4	True				
ANR	336113	CallExpression	"sprintf ( confFile , ""-f%s/testsuites/%s.conf"" , srcdir , ( pszCustomConf == NULL ) ? configFile : pszCustomConf )"		336080	0					
ANR	336114	Callee	sprintf		336080	0					
ANR	336115	Identifier	sprintf		336080	0					
ANR	336116	ArgumentList	confFile		336080	1					
ANR	336117	Argument	confFile		336080	0					
ANR	336118	Identifier	confFile		336080	0					
ANR	336119	Argument	"""-f%s/testsuites/%s.conf"""		336080	1					
ANR	336120	PrimaryExpression	"""-f%s/testsuites/%s.conf"""		336080	0					
ANR	336121	Argument	srcdir		336080	2					
ANR	336122	Identifier	srcdir		336080	0					
ANR	336123	Argument	( pszCustomConf == NULL ) ? configFile : pszCustomConf		336080	3					
ANR	336124	ConditionalExpression	( pszCustomConf == NULL ) ? configFile : pszCustomConf		336080	0					
ANR	336125	Condition	pszCustomConf == NULL		336080	0					
ANR	336126	EqualityExpression	pszCustomConf == NULL		336080	0		==			
ANR	336127	Identifier	pszCustomConf		336080	0					
ANR	336128	Identifier	NULL		336080	1					
ANR	336129	Identifier	configFile		336080	1					
ANR	336130	Identifier	pszCustomConf		336080	2					
ANR	336131	ExpressionStatement	newargv [ 1 ] = confFile	255:1:7113:7134	336080	5	True				
ANR	336132	AssignmentExpression	newargv [ 1 ] = confFile		336080	0		=			
ANR	336133	ArrayIndexing	newargv [ 1 ]		336080	0					
ANR	336134	Identifier	newargv		336080	0					
ANR	336135	PrimaryExpression	1		336080	1					
ANR	336136	Identifier	confFile		336080	1					
ANR	336137	IfStatement	if ( IPv4Only )		336080	6					
ANR	336138	Condition	IPv4Only	257:4:7141:7148	336080	0	True				
ANR	336139	Identifier	IPv4Only		336080	0					
ANR	336140	ExpressionStatement	"newargv [ ( sizeof ( newargv ) / sizeof ( char * ) ) - 2 ] = ""-4"""	258:2:7153:7204	336080	1	True				
ANR	336141	AssignmentExpression	"newargv [ ( sizeof ( newargv ) / sizeof ( char * ) ) - 2 ] = ""-4"""		336080	0		=			
ANR	336142	ArrayIndexing	newargv [ ( sizeof ( newargv ) / sizeof ( char * ) ) - 2 ]		336080	0					
ANR	336143	Identifier	newargv		336080	0					
ANR	336144	AdditiveExpression	( sizeof ( newargv ) / sizeof ( char * ) ) - 2		336080	1		-			
ANR	336145	MultiplicativeExpression	sizeof ( newargv ) / sizeof ( char * )		336080	0		/			
ANR	336146	SizeofExpression	sizeof ( newargv )		336080	0					
ANR	336147	Sizeof	sizeof		336080	0					
ANR	336148	SizeofOperand	newargv		336080	1					
ANR	336149	SizeofExpression	sizeof ( char * )		336080	1					
ANR	336150	Sizeof	sizeof		336080	0					
ANR	336151	SizeofOperand	char *		336080	1					
ANR	336152	PrimaryExpression	2		336080	1					
ANR	336153	PrimaryExpression	"""-4"""		336080	1					
ANR	336154	IfStatement	if ( pipe ( pipefd ) == - 1 )		336080	7					
ANR	336155	Condition	pipe ( pipefd ) == - 1	260:5:7212:7229	336080	0	True				
ANR	336156	EqualityExpression	pipe ( pipefd ) == - 1		336080	0		==			
ANR	336157	CallExpression	pipe ( pipefd )		336080	0					
ANR	336158	Callee	pipe		336080	0					
ANR	336159	Identifier	pipe		336080	0					
ANR	336160	ArgumentList	pipefd		336080	1					
ANR	336161	Argument	pipefd		336080	0					
ANR	336162	Identifier	pipefd		336080	0					
ANR	336163	UnaryOperationExpression	- 1		336080	1					
ANR	336164	UnaryOperator	-		336080	0					
ANR	336165	PrimaryExpression	1		336080	1					
ANR	336166	CompoundStatement		15:25:413:413	336080	1					
ANR	336167	ExpressionStatement	"perror ( ""pipe"" )"	261:2:7236:7250	336080	0	True				
ANR	336168	CallExpression	"perror ( ""pipe"" )"		336080	0					
ANR	336169	Callee	perror		336080	0					
ANR	336170	Identifier	perror		336080	0					
ANR	336171	ArgumentList	"""pipe"""		336080	1					
ANR	336172	Argument	"""pipe"""		336080	0					
ANR	336173	PrimaryExpression	"""pipe"""		336080	0					
ANR	336174	ExpressionStatement	"fprintf ( stderr , ""error pipe\\n"" )"	262:2:7254:7285	336080	1	True				
ANR	336175	CallExpression	"fprintf ( stderr , ""error pipe\\n"" )"		336080	0					
ANR	336176	Callee	fprintf		336080	0					
ANR	336177	Identifier	fprintf		336080	0					
ANR	336178	ArgumentList	stderr		336080	1					
ANR	336179	Argument	stderr		336080	0					
ANR	336180	Identifier	stderr		336080	0					
ANR	336181	Argument	"""error pipe\\n"""		336080	1					
ANR	336182	PrimaryExpression	"""error pipe\\n"""		336080	0					
ANR	336183	ExpressionStatement	exit ( EXIT_FAILURE )	263:2:7289:7307	336080	2	True				
ANR	336184	CallExpression	exit ( EXIT_FAILURE )		336080	0					
ANR	336185	Callee	exit		336080	0					
ANR	336186	Identifier	exit		336080	0					
ANR	336187	ArgumentList	EXIT_FAILURE		336080	1					
ANR	336188	Argument	EXIT_FAILURE		336080	0					
ANR	336189	Identifier	EXIT_FAILURE		336080	0					
ANR	336190	ExpressionStatement	cpid = fork ( )	266:1:7314:7327	336080	8	True				
ANR	336191	AssignmentExpression	cpid = fork ( )		336080	0		=			
ANR	336192	Identifier	cpid		336080	0					
ANR	336193	CallExpression	fork ( )		336080	1					
ANR	336194	Callee	fork		336080	0					
ANR	336195	Identifier	fork		336080	0					
ANR	336196	ArgumentList			336080	1					
ANR	336197	IfStatement	if ( cpid == - 1 )		336080	9					
ANR	336198	Condition	cpid == - 1	267:5:7334:7343	336080	0	True				
ANR	336199	EqualityExpression	cpid == - 1		336080	0		==			
ANR	336200	Identifier	cpid		336080	0					
ANR	336201	UnaryOperationExpression	- 1		336080	1					
ANR	336202	UnaryOperator	-		336080	0					
ANR	336203	PrimaryExpression	1		336080	1					
ANR	336204	CompoundStatement		22:17:527:527	336080	1					
ANR	336205	ExpressionStatement	"perror ( ""fork"" )"	268:2:7350:7364	336080	0	True				
ANR	336206	CallExpression	"perror ( ""fork"" )"		336080	0					
ANR	336207	Callee	perror		336080	0					
ANR	336208	Identifier	perror		336080	0					
ANR	336209	ArgumentList	"""fork"""		336080	1					
ANR	336210	Argument	"""fork"""		336080	0					
ANR	336211	PrimaryExpression	"""fork"""		336080	0					
ANR	336212	ExpressionStatement	"fprintf ( stderr , ""error fork\\n"" )"	269:2:7368:7399	336080	1	True				
ANR	336213	CallExpression	"fprintf ( stderr , ""error fork\\n"" )"		336080	0					
ANR	336214	Callee	fprintf		336080	0					
ANR	336215	Identifier	fprintf		336080	0					
ANR	336216	ArgumentList	stderr		336080	1					
ANR	336217	Argument	stderr		336080	0					
ANR	336218	Identifier	stderr		336080	0					
ANR	336219	Argument	"""error fork\\n"""		336080	1					
ANR	336220	PrimaryExpression	"""error fork\\n"""		336080	0					
ANR	336221	ExpressionStatement	exit ( EXIT_FAILURE )	270:2:7403:7421	336080	2	True				
ANR	336222	CallExpression	exit ( EXIT_FAILURE )		336080	0					
ANR	336223	Callee	exit		336080	0					
ANR	336224	Identifier	exit		336080	0					
ANR	336225	ArgumentList	EXIT_FAILURE		336080	1					
ANR	336226	Argument	EXIT_FAILURE		336080	0					
ANR	336227	Identifier	EXIT_FAILURE		336080	0					
ANR	336228	IfStatement	if ( cpid == 0 )		336080	10					
ANR	336229	Condition	cpid == 0	273:4:7431:7439	336080	0	True				
ANR	336230	EqualityExpression	cpid == 0		336080	0		==			
ANR	336231	Identifier	cpid		336080	0					
ANR	336232	PrimaryExpression	0		336080	1					
ANR	336233	CompoundStatement		28:15:623:623	336080	1					
ANR	336234	ExpressionStatement	fclose ( stdout )	274:2:7477:7491	336080	0	True				
ANR	336235	CallExpression	fclose ( stdout )		336080	0					
ANR	336236	Callee	fclose		336080	0					
ANR	336237	Identifier	fclose		336080	0					
ANR	336238	ArgumentList	stdout		336080	1					
ANR	336239	Argument	stdout		336080	0					
ANR	336240	Identifier	stdout		336080	0					
ANR	336241	IfStatement	if ( dup ( pipefd [ 1 ] ) == - 1 )		336080	1					
ANR	336242	Condition	dup ( pipefd [ 1 ] ) == - 1	275:5:7498:7517	336080	0	True				
ANR	336243	EqualityExpression	dup ( pipefd [ 1 ] ) == - 1		336080	0		==			
ANR	336244	CallExpression	dup ( pipefd [ 1 ] )		336080	0					
ANR	336245	Callee	dup		336080	0					
ANR	336246	Identifier	dup		336080	0					
ANR	336247	ArgumentList	pipefd [ 1 ]		336080	1					
ANR	336248	Argument	pipefd [ 1 ]		336080	0					
ANR	336249	ArrayIndexing	pipefd [ 1 ]		336080	0					
ANR	336250	Identifier	pipefd		336080	0					
ANR	336251	PrimaryExpression	1		336080	1					
ANR	336252	UnaryOperationExpression	- 1		336080	1					
ANR	336253	UnaryOperator	-		336080	0					
ANR	336254	PrimaryExpression	1		336080	1					
ANR	336255	CompoundStatement		30:27:701:701	336080	1					
ANR	336256	ExpressionStatement	"perror ( ""dup"" )"	276:3:7525:7538	336080	0	True				
ANR	336257	CallExpression	"perror ( ""dup"" )"		336080	0					
ANR	336258	Callee	perror		336080	0					
ANR	336259	Identifier	perror		336080	0					
ANR	336260	ArgumentList	"""dup"""		336080	1					
ANR	336261	Argument	"""dup"""		336080	0					
ANR	336262	PrimaryExpression	"""dup"""		336080	0					
ANR	336263	ExpressionStatement	"fprintf ( stderr , ""error dup\\n"" )"	277:3:7543:7573	336080	1	True				
ANR	336264	CallExpression	"fprintf ( stderr , ""error dup\\n"" )"		336080	0					
ANR	336265	Callee	fprintf		336080	0					
ANR	336266	Identifier	fprintf		336080	0					
ANR	336267	ArgumentList	stderr		336080	1					
ANR	336268	Argument	stderr		336080	0					
ANR	336269	Identifier	stderr		336080	0					
ANR	336270	Argument	"""error dup\\n"""		336080	1					
ANR	336271	PrimaryExpression	"""error dup\\n"""		336080	0					
ANR	336272	ExpressionStatement	exit ( 1 )	278:3:7578:7585	336080	2	True				
ANR	336273	CallExpression	exit ( 1 )		336080	0					
ANR	336274	Callee	exit		336080	0					
ANR	336275	Identifier	exit		336080	0					
ANR	336276	ArgumentList	1		336080	1					
ANR	336277	Argument	1		336080	0					
ANR	336278	PrimaryExpression	1		336080	0					
ANR	336279	ExpressionStatement	close ( pipefd [ 1 ] )	280:2:7593:7609	336080	2	True				
ANR	336280	CallExpression	close ( pipefd [ 1 ] )		336080	0					
ANR	336281	Callee	close		336080	0					
ANR	336282	Identifier	close		336080	0					
ANR	336283	ArgumentList	pipefd [ 1 ]		336080	1					
ANR	336284	Argument	pipefd [ 1 ]		336080	0					
ANR	336285	ArrayIndexing	pipefd [ 1 ]		336080	0					
ANR	336286	Identifier	pipefd		336080	0					
ANR	336287	PrimaryExpression	1		336080	1					
ANR	336288	ExpressionStatement	close ( pipefd [ 0 ] )	281:2:7613:7629	336080	3	True				
ANR	336289	CallExpression	close ( pipefd [ 0 ] )		336080	0					
ANR	336290	Callee	close		336080	0					
ANR	336291	Identifier	close		336080	0					
ANR	336292	ArgumentList	pipefd [ 0 ]		336080	1					
ANR	336293	Argument	pipefd [ 0 ]		336080	0					
ANR	336294	ArrayIndexing	pipefd [ 0 ]		336080	0					
ANR	336295	Identifier	pipefd		336080	0					
ANR	336296	PrimaryExpression	0		336080	1					
ANR	336297	ExpressionStatement	fclose ( stdin )	282:2:7633:7646	336080	4	True				
ANR	336298	CallExpression	fclose ( stdin )		336080	0					
ANR	336299	Callee	fclose		336080	0					
ANR	336300	Identifier	fclose		336080	0					
ANR	336301	ArgumentList	stdin		336080	1					
ANR	336302	Argument	stdin		336080	0					
ANR	336303	Identifier	stdin		336080	0					
ANR	336304	ExpressionStatement	"execve ( ""../tools/rsyslogd"" , newargv , ourEnvp )"	283:2:7650:7695	336080	5	True				
ANR	336305	CallExpression	"execve ( ""../tools/rsyslogd"" , newargv , ourEnvp )"		336080	0					
ANR	336306	Callee	execve		336080	0					
ANR	336307	Identifier	execve		336080	0					
ANR	336308	ArgumentList	"""../tools/rsyslogd"""		336080	1					
ANR	336309	Argument	"""../tools/rsyslogd"""		336080	0					
ANR	336310	PrimaryExpression	"""../tools/rsyslogd"""		336080	0					
ANR	336311	Argument	newargv		336080	1					
ANR	336312	Identifier	newargv		336080	0					
ANR	336313	Argument	ourEnvp		336080	2					
ANR	336314	Identifier	ourEnvp		336080	0					
ANR	336315	ElseStatement	else		336080	0					
ANR	336316	CompoundStatement		39:8:886:886	336080	0					
ANR	336317	ExpressionStatement	usleep ( 10000 )	285:2:7721:7734	336080	0	True				
ANR	336318	CallExpression	usleep ( 10000 )		336080	0					
ANR	336319	Callee	usleep		336080	0					
ANR	336320	Identifier	usleep		336080	0					
ANR	336321	ArgumentList	10000		336080	1					
ANR	336322	Argument	10000		336080	0					
ANR	336323	PrimaryExpression	10000		336080	0					
ANR	336324	ExpressionStatement	close ( pipefd [ 1 ] )	286:2:7738:7754	336080	1	True				
ANR	336325	CallExpression	close ( pipefd [ 1 ] )		336080	0					
ANR	336326	Callee	close		336080	0					
ANR	336327	Identifier	close		336080	0					
ANR	336328	ArgumentList	pipefd [ 1 ]		336080	1					
ANR	336329	Argument	pipefd [ 1 ]		336080	0					
ANR	336330	ArrayIndexing	pipefd [ 1 ]		336080	0					
ANR	336331	Identifier	pipefd		336080	0					
ANR	336332	PrimaryExpression	1		336080	1					
ANR	336333	ExpressionStatement	* pid = cpid	287:2:7758:7769	336080	2	True				
ANR	336334	AssignmentExpression	* pid = cpid		336080	0		=			
ANR	336335	UnaryOperationExpression	* pid		336080	0					
ANR	336336	UnaryOperator	*		336080	0					
ANR	336337	Identifier	pid		336080	1					
ANR	336338	Identifier	cpid		336080	1					
ANR	336339	ExpressionStatement	* pfd = pipefd [ 0 ]	288:2:7773:7789	336080	3	True				
ANR	336340	AssignmentExpression	* pfd = pipefd [ 0 ]		336080	0		=			
ANR	336341	UnaryOperationExpression	* pfd		336080	0					
ANR	336342	UnaryOperator	*		336080	0					
ANR	336343	Identifier	pfd		336080	1					
ANR	336344	ArrayIndexing	pipefd [ 0 ]		336080	1					
ANR	336345	Identifier	pipefd		336080	0					
ANR	336346	PrimaryExpression	0		336080	1					
ANR	336347	ReturnStatement	return ( 0 ) ;	291:1:7796:7805	336080	11	True				
ANR	336348	PrimaryExpression	0		336080	0					
ANR	336349	ReturnType	int		336080	1					
ANR	336350	Identifier	openPipe		336080	2					
ANR	336351	ParameterList	"char * configFile , pid_t * pid , int * pfd"		336080	3					
ANR	336352	Parameter	char * configFile	245:13:6778:6793	336080	0	True				
ANR	336353	ParameterType	char *		336080	0					
ANR	336354	Identifier	configFile		336080	1					
ANR	336355	Parameter	pid_t * pid	245:31:6796:6805	336080	1	True				
ANR	336356	ParameterType	pid_t *		336080	0					
ANR	336357	Identifier	pid		336080	1					
ANR	336358	Parameter	int * pfd	245:43:6808:6815	336080	2	True				
ANR	336359	ParameterType	int *		336080	0					
ANR	336360	Identifier	pfd		336080	1					
ANR	336361	CFGEntryNode	ENTRY		336080		True				
ANR	336362	CFGExitNode	EXIT		336080		True				
ANR	336363	Symbol	newargv		336080						
ANR	336364	Symbol	stdin		336080						
ANR	336365	Symbol	NULL		336080						
ANR	336366	Symbol	stdout		336080						
ANR	336367	Symbol	cpid		336080						
ANR	336368	Symbol	pid		336080						
ANR	336369	Symbol	* newargv		336080						
ANR	336370	Symbol	pszCustomConf		336080						
ANR	336371	Symbol	stderr		336080						
ANR	336372	Symbol	ourEnvp		336080						
ANR	336373	Symbol	pfd		336080						
ANR	336374	Symbol	* pipefd		336080						
ANR	336375	Symbol	fork		336080						
ANR	336376	Symbol	EXIT_FAILURE		336080						
ANR	336377	Symbol	* pid		336080						
ANR	336378	Symbol	pipefd		336080						
ANR	336379	Symbol	configFile		336080						
ANR	336380	Symbol	IPv4Only		336080						
ANR	336381	Symbol	* pfd		336080						
ANR	336382	Symbol	pipe		336080						
ANR	336383	Symbol	confFile		336080						
ANR	336384	Symbol	srcdir		336080						
ANR	336385	Symbol	dup		336080						
ANR	336386	Function	unescapeTestdata	308:0:8543:9236							
ANR	336387	FunctionDef	unescapeTestdata (char * testdata)		336386	0					
ANR	336388	CompoundStatement		309:0:8581:9236	336386	0					
ANR	336389	IdentifierDeclStatement	char * pDst ;	310:1:8584:8594	336386	0	True				
ANR	336390	IdentifierDecl	* pDst		336386	0					
ANR	336391	IdentifierDeclType	char *		336386	0					
ANR	336392	Identifier	pDst		336386	1					
ANR	336393	IdentifierDeclStatement	char * pSrc ;	311:1:8597:8607	336386	1	True				
ANR	336394	IdentifierDecl	* pSrc		336386	0					
ANR	336395	IdentifierDeclType	char *		336386	0					
ANR	336396	Identifier	pSrc		336386	1					
ANR	336397	IdentifierDeclStatement	int i ;	312:1:8610:8615	336386	2	True				
ANR	336398	IdentifierDecl	i		336386	0					
ANR	336399	IdentifierDeclType	int		336386	0					
ANR	336400	Identifier	i		336386	1					
ANR	336401	IdentifierDeclStatement	int c ;	313:1:8618:8623	336386	3	True				
ANR	336402	IdentifierDecl	c		336386	0					
ANR	336403	IdentifierDeclType	int		336386	0					
ANR	336404	Identifier	c		336386	1					
ANR	336405	ExpressionStatement	pDst = pSrc = testdata	315:1:8627:8649	336386	4	True				
ANR	336406	AssignmentExpression	pDst = pSrc = testdata		336386	0		=			
ANR	336407	Identifier	pDst		336386	0					
ANR	336408	AssignmentExpression	pSrc = testdata		336386	1		=			
ANR	336409	Identifier	pSrc		336386	0					
ANR	336410	Identifier	testdata		336386	1					
ANR	336411	WhileStatement	while ( * pSrc )		336386	5					
ANR	336412	Condition	* pSrc	316:7:8658:8662	336386	0	True				
ANR	336413	UnaryOperationExpression	* pSrc		336386	0					
ANR	336414	UnaryOperator	*		336386	0					
ANR	336415	Identifier	pSrc		336386	1					
ANR	336416	CompoundStatement		8:14:83:83	336386	1					
ANR	336417	IfStatement	if ( * pSrc == '\\\\' )		336386	0					
ANR	336418	Condition	* pSrc == '\\\\'	317:5:8672:8684	336386	0	True				
ANR	336419	EqualityExpression	* pSrc == '\\\\'		336386	0		==			
ANR	336420	UnaryOperationExpression	* pSrc		336386	0					
ANR	336421	UnaryOperator	*		336386	0					
ANR	336422	Identifier	pSrc		336386	1					
ANR	336423	PrimaryExpression	'\\\\'		336386	1					
ANR	336424	CompoundStatement		9:20:105:105	336386	1					
ANR	336425	SwitchStatement	switch ( * ++ pSrc )		336386	0					
ANR	336426	Condition	* ++ pSrc	318:10:8699:8705	336386	0	True				
ANR	336427	UnaryOperationExpression	* ++ pSrc		336386	0					
ANR	336428	UnaryOperator	*		336386	0					
ANR	336429	UnaryExpression	++ pSrc		336386	1					
ANR	336430	IncDec	++		336386	0					
ANR	336431	Identifier	pSrc		336386	1					
ANR	336432	CompoundStatement		10:19:126:126	336386	1					
ANR	336433	Label	case '\\\\' :	319:3:8713:8722	336386	0	True				
ANR	336434	ExpressionStatement	* pDst ++ = * pSrc ++	319:14:8724:8741	336386	1	True				
ANR	336435	AssignmentExpression	* pDst ++ = * pSrc ++		336386	0		=			
ANR	336436	UnaryOperationExpression	* pDst ++		336386	0					
ANR	336437	UnaryOperator	*		336386	0					
ANR	336438	PostIncDecOperationExpression	pDst ++		336386	1					
ANR	336439	Identifier	pDst		336386	0					
ANR	336440	IncDec	++		336386	1					
ANR	336441	UnaryOperationExpression	* pSrc ++		336386	1					
ANR	336442	UnaryOperator	*		336386	0					
ANR	336443	PostIncDecOperationExpression	pSrc ++		336386	1					
ANR	336444	Identifier	pSrc		336386	0					
ANR	336445	IncDec	++		336386	1					
ANR	336446	BreakStatement	break ;	320:5:8748:8753	336386	2	True				
ANR	336447	Label	case 'n' :	321:3:8758:8766	336386	3	True				
ANR	336448	ExpressionStatement	* pDst ++ = '\\n'	321:13:8768:8782	336386	4	True				
ANR	336449	AssignmentExpression	* pDst ++ = '\\n'		336386	0		=			
ANR	336450	UnaryOperationExpression	* pDst ++		336386	0					
ANR	336451	UnaryOperator	*		336386	0					
ANR	336452	PostIncDecOperationExpression	pDst ++		336386	1					
ANR	336453	Identifier	pDst		336386	0					
ANR	336454	IncDec	++		336386	1					
ANR	336455	PrimaryExpression	'\\n'		336386	1					
ANR	336456	ExpressionStatement	++ pSrc	322:5:8789:8795	336386	5	True				
ANR	336457	UnaryExpression	++ pSrc		336386	0					
ANR	336458	IncDec	++		336386	0					
ANR	336459	Identifier	pSrc		336386	1					
ANR	336460	BreakStatement	break ;	323:5:8802:8807	336386	6	True				
ANR	336461	Label	case 'r' :	324:3:8812:8820	336386	7	True				
ANR	336462	ExpressionStatement	* pDst ++ = '\\r'	324:13:8822:8836	336386	8	True				
ANR	336463	AssignmentExpression	* pDst ++ = '\\r'		336386	0		=			
ANR	336464	UnaryOperationExpression	* pDst ++		336386	0					
ANR	336465	UnaryOperator	*		336386	0					
ANR	336466	PostIncDecOperationExpression	pDst ++		336386	1					
ANR	336467	Identifier	pDst		336386	0					
ANR	336468	IncDec	++		336386	1					
ANR	336469	PrimaryExpression	'\\r'		336386	1					
ANR	336470	ExpressionStatement	++ pSrc	325:5:8843:8849	336386	9	True				
ANR	336471	UnaryExpression	++ pSrc		336386	0					
ANR	336472	IncDec	++		336386	0					
ANR	336473	Identifier	pSrc		336386	1					
ANR	336474	BreakStatement	break ;	326:5:8856:8861	336386	10	True				
ANR	336475	Label	case 't' :	327:3:8866:8874	336386	11	True				
ANR	336476	ExpressionStatement	* pDst ++ = '\\t'	327:13:8876:8890	336386	12	True				
ANR	336477	AssignmentExpression	* pDst ++ = '\\t'		336386	0		=			
ANR	336478	UnaryOperationExpression	* pDst ++		336386	0					
ANR	336479	UnaryOperator	*		336386	0					
ANR	336480	PostIncDecOperationExpression	pDst ++		336386	1					
ANR	336481	Identifier	pDst		336386	0					
ANR	336482	IncDec	++		336386	1					
ANR	336483	PrimaryExpression	'\\t'		336386	1					
ANR	336484	ExpressionStatement	++ pSrc	328:5:8897:8903	336386	13	True				
ANR	336485	UnaryExpression	++ pSrc		336386	0					
ANR	336486	IncDec	++		336386	0					
ANR	336487	Identifier	pSrc		336386	1					
ANR	336488	BreakStatement	break ;	329:5:8910:8915	336386	14	True				
ANR	336489	Label	case '0' :	330:3:8920:8928	336386	15	True				
ANR	336490	Label	case '1' :	331:3:8933:8941	336386	16	True				
ANR	336491	Label	case '2' :	332:3:8946:8954	336386	17	True				
ANR	336492	Label	case '3' :	333:3:8959:8967	336386	18	True				
ANR	336493	ExpressionStatement	c = * pSrc ++ - '0'	333:13:8969:8986	336386	19	True				
ANR	336494	AssignmentExpression	c = * pSrc ++ - '0'		336386	0		=			
ANR	336495	Identifier	c		336386	0					
ANR	336496	AdditiveExpression	* pSrc ++ - '0'		336386	1		-			
ANR	336497	UnaryOperationExpression	* pSrc ++		336386	0					
ANR	336498	UnaryOperator	*		336386	0					
ANR	336499	PostIncDecOperationExpression	pSrc ++		336386	1					
ANR	336500	Identifier	pSrc		336386	0					
ANR	336501	IncDec	++		336386	1					
ANR	336502	PrimaryExpression	'0'		336386	1					
ANR	336503	ExpressionStatement	i = 1	334:5:8993:8998	336386	20	True				
ANR	336504	AssignmentExpression	i = 1		336386	0		=			
ANR	336505	Identifier	i		336386	0					
ANR	336506	PrimaryExpression	1		336386	1					
ANR	336507	WhileStatement	while ( i < 3 && isdigit ( * pSrc ) )		336386	21					
ANR	336508	Condition	i < 3 && isdigit ( * pSrc )	335:11:9049:9071	336386	0	True				
ANR	336509	AndExpression	i < 3 && isdigit ( * pSrc )		336386	0		&&			
ANR	336510	RelationalExpression	i < 3		336386	0		<			
ANR	336511	Identifier	i		336386	0					
ANR	336512	PrimaryExpression	3		336386	1					
ANR	336513	CallExpression	isdigit ( * pSrc )		336386	1					
ANR	336514	Callee	isdigit		336386	0					
ANR	336515	Identifier	isdigit		336386	0					
ANR	336516	ArgumentList	* pSrc		336386	1					
ANR	336517	Argument	* pSrc		336386	0					
ANR	336518	UnaryOperationExpression	* pSrc		336386	0					
ANR	336519	UnaryOperator	*		336386	0					
ANR	336520	Identifier	pSrc		336386	1					
ANR	336521	CompoundStatement		27:36:492:492	336386	1					
ANR	336522	ExpressionStatement	c = c * 8 + * pSrc ++ - '0'	336:6:9082:9107	336386	0	True				
ANR	336523	AssignmentExpression	c = c * 8 + * pSrc ++ - '0'		336386	0		=			
ANR	336524	Identifier	c		336386	0					
ANR	336525	AdditiveExpression	c * 8 + * pSrc ++ - '0'		336386	1		+			
ANR	336526	MultiplicativeExpression	c * 8		336386	0		*			
ANR	336527	Identifier	c		336386	0					
ANR	336528	PrimaryExpression	8		336386	1					
ANR	336529	AdditiveExpression	* pSrc ++ - '0'		336386	1		-			
ANR	336530	UnaryOperationExpression	* pSrc ++		336386	0					
ANR	336531	UnaryOperator	*		336386	0					
ANR	336532	PostIncDecOperationExpression	pSrc ++		336386	1					
ANR	336533	Identifier	pSrc		336386	0					
ANR	336534	IncDec	++		336386	1					
ANR	336535	PrimaryExpression	'0'		336386	1					
ANR	336536	ExpressionStatement	++ i	337:6:9115:9118	336386	1	True				
ANR	336537	UnaryExpression	++ i		336386	0					
ANR	336538	IncDec	++		336386	0					
ANR	336539	Identifier	i		336386	1					
ANR	336540	ExpressionStatement	* pDst ++ = c	339:5:9132:9143	336386	22	True				
ANR	336541	AssignmentExpression	* pDst ++ = c		336386	0		=			
ANR	336542	UnaryOperationExpression	* pDst ++		336386	0					
ANR	336543	UnaryOperator	*		336386	0					
ANR	336544	PostIncDecOperationExpression	pDst ++		336386	1					
ANR	336545	Identifier	pDst		336386	0					
ANR	336546	IncDec	++		336386	1					
ANR	336547	Identifier	c		336386	1					
ANR	336548	BreakStatement	break ;	340:5:9150:9155	336386	23	True				
ANR	336549	Label	default :	341:3:9160:9167	336386	24	True				
ANR	336550	Identifier	default		336386	0					
ANR	336551	BreakStatement	break ;	341:12:9169:9174	336386	25	True				
ANR	336552	ElseStatement	else		336386	0					
ANR	336553	CompoundStatement		35:9:608:608	336386	0					
ANR	336554	ExpressionStatement	* pDst ++ = * pSrc ++	344:3:9195:9212	336386	0	True				
ANR	336555	AssignmentExpression	* pDst ++ = * pSrc ++		336386	0		=			
ANR	336556	UnaryOperationExpression	* pDst ++		336386	0					
ANR	336557	UnaryOperator	*		336386	0					
ANR	336558	PostIncDecOperationExpression	pDst ++		336386	1					
ANR	336559	Identifier	pDst		336386	0					
ANR	336560	IncDec	++		336386	1					
ANR	336561	UnaryOperationExpression	* pSrc ++		336386	1					
ANR	336562	UnaryOperator	*		336386	0					
ANR	336563	PostIncDecOperationExpression	pSrc ++		336386	1					
ANR	336564	Identifier	pSrc		336386	0					
ANR	336565	IncDec	++		336386	1					
ANR	336566	ExpressionStatement	* pDst = '\\0'	347:1:9222:9234	336386	6	True				
ANR	336567	AssignmentExpression	* pDst = '\\0'		336386	0		=			
ANR	336568	UnaryOperationExpression	* pDst		336386	0					
ANR	336569	UnaryOperator	*		336386	0					
ANR	336570	Identifier	pDst		336386	1					
ANR	336571	PrimaryExpression	'\\0'		336386	1					
ANR	336572	ReturnType	void		336386	1					
ANR	336573	Identifier	unescapeTestdata		336386	2					
ANR	336574	ParameterList	char * testdata		336386	3					
ANR	336575	Parameter	char * testdata	308:22:8565:8578	336386	0	True				
ANR	336576	ParameterType	char *		336386	0					
ANR	336577	Identifier	testdata		336386	1					
ANR	336578	CFGEntryNode	ENTRY		336386		True				
ANR	336579	CFGExitNode	EXIT		336386		True				
ANR	336580	Symbol	testdata		336386						
ANR	336581	Symbol	pSrc		336386						
ANR	336582	Symbol	c		336386						
ANR	336583	Symbol	pDst		336386						
ANR	336584	Symbol	* pSrc		336386						
ANR	336585	Symbol	* pDst ++		336386						
ANR	336586	Symbol	i		336386						
ANR	336587	Symbol	* pSrc ++		336386						
ANR	336588	Symbol	* pDst		336386						
ANR	336589	Symbol	* ++ pSrc		336386						
ANR	336590	Symbol	isdigit		336386						
ANR	336591	DeclStmt									
ANR	336592	Decl							int	int	e
ANR	336593	Function	doVarsInExpected	374:0:9996:10454							
ANR	336594	FunctionDef	doVarsInExpected (char * * pe)		336593	0					
ANR	336595	CompoundStatement		376:0:10036:10454	336593	0					
ANR	336596	IdentifierDeclStatement	"char * n , * newBase ;"	377:1:10039:10056	336593	0	True				
ANR	336597	IdentifierDecl	* n		336593	0					
ANR	336598	IdentifierDeclType	char *		336593	0					
ANR	336599	Identifier	n		336593	1					
ANR	336600	IdentifierDecl	* newBase		336593	1					
ANR	336601	IdentifierDeclType	char *		336593	0					
ANR	336602	Identifier	newBase		336593	1					
ANR	336603	IdentifierDeclStatement	char * e = * pe ;	378:1:10059:10072	336593	1	True				
ANR	336604	IdentifierDecl	* e = * pe		336593	0					
ANR	336605	IdentifierDeclType	char *		336593	0					
ANR	336606	Identifier	e		336593	1					
ANR	336607	AssignmentExpression	* e = * pe		336593	2		=			
ANR	336608	Identifier	e		336593	0					
ANR	336609	UnaryOperationExpression	* pe		336593	1					
ANR	336610	UnaryOperator	*		336593	0					
ANR	336611	Identifier	pe		336593	1					
ANR	336612	ExpressionStatement	n = newBase = malloc ( strlen ( e ) + 1024 )	379:1:10075:10113	336593	2	True				
ANR	336613	AssignmentExpression	n = newBase = malloc ( strlen ( e ) + 1024 )		336593	0		=			
ANR	336614	Identifier	n		336593	0					
ANR	336615	AssignmentExpression	newBase = malloc ( strlen ( e ) + 1024 )		336593	1		=			
ANR	336616	Identifier	newBase		336593	0					
ANR	336617	CallExpression	malloc ( strlen ( e ) + 1024 )		336593	1					
ANR	336618	Callee	malloc		336593	0					
ANR	336619	Identifier	malloc		336593	0					
ANR	336620	ArgumentList	strlen ( e ) + 1024		336593	1					
ANR	336621	Argument	strlen ( e ) + 1024		336593	0					
ANR	336622	AdditiveExpression	strlen ( e ) + 1024		336593	0		+			
ANR	336623	CallExpression	strlen ( e )		336593	0					
ANR	336624	Callee	strlen		336593	0					
ANR	336625	Identifier	strlen		336593	0					
ANR	336626	ArgumentList	e		336593	1					
ANR	336627	Argument	e		336593	0					
ANR	336628	Identifier	e		336593	0					
ANR	336629	PrimaryExpression	1024		336593	1					
ANR	336630	WhileStatement	while ( * e )		336593	3					
ANR	336631	Condition	* e	380:7:10155:10156	336593	0	True				
ANR	336632	UnaryOperationExpression	* e		336593	0					
ANR	336633	UnaryOperator	*		336593	0					
ANR	336634	Identifier	e		336593	1					
ANR	336635	CompoundStatement		5:11:122:122	336593	1					
ANR	336636	IfStatement	if ( * e == '~' )		336593	0					
ANR	336637	Condition	* e == '~'	381:5:10166:10174	336593	0	True				
ANR	336638	EqualityExpression	* e == '~'		336593	0		==			
ANR	336639	UnaryOperationExpression	* e		336593	0					
ANR	336640	UnaryOperator	*		336593	0					
ANR	336641	Identifier	e		336593	1					
ANR	336642	PrimaryExpression	'~'		336593	1					
ANR	336643	CompoundStatement		6:16:140:140	336593	1					
ANR	336644	ExpressionStatement	++ e	382:3:10182:10185	336593	0	True				
ANR	336645	UnaryExpression	++ e		336593	0					
ANR	336646	IncDec	++		336593	0					
ANR	336647	Identifier	e		336593	1					
ANR	336648	IfStatement	if ( * e == 'H' )		336593	1					
ANR	336649	Condition	* e == 'H'	383:6:10193:10201	336593	0	True				
ANR	336650	EqualityExpression	* e == 'H'		336593	0		==			
ANR	336651	UnaryOperationExpression	* e		336593	0					
ANR	336652	UnaryOperator	*		336593	0					
ANR	336653	Identifier	e		336593	1					
ANR	336654	PrimaryExpression	'H'		336593	1					
ANR	336655	CompoundStatement		10:4:182:204	336593	1					
ANR	336656	ExpressionStatement	++ e	384:4:10210:10213	336593	0	True				
ANR	336657	UnaryExpression	++ e		336593	0					
ANR	336658	IncDec	++		336593	0					
ANR	336659	Identifier	e		336593	1					
ANR	336660	IdentifierDeclStatement	char * hn = ourHostName ;	385:4:10219:10241	336593	1	True				
ANR	336661	IdentifierDecl	* hn = ourHostName		336593	0					
ANR	336662	IdentifierDeclType	char *		336593	0					
ANR	336663	Identifier	hn		336593	1					
ANR	336664	AssignmentExpression	* hn = ourHostName		336593	2		=			
ANR	336665	Identifier	ourHostName		336593	0					
ANR	336666	Identifier	ourHostName		336593	1					
ANR	336667	WhileStatement	while ( * hn )		336593	2					
ANR	336668	Condition	* hn	386:10:10253:10255	336593	0	True				
ANR	336669	UnaryOperationExpression	* hn		336593	0					
ANR	336670	UnaryOperator	*		336593	0					
ANR	336671	Identifier	hn		336593	1					
ANR	336672	ExpressionStatement	* n ++ = * hn ++	387:5:10263:10275	336593	1	True				
ANR	336673	AssignmentExpression	* n ++ = * hn ++		336593	0		=			
ANR	336674	UnaryOperationExpression	* n ++		336593	0					
ANR	336675	UnaryOperator	*		336593	0					
ANR	336676	PostIncDecOperationExpression	n ++		336593	1					
ANR	336677	Identifier	n		336593	0					
ANR	336678	IncDec	++		336593	1					
ANR	336679	UnaryOperationExpression	* hn ++		336593	1					
ANR	336680	UnaryOperator	*		336593	0					
ANR	336681	PostIncDecOperationExpression	hn ++		336593	1					
ANR	336682	Identifier	hn		336593	0					
ANR	336683	IncDec	++		336593	1					
ANR	336684	ElseStatement	else		336593	0					
ANR	336685	CompoundStatement		13:10:250:250	336593	0					
ANR	336686	ExpressionStatement	* n ++ = '?'	389:4:10293:10303	336593	0	True				
ANR	336687	AssignmentExpression	* n ++ = '?'		336593	0		=			
ANR	336688	UnaryOperationExpression	* n ++		336593	0					
ANR	336689	UnaryOperator	*		336593	0					
ANR	336690	PostIncDecOperationExpression	n ++		336593	1					
ANR	336691	Identifier	n		336593	0					
ANR	336692	IncDec	++		336593	1					
ANR	336693	PrimaryExpression	'?'		336593	1					
ANR	336694	ExpressionStatement	++ e	390:4:10309:10312	336593	1	True				
ANR	336695	UnaryExpression	++ e		336593	0					
ANR	336696	IncDec	++		336593	0					
ANR	336697	Identifier	e		336593	1					
ANR	336698	ElseStatement	else		336593	0					
ANR	336699	IfStatement	if ( * e == '\\\\' )		336593	0					
ANR	336700	Condition	* e == '\\\\'	392:12:10331:10340	336593	0	True				
ANR	336701	EqualityExpression	* e == '\\\\'		336593	0		==			
ANR	336702	UnaryOperationExpression	* e		336593	0					
ANR	336703	UnaryOperator	*		336593	0					
ANR	336704	Identifier	e		336593	1					
ANR	336705	PrimaryExpression	'\\\\'		336593	1					
ANR	336706	CompoundStatement		17:24:306:306	336593	1					
ANR	336707	ExpressionStatement	++ e	393:3:10348:10351	336593	0	True				
ANR	336708	UnaryExpression	++ e		336593	0					
ANR	336709	IncDec	++		336593	0					
ANR	336710	Identifier	e		336593	1					
ANR	336711	ExpressionStatement	* n ++ = * e ++	394:3:10367:10378	336593	1	True				
ANR	336712	AssignmentExpression	* n ++ = * e ++		336593	0		=			
ANR	336713	UnaryOperationExpression	* n ++		336593	0					
ANR	336714	UnaryOperator	*		336593	0					
ANR	336715	PostIncDecOperationExpression	n ++		336593	1					
ANR	336716	Identifier	n		336593	0					
ANR	336717	IncDec	++		336593	1					
ANR	336718	UnaryOperationExpression	* e ++		336593	1					
ANR	336719	UnaryOperator	*		336593	0					
ANR	336720	PostIncDecOperationExpression	e ++		336593	1					
ANR	336721	Identifier	e		336593	0					
ANR	336722	IncDec	++		336593	1					
ANR	336723	ElseStatement	else		336593	0					
ANR	336724	CompoundStatement		20:9:352:352	336593	0					
ANR	336725	ExpressionStatement	* n ++ = * e ++	396:3:10394:10405	336593	0	True				
ANR	336726	AssignmentExpression	* n ++ = * e ++		336593	0		=			
ANR	336727	UnaryOperationExpression	* n ++		336593	0					
ANR	336728	UnaryOperator	*		336593	0					
ANR	336729	PostIncDecOperationExpression	n ++		336593	1					
ANR	336730	Identifier	n		336593	0					
ANR	336731	IncDec	++		336593	1					
ANR	336732	UnaryOperationExpression	* e ++		336593	1					
ANR	336733	UnaryOperator	*		336593	0					
ANR	336734	PostIncDecOperationExpression	e ++		336593	1					
ANR	336735	Identifier	e		336593	0					
ANR	336736	IncDec	++		336593	1					
ANR	336737	ExpressionStatement	* n = '\\0'	399:1:10415:10424	336593	4	True				
ANR	336738	AssignmentExpression	* n = '\\0'		336593	0		=			
ANR	336739	UnaryOperationExpression	* n		336593	0					
ANR	336740	UnaryOperator	*		336593	0					
ANR	336741	Identifier	n		336593	1					
ANR	336742	PrimaryExpression	'\\0'		336593	1					
ANR	336743	ExpressionStatement	free ( * pe )	400:1:10427:10436	336593	5	True				
ANR	336744	CallExpression	free ( * pe )		336593	0					
ANR	336745	Callee	free		336593	0					
ANR	336746	Identifier	free		336593	0					
ANR	336747	ArgumentList	* pe		336593	1					
ANR	336748	Argument	* pe		336593	0					
ANR	336749	UnaryOperationExpression	* pe		336593	0					
ANR	336750	UnaryOperator	*		336593	0					
ANR	336751	Identifier	pe		336593	1					
ANR	336752	ExpressionStatement	* pe = newBase	401:1:10439:10452	336593	6	True				
ANR	336753	AssignmentExpression	* pe = newBase		336593	0		=			
ANR	336754	UnaryOperationExpression	* pe		336593	0					
ANR	336755	UnaryOperator	*		336593	0					
ANR	336756	Identifier	pe		336593	1					
ANR	336757	Identifier	newBase		336593	1					
ANR	336758	ReturnType	static void		336593	1					
ANR	336759	Identifier	doVarsInExpected		336593	2					
ANR	336760	ParameterList	char * * pe		336593	3					
ANR	336761	Parameter	char * * pe	375:17:10025:10033	336593	0	True				
ANR	336762	ParameterType	char * *		336593	0					
ANR	336763	Identifier	pe		336593	1					
ANR	336764	CFGEntryNode	ENTRY		336593		True				
ANR	336765	CFGExitNode	EXIT		336593		True				
ANR	336766	Symbol	malloc		336593						
ANR	336767	Symbol	newBase		336593						
ANR	336768	Symbol	e		336593						
ANR	336769	Symbol	hn		336593						
ANR	336770	Symbol	* n ++		336593						
ANR	336771	Symbol	* hn ++		336593						
ANR	336772	Symbol	* e ++		336593						
ANR	336773	Symbol	n		336593						
ANR	336774	Symbol	* e		336593						
ANR	336775	Symbol	* hn		336593						
ANR	336776	Symbol	strlen		336593						
ANR	336777	Symbol	pe		336593						
ANR	336778	Symbol	* pe		336593						
ANR	336779	Symbol	* n		336593						
ANR	336780	Symbol	ourHostName		336593						
ANR	336781	Function	processTestFile	407:0:10578:12408							
ANR	336782	FunctionDef	"processTestFile (int fd , char * pszFileName)"		336781	0					
ANR	336783	CompoundStatement		409:0:10625:12408	336781	0					
ANR	336784	IdentifierDeclStatement	FILE * fp ;	410:1:10628:10636	336781	0	True				
ANR	336785	IdentifierDecl	* fp		336781	0					
ANR	336786	IdentifierDeclType	FILE *		336781	0					
ANR	336787	Identifier	fp		336781	1					
ANR	336788	IdentifierDeclStatement	char * testdata = NULL ;	411:1:10639:10660	336781	1	True				
ANR	336789	IdentifierDecl	* testdata = NULL		336781	0					
ANR	336790	IdentifierDeclType	char *		336781	0					
ANR	336791	Identifier	testdata		336781	1					
ANR	336792	AssignmentExpression	* testdata = NULL		336781	2		=			
ANR	336793	Identifier	NULL		336781	0					
ANR	336794	Identifier	NULL		336781	1					
ANR	336795	IdentifierDeclStatement	char * expected = NULL ;	412:1:10663:10684	336781	2	True				
ANR	336796	IdentifierDecl	* expected = NULL		336781	0					
ANR	336797	IdentifierDeclType	char *		336781	0					
ANR	336798	Identifier	expected		336781	1					
ANR	336799	AssignmentExpression	* expected = NULL		336781	2		=			
ANR	336800	Identifier	NULL		336781	0					
ANR	336801	Identifier	NULL		336781	1					
ANR	336802	IdentifierDeclStatement	int ret = 0 ;	413:1:10687:10698	336781	3	True				
ANR	336803	IdentifierDecl	ret = 0		336781	0					
ANR	336804	IdentifierDeclType	int		336781	0					
ANR	336805	Identifier	ret		336781	1					
ANR	336806	AssignmentExpression	ret = 0		336781	2		=			
ANR	336807	Identifier	ret		336781	0					
ANR	336808	PrimaryExpression	0		336781	1					
ANR	336809	IdentifierDeclStatement	size_t lenLn ;	414:1:10701:10713	336781	4	True				
ANR	336810	IdentifierDecl	lenLn		336781	0					
ANR	336811	IdentifierDeclType	size_t		336781	0					
ANR	336812	Identifier	lenLn		336781	1					
ANR	336813	IdentifierDeclStatement	char buf [ 4096 ] ;	415:1:10716:10730	336781	5	True				
ANR	336814	IdentifierDecl	buf [ 4096 ]		336781	0					
ANR	336815	IdentifierDeclType	char [ 4096 ]		336781	0					
ANR	336816	Identifier	buf		336781	1					
ANR	336817	PrimaryExpression	4096		336781	2					
ANR	336818	IfStatement	"if ( ( fp = fopen ( ( char * ) pszFileName , ""r"" ) ) == NULL )"		336781	6					
ANR	336819	Condition	"( fp = fopen ( ( char * ) pszFileName , ""r"" ) ) == NULL"	417:4:10737:10781	336781	0	True				
ANR	336820	EqualityExpression	"( fp = fopen ( ( char * ) pszFileName , ""r"" ) ) == NULL"		336781	0		==			
ANR	336821	AssignmentExpression	"fp = fopen ( ( char * ) pszFileName , ""r"" )"		336781	0		=			
ANR	336822	Identifier	fp		336781	0					
ANR	336823	CallExpression	"fopen ( ( char * ) pszFileName , ""r"" )"		336781	1					
ANR	336824	Callee	fopen		336781	0					
ANR	336825	Identifier	fopen		336781	0					
ANR	336826	ArgumentList	( char * ) pszFileName		336781	1					
ANR	336827	Argument	( char * ) pszFileName		336781	0					
ANR	336828	CastExpression	( char * ) pszFileName		336781	0					
ANR	336829	CastTarget	char *		336781	0					
ANR	336830	Identifier	pszFileName		336781	1					
ANR	336831	Argument	"""r"""		336781	1					
ANR	336832	PrimaryExpression	"""r"""		336781	0					
ANR	336833	Identifier	NULL		336781	1					
ANR	336834	CompoundStatement		9:51:158:158	336781	1					
ANR	336835	ExpressionStatement	perror ( ( char * ) pszFileName )	418:2:10788:10814	336781	0	True				
ANR	336836	CallExpression	perror ( ( char * ) pszFileName )		336781	0					
ANR	336837	Callee	perror		336781	0					
ANR	336838	Identifier	perror		336781	0					
ANR	336839	ArgumentList	( char * ) pszFileName		336781	1					
ANR	336840	Argument	( char * ) pszFileName		336781	0					
ANR	336841	CastExpression	( char * ) pszFileName		336781	0					
ANR	336842	CastTarget	char *		336781	0					
ANR	336843	Identifier	pszFileName		336781	1					
ANR	336844	ReturnStatement	return ( 2 ) ;	419:2:10818:10827	336781	1	True				
ANR	336845	PrimaryExpression	2		336781	0					
ANR	336846	WhileStatement	while ( ! feof ( fp ) )		336781	7					
ANR	336847	Condition	! feof ( fp )	424:7:10879:10887	336781	0	True				
ANR	336848	UnaryOperationExpression	! feof ( fp )		336781	0					
ANR	336849	UnaryOperator	!		336781	0					
ANR	336850	CallExpression	feof ( fp )		336781	1					
ANR	336851	Callee	feof		336781	0					
ANR	336852	Identifier	feof		336781	0					
ANR	336853	ArgumentList	fp		336781	1					
ANR	336854	Argument	fp		336781	0					
ANR	336855	Identifier	fp		336781	0					
ANR	336856	CompoundStatement		16:18:264:264	336781	1					
ANR	336857	ExpressionStatement	"getline_abort ( & testdata , & lenLn , fp )"	425:2:10894:10930	336781	0	True				
ANR	336858	CallExpression	"getline_abort ( & testdata , & lenLn , fp )"		336781	0					
ANR	336859	Callee	getline_abort		336781	0					
ANR	336860	Identifier	getline_abort		336781	0					
ANR	336861	ArgumentList	& testdata		336781	1					
ANR	336862	Argument	& testdata		336781	0					
ANR	336863	UnaryOperationExpression	& testdata		336781	0					
ANR	336864	UnaryOperator	&		336781	0					
ANR	336865	Identifier	testdata		336781	1					
ANR	336866	Argument	& lenLn		336781	1					
ANR	336867	UnaryOperationExpression	& lenLn		336781	0					
ANR	336868	UnaryOperator	&		336781	0					
ANR	336869	Identifier	lenLn		336781	1					
ANR	336870	Argument	fp		336781	2					
ANR	336871	Identifier	fp		336781	0					
ANR	336872	WhileStatement	while ( ! feof ( fp ) )		336781	1					
ANR	336873	Condition	! feof ( fp )	426:8:10940:10948	336781	0	True				
ANR	336874	UnaryOperationExpression	! feof ( fp )		336781	0					
ANR	336875	UnaryOperator	!		336781	0					
ANR	336876	CallExpression	feof ( fp )		336781	1					
ANR	336877	Callee	feof		336781	0					
ANR	336878	Identifier	feof		336781	0					
ANR	336879	ArgumentList	fp		336781	1					
ANR	336880	Argument	fp		336781	0					
ANR	336881	Identifier	fp		336781	0					
ANR	336882	CompoundStatement		18:19:325:325	336781	1					
ANR	336883	IfStatement	if ( * testdata == '#' )		336781	0					
ANR	336884	Condition	* testdata == '#'	427:6:10959:10974	336781	0	True				
ANR	336885	EqualityExpression	* testdata == '#'		336781	0		==			
ANR	336886	UnaryOperationExpression	* testdata		336781	0					
ANR	336887	UnaryOperator	*		336781	0					
ANR	336888	Identifier	testdata		336781	1					
ANR	336889	PrimaryExpression	'#'		336781	1					
ANR	336890	ExpressionStatement	"getline_abort ( & testdata , & lenLn , fp )"	428:4:10981:11017	336781	1	True				
ANR	336891	CallExpression	"getline_abort ( & testdata , & lenLn , fp )"		336781	0					
ANR	336892	Callee	getline_abort		336781	0					
ANR	336893	Identifier	getline_abort		336781	0					
ANR	336894	ArgumentList	& testdata		336781	1					
ANR	336895	Argument	& testdata		336781	0					
ANR	336896	UnaryOperationExpression	& testdata		336781	0					
ANR	336897	UnaryOperator	&		336781	0					
ANR	336898	Identifier	testdata		336781	1					
ANR	336899	Argument	& lenLn		336781	1					
ANR	336900	UnaryOperationExpression	& lenLn		336781	0					
ANR	336901	UnaryOperator	&		336781	0					
ANR	336902	Identifier	lenLn		336781	1					
ANR	336903	Argument	fp		336781	2					
ANR	336904	Identifier	fp		336781	0					
ANR	336905	ElseStatement	else		336781	0					
ANR	336906	BreakStatement	break ;	430:4:11031:11036	336781	0	True				
ANR	336907	IfStatement	if ( feof ( fp ) )		336781	2					
ANR	336908	Condition	feof ( fp )	434:5:11114:11121	336781	0	True				
ANR	336909	CallExpression	feof ( fp )		336781	0					
ANR	336910	Callee	feof		336781	0					
ANR	336911	Identifier	feof		336781	0					
ANR	336912	ArgumentList	fp		336781	1					
ANR	336913	Argument	fp		336781	0					
ANR	336914	Identifier	fp		336781	0					
ANR	336915	BreakStatement	break ;	435:3:11127:11132	336781	1	True				
ANR	336916	ExpressionStatement	++ iTests	437:2:11137:11145	336781	3	True				
ANR	336917	UnaryExpression	++ iTests		336781	0					
ANR	336918	IncDec	++		336781	0					
ANR	336919	Identifier	iTests		336781	1					
ANR	336920	ExpressionStatement	testdata [ strlen ( testdata ) - 1 ] = '\\0'	439:2:11193:11228	336781	4	True				
ANR	336921	AssignmentExpression	testdata [ strlen ( testdata ) - 1 ] = '\\0'		336781	0		=			
ANR	336922	ArrayIndexing	testdata [ strlen ( testdata ) - 1 ]		336781	0					
ANR	336923	Identifier	testdata		336781	0					
ANR	336924	AdditiveExpression	strlen ( testdata ) - 1		336781	1		-			
ANR	336925	CallExpression	strlen ( testdata )		336781	0					
ANR	336926	Callee	strlen		336781	0					
ANR	336927	Identifier	strlen		336781	0					
ANR	336928	ArgumentList	testdata		336781	1					
ANR	336929	Argument	testdata		336781	0					
ANR	336930	Identifier	testdata		336781	0					
ANR	336931	PrimaryExpression	1		336781	1					
ANR	336932	PrimaryExpression	'\\0'		336781	1					
ANR	336933	ExpressionStatement	unescapeTestdata ( testdata )	441:2:11331:11357	336781	5	True				
ANR	336934	CallExpression	unescapeTestdata ( testdata )		336781	0					
ANR	336935	Callee	unescapeTestdata		336781	0					
ANR	336936	Identifier	unescapeTestdata		336781	0					
ANR	336937	ArgumentList	testdata		336781	1					
ANR	336938	Argument	testdata		336781	0					
ANR	336939	Identifier	testdata		336781	0					
ANR	336940	IfStatement	if ( inputMode == inputUDP )		336781	6					
ANR	336941	Condition	inputMode == inputUDP	442:5:11364:11384	336781	0	True				
ANR	336942	EqualityExpression	inputMode == inputUDP		336781	0		==			
ANR	336943	Identifier	inputMode		336781	0					
ANR	336944	Identifier	inputUDP		336781	1					
ANR	336945	CompoundStatement		34:28:761:761	336781	1					
ANR	336946	IfStatement	"if ( udpSend ( testdata , strlen ( testdata ) ) != 0 )"		336781	0					
ANR	336947	Condition	"udpSend ( testdata , strlen ( testdata ) ) != 0"	443:6:11395:11434	336781	0	True				
ANR	336948	EqualityExpression	"udpSend ( testdata , strlen ( testdata ) ) != 0"		336781	0		!=			
ANR	336949	CallExpression	"udpSend ( testdata , strlen ( testdata ) )"		336781	0					
ANR	336950	Callee	udpSend		336781	0					
ANR	336951	Identifier	udpSend		336781	0					
ANR	336952	ArgumentList	testdata		336781	1					
ANR	336953	Argument	testdata		336781	0					
ANR	336954	Identifier	testdata		336781	0					
ANR	336955	Argument	strlen ( testdata )		336781	1					
ANR	336956	CallExpression	strlen ( testdata )		336781	0					
ANR	336957	Callee	strlen		336781	0					
ANR	336958	Identifier	strlen		336781	0					
ANR	336959	ArgumentList	testdata		336781	1					
ANR	336960	Argument	testdata		336781	0					
ANR	336961	Identifier	testdata		336781	0					
ANR	336962	PrimaryExpression	0		336781	1					
ANR	336963	ReturnStatement	return ( 2 ) ;	444:4:11441:11450	336781	1	True				
ANR	336964	PrimaryExpression	2		336781	0					
ANR	336965	ElseStatement	else		336781	0					
ANR	336966	CompoundStatement		37:9:835:835	336781	0					
ANR	336967	IfStatement	"if ( tcpSend ( testdata , strlen ( testdata ) ) != 0 )"		336781	0					
ANR	336968	Condition	"tcpSend ( testdata , strlen ( testdata ) ) != 0"	446:6:11469:11508	336781	0	True				
ANR	336969	EqualityExpression	"tcpSend ( testdata , strlen ( testdata ) ) != 0"		336781	0		!=			
ANR	336970	CallExpression	"tcpSend ( testdata , strlen ( testdata ) )"		336781	0					
ANR	336971	Callee	tcpSend		336781	0					
ANR	336972	Identifier	tcpSend		336781	0					
ANR	336973	ArgumentList	testdata		336781	1					
ANR	336974	Argument	testdata		336781	0					
ANR	336975	Identifier	testdata		336781	0					
ANR	336976	Argument	strlen ( testdata )		336781	1					
ANR	336977	CallExpression	strlen ( testdata )		336781	0					
ANR	336978	Callee	strlen		336781	0					
ANR	336979	Identifier	strlen		336781	0					
ANR	336980	ArgumentList	testdata		336781	1					
ANR	336981	Argument	testdata		336781	0					
ANR	336982	Identifier	testdata		336781	0					
ANR	336983	PrimaryExpression	0		336781	1					
ANR	336984	ReturnStatement	return ( 2 ) ;	447:4:11515:11524	336781	1	True				
ANR	336985	PrimaryExpression	2		336781	0					
ANR	336986	ExpressionStatement	"getline_abort ( & expected , & lenLn , fp )"	454:2:11700:11736	336781	7	True				
ANR	336987	CallExpression	"getline_abort ( & expected , & lenLn , fp )"		336781	0					
ANR	336988	Callee	getline_abort		336781	0					
ANR	336989	Identifier	getline_abort		336781	0					
ANR	336990	ArgumentList	& expected		336781	1					
ANR	336991	Argument	& expected		336781	0					
ANR	336992	UnaryOperationExpression	& expected		336781	0					
ANR	336993	UnaryOperator	&		336781	0					
ANR	336994	Identifier	expected		336781	1					
ANR	336995	Argument	& lenLn		336781	1					
ANR	336996	UnaryOperationExpression	& lenLn		336781	0					
ANR	336997	UnaryOperator	&		336781	0					
ANR	336998	Identifier	lenLn		336781	1					
ANR	336999	Argument	fp		336781	2					
ANR	337000	Identifier	fp		336781	0					
ANR	337001	ExpressionStatement	expected [ strlen ( expected ) - 1 ] = '\\0'	455:2:11740:11775	336781	8	True				
ANR	337002	AssignmentExpression	expected [ strlen ( expected ) - 1 ] = '\\0'		336781	0		=			
ANR	337003	ArrayIndexing	expected [ strlen ( expected ) - 1 ]		336781	0					
ANR	337004	Identifier	expected		336781	0					
ANR	337005	AdditiveExpression	strlen ( expected ) - 1		336781	1		-			
ANR	337006	CallExpression	strlen ( expected )		336781	0					
ANR	337007	Callee	strlen		336781	0					
ANR	337008	Identifier	strlen		336781	0					
ANR	337009	ArgumentList	expected		336781	1					
ANR	337010	Argument	expected		336781	0					
ANR	337011	Identifier	expected		336781	0					
ANR	337012	PrimaryExpression	1		336781	1					
ANR	337013	PrimaryExpression	'\\0'		336781	1					
ANR	337014	ExpressionStatement	doVarsInExpected ( & expected )	456:2:11795:11822	336781	9	True				
ANR	337015	CallExpression	doVarsInExpected ( & expected )		336781	0					
ANR	337016	Callee	doVarsInExpected		336781	0					
ANR	337017	Identifier	doVarsInExpected		336781	0					
ANR	337018	ArgumentList	& expected		336781	1					
ANR	337019	Argument	& expected		336781	0					
ANR	337020	UnaryOperationExpression	& expected		336781	0					
ANR	337021	UnaryOperator	&		336781	0					
ANR	337022	Identifier	expected		336781	1					
ANR	337023	ExpressionStatement	"readLine ( fd , buf )"	459:2:11904:11921	336781	10	True				
ANR	337024	CallExpression	"readLine ( fd , buf )"		336781	0					
ANR	337025	Callee	readLine		336781	0					
ANR	337026	Identifier	readLine		336781	0					
ANR	337027	ArgumentList	fd		336781	1					
ANR	337028	Argument	fd		336781	0					
ANR	337029	Identifier	fd		336781	0					
ANR	337030	Argument	buf		336781	1					
ANR	337031	Identifier	buf		336781	0					
ANR	337032	IfStatement	if ( strlen ( buf ) == 0 )		336781	11					
ANR	337033	Condition	strlen ( buf ) == 0	460:5:11928:11943	336781	0	True				
ANR	337034	EqualityExpression	strlen ( buf ) == 0		336781	0		==			
ANR	337035	CallExpression	strlen ( buf )		336781	0					
ANR	337036	Callee	strlen		336781	0					
ANR	337037	Identifier	strlen		336781	0					
ANR	337038	ArgumentList	buf		336781	1					
ANR	337039	Argument	buf		336781	0					
ANR	337040	Identifier	buf		336781	0					
ANR	337041	PrimaryExpression	0		336781	1					
ANR	337042	CompoundStatement		52:23:1320:1320	336781	1					
ANR	337043	ExpressionStatement	"fprintf ( stderr , ""something went wrong - read a zero-length string from rsyslogd\\n"" )"	461:3:11951:12034	336781	0	True				
ANR	337044	CallExpression	"fprintf ( stderr , ""something went wrong - read a zero-length string from rsyslogd\\n"" )"		336781	0					
ANR	337045	Callee	fprintf		336781	0					
ANR	337046	Identifier	fprintf		336781	0					
ANR	337047	ArgumentList	stderr		336781	1					
ANR	337048	Argument	stderr		336781	0					
ANR	337049	Identifier	stderr		336781	0					
ANR	337050	Argument	"""something went wrong - read a zero-length string from rsyslogd\\n"""		336781	1					
ANR	337051	PrimaryExpression	"""something went wrong - read a zero-length string from rsyslogd\\n"""		336781	0					
ANR	337052	ExpressionStatement	exit ( 1 )	462:3:12039:12046	336781	1	True				
ANR	337053	CallExpression	exit ( 1 )		336781	0					
ANR	337054	Callee	exit		336781	0					
ANR	337055	Identifier	exit		336781	0					
ANR	337056	ArgumentList	1		336781	1					
ANR	337057	Argument	1		336781	0					
ANR	337058	PrimaryExpression	1		336781	0					
ANR	337059	IfStatement	"if ( strcmp ( expected , buf ) )"		336781	12					
ANR	337060	Condition	"strcmp ( expected , buf )"	464:5:12057:12077	336781	0	True				
ANR	337061	CallExpression	"strcmp ( expected , buf )"		336781	0					
ANR	337062	Callee	strcmp		336781	0					
ANR	337063	Identifier	strcmp		336781	0					
ANR	337064	ArgumentList	expected		336781	1					
ANR	337065	Argument	expected		336781	0					
ANR	337066	Identifier	expected		336781	0					
ANR	337067	Argument	buf		336781	1					
ANR	337068	Identifier	buf		336781	0					
ANR	337069	CompoundStatement		56:28:1454:1454	336781	1					
ANR	337070	ExpressionStatement	++ iFailed	465:3:12085:12094	336781	0	True				
ANR	337071	UnaryExpression	++ iFailed		336781	0					
ANR	337072	IncDec	++		336781	0					
ANR	337073	Identifier	iFailed		336781	1					
ANR	337074	ExpressionStatement	"fprintf ( stderr , ""\\nFile %s:\\nExpected Response:\\n'%s'\\nActual Response:\\n'%s'\\n"" , pszFileName , expected , buf )"	466:3:12099:12212	336781	1	True				
ANR	337075	CallExpression	"fprintf ( stderr , ""\\nFile %s:\\nExpected Response:\\n'%s'\\nActual Response:\\n'%s'\\n"" , pszFileName , expected , buf )"		336781	0					
ANR	337076	Callee	fprintf		336781	0					
ANR	337077	Identifier	fprintf		336781	0					
ANR	337078	ArgumentList	stderr		336781	1					
ANR	337079	Argument	stderr		336781	0					
ANR	337080	Identifier	stderr		336781	0					
ANR	337081	Argument	"""\\nFile %s:\\nExpected Response:\\n'%s'\\nActual Response:\\n'%s'\\n"""		336781	1					
ANR	337082	PrimaryExpression	"""\\nFile %s:\\nExpected Response:\\n'%s'\\nActual Response:\\n'%s'\\n"""		336781	0					
ANR	337083	Argument	pszFileName		336781	2					
ANR	337084	Identifier	pszFileName		336781	0					
ANR	337085	Argument	expected		336781	3					
ANR	337086	Identifier	expected		336781	0					
ANR	337087	Argument	buf		336781	4					
ANR	337088	Identifier	buf		336781	0					
ANR	337089	ExpressionStatement	ret = 1	468:4:12218:12225	336781	2	True				
ANR	337090	AssignmentExpression	ret = 1		336781	0		=			
ANR	337091	Identifier	ret		336781	0					
ANR	337092	PrimaryExpression	1		336781	1					
ANR	337093	ExpressionStatement	free ( testdata )	472:2:12305:12319	336781	13	True				
ANR	337094	CallExpression	free ( testdata )		336781	0					
ANR	337095	Callee	free		336781	0					
ANR	337096	Identifier	free		336781	0					
ANR	337097	ArgumentList	testdata		336781	1					
ANR	337098	Argument	testdata		336781	0					
ANR	337099	Identifier	testdata		336781	0					
ANR	337100	ExpressionStatement	testdata = NULL	473:2:12323:12338	336781	14	True				
ANR	337101	AssignmentExpression	testdata = NULL		336781	0		=			
ANR	337102	Identifier	testdata		336781	0					
ANR	337103	Identifier	NULL		336781	1					
ANR	337104	ExpressionStatement	free ( expected )	474:2:12342:12356	336781	15	True				
ANR	337105	CallExpression	free ( expected )		336781	0					
ANR	337106	Callee	free		336781	0					
ANR	337107	Identifier	free		336781	0					
ANR	337108	ArgumentList	expected		336781	1					
ANR	337109	Argument	expected		336781	0					
ANR	337110	Identifier	expected		336781	0					
ANR	337111	ExpressionStatement	expected = NULL	475:2:12360:12375	336781	16	True				
ANR	337112	AssignmentExpression	expected = NULL		336781	0		=			
ANR	337113	Identifier	expected		336781	0					
ANR	337114	Identifier	NULL		336781	1					
ANR	337115	ExpressionStatement	fclose ( fp )	478:1:12382:12392	336781	8	True				
ANR	337116	CallExpression	fclose ( fp )		336781	0					
ANR	337117	Callee	fclose		336781	0					
ANR	337118	Identifier	fclose		336781	0					
ANR	337119	ArgumentList	fp		336781	1					
ANR	337120	Argument	fp		336781	0					
ANR	337121	Identifier	fp		336781	0					
ANR	337122	ReturnStatement	return ( ret ) ;	479:1:12395:12406	336781	9	True				
ANR	337123	Identifier	ret		336781	0					
ANR	337124	ReturnType	int		336781	1					
ANR	337125	Identifier	processTestFile		336781	2					
ANR	337126	ParameterList	"int fd , char * pszFileName"		336781	3					
ANR	337127	Parameter	int fd	408:16:10598:10603	336781	0	True				
ANR	337128	ParameterType	int		336781	0					
ANR	337129	Identifier	fd		336781	1					
ANR	337130	Parameter	char * pszFileName	408:24:10606:10622	336781	1	True				
ANR	337131	ParameterType	char *		336781	0					
ANR	337132	Identifier	pszFileName		336781	1					
ANR	337133	CFGEntryNode	ENTRY		336781		True				
ANR	337134	CFGExitNode	EXIT		336781		True				
ANR	337135	Symbol	ret		336781						
ANR	337136	Symbol	strcmp		336781						
ANR	337137	Symbol	fopen		336781						
ANR	337138	Symbol	& expected		336781						
ANR	337139	Symbol	NULL		336781						
ANR	337140	Symbol	udpSend		336781						
ANR	337141	Symbol	expected		336781						
ANR	337142	Symbol	fp		336781						
ANR	337143	Symbol	stderr		336781						
ANR	337144	Symbol	testdata		336781						
ANR	337145	Symbol	strlen		336781						
ANR	337146	Symbol	buf		336781						
ANR	337147	Symbol	& lenLn		336781						
ANR	337148	Symbol	* strlen		336781						
ANR	337149	Symbol	* testdata		336781						
ANR	337150	Symbol	lenLn		336781						
ANR	337151	Symbol	inputMode		336781						
ANR	337152	Symbol	pszFileName		336781						
ANR	337153	Symbol	& testdata		336781						
ANR	337154	Symbol	* expected		336781						
ANR	337155	Symbol	feof		336781						
ANR	337156	Symbol	inputUDP		336781						
ANR	337157	Symbol	tcpSend		336781						
ANR	337158	Symbol	fd		336781						
ANR	337159	Function	doTests	489:0:12615:13738							
ANR	337160	FunctionDef	"doTests (int fd , char * files)"		337159	0					
ANR	337161	CompoundStatement		491:0:12648:13738	337159	0					
ANR	337162	IdentifierDeclStatement	int ret ;	492:1:12651:12658	337159	0	True				
ANR	337163	IdentifierDecl	ret		337159	0					
ANR	337164	IdentifierDeclType	int		337159	0					
ANR	337165	Identifier	ret		337159	1					
ANR	337166	IdentifierDeclStatement	char * testFile ;	493:1:12661:12675	337159	1	True				
ANR	337167	IdentifierDecl	* testFile		337159	0					
ANR	337168	IdentifierDeclType	char *		337159	0					
ANR	337169	Identifier	testFile		337159	1					
ANR	337170	IdentifierDeclStatement	glob_t testFiles ;	494:1:12678:12694	337159	2	True				
ANR	337171	IdentifierDecl	testFiles		337159	0					
ANR	337172	IdentifierDeclType	glob_t		337159	0					
ANR	337173	Identifier	testFiles		337159	1					
ANR	337174	IdentifierDeclStatement	size_t i = 0 ;	495:1:12697:12709	337159	3	True				
ANR	337175	IdentifierDecl	i = 0		337159	0					
ANR	337176	IdentifierDeclType	size_t		337159	0					
ANR	337177	Identifier	i		337159	1					
ANR	337178	AssignmentExpression	i = 0		337159	2		=			
ANR	337179	Identifier	i		337159	0					
ANR	337180	PrimaryExpression	0		337159	1					
ANR	337181	IdentifierDeclStatement	struct stat fileInfo ;	496:1:12712:12732	337159	4	True				
ANR	337182	IdentifierDecl	fileInfo		337159	0					
ANR	337183	IdentifierDeclType	struct stat		337159	0					
ANR	337184	Identifier	fileInfo		337159	1					
ANR	337185	ExpressionStatement	"glob ( files , GLOB_MARK , NULL , & testFiles )"	498:1:12736:12776	337159	5	True				
ANR	337186	CallExpression	"glob ( files , GLOB_MARK , NULL , & testFiles )"		337159	0					
ANR	337187	Callee	glob		337159	0					
ANR	337188	Identifier	glob		337159	0					
ANR	337189	ArgumentList	files		337159	1					
ANR	337190	Argument	files		337159	0					
ANR	337191	Identifier	files		337159	0					
ANR	337192	Argument	GLOB_MARK		337159	1					
ANR	337193	Identifier	GLOB_MARK		337159	0					
ANR	337194	Argument	NULL		337159	2					
ANR	337195	Identifier	NULL		337159	0					
ANR	337196	Argument	& testFiles		337159	3					
ANR	337197	UnaryOperationExpression	& testFiles		337159	0					
ANR	337198	UnaryOperator	&		337159	0					
ANR	337199	Identifier	testFiles		337159	1					
ANR	337200	ForStatement	for ( i = 0 ; i < testFiles . gl_pathc ; i ++ )		337159	6					
ANR	337201	ForInit	i = 0 ;	500:5:12784:12789	337159	0	True				
ANR	337202	AssignmentExpression	i = 0		337159	0		=			
ANR	337203	Identifier	i		337159	0					
ANR	337204	PrimaryExpression	0		337159	1					
ANR	337205	Condition	i < testFiles . gl_pathc	500:12:12791:12812	337159	1	True				
ANR	337206	RelationalExpression	i < testFiles . gl_pathc		337159	0		<			
ANR	337207	Identifier	i		337159	0					
ANR	337208	MemberAccess	testFiles . gl_pathc		337159	1					
ANR	337209	Identifier	testFiles		337159	0					
ANR	337210	Identifier	gl_pathc		337159	1					
ANR	337211	PostIncDecOperationExpression	i ++	500:36:12815:12817	337159	2	True				
ANR	337212	Identifier	i		337159	0					
ANR	337213	IncDec	++		337159	1					
ANR	337214	CompoundStatement		10:41:171:171	337159	3					
ANR	337215	ExpressionStatement	testFile = testFiles . gl_pathv [ i ]	501:2:12824:12856	337159	0	True				
ANR	337216	AssignmentExpression	testFile = testFiles . gl_pathv [ i ]		337159	0		=			
ANR	337217	Identifier	testFile		337159	0					
ANR	337218	ArrayIndexing	testFiles . gl_pathv [ i ]		337159	1					
ANR	337219	MemberAccess	testFiles . gl_pathv		337159	0					
ANR	337220	Identifier	testFiles		337159	0					
ANR	337221	Identifier	gl_pathv		337159	1					
ANR	337222	Identifier	i		337159	1					
ANR	337223	IfStatement	"if ( stat ( ( char * ) testFile , & fileInfo ) != 0 )"		337159	1					
ANR	337224	Condition	"stat ( ( char * ) testFile , & fileInfo ) != 0"	503:5:12864:12901	337159	0	True				
ANR	337225	EqualityExpression	"stat ( ( char * ) testFile , & fileInfo ) != 0"		337159	0		!=			
ANR	337226	CallExpression	"stat ( ( char * ) testFile , & fileInfo )"		337159	0					
ANR	337227	Callee	stat		337159	0					
ANR	337228	Identifier	stat		337159	0					
ANR	337229	ArgumentList	( char * ) testFile		337159	1					
ANR	337230	Argument	( char * ) testFile		337159	0					
ANR	337231	CastExpression	( char * ) testFile		337159	0					
ANR	337232	CastTarget	char *		337159	0					
ANR	337233	Identifier	testFile		337159	1					
ANR	337234	Argument	& fileInfo		337159	1					
ANR	337235	UnaryOperationExpression	& fileInfo		337159	0					
ANR	337236	UnaryOperator	&		337159	0					
ANR	337237	Identifier	fileInfo		337159	1					
ANR	337238	PrimaryExpression	0		337159	1					
ANR	337239	ContinueStatement	continue ;	504:3:12908:12916	337159	1	True				
ANR	337240	IfStatement	if ( S_ISREG ( fileInfo . st_mode ) )		337159	2					
ANR	337241	Condition	S_ISREG ( fileInfo . st_mode )	507:5:13065:13089	337159	0	True				
ANR	337242	CallExpression	S_ISREG ( fileInfo . st_mode )		337159	0					
ANR	337243	Callee	S_ISREG		337159	0					
ANR	337244	Identifier	S_ISREG		337159	0					
ANR	337245	ArgumentList	fileInfo . st_mode		337159	1					
ANR	337246	Argument	fileInfo . st_mode		337159	0					
ANR	337247	MemberAccess	fileInfo . st_mode		337159	0					
ANR	337248	Identifier	fileInfo		337159	0					
ANR	337249	Identifier	st_mode		337159	1					
ANR	337250	CompoundStatement		17:32:443:443	337159	1					
ANR	337251	IfStatement	if ( verbose )		337159	0					
ANR	337252	Condition	verbose	508:6:13118:13124	337159	0	True				
ANR	337253	Identifier	verbose		337159	0					
ANR	337254	ExpressionStatement	"fprintf ( stderr , ""processing test case '%s' ... "" , testFile )"	508:15:13127:13186	337159	1	True				
ANR	337255	CallExpression	"fprintf ( stderr , ""processing test case '%s' ... "" , testFile )"		337159	0					
ANR	337256	Callee	fprintf		337159	0					
ANR	337257	Identifier	fprintf		337159	0					
ANR	337258	ArgumentList	stderr		337159	1					
ANR	337259	Argument	stderr		337159	0					
ANR	337260	Identifier	stderr		337159	0					
ANR	337261	Argument	"""processing test case '%s' ... """		337159	1					
ANR	337262	PrimaryExpression	"""processing test case '%s' ... """		337159	0					
ANR	337263	Argument	testFile		337159	2					
ANR	337264	Identifier	testFile		337159	0					
ANR	337265	ExpressionStatement	"ret = processTestFile ( fd , testFile )"	509:3:13191:13226	337159	1	True				
ANR	337266	AssignmentExpression	"ret = processTestFile ( fd , testFile )"		337159	0		=			
ANR	337267	Identifier	ret		337159	0					
ANR	337268	CallExpression	"processTestFile ( fd , testFile )"		337159	1					
ANR	337269	Callee	processTestFile		337159	0					
ANR	337270	Identifier	processTestFile		337159	0					
ANR	337271	ArgumentList	fd		337159	1					
ANR	337272	Argument	fd		337159	0					
ANR	337273	Identifier	fd		337159	0					
ANR	337274	Argument	testFile		337159	1					
ANR	337275	Identifier	testFile		337159	0					
ANR	337276	IfStatement	if ( ret == 0 )		337159	2					
ANR	337277	Condition	ret == 0	510:6:13234:13241	337159	0	True				
ANR	337278	EqualityExpression	ret == 0		337159	0		==			
ANR	337279	Identifier	ret		337159	0					
ANR	337280	PrimaryExpression	0		337159	1					
ANR	337281	CompoundStatement		20:16:595:595	337159	1					
ANR	337282	IfStatement	if ( verbose )		337159	0					
ANR	337283	Condition	verbose	511:7:13253:13259	337159	0	True				
ANR	337284	Identifier	verbose		337159	0					
ANR	337285	ExpressionStatement	"fprintf ( stderr , ""successfully completed\\n"" )"	511:16:13262:13305	337159	1	True				
ANR	337286	CallExpression	"fprintf ( stderr , ""successfully completed\\n"" )"		337159	0					
ANR	337287	Callee	fprintf		337159	0					
ANR	337288	Identifier	fprintf		337159	0					
ANR	337289	ArgumentList	stderr		337159	1					
ANR	337290	Argument	stderr		337159	0					
ANR	337291	Identifier	stderr		337159	0					
ANR	337292	Argument	"""successfully completed\\n"""		337159	1					
ANR	337293	PrimaryExpression	"""successfully completed\\n"""		337159	0					
ANR	337294	ElseStatement	else		337159	0					
ANR	337295	CompoundStatement		22:10:668:668	337159	0					
ANR	337296	IfStatement	if ( ! verbose )		337159	0					
ANR	337297	Condition	! verbose	513:7:13326:13333	337159	0	True				
ANR	337298	UnaryOperationExpression	! verbose		337159	0					
ANR	337299	UnaryOperator	!		337159	0					
ANR	337300	Identifier	verbose		337159	1					
ANR	337301	ExpressionStatement	"fprintf ( stderr , ""test '%s' "" , testFile )"	514:5:13341:13380	337159	1	True				
ANR	337302	CallExpression	"fprintf ( stderr , ""test '%s' "" , testFile )"		337159	0					
ANR	337303	Callee	fprintf		337159	0					
ANR	337304	Identifier	fprintf		337159	0					
ANR	337305	ArgumentList	stderr		337159	1					
ANR	337306	Argument	stderr		337159	0					
ANR	337307	Identifier	stderr		337159	0					
ANR	337308	Argument	"""test '%s' """		337159	1					
ANR	337309	PrimaryExpression	"""test '%s' """		337159	0					
ANR	337310	Argument	testFile		337159	2					
ANR	337311	Identifier	testFile		337159	0					
ANR	337312	ExpressionStatement	"fprintf ( stderr , ""failed!\\n"" )"	515:4:13386:13414	337159	1	True				
ANR	337313	CallExpression	"fprintf ( stderr , ""failed!\\n"" )"		337159	0					
ANR	337314	Callee	fprintf		337159	0					
ANR	337315	Identifier	fprintf		337159	0					
ANR	337316	ArgumentList	stderr		337159	1					
ANR	337317	Argument	stderr		337159	0					
ANR	337318	Identifier	stderr		337159	0					
ANR	337319	Argument	"""failed!\\n"""		337159	1					
ANR	337320	PrimaryExpression	"""failed!\\n"""		337159	0					
ANR	337321	ExpressionStatement	globfree ( & testFiles )	519:1:13429:13449	337159	7	True				
ANR	337322	CallExpression	globfree ( & testFiles )		337159	0					
ANR	337323	Callee	globfree		337159	0					
ANR	337324	Identifier	globfree		337159	0					
ANR	337325	ArgumentList	& testFiles		337159	1					
ANR	337326	Argument	& testFiles		337159	0					
ANR	337327	UnaryOperationExpression	& testFiles		337159	0					
ANR	337328	UnaryOperator	&		337159	0					
ANR	337329	Identifier	testFiles		337159	1					
ANR	337330	IfStatement	if ( iTests == 0 )		337159	8					
ANR	337331	Condition	iTests == 0	521:4:13456:13466	337159	0	True				
ANR	337332	EqualityExpression	iTests == 0		337159	0		==			
ANR	337333	Identifier	iTests		337159	0					
ANR	337334	PrimaryExpression	0		337159	1					
ANR	337335	CompoundStatement		31:17:820:820	337159	1					
ANR	337336	ExpressionStatement	"fprintf ( stderr , ""Error: no test cases found, no tests executed.\\n"" )"	522:2:13473:13540	337159	0	True				
ANR	337337	CallExpression	"fprintf ( stderr , ""Error: no test cases found, no tests executed.\\n"" )"		337159	0					
ANR	337338	Callee	fprintf		337159	0					
ANR	337339	Identifier	fprintf		337159	0					
ANR	337340	ArgumentList	stderr		337159	1					
ANR	337341	Argument	stderr		337159	0					
ANR	337342	Identifier	stderr		337159	0					
ANR	337343	Argument	"""Error: no test cases found, no tests executed.\\n"""		337159	1					
ANR	337344	PrimaryExpression	"""Error: no test cases found, no tests executed.\\n"""		337159	0					
ANR	337345	ExpressionStatement	iFailed = 1	523:2:13544:13555	337159	1	True				
ANR	337346	AssignmentExpression	iFailed = 1		337159	0		=			
ANR	337347	Identifier	iFailed		337159	0					
ANR	337348	PrimaryExpression	1		337159	1					
ANR	337349	ElseStatement	else		337159	0					
ANR	337350	CompoundStatement		34:8:916:916	337159	0					
ANR	337351	ExpressionStatement	"fprintf ( stderr , ""Number of tests run: %3d, number of failures: %d, test: %s/%s\\n"" , iTests , iFailed , testSuite , inputMode2Str ( inputMode ) )"	525:2:13569:13714	337159	0	True				
ANR	337352	CallExpression	"fprintf ( stderr , ""Number of tests run: %3d, number of failures: %d, test: %s/%s\\n"" , iTests , iFailed , testSuite , inputMode2Str ( inputMode ) )"		337159	0					
ANR	337353	Callee	fprintf		337159	0					
ANR	337354	Identifier	fprintf		337159	0					
ANR	337355	ArgumentList	stderr		337159	1					
ANR	337356	Argument	stderr		337159	0					
ANR	337357	Identifier	stderr		337159	0					
ANR	337358	Argument	"""Number of tests run: %3d, number of failures: %d, test: %s/%s\\n"""		337159	1					
ANR	337359	PrimaryExpression	"""Number of tests run: %3d, number of failures: %d, test: %s/%s\\n"""		337159	0					
ANR	337360	Argument	iTests		337159	2					
ANR	337361	Identifier	iTests		337159	0					
ANR	337362	Argument	iFailed		337159	3					
ANR	337363	Identifier	iFailed		337159	0					
ANR	337364	Argument	testSuite		337159	4					
ANR	337365	Identifier	testSuite		337159	0					
ANR	337366	Argument	inputMode2Str ( inputMode )		337159	5					
ANR	337367	CallExpression	inputMode2Str ( inputMode )		337159	0					
ANR	337368	Callee	inputMode2Str		337159	0					
ANR	337369	Identifier	inputMode2Str		337159	0					
ANR	337370	ArgumentList	inputMode		337159	1					
ANR	337371	Argument	inputMode		337159	0					
ANR	337372	Identifier	inputMode		337159	0					
ANR	337373	ReturnStatement	return ( iFailed ) ;	529:1:13721:13736	337159	9	True				
ANR	337374	Identifier	iFailed		337159	0					
ANR	337375	ReturnType	int		337159	1					
ANR	337376	Identifier	doTests		337159	2					
ANR	337377	ParameterList	"int fd , char * files"		337159	3					
ANR	337378	Parameter	int fd	490:8:12627:12632	337159	0	True				
ANR	337379	ParameterType	int		337159	0					
ANR	337380	Identifier	fd		337159	1					
ANR	337381	Parameter	char * files	490:16:12635:12645	337159	1	True				
ANR	337382	ParameterType	char *		337159	0					
ANR	337383	Identifier	files		337159	1					
ANR	337384	CFGEntryNode	ENTRY		337159		True				
ANR	337385	CFGExitNode	EXIT		337159		True				
ANR	337386	Symbol	testFiles . gl_pathv		337159						
ANR	337387	Symbol	iTests		337159						
ANR	337388	Symbol	testFiles		337159						
ANR	337389	Symbol	testSuite		337159						
ANR	337390	Symbol	processTestFile		337159						
ANR	337391	Symbol	& fileInfo		337159						
ANR	337392	Symbol	ret		337159						
ANR	337393	Symbol	stat		337159						
ANR	337394	Symbol	inputMode2Str		337159						
ANR	337395	Symbol	NULL		337159						
ANR	337396	Symbol	i		337159						
ANR	337397	Symbol	fileInfo		337159						
ANR	337398	Symbol	GLOB_MARK		337159						
ANR	337399	Symbol	stderr		337159						
ANR	337400	Symbol	* testFiles . gl_pathv		337159						
ANR	337401	Symbol	& testFiles		337159						
ANR	337402	Symbol	verbose		337159						
ANR	337403	Symbol	iFailed		337159						
ANR	337404	Symbol	testFile		337159						
ANR	337405	Symbol	* i		337159						
ANR	337406	Symbol	S_ISREG		337159						
ANR	337407	Symbol	testFiles . gl_pathc		337159						
ANR	337408	Symbol	fileInfo . st_mode		337159						
ANR	337409	Symbol	inputMode		337159						
ANR	337410	Symbol	* testFiles		337159						
ANR	337411	Symbol	files		337159						
ANR	337412	Symbol	fd		337159						
ANR	337413	Function	doAtExit	543:0:13968:14230							
ANR	337414	FunctionDef	doAtExit ()		337413	0					
ANR	337415	CompoundStatement		544:0:13988:14230	337413	0					
ANR	337416	IdentifierDeclStatement	int status ;	545:1:13991:14001	337413	0	True				
ANR	337417	IdentifierDecl	status		337413	0					
ANR	337418	IdentifierDeclType	int		337413	0					
ANR	337419	Identifier	status		337413	1					
ANR	337420	ExpressionStatement	"signal ( SIGCHLD , SIG_IGN )"	548:1:14038:14062	337413	1	True				
ANR	337421	CallExpression	"signal ( SIGCHLD , SIG_IGN )"		337413	0					
ANR	337422	Callee	signal		337413	0					
ANR	337423	Identifier	signal		337413	0					
ANR	337424	ArgumentList	SIGCHLD		337413	1					
ANR	337425	Argument	SIGCHLD		337413	0					
ANR	337426	Identifier	SIGCHLD		337413	0					
ANR	337427	Argument	SIG_IGN		337413	1					
ANR	337428	Identifier	SIG_IGN		337413	0					
ANR	337429	IfStatement	if ( rsyslogdPid != 0 )		337413	2					
ANR	337430	Condition	rsyslogdPid != 0	550:4:14069:14084	337413	0	True				
ANR	337431	EqualityExpression	rsyslogdPid != 0		337413	0		!=			
ANR	337432	Identifier	rsyslogdPid		337413	0					
ANR	337433	PrimaryExpression	0		337413	1					
ANR	337434	CompoundStatement		7:22:98:98	337413	1					
ANR	337435	ExpressionStatement	"kill ( rsyslogdPid , SIGTERM )"	551:2:14091:14117	337413	0	True				
ANR	337436	CallExpression	"kill ( rsyslogdPid , SIGTERM )"		337413	0					
ANR	337437	Callee	kill		337413	0					
ANR	337438	Identifier	kill		337413	0					
ANR	337439	ArgumentList	rsyslogdPid		337413	1					
ANR	337440	Argument	rsyslogdPid		337413	0					
ANR	337441	Identifier	rsyslogdPid		337413	0					
ANR	337442	Argument	SIGTERM		337413	1					
ANR	337443	Identifier	SIGTERM		337413	0					
ANR	337444	ExpressionStatement	"waitpid ( rsyslogdPid , & status , 0 )"	552:2:14121:14153	337413	1	True				
ANR	337445	CallExpression	"waitpid ( rsyslogdPid , & status , 0 )"		337413	0					
ANR	337446	Callee	waitpid		337413	0					
ANR	337447	Identifier	waitpid		337413	0					
ANR	337448	ArgumentList	rsyslogdPid		337413	1					
ANR	337449	Argument	rsyslogdPid		337413	0					
ANR	337450	Identifier	rsyslogdPid		337413	0					
ANR	337451	Argument	& status		337413	1					
ANR	337452	UnaryOperationExpression	& status		337413	0					
ANR	337453	UnaryOperator	&		337413	0					
ANR	337454	Identifier	status		337413	1					
ANR	337455	Argument	0		337413	2					
ANR	337456	PrimaryExpression	0		337413	0					
ANR	337457	ExpressionStatement	unlink ( NETTEST_INPUT_CONF_FILE )	555:1:14197:14228	337413	3	True				
ANR	337458	CallExpression	unlink ( NETTEST_INPUT_CONF_FILE )		337413	0					
ANR	337459	Callee	unlink		337413	0					
ANR	337460	Identifier	unlink		337413	0					
ANR	337461	ArgumentList	NETTEST_INPUT_CONF_FILE		337413	1					
ANR	337462	Argument	NETTEST_INPUT_CONF_FILE		337413	0					
ANR	337463	Identifier	NETTEST_INPUT_CONF_FILE		337413	0					
ANR	337464	ReturnType	void		337413	1					
ANR	337465	Identifier	doAtExit		337413	2					
ANR	337466	ParameterList			337413	3					
ANR	337467	CFGEntryNode	ENTRY		337413		True				
ANR	337468	CFGExitNode	EXIT		337413		True				
ANR	337469	Symbol	NETTEST_INPUT_CONF_FILE		337413						
ANR	337470	Symbol	SIGCHLD		337413						
ANR	337471	Symbol	SIG_IGN		337413						
ANR	337472	Symbol	rsyslogdPid		337413						
ANR	337473	Symbol	SIGTERM		337413						
ANR	337474	Symbol	& status		337413						
ANR	337475	Symbol	status		337413						
ANR	337476	Function	getHostname	560:0:14293:14553							
ANR	337477	FunctionDef	getHostname ()		337476	0					
ANR	337478	CompoundStatement		562:0:14323:14553	337476	0					
ANR	337479	IdentifierDeclStatement	size_t dummy ;	563:1:14326:14338	337476	0	True				
ANR	337480	IdentifierDecl	dummy		337476	0					
ANR	337481	IdentifierDeclType	size_t		337476	0					
ANR	337482	Identifier	dummy		337476	1					
ANR	337483	IdentifierDeclStatement	FILE * fp ;	564:1:14341:14349	337476	1	True				
ANR	337484	IdentifierDecl	* fp		337476	0					
ANR	337485	IdentifierDeclType	FILE *		337476	0					
ANR	337486	Identifier	fp		337476	1					
ANR	337487	IfStatement	"if ( ( fp = fopen ( ""HOSTNAME"" , ""r"" ) ) == NULL )"		337476	2					
ANR	337488	Condition	"( fp = fopen ( ""HOSTNAME"" , ""r"" ) ) == NULL"	565:4:14355:14391	337476	0	True				
ANR	337489	EqualityExpression	"( fp = fopen ( ""HOSTNAME"" , ""r"" ) ) == NULL"		337476	0		==			
ANR	337490	AssignmentExpression	"fp = fopen ( ""HOSTNAME"" , ""r"" )"		337476	0		=			
ANR	337491	Identifier	fp		337476	0					
ANR	337492	CallExpression	"fopen ( ""HOSTNAME"" , ""r"" )"		337476	1					
ANR	337493	Callee	fopen		337476	0					
ANR	337494	Identifier	fopen		337476	0					
ANR	337495	ArgumentList	"""HOSTNAME"""		337476	1					
ANR	337496	Argument	"""HOSTNAME"""		337476	0					
ANR	337497	PrimaryExpression	"""HOSTNAME"""		337476	0					
ANR	337498	Argument	"""r"""		337476	1					
ANR	337499	PrimaryExpression	"""r"""		337476	0					
ANR	337500	Identifier	NULL		337476	1					
ANR	337501	CompoundStatement		4:43:70:70	337476	1					
ANR	337502	ExpressionStatement	"perror ( ""HOSTNAME"" )"	566:2:14398:14416	337476	0	True				
ANR	337503	CallExpression	"perror ( ""HOSTNAME"" )"		337476	0					
ANR	337504	Callee	perror		337476	0					
ANR	337505	Identifier	perror		337476	0					
ANR	337506	ArgumentList	"""HOSTNAME"""		337476	1					
ANR	337507	Argument	"""HOSTNAME"""		337476	0					
ANR	337508	PrimaryExpression	"""HOSTNAME"""		337476	0					
ANR	337509	ExpressionStatement	"fprintf ( stderr , ""error opening HOSTNAME configuration file\\n"" )"	567:2:14420:14482	337476	1	True				
ANR	337510	CallExpression	"fprintf ( stderr , ""error opening HOSTNAME configuration file\\n"" )"		337476	0					
ANR	337511	Callee	fprintf		337476	0					
ANR	337512	Identifier	fprintf		337476	0					
ANR	337513	ArgumentList	stderr		337476	1					
ANR	337514	Argument	stderr		337476	0					
ANR	337515	Identifier	stderr		337476	0					
ANR	337516	Argument	"""error opening HOSTNAME configuration file\\n"""		337476	1					
ANR	337517	PrimaryExpression	"""error opening HOSTNAME configuration file\\n"""		337476	0					
ANR	337518	ExpressionStatement	exit ( 1 )	568:2:14486:14493	337476	2	True				
ANR	337519	CallExpression	exit ( 1 )		337476	0					
ANR	337520	Callee	exit		337476	0					
ANR	337521	Identifier	exit		337476	0					
ANR	337522	ArgumentList	1		337476	1					
ANR	337523	Argument	1		337476	0					
ANR	337524	PrimaryExpression	1		337476	0					
ANR	337525	ExpressionStatement	"getline_abort ( & ourHostName , & dummy , fp )"	570:1:14499:14538	337476	3	True				
ANR	337526	CallExpression	"getline_abort ( & ourHostName , & dummy , fp )"		337476	0					
ANR	337527	Callee	getline_abort		337476	0					
ANR	337528	Identifier	getline_abort		337476	0					
ANR	337529	ArgumentList	& ourHostName		337476	1					
ANR	337530	Argument	& ourHostName		337476	0					
ANR	337531	UnaryOperationExpression	& ourHostName		337476	0					
ANR	337532	UnaryOperator	&		337476	0					
ANR	337533	Identifier	ourHostName		337476	1					
ANR	337534	Argument	& dummy		337476	1					
ANR	337535	UnaryOperationExpression	& dummy		337476	0					
ANR	337536	UnaryOperator	&		337476	0					
ANR	337537	Identifier	dummy		337476	1					
ANR	337538	Argument	fp		337476	2					
ANR	337539	Identifier	fp		337476	0					
ANR	337540	ExpressionStatement	fclose ( fp )	571:1:14541:14551	337476	4	True				
ANR	337541	CallExpression	fclose ( fp )		337476	0					
ANR	337542	Callee	fclose		337476	0					
ANR	337543	Identifier	fclose		337476	0					
ANR	337544	ArgumentList	fp		337476	1					
ANR	337545	Argument	fp		337476	0					
ANR	337546	Identifier	fp		337476	0					
ANR	337547	ReturnType	static void		337476	1					
ANR	337548	Identifier	getHostname		337476	2					
ANR	337549	ParameterList			337476	3					
ANR	337550	CFGEntryNode	ENTRY		337476		True				
ANR	337551	CFGExitNode	EXIT		337476		True				
ANR	337552	Symbol	dummy		337476						
ANR	337553	Symbol	fopen		337476						
ANR	337554	Symbol	& dummy		337476						
ANR	337555	Symbol	NULL		337476						
ANR	337556	Symbol	fp		337476						
ANR	337557	Symbol	stderr		337476						
ANR	337558	Symbol	& ourHostName		337476						
ANR	337559	Function	main	580:0:14753:17074							
ANR	337560	FunctionDef	"main (int argc , char * argv [ ] , char * envp [ ])"		337559	0					
ANR	337561	CompoundStatement		581:0:14800:17074	337559	0					
ANR	337562	IdentifierDeclStatement	int fd ;	582:1:14803:14809	337559	0	True				
ANR	337563	IdentifierDecl	fd		337559	0					
ANR	337564	IdentifierDeclType	int		337559	0					
ANR	337565	Identifier	fd		337559	1					
ANR	337566	IdentifierDeclStatement	int opt ;	583:1:14812:14819	337559	1	True				
ANR	337567	IdentifierDecl	opt		337559	0					
ANR	337568	IdentifierDeclType	int		337559	0					
ANR	337569	Identifier	opt		337559	1					
ANR	337570	IdentifierDeclStatement	int ret = 0 ;	584:1:14822:14833	337559	2	True				
ANR	337571	IdentifierDecl	ret = 0		337559	0					
ANR	337572	IdentifierDeclType	int		337559	0					
ANR	337573	Identifier	ret		337559	1					
ANR	337574	AssignmentExpression	ret = 0		337559	2		=			
ANR	337575	Identifier	ret		337559	0					
ANR	337576	PrimaryExpression	0		337559	1					
ANR	337577	IdentifierDeclStatement	FILE * fp ;	585:1:14836:14844	337559	3	True				
ANR	337578	IdentifierDecl	* fp		337559	0					
ANR	337579	IdentifierDeclType	FILE *		337559	0					
ANR	337580	Identifier	fp		337559	1					
ANR	337581	IdentifierDeclStatement	char buf [ 4096 ] ;	586:1:14847:14861	337559	4	True				
ANR	337582	IdentifierDecl	buf [ 4096 ]		337559	0					
ANR	337583	IdentifierDeclType	char [ 4096 ]		337559	0					
ANR	337584	Identifier	buf		337559	1					
ANR	337585	PrimaryExpression	4096		337559	2					
ANR	337586	IdentifierDeclStatement	char testcases [ 4096 ] ;	587:1:14864:14884	337559	5	True				
ANR	337587	IdentifierDecl	testcases [ 4096 ]		337559	0					
ANR	337588	IdentifierDeclType	char [ 4096 ]		337559	0					
ANR	337589	Identifier	testcases		337559	1					
ANR	337590	PrimaryExpression	4096		337559	2					
ANR	337591	ExpressionStatement	ourEnvp = envp	589:1:14888:14902	337559	6	True				
ANR	337592	AssignmentExpression	ourEnvp = envp		337559	0		=			
ANR	337593	Identifier	ourEnvp		337559	0					
ANR	337594	Identifier	envp		337559	1					
ANR	337595	ExpressionStatement	getHostname ( )	590:1:14905:14918	337559	7	True				
ANR	337596	CallExpression	getHostname ( )		337559	0					
ANR	337597	Callee	getHostname		337559	0					
ANR	337598	Identifier	getHostname		337559	0					
ANR	337599	ArgumentList			337559	1					
ANR	337600	WhileStatement	"while ( ( opt = getopt ( argc , argv , ""4c:i:p:t:v"" ) ) != EOF )"		337559	8					
ANR	337601	Condition	"( opt = getopt ( argc , argv , ""4c:i:p:t:v"" ) ) != EOF"	592:7:14928:14974	337559	0	True				
ANR	337602	EqualityExpression	"( opt = getopt ( argc , argv , ""4c:i:p:t:v"" ) ) != EOF"		337559	0		!=			
ANR	337603	AssignmentExpression	"opt = getopt ( argc , argv , ""4c:i:p:t:v"" )"		337559	0		=			
ANR	337604	Identifier	opt		337559	0					
ANR	337605	CallExpression	"getopt ( argc , argv , ""4c:i:p:t:v"" )"		337559	1					
ANR	337606	Callee	getopt		337559	0					
ANR	337607	Identifier	getopt		337559	0					
ANR	337608	ArgumentList	argc		337559	1					
ANR	337609	Argument	argc		337559	0					
ANR	337610	Identifier	argc		337559	0					
ANR	337611	Argument	argv		337559	1					
ANR	337612	Identifier	argv		337559	0					
ANR	337613	Argument	"""4c:i:p:t:v"""		337559	2					
ANR	337614	PrimaryExpression	"""4c:i:p:t:v"""		337559	0					
ANR	337615	Identifier	EOF		337559	1					
ANR	337616	CompoundStatement		12:56:176:176	337559	1					
ANR	337617	SwitchStatement	switch ( ( char ) opt )		337559	0					
ANR	337618	Condition	( char ) opt	593:9:14988:14996	337559	0	True				
ANR	337619	CastExpression	( char ) opt		337559	0					
ANR	337620	CastTarget	char		337559	0					
ANR	337621	Identifier	opt		337559	1					
ANR	337622	CompoundStatement		13:20:198:198	337559	1					
ANR	337623	Label	case '4' :	594:16:15017:15025	337559	0	True				
ANR	337624	ExpressionStatement	IPv4Only = 1	595:3:15030:15042	337559	1	True				
ANR	337625	AssignmentExpression	IPv4Only = 1		337559	0		=			
ANR	337626	Identifier	IPv4Only		337559	0					
ANR	337627	PrimaryExpression	1		337559	1					
ANR	337628	BreakStatement	break ;	596:3:15047:15052	337559	2	True				
ANR	337629	Label	case 'c' :	597:16:15070:15078	337559	3	True				
ANR	337630	ExpressionStatement	pszCustomConf = optarg	598:3:15083:15105	337559	4	True				
ANR	337631	AssignmentExpression	pszCustomConf = optarg		337559	0		=			
ANR	337632	Identifier	pszCustomConf		337559	0					
ANR	337633	Identifier	optarg		337559	1					
ANR	337634	BreakStatement	break ;	599:3:15110:15115	337559	5	True				
ANR	337635	Label	case 'i' :	600:16:15133:15141	337559	6	True				
ANR	337636	IfStatement	"if ( ! strcmp ( optarg , ""udp"" ) )"		337559	7					
ANR	337637	Condition	"! strcmp ( optarg , ""udp"" )"	601:6:15149:15170	337559	0	True				
ANR	337638	UnaryOperationExpression	"! strcmp ( optarg , ""udp"" )"		337559	0					
ANR	337639	UnaryOperator	!		337559	0					
ANR	337640	CallExpression	"strcmp ( optarg , ""udp"" )"		337559	1					
ANR	337641	Callee	strcmp		337559	0					
ANR	337642	Identifier	strcmp		337559	0					
ANR	337643	ArgumentList	optarg		337559	1					
ANR	337644	Argument	optarg		337559	0					
ANR	337645	Identifier	optarg		337559	0					
ANR	337646	Argument	"""udp"""		337559	1					
ANR	337647	PrimaryExpression	"""udp"""		337559	0					
ANR	337648	ExpressionStatement	inputMode = inputUDP	602:4:15177:15197	337559	1	True				
ANR	337649	AssignmentExpression	inputMode = inputUDP		337559	0		=			
ANR	337650	Identifier	inputMode		337559	0					
ANR	337651	Identifier	inputUDP		337559	1					
ANR	337652	ElseStatement	else		337559	0					
ANR	337653	IfStatement	"if ( ! strcmp ( optarg , ""tcp"" ) )"		337559	0					
ANR	337654	Condition	"! strcmp ( optarg , ""tcp"" )"	603:11:15210:15231	337559	0	True				
ANR	337655	UnaryOperationExpression	"! strcmp ( optarg , ""tcp"" )"		337559	0					
ANR	337656	UnaryOperator	!		337559	0					
ANR	337657	CallExpression	"strcmp ( optarg , ""tcp"" )"		337559	1					
ANR	337658	Callee	strcmp		337559	0					
ANR	337659	Identifier	strcmp		337559	0					
ANR	337660	ArgumentList	optarg		337559	1					
ANR	337661	Argument	optarg		337559	0					
ANR	337662	Identifier	optarg		337559	0					
ANR	337663	Argument	"""tcp"""		337559	1					
ANR	337664	PrimaryExpression	"""tcp"""		337559	0					
ANR	337665	ExpressionStatement	inputMode = inputTCP	604:4:15238:15258	337559	1	True				
ANR	337666	AssignmentExpression	inputMode = inputTCP		337559	0		=			
ANR	337667	Identifier	inputMode		337559	0					
ANR	337668	Identifier	inputTCP		337559	1					
ANR	337669	ElseStatement	else		337559	0					
ANR	337670	CompoundStatement		25:8:467:467	337559	0					
ANR	337671	ExpressionStatement	"fprintf ( stderr , ""error: unsupported input mode '%s'\\n"" , optarg )"	606:4:15274:15337	337559	0	True				
ANR	337672	CallExpression	"fprintf ( stderr , ""error: unsupported input mode '%s'\\n"" , optarg )"		337559	0					
ANR	337673	Callee	fprintf		337559	0					
ANR	337674	Identifier	fprintf		337559	0					
ANR	337675	ArgumentList	stderr		337559	1					
ANR	337676	Argument	stderr		337559	0					
ANR	337677	Identifier	stderr		337559	0					
ANR	337678	Argument	"""error: unsupported input mode '%s'\\n"""		337559	1					
ANR	337679	PrimaryExpression	"""error: unsupported input mode '%s'\\n"""		337559	0					
ANR	337680	Argument	optarg		337559	2					
ANR	337681	Identifier	optarg		337559	0					
ANR	337682	ExpressionStatement	exit ( 1 )	607:4:15343:15350	337559	1	True				
ANR	337683	CallExpression	exit ( 1 )		337559	0					
ANR	337684	Callee	exit		337559	0					
ANR	337685	Identifier	exit		337559	0					
ANR	337686	ArgumentList	1		337559	1					
ANR	337687	Argument	1		337559	0					
ANR	337688	PrimaryExpression	1		337559	0					
ANR	337689	BreakStatement	break ;	609:3:15360:15365	337559	8	True				
ANR	337690	Label	case 'p' :	610:16:15383:15391	337559	9	True				
ANR	337691	ExpressionStatement	iPort = atoi ( optarg )	611:3:15396:15416	337559	10	True				
ANR	337692	AssignmentExpression	iPort = atoi ( optarg )		337559	0		=			
ANR	337693	Identifier	iPort		337559	0					
ANR	337694	CallExpression	atoi ( optarg )		337559	1					
ANR	337695	Callee	atoi		337559	0					
ANR	337696	Identifier	atoi		337559	0					
ANR	337697	ArgumentList	optarg		337559	1					
ANR	337698	Argument	optarg		337559	0					
ANR	337699	Identifier	optarg		337559	0					
ANR	337700	BreakStatement	break ;	612:3:15421:15426	337559	11	True				
ANR	337701	Label	case 't' :	613:16:15444:15452	337559	12	True				
ANR	337702	ExpressionStatement	testSuite = optarg	614:3:15457:15475	337559	13	True				
ANR	337703	AssignmentExpression	testSuite = optarg		337559	0		=			
ANR	337704	Identifier	testSuite		337559	0					
ANR	337705	Identifier	optarg		337559	1					
ANR	337706	BreakStatement	break ;	615:3:15480:15485	337559	14	True				
ANR	337707	Label	case 'v' :	616:16:15503:15511	337559	15	True				
ANR	337708	ExpressionStatement	verbose = 1	617:3:15516:15527	337559	16	True				
ANR	337709	AssignmentExpression	verbose = 1		337559	0		=			
ANR	337710	Identifier	verbose		337559	0					
ANR	337711	PrimaryExpression	1		337559	1					
ANR	337712	BreakStatement	break ;	618:3:15532:15537	337559	17	True				
ANR	337713	Label	default :	619:2:15541:15548	337559	18	True				
ANR	337714	Identifier	default		337559	0					
ANR	337715	ExpressionStatement	"fprintf ( stderr , ""Invalid call of nettester, invalid option '%c'.\\n"" , opt )"	619:10:15549:15622	337559	19	True				
ANR	337716	CallExpression	"fprintf ( stderr , ""Invalid call of nettester, invalid option '%c'.\\n"" , opt )"		337559	0					
ANR	337717	Callee	fprintf		337559	0					
ANR	337718	Identifier	fprintf		337559	0					
ANR	337719	ArgumentList	stderr		337559	1					
ANR	337720	Argument	stderr		337559	0					
ANR	337721	Identifier	stderr		337559	0					
ANR	337722	Argument	"""Invalid call of nettester, invalid option '%c'.\\n"""		337559	1					
ANR	337723	PrimaryExpression	"""Invalid call of nettester, invalid option '%c'.\\n"""		337559	0					
ANR	337724	Argument	opt		337559	2					
ANR	337725	Identifier	opt		337559	0					
ANR	337726	ExpressionStatement	"fprintf ( stderr , ""Usage: nettester -d -ttestsuite-name -iudp|tcp [-pport] [-ccustomConfFile] \\n"" )"	620:3:15627:15723	337559	20	True				
ANR	337727	CallExpression	"fprintf ( stderr , ""Usage: nettester -d -ttestsuite-name -iudp|tcp [-pport] [-ccustomConfFile] \\n"" )"		337559	0					
ANR	337728	Callee	fprintf		337559	0					
ANR	337729	Identifier	fprintf		337559	0					
ANR	337730	ArgumentList	stderr		337559	1					
ANR	337731	Argument	stderr		337559	0					
ANR	337732	Identifier	stderr		337559	0					
ANR	337733	Argument	"""Usage: nettester -d -ttestsuite-name -iudp|tcp [-pport] [-ccustomConfFile] \\n"""		337559	1					
ANR	337734	PrimaryExpression	"""Usage: nettester -d -ttestsuite-name -iudp|tcp [-pport] [-ccustomConfFile] \\n"""		337559	0					
ANR	337735	ExpressionStatement	exit ( 1 )	621:3:15728:15735	337559	21	True				
ANR	337736	CallExpression	exit ( 1 )		337559	0					
ANR	337737	Callee	exit		337559	0					
ANR	337738	Identifier	exit		337559	0					
ANR	337739	ArgumentList	1		337559	1					
ANR	337740	Argument	1		337559	0					
ANR	337741	PrimaryExpression	1		337559	0					
ANR	337742	IfStatement	if ( testSuite == NULL )		337559	9					
ANR	337743	Condition	testSuite == NULL	625:4:15750:15766	337559	0	True				
ANR	337744	EqualityExpression	testSuite == NULL		337559	0		==			
ANR	337745	Identifier	testSuite		337559	0					
ANR	337746	Identifier	NULL		337559	1					
ANR	337747	CompoundStatement		45:23:968:968	337559	1					
ANR	337748	ExpressionStatement	"fprintf ( stderr , ""error: no testsuite given, need to specify -t testsuite!\\n"" )"	626:2:15773:15850	337559	0	True				
ANR	337749	CallExpression	"fprintf ( stderr , ""error: no testsuite given, need to specify -t testsuite!\\n"" )"		337559	0					
ANR	337750	Callee	fprintf		337559	0					
ANR	337751	Identifier	fprintf		337559	0					
ANR	337752	ArgumentList	stderr		337559	1					
ANR	337753	Argument	stderr		337559	0					
ANR	337754	Identifier	stderr		337559	0					
ANR	337755	Argument	"""error: no testsuite given, need to specify -t testsuite!\\n"""		337559	1					
ANR	337756	PrimaryExpression	"""error: no testsuite given, need to specify -t testsuite!\\n"""		337559	0					
ANR	337757	ExpressionStatement	exit ( 1 )	627:2:15854:15861	337559	1	True				
ANR	337758	CallExpression	exit ( 1 )		337559	0					
ANR	337759	Callee	exit		337559	0					
ANR	337760	Identifier	exit		337559	0					
ANR	337761	ArgumentList	1		337559	1					
ANR	337762	Argument	1		337559	0					
ANR	337763	PrimaryExpression	1		337559	0					
ANR	337764	ExpressionStatement	atexit ( doAtExit )	630:1:15868:15884	337559	10	True				
ANR	337765	CallExpression	atexit ( doAtExit )		337559	0					
ANR	337766	Callee	atexit		337559	0					
ANR	337767	Identifier	atexit		337559	0					
ANR	337768	ArgumentList	doAtExit		337559	1					
ANR	337769	Argument	doAtExit		337559	0					
ANR	337770	Identifier	doAtExit		337559	0					
ANR	337771	IfStatement	"if ( ( srcdir = getenv ( ""srcdir"" ) ) == NULL )"		337559	11					
ANR	337772	Condition	"( srcdir = getenv ( ""srcdir"" ) ) == NULL"	632:4:15891:15925	337559	0	True				
ANR	337773	EqualityExpression	"( srcdir = getenv ( ""srcdir"" ) ) == NULL"		337559	0		==			
ANR	337774	AssignmentExpression	"srcdir = getenv ( ""srcdir"" )"		337559	0		=			
ANR	337775	Identifier	srcdir		337559	0					
ANR	337776	CallExpression	"getenv ( ""srcdir"" )"		337559	1					
ANR	337777	Callee	getenv		337559	0					
ANR	337778	Identifier	getenv		337559	0					
ANR	337779	ArgumentList	"""srcdir"""		337559	1					
ANR	337780	Argument	"""srcdir"""		337559	0					
ANR	337781	PrimaryExpression	"""srcdir"""		337559	0					
ANR	337782	Identifier	NULL		337559	1					
ANR	337783	ExpressionStatement	"srcdir = ""."""	633:2:15930:15942	337559	1	True				
ANR	337784	AssignmentExpression	"srcdir = ""."""		337559	0		=			
ANR	337785	Identifier	srcdir		337559	0					
ANR	337786	PrimaryExpression	"""."""		337559	1					
ANR	337787	IfStatement	if ( verbose )		337559	12					
ANR	337788	Condition	verbose	635:4:15949:15955	337559	0	True				
ANR	337789	Identifier	verbose		337559	0					
ANR	337790	ExpressionStatement	"fprintf ( stderr , ""Start of nettester run ($srcdir=%s, testsuite=%s, input=%s/%d)\\n"" , srcdir , testSuite , inputMode2Str ( inputMode ) , iPort )"	635:13:15958:16095	337559	1	True				
ANR	337791	CallExpression	"fprintf ( stderr , ""Start of nettester run ($srcdir=%s, testsuite=%s, input=%s/%d)\\n"" , srcdir , testSuite , inputMode2Str ( inputMode ) , iPort )"		337559	0					
ANR	337792	Callee	fprintf		337559	0					
ANR	337793	Identifier	fprintf		337559	0					
ANR	337794	ArgumentList	stderr		337559	1					
ANR	337795	Argument	stderr		337559	0					
ANR	337796	Identifier	stderr		337559	0					
ANR	337797	Argument	"""Start of nettester run ($srcdir=%s, testsuite=%s, input=%s/%d)\\n"""		337559	1					
ANR	337798	PrimaryExpression	"""Start of nettester run ($srcdir=%s, testsuite=%s, input=%s/%d)\\n"""		337559	0					
ANR	337799	Argument	srcdir		337559	2					
ANR	337800	Identifier	srcdir		337559	0					
ANR	337801	Argument	testSuite		337559	3					
ANR	337802	Identifier	testSuite		337559	0					
ANR	337803	Argument	inputMode2Str ( inputMode )		337559	4					
ANR	337804	CallExpression	inputMode2Str ( inputMode )		337559	0					
ANR	337805	Callee	inputMode2Str		337559	0					
ANR	337806	Identifier	inputMode2Str		337559	0					
ANR	337807	ArgumentList	inputMode		337559	1					
ANR	337808	Argument	inputMode		337559	0					
ANR	337809	Identifier	inputMode		337559	0					
ANR	337810	Argument	iPort		337559	5					
ANR	337811	Identifier	iPort		337559	0					
ANR	337812	IfStatement	"if ( ( fp = fopen ( NETTEST_INPUT_CONF_FILE , ""w"" ) ) == NULL )"		337559	13					
ANR	337813	Condition	"( fp = fopen ( NETTEST_INPUT_CONF_FILE , ""w"" ) ) == NULL"	639:4:16134:16183	337559	0	True				
ANR	337814	EqualityExpression	"( fp = fopen ( NETTEST_INPUT_CONF_FILE , ""w"" ) ) == NULL"		337559	0		==			
ANR	337815	AssignmentExpression	"fp = fopen ( NETTEST_INPUT_CONF_FILE , ""w"" )"		337559	0		=			
ANR	337816	Identifier	fp		337559	0					
ANR	337817	CallExpression	"fopen ( NETTEST_INPUT_CONF_FILE , ""w"" )"		337559	1					
ANR	337818	Callee	fopen		337559	0					
ANR	337819	Identifier	fopen		337559	0					
ANR	337820	ArgumentList	NETTEST_INPUT_CONF_FILE		337559	1					
ANR	337821	Argument	NETTEST_INPUT_CONF_FILE		337559	0					
ANR	337822	Identifier	NETTEST_INPUT_CONF_FILE		337559	0					
ANR	337823	Argument	"""w"""		337559	1					
ANR	337824	PrimaryExpression	"""w"""		337559	0					
ANR	337825	Identifier	NULL		337559	1					
ANR	337826	CompoundStatement		59:56:1385:1385	337559	1					
ANR	337827	ExpressionStatement	perror ( NETTEST_INPUT_CONF_FILE )	640:2:16190:16221	337559	0	True				
ANR	337828	CallExpression	perror ( NETTEST_INPUT_CONF_FILE )		337559	0					
ANR	337829	Callee	perror		337559	0					
ANR	337830	Identifier	perror		337559	0					
ANR	337831	ArgumentList	NETTEST_INPUT_CONF_FILE		337559	1					
ANR	337832	Argument	NETTEST_INPUT_CONF_FILE		337559	0					
ANR	337833	Identifier	NETTEST_INPUT_CONF_FILE		337559	0					
ANR	337834	ExpressionStatement	"fprintf ( stderr , ""error opening input configuration file\\n"" )"	641:2:16225:16284	337559	1	True				
ANR	337835	CallExpression	"fprintf ( stderr , ""error opening input configuration file\\n"" )"		337559	0					
ANR	337836	Callee	fprintf		337559	0					
ANR	337837	Identifier	fprintf		337559	0					
ANR	337838	ArgumentList	stderr		337559	1					
ANR	337839	Argument	stderr		337559	0					
ANR	337840	Identifier	stderr		337559	0					
ANR	337841	Argument	"""error opening input configuration file\\n"""		337559	1					
ANR	337842	PrimaryExpression	"""error opening input configuration file\\n"""		337559	0					
ANR	337843	ExpressionStatement	exit ( 1 )	642:2:16288:16295	337559	2	True				
ANR	337844	CallExpression	exit ( 1 )		337559	0					
ANR	337845	Callee	exit		337559	0					
ANR	337846	Identifier	exit		337559	0					
ANR	337847	ArgumentList	1		337559	1					
ANR	337848	Argument	1		337559	0					
ANR	337849	PrimaryExpression	1		337559	0					
ANR	337850	IfStatement	if ( inputMode == inputUDP )		337559	14					
ANR	337851	Condition	inputMode == inputUDP	644:4:16304:16324	337559	0	True				
ANR	337852	EqualityExpression	inputMode == inputUDP		337559	0		==			
ANR	337853	Identifier	inputMode		337559	0					
ANR	337854	Identifier	inputUDP		337559	1					
ANR	337855	CompoundStatement		64:27:1526:1526	337559	1					
ANR	337856	ExpressionStatement	"fputs ( ""$ModLoad ../plugins/imudp/.libs/imudp\\n"" , fp )"	645:2:16331:16383	337559	0	True				
ANR	337857	CallExpression	"fputs ( ""$ModLoad ../plugins/imudp/.libs/imudp\\n"" , fp )"		337559	0					
ANR	337858	Callee	fputs		337559	0					
ANR	337859	Identifier	fputs		337559	0					
ANR	337860	ArgumentList	"""$ModLoad ../plugins/imudp/.libs/imudp\\n"""		337559	1					
ANR	337861	Argument	"""$ModLoad ../plugins/imudp/.libs/imudp\\n"""		337559	0					
ANR	337862	PrimaryExpression	"""$ModLoad ../plugins/imudp/.libs/imudp\\n"""		337559	0					
ANR	337863	Argument	fp		337559	1					
ANR	337864	Identifier	fp		337559	0					
ANR	337865	ExpressionStatement	"fprintf ( fp , ""$UDPServerRun %d\\n"" , iPort )"	646:2:16387:16427	337559	1	True				
ANR	337866	CallExpression	"fprintf ( fp , ""$UDPServerRun %d\\n"" , iPort )"		337559	0					
ANR	337867	Callee	fprintf		337559	0					
ANR	337868	Identifier	fprintf		337559	0					
ANR	337869	ArgumentList	fp		337559	1					
ANR	337870	Argument	fp		337559	0					
ANR	337871	Identifier	fp		337559	0					
ANR	337872	Argument	"""$UDPServerRun %d\\n"""		337559	1					
ANR	337873	PrimaryExpression	"""$UDPServerRun %d\\n"""		337559	0					
ANR	337874	Argument	iPort		337559	2					
ANR	337875	Identifier	iPort		337559	0					
ANR	337876	ElseStatement	else		337559	0					
ANR	337877	CompoundStatement		67:8:1636:1636	337559	0					
ANR	337878	ExpressionStatement	"fputs ( ""$ModLoad ../plugins/imtcp/.libs/imtcp\\n"" , fp )"	648:2:16441:16493	337559	0	True				
ANR	337879	CallExpression	"fputs ( ""$ModLoad ../plugins/imtcp/.libs/imtcp\\n"" , fp )"		337559	0					
ANR	337880	Callee	fputs		337559	0					
ANR	337881	Identifier	fputs		337559	0					
ANR	337882	ArgumentList	"""$ModLoad ../plugins/imtcp/.libs/imtcp\\n"""		337559	1					
ANR	337883	Argument	"""$ModLoad ../plugins/imtcp/.libs/imtcp\\n"""		337559	0					
ANR	337884	PrimaryExpression	"""$ModLoad ../plugins/imtcp/.libs/imtcp\\n"""		337559	0					
ANR	337885	Argument	fp		337559	1					
ANR	337886	Identifier	fp		337559	0					
ANR	337887	ExpressionStatement	"fprintf ( fp , ""$InputTCPServerRun %d\\n"" , iPort )"	649:2:16497:16542	337559	1	True				
ANR	337888	CallExpression	"fprintf ( fp , ""$InputTCPServerRun %d\\n"" , iPort )"		337559	0					
ANR	337889	Callee	fprintf		337559	0					
ANR	337890	Identifier	fprintf		337559	0					
ANR	337891	ArgumentList	fp		337559	1					
ANR	337892	Argument	fp		337559	0					
ANR	337893	Identifier	fp		337559	0					
ANR	337894	Argument	"""$InputTCPServerRun %d\\n"""		337559	1					
ANR	337895	PrimaryExpression	"""$InputTCPServerRun %d\\n"""		337559	0					
ANR	337896	Argument	iPort		337559	2					
ANR	337897	Identifier	iPort		337559	0					
ANR	337898	ExpressionStatement	fclose ( fp )	651:1:16548:16558	337559	15	True				
ANR	337899	CallExpression	fclose ( fp )		337559	0					
ANR	337900	Callee	fclose		337559	0					
ANR	337901	Identifier	fclose		337559	0					
ANR	337902	ArgumentList	fp		337559	1					
ANR	337903	Argument	fp		337559	0					
ANR	337904	Identifier	fp		337559	0					
ANR	337905	ExpressionStatement	"signal ( SIGCHLD , childDied )"	654:1:16592:16618	337559	16	True				
ANR	337906	CallExpression	"signal ( SIGCHLD , childDied )"		337559	0					
ANR	337907	Callee	signal		337559	0					
ANR	337908	Identifier	signal		337559	0					
ANR	337909	ArgumentList	SIGCHLD		337559	1					
ANR	337910	Argument	SIGCHLD		337559	0					
ANR	337911	Identifier	SIGCHLD		337559	0					
ANR	337912	Argument	childDied		337559	1					
ANR	337913	Identifier	childDied		337559	0					
ANR	337914	ExpressionStatement	"sigset ( SIGPIPE , SIG_IGN )"	659:1:16738:16762	337559	17	True				
ANR	337915	CallExpression	"sigset ( SIGPIPE , SIG_IGN )"		337559	0					
ANR	337916	Callee	sigset		337559	0					
ANR	337917	Identifier	sigset		337559	0					
ANR	337918	ArgumentList	SIGPIPE		337559	1					
ANR	337919	Argument	SIGPIPE		337559	0					
ANR	337920	Identifier	SIGPIPE		337559	0					
ANR	337921	Argument	SIG_IGN		337559	1					
ANR	337922	Identifier	SIG_IGN		337559	0					
ANR	337923	ExpressionStatement	"openPipe ( testSuite , & rsyslogdPid , & fd )"	662:1:16801:16839	337559	18	True				
ANR	337924	CallExpression	"openPipe ( testSuite , & rsyslogdPid , & fd )"		337559	0					
ANR	337925	Callee	openPipe		337559	0					
ANR	337926	Identifier	openPipe		337559	0					
ANR	337927	ArgumentList	testSuite		337559	1					
ANR	337928	Argument	testSuite		337559	0					
ANR	337929	Identifier	testSuite		337559	0					
ANR	337930	Argument	& rsyslogdPid		337559	1					
ANR	337931	UnaryOperationExpression	& rsyslogdPid		337559	0					
ANR	337932	UnaryOperator	&		337559	0					
ANR	337933	Identifier	rsyslogdPid		337559	1					
ANR	337934	Argument	& fd		337559	2					
ANR	337935	UnaryOperationExpression	& fd		337559	0					
ANR	337936	UnaryOperator	&		337559	0					
ANR	337937	Identifier	fd		337559	1					
ANR	337938	ExpressionStatement	"readLine ( fd , buf )"	663:1:16842:16859	337559	19	True				
ANR	337939	CallExpression	"readLine ( fd , buf )"		337559	0					
ANR	337940	Callee	readLine		337559	0					
ANR	337941	Identifier	readLine		337559	0					
ANR	337942	ArgumentList	fd		337559	1					
ANR	337943	Argument	fd		337559	0					
ANR	337944	Identifier	fd		337559	0					
ANR	337945	Argument	buf		337559	1					
ANR	337946	Identifier	buf		337559	0					
ANR	337947	ExpressionStatement	"sprintf ( testcases , ""%s/testsuites/*.%s"" , srcdir , testSuite )"	666:1:16888:16947	337559	20	True				
ANR	337948	CallExpression	"sprintf ( testcases , ""%s/testsuites/*.%s"" , srcdir , testSuite )"		337559	0					
ANR	337949	Callee	sprintf		337559	0					
ANR	337950	Identifier	sprintf		337559	0					
ANR	337951	ArgumentList	testcases		337559	1					
ANR	337952	Argument	testcases		337559	0					
ANR	337953	Identifier	testcases		337559	0					
ANR	337954	Argument	"""%s/testsuites/*.%s"""		337559	1					
ANR	337955	PrimaryExpression	"""%s/testsuites/*.%s"""		337559	0					
ANR	337956	Argument	srcdir		337559	2					
ANR	337957	Identifier	srcdir		337559	0					
ANR	337958	Argument	testSuite		337559	3					
ANR	337959	Identifier	testSuite		337559	0					
ANR	337960	IfStatement	"if ( doTests ( fd , testcases ) != 0 )"		337559	21					
ANR	337961	Condition	"doTests ( fd , testcases ) != 0"	667:4:16953:16979	337559	0	True				
ANR	337962	EqualityExpression	"doTests ( fd , testcases ) != 0"		337559	0		!=			
ANR	337963	CallExpression	"doTests ( fd , testcases )"		337559	0					
ANR	337964	Callee	doTests		337559	0					
ANR	337965	Identifier	doTests		337559	0					
ANR	337966	ArgumentList	fd		337559	1					
ANR	337967	Argument	fd		337559	0					
ANR	337968	Identifier	fd		337559	0					
ANR	337969	Argument	testcases		337559	1					
ANR	337970	Identifier	testcases		337559	0					
ANR	337971	PrimaryExpression	0		337559	1					
ANR	337972	ExpressionStatement	ret = 1	668:2:16984:16991	337559	1	True				
ANR	337973	AssignmentExpression	ret = 1		337559	0		=			
ANR	337974	Identifier	ret		337559	0					
ANR	337975	PrimaryExpression	1		337559	1					
ANR	337976	IfStatement	if ( verbose )		337559	22					
ANR	337977	Condition	verbose	670:4:16998:17004	337559	0	True				
ANR	337978	Identifier	verbose		337559	0					
ANR	337979	ExpressionStatement	"fprintf ( stderr , ""End of nettester run (%d).\\n"" , ret )"	670:13:17007:17059	337559	1	True				
ANR	337980	CallExpression	"fprintf ( stderr , ""End of nettester run (%d).\\n"" , ret )"		337559	0					
ANR	337981	Callee	fprintf		337559	0					
ANR	337982	Identifier	fprintf		337559	0					
ANR	337983	ArgumentList	stderr		337559	1					
ANR	337984	Argument	stderr		337559	0					
ANR	337985	Identifier	stderr		337559	0					
ANR	337986	Argument	"""End of nettester run (%d).\\n"""		337559	1					
ANR	337987	PrimaryExpression	"""End of nettester run (%d).\\n"""		337559	0					
ANR	337988	Argument	ret		337559	2					
ANR	337989	Identifier	ret		337559	0					
ANR	337990	ExpressionStatement	exit ( ret )	672:1:17063:17072	337559	23	True				
ANR	337991	CallExpression	exit ( ret )		337559	0					
ANR	337992	Callee	exit		337559	0					
ANR	337993	Identifier	exit		337559	0					
ANR	337994	ArgumentList	ret		337559	1					
ANR	337995	Argument	ret		337559	0					
ANR	337996	Identifier	ret		337559	0					
ANR	337997	ReturnType	int		337559	1					
ANR	337998	Identifier	main		337559	2					
ANR	337999	ParameterList	"int argc , char * argv [ ] , char * envp [ ]"		337559	3					
ANR	338000	Parameter	int argc	580:9:14762:14769	337559	0	True				
ANR	338001	ParameterType	int		337559	0					
ANR	338002	Identifier	argc		337559	1					
ANR	338003	Parameter	char * argv [ ]	580:19:14772:14783	337559	1	True				
ANR	338004	ParameterType	char * [ ]		337559	0					
ANR	338005	Identifier	argv		337559	1					
ANR	338006	Parameter	char * envp [ ]	580:33:14786:14797	337559	2	True				
ANR	338007	ParameterType	char * [ ]		337559	0					
ANR	338008	Identifier	envp		337559	1					
ANR	338009	CFGEntryNode	ENTRY		337559		True				
ANR	338010	CFGExitNode	EXIT		337559		True				
ANR	338011	Symbol	testSuite		337559						
ANR	338012	Symbol	optarg		337559						
ANR	338013	Symbol	fp		337559						
ANR	338014	Symbol	envp		337559						
ANR	338015	Symbol	pszCustomConf		337559						
ANR	338016	Symbol	argv		337559						
ANR	338017	Symbol	getopt		337559						
ANR	338018	Symbol	inputUDP		337559						
ANR	338019	Symbol	srcdir		337559						
ANR	338020	Symbol	SIGPIPE		337559						
ANR	338021	Symbol	EOF		337559						
ANR	338022	Symbol	getenv		337559						
ANR	338023	Symbol	argc		337559						
ANR	338024	Symbol	ret		337559						
ANR	338025	Symbol	strcmp		337559						
ANR	338026	Symbol	atoi		337559						
ANR	338027	Symbol	fopen		337559						
ANR	338028	Symbol	inputMode2Str		337559						
ANR	338029	Symbol	NULL		337559						
ANR	338030	Symbol	doAtExit		337559						
ANR	338031	Symbol	iPort		337559						
ANR	338032	Symbol	testcases		337559						
ANR	338033	Symbol	SIG_IGN		337559						
ANR	338034	Symbol	& fd		337559						
ANR	338035	Symbol	stderr		337559						
ANR	338036	Symbol	childDied		337559						
ANR	338037	Symbol	ourEnvp		337559						
ANR	338038	Symbol	verbose		337559						
ANR	338039	Symbol	NETTEST_INPUT_CONF_FILE		337559						
ANR	338040	Symbol	SIGCHLD		337559						
ANR	338041	Symbol	opt		337559						
ANR	338042	Symbol	buf		337559						
ANR	338043	Symbol	inputMode		337559						
ANR	338044	Symbol	IPv4Only		337559						
ANR	338045	Symbol	& rsyslogdPid		337559						
ANR	338046	Symbol	inputTCP		337559						
ANR	338047	Symbol	fd		337559						
ANR	338048	Symbol	doTests		337559						
