command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	375498	File	data/converged/CVE-2017-12588_rsyslog/tools_syncdemo.c								
ANR	375499	ClassDef	<unnamed>	70:8:3372:3443							
ANR	375500	DeclStmt									
ANR	375501	Decl									syncType_t
ANR	375502	DeclStmt									
ANR	375503	Decl							syncType_t	syncType_t [ ]	syncTypes
ANR	375504	DeclStmt									
ANR	375505	Decl							int	int	bCPUAffinity
ANR	375506	DeclStmt									
ANR	375507	Decl							int	int	procs
ANR	375508	DeclStmt									
ANR	375509	Decl							int	int	numthrds
ANR	375510	DeclStmt									
ANR	375511	Decl							unsigned	unsigned	goal
ANR	375512	DeclStmt									
ANR	375513	Decl							int	int	bCSV
ANR	375514	DeclStmt									
ANR	375515	Decl							int	int	numIterations
ANR	375516	DeclStmt									
ANR	375517	Decl							int	int	dummyLoad
ANR	375518	DeclStmt									
ANR	375519	Decl							syncType_t	syncType_t	syncType
ANR	375520	DeclStmt									
ANR	375521	Decl							int	int	bAllSyncTypes
ANR	375522	DeclStmt									
ANR	375523	Decl							int	int	global_int
ANR	375524	DeclStmt									
ANR	375525	Decl							unsigned	unsigned	thrd_WorkToDo
ANR	375526	DeclStmt									
ANR	375527	Decl							volatile int	volatile int	bStartRun
ANR	375528	DeclStmt									
ANR	375529	Decl							struct timeval	struct timeval	tvStart
ANR	375530	Decl							struct timeval	struct timeval	tvEnd
ANR	375531	DeclStmt									
ANR	375532	Decl							long long	long long	totalRuntime
ANR	375533	DeclStmt									
ANR	375534	Decl							unsigned	unsigned	minRuntime
ANR	375535	DeclStmt									
ANR	375536	Decl							unsigned	unsigned	maxRuntime
ANR	375537	DeclStmt									
ANR	375538	Decl							pthread_mutex_t	pthread_mutex_t	mut
ANR	375539	DeclStmt									
ANR	375540	Decl							pthread_spinlock_t	pthread_spinlock_t	spin
ANR	375541	DeclStmt									
ANR	375542	Decl							sem_t	sem_t	sem
ANR	375543	Function	getSyncMethName	100:0:4528:4835							
ANR	375544	FunctionDef	getSyncMethName (syncType_t st)		375543	0					
ANR	375545	CompoundStatement		102:0:4572:4835	375543	0					
ANR	375546	SwitchStatement	switch ( st )		375543	0					
ANR	375547	Condition	st	103:8:4582:4583	375543	0	True				
ANR	375548	Identifier	st		375543	0					
ANR	375549	CompoundStatement		2:12:13:13	375543	1					
ANR	375550	Label	case part :	104:1:4589:4603	375543	0	True				
ANR	375551	Identifier	part		375543	0					
ANR	375552	ReturnStatement	"return ""partition"" ;"	104:17:4605:4623	375543	1	True				
ANR	375553	PrimaryExpression	"""partition"""		375543	0					
ANR	375554	Label	case none :	105:1:4626:4640	375543	2	True				
ANR	375555	Identifier	none		375543	0					
ANR	375556	ReturnStatement	"return ""none"" ;"	105:17:4642:4655	375543	3	True				
ANR	375557	PrimaryExpression	"""none"""		375543	0					
ANR	375558	Label	case atomic :	106:1:4658:4672	375543	4	True				
ANR	375559	Identifier	atomic		375543	0					
ANR	375560	ReturnStatement	"return ""atomic op"" ;"	106:17:4674:4692	375543	5	True				
ANR	375561	PrimaryExpression	"""atomic op"""		375543	0					
ANR	375562	Label	case spinlock :	107:1:4695:4709	375543	6	True				
ANR	375563	Identifier	spinlock		375543	0					
ANR	375564	ReturnStatement	"return ""spin lock"" ;"	107:17:4711:4729	375543	7	True				
ANR	375565	PrimaryExpression	"""spin lock"""		375543	0					
ANR	375566	Label	case mutex :	108:1:4732:4746	375543	8	True				
ANR	375567	Identifier	mutex		375543	0					
ANR	375568	ReturnStatement	"return ""mutex"" ;"	108:17:4748:4762	375543	9	True				
ANR	375569	PrimaryExpression	"""mutex"""		375543	0					
ANR	375570	Label	case semaphore :	109:1:4765:4779	375543	10	True				
ANR	375571	Identifier	semaphore		375543	0					
ANR	375572	ReturnStatement	"return ""semaphore"" ;"	109:17:4781:4799	375543	11	True				
ANR	375573	PrimaryExpression	"""semaphore"""		375543	0					
ANR	375574	Label	case cas :	110:1:4802:4816	375543	12	True				
ANR	375575	Identifier	cas		375543	0					
ANR	375576	ReturnStatement	"return ""cas"" ;"	110:17:4818:4830	375543	13	True				
ANR	375577	PrimaryExpression	"""cas"""		375543	0					
ANR	375578	ReturnType	static char *		375543	1					
ANR	375579	Identifier	getSyncMethName		375543	2					
ANR	375580	ParameterList	syncType_t st		375543	3					
ANR	375581	Parameter	syncType_t st	101:16:4557:4569	375543	0	True				
ANR	375582	ParameterType	syncType_t		375543	0					
ANR	375583	Identifier	st		375543	1					
ANR	375584	CFGEntryNode	ENTRY		375543		True				
ANR	375585	CFGExitNode	EXIT		375543		True				
ANR	375586	Symbol	st		375543						
ANR	375587	Function	gettid	115:0:4839:4895							
ANR	375588	FunctionDef	gettid ()		375587	0					
ANR	375589	CompoundStatement		117:0:4861:4895	375587	0					
ANR	375590	ReturnStatement	return syscall ( __NR_gettid ) ;	118:1:4864:4893	375587	0	True				
ANR	375591	CallExpression	syscall ( __NR_gettid )		375587	0					
ANR	375592	Callee	syscall		375587	0					
ANR	375593	Identifier	syscall		375587	0					
ANR	375594	ArgumentList	__NR_gettid		375587	1					
ANR	375595	Argument	__NR_gettid		375587	0					
ANR	375596	Identifier	__NR_gettid		375587	0					
ANR	375597	ReturnType	static pid_t		375587	1					
ANR	375598	Identifier	gettid		375587	2					
ANR	375599	ParameterList			375587	3					
ANR	375600	CFGEntryNode	ENTRY		375587		True				
ANR	375601	CFGExitNode	EXIT		375587		True				
ANR	375602	Symbol	syscall		375587						
ANR	375603	Symbol	__NR_gettid		375587						
ANR	375604	Function	workerThread	122:0:4899:6725							
ANR	375605	FunctionDef	workerThread (void * arg)		375604	0					
ANR	375606	CompoundStatement		123:0:4931:6725	375604	0					
ANR	375607	IdentifierDeclStatement	"int i , j ;"	124:1:4934:4942	375604	0	True				
ANR	375608	IdentifierDecl	i		375604	0					
ANR	375609	IdentifierDeclType	int		375604	0					
ANR	375610	Identifier	i		375604	1					
ANR	375611	IdentifierDecl	j		375604	1					
ANR	375612	IdentifierDeclType	int		375604	0					
ANR	375613	Identifier	j		375604	1					
ANR	375614	IdentifierDeclStatement	volatile int partval = 0 ;	125:1:4945:4969	375604	1	True				
ANR	375615	IdentifierDecl	partval = 0		375604	0					
ANR	375616	IdentifierDeclType	volatile int		375604	0					
ANR	375617	Identifier	partval		375604	1					
ANR	375618	AssignmentExpression	partval = 0		375604	2		=			
ANR	375619	Identifier	partval		375604	0					
ANR	375620	PrimaryExpression	0		375604	1					
ANR	375621	IdentifierDeclStatement	int * partptr ;	126:1:5040:5052	375604	2	True				
ANR	375622	IdentifierDecl	* partptr		375604	0					
ANR	375623	IdentifierDeclType	int *		375604	0					
ANR	375624	Identifier	partptr		375604	1					
ANR	375625	IdentifierDeclStatement	"int oldval , newval ;"	127:1:5055:5073	375604	3	True				
ANR	375626	IdentifierDecl	oldval		375604	0					
ANR	375627	IdentifierDeclType	int		375604	0					
ANR	375628	Identifier	oldval		375604	1					
ANR	375629	IdentifierDecl	newval		375604	1					
ANR	375630	IdentifierDeclType	int		375604	0					
ANR	375631	Identifier	newval		375604	1					
ANR	375632	IdentifierDeclStatement	int thrd_num = ( int ) ( long ) arg ;	128:1:5100:5129	375604	4	True				
ANR	375633	IdentifierDecl	thrd_num = ( int ) ( long ) arg		375604	0					
ANR	375634	IdentifierDeclType	int		375604	0					
ANR	375635	Identifier	thrd_num		375604	1					
ANR	375636	AssignmentExpression	thrd_num = ( int ) ( long ) arg		375604	2		=			
ANR	375637	Identifier	thrd_num		375604	0					
ANR	375638	CastExpression	( int ) ( long ) arg		375604	1					
ANR	375639	CastTarget	int		375604	0					
ANR	375640	CastExpression	( long ) arg		375604	1					
ANR	375641	CastTarget	long		375604	0					
ANR	375642	Identifier	arg		375604	1					
ANR	375643	IdentifierDeclStatement	cpu_set_t set ;	129:1:5132:5145	375604	5	True				
ANR	375644	IdentifierDecl	set		375604	0					
ANR	375645	IdentifierDeclType	cpu_set_t		375604	0					
ANR	375646	Identifier	set		375604	1					
ANR	375647	ExpressionStatement	CPU_ZERO ( & set )	131:1:5149:5163	375604	6	True				
ANR	375648	CallExpression	CPU_ZERO ( & set )		375604	0					
ANR	375649	Callee	CPU_ZERO		375604	0					
ANR	375650	Identifier	CPU_ZERO		375604	0					
ANR	375651	ArgumentList	& set		375604	1					
ANR	375652	Argument	& set		375604	0					
ANR	375653	UnaryOperationExpression	& set		375604	0					
ANR	375654	UnaryOperator	&		375604	0					
ANR	375655	Identifier	set		375604	1					
ANR	375656	ExpressionStatement	"CPU_SET ( thrd_num % procs , & set )"	132:1:5166:5197	375604	7	True				
ANR	375657	CallExpression	"CPU_SET ( thrd_num % procs , & set )"		375604	0					
ANR	375658	Callee	CPU_SET		375604	0					
ANR	375659	Identifier	CPU_SET		375604	0					
ANR	375660	ArgumentList	thrd_num % procs		375604	1					
ANR	375661	Argument	thrd_num % procs		375604	0					
ANR	375662	MultiplicativeExpression	thrd_num % procs		375604	0		%			
ANR	375663	Identifier	thrd_num		375604	0					
ANR	375664	Identifier	procs		375604	1					
ANR	375665	Argument	& set		375604	1					
ANR	375666	UnaryOperationExpression	& set		375604	0					
ANR	375667	UnaryOperator	&		375604	0					
ANR	375668	Identifier	set		375604	1					
ANR	375669	IfStatement	if ( syncType == part )		375604	8					
ANR	375670	Condition	syncType == part	133:4:5203:5218	375604	0	True				
ANR	375671	EqualityExpression	syncType == part		375604	0		==			
ANR	375672	Identifier	syncType		375604	0					
ANR	375673	Identifier	part		375604	1					
ANR	375674	CompoundStatement		11:22:289:289	375604	1					
ANR	375675	ExpressionStatement	partval = 0	134:2:5225:5236	375604	0	True				
ANR	375676	AssignmentExpression	partval = 0		375604	0		=			
ANR	375677	Identifier	partval		375604	0					
ANR	375678	PrimaryExpression	0		375604	1					
ANR	375679	IfStatement	if ( bCPUAffinity )		375604	9					
ANR	375680	Condition	bCPUAffinity	140:4:5359:5370	375604	0	True				
ANR	375681	Identifier	bCPUAffinity		375604	0					
ANR	375682	CompoundStatement		18:18:441:441	375604	1					
ANR	375683	IfStatement	"if ( sched_setaffinity ( gettid ( ) , sizeof ( cpu_set_t ) , & set ) )"		375604	0					
ANR	375684	Condition	"sched_setaffinity ( gettid ( ) , sizeof ( cpu_set_t ) , & set )"	141:6:5381:5436	375604	0	True				
ANR	375685	CallExpression	"sched_setaffinity ( gettid ( ) , sizeof ( cpu_set_t ) , & set )"		375604	0					
ANR	375686	Callee	sched_setaffinity		375604	0					
ANR	375687	Identifier	sched_setaffinity		375604	0					
ANR	375688	ArgumentList	gettid ( )		375604	1					
ANR	375689	Argument	gettid ( )		375604	0					
ANR	375690	CallExpression	gettid ( )		375604	0					
ANR	375691	Callee	gettid		375604	0					
ANR	375692	Identifier	gettid		375604	0					
ANR	375693	ArgumentList			375604	1					
ANR	375694	Argument	sizeof ( cpu_set_t )		375604	1					
ANR	375695	SizeofExpression	sizeof ( cpu_set_t )		375604	0					
ANR	375696	Sizeof	sizeof		375604	0					
ANR	375697	SizeofOperand	cpu_set_t		375604	1					
ANR	375698	Argument	& set		375604	2					
ANR	375699	UnaryOperationExpression	& set		375604	0					
ANR	375700	UnaryOperator	&		375604	0					
ANR	375701	Identifier	set		375604	1					
ANR	375702	CompoundStatement		19:64:507:507	375604	1					
ANR	375703	ExpressionStatement	"perror ( ""sched_setaffinity"" )"	142:3:5444:5473	375604	0	True				
ANR	375704	CallExpression	"perror ( ""sched_setaffinity"" )"		375604	0					
ANR	375705	Callee	perror		375604	0					
ANR	375706	Identifier	perror		375604	0					
ANR	375707	ArgumentList	"""sched_setaffinity"""		375604	1					
ANR	375708	Argument	"""sched_setaffinity"""		375604	0					
ANR	375709	PrimaryExpression	"""sched_setaffinity"""		375604	0					
ANR	375710	ReturnStatement	return NULL ;	143:3:5478:5489	375604	1	True				
ANR	375711	Identifier	NULL		375604	0					
ANR	375712	WhileStatement	while ( bStartRun == 0 )		375604	10					
ANR	375713	Condition	bStartRun == 0	148:7:5527:5540	375604	0	True				
ANR	375714	EqualityExpression	bStartRun == 0		375604	0		==			
ANR	375715	Identifier	bStartRun		375604	0					
ANR	375716	PrimaryExpression	0		375604	1					
ANR	375717	ExpressionStatement		149:11:5554:5554	375604	1	True				
ANR	375718	ForStatement	for ( i = 0 ; i < thrd_WorkToDo ; i ++ )		375604	11					
ANR	375719	ForInit	i = 0 ;	151:6:5563:5568	375604	0	True				
ANR	375720	AssignmentExpression	i = 0		375604	0		=			
ANR	375721	Identifier	i		375604	0					
ANR	375722	PrimaryExpression	0		375604	1					
ANR	375723	Condition	i < thrd_WorkToDo	151:13:5570:5586	375604	1	True				
ANR	375724	RelationalExpression	i < thrd_WorkToDo		375604	0		<			
ANR	375725	Identifier	i		375604	0					
ANR	375726	Identifier	thrd_WorkToDo		375604	1					
ANR	375727	PostIncDecOperationExpression	i ++	151:32:5589:5591	375604	2	True				
ANR	375728	Identifier	i		375604	0					
ANR	375729	IncDec	++		375604	1					
ANR	375730	CompoundStatement		29:37:662:662	375604	3					
ANR	375731	SwitchStatement	switch ( syncType )		375604	0					
ANR	375732	Condition	syncType	152:9:5605:5612	375604	0	True				
ANR	375733	Identifier	syncType		375604	0					
ANR	375734	CompoundStatement		30:19:683:683	375604	1					
ANR	375735	Label	case part :	153:2:5619:5628	375604	0	True				
ANR	375736	Identifier	part		375604	0					
ANR	375737	ExpressionStatement	partval ++	156:3:5737:5746	375604	1	True				
ANR	375738	PostIncDecOperationExpression	partval ++		375604	0					
ANR	375739	Identifier	partval		375604	0					
ANR	375740	IncDec	++		375604	1					
ANR	375741	BreakStatement	break ;	157:3:5751:5756	375604	2	True				
ANR	375742	Label	case none :	158:2:5760:5769	375604	3	True				
ANR	375743	Identifier	none		375604	0					
ANR	375744	ExpressionStatement	global_int ++	159:3:5774:5786	375604	4	True				
ANR	375745	PostIncDecOperationExpression	global_int ++		375604	0					
ANR	375746	Identifier	global_int		375604	0					
ANR	375747	IncDec	++		375604	1					
ANR	375748	BreakStatement	break ;	160:3:5791:5796	375604	5	True				
ANR	375749	Label	case atomic :	161:2:5800:5811	375604	6	True				
ANR	375750	Identifier	atomic		375604	0					
ANR	375751	ExpressionStatement	"__sync_fetch_and_add ( & global_int , 1 )"	162:3:5816:5851	375604	7	True				
ANR	375752	CallExpression	"__sync_fetch_and_add ( & global_int , 1 )"		375604	0					
ANR	375753	Callee	__sync_fetch_and_add		375604	0					
ANR	375754	Identifier	__sync_fetch_and_add		375604	0					
ANR	375755	ArgumentList	& global_int		375604	1					
ANR	375756	Argument	& global_int		375604	0					
ANR	375757	UnaryOperationExpression	& global_int		375604	0					
ANR	375758	UnaryOperator	&		375604	0					
ANR	375759	Identifier	global_int		375604	1					
ANR	375760	Argument	1		375604	1					
ANR	375761	PrimaryExpression	1		375604	0					
ANR	375762	BreakStatement	break ;	163:3:5856:5861	375604	8	True				
ANR	375763	Label	case cas :	164:2:5865:5873	375604	9	True				
ANR	375764	Identifier	cas		375604	0					
ANR	375765	DoStatement	do		375604	10					
ANR	375766	CompoundStatement		43:6:949:949	375604	0					
ANR	375767	ExpressionStatement	oldval = global_int	166:4:5887:5906	375604	0	True				
ANR	375768	AssignmentExpression	oldval = global_int		375604	0		=			
ANR	375769	Identifier	oldval		375604	0					
ANR	375770	Identifier	global_int		375604	1					
ANR	375771	ExpressionStatement	newval = oldval + 1	167:4:5912:5931	375604	1	True				
ANR	375772	AssignmentExpression	newval = oldval + 1		375604	0		=			
ANR	375773	Identifier	newval		375604	0					
ANR	375774	AdditiveExpression	oldval + 1		375604	1		+			
ANR	375775	Identifier	oldval		375604	0					
ANR	375776	PrimaryExpression	1		375604	1					
ANR	375777	Condition	"! __sync_bool_compare_and_swap ( & global_int , oldval , newval )"	168:11:5944:6001	375604	1	True				
ANR	375778	UnaryOperationExpression	"! __sync_bool_compare_and_swap ( & global_int , oldval , newval )"		375604	0					
ANR	375779	UnaryOperator	!		375604	0					
ANR	375780	CallExpression	"__sync_bool_compare_and_swap ( & global_int , oldval , newval )"		375604	1					
ANR	375781	Callee	__sync_bool_compare_and_swap		375604	0					
ANR	375782	Identifier	__sync_bool_compare_and_swap		375604	0					
ANR	375783	ArgumentList	& global_int		375604	1					
ANR	375784	Argument	& global_int		375604	0					
ANR	375785	UnaryOperationExpression	& global_int		375604	0					
ANR	375786	UnaryOperator	&		375604	0					
ANR	375787	Identifier	global_int		375604	1					
ANR	375788	Argument	oldval		375604	1					
ANR	375789	Identifier	oldval		375604	0					
ANR	375790	Argument	newval		375604	2					
ANR	375791	Identifier	newval		375604	0					
ANR	375792	BreakStatement	break ;	169:3:6008:6013	375604	11	True				
ANR	375793	Label	case mutex :	170:2:6017:6027	375604	12	True				
ANR	375794	Identifier	mutex		375604	0					
ANR	375795	ExpressionStatement	pthread_mutex_lock ( & mut )	171:3:6032:6056	375604	13	True				
ANR	375796	CallExpression	pthread_mutex_lock ( & mut )		375604	0					
ANR	375797	Callee	pthread_mutex_lock		375604	0					
ANR	375798	Identifier	pthread_mutex_lock		375604	0					
ANR	375799	ArgumentList	& mut		375604	1					
ANR	375800	Argument	& mut		375604	0					
ANR	375801	UnaryOperationExpression	& mut		375604	0					
ANR	375802	UnaryOperator	&		375604	0					
ANR	375803	Identifier	mut		375604	1					
ANR	375804	ExpressionStatement	global_int ++	172:3:6061:6073	375604	14	True				
ANR	375805	PostIncDecOperationExpression	global_int ++		375604	0					
ANR	375806	Identifier	global_int		375604	0					
ANR	375807	IncDec	++		375604	1					
ANR	375808	ExpressionStatement	pthread_mutex_unlock ( & mut )	173:3:6078:6104	375604	15	True				
ANR	375809	CallExpression	pthread_mutex_unlock ( & mut )		375604	0					
ANR	375810	Callee	pthread_mutex_unlock		375604	0					
ANR	375811	Identifier	pthread_mutex_unlock		375604	0					
ANR	375812	ArgumentList	& mut		375604	1					
ANR	375813	Argument	& mut		375604	0					
ANR	375814	UnaryOperationExpression	& mut		375604	0					
ANR	375815	UnaryOperator	&		375604	0					
ANR	375816	Identifier	mut		375604	1					
ANR	375817	BreakStatement	break ;	174:3:6109:6114	375604	16	True				
ANR	375818	Label	case spinlock :	175:2:6118:6131	375604	17	True				
ANR	375819	Identifier	spinlock		375604	0					
ANR	375820	ExpressionStatement	pthread_spin_lock ( & spin )	176:3:6136:6160	375604	18	True				
ANR	375821	CallExpression	pthread_spin_lock ( & spin )		375604	0					
ANR	375822	Callee	pthread_spin_lock		375604	0					
ANR	375823	Identifier	pthread_spin_lock		375604	0					
ANR	375824	ArgumentList	& spin		375604	1					
ANR	375825	Argument	& spin		375604	0					
ANR	375826	UnaryOperationExpression	& spin		375604	0					
ANR	375827	UnaryOperator	&		375604	0					
ANR	375828	Identifier	spin		375604	1					
ANR	375829	ExpressionStatement	global_int ++	177:3:6165:6177	375604	19	True				
ANR	375830	PostIncDecOperationExpression	global_int ++		375604	0					
ANR	375831	Identifier	global_int		375604	0					
ANR	375832	IncDec	++		375604	1					
ANR	375833	ExpressionStatement	pthread_spin_unlock ( & spin )	178:3:6182:6208	375604	20	True				
ANR	375834	CallExpression	pthread_spin_unlock ( & spin )		375604	0					
ANR	375835	Callee	pthread_spin_unlock		375604	0					
ANR	375836	Identifier	pthread_spin_unlock		375604	0					
ANR	375837	ArgumentList	& spin		375604	1					
ANR	375838	Argument	& spin		375604	0					
ANR	375839	UnaryOperationExpression	& spin		375604	0					
ANR	375840	UnaryOperator	&		375604	0					
ANR	375841	Identifier	spin		375604	1					
ANR	375842	BreakStatement	break ;	179:3:6213:6218	375604	21	True				
ANR	375843	Label	case semaphore :	180:2:6222:6236	375604	22	True				
ANR	375844	Identifier	semaphore		375604	0					
ANR	375845	ExpressionStatement	sem_wait ( & sem )	181:3:6241:6255	375604	23	True				
ANR	375846	CallExpression	sem_wait ( & sem )		375604	0					
ANR	375847	Callee	sem_wait		375604	0					
ANR	375848	Identifier	sem_wait		375604	0					
ANR	375849	ArgumentList	& sem		375604	1					
ANR	375850	Argument	& sem		375604	0					
ANR	375851	UnaryOperationExpression	& sem		375604	0					
ANR	375852	UnaryOperator	&		375604	0					
ANR	375853	Identifier	sem		375604	1					
ANR	375854	ExpressionStatement	global_int ++	182:3:6260:6272	375604	24	True				
ANR	375855	PostIncDecOperationExpression	global_int ++		375604	0					
ANR	375856	Identifier	global_int		375604	0					
ANR	375857	IncDec	++		375604	1					
ANR	375858	ExpressionStatement	sem_post ( & sem )	183:3:6277:6291	375604	25	True				
ANR	375859	CallExpression	sem_post ( & sem )		375604	0					
ANR	375860	Callee	sem_post		375604	0					
ANR	375861	Identifier	sem_post		375604	0					
ANR	375862	ArgumentList	& sem		375604	1					
ANR	375863	Argument	& sem		375604	0					
ANR	375864	UnaryOperationExpression	& sem		375604	0					
ANR	375865	UnaryOperator	&		375604	0					
ANR	375866	Identifier	sem		375604	1					
ANR	375867	BreakStatement	break ;	184:3:6296:6301	375604	26	True				
ANR	375868	ForStatement	for ( j = 0 ; j < dummyLoad ; ++ j )		375604	1					
ANR	375869	ForInit	j = 0 ;	191:6:6507:6513	375604	0	True				
ANR	375870	AssignmentExpression	j = 0		375604	0		=			
ANR	375871	Identifier	j		375604	0					
ANR	375872	PrimaryExpression	0		375604	1					
ANR	375873	Condition	j < dummyLoad	191:14:6515:6527	375604	1	True				
ANR	375874	RelationalExpression	j < dummyLoad		375604	0		<			
ANR	375875	Identifier	j		375604	0					
ANR	375876	Identifier	dummyLoad		375604	1					
ANR	375877	UnaryExpression	++ j	191:30:6531:6533	375604	2	True				
ANR	375878	IncDec	++		375604	0					
ANR	375879	Identifier	j		375604	1					
ANR	375880	CompoundStatement		69:35:1604:1604	375604	3					
ANR	375881	ExpressionStatement		192:52:6590:6590	375604	0	True				
ANR	375882	IfStatement	if ( syncType == part )		375604	12					
ANR	375883	Condition	syncType == part	196:4:6604:6619	375604	0	True				
ANR	375884	EqualityExpression	syncType == part		375604	0		==			
ANR	375885	Identifier	syncType		375604	0					
ANR	375886	Identifier	part		375604	1					
ANR	375887	CompoundStatement		74:22:1690:1690	375604	1					
ANR	375888	ExpressionStatement	pthread_mutex_lock ( & mut )	197:2:6626:6650	375604	0	True				
ANR	375889	CallExpression	pthread_mutex_lock ( & mut )		375604	0					
ANR	375890	Callee	pthread_mutex_lock		375604	0					
ANR	375891	Identifier	pthread_mutex_lock		375604	0					
ANR	375892	ArgumentList	& mut		375604	1					
ANR	375893	Argument	& mut		375604	0					
ANR	375894	UnaryOperationExpression	& mut		375604	0					
ANR	375895	UnaryOperator	&		375604	0					
ANR	375896	Identifier	mut		375604	1					
ANR	375897	ExpressionStatement	global_int += partval	198:2:6654:6675	375604	1	True				
ANR	375898	AssignmentExpression	global_int += partval		375604	0		+=			
ANR	375899	Identifier	global_int		375604	0					
ANR	375900	Identifier	partval		375604	1					
ANR	375901	ExpressionStatement	pthread_mutex_unlock ( & mut )	199:2:6679:6705	375604	2	True				
ANR	375902	CallExpression	pthread_mutex_unlock ( & mut )		375604	0					
ANR	375903	Callee	pthread_mutex_unlock		375604	0					
ANR	375904	Identifier	pthread_mutex_unlock		375604	0					
ANR	375905	ArgumentList	& mut		375604	1					
ANR	375906	Argument	& mut		375604	0					
ANR	375907	UnaryOperationExpression	& mut		375604	0					
ANR	375908	UnaryOperator	&		375604	0					
ANR	375909	Identifier	mut		375604	1					
ANR	375910	ReturnStatement	return NULL ;	202:1:6712:6723	375604	13	True				
ANR	375911	Identifier	NULL		375604	0					
ANR	375912	ReturnType	void *		375604	1					
ANR	375913	Identifier	workerThread		375604	2					
ANR	375914	ParameterList	void * arg		375604	3					
ANR	375915	Parameter	void * arg	122:20:4919:4927	375604	0	True				
ANR	375916	ParameterType	void *		375604	0					
ANR	375917	Identifier	arg		375604	1					
ANR	375918	CFGEntryNode	ENTRY		375604		True				
ANR	375919	CFGExitNode	EXIT		375604		True				
ANR	375920	Symbol	procs		375604						
ANR	375921	Symbol	bStartRun		375604						
ANR	375922	Symbol	global_int		375604						
ANR	375923	Symbol	& sem		375604						
ANR	375924	Symbol	part		375604						
ANR	375925	Symbol	sched_setaffinity		375604						
ANR	375926	Symbol	& global_int		375604						
ANR	375927	Symbol	& set		375604						
ANR	375928	Symbol	oldval		375604						
ANR	375929	Symbol	thrd_WorkToDo		375604						
ANR	375930	Symbol	arg		375604						
ANR	375931	Symbol	bCPUAffinity		375604						
ANR	375932	Symbol	dummyLoad		375604						
ANR	375933	Symbol	set		375604						
ANR	375934	Symbol	NULL		375604						
ANR	375935	Symbol	partptr		375604						
ANR	375936	Symbol	i		375604						
ANR	375937	Symbol	j		375604						
ANR	375938	Symbol	thrd_num		375604						
ANR	375939	Symbol	__sync_bool_compare_and_swap		375604						
ANR	375940	Symbol	& spin		375604						
ANR	375941	Symbol	gettid		375604						
ANR	375942	Symbol	partval		375604						
ANR	375943	Symbol	& mut		375604						
ANR	375944	Symbol	syncType		375604						
ANR	375945	Symbol	newval		375604						
ANR	375946	Function	beginTiming	206:0:6729:7286							
ANR	375947	FunctionDef	beginTiming ()		375946	0					
ANR	375948	CompoundStatement		207:0:6759:7286	375946	0					
ANR	375949	IfStatement	if ( ! ( bCSV || bAllSyncTypes ) )		375946	0					
ANR	375950	Condition	! ( bCSV || bAllSyncTypes )	208:4:6765:6788	375946	0	True				
ANR	375951	UnaryOperationExpression	! ( bCSV || bAllSyncTypes )		375946	0					
ANR	375952	UnaryOperator	!		375946	0					
ANR	375953	OrExpression	bCSV || bAllSyncTypes		375946	1		||			
ANR	375954	Identifier	bCSV		375946	0					
ANR	375955	Identifier	bAllSyncTypes		375946	1					
ANR	375956	CompoundStatement		2:30:31:31	375946	1					
ANR	375957	ExpressionStatement	"printf ( ""Test Parameters:\\n"" )"	209:2:6795:6823	375946	0	True				
ANR	375958	CallExpression	"printf ( ""Test Parameters:\\n"" )"		375946	0					
ANR	375959	Callee	printf		375946	0					
ANR	375960	Identifier	printf		375946	0					
ANR	375961	ArgumentList	"""Test Parameters:\\n"""		375946	1					
ANR	375962	Argument	"""Test Parameters:\\n"""		375946	0					
ANR	375963	PrimaryExpression	"""Test Parameters:\\n"""		375946	0					
ANR	375964	ExpressionStatement	"printf ( ""\\tNumber of Cores.........: %d\\n"" , procs )"	210:2:6827:6876	375946	1	True				
ANR	375965	CallExpression	"printf ( ""\\tNumber of Cores.........: %d\\n"" , procs )"		375946	0					
ANR	375966	Callee	printf		375946	0					
ANR	375967	Identifier	printf		375946	0					
ANR	375968	ArgumentList	"""\\tNumber of Cores.........: %d\\n"""		375946	1					
ANR	375969	Argument	"""\\tNumber of Cores.........: %d\\n"""		375946	0					
ANR	375970	PrimaryExpression	"""\\tNumber of Cores.........: %d\\n"""		375946	0					
ANR	375971	Argument	procs		375946	1					
ANR	375972	Identifier	procs		375946	0					
ANR	375973	ExpressionStatement	"printf ( ""\\tNumber of Threads.......: %d\\n"" , numthrds )"	211:2:6880:6932	375946	2	True				
ANR	375974	CallExpression	"printf ( ""\\tNumber of Threads.......: %d\\n"" , numthrds )"		375946	0					
ANR	375975	Callee	printf		375946	0					
ANR	375976	Identifier	printf		375946	0					
ANR	375977	ArgumentList	"""\\tNumber of Threads.......: %d\\n"""		375946	1					
ANR	375978	Argument	"""\\tNumber of Threads.......: %d\\n"""		375946	0					
ANR	375979	PrimaryExpression	"""\\tNumber of Threads.......: %d\\n"""		375946	0					
ANR	375980	Argument	numthrds		375946	1					
ANR	375981	Identifier	numthrds		375946	0					
ANR	375982	ExpressionStatement	"printf ( ""\\tSet Affinity............: %s\\n"" , bCPUAffinity ? ""yes"" : ""no"" )"	212:2:6936:7007	375946	3	True				
ANR	375983	CallExpression	"printf ( ""\\tSet Affinity............: %s\\n"" , bCPUAffinity ? ""yes"" : ""no"" )"		375946	0					
ANR	375984	Callee	printf		375946	0					
ANR	375985	Identifier	printf		375946	0					
ANR	375986	ArgumentList	"""\\tSet Affinity............: %s\\n"""		375946	1					
ANR	375987	Argument	"""\\tSet Affinity............: %s\\n"""		375946	0					
ANR	375988	PrimaryExpression	"""\\tSet Affinity............: %s\\n"""		375946	0					
ANR	375989	Argument	"bCPUAffinity ? ""yes"" : ""no"""		375946	1					
ANR	375990	ConditionalExpression	"bCPUAffinity ? ""yes"" : ""no"""		375946	0					
ANR	375991	Condition	bCPUAffinity		375946	0					
ANR	375992	Identifier	bCPUAffinity		375946	0					
ANR	375993	PrimaryExpression	"""yes"""		375946	1					
ANR	375994	PrimaryExpression	"""no"""		375946	2					
ANR	375995	ExpressionStatement	"printf ( ""\\tCount to................: %u\\n"" , goal )"	213:2:7011:7059	375946	4	True				
ANR	375996	CallExpression	"printf ( ""\\tCount to................: %u\\n"" , goal )"		375946	0					
ANR	375997	Callee	printf		375946	0					
ANR	375998	Identifier	printf		375946	0					
ANR	375999	ArgumentList	"""\\tCount to................: %u\\n"""		375946	1					
ANR	376000	Argument	"""\\tCount to................: %u\\n"""		375946	0					
ANR	376001	PrimaryExpression	"""\\tCount to................: %u\\n"""		375946	0					
ANR	376002	Argument	goal		375946	1					
ANR	376003	Identifier	goal		375946	0					
ANR	376004	ExpressionStatement	"printf ( ""\\tWork for each Thread....: %u\\n"" , thrd_WorkToDo )"	214:2:7063:7120	375946	5	True				
ANR	376005	CallExpression	"printf ( ""\\tWork for each Thread....: %u\\n"" , thrd_WorkToDo )"		375946	0					
ANR	376006	Callee	printf		375946	0					
ANR	376007	Identifier	printf		375946	0					
ANR	376008	ArgumentList	"""\\tWork for each Thread....: %u\\n"""		375946	1					
ANR	376009	Argument	"""\\tWork for each Thread....: %u\\n"""		375946	0					
ANR	376010	PrimaryExpression	"""\\tWork for each Thread....: %u\\n"""		375946	0					
ANR	376011	Argument	thrd_WorkToDo		375946	1					
ANR	376012	Identifier	thrd_WorkToDo		375946	0					
ANR	376013	ExpressionStatement	"printf ( ""\\tDummy Load Counter......: %d\\n"" , dummyLoad )"	215:2:7124:7177	375946	6	True				
ANR	376014	CallExpression	"printf ( ""\\tDummy Load Counter......: %d\\n"" , dummyLoad )"		375946	0					
ANR	376015	Callee	printf		375946	0					
ANR	376016	Identifier	printf		375946	0					
ANR	376017	ArgumentList	"""\\tDummy Load Counter......: %d\\n"""		375946	1					
ANR	376018	Argument	"""\\tDummy Load Counter......: %d\\n"""		375946	0					
ANR	376019	PrimaryExpression	"""\\tDummy Load Counter......: %d\\n"""		375946	0					
ANR	376020	Argument	dummyLoad		375946	1					
ANR	376021	Identifier	dummyLoad		375946	0					
ANR	376022	ExpressionStatement	"printf ( ""\\tSync Method used........: %s\\n"" , getSyncMethName ( syncType ) )"	216:2:7181:7250	375946	7	True				
ANR	376023	CallExpression	"printf ( ""\\tSync Method used........: %s\\n"" , getSyncMethName ( syncType ) )"		375946	0					
ANR	376024	Callee	printf		375946	0					
ANR	376025	Identifier	printf		375946	0					
ANR	376026	ArgumentList	"""\\tSync Method used........: %s\\n"""		375946	1					
ANR	376027	Argument	"""\\tSync Method used........: %s\\n"""		375946	0					
ANR	376028	PrimaryExpression	"""\\tSync Method used........: %s\\n"""		375946	0					
ANR	376029	Argument	getSyncMethName ( syncType )		375946	1					
ANR	376030	CallExpression	getSyncMethName ( syncType )		375946	0					
ANR	376031	Callee	getSyncMethName		375946	0					
ANR	376032	Identifier	getSyncMethName		375946	0					
ANR	376033	ArgumentList	syncType		375946	1					
ANR	376034	Argument	syncType		375946	0					
ANR	376035	Identifier	syncType		375946	0					
ANR	376036	ExpressionStatement	"gettimeofday ( & tvStart , NULL )"	218:1:7256:7284	375946	1	True				
ANR	376037	CallExpression	"gettimeofday ( & tvStart , NULL )"		375946	0					
ANR	376038	Callee	gettimeofday		375946	0					
ANR	376039	Identifier	gettimeofday		375946	0					
ANR	376040	ArgumentList	& tvStart		375946	1					
ANR	376041	Argument	& tvStart		375946	0					
ANR	376042	UnaryOperationExpression	& tvStart		375946	0					
ANR	376043	UnaryOperator	&		375946	0					
ANR	376044	Identifier	tvStart		375946	1					
ANR	376045	Argument	NULL		375946	1					
ANR	376046	Identifier	NULL		375946	0					
ANR	376047	ReturnType	static void		375946	1					
ANR	376048	Identifier	beginTiming		375946	2					
ANR	376049	ParameterList			375946	3					
ANR	376050	CFGEntryNode	ENTRY		375946		True				
ANR	376051	CFGExitNode	EXIT		375946		True				
ANR	376052	Symbol	bAllSyncTypes		375946						
ANR	376053	Symbol	procs		375946						
ANR	376054	Symbol	& tvStart		375946						
ANR	376055	Symbol	goal		375946						
ANR	376056	Symbol	NULL		375946						
ANR	376057	Symbol	thrd_WorkToDo		375946						
ANR	376058	Symbol	getSyncMethName		375946						
ANR	376059	Symbol	bCPUAffinity		375946						
ANR	376060	Symbol	dummyLoad		375946						
ANR	376061	Symbol	bCSV		375946						
ANR	376062	Symbol	numthrds		375946						
ANR	376063	Symbol	syncType		375946						
ANR	376064	Function	endTiming	222:0:7290:8323							
ANR	376065	FunctionDef	endTiming ()		376064	0					
ANR	376066	CompoundStatement		223:0:7318:8323	376064	0					
ANR	376067	IdentifierDeclStatement	unsigned delta ;	224:1:7321:7335	376064	0	True				
ANR	376068	IdentifierDecl	delta		376064	0					
ANR	376069	IdentifierDeclType	unsigned		376064	0					
ANR	376070	Identifier	delta		376064	1					
ANR	376071	IdentifierDeclStatement	"long sec , usec ;"	225:1:7338:7352	376064	1	True				
ANR	376072	IdentifierDecl	sec		376064	0					
ANR	376073	IdentifierDeclType	long		376064	0					
ANR	376074	Identifier	sec		376064	1					
ANR	376075	IdentifierDecl	usec		376064	1					
ANR	376076	IdentifierDeclType	long		376064	0					
ANR	376077	Identifier	usec		376064	1					
ANR	376078	IdentifierDeclStatement	long runtime ;	226:1:7355:7367	376064	2	True				
ANR	376079	IdentifierDecl	runtime		376064	0					
ANR	376080	IdentifierDeclType	long		376064	0					
ANR	376081	Identifier	runtime		376064	1					
ANR	376082	ExpressionStatement	"gettimeofday ( & tvEnd , NULL )"	228:1:7371:7397	376064	3	True				
ANR	376083	CallExpression	"gettimeofday ( & tvEnd , NULL )"		376064	0					
ANR	376084	Callee	gettimeofday		376064	0					
ANR	376085	Identifier	gettimeofday		376064	0					
ANR	376086	ArgumentList	& tvEnd		376064	1					
ANR	376087	Argument	& tvEnd		376064	0					
ANR	376088	UnaryOperationExpression	& tvEnd		376064	0					
ANR	376089	UnaryOperator	&		376064	0					
ANR	376090	Identifier	tvEnd		376064	1					
ANR	376091	Argument	NULL		376064	1					
ANR	376092	Identifier	NULL		376064	0					
ANR	376093	IfStatement	if ( tvStart . tv_usec > tvEnd . tv_usec )		376064	4					
ANR	376094	Condition	tvStart . tv_usec > tvEnd . tv_usec	229:4:7403:7433	376064	0	True				
ANR	376095	RelationalExpression	tvStart . tv_usec > tvEnd . tv_usec		376064	0		>			
ANR	376096	MemberAccess	tvStart . tv_usec		376064	0					
ANR	376097	Identifier	tvStart		376064	0					
ANR	376098	Identifier	tv_usec		376064	1					
ANR	376099	MemberAccess	tvEnd . tv_usec		376064	1					
ANR	376100	Identifier	tvEnd		376064	0					
ANR	376101	Identifier	tv_usec		376064	1					
ANR	376102	CompoundStatement		7:37:117:117	376064	1					
ANR	376103	ExpressionStatement	tvEnd . tv_sec --	230:2:7440:7454	376064	0	True				
ANR	376104	PostIncDecOperationExpression	tvEnd . tv_sec --		376064	0					
ANR	376105	MemberAccess	tvEnd . tv_sec		376064	0					
ANR	376106	Identifier	tvEnd		376064	0					
ANR	376107	Identifier	tv_sec		376064	1					
ANR	376108	IncDec	--		376064	1					
ANR	376109	ExpressionStatement	tvEnd . tv_usec += 1000000	231:2:7458:7482	376064	1	True				
ANR	376110	AssignmentExpression	tvEnd . tv_usec += 1000000		376064	0		+=			
ANR	376111	MemberAccess	tvEnd . tv_usec		376064	0					
ANR	376112	Identifier	tvEnd		376064	0					
ANR	376113	Identifier	tv_usec		376064	1					
ANR	376114	PrimaryExpression	1000000		376064	1					
ANR	376115	ExpressionStatement	sec = tvEnd . tv_sec - tvStart . tv_sec	234:1:7489:7524	376064	5	True				
ANR	376116	AssignmentExpression	sec = tvEnd . tv_sec - tvStart . tv_sec		376064	0		=			
ANR	376117	Identifier	sec		376064	0					
ANR	376118	AdditiveExpression	tvEnd . tv_sec - tvStart . tv_sec		376064	1		-			
ANR	376119	MemberAccess	tvEnd . tv_sec		376064	0					
ANR	376120	Identifier	tvEnd		376064	0					
ANR	376121	Identifier	tv_sec		376064	1					
ANR	376122	MemberAccess	tvStart . tv_sec		376064	1					
ANR	376123	Identifier	tvStart		376064	0					
ANR	376124	Identifier	tv_sec		376064	1					
ANR	376125	ExpressionStatement	usec = tvEnd . tv_usec - tvStart . tv_usec	235:1:7527:7565	376064	6	True				
ANR	376126	AssignmentExpression	usec = tvEnd . tv_usec - tvStart . tv_usec		376064	0		=			
ANR	376127	Identifier	usec		376064	0					
ANR	376128	AdditiveExpression	tvEnd . tv_usec - tvStart . tv_usec		376064	1		-			
ANR	376129	MemberAccess	tvEnd . tv_usec		376064	0					
ANR	376130	Identifier	tvEnd		376064	0					
ANR	376131	Identifier	tv_usec		376064	1					
ANR	376132	MemberAccess	tvStart . tv_usec		376064	1					
ANR	376133	Identifier	tvStart		376064	0					
ANR	376134	Identifier	tv_usec		376064	1					
ANR	376135	ExpressionStatement	delta = thrd_WorkToDo * numthrds - global_int	237:1:7569:7614	376064	7	True				
ANR	376136	AssignmentExpression	delta = thrd_WorkToDo * numthrds - global_int		376064	0		=			
ANR	376137	Identifier	delta		376064	0					
ANR	376138	AdditiveExpression	thrd_WorkToDo * numthrds - global_int		376064	1		-			
ANR	376139	MultiplicativeExpression	thrd_WorkToDo * numthrds		376064	0		*			
ANR	376140	Identifier	thrd_WorkToDo		376064	0					
ANR	376141	Identifier	numthrds		376064	1					
ANR	376142	Identifier	global_int		376064	1					
ANR	376143	IfStatement	if ( ! bAllSyncTypes )		376064	8					
ANR	376144	Condition	! bAllSyncTypes	238:4:7620:7633	376064	0	True				
ANR	376145	UnaryOperationExpression	! bAllSyncTypes		376064	0					
ANR	376146	UnaryOperator	!		376064	0					
ANR	376147	Identifier	bAllSyncTypes		376064	1					
ANR	376148	CompoundStatement		16:20:317:317	376064	1					
ANR	376149	IfStatement	if ( bCSV )		376064	0					
ANR	376150	Condition	bCSV	239:5:7643:7646	376064	0	True				
ANR	376151	Identifier	bCSV		376064	0					
ANR	376152	CompoundStatement		17:11:330:330	376064	1					
ANR	376153	ExpressionStatement	"printf ( ""%s,%d,%d,%d,%u,%u,%ld.%06.6ld\\n"" , getSyncMethName ( syncType ) , procs , numthrds , bCPUAffinity , goal , delta , sec , usec )"	240:3:7654:7781	376064	0	True				
ANR	376154	CallExpression	"printf ( ""%s,%d,%d,%d,%u,%u,%ld.%06.6ld\\n"" , getSyncMethName ( syncType ) , procs , numthrds , bCPUAffinity , goal , delta , sec , usec )"		376064	0					
ANR	376155	Callee	printf		376064	0					
ANR	376156	Identifier	printf		376064	0					
ANR	376157	ArgumentList	"""%s,%d,%d,%d,%u,%u,%ld.%06.6ld\\n"""		376064	1					
ANR	376158	Argument	"""%s,%d,%d,%d,%u,%u,%ld.%06.6ld\\n"""		376064	0					
ANR	376159	PrimaryExpression	"""%s,%d,%d,%d,%u,%u,%ld.%06.6ld\\n"""		376064	0					
ANR	376160	Argument	getSyncMethName ( syncType )		376064	1					
ANR	376161	CallExpression	getSyncMethName ( syncType )		376064	0					
ANR	376162	Callee	getSyncMethName		376064	0					
ANR	376163	Identifier	getSyncMethName		376064	0					
ANR	376164	ArgumentList	syncType		376064	1					
ANR	376165	Argument	syncType		376064	0					
ANR	376166	Identifier	syncType		376064	0					
ANR	376167	Argument	procs		376064	2					
ANR	376168	Identifier	procs		376064	0					
ANR	376169	Argument	numthrds		376064	3					
ANR	376170	Identifier	numthrds		376064	0					
ANR	376171	Argument	bCPUAffinity		376064	4					
ANR	376172	Identifier	bCPUAffinity		376064	0					
ANR	376173	Argument	goal		376064	5					
ANR	376174	Identifier	goal		376064	0					
ANR	376175	Argument	delta		376064	6					
ANR	376176	Identifier	delta		376064	0					
ANR	376177	Argument	sec		376064	7					
ANR	376178	Identifier	sec		376064	0					
ANR	376179	Argument	usec		376064	8					
ANR	376180	Identifier	usec		376064	0					
ANR	376181	ElseStatement	else		376064	0					
ANR	376182	CompoundStatement		20:9:473:473	376064	0					
ANR	376183	ExpressionStatement	"printf ( ""measured (sytem time) runtime is %ld.% 6.6ld seconds\\n"" , sec , usec )"	243:3:7797:7872	376064	0	True				
ANR	376184	CallExpression	"printf ( ""measured (sytem time) runtime is %ld.% 6.6ld seconds\\n"" , sec , usec )"		376064	0					
ANR	376185	Callee	printf		376064	0					
ANR	376186	Identifier	printf		376064	0					
ANR	376187	ArgumentList	"""measured (sytem time) runtime is %ld.% 6.6ld seconds\\n"""		376064	1					
ANR	376188	Argument	"""measured (sytem time) runtime is %ld.% 6.6ld seconds\\n"""		376064	0					
ANR	376189	PrimaryExpression	"""measured (sytem time) runtime is %ld.% 6.6ld seconds\\n"""		376064	0					
ANR	376190	Argument	sec		376064	1					
ANR	376191	Identifier	sec		376064	0					
ANR	376192	Argument	usec		376064	2					
ANR	376193	Identifier	usec		376064	0					
ANR	376194	IfStatement	if ( delta == 0 )		376064	1					
ANR	376195	Condition	delta == 0	244:6:7880:7889	376064	0	True				
ANR	376196	EqualityExpression	delta == 0		376064	0		==			
ANR	376197	Identifier	delta		376064	0					
ANR	376198	PrimaryExpression	0		376064	1					
ANR	376199	CompoundStatement		22:18:573:573	376064	1					
ANR	376200	ExpressionStatement	"printf ( ""Computation was done correctly.\\n"" )"	245:4:7898:7941	376064	0	True				
ANR	376201	CallExpression	"printf ( ""Computation was done correctly.\\n"" )"		376064	0					
ANR	376202	Callee	printf		376064	0					
ANR	376203	Identifier	printf		376064	0					
ANR	376204	ArgumentList	"""Computation was done correctly.\\n"""		376064	1					
ANR	376205	Argument	"""Computation was done correctly.\\n"""		376064	0					
ANR	376206	PrimaryExpression	"""Computation was done correctly.\\n"""		376064	0					
ANR	376207	ElseStatement	else		376064	0					
ANR	376208	CompoundStatement		24:10:634:634	376064	0					
ANR	376209	Statement	printf	247:4:7959:7964	376064	0	True				
ANR	376210	Statement	(	247:10:7965:7965	376064	1	True				
ANR	376211	Statement	"""Computation INCORRECT,\\n"""	247:11:7966:7991	376064	2	True				
ANR	376212	Statement	"""\\texpected %9u\\n"""	248:11:8004:8021	376064	3	True				
ANR	376213	Statement	"""\\treal     %9u\\n"""	249:11:8034:8051	376064	4	True				
ANR	376214	Statement	"""\\toff by   %9u\\n"""	250:11:8064:8081	376064	5	True				
ANR	376215	Statement	","	250:29:8082:8082	376064	6	True				
ANR	376216	Statement	thrd_WorkToDo	251:5:8089:8101	376064	7	True				
ANR	376217	Statement	*	251:19:8103:8103	376064	8	True				
ANR	376218	Statement	numthrds	251:21:8105:8112	376064	9	True				
ANR	376219	Statement	","	251:29:8113:8113	376064	10	True				
ANR	376220	Statement	global_int	252:5:8120:8129	376064	11	True				
ANR	376221	Statement	","	252:15:8130:8130	376064	12	True				
ANR	376222	Statement	delta	253:5:8137:8141	376064	13	True				
ANR	376223	Statement	)	253:10:8142:8142	376064	14	True				
ANR	376224	ExpressionStatement		253:11:8143:8143	376064	15	True				
ANR	376225	ExpressionStatement	runtime = sec * 1000 + ( usec / 1000 )	258:1:8159:8195	376064	9	True				
ANR	376226	AssignmentExpression	runtime = sec * 1000 + ( usec / 1000 )		376064	0		=			
ANR	376227	Identifier	runtime		376064	0					
ANR	376228	AdditiveExpression	sec * 1000 + ( usec / 1000 )		376064	1		+			
ANR	376229	MultiplicativeExpression	sec * 1000		376064	0		*			
ANR	376230	Identifier	sec		376064	0					
ANR	376231	PrimaryExpression	1000		376064	1					
ANR	376232	MultiplicativeExpression	usec / 1000		376064	1		/			
ANR	376233	Identifier	usec		376064	0					
ANR	376234	PrimaryExpression	1000		376064	1					
ANR	376235	ExpressionStatement	totalRuntime += runtime	259:1:8198:8221	376064	10	True				
ANR	376236	AssignmentExpression	totalRuntime += runtime		376064	0		+=			
ANR	376237	Identifier	totalRuntime		376064	0					
ANR	376238	Identifier	runtime		376064	1					
ANR	376239	IfStatement	if ( runtime < minRuntime )		376064	11					
ANR	376240	Condition	runtime < minRuntime	260:4:8227:8246	376064	0	True				
ANR	376241	RelationalExpression	runtime < minRuntime		376064	0		<			
ANR	376242	Identifier	runtime		376064	0					
ANR	376243	Identifier	minRuntime		376064	1					
ANR	376244	ExpressionStatement	minRuntime = runtime	261:2:8251:8271	376064	1	True				
ANR	376245	AssignmentExpression	minRuntime = runtime		376064	0		=			
ANR	376246	Identifier	minRuntime		376064	0					
ANR	376247	Identifier	runtime		376064	1					
ANR	376248	IfStatement	if ( runtime > maxRuntime )		376064	12					
ANR	376249	Condition	runtime > maxRuntime	262:4:8277:8296	376064	0	True				
ANR	376250	RelationalExpression	runtime > maxRuntime		376064	0		>			
ANR	376251	Identifier	runtime		376064	0					
ANR	376252	Identifier	maxRuntime		376064	1					
ANR	376253	ExpressionStatement	maxRuntime = runtime	263:2:8301:8321	376064	1	True				
ANR	376254	AssignmentExpression	maxRuntime = runtime		376064	0		=			
ANR	376255	Identifier	maxRuntime		376064	0					
ANR	376256	Identifier	runtime		376064	1					
ANR	376257	ReturnType	static void		376064	1					
ANR	376258	Identifier	endTiming		376064	2					
ANR	376259	ParameterList			376064	3					
ANR	376260	CFGEntryNode	ENTRY		376064		True				
ANR	376261	CFGExitNode	EXIT		376064		True				
ANR	376262	Symbol	procs		376064						
ANR	376263	Symbol	global_int		376064						
ANR	376264	Symbol	delta		376064						
ANR	376265	Symbol	numthrds		376064						
ANR	376266	Symbol	usec		376064						
ANR	376267	Symbol	sec		376064						
ANR	376268	Symbol	thrd_WorkToDo		376064						
ANR	376269	Symbol	getSyncMethName		376064						
ANR	376270	Symbol	bCPUAffinity		376064						
ANR	376271	Symbol	& tvEnd		376064						
ANR	376272	Symbol	tvEnd		376064						
ANR	376273	Symbol	tvEnd . tv_usec		376064						
ANR	376274	Symbol	NULL		376064						
ANR	376275	Symbol	goal		376064						
ANR	376276	Symbol	minRuntime		376064						
ANR	376277	Symbol	runtime		376064						
ANR	376278	Symbol	tvEnd . tv_sec		376064						
ANR	376279	Symbol	bCSV		376064						
ANR	376280	Symbol	bAllSyncTypes		376064						
ANR	376281	Symbol	totalRuntime		376064						
ANR	376282	Symbol	tvStart		376064						
ANR	376283	Symbol	tvStart . tv_sec		376064						
ANR	376284	Symbol	syncType		376064						
ANR	376285	Symbol	tvStart . tv_usec		376064						
ANR	376286	Symbol	maxRuntime		376064						
ANR	376287	Function	usage	267:0:8327:8904							
ANR	376288	FunctionDef	usage ()		376287	0					
ANR	376289	CompoundStatement		269:0:8351:8904	376287	0					
ANR	376290	ExpressionStatement	"fprintf ( stderr , ""Usage: syncdemo -a -c<num> -t<num>\\n"" )"	270:1:8354:8409	376287	0	True				
ANR	376291	CallExpression	"fprintf ( stderr , ""Usage: syncdemo -a -c<num> -t<num>\\n"" )"		376287	0					
ANR	376292	Callee	fprintf		376287	0					
ANR	376293	Identifier	fprintf		376287	0					
ANR	376294	ArgumentList	stderr		376287	1					
ANR	376295	Argument	stderr		376287	0					
ANR	376296	Identifier	stderr		376287	0					
ANR	376297	Argument	"""Usage: syncdemo -a -c<num> -t<num>\\n"""		376287	1					
ANR	376298	PrimaryExpression	"""Usage: syncdemo -a -c<num> -t<num>\\n"""		376287	0					
ANR	376299	ExpressionStatement	"fprintf ( stderr , ""\\t-a        set CPU affinity\\n"" )"	271:1:8412:8461	376287	1	True				
ANR	376300	CallExpression	"fprintf ( stderr , ""\\t-a        set CPU affinity\\n"" )"		376287	0					
ANR	376301	Callee	fprintf		376287	0					
ANR	376302	Identifier	fprintf		376287	0					
ANR	376303	ArgumentList	stderr		376287	1					
ANR	376304	Argument	stderr		376287	0					
ANR	376305	Identifier	stderr		376287	0					
ANR	376306	Argument	"""\\t-a        set CPU affinity\\n"""		376287	1					
ANR	376307	PrimaryExpression	"""\\t-a        set CPU affinity\\n"""		376287	0					
ANR	376308	ExpressionStatement	"fprintf ( stderr , ""\\t-i        number of iterations\\n"" )"	272:1:8464:8517	376287	2	True				
ANR	376309	CallExpression	"fprintf ( stderr , ""\\t-i        number of iterations\\n"" )"		376287	0					
ANR	376310	Callee	fprintf		376287	0					
ANR	376311	Identifier	fprintf		376287	0					
ANR	376312	ArgumentList	stderr		376287	1					
ANR	376313	Argument	stderr		376287	0					
ANR	376314	Identifier	stderr		376287	0					
ANR	376315	Argument	"""\\t-i        number of iterations\\n"""		376287	1					
ANR	376316	PrimaryExpression	"""\\t-i        number of iterations\\n"""		376287	0					
ANR	376317	ExpressionStatement	"fprintf ( stderr , ""\\t-c<num>   count to <num>\\n"" )"	273:1:8520:8567	376287	3	True				
ANR	376318	CallExpression	"fprintf ( stderr , ""\\t-c<num>   count to <num>\\n"" )"		376287	0					
ANR	376319	Callee	fprintf		376287	0					
ANR	376320	Identifier	fprintf		376287	0					
ANR	376321	ArgumentList	stderr		376287	1					
ANR	376322	Argument	stderr		376287	0					
ANR	376323	Identifier	stderr		376287	0					
ANR	376324	Argument	"""\\t-c<num>   count to <num>\\n"""		376287	1					
ANR	376325	PrimaryExpression	"""\\t-c<num>   count to <num>\\n"""		376287	0					
ANR	376326	ExpressionStatement	"fprintf ( stderr , ""\\t-d<num>   dummy load, <num> iterations\\n"" )"	274:1:8570:8631	376287	4	True				
ANR	376327	CallExpression	"fprintf ( stderr , ""\\t-d<num>   dummy load, <num> iterations\\n"" )"		376287	0					
ANR	376328	Callee	fprintf		376287	0					
ANR	376329	Identifier	fprintf		376287	0					
ANR	376330	ArgumentList	stderr		376287	1					
ANR	376331	Argument	stderr		376287	0					
ANR	376332	Identifier	stderr		376287	0					
ANR	376333	Argument	"""\\t-d<num>   dummy load, <num> iterations\\n"""		376287	1					
ANR	376334	PrimaryExpression	"""\\t-d<num>   dummy load, <num> iterations\\n"""		376287	0					
ANR	376335	ExpressionStatement	"fprintf ( stderr , ""\\t-t<num>   number of threads to use\\n"" )"	275:1:8634:8691	376287	5	True				
ANR	376336	CallExpression	"fprintf ( stderr , ""\\t-t<num>   number of threads to use\\n"" )"		376287	0					
ANR	376337	Callee	fprintf		376287	0					
ANR	376338	Identifier	fprintf		376287	0					
ANR	376339	ArgumentList	stderr		376287	1					
ANR	376340	Argument	stderr		376287	0					
ANR	376341	Identifier	stderr		376287	0					
ANR	376342	Argument	"""\\t-t<num>   number of threads to use\\n"""		376287	1					
ANR	376343	PrimaryExpression	"""\\t-t<num>   number of threads to use\\n"""		376287	0					
ANR	376344	ExpressionStatement	"fprintf ( stderr , ""\\t-s<type>  sync-type to use (none, atomic, mutex, spin, semaphore)\\n"" )"	276:1:8694:8782	376287	6	True				
ANR	376345	CallExpression	"fprintf ( stderr , ""\\t-s<type>  sync-type to use (none, atomic, mutex, spin, semaphore)\\n"" )"		376287	0					
ANR	376346	Callee	fprintf		376287	0					
ANR	376347	Identifier	fprintf		376287	0					
ANR	376348	ArgumentList	stderr		376287	1					
ANR	376349	Argument	stderr		376287	0					
ANR	376350	Identifier	stderr		376287	0					
ANR	376351	Argument	"""\\t-s<type>  sync-type to use (none, atomic, mutex, spin, semaphore)\\n"""		376287	1					
ANR	376352	PrimaryExpression	"""\\t-s<type>  sync-type to use (none, atomic, mutex, spin, semaphore)\\n"""		376287	0					
ANR	376353	ExpressionStatement	"fprintf ( stderr , ""\\t-C        generate CSV output\\n"" )"	277:1:8785:8837	376287	7	True				
ANR	376354	CallExpression	"fprintf ( stderr , ""\\t-C        generate CSV output\\n"" )"		376287	0					
ANR	376355	Callee	fprintf		376287	0					
ANR	376356	Identifier	fprintf		376287	0					
ANR	376357	ArgumentList	stderr		376287	1					
ANR	376358	Argument	stderr		376287	0					
ANR	376359	Identifier	stderr		376287	0					
ANR	376360	Argument	"""\\t-C        generate CSV output\\n"""		376287	1					
ANR	376361	PrimaryExpression	"""\\t-C        generate CSV output\\n"""		376287	0					
ANR	376362	ExpressionStatement	"fprintf ( stderr , ""\\t-A        test ALL sync types\\n"" )"	278:1:8840:8892	376287	8	True				
ANR	376363	CallExpression	"fprintf ( stderr , ""\\t-A        test ALL sync types\\n"" )"		376287	0					
ANR	376364	Callee	fprintf		376287	0					
ANR	376365	Identifier	fprintf		376287	0					
ANR	376366	ArgumentList	stderr		376287	1					
ANR	376367	Argument	stderr		376287	0					
ANR	376368	Identifier	stderr		376287	0					
ANR	376369	Argument	"""\\t-A        test ALL sync types\\n"""		376287	1					
ANR	376370	PrimaryExpression	"""\\t-A        test ALL sync types\\n"""		376287	0					
ANR	376371	ExpressionStatement	exit ( 2 )	279:1:8895:8902	376287	9	True				
ANR	376372	CallExpression	exit ( 2 )		376287	0					
ANR	376373	Callee	exit		376287	0					
ANR	376374	Identifier	exit		376287	0					
ANR	376375	ArgumentList	2		376287	1					
ANR	376376	Argument	2		376287	0					
ANR	376377	PrimaryExpression	2		376287	0					
ANR	376378	ReturnType	static void		376287	1					
ANR	376379	Identifier	usage		376287	2					
ANR	376380	ParameterList			376287	3					
ANR	376381	CFGEntryNode	ENTRY		376287		True				
ANR	376382	CFGExitNode	EXIT		376287		True				
ANR	376383	Symbol	stderr		376287						
ANR	376384	Function	singleTest	285:0:8957:9543							
ANR	376385	FunctionDef	singleTest ()		376384	0					
ANR	376386	CompoundStatement		287:0:8986:9543	376384	0					
ANR	376387	IdentifierDeclStatement	int i ;	288:1:8989:8994	376384	0	True				
ANR	376388	IdentifierDecl	i		376384	0					
ANR	376389	IdentifierDeclType	int		376384	0					
ANR	376390	Identifier	i		376384	1					
ANR	376391	IdentifierDeclStatement	pthread_t * thrs ;	289:1:8997:9012	376384	1	True				
ANR	376392	IdentifierDecl	* thrs		376384	0					
ANR	376393	IdentifierDeclType	pthread_t *		376384	0					
ANR	376394	Identifier	thrs		376384	1					
ANR	376395	ExpressionStatement	global_int = 0	291:1:9016:9030	376384	2	True				
ANR	376396	AssignmentExpression	global_int = 0		376384	0		=			
ANR	376397	Identifier	global_int		376384	0					
ANR	376398	PrimaryExpression	0		376384	1					
ANR	376399	ExpressionStatement	bStartRun = 0	292:1:9033:9046	376384	3	True				
ANR	376400	AssignmentExpression	bStartRun = 0		376384	0		=			
ANR	376401	Identifier	bStartRun		376384	0					
ANR	376402	PrimaryExpression	0		376384	1					
ANR	376403	ExpressionStatement	thrs = malloc ( sizeof ( pthread_t ) * numthrds )	294:1:9050:9093	376384	4	True				
ANR	376404	AssignmentExpression	thrs = malloc ( sizeof ( pthread_t ) * numthrds )		376384	0		=			
ANR	376405	Identifier	thrs		376384	0					
ANR	376406	CallExpression	malloc ( sizeof ( pthread_t ) * numthrds )		376384	1					
ANR	376407	Callee	malloc		376384	0					
ANR	376408	Identifier	malloc		376384	0					
ANR	376409	ArgumentList	sizeof ( pthread_t ) * numthrds		376384	1					
ANR	376410	Argument	sizeof ( pthread_t ) * numthrds		376384	0					
ANR	376411	MultiplicativeExpression	sizeof ( pthread_t ) * numthrds		376384	0		*			
ANR	376412	SizeofExpression	sizeof ( pthread_t )		376384	0					
ANR	376413	Sizeof	sizeof		376384	0					
ANR	376414	SizeofOperand	pthread_t		376384	1					
ANR	376415	Identifier	numthrds		376384	1					
ANR	376416	IfStatement	if ( thrs == NULL )		376384	5					
ANR	376417	Condition	thrs == NULL	295:5:9100:9111	376384	0	True				
ANR	376418	EqualityExpression	thrs == NULL		376384	0		==			
ANR	376419	Identifier	thrs		376384	0					
ANR	376420	Identifier	NULL		376384	1					
ANR	376421	CompoundStatement		9:19:127:127	376384	1					
ANR	376422	ExpressionStatement	"perror ( ""malloc"" )"	296:2:9118:9136	376384	0	True				
ANR	376423	CallExpression	"perror ( ""malloc"" )"		376384	0					
ANR	376424	Callee	perror		376384	0					
ANR	376425	Identifier	perror		376384	0					
ANR	376426	ArgumentList	"""malloc"""		376384	1					
ANR	376427	Argument	"""malloc"""		376384	0					
ANR	376428	PrimaryExpression	"""malloc"""		376384	0					
ANR	376429	ExpressionStatement	exit ( 1 )	297:2:9140:9147	376384	1	True				
ANR	376430	CallExpression	exit ( 1 )		376384	0					
ANR	376431	Callee	exit		376384	0					
ANR	376432	Identifier	exit		376384	0					
ANR	376433	ArgumentList	1		376384	1					
ANR	376434	Argument	1		376384	0					
ANR	376435	PrimaryExpression	1		376384	0					
ANR	376436	ExpressionStatement	thrd_WorkToDo = goal / numthrds	300:1:9154:9185	376384	6	True				
ANR	376437	AssignmentExpression	thrd_WorkToDo = goal / numthrds		376384	0		=			
ANR	376438	Identifier	thrd_WorkToDo		376384	0					
ANR	376439	MultiplicativeExpression	goal / numthrds		376384	1		/			
ANR	376440	Identifier	goal		376384	0					
ANR	376441	Identifier	numthrds		376384	1					
ANR	376442	ForStatement	for ( i = 0 ; i < numthrds ; i ++ )		376384	7					
ANR	376443	ForInit	i = 0 ;	302:6:9194:9199	376384	0	True				
ANR	376444	AssignmentExpression	i = 0		376384	0		=			
ANR	376445	Identifier	i		376384	0					
ANR	376446	PrimaryExpression	0		376384	1					
ANR	376447	Condition	i < numthrds	302:13:9201:9212	376384	1	True				
ANR	376448	RelationalExpression	i < numthrds		376384	0		<			
ANR	376449	Identifier	i		376384	0					
ANR	376450	Identifier	numthrds		376384	1					
ANR	376451	PostIncDecOperationExpression	i ++	302:27:9215:9217	376384	2	True				
ANR	376452	Identifier	i		376384	0					
ANR	376453	IncDec	++		376384	1					
ANR	376454	CompoundStatement		16:32:233:233	376384	3					
ANR	376455	IfStatement	"if ( pthread_create ( & thrs [ i ] , NULL , workerThread , ( void * ) ( long ) i ) )"		376384	0					
ANR	376456	Condition	"pthread_create ( & thrs [ i ] , NULL , workerThread , ( void * ) ( long ) i )"	303:5:9227:9289	376384	0	True				
ANR	376457	CallExpression	"pthread_create ( & thrs [ i ] , NULL , workerThread , ( void * ) ( long ) i )"		376384	0					
ANR	376458	Callee	pthread_create		376384	0					
ANR	376459	Identifier	pthread_create		376384	0					
ANR	376460	ArgumentList	& thrs [ i ]		376384	1					
ANR	376461	Argument	& thrs [ i ]		376384	0					
ANR	376462	UnaryOperationExpression	& thrs [ i ]		376384	0					
ANR	376463	UnaryOperator	&		376384	0					
ANR	376464	ArrayIndexing	thrs [ i ]		376384	1					
ANR	376465	Identifier	thrs		376384	0					
ANR	376466	Identifier	i		376384	1					
ANR	376467	Argument	NULL		376384	1					
ANR	376468	Identifier	NULL		376384	0					
ANR	376469	Argument	workerThread		376384	2					
ANR	376470	Identifier	workerThread		376384	0					
ANR	376471	Argument	( void * ) ( long ) i		376384	3					
ANR	376472	CastExpression	( void * ) ( long ) i		376384	0					
ANR	376473	CastTarget	void *		376384	0					
ANR	376474	CastExpression	( long ) i		376384	1					
ANR	376475	CastTarget	long		376384	0					
ANR	376476	Identifier	i		376384	1					
ANR	376477	CompoundStatement		17:70:305:305	376384	1					
ANR	376478	ExpressionStatement	"perror ( ""pthread_create"" )"	304:3:9297:9323	376384	0	True				
ANR	376479	CallExpression	"perror ( ""pthread_create"" )"		376384	0					
ANR	376480	Callee	perror		376384	0					
ANR	376481	Identifier	perror		376384	0					
ANR	376482	ArgumentList	"""pthread_create"""		376384	1					
ANR	376483	Argument	"""pthread_create"""		376384	0					
ANR	376484	PrimaryExpression	"""pthread_create"""		376384	0					
ANR	376485	ExpressionStatement	procs = i	305:3:9328:9337	376384	1	True				
ANR	376486	AssignmentExpression	procs = i		376384	0		=			
ANR	376487	Identifier	procs		376384	0					
ANR	376488	Identifier	i		376384	1					
ANR	376489	BreakStatement	break ;	306:3:9342:9347	376384	2	True				
ANR	376490	ExpressionStatement	beginTiming ( )	310:1:9358:9371	376384	8	True				
ANR	376491	CallExpression	beginTiming ( )		376384	0					
ANR	376492	Callee	beginTiming		376384	0					
ANR	376493	Identifier	beginTiming		376384	0					
ANR	376494	ArgumentList			376384	1					
ANR	376495	ExpressionStatement	bStartRun = 1	311:1:9374:9387	376384	9	True				
ANR	376496	AssignmentExpression	bStartRun = 1		376384	0		=			
ANR	376497	Identifier	bStartRun		376384	0					
ANR	376498	PrimaryExpression	1		376384	1					
ANR	376499	ForStatement	for ( i = 0 ; i < numthrds ; i ++ )		376384	10					
ANR	376500	ForInit	i = 0 ;	313:6:9452:9457	376384	0	True				
ANR	376501	AssignmentExpression	i = 0		376384	0		=			
ANR	376502	Identifier	i		376384	0					
ANR	376503	PrimaryExpression	0		376384	1					
ANR	376504	Condition	i < numthrds	313:13:9459:9470	376384	1	True				
ANR	376505	RelationalExpression	i < numthrds		376384	0		<			
ANR	376506	Identifier	i		376384	0					
ANR	376507	Identifier	numthrds		376384	1					
ANR	376508	PostIncDecOperationExpression	i ++	313:27:9473:9475	376384	2	True				
ANR	376509	Identifier	i		376384	0					
ANR	376510	IncDec	++		376384	1					
ANR	376511	ExpressionStatement	"pthread_join ( thrs [ i ] , NULL )"	314:2:9480:9509	376384	3	True				
ANR	376512	CallExpression	"pthread_join ( thrs [ i ] , NULL )"		376384	0					
ANR	376513	Callee	pthread_join		376384	0					
ANR	376514	Identifier	pthread_join		376384	0					
ANR	376515	ArgumentList	thrs [ i ]		376384	1					
ANR	376516	Argument	thrs [ i ]		376384	0					
ANR	376517	ArrayIndexing	thrs [ i ]		376384	0					
ANR	376518	Identifier	thrs		376384	0					
ANR	376519	Identifier	i		376384	1					
ANR	376520	Argument	NULL		376384	1					
ANR	376521	Identifier	NULL		376384	0					
ANR	376522	ExpressionStatement	endTiming ( )	316:1:9513:9524	376384	11	True				
ANR	376523	CallExpression	endTiming ( )		376384	0					
ANR	376524	Callee	endTiming		376384	0					
ANR	376525	Identifier	endTiming		376384	0					
ANR	376526	ArgumentList			376384	1					
ANR	376527	ExpressionStatement	free ( thrs )	318:1:9528:9540	376384	12	True				
ANR	376528	CallExpression	free ( thrs )		376384	0					
ANR	376529	Callee	free		376384	0					
ANR	376530	Identifier	free		376384	0					
ANR	376531	ArgumentList	thrs		376384	1					
ANR	376532	Argument	thrs		376384	0					
ANR	376533	Identifier	thrs		376384	0					
ANR	376534	ReturnType	static void		376384	1					
ANR	376535	Identifier	singleTest		376384	2					
ANR	376536	ParameterList			376384	3					
ANR	376537	CFGEntryNode	ENTRY		376384		True				
ANR	376538	CFGExitNode	EXIT		376384		True				
ANR	376539	Symbol	malloc		376384						
ANR	376540	Symbol	bStartRun		376384						
ANR	376541	Symbol	procs		376384						
ANR	376542	Symbol	thrs		376384						
ANR	376543	Symbol	NULL		376384						
ANR	376544	Symbol	goal		376384						
ANR	376545	Symbol	global_int		376384						
ANR	376546	Symbol	workerThread		376384						
ANR	376547	Symbol	i		376384						
ANR	376548	Symbol	numthrds		376384						
ANR	376549	Symbol	* thrs		376384						
ANR	376550	Symbol	* i		376384						
ANR	376551	Symbol	thrd_WorkToDo		376384						
ANR	376552	Symbol	pthread_create		376384						
ANR	376553	Function	dispRuntime	327:0:9724:9881							
ANR	376554	FunctionDef	dispRuntime (unsigned rt)		376553	0					
ANR	376555	CompoundStatement		329:0:9756:9881	376553	0					
ANR	376556	Statement	static	330:1:9759:9764	376553	0	True				
ANR	376557	IdentifierDeclStatement	char * fmtbuf ;	330:8:9766:9778	376553	1	True				
ANR	376558	IdentifierDecl	* fmtbuf		376553	0					
ANR	376559	IdentifierDeclType	char *		376553	0					
ANR	376560	Identifier	fmtbuf		376553	1					
ANR	376561	ExpressionStatement	fmtbuf = malloc ( 32 )	332:1:9782:9801	376553	2	True				
ANR	376562	AssignmentExpression	fmtbuf = malloc ( 32 )		376553	0		=			
ANR	376563	Identifier	fmtbuf		376553	0					
ANR	376564	CallExpression	malloc ( 32 )		376553	1					
ANR	376565	Callee	malloc		376553	0					
ANR	376566	Identifier	malloc		376553	0					
ANR	376567	ArgumentList	32		376553	1					
ANR	376568	Argument	32		376553	0					
ANR	376569	PrimaryExpression	32		376553	0					
ANR	376570	ExpressionStatement	"snprintf ( fmtbuf , 32 , ""%u.%03.3u"" , rt / 1000 , rt % 1000 )"	333:1:9804:9862	376553	3	True				
ANR	376571	CallExpression	"snprintf ( fmtbuf , 32 , ""%u.%03.3u"" , rt / 1000 , rt % 1000 )"		376553	0					
ANR	376572	Callee	snprintf		376553	0					
ANR	376573	Identifier	snprintf		376553	0					
ANR	376574	ArgumentList	fmtbuf		376553	1					
ANR	376575	Argument	fmtbuf		376553	0					
ANR	376576	Identifier	fmtbuf		376553	0					
ANR	376577	Argument	32		376553	1					
ANR	376578	PrimaryExpression	32		376553	0					
ANR	376579	Argument	"""%u.%03.3u"""		376553	2					
ANR	376580	PrimaryExpression	"""%u.%03.3u"""		376553	0					
ANR	376581	Argument	rt / 1000		376553	3					
ANR	376582	MultiplicativeExpression	rt / 1000		376553	0		/			
ANR	376583	Identifier	rt		376553	0					
ANR	376584	PrimaryExpression	1000		376553	1					
ANR	376585	Argument	rt % 1000		376553	4					
ANR	376586	MultiplicativeExpression	rt % 1000		376553	0		%			
ANR	376587	Identifier	rt		376553	0					
ANR	376588	PrimaryExpression	1000		376553	1					
ANR	376589	ReturnStatement	return ( fmtbuf ) ;	335:1:9865:9879	376553	4	True				
ANR	376590	Identifier	fmtbuf		376553	0					
ANR	376591	ReturnType	char *		376553	1					
ANR	376592	Identifier	dispRuntime		376553	2					
ANR	376593	ParameterList	unsigned rt		376553	3					
ANR	376594	Parameter	unsigned rt	328:12:9743:9753	376553	0	True				
ANR	376595	ParameterType	unsigned		376553	0					
ANR	376596	Identifier	rt		376553	1					
ANR	376597	CFGEntryNode	ENTRY		376553		True				
ANR	376598	CFGExitNode	EXIT		376553		True				
ANR	376599	Symbol	malloc		376553						
ANR	376600	Symbol	rt		376553						
ANR	376601	Symbol	fmtbuf		376553						
ANR	376602	Function	doTest	339:0:9885:10518							
ANR	376603	FunctionDef	doTest (syncType_t st)		376602	0					
ANR	376604	CompoundStatement		340:0:9907:10518	376602	0					
ANR	376605	IdentifierDeclStatement	int i ;	341:1:9910:9915	376602	0	True				
ANR	376606	IdentifierDecl	i		376602	0					
ANR	376607	IdentifierDeclType	int		376602	0					
ANR	376608	Identifier	i		376602	1					
ANR	376609	ExpressionStatement	syncType = st	343:1:9919:9932	376602	1	True				
ANR	376610	AssignmentExpression	syncType = st		376602	0		=			
ANR	376611	Identifier	syncType		376602	0					
ANR	376612	Identifier	st		376602	1					
ANR	376613	ExpressionStatement	totalRuntime = 0	344:1:9935:9951	376602	2	True				
ANR	376614	AssignmentExpression	totalRuntime = 0		376602	0		=			
ANR	376615	Identifier	totalRuntime		376602	0					
ANR	376616	PrimaryExpression	0		376602	1					
ANR	376617	ExpressionStatement	minRuntime = 999999999	345:1:9954:9976	376602	3	True				
ANR	376618	AssignmentExpression	minRuntime = 999999999		376602	0		=			
ANR	376619	Identifier	minRuntime		376602	0					
ANR	376620	PrimaryExpression	999999999		376602	1					
ANR	376621	ExpressionStatement	maxRuntime = 0	346:1:9979:9993	376602	4	True				
ANR	376622	AssignmentExpression	maxRuntime = 0		376602	0		=			
ANR	376623	Identifier	maxRuntime		376602	0					
ANR	376624	PrimaryExpression	0		376602	1					
ANR	376625	ForStatement	for ( i = 0 ; i < numIterations ; ++ i )		376602	5					
ANR	376626	ForInit	i = 0 ;	347:5:10000:10006	376602	0	True				
ANR	376627	AssignmentExpression	i = 0		376602	0		=			
ANR	376628	Identifier	i		376602	0					
ANR	376629	PrimaryExpression	0		376602	1					
ANR	376630	Condition	i < numIterations	347:13:10008:10024	376602	1	True				
ANR	376631	RelationalExpression	i < numIterations		376602	0		<			
ANR	376632	Identifier	i		376602	0					
ANR	376633	Identifier	numIterations		376602	1					
ANR	376634	UnaryExpression	++ i	347:33:10028:10030	376602	2	True				
ANR	376635	IncDec	++		376602	0					
ANR	376636	Identifier	i		376602	1					
ANR	376637	CompoundStatement		8:38:125:125	376602	3					
ANR	376638	ExpressionStatement	singleTest ( )	349:2:10079:10091	376602	0	True				
ANR	376639	CallExpression	singleTest ( )		376602	0					
ANR	376640	Callee	singleTest		376602	0					
ANR	376641	Identifier	singleTest		376602	0					
ANR	376642	ArgumentList			376602	1					
ANR	376643	ExpressionStatement	"printf ( ""%-10s: total runtime %6ld.%3.3u, avg %s, min %s, max %s\\n"" , getSyncMethName ( st ) , ( long ) totalRuntime / 1000 , ( unsigned ) ( totalRuntime % 1000 ) , dispRuntime ( ( unsigned ) ( totalRuntime / numIterations ) ) , dispRuntime ( minRuntime ) , dispRuntime ( maxRuntime ) )"	355:1:10224:10516	376602	6	True				
ANR	376644	CallExpression	"printf ( ""%-10s: total runtime %6ld.%3.3u, avg %s, min %s, max %s\\n"" , getSyncMethName ( st ) , ( long ) totalRuntime / 1000 , ( unsigned ) ( totalRuntime % 1000 ) , dispRuntime ( ( unsigned ) ( totalRuntime / numIterations ) ) , dispRuntime ( minRuntime ) , dispRuntime ( maxRuntime ) )"		376602	0					
ANR	376645	Callee	printf		376602	0					
ANR	376646	Identifier	printf		376602	0					
ANR	376647	ArgumentList	"""%-10s: total runtime %6ld.%3.3u, avg %s, min %s, max %s\\n"""		376602	1					
ANR	376648	Argument	"""%-10s: total runtime %6ld.%3.3u, avg %s, min %s, max %s\\n"""		376602	0					
ANR	376649	PrimaryExpression	"""%-10s: total runtime %6ld.%3.3u, avg %s, min %s, max %s\\n"""		376602	0					
ANR	376650	Argument	getSyncMethName ( st )		376602	1					
ANR	376651	CallExpression	getSyncMethName ( st )		376602	0					
ANR	376652	Callee	getSyncMethName		376602	0					
ANR	376653	Identifier	getSyncMethName		376602	0					
ANR	376654	ArgumentList	st		376602	1					
ANR	376655	Argument	st		376602	0					
ANR	376656	Identifier	st		376602	0					
ANR	376657	Argument	( long ) totalRuntime / 1000		376602	2					
ANR	376658	MultiplicativeExpression	( long ) totalRuntime / 1000		376602	0		/			
ANR	376659	CastExpression	( long ) totalRuntime		376602	0					
ANR	376660	CastTarget	long		376602	0					
ANR	376661	Identifier	totalRuntime		376602	1					
ANR	376662	PrimaryExpression	1000		376602	1					
ANR	376663	Argument	( unsigned ) ( totalRuntime % 1000 )		376602	3					
ANR	376664	CastExpression	( unsigned ) ( totalRuntime % 1000 )		376602	0					
ANR	376665	CastTarget	unsigned		376602	0					
ANR	376666	MultiplicativeExpression	totalRuntime % 1000		376602	1		%			
ANR	376667	Identifier	totalRuntime		376602	0					
ANR	376668	PrimaryExpression	1000		376602	1					
ANR	376669	Argument	dispRuntime ( ( unsigned ) ( totalRuntime / numIterations ) )		376602	4					
ANR	376670	CallExpression	dispRuntime ( ( unsigned ) ( totalRuntime / numIterations ) )		376602	0					
ANR	376671	Callee	dispRuntime		376602	0					
ANR	376672	Identifier	dispRuntime		376602	0					
ANR	376673	ArgumentList	( unsigned ) ( totalRuntime / numIterations )		376602	1					
ANR	376674	Argument	( unsigned ) ( totalRuntime / numIterations )		376602	0					
ANR	376675	CastExpression	( unsigned ) ( totalRuntime / numIterations )		376602	0					
ANR	376676	CastTarget	unsigned		376602	0					
ANR	376677	MultiplicativeExpression	totalRuntime / numIterations		376602	1		/			
ANR	376678	Identifier	totalRuntime		376602	0					
ANR	376679	Identifier	numIterations		376602	1					
ANR	376680	Argument	dispRuntime ( minRuntime )		376602	5					
ANR	376681	CallExpression	dispRuntime ( minRuntime )		376602	0					
ANR	376682	Callee	dispRuntime		376602	0					
ANR	376683	Identifier	dispRuntime		376602	0					
ANR	376684	ArgumentList	minRuntime		376602	1					
ANR	376685	Argument	minRuntime		376602	0					
ANR	376686	Identifier	minRuntime		376602	0					
ANR	376687	Argument	dispRuntime ( maxRuntime )		376602	6					
ANR	376688	CallExpression	dispRuntime ( maxRuntime )		376602	0					
ANR	376689	Callee	dispRuntime		376602	0					
ANR	376690	Identifier	dispRuntime		376602	0					
ANR	376691	ArgumentList	maxRuntime		376602	1					
ANR	376692	Argument	maxRuntime		376602	0					
ANR	376693	Identifier	maxRuntime		376602	0					
ANR	376694	Identifier	doTest		376602	1					
ANR	376695	ParameterList	syncType_t st		376602	2					
ANR	376696	Parameter	syncType_t st	339:7:9892:9904	376602	0	True				
ANR	376697	ParameterType	syncType_t		376602	0					
ANR	376698	Identifier	st		376602	1					
ANR	376699	CFGEntryNode	ENTRY		376602		True				
ANR	376700	CFGExitNode	EXIT		376602		True				
ANR	376701	Symbol	st		376602						
ANR	376702	Symbol	totalRuntime		376602						
ANR	376703	Symbol	minRuntime		376602						
ANR	376704	Symbol	numIterations		376602						
ANR	376705	Symbol	getSyncMethName		376602						
ANR	376706	Symbol	dispRuntime		376602						
ANR	376707	Symbol	i		376602						
ANR	376708	Symbol	syncType		376602						
ANR	376709	Symbol	maxRuntime		376602						
ANR	376710	Function	main	364:0:10522:12616							
ANR	376711	FunctionDef	"main (int argc , char * argv [ ])"		376710	0					
ANR	376712	CompoundStatement		366:0:10555:12616	376710	0					
ANR	376713	IdentifierDeclStatement	int i ;	367:1:10558:10563	376710	0	True				
ANR	376714	IdentifierDecl	i		376710	0					
ANR	376715	IdentifierDeclType	int		376710	0					
ANR	376716	Identifier	i		376710	1					
ANR	376717	IdentifierDeclStatement	int opt ;	368:1:10566:10573	376710	1	True				
ANR	376718	IdentifierDecl	opt		376710	0					
ANR	376719	IdentifierDeclType	int		376710	0					
ANR	376720	Identifier	opt		376710	1					
ANR	376721	WhileStatement	"while ( ( opt = getopt ( argc , argv , ""ac:d:i:t:s:CA"" ) ) != EOF )"		376710	2					
ANR	376722	Condition	"( opt = getopt ( argc , argv , ""ac:d:i:t:s:CA"" ) ) != EOF"	370:7:10583:10632	376710	0	True				
ANR	376723	EqualityExpression	"( opt = getopt ( argc , argv , ""ac:d:i:t:s:CA"" ) ) != EOF"		376710	0		!=			
ANR	376724	AssignmentExpression	"opt = getopt ( argc , argv , ""ac:d:i:t:s:CA"" )"		376710	0		=			
ANR	376725	Identifier	opt		376710	0					
ANR	376726	CallExpression	"getopt ( argc , argv , ""ac:d:i:t:s:CA"" )"		376710	1					
ANR	376727	Callee	getopt		376710	0					
ANR	376728	Identifier	getopt		376710	0					
ANR	376729	ArgumentList	argc		376710	1					
ANR	376730	Argument	argc		376710	0					
ANR	376731	Identifier	argc		376710	0					
ANR	376732	Argument	argv		376710	1					
ANR	376733	Identifier	argv		376710	0					
ANR	376734	Argument	"""ac:d:i:t:s:CA"""		376710	2					
ANR	376735	PrimaryExpression	"""ac:d:i:t:s:CA"""		376710	0					
ANR	376736	Identifier	EOF		376710	1					
ANR	376737	CompoundStatement		5:59:79:79	376710	1					
ANR	376738	SwitchStatement	switch ( ( char ) opt )		376710	0					
ANR	376739	Condition	( char ) opt	371:9:10646:10654	376710	0	True				
ANR	376740	CastExpression	( char ) opt		376710	0					
ANR	376741	CastTarget	char		376710	0					
ANR	376742	Identifier	opt		376710	1					
ANR	376743	CompoundStatement		6:20:101:101	376710	1					
ANR	376744	Label	case 'A' :	372:2:10661:10669	376710	0	True				
ANR	376745	ExpressionStatement	bAllSyncTypes = 1	373:3:10674:10691	376710	1	True				
ANR	376746	AssignmentExpression	bAllSyncTypes = 1		376710	0		=			
ANR	376747	Identifier	bAllSyncTypes		376710	0					
ANR	376748	PrimaryExpression	1		376710	1					
ANR	376749	BreakStatement	break ;	374:3:10696:10701	376710	2	True				
ANR	376750	Label	case 'a' :	375:2:10705:10713	376710	3	True				
ANR	376751	ExpressionStatement	bCPUAffinity = 1	376:3:10718:10734	376710	4	True				
ANR	376752	AssignmentExpression	bCPUAffinity = 1		376710	0		=			
ANR	376753	Identifier	bCPUAffinity		376710	0					
ANR	376754	PrimaryExpression	1		376710	1					
ANR	376755	BreakStatement	break ;	377:3:10739:10744	376710	5	True				
ANR	376756	Label	case 'c' :	378:2:10748:10756	376710	6	True				
ANR	376757	ExpressionStatement	goal = ( unsigned ) atol ( optarg )	379:3:10761:10791	376710	7	True				
ANR	376758	AssignmentExpression	goal = ( unsigned ) atol ( optarg )		376710	0		=			
ANR	376759	Identifier	goal		376710	0					
ANR	376760	CastExpression	( unsigned ) atol ( optarg )		376710	1					
ANR	376761	CastTarget	unsigned		376710	0					
ANR	376762	CallExpression	atol ( optarg )		376710	1					
ANR	376763	Callee	atol		376710	0					
ANR	376764	Identifier	atol		376710	0					
ANR	376765	ArgumentList	optarg		376710	1					
ANR	376766	Argument	optarg		376710	0					
ANR	376767	Identifier	optarg		376710	0					
ANR	376768	BreakStatement	break ;	380:3:10796:10801	376710	8	True				
ANR	376769	Label	case 'd' :	381:2:10805:10813	376710	9	True				
ANR	376770	ExpressionStatement	dummyLoad = atoi ( optarg )	382:3:10818:10842	376710	10	True				
ANR	376771	AssignmentExpression	dummyLoad = atoi ( optarg )		376710	0		=			
ANR	376772	Identifier	dummyLoad		376710	0					
ANR	376773	CallExpression	atoi ( optarg )		376710	1					
ANR	376774	Callee	atoi		376710	0					
ANR	376775	Identifier	atoi		376710	0					
ANR	376776	ArgumentList	optarg		376710	1					
ANR	376777	Argument	optarg		376710	0					
ANR	376778	Identifier	optarg		376710	0					
ANR	376779	BreakStatement	break ;	383:3:10847:10852	376710	11	True				
ANR	376780	Label	case 'i' :	384:2:10856:10864	376710	12	True				
ANR	376781	ExpressionStatement	numIterations = atoi ( optarg )	385:3:10869:10897	376710	13	True				
ANR	376782	AssignmentExpression	numIterations = atoi ( optarg )		376710	0		=			
ANR	376783	Identifier	numIterations		376710	0					
ANR	376784	CallExpression	atoi ( optarg )		376710	1					
ANR	376785	Callee	atoi		376710	0					
ANR	376786	Identifier	atoi		376710	0					
ANR	376787	ArgumentList	optarg		376710	1					
ANR	376788	Argument	optarg		376710	0					
ANR	376789	Identifier	optarg		376710	0					
ANR	376790	BreakStatement	break ;	386:3:10902:10907	376710	14	True				
ANR	376791	Label	case 't' :	387:2:10911:10919	376710	15	True				
ANR	376792	ExpressionStatement	numthrds = atoi ( optarg )	388:3:10924:10947	376710	16	True				
ANR	376793	AssignmentExpression	numthrds = atoi ( optarg )		376710	0		=			
ANR	376794	Identifier	numthrds		376710	0					
ANR	376795	CallExpression	atoi ( optarg )		376710	1					
ANR	376796	Callee	atoi		376710	0					
ANR	376797	Identifier	atoi		376710	0					
ANR	376798	ArgumentList	optarg		376710	1					
ANR	376799	Argument	optarg		376710	0					
ANR	376800	Identifier	optarg		376710	0					
ANR	376801	BreakStatement	break ;	389:3:10952:10957	376710	17	True				
ANR	376802	Label	case 'C' :	390:2:10961:10969	376710	18	True				
ANR	376803	ExpressionStatement	bCSV = 1	391:3:10974:10982	376710	19	True				
ANR	376804	AssignmentExpression	bCSV = 1		376710	0		=			
ANR	376805	Identifier	bCSV		376710	0					
ANR	376806	PrimaryExpression	1		376710	1					
ANR	376807	BreakStatement	break ;	392:3:10987:10992	376710	20	True				
ANR	376808	Label	case 's' :	393:2:10996:11004	376710	21	True				
ANR	376809	IfStatement	"if ( ! strcmp ( optarg , ""none"" ) )"		376710	22					
ANR	376810	Condition	"! strcmp ( optarg , ""none"" )"	394:6:11012:11034	376710	0	True				
ANR	376811	UnaryOperationExpression	"! strcmp ( optarg , ""none"" )"		376710	0					
ANR	376812	UnaryOperator	!		376710	0					
ANR	376813	CallExpression	"strcmp ( optarg , ""none"" )"		376710	1					
ANR	376814	Callee	strcmp		376710	0					
ANR	376815	Identifier	strcmp		376710	0					
ANR	376816	ArgumentList	optarg		376710	1					
ANR	376817	Argument	optarg		376710	0					
ANR	376818	Identifier	optarg		376710	0					
ANR	376819	Argument	"""none"""		376710	1					
ANR	376820	PrimaryExpression	"""none"""		376710	0					
ANR	376821	ExpressionStatement	syncType = none	395:4:11041:11056	376710	1	True				
ANR	376822	AssignmentExpression	syncType = none		376710	0		=			
ANR	376823	Identifier	syncType		376710	0					
ANR	376824	Identifier	none		376710	1					
ANR	376825	ElseStatement	else		376710	0					
ANR	376826	IfStatement	"if ( ! strcmp ( optarg , ""part"" ) )"		376710	0					
ANR	376827	Condition	"! strcmp ( optarg , ""part"" )"	396:11:11069:11091	376710	0	True				
ANR	376828	UnaryOperationExpression	"! strcmp ( optarg , ""part"" )"		376710	0					
ANR	376829	UnaryOperator	!		376710	0					
ANR	376830	CallExpression	"strcmp ( optarg , ""part"" )"		376710	1					
ANR	376831	Callee	strcmp		376710	0					
ANR	376832	Identifier	strcmp		376710	0					
ANR	376833	ArgumentList	optarg		376710	1					
ANR	376834	Argument	optarg		376710	0					
ANR	376835	Identifier	optarg		376710	0					
ANR	376836	Argument	"""part"""		376710	1					
ANR	376837	PrimaryExpression	"""part"""		376710	0					
ANR	376838	ExpressionStatement	syncType = part	397:4:11098:11113	376710	1	True				
ANR	376839	AssignmentExpression	syncType = part		376710	0		=			
ANR	376840	Identifier	syncType		376710	0					
ANR	376841	Identifier	part		376710	1					
ANR	376842	ElseStatement	else		376710	0					
ANR	376843	IfStatement	"if ( ! strcmp ( optarg , ""atomic"" ) )"		376710	0					
ANR	376844	Condition	"! strcmp ( optarg , ""atomic"" )"	398:11:11126:11150	376710	0	True				
ANR	376845	UnaryOperationExpression	"! strcmp ( optarg , ""atomic"" )"		376710	0					
ANR	376846	UnaryOperator	!		376710	0					
ANR	376847	CallExpression	"strcmp ( optarg , ""atomic"" )"		376710	1					
ANR	376848	Callee	strcmp		376710	0					
ANR	376849	Identifier	strcmp		376710	0					
ANR	376850	ArgumentList	optarg		376710	1					
ANR	376851	Argument	optarg		376710	0					
ANR	376852	Identifier	optarg		376710	0					
ANR	376853	Argument	"""atomic"""		376710	1					
ANR	376854	PrimaryExpression	"""atomic"""		376710	0					
ANR	376855	ExpressionStatement	syncType = atomic	399:4:11157:11174	376710	1	True				
ANR	376856	AssignmentExpression	syncType = atomic		376710	0		=			
ANR	376857	Identifier	syncType		376710	0					
ANR	376858	Identifier	atomic		376710	1					
ANR	376859	ElseStatement	else		376710	0					
ANR	376860	IfStatement	"if ( ! strcmp ( optarg , ""cas"" ) )"		376710	0					
ANR	376861	Condition	"! strcmp ( optarg , ""cas"" )"	400:11:11187:11208	376710	0	True				
ANR	376862	UnaryOperationExpression	"! strcmp ( optarg , ""cas"" )"		376710	0					
ANR	376863	UnaryOperator	!		376710	0					
ANR	376864	CallExpression	"strcmp ( optarg , ""cas"" )"		376710	1					
ANR	376865	Callee	strcmp		376710	0					
ANR	376866	Identifier	strcmp		376710	0					
ANR	376867	ArgumentList	optarg		376710	1					
ANR	376868	Argument	optarg		376710	0					
ANR	376869	Identifier	optarg		376710	0					
ANR	376870	Argument	"""cas"""		376710	1					
ANR	376871	PrimaryExpression	"""cas"""		376710	0					
ANR	376872	ExpressionStatement	syncType = cas	401:4:11215:11229	376710	1	True				
ANR	376873	AssignmentExpression	syncType = cas		376710	0		=			
ANR	376874	Identifier	syncType		376710	0					
ANR	376875	Identifier	cas		376710	1					
ANR	376876	ElseStatement	else		376710	0					
ANR	376877	IfStatement	"if ( ! strcmp ( optarg , ""mutex"" ) )"		376710	0					
ANR	376878	Condition	"! strcmp ( optarg , ""mutex"" )"	402:11:11242:11265	376710	0	True				
ANR	376879	UnaryOperationExpression	"! strcmp ( optarg , ""mutex"" )"		376710	0					
ANR	376880	UnaryOperator	!		376710	0					
ANR	376881	CallExpression	"strcmp ( optarg , ""mutex"" )"		376710	1					
ANR	376882	Callee	strcmp		376710	0					
ANR	376883	Identifier	strcmp		376710	0					
ANR	376884	ArgumentList	optarg		376710	1					
ANR	376885	Argument	optarg		376710	0					
ANR	376886	Identifier	optarg		376710	0					
ANR	376887	Argument	"""mutex"""		376710	1					
ANR	376888	PrimaryExpression	"""mutex"""		376710	0					
ANR	376889	CompoundStatement		37:37:712:712	376710	1					
ANR	376890	ExpressionStatement	syncType = mutex	403:4:11274:11290	376710	0	True				
ANR	376891	AssignmentExpression	syncType = mutex		376710	0		=			
ANR	376892	Identifier	syncType		376710	0					
ANR	376893	Identifier	mutex		376710	1					
ANR	376894	ExpressionStatement	"pthread_mutex_init ( & mut , NULL )"	404:4:11296:11326	376710	1	True				
ANR	376895	CallExpression	"pthread_mutex_init ( & mut , NULL )"		376710	0					
ANR	376896	Callee	pthread_mutex_init		376710	0					
ANR	376897	Identifier	pthread_mutex_init		376710	0					
ANR	376898	ArgumentList	& mut		376710	1					
ANR	376899	Argument	& mut		376710	0					
ANR	376900	UnaryOperationExpression	& mut		376710	0					
ANR	376901	UnaryOperator	&		376710	0					
ANR	376902	Identifier	mut		376710	1					
ANR	376903	Argument	NULL		376710	1					
ANR	376904	Identifier	NULL		376710	0					
ANR	376905	ElseStatement	else		376710	0					
ANR	376906	IfStatement	"if ( ! strcmp ( optarg , ""spin"" ) )"		376710	0					
ANR	376907	Condition	"! strcmp ( optarg , ""spin"" )"	405:13:11341:11363	376710	0	True				
ANR	376908	UnaryOperationExpression	"! strcmp ( optarg , ""spin"" )"		376710	0					
ANR	376909	UnaryOperator	!		376710	0					
ANR	376910	CallExpression	"strcmp ( optarg , ""spin"" )"		376710	1					
ANR	376911	Callee	strcmp		376710	0					
ANR	376912	Identifier	strcmp		376710	0					
ANR	376913	ArgumentList	optarg		376710	1					
ANR	376914	Argument	optarg		376710	0					
ANR	376915	Identifier	optarg		376710	0					
ANR	376916	Argument	"""spin"""		376710	1					
ANR	376917	PrimaryExpression	"""spin"""		376710	0					
ANR	376918	CompoundStatement		40:38:810:810	376710	1					
ANR	376919	ExpressionStatement	syncType = spinlock	406:4:11372:11391	376710	0	True				
ANR	376920	AssignmentExpression	syncType = spinlock		376710	0		=			
ANR	376921	Identifier	syncType		376710	0					
ANR	376922	Identifier	spinlock		376710	1					
ANR	376923	ElseStatement	else		376710	0					
ANR	376924	IfStatement	"if ( ! strcmp ( optarg , ""semaphore"" ) )"		376710	0					
ANR	376925	Condition	"! strcmp ( optarg , ""semaphore"" )"	407:13:11406:11433	376710	0	True				
ANR	376926	UnaryOperationExpression	"! strcmp ( optarg , ""semaphore"" )"		376710	0					
ANR	376927	UnaryOperator	!		376710	0					
ANR	376928	CallExpression	"strcmp ( optarg , ""semaphore"" )"		376710	1					
ANR	376929	Callee	strcmp		376710	0					
ANR	376930	Identifier	strcmp		376710	0					
ANR	376931	ArgumentList	optarg		376710	1					
ANR	376932	Argument	optarg		376710	0					
ANR	376933	Identifier	optarg		376710	0					
ANR	376934	Argument	"""semaphore"""		376710	1					
ANR	376935	PrimaryExpression	"""semaphore"""		376710	0					
ANR	376936	CompoundStatement		42:43:880:880	376710	1					
ANR	376937	ExpressionStatement	syncType = semaphore	408:4:11442:11462	376710	0	True				
ANR	376938	AssignmentExpression	syncType = semaphore		376710	0		=			
ANR	376939	Identifier	syncType		376710	0					
ANR	376940	Identifier	semaphore		376710	1					
ANR	376941	ExpressionStatement	"sem_init ( & sem , 0 , 1 )"	409:4:11468:11488	376710	1	True				
ANR	376942	CallExpression	"sem_init ( & sem , 0 , 1 )"		376710	0					
ANR	376943	Callee	sem_init		376710	0					
ANR	376944	Identifier	sem_init		376710	0					
ANR	376945	ArgumentList	& sem		376710	1					
ANR	376946	Argument	& sem		376710	0					
ANR	376947	UnaryOperationExpression	& sem		376710	0					
ANR	376948	UnaryOperator	&		376710	0					
ANR	376949	Identifier	sem		376710	1					
ANR	376950	Argument	0		376710	1					
ANR	376951	PrimaryExpression	0		376710	0					
ANR	376952	Argument	1		376710	2					
ANR	376953	PrimaryExpression	1		376710	0					
ANR	376954	ElseStatement	else		376710	0					
ANR	376955	CompoundStatement		45:10:944:944	376710	0					
ANR	376956	ExpressionStatement	"fprintf ( stderr , ""error: invalid sync mode '%s'\\n"" , optarg )"	411:4:11506:11564	376710	0	True				
ANR	376957	CallExpression	"fprintf ( stderr , ""error: invalid sync mode '%s'\\n"" , optarg )"		376710	0					
ANR	376958	Callee	fprintf		376710	0					
ANR	376959	Identifier	fprintf		376710	0					
ANR	376960	ArgumentList	stderr		376710	1					
ANR	376961	Argument	stderr		376710	0					
ANR	376962	Identifier	stderr		376710	0					
ANR	376963	Argument	"""error: invalid sync mode '%s'\\n"""		376710	1					
ANR	376964	PrimaryExpression	"""error: invalid sync mode '%s'\\n"""		376710	0					
ANR	376965	Argument	optarg		376710	2					
ANR	376966	Identifier	optarg		376710	0					
ANR	376967	ExpressionStatement	usage ( )	412:4:11570:11577	376710	1	True				
ANR	376968	CallExpression	usage ( )		376710	0					
ANR	376969	Callee	usage		376710	0					
ANR	376970	Identifier	usage		376710	0					
ANR	376971	ArgumentList			376710	1					
ANR	376972	BreakStatement	break ;	414:3:11587:11592	376710	23	True				
ANR	376973	Label	default :	415:2:11596:11603	376710	24	True				
ANR	376974	Identifier	default		376710	0					
ANR	376975	ExpressionStatement	usage ( )	415:10:11604:11611	376710	25	True				
ANR	376976	CallExpression	usage ( )		376710	0					
ANR	376977	Callee	usage		376710	0					
ANR	376978	Identifier	usage		376710	0					
ANR	376979	ArgumentList			376710	1					
ANR	376980	BreakStatement	break ;	416:3:11616:11621	376710	26	True				
ANR	376981	ExpressionStatement	"pthread_mutex_init ( & mut , NULL )"	421:1:11706:11736	376710	3	True				
ANR	376982	CallExpression	"pthread_mutex_init ( & mut , NULL )"		376710	0					
ANR	376983	Callee	pthread_mutex_init		376710	0					
ANR	376984	Identifier	pthread_mutex_init		376710	0					
ANR	376985	ArgumentList	& mut		376710	1					
ANR	376986	Argument	& mut		376710	0					
ANR	376987	UnaryOperationExpression	& mut		376710	0					
ANR	376988	UnaryOperator	&		376710	0					
ANR	376989	Identifier	mut		376710	1					
ANR	376990	Argument	NULL		376710	1					
ANR	376991	Identifier	NULL		376710	0					
ANR	376992	ExpressionStatement	"pthread_spin_init ( & spin , PTHREAD_PROCESS_PRIVATE )"	422:1:11739:11788	376710	4	True				
ANR	376993	CallExpression	"pthread_spin_init ( & spin , PTHREAD_PROCESS_PRIVATE )"		376710	0					
ANR	376994	Callee	pthread_spin_init		376710	0					
ANR	376995	Identifier	pthread_spin_init		376710	0					
ANR	376996	ArgumentList	& spin		376710	1					
ANR	376997	Argument	& spin		376710	0					
ANR	376998	UnaryOperationExpression	& spin		376710	0					
ANR	376999	UnaryOperator	&		376710	0					
ANR	377000	Identifier	spin		376710	1					
ANR	377001	Argument	PTHREAD_PROCESS_PRIVATE		376710	1					
ANR	377002	Identifier	PTHREAD_PROCESS_PRIVATE		376710	0					
ANR	377003	ExpressionStatement	"sem_init ( & sem , 0 , 1 )"	423:1:11791:11811	376710	5	True				
ANR	377004	CallExpression	"sem_init ( & sem , 0 , 1 )"		376710	0					
ANR	377005	Callee	sem_init		376710	0					
ANR	377006	Identifier	sem_init		376710	0					
ANR	377007	ArgumentList	& sem		376710	1					
ANR	377008	Argument	& sem		376710	0					
ANR	377009	UnaryOperationExpression	& sem		376710	0					
ANR	377010	UnaryOperator	&		376710	0					
ANR	377011	Identifier	sem		376710	1					
ANR	377012	Argument	0		376710	1					
ANR	377013	PrimaryExpression	0		376710	0					
ANR	377014	Argument	1		376710	2					
ANR	377015	PrimaryExpression	1		376710	0					
ANR	377016	ExpressionStatement	procs = ( int ) sysconf ( _SC_NPROCESSORS_ONLN )	426:1:11845:11887	376710	6	True				
ANR	377017	AssignmentExpression	procs = ( int ) sysconf ( _SC_NPROCESSORS_ONLN )		376710	0		=			
ANR	377018	Identifier	procs		376710	0					
ANR	377019	CastExpression	( int ) sysconf ( _SC_NPROCESSORS_ONLN )		376710	1					
ANR	377020	CastTarget	int		376710	0					
ANR	377021	CallExpression	sysconf ( _SC_NPROCESSORS_ONLN )		376710	1					
ANR	377022	Callee	sysconf		376710	0					
ANR	377023	Identifier	sysconf		376710	0					
ANR	377024	ArgumentList	_SC_NPROCESSORS_ONLN		376710	1					
ANR	377025	Argument	_SC_NPROCESSORS_ONLN		376710	0					
ANR	377026	Identifier	_SC_NPROCESSORS_ONLN		376710	0					
ANR	377027	IfStatement	if ( procs < 0 )		376710	7					
ANR	377028	Condition	procs < 0	427:4:11893:11901	376710	0	True				
ANR	377029	RelationalExpression	procs < 0		376710	0		<			
ANR	377030	Identifier	procs		376710	0					
ANR	377031	PrimaryExpression	0		376710	1					
ANR	377032	CompoundStatement		62:15:1348:1348	376710	1					
ANR	377033	ExpressionStatement	"perror ( ""sysconf"" )"	428:2:11908:11925	376710	0	True				
ANR	377034	CallExpression	"perror ( ""sysconf"" )"		376710	0					
ANR	377035	Callee	perror		376710	0					
ANR	377036	Identifier	perror		376710	0					
ANR	377037	ArgumentList	"""sysconf"""		376710	1					
ANR	377038	Argument	"""sysconf"""		376710	0					
ANR	377039	PrimaryExpression	"""sysconf"""		376710	0					
ANR	377040	ReturnStatement	return - 1 ;	429:2:11929:11938	376710	1	True				
ANR	377041	UnaryOperationExpression	- 1		376710	0					
ANR	377042	UnaryOperator	-		376710	0					
ANR	377043	PrimaryExpression	1		376710	1					
ANR	377044	IfStatement	if ( numthrds < 1 )		376710	8					
ANR	377045	Condition	numthrds < 1	432:4:11948:11959	376710	0	True				
ANR	377046	RelationalExpression	numthrds < 1		376710	0		<			
ANR	377047	Identifier	numthrds		376710	0					
ANR	377048	PrimaryExpression	1		376710	1					
ANR	377049	CompoundStatement		67:18:1406:1406	376710	1					
ANR	377050	ExpressionStatement	numthrds = procs	433:2:11966:11982	376710	0	True				
ANR	377051	AssignmentExpression	numthrds = procs		376710	0		=			
ANR	377052	Identifier	numthrds		376710	0					
ANR	377053	Identifier	procs		376710	1					
ANR	377054	IfStatement	if ( bAllSyncTypes )		376710	9					
ANR	377055	Condition	bAllSyncTypes	436:4:11992:12004	376710	0	True				
ANR	377056	Identifier	bAllSyncTypes		376710	0					
ANR	377057	CompoundStatement		71:19:1451:1451	376710	1					
ANR	377058	ForStatement	for ( i = 0 ; i < sizeof ( syncTypes ) / sizeof ( syncType_t ) ; ++ i )		376710	0					
ANR	377059	ForInit	i = 0 ;	437:6:12015:12021	376710	0	True				
ANR	377060	AssignmentExpression	i = 0		376710	0		=			
ANR	377061	Identifier	i		376710	0					
ANR	377062	PrimaryExpression	0		376710	1					
ANR	377063	Condition	i < sizeof ( syncTypes ) / sizeof ( syncType_t )	437:14:12023:12064	376710	1	True				
ANR	377064	RelationalExpression	i < sizeof ( syncTypes ) / sizeof ( syncType_t )		376710	0		<			
ANR	377065	Identifier	i		376710	0					
ANR	377066	MultiplicativeExpression	sizeof ( syncTypes ) / sizeof ( syncType_t )		376710	1		/			
ANR	377067	SizeofExpression	sizeof ( syncTypes )		376710	0					
ANR	377068	Sizeof	sizeof		376710	0					
ANR	377069	SizeofOperand	syncTypes		376710	1					
ANR	377070	SizeofExpression	sizeof ( syncType_t )		376710	1					
ANR	377071	Sizeof	sizeof		376710	0					
ANR	377072	SizeofOperand	syncType_t		376710	1					
ANR	377073	UnaryExpression	++ i	437:59:12068:12070	376710	2	True				
ANR	377074	IncDec	++		376710	0					
ANR	377075	Identifier	i		376710	1					
ANR	377076	CompoundStatement		72:64:1517:1517	376710	3					
ANR	377077	ExpressionStatement	doTest ( syncTypes [ i ] )	438:3:12078:12098	376710	0	True				
ANR	377078	CallExpression	doTest ( syncTypes [ i ] )		376710	0					
ANR	377079	Callee	doTest		376710	0					
ANR	377080	Identifier	doTest		376710	0					
ANR	377081	ArgumentList	syncTypes [ i ]		376710	1					
ANR	377082	Argument	syncTypes [ i ]		376710	0					
ANR	377083	ArrayIndexing	syncTypes [ i ]		376710	0					
ANR	377084	Identifier	syncTypes		376710	0					
ANR	377085	Identifier	i		376710	1					
ANR	377086	ExpressionStatement	"printf ( ""Done running tests, result based on:\\n"" )"	440:2:12106:12154	376710	1	True				
ANR	377087	CallExpression	"printf ( ""Done running tests, result based on:\\n"" )"		376710	0					
ANR	377088	Callee	printf		376710	0					
ANR	377089	Identifier	printf		376710	0					
ANR	377090	ArgumentList	"""Done running tests, result based on:\\n"""		376710	1					
ANR	377091	Argument	"""Done running tests, result based on:\\n"""		376710	0					
ANR	377092	PrimaryExpression	"""Done running tests, result based on:\\n"""		376710	0					
ANR	377093	ExpressionStatement	"printf ( ""\\tNumber of Cores.........: %d\\n"" , procs )"	441:2:12158:12207	376710	2	True				
ANR	377094	CallExpression	"printf ( ""\\tNumber of Cores.........: %d\\n"" , procs )"		376710	0					
ANR	377095	Callee	printf		376710	0					
ANR	377096	Identifier	printf		376710	0					
ANR	377097	ArgumentList	"""\\tNumber of Cores.........: %d\\n"""		376710	1					
ANR	377098	Argument	"""\\tNumber of Cores.........: %d\\n"""		376710	0					
ANR	377099	PrimaryExpression	"""\\tNumber of Cores.........: %d\\n"""		376710	0					
ANR	377100	Argument	procs		376710	1					
ANR	377101	Identifier	procs		376710	0					
ANR	377102	ExpressionStatement	"printf ( ""\\tNumber of Threads.......: %d\\n"" , numthrds )"	442:2:12211:12263	376710	3	True				
ANR	377103	CallExpression	"printf ( ""\\tNumber of Threads.......: %d\\n"" , numthrds )"		376710	0					
ANR	377104	Callee	printf		376710	0					
ANR	377105	Identifier	printf		376710	0					
ANR	377106	ArgumentList	"""\\tNumber of Threads.......: %d\\n"""		376710	1					
ANR	377107	Argument	"""\\tNumber of Threads.......: %d\\n"""		376710	0					
ANR	377108	PrimaryExpression	"""\\tNumber of Threads.......: %d\\n"""		376710	0					
ANR	377109	Argument	numthrds		376710	1					
ANR	377110	Identifier	numthrds		376710	0					
ANR	377111	ExpressionStatement	"printf ( ""\\tSet CPU Affinity........: %s\\n"" , bCPUAffinity ? ""yes"" : ""no"" )"	443:2:12267:12338	376710	4	True				
ANR	377112	CallExpression	"printf ( ""\\tSet CPU Affinity........: %s\\n"" , bCPUAffinity ? ""yes"" : ""no"" )"		376710	0					
ANR	377113	Callee	printf		376710	0					
ANR	377114	Identifier	printf		376710	0					
ANR	377115	ArgumentList	"""\\tSet CPU Affinity........: %s\\n"""		376710	1					
ANR	377116	Argument	"""\\tSet CPU Affinity........: %s\\n"""		376710	0					
ANR	377117	PrimaryExpression	"""\\tSet CPU Affinity........: %s\\n"""		376710	0					
ANR	377118	Argument	"bCPUAffinity ? ""yes"" : ""no"""		376710	1					
ANR	377119	ConditionalExpression	"bCPUAffinity ? ""yes"" : ""no"""		376710	0					
ANR	377120	Condition	bCPUAffinity		376710	0					
ANR	377121	Identifier	bCPUAffinity		376710	0					
ANR	377122	PrimaryExpression	"""yes"""		376710	1					
ANR	377123	PrimaryExpression	"""no"""		376710	2					
ANR	377124	ExpressionStatement	"printf ( ""\\tCount to................: %u\\n"" , goal )"	444:2:12342:12390	376710	5	True				
ANR	377125	CallExpression	"printf ( ""\\tCount to................: %u\\n"" , goal )"		376710	0					
ANR	377126	Callee	printf		376710	0					
ANR	377127	Identifier	printf		376710	0					
ANR	377128	ArgumentList	"""\\tCount to................: %u\\n"""		376710	1					
ANR	377129	Argument	"""\\tCount to................: %u\\n"""		376710	0					
ANR	377130	PrimaryExpression	"""\\tCount to................: %u\\n"""		376710	0					
ANR	377131	Argument	goal		376710	1					
ANR	377132	Identifier	goal		376710	0					
ANR	377133	ExpressionStatement	"printf ( ""\\tWork for each Thread....: %u\\n"" , thrd_WorkToDo )"	445:2:12394:12451	376710	6	True				
ANR	377134	CallExpression	"printf ( ""\\tWork for each Thread....: %u\\n"" , thrd_WorkToDo )"		376710	0					
ANR	377135	Callee	printf		376710	0					
ANR	377136	Identifier	printf		376710	0					
ANR	377137	ArgumentList	"""\\tWork for each Thread....: %u\\n"""		376710	1					
ANR	377138	Argument	"""\\tWork for each Thread....: %u\\n"""		376710	0					
ANR	377139	PrimaryExpression	"""\\tWork for each Thread....: %u\\n"""		376710	0					
ANR	377140	Argument	thrd_WorkToDo		376710	1					
ANR	377141	Identifier	thrd_WorkToDo		376710	0					
ANR	377142	ExpressionStatement	"printf ( ""\\tDummy Load Counter......: %d\\n"" , dummyLoad )"	446:2:12455:12508	376710	7	True				
ANR	377143	CallExpression	"printf ( ""\\tDummy Load Counter......: %d\\n"" , dummyLoad )"		376710	0					
ANR	377144	Callee	printf		376710	0					
ANR	377145	Identifier	printf		376710	0					
ANR	377146	ArgumentList	"""\\tDummy Load Counter......: %d\\n"""		376710	1					
ANR	377147	Argument	"""\\tDummy Load Counter......: %d\\n"""		376710	0					
ANR	377148	PrimaryExpression	"""\\tDummy Load Counter......: %d\\n"""		376710	0					
ANR	377149	Argument	dummyLoad		376710	1					
ANR	377150	Identifier	dummyLoad		376710	0					
ANR	377151	ExpressionStatement	"printf ( ""\\tIterations..............: %d\\n"" , numIterations )"	447:2:12512:12569	376710	8	True				
ANR	377152	CallExpression	"printf ( ""\\tIterations..............: %d\\n"" , numIterations )"		376710	0					
ANR	377153	Callee	printf		376710	0					
ANR	377154	Identifier	printf		376710	0					
ANR	377155	ArgumentList	"""\\tIterations..............: %d\\n"""		376710	1					
ANR	377156	Argument	"""\\tIterations..............: %d\\n"""		376710	0					
ANR	377157	PrimaryExpression	"""\\tIterations..............: %d\\n"""		376710	0					
ANR	377158	Argument	numIterations		376710	1					
ANR	377159	Identifier	numIterations		376710	0					
ANR	377160	ElseStatement	else		376710	0					
ANR	377161	CompoundStatement		83:8:2023:2023	376710	0					
ANR	377162	ExpressionStatement	doTest ( syncType )	449:2:12583:12599	376710	0	True				
ANR	377163	CallExpression	doTest ( syncType )		376710	0					
ANR	377164	Callee	doTest		376710	0					
ANR	377165	Identifier	doTest		376710	0					
ANR	377166	ArgumentList	syncType		376710	1					
ANR	377167	Argument	syncType		376710	0					
ANR	377168	Identifier	syncType		376710	0					
ANR	377169	ReturnStatement	return 0 ;	452:1:12606:12614	376710	10	True				
ANR	377170	PrimaryExpression	0		376710	0					
ANR	377171	ReturnType	int		376710	1					
ANR	377172	Identifier	main		376710	2					
ANR	377173	ParameterList	"int argc , char * argv [ ]"		376710	3					
ANR	377174	Parameter	int argc	365:5:10531:10538	376710	0	True				
ANR	377175	ParameterType	int		376710	0					
ANR	377176	Identifier	argc		376710	1					
ANR	377177	Parameter	char * argv [ ]	365:15:10541:10552	376710	1	True				
ANR	377178	ParameterType	char * [ ]		376710	0					
ANR	377179	Identifier	argv		376710	1					
ANR	377180	CFGEntryNode	ENTRY		376710		True				
ANR	377181	CFGExitNode	EXIT		376710		True				
ANR	377182	Symbol	procs		376710						
ANR	377183	Symbol	& sem		376710						
ANR	377184	Symbol	part		376710						
ANR	377185	Symbol	optarg		376710						
ANR	377186	Symbol	numthrds		376710						
ANR	377187	Symbol	mutex		376710						
ANR	377188	Symbol	none		376710						
ANR	377189	Symbol	argv		376710						
ANR	377190	Symbol	numIterations		376710						
ANR	377191	Symbol	cas		376710						
ANR	377192	Symbol	getopt		376710						
ANR	377193	Symbol	thrd_WorkToDo		376710						
ANR	377194	Symbol	bCPUAffinity		376710						
ANR	377195	Symbol	dummyLoad		376710						
ANR	377196	Symbol	sysconf		376710						
ANR	377197	Symbol	EOF		376710						
ANR	377198	Symbol	argc		376710						
ANR	377199	Symbol	atoi		376710						
ANR	377200	Symbol	strcmp		376710						
ANR	377201	Symbol	_SC_NPROCESSORS_ONLN		376710						
ANR	377202	Symbol	goal		376710						
ANR	377203	Symbol	NULL		376710						
ANR	377204	Symbol	spinlock		376710						
ANR	377205	Symbol	i		376710						
ANR	377206	Symbol	bCSV		376710						
ANR	377207	Symbol	stderr		376710						
ANR	377208	Symbol	& spin		376710						
ANR	377209	Symbol	bAllSyncTypes		376710						
ANR	377210	Symbol	opt		376710						
ANR	377211	Symbol	PTHREAD_PROCESS_PRIVATE		376710						
ANR	377212	Symbol	* i		376710						
ANR	377213	Symbol	& mut		376710						
ANR	377214	Symbol	atomic		376710						
ANR	377215	Symbol	semaphore		376710						
ANR	377216	Symbol	syncType		376710						
ANR	377217	Symbol	atol		376710						
ANR	377218	Symbol	* syncTypes		376710						
ANR	377219	Symbol	syncTypes		376710						
