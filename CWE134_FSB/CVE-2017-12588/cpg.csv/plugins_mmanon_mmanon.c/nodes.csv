command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	86814	File	data/converged/CVE-2017-12588_rsyslog/plugins_mmanon_mmanon.c								
ANR	86815	DeclStmt									
ANR	86816	Decl							const uint32_t	const uint32_t [ 33 ]	ipv4masks
ANR	86817	ClassDef	_instanceData	66:8:1917:2018							
ANR	86818	DeclStmt									
ANR	86819	Decl							char	char	replChar
ANR	86820	DeclStmt									
ANR	86821	Decl							int8_t	int8_t	mode
ANR	86822	ClassDef	<unnamed>	69:1:1971:2002							
ANR	86823	DeclStmt									
ANR	86824	Decl							int8_t	int8_t	bits
ANR	86825	DeclStmt									
ANR	86826	Decl									ipv4
ANR	86827	DeclStmt									
ANR	86828	Decl							_instanceData	_instanceData	instanceData
ANR	86829	ClassDef	wrkrInstanceData	74:8:2029:2097							
ANR	86830	DeclStmt									
ANR	86831	Decl							instanceData	instanceData *	pData
ANR	86832	DeclStmt									
ANR	86833	Decl							wrkrInstanceData	wrkrInstanceData	wrkrInstanceData_t
ANR	86834	ClassDef	modConfData_s	78:0:2100:2173							
ANR	86835	DeclStmt									
ANR	86836	Decl							rsconf_t	rsconf_t *	pConf
ANR	86837	DeclStmt									
ANR	86838	Decl							modConfData_t	modConfData_t *	loadModConf
ANR	86839	DeclStmt									
ANR	86840	Decl							modConfData_t	modConfData_t *	runModConf
ANR	86841	DeclStmt									
ANR	86842	Decl							struct cnfparamdescr	struct cnfparamdescr [ ]	actpdescr
ANR	86843	DeclStmt									
ANR	86844	Decl							struct cnfparamblk	struct cnfparamblk	actpblk
ANR	86845	DeclStmt									
ANR	86846	Decl							BEGINbeginCnfLoad CODESTARTbeginCnfLoad	BEGINbeginCnfLoad CODESTARTbeginCnfLoad	loadModConf
ANR	86847	DeclStmt									
ANR	86848	Decl							ENDbeginCnfLoad BEGINendCnfLoad CODESTARTendCnfLoad ENDendCnfLoad BEGINcheckCnf CODESTARTcheckCnf ENDcheckCnf BEGINactivateCnf CODESTARTactivateCnf	ENDbeginCnfLoad BEGINendCnfLoad CODESTARTendCnfLoad ENDendCnfLoad BEGINcheckCnf CODESTARTcheckCnf ENDcheckCnf BEGINactivateCnf CODESTARTactivateCnf	runModConf
ANR	86849	Function	setInstParamDefaults	146:0:3427:3567							
ANR	86850	FunctionDef	setInstParamDefaults (instanceData * pData)		86849	0					
ANR	86851	CompoundStatement		148:0:3488:3567	86849	0					
ANR	86852	ExpressionStatement	pData -> mode = REWRITE_MODE	149:1:3491:3517	86849	0	True				
ANR	86853	AssignmentExpression	pData -> mode = REWRITE_MODE		86849	0		=			
ANR	86854	PtrMemberAccess	pData -> mode		86849	0					
ANR	86855	Identifier	pData		86849	0					
ANR	86856	Identifier	mode		86849	1					
ANR	86857	Identifier	REWRITE_MODE		86849	1					
ANR	86858	ExpressionStatement	pData -> replChar = 'x'	150:1:3520:3541	86849	1	True				
ANR	86859	AssignmentExpression	pData -> replChar = 'x'		86849	0		=			
ANR	86860	PtrMemberAccess	pData -> replChar		86849	0					
ANR	86861	Identifier	pData		86849	0					
ANR	86862	Identifier	replChar		86849	1					
ANR	86863	PrimaryExpression	'x'		86849	1					
ANR	86864	ExpressionStatement	pData -> ipv4 . bits = 16	151:1:3544:3565	86849	2	True				
ANR	86865	AssignmentExpression	pData -> ipv4 . bits = 16		86849	0		=			
ANR	86866	MemberAccess	pData -> ipv4 . bits		86849	0					
ANR	86867	PtrMemberAccess	pData -> ipv4		86849	0					
ANR	86868	Identifier	pData		86849	0					
ANR	86869	Identifier	ipv4		86849	1					
ANR	86870	Identifier	bits		86849	1					
ANR	86871	PrimaryExpression	16		86849	1					
ANR	86872	ReturnType	static inline void		86849	1					
ANR	86873	Identifier	setInstParamDefaults		86849	2					
ANR	86874	ParameterList	instanceData * pData		86849	3					
ANR	86875	Parameter	instanceData * pData	147:21:3467:3485	86849	0	True				
ANR	86876	ParameterType	instanceData *		86849	0					
ANR	86877	Identifier	pData		86849	1					
ANR	86878	CFGEntryNode	ENTRY		86849		True				
ANR	86879	CFGExitNode	EXIT		86849		True				
ANR	86880	Symbol	pData		86849						
ANR	86881	Symbol	pData -> ipv4		86849						
ANR	86882	Symbol	pData -> ipv4 . bits		86849						
ANR	86883	Symbol	pData -> mode		86849						
ANR	86884	Symbol	REWRITE_MODE		86849						
ANR	86885	Symbol	pData -> replChar		86849						
ANR	86886	Symbol	* pData		86849						
ANR	86887	DeclStmt									
ANR	86888	Decl							struct cnfparamvals	struct cnfparamvals *	pvals
ANR	86889	DeclStmt									
ANR	86890	Decl							int	int	i
ANR	86891	DeclStmt									
ANR	86892	Decl							sbool	sbool	bHadBitsErr
ANR	86893	DeclStmt									
ANR	86894	Decl							CODESTARTnewActInst	CODESTARTnewActInst	DBGPRINTF
ANR	86895	DeclStmt									
ANR	86896	Decl							char	char *	cstr
ANR	86897	DeclStmt									
ANR	86898	Decl							CODE_STD_FINALIZERnewActInst	CODE_STD_FINALIZERnewActInst	cnfparamvalsDestruct
ANR	86899	Function	getnum	246:0:6074:6281							
ANR	86900	FunctionDef	"getnum (uchar * msg , int lenMsg , int * idx)"		86899	0					
ANR	86901	CompoundStatement		248:0:6126:6281	86899	0					
ANR	86902	IdentifierDeclStatement	int num = 0 ;	249:1:6129:6140	86899	0	True				
ANR	86903	IdentifierDecl	num = 0		86899	0					
ANR	86904	IdentifierDeclType	int		86899	0					
ANR	86905	Identifier	num		86899	1					
ANR	86906	AssignmentExpression	num = 0		86899	2		=			
ANR	86907	Identifier	num		86899	0					
ANR	86908	PrimaryExpression	0		86899	1					
ANR	86909	IdentifierDeclStatement	int i = * idx ;	250:1:6143:6155	86899	1	True				
ANR	86910	IdentifierDecl	i = * idx		86899	0					
ANR	86911	IdentifierDeclType	int		86899	0					
ANR	86912	Identifier	i		86899	1					
ANR	86913	AssignmentExpression	i = * idx		86899	2		=			
ANR	86914	Identifier	i		86899	0					
ANR	86915	UnaryOperationExpression	* idx		86899	1					
ANR	86916	UnaryOperator	*		86899	0					
ANR	86917	Identifier	idx		86899	1					
ANR	86918	WhileStatement	while ( i < lenMsg && msg [ i ] >= '0' && msg [ i ] <= '9' )		86899	2					
ANR	86919	Condition	i < lenMsg && msg [ i ] >= '0' && msg [ i ] <= '9'	252:7:6165:6208	86899	0	True				
ANR	86920	AndExpression	i < lenMsg && msg [ i ] >= '0' && msg [ i ] <= '9'		86899	0		&&			
ANR	86921	RelationalExpression	i < lenMsg		86899	0		<			
ANR	86922	Identifier	i		86899	0					
ANR	86923	Identifier	lenMsg		86899	1					
ANR	86924	AndExpression	msg [ i ] >= '0' && msg [ i ] <= '9'		86899	1		&&			
ANR	86925	RelationalExpression	msg [ i ] >= '0'		86899	0		>=			
ANR	86926	ArrayIndexing	msg [ i ]		86899	0					
ANR	86927	Identifier	msg		86899	0					
ANR	86928	Identifier	i		86899	1					
ANR	86929	PrimaryExpression	'0'		86899	1					
ANR	86930	RelationalExpression	msg [ i ] <= '9'		86899	1		<=			
ANR	86931	ArrayIndexing	msg [ i ]		86899	0					
ANR	86932	Identifier	msg		86899	0					
ANR	86933	Identifier	i		86899	1					
ANR	86934	PrimaryExpression	'9'		86899	1					
ANR	86935	CompoundStatement		5:53:84:84	86899	1					
ANR	86936	ExpressionStatement	num = num * 10 + msg [ i ] - '0'	253:2:6215:6244	86899	0	True				
ANR	86937	AssignmentExpression	num = num * 10 + msg [ i ] - '0'		86899	0		=			
ANR	86938	Identifier	num		86899	0					
ANR	86939	AdditiveExpression	num * 10 + msg [ i ] - '0'		86899	1		+			
ANR	86940	MultiplicativeExpression	num * 10		86899	0		*			
ANR	86941	Identifier	num		86899	0					
ANR	86942	PrimaryExpression	10		86899	1					
ANR	86943	AdditiveExpression	msg [ i ] - '0'		86899	1		-			
ANR	86944	ArrayIndexing	msg [ i ]		86899	0					
ANR	86945	Identifier	msg		86899	0					
ANR	86946	Identifier	i		86899	1					
ANR	86947	PrimaryExpression	'0'		86899	1					
ANR	86948	ExpressionStatement	++ i	254:2:6248:6251	86899	1	True				
ANR	86949	UnaryExpression	++ i		86899	0					
ANR	86950	IncDec	++		86899	0					
ANR	86951	Identifier	i		86899	1					
ANR	86952	ExpressionStatement	* idx = i	257:1:6258:6266	86899	3	True				
ANR	86953	AssignmentExpression	* idx = i		86899	0		=			
ANR	86954	UnaryOperationExpression	* idx		86899	0					
ANR	86955	UnaryOperator	*		86899	0					
ANR	86956	Identifier	idx		86899	1					
ANR	86957	Identifier	i		86899	1					
ANR	86958	ReturnStatement	return num ;	258:1:6269:6279	86899	4	True				
ANR	86959	Identifier	num		86899	0					
ANR	86960	ReturnType	static int		86899	1					
ANR	86961	Identifier	getnum		86899	2					
ANR	86962	ParameterList	"uchar * msg , int lenMsg , int * idx"		86899	3					
ANR	86963	Parameter	uchar * msg	247:7:6092:6101	86899	0	True				
ANR	86964	ParameterType	uchar *		86899	0					
ANR	86965	Identifier	msg		86899	1					
ANR	86966	Parameter	int lenMsg	247:19:6104:6113	86899	1	True				
ANR	86967	ParameterType	int		86899	0					
ANR	86968	Identifier	lenMsg		86899	1					
ANR	86969	Parameter	int * idx	247:31:6116:6123	86899	2	True				
ANR	86970	ParameterType	int *		86899	0					
ANR	86971	Identifier	idx		86899	1					
ANR	86972	CFGEntryNode	ENTRY		86899		True				
ANR	86973	CFGExitNode	EXIT		86899		True				
ANR	86974	Symbol	msg		86899						
ANR	86975	Symbol	lenMsg		86899						
ANR	86976	Symbol	* i		86899						
ANR	86977	Symbol	num		86899						
ANR	86978	Symbol	* idx		86899						
ANR	86979	Symbol	i		86899						
ANR	86980	Symbol	* msg		86899						
ANR	86981	Symbol	idx		86899						
ANR	86982	Function	writeOctet	263:0:6340:6738							
ANR	86983	FunctionDef	"writeOctet (uchar * msg , int idx , int * nxtidx , uint8_t octet)"		86982	0					
ANR	86984	CompoundStatement		265:0:6411:6738	86982	0					
ANR	86985	IfStatement	if ( octet > 99 )		86982	0					
ANR	86986	Condition	octet > 99	266:4:6417:6426	86982	0	True				
ANR	86987	RelationalExpression	octet > 99		86982	0		>			
ANR	86988	Identifier	octet		86982	0					
ANR	86989	PrimaryExpression	99		86982	1					
ANR	86990	CompoundStatement		2:16:17:17	86982	1					
ANR	86991	ExpressionStatement	msg [ idx ++ ] = '0' + octet / 100	267:2:6433:6463	86982	0	True				
ANR	86992	AssignmentExpression	msg [ idx ++ ] = '0' + octet / 100		86982	0		=			
ANR	86993	ArrayIndexing	msg [ idx ++ ]		86982	0					
ANR	86994	Identifier	msg		86982	0					
ANR	86995	PostIncDecOperationExpression	idx ++		86982	1					
ANR	86996	Identifier	idx		86982	0					
ANR	86997	IncDec	++		86982	1					
ANR	86998	AdditiveExpression	'0' + octet / 100		86982	1		+			
ANR	86999	PrimaryExpression	'0'		86982	0					
ANR	87000	MultiplicativeExpression	octet / 100		86982	1		/			
ANR	87001	Identifier	octet		86982	0					
ANR	87002	PrimaryExpression	100		86982	1					
ANR	87003	ExpressionStatement	octet = octet % 100	268:2:6467:6486	86982	1	True				
ANR	87004	AssignmentExpression	octet = octet % 100		86982	0		=			
ANR	87005	Identifier	octet		86982	0					
ANR	87006	MultiplicativeExpression	octet % 100		86982	1		%			
ANR	87007	Identifier	octet		86982	0					
ANR	87008	PrimaryExpression	100		86982	1					
ANR	87009	IfStatement	if ( octet > 9 )		86982	1					
ANR	87010	Condition	octet > 9	270:4:6495:6503	86982	0	True				
ANR	87011	RelationalExpression	octet > 9		86982	0		>			
ANR	87012	Identifier	octet		86982	0					
ANR	87013	PrimaryExpression	9		86982	1					
ANR	87014	CompoundStatement		6:15:94:94	86982	1					
ANR	87015	ExpressionStatement	msg [ idx ++ ] = '0' + octet / 10	271:2:6510:6539	86982	0	True				
ANR	87016	AssignmentExpression	msg [ idx ++ ] = '0' + octet / 10		86982	0		=			
ANR	87017	ArrayIndexing	msg [ idx ++ ]		86982	0					
ANR	87018	Identifier	msg		86982	0					
ANR	87019	PostIncDecOperationExpression	idx ++		86982	1					
ANR	87020	Identifier	idx		86982	0					
ANR	87021	IncDec	++		86982	1					
ANR	87022	AdditiveExpression	'0' + octet / 10		86982	1		+			
ANR	87023	PrimaryExpression	'0'		86982	0					
ANR	87024	MultiplicativeExpression	octet / 10		86982	1		/			
ANR	87025	Identifier	octet		86982	0					
ANR	87026	PrimaryExpression	10		86982	1					
ANR	87027	ExpressionStatement	octet = octet % 10	272:2:6543:6561	86982	1	True				
ANR	87028	AssignmentExpression	octet = octet % 10		86982	0		=			
ANR	87029	Identifier	octet		86982	0					
ANR	87030	MultiplicativeExpression	octet % 10		86982	1		%			
ANR	87031	Identifier	octet		86982	0					
ANR	87032	PrimaryExpression	10		86982	1					
ANR	87033	ExpressionStatement	msg [ idx ++ ] = '0' + octet	274:1:6567:6592	86982	2	True				
ANR	87034	AssignmentExpression	msg [ idx ++ ] = '0' + octet		86982	0		=			
ANR	87035	ArrayIndexing	msg [ idx ++ ]		86982	0					
ANR	87036	Identifier	msg		86982	0					
ANR	87037	PostIncDecOperationExpression	idx ++		86982	1					
ANR	87038	Identifier	idx		86982	0					
ANR	87039	IncDec	++		86982	1					
ANR	87040	AdditiveExpression	'0' + octet		86982	1		+			
ANR	87041	PrimaryExpression	'0'		86982	0					
ANR	87042	Identifier	octet		86982	1					
ANR	87043	IfStatement	if ( nxtidx != NULL )		86982	3					
ANR	87044	Condition	nxtidx != NULL	276:4:6599:6612	86982	0	True				
ANR	87045	EqualityExpression	nxtidx != NULL		86982	0		!=			
ANR	87046	Identifier	nxtidx		86982	0					
ANR	87047	Identifier	NULL		86982	1					
ANR	87048	CompoundStatement		12:20:203:203	86982	1					
ANR	87049	IfStatement	if ( idx + 1 != * nxtidx )		86982	0					
ANR	87050	Condition	idx + 1 != * nxtidx	277:5:6622:6639	86982	0	True				
ANR	87051	EqualityExpression	idx + 1 != * nxtidx		86982	0		!=			
ANR	87052	AdditiveExpression	idx + 1		86982	0		+			
ANR	87053	Identifier	idx		86982	0					
ANR	87054	PrimaryExpression	1		86982	1					
ANR	87055	UnaryOperationExpression	* nxtidx		86982	1					
ANR	87056	UnaryOperator	*		86982	0					
ANR	87057	Identifier	nxtidx		86982	1					
ANR	87058	CompoundStatement		13:25:230:230	86982	1					
ANR	87059	ExpressionStatement	msg [ idx ] = '.'	279:3:6680:6694	86982	0	True				
ANR	87060	AssignmentExpression	msg [ idx ] = '.'		86982	0		=			
ANR	87061	ArrayIndexing	msg [ idx ]		86982	0					
ANR	87062	Identifier	msg		86982	0					
ANR	87063	Identifier	idx		86982	1					
ANR	87064	PrimaryExpression	'.'		86982	1					
ANR	87065	ExpressionStatement	* nxtidx = idx + 1	280:3:6699:6716	86982	1	True				
ANR	87066	AssignmentExpression	* nxtidx = idx + 1		86982	0		=			
ANR	87067	UnaryOperationExpression	* nxtidx		86982	0					
ANR	87068	UnaryOperator	*		86982	0					
ANR	87069	Identifier	nxtidx		86982	1					
ANR	87070	AdditiveExpression	idx + 1		86982	1		+			
ANR	87071	Identifier	idx		86982	0					
ANR	87072	PrimaryExpression	1		86982	1					
ANR	87073	ReturnStatement	return idx ;	283:1:6726:6736	86982	4	True				
ANR	87074	Identifier	idx		86982	0					
ANR	87075	ReturnType	static int		86982	1					
ANR	87076	Identifier	writeOctet		86982	2					
ANR	87077	ParameterList	"uchar * msg , int idx , int * nxtidx , uint8_t octet"		86982	3					
ANR	87078	Parameter	uchar * msg	264:11:6362:6371	86982	0	True				
ANR	87079	ParameterType	uchar *		86982	0					
ANR	87080	Identifier	msg		86982	1					
ANR	87081	Parameter	int idx	264:23:6374:6380	86982	1	True				
ANR	87082	ParameterType	int		86982	0					
ANR	87083	Identifier	idx		86982	1					
ANR	87084	Parameter	int * nxtidx	264:32:6383:6393	86982	2	True				
ANR	87085	ParameterType	int *		86982	0					
ANR	87086	Identifier	nxtidx		86982	1					
ANR	87087	Parameter	uint8_t octet	264:45:6396:6408	86982	3	True				
ANR	87088	ParameterType	uint8_t		86982	0					
ANR	87089	Identifier	octet		86982	1					
ANR	87090	CFGEntryNode	ENTRY		86982		True				
ANR	87091	CFGExitNode	EXIT		86982		True				
ANR	87092	Symbol	msg		86982						
ANR	87093	Symbol	NULL		86982						
ANR	87094	Symbol	nxtidx		86982						
ANR	87095	Symbol	octet		86982						
ANR	87096	Symbol	* nxtidx		86982						
ANR	87097	Symbol	* idx		86982						
ANR	87098	Symbol	* msg		86982						
ANR	87099	Symbol	idx		86982						
ANR	87100	Function	anonip	287:0:6778:8717							
ANR	87101	FunctionDef	"anonip (instanceData * pData , uchar * msg , int * pLenMsg , int * idx)"		87100	0					
ANR	87102	CompoundStatement		289:0:6854:8717	87100	0					
ANR	87103	IdentifierDeclStatement	int i = * idx ;	290:1:6857:6869	87100	0	True				
ANR	87104	IdentifierDecl	i = * idx		87100	0					
ANR	87105	IdentifierDeclType	int		87100	0					
ANR	87106	Identifier	i		87100	1					
ANR	87107	AssignmentExpression	i = * idx		87100	2		=			
ANR	87108	Identifier	i		87100	0					
ANR	87109	UnaryOperationExpression	* idx		87100	1					
ANR	87110	UnaryOperator	*		87100	0					
ANR	87111	Identifier	idx		87100	1					
ANR	87112	IdentifierDeclStatement	int octet ;	291:1:6872:6881	87100	1	True				
ANR	87113	IdentifierDecl	octet		87100	0					
ANR	87114	IdentifierDeclType	int		87100	0					
ANR	87115	Identifier	octet		87100	1					
ANR	87116	IdentifierDeclStatement	uint32_t ipv4addr ;	292:1:6884:6901	87100	2	True				
ANR	87117	IdentifierDecl	ipv4addr		87100	0					
ANR	87118	IdentifierDeclType	uint32_t		87100	0					
ANR	87119	Identifier	ipv4addr		87100	1					
ANR	87120	IdentifierDeclStatement	int ipstart [ 4 ] ;	293:1:6904:6918	87100	3	True				
ANR	87121	IdentifierDecl	ipstart [ 4 ]		87100	0					
ANR	87122	IdentifierDeclType	int [ 4 ]		87100	0					
ANR	87123	Identifier	ipstart		87100	1					
ANR	87124	PrimaryExpression	4		87100	2					
ANR	87125	IdentifierDeclStatement	int j ;	294:1:6921:6926	87100	4	True				
ANR	87126	IdentifierDecl	j		87100	0					
ANR	87127	IdentifierDeclType	int		87100	0					
ANR	87128	Identifier	j		87100	1					
ANR	87129	IdentifierDeclStatement	int endpos ;	295:1:6929:6939	87100	5	True				
ANR	87130	IdentifierDecl	endpos		87100	0					
ANR	87131	IdentifierDeclType	int		87100	0					
ANR	87132	Identifier	endpos		87100	1					
ANR	87133	IdentifierDeclStatement	int lenMsg = * pLenMsg ;	296:1:6942:6963	87100	6	True				
ANR	87134	IdentifierDecl	lenMsg = * pLenMsg		87100	0					
ANR	87135	IdentifierDeclType	int		87100	0					
ANR	87136	Identifier	lenMsg		87100	1					
ANR	87137	AssignmentExpression	lenMsg = * pLenMsg		87100	2		=			
ANR	87138	Identifier	lenMsg		87100	0					
ANR	87139	UnaryOperationExpression	* pLenMsg		87100	1					
ANR	87140	UnaryOperator	*		87100	0					
ANR	87141	Identifier	pLenMsg		87100	1					
ANR	87142	WhileStatement	while ( i < lenMsg && ( msg [ i ] <= '0' || msg [ i ] > '9' ) )		87100	7					
ANR	87143	Condition	i < lenMsg && ( msg [ i ] <= '0' || msg [ i ] > '9' )	298:7:6973:7017	87100	0	True				
ANR	87144	AndExpression	i < lenMsg && ( msg [ i ] <= '0' || msg [ i ] > '9' )		87100	0		&&			
ANR	87145	RelationalExpression	i < lenMsg		87100	0		<			
ANR	87146	Identifier	i		87100	0					
ANR	87147	Identifier	lenMsg		87100	1					
ANR	87148	OrExpression	msg [ i ] <= '0' || msg [ i ] > '9'		87100	1		||			
ANR	87149	RelationalExpression	msg [ i ] <= '0'		87100	0		<=			
ANR	87150	ArrayIndexing	msg [ i ]		87100	0					
ANR	87151	Identifier	msg		87100	0					
ANR	87152	Identifier	i		87100	1					
ANR	87153	PrimaryExpression	'0'		87100	1					
ANR	87154	RelationalExpression	msg [ i ] > '9'		87100	1		>			
ANR	87155	ArrayIndexing	msg [ i ]		87100	0					
ANR	87156	Identifier	msg		87100	0					
ANR	87157	Identifier	i		87100	1					
ANR	87158	PrimaryExpression	'9'		87100	1					
ANR	87159	CompoundStatement		10:54:165:165	87100	1					
ANR	87160	ExpressionStatement	++ i	299:2:7024:7027	87100	0	True				
ANR	87161	UnaryExpression	++ i		87100	0					
ANR	87162	IncDec	++		87100	0					
ANR	87163	Identifier	i		87100	1					
ANR	87164	IfStatement	if ( i >= lenMsg )		87100	8					
ANR	87165	Condition	i >= lenMsg	301:4:7063:7073	87100	0	True				
ANR	87166	RelationalExpression	i >= lenMsg		87100	0		>=			
ANR	87167	Identifier	i		87100	0					
ANR	87168	Identifier	lenMsg		87100	1					
ANR	87169	GotoStatement	goto done ;	302:2:7078:7087	87100	1	True				
ANR	87170	Identifier	done		87100	0					
ANR	87171	ExpressionStatement	ipstart [ 0 ] = i	305:1:7126:7140	87100	9	True				
ANR	87172	AssignmentExpression	ipstart [ 0 ] = i		87100	0		=			
ANR	87173	ArrayIndexing	ipstart [ 0 ]		87100	0					
ANR	87174	Identifier	ipstart		87100	0					
ANR	87175	PrimaryExpression	0		87100	1					
ANR	87176	Identifier	i		87100	1					
ANR	87177	ExpressionStatement	"octet = getnum ( msg , lenMsg , & i )"	306:1:7143:7174	87100	10	True				
ANR	87178	AssignmentExpression	"octet = getnum ( msg , lenMsg , & i )"		87100	0		=			
ANR	87179	Identifier	octet		87100	0					
ANR	87180	CallExpression	"getnum ( msg , lenMsg , & i )"		87100	1					
ANR	87181	Callee	getnum		87100	0					
ANR	87182	Identifier	getnum		87100	0					
ANR	87183	ArgumentList	msg		87100	1					
ANR	87184	Argument	msg		87100	0					
ANR	87185	Identifier	msg		87100	0					
ANR	87186	Argument	lenMsg		87100	1					
ANR	87187	Identifier	lenMsg		87100	0					
ANR	87188	Argument	& i		87100	2					
ANR	87189	UnaryOperationExpression	& i		87100	0					
ANR	87190	UnaryOperator	&		87100	0					
ANR	87191	Identifier	i		87100	1					
ANR	87192	IfStatement	if ( octet > 255 || msg [ i ] != '.' )		87100	11					
ANR	87193	Condition	octet > 255 || msg [ i ] != '.'	307:4:7180:7207	87100	0	True				
ANR	87194	OrExpression	octet > 255 || msg [ i ] != '.'		87100	0		||			
ANR	87195	RelationalExpression	octet > 255		87100	0		>			
ANR	87196	Identifier	octet		87100	0					
ANR	87197	PrimaryExpression	255		87100	1					
ANR	87198	EqualityExpression	msg [ i ] != '.'		87100	1		!=			
ANR	87199	ArrayIndexing	msg [ i ]		87100	0					
ANR	87200	Identifier	msg		87100	0					
ANR	87201	Identifier	i		87100	1					
ANR	87202	PrimaryExpression	'.'		87100	1					
ANR	87203	GotoStatement	goto done ;	307:34:7210:7219	87100	1	True				
ANR	87204	Identifier	done		87100	0					
ANR	87205	ExpressionStatement	ipv4addr = octet << 24	308:1:7222:7244	87100	12	True				
ANR	87206	AssignmentExpression	ipv4addr = octet << 24		87100	0		=			
ANR	87207	Identifier	ipv4addr		87100	0					
ANR	87208	ShiftExpression	octet << 24		87100	1		<<			
ANR	87209	Identifier	octet		87100	0					
ANR	87210	PrimaryExpression	24		87100	1					
ANR	87211	ExpressionStatement	++ i	309:1:7247:7250	87100	13	True				
ANR	87212	UnaryExpression	++ i		87100	0					
ANR	87213	IncDec	++		87100	0					
ANR	87214	Identifier	i		87100	1					
ANR	87215	ExpressionStatement	ipstart [ 1 ] = i	310:1:7253:7267	87100	14	True				
ANR	87216	AssignmentExpression	ipstart [ 1 ] = i		87100	0		=			
ANR	87217	ArrayIndexing	ipstart [ 1 ]		87100	0					
ANR	87218	Identifier	ipstart		87100	0					
ANR	87219	PrimaryExpression	1		87100	1					
ANR	87220	Identifier	i		87100	1					
ANR	87221	ExpressionStatement	"octet = getnum ( msg , lenMsg , & i )"	311:1:7270:7301	87100	15	True				
ANR	87222	AssignmentExpression	"octet = getnum ( msg , lenMsg , & i )"		87100	0		=			
ANR	87223	Identifier	octet		87100	0					
ANR	87224	CallExpression	"getnum ( msg , lenMsg , & i )"		87100	1					
ANR	87225	Callee	getnum		87100	0					
ANR	87226	Identifier	getnum		87100	0					
ANR	87227	ArgumentList	msg		87100	1					
ANR	87228	Argument	msg		87100	0					
ANR	87229	Identifier	msg		87100	0					
ANR	87230	Argument	lenMsg		87100	1					
ANR	87231	Identifier	lenMsg		87100	0					
ANR	87232	Argument	& i		87100	2					
ANR	87233	UnaryOperationExpression	& i		87100	0					
ANR	87234	UnaryOperator	&		87100	0					
ANR	87235	Identifier	i		87100	1					
ANR	87236	IfStatement	if ( octet > 255 || msg [ i ] != '.' )		87100	16					
ANR	87237	Condition	octet > 255 || msg [ i ] != '.'	312:4:7307:7334	87100	0	True				
ANR	87238	OrExpression	octet > 255 || msg [ i ] != '.'		87100	0		||			
ANR	87239	RelationalExpression	octet > 255		87100	0		>			
ANR	87240	Identifier	octet		87100	0					
ANR	87241	PrimaryExpression	255		87100	1					
ANR	87242	EqualityExpression	msg [ i ] != '.'		87100	1		!=			
ANR	87243	ArrayIndexing	msg [ i ]		87100	0					
ANR	87244	Identifier	msg		87100	0					
ANR	87245	Identifier	i		87100	1					
ANR	87246	PrimaryExpression	'.'		87100	1					
ANR	87247	GotoStatement	goto done ;	312:34:7337:7346	87100	1	True				
ANR	87248	Identifier	done		87100	0					
ANR	87249	ExpressionStatement	ipv4addr |= octet << 16	313:1:7349:7372	87100	17	True				
ANR	87250	AssignmentExpression	ipv4addr |= octet << 16		87100	0		|=			
ANR	87251	Identifier	ipv4addr		87100	0					
ANR	87252	ShiftExpression	octet << 16		87100	1		<<			
ANR	87253	Identifier	octet		87100	0					
ANR	87254	PrimaryExpression	16		87100	1					
ANR	87255	ExpressionStatement	++ i	314:1:7375:7378	87100	18	True				
ANR	87256	UnaryExpression	++ i		87100	0					
ANR	87257	IncDec	++		87100	0					
ANR	87258	Identifier	i		87100	1					
ANR	87259	ExpressionStatement	ipstart [ 2 ] = i	315:1:7381:7395	87100	19	True				
ANR	87260	AssignmentExpression	ipstart [ 2 ] = i		87100	0		=			
ANR	87261	ArrayIndexing	ipstart [ 2 ]		87100	0					
ANR	87262	Identifier	ipstart		87100	0					
ANR	87263	PrimaryExpression	2		87100	1					
ANR	87264	Identifier	i		87100	1					
ANR	87265	ExpressionStatement	"octet = getnum ( msg , lenMsg , & i )"	316:1:7398:7429	87100	20	True				
ANR	87266	AssignmentExpression	"octet = getnum ( msg , lenMsg , & i )"		87100	0		=			
ANR	87267	Identifier	octet		87100	0					
ANR	87268	CallExpression	"getnum ( msg , lenMsg , & i )"		87100	1					
ANR	87269	Callee	getnum		87100	0					
ANR	87270	Identifier	getnum		87100	0					
ANR	87271	ArgumentList	msg		87100	1					
ANR	87272	Argument	msg		87100	0					
ANR	87273	Identifier	msg		87100	0					
ANR	87274	Argument	lenMsg		87100	1					
ANR	87275	Identifier	lenMsg		87100	0					
ANR	87276	Argument	& i		87100	2					
ANR	87277	UnaryOperationExpression	& i		87100	0					
ANR	87278	UnaryOperator	&		87100	0					
ANR	87279	Identifier	i		87100	1					
ANR	87280	IfStatement	if ( octet > 255 || msg [ i ] != '.' )		87100	21					
ANR	87281	Condition	octet > 255 || msg [ i ] != '.'	317:4:7435:7462	87100	0	True				
ANR	87282	OrExpression	octet > 255 || msg [ i ] != '.'		87100	0		||			
ANR	87283	RelationalExpression	octet > 255		87100	0		>			
ANR	87284	Identifier	octet		87100	0					
ANR	87285	PrimaryExpression	255		87100	1					
ANR	87286	EqualityExpression	msg [ i ] != '.'		87100	1		!=			
ANR	87287	ArrayIndexing	msg [ i ]		87100	0					
ANR	87288	Identifier	msg		87100	0					
ANR	87289	Identifier	i		87100	1					
ANR	87290	PrimaryExpression	'.'		87100	1					
ANR	87291	GotoStatement	goto done ;	317:34:7465:7474	87100	1	True				
ANR	87292	Identifier	done		87100	0					
ANR	87293	ExpressionStatement	ipv4addr |= octet << 8	318:1:7477:7499	87100	22	True				
ANR	87294	AssignmentExpression	ipv4addr |= octet << 8		87100	0		|=			
ANR	87295	Identifier	ipv4addr		87100	0					
ANR	87296	ShiftExpression	octet << 8		87100	1		<<			
ANR	87297	Identifier	octet		87100	0					
ANR	87298	PrimaryExpression	8		87100	1					
ANR	87299	ExpressionStatement	++ i	319:1:7502:7505	87100	23	True				
ANR	87300	UnaryExpression	++ i		87100	0					
ANR	87301	IncDec	++		87100	0					
ANR	87302	Identifier	i		87100	1					
ANR	87303	ExpressionStatement	ipstart [ 3 ] = i	320:1:7508:7522	87100	24	True				
ANR	87304	AssignmentExpression	ipstart [ 3 ] = i		87100	0		=			
ANR	87305	ArrayIndexing	ipstart [ 3 ]		87100	0					
ANR	87306	Identifier	ipstart		87100	0					
ANR	87307	PrimaryExpression	3		87100	1					
ANR	87308	Identifier	i		87100	1					
ANR	87309	ExpressionStatement	"octet = getnum ( msg , lenMsg , & i )"	321:1:7525:7556	87100	25	True				
ANR	87310	AssignmentExpression	"octet = getnum ( msg , lenMsg , & i )"		87100	0		=			
ANR	87311	Identifier	octet		87100	0					
ANR	87312	CallExpression	"getnum ( msg , lenMsg , & i )"		87100	1					
ANR	87313	Callee	getnum		87100	0					
ANR	87314	Identifier	getnum		87100	0					
ANR	87315	ArgumentList	msg		87100	1					
ANR	87316	Argument	msg		87100	0					
ANR	87317	Identifier	msg		87100	0					
ANR	87318	Argument	lenMsg		87100	1					
ANR	87319	Identifier	lenMsg		87100	0					
ANR	87320	Argument	& i		87100	2					
ANR	87321	UnaryOperationExpression	& i		87100	0					
ANR	87322	UnaryOperator	&		87100	0					
ANR	87323	Identifier	i		87100	1					
ANR	87324	IfStatement	if ( octet > 255 )		87100	26					
ANR	87325	Condition	octet > 255	322:4:7562:7572	87100	0	True				
ANR	87326	RelationalExpression	octet > 255		87100	0		>			
ANR	87327	Identifier	octet		87100	0					
ANR	87328	PrimaryExpression	255		87100	1					
ANR	87329	GotoStatement	goto done ;	322:17:7575:7584	87100	1	True				
ANR	87330	Identifier	done		87100	0					
ANR	87331	ExpressionStatement	ipv4addr |= octet	323:1:7587:7604	87100	27	True				
ANR	87332	AssignmentExpression	ipv4addr |= octet		87100	0		|=			
ANR	87333	Identifier	ipv4addr		87100	0					
ANR	87334	Identifier	octet		87100	1					
ANR	87335	IfStatement	if ( pData -> mode == SIMPLE_MODE )		87100	28					
ANR	87336	Condition	pData -> mode == SIMPLE_MODE	326:4:7649:7674	87100	0	True				
ANR	87337	EqualityExpression	pData -> mode == SIMPLE_MODE		87100	0		==			
ANR	87338	PtrMemberAccess	pData -> mode		87100	0					
ANR	87339	Identifier	pData		87100	0					
ANR	87340	Identifier	mode		87100	1					
ANR	87341	Identifier	SIMPLE_MODE		87100	1					
ANR	87342	CompoundStatement		38:32:822:822	87100	1					
ANR	87343	IfStatement	if ( pData -> ipv4 . bits == 8 )		87100	0					
ANR	87344	Condition	pData -> ipv4 . bits == 8	327:5:7684:7704	87100	0	True				
ANR	87345	EqualityExpression	pData -> ipv4 . bits == 8		87100	0		==			
ANR	87346	MemberAccess	pData -> ipv4 . bits		87100	0					
ANR	87347	PtrMemberAccess	pData -> ipv4		87100	0					
ANR	87348	Identifier	pData		87100	0					
ANR	87349	Identifier	ipv4		87100	1					
ANR	87350	Identifier	bits		87100	1					
ANR	87351	PrimaryExpression	8		87100	1					
ANR	87352	ExpressionStatement	j = ipstart [ 3 ]	328:3:7710:7724	87100	1	True				
ANR	87353	AssignmentExpression	j = ipstart [ 3 ]		87100	0		=			
ANR	87354	Identifier	j		87100	0					
ANR	87355	ArrayIndexing	ipstart [ 3 ]		87100	1					
ANR	87356	Identifier	ipstart		87100	0					
ANR	87357	PrimaryExpression	3		87100	1					
ANR	87358	ElseStatement	else		87100	0					
ANR	87359	IfStatement	if ( pData -> ipv4 . bits == 16 )		87100	0					
ANR	87360	Condition	pData -> ipv4 . bits == 16	329:10:7736:7757	87100	0	True				
ANR	87361	EqualityExpression	pData -> ipv4 . bits == 16		87100	0		==			
ANR	87362	MemberAccess	pData -> ipv4 . bits		87100	0					
ANR	87363	PtrMemberAccess	pData -> ipv4		87100	0					
ANR	87364	Identifier	pData		87100	0					
ANR	87365	Identifier	ipv4		87100	1					
ANR	87366	Identifier	bits		87100	1					
ANR	87367	PrimaryExpression	16		87100	1					
ANR	87368	ExpressionStatement	j = ipstart [ 2 ]	330:3:7763:7777	87100	1	True				
ANR	87369	AssignmentExpression	j = ipstart [ 2 ]		87100	0		=			
ANR	87370	Identifier	j		87100	0					
ANR	87371	ArrayIndexing	ipstart [ 2 ]		87100	1					
ANR	87372	Identifier	ipstart		87100	0					
ANR	87373	PrimaryExpression	2		87100	1					
ANR	87374	ElseStatement	else		87100	0					
ANR	87375	IfStatement	if ( pData -> ipv4 . bits == 24 )		87100	0					
ANR	87376	Condition	pData -> ipv4 . bits == 24	331:10:7789:7810	87100	0	True				
ANR	87377	EqualityExpression	pData -> ipv4 . bits == 24		87100	0		==			
ANR	87378	MemberAccess	pData -> ipv4 . bits		87100	0					
ANR	87379	PtrMemberAccess	pData -> ipv4		87100	0					
ANR	87380	Identifier	pData		87100	0					
ANR	87381	Identifier	ipv4		87100	1					
ANR	87382	Identifier	bits		87100	1					
ANR	87383	PrimaryExpression	24		87100	1					
ANR	87384	ExpressionStatement	j = ipstart [ 1 ]	332:3:7816:7830	87100	1	True				
ANR	87385	AssignmentExpression	j = ipstart [ 1 ]		87100	0		=			
ANR	87386	Identifier	j		87100	0					
ANR	87387	ArrayIndexing	ipstart [ 1 ]		87100	1					
ANR	87388	Identifier	ipstart		87100	0					
ANR	87389	PrimaryExpression	1		87100	1					
ANR	87390	ElseStatement	else		87100	0					
ANR	87391	ExpressionStatement	j = ipstart [ 0 ]	334:3:7885:7899	87100	0	True				
ANR	87392	AssignmentExpression	j = ipstart [ 0 ]		87100	0		=			
ANR	87393	Identifier	j		87100	0					
ANR	87394	ArrayIndexing	ipstart [ 0 ]		87100	1					
ANR	87395	Identifier	ipstart		87100	0					
ANR	87396	PrimaryExpression	0		87100	1					
ANR	87397	WhileStatement	while ( j < i )		87100	1					
ANR	87398	Condition	j < i	335:8:7909:7913	87100	0	True				
ANR	87399	RelationalExpression	j < i		87100	0		<			
ANR	87400	Identifier	j		87100	0					
ANR	87401	Identifier	i		87100	1					
ANR	87402	CompoundStatement		47:15:1061:1061	87100	1					
ANR	87403	IfStatement	if ( msg [ j ] != '.' )		87100	0					
ANR	87404	Condition	msg [ j ] != '.'	336:6:7924:7936	87100	0	True				
ANR	87405	EqualityExpression	msg [ j ] != '.'		87100	0		!=			
ANR	87406	ArrayIndexing	msg [ j ]		87100	0					
ANR	87407	Identifier	msg		87100	0					
ANR	87408	Identifier	j		87100	1					
ANR	87409	PrimaryExpression	'.'		87100	1					
ANR	87410	ExpressionStatement	msg [ j ] = pData -> replChar	337:4:7943:7967	87100	1	True				
ANR	87411	AssignmentExpression	msg [ j ] = pData -> replChar		87100	0		=			
ANR	87412	ArrayIndexing	msg [ j ]		87100	0					
ANR	87413	Identifier	msg		87100	0					
ANR	87414	Identifier	j		87100	1					
ANR	87415	PtrMemberAccess	pData -> replChar		87100	1					
ANR	87416	Identifier	pData		87100	0					
ANR	87417	Identifier	replChar		87100	1					
ANR	87418	ExpressionStatement	++ j	338:3:7972:7975	87100	1	True				
ANR	87419	UnaryExpression	++ j		87100	0					
ANR	87420	IncDec	++		87100	0					
ANR	87421	Identifier	j		87100	1					
ANR	87422	ElseStatement	else		87100	0					
ANR	87423	CompoundStatement		52:8:1134:1134	87100	0					
ANR	87424	ExpressionStatement	ipv4addr &= ipv4masks [ pData -> ipv4 . bits ]	341:2:8012:8051	87100	0	True				
ANR	87425	AssignmentExpression	ipv4addr &= ipv4masks [ pData -> ipv4 . bits ]		87100	0		&=			
ANR	87426	Identifier	ipv4addr		87100	0					
ANR	87427	ArrayIndexing	ipv4masks [ pData -> ipv4 . bits ]		87100	1					
ANR	87428	Identifier	ipv4masks		87100	0					
ANR	87429	MemberAccess	pData -> ipv4 . bits		87100	1					
ANR	87430	PtrMemberAccess	pData -> ipv4		87100	0					
ANR	87431	Identifier	pData		87100	0					
ANR	87432	Identifier	ipv4		87100	1					
ANR	87433	Identifier	bits		87100	1					
ANR	87434	IfStatement	if ( pData -> ipv4 . bits > 24 )		87100	1					
ANR	87435	Condition	pData -> ipv4 . bits > 24	342:5:8058:8078	87100	0	True				
ANR	87436	RelationalExpression	pData -> ipv4 . bits > 24		87100	0		>			
ANR	87437	MemberAccess	pData -> ipv4 . bits		87100	0					
ANR	87438	PtrMemberAccess	pData -> ipv4		87100	0					
ANR	87439	Identifier	pData		87100	0					
ANR	87440	Identifier	ipv4		87100	1					
ANR	87441	Identifier	bits		87100	1					
ANR	87442	PrimaryExpression	24		87100	1					
ANR	87443	ExpressionStatement	"writeOctet ( msg , ipstart [ 0 ] , & ( ipstart [ 1 ] ) , ipv4addr >> 24 )"	343:3:8084:8142	87100	1	True				
ANR	87444	CallExpression	"writeOctet ( msg , ipstart [ 0 ] , & ( ipstart [ 1 ] ) , ipv4addr >> 24 )"		87100	0					
ANR	87445	Callee	writeOctet		87100	0					
ANR	87446	Identifier	writeOctet		87100	0					
ANR	87447	ArgumentList	msg		87100	1					
ANR	87448	Argument	msg		87100	0					
ANR	87449	Identifier	msg		87100	0					
ANR	87450	Argument	ipstart [ 0 ]		87100	1					
ANR	87451	ArrayIndexing	ipstart [ 0 ]		87100	0					
ANR	87452	Identifier	ipstart		87100	0					
ANR	87453	PrimaryExpression	0		87100	1					
ANR	87454	Argument	& ( ipstart [ 1 ] )		87100	2					
ANR	87455	UnaryOperationExpression	& ( ipstart [ 1 ] )		87100	0					
ANR	87456	UnaryOperator	&		87100	0					
ANR	87457	ArrayIndexing	ipstart [ 1 ]		87100	1					
ANR	87458	Identifier	ipstart		87100	0					
ANR	87459	PrimaryExpression	1		87100	1					
ANR	87460	Argument	ipv4addr >> 24		87100	3					
ANR	87461	ShiftExpression	ipv4addr >> 24		87100	0		>>			
ANR	87462	Identifier	ipv4addr		87100	0					
ANR	87463	PrimaryExpression	24		87100	1					
ANR	87464	IfStatement	if ( pData -> ipv4 . bits > 16 )		87100	2					
ANR	87465	Condition	pData -> ipv4 . bits > 16	344:5:8149:8169	87100	0	True				
ANR	87466	RelationalExpression	pData -> ipv4 . bits > 16		87100	0		>			
ANR	87467	MemberAccess	pData -> ipv4 . bits		87100	0					
ANR	87468	PtrMemberAccess	pData -> ipv4		87100	0					
ANR	87469	Identifier	pData		87100	0					
ANR	87470	Identifier	ipv4		87100	1					
ANR	87471	Identifier	bits		87100	1					
ANR	87472	PrimaryExpression	16		87100	1					
ANR	87473	ExpressionStatement	"writeOctet ( msg , ipstart [ 1 ] , & ( ipstart [ 2 ] ) , ( ipv4addr >> 16 ) & 0xff )"	345:3:8175:8242	87100	1	True				
ANR	87474	CallExpression	"writeOctet ( msg , ipstart [ 1 ] , & ( ipstart [ 2 ] ) , ( ipv4addr >> 16 ) & 0xff )"		87100	0					
ANR	87475	Callee	writeOctet		87100	0					
ANR	87476	Identifier	writeOctet		87100	0					
ANR	87477	ArgumentList	msg		87100	1					
ANR	87478	Argument	msg		87100	0					
ANR	87479	Identifier	msg		87100	0					
ANR	87480	Argument	ipstart [ 1 ]		87100	1					
ANR	87481	ArrayIndexing	ipstart [ 1 ]		87100	0					
ANR	87482	Identifier	ipstart		87100	0					
ANR	87483	PrimaryExpression	1		87100	1					
ANR	87484	Argument	& ( ipstart [ 2 ] )		87100	2					
ANR	87485	UnaryOperationExpression	& ( ipstart [ 2 ] )		87100	0					
ANR	87486	UnaryOperator	&		87100	0					
ANR	87487	ArrayIndexing	ipstart [ 2 ]		87100	1					
ANR	87488	Identifier	ipstart		87100	0					
ANR	87489	PrimaryExpression	2		87100	1					
ANR	87490	Argument	( ipv4addr >> 16 ) & 0xff		87100	3					
ANR	87491	BitAndExpression	( ipv4addr >> 16 ) & 0xff		87100	0		&			
ANR	87492	ShiftExpression	ipv4addr >> 16		87100	0		>>			
ANR	87493	Identifier	ipv4addr		87100	0					
ANR	87494	PrimaryExpression	16		87100	1					
ANR	87495	PrimaryExpression	0xff		87100	1					
ANR	87496	IfStatement	if ( pData -> ipv4 . bits > 8 )		87100	3					
ANR	87497	Condition	pData -> ipv4 . bits > 8	346:5:8249:8268	87100	0	True				
ANR	87498	RelationalExpression	pData -> ipv4 . bits > 8		87100	0		>			
ANR	87499	MemberAccess	pData -> ipv4 . bits		87100	0					
ANR	87500	PtrMemberAccess	pData -> ipv4		87100	0					
ANR	87501	Identifier	pData		87100	0					
ANR	87502	Identifier	ipv4		87100	1					
ANR	87503	Identifier	bits		87100	1					
ANR	87504	PrimaryExpression	8		87100	1					
ANR	87505	ExpressionStatement	"writeOctet ( msg , ipstart [ 2 ] , & ( ipstart [ 3 ] ) , ( ipv4addr >> 8 ) & 0xff )"	347:3:8274:8340	87100	1	True				
ANR	87506	CallExpression	"writeOctet ( msg , ipstart [ 2 ] , & ( ipstart [ 3 ] ) , ( ipv4addr >> 8 ) & 0xff )"		87100	0					
ANR	87507	Callee	writeOctet		87100	0					
ANR	87508	Identifier	writeOctet		87100	0					
ANR	87509	ArgumentList	msg		87100	1					
ANR	87510	Argument	msg		87100	0					
ANR	87511	Identifier	msg		87100	0					
ANR	87512	Argument	ipstart [ 2 ]		87100	1					
ANR	87513	ArrayIndexing	ipstart [ 2 ]		87100	0					
ANR	87514	Identifier	ipstart		87100	0					
ANR	87515	PrimaryExpression	2		87100	1					
ANR	87516	Argument	& ( ipstart [ 3 ] )		87100	2					
ANR	87517	UnaryOperationExpression	& ( ipstart [ 3 ] )		87100	0					
ANR	87518	UnaryOperator	&		87100	0					
ANR	87519	ArrayIndexing	ipstart [ 3 ]		87100	1					
ANR	87520	Identifier	ipstart		87100	0					
ANR	87521	PrimaryExpression	3		87100	1					
ANR	87522	Argument	( ipv4addr >> 8 ) & 0xff		87100	3					
ANR	87523	BitAndExpression	( ipv4addr >> 8 ) & 0xff		87100	0		&			
ANR	87524	ShiftExpression	ipv4addr >> 8		87100	0		>>			
ANR	87525	Identifier	ipv4addr		87100	0					
ANR	87526	PrimaryExpression	8		87100	1					
ANR	87527	PrimaryExpression	0xff		87100	1					
ANR	87528	ExpressionStatement	"endpos = writeOctet ( msg , ipstart [ 3 ] , NULL , ipv4addr & 0xff )"	348:2:8344:8403	87100	4	True				
ANR	87529	AssignmentExpression	"endpos = writeOctet ( msg , ipstart [ 3 ] , NULL , ipv4addr & 0xff )"		87100	0		=			
ANR	87530	Identifier	endpos		87100	0					
ANR	87531	CallExpression	"writeOctet ( msg , ipstart [ 3 ] , NULL , ipv4addr & 0xff )"		87100	1					
ANR	87532	Callee	writeOctet		87100	0					
ANR	87533	Identifier	writeOctet		87100	0					
ANR	87534	ArgumentList	msg		87100	1					
ANR	87535	Argument	msg		87100	0					
ANR	87536	Identifier	msg		87100	0					
ANR	87537	Argument	ipstart [ 3 ]		87100	1					
ANR	87538	ArrayIndexing	ipstart [ 3 ]		87100	0					
ANR	87539	Identifier	ipstart		87100	0					
ANR	87540	PrimaryExpression	3		87100	1					
ANR	87541	Argument	NULL		87100	2					
ANR	87542	Identifier	NULL		87100	0					
ANR	87543	Argument	ipv4addr & 0xff		87100	3					
ANR	87544	BitAndExpression	ipv4addr & 0xff		87100	0		&			
ANR	87545	Identifier	ipv4addr		87100	0					
ANR	87546	PrimaryExpression	0xff		87100	1					
ANR	87547	ExpressionStatement	"dbgprintf ( ""existing i %d, endpos %d\\n"" , i , endpos )"	350:2:8463:8513	87100	5	True				
ANR	87548	CallExpression	"dbgprintf ( ""existing i %d, endpos %d\\n"" , i , endpos )"		87100	0					
ANR	87549	Callee	dbgprintf		87100	0					
ANR	87550	Identifier	dbgprintf		87100	0					
ANR	87551	ArgumentList	"""existing i %d, endpos %d\\n"""		87100	1					
ANR	87552	Argument	"""existing i %d, endpos %d\\n"""		87100	0					
ANR	87553	PrimaryExpression	"""existing i %d, endpos %d\\n"""		87100	0					
ANR	87554	Argument	i		87100	1					
ANR	87555	Identifier	i		87100	0					
ANR	87556	Argument	endpos		87100	2					
ANR	87557	Identifier	endpos		87100	0					
ANR	87558	IfStatement	if ( i - endpos > 0 )		87100	6					
ANR	87559	Condition	i - endpos > 0	351:5:8520:8533	87100	0	True				
ANR	87560	RelationalExpression	i - endpos > 0		87100	0		>			
ANR	87561	AdditiveExpression	i - endpos		87100	0		-			
ANR	87562	Identifier	i		87100	0					
ANR	87563	Identifier	endpos		87100	1					
ANR	87564	PrimaryExpression	0		87100	1					
ANR	87565	CompoundStatement		63:21:1681:1681	87100	1					
ANR	87566	ExpressionStatement	* pLenMsg = lenMsg - ( i - endpos )	352:3:8541:8573	87100	0	True				
ANR	87567	AssignmentExpression	* pLenMsg = lenMsg - ( i - endpos )		87100	0		=			
ANR	87568	UnaryOperationExpression	* pLenMsg		87100	0					
ANR	87569	UnaryOperator	*		87100	0					
ANR	87570	Identifier	pLenMsg		87100	1					
ANR	87571	AdditiveExpression	lenMsg - ( i - endpos )		87100	1		-			
ANR	87572	Identifier	lenMsg		87100	0					
ANR	87573	AdditiveExpression	i - endpos		87100	1		-			
ANR	87574	Identifier	i		87100	0					
ANR	87575	Identifier	endpos		87100	1					
ANR	87576	ExpressionStatement	"memmove ( msg + endpos , msg + i , lenMsg - i + 1 )"	353:3:8578:8620	87100	1	True				
ANR	87577	CallExpression	"memmove ( msg + endpos , msg + i , lenMsg - i + 1 )"		87100	0					
ANR	87578	Callee	memmove		87100	0					
ANR	87579	Identifier	memmove		87100	0					
ANR	87580	ArgumentList	msg + endpos		87100	1					
ANR	87581	Argument	msg + endpos		87100	0					
ANR	87582	AdditiveExpression	msg + endpos		87100	0		+			
ANR	87583	Identifier	msg		87100	0					
ANR	87584	Identifier	endpos		87100	1					
ANR	87585	Argument	msg + i		87100	1					
ANR	87586	AdditiveExpression	msg + i		87100	0		+			
ANR	87587	Identifier	msg		87100	0					
ANR	87588	Identifier	i		87100	1					
ANR	87589	Argument	lenMsg - i + 1		87100	2					
ANR	87590	AdditiveExpression	lenMsg - i + 1		87100	0		-			
ANR	87591	Identifier	lenMsg		87100	0					
ANR	87592	AdditiveExpression	i + 1		87100	1		+			
ANR	87593	Identifier	i		87100	0					
ANR	87594	PrimaryExpression	1		87100	1					
ANR	87595	ExpressionStatement	i -= ( i - endpos )	355:3:8665:8682	87100	2	True				
ANR	87596	AssignmentExpression	i -= ( i - endpos )		87100	0		-=			
ANR	87597	Identifier	i		87100	0					
ANR	87598	AdditiveExpression	i - endpos		87100	1		-			
ANR	87599	Identifier	i		87100	0					
ANR	87600	Identifier	endpos		87100	1					
ANR	87601	Label	done :	359:0:8692:8696	87100	29	True				
ANR	87602	Identifier	done		87100	0					
ANR	87603	ExpressionStatement	* idx = i	359:6:8698:8706	87100	30	True				
ANR	87604	AssignmentExpression	* idx = i		87100	0		=			
ANR	87605	UnaryOperationExpression	* idx		87100	0					
ANR	87606	UnaryOperator	*		87100	0					
ANR	87607	Identifier	idx		87100	1					
ANR	87608	Identifier	i		87100	1					
ANR	87609	ReturnStatement	return ;	360:1:8709:8715	87100	31	True				
ANR	87610	ReturnType	static void		87100	1					
ANR	87611	Identifier	anonip		87100	2					
ANR	87612	ParameterList	"instanceData * pData , uchar * msg , int * pLenMsg , int * idx"		87100	3					
ANR	87613	Parameter	instanceData * pData	288:7:6797:6815	87100	0	True				
ANR	87614	ParameterType	instanceData *		87100	0					
ANR	87615	Identifier	pData		87100	1					
ANR	87616	Parameter	uchar * msg	288:28:6818:6827	87100	1	True				
ANR	87617	ParameterType	uchar *		87100	0					
ANR	87618	Identifier	msg		87100	1					
ANR	87619	Parameter	int * pLenMsg	288:40:6830:6841	87100	2	True				
ANR	87620	ParameterType	int *		87100	0					
ANR	87621	Identifier	pLenMsg		87100	1					
ANR	87622	Parameter	int * idx	288:54:6844:6851	87100	3	True				
ANR	87623	ParameterType	int *		87100	0					
ANR	87624	Identifier	idx		87100	1					
ANR	87625	CFGEntryNode	ENTRY		87100		True				
ANR	87626	CFGExitNode	EXIT		87100		True				
ANR	87627	Symbol	msg		87100						
ANR	87628	Symbol	octet		87100						
ANR	87629	Symbol	* * pData		87100						
ANR	87630	Symbol	* pLenMsg		87100						
ANR	87631	Symbol	ipstart		87100						
ANR	87632	Symbol	pData -> mode		87100						
ANR	87633	Symbol	endpos		87100						
ANR	87634	Symbol	pLenMsg		87100						
ANR	87635	Symbol	SIMPLE_MODE		87100						
ANR	87636	Symbol	* ipstart		87100						
ANR	87637	Symbol	pData -> ipv4 . bits		87100						
ANR	87638	Symbol	* idx		87100						
ANR	87639	Symbol	ipv4masks		87100						
ANR	87640	Symbol	writeOctet		87100						
ANR	87641	Symbol	* ipv4masks		87100						
ANR	87642	Symbol	lenMsg		87100						
ANR	87643	Symbol	NULL		87100						
ANR	87644	Symbol	i		87100						
ANR	87645	Symbol	j		87100						
ANR	87646	Symbol	* msg		87100						
ANR	87647	Symbol	* pData -> ipv4 . bits		87100						
ANR	87648	Symbol	ipv4addr		87100						
ANR	87649	Symbol	pData -> replChar		87100						
ANR	87650	Symbol	& i		87100						
ANR	87651	Symbol	* pData		87100						
ANR	87652	Symbol	* pData -> ipv4		87100						
ANR	87653	Symbol	pData		87100						
ANR	87654	Symbol	pData -> ipv4		87100						
ANR	87655	Symbol	* i		87100						
ANR	87656	Symbol	* j		87100						
ANR	87657	Symbol	getnum		87100						
ANR	87658	Symbol	idx		87100						
ANR	87659	DeclStmt									
ANR	87660	Decl							BEGINdoAction_NoStrings smsg_t	BEGINdoAction_NoStrings smsg_t * *	ppMsg
ANR	87661	DeclStmt									
ANR	87662	Decl							smsg_t	smsg_t *	pMsg
ANR	87663	DeclStmt									
ANR	87664	Decl							uchar	uchar *	msg
ANR	87665	DeclStmt									
ANR	87666	Decl							int	int	lenMsg
ANR	87667	DeclStmt									
ANR	87668	Decl							int	int	i
ANR	87669	DeclStmt									
ANR	87670	Decl							CODESTARTdoAction	CODESTARTdoAction	lenMsg
ANR	87671	DeclStmt									
ANR	87672	Decl							CODE_STD_FINALIZERparseSelectorAct ENDparseSelectorAct BEGINmodExit CODESTARTmodExit	"CODE_STD_FINALIZERparseSelectorAct ENDparseSelectorAct BEGINmodExit CODESTARTmodExit ( errmsg , CORE_COMPONENT )"	objRelease
ANR	87673	DeclStmt									
ANR	87674	Decl							CODESTARTmodInit	CODESTARTmodInit *	ipIFVersProvided
ANR	87675	DeclStmt									
ANR	87676	Decl							CODEmodInit_QueryRegCFSLineHdlr	CODEmodInit_QueryRegCFSLineHdlr	DBGPRINTF
