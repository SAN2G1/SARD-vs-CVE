command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	377220	File	data/converged/CVE-2017-12588_rsyslog/tools_syslogd.c								
ANR	377221	DeclStmt									
ANR	377222	Decl							extern ratelimit_t	extern ratelimit_t *	internalMsg_ratelimiter
ANR	377223	DeclStmt									
ANR	377224	Decl							extern uchar	extern uchar *	ConfFile
ANR	377225	DeclStmt									
ANR	377226	Decl							extern ratelimit_t	extern ratelimit_t *	dflt_ratelimiter
ANR	377227	DeclStmt									
ANR	377228	Decl							extern void	extern void ( void )	rsyslogd_usage
ANR	377229	DeclStmt									
ANR	377230	Decl							extern rsRetVal	extern rsRetVal ( void )	rsyslogdInit
ANR	377231	DeclStmt									
ANR	377232	Decl							extern void	extern void ( void )	rsyslogd_destructAllActions
ANR	377233	DeclStmt									
ANR	377234	Decl							extern void	extern void ( )	rsyslogd_sigttin_handler
ANR	377235	DeclStmt									
ANR	377236	Decl							extern int	extern int ( void )	forkRsyslog
ANR	377237	DeclStmt									
ANR	377238	Decl							void	"void ( const int severity , const int iErr , const uchar * msg )"	rsyslogd_submitErrMsg
ANR	377239	DeclStmt									
ANR	377240	Decl							rsRetVal	rsRetVal ( void )	rsyslogd_InitGlobalClasses
ANR	377241	DeclStmt									
ANR	377242	Decl							rsRetVal	rsRetVal ( void )	rsyslogd_InitStdRatelimiters
ANR	377243	DeclStmt									
ANR	377244	Decl							rsRetVal	rsRetVal ( void )	rsyslogdInit
ANR	377245	DeclStmt									
ANR	377246	Decl							void	void ( )	rsyslogdDebugSwitch
ANR	377247	DeclStmt									
ANR	377248	Decl							void	void ( int sig )	rsyslogdDoDie
ANR	377249	DeclStmt									
ANR	377250	Decl							char	char * * ( char * list )	syslogd_crunch_list
ANR	377251	Function	syslogd_crunch_list	138:0:4373:5749							
ANR	377252	FunctionDef	syslogd_crunch_list (char * list)		377251	0					
ANR	377253	CompoundStatement		139:0:4412:5749	377251	0					
ANR	377254	IdentifierDeclStatement	"int count , i ;"	140:1:4415:4427	377251	0	True				
ANR	377255	IdentifierDecl	count		377251	0					
ANR	377256	IdentifierDeclType	int		377251	0					
ANR	377257	Identifier	count		377251	1					
ANR	377258	IdentifierDecl	i		377251	1					
ANR	377259	IdentifierDeclType	int		377251	0					
ANR	377260	Identifier	i		377251	1					
ANR	377261	IdentifierDeclStatement	"char * p , * q ;"	141:1:4430:4441	377251	1	True				
ANR	377262	IdentifierDecl	* p		377251	0					
ANR	377263	IdentifierDeclType	char *		377251	0					
ANR	377264	Identifier	p		377251	1					
ANR	377265	IdentifierDecl	* q		377251	1					
ANR	377266	IdentifierDeclType	char *		377251	0					
ANR	377267	Identifier	q		377251	1					
ANR	377268	IdentifierDeclStatement	char * * result = NULL ;	142:1:4444:4464	377251	2	True				
ANR	377269	IdentifierDecl	* * result = NULL		377251	0					
ANR	377270	IdentifierDeclType	char * *		377251	0					
ANR	377271	Identifier	result		377251	1					
ANR	377272	AssignmentExpression	* * result = NULL		377251	2		=			
ANR	377273	Identifier	NULL		377251	0					
ANR	377274	Identifier	NULL		377251	1					
ANR	377275	ExpressionStatement	p = list	144:1:4468:4476	377251	3	True				
ANR	377276	AssignmentExpression	p = list		377251	0		=			
ANR	377277	Identifier	p		377251	0					
ANR	377278	Identifier	list		377251	1					
ANR	377279	WhileStatement	while ( p [ strlen ( p ) - 1 ] == LIST_DELIMITER )		377251	4					
ANR	377280	Condition	p [ strlen ( p ) - 1 ] == LIST_DELIMITER	147:8:4524:4555	377251	0	True				
ANR	377281	EqualityExpression	p [ strlen ( p ) - 1 ] == LIST_DELIMITER		377251	0		==			
ANR	377282	ArrayIndexing	p [ strlen ( p ) - 1 ]		377251	0					
ANR	377283	Identifier	p		377251	0					
ANR	377284	AdditiveExpression	strlen ( p ) - 1		377251	1		-			
ANR	377285	CallExpression	strlen ( p )		377251	0					
ANR	377286	Callee	strlen		377251	0					
ANR	377287	Identifier	strlen		377251	0					
ANR	377288	ArgumentList	p		377251	1					
ANR	377289	Argument	p		377251	0					
ANR	377290	Identifier	p		377251	0					
ANR	377291	PrimaryExpression	1		377251	1					
ANR	377292	Identifier	LIST_DELIMITER		377251	1					
ANR	377293	CompoundStatement		9:42:145:145	377251	1					
ANR	377294	ExpressionStatement	p [ strlen ( p ) - 1 ] = '\\0'	148:2:4562:4583	377251	0	True				
ANR	377295	AssignmentExpression	p [ strlen ( p ) - 1 ] = '\\0'		377251	0		=			
ANR	377296	ArrayIndexing	p [ strlen ( p ) - 1 ]		377251	0					
ANR	377297	Identifier	p		377251	0					
ANR	377298	AdditiveExpression	strlen ( p ) - 1		377251	1		-			
ANR	377299	CallExpression	strlen ( p )		377251	0					
ANR	377300	Callee	strlen		377251	0					
ANR	377301	Identifier	strlen		377251	0					
ANR	377302	ArgumentList	p		377251	1					
ANR	377303	Argument	p		377251	0					
ANR	377304	Identifier	p		377251	0					
ANR	377305	PrimaryExpression	1		377251	1					
ANR	377306	PrimaryExpression	'\\0'		377251	1					
ANR	377307	WhileStatement	while ( p [ 0 ] == LIST_DELIMITER )		377251	5					
ANR	377308	Condition	p [ 0 ] == LIST_DELIMITER	151:8:4630:4651	377251	0	True				
ANR	377309	EqualityExpression	p [ 0 ] == LIST_DELIMITER		377251	0		==			
ANR	377310	ArrayIndexing	p [ 0 ]		377251	0					
ANR	377311	Identifier	p		377251	0					
ANR	377312	PrimaryExpression	0		377251	1					
ANR	377313	Identifier	LIST_DELIMITER		377251	1					
ANR	377314	CompoundStatement		13:32:241:241	377251	1					
ANR	377315	ExpressionStatement	p ++	152:15:4671:4674	377251	0	True				
ANR	377316	PostIncDecOperationExpression	p ++		377251	0					
ANR	377317	Identifier	p		377251	0					
ANR	377318	IncDec	++		377251	1					
ANR	377319	ForStatement	for ( count = i = 0 ; p [ i ] ; i ++ )		377251	6					
ANR	377320	ForInit	count = i = 0 ;	156:6:4732:4741	377251	0	True				
ANR	377321	AssignmentExpression	count = i = 0		377251	0		=			
ANR	377322	Identifier	count		377251	0					
ANR	377323	AssignmentExpression	i = 0		377251	1		=			
ANR	377324	Identifier	i		377251	0					
ANR	377325	PrimaryExpression	0		377251	1					
ANR	377326	Condition	p [ i ]	156:17:4743:4746	377251	1	True				
ANR	377327	ArrayIndexing	p [ i ]		377251	0					
ANR	377328	Identifier	p		377251	0					
ANR	377329	Identifier	i		377251	1					
ANR	377330	PostIncDecOperationExpression	i ++	156:23:4749:4751	377251	2	True				
ANR	377331	Identifier	i		377251	0					
ANR	377332	IncDec	++		377251	1					
ANR	377333	IfStatement	if ( p [ i ] == LIST_DELIMITER )		377251	3					
ANR	377334	Condition	p [ i ] == LIST_DELIMITER	157:6:4760:4781	377251	0	True				
ANR	377335	EqualityExpression	p [ i ] == LIST_DELIMITER		377251	0		==			
ANR	377336	ArrayIndexing	p [ i ]		377251	0					
ANR	377337	Identifier	p		377251	0					
ANR	377338	Identifier	i		377251	1					
ANR	377339	Identifier	LIST_DELIMITER		377251	1					
ANR	377340	ExpressionStatement	count ++	157:30:4784:4791	377251	1	True				
ANR	377341	PostIncDecOperationExpression	count ++		377251	0					
ANR	377342	Identifier	count		377251	0					
ANR	377343	IncDec	++		377251	1					
ANR	377344	IfStatement	if ( ( result = ( char * * ) MALLOC ( sizeof ( char * ) * ( count + 2 ) ) ) == NULL )		377251	7					
ANR	377345	Condition	( result = ( char * * ) MALLOC ( sizeof ( char * ) * ( count + 2 ) ) ) == NULL	159:5:4799:4860	377251	0	True				
ANR	377346	EqualityExpression	( result = ( char * * ) MALLOC ( sizeof ( char * ) * ( count + 2 ) ) ) == NULL		377251	0		==			
ANR	377347	AssignmentExpression	result = ( char * * ) MALLOC ( sizeof ( char * ) * ( count + 2 ) )		377251	0		=			
ANR	377348	Identifier	result		377251	0					
ANR	377349	CastExpression	( char * * ) MALLOC ( sizeof ( char * ) * ( count + 2 ) )		377251	1					
ANR	377350	CastTarget	char * *		377251	0					
ANR	377351	CallExpression	MALLOC ( sizeof ( char * ) * ( count + 2 ) )		377251	1					
ANR	377352	Callee	MALLOC		377251	0					
ANR	377353	Identifier	MALLOC		377251	0					
ANR	377354	ArgumentList	sizeof ( char * ) * ( count + 2 )		377251	1					
ANR	377355	Argument	sizeof ( char * ) * ( count + 2 )		377251	0					
ANR	377356	MultiplicativeExpression	sizeof ( char * ) * ( count + 2 )		377251	0		*			
ANR	377357	SizeofExpression	sizeof ( char * )		377251	0					
ANR	377358	Sizeof	sizeof		377251	0					
ANR	377359	SizeofOperand	char *		377251	1					
ANR	377360	AdditiveExpression	count + 2		377251	1		+			
ANR	377361	Identifier	count		377251	0					
ANR	377362	PrimaryExpression	2		377251	1					
ANR	377363	Identifier	NULL		377251	1					
ANR	377364	CompoundStatement		21:69:450:450	377251	1					
ANR	377365	ExpressionStatement	"printf ( ""Sorry, can't get enough memory, exiting.\\n"" )"	160:2:4867:4920	377251	0	True				
ANR	377366	CallExpression	"printf ( ""Sorry, can't get enough memory, exiting.\\n"" )"		377251	0					
ANR	377367	Callee	printf		377251	0					
ANR	377368	Identifier	printf		377251	0					
ANR	377369	ArgumentList	"""Sorry, can't get enough memory, exiting.\\n"""		377251	1					
ANR	377370	Argument	"""Sorry, can't get enough memory, exiting.\\n"""		377251	0					
ANR	377371	PrimaryExpression	"""Sorry, can't get enough memory, exiting.\\n"""		377251	0					
ANR	377372	ExpressionStatement	exit ( 0 )	161:2:4924:4931	377251	1	True				
ANR	377373	CallExpression	exit ( 0 )		377251	0					
ANR	377374	Callee	exit		377251	0					
ANR	377375	Identifier	exit		377251	0					
ANR	377376	ArgumentList	0		377251	1					
ANR	377377	Argument	0		377251	0					
ANR	377378	PrimaryExpression	0		377251	0					
ANR	377379	ExpressionStatement	count = 0	169:1:5136:5145	377251	8	True				
ANR	377380	AssignmentExpression	count = 0		377251	0		=			
ANR	377381	Identifier	count		377251	0					
ANR	377382	PrimaryExpression	0		377251	1					
ANR	377383	WhileStatement	"while ( ( q = strchr ( p , LIST_DELIMITER ) ) )"		377251	9					
ANR	377384	Condition	"q = strchr ( p , LIST_DELIMITER )"	170:8:5155:5183	377251	0	True				
ANR	377385	AssignmentExpression	"q = strchr ( p , LIST_DELIMITER )"		377251	0		=			
ANR	377386	Identifier	q		377251	0					
ANR	377387	CallExpression	"strchr ( p , LIST_DELIMITER )"		377251	1					
ANR	377388	Callee	strchr		377251	0					
ANR	377389	Identifier	strchr		377251	0					
ANR	377390	ArgumentList	p		377251	1					
ANR	377391	Argument	p		377251	0					
ANR	377392	Identifier	p		377251	0					
ANR	377393	Argument	LIST_DELIMITER		377251	1					
ANR	377394	Identifier	LIST_DELIMITER		377251	0					
ANR	377395	CompoundStatement		32:39:773:773	377251	1					
ANR	377396	ExpressionStatement	result [ count ] = ( char * ) MALLOC ( q - p + 1 )	171:2:5190:5232	377251	0	True				
ANR	377397	AssignmentExpression	result [ count ] = ( char * ) MALLOC ( q - p + 1 )		377251	0		=			
ANR	377398	ArrayIndexing	result [ count ]		377251	0					
ANR	377399	Identifier	result		377251	0					
ANR	377400	Identifier	count		377251	1					
ANR	377401	CastExpression	( char * ) MALLOC ( q - p + 1 )		377251	1					
ANR	377402	CastTarget	char *		377251	0					
ANR	377403	CallExpression	MALLOC ( q - p + 1 )		377251	1					
ANR	377404	Callee	MALLOC		377251	0					
ANR	377405	Identifier	MALLOC		377251	0					
ANR	377406	ArgumentList	q - p + 1		377251	1					
ANR	377407	Argument	q - p + 1		377251	0					
ANR	377408	AdditiveExpression	q - p + 1		377251	0		-			
ANR	377409	Identifier	q		377251	0					
ANR	377410	AdditiveExpression	p + 1		377251	1		+			
ANR	377411	Identifier	p		377251	0					
ANR	377412	PrimaryExpression	1		377251	1					
ANR	377413	IfStatement	if ( result [ count ] == NULL )		377251	1					
ANR	377414	Condition	result [ count ] == NULL	172:6:5240:5260	377251	0	True				
ANR	377415	EqualityExpression	result [ count ] == NULL		377251	0		==			
ANR	377416	ArrayIndexing	result [ count ]		377251	0					
ANR	377417	Identifier	result		377251	0					
ANR	377418	Identifier	count		377251	1					
ANR	377419	Identifier	NULL		377251	1					
ANR	377420	CompoundStatement		34:29:850:850	377251	1					
ANR	377421	ExpressionStatement	"printf ( ""Sorry, can't get enough memory, exiting.\\n"" )"	173:3:5268:5321	377251	0	True				
ANR	377422	CallExpression	"printf ( ""Sorry, can't get enough memory, exiting.\\n"" )"		377251	0					
ANR	377423	Callee	printf		377251	0					
ANR	377424	Identifier	printf		377251	0					
ANR	377425	ArgumentList	"""Sorry, can't get enough memory, exiting.\\n"""		377251	1					
ANR	377426	Argument	"""Sorry, can't get enough memory, exiting.\\n"""		377251	0					
ANR	377427	PrimaryExpression	"""Sorry, can't get enough memory, exiting.\\n"""		377251	0					
ANR	377428	ExpressionStatement	exit ( 0 )	174:3:5326:5333	377251	1	True				
ANR	377429	CallExpression	exit ( 0 )		377251	0					
ANR	377430	Callee	exit		377251	0					
ANR	377431	Identifier	exit		377251	0					
ANR	377432	ArgumentList	0		377251	1					
ANR	377433	Argument	0		377251	0					
ANR	377434	PrimaryExpression	0		377251	0					
ANR	377435	ExpressionStatement	"strncpy ( result [ count ] , p , q - p )"	176:2:5393:5425	377251	2	True				
ANR	377436	CallExpression	"strncpy ( result [ count ] , p , q - p )"		377251	0					
ANR	377437	Callee	strncpy		377251	0					
ANR	377438	Identifier	strncpy		377251	0					
ANR	377439	ArgumentList	result [ count ]		377251	1					
ANR	377440	Argument	result [ count ]		377251	0					
ANR	377441	ArrayIndexing	result [ count ]		377251	0					
ANR	377442	Identifier	result		377251	0					
ANR	377443	Identifier	count		377251	1					
ANR	377444	Argument	p		377251	1					
ANR	377445	Identifier	p		377251	0					
ANR	377446	Argument	q - p		377251	2					
ANR	377447	AdditiveExpression	q - p		377251	0		-			
ANR	377448	Identifier	q		377251	0					
ANR	377449	Identifier	p		377251	1					
ANR	377450	ExpressionStatement	result [ count ] [ q - p ] = '\\0'	177:2:5429:5456	377251	3	True				
ANR	377451	AssignmentExpression	result [ count ] [ q - p ] = '\\0'		377251	0		=			
ANR	377452	ArrayIndexing	result [ count ] [ q - p ]		377251	0					
ANR	377453	ArrayIndexing	result [ count ]		377251	0					
ANR	377454	Identifier	result		377251	0					
ANR	377455	Identifier	count		377251	1					
ANR	377456	AdditiveExpression	q - p		377251	1		-			
ANR	377457	Identifier	q		377251	0					
ANR	377458	Identifier	p		377251	1					
ANR	377459	PrimaryExpression	'\\0'		377251	1					
ANR	377460	ExpressionStatement	p = q	178:2:5460:5465	377251	4	True				
ANR	377461	AssignmentExpression	p = q		377251	0		=			
ANR	377462	Identifier	p		377251	0					
ANR	377463	Identifier	q		377251	1					
ANR	377464	ExpressionStatement	p ++	178:9:5467:5470	377251	5	True				
ANR	377465	PostIncDecOperationExpression	p ++		377251	0					
ANR	377466	Identifier	p		377251	0					
ANR	377467	IncDec	++		377251	1					
ANR	377468	ExpressionStatement	count ++	179:2:5474:5481	377251	6	True				
ANR	377469	PostIncDecOperationExpression	count ++		377251	0					
ANR	377470	Identifier	count		377251	0					
ANR	377471	IncDec	++		377251	1					
ANR	377472	IfStatement	if ( ( result [ count ] = ( char * ) MALLOC ( strlen ( p ) + 1 ) ) == NULL )		377251	10					
ANR	377473	Condition	( result [ count ] = ( char * ) MALLOC ( strlen ( p ) + 1 ) ) == NULL	181:5:5491:5553	377251	0	True				
ANR	377474	EqualityExpression	( result [ count ] = ( char * ) MALLOC ( strlen ( p ) + 1 ) ) == NULL		377251	0		==			
ANR	377475	AssignmentExpression	result [ count ] = ( char * ) MALLOC ( strlen ( p ) + 1 )		377251	0		=			
ANR	377476	ArrayIndexing	result [ count ]		377251	0					
ANR	377477	Identifier	result		377251	0					
ANR	377478	Identifier	count		377251	1					
ANR	377479	CastExpression	( char * ) MALLOC ( strlen ( p ) + 1 )		377251	1					
ANR	377480	CastTarget	char *		377251	0					
ANR	377481	CallExpression	MALLOC ( strlen ( p ) + 1 )		377251	1					
ANR	377482	Callee	MALLOC		377251	0					
ANR	377483	Identifier	MALLOC		377251	0					
ANR	377484	ArgumentList	strlen ( p ) + 1		377251	1					
ANR	377485	Argument	strlen ( p ) + 1		377251	0					
ANR	377486	AdditiveExpression	strlen ( p ) + 1		377251	0		+			
ANR	377487	CallExpression	strlen ( p )		377251	0					
ANR	377488	Callee	strlen		377251	0					
ANR	377489	Identifier	strlen		377251	0					
ANR	377490	ArgumentList	p		377251	1					
ANR	377491	Argument	p		377251	0					
ANR	377492	Identifier	p		377251	0					
ANR	377493	PrimaryExpression	1		377251	1					
ANR	377494	Identifier	NULL		377251	1					
ANR	377495	CompoundStatement		44:46:1143:1143	377251	1					
ANR	377496	ExpressionStatement	"printf ( ""Sorry, can't get enough memory, exiting.\\n"" )"	183:2:5560:5613	377251	0	True				
ANR	377497	CallExpression	"printf ( ""Sorry, can't get enough memory, exiting.\\n"" )"		377251	0					
ANR	377498	Callee	printf		377251	0					
ANR	377499	Identifier	printf		377251	0					
ANR	377500	ArgumentList	"""Sorry, can't get enough memory, exiting.\\n"""		377251	1					
ANR	377501	Argument	"""Sorry, can't get enough memory, exiting.\\n"""		377251	0					
ANR	377502	PrimaryExpression	"""Sorry, can't get enough memory, exiting.\\n"""		377251	0					
ANR	377503	ExpressionStatement	exit ( 0 )	184:2:5617:5624	377251	1	True				
ANR	377504	CallExpression	exit ( 0 )		377251	0					
ANR	377505	Callee	exit		377251	0					
ANR	377506	Identifier	exit		377251	0					
ANR	377507	ArgumentList	0		377251	1					
ANR	377508	Argument	0		377251	0					
ANR	377509	PrimaryExpression	0		377251	0					
ANR	377510	ExpressionStatement	"strcpy ( result [ count ] , p )"	186:1:5682:5705	377251	11	True				
ANR	377511	CallExpression	"strcpy ( result [ count ] , p )"		377251	0					
ANR	377512	Callee	strcpy		377251	0					
ANR	377513	Identifier	strcpy		377251	0					
ANR	377514	ArgumentList	result [ count ]		377251	1					
ANR	377515	Argument	result [ count ]		377251	0					
ANR	377516	ArrayIndexing	result [ count ]		377251	0					
ANR	377517	Identifier	result		377251	0					
ANR	377518	Identifier	count		377251	1					
ANR	377519	Argument	p		377251	1					
ANR	377520	Identifier	p		377251	0					
ANR	377521	ExpressionStatement	result [ ++ count ] = NULL	187:1:5708:5730	377251	12	True				
ANR	377522	AssignmentExpression	result [ ++ count ] = NULL		377251	0		=			
ANR	377523	ArrayIndexing	result [ ++ count ]		377251	0					
ANR	377524	Identifier	result		377251	0					
ANR	377525	UnaryExpression	++ count		377251	1					
ANR	377526	IncDec	++		377251	0					
ANR	377527	Identifier	count		377251	1					
ANR	377528	Identifier	NULL		377251	1					
ANR	377529	ReturnStatement	return result ;	189:1:5734:5747	377251	13	True				
ANR	377530	Identifier	result		377251	0					
ANR	377531	ReturnType	char * *		377251	1					
ANR	377532	Identifier	syslogd_crunch_list		377251	2					
ANR	377533	ParameterList	char * list		377251	3					
ANR	377534	Parameter	char * list	138:27:4400:4409	377251	0	True				
ANR	377535	ParameterType	char *		377251	0					
ANR	377536	Identifier	list		377251	1					
ANR	377537	CFGEntryNode	ENTRY		377251		True				
ANR	377538	CFGExitNode	EXIT		377251		True				
ANR	377539	Symbol	NULL		377251						
ANR	377540	Symbol	LIST_DELIMITER		377251						
ANR	377541	Symbol	* * count		377251						
ANR	377542	Symbol	count		377251						
ANR	377543	Symbol	i		377251						
ANR	377544	Symbol	strchr		377251						
ANR	377545	Symbol	* * result		377251						
ANR	377546	Symbol	list		377251						
ANR	377547	Symbol	p		377251						
ANR	377548	Symbol	result		377251						
ANR	377549	Symbol	q		377251						
ANR	377550	Symbol	strlen		377251						
ANR	377551	Symbol	* count		377251						
ANR	377552	Symbol	* i		377251						
ANR	377553	Symbol	* strlen		377251						
ANR	377554	Symbol	MALLOC		377251						
ANR	377555	Symbol	* result		377251						
ANR	377556	Symbol	* p		377251						
ANR	377557	Symbol	* q		377251						
ANR	377558	Function	untty	195:0:5811:6471							
ANR	377559	FunctionDef	untty ()		377558	0					
ANR	377560	CompoundStatement		196:0:5828:6471	377558	0					
ANR	377561	IdentifierDeclStatement	int i ;	197:1:5831:5836	377558	0	True				
ANR	377562	IdentifierDecl	i		377558	0					
ANR	377563	IdentifierDeclType	int		377558	0					
ANR	377564	Identifier	i		377558	1					
ANR	377565	IdentifierDeclStatement	pid_t pid ;	198:1:5839:5848	377558	1	True				
ANR	377566	IdentifierDecl	pid		377558	0					
ANR	377567	IdentifierDeclType	pid_t		377558	0					
ANR	377568	Identifier	pid		377558	1					
ANR	377569	IfStatement	if ( ! Debug )		377558	2					
ANR	377570	Condition	! Debug	200:4:5855:5860	377558	0	True				
ANR	377571	UnaryOperationExpression	! Debug		377558	0					
ANR	377572	UnaryOperator	!		377558	0					
ANR	377573	Identifier	Debug		377558	1					
ANR	377574	CompoundStatement		5:12:34:34	377558	1					
ANR	377575	ExpressionStatement	pid = getpid ( )	202:2:5924:5938	377558	0	True				
ANR	377576	AssignmentExpression	pid = getpid ( )		377558	0		=			
ANR	377577	Identifier	pid		377558	0					
ANR	377578	CallExpression	getpid ( )		377558	1					
ANR	377579	Callee	getpid		377558	0					
ANR	377580	Identifier	getpid		377558	0					
ANR	377581	ArgumentList			377558	1					
ANR	377582	IfStatement	"if ( setpgid ( pid , pid ) < 0 )"		377558	1					
ANR	377583	Condition	"setpgid ( pid , pid ) < 0"	203:6:5946:5966	377558	0	True				
ANR	377584	RelationalExpression	"setpgid ( pid , pid ) < 0"		377558	0		<			
ANR	377585	CallExpression	"setpgid ( pid , pid )"		377558	0					
ANR	377586	Callee	setpgid		377558	0					
ANR	377587	Identifier	setpgid		377558	0					
ANR	377588	ArgumentList	pid		377558	1					
ANR	377589	Argument	pid		377558	0					
ANR	377590	Identifier	pid		377558	0					
ANR	377591	Argument	pid		377558	1					
ANR	377592	Identifier	pid		377558	0					
ANR	377593	PrimaryExpression	0		377558	1					
ANR	377594	CompoundStatement		8:29:140:140	377558	1					
ANR	377595	ExpressionStatement	"perror ( ""setpgid"" )"	204:3:5974:5991	377558	0	True				
ANR	377596	CallExpression	"perror ( ""setpgid"" )"		377558	0					
ANR	377597	Callee	perror		377558	0					
ANR	377598	Identifier	perror		377558	0					
ANR	377599	ArgumentList	"""setpgid"""		377558	1					
ANR	377600	Argument	"""setpgid"""		377558	0					
ANR	377601	PrimaryExpression	"""setpgid"""		377558	0					
ANR	377602	ExpressionStatement	exit ( 1 )	205:3:5996:6003	377558	1	True				
ANR	377603	CallExpression	exit ( 1 )		377558	0					
ANR	377604	Callee	exit		377558	0					
ANR	377605	Identifier	exit		377558	0					
ANR	377606	ArgumentList	1		377558	1					
ANR	377607	Argument	1		377558	0					
ANR	377608	PrimaryExpression	1		377558	0					
ANR	377609	ExpressionStatement	"i = open ( _PATH_TTY , O_RDWR | O_CLOEXEC )"	209:2:6073:6110	377558	2	True				
ANR	377610	AssignmentExpression	"i = open ( _PATH_TTY , O_RDWR | O_CLOEXEC )"		377558	0		=			
ANR	377611	Identifier	i		377558	0					
ANR	377612	CallExpression	"open ( _PATH_TTY , O_RDWR | O_CLOEXEC )"		377558	1					
ANR	377613	Callee	open		377558	0					
ANR	377614	Identifier	open		377558	0					
ANR	377615	ArgumentList	_PATH_TTY		377558	1					
ANR	377616	Argument	_PATH_TTY		377558	0					
ANR	377617	Identifier	_PATH_TTY		377558	0					
ANR	377618	Argument	O_RDWR | O_CLOEXEC		377558	1					
ANR	377619	InclusiveOrExpression	O_RDWR | O_CLOEXEC		377558	0		|			
ANR	377620	Identifier	O_RDWR		377558	0					
ANR	377621	Identifier	O_CLOEXEC		377558	1					
ANR	377622	IfStatement	if ( i >= 0 )		377558	3					
ANR	377623	Condition	i >= 0	210:6:6118:6123	377558	0	True				
ANR	377624	RelationalExpression	i >= 0		377558	0		>=			
ANR	377625	Identifier	i		377558	0					
ANR	377626	PrimaryExpression	0		377558	1					
ANR	377627	CompoundStatement		23:4:616:633	377558	1					
ANR	377628	Statement	if	211:4:6132:6133	377558	0	True				
ANR	377629	Statement	!	211:7:6135:6135	377558	1	True				
ANR	377630	Statement	defined	211:8:6136:6142	377558	2	True				
ANR	377631	ExpressionStatement	"( __hpux ) ( void ) ioctl ( i , ( int ) TIOCNOTTY , NULL )"	211:15:6143:6194	377558	3	True				
ANR	377632	CastExpression	"( __hpux ) ( void ) ioctl ( i , ( int ) TIOCNOTTY , NULL )"		377558	0					
ANR	377633	CastTarget	__hpux		377558	0					
ANR	377634	CastExpression	"( void ) ioctl ( i , ( int ) TIOCNOTTY , NULL )"		377558	1					
ANR	377635	CastTarget	void		377558	0					
ANR	377636	CallExpression	"ioctl ( i , ( int ) TIOCNOTTY , NULL )"		377558	1					
ANR	377637	Callee	ioctl		377558	0					
ANR	377638	Identifier	ioctl		377558	0					
ANR	377639	ArgumentList	i		377558	1					
ANR	377640	Argument	i		377558	0					
ANR	377641	Identifier	i		377558	0					
ANR	377642	Argument	( int ) TIOCNOTTY		377558	1					
ANR	377643	CastExpression	( int ) TIOCNOTTY		377558	0					
ANR	377644	CastTarget	int		377558	0					
ANR	377645	Identifier	TIOCNOTTY		377558	1					
ANR	377646	Argument	NULL		377558	2					
ANR	377647	Identifier	NULL		377558	0					
ANR	377648	ElseStatement	else		377558	0					
ANR	377649	IdentifierDeclStatement	endif close ( i ) ;	218:4:6445:6462	377558	0	True				
ANR	377650	IdentifierDecl	close ( i )		377558	0					
ANR	377651	IdentifierDeclType	endif		377558	0					
ANR	377652	Identifier	close		377558	1					
ANR	377653	Identifier	i		377558	2					
ANR	377654	ReturnType	void		377558	1					
ANR	377655	Identifier	untty		377558	2					
ANR	377656	ParameterList			377558	3					
ANR	377657	CFGEntryNode	ENTRY		377558		True				
ANR	377658	CFGExitNode	EXIT		377558		True				
ANR	377659	Symbol	O_RDWR		377558						
ANR	377660	Symbol	NULL		377558						
ANR	377661	Symbol	TIOCNOTTY		377558						
ANR	377662	Symbol	i		377558						
ANR	377663	Symbol	setpgid		377558						
ANR	377664	Symbol	pid		377558						
ANR	377665	Symbol	_PATH_TTY		377558						
ANR	377666	Symbol	getpid		377558						
ANR	377667	Symbol	close		377558						
ANR	377668	Symbol	Debug		377558						
ANR	377669	Symbol	open		377558						
ANR	377670	Symbol	O_CLOEXEC		377558						
