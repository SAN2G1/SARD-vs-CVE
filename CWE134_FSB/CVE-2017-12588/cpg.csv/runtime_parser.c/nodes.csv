command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	258263	File	data/converged/CVE-2017-12588_rsyslog/runtime_parser.c								
ANR	258264	DeclStmt									
ANR	258265	Decl							char	char [ 16 ]	hexdigit
ANR	258266	DeclStmt									
ANR	258267	Decl							parserList_t	parserList_t *	pParsLstRoot
ANR	258268	DeclStmt									
ANR	258269	Decl							parserList_t	parserList_t *	pDfltParsLst
ANR	258270	Function	InitParserList	77:0:2348:2446							
ANR	258271	FunctionDef	InitParserList (parserList_t * * pListRoot)		258270	0					
ANR	258272	CompoundStatement		79:0:2405:2446	258270	0					
ANR	258273	ExpressionStatement	* pListRoot = NULL	80:1:2408:2425	258270	0	True				
ANR	258274	AssignmentExpression	* pListRoot = NULL		258270	0		=			
ANR	258275	UnaryOperationExpression	* pListRoot		258270	0					
ANR	258276	UnaryOperator	*		258270	0					
ANR	258277	Identifier	pListRoot		258270	1					
ANR	258278	Identifier	NULL		258270	1					
ANR	258279	ReturnStatement	return RS_RET_OK ;	81:1:2428:2444	258270	1	True				
ANR	258280	Identifier	RS_RET_OK		258270	0					
ANR	258281	ReturnType	static rsRetVal		258270	1					
ANR	258282	Identifier	InitParserList		258270	2					
ANR	258283	ParameterList	parserList_t * * pListRoot		258270	3					
ANR	258284	Parameter	parserList_t * * pListRoot	78:15:2379:2402	258270	0	True				
ANR	258285	ParameterType	parserList_t * *		258270	0					
ANR	258286	Identifier	pListRoot		258270	1					
ANR	258287	CFGEntryNode	ENTRY		258270		True				
ANR	258288	CFGExitNode	EXIT		258270		True				
ANR	258289	Symbol	NULL		258270						
ANR	258290	Symbol	RS_RET_OK		258270						
ANR	258291	Symbol	* pListRoot		258270						
ANR	258292	Symbol	pListRoot		258270						
ANR	258293	Function	DestructParserList	89:0:2661:2951							
ANR	258294	FunctionDef	DestructParserList (parserList_t * * ppListRoot)		258293	0					
ANR	258295	CompoundStatement		91:0:2723:2951	258293	0					
ANR	258296	IdentifierDeclStatement	parserList_t * pParsLst ;	92:1:2726:2748	258293	0	True				
ANR	258297	IdentifierDecl	* pParsLst		258293	0					
ANR	258298	IdentifierDeclType	parserList_t *		258293	0					
ANR	258299	Identifier	pParsLst		258293	1					
ANR	258300	IdentifierDeclStatement	parserList_t * pParsLstDel ;	93:1:2751:2776	258293	1	True				
ANR	258301	IdentifierDecl	* pParsLstDel		258293	0					
ANR	258302	IdentifierDeclType	parserList_t *		258293	0					
ANR	258303	Identifier	pParsLstDel		258293	1					
ANR	258304	ExpressionStatement	pParsLst = * ppListRoot	95:1:2780:2802	258293	2	True				
ANR	258305	AssignmentExpression	pParsLst = * ppListRoot		258293	0		=			
ANR	258306	Identifier	pParsLst		258293	0					
ANR	258307	UnaryOperationExpression	* ppListRoot		258293	1					
ANR	258308	UnaryOperator	*		258293	0					
ANR	258309	Identifier	ppListRoot		258293	1					
ANR	258310	WhileStatement	while ( pParsLst != NULL )		258293	3					
ANR	258311	Condition	pParsLst != NULL	96:7:2811:2826	258293	0	True				
ANR	258312	EqualityExpression	pParsLst != NULL		258293	0		!=			
ANR	258313	Identifier	pParsLst		258293	0					
ANR	258314	Identifier	NULL		258293	1					
ANR	258315	CompoundStatement		6:25:105:105	258293	1					
ANR	258316	ExpressionStatement	pParsLstDel = pParsLst	97:2:2833:2855	258293	0	True				
ANR	258317	AssignmentExpression	pParsLstDel = pParsLst		258293	0		=			
ANR	258318	Identifier	pParsLstDel		258293	0					
ANR	258319	Identifier	pParsLst		258293	1					
ANR	258320	ExpressionStatement	pParsLst = pParsLst -> pNext	98:2:2859:2885	258293	1	True				
ANR	258321	AssignmentExpression	pParsLst = pParsLst -> pNext		258293	0		=			
ANR	258322	Identifier	pParsLst		258293	0					
ANR	258323	PtrMemberAccess	pParsLst -> pNext		258293	1					
ANR	258324	Identifier	pParsLst		258293	0					
ANR	258325	Identifier	pNext		258293	1					
ANR	258326	ExpressionStatement	free ( pParsLstDel )	99:2:2889:2906	258293	2	True				
ANR	258327	CallExpression	free ( pParsLstDel )		258293	0					
ANR	258328	Callee	free		258293	0					
ANR	258329	Identifier	free		258293	0					
ANR	258330	ArgumentList	pParsLstDel		258293	1					
ANR	258331	Argument	pParsLstDel		258293	0					
ANR	258332	Identifier	pParsLstDel		258293	0					
ANR	258333	ExpressionStatement	* ppListRoot = NULL	101:1:2912:2930	258293	4	True				
ANR	258334	AssignmentExpression	* ppListRoot = NULL		258293	0		=			
ANR	258335	UnaryOperationExpression	* ppListRoot		258293	0					
ANR	258336	UnaryOperator	*		258293	0					
ANR	258337	Identifier	ppListRoot		258293	1					
ANR	258338	Identifier	NULL		258293	1					
ANR	258339	ReturnStatement	return RS_RET_OK ;	102:1:2933:2949	258293	5	True				
ANR	258340	Identifier	RS_RET_OK		258293	0					
ANR	258341	ReturnType	static rsRetVal		258293	1					
ANR	258342	Identifier	DestructParserList		258293	2					
ANR	258343	ParameterList	parserList_t * * ppListRoot		258293	3					
ANR	258344	Parameter	parserList_t * * ppListRoot	90:19:2696:2720	258293	0	True				
ANR	258345	ParameterType	parserList_t * *		258293	0					
ANR	258346	Identifier	ppListRoot		258293	1					
ANR	258347	CFGEntryNode	ENTRY		258293		True				
ANR	258348	CFGExitNode	EXIT		258293		True				
ANR	258349	Symbol	ppListRoot		258293						
ANR	258350	Symbol	pParsLst -> pNext		258293						
ANR	258351	Symbol	pParsLst		258293						
ANR	258352	Symbol	NULL		258293						
ANR	258353	Symbol	* pParsLst		258293						
ANR	258354	Symbol	RS_RET_OK		258293						
ANR	258355	Symbol	* ppListRoot		258293						
ANR	258356	Symbol	pParsLstDel		258293						
ANR	258357	Function	AddParserToList	114:0:3410:4021							
ANR	258358	FunctionDef	"AddParserToList (parserList_t * * ppListRoot , parser_t * pParser)"		258357	0					
ANR	258359	CompoundStatement		116:0:3488:4021	258357	0					
ANR	258360	IdentifierDeclStatement	parserList_t * pThis ;	117:1:3491:3510	258357	0	True				
ANR	258361	IdentifierDecl	* pThis		258357	0					
ANR	258362	IdentifierDeclType	parserList_t *		258357	0					
ANR	258363	Identifier	pThis		258357	1					
ANR	258364	IdentifierDeclStatement	parserList_t * pTail ;	118:1:3513:3532	258357	1	True				
ANR	258365	IdentifierDecl	* pTail		258357	0					
ANR	258366	IdentifierDeclType	parserList_t *		258357	0					
ANR	258367	Identifier	pTail		258357	1					
ANR	258368	ExpressionStatement	DEFiRet	119:1:3535:3542	258357	2	True				
ANR	258369	Identifier	DEFiRet		258357	0					
ANR	258370	ExpressionStatement	CHKmalloc ( pThis = MALLOC ( sizeof ( parserList_t ) ) )	121:1:3546:3593	258357	3	True				
ANR	258371	CallExpression	CHKmalloc ( pThis = MALLOC ( sizeof ( parserList_t ) ) )		258357	0					
ANR	258372	Callee	CHKmalloc		258357	0					
ANR	258373	Identifier	CHKmalloc		258357	0					
ANR	258374	ArgumentList	pThis = MALLOC ( sizeof ( parserList_t ) )		258357	1					
ANR	258375	Argument	pThis = MALLOC ( sizeof ( parserList_t ) )		258357	0					
ANR	258376	AssignmentExpression	pThis = MALLOC ( sizeof ( parserList_t ) )		258357	0		=			
ANR	258377	Identifier	pThis		258357	0					
ANR	258378	CallExpression	MALLOC ( sizeof ( parserList_t ) )		258357	1					
ANR	258379	Callee	MALLOC		258357	0					
ANR	258380	Identifier	MALLOC		258357	0					
ANR	258381	ArgumentList	sizeof ( parserList_t )		258357	1					
ANR	258382	Argument	sizeof ( parserList_t )		258357	0					
ANR	258383	SizeofExpression	sizeof ( parserList_t )		258357	0					
ANR	258384	Sizeof	sizeof		258357	0					
ANR	258385	SizeofOperand	parserList_t		258357	1					
ANR	258386	ExpressionStatement	pThis -> pParser = pParser	122:1:3596:3620	258357	4	True				
ANR	258387	AssignmentExpression	pThis -> pParser = pParser		258357	0		=			
ANR	258388	PtrMemberAccess	pThis -> pParser		258357	0					
ANR	258389	Identifier	pThis		258357	0					
ANR	258390	Identifier	pParser		258357	1					
ANR	258391	Identifier	pParser		258357	1					
ANR	258392	ExpressionStatement	pThis -> pNext = NULL	123:1:3623:3642	258357	5	True				
ANR	258393	AssignmentExpression	pThis -> pNext = NULL		258357	0		=			
ANR	258394	PtrMemberAccess	pThis -> pNext		258357	0					
ANR	258395	Identifier	pThis		258357	0					
ANR	258396	Identifier	pNext		258357	1					
ANR	258397	Identifier	NULL		258357	1					
ANR	258398	IfStatement	if ( * ppListRoot == NULL )		258357	6					
ANR	258399	Condition	* ppListRoot == NULL	125:4:3649:3667	258357	0	True				
ANR	258400	EqualityExpression	* ppListRoot == NULL		258357	0		==			
ANR	258401	UnaryOperationExpression	* ppListRoot		258357	0					
ANR	258402	UnaryOperator	*		258357	0					
ANR	258403	Identifier	ppListRoot		258357	1					
ANR	258404	Identifier	NULL		258357	1					
ANR	258405	CompoundStatement		10:25:181:181	258357	1					
ANR	258406	ExpressionStatement	pThis -> pNext = * ppListRoot	126:2:3674:3700	258357	0	True				
ANR	258407	AssignmentExpression	pThis -> pNext = * ppListRoot		258357	0		=			
ANR	258408	PtrMemberAccess	pThis -> pNext		258357	0					
ANR	258409	Identifier	pThis		258357	0					
ANR	258410	Identifier	pNext		258357	1					
ANR	258411	UnaryOperationExpression	* ppListRoot		258357	1					
ANR	258412	UnaryOperator	*		258357	0					
ANR	258413	Identifier	ppListRoot		258357	1					
ANR	258414	ExpressionStatement	* ppListRoot = pThis	127:2:3704:3723	258357	1	True				
ANR	258415	AssignmentExpression	* ppListRoot = pThis		258357	0		=			
ANR	258416	UnaryOperationExpression	* ppListRoot		258357	0					
ANR	258417	UnaryOperator	*		258357	0					
ANR	258418	Identifier	ppListRoot		258357	1					
ANR	258419	Identifier	pThis		258357	1					
ANR	258420	ElseStatement	else		258357	0					
ANR	258421	CompoundStatement		13:8:244:244	258357	0					
ANR	258422	ForStatement	for ( pTail = * ppListRoot ; pTail -> pNext != NULL ; pTail = pTail -> pNext )		258357	0					
ANR	258423	ForInit	pTail = * ppListRoot ;	130:6:3765:3785	258357	0	True				
ANR	258424	AssignmentExpression	pTail = * ppListRoot		258357	0		=			
ANR	258425	Identifier	pTail		258357	0					
ANR	258426	UnaryOperationExpression	* ppListRoot		258357	1					
ANR	258427	UnaryOperator	*		258357	0					
ANR	258428	Identifier	ppListRoot		258357	1					
ANR	258429	Condition	pTail -> pNext != NULL	130:28:3787:3806	258357	1	True				
ANR	258430	EqualityExpression	pTail -> pNext != NULL		258357	0		!=			
ANR	258431	PtrMemberAccess	pTail -> pNext		258357	0					
ANR	258432	Identifier	pTail		258357	0					
ANR	258433	Identifier	pNext		258357	1					
ANR	258434	Identifier	NULL		258357	1					
ANR	258435	AssignmentExpression	pTail = pTail -> pNext	130:51:3810:3829	258357	2	True	=			
ANR	258436	Identifier	pTail		258357	0					
ANR	258437	PtrMemberAccess	pTail -> pNext		258357	1					
ANR	258438	Identifier	pTail		258357	0					
ANR	258439	Identifier	pNext		258357	1					
ANR	258440	ExpressionStatement		131:37:3869:3869	258357	3	True				
ANR	258441	ExpressionStatement	pTail -> pNext = pThis	133:2:3893:3913	258357	1	True				
ANR	258442	AssignmentExpression	pTail -> pNext = pThis		258357	0		=			
ANR	258443	PtrMemberAccess	pTail -> pNext		258357	0					
ANR	258444	Identifier	pTail		258357	0					
ANR	258445	Identifier	pNext		258357	1					
ANR	258446	Identifier	pThis		258357	1					
ANR	258447	ExpressionStatement	"DBGPRINTF ( ""DDDDD: added parser '%s' to list %p\\n"" , pParser -> pName , ppListRoot )"	135:0:3918:3996	258357	7	True				
ANR	258448	CallExpression	"DBGPRINTF ( ""DDDDD: added parser '%s' to list %p\\n"" , pParser -> pName , ppListRoot )"		258357	0					
ANR	258449	Callee	DBGPRINTF		258357	0					
ANR	258450	Identifier	DBGPRINTF		258357	0					
ANR	258451	ArgumentList	"""DDDDD: added parser '%s' to list %p\\n"""		258357	1					
ANR	258452	Argument	"""DDDDD: added parser '%s' to list %p\\n"""		258357	0					
ANR	258453	PrimaryExpression	"""DDDDD: added parser '%s' to list %p\\n"""		258357	0					
ANR	258454	Argument	pParser -> pName		258357	1					
ANR	258455	PtrMemberAccess	pParser -> pName		258357	0					
ANR	258456	Identifier	pParser		258357	0					
ANR	258457	Identifier	pName		258357	1					
ANR	258458	Argument	ppListRoot		258357	2					
ANR	258459	Identifier	ppListRoot		258357	0					
ANR	258460	Label	finalize_it :	136:0:3998:4009	258357	8	True				
ANR	258461	Identifier	finalize_it		258357	0					
ANR	258462	ExpressionStatement	RETiRet	137:1:4012:4019	258357	9	True				
ANR	258463	Identifier	RETiRet		258357	0					
ANR	258464	ReturnType	static rsRetVal		258357	1					
ANR	258465	Identifier	AddParserToList		258357	2					
ANR	258466	ParameterList	"parserList_t * * ppListRoot , parser_t * pParser"		258357	3					
ANR	258467	Parameter	parserList_t * * ppListRoot	115:16:3442:3466	258357	0	True				
ANR	258468	ParameterType	parserList_t * *		258357	0					
ANR	258469	Identifier	ppListRoot		258357	1					
ANR	258470	Parameter	parser_t * pParser	115:43:3469:3485	258357	1	True				
ANR	258471	ParameterType	parser_t *		258357	0					
ANR	258472	Identifier	pParser		258357	1					
ANR	258473	CFGEntryNode	ENTRY		258357		True				
ANR	258474	CFGExitNode	EXIT		258357		True				
ANR	258475	Symbol	ppListRoot		258357						
ANR	258476	Symbol	NULL		258357						
ANR	258477	Symbol	pThis -> pParser		258357						
ANR	258478	Symbol	pParser		258357						
ANR	258479	Symbol	* pThis		258357						
ANR	258480	Symbol	pThis -> pNext		258357						
ANR	258481	Symbol	* ppListRoot		258357						
ANR	258482	Symbol	pParser -> pName		258357						
ANR	258483	Symbol	* pParser		258357						
ANR	258484	Symbol	pTail		258357						
ANR	258485	Symbol	MALLOC		258357						
ANR	258486	Symbol	* pTail		258357						
ANR	258487	Symbol	pTail -> pNext		258357						
ANR	258488	Symbol	pThis		258357						
ANR	258489	Function	printParserList	140:0:4024:4171							
ANR	258490	FunctionDef	printParserList (parserList_t * pList)		258489	0					
ANR	258491	CompoundStatement		142:0:4066:4171	258489	0					
ANR	258492	WhileStatement	while ( pList != NULL )		258489	0					
ANR	258493	Condition	pList != NULL	143:7:4075:4087	258489	0	True				
ANR	258494	EqualityExpression	pList != NULL		258489	0		!=			
ANR	258495	Identifier	pList		258489	0					
ANR	258496	Identifier	NULL		258489	1					
ANR	258497	CompoundStatement		2:22:23:23	258489	1					
ANR	258498	ExpressionStatement	"dbgprintf ( ""parser: %s\\n"" , pList -> pParser -> pName )"	144:2:4094:4142	258489	0	True				
ANR	258499	CallExpression	"dbgprintf ( ""parser: %s\\n"" , pList -> pParser -> pName )"		258489	0					
ANR	258500	Callee	dbgprintf		258489	0					
ANR	258501	Identifier	dbgprintf		258489	0					
ANR	258502	ArgumentList	"""parser: %s\\n"""		258489	1					
ANR	258503	Argument	"""parser: %s\\n"""		258489	0					
ANR	258504	PrimaryExpression	"""parser: %s\\n"""		258489	0					
ANR	258505	Argument	pList -> pParser -> pName		258489	1					
ANR	258506	PtrMemberAccess	pList -> pParser -> pName		258489	0					
ANR	258507	PtrMemberAccess	pList -> pParser		258489	0					
ANR	258508	Identifier	pList		258489	0					
ANR	258509	Identifier	pParser		258489	1					
ANR	258510	Identifier	pName		258489	1					
ANR	258511	ExpressionStatement	pList = pList -> pNext	145:2:4146:4166	258489	1	True				
ANR	258512	AssignmentExpression	pList = pList -> pNext		258489	0		=			
ANR	258513	Identifier	pList		258489	0					
ANR	258514	PtrMemberAccess	pList -> pNext		258489	1					
ANR	258515	Identifier	pList		258489	0					
ANR	258516	Identifier	pNext		258489	1					
ANR	258517	ReturnType	void		258489	1					
ANR	258518	Identifier	printParserList		258489	2					
ANR	258519	ParameterList	parserList_t * pList		258489	3					
ANR	258520	Parameter	parserList_t * pList	141:16:4045:4063	258489	0	True				
ANR	258521	ParameterType	parserList_t *		258489	0					
ANR	258522	Identifier	pList		258489	1					
ANR	258523	CFGEntryNode	ENTRY		258489		True				
ANR	258524	CFGExitNode	EXIT		258489		True				
ANR	258525	Symbol	pList		258489						
ANR	258526	Symbol	NULL		258489						
ANR	258527	Symbol	* pList		258489						
ANR	258528	Symbol	pList -> pParser		258489						
ANR	258529	Symbol	pList -> pParser -> pName		258489						
ANR	258530	Symbol	* pList -> pParser		258489						
ANR	258531	Symbol	pList -> pNext		258489						
ANR	258532	Symbol	* * pList		258489						
ANR	258533	Function	FindParser	150:0:4221:4582							
ANR	258534	FunctionDef	"FindParser (parser_t * * ppParser , uchar * pName)"		258533	0					
ANR	258535	CompoundStatement		152:0:4283:4582	258533	0					
ANR	258536	IdentifierDeclStatement	parserList_t * pThis ;	153:1:4286:4305	258533	0	True				
ANR	258537	IdentifierDecl	* pThis		258533	0					
ANR	258538	IdentifierDeclType	parserList_t *		258533	0					
ANR	258539	Identifier	pThis		258533	1					
ANR	258540	ExpressionStatement	DEFiRet	154:1:4308:4315	258533	1	True				
ANR	258541	Identifier	DEFiRet		258533	0					
ANR	258542	ForStatement	for ( pThis = pParsLstRoot ; pThis != NULL ; pThis = pThis -> pNext )		258533	2					
ANR	258543	ForInit	pThis = pParsLstRoot ;	156:5:4324:4345	258533	0	True				
ANR	258544	AssignmentExpression	pThis = pParsLstRoot		258533	0		=			
ANR	258545	Identifier	pThis		258533	0					
ANR	258546	Identifier	pParsLstRoot		258533	1					
ANR	258547	Condition	pThis != NULL	156:28:4347:4359	258533	1	True				
ANR	258548	EqualityExpression	pThis != NULL		258533	0		!=			
ANR	258549	Identifier	pThis		258533	0					
ANR	258550	Identifier	NULL		258533	1					
ANR	258551	AssignmentExpression	pThis = pThis -> pNext	156:44:4363:4382	258533	2	True	=			
ANR	258552	Identifier	pThis		258533	0					
ANR	258553	PtrMemberAccess	pThis -> pNext		258533	1					
ANR	258554	Identifier	pThis		258533	0					
ANR	258555	Identifier	pNext		258533	1					
ANR	258556	CompoundStatement		5:66:101:101	258533	3					
ANR	258557	IfStatement	"if ( ustrcmp ( pThis -> pParser -> pName , pName ) == 0 )"		258533	0					
ANR	258558	Condition	"ustrcmp ( pThis -> pParser -> pName , pName ) == 0"	157:5:4392:4433	258533	0	True				
ANR	258559	EqualityExpression	"ustrcmp ( pThis -> pParser -> pName , pName ) == 0"		258533	0		==			
ANR	258560	CallExpression	"ustrcmp ( pThis -> pParser -> pName , pName )"		258533	0					
ANR	258561	Callee	ustrcmp		258533	0					
ANR	258562	Identifier	ustrcmp		258533	0					
ANR	258563	ArgumentList	pThis -> pParser -> pName		258533	1					
ANR	258564	Argument	pThis -> pParser -> pName		258533	0					
ANR	258565	PtrMemberAccess	pThis -> pParser -> pName		258533	0					
ANR	258566	PtrMemberAccess	pThis -> pParser		258533	0					
ANR	258567	Identifier	pThis		258533	0					
ANR	258568	Identifier	pParser		258533	1					
ANR	258569	Identifier	pName		258533	1					
ANR	258570	Argument	pName		258533	1					
ANR	258571	Identifier	pName		258533	0					
ANR	258572	PrimaryExpression	0		258533	1					
ANR	258573	CompoundStatement		6:49:152:152	258533	1					
ANR	258574	ExpressionStatement	* ppParser = pThis -> pParser	158:3:4441:4467	258533	0	True				
ANR	258575	AssignmentExpression	* ppParser = pThis -> pParser		258533	0		=			
ANR	258576	UnaryOperationExpression	* ppParser		258533	0					
ANR	258577	UnaryOperator	*		258533	0					
ANR	258578	Identifier	ppParser		258533	1					
ANR	258579	PtrMemberAccess	pThis -> pParser		258533	1					
ANR	258580	Identifier	pThis		258533	0					
ANR	258581	Identifier	pParser		258533	1					
ANR	258582	ExpressionStatement	FINALIZE	159:3:4472:4480	258533	1	True				
ANR	258583	Identifier	FINALIZE		258533	0					
ANR	258584	ExpressionStatement	iRet = RS_RET_PARSER_NOT_FOUND	163:1:4526:4556	258533	3	True				
ANR	258585	AssignmentExpression	iRet = RS_RET_PARSER_NOT_FOUND		258533	0		=			
ANR	258586	Identifier	iRet		258533	0					
ANR	258587	Identifier	RS_RET_PARSER_NOT_FOUND		258533	1					
ANR	258588	Label	finalize_it :	165:0:4559:4570	258533	4	True				
ANR	258589	Identifier	finalize_it		258533	0					
ANR	258590	ExpressionStatement	RETiRet	166:1:4573:4580	258533	5	True				
ANR	258591	Identifier	RETiRet		258533	0					
ANR	258592	ReturnType	static rsRetVal		258533	1					
ANR	258593	Identifier	FindParser		258533	2					
ANR	258594	ParameterList	"parser_t * * ppParser , uchar * pName"		258533	3					
ANR	258595	Parameter	parser_t * * ppParser	151:11:4248:4266	258533	0	True				
ANR	258596	ParameterType	parser_t * *		258533	0					
ANR	258597	Identifier	ppParser		258533	1					
ANR	258598	Parameter	uchar * pName	151:32:4269:4280	258533	1	True				
ANR	258599	ParameterType	uchar *		258533	0					
ANR	258600	Identifier	pName		258533	1					
ANR	258601	CFGEntryNode	ENTRY		258533		True				
ANR	258602	CFGExitNode	EXIT		258533		True				
ANR	258603	Symbol	NULL		258533						
ANR	258604	Symbol	ustrcmp		258533						
ANR	258605	Symbol	pThis -> pParser		258533						
ANR	258606	Symbol	pParsLstRoot		258533						
ANR	258607	Symbol	iRet		258533						
ANR	258608	Symbol	* pThis -> pParser		258533						
ANR	258609	Symbol	* pThis		258533						
ANR	258610	Symbol	pThis -> pNext		258533						
ANR	258611	Symbol	RS_RET_PARSER_NOT_FOUND		258533						
ANR	258612	Symbol	* * pThis		258533						
ANR	258613	Symbol	ppParser		258533						
ANR	258614	Symbol	pThis -> pParser -> pName		258533						
ANR	258615	Symbol	pName		258533						
ANR	258616	Symbol	pThis		258533						
ANR	258617	Symbol	* ppParser		258533						
ANR	258618	Function	AddDfltParser	177:0:4878:5135							
ANR	258619	FunctionDef	AddDfltParser (uchar * pName)		258618	0					
ANR	258620	CompoundStatement		179:0:4922:5135	258618	0					
ANR	258621	IdentifierDeclStatement	parser_t * pParser ;	180:1:4925:4942	258618	0	True				
ANR	258622	IdentifierDecl	* pParser		258618	0					
ANR	258623	IdentifierDeclType	parser_t *		258618	0					
ANR	258624	Identifier	pParser		258618	1					
ANR	258625	ExpressionStatement	DEFiRet	181:1:4945:4952	258618	1	True				
ANR	258626	Identifier	DEFiRet		258618	0					
ANR	258627	ExpressionStatement	"CHKiRet ( FindParser ( & pParser , pName ) )"	183:1:4956:4992	258618	2	True				
ANR	258628	CallExpression	"CHKiRet ( FindParser ( & pParser , pName ) )"		258618	0					
ANR	258629	Callee	CHKiRet		258618	0					
ANR	258630	Identifier	CHKiRet		258618	0					
ANR	258631	ArgumentList	"FindParser ( & pParser , pName )"		258618	1					
ANR	258632	Argument	"FindParser ( & pParser , pName )"		258618	0					
ANR	258633	CallExpression	"FindParser ( & pParser , pName )"		258618	0					
ANR	258634	Callee	FindParser		258618	0					
ANR	258635	Identifier	FindParser		258618	0					
ANR	258636	ArgumentList	& pParser		258618	1					
ANR	258637	Argument	& pParser		258618	0					
ANR	258638	UnaryOperationExpression	& pParser		258618	0					
ANR	258639	UnaryOperator	&		258618	0					
ANR	258640	Identifier	pParser		258618	1					
ANR	258641	Argument	pName		258618	1					
ANR	258642	Identifier	pName		258618	0					
ANR	258643	ExpressionStatement	"CHKiRet ( AddParserToList ( & pDfltParsLst , pParser ) )"	184:1:4995:5043	258618	3	True				
ANR	258644	CallExpression	"CHKiRet ( AddParserToList ( & pDfltParsLst , pParser ) )"		258618	0					
ANR	258645	Callee	CHKiRet		258618	0					
ANR	258646	Identifier	CHKiRet		258618	0					
ANR	258647	ArgumentList	"AddParserToList ( & pDfltParsLst , pParser )"		258618	1					
ANR	258648	Argument	"AddParserToList ( & pDfltParsLst , pParser )"		258618	0					
ANR	258649	CallExpression	"AddParserToList ( & pDfltParsLst , pParser )"		258618	0					
ANR	258650	Callee	AddParserToList		258618	0					
ANR	258651	Identifier	AddParserToList		258618	0					
ANR	258652	ArgumentList	& pDfltParsLst		258618	1					
ANR	258653	Argument	& pDfltParsLst		258618	0					
ANR	258654	UnaryOperationExpression	& pDfltParsLst		258618	0					
ANR	258655	UnaryOperator	&		258618	0					
ANR	258656	Identifier	pDfltParsLst		258618	1					
ANR	258657	Argument	pParser		258618	1					
ANR	258658	Identifier	pParser		258618	0					
ANR	258659	ExpressionStatement	"DBGPRINTF ( ""Parser '%s' added to default parser set.\\n"" , pName )"	185:1:5046:5108	258618	4	True				
ANR	258660	CallExpression	"DBGPRINTF ( ""Parser '%s' added to default parser set.\\n"" , pName )"		258618	0					
ANR	258661	Callee	DBGPRINTF		258618	0					
ANR	258662	Identifier	DBGPRINTF		258618	0					
ANR	258663	ArgumentList	"""Parser '%s' added to default parser set.\\n"""		258618	1					
ANR	258664	Argument	"""Parser '%s' added to default parser set.\\n"""		258618	0					
ANR	258665	PrimaryExpression	"""Parser '%s' added to default parser set.\\n"""		258618	0					
ANR	258666	Argument	pName		258618	1					
ANR	258667	Identifier	pName		258618	0					
ANR	258668	Label	finalize_it :	187:0:5112:5123	258618	5	True				
ANR	258669	Identifier	finalize_it		258618	0					
ANR	258670	ExpressionStatement	RETiRet	188:1:5126:5133	258618	6	True				
ANR	258671	Identifier	RETiRet		258618	0					
ANR	258672	ReturnType	static rsRetVal		258618	1					
ANR	258673	Identifier	AddDfltParser		258618	2					
ANR	258674	ParameterList	uchar * pName		258618	3					
ANR	258675	Parameter	uchar * pName	178:14:4908:4919	258618	0	True				
ANR	258676	ParameterType	uchar *		258618	0					
ANR	258677	Identifier	pName		258618	1					
ANR	258678	CFGEntryNode	ENTRY		258618		True				
ANR	258679	CFGExitNode	EXIT		258618		True				
ANR	258680	Symbol	AddParserToList		258618						
ANR	258681	Symbol	pName		258618						
ANR	258682	Symbol	pParser		258618						
ANR	258683	Symbol	& pDfltParsLst		258618						
ANR	258684	Symbol	& pParser		258618						
ANR	258685	Symbol	FindParser		258618						
ANR	258686	Function	SetName	195:0:5252:5521							
ANR	258687	FunctionDef	"SetName (parser_t * pThis , uchar * name)"		258686	0					
ANR	258688	CompoundStatement		197:0:5306:5521	258686	0					
ANR	258689	ExpressionStatement	DEFiRet	198:1:5309:5316	258686	0	True				
ANR	258690	Identifier	DEFiRet		258686	0					
ANR	258691	ExpressionStatement	"ISOBJ_TYPE_assert ( pThis , parser )"	200:1:5320:5352	258686	1	True				
ANR	258692	CallExpression	"ISOBJ_TYPE_assert ( pThis , parser )"		258686	0					
ANR	258693	Callee	ISOBJ_TYPE_assert		258686	0					
ANR	258694	Identifier	ISOBJ_TYPE_assert		258686	0					
ANR	258695	ArgumentList	pThis		258686	1					
ANR	258696	Argument	pThis		258686	0					
ANR	258697	Identifier	pThis		258686	0					
ANR	258698	Argument	parser		258686	1					
ANR	258699	Identifier	parser		258686	0					
ANR	258700	ExpressionStatement	assert ( name != NULL )	201:1:5355:5375	258686	2	True				
ANR	258701	CallExpression	assert ( name != NULL )		258686	0					
ANR	258702	Callee	assert		258686	0					
ANR	258703	Identifier	assert		258686	0					
ANR	258704	ArgumentList	name != NULL		258686	1					
ANR	258705	Argument	name != NULL		258686	0					
ANR	258706	EqualityExpression	name != NULL		258686	0		!=			
ANR	258707	Identifier	name		258686	0					
ANR	258708	Identifier	NULL		258686	1					
ANR	258709	IfStatement	if ( pThis -> pName != NULL )		258686	3					
ANR	258710	Condition	pThis -> pName != NULL	203:4:5382:5401	258686	0	True				
ANR	258711	EqualityExpression	pThis -> pName != NULL		258686	0		!=			
ANR	258712	PtrMemberAccess	pThis -> pName		258686	0					
ANR	258713	Identifier	pThis		258686	0					
ANR	258714	Identifier	pName		258686	1					
ANR	258715	Identifier	NULL		258686	1					
ANR	258716	CompoundStatement		7:26:97:97	258686	1					
ANR	258717	ExpressionStatement	free ( pThis -> pName )	204:2:5408:5426	258686	0	True				
ANR	258718	CallExpression	free ( pThis -> pName )		258686	0					
ANR	258719	Callee	free		258686	0					
ANR	258720	Identifier	free		258686	0					
ANR	258721	ArgumentList	pThis -> pName		258686	1					
ANR	258722	Argument	pThis -> pName		258686	0					
ANR	258723	PtrMemberAccess	pThis -> pName		258686	0					
ANR	258724	Identifier	pThis		258686	0					
ANR	258725	Identifier	pName		258686	1					
ANR	258726	ExpressionStatement	pThis -> pName = NULL	205:2:5430:5449	258686	1	True				
ANR	258727	AssignmentExpression	pThis -> pName = NULL		258686	0		=			
ANR	258728	PtrMemberAccess	pThis -> pName		258686	0					
ANR	258729	Identifier	pThis		258686	0					
ANR	258730	Identifier	pName		258686	1					
ANR	258731	Identifier	NULL		258686	1					
ANR	258732	ExpressionStatement	CHKmalloc ( pThis -> pName = ustrdup ( name ) )	208:1:5456:5495	258686	4	True				
ANR	258733	CallExpression	CHKmalloc ( pThis -> pName = ustrdup ( name ) )		258686	0					
ANR	258734	Callee	CHKmalloc		258686	0					
ANR	258735	Identifier	CHKmalloc		258686	0					
ANR	258736	ArgumentList	pThis -> pName = ustrdup ( name )		258686	1					
ANR	258737	Argument	pThis -> pName = ustrdup ( name )		258686	0					
ANR	258738	AssignmentExpression	pThis -> pName = ustrdup ( name )		258686	0		=			
ANR	258739	PtrMemberAccess	pThis -> pName		258686	0					
ANR	258740	Identifier	pThis		258686	0					
ANR	258741	Identifier	pName		258686	1					
ANR	258742	CallExpression	ustrdup ( name )		258686	1					
ANR	258743	Callee	ustrdup		258686	0					
ANR	258744	Identifier	ustrdup		258686	0					
ANR	258745	ArgumentList	name		258686	1					
ANR	258746	Argument	name		258686	0					
ANR	258747	Identifier	name		258686	0					
ANR	258748	Label	finalize_it :	210:0:5498:5509	258686	5	True				
ANR	258749	Identifier	finalize_it		258686	0					
ANR	258750	ExpressionStatement	RETiRet	211:1:5512:5519	258686	6	True				
ANR	258751	Identifier	RETiRet		258686	0					
ANR	258752	ReturnType	static rsRetVal		258686	1					
ANR	258753	Identifier	SetName		258686	2					
ANR	258754	ParameterList	"parser_t * pThis , uchar * name"		258686	3					
ANR	258755	Parameter	parser_t * pThis	196:8:5276:5290	258686	0	True				
ANR	258756	ParameterType	parser_t *		258686	0					
ANR	258757	Identifier	pThis		258686	1					
ANR	258758	Parameter	uchar * name	196:25:5293:5303	258686	1	True				
ANR	258759	ParameterType	uchar *		258686	0					
ANR	258760	Identifier	name		258686	1					
ANR	258761	CFGEntryNode	ENTRY		258686		True				
ANR	258762	CFGExitNode	EXIT		258686		True				
ANR	258763	Symbol	pThis -> pName		258686						
ANR	258764	Symbol	NULL		258686						
ANR	258765	Symbol	parser		258686						
ANR	258766	Symbol	name		258686						
ANR	258767	Symbol	* pThis		258686						
ANR	258768	Symbol	pThis		258686						
ANR	258769	Symbol	ustrdup		258686						
ANR	258770	Function	SetModPtr	218:0:5615:5811							
ANR	258771	FunctionDef	"SetModPtr (parser_t * pThis , modInfo_t * pMod)"		258770	0					
ANR	258772	CompoundStatement		220:0:5675:5811	258770	0					
ANR	258773	ExpressionStatement	"ISOBJ_TYPE_assert ( pThis , parser )"	221:1:5678:5710	258770	0	True				
ANR	258774	CallExpression	"ISOBJ_TYPE_assert ( pThis , parser )"		258770	0					
ANR	258775	Callee	ISOBJ_TYPE_assert		258770	0					
ANR	258776	Identifier	ISOBJ_TYPE_assert		258770	0					
ANR	258777	ArgumentList	pThis		258770	1					
ANR	258778	Argument	pThis		258770	0					
ANR	258779	Identifier	pThis		258770	0					
ANR	258780	Argument	parser		258770	1					
ANR	258781	Identifier	parser		258770	0					
ANR	258782	ExpressionStatement	assert ( pMod != NULL )	222:1:5713:5733	258770	1	True				
ANR	258783	CallExpression	assert ( pMod != NULL )		258770	0					
ANR	258784	Callee	assert		258770	0					
ANR	258785	Identifier	assert		258770	0					
ANR	258786	ArgumentList	pMod != NULL		258770	1					
ANR	258787	Argument	pMod != NULL		258770	0					
ANR	258788	EqualityExpression	pMod != NULL		258770	0		!=			
ANR	258789	Identifier	pMod		258770	0					
ANR	258790	Identifier	NULL		258770	1					
ANR	258791	ExpressionStatement	assert ( pThis -> pModule == NULL )	223:1:5736:5766	258770	2	True				
ANR	258792	CallExpression	assert ( pThis -> pModule == NULL )		258770	0					
ANR	258793	Callee	assert		258770	0					
ANR	258794	Identifier	assert		258770	0					
ANR	258795	ArgumentList	pThis -> pModule == NULL		258770	1					
ANR	258796	Argument	pThis -> pModule == NULL		258770	0					
ANR	258797	EqualityExpression	pThis -> pModule == NULL		258770	0		==			
ANR	258798	PtrMemberAccess	pThis -> pModule		258770	0					
ANR	258799	Identifier	pThis		258770	0					
ANR	258800	Identifier	pModule		258770	1					
ANR	258801	Identifier	NULL		258770	1					
ANR	258802	ExpressionStatement	pThis -> pModule = pMod	224:1:5769:5790	258770	3	True				
ANR	258803	AssignmentExpression	pThis -> pModule = pMod		258770	0		=			
ANR	258804	PtrMemberAccess	pThis -> pModule		258770	0					
ANR	258805	Identifier	pThis		258770	0					
ANR	258806	Identifier	pModule		258770	1					
ANR	258807	Identifier	pMod		258770	1					
ANR	258808	ReturnStatement	return RS_RET_OK ;	225:1:5793:5809	258770	4	True				
ANR	258809	Identifier	RS_RET_OK		258770	0					
ANR	258810	ReturnType	static rsRetVal		258770	1					
ANR	258811	Identifier	SetModPtr		258770	2					
ANR	258812	ParameterList	"parser_t * pThis , modInfo_t * pMod"		258770	3					
ANR	258813	Parameter	parser_t * pThis	219:10:5641:5655	258770	0	True				
ANR	258814	ParameterType	parser_t *		258770	0					
ANR	258815	Identifier	pThis		258770	1					
ANR	258816	Parameter	modInfo_t * pMod	219:27:5658:5672	258770	1	True				
ANR	258817	ParameterType	modInfo_t *		258770	0					
ANR	258818	Identifier	pMod		258770	1					
ANR	258819	CFGEntryNode	ENTRY		258770		True				
ANR	258820	CFGExitNode	EXIT		258770		True				
ANR	258821	Symbol	NULL		258770						
ANR	258822	Symbol	parser		258770						
ANR	258823	Symbol	pMod		258770						
ANR	258824	Symbol	RS_RET_OK		258770						
ANR	258825	Symbol	pThis -> pModule		258770						
ANR	258826	Symbol	* pThis		258770						
ANR	258827	Symbol	pThis		258770						
ANR	258828	Function	SetDoPRIParsing	232:0:5921:6068							
ANR	258829	FunctionDef	"SetDoPRIParsing (parser_t * pThis , int bDoIt)"		258828	0					
ANR	258830	CompoundStatement		234:0:5981:6068	258828	0					
ANR	258831	ExpressionStatement	"ISOBJ_TYPE_assert ( pThis , parser )"	235:1:5984:6016	258828	0	True				
ANR	258832	CallExpression	"ISOBJ_TYPE_assert ( pThis , parser )"		258828	0					
ANR	258833	Callee	ISOBJ_TYPE_assert		258828	0					
ANR	258834	Identifier	ISOBJ_TYPE_assert		258828	0					
ANR	258835	ArgumentList	pThis		258828	1					
ANR	258836	Argument	pThis		258828	0					
ANR	258837	Identifier	pThis		258828	0					
ANR	258838	Argument	parser		258828	1					
ANR	258839	Identifier	parser		258828	0					
ANR	258840	ExpressionStatement	pThis -> bDoPRIParsing = bDoIt	236:1:6019:6047	258828	1	True				
ANR	258841	AssignmentExpression	pThis -> bDoPRIParsing = bDoIt		258828	0		=			
ANR	258842	PtrMemberAccess	pThis -> bDoPRIParsing		258828	0					
ANR	258843	Identifier	pThis		258828	0					
ANR	258844	Identifier	bDoPRIParsing		258828	1					
ANR	258845	Identifier	bDoIt		258828	1					
ANR	258846	ReturnStatement	return RS_RET_OK ;	237:1:6050:6066	258828	2	True				
ANR	258847	Identifier	RS_RET_OK		258828	0					
ANR	258848	ReturnType	static rsRetVal		258828	1					
ANR	258849	Identifier	SetDoPRIParsing		258828	2					
ANR	258850	ParameterList	"parser_t * pThis , int bDoIt"		258828	3					
ANR	258851	Parameter	parser_t * pThis	233:16:5953:5967	258828	0	True				
ANR	258852	ParameterType	parser_t *		258828	0					
ANR	258853	Identifier	pThis		258828	1					
ANR	258854	Parameter	int bDoIt	233:33:5970:5978	258828	1	True				
ANR	258855	ParameterType	int		258828	0					
ANR	258856	Identifier	bDoIt		258828	1					
ANR	258857	CFGEntryNode	ENTRY		258828		True				
ANR	258858	CFGExitNode	EXIT		258828		True				
ANR	258859	Symbol	parser		258828						
ANR	258860	Symbol	RS_RET_OK		258828						
ANR	258861	Symbol	* pThis		258828						
ANR	258862	Symbol	pThis		258828						
ANR	258863	Symbol	bDoIt		258828						
ANR	258864	Symbol	pThis -> bDoPRIParsing		258828						
ANR	258865	Function	parserConstructFinalize	250:0:6337:6594							
ANR	258866	FunctionDef	parserConstructFinalize (parser_t * pThis)		258865	0					
ANR	258867	CompoundStatement		251:0:6394:6594	258865	0					
ANR	258868	ExpressionStatement	DEFiRet	252:1:6397:6404	258865	0	True				
ANR	258869	Identifier	DEFiRet		258865	0					
ANR	258870	ExpressionStatement	"ISOBJ_TYPE_assert ( pThis , parser )"	254:1:6408:6440	258865	1	True				
ANR	258871	CallExpression	"ISOBJ_TYPE_assert ( pThis , parser )"		258865	0					
ANR	258872	Callee	ISOBJ_TYPE_assert		258865	0					
ANR	258873	Identifier	ISOBJ_TYPE_assert		258865	0					
ANR	258874	ArgumentList	pThis		258865	1					
ANR	258875	Argument	pThis		258865	0					
ANR	258876	Identifier	pThis		258865	0					
ANR	258877	Argument	parser		258865	1					
ANR	258878	Identifier	parser		258865	0					
ANR	258879	ExpressionStatement	"CHKiRet ( AddParserToList ( & pParsLstRoot , pThis ) )"	255:1:6443:6489	258865	2	True				
ANR	258880	CallExpression	"CHKiRet ( AddParserToList ( & pParsLstRoot , pThis ) )"		258865	0					
ANR	258881	Callee	CHKiRet		258865	0					
ANR	258882	Identifier	CHKiRet		258865	0					
ANR	258883	ArgumentList	"AddParserToList ( & pParsLstRoot , pThis )"		258865	1					
ANR	258884	Argument	"AddParserToList ( & pParsLstRoot , pThis )"		258865	0					
ANR	258885	CallExpression	"AddParserToList ( & pParsLstRoot , pThis )"		258865	0					
ANR	258886	Callee	AddParserToList		258865	0					
ANR	258887	Identifier	AddParserToList		258865	0					
ANR	258888	ArgumentList	& pParsLstRoot		258865	1					
ANR	258889	Argument	& pParsLstRoot		258865	0					
ANR	258890	UnaryOperationExpression	& pParsLstRoot		258865	0					
ANR	258891	UnaryOperator	&		258865	0					
ANR	258892	Identifier	pParsLstRoot		258865	1					
ANR	258893	Argument	pThis		258865	1					
ANR	258894	Identifier	pThis		258865	0					
ANR	258895	ExpressionStatement	"DBGPRINTF ( ""Parser '%s' added to list of available parsers.\\n"" , pThis -> pName )"	256:1:6492:6568	258865	3	True				
ANR	258896	CallExpression	"DBGPRINTF ( ""Parser '%s' added to list of available parsers.\\n"" , pThis -> pName )"		258865	0					
ANR	258897	Callee	DBGPRINTF		258865	0					
ANR	258898	Identifier	DBGPRINTF		258865	0					
ANR	258899	ArgumentList	"""Parser '%s' added to list of available parsers.\\n"""		258865	1					
ANR	258900	Argument	"""Parser '%s' added to list of available parsers.\\n"""		258865	0					
ANR	258901	PrimaryExpression	"""Parser '%s' added to list of available parsers.\\n"""		258865	0					
ANR	258902	Argument	pThis -> pName		258865	1					
ANR	258903	PtrMemberAccess	pThis -> pName		258865	0					
ANR	258904	Identifier	pThis		258865	0					
ANR	258905	Identifier	pName		258865	1					
ANR	258906	Label	finalize_it :	258:0:6571:6582	258865	4	True				
ANR	258907	Identifier	finalize_it		258865	0					
ANR	258908	ExpressionStatement	RETiRet	259:1:6585:6592	258865	5	True				
ANR	258909	Identifier	RETiRet		258865	0					
ANR	258910	ReturnType	static rsRetVal		258865	1					
ANR	258911	Identifier	parserConstructFinalize		258865	2					
ANR	258912	ParameterList	parser_t * pThis		258865	3					
ANR	258913	Parameter	parser_t * pThis	250:40:6377:6391	258865	0	True				
ANR	258914	ParameterType	parser_t *		258865	0					
ANR	258915	Identifier	pThis		258865	1					
ANR	258916	CFGEntryNode	ENTRY		258865		True				
ANR	258917	CFGExitNode	EXIT		258865		True				
ANR	258918	Symbol	AddParserToList		258865						
ANR	258919	Symbol	pThis -> pName		258865						
ANR	258920	Symbol	parser		258865						
ANR	258921	Symbol	& pParsLstRoot		258865						
ANR	258922	Symbol	* pThis		258865						
ANR	258923	Symbol	pThis		258865						
ANR	258924	DeclStmt									
ANR	258925	Decl							rsRetVal	rsRetVal	localRet
ANR	258926	DeclStmt									
ANR	258927	Decl							parser_t	parser_t *	pParser
ANR	258928	Function	uncompressMessage	312:0:8112:10137							
ANR	258929	FunctionDef	uncompressMessage (smsg_t * pMsg)		258928	0					
ANR	258930	CompoundStatement		313:0:8160:10137	258928	0					
ANR	258931	ExpressionStatement	DEFiRet	314:1:8163:8170	258928	0	True				
ANR	258932	Identifier	DEFiRet		258928	0					
ANR	258933	IdentifierDeclStatement	uchar * deflateBuf = NULL ;	315:1:8173:8197	258928	1	True				
ANR	258934	IdentifierDecl	* deflateBuf = NULL		258928	0					
ANR	258935	IdentifierDeclType	uchar *		258928	0					
ANR	258936	Identifier	deflateBuf		258928	1					
ANR	258937	AssignmentExpression	* deflateBuf = NULL		258928	2		=			
ANR	258938	Identifier	NULL		258928	0					
ANR	258939	Identifier	NULL		258928	1					
ANR	258940	IdentifierDeclStatement	uLongf iLenDefBuf ;	316:1:8200:8217	258928	2	True				
ANR	258941	IdentifierDecl	iLenDefBuf		258928	0					
ANR	258942	IdentifierDeclType	uLongf		258928	0					
ANR	258943	Identifier	iLenDefBuf		258928	1					
ANR	258944	IdentifierDeclStatement	uchar * pszMsg ;	317:1:8220:8233	258928	3	True				
ANR	258945	IdentifierDecl	* pszMsg		258928	0					
ANR	258946	IdentifierDeclType	uchar *		258928	0					
ANR	258947	Identifier	pszMsg		258928	1					
ANR	258948	IdentifierDeclStatement	size_t lenMsg ;	318:1:8236:8249	258928	4	True				
ANR	258949	IdentifierDecl	lenMsg		258928	0					
ANR	258950	IdentifierDeclType	size_t		258928	0					
ANR	258951	Identifier	lenMsg		258928	1					
ANR	258952	ExpressionStatement	assert ( pMsg != NULL )	320:1:8254:8274	258928	5	True				
ANR	258953	CallExpression	assert ( pMsg != NULL )		258928	0					
ANR	258954	Callee	assert		258928	0					
ANR	258955	Identifier	assert		258928	0					
ANR	258956	ArgumentList	pMsg != NULL		258928	1					
ANR	258957	Argument	pMsg != NULL		258928	0					
ANR	258958	EqualityExpression	pMsg != NULL		258928	0		!=			
ANR	258959	Identifier	pMsg		258928	0					
ANR	258960	Identifier	NULL		258928	1					
ANR	258961	ExpressionStatement	pszMsg = pMsg -> pszRawMsg	321:1:8277:8301	258928	6	True				
ANR	258962	AssignmentExpression	pszMsg = pMsg -> pszRawMsg		258928	0		=			
ANR	258963	Identifier	pszMsg		258928	0					
ANR	258964	PtrMemberAccess	pMsg -> pszRawMsg		258928	1					
ANR	258965	Identifier	pMsg		258928	0					
ANR	258966	Identifier	pszRawMsg		258928	1					
ANR	258967	ExpressionStatement	lenMsg = pMsg -> iLenRawMsg	322:1:8304:8329	258928	7	True				
ANR	258968	AssignmentExpression	lenMsg = pMsg -> iLenRawMsg		258928	0		=			
ANR	258969	Identifier	lenMsg		258928	0					
ANR	258970	PtrMemberAccess	pMsg -> iLenRawMsg		258928	1					
ANR	258971	Identifier	pMsg		258928	0					
ANR	258972	Identifier	iLenRawMsg		258928	1					
ANR	258973	IfStatement	if ( lenMsg > 0 && * pszMsg == 'z' )		258928	8					
ANR	258974	Condition	lenMsg > 0 && * pszMsg == 'z'	327:4:8434:8461	258928	0	True				
ANR	258975	AndExpression	lenMsg > 0 && * pszMsg == 'z'		258928	0		&&			
ANR	258976	RelationalExpression	lenMsg > 0		258928	0		>			
ANR	258977	Identifier	lenMsg		258928	0					
ANR	258978	PrimaryExpression	0		258928	1					
ANR	258979	EqualityExpression	* pszMsg == 'z'		258928	1		==			
ANR	258980	UnaryOperationExpression	* pszMsg		258928	0					
ANR	258981	UnaryOperator	*		258928	0					
ANR	258982	Identifier	pszMsg		258928	1					
ANR	258983	PrimaryExpression	'z'		258928	1					
ANR	258984	CompoundStatement		23:2:777:784	258928	1					
ANR	258985	IdentifierDeclStatement	int ret ;	335:2:8938:8945	258928	0	True				
ANR	258986	IdentifierDecl	ret		258928	0					
ANR	258987	IdentifierDeclType	int		258928	0					
ANR	258988	Identifier	ret		258928	1					
ANR	258989	ExpressionStatement	iLenDefBuf = glbl . GetMaxLine ( )	336:2:8949:8979	258928	1	True				
ANR	258990	AssignmentExpression	iLenDefBuf = glbl . GetMaxLine ( )		258928	0		=			
ANR	258991	Identifier	iLenDefBuf		258928	0					
ANR	258992	CallExpression	glbl . GetMaxLine ( )		258928	1					
ANR	258993	Callee	glbl . GetMaxLine		258928	0					
ANR	258994	MemberAccess	glbl . GetMaxLine		258928	0					
ANR	258995	Identifier	glbl		258928	0					
ANR	258996	Identifier	GetMaxLine		258928	1					
ANR	258997	ArgumentList			258928	1					
ANR	258998	ExpressionStatement	CHKmalloc ( deflateBuf = MALLOC ( iLenDefBuf + 1 ) )	337:2:8983:9029	258928	2	True				
ANR	258999	CallExpression	CHKmalloc ( deflateBuf = MALLOC ( iLenDefBuf + 1 ) )		258928	0					
ANR	259000	Callee	CHKmalloc		258928	0					
ANR	259001	Identifier	CHKmalloc		258928	0					
ANR	259002	ArgumentList	deflateBuf = MALLOC ( iLenDefBuf + 1 )		258928	1					
ANR	259003	Argument	deflateBuf = MALLOC ( iLenDefBuf + 1 )		258928	0					
ANR	259004	AssignmentExpression	deflateBuf = MALLOC ( iLenDefBuf + 1 )		258928	0		=			
ANR	259005	Identifier	deflateBuf		258928	0					
ANR	259006	CallExpression	MALLOC ( iLenDefBuf + 1 )		258928	1					
ANR	259007	Callee	MALLOC		258928	0					
ANR	259008	Identifier	MALLOC		258928	0					
ANR	259009	ArgumentList	iLenDefBuf + 1		258928	1					
ANR	259010	Argument	iLenDefBuf + 1		258928	0					
ANR	259011	AdditiveExpression	iLenDefBuf + 1		258928	0		+			
ANR	259012	Identifier	iLenDefBuf		258928	0					
ANR	259013	PrimaryExpression	1		258928	1					
ANR	259014	ExpressionStatement	"ret = uncompress ( ( uchar * ) deflateBuf , & iLenDefBuf , ( uchar * ) pszMsg + 1 , lenMsg - 1 )"	338:2:9033:9114	258928	3	True				
ANR	259015	AssignmentExpression	"ret = uncompress ( ( uchar * ) deflateBuf , & iLenDefBuf , ( uchar * ) pszMsg + 1 , lenMsg - 1 )"		258928	0		=			
ANR	259016	Identifier	ret		258928	0					
ANR	259017	CallExpression	"uncompress ( ( uchar * ) deflateBuf , & iLenDefBuf , ( uchar * ) pszMsg + 1 , lenMsg - 1 )"		258928	1					
ANR	259018	Callee	uncompress		258928	0					
ANR	259019	Identifier	uncompress		258928	0					
ANR	259020	ArgumentList	( uchar * ) deflateBuf		258928	1					
ANR	259021	Argument	( uchar * ) deflateBuf		258928	0					
ANR	259022	CastExpression	( uchar * ) deflateBuf		258928	0					
ANR	259023	CastTarget	uchar *		258928	0					
ANR	259024	Identifier	deflateBuf		258928	1					
ANR	259025	Argument	& iLenDefBuf		258928	1					
ANR	259026	UnaryOperationExpression	& iLenDefBuf		258928	0					
ANR	259027	UnaryOperator	&		258928	0					
ANR	259028	Identifier	iLenDefBuf		258928	1					
ANR	259029	Argument	( uchar * ) pszMsg + 1		258928	2					
ANR	259030	AdditiveExpression	( uchar * ) pszMsg + 1		258928	0		+			
ANR	259031	CastExpression	( uchar * ) pszMsg		258928	0					
ANR	259032	CastTarget	uchar *		258928	0					
ANR	259033	Identifier	pszMsg		258928	1					
ANR	259034	PrimaryExpression	1		258928	1					
ANR	259035	Argument	lenMsg - 1		258928	3					
ANR	259036	AdditiveExpression	lenMsg - 1		258928	0		-			
ANR	259037	Identifier	lenMsg		258928	0					
ANR	259038	PrimaryExpression	1		258928	1					
ANR	259039	ExpressionStatement	"DBGPRINTF ( ""Compressed message uncompressed with status %d, length: new %ld, old %d.\\n"" , ret , ( long ) iLenDefBuf , ( int ) ( lenMsg - 1 ) )"	339:2:9118:9257	258928	4	True				
ANR	259040	CallExpression	"DBGPRINTF ( ""Compressed message uncompressed with status %d, length: new %ld, old %d.\\n"" , ret , ( long ) iLenDefBuf , ( int ) ( lenMsg - 1 ) )"		258928	0					
ANR	259041	Callee	DBGPRINTF		258928	0					
ANR	259042	Identifier	DBGPRINTF		258928	0					
ANR	259043	ArgumentList	"""Compressed message uncompressed with status %d, length: new %ld, old %d.\\n"""		258928	1					
ANR	259044	Argument	"""Compressed message uncompressed with status %d, length: new %ld, old %d.\\n"""		258928	0					
ANR	259045	PrimaryExpression	"""Compressed message uncompressed with status %d, length: new %ld, old %d.\\n"""		258928	0					
ANR	259046	Argument	ret		258928	1					
ANR	259047	Identifier	ret		258928	0					
ANR	259048	Argument	( long ) iLenDefBuf		258928	2					
ANR	259049	CastExpression	( long ) iLenDefBuf		258928	0					
ANR	259050	CastTarget	long		258928	0					
ANR	259051	Identifier	iLenDefBuf		258928	1					
ANR	259052	Argument	( int ) ( lenMsg - 1 )		258928	3					
ANR	259053	CastExpression	( int ) ( lenMsg - 1 )		258928	0					
ANR	259054	CastTarget	int		258928	0					
ANR	259055	AdditiveExpression	lenMsg - 1		258928	1		-			
ANR	259056	Identifier	lenMsg		258928	0					
ANR	259057	PrimaryExpression	1		258928	1					
ANR	259058	IfStatement	if ( ret != Z_OK )		258928	5					
ANR	259059	Condition	ret != Z_OK	349:5:9734:9744	258928	0	True				
ANR	259060	EqualityExpression	ret != Z_OK		258928	0		!=			
ANR	259061	Identifier	ret		258928	0					
ANR	259062	Identifier	Z_OK		258928	1					
ANR	259063	CompoundStatement		37:18:1586:1586	258928	1					
ANR	259064	Statement	errmsg	350:3:9752:9757	258928	0	True				
ANR	259065	Statement	.	350:9:9758:9758	258928	1	True				
ANR	259066	Statement	LogError	350:10:9759:9766	258928	2	True				
ANR	259067	Statement	(	350:18:9767:9767	258928	3	True				
ANR	259068	Statement	0	350:19:9768:9768	258928	4	True				
ANR	259069	Statement	","	350:20:9769:9769	258928	5	True				
ANR	259070	Statement	NO_ERRCODE	350:22:9771:9780	258928	6	True				
ANR	259071	Statement	","	350:32:9781:9781	258928	7	True				
ANR	259072	Statement	"""Uncompression of a message failed with return code %d """	350:34:9783:9838	258928	8	True				
ANR	259073	Statement	"""- enable debug logging if you need further information. """	351:15:9855:9912	258928	9	True				
ANR	259074	Statement	"""Message ignored."""	352:8:9922:9939	258928	10	True				
ANR	259075	Statement	","	352:26:9940:9940	258928	11	True				
ANR	259076	Statement	ret	352:28:9942:9944	258928	12	True				
ANR	259077	Statement	)	352:31:9945:9945	258928	13	True				
ANR	259078	ExpressionStatement		352:32:9946:9946	258928	14	True				
ANR	259079	ExpressionStatement	FINALIZE	353:3:9951:9959	258928	15	True				
ANR	259080	Identifier	FINALIZE		258928	0					
ANR	259081	ExpressionStatement	"MsgSetRawMsg ( pMsg , ( char * ) deflateBuf , iLenDefBuf )"	355:2:10015:10064	258928	6	True				
ANR	259082	CallExpression	"MsgSetRawMsg ( pMsg , ( char * ) deflateBuf , iLenDefBuf )"		258928	0					
ANR	259083	Callee	MsgSetRawMsg		258928	0					
ANR	259084	Identifier	MsgSetRawMsg		258928	0					
ANR	259085	ArgumentList	pMsg		258928	1					
ANR	259086	Argument	pMsg		258928	0					
ANR	259087	Identifier	pMsg		258928	0					
ANR	259088	Argument	( char * ) deflateBuf		258928	1					
ANR	259089	CastExpression	( char * ) deflateBuf		258928	0					
ANR	259090	CastTarget	char *		258928	0					
ANR	259091	Identifier	deflateBuf		258928	1					
ANR	259092	Argument	iLenDefBuf		258928	2					
ANR	259093	Identifier	iLenDefBuf		258928	0					
ANR	259094	Label	finalize_it :	357:0:10069:10080	258928	9	True				
ANR	259095	Identifier	finalize_it		258928	0					
ANR	259096	IfStatement	if ( deflateBuf != NULL )		258928	10					
ANR	259097	Condition	deflateBuf != NULL	358:4:10086:10103	258928	0	True				
ANR	259098	EqualityExpression	deflateBuf != NULL		258928	0		!=			
ANR	259099	Identifier	deflateBuf		258928	0					
ANR	259100	Identifier	NULL		258928	1					
ANR	259101	ExpressionStatement	free ( deflateBuf )	359:2:10108:10124	258928	1	True				
ANR	259102	CallExpression	free ( deflateBuf )		258928	0					
ANR	259103	Callee	free		258928	0					
ANR	259104	Identifier	free		258928	0					
ANR	259105	ArgumentList	deflateBuf		258928	1					
ANR	259106	Argument	deflateBuf		258928	0					
ANR	259107	Identifier	deflateBuf		258928	0					
ANR	259108	ExpressionStatement	RETiRet	361:1:10128:10135	258928	11	True				
ANR	259109	Identifier	RETiRet		258928	0					
ANR	259110	ReturnType	static rsRetVal		258928	1					
ANR	259111	Identifier	uncompressMessage		258928	2					
ANR	259112	ParameterList	smsg_t * pMsg		258928	3					
ANR	259113	Parameter	smsg_t * pMsg	312:34:8146:8157	258928	0	True				
ANR	259114	ParameterType	smsg_t *		258928	0					
ANR	259115	Identifier	pMsg		258928	1					
ANR	259116	CFGEntryNode	ENTRY		258928		True				
ANR	259117	CFGExitNode	EXIT		258928		True				
ANR	259118	Symbol	ret		258928						
ANR	259119	Symbol	pszMsg		258928						
ANR	259120	Symbol	lenMsg		258928						
ANR	259121	Symbol	NULL		258928						
ANR	259122	Symbol	pMsg -> iLenRawMsg		258928						
ANR	259123	Symbol	* pszMsg		258928						
ANR	259124	Symbol	pMsg		258928						
ANR	259125	Symbol	pMsg -> pszRawMsg		258928						
ANR	259126	Symbol	* pMsg		258928						
ANR	259127	Symbol	glbl . GetMaxLine		258928						
ANR	259128	Symbol	& iLenDefBuf		258928						
ANR	259129	Symbol	iLenDefBuf		258928						
ANR	259130	Symbol	deflateBuf		258928						
ANR	259131	Symbol	Z_OK		258928						
ANR	259132	Symbol	MALLOC		258928						
ANR	259133	Symbol	uncompress		258928						
ANR	259134	Symbol	glbl		258928						
ANR	259135	Function	SanitizeMsg	379:0:10905:16687							
ANR	259136	FunctionDef	SanitizeMsg (smsg_t * pMsg)		259135	0					
ANR	259137	CompoundStatement		381:0:10947:16687	259135	0					
ANR	259138	ExpressionStatement	DEFiRet	382:1:10950:10957	259135	0	True				
ANR	259139	Identifier	DEFiRet		259135	0					
ANR	259140	IdentifierDeclStatement	uchar * pszMsg ;	383:1:10960:10973	259135	1	True				
ANR	259141	IdentifierDecl	* pszMsg		259135	0					
ANR	259142	IdentifierDeclType	uchar *		259135	0					
ANR	259143	Identifier	pszMsg		259135	1					
ANR	259144	IdentifierDeclStatement	uchar * pDst ;	384:1:10976:10987	259135	2	True				
ANR	259145	IdentifierDecl	* pDst		259135	0					
ANR	259146	IdentifierDeclType	uchar *		259135	0					
ANR	259147	Identifier	pDst		259135	1					
ANR	259148	IdentifierDeclStatement	size_t lenMsg ;	385:1:11021:11034	259135	3	True				
ANR	259149	IdentifierDecl	lenMsg		259135	0					
ANR	259150	IdentifierDeclType	size_t		259135	0					
ANR	259151	Identifier	lenMsg		259135	1					
ANR	259152	IdentifierDeclStatement	size_t iSrc ;	386:1:11037:11048	259135	4	True				
ANR	259153	IdentifierDecl	iSrc		259135	0					
ANR	259154	IdentifierDeclType	size_t		259135	0					
ANR	259155	Identifier	iSrc		259135	1					
ANR	259156	IdentifierDeclStatement	size_t iDst ;	387:1:11051:11062	259135	5	True				
ANR	259157	IdentifierDecl	iDst		259135	0					
ANR	259158	IdentifierDeclType	size_t		259135	0					
ANR	259159	Identifier	iDst		259135	1					
ANR	259160	IdentifierDeclStatement	size_t iMaxLine ;	388:1:11065:11080	259135	6	True				
ANR	259161	IdentifierDecl	iMaxLine		259135	0					
ANR	259162	IdentifierDeclType	size_t		259135	0					
ANR	259163	Identifier	iMaxLine		259135	1					
ANR	259164	IdentifierDeclStatement	size_t maxDest ;	389:1:11083:11097	259135	7	True				
ANR	259165	IdentifierDecl	maxDest		259135	0					
ANR	259166	IdentifierDeclType	size_t		259135	0					
ANR	259167	Identifier	maxDest		259135	1					
ANR	259168	IdentifierDeclStatement	uchar pc ;	390:1:11100:11108	259135	8	True				
ANR	259169	IdentifierDecl	pc		259135	0					
ANR	259170	IdentifierDeclType	uchar		259135	0					
ANR	259171	Identifier	pc		259135	1					
ANR	259172	IdentifierDeclStatement	sbool bUpdatedLen = RSFALSE ;	391:1:11111:11138	259135	9	True				
ANR	259173	IdentifierDecl	bUpdatedLen = RSFALSE		259135	0					
ANR	259174	IdentifierDeclType	sbool		259135	0					
ANR	259175	Identifier	bUpdatedLen		259135	1					
ANR	259176	AssignmentExpression	bUpdatedLen = RSFALSE		259135	2		=			
ANR	259177	Identifier	RSFALSE		259135	0					
ANR	259178	Identifier	RSFALSE		259135	1					
ANR	259179	IdentifierDeclStatement	uchar szSanBuf [ 32 * 1024 ] ;	392:1:11141:11164	259135	10	True				
ANR	259180	IdentifierDecl	szSanBuf [ 32 * 1024 ]		259135	0					
ANR	259181	IdentifierDeclType	uchar [ 32 * 1024 ]		259135	0					
ANR	259182	Identifier	szSanBuf		259135	1					
ANR	259183	MultiplicativeExpression	32 * 1024		259135	2		*			
ANR	259184	PrimaryExpression	32		259135	0					
ANR	259185	PrimaryExpression	1024		259135	1					
ANR	259186	ExpressionStatement	assert ( pMsg != NULL )	394:1:11210:11230	259135	11	True				
ANR	259187	CallExpression	assert ( pMsg != NULL )		259135	0					
ANR	259188	Callee	assert		259135	0					
ANR	259189	Identifier	assert		259135	0					
ANR	259190	ArgumentList	pMsg != NULL		259135	1					
ANR	259191	Argument	pMsg != NULL		259135	0					
ANR	259192	EqualityExpression	pMsg != NULL		259135	0		!=			
ANR	259193	Identifier	pMsg		259135	0					
ANR	259194	Identifier	NULL		259135	1					
ANR	259195	ExpressionStatement	assert ( pMsg -> iLenRawMsg > 0 )	395:1:11233:11261	259135	12	True				
ANR	259196	CallExpression	assert ( pMsg -> iLenRawMsg > 0 )		259135	0					
ANR	259197	Callee	assert		259135	0					
ANR	259198	Identifier	assert		259135	0					
ANR	259199	ArgumentList	pMsg -> iLenRawMsg > 0		259135	1					
ANR	259200	Argument	pMsg -> iLenRawMsg > 0		259135	0					
ANR	259201	RelationalExpression	pMsg -> iLenRawMsg > 0		259135	0		>			
ANR	259202	PtrMemberAccess	pMsg -> iLenRawMsg		259135	0					
ANR	259203	Identifier	pMsg		259135	0					
ANR	259204	Identifier	iLenRawMsg		259135	1					
ANR	259205	PrimaryExpression	0		259135	1					
ANR	259206	ExpressionStatement	pszMsg = pMsg -> pszRawMsg	397:1:11265:11289	259135	13	True				
ANR	259207	AssignmentExpression	pszMsg = pMsg -> pszRawMsg		259135	0		=			
ANR	259208	Identifier	pszMsg		259135	0					
ANR	259209	PtrMemberAccess	pMsg -> pszRawMsg		259135	1					
ANR	259210	Identifier	pMsg		259135	0					
ANR	259211	Identifier	pszRawMsg		259135	1					
ANR	259212	ExpressionStatement	lenMsg = pMsg -> iLenRawMsg	398:1:11292:11317	259135	14	True				
ANR	259213	AssignmentExpression	lenMsg = pMsg -> iLenRawMsg		259135	0		=			
ANR	259214	Identifier	lenMsg		259135	0					
ANR	259215	PtrMemberAccess	pMsg -> iLenRawMsg		259135	1					
ANR	259216	Identifier	pMsg		259135	0					
ANR	259217	Identifier	iLenRawMsg		259135	1					
ANR	259218	IfStatement	if ( pszMsg [ lenMsg - 1 ] == '\\0' )		259135	15					
ANR	259219	Condition	pszMsg [ lenMsg - 1 ] == '\\0'	404:4:11508:11531	259135	0	True				
ANR	259220	EqualityExpression	pszMsg [ lenMsg - 1 ] == '\\0'		259135	0		==			
ANR	259221	ArrayIndexing	pszMsg [ lenMsg - 1 ]		259135	0					
ANR	259222	Identifier	pszMsg		259135	0					
ANR	259223	AdditiveExpression	lenMsg - 1		259135	1		-			
ANR	259224	Identifier	lenMsg		259135	0					
ANR	259225	PrimaryExpression	1		259135	1					
ANR	259226	PrimaryExpression	'\\0'		259135	1					
ANR	259227	CompoundStatement		24:30:586:586	259135	1					
ANR	259228	ExpressionStatement	"DBGPRINTF ( ""dropped NUL at very end of message\\n"" )"	405:2:11538:11587	259135	0	True				
ANR	259229	CallExpression	"DBGPRINTF ( ""dropped NUL at very end of message\\n"" )"		259135	0					
ANR	259230	Callee	DBGPRINTF		259135	0					
ANR	259231	Identifier	DBGPRINTF		259135	0					
ANR	259232	ArgumentList	"""dropped NUL at very end of message\\n"""		259135	1					
ANR	259233	Argument	"""dropped NUL at very end of message\\n"""		259135	0					
ANR	259234	PrimaryExpression	"""dropped NUL at very end of message\\n"""		259135	0					
ANR	259235	ExpressionStatement	bUpdatedLen = RSTRUE	406:2:11591:11611	259135	1	True				
ANR	259236	AssignmentExpression	bUpdatedLen = RSTRUE		259135	0		=			
ANR	259237	Identifier	bUpdatedLen		259135	0					
ANR	259238	Identifier	RSTRUE		259135	1					
ANR	259239	ExpressionStatement	lenMsg --	407:2:11615:11623	259135	2	True				
ANR	259240	PostIncDecOperationExpression	lenMsg --		259135	0					
ANR	259241	Identifier	lenMsg		259135	0					
ANR	259242	IncDec	--		259135	1					
ANR	259243	IfStatement	if ( glbl . GetParserDropTrailingLFOnReception ( ) && lenMsg > 0 && pszMsg [ lenMsg - 1 ] == '\\n' )		259135	16					
ANR	259244	Condition	glbl . GetParserDropTrailingLFOnReception ( ) && lenMsg > 0 && pszMsg [ lenMsg - 1 ] == '\\n'	415:4:11896:11982	259135	0	True				
ANR	259245	AndExpression	glbl . GetParserDropTrailingLFOnReception ( ) && lenMsg > 0 && pszMsg [ lenMsg - 1 ] == '\\n'		259135	0		&&			
ANR	259246	CallExpression	glbl . GetParserDropTrailingLFOnReception ( )		259135	0					
ANR	259247	Callee	glbl . GetParserDropTrailingLFOnReception		259135	0					
ANR	259248	MemberAccess	glbl . GetParserDropTrailingLFOnReception		259135	0					
ANR	259249	Identifier	glbl		259135	0					
ANR	259250	Identifier	GetParserDropTrailingLFOnReception		259135	1					
ANR	259251	ArgumentList			259135	1					
ANR	259252	AndExpression	lenMsg > 0 && pszMsg [ lenMsg - 1 ] == '\\n'		259135	1		&&			
ANR	259253	RelationalExpression	lenMsg > 0		259135	0		>			
ANR	259254	Identifier	lenMsg		259135	0					
ANR	259255	PrimaryExpression	0		259135	1					
ANR	259256	EqualityExpression	pszMsg [ lenMsg - 1 ] == '\\n'		259135	1		==			
ANR	259257	ArrayIndexing	pszMsg [ lenMsg - 1 ]		259135	0					
ANR	259258	Identifier	pszMsg		259135	0					
ANR	259259	AdditiveExpression	lenMsg - 1		259135	1		-			
ANR	259260	Identifier	lenMsg		259135	0					
ANR	259261	PrimaryExpression	1		259135	1					
ANR	259262	PrimaryExpression	'\\n'		259135	1					
ANR	259263	CompoundStatement		36:47:1037:1037	259135	1					
ANR	259264	ExpressionStatement	"DBGPRINTF ( ""dropped LF at very end of message (DropTrailingLF is set)\\n"" )"	417:2:11989:12061	259135	0	True				
ANR	259265	CallExpression	"DBGPRINTF ( ""dropped LF at very end of message (DropTrailingLF is set)\\n"" )"		259135	0					
ANR	259266	Callee	DBGPRINTF		259135	0					
ANR	259267	Identifier	DBGPRINTF		259135	0					
ANR	259268	ArgumentList	"""dropped LF at very end of message (DropTrailingLF is set)\\n"""		259135	1					
ANR	259269	Argument	"""dropped LF at very end of message (DropTrailingLF is set)\\n"""		259135	0					
ANR	259270	PrimaryExpression	"""dropped LF at very end of message (DropTrailingLF is set)\\n"""		259135	0					
ANR	259271	ExpressionStatement	lenMsg --	418:2:12065:12073	259135	1	True				
ANR	259272	PostIncDecOperationExpression	lenMsg --		259135	0					
ANR	259273	Identifier	lenMsg		259135	0					
ANR	259274	IncDec	--		259135	1					
ANR	259275	ExpressionStatement	pszMsg [ lenMsg ] = '\\0'	419:2:12077:12098	259135	2	True				
ANR	259276	AssignmentExpression	pszMsg [ lenMsg ] = '\\0'		259135	0		=			
ANR	259277	ArrayIndexing	pszMsg [ lenMsg ]		259135	0					
ANR	259278	Identifier	pszMsg		259135	0					
ANR	259279	Identifier	lenMsg		259135	1					
ANR	259280	PrimaryExpression	'\\0'		259135	1					
ANR	259281	ExpressionStatement	bUpdatedLen = RSTRUE	420:2:12102:12122	259135	3	True				
ANR	259282	AssignmentExpression	bUpdatedLen = RSTRUE		259135	0		=			
ANR	259283	Identifier	bUpdatedLen		259135	0					
ANR	259284	Identifier	RSTRUE		259135	1					
ANR	259285	IdentifierDeclStatement	int bNeedSanitize = 0 ;	433:1:12807:12828	259135	17	True				
ANR	259286	IdentifierDecl	bNeedSanitize = 0		259135	0					
ANR	259287	IdentifierDeclType	int		259135	0					
ANR	259288	Identifier	bNeedSanitize		259135	1					
ANR	259289	AssignmentExpression	bNeedSanitize = 0		259135	2		=			
ANR	259290	Identifier	bNeedSanitize		259135	0					
ANR	259291	PrimaryExpression	0		259135	1					
ANR	259292	ForStatement	for ( iSrc = 0 ; iSrc < lenMsg ; iSrc ++ )		259135	18					
ANR	259293	ForInit	iSrc = 0 ;	434:5:12835:12844	259135	0	True				
ANR	259294	AssignmentExpression	iSrc = 0		259135	0		=			
ANR	259295	Identifier	iSrc		259135	0					
ANR	259296	PrimaryExpression	0		259135	1					
ANR	259297	Condition	iSrc < lenMsg	434:16:12846:12858	259135	1	True				
ANR	259298	RelationalExpression	iSrc < lenMsg		259135	0		<			
ANR	259299	Identifier	iSrc		259135	0					
ANR	259300	Identifier	lenMsg		259135	1					
ANR	259301	PostIncDecOperationExpression	iSrc ++	434:32:12862:12867	259135	2	True				
ANR	259302	Identifier	iSrc		259135	0					
ANR	259303	IncDec	++		259135	1					
ANR	259304	CompoundStatement		54:40:1922:1922	259135	3					
ANR	259305	IfStatement	if ( pszMsg [ iSrc ] < 32 )		259135	0					
ANR	259306	Condition	pszMsg [ iSrc ] < 32	435:5:12877:12893	259135	0	True				
ANR	259307	RelationalExpression	pszMsg [ iSrc ] < 32		259135	0		<			
ANR	259308	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259309	Identifier	pszMsg		259135	0					
ANR	259310	Identifier	iSrc		259135	1					
ANR	259311	PrimaryExpression	32		259135	1					
ANR	259312	CompoundStatement		55:24:1948:1948	259135	1					
ANR	259313	IfStatement	if ( glbl . GetParserSpaceLFOnReceive ( ) && pszMsg [ iSrc ] == '\\n' )		259135	0					
ANR	259314	Condition	glbl . GetParserSpaceLFOnReceive ( ) && pszMsg [ iSrc ] == '\\n'	436:6:12904:12959	259135	0	True				
ANR	259315	AndExpression	glbl . GetParserSpaceLFOnReceive ( ) && pszMsg [ iSrc ] == '\\n'		259135	0		&&			
ANR	259316	CallExpression	glbl . GetParserSpaceLFOnReceive ( )		259135	0					
ANR	259317	Callee	glbl . GetParserSpaceLFOnReceive		259135	0					
ANR	259318	MemberAccess	glbl . GetParserSpaceLFOnReceive		259135	0					
ANR	259319	Identifier	glbl		259135	0					
ANR	259320	Identifier	GetParserSpaceLFOnReceive		259135	1					
ANR	259321	ArgumentList			259135	1					
ANR	259322	EqualityExpression	pszMsg [ iSrc ] == '\\n'		259135	1		==			
ANR	259323	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259324	Identifier	pszMsg		259135	0					
ANR	259325	Identifier	iSrc		259135	1					
ANR	259326	PrimaryExpression	'\\n'		259135	1					
ANR	259327	CompoundStatement		56:64:2014:2014	259135	1					
ANR	259328	ExpressionStatement	pszMsg [ iSrc ] = ' '	437:4:12968:12986	259135	0	True				
ANR	259329	AssignmentExpression	pszMsg [ iSrc ] = ' '		259135	0		=			
ANR	259330	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259331	Identifier	pszMsg		259135	0					
ANR	259332	Identifier	iSrc		259135	1					
ANR	259333	PrimaryExpression	' '		259135	1					
ANR	259334	ElseStatement	else		259135	0					
ANR	259335	IfStatement	if ( pszMsg [ iSrc ] == '\\0' || glbl . GetParserEscapeControlCharactersOnReceive ( ) )		259135	0					
ANR	259336	Condition	pszMsg [ iSrc ] == '\\0' || glbl . GetParserEscapeControlCharactersOnReceive ( )	438:13:13001:13072	259135	0	True				
ANR	259337	OrExpression	pszMsg [ iSrc ] == '\\0' || glbl . GetParserEscapeControlCharactersOnReceive ( )		259135	0		||			
ANR	259338	EqualityExpression	pszMsg [ iSrc ] == '\\0'		259135	0		==			
ANR	259339	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259340	Identifier	pszMsg		259135	0					
ANR	259341	Identifier	iSrc		259135	1					
ANR	259342	PrimaryExpression	'\\0'		259135	1					
ANR	259343	CallExpression	glbl . GetParserEscapeControlCharactersOnReceive ( )		259135	1					
ANR	259344	Callee	glbl . GetParserEscapeControlCharactersOnReceive		259135	0					
ANR	259345	MemberAccess	glbl . GetParserEscapeControlCharactersOnReceive		259135	0					
ANR	259346	Identifier	glbl		259135	0					
ANR	259347	Identifier	GetParserEscapeControlCharactersOnReceive		259135	1					
ANR	259348	ArgumentList			259135	1					
ANR	259349	CompoundStatement		58:87:2127:2127	259135	1					
ANR	259350	ExpressionStatement	bNeedSanitize = 1	439:4:13081:13098	259135	0	True				
ANR	259351	AssignmentExpression	bNeedSanitize = 1		259135	0		=			
ANR	259352	Identifier	bNeedSanitize		259135	0					
ANR	259353	PrimaryExpression	1		259135	1					
ANR	259354	IfStatement	if ( ! glbl . GetParserSpaceLFOnReceive ( ) )		259135	1					
ANR	259355	Condition	! glbl . GetParserSpaceLFOnReceive ( )	440:8:13108:13140	259135	0	True				
ANR	259356	UnaryOperationExpression	! glbl . GetParserSpaceLFOnReceive ( )		259135	0					
ANR	259357	UnaryOperator	!		259135	0					
ANR	259358	CallExpression	glbl . GetParserSpaceLFOnReceive ( )		259135	1					
ANR	259359	Callee	glbl . GetParserSpaceLFOnReceive		259135	0					
ANR	259360	MemberAccess	glbl . GetParserSpaceLFOnReceive		259135	0					
ANR	259361	Identifier	glbl		259135	0					
ANR	259362	Identifier	GetParserSpaceLFOnReceive		259135	1					
ANR	259363	ArgumentList			259135	1					
ANR	259364	CompoundStatement		60:43:2195:2195	259135	1					
ANR	259365	BreakStatement	break ;	441:5:13150:13155	259135	0	True				
ANR	259366	ElseStatement	else		259135	0					
ANR	259367	IfStatement	if ( pszMsg [ iSrc ] > 127 && glbl . GetParserEscape8BitCharactersOnReceive ( ) )		259135	0					
ANR	259368	Condition	pszMsg [ iSrc ] > 127 && glbl . GetParserEscape8BitCharactersOnReceive ( )	444:12:13183:13249	259135	0	True				
ANR	259369	AndExpression	pszMsg [ iSrc ] > 127 && glbl . GetParserEscape8BitCharactersOnReceive ( )		259135	0		&&			
ANR	259370	RelationalExpression	pszMsg [ iSrc ] > 127		259135	0		>			
ANR	259371	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259372	Identifier	pszMsg		259135	0					
ANR	259373	Identifier	iSrc		259135	1					
ANR	259374	PrimaryExpression	127		259135	1					
ANR	259375	CallExpression	glbl . GetParserEscape8BitCharactersOnReceive ( )		259135	1					
ANR	259376	Callee	glbl . GetParserEscape8BitCharactersOnReceive		259135	0					
ANR	259377	MemberAccess	glbl . GetParserEscape8BitCharactersOnReceive		259135	0					
ANR	259378	Identifier	glbl		259135	0					
ANR	259379	Identifier	GetParserEscape8BitCharactersOnReceive		259135	1					
ANR	259380	ArgumentList			259135	1					
ANR	259381	CompoundStatement		64:81:2304:2304	259135	1					
ANR	259382	ExpressionStatement	bNeedSanitize = 1	445:3:13257:13274	259135	0	True				
ANR	259383	AssignmentExpression	bNeedSanitize = 1		259135	0		=			
ANR	259384	Identifier	bNeedSanitize		259135	0					
ANR	259385	PrimaryExpression	1		259135	1					
ANR	259386	BreakStatement	break ;	446:3:13279:13284	259135	1	True				
ANR	259387	IfStatement	if ( ! bNeedSanitize )		259135	19					
ANR	259388	Condition	! bNeedSanitize	450:4:13298:13311	259135	0	True				
ANR	259389	UnaryOperationExpression	! bNeedSanitize		259135	0					
ANR	259390	UnaryOperator	!		259135	0					
ANR	259391	Identifier	bNeedSanitize		259135	1					
ANR	259392	CompoundStatement		70:20:2366:2366	259135	1					
ANR	259393	IfStatement	if ( bUpdatedLen == RSTRUE )		259135	0					
ANR	259394	Condition	bUpdatedLen == RSTRUE	451:5:13321:13341	259135	0	True				
ANR	259395	EqualityExpression	bUpdatedLen == RSTRUE		259135	0		==			
ANR	259396	Identifier	bUpdatedLen		259135	0					
ANR	259397	Identifier	RSTRUE		259135	1					
ANR	259398	ExpressionStatement	"MsgSetRawMsgSize ( pMsg , lenMsg )"	452:3:13347:13377	259135	1	True				
ANR	259399	CallExpression	"MsgSetRawMsgSize ( pMsg , lenMsg )"		259135	0					
ANR	259400	Callee	MsgSetRawMsgSize		259135	0					
ANR	259401	Identifier	MsgSetRawMsgSize		259135	0					
ANR	259402	ArgumentList	pMsg		259135	1					
ANR	259403	Argument	pMsg		259135	0					
ANR	259404	Identifier	pMsg		259135	0					
ANR	259405	Argument	lenMsg		259135	1					
ANR	259406	Identifier	lenMsg		259135	0					
ANR	259407	ExpressionStatement	FINALIZE	453:2:13381:13389	259135	1	True				
ANR	259408	Identifier	FINALIZE		259135	0					
ANR	259409	ExpressionStatement	iMaxLine = glbl . GetMaxLine ( )	459:1:13550:13578	259135	20	True				
ANR	259410	AssignmentExpression	iMaxLine = glbl . GetMaxLine ( )		259135	0		=			
ANR	259411	Identifier	iMaxLine		259135	0					
ANR	259412	CallExpression	glbl . GetMaxLine ( )		259135	1					
ANR	259413	Callee	glbl . GetMaxLine		259135	0					
ANR	259414	MemberAccess	glbl . GetMaxLine		259135	0					
ANR	259415	Identifier	glbl		259135	0					
ANR	259416	Identifier	GetMaxLine		259135	1					
ANR	259417	ArgumentList			259135	1					
ANR	259418	ExpressionStatement	maxDest = lenMsg * 4	460:1:13581:13601	259135	21	True				
ANR	259419	AssignmentExpression	maxDest = lenMsg * 4		259135	0		=			
ANR	259420	Identifier	maxDest		259135	0					
ANR	259421	MultiplicativeExpression	lenMsg * 4		259135	1		*			
ANR	259422	Identifier	lenMsg		259135	0					
ANR	259423	PrimaryExpression	4		259135	1					
ANR	259424	IfStatement	if ( maxDest > iMaxLine )		259135	22					
ANR	259425	Condition	maxDest > iMaxLine	462:4:13649:13666	259135	0	True				
ANR	259426	RelationalExpression	maxDest > iMaxLine		259135	0		>			
ANR	259427	Identifier	maxDest		259135	0					
ANR	259428	Identifier	iMaxLine		259135	1					
ANR	259429	ExpressionStatement	maxDest = iMaxLine	463:2:13671:13689	259135	1	True				
ANR	259430	AssignmentExpression	maxDest = iMaxLine		259135	0		=			
ANR	259431	Identifier	maxDest		259135	0					
ANR	259432	Identifier	iMaxLine		259135	1					
ANR	259433	IfStatement	if ( maxDest < sizeof ( szSanBuf ) )		259135	23					
ANR	259434	Condition	maxDest < sizeof ( szSanBuf )	464:4:13733:13758	259135	0	True				
ANR	259435	RelationalExpression	maxDest < sizeof ( szSanBuf )		259135	0		<			
ANR	259436	Identifier	maxDest		259135	0					
ANR	259437	SizeofExpression	sizeof ( szSanBuf )		259135	1					
ANR	259438	Sizeof	sizeof		259135	0					
ANR	259439	SizeofOperand	szSanBuf		259135	1					
ANR	259440	ExpressionStatement	pDst = szSanBuf	465:2:13763:13778	259135	1	True				
ANR	259441	AssignmentExpression	pDst = szSanBuf		259135	0		=			
ANR	259442	Identifier	pDst		259135	0					
ANR	259443	Identifier	szSanBuf		259135	1					
ANR	259444	ElseStatement	else		259135	0					
ANR	259445	ExpressionStatement	CHKmalloc ( pDst = MALLOC ( maxDest + 1 ) )	467:2:13789:13826	259135	0	True				
ANR	259446	CallExpression	CHKmalloc ( pDst = MALLOC ( maxDest + 1 ) )		259135	0					
ANR	259447	Callee	CHKmalloc		259135	0					
ANR	259448	Identifier	CHKmalloc		259135	0					
ANR	259449	ArgumentList	pDst = MALLOC ( maxDest + 1 )		259135	1					
ANR	259450	Argument	pDst = MALLOC ( maxDest + 1 )		259135	0					
ANR	259451	AssignmentExpression	pDst = MALLOC ( maxDest + 1 )		259135	0		=			
ANR	259452	Identifier	pDst		259135	0					
ANR	259453	CallExpression	MALLOC ( maxDest + 1 )		259135	1					
ANR	259454	Callee	MALLOC		259135	0					
ANR	259455	Identifier	MALLOC		259135	0					
ANR	259456	ArgumentList	maxDest + 1		259135	1					
ANR	259457	Argument	maxDest + 1		259135	0					
ANR	259458	AdditiveExpression	maxDest + 1		259135	0		+			
ANR	259459	Identifier	maxDest		259135	0					
ANR	259460	PrimaryExpression	1		259135	1					
ANR	259461	IfStatement	if ( iSrc > 0 )		259135	24					
ANR	259462	Condition	iSrc > 0	468:4:13832:13839	259135	0	True				
ANR	259463	RelationalExpression	iSrc > 0		259135	0		>			
ANR	259464	Identifier	iSrc		259135	0					
ANR	259465	PrimaryExpression	0		259135	1					
ANR	259466	CompoundStatement		88:14:2894:2894	259135	1					
ANR	259467	ExpressionStatement	iSrc --	469:2:13846:13852	259135	0	True				
ANR	259468	PostIncDecOperationExpression	iSrc --		259135	0					
ANR	259469	Identifier	iSrc		259135	0					
ANR	259470	IncDec	--		259135	1					
ANR	259471	IfStatement	if ( iSrc > maxDest )		259135	1					
ANR	259472	Condition	iSrc > maxDest	470:5:13899:13912	259135	0	True				
ANR	259473	RelationalExpression	iSrc > maxDest		259135	0		>			
ANR	259474	Identifier	iSrc		259135	0					
ANR	259475	Identifier	maxDest		259135	1					
ANR	259476	CompoundStatement		90:21:2967:2967	259135	1					
ANR	259477	Statement	DBGPRINTF	471:3:13920:13928	259135	0	True				
ANR	259478	Statement	(	471:12:13929:13929	259135	1	True				
ANR	259479	Statement	"""parser.Sanitize: have oversize index %zd, """	471:13:13930:13973	259135	2	True				
ANR	259480	Statement	"""max %zd - corrected, but should not happen\\n"""	472:4:13979:14024	259135	3	True				
ANR	259481	Statement	","	472:50:14025:14025	259135	4	True				
ANR	259482	Statement	iSrc	473:4:14031:14034	259135	5	True				
ANR	259483	Statement	","	473:8:14035:14035	259135	6	True				
ANR	259484	Statement	maxDest	473:10:14037:14043	259135	7	True				
ANR	259485	Statement	)	473:17:14044:14044	259135	8	True				
ANR	259486	ExpressionStatement		473:18:14045:14045	259135	9	True				
ANR	259487	ExpressionStatement	iSrc = maxDest	474:3:14050:14064	259135	10	True				
ANR	259488	AssignmentExpression	iSrc = maxDest		259135	0		=			
ANR	259489	Identifier	iSrc		259135	0					
ANR	259490	Identifier	maxDest		259135	1					
ANR	259491	ExpressionStatement	"memcpy ( pDst , pszMsg , iSrc )"	476:2:14072:14098	259135	2	True				
ANR	259492	CallExpression	"memcpy ( pDst , pszMsg , iSrc )"		259135	0					
ANR	259493	Callee	memcpy		259135	0					
ANR	259494	Identifier	memcpy		259135	0					
ANR	259495	ArgumentList	pDst		259135	1					
ANR	259496	Argument	pDst		259135	0					
ANR	259497	Identifier	pDst		259135	0					
ANR	259498	Argument	pszMsg		259135	1					
ANR	259499	Identifier	pszMsg		259135	0					
ANR	259500	Argument	iSrc		259135	2					
ANR	259501	Identifier	iSrc		259135	0					
ANR	259502	ExpressionStatement	iDst = iSrc	478:1:14131:14142	259135	25	True				
ANR	259503	AssignmentExpression	iDst = iSrc		259135	0		=			
ANR	259504	Identifier	iDst		259135	0					
ANR	259505	Identifier	iSrc		259135	1					
ANR	259506	WhileStatement	while ( iSrc < lenMsg && iDst < maxDest - 3 )		259135	26					
ANR	259507	Condition	iSrc < lenMsg && iDst < maxDest - 3	479:7:14151:14185	259135	0	True				
ANR	259508	AndExpression	iSrc < lenMsg && iDst < maxDest - 3		259135	0		&&			
ANR	259509	RelationalExpression	iSrc < lenMsg		259135	0		<			
ANR	259510	Identifier	iSrc		259135	0					
ANR	259511	Identifier	lenMsg		259135	1					
ANR	259512	RelationalExpression	iDst < maxDest - 3		259135	1		<			
ANR	259513	Identifier	iDst		259135	0					
ANR	259514	AdditiveExpression	maxDest - 3		259135	1		-			
ANR	259515	Identifier	maxDest		259135	0					
ANR	259516	PrimaryExpression	3		259135	1					
ANR	259517	CompoundStatement		99:44:3240:3240	259135	1					
ANR	259518	IfStatement	if ( ( pszMsg [ iSrc ] < 32 ) && ( pszMsg [ iSrc ] != '\\t' || glbl . GetParserEscapeControlCharacterTab ( ) ) )		259135	0					
ANR	259519	Condition	( pszMsg [ iSrc ] < 32 ) && ( pszMsg [ iSrc ] != '\\t' || glbl . GetParserEscapeControlCharacterTab ( ) )	480:5:14247:14336	259135	0	True				
ANR	259520	AndExpression	( pszMsg [ iSrc ] < 32 ) && ( pszMsg [ iSrc ] != '\\t' || glbl . GetParserEscapeControlCharacterTab ( ) )		259135	0		&&			
ANR	259521	RelationalExpression	pszMsg [ iSrc ] < 32		259135	0		<			
ANR	259522	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259523	Identifier	pszMsg		259135	0					
ANR	259524	Identifier	iSrc		259135	1					
ANR	259525	PrimaryExpression	32		259135	1					
ANR	259526	OrExpression	pszMsg [ iSrc ] != '\\t' || glbl . GetParserEscapeControlCharacterTab ( )		259135	1		||			
ANR	259527	EqualityExpression	pszMsg [ iSrc ] != '\\t'		259135	0		!=			
ANR	259528	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259529	Identifier	pszMsg		259135	0					
ANR	259530	Identifier	iSrc		259135	1					
ANR	259531	PrimaryExpression	'\\t'		259135	1					
ANR	259532	CallExpression	glbl . GetParserEscapeControlCharacterTab ( )		259135	1					
ANR	259533	Callee	glbl . GetParserEscapeControlCharacterTab		259135	0					
ANR	259534	MemberAccess	glbl . GetParserEscapeControlCharacterTab		259135	0					
ANR	259535	Identifier	glbl		259135	0					
ANR	259536	Identifier	GetParserEscapeControlCharacterTab		259135	1					
ANR	259537	ArgumentList			259135	1					
ANR	259538	CompoundStatement		100:97:3391:3391	259135	1					
ANR	259539	IfStatement	if ( pszMsg [ iSrc ] == '\\0' || glbl . GetParserEscapeControlCharactersOnReceive ( ) )		259135	0					
ANR	259540	Condition	pszMsg [ iSrc ] == '\\0' || glbl . GetParserEscapeControlCharactersOnReceive ( )	484:6:14474:14545	259135	0	True				
ANR	259541	OrExpression	pszMsg [ iSrc ] == '\\0' || glbl . GetParserEscapeControlCharactersOnReceive ( )		259135	0		||			
ANR	259542	EqualityExpression	pszMsg [ iSrc ] == '\\0'		259135	0		==			
ANR	259543	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259544	Identifier	pszMsg		259135	0					
ANR	259545	Identifier	iSrc		259135	1					
ANR	259546	PrimaryExpression	'\\0'		259135	1					
ANR	259547	CallExpression	glbl . GetParserEscapeControlCharactersOnReceive ( )		259135	1					
ANR	259548	Callee	glbl . GetParserEscapeControlCharactersOnReceive		259135	0					
ANR	259549	MemberAccess	glbl . GetParserEscapeControlCharactersOnReceive		259135	0					
ANR	259550	Identifier	glbl		259135	0					
ANR	259551	Identifier	GetParserEscapeControlCharactersOnReceive		259135	1					
ANR	259552	ArgumentList			259135	1					
ANR	259553	CompoundStatement		104:80:3600:3600	259135	1					
ANR	259554	IfStatement	if ( glbl . GetParserEscapeControlCharactersCStyle ( ) )		259135	0					
ANR	259555	Condition	glbl . GetParserEscapeControlCharactersCStyle ( )	489:8:14760:14804	259135	0	True				
ANR	259556	CallExpression	glbl . GetParserEscapeControlCharactersCStyle ( )		259135	0					
ANR	259557	Callee	glbl . GetParserEscapeControlCharactersCStyle		259135	0					
ANR	259558	MemberAccess	glbl . GetParserEscapeControlCharactersCStyle		259135	0					
ANR	259559	Identifier	glbl		259135	0					
ANR	259560	Identifier	GetParserEscapeControlCharactersCStyle		259135	1					
ANR	259561	ArgumentList			259135	1					
ANR	259562	CompoundStatement		109:55:3859:3859	259135	1					
ANR	259563	ExpressionStatement	pDst [ iDst ++ ] = '\\\\'	490:5:14814:14833	259135	0	True				
ANR	259564	AssignmentExpression	pDst [ iDst ++ ] = '\\\\'		259135	0		=			
ANR	259565	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259566	Identifier	pDst		259135	0					
ANR	259567	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259568	Identifier	iDst		259135	0					
ANR	259569	IncDec	++		259135	1					
ANR	259570	PrimaryExpression	'\\\\'		259135	1					
ANR	259571	SwitchStatement	switch ( pszMsg [ iSrc ] )		259135	1					
ANR	259572	Condition	pszMsg [ iSrc ]	492:13:14849:14860	259135	0	True				
ANR	259573	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259574	Identifier	pszMsg		259135	0					
ANR	259575	Identifier	iSrc		259135	1					
ANR	259576	CompoundStatement		112:27:3915:3915	259135	1					
ANR	259577	Label	case '\\0' :	493:5:14870:14879	259135	0	True				
ANR	259578	ExpressionStatement	pDst [ iDst ++ ] = '0'	494:6:14887:14905	259135	1	True				
ANR	259579	AssignmentExpression	pDst [ iDst ++ ] = '0'		259135	0		=			
ANR	259580	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259581	Identifier	pDst		259135	0					
ANR	259582	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259583	Identifier	iDst		259135	0					
ANR	259584	IncDec	++		259135	1					
ANR	259585	PrimaryExpression	'0'		259135	1					
ANR	259586	BreakStatement	break ;	495:6:14913:14918	259135	2	True				
ANR	259587	Label	case '\\a' :	496:5:14925:14934	259135	3	True				
ANR	259588	ExpressionStatement	pDst [ iDst ++ ] = 'a'	497:6:14942:14960	259135	4	True				
ANR	259589	AssignmentExpression	pDst [ iDst ++ ] = 'a'		259135	0		=			
ANR	259590	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259591	Identifier	pDst		259135	0					
ANR	259592	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259593	Identifier	iDst		259135	0					
ANR	259594	IncDec	++		259135	1					
ANR	259595	PrimaryExpression	'a'		259135	1					
ANR	259596	BreakStatement	break ;	498:6:14968:14973	259135	5	True				
ANR	259597	Label	case '\\b' :	499:5:14980:14989	259135	6	True				
ANR	259598	ExpressionStatement	pDst [ iDst ++ ] = 'b'	500:6:14997:15015	259135	7	True				
ANR	259599	AssignmentExpression	pDst [ iDst ++ ] = 'b'		259135	0		=			
ANR	259600	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259601	Identifier	pDst		259135	0					
ANR	259602	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259603	Identifier	iDst		259135	0					
ANR	259604	IncDec	++		259135	1					
ANR	259605	PrimaryExpression	'b'		259135	1					
ANR	259606	BreakStatement	break ;	501:6:15023:15028	259135	8	True				
ANR	259607	Label	case '\\e' :	502:5:15035:15044	259135	9	True				
ANR	259608	ExpressionStatement	pDst [ iDst ++ ] = 'e'	503:6:15052:15070	259135	10	True				
ANR	259609	AssignmentExpression	pDst [ iDst ++ ] = 'e'		259135	0		=			
ANR	259610	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259611	Identifier	pDst		259135	0					
ANR	259612	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259613	Identifier	iDst		259135	0					
ANR	259614	IncDec	++		259135	1					
ANR	259615	PrimaryExpression	'e'		259135	1					
ANR	259616	BreakStatement	break ;	504:6:15078:15083	259135	11	True				
ANR	259617	Label	case '\\f' :	505:5:15090:15099	259135	12	True				
ANR	259618	ExpressionStatement	pDst [ iDst ++ ] = 'f'	506:6:15107:15125	259135	13	True				
ANR	259619	AssignmentExpression	pDst [ iDst ++ ] = 'f'		259135	0		=			
ANR	259620	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259621	Identifier	pDst		259135	0					
ANR	259622	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259623	Identifier	iDst		259135	0					
ANR	259624	IncDec	++		259135	1					
ANR	259625	PrimaryExpression	'f'		259135	1					
ANR	259626	BreakStatement	break ;	507:6:15133:15138	259135	14	True				
ANR	259627	Label	case '\\n' :	508:5:15145:15154	259135	15	True				
ANR	259628	ExpressionStatement	pDst [ iDst ++ ] = 'n'	509:6:15162:15180	259135	16	True				
ANR	259629	AssignmentExpression	pDst [ iDst ++ ] = 'n'		259135	0		=			
ANR	259630	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259631	Identifier	pDst		259135	0					
ANR	259632	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259633	Identifier	iDst		259135	0					
ANR	259634	IncDec	++		259135	1					
ANR	259635	PrimaryExpression	'n'		259135	1					
ANR	259636	BreakStatement	break ;	510:6:15188:15193	259135	17	True				
ANR	259637	Label	case '\\r' :	511:5:15200:15209	259135	18	True				
ANR	259638	ExpressionStatement	pDst [ iDst ++ ] = 'r'	512:6:15217:15235	259135	19	True				
ANR	259639	AssignmentExpression	pDst [ iDst ++ ] = 'r'		259135	0		=			
ANR	259640	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259641	Identifier	pDst		259135	0					
ANR	259642	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259643	Identifier	iDst		259135	0					
ANR	259644	IncDec	++		259135	1					
ANR	259645	PrimaryExpression	'r'		259135	1					
ANR	259646	BreakStatement	break ;	513:6:15243:15248	259135	20	True				
ANR	259647	Label	case '\\t' :	514:5:15255:15264	259135	21	True				
ANR	259648	ExpressionStatement	pDst [ iDst ++ ] = 't'	515:6:15272:15290	259135	22	True				
ANR	259649	AssignmentExpression	pDst [ iDst ++ ] = 't'		259135	0		=			
ANR	259650	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259651	Identifier	pDst		259135	0					
ANR	259652	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259653	Identifier	iDst		259135	0					
ANR	259654	IncDec	++		259135	1					
ANR	259655	PrimaryExpression	't'		259135	1					
ANR	259656	BreakStatement	break ;	516:6:15298:15303	259135	23	True				
ANR	259657	Label	case '\\v' :	517:5:15310:15319	259135	24	True				
ANR	259658	ExpressionStatement	pDst [ iDst ++ ] = 'v'	518:6:15327:15345	259135	25	True				
ANR	259659	AssignmentExpression	pDst [ iDst ++ ] = 'v'		259135	0		=			
ANR	259660	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259661	Identifier	pDst		259135	0					
ANR	259662	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259663	Identifier	iDst		259135	0					
ANR	259664	IncDec	++		259135	1					
ANR	259665	PrimaryExpression	'v'		259135	1					
ANR	259666	BreakStatement	break ;	519:6:15353:15358	259135	26	True				
ANR	259667	Label	default :	520:5:15365:15372	259135	27	True				
ANR	259668	Identifier	default		259135	0					
ANR	259669	ExpressionStatement	pDst [ iDst ++ ] = 'x'	521:6:15380:15398	259135	28	True				
ANR	259670	AssignmentExpression	pDst [ iDst ++ ] = 'x'		259135	0		=			
ANR	259671	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259672	Identifier	pDst		259135	0					
ANR	259673	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259674	Identifier	iDst		259135	0					
ANR	259675	IncDec	++		259135	1					
ANR	259676	PrimaryExpression	'x'		259135	1					
ANR	259677	ExpressionStatement	pc = pszMsg [ iSrc ]	523:6:15407:15424	259135	29	True				
ANR	259678	AssignmentExpression	pc = pszMsg [ iSrc ]		259135	0		=			
ANR	259679	Identifier	pc		259135	0					
ANR	259680	ArrayIndexing	pszMsg [ iSrc ]		259135	1					
ANR	259681	Identifier	pszMsg		259135	0					
ANR	259682	Identifier	iSrc		259135	1					
ANR	259683	ExpressionStatement	pDst [ iDst ++ ] = hexdigit [ ( pc & 0xF0 ) >> 4 ]	524:6:15432:15473	259135	30	True				
ANR	259684	AssignmentExpression	pDst [ iDst ++ ] = hexdigit [ ( pc & 0xF0 ) >> 4 ]		259135	0		=			
ANR	259685	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259686	Identifier	pDst		259135	0					
ANR	259687	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259688	Identifier	iDst		259135	0					
ANR	259689	IncDec	++		259135	1					
ANR	259690	ArrayIndexing	hexdigit [ ( pc & 0xF0 ) >> 4 ]		259135	1					
ANR	259691	Identifier	hexdigit		259135	0					
ANR	259692	ShiftExpression	( pc & 0xF0 ) >> 4		259135	1		>>			
ANR	259693	BitAndExpression	pc & 0xF0		259135	0		&			
ANR	259694	Identifier	pc		259135	0					
ANR	259695	PrimaryExpression	0xF0		259135	1					
ANR	259696	PrimaryExpression	4		259135	1					
ANR	259697	ExpressionStatement	pDst [ iDst ++ ] = hexdigit [ pc & 0xF ]	525:6:15481:15514	259135	31	True				
ANR	259698	AssignmentExpression	pDst [ iDst ++ ] = hexdigit [ pc & 0xF ]		259135	0		=			
ANR	259699	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259700	Identifier	pDst		259135	0					
ANR	259701	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259702	Identifier	iDst		259135	0					
ANR	259703	IncDec	++		259135	1					
ANR	259704	ArrayIndexing	hexdigit [ pc & 0xF ]		259135	1					
ANR	259705	Identifier	hexdigit		259135	0					
ANR	259706	BitAndExpression	pc & 0xF		259135	1		&			
ANR	259707	Identifier	pc		259135	0					
ANR	259708	PrimaryExpression	0xF		259135	1					
ANR	259709	BreakStatement	break ;	527:6:15523:15528	259135	32	True				
ANR	259710	ElseStatement	else		259135	0					
ANR	259711	CompoundStatement		150:11:4601:4601	259135	0					
ANR	259712	ExpressionStatement	pDst [ iDst ++ ] = glbl . GetParserControlCharacterEscapePrefix ( )	531:5:15556:15615	259135	0	True				
ANR	259713	AssignmentExpression	pDst [ iDst ++ ] = glbl . GetParserControlCharacterEscapePrefix ( )		259135	0		=			
ANR	259714	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259715	Identifier	pDst		259135	0					
ANR	259716	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259717	Identifier	iDst		259135	0					
ANR	259718	IncDec	++		259135	1					
ANR	259719	CallExpression	glbl . GetParserControlCharacterEscapePrefix ( )		259135	1					
ANR	259720	Callee	glbl . GetParserControlCharacterEscapePrefix		259135	0					
ANR	259721	MemberAccess	glbl . GetParserControlCharacterEscapePrefix		259135	0					
ANR	259722	Identifier	glbl		259135	0					
ANR	259723	Identifier	GetParserControlCharacterEscapePrefix		259135	1					
ANR	259724	ArgumentList			259135	1					
ANR	259725	ExpressionStatement	pDst [ iDst ++ ] = '0' + ( ( pszMsg [ iSrc ] & 0300 ) >> 6 )	532:5:15622:15671	259135	1	True				
ANR	259726	AssignmentExpression	pDst [ iDst ++ ] = '0' + ( ( pszMsg [ iSrc ] & 0300 ) >> 6 )		259135	0		=			
ANR	259727	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259728	Identifier	pDst		259135	0					
ANR	259729	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259730	Identifier	iDst		259135	0					
ANR	259731	IncDec	++		259135	1					
ANR	259732	AdditiveExpression	'0' + ( ( pszMsg [ iSrc ] & 0300 ) >> 6 )		259135	1		+			
ANR	259733	PrimaryExpression	'0'		259135	0					
ANR	259734	ShiftExpression	( pszMsg [ iSrc ] & 0300 ) >> 6		259135	1		>>			
ANR	259735	BitAndExpression	pszMsg [ iSrc ] & 0300		259135	0		&			
ANR	259736	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259737	Identifier	pszMsg		259135	0					
ANR	259738	Identifier	iSrc		259135	1					
ANR	259739	PrimaryExpression	0300		259135	1					
ANR	259740	PrimaryExpression	6		259135	1					
ANR	259741	ExpressionStatement	pDst [ iDst ++ ] = '0' + ( ( pszMsg [ iSrc ] & 0070 ) >> 3 )	533:5:15678:15727	259135	2	True				
ANR	259742	AssignmentExpression	pDst [ iDst ++ ] = '0' + ( ( pszMsg [ iSrc ] & 0070 ) >> 3 )		259135	0		=			
ANR	259743	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259744	Identifier	pDst		259135	0					
ANR	259745	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259746	Identifier	iDst		259135	0					
ANR	259747	IncDec	++		259135	1					
ANR	259748	AdditiveExpression	'0' + ( ( pszMsg [ iSrc ] & 0070 ) >> 3 )		259135	1		+			
ANR	259749	PrimaryExpression	'0'		259135	0					
ANR	259750	ShiftExpression	( pszMsg [ iSrc ] & 0070 ) >> 3		259135	1		>>			
ANR	259751	BitAndExpression	pszMsg [ iSrc ] & 0070		259135	0		&			
ANR	259752	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259753	Identifier	pszMsg		259135	0					
ANR	259754	Identifier	iSrc		259135	1					
ANR	259755	PrimaryExpression	0070		259135	1					
ANR	259756	PrimaryExpression	3		259135	1					
ANR	259757	ExpressionStatement	pDst [ iDst ++ ] = '0' + ( ( pszMsg [ iSrc ] & 0007 ) )	534:5:15734:15778	259135	3	True				
ANR	259758	AssignmentExpression	pDst [ iDst ++ ] = '0' + ( ( pszMsg [ iSrc ] & 0007 ) )		259135	0		=			
ANR	259759	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259760	Identifier	pDst		259135	0					
ANR	259761	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259762	Identifier	iDst		259135	0					
ANR	259763	IncDec	++		259135	1					
ANR	259764	AdditiveExpression	'0' + ( ( pszMsg [ iSrc ] & 0007 ) )		259135	1		+			
ANR	259765	PrimaryExpression	'0'		259135	0					
ANR	259766	BitAndExpression	pszMsg [ iSrc ] & 0007		259135	1		&			
ANR	259767	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259768	Identifier	pszMsg		259135	0					
ANR	259769	Identifier	iSrc		259135	1					
ANR	259770	PrimaryExpression	0007		259135	1					
ANR	259771	ElseStatement	else		259135	0					
ANR	259772	IfStatement	if ( pszMsg [ iSrc ] > 127 && glbl . GetParserEscape8BitCharactersOnReceive ( ) )		259135	0					
ANR	259773	Condition	pszMsg [ iSrc ] > 127 && glbl . GetParserEscape8BitCharactersOnReceive ( )	538:12:15804:15870	259135	0	True				
ANR	259774	AndExpression	pszMsg [ iSrc ] > 127 && glbl . GetParserEscape8BitCharactersOnReceive ( )		259135	0		&&			
ANR	259775	RelationalExpression	pszMsg [ iSrc ] > 127		259135	0		>			
ANR	259776	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259777	Identifier	pszMsg		259135	0					
ANR	259778	Identifier	iSrc		259135	1					
ANR	259779	PrimaryExpression	127		259135	1					
ANR	259780	CallExpression	glbl . GetParserEscape8BitCharactersOnReceive ( )		259135	1					
ANR	259781	Callee	glbl . GetParserEscape8BitCharactersOnReceive		259135	0					
ANR	259782	MemberAccess	glbl . GetParserEscape8BitCharactersOnReceive		259135	0					
ANR	259783	Identifier	glbl		259135	0					
ANR	259784	Identifier	GetParserEscape8BitCharactersOnReceive		259135	1					
ANR	259785	ArgumentList			259135	1					
ANR	259786	CompoundStatement		158:81:4925:4925	259135	1					
ANR	259787	IfStatement	if ( glbl . GetParserEscapeControlCharactersCStyle ( ) )		259135	0					
ANR	259788	Condition	glbl . GetParserEscapeControlCharactersCStyle ( )	539:7:15882:15926	259135	0	True				
ANR	259789	CallExpression	glbl . GetParserEscapeControlCharactersCStyle ( )		259135	0					
ANR	259790	Callee	glbl . GetParserEscapeControlCharactersCStyle		259135	0					
ANR	259791	MemberAccess	glbl . GetParserEscapeControlCharactersCStyle		259135	0					
ANR	259792	Identifier	glbl		259135	0					
ANR	259793	Identifier	GetParserEscapeControlCharactersCStyle		259135	1					
ANR	259794	ArgumentList			259135	1					
ANR	259795	CompoundStatement		159:54:4981:4981	259135	1					
ANR	259796	ExpressionStatement	pDst [ iDst ++ ] = '\\\\'	540:4:15935:15954	259135	0	True				
ANR	259797	AssignmentExpression	pDst [ iDst ++ ] = '\\\\'		259135	0		=			
ANR	259798	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259799	Identifier	pDst		259135	0					
ANR	259800	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259801	Identifier	iDst		259135	0					
ANR	259802	IncDec	++		259135	1					
ANR	259803	PrimaryExpression	'\\\\'		259135	1					
ANR	259804	ExpressionStatement	pDst [ iDst ++ ] = 'x'	541:4:15960:15978	259135	1	True				
ANR	259805	AssignmentExpression	pDst [ iDst ++ ] = 'x'		259135	0		=			
ANR	259806	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259807	Identifier	pDst		259135	0					
ANR	259808	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259809	Identifier	iDst		259135	0					
ANR	259810	IncDec	++		259135	1					
ANR	259811	PrimaryExpression	'x'		259135	1					
ANR	259812	ExpressionStatement	pc = pszMsg [ iSrc ]	543:4:15985:16002	259135	2	True				
ANR	259813	AssignmentExpression	pc = pszMsg [ iSrc ]		259135	0		=			
ANR	259814	Identifier	pc		259135	0					
ANR	259815	ArrayIndexing	pszMsg [ iSrc ]		259135	1					
ANR	259816	Identifier	pszMsg		259135	0					
ANR	259817	Identifier	iSrc		259135	1					
ANR	259818	ExpressionStatement	pDst [ iDst ++ ] = hexdigit [ ( pc & 0xF0 ) >> 4 ]	544:4:16008:16049	259135	3	True				
ANR	259819	AssignmentExpression	pDst [ iDst ++ ] = hexdigit [ ( pc & 0xF0 ) >> 4 ]		259135	0		=			
ANR	259820	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259821	Identifier	pDst		259135	0					
ANR	259822	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259823	Identifier	iDst		259135	0					
ANR	259824	IncDec	++		259135	1					
ANR	259825	ArrayIndexing	hexdigit [ ( pc & 0xF0 ) >> 4 ]		259135	1					
ANR	259826	Identifier	hexdigit		259135	0					
ANR	259827	ShiftExpression	( pc & 0xF0 ) >> 4		259135	1		>>			
ANR	259828	BitAndExpression	pc & 0xF0		259135	0		&			
ANR	259829	Identifier	pc		259135	0					
ANR	259830	PrimaryExpression	0xF0		259135	1					
ANR	259831	PrimaryExpression	4		259135	1					
ANR	259832	ExpressionStatement	pDst [ iDst ++ ] = hexdigit [ pc & 0xF ]	545:4:16055:16088	259135	4	True				
ANR	259833	AssignmentExpression	pDst [ iDst ++ ] = hexdigit [ pc & 0xF ]		259135	0		=			
ANR	259834	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259835	Identifier	pDst		259135	0					
ANR	259836	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259837	Identifier	iDst		259135	0					
ANR	259838	IncDec	++		259135	1					
ANR	259839	ArrayIndexing	hexdigit [ pc & 0xF ]		259135	1					
ANR	259840	Identifier	hexdigit		259135	0					
ANR	259841	BitAndExpression	pc & 0xF		259135	1		&			
ANR	259842	Identifier	pc		259135	0					
ANR	259843	PrimaryExpression	0xF		259135	1					
ANR	259844	ElseStatement	else		259135	0					
ANR	259845	CompoundStatement		167:10:5153:5153	259135	0					
ANR	259846	ExpressionStatement	pDst [ iDst ++ ] = glbl . GetParserControlCharacterEscapePrefix ( )	551:4:16251:16310	259135	0	True				
ANR	259847	AssignmentExpression	pDst [ iDst ++ ] = glbl . GetParserControlCharacterEscapePrefix ( )		259135	0		=			
ANR	259848	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259849	Identifier	pDst		259135	0					
ANR	259850	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259851	Identifier	iDst		259135	0					
ANR	259852	IncDec	++		259135	1					
ANR	259853	CallExpression	glbl . GetParserControlCharacterEscapePrefix ( )		259135	1					
ANR	259854	Callee	glbl . GetParserControlCharacterEscapePrefix		259135	0					
ANR	259855	MemberAccess	glbl . GetParserControlCharacterEscapePrefix		259135	0					
ANR	259856	Identifier	glbl		259135	0					
ANR	259857	Identifier	GetParserControlCharacterEscapePrefix		259135	1					
ANR	259858	ArgumentList			259135	1					
ANR	259859	ExpressionStatement	pDst [ iDst ++ ] = '0' + ( ( pszMsg [ iSrc ] & 0300 ) >> 6 )	552:4:16316:16365	259135	1	True				
ANR	259860	AssignmentExpression	pDst [ iDst ++ ] = '0' + ( ( pszMsg [ iSrc ] & 0300 ) >> 6 )		259135	0		=			
ANR	259861	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259862	Identifier	pDst		259135	0					
ANR	259863	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259864	Identifier	iDst		259135	0					
ANR	259865	IncDec	++		259135	1					
ANR	259866	AdditiveExpression	'0' + ( ( pszMsg [ iSrc ] & 0300 ) >> 6 )		259135	1		+			
ANR	259867	PrimaryExpression	'0'		259135	0					
ANR	259868	ShiftExpression	( pszMsg [ iSrc ] & 0300 ) >> 6		259135	1		>>			
ANR	259869	BitAndExpression	pszMsg [ iSrc ] & 0300		259135	0		&			
ANR	259870	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259871	Identifier	pszMsg		259135	0					
ANR	259872	Identifier	iSrc		259135	1					
ANR	259873	PrimaryExpression	0300		259135	1					
ANR	259874	PrimaryExpression	6		259135	1					
ANR	259875	ExpressionStatement	pDst [ iDst ++ ] = '0' + ( ( pszMsg [ iSrc ] & 0070 ) >> 3 )	553:4:16371:16420	259135	2	True				
ANR	259876	AssignmentExpression	pDst [ iDst ++ ] = '0' + ( ( pszMsg [ iSrc ] & 0070 ) >> 3 )		259135	0		=			
ANR	259877	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259878	Identifier	pDst		259135	0					
ANR	259879	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259880	Identifier	iDst		259135	0					
ANR	259881	IncDec	++		259135	1					
ANR	259882	AdditiveExpression	'0' + ( ( pszMsg [ iSrc ] & 0070 ) >> 3 )		259135	1		+			
ANR	259883	PrimaryExpression	'0'		259135	0					
ANR	259884	ShiftExpression	( pszMsg [ iSrc ] & 0070 ) >> 3		259135	1		>>			
ANR	259885	BitAndExpression	pszMsg [ iSrc ] & 0070		259135	0		&			
ANR	259886	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259887	Identifier	pszMsg		259135	0					
ANR	259888	Identifier	iSrc		259135	1					
ANR	259889	PrimaryExpression	0070		259135	1					
ANR	259890	PrimaryExpression	3		259135	1					
ANR	259891	ExpressionStatement	pDst [ iDst ++ ] = '0' + ( ( pszMsg [ iSrc ] & 0007 ) )	554:4:16426:16470	259135	3	True				
ANR	259892	AssignmentExpression	pDst [ iDst ++ ] = '0' + ( ( pszMsg [ iSrc ] & 0007 ) )		259135	0		=			
ANR	259893	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259894	Identifier	pDst		259135	0					
ANR	259895	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259896	Identifier	iDst		259135	0					
ANR	259897	IncDec	++		259135	1					
ANR	259898	AdditiveExpression	'0' + ( ( pszMsg [ iSrc ] & 0007 ) )		259135	1		+			
ANR	259899	PrimaryExpression	'0'		259135	0					
ANR	259900	BitAndExpression	pszMsg [ iSrc ] & 0007		259135	1		&			
ANR	259901	ArrayIndexing	pszMsg [ iSrc ]		259135	0					
ANR	259902	Identifier	pszMsg		259135	0					
ANR	259903	Identifier	iSrc		259135	1					
ANR	259904	PrimaryExpression	0007		259135	1					
ANR	259905	ElseStatement	else		259135	0					
ANR	259906	CompoundStatement		176:9:5538:5538	259135	0					
ANR	259907	ExpressionStatement	pDst [ iDst ++ ] = pszMsg [ iSrc ]	557:3:16491:16518	259135	0	True				
ANR	259908	AssignmentExpression	pDst [ iDst ++ ] = pszMsg [ iSrc ]		259135	0		=			
ANR	259909	ArrayIndexing	pDst [ iDst ++ ]		259135	0					
ANR	259910	Identifier	pDst		259135	0					
ANR	259911	PostIncDecOperationExpression	iDst ++		259135	1					
ANR	259912	Identifier	iDst		259135	0					
ANR	259913	IncDec	++		259135	1					
ANR	259914	ArrayIndexing	pszMsg [ iSrc ]		259135	1					
ANR	259915	Identifier	pszMsg		259135	0					
ANR	259916	Identifier	iSrc		259135	1					
ANR	259917	ExpressionStatement	++ iSrc	559:2:16526:16532	259135	1	True				
ANR	259918	UnaryExpression	++ iSrc		259135	0					
ANR	259919	IncDec	++		259135	0					
ANR	259920	Identifier	iSrc		259135	1					
ANR	259921	ExpressionStatement	pDst [ iDst ] = '\\0'	561:1:16538:16555	259135	27	True				
ANR	259922	AssignmentExpression	pDst [ iDst ] = '\\0'		259135	0		=			
ANR	259923	ArrayIndexing	pDst [ iDst ]		259135	0					
ANR	259924	Identifier	pDst		259135	0					
ANR	259925	Identifier	iDst		259135	1					
ANR	259926	PrimaryExpression	'\\0'		259135	1					
ANR	259927	ExpressionStatement	"MsgSetRawMsg ( pMsg , ( char * ) pDst , iDst )"	563:1:16559:16596	259135	28	True				
ANR	259928	CallExpression	"MsgSetRawMsg ( pMsg , ( char * ) pDst , iDst )"		259135	0					
ANR	259929	Callee	MsgSetRawMsg		259135	0					
ANR	259930	Identifier	MsgSetRawMsg		259135	0					
ANR	259931	ArgumentList	pMsg		259135	1					
ANR	259932	Argument	pMsg		259135	0					
ANR	259933	Identifier	pMsg		259135	0					
ANR	259934	Argument	( char * ) pDst		259135	1					
ANR	259935	CastExpression	( char * ) pDst		259135	0					
ANR	259936	CastTarget	char *		259135	0					
ANR	259937	Identifier	pDst		259135	1					
ANR	259938	Argument	iDst		259135	2					
ANR	259939	Identifier	iDst		259135	0					
ANR	259940	IfStatement	if ( pDst != szSanBuf )		259135	29					
ANR	259941	Condition	pDst != szSanBuf	565:4:16631:16646	259135	0	True				
ANR	259942	EqualityExpression	pDst != szSanBuf		259135	0		!=			
ANR	259943	Identifier	pDst		259135	0					
ANR	259944	Identifier	szSanBuf		259135	1					
ANR	259945	ExpressionStatement	free ( pDst )	566:2:16651:16661	259135	1	True				
ANR	259946	CallExpression	free ( pDst )		259135	0					
ANR	259947	Callee	free		259135	0					
ANR	259948	Identifier	free		259135	0					
ANR	259949	ArgumentList	pDst		259135	1					
ANR	259950	Argument	pDst		259135	0					
ANR	259951	Identifier	pDst		259135	0					
ANR	259952	Label	finalize_it :	568:0:16664:16675	259135	30	True				
ANR	259953	Identifier	finalize_it		259135	0					
ANR	259954	ExpressionStatement	RETiRet	569:1:16678:16685	259135	31	True				
ANR	259955	Identifier	RETiRet		259135	0					
ANR	259956	ReturnType	static rsRetVal		259135	1					
ANR	259957	Identifier	SanitizeMsg		259135	2					
ANR	259958	ParameterList	smsg_t * pMsg		259135	3					
ANR	259959	Parameter	smsg_t * pMsg	380:12:10933:10944	259135	0	True				
ANR	259960	ParameterType	smsg_t *		259135	0					
ANR	259961	Identifier	pMsg		259135	1					
ANR	259962	CFGEntryNode	ENTRY		259135		True				
ANR	259963	CFGExitNode	EXIT		259135		True				
ANR	259964	Symbol	pszMsg		259135						
ANR	259965	Symbol	glbl . GetParserEscape8BitCharactersOnReceive		259135						
ANR	259966	Symbol	* pszMsg		259135						
ANR	259967	Symbol	glbl . GetParserEscapeControlCharactersOnReceive		259135						
ANR	259968	Symbol	pMsg		259135						
ANR	259969	Symbol	* pMsg		259135						
ANR	259970	Symbol	pDst		259135						
ANR	259971	Symbol	bNeedSanitize		259135						
ANR	259972	Symbol	* pDst		259135						
ANR	259973	Symbol	iSrc		259135						
ANR	259974	Symbol	* hexdigit		259135						
ANR	259975	Symbol	* iDst		259135						
ANR	259976	Symbol	glbl . GetParserEscapeControlCharactersCStyle		259135						
ANR	259977	Symbol	glbl . GetParserControlCharacterEscapePrefix		259135						
ANR	259978	Symbol	bUpdatedLen		259135						
ANR	259979	Symbol	glbl		259135						
ANR	259980	Symbol	lenMsg		259135						
ANR	259981	Symbol	NULL		259135						
ANR	259982	Symbol	pMsg -> iLenRawMsg		259135						
ANR	259983	Symbol	* lenMsg		259135						
ANR	259984	Symbol	glbl . GetParserDropTrailingLFOnReception		259135						
ANR	259985	Symbol	pMsg -> pszRawMsg		259135						
ANR	259986	Symbol	glbl . GetMaxLine		259135						
ANR	259987	Symbol	RSTRUE		259135						
ANR	259988	Symbol	glbl . GetParserEscapeControlCharacterTab		259135						
ANR	259989	Symbol	iDst		259135						
ANR	259990	Symbol	glbl . GetParserSpaceLFOnReceive		259135						
ANR	259991	Symbol	maxDest		259135						
ANR	259992	Symbol	* iSrc		259135						
ANR	259993	Symbol	iMaxLine		259135						
ANR	259994	Symbol	szSanBuf		259135						
ANR	259995	Symbol	pc		259135						
ANR	259996	Symbol	MALLOC		259135						
ANR	259997	Symbol	hexdigit		259135						
ANR	259998	Symbol	RSFALSE		259135						
ANR	259999	Symbol	* pc		259135						
ANR	260000	Function	ParsePRI	576:0:16905:17623							
ANR	260001	FunctionDef	ParsePRI (smsg_t * pMsg)		260000	0					
ANR	260002	CompoundStatement		578:0:16944:17623	260000	0					
ANR	260003	IdentifierDeclStatement	syslog_pri_t pri ;	579:1:16947:16963	260000	0	True				
ANR	260004	IdentifierDecl	pri		260000	0					
ANR	260005	IdentifierDeclType	syslog_pri_t		260000	0					
ANR	260006	Identifier	pri		260000	1					
ANR	260007	IdentifierDeclStatement	uchar * msg ;	580:1:16966:16976	260000	1	True				
ANR	260008	IdentifierDecl	* msg		260000	0					
ANR	260009	IdentifierDeclType	uchar *		260000	0					
ANR	260010	Identifier	msg		260000	1					
ANR	260011	IdentifierDeclStatement	int lenMsg ;	581:1:16979:16989	260000	2	True				
ANR	260012	IdentifierDecl	lenMsg		260000	0					
ANR	260013	IdentifierDeclType	int		260000	0					
ANR	260014	Identifier	lenMsg		260000	1					
ANR	260015	ExpressionStatement	DEFiRet	582:1:16992:16999	260000	3	True				
ANR	260016	Identifier	DEFiRet		260000	0					
ANR	260017	ExpressionStatement	lenMsg = pMsg -> iLenRawMsg	585:1:17019:17044	260000	4	True				
ANR	260018	AssignmentExpression	lenMsg = pMsg -> iLenRawMsg		260000	0		=			
ANR	260019	Identifier	lenMsg		260000	0					
ANR	260020	PtrMemberAccess	pMsg -> iLenRawMsg		260000	1					
ANR	260021	Identifier	pMsg		260000	0					
ANR	260022	Identifier	iLenRawMsg		260000	1					
ANR	260023	ExpressionStatement	msg = pMsg -> pszRawMsg	586:1:17047:17068	260000	5	True				
ANR	260024	AssignmentExpression	msg = pMsg -> pszRawMsg		260000	0		=			
ANR	260025	Identifier	msg		260000	0					
ANR	260026	PtrMemberAccess	pMsg -> pszRawMsg		260000	1					
ANR	260027	Identifier	pMsg		260000	0					
ANR	260028	Identifier	pszRawMsg		260000	1					
ANR	260029	ExpressionStatement	pri = DEFUPRI	587:1:17071:17084	260000	6	True				
ANR	260030	AssignmentExpression	pri = DEFUPRI		260000	0		=			
ANR	260031	Identifier	pri		260000	0					
ANR	260032	Identifier	DEFUPRI		260000	1					
ANR	260033	IfStatement	if ( pMsg -> msgFlags & NO_PRI_IN_RAW )		260000	7					
ANR	260034	Condition	pMsg -> msgFlags & NO_PRI_IN_RAW	588:4:17090:17119	260000	0	True				
ANR	260035	BitAndExpression	pMsg -> msgFlags & NO_PRI_IN_RAW		260000	0		&			
ANR	260036	PtrMemberAccess	pMsg -> msgFlags		260000	0					
ANR	260037	Identifier	pMsg		260000	0					
ANR	260038	Identifier	msgFlags		260000	1					
ANR	260039	Identifier	NO_PRI_IN_RAW		260000	1					
ANR	260040	CompoundStatement		11:36:177:177	260000	1					
ANR	260041	ExpressionStatement	"MsgSetAfterPRIOffs ( pMsg , 0 )"	590:2:17197:17224	260000	0	True				
ANR	260042	CallExpression	"MsgSetAfterPRIOffs ( pMsg , 0 )"		260000	0					
ANR	260043	Callee	MsgSetAfterPRIOffs		260000	0					
ANR	260044	Identifier	MsgSetAfterPRIOffs		260000	0					
ANR	260045	ArgumentList	pMsg		260000	1					
ANR	260046	Argument	pMsg		260000	0					
ANR	260047	Identifier	pMsg		260000	0					
ANR	260048	Argument	0		260000	1					
ANR	260049	PrimaryExpression	0		260000	0					
ANR	260050	ElseStatement	else		260000	0					
ANR	260051	CompoundStatement		14:8:289:289	260000	0					
ANR	260052	IfStatement	if ( * msg == '<' )		260000	0					
ANR	260053	Condition	* msg == '<'	592:5:17241:17251	260000	0	True				
ANR	260054	EqualityExpression	* msg == '<'		260000	0		==			
ANR	260055	UnaryOperationExpression	* msg		260000	0					
ANR	260056	UnaryOperator	*		260000	0					
ANR	260057	Identifier	msg		260000	1					
ANR	260058	PrimaryExpression	'<'		260000	1					
ANR	260059	CompoundStatement		15:18:309:309	260000	1					
ANR	260060	ExpressionStatement	pri = 0	593:3:17259:17266	260000	0	True				
ANR	260061	AssignmentExpression	pri = 0		260000	0		=			
ANR	260062	Identifier	pri		260000	0					
ANR	260063	PrimaryExpression	0		260000	1					
ANR	260064	WhileStatement	while ( -- lenMsg > 0 && isdigit ( ( int ) * ++ msg ) && pri <= LOG_MAXPRI )		260000	1					
ANR	260065	Condition	-- lenMsg > 0 && isdigit ( ( int ) * ++ msg ) && pri <= LOG_MAXPRI	594:9:17277:17334	260000	0	True				
ANR	260066	AndExpression	-- lenMsg > 0 && isdigit ( ( int ) * ++ msg ) && pri <= LOG_MAXPRI		260000	0		&&			
ANR	260067	RelationalExpression	-- lenMsg > 0		260000	0		>			
ANR	260068	UnaryExpression	-- lenMsg		260000	0					
ANR	260069	IncDec	--		260000	0					
ANR	260070	Identifier	lenMsg		260000	1					
ANR	260071	PrimaryExpression	0		260000	1					
ANR	260072	AndExpression	isdigit ( ( int ) * ++ msg ) && pri <= LOG_MAXPRI		260000	1		&&			
ANR	260073	CallExpression	isdigit ( ( int ) * ++ msg )		260000	0					
ANR	260074	Callee	isdigit		260000	0					
ANR	260075	Identifier	isdigit		260000	0					
ANR	260076	ArgumentList	( int ) * ++ msg		260000	1					
ANR	260077	Argument	( int ) * ++ msg		260000	0					
ANR	260078	CastExpression	( int ) * ++ msg		260000	0					
ANR	260079	CastTarget	int		260000	0					
ANR	260080	UnaryOperationExpression	* ++ msg		260000	1					
ANR	260081	UnaryOperator	*		260000	0					
ANR	260082	UnaryExpression	++ msg		260000	1					
ANR	260083	IncDec	++		260000	0					
ANR	260084	Identifier	msg		260000	1					
ANR	260085	RelationalExpression	pri <= LOG_MAXPRI		260000	1		<=			
ANR	260086	Identifier	pri		260000	0					
ANR	260087	Identifier	LOG_MAXPRI		260000	1					
ANR	260088	CompoundStatement		17:69:392:392	260000	1					
ANR	260089	ExpressionStatement	pri = 10 * pri + ( * msg - '0' )	595:4:17343:17372	260000	0	True				
ANR	260090	AssignmentExpression	pri = 10 * pri + ( * msg - '0' )		260000	0		=			
ANR	260091	Identifier	pri		260000	0					
ANR	260092	AdditiveExpression	10 * pri + ( * msg - '0' )		260000	1		+			
ANR	260093	MultiplicativeExpression	10 * pri		260000	0		*			
ANR	260094	PrimaryExpression	10		260000	0					
ANR	260095	Identifier	pri		260000	1					
ANR	260096	AdditiveExpression	* msg - '0'		260000	1		-			
ANR	260097	UnaryOperationExpression	* msg		260000	0					
ANR	260098	UnaryOperator	*		260000	0					
ANR	260099	Identifier	msg		260000	1					
ANR	260100	PrimaryExpression	'0'		260000	1					
ANR	260101	IfStatement	if ( * msg == '>' )		260000	2					
ANR	260102	Condition	* msg == '>'	597:6:17385:17395	260000	0	True				
ANR	260103	EqualityExpression	* msg == '>'		260000	0		==			
ANR	260104	UnaryOperationExpression	* msg		260000	0					
ANR	260105	UnaryOperator	*		260000	0					
ANR	260106	Identifier	msg		260000	1					
ANR	260107	PrimaryExpression	'>'		260000	1					
ANR	260108	CompoundStatement		20:19:453:453	260000	1					
ANR	260109	ExpressionStatement	++ msg	598:4:17404:17409	260000	0	True				
ANR	260110	UnaryExpression	++ msg		260000	0					
ANR	260111	IncDec	++		260000	0					
ANR	260112	Identifier	msg		260000	1					
ANR	260113	ElseStatement	else		260000	0					
ANR	260114	CompoundStatement		22:10:476:476	260000	0					
ANR	260115	ExpressionStatement	pri = LOG_PRI_INVLD	600:4:17427:17446	260000	0	True				
ANR	260116	AssignmentExpression	pri = LOG_PRI_INVLD		260000	0		=			
ANR	260117	Identifier	pri		260000	0					
ANR	260118	Identifier	LOG_PRI_INVLD		260000	1					
ANR	260119	IfStatement	if ( pri > LOG_MAXPRI )		260000	3					
ANR	260120	Condition	pri > LOG_MAXPRI	602:6:17459:17474	260000	0	True				
ANR	260121	RelationalExpression	pri > LOG_MAXPRI		260000	0		>			
ANR	260122	Identifier	pri		260000	0					
ANR	260123	Identifier	LOG_MAXPRI		260000	1					
ANR	260124	ExpressionStatement	pri = LOG_PRI_INVLD	603:4:17481:17500	260000	1	True				
ANR	260125	AssignmentExpression	pri = LOG_PRI_INVLD		260000	0		=			
ANR	260126	Identifier	pri		260000	0					
ANR	260127	Identifier	LOG_PRI_INVLD		260000	1					
ANR	260128	ExpressionStatement	"msgSetPRI ( pMsg , pri )"	605:2:17508:17528	260000	1	True				
ANR	260129	CallExpression	"msgSetPRI ( pMsg , pri )"		260000	0					
ANR	260130	Callee	msgSetPRI		260000	0					
ANR	260131	Identifier	msgSetPRI		260000	0					
ANR	260132	ArgumentList	pMsg		260000	1					
ANR	260133	Argument	pMsg		260000	0					
ANR	260134	Identifier	pMsg		260000	0					
ANR	260135	Argument	pri		260000	1					
ANR	260136	Identifier	pri		260000	0					
ANR	260137	ExpressionStatement	"MsgSetAfterPRIOffs ( pMsg , ( pri == LOG_PRI_INVLD ) ? 0 : msg - pMsg -> pszRawMsg )"	606:2:17532:17608	260000	2	True				
ANR	260138	CallExpression	"MsgSetAfterPRIOffs ( pMsg , ( pri == LOG_PRI_INVLD ) ? 0 : msg - pMsg -> pszRawMsg )"		260000	0					
ANR	260139	Callee	MsgSetAfterPRIOffs		260000	0					
ANR	260140	Identifier	MsgSetAfterPRIOffs		260000	0					
ANR	260141	ArgumentList	pMsg		260000	1					
ANR	260142	Argument	pMsg		260000	0					
ANR	260143	Identifier	pMsg		260000	0					
ANR	260144	Argument	( pri == LOG_PRI_INVLD ) ? 0 : msg - pMsg -> pszRawMsg		260000	1					
ANR	260145	ConditionalExpression	( pri == LOG_PRI_INVLD ) ? 0 : msg - pMsg -> pszRawMsg		260000	0					
ANR	260146	Condition	pri == LOG_PRI_INVLD		260000	0					
ANR	260147	EqualityExpression	pri == LOG_PRI_INVLD		260000	0		==			
ANR	260148	Identifier	pri		260000	0					
ANR	260149	Identifier	LOG_PRI_INVLD		260000	1					
ANR	260150	PrimaryExpression	0		260000	1					
ANR	260151	AdditiveExpression	msg - pMsg -> pszRawMsg		260000	2		-			
ANR	260152	Identifier	msg		260000	0					
ANR	260153	PtrMemberAccess	pMsg -> pszRawMsg		260000	1					
ANR	260154	Identifier	pMsg		260000	0					
ANR	260155	Identifier	pszRawMsg		260000	1					
ANR	260156	ExpressionStatement	RETiRet	608:1:17614:17621	260000	8	True				
ANR	260157	Identifier	RETiRet		260000	0					
ANR	260158	ReturnType	static rsRetVal		260000	1					
ANR	260159	Identifier	ParsePRI		260000	2					
ANR	260160	ParameterList	smsg_t * pMsg		260000	3					
ANR	260161	Parameter	smsg_t * pMsg	577:9:16930:16941	260000	0	True				
ANR	260162	ParameterType	smsg_t *		260000	0					
ANR	260163	Identifier	pMsg		260000	1					
ANR	260164	CFGEntryNode	ENTRY		260000		True				
ANR	260165	CFGExitNode	EXIT		260000		True				
ANR	260166	Symbol	msg		260000						
ANR	260167	Symbol	LOG_PRI_INVLD		260000						
ANR	260168	Symbol	lenMsg		260000						
ANR	260169	Symbol	pMsg -> iLenRawMsg		260000						
ANR	260170	Symbol	pMsg -> msgFlags		260000						
ANR	260171	Symbol	pMsg		260000						
ANR	260172	Symbol	* pMsg		260000						
ANR	260173	Symbol	pMsg -> pszRawMsg		260000						
ANR	260174	Symbol	pri		260000						
ANR	260175	Symbol	* msg		260000						
ANR	260176	Symbol	NO_PRI_IN_RAW		260000						
ANR	260177	Symbol	LOG_MAXPRI		260000						
ANR	260178	Symbol	* ++ msg		260000						
ANR	260179	Symbol	isdigit		260000						
ANR	260180	Symbol	DEFUPRI		260000						
ANR	260181	Function	ParseMsg	617:0:17835:20541							
ANR	260182	FunctionDef	ParseMsg (smsg_t * pMsg)		260181	0					
ANR	260183	CompoundStatement		619:0:17874:20541	260181	0					
ANR	260184	IdentifierDeclStatement	rsRetVal localRet = RS_RET_ERR ;	620:1:17877:17907	260181	0	True				
ANR	260185	IdentifierDecl	localRet = RS_RET_ERR		260181	0					
ANR	260186	IdentifierDeclType	rsRetVal		260181	0					
ANR	260187	Identifier	localRet		260181	1					
ANR	260188	AssignmentExpression	localRet = RS_RET_ERR		260181	2		=			
ANR	260189	Identifier	RS_RET_ERR		260181	0					
ANR	260190	Identifier	RS_RET_ERR		260181	1					
ANR	260191	IdentifierDeclStatement	parserList_t * pParserList ;	621:1:17910:17935	260181	1	True				
ANR	260192	IdentifierDecl	* pParserList		260181	0					
ANR	260193	IdentifierDeclType	parserList_t *		260181	0					
ANR	260194	Identifier	pParserList		260181	1					
ANR	260195	IdentifierDeclStatement	parser_t * pParser ;	622:1:17938:17955	260181	2	True				
ANR	260196	IdentifierDecl	* pParser		260181	0					
ANR	260197	IdentifierDeclType	parser_t *		260181	0					
ANR	260198	Identifier	pParser		260181	1					
ANR	260199	IdentifierDeclStatement	sbool bIsSanitized ;	623:1:17958:17976	260181	3	True				
ANR	260200	IdentifierDecl	bIsSanitized		260181	0					
ANR	260201	IdentifierDeclType	sbool		260181	0					
ANR	260202	Identifier	bIsSanitized		260181	1					
ANR	260203	IdentifierDeclStatement	sbool bPRIisParsed ;	624:1:17979:17997	260181	4	True				
ANR	260204	IdentifierDecl	bPRIisParsed		260181	0					
ANR	260205	IdentifierDeclType	sbool		260181	0					
ANR	260206	Identifier	bPRIisParsed		260181	1					
ANR	260207	Statement	static	625:1:18000:18005	260181	5	True				
ANR	260208	IdentifierDeclStatement	int iErrMsgRateLimiter = 0 ;	625:8:18007:18033	260181	6	True				
ANR	260209	IdentifierDecl	iErrMsgRateLimiter = 0		260181	0					
ANR	260210	IdentifierDeclType	int		260181	0					
ANR	260211	Identifier	iErrMsgRateLimiter		260181	1					
ANR	260212	AssignmentExpression	iErrMsgRateLimiter = 0		260181	2		=			
ANR	260213	Identifier	iErrMsgRateLimiter		260181	0					
ANR	260214	PrimaryExpression	0		260181	1					
ANR	260215	ExpressionStatement	DEFiRet	626:1:18036:18043	260181	7	True				
ANR	260216	Identifier	DEFiRet		260181	0					
ANR	260217	IfStatement	if ( pMsg -> iLenRawMsg == 0 )		260181	8					
ANR	260218	Condition	pMsg -> iLenRawMsg == 0	628:4:18050:18070	260181	0	True				
ANR	260219	EqualityExpression	pMsg -> iLenRawMsg == 0		260181	0		==			
ANR	260220	PtrMemberAccess	pMsg -> iLenRawMsg		260181	0					
ANR	260221	Identifier	pMsg		260181	0					
ANR	260222	Identifier	iLenRawMsg		260181	1					
ANR	260223	PrimaryExpression	0		260181	1					
ANR	260224	ExpressionStatement	ABORT_FINALIZE ( RS_RET_EMPTY_MSG )	629:2:18075:18107	260181	1	True				
ANR	260225	CallExpression	ABORT_FINALIZE ( RS_RET_EMPTY_MSG )		260181	0					
ANR	260226	Callee	ABORT_FINALIZE		260181	0					
ANR	260227	Identifier	ABORT_FINALIZE		260181	0					
ANR	260228	ArgumentList	RS_RET_EMPTY_MSG		260181	1					
ANR	260229	Argument	RS_RET_EMPTY_MSG		260181	0					
ANR	260230	Identifier	RS_RET_EMPTY_MSG		260181	0					
ANR	260231	ExpressionStatement	CHKiRet ( uncompressMessage ( pMsg ) )	631:1:18111:18143	260181	9	True				
ANR	260232	CallExpression	CHKiRet ( uncompressMessage ( pMsg ) )		260181	0					
ANR	260233	Callee	CHKiRet		260181	0					
ANR	260234	Identifier	CHKiRet		260181	0					
ANR	260235	ArgumentList	uncompressMessage ( pMsg )		260181	1					
ANR	260236	Argument	uncompressMessage ( pMsg )		260181	0					
ANR	260237	CallExpression	uncompressMessage ( pMsg )		260181	0					
ANR	260238	Callee	uncompressMessage		260181	0					
ANR	260239	Identifier	uncompressMessage		260181	0					
ANR	260240	ArgumentList	pMsg		260181	1					
ANR	260241	Argument	pMsg		260181	0					
ANR	260242	Identifier	pMsg		260181	0					
ANR	260243	ExpressionStatement	"DBGPRINTF ( ""msg parser: flags %x, from '%s', msg '%.60s'\\n"" , pMsg -> msgFlags , ( pMsg -> msgFlags & NEEDS_DNSRESOL ) ? UCHAR_CONSTANT ( ""~NOTRESOLVED~"" ) : getRcvFrom ( pMsg ) , pMsg -> pszRawMsg )"	636:1:18317:18505	260181	10	True				
ANR	260244	CallExpression	"DBGPRINTF ( ""msg parser: flags %x, from '%s', msg '%.60s'\\n"" , pMsg -> msgFlags , ( pMsg -> msgFlags & NEEDS_DNSRESOL ) ? UCHAR_CONSTANT ( ""~NOTRESOLVED~"" ) : getRcvFrom ( pMsg ) , pMsg -> pszRawMsg )"		260181	0					
ANR	260245	Callee	DBGPRINTF		260181	0					
ANR	260246	Identifier	DBGPRINTF		260181	0					
ANR	260247	ArgumentList	"""msg parser: flags %x, from '%s', msg '%.60s'\\n"""		260181	1					
ANR	260248	Argument	"""msg parser: flags %x, from '%s', msg '%.60s'\\n"""		260181	0					
ANR	260249	PrimaryExpression	"""msg parser: flags %x, from '%s', msg '%.60s'\\n"""		260181	0					
ANR	260250	Argument	pMsg -> msgFlags		260181	1					
ANR	260251	PtrMemberAccess	pMsg -> msgFlags		260181	0					
ANR	260252	Identifier	pMsg		260181	0					
ANR	260253	Identifier	msgFlags		260181	1					
ANR	260254	Argument	"( pMsg -> msgFlags & NEEDS_DNSRESOL ) ? UCHAR_CONSTANT ( ""~NOTRESOLVED~"" ) : getRcvFrom ( pMsg )"		260181	2					
ANR	260255	ConditionalExpression	"( pMsg -> msgFlags & NEEDS_DNSRESOL ) ? UCHAR_CONSTANT ( ""~NOTRESOLVED~"" ) : getRcvFrom ( pMsg )"		260181	0					
ANR	260256	Condition	pMsg -> msgFlags & NEEDS_DNSRESOL		260181	0					
ANR	260257	BitAndExpression	pMsg -> msgFlags & NEEDS_DNSRESOL		260181	0		&			
ANR	260258	PtrMemberAccess	pMsg -> msgFlags		260181	0					
ANR	260259	Identifier	pMsg		260181	0					
ANR	260260	Identifier	msgFlags		260181	1					
ANR	260261	Identifier	NEEDS_DNSRESOL		260181	1					
ANR	260262	CallExpression	"UCHAR_CONSTANT ( ""~NOTRESOLVED~"" )"		260181	1					
ANR	260263	Callee	UCHAR_CONSTANT		260181	0					
ANR	260264	Identifier	UCHAR_CONSTANT		260181	0					
ANR	260265	ArgumentList	"""~NOTRESOLVED~"""		260181	1					
ANR	260266	Argument	"""~NOTRESOLVED~"""		260181	0					
ANR	260267	PrimaryExpression	"""~NOTRESOLVED~"""		260181	0					
ANR	260268	CallExpression	getRcvFrom ( pMsg )		260181	2					
ANR	260269	Callee	getRcvFrom		260181	0					
ANR	260270	Identifier	getRcvFrom		260181	0					
ANR	260271	ArgumentList	pMsg		260181	1					
ANR	260272	Argument	pMsg		260181	0					
ANR	260273	Identifier	pMsg		260181	0					
ANR	260274	Argument	pMsg -> pszRawMsg		260181	3					
ANR	260275	PtrMemberAccess	pMsg -> pszRawMsg		260181	0					
ANR	260276	Identifier	pMsg		260181	0					
ANR	260277	Identifier	pszRawMsg		260181	1					
ANR	260278	ExpressionStatement	"pParserList = ruleset . GetParserList ( ourConf , pMsg )"	645:1:18784:18834	260181	11	True				
ANR	260279	AssignmentExpression	"pParserList = ruleset . GetParserList ( ourConf , pMsg )"		260181	0		=			
ANR	260280	Identifier	pParserList		260181	0					
ANR	260281	CallExpression	"ruleset . GetParserList ( ourConf , pMsg )"		260181	1					
ANR	260282	Callee	ruleset . GetParserList		260181	0					
ANR	260283	MemberAccess	ruleset . GetParserList		260181	0					
ANR	260284	Identifier	ruleset		260181	0					
ANR	260285	Identifier	GetParserList		260181	1					
ANR	260286	ArgumentList	ourConf		260181	1					
ANR	260287	Argument	ourConf		260181	0					
ANR	260288	Identifier	ourConf		260181	0					
ANR	260289	Argument	pMsg		260181	1					
ANR	260290	Identifier	pMsg		260181	0					
ANR	260291	IfStatement	if ( pParserList == NULL )		260181	12					
ANR	260292	Condition	pParserList == NULL	646:4:18840:18858	260181	0	True				
ANR	260293	EqualityExpression	pParserList == NULL		260181	0		==			
ANR	260294	Identifier	pParserList		260181	0					
ANR	260295	Identifier	NULL		260181	1					
ANR	260296	CompoundStatement		28:25:986:986	260181	1					
ANR	260297	ExpressionStatement	pParserList = pDfltParsLst	647:2:18865:18891	260181	0	True				
ANR	260298	AssignmentExpression	pParserList = pDfltParsLst		260181	0		=			
ANR	260299	Identifier	pParserList		260181	0					
ANR	260300	Identifier	pDfltParsLst		260181	1					
ANR	260301	ExpressionStatement	"DBGPRINTF ( ""parse using parser list %p%s.\\n"" , pParserList , ( pParserList == pDfltParsLst ) ? "" (the default list)"" : """" )"	649:1:18897:19018	260181	13	True				
ANR	260302	CallExpression	"DBGPRINTF ( ""parse using parser list %p%s.\\n"" , pParserList , ( pParserList == pDfltParsLst ) ? "" (the default list)"" : """" )"		260181	0					
ANR	260303	Callee	DBGPRINTF		260181	0					
ANR	260304	Identifier	DBGPRINTF		260181	0					
ANR	260305	ArgumentList	"""parse using parser list %p%s.\\n"""		260181	1					
ANR	260306	Argument	"""parse using parser list %p%s.\\n"""		260181	0					
ANR	260307	PrimaryExpression	"""parse using parser list %p%s.\\n"""		260181	0					
ANR	260308	Argument	pParserList		260181	1					
ANR	260309	Identifier	pParserList		260181	0					
ANR	260310	Argument	"( pParserList == pDfltParsLst ) ? "" (the default list)"" : """""		260181	2					
ANR	260311	ConditionalExpression	"( pParserList == pDfltParsLst ) ? "" (the default list)"" : """""		260181	0					
ANR	260312	Condition	pParserList == pDfltParsLst		260181	0					
ANR	260313	EqualityExpression	pParserList == pDfltParsLst		260181	0		==			
ANR	260314	Identifier	pParserList		260181	0					
ANR	260315	Identifier	pDfltParsLst		260181	1					
ANR	260316	PrimaryExpression	""" (the default list)"""		260181	1					
ANR	260317	PrimaryExpression	""""""		260181	2					
ANR	260318	ExpressionStatement	bIsSanitized = RSFALSE	652:1:19022:19044	260181	14	True				
ANR	260319	AssignmentExpression	bIsSanitized = RSFALSE		260181	0		=			
ANR	260320	Identifier	bIsSanitized		260181	0					
ANR	260321	Identifier	RSFALSE		260181	1					
ANR	260322	ExpressionStatement	bPRIisParsed = RSFALSE	653:1:19047:19069	260181	15	True				
ANR	260323	AssignmentExpression	bPRIisParsed = RSFALSE		260181	0		=			
ANR	260324	Identifier	bPRIisParsed		260181	0					
ANR	260325	Identifier	RSFALSE		260181	1					
ANR	260326	WhileStatement	while ( pParserList != NULL )		260181	16					
ANR	260327	Condition	pParserList != NULL	654:7:19078:19096	260181	0	True				
ANR	260328	EqualityExpression	pParserList != NULL		260181	0		!=			
ANR	260329	Identifier	pParserList		260181	0					
ANR	260330	Identifier	NULL		260181	1					
ANR	260331	CompoundStatement		36:28:1224:1224	260181	1					
ANR	260332	ExpressionStatement	pParser = pParserList -> pParser	655:2:19103:19133	260181	0	True				
ANR	260333	AssignmentExpression	pParser = pParserList -> pParser		260181	0		=			
ANR	260334	Identifier	pParser		260181	0					
ANR	260335	PtrMemberAccess	pParserList -> pParser		260181	1					
ANR	260336	Identifier	pParserList		260181	0					
ANR	260337	Identifier	pParser		260181	1					
ANR	260338	IfStatement	if ( pParser -> bDoSanitazion && bIsSanitized == RSFALSE )		260181	1					
ANR	260339	Condition	pParser -> bDoSanitazion && bIsSanitized == RSFALSE	656:5:19140:19188	260181	0	True				
ANR	260340	AndExpression	pParser -> bDoSanitazion && bIsSanitized == RSFALSE		260181	0		&&			
ANR	260341	PtrMemberAccess	pParser -> bDoSanitazion		260181	0					
ANR	260342	Identifier	pParser		260181	0					
ANR	260343	Identifier	bDoSanitazion		260181	1					
ANR	260344	EqualityExpression	bIsSanitized == RSFALSE		260181	1		==			
ANR	260345	Identifier	bIsSanitized		260181	0					
ANR	260346	Identifier	RSFALSE		260181	1					
ANR	260347	CompoundStatement		38:56:1316:1316	260181	1					
ANR	260348	ExpressionStatement	CHKiRet ( SanitizeMsg ( pMsg ) )	657:3:19196:19222	260181	0	True				
ANR	260349	CallExpression	CHKiRet ( SanitizeMsg ( pMsg ) )		260181	0					
ANR	260350	Callee	CHKiRet		260181	0					
ANR	260351	Identifier	CHKiRet		260181	0					
ANR	260352	ArgumentList	SanitizeMsg ( pMsg )		260181	1					
ANR	260353	Argument	SanitizeMsg ( pMsg )		260181	0					
ANR	260354	CallExpression	SanitizeMsg ( pMsg )		260181	0					
ANR	260355	Callee	SanitizeMsg		260181	0					
ANR	260356	Identifier	SanitizeMsg		260181	0					
ANR	260357	ArgumentList	pMsg		260181	1					
ANR	260358	Argument	pMsg		260181	0					
ANR	260359	Identifier	pMsg		260181	0					
ANR	260360	IfStatement	if ( pParser -> bDoPRIParsing && bPRIisParsed == RSFALSE )		260181	1					
ANR	260361	Condition	pParser -> bDoPRIParsing && bPRIisParsed == RSFALSE	658:6:19230:19278	260181	0	True				
ANR	260362	AndExpression	pParser -> bDoPRIParsing && bPRIisParsed == RSFALSE		260181	0		&&			
ANR	260363	PtrMemberAccess	pParser -> bDoPRIParsing		260181	0					
ANR	260364	Identifier	pParser		260181	0					
ANR	260365	Identifier	bDoPRIParsing		260181	1					
ANR	260366	EqualityExpression	bPRIisParsed == RSFALSE		260181	1		==			
ANR	260367	Identifier	bPRIisParsed		260181	0					
ANR	260368	Identifier	RSFALSE		260181	1					
ANR	260369	CompoundStatement		40:57:1406:1406	260181	1					
ANR	260370	ExpressionStatement	CHKiRet ( ParsePRI ( pMsg ) )	659:4:19287:19310	260181	0	True				
ANR	260371	CallExpression	CHKiRet ( ParsePRI ( pMsg ) )		260181	0					
ANR	260372	Callee	CHKiRet		260181	0					
ANR	260373	Identifier	CHKiRet		260181	0					
ANR	260374	ArgumentList	ParsePRI ( pMsg )		260181	1					
ANR	260375	Argument	ParsePRI ( pMsg )		260181	0					
ANR	260376	CallExpression	ParsePRI ( pMsg )		260181	0					
ANR	260377	Callee	ParsePRI		260181	0					
ANR	260378	Identifier	ParsePRI		260181	0					
ANR	260379	ArgumentList	pMsg		260181	1					
ANR	260380	Argument	pMsg		260181	0					
ANR	260381	Identifier	pMsg		260181	0					
ANR	260382	ExpressionStatement	bPRIisParsed = RSTRUE	660:4:19316:19337	260181	1	True				
ANR	260383	AssignmentExpression	bPRIisParsed = RSTRUE		260181	0		=			
ANR	260384	Identifier	bPRIisParsed		260181	0					
ANR	260385	Identifier	RSTRUE		260181	1					
ANR	260386	ExpressionStatement	bIsSanitized = RSTRUE	662:3:19347:19368	260181	2	True				
ANR	260387	AssignmentExpression	bIsSanitized = RSTRUE		260181	0		=			
ANR	260388	Identifier	bIsSanitized		260181	0					
ANR	260389	Identifier	RSTRUE		260181	1					
ANR	260390	IfStatement	if ( pParser -> pModule -> mod . pm . parse2 == NULL )		260181	2					
ANR	260391	Condition	pParser -> pModule -> mod . pm . parse2 == NULL	664:5:19379:19417	260181	0	True				
ANR	260392	EqualityExpression	pParser -> pModule -> mod . pm . parse2 == NULL		260181	0		==			
ANR	260393	MemberAccess	pParser -> pModule -> mod . pm . parse2		260181	0					
ANR	260394	MemberAccess	pParser -> pModule -> mod . pm		260181	0					
ANR	260395	PtrMemberAccess	pParser -> pModule -> mod		260181	0					
ANR	260396	PtrMemberAccess	pParser -> pModule		260181	0					
ANR	260397	Identifier	pParser		260181	0					
ANR	260398	Identifier	pModule		260181	1					
ANR	260399	Identifier	mod		260181	1					
ANR	260400	Identifier	pm		260181	1					
ANR	260401	Identifier	parse2		260181	1					
ANR	260402	Identifier	NULL		260181	1					
ANR	260403	ExpressionStatement	localRet = pParser -> pModule -> mod . pm . parse ( pMsg )	665:3:19423:19470	260181	1	True				
ANR	260404	AssignmentExpression	localRet = pParser -> pModule -> mod . pm . parse ( pMsg )		260181	0		=			
ANR	260405	Identifier	localRet		260181	0					
ANR	260406	CallExpression	pParser -> pModule -> mod . pm . parse ( pMsg )		260181	1					
ANR	260407	Callee	pParser -> pModule -> mod . pm . parse		260181	0					
ANR	260408	MemberAccess	pParser -> pModule -> mod . pm . parse		260181	0					
ANR	260409	MemberAccess	pParser -> pModule -> mod . pm		260181	0					
ANR	260410	PtrMemberAccess	pParser -> pModule -> mod		260181	0					
ANR	260411	PtrMemberAccess	pParser -> pModule		260181	0					
ANR	260412	Identifier	pParser		260181	0					
ANR	260413	Identifier	pModule		260181	1					
ANR	260414	Identifier	mod		260181	1					
ANR	260415	Identifier	pm		260181	1					
ANR	260416	Identifier	parse		260181	1					
ANR	260417	ArgumentList	pMsg		260181	1					
ANR	260418	Argument	pMsg		260181	0					
ANR	260419	Identifier	pMsg		260181	0					
ANR	260420	ElseStatement	else		260181	0					
ANR	260421	ExpressionStatement	"localRet = pParser -> pModule -> mod . pm . parse2 ( pParser -> pInst , pMsg )"	667:3:19482:19546	260181	0	True				
ANR	260422	AssignmentExpression	"localRet = pParser -> pModule -> mod . pm . parse2 ( pParser -> pInst , pMsg )"		260181	0		=			
ANR	260423	Identifier	localRet		260181	0					
ANR	260424	CallExpression	"pParser -> pModule -> mod . pm . parse2 ( pParser -> pInst , pMsg )"		260181	1					
ANR	260425	Callee	pParser -> pModule -> mod . pm . parse2		260181	0					
ANR	260426	MemberAccess	pParser -> pModule -> mod . pm . parse2		260181	0					
ANR	260427	MemberAccess	pParser -> pModule -> mod . pm		260181	0					
ANR	260428	PtrMemberAccess	pParser -> pModule -> mod		260181	0					
ANR	260429	PtrMemberAccess	pParser -> pModule		260181	0					
ANR	260430	Identifier	pParser		260181	0					
ANR	260431	Identifier	pModule		260181	1					
ANR	260432	Identifier	mod		260181	1					
ANR	260433	Identifier	pm		260181	1					
ANR	260434	Identifier	parse2		260181	1					
ANR	260435	ArgumentList	pParser -> pInst		260181	1					
ANR	260436	Argument	pParser -> pInst		260181	0					
ANR	260437	PtrMemberAccess	pParser -> pInst		260181	0					
ANR	260438	Identifier	pParser		260181	0					
ANR	260439	Identifier	pInst		260181	1					
ANR	260440	Argument	pMsg		260181	1					
ANR	260441	Identifier	pMsg		260181	0					
ANR	260442	ExpressionStatement	"DBGPRINTF ( ""Parser '%s' returned %d\\n"" , pParser -> pName , localRet )"	668:2:19550:19614	260181	3	True				
ANR	260443	CallExpression	"DBGPRINTF ( ""Parser '%s' returned %d\\n"" , pParser -> pName , localRet )"		260181	0					
ANR	260444	Callee	DBGPRINTF		260181	0					
ANR	260445	Identifier	DBGPRINTF		260181	0					
ANR	260446	ArgumentList	"""Parser '%s' returned %d\\n"""		260181	1					
ANR	260447	Argument	"""Parser '%s' returned %d\\n"""		260181	0					
ANR	260448	PrimaryExpression	"""Parser '%s' returned %d\\n"""		260181	0					
ANR	260449	Argument	pParser -> pName		260181	1					
ANR	260450	PtrMemberAccess	pParser -> pName		260181	0					
ANR	260451	Identifier	pParser		260181	0					
ANR	260452	Identifier	pName		260181	1					
ANR	260453	Argument	localRet		260181	2					
ANR	260454	Identifier	localRet		260181	0					
ANR	260455	IfStatement	if ( localRet != RS_RET_COULD_NOT_PARSE )		260181	4					
ANR	260456	Condition	localRet != RS_RET_COULD_NOT_PARSE	669:5:19621:19654	260181	0	True				
ANR	260457	EqualityExpression	localRet != RS_RET_COULD_NOT_PARSE		260181	0		!=			
ANR	260458	Identifier	localRet		260181	0					
ANR	260459	Identifier	RS_RET_COULD_NOT_PARSE		260181	1					
ANR	260460	BreakStatement	break ;	670:3:19660:19665	260181	1	True				
ANR	260461	ExpressionStatement	pParserList = pParserList -> pNext	671:2:19669:19701	260181	5	True				
ANR	260462	AssignmentExpression	pParserList = pParserList -> pNext		260181	0		=			
ANR	260463	Identifier	pParserList		260181	0					
ANR	260464	PtrMemberAccess	pParserList -> pNext		260181	1					
ANR	260465	Identifier	pParserList		260181	0					
ANR	260466	Identifier	pNext		260181	1					
ANR	260467	IfStatement	if ( localRet != RS_RET_OK )		260181	17					
ANR	260468	Condition	localRet != RS_RET_OK	679:4:20044:20064	260181	0	True				
ANR	260469	EqualityExpression	localRet != RS_RET_OK		260181	0		!=			
ANR	260470	Identifier	localRet		260181	0					
ANR	260471	Identifier	RS_RET_OK		260181	1					
ANR	260472	CompoundStatement		61:27:2192:2192	260181	1					
ANR	260473	IfStatement	if ( ++ iErrMsgRateLimiter < 1000 )		260181	0					
ANR	260474	Condition	++ iErrMsgRateLimiter < 1000	680:5:20074:20100	260181	0	True				
ANR	260475	RelationalExpression	++ iErrMsgRateLimiter < 1000		260181	0		<			
ANR	260476	UnaryExpression	++ iErrMsgRateLimiter		260181	0					
ANR	260477	IncDec	++		260181	0					
ANR	260478	Identifier	iErrMsgRateLimiter		260181	1					
ANR	260479	PrimaryExpression	1000		260181	1					
ANR	260480	CompoundStatement		62:34:2228:2228	260181	1					
ANR	260481	Statement	errmsg	681:3:20108:20113	260181	0	True				
ANR	260482	Statement	.	681:9:20114:20114	260181	1	True				
ANR	260483	Statement	LogError	681:10:20115:20122	260181	2	True				
ANR	260484	Statement	(	681:18:20123:20123	260181	3	True				
ANR	260485	Statement	0	681:19:20124:20124	260181	4	True				
ANR	260486	Statement	","	681:20:20125:20125	260181	5	True				
ANR	260487	Statement	localRet	681:22:20127:20134	260181	6	True				
ANR	260488	Statement	","	681:30:20135:20135	260181	7	True				
ANR	260489	Statement	"""Error: one message could not be processed by """	681:32:20137:20183	260181	8	True				
ANR	260490	Statement	"""any parser, message is being discarded (start of raw msg: '%.60s')"""	682:4:20189:20256	260181	9	True				
ANR	260491	Statement	","	682:72:20257:20257	260181	10	True				
ANR	260492	Statement	pMsg	683:4:20263:20266	260181	11	True				
ANR	260493	Statement	->	683:8:20267:20268	260181	12	True				
ANR	260494	Statement	pszRawMsg	683:10:20269:20277	260181	13	True				
ANR	260495	Statement	)	683:19:20278:20278	260181	14	True				
ANR	260496	ExpressionStatement		683:20:20279:20279	260181	15	True				
ANR	260497	ExpressionStatement	"DBGPRINTF ( ""No parser could process the message (state %d), we need to discard it.\\n"" , localRet )"	685:2:20287:20382	260181	1	True				
ANR	260498	CallExpression	"DBGPRINTF ( ""No parser could process the message (state %d), we need to discard it.\\n"" , localRet )"		260181	0					
ANR	260499	Callee	DBGPRINTF		260181	0					
ANR	260500	Identifier	DBGPRINTF		260181	0					
ANR	260501	ArgumentList	"""No parser could process the message (state %d), we need to discard it.\\n"""		260181	1					
ANR	260502	Argument	"""No parser could process the message (state %d), we need to discard it.\\n"""		260181	0					
ANR	260503	PrimaryExpression	"""No parser could process the message (state %d), we need to discard it.\\n"""		260181	0					
ANR	260504	Argument	localRet		260181	1					
ANR	260505	Identifier	localRet		260181	0					
ANR	260506	ExpressionStatement	ABORT_FINALIZE ( localRet )	686:2:20386:20410	260181	2	True				
ANR	260507	CallExpression	ABORT_FINALIZE ( localRet )		260181	0					
ANR	260508	Callee	ABORT_FINALIZE		260181	0					
ANR	260509	Identifier	ABORT_FINALIZE		260181	0					
ANR	260510	ArgumentList	localRet		260181	1					
ANR	260511	Argument	localRet		260181	0					
ANR	260512	Identifier	localRet		260181	0					
ANR	260513	ExpressionStatement	pMsg -> msgFlags &= ~NEEDS_PARSING	690:1:20450:20482	260181	18	True				
ANR	260514	AssignmentExpression	pMsg -> msgFlags &= ~NEEDS_PARSING		260181	0		&=			
ANR	260515	PtrMemberAccess	pMsg -> msgFlags		260181	0					
ANR	260516	Identifier	pMsg		260181	0					
ANR	260517	Identifier	msgFlags		260181	1					
ANR	260518	Identifier	~NEEDS_PARSING		260181	1					
ANR	260519	Label	finalize_it :	692:0:20518:20529	260181	19	True				
ANR	260520	Identifier	finalize_it		260181	0					
ANR	260521	ExpressionStatement	RETiRet	693:1:20532:20539	260181	20	True				
ANR	260522	Identifier	RETiRet		260181	0					
ANR	260523	ReturnType	static rsRetVal		260181	1					
ANR	260524	Identifier	ParseMsg		260181	2					
ANR	260525	ParameterList	smsg_t * pMsg		260181	3					
ANR	260526	Parameter	smsg_t * pMsg	618:9:17860:17871	260181	0	True				
ANR	260527	ParameterType	smsg_t *		260181	0					
ANR	260528	Identifier	pMsg		260181	1					
ANR	260529	CFGEntryNode	ENTRY		260181		True				
ANR	260530	CFGExitNode	EXIT		260181		True				
ANR	260531	Symbol	NEEDS_DNSRESOL		260181						
ANR	260532	Symbol	pMsg		260181						
ANR	260533	Symbol	* pMsg		260181						
ANR	260534	Symbol	RS_RET_ERR		260181						
ANR	260535	Symbol	pParserList		260181						
ANR	260536	Symbol	RS_RET_EMPTY_MSG		260181						
ANR	260537	Symbol	pParser -> pModule -> mod		260181						
ANR	260538	Symbol	RS_RET_COULD_NOT_PARSE		260181						
ANR	260539	Symbol	pParserList -> pNext		260181						
ANR	260540	Symbol	* pParser		260181						
ANR	260541	Symbol	UCHAR_CONSTANT		260181						
ANR	260542	Symbol	pDfltParsLst		260181						
ANR	260543	Symbol	pParser -> pModule -> mod . pm . parse		260181						
ANR	260544	Symbol	* pParser -> pModule		260181						
ANR	260545	Symbol	getRcvFrom		260181						
ANR	260546	Symbol	SanitizeMsg		260181						
ANR	260547	Symbol	bPRIisParsed		260181						
ANR	260548	Symbol	pParser -> bDoSanitazion		260181						
ANR	260549	Symbol	* * pParser		260181						
ANR	260550	Symbol	pMsg -> iLenRawMsg		260181						
ANR	260551	Symbol	pMsg -> msgFlags		260181						
ANR	260552	Symbol	NULL		260181						
ANR	260553	Symbol	pParser		260181						
ANR	260554	Symbol	pMsg -> pszRawMsg		260181						
ANR	260555	Symbol	RS_RET_OK		260181						
ANR	260556	Symbol	ruleset		260181						
ANR	260557	Symbol	bIsSanitized		260181						
ANR	260558	Symbol	ruleset . GetParserList		260181						
ANR	260559	Symbol	RSTRUE		260181						
ANR	260560	Symbol	pParser -> pModule -> mod . pm		260181						
ANR	260561	Symbol	pParserList -> pParser		260181						
ANR	260562	Symbol	* pParserList		260181						
ANR	260563	Symbol	pParser -> pModule		260181						
ANR	260564	Symbol	pParser -> pName		260181						
ANR	260565	Symbol	ourConf		260181						
ANR	260566	Symbol	ParsePRI		260181						
ANR	260567	Symbol	pParser -> pModule -> mod . pm . parse2		260181						
ANR	260568	Symbol	~NEEDS_PARSING		260181						
ANR	260569	Symbol	pParser -> pInst		260181						
ANR	260570	Symbol	RSFALSE		260181						
ANR	260571	Symbol	iErrMsgRateLimiter		260181						
ANR	260572	Symbol	pParser -> bDoPRIParsing		260181						
ANR	260573	Symbol	uncompressMessage		260181						
ANR	260574	Symbol	localRet		260181						
ANR	260575	Function	destroyMasterParserList	728:0:21804:22073							
ANR	260576	FunctionDef	destroyMasterParserList ()		260575	0					
ANR	260577	CompoundStatement		730:0:21846:22073	260575	0					
ANR	260578	IdentifierDeclStatement	parserList_t * pParsLst ;	731:1:21849:21871	260575	0	True				
ANR	260579	IdentifierDecl	* pParsLst		260575	0					
ANR	260580	IdentifierDeclType	parserList_t *		260575	0					
ANR	260581	Identifier	pParsLst		260575	1					
ANR	260582	IdentifierDeclStatement	parserList_t * pParsLstDel ;	732:1:21874:21899	260575	1	True				
ANR	260583	IdentifierDecl	* pParsLstDel		260575	0					
ANR	260584	IdentifierDeclType	parserList_t *		260575	0					
ANR	260585	Identifier	pParsLstDel		260575	1					
ANR	260586	ExpressionStatement	pParsLst = pParsLstRoot	734:1:21903:21926	260575	2	True				
ANR	260587	AssignmentExpression	pParsLst = pParsLstRoot		260575	0		=			
ANR	260588	Identifier	pParsLst		260575	0					
ANR	260589	Identifier	pParsLstRoot		260575	1					
ANR	260590	WhileStatement	while ( pParsLst != NULL )		260575	3					
ANR	260591	Condition	pParsLst != NULL	735:7:21935:21950	260575	0	True				
ANR	260592	EqualityExpression	pParsLst != NULL		260575	0		!=			
ANR	260593	Identifier	pParsLst		260575	0					
ANR	260594	Identifier	NULL		260575	1					
ANR	260595	CompoundStatement		6:25:106:106	260575	1					
ANR	260596	ExpressionStatement	parserDestruct ( & pParsLst -> pParser )	736:2:21957:21991	260575	0	True				
ANR	260597	CallExpression	parserDestruct ( & pParsLst -> pParser )		260575	0					
ANR	260598	Callee	parserDestruct		260575	0					
ANR	260599	Identifier	parserDestruct		260575	0					
ANR	260600	ArgumentList	& pParsLst -> pParser		260575	1					
ANR	260601	Argument	& pParsLst -> pParser		260575	0					
ANR	260602	UnaryOperationExpression	& pParsLst -> pParser		260575	0					
ANR	260603	UnaryOperator	&		260575	0					
ANR	260604	PtrMemberAccess	pParsLst -> pParser		260575	1					
ANR	260605	Identifier	pParsLst		260575	0					
ANR	260606	Identifier	pParser		260575	1					
ANR	260607	ExpressionStatement	pParsLstDel = pParsLst	737:2:21995:22017	260575	1	True				
ANR	260608	AssignmentExpression	pParsLstDel = pParsLst		260575	0		=			
ANR	260609	Identifier	pParsLstDel		260575	0					
ANR	260610	Identifier	pParsLst		260575	1					
ANR	260611	ExpressionStatement	pParsLst = pParsLst -> pNext	738:2:22021:22047	260575	2	True				
ANR	260612	AssignmentExpression	pParsLst = pParsLst -> pNext		260575	0		=			
ANR	260613	Identifier	pParsLst		260575	0					
ANR	260614	PtrMemberAccess	pParsLst -> pNext		260575	1					
ANR	260615	Identifier	pParsLst		260575	0					
ANR	260616	Identifier	pNext		260575	1					
ANR	260617	ExpressionStatement	free ( pParsLstDel )	739:2:22051:22068	260575	3	True				
ANR	260618	CallExpression	free ( pParsLstDel )		260575	0					
ANR	260619	Callee	free		260575	0					
ANR	260620	Identifier	free		260575	0					
ANR	260621	ArgumentList	pParsLstDel		260575	1					
ANR	260622	Argument	pParsLstDel		260575	0					
ANR	260623	Identifier	pParsLstDel		260575	0					
ANR	260624	ReturnType	static void		260575	1					
ANR	260625	Identifier	destroyMasterParserList		260575	2					
ANR	260626	ParameterList			260575	3					
ANR	260627	CFGEntryNode	ENTRY		260575		True				
ANR	260628	CFGExitNode	EXIT		260575		True				
ANR	260629	Symbol	pParsLst -> pNext		260575						
ANR	260630	Symbol	pParsLst		260575						
ANR	260631	Symbol	NULL		260575						
ANR	260632	Symbol	* pParsLst		260575						
ANR	260633	Symbol	pParsLstRoot		260575						
ANR	260634	Symbol	pParsLstDel		260575						
ANR	260635	Symbol	& pParsLst -> pParser		260575						
