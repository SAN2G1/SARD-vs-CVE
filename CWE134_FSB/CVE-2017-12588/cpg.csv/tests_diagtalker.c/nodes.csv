command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	332841	File	data/converged/CVE-2017-12588_rsyslog/tests_diagtalker.c								
ANR	332842	DeclStmt									
ANR	332843	Decl							char	char *	targetIP
ANR	332844	DeclStmt									
ANR	332845	Decl							int	int	targetPort
ANR	332846	Function	openConn	41:0:1280:2125							
ANR	332847	FunctionDef	openConn (int * fd)		332846	0					
ANR	332848	CompoundStatement		42:0:1302:2125	332846	0					
ANR	332849	IdentifierDeclStatement	int sock ;	43:1:1305:1313	332846	0	True				
ANR	332850	IdentifierDecl	sock		332846	0					
ANR	332851	IdentifierDeclType	int		332846	0					
ANR	332852	Identifier	sock		332846	1					
ANR	332853	IdentifierDeclStatement	struct sockaddr_in addr ;	44:1:1316:1339	332846	1	True				
ANR	332854	IdentifierDecl	addr		332846	0					
ANR	332855	IdentifierDeclType	struct sockaddr_in		332846	0					
ANR	332856	Identifier	addr		332846	1					
ANR	332857	IdentifierDeclStatement	int port ;	45:1:1342:1350	332846	2	True				
ANR	332858	IdentifierDecl	port		332846	0					
ANR	332859	IdentifierDeclType	int		332846	0					
ANR	332860	Identifier	port		332846	1					
ANR	332861	IdentifierDeclStatement	int retries = 0 ;	46:1:1353:1368	332846	3	True				
ANR	332862	IdentifierDecl	retries = 0		332846	0					
ANR	332863	IdentifierDeclType	int		332846	0					
ANR	332864	Identifier	retries		332846	1					
ANR	332865	AssignmentExpression	retries = 0		332846	2		=			
ANR	332866	Identifier	retries		332846	0					
ANR	332867	PrimaryExpression	0		332846	1					
ANR	332868	IfStatement	"if ( ( sock = socket ( AF_INET , SOCK_STREAM , 0 ) ) == - 1 )"		332846	4					
ANR	332869	Condition	"( sock = socket ( AF_INET , SOCK_STREAM , 0 ) ) == - 1"	48:4:1375:1416	332846	0	True				
ANR	332870	EqualityExpression	"( sock = socket ( AF_INET , SOCK_STREAM , 0 ) ) == - 1"		332846	0		==			
ANR	332871	AssignmentExpression	"sock = socket ( AF_INET , SOCK_STREAM , 0 )"		332846	0		=			
ANR	332872	Identifier	sock		332846	0					
ANR	332873	CallExpression	"socket ( AF_INET , SOCK_STREAM , 0 )"		332846	1					
ANR	332874	Callee	socket		332846	0					
ANR	332875	Identifier	socket		332846	0					
ANR	332876	ArgumentList	AF_INET		332846	1					
ANR	332877	Argument	AF_INET		332846	0					
ANR	332878	Identifier	AF_INET		332846	0					
ANR	332879	Argument	SOCK_STREAM		332846	1					
ANR	332880	Identifier	SOCK_STREAM		332846	0					
ANR	332881	Argument	0		332846	2					
ANR	332882	PrimaryExpression	0		332846	0					
ANR	332883	UnaryOperationExpression	- 1		332846	1					
ANR	332884	UnaryOperator	-		332846	0					
ANR	332885	PrimaryExpression	1		332846	1					
ANR	332886	CompoundStatement		7:48:116:116	332846	1					
ANR	332887	ExpressionStatement	"perror ( ""socket()"" )"	49:2:1423:1441	332846	0	True				
ANR	332888	CallExpression	"perror ( ""socket()"" )"		332846	0					
ANR	332889	Callee	perror		332846	0					
ANR	332890	Identifier	perror		332846	0					
ANR	332891	ArgumentList	"""socket()"""		332846	1					
ANR	332892	Argument	"""socket()"""		332846	0					
ANR	332893	PrimaryExpression	"""socket()"""		332846	0					
ANR	332894	ExpressionStatement	exit ( 1 )	50:2:1445:1452	332846	1	True				
ANR	332895	CallExpression	exit ( 1 )		332846	0					
ANR	332896	Callee	exit		332846	0					
ANR	332897	Identifier	exit		332846	0					
ANR	332898	ArgumentList	1		332846	1					
ANR	332899	Argument	1		332846	0					
ANR	332900	PrimaryExpression	1		332846	0					
ANR	332901	ExpressionStatement	port = targetPort	53:1:1459:1476	332846	5	True				
ANR	332902	AssignmentExpression	port = targetPort		332846	0		=			
ANR	332903	Identifier	port		332846	0					
ANR	332904	Identifier	targetPort		332846	1					
ANR	332905	ExpressionStatement	"memset ( ( char * ) & addr , 0 , sizeof ( addr ) )"	54:1:1479:1518	332846	6	True				
ANR	332906	CallExpression	"memset ( ( char * ) & addr , 0 , sizeof ( addr ) )"		332846	0					
ANR	332907	Callee	memset		332846	0					
ANR	332908	Identifier	memset		332846	0					
ANR	332909	ArgumentList	( char * ) & addr		332846	1					
ANR	332910	Argument	( char * ) & addr		332846	0					
ANR	332911	CastExpression	( char * ) & addr		332846	0					
ANR	332912	CastTarget	char *		332846	0					
ANR	332913	UnaryOperationExpression	& addr		332846	1					
ANR	332914	UnaryOperator	&		332846	0					
ANR	332915	Identifier	addr		332846	1					
ANR	332916	Argument	0		332846	1					
ANR	332917	PrimaryExpression	0		332846	0					
ANR	332918	Argument	sizeof ( addr )		332846	2					
ANR	332919	SizeofExpression	sizeof ( addr )		332846	0					
ANR	332920	Sizeof	sizeof		332846	0					
ANR	332921	SizeofOperand	addr		332846	1					
ANR	332922	ExpressionStatement	addr . sin_family = AF_INET	55:1:1521:1546	332846	7	True				
ANR	332923	AssignmentExpression	addr . sin_family = AF_INET		332846	0		=			
ANR	332924	MemberAccess	addr . sin_family		332846	0					
ANR	332925	Identifier	addr		332846	0					
ANR	332926	Identifier	sin_family		332846	1					
ANR	332927	Identifier	AF_INET		332846	1					
ANR	332928	ExpressionStatement	addr . sin_port = htons ( port )	56:1:1549:1576	332846	8	True				
ANR	332929	AssignmentExpression	addr . sin_port = htons ( port )		332846	0		=			
ANR	332930	MemberAccess	addr . sin_port		332846	0					
ANR	332931	Identifier	addr		332846	0					
ANR	332932	Identifier	sin_port		332846	1					
ANR	332933	CallExpression	htons ( port )		332846	1					
ANR	332934	Callee	htons		332846	0					
ANR	332935	Identifier	htons		332846	0					
ANR	332936	ArgumentList	port		332846	1					
ANR	332937	Argument	port		332846	0					
ANR	332938	Identifier	port		332846	0					
ANR	332939	IfStatement	"if ( inet_aton ( targetIP , & addr . sin_addr ) == 0 )"		332846	9					
ANR	332940	Condition	"inet_aton ( targetIP , & addr . sin_addr ) == 0"	57:4:1582:1619	332846	0	True				
ANR	332941	EqualityExpression	"inet_aton ( targetIP , & addr . sin_addr ) == 0"		332846	0		==			
ANR	332942	CallExpression	"inet_aton ( targetIP , & addr . sin_addr )"		332846	0					
ANR	332943	Callee	inet_aton		332846	0					
ANR	332944	Identifier	inet_aton		332846	0					
ANR	332945	ArgumentList	targetIP		332846	1					
ANR	332946	Argument	targetIP		332846	0					
ANR	332947	Identifier	targetIP		332846	0					
ANR	332948	Argument	& addr . sin_addr		332846	1					
ANR	332949	UnaryOperationExpression	& addr . sin_addr		332846	0					
ANR	332950	UnaryOperator	&		332846	0					
ANR	332951	MemberAccess	addr . sin_addr		332846	1					
ANR	332952	Identifier	addr		332846	0					
ANR	332953	Identifier	sin_addr		332846	1					
ANR	332954	PrimaryExpression	0		332846	1					
ANR	332955	CompoundStatement		16:44:319:319	332846	1					
ANR	332956	ExpressionStatement	"fprintf ( stderr , ""inet_aton() failed\\n"" )"	58:2:1626:1665	332846	0	True				
ANR	332957	CallExpression	"fprintf ( stderr , ""inet_aton() failed\\n"" )"		332846	0					
ANR	332958	Callee	fprintf		332846	0					
ANR	332959	Identifier	fprintf		332846	0					
ANR	332960	ArgumentList	stderr		332846	1					
ANR	332961	Argument	stderr		332846	0					
ANR	332962	Identifier	stderr		332846	0					
ANR	332963	Argument	"""inet_aton() failed\\n"""		332846	1					
ANR	332964	PrimaryExpression	"""inet_aton() failed\\n"""		332846	0					
ANR	332965	ExpressionStatement	exit ( 1 )	59:2:1669:1676	332846	1	True				
ANR	332966	CallExpression	exit ( 1 )		332846	0					
ANR	332967	Callee	exit		332846	0					
ANR	332968	Identifier	exit		332846	0					
ANR	332969	ArgumentList	1		332846	1					
ANR	332970	Argument	1		332846	0					
ANR	332971	PrimaryExpression	1		332846	0					
ANR	332972	WhileStatement	while ( 1 )		332846	10					
ANR	332973	Condition	1	61:7:1688:1688	332846	0	True				
ANR	332974	PrimaryExpression	1		332846	0					
ANR	332975	CompoundStatement		20:10:388:388	332846	1					
ANR	332976	IfStatement	"if ( connect ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) == 0 )"		332846	0					
ANR	332977	Condition	"connect ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) == 0"	62:5:1723:1779	332846	0	True				
ANR	332978	EqualityExpression	"connect ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) == 0"		332846	0		==			
ANR	332979	CallExpression	"connect ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) )"		332846	0					
ANR	332980	Callee	connect		332846	0					
ANR	332981	Identifier	connect		332846	0					
ANR	332982	ArgumentList	sock		332846	1					
ANR	332983	Argument	sock		332846	0					
ANR	332984	Identifier	sock		332846	0					
ANR	332985	Argument	( struct sockaddr * ) & addr		332846	1					
ANR	332986	CastExpression	( struct sockaddr * ) & addr		332846	0					
ANR	332987	CastTarget	struct sockaddr *		332846	0					
ANR	332988	UnaryOperationExpression	& addr		332846	1					
ANR	332989	UnaryOperator	&		332846	0					
ANR	332990	Identifier	addr		332846	1					
ANR	332991	Argument	sizeof ( addr )		332846	2					
ANR	332992	SizeofExpression	sizeof ( addr )		332846	0					
ANR	332993	Sizeof	sizeof		332846	0					
ANR	332994	SizeofOperand	addr		332846	1					
ANR	332995	PrimaryExpression	0		332846	1					
ANR	332996	CompoundStatement		21:64:479:479	332846	1					
ANR	332997	BreakStatement	break ;	63:3:1787:1792	332846	0	True				
ANR	332998	ElseStatement	else		332846	0					
ANR	332999	CompoundStatement		23:9:500:500	332846	0					
ANR	333000	IfStatement	if ( retries ++ == 50 )		332846	0					
ANR	333001	Condition	retries ++ == 50	65:6:1811:1825	332846	0	True				
ANR	333002	EqualityExpression	retries ++ == 50		332846	0		==			
ANR	333003	PostIncDecOperationExpression	retries ++		332846	0					
ANR	333004	Identifier	retries		332846	0					
ANR	333005	IncDec	++		332846	1					
ANR	333006	PrimaryExpression	50		332846	1					
ANR	333007	CompoundStatement		24:23:525:525	332846	1					
ANR	333008	ExpressionStatement	"perror ( ""connect()"" )"	66:4:1834:1853	332846	0	True				
ANR	333009	CallExpression	"perror ( ""connect()"" )"		332846	0					
ANR	333010	Callee	perror		332846	0					
ANR	333011	Identifier	perror		332846	0					
ANR	333012	ArgumentList	"""connect()"""		332846	1					
ANR	333013	Argument	"""connect()"""		332846	0					
ANR	333014	PrimaryExpression	"""connect()"""		332846	0					
ANR	333015	ExpressionStatement	"fprintf ( stderr , ""connect() failed\\n"" )"	67:4:1859:1896	332846	1	True				
ANR	333016	CallExpression	"fprintf ( stderr , ""connect() failed\\n"" )"		332846	0					
ANR	333017	Callee	fprintf		332846	0					
ANR	333018	Identifier	fprintf		332846	0					
ANR	333019	ArgumentList	stderr		332846	1					
ANR	333020	Argument	stderr		332846	0					
ANR	333021	Identifier	stderr		332846	0					
ANR	333022	Argument	"""connect() failed\\n"""		332846	1					
ANR	333023	PrimaryExpression	"""connect() failed\\n"""		332846	0					
ANR	333024	ExpressionStatement	exit ( 1 )	68:4:1902:1909	332846	2	True				
ANR	333025	CallExpression	exit ( 1 )		332846	0					
ANR	333026	Callee	exit		332846	0					
ANR	333027	Identifier	exit		332846	0					
ANR	333028	ArgumentList	1		332846	1					
ANR	333029	Argument	1		332846	0					
ANR	333030	PrimaryExpression	1		332846	0					
ANR	333031	ElseStatement	else		332846	0					
ANR	333032	CompoundStatement		28:10:618:618	332846	0					
ANR	333033	ExpressionStatement	"fprintf ( stderr , ""connect failed, retrying...\\n"" )"	70:4:1927:1975	332846	0	True				
ANR	333034	CallExpression	"fprintf ( stderr , ""connect failed, retrying...\\n"" )"		332846	0					
ANR	333035	Callee	fprintf		332846	0					
ANR	333036	Identifier	fprintf		332846	0					
ANR	333037	ArgumentList	stderr		332846	1					
ANR	333038	Argument	stderr		332846	0					
ANR	333039	Identifier	stderr		332846	0					
ANR	333040	Argument	"""connect failed, retrying...\\n"""		332846	1					
ANR	333041	PrimaryExpression	"""connect failed, retrying...\\n"""		332846	0					
ANR	333042	ExpressionStatement	usleep ( 100000 )	71:4:1981:1995	332846	1	True				
ANR	333043	CallExpression	usleep ( 100000 )		332846	0					
ANR	333044	Callee	usleep		332846	0					
ANR	333045	Identifier	usleep		332846	0					
ANR	333046	ArgumentList	100000		332846	1					
ANR	333047	Argument	100000		332846	0					
ANR	333048	PrimaryExpression	100000		332846	0					
ANR	333049	IfStatement	if ( retries > 0 )		332846	11					
ANR	333050	Condition	retries > 0	75:4:2034:2044	332846	0	True				
ANR	333051	RelationalExpression	retries > 0		332846	0		>			
ANR	333052	Identifier	retries		332846	0					
ANR	333053	PrimaryExpression	0		332846	1					
ANR	333054	CompoundStatement		34:17:744:744	332846	1					
ANR	333055	ExpressionStatement	"fprintf ( stderr , ""connection established.\\n"" )"	76:2:2051:2095	332846	0	True				
ANR	333056	CallExpression	"fprintf ( stderr , ""connection established.\\n"" )"		332846	0					
ANR	333057	Callee	fprintf		332846	0					
ANR	333058	Identifier	fprintf		332846	0					
ANR	333059	ArgumentList	stderr		332846	1					
ANR	333060	Argument	stderr		332846	0					
ANR	333061	Identifier	stderr		332846	0					
ANR	333062	Argument	"""connection established.\\n"""		332846	1					
ANR	333063	PrimaryExpression	"""connection established.\\n"""		332846	0					
ANR	333064	ExpressionStatement	* fd = sock	79:1:2102:2112	332846	12	True				
ANR	333065	AssignmentExpression	* fd = sock		332846	0		=			
ANR	333066	UnaryOperationExpression	* fd		332846	0					
ANR	333067	UnaryOperator	*		332846	0					
ANR	333068	Identifier	fd		332846	1					
ANR	333069	Identifier	sock		332846	1					
ANR	333070	ReturnStatement	return 0 ;	80:1:2115:2123	332846	13	True				
ANR	333071	PrimaryExpression	0		332846	0					
ANR	333072	ReturnType	int		332846	1					
ANR	333073	Identifier	openConn		332846	2					
ANR	333074	ParameterList	int * fd		332846	3					
ANR	333075	Parameter	int * fd	41:13:1293:1299	332846	0	True				
ANR	333076	ParameterType	int *		332846	0					
ANR	333077	Identifier	fd		332846	1					
ANR	333078	CFGEntryNode	ENTRY		332846		True				
ANR	333079	CFGExitNode	EXIT		332846		True				
ANR	333080	Symbol	addr . sin_family		332846						
ANR	333081	Symbol	& addr		332846						
ANR	333082	Symbol	htons		332846						
ANR	333083	Symbol	* fd		332846						
ANR	333084	Symbol	addr . sin_port		332846						
ANR	333085	Symbol	AF_INET		332846						
ANR	333086	Symbol	stderr		332846						
ANR	333087	Symbol	targetPort		332846						
ANR	333088	Symbol	targetIP		332846						
ANR	333089	Symbol	sock		332846						
ANR	333090	Symbol	retries		332846						
ANR	333091	Symbol	SOCK_STREAM		332846						
ANR	333092	Symbol	& addr . sin_addr		332846						
ANR	333093	Symbol	port		332846						
ANR	333094	Symbol	socket		332846						
ANR	333095	Symbol	addr		332846						
ANR	333096	Symbol	fd		332846						
ANR	333097	Symbol	connect		332846						
ANR	333098	Symbol	inet_aton		332846						
ANR	333099	Function	sendCmd	86:0:2150:2313							
ANR	333100	FunctionDef	"sendCmd (int fd , char * buf , int len)"		333099	0					
ANR	333101	CompoundStatement		88:0:2198:2313	333099	0					
ANR	333102	IdentifierDeclStatement	int lenSend ;	89:1:2201:2212	333099	0	True				
ANR	333103	IdentifierDecl	lenSend		333099	0					
ANR	333104	IdentifierDeclType	int		333099	0					
ANR	333105	Identifier	lenSend		333099	1					
ANR	333106	ExpressionStatement	"lenSend = send ( fd , buf , len , 0 )"	91:1:2216:2247	333099	1	True				
ANR	333107	AssignmentExpression	"lenSend = send ( fd , buf , len , 0 )"		333099	0		=			
ANR	333108	Identifier	lenSend		333099	0					
ANR	333109	CallExpression	"send ( fd , buf , len , 0 )"		333099	1					
ANR	333110	Callee	send		333099	0					
ANR	333111	Identifier	send		333099	0					
ANR	333112	ArgumentList	fd		333099	1					
ANR	333113	Argument	fd		333099	0					
ANR	333114	Identifier	fd		333099	0					
ANR	333115	Argument	buf		333099	1					
ANR	333116	Identifier	buf		333099	0					
ANR	333117	Argument	len		333099	2					
ANR	333118	Identifier	len		333099	0					
ANR	333119	Argument	0		333099	3					
ANR	333120	PrimaryExpression	0		333099	0					
ANR	333121	IfStatement	if ( lenSend != len )		333099	2					
ANR	333122	Condition	lenSend != len	92:4:2253:2266	333099	0	True				
ANR	333123	EqualityExpression	lenSend != len		333099	0		!=			
ANR	333124	Identifier	lenSend		333099	0					
ANR	333125	Identifier	len		333099	1					
ANR	333126	CompoundStatement		5:20:70:70	333099	1					
ANR	333127	ExpressionStatement	"perror ( ""sending string"" )"	93:2:2273:2297	333099	0	True				
ANR	333128	CallExpression	"perror ( ""sending string"" )"		333099	0					
ANR	333129	Callee	perror		333099	0					
ANR	333130	Identifier	perror		333099	0					
ANR	333131	ArgumentList	"""sending string"""		333099	1					
ANR	333132	Argument	"""sending string"""		333099	0					
ANR	333133	PrimaryExpression	"""sending string"""		333099	0					
ANR	333134	ExpressionStatement	exit ( 1 )	94:2:2301:2308	333099	1	True				
ANR	333135	CallExpression	exit ( 1 )		333099	0					
ANR	333136	Callee	exit		333099	0					
ANR	333137	Identifier	exit		333099	0					
ANR	333138	ArgumentList	1		333099	1					
ANR	333139	Argument	1		333099	0					
ANR	333140	PrimaryExpression	1		333099	0					
ANR	333141	ReturnType	static void		333099	1					
ANR	333142	Identifier	sendCmd		333099	2					
ANR	333143	ParameterList	"int fd , char * buf , int len"		333099	3					
ANR	333144	Parameter	int fd	87:8:2170:2175	333099	0	True				
ANR	333145	ParameterType	int		333099	0					
ANR	333146	Identifier	fd		333099	1					
ANR	333147	Parameter	char * buf	87:16:2178:2186	333099	1	True				
ANR	333148	ParameterType	char *		333099	0					
ANR	333149	Identifier	buf		333099	1					
ANR	333150	Parameter	int len	87:27:2189:2195	333099	2	True				
ANR	333151	ParameterType	int		333099	0					
ANR	333152	Identifier	len		333099	1					
ANR	333153	CFGEntryNode	ENTRY		333099		True				
ANR	333154	CFGExitNode	EXIT		333099		True				
ANR	333155	Symbol	buf		333099						
ANR	333156	Symbol	lenSend		333099						
ANR	333157	Symbol	len		333099						
ANR	333158	Symbol	send		333099						
ANR	333159	Symbol	fd		333099						
ANR	333160	Function	waitRsp	101:0:2363:2623							
ANR	333161	FunctionDef	"waitRsp (int fd , char * buf , int len)"		333160	0					
ANR	333162	CompoundStatement		103:0:2411:2623	333160	0					
ANR	333163	IdentifierDeclStatement	int ret ;	104:1:2414:2421	333160	0	True				
ANR	333164	IdentifierDecl	ret		333160	0					
ANR	333165	IdentifierDeclType	int		333160	0					
ANR	333166	Identifier	ret		333160	1					
ANR	333167	ExpressionStatement	"ret = recv ( fd , buf , len - 1 , 0 )"	106:1:2425:2456	333160	1	True				
ANR	333168	AssignmentExpression	"ret = recv ( fd , buf , len - 1 , 0 )"		333160	0		=			
ANR	333169	Identifier	ret		333160	0					
ANR	333170	CallExpression	"recv ( fd , buf , len - 1 , 0 )"		333160	1					
ANR	333171	Callee	recv		333160	0					
ANR	333172	Identifier	recv		333160	0					
ANR	333173	ArgumentList	fd		333160	1					
ANR	333174	Argument	fd		333160	0					
ANR	333175	Identifier	fd		333160	0					
ANR	333176	Argument	buf		333160	1					
ANR	333177	Identifier	buf		333160	0					
ANR	333178	Argument	len - 1		333160	2					
ANR	333179	AdditiveExpression	len - 1		333160	0		-			
ANR	333180	Identifier	len		333160	0					
ANR	333181	PrimaryExpression	1		333160	1					
ANR	333182	Argument	0		333160	3					
ANR	333183	PrimaryExpression	0		333160	0					
ANR	333184	IfStatement	if ( ret < 0 )		333160	2					
ANR	333185	Condition	ret < 0	107:4:2462:2468	333160	0	True				
ANR	333186	RelationalExpression	ret < 0		333160	0		<			
ANR	333187	Identifier	ret		333160	0					
ANR	333188	PrimaryExpression	0		333160	1					
ANR	333189	CompoundStatement		5:13:59:59	333160	1					
ANR	333190	ExpressionStatement	"perror ( ""receiving response"" )"	108:2:2475:2503	333160	0	True				
ANR	333191	CallExpression	"perror ( ""receiving response"" )"		333160	0					
ANR	333192	Callee	perror		333160	0					
ANR	333193	Identifier	perror		333160	0					
ANR	333194	ArgumentList	"""receiving response"""		333160	1					
ANR	333195	Argument	"""receiving response"""		333160	0					
ANR	333196	PrimaryExpression	"""receiving response"""		333160	0					
ANR	333197	ExpressionStatement	exit ( 1 )	109:2:2507:2514	333160	1	True				
ANR	333198	CallExpression	exit ( 1 )		333160	0					
ANR	333199	Callee	exit		333160	0					
ANR	333200	Identifier	exit		333160	0					
ANR	333201	ArgumentList	1		333160	1					
ANR	333202	Argument	1		333160	0					
ANR	333203	PrimaryExpression	1		333160	0					
ANR	333204	ExpressionStatement	buf [ ret ] = '\\0'	114:1:2606:2621	333160	3	True				
ANR	333205	AssignmentExpression	buf [ ret ] = '\\0'		333160	0		=			
ANR	333206	ArrayIndexing	buf [ ret ]		333160	0					
ANR	333207	Identifier	buf		333160	0					
ANR	333208	Identifier	ret		333160	1					
ANR	333209	PrimaryExpression	'\\0'		333160	1					
ANR	333210	ReturnType	static void		333160	1					
ANR	333211	Identifier	waitRsp		333160	2					
ANR	333212	ParameterList	"int fd , char * buf , int len"		333160	3					
ANR	333213	Parameter	int fd	102:8:2383:2388	333160	0	True				
ANR	333214	ParameterType	int		333160	0					
ANR	333215	Identifier	fd		333160	1					
ANR	333216	Parameter	char * buf	102:16:2391:2399	333160	1	True				
ANR	333217	ParameterType	char *		333160	0					
ANR	333218	Identifier	buf		333160	1					
ANR	333219	Parameter	int len	102:27:2402:2408	333160	2	True				
ANR	333220	ParameterType	int		333160	0					
ANR	333221	Identifier	len		333160	1					
ANR	333222	CFGEntryNode	ENTRY		333160		True				
ANR	333223	CFGExitNode	EXIT		333160		True				
ANR	333224	Symbol	ret		333160						
ANR	333225	Symbol	buf		333160						
ANR	333226	Symbol	* buf		333160						
ANR	333227	Symbol	recv		333160						
ANR	333228	Symbol	len		333160						
ANR	333229	Symbol	* ret		333160						
ANR	333230	Symbol	fd		333160						
ANR	333231	Function	doProcessing	120:0:2659:3021							
ANR	333232	FunctionDef	doProcessing ()		333231	0					
ANR	333233	CompoundStatement		122:0:2686:3021	333231	0					
ANR	333234	IdentifierDeclStatement	int fd ;	123:1:2689:2695	333231	0	True				
ANR	333235	IdentifierDecl	fd		333231	0					
ANR	333236	IdentifierDeclType	int		333231	0					
ANR	333237	Identifier	fd		333231	1					
ANR	333238	IdentifierDeclStatement	int len ;	124:1:2698:2705	333231	1	True				
ANR	333239	IdentifierDecl	len		333231	0					
ANR	333240	IdentifierDeclType	int		333231	0					
ANR	333241	Identifier	len		333231	1					
ANR	333242	IdentifierDeclStatement	char line [ 2048 ] ;	125:1:2708:2723	333231	2	True				
ANR	333243	IdentifierDecl	line [ 2048 ]		333231	0					
ANR	333244	IdentifierDeclType	char [ 2048 ]		333231	0					
ANR	333245	Identifier	line		333231	1					
ANR	333246	PrimaryExpression	2048		333231	2					
ANR	333247	ExpressionStatement	openConn ( & fd )	127:1:2727:2740	333231	3	True				
ANR	333248	CallExpression	openConn ( & fd )		333231	0					
ANR	333249	Callee	openConn		333231	0					
ANR	333250	Identifier	openConn		333231	0					
ANR	333251	ArgumentList	& fd		333231	1					
ANR	333252	Argument	& fd		333231	0					
ANR	333253	UnaryOperationExpression	& fd		333231	0					
ANR	333254	UnaryOperator	&		333231	0					
ANR	333255	Identifier	fd		333231	1					
ANR	333256	WhileStatement	while ( ! feof ( stdin ) )		333231	4					
ANR	333257	Condition	! feof ( stdin )	128:7:2749:2760	333231	0	True				
ANR	333258	UnaryOperationExpression	! feof ( stdin )		333231	0					
ANR	333259	UnaryOperator	!		333231	0					
ANR	333260	CallExpression	feof ( stdin )		333231	1					
ANR	333261	Callee	feof		333231	0					
ANR	333262	Identifier	feof		333231	0					
ANR	333263	ArgumentList	stdin		333231	1					
ANR	333264	Argument	stdin		333231	0					
ANR	333265	Identifier	stdin		333231	0					
ANR	333266	CompoundStatement		7:21:76:76	333231	1					
ANR	333267	IfStatement	"if ( fgets ( line , sizeof ( line ) - 1 , stdin ) == NULL )"		333231	0					
ANR	333268	Condition	"fgets ( line , sizeof ( line ) - 1 , stdin ) == NULL"	129:5:2770:2813	333231	0	True				
ANR	333269	EqualityExpression	"fgets ( line , sizeof ( line ) - 1 , stdin ) == NULL"		333231	0		==			
ANR	333270	CallExpression	"fgets ( line , sizeof ( line ) - 1 , stdin )"		333231	0					
ANR	333271	Callee	fgets		333231	0					
ANR	333272	Identifier	fgets		333231	0					
ANR	333273	ArgumentList	line		333231	1					
ANR	333274	Argument	line		333231	0					
ANR	333275	Identifier	line		333231	0					
ANR	333276	Argument	sizeof ( line ) - 1		333231	1					
ANR	333277	AdditiveExpression	sizeof ( line ) - 1		333231	0		-			
ANR	333278	SizeofExpression	sizeof ( line )		333231	0					
ANR	333279	Sizeof	sizeof		333231	0					
ANR	333280	SizeofOperand	line		333231	1					
ANR	333281	PrimaryExpression	1		333231	1					
ANR	333282	Argument	stdin		333231	2					
ANR	333283	Identifier	stdin		333231	0					
ANR	333284	Identifier	NULL		333231	1					
ANR	333285	BreakStatement	break ;	130:3:2819:2824	333231	1	True				
ANR	333286	ExpressionStatement	len = strlen ( line )	131:2:2828:2846	333231	1	True				
ANR	333287	AssignmentExpression	len = strlen ( line )		333231	0		=			
ANR	333288	Identifier	len		333231	0					
ANR	333289	CallExpression	strlen ( line )		333231	1					
ANR	333290	Callee	strlen		333231	0					
ANR	333291	Identifier	strlen		333231	0					
ANR	333292	ArgumentList	line		333231	1					
ANR	333293	Argument	line		333231	0					
ANR	333294	Identifier	line		333231	0					
ANR	333295	ExpressionStatement	"sendCmd ( fd , line , len )"	132:2:2850:2872	333231	2	True				
ANR	333296	CallExpression	"sendCmd ( fd , line , len )"		333231	0					
ANR	333297	Callee	sendCmd		333231	0					
ANR	333298	Identifier	sendCmd		333231	0					
ANR	333299	ArgumentList	fd		333231	1					
ANR	333300	Argument	fd		333231	0					
ANR	333301	Identifier	fd		333231	0					
ANR	333302	Argument	line		333231	1					
ANR	333303	Identifier	line		333231	0					
ANR	333304	Argument	len		333231	2					
ANR	333305	Identifier	len		333231	0					
ANR	333306	ExpressionStatement	"waitRsp ( fd , line , sizeof ( line ) )"	133:2:2876:2907	333231	3	True				
ANR	333307	CallExpression	"waitRsp ( fd , line , sizeof ( line ) )"		333231	0					
ANR	333308	Callee	waitRsp		333231	0					
ANR	333309	Identifier	waitRsp		333231	0					
ANR	333310	ArgumentList	fd		333231	1					
ANR	333311	Argument	fd		333231	0					
ANR	333312	Identifier	fd		333231	0					
ANR	333313	Argument	line		333231	1					
ANR	333314	Identifier	line		333231	0					
ANR	333315	Argument	sizeof ( line )		333231	2					
ANR	333316	SizeofExpression	sizeof ( line )		333231	0					
ANR	333317	Sizeof	sizeof		333231	0					
ANR	333318	SizeofOperand	line		333231	1					
ANR	333319	ExpressionStatement	"printf ( ""imdiag[%d]: %s"" , targetPort , line )"	134:2:2911:2953	333231	4	True				
ANR	333320	CallExpression	"printf ( ""imdiag[%d]: %s"" , targetPort , line )"		333231	0					
ANR	333321	Callee	printf		333231	0					
ANR	333322	Identifier	printf		333231	0					
ANR	333323	ArgumentList	"""imdiag[%d]: %s"""		333231	1					
ANR	333324	Argument	"""imdiag[%d]: %s"""		333231	0					
ANR	333325	PrimaryExpression	"""imdiag[%d]: %s"""		333231	0					
ANR	333326	Argument	targetPort		333231	1					
ANR	333327	Identifier	targetPort		333231	0					
ANR	333328	Argument	line		333231	2					
ANR	333329	Identifier	line		333231	0					
ANR	333330	IfStatement	"if ( strstr ( line , ""imdiag::error"" ) != NULL )"		333231	5					
ANR	333331	Condition	"strstr ( line , ""imdiag::error"" ) != NULL"	135:6:2961:2997	333231	0	True				
ANR	333332	EqualityExpression	"strstr ( line , ""imdiag::error"" ) != NULL"		333231	0		!=			
ANR	333333	CallExpression	"strstr ( line , ""imdiag::error"" )"		333231	0					
ANR	333334	Callee	strstr		333231	0					
ANR	333335	Identifier	strstr		333231	0					
ANR	333336	ArgumentList	line		333231	1					
ANR	333337	Argument	line		333231	0					
ANR	333338	Identifier	line		333231	0					
ANR	333339	Argument	"""imdiag::error"""		333231	1					
ANR	333340	PrimaryExpression	"""imdiag::error"""		333231	0					
ANR	333341	Identifier	NULL		333231	1					
ANR	333342	CompoundStatement		14:45:313:313	333231	1					
ANR	333343	ExpressionStatement	exit ( 1 )	136:3:3005:3012	333231	0	True				
ANR	333344	CallExpression	exit ( 1 )		333231	0					
ANR	333345	Callee	exit		333231	0					
ANR	333346	Identifier	exit		333231	0					
ANR	333347	ArgumentList	1		333231	1					
ANR	333348	Argument	1		333231	0					
ANR	333349	PrimaryExpression	1		333231	0					
ANR	333350	ReturnType	static void		333231	1					
ANR	333351	Identifier	doProcessing		333231	2					
ANR	333352	ParameterList			333231	3					
ANR	333353	CFGEntryNode	ENTRY		333231		True				
ANR	333354	CFGExitNode	EXIT		333231		True				
ANR	333355	Symbol	strlen		333231						
ANR	333356	Symbol	stdin		333231						
ANR	333357	Symbol	NULL		333231						
ANR	333358	Symbol	len		333231						
ANR	333359	Symbol	strstr		333231						
ANR	333360	Symbol	line		333231						
ANR	333361	Symbol	& fd		333231						
ANR	333362	Symbol	feof		333231						
ANR	333363	Symbol	targetPort		333231						
ANR	333364	Symbol	fd		333231						
ANR	333365	Symbol	fgets		333231						
ANR	333366	Function	main	145:0:3071:3437							
ANR	333367	FunctionDef	"main (int argc , char * argv [ ])"		333366	0					
ANR	333368	CompoundStatement		146:0:3104:3437	333366	0					
ANR	333369	IdentifierDeclStatement	int ret = 0 ;	147:1:3107:3118	333366	0	True				
ANR	333370	IdentifierDecl	ret = 0		333366	0					
ANR	333371	IdentifierDeclType	int		333366	0					
ANR	333372	Identifier	ret		333366	1					
ANR	333373	AssignmentExpression	ret = 0		333366	2		=			
ANR	333374	Identifier	ret		333366	0					
ANR	333375	PrimaryExpression	0		333366	1					
ANR	333376	IdentifierDeclStatement	int opt ;	148:1:3121:3128	333366	1	True				
ANR	333377	IdentifierDecl	opt		333366	0					
ANR	333378	IdentifierDeclType	int		333366	0					
ANR	333379	Identifier	opt		333366	1					
ANR	333380	WhileStatement	"while ( ( opt = getopt ( argc , argv , ""t:p:"" ) ) != - 1 )"		333366	2					
ANR	333381	Condition	"( opt = getopt ( argc , argv , ""t:p:"" ) ) != - 1"	150:7:3138:3177	333366	0	True				
ANR	333382	EqualityExpression	"( opt = getopt ( argc , argv , ""t:p:"" ) ) != - 1"		333366	0		!=			
ANR	333383	AssignmentExpression	"opt = getopt ( argc , argv , ""t:p:"" )"		333366	0		=			
ANR	333384	Identifier	opt		333366	0					
ANR	333385	CallExpression	"getopt ( argc , argv , ""t:p:"" )"		333366	1					
ANR	333386	Callee	getopt		333366	0					
ANR	333387	Identifier	getopt		333366	0					
ANR	333388	ArgumentList	argc		333366	1					
ANR	333389	Argument	argc		333366	0					
ANR	333390	Identifier	argc		333366	0					
ANR	333391	Argument	argv		333366	1					
ANR	333392	Identifier	argv		333366	0					
ANR	333393	Argument	"""t:p:"""		333366	2					
ANR	333394	PrimaryExpression	"""t:p:"""		333366	0					
ANR	333395	UnaryOperationExpression	- 1		333366	1					
ANR	333396	UnaryOperator	-		333366	0					
ANR	333397	PrimaryExpression	1		333366	1					
ANR	333398	CompoundStatement		5:49:75:75	333366	1					
ANR	333399	SwitchStatement	switch ( opt )		333366	0					
ANR	333400	Condition	opt	151:10:3192:3194	333366	0	True				
ANR	333401	Identifier	opt		333366	0					
ANR	333402	CompoundStatement		6:15:92:92	333366	1					
ANR	333403	Label	case 't' :	152:2:3201:3209	333366	0	True				
ANR	333404	ExpressionStatement	targetIP = optarg	152:12:3211:3228	333366	1	True				
ANR	333405	AssignmentExpression	targetIP = optarg		333366	0		=			
ANR	333406	Identifier	targetIP		333366	0					
ANR	333407	Identifier	optarg		333366	1					
ANR	333408	BreakStatement	break ;	153:4:3234:3239	333366	2	True				
ANR	333409	Label	case 'p' :	154:2:3243:3251	333366	3	True				
ANR	333410	ExpressionStatement	targetPort = atoi ( optarg )	154:12:3253:3278	333366	4	True				
ANR	333411	AssignmentExpression	targetPort = atoi ( optarg )		333366	0		=			
ANR	333412	Identifier	targetPort		333366	0					
ANR	333413	CallExpression	atoi ( optarg )		333366	1					
ANR	333414	Callee	atoi		333366	0					
ANR	333415	Identifier	atoi		333366	0					
ANR	333416	ArgumentList	optarg		333366	1					
ANR	333417	Argument	optarg		333366	0					
ANR	333418	Identifier	optarg		333366	0					
ANR	333419	BreakStatement	break ;	155:4:3284:3289	333366	5	True				
ANR	333420	Label	default :	156:2:3293:3300	333366	6	True				
ANR	333421	Identifier	default		333366	0					
ANR	333422	ExpressionStatement	"printf ( ""invalid option '%c' or value missing - terminating...\\n"" , opt )"	156:11:3302:3372	333366	7	True				
ANR	333423	CallExpression	"printf ( ""invalid option '%c' or value missing - terminating...\\n"" , opt )"		333366	0					
ANR	333424	Callee	printf		333366	0					
ANR	333425	Identifier	printf		333366	0					
ANR	333426	ArgumentList	"""invalid option '%c' or value missing - terminating...\\n"""		333366	1					
ANR	333427	Argument	"""invalid option '%c' or value missing - terminating...\\n"""		333366	0					
ANR	333428	PrimaryExpression	"""invalid option '%c' or value missing - terminating...\\n"""		333366	0					
ANR	333429	Argument	opt		333366	1					
ANR	333430	Identifier	opt		333366	0					
ANR	333431	ExpressionStatement	exit ( 1 )	157:4:3378:3386	333366	8	True				
ANR	333432	CallExpression	exit ( 1 )		333366	0					
ANR	333433	Callee	exit		333366	0					
ANR	333434	Identifier	exit		333366	0					
ANR	333435	ArgumentList	1		333366	1					
ANR	333436	Argument	1		333366	0					
ANR	333437	PrimaryExpression	1		333366	0					
ANR	333438	BreakStatement	break ;	158:4:3392:3397	333366	9	True				
ANR	333439	ExpressionStatement	doProcessing ( )	162:1:3408:3422	333366	3	True				
ANR	333440	CallExpression	doProcessing ( )		333366	0					
ANR	333441	Callee	doProcessing		333366	0					
ANR	333442	Identifier	doProcessing		333366	0					
ANR	333443	ArgumentList			333366	1					
ANR	333444	ExpressionStatement	exit ( ret )	164:1:3426:3435	333366	4	True				
ANR	333445	CallExpression	exit ( ret )		333366	0					
ANR	333446	Callee	exit		333366	0					
ANR	333447	Identifier	exit		333366	0					
ANR	333448	ArgumentList	ret		333366	1					
ANR	333449	Argument	ret		333366	0					
ANR	333450	Identifier	ret		333366	0					
ANR	333451	ReturnType	int		333366	1					
ANR	333452	Identifier	main		333366	2					
ANR	333453	ParameterList	"int argc , char * argv [ ]"		333366	3					
ANR	333454	Parameter	int argc	145:9:3080:3087	333366	0	True				
ANR	333455	ParameterType	int		333366	0					
ANR	333456	Identifier	argc		333366	1					
ANR	333457	Parameter	char * argv [ ]	145:19:3090:3101	333366	1	True				
ANR	333458	ParameterType	char * [ ]		333366	0					
ANR	333459	Identifier	argv		333366	1					
ANR	333460	CFGEntryNode	ENTRY		333366		True				
ANR	333461	CFGExitNode	EXIT		333366		True				
ANR	333462	Symbol	argc		333366						
ANR	333463	Symbol	ret		333366						
ANR	333464	Symbol	targetIP		333366						
ANR	333465	Symbol	atoi		333366						
ANR	333466	Symbol	opt		333366						
ANR	333467	Symbol	getopt		333366						
ANR	333468	Symbol	optarg		333366						
ANR	333469	Symbol	argv		333366						
ANR	333470	Symbol	targetPort		333366						
