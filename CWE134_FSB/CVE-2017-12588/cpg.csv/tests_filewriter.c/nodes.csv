command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	333471	File	data/converged/CVE-2017-12588_rsyslog/tests_filewriter.c								
ANR	333472	ClassDef	line	42:0:1586:1645							
ANR	333473	DeclStmt									
ANR	333474	Decl							struct line	struct line *	next
ANR	333475	DeclStmt									
ANR	333476	Decl							char	char *	ln
ANR	333477	DeclStmt									
ANR	333478	Decl							line	line *	root
ANR	333479	Decl							line	line *	tail
ANR	333480	DeclStmt									
ANR	333481	Decl							FILE	FILE *	fpIn
ANR	333482	DeclStmt									
ANR	333483	Decl							FILE	FILE *	fpOut
ANR	333484	DeclStmt									
ANR	333485	Decl							long long	long long	nCopies
ANR	333486	DeclStmt									
ANR	333487	Decl							int	int	linenbrs
ANR	333488	DeclStmt									
ANR	333489	Decl							int	int	waitusecs
ANR	333490	DeclStmt									
ANR	333491	Decl							int	int	batchsize
ANR	333492	Function	readFile	57:0:1862:2490							
ANR	333493	FunctionDef	readFile ()		333492	0					
ANR	333494	CompoundStatement		59:0:1885:2490	333492	0					
ANR	333495	IdentifierDeclStatement	char * r ;	60:1:1888:1895	333492	0	True				
ANR	333496	IdentifierDecl	* r		333492	0					
ANR	333497	IdentifierDeclType	char *		333492	0					
ANR	333498	Identifier	r		333492	1					
ANR	333499	IdentifierDeclStatement	char lnBuf [ 10240 ] ;	61:1:1898:1915	333492	1	True				
ANR	333500	IdentifierDecl	lnBuf [ 10240 ]		333492	0					
ANR	333501	IdentifierDeclType	char [ 10240 ]		333492	0					
ANR	333502	Identifier	lnBuf		333492	1					
ANR	333503	PrimaryExpression	10240		333492	2					
ANR	333504	IdentifierDeclStatement	struct line * node ;	62:1:1918:1935	333492	2	True				
ANR	333505	IdentifierDecl	* node		333492	0					
ANR	333506	IdentifierDeclType	struct line *		333492	0					
ANR	333507	Identifier	node		333492	1					
ANR	333508	ExpressionStatement	root = tail = NULL	64:1:1939:1957	333492	3	True				
ANR	333509	AssignmentExpression	root = tail = NULL		333492	0		=			
ANR	333510	Identifier	root		333492	0					
ANR	333511	AssignmentExpression	tail = NULL		333492	1		=			
ANR	333512	Identifier	tail		333492	0					
ANR	333513	Identifier	NULL		333492	1					
ANR	333514	ExpressionStatement	"r = fgets ( lnBuf , sizeof ( lnBuf ) , fpIn )"	65:1:1960:1997	333492	4	True				
ANR	333515	AssignmentExpression	"r = fgets ( lnBuf , sizeof ( lnBuf ) , fpIn )"		333492	0		=			
ANR	333516	Identifier	r		333492	0					
ANR	333517	CallExpression	"fgets ( lnBuf , sizeof ( lnBuf ) , fpIn )"		333492	1					
ANR	333518	Callee	fgets		333492	0					
ANR	333519	Identifier	fgets		333492	0					
ANR	333520	ArgumentList	lnBuf		333492	1					
ANR	333521	Argument	lnBuf		333492	0					
ANR	333522	Identifier	lnBuf		333492	0					
ANR	333523	Argument	sizeof ( lnBuf )		333492	1					
ANR	333524	SizeofExpression	sizeof ( lnBuf )		333492	0					
ANR	333525	Sizeof	sizeof		333492	0					
ANR	333526	SizeofOperand	lnBuf		333492	1					
ANR	333527	Argument	fpIn		333492	2					
ANR	333528	Identifier	fpIn		333492	0					
ANR	333529	WhileStatement	while ( r != NULL )		333492	5					
ANR	333530	Condition	r != NULL	66:7:2006:2014	333492	0	True				
ANR	333531	EqualityExpression	r != NULL		333492	0		!=			
ANR	333532	Identifier	r		333492	0					
ANR	333533	Identifier	NULL		333492	1					
ANR	333534	CompoundStatement		8:18:131:131	333492	1					
ANR	333535	ExpressionStatement	node = malloc ( sizeof ( struct line ) )	67:2:2021:2055	333492	0	True				
ANR	333536	AssignmentExpression	node = malloc ( sizeof ( struct line ) )		333492	0		=			
ANR	333537	Identifier	node		333492	0					
ANR	333538	CallExpression	malloc ( sizeof ( struct line ) )		333492	1					
ANR	333539	Callee	malloc		333492	0					
ANR	333540	Identifier	malloc		333492	0					
ANR	333541	ArgumentList	sizeof ( struct line )		333492	1					
ANR	333542	Argument	sizeof ( struct line )		333492	0					
ANR	333543	SizeofExpression	sizeof ( struct line )		333492	0					
ANR	333544	Sizeof	sizeof		333492	0					
ANR	333545	SizeofOperand	struct line		333492	1					
ANR	333546	IfStatement	if ( node == NULL )		333492	1					
ANR	333547	Condition	node == NULL	68:5:2062:2073	333492	0	True				
ANR	333548	EqualityExpression	node == NULL		333492	0		==			
ANR	333549	Identifier	node		333492	0					
ANR	333550	Identifier	NULL		333492	1					
ANR	333551	CompoundStatement		10:19:190:190	333492	1					
ANR	333552	ExpressionStatement	"perror ( ""malloc node"" )"	69:3:2081:2102	333492	0	True				
ANR	333553	CallExpression	"perror ( ""malloc node"" )"		333492	0					
ANR	333554	Callee	perror		333492	0					
ANR	333555	Identifier	perror		333492	0					
ANR	333556	ArgumentList	"""malloc node"""		333492	1					
ANR	333557	Argument	"""malloc node"""		333492	0					
ANR	333558	PrimaryExpression	"""malloc node"""		333492	0					
ANR	333559	ExpressionStatement	exit ( 1 )	70:3:2107:2114	333492	1	True				
ANR	333560	CallExpression	exit ( 1 )		333492	0					
ANR	333561	Callee	exit		333492	0					
ANR	333562	Identifier	exit		333492	0					
ANR	333563	ArgumentList	1		333492	1					
ANR	333564	Argument	1		333492	0					
ANR	333565	PrimaryExpression	1		333492	0					
ANR	333566	ExpressionStatement	node -> next = NULL	72:2:2122:2139	333492	2	True				
ANR	333567	AssignmentExpression	node -> next = NULL		333492	0		=			
ANR	333568	PtrMemberAccess	node -> next		333492	0					
ANR	333569	Identifier	node		333492	0					
ANR	333570	Identifier	next		333492	1					
ANR	333571	Identifier	NULL		333492	1					
ANR	333572	ExpressionStatement	node -> ln = strdup ( lnBuf )	73:2:2143:2167	333492	3	True				
ANR	333573	AssignmentExpression	node -> ln = strdup ( lnBuf )		333492	0		=			
ANR	333574	PtrMemberAccess	node -> ln		333492	0					
ANR	333575	Identifier	node		333492	0					
ANR	333576	Identifier	ln		333492	1					
ANR	333577	CallExpression	strdup ( lnBuf )		333492	1					
ANR	333578	Callee	strdup		333492	0					
ANR	333579	Identifier	strdup		333492	0					
ANR	333580	ArgumentList	lnBuf		333492	1					
ANR	333581	Argument	lnBuf		333492	0					
ANR	333582	Identifier	lnBuf		333492	0					
ANR	333583	IfStatement	if ( node -> ln == NULL )		333492	4					
ANR	333584	Condition	node -> ln == NULL	74:5:2174:2189	333492	0	True				
ANR	333585	EqualityExpression	node -> ln == NULL		333492	0		==			
ANR	333586	PtrMemberAccess	node -> ln		333492	0					
ANR	333587	Identifier	node		333492	0					
ANR	333588	Identifier	ln		333492	1					
ANR	333589	Identifier	NULL		333492	1					
ANR	333590	CompoundStatement		16:23:306:306	333492	1					
ANR	333591	ExpressionStatement	"perror ( ""malloc node"" )"	75:3:2197:2218	333492	0	True				
ANR	333592	CallExpression	"perror ( ""malloc node"" )"		333492	0					
ANR	333593	Callee	perror		333492	0					
ANR	333594	Identifier	perror		333492	0					
ANR	333595	ArgumentList	"""malloc node"""		333492	1					
ANR	333596	Argument	"""malloc node"""		333492	0					
ANR	333597	PrimaryExpression	"""malloc node"""		333492	0					
ANR	333598	ExpressionStatement	exit ( 1 )	76:3:2223:2230	333492	1	True				
ANR	333599	CallExpression	exit ( 1 )		333492	0					
ANR	333600	Callee	exit		333492	0					
ANR	333601	Identifier	exit		333492	0					
ANR	333602	ArgumentList	1		333492	1					
ANR	333603	Argument	1		333492	0					
ANR	333604	PrimaryExpression	1		333492	0					
ANR	333605	IfStatement	if ( tail == NULL )		333492	5					
ANR	333606	Condition	tail == NULL	78:5:2241:2252	333492	0	True				
ANR	333607	EqualityExpression	tail == NULL		333492	0		==			
ANR	333608	Identifier	tail		333492	0					
ANR	333609	Identifier	NULL		333492	1					
ANR	333610	CompoundStatement		20:19:369:369	333492	1					
ANR	333611	ExpressionStatement	tail = root = node	79:3:2260:2278	333492	0	True				
ANR	333612	AssignmentExpression	tail = root = node		333492	0		=			
ANR	333613	Identifier	tail		333492	0					
ANR	333614	AssignmentExpression	root = node		333492	1		=			
ANR	333615	Identifier	root		333492	0					
ANR	333616	Identifier	node		333492	1					
ANR	333617	ElseStatement	else		333492	0					
ANR	333618	CompoundStatement		22:9:403:403	333492	0					
ANR	333619	ExpressionStatement	tail -> next = node	81:3:2294:2311	333492	0	True				
ANR	333620	AssignmentExpression	tail -> next = node		333492	0		=			
ANR	333621	PtrMemberAccess	tail -> next		333492	0					
ANR	333622	Identifier	tail		333492	0					
ANR	333623	Identifier	next		333492	1					
ANR	333624	Identifier	node		333492	1					
ANR	333625	ExpressionStatement	tail = node	82:3:2316:2327	333492	1	True				
ANR	333626	AssignmentExpression	tail = node		333492	0		=			
ANR	333627	Identifier	tail		333492	0					
ANR	333628	Identifier	node		333492	1					
ANR	333629	ExpressionStatement	"r = fgets ( lnBuf , sizeof ( lnBuf ) , fpIn )"	84:2:2335:2372	333492	6	True				
ANR	333630	AssignmentExpression	"r = fgets ( lnBuf , sizeof ( lnBuf ) , fpIn )"		333492	0		=			
ANR	333631	Identifier	r		333492	0					
ANR	333632	CallExpression	"fgets ( lnBuf , sizeof ( lnBuf ) , fpIn )"		333492	1					
ANR	333633	Callee	fgets		333492	0					
ANR	333634	Identifier	fgets		333492	0					
ANR	333635	ArgumentList	lnBuf		333492	1					
ANR	333636	Argument	lnBuf		333492	0					
ANR	333637	Identifier	lnBuf		333492	0					
ANR	333638	Argument	sizeof ( lnBuf )		333492	1					
ANR	333639	SizeofExpression	sizeof ( lnBuf )		333492	0					
ANR	333640	Sizeof	sizeof		333492	0					
ANR	333641	SizeofOperand	lnBuf		333492	1					
ANR	333642	Argument	fpIn		333492	2					
ANR	333643	Identifier	fpIn		333492	0					
ANR	333644	IfStatement	if ( ! feof ( fpIn ) )		333492	6					
ANR	333645	Condition	! feof ( fpIn )	86:4:2381:2391	333492	0	True				
ANR	333646	UnaryOperationExpression	! feof ( fpIn )		333492	0					
ANR	333647	UnaryOperator	!		333492	0					
ANR	333648	CallExpression	feof ( fpIn )		333492	1					
ANR	333649	Callee	feof		333492	0					
ANR	333650	Identifier	feof		333492	0					
ANR	333651	ArgumentList	fpIn		333492	1					
ANR	333652	Argument	fpIn		333492	0					
ANR	333653	Identifier	fpIn		333492	0					
ANR	333654	CompoundStatement		28:17:508:508	333492	1					
ANR	333655	ExpressionStatement	"perror ( ""fgets"" )"	87:2:2398:2413	333492	0	True				
ANR	333656	CallExpression	"perror ( ""fgets"" )"		333492	0					
ANR	333657	Callee	perror		333492	0					
ANR	333658	Identifier	perror		333492	0					
ANR	333659	ArgumentList	"""fgets"""		333492	1					
ANR	333660	Argument	"""fgets"""		333492	0					
ANR	333661	PrimaryExpression	"""fgets"""		333492	0					
ANR	333662	ExpressionStatement	"fprintf ( stderr , ""end of read loop, but not end of file!"" )"	88:2:2417:2474	333492	1	True				
ANR	333663	CallExpression	"fprintf ( stderr , ""end of read loop, but not end of file!"" )"		333492	0					
ANR	333664	Callee	fprintf		333492	0					
ANR	333665	Identifier	fprintf		333492	0					
ANR	333666	ArgumentList	stderr		333492	1					
ANR	333667	Argument	stderr		333492	0					
ANR	333668	Identifier	stderr		333492	0					
ANR	333669	Argument	"""end of read loop, but not end of file!"""		333492	1					
ANR	333670	PrimaryExpression	"""end of read loop, but not end of file!"""		333492	0					
ANR	333671	ExpressionStatement	exit ( 1 )	89:2:2478:2485	333492	2	True				
ANR	333672	CallExpression	exit ( 1 )		333492	0					
ANR	333673	Callee	exit		333492	0					
ANR	333674	Identifier	exit		333492	0					
ANR	333675	ArgumentList	1		333492	1					
ANR	333676	Argument	1		333492	0					
ANR	333677	PrimaryExpression	1		333492	0					
ANR	333678	ReturnType	static void		333492	1					
ANR	333679	Identifier	readFile		333492	2					
ANR	333680	ParameterList			333492	3					
ANR	333681	CFGEntryNode	ENTRY		333492		True				
ANR	333682	CFGExitNode	EXIT		333492		True				
ANR	333683	Symbol	malloc		333492						
ANR	333684	Symbol	* tail		333492						
ANR	333685	Symbol	NULL		333492						
ANR	333686	Symbol	node -> ln		333492						
ANR	333687	Symbol	tail		333492						
ANR	333688	Symbol	node -> next		333492						
ANR	333689	Symbol	stderr		333492						
ANR	333690	Symbol	fgets		333492						
ANR	333691	Symbol	node		333492						
ANR	333692	Symbol	r		333492						
ANR	333693	Symbol	lnBuf		333492						
ANR	333694	Symbol	root		333492						
ANR	333695	Symbol	tail -> next		333492						
ANR	333696	Symbol	feof		333492						
ANR	333697	Symbol	* node		333492						
ANR	333698	Symbol	strdup		333492						
ANR	333699	Symbol	fpIn		333492						
ANR	333700	Function	genCopies	94:0:2494:2944							
ANR	333701	FunctionDef	genCopies ()		333700	0					
ANR	333702	CompoundStatement		96:0:2518:2944	333700	0					
ANR	333703	IdentifierDeclStatement	long long i ;	97:1:2521:2532	333700	0	True				
ANR	333704	IdentifierDecl	i		333700	0					
ANR	333705	IdentifierDeclType	long long		333700	0					
ANR	333706	Identifier	i		333700	1					
ANR	333707	Statement	long	98:1:2535:2538	333700	1	True				
ANR	333708	Statement	long	98:6:2540:2543	333700	2	True				
ANR	333709	IdentifierDeclStatement	unsigned lnnbr ;	98:11:2545:2559	333700	3	True				
ANR	333710	IdentifierDecl	lnnbr		333700	0					
ANR	333711	IdentifierDeclType	unsigned		333700	0					
ANR	333712	Identifier	lnnbr		333700	1					
ANR	333713	IdentifierDeclStatement	struct line * node ;	99:1:2562:2579	333700	4	True				
ANR	333714	IdentifierDecl	* node		333700	0					
ANR	333715	IdentifierDeclType	struct line *		333700	0					
ANR	333716	Identifier	node		333700	1					
ANR	333717	ExpressionStatement	lnnbr = 1	101:1:2583:2592	333700	5	True				
ANR	333718	AssignmentExpression	lnnbr = 1		333700	0		=			
ANR	333719	Identifier	lnnbr		333700	0					
ANR	333720	PrimaryExpression	1		333700	1					
ANR	333721	ForStatement	for ( i = 0 ; i < nCopies ; ++ i )		333700	6					
ANR	333722	ForInit	i = 0 ;	102:5:2599:2605	333700	0	True				
ANR	333723	AssignmentExpression	i = 0		333700	0		=			
ANR	333724	Identifier	i		333700	0					
ANR	333725	PrimaryExpression	0		333700	1					
ANR	333726	Condition	i < nCopies	102:13:2607:2617	333700	1	True				
ANR	333727	RelationalExpression	i < nCopies		333700	0		<			
ANR	333728	Identifier	i		333700	0					
ANR	333729	Identifier	nCopies		333700	1					
ANR	333730	UnaryExpression	++ i	102:27:2621:2623	333700	2	True				
ANR	333731	IncDec	++		333700	0					
ANR	333732	Identifier	i		333700	1					
ANR	333733	CompoundStatement		7:32:107:107	333700	3					
ANR	333734	IfStatement	if ( i % 10000 == 0 )		333700	0					
ANR	333735	Condition	i % 10000 == 0	103:5:2633:2646	333700	0	True				
ANR	333736	EqualityExpression	i % 10000 == 0		333700	0		==			
ANR	333737	MultiplicativeExpression	i % 10000		333700	0		%			
ANR	333738	Identifier	i		333700	0					
ANR	333739	PrimaryExpression	10000		333700	1					
ANR	333740	PrimaryExpression	0		333700	1					
ANR	333741	ExpressionStatement	"fprintf ( stderr , ""copyrun %d\\n"" , i )"	104:3:2652:2686	333700	1	True				
ANR	333742	CallExpression	"fprintf ( stderr , ""copyrun %d\\n"" , i )"		333700	0					
ANR	333743	Callee	fprintf		333700	0					
ANR	333744	Identifier	fprintf		333700	0					
ANR	333745	ArgumentList	stderr		333700	1					
ANR	333746	Argument	stderr		333700	0					
ANR	333747	Identifier	stderr		333700	0					
ANR	333748	Argument	"""copyrun %d\\n"""		333700	1					
ANR	333749	PrimaryExpression	"""copyrun %d\\n"""		333700	0					
ANR	333750	Argument	i		333700	2					
ANR	333751	Identifier	i		333700	0					
ANR	333752	IfStatement	if ( waitusecs && ( i % batchsize == 0 ) )		333700	1					
ANR	333753	Condition	waitusecs && ( i % batchsize == 0 )	105:5:2693:2725	333700	0	True				
ANR	333754	AndExpression	waitusecs && ( i % batchsize == 0 )		333700	0		&&			
ANR	333755	Identifier	waitusecs		333700	0					
ANR	333756	EqualityExpression	i % batchsize == 0		333700	1		==			
ANR	333757	MultiplicativeExpression	i % batchsize		333700	0		%			
ANR	333758	Identifier	i		333700	0					
ANR	333759	Identifier	batchsize		333700	1					
ANR	333760	PrimaryExpression	0		333700	1					
ANR	333761	CompoundStatement		10:40:209:209	333700	1					
ANR	333762	ExpressionStatement	usleep ( waitusecs )	106:3:2733:2750	333700	0	True				
ANR	333763	CallExpression	usleep ( waitusecs )		333700	0					
ANR	333764	Callee	usleep		333700	0					
ANR	333765	Identifier	usleep		333700	0					
ANR	333766	ArgumentList	waitusecs		333700	1					
ANR	333767	Argument	waitusecs		333700	0					
ANR	333768	Identifier	waitusecs		333700	0					
ANR	333769	ForStatement	for ( node = root ; node != NULL ; node = node -> next )		333700	2					
ANR	333770	ForInit	node = root ;	108:6:2762:2774	333700	0	True				
ANR	333771	AssignmentExpression	node = root		333700	0		=			
ANR	333772	Identifier	node		333700	0					
ANR	333773	Identifier	root		333700	1					
ANR	333774	Condition	node != NULL	108:20:2776:2787	333700	1	True				
ANR	333775	EqualityExpression	node != NULL		333700	0		!=			
ANR	333776	Identifier	node		333700	0					
ANR	333777	Identifier	NULL		333700	1					
ANR	333778	AssignmentExpression	node = node -> next	108:35:2791:2807	333700	2	True	=			
ANR	333779	Identifier	node		333700	0					
ANR	333780	PtrMemberAccess	node -> next		333700	1					
ANR	333781	Identifier	node		333700	0					
ANR	333782	Identifier	next		333700	1					
ANR	333783	CompoundStatement		13:54:291:291	333700	3					
ANR	333784	IfStatement	if ( linenbrs )		333700	0					
ANR	333785	Condition	linenbrs	109:6:2818:2825	333700	0	True				
ANR	333786	Identifier	linenbrs		333700	0					
ANR	333787	ExpressionStatement	"fprintf ( fpOut , ""%12.12llu:%s"" , lnnbr , node -> ln )"	110:4:2832:2879	333700	1	True				
ANR	333788	CallExpression	"fprintf ( fpOut , ""%12.12llu:%s"" , lnnbr , node -> ln )"		333700	0					
ANR	333789	Callee	fprintf		333700	0					
ANR	333790	Identifier	fprintf		333700	0					
ANR	333791	ArgumentList	fpOut		333700	1					
ANR	333792	Argument	fpOut		333700	0					
ANR	333793	Identifier	fpOut		333700	0					
ANR	333794	Argument	"""%12.12llu:%s"""		333700	1					
ANR	333795	PrimaryExpression	"""%12.12llu:%s"""		333700	0					
ANR	333796	Argument	lnnbr		333700	2					
ANR	333797	Identifier	lnnbr		333700	0					
ANR	333798	Argument	node -> ln		333700	3					
ANR	333799	PtrMemberAccess	node -> ln		333700	0					
ANR	333800	Identifier	node		333700	0					
ANR	333801	Identifier	ln		333700	1					
ANR	333802	ElseStatement	else		333700	0					
ANR	333803	ExpressionStatement	"fprintf ( fpOut , ""%s"" , node -> ln )"	112:4:2893:2923	333700	0	True				
ANR	333804	CallExpression	"fprintf ( fpOut , ""%s"" , node -> ln )"		333700	0					
ANR	333805	Callee	fprintf		333700	0					
ANR	333806	Identifier	fprintf		333700	0					
ANR	333807	ArgumentList	fpOut		333700	1					
ANR	333808	Argument	fpOut		333700	0					
ANR	333809	Identifier	fpOut		333700	0					
ANR	333810	Argument	"""%s"""		333700	1					
ANR	333811	PrimaryExpression	"""%s"""		333700	0					
ANR	333812	Argument	node -> ln		333700	2					
ANR	333813	PtrMemberAccess	node -> ln		333700	0					
ANR	333814	Identifier	node		333700	0					
ANR	333815	Identifier	ln		333700	1					
ANR	333816	ExpressionStatement	++ lnnbr	113:3:2928:2935	333700	1	True				
ANR	333817	UnaryExpression	++ lnnbr		333700	0					
ANR	333818	IncDec	++		333700	0					
ANR	333819	Identifier	lnnbr		333700	1					
ANR	333820	ReturnType	static void		333700	1					
ANR	333821	Identifier	genCopies		333700	2					
ANR	333822	ParameterList			333700	3					
ANR	333823	CFGEntryNode	ENTRY		333700		True				
ANR	333824	CFGExitNode	EXIT		333700		True				
ANR	333825	Symbol	NULL		333700						
ANR	333826	Symbol	node -> ln		333700						
ANR	333827	Symbol	i		333700						
ANR	333828	Symbol	waitusecs		333700						
ANR	333829	Symbol	node -> next		333700						
ANR	333830	Symbol	stderr		333700						
ANR	333831	Symbol	linenbrs		333700						
ANR	333832	Symbol	batchsize		333700						
ANR	333833	Symbol	node		333700						
ANR	333834	Symbol	nCopies		333700						
ANR	333835	Symbol	fpOut		333700						
ANR	333836	Symbol	root		333700						
ANR	333837	Symbol	lnnbr		333700						
ANR	333838	Symbol	* node		333700						
ANR	333839	Function	main	118:0:2947:3681							
ANR	333840	FunctionDef	"main (int argc , char * argv [ ])"		333839	0					
ANR	333841	CompoundStatement		119:0:2981:3681	333839	0					
ANR	333842	IdentifierDeclStatement	int opt ;	120:1:2984:2991	333839	0	True				
ANR	333843	IdentifierDecl	opt		333839	0					
ANR	333844	IdentifierDeclType	int		333839	0					
ANR	333845	Identifier	opt		333839	1					
ANR	333846	ExpressionStatement	fpIn = stdin	121:1:2994:3006	333839	1	True				
ANR	333847	AssignmentExpression	fpIn = stdin		333839	0		=			
ANR	333848	Identifier	fpIn		333839	0					
ANR	333849	Identifier	stdin		333839	1					
ANR	333850	ExpressionStatement	fpOut = stdout	122:1:3009:3023	333839	2	True				
ANR	333851	AssignmentExpression	fpOut = stdout		333839	0		=			
ANR	333852	Identifier	fpOut		333839	0					
ANR	333853	Identifier	stdout		333839	1					
ANR	333854	WhileStatement	"while ( ( opt = getopt ( argc , argv , ""i:o:c:nw:W:"" ) ) != - 1 )"		333839	3					
ANR	333855	Condition	"( opt = getopt ( argc , argv , ""i:o:c:nw:W:"" ) ) != - 1"	124:7:3033:3079	333839	0	True				
ANR	333856	EqualityExpression	"( opt = getopt ( argc , argv , ""i:o:c:nw:W:"" ) ) != - 1"		333839	0		!=			
ANR	333857	AssignmentExpression	"opt = getopt ( argc , argv , ""i:o:c:nw:W:"" )"		333839	0		=			
ANR	333858	Identifier	opt		333839	0					
ANR	333859	CallExpression	"getopt ( argc , argv , ""i:o:c:nw:W:"" )"		333839	1					
ANR	333860	Callee	getopt		333839	0					
ANR	333861	Identifier	getopt		333839	0					
ANR	333862	ArgumentList	argc		333839	1					
ANR	333863	Argument	argc		333839	0					
ANR	333864	Identifier	argc		333839	0					
ANR	333865	Argument	argv		333839	1					
ANR	333866	Identifier	argv		333839	0					
ANR	333867	Argument	"""i:o:c:nw:W:"""		333839	2					
ANR	333868	PrimaryExpression	"""i:o:c:nw:W:"""		333839	0					
ANR	333869	UnaryOperationExpression	- 1		333839	1					
ANR	333870	UnaryOperator	-		333839	0					
ANR	333871	PrimaryExpression	1		333839	1					
ANR	333872	CompoundStatement		6:56:100:100	333839	1					
ANR	333873	SwitchStatement	switch ( opt )		333839	0					
ANR	333874	Condition	opt	125:10:3094:3096	333839	0	True				
ANR	333875	Identifier	opt		333839	0					
ANR	333876	CompoundStatement		7:15:117:117	333839	1					
ANR	333877	Label	case 'i' :	126:2:3103:3111	333839	0	True				
ANR	333878	IfStatement	"if ( ( fpIn = fopen ( optarg , ""r"" ) ) == NULL )"		333839	1					
ANR	333879	Condition	"( fpIn = fopen ( optarg , ""r"" ) ) == NULL"	127:6:3136:3170	333839	0	True				
ANR	333880	EqualityExpression	"( fpIn = fopen ( optarg , ""r"" ) ) == NULL"		333839	0		==			
ANR	333881	AssignmentExpression	"fpIn = fopen ( optarg , ""r"" )"		333839	0		=			
ANR	333882	Identifier	fpIn		333839	0					
ANR	333883	CallExpression	"fopen ( optarg , ""r"" )"		333839	1					
ANR	333884	Callee	fopen		333839	0					
ANR	333885	Identifier	fopen		333839	0					
ANR	333886	ArgumentList	optarg		333839	1					
ANR	333887	Argument	optarg		333839	0					
ANR	333888	Identifier	optarg		333839	0					
ANR	333889	Argument	"""r"""		333839	1					
ANR	333890	PrimaryExpression	"""r"""		333839	0					
ANR	333891	Identifier	NULL		333839	1					
ANR	333892	CompoundStatement		9:43:191:191	333839	1					
ANR	333893	ExpressionStatement	perror ( optarg )	128:4:3179:3193	333839	0	True				
ANR	333894	CallExpression	perror ( optarg )		333839	0					
ANR	333895	Callee	perror		333839	0					
ANR	333896	Identifier	perror		333839	0					
ANR	333897	ArgumentList	optarg		333839	1					
ANR	333898	Argument	optarg		333839	0					
ANR	333899	Identifier	optarg		333839	0					
ANR	333900	ExpressionStatement	exit ( 1 )	129:4:3199:3206	333839	1	True				
ANR	333901	CallExpression	exit ( 1 )		333839	0					
ANR	333902	Callee	exit		333839	0					
ANR	333903	Identifier	exit		333839	0					
ANR	333904	ArgumentList	1		333839	1					
ANR	333905	Argument	1		333839	0					
ANR	333906	PrimaryExpression	1		333839	0					
ANR	333907	BreakStatement	break ;	131:3:3216:3221	333839	2	True				
ANR	333908	Label	case 'o' :	132:2:3225:3233	333839	3	True				
ANR	333909	IfStatement	"if ( ( fpOut = fopen ( optarg , ""w"" ) ) == NULL )"		333839	4					
ANR	333910	Condition	"( fpOut = fopen ( optarg , ""w"" ) ) == NULL"	133:6:3259:3294	333839	0	True				
ANR	333911	EqualityExpression	"( fpOut = fopen ( optarg , ""w"" ) ) == NULL"		333839	0		==			
ANR	333912	AssignmentExpression	"fpOut = fopen ( optarg , ""w"" )"		333839	0		=			
ANR	333913	Identifier	fpOut		333839	0					
ANR	333914	CallExpression	"fopen ( optarg , ""w"" )"		333839	1					
ANR	333915	Callee	fopen		333839	0					
ANR	333916	Identifier	fopen		333839	0					
ANR	333917	ArgumentList	optarg		333839	1					
ANR	333918	Argument	optarg		333839	0					
ANR	333919	Identifier	optarg		333839	0					
ANR	333920	Argument	"""w"""		333839	1					
ANR	333921	PrimaryExpression	"""w"""		333839	0					
ANR	333922	Identifier	NULL		333839	1					
ANR	333923	CompoundStatement		15:44:315:315	333839	1					
ANR	333924	ExpressionStatement	perror ( optarg )	134:4:3303:3317	333839	0	True				
ANR	333925	CallExpression	perror ( optarg )		333839	0					
ANR	333926	Callee	perror		333839	0					
ANR	333927	Identifier	perror		333839	0					
ANR	333928	ArgumentList	optarg		333839	1					
ANR	333929	Argument	optarg		333839	0					
ANR	333930	Identifier	optarg		333839	0					
ANR	333931	ExpressionStatement	exit ( 1 )	135:4:3323:3330	333839	1	True				
ANR	333932	CallExpression	exit ( 1 )		333839	0					
ANR	333933	Callee	exit		333839	0					
ANR	333934	Identifier	exit		333839	0					
ANR	333935	ArgumentList	1		333839	1					
ANR	333936	Argument	1		333839	0					
ANR	333937	PrimaryExpression	1		333839	0					
ANR	333938	BreakStatement	break ;	137:3:3340:3345	333839	5	True				
ANR	333939	Label	case 'c' :	138:2:3349:3357	333839	6	True				
ANR	333940	ExpressionStatement	nCopies = atoll ( optarg )	139:3:3362:3385	333839	7	True				
ANR	333941	AssignmentExpression	nCopies = atoll ( optarg )		333839	0		=			
ANR	333942	Identifier	nCopies		333839	0					
ANR	333943	CallExpression	atoll ( optarg )		333839	1					
ANR	333944	Callee	atoll		333839	0					
ANR	333945	Identifier	atoll		333839	0					
ANR	333946	ArgumentList	optarg		333839	1					
ANR	333947	Argument	optarg		333839	0					
ANR	333948	Identifier	optarg		333839	0					
ANR	333949	BreakStatement	break ;	140:3:3390:3395	333839	8	True				
ANR	333950	Label	case 'n' :	141:2:3399:3407	333839	9	True				
ANR	333951	ExpressionStatement	linenbrs = 1	142:3:3412:3424	333839	10	True				
ANR	333952	AssignmentExpression	linenbrs = 1		333839	0		=			
ANR	333953	Identifier	linenbrs		333839	0					
ANR	333954	PrimaryExpression	1		333839	1					
ANR	333955	BreakStatement	break ;	143:3:3429:3434	333839	11	True				
ANR	333956	Label	case 'w' :	144:2:3438:3446	333839	12	True				
ANR	333957	ExpressionStatement	waitusecs = atoi ( optarg )	145:3:3451:3475	333839	13	True				
ANR	333958	AssignmentExpression	waitusecs = atoi ( optarg )		333839	0		=			
ANR	333959	Identifier	waitusecs		333839	0					
ANR	333960	CallExpression	atoi ( optarg )		333839	1					
ANR	333961	Callee	atoi		333839	0					
ANR	333962	Identifier	atoi		333839	0					
ANR	333963	ArgumentList	optarg		333839	1					
ANR	333964	Argument	optarg		333839	0					
ANR	333965	Identifier	optarg		333839	0					
ANR	333966	BreakStatement	break ;	146:3:3480:3485	333839	14	True				
ANR	333967	Label	case 'W' :	147:2:3489:3497	333839	15	True				
ANR	333968	ExpressionStatement	batchsize = atoi ( optarg )	148:3:3502:3526	333839	16	True				
ANR	333969	AssignmentExpression	batchsize = atoi ( optarg )		333839	0		=			
ANR	333970	Identifier	batchsize		333839	0					
ANR	333971	CallExpression	atoi ( optarg )		333839	1					
ANR	333972	Callee	atoi		333839	0					
ANR	333973	Identifier	atoi		333839	0					
ANR	333974	ArgumentList	optarg		333839	1					
ANR	333975	Argument	optarg		333839	0					
ANR	333976	Identifier	optarg		333839	0					
ANR	333977	BreakStatement	break ;	149:3:3531:3536	333839	17	True				
ANR	333978	Label	default :	150:2:3540:3547	333839	18	True				
ANR	333979	Identifier	default		333839	0					
ANR	333980	ExpressionStatement	"printf ( ""invalid option '%c' or value missing - terminating...\\n"" , opt )"	150:11:3549:3619	333839	19	True				
ANR	333981	CallExpression	"printf ( ""invalid option '%c' or value missing - terminating...\\n"" , opt )"		333839	0					
ANR	333982	Callee	printf		333839	0					
ANR	333983	Identifier	printf		333839	0					
ANR	333984	ArgumentList	"""invalid option '%c' or value missing - terminating...\\n"""		333839	1					
ANR	333985	Argument	"""invalid option '%c' or value missing - terminating...\\n"""		333839	0					
ANR	333986	PrimaryExpression	"""invalid option '%c' or value missing - terminating...\\n"""		333839	0					
ANR	333987	Argument	opt		333839	1					
ANR	333988	Identifier	opt		333839	0					
ANR	333989	ExpressionStatement	exit ( 1 )	151:4:3625:3633	333839	20	True				
ANR	333990	CallExpression	exit ( 1 )		333839	0					
ANR	333991	Callee	exit		333839	0					
ANR	333992	Identifier	exit		333839	0					
ANR	333993	ArgumentList	1		333839	1					
ANR	333994	Argument	1		333839	0					
ANR	333995	PrimaryExpression	1		333839	0					
ANR	333996	BreakStatement	break ;	152:4:3639:3644	333839	21	True				
ANR	333997	ExpressionStatement	readFile ( )	156:1:3655:3665	333839	4	True				
ANR	333998	CallExpression	readFile ( )		333839	0					
ANR	333999	Callee	readFile		333839	0					
ANR	334000	Identifier	readFile		333839	0					
ANR	334001	ArgumentList			333839	1					
ANR	334002	ExpressionStatement	genCopies ( )	157:1:3668:3679	333839	5	True				
ANR	334003	CallExpression	genCopies ( )		333839	0					
ANR	334004	Callee	genCopies		333839	0					
ANR	334005	Identifier	genCopies		333839	0					
ANR	334006	ArgumentList			333839	1					
ANR	334007	ReturnType	void		333839	1					
ANR	334008	Identifier	main		333839	2					
ANR	334009	ParameterList	"int argc , char * argv [ ]"		333839	3					
ANR	334010	Parameter	int argc	118:10:2957:2964	333839	0	True				
ANR	334011	ParameterType	int		333839	0					
ANR	334012	Identifier	argc		333839	1					
ANR	334013	Parameter	char * argv [ ]	118:20:2967:2978	333839	1	True				
ANR	334014	ParameterType	char * [ ]		333839	0					
ANR	334015	Identifier	argv		333839	1					
ANR	334016	CFGEntryNode	ENTRY		333839		True				
ANR	334017	CFGExitNode	EXIT		333839		True				
ANR	334018	Symbol	argc		333839						
ANR	334019	Symbol	atoi		333839						
ANR	334020	Symbol	fopen		333839						
ANR	334021	Symbol	stdin		333839						
ANR	334022	Symbol	NULL		333839						
ANR	334023	Symbol	stdout		333839						
ANR	334024	Symbol	optarg		333839						
ANR	334025	Symbol	waitusecs		333839						
ANR	334026	Symbol	linenbrs		333839						
ANR	334027	Symbol	argv		333839						
ANR	334028	Symbol	batchsize		333839						
ANR	334029	Symbol	atoll		333839						
ANR	334030	Symbol	opt		333839						
ANR	334031	Symbol	nCopies		333839						
ANR	334032	Symbol	fpOut		333839						
ANR	334033	Symbol	getopt		333839						
ANR	334034	Symbol	fpIn		333839						
