command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7820	File	data/converged/CVE-2017-12588_rsyslog/contrib_imzmq3_imzmq3.c								
ANR	7821	DeclStmt									
ANR	7822	Decl							MODULE_TYPE_INPUT MODULE_TYPE_NOKEEP	MODULE_TYPE_INPUT MODULE_TYPE_NOKEEP	MODULE_CNFNAME
ANR	7823	ClassDef	_socket_type	72:8:1781:1850							
ANR	7824	DeclStmt									
ANR	7825	Decl							char	char *	name
ANR	7826	DeclStmt									
ANR	7827	Decl							int	int	type
ANR	7828	DeclStmt									
ANR	7829	Decl							_socket_type	_socket_type	socket_type
ANR	7830	ClassDef	_socket_action	78:8:1914:1987							
ANR	7831	DeclStmt									
ANR	7832	Decl							char	char *	name
ANR	7833	DeclStmt									
ANR	7834	Decl							int	int	action
ANR	7835	DeclStmt									
ANR	7836	Decl							_socket_action	_socket_action	socket_action
ANR	7837	ClassDef	_poller_data	83:8:1998:2082							
ANR	7838	DeclStmt									
ANR	7839	Decl							ruleset_t	ruleset_t *	ruleset
ANR	7840	DeclStmt									
ANR	7841	Decl							thrdInfo_t	thrdInfo_t *	thread
ANR	7842	DeclStmt									
ANR	7843	Decl							_poller_data	_poller_data	poller_data
ANR	7844	ClassDef	sublist_t	90:8:2137:2214							
ANR	7845	DeclStmt									
ANR	7846	Decl							char	char *	subscribe
ANR	7847	DeclStmt									
ANR	7848	Decl							struct sublist_t	struct sublist_t *	next
ANR	7849	DeclStmt									
ANR	7850	Decl							sublist_t	sublist_t	sublist
ANR	7851	ClassDef	instanceConf_s	95:0:2217:3231							
ANR	7852	DeclStmt									
ANR	7853	Decl							int	int	type
ANR	7854	DeclStmt									
ANR	7855	Decl							int	int	action
ANR	7856	DeclStmt									
ANR	7857	Decl							char	char *	description
ANR	7858	DeclStmt									
ANR	7859	Decl							int	int	sndHWM
ANR	7860	DeclStmt									
ANR	7861	Decl							int	int	rcvHWM
ANR	7862	DeclStmt									
ANR	7863	Decl							char	char *	identity
ANR	7864	DeclStmt									
ANR	7865	Decl							sublist	sublist *	subscriptions
ANR	7866	DeclStmt									
ANR	7867	Decl							int	int	sndBuf
ANR	7868	DeclStmt									
ANR	7869	Decl							int	int	rcvBuf
ANR	7870	DeclStmt									
ANR	7871	Decl							int	int	linger
ANR	7872	DeclStmt									
ANR	7873	Decl							int	int	backlog
ANR	7874	DeclStmt									
ANR	7875	Decl							int	int	sndTimeout
ANR	7876	DeclStmt									
ANR	7877	Decl							int	int	rcvTimeout
ANR	7878	DeclStmt									
ANR	7879	Decl							int	int	maxMsgSize
ANR	7880	DeclStmt									
ANR	7881	Decl							int	int	rate
ANR	7882	DeclStmt									
ANR	7883	Decl							int	int	recoveryIVL
ANR	7884	DeclStmt									
ANR	7885	Decl							int	int	multicastHops
ANR	7886	DeclStmt									
ANR	7887	Decl							int	int	reconnectIVL
ANR	7888	DeclStmt									
ANR	7889	Decl							int	int	reconnectIVLMax
ANR	7890	DeclStmt									
ANR	7891	Decl							int	int	ipv4Only
ANR	7892	DeclStmt									
ANR	7893	Decl							int	int	affinity
ANR	7894	DeclStmt									
ANR	7895	Decl							uchar	uchar *	pszBindRuleset
ANR	7896	DeclStmt									
ANR	7897	Decl							ruleset_t	ruleset_t *	pBindRuleset
ANR	7898	DeclStmt									
ANR	7899	Decl							struct instanceConf_s	struct instanceConf_s *	next
ANR	7900	ClassDef	modConfData_s	123:0:3235:3363							
ANR	7901	DeclStmt									
ANR	7902	Decl							rsconf_t	rsconf_t *	pConf
ANR	7903	DeclStmt									
ANR	7904	Decl							instanceConf_t	instanceConf_t *	root
ANR	7905	DeclStmt									
ANR	7906	Decl							instanceConf_t	instanceConf_t *	tail
ANR	7907	DeclStmt									
ANR	7908	Decl							int	int	io_threads
ANR	7909	ClassDef	lstn_s	129:0:3366:3448							
ANR	7910	DeclStmt									
ANR	7911	Decl							struct lstn_s	struct lstn_s *	next
ANR	7912	DeclStmt									
ANR	7913	Decl							void	void *	sock
ANR	7914	DeclStmt									
ANR	7915	Decl							ruleset_t	ruleset_t *	pRuleset
ANR	7916	DeclStmt									
ANR	7917	Decl							modConfData_t	modConfData_t *	runModConf
ANR	7918	DeclStmt									
ANR	7919	Decl							struct lstn_s	struct lstn_s *	lcnfRoot
ANR	7920	DeclStmt									
ANR	7921	Decl							struct lstn_s	struct lstn_s *	lcnfLast
ANR	7922	DeclStmt									
ANR	7923	Decl							prop_t	prop_t *	s_namep
ANR	7924	DeclStmt									
ANR	7925	Decl							zloop_t	zloop_t *	s_zloop
ANR	7926	DeclStmt									
ANR	7927	Decl							zctx_t	zctx_t *	s_context
ANR	7928	DeclStmt									
ANR	7929	Decl							socket_type	socket_type [ ]	socketTypes
ANR	7930	DeclStmt									
ANR	7931	Decl							socket_action	socket_action [ ]	socketActions
ANR	7932	DeclStmt									
ANR	7933	Decl							struct cnfparamdescr	struct cnfparamdescr [ ]	modpdescr
ANR	7934	DeclStmt									
ANR	7935	Decl							struct cnfparamblk	struct cnfparamblk	modpblk
ANR	7936	DeclStmt									
ANR	7937	Decl							struct cnfparamdescr	struct cnfparamdescr [ ]	inppdescr
ANR	7938	DeclStmt									
ANR	7939	Decl							struct cnfparamblk	struct cnfparamblk	inppblk
ANR	7940	Function	getSocketType	206:0:5974:6433							
ANR	7941	FunctionDef	getSocketType (char * name)		7940	0					
ANR	7942	CompoundStatement		206:37:6011:6433	7940	0					
ANR	7943	IdentifierDeclStatement	int type = - 1 ;	207:4:6017:6030	7940	0	True				
ANR	7944	IdentifierDecl	type = - 1		7940	0					
ANR	7945	IdentifierDeclType	int		7940	0					
ANR	7946	Identifier	type		7940	1					
ANR	7947	AssignmentExpression	type = - 1		7940	2		=			
ANR	7948	Identifier	type		7940	0					
ANR	7949	UnaryOperationExpression	- 1		7940	1					
ANR	7950	UnaryOperator	-		7940	0					
ANR	7951	PrimaryExpression	1		7940	1					
ANR	7952	IdentifierDeclStatement	uint i ;	208:4:6036:6042	7940	1	True				
ANR	7953	IdentifierDecl	i		7940	0					
ANR	7954	IdentifierDeclType	uint		7940	0					
ANR	7955	Identifier	i		7940	1					
ANR	7956	ForStatement	for ( i = 0 ; i < sizeof ( socketTypes ) / sizeof ( socket_type ) ; ++ i )		7940	2					
ANR	7957	ForInit	i = 0 ;	211:8:6101:6104	7940	0	True				
ANR	7958	AssignmentExpression	i = 0		7940	0		=			
ANR	7959	Identifier	i		7940	0					
ANR	7960	PrimaryExpression	0		7940	1					
ANR	7961	Condition	i < sizeof ( socketTypes ) / sizeof ( socket_type )	211:13:6106:6146	7940	1	True				
ANR	7962	RelationalExpression	i < sizeof ( socketTypes ) / sizeof ( socket_type )		7940	0		<			
ANR	7963	Identifier	i		7940	0					
ANR	7964	MultiplicativeExpression	sizeof ( socketTypes ) / sizeof ( socket_type )		7940	1		/			
ANR	7965	SizeofExpression	sizeof ( socketTypes )		7940	0					
ANR	7966	Sizeof	sizeof		7940	0					
ANR	7967	SizeofOperand	socketTypes		7940	1					
ANR	7968	SizeofExpression	sizeof ( socket_type )		7940	1					
ANR	7969	Sizeof	sizeof		7940	0					
ANR	7970	SizeofOperand	socket_type		7940	1					
ANR	7971	UnaryExpression	++ i	211:56:6149:6151	7940	2	True				
ANR	7972	IncDec	++		7940	0					
ANR	7973	Identifier	i		7940	1					
ANR	7974	CompoundStatement		6:61:142:142	7940	3					
ANR	7975	IfStatement	"if ( ! strcmp ( socketTypes [ i ] . name , name ) )"		7940	0					
ANR	7976	Condition	"! strcmp ( socketTypes [ i ] . name , name )"	212:12:6168:6201	7940	0	True				
ANR	7977	UnaryOperationExpression	"! strcmp ( socketTypes [ i ] . name , name )"		7940	0					
ANR	7978	UnaryOperator	!		7940	0					
ANR	7979	CallExpression	"strcmp ( socketTypes [ i ] . name , name )"		7940	1					
ANR	7980	Callee	strcmp		7940	0					
ANR	7981	Identifier	strcmp		7940	0					
ANR	7982	ArgumentList	socketTypes [ i ] . name		7940	1					
ANR	7983	Argument	socketTypes [ i ] . name		7940	0					
ANR	7984	MemberAccess	socketTypes [ i ] . name		7940	0					
ANR	7985	ArrayIndexing	socketTypes [ i ]		7940	0					
ANR	7986	Identifier	socketTypes		7940	0					
ANR	7987	Identifier	i		7940	1					
ANR	7988	Identifier	name		7940	1					
ANR	7989	Argument	name		7940	1					
ANR	7990	Identifier	name		7940	0					
ANR	7991	CompoundStatement		7:49:193:193	7940	1					
ANR	7992	ExpressionStatement	type = socketTypes [ i ] . type	213:12:6219:6245	7940	0	True				
ANR	7993	AssignmentExpression	type = socketTypes [ i ] . type		7940	0		=			
ANR	7994	Identifier	type		7940	0					
ANR	7995	MemberAccess	socketTypes [ i ] . type		7940	1					
ANR	7996	ArrayIndexing	socketTypes [ i ]		7940	0					
ANR	7997	Identifier	socketTypes		7940	0					
ANR	7998	Identifier	i		7940	1					
ANR	7999	Identifier	type		7940	1					
ANR	8000	BreakStatement	break ;	214:12:6259:6264	7940	1	True				
ANR	8001	IfStatement	if ( type == - 1 )		7940	3					
ANR	8002	Condition	type == - 1	219:8:6334:6343	7940	0	True				
ANR	8003	EqualityExpression	type == - 1		7940	0		==			
ANR	8004	Identifier	type		7940	0					
ANR	8005	UnaryOperationExpression	- 1		7940	1					
ANR	8006	UnaryOperator	-		7940	0					
ANR	8007	PrimaryExpression	1		7940	1					
ANR	8008	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""unknown type %s"" , name )"	220:8:6355:6409	7940	1	True				
ANR	8009	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""unknown type %s"" , name )"		7940	0					
ANR	8010	Callee	errmsg . LogError		7940	0					
ANR	8011	MemberAccess	errmsg . LogError		7940	0					
ANR	8012	Identifier	errmsg		7940	0					
ANR	8013	Identifier	LogError		7940	1					
ANR	8014	ArgumentList	0		7940	1					
ANR	8015	Argument	0		7940	0					
ANR	8016	PrimaryExpression	0		7940	0					
ANR	8017	Argument	NO_ERRCODE		7940	1					
ANR	8018	Identifier	NO_ERRCODE		7940	0					
ANR	8019	Argument	"""unknown type %s"""		7940	2					
ANR	8020	PrimaryExpression	"""unknown type %s"""		7940	0					
ANR	8021	Argument	name		7940	3					
ANR	8022	Identifier	name		7940	0					
ANR	8023	ReturnStatement	return type ;	222:4:6420:6431	7940	4	True				
ANR	8024	Identifier	type		7940	0					
ANR	8025	ReturnType	static int		7940	1					
ANR	8026	Identifier	getSocketType		7940	2					
ANR	8027	ParameterList	char * name		7940	3					
ANR	8028	Parameter	char * name	206:25:5999:6008	7940	0	True				
ANR	8029	ParameterType	char *		7940	0					
ANR	8030	Identifier	name		7940	1					
ANR	8031	CFGEntryNode	ENTRY		7940		True				
ANR	8032	CFGExitNode	EXIT		7940		True				
ANR	8033	Symbol	strcmp		7940						
ANR	8034	Symbol	* i		7940						
ANR	8035	Symbol	name		7940						
ANR	8036	Symbol	NO_ERRCODE		7940						
ANR	8037	Symbol	i		7940						
ANR	8038	Symbol	errmsg		7940						
ANR	8039	Symbol	type		7940						
ANR	8040	Symbol	* socketTypes		7940						
ANR	8041	Symbol	socketTypes		7940						
ANR	8042	Symbol	socketTypes [ i ] . name		7940						
ANR	8043	Symbol	socketTypes [ i ] . type		7940						
ANR	8044	Function	getSocketAction	226:0:6437:6921							
ANR	8045	FunctionDef	getSocketAction (char * name)		8044	0					
ANR	8046	CompoundStatement		226:39:6476:6921	8044	0					
ANR	8047	IdentifierDeclStatement	int action = - 1 ;	227:4:6482:6497	8044	0	True				
ANR	8048	IdentifierDecl	action = - 1		8044	0					
ANR	8049	IdentifierDeclType	int		8044	0					
ANR	8050	Identifier	action		8044	1					
ANR	8051	AssignmentExpression	action = - 1		8044	2		=			
ANR	8052	Identifier	action		8044	0					
ANR	8053	UnaryOperationExpression	- 1		8044	1					
ANR	8054	UnaryOperator	-		8044	0					
ANR	8055	PrimaryExpression	1		8044	1					
ANR	8056	IdentifierDeclStatement	uint i ;	228:4:6503:6509	8044	1	True				
ANR	8057	IdentifierDecl	i		8044	0					
ANR	8058	IdentifierDeclType	uint		8044	0					
ANR	8059	Identifier	i		8044	1					
ANR	8060	ForStatement	for ( i = 0 ; i < sizeof ( socketActions ) / sizeof ( socket_action ) ; ++ i )		8044	2					
ANR	8061	ForInit	i = 0 ;	231:8:6566:6569	8044	0	True				
ANR	8062	AssignmentExpression	i = 0		8044	0		=			
ANR	8063	Identifier	i		8044	0					
ANR	8064	PrimaryExpression	0		8044	1					
ANR	8065	Condition	i < sizeof ( socketActions ) / sizeof ( socket_action )	231:13:6571:6617	8044	1	True				
ANR	8066	RelationalExpression	i < sizeof ( socketActions ) / sizeof ( socket_action )		8044	0		<			
ANR	8067	Identifier	i		8044	0					
ANR	8068	MultiplicativeExpression	sizeof ( socketActions ) / sizeof ( socket_action )		8044	1		/			
ANR	8069	SizeofExpression	sizeof ( socketActions )		8044	0					
ANR	8070	Sizeof	sizeof		8044	0					
ANR	8071	SizeofOperand	socketActions		8044	1					
ANR	8072	SizeofExpression	sizeof ( socket_action )		8044	1					
ANR	8073	Sizeof	sizeof		8044	0					
ANR	8074	SizeofOperand	socket_action		8044	1					
ANR	8075	UnaryExpression	++ i	231:62:6620:6622	8044	2	True				
ANR	8076	IncDec	++		8044	0					
ANR	8077	Identifier	i		8044	1					
ANR	8078	CompoundStatement		6:67:148:148	8044	3					
ANR	8079	IfStatement	"if ( ! strcmp ( socketActions [ i ] . name , name ) )"		8044	0					
ANR	8080	Condition	"! strcmp ( socketActions [ i ] . name , name )"	232:11:6638:6673	8044	0	True				
ANR	8081	UnaryOperationExpression	"! strcmp ( socketActions [ i ] . name , name )"		8044	0					
ANR	8082	UnaryOperator	!		8044	0					
ANR	8083	CallExpression	"strcmp ( socketActions [ i ] . name , name )"		8044	1					
ANR	8084	Callee	strcmp		8044	0					
ANR	8085	Identifier	strcmp		8044	0					
ANR	8086	ArgumentList	socketActions [ i ] . name		8044	1					
ANR	8087	Argument	socketActions [ i ] . name		8044	0					
ANR	8088	MemberAccess	socketActions [ i ] . name		8044	0					
ANR	8089	ArrayIndexing	socketActions [ i ]		8044	0					
ANR	8090	Identifier	socketActions		8044	0					
ANR	8091	Identifier	i		8044	1					
ANR	8092	Identifier	name		8044	1					
ANR	8093	Argument	name		8044	1					
ANR	8094	Identifier	name		8044	0					
ANR	8095	CompoundStatement		7:49:199:199	8044	1					
ANR	8096	ExpressionStatement	action = socketActions [ i ] . action	233:12:6690:6722	8044	0	True				
ANR	8097	AssignmentExpression	action = socketActions [ i ] . action		8044	0		=			
ANR	8098	Identifier	action		8044	0					
ANR	8099	MemberAccess	socketActions [ i ] . action		8044	1					
ANR	8100	ArrayIndexing	socketActions [ i ]		8044	0					
ANR	8101	Identifier	socketActions		8044	0					
ANR	8102	Identifier	i		8044	1					
ANR	8103	Identifier	action		8044	1					
ANR	8104	BreakStatement	break ;	234:12:6736:6741	8044	1	True				
ANR	8105	IfStatement	if ( action == - 1 )		8044	3					
ANR	8106	Condition	action == - 1	239:8:6816:6827	8044	0	True				
ANR	8107	EqualityExpression	action == - 1		8044	0		==			
ANR	8108	Identifier	action		8044	0					
ANR	8109	UnaryOperationExpression	- 1		8044	1					
ANR	8110	UnaryOperator	-		8044	0					
ANR	8111	PrimaryExpression	1		8044	1					
ANR	8112	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""unknown action %s"" , name )"	240:8:6839:6895	8044	1	True				
ANR	8113	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""unknown action %s"" , name )"		8044	0					
ANR	8114	Callee	errmsg . LogError		8044	0					
ANR	8115	MemberAccess	errmsg . LogError		8044	0					
ANR	8116	Identifier	errmsg		8044	0					
ANR	8117	Identifier	LogError		8044	1					
ANR	8118	ArgumentList	0		8044	1					
ANR	8119	Argument	0		8044	0					
ANR	8120	PrimaryExpression	0		8044	0					
ANR	8121	Argument	NO_ERRCODE		8044	1					
ANR	8122	Identifier	NO_ERRCODE		8044	0					
ANR	8123	Argument	"""unknown action %s"""		8044	2					
ANR	8124	PrimaryExpression	"""unknown action %s"""		8044	0					
ANR	8125	Argument	name		8044	3					
ANR	8126	Identifier	name		8044	0					
ANR	8127	ReturnStatement	return action ;	242:4:6906:6919	8044	4	True				
ANR	8128	Identifier	action		8044	0					
ANR	8129	ReturnType	static int		8044	1					
ANR	8130	Identifier	getSocketAction		8044	2					
ANR	8131	ParameterList	char * name		8044	3					
ANR	8132	Parameter	char * name	226:27:6464:6473	8044	0	True				
ANR	8133	ParameterType	char *		8044	0					
ANR	8134	Identifier	name		8044	1					
ANR	8135	CFGEntryNode	ENTRY		8044		True				
ANR	8136	CFGExitNode	EXIT		8044		True				
ANR	8137	Symbol	strcmp		8044						
ANR	8138	Symbol	* i		8044						
ANR	8139	Symbol	socketActions [ i ] . name		8044						
ANR	8140	Symbol	name		8044						
ANR	8141	Symbol	NO_ERRCODE		8044						
ANR	8142	Symbol	action		8044						
ANR	8143	Symbol	i		8044						
ANR	8144	Symbol	errmsg		8044						
ANR	8145	Symbol	socketActions [ i ] . action		8044						
ANR	8146	Symbol	* socketActions		8044						
ANR	8147	Symbol	socketActions		8044						
ANR	8148	Function	setDefaults	246:0:6925:7753							
ANR	8149	FunctionDef	setDefaults (instanceConf_t * info)		8148	0					
ANR	8150	CompoundStatement		246:46:6971:7753	8148	0					
ANR	8151	ExpressionStatement	info -> type = - 1	247:4:6977:7003	8148	0	True				
ANR	8152	AssignmentExpression	info -> type = - 1		8148	0		=			
ANR	8153	PtrMemberAccess	info -> type		8148	0					
ANR	8154	Identifier	info		8148	0					
ANR	8155	Identifier	type		8148	1					
ANR	8156	UnaryOperationExpression	- 1		8148	1					
ANR	8157	UnaryOperator	-		8148	0					
ANR	8158	PrimaryExpression	1		8148	1					
ANR	8159	ExpressionStatement	info -> action = - 1	248:4:7009:7035	8148	1	True				
ANR	8160	AssignmentExpression	info -> action = - 1		8148	0		=			
ANR	8161	PtrMemberAccess	info -> action		8148	0					
ANR	8162	Identifier	info		8148	0					
ANR	8163	Identifier	action		8148	1					
ANR	8164	UnaryOperationExpression	- 1		8148	1					
ANR	8165	UnaryOperator	-		8148	0					
ANR	8166	PrimaryExpression	1		8148	1					
ANR	8167	ExpressionStatement	info -> description = NULL	249:4:7041:7069	8148	2	True				
ANR	8168	AssignmentExpression	info -> description = NULL		8148	0		=			
ANR	8169	PtrMemberAccess	info -> description		8148	0					
ANR	8170	Identifier	info		8148	0					
ANR	8171	Identifier	description		8148	1					
ANR	8172	Identifier	NULL		8148	1					
ANR	8173	ExpressionStatement	info -> sndHWM = - 1	250:4:7075:7101	8148	3	True				
ANR	8174	AssignmentExpression	info -> sndHWM = - 1		8148	0		=			
ANR	8175	PtrMemberAccess	info -> sndHWM		8148	0					
ANR	8176	Identifier	info		8148	0					
ANR	8177	Identifier	sndHWM		8148	1					
ANR	8178	UnaryOperationExpression	- 1		8148	1					
ANR	8179	UnaryOperator	-		8148	0					
ANR	8180	PrimaryExpression	1		8148	1					
ANR	8181	ExpressionStatement	info -> rcvHWM = - 1	251:4:7107:7133	8148	4	True				
ANR	8182	AssignmentExpression	info -> rcvHWM = - 1		8148	0		=			
ANR	8183	PtrMemberAccess	info -> rcvHWM		8148	0					
ANR	8184	Identifier	info		8148	0					
ANR	8185	Identifier	rcvHWM		8148	1					
ANR	8186	UnaryOperationExpression	- 1		8148	1					
ANR	8187	UnaryOperator	-		8148	0					
ANR	8188	PrimaryExpression	1		8148	1					
ANR	8189	ExpressionStatement	info -> identity = NULL	252:4:7139:7167	8148	5	True				
ANR	8190	AssignmentExpression	info -> identity = NULL		8148	0		=			
ANR	8191	PtrMemberAccess	info -> identity		8148	0					
ANR	8192	Identifier	info		8148	0					
ANR	8193	Identifier	identity		8148	1					
ANR	8194	Identifier	NULL		8148	1					
ANR	8195	ExpressionStatement	info -> subscriptions = NULL	253:4:7173:7201	8148	6	True				
ANR	8196	AssignmentExpression	info -> subscriptions = NULL		8148	0		=			
ANR	8197	PtrMemberAccess	info -> subscriptions		8148	0					
ANR	8198	Identifier	info		8148	0					
ANR	8199	Identifier	subscriptions		8148	1					
ANR	8200	Identifier	NULL		8148	1					
ANR	8201	ExpressionStatement	info -> pszBindRuleset = NULL	254:4:7207:7235	8148	7	True				
ANR	8202	AssignmentExpression	info -> pszBindRuleset = NULL		8148	0		=			
ANR	8203	PtrMemberAccess	info -> pszBindRuleset		8148	0					
ANR	8204	Identifier	info		8148	0					
ANR	8205	Identifier	pszBindRuleset		8148	1					
ANR	8206	Identifier	NULL		8148	1					
ANR	8207	ExpressionStatement	info -> pBindRuleset = NULL	255:4:7241:7269	8148	8	True				
ANR	8208	AssignmentExpression	info -> pBindRuleset = NULL		8148	0		=			
ANR	8209	PtrMemberAccess	info -> pBindRuleset		8148	0					
ANR	8210	Identifier	info		8148	0					
ANR	8211	Identifier	pBindRuleset		8148	1					
ANR	8212	Identifier	NULL		8148	1					
ANR	8213	ExpressionStatement	info -> sndBuf = - 1	256:4:7275:7301	8148	9	True				
ANR	8214	AssignmentExpression	info -> sndBuf = - 1		8148	0		=			
ANR	8215	PtrMemberAccess	info -> sndBuf		8148	0					
ANR	8216	Identifier	info		8148	0					
ANR	8217	Identifier	sndBuf		8148	1					
ANR	8218	UnaryOperationExpression	- 1		8148	1					
ANR	8219	UnaryOperator	-		8148	0					
ANR	8220	PrimaryExpression	1		8148	1					
ANR	8221	ExpressionStatement	info -> rcvBuf = - 1	257:4:7307:7333	8148	10	True				
ANR	8222	AssignmentExpression	info -> rcvBuf = - 1		8148	0		=			
ANR	8223	PtrMemberAccess	info -> rcvBuf		8148	0					
ANR	8224	Identifier	info		8148	0					
ANR	8225	Identifier	rcvBuf		8148	1					
ANR	8226	UnaryOperationExpression	- 1		8148	1					
ANR	8227	UnaryOperator	-		8148	0					
ANR	8228	PrimaryExpression	1		8148	1					
ANR	8229	ExpressionStatement	info -> linger = - 1	258:4:7339:7365	8148	11	True				
ANR	8230	AssignmentExpression	info -> linger = - 1		8148	0		=			
ANR	8231	PtrMemberAccess	info -> linger		8148	0					
ANR	8232	Identifier	info		8148	0					
ANR	8233	Identifier	linger		8148	1					
ANR	8234	UnaryOperationExpression	- 1		8148	1					
ANR	8235	UnaryOperator	-		8148	0					
ANR	8236	PrimaryExpression	1		8148	1					
ANR	8237	ExpressionStatement	info -> backlog = - 1	259:4:7371:7397	8148	12	True				
ANR	8238	AssignmentExpression	info -> backlog = - 1		8148	0		=			
ANR	8239	PtrMemberAccess	info -> backlog		8148	0					
ANR	8240	Identifier	info		8148	0					
ANR	8241	Identifier	backlog		8148	1					
ANR	8242	UnaryOperationExpression	- 1		8148	1					
ANR	8243	UnaryOperator	-		8148	0					
ANR	8244	PrimaryExpression	1		8148	1					
ANR	8245	ExpressionStatement	info -> sndTimeout = - 1	260:4:7403:7429	8148	13	True				
ANR	8246	AssignmentExpression	info -> sndTimeout = - 1		8148	0		=			
ANR	8247	PtrMemberAccess	info -> sndTimeout		8148	0					
ANR	8248	Identifier	info		8148	0					
ANR	8249	Identifier	sndTimeout		8148	1					
ANR	8250	UnaryOperationExpression	- 1		8148	1					
ANR	8251	UnaryOperator	-		8148	0					
ANR	8252	PrimaryExpression	1		8148	1					
ANR	8253	ExpressionStatement	info -> rcvTimeout = - 1	261:4:7435:7461	8148	14	True				
ANR	8254	AssignmentExpression	info -> rcvTimeout = - 1		8148	0		=			
ANR	8255	PtrMemberAccess	info -> rcvTimeout		8148	0					
ANR	8256	Identifier	info		8148	0					
ANR	8257	Identifier	rcvTimeout		8148	1					
ANR	8258	UnaryOperationExpression	- 1		8148	1					
ANR	8259	UnaryOperator	-		8148	0					
ANR	8260	PrimaryExpression	1		8148	1					
ANR	8261	ExpressionStatement	info -> maxMsgSize = - 1	262:4:7467:7493	8148	15	True				
ANR	8262	AssignmentExpression	info -> maxMsgSize = - 1		8148	0		=			
ANR	8263	PtrMemberAccess	info -> maxMsgSize		8148	0					
ANR	8264	Identifier	info		8148	0					
ANR	8265	Identifier	maxMsgSize		8148	1					
ANR	8266	UnaryOperationExpression	- 1		8148	1					
ANR	8267	UnaryOperator	-		8148	0					
ANR	8268	PrimaryExpression	1		8148	1					
ANR	8269	ExpressionStatement	info -> rate = - 1	263:4:7499:7525	8148	16	True				
ANR	8270	AssignmentExpression	info -> rate = - 1		8148	0		=			
ANR	8271	PtrMemberAccess	info -> rate		8148	0					
ANR	8272	Identifier	info		8148	0					
ANR	8273	Identifier	rate		8148	1					
ANR	8274	UnaryOperationExpression	- 1		8148	1					
ANR	8275	UnaryOperator	-		8148	0					
ANR	8276	PrimaryExpression	1		8148	1					
ANR	8277	ExpressionStatement	info -> recoveryIVL = - 1	264:4:7531:7557	8148	17	True				
ANR	8278	AssignmentExpression	info -> recoveryIVL = - 1		8148	0		=			
ANR	8279	PtrMemberAccess	info -> recoveryIVL		8148	0					
ANR	8280	Identifier	info		8148	0					
ANR	8281	Identifier	recoveryIVL		8148	1					
ANR	8282	UnaryOperationExpression	- 1		8148	1					
ANR	8283	UnaryOperator	-		8148	0					
ANR	8284	PrimaryExpression	1		8148	1					
ANR	8285	ExpressionStatement	info -> multicastHops = - 1	265:4:7563:7589	8148	18	True				
ANR	8286	AssignmentExpression	info -> multicastHops = - 1		8148	0		=			
ANR	8287	PtrMemberAccess	info -> multicastHops		8148	0					
ANR	8288	Identifier	info		8148	0					
ANR	8289	Identifier	multicastHops		8148	1					
ANR	8290	UnaryOperationExpression	- 1		8148	1					
ANR	8291	UnaryOperator	-		8148	0					
ANR	8292	PrimaryExpression	1		8148	1					
ANR	8293	ExpressionStatement	info -> reconnectIVL = - 1	266:4:7595:7621	8148	19	True				
ANR	8294	AssignmentExpression	info -> reconnectIVL = - 1		8148	0		=			
ANR	8295	PtrMemberAccess	info -> reconnectIVL		8148	0					
ANR	8296	Identifier	info		8148	0					
ANR	8297	Identifier	reconnectIVL		8148	1					
ANR	8298	UnaryOperationExpression	- 1		8148	1					
ANR	8299	UnaryOperator	-		8148	0					
ANR	8300	PrimaryExpression	1		8148	1					
ANR	8301	ExpressionStatement	info -> reconnectIVLMax = - 1	267:4:7627:7653	8148	20	True				
ANR	8302	AssignmentExpression	info -> reconnectIVLMax = - 1		8148	0		=			
ANR	8303	PtrMemberAccess	info -> reconnectIVLMax		8148	0					
ANR	8304	Identifier	info		8148	0					
ANR	8305	Identifier	reconnectIVLMax		8148	1					
ANR	8306	UnaryOperationExpression	- 1		8148	1					
ANR	8307	UnaryOperator	-		8148	0					
ANR	8308	PrimaryExpression	1		8148	1					
ANR	8309	ExpressionStatement	info -> ipv4Only = - 1	268:4:7659:7685	8148	21	True				
ANR	8310	AssignmentExpression	info -> ipv4Only = - 1		8148	0		=			
ANR	8311	PtrMemberAccess	info -> ipv4Only		8148	0					
ANR	8312	Identifier	info		8148	0					
ANR	8313	Identifier	ipv4Only		8148	1					
ANR	8314	UnaryOperationExpression	- 1		8148	1					
ANR	8315	UnaryOperator	-		8148	0					
ANR	8316	PrimaryExpression	1		8148	1					
ANR	8317	ExpressionStatement	info -> affinity = - 1	269:4:7691:7717	8148	22	True				
ANR	8318	AssignmentExpression	info -> affinity = - 1		8148	0		=			
ANR	8319	PtrMemberAccess	info -> affinity		8148	0					
ANR	8320	Identifier	info		8148	0					
ANR	8321	Identifier	affinity		8148	1					
ANR	8322	UnaryOperationExpression	- 1		8148	1					
ANR	8323	UnaryOperator	-		8148	0					
ANR	8324	PrimaryExpression	1		8148	1					
ANR	8325	ExpressionStatement	info -> next = NULL	270:4:7723:7751	8148	23	True				
ANR	8326	AssignmentExpression	info -> next = NULL		8148	0		=			
ANR	8327	PtrMemberAccess	info -> next		8148	0					
ANR	8328	Identifier	info		8148	0					
ANR	8329	Identifier	next		8148	1					
ANR	8330	Identifier	NULL		8148	1					
ANR	8331	ReturnType	static void		8148	1					
ANR	8332	Identifier	setDefaults		8148	2					
ANR	8333	ParameterList	instanceConf_t * info		8148	3					
ANR	8334	Parameter	instanceConf_t * info	246:24:6949:6968	8148	0	True				
ANR	8335	ParameterType	instanceConf_t *		8148	0					
ANR	8336	Identifier	info		8148	1					
ANR	8337	CFGEntryNode	ENTRY		8148		True				
ANR	8338	CFGExitNode	EXIT		8148		True				
ANR	8339	Symbol	info -> linger		8148						
ANR	8340	Symbol	info -> pBindRuleset		8148						
ANR	8341	Symbol	info -> rcvBuf		8148						
ANR	8342	Symbol	info -> sndHWM		8148						
ANR	8343	Symbol	info -> rcvTimeout		8148						
ANR	8344	Symbol	info -> backlog		8148						
ANR	8345	Symbol	info -> rate		8148						
ANR	8346	Symbol	info -> sndBuf		8148						
ANR	8347	Symbol	info -> rcvHWM		8148						
ANR	8348	Symbol	info		8148						
ANR	8349	Symbol	info -> pszBindRuleset		8148						
ANR	8350	Symbol	info -> sndTimeout		8148						
ANR	8351	Symbol	info -> next		8148						
ANR	8352	Symbol	info -> type		8148						
ANR	8353	Symbol	NULL		8148						
ANR	8354	Symbol	info -> subscriptions		8148						
ANR	8355	Symbol	info -> affinity		8148						
ANR	8356	Symbol	info -> identity		8148						
ANR	8357	Symbol	info -> multicastHops		8148						
ANR	8358	Symbol	info -> reconnectIVLMax		8148						
ANR	8359	Symbol	info -> description		8148						
ANR	8360	Symbol	info -> ipv4Only		8148						
ANR	8361	Symbol	info -> recoveryIVL		8148						
ANR	8362	Symbol	info -> action		8148						
ANR	8363	Symbol	info -> reconnectIVL		8148						
ANR	8364	Symbol	info -> maxMsgSize		8148						
ANR	8365	Symbol	* info		8148						
ANR	8366	Function	parseSubscriptions	276:0:7857:8939							
ANR	8367	FunctionDef	"parseSubscriptions (char * subscribes , sublist * * subList)"		8366	0					
ANR	8368	CompoundStatement		276:71:7928:8939	8366	0					
ANR	8369	IdentifierDeclStatement	"char * tok = strtok ( subscribes , "","" ) ;"	277:4:7934:7969	8366	0	True				
ANR	8370	IdentifierDecl	"* tok = strtok ( subscribes , "","" )"		8366	0					
ANR	8371	IdentifierDeclType	char *		8366	0					
ANR	8372	Identifier	tok		8366	1					
ANR	8373	AssignmentExpression	"* tok = strtok ( subscribes , "","" )"		8366	2		=			
ANR	8374	Identifier	tok		8366	0					
ANR	8375	CallExpression	"strtok ( subscribes , "","" )"		8366	1					
ANR	8376	Callee	strtok		8366	0					
ANR	8377	Identifier	strtok		8366	0					
ANR	8378	ArgumentList	subscribes		8366	1					
ANR	8379	Argument	subscribes		8366	0					
ANR	8380	Identifier	subscribes		8366	0					
ANR	8381	Argument	""","""		8366	1					
ANR	8382	PrimaryExpression	""","""		8366	0					
ANR	8383	IdentifierDeclStatement	sublist * currentSub ;	278:4:7975:7994	8366	1	True				
ANR	8384	IdentifierDecl	* currentSub		8366	0					
ANR	8385	IdentifierDeclType	sublist *		8366	0					
ANR	8386	Identifier	currentSub		8366	1					
ANR	8387	IdentifierDeclStatement	sublist * head ;	279:4:8000:8013	8366	2	True				
ANR	8388	IdentifierDecl	* head		8366	0					
ANR	8389	IdentifierDeclType	sublist *		8366	0					
ANR	8390	Identifier	head		8366	1					
ANR	8391	ExpressionStatement	DEFiRet	280:4:8019:8026	8366	3	True				
ANR	8392	Identifier	DEFiRet		8366	0					
ANR	8393	ExpressionStatement	CHKmalloc ( * subList = ( sublist * ) MALLOC ( sizeof ( sublist ) ) )	283:4:8061:8116	8366	4	True				
ANR	8394	CallExpression	CHKmalloc ( * subList = ( sublist * ) MALLOC ( sizeof ( sublist ) ) )		8366	0					
ANR	8395	Callee	CHKmalloc		8366	0					
ANR	8396	Identifier	CHKmalloc		8366	0					
ANR	8397	ArgumentList	* subList = ( sublist * ) MALLOC ( sizeof ( sublist ) )		8366	1					
ANR	8398	Argument	* subList = ( sublist * ) MALLOC ( sizeof ( sublist ) )		8366	0					
ANR	8399	AssignmentExpression	* subList = ( sublist * ) MALLOC ( sizeof ( sublist ) )		8366	0		=			
ANR	8400	UnaryOperationExpression	* subList		8366	0					
ANR	8401	UnaryOperator	*		8366	0					
ANR	8402	Identifier	subList		8366	1					
ANR	8403	CastExpression	( sublist * ) MALLOC ( sizeof ( sublist ) )		8366	1					
ANR	8404	CastTarget	sublist *		8366	0					
ANR	8405	CallExpression	MALLOC ( sizeof ( sublist ) )		8366	1					
ANR	8406	Callee	MALLOC		8366	0					
ANR	8407	Identifier	MALLOC		8366	0					
ANR	8408	ArgumentList	sizeof ( sublist )		8366	1					
ANR	8409	Argument	sizeof ( sublist )		8366	0					
ANR	8410	SizeofExpression	sizeof ( sublist )		8366	0					
ANR	8411	Sizeof	sizeof		8366	0					
ANR	8412	SizeofOperand	sublist		8366	1					
ANR	8413	ExpressionStatement	head = * subList	284:4:8122:8137	8366	5	True				
ANR	8414	AssignmentExpression	head = * subList		8366	0		=			
ANR	8415	Identifier	head		8366	0					
ANR	8416	UnaryOperationExpression	* subList		8366	1					
ANR	8417	UnaryOperator	*		8366	0					
ANR	8418	Identifier	subList		8366	1					
ANR	8419	ExpressionStatement	head -> next = NULL	285:4:8143:8160	8366	6	True				
ANR	8420	AssignmentExpression	head -> next = NULL		8366	0		=			
ANR	8421	PtrMemberAccess	head -> next		8366	0					
ANR	8422	Identifier	head		8366	0					
ANR	8423	Identifier	next		8366	1					
ANR	8424	Identifier	NULL		8366	1					
ANR	8425	ExpressionStatement	head -> subscribe = NULL	286:4:8166:8186	8366	7	True				
ANR	8426	AssignmentExpression	head -> subscribe = NULL		8366	0		=			
ANR	8427	PtrMemberAccess	head -> subscribe		8366	0					
ANR	8428	Identifier	head		8366	0					
ANR	8429	Identifier	subscribe		8366	1					
ANR	8430	Identifier	NULL		8366	1					
ANR	8431	ExpressionStatement	currentSub = head	287:4:8192:8207	8366	8	True				
ANR	8432	AssignmentExpression	currentSub = head		8366	0		=			
ANR	8433	Identifier	currentSub		8366	0					
ANR	8434	Identifier	head		8366	1					
ANR	8435	IfStatement	if ( tok )		8366	9					
ANR	8436	Condition	tok	289:7:8221:8223	8366	0	True				
ANR	8437	Identifier	tok		8366	0					
ANR	8438	CompoundStatement		14:12:297:297	8366	1					
ANR	8439	ExpressionStatement	head -> subscribe = strdup ( tok )	290:8:8236:8263	8366	0	True				
ANR	8440	AssignmentExpression	head -> subscribe = strdup ( tok )		8366	0		=			
ANR	8441	PtrMemberAccess	head -> subscribe		8366	0					
ANR	8442	Identifier	head		8366	0					
ANR	8443	Identifier	subscribe		8366	1					
ANR	8444	CallExpression	strdup ( tok )		8366	1					
ANR	8445	Callee	strdup		8366	0					
ANR	8446	Identifier	strdup		8366	0					
ANR	8447	ArgumentList	tok		8366	1					
ANR	8448	Argument	tok		8366	0					
ANR	8449	Identifier	tok		8366	0					
ANR	8450	ForStatement	"for ( tok = strtok ( NULL , "","" ) ; tok != NULL ; tok = strtok ( NULL , "","" ) )"		8366	1					
ANR	8451	ForInit	"tok = strtok ( NULL , "","" ) ;"	291:12:8277:8298	8366	0	True				
ANR	8452	AssignmentExpression	"tok = strtok ( NULL , "","" )"		8366	0		=			
ANR	8453	Identifier	tok		8366	0					
ANR	8454	CallExpression	"strtok ( NULL , "","" )"		8366	1					
ANR	8455	Callee	strtok		8366	0					
ANR	8456	Identifier	strtok		8366	0					
ANR	8457	ArgumentList	NULL		8366	1					
ANR	8458	Argument	NULL		8366	0					
ANR	8459	Identifier	NULL		8366	0					
ANR	8460	Argument	""","""		8366	1					
ANR	8461	PrimaryExpression	""","""		8366	0					
ANR	8462	Condition	tok != NULL	291:35:8300:8308	8366	1	True				
ANR	8463	EqualityExpression	tok != NULL		8366	0		!=			
ANR	8464	Identifier	tok		8366	0					
ANR	8465	Identifier	NULL		8366	1					
ANR	8466	AssignmentExpression	"tok = strtok ( NULL , "","" )"	291:45:8310:8330	8366	2	True	=			
ANR	8467	Identifier	tok		8366	0					
ANR	8468	CallExpression	"strtok ( NULL , "","" )"		8366	1					
ANR	8469	Callee	strtok		8366	0					
ANR	8470	Identifier	strtok		8366	0					
ANR	8471	ArgumentList	NULL		8366	1					
ANR	8472	Argument	NULL		8366	0					
ANR	8473	Identifier	NULL		8366	0					
ANR	8474	Argument	""","""		8366	1					
ANR	8475	PrimaryExpression	""","""		8366	0					
ANR	8476	CompoundStatement		16:68:404:404	8366	3					
ANR	8477	ExpressionStatement	CHKmalloc ( currentSub -> next = ( sublist * ) MALLOC ( sizeof ( sublist ) ) )	292:12:8347:8410	8366	0	True				
ANR	8478	CallExpression	CHKmalloc ( currentSub -> next = ( sublist * ) MALLOC ( sizeof ( sublist ) ) )		8366	0					
ANR	8479	Callee	CHKmalloc		8366	0					
ANR	8480	Identifier	CHKmalloc		8366	0					
ANR	8481	ArgumentList	currentSub -> next = ( sublist * ) MALLOC ( sizeof ( sublist ) )		8366	1					
ANR	8482	Argument	currentSub -> next = ( sublist * ) MALLOC ( sizeof ( sublist ) )		8366	0					
ANR	8483	AssignmentExpression	currentSub -> next = ( sublist * ) MALLOC ( sizeof ( sublist ) )		8366	0		=			
ANR	8484	PtrMemberAccess	currentSub -> next		8366	0					
ANR	8485	Identifier	currentSub		8366	0					
ANR	8486	Identifier	next		8366	1					
ANR	8487	CastExpression	( sublist * ) MALLOC ( sizeof ( sublist ) )		8366	1					
ANR	8488	CastTarget	sublist *		8366	0					
ANR	8489	CallExpression	MALLOC ( sizeof ( sublist ) )		8366	1					
ANR	8490	Callee	MALLOC		8366	0					
ANR	8491	Identifier	MALLOC		8366	0					
ANR	8492	ArgumentList	sizeof ( sublist )		8366	1					
ANR	8493	Argument	sizeof ( sublist )		8366	0					
ANR	8494	SizeofExpression	sizeof ( sublist )		8366	0					
ANR	8495	Sizeof	sizeof		8366	0					
ANR	8496	SizeofOperand	sublist		8366	1					
ANR	8497	ExpressionStatement	currentSub = currentSub -> next	293:12:8424:8451	8366	1	True				
ANR	8498	AssignmentExpression	currentSub = currentSub -> next		8366	0		=			
ANR	8499	Identifier	currentSub		8366	0					
ANR	8500	PtrMemberAccess	currentSub -> next		8366	1					
ANR	8501	Identifier	currentSub		8366	0					
ANR	8502	Identifier	next		8366	1					
ANR	8503	ExpressionStatement	currentSub -> subscribe = strdup ( tok )	294:12:8465:8498	8366	2	True				
ANR	8504	AssignmentExpression	currentSub -> subscribe = strdup ( tok )		8366	0		=			
ANR	8505	PtrMemberAccess	currentSub -> subscribe		8366	0					
ANR	8506	Identifier	currentSub		8366	0					
ANR	8507	Identifier	subscribe		8366	1					
ANR	8508	CallExpression	strdup ( tok )		8366	1					
ANR	8509	Callee	strdup		8366	0					
ANR	8510	Identifier	strdup		8366	0					
ANR	8511	ArgumentList	tok		8366	1					
ANR	8512	Argument	tok		8366	0					
ANR	8513	Identifier	tok		8366	0					
ANR	8514	ExpressionStatement	currentSub -> next = NULL	295:12:8512:8533	8366	3	True				
ANR	8515	AssignmentExpression	currentSub -> next = NULL		8366	0		=			
ANR	8516	PtrMemberAccess	currentSub -> next		8366	0					
ANR	8517	Identifier	currentSub		8366	0					
ANR	8518	Identifier	next		8366	1					
ANR	8519	Identifier	NULL		8366	1					
ANR	8520	ElseStatement	else		8366	0					
ANR	8521	CompoundStatement		22:11:627:627	8366	0					
ANR	8522	ExpressionStatement	"head -> subscribe = strdup ( """" )"	299:8:8620:8646	8366	0	True				
ANR	8523	AssignmentExpression	"head -> subscribe = strdup ( """" )"		8366	0		=			
ANR	8524	PtrMemberAccess	head -> subscribe		8366	0					
ANR	8525	Identifier	head		8366	0					
ANR	8526	Identifier	subscribe		8366	1					
ANR	8527	CallExpression	"strdup ( """" )"		8366	1					
ANR	8528	Callee	strdup		8366	0					
ANR	8529	Identifier	strdup		8366	0					
ANR	8530	ArgumentList	""""""		8366	1					
ANR	8531	Argument	""""""		8366	0					
ANR	8532	PrimaryExpression	""""""		8366	0					
ANR	8533	ExpressionStatement	currentSub = head	302:4:8692:8709	8366	10	True				
ANR	8534	AssignmentExpression	currentSub = head		8366	0		=			
ANR	8535	Identifier	currentSub		8366	0					
ANR	8536	Identifier	head		8366	1					
ANR	8537	ExpressionStatement	"DBGPRINTF ( ""imzmq3: Subscriptions:"" )"	303:4:8715:8750	8366	11	True				
ANR	8538	CallExpression	"DBGPRINTF ( ""imzmq3: Subscriptions:"" )"		8366	0					
ANR	8539	Callee	DBGPRINTF		8366	0					
ANR	8540	Identifier	DBGPRINTF		8366	0					
ANR	8541	ArgumentList	"""imzmq3: Subscriptions:"""		8366	1					
ANR	8542	Argument	"""imzmq3: Subscriptions:"""		8366	0					
ANR	8543	PrimaryExpression	"""imzmq3: Subscriptions:"""		8366	0					
ANR	8544	ForStatement	for ( currentSub = head ; currentSub != NULL ; currentSub = currentSub -> next )		8366	12					
ANR	8545	ForInit	currentSub = head ;	304:8:8760:8777	8366	0	True				
ANR	8546	AssignmentExpression	currentSub = head		8366	0		=			
ANR	8547	Identifier	currentSub		8366	0					
ANR	8548	Identifier	head		8366	1					
ANR	8549	Condition	currentSub != NULL	304:27:8779:8796	8366	1	True				
ANR	8550	EqualityExpression	currentSub != NULL		8366	0		!=			
ANR	8551	Identifier	currentSub		8366	0					
ANR	8552	Identifier	NULL		8366	1					
ANR	8553	AssignmentExpression	currentSub = currentSub -> next	304:47:8799:8825	8366	2	True	=			
ANR	8554	Identifier	currentSub		8366	0					
ANR	8555	PtrMemberAccess	currentSub -> next		8366	1					
ANR	8556	Identifier	currentSub		8366	0					
ANR	8557	Identifier	next		8366	1					
ANR	8558	CompoundStatement		29:76:899:899	8366	3					
ANR	8559	ExpressionStatement	"DBGPRINTF ( ""'%s'"" , currentSub -> subscribe )"	305:8:8838:8878	8366	0	True				
ANR	8560	CallExpression	"DBGPRINTF ( ""'%s'"" , currentSub -> subscribe )"		8366	0					
ANR	8561	Callee	DBGPRINTF		8366	0					
ANR	8562	Identifier	DBGPRINTF		8366	0					
ANR	8563	ArgumentList	"""'%s'"""		8366	1					
ANR	8564	Argument	"""'%s'"""		8366	0					
ANR	8565	PrimaryExpression	"""'%s'"""		8366	0					
ANR	8566	Argument	currentSub -> subscribe		8366	1					
ANR	8567	PtrMemberAccess	currentSub -> subscribe		8366	0					
ANR	8568	Identifier	currentSub		8366	0					
ANR	8569	Identifier	subscribe		8366	1					
ANR	8570	ExpressionStatement	"DBGPRINTF ( ""\\n"" )"	307:4:8891:8906	8366	13	True				
ANR	8571	CallExpression	"DBGPRINTF ( ""\\n"" )"		8366	0					
ANR	8572	Callee	DBGPRINTF		8366	0					
ANR	8573	Identifier	DBGPRINTF		8366	0					
ANR	8574	ArgumentList	"""\\n"""		8366	1					
ANR	8575	Argument	"""\\n"""		8366	0					
ANR	8576	PrimaryExpression	"""\\n"""		8366	0					
ANR	8577	Label	finalize_it :	309:0:8913:8924	8366	14	True				
ANR	8578	Identifier	finalize_it		8366	0					
ANR	8579	ExpressionStatement	RETiRet	310:4:8930:8937	8366	15	True				
ANR	8580	Identifier	RETiRet		8366	0					
ANR	8581	ReturnType	static rsRetVal		8366	1					
ANR	8582	Identifier	parseSubscriptions		8366	2					
ANR	8583	ParameterList	"char * subscribes , sublist * * subList"		8366	3					
ANR	8584	Parameter	char * subscribes	276:35:7892:7907	8366	0	True				
ANR	8585	ParameterType	char *		8366	0					
ANR	8586	Identifier	subscribes		8366	1					
ANR	8587	Parameter	sublist * * subList	276:53:7910:7926	8366	1	True				
ANR	8588	ParameterType	sublist * *		8366	0					
ANR	8589	Identifier	subList		8366	1					
ANR	8590	CFGEntryNode	ENTRY		8366		True				
ANR	8591	CFGExitNode	EXIT		8366		True				
ANR	8592	Symbol	subscribes		8366						
ANR	8593	Symbol	subList		8366						
ANR	8594	Symbol	NULL		8366						
ANR	8595	Symbol	currentSub -> next		8366						
ANR	8596	Symbol	currentSub -> subscribe		8366						
ANR	8597	Symbol	* head		8366						
ANR	8598	Symbol	strtok		8366						
ANR	8599	Symbol	head -> subscribe		8366						
ANR	8600	Symbol	* currentSub		8366						
ANR	8601	Symbol	currentSub		8366						
ANR	8602	Symbol	head		8366						
ANR	8603	Symbol	tok		8366						
ANR	8604	Symbol	MALLOC		8366						
ANR	8605	Symbol	* subList		8366						
ANR	8606	Symbol	head -> next		8366						
ANR	8607	Symbol	strdup		8366						
ANR	8608	Function	validateConfig	313:0:8942:10012							
ANR	8609	FunctionDef	validateConfig (instanceConf_t * info)		8608	0					
ANR	8610	CompoundStatement		313:53:8995:10012	8608	0					
ANR	8611	IfStatement	if ( info -> type == - 1 )		8608	0					
ANR	8612	Condition	info -> type == - 1	315:8:9006:9021	8608	0	True				
ANR	8613	EqualityExpression	info -> type == - 1		8608	0		==			
ANR	8614	PtrMemberAccess	info -> type		8608	0					
ANR	8615	Identifier	info		8608	0					
ANR	8616	Identifier	type		8608	1					
ANR	8617	UnaryOperationExpression	- 1		8608	1					
ANR	8618	UnaryOperator	-		8608	0					
ANR	8619	PrimaryExpression	1		8608	1					
ANR	8620	CompoundStatement		3:26:28:28	8608	1					
ANR	8621	ExpressionStatement	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""you entered an invalid type"" )"	316:8:9034:9130	8608	0	True				
ANR	8622	CallExpression	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""you entered an invalid type"" )"		8608	0					
ANR	8623	Callee	errmsg . LogError		8608	0					
ANR	8624	MemberAccess	errmsg . LogError		8608	0					
ANR	8625	Identifier	errmsg		8608	0					
ANR	8626	Identifier	LogError		8608	1					
ANR	8627	ArgumentList	0		8608	1					
ANR	8628	Argument	0		8608	0					
ANR	8629	PrimaryExpression	0		8608	0					
ANR	8630	Argument	RS_RET_INVALID_PARAMS		8608	1					
ANR	8631	Identifier	RS_RET_INVALID_PARAMS		8608	0					
ANR	8632	Argument	"""you entered an invalid type"""		8608	2					
ANR	8633	PrimaryExpression	"""you entered an invalid type"""		8608	0					
ANR	8634	ReturnStatement	return RS_RET_INVALID_PARAMS ;	318:8:9140:9168	8608	1	True				
ANR	8635	Identifier	RS_RET_INVALID_PARAMS		8608	0					
ANR	8636	IfStatement	if ( info -> action == - 1 )		8608	1					
ANR	8637	Condition	info -> action == - 1	320:8:9184:9201	8608	0	True				
ANR	8638	EqualityExpression	info -> action == - 1		8608	0		==			
ANR	8639	PtrMemberAccess	info -> action		8608	0					
ANR	8640	Identifier	info		8608	0					
ANR	8641	Identifier	action		8608	1					
ANR	8642	UnaryOperationExpression	- 1		8608	1					
ANR	8643	UnaryOperator	-		8608	0					
ANR	8644	PrimaryExpression	1		8608	1					
ANR	8645	CompoundStatement		8:28:208:208	8608	1					
ANR	8646	ExpressionStatement	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""you entered an invalid action"" )"	321:8:9214:9312	8608	0	True				
ANR	8647	CallExpression	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""you entered an invalid action"" )"		8608	0					
ANR	8648	Callee	errmsg . LogError		8608	0					
ANR	8649	MemberAccess	errmsg . LogError		8608	0					
ANR	8650	Identifier	errmsg		8608	0					
ANR	8651	Identifier	LogError		8608	1					
ANR	8652	ArgumentList	0		8608	1					
ANR	8653	Argument	0		8608	0					
ANR	8654	PrimaryExpression	0		8608	0					
ANR	8655	Argument	RS_RET_INVALID_PARAMS		8608	1					
ANR	8656	Identifier	RS_RET_INVALID_PARAMS		8608	0					
ANR	8657	Argument	"""you entered an invalid action"""		8608	2					
ANR	8658	PrimaryExpression	"""you entered an invalid action"""		8608	0					
ANR	8659	ReturnStatement	return RS_RET_INVALID_PARAMS ;	323:8:9322:9350	8608	1	True				
ANR	8660	Identifier	RS_RET_INVALID_PARAMS		8608	0					
ANR	8661	IfStatement	if ( info -> description == NULL )		8608	2					
ANR	8662	Condition	info -> description == NULL	325:8:9366:9390	8608	0	True				
ANR	8663	EqualityExpression	info -> description == NULL		8608	0		==			
ANR	8664	PtrMemberAccess	info -> description		8608	0					
ANR	8665	Identifier	info		8608	0					
ANR	8666	Identifier	description		8608	1					
ANR	8667	Identifier	NULL		8608	1					
ANR	8668	CompoundStatement		13:35:397:397	8608	1					
ANR	8669	ExpressionStatement	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""you didn't enter a description"" )"	326:8:9403:9502	8608	0	True				
ANR	8670	CallExpression	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""you didn't enter a description"" )"		8608	0					
ANR	8671	Callee	errmsg . LogError		8608	0					
ANR	8672	MemberAccess	errmsg . LogError		8608	0					
ANR	8673	Identifier	errmsg		8608	0					
ANR	8674	Identifier	LogError		8608	1					
ANR	8675	ArgumentList	0		8608	1					
ANR	8676	Argument	0		8608	0					
ANR	8677	PrimaryExpression	0		8608	0					
ANR	8678	Argument	RS_RET_INVALID_PARAMS		8608	1					
ANR	8679	Identifier	RS_RET_INVALID_PARAMS		8608	0					
ANR	8680	Argument	"""you didn't enter a description"""		8608	2					
ANR	8681	PrimaryExpression	"""you didn't enter a description"""		8608	0					
ANR	8682	ReturnStatement	return RS_RET_INVALID_PARAMS ;	328:8:9512:9540	8608	1	True				
ANR	8683	Identifier	RS_RET_INVALID_PARAMS		8608	0					
ANR	8684	IfStatement	if ( info -> type == ZMQ_SUB && info -> subscriptions == NULL )		8608	3					
ANR	8685	Condition	info -> type == ZMQ_SUB && info -> subscriptions == NULL	330:7:9555:9606	8608	0	True				
ANR	8686	AndExpression	info -> type == ZMQ_SUB && info -> subscriptions == NULL		8608	0		&&			
ANR	8687	EqualityExpression	info -> type == ZMQ_SUB		8608	0		==			
ANR	8688	PtrMemberAccess	info -> type		8608	0					
ANR	8689	Identifier	info		8608	0					
ANR	8690	Identifier	type		8608	1					
ANR	8691	Identifier	ZMQ_SUB		8608	1					
ANR	8692	EqualityExpression	info -> subscriptions == NULL		8608	1		==			
ANR	8693	PtrMemberAccess	info -> subscriptions		8608	0					
ANR	8694	Identifier	info		8608	0					
ANR	8695	Identifier	subscriptions		8608	1					
ANR	8696	Identifier	NULL		8608	1					
ANR	8697	CompoundStatement		18:61:613:613	8608	1					
ANR	8698	ExpressionStatement	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""SUB sockets need a subscription"" )"	331:8:9619:9719	8608	0	True				
ANR	8699	CallExpression	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""SUB sockets need a subscription"" )"		8608	0					
ANR	8700	Callee	errmsg . LogError		8608	0					
ANR	8701	MemberAccess	errmsg . LogError		8608	0					
ANR	8702	Identifier	errmsg		8608	0					
ANR	8703	Identifier	LogError		8608	1					
ANR	8704	ArgumentList	0		8608	1					
ANR	8705	Argument	0		8608	0					
ANR	8706	PrimaryExpression	0		8608	0					
ANR	8707	Argument	RS_RET_INVALID_PARAMS		8608	1					
ANR	8708	Identifier	RS_RET_INVALID_PARAMS		8608	0					
ANR	8709	Argument	"""SUB sockets need a subscription"""		8608	2					
ANR	8710	PrimaryExpression	"""SUB sockets need a subscription"""		8608	0					
ANR	8711	ReturnStatement	return RS_RET_INVALID_PARAMS ;	333:8:9729:9757	8608	1	True				
ANR	8712	Identifier	RS_RET_INVALID_PARAMS		8608	0					
ANR	8713	IfStatement	if ( info -> type != ZMQ_SUB && info -> subscriptions != NULL )		8608	4					
ANR	8714	Condition	info -> type != ZMQ_SUB && info -> subscriptions != NULL	335:7:9772:9823	8608	0	True				
ANR	8715	AndExpression	info -> type != ZMQ_SUB && info -> subscriptions != NULL		8608	0		&&			
ANR	8716	EqualityExpression	info -> type != ZMQ_SUB		8608	0		!=			
ANR	8717	PtrMemberAccess	info -> type		8608	0					
ANR	8718	Identifier	info		8608	0					
ANR	8719	Identifier	type		8608	1					
ANR	8720	Identifier	ZMQ_SUB		8608	1					
ANR	8721	EqualityExpression	info -> subscriptions != NULL		8608	1		!=			
ANR	8722	PtrMemberAccess	info -> subscriptions		8608	0					
ANR	8723	Identifier	info		8608	0					
ANR	8724	Identifier	subscriptions		8608	1					
ANR	8725	Identifier	NULL		8608	1					
ANR	8726	CompoundStatement		23:61:830:830	8608	1					
ANR	8727	ExpressionStatement	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""only SUB sockets can have subscriptions"" )"	336:8:9836:9944	8608	0	True				
ANR	8728	CallExpression	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""only SUB sockets can have subscriptions"" )"		8608	0					
ANR	8729	Callee	errmsg . LogError		8608	0					
ANR	8730	MemberAccess	errmsg . LogError		8608	0					
ANR	8731	Identifier	errmsg		8608	0					
ANR	8732	Identifier	LogError		8608	1					
ANR	8733	ArgumentList	0		8608	1					
ANR	8734	Argument	0		8608	0					
ANR	8735	PrimaryExpression	0		8608	0					
ANR	8736	Argument	RS_RET_INVALID_PARAMS		8608	1					
ANR	8737	Identifier	RS_RET_INVALID_PARAMS		8608	0					
ANR	8738	Argument	"""only SUB sockets can have subscriptions"""		8608	2					
ANR	8739	PrimaryExpression	"""only SUB sockets can have subscriptions"""		8608	0					
ANR	8740	ReturnStatement	return RS_RET_INVALID_PARAMS ;	338:8:9954:9982	8608	1	True				
ANR	8741	Identifier	RS_RET_INVALID_PARAMS		8608	0					
ANR	8742	ReturnStatement	return RS_RET_OK ;	340:4:9994:10010	8608	5	True				
ANR	8743	Identifier	RS_RET_OK		8608	0					
ANR	8744	ReturnType	static rsRetVal		8608	1					
ANR	8745	Identifier	validateConfig		8608	2					
ANR	8746	ParameterList	instanceConf_t * info		8608	3					
ANR	8747	Parameter	instanceConf_t * info	313:31:8973:8992	8608	0	True				
ANR	8748	ParameterType	instanceConf_t *		8608	0					
ANR	8749	Identifier	info		8608	1					
ANR	8750	CFGEntryNode	ENTRY		8608		True				
ANR	8751	CFGExitNode	EXIT		8608		True				
ANR	8752	Symbol	info -> description		8608						
ANR	8753	Symbol	info -> type		8608						
ANR	8754	Symbol	NULL		8608						
ANR	8755	Symbol	info -> subscriptions		8608						
ANR	8756	Symbol	RS_RET_OK		8608						
ANR	8757	Symbol	info -> action		8608						
ANR	8758	Symbol	ZMQ_SUB		8608						
ANR	8759	Symbol	errmsg		8608						
ANR	8760	Symbol	* info		8608						
ANR	8761	Symbol	RS_RET_INVALID_PARAMS		8608						
ANR	8762	Symbol	info		8608						
ANR	8763	Function	createContext	343:0:10015:10770							
ANR	8764	FunctionDef	createContext ()		8763	0					
ANR	8765	CompoundStatement		343:32:10047:10770	8763	0					
ANR	8766	IfStatement	if ( s_context == NULL )		8763	0					
ANR	8767	Condition	s_context == NULL	344:8:10057:10073	8763	0	True				
ANR	8768	EqualityExpression	s_context == NULL		8763	0		==			
ANR	8769	Identifier	s_context		8763	0					
ANR	8770	Identifier	NULL		8763	1					
ANR	8771	CompoundStatement		2:27:28:28	8763	1					
ANR	8772	ExpressionStatement	"DBGPRINTF ( ""imzmq3: creating zctx..."" )"	345:8:10086:10123	8763	0	True				
ANR	8773	CallExpression	"DBGPRINTF ( ""imzmq3: creating zctx..."" )"		8763	0					
ANR	8774	Callee	DBGPRINTF		8763	0					
ANR	8775	Identifier	DBGPRINTF		8763	0					
ANR	8776	ArgumentList	"""imzmq3: creating zctx..."""		8763	1					
ANR	8777	Argument	"""imzmq3: creating zctx..."""		8763	0					
ANR	8778	PrimaryExpression	"""imzmq3: creating zctx..."""		8763	0					
ANR	8779	ExpressionStatement	zsys_handler_set ( NULL )	346:8:10133:10155	8763	1	True				
ANR	8780	CallExpression	zsys_handler_set ( NULL )		8763	0					
ANR	8781	Callee	zsys_handler_set		8763	0					
ANR	8782	Identifier	zsys_handler_set		8763	0					
ANR	8783	ArgumentList	NULL		8763	1					
ANR	8784	Argument	NULL		8763	0					
ANR	8785	Identifier	NULL		8763	0					
ANR	8786	ExpressionStatement	s_context = zctx_new ( )	347:8:10165:10187	8763	2	True				
ANR	8787	AssignmentExpression	s_context = zctx_new ( )		8763	0		=			
ANR	8788	Identifier	s_context		8763	0					
ANR	8789	CallExpression	zctx_new ( )		8763	1					
ANR	8790	Callee	zctx_new		8763	0					
ANR	8791	Identifier	zctx_new		8763	0					
ANR	8792	ArgumentList			8763	1					
ANR	8793	IfStatement	if ( s_context == NULL )		8763	3					
ANR	8794	Condition	s_context == NULL	349:12:10210:10226	8763	0	True				
ANR	8795	EqualityExpression	s_context == NULL		8763	0		==			
ANR	8796	Identifier	s_context		8763	0					
ANR	8797	Identifier	NULL		8763	1					
ANR	8798	CompoundStatement		7:31:181:181	8763	1					
ANR	8799	ExpressionStatement	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""zctx_new failed: %s"" , zmq_strerror ( errno ) )"	350:12:10243:10384	8763	0	True				
ANR	8800	CallExpression	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""zctx_new failed: %s"" , zmq_strerror ( errno ) )"		8763	0					
ANR	8801	Callee	errmsg . LogError		8763	0					
ANR	8802	MemberAccess	errmsg . LogError		8763	0					
ANR	8803	Identifier	errmsg		8763	0					
ANR	8804	Identifier	LogError		8763	1					
ANR	8805	ArgumentList	0		8763	1					
ANR	8806	Argument	0		8763	0					
ANR	8807	PrimaryExpression	0		8763	0					
ANR	8808	Argument	RS_RET_INVALID_PARAMS		8763	1					
ANR	8809	Identifier	RS_RET_INVALID_PARAMS		8763	0					
ANR	8810	Argument	"""zctx_new failed: %s"""		8763	2					
ANR	8811	PrimaryExpression	"""zctx_new failed: %s"""		8763	0					
ANR	8812	Argument	zmq_strerror ( errno )		8763	3					
ANR	8813	CallExpression	zmq_strerror ( errno )		8763	0					
ANR	8814	Callee	zmq_strerror		8763	0					
ANR	8815	Identifier	zmq_strerror		8763	0					
ANR	8816	ArgumentList	errno		8763	1					
ANR	8817	Argument	errno		8763	0					
ANR	8818	Identifier	errno		8763	0					
ANR	8819	ReturnStatement	return RS_RET_INVALID_PARAMS ;	354:12:10466:10494	8763	1	True				
ANR	8820	Identifier	RS_RET_INVALID_PARAMS		8763	0					
ANR	8821	ExpressionStatement	"DBGPRINTF ( ""success!\\n"" )"	356:8:10514:10537	8763	4	True				
ANR	8822	CallExpression	"DBGPRINTF ( ""success!\\n"" )"		8763	0					
ANR	8823	Callee	DBGPRINTF		8763	0					
ANR	8824	Identifier	DBGPRINTF		8763	0					
ANR	8825	ArgumentList	"""success!\\n"""		8763	1					
ANR	8826	Argument	"""success!\\n"""		8763	0					
ANR	8827	PrimaryExpression	"""success!\\n"""		8763	0					
ANR	8828	IfStatement	if ( runModConf -> io_threads > 1 )		8763	5					
ANR	8829	Condition	runModConf -> io_threads > 1	357:12:10551:10576	8763	0	True				
ANR	8830	RelationalExpression	runModConf -> io_threads > 1		8763	0		>			
ANR	8831	PtrMemberAccess	runModConf -> io_threads		8763	0					
ANR	8832	Identifier	runModConf		8763	0					
ANR	8833	Identifier	io_threads		8763	1					
ANR	8834	PrimaryExpression	1		8763	1					
ANR	8835	CompoundStatement		15:40:531:531	8763	1					
ANR	8836	ExpressionStatement	"DBGPRINTF ( ""setting io worker threads to %d\\n"" , runModConf -> io_threads )"	358:12:10593:10663	8763	0	True				
ANR	8837	CallExpression	"DBGPRINTF ( ""setting io worker threads to %d\\n"" , runModConf -> io_threads )"		8763	0					
ANR	8838	Callee	DBGPRINTF		8763	0					
ANR	8839	Identifier	DBGPRINTF		8763	0					
ANR	8840	ArgumentList	"""setting io worker threads to %d\\n"""		8763	1					
ANR	8841	Argument	"""setting io worker threads to %d\\n"""		8763	0					
ANR	8842	PrimaryExpression	"""setting io worker threads to %d\\n"""		8763	0					
ANR	8843	Argument	runModConf -> io_threads		8763	1					
ANR	8844	PtrMemberAccess	runModConf -> io_threads		8763	0					
ANR	8845	Identifier	runModConf		8763	0					
ANR	8846	Identifier	io_threads		8763	1					
ANR	8847	ExpressionStatement	"zctx_set_iothreads ( s_context , runModConf -> io_threads )"	359:12:10677:10730	8763	1	True				
ANR	8848	CallExpression	"zctx_set_iothreads ( s_context , runModConf -> io_threads )"		8763	0					
ANR	8849	Callee	zctx_set_iothreads		8763	0					
ANR	8850	Identifier	zctx_set_iothreads		8763	0					
ANR	8851	ArgumentList	s_context		8763	1					
ANR	8852	Argument	s_context		8763	0					
ANR	8853	Identifier	s_context		8763	0					
ANR	8854	Argument	runModConf -> io_threads		8763	1					
ANR	8855	PtrMemberAccess	runModConf -> io_threads		8763	0					
ANR	8856	Identifier	runModConf		8763	0					
ANR	8857	Identifier	io_threads		8763	1					
ANR	8858	ReturnStatement	return RS_RET_OK ;	362:4:10752:10768	8763	1	True				
ANR	8859	Identifier	RS_RET_OK		8763	0					
ANR	8860	ReturnType	static rsRetVal		8763	1					
ANR	8861	Identifier	createContext		8763	2					
ANR	8862	ParameterList			8763	3					
ANR	8863	CFGEntryNode	ENTRY		8763		True				
ANR	8864	CFGExitNode	EXIT		8763		True				
ANR	8865	Symbol	errno		8763						
ANR	8866	Symbol	NULL		8763						
ANR	8867	Symbol	* runModConf		8763						
ANR	8868	Symbol	RS_RET_OK		8763						
ANR	8869	Symbol	s_context		8763						
ANR	8870	Symbol	zmq_strerror		8763						
ANR	8871	Symbol	errmsg		8763						
ANR	8872	Symbol	zctx_new		8763						
ANR	8873	Symbol	RS_RET_INVALID_PARAMS		8763						
ANR	8874	Symbol	runModConf		8763						
ANR	8875	Symbol	runModConf -> io_threads		8763						
ANR	8876	Function	createSocket	365:0:10773:13900							
ANR	8877	FunctionDef	"createSocket (instanceConf_t * info , void * * sock)"		8876	0					
ANR	8878	CompoundStatement		365:64:10837:13900	8876	0					
ANR	8879	IdentifierDeclStatement	int rv ;	366:4:10843:10849	8876	0	True				
ANR	8880	IdentifierDecl	rv		8876	0					
ANR	8881	IdentifierDeclType	int		8876	0					
ANR	8882	Identifier	rv		8876	1					
ANR	8883	IdentifierDeclStatement	sublist * sub ;	367:4:10855:10867	8876	1	True				
ANR	8884	IdentifierDecl	* sub		8876	0					
ANR	8885	IdentifierDeclType	sublist *		8876	0					
ANR	8886	Identifier	sub		8876	1					
ANR	8887	ExpressionStatement	"* sock = zsocket_new ( s_context , info -> type )"	369:4:10874:10916	8876	2	True				
ANR	8888	AssignmentExpression	"* sock = zsocket_new ( s_context , info -> type )"		8876	0		=			
ANR	8889	UnaryOperationExpression	* sock		8876	0					
ANR	8890	UnaryOperator	*		8876	0					
ANR	8891	Identifier	sock		8876	1					
ANR	8892	CallExpression	"zsocket_new ( s_context , info -> type )"		8876	1					
ANR	8893	Callee	zsocket_new		8876	0					
ANR	8894	Identifier	zsocket_new		8876	0					
ANR	8895	ArgumentList	s_context		8876	1					
ANR	8896	Argument	s_context		8876	0					
ANR	8897	Identifier	s_context		8876	0					
ANR	8898	Argument	info -> type		8876	1					
ANR	8899	PtrMemberAccess	info -> type		8876	0					
ANR	8900	Identifier	info		8876	0					
ANR	8901	Identifier	type		8876	1					
ANR	8902	IfStatement	if ( ! sock )		8876	3					
ANR	8903	Condition	! sock	370:8:10926:10930	8876	0	True				
ANR	8904	UnaryOperationExpression	! sock		8876	0					
ANR	8905	UnaryOperator	!		8876	0					
ANR	8906	Identifier	sock		8876	1					
ANR	8907	CompoundStatement		6:15:95:95	8876	1					
ANR	8908	ExpressionStatement	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""zsocket_new failed: %s, for type %d"" , zmq_strerror ( errno ) , info -> type )"	371:8:10943:11127	8876	0	True				
ANR	8909	CallExpression	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""zsocket_new failed: %s, for type %d"" , zmq_strerror ( errno ) , info -> type )"		8876	0					
ANR	8910	Callee	errmsg . LogError		8876	0					
ANR	8911	MemberAccess	errmsg . LogError		8876	0					
ANR	8912	Identifier	errmsg		8876	0					
ANR	8913	Identifier	LogError		8876	1					
ANR	8914	ArgumentList	0		8876	1					
ANR	8915	Argument	0		8876	0					
ANR	8916	PrimaryExpression	0		8876	0					
ANR	8917	Argument	RS_RET_INVALID_PARAMS		8876	1					
ANR	8918	Identifier	RS_RET_INVALID_PARAMS		8876	0					
ANR	8919	Argument	"""zsocket_new failed: %s, for type %d"""		8876	2					
ANR	8920	PrimaryExpression	"""zsocket_new failed: %s, for type %d"""		8876	0					
ANR	8921	Argument	zmq_strerror ( errno )		8876	3					
ANR	8922	CallExpression	zmq_strerror ( errno )		8876	0					
ANR	8923	Callee	zmq_strerror		8876	0					
ANR	8924	Identifier	zmq_strerror		8876	0					
ANR	8925	ArgumentList	errno		8876	1					
ANR	8926	Argument	errno		8876	0					
ANR	8927	Identifier	errno		8876	0					
ANR	8928	Argument	info -> type		8876	4					
ANR	8929	PtrMemberAccess	info -> type		8876	0					
ANR	8930	Identifier	info		8876	0					
ANR	8931	Identifier	type		8876	1					
ANR	8932	ReturnStatement	return RS_RET_INVALID_PARAMS ;	376:8:11187:11215	8876	1	True				
ANR	8933	Identifier	RS_RET_INVALID_PARAMS		8876	0					
ANR	8934	Statement	DBGPRINTF	378:4:11227:11235	8876	4	True				
ANR	8935	Statement	(	378:13:11236:11236	8876	5	True				
ANR	8936	Statement	"""imzmq3: socket of type %d created successfully\\n"""	378:14:11237:11286	8876	6	True				
ANR	8937	Statement	","	378:64:11287:11287	8876	7	True				
ANR	8938	Statement	info	378:66:11289:11292	8876	8	True				
ANR	8939	Statement	->	378:70:11293:11294	8876	9	True				
ANR	8940	Statement	type	378:72:11295:11298	8876	10	True				
ANR	8941	Statement	)	378:76:11299:11299	8876	11	True				
ANR	8942	IfStatement	if ( info -> identity )		8876	12					
ANR	8943	Condition	info -> identity	380:8:11358:11371	8876	0	True				
ANR	8944	PtrMemberAccess	info -> identity		8876	0					
ANR	8945	Identifier	info		8876	0					
ANR	8946	Identifier	identity		8876	1					
ANR	8947	ExpressionStatement	"zsocket_set_identity ( * sock , info -> identity )"	380:36:11386:11429	8876	1	True				
ANR	8948	CallExpression	"zsocket_set_identity ( * sock , info -> identity )"		8876	0					
ANR	8949	Callee	zsocket_set_identity		8876	0					
ANR	8950	Identifier	zsocket_set_identity		8876	0					
ANR	8951	ArgumentList	* sock		8876	1					
ANR	8952	Argument	* sock		8876	0					
ANR	8953	UnaryOperationExpression	* sock		8876	0					
ANR	8954	UnaryOperator	*		8876	0					
ANR	8955	Identifier	sock		8876	1					
ANR	8956	Argument	info -> identity		8876	1					
ANR	8957	PtrMemberAccess	info -> identity		8876	0					
ANR	8958	Identifier	info		8876	0					
ANR	8959	Identifier	identity		8876	1					
ANR	8960	IfStatement	if ( info -> sndBuf > - 1 )		8876	13					
ANR	8961	Condition	info -> sndBuf > - 1	381:8:11439:11455	8876	0	True				
ANR	8962	RelationalExpression	info -> sndBuf > - 1		8876	0		>			
ANR	8963	PtrMemberAccess	info -> sndBuf		8876	0					
ANR	8964	Identifier	info		8876	0					
ANR	8965	Identifier	sndBuf		8876	1					
ANR	8966	UnaryOperationExpression	- 1		8876	1					
ANR	8967	UnaryOperator	-		8876	0					
ANR	8968	PrimaryExpression	1		8876	1					
ANR	8969	ExpressionStatement	"zsocket_set_sndbuf ( * sock , info -> sndBuf )"	381:36:11467:11506	8876	1	True				
ANR	8970	CallExpression	"zsocket_set_sndbuf ( * sock , info -> sndBuf )"		8876	0					
ANR	8971	Callee	zsocket_set_sndbuf		8876	0					
ANR	8972	Identifier	zsocket_set_sndbuf		8876	0					
ANR	8973	ArgumentList	* sock		8876	1					
ANR	8974	Argument	* sock		8876	0					
ANR	8975	UnaryOperationExpression	* sock		8876	0					
ANR	8976	UnaryOperator	*		8876	0					
ANR	8977	Identifier	sock		8876	1					
ANR	8978	Argument	info -> sndBuf		8876	1					
ANR	8979	PtrMemberAccess	info -> sndBuf		8876	0					
ANR	8980	Identifier	info		8876	0					
ANR	8981	Identifier	sndBuf		8876	1					
ANR	8982	IfStatement	if ( info -> rcvBuf > - 1 )		8876	14					
ANR	8983	Condition	info -> rcvBuf > - 1	382:8:11516:11532	8876	0	True				
ANR	8984	RelationalExpression	info -> rcvBuf > - 1		8876	0		>			
ANR	8985	PtrMemberAccess	info -> rcvBuf		8876	0					
ANR	8986	Identifier	info		8876	0					
ANR	8987	Identifier	rcvBuf		8876	1					
ANR	8988	UnaryOperationExpression	- 1		8876	1					
ANR	8989	UnaryOperator	-		8876	0					
ANR	8990	PrimaryExpression	1		8876	1					
ANR	8991	ExpressionStatement	"zsocket_set_rcvbuf ( * sock , info -> rcvBuf )"	382:36:11544:11583	8876	1	True				
ANR	8992	CallExpression	"zsocket_set_rcvbuf ( * sock , info -> rcvBuf )"		8876	0					
ANR	8993	Callee	zsocket_set_rcvbuf		8876	0					
ANR	8994	Identifier	zsocket_set_rcvbuf		8876	0					
ANR	8995	ArgumentList	* sock		8876	1					
ANR	8996	Argument	* sock		8876	0					
ANR	8997	UnaryOperationExpression	* sock		8876	0					
ANR	8998	UnaryOperator	*		8876	0					
ANR	8999	Identifier	sock		8876	1					
ANR	9000	Argument	info -> rcvBuf		8876	1					
ANR	9001	PtrMemberAccess	info -> rcvBuf		8876	0					
ANR	9002	Identifier	info		8876	0					
ANR	9003	Identifier	rcvBuf		8876	1					
ANR	9004	IfStatement	if ( info -> linger > - 1 )		8876	15					
ANR	9005	Condition	info -> linger > - 1	383:8:11593:11609	8876	0	True				
ANR	9006	RelationalExpression	info -> linger > - 1		8876	0		>			
ANR	9007	PtrMemberAccess	info -> linger		8876	0					
ANR	9008	Identifier	info		8876	0					
ANR	9009	Identifier	linger		8876	1					
ANR	9010	UnaryOperationExpression	- 1		8876	1					
ANR	9011	UnaryOperator	-		8876	0					
ANR	9012	PrimaryExpression	1		8876	1					
ANR	9013	ExpressionStatement	"zsocket_set_linger ( * sock , info -> linger )"	383:36:11621:11660	8876	1	True				
ANR	9014	CallExpression	"zsocket_set_linger ( * sock , info -> linger )"		8876	0					
ANR	9015	Callee	zsocket_set_linger		8876	0					
ANR	9016	Identifier	zsocket_set_linger		8876	0					
ANR	9017	ArgumentList	* sock		8876	1					
ANR	9018	Argument	* sock		8876	0					
ANR	9019	UnaryOperationExpression	* sock		8876	0					
ANR	9020	UnaryOperator	*		8876	0					
ANR	9021	Identifier	sock		8876	1					
ANR	9022	Argument	info -> linger		8876	1					
ANR	9023	PtrMemberAccess	info -> linger		8876	0					
ANR	9024	Identifier	info		8876	0					
ANR	9025	Identifier	linger		8876	1					
ANR	9026	IfStatement	if ( info -> backlog > - 1 )		8876	16					
ANR	9027	Condition	info -> backlog > - 1	384:8:11670:11687	8876	0	True				
ANR	9028	RelationalExpression	info -> backlog > - 1		8876	0		>			
ANR	9029	PtrMemberAccess	info -> backlog		8876	0					
ANR	9030	Identifier	info		8876	0					
ANR	9031	Identifier	backlog		8876	1					
ANR	9032	UnaryOperationExpression	- 1		8876	1					
ANR	9033	UnaryOperator	-		8876	0					
ANR	9034	PrimaryExpression	1		8876	1					
ANR	9035	ExpressionStatement	"zsocket_set_backlog ( * sock , info -> backlog )"	384:36:11698:11739	8876	1	True				
ANR	9036	CallExpression	"zsocket_set_backlog ( * sock , info -> backlog )"		8876	0					
ANR	9037	Callee	zsocket_set_backlog		8876	0					
ANR	9038	Identifier	zsocket_set_backlog		8876	0					
ANR	9039	ArgumentList	* sock		8876	1					
ANR	9040	Argument	* sock		8876	0					
ANR	9041	UnaryOperationExpression	* sock		8876	0					
ANR	9042	UnaryOperator	*		8876	0					
ANR	9043	Identifier	sock		8876	1					
ANR	9044	Argument	info -> backlog		8876	1					
ANR	9045	PtrMemberAccess	info -> backlog		8876	0					
ANR	9046	Identifier	info		8876	0					
ANR	9047	Identifier	backlog		8876	1					
ANR	9048	IfStatement	if ( info -> sndTimeout > - 1 )		8876	17					
ANR	9049	Condition	info -> sndTimeout > - 1	385:8:11749:11769	8876	0	True				
ANR	9050	RelationalExpression	info -> sndTimeout > - 1		8876	0		>			
ANR	9051	PtrMemberAccess	info -> sndTimeout		8876	0					
ANR	9052	Identifier	info		8876	0					
ANR	9053	Identifier	sndTimeout		8876	1					
ANR	9054	UnaryOperationExpression	- 1		8876	1					
ANR	9055	UnaryOperator	-		8876	0					
ANR	9056	PrimaryExpression	1		8876	1					
ANR	9057	ExpressionStatement	"zsocket_set_sndtimeo ( * sock , info -> sndTimeout )"	385:36:11777:11822	8876	1	True				
ANR	9058	CallExpression	"zsocket_set_sndtimeo ( * sock , info -> sndTimeout )"		8876	0					
ANR	9059	Callee	zsocket_set_sndtimeo		8876	0					
ANR	9060	Identifier	zsocket_set_sndtimeo		8876	0					
ANR	9061	ArgumentList	* sock		8876	1					
ANR	9062	Argument	* sock		8876	0					
ANR	9063	UnaryOperationExpression	* sock		8876	0					
ANR	9064	UnaryOperator	*		8876	0					
ANR	9065	Identifier	sock		8876	1					
ANR	9066	Argument	info -> sndTimeout		8876	1					
ANR	9067	PtrMemberAccess	info -> sndTimeout		8876	0					
ANR	9068	Identifier	info		8876	0					
ANR	9069	Identifier	sndTimeout		8876	1					
ANR	9070	IfStatement	if ( info -> rcvTimeout > - 1 )		8876	18					
ANR	9071	Condition	info -> rcvTimeout > - 1	386:8:11832:11852	8876	0	True				
ANR	9072	RelationalExpression	info -> rcvTimeout > - 1		8876	0		>			
ANR	9073	PtrMemberAccess	info -> rcvTimeout		8876	0					
ANR	9074	Identifier	info		8876	0					
ANR	9075	Identifier	rcvTimeout		8876	1					
ANR	9076	UnaryOperationExpression	- 1		8876	1					
ANR	9077	UnaryOperator	-		8876	0					
ANR	9078	PrimaryExpression	1		8876	1					
ANR	9079	ExpressionStatement	"zsocket_set_rcvtimeo ( * sock , info -> rcvTimeout )"	386:36:11860:11905	8876	1	True				
ANR	9080	CallExpression	"zsocket_set_rcvtimeo ( * sock , info -> rcvTimeout )"		8876	0					
ANR	9081	Callee	zsocket_set_rcvtimeo		8876	0					
ANR	9082	Identifier	zsocket_set_rcvtimeo		8876	0					
ANR	9083	ArgumentList	* sock		8876	1					
ANR	9084	Argument	* sock		8876	0					
ANR	9085	UnaryOperationExpression	* sock		8876	0					
ANR	9086	UnaryOperator	*		8876	0					
ANR	9087	Identifier	sock		8876	1					
ANR	9088	Argument	info -> rcvTimeout		8876	1					
ANR	9089	PtrMemberAccess	info -> rcvTimeout		8876	0					
ANR	9090	Identifier	info		8876	0					
ANR	9091	Identifier	rcvTimeout		8876	1					
ANR	9092	IfStatement	if ( info -> maxMsgSize > - 1 )		8876	19					
ANR	9093	Condition	info -> maxMsgSize > - 1	387:8:11915:11935	8876	0	True				
ANR	9094	RelationalExpression	info -> maxMsgSize > - 1		8876	0		>			
ANR	9095	PtrMemberAccess	info -> maxMsgSize		8876	0					
ANR	9096	Identifier	info		8876	0					
ANR	9097	Identifier	maxMsgSize		8876	1					
ANR	9098	UnaryOperationExpression	- 1		8876	1					
ANR	9099	UnaryOperator	-		8876	0					
ANR	9100	PrimaryExpression	1		8876	1					
ANR	9101	ExpressionStatement	"zsocket_set_maxmsgsize ( * sock , info -> maxMsgSize )"	387:36:11943:11990	8876	1	True				
ANR	9102	CallExpression	"zsocket_set_maxmsgsize ( * sock , info -> maxMsgSize )"		8876	0					
ANR	9103	Callee	zsocket_set_maxmsgsize		8876	0					
ANR	9104	Identifier	zsocket_set_maxmsgsize		8876	0					
ANR	9105	ArgumentList	* sock		8876	1					
ANR	9106	Argument	* sock		8876	0					
ANR	9107	UnaryOperationExpression	* sock		8876	0					
ANR	9108	UnaryOperator	*		8876	0					
ANR	9109	Identifier	sock		8876	1					
ANR	9110	Argument	info -> maxMsgSize		8876	1					
ANR	9111	PtrMemberAccess	info -> maxMsgSize		8876	0					
ANR	9112	Identifier	info		8876	0					
ANR	9113	Identifier	maxMsgSize		8876	1					
ANR	9114	IfStatement	if ( info -> rate > - 1 )		8876	20					
ANR	9115	Condition	info -> rate > - 1	388:8:12000:12014	8876	0	True				
ANR	9116	RelationalExpression	info -> rate > - 1		8876	0		>			
ANR	9117	PtrMemberAccess	info -> rate		8876	0					
ANR	9118	Identifier	info		8876	0					
ANR	9119	Identifier	rate		8876	1					
ANR	9120	UnaryOperationExpression	- 1		8876	1					
ANR	9121	UnaryOperator	-		8876	0					
ANR	9122	PrimaryExpression	1		8876	1					
ANR	9123	ExpressionStatement	"zsocket_set_rate ( * sock , info -> rate )"	388:36:12028:12063	8876	1	True				
ANR	9124	CallExpression	"zsocket_set_rate ( * sock , info -> rate )"		8876	0					
ANR	9125	Callee	zsocket_set_rate		8876	0					
ANR	9126	Identifier	zsocket_set_rate		8876	0					
ANR	9127	ArgumentList	* sock		8876	1					
ANR	9128	Argument	* sock		8876	0					
ANR	9129	UnaryOperationExpression	* sock		8876	0					
ANR	9130	UnaryOperator	*		8876	0					
ANR	9131	Identifier	sock		8876	1					
ANR	9132	Argument	info -> rate		8876	1					
ANR	9133	PtrMemberAccess	info -> rate		8876	0					
ANR	9134	Identifier	info		8876	0					
ANR	9135	Identifier	rate		8876	1					
ANR	9136	IfStatement	if ( info -> recoveryIVL > - 1 )		8876	21					
ANR	9137	Condition	info -> recoveryIVL > - 1	389:8:12073:12094	8876	0	True				
ANR	9138	RelationalExpression	info -> recoveryIVL > - 1		8876	0		>			
ANR	9139	PtrMemberAccess	info -> recoveryIVL		8876	0					
ANR	9140	Identifier	info		8876	0					
ANR	9141	Identifier	recoveryIVL		8876	1					
ANR	9142	UnaryOperationExpression	- 1		8876	1					
ANR	9143	UnaryOperator	-		8876	0					
ANR	9144	PrimaryExpression	1		8876	1					
ANR	9145	ExpressionStatement	"zsocket_set_recovery_ivl ( * sock , info -> recoveryIVL )"	389:36:12101:12151	8876	1	True				
ANR	9146	CallExpression	"zsocket_set_recovery_ivl ( * sock , info -> recoveryIVL )"		8876	0					
ANR	9147	Callee	zsocket_set_recovery_ivl		8876	0					
ANR	9148	Identifier	zsocket_set_recovery_ivl		8876	0					
ANR	9149	ArgumentList	* sock		8876	1					
ANR	9150	Argument	* sock		8876	0					
ANR	9151	UnaryOperationExpression	* sock		8876	0					
ANR	9152	UnaryOperator	*		8876	0					
ANR	9153	Identifier	sock		8876	1					
ANR	9154	Argument	info -> recoveryIVL		8876	1					
ANR	9155	PtrMemberAccess	info -> recoveryIVL		8876	0					
ANR	9156	Identifier	info		8876	0					
ANR	9157	Identifier	recoveryIVL		8876	1					
ANR	9158	IfStatement	if ( info -> multicastHops > - 1 )		8876	22					
ANR	9159	Condition	info -> multicastHops > - 1	390:8:12161:12184	8876	0	True				
ANR	9160	RelationalExpression	info -> multicastHops > - 1		8876	0		>			
ANR	9161	PtrMemberAccess	info -> multicastHops		8876	0					
ANR	9162	Identifier	info		8876	0					
ANR	9163	Identifier	multicastHops		8876	1					
ANR	9164	UnaryOperationExpression	- 1		8876	1					
ANR	9165	UnaryOperator	-		8876	0					
ANR	9166	PrimaryExpression	1		8876	1					
ANR	9167	ExpressionStatement	"zsocket_set_multicast_hops ( * sock , info -> multicastHops )"	390:36:12189:12243	8876	1	True				
ANR	9168	CallExpression	"zsocket_set_multicast_hops ( * sock , info -> multicastHops )"		8876	0					
ANR	9169	Callee	zsocket_set_multicast_hops		8876	0					
ANR	9170	Identifier	zsocket_set_multicast_hops		8876	0					
ANR	9171	ArgumentList	* sock		8876	1					
ANR	9172	Argument	* sock		8876	0					
ANR	9173	UnaryOperationExpression	* sock		8876	0					
ANR	9174	UnaryOperator	*		8876	0					
ANR	9175	Identifier	sock		8876	1					
ANR	9176	Argument	info -> multicastHops		8876	1					
ANR	9177	PtrMemberAccess	info -> multicastHops		8876	0					
ANR	9178	Identifier	info		8876	0					
ANR	9179	Identifier	multicastHops		8876	1					
ANR	9180	IfStatement	if ( info -> reconnectIVL > - 1 )		8876	23					
ANR	9181	Condition	info -> reconnectIVL > - 1	391:8:12253:12275	8876	0	True				
ANR	9182	RelationalExpression	info -> reconnectIVL > - 1		8876	0		>			
ANR	9183	PtrMemberAccess	info -> reconnectIVL		8876	0					
ANR	9184	Identifier	info		8876	0					
ANR	9185	Identifier	reconnectIVL		8876	1					
ANR	9186	UnaryOperationExpression	- 1		8876	1					
ANR	9187	UnaryOperator	-		8876	0					
ANR	9188	PrimaryExpression	1		8876	1					
ANR	9189	ExpressionStatement	"zsocket_set_reconnect_ivl ( * sock , info -> reconnectIVL )"	391:36:12281:12333	8876	1	True				
ANR	9190	CallExpression	"zsocket_set_reconnect_ivl ( * sock , info -> reconnectIVL )"		8876	0					
ANR	9191	Callee	zsocket_set_reconnect_ivl		8876	0					
ANR	9192	Identifier	zsocket_set_reconnect_ivl		8876	0					
ANR	9193	ArgumentList	* sock		8876	1					
ANR	9194	Argument	* sock		8876	0					
ANR	9195	UnaryOperationExpression	* sock		8876	0					
ANR	9196	UnaryOperator	*		8876	0					
ANR	9197	Identifier	sock		8876	1					
ANR	9198	Argument	info -> reconnectIVL		8876	1					
ANR	9199	PtrMemberAccess	info -> reconnectIVL		8876	0					
ANR	9200	Identifier	info		8876	0					
ANR	9201	Identifier	reconnectIVL		8876	1					
ANR	9202	IfStatement	if ( info -> reconnectIVLMax > - 1 )		8876	24					
ANR	9203	Condition	info -> reconnectIVLMax > - 1	392:8:12343:12368	8876	0	True				
ANR	9204	RelationalExpression	info -> reconnectIVLMax > - 1		8876	0		>			
ANR	9205	PtrMemberAccess	info -> reconnectIVLMax		8876	0					
ANR	9206	Identifier	info		8876	0					
ANR	9207	Identifier	reconnectIVLMax		8876	1					
ANR	9208	UnaryOperationExpression	- 1		8876	1					
ANR	9209	UnaryOperator	-		8876	0					
ANR	9210	PrimaryExpression	1		8876	1					
ANR	9211	ExpressionStatement	"zsocket_set_reconnect_ivl_max ( * sock , info -> reconnectIVLMax )"	392:36:12371:12430	8876	1	True				
ANR	9212	CallExpression	"zsocket_set_reconnect_ivl_max ( * sock , info -> reconnectIVLMax )"		8876	0					
ANR	9213	Callee	zsocket_set_reconnect_ivl_max		8876	0					
ANR	9214	Identifier	zsocket_set_reconnect_ivl_max		8876	0					
ANR	9215	ArgumentList	* sock		8876	1					
ANR	9216	Argument	* sock		8876	0					
ANR	9217	UnaryOperationExpression	* sock		8876	0					
ANR	9218	UnaryOperator	*		8876	0					
ANR	9219	Identifier	sock		8876	1					
ANR	9220	Argument	info -> reconnectIVLMax		8876	1					
ANR	9221	PtrMemberAccess	info -> reconnectIVLMax		8876	0					
ANR	9222	Identifier	info		8876	0					
ANR	9223	Identifier	reconnectIVLMax		8876	1					
ANR	9224	IfStatement	if ( info -> ipv4Only > - 1 )		8876	25					
ANR	9225	Condition	info -> ipv4Only > - 1	393:8:12440:12458	8876	0	True				
ANR	9226	RelationalExpression	info -> ipv4Only > - 1		8876	0		>			
ANR	9227	PtrMemberAccess	info -> ipv4Only		8876	0					
ANR	9228	Identifier	info		8876	0					
ANR	9229	Identifier	ipv4Only		8876	1					
ANR	9230	UnaryOperationExpression	- 1		8876	1					
ANR	9231	UnaryOperator	-		8876	0					
ANR	9232	PrimaryExpression	1		8876	1					
ANR	9233	ExpressionStatement	"zsocket_set_ipv4only ( * sock , info -> ipv4Only )"	393:36:12468:12511	8876	1	True				
ANR	9234	CallExpression	"zsocket_set_ipv4only ( * sock , info -> ipv4Only )"		8876	0					
ANR	9235	Callee	zsocket_set_ipv4only		8876	0					
ANR	9236	Identifier	zsocket_set_ipv4only		8876	0					
ANR	9237	ArgumentList	* sock		8876	1					
ANR	9238	Argument	* sock		8876	0					
ANR	9239	UnaryOperationExpression	* sock		8876	0					
ANR	9240	UnaryOperator	*		8876	0					
ANR	9241	Identifier	sock		8876	1					
ANR	9242	Argument	info -> ipv4Only		8876	1					
ANR	9243	PtrMemberAccess	info -> ipv4Only		8876	0					
ANR	9244	Identifier	info		8876	0					
ANR	9245	Identifier	ipv4Only		8876	1					
ANR	9246	IfStatement	if ( info -> affinity > - 1 )		8876	26					
ANR	9247	Condition	info -> affinity > - 1	394:8:12521:12539	8876	0	True				
ANR	9248	RelationalExpression	info -> affinity > - 1		8876	0		>			
ANR	9249	PtrMemberAccess	info -> affinity		8876	0					
ANR	9250	Identifier	info		8876	0					
ANR	9251	Identifier	affinity		8876	1					
ANR	9252	UnaryOperationExpression	- 1		8876	1					
ANR	9253	UnaryOperator	-		8876	0					
ANR	9254	PrimaryExpression	1		8876	1					
ANR	9255	ExpressionStatement	"zsocket_set_affinity ( * sock , info -> affinity )"	394:36:12549:12592	8876	1	True				
ANR	9256	CallExpression	"zsocket_set_affinity ( * sock , info -> affinity )"		8876	0					
ANR	9257	Callee	zsocket_set_affinity		8876	0					
ANR	9258	Identifier	zsocket_set_affinity		8876	0					
ANR	9259	ArgumentList	* sock		8876	1					
ANR	9260	Argument	* sock		8876	0					
ANR	9261	UnaryOperationExpression	* sock		8876	0					
ANR	9262	UnaryOperator	*		8876	0					
ANR	9263	Identifier	sock		8876	1					
ANR	9264	Argument	info -> affinity		8876	1					
ANR	9265	PtrMemberAccess	info -> affinity		8876	0					
ANR	9266	Identifier	info		8876	0					
ANR	9267	Identifier	affinity		8876	1					
ANR	9268	IfStatement	if ( info -> sndHWM > - 1 )		8876	27					
ANR	9269	Condition	info -> sndHWM > - 1	395:8:12602:12618	8876	0	True				
ANR	9270	RelationalExpression	info -> sndHWM > - 1		8876	0		>			
ANR	9271	PtrMemberAccess	info -> sndHWM		8876	0					
ANR	9272	Identifier	info		8876	0					
ANR	9273	Identifier	sndHWM		8876	1					
ANR	9274	UnaryOperationExpression	- 1		8876	1					
ANR	9275	UnaryOperator	-		8876	0					
ANR	9276	PrimaryExpression	1		8876	1					
ANR	9277	ExpressionStatement	"zsocket_set_sndhwm ( * sock , info -> sndHWM )"	395:36:12630:12669	8876	1	True				
ANR	9278	CallExpression	"zsocket_set_sndhwm ( * sock , info -> sndHWM )"		8876	0					
ANR	9279	Callee	zsocket_set_sndhwm		8876	0					
ANR	9280	Identifier	zsocket_set_sndhwm		8876	0					
ANR	9281	ArgumentList	* sock		8876	1					
ANR	9282	Argument	* sock		8876	0					
ANR	9283	UnaryOperationExpression	* sock		8876	0					
ANR	9284	UnaryOperator	*		8876	0					
ANR	9285	Identifier	sock		8876	1					
ANR	9286	Argument	info -> sndHWM		8876	1					
ANR	9287	PtrMemberAccess	info -> sndHWM		8876	0					
ANR	9288	Identifier	info		8876	0					
ANR	9289	Identifier	sndHWM		8876	1					
ANR	9290	IfStatement	if ( info -> rcvHWM > - 1 )		8876	28					
ANR	9291	Condition	info -> rcvHWM > - 1	396:8:12679:12695	8876	0	True				
ANR	9292	RelationalExpression	info -> rcvHWM > - 1		8876	0		>			
ANR	9293	PtrMemberAccess	info -> rcvHWM		8876	0					
ANR	9294	Identifier	info		8876	0					
ANR	9295	Identifier	rcvHWM		8876	1					
ANR	9296	UnaryOperationExpression	- 1		8876	1					
ANR	9297	UnaryOperator	-		8876	0					
ANR	9298	PrimaryExpression	1		8876	1					
ANR	9299	ExpressionStatement	"zsocket_set_rcvhwm ( * sock , info -> rcvHWM )"	396:36:12707:12746	8876	1	True				
ANR	9300	CallExpression	"zsocket_set_rcvhwm ( * sock , info -> rcvHWM )"		8876	0					
ANR	9301	Callee	zsocket_set_rcvhwm		8876	0					
ANR	9302	Identifier	zsocket_set_rcvhwm		8876	0					
ANR	9303	ArgumentList	* sock		8876	1					
ANR	9304	Argument	* sock		8876	0					
ANR	9305	UnaryOperationExpression	* sock		8876	0					
ANR	9306	UnaryOperator	*		8876	0					
ANR	9307	Identifier	sock		8876	1					
ANR	9308	Argument	info -> rcvHWM		8876	1					
ANR	9309	PtrMemberAccess	info -> rcvHWM		8876	0					
ANR	9310	Identifier	info		8876	0					
ANR	9311	Identifier	rcvHWM		8876	1					
ANR	9312	IfStatement	if ( info -> type == ZMQ_SUB )		8876	29					
ANR	9313	Condition	info -> type == ZMQ_SUB	398:8:12784:12804	8876	0	True				
ANR	9314	EqualityExpression	info -> type == ZMQ_SUB		8876	0		==			
ANR	9315	PtrMemberAccess	info -> type		8876	0					
ANR	9316	Identifier	info		8876	0					
ANR	9317	Identifier	type		8876	1					
ANR	9318	Identifier	ZMQ_SUB		8876	1					
ANR	9319	CompoundStatement		34:31:1969:1969	8876	1					
ANR	9320	ForStatement	for ( sub = info -> subscriptions ; sub != NULL ; sub = sub -> next )		8876	0					
ANR	9321	ForInit	sub = info -> subscriptions ;	399:12:12821:12846	8876	0	True				
ANR	9322	AssignmentExpression	sub = info -> subscriptions		8876	0		=			
ANR	9323	Identifier	sub		8876	0					
ANR	9324	PtrMemberAccess	info -> subscriptions		8876	1					
ANR	9325	Identifier	info		8876	0					
ANR	9326	Identifier	subscriptions		8876	1					
ANR	9327	Condition	sub != NULL	399:39:12848:12856	8876	1	True				
ANR	9328	EqualityExpression	sub != NULL		8876	0		!=			
ANR	9329	Identifier	sub		8876	0					
ANR	9330	Identifier	NULL		8876	1					
ANR	9331	AssignmentExpression	sub = sub -> next	399:50:12859:12871	8876	2	True	=			
ANR	9332	Identifier	sub		8876	0					
ANR	9333	PtrMemberAccess	sub -> next		8876	1					
ANR	9334	Identifier	sub		8876	0					
ANR	9335	Identifier	next		8876	1					
ANR	9336	CompoundStatement		35:65:2036:2036	8876	3					
ANR	9337	ExpressionStatement	"zsocket_set_subscribe ( * sock , sub -> subscribe )"	400:12:12888:12932	8876	0	True				
ANR	9338	CallExpression	"zsocket_set_subscribe ( * sock , sub -> subscribe )"		8876	0					
ANR	9339	Callee	zsocket_set_subscribe		8876	0					
ANR	9340	Identifier	zsocket_set_subscribe		8876	0					
ANR	9341	ArgumentList	* sock		8876	1					
ANR	9342	Argument	* sock		8876	0					
ANR	9343	UnaryOperationExpression	* sock		8876	0					
ANR	9344	UnaryOperator	*		8876	0					
ANR	9345	Identifier	sock		8876	1					
ANR	9346	Argument	sub -> subscribe		8876	1					
ANR	9347	PtrMemberAccess	sub -> subscribe		8876	0					
ANR	9348	Identifier	sub		8876	0					
ANR	9349	Identifier	subscribe		8876	1					
ANR	9350	IfStatement	if ( info -> action == ACTION_CONNECT )		8876	30					
ANR	9351	Condition	info -> action == ACTION_CONNECT	405:8:12992:13019	8876	0	True				
ANR	9352	EqualityExpression	info -> action == ACTION_CONNECT		8876	0		==			
ANR	9353	PtrMemberAccess	info -> action		8876	0					
ANR	9354	Identifier	info		8876	0					
ANR	9355	Identifier	action		8876	1					
ANR	9356	Identifier	ACTION_CONNECT		8876	1					
ANR	9357	CompoundStatement		41:38:2184:2184	8876	1					
ANR	9358	ExpressionStatement	"rv = zsocket_connect ( * sock , info -> description )"	406:8:13032:13078	8876	0	True				
ANR	9359	AssignmentExpression	"rv = zsocket_connect ( * sock , info -> description )"		8876	0		=			
ANR	9360	Identifier	rv		8876	0					
ANR	9361	CallExpression	"zsocket_connect ( * sock , info -> description )"		8876	1					
ANR	9362	Callee	zsocket_connect		8876	0					
ANR	9363	Identifier	zsocket_connect		8876	0					
ANR	9364	ArgumentList	* sock		8876	1					
ANR	9365	Argument	* sock		8876	0					
ANR	9366	UnaryOperationExpression	* sock		8876	0					
ANR	9367	UnaryOperator	*		8876	0					
ANR	9368	Identifier	sock		8876	1					
ANR	9369	Argument	info -> description		8876	1					
ANR	9370	PtrMemberAccess	info -> description		8876	0					
ANR	9371	Identifier	info		8876	0					
ANR	9372	Identifier	description		8876	1					
ANR	9373	IfStatement	if ( rv == - 1 )		8876	1					
ANR	9374	Condition	rv == - 1	407:12:13092:13099	8876	0	True				
ANR	9375	EqualityExpression	rv == - 1		8876	0		==			
ANR	9376	Identifier	rv		8876	0					
ANR	9377	UnaryOperationExpression	- 1		8876	1					
ANR	9378	UnaryOperator	-		8876	0					
ANR	9379	PrimaryExpression	1		8876	1					
ANR	9380	CompoundStatement		43:22:2264:2264	8876	1					
ANR	9381	ExpressionStatement	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""zmq_connect using %s failed: %s"" , info -> description , zmq_strerror ( errno ) )"	408:12:13116:13316	8876	0	True				
ANR	9382	CallExpression	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""zmq_connect using %s failed: %s"" , info -> description , zmq_strerror ( errno ) )"		8876	0					
ANR	9383	Callee	errmsg . LogError		8876	0					
ANR	9384	MemberAccess	errmsg . LogError		8876	0					
ANR	9385	Identifier	errmsg		8876	0					
ANR	9386	Identifier	LogError		8876	1					
ANR	9387	ArgumentList	0		8876	1					
ANR	9388	Argument	0		8876	0					
ANR	9389	PrimaryExpression	0		8876	0					
ANR	9390	Argument	RS_RET_INVALID_PARAMS		8876	1					
ANR	9391	Identifier	RS_RET_INVALID_PARAMS		8876	0					
ANR	9392	Argument	"""zmq_connect using %s failed: %s"""		8876	2					
ANR	9393	PrimaryExpression	"""zmq_connect using %s failed: %s"""		8876	0					
ANR	9394	Argument	info -> description		8876	3					
ANR	9395	PtrMemberAccess	info -> description		8876	0					
ANR	9396	Identifier	info		8876	0					
ANR	9397	Identifier	description		8876	1					
ANR	9398	Argument	zmq_strerror ( errno )		8876	4					
ANR	9399	CallExpression	zmq_strerror ( errno )		8876	0					
ANR	9400	Callee	zmq_strerror		8876	0					
ANR	9401	Identifier	zmq_strerror		8876	0					
ANR	9402	ArgumentList	errno		8876	1					
ANR	9403	Argument	errno		8876	0					
ANR	9404	Identifier	errno		8876	0					
ANR	9405	ReturnStatement	return RS_RET_INVALID_PARAMS ;	412:12:13330:13358	8876	1	True				
ANR	9406	Identifier	RS_RET_INVALID_PARAMS		8876	0					
ANR	9407	ExpressionStatement	"DBGPRINTF ( ""imzmq3: connect for %s successful\\n"" , info -> description )"	414:8:13378:13444	8876	2	True				
ANR	9408	CallExpression	"DBGPRINTF ( ""imzmq3: connect for %s successful\\n"" , info -> description )"		8876	0					
ANR	9409	Callee	DBGPRINTF		8876	0					
ANR	9410	Identifier	DBGPRINTF		8876	0					
ANR	9411	ArgumentList	"""imzmq3: connect for %s successful\\n"""		8876	1					
ANR	9412	Argument	"""imzmq3: connect for %s successful\\n"""		8876	0					
ANR	9413	PrimaryExpression	"""imzmq3: connect for %s successful\\n"""		8876	0					
ANR	9414	Argument	info -> description		8876	1					
ANR	9415	PtrMemberAccess	info -> description		8876	0					
ANR	9416	Identifier	info		8876	0					
ANR	9417	Identifier	description		8876	1					
ANR	9418	ElseStatement	else		8876	0					
ANR	9419	CompoundStatement		51:11:2619:2619	8876	0					
ANR	9420	ExpressionStatement	"rv = zsocket_bind ( * sock , info -> description )"	416:8:13467:13510	8876	0	True				
ANR	9421	AssignmentExpression	"rv = zsocket_bind ( * sock , info -> description )"		8876	0		=			
ANR	9422	Identifier	rv		8876	0					
ANR	9423	CallExpression	"zsocket_bind ( * sock , info -> description )"		8876	1					
ANR	9424	Callee	zsocket_bind		8876	0					
ANR	9425	Identifier	zsocket_bind		8876	0					
ANR	9426	ArgumentList	* sock		8876	1					
ANR	9427	Argument	* sock		8876	0					
ANR	9428	UnaryOperationExpression	* sock		8876	0					
ANR	9429	UnaryOperator	*		8876	0					
ANR	9430	Identifier	sock		8876	1					
ANR	9431	Argument	info -> description		8876	1					
ANR	9432	PtrMemberAccess	info -> description		8876	0					
ANR	9433	Identifier	info		8876	0					
ANR	9434	Identifier	description		8876	1					
ANR	9435	IfStatement	if ( rv == - 1 )		8876	1					
ANR	9436	Condition	rv == - 1	417:12:13524:13531	8876	0	True				
ANR	9437	EqualityExpression	rv == - 1		8876	0		==			
ANR	9438	Identifier	rv		8876	0					
ANR	9439	UnaryOperationExpression	- 1		8876	1					
ANR	9440	UnaryOperator	-		8876	0					
ANR	9441	PrimaryExpression	1		8876	1					
ANR	9442	CompoundStatement		53:22:2696:2696	8876	1					
ANR	9443	ExpressionStatement	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""zmq_bind using %s failed: %s"" , info -> description , zmq_strerror ( errno ) )"	418:12:13548:13745	8876	0	True				
ANR	9444	CallExpression	"errmsg . LogError ( 0 , RS_RET_INVALID_PARAMS , ""zmq_bind using %s failed: %s"" , info -> description , zmq_strerror ( errno ) )"		8876	0					
ANR	9445	Callee	errmsg . LogError		8876	0					
ANR	9446	MemberAccess	errmsg . LogError		8876	0					
ANR	9447	Identifier	errmsg		8876	0					
ANR	9448	Identifier	LogError		8876	1					
ANR	9449	ArgumentList	0		8876	1					
ANR	9450	Argument	0		8876	0					
ANR	9451	PrimaryExpression	0		8876	0					
ANR	9452	Argument	RS_RET_INVALID_PARAMS		8876	1					
ANR	9453	Identifier	RS_RET_INVALID_PARAMS		8876	0					
ANR	9454	Argument	"""zmq_bind using %s failed: %s"""		8876	2					
ANR	9455	PrimaryExpression	"""zmq_bind using %s failed: %s"""		8876	0					
ANR	9456	Argument	info -> description		8876	3					
ANR	9457	PtrMemberAccess	info -> description		8876	0					
ANR	9458	Identifier	info		8876	0					
ANR	9459	Identifier	description		8876	1					
ANR	9460	Argument	zmq_strerror ( errno )		8876	4					
ANR	9461	CallExpression	zmq_strerror ( errno )		8876	0					
ANR	9462	Callee	zmq_strerror		8876	0					
ANR	9463	Identifier	zmq_strerror		8876	0					
ANR	9464	ArgumentList	errno		8876	1					
ANR	9465	Argument	errno		8876	0					
ANR	9466	Identifier	errno		8876	0					
ANR	9467	ReturnStatement	return RS_RET_INVALID_PARAMS ;	422:12:13759:13787	8876	1	True				
ANR	9468	Identifier	RS_RET_INVALID_PARAMS		8876	0					
ANR	9469	ExpressionStatement	"DBGPRINTF ( ""imzmq3: bind for %s successful\\n"" , info -> description )"	424:8:13807:13870	8876	2	True				
ANR	9470	CallExpression	"DBGPRINTF ( ""imzmq3: bind for %s successful\\n"" , info -> description )"		8876	0					
ANR	9471	Callee	DBGPRINTF		8876	0					
ANR	9472	Identifier	DBGPRINTF		8876	0					
ANR	9473	ArgumentList	"""imzmq3: bind for %s successful\\n"""		8876	1					
ANR	9474	Argument	"""imzmq3: bind for %s successful\\n"""		8876	0					
ANR	9475	PrimaryExpression	"""imzmq3: bind for %s successful\\n"""		8876	0					
ANR	9476	Argument	info -> description		8876	1					
ANR	9477	PtrMemberAccess	info -> description		8876	0					
ANR	9478	Identifier	info		8876	0					
ANR	9479	Identifier	description		8876	1					
ANR	9480	ReturnStatement	return RS_RET_OK ;	426:4:13882:13898	8876	31	True				
ANR	9481	Identifier	RS_RET_OK		8876	0					
ANR	9482	ReturnType	static rsRetVal		8876	1					
ANR	9483	Identifier	createSocket		8876	2					
ANR	9484	ParameterList	"instanceConf_t * info , void * * sock"		8876	3					
ANR	9485	Parameter	instanceConf_t * info	365:29:10802:10821	8876	0	True				
ANR	9486	ParameterType	instanceConf_t *		8876	0					
ANR	9487	Identifier	info		8876	1					
ANR	9488	Parameter	void * * sock	365:51:10824:10834	8876	1	True				
ANR	9489	ParameterType	void * *		8876	0					
ANR	9490	Identifier	sock		8876	1					
ANR	9491	CFGEntryNode	ENTRY		8876		True				
ANR	9492	CFGExitNode	EXIT		8876		True				
ANR	9493	Symbol	sub		8876						
ANR	9494	Symbol	info -> linger		8876						
ANR	9495	Symbol	sub -> next		8876						
ANR	9496	Symbol	rv		8876						
ANR	9497	Symbol	info -> rcvBuf		8876						
ANR	9498	Symbol	info -> sndHWM		8876						
ANR	9499	Symbol	info -> rcvTimeout		8876						
ANR	9500	Symbol	info -> backlog		8876						
ANR	9501	Symbol	zsocket_bind		8876						
ANR	9502	Symbol	info -> rate		8876						
ANR	9503	Symbol	zsocket_new		8876						
ANR	9504	Symbol	info -> sndBuf		8876						
ANR	9505	Symbol	zsocket_connect		8876						
ANR	9506	Symbol	zmq_strerror		8876						
ANR	9507	Symbol	info -> rcvHWM		8876						
ANR	9508	Symbol	RS_RET_INVALID_PARAMS		8876						
ANR	9509	Symbol	* sock		8876						
ANR	9510	Symbol	info		8876						
ANR	9511	Symbol	info -> sndTimeout		8876						
ANR	9512	Symbol	errno		8876						
ANR	9513	Symbol	info -> type		8876						
ANR	9514	Symbol	NULL		8876						
ANR	9515	Symbol	info -> affinity		8876						
ANR	9516	Symbol	info -> subscriptions		8876						
ANR	9517	Symbol	RS_RET_OK		8876						
ANR	9518	Symbol	s_context		8876						
ANR	9519	Symbol	ZMQ_SUB		8876						
ANR	9520	Symbol	errmsg		8876						
ANR	9521	Symbol	info -> identity		8876						
ANR	9522	Symbol	* sub		8876						
ANR	9523	Symbol	sub -> subscribe		8876						
ANR	9524	Symbol	info -> multicastHops		8876						
ANR	9525	Symbol	ACTION_CONNECT		8876						
ANR	9526	Symbol	info -> reconnectIVLMax		8876						
ANR	9527	Symbol	sock		8876						
ANR	9528	Symbol	info -> description		8876						
ANR	9529	Symbol	info -> ipv4Only		8876						
ANR	9530	Symbol	info -> recoveryIVL		8876						
ANR	9531	Symbol	info -> reconnectIVL		8876						
ANR	9532	Symbol	info -> action		8876						
ANR	9533	Symbol	info -> maxMsgSize		8876						
ANR	9534	Symbol	* info		8876						
ANR	9535	Function	createInstance	436:0:14039:14568							
ANR	9536	FunctionDef	createInstance (instanceConf_t * * pinst)		9535	0					
ANR	9537	CompoundStatement		436:55:14094:14568	9535	0					
ANR	9538	ExpressionStatement	DEFiRet	437:4:14100:14107	9535	0	True				
ANR	9539	Identifier	DEFiRet		9535	0					
ANR	9540	IdentifierDeclStatement	instanceConf_t * inst ;	438:4:14113:14133	9535	1	True				
ANR	9541	IdentifierDecl	* inst		9535	0					
ANR	9542	IdentifierDeclType	instanceConf_t *		9535	0					
ANR	9543	Identifier	inst		9535	1					
ANR	9544	ExpressionStatement	CHKmalloc ( inst = MALLOC ( sizeof ( instanceConf_t ) ) )	439:4:14139:14187	9535	2	True				
ANR	9545	CallExpression	CHKmalloc ( inst = MALLOC ( sizeof ( instanceConf_t ) ) )		9535	0					
ANR	9546	Callee	CHKmalloc		9535	0					
ANR	9547	Identifier	CHKmalloc		9535	0					
ANR	9548	ArgumentList	inst = MALLOC ( sizeof ( instanceConf_t ) )		9535	1					
ANR	9549	Argument	inst = MALLOC ( sizeof ( instanceConf_t ) )		9535	0					
ANR	9550	AssignmentExpression	inst = MALLOC ( sizeof ( instanceConf_t ) )		9535	0		=			
ANR	9551	Identifier	inst		9535	0					
ANR	9552	CallExpression	MALLOC ( sizeof ( instanceConf_t ) )		9535	1					
ANR	9553	Callee	MALLOC		9535	0					
ANR	9554	Identifier	MALLOC		9535	0					
ANR	9555	ArgumentList	sizeof ( instanceConf_t )		9535	1					
ANR	9556	Argument	sizeof ( instanceConf_t )		9535	0					
ANR	9557	SizeofExpression	sizeof ( instanceConf_t )		9535	0					
ANR	9558	Sizeof	sizeof		9535	0					
ANR	9559	SizeofOperand	instanceConf_t		9535	1					
ANR	9560	ExpressionStatement	setDefaults ( inst )	442:4:14253:14270	9535	3	True				
ANR	9561	CallExpression	setDefaults ( inst )		9535	0					
ANR	9562	Callee	setDefaults		9535	0					
ANR	9563	Identifier	setDefaults		9535	0					
ANR	9564	ArgumentList	inst		9535	1					
ANR	9565	Argument	inst		9535	0					
ANR	9566	Identifier	inst		9535	0					
ANR	9567	IfStatement	if ( runModConf -> root == NULL || runModConf -> tail == NULL )		9535	4					
ANR	9568	Condition	runModConf -> root == NULL || runModConf -> tail == NULL	445:8:14318:14369	9535	0	True				
ANR	9569	OrExpression	runModConf -> root == NULL || runModConf -> tail == NULL		9535	0		||			
ANR	9570	EqualityExpression	runModConf -> root == NULL		9535	0		==			
ANR	9571	PtrMemberAccess	runModConf -> root		9535	0					
ANR	9572	Identifier	runModConf		9535	0					
ANR	9573	Identifier	root		9535	1					
ANR	9574	Identifier	NULL		9535	1					
ANR	9575	EqualityExpression	runModConf -> tail == NULL		9535	1		==			
ANR	9576	PtrMemberAccess	runModConf -> tail		9535	0					
ANR	9577	Identifier	runModConf		9535	0					
ANR	9578	Identifier	tail		9535	1					
ANR	9579	Identifier	NULL		9535	1					
ANR	9580	CompoundStatement		10:62:277:277	9535	1					
ANR	9581	ExpressionStatement	runModConf -> tail = runModConf -> root = inst	446:8:14382:14424	9535	0	True				
ANR	9582	AssignmentExpression	runModConf -> tail = runModConf -> root = inst		9535	0		=			
ANR	9583	PtrMemberAccess	runModConf -> tail		9535	0					
ANR	9584	Identifier	runModConf		9535	0					
ANR	9585	Identifier	tail		9535	1					
ANR	9586	AssignmentExpression	runModConf -> root = inst		9535	1		=			
ANR	9587	PtrMemberAccess	runModConf -> root		9535	0					
ANR	9588	Identifier	runModConf		9535	0					
ANR	9589	Identifier	root		9535	1					
ANR	9590	Identifier	inst		9535	1					
ANR	9591	ElseStatement	else		9535	0					
ANR	9592	CompoundStatement		12:11:342:342	9535	0					
ANR	9593	ExpressionStatement	runModConf -> tail -> next = inst	448:8:14447:14476	9535	0	True				
ANR	9594	AssignmentExpression	runModConf -> tail -> next = inst		9535	0		=			
ANR	9595	PtrMemberAccess	runModConf -> tail -> next		9535	0					
ANR	9596	PtrMemberAccess	runModConf -> tail		9535	0					
ANR	9597	Identifier	runModConf		9535	0					
ANR	9598	Identifier	tail		9535	1					
ANR	9599	Identifier	next		9535	1					
ANR	9600	Identifier	inst		9535	1					
ANR	9601	ExpressionStatement	runModConf -> tail = inst	449:8:14486:14515	9535	1	True				
ANR	9602	AssignmentExpression	runModConf -> tail = inst		9535	0		=			
ANR	9603	PtrMemberAccess	runModConf -> tail		9535	0					
ANR	9604	Identifier	runModConf		9535	0					
ANR	9605	Identifier	tail		9535	1					
ANR	9606	Identifier	inst		9535	1					
ANR	9607	ExpressionStatement	* pinst = inst	451:4:14527:14540	9535	5	True				
ANR	9608	AssignmentExpression	* pinst = inst		9535	0		=			
ANR	9609	UnaryOperationExpression	* pinst		9535	0					
ANR	9610	UnaryOperator	*		9535	0					
ANR	9611	Identifier	pinst		9535	1					
ANR	9612	Identifier	inst		9535	1					
ANR	9613	Label	finalize_it :	452:0:14542:14553	9535	6	True				
ANR	9614	Identifier	finalize_it		9535	0					
ANR	9615	ExpressionStatement	RETiRet	453:4:14559:14566	9535	7	True				
ANR	9616	Identifier	RETiRet		9535	0					
ANR	9617	ReturnType	static rsRetVal		9535	1					
ANR	9618	Identifier	createInstance		9535	2					
ANR	9619	ParameterList	instanceConf_t * * pinst		9535	3					
ANR	9620	Parameter	instanceConf_t * * pinst	436:31:14070:14091	9535	0	True				
ANR	9621	ParameterType	instanceConf_t * *		9535	0					
ANR	9622	Identifier	pinst		9535	1					
ANR	9623	CFGEntryNode	ENTRY		9535		True				
ANR	9624	CFGExitNode	EXIT		9535		True				
ANR	9625	Symbol	* * runModConf		9535						
ANR	9626	Symbol	* runModConf		9535						
ANR	9627	Symbol	NULL		9535						
ANR	9628	Symbol	MALLOC		9535						
ANR	9629	Symbol	runModConf -> tail		9535						
ANR	9630	Symbol	* runModConf -> tail		9535						
ANR	9631	Symbol	inst		9535						
ANR	9632	Symbol	runModConf -> root		9535						
ANR	9633	Symbol	runModConf		9535						
ANR	9634	Symbol	runModConf -> tail -> next		9535						
ANR	9635	Symbol	* pinst		9535						
ANR	9636	Symbol	pinst		9535						
ANR	9637	Function	createListener	456:0:14571:17897							
ANR	9638	FunctionDef	createListener (struct cnfparamvals * pvals)		9637	0					
ANR	9639	CompoundStatement		456:59:14630:17897	9637	0					
ANR	9640	IdentifierDeclStatement	instanceConf_t * inst ;	457:4:14636:14656	9637	0	True				
ANR	9641	IdentifierDecl	* inst		9637	0					
ANR	9642	IdentifierDeclType	instanceConf_t *		9637	0					
ANR	9643	Identifier	inst		9637	1					
ANR	9644	IdentifierDeclStatement	int i ;	458:4:14662:14667	9637	1	True				
ANR	9645	IdentifierDecl	i		9637	0					
ANR	9646	IdentifierDeclType	int		9637	0					
ANR	9647	Identifier	i		9637	1					
ANR	9648	ExpressionStatement	DEFiRet	459:4:14673:14680	9637	2	True				
ANR	9649	Identifier	DEFiRet		9637	0					
ANR	9650	ExpressionStatement	CHKiRet ( createInstance ( & inst ) )	461:4:14691:14721	9637	3	True				
ANR	9651	CallExpression	CHKiRet ( createInstance ( & inst ) )		9637	0					
ANR	9652	Callee	CHKiRet		9637	0					
ANR	9653	Identifier	CHKiRet		9637	0					
ANR	9654	ArgumentList	createInstance ( & inst )		9637	1					
ANR	9655	Argument	createInstance ( & inst )		9637	0					
ANR	9656	CallExpression	createInstance ( & inst )		9637	0					
ANR	9657	Callee	createInstance		9637	0					
ANR	9658	Identifier	createInstance		9637	0					
ANR	9659	ArgumentList	& inst		9637	1					
ANR	9660	Argument	& inst		9637	0					
ANR	9661	UnaryOperationExpression	& inst		9637	0					
ANR	9662	UnaryOperator	&		9637	0					
ANR	9663	Identifier	inst		9637	1					
ANR	9664	ForStatement	for ( i = 0 ; i < inppblk . nParams ; ++ i )		9637	4					
ANR	9665	ForInit	i = 0 ;	462:8:14731:14737	9637	0	True				
ANR	9666	AssignmentExpression	i = 0		9637	0		=			
ANR	9667	Identifier	i		9637	0					
ANR	9668	PrimaryExpression	0		9637	1					
ANR	9669	Condition	i < inppblk . nParams	462:16:14739:14757	9637	1	True				
ANR	9670	RelationalExpression	i < inppblk . nParams		9637	0		<			
ANR	9671	Identifier	i		9637	0					
ANR	9672	MemberAccess	inppblk . nParams		9637	1					
ANR	9673	Identifier	inppblk		9637	0					
ANR	9674	Identifier	nParams		9637	1					
ANR	9675	UnaryExpression	++ i	462:38:14761:14763	9637	2	True				
ANR	9676	IncDec	++		9637	0					
ANR	9677	Identifier	i		9637	1					
ANR	9678	CompoundStatement		7:43:135:135	9637	3					
ANR	9679	IfStatement	if ( ! pvals [ i ] . bUsed )		9637	0					
ANR	9680	Condition	! pvals [ i ] . bUsed	463:11:14779:14793	9637	0	True				
ANR	9681	UnaryOperationExpression	! pvals [ i ] . bUsed		9637	0					
ANR	9682	UnaryOperator	!		9637	0					
ANR	9683	MemberAccess	pvals [ i ] . bUsed		9637	1					
ANR	9684	ArrayIndexing	pvals [ i ]		9637	0					
ANR	9685	Identifier	pvals		9637	0					
ANR	9686	Identifier	i		9637	1					
ANR	9687	Identifier	bUsed		9637	1					
ANR	9688	ContinueStatement	continue ;	464:12:14809:14817	9637	1	True				
ANR	9689	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""ruleset"" ) )"		9637	1					
ANR	9690	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""ruleset"" )"	465:11:14831:14871	9637	0	True				
ANR	9691	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""ruleset"" )"		9637	0					
ANR	9692	UnaryOperator	!		9637	0					
ANR	9693	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""ruleset"" )"		9637	1					
ANR	9694	Callee	strcmp		9637	0					
ANR	9695	Identifier	strcmp		9637	0					
ANR	9696	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	9697	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	9698	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	9699	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	9700	MemberAccess	inppblk . descr		9637	0					
ANR	9701	Identifier	inppblk		9637	0					
ANR	9702	Identifier	descr		9637	1					
ANR	9703	Identifier	i		9637	1					
ANR	9704	Identifier	name		9637	1					
ANR	9705	Argument	"""ruleset"""		9637	1					
ANR	9706	PrimaryExpression	"""ruleset"""		9637	0					
ANR	9707	CompoundStatement		10:54:243:243	9637	1					
ANR	9708	ExpressionStatement	"inst -> pszBindRuleset = ( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"	466:12:14888:14958	9637	0	True				
ANR	9709	AssignmentExpression	"inst -> pszBindRuleset = ( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	0		=			
ANR	9710	PtrMemberAccess	inst -> pszBindRuleset		9637	0					
ANR	9711	Identifier	inst		9637	0					
ANR	9712	Identifier	pszBindRuleset		9637	1					
ANR	9713	CastExpression	"( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	1					
ANR	9714	CastTarget	uchar *		9637	0					
ANR	9715	CallExpression	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	1					
ANR	9716	Callee	es_str2cstr		9637	0					
ANR	9717	Identifier	es_str2cstr		9637	0					
ANR	9718	ArgumentList	pvals [ i ] . val . d . estr		9637	1					
ANR	9719	Argument	pvals [ i ] . val . d . estr		9637	0					
ANR	9720	MemberAccess	pvals [ i ] . val . d . estr		9637	0					
ANR	9721	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	9722	MemberAccess	pvals [ i ] . val		9637	0					
ANR	9723	ArrayIndexing	pvals [ i ]		9637	0					
ANR	9724	Identifier	pvals		9637	0					
ANR	9725	Identifier	i		9637	1					
ANR	9726	Identifier	val		9637	1					
ANR	9727	Identifier	d		9637	1					
ANR	9728	Identifier	estr		9637	1					
ANR	9729	Argument	NULL		9637	1					
ANR	9730	Identifier	NULL		9637	0					
ANR	9731	ElseStatement	else		9637	0					
ANR	9732	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""description"" ) )"		9637	0					
ANR	9733	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""description"" )"	467:18:14978:15022	9637	0	True				
ANR	9734	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""description"" )"		9637	0					
ANR	9735	UnaryOperator	!		9637	0					
ANR	9736	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""description"" )"		9637	1					
ANR	9737	Callee	strcmp		9637	0					
ANR	9738	Identifier	strcmp		9637	0					
ANR	9739	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	9740	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	9741	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	9742	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	9743	MemberAccess	inppblk . descr		9637	0					
ANR	9744	Identifier	inppblk		9637	0					
ANR	9745	Identifier	descr		9637	1					
ANR	9746	Identifier	i		9637	1					
ANR	9747	Identifier	name		9637	1					
ANR	9748	Argument	"""description"""		9637	1					
ANR	9749	PrimaryExpression	"""description"""		9637	0					
ANR	9750	CompoundStatement		12:65:394:394	9637	1					
ANR	9751	ExpressionStatement	"inst -> description = es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"	468:12:15039:15097	9637	0	True				
ANR	9752	AssignmentExpression	"inst -> description = es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	0		=			
ANR	9753	PtrMemberAccess	inst -> description		9637	0					
ANR	9754	Identifier	inst		9637	0					
ANR	9755	Identifier	description		9637	1					
ANR	9756	CallExpression	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	1					
ANR	9757	Callee	es_str2cstr		9637	0					
ANR	9758	Identifier	es_str2cstr		9637	0					
ANR	9759	ArgumentList	pvals [ i ] . val . d . estr		9637	1					
ANR	9760	Argument	pvals [ i ] . val . d . estr		9637	0					
ANR	9761	MemberAccess	pvals [ i ] . val . d . estr		9637	0					
ANR	9762	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	9763	MemberAccess	pvals [ i ] . val		9637	0					
ANR	9764	ArrayIndexing	pvals [ i ]		9637	0					
ANR	9765	Identifier	pvals		9637	0					
ANR	9766	Identifier	i		9637	1					
ANR	9767	Identifier	val		9637	1					
ANR	9768	Identifier	d		9637	1					
ANR	9769	Identifier	estr		9637	1					
ANR	9770	Argument	NULL		9637	1					
ANR	9771	Identifier	NULL		9637	0					
ANR	9772	ElseStatement	else		9637	0					
ANR	9773	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""sockType"" ) )"		9637	0					
ANR	9774	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""sockType"" )"	469:18:15117:15158	9637	0	True				
ANR	9775	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""sockType"" )"		9637	0					
ANR	9776	UnaryOperator	!		9637	0					
ANR	9777	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""sockType"" )"		9637	1					
ANR	9778	Callee	strcmp		9637	0					
ANR	9779	Identifier	strcmp		9637	0					
ANR	9780	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	9781	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	9782	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	9783	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	9784	MemberAccess	inppblk . descr		9637	0					
ANR	9785	Identifier	inppblk		9637	0					
ANR	9786	Identifier	descr		9637	1					
ANR	9787	Identifier	i		9637	1					
ANR	9788	Identifier	name		9637	1					
ANR	9789	Argument	"""sockType"""		9637	1					
ANR	9790	PrimaryExpression	"""sockType"""		9637	0					
ANR	9791	CompoundStatement		14:61:529:529	9637	1					
ANR	9792	ExpressionStatement	"inst -> type = getSocketType ( es_str2cstr ( pvals [ i ] . val . d . estr , NULL ) )"	470:12:15174:15240	9637	0	True				
ANR	9793	AssignmentExpression	"inst -> type = getSocketType ( es_str2cstr ( pvals [ i ] . val . d . estr , NULL ) )"		9637	0		=			
ANR	9794	PtrMemberAccess	inst -> type		9637	0					
ANR	9795	Identifier	inst		9637	0					
ANR	9796	Identifier	type		9637	1					
ANR	9797	CallExpression	"getSocketType ( es_str2cstr ( pvals [ i ] . val . d . estr , NULL ) )"		9637	1					
ANR	9798	Callee	getSocketType		9637	0					
ANR	9799	Identifier	getSocketType		9637	0					
ANR	9800	ArgumentList	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	1					
ANR	9801	Argument	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	0					
ANR	9802	CallExpression	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	0					
ANR	9803	Callee	es_str2cstr		9637	0					
ANR	9804	Identifier	es_str2cstr		9637	0					
ANR	9805	ArgumentList	pvals [ i ] . val . d . estr		9637	1					
ANR	9806	Argument	pvals [ i ] . val . d . estr		9637	0					
ANR	9807	MemberAccess	pvals [ i ] . val . d . estr		9637	0					
ANR	9808	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	9809	MemberAccess	pvals [ i ] . val		9637	0					
ANR	9810	ArrayIndexing	pvals [ i ]		9637	0					
ANR	9811	Identifier	pvals		9637	0					
ANR	9812	Identifier	i		9637	1					
ANR	9813	Identifier	val		9637	1					
ANR	9814	Identifier	d		9637	1					
ANR	9815	Identifier	estr		9637	1					
ANR	9816	Argument	NULL		9637	1					
ANR	9817	Identifier	NULL		9637	0					
ANR	9818	ElseStatement	else		9637	0					
ANR	9819	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""action"" ) )"		9637	0					
ANR	9820	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""action"" )"	471:18:15260:15299	9637	0	True				
ANR	9821	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""action"" )"		9637	0					
ANR	9822	UnaryOperator	!		9637	0					
ANR	9823	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""action"" )"		9637	1					
ANR	9824	Callee	strcmp		9637	0					
ANR	9825	Identifier	strcmp		9637	0					
ANR	9826	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	9827	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	9828	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	9829	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	9830	MemberAccess	inppblk . descr		9637	0					
ANR	9831	Identifier	inppblk		9637	0					
ANR	9832	Identifier	descr		9637	1					
ANR	9833	Identifier	i		9637	1					
ANR	9834	Identifier	name		9637	1					
ANR	9835	Argument	"""action"""		9637	1					
ANR	9836	PrimaryExpression	"""action"""		9637	0					
ANR	9837	CompoundStatement		16:59:670:670	9637	1					
ANR	9838	ExpressionStatement	"inst -> action = getSocketAction ( es_str2cstr ( pvals [ i ] . val . d . estr , NULL ) )"	472:12:15315:15385	9637	0	True				
ANR	9839	AssignmentExpression	"inst -> action = getSocketAction ( es_str2cstr ( pvals [ i ] . val . d . estr , NULL ) )"		9637	0		=			
ANR	9840	PtrMemberAccess	inst -> action		9637	0					
ANR	9841	Identifier	inst		9637	0					
ANR	9842	Identifier	action		9637	1					
ANR	9843	CallExpression	"getSocketAction ( es_str2cstr ( pvals [ i ] . val . d . estr , NULL ) )"		9637	1					
ANR	9844	Callee	getSocketAction		9637	0					
ANR	9845	Identifier	getSocketAction		9637	0					
ANR	9846	ArgumentList	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	1					
ANR	9847	Argument	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	0					
ANR	9848	CallExpression	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	0					
ANR	9849	Callee	es_str2cstr		9637	0					
ANR	9850	Identifier	es_str2cstr		9637	0					
ANR	9851	ArgumentList	pvals [ i ] . val . d . estr		9637	1					
ANR	9852	Argument	pvals [ i ] . val . d . estr		9637	0					
ANR	9853	MemberAccess	pvals [ i ] . val . d . estr		9637	0					
ANR	9854	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	9855	MemberAccess	pvals [ i ] . val		9637	0					
ANR	9856	ArrayIndexing	pvals [ i ]		9637	0					
ANR	9857	Identifier	pvals		9637	0					
ANR	9858	Identifier	i		9637	1					
ANR	9859	Identifier	val		9637	1					
ANR	9860	Identifier	d		9637	1					
ANR	9861	Identifier	estr		9637	1					
ANR	9862	Argument	NULL		9637	1					
ANR	9863	Identifier	NULL		9637	0					
ANR	9864	ElseStatement	else		9637	0					
ANR	9865	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""sndHWM"" ) )"		9637	0					
ANR	9866	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""sndHWM"" )"	473:18:15405:15444	9637	0	True				
ANR	9867	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""sndHWM"" )"		9637	0					
ANR	9868	UnaryOperator	!		9637	0					
ANR	9869	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""sndHWM"" )"		9637	1					
ANR	9870	Callee	strcmp		9637	0					
ANR	9871	Identifier	strcmp		9637	0					
ANR	9872	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	9873	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	9874	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	9875	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	9876	MemberAccess	inppblk . descr		9637	0					
ANR	9877	Identifier	inppblk		9637	0					
ANR	9878	Identifier	descr		9637	1					
ANR	9879	Identifier	i		9637	1					
ANR	9880	Identifier	name		9637	1					
ANR	9881	Argument	"""sndHWM"""		9637	1					
ANR	9882	PrimaryExpression	"""sndHWM"""		9637	0					
ANR	9883	CompoundStatement		18:60:816:816	9637	1					
ANR	9884	ExpressionStatement	inst -> sndHWM = ( int ) pvals [ i ] . val . d . n	474:12:15461:15498	9637	0	True				
ANR	9885	AssignmentExpression	inst -> sndHWM = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	9886	PtrMemberAccess	inst -> sndHWM		9637	0					
ANR	9887	Identifier	inst		9637	0					
ANR	9888	Identifier	sndHWM		9637	1					
ANR	9889	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	9890	CastTarget	int		9637	0					
ANR	9891	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	9892	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	9893	MemberAccess	pvals [ i ] . val		9637	0					
ANR	9894	ArrayIndexing	pvals [ i ]		9637	0					
ANR	9895	Identifier	pvals		9637	0					
ANR	9896	Identifier	i		9637	1					
ANR	9897	Identifier	val		9637	1					
ANR	9898	Identifier	d		9637	1					
ANR	9899	Identifier	n		9637	1					
ANR	9900	ElseStatement	else		9637	0					
ANR	9901	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""rcvHWM"" ) )"		9637	0					
ANR	9902	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""rcvHWM"" )"	475:18:15518:15557	9637	0	True				
ANR	9903	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""rcvHWM"" )"		9637	0					
ANR	9904	UnaryOperator	!		9637	0					
ANR	9905	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""rcvHWM"" )"		9637	1					
ANR	9906	Callee	strcmp		9637	0					
ANR	9907	Identifier	strcmp		9637	0					
ANR	9908	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	9909	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	9910	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	9911	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	9912	MemberAccess	inppblk . descr		9637	0					
ANR	9913	Identifier	inppblk		9637	0					
ANR	9914	Identifier	descr		9637	1					
ANR	9915	Identifier	i		9637	1					
ANR	9916	Identifier	name		9637	1					
ANR	9917	Argument	"""rcvHWM"""		9637	1					
ANR	9918	PrimaryExpression	"""rcvHWM"""		9637	0					
ANR	9919	CompoundStatement		20:60:929:929	9637	1					
ANR	9920	ExpressionStatement	inst -> rcvHWM = ( int ) pvals [ i ] . val . d . n	476:12:15574:15611	9637	0	True				
ANR	9921	AssignmentExpression	inst -> rcvHWM = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	9922	PtrMemberAccess	inst -> rcvHWM		9637	0					
ANR	9923	Identifier	inst		9637	0					
ANR	9924	Identifier	rcvHWM		9637	1					
ANR	9925	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	9926	CastTarget	int		9637	0					
ANR	9927	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	9928	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	9929	MemberAccess	pvals [ i ] . val		9637	0					
ANR	9930	ArrayIndexing	pvals [ i ]		9637	0					
ANR	9931	Identifier	pvals		9637	0					
ANR	9932	Identifier	i		9637	1					
ANR	9933	Identifier	val		9637	1					
ANR	9934	Identifier	d		9637	1					
ANR	9935	Identifier	n		9637	1					
ANR	9936	ElseStatement	else		9637	0					
ANR	9937	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""subscribe"" ) )"		9637	0					
ANR	9938	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""subscribe"" )"	477:18:15631:15673	9637	0	True				
ANR	9939	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""subscribe"" )"		9637	0					
ANR	9940	UnaryOperator	!		9637	0					
ANR	9941	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""subscribe"" )"		9637	1					
ANR	9942	Callee	strcmp		9637	0					
ANR	9943	Identifier	strcmp		9637	0					
ANR	9944	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	9945	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	9946	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	9947	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	9948	MemberAccess	inppblk . descr		9637	0					
ANR	9949	Identifier	inppblk		9637	0					
ANR	9950	Identifier	descr		9637	1					
ANR	9951	Identifier	i		9637	1					
ANR	9952	Identifier	name		9637	1					
ANR	9953	Argument	"""subscribe"""		9637	1					
ANR	9954	PrimaryExpression	"""subscribe"""		9637	0					
ANR	9955	CompoundStatement		24:12:1130:1197	9637	1					
ANR	9956	IdentifierDeclStatement	"char * subscribes = es_str2cstr ( pvals [ i ] . val . d . estr , NULL ) ;"	478:12:15690:15747	9637	0	True				
ANR	9957	IdentifierDecl	"* subscribes = es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	0					
ANR	9958	IdentifierDeclType	char *		9637	0					
ANR	9959	Identifier	subscribes		9637	1					
ANR	9960	AssignmentExpression	"* subscribes = es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	2		=			
ANR	9961	Identifier	subscribes		9637	0					
ANR	9962	CallExpression	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	1					
ANR	9963	Callee	es_str2cstr		9637	0					
ANR	9964	Identifier	es_str2cstr		9637	0					
ANR	9965	ArgumentList	pvals [ i ] . val . d . estr		9637	1					
ANR	9966	Argument	pvals [ i ] . val . d . estr		9637	0					
ANR	9967	MemberAccess	pvals [ i ] . val . d . estr		9637	0					
ANR	9968	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	9969	MemberAccess	pvals [ i ] . val		9637	0					
ANR	9970	ArrayIndexing	pvals [ i ]		9637	0					
ANR	9971	Identifier	pvals		9637	0					
ANR	9972	Identifier	i		9637	1					
ANR	9973	Identifier	val		9637	1					
ANR	9974	Identifier	d		9637	1					
ANR	9975	Identifier	estr		9637	1					
ANR	9976	Argument	NULL		9637	1					
ANR	9977	Identifier	NULL		9637	0					
ANR	9978	IdentifierDeclStatement	"rsRetVal ret = parseSubscriptions ( subscribes , & inst -> subscriptions ) ;"	479:12:15761:15828	9637	1	True				
ANR	9979	IdentifierDecl	"ret = parseSubscriptions ( subscribes , & inst -> subscriptions )"		9637	0					
ANR	9980	IdentifierDeclType	rsRetVal		9637	0					
ANR	9981	Identifier	ret		9637	1					
ANR	9982	AssignmentExpression	"ret = parseSubscriptions ( subscribes , & inst -> subscriptions )"		9637	2		=			
ANR	9983	Identifier	ret		9637	0					
ANR	9984	CallExpression	"parseSubscriptions ( subscribes , & inst -> subscriptions )"		9637	1					
ANR	9985	Callee	parseSubscriptions		9637	0					
ANR	9986	Identifier	parseSubscriptions		9637	0					
ANR	9987	ArgumentList	subscribes		9637	1					
ANR	9988	Argument	subscribes		9637	0					
ANR	9989	Identifier	subscribes		9637	0					
ANR	9990	Argument	& inst -> subscriptions		9637	1					
ANR	9991	UnaryOperationExpression	& inst -> subscriptions		9637	0					
ANR	9992	UnaryOperator	&		9637	0					
ANR	9993	PtrMemberAccess	inst -> subscriptions		9637	1					
ANR	9994	Identifier	inst		9637	0					
ANR	9995	Identifier	subscriptions		9637	1					
ANR	9996	ExpressionStatement	free ( subscribes )	480:12:15842:15858	9637	2	True				
ANR	9997	CallExpression	free ( subscribes )		9637	0					
ANR	9998	Callee	free		9637	0					
ANR	9999	Identifier	free		9637	0					
ANR	10000	ArgumentList	subscribes		9637	1					
ANR	10001	Argument	subscribes		9637	0					
ANR	10002	Identifier	subscribes		9637	0					
ANR	10003	ExpressionStatement	CHKiRet ( ret )	481:12:15872:15884	9637	3	True				
ANR	10004	CallExpression	CHKiRet ( ret )		9637	0					
ANR	10005	Callee	CHKiRet		9637	0					
ANR	10006	Identifier	CHKiRet		9637	0					
ANR	10007	ArgumentList	ret		9637	1					
ANR	10008	Argument	ret		9637	0					
ANR	10009	Identifier	ret		9637	0					
ANR	10010	ElseStatement	else		9637	0					
ANR	10011	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""identity"" ) )"		9637	0					
ANR	10012	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""identity"" )"	482:18:15904:15945	9637	0	True				
ANR	10013	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""identity"" )"		9637	0					
ANR	10014	UnaryOperator	!		9637	0					
ANR	10015	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""identity"" )"		9637	1					
ANR	10016	Callee	strcmp		9637	0					
ANR	10017	Identifier	strcmp		9637	0					
ANR	10018	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10019	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10020	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10021	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10022	MemberAccess	inppblk . descr		9637	0					
ANR	10023	Identifier	inppblk		9637	0					
ANR	10024	Identifier	descr		9637	1					
ANR	10025	Identifier	i		9637	1					
ANR	10026	Identifier	name		9637	1					
ANR	10027	Argument	"""identity"""		9637	1					
ANR	10028	PrimaryExpression	"""identity"""		9637	0					
ANR	10029	CompoundStatement		27:61:1316:1316	9637	1					
ANR	10030	ExpressionStatement	"inst -> identity = es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"	483:12:15961:16016	9637	0	True				
ANR	10031	AssignmentExpression	"inst -> identity = es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	0		=			
ANR	10032	PtrMemberAccess	inst -> identity		9637	0					
ANR	10033	Identifier	inst		9637	0					
ANR	10034	Identifier	identity		9637	1					
ANR	10035	CallExpression	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		9637	1					
ANR	10036	Callee	es_str2cstr		9637	0					
ANR	10037	Identifier	es_str2cstr		9637	0					
ANR	10038	ArgumentList	pvals [ i ] . val . d . estr		9637	1					
ANR	10039	Argument	pvals [ i ] . val . d . estr		9637	0					
ANR	10040	MemberAccess	pvals [ i ] . val . d . estr		9637	0					
ANR	10041	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10042	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10043	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10044	Identifier	pvals		9637	0					
ANR	10045	Identifier	i		9637	1					
ANR	10046	Identifier	val		9637	1					
ANR	10047	Identifier	d		9637	1					
ANR	10048	Identifier	estr		9637	1					
ANR	10049	Argument	NULL		9637	1					
ANR	10050	Identifier	NULL		9637	0					
ANR	10051	ElseStatement	else		9637	0					
ANR	10052	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""sndBuf"" ) )"		9637	0					
ANR	10053	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""sndBuf"" )"	484:18:16036:16075	9637	0	True				
ANR	10054	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""sndBuf"" )"		9637	0					
ANR	10055	UnaryOperator	!		9637	0					
ANR	10056	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""sndBuf"" )"		9637	1					
ANR	10057	Callee	strcmp		9637	0					
ANR	10058	Identifier	strcmp		9637	0					
ANR	10059	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10060	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10061	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10062	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10063	MemberAccess	inppblk . descr		9637	0					
ANR	10064	Identifier	inppblk		9637	0					
ANR	10065	Identifier	descr		9637	1					
ANR	10066	Identifier	i		9637	1					
ANR	10067	Identifier	name		9637	1					
ANR	10068	Argument	"""sndBuf"""		9637	1					
ANR	10069	PrimaryExpression	"""sndBuf"""		9637	0					
ANR	10070	CompoundStatement		29:60:1447:1447	9637	1					
ANR	10071	ExpressionStatement	inst -> sndBuf = ( int ) pvals [ i ] . val . d . n	485:12:16092:16129	9637	0	True				
ANR	10072	AssignmentExpression	inst -> sndBuf = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10073	PtrMemberAccess	inst -> sndBuf		9637	0					
ANR	10074	Identifier	inst		9637	0					
ANR	10075	Identifier	sndBuf		9637	1					
ANR	10076	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10077	CastTarget	int		9637	0					
ANR	10078	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10079	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10080	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10081	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10082	Identifier	pvals		9637	0					
ANR	10083	Identifier	i		9637	1					
ANR	10084	Identifier	val		9637	1					
ANR	10085	Identifier	d		9637	1					
ANR	10086	Identifier	n		9637	1					
ANR	10087	ElseStatement	else		9637	0					
ANR	10088	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""rcvBuf"" ) )"		9637	0					
ANR	10089	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""rcvBuf"" )"	486:18:16149:16188	9637	0	True				
ANR	10090	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""rcvBuf"" )"		9637	0					
ANR	10091	UnaryOperator	!		9637	0					
ANR	10092	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""rcvBuf"" )"		9637	1					
ANR	10093	Callee	strcmp		9637	0					
ANR	10094	Identifier	strcmp		9637	0					
ANR	10095	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10096	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10097	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10098	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10099	MemberAccess	inppblk . descr		9637	0					
ANR	10100	Identifier	inppblk		9637	0					
ANR	10101	Identifier	descr		9637	1					
ANR	10102	Identifier	i		9637	1					
ANR	10103	Identifier	name		9637	1					
ANR	10104	Argument	"""rcvBuf"""		9637	1					
ANR	10105	PrimaryExpression	"""rcvBuf"""		9637	0					
ANR	10106	CompoundStatement		31:60:1560:1560	9637	1					
ANR	10107	ExpressionStatement	inst -> rcvBuf = ( int ) pvals [ i ] . val . d . n	487:12:16205:16242	9637	0	True				
ANR	10108	AssignmentExpression	inst -> rcvBuf = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10109	PtrMemberAccess	inst -> rcvBuf		9637	0					
ANR	10110	Identifier	inst		9637	0					
ANR	10111	Identifier	rcvBuf		9637	1					
ANR	10112	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10113	CastTarget	int		9637	0					
ANR	10114	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10115	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10116	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10117	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10118	Identifier	pvals		9637	0					
ANR	10119	Identifier	i		9637	1					
ANR	10120	Identifier	val		9637	1					
ANR	10121	Identifier	d		9637	1					
ANR	10122	Identifier	n		9637	1					
ANR	10123	ElseStatement	else		9637	0					
ANR	10124	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""linger"" ) )"		9637	0					
ANR	10125	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""linger"" )"	488:18:16262:16301	9637	0	True				
ANR	10126	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""linger"" )"		9637	0					
ANR	10127	UnaryOperator	!		9637	0					
ANR	10128	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""linger"" )"		9637	1					
ANR	10129	Callee	strcmp		9637	0					
ANR	10130	Identifier	strcmp		9637	0					
ANR	10131	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10132	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10133	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10134	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10135	MemberAccess	inppblk . descr		9637	0					
ANR	10136	Identifier	inppblk		9637	0					
ANR	10137	Identifier	descr		9637	1					
ANR	10138	Identifier	i		9637	1					
ANR	10139	Identifier	name		9637	1					
ANR	10140	Argument	"""linger"""		9637	1					
ANR	10141	PrimaryExpression	"""linger"""		9637	0					
ANR	10142	CompoundStatement		33:60:1673:1673	9637	1					
ANR	10143	ExpressionStatement	inst -> linger = ( int ) pvals [ i ] . val . d . n	489:12:16318:16355	9637	0	True				
ANR	10144	AssignmentExpression	inst -> linger = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10145	PtrMemberAccess	inst -> linger		9637	0					
ANR	10146	Identifier	inst		9637	0					
ANR	10147	Identifier	linger		9637	1					
ANR	10148	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10149	CastTarget	int		9637	0					
ANR	10150	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10151	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10152	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10153	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10154	Identifier	pvals		9637	0					
ANR	10155	Identifier	i		9637	1					
ANR	10156	Identifier	val		9637	1					
ANR	10157	Identifier	d		9637	1					
ANR	10158	Identifier	n		9637	1					
ANR	10159	ElseStatement	else		9637	0					
ANR	10160	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""backlog"" ) )"		9637	0					
ANR	10161	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""backlog"" )"	490:18:16375:16415	9637	0	True				
ANR	10162	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""backlog"" )"		9637	0					
ANR	10163	UnaryOperator	!		9637	0					
ANR	10164	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""backlog"" )"		9637	1					
ANR	10165	Callee	strcmp		9637	0					
ANR	10166	Identifier	strcmp		9637	0					
ANR	10167	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10168	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10169	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10170	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10171	MemberAccess	inppblk . descr		9637	0					
ANR	10172	Identifier	inppblk		9637	0					
ANR	10173	Identifier	descr		9637	1					
ANR	10174	Identifier	i		9637	1					
ANR	10175	Identifier	name		9637	1					
ANR	10176	Argument	"""backlog"""		9637	1					
ANR	10177	PrimaryExpression	"""backlog"""		9637	0					
ANR	10178	CompoundStatement		35:61:1787:1787	9637	1					
ANR	10179	ExpressionStatement	inst -> backlog = ( int ) pvals [ i ] . val . d . n	491:12:16432:16470	9637	0	True				
ANR	10180	AssignmentExpression	inst -> backlog = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10181	PtrMemberAccess	inst -> backlog		9637	0					
ANR	10182	Identifier	inst		9637	0					
ANR	10183	Identifier	backlog		9637	1					
ANR	10184	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10185	CastTarget	int		9637	0					
ANR	10186	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10187	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10188	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10189	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10190	Identifier	pvals		9637	0					
ANR	10191	Identifier	i		9637	1					
ANR	10192	Identifier	val		9637	1					
ANR	10193	Identifier	d		9637	1					
ANR	10194	Identifier	n		9637	1					
ANR	10195	ElseStatement	else		9637	0					
ANR	10196	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""sndTimeout"" ) )"		9637	0					
ANR	10197	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""sndTimeout"" )"	492:18:16490:16533	9637	0	True				
ANR	10198	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""sndTimeout"" )"		9637	0					
ANR	10199	UnaryOperator	!		9637	0					
ANR	10200	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""sndTimeout"" )"		9637	1					
ANR	10201	Callee	strcmp		9637	0					
ANR	10202	Identifier	strcmp		9637	0					
ANR	10203	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10204	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10205	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10206	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10207	MemberAccess	inppblk . descr		9637	0					
ANR	10208	Identifier	inppblk		9637	0					
ANR	10209	Identifier	descr		9637	1					
ANR	10210	Identifier	i		9637	1					
ANR	10211	Identifier	name		9637	1					
ANR	10212	Argument	"""sndTimeout"""		9637	1					
ANR	10213	PrimaryExpression	"""sndTimeout"""		9637	0					
ANR	10214	CompoundStatement		37:64:1905:1905	9637	1					
ANR	10215	ExpressionStatement	inst -> sndTimeout = ( int ) pvals [ i ] . val . d . n	493:12:16550:16591	9637	0	True				
ANR	10216	AssignmentExpression	inst -> sndTimeout = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10217	PtrMemberAccess	inst -> sndTimeout		9637	0					
ANR	10218	Identifier	inst		9637	0					
ANR	10219	Identifier	sndTimeout		9637	1					
ANR	10220	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10221	CastTarget	int		9637	0					
ANR	10222	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10223	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10224	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10225	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10226	Identifier	pvals		9637	0					
ANR	10227	Identifier	i		9637	1					
ANR	10228	Identifier	val		9637	1					
ANR	10229	Identifier	d		9637	1					
ANR	10230	Identifier	n		9637	1					
ANR	10231	ElseStatement	else		9637	0					
ANR	10232	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""rcvTimeout"" ) )"		9637	0					
ANR	10233	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""rcvTimeout"" )"	494:18:16611:16654	9637	0	True				
ANR	10234	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""rcvTimeout"" )"		9637	0					
ANR	10235	UnaryOperator	!		9637	0					
ANR	10236	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""rcvTimeout"" )"		9637	1					
ANR	10237	Callee	strcmp		9637	0					
ANR	10238	Identifier	strcmp		9637	0					
ANR	10239	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10240	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10241	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10242	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10243	MemberAccess	inppblk . descr		9637	0					
ANR	10244	Identifier	inppblk		9637	0					
ANR	10245	Identifier	descr		9637	1					
ANR	10246	Identifier	i		9637	1					
ANR	10247	Identifier	name		9637	1					
ANR	10248	Argument	"""rcvTimeout"""		9637	1					
ANR	10249	PrimaryExpression	"""rcvTimeout"""		9637	0					
ANR	10250	CompoundStatement		39:64:2026:2026	9637	1					
ANR	10251	ExpressionStatement	inst -> rcvTimeout = ( int ) pvals [ i ] . val . d . n	495:12:16671:16712	9637	0	True				
ANR	10252	AssignmentExpression	inst -> rcvTimeout = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10253	PtrMemberAccess	inst -> rcvTimeout		9637	0					
ANR	10254	Identifier	inst		9637	0					
ANR	10255	Identifier	rcvTimeout		9637	1					
ANR	10256	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10257	CastTarget	int		9637	0					
ANR	10258	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10259	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10260	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10261	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10262	Identifier	pvals		9637	0					
ANR	10263	Identifier	i		9637	1					
ANR	10264	Identifier	val		9637	1					
ANR	10265	Identifier	d		9637	1					
ANR	10266	Identifier	n		9637	1					
ANR	10267	ElseStatement	else		9637	0					
ANR	10268	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""maxMsgSize"" ) )"		9637	0					
ANR	10269	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""maxMsgSize"" )"	496:18:16732:16775	9637	0	True				
ANR	10270	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""maxMsgSize"" )"		9637	0					
ANR	10271	UnaryOperator	!		9637	0					
ANR	10272	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""maxMsgSize"" )"		9637	1					
ANR	10273	Callee	strcmp		9637	0					
ANR	10274	Identifier	strcmp		9637	0					
ANR	10275	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10276	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10277	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10278	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10279	MemberAccess	inppblk . descr		9637	0					
ANR	10280	Identifier	inppblk		9637	0					
ANR	10281	Identifier	descr		9637	1					
ANR	10282	Identifier	i		9637	1					
ANR	10283	Identifier	name		9637	1					
ANR	10284	Argument	"""maxMsgSize"""		9637	1					
ANR	10285	PrimaryExpression	"""maxMsgSize"""		9637	0					
ANR	10286	CompoundStatement		41:64:2147:2147	9637	1					
ANR	10287	ExpressionStatement	inst -> maxMsgSize = ( int ) pvals [ i ] . val . d . n	497:12:16792:16833	9637	0	True				
ANR	10288	AssignmentExpression	inst -> maxMsgSize = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10289	PtrMemberAccess	inst -> maxMsgSize		9637	0					
ANR	10290	Identifier	inst		9637	0					
ANR	10291	Identifier	maxMsgSize		9637	1					
ANR	10292	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10293	CastTarget	int		9637	0					
ANR	10294	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10295	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10296	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10297	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10298	Identifier	pvals		9637	0					
ANR	10299	Identifier	i		9637	1					
ANR	10300	Identifier	val		9637	1					
ANR	10301	Identifier	d		9637	1					
ANR	10302	Identifier	n		9637	1					
ANR	10303	ElseStatement	else		9637	0					
ANR	10304	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""rate"" ) )"		9637	0					
ANR	10305	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""rate"" )"	498:18:16853:16890	9637	0	True				
ANR	10306	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""rate"" )"		9637	0					
ANR	10307	UnaryOperator	!		9637	0					
ANR	10308	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""rate"" )"		9637	1					
ANR	10309	Callee	strcmp		9637	0					
ANR	10310	Identifier	strcmp		9637	0					
ANR	10311	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10312	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10313	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10314	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10315	MemberAccess	inppblk . descr		9637	0					
ANR	10316	Identifier	inppblk		9637	0					
ANR	10317	Identifier	descr		9637	1					
ANR	10318	Identifier	i		9637	1					
ANR	10319	Identifier	name		9637	1					
ANR	10320	Argument	"""rate"""		9637	1					
ANR	10321	PrimaryExpression	"""rate"""		9637	0					
ANR	10322	CompoundStatement		43:58:2262:2262	9637	1					
ANR	10323	ExpressionStatement	inst -> rate = ( int ) pvals [ i ] . val . d . n	499:12:16907:16942	9637	0	True				
ANR	10324	AssignmentExpression	inst -> rate = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10325	PtrMemberAccess	inst -> rate		9637	0					
ANR	10326	Identifier	inst		9637	0					
ANR	10327	Identifier	rate		9637	1					
ANR	10328	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10329	CastTarget	int		9637	0					
ANR	10330	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10331	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10332	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10333	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10334	Identifier	pvals		9637	0					
ANR	10335	Identifier	i		9637	1					
ANR	10336	Identifier	val		9637	1					
ANR	10337	Identifier	d		9637	1					
ANR	10338	Identifier	n		9637	1					
ANR	10339	ElseStatement	else		9637	0					
ANR	10340	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""recoveryIVL"" ) )"		9637	0					
ANR	10341	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""recoveryIVL"" )"	500:18:16962:17006	9637	0	True				
ANR	10342	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""recoveryIVL"" )"		9637	0					
ANR	10343	UnaryOperator	!		9637	0					
ANR	10344	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""recoveryIVL"" )"		9637	1					
ANR	10345	Callee	strcmp		9637	0					
ANR	10346	Identifier	strcmp		9637	0					
ANR	10347	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10348	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10349	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10350	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10351	MemberAccess	inppblk . descr		9637	0					
ANR	10352	Identifier	inppblk		9637	0					
ANR	10353	Identifier	descr		9637	1					
ANR	10354	Identifier	i		9637	1					
ANR	10355	Identifier	name		9637	1					
ANR	10356	Argument	"""recoveryIVL"""		9637	1					
ANR	10357	PrimaryExpression	"""recoveryIVL"""		9637	0					
ANR	10358	CompoundStatement		45:65:2378:2378	9637	1					
ANR	10359	ExpressionStatement	inst -> recoveryIVL = ( int ) pvals [ i ] . val . d . n	501:12:17023:17065	9637	0	True				
ANR	10360	AssignmentExpression	inst -> recoveryIVL = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10361	PtrMemberAccess	inst -> recoveryIVL		9637	0					
ANR	10362	Identifier	inst		9637	0					
ANR	10363	Identifier	recoveryIVL		9637	1					
ANR	10364	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10365	CastTarget	int		9637	0					
ANR	10366	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10367	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10368	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10369	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10370	Identifier	pvals		9637	0					
ANR	10371	Identifier	i		9637	1					
ANR	10372	Identifier	val		9637	1					
ANR	10373	Identifier	d		9637	1					
ANR	10374	Identifier	n		9637	1					
ANR	10375	ElseStatement	else		9637	0					
ANR	10376	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""multicastHops"" ) )"		9637	0					
ANR	10377	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""multicastHops"" )"	502:18:17085:17131	9637	0	True				
ANR	10378	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""multicastHops"" )"		9637	0					
ANR	10379	UnaryOperator	!		9637	0					
ANR	10380	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""multicastHops"" )"		9637	1					
ANR	10381	Callee	strcmp		9637	0					
ANR	10382	Identifier	strcmp		9637	0					
ANR	10383	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10384	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10385	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10386	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10387	MemberAccess	inppblk . descr		9637	0					
ANR	10388	Identifier	inppblk		9637	0					
ANR	10389	Identifier	descr		9637	1					
ANR	10390	Identifier	i		9637	1					
ANR	10391	Identifier	name		9637	1					
ANR	10392	Argument	"""multicastHops"""		9637	1					
ANR	10393	PrimaryExpression	"""multicastHops"""		9637	0					
ANR	10394	CompoundStatement		47:67:2503:2503	9637	1					
ANR	10395	ExpressionStatement	inst -> multicastHops = ( int ) pvals [ i ] . val . d . n	503:12:17148:17192	9637	0	True				
ANR	10396	AssignmentExpression	inst -> multicastHops = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10397	PtrMemberAccess	inst -> multicastHops		9637	0					
ANR	10398	Identifier	inst		9637	0					
ANR	10399	Identifier	multicastHops		9637	1					
ANR	10400	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10401	CastTarget	int		9637	0					
ANR	10402	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10403	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10404	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10405	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10406	Identifier	pvals		9637	0					
ANR	10407	Identifier	i		9637	1					
ANR	10408	Identifier	val		9637	1					
ANR	10409	Identifier	d		9637	1					
ANR	10410	Identifier	n		9637	1					
ANR	10411	ElseStatement	else		9637	0					
ANR	10412	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""reconnectIVL"" ) )"		9637	0					
ANR	10413	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""reconnectIVL"" )"	504:18:17212:17257	9637	0	True				
ANR	10414	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""reconnectIVL"" )"		9637	0					
ANR	10415	UnaryOperator	!		9637	0					
ANR	10416	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""reconnectIVL"" )"		9637	1					
ANR	10417	Callee	strcmp		9637	0					
ANR	10418	Identifier	strcmp		9637	0					
ANR	10419	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10420	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10421	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10422	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10423	MemberAccess	inppblk . descr		9637	0					
ANR	10424	Identifier	inppblk		9637	0					
ANR	10425	Identifier	descr		9637	1					
ANR	10426	Identifier	i		9637	1					
ANR	10427	Identifier	name		9637	1					
ANR	10428	Argument	"""reconnectIVL"""		9637	1					
ANR	10429	PrimaryExpression	"""reconnectIVL"""		9637	0					
ANR	10430	CompoundStatement		49:66:2629:2629	9637	1					
ANR	10431	ExpressionStatement	inst -> reconnectIVL = ( int ) pvals [ i ] . val . d . n	505:12:17274:17317	9637	0	True				
ANR	10432	AssignmentExpression	inst -> reconnectIVL = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10433	PtrMemberAccess	inst -> reconnectIVL		9637	0					
ANR	10434	Identifier	inst		9637	0					
ANR	10435	Identifier	reconnectIVL		9637	1					
ANR	10436	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10437	CastTarget	int		9637	0					
ANR	10438	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10439	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10440	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10441	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10442	Identifier	pvals		9637	0					
ANR	10443	Identifier	i		9637	1					
ANR	10444	Identifier	val		9637	1					
ANR	10445	Identifier	d		9637	1					
ANR	10446	Identifier	n		9637	1					
ANR	10447	ElseStatement	else		9637	0					
ANR	10448	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""reconnectIVLMax"" ) )"		9637	0					
ANR	10449	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""reconnectIVLMax"" )"	506:18:17337:17385	9637	0	True				
ANR	10450	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""reconnectIVLMax"" )"		9637	0					
ANR	10451	UnaryOperator	!		9637	0					
ANR	10452	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""reconnectIVLMax"" )"		9637	1					
ANR	10453	Callee	strcmp		9637	0					
ANR	10454	Identifier	strcmp		9637	0					
ANR	10455	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10456	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10457	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10458	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10459	MemberAccess	inppblk . descr		9637	0					
ANR	10460	Identifier	inppblk		9637	0					
ANR	10461	Identifier	descr		9637	1					
ANR	10462	Identifier	i		9637	1					
ANR	10463	Identifier	name		9637	1					
ANR	10464	Argument	"""reconnectIVLMax"""		9637	1					
ANR	10465	PrimaryExpression	"""reconnectIVLMax"""		9637	0					
ANR	10466	CompoundStatement		51:69:2757:2757	9637	1					
ANR	10467	ExpressionStatement	inst -> reconnectIVLMax = ( int ) pvals [ i ] . val . d . n	507:12:17402:17448	9637	0	True				
ANR	10468	AssignmentExpression	inst -> reconnectIVLMax = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10469	PtrMemberAccess	inst -> reconnectIVLMax		9637	0					
ANR	10470	Identifier	inst		9637	0					
ANR	10471	Identifier	reconnectIVLMax		9637	1					
ANR	10472	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10473	CastTarget	int		9637	0					
ANR	10474	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10475	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10476	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10477	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10478	Identifier	pvals		9637	0					
ANR	10479	Identifier	i		9637	1					
ANR	10480	Identifier	val		9637	1					
ANR	10481	Identifier	d		9637	1					
ANR	10482	Identifier	n		9637	1					
ANR	10483	ElseStatement	else		9637	0					
ANR	10484	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""ipv4Only"" ) )"		9637	0					
ANR	10485	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""ipv4Only"" )"	508:18:17468:17509	9637	0	True				
ANR	10486	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""ipv4Only"" )"		9637	0					
ANR	10487	UnaryOperator	!		9637	0					
ANR	10488	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""ipv4Only"" )"		9637	1					
ANR	10489	Callee	strcmp		9637	0					
ANR	10490	Identifier	strcmp		9637	0					
ANR	10491	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10492	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10493	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10494	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10495	MemberAccess	inppblk . descr		9637	0					
ANR	10496	Identifier	inppblk		9637	0					
ANR	10497	Identifier	descr		9637	1					
ANR	10498	Identifier	i		9637	1					
ANR	10499	Identifier	name		9637	1					
ANR	10500	Argument	"""ipv4Only"""		9637	1					
ANR	10501	PrimaryExpression	"""ipv4Only"""		9637	0					
ANR	10502	CompoundStatement		53:62:2881:2881	9637	1					
ANR	10503	ExpressionStatement	inst -> ipv4Only = ( int ) pvals [ i ] . val . d . n	509:12:17526:17565	9637	0	True				
ANR	10504	AssignmentExpression	inst -> ipv4Only = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10505	PtrMemberAccess	inst -> ipv4Only		9637	0					
ANR	10506	Identifier	inst		9637	0					
ANR	10507	Identifier	ipv4Only		9637	1					
ANR	10508	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10509	CastTarget	int		9637	0					
ANR	10510	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10511	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10512	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10513	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10514	Identifier	pvals		9637	0					
ANR	10515	Identifier	i		9637	1					
ANR	10516	Identifier	val		9637	1					
ANR	10517	Identifier	d		9637	1					
ANR	10518	Identifier	n		9637	1					
ANR	10519	ElseStatement	else		9637	0					
ANR	10520	IfStatement	"if ( ! strcmp ( inppblk . descr [ i ] . name , ""affinity"" ) )"		9637	0					
ANR	10521	Condition	"! strcmp ( inppblk . descr [ i ] . name , ""affinity"" )"	510:18:17585:17626	9637	0	True				
ANR	10522	UnaryOperationExpression	"! strcmp ( inppblk . descr [ i ] . name , ""affinity"" )"		9637	0					
ANR	10523	UnaryOperator	!		9637	0					
ANR	10524	CallExpression	"strcmp ( inppblk . descr [ i ] . name , ""affinity"" )"		9637	1					
ANR	10525	Callee	strcmp		9637	0					
ANR	10526	Identifier	strcmp		9637	0					
ANR	10527	ArgumentList	inppblk . descr [ i ] . name		9637	1					
ANR	10528	Argument	inppblk . descr [ i ] . name		9637	0					
ANR	10529	MemberAccess	inppblk . descr [ i ] . name		9637	0					
ANR	10530	ArrayIndexing	inppblk . descr [ i ]		9637	0					
ANR	10531	MemberAccess	inppblk . descr		9637	0					
ANR	10532	Identifier	inppblk		9637	0					
ANR	10533	Identifier	descr		9637	1					
ANR	10534	Identifier	i		9637	1					
ANR	10535	Identifier	name		9637	1					
ANR	10536	Argument	"""affinity"""		9637	1					
ANR	10537	PrimaryExpression	"""affinity"""		9637	0					
ANR	10538	CompoundStatement		55:62:2998:2998	9637	1					
ANR	10539	ExpressionStatement	inst -> affinity = ( int ) pvals [ i ] . val . d . n	511:12:17643:17682	9637	0	True				
ANR	10540	AssignmentExpression	inst -> affinity = ( int ) pvals [ i ] . val . d . n		9637	0		=			
ANR	10541	PtrMemberAccess	inst -> affinity		9637	0					
ANR	10542	Identifier	inst		9637	0					
ANR	10543	Identifier	affinity		9637	1					
ANR	10544	CastExpression	( int ) pvals [ i ] . val . d . n		9637	1					
ANR	10545	CastTarget	int		9637	0					
ANR	10546	MemberAccess	pvals [ i ] . val . d . n		9637	1					
ANR	10547	MemberAccess	pvals [ i ] . val . d		9637	0					
ANR	10548	MemberAccess	pvals [ i ] . val		9637	0					
ANR	10549	ArrayIndexing	pvals [ i ]		9637	0					
ANR	10550	Identifier	pvals		9637	0					
ANR	10551	Identifier	i		9637	1					
ANR	10552	Identifier	val		9637	1					
ANR	10553	Identifier	d		9637	1					
ANR	10554	Identifier	n		9637	1					
ANR	10555	ElseStatement	else		9637	0					
ANR	10556	CompoundStatement		57:15:3068:3068	9637	0					
ANR	10557	Statement	errmsg	513:12:17713:17718	9637	0	True				
ANR	10558	Statement	.	513:18:17719:17719	9637	1	True				
ANR	10559	Statement	LogError	513:19:17720:17727	9637	2	True				
ANR	10560	Statement	(	513:27:17728:17728	9637	3	True				
ANR	10561	Statement	0	513:28:17729:17729	9637	4	True				
ANR	10562	Statement	","	513:29:17730:17730	9637	5	True				
ANR	10563	Statement	NO_ERRCODE	513:31:17732:17741	9637	6	True				
ANR	10564	Statement	","	513:41:17742:17742	9637	7	True				
ANR	10565	Statement	"""imzmq3: program error, non-handled """	513:43:17744:17780	9637	8	True				
ANR	10566	Statement	"""param '%s'\\n"""	514:28:17810:17823	9637	9	True				
ANR	10567	Statement	","	514:42:17824:17824	9637	10	True				
ANR	10568	Statement	inppblk	514:44:17826:17832	9637	11	True				
ANR	10569	Statement	.	514:51:17833:17833	9637	12	True				
ANR	10570	Statement	descr	514:52:17834:17838	9637	13	True				
ANR	10571	Statement	[	514:57:17839:17839	9637	14	True				
ANR	10572	Statement	i	514:58:17840:17840	9637	15	True				
ANR	10573	Statement	]	514:59:17841:17841	9637	16	True				
ANR	10574	Statement	.	514:60:17842:17842	9637	17	True				
ANR	10575	Statement	name	514:61:17843:17846	9637	18	True				
ANR	10576	Statement	)	514:65:17847:17847	9637	19	True				
ANR	10577	ExpressionStatement		514:66:17848:17848	9637	20	True				
ANR	10578	Label	finalize_it :	518:0:17871:17882	9637	5	True				
ANR	10579	Identifier	finalize_it		9637	0					
ANR	10580	ExpressionStatement	RETiRet	519:4:17888:17895	9637	6	True				
ANR	10581	Identifier	RETiRet		9637	0					
ANR	10582	ReturnType	static rsRetVal		9637	1					
ANR	10583	Identifier	createListener		9637	2					
ANR	10584	ParameterList	struct cnfparamvals * pvals		9637	3					
ANR	10585	Parameter	struct cnfparamvals * pvals	456:31:14602:14627	9637	0	True				
ANR	10586	ParameterType	struct cnfparamvals *		9637	0					
ANR	10587	Identifier	pvals		9637	1					
ANR	10588	CFGEntryNode	ENTRY		9637		True				
ANR	10589	CFGExitNode	EXIT		9637		True				
ANR	10590	Symbol	pvals [ i ] . val . d . estr		9637						
ANR	10591	Symbol	inst -> recoveryIVL		9637						
ANR	10592	Symbol	inppblk . descr		9637						
ANR	10593	Symbol	pvals		9637						
ANR	10594	Symbol	inst -> backlog		9637						
ANR	10595	Symbol	* inppblk		9637						
ANR	10596	Symbol	inst -> sndBuf		9637						
ANR	10597	Symbol	es_str2cstr		9637						
ANR	10598	Symbol	inst -> rate		9637						
ANR	10599	Symbol	strcmp		9637						
ANR	10600	Symbol	ret		9637						
ANR	10601	Symbol	inst -> maxMsgSize		9637						
ANR	10602	Symbol	createInstance		9637						
ANR	10603	Symbol	subscribes		9637						
ANR	10604	Symbol	NULL		9637						
ANR	10605	Symbol	inst -> rcvBuf		9637						
ANR	10606	Symbol	inst -> ipv4Only		9637						
ANR	10607	Symbol	pvals [ i ] . val . d		9637						
ANR	10608	Symbol	inst -> reconnectIVL		9637						
ANR	10609	Symbol	* pvals		9637						
ANR	10610	Symbol	inst -> description		9637						
ANR	10611	Symbol	inst -> affinity		9637						
ANR	10612	Symbol	inst -> identity		9637						
ANR	10613	Symbol	inst -> rcvTimeout		9637						
ANR	10614	Symbol	* inppblk . descr		9637						
ANR	10615	Symbol	inst -> sndHWM		9637						
ANR	10616	Symbol	inst -> action		9637						
ANR	10617	Symbol	inst -> multicastHops		9637						
ANR	10618	Symbol	parseSubscriptions		9637						
ANR	10619	Symbol	inst -> sndTimeout		9637						
ANR	10620	Symbol	& inst		9637						
ANR	10621	Symbol	pvals [ i ] . val . d . n		9637						
ANR	10622	Symbol	pvals [ i ] . bUsed		9637						
ANR	10623	Symbol	getSocketAction		9637						
ANR	10624	Symbol	& inst -> subscriptions		9637						
ANR	10625	Symbol	inst -> reconnectIVLMax		9637						
ANR	10626	Symbol	inst -> pszBindRuleset		9637						
ANR	10627	Symbol	inppblk		9637						
ANR	10628	Symbol	getSocketType		9637						
ANR	10629	Symbol	* inst		9637						
ANR	10630	Symbol	inst -> rcvHWM		9637						
ANR	10631	Symbol	inst -> linger		9637						
ANR	10632	Symbol	pvals [ i ] . val		9637						
ANR	10633	Symbol	i		9637						
ANR	10634	Symbol	inst -> type		9637						
ANR	10635	Symbol	inppblk . nParams		9637						
ANR	10636	Symbol	* i		9637						
ANR	10637	Symbol	inst		9637						
ANR	10638	Symbol	inppblk . descr [ i ] . name		9637						
ANR	10639	Function	addListener	522:0:17900:18580							
ANR	10640	FunctionDef	addListener (instanceConf_t * inst)		10639	0					
ANR	10641	CompoundStatement		522:49:17949:18580	10639	0					
ANR	10642	IdentifierDeclStatement	void * sock ;	524:4:17983:17993	10639	0	True				
ANR	10643	IdentifierDecl	* sock		10639	0					
ANR	10644	IdentifierDeclType	void *		10639	0					
ANR	10645	Identifier	sock		10639	1					
ANR	10646	IdentifierDeclStatement	struct lstn_s * newcnfinfo ;	525:4:17999:18024	10639	1	True				
ANR	10647	IdentifierDecl	* newcnfinfo		10639	0					
ANR	10648	IdentifierDeclType	struct lstn_s *		10639	0					
ANR	10649	Identifier	newcnfinfo		10639	1					
ANR	10650	ExpressionStatement	DEFiRet	526:4:18030:18037	10639	2	True				
ANR	10651	Identifier	DEFiRet		10639	0					
ANR	10652	ExpressionStatement	"CHKiRet ( createSocket ( inst , & sock ) )"	528:4:18044:18078	10639	3	True				
ANR	10653	CallExpression	"CHKiRet ( createSocket ( inst , & sock ) )"		10639	0					
ANR	10654	Callee	CHKiRet		10639	0					
ANR	10655	Identifier	CHKiRet		10639	0					
ANR	10656	ArgumentList	"createSocket ( inst , & sock )"		10639	1					
ANR	10657	Argument	"createSocket ( inst , & sock )"		10639	0					
ANR	10658	CallExpression	"createSocket ( inst , & sock )"		10639	0					
ANR	10659	Callee	createSocket		10639	0					
ANR	10660	Identifier	createSocket		10639	0					
ANR	10661	ArgumentList	inst		10639	1					
ANR	10662	Argument	inst		10639	0					
ANR	10663	Identifier	inst		10639	0					
ANR	10664	Argument	& sock		10639	1					
ANR	10665	UnaryOperationExpression	& sock		10639	0					
ANR	10666	UnaryOperator	&		10639	0					
ANR	10667	Identifier	sock		10639	1					
ANR	10668	ExpressionStatement	CHKmalloc ( newcnfinfo = ( struct lstn_s * ) MALLOC ( sizeof ( struct lstn_s ) ) )	531:4:18124:18191	10639	4	True				
ANR	10669	CallExpression	CHKmalloc ( newcnfinfo = ( struct lstn_s * ) MALLOC ( sizeof ( struct lstn_s ) ) )		10639	0					
ANR	10670	Callee	CHKmalloc		10639	0					
ANR	10671	Identifier	CHKmalloc		10639	0					
ANR	10672	ArgumentList	newcnfinfo = ( struct lstn_s * ) MALLOC ( sizeof ( struct lstn_s ) )		10639	1					
ANR	10673	Argument	newcnfinfo = ( struct lstn_s * ) MALLOC ( sizeof ( struct lstn_s ) )		10639	0					
ANR	10674	AssignmentExpression	newcnfinfo = ( struct lstn_s * ) MALLOC ( sizeof ( struct lstn_s ) )		10639	0		=			
ANR	10675	Identifier	newcnfinfo		10639	0					
ANR	10676	CastExpression	( struct lstn_s * ) MALLOC ( sizeof ( struct lstn_s ) )		10639	1					
ANR	10677	CastTarget	struct lstn_s *		10639	0					
ANR	10678	CallExpression	MALLOC ( sizeof ( struct lstn_s ) )		10639	1					
ANR	10679	Callee	MALLOC		10639	0					
ANR	10680	Identifier	MALLOC		10639	0					
ANR	10681	ArgumentList	sizeof ( struct lstn_s )		10639	1					
ANR	10682	Argument	sizeof ( struct lstn_s )		10639	0					
ANR	10683	SizeofExpression	sizeof ( struct lstn_s )		10639	0					
ANR	10684	Sizeof	sizeof		10639	0					
ANR	10685	SizeofOperand	struct lstn_s		10639	1					
ANR	10686	ExpressionStatement	newcnfinfo -> next = NULL	532:4:18197:18220	10639	5	True				
ANR	10687	AssignmentExpression	newcnfinfo -> next = NULL		10639	0		=			
ANR	10688	PtrMemberAccess	newcnfinfo -> next		10639	0					
ANR	10689	Identifier	newcnfinfo		10639	0					
ANR	10690	Identifier	next		10639	1					
ANR	10691	Identifier	NULL		10639	1					
ANR	10692	ExpressionStatement	newcnfinfo -> sock = sock	533:4:18226:18249	10639	6	True				
ANR	10693	AssignmentExpression	newcnfinfo -> sock = sock		10639	0		=			
ANR	10694	PtrMemberAccess	newcnfinfo -> sock		10639	0					
ANR	10695	Identifier	newcnfinfo		10639	0					
ANR	10696	Identifier	sock		10639	1					
ANR	10697	Identifier	sock		10639	1					
ANR	10698	ExpressionStatement	newcnfinfo -> pRuleset = inst -> pBindRuleset	534:4:18255:18296	10639	7	True				
ANR	10699	AssignmentExpression	newcnfinfo -> pRuleset = inst -> pBindRuleset		10639	0		=			
ANR	10700	PtrMemberAccess	newcnfinfo -> pRuleset		10639	0					
ANR	10701	Identifier	newcnfinfo		10639	0					
ANR	10702	Identifier	pRuleset		10639	1					
ANR	10703	PtrMemberAccess	inst -> pBindRuleset		10639	1					
ANR	10704	Identifier	inst		10639	0					
ANR	10705	Identifier	pBindRuleset		10639	1					
ANR	10706	IfStatement	if ( lcnfRoot == NULL )		10639	8					
ANR	10707	Condition	lcnfRoot == NULL	537:7:18350:18365	10639	0	True				
ANR	10708	EqualityExpression	lcnfRoot == NULL		10639	0		==			
ANR	10709	Identifier	lcnfRoot		10639	0					
ANR	10710	Identifier	NULL		10639	1					
ANR	10711	CompoundStatement		16:25:418:418	10639	1					
ANR	10712	ExpressionStatement	lcnfRoot = newcnfinfo	538:8:18378:18399	10639	0	True				
ANR	10713	AssignmentExpression	lcnfRoot = newcnfinfo		10639	0		=			
ANR	10714	Identifier	lcnfRoot		10639	0					
ANR	10715	Identifier	newcnfinfo		10639	1					
ANR	10716	IfStatement	if ( lcnfLast == NULL )		10639	9					
ANR	10717	Condition	lcnfLast == NULL	540:7:18415:18430	10639	0	True				
ANR	10718	EqualityExpression	lcnfLast == NULL		10639	0		==			
ANR	10719	Identifier	lcnfLast		10639	0					
ANR	10720	Identifier	NULL		10639	1					
ANR	10721	CompoundStatement		19:25:483:483	10639	1					
ANR	10722	ExpressionStatement	lcnfLast = newcnfinfo	541:8:18443:18464	10639	0	True				
ANR	10723	AssignmentExpression	lcnfLast = newcnfinfo		10639	0		=			
ANR	10724	Identifier	lcnfLast		10639	0					
ANR	10725	Identifier	newcnfinfo		10639	1					
ANR	10726	ElseStatement	else		10639	0					
ANR	10727	CompoundStatement		21:11:527:527	10639	0					
ANR	10728	ExpressionStatement	lcnfLast -> next = newcnfinfo	543:8:18487:18514	10639	0	True				
ANR	10729	AssignmentExpression	lcnfLast -> next = newcnfinfo		10639	0		=			
ANR	10730	PtrMemberAccess	lcnfLast -> next		10639	0					
ANR	10731	Identifier	lcnfLast		10639	0					
ANR	10732	Identifier	next		10639	1					
ANR	10733	Identifier	newcnfinfo		10639	1					
ANR	10734	ExpressionStatement	lcnfLast = newcnfinfo	544:8:18524:18545	10639	1	True				
ANR	10735	AssignmentExpression	lcnfLast = newcnfinfo		10639	0		=			
ANR	10736	Identifier	lcnfLast		10639	0					
ANR	10737	Identifier	newcnfinfo		10639	1					
ANR	10738	Label	finalize_it :	547:0:18554:18565	10639	10	True				
ANR	10739	Identifier	finalize_it		10639	0					
ANR	10740	ExpressionStatement	RETiRet	548:4:18571:18578	10639	11	True				
ANR	10741	Identifier	RETiRet		10639	0					
ANR	10742	ReturnType	static rsRetVal		10639	1					
ANR	10743	Identifier	addListener		10639	2					
ANR	10744	ParameterList	instanceConf_t * inst		10639	3					
ANR	10745	Parameter	instanceConf_t * inst	522:28:17928:17947	10639	0	True				
ANR	10746	ParameterType	instanceConf_t *		10639	0					
ANR	10747	Identifier	inst		10639	1					
ANR	10748	CFGEntryNode	ENTRY		10639		True				
ANR	10749	CFGExitNode	EXIT		10639		True				
ANR	10750	Symbol	inst -> pBindRuleset		10639						
ANR	10751	Symbol	NULL		10639						
ANR	10752	Symbol	* inst		10639						
ANR	10753	Symbol	* lcnfLast		10639						
ANR	10754	Symbol	newcnfinfo -> next		10639						
ANR	10755	Symbol	newcnfinfo -> sock		10639						
ANR	10756	Symbol	lcnfLast -> next		10639						
ANR	10757	Symbol	newcnfinfo		10639						
ANR	10758	Symbol	& sock		10639						
ANR	10759	Symbol	lcnfRoot		10639						
ANR	10760	Symbol	sock		10639						
ANR	10761	Symbol	newcnfinfo -> pRuleset		10639						
ANR	10762	Symbol	createSocket		10639						
ANR	10763	Symbol	MALLOC		10639						
ANR	10764	Symbol	inst		10639						
ANR	10765	Symbol	lcnfLast		10639						
ANR	10766	Symbol	* newcnfinfo		10639						
ANR	10767	DeclStmt									
ANR	10768	Decl							smsg_t	smsg_t *	pMsg
ANR	10769	DeclStmt									
ANR	10770	Decl							poller_data	poller_data *	pollerData
ANR	10771	DeclStmt									
ANR	10772	Decl							char	char *	buf
ANR	10773	Function	rcv_loop	585:0:19877:22002							
ANR	10774	FunctionDef	rcv_loop (thrdInfo_t * pThrd)		10773	0					
ANR	10775	CompoundStatement		585:43:19920:22002	10773	0					
ANR	10776	IdentifierDeclStatement	size_t n_items = 0 ;	586:4:19926:19953	10773	0	True				
ANR	10777	IdentifierDecl	n_items = 0		10773	0					
ANR	10778	IdentifierDeclType	size_t		10773	0					
ANR	10779	Identifier	n_items		10773	1					
ANR	10780	AssignmentExpression	n_items = 0		10773	2		=			
ANR	10781	Identifier	n_items		10773	0					
ANR	10782	PrimaryExpression	0		10773	1					
ANR	10783	IdentifierDeclStatement	size_t i ;	587:4:19959:19976	10773	1	True				
ANR	10784	IdentifierDecl	i		10773	0					
ANR	10785	IdentifierDeclType	size_t		10773	0					
ANR	10786	Identifier	i		10773	1					
ANR	10787	IdentifierDeclStatement	int rv ;	588:4:19982:20000	10773	2	True				
ANR	10788	IdentifierDecl	rv		10773	0					
ANR	10789	IdentifierDeclType	int		10773	0					
ANR	10790	Identifier	rv		10773	1					
ANR	10791	IdentifierDeclStatement	zmq_pollitem_t * items = NULL ;	589:4:20006:20034	10773	3	True				
ANR	10792	IdentifierDecl	* items = NULL		10773	0					
ANR	10793	IdentifierDeclType	zmq_pollitem_t *		10773	0					
ANR	10794	Identifier	items		10773	1					
ANR	10795	AssignmentExpression	* items = NULL		10773	2		=			
ANR	10796	Identifier	NULL		10773	0					
ANR	10797	Identifier	NULL		10773	1					
ANR	10798	IdentifierDeclStatement	poller_data * pollerData = NULL ;	590:4:20040:20073	10773	4	True				
ANR	10799	IdentifierDecl	* pollerData = NULL		10773	0					
ANR	10800	IdentifierDeclType	poller_data *		10773	0					
ANR	10801	Identifier	pollerData		10773	1					
ANR	10802	AssignmentExpression	* pollerData = NULL		10773	2		=			
ANR	10803	Identifier	NULL		10773	0					
ANR	10804	Identifier	NULL		10773	1					
ANR	10805	IdentifierDeclStatement	struct lstn_s * current ;	591:4:20079:20102	10773	5	True				
ANR	10806	IdentifierDecl	* current		10773	0					
ANR	10807	IdentifierDeclType	struct lstn_s *		10773	0					
ANR	10808	Identifier	current		10773	1					
ANR	10809	IdentifierDeclStatement	instanceConf_t * inst ;	592:4:20108:20128	10773	6	True				
ANR	10810	IdentifierDecl	* inst		10773	0					
ANR	10811	IdentifierDeclType	instanceConf_t *		10773	0					
ANR	10812	Identifier	inst		10773	1					
ANR	10813	ExpressionStatement	DEFiRet	593:4:20134:20141	10773	7	True				
ANR	10814	Identifier	DEFiRet		10773	0					
ANR	10815	ForStatement	for ( inst = runModConf -> root ; inst != NULL ; inst = inst -> next )		10773	8					
ANR	10816	ForInit	inst = runModConf -> root ;	596:9:20224:20247	10773	0	True				
ANR	10817	AssignmentExpression	inst = runModConf -> root		10773	0		=			
ANR	10818	Identifier	inst		10773	0					
ANR	10819	PtrMemberAccess	runModConf -> root		10773	1					
ANR	10820	Identifier	runModConf		10773	0					
ANR	10821	Identifier	root		10773	1					
ANR	10822	Condition	inst != NULL	596:34:20249:20260	10773	1	True				
ANR	10823	EqualityExpression	inst != NULL		10773	0		!=			
ANR	10824	Identifier	inst		10773	0					
ANR	10825	Identifier	NULL		10773	1					
ANR	10826	AssignmentExpression	inst = inst -> next	596:48:20263:20277	10773	2	True	=			
ANR	10827	Identifier	inst		10773	0					
ANR	10828	PtrMemberAccess	inst -> next		10773	1					
ANR	10829	Identifier	inst		10773	0					
ANR	10830	Identifier	next		10773	1					
ANR	10831	CompoundStatement		12:65:359:359	10773	3					
ANR	10832	ExpressionStatement	addListener ( inst )	597:8:20290:20307	10773	0	True				
ANR	10833	CallExpression	addListener ( inst )		10773	0					
ANR	10834	Callee	addListener		10773	0					
ANR	10835	Identifier	addListener		10773	0					
ANR	10836	ArgumentList	inst		10773	1					
ANR	10837	Argument	inst		10773	0					
ANR	10838	Identifier	inst		10773	0					
ANR	10839	IfStatement	if ( lcnfRoot == NULL )		10773	9					
ANR	10840	Condition	lcnfRoot == NULL	599:8:20323:20338	10773	0	True				
ANR	10841	EqualityExpression	lcnfRoot == NULL		10773	0		==			
ANR	10842	Identifier	lcnfRoot		10773	0					
ANR	10843	Identifier	NULL		10773	1					
ANR	10844	CompoundStatement		15:26:420:420	10773	1					
ANR	10845	Statement	errmsg	600:8:20351:20356	10773	0	True				
ANR	10846	Statement	.	600:14:20357:20357	10773	1	True				
ANR	10847	Statement	LogError	600:15:20358:20365	10773	2	True				
ANR	10848	Statement	(	600:23:20366:20366	10773	3	True				
ANR	10849	Statement	0	600:24:20367:20367	10773	4	True				
ANR	10850	Statement	","	600:25:20368:20368	10773	5	True				
ANR	10851	Statement	NO_ERRCODE	600:27:20370:20379	10773	6	True				
ANR	10852	Statement	","	600:37:20380:20380	10773	7	True				
ANR	10853	Statement	"""imzmq3: no listeners were """	600:39:20382:20409	10773	8	True				
ANR	10854	Statement	"""started, input not activated.\\n"""	601:24:20435:20467	10773	9	True				
ANR	10855	Statement	)	601:57:20468:20468	10773	10	True				
ANR	10856	ExpressionStatement		601:58:20469:20469	10773	11	True				
ANR	10857	ExpressionStatement	ABORT_FINALIZE ( RS_RET_NO_RUN )	602:8:20479:20508	10773	12	True				
ANR	10858	CallExpression	ABORT_FINALIZE ( RS_RET_NO_RUN )		10773	0					
ANR	10859	Callee	ABORT_FINALIZE		10773	0					
ANR	10860	Identifier	ABORT_FINALIZE		10773	0					
ANR	10861	ArgumentList	RS_RET_NO_RUN		10773	1					
ANR	10862	Argument	RS_RET_NO_RUN		10773	0					
ANR	10863	Identifier	RS_RET_NO_RUN		10773	0					
ANR	10864	ForStatement	for ( current = lcnfRoot ; current != NULL ; current = current -> next )		10773	10					
ANR	10865	ForInit	current = lcnfRoot ;	606:8:20562:20578	10773	0	True				
ANR	10866	AssignmentExpression	current = lcnfRoot		10773	0		=			
ANR	10867	Identifier	current		10773	0					
ANR	10868	Identifier	lcnfRoot		10773	1					
ANR	10869	Condition	current != NULL	606:25:20579:20591	10773	1	True				
ANR	10870	EqualityExpression	current != NULL		10773	0		!=			
ANR	10871	Identifier	current		10773	0					
ANR	10872	Identifier	NULL		10773	1					
ANR	10873	AssignmentExpression	current = current -> next	606:39:20593:20613	10773	2	True	=			
ANR	10874	Identifier	current		10773	0					
ANR	10875	PtrMemberAccess	current -> next		10773	1					
ANR	10876	Identifier	current		10773	0					
ANR	10877	Identifier	next		10773	1					
ANR	10878	ExpressionStatement	n_items ++	607:8:20624:20633	10773	3	True				
ANR	10879	PostIncDecOperationExpression	n_items ++		10773	0					
ANR	10880	Identifier	n_items		10773	0					
ANR	10881	IncDec	++		10773	1					
ANR	10882	ExpressionStatement	CHKmalloc ( items = ( zmq_pollitem_t * ) MALLOC ( sizeof ( zmq_pollitem_t ) * n_items ) )	612:4:20757:20831	10773	11	True				
ANR	10883	CallExpression	CHKmalloc ( items = ( zmq_pollitem_t * ) MALLOC ( sizeof ( zmq_pollitem_t ) * n_items ) )		10773	0					
ANR	10884	Callee	CHKmalloc		10773	0					
ANR	10885	Identifier	CHKmalloc		10773	0					
ANR	10886	ArgumentList	items = ( zmq_pollitem_t * ) MALLOC ( sizeof ( zmq_pollitem_t ) * n_items )		10773	1					
ANR	10887	Argument	items = ( zmq_pollitem_t * ) MALLOC ( sizeof ( zmq_pollitem_t ) * n_items )		10773	0					
ANR	10888	AssignmentExpression	items = ( zmq_pollitem_t * ) MALLOC ( sizeof ( zmq_pollitem_t ) * n_items )		10773	0		=			
ANR	10889	Identifier	items		10773	0					
ANR	10890	CastExpression	( zmq_pollitem_t * ) MALLOC ( sizeof ( zmq_pollitem_t ) * n_items )		10773	1					
ANR	10891	CastTarget	zmq_pollitem_t *		10773	0					
ANR	10892	CallExpression	MALLOC ( sizeof ( zmq_pollitem_t ) * n_items )		10773	1					
ANR	10893	Callee	MALLOC		10773	0					
ANR	10894	Identifier	MALLOC		10773	0					
ANR	10895	ArgumentList	sizeof ( zmq_pollitem_t ) * n_items		10773	1					
ANR	10896	Argument	sizeof ( zmq_pollitem_t ) * n_items		10773	0					
ANR	10897	MultiplicativeExpression	sizeof ( zmq_pollitem_t ) * n_items		10773	0		*			
ANR	10898	SizeofExpression	sizeof ( zmq_pollitem_t )		10773	0					
ANR	10899	Sizeof	sizeof		10773	0					
ANR	10900	SizeofOperand	zmq_pollitem_t		10773	1					
ANR	10901	Identifier	n_items		10773	1					
ANR	10902	ExpressionStatement	CHKmalloc ( pollerData = ( poller_data * ) MALLOC ( sizeof ( poller_data ) * n_items ) )	615:4:20936:21009	10773	12	True				
ANR	10903	CallExpression	CHKmalloc ( pollerData = ( poller_data * ) MALLOC ( sizeof ( poller_data ) * n_items ) )		10773	0					
ANR	10904	Callee	CHKmalloc		10773	0					
ANR	10905	Identifier	CHKmalloc		10773	0					
ANR	10906	ArgumentList	pollerData = ( poller_data * ) MALLOC ( sizeof ( poller_data ) * n_items )		10773	1					
ANR	10907	Argument	pollerData = ( poller_data * ) MALLOC ( sizeof ( poller_data ) * n_items )		10773	0					
ANR	10908	AssignmentExpression	pollerData = ( poller_data * ) MALLOC ( sizeof ( poller_data ) * n_items )		10773	0		=			
ANR	10909	Identifier	pollerData		10773	0					
ANR	10910	CastExpression	( poller_data * ) MALLOC ( sizeof ( poller_data ) * n_items )		10773	1					
ANR	10911	CastTarget	poller_data *		10773	0					
ANR	10912	CallExpression	MALLOC ( sizeof ( poller_data ) * n_items )		10773	1					
ANR	10913	Callee	MALLOC		10773	0					
ANR	10914	Identifier	MALLOC		10773	0					
ANR	10915	ArgumentList	sizeof ( poller_data ) * n_items		10773	1					
ANR	10916	Argument	sizeof ( poller_data ) * n_items		10773	0					
ANR	10917	MultiplicativeExpression	sizeof ( poller_data ) * n_items		10773	0		*			
ANR	10918	SizeofExpression	sizeof ( poller_data )		10773	0					
ANR	10919	Sizeof	sizeof		10773	0					
ANR	10920	SizeofOperand	poller_data		10773	1					
ANR	10921	Identifier	n_items		10773	1					
ANR	10922	ForStatement	"for ( i = 0 , current = lcnfRoot ; current != NULL ; current = current -> next , i ++ )"		10773	13					
ANR	10923	ForInit	"i = 0 , current = lcnfRoot ;"	618:8:21098:21121	10773	0	True				
ANR	10924	Expression	"i = 0 , current = lcnfRoot"		10773	0					
ANR	10925	AssignmentExpression	i = 0		10773	0		=			
ANR	10926	Identifier	i		10773	0					
ANR	10927	PrimaryExpression	0		10773	1					
ANR	10928	AssignmentExpression	current = lcnfRoot		10773	1		=			
ANR	10929	Identifier	current		10773	0					
ANR	10930	Identifier	lcnfRoot		10773	1					
ANR	10931	Condition	current != NULL	618:33:21123:21137	10773	1	True				
ANR	10932	EqualityExpression	current != NULL		10773	0		!=			
ANR	10933	Identifier	current		10773	0					
ANR	10934	Identifier	NULL		10773	1					
ANR	10935	Expression	"current = current -> next , i ++"	618:50:21140:21167	10773	2	True				
ANR	10936	AssignmentExpression	current = current -> next		10773	0		=			
ANR	10937	Identifier	current		10773	0					
ANR	10938	PtrMemberAccess	current -> next		10773	1					
ANR	10939	Identifier	current		10773	0					
ANR	10940	Identifier	next		10773	1					
ANR	10941	PostIncDecOperationExpression	i ++		10773	1					
ANR	10942	Identifier	i		10773	0					
ANR	10943	IncDec	++		10773	1					
ANR	10944	CompoundStatement		34:80:1249:1249	10773	3					
ANR	10945	ExpressionStatement	items [ i ] . socket = current -> sock	620:8:21226:21255	10773	0	True				
ANR	10946	AssignmentExpression	items [ i ] . socket = current -> sock		10773	0		=			
ANR	10947	MemberAccess	items [ i ] . socket		10773	0					
ANR	10948	ArrayIndexing	items [ i ]		10773	0					
ANR	10949	Identifier	items		10773	0					
ANR	10950	Identifier	i		10773	1					
ANR	10951	Identifier	socket		10773	1					
ANR	10952	PtrMemberAccess	current -> sock		10773	1					
ANR	10953	Identifier	current		10773	0					
ANR	10954	Identifier	sock		10773	1					
ANR	10955	ExpressionStatement	items [ i ] . events = ZMQ_POLLIN	621:8:21265:21293	10773	1	True				
ANR	10956	AssignmentExpression	items [ i ] . events = ZMQ_POLLIN		10773	0		=			
ANR	10957	MemberAccess	items [ i ] . events		10773	0					
ANR	10958	ArrayIndexing	items [ i ]		10773	0					
ANR	10959	Identifier	items		10773	0					
ANR	10960	Identifier	i		10773	1					
ANR	10961	Identifier	events		10773	1					
ANR	10962	Identifier	ZMQ_POLLIN		10773	1					
ANR	10963	ExpressionStatement	pollerData [ i ] . thread = pThrd	624:8:21367:21396	10773	2	True				
ANR	10964	AssignmentExpression	pollerData [ i ] . thread = pThrd		10773	0		=			
ANR	10965	MemberAccess	pollerData [ i ] . thread		10773	0					
ANR	10966	ArrayIndexing	pollerData [ i ]		10773	0					
ANR	10967	Identifier	pollerData		10773	0					
ANR	10968	Identifier	i		10773	1					
ANR	10969	Identifier	thread		10773	1					
ANR	10970	Identifier	pThrd		10773	1					
ANR	10971	ExpressionStatement	pollerData [ i ] . ruleset = current -> pRuleset	625:8:21406:21447	10773	3	True				
ANR	10972	AssignmentExpression	pollerData [ i ] . ruleset = current -> pRuleset		10773	0		=			
ANR	10973	MemberAccess	pollerData [ i ] . ruleset		10773	0					
ANR	10974	ArrayIndexing	pollerData [ i ]		10773	0					
ANR	10975	Identifier	pollerData		10773	0					
ANR	10976	Identifier	i		10773	1					
ANR	10977	Identifier	ruleset		10773	1					
ANR	10978	PtrMemberAccess	current -> pRuleset		10773	1					
ANR	10979	Identifier	current		10773	0					
ANR	10980	Identifier	pRuleset		10773	1					
ANR	10981	ExpressionStatement	s_zloop = zloop_new ( )	628:4:21460:21481	10773	14	True				
ANR	10982	AssignmentExpression	s_zloop = zloop_new ( )		10773	0		=			
ANR	10983	Identifier	s_zloop		10773	0					
ANR	10984	CallExpression	zloop_new ( )		10773	1					
ANR	10985	Callee	zloop_new		10773	0					
ANR	10986	Identifier	zloop_new		10773	0					
ANR	10987	ArgumentList			10773	1					
ANR	10988	ForStatement	for ( i = 0 ; i < n_items ; ++ i )		10773	15					
ANR	10989	ForInit	i = 0 ;	629:8:21491:21494	10773	0	True				
ANR	10990	AssignmentExpression	i = 0		10773	0		=			
ANR	10991	Identifier	i		10773	0					
ANR	10992	PrimaryExpression	0		10773	1					
ANR	10993	Condition	i < n_items	629:13:21496:21504	10773	1	True				
ANR	10994	RelationalExpression	i < n_items		10773	0		<			
ANR	10995	Identifier	i		10773	0					
ANR	10996	Identifier	n_items		10773	1					
ANR	10997	UnaryExpression	++ i	629:24:21507:21509	10773	2	True				
ANR	10998	IncDec	++		10773	0					
ANR	10999	Identifier	i		10773	1					
ANR	11000	CompoundStatement		45:29:1591:1591	10773	3					
ANR	11001	ExpressionStatement	"rv = zloop_poller ( s_zloop , & items [ i ] , handlePoll , & pollerData [ i ] )"	631:8:21531:21596	10773	0	True				
ANR	11002	AssignmentExpression	"rv = zloop_poller ( s_zloop , & items [ i ] , handlePoll , & pollerData [ i ] )"		10773	0		=			
ANR	11003	Identifier	rv		10773	0					
ANR	11004	CallExpression	"zloop_poller ( s_zloop , & items [ i ] , handlePoll , & pollerData [ i ] )"		10773	1					
ANR	11005	Callee	zloop_poller		10773	0					
ANR	11006	Identifier	zloop_poller		10773	0					
ANR	11007	ArgumentList	s_zloop		10773	1					
ANR	11008	Argument	s_zloop		10773	0					
ANR	11009	Identifier	s_zloop		10773	0					
ANR	11010	Argument	& items [ i ]		10773	1					
ANR	11011	UnaryOperationExpression	& items [ i ]		10773	0					
ANR	11012	UnaryOperator	&		10773	0					
ANR	11013	ArrayIndexing	items [ i ]		10773	1					
ANR	11014	Identifier	items		10773	0					
ANR	11015	Identifier	i		10773	1					
ANR	11016	Argument	handlePoll		10773	2					
ANR	11017	Identifier	handlePoll		10773	0					
ANR	11018	Argument	& pollerData [ i ]		10773	3					
ANR	11019	UnaryOperationExpression	& pollerData [ i ]		10773	0					
ANR	11020	UnaryOperator	&		10773	0					
ANR	11021	ArrayIndexing	pollerData [ i ]		10773	1					
ANR	11022	Identifier	pollerData		10773	0					
ANR	11023	Identifier	i		10773	1					
ANR	11024	IfStatement	if ( rv )		10773	1					
ANR	11025	Condition	rv	632:12:21610:21611	10773	0	True				
ANR	11026	Identifier	rv		10773	0					
ANR	11027	CompoundStatement		48:16:1693:1693	10773	1					
ANR	11028	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""imzmq3: zloop_poller failed for item %zu: %s"" , i , zmq_strerror ( errno ) )"	633:12:21628:21730	10773	0	True				
ANR	11029	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""imzmq3: zloop_poller failed for item %zu: %s"" , i , zmq_strerror ( errno ) )"		10773	0					
ANR	11030	Callee	errmsg . LogError		10773	0					
ANR	11031	MemberAccess	errmsg . LogError		10773	0					
ANR	11032	Identifier	errmsg		10773	0					
ANR	11033	Identifier	LogError		10773	1					
ANR	11034	ArgumentList	0		10773	1					
ANR	11035	Argument	0		10773	0					
ANR	11036	PrimaryExpression	0		10773	0					
ANR	11037	Argument	NO_ERRCODE		10773	1					
ANR	11038	Identifier	NO_ERRCODE		10773	0					
ANR	11039	Argument	"""imzmq3: zloop_poller failed for item %zu: %s"""		10773	2					
ANR	11040	PrimaryExpression	"""imzmq3: zloop_poller failed for item %zu: %s"""		10773	0					
ANR	11041	Argument	i		10773	3					
ANR	11042	Identifier	i		10773	0					
ANR	11043	Argument	zmq_strerror ( errno )		10773	4					
ANR	11044	CallExpression	zmq_strerror ( errno )		10773	0					
ANR	11045	Callee	zmq_strerror		10773	0					
ANR	11046	Identifier	zmq_strerror		10773	0					
ANR	11047	ArgumentList	errno		10773	1					
ANR	11048	Argument	errno		10773	0					
ANR	11049	Identifier	errno		10773	0					
ANR	11050	ExpressionStatement	"DBGPRINTF ( ""imzmq3: zloop_poller starting..."" )"	636:4:21753:21798	10773	16	True				
ANR	11051	CallExpression	"DBGPRINTF ( ""imzmq3: zloop_poller starting..."" )"		10773	0					
ANR	11052	Callee	DBGPRINTF		10773	0					
ANR	11053	Identifier	DBGPRINTF		10773	0					
ANR	11054	ArgumentList	"""imzmq3: zloop_poller starting..."""		10773	1					
ANR	11055	Argument	"""imzmq3: zloop_poller starting..."""		10773	0					
ANR	11056	PrimaryExpression	"""imzmq3: zloop_poller starting..."""		10773	0					
ANR	11057	ExpressionStatement	zloop_start ( s_zloop )	637:4:21804:21824	10773	17	True				
ANR	11058	CallExpression	zloop_start ( s_zloop )		10773	0					
ANR	11059	Callee	zloop_start		10773	0					
ANR	11060	Identifier	zloop_start		10773	0					
ANR	11061	ArgumentList	s_zloop		10773	1					
ANR	11062	Argument	s_zloop		10773	0					
ANR	11063	Identifier	s_zloop		10773	0					
ANR	11064	ExpressionStatement	zloop_destroy ( & s_zloop )	638:4:21833:21856	10773	18	True				
ANR	11065	CallExpression	zloop_destroy ( & s_zloop )		10773	0					
ANR	11066	Callee	zloop_destroy		10773	0					
ANR	11067	Identifier	zloop_destroy		10773	0					
ANR	11068	ArgumentList	& s_zloop		10773	1					
ANR	11069	Argument	& s_zloop		10773	0					
ANR	11070	UnaryOperationExpression	& s_zloop		10773	0					
ANR	11071	UnaryOperator	&		10773	0					
ANR	11072	Identifier	s_zloop		10773	1					
ANR	11073	ExpressionStatement	"DBGPRINTF ( ""imzmq3: zloop_poller stopped."" )"	639:4:21862:21904	10773	19	True				
ANR	11074	CallExpression	"DBGPRINTF ( ""imzmq3: zloop_poller stopped."" )"		10773	0					
ANR	11075	Callee	DBGPRINTF		10773	0					
ANR	11076	Identifier	DBGPRINTF		10773	0					
ANR	11077	ArgumentList	"""imzmq3: zloop_poller stopped."""		10773	1					
ANR	11078	Argument	"""imzmq3: zloop_poller stopped."""		10773	0					
ANR	11079	PrimaryExpression	"""imzmq3: zloop_poller stopped."""		10773	0					
ANR	11080	Label	finalize_it :	640:0:21906:21917	10773	20	True				
ANR	11081	Identifier	finalize_it		10773	0					
ANR	11082	ExpressionStatement	zctx_destroy ( & s_context )	641:4:21923:21947	10773	21	True				
ANR	11083	CallExpression	zctx_destroy ( & s_context )		10773	0					
ANR	11084	Callee	zctx_destroy		10773	0					
ANR	11085	Identifier	zctx_destroy		10773	0					
ANR	11086	ArgumentList	& s_context		10773	1					
ANR	11087	Argument	& s_context		10773	0					
ANR	11088	UnaryOperationExpression	& s_context		10773	0					
ANR	11089	UnaryOperator	&		10773	0					
ANR	11090	Identifier	s_context		10773	1					
ANR	11091	ExpressionStatement	free ( items )	643:4:21954:21965	10773	22	True				
ANR	11092	CallExpression	free ( items )		10773	0					
ANR	11093	Callee	free		10773	0					
ANR	11094	Identifier	free		10773	0					
ANR	11095	ArgumentList	items		10773	1					
ANR	11096	Argument	items		10773	0					
ANR	11097	Identifier	items		10773	0					
ANR	11098	ExpressionStatement	free ( pollerData )	644:4:21971:21987	10773	23	True				
ANR	11099	CallExpression	free ( pollerData )		10773	0					
ANR	11100	Callee	free		10773	0					
ANR	11101	Identifier	free		10773	0					
ANR	11102	ArgumentList	pollerData		10773	1					
ANR	11103	Argument	pollerData		10773	0					
ANR	11104	Identifier	pollerData		10773	0					
ANR	11105	ExpressionStatement	RETiRet	645:4:21993:22000	10773	24	True				
ANR	11106	Identifier	RETiRet		10773	0					
ANR	11107	ReturnType	static rsRetVal		10773	1					
ANR	11108	Identifier	rcv_loop		10773	2					
ANR	11109	ParameterList	thrdInfo_t * pThrd		10773	3					
ANR	11110	Parameter	thrdInfo_t * pThrd	585:25:19902:19918	10773	0	True				
ANR	11111	ParameterType	thrdInfo_t *		10773	0					
ANR	11112	Identifier	pThrd		10773	1					
ANR	11113	CFGEntryNode	ENTRY		10773		True				
ANR	11114	CFGExitNode	EXIT		10773		True				
ANR	11115	Symbol	current -> next		10773						
ANR	11116	Symbol	rv		10773						
ANR	11117	Symbol	* pollerData		10773						
ANR	11118	Symbol	* current		10773						
ANR	11119	Symbol	pollerData [ i ] . thread		10773						
ANR	11120	Symbol	& s_context		10773						
ANR	11121	Symbol	current -> pRuleset		10773						
ANR	11122	Symbol	zloop_new		10773						
ANR	11123	Symbol	current		10773						
ANR	11124	Symbol	ZMQ_POLLIN		10773						
ANR	11125	Symbol	* items		10773						
ANR	11126	Symbol	NO_ERRCODE		10773						
ANR	11127	Symbol	zmq_strerror		10773						
ANR	11128	Symbol	& s_zloop		10773						
ANR	11129	Symbol	pollerData		10773						
ANR	11130	Symbol	items [ i ] . events		10773						
ANR	11131	Symbol	s_zloop		10773						
ANR	11132	Symbol	errno		10773						
ANR	11133	Symbol	NULL		10773						
ANR	11134	Symbol	* inst		10773						
ANR	11135	Symbol	pThrd		10773						
ANR	11136	Symbol	zloop_poller		10773						
ANR	11137	Symbol	n_items		10773						
ANR	11138	Symbol	i		10773						
ANR	11139	Symbol	errmsg		10773						
ANR	11140	Symbol	inst -> next		10773						
ANR	11141	Symbol	pollerData [ i ] . ruleset		10773						
ANR	11142	Symbol	lcnfRoot		10773						
ANR	11143	Symbol	RS_RET_NO_RUN		10773						
ANR	11144	Symbol	handlePoll		10773						
ANR	11145	Symbol	* runModConf		10773						
ANR	11146	Symbol	* i		10773						
ANR	11147	Symbol	items [ i ] . socket		10773						
ANR	11148	Symbol	MALLOC		10773						
ANR	11149	Symbol	current -> sock		10773						
ANR	11150	Symbol	inst		10773						
ANR	11151	Symbol	runModConf -> root		10773						
ANR	11152	Symbol	runModConf		10773						
ANR	11153	Symbol	items		10773						
ANR	11154	DeclStmt									
ANR	11155	Decl							BEGINrunInput CODESTARTrunInput	BEGINrunInput CODESTARTrunInput ( rcv_loop ( pThrd ) )	CHKiRet
ANR	11156	DeclStmt									
ANR	11157	Decl							ENDrunInput BEGINwillRun CODESTARTwillRun	ENDrunInput BEGINwillRun CODESTARTwillRun	CHKiRet
ANR	11158	DeclStmt									
ANR	11159	Decl							ENDafterRun BEGINmodExit CODESTARTmodExit	"ENDafterRun BEGINmodExit CODESTARTmodExit ( errmsg , CORE_COMPONENT )"	objRelease
ANR	11160	DeclStmt									
ANR	11161	Decl							ENDisCompatibleWithFeature BEGINbeginCnfLoad CODESTARTbeginCnfLoad	ENDisCompatibleWithFeature BEGINbeginCnfLoad CODESTARTbeginCnfLoad	runModConf
ANR	11162	DeclStmt									
ANR	11163	Decl							struct cnfparamvals	struct cnfparamvals *	pvals
ANR	11164	DeclStmt									
ANR	11165	Decl							int	int	i
ANR	11166	DeclStmt									
ANR	11167	Decl							CODESTARTsetModCnf	CODESTARTsetModCnf	pvals
ANR	11168	DeclStmt									
ANR	11169	Decl							BEGINcheckCnf instanceConf_t	BEGINcheckCnf instanceConf_t *	inst
ANR	11170	DeclStmt									
ANR	11171	Decl							struct lstn_s	struct lstn_s *	lstn
ANR	11172	Decl							struct lstn_s	struct lstn_s *	lstn_r
ANR	11173	DeclStmt									
ANR	11174	Decl							instanceConf_t	instanceConf_t *	inst
ANR	11175	Decl							instanceConf_t	instanceConf_t *	inst_r
ANR	11176	DeclStmt									
ANR	11177	Decl							sublist	sublist *	sub
ANR	11178	Decl							sublist	sublist *	sub_r
ANR	11179	DeclStmt									
ANR	11180	Decl							CODESTARTfreeCnf	CODESTARTfreeCnf	DBGPRINTF
ANR	11181	DeclStmt									
ANR	11182	Decl							struct cnfparamvals	struct cnfparamvals *	pvals
ANR	11183	DeclStmt									
ANR	11184	Decl							CODESTARTnewInpInst	CODESTARTnewInpInst	DBGPRINTF
ANR	11185	DeclStmt									
ANR	11186	Decl							CODE_STD_FINALIZERnewInpInst	CODE_STD_FINALIZERnewInpInst	cnfparamvalsDestruct
ANR	11187	DeclStmt									
ANR	11188	Decl							CODESTARTmodInit	CODESTARTmodInit *	ipIFVersProvided
ANR	11189	DeclStmt									
ANR	11190	Decl							CODEmodInit_QueryRegCFSLineHdlr	"CODEmodInit_QueryRegCFSLineHdlr ( objUse ( errmsg , CORE_COMPONENT ) )"	CHKiRet
