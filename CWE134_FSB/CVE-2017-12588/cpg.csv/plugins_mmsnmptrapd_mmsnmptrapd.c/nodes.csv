command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	91937	File	data/converged/CVE-2017-12588_rsyslog/plugins_mmsnmptrapd_mmsnmptrapd.c								
ANR	91938	ClassDef	severMap_s	63:0:1820:1891							
ANR	91939	DeclStmt									
ANR	91940	Decl							uchar	uchar *	name
ANR	91941	DeclStmt									
ANR	91942	Decl							int	int	code
ANR	91943	DeclStmt									
ANR	91944	Decl							struct severMap_s	struct severMap_s *	next
ANR	91945	ClassDef	_instanceData	69:8:1903:2135							
ANR	91946	DeclStmt									
ANR	91947	Decl							uchar	uchar *	pszTagName
ANR	91948	DeclStmt									
ANR	91949	Decl							uchar	uchar *	pszTagID
ANR	91950	DeclStmt									
ANR	91951	Decl							int	int	lenTagID
ANR	91952	DeclStmt									
ANR	91953	Decl							struct severMap_s	struct severMap_s *	severMap
ANR	91954	DeclStmt									
ANR	91955	Decl							_instanceData	_instanceData	instanceData
ANR	91956	ClassDef	wrkrInstanceData	76:8:2146:2214							
ANR	91957	DeclStmt									
ANR	91958	Decl							instanceData	instanceData *	pData
ANR	91959	DeclStmt									
ANR	91960	Decl							wrkrInstanceData	wrkrInstanceData	wrkrInstanceData_t
ANR	91961	ClassDef	configSettings_s	80:8:2225:2462							
ANR	91962	DeclStmt									
ANR	91963	Decl							uchar	uchar *	pszTagName
ANR	91964	DeclStmt									
ANR	91965	Decl							uchar	uchar *	pszSeverityMapping
ANR	91966	DeclStmt									
ANR	91967	Decl							configSettings_s	configSettings_s	configSettings_t
ANR	91968	DeclStmt									
ANR	91969	Decl							configSettings_t	configSettings_t	cs
ANR	91970	DeclStmt									
ANR	91971	Decl							struct severMap_s	struct severMap_s *	node
ANR	91972	Decl							struct severMap_s	struct severMap_s *	nodeDel
ANR	91973	DeclStmt									
ANR	91974	Decl							ENDfreeInstance BEGINfreeWrkrInstance CODESTARTfreeWrkrInstance ENDfreeWrkrInstance BEGINdbgPrintInstInfo CODESTARTdbgPrintInstInfo	ENDfreeInstance BEGINfreeWrkrInstance CODESTARTfreeWrkrInstance ENDfreeWrkrInstance BEGINdbgPrintInstInfo CODESTARTdbgPrintInstInfo	dbgprintf
ANR	91975	Function	isNumeric	138:0:3454:3637							
ANR	91976	FunctionDef	isNumeric (uchar * str)		91975	0					
ANR	91977	CompoundStatement		140:0:3487:3637	91975	0					
ANR	91978	IdentifierDeclStatement	int r = 1 ;	141:1:3490:3499	91975	0	True				
ANR	91979	IdentifierDecl	r = 1		91975	0					
ANR	91980	IdentifierDeclType	int		91975	0					
ANR	91981	Identifier	r		91975	1					
ANR	91982	AssignmentExpression	r = 1		91975	2		=			
ANR	91983	Identifier	r		91975	0					
ANR	91984	PrimaryExpression	1		91975	1					
ANR	91985	IfStatement	if ( * str == '-' || * str == '+' )		91975	1					
ANR	91986	Condition	* str == '-' || * str == '+'	142:4:3505:3530	91975	0	True				
ANR	91987	OrExpression	* str == '-' || * str == '+'		91975	0		||			
ANR	91988	EqualityExpression	* str == '-'		91975	0		==			
ANR	91989	UnaryOperationExpression	* str		91975	0					
ANR	91990	UnaryOperator	*		91975	0					
ANR	91991	Identifier	str		91975	1					
ANR	91992	PrimaryExpression	'-'		91975	1					
ANR	91993	EqualityExpression	* str == '+'		91975	1		==			
ANR	91994	UnaryOperationExpression	* str		91975	0					
ANR	91995	UnaryOperator	*		91975	0					
ANR	91996	Identifier	str		91975	1					
ANR	91997	PrimaryExpression	'+'		91975	1					
ANR	91998	ExpressionStatement	++ str	143:2:3535:3540	91975	1	True				
ANR	91999	UnaryExpression	++ str		91975	0					
ANR	92000	IncDec	++		91975	0					
ANR	92001	Identifier	str		91975	1					
ANR	92002	WhileStatement	while ( * str )		91975	2					
ANR	92003	Condition	* str	144:7:3549:3552	91975	0	True				
ANR	92004	UnaryOperationExpression	* str		91975	0					
ANR	92005	UnaryOperator	*		91975	0					
ANR	92006	Identifier	str		91975	1					
ANR	92007	CompoundStatement		5:13:67:67	91975	1					
ANR	92008	IfStatement	if ( ! isdigit ( * str ) )		91975	0					
ANR	92009	Condition	! isdigit ( * str )	145:5:3562:3575	91975	0	True				
ANR	92010	UnaryOperationExpression	! isdigit ( * str )		91975	0					
ANR	92011	UnaryOperator	!		91975	0					
ANR	92012	CallExpression	isdigit ( * str )		91975	1					
ANR	92013	Callee	isdigit		91975	0					
ANR	92014	Identifier	isdigit		91975	0					
ANR	92015	ArgumentList	* str		91975	1					
ANR	92016	Argument	* str		91975	0					
ANR	92017	UnaryOperationExpression	* str		91975	0					
ANR	92018	UnaryOperator	*		91975	0					
ANR	92019	Identifier	str		91975	1					
ANR	92020	CompoundStatement		6:21:90:90	91975	1					
ANR	92021	ExpressionStatement	r = 0	146:3:3583:3588	91975	0	True				
ANR	92022	AssignmentExpression	r = 0		91975	0		=			
ANR	92023	Identifier	r		91975	0					
ANR	92024	PrimaryExpression	0		91975	1					
ANR	92025	GotoStatement	goto done ;	147:3:3593:3602	91975	1	True				
ANR	92026	Identifier	done		91975	0					
ANR	92027	ExpressionStatement	++ str	149:2:3610:3615	91975	1	True				
ANR	92028	UnaryExpression	++ str		91975	0					
ANR	92029	IncDec	++		91975	0					
ANR	92030	Identifier	str		91975	1					
ANR	92031	Label	done :	151:0:3620:3624	91975	3	True				
ANR	92032	Identifier	done		91975	0					
ANR	92033	ReturnStatement	return r ;	152:1:3627:3635	91975	4	True				
ANR	92034	Identifier	r		91975	0					
ANR	92035	ReturnType	static int		91975	1					
ANR	92036	Identifier	isNumeric		91975	2					
ANR	92037	ParameterList	uchar * str		91975	3					
ANR	92038	Parameter	uchar * str	139:10:3475:3484	91975	0	True				
ANR	92039	ParameterType	uchar *		91975	0					
ANR	92040	Identifier	str		91975	1					
ANR	92041	CFGEntryNode	ENTRY		91975		True				
ANR	92042	CFGExitNode	EXIT		91975		True				
ANR	92043	Symbol	str		91975						
ANR	92044	Symbol	r		91975						
ANR	92045	Symbol	* str		91975						
ANR	92046	Symbol	isdigit		91975						
ANR	92047	Function	getSubstring	162:0:4005:4463							
ANR	92048	FunctionDef	"getSubstring (uchar * * psrc , uchar delim , uchar * dst , int lenDst)"		92047	0					
ANR	92049	CompoundStatement		164:0:4080:4463	92047	0					
ANR	92050	IdentifierDeclStatement	uchar * dstwrk = dst ;	165:1:4083:4102	92047	0	True				
ANR	92051	IdentifierDecl	* dstwrk = dst		92047	0					
ANR	92052	IdentifierDeclType	uchar *		92047	0					
ANR	92053	Identifier	dstwrk		92047	1					
ANR	92054	AssignmentExpression	* dstwrk = dst		92047	2		=			
ANR	92055	Identifier	dst		92047	0					
ANR	92056	Identifier	dst		92047	1					
ANR	92057	IdentifierDeclStatement	uchar * src = * psrc ;	166:1:4105:4123	92047	1	True				
ANR	92058	IdentifierDecl	* src = * psrc		92047	0					
ANR	92059	IdentifierDeclType	uchar *		92047	0					
ANR	92060	Identifier	src		92047	1					
ANR	92061	AssignmentExpression	* src = * psrc		92047	2		=			
ANR	92062	Identifier	src		92047	0					
ANR	92063	UnaryOperationExpression	* psrc		92047	1					
ANR	92064	UnaryOperator	*		92047	0					
ANR	92065	Identifier	psrc		92047	1					
ANR	92066	WhileStatement	while ( * src && isspace ( * src ) )		92047	2					
ANR	92067	Condition	* src && isspace ( * src )	167:7:4132:4152	92047	0	True				
ANR	92068	AndExpression	* src && isspace ( * src )		92047	0		&&			
ANR	92069	UnaryOperationExpression	* src		92047	0					
ANR	92070	UnaryOperator	*		92047	0					
ANR	92071	Identifier	src		92047	1					
ANR	92072	CallExpression	isspace ( * src )		92047	1					
ANR	92073	Callee	isspace		92047	0					
ANR	92074	Identifier	isspace		92047	0					
ANR	92075	ArgumentList	* src		92047	1					
ANR	92076	Argument	* src		92047	0					
ANR	92077	UnaryOperationExpression	* src		92047	0					
ANR	92078	UnaryOperator	*		92047	0					
ANR	92079	Identifier	src		92047	1					
ANR	92080	CompoundStatement		4:30:74:74	92047	1					
ANR	92081	ExpressionStatement	++ src	168:2:4159:4164	92047	0	True				
ANR	92082	UnaryExpression	++ src		92047	0					
ANR	92083	IncDec	++		92047	0					
ANR	92084	Identifier	src		92047	1					
ANR	92085	WhileStatement	while ( * src && * src != delim && -- lenDst > 0 )		92047	3					
ANR	92086	Condition	* src && * src != delim && -- lenDst > 0	170:7:4202:4238	92047	0	True				
ANR	92087	AndExpression	* src && * src != delim && -- lenDst > 0		92047	0		&&			
ANR	92088	UnaryOperationExpression	* src		92047	0					
ANR	92089	UnaryOperator	*		92047	0					
ANR	92090	Identifier	src		92047	1					
ANR	92091	AndExpression	* src != delim && -- lenDst > 0		92047	1		&&			
ANR	92092	EqualityExpression	* src != delim		92047	0		!=			
ANR	92093	UnaryOperationExpression	* src		92047	0					
ANR	92094	UnaryOperator	*		92047	0					
ANR	92095	Identifier	src		92047	1					
ANR	92096	Identifier	delim		92047	1					
ANR	92097	RelationalExpression	-- lenDst > 0		92047	1		>			
ANR	92098	UnaryExpression	-- lenDst		92047	0					
ANR	92099	IncDec	--		92047	0					
ANR	92100	Identifier	lenDst		92047	1					
ANR	92101	PrimaryExpression	0		92047	1					
ANR	92102	CompoundStatement		7:46:160:160	92047	1					
ANR	92103	ExpressionStatement	* dstwrk ++ = * src ++	171:2:4245:4263	92047	0	True				
ANR	92104	AssignmentExpression	* dstwrk ++ = * src ++		92047	0		=			
ANR	92105	UnaryOperationExpression	* dstwrk ++		92047	0					
ANR	92106	UnaryOperator	*		92047	0					
ANR	92107	PostIncDecOperationExpression	dstwrk ++		92047	1					
ANR	92108	Identifier	dstwrk		92047	0					
ANR	92109	IncDec	++		92047	1					
ANR	92110	UnaryOperationExpression	* src ++		92047	1					
ANR	92111	UnaryOperator	*		92047	0					
ANR	92112	PostIncDecOperationExpression	src ++		92047	1					
ANR	92113	Identifier	src		92047	0					
ANR	92114	IncDec	++		92047	1					
ANR	92115	ExpressionStatement	dstwrk --	173:1:4269:4277	92047	4	True				
ANR	92116	PostIncDecOperationExpression	dstwrk --		92047	0					
ANR	92117	Identifier	dstwrk		92047	0					
ANR	92118	IncDec	--		92047	1					
ANR	92119	WhileStatement	while ( dstwrk > dst && isspace ( * dst ) )		92047	5					
ANR	92120	Condition	dstwrk > dst && isspace ( * dst )	174:7:4286:4314	92047	0	True				
ANR	92121	AndExpression	dstwrk > dst && isspace ( * dst )		92047	0		&&			
ANR	92122	RelationalExpression	dstwrk > dst		92047	0		>			
ANR	92123	Identifier	dstwrk		92047	0					
ANR	92124	Identifier	dst		92047	1					
ANR	92125	CallExpression	isspace ( * dst )		92047	1					
ANR	92126	Callee	isspace		92047	0					
ANR	92127	Identifier	isspace		92047	0					
ANR	92128	ArgumentList	* dst		92047	1					
ANR	92129	Argument	* dst		92047	0					
ANR	92130	UnaryOperationExpression	* dst		92047	0					
ANR	92131	UnaryOperator	*		92047	0					
ANR	92132	Identifier	dst		92047	1					
ANR	92133	ExpressionStatement	-- dstwrk	175:2:4319:4327	92047	1	True				
ANR	92134	UnaryExpression	-- dstwrk		92047	0					
ANR	92135	IncDec	--		92047	0					
ANR	92136	Identifier	dstwrk		92047	1					
ANR	92137	ExpressionStatement	* ++ dstwrk = '\\0'	176:1:4357:4373	92047	6	True				
ANR	92138	AssignmentExpression	* ++ dstwrk = '\\0'		92047	0		=			
ANR	92139	UnaryOperationExpression	* ++ dstwrk		92047	0					
ANR	92140	UnaryOperator	*		92047	0					
ANR	92141	UnaryExpression	++ dstwrk		92047	1					
ANR	92142	IncDec	++		92047	0					
ANR	92143	Identifier	dstwrk		92047	1					
ANR	92144	PrimaryExpression	'\\0'		92047	1					
ANR	92145	IfStatement	if ( * src == delim )		92047	7					
ANR	92146	Condition	* src == delim	179:4:4402:4414	92047	0	True				
ANR	92147	EqualityExpression	* src == delim		92047	0		==			
ANR	92148	UnaryOperationExpression	* src		92047	0					
ANR	92149	UnaryOperator	*		92047	0					
ANR	92150	Identifier	src		92047	1					
ANR	92151	Identifier	delim		92047	1					
ANR	92152	ExpressionStatement	++ src	180:2:4419:4424	92047	1	True				
ANR	92153	UnaryExpression	++ src		92047	0					
ANR	92154	IncDec	++		92047	0					
ANR	92155	Identifier	src		92047	1					
ANR	92156	ExpressionStatement	* psrc = src	181:1:4427:4438	92047	8	True				
ANR	92157	AssignmentExpression	* psrc = src		92047	0		=			
ANR	92158	UnaryOperationExpression	* psrc		92047	0					
ANR	92159	UnaryOperator	*		92047	0					
ANR	92160	Identifier	psrc		92047	1					
ANR	92161	Identifier	src		92047	1					
ANR	92162	ReturnStatement	return ( dstwrk - dst ) ;	182:1:4441:4461	92047	9	True				
ANR	92163	AdditiveExpression	dstwrk - dst		92047	0		-			
ANR	92164	Identifier	dstwrk		92047	0					
ANR	92165	Identifier	dst		92047	1					
ANR	92166	ReturnType	static int		92047	1					
ANR	92167	Identifier	getSubstring		92047	2					
ANR	92168	ParameterList	"uchar * * psrc , uchar delim , uchar * dst , int lenDst"		92047	3					
ANR	92169	Parameter	uchar * * psrc	163:13:4029:4040	92047	0	True				
ANR	92170	ParameterType	uchar * *		92047	0					
ANR	92171	Identifier	psrc		92047	1					
ANR	92172	Parameter	uchar delim	163:27:4043:4053	92047	1	True				
ANR	92173	ParameterType	uchar		92047	0					
ANR	92174	Identifier	delim		92047	1					
ANR	92175	Parameter	uchar * dst	163:40:4056:4065	92047	2	True				
ANR	92176	ParameterType	uchar *		92047	0					
ANR	92177	Identifier	dst		92047	1					
ANR	92178	Parameter	int lenDst	163:52:4068:4077	92047	3	True				
ANR	92179	ParameterType	int		92047	0					
ANR	92180	Identifier	lenDst		92047	1					
ANR	92181	CFGEntryNode	ENTRY		92047		True				
ANR	92182	CFGExitNode	EXIT		92047		True				
ANR	92183	Symbol	psrc		92047						
ANR	92184	Symbol	dst		92047						
ANR	92185	Symbol	dstwrk		92047						
ANR	92186	Symbol	src		92047						
ANR	92187	Symbol	isspace		92047						
ANR	92188	Symbol	* psrc		92047						
ANR	92189	Symbol	* dstwrk		92047						
ANR	92190	Symbol	* src		92047						
ANR	92191	Symbol	* dstwrk ++		92047						
ANR	92192	Symbol	* ++ dstwrk		92047						
ANR	92193	Symbol	* dst		92047						
ANR	92194	Symbol	* src ++		92047						
ANR	92195	Symbol	lenDst		92047						
ANR	92196	Symbol	delim		92047						
ANR	92197	Function	getTagComponent	190:0:4637:4953							
ANR	92198	FunctionDef	"getTagComponent (uchar * tag , uchar * dst , int * lenDst)"		92197	0					
ANR	92199	CompoundStatement		192:0:4701:4953	92197	0					
ANR	92200	IdentifierDeclStatement	int end = * lenDst - 1 ;	193:1:4704:4725	92197	0	True				
ANR	92201	IdentifierDecl	end = * lenDst - 1		92197	0					
ANR	92202	IdentifierDeclType	int		92197	0					
ANR	92203	Identifier	end		92197	1					
ANR	92204	AssignmentExpression	end = * lenDst - 1		92197	2		=			
ANR	92205	Identifier	end		92197	0					
ANR	92206	AdditiveExpression	* lenDst - 1		92197	1		-			
ANR	92207	UnaryOperationExpression	* lenDst		92197	0					
ANR	92208	UnaryOperator	*		92197	0					
ANR	92209	Identifier	lenDst		92197	1					
ANR	92210	PrimaryExpression	1		92197	1					
ANR	92211	IdentifierDeclStatement	int i ;	194:1:4751:4756	92197	1	True				
ANR	92212	IdentifierDecl	i		92197	0					
ANR	92213	IdentifierDeclType	int		92197	0					
ANR	92214	Identifier	i		92197	1					
ANR	92215	ExpressionStatement	i = 0	196:1:4760:4765	92197	2	True				
ANR	92216	AssignmentExpression	i = 0		92197	0		=			
ANR	92217	Identifier	i		92197	0					
ANR	92218	PrimaryExpression	0		92197	1					
ANR	92219	IfStatement	if ( tag [ i ] != '/' )		92197	3					
ANR	92220	Condition	tag [ i ] != '/'	197:4:4771:4783	92197	0	True				
ANR	92221	EqualityExpression	tag [ i ] != '/'		92197	0		!=			
ANR	92222	ArrayIndexing	tag [ i ]		92197	0					
ANR	92223	Identifier	tag		92197	0					
ANR	92224	Identifier	i		92197	1					
ANR	92225	PrimaryExpression	'/'		92197	1					
ANR	92226	GotoStatement	goto done ;	198:2:4788:4797	92197	1	True				
ANR	92227	Identifier	done		92197	0					
ANR	92228	ExpressionStatement	++ tag	199:1:4800:4805	92197	4	True				
ANR	92229	UnaryExpression	++ tag		92197	0					
ANR	92230	IncDec	++		92197	0					
ANR	92231	Identifier	tag		92197	1					
ANR	92232	WhileStatement	while ( i < end && tag [ i ] != '\\0' && tag [ i ] != ' ' && tag [ i ] != '/' )		92197	5					
ANR	92233	Condition	i < end && tag [ i ] != '\\0' && tag [ i ] != ' ' && tag [ i ] != '/'	200:7:4814:4872	92197	0	True				
ANR	92234	AndExpression	i < end && tag [ i ] != '\\0' && tag [ i ] != ' ' && tag [ i ] != '/'		92197	0		&&			
ANR	92235	RelationalExpression	i < end		92197	0		<			
ANR	92236	Identifier	i		92197	0					
ANR	92237	Identifier	end		92197	1					
ANR	92238	AndExpression	tag [ i ] != '\\0' && tag [ i ] != ' ' && tag [ i ] != '/'		92197	1		&&			
ANR	92239	EqualityExpression	tag [ i ] != '\\0'		92197	0		!=			
ANR	92240	ArrayIndexing	tag [ i ]		92197	0					
ANR	92241	Identifier	tag		92197	0					
ANR	92242	Identifier	i		92197	1					
ANR	92243	PrimaryExpression	'\\0'		92197	1					
ANR	92244	AndExpression	tag [ i ] != ' ' && tag [ i ] != '/'		92197	1		&&			
ANR	92245	EqualityExpression	tag [ i ] != ' '		92197	0		!=			
ANR	92246	ArrayIndexing	tag [ i ]		92197	0					
ANR	92247	Identifier	tag		92197	0					
ANR	92248	Identifier	i		92197	1					
ANR	92249	PrimaryExpression	' '		92197	1					
ANR	92250	EqualityExpression	tag [ i ] != '/'		92197	1		!=			
ANR	92251	ArrayIndexing	tag [ i ]		92197	0					
ANR	92252	Identifier	tag		92197	0					
ANR	92253	Identifier	i		92197	1					
ANR	92254	PrimaryExpression	'/'		92197	1					
ANR	92255	CompoundStatement		9:68:173:173	92197	1					
ANR	92256	ExpressionStatement	dst [ i ] = tag [ i ]	201:2:4879:4894	92197	0	True				
ANR	92257	AssignmentExpression	dst [ i ] = tag [ i ]		92197	0		=			
ANR	92258	ArrayIndexing	dst [ i ]		92197	0					
ANR	92259	Identifier	dst		92197	0					
ANR	92260	Identifier	i		92197	1					
ANR	92261	ArrayIndexing	tag [ i ]		92197	1					
ANR	92262	Identifier	tag		92197	0					
ANR	92263	Identifier	i		92197	1					
ANR	92264	ExpressionStatement	++ i	202:2:4898:4901	92197	1	True				
ANR	92265	UnaryExpression	++ i		92197	0					
ANR	92266	IncDec	++		92197	0					
ANR	92267	Identifier	i		92197	1					
ANR	92268	ExpressionStatement	dst [ i ] = '\\0'	204:1:4907:4920	92197	6	True				
ANR	92269	AssignmentExpression	dst [ i ] = '\\0'		92197	0		=			
ANR	92270	ArrayIndexing	dst [ i ]		92197	0					
ANR	92271	Identifier	dst		92197	0					
ANR	92272	Identifier	i		92197	1					
ANR	92273	PrimaryExpression	'\\0'		92197	1					
ANR	92274	ExpressionStatement	* lenDst = i	205:1:4923:4934	92197	7	True				
ANR	92275	AssignmentExpression	* lenDst = i		92197	0		=			
ANR	92276	UnaryOperationExpression	* lenDst		92197	0					
ANR	92277	UnaryOperator	*		92197	0					
ANR	92278	Identifier	lenDst		92197	1					
ANR	92279	Identifier	i		92197	1					
ANR	92280	Label	done :	206:0:4936:4940	92197	8	True				
ANR	92281	Identifier	done		92197	0					
ANR	92282	ReturnStatement	return i ;	207:1:4943:4951	92197	9	True				
ANR	92283	Identifier	i		92197	0					
ANR	92284	ReturnType	static int		92197	1					
ANR	92285	Identifier	getTagComponent		92197	2					
ANR	92286	ParameterList	"uchar * tag , uchar * dst , int * lenDst"		92197	3					
ANR	92287	Parameter	uchar * tag	191:16:4664:4673	92197	0	True				
ANR	92288	ParameterType	uchar *		92197	0					
ANR	92289	Identifier	tag		92197	1					
ANR	92290	Parameter	uchar * dst	191:28:4676:4685	92197	1	True				
ANR	92291	ParameterType	uchar *		92197	0					
ANR	92292	Identifier	dst		92197	1					
ANR	92293	Parameter	int * lenDst	191:40:4688:4698	92197	2	True				
ANR	92294	ParameterType	int *		92197	0					
ANR	92295	Identifier	lenDst		92197	1					
ANR	92296	CFGEntryNode	ENTRY		92197		True				
ANR	92297	CFGExitNode	EXIT		92197		True				
ANR	92298	Symbol	* lenDst		92197						
ANR	92299	Symbol	* dst		92197						
ANR	92300	Symbol	* i		92197						
ANR	92301	Symbol	dst		92197						
ANR	92302	Symbol	* tag		92197						
ANR	92303	Symbol	i		92197						
ANR	92304	Symbol	end		92197						
ANR	92305	Symbol	tag		92197						
ANR	92306	Symbol	lenDst		92197						
ANR	92307	Function	lookupSeverityCode	214:0:5058:5332							
ANR	92308	FunctionDef	"lookupSeverityCode (instanceData * pData , uchar * sever)"		92307	0					
ANR	92309	CompoundStatement		216:0:5123:5332	92307	0					
ANR	92310	IdentifierDeclStatement	struct severMap_s * node ;	217:1:5126:5149	92307	0	True				
ANR	92311	IdentifierDecl	* node		92307	0					
ANR	92312	IdentifierDeclType	struct severMap_s *		92307	0					
ANR	92313	Identifier	node		92307	1					
ANR	92314	IdentifierDeclStatement	int sevCode = - 1 ;	218:1:5152:5168	92307	1	True				
ANR	92315	IdentifierDecl	sevCode = - 1		92307	0					
ANR	92316	IdentifierDeclType	int		92307	0					
ANR	92317	Identifier	sevCode		92307	1					
ANR	92318	AssignmentExpression	sevCode = - 1		92307	2		=			
ANR	92319	Identifier	sevCode		92307	0					
ANR	92320	UnaryOperationExpression	- 1		92307	1					
ANR	92321	UnaryOperator	-		92307	0					
ANR	92322	PrimaryExpression	1		92307	1					
ANR	92323	ForStatement	for ( node = pData -> severMap ; node != NULL ; node = node -> next )		92307	2					
ANR	92324	ForInit	node = pData -> severMap ;	220:5:5176:5199	92307	0	True				
ANR	92325	AssignmentExpression	node = pData -> severMap		92307	0		=			
ANR	92326	Identifier	node		92307	0					
ANR	92327	PtrMemberAccess	pData -> severMap		92307	1					
ANR	92328	Identifier	pData		92307	0					
ANR	92329	Identifier	severMap		92307	1					
ANR	92330	Condition	node != NULL	220:30:5201:5212	92307	1	True				
ANR	92331	EqualityExpression	node != NULL		92307	0		!=			
ANR	92332	Identifier	node		92307	0					
ANR	92333	Identifier	NULL		92307	1					
ANR	92334	AssignmentExpression	node = node -> next	220:45:5216:5232	92307	2	True	=			
ANR	92335	Identifier	node		92307	0					
ANR	92336	PtrMemberAccess	node -> next		92307	1					
ANR	92337	Identifier	node		92307	0					
ANR	92338	Identifier	next		92307	1					
ANR	92339	CompoundStatement		5:64:111:111	92307	3					
ANR	92340	IfStatement	"if ( ! ustrcmp ( node -> name , sever ) )"		92307	0					
ANR	92341	Condition	"! ustrcmp ( node -> name , sever )"	221:5:5242:5268	92307	0	True				
ANR	92342	UnaryOperationExpression	"! ustrcmp ( node -> name , sever )"		92307	0					
ANR	92343	UnaryOperator	!		92307	0					
ANR	92344	CallExpression	"ustrcmp ( node -> name , sever )"		92307	1					
ANR	92345	Callee	ustrcmp		92307	0					
ANR	92346	Identifier	ustrcmp		92307	0					
ANR	92347	ArgumentList	node -> name		92307	1					
ANR	92348	Argument	node -> name		92307	0					
ANR	92349	PtrMemberAccess	node -> name		92307	0					
ANR	92350	Identifier	node		92307	0					
ANR	92351	Identifier	name		92307	1					
ANR	92352	Argument	sever		92307	1					
ANR	92353	Identifier	sever		92307	0					
ANR	92354	CompoundStatement		6:34:147:147	92307	1					
ANR	92355	ExpressionStatement	sevCode = node -> code	222:3:5276:5296	92307	0	True				
ANR	92356	AssignmentExpression	sevCode = node -> code		92307	0		=			
ANR	92357	Identifier	sevCode		92307	0					
ANR	92358	PtrMemberAccess	node -> code		92307	1					
ANR	92359	Identifier	node		92307	0					
ANR	92360	Identifier	code		92307	1					
ANR	92361	BreakStatement	break ;	223:3:5301:5306	92307	1	True				
ANR	92362	ReturnStatement	return sevCode ;	226:1:5316:5330	92307	3	True				
ANR	92363	Identifier	sevCode		92307	0					
ANR	92364	ReturnType	static int		92307	1					
ANR	92365	Identifier	lookupSeverityCode		92307	2					
ANR	92366	ParameterList	"instanceData * pData , uchar * sever"		92307	3					
ANR	92367	Parameter	instanceData * pData	215:19:5088:5106	92307	0	True				
ANR	92368	ParameterType	instanceData *		92307	0					
ANR	92369	Identifier	pData		92307	1					
ANR	92370	Parameter	uchar * sever	215:40:5109:5120	92307	1	True				
ANR	92371	ParameterType	uchar *		92307	0					
ANR	92372	Identifier	sever		92307	1					
ANR	92373	CFGEntryNode	ENTRY		92307		True				
ANR	92374	CFGExitNode	EXIT		92307		True				
ANR	92375	Symbol	pData		92307						
ANR	92376	Symbol	pData -> severMap		92307						
ANR	92377	Symbol	node		92307						
ANR	92378	Symbol	NULL		92307						
ANR	92379	Symbol	node -> name		92307						
ANR	92380	Symbol	sevCode		92307						
ANR	92381	Symbol	ustrcmp		92307						
ANR	92382	Symbol	node -> code		92307						
ANR	92383	Symbol	sever		92307						
ANR	92384	Symbol	* node		92307						
ANR	92385	Symbol	node -> next		92307						
ANR	92386	Symbol	* pData		92307						
ANR	92387	DeclStmt									
ANR	92388	Decl							BEGINdoAction int	BEGINdoAction int	lenTAG
ANR	92389	DeclStmt									
ANR	92390	Decl							int	int	lenSever
ANR	92391	DeclStmt									
ANR	92392	Decl							int	int	lenHost
ANR	92393	DeclStmt									
ANR	92394	Decl							int	int	sevCode
ANR	92395	DeclStmt									
ANR	92396	Decl							smsg_t	smsg_t *	pMsg
ANR	92397	DeclStmt									
ANR	92398	Decl							uchar	uchar *	pszTag
ANR	92399	DeclStmt									
ANR	92400	Decl							uchar	uchar [ 512 ]	pszSever
ANR	92401	DeclStmt									
ANR	92402	Decl							uchar	uchar [ 512 ]	pszHost
ANR	92403	DeclStmt									
ANR	92404	Decl							instanceData	instanceData *	pData
ANR	92405	DeclStmt									
ANR	92406	Decl							CODESTARTdoAction	CODESTARTdoAction	pData
ANR	92407	Function	buildSeverityMapping	273:0:6531:7859							
ANR	92408	FunctionDef	buildSeverityMapping (instanceData * pData)		92407	0					
ANR	92409	CompoundStatement		275:0:6589:7859	92407	0					
ANR	92410	IdentifierDeclStatement	uchar pszSev [ 512 ] ;	276:1:6592:6609	92407	0	True				
ANR	92411	IdentifierDecl	pszSev [ 512 ]		92407	0					
ANR	92412	IdentifierDeclType	uchar [ 512 ]		92407	0					
ANR	92413	Identifier	pszSev		92407	1					
ANR	92414	PrimaryExpression	512		92407	2					
ANR	92415	IdentifierDeclStatement	uchar pszSevCode [ 512 ] ;	277:1:6612:6633	92407	1	True				
ANR	92416	IdentifierDecl	pszSevCode [ 512 ]		92407	0					
ANR	92417	IdentifierDeclType	uchar [ 512 ]		92407	0					
ANR	92418	Identifier	pszSevCode		92407	1					
ANR	92419	PrimaryExpression	512		92407	2					
ANR	92420	IdentifierDeclStatement	int sevCode ;	278:1:6636:6647	92407	2	True				
ANR	92421	IdentifierDecl	sevCode		92407	0					
ANR	92422	IdentifierDeclType	int		92407	0					
ANR	92423	Identifier	sevCode		92407	1					
ANR	92424	IdentifierDeclStatement	uchar * mapping ;	279:1:6650:6664	92407	3	True				
ANR	92425	IdentifierDecl	* mapping		92407	0					
ANR	92426	IdentifierDeclType	uchar *		92407	0					
ANR	92427	Identifier	mapping		92407	1					
ANR	92428	IdentifierDeclStatement	struct severMap_s * node = NULL ;	280:1:6667:6697	92407	4	True				
ANR	92429	IdentifierDecl	* node = NULL		92407	0					
ANR	92430	IdentifierDeclType	struct severMap_s *		92407	0					
ANR	92431	Identifier	node		92407	1					
ANR	92432	AssignmentExpression	* node = NULL		92407	2		=			
ANR	92433	Identifier	NULL		92407	0					
ANR	92434	Identifier	NULL		92407	1					
ANR	92435	ExpressionStatement	DEFiRet	281:1:6700:6707	92407	5	True				
ANR	92436	Identifier	DEFiRet		92407	0					
ANR	92437	ExpressionStatement	mapping = cs . pszSeverityMapping	283:1:6711:6742	92407	6	True				
ANR	92438	AssignmentExpression	mapping = cs . pszSeverityMapping		92407	0		=			
ANR	92439	Identifier	mapping		92407	0					
ANR	92440	MemberAccess	cs . pszSeverityMapping		92407	1					
ANR	92441	Identifier	cs		92407	0					
ANR	92442	Identifier	pszSeverityMapping		92407	1					
ANR	92443	WhileStatement	while ( 1 )		92407	7					
ANR	92444	Condition	1	285:7:6752:6752	92407	0	True				
ANR	92445	PrimaryExpression	1		92407	0					
ANR	92446	CompoundStatement		11:10:165:165	92407	1					
ANR	92447	IfStatement	"if ( getSubstring ( & mapping , '/' , pszSev , sizeof ( pszSev ) ) == 0 )"		92407	0					
ANR	92448	Condition	"getSubstring ( & mapping , '/' , pszSev , sizeof ( pszSev ) ) == 0"	286:5:6813:6868	92407	0	True				
ANR	92449	EqualityExpression	"getSubstring ( & mapping , '/' , pszSev , sizeof ( pszSev ) ) == 0"		92407	0		==			
ANR	92450	CallExpression	"getSubstring ( & mapping , '/' , pszSev , sizeof ( pszSev ) )"		92407	0					
ANR	92451	Callee	getSubstring		92407	0					
ANR	92452	Identifier	getSubstring		92407	0					
ANR	92453	ArgumentList	& mapping		92407	1					
ANR	92454	Argument	& mapping		92407	0					
ANR	92455	UnaryOperationExpression	& mapping		92407	0					
ANR	92456	UnaryOperator	&		92407	0					
ANR	92457	Identifier	mapping		92407	1					
ANR	92458	Argument	'/'		92407	1					
ANR	92459	PrimaryExpression	'/'		92407	0					
ANR	92460	Argument	pszSev		92407	2					
ANR	92461	Identifier	pszSev		92407	0					
ANR	92462	Argument	sizeof ( pszSev )		92407	3					
ANR	92463	SizeofExpression	sizeof ( pszSev )		92407	0					
ANR	92464	Sizeof	sizeof		92407	0					
ANR	92465	SizeofOperand	pszSev		92407	1					
ANR	92466	PrimaryExpression	0		92407	1					
ANR	92467	CompoundStatement		12:63:281:281	92407	1					
ANR	92468	ExpressionStatement	FINALIZE	287:3:6876:6884	92407	0	True				
ANR	92469	Identifier	FINALIZE		92407	0					
ANR	92470	IfStatement	"if ( getSubstring ( & mapping , ',' , pszSevCode , sizeof ( pszSevCode ) ) == 0 )"		92407	1					
ANR	92471	Condition	"getSubstring ( & mapping , ',' , pszSevCode , sizeof ( pszSevCode ) ) == 0"	289:5:6895:6958	92407	0	True				
ANR	92472	EqualityExpression	"getSubstring ( & mapping , ',' , pszSevCode , sizeof ( pszSevCode ) ) == 0"		92407	0		==			
ANR	92473	CallExpression	"getSubstring ( & mapping , ',' , pszSevCode , sizeof ( pszSevCode ) )"		92407	0					
ANR	92474	Callee	getSubstring		92407	0					
ANR	92475	Identifier	getSubstring		92407	0					
ANR	92476	ArgumentList	& mapping		92407	1					
ANR	92477	Argument	& mapping		92407	0					
ANR	92478	UnaryOperationExpression	& mapping		92407	0					
ANR	92479	UnaryOperator	&		92407	0					
ANR	92480	Identifier	mapping		92407	1					
ANR	92481	Argument	"','"		92407	1					
ANR	92482	PrimaryExpression	"','"		92407	0					
ANR	92483	Argument	pszSevCode		92407	2					
ANR	92484	Identifier	pszSevCode		92407	0					
ANR	92485	Argument	sizeof ( pszSevCode )		92407	3					
ANR	92486	SizeofExpression	sizeof ( pszSevCode )		92407	0					
ANR	92487	Sizeof	sizeof		92407	0					
ANR	92488	SizeofOperand	pszSevCode		92407	1					
ANR	92489	PrimaryExpression	0		92407	1					
ANR	92490	CompoundStatement		15:71:371:371	92407	1					
ANR	92491	Statement	errmsg	290:3:6966:6971	92407	0	True				
ANR	92492	Statement	.	290:9:6972:6972	92407	1	True				
ANR	92493	Statement	LogError	290:10:6973:6980	92407	2	True				
ANR	92494	Statement	(	290:18:6981:6981	92407	3	True				
ANR	92495	Statement	0	290:19:6982:6982	92407	4	True				
ANR	92496	Statement	","	290:20:6983:6983	92407	5	True				
ANR	92497	Statement	RS_RET_ERR	290:22:6985:6994	92407	6	True				
ANR	92498	Statement	","	290:32:6995:6995	92407	7	True				
ANR	92499	Statement	"""error: invalid severity mapping, cannot """	290:34:6997:7038	92407	8	True				
ANR	92500	Statement	"""extract code. given: '%s'\\n"""	291:5:7045:7073	92407	9	True				
ANR	92501	Statement	","	291:34:7074:7074	92407	10	True				
ANR	92502	Statement	cs	291:36:7076:7077	92407	11	True				
ANR	92503	Statement	.	291:38:7078:7078	92407	12	True				
ANR	92504	Statement	pszSeverityMapping	291:39:7079:7096	92407	13	True				
ANR	92505	Statement	)	291:57:7097:7097	92407	14	True				
ANR	92506	ExpressionStatement		291:58:7098:7098	92407	15	True				
ANR	92507	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	292:3:7103:7129	92407	16	True				
ANR	92508	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		92407	0					
ANR	92509	Callee	ABORT_FINALIZE		92407	0					
ANR	92510	Identifier	ABORT_FINALIZE		92407	0					
ANR	92511	ArgumentList	RS_RET_ERR		92407	1					
ANR	92512	Argument	RS_RET_ERR		92407	0					
ANR	92513	Identifier	RS_RET_ERR		92407	0					
ANR	92514	ExpressionStatement	sevCode = atoi ( ( char * ) pszSevCode )	294:2:7137:7171	92407	2	True				
ANR	92515	AssignmentExpression	sevCode = atoi ( ( char * ) pszSevCode )		92407	0		=			
ANR	92516	Identifier	sevCode		92407	0					
ANR	92517	CallExpression	atoi ( ( char * ) pszSevCode )		92407	1					
ANR	92518	Callee	atoi		92407	0					
ANR	92519	Identifier	atoi		92407	0					
ANR	92520	ArgumentList	( char * ) pszSevCode		92407	1					
ANR	92521	Argument	( char * ) pszSevCode		92407	0					
ANR	92522	CastExpression	( char * ) pszSevCode		92407	0					
ANR	92523	CastTarget	char *		92407	0					
ANR	92524	Identifier	pszSevCode		92407	1					
ANR	92525	IfStatement	if ( ! isNumeric ( pszSevCode ) )		92407	3					
ANR	92526	Condition	! isNumeric ( pszSevCode )	295:5:7178:7199	92407	0	True				
ANR	92527	UnaryOperationExpression	! isNumeric ( pszSevCode )		92407	0					
ANR	92528	UnaryOperator	!		92407	0					
ANR	92529	CallExpression	isNumeric ( pszSevCode )		92407	1					
ANR	92530	Callee	isNumeric		92407	0					
ANR	92531	Identifier	isNumeric		92407	0					
ANR	92532	ArgumentList	pszSevCode		92407	1					
ANR	92533	Argument	pszSevCode		92407	0					
ANR	92534	Identifier	pszSevCode		92407	0					
ANR	92535	ExpressionStatement	sevCode = - 1	296:3:7205:7217	92407	1	True				
ANR	92536	AssignmentExpression	sevCode = - 1		92407	0		=			
ANR	92537	Identifier	sevCode		92407	0					
ANR	92538	UnaryOperationExpression	- 1		92407	1					
ANR	92539	UnaryOperator	-		92407	0					
ANR	92540	PrimaryExpression	1		92407	1					
ANR	92541	IfStatement	if ( sevCode < 0 || sevCode > 7 )		92407	4					
ANR	92542	Condition	sevCode < 0 || sevCode > 7	297:5:7224:7249	92407	0	True				
ANR	92543	OrExpression	sevCode < 0 || sevCode > 7		92407	0		||			
ANR	92544	RelationalExpression	sevCode < 0		92407	0		<			
ANR	92545	Identifier	sevCode		92407	0					
ANR	92546	PrimaryExpression	0		92407	1					
ANR	92547	RelationalExpression	sevCode > 7		92407	1		>			
ANR	92548	Identifier	sevCode		92407	0					
ANR	92549	PrimaryExpression	7		92407	1					
ANR	92550	CompoundStatement		23:33:662:662	92407	1					
ANR	92551	Statement	errmsg	298:3:7257:7262	92407	0	True				
ANR	92552	Statement	.	298:9:7263:7263	92407	1	True				
ANR	92553	Statement	LogError	298:10:7264:7271	92407	2	True				
ANR	92554	Statement	(	298:18:7272:7272	92407	3	True				
ANR	92555	Statement	0	298:19:7273:7273	92407	4	True				
ANR	92556	Statement	","	298:20:7274:7274	92407	5	True				
ANR	92557	Statement	RS_RET_ERR	298:22:7276:7285	92407	6	True				
ANR	92558	Statement	","	298:32:7286:7286	92407	7	True				
ANR	92559	Statement	"""error: severity code %d outside of valid """	298:34:7288:7330	92407	8	True				
ANR	92560	Statement	"""range 0..7 (was string '%s')\\n"""	299:5:7337:7368	92407	9	True				
ANR	92561	Statement	","	299:37:7369:7369	92407	10	True				
ANR	92562	Statement	sevCode	299:39:7371:7377	92407	11	True				
ANR	92563	Statement	","	299:46:7378:7378	92407	12	True				
ANR	92564	Statement	pszSevCode	299:48:7380:7389	92407	13	True				
ANR	92565	Statement	)	299:58:7390:7390	92407	14	True				
ANR	92566	ExpressionStatement		299:59:7391:7391	92407	15	True				
ANR	92567	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	300:3:7396:7422	92407	16	True				
ANR	92568	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		92407	0					
ANR	92569	Callee	ABORT_FINALIZE		92407	0					
ANR	92570	Identifier	ABORT_FINALIZE		92407	0					
ANR	92571	ArgumentList	RS_RET_ERR		92407	1					
ANR	92572	Argument	RS_RET_ERR		92407	0					
ANR	92573	Identifier	RS_RET_ERR		92407	0					
ANR	92574	ExpressionStatement	CHKmalloc ( node = MALLOC ( sizeof ( struct severMap_s ) ) )	302:2:7430:7481	92407	5	True				
ANR	92575	CallExpression	CHKmalloc ( node = MALLOC ( sizeof ( struct severMap_s ) ) )		92407	0					
ANR	92576	Callee	CHKmalloc		92407	0					
ANR	92577	Identifier	CHKmalloc		92407	0					
ANR	92578	ArgumentList	node = MALLOC ( sizeof ( struct severMap_s ) )		92407	1					
ANR	92579	Argument	node = MALLOC ( sizeof ( struct severMap_s ) )		92407	0					
ANR	92580	AssignmentExpression	node = MALLOC ( sizeof ( struct severMap_s ) )		92407	0		=			
ANR	92581	Identifier	node		92407	0					
ANR	92582	CallExpression	MALLOC ( sizeof ( struct severMap_s ) )		92407	1					
ANR	92583	Callee	MALLOC		92407	0					
ANR	92584	Identifier	MALLOC		92407	0					
ANR	92585	ArgumentList	sizeof ( struct severMap_s )		92407	1					
ANR	92586	Argument	sizeof ( struct severMap_s )		92407	0					
ANR	92587	SizeofExpression	sizeof ( struct severMap_s )		92407	0					
ANR	92588	Sizeof	sizeof		92407	0					
ANR	92589	SizeofOperand	struct severMap_s		92407	1					
ANR	92590	ExpressionStatement	CHKmalloc ( node -> name = ustrdup ( pszSev ) )	303:2:7485:7524	92407	6	True				
ANR	92591	CallExpression	CHKmalloc ( node -> name = ustrdup ( pszSev ) )		92407	0					
ANR	92592	Callee	CHKmalloc		92407	0					
ANR	92593	Identifier	CHKmalloc		92407	0					
ANR	92594	ArgumentList	node -> name = ustrdup ( pszSev )		92407	1					
ANR	92595	Argument	node -> name = ustrdup ( pszSev )		92407	0					
ANR	92596	AssignmentExpression	node -> name = ustrdup ( pszSev )		92407	0		=			
ANR	92597	PtrMemberAccess	node -> name		92407	0					
ANR	92598	Identifier	node		92407	0					
ANR	92599	Identifier	name		92407	1					
ANR	92600	CallExpression	ustrdup ( pszSev )		92407	1					
ANR	92601	Callee	ustrdup		92407	0					
ANR	92602	Identifier	ustrdup		92407	0					
ANR	92603	ArgumentList	pszSev		92407	1					
ANR	92604	Argument	pszSev		92407	0					
ANR	92605	Identifier	pszSev		92407	0					
ANR	92606	ExpressionStatement	node -> code = sevCode	304:2:7528:7548	92407	7	True				
ANR	92607	AssignmentExpression	node -> code = sevCode		92407	0		=			
ANR	92608	PtrMemberAccess	node -> code		92407	0					
ANR	92609	Identifier	node		92407	0					
ANR	92610	Identifier	code		92407	1					
ANR	92611	Identifier	sevCode		92407	1					
ANR	92612	ExpressionStatement	node -> next = pData -> severMap	306:2:7622:7650	92407	8	True				
ANR	92613	AssignmentExpression	node -> next = pData -> severMap		92407	0		=			
ANR	92614	PtrMemberAccess	node -> next		92407	0					
ANR	92615	Identifier	node		92407	0					
ANR	92616	Identifier	next		92407	1					
ANR	92617	PtrMemberAccess	pData -> severMap		92407	1					
ANR	92618	Identifier	pData		92407	0					
ANR	92619	Identifier	severMap		92407	1					
ANR	92620	ExpressionStatement	pData -> severMap = node	307:2:7654:7676	92407	9	True				
ANR	92621	AssignmentExpression	pData -> severMap = node		92407	0		=			
ANR	92622	PtrMemberAccess	pData -> severMap		92407	0					
ANR	92623	Identifier	pData		92407	0					
ANR	92624	Identifier	severMap		92407	1					
ANR	92625	Identifier	node		92407	1					
ANR	92626	ExpressionStatement	"DBGPRINTF ( ""mmsnmptrapd: severity string '%s' mapped to code %d\\n"" , pszSev , sevCode )"	308:2:7680:7768	92407	10	True				
ANR	92627	CallExpression	"DBGPRINTF ( ""mmsnmptrapd: severity string '%s' mapped to code %d\\n"" , pszSev , sevCode )"		92407	0					
ANR	92628	Callee	DBGPRINTF		92407	0					
ANR	92629	Identifier	DBGPRINTF		92407	0					
ANR	92630	ArgumentList	"""mmsnmptrapd: severity string '%s' mapped to code %d\\n"""		92407	1					
ANR	92631	Argument	"""mmsnmptrapd: severity string '%s' mapped to code %d\\n"""		92407	0					
ANR	92632	PrimaryExpression	"""mmsnmptrapd: severity string '%s' mapped to code %d\\n"""		92407	0					
ANR	92633	Argument	pszSev		92407	1					
ANR	92634	Identifier	pszSev		92407	0					
ANR	92635	Argument	sevCode		92407	2					
ANR	92636	Identifier	sevCode		92407	0					
ANR	92637	Label	finalize_it :	312:0:7774:7785	92407	8	True				
ANR	92638	Identifier	finalize_it		92407	0					
ANR	92639	IfStatement	if ( iRet != RS_RET_OK )		92407	9					
ANR	92640	Condition	iRet != RS_RET_OK	313:4:7791:7807	92407	0	True				
ANR	92641	EqualityExpression	iRet != RS_RET_OK		92407	0		!=			
ANR	92642	Identifier	iRet		92407	0					
ANR	92643	Identifier	RS_RET_OK		92407	1					
ANR	92644	CompoundStatement		39:23:1220:1220	92407	1					
ANR	92645	IfStatement	if ( node != NULL )		92407	0					
ANR	92646	Condition	node != NULL	314:5:7817:7828	92407	0	True				
ANR	92647	EqualityExpression	node != NULL		92407	0		!=			
ANR	92648	Identifier	node		92407	0					
ANR	92649	Identifier	NULL		92407	1					
ANR	92650	ExpressionStatement	free ( node )	315:3:7834:7844	92407	1	True				
ANR	92651	CallExpression	free ( node )		92407	0					
ANR	92652	Callee	free		92407	0					
ANR	92653	Identifier	free		92407	0					
ANR	92654	ArgumentList	node		92407	1					
ANR	92655	Argument	node		92407	0					
ANR	92656	Identifier	node		92407	0					
ANR	92657	ExpressionStatement	RETiRet	317:1:7850:7857	92407	10	True				
ANR	92658	Identifier	RETiRet		92407	0					
ANR	92659	ReturnType	static rsRetVal		92407	1					
ANR	92660	Identifier	buildSeverityMapping		92407	2					
ANR	92661	ParameterList	instanceData * pData		92407	3					
ANR	92662	Parameter	instanceData * pData	274:21:6568:6586	92407	0	True				
ANR	92663	ParameterType	instanceData *		92407	0					
ANR	92664	Identifier	pData		92407	1					
ANR	92665	CFGEntryNode	ENTRY		92407		True				
ANR	92666	CFGExitNode	EXIT		92407		True				
ANR	92667	Symbol	atoi		92407						
ANR	92668	Symbol	pData -> severMap		92407						
ANR	92669	Symbol	pszSev		92407						
ANR	92670	Symbol	mapping		92407						
ANR	92671	Symbol	NULL		92407						
ANR	92672	Symbol	RS_RET_ERR		92407						
ANR	92673	Symbol	RS_RET_OK		92407						
ANR	92674	Symbol	iRet		92407						
ANR	92675	Symbol	node -> next		92407						
ANR	92676	Symbol	cs . pszSeverityMapping		92407						
ANR	92677	Symbol	ustrdup		92407						
ANR	92678	Symbol	& mapping		92407						
ANR	92679	Symbol	* pData		92407						
ANR	92680	Symbol	pData		92407						
ANR	92681	Symbol	cs		92407						
ANR	92682	Symbol	node		92407						
ANR	92683	Symbol	node -> name		92407						
ANR	92684	Symbol	sevCode		92407						
ANR	92685	Symbol	MALLOC		92407						
ANR	92686	Symbol	node -> code		92407						
ANR	92687	Symbol	pszSevCode		92407						
ANR	92688	Symbol	isNumeric		92407						
ANR	92689	Symbol	getSubstring		92407						
ANR	92690	Symbol	* node		92407						
ANR	92691	DeclStmt									
ANR	92692	Decl							int	int	lenTag
ANR	92693	DeclStmt									
ANR	92694	Decl							CODE_STD_FINALIZERparseSelectorAct ENDparseSelectorAct BEGINmodExit CODESTARTmodExit	"CODE_STD_FINALIZERparseSelectorAct ENDparseSelectorAct BEGINmodExit CODESTARTmodExit ( errmsg , CORE_COMPONENT )"	objRelease
ANR	92695	DeclStmt									
ANR	92696	Decl							rsRetVal	rsRetVal	localRet
ANR	92697	DeclStmt									
ANR	92698	Decl							rsRetVal ( * ) ( unsigned long * pOpts )	rsRetVal ( * ) ( unsigned long * pOpts )	pomsrGetSupportedTplOpts
ANR	92699	DeclStmt									
ANR	92700	Decl							unsigned long	unsigned long	opts
ANR	92701	DeclStmt									
ANR	92702	Decl							int	int	bMsgPassingSupported
ANR	92703	DeclStmt									
ANR	92704	Decl							CODESTARTmodInit INITLegCnfVars	CODESTARTmodInit INITLegCnfVars *	ipIFVersProvided
ANR	92705	DeclStmt									
ANR	92706	Decl							CODEmodInit_QueryRegCFSLineHdlr	CODEmodInit_QueryRegCFSLineHdlr	bMsgPassingSupported
