command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4656	File	data/converged/CVE-2017-12588_rsyslog/contrib_imczmq_imczmq.c								
ANR	4657	DeclStmt									
ANR	4658	Decl							MODULE_TYPE_INPUT MODULE_TYPE_NOKEEP	MODULE_TYPE_INPUT MODULE_TYPE_NOKEEP	MODULE_CNFNAME
ANR	4659	DeclStmt									
ANR	4660	Decl							struct cnfparamdescr	struct cnfparamdescr [ ]	modpdescr
ANR	4661	DeclStmt									
ANR	4662	Decl							struct cnfparamblk	struct cnfparamblk	modpblk
ANR	4663	ClassDef	modConfData_s	64:0:1602:1772							
ANR	4664	DeclStmt									
ANR	4665	Decl							rsconf_t	rsconf_t *	pConf
ANR	4666	DeclStmt									
ANR	4667	Decl							instanceConf_t	instanceConf_t *	root
ANR	4668	DeclStmt									
ANR	4669	Decl							instanceConf_t	instanceConf_t *	tail
ANR	4670	DeclStmt									
ANR	4671	Decl							int	int	authenticator
ANR	4672	DeclStmt									
ANR	4673	Decl							char	char *	authType
ANR	4674	DeclStmt									
ANR	4675	Decl							char	char *	serverCertPath
ANR	4676	DeclStmt									
ANR	4677	Decl							char	char *	clientCertPath
ANR	4678	ClassDef	instanceConf_s	74:0:1776:1949							
ANR	4679	DeclStmt									
ANR	4680	Decl							bool	bool	serverish
ANR	4681	DeclStmt									
ANR	4682	Decl							int	int	sockType
ANR	4683	DeclStmt									
ANR	4684	Decl							char	char *	sockEndpoints
ANR	4685	DeclStmt									
ANR	4686	Decl							char	char *	topics
ANR	4687	DeclStmt									
ANR	4688	Decl							uchar	uchar *	pszBindRuleset
ANR	4689	DeclStmt									
ANR	4690	Decl							ruleset_t	ruleset_t *	pBindRuleset
ANR	4691	DeclStmt									
ANR	4692	Decl							struct instanceConf_s	struct instanceConf_s *	next
ANR	4693	ClassDef	listener_t	84:0:1953:2010							
ANR	4694	DeclStmt									
ANR	4695	Decl							zsock_t	zsock_t *	sock
ANR	4696	DeclStmt									
ANR	4697	Decl							ruleset_t	ruleset_t *	ruleset
ANR	4698	DeclStmt									
ANR	4699	Decl							zlist_t	zlist_t *	listenerList
ANR	4700	DeclStmt									
ANR	4701	Decl							modConfData_t	modConfData_t *	runModConf
ANR	4702	DeclStmt									
ANR	4703	Decl							prop_t	prop_t *	s_namep
ANR	4704	DeclStmt									
ANR	4705	Decl							struct cnfparamdescr	struct cnfparamdescr [ ]	inppdescr
ANR	4706	DeclStmt									
ANR	4707	Decl							struct cnfparamblk	struct cnfparamblk	inppblk
ANR	4708	Function	setDefaults	108:0:2461:2693							
ANR	4709	FunctionDef	setDefaults (instanceConf_t * iconf)		4708	0					
ANR	4710	CompoundStatement		108:47:2508:2693	4708	0					
ANR	4711	ExpressionStatement	iconf -> serverish = true	109:1:2511:2534	4708	0	True				
ANR	4712	AssignmentExpression	iconf -> serverish = true		4708	0		=			
ANR	4713	PtrMemberAccess	iconf -> serverish		4708	0					
ANR	4714	Identifier	iconf		4708	0					
ANR	4715	Identifier	serverish		4708	1					
ANR	4716	Identifier	true		4708	1					
ANR	4717	ExpressionStatement	iconf -> sockType = - 1	110:1:2537:2557	4708	1	True				
ANR	4718	AssignmentExpression	iconf -> sockType = - 1		4708	0		=			
ANR	4719	PtrMemberAccess	iconf -> sockType		4708	0					
ANR	4720	Identifier	iconf		4708	0					
ANR	4721	Identifier	sockType		4708	1					
ANR	4722	UnaryOperationExpression	- 1		4708	1					
ANR	4723	UnaryOperator	-		4708	0					
ANR	4724	PrimaryExpression	1		4708	1					
ANR	4725	ExpressionStatement	iconf -> sockEndpoints = NULL	111:1:2560:2587	4708	2	True				
ANR	4726	AssignmentExpression	iconf -> sockEndpoints = NULL		4708	0		=			
ANR	4727	PtrMemberAccess	iconf -> sockEndpoints		4708	0					
ANR	4728	Identifier	iconf		4708	0					
ANR	4729	Identifier	sockEndpoints		4708	1					
ANR	4730	Identifier	NULL		4708	1					
ANR	4731	ExpressionStatement	iconf -> topics = NULL	112:1:2590:2610	4708	3	True				
ANR	4732	AssignmentExpression	iconf -> topics = NULL		4708	0		=			
ANR	4733	PtrMemberAccess	iconf -> topics		4708	0					
ANR	4734	Identifier	iconf		4708	0					
ANR	4735	Identifier	topics		4708	1					
ANR	4736	Identifier	NULL		4708	1					
ANR	4737	ExpressionStatement	iconf -> pszBindRuleset = NULL	113:1:2613:2641	4708	4	True				
ANR	4738	AssignmentExpression	iconf -> pszBindRuleset = NULL		4708	0		=			
ANR	4739	PtrMemberAccess	iconf -> pszBindRuleset		4708	0					
ANR	4740	Identifier	iconf		4708	0					
ANR	4741	Identifier	pszBindRuleset		4708	1					
ANR	4742	Identifier	NULL		4708	1					
ANR	4743	ExpressionStatement	iconf -> pBindRuleset = NULL	114:1:2644:2670	4708	5	True				
ANR	4744	AssignmentExpression	iconf -> pBindRuleset = NULL		4708	0		=			
ANR	4745	PtrMemberAccess	iconf -> pBindRuleset		4708	0					
ANR	4746	Identifier	iconf		4708	0					
ANR	4747	Identifier	pBindRuleset		4708	1					
ANR	4748	Identifier	NULL		4708	1					
ANR	4749	ExpressionStatement	iconf -> next = NULL	115:1:2673:2691	4708	6	True				
ANR	4750	AssignmentExpression	iconf -> next = NULL		4708	0		=			
ANR	4751	PtrMemberAccess	iconf -> next		4708	0					
ANR	4752	Identifier	iconf		4708	0					
ANR	4753	Identifier	next		4708	1					
ANR	4754	Identifier	NULL		4708	1					
ANR	4755	ReturnType	static void		4708	1					
ANR	4756	Identifier	setDefaults		4708	2					
ANR	4757	ParameterList	instanceConf_t * iconf		4708	3					
ANR	4758	Parameter	instanceConf_t * iconf	108:24:2485:2505	4708	0	True				
ANR	4759	ParameterType	instanceConf_t *		4708	0					
ANR	4760	Identifier	iconf		4708	1					
ANR	4761	CFGEntryNode	ENTRY		4708		True				
ANR	4762	CFGExitNode	EXIT		4708		True				
ANR	4763	Symbol	* iconf		4708						
ANR	4764	Symbol	iconf -> topics		4708						
ANR	4765	Symbol	iconf -> pszBindRuleset		4708						
ANR	4766	Symbol	iconf -> next		4708						
ANR	4767	Symbol	NULL		4708						
ANR	4768	Symbol	iconf -> sockType		4708						
ANR	4769	Symbol	true		4708						
ANR	4770	Symbol	iconf		4708						
ANR	4771	Symbol	iconf -> serverish		4708						
ANR	4772	Symbol	iconf -> sockEndpoints		4708						
ANR	4773	Symbol	iconf -> pBindRuleset		4708						
ANR	4774	Function	createInstance	118:0:2697:3081							
ANR	4775	FunctionDef	createInstance (instanceConf_t * * pinst)		4774	0					
ANR	4776	CompoundStatement		118:55:2752:3081	4774	0					
ANR	4777	ExpressionStatement	DEFiRet	119:1:2755:2762	4774	0	True				
ANR	4778	Identifier	DEFiRet		4774	0					
ANR	4779	IdentifierDeclStatement	instanceConf_t * inst ;	120:1:2765:2785	4774	1	True				
ANR	4780	IdentifierDecl	* inst		4774	0					
ANR	4781	IdentifierDeclType	instanceConf_t *		4774	0					
ANR	4782	Identifier	inst		4774	1					
ANR	4783	ExpressionStatement	CHKmalloc ( inst = MALLOC ( sizeof ( instanceConf_t ) ) )	121:1:2788:2836	4774	2	True				
ANR	4784	CallExpression	CHKmalloc ( inst = MALLOC ( sizeof ( instanceConf_t ) ) )		4774	0					
ANR	4785	Callee	CHKmalloc		4774	0					
ANR	4786	Identifier	CHKmalloc		4774	0					
ANR	4787	ArgumentList	inst = MALLOC ( sizeof ( instanceConf_t ) )		4774	1					
ANR	4788	Argument	inst = MALLOC ( sizeof ( instanceConf_t ) )		4774	0					
ANR	4789	AssignmentExpression	inst = MALLOC ( sizeof ( instanceConf_t ) )		4774	0		=			
ANR	4790	Identifier	inst		4774	0					
ANR	4791	CallExpression	MALLOC ( sizeof ( instanceConf_t ) )		4774	1					
ANR	4792	Callee	MALLOC		4774	0					
ANR	4793	Identifier	MALLOC		4774	0					
ANR	4794	ArgumentList	sizeof ( instanceConf_t )		4774	1					
ANR	4795	Argument	sizeof ( instanceConf_t )		4774	0					
ANR	4796	SizeofExpression	sizeof ( instanceConf_t )		4774	0					
ANR	4797	Sizeof	sizeof		4774	0					
ANR	4798	SizeofOperand	instanceConf_t		4774	1					
ANR	4799	ExpressionStatement	setDefaults ( inst )	123:1:2841:2858	4774	3	True				
ANR	4800	CallExpression	setDefaults ( inst )		4774	0					
ANR	4801	Callee	setDefaults		4774	0					
ANR	4802	Identifier	setDefaults		4774	0					
ANR	4803	ArgumentList	inst		4774	1					
ANR	4804	Argument	inst		4774	0					
ANR	4805	Identifier	inst		4774	0					
ANR	4806	IfStatement	if ( runModConf -> root == NULL || runModConf -> tail == NULL )		4774	4					
ANR	4807	Condition	runModConf -> root == NULL || runModConf -> tail == NULL	125:4:2866:2917	4774	0	True				
ANR	4808	OrExpression	runModConf -> root == NULL || runModConf -> tail == NULL		4774	0		||			
ANR	4809	EqualityExpression	runModConf -> root == NULL		4774	0		==			
ANR	4810	PtrMemberAccess	runModConf -> root		4774	0					
ANR	4811	Identifier	runModConf		4774	0					
ANR	4812	Identifier	root		4774	1					
ANR	4813	Identifier	NULL		4774	1					
ANR	4814	EqualityExpression	runModConf -> tail == NULL		4774	1		==			
ANR	4815	PtrMemberAccess	runModConf -> tail		4774	0					
ANR	4816	Identifier	runModConf		4774	0					
ANR	4817	Identifier	tail		4774	1					
ANR	4818	Identifier	NULL		4774	1					
ANR	4819	CompoundStatement		8:58:167:167	4774	1					
ANR	4820	ExpressionStatement	runModConf -> tail = runModConf -> root = inst	126:2:2924:2966	4774	0	True				
ANR	4821	AssignmentExpression	runModConf -> tail = runModConf -> root = inst		4774	0		=			
ANR	4822	PtrMemberAccess	runModConf -> tail		4774	0					
ANR	4823	Identifier	runModConf		4774	0					
ANR	4824	Identifier	tail		4774	1					
ANR	4825	AssignmentExpression	runModConf -> root = inst		4774	1		=			
ANR	4826	PtrMemberAccess	runModConf -> root		4774	0					
ANR	4827	Identifier	runModConf		4774	0					
ANR	4828	Identifier	root		4774	1					
ANR	4829	Identifier	inst		4774	1					
ANR	4830	ElseStatement	else		4774	0					
ANR	4831	CompoundStatement		11:6:224:224	4774	0					
ANR	4832	ExpressionStatement	runModConf -> tail -> next = inst	129:2:2981:3010	4774	0	True				
ANR	4833	AssignmentExpression	runModConf -> tail -> next = inst		4774	0		=			
ANR	4834	PtrMemberAccess	runModConf -> tail -> next		4774	0					
ANR	4835	PtrMemberAccess	runModConf -> tail		4774	0					
ANR	4836	Identifier	runModConf		4774	0					
ANR	4837	Identifier	tail		4774	1					
ANR	4838	Identifier	next		4774	1					
ANR	4839	Identifier	inst		4774	1					
ANR	4840	ExpressionStatement	runModConf -> tail = inst	130:2:3014:3037	4774	1	True				
ANR	4841	AssignmentExpression	runModConf -> tail = inst		4774	0		=			
ANR	4842	PtrMemberAccess	runModConf -> tail		4774	0					
ANR	4843	Identifier	runModConf		4774	0					
ANR	4844	Identifier	tail		4774	1					
ANR	4845	Identifier	inst		4774	1					
ANR	4846	ExpressionStatement	* pinst = inst	132:1:3043:3056	4774	5	True				
ANR	4847	AssignmentExpression	* pinst = inst		4774	0		=			
ANR	4848	UnaryOperationExpression	* pinst		4774	0					
ANR	4849	UnaryOperator	*		4774	0					
ANR	4850	Identifier	pinst		4774	1					
ANR	4851	Identifier	inst		4774	1					
ANR	4852	Label	finalize_it :	133:0:3058:3069	4774	6	True				
ANR	4853	Identifier	finalize_it		4774	0					
ANR	4854	ExpressionStatement	RETiRet	134:1:3072:3079	4774	7	True				
ANR	4855	Identifier	RETiRet		4774	0					
ANR	4856	ReturnType	static rsRetVal		4774	1					
ANR	4857	Identifier	createInstance		4774	2					
ANR	4858	ParameterList	instanceConf_t * * pinst		4774	3					
ANR	4859	Parameter	instanceConf_t * * pinst	118:31:2728:2749	4774	0	True				
ANR	4860	ParameterType	instanceConf_t * *		4774	0					
ANR	4861	Identifier	pinst		4774	1					
ANR	4862	CFGEntryNode	ENTRY		4774		True				
ANR	4863	CFGExitNode	EXIT		4774		True				
ANR	4864	Symbol	* * runModConf		4774						
ANR	4865	Symbol	* runModConf		4774						
ANR	4866	Symbol	NULL		4774						
ANR	4867	Symbol	MALLOC		4774						
ANR	4868	Symbol	runModConf -> tail		4774						
ANR	4869	Symbol	* runModConf -> tail		4774						
ANR	4870	Symbol	inst		4774						
ANR	4871	Symbol	runModConf -> root		4774						
ANR	4872	Symbol	runModConf		4774						
ANR	4873	Symbol	runModConf -> tail -> next		4774						
ANR	4874	Symbol	* pinst		4774						
ANR	4875	Symbol	pinst		4774						
ANR	4876	Function	addListener	137:0:3084:6688							
ANR	4877	FunctionDef	addListener (instanceConf_t * iconf)		4876	0					
ANR	4878	CompoundStatement		137:50:3134:6688	4876	0					
ANR	4879	ExpressionStatement	DEFiRet	138:1:3137:3144	4876	0	True				
ANR	4880	Identifier	DEFiRet		4876	0					
ANR	4881	ExpressionStatement	"DBGPRINTF ( ""imczmq: addListener called..\\n"" )"	140:1:3149:3192	4876	1	True				
ANR	4882	CallExpression	"DBGPRINTF ( ""imczmq: addListener called..\\n"" )"		4876	0					
ANR	4883	Callee	DBGPRINTF		4876	0					
ANR	4884	Identifier	DBGPRINTF		4876	0					
ANR	4885	ArgumentList	"""imczmq: addListener called..\\n"""		4876	1					
ANR	4886	Argument	"""imczmq: addListener called..\\n"""		4876	0					
ANR	4887	PrimaryExpression	"""imczmq: addListener called..\\n"""		4876	0					
ANR	4888	IdentifierDeclStatement	struct listener_t * pData ;	141:1:3196:3220	4876	2	True				
ANR	4889	IdentifierDecl	* pData		4876	0					
ANR	4890	IdentifierDeclType	struct listener_t *		4876	0					
ANR	4891	Identifier	pData		4876	1					
ANR	4892	ExpressionStatement	CHKmalloc ( pData = ( struct listener_t * ) MALLOC ( sizeof ( struct listener_t ) ) )	142:1:3223:3293	4876	3	True				
ANR	4893	CallExpression	CHKmalloc ( pData = ( struct listener_t * ) MALLOC ( sizeof ( struct listener_t ) ) )		4876	0					
ANR	4894	Callee	CHKmalloc		4876	0					
ANR	4895	Identifier	CHKmalloc		4876	0					
ANR	4896	ArgumentList	pData = ( struct listener_t * ) MALLOC ( sizeof ( struct listener_t ) )		4876	1					
ANR	4897	Argument	pData = ( struct listener_t * ) MALLOC ( sizeof ( struct listener_t ) )		4876	0					
ANR	4898	AssignmentExpression	pData = ( struct listener_t * ) MALLOC ( sizeof ( struct listener_t ) )		4876	0		=			
ANR	4899	Identifier	pData		4876	0					
ANR	4900	CastExpression	( struct listener_t * ) MALLOC ( sizeof ( struct listener_t ) )		4876	1					
ANR	4901	CastTarget	struct listener_t *		4876	0					
ANR	4902	CallExpression	MALLOC ( sizeof ( struct listener_t ) )		4876	1					
ANR	4903	Callee	MALLOC		4876	0					
ANR	4904	Identifier	MALLOC		4876	0					
ANR	4905	ArgumentList	sizeof ( struct listener_t )		4876	1					
ANR	4906	Argument	sizeof ( struct listener_t )		4876	0					
ANR	4907	SizeofExpression	sizeof ( struct listener_t )		4876	0					
ANR	4908	Sizeof	sizeof		4876	0					
ANR	4909	SizeofOperand	struct listener_t		4876	1					
ANR	4910	ExpressionStatement	pData -> ruleset = iconf -> pBindRuleset	143:1:3296:3332	4876	4	True				
ANR	4911	AssignmentExpression	pData -> ruleset = iconf -> pBindRuleset		4876	0		=			
ANR	4912	PtrMemberAccess	pData -> ruleset		4876	0					
ANR	4913	Identifier	pData		4876	0					
ANR	4914	Identifier	ruleset		4876	1					
ANR	4915	PtrMemberAccess	iconf -> pBindRuleset		4876	1					
ANR	4916	Identifier	iconf		4876	0					
ANR	4917	Identifier	pBindRuleset		4876	1					
ANR	4918	ExpressionStatement	pData -> sock = zsock_new ( iconf -> sockType )	145:1:3336:3376	4876	5	True				
ANR	4919	AssignmentExpression	pData -> sock = zsock_new ( iconf -> sockType )		4876	0		=			
ANR	4920	PtrMemberAccess	pData -> sock		4876	0					
ANR	4921	Identifier	pData		4876	0					
ANR	4922	Identifier	sock		4876	1					
ANR	4923	CallExpression	zsock_new ( iconf -> sockType )		4876	1					
ANR	4924	Callee	zsock_new		4876	0					
ANR	4925	Identifier	zsock_new		4876	0					
ANR	4926	ArgumentList	iconf -> sockType		4876	1					
ANR	4927	Argument	iconf -> sockType		4876	0					
ANR	4928	PtrMemberAccess	iconf -> sockType		4876	0					
ANR	4929	Identifier	iconf		4876	0					
ANR	4930	Identifier	sockType		4876	1					
ANR	4931	IfStatement	if ( ! pData -> sock )		4876	6					
ANR	4932	Condition	! pData -> sock	146:4:3382:3393	4876	0	True				
ANR	4933	UnaryOperationExpression	! pData -> sock		4876	0					
ANR	4934	UnaryOperator	!		4876	0					
ANR	4935	PtrMemberAccess	pData -> sock		4876	1					
ANR	4936	Identifier	pData		4876	0					
ANR	4937	Identifier	sock		4876	1					
ANR	4938	CompoundStatement		10:18:261:261	4876	1					
ANR	4939	ExpressionStatement	"errmsg . LogError ( 0 , RS_RET_NO_ERRCODE , ""imczmq: new socket failed for endpoints: %s"" , iconf -> sockEndpoints )"	147:2:3400:3514	4876	0	True				
ANR	4940	CallExpression	"errmsg . LogError ( 0 , RS_RET_NO_ERRCODE , ""imczmq: new socket failed for endpoints: %s"" , iconf -> sockEndpoints )"		4876	0					
ANR	4941	Callee	errmsg . LogError		4876	0					
ANR	4942	MemberAccess	errmsg . LogError		4876	0					
ANR	4943	Identifier	errmsg		4876	0					
ANR	4944	Identifier	LogError		4876	1					
ANR	4945	ArgumentList	0		4876	1					
ANR	4946	Argument	0		4876	0					
ANR	4947	PrimaryExpression	0		4876	0					
ANR	4948	Argument	RS_RET_NO_ERRCODE		4876	1					
ANR	4949	Identifier	RS_RET_NO_ERRCODE		4876	0					
ANR	4950	Argument	"""imczmq: new socket failed for endpoints: %s"""		4876	2					
ANR	4951	PrimaryExpression	"""imczmq: new socket failed for endpoints: %s"""		4876	0					
ANR	4952	Argument	iconf -> sockEndpoints		4876	3					
ANR	4953	PtrMemberAccess	iconf -> sockEndpoints		4876	0					
ANR	4954	Identifier	iconf		4876	0					
ANR	4955	Identifier	sockEndpoints		4876	1					
ANR	4956	ExpressionStatement	ABORT_FINALIZE ( RS_RET_NO_ERRCODE )	150:2:3518:3551	4876	1	True				
ANR	4957	CallExpression	ABORT_FINALIZE ( RS_RET_NO_ERRCODE )		4876	0					
ANR	4958	Callee	ABORT_FINALIZE		4876	0					
ANR	4959	Identifier	ABORT_FINALIZE		4876	0					
ANR	4960	ArgumentList	RS_RET_NO_ERRCODE		4876	1					
ANR	4961	Argument	RS_RET_NO_ERRCODE		4876	0					
ANR	4962	Identifier	RS_RET_NO_ERRCODE		4876	0					
ANR	4963	ExpressionStatement	"DBGPRINTF ( ""imczmq: created socket of type %d..\\n"" , iconf -> sockType )"	153:1:3558:3625	4876	7	True				
ANR	4964	CallExpression	"DBGPRINTF ( ""imczmq: created socket of type %d..\\n"" , iconf -> sockType )"		4876	0					
ANR	4965	Callee	DBGPRINTF		4876	0					
ANR	4966	Identifier	DBGPRINTF		4876	0					
ANR	4967	ArgumentList	"""imczmq: created socket of type %d..\\n"""		4876	1					
ANR	4968	Argument	"""imczmq: created socket of type %d..\\n"""		4876	0					
ANR	4969	PrimaryExpression	"""imczmq: created socket of type %d..\\n"""		4876	0					
ANR	4970	Argument	iconf -> sockType		4876	1					
ANR	4971	PtrMemberAccess	iconf -> sockType		4876	0					
ANR	4972	Identifier	iconf		4876	0					
ANR	4973	Identifier	sockType		4876	1					
ANR	4974	IfStatement	if ( runModConf -> authType )		4876	8					
ANR	4975	Condition	runModConf -> authType	155:4:3633:3652	4876	0	True				
ANR	4976	PtrMemberAccess	runModConf -> authType		4876	0					
ANR	4977	Identifier	runModConf		4876	0					
ANR	4978	Identifier	authType		4876	1					
ANR	4979	CompoundStatement		19:26:520:520	4876	1					
ANR	4980	IfStatement	"if ( ! strcmp ( runModConf -> authType , ""CURVESERVER"" ) )"		4876	0					
ANR	4981	Condition	"! strcmp ( runModConf -> authType , ""CURVESERVER"" )"	156:5:3663:3706	4876	0	True				
ANR	4982	UnaryOperationExpression	"! strcmp ( runModConf -> authType , ""CURVESERVER"" )"		4876	0					
ANR	4983	UnaryOperator	!		4876	0					
ANR	4984	CallExpression	"strcmp ( runModConf -> authType , ""CURVESERVER"" )"		4876	1					
ANR	4985	Callee	strcmp		4876	0					
ANR	4986	Identifier	strcmp		4876	0					
ANR	4987	ArgumentList	runModConf -> authType		4876	1					
ANR	4988	Argument	runModConf -> authType		4876	0					
ANR	4989	PtrMemberAccess	runModConf -> authType		4876	0					
ANR	4990	Identifier	runModConf		4876	0					
ANR	4991	Identifier	authType		4876	1					
ANR	4992	Argument	"""CURVESERVER"""		4876	1					
ANR	4993	PrimaryExpression	"""CURVESERVER"""		4876	0					
ANR	4994	CompoundStatement		22:3:628:688	4876	1					
ANR	4995	ExpressionStatement	"DBGPRINTF ( ""imczmq: we are a CURVESERVER\\n"" )"	157:3:3714:3757	4876	0	True				
ANR	4996	CallExpression	"DBGPRINTF ( ""imczmq: we are a CURVESERVER\\n"" )"		4876	0					
ANR	4997	Callee	DBGPRINTF		4876	0					
ANR	4998	Identifier	DBGPRINTF		4876	0					
ANR	4999	ArgumentList	"""imczmq: we are a CURVESERVER\\n"""		4876	1					
ANR	5000	Argument	"""imczmq: we are a CURVESERVER\\n"""		4876	0					
ANR	5001	PrimaryExpression	"""imczmq: we are a CURVESERVER\\n"""		4876	0					
ANR	5002	IdentifierDeclStatement	zcert_t * serverCert = zcert_load ( runModConf -> serverCertPath ) ;	158:3:3763:3823	4876	1	True				
ANR	5003	IdentifierDecl	* serverCert = zcert_load ( runModConf -> serverCertPath )		4876	0					
ANR	5004	IdentifierDeclType	zcert_t *		4876	0					
ANR	5005	Identifier	serverCert		4876	1					
ANR	5006	AssignmentExpression	* serverCert = zcert_load ( runModConf -> serverCertPath )		4876	2		=			
ANR	5007	Identifier	serverCert		4876	0					
ANR	5008	CallExpression	zcert_load ( runModConf -> serverCertPath )		4876	1					
ANR	5009	Callee	zcert_load		4876	0					
ANR	5010	Identifier	zcert_load		4876	0					
ANR	5011	ArgumentList	runModConf -> serverCertPath		4876	1					
ANR	5012	Argument	runModConf -> serverCertPath		4876	0					
ANR	5013	PtrMemberAccess	runModConf -> serverCertPath		4876	0					
ANR	5014	Identifier	runModConf		4876	0					
ANR	5015	Identifier	serverCertPath		4876	1					
ANR	5016	IfStatement	if ( ! serverCert )		4876	2					
ANR	5017	Condition	! serverCert	159:6:3831:3841	4876	0	True				
ANR	5018	UnaryOperationExpression	! serverCert		4876	0					
ANR	5019	UnaryOperator	!		4876	0					
ANR	5020	Identifier	serverCert		4876	1					
ANR	5021	CompoundStatement		23:19:709:709	4876	1					
ANR	5022	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not load cert %s"" , runModConf -> serverCertPath )"	160:4:3850:3939	4876	0	True				
ANR	5023	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not load cert %s"" , runModConf -> serverCertPath )"		4876	0					
ANR	5024	Callee	errmsg . LogError		4876	0					
ANR	5025	MemberAccess	errmsg . LogError		4876	0					
ANR	5026	Identifier	errmsg		4876	0					
ANR	5027	Identifier	LogError		4876	1					
ANR	5028	ArgumentList	0		4876	1					
ANR	5029	Argument	0		4876	0					
ANR	5030	PrimaryExpression	0		4876	0					
ANR	5031	Argument	NO_ERRCODE		4876	1					
ANR	5032	Identifier	NO_ERRCODE		4876	0					
ANR	5033	Argument	"""could not load cert %s"""		4876	2					
ANR	5034	PrimaryExpression	"""could not load cert %s"""		4876	0					
ANR	5035	Argument	runModConf -> serverCertPath		4876	3					
ANR	5036	PtrMemberAccess	runModConf -> serverCertPath		4876	0					
ANR	5037	Identifier	runModConf		4876	0					
ANR	5038	Identifier	serverCertPath		4876	1					
ANR	5039	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	162:4:3945:3971	4876	1	True				
ANR	5040	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		4876	0					
ANR	5041	Callee	ABORT_FINALIZE		4876	0					
ANR	5042	Identifier	ABORT_FINALIZE		4876	0					
ANR	5043	ArgumentList	RS_RET_ERR		4876	1					
ANR	5044	Argument	RS_RET_ERR		4876	0					
ANR	5045	Identifier	RS_RET_ERR		4876	0					
ANR	5046	ExpressionStatement	"zsock_set_zap_domain ( pData -> sock , ""global"" )"	164:3:3981:4024	4876	3	True				
ANR	5047	CallExpression	"zsock_set_zap_domain ( pData -> sock , ""global"" )"		4876	0					
ANR	5048	Callee	zsock_set_zap_domain		4876	0					
ANR	5049	Identifier	zsock_set_zap_domain		4876	0					
ANR	5050	ArgumentList	pData -> sock		4876	1					
ANR	5051	Argument	pData -> sock		4876	0					
ANR	5052	PtrMemberAccess	pData -> sock		4876	0					
ANR	5053	Identifier	pData		4876	0					
ANR	5054	Identifier	sock		4876	1					
ANR	5055	Argument	"""global"""		4876	1					
ANR	5056	PrimaryExpression	"""global"""		4876	0					
ANR	5057	ExpressionStatement	"zsock_set_curve_server ( pData -> sock , 1 )"	165:3:4029:4067	4876	4	True				
ANR	5058	CallExpression	"zsock_set_curve_server ( pData -> sock , 1 )"		4876	0					
ANR	5059	Callee	zsock_set_curve_server		4876	0					
ANR	5060	Identifier	zsock_set_curve_server		4876	0					
ANR	5061	ArgumentList	pData -> sock		4876	1					
ANR	5062	Argument	pData -> sock		4876	0					
ANR	5063	PtrMemberAccess	pData -> sock		4876	0					
ANR	5064	Identifier	pData		4876	0					
ANR	5065	Identifier	sock		4876	1					
ANR	5066	Argument	1		4876	1					
ANR	5067	PrimaryExpression	1		4876	0					
ANR	5068	ExpressionStatement	"zcert_apply ( serverCert , pData -> sock )"	166:3:4072:4108	4876	5	True				
ANR	5069	CallExpression	"zcert_apply ( serverCert , pData -> sock )"		4876	0					
ANR	5070	Callee	zcert_apply		4876	0					
ANR	5071	Identifier	zcert_apply		4876	0					
ANR	5072	ArgumentList	serverCert		4876	1					
ANR	5073	Argument	serverCert		4876	0					
ANR	5074	Identifier	serverCert		4876	0					
ANR	5075	Argument	pData -> sock		4876	1					
ANR	5076	PtrMemberAccess	pData -> sock		4876	0					
ANR	5077	Identifier	pData		4876	0					
ANR	5078	Identifier	sock		4876	1					
ANR	5079	ExpressionStatement	zcert_destroy ( & serverCert )	167:3:4113:4139	4876	6	True				
ANR	5080	CallExpression	zcert_destroy ( & serverCert )		4876	0					
ANR	5081	Callee	zcert_destroy		4876	0					
ANR	5082	Identifier	zcert_destroy		4876	0					
ANR	5083	ArgumentList	& serverCert		4876	1					
ANR	5084	Argument	& serverCert		4876	0					
ANR	5085	UnaryOperationExpression	& serverCert		4876	0					
ANR	5086	UnaryOperator	&		4876	0					
ANR	5087	Identifier	serverCert		4876	1					
ANR	5088	ElseStatement	else		4876	0					
ANR	5089	IfStatement	"if ( ! strcmp ( runModConf -> authType , ""CURVECLIENT"" ) )"		4876	0					
ANR	5090	Condition	"! strcmp ( runModConf -> authType , ""CURVECLIENT"" )"	169:10:4155:4198	4876	0	True				
ANR	5091	UnaryOperationExpression	"! strcmp ( runModConf -> authType , ""CURVECLIENT"" )"		4876	0					
ANR	5092	UnaryOperator	!		4876	0					
ANR	5093	CallExpression	"strcmp ( runModConf -> authType , ""CURVECLIENT"" )"		4876	1					
ANR	5094	Callee	strcmp		4876	0					
ANR	5095	Identifier	strcmp		4876	0					
ANR	5096	ArgumentList	runModConf -> authType		4876	1					
ANR	5097	Argument	runModConf -> authType		4876	0					
ANR	5098	PtrMemberAccess	runModConf -> authType		4876	0					
ANR	5099	Identifier	runModConf		4876	0					
ANR	5100	Identifier	authType		4876	1					
ANR	5101	Argument	"""CURVECLIENT"""		4876	1					
ANR	5102	PrimaryExpression	"""CURVECLIENT"""		4876	0					
ANR	5103	CompoundStatement		45:3:1486:1546	4876	1					
ANR	5104	ExpressionStatement	"DBGPRINTF ( ""imczmq: we are a CURVECLIENT\\n"" )"	170:3:4206:4249	4876	0	True				
ANR	5105	CallExpression	"DBGPRINTF ( ""imczmq: we are a CURVECLIENT\\n"" )"		4876	0					
ANR	5106	Callee	DBGPRINTF		4876	0					
ANR	5107	Identifier	DBGPRINTF		4876	0					
ANR	5108	ArgumentList	"""imczmq: we are a CURVECLIENT\\n"""		4876	1					
ANR	5109	Argument	"""imczmq: we are a CURVECLIENT\\n"""		4876	0					
ANR	5110	PrimaryExpression	"""imczmq: we are a CURVECLIENT\\n"""		4876	0					
ANR	5111	IdentifierDeclStatement	zcert_t * serverCert = zcert_load ( runModConf -> serverCertPath ) ;	171:3:4255:4315	4876	1	True				
ANR	5112	IdentifierDecl	* serverCert = zcert_load ( runModConf -> serverCertPath )		4876	0					
ANR	5113	IdentifierDeclType	zcert_t *		4876	0					
ANR	5114	Identifier	serverCert		4876	1					
ANR	5115	AssignmentExpression	* serverCert = zcert_load ( runModConf -> serverCertPath )		4876	2		=			
ANR	5116	Identifier	serverCert		4876	0					
ANR	5117	CallExpression	zcert_load ( runModConf -> serverCertPath )		4876	1					
ANR	5118	Callee	zcert_load		4876	0					
ANR	5119	Identifier	zcert_load		4876	0					
ANR	5120	ArgumentList	runModConf -> serverCertPath		4876	1					
ANR	5121	Argument	runModConf -> serverCertPath		4876	0					
ANR	5122	PtrMemberAccess	runModConf -> serverCertPath		4876	0					
ANR	5123	Identifier	runModConf		4876	0					
ANR	5124	Identifier	serverCertPath		4876	1					
ANR	5125	IfStatement	if ( ! serverCert )		4876	2					
ANR	5126	Condition	! serverCert	172:6:4323:4333	4876	0	True				
ANR	5127	UnaryOperationExpression	! serverCert		4876	0					
ANR	5128	UnaryOperator	!		4876	0					
ANR	5129	Identifier	serverCert		4876	1					
ANR	5130	CompoundStatement		36:19:1201:1201	4876	1					
ANR	5131	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not load cert %s"" , runModConf -> serverCertPath )"	173:4:4342:4431	4876	0	True				
ANR	5132	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not load cert %s"" , runModConf -> serverCertPath )"		4876	0					
ANR	5133	Callee	errmsg . LogError		4876	0					
ANR	5134	MemberAccess	errmsg . LogError		4876	0					
ANR	5135	Identifier	errmsg		4876	0					
ANR	5136	Identifier	LogError		4876	1					
ANR	5137	ArgumentList	0		4876	1					
ANR	5138	Argument	0		4876	0					
ANR	5139	PrimaryExpression	0		4876	0					
ANR	5140	Argument	NO_ERRCODE		4876	1					
ANR	5141	Identifier	NO_ERRCODE		4876	0					
ANR	5142	Argument	"""could not load cert %s"""		4876	2					
ANR	5143	PrimaryExpression	"""could not load cert %s"""		4876	0					
ANR	5144	Argument	runModConf -> serverCertPath		4876	3					
ANR	5145	PtrMemberAccess	runModConf -> serverCertPath		4876	0					
ANR	5146	Identifier	runModConf		4876	0					
ANR	5147	Identifier	serverCertPath		4876	1					
ANR	5148	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	175:4:4437:4463	4876	1	True				
ANR	5149	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		4876	0					
ANR	5150	Callee	ABORT_FINALIZE		4876	0					
ANR	5151	Identifier	ABORT_FINALIZE		4876	0					
ANR	5152	ArgumentList	RS_RET_ERR		4876	1					
ANR	5153	Argument	RS_RET_ERR		4876	0					
ANR	5154	Identifier	RS_RET_ERR		4876	0					
ANR	5155	IdentifierDeclStatement	const char * server_key = zcert_public_txt ( serverCert ) ;	177:3:4473:4526	4876	3	True				
ANR	5156	IdentifierDecl	* server_key = zcert_public_txt ( serverCert )		4876	0					
ANR	5157	IdentifierDeclType	const char *		4876	0					
ANR	5158	Identifier	server_key		4876	1					
ANR	5159	AssignmentExpression	* server_key = zcert_public_txt ( serverCert )		4876	2		=			
ANR	5160	Identifier	server_key		4876	0					
ANR	5161	CallExpression	zcert_public_txt ( serverCert )		4876	1					
ANR	5162	Callee	zcert_public_txt		4876	0					
ANR	5163	Identifier	zcert_public_txt		4876	0					
ANR	5164	ArgumentList	serverCert		4876	1					
ANR	5165	Argument	serverCert		4876	0					
ANR	5166	Identifier	serverCert		4876	0					
ANR	5167	ExpressionStatement	zcert_destroy ( & serverCert )	178:3:4531:4557	4876	4	True				
ANR	5168	CallExpression	zcert_destroy ( & serverCert )		4876	0					
ANR	5169	Callee	zcert_destroy		4876	0					
ANR	5170	Identifier	zcert_destroy		4876	0					
ANR	5171	ArgumentList	& serverCert		4876	1					
ANR	5172	Argument	& serverCert		4876	0					
ANR	5173	UnaryOperationExpression	& serverCert		4876	0					
ANR	5174	UnaryOperator	&		4876	0					
ANR	5175	Identifier	serverCert		4876	1					
ANR	5176	ExpressionStatement	"zsock_set_curve_serverkey ( pData -> sock , server_key )"	179:3:4562:4612	4876	5	True				
ANR	5177	CallExpression	"zsock_set_curve_serverkey ( pData -> sock , server_key )"		4876	0					
ANR	5178	Callee	zsock_set_curve_serverkey		4876	0					
ANR	5179	Identifier	zsock_set_curve_serverkey		4876	0					
ANR	5180	ArgumentList	pData -> sock		4876	1					
ANR	5181	Argument	pData -> sock		4876	0					
ANR	5182	PtrMemberAccess	pData -> sock		4876	0					
ANR	5183	Identifier	pData		4876	0					
ANR	5184	Identifier	sock		4876	1					
ANR	5185	Argument	server_key		4876	1					
ANR	5186	Identifier	server_key		4876	0					
ANR	5187	IdentifierDeclStatement	zcert_t * clientCert = zcert_load ( runModConf -> clientCertPath ) ;	181:3:4621:4681	4876	6	True				
ANR	5188	IdentifierDecl	* clientCert = zcert_load ( runModConf -> clientCertPath )		4876	0					
ANR	5189	IdentifierDeclType	zcert_t *		4876	0					
ANR	5190	Identifier	clientCert		4876	1					
ANR	5191	AssignmentExpression	* clientCert = zcert_load ( runModConf -> clientCertPath )		4876	2		=			
ANR	5192	Identifier	clientCert		4876	0					
ANR	5193	CallExpression	zcert_load ( runModConf -> clientCertPath )		4876	1					
ANR	5194	Callee	zcert_load		4876	0					
ANR	5195	Identifier	zcert_load		4876	0					
ANR	5196	ArgumentList	runModConf -> clientCertPath		4876	1					
ANR	5197	Argument	runModConf -> clientCertPath		4876	0					
ANR	5198	PtrMemberAccess	runModConf -> clientCertPath		4876	0					
ANR	5199	Identifier	runModConf		4876	0					
ANR	5200	Identifier	clientCertPath		4876	1					
ANR	5201	IfStatement	if ( ! clientCert )		4876	7					
ANR	5202	Condition	! clientCert	182:6:4689:4699	4876	0	True				
ANR	5203	UnaryOperationExpression	! clientCert		4876	0					
ANR	5204	UnaryOperator	!		4876	0					
ANR	5205	Identifier	clientCert		4876	1					
ANR	5206	CompoundStatement		46:19:1567:1567	4876	1					
ANR	5207	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not load cert %s"" , runModConf -> clientCertPath )"	183:4:4708:4797	4876	0	True				
ANR	5208	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not load cert %s"" , runModConf -> clientCertPath )"		4876	0					
ANR	5209	Callee	errmsg . LogError		4876	0					
ANR	5210	MemberAccess	errmsg . LogError		4876	0					
ANR	5211	Identifier	errmsg		4876	0					
ANR	5212	Identifier	LogError		4876	1					
ANR	5213	ArgumentList	0		4876	1					
ANR	5214	Argument	0		4876	0					
ANR	5215	PrimaryExpression	0		4876	0					
ANR	5216	Argument	NO_ERRCODE		4876	1					
ANR	5217	Identifier	NO_ERRCODE		4876	0					
ANR	5218	Argument	"""could not load cert %s"""		4876	2					
ANR	5219	PrimaryExpression	"""could not load cert %s"""		4876	0					
ANR	5220	Argument	runModConf -> clientCertPath		4876	3					
ANR	5221	PtrMemberAccess	runModConf -> clientCertPath		4876	0					
ANR	5222	Identifier	runModConf		4876	0					
ANR	5223	Identifier	clientCertPath		4876	1					
ANR	5224	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	185:4:4803:4829	4876	1	True				
ANR	5225	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		4876	0					
ANR	5226	Callee	ABORT_FINALIZE		4876	0					
ANR	5227	Identifier	ABORT_FINALIZE		4876	0					
ANR	5228	ArgumentList	RS_RET_ERR		4876	1					
ANR	5229	Argument	RS_RET_ERR		4876	0					
ANR	5230	Identifier	RS_RET_ERR		4876	0					
ANR	5231	ExpressionStatement	"zcert_apply ( clientCert , pData -> sock )"	188:3:4843:4879	4876	8	True				
ANR	5232	CallExpression	"zcert_apply ( clientCert , pData -> sock )"		4876	0					
ANR	5233	Callee	zcert_apply		4876	0					
ANR	5234	Identifier	zcert_apply		4876	0					
ANR	5235	ArgumentList	clientCert		4876	1					
ANR	5236	Argument	clientCert		4876	0					
ANR	5237	Identifier	clientCert		4876	0					
ANR	5238	Argument	pData -> sock		4876	1					
ANR	5239	PtrMemberAccess	pData -> sock		4876	0					
ANR	5240	Identifier	pData		4876	0					
ANR	5241	Identifier	sock		4876	1					
ANR	5242	ExpressionStatement	zcert_destroy ( & clientCert )	189:3:4884:4910	4876	9	True				
ANR	5243	CallExpression	zcert_destroy ( & clientCert )		4876	0					
ANR	5244	Callee	zcert_destroy		4876	0					
ANR	5245	Identifier	zcert_destroy		4876	0					
ANR	5246	ArgumentList	& clientCert		4876	1					
ANR	5247	Argument	& clientCert		4876	0					
ANR	5248	UnaryOperationExpression	& clientCert		4876	0					
ANR	5249	UnaryOperator	&		4876	0					
ANR	5250	Identifier	clientCert		4876	1					
ANR	5251	SwitchStatement	switch ( iconf -> sockType )		4876	9					
ANR	5252	Condition	iconf -> sockType	194:8:4929:4943	4876	0	True				
ANR	5253	PtrMemberAccess	iconf -> sockType		4876	0					
ANR	5254	Identifier	iconf		4876	0					
ANR	5255	Identifier	sockType		4876	1					
ANR	5256	CompoundStatement		58:25:1811:1811	4876	1					
ANR	5257	Label	case ZMQ_SUB :	195:2:4950:4962	4876	0	True				
ANR	5258	Identifier	ZMQ_SUB		4876	0					
ANR	5259	Label	case ZMQ_DISH :	197:2:4988:5001	4876	1	True				
ANR	5260	Identifier	ZMQ_DISH		4876	0					
ANR	5261	ExpressionStatement	iconf -> serverish = false	199:3:5013:5037	4876	2	True				
ANR	5262	AssignmentExpression	iconf -> serverish = false		4876	0		=			
ANR	5263	PtrMemberAccess	iconf -> serverish		4876	0					
ANR	5264	Identifier	iconf		4876	0					
ANR	5265	Identifier	serverish		4876	1					
ANR	5266	Identifier	false		4876	1					
ANR	5267	BreakStatement	break ;	200:3:5042:5047	4876	3	True				
ANR	5268	Label	case ZMQ_PULL :	201:2:5051:5064	4876	4	True				
ANR	5269	Identifier	ZMQ_PULL		4876	0					
ANR	5270	Label	case ZMQ_GATHER :	203:2:5092:5107	4876	5	True				
ANR	5271	Identifier	ZMQ_GATHER		4876	0					
ANR	5272	Label	case ZMQ_ROUTER :	205:2:5118:5133	4876	6	True				
ANR	5273	Identifier	ZMQ_ROUTER		4876	0					
ANR	5274	Label	case ZMQ_SERVER :	207:2:5161:5176	4876	7	True				
ANR	5275	Identifier	ZMQ_SERVER		4876	0					
ANR	5276	ExpressionStatement	iconf -> serverish = true	209:3:5188:5211	4876	8	True				
ANR	5277	AssignmentExpression	iconf -> serverish = true		4876	0		=			
ANR	5278	PtrMemberAccess	iconf -> serverish		4876	0					
ANR	5279	Identifier	iconf		4876	0					
ANR	5280	Identifier	serverish		4876	1					
ANR	5281	Identifier	true		4876	1					
ANR	5282	BreakStatement	break ;	210:3:5216:5221	4876	9	True				
ANR	5283	IfStatement	if ( iconf -> topics )		4876	10					
ANR	5284	Condition	iconf -> topics	213:4:5231:5243	4876	0	True				
ANR	5285	PtrMemberAccess	iconf -> topics		4876	0					
ANR	5286	Identifier	iconf		4876	0					
ANR	5287	Identifier	topics		4876	1					
ANR	5288	CompoundStatement		84:2:2323:2338	4876	1					
ANR	5289	IfStatement	if ( ! * iconf -> topics && iconf -> sockType == ZMQ_SUB )		4876	0					
ANR	5290	Condition	! * iconf -> topics && iconf -> sockType == ZMQ_SUB	215:5:5308:5352	4876	0	True				
ANR	5291	AndExpression	! * iconf -> topics && iconf -> sockType == ZMQ_SUB		4876	0		&&			
ANR	5292	UnaryOperationExpression	! * iconf -> topics		4876	0					
ANR	5293	UnaryOperator	!		4876	0					
ANR	5294	UnaryOperationExpression	* iconf -> topics		4876	1					
ANR	5295	UnaryOperator	*		4876	0					
ANR	5296	PtrMemberAccess	iconf -> topics		4876	1					
ANR	5297	Identifier	iconf		4876	0					
ANR	5298	Identifier	topics		4876	1					
ANR	5299	EqualityExpression	iconf -> sockType == ZMQ_SUB		4876	1		==			
ANR	5300	PtrMemberAccess	iconf -> sockType		4876	0					
ANR	5301	Identifier	iconf		4876	0					
ANR	5302	Identifier	sockType		4876	1					
ANR	5303	Identifier	ZMQ_SUB		4876	1					
ANR	5304	CompoundStatement		79:52:2220:2220	4876	1					
ANR	5305	ExpressionStatement	"DBGPRINTF ( ""imczmq: subscribing to all topics\\n"" )"	216:3:5360:5408	4876	0	True				
ANR	5306	CallExpression	"DBGPRINTF ( ""imczmq: subscribing to all topics\\n"" )"		4876	0					
ANR	5307	Callee	DBGPRINTF		4876	0					
ANR	5308	Identifier	DBGPRINTF		4876	0					
ANR	5309	ArgumentList	"""imczmq: subscribing to all topics\\n"""		4876	1					
ANR	5310	Argument	"""imczmq: subscribing to all topics\\n"""		4876	0					
ANR	5311	PrimaryExpression	"""imczmq: subscribing to all topics\\n"""		4876	0					
ANR	5312	ExpressionStatement	"zsock_set_subscribe ( pData -> sock , """" )"	217:3:5413:5449	4876	1	True				
ANR	5313	CallExpression	"zsock_set_subscribe ( pData -> sock , """" )"		4876	0					
ANR	5314	Callee	zsock_set_subscribe		4876	0					
ANR	5315	Identifier	zsock_set_subscribe		4876	0					
ANR	5316	ArgumentList	pData -> sock		4876	1					
ANR	5317	Argument	pData -> sock		4876	0					
ANR	5318	PtrMemberAccess	pData -> sock		4876	0					
ANR	5319	Identifier	pData		4876	0					
ANR	5320	Identifier	sock		4876	1					
ANR	5321	Argument	""""""		4876	1					
ANR	5322	PrimaryExpression	""""""		4876	0					
ANR	5323	IdentifierDeclStatement	char topic [ 256 ] ;	220:2:5458:5473	4876	1	True				
ANR	5324	IdentifierDecl	topic [ 256 ]		4876	0					
ANR	5325	IdentifierDeclType	char [ 256 ]		4876	0					
ANR	5326	Identifier	topic		4876	1					
ANR	5327	PrimaryExpression	256		4876	2					
ANR	5328	WhileStatement	while ( * iconf -> topics )		4876	2					
ANR	5329	Condition	* iconf -> topics	221:8:5483:5496	4876	0	True				
ANR	5330	UnaryOperationExpression	* iconf -> topics		4876	0					
ANR	5331	UnaryOperator	*		4876	0					
ANR	5332	PtrMemberAccess	iconf -> topics		4876	1					
ANR	5333	Identifier	iconf		4876	0					
ANR	5334	Identifier	topics		4876	1					
ANR	5335	CompoundStatement		86:3:2369:2413	4876	1					
ANR	5336	IdentifierDeclStatement	"char * delimiter = strchr ( iconf -> topics , ',' ) ;"	222:3:5504:5548	4876	0	True				
ANR	5337	IdentifierDecl	"* delimiter = strchr ( iconf -> topics , ',' )"		4876	0					
ANR	5338	IdentifierDeclType	char *		4876	0					
ANR	5339	Identifier	delimiter		4876	1					
ANR	5340	AssignmentExpression	"* delimiter = strchr ( iconf -> topics , ',' )"		4876	2		=			
ANR	5341	Identifier	delimiter		4876	0					
ANR	5342	CallExpression	"strchr ( iconf -> topics , ',' )"		4876	1					
ANR	5343	Callee	strchr		4876	0					
ANR	5344	Identifier	strchr		4876	0					
ANR	5345	ArgumentList	iconf -> topics		4876	1					
ANR	5346	Argument	iconf -> topics		4876	0					
ANR	5347	PtrMemberAccess	iconf -> topics		4876	0					
ANR	5348	Identifier	iconf		4876	0					
ANR	5349	Identifier	topics		4876	1					
ANR	5350	Argument	"','"		4876	1					
ANR	5351	PrimaryExpression	"','"		4876	0					
ANR	5352	IfStatement	if ( ! delimiter )		4876	1					
ANR	5353	Condition	! delimiter	223:6:5556:5565	4876	0	True				
ANR	5354	UnaryOperationExpression	! delimiter		4876	0					
ANR	5355	UnaryOperator	!		4876	0					
ANR	5356	Identifier	delimiter		4876	1					
ANR	5357	CompoundStatement		87:18:2433:2433	4876	1					
ANR	5358	ExpressionStatement	delimiter = iconf -> topics + strlen ( iconf -> topics )	224:4:5574:5623	4876	0	True				
ANR	5359	AssignmentExpression	delimiter = iconf -> topics + strlen ( iconf -> topics )		4876	0		=			
ANR	5360	Identifier	delimiter		4876	0					
ANR	5361	AdditiveExpression	iconf -> topics + strlen ( iconf -> topics )		4876	1		+			
ANR	5362	PtrMemberAccess	iconf -> topics		4876	0					
ANR	5363	Identifier	iconf		4876	0					
ANR	5364	Identifier	topics		4876	1					
ANR	5365	CallExpression	strlen ( iconf -> topics )		4876	1					
ANR	5366	Callee	strlen		4876	0					
ANR	5367	Identifier	strlen		4876	0					
ANR	5368	ArgumentList	iconf -> topics		4876	1					
ANR	5369	Argument	iconf -> topics		4876	0					
ANR	5370	PtrMemberAccess	iconf -> topics		4876	0					
ANR	5371	Identifier	iconf		4876	0					
ANR	5372	Identifier	topics		4876	1					
ANR	5373	ExpressionStatement	"memcpy ( topic , iconf -> topics , delimiter - iconf -> topics )"	226:3:5633:5689	4876	2	True				
ANR	5374	CallExpression	"memcpy ( topic , iconf -> topics , delimiter - iconf -> topics )"		4876	0					
ANR	5375	Callee	memcpy		4876	0					
ANR	5376	Identifier	memcpy		4876	0					
ANR	5377	ArgumentList	topic		4876	1					
ANR	5378	Argument	topic		4876	0					
ANR	5379	Identifier	topic		4876	0					
ANR	5380	Argument	iconf -> topics		4876	1					
ANR	5381	PtrMemberAccess	iconf -> topics		4876	0					
ANR	5382	Identifier	iconf		4876	0					
ANR	5383	Identifier	topics		4876	1					
ANR	5384	Argument	delimiter - iconf -> topics		4876	2					
ANR	5385	AdditiveExpression	delimiter - iconf -> topics		4876	0		-			
ANR	5386	Identifier	delimiter		4876	0					
ANR	5387	PtrMemberAccess	iconf -> topics		4876	1					
ANR	5388	Identifier	iconf		4876	0					
ANR	5389	Identifier	topics		4876	1					
ANR	5390	ExpressionStatement	topic [ delimiter - iconf -> topics ] = 0	227:3:5694:5728	4876	3	True				
ANR	5391	AssignmentExpression	topic [ delimiter - iconf -> topics ] = 0		4876	0		=			
ANR	5392	ArrayIndexing	topic [ delimiter - iconf -> topics ]		4876	0					
ANR	5393	Identifier	topic		4876	0					
ANR	5394	AdditiveExpression	delimiter - iconf -> topics		4876	1		-			
ANR	5395	Identifier	delimiter		4876	0					
ANR	5396	PtrMemberAccess	iconf -> topics		4876	1					
ANR	5397	Identifier	iconf		4876	0					
ANR	5398	Identifier	topics		4876	1					
ANR	5399	PrimaryExpression	0		4876	1					
ANR	5400	ExpressionStatement	"DBGPRINTF ( ""imczmq: subscribing to %s\\n"" , topic )"	228:3:5733:5780	4876	4	True				
ANR	5401	CallExpression	"DBGPRINTF ( ""imczmq: subscribing to %s\\n"" , topic )"		4876	0					
ANR	5402	Callee	DBGPRINTF		4876	0					
ANR	5403	Identifier	DBGPRINTF		4876	0					
ANR	5404	ArgumentList	"""imczmq: subscribing to %s\\n"""		4876	1					
ANR	5405	Argument	"""imczmq: subscribing to %s\\n"""		4876	0					
ANR	5406	PrimaryExpression	"""imczmq: subscribing to %s\\n"""		4876	0					
ANR	5407	Argument	topic		4876	1					
ANR	5408	Identifier	topic		4876	0					
ANR	5409	IfStatement	if ( iconf -> sockType == ZMQ_SUB )		4876	5					
ANR	5410	Condition	iconf -> sockType == ZMQ_SUB	229:6:5788:5813	4876	0	True				
ANR	5411	EqualityExpression	iconf -> sockType == ZMQ_SUB		4876	0		==			
ANR	5412	PtrMemberAccess	iconf -> sockType		4876	0					
ANR	5413	Identifier	iconf		4876	0					
ANR	5414	Identifier	sockType		4876	1					
ANR	5415	Identifier	ZMQ_SUB		4876	1					
ANR	5416	CompoundStatement		93:34:2681:2681	4876	1					
ANR	5417	ExpressionStatement	"zsock_set_subscribe ( pData -> sock , topic )"	230:4:5822:5862	4876	0	True				
ANR	5418	CallExpression	"zsock_set_subscribe ( pData -> sock , topic )"		4876	0					
ANR	5419	Callee	zsock_set_subscribe		4876	0					
ANR	5420	Identifier	zsock_set_subscribe		4876	0					
ANR	5421	ArgumentList	pData -> sock		4876	1					
ANR	5422	Argument	pData -> sock		4876	0					
ANR	5423	PtrMemberAccess	pData -> sock		4876	0					
ANR	5424	Identifier	pData		4876	0					
ANR	5425	Identifier	sock		4876	1					
ANR	5426	Argument	topic		4876	1					
ANR	5427	Identifier	topic		4876	0					
ANR	5428	ElseStatement	else		4876	0					
ANR	5429	IfStatement	if ( iconf -> sockType == ZMQ_DISH )		4876	0					
ANR	5430	Condition	iconf -> sockType == ZMQ_DISH	233:11:5902:5928	4876	0	True				
ANR	5431	EqualityExpression	iconf -> sockType == ZMQ_DISH		4876	0		==			
ANR	5432	PtrMemberAccess	iconf -> sockType		4876	0					
ANR	5433	Identifier	iconf		4876	0					
ANR	5434	Identifier	sockType		4876	1					
ANR	5435	Identifier	ZMQ_DISH		4876	1					
ANR	5436	CompoundStatement		98:4:2802:2842	4876	1					
ANR	5437	IdentifierDeclStatement	"int rc = zsock_join ( pData -> sock , topic ) ;"	234:4:5937:5977	4876	0	True				
ANR	5438	IdentifierDecl	"rc = zsock_join ( pData -> sock , topic )"		4876	0					
ANR	5439	IdentifierDeclType	int		4876	0					
ANR	5440	Identifier	rc		4876	1					
ANR	5441	AssignmentExpression	"rc = zsock_join ( pData -> sock , topic )"		4876	2		=			
ANR	5442	Identifier	rc		4876	0					
ANR	5443	CallExpression	"zsock_join ( pData -> sock , topic )"		4876	1					
ANR	5444	Callee	zsock_join		4876	0					
ANR	5445	Identifier	zsock_join		4876	0					
ANR	5446	ArgumentList	pData -> sock		4876	1					
ANR	5447	Argument	pData -> sock		4876	0					
ANR	5448	PtrMemberAccess	pData -> sock		4876	0					
ANR	5449	Identifier	pData		4876	0					
ANR	5450	Identifier	sock		4876	1					
ANR	5451	Argument	topic		4876	1					
ANR	5452	Identifier	topic		4876	0					
ANR	5453	IfStatement	if ( rc != 0 )		4876	1					
ANR	5454	Condition	rc != 0	235:7:5986:5992	4876	0	True				
ANR	5455	EqualityExpression	rc != 0		4876	0		!=			
ANR	5456	Identifier	rc		4876	0					
ANR	5457	PrimaryExpression	0		4876	1					
ANR	5458	CompoundStatement		99:16:2860:2860	4876	1					
ANR	5459	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not join group %s"" , topic )"	236:5:6002:6066	4876	0	True				
ANR	5460	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not join group %s"" , topic )"		4876	0					
ANR	5461	Callee	errmsg . LogError		4876	0					
ANR	5462	MemberAccess	errmsg . LogError		4876	0					
ANR	5463	Identifier	errmsg		4876	0					
ANR	5464	Identifier	LogError		4876	1					
ANR	5465	ArgumentList	0		4876	1					
ANR	5466	Argument	0		4876	0					
ANR	5467	PrimaryExpression	0		4876	0					
ANR	5468	Argument	NO_ERRCODE		4876	1					
ANR	5469	Identifier	NO_ERRCODE		4876	0					
ANR	5470	Argument	"""could not join group %s"""		4876	2					
ANR	5471	PrimaryExpression	"""could not join group %s"""		4876	0					
ANR	5472	Argument	topic		4876	3					
ANR	5473	Identifier	topic		4876	0					
ANR	5474	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	237:5:6073:6099	4876	1	True				
ANR	5475	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		4876	0					
ANR	5476	Callee	ABORT_FINALIZE		4876	0					
ANR	5477	Identifier	ABORT_FINALIZE		4876	0					
ANR	5478	ArgumentList	RS_RET_ERR		4876	1					
ANR	5479	Argument	RS_RET_ERR		4876	0					
ANR	5480	Identifier	RS_RET_ERR		4876	0					
ANR	5481	IfStatement	if ( * delimiter == 0 )		4876	6					
ANR	5482	Condition	* delimiter == 0	241:6:6125:6139	4876	0	True				
ANR	5483	EqualityExpression	* delimiter == 0		4876	0		==			
ANR	5484	UnaryOperationExpression	* delimiter		4876	0					
ANR	5485	UnaryOperator	*		4876	0					
ANR	5486	Identifier	delimiter		4876	1					
ANR	5487	PrimaryExpression	0		4876	1					
ANR	5488	CompoundStatement		105:23:3007:3007	4876	1					
ANR	5489	BreakStatement	break ;	242:4:6148:6153	4876	0	True				
ANR	5490	ExpressionStatement	iconf -> topics = delimiter + 1	244:3:6163:6192	4876	7	True				
ANR	5491	AssignmentExpression	iconf -> topics = delimiter + 1		4876	0		=			
ANR	5492	PtrMemberAccess	iconf -> topics		4876	0					
ANR	5493	Identifier	iconf		4876	0					
ANR	5494	Identifier	topics		4876	1					
ANR	5495	AdditiveExpression	delimiter + 1		4876	1		+			
ANR	5496	Identifier	delimiter		4876	0					
ANR	5497	PrimaryExpression	1		4876	1					
ANR	5498	IdentifierDeclStatement	"int rc = zsock_attach ( pData -> sock , ( const char * ) iconf -> sockEndpoints , iconf -> serverish ) ;"	248:1:6203:6293	4876	11	True				
ANR	5499	IdentifierDecl	"rc = zsock_attach ( pData -> sock , ( const char * ) iconf -> sockEndpoints , iconf -> serverish )"		4876	0					
ANR	5500	IdentifierDeclType	int		4876	0					
ANR	5501	Identifier	rc		4876	1					
ANR	5502	AssignmentExpression	"rc = zsock_attach ( pData -> sock , ( const char * ) iconf -> sockEndpoints , iconf -> serverish )"		4876	2		=			
ANR	5503	Identifier	rc		4876	0					
ANR	5504	CallExpression	"zsock_attach ( pData -> sock , ( const char * ) iconf -> sockEndpoints , iconf -> serverish )"		4876	1					
ANR	5505	Callee	zsock_attach		4876	0					
ANR	5506	Identifier	zsock_attach		4876	0					
ANR	5507	ArgumentList	pData -> sock		4876	1					
ANR	5508	Argument	pData -> sock		4876	0					
ANR	5509	PtrMemberAccess	pData -> sock		4876	0					
ANR	5510	Identifier	pData		4876	0					
ANR	5511	Identifier	sock		4876	1					
ANR	5512	Argument	( const char * ) iconf -> sockEndpoints		4876	1					
ANR	5513	CastExpression	( const char * ) iconf -> sockEndpoints		4876	0					
ANR	5514	CastTarget	const char *		4876	0					
ANR	5515	PtrMemberAccess	iconf -> sockEndpoints		4876	1					
ANR	5516	Identifier	iconf		4876	0					
ANR	5517	Identifier	sockEndpoints		4876	1					
ANR	5518	Argument	iconf -> serverish		4876	2					
ANR	5519	PtrMemberAccess	iconf -> serverish		4876	0					
ANR	5520	Identifier	iconf		4876	0					
ANR	5521	Identifier	serverish		4876	1					
ANR	5522	IfStatement	if ( rc == - 1 )		4876	12					
ANR	5523	Condition	rc == - 1	250:5:6300:6307	4876	0	True				
ANR	5524	EqualityExpression	rc == - 1		4876	0		==			
ANR	5525	Identifier	rc		4876	0					
ANR	5526	UnaryOperationExpression	- 1		4876	1					
ANR	5527	UnaryOperator	-		4876	0					
ANR	5528	PrimaryExpression	1		4876	1					
ANR	5529	CompoundStatement		114:15:3175:3175	4876	1					
ANR	5530	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""zsock_attach to %s failed"" , iconf -> sockEndpoints )"	251:2:6314:6399	4876	0	True				
ANR	5531	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""zsock_attach to %s failed"" , iconf -> sockEndpoints )"		4876	0					
ANR	5532	Callee	errmsg . LogError		4876	0					
ANR	5533	MemberAccess	errmsg . LogError		4876	0					
ANR	5534	Identifier	errmsg		4876	0					
ANR	5535	Identifier	LogError		4876	1					
ANR	5536	ArgumentList	0		4876	1					
ANR	5537	Argument	0		4876	0					
ANR	5538	PrimaryExpression	0		4876	0					
ANR	5539	Argument	NO_ERRCODE		4876	1					
ANR	5540	Identifier	NO_ERRCODE		4876	0					
ANR	5541	Argument	"""zsock_attach to %s failed"""		4876	2					
ANR	5542	PrimaryExpression	"""zsock_attach to %s failed"""		4876	0					
ANR	5543	Argument	iconf -> sockEndpoints		4876	3					
ANR	5544	PtrMemberAccess	iconf -> sockEndpoints		4876	0					
ANR	5545	Identifier	iconf		4876	0					
ANR	5546	Identifier	sockEndpoints		4876	1					
ANR	5547	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	253:2:6403:6429	4876	1	True				
ANR	5548	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		4876	0					
ANR	5549	Callee	ABORT_FINALIZE		4876	0					
ANR	5550	Identifier	ABORT_FINALIZE		4876	0					
ANR	5551	ArgumentList	RS_RET_ERR		4876	1					
ANR	5552	Argument	RS_RET_ERR		4876	0					
ANR	5553	Identifier	RS_RET_ERR		4876	0					
ANR	5554	ExpressionStatement	"DBGPRINTF ( ""imczmq: attached socket to %s\\n"" , iconf -> sockEndpoints )"	256:1:6436:6502	4876	13	True				
ANR	5555	CallExpression	"DBGPRINTF ( ""imczmq: attached socket to %s\\n"" , iconf -> sockEndpoints )"		4876	0					
ANR	5556	Callee	DBGPRINTF		4876	0					
ANR	5557	Identifier	DBGPRINTF		4876	0					
ANR	5558	ArgumentList	"""imczmq: attached socket to %s\\n"""		4876	1					
ANR	5559	Argument	"""imczmq: attached socket to %s\\n"""		4876	0					
ANR	5560	PrimaryExpression	"""imczmq: attached socket to %s\\n"""		4876	0					
ANR	5561	Argument	iconf -> sockEndpoints		4876	1					
ANR	5562	PtrMemberAccess	iconf -> sockEndpoints		4876	0					
ANR	5563	Identifier	iconf		4876	0					
ANR	5564	Identifier	sockEndpoints		4876	1					
ANR	5565	ExpressionStatement	"rc = zlist_append ( listenerList , ( void * ) pData )"	258:1:6506:6552	4876	14	True				
ANR	5566	AssignmentExpression	"rc = zlist_append ( listenerList , ( void * ) pData )"		4876	0		=			
ANR	5567	Identifier	rc		4876	0					
ANR	5568	CallExpression	"zlist_append ( listenerList , ( void * ) pData )"		4876	1					
ANR	5569	Callee	zlist_append		4876	0					
ANR	5570	Identifier	zlist_append		4876	0					
ANR	5571	ArgumentList	listenerList		4876	1					
ANR	5572	Argument	listenerList		4876	0					
ANR	5573	Identifier	listenerList		4876	0					
ANR	5574	Argument	( void * ) pData		4876	1					
ANR	5575	CastExpression	( void * ) pData		4876	0					
ANR	5576	CastTarget	void *		4876	0					
ANR	5577	Identifier	pData		4876	1					
ANR	5578	IfStatement	if ( rc != 0 )		4876	15					
ANR	5579	Condition	rc != 0	259:4:6558:6564	4876	0	True				
ANR	5580	EqualityExpression	rc != 0		4876	0		!=			
ANR	5581	Identifier	rc		4876	0					
ANR	5582	PrimaryExpression	0		4876	1					
ANR	5583	CompoundStatement		123:13:3432:3432	4876	1					
ANR	5584	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not append listener"" )"	260:2:6571:6630	4876	0	True				
ANR	5585	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not append listener"" )"		4876	0					
ANR	5586	Callee	errmsg . LogError		4876	0					
ANR	5587	MemberAccess	errmsg . LogError		4876	0					
ANR	5588	Identifier	errmsg		4876	0					
ANR	5589	Identifier	LogError		4876	1					
ANR	5590	ArgumentList	0		4876	1					
ANR	5591	Argument	0		4876	0					
ANR	5592	PrimaryExpression	0		4876	0					
ANR	5593	Argument	NO_ERRCODE		4876	1					
ANR	5594	Identifier	NO_ERRCODE		4876	0					
ANR	5595	Argument	"""could not append listener"""		4876	2					
ANR	5596	PrimaryExpression	"""could not append listener"""		4876	0					
ANR	5597	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	261:2:6634:6660	4876	1	True				
ANR	5598	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		4876	0					
ANR	5599	Callee	ABORT_FINALIZE		4876	0					
ANR	5600	Identifier	ABORT_FINALIZE		4876	0					
ANR	5601	ArgumentList	RS_RET_ERR		4876	1					
ANR	5602	Argument	RS_RET_ERR		4876	0					
ANR	5603	Identifier	RS_RET_ERR		4876	0					
ANR	5604	Label	finalize_it :	263:0:6665:6676	4876	16	True				
ANR	5605	Identifier	finalize_it		4876	0					
ANR	5606	ExpressionStatement	RETiRet	264:1:6679:6686	4876	17	True				
ANR	5607	Identifier	RETiRet		4876	0					
ANR	5608	ReturnType	static rsRetVal		4876	1					
ANR	5609	Identifier	addListener		4876	2					
ANR	5610	ParameterList	instanceConf_t * iconf		4876	3					
ANR	5611	Parameter	instanceConf_t * iconf	137:28:3112:3132	4876	0	True				
ANR	5612	ParameterType	instanceConf_t *		4876	0					
ANR	5613	Identifier	iconf		4876	1					
ANR	5614	CFGEntryNode	ENTRY		4876		True				
ANR	5615	CFGExitNode	EXIT		4876		True				
ANR	5616	Symbol	* iconf		4876						
ANR	5617	Symbol	* iconf -> topics		4876						
ANR	5618	Symbol	RS_RET_ERR		4876						
ANR	5619	Symbol	zcert_public_txt		4876						
ANR	5620	Symbol	zsock_attach		4876						
ANR	5621	Symbol	zsock_new		4876						
ANR	5622	Symbol	runModConf -> clientCertPath		4876						
ANR	5623	Symbol	ZMQ_DISH		4876						
ANR	5624	Symbol	strchr		4876						
ANR	5625	Symbol	pData -> ruleset		4876						
ANR	5626	Symbol	server_key		4876						
ANR	5627	Symbol	iconf -> serverish		4876						
ANR	5628	Symbol	iconf -> sockEndpoints		4876						
ANR	5629	Symbol	* topic		4876						
ANR	5630	Symbol	strlen		4876						
ANR	5631	Symbol	zcert_load		4876						
ANR	5632	Symbol	* delimiter		4876						
ANR	5633	Symbol	& serverCert		4876						
ANR	5634	Symbol	delimiter		4876						
ANR	5635	Symbol	* * iconf		4876						
ANR	5636	Symbol	NO_ERRCODE		4876						
ANR	5637	Symbol	strcmp		4876						
ANR	5638	Symbol	RS_RET_NO_ERRCODE		4876						
ANR	5639	Symbol	clientCert		4876						
ANR	5640	Symbol	serverCert		4876						
ANR	5641	Symbol	runModConf -> authType		4876						
ANR	5642	Symbol	runModConf -> serverCertPath		4876						
ANR	5643	Symbol	zsock_join		4876						
ANR	5644	Symbol	false		4876						
ANR	5645	Symbol	ZMQ_SUB		4876						
ANR	5646	Symbol	errmsg		4876						
ANR	5647	Symbol	& clientCert		4876						
ANR	5648	Symbol	pData -> sock		4876						
ANR	5649	Symbol	* pData		4876						
ANR	5650	Symbol	pData		4876						
ANR	5651	Symbol	iconf -> topics		4876						
ANR	5652	Symbol	rc		4876						
ANR	5653	Symbol	* runModConf		4876						
ANR	5654	Symbol	MALLOC		4876						
ANR	5655	Symbol	iconf -> sockType		4876						
ANR	5656	Symbol	listenerList		4876						
ANR	5657	Symbol	true		4876						
ANR	5658	Symbol	topic		4876						
ANR	5659	Symbol	iconf		4876						
ANR	5660	Symbol	runModConf		4876						
ANR	5661	Symbol	iconf -> pBindRuleset		4876						
ANR	5662	Symbol	zlist_append		4876						
ANR	5663	Function	rcvData	267:0:6691:9286							
ANR	5664	FunctionDef	rcvData ()		5663	0					
ANR	5665	CompoundStatement		267:25:6716:9286	5663	0					
ANR	5666	ExpressionStatement	DEFiRet	268:1:6719:6726	5663	0	True				
ANR	5667	Identifier	DEFiRet		5663	0					
ANR	5668	IfStatement	if ( ! listenerList )		5663	1					
ANR	5669	Condition	! listenerList	270:4:6734:6746	5663	0	True				
ANR	5670	UnaryOperationExpression	! listenerList		5663	0					
ANR	5671	UnaryOperator	!		5663	0					
ANR	5672	Identifier	listenerList		5663	1					
ANR	5673	CompoundStatement		4:19:32:32	5663	1					
ANR	5674	ExpressionStatement	listenerList = zlist_new ( )	271:2:6753:6779	5663	0	True				
ANR	5675	AssignmentExpression	listenerList = zlist_new ( )		5663	0		=			
ANR	5676	Identifier	listenerList		5663	0					
ANR	5677	CallExpression	zlist_new ( )		5663	1					
ANR	5678	Callee	zlist_new		5663	0					
ANR	5679	Identifier	zlist_new		5663	0					
ANR	5680	ArgumentList			5663	1					
ANR	5681	IfStatement	if ( ! listenerList )		5663	1					
ANR	5682	Condition	! listenerList	272:5:6786:6798	5663	0	True				
ANR	5683	UnaryOperationExpression	! listenerList		5663	0					
ANR	5684	UnaryOperator	!		5663	0					
ANR	5685	Identifier	listenerList		5663	1					
ANR	5686	CompoundStatement		6:20:84:84	5663	1					
ANR	5687	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not allocate list"" )"	273:3:6806:6863	5663	0	True				
ANR	5688	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not allocate list"" )"		5663	0					
ANR	5689	Callee	errmsg . LogError		5663	0					
ANR	5690	MemberAccess	errmsg . LogError		5663	0					
ANR	5691	Identifier	errmsg		5663	0					
ANR	5692	Identifier	LogError		5663	1					
ANR	5693	ArgumentList	0		5663	1					
ANR	5694	Argument	0		5663	0					
ANR	5695	PrimaryExpression	0		5663	0					
ANR	5696	Argument	NO_ERRCODE		5663	1					
ANR	5697	Identifier	NO_ERRCODE		5663	0					
ANR	5698	Argument	"""could not allocate list"""		5663	2					
ANR	5699	PrimaryExpression	"""could not allocate list"""		5663	0					
ANR	5700	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	274:3:6868:6894	5663	1	True				
ANR	5701	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		5663	0					
ANR	5702	Callee	ABORT_FINALIZE		5663	0					
ANR	5703	Identifier	ABORT_FINALIZE		5663	0					
ANR	5704	ArgumentList	RS_RET_ERR		5663	1					
ANR	5705	Argument	RS_RET_ERR		5663	0					
ANR	5706	Identifier	RS_RET_ERR		5663	0					
ANR	5707	IdentifierDeclStatement	zactor_t * authActor ;	278:1:6905:6924	5663	2	True				
ANR	5708	IdentifierDecl	* authActor		5663	0					
ANR	5709	IdentifierDeclType	zactor_t *		5663	0					
ANR	5710	Identifier	authActor		5663	1					
ANR	5711	IdentifierDeclStatement	zcert_t * serverCert ;	279:1:6927:6946	5663	3	True				
ANR	5712	IdentifierDecl	* serverCert		5663	0					
ANR	5713	IdentifierDeclType	zcert_t *		5663	0					
ANR	5714	Identifier	serverCert		5663	1					
ANR	5715	IfStatement	if ( runModConf -> authenticator == 1 )		5663	4					
ANR	5716	Condition	runModConf -> authenticator == 1	281:4:6953:6982	5663	0	True				
ANR	5717	EqualityExpression	runModConf -> authenticator == 1		5663	0		==			
ANR	5718	PtrMemberAccess	runModConf -> authenticator		5663	0					
ANR	5719	Identifier	runModConf		5663	0					
ANR	5720	Identifier	authenticator		5663	1					
ANR	5721	PrimaryExpression	1		5663	1					
ANR	5722	CompoundStatement		15:36:268:268	5663	1					
ANR	5723	ExpressionStatement	"authActor = zactor_new ( zauth , NULL )"	282:2:6989:7024	5663	0	True				
ANR	5724	AssignmentExpression	"authActor = zactor_new ( zauth , NULL )"		5663	0		=			
ANR	5725	Identifier	authActor		5663	0					
ANR	5726	CallExpression	"zactor_new ( zauth , NULL )"		5663	1					
ANR	5727	Callee	zactor_new		5663	0					
ANR	5728	Identifier	zactor_new		5663	0					
ANR	5729	ArgumentList	zauth		5663	1					
ANR	5730	Argument	zauth		5663	0					
ANR	5731	Identifier	zauth		5663	0					
ANR	5732	Argument	NULL		5663	1					
ANR	5733	Identifier	NULL		5663	0					
ANR	5734	ExpressionStatement	"zstr_sendx ( authActor , ""CURVE"" , runModConf -> clientCertPath , NULL )"	283:2:7028:7092	5663	1	True				
ANR	5735	CallExpression	"zstr_sendx ( authActor , ""CURVE"" , runModConf -> clientCertPath , NULL )"		5663	0					
ANR	5736	Callee	zstr_sendx		5663	0					
ANR	5737	Identifier	zstr_sendx		5663	0					
ANR	5738	ArgumentList	authActor		5663	1					
ANR	5739	Argument	authActor		5663	0					
ANR	5740	Identifier	authActor		5663	0					
ANR	5741	Argument	"""CURVE"""		5663	1					
ANR	5742	PrimaryExpression	"""CURVE"""		5663	0					
ANR	5743	Argument	runModConf -> clientCertPath		5663	2					
ANR	5744	PtrMemberAccess	runModConf -> clientCertPath		5663	0					
ANR	5745	Identifier	runModConf		5663	0					
ANR	5746	Identifier	clientCertPath		5663	1					
ANR	5747	Argument	NULL		5663	3					
ANR	5748	Identifier	NULL		5663	0					
ANR	5749	ExpressionStatement	zsock_wait ( authActor )	284:2:7096:7117	5663	2	True				
ANR	5750	CallExpression	zsock_wait ( authActor )		5663	0					
ANR	5751	Callee	zsock_wait		5663	0					
ANR	5752	Identifier	zsock_wait		5663	0					
ANR	5753	ArgumentList	authActor		5663	1					
ANR	5754	Argument	authActor		5663	0					
ANR	5755	Identifier	authActor		5663	0					
ANR	5756	IdentifierDeclStatement	instanceConf_t * inst ;	287:1:7125:7145	5663	5	True				
ANR	5757	IdentifierDecl	* inst		5663	0					
ANR	5758	IdentifierDeclType	instanceConf_t *		5663	0					
ANR	5759	Identifier	inst		5663	1					
ANR	5760	ForStatement	for ( inst = runModConf -> root ; inst != NULL ; inst = inst -> next )		5663	6					
ANR	5761	ForInit	inst = runModConf -> root ;	288:5:7152:7175	5663	0	True				
ANR	5762	AssignmentExpression	inst = runModConf -> root		5663	0		=			
ANR	5763	Identifier	inst		5663	0					
ANR	5764	PtrMemberAccess	runModConf -> root		5663	1					
ANR	5765	Identifier	runModConf		5663	0					
ANR	5766	Identifier	root		5663	1					
ANR	5767	Condition	inst != NULL	288:30:7177:7188	5663	1	True				
ANR	5768	EqualityExpression	inst != NULL		5663	0		!=			
ANR	5769	Identifier	inst		5663	0					
ANR	5770	Identifier	NULL		5663	1					
ANR	5771	AssignmentExpression	inst = inst -> next	288:44:7191:7205	5663	2	True	=			
ANR	5772	Identifier	inst		5663	0					
ANR	5773	PtrMemberAccess	inst -> next		5663	1					
ANR	5774	Identifier	inst		5663	0					
ANR	5775	Identifier	next		5663	1					
ANR	5776	CompoundStatement		22:61:491:491	5663	3					
ANR	5777	ExpressionStatement	CHKiRet ( addListener ( inst ) )	289:2:7212:7238	5663	0	True				
ANR	5778	CallExpression	CHKiRet ( addListener ( inst ) )		5663	0					
ANR	5779	Callee	CHKiRet		5663	0					
ANR	5780	Identifier	CHKiRet		5663	0					
ANR	5781	ArgumentList	addListener ( inst )		5663	1					
ANR	5782	Argument	addListener ( inst )		5663	0					
ANR	5783	CallExpression	addListener ( inst )		5663	0					
ANR	5784	Callee	addListener		5663	0					
ANR	5785	Identifier	addListener		5663	0					
ANR	5786	ArgumentList	inst		5663	1					
ANR	5787	Argument	inst		5663	0					
ANR	5788	Identifier	inst		5663	0					
ANR	5789	IdentifierDeclStatement	zpoller_t * poller = zpoller_new ( NULL ) ;	292:1:7246:7283	5663	7	True				
ANR	5790	IdentifierDecl	* poller = zpoller_new ( NULL )		5663	0					
ANR	5791	IdentifierDeclType	zpoller_t *		5663	0					
ANR	5792	Identifier	poller		5663	1					
ANR	5793	AssignmentExpression	* poller = zpoller_new ( NULL )		5663	2		=			
ANR	5794	Identifier	poller		5663	0					
ANR	5795	CallExpression	zpoller_new ( NULL )		5663	1					
ANR	5796	Callee	zpoller_new		5663	0					
ANR	5797	Identifier	zpoller_new		5663	0					
ANR	5798	ArgumentList	NULL		5663	1					
ANR	5799	Argument	NULL		5663	0					
ANR	5800	Identifier	NULL		5663	0					
ANR	5801	IfStatement	if ( ! poller )		5663	8					
ANR	5802	Condition	! poller	293:4:7289:7295	5663	0	True				
ANR	5803	UnaryOperationExpression	! poller		5663	0					
ANR	5804	UnaryOperator	!		5663	0					
ANR	5805	Identifier	poller		5663	1					
ANR	5806	CompoundStatement		27:13:581:581	5663	1					
ANR	5807	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not create poller"" )"	294:2:7302:7359	5663	0	True				
ANR	5808	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""could not create poller"" )"		5663	0					
ANR	5809	Callee	errmsg . LogError		5663	0					
ANR	5810	MemberAccess	errmsg . LogError		5663	0					
ANR	5811	Identifier	errmsg		5663	0					
ANR	5812	Identifier	LogError		5663	1					
ANR	5813	ArgumentList	0		5663	1					
ANR	5814	Argument	0		5663	0					
ANR	5815	PrimaryExpression	0		5663	0					
ANR	5816	Argument	NO_ERRCODE		5663	1					
ANR	5817	Identifier	NO_ERRCODE		5663	0					
ANR	5818	Argument	"""could not create poller"""		5663	2					
ANR	5819	PrimaryExpression	"""could not create poller"""		5663	0					
ANR	5820	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	295:3:7364:7390	5663	1	True				
ANR	5821	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		5663	0					
ANR	5822	Callee	ABORT_FINALIZE		5663	0					
ANR	5823	Identifier	ABORT_FINALIZE		5663	0					
ANR	5824	ArgumentList	RS_RET_ERR		5663	1					
ANR	5825	Argument	RS_RET_ERR		5663	0					
ANR	5826	Identifier	RS_RET_ERR		5663	0					
ANR	5827	ExpressionStatement	"DBGPRINTF ( ""imczmq: created poller\\n"" )"	297:1:7396:7433	5663	9	True				
ANR	5828	CallExpression	"DBGPRINTF ( ""imczmq: created poller\\n"" )"		5663	0					
ANR	5829	Callee	DBGPRINTF		5663	0					
ANR	5830	Identifier	DBGPRINTF		5663	0					
ANR	5831	ArgumentList	"""imczmq: created poller\\n"""		5663	1					
ANR	5832	Argument	"""imczmq: created poller\\n"""		5663	0					
ANR	5833	PrimaryExpression	"""imczmq: created poller\\n"""		5663	0					
ANR	5834	IdentifierDeclStatement	struct listener_t * pData ;	299:1:7437:7461	5663	10	True				
ANR	5835	IdentifierDecl	* pData		5663	0					
ANR	5836	IdentifierDeclType	struct listener_t *		5663	0					
ANR	5837	Identifier	pData		5663	1					
ANR	5838	ExpressionStatement	pData = zlist_first ( listenerList )	301:1:7465:7498	5663	11	True				
ANR	5839	AssignmentExpression	pData = zlist_first ( listenerList )		5663	0		=			
ANR	5840	Identifier	pData		5663	0					
ANR	5841	CallExpression	zlist_first ( listenerList )		5663	1					
ANR	5842	Callee	zlist_first		5663	0					
ANR	5843	Identifier	zlist_first		5663	0					
ANR	5844	ArgumentList	listenerList		5663	1					
ANR	5845	Argument	listenerList		5663	0					
ANR	5846	Identifier	listenerList		5663	0					
ANR	5847	IfStatement	if ( ! pData )		5663	12					
ANR	5848	Condition	! pData	302:4:7504:7509	5663	0	True				
ANR	5849	UnaryOperationExpression	! pData		5663	0					
ANR	5850	UnaryOperator	!		5663	0					
ANR	5851	Identifier	pData		5663	1					
ANR	5852	CompoundStatement		36:12:795:795	5663	1					
ANR	5853	Statement	errmsg	303:2:7516:7521	5663	0	True				
ANR	5854	Statement	.	303:8:7522:7522	5663	1	True				
ANR	5855	Statement	LogError	303:9:7523:7530	5663	2	True				
ANR	5856	Statement	(	303:17:7531:7531	5663	3	True				
ANR	5857	Statement	0	303:18:7532:7532	5663	4	True				
ANR	5858	Statement	","	303:19:7533:7533	5663	5	True				
ANR	5859	Statement	NO_ERRCODE	303:21:7535:7544	5663	6	True				
ANR	5860	Statement	","	303:31:7545:7545	5663	7	True				
ANR	5861	Statement	"""imczmq: no listeners were """	303:33:7547:7574	5663	8	True				
ANR	5862	Statement	"""started, input not activated.\\n"""	304:6:7582:7614	5663	9	True				
ANR	5863	Statement	)	304:39:7615:7615	5663	10	True				
ANR	5864	ExpressionStatement		304:40:7616:7616	5663	11	True				
ANR	5865	ExpressionStatement	ABORT_FINALIZE ( RS_RET_NO_RUN )	305:2:7620:7649	5663	12	True				
ANR	5866	CallExpression	ABORT_FINALIZE ( RS_RET_NO_RUN )		5663	0					
ANR	5867	Callee	ABORT_FINALIZE		5663	0					
ANR	5868	Identifier	ABORT_FINALIZE		5663	0					
ANR	5869	ArgumentList	RS_RET_NO_RUN		5663	1					
ANR	5870	Argument	RS_RET_NO_RUN		5663	0					
ANR	5871	Identifier	RS_RET_NO_RUN		5663	0					
ANR	5872	WhileStatement	while ( pData )		5663	13					
ANR	5873	Condition	pData	308:7:7662:7666	5663	0	True				
ANR	5874	Identifier	pData		5663	0					
ANR	5875	CompoundStatement		43:2:956:997	5663	1					
ANR	5876	IdentifierDeclStatement	"int rc = zpoller_add ( poller , pData -> sock ) ;"	309:2:7673:7714	5663	0	True				
ANR	5877	IdentifierDecl	"rc = zpoller_add ( poller , pData -> sock )"		5663	0					
ANR	5878	IdentifierDeclType	int		5663	0					
ANR	5879	Identifier	rc		5663	1					
ANR	5880	AssignmentExpression	"rc = zpoller_add ( poller , pData -> sock )"		5663	2		=			
ANR	5881	Identifier	rc		5663	0					
ANR	5882	CallExpression	"zpoller_add ( poller , pData -> sock )"		5663	1					
ANR	5883	Callee	zpoller_add		5663	0					
ANR	5884	Identifier	zpoller_add		5663	0					
ANR	5885	ArgumentList	poller		5663	1					
ANR	5886	Argument	poller		5663	0					
ANR	5887	Identifier	poller		5663	0					
ANR	5888	Argument	pData -> sock		5663	1					
ANR	5889	PtrMemberAccess	pData -> sock		5663	0					
ANR	5890	Identifier	pData		5663	0					
ANR	5891	Identifier	sock		5663	1					
ANR	5892	IfStatement	if ( rc != 0 )		5663	1					
ANR	5893	Condition	rc != 0	310:5:7721:7727	5663	0	True				
ANR	5894	EqualityExpression	rc != 0		5663	0		!=			
ANR	5895	Identifier	rc		5663	0					
ANR	5896	PrimaryExpression	0		5663	1					
ANR	5897	CompoundStatement		44:14:1013:1013	5663	1					
ANR	5898	Statement	errmsg	311:3:7735:7740	5663	0	True				
ANR	5899	Statement	.	311:9:7741:7741	5663	1	True				
ANR	5900	Statement	LogError	311:10:7742:7749	5663	2	True				
ANR	5901	Statement	(	311:18:7750:7750	5663	3	True				
ANR	5902	Statement	0	311:19:7751:7751	5663	4	True				
ANR	5903	Statement	","	311:20:7752:7752	5663	5	True				
ANR	5904	Statement	NO_ERRCODE	311:22:7754:7763	5663	6	True				
ANR	5905	Statement	","	311:32:7764:7764	5663	7	True				
ANR	5906	Statement	"""imczmq: could not add """	311:34:7766:7789	5663	8	True				
ANR	5907	Statement	"""socket to poller, input not activated.\\n"""	312:6:7797:7838	5663	9	True				
ANR	5908	Statement	)	312:48:7839:7839	5663	10	True				
ANR	5909	ExpressionStatement		312:49:7840:7840	5663	11	True				
ANR	5910	ExpressionStatement	ABORT_FINALIZE ( RS_RET_NO_RUN )	313:3:7845:7874	5663	12	True				
ANR	5911	CallExpression	ABORT_FINALIZE ( RS_RET_NO_RUN )		5663	0					
ANR	5912	Callee	ABORT_FINALIZE		5663	0					
ANR	5913	Identifier	ABORT_FINALIZE		5663	0					
ANR	5914	ArgumentList	RS_RET_NO_RUN		5663	1					
ANR	5915	Argument	RS_RET_NO_RUN		5663	0					
ANR	5916	Identifier	RS_RET_NO_RUN		5663	0					
ANR	5917	ExpressionStatement	pData = zlist_next ( listenerList )	315:2:7882:7914	5663	2	True				
ANR	5918	AssignmentExpression	pData = zlist_next ( listenerList )		5663	0		=			
ANR	5919	Identifier	pData		5663	0					
ANR	5920	CallExpression	zlist_next ( listenerList )		5663	1					
ANR	5921	Callee	zlist_next		5663	0					
ANR	5922	Identifier	zlist_next		5663	0					
ANR	5923	ArgumentList	listenerList		5663	1					
ANR	5924	Argument	listenerList		5663	0					
ANR	5925	Identifier	listenerList		5663	0					
ANR	5926	IdentifierDeclStatement	zframe_t * frame ;	318:1:7921:7936	5663	14	True				
ANR	5927	IdentifierDecl	* frame		5663	0					
ANR	5928	IdentifierDeclType	zframe_t *		5663	0					
ANR	5929	Identifier	frame		5663	1					
ANR	5930	IdentifierDeclStatement	"zsock_t * which = ( zsock_t * ) zpoller_wait ( poller , - 1 ) ;"	319:1:7939:7991	5663	15	True				
ANR	5931	IdentifierDecl	"* which = ( zsock_t * ) zpoller_wait ( poller , - 1 )"		5663	0					
ANR	5932	IdentifierDeclType	zsock_t *		5663	0					
ANR	5933	Identifier	which		5663	1					
ANR	5934	AssignmentExpression	"* which = ( zsock_t * ) zpoller_wait ( poller , - 1 )"		5663	2		=			
ANR	5935	Identifier	which		5663	0					
ANR	5936	CastExpression	"( zsock_t * ) zpoller_wait ( poller , - 1 )"		5663	1					
ANR	5937	CastTarget	zsock_t *		5663	0					
ANR	5938	CallExpression	"zpoller_wait ( poller , - 1 )"		5663	1					
ANR	5939	Callee	zpoller_wait		5663	0					
ANR	5940	Identifier	zpoller_wait		5663	0					
ANR	5941	ArgumentList	poller		5663	1					
ANR	5942	Argument	poller		5663	0					
ANR	5943	Identifier	poller		5663	0					
ANR	5944	Argument	- 1		5663	1					
ANR	5945	UnaryOperationExpression	- 1		5663	0					
ANR	5946	UnaryOperator	-		5663	0					
ANR	5947	PrimaryExpression	1		5663	1					
ANR	5948	WhileStatement	while ( which )		5663	16					
ANR	5949	Condition	which	320:7:8000:8004	5663	0	True				
ANR	5950	Identifier	which		5663	0					
ANR	5951	CompoundStatement		74:2:1683:1695	5663	1					
ANR	5952	IfStatement	if ( zpoller_terminated ( poller ) )		5663	0					
ANR	5953	Condition	zpoller_terminated ( poller )	321:6:8015:8040	5663	0	True				
ANR	5954	CallExpression	zpoller_terminated ( poller )		5663	0					
ANR	5955	Callee	zpoller_terminated		5663	0					
ANR	5956	Identifier	zpoller_terminated		5663	0					
ANR	5957	ArgumentList	poller		5663	1					
ANR	5958	Argument	poller		5663	0					
ANR	5959	Identifier	poller		5663	0					
ANR	5960	CompoundStatement		55:34:1326:1326	5663	1					
ANR	5961	BreakStatement	break ;	322:4:8049:8054	5663	0	True				
ANR	5962	ExpressionStatement	pData = zlist_first ( listenerList )	324:2:8062:8095	5663	1	True				
ANR	5963	AssignmentExpression	pData = zlist_first ( listenerList )		5663	0		=			
ANR	5964	Identifier	pData		5663	0					
ANR	5965	CallExpression	zlist_first ( listenerList )		5663	1					
ANR	5966	Callee	zlist_first		5663	0					
ANR	5967	Identifier	zlist_first		5663	0					
ANR	5968	ArgumentList	listenerList		5663	1					
ANR	5969	Argument	listenerList		5663	0					
ANR	5970	Identifier	listenerList		5663	0					
ANR	5971	WhileStatement	while ( pData -> sock != which )		5663	2					
ANR	5972	Condition	pData -> sock != which	325:8:8105:8124	5663	0	True				
ANR	5973	EqualityExpression	pData -> sock != which		5663	0		!=			
ANR	5974	PtrMemberAccess	pData -> sock		5663	0					
ANR	5975	Identifier	pData		5663	0					
ANR	5976	Identifier	sock		5663	1					
ANR	5977	Identifier	which		5663	1					
ANR	5978	CompoundStatement		59:30:1410:1410	5663	1					
ANR	5979	ExpressionStatement	pData = zlist_next ( listenerList )	326:3:8132:8164	5663	0	True				
ANR	5980	AssignmentExpression	pData = zlist_next ( listenerList )		5663	0		=			
ANR	5981	Identifier	pData		5663	0					
ANR	5982	CallExpression	zlist_next ( listenerList )		5663	1					
ANR	5983	Callee	zlist_next		5663	0					
ANR	5984	Identifier	zlist_next		5663	0					
ANR	5985	ArgumentList	listenerList		5663	1					
ANR	5986	Argument	listenerList		5663	0					
ANR	5987	Identifier	listenerList		5663	0					
ANR	5988	IfStatement	if ( which == pData -> sock )		5663	3					
ANR	5989	Condition	which == pData -> sock	329:5:8177:8196	5663	0	True				
ANR	5990	EqualityExpression	which == pData -> sock		5663	0		==			
ANR	5991	Identifier	which		5663	0					
ANR	5992	PtrMemberAccess	pData -> sock		5663	1					
ANR	5993	Identifier	pData		5663	0					
ANR	5994	Identifier	sock		5663	1					
ANR	5995	CompoundStatement		63:27:1482:1482	5663	1					
ANR	5996	ExpressionStatement	"DBGPRINTF ( ""imczmq: found matching socket\\n"" )"	330:3:8204:8248	5663	0	True				
ANR	5997	CallExpression	"DBGPRINTF ( ""imczmq: found matching socket\\n"" )"		5663	0					
ANR	5998	Callee	DBGPRINTF		5663	0					
ANR	5999	Identifier	DBGPRINTF		5663	0					
ANR	6000	ArgumentList	"""imczmq: found matching socket\\n"""		5663	1					
ANR	6001	Argument	"""imczmq: found matching socket\\n"""		5663	0					
ANR	6002	PrimaryExpression	"""imczmq: found matching socket\\n"""		5663	0					
ANR	6003	ExpressionStatement	frame = zframe_recv ( which )	333:2:8257:8283	5663	4	True				
ANR	6004	AssignmentExpression	frame = zframe_recv ( which )		5663	0		=			
ANR	6005	Identifier	frame		5663	0					
ANR	6006	CallExpression	zframe_recv ( which )		5663	1					
ANR	6007	Callee	zframe_recv		5663	0					
ANR	6008	Identifier	zframe_recv		5663	0					
ANR	6009	ArgumentList	which		5663	1					
ANR	6010	Argument	which		5663	0					
ANR	6011	Identifier	which		5663	0					
ANR	6012	IdentifierDeclStatement	char * buf = zframe_strdup ( frame ) ;	334:2:8287:8319	5663	5	True				
ANR	6013	IdentifierDecl	* buf = zframe_strdup ( frame )		5663	0					
ANR	6014	IdentifierDeclType	char *		5663	0					
ANR	6015	Identifier	buf		5663	1					
ANR	6016	AssignmentExpression	* buf = zframe_strdup ( frame )		5663	2		=			
ANR	6017	Identifier	buf		5663	0					
ANR	6018	CallExpression	zframe_strdup ( frame )		5663	1					
ANR	6019	Callee	zframe_strdup		5663	0					
ANR	6020	Identifier	zframe_strdup		5663	0					
ANR	6021	ArgumentList	frame		5663	1					
ANR	6022	Argument	frame		5663	0					
ANR	6023	Identifier	frame		5663	0					
ANR	6024	IfStatement	if ( buf == NULL )		5663	6					
ANR	6025	Condition	buf == NULL	336:5:8327:8337	5663	0	True				
ANR	6026	EqualityExpression	buf == NULL		5663	0		==			
ANR	6027	Identifier	buf		5663	0					
ANR	6028	Identifier	NULL		5663	1					
ANR	6029	CompoundStatement		70:18:1623:1623	5663	1					
ANR	6030	ExpressionStatement	"DBGPRINTF ( ""imczmq: null buffer\\n"" )"	337:3:8345:8379	5663	0	True				
ANR	6031	CallExpression	"DBGPRINTF ( ""imczmq: null buffer\\n"" )"		5663	0					
ANR	6032	Callee	DBGPRINTF		5663	0					
ANR	6033	Identifier	DBGPRINTF		5663	0					
ANR	6034	ArgumentList	"""imczmq: null buffer\\n"""		5663	1					
ANR	6035	Argument	"""imczmq: null buffer\\n"""		5663	0					
ANR	6036	PrimaryExpression	"""imczmq: null buffer\\n"""		5663	0					
ANR	6037	ContinueStatement	continue ;	338:3:8384:8392	5663	1	True				
ANR	6038	IdentifierDeclStatement	smsg_t * pMsg ;	340:2:8400:8412	5663	7	True				
ANR	6039	IdentifierDecl	* pMsg		5663	0					
ANR	6040	IdentifierDeclType	smsg_t *		5663	0					
ANR	6041	Identifier	pMsg		5663	1					
ANR	6042	IfStatement	if ( msgConstruct ( & pMsg ) == RS_RET_OK )		5663	8					
ANR	6043	Condition	msgConstruct ( & pMsg ) == RS_RET_OK	341:5:8419:8450	5663	0	True				
ANR	6044	EqualityExpression	msgConstruct ( & pMsg ) == RS_RET_OK		5663	0		==			
ANR	6045	CallExpression	msgConstruct ( & pMsg )		5663	0					
ANR	6046	Callee	msgConstruct		5663	0					
ANR	6047	Identifier	msgConstruct		5663	0					
ANR	6048	ArgumentList	& pMsg		5663	1					
ANR	6049	Argument	& pMsg		5663	0					
ANR	6050	UnaryOperationExpression	& pMsg		5663	0					
ANR	6051	UnaryOperator	&		5663	0					
ANR	6052	Identifier	pMsg		5663	1					
ANR	6053	Identifier	RS_RET_OK		5663	1					
ANR	6054	CompoundStatement		75:39:1736:1736	5663	1					
ANR	6055	ExpressionStatement	"MsgSetRawMsg ( pMsg , buf , strlen ( buf ) )"	342:3:8458:8494	5663	0	True				
ANR	6056	CallExpression	"MsgSetRawMsg ( pMsg , buf , strlen ( buf ) )"		5663	0					
ANR	6057	Callee	MsgSetRawMsg		5663	0					
ANR	6058	Identifier	MsgSetRawMsg		5663	0					
ANR	6059	ArgumentList	pMsg		5663	1					
ANR	6060	Argument	pMsg		5663	0					
ANR	6061	Identifier	pMsg		5663	0					
ANR	6062	Argument	buf		5663	1					
ANR	6063	Identifier	buf		5663	0					
ANR	6064	Argument	strlen ( buf )		5663	2					
ANR	6065	CallExpression	strlen ( buf )		5663	0					
ANR	6066	Callee	strlen		5663	0					
ANR	6067	Identifier	strlen		5663	0					
ANR	6068	ArgumentList	buf		5663	1					
ANR	6069	Argument	buf		5663	0					
ANR	6070	Identifier	buf		5663	0					
ANR	6071	ExpressionStatement	"MsgSetInputName ( pMsg , s_namep )"	343:3:8499:8529	5663	1	True				
ANR	6072	CallExpression	"MsgSetInputName ( pMsg , s_namep )"		5663	0					
ANR	6073	Callee	MsgSetInputName		5663	0					
ANR	6074	Identifier	MsgSetInputName		5663	0					
ANR	6075	ArgumentList	pMsg		5663	1					
ANR	6076	Argument	pMsg		5663	0					
ANR	6077	Identifier	pMsg		5663	0					
ANR	6078	Argument	s_namep		5663	1					
ANR	6079	Identifier	s_namep		5663	0					
ANR	6080	ExpressionStatement	"MsgSetHOSTNAME ( pMsg , glbl . GetLocalHostName ( ) , ustrlen ( glbl . GetLocalHostName ( ) ) )"	344:3:8534:8613	5663	2	True				
ANR	6081	CallExpression	"MsgSetHOSTNAME ( pMsg , glbl . GetLocalHostName ( ) , ustrlen ( glbl . GetLocalHostName ( ) ) )"		5663	0					
ANR	6082	Callee	MsgSetHOSTNAME		5663	0					
ANR	6083	Identifier	MsgSetHOSTNAME		5663	0					
ANR	6084	ArgumentList	pMsg		5663	1					
ANR	6085	Argument	pMsg		5663	0					
ANR	6086	Identifier	pMsg		5663	0					
ANR	6087	Argument	glbl . GetLocalHostName ( )		5663	1					
ANR	6088	CallExpression	glbl . GetLocalHostName ( )		5663	0					
ANR	6089	Callee	glbl . GetLocalHostName		5663	0					
ANR	6090	MemberAccess	glbl . GetLocalHostName		5663	0					
ANR	6091	Identifier	glbl		5663	0					
ANR	6092	Identifier	GetLocalHostName		5663	1					
ANR	6093	ArgumentList			5663	1					
ANR	6094	Argument	ustrlen ( glbl . GetLocalHostName ( ) )		5663	2					
ANR	6095	CallExpression	ustrlen ( glbl . GetLocalHostName ( ) )		5663	0					
ANR	6096	Callee	ustrlen		5663	0					
ANR	6097	Identifier	ustrlen		5663	0					
ANR	6098	ArgumentList	glbl . GetLocalHostName ( )		5663	1					
ANR	6099	Argument	glbl . GetLocalHostName ( )		5663	0					
ANR	6100	CallExpression	glbl . GetLocalHostName ( )		5663	0					
ANR	6101	Callee	glbl . GetLocalHostName		5663	0					
ANR	6102	MemberAccess	glbl . GetLocalHostName		5663	0					
ANR	6103	Identifier	glbl		5663	0					
ANR	6104	Identifier	GetLocalHostName		5663	1					
ANR	6105	ArgumentList			5663	1					
ANR	6106	ExpressionStatement	"MsgSetRcvFrom ( pMsg , glbl . GetLocalHostNameProp ( ) )"	345:3:8618:8666	5663	3	True				
ANR	6107	CallExpression	"MsgSetRcvFrom ( pMsg , glbl . GetLocalHostNameProp ( ) )"		5663	0					
ANR	6108	Callee	MsgSetRcvFrom		5663	0					
ANR	6109	Identifier	MsgSetRcvFrom		5663	0					
ANR	6110	ArgumentList	pMsg		5663	1					
ANR	6111	Argument	pMsg		5663	0					
ANR	6112	Identifier	pMsg		5663	0					
ANR	6113	Argument	glbl . GetLocalHostNameProp ( )		5663	1					
ANR	6114	CallExpression	glbl . GetLocalHostNameProp ( )		5663	0					
ANR	6115	Callee	glbl . GetLocalHostNameProp		5663	0					
ANR	6116	MemberAccess	glbl . GetLocalHostNameProp		5663	0					
ANR	6117	Identifier	glbl		5663	0					
ANR	6118	Identifier	GetLocalHostNameProp		5663	1					
ANR	6119	ArgumentList			5663	1					
ANR	6120	ExpressionStatement	"MsgSetRcvFromIP ( pMsg , glbl . GetLocalHostIP ( ) )"	346:3:8671:8715	5663	4	True				
ANR	6121	CallExpression	"MsgSetRcvFromIP ( pMsg , glbl . GetLocalHostIP ( ) )"		5663	0					
ANR	6122	Callee	MsgSetRcvFromIP		5663	0					
ANR	6123	Identifier	MsgSetRcvFromIP		5663	0					
ANR	6124	ArgumentList	pMsg		5663	1					
ANR	6125	Argument	pMsg		5663	0					
ANR	6126	Identifier	pMsg		5663	0					
ANR	6127	Argument	glbl . GetLocalHostIP ( )		5663	1					
ANR	6128	CallExpression	glbl . GetLocalHostIP ( )		5663	0					
ANR	6129	Callee	glbl . GetLocalHostIP		5663	0					
ANR	6130	MemberAccess	glbl . GetLocalHostIP		5663	0					
ANR	6131	Identifier	glbl		5663	0					
ANR	6132	Identifier	GetLocalHostIP		5663	1					
ANR	6133	ArgumentList			5663	1					
ANR	6134	ExpressionStatement	"MsgSetMSGoffs ( pMsg , 0 )"	347:3:8720:8742	5663	5	True				
ANR	6135	CallExpression	"MsgSetMSGoffs ( pMsg , 0 )"		5663	0					
ANR	6136	Callee	MsgSetMSGoffs		5663	0					
ANR	6137	Identifier	MsgSetMSGoffs		5663	0					
ANR	6138	ArgumentList	pMsg		5663	1					
ANR	6139	Argument	pMsg		5663	0					
ANR	6140	Identifier	pMsg		5663	0					
ANR	6141	Argument	0		5663	1					
ANR	6142	PrimaryExpression	0		5663	0					
ANR	6143	ExpressionStatement	"MsgSetFlowControlType ( pMsg , eFLOWCTL_NO_DELAY )"	348:3:8747:8793	5663	6	True				
ANR	6144	CallExpression	"MsgSetFlowControlType ( pMsg , eFLOWCTL_NO_DELAY )"		5663	0					
ANR	6145	Callee	MsgSetFlowControlType		5663	0					
ANR	6146	Identifier	MsgSetFlowControlType		5663	0					
ANR	6147	ArgumentList	pMsg		5663	1					
ANR	6148	Argument	pMsg		5663	0					
ANR	6149	Identifier	pMsg		5663	0					
ANR	6150	Argument	eFLOWCTL_NO_DELAY		5663	1					
ANR	6151	Identifier	eFLOWCTL_NO_DELAY		5663	0					
ANR	6152	ExpressionStatement	"MsgSetRuleset ( pMsg , pData -> ruleset )"	349:3:8798:8833	5663	7	True				
ANR	6153	CallExpression	"MsgSetRuleset ( pMsg , pData -> ruleset )"		5663	0					
ANR	6154	Callee	MsgSetRuleset		5663	0					
ANR	6155	Identifier	MsgSetRuleset		5663	0					
ANR	6156	ArgumentList	pMsg		5663	1					
ANR	6157	Argument	pMsg		5663	0					
ANR	6158	Identifier	pMsg		5663	0					
ANR	6159	Argument	pData -> ruleset		5663	1					
ANR	6160	PtrMemberAccess	pData -> ruleset		5663	0					
ANR	6161	Identifier	pData		5663	0					
ANR	6162	Identifier	ruleset		5663	1					
ANR	6163	ExpressionStatement	pMsg -> msgFlags = NEEDS_PARSING | PARSE_HOSTNAME	350:3:8838:8885	5663	8	True				
ANR	6164	AssignmentExpression	pMsg -> msgFlags = NEEDS_PARSING | PARSE_HOSTNAME		5663	0		=			
ANR	6165	PtrMemberAccess	pMsg -> msgFlags		5663	0					
ANR	6166	Identifier	pMsg		5663	0					
ANR	6167	Identifier	msgFlags		5663	1					
ANR	6168	InclusiveOrExpression	NEEDS_PARSING | PARSE_HOSTNAME		5663	1		|			
ANR	6169	Identifier	NEEDS_PARSING		5663	0					
ANR	6170	Identifier	PARSE_HOSTNAME		5663	1					
ANR	6171	ExpressionStatement	submitMsg2 ( pMsg )	351:3:8890:8906	5663	9	True				
ANR	6172	CallExpression	submitMsg2 ( pMsg )		5663	0					
ANR	6173	Callee	submitMsg2		5663	0					
ANR	6174	Identifier	submitMsg2		5663	0					
ANR	6175	ArgumentList	pMsg		5663	1					
ANR	6176	Argument	pMsg		5663	0					
ANR	6177	Identifier	pMsg		5663	0					
ANR	6178	ExpressionStatement	free ( buf )	354:2:8915:8924	5663	9	True				
ANR	6179	CallExpression	free ( buf )		5663	0					
ANR	6180	Callee	free		5663	0					
ANR	6181	Identifier	free		5663	0					
ANR	6182	ArgumentList	buf		5663	1					
ANR	6183	Argument	buf		5663	0					
ANR	6184	Identifier	buf		5663	0					
ANR	6185	ExpressionStatement	"which = ( zsock_t * ) zpoller_wait ( poller , - 1 )"	355:2:8928:8971	5663	10	True				
ANR	6186	AssignmentExpression	"which = ( zsock_t * ) zpoller_wait ( poller , - 1 )"		5663	0		=			
ANR	6187	Identifier	which		5663	0					
ANR	6188	CastExpression	"( zsock_t * ) zpoller_wait ( poller , - 1 )"		5663	1					
ANR	6189	CastTarget	zsock_t *		5663	0					
ANR	6190	CallExpression	"zpoller_wait ( poller , - 1 )"		5663	1					
ANR	6191	Callee	zpoller_wait		5663	0					
ANR	6192	Identifier	zpoller_wait		5663	0					
ANR	6193	ArgumentList	poller		5663	1					
ANR	6194	Argument	poller		5663	0					
ANR	6195	Identifier	poller		5663	0					
ANR	6196	Argument	- 1		5663	1					
ANR	6197	UnaryOperationExpression	- 1		5663	0					
ANR	6198	UnaryOperator	-		5663	0					
ANR	6199	PrimaryExpression	1		5663	1					
ANR	6200	Label	finalize_it :	357:0:8976:8987	5663	17	True				
ANR	6201	Identifier	finalize_it		5663	0					
ANR	6202	ExpressionStatement	zframe_destroy ( & frame )	358:1:8990:9012	5663	18	True				
ANR	6203	CallExpression	zframe_destroy ( & frame )		5663	0					
ANR	6204	Callee	zframe_destroy		5663	0					
ANR	6205	Identifier	zframe_destroy		5663	0					
ANR	6206	ArgumentList	& frame		5663	1					
ANR	6207	Argument	& frame		5663	0					
ANR	6208	UnaryOperationExpression	& frame		5663	0					
ANR	6209	UnaryOperator	&		5663	0					
ANR	6210	Identifier	frame		5663	1					
ANR	6211	ExpressionStatement	zpoller_destroy ( & poller )	359:1:9015:9039	5663	19	True				
ANR	6212	CallExpression	zpoller_destroy ( & poller )		5663	0					
ANR	6213	Callee	zpoller_destroy		5663	0					
ANR	6214	Identifier	zpoller_destroy		5663	0					
ANR	6215	ArgumentList	& poller		5663	1					
ANR	6216	Argument	& poller		5663	0					
ANR	6217	UnaryOperationExpression	& poller		5663	0					
ANR	6218	UnaryOperator	&		5663	0					
ANR	6219	Identifier	poller		5663	1					
ANR	6220	ExpressionStatement	pData = zlist_first ( listenerList )	360:1:9042:9075	5663	20	True				
ANR	6221	AssignmentExpression	pData = zlist_first ( listenerList )		5663	0		=			
ANR	6222	Identifier	pData		5663	0					
ANR	6223	CallExpression	zlist_first ( listenerList )		5663	1					
ANR	6224	Callee	zlist_first		5663	0					
ANR	6225	Identifier	zlist_first		5663	0					
ANR	6226	ArgumentList	listenerList		5663	1					
ANR	6227	Argument	listenerList		5663	0					
ANR	6228	Identifier	listenerList		5663	0					
ANR	6229	WhileStatement	while ( pData )		5663	21					
ANR	6230	Condition	pData	361:7:9084:9088	5663	0	True				
ANR	6231	Identifier	pData		5663	0					
ANR	6232	CompoundStatement		95:14:2374:2374	5663	1					
ANR	6233	ExpressionStatement	zsock_destroy ( & pData -> sock )	362:2:9095:9122	5663	0	True				
ANR	6234	CallExpression	zsock_destroy ( & pData -> sock )		5663	0					
ANR	6235	Callee	zsock_destroy		5663	0					
ANR	6236	Identifier	zsock_destroy		5663	0					
ANR	6237	ArgumentList	& pData -> sock		5663	1					
ANR	6238	Argument	& pData -> sock		5663	0					
ANR	6239	UnaryOperationExpression	& pData -> sock		5663	0					
ANR	6240	UnaryOperator	&		5663	0					
ANR	6241	PtrMemberAccess	pData -> sock		5663	1					
ANR	6242	Identifier	pData		5663	0					
ANR	6243	Identifier	sock		5663	1					
ANR	6244	ExpressionStatement	free ( pData -> ruleset )	363:2:9126:9146	5663	1	True				
ANR	6245	CallExpression	free ( pData -> ruleset )		5663	0					
ANR	6246	Callee	free		5663	0					
ANR	6247	Identifier	free		5663	0					
ANR	6248	ArgumentList	pData -> ruleset		5663	1					
ANR	6249	Argument	pData -> ruleset		5663	0					
ANR	6250	PtrMemberAccess	pData -> ruleset		5663	0					
ANR	6251	Identifier	pData		5663	0					
ANR	6252	Identifier	ruleset		5663	1					
ANR	6253	ExpressionStatement	pData = zlist_next ( listenerList )	364:2:9150:9182	5663	2	True				
ANR	6254	AssignmentExpression	pData = zlist_next ( listenerList )		5663	0		=			
ANR	6255	Identifier	pData		5663	0					
ANR	6256	CallExpression	zlist_next ( listenerList )		5663	1					
ANR	6257	Callee	zlist_next		5663	0					
ANR	6258	Identifier	zlist_next		5663	0					
ANR	6259	ArgumentList	listenerList		5663	1					
ANR	6260	Argument	listenerList		5663	0					
ANR	6261	Identifier	listenerList		5663	0					
ANR	6262	ExpressionStatement	zlist_destroy ( & listenerList )	366:1:9188:9216	5663	22	True				
ANR	6263	CallExpression	zlist_destroy ( & listenerList )		5663	0					
ANR	6264	Callee	zlist_destroy		5663	0					
ANR	6265	Identifier	zlist_destroy		5663	0					
ANR	6266	ArgumentList	& listenerList		5663	1					
ANR	6267	Argument	& listenerList		5663	0					
ANR	6268	UnaryOperationExpression	& listenerList		5663	0					
ANR	6269	UnaryOperator	&		5663	0					
ANR	6270	Identifier	listenerList		5663	1					
ANR	6271	ExpressionStatement	zactor_destroy ( & authActor )	367:1:9219:9245	5663	23	True				
ANR	6272	CallExpression	zactor_destroy ( & authActor )		5663	0					
ANR	6273	Callee	zactor_destroy		5663	0					
ANR	6274	Identifier	zactor_destroy		5663	0					
ANR	6275	ArgumentList	& authActor		5663	1					
ANR	6276	Argument	& authActor		5663	0					
ANR	6277	UnaryOperationExpression	& authActor		5663	0					
ANR	6278	UnaryOperator	&		5663	0					
ANR	6279	Identifier	authActor		5663	1					
ANR	6280	ExpressionStatement	zcert_destroy ( & serverCert )	368:1:9248:9274	5663	24	True				
ANR	6281	CallExpression	zcert_destroy ( & serverCert )		5663	0					
ANR	6282	Callee	zcert_destroy		5663	0					
ANR	6283	Identifier	zcert_destroy		5663	0					
ANR	6284	ArgumentList	& serverCert		5663	1					
ANR	6285	Argument	& serverCert		5663	0					
ANR	6286	UnaryOperationExpression	& serverCert		5663	0					
ANR	6287	UnaryOperator	&		5663	0					
ANR	6288	Identifier	serverCert		5663	1					
ANR	6289	ExpressionStatement	RETiRet	369:1:9277:9284	5663	25	True				
ANR	6290	Identifier	RETiRet		5663	0					
ANR	6291	ReturnType	static rsRetVal		5663	1					
ANR	6292	Identifier	rcvData		5663	2					
ANR	6293	ParameterList			5663	3					
ANR	6294	CFGEntryNode	ENTRY		5663		True				
ANR	6295	CFGExitNode	EXIT		5663		True				
ANR	6296	Symbol	* pMsg		5663						
ANR	6297	Symbol	RS_RET_ERR		5663						
ANR	6298	Symbol	strlen		5663						
ANR	6299	Symbol	NO_ERRCODE		5663						
ANR	6300	Symbol	zframe_strdup		5663						
ANR	6301	Symbol	which		5663						
ANR	6302	Symbol	NULL		5663						
ANR	6303	Symbol	serverCert		5663						
ANR	6304	Symbol	zlist_first		5663						
ANR	6305	Symbol	RS_RET_OK		5663						
ANR	6306	Symbol	errmsg		5663						
ANR	6307	Symbol	inst -> next		5663						
ANR	6308	Symbol	zactor_new		5663						
ANR	6309	Symbol	pData -> sock		5663						
ANR	6310	Symbol	zframe_recv		5663						
ANR	6311	Symbol	zlist_new		5663						
ANR	6312	Symbol	zpoller_new		5663						
ANR	6313	Symbol	rc		5663						
ANR	6314	Symbol	* runModConf		5663						
ANR	6315	Symbol	listenerList		5663						
ANR	6316	Symbol	& authActor		5663						
ANR	6317	Symbol	& listenerList		5663						
ANR	6318	Symbol	glbl . GetLocalHostIP		5663						
ANR	6319	Symbol	runModConf		5663						
ANR	6320	Symbol	zpoller_terminated		5663						
ANR	6321	Symbol	zlist_next		5663						
ANR	6322	Symbol	s_namep		5663						
ANR	6323	Symbol	zpoller_add		5663						
ANR	6324	Symbol	frame		5663						
ANR	6325	Symbol	glbl . GetLocalHostName		5663						
ANR	6326	Symbol	poller		5663						
ANR	6327	Symbol	pMsg		5663						
ANR	6328	Symbol	zauth		5663						
ANR	6329	Symbol	runModConf -> clientCertPath		5663						
ANR	6330	Symbol	PARSE_HOSTNAME		5663						
ANR	6331	Symbol	& poller		5663						
ANR	6332	Symbol	authActor		5663						
ANR	6333	Symbol	glbl . GetLocalHostNameProp		5663						
ANR	6334	Symbol	pData -> ruleset		5663						
ANR	6335	Symbol	runModConf -> authenticator		5663						
ANR	6336	Symbol	zpoller_wait		5663						
ANR	6337	Symbol	& serverCert		5663						
ANR	6338	Symbol	eFLOWCTL_NO_DELAY		5663						
ANR	6339	Symbol	addListener		5663						
ANR	6340	Symbol	glbl		5663						
ANR	6341	Symbol	* inst		5663						
ANR	6342	Symbol	pMsg -> msgFlags		5663						
ANR	6343	Symbol	& pMsg		5663						
ANR	6344	Symbol	& frame		5663						
ANR	6345	Symbol	msgConstruct		5663						
ANR	6346	Symbol	* pData		5663						
ANR	6347	Symbol	pData		5663						
ANR	6348	Symbol	RS_RET_NO_RUN		5663						
ANR	6349	Symbol	buf		5663						
ANR	6350	Symbol	NEEDS_PARSING		5663						
ANR	6351	Symbol	inst		5663						
ANR	6352	Symbol	runModConf -> root		5663						
ANR	6353	Symbol	ustrlen		5663						
ANR	6354	Symbol	& pData -> sock		5663						
ANR	6355	DeclStmt									
ANR	6356	Decl							BEGINrunInput CODESTARTrunInput	BEGINrunInput CODESTARTrunInput ( rcvData ( ) )	CHKiRet
ANR	6357	DeclStmt									
ANR	6358	Decl							ENDrunInput BEGINwillRun CODESTARTwillRun	ENDrunInput BEGINwillRun CODESTARTwillRun	CHKiRet
ANR	6359	DeclStmt									
ANR	6360	Decl							ENDafterRun BEGINmodExit CODESTARTmodExit	"ENDafterRun BEGINmodExit CODESTARTmodExit ( errmsg , CORE_COMPONENT )"	objRelease
ANR	6361	DeclStmt									
ANR	6362	Decl							ENDisCompatibleWithFeature BEGINbeginCnfLoad CODESTARTbeginCnfLoad	ENDisCompatibleWithFeature BEGINbeginCnfLoad CODESTARTbeginCnfLoad	runModConf
ANR	6363	DeclStmt									
ANR	6364	Decl							struct cnfparamvals	struct cnfparamvals *	pvals
ANR	6365	DeclStmt									
ANR	6366	Decl							int	int	i
ANR	6367	DeclStmt									
ANR	6368	Decl							CODESTARTsetModCnf	CODESTARTsetModCnf	pvals
ANR	6369	DeclStmt									
ANR	6370	Decl							BEGINcheckCnf instanceConf_t	BEGINcheckCnf instanceConf_t *	inst
ANR	6371	DeclStmt									
ANR	6372	Decl							ENDcheckCnf BEGINactivateCnfPrePrivDrop CODESTARTactivateCnfPrePrivDrop	ENDcheckCnf BEGINactivateCnfPrePrivDrop CODESTARTactivateCnfPrePrivDrop	runModConf
ANR	6373	DeclStmt									
ANR	6374	Decl							ENDactivateCnfPrePrivDrop BEGINactivateCnf CODESTARTactivateCnf ENDactivateCnf BEGINfreeCnf instanceConf_t	ENDactivateCnfPrePrivDrop BEGINactivateCnf CODESTARTactivateCnf ENDactivateCnf BEGINfreeCnf instanceConf_t *	inst
ANR	6375	Decl							ENDactivateCnfPrePrivDrop BEGINactivateCnf CODESTARTactivateCnf ENDactivateCnf BEGINfreeCnf instanceConf_t	ENDactivateCnfPrePrivDrop BEGINactivateCnf CODESTARTactivateCnf ENDactivateCnf BEGINfreeCnf instanceConf_t *	inst_r
ANR	6376	DeclStmt									
ANR	6377	Decl							CODESTARTfreeCnf	CODESTARTfreeCnf	free
ANR	6378	DeclStmt									
ANR	6379	Decl							struct cnfparamvals	struct cnfparamvals *	pvals
ANR	6380	DeclStmt									
ANR	6381	Decl							instanceConf_t	instanceConf_t *	inst
ANR	6382	DeclStmt									
ANR	6383	Decl							int	int	i
ANR	6384	DeclStmt									
ANR	6385	Decl							CODESTARTnewInpInst	CODESTARTnewInpInst	DBGPRINTF
ANR	6386	DeclStmt									
ANR	6387	Decl							char	char *	stringType
ANR	6388	DeclStmt									
ANR	6389	Decl							CODE_STD_FINALIZERnewInpInst	CODE_STD_FINALIZERnewInpInst	cnfparamvalsDestruct
ANR	6390	DeclStmt									
ANR	6391	Decl							CODESTARTmodInit	CODESTARTmodInit *	ipIFVersProvided
ANR	6392	DeclStmt									
ANR	6393	Decl							CODEmodInit_QueryRegCFSLineHdlr	"CODEmodInit_QueryRegCFSLineHdlr ( objUse ( errmsg , CORE_COMPONENT ) )"	CHKiRet
