command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	229441	File	data/converged/CVE-2017-12588_rsyslog/runtime_net.c								
ANR	229442	DeclStmt									
ANR	229443	Decl							unsigned int	unsigned int	u_int32_t
ANR	229444	DeclStmt									
ANR	229445	Decl							extern size_t	extern size_t ( struct sockaddr * sa )	SALEN
ANR	229446	DeclStmt									
ANR	229447	Decl							struct AllowedSenders	struct AllowedSenders *	pAllowedSenders_UDP
ANR	229448	DeclStmt									
ANR	229449	Decl							struct AllowedSenders	struct AllowedSenders *	pAllowedSenders_TCP
ANR	229450	DeclStmt									
ANR	229451	Decl							struct AllowedSenders	struct AllowedSenders *	pLastAllowedSenders_UDP
ANR	229452	DeclStmt									
ANR	229453	Decl							struct AllowedSenders	struct AllowedSenders *	pLastAllowedSenders_TCP
ANR	229454	DeclStmt									
ANR	229455	Decl							struct AllowedSenders	struct AllowedSenders *	pAllowedSenders_GSS
ANR	229456	DeclStmt									
ANR	229457	Decl							struct AllowedSenders	struct AllowedSenders *	pLastAllowedSenders_GSS
ANR	229458	DeclStmt									
ANR	229459	Decl							int	int	ACLAddHostnameOnFail
ANR	229460	DeclStmt									
ANR	229461	Decl							int	int	ACLDontResolve
ANR	229462	Function	setAllowRoot	109:0:3526:4081							
ANR	229463	FunctionDef	"setAllowRoot (struct AllowedSenders * * ppAllowRoot , uchar * pszType)"		229462	0					
ANR	229464	CompoundStatement		111:0:3608:4081	229462	0					
ANR	229465	ExpressionStatement	DEFiRet	112:1:3611:3618	229462	0	True				
ANR	229466	Identifier	DEFiRet		229462	0					
ANR	229467	IfStatement	"if ( ! strcmp ( ( char * ) pszType , ""UDP"" ) )"		229462	1					
ANR	229468	Condition	"! strcmp ( ( char * ) pszType , ""UDP"" )"	114:4:3625:3654	229462	0	True				
ANR	229469	UnaryOperationExpression	"! strcmp ( ( char * ) pszType , ""UDP"" )"		229462	0					
ANR	229470	UnaryOperator	!		229462	0					
ANR	229471	CallExpression	"strcmp ( ( char * ) pszType , ""UDP"" )"		229462	1					
ANR	229472	Callee	strcmp		229462	0					
ANR	229473	Identifier	strcmp		229462	0					
ANR	229474	ArgumentList	( char * ) pszType		229462	1					
ANR	229475	Argument	( char * ) pszType		229462	0					
ANR	229476	CastExpression	( char * ) pszType		229462	0					
ANR	229477	CastTarget	char *		229462	0					
ANR	229478	Identifier	pszType		229462	1					
ANR	229479	Argument	"""UDP"""		229462	1					
ANR	229480	PrimaryExpression	"""UDP"""		229462	0					
ANR	229481	ExpressionStatement	* ppAllowRoot = pAllowedSenders_UDP	115:2:3659:3693	229462	1	True				
ANR	229482	AssignmentExpression	* ppAllowRoot = pAllowedSenders_UDP		229462	0		=			
ANR	229483	UnaryOperationExpression	* ppAllowRoot		229462	0					
ANR	229484	UnaryOperator	*		229462	0					
ANR	229485	Identifier	ppAllowRoot		229462	1					
ANR	229486	Identifier	pAllowedSenders_UDP		229462	1					
ANR	229487	ElseStatement	else		229462	0					
ANR	229488	IfStatement	"if ( ! strcmp ( ( char * ) pszType , ""TCP"" ) )"		229462	0					
ANR	229489	Condition	"! strcmp ( ( char * ) pszType , ""TCP"" )"	116:9:3704:3733	229462	0	True				
ANR	229490	UnaryOperationExpression	"! strcmp ( ( char * ) pszType , ""TCP"" )"		229462	0					
ANR	229491	UnaryOperator	!		229462	0					
ANR	229492	CallExpression	"strcmp ( ( char * ) pszType , ""TCP"" )"		229462	1					
ANR	229493	Callee	strcmp		229462	0					
ANR	229494	Identifier	strcmp		229462	0					
ANR	229495	ArgumentList	( char * ) pszType		229462	1					
ANR	229496	Argument	( char * ) pszType		229462	0					
ANR	229497	CastExpression	( char * ) pszType		229462	0					
ANR	229498	CastTarget	char *		229462	0					
ANR	229499	Identifier	pszType		229462	1					
ANR	229500	Argument	"""TCP"""		229462	1					
ANR	229501	PrimaryExpression	"""TCP"""		229462	0					
ANR	229502	ExpressionStatement	* ppAllowRoot = pAllowedSenders_TCP	117:2:3738:3772	229462	1	True				
ANR	229503	AssignmentExpression	* ppAllowRoot = pAllowedSenders_TCP		229462	0		=			
ANR	229504	UnaryOperationExpression	* ppAllowRoot		229462	0					
ANR	229505	UnaryOperator	*		229462	0					
ANR	229506	Identifier	ppAllowRoot		229462	1					
ANR	229507	Identifier	pAllowedSenders_TCP		229462	1					
ANR	229508	ElseStatement	else		229462	0					
ANR	229509	IfStatement	"if ( ! strcmp ( ( char * ) pszType , ""GSS"" ) )"		229462	0					
ANR	229510	Condition	"! strcmp ( ( char * ) pszType , ""GSS"" )"	119:9:3801:3830	229462	0	True				
ANR	229511	UnaryOperationExpression	"! strcmp ( ( char * ) pszType , ""GSS"" )"		229462	0					
ANR	229512	UnaryOperator	!		229462	0					
ANR	229513	CallExpression	"strcmp ( ( char * ) pszType , ""GSS"" )"		229462	1					
ANR	229514	Callee	strcmp		229462	0					
ANR	229515	Identifier	strcmp		229462	0					
ANR	229516	ArgumentList	( char * ) pszType		229462	1					
ANR	229517	Argument	( char * ) pszType		229462	0					
ANR	229518	CastExpression	( char * ) pszType		229462	0					
ANR	229519	CastTarget	char *		229462	0					
ANR	229520	Identifier	pszType		229462	1					
ANR	229521	Argument	"""GSS"""		229462	1					
ANR	229522	PrimaryExpression	"""GSS"""		229462	0					
ANR	229523	ExpressionStatement	* ppAllowRoot = pAllowedSenders_GSS	120:2:3835:3869	229462	1	True				
ANR	229524	AssignmentExpression	* ppAllowRoot = pAllowedSenders_GSS		229462	0		=			
ANR	229525	UnaryOperationExpression	* ppAllowRoot		229462	0					
ANR	229526	UnaryOperator	*		229462	0					
ANR	229527	Identifier	ppAllowRoot		229462	1					
ANR	229528	Identifier	pAllowedSenders_GSS		229462	1					
ANR	229529	ElseStatement	else		229462	0					
ANR	229530	CompoundStatement		12:6:275:275	229462	0					
ANR	229531	ExpressionStatement	"dbgprintf ( ""program error: invalid allowed sender ID '%s', denying...\\n"" , pszType )"	123:2:3888:3969	229462	0	True				
ANR	229532	CallExpression	"dbgprintf ( ""program error: invalid allowed sender ID '%s', denying...\\n"" , pszType )"		229462	0					
ANR	229533	Callee	dbgprintf		229462	0					
ANR	229534	Identifier	dbgprintf		229462	0					
ANR	229535	ArgumentList	"""program error: invalid allowed sender ID '%s', denying...\\n"""		229462	1					
ANR	229536	Argument	"""program error: invalid allowed sender ID '%s', denying...\\n"""		229462	0					
ANR	229537	PrimaryExpression	"""program error: invalid allowed sender ID '%s', denying...\\n"""		229462	0					
ANR	229538	Argument	pszType		229462	1					
ANR	229539	Identifier	pszType		229462	0					
ANR	229540	ExpressionStatement	ABORT_FINALIZE ( RS_RET_CODE_ERR )	124:2:3973:4004	229462	1	True				
ANR	229541	CallExpression	ABORT_FINALIZE ( RS_RET_CODE_ERR )		229462	0					
ANR	229542	Callee	ABORT_FINALIZE		229462	0					
ANR	229543	Identifier	ABORT_FINALIZE		229462	0					
ANR	229544	ArgumentList	RS_RET_CODE_ERR		229462	1					
ANR	229545	Argument	RS_RET_CODE_ERR		229462	0					
ANR	229546	Identifier	RS_RET_CODE_ERR		229462	0					
ANR	229547	Label	finalize_it :	127:0:4058:4069	229462	2	True				
ANR	229548	Identifier	finalize_it		229462	0					
ANR	229549	ExpressionStatement	RETiRet	128:1:4072:4079	229462	3	True				
ANR	229550	Identifier	RETiRet		229462	0					
ANR	229551	ReturnType	static rsRetVal		229462	1					
ANR	229552	Identifier	setAllowRoot		229462	2					
ANR	229553	ParameterList	"struct AllowedSenders * * ppAllowRoot , uchar * pszType"		229462	3					
ANR	229554	Parameter	struct AllowedSenders * * ppAllowRoot	110:13:3555:3589	229462	0	True				
ANR	229555	ParameterType	struct AllowedSenders * *		229462	0					
ANR	229556	Identifier	ppAllowRoot		229462	1					
ANR	229557	Parameter	uchar * pszType	110:50:3592:3605	229462	1	True				
ANR	229558	ParameterType	uchar *		229462	0					
ANR	229559	Identifier	pszType		229462	1					
ANR	229560	CFGEntryNode	ENTRY		229462		True				
ANR	229561	CFGExitNode	EXIT		229462		True				
ANR	229562	Symbol	strcmp		229462						
ANR	229563	Symbol	* ppAllowRoot		229462						
ANR	229564	Symbol	ppAllowRoot		229462						
ANR	229565	Symbol	pszType		229462						
ANR	229566	Symbol	RS_RET_CODE_ERR		229462						
ANR	229567	Symbol	pAllowedSenders_GSS		229462						
ANR	229568	Symbol	pAllowedSenders_UDP		229462						
ANR	229569	Symbol	pAllowedSenders_TCP		229462						
ANR	229570	Function	reinitAllowRoot	133:0:4176:4673							
ANR	229571	FunctionDef	reinitAllowRoot (uchar * pszType)		229570	0					
ANR	229572	CompoundStatement		135:0:4224:4673	229570	0					
ANR	229573	ExpressionStatement	DEFiRet	136:1:4227:4234	229570	0	True				
ANR	229574	Identifier	DEFiRet		229570	0					
ANR	229575	IfStatement	"if ( ! strcmp ( ( char * ) pszType , ""UDP"" ) )"		229570	1					
ANR	229576	Condition	"! strcmp ( ( char * ) pszType , ""UDP"" )"	138:4:4241:4270	229570	0	True				
ANR	229577	UnaryOperationExpression	"! strcmp ( ( char * ) pszType , ""UDP"" )"		229570	0					
ANR	229578	UnaryOperator	!		229570	0					
ANR	229579	CallExpression	"strcmp ( ( char * ) pszType , ""UDP"" )"		229570	1					
ANR	229580	Callee	strcmp		229570	0					
ANR	229581	Identifier	strcmp		229570	0					
ANR	229582	ArgumentList	( char * ) pszType		229570	1					
ANR	229583	Argument	( char * ) pszType		229570	0					
ANR	229584	CastExpression	( char * ) pszType		229570	0					
ANR	229585	CastTarget	char *		229570	0					
ANR	229586	Identifier	pszType		229570	1					
ANR	229587	Argument	"""UDP"""		229570	1					
ANR	229588	PrimaryExpression	"""UDP"""		229570	0					
ANR	229589	ExpressionStatement	pAllowedSenders_UDP = NULL	139:2:4275:4301	229570	1	True				
ANR	229590	AssignmentExpression	pAllowedSenders_UDP = NULL		229570	0		=			
ANR	229591	Identifier	pAllowedSenders_UDP		229570	0					
ANR	229592	Identifier	NULL		229570	1					
ANR	229593	ElseStatement	else		229570	0					
ANR	229594	IfStatement	"if ( ! strcmp ( ( char * ) pszType , ""TCP"" ) )"		229570	0					
ANR	229595	Condition	"! strcmp ( ( char * ) pszType , ""TCP"" )"	140:9:4312:4341	229570	0	True				
ANR	229596	UnaryOperationExpression	"! strcmp ( ( char * ) pszType , ""TCP"" )"		229570	0					
ANR	229597	UnaryOperator	!		229570	0					
ANR	229598	CallExpression	"strcmp ( ( char * ) pszType , ""TCP"" )"		229570	1					
ANR	229599	Callee	strcmp		229570	0					
ANR	229600	Identifier	strcmp		229570	0					
ANR	229601	ArgumentList	( char * ) pszType		229570	1					
ANR	229602	Argument	( char * ) pszType		229570	0					
ANR	229603	CastExpression	( char * ) pszType		229570	0					
ANR	229604	CastTarget	char *		229570	0					
ANR	229605	Identifier	pszType		229570	1					
ANR	229606	Argument	"""TCP"""		229570	1					
ANR	229607	PrimaryExpression	"""TCP"""		229570	0					
ANR	229608	ExpressionStatement	pAllowedSenders_TCP = NULL	141:2:4346:4372	229570	1	True				
ANR	229609	AssignmentExpression	pAllowedSenders_TCP = NULL		229570	0		=			
ANR	229610	Identifier	pAllowedSenders_TCP		229570	0					
ANR	229611	Identifier	NULL		229570	1					
ANR	229612	ElseStatement	else		229570	0					
ANR	229613	IfStatement	"if ( ! strcmp ( ( char * ) pszType , ""GSS"" ) )"		229570	0					
ANR	229614	Condition	"! strcmp ( ( char * ) pszType , ""GSS"" )"	143:9:4401:4430	229570	0	True				
ANR	229615	UnaryOperationExpression	"! strcmp ( ( char * ) pszType , ""GSS"" )"		229570	0					
ANR	229616	UnaryOperator	!		229570	0					
ANR	229617	CallExpression	"strcmp ( ( char * ) pszType , ""GSS"" )"		229570	1					
ANR	229618	Callee	strcmp		229570	0					
ANR	229619	Identifier	strcmp		229570	0					
ANR	229620	ArgumentList	( char * ) pszType		229570	1					
ANR	229621	Argument	( char * ) pszType		229570	0					
ANR	229622	CastExpression	( char * ) pszType		229570	0					
ANR	229623	CastTarget	char *		229570	0					
ANR	229624	Identifier	pszType		229570	1					
ANR	229625	Argument	"""GSS"""		229570	1					
ANR	229626	PrimaryExpression	"""GSS"""		229570	0					
ANR	229627	ExpressionStatement	pAllowedSenders_GSS = NULL	144:2:4435:4461	229570	1	True				
ANR	229628	AssignmentExpression	pAllowedSenders_GSS = NULL		229570	0		=			
ANR	229629	Identifier	pAllowedSenders_GSS		229570	0					
ANR	229630	Identifier	NULL		229570	1					
ANR	229631	ElseStatement	else		229570	0					
ANR	229632	CompoundStatement		12:6:251:251	229570	0					
ANR	229633	ExpressionStatement	"dbgprintf ( ""program error: invalid allowed sender ID '%s', denying...\\n"" , pszType )"	147:2:4480:4561	229570	0	True				
ANR	229634	CallExpression	"dbgprintf ( ""program error: invalid allowed sender ID '%s', denying...\\n"" , pszType )"		229570	0					
ANR	229635	Callee	dbgprintf		229570	0					
ANR	229636	Identifier	dbgprintf		229570	0					
ANR	229637	ArgumentList	"""program error: invalid allowed sender ID '%s', denying...\\n"""		229570	1					
ANR	229638	Argument	"""program error: invalid allowed sender ID '%s', denying...\\n"""		229570	0					
ANR	229639	PrimaryExpression	"""program error: invalid allowed sender ID '%s', denying...\\n"""		229570	0					
ANR	229640	Argument	pszType		229570	1					
ANR	229641	Identifier	pszType		229570	0					
ANR	229642	ExpressionStatement	ABORT_FINALIZE ( RS_RET_CODE_ERR )	148:2:4565:4596	229570	1	True				
ANR	229643	CallExpression	ABORT_FINALIZE ( RS_RET_CODE_ERR )		229570	0					
ANR	229644	Callee	ABORT_FINALIZE		229570	0					
ANR	229645	Identifier	ABORT_FINALIZE		229570	0					
ANR	229646	ArgumentList	RS_RET_CODE_ERR		229570	1					
ANR	229647	Argument	RS_RET_CODE_ERR		229570	0					
ANR	229648	Identifier	RS_RET_CODE_ERR		229570	0					
ANR	229649	Label	finalize_it :	151:0:4650:4661	229570	2	True				
ANR	229650	Identifier	finalize_it		229570	0					
ANR	229651	ExpressionStatement	RETiRet	152:1:4664:4671	229570	3	True				
ANR	229652	Identifier	RETiRet		229570	0					
ANR	229653	ReturnType	static rsRetVal		229570	1					
ANR	229654	Identifier	reinitAllowRoot		229570	2					
ANR	229655	ParameterList	uchar * pszType		229570	3					
ANR	229656	Parameter	uchar * pszType	134:16:4208:4221	229570	0	True				
ANR	229657	ParameterType	uchar *		229570	0					
ANR	229658	Identifier	pszType		229570	1					
ANR	229659	CFGEntryNode	ENTRY		229570		True				
ANR	229660	CFGExitNode	EXIT		229570		True				
ANR	229661	Symbol	strcmp		229570						
ANR	229662	Symbol	NULL		229570						
ANR	229663	Symbol	pszType		229570						
ANR	229664	Symbol	RS_RET_CODE_ERR		229570						
ANR	229665	Symbol	pAllowedSenders_GSS		229570						
ANR	229666	Symbol	pAllowedSenders_UDP		229570						
ANR	229667	Symbol	pAllowedSenders_TCP		229570						
ANR	229668	Function	AddPermittedPeerWildcard	162:0:4966:6868							
ANR	229669	FunctionDef	"AddPermittedPeerWildcard (permittedPeers_t * pPeer , uchar * pszStr , size_t lenStr)"		229668	0					
ANR	229670	CompoundStatement		164:0:5062:6868	229668	0					
ANR	229671	IdentifierDeclStatement	permittedPeerWildcard_t * pNew = NULL ;	165:1:5065:5101	229668	0	True				
ANR	229672	IdentifierDecl	* pNew = NULL		229668	0					
ANR	229673	IdentifierDeclType	permittedPeerWildcard_t *		229668	0					
ANR	229674	Identifier	pNew		229668	1					
ANR	229675	AssignmentExpression	* pNew = NULL		229668	2		=			
ANR	229676	Identifier	NULL		229668	0					
ANR	229677	Identifier	NULL		229668	1					
ANR	229678	IdentifierDeclStatement	size_t iSrc ;	166:1:5104:5115	229668	1	True				
ANR	229679	IdentifierDecl	iSrc		229668	0					
ANR	229680	IdentifierDeclType	size_t		229668	0					
ANR	229681	Identifier	iSrc		229668	1					
ANR	229682	IdentifierDeclStatement	size_t iDst ;	167:1:5118:5129	229668	2	True				
ANR	229683	IdentifierDecl	iDst		229668	0					
ANR	229684	IdentifierDeclType	size_t		229668	0					
ANR	229685	Identifier	iDst		229668	1					
ANR	229686	ExpressionStatement	DEFiRet	168:1:5132:5139	229668	3	True				
ANR	229687	Identifier	DEFiRet		229668	0					
ANR	229688	ExpressionStatement	assert ( pPeer != NULL )	170:1:5143:5164	229668	4	True				
ANR	229689	CallExpression	assert ( pPeer != NULL )		229668	0					
ANR	229690	Callee	assert		229668	0					
ANR	229691	Identifier	assert		229668	0					
ANR	229692	ArgumentList	pPeer != NULL		229668	1					
ANR	229693	Argument	pPeer != NULL		229668	0					
ANR	229694	EqualityExpression	pPeer != NULL		229668	0		!=			
ANR	229695	Identifier	pPeer		229668	0					
ANR	229696	Identifier	NULL		229668	1					
ANR	229697	ExpressionStatement	assert ( pszStr != NULL )	171:1:5167:5189	229668	5	True				
ANR	229698	CallExpression	assert ( pszStr != NULL )		229668	0					
ANR	229699	Callee	assert		229668	0					
ANR	229700	Identifier	assert		229668	0					
ANR	229701	ArgumentList	pszStr != NULL		229668	1					
ANR	229702	Argument	pszStr != NULL		229668	0					
ANR	229703	EqualityExpression	pszStr != NULL		229668	0		!=			
ANR	229704	Identifier	pszStr		229668	0					
ANR	229705	Identifier	NULL		229668	1					
ANR	229706	ExpressionStatement	"CHKmalloc ( pNew = calloc ( 1 , sizeof ( * pNew ) ) )"	173:1:5193:5235	229668	6	True				
ANR	229707	CallExpression	"CHKmalloc ( pNew = calloc ( 1 , sizeof ( * pNew ) ) )"		229668	0					
ANR	229708	Callee	CHKmalloc		229668	0					
ANR	229709	Identifier	CHKmalloc		229668	0					
ANR	229710	ArgumentList	"pNew = calloc ( 1 , sizeof ( * pNew ) )"		229668	1					
ANR	229711	Argument	"pNew = calloc ( 1 , sizeof ( * pNew ) )"		229668	0					
ANR	229712	AssignmentExpression	"pNew = calloc ( 1 , sizeof ( * pNew ) )"		229668	0		=			
ANR	229713	Identifier	pNew		229668	0					
ANR	229714	CallExpression	"calloc ( 1 , sizeof ( * pNew ) )"		229668	1					
ANR	229715	Callee	calloc		229668	0					
ANR	229716	Identifier	calloc		229668	0					
ANR	229717	ArgumentList	1		229668	1					
ANR	229718	Argument	1		229668	0					
ANR	229719	PrimaryExpression	1		229668	0					
ANR	229720	Argument	sizeof ( * pNew )		229668	1					
ANR	229721	SizeofExpression	sizeof ( * pNew )		229668	0					
ANR	229722	Sizeof	sizeof		229668	0					
ANR	229723	UnaryOperationExpression	* pNew		229668	1					
ANR	229724	UnaryOperator	*		229668	0					
ANR	229725	Identifier	pNew		229668	1					
ANR	229726	IfStatement	if ( lenStr == 0 )		229668	7					
ANR	229727	Condition	lenStr == 0	175:4:5242:5252	229668	0	True				
ANR	229728	EqualityExpression	lenStr == 0		229668	0		==			
ANR	229729	Identifier	lenStr		229668	0					
ANR	229730	PrimaryExpression	0		229668	1					
ANR	229731	CompoundStatement		12:17:192:192	229668	1					
ANR	229732	ExpressionStatement	pNew -> wildcardType = PEER_WILDCARD_EMPTY_COMPONENT	176:2:5303:5353	229668	0	True				
ANR	229733	AssignmentExpression	pNew -> wildcardType = PEER_WILDCARD_EMPTY_COMPONENT		229668	0		=			
ANR	229734	PtrMemberAccess	pNew -> wildcardType		229668	0					
ANR	229735	Identifier	pNew		229668	0					
ANR	229736	Identifier	wildcardType		229668	1					
ANR	229737	Identifier	PEER_WILDCARD_EMPTY_COMPONENT		229668	1					
ANR	229738	ExpressionStatement	FINALIZE	177:2:5357:5365	229668	1	True				
ANR	229739	Identifier	FINALIZE		229668	0					
ANR	229740	ElseStatement	else		229668	0					
ANR	229741	CompoundStatement		15:8:312:312	229668	0					
ANR	229742	ExpressionStatement	CHKmalloc ( pNew -> pszDomainPart = MALLOC ( lenStr + 1 ) )	182:2:5477:5528	229668	0	True				
ANR	229743	CallExpression	CHKmalloc ( pNew -> pszDomainPart = MALLOC ( lenStr + 1 ) )		229668	0					
ANR	229744	Callee	CHKmalloc		229668	0					
ANR	229745	Identifier	CHKmalloc		229668	0					
ANR	229746	ArgumentList	pNew -> pszDomainPart = MALLOC ( lenStr + 1 )		229668	1					
ANR	229747	Argument	pNew -> pszDomainPart = MALLOC ( lenStr + 1 )		229668	0					
ANR	229748	AssignmentExpression	pNew -> pszDomainPart = MALLOC ( lenStr + 1 )		229668	0		=			
ANR	229749	PtrMemberAccess	pNew -> pszDomainPart		229668	0					
ANR	229750	Identifier	pNew		229668	0					
ANR	229751	Identifier	pszDomainPart		229668	1					
ANR	229752	CallExpression	MALLOC ( lenStr + 1 )		229668	1					
ANR	229753	Callee	MALLOC		229668	0					
ANR	229754	Identifier	MALLOC		229668	0					
ANR	229755	ArgumentList	lenStr + 1		229668	1					
ANR	229756	Argument	lenStr + 1		229668	0					
ANR	229757	AdditiveExpression	lenStr + 1		229668	0		+			
ANR	229758	Identifier	lenStr		229668	0					
ANR	229759	PrimaryExpression	1		229668	1					
ANR	229760	IfStatement	if ( pszStr [ 0 ] == '*' )		229668	8					
ANR	229761	Condition	pszStr [ 0 ] == '*'	185:4:5538:5553	229668	0	True				
ANR	229762	EqualityExpression	pszStr [ 0 ] == '*'		229668	0		==			
ANR	229763	ArrayIndexing	pszStr [ 0 ]		229668	0					
ANR	229764	Identifier	pszStr		229668	0					
ANR	229765	PrimaryExpression	0		229668	1					
ANR	229766	PrimaryExpression	'*'		229668	1					
ANR	229767	CompoundStatement		22:22:493:493	229668	1					
ANR	229768	ExpressionStatement	pNew -> wildcardType = PEER_WILDCARD_AT_START	186:2:5560:5603	229668	0	True				
ANR	229769	AssignmentExpression	pNew -> wildcardType = PEER_WILDCARD_AT_START		229668	0		=			
ANR	229770	PtrMemberAccess	pNew -> wildcardType		229668	0					
ANR	229771	Identifier	pNew		229668	0					
ANR	229772	Identifier	wildcardType		229668	1					
ANR	229773	Identifier	PEER_WILDCARD_AT_START		229668	1					
ANR	229774	ExpressionStatement	iSrc = 1	187:2:5607:5615	229668	1	True				
ANR	229775	AssignmentExpression	iSrc = 1		229668	0		=			
ANR	229776	Identifier	iSrc		229668	0					
ANR	229777	PrimaryExpression	1		229668	1					
ANR	229778	ElseStatement	else		229668	0					
ANR	229779	CompoundStatement		25:8:577:577	229668	0					
ANR	229780	ExpressionStatement	iSrc = 0	189:2:5644:5652	229668	0	True				
ANR	229781	AssignmentExpression	iSrc = 0		229668	0		=			
ANR	229782	Identifier	iSrc		229668	0					
ANR	229783	PrimaryExpression	0		229668	1					
ANR	229784	ForStatement	"for ( iDst = 0 ; iSrc < lenStr && pszStr [ iSrc ] != '*' ; ++ iSrc , ++ iDst )"		229668	9					
ANR	229785	ForInit	iDst = 0 ;	192:5:5663:5672	229668	0	True				
ANR	229786	AssignmentExpression	iDst = 0		229668	0		=			
ANR	229787	Identifier	iDst		229668	0					
ANR	229788	PrimaryExpression	0		229668	1					
ANR	229789	Condition	iSrc < lenStr && pszStr [ iSrc ] != '*'	192:16:5674:5709	229668	1	True				
ANR	229790	AndExpression	iSrc < lenStr && pszStr [ iSrc ] != '*'		229668	0		&&			
ANR	229791	RelationalExpression	iSrc < lenStr		229668	0		<			
ANR	229792	Identifier	iSrc		229668	0					
ANR	229793	Identifier	lenStr		229668	1					
ANR	229794	EqualityExpression	pszStr [ iSrc ] != '*'		229668	1		!=			
ANR	229795	ArrayIndexing	pszStr [ iSrc ]		229668	0					
ANR	229796	Identifier	pszStr		229668	0					
ANR	229797	Identifier	iSrc		229668	1					
ANR	229798	PrimaryExpression	'*'		229668	1					
ANR	229799	Expression	"++ iSrc , ++ iDst"	192:55:5713:5726	229668	2	True				
ANR	229800	UnaryExpression	++ iSrc		229668	0					
ANR	229801	IncDec	++		229668	0					
ANR	229802	Identifier	iSrc		229668	1					
ANR	229803	UnaryExpression	++ iDst		229668	1					
ANR	229804	IncDec	++		229668	0					
ANR	229805	Identifier	iDst		229668	1					
ANR	229806	CompoundStatement		29:72:667:667	229668	3					
ANR	229807	ExpressionStatement	pNew -> pszDomainPart [ iDst ] = pszStr [ iSrc ]	193:2:5734:5774	229668	0	True				
ANR	229808	AssignmentExpression	pNew -> pszDomainPart [ iDst ] = pszStr [ iSrc ]		229668	0		=			
ANR	229809	ArrayIndexing	pNew -> pszDomainPart [ iDst ]		229668	0					
ANR	229810	PtrMemberAccess	pNew -> pszDomainPart		229668	0					
ANR	229811	Identifier	pNew		229668	0					
ANR	229812	Identifier	pszDomainPart		229668	1					
ANR	229813	Identifier	iDst		229668	1					
ANR	229814	ArrayIndexing	pszStr [ iSrc ]		229668	1					
ANR	229815	Identifier	pszStr		229668	0					
ANR	229816	Identifier	iSrc		229668	1					
ANR	229817	IfStatement	if ( iSrc < lenStr )		229668	10					
ANR	229818	Condition	iSrc < lenStr	196:4:5784:5796	229668	0	True				
ANR	229819	RelationalExpression	iSrc < lenStr		229668	0		<			
ANR	229820	Identifier	iSrc		229668	0					
ANR	229821	Identifier	lenStr		229668	1					
ANR	229822	CompoundStatement		33:19:736:736	229668	1					
ANR	229823	IfStatement	if ( iSrc + 1 == lenStr && pszStr [ iSrc ] == '*' )		229668	0					
ANR	229824	Condition	iSrc + 1 == lenStr && pszStr [ iSrc ] == '*'	197:5:5806:5846	229668	0	True				
ANR	229825	AndExpression	iSrc + 1 == lenStr && pszStr [ iSrc ] == '*'		229668	0		&&			
ANR	229826	EqualityExpression	iSrc + 1 == lenStr		229668	0		==			
ANR	229827	AdditiveExpression	iSrc + 1		229668	0		+			
ANR	229828	Identifier	iSrc		229668	0					
ANR	229829	PrimaryExpression	1		229668	1					
ANR	229830	Identifier	lenStr		229668	1					
ANR	229831	EqualityExpression	pszStr [ iSrc ] == '*'		229668	1		==			
ANR	229832	ArrayIndexing	pszStr [ iSrc ]		229668	0					
ANR	229833	Identifier	pszStr		229668	0					
ANR	229834	Identifier	iSrc		229668	1					
ANR	229835	PrimaryExpression	'*'		229668	1					
ANR	229836	CompoundStatement		34:48:786:786	229668	1					
ANR	229837	IfStatement	if ( pNew -> wildcardType == PEER_WILDCARD_AT_START )		229668	0					
ANR	229838	Condition	pNew -> wildcardType == PEER_WILDCARD_AT_START	198:6:5857:5900	229668	0	True				
ANR	229839	EqualityExpression	pNew -> wildcardType == PEER_WILDCARD_AT_START		229668	0		==			
ANR	229840	PtrMemberAccess	pNew -> wildcardType		229668	0					
ANR	229841	Identifier	pNew		229668	0					
ANR	229842	Identifier	wildcardType		229668	1					
ANR	229843	Identifier	PEER_WILDCARD_AT_START		229668	1					
ANR	229844	CompoundStatement		35:52:840:840	229668	1					
ANR	229845	ExpressionStatement	ABORT_FINALIZE ( RS_RET_INVALID_WILDCARD )	199:4:5909:5948	229668	0	True				
ANR	229846	CallExpression	ABORT_FINALIZE ( RS_RET_INVALID_WILDCARD )		229668	0					
ANR	229847	Callee	ABORT_FINALIZE		229668	0					
ANR	229848	Identifier	ABORT_FINALIZE		229668	0					
ANR	229849	ArgumentList	RS_RET_INVALID_WILDCARD		229668	1					
ANR	229850	Argument	RS_RET_INVALID_WILDCARD		229668	0					
ANR	229851	Identifier	RS_RET_INVALID_WILDCARD		229668	0					
ANR	229852	ElseStatement	else		229668	0					
ANR	229853	CompoundStatement		37:10:897:897	229668	0					
ANR	229854	ExpressionStatement	pNew -> wildcardType = PEER_WILDCARD_AT_END	201:4:5966:6007	229668	0	True				
ANR	229855	AssignmentExpression	pNew -> wildcardType = PEER_WILDCARD_AT_END		229668	0		=			
ANR	229856	PtrMemberAccess	pNew -> wildcardType		229668	0					
ANR	229857	Identifier	pNew		229668	0					
ANR	229858	Identifier	wildcardType		229668	1					
ANR	229859	Identifier	PEER_WILDCARD_AT_END		229668	1					
ANR	229860	ElseStatement	else		229668	0					
ANR	229861	CompoundStatement		40:9:960:960	229668	0					
ANR	229862	ExpressionStatement	ABORT_FINALIZE ( RS_RET_INVALID_WILDCARD )	205:3:6098:6137	229668	0	True				
ANR	229863	CallExpression	ABORT_FINALIZE ( RS_RET_INVALID_WILDCARD )		229668	0					
ANR	229864	Callee	ABORT_FINALIZE		229668	0					
ANR	229865	Identifier	ABORT_FINALIZE		229668	0					
ANR	229866	ArgumentList	RS_RET_INVALID_WILDCARD		229668	1					
ANR	229867	Argument	RS_RET_INVALID_WILDCARD		229668	0					
ANR	229868	Identifier	RS_RET_INVALID_WILDCARD		229668	0					
ANR	229869	IfStatement	if ( lenStr == 1 && pNew -> wildcardType == PEER_WILDCARD_AT_START )		229668	11					
ANR	229870	Condition	lenStr == 1 && pNew -> wildcardType == PEER_WILDCARD_AT_START	209:4:6151:6209	229668	0	True				
ANR	229871	AndExpression	lenStr == 1 && pNew -> wildcardType == PEER_WILDCARD_AT_START		229668	0		&&			
ANR	229872	EqualityExpression	lenStr == 1		229668	0		==			
ANR	229873	Identifier	lenStr		229668	0					
ANR	229874	PrimaryExpression	1		229668	1					
ANR	229875	EqualityExpression	pNew -> wildcardType == PEER_WILDCARD_AT_START		229668	1		==			
ANR	229876	PtrMemberAccess	pNew -> wildcardType		229668	0					
ANR	229877	Identifier	pNew		229668	0					
ANR	229878	Identifier	wildcardType		229668	1					
ANR	229879	Identifier	PEER_WILDCARD_AT_START		229668	1					
ANR	229880	CompoundStatement		46:65:1149:1149	229668	1					
ANR	229881	ExpressionStatement	pNew -> wildcardType = PEER_WILDCARD_MATCH_ALL	210:2:6216:6260	229668	0	True				
ANR	229882	AssignmentExpression	pNew -> wildcardType = PEER_WILDCARD_MATCH_ALL		229668	0		=			
ANR	229883	PtrMemberAccess	pNew -> wildcardType		229668	0					
ANR	229884	Identifier	pNew		229668	0					
ANR	229885	Identifier	wildcardType		229668	1					
ANR	229886	Identifier	PEER_WILDCARD_MATCH_ALL		229668	1					
ANR	229887	ExpressionStatement	pNew -> pszDomainPart [ iDst ] = '\\0'	216:1:6392:6424	229668	12	True				
ANR	229888	AssignmentExpression	pNew -> pszDomainPart [ iDst ] = '\\0'		229668	0		=			
ANR	229889	ArrayIndexing	pNew -> pszDomainPart [ iDst ]		229668	0					
ANR	229890	PtrMemberAccess	pNew -> pszDomainPart		229668	0					
ANR	229891	Identifier	pNew		229668	0					
ANR	229892	Identifier	pszDomainPart		229668	1					
ANR	229893	Identifier	iDst		229668	1					
ANR	229894	PrimaryExpression	'\\0'		229668	1					
ANR	229895	ExpressionStatement	pNew -> lenDomainPart = strlen ( ( char * ) pNew -> pszDomainPart )	217:1:6427:6483	229668	13	True				
ANR	229896	AssignmentExpression	pNew -> lenDomainPart = strlen ( ( char * ) pNew -> pszDomainPart )		229668	0		=			
ANR	229897	PtrMemberAccess	pNew -> lenDomainPart		229668	0					
ANR	229898	Identifier	pNew		229668	0					
ANR	229899	Identifier	lenDomainPart		229668	1					
ANR	229900	CallExpression	strlen ( ( char * ) pNew -> pszDomainPart )		229668	1					
ANR	229901	Callee	strlen		229668	0					
ANR	229902	Identifier	strlen		229668	0					
ANR	229903	ArgumentList	( char * ) pNew -> pszDomainPart		229668	1					
ANR	229904	Argument	( char * ) pNew -> pszDomainPart		229668	0					
ANR	229905	CastExpression	( char * ) pNew -> pszDomainPart		229668	0					
ANR	229906	CastTarget	char *		229668	0					
ANR	229907	PtrMemberAccess	pNew -> pszDomainPart		229668	1					
ANR	229908	Identifier	pNew		229668	0					
ANR	229909	Identifier	pszDomainPart		229668	1					
ANR	229910	Label	finalize_it :	219:0:6486:6497	229668	14	True				
ANR	229911	Identifier	finalize_it		229668	0					
ANR	229912	IfStatement	if ( iRet != RS_RET_OK )		229668	15					
ANR	229913	Condition	iRet != RS_RET_OK	220:4:6503:6519	229668	0	True				
ANR	229914	EqualityExpression	iRet != RS_RET_OK		229668	0		!=			
ANR	229915	Identifier	iRet		229668	0					
ANR	229916	Identifier	RS_RET_OK		229668	1					
ANR	229917	CompoundStatement		57:23:1459:1459	229668	1					
ANR	229918	IfStatement	if ( pNew != NULL )		229668	0					
ANR	229919	Condition	pNew != NULL	221:5:6529:6540	229668	0	True				
ANR	229920	EqualityExpression	pNew != NULL		229668	0		!=			
ANR	229921	Identifier	pNew		229668	0					
ANR	229922	Identifier	NULL		229668	1					
ANR	229923	CompoundStatement		58:19:1480:1480	229668	1					
ANR	229924	IfStatement	if ( pNew -> pszDomainPart != NULL )		229668	0					
ANR	229925	Condition	pNew -> pszDomainPart != NULL	222:6:6551:6577	229668	0	True				
ANR	229926	EqualityExpression	pNew -> pszDomainPart != NULL		229668	0		!=			
ANR	229927	PtrMemberAccess	pNew -> pszDomainPart		229668	0					
ANR	229928	Identifier	pNew		229668	0					
ANR	229929	Identifier	pszDomainPart		229668	1					
ANR	229930	Identifier	NULL		229668	1					
ANR	229931	ExpressionStatement	free ( pNew -> pszDomainPart )	223:4:6584:6609	229668	1	True				
ANR	229932	CallExpression	free ( pNew -> pszDomainPart )		229668	0					
ANR	229933	Callee	free		229668	0					
ANR	229934	Identifier	free		229668	0					
ANR	229935	ArgumentList	pNew -> pszDomainPart		229668	1					
ANR	229936	Argument	pNew -> pszDomainPart		229668	0					
ANR	229937	PtrMemberAccess	pNew -> pszDomainPart		229668	0					
ANR	229938	Identifier	pNew		229668	0					
ANR	229939	Identifier	pszDomainPart		229668	1					
ANR	229940	ExpressionStatement	free ( pNew )	224:3:6614:6624	229668	1	True				
ANR	229941	CallExpression	free ( pNew )		229668	0					
ANR	229942	Callee	free		229668	0					
ANR	229943	Identifier	free		229668	0					
ANR	229944	ArgumentList	pNew		229668	1					
ANR	229945	Argument	pNew		229668	0					
ANR	229946	Identifier	pNew		229668	0					
ANR	229947	ElseStatement	else		229668	0					
ANR	229948	CompoundStatement		63:8:1575:1575	229668	0					
ANR	229949	IfStatement	if ( pPeer -> pWildcardRoot == NULL )		229668	0					
ANR	229950	Condition	pPeer -> pWildcardRoot == NULL	228:5:6673:6700	229668	0	True				
ANR	229951	EqualityExpression	pPeer -> pWildcardRoot == NULL		229668	0		==			
ANR	229952	PtrMemberAccess	pPeer -> pWildcardRoot		229668	0					
ANR	229953	Identifier	pPeer		229668	0					
ANR	229954	Identifier	pWildcardRoot		229668	1					
ANR	229955	Identifier	NULL		229668	1					
ANR	229956	CompoundStatement		65:35:1640:1640	229668	1					
ANR	229957	ExpressionStatement	pPeer -> pWildcardRoot = pNew	229:3:6708:6735	229668	0	True				
ANR	229958	AssignmentExpression	pPeer -> pWildcardRoot = pNew		229668	0		=			
ANR	229959	PtrMemberAccess	pPeer -> pWildcardRoot		229668	0					
ANR	229960	Identifier	pPeer		229668	0					
ANR	229961	Identifier	pWildcardRoot		229668	1					
ANR	229962	Identifier	pNew		229668	1					
ANR	229963	ExpressionStatement	pPeer -> pWildcardLast = pNew	230:3:6740:6767	229668	1	True				
ANR	229964	AssignmentExpression	pPeer -> pWildcardLast = pNew		229668	0		=			
ANR	229965	PtrMemberAccess	pPeer -> pWildcardLast		229668	0					
ANR	229966	Identifier	pPeer		229668	0					
ANR	229967	Identifier	pWildcardLast		229668	1					
ANR	229968	Identifier	pNew		229668	1					
ANR	229969	ElseStatement	else		229668	0					
ANR	229970	CompoundStatement		68:9:1715:1715	229668	0					
ANR	229971	ExpressionStatement	pPeer -> pWildcardLast -> pNext = pNew	232:3:6783:6817	229668	0	True				
ANR	229972	AssignmentExpression	pPeer -> pWildcardLast -> pNext = pNew		229668	0		=			
ANR	229973	PtrMemberAccess	pPeer -> pWildcardLast -> pNext		229668	0					
ANR	229974	PtrMemberAccess	pPeer -> pWildcardLast		229668	0					
ANR	229975	Identifier	pPeer		229668	0					
ANR	229976	Identifier	pWildcardLast		229668	1					
ANR	229977	Identifier	pNext		229668	1					
ANR	229978	Identifier	pNew		229668	1					
ANR	229979	ExpressionStatement	pPeer -> pWildcardLast = pNew	234:2:6825:6852	229668	1	True				
ANR	229980	AssignmentExpression	pPeer -> pWildcardLast = pNew		229668	0		=			
ANR	229981	PtrMemberAccess	pPeer -> pWildcardLast		229668	0					
ANR	229982	Identifier	pPeer		229668	0					
ANR	229983	Identifier	pWildcardLast		229668	1					
ANR	229984	Identifier	pNew		229668	1					
ANR	229985	ExpressionStatement	RETiRet	237:1:6859:6866	229668	16	True				
ANR	229986	Identifier	RETiRet		229668	0					
ANR	229987	ReturnType	static rsRetVal		229668	1					
ANR	229988	Identifier	AddPermittedPeerWildcard		229668	2					
ANR	229989	ParameterList	"permittedPeers_t * pPeer , uchar * pszStr , size_t lenStr"		229668	3					
ANR	229990	Parameter	permittedPeers_t * pPeer	163:25:5007:5029	229668	0	True				
ANR	229991	ParameterType	permittedPeers_t *		229668	0					
ANR	229992	Identifier	pPeer		229668	1					
ANR	229993	Parameter	uchar * pszStr	163:50:5032:5044	229668	1	True				
ANR	229994	ParameterType	uchar *		229668	0					
ANR	229995	Identifier	pszStr		229668	1					
ANR	229996	Parameter	size_t lenStr	163:65:5047:5059	229668	2	True				
ANR	229997	ParameterType	size_t		229668	0					
ANR	229998	Identifier	lenStr		229668	1					
ANR	229999	CFGEntryNode	ENTRY		229668		True				
ANR	230000	CFGExitNode	EXIT		229668		True				
ANR	230001	Symbol	pPeer -> pWildcardLast -> pNext		229668						
ANR	230002	Symbol	RS_RET_INVALID_WILDCARD		229668						
ANR	230003	Symbol	pNew -> wildcardType		229668						
ANR	230004	Symbol	iRet		229668						
ANR	230005	Symbol	iSrc		229668						
ANR	230006	Symbol	PEER_WILDCARD_AT_START		229668						
ANR	230007	Symbol	calloc		229668						
ANR	230008	Symbol	* pPeer		229668						
ANR	230009	Symbol	* iDst		229668						
ANR	230010	Symbol	lenStr		229668						
ANR	230011	Symbol	strlen		229668						
ANR	230012	Symbol	PEER_WILDCARD_MATCH_ALL		229668						
ANR	230013	Symbol	* * pPeer		229668						
ANR	230014	Symbol	pPeer -> pWildcardLast		229668						
ANR	230015	Symbol	* pNew -> pszDomainPart		229668						
ANR	230016	Symbol	pNew -> lenDomainPart		229668						
ANR	230017	Symbol	pPeer -> pWildcardRoot		229668						
ANR	230018	Symbol	pPeer		229668						
ANR	230019	Symbol	NULL		229668						
ANR	230020	Symbol	pNew		229668						
ANR	230021	Symbol	* pNew		229668						
ANR	230022	Symbol	RS_RET_OK		229668						
ANR	230023	Symbol	pNew -> pszDomainPart		229668						
ANR	230024	Symbol	* * pNew		229668						
ANR	230025	Symbol	* pPeer -> pWildcardLast		229668						
ANR	230026	Symbol	PEER_WILDCARD_EMPTY_COMPONENT		229668						
ANR	230027	Symbol	iDst		229668						
ANR	230028	Symbol	* iSrc		229668						
ANR	230029	Symbol	PEER_WILDCARD_AT_END		229668						
ANR	230030	Symbol	MALLOC		229668						
ANR	230031	Symbol	* pszStr		229668						
ANR	230032	Symbol	pszStr		229668						
ANR	230033	Function	DestructPermittedPeerWildcards	242:0:6945:7343							
ANR	230034	FunctionDef	DestructPermittedPeerWildcards (permittedPeers_t * pPeer)		230033	0					
ANR	230035	CompoundStatement		244:0:7017:7343	230033	0					
ANR	230036	IdentifierDeclStatement	permittedPeerWildcard_t * pCurr ;	245:1:7020:7050	230033	0	True				
ANR	230037	IdentifierDecl	* pCurr		230033	0					
ANR	230038	IdentifierDeclType	permittedPeerWildcard_t *		230033	0					
ANR	230039	Identifier	pCurr		230033	1					
ANR	230040	IdentifierDeclStatement	permittedPeerWildcard_t * pDel ;	246:1:7053:7082	230033	1	True				
ANR	230041	IdentifierDecl	* pDel		230033	0					
ANR	230042	IdentifierDeclType	permittedPeerWildcard_t *		230033	0					
ANR	230043	Identifier	pDel		230033	1					
ANR	230044	ExpressionStatement	DEFiRet	247:1:7085:7092	230033	2	True				
ANR	230045	Identifier	DEFiRet		230033	0					
ANR	230046	ExpressionStatement	assert ( pPeer != NULL )	249:1:7096:7117	230033	3	True				
ANR	230047	CallExpression	assert ( pPeer != NULL )		230033	0					
ANR	230048	Callee	assert		230033	0					
ANR	230049	Identifier	assert		230033	0					
ANR	230050	ArgumentList	pPeer != NULL		230033	1					
ANR	230051	Argument	pPeer != NULL		230033	0					
ANR	230052	EqualityExpression	pPeer != NULL		230033	0		!=			
ANR	230053	Identifier	pPeer		230033	0					
ANR	230054	Identifier	NULL		230033	1					
ANR	230055	ForStatement	for ( pCurr = pPeer -> pWildcardRoot ; pCurr != NULL ; )		230033	4					
ANR	230056	ForInit	pCurr = pPeer -> pWildcardRoot ;	251:5:7125:7154	230033	0	True				
ANR	230057	AssignmentExpression	pCurr = pPeer -> pWildcardRoot		230033	0		=			
ANR	230058	Identifier	pCurr		230033	0					
ANR	230059	PtrMemberAccess	pPeer -> pWildcardRoot		230033	1					
ANR	230060	Identifier	pPeer		230033	0					
ANR	230061	Identifier	pWildcardRoot		230033	1					
ANR	230062	Condition	pCurr != NULL	251:36:7156:7168	230033	1	True				
ANR	230063	EqualityExpression	pCurr != NULL		230033	0		!=			
ANR	230064	Identifier	pCurr		230033	0					
ANR	230065	Identifier	NULL		230033	1					
ANR	230066	CompoundStatement		8:63:165:165	230033	2					
ANR	230067	ExpressionStatement	pDel = pCurr	252:2:7187:7199	230033	0	True				
ANR	230068	AssignmentExpression	pDel = pCurr		230033	0		=			
ANR	230069	Identifier	pDel		230033	0					
ANR	230070	Identifier	pCurr		230033	1					
ANR	230071	ExpressionStatement	pCurr = pCurr -> pNext	253:2:7203:7223	230033	1	True				
ANR	230072	AssignmentExpression	pCurr = pCurr -> pNext		230033	0		=			
ANR	230073	Identifier	pCurr		230033	0					
ANR	230074	PtrMemberAccess	pCurr -> pNext		230033	1					
ANR	230075	Identifier	pCurr		230033	0					
ANR	230076	Identifier	pNext		230033	1					
ANR	230077	ExpressionStatement	free ( pDel -> pszDomainPart )	254:2:7227:7252	230033	2	True				
ANR	230078	CallExpression	free ( pDel -> pszDomainPart )		230033	0					
ANR	230079	Callee	free		230033	0					
ANR	230080	Identifier	free		230033	0					
ANR	230081	ArgumentList	pDel -> pszDomainPart		230033	1					
ANR	230082	Argument	pDel -> pszDomainPart		230033	0					
ANR	230083	PtrMemberAccess	pDel -> pszDomainPart		230033	0					
ANR	230084	Identifier	pDel		230033	0					
ANR	230085	Identifier	pszDomainPart		230033	1					
ANR	230086	ExpressionStatement	free ( pDel )	255:2:7256:7266	230033	3	True				
ANR	230087	CallExpression	free ( pDel )		230033	0					
ANR	230088	Callee	free		230033	0					
ANR	230089	Identifier	free		230033	0					
ANR	230090	ArgumentList	pDel		230033	1					
ANR	230091	Argument	pDel		230033	0					
ANR	230092	Identifier	pDel		230033	0					
ANR	230093	ExpressionStatement	pPeer -> pWildcardRoot = NULL	258:1:7273:7300	230033	5	True				
ANR	230094	AssignmentExpression	pPeer -> pWildcardRoot = NULL		230033	0		=			
ANR	230095	PtrMemberAccess	pPeer -> pWildcardRoot		230033	0					
ANR	230096	Identifier	pPeer		230033	0					
ANR	230097	Identifier	pWildcardRoot		230033	1					
ANR	230098	Identifier	NULL		230033	1					
ANR	230099	ExpressionStatement	pPeer -> pWildcardLast = NULL	259:1:7303:7330	230033	6	True				
ANR	230100	AssignmentExpression	pPeer -> pWildcardLast = NULL		230033	0		=			
ANR	230101	PtrMemberAccess	pPeer -> pWildcardLast		230033	0					
ANR	230102	Identifier	pPeer		230033	0					
ANR	230103	Identifier	pWildcardLast		230033	1					
ANR	230104	Identifier	NULL		230033	1					
ANR	230105	ExpressionStatement	RETiRet	261:1:7334:7341	230033	7	True				
ANR	230106	Identifier	RETiRet		230033	0					
ANR	230107	ReturnType	static rsRetVal		230033	1					
ANR	230108	Identifier	DestructPermittedPeerWildcards		230033	2					
ANR	230109	ParameterList	permittedPeers_t * pPeer		230033	3					
ANR	230110	Parameter	permittedPeers_t * pPeer	243:31:6992:7014	230033	0	True				
ANR	230111	ParameterType	permittedPeers_t *		230033	0					
ANR	230112	Identifier	pPeer		230033	1					
ANR	230113	CFGEntryNode	ENTRY		230033		True				
ANR	230114	CFGExitNode	EXIT		230033		True				
ANR	230115	Symbol	pPeer -> pWildcardRoot		230033						
ANR	230116	Symbol	pPeer		230033						
ANR	230117	Symbol	NULL		230033						
ANR	230118	Symbol	* pDel		230033						
ANR	230119	Symbol	pDel -> pszDomainPart		230033						
ANR	230120	Symbol	* pCurr		230033						
ANR	230121	Symbol	pPeer -> pWildcardLast		230033						
ANR	230122	Symbol	pCurr		230033						
ANR	230123	Symbol	pDel		230033						
ANR	230124	Symbol	* pPeer		230033						
ANR	230125	Symbol	pCurr -> pNext		230033						
ANR	230126	Function	AddPermittedPeer	270:0:7611:8127							
ANR	230127	FunctionDef	"AddPermittedPeer (permittedPeers_t * * ppRootPeer , uchar * pszID)"		230126	0					
ANR	230128	CompoundStatement		272:0:7689:8127	230126	0					
ANR	230129	IdentifierDeclStatement	permittedPeers_t * pNew = NULL ;	273:1:7692:7721	230126	0	True				
ANR	230130	IdentifierDecl	* pNew = NULL		230126	0					
ANR	230131	IdentifierDeclType	permittedPeers_t *		230126	0					
ANR	230132	Identifier	pNew		230126	1					
ANR	230133	AssignmentExpression	* pNew = NULL		230126	2		=			
ANR	230134	Identifier	NULL		230126	0					
ANR	230135	Identifier	NULL		230126	1					
ANR	230136	ExpressionStatement	DEFiRet	274:1:7724:7731	230126	1	True				
ANR	230137	Identifier	DEFiRet		230126	0					
ANR	230138	ExpressionStatement	assert ( ppRootPeer != NULL )	276:1:7735:7761	230126	2	True				
ANR	230139	CallExpression	assert ( ppRootPeer != NULL )		230126	0					
ANR	230140	Callee	assert		230126	0					
ANR	230141	Identifier	assert		230126	0					
ANR	230142	ArgumentList	ppRootPeer != NULL		230126	1					
ANR	230143	Argument	ppRootPeer != NULL		230126	0					
ANR	230144	EqualityExpression	ppRootPeer != NULL		230126	0		!=			
ANR	230145	Identifier	ppRootPeer		230126	0					
ANR	230146	Identifier	NULL		230126	1					
ANR	230147	ExpressionStatement	assert ( pszID != NULL )	277:1:7764:7785	230126	3	True				
ANR	230148	CallExpression	assert ( pszID != NULL )		230126	0					
ANR	230149	Callee	assert		230126	0					
ANR	230150	Identifier	assert		230126	0					
ANR	230151	ArgumentList	pszID != NULL		230126	1					
ANR	230152	Argument	pszID != NULL		230126	0					
ANR	230153	EqualityExpression	pszID != NULL		230126	0		!=			
ANR	230154	Identifier	pszID		230126	0					
ANR	230155	Identifier	NULL		230126	1					
ANR	230156	ExpressionStatement	"CHKmalloc ( pNew = calloc ( 1 , sizeof ( permittedPeers_t ) ) )"	279:1:7789:7842	230126	4	True				
ANR	230157	CallExpression	"CHKmalloc ( pNew = calloc ( 1 , sizeof ( permittedPeers_t ) ) )"		230126	0					
ANR	230158	Callee	CHKmalloc		230126	0					
ANR	230159	Identifier	CHKmalloc		230126	0					
ANR	230160	ArgumentList	"pNew = calloc ( 1 , sizeof ( permittedPeers_t ) )"		230126	1					
ANR	230161	Argument	"pNew = calloc ( 1 , sizeof ( permittedPeers_t ) )"		230126	0					
ANR	230162	AssignmentExpression	"pNew = calloc ( 1 , sizeof ( permittedPeers_t ) )"		230126	0		=			
ANR	230163	Identifier	pNew		230126	0					
ANR	230164	CallExpression	"calloc ( 1 , sizeof ( permittedPeers_t ) )"		230126	1					
ANR	230165	Callee	calloc		230126	0					
ANR	230166	Identifier	calloc		230126	0					
ANR	230167	ArgumentList	1		230126	1					
ANR	230168	Argument	1		230126	0					
ANR	230169	PrimaryExpression	1		230126	0					
ANR	230170	Argument	sizeof ( permittedPeers_t )		230126	1					
ANR	230171	SizeofExpression	sizeof ( permittedPeers_t )		230126	0					
ANR	230172	Sizeof	sizeof		230126	0					
ANR	230173	SizeofOperand	permittedPeers_t		230126	1					
ANR	230174	ExpressionStatement	CHKmalloc ( pNew -> pszID = ( uchar * ) strdup ( ( char * ) pszID ) )	280:1:7903:7956	230126	5	True				
ANR	230175	CallExpression	CHKmalloc ( pNew -> pszID = ( uchar * ) strdup ( ( char * ) pszID ) )		230126	0					
ANR	230176	Callee	CHKmalloc		230126	0					
ANR	230177	Identifier	CHKmalloc		230126	0					
ANR	230178	ArgumentList	pNew -> pszID = ( uchar * ) strdup ( ( char * ) pszID )		230126	1					
ANR	230179	Argument	pNew -> pszID = ( uchar * ) strdup ( ( char * ) pszID )		230126	0					
ANR	230180	AssignmentExpression	pNew -> pszID = ( uchar * ) strdup ( ( char * ) pszID )		230126	0		=			
ANR	230181	PtrMemberAccess	pNew -> pszID		230126	0					
ANR	230182	Identifier	pNew		230126	0					
ANR	230183	Identifier	pszID		230126	1					
ANR	230184	CastExpression	( uchar * ) strdup ( ( char * ) pszID )		230126	1					
ANR	230185	CastTarget	uchar *		230126	0					
ANR	230186	CallExpression	strdup ( ( char * ) pszID )		230126	1					
ANR	230187	Callee	strdup		230126	0					
ANR	230188	Identifier	strdup		230126	0					
ANR	230189	ArgumentList	( char * ) pszID		230126	1					
ANR	230190	Argument	( char * ) pszID		230126	0					
ANR	230191	CastExpression	( char * ) pszID		230126	0					
ANR	230192	CastTarget	char *		230126	0					
ANR	230193	Identifier	pszID		230126	1					
ANR	230194	IfStatement	if ( * ppRootPeer != NULL )		230126	6					
ANR	230195	Condition	* ppRootPeer != NULL	282:4:7963:7981	230126	0	True				
ANR	230196	EqualityExpression	* ppRootPeer != NULL		230126	0		!=			
ANR	230197	UnaryOperationExpression	* ppRootPeer		230126	0					
ANR	230198	UnaryOperator	*		230126	0					
ANR	230199	Identifier	ppRootPeer		230126	1					
ANR	230200	Identifier	NULL		230126	1					
ANR	230201	CompoundStatement		11:25:294:294	230126	1					
ANR	230202	ExpressionStatement	pNew -> pNext = * ppRootPeer	283:2:7988:8013	230126	0	True				
ANR	230203	AssignmentExpression	pNew -> pNext = * ppRootPeer		230126	0		=			
ANR	230204	PtrMemberAccess	pNew -> pNext		230126	0					
ANR	230205	Identifier	pNew		230126	0					
ANR	230206	Identifier	pNext		230126	1					
ANR	230207	UnaryOperationExpression	* ppRootPeer		230126	1					
ANR	230208	UnaryOperator	*		230126	0					
ANR	230209	Identifier	ppRootPeer		230126	1					
ANR	230210	ExpressionStatement	* ppRootPeer = pNew	285:1:8019:8037	230126	7	True				
ANR	230211	AssignmentExpression	* ppRootPeer = pNew		230126	0		=			
ANR	230212	UnaryOperationExpression	* ppRootPeer		230126	0					
ANR	230213	UnaryOperator	*		230126	0					
ANR	230214	Identifier	ppRootPeer		230126	1					
ANR	230215	Identifier	pNew		230126	1					
ANR	230216	Label	finalize_it :	287:0:8042:8053	230126	8	True				
ANR	230217	Identifier	finalize_it		230126	0					
ANR	230218	IfStatement	if ( iRet != RS_RET_OK )		230126	9					
ANR	230219	Condition	iRet != RS_RET_OK	288:4:8059:8075	230126	0	True				
ANR	230220	EqualityExpression	iRet != RS_RET_OK		230126	0		!=			
ANR	230221	Identifier	iRet		230126	0					
ANR	230222	Identifier	RS_RET_OK		230126	1					
ANR	230223	CompoundStatement		17:23:388:388	230126	1					
ANR	230224	IfStatement	if ( pNew != NULL )		230126	0					
ANR	230225	Condition	pNew != NULL	289:5:8085:8096	230126	0	True				
ANR	230226	EqualityExpression	pNew != NULL		230126	0		!=			
ANR	230227	Identifier	pNew		230126	0					
ANR	230228	Identifier	NULL		230126	1					
ANR	230229	ExpressionStatement	free ( pNew )	290:3:8102:8112	230126	1	True				
ANR	230230	CallExpression	free ( pNew )		230126	0					
ANR	230231	Callee	free		230126	0					
ANR	230232	Identifier	free		230126	0					
ANR	230233	ArgumentList	pNew		230126	1					
ANR	230234	Argument	pNew		230126	0					
ANR	230235	Identifier	pNew		230126	0					
ANR	230236	ExpressionStatement	RETiRet	292:1:8118:8125	230126	10	True				
ANR	230237	Identifier	RETiRet		230126	0					
ANR	230238	ReturnType	static rsRetVal		230126	1					
ANR	230239	Identifier	AddPermittedPeer		230126	2					
ANR	230240	ParameterList	"permittedPeers_t * * ppRootPeer , uchar * pszID"		230126	3					
ANR	230241	Parameter	permittedPeers_t * * ppRootPeer	271:17:7644:7672	230126	0	True				
ANR	230242	ParameterType	permittedPeers_t * *		230126	0					
ANR	230243	Identifier	ppRootPeer		230126	1					
ANR	230244	Parameter	uchar * pszID	271:48:7675:7686	230126	1	True				
ANR	230245	ParameterType	uchar *		230126	0					
ANR	230246	Identifier	pszID		230126	1					
ANR	230247	CFGEntryNode	ENTRY		230126		True				
ANR	230248	CFGExitNode	EXIT		230126		True				
ANR	230249	Symbol	pszID		230126						
ANR	230250	Symbol	pNew -> pszID		230126						
ANR	230251	Symbol	NULL		230126						
ANR	230252	Symbol	pNew		230126						
ANR	230253	Symbol	* pNew		230126						
ANR	230254	Symbol	pNew -> pNext		230126						
ANR	230255	Symbol	RS_RET_OK		230126						
ANR	230256	Symbol	iRet		230126						
ANR	230257	Symbol	calloc		230126						
ANR	230258	Symbol	strdup		230126						
ANR	230259	Symbol	ppRootPeer		230126						
ANR	230260	Symbol	* ppRootPeer		230126						
ANR	230261	Function	DestructPermittedPeers	297:0:8194:8565							
ANR	230262	FunctionDef	DestructPermittedPeers (permittedPeers_t * * ppRootPeer)		230261	0					
ANR	230263	CompoundStatement		299:0:8264:8565	230261	0					
ANR	230264	IdentifierDeclStatement	permittedPeers_t * pCurr ;	300:1:8267:8290	230261	0	True				
ANR	230265	IdentifierDecl	* pCurr		230261	0					
ANR	230266	IdentifierDeclType	permittedPeers_t *		230261	0					
ANR	230267	Identifier	pCurr		230261	1					
ANR	230268	IdentifierDeclStatement	permittedPeers_t * pDel ;	301:1:8293:8315	230261	1	True				
ANR	230269	IdentifierDecl	* pDel		230261	0					
ANR	230270	IdentifierDeclType	permittedPeers_t *		230261	0					
ANR	230271	Identifier	pDel		230261	1					
ANR	230272	ExpressionStatement	DEFiRet	302:1:8318:8325	230261	2	True				
ANR	230273	Identifier	DEFiRet		230261	0					
ANR	230274	ExpressionStatement	assert ( ppRootPeer != NULL )	304:1:8329:8355	230261	3	True				
ANR	230275	CallExpression	assert ( ppRootPeer != NULL )		230261	0					
ANR	230276	Callee	assert		230261	0					
ANR	230277	Identifier	assert		230261	0					
ANR	230278	ArgumentList	ppRootPeer != NULL		230261	1					
ANR	230279	Argument	ppRootPeer != NULL		230261	0					
ANR	230280	EqualityExpression	ppRootPeer != NULL		230261	0		!=			
ANR	230281	Identifier	ppRootPeer		230261	0					
ANR	230282	Identifier	NULL		230261	1					
ANR	230283	ForStatement	for ( pCurr = * ppRootPeer ; pCurr != NULL ; )		230261	4					
ANR	230284	ForInit	pCurr = * ppRootPeer ;	306:5:8363:8383	230261	0	True				
ANR	230285	AssignmentExpression	pCurr = * ppRootPeer		230261	0		=			
ANR	230286	Identifier	pCurr		230261	0					
ANR	230287	UnaryOperationExpression	* ppRootPeer		230261	1					
ANR	230288	UnaryOperator	*		230261	0					
ANR	230289	Identifier	ppRootPeer		230261	1					
ANR	230290	Condition	pCurr != NULL	306:27:8385:8397	230261	1	True				
ANR	230291	EqualityExpression	pCurr != NULL		230261	0		!=			
ANR	230292	Identifier	pCurr		230261	0					
ANR	230293	Identifier	NULL		230261	1					
ANR	230294	CompoundStatement		8:54:147:147	230261	2					
ANR	230295	ExpressionStatement	pDel = pCurr	307:2:8416:8428	230261	0	True				
ANR	230296	AssignmentExpression	pDel = pCurr		230261	0		=			
ANR	230297	Identifier	pDel		230261	0					
ANR	230298	Identifier	pCurr		230261	1					
ANR	230299	ExpressionStatement	pCurr = pCurr -> pNext	308:2:8432:8452	230261	1	True				
ANR	230300	AssignmentExpression	pCurr = pCurr -> pNext		230261	0		=			
ANR	230301	Identifier	pCurr		230261	0					
ANR	230302	PtrMemberAccess	pCurr -> pNext		230261	1					
ANR	230303	Identifier	pCurr		230261	0					
ANR	230304	Identifier	pNext		230261	1					
ANR	230305	ExpressionStatement	DestructPermittedPeerWildcards ( pDel )	309:2:8456:8492	230261	2	True				
ANR	230306	CallExpression	DestructPermittedPeerWildcards ( pDel )		230261	0					
ANR	230307	Callee	DestructPermittedPeerWildcards		230261	0					
ANR	230308	Identifier	DestructPermittedPeerWildcards		230261	0					
ANR	230309	ArgumentList	pDel		230261	1					
ANR	230310	Argument	pDel		230261	0					
ANR	230311	Identifier	pDel		230261	0					
ANR	230312	ExpressionStatement	free ( pDel -> pszID )	310:2:8496:8513	230261	3	True				
ANR	230313	CallExpression	free ( pDel -> pszID )		230261	0					
ANR	230314	Callee	free		230261	0					
ANR	230315	Identifier	free		230261	0					
ANR	230316	ArgumentList	pDel -> pszID		230261	1					
ANR	230317	Argument	pDel -> pszID		230261	0					
ANR	230318	PtrMemberAccess	pDel -> pszID		230261	0					
ANR	230319	Identifier	pDel		230261	0					
ANR	230320	Identifier	pszID		230261	1					
ANR	230321	ExpressionStatement	free ( pDel )	311:2:8517:8527	230261	4	True				
ANR	230322	CallExpression	free ( pDel )		230261	0					
ANR	230323	Callee	free		230261	0					
ANR	230324	Identifier	free		230261	0					
ANR	230325	ArgumentList	pDel		230261	1					
ANR	230326	Argument	pDel		230261	0					
ANR	230327	Identifier	pDel		230261	0					
ANR	230328	ExpressionStatement	* ppRootPeer = NULL	314:1:8534:8552	230261	5	True				
ANR	230329	AssignmentExpression	* ppRootPeer = NULL		230261	0		=			
ANR	230330	UnaryOperationExpression	* ppRootPeer		230261	0					
ANR	230331	UnaryOperator	*		230261	0					
ANR	230332	Identifier	ppRootPeer		230261	1					
ANR	230333	Identifier	NULL		230261	1					
ANR	230334	ExpressionStatement	RETiRet	316:1:8556:8563	230261	6	True				
ANR	230335	Identifier	RETiRet		230261	0					
ANR	230336	ReturnType	static rsRetVal		230261	1					
ANR	230337	Identifier	DestructPermittedPeers		230261	2					
ANR	230338	ParameterList	permittedPeers_t * * ppRootPeer		230261	3					
ANR	230339	Parameter	permittedPeers_t * * ppRootPeer	298:23:8233:8261	230261	0	True				
ANR	230340	ParameterType	permittedPeers_t * *		230261	0					
ANR	230341	Identifier	ppRootPeer		230261	1					
ANR	230342	CFGEntryNode	ENTRY		230261		True				
ANR	230343	CFGExitNode	EXIT		230261		True				
ANR	230344	Symbol	pDel -> pszID		230261						
ANR	230345	Symbol	NULL		230261						
ANR	230346	Symbol	* pDel		230261						
ANR	230347	Symbol	* pCurr		230261						
ANR	230348	Symbol	pCurr		230261						
ANR	230349	Symbol	pDel		230261						
ANR	230350	Symbol	ppRootPeer		230261						
ANR	230351	Symbol	pCurr -> pNext		230261						
ANR	230352	Symbol	* ppRootPeer		230261						
ANR	230353	Function	PermittedPeerWildcardCompile	325:0:8755:10172							
ANR	230354	FunctionDef	PermittedPeerWildcardCompile (permittedPeers_t * pPeer)		230353	0					
ANR	230355	CompoundStatement		327:0:8825:10172	230353	0					
ANR	230356	IdentifierDeclStatement	uchar * pC ;	328:1:8828:8837	230353	0	True				
ANR	230357	IdentifierDecl	* pC		230353	0					
ANR	230358	IdentifierDeclType	uchar *		230353	0					
ANR	230359	Identifier	pC		230353	1					
ANR	230360	IdentifierDeclStatement	uchar * pStart ;	329:1:8840:8853	230353	1	True				
ANR	230361	IdentifierDecl	* pStart		230353	0					
ANR	230362	IdentifierDeclType	uchar *		230353	0					
ANR	230363	Identifier	pStart		230353	1					
ANR	230364	ExpressionStatement	DEFiRet	330:1:8856:8863	230353	2	True				
ANR	230365	Identifier	DEFiRet		230353	0					
ANR	230366	ExpressionStatement	assert ( pPeer != NULL )	332:1:8867:8888	230353	3	True				
ANR	230367	CallExpression	assert ( pPeer != NULL )		230353	0					
ANR	230368	Callee	assert		230353	0					
ANR	230369	Identifier	assert		230353	0					
ANR	230370	ArgumentList	pPeer != NULL		230353	1					
ANR	230371	Argument	pPeer != NULL		230353	0					
ANR	230372	EqualityExpression	pPeer != NULL		230353	0		!=			
ANR	230373	Identifier	pPeer		230353	0					
ANR	230374	Identifier	NULL		230353	1					
ANR	230375	ExpressionStatement	assert ( pPeer -> pszID != NULL )	333:1:8891:8919	230353	4	True				
ANR	230376	CallExpression	assert ( pPeer -> pszID != NULL )		230353	0					
ANR	230377	Callee	assert		230353	0					
ANR	230378	Identifier	assert		230353	0					
ANR	230379	ArgumentList	pPeer -> pszID != NULL		230353	1					
ANR	230380	Argument	pPeer -> pszID != NULL		230353	0					
ANR	230381	EqualityExpression	pPeer -> pszID != NULL		230353	0		!=			
ANR	230382	PtrMemberAccess	pPeer -> pszID		230353	0					
ANR	230383	Identifier	pPeer		230353	0					
ANR	230384	Identifier	pszID		230353	1					
ANR	230385	Identifier	NULL		230353	1					
ANR	230386	ForStatement	for ( pC = pPeer -> pszID ; * pC != '\\0' && * pC != '*' ; ++ pC )		230353	5					
ANR	230387	ForInit	pC = pPeer -> pszID ;	336:5:8968:8986	230353	0	True				
ANR	230388	AssignmentExpression	pC = pPeer -> pszID		230353	0		=			
ANR	230389	Identifier	pC		230353	0					
ANR	230390	PtrMemberAccess	pPeer -> pszID		230353	1					
ANR	230391	Identifier	pPeer		230353	0					
ANR	230392	Identifier	pszID		230353	1					
ANR	230393	Condition	* pC != '\\0' && * pC != '*'	336:25:8988:9012	230353	1	True				
ANR	230394	AndExpression	* pC != '\\0' && * pC != '*'		230353	0		&&			
ANR	230395	EqualityExpression	* pC != '\\0'		230353	0		!=			
ANR	230396	UnaryOperationExpression	* pC		230353	0					
ANR	230397	UnaryOperator	*		230353	0					
ANR	230398	Identifier	pC		230353	1					
ANR	230399	PrimaryExpression	'\\0'		230353	1					
ANR	230400	EqualityExpression	* pC != '*'		230353	1		!=			
ANR	230401	UnaryOperationExpression	* pC		230353	0					
ANR	230402	UnaryOperator	*		230353	0					
ANR	230403	Identifier	pC		230353	1					
ANR	230404	PrimaryExpression	'*'		230353	1					
ANR	230405	UnaryExpression	++ pC	336:53:9016:9019	230353	2	True				
ANR	230406	IncDec	++		230353	0					
ANR	230407	Identifier	pC		230353	1					
ANR	230408	ExpressionStatement		337:22:9044:9044	230353	3	True				
ANR	230409	IfStatement	if ( * pC == '\\0' )		230353	6					
ANR	230410	Condition	* pC == '\\0'	339:4:9051:9061	230353	0	True				
ANR	230411	EqualityExpression	* pC == '\\0'		230353	0		==			
ANR	230412	UnaryOperationExpression	* pC		230353	0					
ANR	230413	UnaryOperator	*		230353	0					
ANR	230414	Identifier	pC		230353	1					
ANR	230415	PrimaryExpression	'\\0'		230353	1					
ANR	230416	CompoundStatement		13:17:238:238	230353	1					
ANR	230417	ExpressionStatement	pPeer -> etryType = PERM_PEER_TYPE_PLAIN	341:2:9114:9152	230353	0	True				
ANR	230418	AssignmentExpression	pPeer -> etryType = PERM_PEER_TYPE_PLAIN		230353	0		=			
ANR	230419	PtrMemberAccess	pPeer -> etryType		230353	0					
ANR	230420	Identifier	pPeer		230353	0					
ANR	230421	Identifier	etryType		230353	1					
ANR	230422	Identifier	PERM_PEER_TYPE_PLAIN		230353	1					
ANR	230423	ExpressionStatement	FINALIZE	342:2:9156:9164	230353	1	True				
ANR	230424	Identifier	FINALIZE		230353	0					
ANR	230425	ExpressionStatement	pPeer -> etryType = PERM_PEER_TYPE_WILDCARD	351:1:9506:9547	230353	7	True				
ANR	230426	AssignmentExpression	pPeer -> etryType = PERM_PEER_TYPE_WILDCARD		230353	0		=			
ANR	230427	PtrMemberAccess	pPeer -> etryType		230353	0					
ANR	230428	Identifier	pPeer		230353	0					
ANR	230429	Identifier	etryType		230353	1					
ANR	230430	Identifier	PERM_PEER_TYPE_WILDCARD		230353	1					
ANR	230431	ExpressionStatement	pC = pPeer -> pszID	352:1:9550:9567	230353	8	True				
ANR	230432	AssignmentExpression	pC = pPeer -> pszID		230353	0		=			
ANR	230433	Identifier	pC		230353	0					
ANR	230434	PtrMemberAccess	pPeer -> pszID		230353	1					
ANR	230435	Identifier	pPeer		230353	0					
ANR	230436	Identifier	pszID		230353	1					
ANR	230437	WhileStatement	while ( * pC != '\\0' )		230353	9					
ANR	230438	Condition	* pC != '\\0'	353:7:9576:9586	230353	0	True				
ANR	230439	EqualityExpression	* pC != '\\0'		230353	0		!=			
ANR	230440	UnaryOperationExpression	* pC		230353	0					
ANR	230441	UnaryOperator	*		230353	0					
ANR	230442	Identifier	pC		230353	1					
ANR	230443	PrimaryExpression	'\\0'		230353	1					
ANR	230444	CompoundStatement		27:20:763:763	230353	1					
ANR	230445	ExpressionStatement	pStart = pC	354:2:9593:9604	230353	0	True				
ANR	230446	AssignmentExpression	pStart = pC		230353	0		=			
ANR	230447	Identifier	pStart		230353	0					
ANR	230448	Identifier	pC		230353	1					
ANR	230449	ForStatement	for ( ; * pC != '\\0' && * pC != '.' ; ++ pC )		230353	1					
ANR	230450	Condition	* pC != '\\0' && * pC != '.'	356:9:9652:9676	230353	0	True				
ANR	230451	AndExpression	* pC != '\\0' && * pC != '.'		230353	0		&&			
ANR	230452	EqualityExpression	* pC != '\\0'		230353	0		!=			
ANR	230453	UnaryOperationExpression	* pC		230353	0					
ANR	230454	UnaryOperator	*		230353	0					
ANR	230455	Identifier	pC		230353	1					
ANR	230456	PrimaryExpression	'\\0'		230353	1					
ANR	230457	EqualityExpression	* pC != '.'		230353	1		!=			
ANR	230458	UnaryOperationExpression	* pC		230353	0					
ANR	230459	UnaryOperator	*		230353	0					
ANR	230460	Identifier	pC		230353	1					
ANR	230461	PrimaryExpression	'.'		230353	1					
ANR	230462	UnaryExpression	++ pC	356:37:9680:9683	230353	1	True				
ANR	230463	IncDec	++		230353	0					
ANR	230464	Identifier	pC		230353	1					
ANR	230465	ExpressionStatement		357:23:9709:9709	230353	2	True				
ANR	230466	ExpressionStatement	"CHKiRet ( AddPermittedPeerWildcard ( pPeer , pStart , pC - pStart ) )"	358:2:9713:9774	230353	2	True				
ANR	230467	CallExpression	"CHKiRet ( AddPermittedPeerWildcard ( pPeer , pStart , pC - pStart ) )"		230353	0					
ANR	230468	Callee	CHKiRet		230353	0					
ANR	230469	Identifier	CHKiRet		230353	0					
ANR	230470	ArgumentList	"AddPermittedPeerWildcard ( pPeer , pStart , pC - pStart )"		230353	1					
ANR	230471	Argument	"AddPermittedPeerWildcard ( pPeer , pStart , pC - pStart )"		230353	0					
ANR	230472	CallExpression	"AddPermittedPeerWildcard ( pPeer , pStart , pC - pStart )"		230353	0					
ANR	230473	Callee	AddPermittedPeerWildcard		230353	0					
ANR	230474	Identifier	AddPermittedPeerWildcard		230353	0					
ANR	230475	ArgumentList	pPeer		230353	1					
ANR	230476	Argument	pPeer		230353	0					
ANR	230477	Identifier	pPeer		230353	0					
ANR	230478	Argument	pStart		230353	1					
ANR	230479	Identifier	pStart		230353	0					
ANR	230480	Argument	pC - pStart		230353	2					
ANR	230481	AdditiveExpression	pC - pStart		230353	0		-			
ANR	230482	Identifier	pC		230353	0					
ANR	230483	Identifier	pStart		230353	1					
ANR	230484	IfStatement	if ( * pC == '.' && * ( pC + 1 ) == '\\0' )		230353	3					
ANR	230485	Condition	* pC == '.' && * ( pC + 1 ) == '\\0'	360:5:9846:9876	230353	0	True				
ANR	230486	AndExpression	* pC == '.' && * ( pC + 1 ) == '\\0'		230353	0		&&			
ANR	230487	EqualityExpression	* pC == '.'		230353	0		==			
ANR	230488	UnaryOperationExpression	* pC		230353	0					
ANR	230489	UnaryOperator	*		230353	0					
ANR	230490	Identifier	pC		230353	1					
ANR	230491	PrimaryExpression	'.'		230353	1					
ANR	230492	EqualityExpression	* ( pC + 1 ) == '\\0'		230353	1		==			
ANR	230493	UnaryOperationExpression	* ( pC + 1 )		230353	0					
ANR	230494	UnaryOperator	*		230353	0					
ANR	230495	AdditiveExpression	pC + 1		230353	1		+			
ANR	230496	Identifier	pC		230353	0					
ANR	230497	PrimaryExpression	1		230353	1					
ANR	230498	PrimaryExpression	'\\0'		230353	1					
ANR	230499	CompoundStatement		34:38:1053:1053	230353	1					
ANR	230500	ExpressionStatement	"CHKiRet ( AddPermittedPeerWildcard ( pPeer , pStart , 0 ) )"	362:3:9942:9993	230353	0	True				
ANR	230501	CallExpression	"CHKiRet ( AddPermittedPeerWildcard ( pPeer , pStart , 0 ) )"		230353	0					
ANR	230502	Callee	CHKiRet		230353	0					
ANR	230503	Identifier	CHKiRet		230353	0					
ANR	230504	ArgumentList	"AddPermittedPeerWildcard ( pPeer , pStart , 0 )"		230353	1					
ANR	230505	Argument	"AddPermittedPeerWildcard ( pPeer , pStart , 0 )"		230353	0					
ANR	230506	CallExpression	"AddPermittedPeerWildcard ( pPeer , pStart , 0 )"		230353	0					
ANR	230507	Callee	AddPermittedPeerWildcard		230353	0					
ANR	230508	Identifier	AddPermittedPeerWildcard		230353	0					
ANR	230509	ArgumentList	pPeer		230353	1					
ANR	230510	Argument	pPeer		230353	0					
ANR	230511	Identifier	pPeer		230353	0					
ANR	230512	Argument	pStart		230353	1					
ANR	230513	Identifier	pStart		230353	0					
ANR	230514	Argument	0		230353	2					
ANR	230515	PrimaryExpression	0		230353	0					
ANR	230516	IfStatement	if ( * pC != '\\0' )		230353	4					
ANR	230517	Condition	* pC != '\\0'	364:5:10005:10015	230353	0	True				
ANR	230518	EqualityExpression	* pC != '\\0'		230353	0		!=			
ANR	230519	UnaryOperationExpression	* pC		230353	0					
ANR	230520	UnaryOperator	*		230353	0					
ANR	230521	Identifier	pC		230353	1					
ANR	230522	PrimaryExpression	'\\0'		230353	1					
ANR	230523	ExpressionStatement	++ pC	365:3:10021:10025	230353	1	True				
ANR	230524	UnaryExpression	++ pC		230353	0					
ANR	230525	IncDec	++		230353	0					
ANR	230526	Identifier	pC		230353	1					
ANR	230527	Label	finalize_it :	368:0:10031:10042	230353	10	True				
ANR	230528	Identifier	finalize_it		230353	0					
ANR	230529	IfStatement	if ( iRet != RS_RET_OK )		230353	11					
ANR	230530	Condition	iRet != RS_RET_OK	369:4:10048:10064	230353	0	True				
ANR	230531	EqualityExpression	iRet != RS_RET_OK		230353	0		!=			
ANR	230532	Identifier	iRet		230353	0					
ANR	230533	Identifier	RS_RET_OK		230353	1					
ANR	230534	CompoundStatement		43:23:1241:1241	230353	1					
ANR	230535	ExpressionStatement	"errmsg . LogError ( 0 , iRet , ""error compiling wildcard expression '%s'"" , pPeer -> pszID )"	370:2:10071:10157	230353	0	True				
ANR	230536	CallExpression	"errmsg . LogError ( 0 , iRet , ""error compiling wildcard expression '%s'"" , pPeer -> pszID )"		230353	0					
ANR	230537	Callee	errmsg . LogError		230353	0					
ANR	230538	MemberAccess	errmsg . LogError		230353	0					
ANR	230539	Identifier	errmsg		230353	0					
ANR	230540	Identifier	LogError		230353	1					
ANR	230541	ArgumentList	0		230353	1					
ANR	230542	Argument	0		230353	0					
ANR	230543	PrimaryExpression	0		230353	0					
ANR	230544	Argument	iRet		230353	1					
ANR	230545	Identifier	iRet		230353	0					
ANR	230546	Argument	"""error compiling wildcard expression '%s'"""		230353	2					
ANR	230547	PrimaryExpression	"""error compiling wildcard expression '%s'"""		230353	0					
ANR	230548	Argument	pPeer -> pszID		230353	3					
ANR	230549	PtrMemberAccess	pPeer -> pszID		230353	0					
ANR	230550	Identifier	pPeer		230353	0					
ANR	230551	Identifier	pszID		230353	1					
ANR	230552	ExpressionStatement	RETiRet	373:1:10163:10170	230353	12	True				
ANR	230553	Identifier	RETiRet		230353	0					
ANR	230554	ReturnType	static rsRetVal		230353	1					
ANR	230555	Identifier	PermittedPeerWildcardCompile		230353	2					
ANR	230556	ParameterList	permittedPeers_t * pPeer		230353	3					
ANR	230557	Parameter	permittedPeers_t * pPeer	326:29:8800:8822	230353	0	True				
ANR	230558	ParameterType	permittedPeers_t *		230353	0					
ANR	230559	Identifier	pPeer		230353	1					
ANR	230560	CFGEntryNode	ENTRY		230353		True				
ANR	230561	CFGExitNode	EXIT		230353		True				
ANR	230562	Symbol	pPeer		230353						
ANR	230563	Symbol	pPeer -> etryType		230353						
ANR	230564	Symbol	NULL		230353						
ANR	230565	Symbol	RS_RET_OK		230353						
ANR	230566	Symbol	iRet		230353						
ANR	230567	Symbol	errmsg		230353						
ANR	230568	Symbol	PERM_PEER_TYPE_PLAIN		230353						
ANR	230569	Symbol	* pPeer		230353						
ANR	230570	Symbol	PERM_PEER_TYPE_WILDCARD		230353						
ANR	230571	Symbol	pPeer -> pszID		230353						
ANR	230572	Symbol	pC		230353						
ANR	230573	Symbol	pStart		230353						
ANR	230574	Symbol	AddPermittedPeerWildcard		230353						
ANR	230575	Symbol	* ( pC + 1 )		230353						
ANR	230576	Symbol	* pC		230353						
ANR	230577	Function	PermittedPeerWildcardMatch	382:0:10506:13223							
ANR	230578	FunctionDef	"PermittedPeerWildcardMatch (permittedPeers_t * pPeer , uchar * pszNameToMatch , int * pbIsMatching)"		230577	0					
ANR	230579	CompoundStatement		384:0:10616:13223	230577	0					
ANR	230580	IdentifierDeclStatement	permittedPeerWildcard_t * pWildcard ;	385:1:10619:10653	230577	0	True				
ANR	230581	IdentifierDecl	* pWildcard		230577	0					
ANR	230582	IdentifierDeclType	permittedPeerWildcard_t *		230577	0					
ANR	230583	Identifier	pWildcard		230577	1					
ANR	230584	IdentifierDeclStatement	uchar * pC ;	386:1:10656:10665	230577	1	True				
ANR	230585	IdentifierDecl	* pC		230577	0					
ANR	230586	IdentifierDeclType	uchar *		230577	0					
ANR	230587	Identifier	pC		230577	1					
ANR	230588	IdentifierDeclStatement	uchar * pStart ;	387:1:10668:10681	230577	2	True				
ANR	230589	IdentifierDecl	* pStart		230577	0					
ANR	230590	IdentifierDeclType	uchar *		230577	0					
ANR	230591	Identifier	pStart		230577	1					
ANR	230592	IdentifierDeclStatement	"size_t iWildcard , iName ;"	388:1:10724:10747	230577	3	True				
ANR	230593	IdentifierDecl	iWildcard		230577	0					
ANR	230594	IdentifierDeclType	size_t		230577	0					
ANR	230595	Identifier	iWildcard		230577	1					
ANR	230596	IdentifierDecl	iName		230577	1					
ANR	230597	IdentifierDeclType	size_t		230577	0					
ANR	230598	Identifier	iName		230577	1					
ANR	230599	ExpressionStatement	DEFiRet	389:1:10794:10801	230577	4	True				
ANR	230600	Identifier	DEFiRet		230577	0					
ANR	230601	ExpressionStatement	assert ( pPeer != NULL )	391:1:10805:10826	230577	5	True				
ANR	230602	CallExpression	assert ( pPeer != NULL )		230577	0					
ANR	230603	Callee	assert		230577	0					
ANR	230604	Identifier	assert		230577	0					
ANR	230605	ArgumentList	pPeer != NULL		230577	1					
ANR	230606	Argument	pPeer != NULL		230577	0					
ANR	230607	EqualityExpression	pPeer != NULL		230577	0		!=			
ANR	230608	Identifier	pPeer		230577	0					
ANR	230609	Identifier	NULL		230577	1					
ANR	230610	ExpressionStatement	assert ( pszNameToMatch != NULL )	392:1:10829:10859	230577	6	True				
ANR	230611	CallExpression	assert ( pszNameToMatch != NULL )		230577	0					
ANR	230612	Callee	assert		230577	0					
ANR	230613	Identifier	assert		230577	0					
ANR	230614	ArgumentList	pszNameToMatch != NULL		230577	1					
ANR	230615	Argument	pszNameToMatch != NULL		230577	0					
ANR	230616	EqualityExpression	pszNameToMatch != NULL		230577	0		!=			
ANR	230617	Identifier	pszNameToMatch		230577	0					
ANR	230618	Identifier	NULL		230577	1					
ANR	230619	ExpressionStatement	assert ( pbIsMatching != NULL )	393:1:10862:10890	230577	7	True				
ANR	230620	CallExpression	assert ( pbIsMatching != NULL )		230577	0					
ANR	230621	Callee	assert		230577	0					
ANR	230622	Identifier	assert		230577	0					
ANR	230623	ArgumentList	pbIsMatching != NULL		230577	1					
ANR	230624	Argument	pbIsMatching != NULL		230577	0					
ANR	230625	EqualityExpression	pbIsMatching != NULL		230577	0		!=			
ANR	230626	Identifier	pbIsMatching		230577	0					
ANR	230627	Identifier	NULL		230577	1					
ANR	230628	IfStatement	if ( pPeer -> etryType == PERM_PEER_TYPE_UNDECIDED )		230577	8					
ANR	230629	Condition	pPeer -> etryType == PERM_PEER_TYPE_UNDECIDED	395:4:10897:10939	230577	0	True				
ANR	230630	EqualityExpression	pPeer -> etryType == PERM_PEER_TYPE_UNDECIDED		230577	0		==			
ANR	230631	PtrMemberAccess	pPeer -> etryType		230577	0					
ANR	230632	Identifier	pPeer		230577	0					
ANR	230633	Identifier	etryType		230577	1					
ANR	230634	Identifier	PERM_PEER_TYPE_UNDECIDED		230577	1					
ANR	230635	CompoundStatement		12:49:325:325	230577	1					
ANR	230636	ExpressionStatement	PermittedPeerWildcardCompile ( pPeer )	396:2:10946:10981	230577	0	True				
ANR	230637	CallExpression	PermittedPeerWildcardCompile ( pPeer )		230577	0					
ANR	230638	Callee	PermittedPeerWildcardCompile		230577	0					
ANR	230639	Identifier	PermittedPeerWildcardCompile		230577	0					
ANR	230640	ArgumentList	pPeer		230577	1					
ANR	230641	Argument	pPeer		230577	0					
ANR	230642	Identifier	pPeer		230577	0					
ANR	230643	IfStatement	if ( pPeer -> etryType == PERM_PEER_TYPE_PLAIN )		230577	9					
ANR	230644	Condition	pPeer -> etryType == PERM_PEER_TYPE_PLAIN	399:4:10991:11029	230577	0	True				
ANR	230645	EqualityExpression	pPeer -> etryType == PERM_PEER_TYPE_PLAIN		230577	0		==			
ANR	230646	PtrMemberAccess	pPeer -> etryType		230577	0					
ANR	230647	Identifier	pPeer		230577	0					
ANR	230648	Identifier	etryType		230577	1					
ANR	230649	Identifier	PERM_PEER_TYPE_PLAIN		230577	1					
ANR	230650	CompoundStatement		16:45:415:415	230577	1					
ANR	230651	ExpressionStatement	"* pbIsMatching = ! strcmp ( ( char * ) pPeer -> pszID , ( char * ) pszNameToMatch )"	400:2:11036:11103	230577	0	True				
ANR	230652	AssignmentExpression	"* pbIsMatching = ! strcmp ( ( char * ) pPeer -> pszID , ( char * ) pszNameToMatch )"		230577	0		=			
ANR	230653	UnaryOperationExpression	* pbIsMatching		230577	0					
ANR	230654	UnaryOperator	*		230577	0					
ANR	230655	Identifier	pbIsMatching		230577	1					
ANR	230656	UnaryOperationExpression	"! strcmp ( ( char * ) pPeer -> pszID , ( char * ) pszNameToMatch )"		230577	1					
ANR	230657	UnaryOperator	!		230577	0					
ANR	230658	CallExpression	"strcmp ( ( char * ) pPeer -> pszID , ( char * ) pszNameToMatch )"		230577	1					
ANR	230659	Callee	strcmp		230577	0					
ANR	230660	Identifier	strcmp		230577	0					
ANR	230661	ArgumentList	( char * ) pPeer -> pszID		230577	1					
ANR	230662	Argument	( char * ) pPeer -> pszID		230577	0					
ANR	230663	CastExpression	( char * ) pPeer -> pszID		230577	0					
ANR	230664	CastTarget	char *		230577	0					
ANR	230665	PtrMemberAccess	pPeer -> pszID		230577	1					
ANR	230666	Identifier	pPeer		230577	0					
ANR	230667	Identifier	pszID		230577	1					
ANR	230668	Argument	( char * ) pszNameToMatch		230577	1					
ANR	230669	CastExpression	( char * ) pszNameToMatch		230577	0					
ANR	230670	CastTarget	char *		230577	0					
ANR	230671	Identifier	pszNameToMatch		230577	1					
ANR	230672	ExpressionStatement	FINALIZE	401:2:11107:11115	230577	1	True				
ANR	230673	Identifier	FINALIZE		230577	0					
ANR	230674	ExpressionStatement	pWildcard = pPeer -> pWildcardRoot	407:1:11246:11278	230577	10	True				
ANR	230675	AssignmentExpression	pWildcard = pPeer -> pWildcardRoot		230577	0		=			
ANR	230676	Identifier	pWildcard		230577	0					
ANR	230677	PtrMemberAccess	pPeer -> pWildcardRoot		230577	1					
ANR	230678	Identifier	pPeer		230577	0					
ANR	230679	Identifier	pWildcardRoot		230577	1					
ANR	230680	ExpressionStatement	pC = pszNameToMatch	408:1:11281:11300	230577	11	True				
ANR	230681	AssignmentExpression	pC = pszNameToMatch		230577	0		=			
ANR	230682	Identifier	pC		230577	0					
ANR	230683	Identifier	pszNameToMatch		230577	1					
ANR	230684	WhileStatement	while ( * pC != '\\0' )		230577	12					
ANR	230685	Condition	* pC != '\\0'	409:7:11309:11319	230577	0	True				
ANR	230686	EqualityExpression	* pC != '\\0'		230577	0		!=			
ANR	230687	UnaryOperationExpression	* pC		230577	0					
ANR	230688	UnaryOperator	*		230577	0					
ANR	230689	Identifier	pC		230577	1					
ANR	230690	PrimaryExpression	'\\0'		230577	1					
ANR	230691	CompoundStatement		26:20:705:705	230577	1					
ANR	230692	IfStatement	if ( pWildcard == NULL )		230577	0					
ANR	230693	Condition	pWildcard == NULL	410:5:11329:11345	230577	0	True				
ANR	230694	EqualityExpression	pWildcard == NULL		230577	0		==			
ANR	230695	Identifier	pWildcard		230577	0					
ANR	230696	Identifier	NULL		230577	1					
ANR	230697	CompoundStatement		27:24:731:731	230577	1					
ANR	230698	ExpressionStatement	* pbIsMatching = 0	412:3:11429:11446	230577	0	True				
ANR	230699	AssignmentExpression	* pbIsMatching = 0		230577	0		=			
ANR	230700	UnaryOperationExpression	* pbIsMatching		230577	0					
ANR	230701	UnaryOperator	*		230577	0					
ANR	230702	Identifier	pbIsMatching		230577	1					
ANR	230703	PrimaryExpression	0		230577	1					
ANR	230704	ExpressionStatement	FINALIZE	413:3:11451:11459	230577	1	True				
ANR	230705	Identifier	FINALIZE		230577	0					
ANR	230706	ExpressionStatement	pStart = pC	415:2:11467:11478	230577	1	True				
ANR	230707	AssignmentExpression	pStart = pC		230577	0		=			
ANR	230708	Identifier	pStart		230577	0					
ANR	230709	Identifier	pC		230577	1					
ANR	230710	WhileStatement	while ( * pC != '\\0' && * pC != '.' )		230577	2					
ANR	230711	Condition	* pC != '\\0' && * pC != '.'	416:8:11488:11512	230577	0	True				
ANR	230712	AndExpression	* pC != '\\0' && * pC != '.'		230577	0		&&			
ANR	230713	EqualityExpression	* pC != '\\0'		230577	0		!=			
ANR	230714	UnaryOperationExpression	* pC		230577	0					
ANR	230715	UnaryOperator	*		230577	0					
ANR	230716	Identifier	pC		230577	1					
ANR	230717	PrimaryExpression	'\\0'		230577	1					
ANR	230718	EqualityExpression	* pC != '.'		230577	1		!=			
ANR	230719	UnaryOperationExpression	* pC		230577	0					
ANR	230720	UnaryOperator	*		230577	0					
ANR	230721	Identifier	pC		230577	1					
ANR	230722	PrimaryExpression	'.'		230577	1					
ANR	230723	CompoundStatement		33:35:898:898	230577	1					
ANR	230724	ExpressionStatement	++ pC	417:3:11520:11524	230577	0	True				
ANR	230725	UnaryExpression	++ pC		230577	0					
ANR	230726	IncDec	++		230577	0					
ANR	230727	Identifier	pC		230577	1					
ANR	230728	SwitchStatement	switch ( pWildcard -> wildcardType )		230577	3					
ANR	230729	Condition	pWildcard -> wildcardType	421:9:11584:11606	230577	0	True				
ANR	230730	PtrMemberAccess	pWildcard -> wildcardType		230577	0					
ANR	230731	Identifier	pWildcard		230577	0					
ANR	230732	Identifier	wildcardType		230577	1					
ANR	230733	CompoundStatement		38:34:992:992	230577	1					
ANR	230734	Label	case PEER_WILDCARD_NONE :	422:3:11614:11637	230577	0	True				
ANR	230735	Identifier	PEER_WILDCARD_NONE		230577	0					
ANR	230736	IfStatement	"if ( pWildcard -> lenDomainPart != ( size_t ) ( pC - pStart ) || strncmp ( ( char * ) pStart , ( char * ) pWildcard -> pszDomainPart , pC - pStart ) )"		230577	1					
ANR	230737	Condition	"pWildcard -> lenDomainPart != ( size_t ) ( pC - pStart ) || strncmp ( ( char * ) pStart , ( char * ) pWildcard -> pszDomainPart , pC - pStart )"	423:10:11649:11777	230577	0	True				
ANR	230738	OrExpression	"pWildcard -> lenDomainPart != ( size_t ) ( pC - pStart ) || strncmp ( ( char * ) pStart , ( char * ) pWildcard -> pszDomainPart , pC - pStart )"		230577	0		||			
ANR	230739	EqualityExpression	pWildcard -> lenDomainPart != ( size_t ) ( pC - pStart )		230577	0		!=			
ANR	230740	PtrMemberAccess	pWildcard -> lenDomainPart		230577	0					
ANR	230741	Identifier	pWildcard		230577	0					
ANR	230742	Identifier	lenDomainPart		230577	1					
ANR	230743	CastExpression	( size_t ) ( pC - pStart )		230577	1					
ANR	230744	CastTarget	size_t		230577	0					
ANR	230745	AdditiveExpression	pC - pStart		230577	1		-			
ANR	230746	Identifier	pC		230577	0					
ANR	230747	Identifier	pStart		230577	1					
ANR	230748	CallExpression	"strncmp ( ( char * ) pStart , ( char * ) pWildcard -> pszDomainPart , pC - pStart )"		230577	1					
ANR	230749	Callee	strncmp		230577	0					
ANR	230750	Identifier	strncmp		230577	0					
ANR	230751	ArgumentList	( char * ) pStart		230577	1					
ANR	230752	Argument	( char * ) pStart		230577	0					
ANR	230753	CastExpression	( char * ) pStart		230577	0					
ANR	230754	CastTarget	char *		230577	0					
ANR	230755	Identifier	pStart		230577	1					
ANR	230756	Argument	( char * ) pWildcard -> pszDomainPart		230577	1					
ANR	230757	CastExpression	( char * ) pWildcard -> pszDomainPart		230577	0					
ANR	230758	CastTarget	char *		230577	0					
ANR	230759	PtrMemberAccess	pWildcard -> pszDomainPart		230577	1					
ANR	230760	Identifier	pWildcard		230577	0					
ANR	230761	Identifier	pszDomainPart		230577	1					
ANR	230762	Argument	pC - pStart		230577	2					
ANR	230763	AdditiveExpression	pC - pStart		230577	0		-			
ANR	230764	Identifier	pC		230577	0					
ANR	230765	Identifier	pStart		230577	1					
ANR	230766	CompoundStatement		41:80:1163:1163	230577	1					
ANR	230767	ExpressionStatement	* pbIsMatching = 0	425:5:11787:11804	230577	0	True				
ANR	230768	AssignmentExpression	* pbIsMatching = 0		230577	0		=			
ANR	230769	UnaryOperationExpression	* pbIsMatching		230577	0					
ANR	230770	UnaryOperator	*		230577	0					
ANR	230771	Identifier	pbIsMatching		230577	1					
ANR	230772	PrimaryExpression	0		230577	1					
ANR	230773	ExpressionStatement	FINALIZE	426:5:11811:11819	230577	1	True				
ANR	230774	Identifier	FINALIZE		230577	0					
ANR	230775	BreakStatement	break ;	428:4:11831:11836	230577	2	True				
ANR	230776	Label	case PEER_WILDCARD_AT_START :	429:3:11841:11868	230577	3	True				
ANR	230777	Identifier	PEER_WILDCARD_AT_START		230577	0					
ANR	230778	IfStatement	if ( pWildcard -> lenDomainPart > ( size_t ) ( pC - pStart ) )		230577	4					
ANR	230779	Condition	pWildcard -> lenDomainPart > ( size_t ) ( pC - pStart )	431:7:11933:11981	230577	0	True				
ANR	230780	RelationalExpression	pWildcard -> lenDomainPart > ( size_t ) ( pC - pStart )		230577	0		>			
ANR	230781	PtrMemberAccess	pWildcard -> lenDomainPart		230577	0					
ANR	230782	Identifier	pWildcard		230577	0					
ANR	230783	Identifier	lenDomainPart		230577	1					
ANR	230784	CastExpression	( size_t ) ( pC - pStart )		230577	1					
ANR	230785	CastTarget	size_t		230577	0					
ANR	230786	AdditiveExpression	pC - pStart		230577	1		-			
ANR	230787	Identifier	pC		230577	0					
ANR	230788	Identifier	pStart		230577	1					
ANR	230789	CompoundStatement		48:58:1367:1367	230577	1					
ANR	230790	ExpressionStatement	* pbIsMatching = 0	432:5:11991:12008	230577	0	True				
ANR	230791	AssignmentExpression	* pbIsMatching = 0		230577	0		=			
ANR	230792	UnaryOperationExpression	* pbIsMatching		230577	0					
ANR	230793	UnaryOperator	*		230577	0					
ANR	230794	Identifier	pbIsMatching		230577	1					
ANR	230795	PrimaryExpression	0		230577	1					
ANR	230796	ExpressionStatement	FINALIZE	433:5:12015:12023	230577	1	True				
ANR	230797	Identifier	FINALIZE		230577	0					
ANR	230798	ExpressionStatement	iName = ( size_t ) ( pC - pStart ) - pWildcard -> lenDomainPart	435:4:12035:12092	230577	5	True				
ANR	230799	AssignmentExpression	iName = ( size_t ) ( pC - pStart ) - pWildcard -> lenDomainPart		230577	0		=			
ANR	230800	Identifier	iName		230577	0					
ANR	230801	AdditiveExpression	( size_t ) ( pC - pStart ) - pWildcard -> lenDomainPart		230577	1		-			
ANR	230802	CastExpression	( size_t ) ( pC - pStart )		230577	0					
ANR	230803	CastTarget	size_t		230577	0					
ANR	230804	AdditiveExpression	pC - pStart		230577	1		-			
ANR	230805	Identifier	pC		230577	0					
ANR	230806	Identifier	pStart		230577	1					
ANR	230807	PtrMemberAccess	pWildcard -> lenDomainPart		230577	1					
ANR	230808	Identifier	pWildcard		230577	0					
ANR	230809	Identifier	lenDomainPart		230577	1					
ANR	230810	ExpressionStatement	iWildcard = 0	436:4:12098:12111	230577	6	True				
ANR	230811	AssignmentExpression	iWildcard = 0		230577	0		=			
ANR	230812	Identifier	iWildcard		230577	0					
ANR	230813	PrimaryExpression	0		230577	1					
ANR	230814	WhileStatement	while ( iWildcard < pWildcard -> lenDomainPart )		230577	7					
ANR	230815	Condition	iWildcard < pWildcard -> lenDomainPart	437:10:12123:12158	230577	0	True				
ANR	230816	RelationalExpression	iWildcard < pWildcard -> lenDomainPart		230577	0		<			
ANR	230817	Identifier	iWildcard		230577	0					
ANR	230818	PtrMemberAccess	pWildcard -> lenDomainPart		230577	1					
ANR	230819	Identifier	pWildcard		230577	0					
ANR	230820	Identifier	lenDomainPart		230577	1					
ANR	230821	CompoundStatement		54:48:1544:1544	230577	1					
ANR	230822	IfStatement	if ( pWildcard -> pszDomainPart [ iWildcard ] != pStart [ iName ] )		230577	0					
ANR	230823	Condition	pWildcard -> pszDomainPart [ iWildcard ] != pStart [ iName ]	438:8:12171:12222	230577	0	True				
ANR	230824	EqualityExpression	pWildcard -> pszDomainPart [ iWildcard ] != pStart [ iName ]		230577	0		!=			
ANR	230825	ArrayIndexing	pWildcard -> pszDomainPart [ iWildcard ]		230577	0					
ANR	230826	PtrMemberAccess	pWildcard -> pszDomainPart		230577	0					
ANR	230827	Identifier	pWildcard		230577	0					
ANR	230828	Identifier	pszDomainPart		230577	1					
ANR	230829	Identifier	iWildcard		230577	1					
ANR	230830	ArrayIndexing	pStart [ iName ]		230577	1					
ANR	230831	Identifier	pStart		230577	0					
ANR	230832	Identifier	iName		230577	1					
ANR	230833	CompoundStatement		55:62:1608:1608	230577	1					
ANR	230834	ExpressionStatement	* pbIsMatching = 0	439:6:12233:12250	230577	0	True				
ANR	230835	AssignmentExpression	* pbIsMatching = 0		230577	0		=			
ANR	230836	UnaryOperationExpression	* pbIsMatching		230577	0					
ANR	230837	UnaryOperator	*		230577	0					
ANR	230838	Identifier	pbIsMatching		230577	1					
ANR	230839	PrimaryExpression	0		230577	1					
ANR	230840	ExpressionStatement	FINALIZE	440:6:12258:12266	230577	1	True				
ANR	230841	Identifier	FINALIZE		230577	0					
ANR	230842	ExpressionStatement	++ iName	442:5:12280:12287	230577	1	True				
ANR	230843	UnaryExpression	++ iName		230577	0					
ANR	230844	IncDec	++		230577	0					
ANR	230845	Identifier	iName		230577	1					
ANR	230846	ExpressionStatement	++ iWildcard	443:5:12294:12305	230577	2	True				
ANR	230847	UnaryExpression	++ iWildcard		230577	0					
ANR	230848	IncDec	++		230577	0					
ANR	230849	Identifier	iWildcard		230577	1					
ANR	230850	BreakStatement	break ;	445:4:12317:12322	230577	8	True				
ANR	230851	Label	case PEER_WILDCARD_AT_END :	446:3:12327:12352	230577	9	True				
ANR	230852	Identifier	PEER_WILDCARD_AT_END		230577	0					
ANR	230853	IfStatement	"if ( pWildcard -> lenDomainPart > ( size_t ) ( pC - pStart ) || strncmp ( ( char * ) pStart , ( char * ) pWildcard -> pszDomainPart , pWildcard -> lenDomainPart ) )"		230577	10					
ANR	230854	Condition	"pWildcard -> lenDomainPart > ( size_t ) ( pC - pStart ) || strncmp ( ( char * ) pStart , ( char * ) pWildcard -> pszDomainPart , pWildcard -> lenDomainPart )"	447:10:12364:12504	230577	0	True				
ANR	230855	OrExpression	"pWildcard -> lenDomainPart > ( size_t ) ( pC - pStart ) || strncmp ( ( char * ) pStart , ( char * ) pWildcard -> pszDomainPart , pWildcard -> lenDomainPart )"		230577	0		||			
ANR	230856	RelationalExpression	pWildcard -> lenDomainPart > ( size_t ) ( pC - pStart )		230577	0		>			
ANR	230857	PtrMemberAccess	pWildcard -> lenDomainPart		230577	0					
ANR	230858	Identifier	pWildcard		230577	0					
ANR	230859	Identifier	lenDomainPart		230577	1					
ANR	230860	CastExpression	( size_t ) ( pC - pStart )		230577	1					
ANR	230861	CastTarget	size_t		230577	0					
ANR	230862	AdditiveExpression	pC - pStart		230577	1		-			
ANR	230863	Identifier	pC		230577	0					
ANR	230864	Identifier	pStart		230577	1					
ANR	230865	CallExpression	"strncmp ( ( char * ) pStart , ( char * ) pWildcard -> pszDomainPart , pWildcard -> lenDomainPart )"		230577	1					
ANR	230866	Callee	strncmp		230577	0					
ANR	230867	Identifier	strncmp		230577	0					
ANR	230868	ArgumentList	( char * ) pStart		230577	1					
ANR	230869	Argument	( char * ) pStart		230577	0					
ANR	230870	CastExpression	( char * ) pStart		230577	0					
ANR	230871	CastTarget	char *		230577	0					
ANR	230872	Identifier	pStart		230577	1					
ANR	230873	Argument	( char * ) pWildcard -> pszDomainPart		230577	1					
ANR	230874	CastExpression	( char * ) pWildcard -> pszDomainPart		230577	0					
ANR	230875	CastTarget	char *		230577	0					
ANR	230876	PtrMemberAccess	pWildcard -> pszDomainPart		230577	1					
ANR	230877	Identifier	pWildcard		230577	0					
ANR	230878	Identifier	pszDomainPart		230577	1					
ANR	230879	Argument	pWildcard -> lenDomainPart		230577	2					
ANR	230880	PtrMemberAccess	pWildcard -> lenDomainPart		230577	0					
ANR	230881	Identifier	pWildcard		230577	0					
ANR	230882	Identifier	lenDomainPart		230577	1					
ANR	230883	CompoundStatement		65:93:1890:1890	230577	1					
ANR	230884	ExpressionStatement	* pbIsMatching = 0	449:5:12514:12531	230577	0	True				
ANR	230885	AssignmentExpression	* pbIsMatching = 0		230577	0		=			
ANR	230886	UnaryOperationExpression	* pbIsMatching		230577	0					
ANR	230887	UnaryOperator	*		230577	0					
ANR	230888	Identifier	pbIsMatching		230577	1					
ANR	230889	PrimaryExpression	0		230577	1					
ANR	230890	ExpressionStatement	FINALIZE	450:5:12538:12546	230577	1	True				
ANR	230891	Identifier	FINALIZE		230577	0					
ANR	230892	BreakStatement	break ;	452:4:12558:12563	230577	11	True				
ANR	230893	Label	case PEER_WILDCARD_MATCH_ALL :	453:3:12568:12596	230577	12	True				
ANR	230894	Identifier	PEER_WILDCARD_MATCH_ALL		230577	0					
ANR	230895	BreakStatement	break ;	455:4:12644:12649	230577	13	True				
ANR	230896	Label	case PEER_WILDCARD_EMPTY_COMPONENT :	456:3:12654:12688	230577	14	True				
ANR	230897	Identifier	PEER_WILDCARD_EMPTY_COMPONENT		230577	0					
ANR	230898	IfStatement	if ( pC - pStart > 0 )		230577	15					
ANR	230899	Condition	pC - pStart > 0	457:7:12697:12711	230577	0	True				
ANR	230900	RelationalExpression	pC - pStart > 0		230577	0		>			
ANR	230901	AdditiveExpression	pC - pStart		230577	0		-			
ANR	230902	Identifier	pC		230577	0					
ANR	230903	Identifier	pStart		230577	1					
ANR	230904	PrimaryExpression	0		230577	1					
ANR	230905	CompoundStatement		74:24:2097:2097	230577	1					
ANR	230906	ExpressionStatement	* pbIsMatching = 0	459:5:12773:12790	230577	0	True				
ANR	230907	AssignmentExpression	* pbIsMatching = 0		230577	0		=			
ANR	230908	UnaryOperationExpression	* pbIsMatching		230577	0					
ANR	230909	UnaryOperator	*		230577	0					
ANR	230910	Identifier	pbIsMatching		230577	1					
ANR	230911	PrimaryExpression	0		230577	1					
ANR	230912	ExpressionStatement	FINALIZE	460:5:12797:12805	230577	1	True				
ANR	230913	Identifier	FINALIZE		230577	0					
ANR	230914	BreakStatement	break ;	462:4:12817:12822	230577	16	True				
ANR	230915	ExpressionStatement	pWildcard = pWildcard -> pNext	464:2:12830:12859	230577	4	True				
ANR	230916	AssignmentExpression	pWildcard = pWildcard -> pNext		230577	0		=			
ANR	230917	Identifier	pWildcard		230577	0					
ANR	230918	PtrMemberAccess	pWildcard -> pNext		230577	1					
ANR	230919	Identifier	pWildcard		230577	0					
ANR	230920	Identifier	pNext		230577	1					
ANR	230921	IfStatement	if ( * pC == '.' )		230577	5					
ANR	230922	Condition	* pC == '.'	467:5:12961:12970	230577	0	True				
ANR	230923	EqualityExpression	* pC == '.'		230577	0		==			
ANR	230924	UnaryOperationExpression	* pC		230577	0					
ANR	230925	UnaryOperator	*		230577	0					
ANR	230926	Identifier	pC		230577	1					
ANR	230927	PrimaryExpression	'.'		230577	1					
ANR	230928	ExpressionStatement	++ pC	468:3:12976:12980	230577	1	True				
ANR	230929	UnaryExpression	++ pC		230577	0					
ANR	230930	IncDec	++		230577	0					
ANR	230931	Identifier	pC		230577	1					
ANR	230932	IfStatement	if ( pWildcard != NULL )		230577	13					
ANR	230933	Condition	pWildcard != NULL	471:4:12990:13006	230577	0	True				
ANR	230934	EqualityExpression	pWildcard != NULL		230577	0		!=			
ANR	230935	Identifier	pWildcard		230577	0					
ANR	230936	Identifier	NULL		230577	1					
ANR	230937	CompoundStatement		88:23:2392:2392	230577	1					
ANR	230938	ExpressionStatement	* pbIsMatching = 0	475:2:13113:13130	230577	0	True				
ANR	230939	AssignmentExpression	* pbIsMatching = 0		230577	0		=			
ANR	230940	UnaryOperationExpression	* pbIsMatching		230577	0					
ANR	230941	UnaryOperator	*		230577	0					
ANR	230942	Identifier	pbIsMatching		230577	1					
ANR	230943	PrimaryExpression	0		230577	1					
ANR	230944	ExpressionStatement	FINALIZE	476:2:13134:13142	230577	1	True				
ANR	230945	Identifier	FINALIZE		230577	0					
ANR	230946	ExpressionStatement	* pbIsMatching = 1	479:1:13149:13166	230577	14	True				
ANR	230947	AssignmentExpression	* pbIsMatching = 1		230577	0		=			
ANR	230948	UnaryOperationExpression	* pbIsMatching		230577	0					
ANR	230949	UnaryOperator	*		230577	0					
ANR	230950	Identifier	pbIsMatching		230577	1					
ANR	230951	PrimaryExpression	1		230577	1					
ANR	230952	Label	finalize_it :	481:0:13200:13211	230577	15	True				
ANR	230953	Identifier	finalize_it		230577	0					
ANR	230954	ExpressionStatement	RETiRet	482:1:13214:13221	230577	16	True				
ANR	230955	Identifier	RETiRet		230577	0					
ANR	230956	ReturnType	static rsRetVal		230577	1					
ANR	230957	Identifier	PermittedPeerWildcardMatch		230577	2					
ANR	230958	ParameterList	"permittedPeers_t * pPeer , uchar * pszNameToMatch , int * pbIsMatching"		230577	3					
ANR	230959	Parameter	permittedPeers_t * pPeer	383:27:10549:10571	230577	0	True				
ANR	230960	ParameterType	permittedPeers_t *		230577	0					
ANR	230961	Identifier	pPeer		230577	1					
ANR	230962	Parameter	uchar * pszNameToMatch	383:52:10574:10594	230577	1	True				
ANR	230963	ParameterType	uchar *		230577	0					
ANR	230964	Identifier	pszNameToMatch		230577	1					
ANR	230965	Parameter	int * pbIsMatching	383:75:10597:10613	230577	2	True				
ANR	230966	ParameterType	int *		230577	0					
ANR	230967	Identifier	pbIsMatching		230577	1					
ANR	230968	CFGEntryNode	ENTRY		230577		True				
ANR	230969	CFGExitNode	EXIT		230577		True				
ANR	230970	Symbol	pszNameToMatch		230577						
ANR	230971	Symbol	PERM_PEER_TYPE_UNDECIDED		230577						
ANR	230972	Symbol	pWildcard		230577						
ANR	230973	Symbol	PERM_PEER_TYPE_PLAIN		230577						
ANR	230974	Symbol	* pbIsMatching		230577						
ANR	230975	Symbol	* pPeer		230577						
ANR	230976	Symbol	strncmp		230577						
ANR	230977	Symbol	pC		230577						
ANR	230978	Symbol	* iName		230577						
ANR	230979	Symbol	* pStart		230577						
ANR	230980	Symbol	* pWildcard -> pszDomainPart		230577						
ANR	230981	Symbol	pbIsMatching		230577						
ANR	230982	Symbol	* iWildcard		230577						
ANR	230983	Symbol	* pC		230577						
ANR	230984	Symbol	strcmp		230577						
ANR	230985	Symbol	pPeer -> pWildcardRoot		230577						
ANR	230986	Symbol	pPeer		230577						
ANR	230987	Symbol	iWildcard		230577						
ANR	230988	Symbol	pPeer -> etryType		230577						
ANR	230989	Symbol	NULL		230577						
ANR	230990	Symbol	* pWildcard		230577						
ANR	230991	Symbol	pWildcard -> wildcardType		230577						
ANR	230992	Symbol	pWildcard -> pNext		230577						
ANR	230993	Symbol	pPeer -> pszID		230577						
ANR	230994	Symbol	pWildcard -> pszDomainPart		230577						
ANR	230995	Symbol	pStart		230577						
ANR	230996	Symbol	iName		230577						
ANR	230997	Symbol	pWildcard -> lenDomainPart		230577						
ANR	230998	Symbol	* * pWildcard		230577						
ANR	230999	Function	MaskIP6	491:0:13374:13672							
ANR	231000	FunctionDef	"MaskIP6 (struct in6_addr * addr , uint8_t bits)"		230999	0					
ANR	231001	CompoundStatement		491:58:13432:13672	230999	0					
ANR	231002	Statement	register	492:1:13435:13442	230999	0	True				
ANR	231003	IdentifierDeclStatement	uint8_t i ;	492:10:13444:13453	230999	1	True				
ANR	231004	IdentifierDecl	i		230999	0					
ANR	231005	IdentifierDeclType	uint8_t		230999	0					
ANR	231006	Identifier	i		230999	1					
ANR	231007	ExpressionStatement	assert ( addr != NULL )	494:1:13458:13479	230999	2	True				
ANR	231008	CallExpression	assert ( addr != NULL )		230999	0					
ANR	231009	Callee	assert		230999	0					
ANR	231010	Identifier	assert		230999	0					
ANR	231011	ArgumentList	addr != NULL		230999	1					
ANR	231012	Argument	addr != NULL		230999	0					
ANR	231013	EqualityExpression	addr != NULL		230999	0		!=			
ANR	231014	Identifier	addr		230999	0					
ANR	231015	Identifier	NULL		230999	1					
ANR	231016	ExpressionStatement	assert ( bits <= 128 )	495:1:13482:13502	230999	3	True				
ANR	231017	CallExpression	assert ( bits <= 128 )		230999	0					
ANR	231018	Callee	assert		230999	0					
ANR	231019	Identifier	assert		230999	0					
ANR	231020	ArgumentList	bits <= 128		230999	1					
ANR	231021	Argument	bits <= 128		230999	0					
ANR	231022	RelationalExpression	bits <= 128		230999	0		<=			
ANR	231023	Identifier	bits		230999	0					
ANR	231024	PrimaryExpression	128		230999	1					
ANR	231025	ExpressionStatement	i = bits / 32	497:1:13507:13518	230999	4	True				
ANR	231026	AssignmentExpression	i = bits / 32		230999	0		=			
ANR	231027	Identifier	i		230999	0					
ANR	231028	MultiplicativeExpression	bits / 32		230999	1		/			
ANR	231029	Identifier	bits		230999	0					
ANR	231030	PrimaryExpression	32		230999	1					
ANR	231031	IfStatement	if ( bits % 32 )		230999	5					
ANR	231032	Condition	bits % 32	498:5:13525:13531	230999	0	True				
ANR	231033	MultiplicativeExpression	bits % 32		230999	0		%			
ANR	231034	Identifier	bits		230999	0					
ANR	231035	PrimaryExpression	32		230999	1					
ANR	231036	ExpressionStatement	addr -> s6_addr32 [ i ++ ] &= htonl ( 0xffffffff << ( 32 - ( bits % 32 ) ) )	499:2:13536:13599	230999	1	True				
ANR	231037	AssignmentExpression	addr -> s6_addr32 [ i ++ ] &= htonl ( 0xffffffff << ( 32 - ( bits % 32 ) ) )		230999	0		&=			
ANR	231038	ArrayIndexing	addr -> s6_addr32 [ i ++ ]		230999	0					
ANR	231039	PtrMemberAccess	addr -> s6_addr32		230999	0					
ANR	231040	Identifier	addr		230999	0					
ANR	231041	Identifier	s6_addr32		230999	1					
ANR	231042	PostIncDecOperationExpression	i ++		230999	1					
ANR	231043	Identifier	i		230999	0					
ANR	231044	IncDec	++		230999	1					
ANR	231045	CallExpression	htonl ( 0xffffffff << ( 32 - ( bits % 32 ) ) )		230999	1					
ANR	231046	Callee	htonl		230999	0					
ANR	231047	Identifier	htonl		230999	0					
ANR	231048	ArgumentList	0xffffffff << ( 32 - ( bits % 32 ) )		230999	1					
ANR	231049	Argument	0xffffffff << ( 32 - ( bits % 32 ) )		230999	0					
ANR	231050	ShiftExpression	0xffffffff << ( 32 - ( bits % 32 ) )		230999	0		<<			
ANR	231051	PrimaryExpression	0xffffffff		230999	0					
ANR	231052	AdditiveExpression	32 - ( bits % 32 )		230999	1		-			
ANR	231053	PrimaryExpression	32		230999	0					
ANR	231054	MultiplicativeExpression	bits % 32		230999	1		%			
ANR	231055	Identifier	bits		230999	0					
ANR	231056	PrimaryExpression	32		230999	1					
ANR	231057	ForStatement	for ( ; i < ( sizeof addr -> s6_addr32 ) / 4 ; i ++ )		230999	6					
ANR	231058	Condition	i < ( sizeof addr -> s6_addr32 ) / 4	500:8:13609:13638	230999	0	True				
ANR	231059	RelationalExpression	i < ( sizeof addr -> s6_addr32 ) / 4		230999	0		<			
ANR	231060	Identifier	i		230999	0					
ANR	231061	MultiplicativeExpression	( sizeof addr -> s6_addr32 ) / 4		230999	1		/			
ANR	231062	SizeofExpression	sizeof addr -> s6_addr32		230999	0					
ANR	231063	Sizeof	sizeof		230999	0					
ANR	231064	PtrMemberAccess	addr -> s6_addr32		230999	1					
ANR	231065	Identifier	addr		230999	0					
ANR	231066	Identifier	s6_addr32		230999	1					
ANR	231067	PrimaryExpression	4		230999	1					
ANR	231068	PostIncDecOperationExpression	i ++	500:40:13641:13643	230999	1	True				
ANR	231069	Identifier	i		230999	0					
ANR	231070	IncDec	++		230999	1					
ANR	231071	ExpressionStatement	addr -> s6_addr32 [ i ] = 0	501:2:13648:13670	230999	2	True				
ANR	231072	AssignmentExpression	addr -> s6_addr32 [ i ] = 0		230999	0		=			
ANR	231073	ArrayIndexing	addr -> s6_addr32 [ i ]		230999	0					
ANR	231074	PtrMemberAccess	addr -> s6_addr32		230999	0					
ANR	231075	Identifier	addr		230999	0					
ANR	231076	Identifier	s6_addr32		230999	1					
ANR	231077	Identifier	i		230999	1					
ANR	231078	PrimaryExpression	0		230999	1					
ANR	231079	ReturnType	static void		230999	1					
ANR	231080	Identifier	MaskIP6		230999	2					
ANR	231081	ParameterList	"struct in6_addr * addr , uint8_t bits"		230999	3					
ANR	231082	Parameter	struct in6_addr * addr	491:21:13395:13415	230999	0	True				
ANR	231083	ParameterType	struct in6_addr *		230999	0					
ANR	231084	Identifier	addr		230999	1					
ANR	231085	Parameter	uint8_t bits	491:44:13418:13429	230999	1	True				
ANR	231086	ParameterType	uint8_t		230999	0					
ANR	231087	Identifier	bits		230999	1					
ANR	231088	CFGEntryNode	ENTRY		230999		True				
ANR	231089	CFGExitNode	EXIT		230999		True				
ANR	231090	Symbol	NULL		230999						
ANR	231091	Symbol	* i		230999						
ANR	231092	Symbol	* addr -> s6_addr32		230999						
ANR	231093	Symbol	bits		230999						
ANR	231094	Symbol	i		230999						
ANR	231095	Symbol	* * addr		230999						
ANR	231096	Symbol	* addr		230999						
ANR	231097	Symbol	addr		230999						
ANR	231098	Symbol	addr -> s6_addr32		230999						
ANR	231099	Symbol	htonl		230999						
ANR	231100	Function	MaskIP4	504:0:13675:13836							
ANR	231101	FunctionDef	"MaskIP4 (struct in_addr * addr , uint8_t bits)"		231100	0					
ANR	231102	CompoundStatement		504:58:13733:13836	231100	0					
ANR	231103	ExpressionStatement	assert ( addr != NULL )	506:1:13738:13759	231100	0	True				
ANR	231104	CallExpression	assert ( addr != NULL )		231100	0					
ANR	231105	Callee	assert		231100	0					
ANR	231106	Identifier	assert		231100	0					
ANR	231107	ArgumentList	addr != NULL		231100	1					
ANR	231108	Argument	addr != NULL		231100	0					
ANR	231109	EqualityExpression	addr != NULL		231100	0		!=			
ANR	231110	Identifier	addr		231100	0					
ANR	231111	Identifier	NULL		231100	1					
ANR	231112	ExpressionStatement	assert ( bits <= 32 )	507:1:13762:13781	231100	1	True				
ANR	231113	CallExpression	assert ( bits <= 32 )		231100	0					
ANR	231114	Callee	assert		231100	0					
ANR	231115	Identifier	assert		231100	0					
ANR	231116	ArgumentList	bits <= 32		231100	1					
ANR	231117	Argument	bits <= 32		231100	0					
ANR	231118	RelationalExpression	bits <= 32		231100	0		<=			
ANR	231119	Identifier	bits		231100	0					
ANR	231120	PrimaryExpression	32		231100	1					
ANR	231121	ExpressionStatement	addr -> s_addr &= htonl ( 0xffffffff << ( 32 - bits ) )	509:1:13786:13834	231100	2	True				
ANR	231122	AssignmentExpression	addr -> s_addr &= htonl ( 0xffffffff << ( 32 - bits ) )		231100	0		&=			
ANR	231123	PtrMemberAccess	addr -> s_addr		231100	0					
ANR	231124	Identifier	addr		231100	0					
ANR	231125	Identifier	s_addr		231100	1					
ANR	231126	CallExpression	htonl ( 0xffffffff << ( 32 - bits ) )		231100	1					
ANR	231127	Callee	htonl		231100	0					
ANR	231128	Identifier	htonl		231100	0					
ANR	231129	ArgumentList	0xffffffff << ( 32 - bits )		231100	1					
ANR	231130	Argument	0xffffffff << ( 32 - bits )		231100	0					
ANR	231131	ShiftExpression	0xffffffff << ( 32 - bits )		231100	0		<<			
ANR	231132	PrimaryExpression	0xffffffff		231100	0					
ANR	231133	AdditiveExpression	32 - bits		231100	1		-			
ANR	231134	PrimaryExpression	32		231100	0					
ANR	231135	Identifier	bits		231100	1					
ANR	231136	ReturnType	static void		231100	1					
ANR	231137	Identifier	MaskIP4		231100	2					
ANR	231138	ParameterList	"struct in_addr * addr , uint8_t bits"		231100	3					
ANR	231139	Parameter	struct in_addr * addr	504:21:13696:13716	231100	0	True				
ANR	231140	ParameterType	struct in_addr *		231100	0					
ANR	231141	Identifier	addr		231100	1					
ANR	231142	Parameter	uint8_t bits	504:44:13719:13730	231100	1	True				
ANR	231143	ParameterType	uint8_t		231100	0					
ANR	231144	Identifier	bits		231100	1					
ANR	231145	CFGEntryNode	ENTRY		231100		True				
ANR	231146	CFGExitNode	EXIT		231100		True				
ANR	231147	Symbol	addr -> s_addr		231100						
ANR	231148	Symbol	NULL		231100						
ANR	231149	Symbol	bits		231100						
ANR	231150	Symbol	* addr		231100						
ANR	231151	Symbol	addr		231100						
ANR	231152	Symbol	htonl		231100						
ANR	231153	Function	mygetnameinfo	521:0:14174:14584							
ANR	231154	FunctionDef	"mygetnameinfo (const struct sockaddr * sa , socklen_t salen , char * host , size_t hostlen , char * serv , size_t servlen , int flags)"		231153	0					
ANR	231155	CompoundStatement		525:0:14356:14584	231153	0					
ANR	231156	IdentifierDeclStatement	int iCancelStateSave ;	526:1:14359:14379	231153	0	True				
ANR	231157	IdentifierDecl	iCancelStateSave		231153	0					
ANR	231158	IdentifierDeclType	int		231153	0					
ANR	231159	Identifier	iCancelStateSave		231153	1					
ANR	231160	IdentifierDeclStatement	int i ;	527:1:14382:14387	231153	1	True				
ANR	231161	IdentifierDecl	i		231153	0					
ANR	231162	IdentifierDeclType	int		231153	0					
ANR	231163	Identifier	i		231153	1					
ANR	231164	ExpressionStatement	"pthread_setcancelstate ( PTHREAD_CANCEL_DISABLE , & iCancelStateSave )"	529:1:14391:14456	231153	2	True				
ANR	231165	CallExpression	"pthread_setcancelstate ( PTHREAD_CANCEL_DISABLE , & iCancelStateSave )"		231153	0					
ANR	231166	Callee	pthread_setcancelstate		231153	0					
ANR	231167	Identifier	pthread_setcancelstate		231153	0					
ANR	231168	ArgumentList	PTHREAD_CANCEL_DISABLE		231153	1					
ANR	231169	Argument	PTHREAD_CANCEL_DISABLE		231153	0					
ANR	231170	Identifier	PTHREAD_CANCEL_DISABLE		231153	0					
ANR	231171	Argument	& iCancelStateSave		231153	1					
ANR	231172	UnaryOperationExpression	& iCancelStateSave		231153	0					
ANR	231173	UnaryOperator	&		231153	0					
ANR	231174	Identifier	iCancelStateSave		231153	1					
ANR	231175	ExpressionStatement	"i = getnameinfo ( sa , salen , host , hostlen , serv , servlen , flags )"	530:1:14459:14522	231153	3	True				
ANR	231176	AssignmentExpression	"i = getnameinfo ( sa , salen , host , hostlen , serv , servlen , flags )"		231153	0		=			
ANR	231177	Identifier	i		231153	0					
ANR	231178	CallExpression	"getnameinfo ( sa , salen , host , hostlen , serv , servlen , flags )"		231153	1					
ANR	231179	Callee	getnameinfo		231153	0					
ANR	231180	Identifier	getnameinfo		231153	0					
ANR	231181	ArgumentList	sa		231153	1					
ANR	231182	Argument	sa		231153	0					
ANR	231183	Identifier	sa		231153	0					
ANR	231184	Argument	salen		231153	1					
ANR	231185	Identifier	salen		231153	0					
ANR	231186	Argument	host		231153	2					
ANR	231187	Identifier	host		231153	0					
ANR	231188	Argument	hostlen		231153	3					
ANR	231189	Identifier	hostlen		231153	0					
ANR	231190	Argument	serv		231153	4					
ANR	231191	Identifier	serv		231153	0					
ANR	231192	Argument	servlen		231153	5					
ANR	231193	Identifier	servlen		231153	0					
ANR	231194	Argument	flags		231153	6					
ANR	231195	Identifier	flags		231153	0					
ANR	231196	ExpressionStatement	"pthread_setcancelstate ( iCancelStateSave , NULL )"	531:1:14525:14571	231153	4	True				
ANR	231197	CallExpression	"pthread_setcancelstate ( iCancelStateSave , NULL )"		231153	0					
ANR	231198	Callee	pthread_setcancelstate		231153	0					
ANR	231199	Identifier	pthread_setcancelstate		231153	0					
ANR	231200	ArgumentList	iCancelStateSave		231153	1					
ANR	231201	Argument	iCancelStateSave		231153	0					
ANR	231202	Identifier	iCancelStateSave		231153	0					
ANR	231203	Argument	NULL		231153	1					
ANR	231204	Identifier	NULL		231153	0					
ANR	231205	ReturnStatement	return i ;	532:1:14574:14582	231153	5	True				
ANR	231206	Identifier	i		231153	0					
ANR	231207	ReturnType	static int		231153	1					
ANR	231208	Identifier	mygetnameinfo		231153	2					
ANR	231209	ParameterList	"const struct sockaddr * sa , socklen_t salen , char * host , size_t hostlen , char * serv , size_t servlen , int flags"		231153	3					
ANR	231210	Parameter	const struct sockaddr * sa	522:14:14199:14223	231153	0	True				
ANR	231211	ParameterType	const struct sockaddr *		231153	0					
ANR	231212	Identifier	sa		231153	1					
ANR	231213	Parameter	socklen_t salen	522:41:14226:14240	231153	1	True				
ANR	231214	ParameterType	socklen_t		231153	0					
ANR	231215	Identifier	salen		231153	1					
ANR	231216	Parameter	char * host	523:23:14266:14275	231153	2	True				
ANR	231217	ParameterType	char *		231153	0					
ANR	231218	Identifier	host		231153	1					
ANR	231219	Parameter	size_t hostlen	523:35:14278:14291	231153	3	True				
ANR	231220	ParameterType	size_t		231153	0					
ANR	231221	Identifier	hostlen		231153	1					
ANR	231222	Parameter	char * serv	524:23:14317:14326	231153	4	True				
ANR	231223	ParameterType	char *		231153	0					
ANR	231224	Identifier	serv		231153	1					
ANR	231225	Parameter	size_t servlen	524:35:14329:14342	231153	5	True				
ANR	231226	ParameterType	size_t		231153	0					
ANR	231227	Identifier	servlen		231153	1					
ANR	231228	Parameter	int flags	524:51:14345:14353	231153	6	True				
ANR	231229	ParameterType	int		231153	0					
ANR	231230	Identifier	flags		231153	1					
ANR	231231	CFGEntryNode	ENTRY		231153		True				
ANR	231232	CFGExitNode	EXIT		231153		True				
ANR	231233	Symbol	serv		231153						
ANR	231234	Symbol	NULL		231153						
ANR	231235	Symbol	salen		231153						
ANR	231236	Symbol	& iCancelStateSave		231153						
ANR	231237	Symbol	flags		231153						
ANR	231238	Symbol	i		231153						
ANR	231239	Symbol	sa		231153						
ANR	231240	Symbol	hostlen		231153						
ANR	231241	Symbol	getnameinfo		231153						
ANR	231242	Symbol	iCancelStateSave		231153						
ANR	231243	Symbol	host		231153						
ANR	231244	Symbol	PTHREAD_CANCEL_DISABLE		231153						
ANR	231245	Symbol	servlen		231153						
ANR	231246	Function	AddAllowedSenderEntry	543:0:14906:15622							
ANR	231247	FunctionDef	"AddAllowedSenderEntry (struct AllowedSenders * * ppRoot , struct AllowedSenders * * ppLast , struct NetAddr * iAllow , uint8_t iSignificantBits)"		231246	0					
ANR	231248	CompoundStatement		545:0:15073:15622	231246	0					
ANR	231249	IdentifierDeclStatement	struct AllowedSenders * pEntry = NULL ;	546:1:15076:15112	231246	0	True				
ANR	231250	IdentifierDecl	* pEntry = NULL		231246	0					
ANR	231251	IdentifierDeclType	struct AllowedSenders *		231246	0					
ANR	231252	Identifier	pEntry		231246	1					
ANR	231253	AssignmentExpression	* pEntry = NULL		231246	2		=			
ANR	231254	Identifier	NULL		231246	0					
ANR	231255	Identifier	NULL		231246	1					
ANR	231256	ExpressionStatement	assert ( ppRoot != NULL )	548:1:15116:15138	231246	1	True				
ANR	231257	CallExpression	assert ( ppRoot != NULL )		231246	0					
ANR	231258	Callee	assert		231246	0					
ANR	231259	Identifier	assert		231246	0					
ANR	231260	ArgumentList	ppRoot != NULL		231246	1					
ANR	231261	Argument	ppRoot != NULL		231246	0					
ANR	231262	EqualityExpression	ppRoot != NULL		231246	0		!=			
ANR	231263	Identifier	ppRoot		231246	0					
ANR	231264	Identifier	NULL		231246	1					
ANR	231265	ExpressionStatement	assert ( ppLast != NULL )	549:1:15141:15163	231246	2	True				
ANR	231266	CallExpression	assert ( ppLast != NULL )		231246	0					
ANR	231267	Callee	assert		231246	0					
ANR	231268	Identifier	assert		231246	0					
ANR	231269	ArgumentList	ppLast != NULL		231246	1					
ANR	231270	Argument	ppLast != NULL		231246	0					
ANR	231271	EqualityExpression	ppLast != NULL		231246	0		!=			
ANR	231272	Identifier	ppLast		231246	0					
ANR	231273	Identifier	NULL		231246	1					
ANR	231274	ExpressionStatement	assert ( iAllow != NULL )	550:1:15166:15188	231246	3	True				
ANR	231275	CallExpression	assert ( iAllow != NULL )		231246	0					
ANR	231276	Callee	assert		231246	0					
ANR	231277	Identifier	assert		231246	0					
ANR	231278	ArgumentList	iAllow != NULL		231246	1					
ANR	231279	Argument	iAllow != NULL		231246	0					
ANR	231280	EqualityExpression	iAllow != NULL		231246	0		!=			
ANR	231281	Identifier	iAllow		231246	0					
ANR	231282	Identifier	NULL		231246	1					
ANR	231283	IfStatement	"if ( ( pEntry = ( struct AllowedSenders * ) calloc ( 1 , sizeof ( struct AllowedSenders ) ) ) == NULL )"		231246	4					
ANR	231284	Condition	"( pEntry = ( struct AllowedSenders * ) calloc ( 1 , sizeof ( struct AllowedSenders ) ) ) == NULL"	552:4:15195:15278	231246	0	True				
ANR	231285	EqualityExpression	"( pEntry = ( struct AllowedSenders * ) calloc ( 1 , sizeof ( struct AllowedSenders ) ) ) == NULL"		231246	0		==			
ANR	231286	AssignmentExpression	"pEntry = ( struct AllowedSenders * ) calloc ( 1 , sizeof ( struct AllowedSenders ) )"		231246	0		=			
ANR	231287	Identifier	pEntry		231246	0					
ANR	231288	CastExpression	"( struct AllowedSenders * ) calloc ( 1 , sizeof ( struct AllowedSenders ) )"		231246	1					
ANR	231289	CastTarget	struct AllowedSenders *		231246	0					
ANR	231290	CallExpression	"calloc ( 1 , sizeof ( struct AllowedSenders ) )"		231246	1					
ANR	231291	Callee	calloc		231246	0					
ANR	231292	Identifier	calloc		231246	0					
ANR	231293	ArgumentList	1		231246	1					
ANR	231294	Argument	1		231246	0					
ANR	231295	PrimaryExpression	1		231246	0					
ANR	231296	Argument	sizeof ( struct AllowedSenders )		231246	1					
ANR	231297	SizeofExpression	sizeof ( struct AllowedSenders )		231246	0					
ANR	231298	Sizeof	sizeof		231246	0					
ANR	231299	SizeofOperand	struct AllowedSenders		231246	1					
ANR	231300	Identifier	NULL		231246	1					
ANR	231301	CompoundStatement		8:90:207:207	231246	1					
ANR	231302	ReturnStatement	return RS_RET_OUT_OF_MEMORY ;	553:2:15285:15312	231246	0	True				
ANR	231303	Identifier	RS_RET_OUT_OF_MEMORY		231246	0					
ANR	231304	ExpressionStatement	"memcpy ( & ( pEntry -> allowedSender ) , iAllow , sizeof ( struct NetAddr ) )"	556:1:15345:15410	231246	5	True				
ANR	231305	CallExpression	"memcpy ( & ( pEntry -> allowedSender ) , iAllow , sizeof ( struct NetAddr ) )"		231246	0					
ANR	231306	Callee	memcpy		231246	0					
ANR	231307	Identifier	memcpy		231246	0					
ANR	231308	ArgumentList	& ( pEntry -> allowedSender )		231246	1					
ANR	231309	Argument	& ( pEntry -> allowedSender )		231246	0					
ANR	231310	UnaryOperationExpression	& ( pEntry -> allowedSender )		231246	0					
ANR	231311	UnaryOperator	&		231246	0					
ANR	231312	PtrMemberAccess	pEntry -> allowedSender		231246	1					
ANR	231313	Identifier	pEntry		231246	0					
ANR	231314	Identifier	allowedSender		231246	1					
ANR	231315	Argument	iAllow		231246	1					
ANR	231316	Identifier	iAllow		231246	0					
ANR	231317	Argument	sizeof ( struct NetAddr )		231246	2					
ANR	231318	SizeofExpression	sizeof ( struct NetAddr )		231246	0					
ANR	231319	Sizeof	sizeof		231246	0					
ANR	231320	SizeofOperand	struct NetAddr		231246	1					
ANR	231321	ExpressionStatement	pEntry -> pNext = NULL	557:1:15413:15433	231246	6	True				
ANR	231322	AssignmentExpression	pEntry -> pNext = NULL		231246	0		=			
ANR	231323	PtrMemberAccess	pEntry -> pNext		231246	0					
ANR	231324	Identifier	pEntry		231246	0					
ANR	231325	Identifier	pNext		231246	1					
ANR	231326	Identifier	NULL		231246	1					
ANR	231327	ExpressionStatement	pEntry -> SignificantBits = iSignificantBits	558:1:15436:15478	231246	7	True				
ANR	231328	AssignmentExpression	pEntry -> SignificantBits = iSignificantBits		231246	0		=			
ANR	231329	PtrMemberAccess	pEntry -> SignificantBits		231246	0					
ANR	231330	Identifier	pEntry		231246	0					
ANR	231331	Identifier	SignificantBits		231246	1					
ANR	231332	Identifier	iSignificantBits		231246	1					
ANR	231333	IfStatement	if ( * ppRoot == NULL )		231246	8					
ANR	231334	Condition	* ppRoot == NULL	561:4:15501:15515	231246	0	True				
ANR	231335	EqualityExpression	* ppRoot == NULL		231246	0		==			
ANR	231336	UnaryOperationExpression	* ppRoot		231246	0					
ANR	231337	UnaryOperator	*		231246	0					
ANR	231338	Identifier	ppRoot		231246	1					
ANR	231339	Identifier	NULL		231246	1					
ANR	231340	CompoundStatement		17:21:444:444	231246	1					
ANR	231341	ExpressionStatement	* ppRoot = pEntry	562:2:15522:15538	231246	0	True				
ANR	231342	AssignmentExpression	* ppRoot = pEntry		231246	0		=			
ANR	231343	UnaryOperationExpression	* ppRoot		231246	0					
ANR	231344	UnaryOperator	*		231246	0					
ANR	231345	Identifier	ppRoot		231246	1					
ANR	231346	Identifier	pEntry		231246	1					
ANR	231347	ElseStatement	else		231246	0					
ANR	231348	CompoundStatement		19:8:474:474	231246	0					
ANR	231349	ExpressionStatement	( * ppLast ) -> pNext = pEntry	564:2:15552:15577	231246	0	True				
ANR	231350	AssignmentExpression	( * ppLast ) -> pNext = pEntry		231246	0		=			
ANR	231351	PtrMemberAccess	( * ppLast ) -> pNext		231246	0					
ANR	231352	UnaryOperationExpression	* ppLast		231246	0					
ANR	231353	UnaryOperator	*		231246	0					
ANR	231354	Identifier	ppLast		231246	1					
ANR	231355	Identifier	pNext		231246	1					
ANR	231356	Identifier	pEntry		231246	1					
ANR	231357	ExpressionStatement	* ppLast = pEntry	566:1:15583:15599	231246	9	True				
ANR	231358	AssignmentExpression	* ppLast = pEntry		231246	0		=			
ANR	231359	UnaryOperationExpression	* ppLast		231246	0					
ANR	231360	UnaryOperator	*		231246	0					
ANR	231361	Identifier	ppLast		231246	1					
ANR	231362	Identifier	pEntry		231246	1					
ANR	231363	ReturnStatement	return RS_RET_OK ;	568:1:15604:15620	231246	10	True				
ANR	231364	Identifier	RS_RET_OK		231246	0					
ANR	231365	ReturnType	static rsRetVal		231246	1					
ANR	231366	Identifier	AddAllowedSenderEntry		231246	2					
ANR	231367	ParameterList	"struct AllowedSenders * * ppRoot , struct AllowedSenders * * ppLast , struct NetAddr * iAllow , uint8_t iSignificantBits"		231246	3					
ANR	231368	Parameter	struct AllowedSenders * * ppRoot	543:38:14944:14973	231246	0	True				
ANR	231369	ParameterType	struct AllowedSenders * *		231246	0					
ANR	231370	Identifier	ppRoot		231246	1					
ANR	231371	Parameter	struct AllowedSenders * * ppLast	543:70:14976:15005	231246	1	True				
ANR	231372	ParameterType	struct AllowedSenders * *		231246	0					
ANR	231373	Identifier	ppLast		231246	1					
ANR	231374	Parameter	struct NetAddr * iAllow	544:15:15023:15044	231246	2	True				
ANR	231375	ParameterType	struct NetAddr *		231246	0					
ANR	231376	Identifier	iAllow		231246	1					
ANR	231377	Parameter	uint8_t iSignificantBits	544:39:15047:15070	231246	3	True				
ANR	231378	ParameterType	uint8_t		231246	0					
ANR	231379	Identifier	iSignificantBits		231246	1					
ANR	231380	CFGEntryNode	ENTRY		231246		True				
ANR	231381	CFGExitNode	EXIT		231246		True				
ANR	231382	Symbol	* * ppLast		231246						
ANR	231383	Symbol	NULL		231246						
ANR	231384	Symbol	( * ppLast ) -> pNext		231246						
ANR	231385	Symbol	RS_RET_OK		231246						
ANR	231386	Symbol	* ppLast		231246						
ANR	231387	Symbol	calloc		231246						
ANR	231388	Symbol	& pEntry -> allowedSender		231246						
ANR	231389	Symbol	* pEntry		231246						
ANR	231390	Symbol	* ppRoot		231246						
ANR	231391	Symbol	ppRoot		231246						
ANR	231392	Symbol	iAllow		231246						
ANR	231393	Symbol	iSignificantBits		231246						
ANR	231394	Symbol	RS_RET_OUT_OF_MEMORY		231246						
ANR	231395	Symbol	ppLast		231246						
ANR	231396	Symbol	pEntry -> SignificantBits		231246						
ANR	231397	Symbol	pEntry		231246						
ANR	231398	Symbol	pEntry -> pNext		231246						
ANR	231399	Function	clearAllowedSenders	576:0:15870:16561							
ANR	231400	FunctionDef	clearAllowedSenders (uchar * pszType)		231399	0					
ANR	231401	CompoundStatement		578:0:15918:16561	231399	0					
ANR	231402	IdentifierDeclStatement	struct AllowedSenders * pPrev ;	579:1:15921:15949	231399	0	True				
ANR	231403	IdentifierDecl	* pPrev		231399	0					
ANR	231404	IdentifierDeclType	struct AllowedSenders *		231399	0					
ANR	231405	Identifier	pPrev		231399	1					
ANR	231406	IdentifierDeclStatement	struct AllowedSenders * pCurr = NULL ;	580:1:15952:15987	231399	1	True				
ANR	231407	IdentifierDecl	* pCurr = NULL		231399	0					
ANR	231408	IdentifierDeclType	struct AllowedSenders *		231399	0					
ANR	231409	Identifier	pCurr		231399	1					
ANR	231410	AssignmentExpression	* pCurr = NULL		231399	2		=			
ANR	231411	Identifier	NULL		231399	0					
ANR	231412	Identifier	NULL		231399	1					
ANR	231413	IfStatement	"if ( setAllowRoot ( & pCurr , pszType ) != RS_RET_OK )"		231399	2					
ANR	231414	Condition	"setAllowRoot ( & pCurr , pszType ) != RS_RET_OK"	582:4:15994:16035	231399	0	True				
ANR	231415	EqualityExpression	"setAllowRoot ( & pCurr , pszType ) != RS_RET_OK"		231399	0		!=			
ANR	231416	CallExpression	"setAllowRoot ( & pCurr , pszType )"		231399	0					
ANR	231417	Callee	setAllowRoot		231399	0					
ANR	231418	Identifier	setAllowRoot		231399	0					
ANR	231419	ArgumentList	& pCurr		231399	1					
ANR	231420	Argument	& pCurr		231399	0					
ANR	231421	UnaryOperationExpression	& pCurr		231399	0					
ANR	231422	UnaryOperator	&		231399	0					
ANR	231423	Identifier	pCurr		231399	1					
ANR	231424	Argument	pszType		231399	1					
ANR	231425	Identifier	pszType		231399	0					
ANR	231426	Identifier	RS_RET_OK		231399	1					
ANR	231427	ReturnStatement	return ;	583:2:16040:16046	231399	1	True				
ANR	231428	WhileStatement	while ( pCurr != NULL )		231399	3					
ANR	231429	Condition	pCurr != NULL	585:7:16103:16115	231399	0	True				
ANR	231430	EqualityExpression	pCurr != NULL		231399	0		!=			
ANR	231431	Identifier	pCurr		231399	0					
ANR	231432	Identifier	NULL		231399	1					
ANR	231433	CompoundStatement		8:22:199:199	231399	1					
ANR	231434	ExpressionStatement	pPrev = pCurr	586:2:16122:16135	231399	0	True				
ANR	231435	AssignmentExpression	pPrev = pCurr		231399	0		=			
ANR	231436	Identifier	pPrev		231399	0					
ANR	231437	Identifier	pCurr		231399	1					
ANR	231438	ExpressionStatement	pCurr = pCurr -> pNext	587:2:16139:16159	231399	1	True				
ANR	231439	AssignmentExpression	pCurr = pCurr -> pNext		231399	0		=			
ANR	231440	Identifier	pCurr		231399	0					
ANR	231441	PtrMemberAccess	pCurr -> pNext		231399	1					
ANR	231442	Identifier	pCurr		231399	0					
ANR	231443	Identifier	pNext		231399	1					
ANR	231444	IfStatement	"if ( F_ISSET ( pPrev -> allowedSender . flags , ADDR_NAME ) )"		231399	2					
ANR	231445	Condition	"F_ISSET ( pPrev -> allowedSender . flags , ADDR_NAME )"	589:5:16223:16268	231399	0	True				
ANR	231446	CallExpression	"F_ISSET ( pPrev -> allowedSender . flags , ADDR_NAME )"		231399	0					
ANR	231447	Callee	F_ISSET		231399	0					
ANR	231448	Identifier	F_ISSET		231399	0					
ANR	231449	ArgumentList	pPrev -> allowedSender . flags		231399	1					
ANR	231450	Argument	pPrev -> allowedSender . flags		231399	0					
ANR	231451	MemberAccess	pPrev -> allowedSender . flags		231399	0					
ANR	231452	PtrMemberAccess	pPrev -> allowedSender		231399	0					
ANR	231453	Identifier	pPrev		231399	0					
ANR	231454	Identifier	allowedSender		231399	1					
ANR	231455	Identifier	flags		231399	1					
ANR	231456	Argument	ADDR_NAME		231399	1					
ANR	231457	Identifier	ADDR_NAME		231399	0					
ANR	231458	ExpressionStatement	free ( pPrev -> allowedSender . addr . HostWildcard )	590:3:16274:16318	231399	1	True				
ANR	231459	CallExpression	free ( pPrev -> allowedSender . addr . HostWildcard )		231399	0					
ANR	231460	Callee	free		231399	0					
ANR	231461	Identifier	free		231399	0					
ANR	231462	ArgumentList	pPrev -> allowedSender . addr . HostWildcard		231399	1					
ANR	231463	Argument	pPrev -> allowedSender . addr . HostWildcard		231399	0					
ANR	231464	MemberAccess	pPrev -> allowedSender . addr . HostWildcard		231399	0					
ANR	231465	MemberAccess	pPrev -> allowedSender . addr		231399	0					
ANR	231466	PtrMemberAccess	pPrev -> allowedSender		231399	0					
ANR	231467	Identifier	pPrev		231399	0					
ANR	231468	Identifier	allowedSender		231399	1					
ANR	231469	Identifier	addr		231399	1					
ANR	231470	Identifier	HostWildcard		231399	1					
ANR	231471	ElseStatement	else		231399	0					
ANR	231472	ExpressionStatement	free ( pPrev -> allowedSender . addr . NetAddr )	592:3:16330:16369	231399	0	True				
ANR	231473	CallExpression	free ( pPrev -> allowedSender . addr . NetAddr )		231399	0					
ANR	231474	Callee	free		231399	0					
ANR	231475	Identifier	free		231399	0					
ANR	231476	ArgumentList	pPrev -> allowedSender . addr . NetAddr		231399	1					
ANR	231477	Argument	pPrev -> allowedSender . addr . NetAddr		231399	0					
ANR	231478	MemberAccess	pPrev -> allowedSender . addr . NetAddr		231399	0					
ANR	231479	MemberAccess	pPrev -> allowedSender . addr		231399	0					
ANR	231480	PtrMemberAccess	pPrev -> allowedSender		231399	0					
ANR	231481	Identifier	pPrev		231399	0					
ANR	231482	Identifier	allowedSender		231399	1					
ANR	231483	Identifier	addr		231399	1					
ANR	231484	Identifier	NetAddr		231399	1					
ANR	231485	ExpressionStatement	free ( pPrev )	593:2:16373:16384	231399	3	True				
ANR	231486	CallExpression	free ( pPrev )		231399	0					
ANR	231487	Callee	free		231399	0					
ANR	231488	Identifier	free		231399	0					
ANR	231489	ArgumentList	pPrev		231399	1					
ANR	231490	Argument	pPrev		231399	0					
ANR	231491	Identifier	pPrev		231399	0					
ANR	231492	ExpressionStatement	reinitAllowRoot ( pszType )	599:1:16535:16559	231399	4	True				
ANR	231493	CallExpression	reinitAllowRoot ( pszType )		231399	0					
ANR	231494	Callee	reinitAllowRoot		231399	0					
ANR	231495	Identifier	reinitAllowRoot		231399	0					
ANR	231496	ArgumentList	pszType		231399	1					
ANR	231497	Argument	pszType		231399	0					
ANR	231498	Identifier	pszType		231399	0					
ANR	231499	ReturnType	static void		231399	1					
ANR	231500	Identifier	clearAllowedSenders		231399	2					
ANR	231501	ParameterList	uchar * pszType		231399	3					
ANR	231502	Parameter	uchar * pszType	577:20:15902:15915	231399	0	True				
ANR	231503	ParameterType	uchar *		231399	0					
ANR	231504	Identifier	pszType		231399	1					
ANR	231505	CFGEntryNode	ENTRY		231399		True				
ANR	231506	CFGExitNode	EXIT		231399		True				
ANR	231507	Symbol	NULL		231399						
ANR	231508	Symbol	F_ISSET		231399						
ANR	231509	Symbol	setAllowRoot		231399						
ANR	231510	Symbol	RS_RET_OK		231399						
ANR	231511	Symbol	pPrev -> allowedSender . addr . NetAddr		231399						
ANR	231512	Symbol	pszType		231399						
ANR	231513	Symbol	* pCurr		231399						
ANR	231514	Symbol	pPrev -> allowedSender . flags		231399						
ANR	231515	Symbol	pCurr		231399						
ANR	231516	Symbol	pPrev -> allowedSender . addr . HostWildcard		231399						
ANR	231517	Symbol	pCurr -> pNext		231399						
ANR	231518	Symbol	pPrev -> allowedSender . addr		231399						
ANR	231519	Symbol	pPrev		231399						
ANR	231520	Symbol	pPrev -> allowedSender		231399						
ANR	231521	Symbol	& pCurr		231399						
ANR	231522	Symbol	* pPrev		231399						
ANR	231523	Symbol	ADDR_NAME		231399						
ANR	231524	Function	AddAllowedSender	613:0:17050:22752							
ANR	231525	FunctionDef	"AddAllowedSender (struct AllowedSenders * * ppRoot , struct AllowedSenders * * ppLast , struct NetAddr * iAllow , uint8_t iSignificantBits)"		231524	0					
ANR	231526	CompoundStatement		615:0:17207:22752	231524	0					
ANR	231527	ExpressionStatement	DEFiRet	616:1:17210:17217	231524	0	True				
ANR	231528	Identifier	DEFiRet		231524	0					
ANR	231529	ExpressionStatement	assert ( ppRoot != NULL )	618:1:17221:17243	231524	1	True				
ANR	231530	CallExpression	assert ( ppRoot != NULL )		231524	0					
ANR	231531	Callee	assert		231524	0					
ANR	231532	Identifier	assert		231524	0					
ANR	231533	ArgumentList	ppRoot != NULL		231524	1					
ANR	231534	Argument	ppRoot != NULL		231524	0					
ANR	231535	EqualityExpression	ppRoot != NULL		231524	0		!=			
ANR	231536	Identifier	ppRoot		231524	0					
ANR	231537	Identifier	NULL		231524	1					
ANR	231538	ExpressionStatement	assert ( ppLast != NULL )	619:1:17246:17268	231524	2	True				
ANR	231539	CallExpression	assert ( ppLast != NULL )		231524	0					
ANR	231540	Callee	assert		231524	0					
ANR	231541	Identifier	assert		231524	0					
ANR	231542	ArgumentList	ppLast != NULL		231524	1					
ANR	231543	Argument	ppLast != NULL		231524	0					
ANR	231544	EqualityExpression	ppLast != NULL		231524	0		!=			
ANR	231545	Identifier	ppLast		231524	0					
ANR	231546	Identifier	NULL		231524	1					
ANR	231547	ExpressionStatement	assert ( iAllow != NULL )	620:1:17271:17293	231524	3	True				
ANR	231548	CallExpression	assert ( iAllow != NULL )		231524	0					
ANR	231549	Callee	assert		231524	0					
ANR	231550	Identifier	assert		231524	0					
ANR	231551	ArgumentList	iAllow != NULL		231524	1					
ANR	231552	Argument	iAllow != NULL		231524	0					
ANR	231553	EqualityExpression	iAllow != NULL		231524	0		!=			
ANR	231554	Identifier	iAllow		231524	0					
ANR	231555	Identifier	NULL		231524	1					
ANR	231556	IfStatement	"if ( ! F_ISSET ( iAllow -> flags , ADDR_NAME ) )"		231524	4					
ANR	231557	Condition	"! F_ISSET ( iAllow -> flags , ADDR_NAME )"	622:5:17301:17334	231524	0	True				
ANR	231558	UnaryOperationExpression	"! F_ISSET ( iAllow -> flags , ADDR_NAME )"		231524	0					
ANR	231559	UnaryOperator	!		231524	0					
ANR	231560	CallExpression	"F_ISSET ( iAllow -> flags , ADDR_NAME )"		231524	1					
ANR	231561	Callee	F_ISSET		231524	0					
ANR	231562	Identifier	F_ISSET		231524	0					
ANR	231563	ArgumentList	iAllow -> flags		231524	1					
ANR	231564	Argument	iAllow -> flags		231524	0					
ANR	231565	PtrMemberAccess	iAllow -> flags		231524	0					
ANR	231566	Identifier	iAllow		231524	0					
ANR	231567	Identifier	flags		231524	1					
ANR	231568	Argument	ADDR_NAME		231524	1					
ANR	231569	Identifier	ADDR_NAME		231524	0					
ANR	231570	CompoundStatement		8:41:129:129	231524	1					
ANR	231571	IfStatement	if ( iSignificantBits == 0 )		231524	0					
ANR	231572	Condition	iSignificantBits == 0	623:5:17344:17364	231524	0	True				
ANR	231573	EqualityExpression	iSignificantBits == 0		231524	0		==			
ANR	231574	Identifier	iSignificantBits		231524	0					
ANR	231575	PrimaryExpression	0		231524	1					
ANR	231576	Statement	errmsg	627:3:17454:17459	231524	1	True				
ANR	231577	Statement	.	627:9:17460:17460	231524	1	True				
ANR	231578	Statement	LogError	627:10:17461:17468	231524	2	True				
ANR	231579	Statement	(	627:18:17469:17469	231524	3	True				
ANR	231580	Statement	0	627:19:17470:17470	231524	4	True				
ANR	231581	Statement	","	627:20:17471:17471	231524	5	True				
ANR	231582	Statement	NO_ERRCODE	627:22:17473:17482	231524	6	True				
ANR	231583	Statement	","	627:32:17483:17483	231524	7	True				
ANR	231584	Statement	"""You can not specify 0 bits of the netmask, this would """	627:34:17485:17540	231524	8	True				
ANR	231585	Statement	"""match ALL systems. If you really intend to do that, """	628:5:17547:17600	231524	9	True				
ANR	231586	Statement	"""remove all $AllowedSender directives."""	629:5:17607:17645	231524	10	True				
ANR	231587	Statement	)	629:44:17646:17646	231524	11	True				
ANR	231588	ExpressionStatement		629:45:17647:17647	231524	12	True				
ANR	231589	SwitchStatement	switch ( iAllow -> addr . NetAddr -> sa_family )		231524	13					
ANR	231590	Condition	iAllow -> addr . NetAddr -> sa_family	631:10:17662:17692	231524	0	True				
ANR	231591	PtrMemberAccess	iAllow -> addr . NetAddr -> sa_family		231524	0					
ANR	231592	MemberAccess	iAllow -> addr . NetAddr		231524	0					
ANR	231593	PtrMemberAccess	iAllow -> addr		231524	0					
ANR	231594	Identifier	iAllow		231524	0					
ANR	231595	Identifier	addr		231524	1					
ANR	231596	Identifier	NetAddr		231524	1					
ANR	231597	Identifier	sa_family		231524	1					
ANR	231598	CompoundStatement		17:43:487:487	231524	1					
ANR	231599	Label	case AF_INET :	632:2:17699:17711	231524	0	True				
ANR	231600	Identifier	AF_INET		231524	0					
ANR	231601	IfStatement	if ( ( iSignificantBits < 1 ) || ( iSignificantBits > 32 ) )		231524	1					
ANR	231602	Condition	( iSignificantBits < 1 ) || ( iSignificantBits > 32 )	633:6:17719:17767	231524	0	True				
ANR	231603	OrExpression	( iSignificantBits < 1 ) || ( iSignificantBits > 32 )		231524	0		||			
ANR	231604	RelationalExpression	iSignificantBits < 1		231524	0		<			
ANR	231605	Identifier	iSignificantBits		231524	0					
ANR	231606	PrimaryExpression	1		231524	1					
ANR	231607	RelationalExpression	iSignificantBits > 32		231524	1		>			
ANR	231608	Identifier	iSignificantBits		231524	0					
ANR	231609	PrimaryExpression	32		231524	1					
ANR	231610	CompoundStatement		19:57:562:562	231524	1					
ANR	231611	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""Invalid number of bits (%d) in IPv4 address - adjusted to 32"" , ( int ) iSignificantBits )"	634:4:17776:17902	231524	0	True				
ANR	231612	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""Invalid number of bits (%d) in IPv4 address - adjusted to 32"" , ( int ) iSignificantBits )"		231524	0					
ANR	231613	Callee	errmsg . LogError		231524	0					
ANR	231614	MemberAccess	errmsg . LogError		231524	0					
ANR	231615	Identifier	errmsg		231524	0					
ANR	231616	Identifier	LogError		231524	1					
ANR	231617	ArgumentList	0		231524	1					
ANR	231618	Argument	0		231524	0					
ANR	231619	PrimaryExpression	0		231524	0					
ANR	231620	Argument	NO_ERRCODE		231524	1					
ANR	231621	Identifier	NO_ERRCODE		231524	0					
ANR	231622	Argument	"""Invalid number of bits (%d) in IPv4 address - adjusted to 32"""		231524	2					
ANR	231623	PrimaryExpression	"""Invalid number of bits (%d) in IPv4 address - adjusted to 32"""		231524	0					
ANR	231624	Argument	( int ) iSignificantBits		231524	3					
ANR	231625	CastExpression	( int ) iSignificantBits		231524	0					
ANR	231626	CastTarget	int		231524	0					
ANR	231627	Identifier	iSignificantBits		231524	1					
ANR	231628	ExpressionStatement	iSignificantBits = 32	636:4:17908:17929	231524	1	True				
ANR	231629	AssignmentExpression	iSignificantBits = 32		231524	0		=			
ANR	231630	Identifier	iSignificantBits		231524	0					
ANR	231631	PrimaryExpression	32		231524	1					
ANR	231632	ExpressionStatement	"MaskIP4 ( & ( SIN ( iAllow -> addr . NetAddr ) -> sin_addr ) , iSignificantBits )"	639:3:17943:18009	231524	2	True				
ANR	231633	CallExpression	"MaskIP4 ( & ( SIN ( iAllow -> addr . NetAddr ) -> sin_addr ) , iSignificantBits )"		231524	0					
ANR	231634	Callee	MaskIP4		231524	0					
ANR	231635	Identifier	MaskIP4		231524	0					
ANR	231636	ArgumentList	& ( SIN ( iAllow -> addr . NetAddr ) -> sin_addr )		231524	1					
ANR	231637	Argument	& ( SIN ( iAllow -> addr . NetAddr ) -> sin_addr )		231524	0					
ANR	231638	UnaryOperationExpression	& ( SIN ( iAllow -> addr . NetAddr ) -> sin_addr )		231524	0					
ANR	231639	UnaryOperator	&		231524	0					
ANR	231640	PtrMemberAccess	SIN ( iAllow -> addr . NetAddr ) -> sin_addr		231524	1					
ANR	231641	CallExpression	SIN ( iAllow -> addr . NetAddr )		231524	0					
ANR	231642	Callee	SIN		231524	0					
ANR	231643	Identifier	SIN		231524	0					
ANR	231644	ArgumentList	iAllow -> addr . NetAddr		231524	1					
ANR	231645	Argument	iAllow -> addr . NetAddr		231524	0					
ANR	231646	MemberAccess	iAllow -> addr . NetAddr		231524	0					
ANR	231647	PtrMemberAccess	iAllow -> addr		231524	0					
ANR	231648	Identifier	iAllow		231524	0					
ANR	231649	Identifier	addr		231524	1					
ANR	231650	Identifier	NetAddr		231524	1					
ANR	231651	Identifier	sin_addr		231524	1					
ANR	231652	Argument	iSignificantBits		231524	1					
ANR	231653	Identifier	iSignificantBits		231524	0					
ANR	231654	BreakStatement	break ;	640:3:18014:18019	231524	3	True				
ANR	231655	Label	case AF_INET6 :	641:2:18023:18036	231524	4	True				
ANR	231656	Identifier	AF_INET6		231524	0					
ANR	231657	IfStatement	if ( ( iSignificantBits < 1 ) || ( iSignificantBits > 128 ) )		231524	5					
ANR	231658	Condition	( iSignificantBits < 1 ) || ( iSignificantBits > 128 )	642:6:18044:18093	231524	0	True				
ANR	231659	OrExpression	( iSignificantBits < 1 ) || ( iSignificantBits > 128 )		231524	0		||			
ANR	231660	RelationalExpression	iSignificantBits < 1		231524	0		<			
ANR	231661	Identifier	iSignificantBits		231524	0					
ANR	231662	PrimaryExpression	1		231524	1					
ANR	231663	RelationalExpression	iSignificantBits > 128		231524	1		>			
ANR	231664	Identifier	iSignificantBits		231524	0					
ANR	231665	PrimaryExpression	128		231524	1					
ANR	231666	CompoundStatement		28:58:888:888	231524	1					
ANR	231667	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""Invalid number of bits (%d) in IPv6 address - adjusted to 128"" , iSignificantBits )"	643:4:18102:18224	231524	0	True				
ANR	231668	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""Invalid number of bits (%d) in IPv6 address - adjusted to 128"" , iSignificantBits )"		231524	0					
ANR	231669	Callee	errmsg . LogError		231524	0					
ANR	231670	MemberAccess	errmsg . LogError		231524	0					
ANR	231671	Identifier	errmsg		231524	0					
ANR	231672	Identifier	LogError		231524	1					
ANR	231673	ArgumentList	0		231524	1					
ANR	231674	Argument	0		231524	0					
ANR	231675	PrimaryExpression	0		231524	0					
ANR	231676	Argument	NO_ERRCODE		231524	1					
ANR	231677	Identifier	NO_ERRCODE		231524	0					
ANR	231678	Argument	"""Invalid number of bits (%d) in IPv6 address - adjusted to 128"""		231524	2					
ANR	231679	PrimaryExpression	"""Invalid number of bits (%d) in IPv6 address - adjusted to 128"""		231524	0					
ANR	231680	Argument	iSignificantBits		231524	3					
ANR	231681	Identifier	iSignificantBits		231524	0					
ANR	231682	ExpressionStatement	iSignificantBits = 128	645:4:18230:18252	231524	1	True				
ANR	231683	AssignmentExpression	iSignificantBits = 128		231524	0		=			
ANR	231684	Identifier	iSignificantBits		231524	0					
ANR	231685	PrimaryExpression	128		231524	1					
ANR	231686	ExpressionStatement	"MaskIP6 ( & ( SIN6 ( iAllow -> addr . NetAddr ) -> sin6_addr ) , iSignificantBits )"	648:3:18263:18331	231524	6	True				
ANR	231687	CallExpression	"MaskIP6 ( & ( SIN6 ( iAllow -> addr . NetAddr ) -> sin6_addr ) , iSignificantBits )"		231524	0					
ANR	231688	Callee	MaskIP6		231524	0					
ANR	231689	Identifier	MaskIP6		231524	0					
ANR	231690	ArgumentList	& ( SIN6 ( iAllow -> addr . NetAddr ) -> sin6_addr )		231524	1					
ANR	231691	Argument	& ( SIN6 ( iAllow -> addr . NetAddr ) -> sin6_addr )		231524	0					
ANR	231692	UnaryOperationExpression	& ( SIN6 ( iAllow -> addr . NetAddr ) -> sin6_addr )		231524	0					
ANR	231693	UnaryOperator	&		231524	0					
ANR	231694	PtrMemberAccess	SIN6 ( iAllow -> addr . NetAddr ) -> sin6_addr		231524	1					
ANR	231695	CallExpression	SIN6 ( iAllow -> addr . NetAddr )		231524	0					
ANR	231696	Callee	SIN6		231524	0					
ANR	231697	Identifier	SIN6		231524	0					
ANR	231698	ArgumentList	iAllow -> addr . NetAddr		231524	1					
ANR	231699	Argument	iAllow -> addr . NetAddr		231524	0					
ANR	231700	MemberAccess	iAllow -> addr . NetAddr		231524	0					
ANR	231701	PtrMemberAccess	iAllow -> addr		231524	0					
ANR	231702	Identifier	iAllow		231524	0					
ANR	231703	Identifier	addr		231524	1					
ANR	231704	Identifier	NetAddr		231524	1					
ANR	231705	Identifier	sin6_addr		231524	1					
ANR	231706	Argument	iSignificantBits		231524	1					
ANR	231707	Identifier	iSignificantBits		231524	0					
ANR	231708	BreakStatement	break ;	649:3:18336:18341	231524	7	True				
ANR	231709	Label	default :	650:2:18345:18352	231524	8	True				
ANR	231710	Identifier	default		231524	0					
ANR	231711	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""Internal error caused AllowedSender to be ignored, AF = %d"" , iAllow -> addr . NetAddr -> sa_family )"	658:3:18738:18871	231524	9	True				
ANR	231712	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""Internal error caused AllowedSender to be ignored, AF = %d"" , iAllow -> addr . NetAddr -> sa_family )"		231524	0					
ANR	231713	Callee	errmsg . LogError		231524	0					
ANR	231714	MemberAccess	errmsg . LogError		231524	0					
ANR	231715	Identifier	errmsg		231524	0					
ANR	231716	Identifier	LogError		231524	1					
ANR	231717	ArgumentList	0		231524	1					
ANR	231718	Argument	0		231524	0					
ANR	231719	PrimaryExpression	0		231524	0					
ANR	231720	Argument	NO_ERRCODE		231524	1					
ANR	231721	Identifier	NO_ERRCODE		231524	0					
ANR	231722	Argument	"""Internal error caused AllowedSender to be ignored, AF = %d"""		231524	2					
ANR	231723	PrimaryExpression	"""Internal error caused AllowedSender to be ignored, AF = %d"""		231524	0					
ANR	231724	Argument	iAllow -> addr . NetAddr -> sa_family		231524	3					
ANR	231725	PtrMemberAccess	iAllow -> addr . NetAddr -> sa_family		231524	0					
ANR	231726	MemberAccess	iAllow -> addr . NetAddr		231524	0					
ANR	231727	PtrMemberAccess	iAllow -> addr		231524	0					
ANR	231728	Identifier	iAllow		231524	0					
ANR	231729	Identifier	addr		231524	1					
ANR	231730	Identifier	NetAddr		231524	1					
ANR	231731	Identifier	sa_family		231524	1					
ANR	231732	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	660:3:18876:18902	231524	10	True				
ANR	231733	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		231524	0					
ANR	231734	Callee	ABORT_FINALIZE		231524	0					
ANR	231735	Identifier	ABORT_FINALIZE		231524	0					
ANR	231736	ArgumentList	RS_RET_ERR		231524	1					
ANR	231737	Argument	RS_RET_ERR		231524	0					
ANR	231738	Identifier	RS_RET_ERR		231524	0					
ANR	231739	ExpressionStatement	"iRet = AddAllowedSenderEntry ( ppRoot , ppLast , iAllow , iSignificantBits )"	663:2:18973:19043	231524	14	True				
ANR	231740	AssignmentExpression	"iRet = AddAllowedSenderEntry ( ppRoot , ppLast , iAllow , iSignificantBits )"		231524	0		=			
ANR	231741	Identifier	iRet		231524	0					
ANR	231742	CallExpression	"AddAllowedSenderEntry ( ppRoot , ppLast , iAllow , iSignificantBits )"		231524	1					
ANR	231743	Callee	AddAllowedSenderEntry		231524	0					
ANR	231744	Identifier	AddAllowedSenderEntry		231524	0					
ANR	231745	ArgumentList	ppRoot		231524	1					
ANR	231746	Argument	ppRoot		231524	0					
ANR	231747	Identifier	ppRoot		231524	0					
ANR	231748	Argument	ppLast		231524	1					
ANR	231749	Identifier	ppLast		231524	0					
ANR	231750	Argument	iAllow		231524	2					
ANR	231751	Identifier	iAllow		231524	0					
ANR	231752	Argument	iSignificantBits		231524	3					
ANR	231753	Identifier	iSignificantBits		231524	0					
ANR	231754	ElseStatement	else		231524	0					
ANR	231755	CompoundStatement		50:8:1845:1845	231524	0					
ANR	231756	IfStatement	if ( glbl . GetDisableDNS ( ) )		231524	0					
ANR	231757	Condition	glbl . GetDisableDNS ( )	666:5:19102:19121	231524	0	True				
ANR	231758	CallExpression	glbl . GetDisableDNS ( )		231524	0					
ANR	231759	Callee	glbl . GetDisableDNS		231524	0					
ANR	231760	MemberAccess	glbl . GetDisableDNS		231524	0					
ANR	231761	Identifier	glbl		231524	0					
ANR	231762	Identifier	GetDisableDNS		231524	1					
ANR	231763	ArgumentList			231524	1					
ANR	231764	CompoundStatement		52:27:1916:1916	231524	1					
ANR	231765	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""Ignoring hostname based ACLs because DNS is disabled."" )"	667:3:19129:19216	231524	0	True				
ANR	231766	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""Ignoring hostname based ACLs because DNS is disabled."" )"		231524	0					
ANR	231767	Callee	errmsg . LogError		231524	0					
ANR	231768	MemberAccess	errmsg . LogError		231524	0					
ANR	231769	Identifier	errmsg		231524	0					
ANR	231770	Identifier	LogError		231524	1					
ANR	231771	ArgumentList	0		231524	1					
ANR	231772	Argument	0		231524	0					
ANR	231773	PrimaryExpression	0		231524	0					
ANR	231774	Argument	NO_ERRCODE		231524	1					
ANR	231775	Identifier	NO_ERRCODE		231524	0					
ANR	231776	Argument	"""Ignoring hostname based ACLs because DNS is disabled."""		231524	2					
ANR	231777	PrimaryExpression	"""Ignoring hostname based ACLs because DNS is disabled."""		231524	0					
ANR	231778	ExpressionStatement	ABORT_FINALIZE ( RS_RET_OK )	668:3:19221:19246	231524	1	True				
ANR	231779	CallExpression	ABORT_FINALIZE ( RS_RET_OK )		231524	0					
ANR	231780	Callee	ABORT_FINALIZE		231524	0					
ANR	231781	Identifier	ABORT_FINALIZE		231524	0					
ANR	231782	ArgumentList	RS_RET_OK		231524	1					
ANR	231783	Argument	RS_RET_OK		231524	0					
ANR	231784	Identifier	RS_RET_OK		231524	0					
ANR	231785	IfStatement	"if ( ! strchr ( iAllow -> addr . HostWildcard , '*' ) && ! strchr ( iAllow -> addr . HostWildcard , '?' ) && ACLDontResolve == 0 )"		231524	1					
ANR	231786	Condition	"! strchr ( iAllow -> addr . HostWildcard , '*' ) && ! strchr ( iAllow -> addr . HostWildcard , '?' ) && ACLDontResolve == 0"	671:6:19261:19379	231524	0	True				
ANR	231787	AndExpression	"! strchr ( iAllow -> addr . HostWildcard , '*' ) && ! strchr ( iAllow -> addr . HostWildcard , '?' ) && ACLDontResolve == 0"		231524	0		&&			
ANR	231788	UnaryOperationExpression	"! strchr ( iAllow -> addr . HostWildcard , '*' )"		231524	0					
ANR	231789	UnaryOperator	!		231524	0					
ANR	231790	CallExpression	"strchr ( iAllow -> addr . HostWildcard , '*' )"		231524	1					
ANR	231791	Callee	strchr		231524	0					
ANR	231792	Identifier	strchr		231524	0					
ANR	231793	ArgumentList	iAllow -> addr . HostWildcard		231524	1					
ANR	231794	Argument	iAllow -> addr . HostWildcard		231524	0					
ANR	231795	MemberAccess	iAllow -> addr . HostWildcard		231524	0					
ANR	231796	PtrMemberAccess	iAllow -> addr		231524	0					
ANR	231797	Identifier	iAllow		231524	0					
ANR	231798	Identifier	addr		231524	1					
ANR	231799	Identifier	HostWildcard		231524	1					
ANR	231800	Argument	'*'		231524	1					
ANR	231801	PrimaryExpression	'*'		231524	0					
ANR	231802	AndExpression	"! strchr ( iAllow -> addr . HostWildcard , '?' ) && ACLDontResolve == 0"		231524	1		&&			
ANR	231803	UnaryOperationExpression	"! strchr ( iAllow -> addr . HostWildcard , '?' )"		231524	0					
ANR	231804	UnaryOperator	!		231524	0					
ANR	231805	CallExpression	"strchr ( iAllow -> addr . HostWildcard , '?' )"		231524	1					
ANR	231806	Callee	strchr		231524	0					
ANR	231807	Identifier	strchr		231524	0					
ANR	231808	ArgumentList	iAllow -> addr . HostWildcard		231524	1					
ANR	231809	Argument	iAllow -> addr . HostWildcard		231524	0					
ANR	231810	MemberAccess	iAllow -> addr . HostWildcard		231524	0					
ANR	231811	PtrMemberAccess	iAllow -> addr		231524	0					
ANR	231812	Identifier	iAllow		231524	0					
ANR	231813	Identifier	addr		231524	1					
ANR	231814	Identifier	HostWildcard		231524	1					
ANR	231815	Argument	'?'		231524	1					
ANR	231816	PrimaryExpression	'?'		231524	0					
ANR	231817	EqualityExpression	ACLDontResolve == 0		231524	1		==			
ANR	231818	Identifier	ACLDontResolve		231524	0					
ANR	231819	PrimaryExpression	0		231524	1					
ANR	231820	CompoundStatement		64:3:2322:2344	231524	1					
ANR	231821	IdentifierDeclStatement	"struct addrinfo hints , * res , * restmp ;"	677:3:19489:19525	231524	0	True				
ANR	231822	IdentifierDecl	hints		231524	0					
ANR	231823	IdentifierDeclType	struct addrinfo		231524	0					
ANR	231824	Identifier	hints		231524	1					
ANR	231825	IdentifierDecl	* res		231524	1					
ANR	231826	IdentifierDeclType	struct addrinfo *		231524	0					
ANR	231827	Identifier	res		231524	1					
ANR	231828	IdentifierDecl	* restmp		231524	2					
ANR	231829	IdentifierDeclType	struct addrinfo *		231524	0					
ANR	231830	Identifier	restmp		231524	1					
ANR	231831	IdentifierDeclStatement	struct NetAddr allowIP ;	678:3:19530:19552	231524	1	True				
ANR	231832	IdentifierDecl	allowIP		231524	0					
ANR	231833	IdentifierDeclType	struct NetAddr		231524	0					
ANR	231834	Identifier	allowIP		231524	1					
ANR	231835	ExpressionStatement	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"	680:3:19561:19605	231524	2	True				
ANR	231836	CallExpression	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"		231524	0					
ANR	231837	Callee	memset		231524	0					
ANR	231838	Identifier	memset		231524	0					
ANR	231839	ArgumentList	& hints		231524	1					
ANR	231840	Argument	& hints		231524	0					
ANR	231841	UnaryOperationExpression	& hints		231524	0					
ANR	231842	UnaryOperator	&		231524	0					
ANR	231843	Identifier	hints		231524	1					
ANR	231844	Argument	0		231524	1					
ANR	231845	PrimaryExpression	0		231524	0					
ANR	231846	Argument	sizeof ( struct addrinfo )		231524	2					
ANR	231847	SizeofExpression	sizeof ( struct addrinfo )		231524	0					
ANR	231848	Sizeof	sizeof		231524	0					
ANR	231849	SizeofOperand	struct addrinfo		231524	1					
ANR	231850	ExpressionStatement	hints . ai_family = AF_UNSPEC	681:3:19610:19637	231524	3	True				
ANR	231851	AssignmentExpression	hints . ai_family = AF_UNSPEC		231524	0		=			
ANR	231852	MemberAccess	hints . ai_family		231524	0					
ANR	231853	Identifier	hints		231524	0					
ANR	231854	Identifier	ai_family		231524	1					
ANR	231855	Identifier	AF_UNSPEC		231524	1					
ANR	231856	ExpressionStatement	hints . ai_socktype = SOCK_DGRAM	682:3:19642:19672	231524	4	True				
ANR	231857	AssignmentExpression	hints . ai_socktype = SOCK_DGRAM		231524	0		=			
ANR	231858	MemberAccess	hints . ai_socktype		231524	0					
ANR	231859	Identifier	hints		231524	0					
ANR	231860	Identifier	ai_socktype		231524	1					
ANR	231861	Identifier	SOCK_DGRAM		231524	1					
ANR	231862	Statement	ifdef	683:4:19678:19682	231524	5	True				
ANR	231863	Statement	AI_ADDRCONFIG	683:10:19684:19696	231524	6	True				
ANR	231864	ExpressionStatement	hints . ai_flags = AI_ADDRCONFIG	684:4:19747:19778	231524	7	True				
ANR	231865	AssignmentExpression	hints . ai_flags = AI_ADDRCONFIG		231524	0		=			
ANR	231866	MemberAccess	hints . ai_flags		231524	0					
ANR	231867	Identifier	hints		231524	0					
ANR	231868	Identifier	ai_flags		231524	1					
ANR	231869	Identifier	AI_ADDRCONFIG		231524	1					
ANR	231870	Statement	endif	685:4:19784:19788	231524	8	True				
ANR	231871	IfStatement	"if ( getaddrinfo ( iAllow -> addr . HostWildcard , NULL , & hints , & res ) != 0 )"		231524	9					
ANR	231872	Condition	"getaddrinfo ( iAllow -> addr . HostWildcard , NULL , & hints , & res ) != 0"	687:7:19798:19861	231524	0	True				
ANR	231873	EqualityExpression	"getaddrinfo ( iAllow -> addr . HostWildcard , NULL , & hints , & res ) != 0"		231524	0		!=			
ANR	231874	CallExpression	"getaddrinfo ( iAllow -> addr . HostWildcard , NULL , & hints , & res )"		231524	0					
ANR	231875	Callee	getaddrinfo		231524	0					
ANR	231876	Identifier	getaddrinfo		231524	0					
ANR	231877	ArgumentList	iAllow -> addr . HostWildcard		231524	1					
ANR	231878	Argument	iAllow -> addr . HostWildcard		231524	0					
ANR	231879	MemberAccess	iAllow -> addr . HostWildcard		231524	0					
ANR	231880	PtrMemberAccess	iAllow -> addr		231524	0					
ANR	231881	Identifier	iAllow		231524	0					
ANR	231882	Identifier	addr		231524	1					
ANR	231883	Identifier	HostWildcard		231524	1					
ANR	231884	Argument	NULL		231524	1					
ANR	231885	Identifier	NULL		231524	0					
ANR	231886	Argument	& hints		231524	2					
ANR	231887	UnaryOperationExpression	& hints		231524	0					
ANR	231888	UnaryOperator	&		231524	0					
ANR	231889	Identifier	hints		231524	1					
ANR	231890	Argument	& res		231524	3					
ANR	231891	UnaryOperationExpression	& res		231524	0					
ANR	231892	UnaryOperator	&		231524	0					
ANR	231893	Identifier	res		231524	1					
ANR	231894	PrimaryExpression	0		231524	1					
ANR	231895	CompoundStatement		73:73:2656:2656	231524	1					
ANR	231896	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""DNS error: Can't resolve \\""%s\\"""" , iAllow -> addr . HostWildcard )"	688:11:19877:19969	231524	0	True				
ANR	231897	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""DNS error: Can't resolve \\""%s\\"""" , iAllow -> addr . HostWildcard )"		231524	0					
ANR	231898	Callee	errmsg . LogError		231524	0					
ANR	231899	MemberAccess	errmsg . LogError		231524	0					
ANR	231900	Identifier	errmsg		231524	0					
ANR	231901	Identifier	LogError		231524	1					
ANR	231902	ArgumentList	0		231524	1					
ANR	231903	Argument	0		231524	0					
ANR	231904	PrimaryExpression	0		231524	0					
ANR	231905	Argument	NO_ERRCODE		231524	1					
ANR	231906	Identifier	NO_ERRCODE		231524	0					
ANR	231907	Argument	"""DNS error: Can't resolve \\""%s\\"""""		231524	2					
ANR	231908	PrimaryExpression	"""DNS error: Can't resolve \\""%s\\"""""		231524	0					
ANR	231909	Argument	iAllow -> addr . HostWildcard		231524	3					
ANR	231910	MemberAccess	iAllow -> addr . HostWildcard		231524	0					
ANR	231911	PtrMemberAccess	iAllow -> addr		231524	0					
ANR	231912	Identifier	iAllow		231524	0					
ANR	231913	Identifier	addr		231524	1					
ANR	231914	Identifier	HostWildcard		231524	1					
ANR	231915	IfStatement	if ( ACLAddHostnameOnFail )		231524	1					
ANR	231916	Condition	ACLAddHostnameOnFail	690:8:19984:20003	231524	0	True				
ANR	231917	Identifier	ACLAddHostnameOnFail		231524	0					
ANR	231918	CompoundStatement		76:30:2798:2798	231524	1					
ANR	231919	Statement	errmsg	691:12:20020:20025	231524	0	True				
ANR	231920	Statement	.	691:18:20026:20026	231524	1	True				
ANR	231921	Statement	LogError	691:19:20027:20034	231524	2	True				
ANR	231922	Statement	(	691:27:20035:20035	231524	3	True				
ANR	231923	Statement	0	691:28:20036:20036	231524	4	True				
ANR	231924	Statement	","	691:29:20037:20037	231524	5	True				
ANR	231925	Statement	NO_ERRCODE	691:31:20039:20048	231524	6	True				
ANR	231926	Statement	","	691:41:20049:20049	231524	7	True				
ANR	231927	Statement	"""Adding hostname \\""%s\\"" to ACL as a wildcard """	691:43:20051:20096	231524	8	True				
ANR	231928	Statement	"""entry."""	692:5:20103:20110	231524	9	True				
ANR	231929	Statement	","	692:13:20111:20111	231524	10	True				
ANR	231930	Statement	iAllow	692:15:20113:20118	231524	11	True				
ANR	231931	Statement	->	692:21:20119:20120	231524	12	True				
ANR	231932	Statement	addr	692:23:20121:20124	231524	13	True				
ANR	231933	Statement	.	692:27:20125:20125	231524	14	True				
ANR	231934	Statement	HostWildcard	692:28:20126:20137	231524	15	True				
ANR	231935	Statement	)	692:40:20138:20138	231524	16	True				
ANR	231936	ExpressionStatement		692:41:20139:20139	231524	17	True				
ANR	231937	ExpressionStatement	"iRet = AddAllowedSenderEntry ( ppRoot , ppLast , iAllow , iSignificantBits )"	693:12:20153:20223	231524	18	True				
ANR	231938	AssignmentExpression	"iRet = AddAllowedSenderEntry ( ppRoot , ppLast , iAllow , iSignificantBits )"		231524	0		=			
ANR	231939	Identifier	iRet		231524	0					
ANR	231940	CallExpression	"AddAllowedSenderEntry ( ppRoot , ppLast , iAllow , iSignificantBits )"		231524	1					
ANR	231941	Callee	AddAllowedSenderEntry		231524	0					
ANR	231942	Identifier	AddAllowedSenderEntry		231524	0					
ANR	231943	ArgumentList	ppRoot		231524	1					
ANR	231944	Argument	ppRoot		231524	0					
ANR	231945	Identifier	ppRoot		231524	0					
ANR	231946	Argument	ppLast		231524	1					
ANR	231947	Identifier	ppLast		231524	0					
ANR	231948	Argument	iAllow		231524	2					
ANR	231949	Identifier	iAllow		231524	0					
ANR	231950	Argument	iSignificantBits		231524	3					
ANR	231951	Identifier	iSignificantBits		231524	0					
ANR	231952	ExpressionStatement	FINALIZE	694:5:20230:20238	231524	19	True				
ANR	231953	Identifier	FINALIZE		231524	0					
ANR	231954	ElseStatement	else		231524	0					
ANR	231955	CompoundStatement		81:11:3043:3043	231524	0					
ANR	231956	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""Hostname \\""%s\\"" WON\\'T be added to ACL."" , iAllow -> addr . HostWildcard )"	696:12:20265:20365	231524	0	True				
ANR	231957	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""Hostname \\""%s\\"" WON\\'T be added to ACL."" , iAllow -> addr . HostWildcard )"		231524	0					
ANR	231958	Callee	errmsg . LogError		231524	0					
ANR	231959	MemberAccess	errmsg . LogError		231524	0					
ANR	231960	Identifier	errmsg		231524	0					
ANR	231961	Identifier	LogError		231524	1					
ANR	231962	ArgumentList	0		231524	1					
ANR	231963	Argument	0		231524	0					
ANR	231964	PrimaryExpression	0		231524	0					
ANR	231965	Argument	NO_ERRCODE		231524	1					
ANR	231966	Identifier	NO_ERRCODE		231524	0					
ANR	231967	Argument	"""Hostname \\""%s\\"" WON\\'T be added to ACL."""		231524	2					
ANR	231968	PrimaryExpression	"""Hostname \\""%s\\"" WON\\'T be added to ACL."""		231524	0					
ANR	231969	Argument	iAllow -> addr . HostWildcard		231524	3					
ANR	231970	MemberAccess	iAllow -> addr . HostWildcard		231524	0					
ANR	231971	PtrMemberAccess	iAllow -> addr		231524	0					
ANR	231972	Identifier	iAllow		231524	0					
ANR	231973	Identifier	addr		231524	1					
ANR	231974	Identifier	HostWildcard		231524	1					
ANR	231975	ExpressionStatement	ABORT_FINALIZE ( RS_RET_NOENTRY )	697:12:20379:20409	231524	1	True				
ANR	231976	CallExpression	ABORT_FINALIZE ( RS_RET_NOENTRY )		231524	0					
ANR	231977	Callee	ABORT_FINALIZE		231524	0					
ANR	231978	Identifier	ABORT_FINALIZE		231524	0					
ANR	231979	ArgumentList	RS_RET_NOENTRY		231524	1					
ANR	231980	Argument	RS_RET_NOENTRY		231524	0					
ANR	231981	Identifier	RS_RET_NOENTRY		231524	0					
ANR	231982	ForStatement	for ( restmp = res ; res != NULL ; res = res -> ai_next )		231524	10					
ANR	231983	ForInit	restmp = res ;	701:8:20434:20447	231524	0	True				
ANR	231984	AssignmentExpression	restmp = res		231524	0		=			
ANR	231985	Identifier	restmp		231524	0					
ANR	231986	Identifier	res		231524	1					
ANR	231987	Condition	res != NULL	701:23:20449:20459	231524	1	True				
ANR	231988	EqualityExpression	res != NULL		231524	0		!=			
ANR	231989	Identifier	res		231524	0					
ANR	231990	Identifier	NULL		231524	1					
ANR	231991	AssignmentExpression	res = res -> ai_next	701:37:20463:20480	231524	2	True	=			
ANR	231992	Identifier	res		231524	0					
ANR	231993	PtrMemberAccess	res -> ai_next		231524	1					
ANR	231994	Identifier	res		231524	0					
ANR	231995	Identifier	ai_next		231524	1					
ANR	231996	CompoundStatement		87:57:3275:3275	231524	3					
ANR	231997	SwitchStatement	switch ( res -> ai_family )		231524	0					
ANR	231998	Condition	res -> ai_family	702:12:20497:20510	231524	0	True				
ANR	231999	PtrMemberAccess	res -> ai_family		231524	0					
ANR	232000	Identifier	res		231524	0					
ANR	232001	Identifier	ai_family		231524	1					
ANR	232002	CompoundStatement		88:28:3305:3305	231524	1					
ANR	232003	Label	case AF_INET :	703:4:20519:20531	231524	0	True				
ANR	232004	Identifier	AF_INET		231524	0					
ANR	232005	ExpressionStatement	iSignificantBits = 32	704:5:20553:20574	231524	1	True				
ANR	232006	AssignmentExpression	iSignificantBits = 32		231524	0		=			
ANR	232007	Identifier	iSignificantBits		231524	0					
ANR	232008	PrimaryExpression	32		231524	1					
ANR	232009	ExpressionStatement	allowIP . flags = 0	705:5:20581:20598	231524	2	True				
ANR	232010	AssignmentExpression	allowIP . flags = 0		231524	0		=			
ANR	232011	MemberAccess	allowIP . flags		231524	0					
ANR	232012	Identifier	allowIP		231524	0					
ANR	232013	Identifier	flags		231524	1					
ANR	232014	PrimaryExpression	0		231524	1					
ANR	232015	IfStatement	if ( ( allowIP . addr . NetAddr = MALLOC ( res -> ai_addrlen ) ) == NULL )		231524	3					
ANR	232016	Condition	( allowIP . addr . NetAddr = MALLOC ( res -> ai_addrlen ) ) == NULL	706:8:20608:20663	231524	0	True				
ANR	232017	EqualityExpression	( allowIP . addr . NetAddr = MALLOC ( res -> ai_addrlen ) ) == NULL		231524	0		==			
ANR	232018	AssignmentExpression	allowIP . addr . NetAddr = MALLOC ( res -> ai_addrlen )		231524	0		=			
ANR	232019	MemberAccess	allowIP . addr . NetAddr		231524	0					
ANR	232020	MemberAccess	allowIP . addr		231524	0					
ANR	232021	Identifier	allowIP		231524	0					
ANR	232022	Identifier	addr		231524	1					
ANR	232023	Identifier	NetAddr		231524	1					
ANR	232024	CallExpression	MALLOC ( res -> ai_addrlen )		231524	1					
ANR	232025	Callee	MALLOC		231524	0					
ANR	232026	Identifier	MALLOC		231524	0					
ANR	232027	ArgumentList	res -> ai_addrlen		231524	1					
ANR	232028	Argument	res -> ai_addrlen		231524	0					
ANR	232029	PtrMemberAccess	res -> ai_addrlen		231524	0					
ANR	232030	Identifier	res		231524	0					
ANR	232031	Identifier	ai_addrlen		231524	1					
ANR	232032	Identifier	NULL		231524	1					
ANR	232033	CompoundStatement		92:66:3458:3458	231524	1					
ANR	232034	ExpressionStatement	ABORT_FINALIZE ( RS_RET_OUT_OF_MEMORY )	707:6:20674:20710	231524	0	True				
ANR	232035	CallExpression	ABORT_FINALIZE ( RS_RET_OUT_OF_MEMORY )		231524	0					
ANR	232036	Callee	ABORT_FINALIZE		231524	0					
ANR	232037	Identifier	ABORT_FINALIZE		231524	0					
ANR	232038	ArgumentList	RS_RET_OUT_OF_MEMORY		231524	1					
ANR	232039	Argument	RS_RET_OUT_OF_MEMORY		231524	0					
ANR	232040	Identifier	RS_RET_OUT_OF_MEMORY		231524	0					
ANR	232041	ExpressionStatement	"memcpy ( allowIP . addr . NetAddr , res -> ai_addr , res -> ai_addrlen )"	709:5:20724:20783	231524	4	True				
ANR	232042	CallExpression	"memcpy ( allowIP . addr . NetAddr , res -> ai_addr , res -> ai_addrlen )"		231524	0					
ANR	232043	Callee	memcpy		231524	0					
ANR	232044	Identifier	memcpy		231524	0					
ANR	232045	ArgumentList	allowIP . addr . NetAddr		231524	1					
ANR	232046	Argument	allowIP . addr . NetAddr		231524	0					
ANR	232047	MemberAccess	allowIP . addr . NetAddr		231524	0					
ANR	232048	MemberAccess	allowIP . addr		231524	0					
ANR	232049	Identifier	allowIP		231524	0					
ANR	232050	Identifier	addr		231524	1					
ANR	232051	Identifier	NetAddr		231524	1					
ANR	232052	Argument	res -> ai_addr		231524	1					
ANR	232053	PtrMemberAccess	res -> ai_addr		231524	0					
ANR	232054	Identifier	res		231524	0					
ANR	232055	Identifier	ai_addr		231524	1					
ANR	232056	Argument	res -> ai_addrlen		231524	2					
ANR	232057	PtrMemberAccess	res -> ai_addrlen		231524	0					
ANR	232058	Identifier	res		231524	0					
ANR	232059	Identifier	ai_addrlen		231524	1					
ANR	232060	IfStatement	"if ( ( iRet = AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits ) ) != RS_RET_OK )"		231524	5					
ANR	232061	Condition	"( iRet = AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits ) ) != RS_RET_OK"	711:8:20799:20891	231524	0	True				
ANR	232062	EqualityExpression	"( iRet = AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits ) ) != RS_RET_OK"		231524	0		!=			
ANR	232063	AssignmentExpression	"iRet = AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits )"		231524	0		=			
ANR	232064	Identifier	iRet		231524	0					
ANR	232065	CallExpression	"AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits )"		231524	1					
ANR	232066	Callee	AddAllowedSenderEntry		231524	0					
ANR	232067	Identifier	AddAllowedSenderEntry		231524	0					
ANR	232068	ArgumentList	ppRoot		231524	1					
ANR	232069	Argument	ppRoot		231524	0					
ANR	232070	Identifier	ppRoot		231524	0					
ANR	232071	Argument	ppLast		231524	1					
ANR	232072	Identifier	ppLast		231524	0					
ANR	232073	Argument	& allowIP		231524	2					
ANR	232074	UnaryOperationExpression	& allowIP		231524	0					
ANR	232075	UnaryOperator	&		231524	0					
ANR	232076	Identifier	allowIP		231524	1					
ANR	232077	Argument	iSignificantBits		231524	3					
ANR	232078	Identifier	iSignificantBits		231524	0					
ANR	232079	Identifier	RS_RET_OK		231524	1					
ANR	232080	CompoundStatement		98:20:3686:3686	231524	1					
ANR	232081	ExpressionStatement	free ( allowIP . addr . NetAddr )	713:6:20902:20928	231524	0	True				
ANR	232082	CallExpression	free ( allowIP . addr . NetAddr )		231524	0					
ANR	232083	Callee	free		231524	0					
ANR	232084	Identifier	free		231524	0					
ANR	232085	ArgumentList	allowIP . addr . NetAddr		231524	1					
ANR	232086	Argument	allowIP . addr . NetAddr		231524	0					
ANR	232087	MemberAccess	allowIP . addr . NetAddr		231524	0					
ANR	232088	MemberAccess	allowIP . addr		231524	0					
ANR	232089	Identifier	allowIP		231524	0					
ANR	232090	Identifier	addr		231524	1					
ANR	232091	Identifier	NetAddr		231524	1					
ANR	232092	ExpressionStatement	FINALIZE	714:6:20936:20944	231524	1	True				
ANR	232093	Identifier	FINALIZE		231524	0					
ANR	232094	BreakStatement	break ;	716:5:20958:20963	231524	6	True				
ANR	232095	Label	case AF_INET6 :	717:4:20969:20982	231524	7	True				
ANR	232096	Identifier	AF_INET6		231524	0					
ANR	232097	IfStatement	if ( IN6_IS_ADDR_V4MAPPED ( & SIN6 ( res -> ai_addr ) -> sin6_addr ) )		231524	8					
ANR	232098	Condition	IN6_IS_ADDR_V4MAPPED ( & SIN6 ( res -> ai_addr ) -> sin6_addr )	718:8:21049:21101	231524	0	True				
ANR	232099	CallExpression	IN6_IS_ADDR_V4MAPPED ( & SIN6 ( res -> ai_addr ) -> sin6_addr )		231524	0					
ANR	232100	Callee	IN6_IS_ADDR_V4MAPPED		231524	0					
ANR	232101	Identifier	IN6_IS_ADDR_V4MAPPED		231524	0					
ANR	232102	ArgumentList	& SIN6 ( res -> ai_addr ) -> sin6_addr		231524	1					
ANR	232103	Argument	& SIN6 ( res -> ai_addr ) -> sin6_addr		231524	0					
ANR	232104	UnaryOperationExpression	& SIN6 ( res -> ai_addr ) -> sin6_addr		231524	0					
ANR	232105	UnaryOperator	&		231524	0					
ANR	232106	PtrMemberAccess	SIN6 ( res -> ai_addr ) -> sin6_addr		231524	1					
ANR	232107	CallExpression	SIN6 ( res -> ai_addr )		231524	0					
ANR	232108	Callee	SIN6		231524	0					
ANR	232109	Identifier	SIN6		231524	0					
ANR	232110	ArgumentList	res -> ai_addr		231524	1					
ANR	232111	Argument	res -> ai_addr		231524	0					
ANR	232112	PtrMemberAccess	res -> ai_addr		231524	0					
ANR	232113	Identifier	res		231524	0					
ANR	232114	Identifier	ai_addr		231524	1					
ANR	232115	Identifier	sin6_addr		231524	1					
ANR	232116	CompoundStatement		104:63:3896:3896	231524	1					
ANR	232117	ExpressionStatement	iSignificantBits = 32	721:6:21150:21171	231524	0	True				
ANR	232118	AssignmentExpression	iSignificantBits = 32		231524	0		=			
ANR	232119	Identifier	iSignificantBits		231524	0					
ANR	232120	PrimaryExpression	32		231524	1					
ANR	232121	ExpressionStatement	allowIP . flags = 0	722:6:21179:21196	231524	1	True				
ANR	232122	AssignmentExpression	allowIP . flags = 0		231524	0		=			
ANR	232123	MemberAccess	allowIP . flags		231524	0					
ANR	232124	Identifier	allowIP		231524	0					
ANR	232125	Identifier	flags		231524	1					
ANR	232126	PrimaryExpression	0		231524	1					
ANR	232127	IfStatement	if ( ( allowIP . addr . NetAddr = ( struct sockaddr * ) MALLOC ( sizeof ( struct sockaddr ) ) ) == NULL )		231524	2					
ANR	232128	Condition	( allowIP . addr . NetAddr = ( struct sockaddr * ) MALLOC ( sizeof ( struct sockaddr ) ) ) == NULL	723:9:21207:21300	231524	0	True				
ANR	232129	EqualityExpression	( allowIP . addr . NetAddr = ( struct sockaddr * ) MALLOC ( sizeof ( struct sockaddr ) ) ) == NULL		231524	0		==			
ANR	232130	AssignmentExpression	allowIP . addr . NetAddr = ( struct sockaddr * ) MALLOC ( sizeof ( struct sockaddr ) )		231524	0		=			
ANR	232131	MemberAccess	allowIP . addr . NetAddr		231524	0					
ANR	232132	MemberAccess	allowIP . addr		231524	0					
ANR	232133	Identifier	allowIP		231524	0					
ANR	232134	Identifier	addr		231524	1					
ANR	232135	Identifier	NetAddr		231524	1					
ANR	232136	CastExpression	( struct sockaddr * ) MALLOC ( sizeof ( struct sockaddr ) )		231524	1					
ANR	232137	CastTarget	struct sockaddr *		231524	0					
ANR	232138	CallExpression	MALLOC ( sizeof ( struct sockaddr ) )		231524	1					
ANR	232139	Callee	MALLOC		231524	0					
ANR	232140	Identifier	MALLOC		231524	0					
ANR	232141	ArgumentList	sizeof ( struct sockaddr )		231524	1					
ANR	232142	Argument	sizeof ( struct sockaddr )		231524	0					
ANR	232143	SizeofExpression	sizeof ( struct sockaddr )		231524	0					
ANR	232144	Sizeof	sizeof		231524	0					
ANR	232145	SizeofOperand	struct sockaddr		231524	1					
ANR	232146	Identifier	NULL		231524	1					
ANR	232147	CompoundStatement		110:19:4095:4095	231524	1					
ANR	232148	ExpressionStatement	ABORT_FINALIZE ( RS_RET_OUT_OF_MEMORY )	725:7:21312:21348	231524	0	True				
ANR	232149	CallExpression	ABORT_FINALIZE ( RS_RET_OUT_OF_MEMORY )		231524	0					
ANR	232150	Callee	ABORT_FINALIZE		231524	0					
ANR	232151	Identifier	ABORT_FINALIZE		231524	0					
ANR	232152	ArgumentList	RS_RET_OUT_OF_MEMORY		231524	1					
ANR	232153	Argument	RS_RET_OUT_OF_MEMORY		231524	0					
ANR	232154	Identifier	RS_RET_OUT_OF_MEMORY		231524	0					
ANR	232155	ExpressionStatement	SIN ( allowIP . addr . NetAddr ) -> sin_family = AF_INET	727:6:21364:21411	231524	3	True				
ANR	232156	AssignmentExpression	SIN ( allowIP . addr . NetAddr ) -> sin_family = AF_INET		231524	0		=			
ANR	232157	PtrMemberAccess	SIN ( allowIP . addr . NetAddr ) -> sin_family		231524	0					
ANR	232158	CallExpression	SIN ( allowIP . addr . NetAddr )		231524	0					
ANR	232159	Callee	SIN		231524	0					
ANR	232160	Identifier	SIN		231524	0					
ANR	232161	ArgumentList	allowIP . addr . NetAddr		231524	1					
ANR	232162	Argument	allowIP . addr . NetAddr		231524	0					
ANR	232163	MemberAccess	allowIP . addr . NetAddr		231524	0					
ANR	232164	MemberAccess	allowIP . addr		231524	0					
ANR	232165	Identifier	allowIP		231524	0					
ANR	232166	Identifier	addr		231524	1					
ANR	232167	Identifier	NetAddr		231524	1					
ANR	232168	Identifier	sin_family		231524	1					
ANR	232169	Identifier	AF_INET		231524	1					
ANR	232170	ExpressionStatement	SIN ( allowIP . addr . NetAddr ) -> sin_len = sizeof ( struct sockaddr_in )	729:48:21500:21567	231524	4	True				
ANR	232171	AssignmentExpression	SIN ( allowIP . addr . NetAddr ) -> sin_len = sizeof ( struct sockaddr_in )		231524	0		=			
ANR	232172	PtrMemberAccess	SIN ( allowIP . addr . NetAddr ) -> sin_len		231524	0					
ANR	232173	CallExpression	SIN ( allowIP . addr . NetAddr )		231524	0					
ANR	232174	Callee	SIN		231524	0					
ANR	232175	Identifier	SIN		231524	0					
ANR	232176	ArgumentList	allowIP . addr . NetAddr		231524	1					
ANR	232177	Argument	allowIP . addr . NetAddr		231524	0					
ANR	232178	MemberAccess	allowIP . addr . NetAddr		231524	0					
ANR	232179	MemberAccess	allowIP . addr		231524	0					
ANR	232180	Identifier	allowIP		231524	0					
ANR	232181	Identifier	addr		231524	1					
ANR	232182	Identifier	NetAddr		231524	1					
ANR	232183	Identifier	sin_len		231524	1					
ANR	232184	SizeofExpression	sizeof ( struct sockaddr_in )		231524	1					
ANR	232185	Sizeof	sizeof		231524	0					
ANR	232186	SizeofOperand	struct sockaddr_in		231524	1					
ANR	232187	ExpressionStatement	SIN ( allowIP . addr . NetAddr ) -> sin_port = 0	731:6:21582:21623	231524	5	True				
ANR	232188	AssignmentExpression	SIN ( allowIP . addr . NetAddr ) -> sin_port = 0		231524	0		=			
ANR	232189	PtrMemberAccess	SIN ( allowIP . addr . NetAddr ) -> sin_port		231524	0					
ANR	232190	CallExpression	SIN ( allowIP . addr . NetAddr )		231524	0					
ANR	232191	Callee	SIN		231524	0					
ANR	232192	Identifier	SIN		231524	0					
ANR	232193	ArgumentList	allowIP . addr . NetAddr		231524	1					
ANR	232194	Argument	allowIP . addr . NetAddr		231524	0					
ANR	232195	MemberAccess	allowIP . addr . NetAddr		231524	0					
ANR	232196	MemberAccess	allowIP . addr		231524	0					
ANR	232197	Identifier	allowIP		231524	0					
ANR	232198	Identifier	addr		231524	1					
ANR	232199	Identifier	NetAddr		231524	1					
ANR	232200	Identifier	sin_port		231524	1					
ANR	232201	PrimaryExpression	0		231524	1					
ANR	232202	ExpressionStatement	"memcpy ( & ( SIN ( allowIP . addr . NetAddr ) -> sin_addr . s_addr ) , & ( SIN6 ( res -> ai_addr ) -> sin6_addr . s6_addr32 [ 3 ] ) , sizeof ( in_addr_t ) )"	732:6:21631:21765	231524	6	True				
ANR	232203	CallExpression	"memcpy ( & ( SIN ( allowIP . addr . NetAddr ) -> sin_addr . s_addr ) , & ( SIN6 ( res -> ai_addr ) -> sin6_addr . s6_addr32 [ 3 ] ) , sizeof ( in_addr_t ) )"		231524	0					
ANR	232204	Callee	memcpy		231524	0					
ANR	232205	Identifier	memcpy		231524	0					
ANR	232206	ArgumentList	& ( SIN ( allowIP . addr . NetAddr ) -> sin_addr . s_addr )		231524	1					
ANR	232207	Argument	& ( SIN ( allowIP . addr . NetAddr ) -> sin_addr . s_addr )		231524	0					
ANR	232208	UnaryOperationExpression	& ( SIN ( allowIP . addr . NetAddr ) -> sin_addr . s_addr )		231524	0					
ANR	232209	UnaryOperator	&		231524	0					
ANR	232210	MemberAccess	SIN ( allowIP . addr . NetAddr ) -> sin_addr . s_addr		231524	1					
ANR	232211	PtrMemberAccess	SIN ( allowIP . addr . NetAddr ) -> sin_addr		231524	0					
ANR	232212	CallExpression	SIN ( allowIP . addr . NetAddr )		231524	0					
ANR	232213	Callee	SIN		231524	0					
ANR	232214	Identifier	SIN		231524	0					
ANR	232215	ArgumentList	allowIP . addr . NetAddr		231524	1					
ANR	232216	Argument	allowIP . addr . NetAddr		231524	0					
ANR	232217	MemberAccess	allowIP . addr . NetAddr		231524	0					
ANR	232218	MemberAccess	allowIP . addr		231524	0					
ANR	232219	Identifier	allowIP		231524	0					
ANR	232220	Identifier	addr		231524	1					
ANR	232221	Identifier	NetAddr		231524	1					
ANR	232222	Identifier	sin_addr		231524	1					
ANR	232223	Identifier	s_addr		231524	1					
ANR	232224	Argument	& ( SIN6 ( res -> ai_addr ) -> sin6_addr . s6_addr32 [ 3 ] )		231524	1					
ANR	232225	UnaryOperationExpression	& ( SIN6 ( res -> ai_addr ) -> sin6_addr . s6_addr32 [ 3 ] )		231524	0					
ANR	232226	UnaryOperator	&		231524	0					
ANR	232227	ArrayIndexing	SIN6 ( res -> ai_addr ) -> sin6_addr . s6_addr32 [ 3 ]		231524	1					
ANR	232228	MemberAccess	SIN6 ( res -> ai_addr ) -> sin6_addr . s6_addr32		231524	0					
ANR	232229	PtrMemberAccess	SIN6 ( res -> ai_addr ) -> sin6_addr		231524	0					
ANR	232230	CallExpression	SIN6 ( res -> ai_addr )		231524	0					
ANR	232231	Callee	SIN6		231524	0					
ANR	232232	Identifier	SIN6		231524	0					
ANR	232233	ArgumentList	res -> ai_addr		231524	1					
ANR	232234	Argument	res -> ai_addr		231524	0					
ANR	232235	PtrMemberAccess	res -> ai_addr		231524	0					
ANR	232236	Identifier	res		231524	0					
ANR	232237	Identifier	ai_addr		231524	1					
ANR	232238	Identifier	sin6_addr		231524	1					
ANR	232239	Identifier	s6_addr32		231524	1					
ANR	232240	PrimaryExpression	3		231524	1					
ANR	232241	Argument	sizeof ( in_addr_t )		231524	2					
ANR	232242	SizeofExpression	sizeof ( in_addr_t )		231524	0					
ANR	232243	Sizeof	sizeof		231524	0					
ANR	232244	SizeofOperand	in_addr_t		231524	1					
ANR	232245	IfStatement	"if ( ( iRet = AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits ) ) != RS_RET_OK )"		231524	7					
ANR	232246	Condition	"( iRet = AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits ) ) != RS_RET_OK"	736:9:21777:21878	231524	0	True				
ANR	232247	EqualityExpression	"( iRet = AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits ) ) != RS_RET_OK"		231524	0		!=			
ANR	232248	AssignmentExpression	"iRet = AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits )"		231524	0		=			
ANR	232249	Identifier	iRet		231524	0					
ANR	232250	CallExpression	"AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits )"		231524	1					
ANR	232251	Callee	AddAllowedSenderEntry		231524	0					
ANR	232252	Identifier	AddAllowedSenderEntry		231524	0					
ANR	232253	ArgumentList	ppRoot		231524	1					
ANR	232254	Argument	ppRoot		231524	0					
ANR	232255	Identifier	ppRoot		231524	0					
ANR	232256	Argument	ppLast		231524	1					
ANR	232257	Identifier	ppLast		231524	0					
ANR	232258	Argument	& allowIP		231524	2					
ANR	232259	UnaryOperationExpression	& allowIP		231524	0					
ANR	232260	UnaryOperator	&		231524	0					
ANR	232261	Identifier	allowIP		231524	1					
ANR	232262	Argument	iSignificantBits		231524	3					
ANR	232263	Identifier	iSignificantBits		231524	0					
ANR	232264	Identifier	RS_RET_OK		231524	1					
ANR	232265	CompoundStatement		124:21:4673:4673	231524	1					
ANR	232266	ExpressionStatement	free ( allowIP . addr . NetAddr )	739:7:21890:21916	231524	0	True				
ANR	232267	CallExpression	free ( allowIP . addr . NetAddr )		231524	0					
ANR	232268	Callee	free		231524	0					
ANR	232269	Identifier	free		231524	0					
ANR	232270	ArgumentList	allowIP . addr . NetAddr		231524	1					
ANR	232271	Argument	allowIP . addr . NetAddr		231524	0					
ANR	232272	MemberAccess	allowIP . addr . NetAddr		231524	0					
ANR	232273	MemberAccess	allowIP . addr		231524	0					
ANR	232274	Identifier	allowIP		231524	0					
ANR	232275	Identifier	addr		231524	1					
ANR	232276	Identifier	NetAddr		231524	1					
ANR	232277	ExpressionStatement	FINALIZE	740:7:21925:21933	231524	1	True				
ANR	232278	Identifier	FINALIZE		231524	0					
ANR	232279	ElseStatement	else		231524	0					
ANR	232280	CompoundStatement		128:12:4747:4747	231524	0					
ANR	232281	ExpressionStatement	iSignificantBits = 128	745:6:21999:22021	231524	0	True				
ANR	232282	AssignmentExpression	iSignificantBits = 128		231524	0		=			
ANR	232283	Identifier	iSignificantBits		231524	0					
ANR	232284	PrimaryExpression	128		231524	1					
ANR	232285	ExpressionStatement	allowIP . flags = 0	746:6:22029:22046	231524	1	True				
ANR	232286	AssignmentExpression	allowIP . flags = 0		231524	0		=			
ANR	232287	MemberAccess	allowIP . flags		231524	0					
ANR	232288	Identifier	allowIP		231524	0					
ANR	232289	Identifier	flags		231524	1					
ANR	232290	PrimaryExpression	0		231524	1					
ANR	232291	IfStatement	if ( ( allowIP . addr . NetAddr = MALLOC ( res -> ai_addrlen ) ) == NULL )		231524	2					
ANR	232292	Condition	( allowIP . addr . NetAddr = MALLOC ( res -> ai_addrlen ) ) == NULL	747:9:22057:22112	231524	0	True				
ANR	232293	EqualityExpression	( allowIP . addr . NetAddr = MALLOC ( res -> ai_addrlen ) ) == NULL		231524	0		==			
ANR	232294	AssignmentExpression	allowIP . addr . NetAddr = MALLOC ( res -> ai_addrlen )		231524	0		=			
ANR	232295	MemberAccess	allowIP . addr . NetAddr		231524	0					
ANR	232296	MemberAccess	allowIP . addr		231524	0					
ANR	232297	Identifier	allowIP		231524	0					
ANR	232298	Identifier	addr		231524	1					
ANR	232299	Identifier	NetAddr		231524	1					
ANR	232300	CallExpression	MALLOC ( res -> ai_addrlen )		231524	1					
ANR	232301	Callee	MALLOC		231524	0					
ANR	232302	Identifier	MALLOC		231524	0					
ANR	232303	ArgumentList	res -> ai_addrlen		231524	1					
ANR	232304	Argument	res -> ai_addrlen		231524	0					
ANR	232305	PtrMemberAccess	res -> ai_addrlen		231524	0					
ANR	232306	Identifier	res		231524	0					
ANR	232307	Identifier	ai_addrlen		231524	1					
ANR	232308	Identifier	NULL		231524	1					
ANR	232309	CompoundStatement		133:67:4907:4907	231524	1					
ANR	232310	ExpressionStatement	ABORT_FINALIZE ( RS_RET_OUT_OF_MEMORY )	748:7:22124:22160	231524	0	True				
ANR	232311	CallExpression	ABORT_FINALIZE ( RS_RET_OUT_OF_MEMORY )		231524	0					
ANR	232312	Callee	ABORT_FINALIZE		231524	0					
ANR	232313	Identifier	ABORT_FINALIZE		231524	0					
ANR	232314	ArgumentList	RS_RET_OUT_OF_MEMORY		231524	1					
ANR	232315	Argument	RS_RET_OUT_OF_MEMORY		231524	0					
ANR	232316	Identifier	RS_RET_OUT_OF_MEMORY		231524	0					
ANR	232317	ExpressionStatement	"memcpy ( allowIP . addr . NetAddr , res -> ai_addr , res -> ai_addrlen )"	750:6:22176:22235	231524	3	True				
ANR	232318	CallExpression	"memcpy ( allowIP . addr . NetAddr , res -> ai_addr , res -> ai_addrlen )"		231524	0					
ANR	232319	Callee	memcpy		231524	0					
ANR	232320	Identifier	memcpy		231524	0					
ANR	232321	ArgumentList	allowIP . addr . NetAddr		231524	1					
ANR	232322	Argument	allowIP . addr . NetAddr		231524	0					
ANR	232323	MemberAccess	allowIP . addr . NetAddr		231524	0					
ANR	232324	MemberAccess	allowIP . addr		231524	0					
ANR	232325	Identifier	allowIP		231524	0					
ANR	232326	Identifier	addr		231524	1					
ANR	232327	Identifier	NetAddr		231524	1					
ANR	232328	Argument	res -> ai_addr		231524	1					
ANR	232329	PtrMemberAccess	res -> ai_addr		231524	0					
ANR	232330	Identifier	res		231524	0					
ANR	232331	Identifier	ai_addr		231524	1					
ANR	232332	Argument	res -> ai_addrlen		231524	2					
ANR	232333	PtrMemberAccess	res -> ai_addrlen		231524	0					
ANR	232334	Identifier	res		231524	0					
ANR	232335	Identifier	ai_addrlen		231524	1					
ANR	232336	IfStatement	"if ( ( iRet = AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits ) ) != RS_RET_OK )"		231524	4					
ANR	232337	Condition	"( iRet = AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits ) ) != RS_RET_OK"	752:9:22253:22354	231524	0	True				
ANR	232338	EqualityExpression	"( iRet = AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits ) ) != RS_RET_OK"		231524	0		!=			
ANR	232339	AssignmentExpression	"iRet = AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits )"		231524	0		=			
ANR	232340	Identifier	iRet		231524	0					
ANR	232341	CallExpression	"AddAllowedSenderEntry ( ppRoot , ppLast , & allowIP , iSignificantBits )"		231524	1					
ANR	232342	Callee	AddAllowedSenderEntry		231524	0					
ANR	232343	Identifier	AddAllowedSenderEntry		231524	0					
ANR	232344	ArgumentList	ppRoot		231524	1					
ANR	232345	Argument	ppRoot		231524	0					
ANR	232346	Identifier	ppRoot		231524	0					
ANR	232347	Argument	ppLast		231524	1					
ANR	232348	Identifier	ppLast		231524	0					
ANR	232349	Argument	& allowIP		231524	2					
ANR	232350	UnaryOperationExpression	& allowIP		231524	0					
ANR	232351	UnaryOperator	&		231524	0					
ANR	232352	Identifier	allowIP		231524	1					
ANR	232353	Argument	iSignificantBits		231524	3					
ANR	232354	Identifier	iSignificantBits		231524	0					
ANR	232355	Identifier	RS_RET_OK		231524	1					
ANR	232356	CompoundStatement		140:21:5149:5149	231524	1					
ANR	232357	ExpressionStatement	free ( allowIP . addr . NetAddr )	755:7:22366:22392	231524	0	True				
ANR	232358	CallExpression	free ( allowIP . addr . NetAddr )		231524	0					
ANR	232359	Callee	free		231524	0					
ANR	232360	Identifier	free		231524	0					
ANR	232361	ArgumentList	allowIP . addr . NetAddr		231524	1					
ANR	232362	Argument	allowIP . addr . NetAddr		231524	0					
ANR	232363	MemberAccess	allowIP . addr . NetAddr		231524	0					
ANR	232364	MemberAccess	allowIP . addr		231524	0					
ANR	232365	Identifier	allowIP		231524	0					
ANR	232366	Identifier	addr		231524	1					
ANR	232367	Identifier	NetAddr		231524	1					
ANR	232368	ExpressionStatement	FINALIZE	756:7:22401:22409	231524	1	True				
ANR	232369	Identifier	FINALIZE		231524	0					
ANR	232370	BreakStatement	break ;	759:5:22431:22436	231524	9	True				
ANR	232371	ExpressionStatement	freeaddrinfo ( restmp )	762:3:22452:22473	231524	11	True				
ANR	232372	CallExpression	freeaddrinfo ( restmp )		231524	0					
ANR	232373	Callee	freeaddrinfo		231524	0					
ANR	232374	Identifier	freeaddrinfo		231524	0					
ANR	232375	ArgumentList	restmp		231524	1					
ANR	232376	Argument	restmp		231524	0					
ANR	232377	Identifier	restmp		231524	0					
ANR	232378	ElseStatement	else		231524	0					
ANR	232379	CompoundStatement		149:9:5276:5276	231524	0					
ANR	232380	ExpressionStatement	"iRet = AddAllowedSenderEntry ( ppRoot , ppLast , iAllow , iSignificantBits )"	768:3:22648:22719	231524	0	True				
ANR	232381	AssignmentExpression	"iRet = AddAllowedSenderEntry ( ppRoot , ppLast , iAllow , iSignificantBits )"		231524	0		=			
ANR	232382	Identifier	iRet		231524	0					
ANR	232383	CallExpression	"AddAllowedSenderEntry ( ppRoot , ppLast , iAllow , iSignificantBits )"		231524	1					
ANR	232384	Callee	AddAllowedSenderEntry		231524	0					
ANR	232385	Identifier	AddAllowedSenderEntry		231524	0					
ANR	232386	ArgumentList	ppRoot		231524	1					
ANR	232387	Argument	ppRoot		231524	0					
ANR	232388	Identifier	ppRoot		231524	0					
ANR	232389	Argument	ppLast		231524	1					
ANR	232390	Identifier	ppLast		231524	0					
ANR	232391	Argument	iAllow		231524	2					
ANR	232392	Identifier	iAllow		231524	0					
ANR	232393	Argument	iSignificantBits		231524	3					
ANR	232394	Identifier	iSignificantBits		231524	0					
ANR	232395	Label	finalize_it :	772:0:22729:22740	231524	5	True				
ANR	232396	Identifier	finalize_it		231524	0					
ANR	232397	ExpressionStatement	RETiRet	773:1:22743:22750	231524	6	True				
ANR	232398	Identifier	RETiRet		231524	0					
ANR	232399	ReturnType	static rsRetVal		231524	1					
ANR	232400	Identifier	AddAllowedSender		231524	2					
ANR	232401	ParameterList	"struct AllowedSenders * * ppRoot , struct AllowedSenders * * ppLast , struct NetAddr * iAllow , uint8_t iSignificantBits"		231524	3					
ANR	232402	Parameter	struct AllowedSenders * * ppRoot	613:33:17083:17112	231524	0	True				
ANR	232403	ParameterType	struct AllowedSenders * *		231524	0					
ANR	232404	Identifier	ppRoot		231524	1					
ANR	232405	Parameter	struct AllowedSenders * * ppLast	613:65:17115:17144	231524	1	True				
ANR	232406	ParameterType	struct AllowedSenders * *		231524	0					
ANR	232407	Identifier	ppLast		231524	1					
ANR	232408	Parameter	struct NetAddr * iAllow	614:10:17157:17178	231524	2	True				
ANR	232409	ParameterType	struct NetAddr *		231524	0					
ANR	232410	Identifier	iAllow		231524	1					
ANR	232411	Parameter	uint8_t iSignificantBits	614:34:17181:17204	231524	3	True				
ANR	232412	ParameterType	uint8_t		231524	0					
ANR	232413	Identifier	iSignificantBits		231524	1					
ANR	232414	CFGEntryNode	ENTRY		231524		True				
ANR	232415	CFGExitNode	EXIT		231524		True				
ANR	232416	Symbol	& res		231524						
ANR	232417	Symbol	SIN6 ( res -> ai_addr ) -> sin6_addr . s6_addr32		231524						
ANR	232418	Symbol	RS_RET_ERR		231524						
ANR	232419	Symbol	strchr		231524						
ANR	232420	Symbol	res -> ai_family		231524						
ANR	232421	Symbol	* * iAllow		231524						
ANR	232422	Symbol	hints . ai_flags		231524						
ANR	232423	Symbol	iAllow -> addr . NetAddr -> sa_family		231524						
ANR	232424	Symbol	SIN ( allowIP . addr . NetAddr ) -> sin_family		231524						
ANR	232425	Symbol	res -> ai_addrlen		231524						
ANR	232426	Symbol	iAllow		231524						
ANR	232427	Symbol	iSignificantBits		231524						
ANR	232428	Symbol	AI_ADDRCONFIG		231524						
ANR	232429	Symbol	glbl . GetDisableDNS		231524						
ANR	232430	Symbol	NO_ERRCODE		231524						
ANR	232431	Symbol	& SIN ( allowIP . addr . NetAddr ) -> sin_addr		231524						
ANR	232432	Symbol	allowIP		231524						
ANR	232433	Symbol	RS_RET_NOENTRY		231524						
ANR	232434	Symbol	* SIN		231524						
ANR	232435	Symbol	res		231524						
ANR	232436	Symbol	* SIN6		231524						
ANR	232437	Symbol	NULL		231524						
ANR	232438	Symbol	F_ISSET		231524						
ANR	232439	Symbol	RS_RET_OK		231524						
ANR	232440	Symbol	iAllow -> addr . HostWildcard		231524						
ANR	232441	Symbol	hints		231524						
ANR	232442	Symbol	getaddrinfo		231524						
ANR	232443	Symbol	errmsg		231524						
ANR	232444	Symbol	AF_INET		231524						
ANR	232445	Symbol	SOCK_DGRAM		231524						
ANR	232446	Symbol	hints . ai_socktype		231524						
ANR	232447	Symbol	allowIP . flags		231524						
ANR	232448	Symbol	allowIP . addr		231524						
ANR	232449	Symbol	RS_RET_OUT_OF_MEMORY		231524						
ANR	232450	Symbol	SIN		231524						
ANR	232451	Symbol	* iAllow		231524						
ANR	232452	Symbol	restmp		231524						
ANR	232453	Symbol	iAllow -> flags		231524						
ANR	232454	Symbol	ADDR_NAME		231524						
ANR	232455	Symbol	iAllow -> addr . NetAddr		231524						
ANR	232456	Symbol	iRet		231524						
ANR	232457	Symbol	* res		231524						
ANR	232458	Symbol	& allowIP		231524						
ANR	232459	Symbol	AF_UNSPEC		231524						
ANR	232460	Symbol	AddAllowedSenderEntry		231524						
ANR	232461	Symbol	hints . ai_family		231524						
ANR	232462	Symbol	ACLDontResolve		231524						
ANR	232463	Symbol	allowIP . addr . NetAddr		231524						
ANR	232464	Symbol	IN6_IS_ADDR_V4MAPPED		231524						
ANR	232465	Symbol	SIN6		231524						
ANR	232466	Symbol	SIN ( allowIP . addr . NetAddr ) -> sin_port		231524						
ANR	232467	Symbol	ppLast		231524						
ANR	232468	Symbol	& SIN6 ( iAllow -> addr . NetAddr ) -> sin6_addr		231524						
ANR	232469	Symbol	* iAllow -> addr . NetAddr		231524						
ANR	232470	Symbol	glbl		231524						
ANR	232471	Symbol	& hints		231524						
ANR	232472	Symbol	res -> ai_next		231524						
ANR	232473	Symbol	iAllow -> addr		231524						
ANR	232474	Symbol	& SIN6 ( res -> ai_addr ) -> sin6_addr		231524						
ANR	232475	Symbol	SIN ( allowIP . addr . NetAddr ) -> sin_len		231524						
ANR	232476	Symbol	& SIN ( iAllow -> addr . NetAddr ) -> sin_addr		231524						
ANR	232477	Symbol	* iAllow -> addr		231524						
ANR	232478	Symbol	SIN ( allowIP . addr . NetAddr ) -> sin_addr		231524						
ANR	232479	Symbol	ppRoot		231524						
ANR	232480	Symbol	res -> ai_addr		231524						
ANR	232481	Symbol	MALLOC		231524						
ANR	232482	Symbol	SIN6 ( res -> ai_addr ) -> sin6_addr		231524						
ANR	232483	Symbol	& SIN ( allowIP . addr . NetAddr ) -> sin_addr . s_addr		231524						
ANR	232484	Symbol	ACLAddHostnameOnFail		231524						
ANR	232485	Function	PrintAllowedSenders	781:0:22896:24662							
ANR	232486	FunctionDef	PrintAllowedSenders (int iListToPrint)		232485	0					
ANR	232487	CompoundStatement		783:0:22946:24662	232485	0					
ANR	232488	IdentifierDeclStatement	struct AllowedSenders * pSender ;	784:1:22949:22979	232485	0	True				
ANR	232489	IdentifierDecl	* pSender		232485	0					
ANR	232490	IdentifierDeclType	struct AllowedSenders *		232485	0					
ANR	232491	Identifier	pSender		232485	1					
ANR	232492	IdentifierDeclStatement	uchar szIP [ 64 ] ;	785:1:22982:22996	232485	1	True				
ANR	232493	IdentifierDecl	szIP [ 64 ]		232485	0					
ANR	232494	IdentifierDeclType	uchar [ 64 ]		232485	0					
ANR	232495	Identifier	szIP		232485	1					
ANR	232496	PrimaryExpression	64		232485	2					
ANR	232497	ExpressionStatement	assert ( ( iListToPrint == 1 ) || ( iListToPrint == 2 ) || ( iListToPrint == 3 ) )	789:1:23032:23105	232485	2	True				
ANR	232498	CallExpression	assert ( ( iListToPrint == 1 ) || ( iListToPrint == 2 ) || ( iListToPrint == 3 ) )		232485	0					
ANR	232499	Callee	assert		232485	0					
ANR	232500	Identifier	assert		232485	0					
ANR	232501	ArgumentList	( iListToPrint == 1 ) || ( iListToPrint == 2 ) || ( iListToPrint == 3 )		232485	1					
ANR	232502	Argument	( iListToPrint == 1 ) || ( iListToPrint == 2 ) || ( iListToPrint == 3 )		232485	0					
ANR	232503	OrExpression	( iListToPrint == 1 ) || ( iListToPrint == 2 ) || ( iListToPrint == 3 )		232485	0		||			
ANR	232504	EqualityExpression	iListToPrint == 1		232485	0		==			
ANR	232505	Identifier	iListToPrint		232485	0					
ANR	232506	PrimaryExpression	1		232485	1					
ANR	232507	OrExpression	( iListToPrint == 2 ) || ( iListToPrint == 3 )		232485	1		||			
ANR	232508	EqualityExpression	iListToPrint == 2		232485	0		==			
ANR	232509	Identifier	iListToPrint		232485	0					
ANR	232510	PrimaryExpression	2		232485	1					
ANR	232511	EqualityExpression	iListToPrint == 3		232485	1		==			
ANR	232512	Identifier	iListToPrint		232485	0					
ANR	232513	PrimaryExpression	3		232485	1					
ANR	232514	ExpressionStatement	"dbgprintf ( ""Allowed %s Senders:\\n"" , ( iListToPrint == 1 ) ? ""UDP"" : ( iListToPrint == 3 ) ? ""GSS"" : ""TCP"" )"	790:1:23108:23233	232485	3	True				
ANR	232515	CallExpression	"dbgprintf ( ""Allowed %s Senders:\\n"" , ( iListToPrint == 1 ) ? ""UDP"" : ( iListToPrint == 3 ) ? ""GSS"" : ""TCP"" )"		232485	0					
ANR	232516	Callee	dbgprintf		232485	0					
ANR	232517	Identifier	dbgprintf		232485	0					
ANR	232518	ArgumentList	"""Allowed %s Senders:\\n"""		232485	1					
ANR	232519	Argument	"""Allowed %s Senders:\\n"""		232485	0					
ANR	232520	PrimaryExpression	"""Allowed %s Senders:\\n"""		232485	0					
ANR	232521	Argument	"( iListToPrint == 1 ) ? ""UDP"" : ( iListToPrint == 3 ) ? ""GSS"" : ""TCP"""		232485	1					
ANR	232522	ConditionalExpression	"( iListToPrint == 1 ) ? ""UDP"" : ( iListToPrint == 3 ) ? ""GSS"" : ""TCP"""		232485	0					
ANR	232523	Condition	iListToPrint == 1		232485	0					
ANR	232524	EqualityExpression	iListToPrint == 1		232485	0		==			
ANR	232525	Identifier	iListToPrint		232485	0					
ANR	232526	PrimaryExpression	1		232485	1					
ANR	232527	PrimaryExpression	"""UDP"""		232485	1					
ANR	232528	ConditionalExpression	"( iListToPrint == 3 ) ? ""GSS"" : ""TCP"""		232485	2					
ANR	232529	Condition	iListToPrint == 3		232485	0					
ANR	232530	EqualityExpression	iListToPrint == 3		232485	0		==			
ANR	232531	Identifier	iListToPrint		232485	0					
ANR	232532	PrimaryExpression	3		232485	1					
ANR	232533	PrimaryExpression	"""GSS"""		232485	1					
ANR	232534	PrimaryExpression	"""TCP"""		232485	2					
ANR	232535	Statement	pSender	815:1:23730:23736	232485	4	True				
ANR	232536	Statement	=	815:9:23738:23738	232485	5	True				
ANR	232537	Statement	(	815:11:23740:23740	232485	6	True				
ANR	232538	Statement	iListToPrint	815:12:23741:23752	232485	7	True				
ANR	232539	Statement	==	815:25:23754:23755	232485	8	True				
ANR	232540	Statement	1	815:28:23757:23757	232485	9	True				
ANR	232541	Statement	)	815:29:23758:23758	232485	10	True				
ANR	232542	Statement	?	815:31:23760:23760	232485	11	True				
ANR	232543	Label	pAllowedSenders_UDP :	815:33:23762:23782	232485	12	True				
ANR	232544	Identifier	pAllowedSenders_UDP		232485	0					
ANR	232545	Statement	(	817:2:23804:23804	232485	13	True				
ANR	232546	Statement	iListToPrint	817:3:23805:23816	232485	14	True				
ANR	232547	Statement	==	817:16:23818:23819	232485	15	True				
ANR	232548	Statement	3	817:19:23821:23821	232485	16	True				
ANR	232549	Statement	)	817:20:23822:23822	232485	17	True				
ANR	232550	Statement	?	817:22:23824:23824	232485	18	True				
ANR	232551	Label	pAllowedSenders_GSS :	817:24:23826:23846	232485	19	True				
ANR	232552	Identifier	pAllowedSenders_GSS		232485	0					
ANR	232553	ExpressionStatement	pAllowedSenders_TCP	819:2:23857:23876	232485	20	True				
ANR	232554	Identifier	pAllowedSenders_TCP		232485	0					
ANR	232555	IfStatement	if ( pSender == NULL )		232485	21					
ANR	232556	Condition	pSender == NULL	820:4:23882:23896	232485	0	True				
ANR	232557	EqualityExpression	pSender == NULL		232485	0		==			
ANR	232558	Identifier	pSender		232485	0					
ANR	232559	Identifier	NULL		232485	1					
ANR	232560	CompoundStatement		38:21:952:952	232485	1					
ANR	232561	ExpressionStatement	"dbgprintf ( ""\\tNo restrictions set.\\n"" )"	821:2:23903:23940	232485	0	True				
ANR	232562	CallExpression	"dbgprintf ( ""\\tNo restrictions set.\\n"" )"		232485	0					
ANR	232563	Callee	dbgprintf		232485	0					
ANR	232564	Identifier	dbgprintf		232485	0					
ANR	232565	ArgumentList	"""\\tNo restrictions set.\\n"""		232485	1					
ANR	232566	Argument	"""\\tNo restrictions set.\\n"""		232485	0					
ANR	232567	PrimaryExpression	"""\\tNo restrictions set.\\n"""		232485	0					
ANR	232568	ElseStatement	else		232485	0					
ANR	232569	CompoundStatement		40:8:1003:1003	232485	0					
ANR	232570	WhileStatement	while ( pSender != NULL )		232485	0					
ANR	232571	Condition	pSender != NULL	823:8:23960:23974	232485	0	True				
ANR	232572	EqualityExpression	pSender != NULL		232485	0		!=			
ANR	232573	Identifier	pSender		232485	0					
ANR	232574	Identifier	NULL		232485	1					
ANR	232575	CompoundStatement		41:25:1030:1030	232485	1					
ANR	232576	IfStatement	"if ( F_ISSET ( pSender -> allowedSender . flags , ADDR_NAME ) )"		232485	0					
ANR	232577	Condition	"F_ISSET ( pSender -> allowedSender . flags , ADDR_NAME )"	824:7:23986:24033	232485	0	True				
ANR	232578	CallExpression	"F_ISSET ( pSender -> allowedSender . flags , ADDR_NAME )"		232485	0					
ANR	232579	Callee	F_ISSET		232485	0					
ANR	232580	Identifier	F_ISSET		232485	0					
ANR	232581	ArgumentList	pSender -> allowedSender . flags		232485	1					
ANR	232582	Argument	pSender -> allowedSender . flags		232485	0					
ANR	232583	MemberAccess	pSender -> allowedSender . flags		232485	0					
ANR	232584	PtrMemberAccess	pSender -> allowedSender		232485	0					
ANR	232585	Identifier	pSender		232485	0					
ANR	232586	Identifier	allowedSender		232485	1					
ANR	232587	Identifier	flags		232485	1					
ANR	232588	Argument	ADDR_NAME		232485	1					
ANR	232589	Identifier	ADDR_NAME		232485	0					
ANR	232590	ExpressionStatement	"dbgprintf ( ""\\t%s\\n"" , pSender -> allowedSender . addr . HostWildcard )"	825:4:24040:24102	232485	1	True				
ANR	232591	CallExpression	"dbgprintf ( ""\\t%s\\n"" , pSender -> allowedSender . addr . HostWildcard )"		232485	0					
ANR	232592	Callee	dbgprintf		232485	0					
ANR	232593	Identifier	dbgprintf		232485	0					
ANR	232594	ArgumentList	"""\\t%s\\n"""		232485	1					
ANR	232595	Argument	"""\\t%s\\n"""		232485	0					
ANR	232596	PrimaryExpression	"""\\t%s\\n"""		232485	0					
ANR	232597	Argument	pSender -> allowedSender . addr . HostWildcard		232485	1					
ANR	232598	MemberAccess	pSender -> allowedSender . addr . HostWildcard		232485	0					
ANR	232599	MemberAccess	pSender -> allowedSender . addr		232485	0					
ANR	232600	PtrMemberAccess	pSender -> allowedSender		232485	0					
ANR	232601	Identifier	pSender		232485	0					
ANR	232602	Identifier	allowedSender		232485	1					
ANR	232603	Identifier	addr		232485	1					
ANR	232604	Identifier	HostWildcard		232485	1					
ANR	232605	ElseStatement	else		232485	0					
ANR	232606	CompoundStatement		44:8:1165:1165	232485	0					
ANR	232607	IfStatement	"if ( mygetnameinfo ( pSender -> allowedSender . addr . NetAddr , SALEN ( pSender -> allowedSender . addr . NetAddr ) , ( char * ) szIP , 64 , NULL , 0 , NI_NUMERICHOST ) == 0 )"		232485	0					
ANR	232608	Condition	"mygetnameinfo ( pSender -> allowedSender . addr . NetAddr , SALEN ( pSender -> allowedSender . addr . NetAddr ) , ( char * ) szIP , 64 , NULL , 0 , NI_NUMERICHOST ) == 0"	827:7:24121:24284	232485	0	True				
ANR	232609	EqualityExpression	"mygetnameinfo ( pSender -> allowedSender . addr . NetAddr , SALEN ( pSender -> allowedSender . addr . NetAddr ) , ( char * ) szIP , 64 , NULL , 0 , NI_NUMERICHOST ) == 0"		232485	0		==			
ANR	232610	CallExpression	"mygetnameinfo ( pSender -> allowedSender . addr . NetAddr , SALEN ( pSender -> allowedSender . addr . NetAddr ) , ( char * ) szIP , 64 , NULL , 0 , NI_NUMERICHOST )"		232485	0					
ANR	232611	Callee	mygetnameinfo		232485	0					
ANR	232612	Identifier	mygetnameinfo		232485	0					
ANR	232613	ArgumentList	pSender -> allowedSender . addr . NetAddr		232485	1					
ANR	232614	Argument	pSender -> allowedSender . addr . NetAddr		232485	0					
ANR	232615	MemberAccess	pSender -> allowedSender . addr . NetAddr		232485	0					
ANR	232616	MemberAccess	pSender -> allowedSender . addr		232485	0					
ANR	232617	PtrMemberAccess	pSender -> allowedSender		232485	0					
ANR	232618	Identifier	pSender		232485	0					
ANR	232619	Identifier	allowedSender		232485	1					
ANR	232620	Identifier	addr		232485	1					
ANR	232621	Identifier	NetAddr		232485	1					
ANR	232622	Argument	SALEN ( pSender -> allowedSender . addr . NetAddr )		232485	1					
ANR	232623	CallExpression	SALEN ( pSender -> allowedSender . addr . NetAddr )		232485	0					
ANR	232624	Callee	SALEN		232485	0					
ANR	232625	Identifier	SALEN		232485	0					
ANR	232626	ArgumentList	pSender -> allowedSender . addr . NetAddr		232485	1					
ANR	232627	Argument	pSender -> allowedSender . addr . NetAddr		232485	0					
ANR	232628	MemberAccess	pSender -> allowedSender . addr . NetAddr		232485	0					
ANR	232629	MemberAccess	pSender -> allowedSender . addr		232485	0					
ANR	232630	PtrMemberAccess	pSender -> allowedSender		232485	0					
ANR	232631	Identifier	pSender		232485	0					
ANR	232632	Identifier	allowedSender		232485	1					
ANR	232633	Identifier	addr		232485	1					
ANR	232634	Identifier	NetAddr		232485	1					
ANR	232635	Argument	( char * ) szIP		232485	2					
ANR	232636	CastExpression	( char * ) szIP		232485	0					
ANR	232637	CastTarget	char *		232485	0					
ANR	232638	Identifier	szIP		232485	1					
ANR	232639	Argument	64		232485	3					
ANR	232640	PrimaryExpression	64		232485	0					
ANR	232641	Argument	NULL		232485	4					
ANR	232642	Identifier	NULL		232485	0					
ANR	232643	Argument	0		232485	5					
ANR	232644	PrimaryExpression	0		232485	0					
ANR	232645	Argument	NI_NUMERICHOST		232485	6					
ANR	232646	Identifier	NI_NUMERICHOST		232485	0					
ANR	232647	PrimaryExpression	0		232485	1					
ANR	232648	CompoundStatement		47:59:1340:1340	232485	1					
ANR	232649	ExpressionStatement	"dbgprintf ( ""\\t%s/%u\\n"" , szIP , pSender -> SignificantBits )"	830:5:24294:24349	232485	0	True				
ANR	232650	CallExpression	"dbgprintf ( ""\\t%s/%u\\n"" , szIP , pSender -> SignificantBits )"		232485	0					
ANR	232651	Callee	dbgprintf		232485	0					
ANR	232652	Identifier	dbgprintf		232485	0					
ANR	232653	ArgumentList	"""\\t%s/%u\\n"""		232485	1					
ANR	232654	Argument	"""\\t%s/%u\\n"""		232485	0					
ANR	232655	PrimaryExpression	"""\\t%s/%u\\n"""		232485	0					
ANR	232656	Argument	szIP		232485	1					
ANR	232657	Identifier	szIP		232485	0					
ANR	232658	Argument	pSender -> SignificantBits		232485	2					
ANR	232659	PtrMemberAccess	pSender -> SignificantBits		232485	0					
ANR	232660	Identifier	pSender		232485	0					
ANR	232661	Identifier	SignificantBits		232485	1					
ANR	232662	ElseStatement	else		232485	0					
ANR	232663	CompoundStatement		49:11:1415:1415	232485	0					
ANR	232664	Statement	dbgprintf	836:5:24522:24530	232485	0	True				
ANR	232665	Statement	(	836:14:24531:24531	232485	1	True				
ANR	232666	Statement	"""\\tERROR in getnameinfo() - something may be wrong """	836:15:24532:24583	232485	2	True				
ANR	232667	Statement	"""- ignored for now\\n"""	837:6:24591:24611	232485	3	True				
ANR	232668	Statement	)	837:27:24612:24612	232485	4	True				
ANR	232669	ExpressionStatement		837:28:24613:24613	232485	5	True				
ANR	232670	ExpressionStatement	pSender = pSender -> pNext	840:3:24629:24653	232485	1	True				
ANR	232671	AssignmentExpression	pSender = pSender -> pNext		232485	0		=			
ANR	232672	Identifier	pSender		232485	0					
ANR	232673	PtrMemberAccess	pSender -> pNext		232485	1					
ANR	232674	Identifier	pSender		232485	0					
ANR	232675	Identifier	pNext		232485	1					
ANR	232676	ReturnType	static void		232485	1					
ANR	232677	Identifier	PrintAllowedSenders		232485	2					
ANR	232678	ParameterList	int iListToPrint		232485	3					
ANR	232679	Parameter	int iListToPrint	782:20:22928:22943	232485	0	True				
ANR	232680	ParameterType	int		232485	0					
ANR	232681	Identifier	iListToPrint		232485	1					
ANR	232682	CFGEntryNode	ENTRY		232485		True				
ANR	232683	CFGExitNode	EXIT		232485		True				
ANR	232684	Symbol	pSender -> allowedSender		232485						
ANR	232685	Symbol	NULL		232485						
ANR	232686	Symbol	F_ISSET		232485						
ANR	232687	Symbol	pSender -> allowedSender . flags		232485						
ANR	232688	Symbol	NI_NUMERICHOST		232485						
ANR	232689	Symbol	pSender -> pNext		232485						
ANR	232690	Symbol	pSender -> allowedSender . addr		232485						
ANR	232691	Symbol	* pSender		232485						
ANR	232692	Symbol	pSender -> SignificantBits		232485						
ANR	232693	Symbol	iListToPrint		232485						
ANR	232694	Symbol	SALEN		232485						
ANR	232695	Symbol	szIP		232485						
ANR	232696	Symbol	pSender		232485						
ANR	232697	Symbol	pSender -> allowedSender . addr . NetAddr		232485						
ANR	232698	Symbol	mygetnameinfo		232485						
ANR	232699	Symbol	ADDR_NAME		232485						
ANR	232700	Symbol	pSender -> allowedSender . addr . HostWildcard		232485						
ANR	232701	Function	addAllowedSenderLine	850:0:24791:27059							
ANR	232702	FunctionDef	"addAllowedSenderLine (char * pName , uchar * * ppRestOfConfLine)"		232701	0					
ANR	232703	CompoundStatement		852:0:24867:27059	232701	0					
ANR	232704	IdentifierDeclStatement	struct AllowedSenders * * ppRoot ;	853:1:24870:24900	232701	0	True				
ANR	232705	IdentifierDecl	* * ppRoot		232701	0					
ANR	232706	IdentifierDeclType	struct AllowedSenders * *		232701	0					
ANR	232707	Identifier	ppRoot		232701	1					
ANR	232708	IdentifierDeclStatement	struct AllowedSenders * * ppLast ;	854:1:24903:24933	232701	1	True				
ANR	232709	IdentifierDecl	* * ppLast		232701	0					
ANR	232710	IdentifierDeclType	struct AllowedSenders * *		232701	0					
ANR	232711	Identifier	ppLast		232701	1					
ANR	232712	IdentifierDeclStatement	rsParsObj * pPars ;	855:1:24936:24952	232701	2	True				
ANR	232713	IdentifierDecl	* pPars		232701	0					
ANR	232714	IdentifierDeclType	rsParsObj *		232701	0					
ANR	232715	Identifier	pPars		232701	1					
ANR	232716	IdentifierDeclStatement	rsRetVal iRet ;	856:1:24955:24968	232701	3	True				
ANR	232717	IdentifierDecl	iRet		232701	0					
ANR	232718	IdentifierDeclType	rsRetVal		232701	0					
ANR	232719	Identifier	iRet		232701	1					
ANR	232720	IdentifierDeclStatement	struct NetAddr * uIP = NULL ;	857:1:24971:24997	232701	4	True				
ANR	232721	IdentifierDecl	* uIP = NULL		232701	0					
ANR	232722	IdentifierDeclType	struct NetAddr *		232701	0					
ANR	232723	Identifier	uIP		232701	1					
ANR	232724	AssignmentExpression	* uIP = NULL		232701	2		=			
ANR	232725	Identifier	NULL		232701	0					
ANR	232726	Identifier	NULL		232701	1					
ANR	232727	IdentifierDeclStatement	int iBits ;	858:1:25000:25009	232701	5	True				
ANR	232728	IdentifierDecl	iBits		232701	0					
ANR	232729	IdentifierDeclType	int		232701	0					
ANR	232730	Identifier	iBits		232701	1					
ANR	232731	ExpressionStatement	assert ( pName != NULL )	860:1:25013:25034	232701	6	True				
ANR	232732	CallExpression	assert ( pName != NULL )		232701	0					
ANR	232733	Callee	assert		232701	0					
ANR	232734	Identifier	assert		232701	0					
ANR	232735	ArgumentList	pName != NULL		232701	1					
ANR	232736	Argument	pName != NULL		232701	0					
ANR	232737	EqualityExpression	pName != NULL		232701	0		!=			
ANR	232738	Identifier	pName		232701	0					
ANR	232739	Identifier	NULL		232701	1					
ANR	232740	ExpressionStatement	assert ( ppRestOfConfLine != NULL )	861:1:25037:25069	232701	7	True				
ANR	232741	CallExpression	assert ( ppRestOfConfLine != NULL )		232701	0					
ANR	232742	Callee	assert		232701	0					
ANR	232743	Identifier	assert		232701	0					
ANR	232744	ArgumentList	ppRestOfConfLine != NULL		232701	1					
ANR	232745	Argument	ppRestOfConfLine != NULL		232701	0					
ANR	232746	EqualityExpression	ppRestOfConfLine != NULL		232701	0		!=			
ANR	232747	Identifier	ppRestOfConfLine		232701	0					
ANR	232748	Identifier	NULL		232701	1					
ANR	232749	ExpressionStatement	assert ( * ppRestOfConfLine != NULL )	862:1:25072:25105	232701	8	True				
ANR	232750	CallExpression	assert ( * ppRestOfConfLine != NULL )		232701	0					
ANR	232751	Callee	assert		232701	0					
ANR	232752	Identifier	assert		232701	0					
ANR	232753	ArgumentList	* ppRestOfConfLine != NULL		232701	1					
ANR	232754	Argument	* ppRestOfConfLine != NULL		232701	0					
ANR	232755	EqualityExpression	* ppRestOfConfLine != NULL		232701	0		!=			
ANR	232756	UnaryOperationExpression	* ppRestOfConfLine		232701	0					
ANR	232757	UnaryOperator	*		232701	0					
ANR	232758	Identifier	ppRestOfConfLine		232701	1					
ANR	232759	Identifier	NULL		232701	1					
ANR	232760	IfStatement	"if ( ! strcasecmp ( pName , ""udp"" ) )"		232701	9					
ANR	232761	Condition	"! strcasecmp ( pName , ""udp"" )"	864:4:25112:25136	232701	0	True				
ANR	232762	UnaryOperationExpression	"! strcasecmp ( pName , ""udp"" )"		232701	0					
ANR	232763	UnaryOperator	!		232701	0					
ANR	232764	CallExpression	"strcasecmp ( pName , ""udp"" )"		232701	1					
ANR	232765	Callee	strcasecmp		232701	0					
ANR	232766	Identifier	strcasecmp		232701	0					
ANR	232767	ArgumentList	pName		232701	1					
ANR	232768	Argument	pName		232701	0					
ANR	232769	Identifier	pName		232701	0					
ANR	232770	Argument	"""udp"""		232701	1					
ANR	232771	PrimaryExpression	"""udp"""		232701	0					
ANR	232772	CompoundStatement		13:31:271:271	232701	1					
ANR	232773	ExpressionStatement	ppRoot = & pAllowedSenders_UDP	865:2:25143:25172	232701	0	True				
ANR	232774	AssignmentExpression	ppRoot = & pAllowedSenders_UDP		232701	0		=			
ANR	232775	Identifier	ppRoot		232701	0					
ANR	232776	UnaryOperationExpression	& pAllowedSenders_UDP		232701	1					
ANR	232777	UnaryOperator	&		232701	0					
ANR	232778	Identifier	pAllowedSenders_UDP		232701	1					
ANR	232779	ExpressionStatement	ppLast = & pLastAllowedSenders_UDP	866:2:25176:25209	232701	1	True				
ANR	232780	AssignmentExpression	ppLast = & pLastAllowedSenders_UDP		232701	0		=			
ANR	232781	Identifier	ppLast		232701	0					
ANR	232782	UnaryOperationExpression	& pLastAllowedSenders_UDP		232701	1					
ANR	232783	UnaryOperator	&		232701	0					
ANR	232784	Identifier	pLastAllowedSenders_UDP		232701	1					
ANR	232785	ElseStatement	else		232701	0					
ANR	232786	IfStatement	"if ( ! strcasecmp ( pName , ""tcp"" ) )"		232701	0					
ANR	232787	Condition	"! strcasecmp ( pName , ""tcp"" )"	867:11:25222:25246	232701	0	True				
ANR	232788	UnaryOperationExpression	"! strcasecmp ( pName , ""tcp"" )"		232701	0					
ANR	232789	UnaryOperator	!		232701	0					
ANR	232790	CallExpression	"strcasecmp ( pName , ""tcp"" )"		232701	1					
ANR	232791	Callee	strcasecmp		232701	0					
ANR	232792	Identifier	strcasecmp		232701	0					
ANR	232793	ArgumentList	pName		232701	1					
ANR	232794	Argument	pName		232701	0					
ANR	232795	Identifier	pName		232701	0					
ANR	232796	Argument	"""tcp"""		232701	1					
ANR	232797	PrimaryExpression	"""tcp"""		232701	0					
ANR	232798	CompoundStatement		16:38:381:381	232701	1					
ANR	232799	ExpressionStatement	ppRoot = & pAllowedSenders_TCP	868:2:25253:25282	232701	0	True				
ANR	232800	AssignmentExpression	ppRoot = & pAllowedSenders_TCP		232701	0		=			
ANR	232801	Identifier	ppRoot		232701	0					
ANR	232802	UnaryOperationExpression	& pAllowedSenders_TCP		232701	1					
ANR	232803	UnaryOperator	&		232701	0					
ANR	232804	Identifier	pAllowedSenders_TCP		232701	1					
ANR	232805	ExpressionStatement	ppLast = & pLastAllowedSenders_TCP	869:2:25286:25319	232701	1	True				
ANR	232806	AssignmentExpression	ppLast = & pLastAllowedSenders_TCP		232701	0		=			
ANR	232807	Identifier	ppLast		232701	0					
ANR	232808	UnaryOperationExpression	& pLastAllowedSenders_TCP		232701	1					
ANR	232809	UnaryOperator	&		232701	0					
ANR	232810	Identifier	pLastAllowedSenders_TCP		232701	1					
ANR	232811	ElseStatement	else		232701	0					
ANR	232812	IfStatement	"if ( ! strcasecmp ( pName , ""gss"" ) )"		232701	0					
ANR	232813	Condition	"! strcasecmp ( pName , ""gss"" )"	871:11:25350:25374	232701	0	True				
ANR	232814	UnaryOperationExpression	"! strcasecmp ( pName , ""gss"" )"		232701	0					
ANR	232815	UnaryOperator	!		232701	0					
ANR	232816	CallExpression	"strcasecmp ( pName , ""gss"" )"		232701	1					
ANR	232817	Callee	strcasecmp		232701	0					
ANR	232818	Identifier	strcasecmp		232701	0					
ANR	232819	ArgumentList	pName		232701	1					
ANR	232820	Argument	pName		232701	0					
ANR	232821	Identifier	pName		232701	0					
ANR	232822	Argument	"""gss"""		232701	1					
ANR	232823	PrimaryExpression	"""gss"""		232701	0					
ANR	232824	CompoundStatement		20:38:509:509	232701	1					
ANR	232825	ExpressionStatement	ppRoot = & pAllowedSenders_GSS	872:2:25381:25410	232701	0	True				
ANR	232826	AssignmentExpression	ppRoot = & pAllowedSenders_GSS		232701	0		=			
ANR	232827	Identifier	ppRoot		232701	0					
ANR	232828	UnaryOperationExpression	& pAllowedSenders_GSS		232701	1					
ANR	232829	UnaryOperator	&		232701	0					
ANR	232830	Identifier	pAllowedSenders_GSS		232701	1					
ANR	232831	ExpressionStatement	ppLast = & pLastAllowedSenders_GSS	873:2:25414:25447	232701	1	True				
ANR	232832	AssignmentExpression	ppLast = & pLastAllowedSenders_GSS		232701	0		=			
ANR	232833	Identifier	ppLast		232701	0					
ANR	232834	UnaryOperationExpression	& pLastAllowedSenders_GSS		232701	1					
ANR	232835	UnaryOperator	&		232701	0					
ANR	232836	Identifier	pLastAllowedSenders_GSS		232701	1					
ANR	232837	ElseStatement	else		232701	0					
ANR	232838	CompoundStatement		24:8:596:596	232701	0					
ANR	232839	Statement	errmsg	876:2:25468:25473	232701	0	True				
ANR	232840	Statement	.	876:8:25474:25474	232701	1	True				
ANR	232841	Statement	LogError	876:9:25475:25482	232701	2	True				
ANR	232842	Statement	(	876:17:25483:25483	232701	3	True				
ANR	232843	Statement	0	876:18:25484:25484	232701	4	True				
ANR	232844	Statement	","	876:19:25485:25485	232701	5	True				
ANR	232845	Statement	RS_RET_ERR	876:21:25487:25496	232701	6	True				
ANR	232846	Statement	","	876:31:25497:25497	232701	7	True				
ANR	232847	Statement	"""Invalid protocol '%s' in allowed sender """	876:33:25499:25540	232701	8	True				
ANR	232848	Statement	"""list, line ignored"""	877:13:25555:25574	232701	9	True				
ANR	232849	Statement	","	877:33:25575:25575	232701	10	True				
ANR	232850	Statement	pName	877:35:25577:25581	232701	11	True				
ANR	232851	Statement	)	877:40:25582:25582	232701	12	True				
ANR	232852	ExpressionStatement		877:41:25583:25583	232701	13	True				
ANR	232853	ReturnStatement	return RS_RET_ERR ;	878:2:25587:25604	232701	14	True				
ANR	232854	Identifier	RS_RET_ERR		232701	0					
ANR	232855	IfStatement	"if ( ( iRet = rsParsConstructFromSz ( & pPars , ( uchar * ) * ppRestOfConfLine ) != RS_RET_OK ) )"		232701	10					
ANR	232856	Condition	"iRet = rsParsConstructFromSz ( & pPars , ( uchar * ) * ppRestOfConfLine ) != RS_RET_OK"	886:4:25835:25913	232701	0	True				
ANR	232857	AssignmentExpression	"iRet = rsParsConstructFromSz ( & pPars , ( uchar * ) * ppRestOfConfLine ) != RS_RET_OK"		232701	0		=			
ANR	232858	Identifier	iRet		232701	0					
ANR	232859	EqualityExpression	"rsParsConstructFromSz ( & pPars , ( uchar * ) * ppRestOfConfLine ) != RS_RET_OK"		232701	1		!=			
ANR	232860	CallExpression	"rsParsConstructFromSz ( & pPars , ( uchar * ) * ppRestOfConfLine )"		232701	0					
ANR	232861	Callee	rsParsConstructFromSz		232701	0					
ANR	232862	Identifier	rsParsConstructFromSz		232701	0					
ANR	232863	ArgumentList	& pPars		232701	1					
ANR	232864	Argument	& pPars		232701	0					
ANR	232865	UnaryOperationExpression	& pPars		232701	0					
ANR	232866	UnaryOperator	&		232701	0					
ANR	232867	Identifier	pPars		232701	1					
ANR	232868	Argument	( uchar * ) * ppRestOfConfLine		232701	1					
ANR	232869	CastExpression	( uchar * ) * ppRestOfConfLine		232701	0					
ANR	232870	CastTarget	uchar *		232701	0					
ANR	232871	UnaryOperationExpression	* ppRestOfConfLine		232701	1					
ANR	232872	UnaryOperator	*		232701	0					
ANR	232873	Identifier	ppRestOfConfLine		232701	1					
ANR	232874	Identifier	RS_RET_OK		232701	1					
ANR	232875	CompoundStatement		35:85:1048:1048	232701	1					
ANR	232876	ExpressionStatement	"errmsg . LogError ( 0 , iRet , ""Error %d constructing parser object - ignoring allowed sender list"" , iRet )"	887:2:25920:26020	232701	0	True				
ANR	232877	CallExpression	"errmsg . LogError ( 0 , iRet , ""Error %d constructing parser object - ignoring allowed sender list"" , iRet )"		232701	0					
ANR	232878	Callee	errmsg . LogError		232701	0					
ANR	232879	MemberAccess	errmsg . LogError		232701	0					
ANR	232880	Identifier	errmsg		232701	0					
ANR	232881	Identifier	LogError		232701	1					
ANR	232882	ArgumentList	0		232701	1					
ANR	232883	Argument	0		232701	0					
ANR	232884	PrimaryExpression	0		232701	0					
ANR	232885	Argument	iRet		232701	1					
ANR	232886	Identifier	iRet		232701	0					
ANR	232887	Argument	"""Error %d constructing parser object - ignoring allowed sender list"""		232701	2					
ANR	232888	PrimaryExpression	"""Error %d constructing parser object - ignoring allowed sender list"""		232701	0					
ANR	232889	Argument	iRet		232701	3					
ANR	232890	Identifier	iRet		232701	0					
ANR	232891	ReturnStatement	return ( iRet ) ;	888:2:26024:26036	232701	1	True				
ANR	232892	Identifier	iRet		232701	0					
ANR	232893	WhileStatement	while ( ! parsIsAtEndOfParseString ( pPars ) )		232701	11					
ANR	232894	Condition	! parsIsAtEndOfParseString ( pPars )	891:7:26049:26080	232701	0	True				
ANR	232895	UnaryOperationExpression	! parsIsAtEndOfParseString ( pPars )		232701	0					
ANR	232896	UnaryOperator	!		232701	0					
ANR	232897	CallExpression	parsIsAtEndOfParseString ( pPars )		232701	1					
ANR	232898	Callee	parsIsAtEndOfParseString		232701	0					
ANR	232899	Identifier	parsIsAtEndOfParseString		232701	0					
ANR	232900	ArgumentList	pPars		232701	1					
ANR	232901	Argument	pPars		232701	0					
ANR	232902	Identifier	pPars		232701	0					
ANR	232903	CompoundStatement		40:41:1215:1215	232701	1					
ANR	232904	IfStatement	if ( parsPeekAtCharAtParsPtr ( pPars ) == '#' )		232701	0					
ANR	232905	Condition	parsPeekAtCharAtParsPtr ( pPars ) == '#'	892:5:26090:26126	232701	0	True				
ANR	232906	EqualityExpression	parsPeekAtCharAtParsPtr ( pPars ) == '#'		232701	0		==			
ANR	232907	CallExpression	parsPeekAtCharAtParsPtr ( pPars )		232701	0					
ANR	232908	Callee	parsPeekAtCharAtParsPtr		232701	0					
ANR	232909	Identifier	parsPeekAtCharAtParsPtr		232701	0					
ANR	232910	ArgumentList	pPars		232701	1					
ANR	232911	Argument	pPars		232701	0					
ANR	232912	Identifier	pPars		232701	0					
ANR	232913	PrimaryExpression	'#'		232701	1					
ANR	232914	BreakStatement	break ;	893:3:26132:26137	232701	1	True				
ANR	232915	IfStatement	"if ( ( iRet = parsAddrWithBits ( pPars , & uIP , & iBits ) ) != RS_RET_OK )"		232701	1					
ANR	232916	Condition	"( iRet = parsAddrWithBits ( pPars , & uIP , & iBits ) ) != RS_RET_OK"	895:5:26228:26286	232701	0	True				
ANR	232917	EqualityExpression	"( iRet = parsAddrWithBits ( pPars , & uIP , & iBits ) ) != RS_RET_OK"		232701	0		!=			
ANR	232918	AssignmentExpression	"iRet = parsAddrWithBits ( pPars , & uIP , & iBits )"		232701	0		=			
ANR	232919	Identifier	iRet		232701	0					
ANR	232920	CallExpression	"parsAddrWithBits ( pPars , & uIP , & iBits )"		232701	1					
ANR	232921	Callee	parsAddrWithBits		232701	0					
ANR	232922	Identifier	parsAddrWithBits		232701	0					
ANR	232923	ArgumentList	pPars		232701	1					
ANR	232924	Argument	pPars		232701	0					
ANR	232925	Identifier	pPars		232701	0					
ANR	232926	Argument	& uIP		232701	1					
ANR	232927	UnaryOperationExpression	& uIP		232701	0					
ANR	232928	UnaryOperator	&		232701	0					
ANR	232929	Identifier	uIP		232701	1					
ANR	232930	Argument	& iBits		232701	2					
ANR	232931	UnaryOperationExpression	& iBits		232701	0					
ANR	232932	UnaryOperator	&		232701	0					
ANR	232933	Identifier	iBits		232701	1					
ANR	232934	Identifier	RS_RET_OK		232701	1					
ANR	232935	CompoundStatement		44:66:1421:1421	232701	1					
ANR	232936	Statement	errmsg	896:3:26294:26299	232701	0	True				
ANR	232937	Statement	.	896:9:26300:26300	232701	1	True				
ANR	232938	Statement	LogError	896:10:26301:26308	232701	2	True				
ANR	232939	Statement	(	896:18:26309:26309	232701	3	True				
ANR	232940	Statement	0	896:19:26310:26310	232701	4	True				
ANR	232941	Statement	","	896:20:26311:26311	232701	5	True				
ANR	232942	Statement	iRet	896:22:26313:26316	232701	6	True				
ANR	232943	Statement	","	896:26:26317:26317	232701	7	True				
ANR	232944	Statement	"""Error %d parsing address in allowed sender"""	896:28:26319:26362	232701	8	True				
ANR	232945	Statement	"""list - ignoring."""	897:8:26372:26389	232701	9	True				
ANR	232946	Statement	","	897:26:26390:26390	232701	10	True				
ANR	232947	Statement	iRet	897:28:26392:26395	232701	11	True				
ANR	232948	Statement	)	897:32:26396:26396	232701	12	True				
ANR	232949	ExpressionStatement		897:33:26397:26397	232701	13	True				
ANR	232950	ExpressionStatement	rsParsDestruct ( pPars )	898:3:26402:26423	232701	14	True				
ANR	232951	CallExpression	rsParsDestruct ( pPars )		232701	0					
ANR	232952	Callee	rsParsDestruct		232701	0					
ANR	232953	Identifier	rsParsDestruct		232701	0					
ANR	232954	ArgumentList	pPars		232701	1					
ANR	232955	Argument	pPars		232701	0					
ANR	232956	Identifier	pPars		232701	0					
ANR	232957	ReturnStatement	return ( iRet ) ;	899:3:26428:26440	232701	15	True				
ANR	232958	Identifier	iRet		232701	0					
ANR	232959	IfStatement	"if ( ( iRet = AddAllowedSender ( ppRoot , ppLast , uIP , iBits ) ) != RS_RET_OK )"		232701	2					
ANR	232960	Condition	"( iRet = AddAllowedSender ( ppRoot , ppLast , uIP , iBits ) ) != RS_RET_OK"	901:5:26451:26516	232701	0	True				
ANR	232961	EqualityExpression	"( iRet = AddAllowedSender ( ppRoot , ppLast , uIP , iBits ) ) != RS_RET_OK"		232701	0		!=			
ANR	232962	AssignmentExpression	"iRet = AddAllowedSender ( ppRoot , ppLast , uIP , iBits )"		232701	0		=			
ANR	232963	Identifier	iRet		232701	0					
ANR	232964	CallExpression	"AddAllowedSender ( ppRoot , ppLast , uIP , iBits )"		232701	1					
ANR	232965	Callee	AddAllowedSender		232701	0					
ANR	232966	Identifier	AddAllowedSender		232701	0					
ANR	232967	ArgumentList	ppRoot		232701	1					
ANR	232968	Argument	ppRoot		232701	0					
ANR	232969	Identifier	ppRoot		232701	0					
ANR	232970	Argument	ppLast		232701	1					
ANR	232971	Identifier	ppLast		232701	0					
ANR	232972	Argument	uIP		232701	2					
ANR	232973	Identifier	uIP		232701	0					
ANR	232974	Argument	iBits		232701	3					
ANR	232975	Identifier	iBits		232701	0					
ANR	232976	Identifier	RS_RET_OK		232701	1					
ANR	232977	CompoundStatement		50:73:1651:1651	232701	1					
ANR	232978	IfStatement	if ( iRet == RS_RET_NOENTRY )		232701	0					
ANR	232979	Condition	iRet == RS_RET_NOENTRY	902:13:26534:26555	232701	0	True				
ANR	232980	EqualityExpression	iRet == RS_RET_NOENTRY		232701	0		==			
ANR	232981	Identifier	iRet		232701	0					
ANR	232982	Identifier	RS_RET_NOENTRY		232701	1					
ANR	232983	CompoundStatement		51:37:1690:1690	232701	1					
ANR	232984	Statement	errmsg	903:11:26571:26576	232701	0	True				
ANR	232985	Statement	.	903:17:26577:26577	232701	1	True				
ANR	232986	Statement	LogError	903:18:26578:26585	232701	2	True				
ANR	232987	Statement	(	903:26:26586:26586	232701	3	True				
ANR	232988	Statement	0	903:27:26587:26587	232701	4	True				
ANR	232989	Statement	","	903:28:26588:26588	232701	5	True				
ANR	232990	Statement	iRet	903:30:26590:26593	232701	6	True				
ANR	232991	Statement	","	903:34:26594:26594	232701	7	True				
ANR	232992	Statement	"""Error %d adding allowed sender entry """	903:36:26596:26634	232701	8	True				
ANR	232993	Statement	"""- ignoring."""	904:9:26645:26657	232701	9	True				
ANR	232994	Statement	","	904:22:26658:26658	232701	10	True				
ANR	232995	Statement	iRet	904:24:26660:26663	232701	11	True				
ANR	232996	Statement	)	904:28:26664:26664	232701	12	True				
ANR	232997	ExpressionStatement		904:29:26665:26665	232701	13	True				
ANR	232998	ElseStatement	else		232701	0					
ANR	232999	CompoundStatement		54:17:1816:1816	232701	0					
ANR	233000	Statement	errmsg	906:11:26697:26702	232701	0	True				
ANR	233001	Statement	.	906:17:26703:26703	232701	1	True				
ANR	233002	Statement	LogError	906:18:26704:26711	232701	2	True				
ANR	233003	Statement	(	906:26:26712:26712	232701	3	True				
ANR	233004	Statement	0	906:27:26713:26713	232701	4	True				
ANR	233005	Statement	","	906:28:26714:26714	232701	5	True				
ANR	233006	Statement	iRet	906:30:26716:26719	232701	6	True				
ANR	233007	Statement	","	906:34:26720:26720	232701	7	True				
ANR	233008	Statement	"""Error %d adding allowed sender entry """	906:36:26722:26760	232701	8	True				
ANR	233009	Statement	"""- terminating, nothing more will be added."""	907:9:26771:26814	232701	9	True				
ANR	233010	Statement	","	907:53:26815:26815	232701	10	True				
ANR	233011	Statement	iRet	907:55:26817:26820	232701	11	True				
ANR	233012	Statement	)	907:59:26821:26821	232701	12	True				
ANR	233013	ExpressionStatement		907:60:26822:26822	232701	13	True				
ANR	233014	ExpressionStatement	rsParsDestruct ( pPars )	908:4:26828:26849	232701	14	True				
ANR	233015	CallExpression	rsParsDestruct ( pPars )		232701	0					
ANR	233016	Callee	rsParsDestruct		232701	0					
ANR	233017	Identifier	rsParsDestruct		232701	0					
ANR	233018	ArgumentList	pPars		232701	1					
ANR	233019	Argument	pPars		232701	0					
ANR	233020	Identifier	pPars		232701	0					
ANR	233021	ExpressionStatement	free ( uIP )	909:4:26855:26864	232701	15	True				
ANR	233022	CallExpression	free ( uIP )		232701	0					
ANR	233023	Callee	free		232701	0					
ANR	233024	Identifier	free		232701	0					
ANR	233025	ArgumentList	uIP		232701	1					
ANR	233026	Argument	uIP		232701	0					
ANR	233027	Identifier	uIP		232701	0					
ANR	233028	ReturnStatement	return ( iRet ) ;	910:4:26870:26882	232701	16	True				
ANR	233029	Identifier	iRet		232701	0					
ANR	233030	ExpressionStatement	free ( uIP )	913:2:26902:26912	232701	3	True				
ANR	233031	CallExpression	free ( uIP )		232701	0					
ANR	233032	Callee	free		232701	0					
ANR	233033	Identifier	free		232701	0					
ANR	233034	ArgumentList	uIP		232701	1					
ANR	233035	Argument	uIP		232701	0					
ANR	233036	Identifier	uIP		232701	0					
ANR	233037	ExpressionStatement	* ppRestOfConfLine += parsGetCurrentPosition ( pPars )	917:1:26976:27026	232701	12	True				
ANR	233038	AssignmentExpression	* ppRestOfConfLine += parsGetCurrentPosition ( pPars )		232701	0		+=			
ANR	233039	UnaryOperationExpression	* ppRestOfConfLine		232701	0					
ANR	233040	UnaryOperator	*		232701	0					
ANR	233041	Identifier	ppRestOfConfLine		232701	1					
ANR	233042	CallExpression	parsGetCurrentPosition ( pPars )		232701	1					
ANR	233043	Callee	parsGetCurrentPosition		232701	0					
ANR	233044	Identifier	parsGetCurrentPosition		232701	0					
ANR	233045	ArgumentList	pPars		232701	1					
ANR	233046	Argument	pPars		232701	0					
ANR	233047	Identifier	pPars		232701	0					
ANR	233048	ReturnStatement	return rsParsDestruct ( pPars ) ;	918:1:27029:27057	232701	13	True				
ANR	233049	CallExpression	rsParsDestruct ( pPars )		232701	0					
ANR	233050	Callee	rsParsDestruct		232701	0					
ANR	233051	Identifier	rsParsDestruct		232701	0					
ANR	233052	ArgumentList	pPars		232701	1					
ANR	233053	Argument	pPars		232701	0					
ANR	233054	Identifier	pPars		232701	0					
ANR	233055	ReturnType	static rsRetVal		232701	1					
ANR	233056	Identifier	addAllowedSenderLine		232701	2					
ANR	233057	ParameterList	"char * pName , uchar * * ppRestOfConfLine"		232701	3					
ANR	233058	Parameter	char * pName	851:21:24828:24838	232701	0	True				
ANR	233059	ParameterType	char *		232701	0					
ANR	233060	Identifier	pName		232701	1					
ANR	233061	Parameter	uchar * * ppRestOfConfLine	851:34:24841:24864	232701	1	True				
ANR	233062	ParameterType	uchar * *		232701	0					
ANR	233063	Identifier	ppRestOfConfLine		232701	1					
ANR	233064	CFGEntryNode	ENTRY		232701		True				
ANR	233065	CFGExitNode	EXIT		232701		True				
ANR	233066	Symbol	& pLastAllowedSenders_GSS		232701						
ANR	233067	Symbol	& uIP		232701						
ANR	233068	Symbol	parsGetCurrentPosition		232701						
ANR	233069	Symbol	RS_RET_ERR		232701						
ANR	233070	Symbol	iRet		232701						
ANR	233071	Symbol	& pAllowedSenders_TCP		232701						
ANR	233072	Symbol	& pLastAllowedSenders_UDP		232701						
ANR	233073	Symbol	parsPeekAtCharAtParsPtr		232701						
ANR	233074	Symbol	& pPars		232701						
ANR	233075	Symbol	pPars		232701						
ANR	233076	Symbol	pName		232701						
ANR	233077	Symbol	AddAllowedSender		232701						
ANR	233078	Symbol	ppLast		232701						
ANR	233079	Symbol	strcasecmp		232701						
ANR	233080	Symbol	uIP		232701						
ANR	233081	Symbol	RS_RET_NOENTRY		232701						
ANR	233082	Symbol	parsAddrWithBits		232701						
ANR	233083	Symbol	ppRestOfConfLine		232701						
ANR	233084	Symbol	NULL		232701						
ANR	233085	Symbol	RS_RET_OK		232701						
ANR	233086	Symbol	iBits		232701						
ANR	233087	Symbol	errmsg		232701						
ANR	233088	Symbol	& pAllowedSenders_UDP		232701						
ANR	233089	Symbol	& pLastAllowedSenders_TCP		232701						
ANR	233090	Symbol	& pAllowedSenders_GSS		232701						
ANR	233091	Symbol	rsParsDestruct		232701						
ANR	233092	Symbol	ppRoot		232701						
ANR	233093	Symbol	* ppRestOfConfLine		232701						
ANR	233094	Symbol	rsParsConstructFromSz		232701						
ANR	233095	Symbol	& iBits		232701						
ANR	233096	Symbol	parsIsAtEndOfParseString		232701						
ANR	233097	Function	MaskCmp	929:0:27380:29660							
ANR	233098	FunctionDef	"MaskCmp (struct NetAddr * pAllow , uint8_t bits , struct sockaddr * pFrom , const char * pszFromHost , int bChkDNS)"		233097	0					
ANR	233099	CompoundStatement		931:0:27499:29660	233097	0					
ANR	233100	ExpressionStatement	assert ( pAllow != NULL )	932:1:27502:27524	233097	0	True				
ANR	233101	CallExpression	assert ( pAllow != NULL )		233097	0					
ANR	233102	Callee	assert		233097	0					
ANR	233103	Identifier	assert		233097	0					
ANR	233104	ArgumentList	pAllow != NULL		233097	1					
ANR	233105	Argument	pAllow != NULL		233097	0					
ANR	233106	EqualityExpression	pAllow != NULL		233097	0		!=			
ANR	233107	Identifier	pAllow		233097	0					
ANR	233108	Identifier	NULL		233097	1					
ANR	233109	ExpressionStatement	assert ( pFrom != NULL )	933:1:27527:27548	233097	1	True				
ANR	233110	CallExpression	assert ( pFrom != NULL )		233097	0					
ANR	233111	Callee	assert		233097	0					
ANR	233112	Identifier	assert		233097	0					
ANR	233113	ArgumentList	pFrom != NULL		233097	1					
ANR	233114	Argument	pFrom != NULL		233097	0					
ANR	233115	EqualityExpression	pFrom != NULL		233097	0		!=			
ANR	233116	Identifier	pFrom		233097	0					
ANR	233117	Identifier	NULL		233097	1					
ANR	233118	IfStatement	"if ( F_ISSET ( pAllow -> flags , ADDR_NAME ) )"		233097	2					
ANR	233119	Condition	"F_ISSET ( pAllow -> flags , ADDR_NAME )"	935:4:27555:27587	233097	0	True				
ANR	233120	CallExpression	"F_ISSET ( pAllow -> flags , ADDR_NAME )"		233097	0					
ANR	233121	Callee	F_ISSET		233097	0					
ANR	233122	Identifier	F_ISSET		233097	0					
ANR	233123	ArgumentList	pAllow -> flags		233097	1					
ANR	233124	Argument	pAllow -> flags		233097	0					
ANR	233125	PtrMemberAccess	pAllow -> flags		233097	0					
ANR	233126	Identifier	pAllow		233097	0					
ANR	233127	Identifier	flags		233097	1					
ANR	233128	Argument	ADDR_NAME		233097	1					
ANR	233129	Identifier	ADDR_NAME		233097	0					
ANR	233130	CompoundStatement		5:39:90:90	233097	1					
ANR	233131	IfStatement	if ( bChkDNS == 0 )		233097	0					
ANR	233132	Condition	bChkDNS == 0	936:5:27597:27608	233097	0	True				
ANR	233133	EqualityExpression	bChkDNS == 0		233097	0		==			
ANR	233134	Identifier	bChkDNS		233097	0					
ANR	233135	PrimaryExpression	0		233097	1					
ANR	233136	ReturnStatement	return 2 ;	937:3:27614:27622	233097	1	True				
ANR	233137	PrimaryExpression	2		233097	0					
ANR	233138	ElseStatement	else		233097	0					
ANR	233139	ReturnStatement	"return ( fnmatch ( pAllow -> addr . HostWildcard , pszFromHost , FNM_NOESCAPE | FNM_CASEFOLD ) == 0 ) ;"	944:3:27933:28020	233097	0	True				
ANR	233140	EqualityExpression	"fnmatch ( pAllow -> addr . HostWildcard , pszFromHost , FNM_NOESCAPE | FNM_CASEFOLD ) == 0"		233097	0		==			
ANR	233141	CallExpression	"fnmatch ( pAllow -> addr . HostWildcard , pszFromHost , FNM_NOESCAPE | FNM_CASEFOLD )"		233097	0					
ANR	233142	Callee	fnmatch		233097	0					
ANR	233143	Identifier	fnmatch		233097	0					
ANR	233144	ArgumentList	pAllow -> addr . HostWildcard		233097	1					
ANR	233145	Argument	pAllow -> addr . HostWildcard		233097	0					
ANR	233146	MemberAccess	pAllow -> addr . HostWildcard		233097	0					
ANR	233147	PtrMemberAccess	pAllow -> addr		233097	0					
ANR	233148	Identifier	pAllow		233097	0					
ANR	233149	Identifier	addr		233097	1					
ANR	233150	Identifier	HostWildcard		233097	1					
ANR	233151	Argument	pszFromHost		233097	1					
ANR	233152	Identifier	pszFromHost		233097	0					
ANR	233153	Argument	FNM_NOESCAPE | FNM_CASEFOLD		233097	2					
ANR	233154	InclusiveOrExpression	FNM_NOESCAPE | FNM_CASEFOLD		233097	0		|			
ANR	233155	Identifier	FNM_NOESCAPE		233097	0					
ANR	233156	Identifier	FNM_CASEFOLD		233097	1					
ANR	233157	PrimaryExpression	0		233097	1					
ANR	233158	ExpressionStatement	"dbgprintf ( ""MaskCmp: host=\\""%s\\""; pattern=\\""%s\\""\\n"" , pszFromHost , pAllow -> addr . HostWildcard )"	938:2:27626:27717	233097	1	True				
ANR	233159	CallExpression	"dbgprintf ( ""MaskCmp: host=\\""%s\\""; pattern=\\""%s\\""\\n"" , pszFromHost , pAllow -> addr . HostWildcard )"		233097	0					
ANR	233160	Callee	dbgprintf		233097	0					
ANR	233161	Identifier	dbgprintf		233097	0					
ANR	233162	ArgumentList	"""MaskCmp: host=\\""%s\\""; pattern=\\""%s\\""\\n"""		233097	1					
ANR	233163	Argument	"""MaskCmp: host=\\""%s\\""; pattern=\\""%s\\""\\n"""		233097	0					
ANR	233164	PrimaryExpression	"""MaskCmp: host=\\""%s\\""; pattern=\\""%s\\""\\n"""		233097	0					
ANR	233165	Argument	pszFromHost		233097	1					
ANR	233166	Identifier	pszFromHost		233097	0					
ANR	233167	Argument	pAllow -> addr . HostWildcard		233097	2					
ANR	233168	MemberAccess	pAllow -> addr . HostWildcard		233097	0					
ANR	233169	PtrMemberAccess	pAllow -> addr		233097	0					
ANR	233170	Identifier	pAllow		233097	0					
ANR	233171	Identifier	addr		233097	1					
ANR	233172	Identifier	HostWildcard		233097	1					
ANR	233173	Statement	if	940:3:27725:27726	233097	2	True				
ANR	233174	Statement	!	940:6:27728:27728	233097	3	True				
ANR	233175	Statement	defined	940:7:27729:27735	233097	4	True				
ANR	233176	Statement	(	940:14:27736:27736	233097	5	True				
ANR	233177	Statement	FNM_CASEFOLD	940:15:27737:27748	233097	6	True				
ANR	233178	Statement	)	940:27:27749:27749	233097	7	True				
ANR	233179	ReturnStatement	"return ( fnmatch ( pAllow -> addr . HostWildcard , pszFromHost , FNM_NOESCAPE ) == 0 ) ;"	942:3:27846:27920	233097	8	True				
ANR	233180	EqualityExpression	"fnmatch ( pAllow -> addr . HostWildcard , pszFromHost , FNM_NOESCAPE ) == 0"		233097	0		==			
ANR	233181	CallExpression	"fnmatch ( pAllow -> addr . HostWildcard , pszFromHost , FNM_NOESCAPE )"		233097	0					
ANR	233182	Callee	fnmatch		233097	0					
ANR	233183	Identifier	fnmatch		233097	0					
ANR	233184	ArgumentList	pAllow -> addr . HostWildcard		233097	1					
ANR	233185	Argument	pAllow -> addr . HostWildcard		233097	0					
ANR	233186	MemberAccess	pAllow -> addr . HostWildcard		233097	0					
ANR	233187	PtrMemberAccess	pAllow -> addr		233097	0					
ANR	233188	Identifier	pAllow		233097	0					
ANR	233189	Identifier	addr		233097	1					
ANR	233190	Identifier	HostWildcard		233097	1					
ANR	233191	Argument	pszFromHost		233097	1					
ANR	233192	Identifier	pszFromHost		233097	0					
ANR	233193	Argument	FNM_NOESCAPE		233097	2					
ANR	233194	Identifier	FNM_NOESCAPE		233097	0					
ANR	233195	PrimaryExpression	0		233097	1					
ANR	233196	Statement	endif	945:3:28025:28029	233097	9	True				
ANR	233197	ElseStatement	else		233097	0					
ANR	233198	ReturnStatement	return 0 ;	987:5:29534:29542	233097	0	True				
ANR	233199	PrimaryExpression	0		233097	0					
ANR	233200	ReturnType	static int		233097	1					
ANR	233201	Identifier	MaskCmp		233097	2					
ANR	233202	ParameterList	"struct NetAddr * pAllow , uint8_t bits , struct sockaddr * pFrom , const char * pszFromHost , int bChkDNS"		233097	3					
ANR	233203	Parameter	struct NetAddr * pAllow	930:8:27399:27420	233097	0	True				
ANR	233204	ParameterType	struct NetAddr *		233097	0					
ANR	233205	Identifier	pAllow		233097	1					
ANR	233206	Parameter	uint8_t bits	930:32:27423:27434	233097	1	True				
ANR	233207	ParameterType	uint8_t		233097	0					
ANR	233208	Identifier	bits		233097	1					
ANR	233209	Parameter	struct sockaddr * pFrom	930:46:27437:27458	233097	2	True				
ANR	233210	ParameterType	struct sockaddr *		233097	0					
ANR	233211	Identifier	pFrom		233097	1					
ANR	233212	Parameter	const char * pszFromHost	930:70:27461:27483	233097	3	True				
ANR	233213	ParameterType	const char *		233097	0					
ANR	233214	Identifier	pszFromHost		233097	1					
ANR	233215	Parameter	int bChkDNS	930:95:27486:27496	233097	4	True				
ANR	233216	ParameterType	int		233097	0					
ANR	233217	Identifier	bChkDNS		233097	1					
ANR	233218	CFGEntryNode	ENTRY		233097		True				
ANR	233219	CFGExitNode	EXIT		233097		True				
ANR	233220	Symbol	NULL		233097						
ANR	233221	Symbol	F_ISSET		233097						
ANR	233222	Symbol	fnmatch		233097						
ANR	233223	Symbol	pszFromHost		233097						
ANR	233224	Symbol	pAllow -> addr		233097						
ANR	233225	Symbol	bChkDNS		233097						
ANR	233226	Symbol	bits		233097						
ANR	233227	Symbol	FNM_NOESCAPE		233097						
ANR	233228	Symbol	pFrom		233097						
ANR	233229	Symbol	* pAllow		233097						
ANR	233230	Symbol	pAllow -> addr . HostWildcard		233097						
ANR	233231	Symbol	FNM_CASEFOLD		233097						
ANR	233232	Symbol	pAllow -> flags		233097						
ANR	233233	Symbol	pAllow		233097						
ANR	233234	Symbol	ADDR_NAME		233097						
ANR	233235	Function	isAllowedSender2	1009:0:30073:31158							
ANR	233236	FunctionDef	"isAllowedSender2 (uchar * pszType , struct sockaddr * pFrom , const char * pszFromHost , int bChkDNS)"		233235	0					
ANR	233237	CompoundStatement		1010:0:30179:31158	233235	0					
ANR	233238	IdentifierDeclStatement	struct AllowedSenders * pAllow ;	1011:1:30182:30211	233235	0	True				
ANR	233239	IdentifierDecl	* pAllow		233235	0					
ANR	233240	IdentifierDeclType	struct AllowedSenders *		233235	0					
ANR	233241	Identifier	pAllow		233235	1					
ANR	233242	IdentifierDeclStatement	struct AllowedSenders * pAllowRoot = NULL ;	1012:1:30214:30254	233235	1	True				
ANR	233243	IdentifierDecl	* pAllowRoot = NULL		233235	0					
ANR	233244	IdentifierDeclType	struct AllowedSenders *		233235	0					
ANR	233245	Identifier	pAllowRoot		233235	1					
ANR	233246	AssignmentExpression	* pAllowRoot = NULL		233235	2		=			
ANR	233247	Identifier	NULL		233235	0					
ANR	233248	Identifier	NULL		233235	1					
ANR	233249	IdentifierDeclStatement	int bNeededDNS = 0 ;	1013:1:30257:30275	233235	2	True				
ANR	233250	IdentifierDecl	bNeededDNS = 0		233235	0					
ANR	233251	IdentifierDeclType	int		233235	0					
ANR	233252	Identifier	bNeededDNS		233235	1					
ANR	233253	AssignmentExpression	bNeededDNS = 0		233235	2		=			
ANR	233254	Identifier	bNeededDNS		233235	0					
ANR	233255	PrimaryExpression	0		233235	1					
ANR	233256	IdentifierDeclStatement	int ret ;	1014:1:30332:30339	233235	3	True				
ANR	233257	IdentifierDecl	ret		233235	0					
ANR	233258	IdentifierDeclType	int		233235	0					
ANR	233259	Identifier	ret		233235	1					
ANR	233260	ExpressionStatement	assert ( pFrom != NULL )	1016:1:30343:30364	233235	4	True				
ANR	233261	CallExpression	assert ( pFrom != NULL )		233235	0					
ANR	233262	Callee	assert		233235	0					
ANR	233263	Identifier	assert		233235	0					
ANR	233264	ArgumentList	pFrom != NULL		233235	1					
ANR	233265	Argument	pFrom != NULL		233235	0					
ANR	233266	EqualityExpression	pFrom != NULL		233235	0		!=			
ANR	233267	Identifier	pFrom		233235	0					
ANR	233268	Identifier	NULL		233235	1					
ANR	233269	IfStatement	"if ( setAllowRoot ( & pAllowRoot , pszType ) != RS_RET_OK )"		233235	5					
ANR	233270	Condition	"setAllowRoot ( & pAllowRoot , pszType ) != RS_RET_OK"	1018:4:30372:30418	233235	0	True				
ANR	233271	EqualityExpression	"setAllowRoot ( & pAllowRoot , pszType ) != RS_RET_OK"		233235	0		!=			
ANR	233272	CallExpression	"setAllowRoot ( & pAllowRoot , pszType )"		233235	0					
ANR	233273	Callee	setAllowRoot		233235	0					
ANR	233274	Identifier	setAllowRoot		233235	0					
ANR	233275	ArgumentList	& pAllowRoot		233235	1					
ANR	233276	Argument	& pAllowRoot		233235	0					
ANR	233277	UnaryOperationExpression	& pAllowRoot		233235	0					
ANR	233278	UnaryOperator	&		233235	0					
ANR	233279	Identifier	pAllowRoot		233235	1					
ANR	233280	Argument	pszType		233235	1					
ANR	233281	Identifier	pszType		233235	0					
ANR	233282	Identifier	RS_RET_OK		233235	1					
ANR	233283	ReturnStatement	return 0 ;	1019:2:30423:30431	233235	1	True				
ANR	233284	PrimaryExpression	0		233235	0					
ANR	233285	IfStatement	if ( pAllowRoot == NULL )		233235	6					
ANR	233286	Condition	pAllowRoot == NULL	1021:4:30514:30531	233235	0	True				
ANR	233287	EqualityExpression	pAllowRoot == NULL		233235	0		==			
ANR	233288	Identifier	pAllowRoot		233235	0					
ANR	233289	Identifier	NULL		233235	1					
ANR	233290	ReturnStatement	return 1 ;	1022:2:30536:30544	233235	1	True				
ANR	233291	PrimaryExpression	1		233235	0					
ANR	233292	ForStatement	for ( pAllow = pAllowRoot ; pAllow != NULL ; pAllow = pAllow -> pNext )		233235	7					
ANR	233293	ForInit	pAllow = pAllowRoot ;	1030:5:30905:30925	233235	0	True				
ANR	233294	AssignmentExpression	pAllow = pAllowRoot		233235	0		=			
ANR	233295	Identifier	pAllow		233235	0					
ANR	233296	Identifier	pAllowRoot		233235	1					
ANR	233297	Condition	pAllow != NULL	1030:27:30927:30940	233235	1	True				
ANR	233298	EqualityExpression	pAllow != NULL		233235	0		!=			
ANR	233299	Identifier	pAllow		233235	0					
ANR	233300	Identifier	NULL		233235	1					
ANR	233301	AssignmentExpression	pAllow = pAllow -> pNext	1030:44:30944:30965	233235	2	True	=			
ANR	233302	Identifier	pAllow		233235	0					
ANR	233303	PtrMemberAccess	pAllow -> pNext		233235	1					
ANR	233304	Identifier	pAllow		233235	0					
ANR	233305	Identifier	pNext		233235	1					
ANR	233306	CompoundStatement		21:68:788:788	233235	3					
ANR	233307	ExpressionStatement	"ret = MaskCmp ( & ( pAllow -> allowedSender ) , pAllow -> SignificantBits , pFrom , pszFromHost , bChkDNS )"	1031:2:30972:31066	233235	0	True				
ANR	233308	AssignmentExpression	"ret = MaskCmp ( & ( pAllow -> allowedSender ) , pAllow -> SignificantBits , pFrom , pszFromHost , bChkDNS )"		233235	0		=			
ANR	233309	Identifier	ret		233235	0					
ANR	233310	CallExpression	"MaskCmp ( & ( pAllow -> allowedSender ) , pAllow -> SignificantBits , pFrom , pszFromHost , bChkDNS )"		233235	1					
ANR	233311	Callee	MaskCmp		233235	0					
ANR	233312	Identifier	MaskCmp		233235	0					
ANR	233313	ArgumentList	& ( pAllow -> allowedSender )		233235	1					
ANR	233314	Argument	& ( pAllow -> allowedSender )		233235	0					
ANR	233315	UnaryOperationExpression	& ( pAllow -> allowedSender )		233235	0					
ANR	233316	UnaryOperator	&		233235	0					
ANR	233317	PtrMemberAccess	pAllow -> allowedSender		233235	1					
ANR	233318	Identifier	pAllow		233235	0					
ANR	233319	Identifier	allowedSender		233235	1					
ANR	233320	Argument	pAllow -> SignificantBits		233235	1					
ANR	233321	PtrMemberAccess	pAllow -> SignificantBits		233235	0					
ANR	233322	Identifier	pAllow		233235	0					
ANR	233323	Identifier	SignificantBits		233235	1					
ANR	233324	Argument	pFrom		233235	2					
ANR	233325	Identifier	pFrom		233235	0					
ANR	233326	Argument	pszFromHost		233235	3					
ANR	233327	Identifier	pszFromHost		233235	0					
ANR	233328	Argument	bChkDNS		233235	4					
ANR	233329	Identifier	bChkDNS		233235	0					
ANR	233330	IfStatement	if ( ret == 1 )		233235	1					
ANR	233331	Condition	ret == 1	1032:5:31073:31080	233235	0	True				
ANR	233332	EqualityExpression	ret == 1		233235	0		==			
ANR	233333	Identifier	ret		233235	0					
ANR	233334	PrimaryExpression	1		233235	1					
ANR	233335	ReturnStatement	return 1 ;	1033:3:31086:31094	233235	1	True				
ANR	233336	PrimaryExpression	1		233235	0					
ANR	233337	ElseStatement	else		233235	0					
ANR	233338	IfStatement	if ( ret == 2 )		233235	0					
ANR	233339	Condition	ret == 2	1034:10:31106:31113	233235	0	True				
ANR	233340	EqualityExpression	ret == 2		233235	0		==			
ANR	233341	Identifier	ret		233235	0					
ANR	233342	PrimaryExpression	2		233235	1					
ANR	233343	ExpressionStatement	bNeededDNS = 2	1035:3:31119:31133	233235	1	True				
ANR	233344	AssignmentExpression	bNeededDNS = 2		233235	0		=			
ANR	233345	Identifier	bNeededDNS		233235	0					
ANR	233346	PrimaryExpression	2		233235	1					
ANR	233347	ReturnStatement	return bNeededDNS ;	1037:1:31139:31156	233235	8	True				
ANR	233348	Identifier	bNeededDNS		233235	0					
ANR	233349	ReturnType	static int		233235	1					
ANR	233350	Identifier	isAllowedSender2		233235	2					
ANR	233351	ParameterList	"uchar * pszType , struct sockaddr * pFrom , const char * pszFromHost , int bChkDNS"		233235	3					
ANR	233352	Parameter	uchar * pszType	1009:28:30101:30114	233235	0	True				
ANR	233353	ParameterType	uchar *		233235	0					
ANR	233354	Identifier	pszType		233235	1					
ANR	233355	Parameter	struct sockaddr * pFrom	1009:44:30117:30138	233235	1	True				
ANR	233356	ParameterType	struct sockaddr *		233235	0					
ANR	233357	Identifier	pFrom		233235	1					
ANR	233358	Parameter	const char * pszFromHost	1009:68:30141:30163	233235	2	True				
ANR	233359	ParameterType	const char *		233235	0					
ANR	233360	Identifier	pszFromHost		233235	1					
ANR	233361	Parameter	int bChkDNS	1009:93:30166:30176	233235	3	True				
ANR	233362	ParameterType	int		233235	0					
ANR	233363	Identifier	bChkDNS		233235	1					
ANR	233364	CFGEntryNode	ENTRY		233235		True				
ANR	233365	CFGExitNode	EXIT		233235		True				
ANR	233366	Symbol	ret		233235						
ANR	233367	Symbol	& pAllowRoot		233235						
ANR	233368	Symbol	NULL		233235						
ANR	233369	Symbol	pszFromHost		233235						
ANR	233370	Symbol	pAllowRoot		233235						
ANR	233371	Symbol	setAllowRoot		233235						
ANR	233372	Symbol	RS_RET_OK		233235						
ANR	233373	Symbol	pszType		233235						
ANR	233374	Symbol	bChkDNS		233235						
ANR	233375	Symbol	pFrom		233235						
ANR	233376	Symbol	* pAllow		233235						
ANR	233377	Symbol	MaskCmp		233235						
ANR	233378	Symbol	bNeededDNS		233235						
ANR	233379	Symbol	pAllow -> pNext		233235						
ANR	233380	Symbol	pAllow		233235						
ANR	233381	Symbol	pAllow -> SignificantBits		233235						
ANR	233382	Symbol	& pAllow -> allowedSender		233235						
ANR	233383	Function	isAllowedSender	1042:0:31206:31358							
ANR	233384	FunctionDef	"isAllowedSender (uchar * pszType , struct sockaddr * pFrom , const char * pszFromHost)"		233383	0					
ANR	233385	CompoundStatement		1043:81:31298:31358	233383	0					
ANR	233386	ReturnStatement	"return isAllowedSender2 ( pszType , pFrom , pszFromHost , 1 ) ;"	1044:1:31301:31356	233383	0	True				
ANR	233387	CallExpression	"isAllowedSender2 ( pszType , pFrom , pszFromHost , 1 )"		233383	0					
ANR	233388	Callee	isAllowedSender2		233383	0					
ANR	233389	Identifier	isAllowedSender2		233383	0					
ANR	233390	ArgumentList	pszType		233383	1					
ANR	233391	Argument	pszType		233383	0					
ANR	233392	Identifier	pszType		233383	0					
ANR	233393	Argument	pFrom		233383	1					
ANR	233394	Identifier	pFrom		233383	0					
ANR	233395	Argument	pszFromHost		233383	2					
ANR	233396	Identifier	pszFromHost		233383	0					
ANR	233397	Argument	1		233383	3					
ANR	233398	PrimaryExpression	1		233383	0					
ANR	233399	ReturnType	static int		233383	1					
ANR	233400	Identifier	isAllowedSender		233383	2					
ANR	233401	ParameterList	"uchar * pszType , struct sockaddr * pFrom , const char * pszFromHost"		233383	3					
ANR	233402	Parameter	uchar * pszType	1043:16:31233:31246	233383	0	True				
ANR	233403	ParameterType	uchar *		233383	0					
ANR	233404	Identifier	pszType		233383	1					
ANR	233405	Parameter	struct sockaddr * pFrom	1043:32:31249:31270	233383	1	True				
ANR	233406	ParameterType	struct sockaddr *		233383	0					
ANR	233407	Identifier	pFrom		233383	1					
ANR	233408	Parameter	const char * pszFromHost	1043:56:31273:31295	233383	2	True				
ANR	233409	ParameterType	const char *		233383	0					
ANR	233410	Identifier	pszFromHost		233383	1					
ANR	233411	CFGEntryNode	ENTRY		233383		True				
ANR	233412	CFGExitNode	EXIT		233383		True				
ANR	233413	Symbol	pFrom		233383						
ANR	233414	Symbol	pszFromHost		233383						
ANR	233415	Symbol	isAllowedSender2		233383						
ANR	233416	Symbol	pszType		233383						
ANR	233417	Function	should_use_so_bsdcompat	1057:0:31736:32792							
ANR	233418	FunctionDef	should_use_so_bsdcompat ()		233417	0					
ANR	233419	CompoundStatement		1059:0:31777:32792	233417	0					
ANR	233420	Statement	static	1061:4:31798:31803	233417	0	True				
ANR	233421	IdentifierDeclStatement	int init_done = 0 ;	1061:11:31805:31822	233417	1	True				
ANR	233422	IdentifierDecl	init_done = 0		233417	0					
ANR	233423	IdentifierDeclType	int		233417	0					
ANR	233424	Identifier	init_done		233417	1					
ANR	233425	AssignmentExpression	init_done = 0		233417	2		=			
ANR	233426	Identifier	init_done		233417	0					
ANR	233427	PrimaryExpression	0		233417	1					
ANR	233428	Statement	static	1062:4:31828:31833	233417	2	True				
ANR	233429	IdentifierDeclStatement	int so_bsdcompat_is_obsolete = 0 ;	1062:11:31835:31867	233417	3	True				
ANR	233430	IdentifierDecl	so_bsdcompat_is_obsolete = 0		233417	0					
ANR	233431	IdentifierDeclType	int		233417	0					
ANR	233432	Identifier	so_bsdcompat_is_obsolete		233417	1					
ANR	233433	AssignmentExpression	so_bsdcompat_is_obsolete = 0		233417	2		=			
ANR	233434	Identifier	so_bsdcompat_is_obsolete		233417	0					
ANR	233435	PrimaryExpression	0		233417	1					
ANR	233436	IfStatement	if ( ! init_done )		233417	4					
ANR	233437	Condition	! init_done	1064:8:31878:31887	233417	0	True				
ANR	233438	UnaryOperationExpression	! init_done		233417	0					
ANR	233439	UnaryOperator	!		233417	0					
ANR	233440	Identifier	init_done		233417	1					
ANR	233441	CompoundStatement		8:1:142:174	233417	1					
ANR	233442	IdentifierDeclStatement	struct utsname myutsname ;	1065:1:31893:31917	233417	0	True				
ANR	233443	IdentifierDecl	myutsname		233417	0					
ANR	233444	IdentifierDeclType	struct utsname		233417	0					
ANR	233445	Identifier	myutsname		233417	1					
ANR	233446	IdentifierDeclStatement	"unsigned int version , patchlevel ;"	1066:1:31920:31952	233417	1	True				
ANR	233447	IdentifierDecl	version		233417	0					
ANR	233448	IdentifierDeclType	unsigned int		233417	0					
ANR	233449	Identifier	version		233417	1					
ANR	233450	IdentifierDecl	patchlevel		233417	1					
ANR	233451	IdentifierDeclType	unsigned int		233417	0					
ANR	233452	Identifier	patchlevel		233417	1					
ANR	233453	ExpressionStatement	init_done = 1	1068:1:31956:31969	233417	2	True				
ANR	233454	AssignmentExpression	init_done = 1		233417	0		=			
ANR	233455	Identifier	init_done		233417	0					
ANR	233456	PrimaryExpression	1		233417	1					
ANR	233457	IfStatement	if ( uname ( & myutsname ) < 0 )		233417	3					
ANR	233458	Condition	uname ( & myutsname ) < 0	1069:5:31976:31996	233417	0	True				
ANR	233459	RelationalExpression	uname ( & myutsname ) < 0		233417	0		<			
ANR	233460	CallExpression	uname ( & myutsname )		233417	0					
ANR	233461	Callee	uname		233417	0					
ANR	233462	Identifier	uname		233417	0					
ANR	233463	ArgumentList	& myutsname		233417	1					
ANR	233464	Argument	& myutsname		233417	0					
ANR	233465	UnaryOperationExpression	& myutsname		233417	0					
ANR	233466	UnaryOperator	&		233417	0					
ANR	233467	Identifier	myutsname		233417	1					
ANR	233468	PrimaryExpression	0		233417	1					
ANR	233469	CompoundStatement		12:2:225:242	233417	1					
ANR	233470	IdentifierDeclStatement	char errStr [ 1024 ] ;	1070:2:32003:32020	233417	0	True				
ANR	233471	IdentifierDecl	errStr [ 1024 ]		233417	0					
ANR	233472	IdentifierDeclType	char [ 1024 ]		233417	0					
ANR	233473	Identifier	errStr		233417	1					
ANR	233474	PrimaryExpression	1024		233417	2					
ANR	233475	ExpressionStatement	"dbgprintf ( ""uname: %s\\r\\n"" , rs_strerror_r ( errno , errStr , sizeof ( errStr ) ) )"	1071:2:32024:32096	233417	1	True				
ANR	233476	CallExpression	"dbgprintf ( ""uname: %s\\r\\n"" , rs_strerror_r ( errno , errStr , sizeof ( errStr ) ) )"		233417	0					
ANR	233477	Callee	dbgprintf		233417	0					
ANR	233478	Identifier	dbgprintf		233417	0					
ANR	233479	ArgumentList	"""uname: %s\\r\\n"""		233417	1					
ANR	233480	Argument	"""uname: %s\\r\\n"""		233417	0					
ANR	233481	PrimaryExpression	"""uname: %s\\r\\n"""		233417	0					
ANR	233482	Argument	"rs_strerror_r ( errno , errStr , sizeof ( errStr ) )"		233417	1					
ANR	233483	CallExpression	"rs_strerror_r ( errno , errStr , sizeof ( errStr ) )"		233417	0					
ANR	233484	Callee	rs_strerror_r		233417	0					
ANR	233485	Identifier	rs_strerror_r		233417	0					
ANR	233486	ArgumentList	errno		233417	1					
ANR	233487	Argument	errno		233417	0					
ANR	233488	Identifier	errno		233417	0					
ANR	233489	Argument	errStr		233417	1					
ANR	233490	Identifier	errStr		233417	0					
ANR	233491	Argument	sizeof ( errStr )		233417	2					
ANR	233492	SizeofExpression	sizeof ( errStr )		233417	0					
ANR	233493	Sizeof	sizeof		233417	0					
ANR	233494	SizeofOperand	errStr		233417	1					
ANR	233495	ReturnStatement	return 1 ;	1072:2:32100:32108	233417	2	True				
ANR	233496	PrimaryExpression	1		233417	0					
ANR	233497	IfStatement	"if ( sscanf ( myutsname . release , ""%u.%u"" , & version , & patchlevel ) != 2 )"		233417	4					
ANR	233498	Condition	"sscanf ( myutsname . release , ""%u.%u"" , & version , & patchlevel ) != 2"	1077:5:32306:32367	233417	0	True				
ANR	233499	EqualityExpression	"sscanf ( myutsname . release , ""%u.%u"" , & version , & patchlevel ) != 2"		233417	0		!=			
ANR	233500	CallExpression	"sscanf ( myutsname . release , ""%u.%u"" , & version , & patchlevel )"		233417	0					
ANR	233501	Callee	sscanf		233417	0					
ANR	233502	Identifier	sscanf		233417	0					
ANR	233503	ArgumentList	myutsname . release		233417	1					
ANR	233504	Argument	myutsname . release		233417	0					
ANR	233505	MemberAccess	myutsname . release		233417	0					
ANR	233506	Identifier	myutsname		233417	0					
ANR	233507	Identifier	release		233417	1					
ANR	233508	Argument	"""%u.%u"""		233417	1					
ANR	233509	PrimaryExpression	"""%u.%u"""		233417	0					
ANR	233510	Argument	& version		233417	2					
ANR	233511	UnaryOperationExpression	& version		233417	0					
ANR	233512	UnaryOperator	&		233417	0					
ANR	233513	Identifier	version		233417	1					
ANR	233514	Argument	& patchlevel		233417	3					
ANR	233515	UnaryOperationExpression	& patchlevel		233417	0					
ANR	233516	UnaryOperator	&		233417	0					
ANR	233517	Identifier	patchlevel		233417	1					
ANR	233518	PrimaryExpression	2		233417	1					
ANR	233519	CompoundStatement		19:69:592:592	233417	1					
ANR	233520	ExpressionStatement	"dbgprintf ( ""uname: unexpected release '%s'\\r\\n"" , myutsname . release )"	1078:5:32377:32449	233417	0	True				
ANR	233521	CallExpression	"dbgprintf ( ""uname: unexpected release '%s'\\r\\n"" , myutsname . release )"		233417	0					
ANR	233522	Callee	dbgprintf		233417	0					
ANR	233523	Identifier	dbgprintf		233417	0					
ANR	233524	ArgumentList	"""uname: unexpected release '%s'\\r\\n"""		233417	1					
ANR	233525	Argument	"""uname: unexpected release '%s'\\r\\n"""		233417	0					
ANR	233526	PrimaryExpression	"""uname: unexpected release '%s'\\r\\n"""		233417	0					
ANR	233527	Argument	myutsname . release		233417	1					
ANR	233528	MemberAccess	myutsname . release		233417	0					
ANR	233529	Identifier	myutsname		233417	0					
ANR	233530	Identifier	release		233417	1					
ANR	233531	ReturnStatement	return 1 ;	1080:5:32456:32464	233417	1	True				
ANR	233532	PrimaryExpression	1		233417	0					
ANR	233533	IfStatement	if ( version > 2 || ( version == 2 && patchlevel >= 5 ) )		233417	5					
ANR	233534	Condition	version > 2 || ( version == 2 && patchlevel >= 5 )	1084:5:32594:32641	233417	0	True				
ANR	233535	OrExpression	version > 2 || ( version == 2 && patchlevel >= 5 )		233417	0		||			
ANR	233536	RelationalExpression	version > 2		233417	0		>			
ANR	233537	Identifier	version		233417	0					
ANR	233538	PrimaryExpression	2		233417	1					
ANR	233539	AndExpression	version == 2 && patchlevel >= 5		233417	1		&&			
ANR	233540	EqualityExpression	version == 2		233417	0		==			
ANR	233541	Identifier	version		233417	0					
ANR	233542	PrimaryExpression	2		233417	1					
ANR	233543	RelationalExpression	patchlevel >= 5		233417	1		>=			
ANR	233544	Identifier	patchlevel		233417	0					
ANR	233545	PrimaryExpression	5		233417	1					
ANR	233546	ExpressionStatement	so_bsdcompat_is_obsolete = 1	1085:5:32649:32677	233417	1	True				
ANR	233547	AssignmentExpression	so_bsdcompat_is_obsolete = 1		233417	0		=			
ANR	233548	Identifier	so_bsdcompat_is_obsolete		233417	0					
ANR	233549	PrimaryExpression	1		233417	1					
ANR	233550	ReturnStatement	return ! so_bsdcompat_is_obsolete ;	1087:4:32689:32721	233417	5	True				
ANR	233551	UnaryOperationExpression	! so_bsdcompat_is_obsolete		233417	0					
ANR	233552	UnaryOperator	!		233417	0					
ANR	233553	Identifier	so_bsdcompat_is_obsolete		233417	1					
ANR	233554	ReturnType	static int		233417	1					
ANR	233555	Identifier	should_use_so_bsdcompat		233417	2					
ANR	233556	ParameterList			233417	3					
ANR	233557	CFGEntryNode	ENTRY		233417		True				
ANR	233558	CFGExitNode	EXIT		233417		True				
ANR	233559	Symbol	errno		233417						
ANR	233560	Symbol	uname		233417						
ANR	233561	Symbol	patchlevel		233417						
ANR	233562	Symbol	so_bsdcompat_is_obsolete		233417						
ANR	233563	Symbol	rs_strerror_r		233417						
ANR	233564	Symbol	init_done		233417						
ANR	233565	Symbol	version		233417						
ANR	233566	Symbol	myutsname . release		233417						
ANR	233567	Symbol	sscanf		233417						
ANR	233568	Symbol	myutsname		233417						
ANR	233569	Symbol	errStr		233417						
ANR	233570	Symbol	& patchlevel		233417						
ANR	233571	Symbol	& myutsname		233417						
ANR	233572	Symbol	& version		233417						
ANR	233573	Function	debugListenInfo	1101:0:33011:33865							
ANR	233574	FunctionDef	"debugListenInfo (int fd , char * type)"		233573	0					
ANR	233575	CompoundStatement		1103:0:33059:33865	233573	0					
ANR	233576	IdentifierDeclStatement	const char * szFamily ;	1104:1:33062:33082	233573	0	True				
ANR	233577	IdentifierDecl	* szFamily		233573	0					
ANR	233578	IdentifierDeclType	const char *		233573	0					
ANR	233579	Identifier	szFamily		233573	1					
ANR	233580	IdentifierDeclStatement	int port ;	1105:1:33085:33093	233573	1	True				
ANR	233581	IdentifierDecl	port		233573	0					
ANR	233582	IdentifierDeclType	int		233573	0					
ANR	233583	Identifier	port		233573	1					
ANR	233584	IdentifierDeclStatement	struct sockaddr_storage sa ;	1106:1:33096:33122	233573	2	True				
ANR	233585	IdentifierDecl	sa		233573	0					
ANR	233586	IdentifierDeclType	struct sockaddr_storage		233573	0					
ANR	233587	Identifier	sa		233573	1					
ANR	233588	IdentifierDeclStatement	socklen_t saLen = sizeof ( sa ) ;	1107:1:33125:33153	233573	3	True				
ANR	233589	IdentifierDecl	saLen = sizeof ( sa )		233573	0					
ANR	233590	IdentifierDeclType	socklen_t		233573	0					
ANR	233591	Identifier	saLen		233573	1					
ANR	233592	AssignmentExpression	saLen = sizeof ( sa )		233573	2		=			
ANR	233593	Identifier	saLen		233573	0					
ANR	233594	SizeofExpression	sizeof ( sa )		233573	1					
ANR	233595	Sizeof	sizeof		233573	0					
ANR	233596	SizeofOperand	sa		233573	1					
ANR	233597	IfStatement	"if ( getsockname ( fd , ( struct sockaddr * ) & sa , & saLen ) == 0 )"		233573	4					
ANR	233598	Condition	"getsockname ( fd , ( struct sockaddr * ) & sa , & saLen ) == 0"	1109:4:33160:33212	233573	0	True				
ANR	233599	EqualityExpression	"getsockname ( fd , ( struct sockaddr * ) & sa , & saLen ) == 0"		233573	0		==			
ANR	233600	CallExpression	"getsockname ( fd , ( struct sockaddr * ) & sa , & saLen )"		233573	0					
ANR	233601	Callee	getsockname		233573	0					
ANR	233602	Identifier	getsockname		233573	0					
ANR	233603	ArgumentList	fd		233573	1					
ANR	233604	Argument	fd		233573	0					
ANR	233605	Identifier	fd		233573	0					
ANR	233606	Argument	( struct sockaddr * ) & sa		233573	1					
ANR	233607	CastExpression	( struct sockaddr * ) & sa		233573	0					
ANR	233608	CastTarget	struct sockaddr *		233573	0					
ANR	233609	UnaryOperationExpression	& sa		233573	1					
ANR	233610	UnaryOperator	&		233573	0					
ANR	233611	Identifier	sa		233573	1					
ANR	233612	Argument	& saLen		233573	2					
ANR	233613	UnaryOperationExpression	& saLen		233573	0					
ANR	233614	UnaryOperator	&		233573	0					
ANR	233615	Identifier	saLen		233573	1					
ANR	233616	PrimaryExpression	0		233573	1					
ANR	233617	CompoundStatement		7:59:155:155	233573	1					
ANR	233618	SwitchStatement	switch ( sa . ss_family )		233573	0					
ANR	233619	Condition	sa . ss_family	1110:9:33226:33237	233573	0	True				
ANR	233620	MemberAccess	sa . ss_family		233573	0					
ANR	233621	Identifier	sa		233573	0					
ANR	233622	Identifier	ss_family		233573	1					
ANR	233623	CompoundStatement		8:23:180:180	233573	1					
ANR	233624	Label	case PF_INET :	1111:2:33244:33256	233573	0	True				
ANR	233625	Identifier	PF_INET		233573	0					
ANR	233626	ExpressionStatement	"szFamily = ""IPv4"""	1112:3:33261:33278	233573	1	True				
ANR	233627	AssignmentExpression	"szFamily = ""IPv4"""		233573	0		=			
ANR	233628	Identifier	szFamily		233573	0					
ANR	233629	PrimaryExpression	"""IPv4"""		233573	1					
ANR	233630	ExpressionStatement	port = ntohs ( ( ( struct sockaddr_in * ) & sa ) -> sin_port )	1113:3:33283:33335	233573	2	True				
ANR	233631	AssignmentExpression	port = ntohs ( ( ( struct sockaddr_in * ) & sa ) -> sin_port )		233573	0		=			
ANR	233632	Identifier	port		233573	0					
ANR	233633	CallExpression	ntohs ( ( ( struct sockaddr_in * ) & sa ) -> sin_port )		233573	1					
ANR	233634	Callee	ntohs		233573	0					
ANR	233635	Identifier	ntohs		233573	0					
ANR	233636	ArgumentList	( ( struct sockaddr_in * ) & sa ) -> sin_port		233573	1					
ANR	233637	Argument	( ( struct sockaddr_in * ) & sa ) -> sin_port		233573	0					
ANR	233638	PtrMemberAccess	( ( struct sockaddr_in * ) & sa ) -> sin_port		233573	0					
ANR	233639	CastExpression	( struct sockaddr_in * ) & sa		233573	0					
ANR	233640	CastTarget	struct sockaddr_in *		233573	0					
ANR	233641	UnaryOperationExpression	& sa		233573	1					
ANR	233642	UnaryOperator	&		233573	0					
ANR	233643	Identifier	sa		233573	1					
ANR	233644	Identifier	sin_port		233573	1					
ANR	233645	BreakStatement	break ;	1114:3:33340:33345	233573	3	True				
ANR	233646	Label	case PF_INET6 :	1115:2:33349:33362	233573	4	True				
ANR	233647	Identifier	PF_INET6		233573	0					
ANR	233648	ExpressionStatement	"szFamily = ""IPv6"""	1116:3:33367:33384	233573	5	True				
ANR	233649	AssignmentExpression	"szFamily = ""IPv6"""		233573	0		=			
ANR	233650	Identifier	szFamily		233573	0					
ANR	233651	PrimaryExpression	"""IPv6"""		233573	1					
ANR	233652	ExpressionStatement	port = ntohs ( ( ( struct sockaddr_in6 * ) & sa ) -> sin6_port )	1117:3:33389:33443	233573	6	True				
ANR	233653	AssignmentExpression	port = ntohs ( ( ( struct sockaddr_in6 * ) & sa ) -> sin6_port )		233573	0		=			
ANR	233654	Identifier	port		233573	0					
ANR	233655	CallExpression	ntohs ( ( ( struct sockaddr_in6 * ) & sa ) -> sin6_port )		233573	1					
ANR	233656	Callee	ntohs		233573	0					
ANR	233657	Identifier	ntohs		233573	0					
ANR	233658	ArgumentList	( ( struct sockaddr_in6 * ) & sa ) -> sin6_port		233573	1					
ANR	233659	Argument	( ( struct sockaddr_in6 * ) & sa ) -> sin6_port		233573	0					
ANR	233660	PtrMemberAccess	( ( struct sockaddr_in6 * ) & sa ) -> sin6_port		233573	0					
ANR	233661	CastExpression	( struct sockaddr_in6 * ) & sa		233573	0					
ANR	233662	CastTarget	struct sockaddr_in6 *		233573	0					
ANR	233663	UnaryOperationExpression	& sa		233573	1					
ANR	233664	UnaryOperator	&		233573	0					
ANR	233665	Identifier	sa		233573	1					
ANR	233666	Identifier	sin6_port		233573	1					
ANR	233667	BreakStatement	break ;	1118:3:33448:33453	233573	7	True				
ANR	233668	Label	default :	1119:2:33457:33464	233573	8	True				
ANR	233669	Identifier	default		233573	0					
ANR	233670	ExpressionStatement	"szFamily = ""other"""	1120:3:33469:33487	233573	9	True				
ANR	233671	AssignmentExpression	"szFamily = ""other"""		233573	0		=			
ANR	233672	Identifier	szFamily		233573	0					
ANR	233673	PrimaryExpression	"""other"""		233573	1					
ANR	233674	ExpressionStatement	port = - 1	1121:3:33492:33501	233573	10	True				
ANR	233675	AssignmentExpression	port = - 1		233573	0		=			
ANR	233676	Identifier	port		233573	0					
ANR	233677	UnaryOperationExpression	- 1		233573	1					
ANR	233678	UnaryOperator	-		233573	0					
ANR	233679	PrimaryExpression	1		233573	1					
ANR	233680	BreakStatement	break ;	1122:3:33506:33511	233573	11	True				
ANR	233681	ExpressionStatement	"dbgprintf ( ""Listening on %s syslogd socket %d (%s/port %d).\\n"" , type , fd , szFamily , port )"	1124:2:33519:33610	233573	1	True				
ANR	233682	CallExpression	"dbgprintf ( ""Listening on %s syslogd socket %d (%s/port %d).\\n"" , type , fd , szFamily , port )"		233573	0					
ANR	233683	Callee	dbgprintf		233573	0					
ANR	233684	Identifier	dbgprintf		233573	0					
ANR	233685	ArgumentList	"""Listening on %s syslogd socket %d (%s/port %d).\\n"""		233573	1					
ANR	233686	Argument	"""Listening on %s syslogd socket %d (%s/port %d).\\n"""		233573	0					
ANR	233687	PrimaryExpression	"""Listening on %s syslogd socket %d (%s/port %d).\\n"""		233573	0					
ANR	233688	Argument	type		233573	1					
ANR	233689	Identifier	type		233573	0					
ANR	233690	Argument	fd		233573	2					
ANR	233691	Identifier	fd		233573	0					
ANR	233692	Argument	szFamily		233573	3					
ANR	233693	Identifier	szFamily		233573	0					
ANR	233694	Argument	port		233573	4					
ANR	233695	Identifier	port		233573	0					
ANR	233696	ReturnStatement	return ;	1126:2:33614:33620	233573	2	True				
ANR	233697	ExpressionStatement	"dbgprintf ( ""Listening on syslogd socket %d - could not obtain peer info.\\n"" , fd )"	1133:1:33784:33863	233573	5	True				
ANR	233698	CallExpression	"dbgprintf ( ""Listening on syslogd socket %d - could not obtain peer info.\\n"" , fd )"		233573	0					
ANR	233699	Callee	dbgprintf		233573	0					
ANR	233700	Identifier	dbgprintf		233573	0					
ANR	233701	ArgumentList	"""Listening on syslogd socket %d - could not obtain peer info.\\n"""		233573	1					
ANR	233702	Argument	"""Listening on syslogd socket %d - could not obtain peer info.\\n"""		233573	0					
ANR	233703	PrimaryExpression	"""Listening on syslogd socket %d - could not obtain peer info.\\n"""		233573	0					
ANR	233704	Argument	fd		233573	1					
ANR	233705	Identifier	fd		233573	0					
ANR	233706	ReturnType	static void		233573	1					
ANR	233707	Identifier	debugListenInfo		233573	2					
ANR	233708	ParameterList	"int fd , char * type"		233573	3					
ANR	233709	Parameter	int fd	1102:16:33039:33044	233573	0	True				
ANR	233710	ParameterType	int		233573	0					
ANR	233711	Identifier	fd		233573	1					
ANR	233712	Parameter	char * type	1102:24:33047:33056	233573	1	True				
ANR	233713	ParameterType	char *		233573	0					
ANR	233714	Identifier	type		233573	1					
ANR	233715	CFGEntryNode	ENTRY		233573		True				
ANR	233716	CFGExitNode	EXIT		233573		True				
ANR	233717	Symbol	( ( struct sockaddr_in * ) & sa ) -> sin_port		233573						
ANR	233718	Symbol	getsockname		233573						
ANR	233719	Symbol	& saLen		233573						
ANR	233720	Symbol	saLen		233573						
ANR	233721	Symbol	( ( struct sockaddr_in6 * ) & sa ) -> sin6_port		233573						
ANR	233722	Symbol	type		233573						
ANR	233723	Symbol	sa		233573						
ANR	233724	Symbol	sa . ss_family		233573						
ANR	233725	Symbol	ntohs		233573						
ANR	233726	Symbol	port		233573						
ANR	233727	Symbol	szFamily		233573						
ANR	233728	Symbol	& sa		233573						
ANR	233729	Symbol	fd		233573						
ANR	233730	Function	cvthname	1140:0:33996:34193							
ANR	233731	FunctionDef	"cvthname (struct sockaddr_storage * f , prop_t * * localName , prop_t * * fqdn , prop_t * * ip)"		233730	0					
ANR	233732	CompoundStatement		1142:0:34097:34193	233730	0					
ANR	233733	ExpressionStatement	DEFiRet	1143:1:34100:34107	233730	0	True				
ANR	233734	Identifier	DEFiRet		233730	0					
ANR	233735	ExpressionStatement	assert ( f != NULL )	1144:1:34110:34127	233730	1	True				
ANR	233736	CallExpression	assert ( f != NULL )		233730	0					
ANR	233737	Callee	assert		233730	0					
ANR	233738	Identifier	assert		233730	0					
ANR	233739	ArgumentList	f != NULL		233730	1					
ANR	233740	Argument	f != NULL		233730	0					
ANR	233741	EqualityExpression	f != NULL		233730	0		!=			
ANR	233742	Identifier	f		233730	0					
ANR	233743	Identifier	NULL		233730	1					
ANR	233744	ExpressionStatement	"iRet = dnscacheLookup ( f , NULL , fqdn , localName , ip )"	1145:1:34130:34181	233730	2	True				
ANR	233745	AssignmentExpression	"iRet = dnscacheLookup ( f , NULL , fqdn , localName , ip )"		233730	0		=			
ANR	233746	Identifier	iRet		233730	0					
ANR	233747	CallExpression	"dnscacheLookup ( f , NULL , fqdn , localName , ip )"		233730	1					
ANR	233748	Callee	dnscacheLookup		233730	0					
ANR	233749	Identifier	dnscacheLookup		233730	0					
ANR	233750	ArgumentList	f		233730	1					
ANR	233751	Argument	f		233730	0					
ANR	233752	Identifier	f		233730	0					
ANR	233753	Argument	NULL		233730	1					
ANR	233754	Identifier	NULL		233730	0					
ANR	233755	Argument	fqdn		233730	2					
ANR	233756	Identifier	fqdn		233730	0					
ANR	233757	Argument	localName		233730	3					
ANR	233758	Identifier	localName		233730	0					
ANR	233759	Argument	ip		233730	4					
ANR	233760	Identifier	ip		233730	0					
ANR	233761	ExpressionStatement	RETiRet	1146:1:34184:34191	233730	3	True				
ANR	233762	Identifier	RETiRet		233730	0					
ANR	233763	ReturnType	static rsRetVal		233730	1					
ANR	233764	Identifier	cvthname		233730	2					
ANR	233765	ParameterList	"struct sockaddr_storage * f , prop_t * * localName , prop_t * * fqdn , prop_t * * ip"		233730	3					
ANR	233766	Parameter	struct sockaddr_storage * f	1141:9:34021:34046	233730	0	True				
ANR	233767	ParameterType	struct sockaddr_storage *		233730	0					
ANR	233768	Identifier	f		233730	1					
ANR	233769	Parameter	prop_t * * localName	1141:37:34049:34066	233730	1	True				
ANR	233770	ParameterType	prop_t * *		233730	0					
ANR	233771	Identifier	localName		233730	1					
ANR	233772	Parameter	prop_t * * fqdn	1141:57:34069:34081	233730	2	True				
ANR	233773	ParameterType	prop_t * *		233730	0					
ANR	233774	Identifier	fqdn		233730	1					
ANR	233775	Parameter	prop_t * * ip	1141:72:34084:34094	233730	3	True				
ANR	233776	ParameterType	prop_t * *		233730	0					
ANR	233777	Identifier	ip		233730	1					
ANR	233778	CFGEntryNode	ENTRY		233730		True				
ANR	233779	CFGExitNode	EXIT		233730		True				
ANR	233780	Symbol	localName		233730						
ANR	233781	Symbol	NULL		233730						
ANR	233782	Symbol	fqdn		233730						
ANR	233783	Symbol	f		233730						
ANR	233784	Symbol	ip		233730						
ANR	233785	Symbol	iRet		233730						
ANR	233786	Symbol	dnscacheLookup		233730						
ANR	233787	Function	getLocalHostname	1161:0:34842:36362							
ANR	233788	FunctionDef	getLocalHostname (uchar * * ppName)		233787	0					
ANR	233789	CompoundStatement		1163:0:34891:36362	233787	0					
ANR	233790	ExpressionStatement	DEFiRet	1164:1:34894:34901	233787	0	True				
ANR	233791	Identifier	DEFiRet		233787	0					
ANR	233792	IdentifierDeclStatement	char hnbuf [ 8192 ] ;	1165:1:34904:34920	233787	1	True				
ANR	233793	IdentifierDecl	hnbuf [ 8192 ]		233787	0					
ANR	233794	IdentifierDeclType	char [ 8192 ]		233787	0					
ANR	233795	Identifier	hnbuf		233787	1					
ANR	233796	PrimaryExpression	8192		233787	2					
ANR	233797	IdentifierDeclStatement	uchar * fqdn = NULL ;	1166:1:34923:34941	233787	2	True				
ANR	233798	IdentifierDecl	* fqdn = NULL		233787	0					
ANR	233799	IdentifierDeclType	uchar *		233787	0					
ANR	233800	Identifier	fqdn		233787	1					
ANR	233801	AssignmentExpression	* fqdn = NULL		233787	2		=			
ANR	233802	Identifier	NULL		233787	0					
ANR	233803	Identifier	NULL		233787	1					
ANR	233804	IdentifierDeclStatement	int empty_hostname = 1 ;	1167:1:34944:34966	233787	3	True				
ANR	233805	IdentifierDecl	empty_hostname = 1		233787	0					
ANR	233806	IdentifierDeclType	int		233787	0					
ANR	233807	Identifier	empty_hostname		233787	1					
ANR	233808	AssignmentExpression	empty_hostname = 1		233787	2		=			
ANR	233809	Identifier	empty_hostname		233787	0					
ANR	233810	PrimaryExpression	1		233787	1					
ANR	233811	IfStatement	"if ( gethostname ( hnbuf , sizeof ( hnbuf ) ) != 0 )"		233787	4					
ANR	233812	Condition	"gethostname ( hnbuf , sizeof ( hnbuf ) ) != 0"	1169:4:34973:35010	233787	0	True				
ANR	233813	EqualityExpression	"gethostname ( hnbuf , sizeof ( hnbuf ) ) != 0"		233787	0		!=			
ANR	233814	CallExpression	"gethostname ( hnbuf , sizeof ( hnbuf ) )"		233787	0					
ANR	233815	Callee	gethostname		233787	0					
ANR	233816	Identifier	gethostname		233787	0					
ANR	233817	ArgumentList	hnbuf		233787	1					
ANR	233818	Argument	hnbuf		233787	0					
ANR	233819	Identifier	hnbuf		233787	0					
ANR	233820	Argument	sizeof ( hnbuf )		233787	1					
ANR	233821	SizeofExpression	sizeof ( hnbuf )		233787	0					
ANR	233822	Sizeof	sizeof		233787	0					
ANR	233823	SizeofOperand	hnbuf		233787	1					
ANR	233824	PrimaryExpression	0		233787	1					
ANR	233825	CompoundStatement		7:44:121:121	233787	1					
ANR	233826	ExpressionStatement	"strcpy ( hnbuf , EMPTY_HOSTNAME_REPLACEMENT )"	1170:2:35017:35058	233787	0	True				
ANR	233827	CallExpression	"strcpy ( hnbuf , EMPTY_HOSTNAME_REPLACEMENT )"		233787	0					
ANR	233828	Callee	strcpy		233787	0					
ANR	233829	Identifier	strcpy		233787	0					
ANR	233830	ArgumentList	hnbuf		233787	1					
ANR	233831	Argument	hnbuf		233787	0					
ANR	233832	Identifier	hnbuf		233787	0					
ANR	233833	Argument	EMPTY_HOSTNAME_REPLACEMENT		233787	1					
ANR	233834	Identifier	EMPTY_HOSTNAME_REPLACEMENT		233787	0					
ANR	233835	ElseStatement	else		233787	0					
ANR	233836	CompoundStatement		9:8:176:176	233787	0					
ANR	233837	IfStatement	if ( hnbuf [ 0 ] == '\\0' )		233787	0					
ANR	233838	Condition	hnbuf [ 0 ] == '\\0'	1175:5:35175:35190	233787	0	True				
ANR	233839	EqualityExpression	hnbuf [ 0 ] == '\\0'		233787	0		==			
ANR	233840	ArrayIndexing	hnbuf [ 0 ]		233787	0					
ANR	233841	Identifier	hnbuf		233787	0					
ANR	233842	PrimaryExpression	0		233787	1					
ANR	233843	PrimaryExpression	'\\0'		233787	1					
ANR	233844	CompoundStatement		13:23:301:301	233787	1					
ANR	233845	ExpressionStatement	"strcpy ( hnbuf , EMPTY_HOSTNAME_REPLACEMENT )"	1176:3:35198:35239	233787	0	True				
ANR	233846	CallExpression	"strcpy ( hnbuf , EMPTY_HOSTNAME_REPLACEMENT )"		233787	0					
ANR	233847	Callee	strcpy		233787	0					
ANR	233848	Identifier	strcpy		233787	0					
ANR	233849	ArgumentList	hnbuf		233787	1					
ANR	233850	Argument	hnbuf		233787	0					
ANR	233851	Identifier	hnbuf		233787	0					
ANR	233852	Argument	EMPTY_HOSTNAME_REPLACEMENT		233787	1					
ANR	233853	Identifier	EMPTY_HOSTNAME_REPLACEMENT		233787	0					
ANR	233854	ElseStatement	else		233787	0					
ANR	233855	CompoundStatement		15:9:358:358	233787	0					
ANR	233856	ExpressionStatement	empty_hostname = 0	1178:3:35255:35273	233787	0	True				
ANR	233857	AssignmentExpression	empty_hostname = 0		233787	0		=			
ANR	233858	Identifier	empty_hostname		233787	0					
ANR	233859	PrimaryExpression	0		233787	1					
ANR	233860	ExpressionStatement	hnbuf [ sizeof ( hnbuf ) - 1 ] = '\\0'	1179:3:35278:35307	233787	1	True				
ANR	233861	AssignmentExpression	hnbuf [ sizeof ( hnbuf ) - 1 ] = '\\0'		233787	0		=			
ANR	233862	ArrayIndexing	hnbuf [ sizeof ( hnbuf ) - 1 ]		233787	0					
ANR	233863	Identifier	hnbuf		233787	0					
ANR	233864	AdditiveExpression	sizeof ( hnbuf ) - 1		233787	1		-			
ANR	233865	SizeofExpression	sizeof ( hnbuf )		233787	0					
ANR	233866	Sizeof	sizeof		233787	0					
ANR	233867	SizeofOperand	hnbuf		233787	1					
ANR	233868	PrimaryExpression	1		233787	1					
ANR	233869	PrimaryExpression	'\\0'		233787	1					
ANR	233870	IdentifierDeclStatement	"char * dot = strstr ( hnbuf , ""."" ) ;"	1183:1:35347:35377	233787	5	True				
ANR	233871	IdentifierDecl	"* dot = strstr ( hnbuf , ""."" )"		233787	0					
ANR	233872	IdentifierDeclType	char *		233787	0					
ANR	233873	Identifier	dot		233787	1					
ANR	233874	AssignmentExpression	"* dot = strstr ( hnbuf , ""."" )"		233787	2		=			
ANR	233875	Identifier	dot		233787	0					
ANR	233876	CallExpression	"strstr ( hnbuf , ""."" )"		233787	1					
ANR	233877	Callee	strstr		233787	0					
ANR	233878	Identifier	strstr		233787	0					
ANR	233879	ArgumentList	hnbuf		233787	1					
ANR	233880	Argument	hnbuf		233787	0					
ANR	233881	Identifier	hnbuf		233787	0					
ANR	233882	Argument	"""."""		233787	1					
ANR	233883	PrimaryExpression	"""."""		233787	0					
ANR	233884	IdentifierDeclStatement	struct addrinfo * res = NULL ;	1184:1:35380:35407	233787	6	True				
ANR	233885	IdentifierDecl	* res = NULL		233787	0					
ANR	233886	IdentifierDeclType	struct addrinfo *		233787	0					
ANR	233887	Identifier	res		233787	1					
ANR	233888	AssignmentExpression	* res = NULL		233787	2		=			
ANR	233889	Identifier	NULL		233787	0					
ANR	233890	Identifier	NULL		233787	1					
ANR	233891	IfStatement	if ( ! empty_hostname && dot == NULL )		233787	7					
ANR	233892	Condition	! empty_hostname && dot == NULL	1185:4:35413:35442	233787	0	True				
ANR	233893	AndExpression	! empty_hostname && dot == NULL		233787	0		&&			
ANR	233894	UnaryOperationExpression	! empty_hostname		233787	0					
ANR	233895	UnaryOperator	!		233787	0					
ANR	233896	Identifier	empty_hostname		233787	1					
ANR	233897	EqualityExpression	dot == NULL		233787	1		==			
ANR	233898	Identifier	dot		233787	0					
ANR	233899	Identifier	NULL		233787	1					
ANR	233900	CompoundStatement		28:2:711:768	233787	1					
ANR	233901	IdentifierDeclStatement	struct addrinfo flags ;	1187:2:35509:35530	233787	0	True				
ANR	233902	IdentifierDecl	flags		233787	0					
ANR	233903	IdentifierDeclType	struct addrinfo		233787	0					
ANR	233904	Identifier	flags		233787	1					
ANR	233905	ExpressionStatement	"memset ( & flags , 0 , sizeof ( flags ) )"	1188:2:35534:35566	233787	1	True				
ANR	233906	CallExpression	"memset ( & flags , 0 , sizeof ( flags ) )"		233787	0					
ANR	233907	Callee	memset		233787	0					
ANR	233908	Identifier	memset		233787	0					
ANR	233909	ArgumentList	& flags		233787	1					
ANR	233910	Argument	& flags		233787	0					
ANR	233911	UnaryOperationExpression	& flags		233787	0					
ANR	233912	UnaryOperator	&		233787	0					
ANR	233913	Identifier	flags		233787	1					
ANR	233914	Argument	0		233787	1					
ANR	233915	PrimaryExpression	0		233787	0					
ANR	233916	Argument	sizeof ( flags )		233787	2					
ANR	233917	SizeofExpression	sizeof ( flags )		233787	0					
ANR	233918	Sizeof	sizeof		233787	0					
ANR	233919	SizeofOperand	flags		233787	1					
ANR	233920	ExpressionStatement	flags . ai_flags = AI_CANONNAME	1189:2:35570:35599	233787	2	True				
ANR	233921	AssignmentExpression	flags . ai_flags = AI_CANONNAME		233787	0		=			
ANR	233922	MemberAccess	flags . ai_flags		233787	0					
ANR	233923	Identifier	flags		233787	0					
ANR	233924	Identifier	ai_flags		233787	1					
ANR	233925	Identifier	AI_CANONNAME		233787	1					
ANR	233926	IdentifierDeclStatement	"int error = getaddrinfo ( ( char * ) hnbuf , NULL , & flags , & res ) ;"	1190:2:35603:35660	233787	3	True				
ANR	233927	IdentifierDecl	"error = getaddrinfo ( ( char * ) hnbuf , NULL , & flags , & res )"		233787	0					
ANR	233928	IdentifierDeclType	int		233787	0					
ANR	233929	Identifier	error		233787	1					
ANR	233930	AssignmentExpression	"error = getaddrinfo ( ( char * ) hnbuf , NULL , & flags , & res )"		233787	2		=			
ANR	233931	Identifier	error		233787	0					
ANR	233932	CallExpression	"getaddrinfo ( ( char * ) hnbuf , NULL , & flags , & res )"		233787	1					
ANR	233933	Callee	getaddrinfo		233787	0					
ANR	233934	Identifier	getaddrinfo		233787	0					
ANR	233935	ArgumentList	( char * ) hnbuf		233787	1					
ANR	233936	Argument	( char * ) hnbuf		233787	0					
ANR	233937	CastExpression	( char * ) hnbuf		233787	0					
ANR	233938	CastTarget	char *		233787	0					
ANR	233939	Identifier	hnbuf		233787	1					
ANR	233940	Argument	NULL		233787	1					
ANR	233941	Identifier	NULL		233787	0					
ANR	233942	Argument	& flags		233787	2					
ANR	233943	UnaryOperationExpression	& flags		233787	0					
ANR	233944	UnaryOperator	&		233787	0					
ANR	233945	Identifier	flags		233787	1					
ANR	233946	Argument	& res		233787	3					
ANR	233947	UnaryOperationExpression	& res		233787	0					
ANR	233948	UnaryOperator	&		233787	0					
ANR	233949	Identifier	res		233787	1					
ANR	233950	IfStatement	if ( error != 0 )		233787	4					
ANR	233951	Condition	error != 0	1191:6:35668:35677	233787	0	True				
ANR	233952	EqualityExpression	error != 0		233787	0		!=			
ANR	233953	Identifier	error		233787	0					
ANR	233954	PrimaryExpression	0		233787	1					
ANR	233955	CompoundStatement		29:18:788:788	233787	1					
ANR	233956	ExpressionStatement	"dbgprintf ( ""getaddrinfo: %s\\n"" , gai_strerror ( error ) )"	1192:3:35685:35736	233787	0	True				
ANR	233957	CallExpression	"dbgprintf ( ""getaddrinfo: %s\\n"" , gai_strerror ( error ) )"		233787	0					
ANR	233958	Callee	dbgprintf		233787	0					
ANR	233959	Identifier	dbgprintf		233787	0					
ANR	233960	ArgumentList	"""getaddrinfo: %s\\n"""		233787	1					
ANR	233961	Argument	"""getaddrinfo: %s\\n"""		233787	0					
ANR	233962	PrimaryExpression	"""getaddrinfo: %s\\n"""		233787	0					
ANR	233963	Argument	gai_strerror ( error )		233787	1					
ANR	233964	CallExpression	gai_strerror ( error )		233787	0					
ANR	233965	Callee	gai_strerror		233787	0					
ANR	233966	Identifier	gai_strerror		233787	0					
ANR	233967	ArgumentList	error		233787	1					
ANR	233968	Argument	error		233787	0					
ANR	233969	Identifier	error		233787	0					
ANR	233970	ExpressionStatement	ABORT_FINALIZE ( RS_RET_IO_ERROR )	1193:3:35741:35772	233787	1	True				
ANR	233971	CallExpression	ABORT_FINALIZE ( RS_RET_IO_ERROR )		233787	0					
ANR	233972	Callee	ABORT_FINALIZE		233787	0					
ANR	233973	Identifier	ABORT_FINALIZE		233787	0					
ANR	233974	ArgumentList	RS_RET_IO_ERROR		233787	1					
ANR	233975	Argument	RS_RET_IO_ERROR		233787	0					
ANR	233976	Identifier	RS_RET_IO_ERROR		233787	0					
ANR	233977	IfStatement	if ( res != NULL )		233787	5					
ANR	233978	Condition	res != NULL	1195:6:35784:35794	233787	0	True				
ANR	233979	EqualityExpression	res != NULL		233787	0		!=			
ANR	233980	Identifier	res		233787	0					
ANR	233981	Identifier	NULL		233787	1					
ANR	233982	CompoundStatement		33:19:905:905	233787	1					
ANR	233983	IfStatement	if ( res -> ai_canonname != NULL && res -> ai_canonname [ 0 ] != '\\0' )		233787	0					
ANR	233984	Condition	res -> ai_canonname != NULL && res -> ai_canonname [ 0 ] != '\\0'	1198:7:35909:35965	233787	0	True				
ANR	233985	AndExpression	res -> ai_canonname != NULL && res -> ai_canonname [ 0 ] != '\\0'		233787	0		&&			
ANR	233986	EqualityExpression	res -> ai_canonname != NULL		233787	0		!=			
ANR	233987	PtrMemberAccess	res -> ai_canonname		233787	0					
ANR	233988	Identifier	res		233787	0					
ANR	233989	Identifier	ai_canonname		233787	1					
ANR	233990	Identifier	NULL		233787	1					
ANR	233991	EqualityExpression	res -> ai_canonname [ 0 ] != '\\0'		233787	1		!=			
ANR	233992	ArrayIndexing	res -> ai_canonname [ 0 ]		233787	0					
ANR	233993	PtrMemberAccess	res -> ai_canonname		233787	0					
ANR	233994	Identifier	res		233787	0					
ANR	233995	Identifier	ai_canonname		233787	1					
ANR	233996	PrimaryExpression	0		233787	1					
ANR	233997	PrimaryExpression	'\\0'		233787	1					
ANR	233998	CompoundStatement		36:66:1076:1076	233787	1					
ANR	233999	ExpressionStatement	CHKmalloc ( fqdn = ( uchar * ) strdup ( res -> ai_canonname ) )	1199:4:35974:36025	233787	0	True				
ANR	234000	CallExpression	CHKmalloc ( fqdn = ( uchar * ) strdup ( res -> ai_canonname ) )		233787	0					
ANR	234001	Callee	CHKmalloc		233787	0					
ANR	234002	Identifier	CHKmalloc		233787	0					
ANR	234003	ArgumentList	fqdn = ( uchar * ) strdup ( res -> ai_canonname )		233787	1					
ANR	234004	Argument	fqdn = ( uchar * ) strdup ( res -> ai_canonname )		233787	0					
ANR	234005	AssignmentExpression	fqdn = ( uchar * ) strdup ( res -> ai_canonname )		233787	0		=			
ANR	234006	Identifier	fqdn		233787	0					
ANR	234007	CastExpression	( uchar * ) strdup ( res -> ai_canonname )		233787	1					
ANR	234008	CastTarget	uchar *		233787	0					
ANR	234009	CallExpression	strdup ( res -> ai_canonname )		233787	1					
ANR	234010	Callee	strdup		233787	0					
ANR	234011	Identifier	strdup		233787	0					
ANR	234012	ArgumentList	res -> ai_canonname		233787	1					
ANR	234013	Argument	res -> ai_canonname		233787	0					
ANR	234014	PtrMemberAccess	res -> ai_canonname		233787	0					
ANR	234015	Identifier	res		233787	0					
ANR	234016	Identifier	ai_canonname		233787	1					
ANR	234017	ExpressionStatement	"dot = strstr ( ( char * ) fqdn , ""."" )"	1200:4:36031:36061	233787	1	True				
ANR	234018	AssignmentExpression	"dot = strstr ( ( char * ) fqdn , ""."" )"		233787	0		=			
ANR	234019	Identifier	dot		233787	0					
ANR	234020	CallExpression	"strstr ( ( char * ) fqdn , ""."" )"		233787	1					
ANR	234021	Callee	strstr		233787	0					
ANR	234022	Identifier	strstr		233787	0					
ANR	234023	ArgumentList	( char * ) fqdn		233787	1					
ANR	234024	Argument	( char * ) fqdn		233787	0					
ANR	234025	CastExpression	( char * ) fqdn		233787	0					
ANR	234026	CastTarget	char *		233787	0					
ANR	234027	Identifier	fqdn		233787	1					
ANR	234028	Argument	"""."""		233787	1					
ANR	234029	PrimaryExpression	"""."""		233787	0					
ANR	234030	IfStatement	if ( fqdn == NULL )		233787	8					
ANR	234031	Condition	fqdn == NULL	1205:4:36080:36091	233787	0	True				
ANR	234032	EqualityExpression	fqdn == NULL		233787	0		==			
ANR	234033	Identifier	fqdn		233787	0					
ANR	234034	Identifier	NULL		233787	1					
ANR	234035	CompoundStatement		43:18:1202:1202	233787	1					
ANR	234036	ExpressionStatement	CHKmalloc ( fqdn = ( uchar * ) strdup ( hnbuf ) )	1207:2:36159:36199	233787	0	True				
ANR	234037	CallExpression	CHKmalloc ( fqdn = ( uchar * ) strdup ( hnbuf ) )		233787	0					
ANR	234038	Callee	CHKmalloc		233787	0					
ANR	234039	Identifier	CHKmalloc		233787	0					
ANR	234040	ArgumentList	fqdn = ( uchar * ) strdup ( hnbuf )		233787	1					
ANR	234041	Argument	fqdn = ( uchar * ) strdup ( hnbuf )		233787	0					
ANR	234042	AssignmentExpression	fqdn = ( uchar * ) strdup ( hnbuf )		233787	0		=			
ANR	234043	Identifier	fqdn		233787	0					
ANR	234044	CastExpression	( uchar * ) strdup ( hnbuf )		233787	1					
ANR	234045	CastTarget	uchar *		233787	0					
ANR	234046	CallExpression	strdup ( hnbuf )		233787	1					
ANR	234047	Callee	strdup		233787	0					
ANR	234048	Identifier	strdup		233787	0					
ANR	234049	ArgumentList	hnbuf		233787	1					
ANR	234050	Argument	hnbuf		233787	0					
ANR	234051	Identifier	hnbuf		233787	0					
ANR	234052	IfStatement	if ( dot != NULL )		233787	9					
ANR	234053	Condition	dot != NULL	1210:4:36209:36219	233787	0	True				
ANR	234054	EqualityExpression	dot != NULL		233787	0		!=			
ANR	234055	Identifier	dot		233787	0					
ANR	234056	Identifier	NULL		233787	1					
ANR	234057	ForStatement	for ( char * p = dot + 1 ; * p ; ++ p )		233787	1					
ANR	234058	ForInit	char * p = dot + 1 ;	1211:6:36228:36244	233787	0	True				
ANR	234059	IdentifierDeclStatement	char * p = dot + 1 ;		233787	0					
ANR	234060	IdentifierDecl	* p = dot + 1		233787	0					
ANR	234061	IdentifierDeclType	char *		233787	0					
ANR	234062	Identifier	p		233787	1					
ANR	234063	AssignmentExpression	* p = dot + 1		233787	2		=			
ANR	234064	Identifier	p		233787	0					
ANR	234065	AdditiveExpression	dot + 1		233787	1		+			
ANR	234066	Identifier	dot		233787	0					
ANR	234067	PrimaryExpression	1		233787	1					
ANR	234068	Condition	* p	1211:24:36246:36247	233787	1	True				
ANR	234069	UnaryOperationExpression	* p		233787	0					
ANR	234070	UnaryOperator	*		233787	0					
ANR	234071	Identifier	p		233787	1					
ANR	234072	UnaryExpression	++ p	1211:29:36251:36253	233787	2	True				
ANR	234073	IncDec	++		233787	0					
ANR	234074	Identifier	p		233787	1					
ANR	234075	ExpressionStatement	* p = tolower ( * p )	1212:3:36259:36275	233787	3	True				
ANR	234076	AssignmentExpression	* p = tolower ( * p )		233787	0		=			
ANR	234077	UnaryOperationExpression	* p		233787	0					
ANR	234078	UnaryOperator	*		233787	0					
ANR	234079	Identifier	p		233787	1					
ANR	234080	CallExpression	tolower ( * p )		233787	1					
ANR	234081	Callee	tolower		233787	0					
ANR	234082	Identifier	tolower		233787	0					
ANR	234083	ArgumentList	* p		233787	1					
ANR	234084	Argument	* p		233787	0					
ANR	234085	UnaryOperationExpression	* p		233787	0					
ANR	234086	UnaryOperator	*		233787	0					
ANR	234087	Identifier	p		233787	1					
ANR	234088	ExpressionStatement	* ppName = fqdn	1214:1:36279:36293	233787	10	True				
ANR	234089	AssignmentExpression	* ppName = fqdn		233787	0		=			
ANR	234090	UnaryOperationExpression	* ppName		233787	0					
ANR	234091	UnaryOperator	*		233787	0					
ANR	234092	Identifier	ppName		233787	1					
ANR	234093	Identifier	fqdn		233787	1					
ANR	234094	Label	finalize_it :	1215:0:36295:36306	233787	11	True				
ANR	234095	Identifier	finalize_it		233787	0					
ANR	234096	IfStatement	if ( res != NULL )		233787	12					
ANR	234097	Condition	res != NULL	1216:5:36313:36323	233787	0	True				
ANR	234098	EqualityExpression	res != NULL		233787	0		!=			
ANR	234099	Identifier	res		233787	0					
ANR	234100	Identifier	NULL		233787	1					
ANR	234101	CompoundStatement		54:18:1434:1434	233787	1					
ANR	234102	ExpressionStatement	freeaddrinfo ( res )	1217:2:36330:36347	233787	0	True				
ANR	234103	CallExpression	freeaddrinfo ( res )		233787	0					
ANR	234104	Callee	freeaddrinfo		233787	0					
ANR	234105	Identifier	freeaddrinfo		233787	0					
ANR	234106	ArgumentList	res		233787	1					
ANR	234107	Argument	res		233787	0					
ANR	234108	Identifier	res		233787	0					
ANR	234109	ExpressionStatement	RETiRet	1219:1:36353:36360	233787	13	True				
ANR	234110	Identifier	RETiRet		233787	0					
ANR	234111	ReturnType	static rsRetVal		233787	1					
ANR	234112	Identifier	getLocalHostname		233787	2					
ANR	234113	ParameterList	uchar * * ppName		233787	3					
ANR	234114	Parameter	uchar * * ppName	1162:17:34875:34888	233787	0	True				
ANR	234115	ParameterType	uchar * *		233787	0					
ANR	234116	Identifier	ppName		233787	1					
ANR	234117	CFGEntryNode	ENTRY		233787		True				
ANR	234118	CFGExitNode	EXIT		233787		True				
ANR	234119	Symbol	hnbuf		233787						
ANR	234120	Symbol	& res		233787						
ANR	234121	Symbol	tolower		233787						
ANR	234122	Symbol	empty_hostname		233787						
ANR	234123	Symbol	ppName		233787						
ANR	234124	Symbol	* ppName		233787						
ANR	234125	Symbol	dot		233787						
ANR	234126	Symbol	flags		233787						
ANR	234127	Symbol	* res -> ai_canonname		233787						
ANR	234128	Symbol	gai_strerror		233787						
ANR	234129	Symbol	* res		233787						
ANR	234130	Symbol	error		233787						
ANR	234131	Symbol	AI_CANONNAME		233787						
ANR	234132	Symbol	res -> ai_canonname		233787						
ANR	234133	Symbol	& flags		233787						
ANR	234134	Symbol	flags . ai_flags		233787						
ANR	234135	Symbol	res		233787						
ANR	234136	Symbol	RS_RET_IO_ERROR		233787						
ANR	234137	Symbol	NULL		233787						
ANR	234138	Symbol	fqdn		233787						
ANR	234139	Symbol	EMPTY_HOSTNAME_REPLACEMENT		233787						
ANR	234140	Symbol	gethostname		233787						
ANR	234141	Symbol	getaddrinfo		233787						
ANR	234142	Symbol	p		233787						
ANR	234143	Symbol	* * res		233787						
ANR	234144	Symbol	strstr		233787						
ANR	234145	Symbol	* hnbuf		233787						
ANR	234146	Symbol	* p		233787						
ANR	234147	Symbol	strdup		233787						
ANR	234148	Function	closeUDPListenSockets	1226:0:36466:36694							
ANR	234149	FunctionDef	closeUDPListenSockets (int * pSockArr)		234148	0					
ANR	234150	CompoundStatement		1228:0:36515:36694	234148	0					
ANR	234151	Statement	register	1229:1:36518:36525	234148	0	True				
ANR	234152	IdentifierDeclStatement	int i ;	1229:10:36527:36532	234148	1	True				
ANR	234153	IdentifierDecl	i		234148	0					
ANR	234154	IdentifierDeclType	int		234148	0					
ANR	234155	Identifier	i		234148	1					
ANR	234156	ExpressionStatement	assert ( pSockArr != NULL )	1231:1:36536:36560	234148	2	True				
ANR	234157	CallExpression	assert ( pSockArr != NULL )		234148	0					
ANR	234158	Callee	assert		234148	0					
ANR	234159	Identifier	assert		234148	0					
ANR	234160	ArgumentList	pSockArr != NULL		234148	1					
ANR	234161	Argument	pSockArr != NULL		234148	0					
ANR	234162	EqualityExpression	pSockArr != NULL		234148	0		!=			
ANR	234163	Identifier	pSockArr		234148	0					
ANR	234164	Identifier	NULL		234148	1					
ANR	234165	IfStatement	if ( pSockArr != NULL )		234148	3					
ANR	234166	Condition	pSockArr != NULL	1232:11:36573:36588	234148	0	True				
ANR	234167	EqualityExpression	pSockArr != NULL		234148	0		!=			
ANR	234168	Identifier	pSockArr		234148	0					
ANR	234169	Identifier	NULL		234148	1					
ANR	234170	CompoundStatement		5:29:75:75	234148	1					
ANR	234171	ForStatement	for ( i = 0 ; i < * pSockArr ; i ++ )		234148	0					
ANR	234172	ForInit	i = 0 ;	1233:14:36607:36612	234148	0	True				
ANR	234173	AssignmentExpression	i = 0		234148	0		=			
ANR	234174	Identifier	i		234148	0					
ANR	234175	PrimaryExpression	0		234148	1					
ANR	234176	Condition	i < * pSockArr	1233:21:36614:36626	234148	1	True				
ANR	234177	RelationalExpression	i < * pSockArr		234148	0		<			
ANR	234178	Identifier	i		234148	0					
ANR	234179	UnaryOperationExpression	* pSockArr		234148	1					
ANR	234180	UnaryOperator	*		234148	0					
ANR	234181	Identifier	pSockArr		234148	1					
ANR	234182	PostIncDecOperationExpression	i ++	1233:36:36629:36631	234148	2	True				
ANR	234183	Identifier	i		234148	0					
ANR	234184	IncDec	++		234148	1					
ANR	234185	ExpressionStatement	close ( pSockArr [ i + 1 ] )	1234:17:36651:36671	234148	3	True				
ANR	234186	CallExpression	close ( pSockArr [ i + 1 ] )		234148	0					
ANR	234187	Callee	close		234148	0					
ANR	234188	Identifier	close		234148	0					
ANR	234189	ArgumentList	pSockArr [ i + 1 ]		234148	1					
ANR	234190	Argument	pSockArr [ i + 1 ]		234148	0					
ANR	234191	ArrayIndexing	pSockArr [ i + 1 ]		234148	0					
ANR	234192	Identifier	pSockArr		234148	0					
ANR	234193	AdditiveExpression	i + 1		234148	1		+			
ANR	234194	Identifier	i		234148	0					
ANR	234195	PrimaryExpression	1		234148	1					
ANR	234196	ExpressionStatement	free ( pSockArr )	1235:2:36675:36689	234148	1	True				
ANR	234197	CallExpression	free ( pSockArr )		234148	0					
ANR	234198	Callee	free		234148	0					
ANR	234199	Identifier	free		234148	0					
ANR	234200	ArgumentList	pSockArr		234148	1					
ANR	234201	Argument	pSockArr		234148	0					
ANR	234202	Identifier	pSockArr		234148	0					
ANR	234203	ReturnType	static void		234148	1					
ANR	234204	Identifier	closeUDPListenSockets		234148	2					
ANR	234205	ParameterList	int * pSockArr		234148	3					
ANR	234206	Parameter	int * pSockArr	1227:22:36500:36512	234148	0	True				
ANR	234207	ParameterType	int *		234148	0					
ANR	234208	Identifier	pSockArr		234148	1					
ANR	234209	CFGEntryNode	ENTRY		234148		True				
ANR	234210	CFGExitNode	EXIT		234148		True				
ANR	234211	Symbol	* pSockArr		234148						
ANR	234212	Symbol	NULL		234148						
ANR	234213	Symbol	* i		234148						
ANR	234214	Symbol	i		234148						
ANR	234215	Symbol	pSockArr		234148						
ANR	234216	Function	create_udp_socket	1246:0:36942:44397							
ANR	234217	FunctionDef	"create_udp_socket (uchar * hostname , uchar * pszPort , int bIsServer , int rcvbuf , int ipfreebind , char * device)"		234216	0					
ANR	234218	CompoundStatement		1248:0:37063:44397	234216	0					
ANR	234219	IdentifierDeclStatement	"struct addrinfo hints , * res , * r ;"	1249:8:37073:37104	234216	0	True				
ANR	234220	IdentifierDecl	hints		234216	0					
ANR	234221	IdentifierDeclType	struct addrinfo		234216	0					
ANR	234222	Identifier	hints		234216	1					
ANR	234223	IdentifierDecl	* res		234216	1					
ANR	234224	IdentifierDeclType	struct addrinfo *		234216	0					
ANR	234225	Identifier	res		234216	1					
ANR	234226	IdentifierDecl	* r		234216	2					
ANR	234227	IdentifierDeclType	struct addrinfo *		234216	0					
ANR	234228	Identifier	r		234216	1					
ANR	234229	IdentifierDeclStatement	"int error , maxs , * s , * socks , on = 1 ;"	1250:8:37114:37149	234216	1	True				
ANR	234230	IdentifierDecl	error		234216	0					
ANR	234231	IdentifierDeclType	int		234216	0					
ANR	234232	Identifier	error		234216	1					
ANR	234233	IdentifierDecl	maxs		234216	1					
ANR	234234	IdentifierDeclType	int		234216	0					
ANR	234235	Identifier	maxs		234216	1					
ANR	234236	IdentifierDecl	* s		234216	2					
ANR	234237	IdentifierDeclType	int *		234216	0					
ANR	234238	Identifier	s		234216	1					
ANR	234239	IdentifierDecl	* socks		234216	3					
ANR	234240	IdentifierDeclType	int *		234216	0					
ANR	234241	Identifier	socks		234216	1					
ANR	234242	IdentifierDecl	on = 1		234216	4					
ANR	234243	IdentifierDeclType	int		234216	0					
ANR	234244	Identifier	on		234216	1					
ANR	234245	AssignmentExpression	on = 1		234216	2		=			
ANR	234246	Identifier	on		234216	0					
ANR	234247	PrimaryExpression	1		234216	1					
ANR	234248	IdentifierDeclStatement	int sockflags ;	1251:1:37152:37165	234216	2	True				
ANR	234249	IdentifierDecl	sockflags		234216	0					
ANR	234250	IdentifierDeclType	int		234216	0					
ANR	234251	Identifier	sockflags		234216	1					
ANR	234252	IdentifierDeclStatement	int actrcvbuf ;	1252:1:37168:37181	234216	3	True				
ANR	234253	IdentifierDecl	actrcvbuf		234216	0					
ANR	234254	IdentifierDeclType	int		234216	0					
ANR	234255	Identifier	actrcvbuf		234216	1					
ANR	234256	IdentifierDeclStatement	socklen_t optlen ;	1253:1:37184:37200	234216	4	True				
ANR	234257	IdentifierDecl	optlen		234216	0					
ANR	234258	IdentifierDeclType	socklen_t		234216	0					
ANR	234259	Identifier	optlen		234216	1					
ANR	234260	IdentifierDeclStatement	char errStr [ 1024 ] ;	1254:1:37203:37220	234216	5	True				
ANR	234261	IdentifierDecl	errStr [ 1024 ]		234216	0					
ANR	234262	IdentifierDeclType	char [ 1024 ]		234216	0					
ANR	234263	Identifier	errStr		234216	1					
ANR	234264	PrimaryExpression	1024		234216	2					
ANR	234265	ExpressionStatement	assert ( ! ( ( pszPort == NULL ) && ( hostname == NULL ) ) )	1256:1:37224:37274	234216	6	True				
ANR	234266	CallExpression	assert ( ! ( ( pszPort == NULL ) && ( hostname == NULL ) ) )		234216	0					
ANR	234267	Callee	assert		234216	0					
ANR	234268	Identifier	assert		234216	0					
ANR	234269	ArgumentList	! ( ( pszPort == NULL ) && ( hostname == NULL ) )		234216	1					
ANR	234270	Argument	! ( ( pszPort == NULL ) && ( hostname == NULL ) )		234216	0					
ANR	234271	UnaryOperationExpression	! ( ( pszPort == NULL ) && ( hostname == NULL ) )		234216	0					
ANR	234272	UnaryOperator	!		234216	0					
ANR	234273	AndExpression	( pszPort == NULL ) && ( hostname == NULL )		234216	1		&&			
ANR	234274	EqualityExpression	pszPort == NULL		234216	0		==			
ANR	234275	Identifier	pszPort		234216	0					
ANR	234276	Identifier	NULL		234216	1					
ANR	234277	EqualityExpression	hostname == NULL		234216	1		==			
ANR	234278	Identifier	hostname		234216	0					
ANR	234279	Identifier	NULL		234216	1					
ANR	234280	ExpressionStatement	"memset ( & hints , 0 , sizeof ( hints ) )"	1257:8:37284:37316	234216	7	True				
ANR	234281	CallExpression	"memset ( & hints , 0 , sizeof ( hints ) )"		234216	0					
ANR	234282	Callee	memset		234216	0					
ANR	234283	Identifier	memset		234216	0					
ANR	234284	ArgumentList	& hints		234216	1					
ANR	234285	Argument	& hints		234216	0					
ANR	234286	UnaryOperationExpression	& hints		234216	0					
ANR	234287	UnaryOperator	&		234216	0					
ANR	234288	Identifier	hints		234216	1					
ANR	234289	Argument	0		234216	1					
ANR	234290	PrimaryExpression	0		234216	0					
ANR	234291	Argument	sizeof ( hints )		234216	2					
ANR	234292	SizeofExpression	sizeof ( hints )		234216	0					
ANR	234293	Sizeof	sizeof		234216	0					
ANR	234294	SizeofOperand	hints		234216	1					
ANR	234295	IfStatement	if ( bIsServer )		234216	8					
ANR	234296	Condition	bIsServer	1258:4:37322:37330	234216	0	True				
ANR	234297	Identifier	bIsServer		234216	0					
ANR	234298	ExpressionStatement	hints . ai_flags = AI_PASSIVE | AI_NUMERICSERV	1259:2:37335:37379	234216	1	True				
ANR	234299	AssignmentExpression	hints . ai_flags = AI_PASSIVE | AI_NUMERICSERV		234216	0		=			
ANR	234300	MemberAccess	hints . ai_flags		234216	0					
ANR	234301	Identifier	hints		234216	0					
ANR	234302	Identifier	ai_flags		234216	1					
ANR	234303	InclusiveOrExpression	AI_PASSIVE | AI_NUMERICSERV		234216	1		|			
ANR	234304	Identifier	AI_PASSIVE		234216	0					
ANR	234305	Identifier	AI_NUMERICSERV		234216	1					
ANR	234306	ElseStatement	else		234216	0					
ANR	234307	ExpressionStatement	hints . ai_flags = AI_NUMERICSERV	1261:2:37389:37420	234216	0	True				
ANR	234308	AssignmentExpression	hints . ai_flags = AI_NUMERICSERV		234216	0		=			
ANR	234309	MemberAccess	hints . ai_flags		234216	0					
ANR	234310	Identifier	hints		234216	0					
ANR	234311	Identifier	ai_flags		234216	1					
ANR	234312	Identifier	AI_NUMERICSERV		234216	1					
ANR	234313	ExpressionStatement	hints . ai_family = glbl . GetDefPFFamily ( )	1262:8:37430:37469	234216	9	True				
ANR	234314	AssignmentExpression	hints . ai_family = glbl . GetDefPFFamily ( )		234216	0		=			
ANR	234315	MemberAccess	hints . ai_family		234216	0					
ANR	234316	Identifier	hints		234216	0					
ANR	234317	Identifier	ai_family		234216	1					
ANR	234318	CallExpression	glbl . GetDefPFFamily ( )		234216	1					
ANR	234319	Callee	glbl . GetDefPFFamily		234216	0					
ANR	234320	MemberAccess	glbl . GetDefPFFamily		234216	0					
ANR	234321	Identifier	glbl		234216	0					
ANR	234322	Identifier	GetDefPFFamily		234216	1					
ANR	234323	ArgumentList			234216	1					
ANR	234324	ExpressionStatement	hints . ai_socktype = SOCK_DGRAM	1263:8:37479:37509	234216	10	True				
ANR	234325	AssignmentExpression	hints . ai_socktype = SOCK_DGRAM		234216	0		=			
ANR	234326	MemberAccess	hints . ai_socktype		234216	0					
ANR	234327	Identifier	hints		234216	0					
ANR	234328	Identifier	ai_socktype		234216	1					
ANR	234329	Identifier	SOCK_DGRAM		234216	1					
ANR	234330	ExpressionStatement	hints . ai_protocol = IPPROTO_UDP	1268:8:37645:37676	234216	11	True				
ANR	234331	AssignmentExpression	hints . ai_protocol = IPPROTO_UDP		234216	0		=			
ANR	234332	MemberAccess	hints . ai_protocol		234216	0					
ANR	234333	Identifier	hints		234216	0					
ANR	234334	Identifier	ai_protocol		234216	1					
ANR	234335	Identifier	IPPROTO_UDP		234216	1					
ANR	234336	ExpressionStatement	"error = getaddrinfo ( ( char * ) hostname , ( char * ) pszPort , & hints , & res )"	1270:8:37693:37761	234216	12	True				
ANR	234337	AssignmentExpression	"error = getaddrinfo ( ( char * ) hostname , ( char * ) pszPort , & hints , & res )"		234216	0		=			
ANR	234338	Identifier	error		234216	0					
ANR	234339	CallExpression	"getaddrinfo ( ( char * ) hostname , ( char * ) pszPort , & hints , & res )"		234216	1					
ANR	234340	Callee	getaddrinfo		234216	0					
ANR	234341	Identifier	getaddrinfo		234216	0					
ANR	234342	ArgumentList	( char * ) hostname		234216	1					
ANR	234343	Argument	( char * ) hostname		234216	0					
ANR	234344	CastExpression	( char * ) hostname		234216	0					
ANR	234345	CastTarget	char *		234216	0					
ANR	234346	Identifier	hostname		234216	1					
ANR	234347	Argument	( char * ) pszPort		234216	1					
ANR	234348	CastExpression	( char * ) pszPort		234216	0					
ANR	234349	CastTarget	char *		234216	0					
ANR	234350	Identifier	pszPort		234216	1					
ANR	234351	Argument	& hints		234216	2					
ANR	234352	UnaryOperationExpression	& hints		234216	0					
ANR	234353	UnaryOperator	&		234216	0					
ANR	234354	Identifier	hints		234216	1					
ANR	234355	Argument	& res		234216	3					
ANR	234356	UnaryOperationExpression	& res		234216	0					
ANR	234357	UnaryOperator	&		234216	0					
ANR	234358	Identifier	res		234216	1					
ANR	234359	IfStatement	if ( error )		234216	13					
ANR	234360	Condition	error	1271:11:37774:37778	234216	0	True				
ANR	234361	Identifier	error		234216	0					
ANR	234362	CompoundStatement		24:18:717:717	234216	1					
ANR	234363	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""%s"" , gai_strerror ( error ) )"	1272:15:37798:37856	234216	0	True				
ANR	234364	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""%s"" , gai_strerror ( error ) )"		234216	0					
ANR	234365	Callee	errmsg . LogError		234216	0					
ANR	234366	MemberAccess	errmsg . LogError		234216	0					
ANR	234367	Identifier	errmsg		234216	0					
ANR	234368	Identifier	LogError		234216	1					
ANR	234369	ArgumentList	0		234216	1					
ANR	234370	Argument	0		234216	0					
ANR	234371	PrimaryExpression	0		234216	0					
ANR	234372	Argument	NO_ERRCODE		234216	1					
ANR	234373	Identifier	NO_ERRCODE		234216	0					
ANR	234374	Argument	"""%s"""		234216	2					
ANR	234375	PrimaryExpression	"""%s"""		234216	0					
ANR	234376	Argument	gai_strerror ( error )		234216	3					
ANR	234377	CallExpression	gai_strerror ( error )		234216	0					
ANR	234378	Callee	gai_strerror		234216	0					
ANR	234379	Identifier	gai_strerror		234216	0					
ANR	234380	ArgumentList	error		234216	1					
ANR	234381	Argument	error		234216	0					
ANR	234382	Identifier	error		234216	0					
ANR	234383	ExpressionStatement	"errmsg . LogError ( 0 , NO_ERRCODE , ""UDP message reception disabled due to error logged in last message.\\n"" )"	1273:8:37866:37969	234216	1	True				
ANR	234384	CallExpression	"errmsg . LogError ( 0 , NO_ERRCODE , ""UDP message reception disabled due to error logged in last message.\\n"" )"		234216	0					
ANR	234385	Callee	errmsg . LogError		234216	0					
ANR	234386	MemberAccess	errmsg . LogError		234216	0					
ANR	234387	Identifier	errmsg		234216	0					
ANR	234388	Identifier	LogError		234216	1					
ANR	234389	ArgumentList	0		234216	1					
ANR	234390	Argument	0		234216	0					
ANR	234391	PrimaryExpression	0		234216	0					
ANR	234392	Argument	NO_ERRCODE		234216	1					
ANR	234393	Identifier	NO_ERRCODE		234216	0					
ANR	234394	Argument	"""UDP message reception disabled due to error logged in last message.\\n"""		234216	2					
ANR	234395	PrimaryExpression	"""UDP message reception disabled due to error logged in last message.\\n"""		234216	0					
ANR	234396	ReturnStatement	return NULL ;	1274:8:37979:37990	234216	2	True				
ANR	234397	Identifier	NULL		234216	0					
ANR	234398	ForStatement	"for ( maxs = 0 , r = res ; r != NULL ; r = r -> ai_next , maxs ++ )"		234216	14					
ANR	234399	ForInit	"maxs = 0 , r = res ;"	1278:13:38063:38080	234216	0	True				
ANR	234400	Expression	"maxs = 0 , r = res"		234216	0					
ANR	234401	AssignmentExpression	maxs = 0		234216	0		=			
ANR	234402	Identifier	maxs		234216	0					
ANR	234403	PrimaryExpression	0		234216	1					
ANR	234404	AssignmentExpression	r = res		234216	1		=			
ANR	234405	Identifier	r		234216	0					
ANR	234406	Identifier	res		234216	1					
ANR	234407	Condition	r != NULL	1278:32:38082:38090	234216	1	True				
ANR	234408	EqualityExpression	r != NULL		234216	0		!=			
ANR	234409	Identifier	r		234216	0					
ANR	234410	Identifier	NULL		234216	1					
ANR	234411	Expression	"r = r -> ai_next , maxs ++"	1278:44:38094:38115	234216	2	True				
ANR	234412	AssignmentExpression	r = r -> ai_next		234216	0		=			
ANR	234413	Identifier	r		234216	0					
ANR	234414	PtrMemberAccess	r -> ai_next		234216	1					
ANR	234415	Identifier	r		234216	0					
ANR	234416	Identifier	ai_next		234216	1					
ANR	234417	PostIncDecOperationExpression	maxs ++		234216	1					
ANR	234418	Identifier	maxs		234216	0					
ANR	234419	IncDec	++		234216	1					
ANR	234420	ExpressionStatement		1279:13:38131:38131	234216	3	True				
ANR	234421	ExpressionStatement	socks = MALLOC ( ( maxs + 1 ) * sizeof ( int ) )	1280:8:38141:38179	234216	15	True				
ANR	234422	AssignmentExpression	socks = MALLOC ( ( maxs + 1 ) * sizeof ( int ) )		234216	0		=			
ANR	234423	Identifier	socks		234216	0					
ANR	234424	CallExpression	MALLOC ( ( maxs + 1 ) * sizeof ( int ) )		234216	1					
ANR	234425	Callee	MALLOC		234216	0					
ANR	234426	Identifier	MALLOC		234216	0					
ANR	234427	ArgumentList	( maxs + 1 ) * sizeof ( int )		234216	1					
ANR	234428	Argument	( maxs + 1 ) * sizeof ( int )		234216	0					
ANR	234429	MultiplicativeExpression	( maxs + 1 ) * sizeof ( int )		234216	0		*			
ANR	234430	AdditiveExpression	maxs + 1		234216	0		+			
ANR	234431	Identifier	maxs		234216	0					
ANR	234432	PrimaryExpression	1		234216	1					
ANR	234433	SizeofExpression	sizeof ( int )		234216	1					
ANR	234434	Sizeof	sizeof		234216	0					
ANR	234435	SizeofOperand	int		234216	1					
ANR	234436	IfStatement	if ( socks == NULL )		234216	16					
ANR	234437	Condition	socks == NULL	1281:12:38193:38205	234216	0	True				
ANR	234438	EqualityExpression	socks == NULL		234216	0		==			
ANR	234439	Identifier	socks		234216	0					
ANR	234440	Identifier	NULL		234216	1					
ANR	234441	CompoundStatement		34:27:1144:1144	234216	1					
ANR	234442	Statement	errmsg	1282:2:38212:38217	234216	0	True				
ANR	234443	Statement	.	1282:8:38218:38218	234216	1	True				
ANR	234444	Statement	LogError	1282:9:38219:38226	234216	2	True				
ANR	234445	Statement	(	1282:17:38227:38227	234216	3	True				
ANR	234446	Statement	0	1282:18:38228:38228	234216	4	True				
ANR	234447	Statement	","	1282:19:38229:38229	234216	5	True				
ANR	234448	Statement	NO_ERRCODE	1282:21:38231:38240	234216	6	True				
ANR	234449	Statement	","	1282:31:38241:38241	234216	7	True				
ANR	234450	Statement	"""couldn't allocate memory for UDP sockets, suspending UDP """	1282:33:38243:38301	234216	8	True				
ANR	234451	Statement	"""message reception"""	1283:2:38305:38323	234216	9	True				
ANR	234452	Statement	)	1283:21:38324:38324	234216	10	True				
ANR	234453	ExpressionStatement		1283:22:38325:38325	234216	11	True				
ANR	234454	ExpressionStatement	freeaddrinfo ( res )	1284:15:38342:38359	234216	12	True				
ANR	234455	CallExpression	freeaddrinfo ( res )		234216	0					
ANR	234456	Callee	freeaddrinfo		234216	0					
ANR	234457	Identifier	freeaddrinfo		234216	0					
ANR	234458	ArgumentList	res		234216	1					
ANR	234459	Argument	res		234216	0					
ANR	234460	Identifier	res		234216	0					
ANR	234461	ReturnStatement	return NULL ;	1285:15:38376:38387	234216	13	True				
ANR	234462	Identifier	NULL		234216	0					
ANR	234463	ExpressionStatement	* socks = 0	1288:8:38408:38418	234216	17	True				
ANR	234464	AssignmentExpression	* socks = 0		234216	0		=			
ANR	234465	UnaryOperationExpression	* socks		234216	0					
ANR	234466	UnaryOperator	*		234216	0					
ANR	234467	Identifier	socks		234216	1					
ANR	234468	PrimaryExpression	0		234216	1					
ANR	234469	ExpressionStatement	s = socks + 1	1289:8:38477:38490	234216	18	True				
ANR	234470	AssignmentExpression	s = socks + 1		234216	0		=			
ANR	234471	Identifier	s		234216	0					
ANR	234472	AdditiveExpression	socks + 1		234216	1		+			
ANR	234473	Identifier	socks		234216	0					
ANR	234474	PrimaryExpression	1		234216	1					
ANR	234475	ForStatement	for ( r = res ; r != NULL ; r = r -> ai_next )		234216	19					
ANR	234476	ForInit	r = res ;	1290:6:38498:38505	234216	0	True				
ANR	234477	AssignmentExpression	r = res		234216	0		=			
ANR	234478	Identifier	r		234216	0					
ANR	234479	Identifier	res		234216	1					
ANR	234480	Condition	r != NULL	1290:15:38507:38515	234216	1	True				
ANR	234481	EqualityExpression	r != NULL		234216	0		!=			
ANR	234482	Identifier	r		234216	0					
ANR	234483	Identifier	NULL		234216	1					
ANR	234484	AssignmentExpression	r = r -> ai_next	1290:27:38519:38532	234216	2	True	=			
ANR	234485	Identifier	r		234216	0					
ANR	234486	PtrMemberAccess	r -> ai_next		234216	1					
ANR	234487	Identifier	r		234216	0					
ANR	234488	Identifier	ai_next		234216	1					
ANR	234489	CompoundStatement		43:43:1471:1471	234216	3					
ANR	234490	ExpressionStatement	"* s = socket ( r -> ai_family , SOCK_DGRAM , r -> ai_protocol )"	1293:15:38638:38691	234216	0	True				
ANR	234491	AssignmentExpression	"* s = socket ( r -> ai_family , SOCK_DGRAM , r -> ai_protocol )"		234216	0		=			
ANR	234492	UnaryOperationExpression	* s		234216	0					
ANR	234493	UnaryOperator	*		234216	0					
ANR	234494	Identifier	s		234216	1					
ANR	234495	CallExpression	"socket ( r -> ai_family , SOCK_DGRAM , r -> ai_protocol )"		234216	1					
ANR	234496	Callee	socket		234216	0					
ANR	234497	Identifier	socket		234216	0					
ANR	234498	ArgumentList	r -> ai_family		234216	1					
ANR	234499	Argument	r -> ai_family		234216	0					
ANR	234500	PtrMemberAccess	r -> ai_family		234216	0					
ANR	234501	Identifier	r		234216	0					
ANR	234502	Identifier	ai_family		234216	1					
ANR	234503	Argument	SOCK_DGRAM		234216	1					
ANR	234504	Identifier	SOCK_DGRAM		234216	0					
ANR	234505	Argument	r -> ai_protocol		234216	2					
ANR	234506	PtrMemberAccess	r -> ai_protocol		234216	0					
ANR	234507	Identifier	r		234216	0					
ANR	234508	Identifier	ai_protocol		234216	1					
ANR	234509	IfStatement	if ( * s < 0 )		234216	1					
ANR	234510	Condition	* s < 0	1297:13:38793:38798	234216	0	True				
ANR	234511	RelationalExpression	* s < 0		234216	0		<			
ANR	234512	UnaryOperationExpression	* s		234216	0					
ANR	234513	UnaryOperator	*		234216	0					
ANR	234514	Identifier	s		234216	1					
ANR	234515	PrimaryExpression	0		234216	1					
ANR	234516	CompoundStatement		50:21:1737:1737	234216	1					
ANR	234517	IfStatement	if ( ! ( r -> ai_family == PF_INET6 && errno == EAFNOSUPPORT ) )		234216	0					
ANR	234518	Condition	! ( r -> ai_family == PF_INET6 && errno == EAFNOSUPPORT )	1298:6:38809:38860	234216	0	True				
ANR	234519	UnaryOperationExpression	! ( r -> ai_family == PF_INET6 && errno == EAFNOSUPPORT )		234216	0					
ANR	234520	UnaryOperator	!		234216	0					
ANR	234521	AndExpression	r -> ai_family == PF_INET6 && errno == EAFNOSUPPORT		234216	1		&&			
ANR	234522	EqualityExpression	r -> ai_family == PF_INET6		234216	0		==			
ANR	234523	PtrMemberAccess	r -> ai_family		234216	0					
ANR	234524	Identifier	r		234216	0					
ANR	234525	Identifier	ai_family		234216	1					
ANR	234526	Identifier	PF_INET6		234216	1					
ANR	234527	EqualityExpression	errno == EAFNOSUPPORT		234216	1		==			
ANR	234528	Identifier	errno		234216	0					
ANR	234529	Identifier	EAFNOSUPPORT		234216	1					
ANR	234530	ExpressionStatement	"errmsg . LogError ( errno , NO_ERRCODE , ""create_udp_socket(), socket"" )"	1299:4:38867:38932	234216	1	True				
ANR	234531	CallExpression	"errmsg . LogError ( errno , NO_ERRCODE , ""create_udp_socket(), socket"" )"		234216	0					
ANR	234532	Callee	errmsg . LogError		234216	0					
ANR	234533	MemberAccess	errmsg . LogError		234216	0					
ANR	234534	Identifier	errmsg		234216	0					
ANR	234535	Identifier	LogError		234216	1					
ANR	234536	ArgumentList	errno		234216	1					
ANR	234537	Argument	errno		234216	0					
ANR	234538	Identifier	errno		234216	0					
ANR	234539	Argument	NO_ERRCODE		234216	1					
ANR	234540	Identifier	NO_ERRCODE		234216	0					
ANR	234541	Argument	"""create_udp_socket(), socket"""		234216	2					
ANR	234542	PrimaryExpression	"""create_udp_socket(), socket"""		234216	0					
ANR	234543	ContinueStatement	continue ;	1303:24:39051:39059	234216	1	True				
ANR	234544	Statement	ifdef	1306:3:39083:39087	234216	2	True				
ANR	234545	Statement	IPV6_V6ONLY	1306:9:39089:39099	234216	3	True				
ANR	234546	IfStatement	if ( r -> ai_family == AF_INET6 )		234216	4					
ANR	234547	Condition	r -> ai_family == AF_INET6	1307:20:39121:39144	234216	0	True				
ANR	234548	EqualityExpression	r -> ai_family == AF_INET6		234216	0		==			
ANR	234549	PtrMemberAccess	r -> ai_family		234216	0					
ANR	234550	Identifier	r		234216	0					
ANR	234551	Identifier	ai_family		234216	1					
ANR	234552	Identifier	AF_INET6		234216	1					
ANR	234553	CompoundStatement		61:17:2102:2113	234216	1					
ANR	234554	IdentifierDeclStatement	int ion = 1 ;	1308:17:39166:39177	234216	0	True				
ANR	234555	IdentifierDecl	ion = 1		234216	0					
ANR	234556	IdentifierDeclType	int		234216	0					
ANR	234557	Identifier	ion		234216	1					
ANR	234558	AssignmentExpression	ion = 1		234216	2		=			
ANR	234559	Identifier	ion		234216	0					
ANR	234560	PrimaryExpression	1		234216	1					
ANR	234561	IfStatement	"if ( setsockopt ( * s , IPPROTO_IPV6 , IPV6_V6ONLY , ( char * ) & ion , sizeof ( ion ) ) < 0 )"		234216	1					
ANR	234562	Condition	"setsockopt ( * s , IPPROTO_IPV6 , IPV6_V6ONLY , ( char * ) & ion , sizeof ( ion ) ) < 0"	1309:7:39186:39267	234216	0	True				
ANR	234563	RelationalExpression	"setsockopt ( * s , IPPROTO_IPV6 , IPV6_V6ONLY , ( char * ) & ion , sizeof ( ion ) ) < 0"		234216	0		<			
ANR	234564	CallExpression	"setsockopt ( * s , IPPROTO_IPV6 , IPV6_V6ONLY , ( char * ) & ion , sizeof ( ion ) )"		234216	0					
ANR	234565	Callee	setsockopt		234216	0					
ANR	234566	Identifier	setsockopt		234216	0					
ANR	234567	ArgumentList	* s		234216	1					
ANR	234568	Argument	* s		234216	0					
ANR	234569	UnaryOperationExpression	* s		234216	0					
ANR	234570	UnaryOperator	*		234216	0					
ANR	234571	Identifier	s		234216	1					
ANR	234572	Argument	IPPROTO_IPV6		234216	1					
ANR	234573	Identifier	IPPROTO_IPV6		234216	0					
ANR	234574	Argument	IPV6_V6ONLY		234216	2					
ANR	234575	Identifier	IPV6_V6ONLY		234216	0					
ANR	234576	Argument	( char * ) & ion		234216	3					
ANR	234577	CastExpression	( char * ) & ion		234216	0					
ANR	234578	CastTarget	char *		234216	0					
ANR	234579	UnaryOperationExpression	& ion		234216	1					
ANR	234580	UnaryOperator	&		234216	0					
ANR	234581	Identifier	ion		234216	1					
ANR	234582	Argument	sizeof ( ion )		234216	4					
ANR	234583	SizeofExpression	sizeof ( ion )		234216	0					
ANR	234584	Sizeof	sizeof		234216	0					
ANR	234585	SizeofOperand	ion		234216	1					
ANR	234586	PrimaryExpression	0		234216	1					
ANR	234587	CompoundStatement		63:42:2206:2206	234216	1					
ANR	234588	ExpressionStatement	"errmsg . LogError ( errno , NO_ERRCODE , ""setsockopt"" )"	1311:3:39275:39323	234216	0	True				
ANR	234589	CallExpression	"errmsg . LogError ( errno , NO_ERRCODE , ""setsockopt"" )"		234216	0					
ANR	234590	Callee	errmsg . LogError		234216	0					
ANR	234591	MemberAccess	errmsg . LogError		234216	0					
ANR	234592	Identifier	errmsg		234216	0					
ANR	234593	Identifier	LogError		234216	1					
ANR	234594	ArgumentList	errno		234216	1					
ANR	234595	Argument	errno		234216	0					
ANR	234596	Identifier	errno		234216	0					
ANR	234597	Argument	NO_ERRCODE		234216	1					
ANR	234598	Identifier	NO_ERRCODE		234216	0					
ANR	234599	Argument	"""setsockopt"""		234216	2					
ANR	234600	PrimaryExpression	"""setsockopt"""		234216	0					
ANR	234601	ExpressionStatement	close ( * s )	1312:3:39328:39337	234216	1	True				
ANR	234602	CallExpression	close ( * s )		234216	0					
ANR	234603	Callee	close		234216	0					
ANR	234604	Identifier	close		234216	0					
ANR	234605	ArgumentList	* s		234216	1					
ANR	234606	Argument	* s		234216	0					
ANR	234607	UnaryOperationExpression	* s		234216	0					
ANR	234608	UnaryOperator	*		234216	0					
ANR	234609	Identifier	s		234216	1					
ANR	234610	ExpressionStatement	* s = - 1	1313:3:39342:39349	234216	2	True				
ANR	234611	AssignmentExpression	* s = - 1		234216	0		=			
ANR	234612	UnaryOperationExpression	* s		234216	0					
ANR	234613	UnaryOperator	*		234216	0					
ANR	234614	Identifier	s		234216	1					
ANR	234615	UnaryOperationExpression	- 1		234216	1					
ANR	234616	UnaryOperator	-		234216	0					
ANR	234617	PrimaryExpression	1		234216	1					
ANR	234618	ContinueStatement	continue ;	1314:3:39354:39362	234216	3	True				
ANR	234619	Statement	endif	1317:3:39404:39408	234216	5	True				
ANR	234620	IfStatement	if ( device )		234216	6					
ANR	234621	Condition	device	1319:5:39416:39421	234216	0	True				
ANR	234622	Identifier	device		234216	0					
ANR	234623	CompoundStatement		72:13:2360:2360	234216	1					
ANR	234624	Statement	if	1320:4:39430:39431	234216	0	True				
ANR	234625	Statement	defined	1320:7:39433:39439	234216	1	True				
ANR	234626	Statement	(	1320:14:39440:39440	234216	2	True				
ANR	234627	Statement	SO_BINDTODEVICE	1320:15:39441:39455	234216	3	True				
ANR	234628	Statement	)	1320:30:39456:39456	234216	4	True				
ANR	234629	IfStatement	"if ( setsockopt ( * s , SOL_SOCKET , SO_BINDTODEVICE , device , strlen ( device ) + 1 ) < 0 )"		234216	5					
ANR	234630	Condition	"setsockopt ( * s , SOL_SOCKET , SO_BINDTODEVICE , device , strlen ( device ) + 1 ) < 0"	1321:6:39464:39538	234216	0	True				
ANR	234631	RelationalExpression	"setsockopt ( * s , SOL_SOCKET , SO_BINDTODEVICE , device , strlen ( device ) + 1 ) < 0"		234216	0		<			
ANR	234632	CallExpression	"setsockopt ( * s , SOL_SOCKET , SO_BINDTODEVICE , device , strlen ( device ) + 1 )"		234216	0					
ANR	234633	Callee	setsockopt		234216	0					
ANR	234634	Identifier	setsockopt		234216	0					
ANR	234635	ArgumentList	* s		234216	1					
ANR	234636	Argument	* s		234216	0					
ANR	234637	UnaryOperationExpression	* s		234216	0					
ANR	234638	UnaryOperator	*		234216	0					
ANR	234639	Identifier	s		234216	1					
ANR	234640	Argument	SOL_SOCKET		234216	1					
ANR	234641	Identifier	SOL_SOCKET		234216	0					
ANR	234642	Argument	SO_BINDTODEVICE		234216	2					
ANR	234643	Identifier	SO_BINDTODEVICE		234216	0					
ANR	234644	Argument	device		234216	3					
ANR	234645	Identifier	device		234216	0					
ANR	234646	Argument	strlen ( device ) + 1		234216	4					
ANR	234647	AdditiveExpression	strlen ( device ) + 1		234216	0		+			
ANR	234648	CallExpression	strlen ( device )		234216	0					
ANR	234649	Callee	strlen		234216	0					
ANR	234650	Identifier	strlen		234216	0					
ANR	234651	ArgumentList	device		234216	1					
ANR	234652	Argument	device		234216	0					
ANR	234653	Identifier	device		234216	0					
ANR	234654	PrimaryExpression	1		234216	1					
ANR	234655	PrimaryExpression	0		234216	1					
ANR	234656	Statement	endif	1322:4:39545:39549	234216	1	True				
ANR	234657	CompoundStatement		76:3:2490:2490	234216	6					
ANR	234658	ExpressionStatement	"errmsg . LogError ( errno , NO_ERRCODE , ""setsockopt(SO_BINDTODEVICE)"" )"	1324:4:39560:39625	234216	0	True				
ANR	234659	CallExpression	"errmsg . LogError ( errno , NO_ERRCODE , ""setsockopt(SO_BINDTODEVICE)"" )"		234216	0					
ANR	234660	Callee	errmsg . LogError		234216	0					
ANR	234661	MemberAccess	errmsg . LogError		234216	0					
ANR	234662	Identifier	errmsg		234216	0					
ANR	234663	Identifier	LogError		234216	1					
ANR	234664	ArgumentList	errno		234216	1					
ANR	234665	Argument	errno		234216	0					
ANR	234666	Identifier	errno		234216	0					
ANR	234667	Argument	NO_ERRCODE		234216	1					
ANR	234668	Identifier	NO_ERRCODE		234216	0					
ANR	234669	Argument	"""setsockopt(SO_BINDTODEVICE)"""		234216	2					
ANR	234670	PrimaryExpression	"""setsockopt(SO_BINDTODEVICE)"""		234216	0					
ANR	234671	ExpressionStatement	close ( * s )	1325:32:39659:39668	234216	1	True				
ANR	234672	CallExpression	close ( * s )		234216	0					
ANR	234673	Callee	close		234216	0					
ANR	234674	Identifier	close		234216	0					
ANR	234675	ArgumentList	* s		234216	1					
ANR	234676	Argument	* s		234216	0					
ANR	234677	UnaryOperationExpression	* s		234216	0					
ANR	234678	UnaryOperator	*		234216	0					
ANR	234679	Identifier	s		234216	1					
ANR	234680	ExpressionStatement	* s = - 1	1326:4:39674:39681	234216	2	True				
ANR	234681	AssignmentExpression	* s = - 1		234216	0		=			
ANR	234682	UnaryOperationExpression	* s		234216	0					
ANR	234683	UnaryOperator	*		234216	0					
ANR	234684	Identifier	s		234216	1					
ANR	234685	UnaryOperationExpression	- 1		234216	1					
ANR	234686	UnaryOperator	-		234216	0					
ANR	234687	PrimaryExpression	1		234216	1					
ANR	234688	ContinueStatement	continue ;	1327:4:39687:39695	234216	3	True				
ANR	234689	IfStatement	"if ( setsockopt ( * s , SOL_SOCKET , SO_REUSEADDR , ( char * ) & on , sizeof ( on ) ) < 0 )"		234216	7					
ANR	234690	Condition	"setsockopt ( * s , SOL_SOCKET , SO_REUSEADDR , ( char * ) & on , sizeof ( on ) ) < 0"	1338:13:40049:40128	234216	0	True				
ANR	234691	RelationalExpression	"setsockopt ( * s , SOL_SOCKET , SO_REUSEADDR , ( char * ) & on , sizeof ( on ) ) < 0"		234216	0		<			
ANR	234692	CallExpression	"setsockopt ( * s , SOL_SOCKET , SO_REUSEADDR , ( char * ) & on , sizeof ( on ) )"		234216	0					
ANR	234693	Callee	setsockopt		234216	0					
ANR	234694	Identifier	setsockopt		234216	0					
ANR	234695	ArgumentList	* s		234216	1					
ANR	234696	Argument	* s		234216	0					
ANR	234697	UnaryOperationExpression	* s		234216	0					
ANR	234698	UnaryOperator	*		234216	0					
ANR	234699	Identifier	s		234216	1					
ANR	234700	Argument	SOL_SOCKET		234216	1					
ANR	234701	Identifier	SOL_SOCKET		234216	0					
ANR	234702	Argument	SO_REUSEADDR		234216	2					
ANR	234703	Identifier	SO_REUSEADDR		234216	0					
ANR	234704	Argument	( char * ) & on		234216	3					
ANR	234705	CastExpression	( char * ) & on		234216	0					
ANR	234706	CastTarget	char *		234216	0					
ANR	234707	UnaryOperationExpression	& on		234216	1					
ANR	234708	UnaryOperator	&		234216	0					
ANR	234709	Identifier	on		234216	1					
ANR	234710	Argument	sizeof ( on )		234216	4					
ANR	234711	SizeofExpression	sizeof ( on )		234216	0					
ANR	234712	Sizeof	sizeof		234216	0					
ANR	234713	SizeofOperand	on		234216	1					
ANR	234714	PrimaryExpression	0		234216	1					
ANR	234715	CompoundStatement		92:42:3068:3068	234216	1					
ANR	234716	ExpressionStatement	"errmsg . LogError ( errno , NO_ERRCODE , ""setsockopt(REUSEADDR)"" )"	1340:3:40137:40196	234216	0	True				
ANR	234717	CallExpression	"errmsg . LogError ( errno , NO_ERRCODE , ""setsockopt(REUSEADDR)"" )"		234216	0					
ANR	234718	Callee	errmsg . LogError		234216	0					
ANR	234719	MemberAccess	errmsg . LogError		234216	0					
ANR	234720	Identifier	errmsg		234216	0					
ANR	234721	Identifier	LogError		234216	1					
ANR	234722	ArgumentList	errno		234216	1					
ANR	234723	Argument	errno		234216	0					
ANR	234724	Identifier	errno		234216	0					
ANR	234725	Argument	NO_ERRCODE		234216	1					
ANR	234726	Identifier	NO_ERRCODE		234216	0					
ANR	234727	Argument	"""setsockopt(REUSEADDR)"""		234216	2					
ANR	234728	PrimaryExpression	"""setsockopt(REUSEADDR)"""		234216	0					
ANR	234729	ExpressionStatement	close ( * s )	1341:24:40222:40231	234216	1	True				
ANR	234730	CallExpression	close ( * s )		234216	0					
ANR	234731	Callee	close		234216	0					
ANR	234732	Identifier	close		234216	0					
ANR	234733	ArgumentList	* s		234216	1					
ANR	234734	Argument	* s		234216	0					
ANR	234735	UnaryOperationExpression	* s		234216	0					
ANR	234736	UnaryOperator	*		234216	0					
ANR	234737	Identifier	s		234216	1					
ANR	234738	ExpressionStatement	* s = - 1	1342:3:40236:40243	234216	2	True				
ANR	234739	AssignmentExpression	* s = - 1		234216	0		=			
ANR	234740	UnaryOperationExpression	* s		234216	0					
ANR	234741	UnaryOperator	*		234216	0					
ANR	234742	Identifier	s		234216	1					
ANR	234743	UnaryOperationExpression	- 1		234216	1					
ANR	234744	UnaryOperator	-		234216	0					
ANR	234745	PrimaryExpression	1		234216	1					
ANR	234746	ContinueStatement	continue ;	1343:3:40248:40256	234216	3	True				
ANR	234747	IfStatement	if ( should_use_so_bsdcompat ( ) )		234216	8					
ANR	234748	Condition	should_use_so_bsdcompat ( )	1353:6:40646:40670	234216	0	True				
ANR	234749	CallExpression	should_use_so_bsdcompat ( )		234216	0					
ANR	234750	Callee	should_use_so_bsdcompat		234216	0					
ANR	234751	Identifier	should_use_so_bsdcompat		234216	0					
ANR	234752	ArgumentList			234216	1					
ANR	234753	CompoundStatement		106:33:3609:3609	234216	1					
ANR	234754	IfStatement	"if ( setsockopt ( * s , SOL_SOCKET , SO_BSDCOMPAT , ( char * ) & on , sizeof ( on ) ) < 0 )"		234216	0					
ANR	234755	Condition	"setsockopt ( * s , SOL_SOCKET , SO_BSDCOMPAT , ( char * ) & on , sizeof ( on ) ) < 0"	1354:7:40682:40756	234216	0	True				
ANR	234756	RelationalExpression	"setsockopt ( * s , SOL_SOCKET , SO_BSDCOMPAT , ( char * ) & on , sizeof ( on ) ) < 0"		234216	0		<			
ANR	234757	CallExpression	"setsockopt ( * s , SOL_SOCKET , SO_BSDCOMPAT , ( char * ) & on , sizeof ( on ) )"		234216	0					
ANR	234758	Callee	setsockopt		234216	0					
ANR	234759	Identifier	setsockopt		234216	0					
ANR	234760	ArgumentList	* s		234216	1					
ANR	234761	Argument	* s		234216	0					
ANR	234762	UnaryOperationExpression	* s		234216	0					
ANR	234763	UnaryOperator	*		234216	0					
ANR	234764	Identifier	s		234216	1					
ANR	234765	Argument	SOL_SOCKET		234216	1					
ANR	234766	Identifier	SOL_SOCKET		234216	0					
ANR	234767	Argument	SO_BSDCOMPAT		234216	2					
ANR	234768	Identifier	SO_BSDCOMPAT		234216	0					
ANR	234769	Argument	( char * ) & on		234216	3					
ANR	234770	CastExpression	( char * ) & on		234216	0					
ANR	234771	CastTarget	char *		234216	0					
ANR	234772	UnaryOperationExpression	& on		234216	1					
ANR	234773	UnaryOperator	&		234216	0					
ANR	234774	Identifier	on		234216	1					
ANR	234775	Argument	sizeof ( on )		234216	4					
ANR	234776	SizeofExpression	sizeof ( on )		234216	0					
ANR	234777	Sizeof	sizeof		234216	0					
ANR	234778	SizeofOperand	on		234216	1					
ANR	234779	PrimaryExpression	0		234216	1					
ANR	234780	CompoundStatement		108:36:3695:3695	234216	1					
ANR	234781	ExpressionStatement	"errmsg . LogError ( errno , NO_ERRCODE , ""setsockopt(BSDCOMPAT)"" )"	1356:4:40765:40824	234216	0	True				
ANR	234782	CallExpression	"errmsg . LogError ( errno , NO_ERRCODE , ""setsockopt(BSDCOMPAT)"" )"		234216	0					
ANR	234783	Callee	errmsg . LogError		234216	0					
ANR	234784	MemberAccess	errmsg . LogError		234216	0					
ANR	234785	Identifier	errmsg		234216	0					
ANR	234786	Identifier	LogError		234216	1					
ANR	234787	ArgumentList	errno		234216	1					
ANR	234788	Argument	errno		234216	0					
ANR	234789	Identifier	errno		234216	0					
ANR	234790	Argument	NO_ERRCODE		234216	1					
ANR	234791	Identifier	NO_ERRCODE		234216	0					
ANR	234792	Argument	"""setsockopt(BSDCOMPAT)"""		234216	2					
ANR	234793	PrimaryExpression	"""setsockopt(BSDCOMPAT)"""		234216	0					
ANR	234794	ExpressionStatement	close ( * s )	1357:32:40858:40867	234216	1	True				
ANR	234795	CallExpression	close ( * s )		234216	0					
ANR	234796	Callee	close		234216	0					
ANR	234797	Identifier	close		234216	0					
ANR	234798	ArgumentList	* s		234216	1					
ANR	234799	Argument	* s		234216	0					
ANR	234800	UnaryOperationExpression	* s		234216	0					
ANR	234801	UnaryOperator	*		234216	0					
ANR	234802	Identifier	s		234216	1					
ANR	234803	ExpressionStatement	* s = - 1	1358:4:40873:40880	234216	2	True				
ANR	234804	AssignmentExpression	* s = - 1		234216	0		=			
ANR	234805	UnaryOperationExpression	* s		234216	0					
ANR	234806	UnaryOperator	*		234216	0					
ANR	234807	Identifier	s		234216	1					
ANR	234808	UnaryOperationExpression	- 1		234216	1					
ANR	234809	UnaryOperator	-		234216	0					
ANR	234810	PrimaryExpression	1		234216	1					
ANR	234811	ContinueStatement	continue ;	1359:4:40886:40894	234216	3	True				
ANR	234812	IfStatement	"if ( ( sockflags = fcntl ( * s , F_GETFL ) ) != - 1 )"		234216	9					
ANR	234813	Condition	"( sockflags = fcntl ( * s , F_GETFL ) ) != - 1"	1370:6:41263:41300	234216	0	True				
ANR	234814	EqualityExpression	"( sockflags = fcntl ( * s , F_GETFL ) ) != - 1"		234216	0		!=			
ANR	234815	AssignmentExpression	"sockflags = fcntl ( * s , F_GETFL )"		234216	0		=			
ANR	234816	Identifier	sockflags		234216	0					
ANR	234817	CallExpression	"fcntl ( * s , F_GETFL )"		234216	1					
ANR	234818	Callee	fcntl		234216	0					
ANR	234819	Identifier	fcntl		234216	0					
ANR	234820	ArgumentList	* s		234216	1					
ANR	234821	Argument	* s		234216	0					
ANR	234822	UnaryOperationExpression	* s		234216	0					
ANR	234823	UnaryOperator	*		234216	0					
ANR	234824	Identifier	s		234216	1					
ANR	234825	Argument	F_GETFL		234216	1					
ANR	234826	Identifier	F_GETFL		234216	0					
ANR	234827	UnaryOperationExpression	- 1		234216	1					
ANR	234828	UnaryOperator	-		234216	0					
ANR	234829	PrimaryExpression	1		234216	1					
ANR	234830	CompoundStatement		123:46:4239:4239	234216	1					
ANR	234831	ExpressionStatement	sockflags |= O_NONBLOCK	1371:3:41308:41331	234216	0	True				
ANR	234832	AssignmentExpression	sockflags |= O_NONBLOCK		234216	0		|=			
ANR	234833	Identifier	sockflags		234216	0					
ANR	234834	Identifier	O_NONBLOCK		234216	1					
ANR	234835	ExpressionStatement	"sockflags = fcntl ( * s , F_SETFL , sockflags )"	1375:3:41425:41466	234216	1	True				
ANR	234836	AssignmentExpression	"sockflags = fcntl ( * s , F_SETFL , sockflags )"		234216	0		=			
ANR	234837	Identifier	sockflags		234216	0					
ANR	234838	CallExpression	"fcntl ( * s , F_SETFL , sockflags )"		234216	1					
ANR	234839	Callee	fcntl		234216	0					
ANR	234840	Identifier	fcntl		234216	0					
ANR	234841	ArgumentList	* s		234216	1					
ANR	234842	Argument	* s		234216	0					
ANR	234843	UnaryOperationExpression	* s		234216	0					
ANR	234844	UnaryOperator	*		234216	0					
ANR	234845	Identifier	s		234216	1					
ANR	234846	Argument	F_SETFL		234216	1					
ANR	234847	Identifier	F_SETFL		234216	0					
ANR	234848	Argument	sockflags		234216	2					
ANR	234849	Identifier	sockflags		234216	0					
ANR	234850	IfStatement	if ( sockflags == - 1 )		234216	10					
ANR	234851	Condition	sockflags == - 1	1377:6:41478:41492	234216	0	True				
ANR	234852	EqualityExpression	sockflags == - 1		234216	0		==			
ANR	234853	Identifier	sockflags		234216	0					
ANR	234854	UnaryOperationExpression	- 1		234216	1					
ANR	234855	UnaryOperator	-		234216	0					
ANR	234856	PrimaryExpression	1		234216	1					
ANR	234857	CompoundStatement		130:23:4431:4431	234216	1					
ANR	234858	ExpressionStatement	"errmsg . LogError ( errno , NO_ERRCODE , ""fcntl(O_NONBLOCK)"" )"	1378:3:41500:41555	234216	0	True				
ANR	234859	CallExpression	"errmsg . LogError ( errno , NO_ERRCODE , ""fcntl(O_NONBLOCK)"" )"		234216	0					
ANR	234860	Callee	errmsg . LogError		234216	0					
ANR	234861	MemberAccess	errmsg . LogError		234216	0					
ANR	234862	Identifier	errmsg		234216	0					
ANR	234863	Identifier	LogError		234216	1					
ANR	234864	ArgumentList	errno		234216	1					
ANR	234865	Argument	errno		234216	0					
ANR	234866	Identifier	errno		234216	0					
ANR	234867	Argument	NO_ERRCODE		234216	1					
ANR	234868	Identifier	NO_ERRCODE		234216	0					
ANR	234869	Argument	"""fcntl(O_NONBLOCK)"""		234216	2					
ANR	234870	PrimaryExpression	"""fcntl(O_NONBLOCK)"""		234216	0					
ANR	234871	ExpressionStatement	close ( * s )	1379:24:41581:41590	234216	1	True				
ANR	234872	CallExpression	close ( * s )		234216	0					
ANR	234873	Callee	close		234216	0					
ANR	234874	Identifier	close		234216	0					
ANR	234875	ArgumentList	* s		234216	1					
ANR	234876	Argument	* s		234216	0					
ANR	234877	UnaryOperationExpression	* s		234216	0					
ANR	234878	UnaryOperator	*		234216	0					
ANR	234879	Identifier	s		234216	1					
ANR	234880	ExpressionStatement	* s = - 1	1380:3:41595:41602	234216	2	True				
ANR	234881	AssignmentExpression	* s = - 1		234216	0		=			
ANR	234882	UnaryOperationExpression	* s		234216	0					
ANR	234883	UnaryOperator	*		234216	0					
ANR	234884	Identifier	s		234216	1					
ANR	234885	UnaryOperationExpression	- 1		234216	1					
ANR	234886	UnaryOperator	-		234216	0					
ANR	234887	PrimaryExpression	1		234216	1					
ANR	234888	ContinueStatement	continue ;	1381:3:41607:41615	234216	3	True				
ANR	234889	IfStatement	if ( rcvbuf != 0 )		234216	11					
ANR	234890	Condition	rcvbuf != 0	1384:5:41627:41637	234216	0	True				
ANR	234891	EqualityExpression	rcvbuf != 0		234216	0		!=			
ANR	234892	Identifier	rcvbuf		234216	0					
ANR	234893	PrimaryExpression	0		234216	1					
ANR	234894	CompoundStatement		137:18:4576:4576	234216	1					
ANR	234895	Statement	if	1385:4:41646:41647	234216	0	True				
ANR	234896	Statement	defined	1385:7:41649:41655	234216	1	True				
ANR	234897	Statement	(	1385:14:41656:41656	234216	2	True				
ANR	234898	Statement	SO_RCVBUFFORCE	1385:15:41657:41670	234216	3	True				
ANR	234899	Statement	)	1385:29:41671:41671	234216	4	True				
ANR	234900	IfStatement	"if ( setsockopt ( * s , SOL_SOCKET , SO_RCVBUFFORCE , & rcvbuf , sizeof ( rcvbuf ) ) < 0 )"		234216	5					
ANR	234901	Condition	"setsockopt ( * s , SOL_SOCKET , SO_RCVBUFFORCE , & rcvbuf , sizeof ( rcvbuf ) ) < 0"	1386:6:41679:41749	234216	0	True				
ANR	234902	RelationalExpression	"setsockopt ( * s , SOL_SOCKET , SO_RCVBUFFORCE , & rcvbuf , sizeof ( rcvbuf ) ) < 0"		234216	0		<			
ANR	234903	CallExpression	"setsockopt ( * s , SOL_SOCKET , SO_RCVBUFFORCE , & rcvbuf , sizeof ( rcvbuf ) )"		234216	0					
ANR	234904	Callee	setsockopt		234216	0					
ANR	234905	Identifier	setsockopt		234216	0					
ANR	234906	ArgumentList	* s		234216	1					
ANR	234907	Argument	* s		234216	0					
ANR	234908	UnaryOperationExpression	* s		234216	0					
ANR	234909	UnaryOperator	*		234216	0					
ANR	234910	Identifier	s		234216	1					
ANR	234911	Argument	SOL_SOCKET		234216	1					
ANR	234912	Identifier	SOL_SOCKET		234216	0					
ANR	234913	Argument	SO_RCVBUFFORCE		234216	2					
ANR	234914	Identifier	SO_RCVBUFFORCE		234216	0					
ANR	234915	Argument	& rcvbuf		234216	3					
ANR	234916	UnaryOperationExpression	& rcvbuf		234216	0					
ANR	234917	UnaryOperator	&		234216	0					
ANR	234918	Identifier	rcvbuf		234216	1					
ANR	234919	Argument	sizeof ( rcvbuf )		234216	4					
ANR	234920	SizeofExpression	sizeof ( rcvbuf )		234216	0					
ANR	234921	Sizeof	sizeof		234216	0					
ANR	234922	SizeofOperand	rcvbuf		234216	1					
ANR	234923	PrimaryExpression	0		234216	1					
ANR	234924	Statement	endif	1387:4:41756:41760	234216	1	True				
ANR	234925	CompoundStatement		141:3:4701:4701	234216	6					
ANR	234926	ExpressionStatement	"setsockopt ( * s , SOL_SOCKET , SO_RCVBUF , & rcvbuf , sizeof ( rcvbuf ) )"	1394:4:42044:42106	234216	0	True				
ANR	234927	CallExpression	"setsockopt ( * s , SOL_SOCKET , SO_RCVBUF , & rcvbuf , sizeof ( rcvbuf ) )"		234216	0					
ANR	234928	Callee	setsockopt		234216	0					
ANR	234929	Identifier	setsockopt		234216	0					
ANR	234930	ArgumentList	* s		234216	1					
ANR	234931	Argument	* s		234216	0					
ANR	234932	UnaryOperationExpression	* s		234216	0					
ANR	234933	UnaryOperator	*		234216	0					
ANR	234934	Identifier	s		234216	1					
ANR	234935	Argument	SOL_SOCKET		234216	1					
ANR	234936	Identifier	SOL_SOCKET		234216	0					
ANR	234937	Argument	SO_RCVBUF		234216	2					
ANR	234938	Identifier	SO_RCVBUF		234216	0					
ANR	234939	Argument	& rcvbuf		234216	3					
ANR	234940	UnaryOperationExpression	& rcvbuf		234216	0					
ANR	234941	UnaryOperator	&		234216	0					
ANR	234942	Identifier	rcvbuf		234216	1					
ANR	234943	Argument	sizeof ( rcvbuf )		234216	4					
ANR	234944	SizeofExpression	sizeof ( rcvbuf )		234216	0					
ANR	234945	Sizeof	sizeof		234216	0					
ANR	234946	SizeofOperand	rcvbuf		234216	1					
ANR	234947	IfStatement	if ( Debug || rcvbuf != 0 )		234216	12					
ANR	234948	Condition	Debug || rcvbuf != 0	1398:5:42123:42142	234216	0	True				
ANR	234949	OrExpression	Debug || rcvbuf != 0		234216	0		||			
ANR	234950	Identifier	Debug		234216	0					
ANR	234951	EqualityExpression	rcvbuf != 0		234216	1		!=			
ANR	234952	Identifier	rcvbuf		234216	0					
ANR	234953	PrimaryExpression	0		234216	1					
ANR	234954	CompoundStatement		151:27:5081:5081	234216	1					
ANR	234955	ExpressionStatement	optlen = sizeof ( actrcvbuf )	1399:3:42150:42176	234216	0	True				
ANR	234956	AssignmentExpression	optlen = sizeof ( actrcvbuf )		234216	0		=			
ANR	234957	Identifier	optlen		234216	0					
ANR	234958	SizeofExpression	sizeof ( actrcvbuf )		234216	1					
ANR	234959	Sizeof	sizeof		234216	0					
ANR	234960	SizeofOperand	actrcvbuf		234216	1					
ANR	234961	IfStatement	"if ( getsockopt ( * s , SOL_SOCKET , SO_RCVBUF , & actrcvbuf , & optlen ) == 0 )"		234216	1					
ANR	234962	Condition	"getsockopt ( * s , SOL_SOCKET , SO_RCVBUF , & actrcvbuf , & optlen ) == 0"	1400:6:42184:42246	234216	0	True				
ANR	234963	EqualityExpression	"getsockopt ( * s , SOL_SOCKET , SO_RCVBUF , & actrcvbuf , & optlen ) == 0"		234216	0		==			
ANR	234964	CallExpression	"getsockopt ( * s , SOL_SOCKET , SO_RCVBUF , & actrcvbuf , & optlen )"		234216	0					
ANR	234965	Callee	getsockopt		234216	0					
ANR	234966	Identifier	getsockopt		234216	0					
ANR	234967	ArgumentList	* s		234216	1					
ANR	234968	Argument	* s		234216	0					
ANR	234969	UnaryOperationExpression	* s		234216	0					
ANR	234970	UnaryOperator	*		234216	0					
ANR	234971	Identifier	s		234216	1					
ANR	234972	Argument	SOL_SOCKET		234216	1					
ANR	234973	Identifier	SOL_SOCKET		234216	0					
ANR	234974	Argument	SO_RCVBUF		234216	2					
ANR	234975	Identifier	SO_RCVBUF		234216	0					
ANR	234976	Argument	& actrcvbuf		234216	3					
ANR	234977	UnaryOperationExpression	& actrcvbuf		234216	0					
ANR	234978	UnaryOperator	&		234216	0					
ANR	234979	Identifier	actrcvbuf		234216	1					
ANR	234980	Argument	& optlen		234216	4					
ANR	234981	UnaryOperationExpression	& optlen		234216	0					
ANR	234982	UnaryOperator	&		234216	0					
ANR	234983	Identifier	optlen		234216	1					
ANR	234984	PrimaryExpression	0		234216	1					
ANR	234985	CompoundStatement		153:71:5185:5185	234216	1					
ANR	234986	ExpressionStatement	"dbgprintf ( ""socket %d, actual os socket rcvbuf size %d\\n"" , * s , actrcvbuf )"	1401:4:42255:42327	234216	0	True				
ANR	234987	CallExpression	"dbgprintf ( ""socket %d, actual os socket rcvbuf size %d\\n"" , * s , actrcvbuf )"		234216	0					
ANR	234988	Callee	dbgprintf		234216	0					
ANR	234989	Identifier	dbgprintf		234216	0					
ANR	234990	ArgumentList	"""socket %d, actual os socket rcvbuf size %d\\n"""		234216	1					
ANR	234991	Argument	"""socket %d, actual os socket rcvbuf size %d\\n"""		234216	0					
ANR	234992	PrimaryExpression	"""socket %d, actual os socket rcvbuf size %d\\n"""		234216	0					
ANR	234993	Argument	* s		234216	1					
ANR	234994	UnaryOperationExpression	* s		234216	0					
ANR	234995	UnaryOperator	*		234216	0					
ANR	234996	Identifier	s		234216	1					
ANR	234997	Argument	actrcvbuf		234216	2					
ANR	234998	Identifier	actrcvbuf		234216	0					
ANR	234999	IfStatement	if ( rcvbuf != 0 && actrcvbuf / 2 != rcvbuf )		234216	1					
ANR	235000	Condition	rcvbuf != 0 && actrcvbuf / 2 != rcvbuf	1402:7:42336:42371	234216	0	True				
ANR	235001	AndExpression	rcvbuf != 0 && actrcvbuf / 2 != rcvbuf		234216	0		&&			
ANR	235002	EqualityExpression	rcvbuf != 0		234216	0		!=			
ANR	235003	Identifier	rcvbuf		234216	0					
ANR	235004	PrimaryExpression	0		234216	1					
ANR	235005	EqualityExpression	actrcvbuf / 2 != rcvbuf		234216	1		!=			
ANR	235006	MultiplicativeExpression	actrcvbuf / 2		234216	0		/			
ANR	235007	Identifier	actrcvbuf		234216	0					
ANR	235008	PrimaryExpression	2		234216	1					
ANR	235009	Identifier	rcvbuf		234216	1					
ANR	235010	CompoundStatement		155:45:5310:5310	234216	1					
ANR	235011	ExpressionStatement	"errmsg . LogError ( errno , NO_ERRCODE , ""cannot set os socket rcvbuf size %d for socket %d, value now is %d"" , rcvbuf , * s , actrcvbuf / 2 )"	1403:5:42381:42522	234216	0	True				
ANR	235012	CallExpression	"errmsg . LogError ( errno , NO_ERRCODE , ""cannot set os socket rcvbuf size %d for socket %d, value now is %d"" , rcvbuf , * s , actrcvbuf / 2 )"		234216	0					
ANR	235013	Callee	errmsg . LogError		234216	0					
ANR	235014	MemberAccess	errmsg . LogError		234216	0					
ANR	235015	Identifier	errmsg		234216	0					
ANR	235016	Identifier	LogError		234216	1					
ANR	235017	ArgumentList	errno		234216	1					
ANR	235018	Argument	errno		234216	0					
ANR	235019	Identifier	errno		234216	0					
ANR	235020	Argument	NO_ERRCODE		234216	1					
ANR	235021	Identifier	NO_ERRCODE		234216	0					
ANR	235022	Argument	"""cannot set os socket rcvbuf size %d for socket %d, value now is %d"""		234216	2					
ANR	235023	PrimaryExpression	"""cannot set os socket rcvbuf size %d for socket %d, value now is %d"""		234216	0					
ANR	235024	Argument	rcvbuf		234216	3					
ANR	235025	Identifier	rcvbuf		234216	0					
ANR	235026	Argument	* s		234216	4					
ANR	235027	UnaryOperationExpression	* s		234216	0					
ANR	235028	UnaryOperator	*		234216	0					
ANR	235029	Identifier	s		234216	1					
ANR	235030	Argument	actrcvbuf / 2		234216	5					
ANR	235031	MultiplicativeExpression	actrcvbuf / 2		234216	0		/			
ANR	235032	Identifier	actrcvbuf		234216	0					
ANR	235033	PrimaryExpression	2		234216	1					
ANR	235034	ElseStatement	else		234216	0					
ANR	235035	CompoundStatement		160:10:5476:5476	234216	0					
ANR	235036	ExpressionStatement	"dbgprintf ( ""could not obtain os socket rcvbuf size for socket %d: %s\\n"" , * s , rs_strerror_r ( errno , errStr , sizeof ( errStr ) ) )"	1408:4:42546:42672	234216	0	True				
ANR	235037	CallExpression	"dbgprintf ( ""could not obtain os socket rcvbuf size for socket %d: %s\\n"" , * s , rs_strerror_r ( errno , errStr , sizeof ( errStr ) ) )"		234216	0					
ANR	235038	Callee	dbgprintf		234216	0					
ANR	235039	Identifier	dbgprintf		234216	0					
ANR	235040	ArgumentList	"""could not obtain os socket rcvbuf size for socket %d: %s\\n"""		234216	1					
ANR	235041	Argument	"""could not obtain os socket rcvbuf size for socket %d: %s\\n"""		234216	0					
ANR	235042	PrimaryExpression	"""could not obtain os socket rcvbuf size for socket %d: %s\\n"""		234216	0					
ANR	235043	Argument	* s		234216	1					
ANR	235044	UnaryOperationExpression	* s		234216	0					
ANR	235045	UnaryOperator	*		234216	0					
ANR	235046	Identifier	s		234216	1					
ANR	235047	Argument	"rs_strerror_r ( errno , errStr , sizeof ( errStr ) )"		234216	2					
ANR	235048	CallExpression	"rs_strerror_r ( errno , errStr , sizeof ( errStr ) )"		234216	0					
ANR	235049	Callee	rs_strerror_r		234216	0					
ANR	235050	Identifier	rs_strerror_r		234216	0					
ANR	235051	ArgumentList	errno		234216	1					
ANR	235052	Argument	errno		234216	0					
ANR	235053	Identifier	errno		234216	0					
ANR	235054	Argument	errStr		234216	1					
ANR	235055	Identifier	errStr		234216	0					
ANR	235056	Argument	sizeof ( errStr )		234216	2					
ANR	235057	SizeofExpression	sizeof ( errStr )		234216	0					
ANR	235058	Sizeof	sizeof		234216	0					
ANR	235059	SizeofOperand	errStr		234216	1					
ANR	235060	IfStatement	if ( bIsServer )		234216	13					
ANR	235061	Condition	bIsServer	1413:5:42689:42697	234216	0	True				
ANR	235062	Identifier	bIsServer		234216	0					
ANR	235063	CompoundStatement		166:16:5636:5636	234216	1					
ANR	235064	Statement	if	1422:3:43103:43104	234216	0	True				
ANR	235065	Statement	(	1422:5:43105:43105	234216	1	True				
ANR	235066	Statement	(	1422:11:43111:43111	234216	2	True				
ANR	235067	Statement	bind	1422:12:43112:43115	234216	3	True				
ANR	235068	Statement	(	1422:16:43116:43116	234216	4	True				
ANR	235069	Statement	*	1422:17:43117:43117	234216	5	True				
ANR	235070	Statement	s	1422:18:43118:43118	234216	6	True				
ANR	235071	Statement	","	1422:19:43119:43119	234216	7	True				
ANR	235072	Statement	r	1422:21:43121:43121	234216	8	True				
ANR	235073	Statement	->	1422:22:43122:43123	234216	9	True				
ANR	235074	Statement	ai_addr	1422:24:43124:43130	234216	10	True				
ANR	235075	Statement	","	1422:31:43131:43131	234216	11	True				
ANR	235076	Statement	r	1422:33:43133:43133	234216	12	True				
ANR	235077	Statement	->	1422:34:43134:43135	234216	13	True				
ANR	235078	Statement	ai_addrlen	1422:36:43136:43145	234216	14	True				
ANR	235079	Statement	)	1422:46:43146:43146	234216	15	True				
ANR	235080	Statement	<	1422:48:43148:43148	234216	16	True				
ANR	235081	Statement	0	1422:50:43150:43150	234216	17	True				
ANR	235082	Statement	)	1422:51:43151:43151	234216	18	True				
ANR	235083	Statement	ifndef	1423:4:43157:43162	234216	19	True				
ANR	235084	Statement	IPV6_V6ONLY	1423:11:43164:43174	234216	20	True				
ANR	235085	Statement	&&	1424:8:43184:43185	234216	21	True				
ANR	235086	Statement	(	1424:11:43187:43187	234216	22	True				
ANR	235087	Statement	errno	1424:12:43188:43192	234216	23	True				
ANR	235088	Statement	!=	1424:18:43194:43195	234216	24	True				
ANR	235089	Statement	EADDRINUSE	1424:21:43197:43206	234216	25	True				
ANR	235090	Statement	)	1424:31:43207:43207	234216	26	True				
ANR	235091	Statement	endif	1425:4:43213:43217	234216	27	True				
ANR	235092	Statement	)	1426:6:43225:43225	234216	28	True				
ANR	235093	CompoundStatement		179:8:6163:6163	234216	29					
ANR	235094	IfStatement	if ( errno == EADDRNOTAVAIL && ipfreebind != IPFREEBIND_DISABLED )		234216	0					
ANR	235095	Condition	errno == EADDRNOTAVAIL && ipfreebind != IPFREEBIND_DISABLED	1427:8:43237:43295	234216	0	True				
ANR	235096	AndExpression	errno == EADDRNOTAVAIL && ipfreebind != IPFREEBIND_DISABLED		234216	0		&&			
ANR	235097	EqualityExpression	errno == EADDRNOTAVAIL		234216	0		==			
ANR	235098	Identifier	errno		234216	0					
ANR	235099	Identifier	EADDRNOTAVAIL		234216	1					
ANR	235100	EqualityExpression	ipfreebind != IPFREEBIND_DISABLED		234216	1		!=			
ANR	235101	Identifier	ipfreebind		234216	0					
ANR	235102	Identifier	IPFREEBIND_DISABLED		234216	1					
ANR	235103	CompoundStatement		180:69:6234:6234	234216	1					
ANR	235104	IfStatement	"if ( setsockopt ( * s , IPPROTO_IP , IP_FREEBIND , & on , sizeof ( on ) ) < 0 )"		234216	0					
ANR	235105	Condition	"setsockopt ( * s , IPPROTO_IP , IP_FREEBIND , & on , sizeof ( on ) ) < 0"	1428:9:43309:43368	234216	0	True				
ANR	235106	RelationalExpression	"setsockopt ( * s , IPPROTO_IP , IP_FREEBIND , & on , sizeof ( on ) ) < 0"		234216	0		<			
ANR	235107	CallExpression	"setsockopt ( * s , IPPROTO_IP , IP_FREEBIND , & on , sizeof ( on ) )"		234216	0					
ANR	235108	Callee	setsockopt		234216	0					
ANR	235109	Identifier	setsockopt		234216	0					
ANR	235110	ArgumentList	* s		234216	1					
ANR	235111	Argument	* s		234216	0					
ANR	235112	UnaryOperationExpression	* s		234216	0					
ANR	235113	UnaryOperator	*		234216	0					
ANR	235114	Identifier	s		234216	1					
ANR	235115	Argument	IPPROTO_IP		234216	1					
ANR	235116	Identifier	IPPROTO_IP		234216	0					
ANR	235117	Argument	IP_FREEBIND		234216	2					
ANR	235118	Identifier	IP_FREEBIND		234216	0					
ANR	235119	Argument	& on		234216	3					
ANR	235120	UnaryOperationExpression	& on		234216	0					
ANR	235121	UnaryOperator	&		234216	0					
ANR	235122	Identifier	on		234216	1					
ANR	235123	Argument	sizeof ( on )		234216	4					
ANR	235124	SizeofExpression	sizeof ( on )		234216	0					
ANR	235125	Sizeof	sizeof		234216	0					
ANR	235126	SizeofOperand	on		234216	1					
ANR	235127	PrimaryExpression	0		234216	1					
ANR	235128	CompoundStatement		181:71:6307:6307	234216	1					
ANR	235129	ExpressionStatement	"errmsg . LogError ( errno , NO_ERRCODE , ""setsockopt(IP_FREEBIND)"" )"	1429:6:43379:43440	234216	0	True				
ANR	235130	CallExpression	"errmsg . LogError ( errno , NO_ERRCODE , ""setsockopt(IP_FREEBIND)"" )"		234216	0					
ANR	235131	Callee	errmsg . LogError		234216	0					
ANR	235132	MemberAccess	errmsg . LogError		234216	0					
ANR	235133	Identifier	errmsg		234216	0					
ANR	235134	Identifier	LogError		234216	1					
ANR	235135	ArgumentList	errno		234216	1					
ANR	235136	Argument	errno		234216	0					
ANR	235137	Identifier	errno		234216	0					
ANR	235138	Argument	NO_ERRCODE		234216	1					
ANR	235139	Identifier	NO_ERRCODE		234216	0					
ANR	235140	Argument	"""setsockopt(IP_FREEBIND)"""		234216	2					
ANR	235141	PrimaryExpression	"""setsockopt(IP_FREEBIND)"""		234216	0					
ANR	235142	ElseStatement	else		234216	0					
ANR	235143	IfStatement	"if ( bind ( * s , r -> ai_addr , r -> ai_addrlen ) < 0 )"		234216	0					
ANR	235144	Condition	"bind ( * s , r -> ai_addr , r -> ai_addrlen ) < 0"	1431:14:43463:43501	234216	0	True				
ANR	235145	RelationalExpression	"bind ( * s , r -> ai_addr , r -> ai_addrlen ) < 0"		234216	0		<			
ANR	235146	CallExpression	"bind ( * s , r -> ai_addr , r -> ai_addrlen )"		234216	0					
ANR	235147	Callee	bind		234216	0					
ANR	235148	Identifier	bind		234216	0					
ANR	235149	ArgumentList	* s		234216	1					
ANR	235150	Argument	* s		234216	0					
ANR	235151	UnaryOperationExpression	* s		234216	0					
ANR	235152	UnaryOperator	*		234216	0					
ANR	235153	Identifier	s		234216	1					
ANR	235154	Argument	r -> ai_addr		234216	1					
ANR	235155	PtrMemberAccess	r -> ai_addr		234216	0					
ANR	235156	Identifier	r		234216	0					
ANR	235157	Identifier	ai_addr		234216	1					
ANR	235158	Argument	r -> ai_addrlen		234216	2					
ANR	235159	PtrMemberAccess	r -> ai_addrlen		234216	0					
ANR	235160	Identifier	r		234216	0					
ANR	235161	Identifier	ai_addrlen		234216	1					
ANR	235162	PrimaryExpression	0		234216	1					
ANR	235163	CompoundStatement		184:55:6440:6440	234216	1					
ANR	235164	ExpressionStatement	"errmsg . LogError ( errno , NO_ERRCODE , ""bind with IP_FREEBIND"" )"	1432:6:43512:43571	234216	0	True				
ANR	235165	CallExpression	"errmsg . LogError ( errno , NO_ERRCODE , ""bind with IP_FREEBIND"" )"		234216	0					
ANR	235166	Callee	errmsg . LogError		234216	0					
ANR	235167	MemberAccess	errmsg . LogError		234216	0					
ANR	235168	Identifier	errmsg		234216	0					
ANR	235169	Identifier	LogError		234216	1					
ANR	235170	ArgumentList	errno		234216	1					
ANR	235171	Argument	errno		234216	0					
ANR	235172	Identifier	errno		234216	0					
ANR	235173	Argument	NO_ERRCODE		234216	1					
ANR	235174	Identifier	NO_ERRCODE		234216	0					
ANR	235175	Argument	"""bind with IP_FREEBIND"""		234216	2					
ANR	235176	PrimaryExpression	"""bind with IP_FREEBIND"""		234216	0					
ANR	235177	ElseStatement	else		234216	0					
ANR	235178	CompoundStatement		186:12:6521:6521	234216	0					
ANR	235179	IfStatement	if ( ipfreebind >= IPFREEBIND_ENABLED_WITH_LOG )		234216	0					
ANR	235180	Condition	ipfreebind >= IPFREEBIND_ENABLED_WITH_LOG	1434:10:43597:43637	234216	0	True				
ANR	235181	RelationalExpression	ipfreebind >= IPFREEBIND_ENABLED_WITH_LOG		234216	0		>=			
ANR	235182	Identifier	ipfreebind		234216	0					
ANR	235183	Identifier	IPFREEBIND_ENABLED_WITH_LOG		234216	1					
ANR	235184	ExpressionStatement	"errmsg . LogMsg ( 0 , RS_RET_OK_WARN , LOG_WARNING , ""bound address %s IP free"" , hostname )"	1435:7:43647:43730	234216	1	True				
ANR	235185	CallExpression	"errmsg . LogMsg ( 0 , RS_RET_OK_WARN , LOG_WARNING , ""bound address %s IP free"" , hostname )"		234216	0					
ANR	235186	Callee	errmsg . LogMsg		234216	0					
ANR	235187	MemberAccess	errmsg . LogMsg		234216	0					
ANR	235188	Identifier	errmsg		234216	0					
ANR	235189	Identifier	LogMsg		234216	1					
ANR	235190	ArgumentList	0		234216	1					
ANR	235191	Argument	0		234216	0					
ANR	235192	PrimaryExpression	0		234216	0					
ANR	235193	Argument	RS_RET_OK_WARN		234216	1					
ANR	235194	Identifier	RS_RET_OK_WARN		234216	0					
ANR	235195	Argument	LOG_WARNING		234216	2					
ANR	235196	Identifier	LOG_WARNING		234216	0					
ANR	235197	Argument	"""bound address %s IP free"""		234216	3					
ANR	235198	PrimaryExpression	"""bound address %s IP free"""		234216	0					
ANR	235199	Argument	hostname		234216	4					
ANR	235200	Identifier	hostname		234216	0					
ANR	235201	ContinueStatement	continue ;	1436:6:43738:43746	234216	1	True				
ANR	235202	ExpressionStatement	close ( * s )	1439:4:43765:43774	234216	1	True				
ANR	235203	CallExpression	close ( * s )		234216	0					
ANR	235204	Callee	close		234216	0					
ANR	235205	Identifier	close		234216	0					
ANR	235206	ArgumentList	* s		234216	1					
ANR	235207	Argument	* s		234216	0					
ANR	235208	UnaryOperationExpression	* s		234216	0					
ANR	235209	UnaryOperator	*		234216	0					
ANR	235210	Identifier	s		234216	1					
ANR	235211	ExpressionStatement	* s = - 1	1440:4:43780:43787	234216	2	True				
ANR	235212	AssignmentExpression	* s = - 1		234216	0		=			
ANR	235213	UnaryOperationExpression	* s		234216	0					
ANR	235214	UnaryOperator	*		234216	0					
ANR	235215	Identifier	s		234216	1					
ANR	235216	UnaryOperationExpression	- 1		234216	1					
ANR	235217	UnaryOperator	-		234216	0					
ANR	235218	PrimaryExpression	1		234216	1					
ANR	235219	ContinueStatement	continue ;	1441:4:43793:43801	234216	3	True				
ANR	235220	ExpressionStatement	( * socks ) ++	1445:16:43829:43839	234216	14	True				
ANR	235221	PostIncDecOperationExpression	( * socks ) ++		234216	0					
ANR	235222	UnaryOperationExpression	* socks		234216	0					
ANR	235223	UnaryOperator	*		234216	0					
ANR	235224	Identifier	socks		234216	1					
ANR	235225	IncDec	++		234216	1					
ANR	235226	ExpressionStatement	s ++	1446:16:43857:43860	234216	15	True				
ANR	235227	PostIncDecOperationExpression	s ++		234216	0					
ANR	235228	Identifier	s		234216	0					
ANR	235229	IncDec	++		234216	1					
ANR	235230	IfStatement	if ( res != NULL )		234216	20					
ANR	235231	Condition	res != NULL	1449:11:43877:43887	234216	0	True				
ANR	235232	EqualityExpression	res != NULL		234216	0		!=			
ANR	235233	Identifier	res		234216	0					
ANR	235234	Identifier	NULL		234216	1					
ANR	235235	ExpressionStatement	freeaddrinfo ( res )	1450:15:43905:43922	234216	1	True				
ANR	235236	CallExpression	freeaddrinfo ( res )		234216	0					
ANR	235237	Callee	freeaddrinfo		234216	0					
ANR	235238	Identifier	freeaddrinfo		234216	0					
ANR	235239	ArgumentList	res		234216	1					
ANR	235240	Argument	res		234216	0					
ANR	235241	Identifier	res		234216	0					
ANR	235242	IfStatement	if ( Debug && * socks != maxs )		234216	21					
ANR	235243	Condition	Debug && * socks != maxs	1452:4:43929:43951	234216	0	True				
ANR	235244	AndExpression	Debug && * socks != maxs		234216	0		&&			
ANR	235245	Identifier	Debug		234216	0					
ANR	235246	EqualityExpression	* socks != maxs		234216	1		!=			
ANR	235247	UnaryOperationExpression	* socks		234216	0					
ANR	235248	UnaryOperator	*		234216	0					
ANR	235249	Identifier	socks		234216	1					
ANR	235250	Identifier	maxs		234216	1					
ANR	235251	Statement	dbgprintf	1453:2:43956:43964	234216	1	True				
ANR	235252	Statement	(	1453:11:43965:43965	234216	22	True				
ANR	235253	Statement	"""We could initialize %d UDP listen sockets out of %d we received """	1453:12:43966:44031	234216	23	True				
ANR	235254	Statement	"""- this may or may not be an error indication.\\n"""	1454:4:44037:44085	234216	24	True				
ANR	235255	Statement	","	1454:53:44086:44086	234216	25	True				
ANR	235256	Statement	*	1454:55:44088:44088	234216	26	True				
ANR	235257	Statement	socks	1454:56:44089:44093	234216	27	True				
ANR	235258	Statement	","	1454:61:44094:44094	234216	28	True				
ANR	235259	Statement	maxs	1454:63:44096:44099	234216	29	True				
ANR	235260	Statement	)	1454:67:44100:44100	234216	30	True				
ANR	235261	ExpressionStatement		1454:68:44101:44101	234216	31	True				
ANR	235262	IfStatement	if ( * socks == 0 )		234216	32					
ANR	235263	Condition	* socks == 0	1456:11:44115:44125	234216	0	True				
ANR	235264	EqualityExpression	* socks == 0		234216	0		==			
ANR	235265	UnaryOperationExpression	* socks		234216	0					
ANR	235266	UnaryOperator	*		234216	0					
ANR	235267	Identifier	socks		234216	1					
ANR	235268	PrimaryExpression	0		234216	1					
ANR	235269	CompoundStatement		209:24:7064:7064	234216	1					
ANR	235270	Statement	errmsg	1457:2:44132:44137	234216	0	True				
ANR	235271	Statement	.	1457:8:44138:44138	234216	1	True				
ANR	235272	Statement	LogError	1457:9:44139:44146	234216	2	True				
ANR	235273	Statement	(	1457:17:44147:44147	234216	3	True				
ANR	235274	Statement	0	1457:18:44148:44148	234216	4	True				
ANR	235275	Statement	","	1457:19:44149:44149	234216	5	True				
ANR	235276	Statement	NO_ERRCODE	1457:21:44151:44160	234216	6	True				
ANR	235277	Statement	","	1457:31:44161:44161	234216	7	True				
ANR	235278	Statement	"""No UDP listen socket could successfully be initialized, """	1457:33:44163:44220	234216	8	True				
ANR	235279	Statement	"""message reception via UDP disabled.\\n"""	1458:4:44226:44264	234216	9	True				
ANR	235280	Statement	)	1458:43:44265:44265	234216	10	True				
ANR	235281	ExpressionStatement		1458:44:44266:44266	234216	11	True				
ANR	235282	ExpressionStatement	free ( socks )	1460:9:44348:44359	234216	12	True				
ANR	235283	CallExpression	free ( socks )		234216	0					
ANR	235284	Callee	free		234216	0					
ANR	235285	Identifier	free		234216	0					
ANR	235286	ArgumentList	socks		234216	1					
ANR	235287	Argument	socks		234216	0					
ANR	235288	Identifier	socks		234216	0					
ANR	235289	ReturnStatement	return ( NULL ) ;	1461:2:44363:44375	234216	13	True				
ANR	235290	Identifier	NULL		234216	0					
ANR	235291	ReturnStatement	return ( socks ) ;	1464:1:44382:44395	234216	33	True				
ANR	235292	Identifier	socks		234216	0					
ANR	235293	ReturnType	static int *		234216	1					
ANR	235294	Identifier	create_udp_socket		234216	2					
ANR	235295	ParameterList	"uchar * hostname , uchar * pszPort , int bIsServer , int rcvbuf , int ipfreebind , char * device"		234216	3					
ANR	235296	Parameter	uchar * hostname	1247:18:36973:36987	234216	0	True				
ANR	235297	ParameterType	uchar *		234216	0					
ANR	235298	Identifier	hostname		234216	1					
ANR	235299	Parameter	uchar * pszPort	1247:35:36990:37003	234216	1	True				
ANR	235300	ParameterType	uchar *		234216	0					
ANR	235301	Identifier	pszPort		234216	1					
ANR	235302	Parameter	int bIsServer	1247:51:37006:37018	234216	2	True				
ANR	235303	ParameterType	int		234216	0					
ANR	235304	Identifier	bIsServer		234216	1					
ANR	235305	Parameter	int rcvbuf	1247:66:37021:37030	234216	3	True				
ANR	235306	ParameterType	int		234216	0					
ANR	235307	Identifier	rcvbuf		234216	1					
ANR	235308	Parameter	int ipfreebind	1247:78:37033:37046	234216	4	True				
ANR	235309	ParameterType	int		234216	0					
ANR	235310	Identifier	ipfreebind		234216	1					
ANR	235311	Parameter	char * device	1247:94:37049:37060	234216	5	True				
ANR	235312	ParameterType	char *		234216	0					
ANR	235313	Identifier	device		234216	1					
ANR	235314	CFGEntryNode	ENTRY		234216		True				
ANR	235315	CFGExitNode	EXIT		234216		True				
ANR	235316	Symbol	& res		234216						
ANR	235317	Symbol	r -> ai_next		234216						
ANR	235318	Symbol	r -> ai_addr		234216						
ANR	235319	Symbol	actrcvbuf		234216						
ANR	235320	Symbol	& on		234216						
ANR	235321	Symbol	ion		234216						
ANR	235322	Symbol	hints . ai_flags		234216						
ANR	235323	Symbol	gai_strerror		234216						
ANR	235324	Symbol	LOG_WARNING		234216						
ANR	235325	Symbol	sockflags		234216						
ANR	235326	Symbol	F_SETFL		234216						
ANR	235327	Symbol	PF_INET6		234216						
ANR	235328	Symbol	strlen		234216						
ANR	235329	Symbol	r -> ai_addrlen		234216						
ANR	235330	Symbol	hostname		234216						
ANR	235331	Symbol	bind		234216						
ANR	235332	Symbol	SO_RCVBUFFORCE		234216						
ANR	235333	Symbol	NO_ERRCODE		234216						
ANR	235334	Symbol	IPFREEBIND_DISABLED		234216						
ANR	235335	Symbol	RS_RET_OK_WARN		234216						
ANR	235336	Symbol	res		234216						
ANR	235337	Symbol	IPPROTO_IP		234216						
ANR	235338	Symbol	errno		234216						
ANR	235339	Symbol	NULL		234216						
ANR	235340	Symbol	hints		234216						
ANR	235341	Symbol	socks		234216						
ANR	235342	Symbol	getaddrinfo		234216						
ANR	235343	Symbol	errmsg		234216						
ANR	235344	Symbol	& ion		234216						
ANR	235345	Symbol	SO_REUSEADDR		234216						
ANR	235346	Symbol	pszPort		234216						
ANR	235347	Symbol	SOCK_DGRAM		234216						
ANR	235348	Symbol	& actrcvbuf		234216						
ANR	235349	Symbol	hints . ai_socktype		234216						
ANR	235350	Symbol	bIsServer		234216						
ANR	235351	Symbol	ipfreebind		234216						
ANR	235352	Symbol	IPPROTO_IPV6		234216						
ANR	235353	Symbol	IPFREEBIND_ENABLED_WITH_LOG		234216						
ANR	235354	Symbol	maxs		234216						
ANR	235355	Symbol	device		234216						
ANR	235356	Symbol	SO_BSDCOMPAT		234216						
ANR	235357	Symbol	AI_PASSIVE		234216						
ANR	235358	Symbol	& optlen		234216						
ANR	235359	Symbol	fcntl		234216						
ANR	235360	Symbol	O_NONBLOCK		234216						
ANR	235361	Symbol	optlen		234216						
ANR	235362	Symbol	getsockopt		234216						
ANR	235363	Symbol	r -> ai_protocol		234216						
ANR	235364	Symbol	rs_strerror_r		234216						
ANR	235365	Symbol	IP_FREEBIND		234216						
ANR	235366	Symbol	error		234216						
ANR	235367	Symbol	setsockopt		234216						
ANR	235368	Symbol	& rcvbuf		234216						
ANR	235369	Symbol	hints . ai_family		234216						
ANR	235370	Symbol	* socks		234216						
ANR	235371	Symbol	SO_RCVBUF		234216						
ANR	235372	Symbol	errStr		234216						
ANR	235373	Symbol	glbl . GetDefPFFamily		234216						
ANR	235374	Symbol	F_GETFL		234216						
ANR	235375	Symbol	r -> ai_family		234216						
ANR	235376	Symbol	rcvbuf		234216						
ANR	235377	Symbol	Debug		234216						
ANR	235378	Symbol	on		234216						
ANR	235379	Symbol	glbl		234216						
ANR	235380	Symbol	& hints		234216						
ANR	235381	Symbol	EADDRNOTAVAIL		234216						
ANR	235382	Symbol	SO_BINDTODEVICE		234216						
ANR	235383	Symbol	hints . ai_protocol		234216						
ANR	235384	Symbol	AF_INET6		234216						
ANR	235385	Symbol	SOL_SOCKET		234216						
ANR	235386	Symbol	should_use_so_bsdcompat		234216						
ANR	235387	Symbol	IPV6_V6ONLY		234216						
ANR	235388	Symbol	r		234216						
ANR	235389	Symbol	s		234216						
ANR	235390	Symbol	AI_NUMERICSERV		234216						
ANR	235391	Symbol	MALLOC		234216						
ANR	235392	Symbol	IPPROTO_UDP		234216						
ANR	235393	Symbol	EAFNOSUPPORT		234216						
ANR	235394	Symbol	socket		234216						
ANR	235395	Symbol	* r		234216						
ANR	235396	Symbol	* s		234216						
ANR	235397	Function	CmpHost	1481:0:45358:46208							
ANR	235398	FunctionDef	"CmpHost (struct sockaddr_storage * s1 , struct sockaddr_storage * s2 , size_t socklen)"		235397	0					
ANR	235399	CompoundStatement		1482:0:45451:46208	235397	0					
ANR	235400	IdentifierDeclStatement	int ret ;	1483:1:45454:45461	235397	0	True				
ANR	235401	IdentifierDecl	ret		235397	0					
ANR	235402	IdentifierDeclType	int		235397	0					
ANR	235403	Identifier	ret		235397	1					
ANR	235404	IfStatement	if ( ( ( struct sockaddr * ) s1 ) -> sa_family != ( ( struct sockaddr * ) s2 ) -> sa_family )		235397	1					
ANR	235405	Condition	( ( struct sockaddr * ) s1 ) -> sa_family != ( ( struct sockaddr * ) s2 ) -> sa_family	1485:4:45468:45539	235397	0	True				
ANR	235406	EqualityExpression	( ( struct sockaddr * ) s1 ) -> sa_family != ( ( struct sockaddr * ) s2 ) -> sa_family		235397	0		!=			
ANR	235407	PtrMemberAccess	( ( struct sockaddr * ) s1 ) -> sa_family		235397	0					
ANR	235408	CastExpression	( struct sockaddr * ) s1		235397	0					
ANR	235409	CastTarget	struct sockaddr *		235397	0					
ANR	235410	Identifier	s1		235397	1					
ANR	235411	Identifier	sa_family		235397	1					
ANR	235412	PtrMemberAccess	( ( struct sockaddr * ) s2 ) -> sa_family		235397	1					
ANR	235413	CastExpression	( struct sockaddr * ) s2		235397	0					
ANR	235414	CastTarget	struct sockaddr *		235397	0					
ANR	235415	Identifier	s2		235397	1					
ANR	235416	Identifier	sa_family		235397	1					
ANR	235417	CompoundStatement		4:78:90:90	235397	1					
ANR	235418	ExpressionStatement	"ret = memcmp ( s1 , s2 , socklen )"	1486:2:45546:45575	235397	0	True				
ANR	235419	AssignmentExpression	"ret = memcmp ( s1 , s2 , socklen )"		235397	0		=			
ANR	235420	Identifier	ret		235397	0					
ANR	235421	CallExpression	"memcmp ( s1 , s2 , socklen )"		235397	1					
ANR	235422	Callee	memcmp		235397	0					
ANR	235423	Identifier	memcmp		235397	0					
ANR	235424	ArgumentList	s1		235397	1					
ANR	235425	Argument	s1		235397	0					
ANR	235426	Identifier	s1		235397	0					
ANR	235427	Argument	s2		235397	1					
ANR	235428	Identifier	s2		235397	0					
ANR	235429	Argument	socklen		235397	2					
ANR	235430	Identifier	socklen		235397	0					
ANR	235431	GotoStatement	goto finalize_it ;	1487:2:45579:45595	235397	1	True				
ANR	235432	Identifier	finalize_it		235397	0					
ANR	235433	IfStatement	if ( ( ( struct sockaddr * ) s1 ) -> sa_family == AF_INET )		235397	2					
ANR	235434	Condition	( ( struct sockaddr * ) s1 ) -> sa_family == AF_INET	1490:4:45605:45649	235397	0	True				
ANR	235435	EqualityExpression	( ( struct sockaddr * ) s1 ) -> sa_family == AF_INET		235397	0		==			
ANR	235436	PtrMemberAccess	( ( struct sockaddr * ) s1 ) -> sa_family		235397	0					
ANR	235437	CastExpression	( struct sockaddr * ) s1		235397	0					
ANR	235438	CastTarget	struct sockaddr *		235397	0					
ANR	235439	Identifier	s1		235397	1					
ANR	235440	Identifier	sa_family		235397	1					
ANR	235441	Identifier	AF_INET		235397	1					
ANR	235442	CompoundStatement		9:51:200:200	235397	1					
ANR	235443	IfStatement	if ( ( ( struct sockaddr_in * ) s1 ) -> sin_addr . s_addr == ( ( struct sockaddr_in * ) s2 ) -> sin_addr . s_addr )		235397	0					
ANR	235444	Condition	( ( struct sockaddr_in * ) s1 ) -> sin_addr . s_addr == ( ( struct sockaddr_in * ) s2 ) -> sin_addr . s_addr	1491:5:45659:45748	235397	0	True				
ANR	235445	EqualityExpression	( ( struct sockaddr_in * ) s1 ) -> sin_addr . s_addr == ( ( struct sockaddr_in * ) s2 ) -> sin_addr . s_addr		235397	0		==			
ANR	235446	MemberAccess	( ( struct sockaddr_in * ) s1 ) -> sin_addr . s_addr		235397	0					
ANR	235447	PtrMemberAccess	( ( struct sockaddr_in * ) s1 ) -> sin_addr		235397	0					
ANR	235448	CastExpression	( struct sockaddr_in * ) s1		235397	0					
ANR	235449	CastTarget	struct sockaddr_in *		235397	0					
ANR	235450	Identifier	s1		235397	1					
ANR	235451	Identifier	sin_addr		235397	1					
ANR	235452	Identifier	s_addr		235397	1					
ANR	235453	MemberAccess	( ( struct sockaddr_in * ) s2 ) -> sin_addr . s_addr		235397	1					
ANR	235454	PtrMemberAccess	( ( struct sockaddr_in * ) s2 ) -> sin_addr		235397	0					
ANR	235455	CastExpression	( struct sockaddr_in * ) s2		235397	0					
ANR	235456	CastTarget	struct sockaddr_in *		235397	0					
ANR	235457	Identifier	s2		235397	1					
ANR	235458	Identifier	sin_addr		235397	1					
ANR	235459	Identifier	s_addr		235397	1					
ANR	235460	CompoundStatement		10:97:299:299	235397	1					
ANR	235461	ExpressionStatement	ret = 0	1492:3:45756:45763	235397	0	True				
ANR	235462	AssignmentExpression	ret = 0		235397	0		=			
ANR	235463	Identifier	ret		235397	0					
ANR	235464	PrimaryExpression	0		235397	1					
ANR	235465	ElseStatement	else		235397	0					
ANR	235466	IfStatement	if ( ( ( struct sockaddr_in * ) s1 ) -> sin_addr . s_addr < ( ( struct sockaddr_in * ) s2 ) -> sin_addr . s_addr )		235397	0					
ANR	235467	Condition	( ( struct sockaddr_in * ) s1 ) -> sin_addr . s_addr < ( ( struct sockaddr_in * ) s2 ) -> sin_addr . s_addr	1493:12:45777:45865	235397	0	True				
ANR	235468	RelationalExpression	( ( struct sockaddr_in * ) s1 ) -> sin_addr . s_addr < ( ( struct sockaddr_in * ) s2 ) -> sin_addr . s_addr		235397	0		<			
ANR	235469	MemberAccess	( ( struct sockaddr_in * ) s1 ) -> sin_addr . s_addr		235397	0					
ANR	235470	PtrMemberAccess	( ( struct sockaddr_in * ) s1 ) -> sin_addr		235397	0					
ANR	235471	CastExpression	( struct sockaddr_in * ) s1		235397	0					
ANR	235472	CastTarget	struct sockaddr_in *		235397	0					
ANR	235473	Identifier	s1		235397	1					
ANR	235474	Identifier	sin_addr		235397	1					
ANR	235475	Identifier	s_addr		235397	1					
ANR	235476	MemberAccess	( ( struct sockaddr_in * ) s2 ) -> sin_addr . s_addr		235397	1					
ANR	235477	PtrMemberAccess	( ( struct sockaddr_in * ) s2 ) -> sin_addr		235397	0					
ANR	235478	CastExpression	( struct sockaddr_in * ) s2		235397	0					
ANR	235479	CastTarget	struct sockaddr_in *		235397	0					
ANR	235480	Identifier	s2		235397	1					
ANR	235481	Identifier	sin_addr		235397	1					
ANR	235482	Identifier	s_addr		235397	1					
ANR	235483	CompoundStatement		12:103:416:416	235397	1					
ANR	235484	ExpressionStatement	ret = - 1	1494:3:45873:45881	235397	0	True				
ANR	235485	AssignmentExpression	ret = - 1		235397	0		=			
ANR	235486	Identifier	ret		235397	0					
ANR	235487	UnaryOperationExpression	- 1		235397	1					
ANR	235488	UnaryOperator	-		235397	0					
ANR	235489	PrimaryExpression	1		235397	1					
ANR	235490	ElseStatement	else		235397	0					
ANR	235491	CompoundStatement		14:9:440:440	235397	0					
ANR	235492	ExpressionStatement	ret = 1	1496:3:45897:45904	235397	0	True				
ANR	235493	AssignmentExpression	ret = 1		235397	0		=			
ANR	235494	Identifier	ret		235397	0					
ANR	235495	PrimaryExpression	1		235397	1					
ANR	235496	ElseStatement	else		235397	0					
ANR	235497	IfStatement	if ( ( ( struct sockaddr * ) s1 ) -> sa_family == AF_INET6 )		235397	0					
ANR	235498	Condition	( ( struct sockaddr * ) s1 ) -> sa_family == AF_INET6	1498:11:45921:45966	235397	0	True				
ANR	235499	EqualityExpression	( ( struct sockaddr * ) s1 ) -> sa_family == AF_INET6		235397	0		==			
ANR	235500	PtrMemberAccess	( ( struct sockaddr * ) s1 ) -> sa_family		235397	0					
ANR	235501	CastExpression	( struct sockaddr * ) s1		235397	0					
ANR	235502	CastTarget	struct sockaddr *		235397	0					
ANR	235503	Identifier	s1		235397	1					
ANR	235504	Identifier	sa_family		235397	1					
ANR	235505	Identifier	AF_INET6		235397	1					
ANR	235506	CompoundStatement		17:59:517:517	235397	1					
ANR	235507	ExpressionStatement	"ret = memcmp ( ( ( struct sockaddr_in6 * ) s1 ) -> sin6_addr . s6_addr , ( ( struct sockaddr_in6 * ) s2 ) -> sin6_addr . s6_addr , 16 )"	1500:2:46022:46133	235397	0	True				
ANR	235508	AssignmentExpression	"ret = memcmp ( ( ( struct sockaddr_in6 * ) s1 ) -> sin6_addr . s6_addr , ( ( struct sockaddr_in6 * ) s2 ) -> sin6_addr . s6_addr , 16 )"		235397	0		=			
ANR	235509	Identifier	ret		235397	0					
ANR	235510	CallExpression	"memcmp ( ( ( struct sockaddr_in6 * ) s1 ) -> sin6_addr . s6_addr , ( ( struct sockaddr_in6 * ) s2 ) -> sin6_addr . s6_addr , 16 )"		235397	1					
ANR	235511	Callee	memcmp		235397	0					
ANR	235512	Identifier	memcmp		235397	0					
ANR	235513	ArgumentList	( ( struct sockaddr_in6 * ) s1 ) -> sin6_addr . s6_addr		235397	1					
ANR	235514	Argument	( ( struct sockaddr_in6 * ) s1 ) -> sin6_addr . s6_addr		235397	0					
ANR	235515	MemberAccess	( ( struct sockaddr_in6 * ) s1 ) -> sin6_addr . s6_addr		235397	0					
ANR	235516	PtrMemberAccess	( ( struct sockaddr_in6 * ) s1 ) -> sin6_addr		235397	0					
ANR	235517	CastExpression	( struct sockaddr_in6 * ) s1		235397	0					
ANR	235518	CastTarget	struct sockaddr_in6 *		235397	0					
ANR	235519	Identifier	s1		235397	1					
ANR	235520	Identifier	sin6_addr		235397	1					
ANR	235521	Identifier	s6_addr		235397	1					
ANR	235522	Argument	( ( struct sockaddr_in6 * ) s2 ) -> sin6_addr . s6_addr		235397	1					
ANR	235523	MemberAccess	( ( struct sockaddr_in6 * ) s2 ) -> sin6_addr . s6_addr		235397	0					
ANR	235524	PtrMemberAccess	( ( struct sockaddr_in6 * ) s2 ) -> sin6_addr		235397	0					
ANR	235525	CastExpression	( struct sockaddr_in6 * ) s2		235397	0					
ANR	235526	CastTarget	struct sockaddr_in6 *		235397	0					
ANR	235527	Identifier	s2		235397	1					
ANR	235528	Identifier	sin6_addr		235397	1					
ANR	235529	Identifier	s6_addr		235397	1					
ANR	235530	Argument	16		235397	2					
ANR	235531	PrimaryExpression	16		235397	0					
ANR	235532	ElseStatement	else		235397	0					
ANR	235533	CompoundStatement		20:8:691:691	235397	0					
ANR	235534	ExpressionStatement	"ret = memcmp ( s1 , s2 , socklen )"	1502:2:46147:46176	235397	0	True				
ANR	235535	AssignmentExpression	"ret = memcmp ( s1 , s2 , socklen )"		235397	0		=			
ANR	235536	Identifier	ret		235397	0					
ANR	235537	CallExpression	"memcmp ( s1 , s2 , socklen )"		235397	1					
ANR	235538	Callee	memcmp		235397	0					
ANR	235539	Identifier	memcmp		235397	0					
ANR	235540	ArgumentList	s1		235397	1					
ANR	235541	Argument	s1		235397	0					
ANR	235542	Identifier	s1		235397	0					
ANR	235543	Argument	s2		235397	1					
ANR	235544	Identifier	s2		235397	0					
ANR	235545	Argument	socklen		235397	2					
ANR	235546	Identifier	socklen		235397	0					
ANR	235547	Label	finalize_it :	1505:0:46182:46193	235397	3	True				
ANR	235548	Identifier	finalize_it		235397	0					
ANR	235549	ReturnStatement	return ret ;	1506:1:46196:46206	235397	4	True				
ANR	235550	Identifier	ret		235397	0					
ANR	235551	ReturnType	static int		235397	1					
ANR	235552	Identifier	CmpHost		235397	2					
ANR	235553	ParameterList	"struct sockaddr_storage * s1 , struct sockaddr_storage * s2 , size_t socklen"		235397	3					
ANR	235554	Parameter	struct sockaddr_storage * s1	1481:19:45377:45403	235397	0	True				
ANR	235555	ParameterType	struct sockaddr_storage *		235397	0					
ANR	235556	Identifier	s1		235397	1					
ANR	235557	Parameter	struct sockaddr_storage * s2	1481:48:45406:45432	235397	1	True				
ANR	235558	ParameterType	struct sockaddr_storage *		235397	0					
ANR	235559	Identifier	s2		235397	1					
ANR	235560	Parameter	size_t socklen	1481:77:45435:45448	235397	2	True				
ANR	235561	ParameterType	size_t		235397	0					
ANR	235562	Identifier	socklen		235397	1					
ANR	235563	CFGEntryNode	ENTRY		235397		True				
ANR	235564	CFGExitNode	EXIT		235397		True				
ANR	235565	Symbol	ret		235397						
ANR	235566	Symbol	( ( struct sockaddr_in6 * ) s2 ) -> sin6_addr		235397						
ANR	235567	Symbol	* s2		235397						
ANR	235568	Symbol	* s1		235397						
ANR	235569	Symbol	socklen		235397						
ANR	235570	Symbol	AF_INET		235397						
ANR	235571	Symbol	AF_INET6		235397						
ANR	235572	Symbol	( ( struct sockaddr_in6 * ) s1 ) -> sin6_addr		235397						
ANR	235573	Symbol	( ( struct sockaddr * ) s1 ) -> sa_family		235397						
ANR	235574	Symbol	( ( struct sockaddr_in6 * ) s1 ) -> sin6_addr . s6_addr		235397						
ANR	235575	Symbol	( ( struct sockaddr_in * ) s2 ) -> sin_addr		235397						
ANR	235576	Symbol	memcmp		235397						
ANR	235577	Symbol	( ( struct sockaddr_in * ) s2 ) -> sin_addr . s_addr		235397						
ANR	235578	Symbol	( ( struct sockaddr_in6 * ) s2 ) -> sin6_addr . s6_addr		235397						
ANR	235579	Symbol	( ( struct sockaddr_in * ) s1 ) -> sin_addr		235397						
ANR	235580	Symbol	( ( struct sockaddr_in * ) s1 ) -> sin_addr . s_addr		235397						
ANR	235581	Symbol	s1		235397						
ANR	235582	Symbol	( ( struct sockaddr * ) s2 ) -> sa_family		235397						
ANR	235583	Symbol	s2		235397						
ANR	235584	Function	HasRestrictions	1517:0:46536:46981							
ANR	235585	FunctionDef	"HasRestrictions (uchar * pszType , int * bHasRestrictions)"		235584	0					
ANR	235586	CompoundStatement		1518:55:46607:46981	235584	0					
ANR	235587	IdentifierDeclStatement	struct AllowedSenders * pAllowRoot = NULL ;	1519:1:46610:46650	235584	0	True				
ANR	235588	IdentifierDecl	* pAllowRoot = NULL		235584	0					
ANR	235589	IdentifierDeclType	struct AllowedSenders *		235584	0					
ANR	235590	Identifier	pAllowRoot		235584	1					
ANR	235591	AssignmentExpression	* pAllowRoot = NULL		235584	2		=			
ANR	235592	Identifier	NULL		235584	0					
ANR	235593	Identifier	NULL		235584	1					
ANR	235594	ExpressionStatement	DEFiRet	1520:1:46653:46660	235584	1	True				
ANR	235595	Identifier	DEFiRet		235584	0					
ANR	235596	ExpressionStatement	"CHKiRet ( setAllowRoot ( & pAllowRoot , pszType ) )"	1522:1:46664:46707	235584	2	True				
ANR	235597	CallExpression	"CHKiRet ( setAllowRoot ( & pAllowRoot , pszType ) )"		235584	0					
ANR	235598	Callee	CHKiRet		235584	0					
ANR	235599	Identifier	CHKiRet		235584	0					
ANR	235600	ArgumentList	"setAllowRoot ( & pAllowRoot , pszType )"		235584	1					
ANR	235601	Argument	"setAllowRoot ( & pAllowRoot , pszType )"		235584	0					
ANR	235602	CallExpression	"setAllowRoot ( & pAllowRoot , pszType )"		235584	0					
ANR	235603	Callee	setAllowRoot		235584	0					
ANR	235604	Identifier	setAllowRoot		235584	0					
ANR	235605	ArgumentList	& pAllowRoot		235584	1					
ANR	235606	Argument	& pAllowRoot		235584	0					
ANR	235607	UnaryOperationExpression	& pAllowRoot		235584	0					
ANR	235608	UnaryOperator	&		235584	0					
ANR	235609	Identifier	pAllowRoot		235584	1					
ANR	235610	Argument	pszType		235584	1					
ANR	235611	Identifier	pszType		235584	0					
ANR	235612	ExpressionStatement	* bHasRestrictions = ( pAllowRoot == NULL ) ? 0 : 1	1524:1:46711:46759	235584	3	True				
ANR	235613	AssignmentExpression	* bHasRestrictions = ( pAllowRoot == NULL ) ? 0 : 1		235584	0		=			
ANR	235614	UnaryOperationExpression	* bHasRestrictions		235584	0					
ANR	235615	UnaryOperator	*		235584	0					
ANR	235616	Identifier	bHasRestrictions		235584	1					
ANR	235617	ConditionalExpression	( pAllowRoot == NULL ) ? 0 : 1		235584	1					
ANR	235618	Condition	pAllowRoot == NULL		235584	0					
ANR	235619	EqualityExpression	pAllowRoot == NULL		235584	0		==			
ANR	235620	Identifier	pAllowRoot		235584	0					
ANR	235621	Identifier	NULL		235584	1					
ANR	235622	PrimaryExpression	0		235584	1					
ANR	235623	PrimaryExpression	1		235584	2					
ANR	235624	Label	finalize_it :	1526:0:46762:46773	235584	4	True				
ANR	235625	Identifier	finalize_it		235584	0					
ANR	235626	IfStatement	if ( iRet != RS_RET_OK )		235584	5					
ANR	235627	Condition	iRet != RS_RET_OK	1527:4:46779:46795	235584	0	True				
ANR	235628	EqualityExpression	iRet != RS_RET_OK		235584	0		!=			
ANR	235629	Identifier	iRet		235584	0					
ANR	235630	Identifier	RS_RET_OK		235584	1					
ANR	235631	CompoundStatement		10:23:190:190	235584	1					
ANR	235632	ExpressionStatement	* bHasRestrictions = 1	1528:2:46802:46823	235584	0	True				
ANR	235633	AssignmentExpression	* bHasRestrictions = 1		235584	0		=			
ANR	235634	UnaryOperationExpression	* bHasRestrictions		235584	0					
ANR	235635	UnaryOperator	*		235584	0					
ANR	235636	Identifier	bHasRestrictions		235584	1					
ANR	235637	PrimaryExpression	1		235584	1					
ANR	235638	ExpressionStatement	"DBGPRINTF ( ""Error %d trying to obtain ACL restriction state of '%s'\\n"" , iRet , pszType )"	1529:2:46881:46966	235584	1	True				
ANR	235639	CallExpression	"DBGPRINTF ( ""Error %d trying to obtain ACL restriction state of '%s'\\n"" , iRet , pszType )"		235584	0					
ANR	235640	Callee	DBGPRINTF		235584	0					
ANR	235641	Identifier	DBGPRINTF		235584	0					
ANR	235642	ArgumentList	"""Error %d trying to obtain ACL restriction state of '%s'\\n"""		235584	1					
ANR	235643	Argument	"""Error %d trying to obtain ACL restriction state of '%s'\\n"""		235584	0					
ANR	235644	PrimaryExpression	"""Error %d trying to obtain ACL restriction state of '%s'\\n"""		235584	0					
ANR	235645	Argument	iRet		235584	1					
ANR	235646	Identifier	iRet		235584	0					
ANR	235647	Argument	pszType		235584	2					
ANR	235648	Identifier	pszType		235584	0					
ANR	235649	ExpressionStatement	RETiRet	1531:1:46972:46979	235584	6	True				
ANR	235650	Identifier	RETiRet		235584	0					
ANR	235651	ReturnType	static rsRetVal		235584	1					
ANR	235652	Identifier	HasRestrictions		235584	2					
ANR	235653	ParameterList	"uchar * pszType , int * bHasRestrictions"		235584	3					
ANR	235654	Parameter	uchar * pszType	1518:16:46568:46581	235584	0	True				
ANR	235655	ParameterType	uchar *		235584	0					
ANR	235656	Identifier	pszType		235584	1					
ANR	235657	Parameter	int * bHasRestrictions	1518:32:46584:46604	235584	1	True				
ANR	235658	ParameterType	int *		235584	0					
ANR	235659	Identifier	bHasRestrictions		235584	1					
ANR	235660	CFGEntryNode	ENTRY		235584		True				
ANR	235661	CFGExitNode	EXIT		235584		True				
ANR	235662	Symbol	& pAllowRoot		235584						
ANR	235663	Symbol	NULL		235584						
ANR	235664	Symbol	* bHasRestrictions		235584						
ANR	235665	Symbol	bHasRestrictions		235584						
ANR	235666	Symbol	pAllowRoot		235584						
ANR	235667	Symbol	setAllowRoot		235584						
ANR	235668	Symbol	RS_RET_OK		235584						
ANR	235669	Symbol	pszType		235584						
ANR	235670	Symbol	iRet		235584						
ANR	235671	Function	getIFIPAddr	1548:0:47621:48647							
ANR	235672	FunctionDef	"getIFIPAddr (uchar * szif , int family , uchar * pszbuf , int lenBuf)"		235671	0					
ANR	235673	CompoundStatement		1550:0:47701:48647	235671	0					
ANR	235674	IdentifierDeclStatement	struct ifaddrs_rsys * ifaddrs = NULL ;	1552:1:47716:47752	235671	0	True				
ANR	235675	IdentifierDecl	* ifaddrs = NULL		235671	0					
ANR	235676	IdentifierDeclType	struct ifaddrs_rsys *		235671	0					
ANR	235677	Identifier	ifaddrs		235671	1					
ANR	235678	AssignmentExpression	* ifaddrs = NULL		235671	2		=			
ANR	235679	Identifier	NULL		235671	0					
ANR	235680	Identifier	NULL		235671	1					
ANR	235681	IdentifierDeclStatement	struct ifaddrs_rsys * ifa ;	1553:1:47755:47780	235671	1	True				
ANR	235682	IdentifierDecl	* ifa		235671	0					
ANR	235683	IdentifierDeclType	struct ifaddrs_rsys *		235671	0					
ANR	235684	Identifier	ifa		235671	1					
ANR	235685	IdentifierDeclStatement	void * pAddr ;	1558:1:47853:47865	235671	2	True				
ANR	235686	IdentifierDecl	* pAddr		235671	0					
ANR	235687	IdentifierDeclType	void *		235671	0					
ANR	235688	Identifier	pAddr		235671	1					
ANR	235689	ExpressionStatement	DEFiRet	1559:1:47868:47875	235671	3	True				
ANR	235690	Identifier	DEFiRet		235671	0					
ANR	235691	IfStatement	if ( getifaddrs ( & ifaddrs ) != 0 )		235671	4					
ANR	235692	Condition	getifaddrs ( & ifaddrs ) != 0	1561:5:47883:47907	235671	0	True				
ANR	235693	EqualityExpression	getifaddrs ( & ifaddrs ) != 0		235671	0		!=			
ANR	235694	CallExpression	getifaddrs ( & ifaddrs )		235671	0					
ANR	235695	Callee	getifaddrs		235671	0					
ANR	235696	Identifier	getifaddrs		235671	0					
ANR	235697	ArgumentList	& ifaddrs		235671	1					
ANR	235698	Argument	& ifaddrs		235671	0					
ANR	235699	UnaryOperationExpression	& ifaddrs		235671	0					
ANR	235700	UnaryOperator	&		235671	0					
ANR	235701	Identifier	ifaddrs		235671	1					
ANR	235702	PrimaryExpression	0		235671	1					
ANR	235703	CompoundStatement		12:32:208:208	235671	1					
ANR	235704	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	1562:2:47914:47940	235671	0	True				
ANR	235705	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		235671	0					
ANR	235706	Callee	ABORT_FINALIZE		235671	0					
ANR	235707	Identifier	ABORT_FINALIZE		235671	0					
ANR	235708	ArgumentList	RS_RET_ERR		235671	1					
ANR	235709	Argument	RS_RET_ERR		235671	0					
ANR	235710	Identifier	RS_RET_ERR		235671	0					
ANR	235711	ForStatement	for ( ifa = ifaddrs ; ifa != NULL ; ifa = ifa -> ifa_next )		235671	5					
ANR	235712	ForInit	ifa = ifaddrs ;	1565:6:47952:47965	235671	0	True				
ANR	235713	AssignmentExpression	ifa = ifaddrs		235671	0		=			
ANR	235714	Identifier	ifa		235671	0					
ANR	235715	Identifier	ifaddrs		235671	1					
ANR	235716	Condition	ifa != NULL	1565:21:47967:47977	235671	1	True				
ANR	235717	EqualityExpression	ifa != NULL		235671	0		!=			
ANR	235718	Identifier	ifa		235671	0					
ANR	235719	Identifier	NULL		235671	1					
ANR	235720	AssignmentExpression	ifa = ifa -> ifa_next	1565:34:47980:47998	235671	2	True	=			
ANR	235721	Identifier	ifa		235671	0					
ANR	235722	PtrMemberAccess	ifa -> ifa_next		235671	1					
ANR	235723	Identifier	ifa		235671	0					
ANR	235724	Identifier	ifa_next		235671	1					
ANR	235725	CompoundStatement		16:55:299:299	235671	3					
ANR	235726	IfStatement	"if ( strcmp ( ifa -> ifa_name , ( char * ) szif ) )"		235671	0					
ANR	235727	Condition	"strcmp ( ifa -> ifa_name , ( char * ) szif )"	1566:5:48008:48041	235671	0	True				
ANR	235728	CallExpression	"strcmp ( ifa -> ifa_name , ( char * ) szif )"		235671	0					
ANR	235729	Callee	strcmp		235671	0					
ANR	235730	Identifier	strcmp		235671	0					
ANR	235731	ArgumentList	ifa -> ifa_name		235671	1					
ANR	235732	Argument	ifa -> ifa_name		235671	0					
ANR	235733	PtrMemberAccess	ifa -> ifa_name		235671	0					
ANR	235734	Identifier	ifa		235671	0					
ANR	235735	Identifier	ifa_name		235671	1					
ANR	235736	Argument	( char * ) szif		235671	1					
ANR	235737	CastExpression	( char * ) szif		235671	0					
ANR	235738	CastTarget	char *		235671	0					
ANR	235739	Identifier	szif		235671	1					
ANR	235740	ContinueStatement	continue ;	1567:3:48047:48055	235671	1	True				
ANR	235741	IfStatement	if ( ( family == AF_INET6 || family == AF_UNSPEC ) && ifa -> ifa_addr -> sa_family == AF_INET6 )		235671	1					
ANR	235742	Condition	( family == AF_INET6 || family == AF_UNSPEC ) && ifa -> ifa_addr -> sa_family == AF_INET6	1568:8:48065:48152	235671	0	True				
ANR	235743	AndExpression	( family == AF_INET6 || family == AF_UNSPEC ) && ifa -> ifa_addr -> sa_family == AF_INET6		235671	0		&&			
ANR	235744	OrExpression	family == AF_INET6 || family == AF_UNSPEC		235671	0		||			
ANR	235745	EqualityExpression	family == AF_INET6		235671	0		==			
ANR	235746	Identifier	family		235671	0					
ANR	235747	Identifier	AF_INET6		235671	1					
ANR	235748	EqualityExpression	family == AF_UNSPEC		235671	1		==			
ANR	235749	Identifier	family		235671	0					
ANR	235750	Identifier	AF_UNSPEC		235671	1					
ANR	235751	EqualityExpression	ifa -> ifa_addr -> sa_family == AF_INET6		235671	1		==			
ANR	235752	PtrMemberAccess	ifa -> ifa_addr -> sa_family		235671	0					
ANR	235753	PtrMemberAccess	ifa -> ifa_addr		235671	0					
ANR	235754	Identifier	ifa		235671	0					
ANR	235755	Identifier	ifa_addr		235671	1					
ANR	235756	Identifier	sa_family		235671	1					
ANR	235757	Identifier	AF_INET6		235671	1					
ANR	235758	CompoundStatement		20:46:453:453	235671	1					
ANR	235759	ExpressionStatement	pAddr = & ( ( struct sockaddr_in6 * ) ifa -> ifa_addr ) -> sin6_addr	1570:3:48160:48218	235671	0	True				
ANR	235760	AssignmentExpression	pAddr = & ( ( struct sockaddr_in6 * ) ifa -> ifa_addr ) -> sin6_addr		235671	0		=			
ANR	235761	Identifier	pAddr		235671	0					
ANR	235762	UnaryOperationExpression	& ( ( struct sockaddr_in6 * ) ifa -> ifa_addr ) -> sin6_addr		235671	1					
ANR	235763	UnaryOperator	&		235671	0					
ANR	235764	PtrMemberAccess	( ( struct sockaddr_in6 * ) ifa -> ifa_addr ) -> sin6_addr		235671	1					
ANR	235765	CastExpression	( struct sockaddr_in6 * ) ifa -> ifa_addr		235671	0					
ANR	235766	CastTarget	struct sockaddr_in6 *		235671	0					
ANR	235767	PtrMemberAccess	ifa -> ifa_addr		235671	1					
ANR	235768	Identifier	ifa		235671	0					
ANR	235769	Identifier	ifa_addr		235671	1					
ANR	235770	Identifier	sin6_addr		235671	1					
ANR	235771	ExpressionStatement	"inet_ntop ( AF_INET6 , pAddr , ( char * ) pszbuf , lenBuf )"	1571:3:48223:48272	235671	1	True				
ANR	235772	CallExpression	"inet_ntop ( AF_INET6 , pAddr , ( char * ) pszbuf , lenBuf )"		235671	0					
ANR	235773	Callee	inet_ntop		235671	0					
ANR	235774	Identifier	inet_ntop		235671	0					
ANR	235775	ArgumentList	AF_INET6		235671	1					
ANR	235776	Argument	AF_INET6		235671	0					
ANR	235777	Identifier	AF_INET6		235671	0					
ANR	235778	Argument	pAddr		235671	1					
ANR	235779	Identifier	pAddr		235671	0					
ANR	235780	Argument	( char * ) pszbuf		235671	2					
ANR	235781	CastExpression	( char * ) pszbuf		235671	0					
ANR	235782	CastTarget	char *		235671	0					
ANR	235783	Identifier	pszbuf		235671	1					
ANR	235784	Argument	lenBuf		235671	3					
ANR	235785	Identifier	lenBuf		235671	0					
ANR	235786	BreakStatement	break ;	1572:3:48277:48282	235671	2	True				
ANR	235787	ElseStatement	else		235671	0					
ANR	235788	IfStatement	if ( ifa -> ifa_addr -> sa_family == AF_INET )		235671	0					
ANR	235789	Condition	ifa -> ifa_addr -> sa_family == AF_INET	1574:16:48360:48394	235671	0	True				
ANR	235790	EqualityExpression	ifa -> ifa_addr -> sa_family == AF_INET		235671	0		==			
ANR	235791	PtrMemberAccess	ifa -> ifa_addr -> sa_family		235671	0					
ANR	235792	PtrMemberAccess	ifa -> ifa_addr		235671	0					
ANR	235793	Identifier	ifa		235671	0					
ANR	235794	Identifier	ifa_addr		235671	1					
ANR	235795	Identifier	sa_family		235671	1					
ANR	235796	Identifier	AF_INET		235671	1					
ANR	235797	CompoundStatement		25:53:695:695	235671	1					
ANR	235798	ExpressionStatement	pAddr = & ( ( struct sockaddr_in * ) ifa -> ifa_addr ) -> sin_addr	1575:3:48402:48458	235671	0	True				
ANR	235799	AssignmentExpression	pAddr = & ( ( struct sockaddr_in * ) ifa -> ifa_addr ) -> sin_addr		235671	0		=			
ANR	235800	Identifier	pAddr		235671	0					
ANR	235801	UnaryOperationExpression	& ( ( struct sockaddr_in * ) ifa -> ifa_addr ) -> sin_addr		235671	1					
ANR	235802	UnaryOperator	&		235671	0					
ANR	235803	PtrMemberAccess	( ( struct sockaddr_in * ) ifa -> ifa_addr ) -> sin_addr		235671	1					
ANR	235804	CastExpression	( struct sockaddr_in * ) ifa -> ifa_addr		235671	0					
ANR	235805	CastTarget	struct sockaddr_in *		235671	0					
ANR	235806	PtrMemberAccess	ifa -> ifa_addr		235671	1					
ANR	235807	Identifier	ifa		235671	0					
ANR	235808	Identifier	ifa_addr		235671	1					
ANR	235809	Identifier	sin_addr		235671	1					
ANR	235810	ExpressionStatement	"inet_ntop ( AF_INET , pAddr , ( char * ) pszbuf , lenBuf )"	1576:3:48463:48511	235671	1	True				
ANR	235811	CallExpression	"inet_ntop ( AF_INET , pAddr , ( char * ) pszbuf , lenBuf )"		235671	0					
ANR	235812	Callee	inet_ntop		235671	0					
ANR	235813	Identifier	inet_ntop		235671	0					
ANR	235814	ArgumentList	AF_INET		235671	1					
ANR	235815	Argument	AF_INET		235671	0					
ANR	235816	Identifier	AF_INET		235671	0					
ANR	235817	Argument	pAddr		235671	1					
ANR	235818	Identifier	pAddr		235671	0					
ANR	235819	Argument	( char * ) pszbuf		235671	2					
ANR	235820	CastExpression	( char * ) pszbuf		235671	0					
ANR	235821	CastTarget	char *		235671	0					
ANR	235822	Identifier	pszbuf		235671	1					
ANR	235823	Argument	lenBuf		235671	3					
ANR	235824	Identifier	lenBuf		235671	0					
ANR	235825	BreakStatement	break ;	1577:3:48516:48521	235671	2	True				
ANR	235826	IfStatement	if ( ifaddrs != NULL )		235671	6					
ANR	235827	Condition	ifaddrs != NULL	1581:4:48536:48550	235671	0	True				
ANR	235828	EqualityExpression	ifaddrs != NULL		235671	0		!=			
ANR	235829	Identifier	ifaddrs		235671	0					
ANR	235830	Identifier	NULL		235671	1					
ANR	235831	ExpressionStatement	freeifaddrs ( ifaddrs )	1582:2:48555:48575	235671	1	True				
ANR	235832	CallExpression	freeifaddrs ( ifaddrs )		235671	0					
ANR	235833	Callee	freeifaddrs		235671	0					
ANR	235834	Identifier	freeifaddrs		235671	0					
ANR	235835	ArgumentList	ifaddrs		235671	1					
ANR	235836	Argument	ifaddrs		235671	0					
ANR	235837	Identifier	ifaddrs		235671	0					
ANR	235838	IfStatement	if ( ifa == NULL )		235671	7					
ANR	235839	Condition	ifa == NULL	1584:4:48582:48592	235671	0	True				
ANR	235840	EqualityExpression	ifa == NULL		235671	0		==			
ANR	235841	Identifier	ifa		235671	0					
ANR	235842	Identifier	NULL		235671	1					
ANR	235843	ExpressionStatement	iRet = RS_RET_NOT_FOUND	1585:2:48597:48620	235671	1	True				
ANR	235844	AssignmentExpression	iRet = RS_RET_NOT_FOUND		235671	0		=			
ANR	235845	Identifier	iRet		235671	0					
ANR	235846	Identifier	RS_RET_NOT_FOUND		235671	1					
ANR	235847	Label	finalize_it :	1587:0:48623:48634	235671	8	True				
ANR	235848	Identifier	finalize_it		235671	0					
ANR	235849	ExpressionStatement	RETiRet	1588:1:48637:48644	235671	9	True				
ANR	235850	Identifier	RETiRet		235671	0					
ANR	235851	ReturnType	static rsRetVal		235671	1					
ANR	235852	Identifier	getIFIPAddr		235671	2					
ANR	235853	ParameterList	"uchar * szif , int family , uchar * pszbuf , int lenBuf"		235671	3					
ANR	235854	Parameter	uchar * szif	1549:12:47649:47659	235671	0	True				
ANR	235855	ParameterType	uchar *		235671	0					
ANR	235856	Identifier	szif		235671	1					
ANR	235857	Parameter	int family	1549:25:47662:47671	235671	1	True				
ANR	235858	ParameterType	int		235671	0					
ANR	235859	Identifier	family		235671	1					
ANR	235860	Parameter	uchar * pszbuf	1549:37:47674:47686	235671	2	True				
ANR	235861	ParameterType	uchar *		235671	0					
ANR	235862	Identifier	pszbuf		235671	1					
ANR	235863	Parameter	int lenBuf	1549:52:47689:47698	235671	3	True				
ANR	235864	ParameterType	int		235671	0					
ANR	235865	Identifier	lenBuf		235671	1					
ANR	235866	CFGEntryNode	ENTRY		235671		True				
ANR	235867	CFGExitNode	EXIT		235671		True				
ANR	235868	Symbol	RS_RET_ERR		235671						
ANR	235869	Symbol	pAddr		235671						
ANR	235870	Symbol	iRet		235671						
ANR	235871	Symbol	ifa -> ifa_next		235671						
ANR	235872	Symbol	AF_UNSPEC		235671						
ANR	235873	Symbol	pszbuf		235671						
ANR	235874	Symbol	lenBuf		235671						
ANR	235875	Symbol	ifa -> ifa_name		235671						
ANR	235876	Symbol	RS_RET_NOT_FOUND		235671						
ANR	235877	Symbol	getifaddrs		235671						
ANR	235878	Symbol	strcmp		235671						
ANR	235879	Symbol	NULL		235671						
ANR	235880	Symbol	ifa		235671						
ANR	235881	Symbol	ifaddrs		235671						
ANR	235882	Symbol	& ( ( struct sockaddr_in * ) ifa -> ifa_addr ) -> sin_addr		235671						
ANR	235883	Symbol	* ifa -> ifa_addr		235671						
ANR	235884	Symbol	AF_INET		235671						
ANR	235885	Symbol	ifa -> ifa_addr -> sa_family		235671						
ANR	235886	Symbol	AF_INET6		235671						
ANR	235887	Symbol	* ifa		235671						
ANR	235888	Symbol	szif		235671						
ANR	235889	Symbol	* * ifa		235671						
ANR	235890	Symbol	ifa -> ifa_addr		235671						
ANR	235891	Symbol	& ifaddrs		235671						
ANR	235892	Symbol	family		235671						
ANR	235893	Symbol	& ( ( struct sockaddr_in6 * ) ifa -> ifa_addr ) -> sin6_addr		235671						
ANR	235894	DeclStmt									
ANR	235895	Decl							BEGINmodExit CODESTARTmodExit	BEGINmodExit CODESTARTmodExit ( )	netClassExit
ANR	235896	DeclStmt									
ANR	235897	Decl							CODESTARTmodInit	CODESTARTmodInit *	ipIFVersProvided
