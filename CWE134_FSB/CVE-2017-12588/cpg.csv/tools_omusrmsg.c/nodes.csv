command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	354617	File	data/converged/CVE-2017-12588_rsyslog/tools_omusrmsg.c								
ANR	354618	ClassDef	_instanceData	84:8:2015:2157							
ANR	354619	DeclStmt									
ANR	354620	Decl							int	int	bIsWall
ANR	354621	DeclStmt									
ANR	354622	Decl							uchar	uchar *	tplName
ANR	354623	DeclStmt									
ANR	354624	Decl							_instanceData	_instanceData	instanceData
ANR	354625	ClassDef	wrkrInstanceData	90:8:2168:2236							
ANR	354626	DeclStmt									
ANR	354627	Decl							instanceData	instanceData *	pData
ANR	354628	DeclStmt									
ANR	354629	Decl							wrkrInstanceData	wrkrInstanceData	wrkrInstanceData_t
ANR	354630	ClassDef	configSettings_s	94:8:2247:2305							
ANR	354631	DeclStmt									
ANR	354632	Decl							configSettings_s	configSettings_s	configSettings_t
ANR	354633	DeclStmt									
ANR	354634	Decl							struct cnfparamdescr	struct cnfparamdescr [ ]	actpdescr
ANR	354635	DeclStmt									
ANR	354636	Decl							struct cnfparamblk	struct cnfparamblk	actpblk
ANR	354637	DeclStmt									
ANR	354638	Decl							ENDisCompatibleWithFeature BEGINfreeInstance CODESTARTfreeInstance	ENDisCompatibleWithFeature BEGINfreeInstance CODESTARTfreeInstance	free
ANR	354639	DeclStmt									
ANR	354640	Decl							int	int	i
ANR	354641	DeclStmt									
ANR	354642	Decl							FILE	FILE *	BSD_uf
ANR	354643	Function	setutent	167:0:3971:4156							
ANR	354644	FunctionDef	setutent ()		354643	0					
ANR	354645	CompoundStatement		168:0:3991:4156	354643	0					
ANR	354646	ExpressionStatement	assert ( BSD_uf == NULL )	169:1:3994:4016	354643	0	True				
ANR	354647	CallExpression	assert ( BSD_uf == NULL )		354643	0					
ANR	354648	Callee	assert		354643	0					
ANR	354649	Identifier	assert		354643	0					
ANR	354650	ArgumentList	BSD_uf == NULL		354643	1					
ANR	354651	Argument	BSD_uf == NULL		354643	0					
ANR	354652	EqualityExpression	BSD_uf == NULL		354643	0		==			
ANR	354653	Identifier	BSD_uf		354643	0					
ANR	354654	Identifier	NULL		354643	1					
ANR	354655	IfStatement	"if ( ( BSD_uf = fopen ( _PATH_UTMP , ""r"" ) ) == NULL )"		354643	1					
ANR	354656	Condition	"( BSD_uf = fopen ( _PATH_UTMP , ""r"" ) ) == NULL"	170:5:4023:4063	354643	0	True				
ANR	354657	EqualityExpression	"( BSD_uf = fopen ( _PATH_UTMP , ""r"" ) ) == NULL"		354643	0		==			
ANR	354658	AssignmentExpression	"BSD_uf = fopen ( _PATH_UTMP , ""r"" )"		354643	0		=			
ANR	354659	Identifier	BSD_uf		354643	0					
ANR	354660	CallExpression	"fopen ( _PATH_UTMP , ""r"" )"		354643	1					
ANR	354661	Callee	fopen		354643	0					
ANR	354662	Identifier	fopen		354643	0					
ANR	354663	ArgumentList	_PATH_UTMP		354643	1					
ANR	354664	Argument	_PATH_UTMP		354643	0					
ANR	354665	Identifier	_PATH_UTMP		354643	0					
ANR	354666	Argument	"""r"""		354643	1					
ANR	354667	PrimaryExpression	"""r"""		354643	0					
ANR	354668	Identifier	NULL		354643	1					
ANR	354669	CompoundStatement		3:48:74:74	354643	1					
ANR	354670	ExpressionStatement	"errmsg . LogError ( errno , NO_ERRCODE , ""error opening utmp %s"" , _PATH_UTMP )"	171:2:4070:4141	354643	0	True				
ANR	354671	CallExpression	"errmsg . LogError ( errno , NO_ERRCODE , ""error opening utmp %s"" , _PATH_UTMP )"		354643	0					
ANR	354672	Callee	errmsg . LogError		354643	0					
ANR	354673	MemberAccess	errmsg . LogError		354643	0					
ANR	354674	Identifier	errmsg		354643	0					
ANR	354675	Identifier	LogError		354643	1					
ANR	354676	ArgumentList	errno		354643	1					
ANR	354677	Argument	errno		354643	0					
ANR	354678	Identifier	errno		354643	0					
ANR	354679	Argument	NO_ERRCODE		354643	1					
ANR	354680	Identifier	NO_ERRCODE		354643	0					
ANR	354681	Argument	"""error opening utmp %s"""		354643	2					
ANR	354682	PrimaryExpression	"""error opening utmp %s"""		354643	0					
ANR	354683	Argument	_PATH_UTMP		354643	3					
ANR	354684	Identifier	_PATH_UTMP		354643	0					
ANR	354685	ReturnStatement	return ;	172:2:4145:4151	354643	1	True				
ANR	354686	ReturnType	void		354643	1					
ANR	354687	Identifier	setutent		354643	2					
ANR	354688	ParameterList			354643	3					
ANR	354689	CFGEntryNode	ENTRY		354643		True				
ANR	354690	CFGExitNode	EXIT		354643		True				
ANR	354691	Symbol	fopen		354643						
ANR	354692	Symbol	errno		354643						
ANR	354693	Symbol	NULL		354643						
ANR	354694	Symbol	_PATH_UTMP		354643						
ANR	354695	Symbol	NO_ERRCODE		354643						
ANR	354696	Symbol	errmsg		354643						
ANR	354697	Symbol	BSD_uf		354643						
ANR	354698	Function	getutent	176:0:4159:4314							
ANR	354699	FunctionDef	getutent ()		354698	0					
ANR	354700	CompoundStatement		177:0:4186:4314	354698	0					
ANR	354701	Statement	static	178:1:4189:4194	354698	0	True				
ANR	354702	IdentifierDeclStatement	STRUCTUTMP st_utmp ;	178:8:4196:4214	354698	1	True				
ANR	354703	IdentifierDecl	st_utmp		354698	0					
ANR	354704	IdentifierDeclType	STRUCTUTMP		354698	0					
ANR	354705	Identifier	st_utmp		354698	1					
ANR	354706	IfStatement	"if ( fread ( ( char * ) & st_utmp , sizeof ( st_utmp ) , 1 , BSD_uf ) != 1 )"		354698	2					
ANR	354707	Condition	"fread ( ( char * ) & st_utmp , sizeof ( st_utmp ) , 1 , BSD_uf ) != 1"	180:4:4221:4276	354698	0	True				
ANR	354708	EqualityExpression	"fread ( ( char * ) & st_utmp , sizeof ( st_utmp ) , 1 , BSD_uf ) != 1"		354698	0		!=			
ANR	354709	CallExpression	"fread ( ( char * ) & st_utmp , sizeof ( st_utmp ) , 1 , BSD_uf )"		354698	0					
ANR	354710	Callee	fread		354698	0					
ANR	354711	Identifier	fread		354698	0					
ANR	354712	ArgumentList	( char * ) & st_utmp		354698	1					
ANR	354713	Argument	( char * ) & st_utmp		354698	0					
ANR	354714	CastExpression	( char * ) & st_utmp		354698	0					
ANR	354715	CastTarget	char *		354698	0					
ANR	354716	UnaryOperationExpression	& st_utmp		354698	1					
ANR	354717	UnaryOperator	&		354698	0					
ANR	354718	Identifier	st_utmp		354698	1					
ANR	354719	Argument	sizeof ( st_utmp )		354698	1					
ANR	354720	SizeofExpression	sizeof ( st_utmp )		354698	0					
ANR	354721	Sizeof	sizeof		354698	0					
ANR	354722	SizeofOperand	st_utmp		354698	1					
ANR	354723	Argument	1		354698	2					
ANR	354724	PrimaryExpression	1		354698	0					
ANR	354725	Argument	BSD_uf		354698	3					
ANR	354726	Identifier	BSD_uf		354698	0					
ANR	354727	PrimaryExpression	1		354698	1					
ANR	354728	ReturnStatement	return NULL ;	181:2:4281:4292	354698	1	True				
ANR	354729	Identifier	NULL		354698	0					
ANR	354730	ReturnStatement	return ( & st_utmp ) ;	183:1:4296:4312	354698	3	True				
ANR	354731	UnaryOperationExpression	& st_utmp		354698	0					
ANR	354732	UnaryOperator	&		354698	0					
ANR	354733	Identifier	st_utmp		354698	1					
ANR	354734	ReturnType	STRUCTUTMP *		354698	1					
ANR	354735	Identifier	getutent		354698	2					
ANR	354736	ParameterList			354698	3					
ANR	354737	CFGEntryNode	ENTRY		354698		True				
ANR	354738	CFGExitNode	EXIT		354698		True				
ANR	354739	Symbol	st_utmp		354698						
ANR	354740	Symbol	NULL		354698						
ANR	354741	Symbol	& st_utmp		354698						
ANR	354742	Symbol	BSD_uf		354698						
ANR	354743	Symbol	fread		354698						
ANR	354744	Function	endutent	186:0:4317:4372							
ANR	354745	FunctionDef	endutent ()		354744	0					
ANR	354746	CompoundStatement		187:0:4337:4372	354744	0					
ANR	354747	ExpressionStatement	fclose ( BSD_uf )	188:1:4340:4354	354744	0	True				
ANR	354748	CallExpression	fclose ( BSD_uf )		354744	0					
ANR	354749	Callee	fclose		354744	0					
ANR	354750	Identifier	fclose		354744	0					
ANR	354751	ArgumentList	BSD_uf		354744	1					
ANR	354752	Argument	BSD_uf		354744	0					
ANR	354753	Identifier	BSD_uf		354744	0					
ANR	354754	ExpressionStatement	BSD_uf = NULL	189:1:4357:4370	354744	1	True				
ANR	354755	AssignmentExpression	BSD_uf = NULL		354744	0		=			
ANR	354756	Identifier	BSD_uf		354744	0					
ANR	354757	Identifier	NULL		354744	1					
ANR	354758	ReturnType	void		354744	1					
ANR	354759	Identifier	endutent		354744	2					
ANR	354760	ParameterList			354744	3					
ANR	354761	CFGEntryNode	ENTRY		354744		True				
ANR	354762	CFGExitNode	EXIT		354744		True				
ANR	354763	Symbol	NULL		354744						
ANR	354764	Symbol	BSD_uf		354744						
ANR	354765	Function	wallmsg	207:0:4975:6909							
ANR	354766	FunctionDef	"wallmsg (uchar * pMsg , instanceData * pData)"		354765	0					
ANR	354767	CompoundStatement		208:0:5033:6909	354765	0					
ANR	354768	IdentifierDeclStatement	uchar szErr [ 512 ] ;	210:1:5039:5055	354765	0	True				
ANR	354769	IdentifierDecl	szErr [ 512 ]		354765	0					
ANR	354770	IdentifierDeclType	uchar [ 512 ]		354765	0					
ANR	354771	Identifier	szErr		354765	1					
ANR	354772	PrimaryExpression	512		354765	2					
ANR	354773	IdentifierDeclStatement	char p [ sizeof ( _PATH_DEV ) + UNAMESZ ] ;	211:1:5058:5093	354765	1	True				
ANR	354774	IdentifierDecl	p [ sizeof ( _PATH_DEV ) + UNAMESZ ]		354765	0					
ANR	354775	IdentifierDeclType	char [ sizeof ( _PATH_DEV ) + UNAMESZ ]		354765	0					
ANR	354776	Identifier	p		354765	1					
ANR	354777	AdditiveExpression	sizeof ( _PATH_DEV ) + UNAMESZ		354765	2		+			
ANR	354778	SizeofExpression	sizeof ( _PATH_DEV )		354765	0					
ANR	354779	Sizeof	sizeof		354765	0					
ANR	354780	SizeofOperand	_PATH_DEV		354765	1					
ANR	354781	Identifier	UNAMESZ		354765	1					
ANR	354782	Statement	register	212:1:5096:5103	354765	2	True				
ANR	354783	IdentifierDeclStatement	int i ;	212:10:5105:5110	354765	3	True				
ANR	354784	IdentifierDecl	i		354765	0					
ANR	354785	IdentifierDeclType	int		354765	0					
ANR	354786	Identifier	i		354765	1					
ANR	354787	IdentifierDeclStatement	int errnoSave ;	213:1:5113:5126	354765	4	True				
ANR	354788	IdentifierDecl	errnoSave		354765	0					
ANR	354789	IdentifierDeclType	int		354765	0					
ANR	354790	Identifier	errnoSave		354765	1					
ANR	354791	IdentifierDeclStatement	int ttyf ;	214:1:5129:5137	354765	5	True				
ANR	354792	IdentifierDecl	ttyf		354765	0					
ANR	354793	IdentifierDeclType	int		354765	0					
ANR	354794	Identifier	ttyf		354765	1					
ANR	354795	IdentifierDeclStatement	int wrRet ;	215:1:5140:5149	354765	6	True				
ANR	354796	IdentifierDecl	wrRet		354765	0					
ANR	354797	IdentifierDeclType	int		354765	0					
ANR	354798	Identifier	wrRet		354765	1					
ANR	354799	IdentifierDeclStatement	STRUCTUTMP ut ;	216:1:5152:5165	354765	7	True				
ANR	354800	IdentifierDecl	ut		354765	0					
ANR	354801	IdentifierDeclType	STRUCTUTMP		354765	0					
ANR	354802	Identifier	ut		354765	1					
ANR	354803	IdentifierDeclStatement	STRUCTUTMP * uptr ;	217:1:5168:5184	354765	8	True				
ANR	354804	IdentifierDecl	* uptr		354765	0					
ANR	354805	IdentifierDeclType	STRUCTUTMP *		354765	0					
ANR	354806	Identifier	uptr		354765	1					
ANR	354807	IdentifierDeclStatement	struct stat statb ;	218:1:5187:5204	354765	9	True				
ANR	354808	IdentifierDecl	statb		354765	0					
ANR	354809	IdentifierDeclType	struct stat		354765	0					
ANR	354810	Identifier	statb		354765	1					
ANR	354811	ExpressionStatement	DEFiRet	219:1:5207:5214	354765	10	True				
ANR	354812	Identifier	DEFiRet		354765	0					
ANR	354813	ExpressionStatement	assert ( pMsg != NULL )	221:1:5218:5238	354765	11	True				
ANR	354814	CallExpression	assert ( pMsg != NULL )		354765	0					
ANR	354815	Callee	assert		354765	0					
ANR	354816	Identifier	assert		354765	0					
ANR	354817	ArgumentList	pMsg != NULL		354765	1					
ANR	354818	Argument	pMsg != NULL		354765	0					
ANR	354819	EqualityExpression	pMsg != NULL		354765	0		!=			
ANR	354820	Identifier	pMsg		354765	0					
ANR	354821	Identifier	NULL		354765	1					
ANR	354822	ExpressionStatement	setutent ( )	224:1:5274:5284	354765	12	True				
ANR	354823	CallExpression	setutent ( )		354765	0					
ANR	354824	Callee	setutent		354765	0					
ANR	354825	Identifier	setutent		354765	0					
ANR	354826	ArgumentList			354765	1					
ANR	354827	WhileStatement	while ( ( uptr = getutent ( ) ) )		354765	13					
ANR	354828	Condition	uptr = getutent ( )	227:7:5326:5344	354765	0	True				
ANR	354829	AssignmentExpression	uptr = getutent ( )		354765	0		=			
ANR	354830	Identifier	uptr		354765	0					
ANR	354831	CallExpression	getutent ( )		354765	1					
ANR	354832	Callee	getutent		354765	0					
ANR	354833	Identifier	getutent		354765	0					
ANR	354834	ArgumentList			354765	1					
ANR	354835	CompoundStatement		20:28:313:313	354765	1					
ANR	354836	ExpressionStatement	"memcpy ( & ut , uptr , sizeof ( ut ) )"	228:2:5351:5380	354765	0	True				
ANR	354837	CallExpression	"memcpy ( & ut , uptr , sizeof ( ut ) )"		354765	0					
ANR	354838	Callee	memcpy		354765	0					
ANR	354839	Identifier	memcpy		354765	0					
ANR	354840	ArgumentList	& ut		354765	1					
ANR	354841	Argument	& ut		354765	0					
ANR	354842	UnaryOperationExpression	& ut		354765	0					
ANR	354843	UnaryOperator	&		354765	0					
ANR	354844	Identifier	ut		354765	1					
ANR	354845	Argument	uptr		354765	1					
ANR	354846	Identifier	uptr		354765	0					
ANR	354847	Argument	sizeof ( ut )		354765	2					
ANR	354848	SizeofExpression	sizeof ( ut )		354765	0					
ANR	354849	Sizeof	sizeof		354765	0					
ANR	354850	SizeofOperand	ut		354765	1					
ANR	354851	IfStatement	if ( ut . UTNAME [ 0 ] == '\\0' )		354765	1					
ANR	354852	Condition	ut . UTNAME [ 0 ] == '\\0'	230:5:5414:5433	354765	0	True				
ANR	354853	EqualityExpression	ut . UTNAME [ 0 ] == '\\0'		354765	0		==			
ANR	354854	ArrayIndexing	ut . UTNAME [ 0 ]		354765	0					
ANR	354855	MemberAccess	ut . UTNAME		354765	0					
ANR	354856	Identifier	ut		354765	0					
ANR	354857	Identifier	UTNAME		354765	1					
ANR	354858	PrimaryExpression	0		354765	1					
ANR	354859	PrimaryExpression	'\\0'		354765	1					
ANR	354860	ContinueStatement	continue ;	231:3:5439:5447	354765	1	True				
ANR	354861	IfStatement	if ( ut . ut_type != USER_PROCESS )		354765	2					
ANR	354862	Condition	ut . ut_type != USER_PROCESS	233:5:5469:5494	354765	0	True				
ANR	354863	EqualityExpression	ut . ut_type != USER_PROCESS		354765	0		!=			
ANR	354864	MemberAccess	ut . ut_type		354765	0					
ANR	354865	Identifier	ut		354765	0					
ANR	354866	Identifier	ut_type		354765	1					
ANR	354867	Identifier	USER_PROCESS		354765	1					
ANR	354868	ContinueStatement	continue ;	234:3:5500:5508	354765	1	True				
ANR	354869	IfStatement	"if ( ! ( strncmp ( ut . UTNAME , ""LOGIN"" , 6 ) ) )"		354765	3					
ANR	354870	Condition	"! ( strncmp ( ut . UTNAME , ""LOGIN"" , 6 ) )"	236:5:5522:5554	354765	0	True				
ANR	354871	UnaryOperationExpression	"! ( strncmp ( ut . UTNAME , ""LOGIN"" , 6 ) )"		354765	0					
ANR	354872	UnaryOperator	!		354765	0					
ANR	354873	CallExpression	"strncmp ( ut . UTNAME , ""LOGIN"" , 6 )"		354765	1					
ANR	354874	Callee	strncmp		354765	0					
ANR	354875	Identifier	strncmp		354765	0					
ANR	354876	ArgumentList	ut . UTNAME		354765	1					
ANR	354877	Argument	ut . UTNAME		354765	0					
ANR	354878	MemberAccess	ut . UTNAME		354765	0					
ANR	354879	Identifier	ut		354765	0					
ANR	354880	Identifier	UTNAME		354765	1					
ANR	354881	Argument	"""LOGIN"""		354765	1					
ANR	354882	PrimaryExpression	"""LOGIN"""		354765	0					
ANR	354883	Argument	6		354765	2					
ANR	354884	PrimaryExpression	6		354765	0					
ANR	354885	ContinueStatement	continue ;	237:3:5575:5583	354765	1	True				
ANR	354886	IfStatement	if ( pData -> bIsWall == 0 )		354765	4					
ANR	354887	Condition	pData -> bIsWall == 0	240:5:5640:5658	354765	0	True				
ANR	354888	EqualityExpression	pData -> bIsWall == 0		354765	0		==			
ANR	354889	PtrMemberAccess	pData -> bIsWall		354765	0					
ANR	354890	Identifier	pData		354765	0					
ANR	354891	Identifier	bIsWall		354765	1					
ANR	354892	PrimaryExpression	0		354765	1					
ANR	354893	CompoundStatement		33:26:627:627	354765	1					
ANR	354894	ForStatement	for ( i = 0 ; i < MAXUNAMES ; i ++ )		354765	0					
ANR	354895	ForInit	i = 0 ;	241:7:5670:5675	354765	0	True				
ANR	354896	AssignmentExpression	i = 0		354765	0		=			
ANR	354897	Identifier	i		354765	0					
ANR	354898	PrimaryExpression	0		354765	1					
ANR	354899	Condition	i < MAXUNAMES	241:14:5677:5689	354765	1	True				
ANR	354900	RelationalExpression	i < MAXUNAMES		354765	0		<			
ANR	354901	Identifier	i		354765	0					
ANR	354902	Identifier	MAXUNAMES		354765	1					
ANR	354903	PostIncDecOperationExpression	i ++	241:29:5692:5694	354765	2	True				
ANR	354904	Identifier	i		354765	0					
ANR	354905	IncDec	++		354765	1					
ANR	354906	CompoundStatement		34:34:663:663	354765	3					
ANR	354907	IfStatement	if ( ! pData -> uname [ i ] [ 0 ] )		354765	0					
ANR	354908	Condition	! pData -> uname [ i ] [ 0 ]	242:7:5706:5724	354765	0	True				
ANR	354909	UnaryOperationExpression	! pData -> uname [ i ] [ 0 ]		354765	0					
ANR	354910	UnaryOperator	!		354765	0					
ANR	354911	ArrayIndexing	pData -> uname [ i ] [ 0 ]		354765	1					
ANR	354912	ArrayIndexing	pData -> uname [ i ]		354765	0					
ANR	354913	PtrMemberAccess	pData -> uname		354765	0					
ANR	354914	Identifier	pData		354765	0					
ANR	354915	Identifier	uname		354765	1					
ANR	354916	Identifier	i		354765	1					
ANR	354917	PrimaryExpression	0		354765	1					
ANR	354918	CompoundStatement		35:28:693:693	354765	1					
ANR	354919	ExpressionStatement	i = MAXUNAMES	243:5:5734:5747	354765	0	True				
ANR	354920	AssignmentExpression	i = MAXUNAMES		354765	0		=			
ANR	354921	Identifier	i		354765	0					
ANR	354922	Identifier	MAXUNAMES		354765	1					
ANR	354923	BreakStatement	break ;	244:5:5754:5759	354765	1	True				
ANR	354924	IfStatement	"if ( strncmp ( pData -> uname [ i ] , ut . UTNAME , UNAMESZ ) == 0 )"		354765	1					
ANR	354925	Condition	"strncmp ( pData -> uname [ i ] , ut . UTNAME , UNAMESZ ) == 0"	246:7:5774:5822	354765	0	True				
ANR	354926	EqualityExpression	"strncmp ( pData -> uname [ i ] , ut . UTNAME , UNAMESZ ) == 0"		354765	0		==			
ANR	354927	CallExpression	"strncmp ( pData -> uname [ i ] , ut . UTNAME , UNAMESZ )"		354765	0					
ANR	354928	Callee	strncmp		354765	0					
ANR	354929	Identifier	strncmp		354765	0					
ANR	354930	ArgumentList	pData -> uname [ i ]		354765	1					
ANR	354931	Argument	pData -> uname [ i ]		354765	0					
ANR	354932	ArrayIndexing	pData -> uname [ i ]		354765	0					
ANR	354933	PtrMemberAccess	pData -> uname		354765	0					
ANR	354934	Identifier	pData		354765	0					
ANR	354935	Identifier	uname		354765	1					
ANR	354936	Identifier	i		354765	1					
ANR	354937	Argument	ut . UTNAME		354765	1					
ANR	354938	MemberAccess	ut . UTNAME		354765	0					
ANR	354939	Identifier	ut		354765	0					
ANR	354940	Identifier	UTNAME		354765	1					
ANR	354941	Argument	UNAMESZ		354765	2					
ANR	354942	Identifier	UNAMESZ		354765	0					
ANR	354943	PrimaryExpression	0		354765	1					
ANR	354944	BreakStatement	break ;	247:5:5830:5835	354765	1	True				
ANR	354945	IfStatement	if ( i == MAXUNAMES )		354765	1					
ANR	354946	Condition	i == MAXUNAMES	249:6:5848:5861	354765	0	True				
ANR	354947	EqualityExpression	i == MAXUNAMES		354765	0		==			
ANR	354948	Identifier	i		354765	0					
ANR	354949	Identifier	MAXUNAMES		354765	1					
ANR	354950	ContinueStatement	continue ;	250:4:5890:5898	354765	1	True				
ANR	354951	ExpressionStatement	"strcpy ( p , _PATH_DEV )"	254:2:5962:5982	354765	5	True				
ANR	354952	CallExpression	"strcpy ( p , _PATH_DEV )"		354765	0					
ANR	354953	Callee	strcpy		354765	0					
ANR	354954	Identifier	strcpy		354765	0					
ANR	354955	ArgumentList	p		354765	1					
ANR	354956	Argument	p		354765	0					
ANR	354957	Identifier	p		354765	0					
ANR	354958	Argument	_PATH_DEV		354765	1					
ANR	354959	Identifier	_PATH_DEV		354765	0					
ANR	354960	ExpressionStatement	"strncat ( p , ut . ut_line , UNAMESZ )"	255:2:5986:6017	354765	6	True				
ANR	354961	CallExpression	"strncat ( p , ut . ut_line , UNAMESZ )"		354765	0					
ANR	354962	Callee	strncat		354765	0					
ANR	354963	Identifier	strncat		354765	0					
ANR	354964	ArgumentList	p		354765	1					
ANR	354965	Argument	p		354765	0					
ANR	354966	Identifier	p		354765	0					
ANR	354967	Argument	ut . ut_line		354765	1					
ANR	354968	MemberAccess	ut . ut_line		354765	0					
ANR	354969	Identifier	ut		354765	0					
ANR	354970	Identifier	ut_line		354765	1					
ANR	354971	Argument	UNAMESZ		354765	2					
ANR	354972	Identifier	UNAMESZ		354765	0					
ANR	354973	IfStatement	"if ( ( ttyf = open ( p , O_WRONLY | O_NOCTTY | O_NONBLOCK ) ) >= 0 )"		354765	7					
ANR	354974	Condition	"( ttyf = open ( p , O_WRONLY | O_NOCTTY | O_NONBLOCK ) ) >= 0"	265:5:6395:6445	354765	0	True				
ANR	354975	RelationalExpression	"( ttyf = open ( p , O_WRONLY | O_NOCTTY | O_NONBLOCK ) ) >= 0"		354765	0		>=			
ANR	354976	AssignmentExpression	"ttyf = open ( p , O_WRONLY | O_NOCTTY | O_NONBLOCK )"		354765	0		=			
ANR	354977	Identifier	ttyf		354765	0					
ANR	354978	CallExpression	"open ( p , O_WRONLY | O_NOCTTY | O_NONBLOCK )"		354765	1					
ANR	354979	Callee	open		354765	0					
ANR	354980	Identifier	open		354765	0					
ANR	354981	ArgumentList	p		354765	1					
ANR	354982	Argument	p		354765	0					
ANR	354983	Identifier	p		354765	0					
ANR	354984	Argument	O_WRONLY | O_NOCTTY | O_NONBLOCK		354765	1					
ANR	354985	InclusiveOrExpression	O_WRONLY | O_NOCTTY | O_NONBLOCK		354765	0		|			
ANR	354986	Identifier	O_WRONLY		354765	0					
ANR	354987	InclusiveOrExpression	O_NOCTTY | O_NONBLOCK		354765	1		|			
ANR	354988	Identifier	O_NOCTTY		354765	0					
ANR	354989	Identifier	O_NONBLOCK		354765	1					
ANR	354990	PrimaryExpression	0		354765	1					
ANR	354991	CompoundStatement		58:58:1414:1414	354765	1					
ANR	354992	IfStatement	"if ( fstat ( ttyf , & statb ) == 0 && ( statb . st_mode & S_IWRITE ) )"		354765	0					
ANR	354993	Condition	"fstat ( ttyf , & statb ) == 0 && ( statb . st_mode & S_IWRITE )"	266:6:6456:6509	354765	0	True				
ANR	354994	AndExpression	"fstat ( ttyf , & statb ) == 0 && ( statb . st_mode & S_IWRITE )"		354765	0		&&			
ANR	354995	EqualityExpression	"fstat ( ttyf , & statb ) == 0"		354765	0		==			
ANR	354996	CallExpression	"fstat ( ttyf , & statb )"		354765	0					
ANR	354997	Callee	fstat		354765	0					
ANR	354998	Identifier	fstat		354765	0					
ANR	354999	ArgumentList	ttyf		354765	1					
ANR	355000	Argument	ttyf		354765	0					
ANR	355001	Identifier	ttyf		354765	0					
ANR	355002	Argument	& statb		354765	1					
ANR	355003	UnaryOperationExpression	& statb		354765	0					
ANR	355004	UnaryOperator	&		354765	0					
ANR	355005	Identifier	statb		354765	1					
ANR	355006	PrimaryExpression	0		354765	1					
ANR	355007	BitAndExpression	statb . st_mode & S_IWRITE		354765	1		&			
ANR	355008	MemberAccess	statb . st_mode		354765	0					
ANR	355009	Identifier	statb		354765	0					
ANR	355010	Identifier	st_mode		354765	1					
ANR	355011	Identifier	S_IWRITE		354765	1					
ANR	355012	CompoundStatement		59:62:1478:1478	354765	1					
ANR	355013	ExpressionStatement	"wrRet = write ( ttyf , pMsg , strlen ( ( char * ) pMsg ) )"	267:4:6518:6564	354765	0	True				
ANR	355014	AssignmentExpression	"wrRet = write ( ttyf , pMsg , strlen ( ( char * ) pMsg ) )"		354765	0		=			
ANR	355015	Identifier	wrRet		354765	0					
ANR	355016	CallExpression	"write ( ttyf , pMsg , strlen ( ( char * ) pMsg ) )"		354765	1					
ANR	355017	Callee	write		354765	0					
ANR	355018	Identifier	write		354765	0					
ANR	355019	ArgumentList	ttyf		354765	1					
ANR	355020	Argument	ttyf		354765	0					
ANR	355021	Identifier	ttyf		354765	0					
ANR	355022	Argument	pMsg		354765	1					
ANR	355023	Identifier	pMsg		354765	0					
ANR	355024	Argument	strlen ( ( char * ) pMsg )		354765	2					
ANR	355025	CallExpression	strlen ( ( char * ) pMsg )		354765	0					
ANR	355026	Callee	strlen		354765	0					
ANR	355027	Identifier	strlen		354765	0					
ANR	355028	ArgumentList	( char * ) pMsg		354765	1					
ANR	355029	Argument	( char * ) pMsg		354765	0					
ANR	355030	CastExpression	( char * ) pMsg		354765	0					
ANR	355031	CastTarget	char *		354765	0					
ANR	355032	Identifier	pMsg		354765	1					
ANR	355033	IfStatement	if ( Debug && wrRet == - 1 )		354765	1					
ANR	355034	Condition	Debug && wrRet == - 1	268:7:6573:6592	354765	0	True				
ANR	355035	AndExpression	Debug && wrRet == - 1		354765	0		&&			
ANR	355036	Identifier	Debug		354765	0					
ANR	355037	EqualityExpression	wrRet == - 1		354765	1		==			
ANR	355038	Identifier	wrRet		354765	0					
ANR	355039	UnaryOperationExpression	- 1		354765	1					
ANR	355040	UnaryOperator	-		354765	0					
ANR	355041	PrimaryExpression	1		354765	1					
ANR	355042	CompoundStatement		61:29:1561:1561	354765	1					
ANR	355043	ExpressionStatement	errnoSave = errno	270:5:6650:6667	354765	0	True				
ANR	355044	AssignmentExpression	errnoSave = errno		354765	0		=			
ANR	355045	Identifier	errnoSave		354765	0					
ANR	355046	Identifier	errno		354765	1					
ANR	355047	ExpressionStatement	"rs_strerror_r ( errno , ( char * ) szErr , sizeof ( szErr ) )"	271:5:6674:6723	354765	1	True				
ANR	355048	CallExpression	"rs_strerror_r ( errno , ( char * ) szErr , sizeof ( szErr ) )"		354765	0					
ANR	355049	Callee	rs_strerror_r		354765	0					
ANR	355050	Identifier	rs_strerror_r		354765	0					
ANR	355051	ArgumentList	errno		354765	1					
ANR	355052	Argument	errno		354765	0					
ANR	355053	Identifier	errno		354765	0					
ANR	355054	Argument	( char * ) szErr		354765	1					
ANR	355055	CastExpression	( char * ) szErr		354765	0					
ANR	355056	CastTarget	char *		354765	0					
ANR	355057	Identifier	szErr		354765	1					
ANR	355058	Argument	sizeof ( szErr )		354765	2					
ANR	355059	SizeofExpression	sizeof ( szErr )		354765	0					
ANR	355060	Sizeof	sizeof		354765	0					
ANR	355061	SizeofOperand	szErr		354765	1					
ANR	355062	ExpressionStatement	"dbgprintf ( ""write to terminal '%s' failed with [%d]:%s\\n"" , p , errnoSave , szErr )"	272:5:6730:6816	354765	2	True				
ANR	355063	CallExpression	"dbgprintf ( ""write to terminal '%s' failed with [%d]:%s\\n"" , p , errnoSave , szErr )"		354765	0					
ANR	355064	Callee	dbgprintf		354765	0					
ANR	355065	Identifier	dbgprintf		354765	0					
ANR	355066	ArgumentList	"""write to terminal '%s' failed with [%d]:%s\\n"""		354765	1					
ANR	355067	Argument	"""write to terminal '%s' failed with [%d]:%s\\n"""		354765	0					
ANR	355068	PrimaryExpression	"""write to terminal '%s' failed with [%d]:%s\\n"""		354765	0					
ANR	355069	Argument	p		354765	1					
ANR	355070	Identifier	p		354765	0					
ANR	355071	Argument	errnoSave		354765	2					
ANR	355072	Identifier	errnoSave		354765	0					
ANR	355073	Argument	szErr		354765	3					
ANR	355074	Identifier	szErr		354765	0					
ANR	355075	ExpressionStatement	close ( ttyf )	276:3:6832:6843	354765	1	True				
ANR	355076	CallExpression	close ( ttyf )		354765	0					
ANR	355077	Callee	close		354765	0					
ANR	355078	Identifier	close		354765	0					
ANR	355079	ArgumentList	ttyf		354765	1					
ANR	355080	Argument	ttyf		354765	0					
ANR	355081	Identifier	ttyf		354765	0					
ANR	355082	ExpressionStatement	endutent ( )	281:1:6887:6897	354765	14	True				
ANR	355083	CallExpression	endutent ( )		354765	0					
ANR	355084	Callee	endutent		354765	0					
ANR	355085	Identifier	endutent		354765	0					
ANR	355086	ArgumentList			354765	1					
ANR	355087	ExpressionStatement	RETiRet	282:1:6900:6907	354765	15	True				
ANR	355088	Identifier	RETiRet		354765	0					
ANR	355089	ReturnType	static rsRetVal		354765	1					
ANR	355090	Identifier	wallmsg		354765	2					
ANR	355091	ParameterList	"uchar * pMsg , instanceData * pData"		354765	3					
ANR	355092	Parameter	uchar * pMsg	207:24:4999:5009	354765	0	True				
ANR	355093	ParameterType	uchar *		354765	0					
ANR	355094	Identifier	pMsg		354765	1					
ANR	355095	Parameter	instanceData * pData	207:37:5012:5030	354765	1	True				
ANR	355096	ParameterType	instanceData *		354765	0					
ANR	355097	Identifier	pData		354765	1					
ANR	355098	CFGEntryNode	ENTRY		354765		True				
ANR	355099	CFGExitNode	EXIT		354765		True				
ANR	355100	Symbol	statb		354765						
ANR	355101	Symbol	UNAMESZ		354765						
ANR	355102	Symbol	pMsg		354765						
ANR	355103	Symbol	* * pData		354765						
ANR	355104	Symbol	* ut		354765						
ANR	355105	Symbol	O_NONBLOCK		354765						
ANR	355106	Symbol	& statb		354765						
ANR	355107	Symbol	errnoSave		354765						
ANR	355108	Symbol	wrRet		354765						
ANR	355109	Symbol	& ut		354765						
ANR	355110	Symbol	_PATH_DEV		354765						
ANR	355111	Symbol	pData -> uname		354765						
ANR	355112	Symbol	statb . st_mode		354765						
ANR	355113	Symbol	getutent		354765						
ANR	355114	Symbol	strncmp		354765						
ANR	355115	Symbol	strlen		354765						
ANR	355116	Symbol	ut . UTNAME		354765						
ANR	355117	Symbol	O_NOCTTY		354765						
ANR	355118	Symbol	USER_PROCESS		354765						
ANR	355119	Symbol	* ut . UTNAME		354765						
ANR	355120	Symbol	write		354765						
ANR	355121	Symbol	Debug		354765						
ANR	355122	Symbol	ut		354765						
ANR	355123	Symbol	* * i		354765						
ANR	355124	Symbol	errno		354765						
ANR	355125	Symbol	NULL		354765						
ANR	355126	Symbol	* * pData -> uname		354765						
ANR	355127	Symbol	* * * pData		354765						
ANR	355128	Symbol	ut . ut_line		354765						
ANR	355129	Symbol	i		354765						
ANR	355130	Symbol	fstat		354765						
ANR	355131	Symbol	ut . ut_type		354765						
ANR	355132	Symbol	MAXUNAMES		354765						
ANR	355133	Symbol	uptr		354765						
ANR	355134	Symbol	* pData		354765						
ANR	355135	Symbol	pData		354765						
ANR	355136	Symbol	p		354765						
ANR	355137	Symbol	S_IWRITE		354765						
ANR	355138	Symbol	szErr		354765						
ANR	355139	Symbol	* i		354765						
ANR	355140	Symbol	pData -> bIsWall		354765						
ANR	355141	Symbol	* pData -> uname		354765						
ANR	355142	Symbol	ttyf		354765						
ANR	355143	Symbol	O_WRONLY		354765						
ANR	355144	Symbol	open		354765						
ANR	355145	DeclStmt									
ANR	355146	Decl							BEGINtryResume CODESTARTtryResume ENDtryResume BEGINdoAction CODESTARTdoAction	BEGINtryResume CODESTARTtryResume ENDtryResume BEGINdoAction CODESTARTdoAction	dbgprintf
ANR	355147	Function	populateUsers	297:0:7073:8343							
ANR	355148	FunctionDef	"populateUsers (instanceData * pData , es_str_t * usrs)"		355147	0					
ANR	355149	CompoundStatement		299:0:7136:8343	355147	0					
ANR	355150	IdentifierDeclStatement	int i ;	300:1:7139:7144	355147	0	True				
ANR	355151	IdentifierDecl	i		355147	0					
ANR	355152	IdentifierDeclType	int		355147	0					
ANR	355153	Identifier	i		355147	1					
ANR	355154	IdentifierDeclStatement	int iDst ;	301:1:7147:7155	355147	1	True				
ANR	355155	IdentifierDecl	iDst		355147	0					
ANR	355156	IdentifierDeclType	int		355147	0					
ANR	355157	Identifier	iDst		355147	1					
ANR	355158	IdentifierDeclStatement	es_size_t iUsr ;	302:1:7158:7172	355147	2	True				
ANR	355159	IdentifierDecl	iUsr		355147	0					
ANR	355160	IdentifierDeclType	es_size_t		355147	0					
ANR	355161	Identifier	iUsr		355147	1					
ANR	355162	IdentifierDeclStatement	es_size_t len ;	303:1:7175:7188	355147	3	True				
ANR	355163	IdentifierDecl	len		355147	0					
ANR	355164	IdentifierDeclType	es_size_t		355147	0					
ANR	355165	Identifier	len		355147	1					
ANR	355166	IdentifierDeclStatement	uchar * c ;	304:1:7191:7199	355147	4	True				
ANR	355167	IdentifierDecl	* c		355147	0					
ANR	355168	IdentifierDeclType	uchar *		355147	0					
ANR	355169	Identifier	c		355147	1					
ANR	355170	ExpressionStatement	len = es_strlen ( usrs )	306:1:7203:7224	355147	5	True				
ANR	355171	AssignmentExpression	len = es_strlen ( usrs )		355147	0		=			
ANR	355172	Identifier	len		355147	0					
ANR	355173	CallExpression	es_strlen ( usrs )		355147	1					
ANR	355174	Callee	es_strlen		355147	0					
ANR	355175	Identifier	es_strlen		355147	0					
ANR	355176	ArgumentList	usrs		355147	1					
ANR	355177	Argument	usrs		355147	0					
ANR	355178	Identifier	usrs		355147	0					
ANR	355179	ExpressionStatement	c = es_getBufAddr ( usrs )	307:1:7227:7250	355147	6	True				
ANR	355180	AssignmentExpression	c = es_getBufAddr ( usrs )		355147	0		=			
ANR	355181	Identifier	c		355147	0					
ANR	355182	CallExpression	es_getBufAddr ( usrs )		355147	1					
ANR	355183	Callee	es_getBufAddr		355147	0					
ANR	355184	Identifier	es_getBufAddr		355147	0					
ANR	355185	ArgumentList	usrs		355147	1					
ANR	355186	Argument	usrs		355147	0					
ANR	355187	Identifier	usrs		355147	0					
ANR	355188	ExpressionStatement	pData -> bIsWall = 0	308:1:7253:7271	355147	7	True				
ANR	355189	AssignmentExpression	pData -> bIsWall = 0		355147	0		=			
ANR	355190	PtrMemberAccess	pData -> bIsWall		355147	0					
ANR	355191	Identifier	pData		355147	0					
ANR	355192	Identifier	bIsWall		355147	1					
ANR	355193	PrimaryExpression	0		355147	1					
ANR	355194	ExpressionStatement	iUsr = 0	309:1:7306:7314	355147	8	True				
ANR	355195	AssignmentExpression	iUsr = 0		355147	0		=			
ANR	355196	Identifier	iUsr		355147	0					
ANR	355197	PrimaryExpression	0		355147	1					
ANR	355198	ForStatement	for ( i = 0 ; i < MAXUNAMES && iUsr < len ; ++ i )		355147	9					
ANR	355199	ForInit	i = 0 ;	310:5:7321:7327	355147	0	True				
ANR	355200	AssignmentExpression	i = 0		355147	0		=			
ANR	355201	Identifier	i		355147	0					
ANR	355202	PrimaryExpression	0		355147	1					
ANR	355203	Condition	i < MAXUNAMES && iUsr < len	310:13:7329:7355	355147	1	True				
ANR	355204	AndExpression	i < MAXUNAMES && iUsr < len		355147	0		&&			
ANR	355205	RelationalExpression	i < MAXUNAMES		355147	0		<			
ANR	355206	Identifier	i		355147	0					
ANR	355207	Identifier	MAXUNAMES		355147	1					
ANR	355208	RelationalExpression	iUsr < len		355147	1		<			
ANR	355209	Identifier	iUsr		355147	0					
ANR	355210	Identifier	len		355147	1					
ANR	355211	UnaryExpression	++ i	310:43:7359:7361	355147	2	True				
ANR	355212	IncDec	++		355147	0					
ANR	355213	Identifier	i		355147	1					
ANR	355214	CompoundStatement		12:48:227:227	355147	3					
ANR	355215	ForStatement	"for ( iDst = 0 ; iDst < UNAMESZ && iUsr < len && c [ iUsr ] != ',' ; ++ iDst , ++ iUsr )"		355147	0					
ANR	355216	ForInit	iDst = 0 ;	311:8:7374:7389	355147	0	True				
ANR	355217	AssignmentExpression	iDst = 0		355147	0		=			
ANR	355218	Identifier	iDst		355147	0					
ANR	355219	PrimaryExpression	0		355147	1					
ANR	355220	Condition	"iDst < UNAMESZ && iUsr < len && c [ iUsr ] != ','"	312:8:7391:7436	355147	1	True				
ANR	355221	AndExpression	"iDst < UNAMESZ && iUsr < len && c [ iUsr ] != ','"		355147	0		&&			
ANR	355222	RelationalExpression	iDst < UNAMESZ		355147	0		<			
ANR	355223	Identifier	iDst		355147	0					
ANR	355224	Identifier	UNAMESZ		355147	1					
ANR	355225	AndExpression	"iUsr < len && c [ iUsr ] != ','"		355147	1		&&			
ANR	355226	RelationalExpression	iUsr < len		355147	0		<			
ANR	355227	Identifier	iUsr		355147	0					
ANR	355228	Identifier	len		355147	1					
ANR	355229	EqualityExpression	"c [ iUsr ] != ','"		355147	1		!=			
ANR	355230	ArrayIndexing	c [ iUsr ]		355147	0					
ANR	355231	Identifier	c		355147	0					
ANR	355232	Identifier	iUsr		355147	1					
ANR	355233	PrimaryExpression	"','"		355147	1					
ANR	355234	Expression	"++ iDst , ++ iUsr"	313:8:7446:7459	355147	2	True				
ANR	355235	UnaryExpression	++ iDst		355147	0					
ANR	355236	IncDec	++		355147	0					
ANR	355237	Identifier	iDst		355147	1					
ANR	355238	UnaryExpression	++ iUsr		355147	1					
ANR	355239	IncDec	++		355147	0					
ANR	355240	Identifier	iUsr		355147	1					
ANR	355241	CompoundStatement		15:24:325:325	355147	3					
ANR	355242	ExpressionStatement	pData -> uname [ i ] [ iDst ] = c [ iUsr ]	314:3:7467:7498	355147	0	True				
ANR	355243	AssignmentExpression	pData -> uname [ i ] [ iDst ] = c [ iUsr ]		355147	0		=			
ANR	355244	ArrayIndexing	pData -> uname [ i ] [ iDst ]		355147	0					
ANR	355245	ArrayIndexing	pData -> uname [ i ]		355147	0					
ANR	355246	PtrMemberAccess	pData -> uname		355147	0					
ANR	355247	Identifier	pData		355147	0					
ANR	355248	Identifier	uname		355147	1					
ANR	355249	Identifier	i		355147	1					
ANR	355250	Identifier	iDst		355147	1					
ANR	355251	ArrayIndexing	c [ iUsr ]		355147	1					
ANR	355252	Identifier	c		355147	0					
ANR	355253	Identifier	iUsr		355147	1					
ANR	355254	ExpressionStatement	pData -> uname [ i ] [ iDst ] = '\\0'	316:2:7506:7534	355147	1	True				
ANR	355255	AssignmentExpression	pData -> uname [ i ] [ iDst ] = '\\0'		355147	0		=			
ANR	355256	ArrayIndexing	pData -> uname [ i ] [ iDst ]		355147	0					
ANR	355257	ArrayIndexing	pData -> uname [ i ]		355147	0					
ANR	355258	PtrMemberAccess	pData -> uname		355147	0					
ANR	355259	Identifier	pData		355147	0					
ANR	355260	Identifier	uname		355147	1					
ANR	355261	Identifier	i		355147	1					
ANR	355262	Identifier	iDst		355147	1					
ANR	355263	PrimaryExpression	'\\0'		355147	1					
ANR	355264	ExpressionStatement	"DBGPRINTF ( ""omusrmsg: send to user '%s'\\n"" , pData -> uname [ i ] )"	317:2:7538:7597	355147	2	True				
ANR	355265	CallExpression	"DBGPRINTF ( ""omusrmsg: send to user '%s'\\n"" , pData -> uname [ i ] )"		355147	0					
ANR	355266	Callee	DBGPRINTF		355147	0					
ANR	355267	Identifier	DBGPRINTF		355147	0					
ANR	355268	ArgumentList	"""omusrmsg: send to user '%s'\\n"""		355147	1					
ANR	355269	Argument	"""omusrmsg: send to user '%s'\\n"""		355147	0					
ANR	355270	PrimaryExpression	"""omusrmsg: send to user '%s'\\n"""		355147	0					
ANR	355271	Argument	pData -> uname [ i ]		355147	1					
ANR	355272	ArrayIndexing	pData -> uname [ i ]		355147	0					
ANR	355273	PtrMemberAccess	pData -> uname		355147	0					
ANR	355274	Identifier	pData		355147	0					
ANR	355275	Identifier	uname		355147	1					
ANR	355276	Identifier	i		355147	1					
ANR	355277	IfStatement	"if ( iUsr < len && c [ iUsr ] != ',' )"		355147	3					
ANR	355278	Condition	"iUsr < len && c [ iUsr ] != ','"	318:5:7604:7631	355147	0	True				
ANR	355279	AndExpression	"iUsr < len && c [ iUsr ] != ','"		355147	0		&&			
ANR	355280	RelationalExpression	iUsr < len		355147	0		<			
ANR	355281	Identifier	iUsr		355147	0					
ANR	355282	Identifier	len		355147	1					
ANR	355283	EqualityExpression	"c [ iUsr ] != ','"		355147	1		!=			
ANR	355284	ArrayIndexing	c [ iUsr ]		355147	0					
ANR	355285	Identifier	c		355147	0					
ANR	355286	Identifier	iUsr		355147	1					
ANR	355287	PrimaryExpression	"','"		355147	1					
ANR	355288	CompoundStatement		20:35:497:497	355147	1					
ANR	355289	Statement	errmsg	319:3:7639:7644	355147	0	True				
ANR	355290	Statement	.	319:9:7645:7645	355147	1	True				
ANR	355291	Statement	LogError	319:10:7646:7653	355147	2	True				
ANR	355292	Statement	(	319:18:7654:7654	355147	3	True				
ANR	355293	Statement	0	319:19:7655:7655	355147	4	True				
ANR	355294	Statement	","	319:20:7656:7656	355147	5	True				
ANR	355295	Statement	RS_RET_ERR	319:22:7658:7667	355147	6	True				
ANR	355296	Statement	","	319:32:7668:7668	355147	7	True				
ANR	355297	Statement	"""user name '%s...' too long - """	319:34:7670:7700	355147	8	True				
ANR	355298	Statement	"""ignored"""	320:4:7706:7714	355147	9	True				
ANR	355299	Statement	","	320:13:7715:7715	355147	10	True				
ANR	355300	Statement	pData	320:15:7717:7721	355147	11	True				
ANR	355301	Statement	->	320:20:7722:7723	355147	12	True				
ANR	355302	Statement	uname	320:22:7724:7728	355147	13	True				
ANR	355303	Statement	[	320:27:7729:7729	355147	14	True				
ANR	355304	Statement	i	320:28:7730:7730	355147	15	True				
ANR	355305	Statement	]	320:29:7731:7731	355147	16	True				
ANR	355306	Statement	)	320:30:7732:7732	355147	17	True				
ANR	355307	ExpressionStatement		320:31:7733:7733	355147	18	True				
ANR	355308	ExpressionStatement	-- i	321:3:7738:7741	355147	19	True				
ANR	355309	UnaryExpression	-- i		355147	0					
ANR	355310	IncDec	--		355147	0					
ANR	355311	Identifier	i		355147	1					
ANR	355312	ExpressionStatement	++ iUsr	322:3:7746:7752	355147	20	True				
ANR	355313	UnaryExpression	++ iUsr		355147	0					
ANR	355314	IncDec	++		355147	0					
ANR	355315	Identifier	iUsr		355147	1					
ANR	355316	WhileStatement	"while ( iUsr < len && c [ iUsr ] != ',' )"		355147	21					
ANR	355317	Condition	"iUsr < len && c [ iUsr ] != ','"	323:9:7763:7790	355147	0	True				
ANR	355318	AndExpression	"iUsr < len && c [ iUsr ] != ','"		355147	0		&&			
ANR	355319	RelationalExpression	iUsr < len		355147	0		<			
ANR	355320	Identifier	iUsr		355147	0					
ANR	355321	Identifier	len		355147	1					
ANR	355322	EqualityExpression	"c [ iUsr ] != ','"		355147	1		!=			
ANR	355323	ArrayIndexing	c [ iUsr ]		355147	0					
ANR	355324	Identifier	c		355147	0					
ANR	355325	Identifier	iUsr		355147	1					
ANR	355326	PrimaryExpression	"','"		355147	1					
ANR	355327	ExpressionStatement	++ iUsr	324:4:7797:7803	355147	1	True				
ANR	355328	UnaryExpression	++ iUsr		355147	0					
ANR	355329	IncDec	++		355147	0					
ANR	355330	Identifier	iUsr		355147	1					
ANR	355331	ElseStatement	else		355147	0					
ANR	355332	IfStatement	if ( iDst == 0 )		355147	0					
ANR	355333	Condition	iDst == 0	325:12:7841:7849	355147	0	True				
ANR	355334	EqualityExpression	iDst == 0		355147	0		==			
ANR	355335	Identifier	iDst		355147	0					
ANR	355336	PrimaryExpression	0		355147	1					
ANR	355337	CompoundStatement		27:23:715:715	355147	1					
ANR	355338	Statement	errmsg	326:3:7857:7862	355147	0	True				
ANR	355339	Statement	.	326:9:7863:7863	355147	1	True				
ANR	355340	Statement	LogError	326:10:7864:7871	355147	2	True				
ANR	355341	Statement	(	326:18:7872:7872	355147	3	True				
ANR	355342	Statement	0	326:19:7873:7873	355147	4	True				
ANR	355343	Statement	","	326:20:7874:7874	355147	5	True				
ANR	355344	Statement	RS_RET_ERR	326:22:7876:7885	355147	6	True				
ANR	355345	Statement	","	326:32:7886:7886	355147	7	True				
ANR	355346	Statement	"""no user name given - """	326:34:7888:7910	355147	8	True				
ANR	355347	Statement	"""ignored"""	327:4:7916:7924	355147	9	True				
ANR	355348	Statement	)	327:13:7925:7925	355147	10	True				
ANR	355349	ExpressionStatement		327:14:7926:7926	355147	11	True				
ANR	355350	ExpressionStatement	-- i	328:3:7931:7934	355147	12	True				
ANR	355351	UnaryExpression	-- i		355147	0					
ANR	355352	IncDec	--		355147	0					
ANR	355353	Identifier	i		355147	1					
ANR	355354	ExpressionStatement	++ iUsr	329:3:7939:7945	355147	13	True				
ANR	355355	UnaryExpression	++ iUsr		355147	0					
ANR	355356	IncDec	++		355147	0					
ANR	355357	Identifier	iUsr		355147	1					
ANR	355358	WhileStatement	"while ( iUsr < len && c [ iUsr ] != ',' )"		355147	14					
ANR	355359	Condition	"iUsr < len && c [ iUsr ] != ','"	330:9:7956:7983	355147	0	True				
ANR	355360	AndExpression	"iUsr < len && c [ iUsr ] != ','"		355147	0		&&			
ANR	355361	RelationalExpression	iUsr < len		355147	0		<			
ANR	355362	Identifier	iUsr		355147	0					
ANR	355363	Identifier	len		355147	1					
ANR	355364	EqualityExpression	"c [ iUsr ] != ','"		355147	1		!=			
ANR	355365	ArrayIndexing	c [ iUsr ]		355147	0					
ANR	355366	Identifier	c		355147	0					
ANR	355367	Identifier	iUsr		355147	1					
ANR	355368	PrimaryExpression	"','"		355147	1					
ANR	355369	ExpressionStatement	++ iUsr	331:4:7990:7996	355147	1	True				
ANR	355370	UnaryExpression	++ iUsr		355147	0					
ANR	355371	IncDec	++		355147	0					
ANR	355372	Identifier	iUsr		355147	1					
ANR	355373	IfStatement	if ( iUsr < len )		355147	4					
ANR	355374	Condition	iUsr < len	333:5:8031:8040	355147	0	True				
ANR	355375	RelationalExpression	iUsr < len		355147	0		<			
ANR	355376	Identifier	iUsr		355147	0					
ANR	355377	Identifier	len		355147	1					
ANR	355378	CompoundStatement		35:17:906:906	355147	1					
ANR	355379	ExpressionStatement	++ iUsr	334:3:8048:8054	355147	0	True				
ANR	355380	UnaryExpression	++ iUsr		355147	0					
ANR	355381	IncDec	++		355147	0					
ANR	355382	Identifier	iUsr		355147	1					
ANR	355383	WhileStatement	while ( iUsr < len && isspace ( c [ iUsr ] ) )		355147	1					
ANR	355384	Condition	iUsr < len && isspace ( c [ iUsr ] )	335:9:8080:8109	355147	0	True				
ANR	355385	AndExpression	iUsr < len && isspace ( c [ iUsr ] )		355147	0		&&			
ANR	355386	RelationalExpression	iUsr < len		355147	0		<			
ANR	355387	Identifier	iUsr		355147	0					
ANR	355388	Identifier	len		355147	1					
ANR	355389	CallExpression	isspace ( c [ iUsr ] )		355147	1					
ANR	355390	Callee	isspace		355147	0					
ANR	355391	Identifier	isspace		355147	0					
ANR	355392	ArgumentList	c [ iUsr ]		355147	1					
ANR	355393	Argument	c [ iUsr ]		355147	0					
ANR	355394	ArrayIndexing	c [ iUsr ]		355147	0					
ANR	355395	Identifier	c		355147	0					
ANR	355396	Identifier	iUsr		355147	1					
ANR	355397	ExpressionStatement	++ iUsr	336:4:8116:8122	355147	1	True				
ANR	355398	UnaryExpression	++ iUsr		355147	0					
ANR	355399	IncDec	++		355147	0					
ANR	355400	Identifier	iUsr		355147	1					
ANR	355401	IfStatement	if ( i == MAXUNAMES && iUsr != len )		355147	10					
ANR	355402	Condition	i == MAXUNAMES && iUsr != len	339:4:8157:8185	355147	0	True				
ANR	355403	AndExpression	i == MAXUNAMES && iUsr != len		355147	0		&&			
ANR	355404	EqualityExpression	i == MAXUNAMES		355147	0		==			
ANR	355405	Identifier	i		355147	0					
ANR	355406	Identifier	MAXUNAMES		355147	1					
ANR	355407	EqualityExpression	iUsr != len		355147	1		!=			
ANR	355408	Identifier	iUsr		355147	0					
ANR	355409	Identifier	len		355147	1					
ANR	355410	CompoundStatement		41:35:1051:1051	355147	1					
ANR	355411	Statement	errmsg	340:2:8192:8197	355147	0	True				
ANR	355412	Statement	.	340:8:8198:8198	355147	1	True				
ANR	355413	Statement	LogError	340:9:8199:8206	355147	2	True				
ANR	355414	Statement	(	340:17:8207:8207	355147	3	True				
ANR	355415	Statement	0	340:18:8208:8208	355147	4	True				
ANR	355416	Statement	","	340:19:8209:8209	355147	5	True				
ANR	355417	Statement	RS_RET_ERR	340:21:8211:8220	355147	6	True				
ANR	355418	Statement	","	340:31:8221:8221	355147	7	True				
ANR	355419	Statement	"""omusrmsg supports only up to %d """	340:33:8223:8256	355147	8	True				
ANR	355420	Statement	"""user names in a single action - all others have been ignored"""	341:3:8261:8322	355147	9	True				
ANR	355421	Statement	","	341:65:8323:8323	355147	10	True				
ANR	355422	Statement	MAXUNAMES	342:3:8328:8336	355147	11	True				
ANR	355423	Statement	)	342:12:8337:8337	355147	12	True				
ANR	355424	ExpressionStatement		342:13:8338:8338	355147	13	True				
ANR	355425	ReturnType	static void		355147	1					
ANR	355426	Identifier	populateUsers		355147	2					
ANR	355427	ParameterList	"instanceData * pData , es_str_t * usrs"		355147	3					
ANR	355428	Parameter	instanceData * pData	298:14:7099:7117	355147	0	True				
ANR	355429	ParameterType	instanceData *		355147	0					
ANR	355430	Identifier	pData		355147	1					
ANR	355431	Parameter	es_str_t * usrs	298:35:7120:7133	355147	1	True				
ANR	355432	ParameterType	es_str_t *		355147	0					
ANR	355433	Identifier	usrs		355147	1					
ANR	355434	CFGEntryNode	ENTRY		355147		True				
ANR	355435	CFGExitNode	EXIT		355147		True				
ANR	355436	Symbol	* * i		355147						
ANR	355437	Symbol	c		355147						
ANR	355438	Symbol	UNAMESZ		355147						
ANR	355439	Symbol	* * pData		355147						
ANR	355440	Symbol	* * * pData		355147						
ANR	355441	Symbol	* * pData -> uname		355147						
ANR	355442	Symbol	isspace		355147						
ANR	355443	Symbol	usrs		355147						
ANR	355444	Symbol	i		355147						
ANR	355445	Symbol	pData -> uname		355147						
ANR	355446	Symbol	iDst		355147						
ANR	355447	Symbol	MAXUNAMES		355147						
ANR	355448	Symbol	* c		355147						
ANR	355449	Symbol	* iDst		355147						
ANR	355450	Symbol	es_getBufAddr		355147						
ANR	355451	Symbol	* pData		355147						
ANR	355452	Symbol	pData		355147						
ANR	355453	Symbol	* i		355147						
ANR	355454	Symbol	len		355147						
ANR	355455	Symbol	pData -> bIsWall		355147						
ANR	355456	Symbol	* pData -> uname		355147						
ANR	355457	Symbol	es_strlen		355147						
ANR	355458	Symbol	iUsr		355147						
ANR	355459	Symbol	* iUsr		355147						
ANR	355460	Function	setInstParamDefaults	347:0:8347:8455							
ANR	355461	FunctionDef	setInstParamDefaults (instanceData * pData)		355460	0					
ANR	355462	CompoundStatement		349:0:8408:8455	355460	0					
ANR	355463	ExpressionStatement	pData -> bIsWall = 0	350:1:8411:8429	355460	0	True				
ANR	355464	AssignmentExpression	pData -> bIsWall = 0		355460	0		=			
ANR	355465	PtrMemberAccess	pData -> bIsWall		355460	0					
ANR	355466	Identifier	pData		355460	0					
ANR	355467	Identifier	bIsWall		355460	1					
ANR	355468	PrimaryExpression	0		355460	1					
ANR	355469	ExpressionStatement	pData -> tplName = NULL	351:1:8432:8453	355460	1	True				
ANR	355470	AssignmentExpression	pData -> tplName = NULL		355460	0		=			
ANR	355471	PtrMemberAccess	pData -> tplName		355460	0					
ANR	355472	Identifier	pData		355460	0					
ANR	355473	Identifier	tplName		355460	1					
ANR	355474	Identifier	NULL		355460	1					
ANR	355475	ReturnType	static inline void		355460	1					
ANR	355476	Identifier	setInstParamDefaults		355460	2					
ANR	355477	ParameterList	instanceData * pData		355460	3					
ANR	355478	Parameter	instanceData * pData	348:21:8387:8405	355460	0	True				
ANR	355479	ParameterType	instanceData *		355460	0					
ANR	355480	Identifier	pData		355460	1					
ANR	355481	CFGEntryNode	ENTRY		355460		True				
ANR	355482	CFGExitNode	EXIT		355460		True				
ANR	355483	Symbol	pData		355460						
ANR	355484	Symbol	pData -> tplName		355460						
ANR	355485	Symbol	NULL		355460						
ANR	355486	Symbol	pData -> bIsWall		355460						
ANR	355487	Symbol	* pData		355460						
ANR	355488	DeclStmt									
ANR	355489	Decl							struct cnfparamvals	struct cnfparamvals *	pvals
ANR	355490	DeclStmt									
ANR	355491	Decl							int	int	i
ANR	355492	DeclStmt									
ANR	355493	Decl							CODE_STD_FINALIZERnewActInst	CODE_STD_FINALIZERnewActInst	cnfparamvalsDestruct
ANR	355494	DeclStmt									
ANR	355495	Decl							ENDnewActInst BEGINparseSelectorAct es_str_t	ENDnewActInst BEGINparseSelectorAct es_str_t *	usrs
ANR	355496	DeclStmt									
ANR	355497	Decl							int	int	bHadWarning
ANR	355498	DeclStmt									
ANR	355499	Decl							CODESTARTmodInit INITLegCnfVars	CODESTARTmodInit INITLegCnfVars *	ipIFVersProvided
ANR	355500	DeclStmt									
ANR	355501	Decl							CODEmodInit_QueryRegCFSLineHdlr	"CODEmodInit_QueryRegCFSLineHdlr ( objUse ( errmsg , CORE_COMPONENT ) )"	CHKiRet
