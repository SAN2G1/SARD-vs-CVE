command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11574	File	data/converged/CVE-2017-12588_rsyslog/contrib_mmgrok_mmgrok.c								
ANR	11575	DeclStmt									
ANR	11576	Decl							MODULE_TYPE_OUTPUT MODULE_TYPE_NOKEEP	MODULE_TYPE_OUTPUT MODULE_TYPE_NOKEEP	MODULE_CNFNAME
ANR	11577	ClassDef	result_s	35:8:753:873							
ANR	11578	DeclStmt									
ANR	11579	Decl							char	char *	key
ANR	11580	DeclStmt									
ANR	11581	Decl							int	int	key_len
ANR	11582	DeclStmt									
ANR	11583	Decl							const char	const char *	value
ANR	11584	DeclStmt									
ANR	11585	Decl							int	int	value_len
ANR	11586	DeclStmt									
ANR	11587	Decl							char	char *	type
ANR	11588	DeclStmt									
ANR	11589	Decl							result_s	result_s	result_t
ANR	11590	ClassDef	_instanceData	44:8:907:1125							
ANR	11591	DeclStmt									
ANR	11592	Decl							char	char *	pszPatternDir
ANR	11593	DeclStmt									
ANR	11594	Decl							char	char *	pszMatch
ANR	11595	DeclStmt									
ANR	11596	Decl							char	char *	pszSource
ANR	11597	DeclStmt									
ANR	11598	Decl							char	char *	pszTarget
ANR	11599	DeclStmt									
ANR	11600	Decl							smsg_t	smsg_t *	pmsg
ANR	11601	DeclStmt									
ANR	11602	Decl							_instanceData	_instanceData	instanceData
ANR	11603	ClassDef	wrkrInstanceData	53:8:1136:1205							
ANR	11604	DeclStmt									
ANR	11605	Decl							instanceData	instanceData *	pData
ANR	11606	DeclStmt									
ANR	11607	Decl							wrkrInstanceData	wrkrInstanceData	wrkrInstanceData_t
ANR	11608	ClassDef	modConfData_s	57:0:1208:1284							
ANR	11609	DeclStmt									
ANR	11610	Decl							rsconf_t	rsconf_t *	pConf
ANR	11611	DeclStmt									
ANR	11612	Decl							modConfData_t	modConfData_t *	loadModConf
ANR	11613	DeclStmt									
ANR	11614	Decl							modConfData_t	modConfData_t *	runModConf
ANR	11615	DeclStmt									
ANR	11616	Decl							struct cnfparamdescr	struct cnfparamdescr [ ]	actpdescr
ANR	11617	DeclStmt									
ANR	11618	Decl							struct cnfparamblk	struct cnfparamblk	actpblk
ANR	11619	DeclStmt									
ANR	11620	Decl							BEGINbeginCnfLoad CODESTARTbeginCnfLoad	BEGINbeginCnfLoad CODESTARTbeginCnfLoad	loadModConf
ANR	11621	DeclStmt									
ANR	11622	Decl							ENDbeginCnfLoad BEGINendCnfLoad CODESTARTendCnfLoad ENDendCnfLoad BEGINcheckCnf CODESTARTcheckCnf ENDcheckCnf BEGINactivateCnf CODESTARTactivateCnf	ENDbeginCnfLoad BEGINendCnfLoad CODESTARTendCnfLoad ENDendCnfLoad BEGINcheckCnf CODESTARTcheckCnf ENDcheckCnf BEGINactivateCnf CODESTARTactivateCnf	runModConf
ANR	11623	DeclStmt									
ANR	11624	Decl							ENDactivateCnf BEGINfreeCnf CODESTARTfreeCnf ENDfreeCnf BEGINcreateInstance CODESTARTcreateInstance ENDcreateInstance BEGINcreateWrkrInstance CODESTARTcreateWrkrInstance ENDcreateWrkrInstance BEGINisCompatibleWithFeature CODESTARTisCompatibleWithFeature ENDisCompatibleWithFeature BEGINfreeInstance CODESTARTfreeInstance	ENDactivateCnf BEGINfreeCnf CODESTARTfreeCnf ENDfreeCnf BEGINcreateInstance CODESTARTcreateInstance ENDcreateInstance BEGINcreateWrkrInstance CODESTARTcreateWrkrInstance ENDcreateWrkrInstance BEGINisCompatibleWithFeature CODESTARTisCompatibleWithFeature ENDisCompatibleWithFeature BEGINfreeInstance CODESTARTfreeInstance	free
ANR	11625	Function	setInstParamDefaults	127:0:2527:2732							
ANR	11626	FunctionDef	setInstParamDefaults (instanceData * pData)		11625	0					
ANR	11627	CompoundStatement		128:0:2588:2732	11625	0					
ANR	11628	ExpressionStatement	pData -> pszPatternDir = NULL	129:4:2594:2620	11625	0	True				
ANR	11629	AssignmentExpression	pData -> pszPatternDir = NULL		11625	0		=			
ANR	11630	PtrMemberAccess	pData -> pszPatternDir		11625	0					
ANR	11631	Identifier	pData		11625	0					
ANR	11632	Identifier	pszPatternDir		11625	1					
ANR	11633	Identifier	NULL		11625	1					
ANR	11634	ExpressionStatement	pData -> pszMatch = NULL	130:4:2626:2648	11625	1	True				
ANR	11635	AssignmentExpression	pData -> pszMatch = NULL		11625	0		=			
ANR	11636	PtrMemberAccess	pData -> pszMatch		11625	0					
ANR	11637	Identifier	pData		11625	0					
ANR	11638	Identifier	pszMatch		11625	1					
ANR	11639	Identifier	NULL		11625	1					
ANR	11640	ExpressionStatement	pData -> pszSource = NULL	131:4:2654:2677	11625	2	True				
ANR	11641	AssignmentExpression	pData -> pszSource = NULL		11625	0		=			
ANR	11642	PtrMemberAccess	pData -> pszSource		11625	0					
ANR	11643	Identifier	pData		11625	0					
ANR	11644	Identifier	pszSource		11625	1					
ANR	11645	Identifier	NULL		11625	1					
ANR	11646	ExpressionStatement	pData -> pszTarget = NULL	132:4:2683:2706	11625	3	True				
ANR	11647	AssignmentExpression	pData -> pszTarget = NULL		11625	0		=			
ANR	11648	PtrMemberAccess	pData -> pszTarget		11625	0					
ANR	11649	Identifier	pData		11625	0					
ANR	11650	Identifier	pszTarget		11625	1					
ANR	11651	Identifier	NULL		11625	1					
ANR	11652	ExpressionStatement	pData -> pmsg = NULL	133:4:2712:2730	11625	4	True				
ANR	11653	AssignmentExpression	pData -> pmsg = NULL		11625	0		=			
ANR	11654	PtrMemberAccess	pData -> pmsg		11625	0					
ANR	11655	Identifier	pData		11625	0					
ANR	11656	Identifier	pmsg		11625	1					
ANR	11657	Identifier	NULL		11625	1					
ANR	11658	ReturnType	static inline void		11625	1					
ANR	11659	Identifier	setInstParamDefaults		11625	2					
ANR	11660	ParameterList	instanceData * pData		11625	3					
ANR	11661	Parameter	instanceData * pData	127:40:2567:2585	11625	0	True				
ANR	11662	ParameterType	instanceData *		11625	0					
ANR	11663	Identifier	pData		11625	1					
ANR	11664	CFGEntryNode	ENTRY		11625		True				
ANR	11665	CFGExitNode	EXIT		11625		True				
ANR	11666	Symbol	pData		11625						
ANR	11667	Symbol	pData -> pszPatternDir		11625						
ANR	11668	Symbol	NULL		11625						
ANR	11669	Symbol	pData -> pszTarget		11625						
ANR	11670	Symbol	pData -> pszMatch		11625						
ANR	11671	Symbol	pData -> pszSource		11625						
ANR	11672	Symbol	pData -> pmsg		11625						
ANR	11673	Symbol	* pData		11625						
ANR	11674	DeclStmt									
ANR	11675	Decl							struct cnfparamvals	struct cnfparamvals *	pvals
ANR	11676	DeclStmt									
ANR	11677	Decl							int	int	i
ANR	11678	DeclStmt									
ANR	11679	Decl							CODESTARTnewActInst	CODESTARTnewActInst	DBGPRINTF
ANR	11680	DeclStmt									
ANR	11681	Decl							CODE_STD_FINALIZERnewActInst	CODE_STD_FINALIZERnewActInst	cnfparamvalsDestruct
ANR	11682	DeclStmt									
ANR	11683	Decl							ENDnewActInst BEGINdbgPrintInstInfo CODESTARTdbgPrintInstInfo	ENDnewActInst BEGINdbgPrintInstInfo CODESTARTdbgPrintInstInfo	DBGPRINTF
ANR	11684	Function	CreateGrok	192:0:4248:4451							
ANR	11685	FunctionDef	CreateGrok ()		11684	0					
ANR	11686	CompoundStatement		193:0:4283:4451	11684	0					
ANR	11687	IdentifierDeclStatement	grok_t * grok = grok_new ( ) ;	194:4:4289:4315	11684	0	True				
ANR	11688	IdentifierDecl	* grok = grok_new ( )		11684	0					
ANR	11689	IdentifierDeclType	grok_t *		11684	0					
ANR	11690	Identifier	grok		11684	1					
ANR	11691	AssignmentExpression	* grok = grok_new ( )		11684	2		=			
ANR	11692	Identifier	grok		11684	0					
ANR	11693	CallExpression	grok_new ( )		11684	1					
ANR	11694	Callee	grok_new		11684	0					
ANR	11695	Identifier	grok_new		11684	0					
ANR	11696	ArgumentList			11684	1					
ANR	11697	IfStatement	if ( grok == NULL )		11684	1					
ANR	11698	Condition	grok == NULL	195:7:4324:4335	11684	0	True				
ANR	11699	EqualityExpression	grok == NULL		11684	0		==			
ANR	11700	Identifier	grok		11684	0					
ANR	11701	Identifier	NULL		11684	1					
ANR	11702	CompoundStatement		3:20:53:53	11684	1					
ANR	11703	ExpressionStatement	"DBGPRINTF ( ""mmgrok: create a grok faile!"" )"	196:8:4347:4388	11684	0	True				
ANR	11704	CallExpression	"DBGPRINTF ( ""mmgrok: create a grok faile!"" )"		11684	0					
ANR	11705	Callee	DBGPRINTF		11684	0					
ANR	11706	Identifier	DBGPRINTF		11684	0					
ANR	11707	ArgumentList	"""mmgrok: create a grok faile!"""		11684	1					
ANR	11708	Argument	"""mmgrok: create a grok faile!"""		11684	0					
ANR	11709	PrimaryExpression	"""mmgrok: create a grok faile!"""		11684	0					
ANR	11710	ExpressionStatement	exit ( 1 )	197:8:4398:4405	11684	1	True				
ANR	11711	CallExpression	exit ( 1 )		11684	0					
ANR	11712	Callee	exit		11684	0					
ANR	11713	Identifier	exit		11684	0					
ANR	11714	ArgumentList	1		11684	1					
ANR	11715	Argument	1		11684	0					
ANR	11716	PrimaryExpression	1		11684	0					
ANR	11717	ExpressionStatement	grok_init ( grok )	199:4:4417:4432	11684	2	True				
ANR	11718	CallExpression	grok_init ( grok )		11684	0					
ANR	11719	Callee	grok_init		11684	0					
ANR	11720	Identifier	grok_init		11684	0					
ANR	11721	ArgumentList	grok		11684	1					
ANR	11722	Argument	grok		11684	0					
ANR	11723	Identifier	grok		11684	0					
ANR	11724	ReturnStatement	return grok ;	200:4:4438:4449	11684	3	True				
ANR	11725	Identifier	grok		11684	0					
ANR	11726	ReturnType	static inline grok_t *		11684	1					
ANR	11727	Identifier	CreateGrok		11684	2					
ANR	11728	ParameterList			11684	3					
ANR	11729	CFGEntryNode	ENTRY		11684		True				
ANR	11730	CFGExitNode	EXIT		11684		True				
ANR	11731	Symbol	grok_new		11684						
ANR	11732	Symbol	NULL		11684						
ANR	11733	Symbol	grok		11684						
ANR	11734	Function	smsg_to_json	204:0:4503:5365							
ANR	11735	FunctionDef	"smsg_to_json (GList * list , instanceData * pData)"		11734	0					
ANR	11736	CompoundStatement		206:0:4566:5365	11734	0					
ANR	11737	IdentifierDeclStatement	GList * it = list ;	207:4:4572:4587	11734	0	True				
ANR	11738	IdentifierDecl	* it = list		11734	0					
ANR	11739	IdentifierDeclType	GList *		11734	0					
ANR	11740	Identifier	it		11734	1					
ANR	11741	AssignmentExpression	* it = list		11734	2		=			
ANR	11742	Identifier	list		11734	0					
ANR	11743	Identifier	list		11734	1					
ANR	11744	IdentifierDeclStatement	struct json_object * json ;	209:4:4594:4618	11734	1	True				
ANR	11745	IdentifierDecl	* json		11734	0					
ANR	11746	IdentifierDeclType	struct json_object *		11734	0					
ANR	11747	Identifier	json		11734	1					
ANR	11748	IdentifierDeclStatement	struct json_object * jval ;	210:4:4624:4648	11734	2	True				
ANR	11749	IdentifierDecl	* jval		11734	0					
ANR	11750	IdentifierDeclType	struct json_object *		11734	0					
ANR	11751	Identifier	jval		11734	1					
ANR	11752	ExpressionStatement	DEFiRet	212:4:4659:4666	11734	3	True				
ANR	11753	Identifier	DEFiRet		11734	0					
ANR	11754	ExpressionStatement	json = json_object_new_object ( )	214:4:4677:4708	11734	4	True				
ANR	11755	AssignmentExpression	json = json_object_new_object ( )		11734	0		=			
ANR	11756	Identifier	json		11734	0					
ANR	11757	CallExpression	json_object_new_object ( )		11734	1					
ANR	11758	Callee	json_object_new_object		11734	0					
ANR	11759	Identifier	json_object_new_object		11734	0					
ANR	11760	ArgumentList			11734	1					
ANR	11761	IfStatement	if ( json == NULL )		11734	5					
ANR	11762	Condition	json == NULL	215:7:4717:4728	11734	0	True				
ANR	11763	EqualityExpression	json == NULL		11734	0		==			
ANR	11764	Identifier	json		11734	0					
ANR	11765	Identifier	NULL		11734	1					
ANR	11766	CompoundStatement		11:4:168:168	11734	1					
ANR	11767	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	217:12:4749:4775	11734	0	True				
ANR	11768	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		11734	0					
ANR	11769	Callee	ABORT_FINALIZE		11734	0					
ANR	11770	Identifier	ABORT_FINALIZE		11734	0					
ANR	11771	ArgumentList	RS_RET_ERR		11734	1					
ANR	11772	Argument	RS_RET_ERR		11734	0					
ANR	11773	Identifier	RS_RET_ERR		11734	0					
ANR	11774	ForStatement	for ( ; it ; it = it -> next )		11734	6					
ANR	11775	Condition	it	219:9:4792:4793	11734	0	True				
ANR	11776	Identifier	it		11734	0					
ANR	11777	AssignmentExpression	it = it -> next	219:12:4795:4806	11734	1	True	=			
ANR	11778	Identifier	it		11734	0					
ANR	11779	PtrMemberAccess	it -> next		11734	1					
ANR	11780	Identifier	it		11734	0					
ANR	11781	Identifier	next		11734	1					
ANR	11782	CompoundStatement		20:1:472:513	11734	2					
ANR	11783	IdentifierDeclStatement	int key_len = ( ( result_t * ) it -> data ) -> key_len ;	221:1:4816:4861	11734	0	True				
ANR	11784	IdentifierDecl	key_len = ( ( result_t * ) it -> data ) -> key_len		11734	0					
ANR	11785	IdentifierDeclType	int		11734	0					
ANR	11786	Identifier	key_len		11734	1					
ANR	11787	AssignmentExpression	key_len = ( ( result_t * ) it -> data ) -> key_len		11734	2		=			
ANR	11788	Identifier	key_len		11734	0					
ANR	11789	PtrMemberAccess	( ( result_t * ) it -> data ) -> key_len		11734	1					
ANR	11790	CastExpression	( result_t * ) it -> data		11734	0					
ANR	11791	CastTarget	result_t *		11734	0					
ANR	11792	PtrMemberAccess	it -> data		11734	1					
ANR	11793	Identifier	it		11734	0					
ANR	11794	Identifier	data		11734	1					
ANR	11795	Identifier	key_len		11734	1					
ANR	11796	IdentifierDeclStatement	char * key = ( char * ) malloc ( key_len + 1 ) ;	222:8:4871:4908	11734	1	True				
ANR	11797	IdentifierDecl	* key = ( char * ) malloc ( key_len + 1 )		11734	0					
ANR	11798	IdentifierDeclType	char *		11734	0					
ANR	11799	Identifier	key		11734	1					
ANR	11800	AssignmentExpression	* key = ( char * ) malloc ( key_len + 1 )		11734	2		=			
ANR	11801	Identifier	key		11734	0					
ANR	11802	CastExpression	( char * ) malloc ( key_len + 1 )		11734	1					
ANR	11803	CastTarget	char *		11734	0					
ANR	11804	CallExpression	malloc ( key_len + 1 )		11734	1					
ANR	11805	Callee	malloc		11734	0					
ANR	11806	Identifier	malloc		11734	0					
ANR	11807	ArgumentList	key_len + 1		11734	1					
ANR	11808	Argument	key_len + 1		11734	0					
ANR	11809	AdditiveExpression	key_len + 1		11734	0		+			
ANR	11810	Identifier	key_len		11734	0					
ANR	11811	PrimaryExpression	1		11734	1					
ANR	11812	ExpressionStatement	"snprintf ( key , key_len + 1 , ""%.*s"" , key_len , ( ( result_t * ) it -> data ) -> key )"	223:8:4918:4984	11734	2	True				
ANR	11813	CallExpression	"snprintf ( key , key_len + 1 , ""%.*s"" , key_len , ( ( result_t * ) it -> data ) -> key )"		11734	0					
ANR	11814	Callee	snprintf		11734	0					
ANR	11815	Identifier	snprintf		11734	0					
ANR	11816	ArgumentList	key		11734	1					
ANR	11817	Argument	key		11734	0					
ANR	11818	Identifier	key		11734	0					
ANR	11819	Argument	key_len + 1		11734	1					
ANR	11820	AdditiveExpression	key_len + 1		11734	0		+			
ANR	11821	Identifier	key_len		11734	0					
ANR	11822	PrimaryExpression	1		11734	1					
ANR	11823	Argument	"""%.*s"""		11734	2					
ANR	11824	PrimaryExpression	"""%.*s"""		11734	0					
ANR	11825	Argument	key_len		11734	3					
ANR	11826	Identifier	key_len		11734	0					
ANR	11827	Argument	( ( result_t * ) it -> data ) -> key		11734	4					
ANR	11828	PtrMemberAccess	( ( result_t * ) it -> data ) -> key		11734	0					
ANR	11829	CastExpression	( result_t * ) it -> data		11734	0					
ANR	11830	CastTarget	result_t *		11734	0					
ANR	11831	PtrMemberAccess	it -> data		11734	1					
ANR	11832	Identifier	it		11734	0					
ANR	11833	Identifier	data		11734	1					
ANR	11834	Identifier	key		11734	1					
ANR	11835	IdentifierDeclStatement	int value_len = ( ( result_t * ) it -> data ) -> value_len ;	224:1:4987:5036	11734	3	True				
ANR	11836	IdentifierDecl	value_len = ( ( result_t * ) it -> data ) -> value_len		11734	0					
ANR	11837	IdentifierDeclType	int		11734	0					
ANR	11838	Identifier	value_len		11734	1					
ANR	11839	AssignmentExpression	value_len = ( ( result_t * ) it -> data ) -> value_len		11734	2		=			
ANR	11840	Identifier	value_len		11734	0					
ANR	11841	PtrMemberAccess	( ( result_t * ) it -> data ) -> value_len		11734	1					
ANR	11842	CastExpression	( result_t * ) it -> data		11734	0					
ANR	11843	CastTarget	result_t *		11734	0					
ANR	11844	PtrMemberAccess	it -> data		11734	1					
ANR	11845	Identifier	it		11734	0					
ANR	11846	Identifier	data		11734	1					
ANR	11847	Identifier	value_len		11734	1					
ANR	11848	IdentifierDeclStatement	char * value = ( char * ) malloc ( value_len + 1 ) ;	225:1:5039:5080	11734	4	True				
ANR	11849	IdentifierDecl	* value = ( char * ) malloc ( value_len + 1 )		11734	0					
ANR	11850	IdentifierDeclType	char *		11734	0					
ANR	11851	Identifier	value		11734	1					
ANR	11852	AssignmentExpression	* value = ( char * ) malloc ( value_len + 1 )		11734	2		=			
ANR	11853	Identifier	value		11734	0					
ANR	11854	CastExpression	( char * ) malloc ( value_len + 1 )		11734	1					
ANR	11855	CastTarget	char *		11734	0					
ANR	11856	CallExpression	malloc ( value_len + 1 )		11734	1					
ANR	11857	Callee	malloc		11734	0					
ANR	11858	Identifier	malloc		11734	0					
ANR	11859	ArgumentList	value_len + 1		11734	1					
ANR	11860	Argument	value_len + 1		11734	0					
ANR	11861	AdditiveExpression	value_len + 1		11734	0		+			
ANR	11862	Identifier	value_len		11734	0					
ANR	11863	PrimaryExpression	1		11734	1					
ANR	11864	ExpressionStatement	"snprintf ( value , value_len + 1 , ""%.*s"" , value_len , ( ( result_t * ) it -> data ) -> value )"	226:8:5090:5163	11734	5	True				
ANR	11865	CallExpression	"snprintf ( value , value_len + 1 , ""%.*s"" , value_len , ( ( result_t * ) it -> data ) -> value )"		11734	0					
ANR	11866	Callee	snprintf		11734	0					
ANR	11867	Identifier	snprintf		11734	0					
ANR	11868	ArgumentList	value		11734	1					
ANR	11869	Argument	value		11734	0					
ANR	11870	Identifier	value		11734	0					
ANR	11871	Argument	value_len + 1		11734	1					
ANR	11872	AdditiveExpression	value_len + 1		11734	0		+			
ANR	11873	Identifier	value_len		11734	0					
ANR	11874	PrimaryExpression	1		11734	1					
ANR	11875	Argument	"""%.*s"""		11734	2					
ANR	11876	PrimaryExpression	"""%.*s"""		11734	0					
ANR	11877	Argument	value_len		11734	3					
ANR	11878	Identifier	value_len		11734	0					
ANR	11879	Argument	( ( result_t * ) it -> data ) -> value		11734	4					
ANR	11880	PtrMemberAccess	( ( result_t * ) it -> data ) -> value		11734	0					
ANR	11881	CastExpression	( result_t * ) it -> data		11734	0					
ANR	11882	CastTarget	result_t *		11734	0					
ANR	11883	PtrMemberAccess	it -> data		11734	1					
ANR	11884	Identifier	it		11734	0					
ANR	11885	Identifier	data		11734	1					
ANR	11886	Identifier	value		11734	1					
ANR	11887	ExpressionStatement	jval = json_object_new_string ( value )	227:1:5166:5202	11734	6	True				
ANR	11888	AssignmentExpression	jval = json_object_new_string ( value )		11734	0		=			
ANR	11889	Identifier	jval		11734	0					
ANR	11890	CallExpression	json_object_new_string ( value )		11734	1					
ANR	11891	Callee	json_object_new_string		11734	0					
ANR	11892	Identifier	json_object_new_string		11734	0					
ANR	11893	ArgumentList	value		11734	1					
ANR	11894	Argument	value		11734	0					
ANR	11895	Identifier	value		11734	0					
ANR	11896	ExpressionStatement	"json_object_object_add ( json , key , jval )"	228:1:5205:5242	11734	7	True				
ANR	11897	CallExpression	"json_object_object_add ( json , key , jval )"		11734	0					
ANR	11898	Callee	json_object_object_add		11734	0					
ANR	11899	Identifier	json_object_object_add		11734	0					
ANR	11900	ArgumentList	json		11734	1					
ANR	11901	Argument	json		11734	0					
ANR	11902	Identifier	json		11734	0					
ANR	11903	Argument	key		11734	1					
ANR	11904	Identifier	key		11734	0					
ANR	11905	Argument	jval		11734	2					
ANR	11906	Identifier	jval		11734	0					
ANR	11907	ExpressionStatement	free ( key )	229:1:5245:5254	11734	8	True				
ANR	11908	CallExpression	free ( key )		11734	0					
ANR	11909	Callee	free		11734	0					
ANR	11910	Identifier	free		11734	0					
ANR	11911	ArgumentList	key		11734	1					
ANR	11912	Argument	key		11734	0					
ANR	11913	Identifier	key		11734	0					
ANR	11914	ExpressionStatement	free ( value )	230:1:5257:5268	11734	9	True				
ANR	11915	CallExpression	free ( value )		11734	0					
ANR	11916	Callee	free		11734	0					
ANR	11917	Identifier	free		11734	0					
ANR	11918	ArgumentList	value		11734	1					
ANR	11919	Argument	value		11734	0					
ANR	11920	Identifier	value		11734	0					
ANR	11921	ExpressionStatement	"msgAddJSON ( pData -> pmsg , ( uchar * ) pData -> pszTarget , json , 0 , 0 )"	232:4:5280:5337	11734	7	True				
ANR	11922	CallExpression	"msgAddJSON ( pData -> pmsg , ( uchar * ) pData -> pszTarget , json , 0 , 0 )"		11734	0					
ANR	11923	Callee	msgAddJSON		11734	0					
ANR	11924	Identifier	msgAddJSON		11734	0					
ANR	11925	ArgumentList	pData -> pmsg		11734	1					
ANR	11926	Argument	pData -> pmsg		11734	0					
ANR	11927	PtrMemberAccess	pData -> pmsg		11734	0					
ANR	11928	Identifier	pData		11734	0					
ANR	11929	Identifier	pmsg		11734	1					
ANR	11930	Argument	( uchar * ) pData -> pszTarget		11734	1					
ANR	11931	CastExpression	( uchar * ) pData -> pszTarget		11734	0					
ANR	11932	CastTarget	uchar *		11734	0					
ANR	11933	PtrMemberAccess	pData -> pszTarget		11734	1					
ANR	11934	Identifier	pData		11734	0					
ANR	11935	Identifier	pszTarget		11734	1					
ANR	11936	Argument	json		11734	2					
ANR	11937	Identifier	json		11734	0					
ANR	11938	Argument	0		11734	3					
ANR	11939	PrimaryExpression	0		11734	0					
ANR	11940	Argument	0		11734	4					
ANR	11941	PrimaryExpression	0		11734	0					
ANR	11942	Label	finalize_it :	233:0:5339:5350	11734	8	True				
ANR	11943	Identifier	finalize_it		11734	0					
ANR	11944	ExpressionStatement	RETiRet	234:4:5356:5363	11734	9	True				
ANR	11945	Identifier	RETiRet		11734	0					
ANR	11946	ReturnType	static rsRetVal		11734	1					
ANR	11947	Identifier	smsg_to_json		11734	2					
ANR	11948	ParameterList	"GList * list , instanceData * pData"		11734	3					
ANR	11949	Parameter	GList * list	205:13:4533:4543	11734	0	True				
ANR	11950	ParameterType	GList *		11734	0					
ANR	11951	Identifier	list		11734	1					
ANR	11952	Parameter	instanceData * pData	205:25:4545:4563	11734	1	True				
ANR	11953	ParameterType	instanceData *		11734	0					
ANR	11954	Identifier	pData		11734	1					
ANR	11955	CFGEntryNode	ENTRY		11734		True				
ANR	11956	CFGExitNode	EXIT		11734		True				
ANR	11957	Symbol	json_object_new_object		11734						
ANR	11958	Symbol	json_object_new_string		11734						
ANR	11959	Symbol	* it -> data		11734						
ANR	11960	Symbol	jval		11734						
ANR	11961	Symbol	RS_RET_ERR		11734						
ANR	11962	Symbol	( ( result_t * ) it -> data ) -> key_len		11734						
ANR	11963	Symbol	( ( result_t * ) it -> data ) -> key		11734						
ANR	11964	Symbol	it -> next		11734						
ANR	11965	Symbol	* * it		11734						
ANR	11966	Symbol	json		11734						
ANR	11967	Symbol	value		11734						
ANR	11968	Symbol	key		11734						
ANR	11969	Symbol	key_len		11734						
ANR	11970	Symbol	malloc		11734						
ANR	11971	Symbol	NULL		11734						
ANR	11972	Symbol	( ( result_t * ) it -> data ) -> value		11734						
ANR	11973	Symbol	value_len		11734						
ANR	11974	Symbol	it		11734						
ANR	11975	Symbol	list		11734						
ANR	11976	Symbol	( ( result_t * ) it -> data ) -> value_len		11734						
ANR	11977	Symbol	* pData		11734						
ANR	11978	Symbol	pData		11734						
ANR	11979	Symbol	* it		11734						
ANR	11980	Symbol	pData -> pszTarget		11734						
ANR	11981	Symbol	it -> data		11734						
ANR	11982	Symbol	pData -> pmsg		11734						
ANR	11983	Function	parse_result_store	238:0:5410:7039							
ANR	11984	FunctionDef	"parse_result_store (const grok_match_t gm , instanceData * pData)"		11983	0					
ANR	11985	CompoundStatement		240:0:5489:7039	11983	0					
ANR	11986	IdentifierDeclStatement	GList * re_list = NULL ;	241:8:5499:5520	11983	0	True				
ANR	11987	IdentifierDecl	* re_list = NULL		11983	0					
ANR	11988	IdentifierDeclType	GList *		11983	0					
ANR	11989	Identifier	re_list		11983	1					
ANR	11990	AssignmentExpression	* re_list = NULL		11983	2		=			
ANR	11991	Identifier	NULL		11983	0					
ANR	11992	Identifier	NULL		11983	1					
ANR	11993	IdentifierDeclStatement	char * pname ;	242:8:5530:5542	11983	1	True				
ANR	11994	IdentifierDecl	* pname		11983	0					
ANR	11995	IdentifierDeclType	char *		11983	0					
ANR	11996	Identifier	pname		11983	1					
ANR	11997	IdentifierDeclStatement	const char * pdata ;	243:8:5552:5570	11983	2	True				
ANR	11998	IdentifierDecl	* pdata		11983	0					
ANR	11999	IdentifierDeclType	const char *		11983	0					
ANR	12000	Identifier	pdata		11983	1					
ANR	12001	IdentifierDeclStatement	"int pname_len , pdata_len ;"	244:8:5580:5606	11983	3	True				
ANR	12002	IdentifierDecl	pname_len		11983	0					
ANR	12003	IdentifierDeclType	int		11983	0					
ANR	12004	Identifier	pname_len		11983	1					
ANR	12005	IdentifierDecl	pdata_len		11983	1					
ANR	12006	IdentifierDeclType	int		11983	0					
ANR	12007	Identifier	pdata_len		11983	1					
ANR	12008	IdentifierDeclStatement	char * key ;	246:8:5625:5634	11983	4	True				
ANR	12009	IdentifierDecl	* key		11983	0					
ANR	12010	IdentifierDeclType	char *		11983	0					
ANR	12011	Identifier	key		11983	1					
ANR	12012	IdentifierDeclStatement	char * type ;	247:8:5644:5654	11983	5	True				
ANR	12013	IdentifierDecl	* type		11983	0					
ANR	12014	IdentifierDeclType	char *		11983	0					
ANR	12015	Identifier	type		11983	1					
ANR	12016	ExpressionStatement	DEFiRet	248:8:5664:5671	11983	6	True				
ANR	12017	Identifier	DEFiRet		11983	0					
ANR	12018	ExpressionStatement	grok_match_walk_init ( & gm )	250:8:5691:5716	11983	7	True				
ANR	12019	CallExpression	grok_match_walk_init ( & gm )		11983	0					
ANR	12020	Callee	grok_match_walk_init		11983	0					
ANR	12021	Identifier	grok_match_walk_init		11983	0					
ANR	12022	ArgumentList	& gm		11983	1					
ANR	12023	Argument	& gm		11983	0					
ANR	12024	UnaryOperationExpression	& gm		11983	0					
ANR	12025	UnaryOperator	&		11983	0					
ANR	12026	Identifier	gm		11983	1					
ANR	12027	WhileStatement	"while ( grok_match_walk_next ( & gm , & pname , & pname_len , & pdata , & pdata_len ) == 0 )"		11983	8					
ANR	12028	Condition	"grok_match_walk_next ( & gm , & pname , & pname_len , & pdata , & pdata_len ) == 0"	252:14:5752:5817	11983	0	True				
ANR	12029	EqualityExpression	"grok_match_walk_next ( & gm , & pname , & pname_len , & pdata , & pdata_len ) == 0"		11983	0		==			
ANR	12030	CallExpression	"grok_match_walk_next ( & gm , & pname , & pname_len , & pdata , & pdata_len )"		11983	0					
ANR	12031	Callee	grok_match_walk_next		11983	0					
ANR	12032	Identifier	grok_match_walk_next		11983	0					
ANR	12033	ArgumentList	& gm		11983	1					
ANR	12034	Argument	& gm		11983	0					
ANR	12035	UnaryOperationExpression	& gm		11983	0					
ANR	12036	UnaryOperator	&		11983	0					
ANR	12037	Identifier	gm		11983	1					
ANR	12038	Argument	& pname		11983	1					
ANR	12039	UnaryOperationExpression	& pname		11983	0					
ANR	12040	UnaryOperator	&		11983	0					
ANR	12041	Identifier	pname		11983	1					
ANR	12042	Argument	& pname_len		11983	2					
ANR	12043	UnaryOperationExpression	& pname_len		11983	0					
ANR	12044	UnaryOperator	&		11983	0					
ANR	12045	Identifier	pname_len		11983	1					
ANR	12046	Argument	& pdata		11983	3					
ANR	12047	UnaryOperationExpression	& pdata		11983	0					
ANR	12048	UnaryOperator	&		11983	0					
ANR	12049	Identifier	pdata		11983	1					
ANR	12050	Argument	& pdata_len		11983	4					
ANR	12051	UnaryOperationExpression	& pdata_len		11983	0					
ANR	12052	UnaryOperator	&		11983	0					
ANR	12053	Identifier	pdata_len		11983	1					
ANR	12054	PrimaryExpression	0		11983	1					
ANR	12055	CompoundStatement		14:8:338:338	11983	1					
ANR	12056	ExpressionStatement	"key = strchr ( pname , ':' )"	255:12:5899:5922	11983	0	True				
ANR	12057	AssignmentExpression	"key = strchr ( pname , ':' )"		11983	0		=			
ANR	12058	Identifier	key		11983	0					
ANR	12059	CallExpression	"strchr ( pname , ':' )"		11983	1					
ANR	12060	Callee	strchr		11983	0					
ANR	12061	Identifier	strchr		11983	0					
ANR	12062	ArgumentList	pname		11983	1					
ANR	12063	Argument	pname		11983	0					
ANR	12064	Identifier	pname		11983	0					
ANR	12065	Argument	':'		11983	1					
ANR	12066	PrimaryExpression	':'		11983	0					
ANR	12067	IfStatement	if ( key != NULL )		11983	1					
ANR	12068	Condition	key != NULL	257:15:5945:5953	11983	0	True				
ANR	12069	EqualityExpression	key != NULL		11983	0		!=			
ANR	12070	Identifier	key		11983	0					
ANR	12071	Identifier	NULL		11983	1					
ANR	12072	CompoundStatement		26:16:743:755	11983	1					
ANR	12073	IdentifierDeclStatement	int key_len ;	259:16:5986:5997	11983	0	True				
ANR	12074	IdentifierDecl	key_len		11983	0					
ANR	12075	IdentifierDeclType	int		11983	0					
ANR	12076	Identifier	key_len		11983	1					
ANR	12077	IdentifierDeclStatement	"result_t * result = g_new0 ( result_t , 1 ) ;"	260:16:6015:6052	11983	1	True				
ANR	12078	IdentifierDecl	"* result = g_new0 ( result_t , 1 )"		11983	0					
ANR	12079	IdentifierDeclType	result_t *		11983	0					
ANR	12080	Identifier	result		11983	1					
ANR	12081	AssignmentExpression	"* result = g_new0 ( result_t , 1 )"		11983	2		=			
ANR	12082	Identifier	result		11983	0					
ANR	12083	CallExpression	"g_new0 ( result_t , 1 )"		11983	1					
ANR	12084	Callee	g_new0		11983	0					
ANR	12085	Identifier	g_new0		11983	0					
ANR	12086	ArgumentList	result_t		11983	1					
ANR	12087	Argument	result_t		11983	0					
ANR	12088	Identifier	result_t		11983	0					
ANR	12089	Argument	1		11983	1					
ANR	12090	PrimaryExpression	1		11983	0					
ANR	12091	ExpressionStatement	key_len = pname_len - ( ( key + 1 ) - pname )	261:16:6070:6109	11983	2	True				
ANR	12092	AssignmentExpression	key_len = pname_len - ( ( key + 1 ) - pname )		11983	0		=			
ANR	12093	Identifier	key_len		11983	0					
ANR	12094	AdditiveExpression	pname_len - ( ( key + 1 ) - pname )		11983	1		-			
ANR	12095	Identifier	pname_len		11983	0					
ANR	12096	AdditiveExpression	( key + 1 ) - pname		11983	1		-			
ANR	12097	AdditiveExpression	key + 1		11983	0		+			
ANR	12098	Identifier	key		11983	0					
ANR	12099	PrimaryExpression	1		11983	1					
ANR	12100	Identifier	pname		11983	1					
ANR	12101	ExpressionStatement	key = key + 1	262:16:6127:6138	11983	3	True				
ANR	12102	AssignmentExpression	key = key + 1		11983	0		=			
ANR	12103	Identifier	key		11983	0					
ANR	12104	AdditiveExpression	key + 1		11983	1		+			
ANR	12105	Identifier	key		11983	0					
ANR	12106	PrimaryExpression	1		11983	1					
ANR	12107	ExpressionStatement	pname_len = key_len	263:16:6156:6175	11983	4	True				
ANR	12108	AssignmentExpression	pname_len = key_len		11983	0		=			
ANR	12109	Identifier	pname_len		11983	0					
ANR	12110	Identifier	key_len		11983	1					
ANR	12111	ExpressionStatement	"type = strchr ( key , ':' )"	264:16:6193:6215	11983	5	True				
ANR	12112	AssignmentExpression	"type = strchr ( key , ':' )"		11983	0		=			
ANR	12113	Identifier	type		11983	0					
ANR	12114	CallExpression	"strchr ( key , ':' )"		11983	1					
ANR	12115	Callee	strchr		11983	0					
ANR	12116	Identifier	strchr		11983	0					
ANR	12117	ArgumentList	key		11983	1					
ANR	12118	Argument	key		11983	0					
ANR	12119	Identifier	key		11983	0					
ANR	12120	Argument	':'		11983	1					
ANR	12121	PrimaryExpression	':'		11983	0					
ANR	12122	IdentifierDeclStatement	int type_len ;	265:16:6233:6245	11983	6	True				
ANR	12123	IdentifierDecl	type_len		11983	0					
ANR	12124	IdentifierDeclType	int		11983	0					
ANR	12125	Identifier	type_len		11983	1					
ANR	12126	IfStatement	if ( type != NULL )		11983	7					
ANR	12127	Condition	type != NULL	266:19:6266:6275	11983	0	True				
ANR	12128	EqualityExpression	type != NULL		11983	0		!=			
ANR	12129	Identifier	type		11983	0					
ANR	12130	Identifier	NULL		11983	1					
ANR	12131	CompoundStatement		28:16:804:804	11983	1					
ANR	12132	ExpressionStatement	key_len = ( type - key )	268:20:6316:6338	11983	0	True				
ANR	12133	AssignmentExpression	key_len = ( type - key )		11983	0		=			
ANR	12134	Identifier	key_len		11983	0					
ANR	12135	AdditiveExpression	type - key		11983	1		-			
ANR	12136	Identifier	type		11983	0					
ANR	12137	Identifier	key		11983	1					
ANR	12138	ExpressionStatement	type = type + 1	269:20:6360:6373	11983	1	True				
ANR	12139	AssignmentExpression	type = type + 1		11983	0		=			
ANR	12140	Identifier	type		11983	0					
ANR	12141	AdditiveExpression	type + 1		11983	1		+			
ANR	12142	Identifier	type		11983	0					
ANR	12143	PrimaryExpression	1		11983	1					
ANR	12144	ExpressionStatement	type_len = pname_len - key_len - 1	270:20:6395:6428	11983	2	True				
ANR	12145	AssignmentExpression	type_len = pname_len - key_len - 1		11983	0		=			
ANR	12146	Identifier	type_len		11983	0					
ANR	12147	AdditiveExpression	pname_len - key_len - 1		11983	1		-			
ANR	12148	Identifier	pname_len		11983	0					
ANR	12149	AdditiveExpression	key_len - 1		11983	1		-			
ANR	12150	Identifier	key_len		11983	0					
ANR	12151	PrimaryExpression	1		11983	1					
ANR	12152	ExpressionStatement	"sprintf ( type , ""%.*s"" , type_len , type )"	271:20:6450:6484	11983	3	True				
ANR	12153	CallExpression	"sprintf ( type , ""%.*s"" , type_len , type )"		11983	0					
ANR	12154	Callee	sprintf		11983	0					
ANR	12155	Identifier	sprintf		11983	0					
ANR	12156	ArgumentList	type		11983	1					
ANR	12157	Argument	type		11983	0					
ANR	12158	Identifier	type		11983	0					
ANR	12159	Argument	"""%.*s"""		11983	1					
ANR	12160	PrimaryExpression	"""%.*s"""		11983	0					
ANR	12161	Argument	type_len		11983	2					
ANR	12162	Identifier	type_len		11983	0					
ANR	12163	Argument	type		11983	3					
ANR	12164	Identifier	type		11983	0					
ANR	12165	ElseStatement	else		11983	0					
ANR	12166	CompoundStatement		34:20:1034:1034	11983	0					
ANR	12167	ExpressionStatement	"type = ""null"""	273:21:6525:6538	11983	0	True				
ANR	12168	AssignmentExpression	"type = ""null"""		11983	0		=			
ANR	12169	Identifier	type		11983	0					
ANR	12170	PrimaryExpression	"""null"""		11983	1					
ANR	12171	ExpressionStatement	result -> key = key	275:16:6608:6625	11983	8	True				
ANR	12172	AssignmentExpression	result -> key = key		11983	0		=			
ANR	12173	PtrMemberAccess	result -> key		11983	0					
ANR	12174	Identifier	result		11983	0					
ANR	12175	Identifier	key		11983	1					
ANR	12176	Identifier	key		11983	1					
ANR	12177	ExpressionStatement	result -> key_len = key_len	276:16:6643:6668	11983	9	True				
ANR	12178	AssignmentExpression	result -> key_len = key_len		11983	0		=			
ANR	12179	PtrMemberAccess	result -> key_len		11983	0					
ANR	12180	Identifier	result		11983	0					
ANR	12181	Identifier	key_len		11983	1					
ANR	12182	Identifier	key_len		11983	1					
ANR	12183	ExpressionStatement	result -> value = pdata	277:16:6686:6707	11983	10	True				
ANR	12184	AssignmentExpression	result -> value = pdata		11983	0		=			
ANR	12185	PtrMemberAccess	result -> value		11983	0					
ANR	12186	Identifier	result		11983	0					
ANR	12187	Identifier	value		11983	1					
ANR	12188	Identifier	pdata		11983	1					
ANR	12189	ExpressionStatement	result -> value_len = pdata_len	278:16:6725:6754	11983	11	True				
ANR	12190	AssignmentExpression	result -> value_len = pdata_len		11983	0		=			
ANR	12191	PtrMemberAccess	result -> value_len		11983	0					
ANR	12192	Identifier	result		11983	0					
ANR	12193	Identifier	value_len		11983	1					
ANR	12194	Identifier	pdata_len		11983	1					
ANR	12195	ExpressionStatement	result -> type = type	279:16:6772:6791	11983	12	True				
ANR	12196	AssignmentExpression	result -> type = type		11983	0		=			
ANR	12197	PtrMemberAccess	result -> type		11983	0					
ANR	12198	Identifier	result		11983	0					
ANR	12199	Identifier	type		11983	1					
ANR	12200	Identifier	type		11983	1					
ANR	12201	ExpressionStatement	"re_list = g_list_append ( re_list , result )"	281:16:6863:6902	11983	13	True				
ANR	12202	AssignmentExpression	"re_list = g_list_append ( re_list , result )"		11983	0		=			
ANR	12203	Identifier	re_list		11983	0					
ANR	12204	CallExpression	"g_list_append ( re_list , result )"		11983	1					
ANR	12205	Callee	g_list_append		11983	0					
ANR	12206	Identifier	g_list_append		11983	0					
ANR	12207	ArgumentList	re_list		11983	1					
ANR	12208	Argument	re_list		11983	0					
ANR	12209	Identifier	re_list		11983	0					
ANR	12210	Argument	result		11983	1					
ANR	12211	Identifier	result		11983	0					
ANR	12212	ExpressionStatement	"smsg_to_json ( re_list , pData )"	284:8:6936:6963	11983	9	True				
ANR	12213	CallExpression	"smsg_to_json ( re_list , pData )"		11983	0					
ANR	12214	Callee	smsg_to_json		11983	0					
ANR	12215	Identifier	smsg_to_json		11983	0					
ANR	12216	ArgumentList	re_list		11983	1					
ANR	12217	Argument	re_list		11983	0					
ANR	12218	Identifier	re_list		11983	0					
ANR	12219	Argument	pData		11983	1					
ANR	12220	Identifier	pData		11983	0					
ANR	12221	ExpressionStatement	g_list_free ( re_list )	285:8:6973:6993	11983	10	True				
ANR	12222	CallExpression	g_list_free ( re_list )		11983	0					
ANR	12223	Callee	g_list_free		11983	0					
ANR	12224	Identifier	g_list_free		11983	0					
ANR	12225	ArgumentList	re_list		11983	1					
ANR	12226	Argument	re_list		11983	0					
ANR	12227	Identifier	re_list		11983	0					
ANR	12228	ExpressionStatement	grok_match_walk_end ( & gm )	286:8:7003:7027	11983	11	True				
ANR	12229	CallExpression	grok_match_walk_end ( & gm )		11983	0					
ANR	12230	Callee	grok_match_walk_end		11983	0					
ANR	12231	Identifier	grok_match_walk_end		11983	0					
ANR	12232	ArgumentList	& gm		11983	1					
ANR	12233	Argument	& gm		11983	0					
ANR	12234	UnaryOperationExpression	& gm		11983	0					
ANR	12235	UnaryOperator	&		11983	0					
ANR	12236	Identifier	gm		11983	1					
ANR	12237	ExpressionStatement	RETiRet	287:1:7030:7037	11983	12	True				
ANR	12238	Identifier	RETiRet		11983	0					
ANR	12239	ReturnType	static rsRetVal		11983	1					
ANR	12240	Identifier	parse_result_store		11983	2					
ANR	12241	ParameterList	"const grok_match_t gm , instanceData * pData"		11983	3					
ANR	12242	Parameter	const grok_match_t gm	239:19:5446:5466	11983	0	True				
ANR	12243	ParameterType	const grok_match_t		11983	0					
ANR	12244	Identifier	gm		11983	1					
ANR	12245	Parameter	instanceData * pData	239:41:5468:5486	11983	1	True				
ANR	12246	ParameterType	instanceData *		11983	0					
ANR	12247	Identifier	pData		11983	1					
ANR	12248	CFGEntryNode	ENTRY		11983		True				
ANR	12249	CFGExitNode	EXIT		11983		True				
ANR	12250	Symbol	& pdata		11983						
ANR	12251	Symbol	pdata		11983						
ANR	12252	Symbol	strchr		11983						
ANR	12253	Symbol	type		11983						
ANR	12254	Symbol	& pdata_len		11983						
ANR	12255	Symbol	result		11983						
ANR	12256	Symbol	result -> value		11983						
ANR	12257	Symbol	* result		11983						
ANR	12258	Symbol	g_new0		11983						
ANR	12259	Symbol	g_list_append		11983						
ANR	12260	Symbol	& pname_len		11983						
ANR	12261	Symbol	key		11983						
ANR	12262	Symbol	key_len		11983						
ANR	12263	Symbol	grok_match_walk_next		11983						
ANR	12264	Symbol	NULL		11983						
ANR	12265	Symbol	& pname		11983						
ANR	12266	Symbol	type_len		11983						
ANR	12267	Symbol	gm		11983						
ANR	12268	Symbol	pname		11983						
ANR	12269	Symbol	re_list		11983						
ANR	12270	Symbol	pdata_len		11983						
ANR	12271	Symbol	result -> type		11983						
ANR	12272	Symbol	result_t		11983						
ANR	12273	Symbol	result -> key_len		11983						
ANR	12274	Symbol	pData		11983						
ANR	12275	Symbol	& gm		11983						
ANR	12276	Symbol	pname_len		11983						
ANR	12277	Symbol	result -> key		11983						
ANR	12278	Symbol	result -> value_len		11983						
ANR	12279	Function	MotifyLine	291:0:7076:7670							
ANR	12280	FunctionDef	"MotifyLine (char * line , grok_t * grok , instanceData * pData)"		12279	0					
ANR	12281	CompoundStatement		293:0:7148:7670	12279	0					
ANR	12282	IdentifierDeclStatement	grok_match_t gm ;	294:4:7154:7170	12279	0	True				
ANR	12283	IdentifierDecl	gm		12279	0					
ANR	12284	IdentifierDeclType	grok_match_t		12279	0					
ANR	12285	Identifier	gm		12279	1					
ANR	12286	ExpressionStatement	DEFiRet	295:4:7176:7183	12279	1	True				
ANR	12287	Identifier	DEFiRet		12279	0					
ANR	12288	ExpressionStatement	"grok_patterns_import_from_file ( grok , pData -> pszPatternDir )"	296:4:7189:7246	12279	2	True				
ANR	12289	CallExpression	"grok_patterns_import_from_file ( grok , pData -> pszPatternDir )"		12279	0					
ANR	12290	Callee	grok_patterns_import_from_file		12279	0					
ANR	12291	Identifier	grok_patterns_import_from_file		12279	0					
ANR	12292	ArgumentList	grok		12279	1					
ANR	12293	Argument	grok		12279	0					
ANR	12294	Identifier	grok		12279	0					
ANR	12295	Argument	pData -> pszPatternDir		12279	1					
ANR	12296	PtrMemberAccess	pData -> pszPatternDir		12279	0					
ANR	12297	Identifier	pData		12279	0					
ANR	12298	Identifier	pszPatternDir		12279	1					
ANR	12299	IdentifierDeclStatement	"int compile = grok_compile ( grok , pData -> pszMatch ) ;"	297:4:7252:7300	12279	3	True				
ANR	12300	IdentifierDecl	"compile = grok_compile ( grok , pData -> pszMatch )"		12279	0					
ANR	12301	IdentifierDeclType	int		12279	0					
ANR	12302	Identifier	compile		12279	1					
ANR	12303	AssignmentExpression	"compile = grok_compile ( grok , pData -> pszMatch )"		12279	2		=			
ANR	12304	Identifier	compile		12279	0					
ANR	12305	CallExpression	"grok_compile ( grok , pData -> pszMatch )"		12279	1					
ANR	12306	Callee	grok_compile		12279	0					
ANR	12307	Identifier	grok_compile		12279	0					
ANR	12308	ArgumentList	grok		12279	1					
ANR	12309	Argument	grok		12279	0					
ANR	12310	Identifier	grok		12279	0					
ANR	12311	Argument	pData -> pszMatch		12279	1					
ANR	12312	PtrMemberAccess	pData -> pszMatch		12279	0					
ANR	12313	Identifier	pData		12279	0					
ANR	12314	Identifier	pszMatch		12279	1					
ANR	12315	IfStatement	if ( compile != GROK_OK )		12279	4					
ANR	12316	Condition	compile != GROK_OK	298:7:7309:7324	12279	0	True				
ANR	12317	EqualityExpression	compile != GROK_OK		12279	0		!=			
ANR	12318	Identifier	compile		12279	0					
ANR	12319	Identifier	GROK_OK		12279	1					
ANR	12320	CompoundStatement		7:4:182:182	12279	1					
ANR	12321	ExpressionStatement	"DBGPRINTF ( ""mmgrok: grok_compile faile!exit code: %d\\n"" , compile )"	300:8:7341:7404	12279	0	True				
ANR	12322	CallExpression	"DBGPRINTF ( ""mmgrok: grok_compile faile!exit code: %d\\n"" , compile )"		12279	0					
ANR	12323	Callee	DBGPRINTF		12279	0					
ANR	12324	Identifier	DBGPRINTF		12279	0					
ANR	12325	ArgumentList	"""mmgrok: grok_compile faile!exit code: %d\\n"""		12279	1					
ANR	12326	Argument	"""mmgrok: grok_compile faile!exit code: %d\\n"""		12279	0					
ANR	12327	PrimaryExpression	"""mmgrok: grok_compile faile!exit code: %d\\n"""		12279	0					
ANR	12328	Argument	compile		12279	1					
ANR	12329	Identifier	compile		12279	0					
ANR	12330	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	301:1:7407:7433	12279	1	True				
ANR	12331	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		12279	0					
ANR	12332	Callee	ABORT_FINALIZE		12279	0					
ANR	12333	Identifier	ABORT_FINALIZE		12279	0					
ANR	12334	ArgumentList	RS_RET_ERR		12279	1					
ANR	12335	Argument	RS_RET_ERR		12279	0					
ANR	12336	Identifier	RS_RET_ERR		12279	0					
ANR	12337	IdentifierDeclStatement	"int exe = grok_exec ( grok , line , & gm ) ;"	303:4:7445:7479	12279	5	True				
ANR	12338	IdentifierDecl	"exe = grok_exec ( grok , line , & gm )"		12279	0					
ANR	12339	IdentifierDeclType	int		12279	0					
ANR	12340	Identifier	exe		12279	1					
ANR	12341	AssignmentExpression	"exe = grok_exec ( grok , line , & gm )"		12279	2		=			
ANR	12342	Identifier	exe		12279	0					
ANR	12343	CallExpression	"grok_exec ( grok , line , & gm )"		12279	1					
ANR	12344	Callee	grok_exec		12279	0					
ANR	12345	Identifier	grok_exec		12279	0					
ANR	12346	ArgumentList	grok		12279	1					
ANR	12347	Argument	grok		12279	0					
ANR	12348	Identifier	grok		12279	0					
ANR	12349	Argument	line		12279	1					
ANR	12350	Identifier	line		12279	0					
ANR	12351	Argument	& gm		12279	2					
ANR	12352	UnaryOperationExpression	& gm		12279	0					
ANR	12353	UnaryOperator	&		12279	0					
ANR	12354	Identifier	gm		12279	1					
ANR	12355	IfStatement	if ( exe != GROK_OK )		12279	6					
ANR	12356	Condition	exe != GROK_OK	304:7:7488:7499	12279	0	True				
ANR	12357	EqualityExpression	exe != GROK_OK		12279	0		!=			
ANR	12358	Identifier	exe		12279	0					
ANR	12359	Identifier	GROK_OK		12279	1					
ANR	12360	CompoundStatement		13:4:357:357	12279	1					
ANR	12361	ExpressionStatement	"DBGPRINTF ( ""mmgrok: grok_exec faile!exit code: %d\\n"" , exe )"	306:8:7516:7572	12279	0	True				
ANR	12362	CallExpression	"DBGPRINTF ( ""mmgrok: grok_exec faile!exit code: %d\\n"" , exe )"		12279	0					
ANR	12363	Callee	DBGPRINTF		12279	0					
ANR	12364	Identifier	DBGPRINTF		12279	0					
ANR	12365	ArgumentList	"""mmgrok: grok_exec faile!exit code: %d\\n"""		12279	1					
ANR	12366	Argument	"""mmgrok: grok_exec faile!exit code: %d\\n"""		12279	0					
ANR	12367	PrimaryExpression	"""mmgrok: grok_exec faile!exit code: %d\\n"""		12279	0					
ANR	12368	Argument	exe		12279	1					
ANR	12369	Identifier	exe		12279	0					
ANR	12370	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	307:1:7575:7601	12279	1	True				
ANR	12371	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		12279	0					
ANR	12372	Callee	ABORT_FINALIZE		12279	0					
ANR	12373	Identifier	ABORT_FINALIZE		12279	0					
ANR	12374	ArgumentList	RS_RET_ERR		12279	1					
ANR	12375	Argument	RS_RET_ERR		12279	0					
ANR	12376	Identifier	RS_RET_ERR		12279	0					
ANR	12377	ExpressionStatement	"parse_result_store ( gm , pData )"	309:4:7613:7641	12279	7	True				
ANR	12378	CallExpression	"parse_result_store ( gm , pData )"		12279	0					
ANR	12379	Callee	parse_result_store		12279	0					
ANR	12380	Identifier	parse_result_store		12279	0					
ANR	12381	ArgumentList	gm		12279	1					
ANR	12382	Argument	gm		12279	0					
ANR	12383	Identifier	gm		12279	0					
ANR	12384	Argument	pData		12279	1					
ANR	12385	Identifier	pData		12279	0					
ANR	12386	Label	finalize_it :	310:0:7644:7655	12279	8	True				
ANR	12387	Identifier	finalize_it		12279	0					
ANR	12388	ExpressionStatement	RETiRet	311:4:7661:7668	12279	9	True				
ANR	12389	Identifier	RETiRet		12279	0					
ANR	12390	ReturnType	static rsRetVal		12279	1					
ANR	12391	Identifier	MotifyLine		12279	2					
ANR	12392	ParameterList	"char * line , grok_t * grok , instanceData * pData"		12279	3					
ANR	12393	Parameter	char * line	292:11:7103:7112	12279	0	True				
ANR	12394	ParameterType	char *		12279	0					
ANR	12395	Identifier	line		12279	1					
ANR	12396	Parameter	grok_t * grok	292:22:7114:7125	12279	1	True				
ANR	12397	ParameterType	grok_t *		12279	0					
ANR	12398	Identifier	grok		12279	1					
ANR	12399	Parameter	instanceData * pData	292:35:7127:7145	12279	2	True				
ANR	12400	ParameterType	instanceData *		12279	0					
ANR	12401	Identifier	pData		12279	1					
ANR	12402	CFGEntryNode	ENTRY		12279		True				
ANR	12403	CFGExitNode	EXIT		12279		True				
ANR	12404	Symbol	grok_compile		12279						
ANR	12405	Symbol	line		12279						
ANR	12406	Symbol	gm		12279						
ANR	12407	Symbol	RS_RET_ERR		12279						
ANR	12408	Symbol	grok_exec		12279						
ANR	12409	Symbol	* pData		12279						
ANR	12410	Symbol	pData		12279						
ANR	12411	Symbol	GROK_OK		12279						
ANR	12412	Symbol	& gm		12279						
ANR	12413	Symbol	pData -> pszPatternDir		12279						
ANR	12414	Symbol	exe		12279						
ANR	12415	Symbol	compile		12279						
ANR	12416	Symbol	pData -> pszMatch		12279						
ANR	12417	Symbol	grok		12279						
ANR	12418	Function	MotifyMessage	315:0:7703:8047							
ANR	12419	FunctionDef	MotifyMessage (instanceData * pData)		12418	0					
ANR	12420	CompoundStatement		317:0:7754:8047	12418	0					
ANR	12421	ExpressionStatement	DEFiRet	318:4:7760:7767	12418	0	True				
ANR	12422	Identifier	DEFiRet		12418	0					
ANR	12423	IdentifierDeclStatement	grok_t * grok = CreateGrok ( ) ;	319:4:7773:7801	12418	1	True				
ANR	12424	IdentifierDecl	* grok = CreateGrok ( )		12418	0					
ANR	12425	IdentifierDeclType	grok_t *		12418	0					
ANR	12426	Identifier	grok		12418	1					
ANR	12427	AssignmentExpression	* grok = CreateGrok ( )		12418	2		=			
ANR	12428	Identifier	grok		12418	0					
ANR	12429	CallExpression	CreateGrok ( )		12418	1					
ANR	12430	Callee	CreateGrok		12418	0					
ANR	12431	Identifier	CreateGrok		12418	0					
ANR	12432	ArgumentList			12418	1					
ANR	12433	IdentifierDeclStatement	char * msg = strdup ( pData -> pszSource ) ;	320:4:7807:7847	12418	2	True				
ANR	12434	IdentifierDecl	* msg = strdup ( pData -> pszSource )		12418	0					
ANR	12435	IdentifierDeclType	char *		12418	0					
ANR	12436	Identifier	msg		12418	1					
ANR	12437	AssignmentExpression	* msg = strdup ( pData -> pszSource )		12418	2		=			
ANR	12438	Identifier	msg		12418	0					
ANR	12439	CallExpression	strdup ( pData -> pszSource )		12418	1					
ANR	12440	Callee	strdup		12418	0					
ANR	12441	Identifier	strdup		12418	0					
ANR	12442	ArgumentList	pData -> pszSource		12418	1					
ANR	12443	Argument	pData -> pszSource		12418	0					
ANR	12444	PtrMemberAccess	pData -> pszSource		12418	0					
ANR	12445	Identifier	pData		12418	0					
ANR	12446	Identifier	pszSource		12418	1					
ANR	12447	IdentifierDeclStatement	char * line = NULL ;	321:4:7853:7874	12418	3	True				
ANR	12448	IdentifierDecl	* line = NULL		12418	0					
ANR	12449	IdentifierDeclType	char *		12418	0					
ANR	12450	Identifier	line		12418	1					
ANR	12451	AssignmentExpression	* line = NULL		12418	2		=			
ANR	12452	Identifier	NULL		12418	0					
ANR	12453	Identifier	NULL		12418	1					
ANR	12454	ExpressionStatement	"line = strtok ( msg , ""\\n"" )"	322:4:7880:7903	12418	4	True				
ANR	12455	AssignmentExpression	"line = strtok ( msg , ""\\n"" )"		12418	0		=			
ANR	12456	Identifier	line		12418	0					
ANR	12457	CallExpression	"strtok ( msg , ""\\n"" )"		12418	1					
ANR	12458	Callee	strtok		12418	0					
ANR	12459	Identifier	strtok		12418	0					
ANR	12460	ArgumentList	msg		12418	1					
ANR	12461	Argument	msg		12418	0					
ANR	12462	Identifier	msg		12418	0					
ANR	12463	Argument	"""\\n"""		12418	1					
ANR	12464	PrimaryExpression	"""\\n"""		12418	0					
ANR	12465	WhileStatement	while ( line != NULL )		12418	5					
ANR	12466	Condition	line != NULL	323:10:7915:7924	12418	0	True				
ANR	12467	EqualityExpression	line != NULL		12418	0		!=			
ANR	12468	Identifier	line		12418	0					
ANR	12469	Identifier	NULL		12418	1					
ANR	12470	CompoundStatement		8:4:176:176	12418	1					
ANR	12471	ExpressionStatement	"MotifyLine ( line , grok , pData )"	325:8:7941:7968	12418	0	True				
ANR	12472	CallExpression	"MotifyLine ( line , grok , pData )"		12418	0					
ANR	12473	Callee	MotifyLine		12418	0					
ANR	12474	Identifier	MotifyLine		12418	0					
ANR	12475	ArgumentList	line		12418	1					
ANR	12476	Argument	line		12418	0					
ANR	12477	Identifier	line		12418	0					
ANR	12478	Argument	grok		12418	1					
ANR	12479	Identifier	grok		12418	0					
ANR	12480	Argument	pData		12418	2					
ANR	12481	Identifier	pData		12418	0					
ANR	12482	ExpressionStatement	"line = strtok ( NULL , ""\\n"" )"	326:8:7978:8002	12418	1	True				
ANR	12483	AssignmentExpression	"line = strtok ( NULL , ""\\n"" )"		12418	0		=			
ANR	12484	Identifier	line		12418	0					
ANR	12485	CallExpression	"strtok ( NULL , ""\\n"" )"		12418	1					
ANR	12486	Callee	strtok		12418	0					
ANR	12487	Identifier	strtok		12418	0					
ANR	12488	ArgumentList	NULL		12418	1					
ANR	12489	Argument	NULL		12418	0					
ANR	12490	Identifier	NULL		12418	0					
ANR	12491	Argument	"""\\n"""		12418	1					
ANR	12492	PrimaryExpression	"""\\n"""		12418	0					
ANR	12493	ExpressionStatement	free ( msg )	328:4:8014:8023	12418	6	True				
ANR	12494	CallExpression	free ( msg )		12418	0					
ANR	12495	Callee	free		12418	0					
ANR	12496	Identifier	free		12418	0					
ANR	12497	ArgumentList	msg		12418	1					
ANR	12498	Argument	msg		12418	0					
ANR	12499	Identifier	msg		12418	0					
ANR	12500	ExpressionStatement	msg = NULL	328:14:8024:8032	12418	7	True				
ANR	12501	AssignmentExpression	msg = NULL		12418	0		=			
ANR	12502	Identifier	msg		12418	0					
ANR	12503	Identifier	NULL		12418	1					
ANR	12504	ExpressionStatement	RETiRet	329:4:8038:8045	12418	8	True				
ANR	12505	Identifier	RETiRet		12418	0					
ANR	12506	ReturnType	static rsRetVal		12418	1					
ANR	12507	Identifier	MotifyMessage		12418	2					
ANR	12508	ParameterList	instanceData * pData		12418	3					
ANR	12509	Parameter	instanceData * pData	316:14:7733:7751	12418	0	True				
ANR	12510	ParameterType	instanceData *		12418	0					
ANR	12511	Identifier	pData		12418	1					
ANR	12512	CFGEntryNode	ENTRY		12418		True				
ANR	12513	CFGExitNode	EXIT		12418		True				
ANR	12514	Symbol	pData		12418						
ANR	12515	Symbol	msg		12418						
ANR	12516	Symbol	NULL		12418						
ANR	12517	Symbol	line		12418						
ANR	12518	Symbol	grok		12418						
ANR	12519	Symbol	pData -> pszSource		12418						
ANR	12520	Symbol	strtok		12418						
ANR	12521	Symbol	CreateGrok		12418						
ANR	12522	Symbol	strdup		12418						
ANR	12523	Symbol	* pData		12418						
ANR	12524	DeclStmt									
ANR	12525	Decl							BEGINdoAction_NoStrings smsg_t	BEGINdoAction_NoStrings smsg_t * *	ppMsg
ANR	12526	DeclStmt									
ANR	12527	Decl							smsg_t	smsg_t *	pMsg
ANR	12528	DeclStmt									
ANR	12529	Decl							uchar	uchar *	buf
ANR	12530	DeclStmt									
ANR	12531	Decl							instanceData	instanceData *	pData
ANR	12532	DeclStmt									
ANR	12533	Decl							CODESTARTdoAction	CODESTARTdoAction	pData
ANR	12534	DeclStmt									
ANR	12535	Decl							CODE_STD_FINALIZERparseSelectorAct ENDparseSelectorAct BEGINmodExit CODESTARTmodExit	"CODE_STD_FINALIZERparseSelectorAct ENDparseSelectorAct BEGINmodExit CODESTARTmodExit ( errmsg , CORE_COMPONENT )"	objRelease
ANR	12536	DeclStmt									
ANR	12537	Decl							rsRetVal	rsRetVal	localRet
ANR	12538	DeclStmt									
ANR	12539	Decl							rsRetVal ( * ) ( unsigned long * pOpts )	rsRetVal ( * ) ( unsigned long * pOpts )	pomsrGetSupportedTplOpts
ANR	12540	DeclStmt									
ANR	12541	Decl							unsigned long	unsigned long	opts
ANR	12542	DeclStmt									
ANR	12543	Decl							int	int	bMsgPassingSupported
ANR	12544	DeclStmt									
ANR	12545	Decl							CODESTARTmodInit	CODESTARTmodInit *	ipIFVersProvided
ANR	12546	DeclStmt									
ANR	12547	Decl							CODEmodInit_QueryRegCFSLineHdlr	CODEmodInit_QueryRegCFSLineHdlr	DBGPRINTF
