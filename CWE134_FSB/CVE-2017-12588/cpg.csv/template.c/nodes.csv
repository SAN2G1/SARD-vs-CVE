command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	325734	File	data/converged/CVE-2017-12588_rsyslog/template.c								
ANR	325735	DeclStmt									
ANR	325736	Decl							struct cnfparamdescr	struct cnfparamdescr [ ]	cnfparamdescr
ANR	325737	DeclStmt									
ANR	325738	Decl							struct cnfparamblk	struct cnfparamblk	pblk
ANR	325739	DeclStmt									
ANR	325740	Decl							struct cnfparamdescr	struct cnfparamdescr [ ]	cnfparamdescrProperty
ANR	325741	DeclStmt									
ANR	325742	Decl							struct cnfparamblk	struct cnfparamblk	pblkProperty
ANR	325743	DeclStmt									
ANR	325744	Decl							struct cnfparamdescr	struct cnfparamdescr [ ]	cnfparamdescrConstant
ANR	325745	DeclStmt									
ANR	325746	Decl							struct cnfparamblk	struct cnfparamblk	pblkConstant
ANR	325747	DeclStmt									
ANR	325748	Decl							int	int	bFirstRegexpErrmsg
ANR	325749	DeclStmt									
ANR	325750	Decl							uchar	uchar *	pNewBuf
ANR	325751	DeclStmt									
ANR	325752	Decl							size_t	size_t	iNewSize
ANR	325753	DeclStmt									
ANR	325754	Decl							__restrict__	__restrict__	pTpe
ANR	325755	DeclStmt									
ANR	325756	Decl							size_t	size_t	iBuf
ANR	325757	DeclStmt									
ANR	325758	Decl							unsigned short	unsigned short	bMustBeFreed
ANR	325759	DeclStmt									
ANR	325760	Decl							uchar	uchar *	pVal
ANR	325761	DeclStmt									
ANR	325762	Decl							rs_size_t	rs_size_t	iLenVal
ANR	325763	DeclStmt									
ANR	325764	Decl							struct templateEntry	struct templateEntry *	pTpe
ANR	325765	DeclStmt									
ANR	325766	Decl							uchar	uchar * *	pArr
ANR	325767	DeclStmt									
ANR	325768	Decl							int	int	iArr
ANR	325769	DeclStmt									
ANR	325770	Decl							rs_size_t	rs_size_t	propLen
ANR	325771	DeclStmt									
ANR	325772	Decl							unsigned short	unsigned short	bMustBeFreed
ANR	325773	DeclStmt									
ANR	325774	Decl							uchar	uchar *	pVal
ANR	325775	DeclStmt									
ANR	325776	Decl							struct templateEntry	struct templateEntry *	pTpe
ANR	325777	DeclStmt									
ANR	325778	Decl							rs_size_t	rs_size_t	propLen
ANR	325779	DeclStmt									
ANR	325780	Decl							unsigned short	unsigned short	bMustBeFreed
ANR	325781	DeclStmt									
ANR	325782	Decl							uchar	uchar *	pVal
ANR	325783	DeclStmt									
ANR	325784	Decl							struct json_object	struct json_object *	json
ANR	325785	Decl							struct json_object	struct json_object *	jsonf
ANR	325786	DeclStmt									
ANR	325787	Decl							rsRetVal	rsRetVal	localRet
ANR	325788	Function	doEmergencyEscape	412:0:13212:13558							
ANR	325789	FunctionDef	"doEmergencyEscape (register uchar * p , int mode)"		325788	0					
ANR	325790	CompoundStatement		413:0:13271:13558	325788	0					
ANR	325791	WhileStatement	while ( * p )		325788	0					
ANR	325792	Condition	* p	414:7:13280:13281	325788	0	True				
ANR	325793	UnaryOperationExpression	* p		325788	0					
ANR	325794	UnaryOperator	*		325788	0					
ANR	325795	Identifier	p		325788	1					
ANR	325796	CompoundStatement		2:11:12:12	325788	1					
ANR	325797	IfStatement	if ( ( mode == SQL_ESCAPE || mode == STDSQL_ESCAPE ) && * p == '\\'' )		325788	0					
ANR	325798	Condition	( mode == SQL_ESCAPE || mode == STDSQL_ESCAPE ) && * p == '\\''	415:5:13291:13347	325788	0	True				
ANR	325799	AndExpression	( mode == SQL_ESCAPE || mode == STDSQL_ESCAPE ) && * p == '\\''		325788	0		&&			
ANR	325800	OrExpression	mode == SQL_ESCAPE || mode == STDSQL_ESCAPE		325788	0		||			
ANR	325801	EqualityExpression	mode == SQL_ESCAPE		325788	0		==			
ANR	325802	Identifier	mode		325788	0					
ANR	325803	Identifier	SQL_ESCAPE		325788	1					
ANR	325804	EqualityExpression	mode == STDSQL_ESCAPE		325788	1		==			
ANR	325805	Identifier	mode		325788	0					
ANR	325806	Identifier	STDSQL_ESCAPE		325788	1					
ANR	325807	EqualityExpression	* p == '\\''		325788	1		==			
ANR	325808	UnaryOperationExpression	* p		325788	0					
ANR	325809	UnaryOperator	*		325788	0					
ANR	325810	Identifier	p		325788	1					
ANR	325811	PrimaryExpression	'\\''		325788	1					
ANR	325812	CompoundStatement		3:64:78:78	325788	1					
ANR	325813	ExpressionStatement	"* p = '""'"	416:3:13355:13363	325788	0	True				
ANR	325814	AssignmentExpression	"* p = '""'"		325788	0		=			
ANR	325815	UnaryOperationExpression	* p		325788	0					
ANR	325816	UnaryOperator	*		325788	0					
ANR	325817	Identifier	p		325788	1					
ANR	325818	PrimaryExpression	"'""'"		325788	1					
ANR	325819	ElseStatement	else		325788	0					
ANR	325820	IfStatement	if ( mode == JSON_ESCAPE )		325788	0					
ANR	325821	Condition	mode == JSON_ESCAPE	417:12:13377:13395	325788	0	True				
ANR	325822	EqualityExpression	mode == JSON_ESCAPE		325788	0		==			
ANR	325823	Identifier	mode		325788	0					
ANR	325824	Identifier	JSON_ESCAPE		325788	1					
ANR	325825	CompoundStatement		5:33:126:126	325788	1					
ANR	325826	IfStatement	"if ( * p == '""' )"		325788	0					
ANR	325827	Condition	"* p == '""'"	418:6:13406:13414	325788	0	True				
ANR	325828	EqualityExpression	"* p == '""'"		325788	0		==			
ANR	325829	UnaryOperationExpression	* p		325788	0					
ANR	325830	UnaryOperator	*		325788	0					
ANR	325831	Identifier	p		325788	1					
ANR	325832	PrimaryExpression	"'""'"		325788	1					
ANR	325833	CompoundStatement		6:17:145:145	325788	1					
ANR	325834	ExpressionStatement	* p = '\\''	419:4:13423:13432	325788	0	True				
ANR	325835	AssignmentExpression	* p = '\\''		325788	0		=			
ANR	325836	UnaryOperationExpression	* p		325788	0					
ANR	325837	UnaryOperator	*		325788	0					
ANR	325838	Identifier	p		325788	1					
ANR	325839	PrimaryExpression	'\\''		325788	1					
ANR	325840	ElseStatement	else		325788	0					
ANR	325841	IfStatement	if ( * p == '\\\\' )		325788	0					
ANR	325842	Condition	* p == '\\\\'	420:13:13447:13456	325788	0	True				
ANR	325843	EqualityExpression	* p == '\\\\'		325788	0		==			
ANR	325844	UnaryOperationExpression	* p		325788	0					
ANR	325845	UnaryOperator	*		325788	0					
ANR	325846	Identifier	p		325788	1					
ANR	325847	PrimaryExpression	'\\\\'		325788	1					
ANR	325848	CompoundStatement		8:26:188:188	325788	1					
ANR	325849	ExpressionStatement	* p = '/'	421:4:13466:13474	325788	0	True				
ANR	325850	AssignmentExpression	* p = '/'		325788	0		=			
ANR	325851	UnaryOperationExpression	* p		325788	0					
ANR	325852	UnaryOperator	*		325788	0					
ANR	325853	Identifier	p		325788	1					
ANR	325854	PrimaryExpression	'/'		325788	1					
ANR	325855	ElseStatement	else		325788	0					
ANR	325856	IfStatement	if ( ( mode == SQL_ESCAPE ) && * p == '\\\\' )		325788	0					
ANR	325857	Condition	( mode == SQL_ESCAPE ) && * p == '\\\\'	423:12:13493:13526	325788	0	True				
ANR	325858	AndExpression	( mode == SQL_ESCAPE ) && * p == '\\\\'		325788	0		&&			
ANR	325859	EqualityExpression	mode == SQL_ESCAPE		325788	0		==			
ANR	325860	Identifier	mode		325788	0					
ANR	325861	Identifier	SQL_ESCAPE		325788	1					
ANR	325862	EqualityExpression	* p == '\\\\'		325788	1		==			
ANR	325863	UnaryOperationExpression	* p		325788	0					
ANR	325864	UnaryOperator	*		325788	0					
ANR	325865	Identifier	p		325788	1					
ANR	325866	PrimaryExpression	'\\\\'		325788	1					
ANR	325867	CompoundStatement		11:48:257:257	325788	1					
ANR	325868	ExpressionStatement	* p = '/'	424:3:13534:13542	325788	0	True				
ANR	325869	AssignmentExpression	* p = '/'		325788	0		=			
ANR	325870	UnaryOperationExpression	* p		325788	0					
ANR	325871	UnaryOperator	*		325788	0					
ANR	325872	Identifier	p		325788	1					
ANR	325873	PrimaryExpression	'/'		325788	1					
ANR	325874	ExpressionStatement	++ p	426:2:13550:13553	325788	1	True				
ANR	325875	UnaryExpression	++ p		325788	0					
ANR	325876	IncDec	++		325788	0					
ANR	325877	Identifier	p		325788	1					
ANR	325878	ReturnType	static void		325788	1					
ANR	325879	Identifier	doEmergencyEscape		325788	2					
ANR	325880	ParameterList	"register uchar * p , int mode"		325788	3					
ANR	325881	Parameter	register uchar * p	412:30:13242:13258	325788	0	True				
ANR	325882	ParameterType	register uchar *		325788	0					
ANR	325883	Identifier	p		325788	1					
ANR	325884	Parameter	int mode	412:49:13261:13268	325788	1	True				
ANR	325885	ParameterType	int		325788	0					
ANR	325886	Identifier	mode		325788	1					
ANR	325887	CFGEntryNode	ENTRY		325788		True				
ANR	325888	CFGExitNode	EXIT		325788		True				
ANR	325889	Symbol	p		325788						
ANR	325890	Symbol	mode		325788						
ANR	325891	Symbol	STDSQL_ESCAPE		325788						
ANR	325892	Symbol	* p		325788						
ANR	325893	Symbol	JSON_ESCAPE		325788						
ANR	325894	Symbol	SQL_ESCAPE		325788						
ANR	325895	Function	doEscape	454:0:14716:16413							
ANR	325896	FunctionDef	"doEscape (uchar * * pp , rs_size_t * pLen , unsigned short * pbMustBeFreed , int mode)"		325895	0					
ANR	325897	CompoundStatement		456:0:14804:16413	325895	0					
ANR	325898	ExpressionStatement	DEFiRet	457:1:14807:14814	325895	0	True				
ANR	325899	Identifier	DEFiRet		325895	0					
ANR	325900	IdentifierDeclStatement	uchar * p = NULL ;	458:1:14817:14832	325895	1	True				
ANR	325901	IdentifierDecl	* p = NULL		325895	0					
ANR	325902	IdentifierDeclType	uchar *		325895	0					
ANR	325903	Identifier	p		325895	1					
ANR	325904	AssignmentExpression	* p = NULL		325895	2		=			
ANR	325905	Identifier	NULL		325895	0					
ANR	325906	Identifier	NULL		325895	1					
ANR	325907	IdentifierDeclStatement	int iLen ;	459:1:14835:14843	325895	2	True				
ANR	325908	IdentifierDecl	iLen		325895	0					
ANR	325909	IdentifierDeclType	int		325895	0					
ANR	325910	Identifier	iLen		325895	1					
ANR	325911	IdentifierDeclStatement	cstr_t * pStrB = NULL ;	460:1:14846:14866	325895	3	True				
ANR	325912	IdentifierDecl	* pStrB = NULL		325895	0					
ANR	325913	IdentifierDeclType	cstr_t *		325895	0					
ANR	325914	Identifier	pStrB		325895	1					
ANR	325915	AssignmentExpression	* pStrB = NULL		325895	2		=			
ANR	325916	Identifier	NULL		325895	0					
ANR	325917	Identifier	NULL		325895	1					
ANR	325918	IdentifierDeclStatement	uchar * pszGenerated ;	461:1:14869:14888	325895	4	True				
ANR	325919	IdentifierDecl	* pszGenerated		325895	0					
ANR	325920	IdentifierDeclType	uchar *		325895	0					
ANR	325921	Identifier	pszGenerated		325895	1					
ANR	325922	ExpressionStatement	assert ( pp != NULL )	463:1:14892:14910	325895	5	True				
ANR	325923	CallExpression	assert ( pp != NULL )		325895	0					
ANR	325924	Callee	assert		325895	0					
ANR	325925	Identifier	assert		325895	0					
ANR	325926	ArgumentList	pp != NULL		325895	1					
ANR	325927	Argument	pp != NULL		325895	0					
ANR	325928	EqualityExpression	pp != NULL		325895	0		!=			
ANR	325929	Identifier	pp		325895	0					
ANR	325930	Identifier	NULL		325895	1					
ANR	325931	ExpressionStatement	assert ( * pp != NULL )	464:1:14913:14932	325895	6	True				
ANR	325932	CallExpression	assert ( * pp != NULL )		325895	0					
ANR	325933	Callee	assert		325895	0					
ANR	325934	Identifier	assert		325895	0					
ANR	325935	ArgumentList	* pp != NULL		325895	1					
ANR	325936	Argument	* pp != NULL		325895	0					
ANR	325937	EqualityExpression	* pp != NULL		325895	0		!=			
ANR	325938	UnaryOperationExpression	* pp		325895	0					
ANR	325939	UnaryOperator	*		325895	0					
ANR	325940	Identifier	pp		325895	1					
ANR	325941	Identifier	NULL		325895	1					
ANR	325942	ExpressionStatement	assert ( pLen != NULL )	465:1:14935:14955	325895	7	True				
ANR	325943	CallExpression	assert ( pLen != NULL )		325895	0					
ANR	325944	Callee	assert		325895	0					
ANR	325945	Identifier	assert		325895	0					
ANR	325946	ArgumentList	pLen != NULL		325895	1					
ANR	325947	Argument	pLen != NULL		325895	0					
ANR	325948	EqualityExpression	pLen != NULL		325895	0		!=			
ANR	325949	Identifier	pLen		325895	0					
ANR	325950	Identifier	NULL		325895	1					
ANR	325951	ExpressionStatement	assert ( pbMustBeFreed != NULL )	466:1:14958:14987	325895	8	True				
ANR	325952	CallExpression	assert ( pbMustBeFreed != NULL )		325895	0					
ANR	325953	Callee	assert		325895	0					
ANR	325954	Identifier	assert		325895	0					
ANR	325955	ArgumentList	pbMustBeFreed != NULL		325895	1					
ANR	325956	Argument	pbMustBeFreed != NULL		325895	0					
ANR	325957	EqualityExpression	pbMustBeFreed != NULL		325895	0		!=			
ANR	325958	Identifier	pbMustBeFreed		325895	0					
ANR	325959	Identifier	NULL		325895	1					
ANR	325960	IfStatement	if ( mode == STDSQL_ESCAPE )		325895	9					
ANR	325961	Condition	mode == STDSQL_ESCAPE	469:4:15049:15069	325895	0	True				
ANR	325962	EqualityExpression	mode == STDSQL_ESCAPE		325895	0		==			
ANR	325963	Identifier	mode		325895	0					
ANR	325964	Identifier	STDSQL_ESCAPE		325895	1					
ANR	325965	ForStatement	for ( p = * pp ; * p && * p != '\\'' ; ++ p )		325895	1					
ANR	325966	ForInit	p = * pp ;	470:6:15078:15086	325895	0	True				
ANR	325967	AssignmentExpression	p = * pp		325895	0		=			
ANR	325968	Identifier	p		325895	0					
ANR	325969	UnaryOperationExpression	* pp		325895	1					
ANR	325970	UnaryOperator	*		325895	0					
ANR	325971	Identifier	pp		325895	1					
ANR	325972	Condition	* p && * p != '\\''	470:16:15088:15103	325895	1	True				
ANR	325973	AndExpression	* p && * p != '\\''		325895	0		&&			
ANR	325974	UnaryOperationExpression	* p		325895	0					
ANR	325975	UnaryOperator	*		325895	0					
ANR	325976	Identifier	p		325895	1					
ANR	325977	EqualityExpression	* p != '\\''		325895	1		!=			
ANR	325978	UnaryOperationExpression	* p		325895	0					
ANR	325979	UnaryOperator	*		325895	0					
ANR	325980	Identifier	p		325895	1					
ANR	325981	PrimaryExpression	'\\''		325895	1					
ANR	325982	UnaryExpression	++ p	470:35:15107:15109	325895	2	True				
ANR	325983	IncDec	++		325895	0					
ANR	325984	Identifier	p		325895	1					
ANR	325985	ExpressionStatement		471:3:15115:15115	325895	3	True				
ANR	325986	ElseStatement	else		325895	0					
ANR	325987	IfStatement	if ( mode == SQL_ESCAPE )		325895	0					
ANR	325988	Condition	mode == SQL_ESCAPE	472:9:15126:15143	325895	0	True				
ANR	325989	EqualityExpression	mode == SQL_ESCAPE		325895	0		==			
ANR	325990	Identifier	mode		325895	0					
ANR	325991	Identifier	SQL_ESCAPE		325895	1					
ANR	325992	ForStatement	for ( p = * pp ; * p && * p != '\\'' && * p != '\\\\' ; ++ p )		325895	1					
ANR	325993	ForInit	p = * pp ;	473:6:15152:15160	325895	0	True				
ANR	325994	AssignmentExpression	p = * pp		325895	0		=			
ANR	325995	Identifier	p		325895	0					
ANR	325996	UnaryOperationExpression	* pp		325895	1					
ANR	325997	UnaryOperator	*		325895	0					
ANR	325998	Identifier	pp		325895	1					
ANR	325999	Condition	* p && * p != '\\'' && * p != '\\\\'	473:16:15162:15191	325895	1	True				
ANR	326000	AndExpression	* p && * p != '\\'' && * p != '\\\\'		325895	0		&&			
ANR	326001	UnaryOperationExpression	* p		325895	0					
ANR	326002	UnaryOperator	*		325895	0					
ANR	326003	Identifier	p		325895	1					
ANR	326004	AndExpression	* p != '\\'' && * p != '\\\\'		325895	1		&&			
ANR	326005	EqualityExpression	* p != '\\''		325895	0		!=			
ANR	326006	UnaryOperationExpression	* p		325895	0					
ANR	326007	UnaryOperator	*		325895	0					
ANR	326008	Identifier	p		325895	1					
ANR	326009	PrimaryExpression	'\\''		325895	1					
ANR	326010	EqualityExpression	* p != '\\\\'		325895	1		!=			
ANR	326011	UnaryOperationExpression	* p		325895	0					
ANR	326012	UnaryOperator	*		325895	0					
ANR	326013	Identifier	p		325895	1					
ANR	326014	PrimaryExpression	'\\\\'		325895	1					
ANR	326015	UnaryExpression	++ p	473:49:15195:15197	325895	2	True				
ANR	326016	IncDec	++		325895	0					
ANR	326017	Identifier	p		325895	1					
ANR	326018	ExpressionStatement		474:3:15203:15203	325895	3	True				
ANR	326019	ElseStatement	else		325895	0					
ANR	326020	IfStatement	if ( mode == JSON_ESCAPE )		325895	0					
ANR	326021	Condition	mode == JSON_ESCAPE	475:9:15214:15232	325895	0	True				
ANR	326022	EqualityExpression	mode == JSON_ESCAPE		325895	0		==			
ANR	326023	Identifier	mode		325895	0					
ANR	326024	Identifier	JSON_ESCAPE		325895	1					
ANR	326025	ForStatement	"for ( p = * pp ; * p && ( * p == '""' || * p == '\\\\' ) ; ++ p )"		325895	1					
ANR	326026	ForInit	p = * pp ;	476:6:15241:15249	325895	0	True				
ANR	326027	AssignmentExpression	p = * pp		325895	0		=			
ANR	326028	Identifier	p		325895	0					
ANR	326029	UnaryOperationExpression	* pp		325895	1					
ANR	326030	UnaryOperator	*		325895	0					
ANR	326031	Identifier	pp		325895	1					
ANR	326032	Condition	"* p && ( * p == '""' || * p == '\\\\' )"	476:16:15251:15283	325895	1	True				
ANR	326033	AndExpression	"* p && ( * p == '""' || * p == '\\\\' )"		325895	0		&&			
ANR	326034	UnaryOperationExpression	* p		325895	0					
ANR	326035	UnaryOperator	*		325895	0					
ANR	326036	Identifier	p		325895	1					
ANR	326037	OrExpression	"* p == '""' || * p == '\\\\'"		325895	1		||			
ANR	326038	EqualityExpression	"* p == '""'"		325895	0		==			
ANR	326039	UnaryOperationExpression	* p		325895	0					
ANR	326040	UnaryOperator	*		325895	0					
ANR	326041	Identifier	p		325895	1					
ANR	326042	PrimaryExpression	"'""'"		325895	1					
ANR	326043	EqualityExpression	* p == '\\\\'		325895	1		==			
ANR	326044	UnaryOperationExpression	* p		325895	0					
ANR	326045	UnaryOperator	*		325895	0					
ANR	326046	Identifier	p		325895	1					
ANR	326047	PrimaryExpression	'\\\\'		325895	1					
ANR	326048	UnaryExpression	++ p	476:52:15287:15289	325895	2	True				
ANR	326049	IncDec	++		325895	0					
ANR	326050	Identifier	p		325895	1					
ANR	326051	ExpressionStatement		477:3:15295:15295	325895	3	True				
ANR	326052	IfStatement	if ( p && * p == '\\0' )		325895	10					
ANR	326053	Condition	p && * p == '\\0'	480:4:15413:15427	325895	0	True				
ANR	326054	AndExpression	p && * p == '\\0'		325895	0		&&			
ANR	326055	Identifier	p		325895	0					
ANR	326056	EqualityExpression	* p == '\\0'		325895	1		==			
ANR	326057	UnaryOperationExpression	* p		325895	0					
ANR	326058	UnaryOperator	*		325895	0					
ANR	326059	Identifier	p		325895	1					
ANR	326060	PrimaryExpression	'\\0'		325895	1					
ANR	326061	ExpressionStatement	FINALIZE	481:2:15432:15440	325895	1	True				
ANR	326062	Identifier	FINALIZE		325895	0					
ANR	326063	ExpressionStatement	p = * pp	483:1:15478:15485	325895	11	True				
ANR	326064	AssignmentExpression	p = * pp		325895	0		=			
ANR	326065	Identifier	p		325895	0					
ANR	326066	UnaryOperationExpression	* pp		325895	1					
ANR	326067	UnaryOperator	*		325895	0					
ANR	326068	Identifier	pp		325895	1					
ANR	326069	ExpressionStatement	iLen = * pLen	484:1:15488:15500	325895	12	True				
ANR	326070	AssignmentExpression	iLen = * pLen		325895	0		=			
ANR	326071	Identifier	iLen		325895	0					
ANR	326072	UnaryOperationExpression	* pLen		325895	1					
ANR	326073	UnaryOperator	*		325895	0					
ANR	326074	Identifier	pLen		325895	1					
ANR	326075	ExpressionStatement	CHKiRet ( cstrConstruct ( & pStrB ) )	485:1:15503:15533	325895	13	True				
ANR	326076	CallExpression	CHKiRet ( cstrConstruct ( & pStrB ) )		325895	0					
ANR	326077	Callee	CHKiRet		325895	0					
ANR	326078	Identifier	CHKiRet		325895	0					
ANR	326079	ArgumentList	cstrConstruct ( & pStrB )		325895	1					
ANR	326080	Argument	cstrConstruct ( & pStrB )		325895	0					
ANR	326081	CallExpression	cstrConstruct ( & pStrB )		325895	0					
ANR	326082	Callee	cstrConstruct		325895	0					
ANR	326083	Identifier	cstrConstruct		325895	0					
ANR	326084	ArgumentList	& pStrB		325895	1					
ANR	326085	Argument	& pStrB		325895	0					
ANR	326086	UnaryOperationExpression	& pStrB		325895	0					
ANR	326087	UnaryOperator	&		325895	0					
ANR	326088	Identifier	pStrB		325895	1					
ANR	326089	WhileStatement	while ( * p )		325895	14					
ANR	326090	Condition	* p	487:7:15543:15544	325895	0	True				
ANR	326091	UnaryOperationExpression	* p		325895	0					
ANR	326092	UnaryOperator	*		325895	0					
ANR	326093	Identifier	p		325895	1					
ANR	326094	CompoundStatement		32:11:742:742	325895	1					
ANR	326095	IfStatement	if ( ( mode == SQL_ESCAPE || mode == STDSQL_ESCAPE ) && * p == '\\'' )		325895	0					
ANR	326096	Condition	( mode == SQL_ESCAPE || mode == STDSQL_ESCAPE ) && * p == '\\''	488:5:15554:15612	325895	0	True				
ANR	326097	AndExpression	( mode == SQL_ESCAPE || mode == STDSQL_ESCAPE ) && * p == '\\''		325895	0		&&			
ANR	326098	OrExpression	mode == SQL_ESCAPE || mode == STDSQL_ESCAPE		325895	0		||			
ANR	326099	EqualityExpression	mode == SQL_ESCAPE		325895	0		==			
ANR	326100	Identifier	mode		325895	0					
ANR	326101	Identifier	SQL_ESCAPE		325895	1					
ANR	326102	EqualityExpression	mode == STDSQL_ESCAPE		325895	1		==			
ANR	326103	Identifier	mode		325895	0					
ANR	326104	Identifier	STDSQL_ESCAPE		325895	1					
ANR	326105	EqualityExpression	* p == '\\''		325895	1		==			
ANR	326106	UnaryOperationExpression	* p		325895	0					
ANR	326107	UnaryOperator	*		325895	0					
ANR	326108	Identifier	p		325895	1					
ANR	326109	PrimaryExpression	'\\''		325895	1					
ANR	326110	CompoundStatement		33:66:810:810	325895	1					
ANR	326111	ExpressionStatement	"CHKiRet ( cstrAppendChar ( pStrB , ( mode == STDSQL_ESCAPE ) ? '\\'' : '\\\\' ) )"	489:3:15620:15689	325895	0	True				
ANR	326112	CallExpression	"CHKiRet ( cstrAppendChar ( pStrB , ( mode == STDSQL_ESCAPE ) ? '\\'' : '\\\\' ) )"		325895	0					
ANR	326113	Callee	CHKiRet		325895	0					
ANR	326114	Identifier	CHKiRet		325895	0					
ANR	326115	ArgumentList	"cstrAppendChar ( pStrB , ( mode == STDSQL_ESCAPE ) ? '\\'' : '\\\\' )"		325895	1					
ANR	326116	Argument	"cstrAppendChar ( pStrB , ( mode == STDSQL_ESCAPE ) ? '\\'' : '\\\\' )"		325895	0					
ANR	326117	CallExpression	"cstrAppendChar ( pStrB , ( mode == STDSQL_ESCAPE ) ? '\\'' : '\\\\' )"		325895	0					
ANR	326118	Callee	cstrAppendChar		325895	0					
ANR	326119	Identifier	cstrAppendChar		325895	0					
ANR	326120	ArgumentList	pStrB		325895	1					
ANR	326121	Argument	pStrB		325895	0					
ANR	326122	Identifier	pStrB		325895	0					
ANR	326123	Argument	( mode == STDSQL_ESCAPE ) ? '\\'' : '\\\\'		325895	1					
ANR	326124	ConditionalExpression	( mode == STDSQL_ESCAPE ) ? '\\'' : '\\\\'		325895	0					
ANR	326125	Condition	mode == STDSQL_ESCAPE		325895	0					
ANR	326126	EqualityExpression	mode == STDSQL_ESCAPE		325895	0		==			
ANR	326127	Identifier	mode		325895	0					
ANR	326128	Identifier	STDSQL_ESCAPE		325895	1					
ANR	326129	PrimaryExpression	'\\''		325895	1					
ANR	326130	PrimaryExpression	'\\\\'		325895	2					
ANR	326131	ExpressionStatement	iLen ++	490:3:15694:15700	325895	1	True				
ANR	326132	PostIncDecOperationExpression	iLen ++		325895	0					
ANR	326133	Identifier	iLen		325895	0					
ANR	326134	IncDec	++		325895	1					
ANR	326135	ElseStatement	else		325895	0					
ANR	326136	IfStatement	if ( ( mode == SQL_ESCAPE ) && * p == '\\\\' )		325895	0					
ANR	326137	Condition	( mode == SQL_ESCAPE ) && * p == '\\\\'	491:12:15748:15781	325895	0	True				
ANR	326138	AndExpression	( mode == SQL_ESCAPE ) && * p == '\\\\'		325895	0		&&			
ANR	326139	EqualityExpression	mode == SQL_ESCAPE		325895	0		==			
ANR	326140	Identifier	mode		325895	0					
ANR	326141	Identifier	SQL_ESCAPE		325895	1					
ANR	326142	EqualityExpression	* p == '\\\\'		325895	1		==			
ANR	326143	UnaryOperationExpression	* p		325895	0					
ANR	326144	UnaryOperator	*		325895	0					
ANR	326145	Identifier	p		325895	1					
ANR	326146	PrimaryExpression	'\\\\'		325895	1					
ANR	326147	CompoundStatement		36:48:979:979	325895	1					
ANR	326148	ExpressionStatement	"CHKiRet ( cstrAppendChar ( pStrB , '\\\\' ) )"	492:3:15789:15825	325895	0	True				
ANR	326149	CallExpression	"CHKiRet ( cstrAppendChar ( pStrB , '\\\\' ) )"		325895	0					
ANR	326150	Callee	CHKiRet		325895	0					
ANR	326151	Identifier	CHKiRet		325895	0					
ANR	326152	ArgumentList	"cstrAppendChar ( pStrB , '\\\\' )"		325895	1					
ANR	326153	Argument	"cstrAppendChar ( pStrB , '\\\\' )"		325895	0					
ANR	326154	CallExpression	"cstrAppendChar ( pStrB , '\\\\' )"		325895	0					
ANR	326155	Callee	cstrAppendChar		325895	0					
ANR	326156	Identifier	cstrAppendChar		325895	0					
ANR	326157	ArgumentList	pStrB		325895	1					
ANR	326158	Argument	pStrB		325895	0					
ANR	326159	Identifier	pStrB		325895	0					
ANR	326160	Argument	'\\\\'		325895	1					
ANR	326161	PrimaryExpression	'\\\\'		325895	0					
ANR	326162	ExpressionStatement	iLen ++	493:3:15830:15836	325895	1	True				
ANR	326163	PostIncDecOperationExpression	iLen ++		325895	0					
ANR	326164	Identifier	iLen		325895	0					
ANR	326165	IncDec	++		325895	1					
ANR	326166	ElseStatement	else		325895	0					
ANR	326167	IfStatement	"if ( ( mode == JSON_ESCAPE ) && ( * p == '""' || * p == '\\\\' ) )"		325895	0					
ANR	326168	Condition	"( mode == JSON_ESCAPE ) && ( * p == '""' || * p == '\\\\' )"	494:12:15884:15935	325895	0	True				
ANR	326169	AndExpression	"( mode == JSON_ESCAPE ) && ( * p == '""' || * p == '\\\\' )"		325895	0		&&			
ANR	326170	EqualityExpression	mode == JSON_ESCAPE		325895	0		==			
ANR	326171	Identifier	mode		325895	0					
ANR	326172	Identifier	JSON_ESCAPE		325895	1					
ANR	326173	OrExpression	"* p == '""' || * p == '\\\\'"		325895	1		||			
ANR	326174	EqualityExpression	"* p == '""'"		325895	0		==			
ANR	326175	UnaryOperationExpression	* p		325895	0					
ANR	326176	UnaryOperator	*		325895	0					
ANR	326177	Identifier	p		325895	1					
ANR	326178	PrimaryExpression	"'""'"		325895	1					
ANR	326179	EqualityExpression	* p == '\\\\'		325895	1		==			
ANR	326180	UnaryOperationExpression	* p		325895	0					
ANR	326181	UnaryOperator	*		325895	0					
ANR	326182	Identifier	p		325895	1					
ANR	326183	PrimaryExpression	'\\\\'		325895	1					
ANR	326184	CompoundStatement		39:66:1133:1133	325895	1					
ANR	326185	ExpressionStatement	"CHKiRet ( cstrAppendChar ( pStrB , '\\\\' ) )"	495:3:15943:15979	325895	0	True				
ANR	326186	CallExpression	"CHKiRet ( cstrAppendChar ( pStrB , '\\\\' ) )"		325895	0					
ANR	326187	Callee	CHKiRet		325895	0					
ANR	326188	Identifier	CHKiRet		325895	0					
ANR	326189	ArgumentList	"cstrAppendChar ( pStrB , '\\\\' )"		325895	1					
ANR	326190	Argument	"cstrAppendChar ( pStrB , '\\\\' )"		325895	0					
ANR	326191	CallExpression	"cstrAppendChar ( pStrB , '\\\\' )"		325895	0					
ANR	326192	Callee	cstrAppendChar		325895	0					
ANR	326193	Identifier	cstrAppendChar		325895	0					
ANR	326194	ArgumentList	pStrB		325895	1					
ANR	326195	Argument	pStrB		325895	0					
ANR	326196	Identifier	pStrB		325895	0					
ANR	326197	Argument	'\\\\'		325895	1					
ANR	326198	PrimaryExpression	'\\\\'		325895	0					
ANR	326199	ExpressionStatement	iLen ++	496:3:15984:15990	325895	1	True				
ANR	326200	PostIncDecOperationExpression	iLen ++		325895	0					
ANR	326201	Identifier	iLen		325895	0					
ANR	326202	IncDec	++		325895	1					
ANR	326203	ExpressionStatement	"CHKiRet ( cstrAppendChar ( pStrB , * p ) )"	498:2:16032:16066	325895	1	True				
ANR	326204	CallExpression	"CHKiRet ( cstrAppendChar ( pStrB , * p ) )"		325895	0					
ANR	326205	Callee	CHKiRet		325895	0					
ANR	326206	Identifier	CHKiRet		325895	0					
ANR	326207	ArgumentList	"cstrAppendChar ( pStrB , * p )"		325895	1					
ANR	326208	Argument	"cstrAppendChar ( pStrB , * p )"		325895	0					
ANR	326209	CallExpression	"cstrAppendChar ( pStrB , * p )"		325895	0					
ANR	326210	Callee	cstrAppendChar		325895	0					
ANR	326211	Identifier	cstrAppendChar		325895	0					
ANR	326212	ArgumentList	pStrB		325895	1					
ANR	326213	Argument	pStrB		325895	0					
ANR	326214	Identifier	pStrB		325895	0					
ANR	326215	Argument	* p		325895	1					
ANR	326216	UnaryOperationExpression	* p		325895	0					
ANR	326217	UnaryOperator	*		325895	0					
ANR	326218	Identifier	p		325895	1					
ANR	326219	ExpressionStatement	++ p	499:2:16070:16073	325895	2	True				
ANR	326220	UnaryExpression	++ p		325895	0					
ANR	326221	IncDec	++		325895	0					
ANR	326222	Identifier	p		325895	1					
ANR	326223	ExpressionStatement	cstrFinalize ( pStrB )	501:1:16079:16098	325895	15	True				
ANR	326224	CallExpression	cstrFinalize ( pStrB )		325895	0					
ANR	326225	Callee	cstrFinalize		325895	0					
ANR	326226	Identifier	cstrFinalize		325895	0					
ANR	326227	ArgumentList	pStrB		325895	1					
ANR	326228	Argument	pStrB		325895	0					
ANR	326229	Identifier	pStrB		325895	0					
ANR	326230	ExpressionStatement	"CHKiRet ( cstrConvSzStrAndDestruct ( & pStrB , & pszGenerated , 0 ) )"	502:1:16101:16160	325895	16	True				
ANR	326231	CallExpression	"CHKiRet ( cstrConvSzStrAndDestruct ( & pStrB , & pszGenerated , 0 ) )"		325895	0					
ANR	326232	Callee	CHKiRet		325895	0					
ANR	326233	Identifier	CHKiRet		325895	0					
ANR	326234	ArgumentList	"cstrConvSzStrAndDestruct ( & pStrB , & pszGenerated , 0 )"		325895	1					
ANR	326235	Argument	"cstrConvSzStrAndDestruct ( & pStrB , & pszGenerated , 0 )"		325895	0					
ANR	326236	CallExpression	"cstrConvSzStrAndDestruct ( & pStrB , & pszGenerated , 0 )"		325895	0					
ANR	326237	Callee	cstrConvSzStrAndDestruct		325895	0					
ANR	326238	Identifier	cstrConvSzStrAndDestruct		325895	0					
ANR	326239	ArgumentList	& pStrB		325895	1					
ANR	326240	Argument	& pStrB		325895	0					
ANR	326241	UnaryOperationExpression	& pStrB		325895	0					
ANR	326242	UnaryOperator	&		325895	0					
ANR	326243	Identifier	pStrB		325895	1					
ANR	326244	Argument	& pszGenerated		325895	1					
ANR	326245	UnaryOperationExpression	& pszGenerated		325895	0					
ANR	326246	UnaryOperator	&		325895	0					
ANR	326247	Identifier	pszGenerated		325895	1					
ANR	326248	Argument	0		325895	2					
ANR	326249	PrimaryExpression	0		325895	0					
ANR	326250	IfStatement	if ( * pbMustBeFreed )		325895	17					
ANR	326251	Condition	* pbMustBeFreed	504:4:16167:16180	325895	0	True				
ANR	326252	UnaryOperationExpression	* pbMustBeFreed		325895	0					
ANR	326253	UnaryOperator	*		325895	0					
ANR	326254	Identifier	pbMustBeFreed		325895	1					
ANR	326255	ExpressionStatement	free ( * pp )	505:2:16185:16194	325895	1	True				
ANR	326256	CallExpression	free ( * pp )		325895	0					
ANR	326257	Callee	free		325895	0					
ANR	326258	Identifier	free		325895	0					
ANR	326259	ArgumentList	* pp		325895	1					
ANR	326260	Argument	* pp		325895	0					
ANR	326261	UnaryOperationExpression	* pp		325895	0					
ANR	326262	UnaryOperator	*		325895	0					
ANR	326263	Identifier	pp		325895	1					
ANR	326264	ExpressionStatement	* pp = pszGenerated	507:1:16227:16245	325895	18	True				
ANR	326265	AssignmentExpression	* pp = pszGenerated		325895	0		=			
ANR	326266	UnaryOperationExpression	* pp		325895	0					
ANR	326267	UnaryOperator	*		325895	0					
ANR	326268	Identifier	pp		325895	1					
ANR	326269	Identifier	pszGenerated		325895	1					
ANR	326270	ExpressionStatement	* pLen = iLen	508:1:16248:16260	325895	19	True				
ANR	326271	AssignmentExpression	* pLen = iLen		325895	0		=			
ANR	326272	UnaryOperationExpression	* pLen		325895	0					
ANR	326273	UnaryOperator	*		325895	0					
ANR	326274	Identifier	pLen		325895	1					
ANR	326275	Identifier	iLen		325895	1					
ANR	326276	ExpressionStatement	* pbMustBeFreed = 1	509:1:16263:16281	325895	20	True				
ANR	326277	AssignmentExpression	* pbMustBeFreed = 1		325895	0		=			
ANR	326278	UnaryOperationExpression	* pbMustBeFreed		325895	0					
ANR	326279	UnaryOperator	*		325895	0					
ANR	326280	Identifier	pbMustBeFreed		325895	1					
ANR	326281	PrimaryExpression	1		325895	1					
ANR	326282	Label	finalize_it :	511:0:16284:16295	325895	21	True				
ANR	326283	Identifier	finalize_it		325895	0					
ANR	326284	IfStatement	if ( iRet != RS_RET_OK )		325895	22					
ANR	326285	Condition	iRet != RS_RET_OK	512:4:16301:16317	325895	0	True				
ANR	326286	EqualityExpression	iRet != RS_RET_OK		325895	0		!=			
ANR	326287	Identifier	iRet		325895	0					
ANR	326288	Identifier	RS_RET_OK		325895	1					
ANR	326289	CompoundStatement		57:23:1515:1515	325895	1					
ANR	326290	ExpressionStatement	"doEmergencyEscape ( * pp , mode )"	513:2:16324:16352	325895	0	True				
ANR	326291	CallExpression	"doEmergencyEscape ( * pp , mode )"		325895	0					
ANR	326292	Callee	doEmergencyEscape		325895	0					
ANR	326293	Identifier	doEmergencyEscape		325895	0					
ANR	326294	ArgumentList	* pp		325895	1					
ANR	326295	Argument	* pp		325895	0					
ANR	326296	UnaryOperationExpression	* pp		325895	0					
ANR	326297	UnaryOperator	*		325895	0					
ANR	326298	Identifier	pp		325895	1					
ANR	326299	Argument	mode		325895	1					
ANR	326300	Identifier	mode		325895	0					
ANR	326301	IfStatement	if ( pStrB != NULL )		325895	1					
ANR	326302	Condition	pStrB != NULL	514:5:16359:16371	325895	0	True				
ANR	326303	EqualityExpression	pStrB != NULL		325895	0		!=			
ANR	326304	Identifier	pStrB		325895	0					
ANR	326305	Identifier	NULL		325895	1					
ANR	326306	ExpressionStatement	cstrDestruct ( & pStrB )	515:3:16377:16397	325895	1	True				
ANR	326307	CallExpression	cstrDestruct ( & pStrB )		325895	0					
ANR	326308	Callee	cstrDestruct		325895	0					
ANR	326309	Identifier	cstrDestruct		325895	0					
ANR	326310	ArgumentList	& pStrB		325895	1					
ANR	326311	Argument	& pStrB		325895	0					
ANR	326312	UnaryOperationExpression	& pStrB		325895	0					
ANR	326313	UnaryOperator	&		325895	0					
ANR	326314	Identifier	pStrB		325895	1					
ANR	326315	ExpressionStatement	RETiRet	518:1:16404:16411	325895	23	True				
ANR	326316	Identifier	RETiRet		325895	0					
ANR	326317	ReturnType	rsRetVal		325895	1					
ANR	326318	Identifier	doEscape		325895	2					
ANR	326319	ParameterList	"uchar * * pp , rs_size_t * pLen , unsigned short * pbMustBeFreed , int mode"		325895	3					
ANR	326320	Parameter	uchar * * pp	455:9:14734:14743	325895	0	True				
ANR	326321	ParameterType	uchar * *		325895	0					
ANR	326322	Identifier	pp		325895	1					
ANR	326323	Parameter	rs_size_t * pLen	455:21:14746:14760	325895	1	True				
ANR	326324	ParameterType	rs_size_t *		325895	0					
ANR	326325	Identifier	pLen		325895	1					
ANR	326326	Parameter	unsigned short * pbMustBeFreed	455:38:14763:14791	325895	2	True				
ANR	326327	ParameterType	unsigned short *		325895	0					
ANR	326328	Identifier	pbMustBeFreed		325895	1					
ANR	326329	Parameter	int mode	455:69:14794:14801	325895	3	True				
ANR	326330	ParameterType	int		325895	0					
ANR	326331	Identifier	mode		325895	1					
ANR	326332	CFGEntryNode	ENTRY		325895		True				
ANR	326333	CFGExitNode	EXIT		325895		True				
ANR	326334	Symbol	pp		325895						
ANR	326335	Symbol	STDSQL_ESCAPE		325895						
ANR	326336	Symbol	pbMustBeFreed		325895						
ANR	326337	Symbol	NULL		325895						
ANR	326338	Symbol	cstrAppendChar		325895						
ANR	326339	Symbol	* pp		325895						
ANR	326340	Symbol	cstrConvSzStrAndDestruct		325895						
ANR	326341	Symbol	RS_RET_OK		325895						
ANR	326342	Symbol	iRet		325895						
ANR	326343	Symbol	mode		325895						
ANR	326344	Symbol	p		325895						
ANR	326345	Symbol	pStrB		325895						
ANR	326346	Symbol	pLen		325895						
ANR	326347	Symbol	cstrConstruct		325895						
ANR	326348	Symbol	* pbMustBeFreed		325895						
ANR	326349	Symbol	pszGenerated		325895						
ANR	326350	Symbol	* pLen		325895						
ANR	326351	Symbol	* p		325895						
ANR	326352	Symbol	iLen		325895						
ANR	326353	Symbol	JSON_ESCAPE		325895						
ANR	326354	Symbol	& pszGenerated		325895						
ANR	326355	Symbol	SQL_ESCAPE		325895						
ANR	326356	Symbol	& pStrB		325895						
ANR	326357	DeclStmt									
ANR	326358	Decl							struct templateEntry	struct templateEntry *	pTpe
ANR	326359	DeclStmt									
ANR	326360	Decl							struct templateEntry	struct templateEntry *	pTpe
ANR	326361	DeclStmt									
ANR	326362	Decl							uchar	uchar *	p
ANR	326363	Function	tplConstruct	580:0:17844:18288							
ANR	326364	FunctionDef	tplConstruct (rsconf_t * conf)		326363	0					
ANR	326365	CompoundStatement		581:0:17873:18288	326363	0					
ANR	326366	Statement	struct	582:1:17876:17881	326363	0	True				
ANR	326367	Statement	template	582:8:17883:17890	326363	1	True				
ANR	326368	ExpressionStatement	* pTpl	582:17:17892:17897	326363	2	True				
ANR	326369	UnaryOperationExpression	* pTpl		326363	0					
ANR	326370	UnaryOperator	*		326363	0					
ANR	326371	Identifier	pTpl		326363	1					
ANR	326372	Statement	if	583:1:17900:17901	326363	3	True				
ANR	326373	Statement	(	583:3:17902:17902	326363	4	True				
ANR	326374	Statement	(	583:4:17903:17903	326363	5	True				
ANR	326375	Statement	pTpl	583:5:17904:17907	326363	6	True				
ANR	326376	Statement	=	583:10:17909:17909	326363	7	True				
ANR	326377	Statement	calloc	583:12:17911:17916	326363	8	True				
ANR	326378	Statement	(	583:18:17917:17917	326363	9	True				
ANR	326379	Statement	1	583:19:17918:17918	326363	10	True				
ANR	326380	Statement	","	583:20:17919:17919	326363	11	True				
ANR	326381	Statement	sizeof	583:22:17921:17926	326363	12	True				
ANR	326382	Statement	(	583:28:17927:17927	326363	13	True				
ANR	326383	Statement	struct	583:29:17928:17933	326363	14	True				
ANR	326384	Statement	template	583:36:17935:17942	326363	15	True				
ANR	326385	Statement	)	583:44:17943:17943	326363	16	True				
ANR	326386	Statement	)	583:45:17944:17944	326363	17	True				
ANR	326387	Statement	)	583:46:17945:17945	326363	18	True				
ANR	326388	Statement	==	583:48:17947:17948	326363	19	True				
ANR	326389	Statement	NULL	583:51:17950:17953	326363	20	True				
ANR	326390	Statement	)	583:55:17954:17954	326363	21	True				
ANR	326391	ReturnStatement	return NULL ;	584:2:17958:17969	326363	22	True				
ANR	326392	Identifier	NULL		326363	0					
ANR	326393	IfStatement	if ( conf -> templates . last == NULL )		326363	23					
ANR	326394	Condition	conf -> templates . last == NULL	589:4:18070:18097	326363	0	True				
ANR	326395	EqualityExpression	conf -> templates . last == NULL		326363	0		==			
ANR	326396	MemberAccess	conf -> templates . last		326363	0					
ANR	326397	PtrMemberAccess	conf -> templates		326363	0					
ANR	326398	Identifier	conf		326363	0					
ANR	326399	Identifier	templates		326363	1					
ANR	326400	Identifier	last		326363	1					
ANR	326401	Identifier	NULL		326363	1					
ANR	326402	CompoundStatement		9:34:226:226	326363	1					
ANR	326403	ExpressionStatement	conf -> templates . root = conf -> templates . last = pTpl	591:2:18138:18188	326363	0	True				
ANR	326404	AssignmentExpression	conf -> templates . root = conf -> templates . last = pTpl		326363	0		=			
ANR	326405	MemberAccess	conf -> templates . root		326363	0					
ANR	326406	PtrMemberAccess	conf -> templates		326363	0					
ANR	326407	Identifier	conf		326363	0					
ANR	326408	Identifier	templates		326363	1					
ANR	326409	Identifier	root		326363	1					
ANR	326410	AssignmentExpression	conf -> templates . last = pTpl		326363	1		=			
ANR	326411	MemberAccess	conf -> templates . last		326363	0					
ANR	326412	PtrMemberAccess	conf -> templates		326363	0					
ANR	326413	Identifier	conf		326363	0					
ANR	326414	Identifier	templates		326363	1					
ANR	326415	Identifier	last		326363	1					
ANR	326416	Identifier	pTpl		326363	1					
ANR	326417	ElseStatement	else		326363	0					
ANR	326418	CompoundStatement		12:8:324:324	326363	0					
ANR	326419	ExpressionStatement	conf -> templates . last -> pNext = pTpl	593:2:18202:18236	326363	0	True				
ANR	326420	AssignmentExpression	conf -> templates . last -> pNext = pTpl		326363	0		=			
ANR	326421	PtrMemberAccess	conf -> templates . last -> pNext		326363	0					
ANR	326422	MemberAccess	conf -> templates . last		326363	0					
ANR	326423	PtrMemberAccess	conf -> templates		326363	0					
ANR	326424	Identifier	conf		326363	0					
ANR	326425	Identifier	templates		326363	1					
ANR	326426	Identifier	last		326363	1					
ANR	326427	Identifier	pNext		326363	1					
ANR	326428	Identifier	pTpl		326363	1					
ANR	326429	ExpressionStatement	conf -> templates . last = pTpl	594:2:18240:18267	326363	1	True				
ANR	326430	AssignmentExpression	conf -> templates . last = pTpl		326363	0		=			
ANR	326431	MemberAccess	conf -> templates . last		326363	0					
ANR	326432	PtrMemberAccess	conf -> templates		326363	0					
ANR	326433	Identifier	conf		326363	0					
ANR	326434	Identifier	templates		326363	1					
ANR	326435	Identifier	last		326363	1					
ANR	326436	Identifier	pTpl		326363	1					
ANR	326437	ReturnStatement	return ( pTpl ) ;	597:1:18274:18286	326363	24	True				
ANR	326438	Identifier	pTpl		326363	0					
ANR	326439	Identifier	tplConstruct		326363	1					
ANR	326440	ParameterList	rsconf_t * conf		326363	2					
ANR	326441	Parameter	rsconf_t * conf	580:13:17857:17870	326363	0	True				
ANR	326442	ParameterType	rsconf_t *		326363	0					
ANR	326443	Identifier	conf		326363	1					
ANR	326444	CFGEntryNode	ENTRY		326363		True				
ANR	326445	CFGExitNode	EXIT		326363		True				
ANR	326446	Symbol	* conf -> templates		326363						
ANR	326447	Symbol	conf -> templates . last		326363						
ANR	326448	Symbol	NULL		326363						
ANR	326449	Symbol	pTpl		326363						
ANR	326450	Symbol	* * conf		326363						
ANR	326451	Symbol	conf -> templates		326363						
ANR	326452	Symbol	* conf		326363						
ANR	326453	Symbol	conf		326363						
ANR	326454	Symbol	* conf -> templates . last		326363						
ANR	326455	Symbol	conf -> templates . last -> pNext		326363						
ANR	326456	Symbol	conf -> templates . root		326363						
ANR	326457	DeclStmt									
ANR	326458	Decl							unsigned char	unsigned char *	p
ANR	326459	DeclStmt									
ANR	326460	Decl							cstr_t	cstr_t *	pStrB
ANR	326461	DeclStmt									
ANR	326462	Decl							struct templateEntry	struct templateEntry *	pTpe
ANR	326463	DeclStmt									
ANR	326464	Decl							int	int	i
ANR	326465	Function	hasFormat	699:0:20666:20873							
ANR	326466	FunctionDef	hasFormat (struct templateEntry * pTpe)		326465	0					
ANR	326467	CompoundStatement		699:49:20715:20873	326465	0					
ANR	326468	ReturnStatement	return ( pTpe -> data . field . options . bCSV || pTpe -> data . field . options . bJSON || pTpe -> data . field . options . bJSONf || pTpe -> data . field . options . bJSONr ) ;	700:1:20718:20871	326465	0	True				
ANR	326469	OrExpression	pTpe -> data . field . options . bCSV || pTpe -> data . field . options . bJSON || pTpe -> data . field . options . bJSONf || pTpe -> data . field . options . bJSONr		326465	0		||			
ANR	326470	MemberAccess	pTpe -> data . field . options . bCSV		326465	0					
ANR	326471	MemberAccess	pTpe -> data . field . options		326465	0					
ANR	326472	MemberAccess	pTpe -> data . field		326465	0					
ANR	326473	PtrMemberAccess	pTpe -> data		326465	0					
ANR	326474	Identifier	pTpe		326465	0					
ANR	326475	Identifier	data		326465	1					
ANR	326476	Identifier	field		326465	1					
ANR	326477	Identifier	options		326465	1					
ANR	326478	Identifier	bCSV		326465	1					
ANR	326479	OrExpression	pTpe -> data . field . options . bJSON || pTpe -> data . field . options . bJSONf || pTpe -> data . field . options . bJSONr		326465	1		||			
ANR	326480	MemberAccess	pTpe -> data . field . options . bJSON		326465	0					
ANR	326481	MemberAccess	pTpe -> data . field . options		326465	0					
ANR	326482	MemberAccess	pTpe -> data . field		326465	0					
ANR	326483	PtrMemberAccess	pTpe -> data		326465	0					
ANR	326484	Identifier	pTpe		326465	0					
ANR	326485	Identifier	data		326465	1					
ANR	326486	Identifier	field		326465	1					
ANR	326487	Identifier	options		326465	1					
ANR	326488	Identifier	bJSON		326465	1					
ANR	326489	OrExpression	pTpe -> data . field . options . bJSONf || pTpe -> data . field . options . bJSONr		326465	1		||			
ANR	326490	MemberAccess	pTpe -> data . field . options . bJSONf		326465	0					
ANR	326491	MemberAccess	pTpe -> data . field . options		326465	0					
ANR	326492	MemberAccess	pTpe -> data . field		326465	0					
ANR	326493	PtrMemberAccess	pTpe -> data		326465	0					
ANR	326494	Identifier	pTpe		326465	0					
ANR	326495	Identifier	data		326465	1					
ANR	326496	Identifier	field		326465	1					
ANR	326497	Identifier	options		326465	1					
ANR	326498	Identifier	bJSONf		326465	1					
ANR	326499	MemberAccess	pTpe -> data . field . options . bJSONr		326465	1					
ANR	326500	MemberAccess	pTpe -> data . field . options		326465	0					
ANR	326501	MemberAccess	pTpe -> data . field		326465	0					
ANR	326502	PtrMemberAccess	pTpe -> data		326465	0					
ANR	326503	Identifier	pTpe		326465	0					
ANR	326504	Identifier	data		326465	1					
ANR	326505	Identifier	field		326465	1					
ANR	326506	Identifier	options		326465	1					
ANR	326507	Identifier	bJSONr		326465	1					
ANR	326508	ReturnType	static int		326465	1					
ANR	326509	Identifier	hasFormat		326465	2					
ANR	326510	ParameterList	struct templateEntry * pTpe		326465	3					
ANR	326511	Parameter	struct templateEntry * pTpe	699:21:20687:20712	326465	0	True				
ANR	326512	ParameterType	struct templateEntry *		326465	0					
ANR	326513	Identifier	pTpe		326465	1					
ANR	326514	CFGEntryNode	ENTRY		326465		True				
ANR	326515	CFGExitNode	EXIT		326465		True				
ANR	326516	Symbol	pTpe -> data		326465						
ANR	326517	Symbol	pTpe -> data . field . options . bJSON		326465						
ANR	326518	Symbol	pTpe -> data . field . options . bCSV		326465						
ANR	326519	Symbol	pTpe -> data . field . options . bJSONr		326465						
ANR	326520	Symbol	pTpe -> data . field . options		326465						
ANR	326521	Symbol	pTpe -> data . field		326465						
ANR	326522	Symbol	pTpe -> data . field . options . bJSONf		326465						
ANR	326523	Symbol	pTpe		326465						
ANR	326524	Symbol	* pTpe		326465						
ANR	326525	Function	doOptions	712:0:21058:26717							
ANR	326526	FunctionDef	"doOptions (unsigned char * * pp , struct templateEntry * pTpe)"		326525	0					
ANR	326527	CompoundStatement		713:0:21128:26717	326525	0					
ANR	326528	Statement	register	714:1:21131:21138	326525	0	True				
ANR	326529	IdentifierDeclStatement	unsigned char * p ;	714:10:21140:21156	326525	1	True				
ANR	326530	IdentifierDecl	* p		326525	0					
ANR	326531	IdentifierDeclType	unsigned char *		326525	0					
ANR	326532	Identifier	p		326525	1					
ANR	326533	IdentifierDeclStatement	unsigned char Buf [ 64 ] ;	715:1:21159:21180	326525	2	True				
ANR	326534	IdentifierDecl	Buf [ 64 ]		326525	0					
ANR	326535	IdentifierDeclType	unsigned char [ 64 ]		326525	0					
ANR	326536	Identifier	Buf		326525	1					
ANR	326537	PrimaryExpression	64		326525	2					
ANR	326538	IdentifierDeclStatement	size_t i ;	716:1:21183:21191	326525	3	True				
ANR	326539	IdentifierDecl	i		326525	0					
ANR	326540	IdentifierDeclType	size_t		326525	0					
ANR	326541	Identifier	i		326525	1					
ANR	326542	ExpressionStatement	assert ( pp != NULL )	718:1:21195:21213	326525	4	True				
ANR	326543	CallExpression	assert ( pp != NULL )		326525	0					
ANR	326544	Callee	assert		326525	0					
ANR	326545	Identifier	assert		326525	0					
ANR	326546	ArgumentList	pp != NULL		326525	1					
ANR	326547	Argument	pp != NULL		326525	0					
ANR	326548	EqualityExpression	pp != NULL		326525	0		!=			
ANR	326549	Identifier	pp		326525	0					
ANR	326550	Identifier	NULL		326525	1					
ANR	326551	ExpressionStatement	assert ( * pp != NULL )	719:1:21216:21235	326525	5	True				
ANR	326552	CallExpression	assert ( * pp != NULL )		326525	0					
ANR	326553	Callee	assert		326525	0					
ANR	326554	Identifier	assert		326525	0					
ANR	326555	ArgumentList	* pp != NULL		326525	1					
ANR	326556	Argument	* pp != NULL		326525	0					
ANR	326557	EqualityExpression	* pp != NULL		326525	0		!=			
ANR	326558	UnaryOperationExpression	* pp		326525	0					
ANR	326559	UnaryOperator	*		326525	0					
ANR	326560	Identifier	pp		326525	1					
ANR	326561	Identifier	NULL		326525	1					
ANR	326562	ExpressionStatement	assert ( pTpe != NULL )	720:1:21238:21258	326525	6	True				
ANR	326563	CallExpression	assert ( pTpe != NULL )		326525	0					
ANR	326564	Callee	assert		326525	0					
ANR	326565	Identifier	assert		326525	0					
ANR	326566	ArgumentList	pTpe != NULL		326525	1					
ANR	326567	Argument	pTpe != NULL		326525	0					
ANR	326568	EqualityExpression	pTpe != NULL		326525	0		!=			
ANR	326569	Identifier	pTpe		326525	0					
ANR	326570	Identifier	NULL		326525	1					
ANR	326571	ExpressionStatement	p = * pp	722:1:21262:21269	326525	7	True				
ANR	326572	AssignmentExpression	p = * pp		326525	0		=			
ANR	326573	Identifier	p		326525	0					
ANR	326574	UnaryOperationExpression	* pp		326525	1					
ANR	326575	UnaryOperator	*		326525	0					
ANR	326576	Identifier	pp		326525	1					
ANR	326577	WhileStatement	while ( * p && * p != '%' && * p != ':' )		326525	8					
ANR	326578	Condition	* p && * p != '%' && * p != ':'	724:7:21279:21306	326525	0	True				
ANR	326579	AndExpression	* p && * p != '%' && * p != ':'		326525	0		&&			
ANR	326580	UnaryOperationExpression	* p		326525	0					
ANR	326581	UnaryOperator	*		326525	0					
ANR	326582	Identifier	p		326525	1					
ANR	326583	AndExpression	* p != '%' && * p != ':'		326525	1		&&			
ANR	326584	EqualityExpression	* p != '%'		326525	0		!=			
ANR	326585	UnaryOperationExpression	* p		326525	0					
ANR	326586	UnaryOperator	*		326525	0					
ANR	326587	Identifier	p		326525	1					
ANR	326588	PrimaryExpression	'%'		326525	1					
ANR	326589	EqualityExpression	* p != ':'		326525	1		!=			
ANR	326590	UnaryOperationExpression	* p		326525	0					
ANR	326591	UnaryOperator	*		326525	0					
ANR	326592	Identifier	p		326525	1					
ANR	326593	PrimaryExpression	':'		326525	1					
ANR	326594	CompoundStatement		12:37:180:180	326525	1					
ANR	326595	ExpressionStatement	i = 0	726:2:21355:21360	326525	0	True				
ANR	326596	AssignmentExpression	i = 0		326525	0		=			
ANR	326597	Identifier	i		326525	0					
ANR	326598	PrimaryExpression	0		326525	1					
ANR	326599	WhileStatement	"while ( ( i < sizeof ( Buf ) - 1 ) && * p && * p != '%' && * p != ':' && * p != ',' )"		326525	1					
ANR	326600	Condition	"( i < sizeof ( Buf ) - 1 ) && * p && * p != '%' && * p != ':' && * p != ','"	727:8:21370:21441	326525	0	True				
ANR	326601	AndExpression	"( i < sizeof ( Buf ) - 1 ) && * p && * p != '%' && * p != ':' && * p != ','"		326525	0		&&			
ANR	326602	RelationalExpression	i < sizeof ( Buf ) - 1		326525	0		<			
ANR	326603	Identifier	i		326525	0					
ANR	326604	AdditiveExpression	sizeof ( Buf ) - 1		326525	1		-			
ANR	326605	SizeofExpression	sizeof ( Buf )		326525	0					
ANR	326606	Sizeof	sizeof		326525	0					
ANR	326607	SizeofOperand	Buf		326525	1					
ANR	326608	PrimaryExpression	1		326525	1					
ANR	326609	AndExpression	"* p && * p != '%' && * p != ':' && * p != ','"		326525	1		&&			
ANR	326610	UnaryOperationExpression	* p		326525	0					
ANR	326611	UnaryOperator	*		326525	0					
ANR	326612	Identifier	p		326525	1					
ANR	326613	AndExpression	"* p != '%' && * p != ':' && * p != ','"		326525	1		&&			
ANR	326614	EqualityExpression	* p != '%'		326525	0		!=			
ANR	326615	UnaryOperationExpression	* p		326525	0					
ANR	326616	UnaryOperator	*		326525	0					
ANR	326617	Identifier	p		326525	1					
ANR	326618	PrimaryExpression	'%'		326525	1					
ANR	326619	AndExpression	"* p != ':' && * p != ','"		326525	1		&&			
ANR	326620	EqualityExpression	* p != ':'		326525	0		!=			
ANR	326621	UnaryOperationExpression	* p		326525	0					
ANR	326622	UnaryOperator	*		326525	0					
ANR	326623	Identifier	p		326525	1					
ANR	326624	PrimaryExpression	':'		326525	1					
ANR	326625	EqualityExpression	"* p != ','"		326525	1		!=			
ANR	326626	UnaryOperationExpression	* p		326525	0					
ANR	326627	UnaryOperator	*		326525	0					
ANR	326628	Identifier	p		326525	1					
ANR	326629	PrimaryExpression	"','"		326525	1					
ANR	326630	CompoundStatement		16:51:315:315	326525	1					
ANR	326631	ExpressionStatement	Buf [ i ++ ] = tolower ( ( int ) * p )	730:3:21495:21522	326525	0	True				
ANR	326632	AssignmentExpression	Buf [ i ++ ] = tolower ( ( int ) * p )		326525	0		=			
ANR	326633	ArrayIndexing	Buf [ i ++ ]		326525	0					
ANR	326634	Identifier	Buf		326525	0					
ANR	326635	PostIncDecOperationExpression	i ++		326525	1					
ANR	326636	Identifier	i		326525	0					
ANR	326637	IncDec	++		326525	1					
ANR	326638	CallExpression	tolower ( ( int ) * p )		326525	1					
ANR	326639	Callee	tolower		326525	0					
ANR	326640	Identifier	tolower		326525	0					
ANR	326641	ArgumentList	( int ) * p		326525	1					
ANR	326642	Argument	( int ) * p		326525	0					
ANR	326643	CastExpression	( int ) * p		326525	0					
ANR	326644	CastTarget	int		326525	0					
ANR	326645	UnaryOperationExpression	* p		326525	1					
ANR	326646	UnaryOperator	*		326525	0					
ANR	326647	Identifier	p		326525	1					
ANR	326648	ExpressionStatement	++ p	731:3:21527:21530	326525	1	True				
ANR	326649	UnaryExpression	++ p		326525	0					
ANR	326650	IncDec	++		326525	0					
ANR	326651	Identifier	p		326525	1					
ANR	326652	ExpressionStatement	Buf [ i ] = '\\0'	733:2:21538:21551	326525	2	True				
ANR	326653	AssignmentExpression	Buf [ i ] = '\\0'		326525	0		=			
ANR	326654	ArrayIndexing	Buf [ i ]		326525	0					
ANR	326655	Identifier	Buf		326525	0					
ANR	326656	Identifier	i		326525	1					
ANR	326657	PrimaryExpression	'\\0'		326525	1					
ANR	326658	WhileStatement	"while ( * p && * p != '%' && * p != ':' && * p != ',' )"		326525	3					
ANR	326659	Condition	"* p && * p != '%' && * p != ':' && * p != ','"	735:8:21626:21666	326525	0	True				
ANR	326660	AndExpression	"* p && * p != '%' && * p != ':' && * p != ','"		326525	0		&&			
ANR	326661	UnaryOperationExpression	* p		326525	0					
ANR	326662	UnaryOperator	*		326525	0					
ANR	326663	Identifier	p		326525	1					
ANR	326664	AndExpression	"* p != '%' && * p != ':' && * p != ','"		326525	1		&&			
ANR	326665	EqualityExpression	* p != '%'		326525	0		!=			
ANR	326666	UnaryOperationExpression	* p		326525	0					
ANR	326667	UnaryOperator	*		326525	0					
ANR	326668	Identifier	p		326525	1					
ANR	326669	PrimaryExpression	'%'		326525	1					
ANR	326670	AndExpression	"* p != ':' && * p != ','"		326525	1		&&			
ANR	326671	EqualityExpression	* p != ':'		326525	0		!=			
ANR	326672	UnaryOperationExpression	* p		326525	0					
ANR	326673	UnaryOperator	*		326525	0					
ANR	326674	Identifier	p		326525	1					
ANR	326675	PrimaryExpression	':'		326525	1					
ANR	326676	EqualityExpression	"* p != ','"		326525	1		!=			
ANR	326677	UnaryOperationExpression	* p		326525	0					
ANR	326678	UnaryOperator	*		326525	0					
ANR	326679	Identifier	p		326525	1					
ANR	326680	PrimaryExpression	"','"		326525	1					
ANR	326681	ExpressionStatement	++ p	736:3:21672:21675	326525	1	True				
ANR	326682	UnaryExpression	++ p		326525	0					
ANR	326683	IncDec	++		326525	0					
ANR	326684	Identifier	p		326525	1					
ANR	326685	IfStatement	"if ( * p == ',' )"		326525	4					
ANR	326686	Condition	"* p == ','"	737:5:21698:21706	326525	0	True				
ANR	326687	EqualityExpression	"* p == ','"		326525	0		==			
ANR	326688	UnaryOperationExpression	* p		326525	0					
ANR	326689	UnaryOperator	*		326525	0					
ANR	326690	Identifier	p		326525	1					
ANR	326691	PrimaryExpression	"','"		326525	1					
ANR	326692	ExpressionStatement	++ p	738:3:21712:21715	326525	1	True				
ANR	326693	UnaryExpression	++ p		326525	0					
ANR	326694	IncDec	++		326525	0					
ANR	326695	Identifier	p		326525	1					
ANR	326696	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-mysql"" ) )"		326525	5					
ANR	326697	Condition	"! strcmp ( ( char * ) Buf , ""date-mysql"" )"	742:6:21813:21845	326525	0	True				
ANR	326698	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-mysql"" )"		326525	0					
ANR	326699	UnaryOperator	!		326525	0					
ANR	326700	CallExpression	"strcmp ( ( char * ) Buf , ""date-mysql"" )"		326525	1					
ANR	326701	Callee	strcmp		326525	0					
ANR	326702	Identifier	strcmp		326525	0					
ANR	326703	ArgumentList	( char * ) Buf		326525	1					
ANR	326704	Argument	( char * ) Buf		326525	0					
ANR	326705	CastExpression	( char * ) Buf		326525	0					
ANR	326706	CastTarget	char *		326525	0					
ANR	326707	Identifier	Buf		326525	1					
ANR	326708	Argument	"""date-mysql"""		326525	1					
ANR	326709	PrimaryExpression	"""date-mysql"""		326525	0					
ANR	326710	CompoundStatement		30:41:719:719	326525	1					
ANR	326711	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtMySQLDate	743:3:21853:21899	326525	0	True				
ANR	326712	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtMySQLDate		326525	0		=			
ANR	326713	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	326714	MemberAccess	pTpe -> data . field		326525	0					
ANR	326715	PtrMemberAccess	pTpe -> data		326525	0					
ANR	326716	Identifier	pTpe		326525	0					
ANR	326717	Identifier	data		326525	1					
ANR	326718	Identifier	field		326525	1					
ANR	326719	Identifier	eDateFormat		326525	1					
ANR	326720	Identifier	tplFmtMySQLDate		326525	1					
ANR	326721	ElseStatement	else		326525	0					
ANR	326722	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-pgsql"" ) )"		326525	0					
ANR	326723	Condition	"! strcmp ( ( char * ) Buf , ""date-pgsql"" )"	744:27:21928:21960	326525	0	True				
ANR	326724	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-pgsql"" )"		326525	0					
ANR	326725	UnaryOperator	!		326525	0					
ANR	326726	CallExpression	"strcmp ( ( char * ) Buf , ""date-pgsql"" )"		326525	1					
ANR	326727	Callee	strcmp		326525	0					
ANR	326728	Identifier	strcmp		326525	0					
ANR	326729	ArgumentList	( char * ) Buf		326525	1					
ANR	326730	Argument	( char * ) Buf		326525	0					
ANR	326731	CastExpression	( char * ) Buf		326525	0					
ANR	326732	CastTarget	char *		326525	0					
ANR	326733	Identifier	Buf		326525	1					
ANR	326734	Argument	"""date-pgsql"""		326525	1					
ANR	326735	PrimaryExpression	"""date-pgsql"""		326525	0					
ANR	326736	CompoundStatement		32:62:834:834	326525	1					
ANR	326737	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtPgSQLDate	745:24:21989:22035	326525	0	True				
ANR	326738	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtPgSQLDate		326525	0		=			
ANR	326739	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	326740	MemberAccess	pTpe -> data . field		326525	0					
ANR	326741	PtrMemberAccess	pTpe -> data		326525	0					
ANR	326742	Identifier	pTpe		326525	0					
ANR	326743	Identifier	data		326525	1					
ANR	326744	Identifier	field		326525	1					
ANR	326745	Identifier	eDateFormat		326525	1					
ANR	326746	Identifier	tplFmtPgSQLDate		326525	1					
ANR	326747	ElseStatement	else		326525	0					
ANR	326748	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-rfc3164"" ) )"		326525	0					
ANR	326749	Condition	"! strcmp ( ( char * ) Buf , ""date-rfc3164"" )"	746:13:22050:22084	326525	0	True				
ANR	326750	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-rfc3164"" )"		326525	0					
ANR	326751	UnaryOperator	!		326525	0					
ANR	326752	CallExpression	"strcmp ( ( char * ) Buf , ""date-rfc3164"" )"		326525	1					
ANR	326753	Callee	strcmp		326525	0					
ANR	326754	Identifier	strcmp		326525	0					
ANR	326755	ArgumentList	( char * ) Buf		326525	1					
ANR	326756	Argument	( char * ) Buf		326525	0					
ANR	326757	CastExpression	( char * ) Buf		326525	0					
ANR	326758	CastTarget	char *		326525	0					
ANR	326759	Identifier	Buf		326525	1					
ANR	326760	Argument	"""date-rfc3164"""		326525	1					
ANR	326761	PrimaryExpression	"""date-rfc3164"""		326525	0					
ANR	326762	CompoundStatement		34:50:958:958	326525	1					
ANR	326763	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtRFC3164Date	747:3:22092:22140	326525	0	True				
ANR	326764	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtRFC3164Date		326525	0		=			
ANR	326765	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	326766	MemberAccess	pTpe -> data . field		326525	0					
ANR	326767	PtrMemberAccess	pTpe -> data		326525	0					
ANR	326768	Identifier	pTpe		326525	0					
ANR	326769	Identifier	data		326525	1					
ANR	326770	Identifier	field		326525	1					
ANR	326771	Identifier	eDateFormat		326525	1					
ANR	326772	Identifier	tplFmtRFC3164Date		326525	1					
ANR	326773	ElseStatement	else		326525	0					
ANR	326774	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-rfc3164-buggyday"" ) )"		326525	0					
ANR	326775	Condition	"! strcmp ( ( char * ) Buf , ""date-rfc3164-buggyday"" )"	748:13:22155:22198	326525	0	True				
ANR	326776	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-rfc3164-buggyday"" )"		326525	0					
ANR	326777	UnaryOperator	!		326525	0					
ANR	326778	CallExpression	"strcmp ( ( char * ) Buf , ""date-rfc3164-buggyday"" )"		326525	1					
ANR	326779	Callee	strcmp		326525	0					
ANR	326780	Identifier	strcmp		326525	0					
ANR	326781	ArgumentList	( char * ) Buf		326525	1					
ANR	326782	Argument	( char * ) Buf		326525	0					
ANR	326783	CastExpression	( char * ) Buf		326525	0					
ANR	326784	CastTarget	char *		326525	0					
ANR	326785	Identifier	Buf		326525	1					
ANR	326786	Argument	"""date-rfc3164-buggyday"""		326525	1					
ANR	326787	PrimaryExpression	"""date-rfc3164-buggyday"""		326525	0					
ANR	326788	CompoundStatement		36:59:1072:1072	326525	1					
ANR	326789	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtRFC3164BuggyDate	749:3:22206:22259	326525	0	True				
ANR	326790	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtRFC3164BuggyDate		326525	0		=			
ANR	326791	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	326792	MemberAccess	pTpe -> data . field		326525	0					
ANR	326793	PtrMemberAccess	pTpe -> data		326525	0					
ANR	326794	Identifier	pTpe		326525	0					
ANR	326795	Identifier	data		326525	1					
ANR	326796	Identifier	field		326525	1					
ANR	326797	Identifier	eDateFormat		326525	1					
ANR	326798	Identifier	tplFmtRFC3164BuggyDate		326525	1					
ANR	326799	ElseStatement	else		326525	0					
ANR	326800	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-rfc3339"" ) )"		326525	0					
ANR	326801	Condition	"! strcmp ( ( char * ) Buf , ""date-rfc3339"" )"	750:13:22274:22308	326525	0	True				
ANR	326802	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-rfc3339"" )"		326525	0					
ANR	326803	UnaryOperator	!		326525	0					
ANR	326804	CallExpression	"strcmp ( ( char * ) Buf , ""date-rfc3339"" )"		326525	1					
ANR	326805	Callee	strcmp		326525	0					
ANR	326806	Identifier	strcmp		326525	0					
ANR	326807	ArgumentList	( char * ) Buf		326525	1					
ANR	326808	Argument	( char * ) Buf		326525	0					
ANR	326809	CastExpression	( char * ) Buf		326525	0					
ANR	326810	CastTarget	char *		326525	0					
ANR	326811	Identifier	Buf		326525	1					
ANR	326812	Argument	"""date-rfc3339"""		326525	1					
ANR	326813	PrimaryExpression	"""date-rfc3339"""		326525	0					
ANR	326814	CompoundStatement		38:50:1182:1182	326525	1					
ANR	326815	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtRFC3339Date	751:3:22316:22364	326525	0	True				
ANR	326816	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtRFC3339Date		326525	0		=			
ANR	326817	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	326818	MemberAccess	pTpe -> data . field		326525	0					
ANR	326819	PtrMemberAccess	pTpe -> data		326525	0					
ANR	326820	Identifier	pTpe		326525	0					
ANR	326821	Identifier	data		326525	1					
ANR	326822	Identifier	field		326525	1					
ANR	326823	Identifier	eDateFormat		326525	1					
ANR	326824	Identifier	tplFmtRFC3339Date		326525	1					
ANR	326825	ElseStatement	else		326525	0					
ANR	326826	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-unixtimestamp"" ) )"		326525	0					
ANR	326827	Condition	"! strcmp ( ( char * ) Buf , ""date-unixtimestamp"" )"	752:13:22379:22419	326525	0	True				
ANR	326828	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-unixtimestamp"" )"		326525	0					
ANR	326829	UnaryOperator	!		326525	0					
ANR	326830	CallExpression	"strcmp ( ( char * ) Buf , ""date-unixtimestamp"" )"		326525	1					
ANR	326831	Callee	strcmp		326525	0					
ANR	326832	Identifier	strcmp		326525	0					
ANR	326833	ArgumentList	( char * ) Buf		326525	1					
ANR	326834	Argument	( char * ) Buf		326525	0					
ANR	326835	CastExpression	( char * ) Buf		326525	0					
ANR	326836	CastTarget	char *		326525	0					
ANR	326837	Identifier	Buf		326525	1					
ANR	326838	Argument	"""date-unixtimestamp"""		326525	1					
ANR	326839	PrimaryExpression	"""date-unixtimestamp"""		326525	0					
ANR	326840	CompoundStatement		40:56:1293:1293	326525	1					
ANR	326841	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtUnixDate	753:3:22427:22472	326525	0	True				
ANR	326842	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtUnixDate		326525	0		=			
ANR	326843	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	326844	MemberAccess	pTpe -> data . field		326525	0					
ANR	326845	PtrMemberAccess	pTpe -> data		326525	0					
ANR	326846	Identifier	pTpe		326525	0					
ANR	326847	Identifier	data		326525	1					
ANR	326848	Identifier	field		326525	1					
ANR	326849	Identifier	eDateFormat		326525	1					
ANR	326850	Identifier	tplFmtUnixDate		326525	1					
ANR	326851	ElseStatement	else		326525	0					
ANR	326852	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-subseconds"" ) )"		326525	0					
ANR	326853	Condition	"! strcmp ( ( char * ) Buf , ""date-subseconds"" )"	754:13:22487:22524	326525	0	True				
ANR	326854	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-subseconds"" )"		326525	0					
ANR	326855	UnaryOperator	!		326525	0					
ANR	326856	CallExpression	"strcmp ( ( char * ) Buf , ""date-subseconds"" )"		326525	1					
ANR	326857	Callee	strcmp		326525	0					
ANR	326858	Identifier	strcmp		326525	0					
ANR	326859	ArgumentList	( char * ) Buf		326525	1					
ANR	326860	Argument	( char * ) Buf		326525	0					
ANR	326861	CastExpression	( char * ) Buf		326525	0					
ANR	326862	CastTarget	char *		326525	0					
ANR	326863	Identifier	Buf		326525	1					
ANR	326864	Argument	"""date-subseconds"""		326525	1					
ANR	326865	PrimaryExpression	"""date-subseconds"""		326525	0					
ANR	326866	CompoundStatement		42:53:1398:1398	326525	1					
ANR	326867	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtSecFrac	755:3:22532:22576	326525	0	True				
ANR	326868	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtSecFrac		326525	0		=			
ANR	326869	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	326870	MemberAccess	pTpe -> data . field		326525	0					
ANR	326871	PtrMemberAccess	pTpe -> data		326525	0					
ANR	326872	Identifier	pTpe		326525	0					
ANR	326873	Identifier	data		326525	1					
ANR	326874	Identifier	field		326525	1					
ANR	326875	Identifier	eDateFormat		326525	1					
ANR	326876	Identifier	tplFmtSecFrac		326525	1					
ANR	326877	ElseStatement	else		326525	0					
ANR	326878	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-wdayname"" ) )"		326525	0					
ANR	326879	Condition	"! strcmp ( ( char * ) Buf , ""date-wdayname"" )"	756:13:22591:22626	326525	0	True				
ANR	326880	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-wdayname"" )"		326525	0					
ANR	326881	UnaryOperator	!		326525	0					
ANR	326882	CallExpression	"strcmp ( ( char * ) Buf , ""date-wdayname"" )"		326525	1					
ANR	326883	Callee	strcmp		326525	0					
ANR	326884	Identifier	strcmp		326525	0					
ANR	326885	ArgumentList	( char * ) Buf		326525	1					
ANR	326886	Argument	( char * ) Buf		326525	0					
ANR	326887	CastExpression	( char * ) Buf		326525	0					
ANR	326888	CastTarget	char *		326525	0					
ANR	326889	Identifier	Buf		326525	1					
ANR	326890	Argument	"""date-wdayname"""		326525	1					
ANR	326891	PrimaryExpression	"""date-wdayname"""		326525	0					
ANR	326892	CompoundStatement		44:51:1500:1500	326525	1					
ANR	326893	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtWDayName	757:3:22634:22679	326525	0	True				
ANR	326894	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtWDayName		326525	0		=			
ANR	326895	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	326896	MemberAccess	pTpe -> data . field		326525	0					
ANR	326897	PtrMemberAccess	pTpe -> data		326525	0					
ANR	326898	Identifier	pTpe		326525	0					
ANR	326899	Identifier	data		326525	1					
ANR	326900	Identifier	field		326525	1					
ANR	326901	Identifier	eDateFormat		326525	1					
ANR	326902	Identifier	tplFmtWDayName		326525	1					
ANR	326903	ElseStatement	else		326525	0					
ANR	326904	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-wday"" ) )"		326525	0					
ANR	326905	Condition	"! strcmp ( ( char * ) Buf , ""date-wday"" )"	758:13:22694:22725	326525	0	True				
ANR	326906	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-wday"" )"		326525	0					
ANR	326907	UnaryOperator	!		326525	0					
ANR	326908	CallExpression	"strcmp ( ( char * ) Buf , ""date-wday"" )"		326525	1					
ANR	326909	Callee	strcmp		326525	0					
ANR	326910	Identifier	strcmp		326525	0					
ANR	326911	ArgumentList	( char * ) Buf		326525	1					
ANR	326912	Argument	( char * ) Buf		326525	0					
ANR	326913	CastExpression	( char * ) Buf		326525	0					
ANR	326914	CastTarget	char *		326525	0					
ANR	326915	Identifier	Buf		326525	1					
ANR	326916	Argument	"""date-wday"""		326525	1					
ANR	326917	PrimaryExpression	"""date-wday"""		326525	0					
ANR	326918	CompoundStatement		46:47:1599:1599	326525	1					
ANR	326919	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtWDay	759:3:22733:22774	326525	0	True				
ANR	326920	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtWDay		326525	0		=			
ANR	326921	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	326922	MemberAccess	pTpe -> data . field		326525	0					
ANR	326923	PtrMemberAccess	pTpe -> data		326525	0					
ANR	326924	Identifier	pTpe		326525	0					
ANR	326925	Identifier	data		326525	1					
ANR	326926	Identifier	field		326525	1					
ANR	326927	Identifier	eDateFormat		326525	1					
ANR	326928	Identifier	tplFmtWDay		326525	1					
ANR	326929	ElseStatement	else		326525	0					
ANR	326930	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-year"" ) )"		326525	0					
ANR	326931	Condition	"! strcmp ( ( char * ) Buf , ""date-year"" )"	760:13:22789:22820	326525	0	True				
ANR	326932	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-year"" )"		326525	0					
ANR	326933	UnaryOperator	!		326525	0					
ANR	326934	CallExpression	"strcmp ( ( char * ) Buf , ""date-year"" )"		326525	1					
ANR	326935	Callee	strcmp		326525	0					
ANR	326936	Identifier	strcmp		326525	0					
ANR	326937	ArgumentList	( char * ) Buf		326525	1					
ANR	326938	Argument	( char * ) Buf		326525	0					
ANR	326939	CastExpression	( char * ) Buf		326525	0					
ANR	326940	CastTarget	char *		326525	0					
ANR	326941	Identifier	Buf		326525	1					
ANR	326942	Argument	"""date-year"""		326525	1					
ANR	326943	PrimaryExpression	"""date-year"""		326525	0					
ANR	326944	CompoundStatement		48:47:1694:1694	326525	1					
ANR	326945	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtYear	761:3:22828:22869	326525	0	True				
ANR	326946	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtYear		326525	0		=			
ANR	326947	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	326948	MemberAccess	pTpe -> data . field		326525	0					
ANR	326949	PtrMemberAccess	pTpe -> data		326525	0					
ANR	326950	Identifier	pTpe		326525	0					
ANR	326951	Identifier	data		326525	1					
ANR	326952	Identifier	field		326525	1					
ANR	326953	Identifier	eDateFormat		326525	1					
ANR	326954	Identifier	tplFmtYear		326525	1					
ANR	326955	ElseStatement	else		326525	0					
ANR	326956	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-month"" ) )"		326525	0					
ANR	326957	Condition	"! strcmp ( ( char * ) Buf , ""date-month"" )"	762:13:22884:22916	326525	0	True				
ANR	326958	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-month"" )"		326525	0					
ANR	326959	UnaryOperator	!		326525	0					
ANR	326960	CallExpression	"strcmp ( ( char * ) Buf , ""date-month"" )"		326525	1					
ANR	326961	Callee	strcmp		326525	0					
ANR	326962	Identifier	strcmp		326525	0					
ANR	326963	ArgumentList	( char * ) Buf		326525	1					
ANR	326964	Argument	( char * ) Buf		326525	0					
ANR	326965	CastExpression	( char * ) Buf		326525	0					
ANR	326966	CastTarget	char *		326525	0					
ANR	326967	Identifier	Buf		326525	1					
ANR	326968	Argument	"""date-month"""		326525	1					
ANR	326969	PrimaryExpression	"""date-month"""		326525	0					
ANR	326970	CompoundStatement		50:48:1790:1790	326525	1					
ANR	326971	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtMonth	763:3:22924:22966	326525	0	True				
ANR	326972	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtMonth		326525	0		=			
ANR	326973	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	326974	MemberAccess	pTpe -> data . field		326525	0					
ANR	326975	PtrMemberAccess	pTpe -> data		326525	0					
ANR	326976	Identifier	pTpe		326525	0					
ANR	326977	Identifier	data		326525	1					
ANR	326978	Identifier	field		326525	1					
ANR	326979	Identifier	eDateFormat		326525	1					
ANR	326980	Identifier	tplFmtMonth		326525	1					
ANR	326981	ElseStatement	else		326525	0					
ANR	326982	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-day"" ) )"		326525	0					
ANR	326983	Condition	"! strcmp ( ( char * ) Buf , ""date-day"" )"	764:13:22981:23011	326525	0	True				
ANR	326984	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-day"" )"		326525	0					
ANR	326985	UnaryOperator	!		326525	0					
ANR	326986	CallExpression	"strcmp ( ( char * ) Buf , ""date-day"" )"		326525	1					
ANR	326987	Callee	strcmp		326525	0					
ANR	326988	Identifier	strcmp		326525	0					
ANR	326989	ArgumentList	( char * ) Buf		326525	1					
ANR	326990	Argument	( char * ) Buf		326525	0					
ANR	326991	CastExpression	( char * ) Buf		326525	0					
ANR	326992	CastTarget	char *		326525	0					
ANR	326993	Identifier	Buf		326525	1					
ANR	326994	Argument	"""date-day"""		326525	1					
ANR	326995	PrimaryExpression	"""date-day"""		326525	0					
ANR	326996	CompoundStatement		52:46:1885:1885	326525	1					
ANR	326997	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtDay	765:3:23019:23059	326525	0	True				
ANR	326998	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtDay		326525	0		=			
ANR	326999	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	327000	MemberAccess	pTpe -> data . field		326525	0					
ANR	327001	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327002	Identifier	pTpe		326525	0					
ANR	327003	Identifier	data		326525	1					
ANR	327004	Identifier	field		326525	1					
ANR	327005	Identifier	eDateFormat		326525	1					
ANR	327006	Identifier	tplFmtDay		326525	1					
ANR	327007	ElseStatement	else		326525	0					
ANR	327008	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-hour"" ) )"		326525	0					
ANR	327009	Condition	"! strcmp ( ( char * ) Buf , ""date-hour"" )"	766:13:23074:23105	326525	0	True				
ANR	327010	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-hour"" )"		326525	0					
ANR	327011	UnaryOperator	!		326525	0					
ANR	327012	CallExpression	"strcmp ( ( char * ) Buf , ""date-hour"" )"		326525	1					
ANR	327013	Callee	strcmp		326525	0					
ANR	327014	Identifier	strcmp		326525	0					
ANR	327015	ArgumentList	( char * ) Buf		326525	1					
ANR	327016	Argument	( char * ) Buf		326525	0					
ANR	327017	CastExpression	( char * ) Buf		326525	0					
ANR	327018	CastTarget	char *		326525	0					
ANR	327019	Identifier	Buf		326525	1					
ANR	327020	Argument	"""date-hour"""		326525	1					
ANR	327021	PrimaryExpression	"""date-hour"""		326525	0					
ANR	327022	CompoundStatement		54:47:1979:1979	326525	1					
ANR	327023	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtHour	767:3:23113:23154	326525	0	True				
ANR	327024	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtHour		326525	0		=			
ANR	327025	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	327026	MemberAccess	pTpe -> data . field		326525	0					
ANR	327027	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327028	Identifier	pTpe		326525	0					
ANR	327029	Identifier	data		326525	1					
ANR	327030	Identifier	field		326525	1					
ANR	327031	Identifier	eDateFormat		326525	1					
ANR	327032	Identifier	tplFmtHour		326525	1					
ANR	327033	ElseStatement	else		326525	0					
ANR	327034	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-minute"" ) )"		326525	0					
ANR	327035	Condition	"! strcmp ( ( char * ) Buf , ""date-minute"" )"	768:13:23169:23202	326525	0	True				
ANR	327036	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-minute"" )"		326525	0					
ANR	327037	UnaryOperator	!		326525	0					
ANR	327038	CallExpression	"strcmp ( ( char * ) Buf , ""date-minute"" )"		326525	1					
ANR	327039	Callee	strcmp		326525	0					
ANR	327040	Identifier	strcmp		326525	0					
ANR	327041	ArgumentList	( char * ) Buf		326525	1					
ANR	327042	Argument	( char * ) Buf		326525	0					
ANR	327043	CastExpression	( char * ) Buf		326525	0					
ANR	327044	CastTarget	char *		326525	0					
ANR	327045	Identifier	Buf		326525	1					
ANR	327046	Argument	"""date-minute"""		326525	1					
ANR	327047	PrimaryExpression	"""date-minute"""		326525	0					
ANR	327048	CompoundStatement		56:49:2076:2076	326525	1					
ANR	327049	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtMinute	769:3:23210:23253	326525	0	True				
ANR	327050	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtMinute		326525	0		=			
ANR	327051	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	327052	MemberAccess	pTpe -> data . field		326525	0					
ANR	327053	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327054	Identifier	pTpe		326525	0					
ANR	327055	Identifier	data		326525	1					
ANR	327056	Identifier	field		326525	1					
ANR	327057	Identifier	eDateFormat		326525	1					
ANR	327058	Identifier	tplFmtMinute		326525	1					
ANR	327059	ElseStatement	else		326525	0					
ANR	327060	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-second"" ) )"		326525	0					
ANR	327061	Condition	"! strcmp ( ( char * ) Buf , ""date-second"" )"	770:13:23268:23301	326525	0	True				
ANR	327062	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-second"" )"		326525	0					
ANR	327063	UnaryOperator	!		326525	0					
ANR	327064	CallExpression	"strcmp ( ( char * ) Buf , ""date-second"" )"		326525	1					
ANR	327065	Callee	strcmp		326525	0					
ANR	327066	Identifier	strcmp		326525	0					
ANR	327067	ArgumentList	( char * ) Buf		326525	1					
ANR	327068	Argument	( char * ) Buf		326525	0					
ANR	327069	CastExpression	( char * ) Buf		326525	0					
ANR	327070	CastTarget	char *		326525	0					
ANR	327071	Identifier	Buf		326525	1					
ANR	327072	Argument	"""date-second"""		326525	1					
ANR	327073	PrimaryExpression	"""date-second"""		326525	0					
ANR	327074	CompoundStatement		58:49:2175:2175	326525	1					
ANR	327075	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtSecond	771:3:23309:23352	326525	0	True				
ANR	327076	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtSecond		326525	0		=			
ANR	327077	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	327078	MemberAccess	pTpe -> data . field		326525	0					
ANR	327079	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327080	Identifier	pTpe		326525	0					
ANR	327081	Identifier	data		326525	1					
ANR	327082	Identifier	field		326525	1					
ANR	327083	Identifier	eDateFormat		326525	1					
ANR	327084	Identifier	tplFmtSecond		326525	1					
ANR	327085	ElseStatement	else		326525	0					
ANR	327086	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-tzoffshour"" ) )"		326525	0					
ANR	327087	Condition	"! strcmp ( ( char * ) Buf , ""date-tzoffshour"" )"	772:13:23367:23404	326525	0	True				
ANR	327088	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-tzoffshour"" )"		326525	0					
ANR	327089	UnaryOperator	!		326525	0					
ANR	327090	CallExpression	"strcmp ( ( char * ) Buf , ""date-tzoffshour"" )"		326525	1					
ANR	327091	Callee	strcmp		326525	0					
ANR	327092	Identifier	strcmp		326525	0					
ANR	327093	ArgumentList	( char * ) Buf		326525	1					
ANR	327094	Argument	( char * ) Buf		326525	0					
ANR	327095	CastExpression	( char * ) Buf		326525	0					
ANR	327096	CastTarget	char *		326525	0					
ANR	327097	Identifier	Buf		326525	1					
ANR	327098	Argument	"""date-tzoffshour"""		326525	1					
ANR	327099	PrimaryExpression	"""date-tzoffshour"""		326525	0					
ANR	327100	CompoundStatement		60:53:2278:2278	326525	1					
ANR	327101	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtTZOffsHour	773:3:23412:23459	326525	0	True				
ANR	327102	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtTZOffsHour		326525	0		=			
ANR	327103	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	327104	MemberAccess	pTpe -> data . field		326525	0					
ANR	327105	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327106	Identifier	pTpe		326525	0					
ANR	327107	Identifier	data		326525	1					
ANR	327108	Identifier	field		326525	1					
ANR	327109	Identifier	eDateFormat		326525	1					
ANR	327110	Identifier	tplFmtTZOffsHour		326525	1					
ANR	327111	ElseStatement	else		326525	0					
ANR	327112	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-tzoffsmin"" ) )"		326525	0					
ANR	327113	Condition	"! strcmp ( ( char * ) Buf , ""date-tzoffsmin"" )"	774:13:23474:23510	326525	0	True				
ANR	327114	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-tzoffsmin"" )"		326525	0					
ANR	327115	UnaryOperator	!		326525	0					
ANR	327116	CallExpression	"strcmp ( ( char * ) Buf , ""date-tzoffsmin"" )"		326525	1					
ANR	327117	Callee	strcmp		326525	0					
ANR	327118	Identifier	strcmp		326525	0					
ANR	327119	ArgumentList	( char * ) Buf		326525	1					
ANR	327120	Argument	( char * ) Buf		326525	0					
ANR	327121	CastExpression	( char * ) Buf		326525	0					
ANR	327122	CastTarget	char *		326525	0					
ANR	327123	Identifier	Buf		326525	1					
ANR	327124	Argument	"""date-tzoffsmin"""		326525	1					
ANR	327125	PrimaryExpression	"""date-tzoffsmin"""		326525	0					
ANR	327126	CompoundStatement		62:52:2384:2384	326525	1					
ANR	327127	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtTZOffsMin	775:3:23518:23564	326525	0	True				
ANR	327128	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtTZOffsMin		326525	0		=			
ANR	327129	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	327130	MemberAccess	pTpe -> data . field		326525	0					
ANR	327131	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327132	Identifier	pTpe		326525	0					
ANR	327133	Identifier	data		326525	1					
ANR	327134	Identifier	field		326525	1					
ANR	327135	Identifier	eDateFormat		326525	1					
ANR	327136	Identifier	tplFmtTZOffsMin		326525	1					
ANR	327137	ElseStatement	else		326525	0					
ANR	327138	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-tzoffsdirection"" ) )"		326525	0					
ANR	327139	Condition	"! strcmp ( ( char * ) Buf , ""date-tzoffsdirection"" )"	776:13:23579:23621	326525	0	True				
ANR	327140	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-tzoffsdirection"" )"		326525	0					
ANR	327141	UnaryOperator	!		326525	0					
ANR	327142	CallExpression	"strcmp ( ( char * ) Buf , ""date-tzoffsdirection"" )"		326525	1					
ANR	327143	Callee	strcmp		326525	0					
ANR	327144	Identifier	strcmp		326525	0					
ANR	327145	ArgumentList	( char * ) Buf		326525	1					
ANR	327146	Argument	( char * ) Buf		326525	0					
ANR	327147	CastExpression	( char * ) Buf		326525	0					
ANR	327148	CastTarget	char *		326525	0					
ANR	327149	Identifier	Buf		326525	1					
ANR	327150	Argument	"""date-tzoffsdirection"""		326525	1					
ANR	327151	PrimaryExpression	"""date-tzoffsdirection"""		326525	0					
ANR	327152	CompoundStatement		64:58:2495:2495	326525	1					
ANR	327153	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtTZOffsDirection	777:3:23629:23681	326525	0	True				
ANR	327154	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtTZOffsDirection		326525	0		=			
ANR	327155	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	327156	MemberAccess	pTpe -> data . field		326525	0					
ANR	327157	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327158	Identifier	pTpe		326525	0					
ANR	327159	Identifier	data		326525	1					
ANR	327160	Identifier	field		326525	1					
ANR	327161	Identifier	eDateFormat		326525	1					
ANR	327162	Identifier	tplFmtTZOffsDirection		326525	1					
ANR	327163	ElseStatement	else		326525	0					
ANR	327164	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-ordinal"" ) )"		326525	0					
ANR	327165	Condition	"! strcmp ( ( char * ) Buf , ""date-ordinal"" )"	778:14:23697:23731	326525	0	True				
ANR	327166	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-ordinal"" )"		326525	0					
ANR	327167	UnaryOperator	!		326525	0					
ANR	327168	CallExpression	"strcmp ( ( char * ) Buf , ""date-ordinal"" )"		326525	1					
ANR	327169	Callee	strcmp		326525	0					
ANR	327170	Identifier	strcmp		326525	0					
ANR	327171	ArgumentList	( char * ) Buf		326525	1					
ANR	327172	Argument	( char * ) Buf		326525	0					
ANR	327173	CastExpression	( char * ) Buf		326525	0					
ANR	327174	CastTarget	char *		326525	0					
ANR	327175	Identifier	Buf		326525	1					
ANR	327176	Argument	"""date-ordinal"""		326525	1					
ANR	327177	PrimaryExpression	"""date-ordinal"""		326525	0					
ANR	327178	CompoundStatement		66:51:2605:2605	326525	1					
ANR	327179	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtOrdinal	779:3:23739:23783	326525	0	True				
ANR	327180	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtOrdinal		326525	0		=			
ANR	327181	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	327182	MemberAccess	pTpe -> data . field		326525	0					
ANR	327183	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327184	Identifier	pTpe		326525	0					
ANR	327185	Identifier	data		326525	1					
ANR	327186	Identifier	field		326525	1					
ANR	327187	Identifier	eDateFormat		326525	1					
ANR	327188	Identifier	tplFmtOrdinal		326525	1					
ANR	327189	ElseStatement	else		326525	0					
ANR	327190	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-week"" ) )"		326525	0					
ANR	327191	Condition	"! strcmp ( ( char * ) Buf , ""date-week"" )"	780:14:23799:23830	326525	0	True				
ANR	327192	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-week"" )"		326525	0					
ANR	327193	UnaryOperator	!		326525	0					
ANR	327194	CallExpression	"strcmp ( ( char * ) Buf , ""date-week"" )"		326525	1					
ANR	327195	Callee	strcmp		326525	0					
ANR	327196	Identifier	strcmp		326525	0					
ANR	327197	ArgumentList	( char * ) Buf		326525	1					
ANR	327198	Argument	( char * ) Buf		326525	0					
ANR	327199	CastExpression	( char * ) Buf		326525	0					
ANR	327200	CastTarget	char *		326525	0					
ANR	327201	Identifier	Buf		326525	1					
ANR	327202	Argument	"""date-week"""		326525	1					
ANR	327203	PrimaryExpression	"""date-week"""		326525	0					
ANR	327204	CompoundStatement		68:48:2704:2704	326525	1					
ANR	327205	ExpressionStatement	pTpe -> data . field . eDateFormat = tplFmtWeek	781:3:23838:23879	326525	0	True				
ANR	327206	AssignmentExpression	pTpe -> data . field . eDateFormat = tplFmtWeek		326525	0		=			
ANR	327207	MemberAccess	pTpe -> data . field . eDateFormat		326525	0					
ANR	327208	MemberAccess	pTpe -> data . field		326525	0					
ANR	327209	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327210	Identifier	pTpe		326525	0					
ANR	327211	Identifier	data		326525	1					
ANR	327212	Identifier	field		326525	1					
ANR	327213	Identifier	eDateFormat		326525	1					
ANR	327214	Identifier	tplFmtWeek		326525	1					
ANR	327215	ElseStatement	else		326525	0					
ANR	327216	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""date-utc"" ) )"		326525	0					
ANR	327217	Condition	"! strcmp ( ( char * ) Buf , ""date-utc"" )"	782:13:23894:23924	326525	0	True				
ANR	327218	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""date-utc"" )"		326525	0					
ANR	327219	UnaryOperator	!		326525	0					
ANR	327220	CallExpression	"strcmp ( ( char * ) Buf , ""date-utc"" )"		326525	1					
ANR	327221	Callee	strcmp		326525	0					
ANR	327222	Identifier	strcmp		326525	0					
ANR	327223	ArgumentList	( char * ) Buf		326525	1					
ANR	327224	Argument	( char * ) Buf		326525	0					
ANR	327225	CastExpression	( char * ) Buf		326525	0					
ANR	327226	CastTarget	char *		326525	0					
ANR	327227	Identifier	Buf		326525	1					
ANR	327228	Argument	"""date-utc"""		326525	1					
ANR	327229	PrimaryExpression	"""date-utc"""		326525	0					
ANR	327230	CompoundStatement		70:46:2798:2798	326525	1					
ANR	327231	ExpressionStatement	pTpe -> data . field . options . bDateInUTC = 1	783:3:23932:23971	326525	0	True				
ANR	327232	AssignmentExpression	pTpe -> data . field . options . bDateInUTC = 1		326525	0		=			
ANR	327233	MemberAccess	pTpe -> data . field . options . bDateInUTC		326525	0					
ANR	327234	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327235	MemberAccess	pTpe -> data . field		326525	0					
ANR	327236	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327237	Identifier	pTpe		326525	0					
ANR	327238	Identifier	data		326525	1					
ANR	327239	Identifier	field		326525	1					
ANR	327240	Identifier	options		326525	1					
ANR	327241	Identifier	bDateInUTC		326525	1					
ANR	327242	PrimaryExpression	1		326525	1					
ANR	327243	ElseStatement	else		326525	0					
ANR	327244	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""lowercase"" ) )"		326525	0					
ANR	327245	Condition	"! strcmp ( ( char * ) Buf , ""lowercase"" )"	784:13:23986:24017	326525	0	True				
ANR	327246	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""lowercase"" )"		326525	0					
ANR	327247	UnaryOperator	!		326525	0					
ANR	327248	CallExpression	"strcmp ( ( char * ) Buf , ""lowercase"" )"		326525	1					
ANR	327249	Callee	strcmp		326525	0					
ANR	327250	Identifier	strcmp		326525	0					
ANR	327251	ArgumentList	( char * ) Buf		326525	1					
ANR	327252	Argument	( char * ) Buf		326525	0					
ANR	327253	CastExpression	( char * ) Buf		326525	0					
ANR	327254	CastTarget	char *		326525	0					
ANR	327255	Identifier	Buf		326525	1					
ANR	327256	Argument	"""lowercase"""		326525	1					
ANR	327257	PrimaryExpression	"""lowercase"""		326525	0					
ANR	327258	CompoundStatement		72:47:2891:2891	326525	1					
ANR	327259	ExpressionStatement	pTpe -> data . field . eCaseConv = tplCaseConvLower	785:3:24025:24070	326525	0	True				
ANR	327260	AssignmentExpression	pTpe -> data . field . eCaseConv = tplCaseConvLower		326525	0		=			
ANR	327261	MemberAccess	pTpe -> data . field . eCaseConv		326525	0					
ANR	327262	MemberAccess	pTpe -> data . field		326525	0					
ANR	327263	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327264	Identifier	pTpe		326525	0					
ANR	327265	Identifier	data		326525	1					
ANR	327266	Identifier	field		326525	1					
ANR	327267	Identifier	eCaseConv		326525	1					
ANR	327268	Identifier	tplCaseConvLower		326525	1					
ANR	327269	ElseStatement	else		326525	0					
ANR	327270	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""uppercase"" ) )"		326525	0					
ANR	327271	Condition	"! strcmp ( ( char * ) Buf , ""uppercase"" )"	786:13:24085:24116	326525	0	True				
ANR	327272	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""uppercase"" )"		326525	0					
ANR	327273	UnaryOperator	!		326525	0					
ANR	327274	CallExpression	"strcmp ( ( char * ) Buf , ""uppercase"" )"		326525	1					
ANR	327275	Callee	strcmp		326525	0					
ANR	327276	Identifier	strcmp		326525	0					
ANR	327277	ArgumentList	( char * ) Buf		326525	1					
ANR	327278	Argument	( char * ) Buf		326525	0					
ANR	327279	CastExpression	( char * ) Buf		326525	0					
ANR	327280	CastTarget	char *		326525	0					
ANR	327281	Identifier	Buf		326525	1					
ANR	327282	Argument	"""uppercase"""		326525	1					
ANR	327283	PrimaryExpression	"""uppercase"""		326525	0					
ANR	327284	CompoundStatement		74:47:2990:2990	326525	1					
ANR	327285	ExpressionStatement	pTpe -> data . field . eCaseConv = tplCaseConvUpper	787:3:24124:24169	326525	0	True				
ANR	327286	AssignmentExpression	pTpe -> data . field . eCaseConv = tplCaseConvUpper		326525	0		=			
ANR	327287	MemberAccess	pTpe -> data . field . eCaseConv		326525	0					
ANR	327288	MemberAccess	pTpe -> data . field		326525	0					
ANR	327289	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327290	Identifier	pTpe		326525	0					
ANR	327291	Identifier	data		326525	1					
ANR	327292	Identifier	field		326525	1					
ANR	327293	Identifier	eCaseConv		326525	1					
ANR	327294	Identifier	tplCaseConvUpper		326525	1					
ANR	327295	ElseStatement	else		326525	0					
ANR	327296	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""sp-if-no-1st-sp"" ) )"		326525	0					
ANR	327297	Condition	"! strcmp ( ( char * ) Buf , ""sp-if-no-1st-sp"" )"	788:13:24184:24221	326525	0	True				
ANR	327298	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""sp-if-no-1st-sp"" )"		326525	0					
ANR	327299	UnaryOperator	!		326525	0					
ANR	327300	CallExpression	"strcmp ( ( char * ) Buf , ""sp-if-no-1st-sp"" )"		326525	1					
ANR	327301	Callee	strcmp		326525	0					
ANR	327302	Identifier	strcmp		326525	0					
ANR	327303	ArgumentList	( char * ) Buf		326525	1					
ANR	327304	Argument	( char * ) Buf		326525	0					
ANR	327305	CastExpression	( char * ) Buf		326525	0					
ANR	327306	CastTarget	char *		326525	0					
ANR	327307	Identifier	Buf		326525	1					
ANR	327308	Argument	"""sp-if-no-1st-sp"""		326525	1					
ANR	327309	PrimaryExpression	"""sp-if-no-1st-sp"""		326525	0					
ANR	327310	CompoundStatement		76:53:3095:3095	326525	1					
ANR	327311	ExpressionStatement	pTpe -> data . field . options . bSPIffNo1stSP = 1	789:3:24229:24271	326525	0	True				
ANR	327312	AssignmentExpression	pTpe -> data . field . options . bSPIffNo1stSP = 1		326525	0		=			
ANR	327313	MemberAccess	pTpe -> data . field . options . bSPIffNo1stSP		326525	0					
ANR	327314	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327315	MemberAccess	pTpe -> data . field		326525	0					
ANR	327316	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327317	Identifier	pTpe		326525	0					
ANR	327318	Identifier	data		326525	1					
ANR	327319	Identifier	field		326525	1					
ANR	327320	Identifier	options		326525	1					
ANR	327321	Identifier	bSPIffNo1stSP		326525	1					
ANR	327322	PrimaryExpression	1		326525	1					
ANR	327323	ElseStatement	else		326525	0					
ANR	327324	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""compressspace"" ) )"		326525	0					
ANR	327325	Condition	"! strcmp ( ( char * ) Buf , ""compressspace"" )"	790:13:24286:24321	326525	0	True				
ANR	327326	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""compressspace"" )"		326525	0					
ANR	327327	UnaryOperator	!		326525	0					
ANR	327328	CallExpression	"strcmp ( ( char * ) Buf , ""compressspace"" )"		326525	1					
ANR	327329	Callee	strcmp		326525	0					
ANR	327330	Identifier	strcmp		326525	0					
ANR	327331	ArgumentList	( char * ) Buf		326525	1					
ANR	327332	Argument	( char * ) Buf		326525	0					
ANR	327333	CastExpression	( char * ) Buf		326525	0					
ANR	327334	CastTarget	char *		326525	0					
ANR	327335	Identifier	Buf		326525	1					
ANR	327336	Argument	"""compressspace"""		326525	1					
ANR	327337	PrimaryExpression	"""compressspace"""		326525	0					
ANR	327338	CompoundStatement		78:51:3195:3195	326525	1					
ANR	327339	ExpressionStatement	pTpe -> data . field . options . bCompressSP = 1	791:3:24329:24369	326525	0	True				
ANR	327340	AssignmentExpression	pTpe -> data . field . options . bCompressSP = 1		326525	0		=			
ANR	327341	MemberAccess	pTpe -> data . field . options . bCompressSP		326525	0					
ANR	327342	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327343	MemberAccess	pTpe -> data . field		326525	0					
ANR	327344	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327345	Identifier	pTpe		326525	0					
ANR	327346	Identifier	data		326525	1					
ANR	327347	Identifier	field		326525	1					
ANR	327348	Identifier	options		326525	1					
ANR	327349	Identifier	bCompressSP		326525	1					
ANR	327350	PrimaryExpression	1		326525	1					
ANR	327351	ElseStatement	else		326525	0					
ANR	327352	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""escape-cc"" ) )"		326525	0					
ANR	327353	Condition	"! strcmp ( ( char * ) Buf , ""escape-cc"" )"	792:13:24384:24415	326525	0	True				
ANR	327354	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""escape-cc"" )"		326525	0					
ANR	327355	UnaryOperator	!		326525	0					
ANR	327356	CallExpression	"strcmp ( ( char * ) Buf , ""escape-cc"" )"		326525	1					
ANR	327357	Callee	strcmp		326525	0					
ANR	327358	Identifier	strcmp		326525	0					
ANR	327359	ArgumentList	( char * ) Buf		326525	1					
ANR	327360	Argument	( char * ) Buf		326525	0					
ANR	327361	CastExpression	( char * ) Buf		326525	0					
ANR	327362	CastTarget	char *		326525	0					
ANR	327363	Identifier	Buf		326525	1					
ANR	327364	Argument	"""escape-cc"""		326525	1					
ANR	327365	PrimaryExpression	"""escape-cc"""		326525	0					
ANR	327366	CompoundStatement		80:47:3289:3289	326525	1					
ANR	327367	ExpressionStatement	pTpe -> data . field . options . bEscapeCC = 1	793:3:24423:24461	326525	0	True				
ANR	327368	AssignmentExpression	pTpe -> data . field . options . bEscapeCC = 1		326525	0		=			
ANR	327369	MemberAccess	pTpe -> data . field . options . bEscapeCC		326525	0					
ANR	327370	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327371	MemberAccess	pTpe -> data . field		326525	0					
ANR	327372	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327373	Identifier	pTpe		326525	0					
ANR	327374	Identifier	data		326525	1					
ANR	327375	Identifier	field		326525	1					
ANR	327376	Identifier	options		326525	1					
ANR	327377	Identifier	bEscapeCC		326525	1					
ANR	327378	PrimaryExpression	1		326525	1					
ANR	327379	ElseStatement	else		326525	0					
ANR	327380	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""drop-cc"" ) )"		326525	0					
ANR	327381	Condition	"! strcmp ( ( char * ) Buf , ""drop-cc"" )"	794:13:24476:24505	326525	0	True				
ANR	327382	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""drop-cc"" )"		326525	0					
ANR	327383	UnaryOperator	!		326525	0					
ANR	327384	CallExpression	"strcmp ( ( char * ) Buf , ""drop-cc"" )"		326525	1					
ANR	327385	Callee	strcmp		326525	0					
ANR	327386	Identifier	strcmp		326525	0					
ANR	327387	ArgumentList	( char * ) Buf		326525	1					
ANR	327388	Argument	( char * ) Buf		326525	0					
ANR	327389	CastExpression	( char * ) Buf		326525	0					
ANR	327390	CastTarget	char *		326525	0					
ANR	327391	Identifier	Buf		326525	1					
ANR	327392	Argument	"""drop-cc"""		326525	1					
ANR	327393	PrimaryExpression	"""drop-cc"""		326525	0					
ANR	327394	CompoundStatement		82:45:3379:3379	326525	1					
ANR	327395	ExpressionStatement	pTpe -> data . field . options . bDropCC = 1	795:3:24513:24549	326525	0	True				
ANR	327396	AssignmentExpression	pTpe -> data . field . options . bDropCC = 1		326525	0		=			
ANR	327397	MemberAccess	pTpe -> data . field . options . bDropCC		326525	0					
ANR	327398	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327399	MemberAccess	pTpe -> data . field		326525	0					
ANR	327400	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327401	Identifier	pTpe		326525	0					
ANR	327402	Identifier	data		326525	1					
ANR	327403	Identifier	field		326525	1					
ANR	327404	Identifier	options		326525	1					
ANR	327405	Identifier	bDropCC		326525	1					
ANR	327406	PrimaryExpression	1		326525	1					
ANR	327407	ElseStatement	else		326525	0					
ANR	327408	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""space-cc"" ) )"		326525	0					
ANR	327409	Condition	"! strcmp ( ( char * ) Buf , ""space-cc"" )"	796:13:24564:24594	326525	0	True				
ANR	327410	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""space-cc"" )"		326525	0					
ANR	327411	UnaryOperator	!		326525	0					
ANR	327412	CallExpression	"strcmp ( ( char * ) Buf , ""space-cc"" )"		326525	1					
ANR	327413	Callee	strcmp		326525	0					
ANR	327414	Identifier	strcmp		326525	0					
ANR	327415	ArgumentList	( char * ) Buf		326525	1					
ANR	327416	Argument	( char * ) Buf		326525	0					
ANR	327417	CastExpression	( char * ) Buf		326525	0					
ANR	327418	CastTarget	char *		326525	0					
ANR	327419	Identifier	Buf		326525	1					
ANR	327420	Argument	"""space-cc"""		326525	1					
ANR	327421	PrimaryExpression	"""space-cc"""		326525	0					
ANR	327422	CompoundStatement		84:46:3468:3468	326525	1					
ANR	327423	ExpressionStatement	pTpe -> data . field . options . bSpaceCC = 1	797:3:24602:24639	326525	0	True				
ANR	327424	AssignmentExpression	pTpe -> data . field . options . bSpaceCC = 1		326525	0		=			
ANR	327425	MemberAccess	pTpe -> data . field . options . bSpaceCC		326525	0					
ANR	327426	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327427	MemberAccess	pTpe -> data . field		326525	0					
ANR	327428	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327429	Identifier	pTpe		326525	0					
ANR	327430	Identifier	data		326525	1					
ANR	327431	Identifier	field		326525	1					
ANR	327432	Identifier	options		326525	1					
ANR	327433	Identifier	bSpaceCC		326525	1					
ANR	327434	PrimaryExpression	1		326525	1					
ANR	327435	ElseStatement	else		326525	0					
ANR	327436	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""drop-last-lf"" ) )"		326525	0					
ANR	327437	Condition	"! strcmp ( ( char * ) Buf , ""drop-last-lf"" )"	798:13:24654:24688	326525	0	True				
ANR	327438	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""drop-last-lf"" )"		326525	0					
ANR	327439	UnaryOperator	!		326525	0					
ANR	327440	CallExpression	"strcmp ( ( char * ) Buf , ""drop-last-lf"" )"		326525	1					
ANR	327441	Callee	strcmp		326525	0					
ANR	327442	Identifier	strcmp		326525	0					
ANR	327443	ArgumentList	( char * ) Buf		326525	1					
ANR	327444	Argument	( char * ) Buf		326525	0					
ANR	327445	CastExpression	( char * ) Buf		326525	0					
ANR	327446	CastTarget	char *		326525	0					
ANR	327447	Identifier	Buf		326525	1					
ANR	327448	Argument	"""drop-last-lf"""		326525	1					
ANR	327449	PrimaryExpression	"""drop-last-lf"""		326525	0					
ANR	327450	CompoundStatement		86:50:3562:3562	326525	1					
ANR	327451	ExpressionStatement	pTpe -> data . field . options . bDropLastLF = 1	799:3:24696:24736	326525	0	True				
ANR	327452	AssignmentExpression	pTpe -> data . field . options . bDropLastLF = 1		326525	0		=			
ANR	327453	MemberAccess	pTpe -> data . field . options . bDropLastLF		326525	0					
ANR	327454	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327455	MemberAccess	pTpe -> data . field		326525	0					
ANR	327456	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327457	Identifier	pTpe		326525	0					
ANR	327458	Identifier	data		326525	1					
ANR	327459	Identifier	field		326525	1					
ANR	327460	Identifier	options		326525	1					
ANR	327461	Identifier	bDropLastLF		326525	1					
ANR	327462	PrimaryExpression	1		326525	1					
ANR	327463	ElseStatement	else		326525	0					
ANR	327464	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""secpath-drop"" ) )"		326525	0					
ANR	327465	Condition	"! strcmp ( ( char * ) Buf , ""secpath-drop"" )"	800:13:24751:24785	326525	0	True				
ANR	327466	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""secpath-drop"" )"		326525	0					
ANR	327467	UnaryOperator	!		326525	0					
ANR	327468	CallExpression	"strcmp ( ( char * ) Buf , ""secpath-drop"" )"		326525	1					
ANR	327469	Callee	strcmp		326525	0					
ANR	327470	Identifier	strcmp		326525	0					
ANR	327471	ArgumentList	( char * ) Buf		326525	1					
ANR	327472	Argument	( char * ) Buf		326525	0					
ANR	327473	CastExpression	( char * ) Buf		326525	0					
ANR	327474	CastTarget	char *		326525	0					
ANR	327475	Identifier	Buf		326525	1					
ANR	327476	Argument	"""secpath-drop"""		326525	1					
ANR	327477	PrimaryExpression	"""secpath-drop"""		326525	0					
ANR	327478	CompoundStatement		88:50:3659:3659	326525	1					
ANR	327479	ExpressionStatement	pTpe -> data . field . options . bSecPathDrop = 1	801:3:24793:24834	326525	0	True				
ANR	327480	AssignmentExpression	pTpe -> data . field . options . bSecPathDrop = 1		326525	0		=			
ANR	327481	MemberAccess	pTpe -> data . field . options . bSecPathDrop		326525	0					
ANR	327482	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327483	MemberAccess	pTpe -> data . field		326525	0					
ANR	327484	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327485	Identifier	pTpe		326525	0					
ANR	327486	Identifier	data		326525	1					
ANR	327487	Identifier	field		326525	1					
ANR	327488	Identifier	options		326525	1					
ANR	327489	Identifier	bSecPathDrop		326525	1					
ANR	327490	PrimaryExpression	1		326525	1					
ANR	327491	ElseStatement	else		326525	0					
ANR	327492	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""secpath-replace"" ) )"		326525	0					
ANR	327493	Condition	"! strcmp ( ( char * ) Buf , ""secpath-replace"" )"	802:13:24849:24886	326525	0	True				
ANR	327494	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""secpath-replace"" )"		326525	0					
ANR	327495	UnaryOperator	!		326525	0					
ANR	327496	CallExpression	"strcmp ( ( char * ) Buf , ""secpath-replace"" )"		326525	1					
ANR	327497	Callee	strcmp		326525	0					
ANR	327498	Identifier	strcmp		326525	0					
ANR	327499	ArgumentList	( char * ) Buf		326525	1					
ANR	327500	Argument	( char * ) Buf		326525	0					
ANR	327501	CastExpression	( char * ) Buf		326525	0					
ANR	327502	CastTarget	char *		326525	0					
ANR	327503	Identifier	Buf		326525	1					
ANR	327504	Argument	"""secpath-replace"""		326525	1					
ANR	327505	PrimaryExpression	"""secpath-replace"""		326525	0					
ANR	327506	CompoundStatement		90:53:3760:3760	326525	1					
ANR	327507	ExpressionStatement	pTpe -> data . field . options . bSecPathReplace = 1	803:3:24894:24938	326525	0	True				
ANR	327508	AssignmentExpression	pTpe -> data . field . options . bSecPathReplace = 1		326525	0		=			
ANR	327509	MemberAccess	pTpe -> data . field . options . bSecPathReplace		326525	0					
ANR	327510	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327511	MemberAccess	pTpe -> data . field		326525	0					
ANR	327512	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327513	Identifier	pTpe		326525	0					
ANR	327514	Identifier	data		326525	1					
ANR	327515	Identifier	field		326525	1					
ANR	327516	Identifier	options		326525	1					
ANR	327517	Identifier	bSecPathReplace		326525	1					
ANR	327518	PrimaryExpression	1		326525	1					
ANR	327519	ElseStatement	else		326525	0					
ANR	327520	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""pos-end-relative"" ) )"		326525	0					
ANR	327521	Condition	"! strcmp ( ( char * ) Buf , ""pos-end-relative"" )"	804:13:24953:24991	326525	0	True				
ANR	327522	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""pos-end-relative"" )"		326525	0					
ANR	327523	UnaryOperator	!		326525	0					
ANR	327524	CallExpression	"strcmp ( ( char * ) Buf , ""pos-end-relative"" )"		326525	1					
ANR	327525	Callee	strcmp		326525	0					
ANR	327526	Identifier	strcmp		326525	0					
ANR	327527	ArgumentList	( char * ) Buf		326525	1					
ANR	327528	Argument	( char * ) Buf		326525	0					
ANR	327529	CastExpression	( char * ) Buf		326525	0					
ANR	327530	CastTarget	char *		326525	0					
ANR	327531	Identifier	Buf		326525	1					
ANR	327532	Argument	"""pos-end-relative"""		326525	1					
ANR	327533	PrimaryExpression	"""pos-end-relative"""		326525	0					
ANR	327534	CompoundStatement		92:54:3865:3865	326525	1					
ANR	327535	ExpressionStatement	pTpe -> data . field . options . bFromPosEndRelative = 1	805:3:24999:25047	326525	0	True				
ANR	327536	AssignmentExpression	pTpe -> data . field . options . bFromPosEndRelative = 1		326525	0		=			
ANR	327537	MemberAccess	pTpe -> data . field . options . bFromPosEndRelative		326525	0					
ANR	327538	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327539	MemberAccess	pTpe -> data . field		326525	0					
ANR	327540	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327541	Identifier	pTpe		326525	0					
ANR	327542	Identifier	data		326525	1					
ANR	327543	Identifier	field		326525	1					
ANR	327544	Identifier	options		326525	1					
ANR	327545	Identifier	bFromPosEndRelative		326525	1					
ANR	327546	PrimaryExpression	1		326525	1					
ANR	327547	ElseStatement	else		326525	0					
ANR	327548	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""fixed-width"" ) )"		326525	0					
ANR	327549	Condition	"! strcmp ( ( char * ) Buf , ""fixed-width"" )"	806:13:25062:25095	326525	0	True				
ANR	327550	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""fixed-width"" )"		326525	0					
ANR	327551	UnaryOperator	!		326525	0					
ANR	327552	CallExpression	"strcmp ( ( char * ) Buf , ""fixed-width"" )"		326525	1					
ANR	327553	Callee	strcmp		326525	0					
ANR	327554	Identifier	strcmp		326525	0					
ANR	327555	ArgumentList	( char * ) Buf		326525	1					
ANR	327556	Argument	( char * ) Buf		326525	0					
ANR	327557	CastExpression	( char * ) Buf		326525	0					
ANR	327558	CastTarget	char *		326525	0					
ANR	327559	Identifier	Buf		326525	1					
ANR	327560	Argument	"""fixed-width"""		326525	1					
ANR	327561	PrimaryExpression	"""fixed-width"""		326525	0					
ANR	327562	CompoundStatement		94:49:3969:3969	326525	1					
ANR	327563	ExpressionStatement	pTpe -> data . field . options . bFixedWidth = 1	807:3:25103:25143	326525	0	True				
ANR	327564	AssignmentExpression	pTpe -> data . field . options . bFixedWidth = 1		326525	0		=			
ANR	327565	MemberAccess	pTpe -> data . field . options . bFixedWidth		326525	0					
ANR	327566	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327567	MemberAccess	pTpe -> data . field		326525	0					
ANR	327568	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327569	Identifier	pTpe		326525	0					
ANR	327570	Identifier	data		326525	1					
ANR	327571	Identifier	field		326525	1					
ANR	327572	Identifier	options		326525	1					
ANR	327573	Identifier	bFixedWidth		326525	1					
ANR	327574	PrimaryExpression	1		326525	1					
ANR	327575	ElseStatement	else		326525	0					
ANR	327576	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""csv"" ) )"		326525	0					
ANR	327577	Condition	"! strcmp ( ( char * ) Buf , ""csv"" )"	808:13:25158:25183	326525	0	True				
ANR	327578	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""csv"" )"		326525	0					
ANR	327579	UnaryOperator	!		326525	0					
ANR	327580	CallExpression	"strcmp ( ( char * ) Buf , ""csv"" )"		326525	1					
ANR	327581	Callee	strcmp		326525	0					
ANR	327582	Identifier	strcmp		326525	0					
ANR	327583	ArgumentList	( char * ) Buf		326525	1					
ANR	327584	Argument	( char * ) Buf		326525	0					
ANR	327585	CastExpression	( char * ) Buf		326525	0					
ANR	327586	CastTarget	char *		326525	0					
ANR	327587	Identifier	Buf		326525	1					
ANR	327588	Argument	"""csv"""		326525	1					
ANR	327589	PrimaryExpression	"""csv"""		326525	0					
ANR	327590	CompoundStatement		96:41:4057:4057	326525	1					
ANR	327591	IfStatement	if ( hasFormat ( pTpe ) )		326525	0					
ANR	327592	Condition	hasFormat ( pTpe )	809:6:25194:25208	326525	0	True				
ANR	327593	CallExpression	hasFormat ( pTpe )		326525	0					
ANR	327594	Callee	hasFormat		326525	0					
ANR	327595	Identifier	hasFormat		326525	0					
ANR	327596	ArgumentList	pTpe		326525	1					
ANR	327597	Argument	pTpe		326525	0					
ANR	327598	Identifier	pTpe		326525	0					
ANR	327599	CompoundStatement		97:23:4082:4082	326525	1					
ANR	327600	Statement	errmsg	810:4:25217:25222	326525	0	True				
ANR	327601	Statement	.	810:10:25223:25223	326525	1	True				
ANR	327602	Statement	LogError	810:11:25224:25231	326525	2	True				
ANR	327603	Statement	(	810:19:25232:25232	326525	3	True				
ANR	327604	Statement	0	810:20:25233:25233	326525	4	True				
ANR	327605	Statement	","	810:21:25234:25234	326525	5	True				
ANR	327606	Statement	NO_ERRCODE	810:23:25236:25245	326525	6	True				
ANR	327607	Statement	","	810:33:25246:25246	326525	7	True				
ANR	327608	Statement	"""error: can only specify """	810:35:25248:25273	326525	8	True				
ANR	327609	Statement	"""one option out of (json, jsonf, jsonr, jsonfr, csv) - csv ignored"""	811:5:25280:25346	326525	9	True				
ANR	327610	Statement	)	811:72:25347:25347	326525	10	True				
ANR	327611	ExpressionStatement		811:73:25348:25348	326525	11	True				
ANR	327612	ElseStatement	else		326525	0					
ANR	327613	CompoundStatement		100:10:4231:4231	326525	0					
ANR	327614	ExpressionStatement	pTpe -> data . field . options . bCSV = 1	813:4:25366:25399	326525	0	True				
ANR	327615	AssignmentExpression	pTpe -> data . field . options . bCSV = 1		326525	0		=			
ANR	327616	MemberAccess	pTpe -> data . field . options . bCSV		326525	0					
ANR	327617	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327618	MemberAccess	pTpe -> data . field		326525	0					
ANR	327619	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327620	Identifier	pTpe		326525	0					
ANR	327621	Identifier	data		326525	1					
ANR	327622	Identifier	field		326525	1					
ANR	327623	Identifier	options		326525	1					
ANR	327624	Identifier	bCSV		326525	1					
ANR	327625	PrimaryExpression	1		326525	1					
ANR	327626	ElseStatement	else		326525	0					
ANR	327627	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""json"" ) )"		326525	0					
ANR	327628	Condition	"! strcmp ( ( char * ) Buf , ""json"" )"	815:13:25419:25445	326525	0	True				
ANR	327629	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""json"" )"		326525	0					
ANR	327630	UnaryOperator	!		326525	0					
ANR	327631	CallExpression	"strcmp ( ( char * ) Buf , ""json"" )"		326525	1					
ANR	327632	Callee	strcmp		326525	0					
ANR	327633	Identifier	strcmp		326525	0					
ANR	327634	ArgumentList	( char * ) Buf		326525	1					
ANR	327635	Argument	( char * ) Buf		326525	0					
ANR	327636	CastExpression	( char * ) Buf		326525	0					
ANR	327637	CastTarget	char *		326525	0					
ANR	327638	Identifier	Buf		326525	1					
ANR	327639	Argument	"""json"""		326525	1					
ANR	327640	PrimaryExpression	"""json"""		326525	0					
ANR	327641	CompoundStatement		103:42:4319:4319	326525	1					
ANR	327642	IfStatement	if ( hasFormat ( pTpe ) )		326525	0					
ANR	327643	Condition	hasFormat ( pTpe )	816:6:25456:25470	326525	0	True				
ANR	327644	CallExpression	hasFormat ( pTpe )		326525	0					
ANR	327645	Callee	hasFormat		326525	0					
ANR	327646	Identifier	hasFormat		326525	0					
ANR	327647	ArgumentList	pTpe		326525	1					
ANR	327648	Argument	pTpe		326525	0					
ANR	327649	Identifier	pTpe		326525	0					
ANR	327650	CompoundStatement		104:23:4344:4344	326525	1					
ANR	327651	Statement	errmsg	817:4:25479:25484	326525	0	True				
ANR	327652	Statement	.	817:10:25485:25485	326525	1	True				
ANR	327653	Statement	LogError	817:11:25486:25493	326525	2	True				
ANR	327654	Statement	(	817:19:25494:25494	326525	3	True				
ANR	327655	Statement	0	817:20:25495:25495	326525	4	True				
ANR	327656	Statement	","	817:21:25496:25496	326525	5	True				
ANR	327657	Statement	NO_ERRCODE	817:23:25498:25507	326525	6	True				
ANR	327658	Statement	","	817:33:25508:25508	326525	7	True				
ANR	327659	Statement	"""error: can only specify """	817:35:25510:25535	326525	8	True				
ANR	327660	Statement	"""one option out of (json, jsonf, jsonr, jsonfr, csv) - json ignored"""	818:5:25542:25609	326525	9	True				
ANR	327661	Statement	)	818:73:25610:25610	326525	10	True				
ANR	327662	ExpressionStatement		818:74:25611:25611	326525	11	True				
ANR	327663	ElseStatement	else		326525	0					
ANR	327664	CompoundStatement		107:10:4494:4494	326525	0					
ANR	327665	ExpressionStatement	pTpe -> data . field . options . bJSON = 1	820:4:25629:25663	326525	0	True				
ANR	327666	AssignmentExpression	pTpe -> data . field . options . bJSON = 1		326525	0		=			
ANR	327667	MemberAccess	pTpe -> data . field . options . bJSON		326525	0					
ANR	327668	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327669	MemberAccess	pTpe -> data . field		326525	0					
ANR	327670	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327671	Identifier	pTpe		326525	0					
ANR	327672	Identifier	data		326525	1					
ANR	327673	Identifier	field		326525	1					
ANR	327674	Identifier	options		326525	1					
ANR	327675	Identifier	bJSON		326525	1					
ANR	327676	PrimaryExpression	1		326525	1					
ANR	327677	ElseStatement	else		326525	0					
ANR	327678	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""jsonf"" ) )"		326525	0					
ANR	327679	Condition	"! strcmp ( ( char * ) Buf , ""jsonf"" )"	822:13:25683:25710	326525	0	True				
ANR	327680	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""jsonf"" )"		326525	0					
ANR	327681	UnaryOperator	!		326525	0					
ANR	327682	CallExpression	"strcmp ( ( char * ) Buf , ""jsonf"" )"		326525	1					
ANR	327683	Callee	strcmp		326525	0					
ANR	327684	Identifier	strcmp		326525	0					
ANR	327685	ArgumentList	( char * ) Buf		326525	1					
ANR	327686	Argument	( char * ) Buf		326525	0					
ANR	327687	CastExpression	( char * ) Buf		326525	0					
ANR	327688	CastTarget	char *		326525	0					
ANR	327689	Identifier	Buf		326525	1					
ANR	327690	Argument	"""jsonf"""		326525	1					
ANR	327691	PrimaryExpression	"""jsonf"""		326525	0					
ANR	327692	CompoundStatement		110:43:4584:4584	326525	1					
ANR	327693	IfStatement	if ( hasFormat ( pTpe ) )		326525	0					
ANR	327694	Condition	hasFormat ( pTpe )	823:6:25721:25735	326525	0	True				
ANR	327695	CallExpression	hasFormat ( pTpe )		326525	0					
ANR	327696	Callee	hasFormat		326525	0					
ANR	327697	Identifier	hasFormat		326525	0					
ANR	327698	ArgumentList	pTpe		326525	1					
ANR	327699	Argument	pTpe		326525	0					
ANR	327700	Identifier	pTpe		326525	0					
ANR	327701	CompoundStatement		111:23:4609:4609	326525	1					
ANR	327702	Statement	errmsg	824:4:25744:25749	326525	0	True				
ANR	327703	Statement	.	824:10:25750:25750	326525	1	True				
ANR	327704	Statement	LogError	824:11:25751:25758	326525	2	True				
ANR	327705	Statement	(	824:19:25759:25759	326525	3	True				
ANR	327706	Statement	0	824:20:25760:25760	326525	4	True				
ANR	327707	Statement	","	824:21:25761:25761	326525	5	True				
ANR	327708	Statement	NO_ERRCODE	824:23:25763:25772	326525	6	True				
ANR	327709	Statement	","	824:33:25773:25773	326525	7	True				
ANR	327710	Statement	"""error: can only specify """	824:35:25775:25800	326525	8	True				
ANR	327711	Statement	"""one option out of (json, jsonf, jsonr, jsonfr, csv) - jsonf ignored"""	825:5:25807:25875	326525	9	True				
ANR	327712	Statement	)	825:74:25876:25876	326525	10	True				
ANR	327713	ExpressionStatement		825:75:25877:25877	326525	11	True				
ANR	327714	ElseStatement	else		326525	0					
ANR	327715	CompoundStatement		114:10:4760:4760	326525	0					
ANR	327716	ExpressionStatement	pTpe -> data . field . options . bJSONf = 1	827:4:25895:25930	326525	0	True				
ANR	327717	AssignmentExpression	pTpe -> data . field . options . bJSONf = 1		326525	0		=			
ANR	327718	MemberAccess	pTpe -> data . field . options . bJSONf		326525	0					
ANR	327719	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327720	MemberAccess	pTpe -> data . field		326525	0					
ANR	327721	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327722	Identifier	pTpe		326525	0					
ANR	327723	Identifier	data		326525	1					
ANR	327724	Identifier	field		326525	1					
ANR	327725	Identifier	options		326525	1					
ANR	327726	Identifier	bJSONf		326525	1					
ANR	327727	PrimaryExpression	1		326525	1					
ANR	327728	ElseStatement	else		326525	0					
ANR	327729	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""jsonr"" ) )"		326525	0					
ANR	327730	Condition	"! strcmp ( ( char * ) Buf , ""jsonr"" )"	829:13:25950:25977	326525	0	True				
ANR	327731	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""jsonr"" )"		326525	0					
ANR	327732	UnaryOperator	!		326525	0					
ANR	327733	CallExpression	"strcmp ( ( char * ) Buf , ""jsonr"" )"		326525	1					
ANR	327734	Callee	strcmp		326525	0					
ANR	327735	Identifier	strcmp		326525	0					
ANR	327736	ArgumentList	( char * ) Buf		326525	1					
ANR	327737	Argument	( char * ) Buf		326525	0					
ANR	327738	CastExpression	( char * ) Buf		326525	0					
ANR	327739	CastTarget	char *		326525	0					
ANR	327740	Identifier	Buf		326525	1					
ANR	327741	Argument	"""jsonr"""		326525	1					
ANR	327742	PrimaryExpression	"""jsonr"""		326525	0					
ANR	327743	CompoundStatement		117:43:4851:4851	326525	1					
ANR	327744	IfStatement	if ( hasFormat ( pTpe ) )		326525	0					
ANR	327745	Condition	hasFormat ( pTpe )	830:6:25988:26002	326525	0	True				
ANR	327746	CallExpression	hasFormat ( pTpe )		326525	0					
ANR	327747	Callee	hasFormat		326525	0					
ANR	327748	Identifier	hasFormat		326525	0					
ANR	327749	ArgumentList	pTpe		326525	1					
ANR	327750	Argument	pTpe		326525	0					
ANR	327751	Identifier	pTpe		326525	0					
ANR	327752	CompoundStatement		118:23:4876:4876	326525	1					
ANR	327753	Statement	errmsg	831:4:26011:26016	326525	0	True				
ANR	327754	Statement	.	831:10:26017:26017	326525	1	True				
ANR	327755	Statement	LogError	831:11:26018:26025	326525	2	True				
ANR	327756	Statement	(	831:19:26026:26026	326525	3	True				
ANR	327757	Statement	0	831:20:26027:26027	326525	4	True				
ANR	327758	Statement	","	831:21:26028:26028	326525	5	True				
ANR	327759	Statement	NO_ERRCODE	831:23:26030:26039	326525	6	True				
ANR	327760	Statement	","	831:33:26040:26040	326525	7	True				
ANR	327761	Statement	"""error: can only specify """	831:35:26042:26067	326525	8	True				
ANR	327762	Statement	"""one option out of (json, jsonf, jsonr, jsonfr, csv) - jsonr ignored"""	832:5:26074:26142	326525	9	True				
ANR	327763	Statement	)	832:74:26143:26143	326525	10	True				
ANR	327764	ExpressionStatement		832:75:26144:26144	326525	11	True				
ANR	327765	ElseStatement	else		326525	0					
ANR	327766	CompoundStatement		121:10:5027:5027	326525	0					
ANR	327767	ExpressionStatement	pTpe -> data . field . options . bJSONr = 1	834:4:26162:26197	326525	0	True				
ANR	327768	AssignmentExpression	pTpe -> data . field . options . bJSONr = 1		326525	0		=			
ANR	327769	MemberAccess	pTpe -> data . field . options . bJSONr		326525	0					
ANR	327770	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327771	MemberAccess	pTpe -> data . field		326525	0					
ANR	327772	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327773	Identifier	pTpe		326525	0					
ANR	327774	Identifier	data		326525	1					
ANR	327775	Identifier	field		326525	1					
ANR	327776	Identifier	options		326525	1					
ANR	327777	Identifier	bJSONr		326525	1					
ANR	327778	PrimaryExpression	1		326525	1					
ANR	327779	ElseStatement	else		326525	0					
ANR	327780	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""jsonfr"" ) )"		326525	0					
ANR	327781	Condition	"! strcmp ( ( char * ) Buf , ""jsonfr"" )"	836:13:26217:26245	326525	0	True				
ANR	327782	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""jsonfr"" )"		326525	0					
ANR	327783	UnaryOperator	!		326525	0					
ANR	327784	CallExpression	"strcmp ( ( char * ) Buf , ""jsonfr"" )"		326525	1					
ANR	327785	Callee	strcmp		326525	0					
ANR	327786	Identifier	strcmp		326525	0					
ANR	327787	ArgumentList	( char * ) Buf		326525	1					
ANR	327788	Argument	( char * ) Buf		326525	0					
ANR	327789	CastExpression	( char * ) Buf		326525	0					
ANR	327790	CastTarget	char *		326525	0					
ANR	327791	Identifier	Buf		326525	1					
ANR	327792	Argument	"""jsonfr"""		326525	1					
ANR	327793	PrimaryExpression	"""jsonfr"""		326525	0					
ANR	327794	CompoundStatement		124:44:5119:5119	326525	1					
ANR	327795	IfStatement	if ( hasFormat ( pTpe ) )		326525	0					
ANR	327796	Condition	hasFormat ( pTpe )	837:6:26256:26270	326525	0	True				
ANR	327797	CallExpression	hasFormat ( pTpe )		326525	0					
ANR	327798	Callee	hasFormat		326525	0					
ANR	327799	Identifier	hasFormat		326525	0					
ANR	327800	ArgumentList	pTpe		326525	1					
ANR	327801	Argument	pTpe		326525	0					
ANR	327802	Identifier	pTpe		326525	0					
ANR	327803	CompoundStatement		125:23:5144:5144	326525	1					
ANR	327804	Statement	errmsg	838:4:26279:26284	326525	0	True				
ANR	327805	Statement	.	838:10:26285:26285	326525	1	True				
ANR	327806	Statement	LogError	838:11:26286:26293	326525	2	True				
ANR	327807	Statement	(	838:19:26294:26294	326525	3	True				
ANR	327808	Statement	0	838:20:26295:26295	326525	4	True				
ANR	327809	Statement	","	838:21:26296:26296	326525	5	True				
ANR	327810	Statement	NO_ERRCODE	838:23:26298:26307	326525	6	True				
ANR	327811	Statement	","	838:33:26308:26308	326525	7	True				
ANR	327812	Statement	"""error: can only specify """	838:35:26310:26335	326525	8	True				
ANR	327813	Statement	"""one option out of (json, jsonf, jsonr, jsonfr, csv) - jsonfr ignored"""	839:5:26342:26411	326525	9	True				
ANR	327814	Statement	)	839:75:26412:26412	326525	10	True				
ANR	327815	ExpressionStatement		839:76:26413:26413	326525	11	True				
ANR	327816	ElseStatement	else		326525	0					
ANR	327817	CompoundStatement		128:10:5296:5296	326525	0					
ANR	327818	ExpressionStatement	pTpe -> data . field . options . bJSONfr = 1	841:4:26431:26467	326525	0	True				
ANR	327819	AssignmentExpression	pTpe -> data . field . options . bJSONfr = 1		326525	0		=			
ANR	327820	MemberAccess	pTpe -> data . field . options . bJSONfr		326525	0					
ANR	327821	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327822	MemberAccess	pTpe -> data . field		326525	0					
ANR	327823	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327824	Identifier	pTpe		326525	0					
ANR	327825	Identifier	data		326525	1					
ANR	327826	Identifier	field		326525	1					
ANR	327827	Identifier	options		326525	1					
ANR	327828	Identifier	bJSONfr		326525	1					
ANR	327829	PrimaryExpression	1		326525	1					
ANR	327830	ElseStatement	else		326525	0					
ANR	327831	IfStatement	"if ( ! strcmp ( ( char * ) Buf , ""mandatory-field"" ) )"		326525	0					
ANR	327832	Condition	"! strcmp ( ( char * ) Buf , ""mandatory-field"" )"	843:13:26487:26524	326525	0	True				
ANR	327833	UnaryOperationExpression	"! strcmp ( ( char * ) Buf , ""mandatory-field"" )"		326525	0					
ANR	327834	UnaryOperator	!		326525	0					
ANR	327835	CallExpression	"strcmp ( ( char * ) Buf , ""mandatory-field"" )"		326525	1					
ANR	327836	Callee	strcmp		326525	0					
ANR	327837	Identifier	strcmp		326525	0					
ANR	327838	ArgumentList	( char * ) Buf		326525	1					
ANR	327839	Argument	( char * ) Buf		326525	0					
ANR	327840	CastExpression	( char * ) Buf		326525	0					
ANR	327841	CastTarget	char *		326525	0					
ANR	327842	Identifier	Buf		326525	1					
ANR	327843	Argument	"""mandatory-field"""		326525	1					
ANR	327844	PrimaryExpression	"""mandatory-field"""		326525	0					
ANR	327845	CompoundStatement		131:53:5398:5398	326525	1					
ANR	327846	ExpressionStatement	pTpe -> data . field . options . bMandatory = 1	844:4:26533:26572	326525	0	True				
ANR	327847	AssignmentExpression	pTpe -> data . field . options . bMandatory = 1		326525	0		=			
ANR	327848	MemberAccess	pTpe -> data . field . options . bMandatory		326525	0					
ANR	327849	MemberAccess	pTpe -> data . field . options		326525	0					
ANR	327850	MemberAccess	pTpe -> data . field		326525	0					
ANR	327851	PtrMemberAccess	pTpe -> data		326525	0					
ANR	327852	Identifier	pTpe		326525	0					
ANR	327853	Identifier	data		326525	1					
ANR	327854	Identifier	field		326525	1					
ANR	327855	Identifier	options		326525	1					
ANR	327856	Identifier	bMandatory		326525	1					
ANR	327857	PrimaryExpression	1		326525	1					
ANR	327858	ElseStatement	else		326525	0					
ANR	327859	CompoundStatement		133:10:5455:5455	326525	0					
ANR	327860	Statement	errmsg	846:3:26589:26594	326525	0	True				
ANR	327861	Statement	.	846:9:26595:26595	326525	1	True				
ANR	327862	Statement	LogError	846:10:26596:26603	326525	2	True				
ANR	327863	Statement	(	846:18:26604:26604	326525	3	True				
ANR	327864	Statement	0	846:19:26605:26605	326525	4	True				
ANR	327865	Statement	","	846:20:26606:26606	326525	5	True				
ANR	327866	Statement	NO_ERRCODE	846:22:26608:26617	326525	6	True				
ANR	327867	Statement	","	846:32:26618:26618	326525	7	True				
ANR	327868	Statement	"""template error: invalid field option '%s' """	846:34:26620:26663	326525	8	True				
ANR	327869	Statement	"""specified - ignored"""	847:4:26669:26689	326525	9	True				
ANR	327870	Statement	","	847:25:26690:26690	326525	10	True				
ANR	327871	Statement	Buf	847:27:26692:26694	326525	11	True				
ANR	327872	Statement	)	847:30:26695:26695	326525	12	True				
ANR	327873	ExpressionStatement		847:31:26696:26696	326525	13	True				
ANR	327874	ExpressionStatement	* pp = p	851:1:26708:26715	326525	9	True				
ANR	327875	AssignmentExpression	* pp = p		326525	0		=			
ANR	327876	UnaryOperationExpression	* pp		326525	0					
ANR	327877	UnaryOperator	*		326525	0					
ANR	327878	Identifier	pp		326525	1					
ANR	327879	Identifier	p		326525	1					
ANR	327880	ReturnType	static void		326525	1					
ANR	327881	Identifier	doOptions		326525	2					
ANR	327882	ParameterList	"unsigned char * * pp , struct templateEntry * pTpe"		326525	3					
ANR	327883	Parameter	unsigned char * * pp	712:22:21080:21097	326525	0	True				
ANR	327884	ParameterType	unsigned char * *		326525	0					
ANR	327885	Identifier	pp		326525	1					
ANR	327886	Parameter	struct templateEntry * pTpe	712:42:21100:21125	326525	1	True				
ANR	327887	ParameterType	struct templateEntry *		326525	0					
ANR	327888	Identifier	pTpe		326525	1					
ANR	327889	CFGEntryNode	ENTRY		326525		True				
ANR	327890	CFGExitNode	EXIT		326525		True				
ANR	327891	Symbol	pp		326525						
ANR	327892	Symbol	* Buf		326525						
ANR	327893	Symbol	tplFmtSecond		326525						
ANR	327894	Symbol	pTpe -> data . field . options . bCSV		326525						
ANR	327895	Symbol	tolower		326525						
ANR	327896	Symbol	pTpe -> data . field . options . bJSONr		326525						
ANR	327897	Symbol	tplFmtRFC3339Date		326525						
ANR	327898	Symbol	tplFmtTZOffsMin		326525						
ANR	327899	Symbol	tplFmtDay		326525						
ANR	327900	Symbol	pTpe -> data . field . options . bJSON		326525						
ANR	327901	Symbol	pTpe -> data . field . options . bJSONf		326525						
ANR	327902	Symbol	tplFmtMonth		326525						
ANR	327903	Symbol	strcmp		326525						
ANR	327904	Symbol	NULL		326525						
ANR	327905	Symbol	tplFmtMinute		326525						
ANR	327906	Symbol	* pp		326525						
ANR	327907	Symbol	tplFmtWeek		326525						
ANR	327908	Symbol	pTpe -> data . field . options . bEscapeCC		326525						
ANR	327909	Symbol	* pTpe		326525						
ANR	327910	Symbol	tplFmtOrdinal		326525						
ANR	327911	Symbol	tplFmtHour		326525						
ANR	327912	Symbol	pTpe -> data		326525						
ANR	327913	Symbol	pTpe -> data . field . eDateFormat		326525						
ANR	327914	Symbol	tplFmtPgSQLDate		326525						
ANR	327915	Symbol	pTpe -> data . field . options . bSPIffNo1stSP		326525						
ANR	327916	Symbol	pTpe -> data . field . options . bSecPathReplace		326525						
ANR	327917	Symbol	tplCaseConvUpper		326525						
ANR	327918	Symbol	tplFmtSecFrac		326525						
ANR	327919	Symbol	tplFmtRFC3164Date		326525						
ANR	327920	Symbol	pTpe -> data . field . options . bMandatory		326525						
ANR	327921	Symbol	Buf		326525						
ANR	327922	Symbol	tplFmtTZOffsDirection		326525						
ANR	327923	Symbol	pTpe -> data . field . eCaseConv		326525						
ANR	327924	Symbol	pTpe -> data . field . options . bSpaceCC		326525						
ANR	327925	Symbol	tplFmtUnixDate		326525						
ANR	327926	Symbol	pTpe -> data . field . options . bFixedWidth		326525						
ANR	327927	Symbol	hasFormat		326525						
ANR	327928	Symbol	pTpe -> data . field . options . bJSONfr		326525						
ANR	327929	Symbol	pTpe -> data . field . options		326525						
ANR	327930	Symbol	i		326525						
ANR	327931	Symbol	pTpe -> data . field . options . bCompressSP		326525						
ANR	327932	Symbol	pTpe		326525						
ANR	327933	Symbol	tplFmtYear		326525						
ANR	327934	Symbol	tplFmtTZOffsHour		326525						
ANR	327935	Symbol	p		326525						
ANR	327936	Symbol	pTpe -> data . field . options . bDateInUTC		326525						
ANR	327937	Symbol	pTpe -> data . field . options . bSecPathDrop		326525						
ANR	327938	Symbol	* i		326525						
ANR	327939	Symbol	pTpe -> data . field . options . bFromPosEndRelative		326525						
ANR	327940	Symbol	tplFmtWDay		326525						
ANR	327941	Symbol	tplFmtMySQLDate		326525						
ANR	327942	Symbol	pTpe -> data . field . options . bDropCC		326525						
ANR	327943	Symbol	pTpe -> data . field . options . bDropLastLF		326525						
ANR	327944	Symbol	pTpe -> data . field		326525						
ANR	327945	Symbol	* p		326525						
ANR	327946	Symbol	tplFmtWDayName		326525						
ANR	327947	Symbol	tplFmtRFC3164BuggyDate		326525						
ANR	327948	Symbol	tplCaseConvLower		326525						
ANR	327949	DeclStmt									
ANR	327950	Decl							uchar	uchar *	p
ANR	327951	DeclStmt									
ANR	327952	Decl							cstr_t	cstr_t *	pStrProp
ANR	327953	DeclStmt									
ANR	327954	Decl							cstr_t	cstr_t *	pStrField
ANR	327955	DeclStmt									
ANR	327956	Decl							struct templateEntry	struct templateEntry *	pTpe
ANR	327957	DeclStmt									
ANR	327958	Decl							int	int	iNum
ANR	327959	DeclStmt									
ANR	327960	Decl							rsRetVal	rsRetVal	iRetLocal
ANR	327961	DeclStmt									
ANR	327962	Decl							int	int	longitud
ANR	327963	DeclStmt									
ANR	327964	Decl							unsigned char	unsigned char *	regex_char
ANR	327965	DeclStmt									
ANR	327966	Decl							unsigned char	unsigned char *	regex_end
ANR	327967	DeclStmt									
ANR	327968	Decl							int	int	iOptions
ANR	327969	DeclStmt									
ANR	327970	Decl							uchar	uchar *	pSrc
ANR	327971	DeclStmt									
ANR	327972	Decl							uchar	uchar [ 2048 ]	szMod
ANR	327973	DeclStmt									
ANR	327974	Decl							unsigned	unsigned	lenMod
ANR	327975	DeclStmt									
ANR	327976	Decl							strgen_t	strgen_t *	pStrgen
ANR	327977	Function	tplAddLine	1273:17:40572:44339							
ANR	327978	FunctionDef	"tplAddLine (rsconf_t * conf , const char * pName , uchar * * ppRestOfConfLine)"		327977	0					
ANR	327979	CompoundStatement		1274:0:40644:44339	327977	0					
ANR	327980	Statement	struct	1275:1:40647:40652	327977	0	True				
ANR	327981	Statement	template	1275:8:40654:40661	327977	1	True				
ANR	327982	ExpressionStatement	* pTpl	1275:17:40663:40668	327977	2	True				
ANR	327983	UnaryOperationExpression	* pTpl		327977	0					
ANR	327984	UnaryOperator	*		327977	0					
ANR	327985	Identifier	pTpl		327977	1					
ANR	327986	IdentifierDeclStatement	unsigned char * p ;	1276:2:40672:40688	327977	3	True				
ANR	327987	IdentifierDecl	* p		327977	0					
ANR	327988	IdentifierDeclType	unsigned char *		327977	0					
ANR	327989	Identifier	p		327977	1					
ANR	327990	IdentifierDeclStatement	int bDone ;	1277:1:40691:40700	327977	4	True				
ANR	327991	IdentifierDecl	bDone		327977	0					
ANR	327992	IdentifierDeclType	int		327977	0					
ANR	327993	Identifier	bDone		327977	1					
ANR	327994	IdentifierDeclStatement	size_t i ;	1278:1:40703:40711	327977	5	True				
ANR	327995	IdentifierDecl	i		327977	0					
ANR	327996	IdentifierDeclType	size_t		327977	0					
ANR	327997	Identifier	i		327977	1					
ANR	327998	IdentifierDeclStatement	rsRetVal localRet ;	1279:1:40714:40731	327977	6	True				
ANR	327999	IdentifierDecl	localRet		327977	0					
ANR	328000	IdentifierDeclType	rsRetVal		327977	0					
ANR	328001	Identifier	localRet		327977	1					
ANR	328002	ExpressionStatement	assert ( pName != NULL )	1281:1:40735:40756	327977	7	True				
ANR	328003	CallExpression	assert ( pName != NULL )		327977	0					
ANR	328004	Callee	assert		327977	0					
ANR	328005	Identifier	assert		327977	0					
ANR	328006	ArgumentList	pName != NULL		327977	1					
ANR	328007	Argument	pName != NULL		327977	0					
ANR	328008	EqualityExpression	pName != NULL		327977	0		!=			
ANR	328009	Identifier	pName		327977	0					
ANR	328010	Identifier	NULL		327977	1					
ANR	328011	ExpressionStatement	assert ( ppRestOfConfLine != NULL )	1282:1:40759:40791	327977	8	True				
ANR	328012	CallExpression	assert ( ppRestOfConfLine != NULL )		327977	0					
ANR	328013	Callee	assert		327977	0					
ANR	328014	Identifier	assert		327977	0					
ANR	328015	ArgumentList	ppRestOfConfLine != NULL		327977	1					
ANR	328016	Argument	ppRestOfConfLine != NULL		327977	0					
ANR	328017	EqualityExpression	ppRestOfConfLine != NULL		327977	0		!=			
ANR	328018	Identifier	ppRestOfConfLine		327977	0					
ANR	328019	Identifier	NULL		327977	1					
ANR	328020	IfStatement	if ( ( pTpl = tplConstruct ( conf ) ) == NULL )		327977	9					
ANR	328021	Condition	( pTpl = tplConstruct ( conf ) ) == NULL	1283:4:40797:40831	327977	0	True				
ANR	328022	EqualityExpression	( pTpl = tplConstruct ( conf ) ) == NULL		327977	0		==			
ANR	328023	AssignmentExpression	pTpl = tplConstruct ( conf )		327977	0		=			
ANR	328024	Identifier	pTpl		327977	0					
ANR	328025	CallExpression	tplConstruct ( conf )		327977	1					
ANR	328026	Callee	tplConstruct		327977	0					
ANR	328027	Identifier	tplConstruct		327977	0					
ANR	328028	ArgumentList	conf		327977	1					
ANR	328029	Argument	conf		327977	0					
ANR	328030	Identifier	conf		327977	0					
ANR	328031	Identifier	NULL		327977	1					
ANR	328032	ReturnStatement	return NULL ;	1284:2:40836:40847	327977	1	True				
ANR	328033	Identifier	NULL		327977	0					
ANR	328034	ExpressionStatement	"DBGPRINTF ( ""tplAddLine processing template '%s'\\n"" , pName )"	1286:1:40852:40909	327977	10	True				
ANR	328035	CallExpression	"DBGPRINTF ( ""tplAddLine processing template '%s'\\n"" , pName )"		327977	0					
ANR	328036	Callee	DBGPRINTF		327977	0					
ANR	328037	Identifier	DBGPRINTF		327977	0					
ANR	328038	ArgumentList	"""tplAddLine processing template '%s'\\n"""		327977	1					
ANR	328039	Argument	"""tplAddLine processing template '%s'\\n"""		327977	0					
ANR	328040	PrimaryExpression	"""tplAddLine processing template '%s'\\n"""		327977	0					
ANR	328041	Argument	pName		327977	1					
ANR	328042	Identifier	pName		327977	0					
ANR	328043	ExpressionStatement	pTpl -> iLenName = strlen ( pName )	1287:1:40912:40942	327977	11	True				
ANR	328044	AssignmentExpression	pTpl -> iLenName = strlen ( pName )		327977	0		=			
ANR	328045	PtrMemberAccess	pTpl -> iLenName		327977	0					
ANR	328046	Identifier	pTpl		327977	0					
ANR	328047	Identifier	iLenName		327977	1					
ANR	328048	CallExpression	strlen ( pName )		327977	1					
ANR	328049	Callee	strlen		327977	0					
ANR	328050	Identifier	strlen		327977	0					
ANR	328051	ArgumentList	pName		327977	1					
ANR	328052	Argument	pName		327977	0					
ANR	328053	Identifier	pName		327977	0					
ANR	328054	ExpressionStatement	pTpl -> pszName = ( char * ) MALLOC ( pTpl -> iLenName + 1 )	1288:1:40945:40995	327977	12	True				
ANR	328055	AssignmentExpression	pTpl -> pszName = ( char * ) MALLOC ( pTpl -> iLenName + 1 )		327977	0		=			
ANR	328056	PtrMemberAccess	pTpl -> pszName		327977	0					
ANR	328057	Identifier	pTpl		327977	0					
ANR	328058	Identifier	pszName		327977	1					
ANR	328059	CastExpression	( char * ) MALLOC ( pTpl -> iLenName + 1 )		327977	1					
ANR	328060	CastTarget	char *		327977	0					
ANR	328061	CallExpression	MALLOC ( pTpl -> iLenName + 1 )		327977	1					
ANR	328062	Callee	MALLOC		327977	0					
ANR	328063	Identifier	MALLOC		327977	0					
ANR	328064	ArgumentList	pTpl -> iLenName + 1		327977	1					
ANR	328065	Argument	pTpl -> iLenName + 1		327977	0					
ANR	328066	AdditiveExpression	pTpl -> iLenName + 1		327977	0		+			
ANR	328067	PtrMemberAccess	pTpl -> iLenName		327977	0					
ANR	328068	Identifier	pTpl		327977	0					
ANR	328069	Identifier	iLenName		327977	1					
ANR	328070	PrimaryExpression	1		327977	1					
ANR	328071	IfStatement	if ( pTpl -> pszName == NULL )		327977	13					
ANR	328072	Condition	pTpl -> pszName == NULL	1289:4:41001:41021	327977	0	True				
ANR	328073	EqualityExpression	pTpl -> pszName == NULL		327977	0		==			
ANR	328074	PtrMemberAccess	pTpl -> pszName		327977	0					
ANR	328075	Identifier	pTpl		327977	0					
ANR	328076	Identifier	pszName		327977	1					
ANR	328077	Identifier	NULL		327977	1					
ANR	328078	CompoundStatement		16:27:379:379	327977	1					
ANR	328079	ExpressionStatement	"dbgprintf ( ""tplAddLine could not alloc memory for template name!"" )"	1290:2:41028:41093	327977	0	True				
ANR	328080	CallExpression	"dbgprintf ( ""tplAddLine could not alloc memory for template name!"" )"		327977	0					
ANR	328081	Callee	dbgprintf		327977	0					
ANR	328082	Identifier	dbgprintf		327977	0					
ANR	328083	ArgumentList	"""tplAddLine could not alloc memory for template name!"""		327977	1					
ANR	328084	Argument	"""tplAddLine could not alloc memory for template name!"""		327977	0					
ANR	328085	PrimaryExpression	"""tplAddLine could not alloc memory for template name!"""		327977	0					
ANR	328086	ExpressionStatement	pTpl -> iLenName = 0	1291:2:41097:41115	327977	1	True				
ANR	328087	AssignmentExpression	pTpl -> iLenName = 0		327977	0		=			
ANR	328088	PtrMemberAccess	pTpl -> iLenName		327977	0					
ANR	328089	Identifier	pTpl		327977	0					
ANR	328090	Identifier	iLenName		327977	1					
ANR	328091	PrimaryExpression	0		327977	1					
ANR	328092	ReturnStatement	return NULL ;	1292:2:41119:41130	327977	2	True				
ANR	328093	Identifier	NULL		327977	0					
ANR	328094	ExpressionStatement	"memcpy ( pTpl -> pszName , pName , pTpl -> iLenName + 1 )"	1298:1:41301:41349	327977	14	True				
ANR	328095	CallExpression	"memcpy ( pTpl -> pszName , pName , pTpl -> iLenName + 1 )"		327977	0					
ANR	328096	Callee	memcpy		327977	0					
ANR	328097	Identifier	memcpy		327977	0					
ANR	328098	ArgumentList	pTpl -> pszName		327977	1					
ANR	328099	Argument	pTpl -> pszName		327977	0					
ANR	328100	PtrMemberAccess	pTpl -> pszName		327977	0					
ANR	328101	Identifier	pTpl		327977	0					
ANR	328102	Identifier	pszName		327977	1					
ANR	328103	Argument	pName		327977	1					
ANR	328104	Identifier	pName		327977	0					
ANR	328105	Argument	pTpl -> iLenName + 1		327977	2					
ANR	328106	AdditiveExpression	pTpl -> iLenName + 1		327977	0		+			
ANR	328107	PtrMemberAccess	pTpl -> iLenName		327977	0					
ANR	328108	Identifier	pTpl		327977	0					
ANR	328109	Identifier	iLenName		327977	1					
ANR	328110	PrimaryExpression	1		327977	1					
ANR	328111	ExpressionStatement	p = * ppRestOfConfLine	1301:1:41388:41409	327977	15	True				
ANR	328112	AssignmentExpression	p = * ppRestOfConfLine		327977	0		=			
ANR	328113	Identifier	p		327977	0					
ANR	328114	UnaryOperationExpression	* ppRestOfConfLine		327977	1					
ANR	328115	UnaryOperator	*		327977	0					
ANR	328116	Identifier	ppRestOfConfLine		327977	1					
ANR	328117	ExpressionStatement	assert ( p != NULL )	1302:1:41412:41429	327977	16	True				
ANR	328118	CallExpression	assert ( p != NULL )		327977	0					
ANR	328119	Callee	assert		327977	0					
ANR	328120	Identifier	assert		327977	0					
ANR	328121	ArgumentList	p != NULL		327977	1					
ANR	328122	Argument	p != NULL		327977	0					
ANR	328123	EqualityExpression	p != NULL		327977	0		!=			
ANR	328124	Identifier	p		327977	0					
ANR	328125	Identifier	NULL		327977	1					
ANR	328126	WhileStatement	while ( isspace ( ( int ) * p ) )		327977	17					
ANR	328127	Condition	isspace ( ( int ) * p )	1304:7:41439:41454	327977	0	True				
ANR	328128	CallExpression	isspace ( ( int ) * p )		327977	0					
ANR	328129	Callee	isspace		327977	0					
ANR	328130	Identifier	isspace		327977	0					
ANR	328131	ArgumentList	( int ) * p		327977	1					
ANR	328132	Argument	( int ) * p		327977	0					
ANR	328133	CastExpression	( int ) * p		327977	0					
ANR	328134	CastTarget	int		327977	0					
ANR	328135	UnaryOperationExpression	* p		327977	1					
ANR	328136	UnaryOperator	*		327977	0					
ANR	328137	Identifier	p		327977	1					
ANR	328138	ExpressionStatement	++ p	1305:2:41480:41483	327977	1	True				
ANR	328139	UnaryExpression	++ p		327977	0					
ANR	328140	IncDec	++		327977	0					
ANR	328141	Identifier	p		327977	1					
ANR	328142	SwitchStatement	switch ( * p )		327977	18					
ANR	328143	Condition	* p	1307:8:41495:41496	327977	0	True				
ANR	328144	UnaryOperationExpression	* p		327977	0					
ANR	328145	UnaryOperator	*		327977	0					
ANR	328146	Identifier	p		327977	1					
ANR	328147	CompoundStatement		34:12:854:854	327977	1					
ANR	328148	Label	"case '""' :"	1308:1:41502:41510	327977	0	True				
ANR	328149	BreakStatement	break ;	1309:2:41534:41539	327977	1	True				
ANR	328150	Label	case '=' :	1310:1:41542:41550	327977	2	True				
ANR	328151	ExpressionStatement	* ppRestOfConfLine = p + 1	1311:2:41554:41579	327977	3	True				
ANR	328152	AssignmentExpression	* ppRestOfConfLine = p + 1		327977	0		=			
ANR	328153	UnaryOperationExpression	* ppRestOfConfLine		327977	0					
ANR	328154	UnaryOperator	*		327977	0					
ANR	328155	Identifier	ppRestOfConfLine		327977	1					
ANR	328156	AdditiveExpression	p + 1		327977	1		+			
ANR	328157	Identifier	p		327977	0					
ANR	328158	PrimaryExpression	1		327977	1					
ANR	328159	ExpressionStatement	"localRet = tplAddTplMod ( pTpl , ppRestOfConfLine )"	1312:2:41583:41630	327977	4	True				
ANR	328160	AssignmentExpression	"localRet = tplAddTplMod ( pTpl , ppRestOfConfLine )"		327977	0		=			
ANR	328161	Identifier	localRet		327977	0					
ANR	328162	CallExpression	"tplAddTplMod ( pTpl , ppRestOfConfLine )"		327977	1					
ANR	328163	Callee	tplAddTplMod		327977	0					
ANR	328164	Identifier	tplAddTplMod		327977	0					
ANR	328165	ArgumentList	pTpl		327977	1					
ANR	328166	Argument	pTpl		327977	0					
ANR	328167	Identifier	pTpl		327977	0					
ANR	328168	Argument	ppRestOfConfLine		327977	1					
ANR	328169	Identifier	ppRestOfConfLine		327977	0					
ANR	328170	IfStatement	if ( localRet != RS_RET_OK )		327977	5					
ANR	328171	Condition	localRet != RS_RET_OK	1313:5:41637:41657	327977	0	True				
ANR	328172	EqualityExpression	localRet != RS_RET_OK		327977	0		!=			
ANR	328173	Identifier	localRet		327977	0					
ANR	328174	Identifier	RS_RET_OK		327977	1					
ANR	328175	CompoundStatement		40:28:1015:1015	327977	1					
ANR	328176	ExpressionStatement	"errmsg . LogError ( 0 , localRet , ""Template '%s': error %d defining template via strgen module"" , pTpl -> pszName , localRet )"	1314:3:41665:41786	327977	0	True				
ANR	328177	CallExpression	"errmsg . LogError ( 0 , localRet , ""Template '%s': error %d defining template via strgen module"" , pTpl -> pszName , localRet )"		327977	0					
ANR	328178	Callee	errmsg . LogError		327977	0					
ANR	328179	MemberAccess	errmsg . LogError		327977	0					
ANR	328180	Identifier	errmsg		327977	0					
ANR	328181	Identifier	LogError		327977	1					
ANR	328182	ArgumentList	0		327977	1					
ANR	328183	Argument	0		327977	0					
ANR	328184	PrimaryExpression	0		327977	0					
ANR	328185	Argument	localRet		327977	1					
ANR	328186	Identifier	localRet		327977	0					
ANR	328187	Argument	"""Template '%s': error %d defining template via strgen module"""		327977	2					
ANR	328188	PrimaryExpression	"""Template '%s': error %d defining template via strgen module"""		327977	0					
ANR	328189	Argument	pTpl -> pszName		327977	3					
ANR	328190	PtrMemberAccess	pTpl -> pszName		327977	0					
ANR	328191	Identifier	pTpl		327977	0					
ANR	328192	Identifier	pszName		327977	1					
ANR	328193	Argument	localRet		327977	4					
ANR	328194	Identifier	localRet		327977	0					
ANR	328195	ExpressionStatement	* pTpl -> pszName = '\\0'	1322:3:42107:42128	327977	1	True				
ANR	328196	AssignmentExpression	* pTpl -> pszName = '\\0'		327977	0		=			
ANR	328197	UnaryOperationExpression	* pTpl -> pszName		327977	0					
ANR	328198	UnaryOperator	*		327977	0					
ANR	328199	PtrMemberAccess	pTpl -> pszName		327977	1					
ANR	328200	Identifier	pTpl		327977	0					
ANR	328201	Identifier	pszName		327977	1					
ANR	328202	PrimaryExpression	'\\0'		327977	1					
ANR	328203	ReturnStatement	return NULL ;	1324:2:42136:42147	327977	6	True				
ANR	328204	Identifier	NULL		327977	0					
ANR	328205	Label	default :	1325:1:42150:42157	327977	7	True				
ANR	328206	Identifier	default		327977	0					
ANR	328207	ExpressionStatement	"dbgprintf ( ""Template '%s' invalid, does not start with '\\""'!\\n"" , pTpl -> pszName )"	1326:2:42161:42239	327977	8	True				
ANR	328208	CallExpression	"dbgprintf ( ""Template '%s' invalid, does not start with '\\""'!\\n"" , pTpl -> pszName )"		327977	0					
ANR	328209	Callee	dbgprintf		327977	0					
ANR	328210	Identifier	dbgprintf		327977	0					
ANR	328211	ArgumentList	"""Template '%s' invalid, does not start with '\\""'!\\n"""		327977	1					
ANR	328212	Argument	"""Template '%s' invalid, does not start with '\\""'!\\n"""		327977	0					
ANR	328213	PrimaryExpression	"""Template '%s' invalid, does not start with '\\""'!\\n"""		327977	0					
ANR	328214	Argument	pTpl -> pszName		327977	1					
ANR	328215	PtrMemberAccess	pTpl -> pszName		327977	0					
ANR	328216	Identifier	pTpl		327977	0					
ANR	328217	Identifier	pszName		327977	1					
ANR	328218	ExpressionStatement	* pTpl -> pszName = '\\0'	1332:2:42462:42483	327977	9	True				
ANR	328219	AssignmentExpression	* pTpl -> pszName = '\\0'		327977	0		=			
ANR	328220	UnaryOperationExpression	* pTpl -> pszName		327977	0					
ANR	328221	UnaryOperator	*		327977	0					
ANR	328222	PtrMemberAccess	pTpl -> pszName		327977	1					
ANR	328223	Identifier	pTpl		327977	0					
ANR	328224	Identifier	pszName		327977	1					
ANR	328225	PrimaryExpression	'\\0'		327977	1					
ANR	328226	ReturnStatement	return NULL ;	1333:2:42487:42498	327977	10	True				
ANR	328227	Identifier	NULL		327977	0					
ANR	328228	ExpressionStatement	++ p	1335:1:42504:42507	327977	19	True				
ANR	328229	UnaryExpression	++ p		327977	0					
ANR	328230	IncDec	++		327977	0					
ANR	328231	Identifier	p		327977	1					
ANR	328232	ExpressionStatement	bDone = * p ? 0 : 1	1338:1:42590:42608	327977	20	True				
ANR	328233	AssignmentExpression	bDone = * p ? 0 : 1		327977	0		=			
ANR	328234	Identifier	bDone		327977	0					
ANR	328235	ConditionalExpression	* p ? 0 : 1		327977	1					
ANR	328236	Condition	* p		327977	0					
ANR	328237	UnaryOperationExpression	* p		327977	0					
ANR	328238	UnaryOperator	*		327977	0					
ANR	328239	Identifier	p		327977	1					
ANR	328240	PrimaryExpression	0		327977	1					
ANR	328241	PrimaryExpression	1		327977	2					
ANR	328242	WhileStatement	while ( ! bDone )		327977	21					
ANR	328243	Condition	! bDone	1339:7:42617:42622	327977	0	True				
ANR	328244	UnaryOperationExpression	! bDone		327977	0					
ANR	328245	UnaryOperator	!		327977	0					
ANR	328246	Identifier	bDone		327977	1					
ANR	328247	CompoundStatement		66:15:1980:1980	327977	1					
ANR	328248	SwitchStatement	switch ( * p )		327977	0					
ANR	328249	Condition	* p	1340:9:42636:42637	327977	0	True				
ANR	328250	UnaryOperationExpression	* p		327977	0					
ANR	328251	UnaryOperator	*		327977	0					
ANR	328252	Identifier	p		327977	1					
ANR	328253	CompoundStatement		67:13:1995:1995	327977	1					
ANR	328254	Label	case '\\0' :	1341:3:42645:42654	327977	0	True				
ANR	328255	ExpressionStatement	bDone = 1	1342:4:42660:42669	327977	1	True				
ANR	328256	AssignmentExpression	bDone = 1		327977	0		=			
ANR	328257	Identifier	bDone		327977	0					
ANR	328258	PrimaryExpression	1		327977	1					
ANR	328259	BreakStatement	break ;	1343:4:42675:42680	327977	2	True				
ANR	328260	Label	case '%' :	1344:3:42685:42693	327977	3	True				
ANR	328261	ExpressionStatement	++ p	1345:4:42715:42718	327977	4	True				
ANR	328262	UnaryExpression	++ p		327977	0					
ANR	328263	IncDec	++		327977	0					
ANR	328264	Identifier	p		327977	1					
ANR	328265	IfStatement	"if ( do_Parameter ( & p , pTpl ) != RS_RET_OK )"		327977	5					
ANR	328266	Condition	"do_Parameter ( & p , pTpl ) != RS_RET_OK"	1346:7:42741:42775	327977	0	True				
ANR	328267	EqualityExpression	"do_Parameter ( & p , pTpl ) != RS_RET_OK"		327977	0		!=			
ANR	328268	CallExpression	"do_Parameter ( & p , pTpl )"		327977	0					
ANR	328269	Callee	do_Parameter		327977	0					
ANR	328270	Identifier	do_Parameter		327977	0					
ANR	328271	ArgumentList	& p		327977	1					
ANR	328272	Argument	& p		327977	0					
ANR	328273	UnaryOperationExpression	& p		327977	0					
ANR	328274	UnaryOperator	&		327977	0					
ANR	328275	Identifier	p		327977	1					
ANR	328276	Argument	pTpl		327977	1					
ANR	328277	Identifier	pTpl		327977	0					
ANR	328278	Identifier	RS_RET_OK		327977	1					
ANR	328279	CompoundStatement		73:44:2133:2133	327977	1					
ANR	328280	ExpressionStatement	"dbgprintf ( ""tplAddLine error: parameter invalid"" )"	1347:5:42785:42833	327977	0	True				
ANR	328281	CallExpression	"dbgprintf ( ""tplAddLine error: parameter invalid"" )"		327977	0					
ANR	328282	Callee	dbgprintf		327977	0					
ANR	328283	Identifier	dbgprintf		327977	0					
ANR	328284	ArgumentList	"""tplAddLine error: parameter invalid"""		327977	1					
ANR	328285	Argument	"""tplAddLine error: parameter invalid"""		327977	0					
ANR	328286	PrimaryExpression	"""tplAddLine error: parameter invalid"""		327977	0					
ANR	328287	ReturnStatement	return NULL ;	1348:5:42840:42851	327977	1	True				
ANR	328288	Identifier	NULL		327977	0					
ANR	328289	ExpressionStatement		1349:5:42858:42858	327977	6	True				
ANR	328290	BreakStatement	break ;	1350:4:42864:42869	327977	7	True				
ANR	328291	Label	default :	1351:3:42874:42881	327977	8	True				
ANR	328292	Identifier	default		327977	0					
ANR	328293	ExpressionStatement	"do_Constant ( & p , pTpl , 1 )"	1352:4:42902:42926	327977	9	True				
ANR	328294	CallExpression	"do_Constant ( & p , pTpl , 1 )"		327977	0					
ANR	328295	Callee	do_Constant		327977	0					
ANR	328296	Identifier	do_Constant		327977	0					
ANR	328297	ArgumentList	& p		327977	1					
ANR	328298	Argument	& p		327977	0					
ANR	328299	UnaryOperationExpression	& p		327977	0					
ANR	328300	UnaryOperator	&		327977	0					
ANR	328301	Identifier	p		327977	1					
ANR	328302	Argument	pTpl		327977	1					
ANR	328303	Identifier	pTpl		327977	0					
ANR	328304	Argument	1		327977	2					
ANR	328305	PrimaryExpression	1		327977	0					
ANR	328306	BreakStatement	break ;	1353:4:42932:42937	327977	10	True				
ANR	328307	IfStatement	"if ( * p == '""' )"		327977	1					
ANR	328308	Condition	"* p == '""'"	1355:5:42948:42956	327977	0	True				
ANR	328309	EqualityExpression	"* p == '""'"		327977	0		==			
ANR	328310	UnaryOperationExpression	* p		327977	0					
ANR	328311	UnaryOperator	*		327977	0					
ANR	328312	Identifier	p		327977	1					
ANR	328313	PrimaryExpression	"'""'"		327977	1					
ANR	328314	CompoundStatement		82:16:2314:2314	327977	1					
ANR	328315	ExpressionStatement	++ p	1356:3:42993:42996	327977	0	True				
ANR	328316	UnaryExpression	++ p		327977	0					
ANR	328317	IncDec	++		327977	0					
ANR	328318	Identifier	p		327977	1					
ANR	328319	ExpressionStatement	bDone = 1	1357:3:43015:43024	327977	1	True				
ANR	328320	AssignmentExpression	bDone = 1		327977	0		=			
ANR	328321	Identifier	bDone		327977	0					
ANR	328322	PrimaryExpression	1		327977	1					
ANR	328323	WhileStatement	while ( * p )		327977	22					
ANR	328324	Condition	* p	1365:7:43219:43220	327977	0	True				
ANR	328325	UnaryOperationExpression	* p		327977	0					
ANR	328326	UnaryOperator	*		327977	0					
ANR	328327	Identifier	p		327977	1					
ANR	328328	CompoundStatement		104:2:2771:2798	327977	1					
ANR	328329	WhileStatement	while ( isspace ( ( int ) * p ) )		327977	0					
ANR	328330	Condition	isspace ( ( int ) * p )	1366:8:43233:43248	327977	0	True				
ANR	328331	CallExpression	isspace ( ( int ) * p )		327977	0					
ANR	328332	Callee	isspace		327977	0					
ANR	328333	Identifier	isspace		327977	0					
ANR	328334	ArgumentList	( int ) * p		327977	1					
ANR	328335	Argument	( int ) * p		327977	0					
ANR	328336	CastExpression	( int ) * p		327977	0					
ANR	328337	CastTarget	int		327977	0					
ANR	328338	UnaryOperationExpression	* p		327977	1					
ANR	328339	UnaryOperator	*		327977	0					
ANR	328340	Identifier	p		327977	1					
ANR	328341	ExpressionStatement	++ p	1367:3:43275:43278	327977	1	True				
ANR	328342	UnaryExpression	++ p		327977	0					
ANR	328343	IncDec	++		327977	0					
ANR	328344	Identifier	p		327977	1					
ANR	328345	IfStatement	"if ( * p != ',' )"		327977	1					
ANR	328346	Condition	"* p != ','"	1369:5:43288:43296	327977	0	True				
ANR	328347	EqualityExpression	"* p != ','"		327977	0		!=			
ANR	328348	UnaryOperationExpression	* p		327977	0					
ANR	328349	UnaryOperator	*		327977	0					
ANR	328350	Identifier	p		327977	1					
ANR	328351	PrimaryExpression	"','"		327977	1					
ANR	328352	BreakStatement	break ;	1370:3:43302:43307	327977	1	True				
ANR	328353	ExpressionStatement	++ p	1371:2:43311:43314	327977	2	True				
ANR	328354	UnaryExpression	++ p		327977	0					
ANR	328355	IncDec	++		327977	0					
ANR	328356	Identifier	p		327977	1					
ANR	328357	WhileStatement	while ( isspace ( ( int ) * p ) )		327977	3					
ANR	328358	Condition	isspace ( ( int ) * p )	1373:8:43339:43354	327977	0	True				
ANR	328359	CallExpression	isspace ( ( int ) * p )		327977	0					
ANR	328360	Callee	isspace		327977	0					
ANR	328361	Identifier	isspace		327977	0					
ANR	328362	ArgumentList	( int ) * p		327977	1					
ANR	328363	Argument	( int ) * p		327977	0					
ANR	328364	CastExpression	( int ) * p		327977	0					
ANR	328365	CastTarget	int		327977	0					
ANR	328366	UnaryOperationExpression	* p		327977	1					
ANR	328367	UnaryOperator	*		327977	0					
ANR	328368	Identifier	p		327977	1					
ANR	328369	ExpressionStatement	++ p	1374:3:43381:43384	327977	1	True				
ANR	328370	UnaryExpression	++ p		327977	0					
ANR	328371	IncDec	++		327977	0					
ANR	328372	Identifier	p		327977	1					
ANR	328373	IdentifierDeclStatement	char optBuf [ 128 ] = { '\\0' } ;	1377:2:43416:43443	327977	4	True				
ANR	328374	IdentifierDecl	optBuf [ 128 ] = { '\\0' }		327977	0					
ANR	328375	IdentifierDeclType	char [ 128 ]		327977	0					
ANR	328376	Identifier	optBuf		327977	1					
ANR	328377	PrimaryExpression	128		327977	2					
ANR	328378	AssignmentExpression	optBuf [ 128 ] = { '\\0' }		327977	3		=			
ANR	328379	Identifier	optBuf		327977	0					
ANR	328380	InitializerList	'\\0'		327977	1					
ANR	328381	PrimaryExpression	'\\0'		327977	0					
ANR	328382	ExpressionStatement	i = 0	1378:2:43504:43509	327977	5	True				
ANR	328383	AssignmentExpression	i = 0		327977	0		=			
ANR	328384	Identifier	i		327977	0					
ANR	328385	PrimaryExpression	0		327977	1					
ANR	328386	WhileStatement	"while ( ( i < ( sizeof ( optBuf ) - 1 ) ) && * p && * p != '=' && * p != ',' && * p != '\\n' )"		327977	6					
ANR	328387	Condition	"( i < ( sizeof ( optBuf ) - 1 ) ) && * p && * p != '=' && * p != ',' && * p != '\\n'"	1379:8:43519:43597	327977	0	True				
ANR	328388	AndExpression	"( i < ( sizeof ( optBuf ) - 1 ) ) && * p && * p != '=' && * p != ',' && * p != '\\n'"		327977	0		&&			
ANR	328389	RelationalExpression	i < ( sizeof ( optBuf ) - 1 )		327977	0		<			
ANR	328390	Identifier	i		327977	0					
ANR	328391	AdditiveExpression	sizeof ( optBuf ) - 1		327977	1		-			
ANR	328392	SizeofExpression	sizeof ( optBuf )		327977	0					
ANR	328393	Sizeof	sizeof		327977	0					
ANR	328394	SizeofOperand	optBuf		327977	1					
ANR	328395	PrimaryExpression	1		327977	1					
ANR	328396	AndExpression	"* p && * p != '=' && * p != ',' && * p != '\\n'"		327977	1		&&			
ANR	328397	UnaryOperationExpression	* p		327977	0					
ANR	328398	UnaryOperator	*		327977	0					
ANR	328399	Identifier	p		327977	1					
ANR	328400	AndExpression	"* p != '=' && * p != ',' && * p != '\\n'"		327977	1		&&			
ANR	328401	EqualityExpression	* p != '='		327977	0		!=			
ANR	328402	UnaryOperationExpression	* p		327977	0					
ANR	328403	UnaryOperator	*		327977	0					
ANR	328404	Identifier	p		327977	1					
ANR	328405	PrimaryExpression	'='		327977	1					
ANR	328406	AndExpression	"* p != ',' && * p != '\\n'"		327977	1		&&			
ANR	328407	EqualityExpression	"* p != ','"		327977	0		!=			
ANR	328408	UnaryOperationExpression	* p		327977	0					
ANR	328409	UnaryOperator	*		327977	0					
ANR	328410	Identifier	p		327977	1					
ANR	328411	PrimaryExpression	"','"		327977	1					
ANR	328412	EqualityExpression	* p != '\\n'		327977	1		!=			
ANR	328413	UnaryOperationExpression	* p		327977	0					
ANR	328414	UnaryOperator	*		327977	0					
ANR	328415	Identifier	p		327977	1					
ANR	328416	PrimaryExpression	'\\n'		327977	1					
ANR	328417	CompoundStatement		107:54:2955:2955	327977	1					
ANR	328418	ExpressionStatement	optBuf [ i ++ ] = tolower ( ( int ) * p )	1381:3:43605:43635	327977	0	True				
ANR	328419	AssignmentExpression	optBuf [ i ++ ] = tolower ( ( int ) * p )		327977	0		=			
ANR	328420	ArrayIndexing	optBuf [ i ++ ]		327977	0					
ANR	328421	Identifier	optBuf		327977	0					
ANR	328422	PostIncDecOperationExpression	i ++		327977	1					
ANR	328423	Identifier	i		327977	0					
ANR	328424	IncDec	++		327977	1					
ANR	328425	CallExpression	tolower ( ( int ) * p )		327977	1					
ANR	328426	Callee	tolower		327977	0					
ANR	328427	Identifier	tolower		327977	0					
ANR	328428	ArgumentList	( int ) * p		327977	1					
ANR	328429	Argument	( int ) * p		327977	0					
ANR	328430	CastExpression	( int ) * p		327977	0					
ANR	328431	CastTarget	int		327977	0					
ANR	328432	UnaryOperationExpression	* p		327977	1					
ANR	328433	UnaryOperator	*		327977	0					
ANR	328434	Identifier	p		327977	1					
ANR	328435	ExpressionStatement	++ p	1382:3:43640:43643	327977	1	True				
ANR	328436	UnaryExpression	++ p		327977	0					
ANR	328437	IncDec	++		327977	0					
ANR	328438	Identifier	p		327977	1					
ANR	328439	ExpressionStatement	optBuf [ i ] = '\\0'	1384:2:43651:43667	327977	7	True				
ANR	328440	AssignmentExpression	optBuf [ i ] = '\\0'		327977	0		=			
ANR	328441	ArrayIndexing	optBuf [ i ]		327977	0					
ANR	328442	Identifier	optBuf		327977	0					
ANR	328443	Identifier	i		327977	1					
ANR	328444	PrimaryExpression	'\\0'		327977	1					
ANR	328445	IfStatement	if ( * p == '\\n' )		327977	8					
ANR	328446	Condition	* p == '\\n'	1386:5:43675:43684	327977	0	True				
ANR	328447	EqualityExpression	* p == '\\n'		327977	0		==			
ANR	328448	UnaryOperationExpression	* p		327977	0					
ANR	328449	UnaryOperator	*		327977	0					
ANR	328450	Identifier	p		327977	1					
ANR	328451	PrimaryExpression	'\\n'		327977	1					
ANR	328452	ExpressionStatement	++ p	1387:3:43690:43693	327977	1	True				
ANR	328453	UnaryExpression	++ p		327977	0					
ANR	328454	IncDec	++		327977	0					
ANR	328455	Identifier	p		327977	1					
ANR	328456	IfStatement	"if ( ! strcmp ( optBuf , ""stdsql"" ) )"		327977	9					
ANR	328457	Condition	"! strcmp ( optBuf , ""stdsql"" )"	1392:5:43809:43833	327977	0	True				
ANR	328458	UnaryOperationExpression	"! strcmp ( optBuf , ""stdsql"" )"		327977	0					
ANR	328459	UnaryOperator	!		327977	0					
ANR	328460	CallExpression	"strcmp ( optBuf , ""stdsql"" )"		327977	1					
ANR	328461	Callee	strcmp		327977	0					
ANR	328462	Identifier	strcmp		327977	0					
ANR	328463	ArgumentList	optBuf		327977	1					
ANR	328464	Argument	optBuf		327977	0					
ANR	328465	Identifier	optBuf		327977	0					
ANR	328466	Argument	"""stdsql"""		327977	1					
ANR	328467	PrimaryExpression	"""stdsql"""		327977	0					
ANR	328468	CompoundStatement		119:32:3191:3191	327977	1					
ANR	328469	ExpressionStatement	pTpl -> optFormatEscape = STDSQL_ESCAPE	1393:3:43841:43878	327977	0	True				
ANR	328470	AssignmentExpression	pTpl -> optFormatEscape = STDSQL_ESCAPE		327977	0		=			
ANR	328471	PtrMemberAccess	pTpl -> optFormatEscape		327977	0					
ANR	328472	Identifier	pTpl		327977	0					
ANR	328473	Identifier	optFormatEscape		327977	1					
ANR	328474	Identifier	STDSQL_ESCAPE		327977	1					
ANR	328475	ElseStatement	else		327977	0					
ANR	328476	IfStatement	"if ( ! strcmp ( optBuf , ""json"" ) )"		327977	0					
ANR	328477	Condition	"! strcmp ( optBuf , ""json"" )"	1394:12:43892:43914	327977	0	True				
ANR	328478	UnaryOperationExpression	"! strcmp ( optBuf , ""json"" )"		327977	0					
ANR	328479	UnaryOperator	!		327977	0					
ANR	328480	CallExpression	"strcmp ( optBuf , ""json"" )"		327977	1					
ANR	328481	Callee	strcmp		327977	0					
ANR	328482	Identifier	strcmp		327977	0					
ANR	328483	ArgumentList	optBuf		327977	1					
ANR	328484	Argument	optBuf		327977	0					
ANR	328485	Identifier	optBuf		327977	0					
ANR	328486	Argument	"""json"""		327977	1					
ANR	328487	PrimaryExpression	"""json"""		327977	0					
ANR	328488	CompoundStatement		121:37:3272:3272	327977	1					
ANR	328489	ExpressionStatement	pTpl -> optFormatEscape = JSON_ESCAPE	1395:3:43922:43957	327977	0	True				
ANR	328490	AssignmentExpression	pTpl -> optFormatEscape = JSON_ESCAPE		327977	0		=			
ANR	328491	PtrMemberAccess	pTpl -> optFormatEscape		327977	0					
ANR	328492	Identifier	pTpl		327977	0					
ANR	328493	Identifier	optFormatEscape		327977	1					
ANR	328494	Identifier	JSON_ESCAPE		327977	1					
ANR	328495	ElseStatement	else		327977	0					
ANR	328496	IfStatement	"if ( ! strcmp ( optBuf , ""sql"" ) )"		327977	0					
ANR	328497	Condition	"! strcmp ( optBuf , ""sql"" )"	1396:12:43971:43992	327977	0	True				
ANR	328498	UnaryOperationExpression	"! strcmp ( optBuf , ""sql"" )"		327977	0					
ANR	328499	UnaryOperator	!		327977	0					
ANR	328500	CallExpression	"strcmp ( optBuf , ""sql"" )"		327977	1					
ANR	328501	Callee	strcmp		327977	0					
ANR	328502	Identifier	strcmp		327977	0					
ANR	328503	ArgumentList	optBuf		327977	1					
ANR	328504	Argument	optBuf		327977	0					
ANR	328505	Identifier	optBuf		327977	0					
ANR	328506	Argument	"""sql"""		327977	1					
ANR	328507	PrimaryExpression	"""sql"""		327977	0					
ANR	328508	CompoundStatement		123:36:3350:3350	327977	1					
ANR	328509	ExpressionStatement	pTpl -> optFormatEscape = SQL_ESCAPE	1397:3:44000:44034	327977	0	True				
ANR	328510	AssignmentExpression	pTpl -> optFormatEscape = SQL_ESCAPE		327977	0		=			
ANR	328511	PtrMemberAccess	pTpl -> optFormatEscape		327977	0					
ANR	328512	Identifier	pTpl		327977	0					
ANR	328513	Identifier	optFormatEscape		327977	1					
ANR	328514	Identifier	SQL_ESCAPE		327977	1					
ANR	328515	ElseStatement	else		327977	0					
ANR	328516	IfStatement	"if ( ! strcmp ( optBuf , ""nosql"" ) )"		327977	0					
ANR	328517	Condition	"! strcmp ( optBuf , ""nosql"" )"	1398:12:44048:44071	327977	0	True				
ANR	328518	UnaryOperationExpression	"! strcmp ( optBuf , ""nosql"" )"		327977	0					
ANR	328519	UnaryOperator	!		327977	0					
ANR	328520	CallExpression	"strcmp ( optBuf , ""nosql"" )"		327977	1					
ANR	328521	Callee	strcmp		327977	0					
ANR	328522	Identifier	strcmp		327977	0					
ANR	328523	ArgumentList	optBuf		327977	1					
ANR	328524	Argument	optBuf		327977	0					
ANR	328525	Identifier	optBuf		327977	0					
ANR	328526	Argument	"""nosql"""		327977	1					
ANR	328527	PrimaryExpression	"""nosql"""		327977	0					
ANR	328528	CompoundStatement		125:38:3429:3429	327977	1					
ANR	328529	ExpressionStatement	pTpl -> optFormatEscape = NO_ESCAPE	1399:3:44079:44112	327977	0	True				
ANR	328530	AssignmentExpression	pTpl -> optFormatEscape = NO_ESCAPE		327977	0		=			
ANR	328531	PtrMemberAccess	pTpl -> optFormatEscape		327977	0					
ANR	328532	Identifier	pTpl		327977	0					
ANR	328533	Identifier	optFormatEscape		327977	1					
ANR	328534	Identifier	NO_ESCAPE		327977	1					
ANR	328535	ElseStatement	else		327977	0					
ANR	328536	IfStatement	"if ( ! strcmp ( optBuf , ""casesensitive"" ) )"		327977	0					
ANR	328537	Condition	"! strcmp ( optBuf , ""casesensitive"" )"	1400:12:44126:44157	327977	0	True				
ANR	328538	UnaryOperationExpression	"! strcmp ( optBuf , ""casesensitive"" )"		327977	0					
ANR	328539	UnaryOperator	!		327977	0					
ANR	328540	CallExpression	"strcmp ( optBuf , ""casesensitive"" )"		327977	1					
ANR	328541	Callee	strcmp		327977	0					
ANR	328542	Identifier	strcmp		327977	0					
ANR	328543	ArgumentList	optBuf		327977	1					
ANR	328544	Argument	optBuf		327977	0					
ANR	328545	Identifier	optBuf		327977	0					
ANR	328546	Argument	"""casesensitive"""		327977	1					
ANR	328547	PrimaryExpression	"""casesensitive"""		327977	0					
ANR	328548	CompoundStatement		127:46:3515:3515	327977	1					
ANR	328549	ExpressionStatement	pTpl -> optCaseSensitive = 1	1401:3:44165:44191	327977	0	True				
ANR	328550	AssignmentExpression	pTpl -> optCaseSensitive = 1		327977	0		=			
ANR	328551	PtrMemberAccess	pTpl -> optCaseSensitive		327977	0					
ANR	328552	Identifier	pTpl		327977	0					
ANR	328553	Identifier	optCaseSensitive		327977	1					
ANR	328554	PrimaryExpression	1		327977	1					
ANR	328555	ElseStatement	else		327977	0					
ANR	328556	CompoundStatement		129:9:3557:3557	327977	0					
ANR	328557	ExpressionStatement	"dbgprintf ( ""Invalid option '%s' ignored.\\n"" , optBuf )"	1403:3:44207:44258	327977	0	True				
ANR	328558	CallExpression	"dbgprintf ( ""Invalid option '%s' ignored.\\n"" , optBuf )"		327977	0					
ANR	328559	Callee	dbgprintf		327977	0					
ANR	328560	Identifier	dbgprintf		327977	0					
ANR	328561	ArgumentList	"""Invalid option '%s' ignored.\\n"""		327977	1					
ANR	328562	Argument	"""Invalid option '%s' ignored.\\n"""		327977	0					
ANR	328563	PrimaryExpression	"""Invalid option '%s' ignored.\\n"""		327977	0					
ANR	328564	Argument	optBuf		327977	1					
ANR	328565	Identifier	optBuf		327977	0					
ANR	328566	ExpressionStatement	* ppRestOfConfLine = p	1407:1:44269:44290	327977	23	True				
ANR	328567	AssignmentExpression	* ppRestOfConfLine = p		327977	0		=			
ANR	328568	UnaryOperationExpression	* ppRestOfConfLine		327977	0					
ANR	328569	UnaryOperator	*		327977	0					
ANR	328570	Identifier	ppRestOfConfLine		327977	1					
ANR	328571	Identifier	p		327977	1					
ANR	328572	ExpressionStatement	apply_case_sensitivity ( pTpl )	1408:1:44293:44321	327977	24	True				
ANR	328573	CallExpression	apply_case_sensitivity ( pTpl )		327977	0					
ANR	328574	Callee	apply_case_sensitivity		327977	0					
ANR	328575	Identifier	apply_case_sensitivity		327977	0					
ANR	328576	ArgumentList	pTpl		327977	1					
ANR	328577	Argument	pTpl		327977	0					
ANR	328578	Identifier	pTpl		327977	0					
ANR	328579	ReturnStatement	return ( pTpl ) ;	1410:1:44325:44337	327977	25	True				
ANR	328580	Identifier	pTpl		327977	0					
ANR	328581	Identifier	tplAddLine		327977	1					
ANR	328582	ParameterList	"rsconf_t * conf , const char * pName , uchar * * ppRestOfConfLine"		327977	2					
ANR	328583	Parameter	rsconf_t * conf	1273:28:40583:40596	327977	0	True				
ANR	328584	ParameterType	rsconf_t *		327977	0					
ANR	328585	Identifier	conf		327977	1					
ANR	328586	Parameter	const char * pName	1273:44:40599:40615	327977	1	True				
ANR	328587	ParameterType	const char *		327977	0					
ANR	328588	Identifier	pName		327977	1					
ANR	328589	Parameter	uchar * * ppRestOfConfLine	1273:63:40618:40641	327977	2	True				
ANR	328590	ParameterType	uchar * *		327977	0					
ANR	328591	Identifier	ppRestOfConfLine		327977	1					
ANR	328592	CFGEntryNode	ENTRY		327977		True				
ANR	328593	CFGExitNode	EXIT		327977		True				
ANR	328594	Symbol	bDone		327977						
ANR	328595	Symbol	STDSQL_ESCAPE		327977						
ANR	328596	Symbol	tolower		327977						
ANR	328597	Symbol	pTpl -> pszName		327977						
ANR	328598	Symbol	optBuf		327977						
ANR	328599	Symbol	NO_ESCAPE		327977						
ANR	328600	Symbol	conf		327977						
ANR	328601	Symbol	tplConstruct		327977						
ANR	328602	Symbol	strlen		327977						
ANR	328603	Symbol	pName		327977						
ANR	328604	Symbol	pTpl		327977						
ANR	328605	Symbol	* * pTpl		327977						
ANR	328606	Symbol	pTpl -> optCaseSensitive		327977						
ANR	328607	Symbol	SQL_ESCAPE		327977						
ANR	328608	Symbol	strcmp		327977						
ANR	328609	Symbol	ppRestOfConfLine		327977						
ANR	328610	Symbol	tplAddTplMod		327977						
ANR	328611	Symbol	NULL		327977						
ANR	328612	Symbol	RS_RET_OK		327977						
ANR	328613	Symbol	pTpl -> optFormatEscape		327977						
ANR	328614	Symbol	isspace		327977						
ANR	328615	Symbol	i		327977						
ANR	328616	Symbol	errmsg		327977						
ANR	328617	Symbol	do_Parameter		327977						
ANR	328618	Symbol	p		327977						
ANR	328619	Symbol	* ppRestOfConfLine		327977						
ANR	328620	Symbol	* pTpl -> pszName		327977						
ANR	328621	Symbol	* i		327977						
ANR	328622	Symbol	* pTpl		327977						
ANR	328623	Symbol	MALLOC		327977						
ANR	328624	Symbol	* optBuf		327977						
ANR	328625	Symbol	& p		327977						
ANR	328626	Symbol	pTpl -> iLenName		327977						
ANR	328627	Symbol	* p		327977						
ANR	328628	Symbol	JSON_ESCAPE		327977						
ANR	328629	Symbol	localRet		327977						
ANR	328630	DeclStmt									
ANR	328631	Decl							struct templateEntry	struct templateEntry *	pTpe
ANR	328632	DeclStmt									
ANR	328633	Decl							es_str_t	es_str_t *	value
ANR	328634	DeclStmt									
ANR	328635	Decl							int	int	i
ANR	328636	DeclStmt									
ANR	328637	Decl							struct cnfparamvals	struct cnfparamvals *	pvals
ANR	328638	DeclStmt									
ANR	328639	Decl							uchar	uchar *	outname
ANR	328640	DeclStmt									
ANR	328641	Decl							struct templateEntry	struct templateEntry *	pTpe
ANR	328642	DeclStmt									
ANR	328643	Decl							uchar	uchar *	name
ANR	328644	DeclStmt									
ANR	328645	Decl							uchar	uchar *	outname
ANR	328646	DeclStmt									
ANR	328647	Decl							int	int	i
ANR	328648	DeclStmt									
ANR	328649	Decl							int	int	droplastlf
ANR	328650	DeclStmt									
ANR	328651	Decl							int	int	spifno1stsp
ANR	328652	DeclStmt									
ANR	328653	Decl							int	int	mandatory
ANR	328654	DeclStmt									
ANR	328655	Decl							int	int	frompos
ANR	328656	DeclStmt									
ANR	328657	Decl							int	int	topos
ANR	328658	DeclStmt									
ANR	328659	Decl							int	int	fieldnum
ANR	328660	DeclStmt									
ANR	328661	Decl							int	int	fielddelim
ANR	328662	DeclStmt									
ANR	328663	Decl							int	int	fixedwidth
ANR	328664	DeclStmt									
ANR	328665	Decl							int	int	re_matchToUse
ANR	328666	DeclStmt									
ANR	328667	Decl							int	int	re_submatchToUse
ANR	328668	DeclStmt									
ANR	328669	Decl							int	int	bComplexProcessing
ANR	328670	DeclStmt									
ANR	328671	Decl							int	int	bPosRelativeToEnd
ANR	328672	DeclStmt									
ANR	328673	Decl							int	int	bDateInUTC
ANR	328674	DeclStmt									
ANR	328675	Decl							int	int	bCompressSP
ANR	328676	DeclStmt									
ANR	328677	Decl							char	char *	re_expr
ANR	328678	DeclStmt									
ANR	328679	Decl							struct cnfparamvals	struct cnfparamvals *	pvals
ANR	328680	ClassDef	<unnamed>	1481:1:46146:46222							
ANR	328681	DeclStmt									
ANR	328682	Decl									formatType
ANR	328683	ClassDef	<unnamed>	1482:1:46225:46290							
ANR	328684	DeclStmt									
ANR	328685	Decl									controlchr
ANR	328686	ClassDef	<unnamed>	1483:1:46293:46346							
ANR	328687	DeclStmt									
ANR	328688	Decl									secpath
ANR	328689	DeclStmt									
ANR	328690	Decl							enum tplFormatCaseConvTypes	enum tplFormatCaseConvTypes	caseconv
ANR	328691	DeclStmt									
ANR	328692	Decl							enum tplFormatTypes	enum tplFormatTypes	datefmt
ANR	328693	DeclStmt									
ANR	328694	Decl							enum tplRegexType	enum tplRegexType	re_type
ANR	328695	DeclStmt									
ANR	328696	Decl							enum tlpRegexNoMatchType	enum tlpRegexNoMatchType	re_nomatchType
ANR	328697	DeclStmt									
ANR	328698	Decl							uchar	uchar *	typeStr
ANR	328699	DeclStmt									
ANR	328700	Decl							uchar	uchar *	typeStr
ANR	328701	DeclStmt									
ANR	328702	Decl							uchar	uchar *	typeStr
ANR	328703	DeclStmt									
ANR	328704	Decl							uchar	uchar *	typeStr
ANR	328705	DeclStmt									
ANR	328706	Decl							uchar	uchar *	typeStr
ANR	328707	DeclStmt									
ANR	328708	Decl							uchar	uchar *	typeStr
ANR	328709	DeclStmt									
ANR	328710	Decl							uchar	uchar *	typeStr
ANR	328711	DeclStmt									
ANR	328712	Decl							rsRetVal	rsRetVal	iRetLocal
ANR	328713	DeclStmt									
ANR	328714	Decl							int	int	iOptions
ANR	328715	DeclStmt									
ANR	328716	Decl							struct objlst	struct objlst *	lst
ANR	328717	Function	tplProcessCnf	1854:0:60438:67227							
ANR	328718	FunctionDef	tplProcessCnf (struct cnfobj * o)		328717	0					
ANR	328719	CompoundStatement		1856:0:60479:67227	328717	0					
ANR	328720	Statement	struct	1857:1:60482:60487	328717	0	True				
ANR	328721	Statement	template	1857:8:60489:60496	328717	1	True				
ANR	328722	ExpressionStatement	* pTpl = NULL	1857:17:60498:60510	328717	2	True				
ANR	328723	AssignmentExpression	* pTpl = NULL		328717	0		=			
ANR	328724	UnaryOperationExpression	* pTpl		328717	0					
ANR	328725	UnaryOperator	*		328717	0					
ANR	328726	Identifier	pTpl		328717	1					
ANR	328727	Identifier	NULL		328717	1					
ANR	328728	IdentifierDeclStatement	struct cnfparamvals * pvals = NULL ;	1858:1:60513:60546	328717	3	True				
ANR	328729	IdentifierDecl	* pvals = NULL		328717	0					
ANR	328730	IdentifierDeclType	struct cnfparamvals *		328717	0					
ANR	328731	Identifier	pvals		328717	1					
ANR	328732	AssignmentExpression	* pvals = NULL		328717	2		=			
ANR	328733	Identifier	NULL		328717	0					
ANR	328734	Identifier	NULL		328717	1					
ANR	328735	IdentifierDeclStatement	int lenName = 0 ;	1859:1:60549:60564	328717	4	True				
ANR	328736	IdentifierDecl	lenName = 0		328717	0					
ANR	328737	IdentifierDeclType	int		328717	0					
ANR	328738	Identifier	lenName		328717	1					
ANR	328739	AssignmentExpression	lenName = 0		328717	2		=			
ANR	328740	Identifier	lenName		328717	0					
ANR	328741	PrimaryExpression	0		328717	1					
ANR	328742	IdentifierDeclStatement	char * name = NULL ;	1860:1:60627:60644	328717	5	True				
ANR	328743	IdentifierDecl	* name = NULL		328717	0					
ANR	328744	IdentifierDeclType	char *		328717	0					
ANR	328745	Identifier	name		328717	1					
ANR	328746	AssignmentExpression	* name = NULL		328717	2		=			
ANR	328747	Identifier	NULL		328717	0					
ANR	328748	Identifier	NULL		328717	1					
ANR	328749	IdentifierDeclStatement	uchar * tplStr = NULL ;	1861:1:60647:60667	328717	6	True				
ANR	328750	IdentifierDecl	* tplStr = NULL		328717	0					
ANR	328751	IdentifierDeclType	uchar *		328717	0					
ANR	328752	Identifier	tplStr		328717	1					
ANR	328753	AssignmentExpression	* tplStr = NULL		328717	2		=			
ANR	328754	Identifier	NULL		328717	0					
ANR	328755	Identifier	NULL		328717	1					
ANR	328756	IdentifierDeclStatement	uchar * plugin = NULL ;	1862:1:60670:60690	328717	7	True				
ANR	328757	IdentifierDecl	* plugin = NULL		328717	0					
ANR	328758	IdentifierDeclType	uchar *		328717	0					
ANR	328759	Identifier	plugin		328717	1					
ANR	328760	AssignmentExpression	* plugin = NULL		328717	2		=			
ANR	328761	Identifier	NULL		328717	0					
ANR	328762	Identifier	NULL		328717	1					
ANR	328763	IdentifierDeclStatement	uchar * p ;	1863:1:60693:60701	328717	8	True				
ANR	328764	IdentifierDecl	* p		328717	0					
ANR	328765	IdentifierDeclType	uchar *		328717	0					
ANR	328766	Identifier	p		328717	1					
ANR	328767	IdentifierDeclStatement	msgPropDescr_t subtree ;	1864:1:60704:60726	328717	9	True				
ANR	328768	IdentifierDecl	subtree		328717	0					
ANR	328769	IdentifierDeclType	msgPropDescr_t		328717	0					
ANR	328770	Identifier	subtree		328717	1					
ANR	328771	IdentifierDeclStatement	sbool bHaveSubtree = 0 ;	1865:1:60729:60751	328717	10	True				
ANR	328772	IdentifierDecl	bHaveSubtree = 0		328717	0					
ANR	328773	IdentifierDeclType	sbool		328717	0					
ANR	328774	Identifier	bHaveSubtree		328717	1					
ANR	328775	AssignmentExpression	bHaveSubtree = 0		328717	2		=			
ANR	328776	Identifier	bHaveSubtree		328717	0					
ANR	328777	PrimaryExpression	0		328717	1					
ANR	328778	ClassDefStatement	"enum { T_STRING , T_PLUGIN , T_LIST , T_SUBTREE } tplType = T_STRING ;"	1866:1:60754:60821	328717	11	True				
ANR	328779	IdentifierDecl	tplType = T_STRING		328717	0					
ANR	328780	IdentifierDeclType			328717	0					
ANR	328781	Identifier	tplType		328717	1					
ANR	328782	AssignmentExpression	tplType = T_STRING		328717	2		=			
ANR	328783	Identifier	T_STRING		328717	0					
ANR	328784	Identifier	T_STRING		328717	1					
ANR	328785	IdentifierDeclStatement	int i ;	1868:1:60884:60889	328717	12	True				
ANR	328786	IdentifierDecl	i		328717	0					
ANR	328787	IdentifierDeclType	int		328717	0					
ANR	328788	Identifier	i		328717	1					
ANR	328789	IdentifierDeclStatement	"int o_sql = 0 , o_stdsql = 0 , o_json = 0 , o_casesensitive = 0 ;"	1869:1:60892:60944	328717	13	True				
ANR	328790	IdentifierDecl	o_sql = 0		328717	0					
ANR	328791	IdentifierDeclType	int		328717	0					
ANR	328792	Identifier	o_sql		328717	1					
ANR	328793	AssignmentExpression	o_sql = 0		328717	2		=			
ANR	328794	Identifier	o_sql		328717	0					
ANR	328795	PrimaryExpression	0		328717	1					
ANR	328796	IdentifierDecl	o_stdsql = 0		328717	1					
ANR	328797	IdentifierDeclType	int		328717	0					
ANR	328798	Identifier	o_stdsql		328717	1					
ANR	328799	AssignmentExpression	o_stdsql = 0		328717	2		=			
ANR	328800	Identifier	o_stdsql		328717	0					
ANR	328801	PrimaryExpression	0		328717	1					
ANR	328802	IdentifierDecl	o_json = 0		328717	2					
ANR	328803	IdentifierDeclType	int		328717	0					
ANR	328804	Identifier	o_json		328717	1					
ANR	328805	AssignmentExpression	o_json = 0		328717	2		=			
ANR	328806	Identifier	o_json		328717	0					
ANR	328807	PrimaryExpression	0		328717	1					
ANR	328808	IdentifierDecl	o_casesensitive = 0		328717	3					
ANR	328809	IdentifierDeclType	int		328717	0					
ANR	328810	Identifier	o_casesensitive		328717	1					
ANR	328811	AssignmentExpression	o_casesensitive = 0		328717	2		=			
ANR	328812	Identifier	o_casesensitive		328717	0					
ANR	328813	PrimaryExpression	0		328717	1					
ANR	328814	IdentifierDeclStatement	int numopts ;	1870:1:60961:60972	328717	14	True				
ANR	328815	IdentifierDecl	numopts		328717	0					
ANR	328816	IdentifierDeclType	int		328717	0					
ANR	328817	Identifier	numopts		328717	1					
ANR	328818	IdentifierDeclStatement	rsRetVal localRet ;	1871:1:60975:60992	328717	15	True				
ANR	328819	IdentifierDecl	localRet		328717	0					
ANR	328820	IdentifierDeclType	rsRetVal		328717	0					
ANR	328821	Identifier	localRet		328717	1					
ANR	328822	ExpressionStatement	DEFiRet	1872:1:60995:61002	328717	16	True				
ANR	328823	Identifier	DEFiRet		328717	0					
ANR	328824	ExpressionStatement	"pvals = nvlstGetParams ( o -> nvlst , & pblk , NULL )"	1874:1:61006:61051	328717	17	True				
ANR	328825	AssignmentExpression	"pvals = nvlstGetParams ( o -> nvlst , & pblk , NULL )"		328717	0		=			
ANR	328826	Identifier	pvals		328717	0					
ANR	328827	CallExpression	"nvlstGetParams ( o -> nvlst , & pblk , NULL )"		328717	1					
ANR	328828	Callee	nvlstGetParams		328717	0					
ANR	328829	Identifier	nvlstGetParams		328717	0					
ANR	328830	ArgumentList	o -> nvlst		328717	1					
ANR	328831	Argument	o -> nvlst		328717	0					
ANR	328832	PtrMemberAccess	o -> nvlst		328717	0					
ANR	328833	Identifier	o		328717	0					
ANR	328834	Identifier	nvlst		328717	1					
ANR	328835	Argument	& pblk		328717	1					
ANR	328836	UnaryOperationExpression	& pblk		328717	0					
ANR	328837	UnaryOperator	&		328717	0					
ANR	328838	Identifier	pblk		328717	1					
ANR	328839	Argument	NULL		328717	2					
ANR	328840	Identifier	NULL		328717	0					
ANR	328841	ExpressionStatement	"cnfparamsPrint ( & pblk , pvals )"	1875:1:61054:61082	328717	18	True				
ANR	328842	CallExpression	"cnfparamsPrint ( & pblk , pvals )"		328717	0					
ANR	328843	Callee	cnfparamsPrint		328717	0					
ANR	328844	Identifier	cnfparamsPrint		328717	0					
ANR	328845	ArgumentList	& pblk		328717	1					
ANR	328846	Argument	& pblk		328717	0					
ANR	328847	UnaryOperationExpression	& pblk		328717	0					
ANR	328848	UnaryOperator	&		328717	0					
ANR	328849	Identifier	pblk		328717	1					
ANR	328850	Argument	pvals		328717	1					
ANR	328851	Identifier	pvals		328717	0					
ANR	328852	ForStatement	for ( i = 0 ; i < pblk . nParams ; ++ i )		328717	19					
ANR	328853	ForInit	i = 0 ;	1877:5:61091:61097	328717	0	True				
ANR	328854	AssignmentExpression	i = 0		328717	0		=			
ANR	328855	Identifier	i		328717	0					
ANR	328856	PrimaryExpression	0		328717	1					
ANR	328857	Condition	i < pblk . nParams	1877:13:61099:61114	328717	1	True				
ANR	328858	RelationalExpression	i < pblk . nParams		328717	0		<			
ANR	328859	Identifier	i		328717	0					
ANR	328860	MemberAccess	pblk . nParams		328717	1					
ANR	328861	Identifier	pblk		328717	0					
ANR	328862	Identifier	nParams		328717	1					
ANR	328863	UnaryExpression	++ i	1877:32:61118:61120	328717	2	True				
ANR	328864	IncDec	++		328717	0					
ANR	328865	Identifier	i		328717	1					
ANR	328866	CompoundStatement		22:37:643:643	328717	3					
ANR	328867	IfStatement	if ( ! pvals [ i ] . bUsed )		328717	0					
ANR	328868	Condition	! pvals [ i ] . bUsed	1878:5:61130:61144	328717	0	True				
ANR	328869	UnaryOperationExpression	! pvals [ i ] . bUsed		328717	0					
ANR	328870	UnaryOperator	!		328717	0					
ANR	328871	MemberAccess	pvals [ i ] . bUsed		328717	1					
ANR	328872	ArrayIndexing	pvals [ i ]		328717	0					
ANR	328873	Identifier	pvals		328717	0					
ANR	328874	Identifier	i		328717	1					
ANR	328875	Identifier	bUsed		328717	1					
ANR	328876	ContinueStatement	continue ;	1879:3:61150:61158	328717	1	True				
ANR	328877	IfStatement	"if ( ! strcmp ( pblk . descr [ i ] . name , ""name"" ) )"		328717	1					
ANR	328878	Condition	"! strcmp ( pblk . descr [ i ] . name , ""name"" )"	1880:5:61165:61199	328717	0	True				
ANR	328879	UnaryOperationExpression	"! strcmp ( pblk . descr [ i ] . name , ""name"" )"		328717	0					
ANR	328880	UnaryOperator	!		328717	0					
ANR	328881	CallExpression	"strcmp ( pblk . descr [ i ] . name , ""name"" )"		328717	1					
ANR	328882	Callee	strcmp		328717	0					
ANR	328883	Identifier	strcmp		328717	0					
ANR	328884	ArgumentList	pblk . descr [ i ] . name		328717	1					
ANR	328885	Argument	pblk . descr [ i ] . name		328717	0					
ANR	328886	MemberAccess	pblk . descr [ i ] . name		328717	0					
ANR	328887	ArrayIndexing	pblk . descr [ i ]		328717	0					
ANR	328888	MemberAccess	pblk . descr		328717	0					
ANR	328889	Identifier	pblk		328717	0					
ANR	328890	Identifier	descr		328717	1					
ANR	328891	Identifier	i		328717	1					
ANR	328892	Identifier	name		328717	1					
ANR	328893	Argument	"""name"""		328717	1					
ANR	328894	PrimaryExpression	"""name"""		328717	0					
ANR	328895	CompoundStatement		25:42:722:722	328717	1					
ANR	328896	ExpressionStatement	lenName = es_strlen ( pvals [ i ] . val . d . estr )	1881:3:61207:61247	328717	0	True				
ANR	328897	AssignmentExpression	lenName = es_strlen ( pvals [ i ] . val . d . estr )		328717	0		=			
ANR	328898	Identifier	lenName		328717	0					
ANR	328899	CallExpression	es_strlen ( pvals [ i ] . val . d . estr )		328717	1					
ANR	328900	Callee	es_strlen		328717	0					
ANR	328901	Identifier	es_strlen		328717	0					
ANR	328902	ArgumentList	pvals [ i ] . val . d . estr		328717	1					
ANR	328903	Argument	pvals [ i ] . val . d . estr		328717	0					
ANR	328904	MemberAccess	pvals [ i ] . val . d . estr		328717	0					
ANR	328905	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	328906	MemberAccess	pvals [ i ] . val		328717	0					
ANR	328907	ArrayIndexing	pvals [ i ]		328717	0					
ANR	328908	Identifier	pvals		328717	0					
ANR	328909	Identifier	i		328717	1					
ANR	328910	Identifier	val		328717	1					
ANR	328911	Identifier	d		328717	1					
ANR	328912	Identifier	estr		328717	1					
ANR	328913	ExpressionStatement	"name = es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"	1882:3:61252:61297	328717	1	True				
ANR	328914	AssignmentExpression	"name = es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	0		=			
ANR	328915	Identifier	name		328717	0					
ANR	328916	CallExpression	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	1					
ANR	328917	Callee	es_str2cstr		328717	0					
ANR	328918	Identifier	es_str2cstr		328717	0					
ANR	328919	ArgumentList	pvals [ i ] . val . d . estr		328717	1					
ANR	328920	Argument	pvals [ i ] . val . d . estr		328717	0					
ANR	328921	MemberAccess	pvals [ i ] . val . d . estr		328717	0					
ANR	328922	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	328923	MemberAccess	pvals [ i ] . val		328717	0					
ANR	328924	ArrayIndexing	pvals [ i ]		328717	0					
ANR	328925	Identifier	pvals		328717	0					
ANR	328926	Identifier	i		328717	1					
ANR	328927	Identifier	val		328717	1					
ANR	328928	Identifier	d		328717	1					
ANR	328929	Identifier	estr		328717	1					
ANR	328930	Argument	NULL		328717	1					
ANR	328931	Identifier	NULL		328717	0					
ANR	328932	ElseStatement	else		328717	0					
ANR	328933	IfStatement	"if ( ! strcmp ( pblk . descr [ i ] . name , ""type"" ) )"		328717	0					
ANR	328934	Condition	"! strcmp ( pblk . descr [ i ] . name , ""type"" )"	1883:12:61311:61345	328717	0	True				
ANR	328935	UnaryOperationExpression	"! strcmp ( pblk . descr [ i ] . name , ""type"" )"		328717	0					
ANR	328936	UnaryOperator	!		328717	0					
ANR	328937	CallExpression	"strcmp ( pblk . descr [ i ] . name , ""type"" )"		328717	1					
ANR	328938	Callee	strcmp		328717	0					
ANR	328939	Identifier	strcmp		328717	0					
ANR	328940	ArgumentList	pblk . descr [ i ] . name		328717	1					
ANR	328941	Argument	pblk . descr [ i ] . name		328717	0					
ANR	328942	MemberAccess	pblk . descr [ i ] . name		328717	0					
ANR	328943	ArrayIndexing	pblk . descr [ i ]		328717	0					
ANR	328944	MemberAccess	pblk . descr		328717	0					
ANR	328945	Identifier	pblk		328717	0					
ANR	328946	Identifier	descr		328717	1					
ANR	328947	Identifier	i		328717	1					
ANR	328948	Identifier	name		328717	1					
ANR	328949	Argument	"""type"""		328717	1					
ANR	328950	PrimaryExpression	"""type"""		328717	0					
ANR	328951	CompoundStatement		28:49:868:868	328717	1					
ANR	328952	IfStatement	"if ( ! es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""string"" , sizeof ( ""string"" ) - 1 ) )"		328717	0					
ANR	328953	Condition	"! es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""string"" , sizeof ( ""string"" ) - 1 )"	1884:6:61356:61427	328717	0	True				
ANR	328954	UnaryOperationExpression	"! es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""string"" , sizeof ( ""string"" ) - 1 )"		328717	0					
ANR	328955	UnaryOperator	!		328717	0					
ANR	328956	CallExpression	"es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""string"" , sizeof ( ""string"" ) - 1 )"		328717	1					
ANR	328957	Callee	es_strbufcmp		328717	0					
ANR	328958	Identifier	es_strbufcmp		328717	0					
ANR	328959	ArgumentList	pvals [ i ] . val . d . estr		328717	1					
ANR	328960	Argument	pvals [ i ] . val . d . estr		328717	0					
ANR	328961	MemberAccess	pvals [ i ] . val . d . estr		328717	0					
ANR	328962	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	328963	MemberAccess	pvals [ i ] . val		328717	0					
ANR	328964	ArrayIndexing	pvals [ i ]		328717	0					
ANR	328965	Identifier	pvals		328717	0					
ANR	328966	Identifier	i		328717	1					
ANR	328967	Identifier	val		328717	1					
ANR	328968	Identifier	d		328717	1					
ANR	328969	Identifier	estr		328717	1					
ANR	328970	Argument	"( uchar * ) ""string"""		328717	1					
ANR	328971	CastExpression	"( uchar * ) ""string"""		328717	0					
ANR	328972	CastTarget	uchar *		328717	0					
ANR	328973	PrimaryExpression	"""string"""		328717	1					
ANR	328974	Argument	"sizeof ( ""string"" ) - 1"		328717	2					
ANR	328975	AdditiveExpression	"sizeof ( ""string"" ) - 1"		328717	0		-			
ANR	328976	SizeofExpression	"sizeof ( ""string"" )"		328717	0					
ANR	328977	Sizeof	sizeof		328717	0					
ANR	328978	PrimaryExpression	"""string"""		328717	1					
ANR	328979	PrimaryExpression	1		328717	1					
ANR	328980	CompoundStatement		29:80:950:950	328717	1					
ANR	328981	ExpressionStatement	tplType = T_STRING	1885:4:61436:61454	328717	0	True				
ANR	328982	AssignmentExpression	tplType = T_STRING		328717	0		=			
ANR	328983	Identifier	tplType		328717	0					
ANR	328984	Identifier	T_STRING		328717	1					
ANR	328985	ElseStatement	else		328717	0					
ANR	328986	IfStatement	"if ( ! es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""plugin"" , sizeof ( ""plugin"" ) - 1 ) )"		328717	0					
ANR	328987	Condition	"! es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""plugin"" , sizeof ( ""plugin"" ) - 1 )"	1886:13:61469:61540	328717	0	True				
ANR	328988	UnaryOperationExpression	"! es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""plugin"" , sizeof ( ""plugin"" ) - 1 )"		328717	0					
ANR	328989	UnaryOperator	!		328717	0					
ANR	328990	CallExpression	"es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""plugin"" , sizeof ( ""plugin"" ) - 1 )"		328717	1					
ANR	328991	Callee	es_strbufcmp		328717	0					
ANR	328992	Identifier	es_strbufcmp		328717	0					
ANR	328993	ArgumentList	pvals [ i ] . val . d . estr		328717	1					
ANR	328994	Argument	pvals [ i ] . val . d . estr		328717	0					
ANR	328995	MemberAccess	pvals [ i ] . val . d . estr		328717	0					
ANR	328996	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	328997	MemberAccess	pvals [ i ] . val		328717	0					
ANR	328998	ArrayIndexing	pvals [ i ]		328717	0					
ANR	328999	Identifier	pvals		328717	0					
ANR	329000	Identifier	i		328717	1					
ANR	329001	Identifier	val		328717	1					
ANR	329002	Identifier	d		328717	1					
ANR	329003	Identifier	estr		328717	1					
ANR	329004	Argument	"( uchar * ) ""plugin"""		328717	1					
ANR	329005	CastExpression	"( uchar * ) ""plugin"""		328717	0					
ANR	329006	CastTarget	uchar *		328717	0					
ANR	329007	PrimaryExpression	"""plugin"""		328717	1					
ANR	329008	Argument	"sizeof ( ""plugin"" ) - 1"		328717	2					
ANR	329009	AdditiveExpression	"sizeof ( ""plugin"" ) - 1"		328717	0		-			
ANR	329010	SizeofExpression	"sizeof ( ""plugin"" )"		328717	0					
ANR	329011	Sizeof	sizeof		328717	0					
ANR	329012	PrimaryExpression	"""plugin"""		328717	1					
ANR	329013	PrimaryExpression	1		328717	1					
ANR	329014	CompoundStatement		31:87:1063:1063	328717	1					
ANR	329015	ExpressionStatement	tplType = T_PLUGIN	1887:4:61549:61567	328717	0	True				
ANR	329016	AssignmentExpression	tplType = T_PLUGIN		328717	0		=			
ANR	329017	Identifier	tplType		328717	0					
ANR	329018	Identifier	T_PLUGIN		328717	1					
ANR	329019	ElseStatement	else		328717	0					
ANR	329020	IfStatement	"if ( ! es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""list"" , sizeof ( ""list"" ) - 1 ) )"		328717	0					
ANR	329021	Condition	"! es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""list"" , sizeof ( ""list"" ) - 1 )"	1888:13:61582:61649	328717	0	True				
ANR	329022	UnaryOperationExpression	"! es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""list"" , sizeof ( ""list"" ) - 1 )"		328717	0					
ANR	329023	UnaryOperator	!		328717	0					
ANR	329024	CallExpression	"es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""list"" , sizeof ( ""list"" ) - 1 )"		328717	1					
ANR	329025	Callee	es_strbufcmp		328717	0					
ANR	329026	Identifier	es_strbufcmp		328717	0					
ANR	329027	ArgumentList	pvals [ i ] . val . d . estr		328717	1					
ANR	329028	Argument	pvals [ i ] . val . d . estr		328717	0					
ANR	329029	MemberAccess	pvals [ i ] . val . d . estr		328717	0					
ANR	329030	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	329031	MemberAccess	pvals [ i ] . val		328717	0					
ANR	329032	ArrayIndexing	pvals [ i ]		328717	0					
ANR	329033	Identifier	pvals		328717	0					
ANR	329034	Identifier	i		328717	1					
ANR	329035	Identifier	val		328717	1					
ANR	329036	Identifier	d		328717	1					
ANR	329037	Identifier	estr		328717	1					
ANR	329038	Argument	"( uchar * ) ""list"""		328717	1					
ANR	329039	CastExpression	"( uchar * ) ""list"""		328717	0					
ANR	329040	CastTarget	uchar *		328717	0					
ANR	329041	PrimaryExpression	"""list"""		328717	1					
ANR	329042	Argument	"sizeof ( ""list"" ) - 1"		328717	2					
ANR	329043	AdditiveExpression	"sizeof ( ""list"" ) - 1"		328717	0		-			
ANR	329044	SizeofExpression	"sizeof ( ""list"" )"		328717	0					
ANR	329045	Sizeof	sizeof		328717	0					
ANR	329046	PrimaryExpression	"""list"""		328717	1					
ANR	329047	PrimaryExpression	1		328717	1					
ANR	329048	CompoundStatement		33:83:1172:1172	328717	1					
ANR	329049	ExpressionStatement	tplType = T_LIST	1889:4:61658:61674	328717	0	True				
ANR	329050	AssignmentExpression	tplType = T_LIST		328717	0		=			
ANR	329051	Identifier	tplType		328717	0					
ANR	329052	Identifier	T_LIST		328717	1					
ANR	329053	ElseStatement	else		328717	0					
ANR	329054	IfStatement	"if ( ! es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""subtree"" , sizeof ( ""subtree"" ) - 1 ) )"		328717	0					
ANR	329055	Condition	"! es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""subtree"" , sizeof ( ""subtree"" ) - 1 )"	1890:13:61689:61762	328717	0	True				
ANR	329056	UnaryOperationExpression	"! es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""subtree"" , sizeof ( ""subtree"" ) - 1 )"		328717	0					
ANR	329057	UnaryOperator	!		328717	0					
ANR	329058	CallExpression	"es_strbufcmp ( pvals [ i ] . val . d . estr , ( uchar * ) ""subtree"" , sizeof ( ""subtree"" ) - 1 )"		328717	1					
ANR	329059	Callee	es_strbufcmp		328717	0					
ANR	329060	Identifier	es_strbufcmp		328717	0					
ANR	329061	ArgumentList	pvals [ i ] . val . d . estr		328717	1					
ANR	329062	Argument	pvals [ i ] . val . d . estr		328717	0					
ANR	329063	MemberAccess	pvals [ i ] . val . d . estr		328717	0					
ANR	329064	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	329065	MemberAccess	pvals [ i ] . val		328717	0					
ANR	329066	ArrayIndexing	pvals [ i ]		328717	0					
ANR	329067	Identifier	pvals		328717	0					
ANR	329068	Identifier	i		328717	1					
ANR	329069	Identifier	val		328717	1					
ANR	329070	Identifier	d		328717	1					
ANR	329071	Identifier	estr		328717	1					
ANR	329072	Argument	"( uchar * ) ""subtree"""		328717	1					
ANR	329073	CastExpression	"( uchar * ) ""subtree"""		328717	0					
ANR	329074	CastTarget	uchar *		328717	0					
ANR	329075	PrimaryExpression	"""subtree"""		328717	1					
ANR	329076	Argument	"sizeof ( ""subtree"" ) - 1"		328717	2					
ANR	329077	AdditiveExpression	"sizeof ( ""subtree"" ) - 1"		328717	0		-			
ANR	329078	SizeofExpression	"sizeof ( ""subtree"" )"		328717	0					
ANR	329079	Sizeof	sizeof		328717	0					
ANR	329080	PrimaryExpression	"""subtree"""		328717	1					
ANR	329081	PrimaryExpression	1		328717	1					
ANR	329082	CompoundStatement		35:89:1285:1285	328717	1					
ANR	329083	ExpressionStatement	tplType = T_SUBTREE	1891:4:61771:61790	328717	0	True				
ANR	329084	AssignmentExpression	tplType = T_SUBTREE		328717	0		=			
ANR	329085	Identifier	tplType		328717	0					
ANR	329086	Identifier	T_SUBTREE		328717	1					
ANR	329087	ElseStatement	else		328717	0					
ANR	329088	CompoundStatement		38:4:1328:1392	328717	0					
ANR	329089	IdentifierDeclStatement	"uchar * typeStr = ( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL ) ;"	1893:4:61808:61872	328717	0	True				
ANR	329090	IdentifierDecl	"* typeStr = ( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	0					
ANR	329091	IdentifierDeclType	uchar *		328717	0					
ANR	329092	Identifier	typeStr		328717	1					
ANR	329093	AssignmentExpression	"* typeStr = ( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	2		=			
ANR	329094	Identifier	typeStr		328717	0					
ANR	329095	CastExpression	"( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	1					
ANR	329096	CastTarget	uchar *		328717	0					
ANR	329097	CallExpression	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	1					
ANR	329098	Callee	es_str2cstr		328717	0					
ANR	329099	Identifier	es_str2cstr		328717	0					
ANR	329100	ArgumentList	pvals [ i ] . val . d . estr		328717	1					
ANR	329101	Argument	pvals [ i ] . val . d . estr		328717	0					
ANR	329102	MemberAccess	pvals [ i ] . val . d . estr		328717	0					
ANR	329103	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	329104	MemberAccess	pvals [ i ] . val		328717	0					
ANR	329105	ArrayIndexing	pvals [ i ]		328717	0					
ANR	329106	Identifier	pvals		328717	0					
ANR	329107	Identifier	i		328717	1					
ANR	329108	Identifier	val		328717	1					
ANR	329109	Identifier	d		328717	1					
ANR	329110	Identifier	estr		328717	1					
ANR	329111	Argument	NULL		328717	1					
ANR	329112	Identifier	NULL		328717	0					
ANR	329113	ExpressionStatement	"errmsg . LogError ( 0 , RS_RET_ERR , ""invalid template type '%s'"" , typeStr )"	1894:4:61878:61952	328717	1	True				
ANR	329114	CallExpression	"errmsg . LogError ( 0 , RS_RET_ERR , ""invalid template type '%s'"" , typeStr )"		328717	0					
ANR	329115	Callee	errmsg . LogError		328717	0					
ANR	329116	MemberAccess	errmsg . LogError		328717	0					
ANR	329117	Identifier	errmsg		328717	0					
ANR	329118	Identifier	LogError		328717	1					
ANR	329119	ArgumentList	0		328717	1					
ANR	329120	Argument	0		328717	0					
ANR	329121	PrimaryExpression	0		328717	0					
ANR	329122	Argument	RS_RET_ERR		328717	1					
ANR	329123	Identifier	RS_RET_ERR		328717	0					
ANR	329124	Argument	"""invalid template type '%s'"""		328717	2					
ANR	329125	PrimaryExpression	"""invalid template type '%s'"""		328717	0					
ANR	329126	Argument	typeStr		328717	3					
ANR	329127	Identifier	typeStr		328717	0					
ANR	329128	ExpressionStatement	free ( typeStr )	1896:4:61958:61971	328717	2	True				
ANR	329129	CallExpression	free ( typeStr )		328717	0					
ANR	329130	Callee	free		328717	0					
ANR	329131	Identifier	free		328717	0					
ANR	329132	ArgumentList	typeStr		328717	1					
ANR	329133	Argument	typeStr		328717	0					
ANR	329134	Identifier	typeStr		328717	0					
ANR	329135	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	1897:4:61977:62003	328717	3	True				
ANR	329136	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		328717	0					
ANR	329137	Callee	ABORT_FINALIZE		328717	0					
ANR	329138	Identifier	ABORT_FINALIZE		328717	0					
ANR	329139	ArgumentList	RS_RET_ERR		328717	1					
ANR	329140	Argument	RS_RET_ERR		328717	0					
ANR	329141	Identifier	RS_RET_ERR		328717	0					
ANR	329142	ElseStatement	else		328717	0					
ANR	329143	IfStatement	"if ( ! strcmp ( pblk . descr [ i ] . name , ""string"" ) )"		328717	0					
ANR	329144	Condition	"! strcmp ( pblk . descr [ i ] . name , ""string"" )"	1899:12:62022:62058	328717	0	True				
ANR	329145	UnaryOperationExpression	"! strcmp ( pblk . descr [ i ] . name , ""string"" )"		328717	0					
ANR	329146	UnaryOperator	!		328717	0					
ANR	329147	CallExpression	"strcmp ( pblk . descr [ i ] . name , ""string"" )"		328717	1					
ANR	329148	Callee	strcmp		328717	0					
ANR	329149	Identifier	strcmp		328717	0					
ANR	329150	ArgumentList	pblk . descr [ i ] . name		328717	1					
ANR	329151	Argument	pblk . descr [ i ] . name		328717	0					
ANR	329152	MemberAccess	pblk . descr [ i ] . name		328717	0					
ANR	329153	ArrayIndexing	pblk . descr [ i ]		328717	0					
ANR	329154	MemberAccess	pblk . descr		328717	0					
ANR	329155	Identifier	pblk		328717	0					
ANR	329156	Identifier	descr		328717	1					
ANR	329157	Identifier	i		328717	1					
ANR	329158	Identifier	name		328717	1					
ANR	329159	Argument	"""string"""		328717	1					
ANR	329160	PrimaryExpression	"""string"""		328717	0					
ANR	329161	CompoundStatement		44:51:1581:1581	328717	1					
ANR	329162	ExpressionStatement	"tplStr = ( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"	1900:3:62066:62122	328717	0	True				
ANR	329163	AssignmentExpression	"tplStr = ( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	0		=			
ANR	329164	Identifier	tplStr		328717	0					
ANR	329165	CastExpression	"( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	1					
ANR	329166	CastTarget	uchar *		328717	0					
ANR	329167	CallExpression	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	1					
ANR	329168	Callee	es_str2cstr		328717	0					
ANR	329169	Identifier	es_str2cstr		328717	0					
ANR	329170	ArgumentList	pvals [ i ] . val . d . estr		328717	1					
ANR	329171	Argument	pvals [ i ] . val . d . estr		328717	0					
ANR	329172	MemberAccess	pvals [ i ] . val . d . estr		328717	0					
ANR	329173	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	329174	MemberAccess	pvals [ i ] . val		328717	0					
ANR	329175	ArrayIndexing	pvals [ i ]		328717	0					
ANR	329176	Identifier	pvals		328717	0					
ANR	329177	Identifier	i		328717	1					
ANR	329178	Identifier	val		328717	1					
ANR	329179	Identifier	d		328717	1					
ANR	329180	Identifier	estr		328717	1					
ANR	329181	Argument	NULL		328717	1					
ANR	329182	Identifier	NULL		328717	0					
ANR	329183	ElseStatement	else		328717	0					
ANR	329184	IfStatement	"if ( ! strcmp ( pblk . descr [ i ] . name , ""subtree"" ) )"		328717	0					
ANR	329185	Condition	"! strcmp ( pblk . descr [ i ] . name , ""subtree"" )"	1901:12:62136:62173	328717	0	True				
ANR	329186	UnaryOperationExpression	"! strcmp ( pblk . descr [ i ] . name , ""subtree"" )"		328717	0					
ANR	329187	UnaryOperator	!		328717	0					
ANR	329188	CallExpression	"strcmp ( pblk . descr [ i ] . name , ""subtree"" )"		328717	1					
ANR	329189	Callee	strcmp		328717	0					
ANR	329190	Identifier	strcmp		328717	0					
ANR	329191	ArgumentList	pblk . descr [ i ] . name		328717	1					
ANR	329192	Argument	pblk . descr [ i ] . name		328717	0					
ANR	329193	MemberAccess	pblk . descr [ i ] . name		328717	0					
ANR	329194	ArrayIndexing	pblk . descr [ i ]		328717	0					
ANR	329195	MemberAccess	pblk . descr		328717	0					
ANR	329196	Identifier	pblk		328717	0					
ANR	329197	Identifier	descr		328717	1					
ANR	329198	Identifier	i		328717	1					
ANR	329199	Identifier	name		328717	1					
ANR	329200	Argument	"""subtree"""		328717	1					
ANR	329201	PrimaryExpression	"""subtree"""		328717	0					
ANR	329202	CompoundStatement		47:3:1701:1751	328717	1					
ANR	329203	IdentifierDeclStatement	uchar * st_str = es_getBufAddr ( pvals [ i ] . val . d . estr ) ;	1902:3:62181:62231	328717	0	True				
ANR	329204	IdentifierDecl	* st_str = es_getBufAddr ( pvals [ i ] . val . d . estr )		328717	0					
ANR	329205	IdentifierDeclType	uchar *		328717	0					
ANR	329206	Identifier	st_str		328717	1					
ANR	329207	AssignmentExpression	* st_str = es_getBufAddr ( pvals [ i ] . val . d . estr )		328717	2		=			
ANR	329208	Identifier	st_str		328717	0					
ANR	329209	CallExpression	es_getBufAddr ( pvals [ i ] . val . d . estr )		328717	1					
ANR	329210	Callee	es_getBufAddr		328717	0					
ANR	329211	Identifier	es_getBufAddr		328717	0					
ANR	329212	ArgumentList	pvals [ i ] . val . d . estr		328717	1					
ANR	329213	Argument	pvals [ i ] . val . d . estr		328717	0					
ANR	329214	MemberAccess	pvals [ i ] . val . d . estr		328717	0					
ANR	329215	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	329216	MemberAccess	pvals [ i ] . val		328717	0					
ANR	329217	ArrayIndexing	pvals [ i ]		328717	0					
ANR	329218	Identifier	pvals		328717	0					
ANR	329219	Identifier	i		328717	1					
ANR	329220	Identifier	val		328717	1					
ANR	329221	Identifier	d		328717	1					
ANR	329222	Identifier	estr		328717	1					
ANR	329223	IfStatement	if ( st_str [ 0 ] != '$' || st_str [ 1 ] != '!' )		328717	1					
ANR	329224	Condition	st_str [ 0 ] != '$' || st_str [ 1 ] != '!'	1903:6:62239:62274	328717	0	True				
ANR	329225	OrExpression	st_str [ 0 ] != '$' || st_str [ 1 ] != '!'		328717	0		||			
ANR	329226	EqualityExpression	st_str [ 0 ] != '$'		328717	0		!=			
ANR	329227	ArrayIndexing	st_str [ 0 ]		328717	0					
ANR	329228	Identifier	st_str		328717	0					
ANR	329229	PrimaryExpression	0		328717	1					
ANR	329230	PrimaryExpression	'$'		328717	1					
ANR	329231	EqualityExpression	st_str [ 1 ] != '!'		328717	1		!=			
ANR	329232	ArrayIndexing	st_str [ 1 ]		328717	0					
ANR	329233	Identifier	st_str		328717	0					
ANR	329234	PrimaryExpression	1		328717	1					
ANR	329235	PrimaryExpression	'!'		328717	1					
ANR	329236	CompoundStatement		49:4:1803:1854	328717	1					
ANR	329237	IdentifierDeclStatement	"char * cstr = es_str2cstr ( pvals [ i ] . val . d . estr , NULL ) ;"	1904:4:62283:62334	328717	0	True				
ANR	329238	IdentifierDecl	"* cstr = es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	0					
ANR	329239	IdentifierDeclType	char *		328717	0					
ANR	329240	Identifier	cstr		328717	1					
ANR	329241	AssignmentExpression	"* cstr = es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	2		=			
ANR	329242	Identifier	cstr		328717	0					
ANR	329243	CallExpression	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	1					
ANR	329244	Callee	es_str2cstr		328717	0					
ANR	329245	Identifier	es_str2cstr		328717	0					
ANR	329246	ArgumentList	pvals [ i ] . val . d . estr		328717	1					
ANR	329247	Argument	pvals [ i ] . val . d . estr		328717	0					
ANR	329248	MemberAccess	pvals [ i ] . val . d . estr		328717	0					
ANR	329249	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	329250	MemberAccess	pvals [ i ] . val		328717	0					
ANR	329251	ArrayIndexing	pvals [ i ]		328717	0					
ANR	329252	Identifier	pvals		328717	0					
ANR	329253	Identifier	i		328717	1					
ANR	329254	Identifier	val		328717	1					
ANR	329255	Identifier	d		328717	1					
ANR	329256	Identifier	estr		328717	1					
ANR	329257	Argument	NULL		328717	1					
ANR	329258	Identifier	NULL		328717	0					
ANR	329259	Statement	errmsg	1905:4:62340:62345	328717	1	True				
ANR	329260	Statement	.	1905:10:62346:62346	328717	2	True				
ANR	329261	Statement	LogError	1905:11:62347:62354	328717	3	True				
ANR	329262	Statement	(	1905:19:62355:62355	328717	4	True				
ANR	329263	Statement	0	1905:20:62356:62356	328717	5	True				
ANR	329264	Statement	","	1905:21:62357:62357	328717	6	True				
ANR	329265	Statement	RS_RET_ERR	1905:23:62359:62368	328717	7	True				
ANR	329266	Statement	","	1905:33:62369:62369	328717	8	True				
ANR	329267	Statement	"""invalid subtree """	1905:35:62371:62388	328717	9	True				
ANR	329268	Statement	"""parameter, variable must start with '$!' but """	1906:5:62395:62441	328717	10	True				
ANR	329269	Statement	"""var name is '%s'"""	1907:5:62448:62465	328717	11	True				
ANR	329270	Statement	","	1907:23:62466:62466	328717	12	True				
ANR	329271	Statement	cstr	1907:25:62468:62471	328717	13	True				
ANR	329272	Statement	)	1907:29:62472:62472	328717	14	True				
ANR	329273	ExpressionStatement		1907:30:62473:62473	328717	15	True				
ANR	329274	ExpressionStatement	free ( cstr )	1908:4:62479:62489	328717	16	True				
ANR	329275	CallExpression	free ( cstr )		328717	0					
ANR	329276	Callee	free		328717	0					
ANR	329277	Identifier	free		328717	0					
ANR	329278	ArgumentList	cstr		328717	1					
ANR	329279	Argument	cstr		328717	0					
ANR	329280	Identifier	cstr		328717	0					
ANR	329281	ExpressionStatement	free ( name )	1909:4:62495:62505	328717	17	True				
ANR	329282	CallExpression	free ( name )		328717	0					
ANR	329283	Callee	free		328717	0					
ANR	329284	Identifier	free		328717	0					
ANR	329285	ArgumentList	name		328717	1					
ANR	329286	Argument	name		328717	0					
ANR	329287	Identifier	name		328717	0					
ANR	329288	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	1910:4:62534:62560	328717	18	True				
ANR	329289	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		328717	0					
ANR	329290	Callee	ABORT_FINALIZE		328717	0					
ANR	329291	Identifier	ABORT_FINALIZE		328717	0					
ANR	329292	ArgumentList	RS_RET_ERR		328717	1					
ANR	329293	Argument	RS_RET_ERR		328717	0					
ANR	329294	Identifier	RS_RET_ERR		328717	0					
ANR	329295	ElseStatement	else		328717	0					
ANR	329296	CompoundStatement		57:4:2098:2109	328717	0					
ANR	329297	IdentifierDeclStatement	uchar * cstr ;	1912:4:62578:62589	328717	0	True				
ANR	329298	IdentifierDecl	* cstr		328717	0					
ANR	329299	IdentifierDeclType	uchar *		328717	0					
ANR	329300	Identifier	cstr		328717	1					
ANR	329301	ExpressionStatement	"cstr = ( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"	1913:4:62595:62649	328717	1	True				
ANR	329302	AssignmentExpression	"cstr = ( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	0		=			
ANR	329303	Identifier	cstr		328717	0					
ANR	329304	CastExpression	"( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	1					
ANR	329305	CastTarget	uchar *		328717	0					
ANR	329306	CallExpression	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	1					
ANR	329307	Callee	es_str2cstr		328717	0					
ANR	329308	Identifier	es_str2cstr		328717	0					
ANR	329309	ArgumentList	pvals [ i ] . val . d . estr		328717	1					
ANR	329310	Argument	pvals [ i ] . val . d . estr		328717	0					
ANR	329311	MemberAccess	pvals [ i ] . val . d . estr		328717	0					
ANR	329312	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	329313	MemberAccess	pvals [ i ] . val		328717	0					
ANR	329314	ArrayIndexing	pvals [ i ]		328717	0					
ANR	329315	Identifier	pvals		328717	0					
ANR	329316	Identifier	i		328717	1					
ANR	329317	Identifier	val		328717	1					
ANR	329318	Identifier	d		328717	1					
ANR	329319	Identifier	estr		328717	1					
ANR	329320	Argument	NULL		328717	1					
ANR	329321	Identifier	NULL		328717	0					
ANR	329322	ExpressionStatement	"CHKiRet ( msgPropDescrFill ( & subtree , cstr , ustrlen ( cstr ) ) )"	1914:4:62655:62711	328717	2	True				
ANR	329323	CallExpression	"CHKiRet ( msgPropDescrFill ( & subtree , cstr , ustrlen ( cstr ) ) )"		328717	0					
ANR	329324	Callee	CHKiRet		328717	0					
ANR	329325	Identifier	CHKiRet		328717	0					
ANR	329326	ArgumentList	"msgPropDescrFill ( & subtree , cstr , ustrlen ( cstr ) )"		328717	1					
ANR	329327	Argument	"msgPropDescrFill ( & subtree , cstr , ustrlen ( cstr ) )"		328717	0					
ANR	329328	CallExpression	"msgPropDescrFill ( & subtree , cstr , ustrlen ( cstr ) )"		328717	0					
ANR	329329	Callee	msgPropDescrFill		328717	0					
ANR	329330	Identifier	msgPropDescrFill		328717	0					
ANR	329331	ArgumentList	& subtree		328717	1					
ANR	329332	Argument	& subtree		328717	0					
ANR	329333	UnaryOperationExpression	& subtree		328717	0					
ANR	329334	UnaryOperator	&		328717	0					
ANR	329335	Identifier	subtree		328717	1					
ANR	329336	Argument	cstr		328717	1					
ANR	329337	Identifier	cstr		328717	0					
ANR	329338	Argument	ustrlen ( cstr )		328717	2					
ANR	329339	CallExpression	ustrlen ( cstr )		328717	0					
ANR	329340	Callee	ustrlen		328717	0					
ANR	329341	Identifier	ustrlen		328717	0					
ANR	329342	ArgumentList	cstr		328717	1					
ANR	329343	Argument	cstr		328717	0					
ANR	329344	Identifier	cstr		328717	0					
ANR	329345	ExpressionStatement	free ( cstr )	1915:4:62717:62727	328717	3	True				
ANR	329346	CallExpression	free ( cstr )		328717	0					
ANR	329347	Callee	free		328717	0					
ANR	329348	Identifier	free		328717	0					
ANR	329349	ArgumentList	cstr		328717	1					
ANR	329350	Argument	cstr		328717	0					
ANR	329351	Identifier	cstr		328717	0					
ANR	329352	ExpressionStatement	bHaveSubtree = 1	1916:4:62733:62749	328717	4	True				
ANR	329353	AssignmentExpression	bHaveSubtree = 1		328717	0		=			
ANR	329354	Identifier	bHaveSubtree		328717	0					
ANR	329355	PrimaryExpression	1		328717	1					
ANR	329356	ElseStatement	else		328717	0					
ANR	329357	IfStatement	"if ( ! strcmp ( pblk . descr [ i ] . name , ""plugin"" ) )"		328717	0					
ANR	329358	Condition	"! strcmp ( pblk . descr [ i ] . name , ""plugin"" )"	1918:12:62768:62804	328717	0	True				
ANR	329359	UnaryOperationExpression	"! strcmp ( pblk . descr [ i ] . name , ""plugin"" )"		328717	0					
ANR	329360	UnaryOperator	!		328717	0					
ANR	329361	CallExpression	"strcmp ( pblk . descr [ i ] . name , ""plugin"" )"		328717	1					
ANR	329362	Callee	strcmp		328717	0					
ANR	329363	Identifier	strcmp		328717	0					
ANR	329364	ArgumentList	pblk . descr [ i ] . name		328717	1					
ANR	329365	Argument	pblk . descr [ i ] . name		328717	0					
ANR	329366	MemberAccess	pblk . descr [ i ] . name		328717	0					
ANR	329367	ArrayIndexing	pblk . descr [ i ]		328717	0					
ANR	329368	MemberAccess	pblk . descr		328717	0					
ANR	329369	Identifier	pblk		328717	0					
ANR	329370	Identifier	descr		328717	1					
ANR	329371	Identifier	i		328717	1					
ANR	329372	Identifier	name		328717	1					
ANR	329373	Argument	"""plugin"""		328717	1					
ANR	329374	PrimaryExpression	"""plugin"""		328717	0					
ANR	329375	CompoundStatement		63:51:2327:2327	328717	1					
ANR	329376	ExpressionStatement	"plugin = ( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"	1919:3:62812:62868	328717	0	True				
ANR	329377	AssignmentExpression	"plugin = ( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	0		=			
ANR	329378	Identifier	plugin		328717	0					
ANR	329379	CastExpression	"( uchar * ) es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	1					
ANR	329380	CastTarget	uchar *		328717	0					
ANR	329381	CallExpression	"es_str2cstr ( pvals [ i ] . val . d . estr , NULL )"		328717	1					
ANR	329382	Callee	es_str2cstr		328717	0					
ANR	329383	Identifier	es_str2cstr		328717	0					
ANR	329384	ArgumentList	pvals [ i ] . val . d . estr		328717	1					
ANR	329385	Argument	pvals [ i ] . val . d . estr		328717	0					
ANR	329386	MemberAccess	pvals [ i ] . val . d . estr		328717	0					
ANR	329387	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	329388	MemberAccess	pvals [ i ] . val		328717	0					
ANR	329389	ArrayIndexing	pvals [ i ]		328717	0					
ANR	329390	Identifier	pvals		328717	0					
ANR	329391	Identifier	i		328717	1					
ANR	329392	Identifier	val		328717	1					
ANR	329393	Identifier	d		328717	1					
ANR	329394	Identifier	estr		328717	1					
ANR	329395	Argument	NULL		328717	1					
ANR	329396	Identifier	NULL		328717	0					
ANR	329397	ElseStatement	else		328717	0					
ANR	329398	IfStatement	"if ( ! strcmp ( pblk . descr [ i ] . name , ""option.stdsql"" ) )"		328717	0					
ANR	329399	Condition	"! strcmp ( pblk . descr [ i ] . name , ""option.stdsql"" )"	1920:12:62882:62925	328717	0	True				
ANR	329400	UnaryOperationExpression	"! strcmp ( pblk . descr [ i ] . name , ""option.stdsql"" )"		328717	0					
ANR	329401	UnaryOperator	!		328717	0					
ANR	329402	CallExpression	"strcmp ( pblk . descr [ i ] . name , ""option.stdsql"" )"		328717	1					
ANR	329403	Callee	strcmp		328717	0					
ANR	329404	Identifier	strcmp		328717	0					
ANR	329405	ArgumentList	pblk . descr [ i ] . name		328717	1					
ANR	329406	Argument	pblk . descr [ i ] . name		328717	0					
ANR	329407	MemberAccess	pblk . descr [ i ] . name		328717	0					
ANR	329408	ArrayIndexing	pblk . descr [ i ]		328717	0					
ANR	329409	MemberAccess	pblk . descr		328717	0					
ANR	329410	Identifier	pblk		328717	0					
ANR	329411	Identifier	descr		328717	1					
ANR	329412	Identifier	i		328717	1					
ANR	329413	Identifier	name		328717	1					
ANR	329414	Argument	"""option.stdsql"""		328717	1					
ANR	329415	PrimaryExpression	"""option.stdsql"""		328717	0					
ANR	329416	CompoundStatement		65:58:2448:2448	328717	1					
ANR	329417	ExpressionStatement	o_stdsql = pvals [ i ] . val . d . n	1921:3:62933:62960	328717	0	True				
ANR	329418	AssignmentExpression	o_stdsql = pvals [ i ] . val . d . n		328717	0		=			
ANR	329419	Identifier	o_stdsql		328717	0					
ANR	329420	MemberAccess	pvals [ i ] . val . d . n		328717	1					
ANR	329421	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	329422	MemberAccess	pvals [ i ] . val		328717	0					
ANR	329423	ArrayIndexing	pvals [ i ]		328717	0					
ANR	329424	Identifier	pvals		328717	0					
ANR	329425	Identifier	i		328717	1					
ANR	329426	Identifier	val		328717	1					
ANR	329427	Identifier	d		328717	1					
ANR	329428	Identifier	n		328717	1					
ANR	329429	ElseStatement	else		328717	0					
ANR	329430	IfStatement	"if ( ! strcmp ( pblk . descr [ i ] . name , ""option.sql"" ) )"		328717	0					
ANR	329431	Condition	"! strcmp ( pblk . descr [ i ] . name , ""option.sql"" )"	1922:12:62974:63014	328717	0	True				
ANR	329432	UnaryOperationExpression	"! strcmp ( pblk . descr [ i ] . name , ""option.sql"" )"		328717	0					
ANR	329433	UnaryOperator	!		328717	0					
ANR	329434	CallExpression	"strcmp ( pblk . descr [ i ] . name , ""option.sql"" )"		328717	1					
ANR	329435	Callee	strcmp		328717	0					
ANR	329436	Identifier	strcmp		328717	0					
ANR	329437	ArgumentList	pblk . descr [ i ] . name		328717	1					
ANR	329438	Argument	pblk . descr [ i ] . name		328717	0					
ANR	329439	MemberAccess	pblk . descr [ i ] . name		328717	0					
ANR	329440	ArrayIndexing	pblk . descr [ i ]		328717	0					
ANR	329441	MemberAccess	pblk . descr		328717	0					
ANR	329442	Identifier	pblk		328717	0					
ANR	329443	Identifier	descr		328717	1					
ANR	329444	Identifier	i		328717	1					
ANR	329445	Identifier	name		328717	1					
ANR	329446	Argument	"""option.sql"""		328717	1					
ANR	329447	PrimaryExpression	"""option.sql"""		328717	0					
ANR	329448	CompoundStatement		67:55:2537:2537	328717	1					
ANR	329449	ExpressionStatement	o_sql = pvals [ i ] . val . d . n	1923:3:63022:63046	328717	0	True				
ANR	329450	AssignmentExpression	o_sql = pvals [ i ] . val . d . n		328717	0		=			
ANR	329451	Identifier	o_sql		328717	0					
ANR	329452	MemberAccess	pvals [ i ] . val . d . n		328717	1					
ANR	329453	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	329454	MemberAccess	pvals [ i ] . val		328717	0					
ANR	329455	ArrayIndexing	pvals [ i ]		328717	0					
ANR	329456	Identifier	pvals		328717	0					
ANR	329457	Identifier	i		328717	1					
ANR	329458	Identifier	val		328717	1					
ANR	329459	Identifier	d		328717	1					
ANR	329460	Identifier	n		328717	1					
ANR	329461	ElseStatement	else		328717	0					
ANR	329462	IfStatement	"if ( ! strcmp ( pblk . descr [ i ] . name , ""option.json"" ) )"		328717	0					
ANR	329463	Condition	"! strcmp ( pblk . descr [ i ] . name , ""option.json"" )"	1924:12:63060:63101	328717	0	True				
ANR	329464	UnaryOperationExpression	"! strcmp ( pblk . descr [ i ] . name , ""option.json"" )"		328717	0					
ANR	329465	UnaryOperator	!		328717	0					
ANR	329466	CallExpression	"strcmp ( pblk . descr [ i ] . name , ""option.json"" )"		328717	1					
ANR	329467	Callee	strcmp		328717	0					
ANR	329468	Identifier	strcmp		328717	0					
ANR	329469	ArgumentList	pblk . descr [ i ] . name		328717	1					
ANR	329470	Argument	pblk . descr [ i ] . name		328717	0					
ANR	329471	MemberAccess	pblk . descr [ i ] . name		328717	0					
ANR	329472	ArrayIndexing	pblk . descr [ i ]		328717	0					
ANR	329473	MemberAccess	pblk . descr		328717	0					
ANR	329474	Identifier	pblk		328717	0					
ANR	329475	Identifier	descr		328717	1					
ANR	329476	Identifier	i		328717	1					
ANR	329477	Identifier	name		328717	1					
ANR	329478	Argument	"""option.json"""		328717	1					
ANR	329479	PrimaryExpression	"""option.json"""		328717	0					
ANR	329480	CompoundStatement		69:56:2624:2624	328717	1					
ANR	329481	ExpressionStatement	o_json = pvals [ i ] . val . d . n	1925:3:63109:63134	328717	0	True				
ANR	329482	AssignmentExpression	o_json = pvals [ i ] . val . d . n		328717	0		=			
ANR	329483	Identifier	o_json		328717	0					
ANR	329484	MemberAccess	pvals [ i ] . val . d . n		328717	1					
ANR	329485	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	329486	MemberAccess	pvals [ i ] . val		328717	0					
ANR	329487	ArrayIndexing	pvals [ i ]		328717	0					
ANR	329488	Identifier	pvals		328717	0					
ANR	329489	Identifier	i		328717	1					
ANR	329490	Identifier	val		328717	1					
ANR	329491	Identifier	d		328717	1					
ANR	329492	Identifier	n		328717	1					
ANR	329493	ElseStatement	else		328717	0					
ANR	329494	IfStatement	"if ( ! strcmp ( pblk . descr [ i ] . name , ""option.casesensitive"" ) )"		328717	0					
ANR	329495	Condition	"! strcmp ( pblk . descr [ i ] . name , ""option.casesensitive"" )"	1926:12:63148:63198	328717	0	True				
ANR	329496	UnaryOperationExpression	"! strcmp ( pblk . descr [ i ] . name , ""option.casesensitive"" )"		328717	0					
ANR	329497	UnaryOperator	!		328717	0					
ANR	329498	CallExpression	"strcmp ( pblk . descr [ i ] . name , ""option.casesensitive"" )"		328717	1					
ANR	329499	Callee	strcmp		328717	0					
ANR	329500	Identifier	strcmp		328717	0					
ANR	329501	ArgumentList	pblk . descr [ i ] . name		328717	1					
ANR	329502	Argument	pblk . descr [ i ] . name		328717	0					
ANR	329503	MemberAccess	pblk . descr [ i ] . name		328717	0					
ANR	329504	ArrayIndexing	pblk . descr [ i ]		328717	0					
ANR	329505	MemberAccess	pblk . descr		328717	0					
ANR	329506	Identifier	pblk		328717	0					
ANR	329507	Identifier	descr		328717	1					
ANR	329508	Identifier	i		328717	1					
ANR	329509	Identifier	name		328717	1					
ANR	329510	Argument	"""option.casesensitive"""		328717	1					
ANR	329511	PrimaryExpression	"""option.casesensitive"""		328717	0					
ANR	329512	CompoundStatement		71:65:2721:2721	328717	1					
ANR	329513	ExpressionStatement	o_casesensitive = pvals [ i ] . val . d . n	1927:3:63206:63240	328717	0	True				
ANR	329514	AssignmentExpression	o_casesensitive = pvals [ i ] . val . d . n		328717	0		=			
ANR	329515	Identifier	o_casesensitive		328717	0					
ANR	329516	MemberAccess	pvals [ i ] . val . d . n		328717	1					
ANR	329517	MemberAccess	pvals [ i ] . val . d		328717	0					
ANR	329518	MemberAccess	pvals [ i ] . val		328717	0					
ANR	329519	ArrayIndexing	pvals [ i ]		328717	0					
ANR	329520	Identifier	pvals		328717	0					
ANR	329521	Identifier	i		328717	1					
ANR	329522	Identifier	val		328717	1					
ANR	329523	Identifier	d		328717	1					
ANR	329524	Identifier	n		328717	1					
ANR	329525	ElseStatement	else		328717	0					
ANR	329526	CompoundStatement		73:9:2771:2771	328717	0					
ANR	329527	Statement	dbgprintf	1929:3:63256:63264	328717	0	True				
ANR	329528	Statement	(	1929:12:63265:63265	328717	1	True				
ANR	329529	Statement	"""template: program error, non-handled """	1929:13:63266:63304	328717	2	True				
ANR	329530	Statement	"""param '%s'\\n"""	1930:5:63311:63324	328717	3	True				
ANR	329531	Statement	","	1930:19:63325:63325	328717	4	True				
ANR	329532	Statement	pblk	1930:21:63327:63330	328717	5	True				
ANR	329533	Statement	.	1930:25:63331:63331	328717	6	True				
ANR	329534	Statement	descr	1930:26:63332:63336	328717	7	True				
ANR	329535	Statement	[	1930:31:63337:63337	328717	8	True				
ANR	329536	Statement	i	1930:32:63338:63338	328717	9	True				
ANR	329537	Statement	]	1930:33:63339:63339	328717	10	True				
ANR	329538	Statement	.	1930:34:63340:63340	328717	11	True				
ANR	329539	Statement	name	1930:35:63341:63344	328717	12	True				
ANR	329540	Statement	)	1930:39:63345:63345	328717	13	True				
ANR	329541	ExpressionStatement		1930:40:63346:63346	328717	14	True				
ANR	329542	IfStatement	if ( name == NULL )		328717	20					
ANR	329543	Condition	name == NULL	1938:4:63582:63593	328717	0	True				
ANR	329544	EqualityExpression	name == NULL		328717	0		==			
ANR	329545	Identifier	name		328717	0					
ANR	329546	Identifier	NULL		328717	1					
ANR	329547	CompoundStatement		83:18:3116:3116	328717	1					
ANR	329548	ExpressionStatement	"DBGPRINTF ( ""template/tplProcessConf: logic error name == NULL - pblk wrong?\\n"" )"	1939:2:63600:63678	328717	0	True				
ANR	329549	CallExpression	"DBGPRINTF ( ""template/tplProcessConf: logic error name == NULL - pblk wrong?\\n"" )"		328717	0					
ANR	329550	Callee	DBGPRINTF		328717	0					
ANR	329551	Identifier	DBGPRINTF		328717	0					
ANR	329552	ArgumentList	"""template/tplProcessConf: logic error name == NULL - pblk wrong?\\n"""		328717	1					
ANR	329553	Argument	"""template/tplProcessConf: logic error name == NULL - pblk wrong?\\n"""		328717	0					
ANR	329554	PrimaryExpression	"""template/tplProcessConf: logic error name == NULL - pblk wrong?\\n"""		328717	0					
ANR	329555	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	1940:2:63682:63708	328717	1	True				
ANR	329556	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		328717	0					
ANR	329557	Callee	ABORT_FINALIZE		328717	0					
ANR	329558	Identifier	ABORT_FINALIZE		328717	0					
ANR	329559	ArgumentList	RS_RET_ERR		328717	1					
ANR	329560	Argument	RS_RET_ERR		328717	0					
ANR	329561	Identifier	RS_RET_ERR		328717	0					
ANR	329562	IfStatement	if ( tplStr == NULL )		328717	21					
ANR	329563	Condition	tplStr == NULL	1944:4:63749:63763	328717	0	True				
ANR	329564	EqualityExpression	tplStr == NULL		328717	0		==			
ANR	329565	Identifier	tplStr		328717	0					
ANR	329566	Identifier	NULL		328717	1					
ANR	329567	CompoundStatement		89:21:3286:3286	328717	1					
ANR	329568	IfStatement	if ( tplType == T_STRING )		328717	0					
ANR	329569	Condition	tplType == T_STRING	1945:5:63773:63791	328717	0	True				
ANR	329570	EqualityExpression	tplType == T_STRING		328717	0		==			
ANR	329571	Identifier	tplType		328717	0					
ANR	329572	Identifier	T_STRING		328717	1					
ANR	329573	CompoundStatement		90:26:3314:3314	328717	1					
ANR	329574	Statement	errmsg	1946:3:63799:63804	328717	0	True				
ANR	329575	Statement	.	1946:9:63805:63805	328717	1	True				
ANR	329576	Statement	LogError	1946:10:63806:63813	328717	2	True				
ANR	329577	Statement	(	1946:18:63814:63814	328717	3	True				
ANR	329578	Statement	0	1946:19:63815:63815	328717	4	True				
ANR	329579	Statement	","	1946:20:63816:63816	328717	5	True				
ANR	329580	Statement	RS_RET_ERR	1946:22:63818:63827	328717	6	True				
ANR	329581	Statement	","	1946:32:63828:63828	328717	7	True				
ANR	329582	Statement	"""template '%s' of type string needs """	1946:34:63830:63866	328717	8	True				
ANR	329583	Statement	"""string parameter"""	1947:4:63872:63889	328717	9	True				
ANR	329584	Statement	","	1947:22:63890:63890	328717	10	True				
ANR	329585	Statement	name	1947:24:63892:63895	328717	11	True				
ANR	329586	Statement	)	1947:28:63896:63896	328717	12	True				
ANR	329587	ExpressionStatement		1947:29:63897:63897	328717	13	True				
ANR	329588	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	1948:3:63902:63928	328717	14	True				
ANR	329589	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		328717	0					
ANR	329590	Callee	ABORT_FINALIZE		328717	0					
ANR	329591	Identifier	ABORT_FINALIZE		328717	0					
ANR	329592	ArgumentList	RS_RET_ERR		328717	1					
ANR	329593	Argument	RS_RET_ERR		328717	0					
ANR	329594	Identifier	RS_RET_ERR		328717	0					
ANR	329595	ElseStatement	else		328717	0					
ANR	329596	CompoundStatement		95:8:3462:3462	328717	0					
ANR	329597	IfStatement	if ( tplType != T_STRING )		328717	0					
ANR	329598	Condition	tplType != T_STRING	1951:5:63949:63967	328717	0	True				
ANR	329599	EqualityExpression	tplType != T_STRING		328717	0		!=			
ANR	329600	Identifier	tplType		328717	0					
ANR	329601	Identifier	T_STRING		328717	1					
ANR	329602	CompoundStatement		96:26:3490:3490	328717	1					
ANR	329603	Statement	errmsg	1952:3:63975:63980	328717	0	True				
ANR	329604	Statement	.	1952:9:63981:63981	328717	1	True				
ANR	329605	Statement	LogError	1952:10:63982:63989	328717	2	True				
ANR	329606	Statement	(	1952:18:63990:63990	328717	3	True				
ANR	329607	Statement	0	1952:19:63991:63991	328717	4	True				
ANR	329608	Statement	","	1952:20:63992:63992	328717	5	True				
ANR	329609	Statement	RS_RET_ERR	1952:22:63994:64003	328717	6	True				
ANR	329610	Statement	","	1952:32:64004:64004	328717	7	True				
ANR	329611	Statement	"""template '%s' is not a string """	1952:34:64006:64037	328717	8	True				
ANR	329612	Statement	"""template but has a string specified - ignored"""	1953:4:64043:64089	328717	9	True				
ANR	329613	Statement	","	1953:51:64090:64090	328717	10	True				
ANR	329614	Statement	name	1953:53:64092:64095	328717	11	True				
ANR	329615	Statement	)	1953:57:64096:64096	328717	12	True				
ANR	329616	ExpressionStatement		1953:58:64097:64097	328717	13	True				
ANR	329617	IfStatement	if ( plugin == NULL )		328717	22					
ANR	329618	Condition	plugin == NULL	1957:4:64111:64125	328717	0	True				
ANR	329619	EqualityExpression	plugin == NULL		328717	0		==			
ANR	329620	Identifier	plugin		328717	0					
ANR	329621	Identifier	NULL		328717	1					
ANR	329622	CompoundStatement		102:21:3648:3648	328717	1					
ANR	329623	IfStatement	if ( tplType == T_PLUGIN )		328717	0					
ANR	329624	Condition	tplType == T_PLUGIN	1958:5:64135:64153	328717	0	True				
ANR	329625	EqualityExpression	tplType == T_PLUGIN		328717	0		==			
ANR	329626	Identifier	tplType		328717	0					
ANR	329627	Identifier	T_PLUGIN		328717	1					
ANR	329628	CompoundStatement		103:26:3676:3676	328717	1					
ANR	329629	Statement	errmsg	1959:3:64161:64166	328717	0	True				
ANR	329630	Statement	.	1959:9:64167:64167	328717	1	True				
ANR	329631	Statement	LogError	1959:10:64168:64175	328717	2	True				
ANR	329632	Statement	(	1959:18:64176:64176	328717	3	True				
ANR	329633	Statement	0	1959:19:64177:64177	328717	4	True				
ANR	329634	Statement	","	1959:20:64178:64178	328717	5	True				
ANR	329635	Statement	RS_RET_ERR	1959:22:64180:64189	328717	6	True				
ANR	329636	Statement	","	1959:32:64190:64190	328717	7	True				
ANR	329637	Statement	"""template '%s' of type plugin needs """	1959:34:64192:64228	328717	8	True				
ANR	329638	Statement	"""plugin parameter"""	1960:4:64234:64251	328717	9	True				
ANR	329639	Statement	","	1960:22:64252:64252	328717	10	True				
ANR	329640	Statement	name	1960:24:64254:64257	328717	11	True				
ANR	329641	Statement	)	1960:28:64258:64258	328717	12	True				
ANR	329642	ExpressionStatement		1960:29:64259:64259	328717	13	True				
ANR	329643	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	1961:3:64264:64290	328717	14	True				
ANR	329644	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		328717	0					
ANR	329645	Callee	ABORT_FINALIZE		328717	0					
ANR	329646	Identifier	ABORT_FINALIZE		328717	0					
ANR	329647	ArgumentList	RS_RET_ERR		328717	1					
ANR	329648	Argument	RS_RET_ERR		328717	0					
ANR	329649	Identifier	RS_RET_ERR		328717	0					
ANR	329650	ElseStatement	else		328717	0					
ANR	329651	CompoundStatement		108:8:3824:3824	328717	0					
ANR	329652	IfStatement	if ( tplType != T_PLUGIN )		328717	0					
ANR	329653	Condition	tplType != T_PLUGIN	1964:5:64311:64329	328717	0	True				
ANR	329654	EqualityExpression	tplType != T_PLUGIN		328717	0		!=			
ANR	329655	Identifier	tplType		328717	0					
ANR	329656	Identifier	T_PLUGIN		328717	1					
ANR	329657	CompoundStatement		109:26:3852:3852	328717	1					
ANR	329658	Statement	errmsg	1965:3:64337:64342	328717	0	True				
ANR	329659	Statement	.	1965:9:64343:64343	328717	1	True				
ANR	329660	Statement	LogError	1965:10:64344:64351	328717	2	True				
ANR	329661	Statement	(	1965:18:64352:64352	328717	3	True				
ANR	329662	Statement	0	1965:19:64353:64353	328717	4	True				
ANR	329663	Statement	","	1965:20:64354:64354	328717	5	True				
ANR	329664	Statement	RS_RET_ERR	1965:22:64356:64365	328717	6	True				
ANR	329665	Statement	","	1965:32:64366:64366	328717	7	True				
ANR	329666	Statement	"""template '%s' is not a plugin """	1965:34:64368:64399	328717	8	True				
ANR	329667	Statement	"""template but has a plugin specified - ignored"""	1966:4:64405:64451	328717	9	True				
ANR	329668	Statement	","	1966:51:64452:64452	328717	10	True				
ANR	329669	Statement	name	1966:53:64454:64457	328717	11	True				
ANR	329670	Statement	)	1966:57:64458:64458	328717	12	True				
ANR	329671	ExpressionStatement		1966:58:64459:64459	328717	13	True				
ANR	329672	IfStatement	if ( ! bHaveSubtree )		328717	23					
ANR	329673	Condition	! bHaveSubtree	1970:4:64473:64485	328717	0	True				
ANR	329674	UnaryOperationExpression	! bHaveSubtree		328717	0					
ANR	329675	UnaryOperator	!		328717	0					
ANR	329676	Identifier	bHaveSubtree		328717	1					
ANR	329677	CompoundStatement		115:19:4008:4008	328717	1					
ANR	329678	IfStatement	if ( tplType == T_SUBTREE )		328717	0					
ANR	329679	Condition	tplType == T_SUBTREE	1971:5:64495:64514	328717	0	True				
ANR	329680	EqualityExpression	tplType == T_SUBTREE		328717	0		==			
ANR	329681	Identifier	tplType		328717	0					
ANR	329682	Identifier	T_SUBTREE		328717	1					
ANR	329683	CompoundStatement		116:27:4037:4037	328717	1					
ANR	329684	Statement	errmsg	1972:3:64522:64527	328717	0	True				
ANR	329685	Statement	.	1972:9:64528:64528	328717	1	True				
ANR	329686	Statement	LogError	1972:10:64529:64536	328717	2	True				
ANR	329687	Statement	(	1972:18:64537:64537	328717	3	True				
ANR	329688	Statement	0	1972:19:64538:64538	328717	4	True				
ANR	329689	Statement	","	1972:20:64539:64539	328717	5	True				
ANR	329690	Statement	RS_RET_ERR	1972:22:64541:64550	328717	6	True				
ANR	329691	Statement	","	1972:32:64551:64551	328717	7	True				
ANR	329692	Statement	"""template '%s' of type subtree needs """	1972:34:64553:64590	328717	8	True				
ANR	329693	Statement	"""subtree parameter"""	1973:4:64596:64614	328717	9	True				
ANR	329694	Statement	","	1973:23:64615:64615	328717	10	True				
ANR	329695	Statement	name	1973:25:64617:64620	328717	11	True				
ANR	329696	Statement	)	1973:29:64621:64621	328717	12	True				
ANR	329697	ExpressionStatement		1973:30:64622:64622	328717	13	True				
ANR	329698	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	1974:3:64627:64653	328717	14	True				
ANR	329699	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		328717	0					
ANR	329700	Callee	ABORT_FINALIZE		328717	0					
ANR	329701	Identifier	ABORT_FINALIZE		328717	0					
ANR	329702	ArgumentList	RS_RET_ERR		328717	1					
ANR	329703	Argument	RS_RET_ERR		328717	0					
ANR	329704	Identifier	RS_RET_ERR		328717	0					
ANR	329705	ElseStatement	else		328717	0					
ANR	329706	CompoundStatement		121:8:4187:4187	328717	0					
ANR	329707	IfStatement	if ( tplType != T_SUBTREE )		328717	0					
ANR	329708	Condition	tplType != T_SUBTREE	1977:5:64674:64693	328717	0	True				
ANR	329709	EqualityExpression	tplType != T_SUBTREE		328717	0		!=			
ANR	329710	Identifier	tplType		328717	0					
ANR	329711	Identifier	T_SUBTREE		328717	1					
ANR	329712	CompoundStatement		122:27:4216:4216	328717	1					
ANR	329713	Statement	errmsg	1978:3:64701:64706	328717	0	True				
ANR	329714	Statement	.	1978:9:64707:64707	328717	1	True				
ANR	329715	Statement	LogError	1978:10:64708:64715	328717	2	True				
ANR	329716	Statement	(	1978:18:64716:64716	328717	3	True				
ANR	329717	Statement	0	1978:19:64717:64717	328717	4	True				
ANR	329718	Statement	","	1978:20:64718:64718	328717	5	True				
ANR	329719	Statement	RS_RET_ERR	1978:22:64720:64729	328717	6	True				
ANR	329720	Statement	","	1978:32:64730:64730	328717	7	True				
ANR	329721	Statement	"""template '%s' is not a subtree """	1978:34:64732:64764	328717	8	True				
ANR	329722	Statement	"""template but has a subtree specified - ignored"""	1979:4:64770:64817	328717	9	True				
ANR	329723	Statement	","	1979:52:64818:64818	328717	10	True				
ANR	329724	Statement	name	1979:54:64820:64823	328717	11	True				
ANR	329725	Statement	)	1979:58:64824:64824	328717	12	True				
ANR	329726	ExpressionStatement		1979:59:64825:64825	328717	13	True				
ANR	329727	IfStatement	if ( o -> subobjs == NULL )		328717	24					
ANR	329728	Condition	o -> subobjs == NULL	1983:4:64839:64857	328717	0	True				
ANR	329729	EqualityExpression	o -> subobjs == NULL		328717	0		==			
ANR	329730	PtrMemberAccess	o -> subobjs		328717	0					
ANR	329731	Identifier	o		328717	0					
ANR	329732	Identifier	subobjs		328717	1					
ANR	329733	Identifier	NULL		328717	1					
ANR	329734	CompoundStatement		128:25:4380:4380	328717	1					
ANR	329735	IfStatement	if ( tplType == T_LIST )		328717	0					
ANR	329736	Condition	tplType == T_LIST	1984:5:64867:64883	328717	0	True				
ANR	329737	EqualityExpression	tplType == T_LIST		328717	0		==			
ANR	329738	Identifier	tplType		328717	0					
ANR	329739	Identifier	T_LIST		328717	1					
ANR	329740	CompoundStatement		129:24:4406:4406	328717	1					
ANR	329741	Statement	errmsg	1985:3:64891:64896	328717	0	True				
ANR	329742	Statement	.	1985:9:64897:64897	328717	1	True				
ANR	329743	Statement	LogError	1985:10:64898:64905	328717	2	True				
ANR	329744	Statement	(	1985:18:64906:64906	328717	3	True				
ANR	329745	Statement	0	1985:19:64907:64907	328717	4	True				
ANR	329746	Statement	","	1985:20:64908:64908	328717	5	True				
ANR	329747	Statement	RS_RET_ERR	1985:22:64910:64919	328717	6	True				
ANR	329748	Statement	","	1985:32:64920:64920	328717	7	True				
ANR	329749	Statement	"""template '%s' of type list has """	1985:34:64922:64954	328717	8	True				
ANR	329750	Statement	"""has no parameters specified"""	1986:4:64960:64988	328717	9	True				
ANR	329751	Statement	","	1986:33:64989:64989	328717	10	True				
ANR	329752	Statement	name	1986:35:64991:64994	328717	11	True				
ANR	329753	Statement	)	1986:39:64995:64995	328717	12	True				
ANR	329754	ExpressionStatement		1986:40:64996:64996	328717	13	True				
ANR	329755	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	1987:3:65001:65027	328717	14	True				
ANR	329756	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		328717	0					
ANR	329757	Callee	ABORT_FINALIZE		328717	0					
ANR	329758	Identifier	ABORT_FINALIZE		328717	0					
ANR	329759	ArgumentList	RS_RET_ERR		328717	1					
ANR	329760	Argument	RS_RET_ERR		328717	0					
ANR	329761	Identifier	RS_RET_ERR		328717	0					
ANR	329762	ElseStatement	else		328717	0					
ANR	329763	CompoundStatement		134:8:4561:4561	328717	0					
ANR	329764	IfStatement	if ( tplType != T_LIST )		328717	0					
ANR	329765	Condition	tplType != T_LIST	1990:5:65048:65064	328717	0	True				
ANR	329766	EqualityExpression	tplType != T_LIST		328717	0		!=			
ANR	329767	Identifier	tplType		328717	0					
ANR	329768	Identifier	T_LIST		328717	1					
ANR	329769	CompoundStatement		135:24:4587:4587	328717	1					
ANR	329770	Statement	errmsg	1991:3:65072:65077	328717	0	True				
ANR	329771	Statement	.	1991:9:65078:65078	328717	1	True				
ANR	329772	Statement	LogError	1991:10:65079:65086	328717	2	True				
ANR	329773	Statement	(	1991:18:65087:65087	328717	3	True				
ANR	329774	Statement	0	1991:19:65088:65088	328717	4	True				
ANR	329775	Statement	","	1991:20:65089:65089	328717	5	True				
ANR	329776	Statement	RS_RET_ERR	1991:22:65091:65100	328717	6	True				
ANR	329777	Statement	","	1991:32:65101:65101	328717	7	True				
ANR	329778	Statement	"""template '%s' is not a list """	1991:34:65103:65132	328717	8	True				
ANR	329779	Statement	"""template but has parameters specified - ignored"""	1992:4:65138:65186	328717	9	True				
ANR	329780	Statement	","	1992:53:65187:65187	328717	10	True				
ANR	329781	Statement	name	1992:55:65189:65192	328717	11	True				
ANR	329782	Statement	)	1992:59:65193:65193	328717	12	True				
ANR	329783	ExpressionStatement		1992:60:65194:65194	328717	13	True				
ANR	329784	ExpressionStatement	numopts = 0	1996:1:65205:65216	328717	25	True				
ANR	329785	AssignmentExpression	numopts = 0		328717	0		=			
ANR	329786	Identifier	numopts		328717	0					
ANR	329787	PrimaryExpression	0		328717	1					
ANR	329788	IfStatement	if ( o_sql )		328717	26					
ANR	329789	Condition	o_sql	1997:4:65222:65226	328717	0	True				
ANR	329790	Identifier	o_sql		328717	0					
ANR	329791	ExpressionStatement	++ numopts	1997:11:65229:65238	328717	1	True				
ANR	329792	UnaryExpression	++ numopts		328717	0					
ANR	329793	IncDec	++		328717	0					
ANR	329794	Identifier	numopts		328717	1					
ANR	329795	IfStatement	if ( o_stdsql )		328717	27					
ANR	329796	Condition	o_stdsql	1998:4:65244:65251	328717	0	True				
ANR	329797	Identifier	o_stdsql		328717	0					
ANR	329798	ExpressionStatement	++ numopts	1998:14:65254:65263	328717	1	True				
ANR	329799	UnaryExpression	++ numopts		328717	0					
ANR	329800	IncDec	++		328717	0					
ANR	329801	Identifier	numopts		328717	1					
ANR	329802	IfStatement	if ( o_json )		328717	28					
ANR	329803	Condition	o_json	1999:4:65269:65274	328717	0	True				
ANR	329804	Identifier	o_json		328717	0					
ANR	329805	ExpressionStatement	++ numopts	1999:12:65277:65286	328717	1	True				
ANR	329806	UnaryExpression	++ numopts		328717	0					
ANR	329807	IncDec	++		328717	0					
ANR	329808	Identifier	numopts		328717	1					
ANR	329809	IfStatement	if ( o_casesensitive )		328717	29					
ANR	329810	Condition	o_casesensitive	2000:4:65292:65306	328717	0	True				
ANR	329811	Identifier	o_casesensitive		328717	0					
ANR	329812	ExpressionStatement	++ numopts	2000:21:65309:65318	328717	1	True				
ANR	329813	UnaryExpression	++ numopts		328717	0					
ANR	329814	IncDec	++		328717	0					
ANR	329815	Identifier	numopts		328717	1					
ANR	329816	IfStatement	if ( numopts > 1 )		328717	30					
ANR	329817	Condition	numopts > 1	2001:4:65324:65334	328717	0	True				
ANR	329818	RelationalExpression	numopts > 1		328717	0		>			
ANR	329819	Identifier	numopts		328717	0					
ANR	329820	PrimaryExpression	1		328717	1					
ANR	329821	CompoundStatement		146:17:4857:4857	328717	1					
ANR	329822	Statement	errmsg	2002:2:65341:65346	328717	0	True				
ANR	329823	Statement	.	2002:8:65347:65347	328717	1	True				
ANR	329824	Statement	LogError	2002:9:65348:65355	328717	2	True				
ANR	329825	Statement	(	2002:17:65356:65356	328717	3	True				
ANR	329826	Statement	0	2002:18:65357:65357	328717	4	True				
ANR	329827	Statement	","	2002:19:65358:65358	328717	5	True				
ANR	329828	Statement	RS_RET_ERR	2002:21:65360:65369	328717	6	True				
ANR	329829	Statement	","	2002:31:65370:65370	328717	7	True				
ANR	329830	Statement	"""template '%s' has multiple incompatible """	2002:33:65372:65413	328717	8	True				
ANR	329831	Statement	"""options of sql, stdsql or json specified"""	2003:3:65418:65459	328717	9	True				
ANR	329832	Statement	","	2003:45:65460:65460	328717	10	True				
ANR	329833	Statement	name	2003:47:65462:65465	328717	11	True				
ANR	329834	Statement	)	2003:51:65466:65466	328717	12	True				
ANR	329835	ExpressionStatement		2003:52:65467:65467	328717	13	True				
ANR	329836	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	2004:2:65471:65497	328717	14	True				
ANR	329837	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		328717	0					
ANR	329838	Callee	ABORT_FINALIZE		328717	0					
ANR	329839	Identifier	ABORT_FINALIZE		328717	0					
ANR	329840	ArgumentList	RS_RET_ERR		328717	1					
ANR	329841	Argument	RS_RET_ERR		328717	0					
ANR	329842	Identifier	RS_RET_ERR		328717	0					
ANR	329843	IfStatement	if ( ( pTpl = tplConstruct ( loadConf ) ) == NULL )		328717	31					
ANR	329844	Condition	( pTpl = tplConstruct ( loadConf ) ) == NULL	2008:4:65524:65562	328717	0	True				
ANR	329845	EqualityExpression	( pTpl = tplConstruct ( loadConf ) ) == NULL		328717	0		==			
ANR	329846	AssignmentExpression	pTpl = tplConstruct ( loadConf )		328717	0		=			
ANR	329847	Identifier	pTpl		328717	0					
ANR	329848	CallExpression	tplConstruct ( loadConf )		328717	1					
ANR	329849	Callee	tplConstruct		328717	0					
ANR	329850	Identifier	tplConstruct		328717	0					
ANR	329851	ArgumentList	loadConf		328717	1					
ANR	329852	Argument	loadConf		328717	0					
ANR	329853	Identifier	loadConf		328717	0					
ANR	329854	Identifier	NULL		328717	1					
ANR	329855	CompoundStatement		153:45:5085:5085	328717	1					
ANR	329856	ExpressionStatement	"DBGPRINTF ( ""template.c: tplConstruct failed!\\n"" )"	2009:2:65569:65616	328717	0	True				
ANR	329857	CallExpression	"DBGPRINTF ( ""template.c: tplConstruct failed!\\n"" )"		328717	0					
ANR	329858	Callee	DBGPRINTF		328717	0					
ANR	329859	Identifier	DBGPRINTF		328717	0					
ANR	329860	ArgumentList	"""template.c: tplConstruct failed!\\n"""		328717	1					
ANR	329861	Argument	"""template.c: tplConstruct failed!\\n"""		328717	0					
ANR	329862	PrimaryExpression	"""template.c: tplConstruct failed!\\n"""		328717	0					
ANR	329863	ExpressionStatement	ABORT_FINALIZE ( RS_RET_ERR )	2010:2:65620:65646	328717	1	True				
ANR	329864	CallExpression	ABORT_FINALIZE ( RS_RET_ERR )		328717	0					
ANR	329865	Callee	ABORT_FINALIZE		328717	0					
ANR	329866	Identifier	ABORT_FINALIZE		328717	0					
ANR	329867	ArgumentList	RS_RET_ERR		328717	1					
ANR	329868	Argument	RS_RET_ERR		328717	0					
ANR	329869	Identifier	RS_RET_ERR		328717	0					
ANR	329870	ExpressionStatement	pTpl -> pszName = name	2012:1:65652:65672	328717	32	True				
ANR	329871	AssignmentExpression	pTpl -> pszName = name		328717	0		=			
ANR	329872	PtrMemberAccess	pTpl -> pszName		328717	0					
ANR	329873	Identifier	pTpl		328717	0					
ANR	329874	Identifier	pszName		328717	1					
ANR	329875	Identifier	name		328717	1					
ANR	329876	ExpressionStatement	pTpl -> iLenName = lenName	2013:1:65675:65699	328717	33	True				
ANR	329877	AssignmentExpression	pTpl -> iLenName = lenName		328717	0		=			
ANR	329878	PtrMemberAccess	pTpl -> iLenName		328717	0					
ANR	329879	Identifier	pTpl		328717	0					
ANR	329880	Identifier	iLenName		328717	1					
ANR	329881	Identifier	lenName		328717	1					
ANR	329882	SwitchStatement	switch ( tplType )		328717	34					
ANR	329883	Condition	tplType	2015:8:65711:65717	328717	0	True				
ANR	329884	Identifier	tplType		328717	0					
ANR	329885	CompoundStatement		160:17:5240:5240	328717	1					
ANR	329886	Label	case T_STRING :	2016:1:65723:65736	328717	0	True				
ANR	329887	Identifier	T_STRING		328717	0					
ANR	329888	ExpressionStatement	p = tplStr	2016:16:65738:65748	328717	1	True				
ANR	329889	AssignmentExpression	p = tplStr		328717	0		=			
ANR	329890	Identifier	p		328717	0					
ANR	329891	Identifier	tplStr		328717	1					
ANR	329892	WhileStatement	while ( * p )		328717	2					
ANR	329893	Condition	* p	2017:9:65759:65760	328717	0	True				
ANR	329894	UnaryOperationExpression	* p		328717	0					
ANR	329895	UnaryOperator	*		328717	0					
ANR	329896	Identifier	p		328717	1					
ANR	329897	CompoundStatement		162:13:5283:5283	328717	1					
ANR	329898	SwitchStatement	switch ( * p )		328717	0					
ANR	329899	Condition	* p	2018:11:65776:65777	328717	0	True				
ANR	329900	UnaryOperationExpression	* p		328717	0					
ANR	329901	UnaryOperator	*		328717	0					
ANR	329902	Identifier	p		328717	1					
ANR	329903	CompoundStatement		163:15:5300:5300	328717	1					
ANR	329904	Label	case '%' :	2019:5:65787:65795	328717	0	True				
ANR	329905	ExpressionStatement	++ p	2020:6:65819:65822	328717	1	True				
ANR	329906	UnaryExpression	++ p		328717	0					
ANR	329907	IncDec	++		328717	0					
ANR	329908	Identifier	p		328717	1					
ANR	329909	ExpressionStatement	"CHKiRet ( do_Parameter ( & p , pTpl ) )"	2021:6:65844:65875	328717	2	True				
ANR	329910	CallExpression	"CHKiRet ( do_Parameter ( & p , pTpl ) )"		328717	0					
ANR	329911	Callee	CHKiRet		328717	0					
ANR	329912	Identifier	CHKiRet		328717	0					
ANR	329913	ArgumentList	"do_Parameter ( & p , pTpl )"		328717	1					
ANR	329914	Argument	"do_Parameter ( & p , pTpl )"		328717	0					
ANR	329915	CallExpression	"do_Parameter ( & p , pTpl )"		328717	0					
ANR	329916	Callee	do_Parameter		328717	0					
ANR	329917	Identifier	do_Parameter		328717	0					
ANR	329918	ArgumentList	& p		328717	1					
ANR	329919	Argument	& p		328717	0					
ANR	329920	UnaryOperationExpression	& p		328717	0					
ANR	329921	UnaryOperator	&		328717	0					
ANR	329922	Identifier	p		328717	1					
ANR	329923	Argument	pTpl		328717	1					
ANR	329924	Identifier	pTpl		328717	0					
ANR	329925	BreakStatement	break ;	2022:6:65883:65888	328717	3	True				
ANR	329926	Label	default :	2023:5:65895:65902	328717	4	True				
ANR	329927	Identifier	default		328717	0					
ANR	329928	ExpressionStatement	"do_Constant ( & p , pTpl , 0 )"	2024:6:65925:65949	328717	5	True				
ANR	329929	CallExpression	"do_Constant ( & p , pTpl , 0 )"		328717	0					
ANR	329930	Callee	do_Constant		328717	0					
ANR	329931	Identifier	do_Constant		328717	0					
ANR	329932	ArgumentList	& p		328717	1					
ANR	329933	Argument	& p		328717	0					
ANR	329934	UnaryOperationExpression	& p		328717	0					
ANR	329935	UnaryOperator	&		328717	0					
ANR	329936	Identifier	p		328717	1					
ANR	329937	Argument	pTpl		328717	1					
ANR	329938	Identifier	pTpl		328717	0					
ANR	329939	Argument	0		328717	2					
ANR	329940	PrimaryExpression	0		328717	0					
ANR	329941	BreakStatement	break ;	2025:6:65957:65962	328717	6	True				
ANR	329942	BreakStatement	break ;	2028:3:65978:65983	328717	3	True				
ANR	329943	Label	case T_PLUGIN :	2029:1:65986:65999	328717	4	True				
ANR	329944	Identifier	T_PLUGIN		328717	0					
ANR	329945	ExpressionStatement	p = plugin	2029:16:66001:66011	328717	5	True				
ANR	329946	AssignmentExpression	p = plugin		328717	0		=			
ANR	329947	Identifier	p		328717	0					
ANR	329948	Identifier	plugin		328717	1					
ANR	329949	ExpressionStatement	"localRet = tplAddTplMod ( pTpl , & p )"	2031:3:66074:66107	328717	6	True				
ANR	329950	AssignmentExpression	"localRet = tplAddTplMod ( pTpl , & p )"		328717	0		=			
ANR	329951	Identifier	localRet		328717	0					
ANR	329952	CallExpression	"tplAddTplMod ( pTpl , & p )"		328717	1					
ANR	329953	Callee	tplAddTplMod		328717	0					
ANR	329954	Identifier	tplAddTplMod		328717	0					
ANR	329955	ArgumentList	pTpl		328717	1					
ANR	329956	Argument	pTpl		328717	0					
ANR	329957	Identifier	pTpl		328717	0					
ANR	329958	Argument	& p		328717	1					
ANR	329959	UnaryOperationExpression	& p		328717	0					
ANR	329960	UnaryOperator	&		328717	0					
ANR	329961	Identifier	p		328717	1					
ANR	329962	IfStatement	if ( localRet != RS_RET_OK )		328717	7					
ANR	329963	Condition	localRet != RS_RET_OK	2032:6:66115:66135	328717	0	True				
ANR	329964	EqualityExpression	localRet != RS_RET_OK		328717	0		!=			
ANR	329965	Identifier	localRet		328717	0					
ANR	329966	Identifier	RS_RET_OK		328717	1					
ANR	329967	CompoundStatement		177:29:5658:5658	328717	1					
ANR	329968	Statement	errmsg	2033:4:66144:66149	328717	0	True				
ANR	329969	Statement	.	2033:10:66150:66150	328717	1	True				
ANR	329970	Statement	LogError	2033:11:66151:66158	328717	2	True				
ANR	329971	Statement	(	2033:19:66159:66159	328717	3	True				
ANR	329972	Statement	0	2033:20:66160:66160	328717	4	True				
ANR	329973	Statement	","	2033:21:66161:66161	328717	5	True				
ANR	329974	Statement	localRet	2033:23:66163:66170	328717	6	True				
ANR	329975	Statement	","	2033:31:66171:66171	328717	7	True				
ANR	329976	Statement	"""template '%s': error %d """	2033:33:66173:66198	328717	8	True				
ANR	329977	Statement	"""defining template via plugin (strgen) module"""	2034:6:66206:66251	328717	9	True				
ANR	329978	Statement	","	2034:52:66252:66252	328717	10	True				
ANR	329979	Statement	pTpl	2035:6:66260:66263	328717	11	True				
ANR	329980	Statement	->	2035:10:66264:66265	328717	12	True				
ANR	329981	Statement	pszName	2035:12:66266:66272	328717	13	True				
ANR	329982	Statement	","	2035:19:66273:66273	328717	14	True				
ANR	329983	Statement	localRet	2035:21:66275:66282	328717	15	True				
ANR	329984	Statement	)	2035:29:66283:66283	328717	16	True				
ANR	329985	ExpressionStatement		2035:30:66284:66284	328717	17	True				
ANR	329986	ExpressionStatement	ABORT_FINALIZE ( localRet )	2036:4:66290:66314	328717	18	True				
ANR	329987	CallExpression	ABORT_FINALIZE ( localRet )		328717	0					
ANR	329988	Callee	ABORT_FINALIZE		328717	0					
ANR	329989	Identifier	ABORT_FINALIZE		328717	0					
ANR	329990	ArgumentList	localRet		328717	1					
ANR	329991	Argument	localRet		328717	0					
ANR	329992	Identifier	localRet		328717	0					
ANR	329993	BreakStatement	break ;	2038:3:66324:66329	328717	8	True				
ANR	329994	Label	case T_LIST :	2039:1:66332:66343	328717	9	True				
ANR	329995	Identifier	T_LIST		328717	0					
ANR	329996	ExpressionStatement	"createListTpl ( pTpl , o )"	2039:14:66345:66367	328717	10	True				
ANR	329997	CallExpression	"createListTpl ( pTpl , o )"		328717	0					
ANR	329998	Callee	createListTpl		328717	0					
ANR	329999	Identifier	createListTpl		328717	0					
ANR	330000	ArgumentList	pTpl		328717	1					
ANR	330001	Argument	pTpl		328717	0					
ANR	330002	Identifier	pTpl		328717	0					
ANR	330003	Argument	o		328717	1					
ANR	330004	Identifier	o		328717	0					
ANR	330005	BreakStatement	break ;	2040:3:66372:66377	328717	11	True				
ANR	330006	Label	case T_SUBTREE :	2041:1:66380:66394	328717	12	True				
ANR	330007	Identifier	T_SUBTREE		328717	0					
ANR	330008	ExpressionStatement	"memcpy ( & pTpl -> subtree , & subtree , sizeof ( msgPropDescr_t ) )"	2041:17:66396:66452	328717	13	True				
ANR	330009	CallExpression	"memcpy ( & pTpl -> subtree , & subtree , sizeof ( msgPropDescr_t ) )"		328717	0					
ANR	330010	Callee	memcpy		328717	0					
ANR	330011	Identifier	memcpy		328717	0					
ANR	330012	ArgumentList	& pTpl -> subtree		328717	1					
ANR	330013	Argument	& pTpl -> subtree		328717	0					
ANR	330014	UnaryOperationExpression	& pTpl -> subtree		328717	0					
ANR	330015	UnaryOperator	&		328717	0					
ANR	330016	PtrMemberAccess	pTpl -> subtree		328717	1					
ANR	330017	Identifier	pTpl		328717	0					
ANR	330018	Identifier	subtree		328717	1					
ANR	330019	Argument	& subtree		328717	1					
ANR	330020	UnaryOperationExpression	& subtree		328717	0					
ANR	330021	UnaryOperator	&		328717	0					
ANR	330022	Identifier	subtree		328717	1					
ANR	330023	Argument	sizeof ( msgPropDescr_t )		328717	2					
ANR	330024	SizeofExpression	sizeof ( msgPropDescr_t )		328717	0					
ANR	330025	Sizeof	sizeof		328717	0					
ANR	330026	SizeofOperand	msgPropDescr_t		328717	1					
ANR	330027	ExpressionStatement	pTpl -> bHaveSubtree = 1	2042:3:66457:66479	328717	14	True				
ANR	330028	AssignmentExpression	pTpl -> bHaveSubtree = 1		328717	0		=			
ANR	330029	PtrMemberAccess	pTpl -> bHaveSubtree		328717	0					
ANR	330030	Identifier	pTpl		328717	0					
ANR	330031	Identifier	bHaveSubtree		328717	1					
ANR	330032	PrimaryExpression	1		328717	1					
ANR	330033	BreakStatement	break ;	2043:3:66484:66489	328717	15	True				
ANR	330034	ExpressionStatement	pTpl -> optFormatEscape = NO_ESCAPE	2046:1:66497:66530	328717	35	True				
ANR	330035	AssignmentExpression	pTpl -> optFormatEscape = NO_ESCAPE		328717	0		=			
ANR	330036	PtrMemberAccess	pTpl -> optFormatEscape		328717	0					
ANR	330037	Identifier	pTpl		328717	0					
ANR	330038	Identifier	optFormatEscape		328717	1					
ANR	330039	Identifier	NO_ESCAPE		328717	1					
ANR	330040	IfStatement	if ( o_stdsql )		328717	36					
ANR	330041	Condition	o_stdsql	2047:4:66536:66543	328717	0	True				
ANR	330042	Identifier	o_stdsql		328717	0					
ANR	330043	ExpressionStatement	pTpl -> optFormatEscape = STDSQL_ESCAPE	2048:2:66548:66585	328717	1	True				
ANR	330044	AssignmentExpression	pTpl -> optFormatEscape = STDSQL_ESCAPE		328717	0		=			
ANR	330045	PtrMemberAccess	pTpl -> optFormatEscape		328717	0					
ANR	330046	Identifier	pTpl		328717	0					
ANR	330047	Identifier	optFormatEscape		328717	1					
ANR	330048	Identifier	STDSQL_ESCAPE		328717	1					
ANR	330049	ElseStatement	else		328717	0					
ANR	330050	IfStatement	if ( o_sql )		328717	0					
ANR	330051	Condition	o_sql	2049:9:66596:66600	328717	0	True				
ANR	330052	Identifier	o_sql		328717	0					
ANR	330053	ExpressionStatement	pTpl -> optFormatEscape = SQL_ESCAPE	2050:2:66605:66639	328717	1	True				
ANR	330054	AssignmentExpression	pTpl -> optFormatEscape = SQL_ESCAPE		328717	0		=			
ANR	330055	PtrMemberAccess	pTpl -> optFormatEscape		328717	0					
ANR	330056	Identifier	pTpl		328717	0					
ANR	330057	Identifier	optFormatEscape		328717	1					
ANR	330058	Identifier	SQL_ESCAPE		328717	1					
ANR	330059	ElseStatement	else		328717	0					
ANR	330060	IfStatement	if ( o_json )		328717	0					
ANR	330061	Condition	o_json	2051:9:66650:66655	328717	0	True				
ANR	330062	Identifier	o_json		328717	0					
ANR	330063	ExpressionStatement	pTpl -> optFormatEscape = JSON_ESCAPE	2052:2:66660:66695	328717	1	True				
ANR	330064	AssignmentExpression	pTpl -> optFormatEscape = JSON_ESCAPE		328717	0		=			
ANR	330065	PtrMemberAccess	pTpl -> optFormatEscape		328717	0					
ANR	330066	Identifier	pTpl		328717	0					
ANR	330067	Identifier	optFormatEscape		328717	1					
ANR	330068	Identifier	JSON_ESCAPE		328717	1					
ANR	330069	IfStatement	if ( o_casesensitive )		328717	37					
ANR	330070	Condition	o_casesensitive	2054:4:66702:66716	328717	0	True				
ANR	330071	Identifier	o_casesensitive		328717	0					
ANR	330072	ExpressionStatement	pTpl -> optCaseSensitive = 1	2055:2:66721:66747	328717	1	True				
ANR	330073	AssignmentExpression	pTpl -> optCaseSensitive = 1		328717	0		=			
ANR	330074	PtrMemberAccess	pTpl -> optCaseSensitive		328717	0					
ANR	330075	Identifier	pTpl		328717	0					
ANR	330076	Identifier	optCaseSensitive		328717	1					
ANR	330077	PrimaryExpression	1		328717	1					
ANR	330078	ExpressionStatement	apply_case_sensitivity ( pTpl )	2056:1:66750:66778	328717	38	True				
ANR	330079	CallExpression	apply_case_sensitivity ( pTpl )		328717	0					
ANR	330080	Callee	apply_case_sensitivity		328717	0					
ANR	330081	Identifier	apply_case_sensitivity		328717	0					
ANR	330082	ArgumentList	pTpl		328717	1					
ANR	330083	Argument	pTpl		328717	0					
ANR	330084	Identifier	pTpl		328717	0					
ANR	330085	Label	finalize_it :	2057:0:66780:66791	328717	39	True				
ANR	330086	Identifier	finalize_it		328717	0					
ANR	330087	ExpressionStatement	free ( tplStr )	2058:1:66794:66806	328717	40	True				
ANR	330088	CallExpression	free ( tplStr )		328717	0					
ANR	330089	Callee	free		328717	0					
ANR	330090	Identifier	free		328717	0					
ANR	330091	ArgumentList	tplStr		328717	1					
ANR	330092	Argument	tplStr		328717	0					
ANR	330093	Identifier	tplStr		328717	0					
ANR	330094	ExpressionStatement	free ( plugin )	2059:1:66809:66821	328717	41	True				
ANR	330095	CallExpression	free ( plugin )		328717	0					
ANR	330096	Callee	free		328717	0					
ANR	330097	Identifier	free		328717	0					
ANR	330098	ArgumentList	plugin		328717	1					
ANR	330099	Argument	plugin		328717	0					
ANR	330100	Identifier	plugin		328717	0					
ANR	330101	IfStatement	if ( pvals != NULL )		328717	42					
ANR	330102	Condition	pvals != NULL	2060:4:66827:66839	328717	0	True				
ANR	330103	EqualityExpression	pvals != NULL		328717	0		!=			
ANR	330104	Identifier	pvals		328717	0					
ANR	330105	Identifier	NULL		328717	1					
ANR	330106	ExpressionStatement	"cnfparamvalsDestruct ( pvals , & pblk )"	2061:2:66844:66878	328717	1	True				
ANR	330107	CallExpression	"cnfparamvalsDestruct ( pvals , & pblk )"		328717	0					
ANR	330108	Callee	cnfparamvalsDestruct		328717	0					
ANR	330109	Identifier	cnfparamvalsDestruct		328717	0					
ANR	330110	ArgumentList	pvals		328717	1					
ANR	330111	Argument	pvals		328717	0					
ANR	330112	Identifier	pvals		328717	0					
ANR	330113	Argument	& pblk		328717	1					
ANR	330114	UnaryOperationExpression	& pblk		328717	0					
ANR	330115	UnaryOperator	&		328717	0					
ANR	330116	Identifier	pblk		328717	1					
ANR	330117	IfStatement	if ( iRet != RS_RET_OK )		328717	43					
ANR	330118	Condition	iRet != RS_RET_OK	2062:4:66884:66900	328717	0	True				
ANR	330119	EqualityExpression	iRet != RS_RET_OK		328717	0		!=			
ANR	330120	Identifier	iRet		328717	0					
ANR	330121	Identifier	RS_RET_OK		328717	1					
ANR	330122	CompoundStatement		207:23:6423:6423	328717	1					
ANR	330123	IfStatement	if ( pTpl != NULL )		328717	0					
ANR	330124	Condition	pTpl != NULL	2063:5:66910:66921	328717	0	True				
ANR	330125	EqualityExpression	pTpl != NULL		328717	0		!=			
ANR	330126	Identifier	pTpl		328717	0					
ANR	330127	Identifier	NULL		328717	1					
ANR	330128	CompoundStatement		208:19:6444:6444	328717	1					
ANR	330129	ExpressionStatement	* pTpl -> pszName = '\\0'	2069:3:67186:67207	328717	0	True				
ANR	330130	AssignmentExpression	* pTpl -> pszName = '\\0'		328717	0		=			
ANR	330131	UnaryOperationExpression	* pTpl -> pszName		328717	0					
ANR	330132	UnaryOperator	*		328717	0					
ANR	330133	PtrMemberAccess	pTpl -> pszName		328717	1					
ANR	330134	Identifier	pTpl		328717	0					
ANR	330135	Identifier	pszName		328717	1					
ANR	330136	PrimaryExpression	'\\0'		328717	1					
ANR	330137	ExpressionStatement	RETiRet	2073:1:67218:67225	328717	44	True				
ANR	330138	Identifier	RETiRet		328717	0					
ANR	330139	ReturnType	rsRetVal		328717	1					
ANR	330140	Identifier	tplProcessCnf		328717	2					
ANR	330141	ParameterList	struct cnfobj * o		328717	3					
ANR	330142	Parameter	struct cnfobj * o	1855:14:60461:60476	328717	0	True				
ANR	330143	ParameterType	struct cnfobj *		328717	0					
ANR	330144	Identifier	o		328717	1					
ANR	330145	CFGEntryNode	ENTRY		328717		True				
ANR	330146	CFGExitNode	EXIT		328717		True				
ANR	330147	Symbol	pvals [ i ] . val . d . estr		328717						
ANR	330148	Symbol	pvals		328717						
ANR	330149	Symbol	* pblk		328717						
ANR	330150	Symbol	RS_RET_ERR		328717						
ANR	330151	Symbol	msgPropDescrFill		328717						
ANR	330152	Symbol	NO_ESCAPE		328717						
ANR	330153	Symbol	* st_str		328717						
ANR	330154	Symbol	es_str2cstr		328717						
ANR	330155	Symbol	tplConstruct		328717						
ANR	330156	Symbol	o -> subobjs		328717						
ANR	330157	Symbol	* * pTpl		328717						
ANR	330158	Symbol	es_strlen		328717						
ANR	330159	Symbol	& subtree		328717						
ANR	330160	Symbol	T_LIST		328717						
ANR	330161	Symbol	SQL_ESCAPE		328717						
ANR	330162	Symbol	st_str		328717						
ANR	330163	Symbol	strcmp		328717						
ANR	330164	Symbol	NULL		328717						
ANR	330165	Symbol	RS_RET_OK		328717						
ANR	330166	Symbol	es_strbufcmp		328717						
ANR	330167	Symbol	errmsg		328717						
ANR	330168	Symbol	pvals [ i ] . val . d		328717						
ANR	330169	Symbol	nvlstGetParams		328717						
ANR	330170	Symbol	T_SUBTREE		328717						
ANR	330171	Symbol	* pvals		328717						
ANR	330172	Symbol	typeStr		328717						
ANR	330173	Symbol	* pTpl		328717						
ANR	330174	Symbol	o_sql		328717						
ANR	330175	Symbol	name		328717						
ANR	330176	Symbol	JSON_ESCAPE		328717						
ANR	330177	Symbol	cstr		328717						
ANR	330178	Symbol	tplType		328717						
ANR	330179	Symbol	STDSQL_ESCAPE		328717						
ANR	330180	Symbol	pblk		328717						
ANR	330181	Symbol	pTpl -> pszName		328717						
ANR	330182	Symbol	iRet		328717						
ANR	330183	Symbol	o_casesensitive		328717						
ANR	330184	Symbol	pblk . descr		328717						
ANR	330185	Symbol	es_getBufAddr		328717						
ANR	330186	Symbol	pvals [ i ] . val . d . n		328717						
ANR	330187	Symbol	loadConf		328717						
ANR	330188	Symbol	T_PLUGIN		328717						
ANR	330189	Symbol	pTpl		328717						
ANR	330190	Symbol	pvals [ i ] . bUsed		328717						
ANR	330191	Symbol	& pTpl -> subtree		328717						
ANR	330192	Symbol	pblk . descr [ i ] . name		328717						
ANR	330193	Symbol	pTpl -> optCaseSensitive		328717						
ANR	330194	Symbol	tplAddTplMod		328717						
ANR	330195	Symbol	bHaveSubtree		328717						
ANR	330196	Symbol	& pblk		328717						
ANR	330197	Symbol	pblk . nParams		328717						
ANR	330198	Symbol	T_STRING		328717						
ANR	330199	Symbol	pTpl -> optFormatEscape		328717						
ANR	330200	Symbol	pvals [ i ] . val		328717						
ANR	330201	Symbol	i		328717						
ANR	330202	Symbol	do_Parameter		328717						
ANR	330203	Symbol	pTpl -> bHaveSubtree		328717						
ANR	330204	Symbol	lenName		328717						
ANR	330205	Symbol	o_json		328717						
ANR	330206	Symbol	numopts		328717						
ANR	330207	Symbol	o		328717						
ANR	330208	Symbol	tplStr		328717						
ANR	330209	Symbol	p		328717						
ANR	330210	Symbol	subtree		328717						
ANR	330211	Symbol	* i		328717						
ANR	330212	Symbol	* pTpl -> pszName		328717						
ANR	330213	Symbol	plugin		328717						
ANR	330214	Symbol	& p		328717						
ANR	330215	Symbol	ustrlen		328717						
ANR	330216	Symbol	* pblk . descr		328717						
ANR	330217	Symbol	* o		328717						
ANR	330218	Symbol	pTpl -> iLenName		328717						
ANR	330219	Symbol	o_stdsql		328717						
ANR	330220	Symbol	o -> nvlst		328717						
ANR	330221	Symbol	* p		328717						
ANR	330222	Symbol	localRet		328717						
ANR	330223	Function	tplFind	2083:17:67446:67738							
ANR	330224	FunctionDef	"tplFind (rsconf_t * conf , char * pName , int iLenName)"		330223	0					
ANR	330225	CompoundStatement		2084:0:67497:67738	330223	0					
ANR	330226	Statement	struct	2085:1:67500:67505	330223	0	True				
ANR	330227	Statement	template	2085:8:67507:67514	330223	1	True				
ANR	330228	ExpressionStatement	* pTpl	2085:17:67516:67521	330223	2	True				
ANR	330229	UnaryOperationExpression	* pTpl		330223	0					
ANR	330230	UnaryOperator	*		330223	0					
ANR	330231	Identifier	pTpl		330223	1					
ANR	330232	ExpressionStatement	assert ( pName != NULL )	2087:1:67525:67546	330223	3	True				
ANR	330233	CallExpression	assert ( pName != NULL )		330223	0					
ANR	330234	Callee	assert		330223	0					
ANR	330235	Identifier	assert		330223	0					
ANR	330236	ArgumentList	pName != NULL		330223	1					
ANR	330237	Argument	pName != NULL		330223	0					
ANR	330238	EqualityExpression	pName != NULL		330223	0		!=			
ANR	330239	Identifier	pName		330223	0					
ANR	330240	Identifier	NULL		330223	1					
ANR	330241	ExpressionStatement	pTpl = conf -> templates . root	2089:1:67550:67577	330223	4	True				
ANR	330242	AssignmentExpression	pTpl = conf -> templates . root		330223	0		=			
ANR	330243	Identifier	pTpl		330223	0					
ANR	330244	MemberAccess	conf -> templates . root		330223	1					
ANR	330245	PtrMemberAccess	conf -> templates		330223	0					
ANR	330246	Identifier	conf		330223	0					
ANR	330247	Identifier	templates		330223	1					
ANR	330248	Identifier	root		330223	1					
ANR	330249	WhileStatement	"while ( pTpl != NULL && ! ( pTpl -> iLenName == iLenName && ! strcmp ( pTpl -> pszName , pName ) ) )"		330223	5					
ANR	330250	Condition	"pTpl != NULL && ! ( pTpl -> iLenName == iLenName && ! strcmp ( pTpl -> pszName , pName ) )"	2090:7:67586:67689	330223	0	True				
ANR	330251	AndExpression	"pTpl != NULL && ! ( pTpl -> iLenName == iLenName && ! strcmp ( pTpl -> pszName , pName ) )"		330223	0		&&			
ANR	330252	EqualityExpression	pTpl != NULL		330223	0		!=			
ANR	330253	Identifier	pTpl		330223	0					
ANR	330254	Identifier	NULL		330223	1					
ANR	330255	UnaryOperationExpression	"! ( pTpl -> iLenName == iLenName && ! strcmp ( pTpl -> pszName , pName ) )"		330223	1					
ANR	330256	UnaryOperator	!		330223	0					
ANR	330257	AndExpression	"pTpl -> iLenName == iLenName && ! strcmp ( pTpl -> pszName , pName )"		330223	1		&&			
ANR	330258	EqualityExpression	pTpl -> iLenName == iLenName		330223	0		==			
ANR	330259	PtrMemberAccess	pTpl -> iLenName		330223	0					
ANR	330260	Identifier	pTpl		330223	0					
ANR	330261	Identifier	iLenName		330223	1					
ANR	330262	Identifier	iLenName		330223	1					
ANR	330263	UnaryOperationExpression	"! strcmp ( pTpl -> pszName , pName )"		330223	1					
ANR	330264	UnaryOperator	!		330223	0					
ANR	330265	CallExpression	"strcmp ( pTpl -> pszName , pName )"		330223	1					
ANR	330266	Callee	strcmp		330223	0					
ANR	330267	Identifier	strcmp		330223	0					
ANR	330268	ArgumentList	pTpl -> pszName		330223	1					
ANR	330269	Argument	pTpl -> pszName		330223	0					
ANR	330270	PtrMemberAccess	pTpl -> pszName		330223	0					
ANR	330271	Identifier	pTpl		330223	0					
ANR	330272	Identifier	pszName		330223	1					
ANR	330273	Argument	pName		330223	1					
ANR	330274	Identifier	pName		330223	0					
ANR	330275	CompoundStatement		11:2:196:196	330223	1					
ANR	330276	ExpressionStatement	pTpl = pTpl -> pNext	2095:3:67699:67717	330223	0	True				
ANR	330277	AssignmentExpression	pTpl = pTpl -> pNext		330223	0		=			
ANR	330278	Identifier	pTpl		330223	0					
ANR	330279	PtrMemberAccess	pTpl -> pNext		330223	1					
ANR	330280	Identifier	pTpl		330223	0					
ANR	330281	Identifier	pNext		330223	1					
ANR	330282	ReturnStatement	return ( pTpl ) ;	2097:1:67724:67736	330223	6	True				
ANR	330283	Identifier	pTpl		330223	0					
ANR	330284	Identifier	tplFind		330223	1					
ANR	330285	ParameterList	"rsconf_t * conf , char * pName , int iLenName"		330223	2					
ANR	330286	Parameter	rsconf_t * conf	2083:25:67454:67467	330223	0	True				
ANR	330287	ParameterType	rsconf_t *		330223	0					
ANR	330288	Identifier	conf		330223	1					
ANR	330289	Parameter	char * pName	2083:41:67470:67480	330223	1	True				
ANR	330290	ParameterType	char *		330223	0					
ANR	330291	Identifier	pName		330223	1					
ANR	330292	Parameter	int iLenName	2083:54:67483:67494	330223	2	True				
ANR	330293	ParameterType	int		330223	0					
ANR	330294	Identifier	iLenName		330223	1					
ANR	330295	CFGEntryNode	ENTRY		330223		True				
ANR	330296	CFGExitNode	EXIT		330223		True				
ANR	330297	Symbol	strcmp		330223						
ANR	330298	Symbol	pTpl -> pNext		330223						
ANR	330299	Symbol	NULL		330223						
ANR	330300	Symbol	conf -> templates		330223						
ANR	330301	Symbol	* conf		330223						
ANR	330302	Symbol	pTpl -> pszName		330223						
ANR	330303	Symbol	conf		330223						
ANR	330304	Symbol	pName		330223						
ANR	330305	Symbol	pTpl		330223						
ANR	330306	Symbol	* pTpl		330223						
ANR	330307	Symbol	iLenName		330223						
ANR	330308	Symbol	pTpl -> iLenName		330223						
ANR	330309	Symbol	conf -> templates . root		330223						
ANR	330310	Function	tplDeleteAll	2107:0:68028:69322							
ANR	330311	FunctionDef	tplDeleteAll (rsconf_t * conf)		330310	0					
ANR	330312	CompoundStatement		2108:0:68062:69322	330310	0					
ANR	330313	Statement	struct	2109:1:68065:68070	330310	0	True				
ANR	330314	Statement	template	2109:8:68072:68079	330310	1	True				
ANR	330315	ExpressionStatement	"* pTpl , * pTplDel"	2109:17:68081:68096	330310	2	True				
ANR	330316	Expression	"* pTpl , * pTplDel"		330310	0					
ANR	330317	UnaryOperationExpression	* pTpl		330310	0					
ANR	330318	UnaryOperator	*		330310	0					
ANR	330319	Identifier	pTpl		330310	1					
ANR	330320	UnaryOperationExpression	* pTplDel		330310	1					
ANR	330321	UnaryOperator	*		330310	0					
ANR	330322	Identifier	pTplDel		330310	1					
ANR	330323	IdentifierDeclStatement	"struct templateEntry * pTpe , * pTpeDel ;"	2110:1:68099:68135	330310	3	True				
ANR	330324	IdentifierDecl	* pTpe		330310	0					
ANR	330325	IdentifierDeclType	struct templateEntry *		330310	0					
ANR	330326	Identifier	pTpe		330310	1					
ANR	330327	IdentifierDecl	* pTpeDel		330310	1					
ANR	330328	IdentifierDeclType	struct templateEntry *		330310	0					
ANR	330329	Identifier	pTpeDel		330310	1					
ANR	330330	IdentifierDeclStatement	BEGINfunc pTpl = conf -> templates . root ;	2111:1:68138:68177	330310	4	True				
ANR	330331	IdentifierDecl	pTpl = conf -> templates . root		330310	0					
ANR	330332	IdentifierDeclType	BEGINfunc		330310	0					
ANR	330333	Identifier	pTpl		330310	1					
ANR	330334	AssignmentExpression	pTpl = conf -> templates . root		330310	2		=			
ANR	330335	Identifier	pTpl		330310	0					
ANR	330336	MemberAccess	conf -> templates . root		330310	1					
ANR	330337	PtrMemberAccess	conf -> templates		330310	0					
ANR	330338	Identifier	conf		330310	0					
ANR	330339	Identifier	templates		330310	1					
ANR	330340	Identifier	root		330310	1					
ANR	330341	WhileStatement	while ( pTpl != NULL )		330310	5					
ANR	330342	Condition	pTpl != NULL	2114:7:68186:68197	330310	0	True				
ANR	330343	EqualityExpression	pTpl != NULL		330310	0		!=			
ANR	330344	Identifier	pTpl		330310	0					
ANR	330345	Identifier	NULL		330310	1					
ANR	330346	CompoundStatement		7:21:137:137	330310	1					
ANR	330347	ExpressionStatement	pTpe = pTpl -> pEntryRoot	2116:2:68302:68325	330310	0	True				
ANR	330348	AssignmentExpression	pTpe = pTpl -> pEntryRoot		330310	0		=			
ANR	330349	Identifier	pTpe		330310	0					
ANR	330350	PtrMemberAccess	pTpl -> pEntryRoot		330310	1					
ANR	330351	Identifier	pTpl		330310	0					
ANR	330352	Identifier	pEntryRoot		330310	1					
ANR	330353	WhileStatement	while ( pTpe != NULL )		330310	1					
ANR	330354	Condition	pTpe != NULL	2117:8:68335:68346	330310	0	True				
ANR	330355	EqualityExpression	pTpe != NULL		330310	0		!=			
ANR	330356	Identifier	pTpe		330310	0					
ANR	330357	Identifier	NULL		330310	1					
ANR	330358	CompoundStatement		10:22:286:286	330310	1					
ANR	330359	ExpressionStatement	pTpeDel = pTpe	2118:3:68354:68368	330310	0	True				
ANR	330360	AssignmentExpression	pTpeDel = pTpe		330310	0		=			
ANR	330361	Identifier	pTpeDel		330310	0					
ANR	330362	Identifier	pTpe		330310	1					
ANR	330363	ExpressionStatement	pTpe = pTpe -> pNext	2119:3:68373:68391	330310	1	True				
ANR	330364	AssignmentExpression	pTpe = pTpe -> pNext		330310	0		=			
ANR	330365	Identifier	pTpe		330310	0					
ANR	330366	PtrMemberAccess	pTpe -> pNext		330310	1					
ANR	330367	Identifier	pTpe		330310	0					
ANR	330368	Identifier	pNext		330310	1					
ANR	330369	SwitchStatement	switch ( pTpeDel -> eEntryType )		330310	2					
ANR	330370	Condition	pTpeDel -> eEntryType	2121:10:68495:68513	330310	0	True				
ANR	330371	PtrMemberAccess	pTpeDel -> eEntryType		330310	0					
ANR	330372	Identifier	pTpeDel		330310	0					
ANR	330373	Identifier	eEntryType		330310	1					
ANR	330374	CompoundStatement		14:31:453:453	330310	1					
ANR	330375	Label	case UNDEFINED :	2122:3:68521:68535	330310	0	True				
ANR	330376	Identifier	UNDEFINED		330310	0					
ANR	330377	BreakStatement	break ;	2124:4:68575:68580	330310	1	True				
ANR	330378	Label	case CONSTANT :	2125:3:68585:68598	330310	2	True				
ANR	330379	Identifier	CONSTANT		330310	0					
ANR	330380	ExpressionStatement	free ( pTpeDel -> data . constant . pConstant )	2128:4:68689:68727	330310	3	True				
ANR	330381	CallExpression	free ( pTpeDel -> data . constant . pConstant )		330310	0					
ANR	330382	Callee	free		330310	0					
ANR	330383	Identifier	free		330310	0					
ANR	330384	ArgumentList	pTpeDel -> data . constant . pConstant		330310	1					
ANR	330385	Argument	pTpeDel -> data . constant . pConstant		330310	0					
ANR	330386	MemberAccess	pTpeDel -> data . constant . pConstant		330310	0					
ANR	330387	MemberAccess	pTpeDel -> data . constant		330310	0					
ANR	330388	PtrMemberAccess	pTpeDel -> data		330310	0					
ANR	330389	Identifier	pTpeDel		330310	0					
ANR	330390	Identifier	data		330310	1					
ANR	330391	Identifier	constant		330310	1					
ANR	330392	Identifier	pConstant		330310	1					
ANR	330393	BreakStatement	break ;	2129:4:68733:68738	330310	4	True				
ANR	330394	Label	case FIELD :	2130:3:68743:68753	330310	5	True				
ANR	330395	Identifier	FIELD		330310	0					
ANR	330396	IfStatement	if ( pTpeDel -> data . field . has_regex != 0 )		330310	6					
ANR	330397	Condition	pTpeDel -> data . field . has_regex != 0	2133:7:68842:68875	330310	0	True				
ANR	330398	EqualityExpression	pTpeDel -> data . field . has_regex != 0		330310	0		!=			
ANR	330399	MemberAccess	pTpeDel -> data . field . has_regex		330310	0					
ANR	330400	MemberAccess	pTpeDel -> data . field		330310	0					
ANR	330401	PtrMemberAccess	pTpeDel -> data		330310	0					
ANR	330402	Identifier	pTpeDel		330310	0					
ANR	330403	Identifier	data		330310	1					
ANR	330404	Identifier	field		330310	1					
ANR	330405	Identifier	has_regex		330310	1					
ANR	330406	PrimaryExpression	0		330310	1					
ANR	330407	CompoundStatement		26:43:815:815	330310	1					
ANR	330408	IfStatement	"if ( objUse ( regexp , LM_REGEXP_FILENAME ) == RS_RET_OK )"		330310	0					
ANR	330409	Condition	"objUse ( regexp , LM_REGEXP_FILENAME ) == RS_RET_OK"	2134:8:68888:68934	330310	0	True				
ANR	330410	EqualityExpression	"objUse ( regexp , LM_REGEXP_FILENAME ) == RS_RET_OK"		330310	0		==			
ANR	330411	CallExpression	"objUse ( regexp , LM_REGEXP_FILENAME )"		330310	0					
ANR	330412	Callee	objUse		330310	0					
ANR	330413	Identifier	objUse		330310	0					
ANR	330414	ArgumentList	regexp		330310	1					
ANR	330415	Argument	regexp		330310	0					
ANR	330416	Identifier	regexp		330310	0					
ANR	330417	Argument	LM_REGEXP_FILENAME		330310	1					
ANR	330418	Identifier	LM_REGEXP_FILENAME		330310	0					
ANR	330419	Identifier	RS_RET_OK		330310	1					
ANR	330420	CompoundStatement		27:57:874:874	330310	1					
ANR	330421	ExpressionStatement	regexp . regfree ( & ( pTpeDel -> data . field . re ) )	2135:6:68945:68986	330310	0	True				
ANR	330422	CallExpression	regexp . regfree ( & ( pTpeDel -> data . field . re ) )		330310	0					
ANR	330423	Callee	regexp . regfree		330310	0					
ANR	330424	MemberAccess	regexp . regfree		330310	0					
ANR	330425	Identifier	regexp		330310	0					
ANR	330426	Identifier	regfree		330310	1					
ANR	330427	ArgumentList	& ( pTpeDel -> data . field . re )		330310	1					
ANR	330428	Argument	& ( pTpeDel -> data . field . re )		330310	0					
ANR	330429	UnaryOperationExpression	& ( pTpeDel -> data . field . re )		330310	0					
ANR	330430	UnaryOperator	&		330310	0					
ANR	330431	MemberAccess	pTpeDel -> data . field . re		330310	1					
ANR	330432	MemberAccess	pTpeDel -> data . field		330310	0					
ANR	330433	PtrMemberAccess	pTpeDel -> data		330310	0					
ANR	330434	Identifier	pTpeDel		330310	0					
ANR	330435	Identifier	data		330310	1					
ANR	330436	Identifier	field		330310	1					
ANR	330437	Identifier	re		330310	1					
ANR	330438	ExpressionStatement	msgPropDescrDestruct ( & pTpeDel -> data . field . msgProp )	2139:4:69012:69062	330310	7	True				
ANR	330439	CallExpression	msgPropDescrDestruct ( & pTpeDel -> data . field . msgProp )		330310	0					
ANR	330440	Callee	msgPropDescrDestruct		330310	0					
ANR	330441	Identifier	msgPropDescrDestruct		330310	0					
ANR	330442	ArgumentList	& pTpeDel -> data . field . msgProp		330310	1					
ANR	330443	Argument	& pTpeDel -> data . field . msgProp		330310	0					
ANR	330444	UnaryOperationExpression	& pTpeDel -> data . field . msgProp		330310	0					
ANR	330445	UnaryOperator	&		330310	0					
ANR	330446	MemberAccess	pTpeDel -> data . field . msgProp		330310	1					
ANR	330447	MemberAccess	pTpeDel -> data . field		330310	0					
ANR	330448	PtrMemberAccess	pTpeDel -> data		330310	0					
ANR	330449	Identifier	pTpeDel		330310	0					
ANR	330450	Identifier	data		330310	1					
ANR	330451	Identifier	field		330310	1					
ANR	330452	Identifier	msgProp		330310	1					
ANR	330453	BreakStatement	break ;	2140:4:69068:69073	330310	8	True				
ANR	330454	ExpressionStatement	free ( pTpeDel -> fieldName )	2142:3:69083:69107	330310	3	True				
ANR	330455	CallExpression	free ( pTpeDel -> fieldName )		330310	0					
ANR	330456	Callee	free		330310	0					
ANR	330457	Identifier	free		330310	0					
ANR	330458	ArgumentList	pTpeDel -> fieldName		330310	1					
ANR	330459	Argument	pTpeDel -> fieldName		330310	0					
ANR	330460	PtrMemberAccess	pTpeDel -> fieldName		330310	0					
ANR	330461	Identifier	pTpeDel		330310	0					
ANR	330462	Identifier	fieldName		330310	1					
ANR	330463	ExpressionStatement	free ( pTpeDel )	2144:3:69136:69149	330310	4	True				
ANR	330464	CallExpression	free ( pTpeDel )		330310	0					
ANR	330465	Callee	free		330310	0					
ANR	330466	Identifier	free		330310	0					
ANR	330467	ArgumentList	pTpeDel		330310	1					
ANR	330468	Argument	pTpeDel		330310	0					
ANR	330469	Identifier	pTpeDel		330310	0					
ANR	330470	ExpressionStatement	pTplDel = pTpl	2146:2:69157:69171	330310	2	True				
ANR	330471	AssignmentExpression	pTplDel = pTpl		330310	0		=			
ANR	330472	Identifier	pTplDel		330310	0					
ANR	330473	Identifier	pTpl		330310	1					
ANR	330474	ExpressionStatement	pTpl = pTpl -> pNext	2147:2:69175:69193	330310	3	True				
ANR	330475	AssignmentExpression	pTpl = pTpl -> pNext		330310	0		=			
ANR	330476	Identifier	pTpl		330310	0					
ANR	330477	PtrMemberAccess	pTpl -> pNext		330310	1					
ANR	330478	Identifier	pTpl		330310	0					
ANR	330479	Identifier	pNext		330310	1					
ANR	330480	ExpressionStatement	free ( pTplDel -> pszName )	2148:2:69197:69219	330310	4	True				
ANR	330481	CallExpression	free ( pTplDel -> pszName )		330310	0					
ANR	330482	Callee	free		330310	0					
ANR	330483	Identifier	free		330310	0					
ANR	330484	ArgumentList	pTplDel -> pszName		330310	1					
ANR	330485	Argument	pTplDel -> pszName		330310	0					
ANR	330486	PtrMemberAccess	pTplDel -> pszName		330310	0					
ANR	330487	Identifier	pTplDel		330310	0					
ANR	330488	Identifier	pszName		330310	1					
ANR	330489	IfStatement	if ( pTplDel -> bHaveSubtree )		330310	5					
ANR	330490	Condition	pTplDel -> bHaveSubtree	2149:5:69226:69246	330310	0	True				
ANR	330491	PtrMemberAccess	pTplDel -> bHaveSubtree		330310	0					
ANR	330492	Identifier	pTplDel		330310	0					
ANR	330493	Identifier	bHaveSubtree		330310	1					
ANR	330494	ExpressionStatement	msgPropDescrDestruct ( & pTplDel -> subtree )	2150:3:69252:69291	330310	1	True				
ANR	330495	CallExpression	msgPropDescrDestruct ( & pTplDel -> subtree )		330310	0					
ANR	330496	Callee	msgPropDescrDestruct		330310	0					
ANR	330497	Identifier	msgPropDescrDestruct		330310	0					
ANR	330498	ArgumentList	& pTplDel -> subtree		330310	1					
ANR	330499	Argument	& pTplDel -> subtree		330310	0					
ANR	330500	UnaryOperationExpression	& pTplDel -> subtree		330310	0					
ANR	330501	UnaryOperator	&		330310	0					
ANR	330502	PtrMemberAccess	pTplDel -> subtree		330310	1					
ANR	330503	Identifier	pTplDel		330310	0					
ANR	330504	Identifier	subtree		330310	1					
ANR	330505	ExpressionStatement	free ( pTplDel )	2151:2:69295:69308	330310	6	True				
ANR	330506	CallExpression	free ( pTplDel )		330310	0					
ANR	330507	Callee	free		330310	0					
ANR	330508	Identifier	free		330310	0					
ANR	330509	ArgumentList	pTplDel		330310	1					
ANR	330510	Argument	pTplDel		330310	0					
ANR	330511	Identifier	pTplDel		330310	0					
ANR	330512	Statement	ENDfunc	2153:1:69314:69320	330310	6	True				
ANR	330513	ReturnType	void		330310	1					
ANR	330514	Identifier	tplDeleteAll		330310	2					
ANR	330515	ParameterList	rsconf_t * conf		330310	3					
ANR	330516	Parameter	rsconf_t * conf	2107:18:68046:68059	330310	0	True				
ANR	330517	ParameterType	rsconf_t *		330310	0					
ANR	330518	Identifier	conf		330310	1					
ANR	330519	CFGEntryNode	ENTRY		330310		True				
ANR	330520	CFGExitNode	EXIT		330310		True				
ANR	330521	Symbol	regexp		330310						
ANR	330522	Symbol	pTplDel -> pszName		330310						
ANR	330523	Symbol	pTpeDel -> data . constant		330310						
ANR	330524	Symbol	& pTpeDel -> data		330310						
ANR	330525	Symbol	* conf		330310						
ANR	330526	Symbol	conf		330310						
ANR	330527	Symbol	pTpe -> pNext		330310						
ANR	330528	Symbol	objUse		330310						
ANR	330529	Symbol	pTpl		330310						
ANR	330530	Symbol	pTpeDel -> data . field		330310						
ANR	330531	Symbol	pTpeDel -> data . field . has_regex		330310						
ANR	330532	Symbol	pTpeDel		330310						
ANR	330533	Symbol	* pTplDel		330310						
ANR	330534	Symbol	pTpeDel -> eEntryType		330310						
ANR	330535	Symbol	pTplDel -> bHaveSubtree		330310						
ANR	330536	Symbol	conf -> templates . root		330310						
ANR	330537	Symbol	LM_REGEXP_FILENAME		330310						
ANR	330538	Symbol	pTpl -> pNext		330310						
ANR	330539	Symbol	NULL		330310						
ANR	330540	Symbol	pTpeDel -> fieldName		330310						
ANR	330541	Symbol	pTplDel		330310						
ANR	330542	Symbol	RS_RET_OK		330310						
ANR	330543	Symbol	conf -> templates		330310						
ANR	330544	Symbol	pTpeDel -> data		330310						
ANR	330545	Symbol	& pTplDel -> subtree		330310						
ANR	330546	Symbol	& pTpeDel -> data . field . re		330310						
ANR	330547	Symbol	pTpe		330310						
ANR	330548	Symbol	* pTpe		330310						
ANR	330549	Symbol	& pTpeDel -> data . field . msgProp		330310						
ANR	330550	Symbol	* pTpl		330310						
ANR	330551	Symbol	* pTpeDel		330310						
ANR	330552	Symbol	pTpeDel -> data . constant . pConstant		330310						
ANR	330553	Symbol	pTpl -> pEntryRoot		330310						
ANR	330554	Symbol	& pTpeDel -> data . field		330310						
ANR	330555	Function	tplDeleteNew	2160:0:69437:70894							
ANR	330556	FunctionDef	tplDeleteNew (rsconf_t * conf)		330555	0					
ANR	330557	CompoundStatement		2161:0:69471:70894	330555	0					
ANR	330558	Statement	struct	2162:1:69474:69479	330555	0	True				
ANR	330559	Statement	template	2162:8:69481:69488	330555	1	True				
ANR	330560	ExpressionStatement	"* pTpl , * pTplDel"	2162:17:69490:69505	330555	2	True				
ANR	330561	Expression	"* pTpl , * pTplDel"		330555	0					
ANR	330562	UnaryOperationExpression	* pTpl		330555	0					
ANR	330563	UnaryOperator	*		330555	0					
ANR	330564	Identifier	pTpl		330555	1					
ANR	330565	UnaryOperationExpression	* pTplDel		330555	1					
ANR	330566	UnaryOperator	*		330555	0					
ANR	330567	Identifier	pTplDel		330555	1					
ANR	330568	IdentifierDeclStatement	"struct templateEntry * pTpe , * pTpeDel ;"	2163:1:69508:69544	330555	3	True				
ANR	330569	IdentifierDecl	* pTpe		330555	0					
ANR	330570	IdentifierDeclType	struct templateEntry *		330555	0					
ANR	330571	Identifier	pTpe		330555	1					
ANR	330572	IdentifierDecl	* pTpeDel		330555	1					
ANR	330573	IdentifierDeclType	struct templateEntry *		330555	0					
ANR	330574	Identifier	pTpeDel		330555	1					
ANR	330575	Statement	BEGINfunc	2165:1:69548:69556	330555	4	True				
ANR	330576	IfStatement	if ( conf -> templates . root == NULL || conf -> templates . lastStatic == NULL )		330555	5					
ANR	330577	Condition	conf -> templates . root == NULL || conf -> templates . lastStatic == NULL	2167:4:69563:69628	330555	0	True				
ANR	330578	OrExpression	conf -> templates . root == NULL || conf -> templates . lastStatic == NULL		330555	0		||			
ANR	330579	EqualityExpression	conf -> templates . root == NULL		330555	0		==			
ANR	330580	MemberAccess	conf -> templates . root		330555	0					
ANR	330581	PtrMemberAccess	conf -> templates		330555	0					
ANR	330582	Identifier	conf		330555	0					
ANR	330583	Identifier	templates		330555	1					
ANR	330584	Identifier	root		330555	1					
ANR	330585	Identifier	NULL		330555	1					
ANR	330586	EqualityExpression	conf -> templates . lastStatic == NULL		330555	1		==			
ANR	330587	MemberAccess	conf -> templates . lastStatic		330555	0					
ANR	330588	PtrMemberAccess	conf -> templates		330555	0					
ANR	330589	Identifier	conf		330555	0					
ANR	330590	Identifier	templates		330555	1					
ANR	330591	Identifier	lastStatic		330555	1					
ANR	330592	Identifier	NULL		330555	1					
ANR	330593	ReturnStatement	return ;	2168:2:69633:69639	330555	1	True				
ANR	330594	ExpressionStatement	pTpl = conf -> templates . lastStatic -> pNext	2170:1:69643:69683	330555	6	True				
ANR	330595	AssignmentExpression	pTpl = conf -> templates . lastStatic -> pNext		330555	0		=			
ANR	330596	Identifier	pTpl		330555	0					
ANR	330597	PtrMemberAccess	conf -> templates . lastStatic -> pNext		330555	1					
ANR	330598	MemberAccess	conf -> templates . lastStatic		330555	0					
ANR	330599	PtrMemberAccess	conf -> templates		330555	0					
ANR	330600	Identifier	conf		330555	0					
ANR	330601	Identifier	templates		330555	1					
ANR	330602	Identifier	lastStatic		330555	1					
ANR	330603	Identifier	pNext		330555	1					
ANR	330604	ExpressionStatement	conf -> templates . lastStatic -> pNext = NULL	2171:1:69686:69726	330555	7	True				
ANR	330605	AssignmentExpression	conf -> templates . lastStatic -> pNext = NULL		330555	0		=			
ANR	330606	PtrMemberAccess	conf -> templates . lastStatic -> pNext		330555	0					
ANR	330607	MemberAccess	conf -> templates . lastStatic		330555	0					
ANR	330608	PtrMemberAccess	conf -> templates		330555	0					
ANR	330609	Identifier	conf		330555	0					
ANR	330610	Identifier	templates		330555	1					
ANR	330611	Identifier	lastStatic		330555	1					
ANR	330612	Identifier	pNext		330555	1					
ANR	330613	Identifier	NULL		330555	1					
ANR	330614	ExpressionStatement	conf -> templates . last = conf -> templates . lastStatic	2172:1:69729:69778	330555	8	True				
ANR	330615	AssignmentExpression	conf -> templates . last = conf -> templates . lastStatic		330555	0		=			
ANR	330616	MemberAccess	conf -> templates . last		330555	0					
ANR	330617	PtrMemberAccess	conf -> templates		330555	0					
ANR	330618	Identifier	conf		330555	0					
ANR	330619	Identifier	templates		330555	1					
ANR	330620	Identifier	last		330555	1					
ANR	330621	MemberAccess	conf -> templates . lastStatic		330555	1					
ANR	330622	PtrMemberAccess	conf -> templates		330555	0					
ANR	330623	Identifier	conf		330555	0					
ANR	330624	Identifier	templates		330555	1					
ANR	330625	Identifier	lastStatic		330555	1					
ANR	330626	WhileStatement	while ( pTpl != NULL )		330555	9					
ANR	330627	Condition	pTpl != NULL	2173:7:69787:69798	330555	0	True				
ANR	330628	EqualityExpression	pTpl != NULL		330555	0		!=			
ANR	330629	Identifier	pTpl		330555	0					
ANR	330630	Identifier	NULL		330555	1					
ANR	330631	CompoundStatement		13:21:329:329	330555	1					
ANR	330632	ExpressionStatement	pTpe = pTpl -> pEntryRoot	2175:2:69903:69926	330555	0	True				
ANR	330633	AssignmentExpression	pTpe = pTpl -> pEntryRoot		330555	0		=			
ANR	330634	Identifier	pTpe		330555	0					
ANR	330635	PtrMemberAccess	pTpl -> pEntryRoot		330555	1					
ANR	330636	Identifier	pTpl		330555	0					
ANR	330637	Identifier	pEntryRoot		330555	1					
ANR	330638	WhileStatement	while ( pTpe != NULL )		330555	1					
ANR	330639	Condition	pTpe != NULL	2176:8:69936:69947	330555	0	True				
ANR	330640	EqualityExpression	pTpe != NULL		330555	0		!=			
ANR	330641	Identifier	pTpe		330555	0					
ANR	330642	Identifier	NULL		330555	1					
ANR	330643	CompoundStatement		16:22:478:478	330555	1					
ANR	330644	ExpressionStatement	pTpeDel = pTpe	2177:3:69955:69969	330555	0	True				
ANR	330645	AssignmentExpression	pTpeDel = pTpe		330555	0		=			
ANR	330646	Identifier	pTpeDel		330555	0					
ANR	330647	Identifier	pTpe		330555	1					
ANR	330648	ExpressionStatement	pTpe = pTpe -> pNext	2178:3:69974:69992	330555	1	True				
ANR	330649	AssignmentExpression	pTpe = pTpe -> pNext		330555	0		=			
ANR	330650	Identifier	pTpe		330555	0					
ANR	330651	PtrMemberAccess	pTpe -> pNext		330555	1					
ANR	330652	Identifier	pTpe		330555	0					
ANR	330653	Identifier	pNext		330555	1					
ANR	330654	SwitchStatement	switch ( pTpeDel -> eEntryType )		330555	2					
ANR	330655	Condition	pTpeDel -> eEntryType	2180:10:70096:70114	330555	0	True				
ANR	330656	PtrMemberAccess	pTpeDel -> eEntryType		330555	0					
ANR	330657	Identifier	pTpeDel		330555	0					
ANR	330658	Identifier	eEntryType		330555	1					
ANR	330659	CompoundStatement		20:31:645:645	330555	1					
ANR	330660	Label	case UNDEFINED :	2181:3:70122:70136	330555	0	True				
ANR	330661	Identifier	UNDEFINED		330555	0					
ANR	330662	BreakStatement	break ;	2183:4:70176:70181	330555	1	True				
ANR	330663	Label	case CONSTANT :	2184:3:70186:70199	330555	2	True				
ANR	330664	Identifier	CONSTANT		330555	0					
ANR	330665	ExpressionStatement	free ( pTpeDel -> data . constant . pConstant )	2187:4:70290:70328	330555	3	True				
ANR	330666	CallExpression	free ( pTpeDel -> data . constant . pConstant )		330555	0					
ANR	330667	Callee	free		330555	0					
ANR	330668	Identifier	free		330555	0					
ANR	330669	ArgumentList	pTpeDel -> data . constant . pConstant		330555	1					
ANR	330670	Argument	pTpeDel -> data . constant . pConstant		330555	0					
ANR	330671	MemberAccess	pTpeDel -> data . constant . pConstant		330555	0					
ANR	330672	MemberAccess	pTpeDel -> data . constant		330555	0					
ANR	330673	PtrMemberAccess	pTpeDel -> data		330555	0					
ANR	330674	Identifier	pTpeDel		330555	0					
ANR	330675	Identifier	data		330555	1					
ANR	330676	Identifier	constant		330555	1					
ANR	330677	Identifier	pConstant		330555	1					
ANR	330678	BreakStatement	break ;	2188:4:70334:70339	330555	4	True				
ANR	330679	Label	case FIELD :	2189:3:70344:70354	330555	5	True				
ANR	330680	Identifier	FIELD		330555	0					
ANR	330681	IfStatement	if ( pTpeDel -> data . field . has_regex != 0 )		330555	6					
ANR	330682	Condition	pTpeDel -> data . field . has_regex != 0	2192:7:70443:70476	330555	0	True				
ANR	330683	EqualityExpression	pTpeDel -> data . field . has_regex != 0		330555	0		!=			
ANR	330684	MemberAccess	pTpeDel -> data . field . has_regex		330555	0					
ANR	330685	MemberAccess	pTpeDel -> data . field		330555	0					
ANR	330686	PtrMemberAccess	pTpeDel -> data		330555	0					
ANR	330687	Identifier	pTpeDel		330555	0					
ANR	330688	Identifier	data		330555	1					
ANR	330689	Identifier	field		330555	1					
ANR	330690	Identifier	has_regex		330555	1					
ANR	330691	PrimaryExpression	0		330555	1					
ANR	330692	CompoundStatement		32:43:1007:1007	330555	1					
ANR	330693	IfStatement	"if ( objUse ( regexp , LM_REGEXP_FILENAME ) == RS_RET_OK )"		330555	0					
ANR	330694	Condition	"objUse ( regexp , LM_REGEXP_FILENAME ) == RS_RET_OK"	2193:8:70489:70535	330555	0	True				
ANR	330695	EqualityExpression	"objUse ( regexp , LM_REGEXP_FILENAME ) == RS_RET_OK"		330555	0		==			
ANR	330696	CallExpression	"objUse ( regexp , LM_REGEXP_FILENAME )"		330555	0					
ANR	330697	Callee	objUse		330555	0					
ANR	330698	Identifier	objUse		330555	0					
ANR	330699	ArgumentList	regexp		330555	1					
ANR	330700	Argument	regexp		330555	0					
ANR	330701	Identifier	regexp		330555	0					
ANR	330702	Argument	LM_REGEXP_FILENAME		330555	1					
ANR	330703	Identifier	LM_REGEXP_FILENAME		330555	0					
ANR	330704	Identifier	RS_RET_OK		330555	1					
ANR	330705	CompoundStatement		33:57:1066:1066	330555	1					
ANR	330706	ExpressionStatement	regexp . regfree ( & ( pTpeDel -> data . field . re ) )	2194:6:70546:70587	330555	0	True				
ANR	330707	CallExpression	regexp . regfree ( & ( pTpeDel -> data . field . re ) )		330555	0					
ANR	330708	Callee	regexp . regfree		330555	0					
ANR	330709	MemberAccess	regexp . regfree		330555	0					
ANR	330710	Identifier	regexp		330555	0					
ANR	330711	Identifier	regfree		330555	1					
ANR	330712	ArgumentList	& ( pTpeDel -> data . field . re )		330555	1					
ANR	330713	Argument	& ( pTpeDel -> data . field . re )		330555	0					
ANR	330714	UnaryOperationExpression	& ( pTpeDel -> data . field . re )		330555	0					
ANR	330715	UnaryOperator	&		330555	0					
ANR	330716	MemberAccess	pTpeDel -> data . field . re		330555	1					
ANR	330717	MemberAccess	pTpeDel -> data . field		330555	0					
ANR	330718	PtrMemberAccess	pTpeDel -> data		330555	0					
ANR	330719	Identifier	pTpeDel		330555	0					
ANR	330720	Identifier	data		330555	1					
ANR	330721	Identifier	field		330555	1					
ANR	330722	Identifier	re		330555	1					
ANR	330723	ExpressionStatement	msgPropDescrDestruct ( & pTpeDel -> data . field . msgProp )	2198:4:70613:70663	330555	7	True				
ANR	330724	CallExpression	msgPropDescrDestruct ( & pTpeDel -> data . field . msgProp )		330555	0					
ANR	330725	Callee	msgPropDescrDestruct		330555	0					
ANR	330726	Identifier	msgPropDescrDestruct		330555	0					
ANR	330727	ArgumentList	& pTpeDel -> data . field . msgProp		330555	1					
ANR	330728	Argument	& pTpeDel -> data . field . msgProp		330555	0					
ANR	330729	UnaryOperationExpression	& pTpeDel -> data . field . msgProp		330555	0					
ANR	330730	UnaryOperator	&		330555	0					
ANR	330731	MemberAccess	pTpeDel -> data . field . msgProp		330555	1					
ANR	330732	MemberAccess	pTpeDel -> data . field		330555	0					
ANR	330733	PtrMemberAccess	pTpeDel -> data		330555	0					
ANR	330734	Identifier	pTpeDel		330555	0					
ANR	330735	Identifier	data		330555	1					
ANR	330736	Identifier	field		330555	1					
ANR	330737	Identifier	msgProp		330555	1					
ANR	330738	BreakStatement	break ;	2199:4:70669:70674	330555	8	True				
ANR	330739	ExpressionStatement	free ( pTpeDel )	2202:3:70708:70721	330555	3	True				
ANR	330740	CallExpression	free ( pTpeDel )		330555	0					
ANR	330741	Callee	free		330555	0					
ANR	330742	Identifier	free		330555	0					
ANR	330743	ArgumentList	pTpeDel		330555	1					
ANR	330744	Argument	pTpeDel		330555	0					
ANR	330745	Identifier	pTpeDel		330555	0					
ANR	330746	ExpressionStatement	pTplDel = pTpl	2204:2:70729:70743	330555	2	True				
ANR	330747	AssignmentExpression	pTplDel = pTpl		330555	0		=			
ANR	330748	Identifier	pTplDel		330555	0					
ANR	330749	Identifier	pTpl		330555	1					
ANR	330750	ExpressionStatement	pTpl = pTpl -> pNext	2205:2:70747:70765	330555	3	True				
ANR	330751	AssignmentExpression	pTpl = pTpl -> pNext		330555	0		=			
ANR	330752	Identifier	pTpl		330555	0					
ANR	330753	PtrMemberAccess	pTpl -> pNext		330555	1					
ANR	330754	Identifier	pTpl		330555	0					
ANR	330755	Identifier	pNext		330555	1					
ANR	330756	ExpressionStatement	free ( pTplDel -> pszName )	2206:2:70769:70791	330555	4	True				
ANR	330757	CallExpression	free ( pTplDel -> pszName )		330555	0					
ANR	330758	Callee	free		330555	0					
ANR	330759	Identifier	free		330555	0					
ANR	330760	ArgumentList	pTplDel -> pszName		330555	1					
ANR	330761	Argument	pTplDel -> pszName		330555	0					
ANR	330762	PtrMemberAccess	pTplDel -> pszName		330555	0					
ANR	330763	Identifier	pTplDel		330555	0					
ANR	330764	Identifier	pszName		330555	1					
ANR	330765	IfStatement	if ( pTplDel -> bHaveSubtree )		330555	5					
ANR	330766	Condition	pTplDel -> bHaveSubtree	2207:5:70798:70818	330555	0	True				
ANR	330767	PtrMemberAccess	pTplDel -> bHaveSubtree		330555	0					
ANR	330768	Identifier	pTplDel		330555	0					
ANR	330769	Identifier	bHaveSubtree		330555	1					
ANR	330770	ExpressionStatement	msgPropDescrDestruct ( & pTplDel -> subtree )	2208:3:70824:70863	330555	1	True				
ANR	330771	CallExpression	msgPropDescrDestruct ( & pTplDel -> subtree )		330555	0					
ANR	330772	Callee	msgPropDescrDestruct		330555	0					
ANR	330773	Identifier	msgPropDescrDestruct		330555	0					
ANR	330774	ArgumentList	& pTplDel -> subtree		330555	1					
ANR	330775	Argument	& pTplDel -> subtree		330555	0					
ANR	330776	UnaryOperationExpression	& pTplDel -> subtree		330555	0					
ANR	330777	UnaryOperator	&		330555	0					
ANR	330778	PtrMemberAccess	pTplDel -> subtree		330555	1					
ANR	330779	Identifier	pTplDel		330555	0					
ANR	330780	Identifier	subtree		330555	1					
ANR	330781	ExpressionStatement	free ( pTplDel )	2209:2:70867:70880	330555	6	True				
ANR	330782	CallExpression	free ( pTplDel )		330555	0					
ANR	330783	Callee	free		330555	0					
ANR	330784	Identifier	free		330555	0					
ANR	330785	ArgumentList	pTplDel		330555	1					
ANR	330786	Argument	pTplDel		330555	0					
ANR	330787	Identifier	pTplDel		330555	0					
ANR	330788	Statement	ENDfunc	2211:1:70886:70892	330555	10	True				
ANR	330789	ReturnType	void		330555	1					
ANR	330790	Identifier	tplDeleteNew		330555	2					
ANR	330791	ParameterList	rsconf_t * conf		330555	3					
ANR	330792	Parameter	rsconf_t * conf	2160:18:69455:69468	330555	0	True				
ANR	330793	ParameterType	rsconf_t *		330555	0					
ANR	330794	Identifier	conf		330555	1					
ANR	330795	CFGEntryNode	ENTRY		330555		True				
ANR	330796	CFGExitNode	EXIT		330555		True				
ANR	330797	Symbol	* conf -> templates		330555						
ANR	330798	Symbol	regexp		330555						
ANR	330799	Symbol	pTplDel -> pszName		330555						
ANR	330800	Symbol	* * conf		330555						
ANR	330801	Symbol	pTpeDel -> data . constant		330555						
ANR	330802	Symbol	& pTpeDel -> data		330555						
ANR	330803	Symbol	* conf		330555						
ANR	330804	Symbol	conf		330555						
ANR	330805	Symbol	pTpe -> pNext		330555						
ANR	330806	Symbol	objUse		330555						
ANR	330807	Symbol	conf -> templates . last		330555						
ANR	330808	Symbol	pTpl		330555						
ANR	330809	Symbol	pTpeDel -> data . field		330555						
ANR	330810	Symbol	pTpeDel -> data . field . has_regex		330555						
ANR	330811	Symbol	pTpeDel		330555						
ANR	330812	Symbol	* pTplDel		330555						
ANR	330813	Symbol	pTpeDel -> eEntryType		330555						
ANR	330814	Symbol	pTplDel -> bHaveSubtree		330555						
ANR	330815	Symbol	conf -> templates . root		330555						
ANR	330816	Symbol	LM_REGEXP_FILENAME		330555						
ANR	330817	Symbol	pTpl -> pNext		330555						
ANR	330818	Symbol	NULL		330555						
ANR	330819	Symbol	conf -> templates . lastStatic		330555						
ANR	330820	Symbol	conf -> templates . lastStatic -> pNext		330555						
ANR	330821	Symbol	pTplDel		330555						
ANR	330822	Symbol	RS_RET_OK		330555						
ANR	330823	Symbol	conf -> templates		330555						
ANR	330824	Symbol	pTpeDel -> data		330555						
ANR	330825	Symbol	& pTplDel -> subtree		330555						
ANR	330826	Symbol	& pTpeDel -> data . field . re		330555						
ANR	330827	Symbol	pTpe		330555						
ANR	330828	Symbol	* pTpe		330555						
ANR	330829	Symbol	& pTpeDel -> data . field . msgProp		330555						
ANR	330830	Symbol	* pTpl		330555						
ANR	330831	Symbol	* pTpeDel		330555						
ANR	330832	Symbol	pTpeDel -> data . constant . pConstant		330555						
ANR	330833	Symbol	pTpl -> pEntryRoot		330555						
ANR	330834	Symbol	& pTpeDel -> data . field		330555						
ANR	330835	Symbol	* conf -> templates . lastStatic		330555						
ANR	330836	Function	tplPrintList	2223:0:71171:75506							
ANR	330837	FunctionDef	tplPrintList (rsconf_t * conf)		330836	0					
ANR	330838	CompoundStatement		2224:0:71205:75506	330836	0					
ANR	330839	Statement	struct	2225:1:71208:71213	330836	0	True				
ANR	330840	Statement	template	2225:8:71215:71222	330836	1	True				
ANR	330841	ExpressionStatement	* pTpl	2225:17:71224:71229	330836	2	True				
ANR	330842	UnaryOperationExpression	* pTpl		330836	0					
ANR	330843	UnaryOperator	*		330836	0					
ANR	330844	Identifier	pTpl		330836	1					
ANR	330845	IdentifierDeclStatement	struct templateEntry * pTpe ;	2226:1:71232:71258	330836	3	True				
ANR	330846	IdentifierDecl	* pTpe		330836	0					
ANR	330847	IdentifierDeclType	struct templateEntry *		330836	0					
ANR	330848	Identifier	pTpe		330836	1					
ANR	330849	ExpressionStatement	pTpl = conf -> templates . root	2228:1:71262:71289	330836	4	True				
ANR	330850	AssignmentExpression	pTpl = conf -> templates . root		330836	0		=			
ANR	330851	Identifier	pTpl		330836	0					
ANR	330852	MemberAccess	conf -> templates . root		330836	1					
ANR	330853	PtrMemberAccess	conf -> templates		330836	0					
ANR	330854	Identifier	conf		330836	0					
ANR	330855	Identifier	templates		330836	1					
ANR	330856	Identifier	root		330836	1					
ANR	330857	WhileStatement	while ( pTpl != NULL )		330836	5					
ANR	330858	Condition	pTpl != NULL	2229:7:71298:71309	330836	0	True				
ANR	330859	EqualityExpression	pTpl != NULL		330836	0		!=			
ANR	330860	Identifier	pTpl		330836	0					
ANR	330861	Identifier	NULL		330836	1					
ANR	330862	CompoundStatement		6:21:106:106	330836	1					
ANR	330863	ExpressionStatement	"dbgprintf ( ""Template: Name='%s' "" , pTpl -> pszName == NULL ? ""NULL"" : pTpl -> pszName )"	2230:2:71316:71396	330836	0	True				
ANR	330864	CallExpression	"dbgprintf ( ""Template: Name='%s' "" , pTpl -> pszName == NULL ? ""NULL"" : pTpl -> pszName )"		330836	0					
ANR	330865	Callee	dbgprintf		330836	0					
ANR	330866	Identifier	dbgprintf		330836	0					
ANR	330867	ArgumentList	"""Template: Name='%s' """		330836	1					
ANR	330868	Argument	"""Template: Name='%s' """		330836	0					
ANR	330869	PrimaryExpression	"""Template: Name='%s' """		330836	0					
ANR	330870	Argument	"pTpl -> pszName == NULL ? ""NULL"" : pTpl -> pszName"		330836	1					
ANR	330871	ConditionalExpression	"pTpl -> pszName == NULL ? ""NULL"" : pTpl -> pszName"		330836	0					
ANR	330872	Condition	pTpl -> pszName == NULL		330836	0					
ANR	330873	EqualityExpression	pTpl -> pszName == NULL		330836	0		==			
ANR	330874	PtrMemberAccess	pTpl -> pszName		330836	0					
ANR	330875	Identifier	pTpl		330836	0					
ANR	330876	Identifier	pszName		330836	1					
ANR	330877	Identifier	NULL		330836	1					
ANR	330878	PrimaryExpression	"""NULL"""		330836	1					
ANR	330879	PtrMemberAccess	pTpl -> pszName		330836	2					
ANR	330880	Identifier	pTpl		330836	0					
ANR	330881	Identifier	pszName		330836	1					
ANR	330882	IfStatement	if ( pTpl -> optFormatEscape == SQL_ESCAPE )		330836	1					
ANR	330883	Condition	pTpl -> optFormatEscape == SQL_ESCAPE	2231:5:71403:71437	330836	0	True				
ANR	330884	EqualityExpression	pTpl -> optFormatEscape == SQL_ESCAPE		330836	0		==			
ANR	330885	PtrMemberAccess	pTpl -> optFormatEscape		330836	0					
ANR	330886	Identifier	pTpl		330836	0					
ANR	330887	Identifier	optFormatEscape		330836	1					
ANR	330888	Identifier	SQL_ESCAPE		330836	1					
ANR	330889	ExpressionStatement	"dbgprintf ( ""[SQL-Format (MySQL)] "" )"	2232:3:71443:71477	330836	1	True				
ANR	330890	CallExpression	"dbgprintf ( ""[SQL-Format (MySQL)] "" )"		330836	0					
ANR	330891	Callee	dbgprintf		330836	0					
ANR	330892	Identifier	dbgprintf		330836	0					
ANR	330893	ArgumentList	"""[SQL-Format (MySQL)] """		330836	1					
ANR	330894	Argument	"""[SQL-Format (MySQL)] """		330836	0					
ANR	330895	PrimaryExpression	"""[SQL-Format (MySQL)] """		330836	0					
ANR	330896	ElseStatement	else		330836	0					
ANR	330897	IfStatement	if ( pTpl -> optFormatEscape == JSON_ESCAPE )		330836	0					
ANR	330898	Condition	pTpl -> optFormatEscape == JSON_ESCAPE	2233:10:71489:71524	330836	0	True				
ANR	330899	EqualityExpression	pTpl -> optFormatEscape == JSON_ESCAPE		330836	0		==			
ANR	330900	PtrMemberAccess	pTpl -> optFormatEscape		330836	0					
ANR	330901	Identifier	pTpl		330836	0					
ANR	330902	Identifier	optFormatEscape		330836	1					
ANR	330903	Identifier	JSON_ESCAPE		330836	1					
ANR	330904	ExpressionStatement	"dbgprintf ( ""[JSON-Escaped Format] "" )"	2234:3:71530:71565	330836	1	True				
ANR	330905	CallExpression	"dbgprintf ( ""[JSON-Escaped Format] "" )"		330836	0					
ANR	330906	Callee	dbgprintf		330836	0					
ANR	330907	Identifier	dbgprintf		330836	0					
ANR	330908	ArgumentList	"""[JSON-Escaped Format] """		330836	1					
ANR	330909	Argument	"""[JSON-Escaped Format] """		330836	0					
ANR	330910	PrimaryExpression	"""[JSON-Escaped Format] """		330836	0					
ANR	330911	ElseStatement	else		330836	0					
ANR	330912	IfStatement	if ( pTpl -> optFormatEscape == STDSQL_ESCAPE )		330836	0					
ANR	330913	Condition	pTpl -> optFormatEscape == STDSQL_ESCAPE	2235:10:71577:71614	330836	0	True				
ANR	330914	EqualityExpression	pTpl -> optFormatEscape == STDSQL_ESCAPE		330836	0		==			
ANR	330915	PtrMemberAccess	pTpl -> optFormatEscape		330836	0					
ANR	330916	Identifier	pTpl		330836	0					
ANR	330917	Identifier	optFormatEscape		330836	1					
ANR	330918	Identifier	STDSQL_ESCAPE		330836	1					
ANR	330919	ExpressionStatement	"dbgprintf ( ""[SQL-Format (standard SQL)] "" )"	2236:3:71620:71661	330836	1	True				
ANR	330920	CallExpression	"dbgprintf ( ""[SQL-Format (standard SQL)] "" )"		330836	0					
ANR	330921	Callee	dbgprintf		330836	0					
ANR	330922	Identifier	dbgprintf		330836	0					
ANR	330923	ArgumentList	"""[SQL-Format (standard SQL)] """		330836	1					
ANR	330924	Argument	"""[SQL-Format (standard SQL)] """		330836	0					
ANR	330925	PrimaryExpression	"""[SQL-Format (standard SQL)] """		330836	0					
ANR	330926	IfStatement	if ( pTpl -> optCaseSensitive )		330836	2					
ANR	330927	Condition	pTpl -> optCaseSensitive	2237:5:71668:71689	330836	0	True				
ANR	330928	PtrMemberAccess	pTpl -> optCaseSensitive		330836	0					
ANR	330929	Identifier	pTpl		330836	0					
ANR	330930	Identifier	optCaseSensitive		330836	1					
ANR	330931	ExpressionStatement	"dbgprintf ( ""[Case Sensitive Vars] "" )"	2238:3:71695:71730	330836	1	True				
ANR	330932	CallExpression	"dbgprintf ( ""[Case Sensitive Vars] "" )"		330836	0					
ANR	330933	Callee	dbgprintf		330836	0					
ANR	330934	Identifier	dbgprintf		330836	0					
ANR	330935	ArgumentList	"""[Case Sensitive Vars] """		330836	1					
ANR	330936	Argument	"""[Case Sensitive Vars] """		330836	0					
ANR	330937	PrimaryExpression	"""[Case Sensitive Vars] """		330836	0					
ANR	330938	ExpressionStatement	"dbgprintf ( ""\\n"" )"	2239:2:71734:71749	330836	3	True				
ANR	330939	CallExpression	"dbgprintf ( ""\\n"" )"		330836	0					
ANR	330940	Callee	dbgprintf		330836	0					
ANR	330941	Identifier	dbgprintf		330836	0					
ANR	330942	ArgumentList	"""\\n"""		330836	1					
ANR	330943	Argument	"""\\n"""		330836	0					
ANR	330944	PrimaryExpression	"""\\n"""		330836	0					
ANR	330945	ExpressionStatement	pTpe = pTpl -> pEntryRoot	2240:2:71753:71776	330836	4	True				
ANR	330946	AssignmentExpression	pTpe = pTpl -> pEntryRoot		330836	0		=			
ANR	330947	Identifier	pTpe		330836	0					
ANR	330948	PtrMemberAccess	pTpl -> pEntryRoot		330836	1					
ANR	330949	Identifier	pTpl		330836	0					
ANR	330950	Identifier	pEntryRoot		330836	1					
ANR	330951	WhileStatement	while ( pTpe != NULL )		330836	5					
ANR	330952	Condition	pTpe != NULL	2241:8:71786:71797	330836	0	True				
ANR	330953	EqualityExpression	pTpe != NULL		330836	0		!=			
ANR	330954	Identifier	pTpe		330836	0					
ANR	330955	Identifier	NULL		330836	1					
ANR	330956	CompoundStatement		18:22:594:594	330836	1					
ANR	330957	ExpressionStatement	"dbgprintf ( ""\\tEntry(%lx): type %d, "" , ( unsigned long ) pTpe , pTpe -> eEntryType )"	2242:3:71805:71881	330836	0	True				
ANR	330958	CallExpression	"dbgprintf ( ""\\tEntry(%lx): type %d, "" , ( unsigned long ) pTpe , pTpe -> eEntryType )"		330836	0					
ANR	330959	Callee	dbgprintf		330836	0					
ANR	330960	Identifier	dbgprintf		330836	0					
ANR	330961	ArgumentList	"""\\tEntry(%lx): type %d, """		330836	1					
ANR	330962	Argument	"""\\tEntry(%lx): type %d, """		330836	0					
ANR	330963	PrimaryExpression	"""\\tEntry(%lx): type %d, """		330836	0					
ANR	330964	Argument	( unsigned long ) pTpe		330836	1					
ANR	330965	CastExpression	( unsigned long ) pTpe		330836	0					
ANR	330966	CastTarget	unsigned long		330836	0					
ANR	330967	Identifier	pTpe		330836	1					
ANR	330968	Argument	pTpe -> eEntryType		330836	2					
ANR	330969	PtrMemberAccess	pTpe -> eEntryType		330836	0					
ANR	330970	Identifier	pTpe		330836	0					
ANR	330971	Identifier	eEntryType		330836	1					
ANR	330972	SwitchStatement	switch ( pTpe -> eEntryType )		330836	1					
ANR	330973	Condition	pTpe -> eEntryType	2243:10:71893:71908	330836	0	True				
ANR	330974	PtrMemberAccess	pTpe -> eEntryType		330836	0					
ANR	330975	Identifier	pTpe		330836	0					
ANR	330976	Identifier	eEntryType		330836	1					
ANR	330977	CompoundStatement		20:28:705:705	330836	1					
ANR	330978	Label	case UNDEFINED :	2244:3:71916:71930	330836	0	True				
ANR	330979	Identifier	UNDEFINED		330836	0					
ANR	330980	ExpressionStatement	"dbgprintf ( ""(UNDEFINED)"" )"	2245:4:71936:71960	330836	1	True				
ANR	330981	CallExpression	"dbgprintf ( ""(UNDEFINED)"" )"		330836	0					
ANR	330982	Callee	dbgprintf		330836	0					
ANR	330983	Identifier	dbgprintf		330836	0					
ANR	330984	ArgumentList	"""(UNDEFINED)"""		330836	1					
ANR	330985	Argument	"""(UNDEFINED)"""		330836	0					
ANR	330986	PrimaryExpression	"""(UNDEFINED)"""		330836	0					
ANR	330987	BreakStatement	break ;	2246:4:71966:71971	330836	2	True				
ANR	330988	Label	case CONSTANT :	2247:3:71976:71989	330836	3	True				
ANR	330989	Identifier	CONSTANT		330836	0					
ANR	330990	ExpressionStatement	"dbgprintf ( ""(CONSTANT), value: '%s'"" , pTpe -> data . constant . pConstant )"	2248:4:71995:72067	330836	4	True				
ANR	330991	CallExpression	"dbgprintf ( ""(CONSTANT), value: '%s'"" , pTpe -> data . constant . pConstant )"		330836	0					
ANR	330992	Callee	dbgprintf		330836	0					
ANR	330993	Identifier	dbgprintf		330836	0					
ANR	330994	ArgumentList	"""(CONSTANT), value: '%s'"""		330836	1					
ANR	330995	Argument	"""(CONSTANT), value: '%s'"""		330836	0					
ANR	330996	PrimaryExpression	"""(CONSTANT), value: '%s'"""		330836	0					
ANR	330997	Argument	pTpe -> data . constant . pConstant		330836	1					
ANR	330998	MemberAccess	pTpe -> data . constant . pConstant		330836	0					
ANR	330999	MemberAccess	pTpe -> data . constant		330836	0					
ANR	331000	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331001	Identifier	pTpe		330836	0					
ANR	331002	Identifier	data		330836	1					
ANR	331003	Identifier	constant		330836	1					
ANR	331004	Identifier	pConstant		330836	1					
ANR	331005	BreakStatement	break ;	2250:4:72073:72078	330836	5	True				
ANR	331006	Label	case FIELD :	2251:3:72083:72093	330836	6	True				
ANR	331007	Identifier	FIELD		330836	0					
ANR	331008	ExpressionStatement	"dbgprintf ( ""(FIELD), value: '%d' "" , pTpe -> data . field . msgProp . id )"	2252:4:72099:72162	330836	7	True				
ANR	331009	CallExpression	"dbgprintf ( ""(FIELD), value: '%d' "" , pTpe -> data . field . msgProp . id )"		330836	0					
ANR	331010	Callee	dbgprintf		330836	0					
ANR	331011	Identifier	dbgprintf		330836	0					
ANR	331012	ArgumentList	"""(FIELD), value: '%d' """		330836	1					
ANR	331013	Argument	"""(FIELD), value: '%d' """		330836	0					
ANR	331014	PrimaryExpression	"""(FIELD), value: '%d' """		330836	0					
ANR	331015	Argument	pTpe -> data . field . msgProp . id		330836	1					
ANR	331016	MemberAccess	pTpe -> data . field . msgProp . id		330836	0					
ANR	331017	MemberAccess	pTpe -> data . field . msgProp		330836	0					
ANR	331018	MemberAccess	pTpe -> data . field		330836	0					
ANR	331019	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331020	Identifier	pTpe		330836	0					
ANR	331021	Identifier	data		330836	1					
ANR	331022	Identifier	field		330836	1					
ANR	331023	Identifier	msgProp		330836	1					
ANR	331024	Identifier	id		330836	1					
ANR	331025	IfStatement	if ( pTpe -> data . field . msgProp . id == PROP_CEE )		330836	8					
ANR	331026	Condition	pTpe -> data . field . msgProp . id == PROP_CEE	2253:7:72171:72209	330836	0	True				
ANR	331027	EqualityExpression	pTpe -> data . field . msgProp . id == PROP_CEE		330836	0		==			
ANR	331028	MemberAccess	pTpe -> data . field . msgProp . id		330836	0					
ANR	331029	MemberAccess	pTpe -> data . field . msgProp		330836	0					
ANR	331030	MemberAccess	pTpe -> data . field		330836	0					
ANR	331031	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331032	Identifier	pTpe		330836	0					
ANR	331033	Identifier	data		330836	1					
ANR	331034	Identifier	field		330836	1					
ANR	331035	Identifier	msgProp		330836	1					
ANR	331036	Identifier	id		330836	1					
ANR	331037	Identifier	PROP_CEE		330836	1					
ANR	331038	CompoundStatement		30:48:1006:1006	330836	1					
ANR	331039	ExpressionStatement	"dbgprintf ( ""[EE-Property: '%s'] "" , pTpe -> data . field . msgProp . name )"	2254:5:72219:72283	330836	0	True				
ANR	331040	CallExpression	"dbgprintf ( ""[EE-Property: '%s'] "" , pTpe -> data . field . msgProp . name )"		330836	0					
ANR	331041	Callee	dbgprintf		330836	0					
ANR	331042	Identifier	dbgprintf		330836	0					
ANR	331043	ArgumentList	"""[EE-Property: '%s'] """		330836	1					
ANR	331044	Argument	"""[EE-Property: '%s'] """		330836	0					
ANR	331045	PrimaryExpression	"""[EE-Property: '%s'] """		330836	0					
ANR	331046	Argument	pTpe -> data . field . msgProp . name		330836	1					
ANR	331047	MemberAccess	pTpe -> data . field . msgProp . name		330836	0					
ANR	331048	MemberAccess	pTpe -> data . field . msgProp		330836	0					
ANR	331049	MemberAccess	pTpe -> data . field		330836	0					
ANR	331050	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331051	Identifier	pTpe		330836	0					
ANR	331052	Identifier	data		330836	1					
ANR	331053	Identifier	field		330836	1					
ANR	331054	Identifier	msgProp		330836	1					
ANR	331055	Identifier	name		330836	1					
ANR	331056	ElseStatement	else		330836	0					
ANR	331057	IfStatement	if ( pTpe -> data . field . msgProp . id == PROP_LOCAL_VAR )		330836	0					
ANR	331058	Condition	pTpe -> data . field . msgProp . id == PROP_LOCAL_VAR	2255:14:72299:72343	330836	0	True				
ANR	331059	EqualityExpression	pTpe -> data . field . msgProp . id == PROP_LOCAL_VAR		330836	0		==			
ANR	331060	MemberAccess	pTpe -> data . field . msgProp . id		330836	0					
ANR	331061	MemberAccess	pTpe -> data . field . msgProp		330836	0					
ANR	331062	MemberAccess	pTpe -> data . field		330836	0					
ANR	331063	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331064	Identifier	pTpe		330836	0					
ANR	331065	Identifier	data		330836	1					
ANR	331066	Identifier	field		330836	1					
ANR	331067	Identifier	msgProp		330836	1					
ANR	331068	Identifier	id		330836	1					
ANR	331069	Identifier	PROP_LOCAL_VAR		330836	1					
ANR	331070	CompoundStatement		32:61:1140:1140	330836	1					
ANR	331071	ExpressionStatement	"dbgprintf ( ""[Local Var: '%s'] "" , pTpe -> data . field . msgProp . name )"	2256:5:72353:72415	330836	0	True				
ANR	331072	CallExpression	"dbgprintf ( ""[Local Var: '%s'] "" , pTpe -> data . field . msgProp . name )"		330836	0					
ANR	331073	Callee	dbgprintf		330836	0					
ANR	331074	Identifier	dbgprintf		330836	0					
ANR	331075	ArgumentList	"""[Local Var: '%s'] """		330836	1					
ANR	331076	Argument	"""[Local Var: '%s'] """		330836	0					
ANR	331077	PrimaryExpression	"""[Local Var: '%s'] """		330836	0					
ANR	331078	Argument	pTpe -> data . field . msgProp . name		330836	1					
ANR	331079	MemberAccess	pTpe -> data . field . msgProp . name		330836	0					
ANR	331080	MemberAccess	pTpe -> data . field . msgProp		330836	0					
ANR	331081	MemberAccess	pTpe -> data . field		330836	0					
ANR	331082	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331083	Identifier	pTpe		330836	0					
ANR	331084	Identifier	data		330836	1					
ANR	331085	Identifier	field		330836	1					
ANR	331086	Identifier	msgProp		330836	1					
ANR	331087	Identifier	name		330836	1					
ANR	331088	SwitchStatement	switch ( pTpe -> data . field . eDateFormat )		330836	9					
ANR	331089	Condition	pTpe -> data . field . eDateFormat	2260:11:72564:72591	330836	0	True				
ANR	331090	MemberAccess	pTpe -> data . field . eDateFormat		330836	0					
ANR	331091	MemberAccess	pTpe -> data . field		330836	0					
ANR	331092	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331093	Identifier	pTpe		330836	0					
ANR	331094	Identifier	data		330836	1					
ANR	331095	Identifier	field		330836	1					
ANR	331096	Identifier	eDateFormat		330836	1					
ANR	331097	CompoundStatement		37:41:1388:1388	330836	1					
ANR	331098	Label	case tplFmtDefault :	2261:4:72600:72618	330836	0	True				
ANR	331099	Identifier	tplFmtDefault		330836	0					
ANR	331100	BreakStatement	break ;	2262:5:72625:72630	330836	1	True				
ANR	331101	Label	case tplFmtMySQLDate :	2263:4:72636:72656	330836	2	True				
ANR	331102	Identifier	tplFmtMySQLDate		330836	0					
ANR	331103	ExpressionStatement	"dbgprintf ( ""[Format as MySQL-Date] "" )"	2264:5:72663:72699	330836	3	True				
ANR	331104	CallExpression	"dbgprintf ( ""[Format as MySQL-Date] "" )"		330836	0					
ANR	331105	Callee	dbgprintf		330836	0					
ANR	331106	Identifier	dbgprintf		330836	0					
ANR	331107	ArgumentList	"""[Format as MySQL-Date] """		330836	1					
ANR	331108	Argument	"""[Format as MySQL-Date] """		330836	0					
ANR	331109	PrimaryExpression	"""[Format as MySQL-Date] """		330836	0					
ANR	331110	BreakStatement	break ;	2265:5:72706:72711	330836	4	True				
ANR	331111	Label	case tplFmtPgSQLDate :	2266:32:72745:72765	330836	5	True				
ANR	331112	Identifier	tplFmtPgSQLDate		330836	0					
ANR	331113	ExpressionStatement	"dbgprintf ( ""[Format as PgSQL-Date] "" )"	2267:40:72807:72843	330836	6	True				
ANR	331114	CallExpression	"dbgprintf ( ""[Format as PgSQL-Date] "" )"		330836	0					
ANR	331115	Callee	dbgprintf		330836	0					
ANR	331116	Identifier	dbgprintf		330836	0					
ANR	331117	ArgumentList	"""[Format as PgSQL-Date] """		330836	1					
ANR	331118	Argument	"""[Format as PgSQL-Date] """		330836	0					
ANR	331119	PrimaryExpression	"""[Format as PgSQL-Date] """		330836	0					
ANR	331120	BreakStatement	break ;	2268:40:72885:72890	330836	7	True				
ANR	331121	Label	case tplFmtRFC3164Date :	2269:4:72896:72918	330836	8	True				
ANR	331122	Identifier	tplFmtRFC3164Date		330836	0					
ANR	331123	ExpressionStatement	"dbgprintf ( ""[Format as RFC3164-Date] "" )"	2270:5:72925:72963	330836	9	True				
ANR	331124	CallExpression	"dbgprintf ( ""[Format as RFC3164-Date] "" )"		330836	0					
ANR	331125	Callee	dbgprintf		330836	0					
ANR	331126	Identifier	dbgprintf		330836	0					
ANR	331127	ArgumentList	"""[Format as RFC3164-Date] """		330836	1					
ANR	331128	Argument	"""[Format as RFC3164-Date] """		330836	0					
ANR	331129	PrimaryExpression	"""[Format as RFC3164-Date] """		330836	0					
ANR	331130	BreakStatement	break ;	2271:5:72970:72975	330836	10	True				
ANR	331131	Label	case tplFmtRFC3339Date :	2272:4:72981:73003	330836	11	True				
ANR	331132	Identifier	tplFmtRFC3339Date		330836	0					
ANR	331133	ExpressionStatement	"dbgprintf ( ""[Format as RFC3339-Date] "" )"	2273:5:73010:73048	330836	12	True				
ANR	331134	CallExpression	"dbgprintf ( ""[Format as RFC3339-Date] "" )"		330836	0					
ANR	331135	Callee	dbgprintf		330836	0					
ANR	331136	Identifier	dbgprintf		330836	0					
ANR	331137	ArgumentList	"""[Format as RFC3339-Date] """		330836	1					
ANR	331138	Argument	"""[Format as RFC3339-Date] """		330836	0					
ANR	331139	PrimaryExpression	"""[Format as RFC3339-Date] """		330836	0					
ANR	331140	BreakStatement	break ;	2274:5:73055:73060	330836	13	True				
ANR	331141	Label	case tplFmtUnixDate :	2275:4:73066:73085	330836	14	True				
ANR	331142	Identifier	tplFmtUnixDate		330836	0					
ANR	331143	ExpressionStatement	"dbgprintf ( ""[Format as Unix timestamp] "" )"	2276:5:73092:73132	330836	15	True				
ANR	331144	CallExpression	"dbgprintf ( ""[Format as Unix timestamp] "" )"		330836	0					
ANR	331145	Callee	dbgprintf		330836	0					
ANR	331146	Identifier	dbgprintf		330836	0					
ANR	331147	ArgumentList	"""[Format as Unix timestamp] """		330836	1					
ANR	331148	Argument	"""[Format as Unix timestamp] """		330836	0					
ANR	331149	PrimaryExpression	"""[Format as Unix timestamp] """		330836	0					
ANR	331150	BreakStatement	break ;	2277:5:73139:73144	330836	16	True				
ANR	331151	Label	case tplFmtSecFrac :	2278:4:73150:73168	330836	17	True				
ANR	331152	Identifier	tplFmtSecFrac		330836	0					
ANR	331153	ExpressionStatement	"dbgprintf ( ""[fractional seconds, only] "" )"	2279:5:73175:73215	330836	18	True				
ANR	331154	CallExpression	"dbgprintf ( ""[fractional seconds, only] "" )"		330836	0					
ANR	331155	Callee	dbgprintf		330836	0					
ANR	331156	Identifier	dbgprintf		330836	0					
ANR	331157	ArgumentList	"""[fractional seconds, only] """		330836	1					
ANR	331158	Argument	"""[fractional seconds, only] """		330836	0					
ANR	331159	PrimaryExpression	"""[fractional seconds, only] """		330836	0					
ANR	331160	BreakStatement	break ;	2280:5:73222:73227	330836	19	True				
ANR	331161	Label	case tplFmtRFC3164BuggyDate :	2281:4:73233:73260	330836	20	True				
ANR	331162	Identifier	tplFmtRFC3164BuggyDate		330836	0					
ANR	331163	ExpressionStatement	"dbgprintf ( ""[Format as buggy RFC3164-Date] "" )"	2282:5:73267:73311	330836	21	True				
ANR	331164	CallExpression	"dbgprintf ( ""[Format as buggy RFC3164-Date] "" )"		330836	0					
ANR	331165	Callee	dbgprintf		330836	0					
ANR	331166	Identifier	dbgprintf		330836	0					
ANR	331167	ArgumentList	"""[Format as buggy RFC3164-Date] """		330836	1					
ANR	331168	Argument	"""[Format as buggy RFC3164-Date] """		330836	0					
ANR	331169	PrimaryExpression	"""[Format as buggy RFC3164-Date] """		330836	0					
ANR	331170	BreakStatement	break ;	2283:5:73318:73323	330836	22	True				
ANR	331171	Label	default :	2284:4:73329:73336	330836	23	True				
ANR	331172	Identifier	default		330836	0					
ANR	331173	ExpressionStatement	"dbgprintf ( ""[UNKNOWN eDateFormat %d] "" , pTpe -> data . field . eDateFormat )"	2285:5:73343:73411	330836	24	True				
ANR	331174	CallExpression	"dbgprintf ( ""[UNKNOWN eDateFormat %d] "" , pTpe -> data . field . eDateFormat )"		330836	0					
ANR	331175	Callee	dbgprintf		330836	0					
ANR	331176	Identifier	dbgprintf		330836	0					
ANR	331177	ArgumentList	"""[UNKNOWN eDateFormat %d] """		330836	1					
ANR	331178	Argument	"""[UNKNOWN eDateFormat %d] """		330836	0					
ANR	331179	PrimaryExpression	"""[UNKNOWN eDateFormat %d] """		330836	0					
ANR	331180	Argument	pTpe -> data . field . eDateFormat		330836	1					
ANR	331181	MemberAccess	pTpe -> data . field . eDateFormat		330836	0					
ANR	331182	MemberAccess	pTpe -> data . field		330836	0					
ANR	331183	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331184	Identifier	pTpe		330836	0					
ANR	331185	Identifier	data		330836	1					
ANR	331186	Identifier	field		330836	1					
ANR	331187	Identifier	eDateFormat		330836	1					
ANR	331188	SwitchStatement	switch ( pTpe -> data . field . eCaseConv )		330836	10					
ANR	331189	Condition	pTpe -> data . field . eCaseConv	2287:11:73430:73455	330836	0	True				
ANR	331190	MemberAccess	pTpe -> data . field . eCaseConv		330836	0					
ANR	331191	MemberAccess	pTpe -> data . field		330836	0					
ANR	331192	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331193	Identifier	pTpe		330836	0					
ANR	331194	Identifier	data		330836	1					
ANR	331195	Identifier	field		330836	1					
ANR	331196	Identifier	eCaseConv		330836	1					
ANR	331197	CompoundStatement		64:39:2252:2252	330836	1					
ANR	331198	Label	case tplCaseConvNo :	2288:4:73464:73482	330836	0	True				
ANR	331199	Identifier	tplCaseConvNo		330836	0					
ANR	331200	BreakStatement	break ;	2289:5:73489:73494	330836	1	True				
ANR	331201	Label	case tplCaseConvLower :	2290:4:73500:73521	330836	2	True				
ANR	331202	Identifier	tplCaseConvLower		330836	0					
ANR	331203	ExpressionStatement	"dbgprintf ( ""[Converted to Lower Case] "" )"	2291:5:73528:73567	330836	3	True				
ANR	331204	CallExpression	"dbgprintf ( ""[Converted to Lower Case] "" )"		330836	0					
ANR	331205	Callee	dbgprintf		330836	0					
ANR	331206	Identifier	dbgprintf		330836	0					
ANR	331207	ArgumentList	"""[Converted to Lower Case] """		330836	1					
ANR	331208	Argument	"""[Converted to Lower Case] """		330836	0					
ANR	331209	PrimaryExpression	"""[Converted to Lower Case] """		330836	0					
ANR	331210	BreakStatement	break ;	2292:5:73574:73579	330836	4	True				
ANR	331211	Label	case tplCaseConvUpper :	2293:4:73585:73606	330836	5	True				
ANR	331212	Identifier	tplCaseConvUpper		330836	0					
ANR	331213	ExpressionStatement	"dbgprintf ( ""[Converted to Upper Case] "" )"	2294:5:73613:73652	330836	6	True				
ANR	331214	CallExpression	"dbgprintf ( ""[Converted to Upper Case] "" )"		330836	0					
ANR	331215	Callee	dbgprintf		330836	0					
ANR	331216	Identifier	dbgprintf		330836	0					
ANR	331217	ArgumentList	"""[Converted to Upper Case] """		330836	1					
ANR	331218	Argument	"""[Converted to Upper Case] """		330836	0					
ANR	331219	PrimaryExpression	"""[Converted to Upper Case] """		330836	0					
ANR	331220	BreakStatement	break ;	2295:5:73659:73664	330836	7	True				
ANR	331221	IfStatement	if ( pTpe -> data . field . options . bEscapeCC )		330836	11					
ANR	331222	Condition	pTpe -> data . field . options . bEscapeCC	2297:7:73679:73712	330836	0	True				
ANR	331223	MemberAccess	pTpe -> data . field . options . bEscapeCC		330836	0					
ANR	331224	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331225	MemberAccess	pTpe -> data . field		330836	0					
ANR	331226	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331227	Identifier	pTpe		330836	0					
ANR	331228	Identifier	data		330836	1					
ANR	331229	Identifier	field		330836	1					
ANR	331230	Identifier	options		330836	1					
ANR	331231	Identifier	bEscapeCC		330836	1					
ANR	331232	CompoundStatement		74:43:2509:2509	330836	1					
ANR	331233	ExpressionStatement	"dbgprintf ( ""[escape control-characters] "" )"	2298:7:73724:73765	330836	0	True				
ANR	331234	CallExpression	"dbgprintf ( ""[escape control-characters] "" )"		330836	0					
ANR	331235	Callee	dbgprintf		330836	0					
ANR	331236	Identifier	dbgprintf		330836	0					
ANR	331237	ArgumentList	"""[escape control-characters] """		330836	1					
ANR	331238	Argument	"""[escape control-characters] """		330836	0					
ANR	331239	PrimaryExpression	"""[escape control-characters] """		330836	0					
ANR	331240	IfStatement	if ( pTpe -> data . field . options . bDropCC )		330836	12					
ANR	331241	Condition	pTpe -> data . field . options . bDropCC	2300:7:73780:73811	330836	0	True				
ANR	331242	MemberAccess	pTpe -> data . field . options . bDropCC		330836	0					
ANR	331243	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331244	MemberAccess	pTpe -> data . field		330836	0					
ANR	331245	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331246	Identifier	pTpe		330836	0					
ANR	331247	Identifier	data		330836	1					
ANR	331248	Identifier	field		330836	1					
ANR	331249	Identifier	options		330836	1					
ANR	331250	Identifier	bDropCC		330836	1					
ANR	331251	CompoundStatement		77:41:2608:2608	330836	1					
ANR	331252	ExpressionStatement	"dbgprintf ( ""[drop control-characters] "" )"	2301:7:73823:73862	330836	0	True				
ANR	331253	CallExpression	"dbgprintf ( ""[drop control-characters] "" )"		330836	0					
ANR	331254	Callee	dbgprintf		330836	0					
ANR	331255	Identifier	dbgprintf		330836	0					
ANR	331256	ArgumentList	"""[drop control-characters] """		330836	1					
ANR	331257	Argument	"""[drop control-characters] """		330836	0					
ANR	331258	PrimaryExpression	"""[drop control-characters] """		330836	0					
ANR	331259	IfStatement	if ( pTpe -> data . field . options . bSpaceCC )		330836	13					
ANR	331260	Condition	pTpe -> data . field . options . bSpaceCC	2303:7:73877:73909	330836	0	True				
ANR	331261	MemberAccess	pTpe -> data . field . options . bSpaceCC		330836	0					
ANR	331262	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331263	MemberAccess	pTpe -> data . field		330836	0					
ANR	331264	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331265	Identifier	pTpe		330836	0					
ANR	331266	Identifier	data		330836	1					
ANR	331267	Identifier	field		330836	1					
ANR	331268	Identifier	options		330836	1					
ANR	331269	Identifier	bSpaceCC		330836	1					
ANR	331270	CompoundStatement		80:42:2706:2706	330836	1					
ANR	331271	ExpressionStatement	"dbgprintf ( ""[replace control-characters with space] "" )"	2304:7:73921:73974	330836	0	True				
ANR	331272	CallExpression	"dbgprintf ( ""[replace control-characters with space] "" )"		330836	0					
ANR	331273	Callee	dbgprintf		330836	0					
ANR	331274	Identifier	dbgprintf		330836	0					
ANR	331275	ArgumentList	"""[replace control-characters with space] """		330836	1					
ANR	331276	Argument	"""[replace control-characters with space] """		330836	0					
ANR	331277	PrimaryExpression	"""[replace control-characters with space] """		330836	0					
ANR	331278	IfStatement	if ( pTpe -> data . field . options . bSecPathDrop )		330836	14					
ANR	331279	Condition	pTpe -> data . field . options . bSecPathDrop	2306:7:73989:74025	330836	0	True				
ANR	331280	MemberAccess	pTpe -> data . field . options . bSecPathDrop		330836	0					
ANR	331281	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331282	MemberAccess	pTpe -> data . field		330836	0					
ANR	331283	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331284	Identifier	pTpe		330836	0					
ANR	331285	Identifier	data		330836	1					
ANR	331286	Identifier	field		330836	1					
ANR	331287	Identifier	options		330836	1					
ANR	331288	Identifier	bSecPathDrop		330836	1					
ANR	331289	CompoundStatement		83:46:2822:2822	330836	1					
ANR	331290	ExpressionStatement	"dbgprintf ( ""[slashes are dropped] "" )"	2307:7:74037:74072	330836	0	True				
ANR	331291	CallExpression	"dbgprintf ( ""[slashes are dropped] "" )"		330836	0					
ANR	331292	Callee	dbgprintf		330836	0					
ANR	331293	Identifier	dbgprintf		330836	0					
ANR	331294	ArgumentList	"""[slashes are dropped] """		330836	1					
ANR	331295	Argument	"""[slashes are dropped] """		330836	0					
ANR	331296	PrimaryExpression	"""[slashes are dropped] """		330836	0					
ANR	331297	IfStatement	if ( pTpe -> data . field . options . bSecPathReplace )		330836	15					
ANR	331298	Condition	pTpe -> data . field . options . bSecPathReplace	2309:7:74087:74126	330836	0	True				
ANR	331299	MemberAccess	pTpe -> data . field . options . bSecPathReplace		330836	0					
ANR	331300	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331301	MemberAccess	pTpe -> data . field		330836	0					
ANR	331302	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331303	Identifier	pTpe		330836	0					
ANR	331304	Identifier	data		330836	1					
ANR	331305	Identifier	field		330836	1					
ANR	331306	Identifier	options		330836	1					
ANR	331307	Identifier	bSecPathReplace		330836	1					
ANR	331308	CompoundStatement		86:49:2923:2923	330836	1					
ANR	331309	ExpressionStatement	"dbgprintf ( ""[slashes are replaced by '_'] "" )"	2310:7:74138:74181	330836	0	True				
ANR	331310	CallExpression	"dbgprintf ( ""[slashes are replaced by '_'] "" )"		330836	0					
ANR	331311	Callee	dbgprintf		330836	0					
ANR	331312	Identifier	dbgprintf		330836	0					
ANR	331313	ArgumentList	"""[slashes are replaced by '_'] """		330836	1					
ANR	331314	Argument	"""[slashes are replaced by '_'] """		330836	0					
ANR	331315	PrimaryExpression	"""[slashes are replaced by '_'] """		330836	0					
ANR	331316	IfStatement	if ( pTpe -> data . field . options . bSPIffNo1stSP )		330836	16					
ANR	331317	Condition	pTpe -> data . field . options . bSPIffNo1stSP	2312:7:74196:74233	330836	0	True				
ANR	331318	MemberAccess	pTpe -> data . field . options . bSPIffNo1stSP		330836	0					
ANR	331319	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331320	MemberAccess	pTpe -> data . field		330836	0					
ANR	331321	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331322	Identifier	pTpe		330836	0					
ANR	331323	Identifier	data		330836	1					
ANR	331324	Identifier	field		330836	1					
ANR	331325	Identifier	options		330836	1					
ANR	331326	Identifier	bSPIffNo1stSP		330836	1					
ANR	331327	CompoundStatement		89:47:3030:3030	330836	1					
ANR	331328	ExpressionStatement	"dbgprintf ( ""[SP iff no first SP] "" )"	2313:7:74245:74279	330836	0	True				
ANR	331329	CallExpression	"dbgprintf ( ""[SP iff no first SP] "" )"		330836	0					
ANR	331330	Callee	dbgprintf		330836	0					
ANR	331331	Identifier	dbgprintf		330836	0					
ANR	331332	ArgumentList	"""[SP iff no first SP] """		330836	1					
ANR	331333	Argument	"""[SP iff no first SP] """		330836	0					
ANR	331334	PrimaryExpression	"""[SP iff no first SP] """		330836	0					
ANR	331335	IfStatement	if ( pTpe -> data . field . options . bCSV )		330836	17					
ANR	331336	Condition	pTpe -> data . field . options . bCSV	2315:7:74294:74322	330836	0	True				
ANR	331337	MemberAccess	pTpe -> data . field . options . bCSV		330836	0					
ANR	331338	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331339	MemberAccess	pTpe -> data . field		330836	0					
ANR	331340	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331341	Identifier	pTpe		330836	0					
ANR	331342	Identifier	data		330836	1					
ANR	331343	Identifier	field		330836	1					
ANR	331344	Identifier	options		330836	1					
ANR	331345	Identifier	bCSV		330836	1					
ANR	331346	CompoundStatement		92:38:3119:3119	330836	1					
ANR	331347	ExpressionStatement	"dbgprintf ( ""[format as CSV (RFC4180)]"" )"	2316:7:74334:74372	330836	0	True				
ANR	331348	CallExpression	"dbgprintf ( ""[format as CSV (RFC4180)]"" )"		330836	0					
ANR	331349	Callee	dbgprintf		330836	0					
ANR	331350	Identifier	dbgprintf		330836	0					
ANR	331351	ArgumentList	"""[format as CSV (RFC4180)]"""		330836	1					
ANR	331352	Argument	"""[format as CSV (RFC4180)]"""		330836	0					
ANR	331353	PrimaryExpression	"""[format as CSV (RFC4180)]"""		330836	0					
ANR	331354	IfStatement	if ( pTpe -> data . field . options . bJSON )		330836	18					
ANR	331355	Condition	pTpe -> data . field . options . bJSON	2318:7:74387:74416	330836	0	True				
ANR	331356	MemberAccess	pTpe -> data . field . options . bJSON		330836	0					
ANR	331357	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331358	MemberAccess	pTpe -> data . field		330836	0					
ANR	331359	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331360	Identifier	pTpe		330836	0					
ANR	331361	Identifier	data		330836	1					
ANR	331362	Identifier	field		330836	1					
ANR	331363	Identifier	options		330836	1					
ANR	331364	Identifier	bJSON		330836	1					
ANR	331365	CompoundStatement		95:39:3213:3213	330836	1					
ANR	331366	ExpressionStatement	"dbgprintf ( ""[format as JSON] "" )"	2319:5:74426:74456	330836	0	True				
ANR	331367	CallExpression	"dbgprintf ( ""[format as JSON] "" )"		330836	0					
ANR	331368	Callee	dbgprintf		330836	0					
ANR	331369	Identifier	dbgprintf		330836	0					
ANR	331370	ArgumentList	"""[format as JSON] """		330836	1					
ANR	331371	Argument	"""[format as JSON] """		330836	0					
ANR	331372	PrimaryExpression	"""[format as JSON] """		330836	0					
ANR	331373	IfStatement	if ( pTpe -> data . field . options . bJSONf )		330836	19					
ANR	331374	Condition	pTpe -> data . field . options . bJSONf	2321:7:74471:74501	330836	0	True				
ANR	331375	MemberAccess	pTpe -> data . field . options . bJSONf		330836	0					
ANR	331376	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331377	MemberAccess	pTpe -> data . field		330836	0					
ANR	331378	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331379	Identifier	pTpe		330836	0					
ANR	331380	Identifier	data		330836	1					
ANR	331381	Identifier	field		330836	1					
ANR	331382	Identifier	options		330836	1					
ANR	331383	Identifier	bJSONf		330836	1					
ANR	331384	CompoundStatement		98:40:3298:3298	330836	1					
ANR	331385	ExpressionStatement	"dbgprintf ( ""[format as JSON field] "" )"	2322:5:74511:74547	330836	0	True				
ANR	331386	CallExpression	"dbgprintf ( ""[format as JSON field] "" )"		330836	0					
ANR	331387	Callee	dbgprintf		330836	0					
ANR	331388	Identifier	dbgprintf		330836	0					
ANR	331389	ArgumentList	"""[format as JSON field] """		330836	1					
ANR	331390	Argument	"""[format as JSON field] """		330836	0					
ANR	331391	PrimaryExpression	"""[format as JSON field] """		330836	0					
ANR	331392	IfStatement	if ( pTpe -> data . field . options . bJSONr )		330836	20					
ANR	331393	Condition	pTpe -> data . field . options . bJSONr	2324:7:74562:74592	330836	0	True				
ANR	331394	MemberAccess	pTpe -> data . field . options . bJSONr		330836	0					
ANR	331395	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331396	MemberAccess	pTpe -> data . field		330836	0					
ANR	331397	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331398	Identifier	pTpe		330836	0					
ANR	331399	Identifier	data		330836	1					
ANR	331400	Identifier	field		330836	1					
ANR	331401	Identifier	options		330836	1					
ANR	331402	Identifier	bJSONr		330836	1					
ANR	331403	CompoundStatement		101:40:3389:3389	330836	1					
ANR	331404	ExpressionStatement	"dbgprintf ( ""[format as JSON without re-escaping] "" )"	2325:5:74602:74652	330836	0	True				
ANR	331405	CallExpression	"dbgprintf ( ""[format as JSON without re-escaping] "" )"		330836	0					
ANR	331406	Callee	dbgprintf		330836	0					
ANR	331407	Identifier	dbgprintf		330836	0					
ANR	331408	ArgumentList	"""[format as JSON without re-escaping] """		330836	1					
ANR	331409	Argument	"""[format as JSON without re-escaping] """		330836	0					
ANR	331410	PrimaryExpression	"""[format as JSON without re-escaping] """		330836	0					
ANR	331411	IfStatement	if ( pTpe -> data . field . options . bJSONfr )		330836	21					
ANR	331412	Condition	pTpe -> data . field . options . bJSONfr	2327:7:74667:74698	330836	0	True				
ANR	331413	MemberAccess	pTpe -> data . field . options . bJSONfr		330836	0					
ANR	331414	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331415	MemberAccess	pTpe -> data . field		330836	0					
ANR	331416	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331417	Identifier	pTpe		330836	0					
ANR	331418	Identifier	data		330836	1					
ANR	331419	Identifier	field		330836	1					
ANR	331420	Identifier	options		330836	1					
ANR	331421	Identifier	bJSONfr		330836	1					
ANR	331422	CompoundStatement		104:41:3495:3495	330836	1					
ANR	331423	ExpressionStatement	"dbgprintf ( ""[format as JSON field without re-escaping] "" )"	2328:5:74708:74764	330836	0	True				
ANR	331424	CallExpression	"dbgprintf ( ""[format as JSON field without re-escaping] "" )"		330836	0					
ANR	331425	Callee	dbgprintf		330836	0					
ANR	331426	Identifier	dbgprintf		330836	0					
ANR	331427	ArgumentList	"""[format as JSON field without re-escaping] """		330836	1					
ANR	331428	Argument	"""[format as JSON field without re-escaping] """		330836	0					
ANR	331429	PrimaryExpression	"""[format as JSON field without re-escaping] """		330836	0					
ANR	331430	IfStatement	if ( pTpe -> data . field . options . bMandatory )		330836	22					
ANR	331431	Condition	pTpe -> data . field . options . bMandatory	2330:7:74779:74813	330836	0	True				
ANR	331432	MemberAccess	pTpe -> data . field . options . bMandatory		330836	0					
ANR	331433	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331434	MemberAccess	pTpe -> data . field		330836	0					
ANR	331435	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331436	Identifier	pTpe		330836	0					
ANR	331437	Identifier	data		330836	1					
ANR	331438	Identifier	field		330836	1					
ANR	331439	Identifier	options		330836	1					
ANR	331440	Identifier	bMandatory		330836	1					
ANR	331441	CompoundStatement		107:44:3610:3610	330836	1					
ANR	331442	ExpressionStatement	"dbgprintf ( ""[mandatory field] "" )"	2331:5:74823:74854	330836	0	True				
ANR	331443	CallExpression	"dbgprintf ( ""[mandatory field] "" )"		330836	0					
ANR	331444	Callee	dbgprintf		330836	0					
ANR	331445	Identifier	dbgprintf		330836	0					
ANR	331446	ArgumentList	"""[mandatory field] """		330836	1					
ANR	331447	Argument	"""[mandatory field] """		330836	0					
ANR	331448	PrimaryExpression	"""[mandatory field] """		330836	0					
ANR	331449	IfStatement	if ( pTpe -> data . field . options . bDropLastLF )		330836	23					
ANR	331450	Condition	pTpe -> data . field . options . bDropLastLF	2333:7:74869:74904	330836	0	True				
ANR	331451	MemberAccess	pTpe -> data . field . options . bDropLastLF		330836	0					
ANR	331452	MemberAccess	pTpe -> data . field . options		330836	0					
ANR	331453	MemberAccess	pTpe -> data . field		330836	0					
ANR	331454	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331455	Identifier	pTpe		330836	0					
ANR	331456	Identifier	data		330836	1					
ANR	331457	Identifier	field		330836	1					
ANR	331458	Identifier	options		330836	1					
ANR	331459	Identifier	bDropLastLF		330836	1					
ANR	331460	CompoundStatement		110:45:3701:3701	330836	1					
ANR	331461	ExpressionStatement	"dbgprintf ( ""[drop last LF in msg] "" )"	2334:7:74916:74951	330836	0	True				
ANR	331462	CallExpression	"dbgprintf ( ""[drop last LF in msg] "" )"		330836	0					
ANR	331463	Callee	dbgprintf		330836	0					
ANR	331464	Identifier	dbgprintf		330836	0					
ANR	331465	ArgumentList	"""[drop last LF in msg] """		330836	1					
ANR	331466	Argument	"""[drop last LF in msg] """		330836	0					
ANR	331467	PrimaryExpression	"""[drop last LF in msg] """		330836	0					
ANR	331468	IfStatement	if ( pTpe -> data . field . has_fields == 1 )		330836	24					
ANR	331469	Condition	pTpe -> data . field . has_fields == 1	2336:7:74966:74997	330836	0	True				
ANR	331470	EqualityExpression	pTpe -> data . field . has_fields == 1		330836	0		==			
ANR	331471	MemberAccess	pTpe -> data . field . has_fields		330836	0					
ANR	331472	MemberAccess	pTpe -> data . field		330836	0					
ANR	331473	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331474	Identifier	pTpe		330836	0					
ANR	331475	Identifier	data		330836	1					
ANR	331476	Identifier	field		330836	1					
ANR	331477	Identifier	has_fields		330836	1					
ANR	331478	PrimaryExpression	1		330836	1					
ANR	331479	CompoundStatement		113:41:3794:3794	330836	1					
ANR	331480	ExpressionStatement	"dbgprintf ( ""[substring, field #%d only (delemiter %d)] "" , pTpe -> data . field . iFieldNr , pTpe -> data . field . field_delim )"	2337:7:75009:75128	330836	0	True				
ANR	331481	CallExpression	"dbgprintf ( ""[substring, field #%d only (delemiter %d)] "" , pTpe -> data . field . iFieldNr , pTpe -> data . field . field_delim )"		330836	0					
ANR	331482	Callee	dbgprintf		330836	0					
ANR	331483	Identifier	dbgprintf		330836	0					
ANR	331484	ArgumentList	"""[substring, field #%d only (delemiter %d)] """		330836	1					
ANR	331485	Argument	"""[substring, field #%d only (delemiter %d)] """		330836	0					
ANR	331486	PrimaryExpression	"""[substring, field #%d only (delemiter %d)] """		330836	0					
ANR	331487	Argument	pTpe -> data . field . iFieldNr		330836	1					
ANR	331488	MemberAccess	pTpe -> data . field . iFieldNr		330836	0					
ANR	331489	MemberAccess	pTpe -> data . field		330836	0					
ANR	331490	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331491	Identifier	pTpe		330836	0					
ANR	331492	Identifier	data		330836	1					
ANR	331493	Identifier	field		330836	1					
ANR	331494	Identifier	iFieldNr		330836	1					
ANR	331495	Argument	pTpe -> data . field . field_delim		330836	2					
ANR	331496	MemberAccess	pTpe -> data . field . field_delim		330836	0					
ANR	331497	MemberAccess	pTpe -> data . field		330836	0					
ANR	331498	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331499	Identifier	pTpe		330836	0					
ANR	331500	Identifier	data		330836	1					
ANR	331501	Identifier	field		330836	1					
ANR	331502	Identifier	field_delim		330836	1					
ANR	331503	IfStatement	if ( pTpe -> data . field . iFromPos != 0 || pTpe -> data . field . iToPos != 0 )		330836	25					
ANR	331504	Condition	pTpe -> data . field . iFromPos != 0 || pTpe -> data . field . iToPos != 0	2340:7:75143:75204	330836	0	True				
ANR	331505	OrExpression	pTpe -> data . field . iFromPos != 0 || pTpe -> data . field . iToPos != 0		330836	0		||			
ANR	331506	EqualityExpression	pTpe -> data . field . iFromPos != 0		330836	0		!=			
ANR	331507	MemberAccess	pTpe -> data . field . iFromPos		330836	0					
ANR	331508	MemberAccess	pTpe -> data . field		330836	0					
ANR	331509	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331510	Identifier	pTpe		330836	0					
ANR	331511	Identifier	data		330836	1					
ANR	331512	Identifier	field		330836	1					
ANR	331513	Identifier	iFromPos		330836	1					
ANR	331514	PrimaryExpression	0		330836	1					
ANR	331515	EqualityExpression	pTpe -> data . field . iToPos != 0		330836	1		!=			
ANR	331516	MemberAccess	pTpe -> data . field . iToPos		330836	0					
ANR	331517	MemberAccess	pTpe -> data . field		330836	0					
ANR	331518	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331519	Identifier	pTpe		330836	0					
ANR	331520	Identifier	data		330836	1					
ANR	331521	Identifier	field		330836	1					
ANR	331522	Identifier	iToPos		330836	1					
ANR	331523	PrimaryExpression	0		330836	1					
ANR	331524	CompoundStatement		117:71:4001:4001	330836	1					
ANR	331525	ExpressionStatement	"dbgprintf ( ""[substring, from character %d to %d] "" , pTpe -> data . field . iFromPos , pTpe -> data . field . iToPos )"	2341:7:75216:75330	330836	0	True				
ANR	331526	CallExpression	"dbgprintf ( ""[substring, from character %d to %d] "" , pTpe -> data . field . iFromPos , pTpe -> data . field . iToPos )"		330836	0					
ANR	331527	Callee	dbgprintf		330836	0					
ANR	331528	Identifier	dbgprintf		330836	0					
ANR	331529	ArgumentList	"""[substring, from character %d to %d] """		330836	1					
ANR	331530	Argument	"""[substring, from character %d to %d] """		330836	0					
ANR	331531	PrimaryExpression	"""[substring, from character %d to %d] """		330836	0					
ANR	331532	Argument	pTpe -> data . field . iFromPos		330836	1					
ANR	331533	MemberAccess	pTpe -> data . field . iFromPos		330836	0					
ANR	331534	MemberAccess	pTpe -> data . field		330836	0					
ANR	331535	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331536	Identifier	pTpe		330836	0					
ANR	331537	Identifier	data		330836	1					
ANR	331538	Identifier	field		330836	1					
ANR	331539	Identifier	iFromPos		330836	1					
ANR	331540	Argument	pTpe -> data . field . iToPos		330836	2					
ANR	331541	MemberAccess	pTpe -> data . field . iToPos		330836	0					
ANR	331542	MemberAccess	pTpe -> data . field		330836	0					
ANR	331543	PtrMemberAccess	pTpe -> data		330836	0					
ANR	331544	Identifier	pTpe		330836	0					
ANR	331545	Identifier	data		330836	1					
ANR	331546	Identifier	field		330836	1					
ANR	331547	Identifier	iToPos		330836	1					
ANR	331548	BreakStatement	break ;	2345:4:75342:75347	330836	26	True				
ANR	331549	IfStatement	if ( pTpe -> bComplexProcessing )		330836	2					
ANR	331550	Condition	pTpe -> bComplexProcessing	2347:6:75360:75383	330836	0	True				
ANR	331551	PtrMemberAccess	pTpe -> bComplexProcessing		330836	0					
ANR	331552	Identifier	pTpe		330836	0					
ANR	331553	Identifier	bComplexProcessing		330836	1					
ANR	331554	ExpressionStatement	"dbgprintf ( ""[COMPLEX]"" )"	2348:4:75390:75412	330836	1	True				
ANR	331555	CallExpression	"dbgprintf ( ""[COMPLEX]"" )"		330836	0					
ANR	331556	Callee	dbgprintf		330836	0					
ANR	331557	Identifier	dbgprintf		330836	0					
ANR	331558	ArgumentList	"""[COMPLEX]"""		330836	1					
ANR	331559	Argument	"""[COMPLEX]"""		330836	0					
ANR	331560	PrimaryExpression	"""[COMPLEX]"""		330836	0					
ANR	331561	ExpressionStatement	"dbgprintf ( ""\\n"" )"	2349:3:75417:75432	330836	3	True				
ANR	331562	CallExpression	"dbgprintf ( ""\\n"" )"		330836	0					
ANR	331563	Callee	dbgprintf		330836	0					
ANR	331564	Identifier	dbgprintf		330836	0					
ANR	331565	ArgumentList	"""\\n"""		330836	1					
ANR	331566	Argument	"""\\n"""		330836	0					
ANR	331567	PrimaryExpression	"""\\n"""		330836	0					
ANR	331568	ExpressionStatement	pTpe = pTpe -> pNext	2350:3:75437:75455	330836	4	True				
ANR	331569	AssignmentExpression	pTpe = pTpe -> pNext		330836	0		=			
ANR	331570	Identifier	pTpe		330836	0					
ANR	331571	PtrMemberAccess	pTpe -> pNext		330836	1					
ANR	331572	Identifier	pTpe		330836	0					
ANR	331573	Identifier	pNext		330836	1					
ANR	331574	ExpressionStatement	pTpl = pTpl -> pNext	2352:2:75463:75481	330836	6	True				
ANR	331575	AssignmentExpression	pTpl = pTpl -> pNext		330836	0		=			
ANR	331576	Identifier	pTpl		330836	0					
ANR	331577	PtrMemberAccess	pTpl -> pNext		330836	1					
ANR	331578	Identifier	pTpl		330836	0					
ANR	331579	Identifier	pNext		330836	1					
ANR	331580	ReturnType	void		330836	1					
ANR	331581	Identifier	tplPrintList		330836	2					
ANR	331582	ParameterList	rsconf_t * conf		330836	3					
ANR	331583	Parameter	rsconf_t * conf	2223:18:71189:71202	330836	0	True				
ANR	331584	ParameterType	rsconf_t *		330836	0					
ANR	331585	Identifier	conf		330836	1					
ANR	331586	CFGEntryNode	ENTRY		330836		True				
ANR	331587	CFGExitNode	EXIT		330836		True				
ANR	331588	Symbol	pTpe -> data . field . iFromPos		330836						
ANR	331589	Symbol	pTpe -> data . field . iFieldNr		330836						
ANR	331590	Symbol	pTpe -> data . field . options . bCSV		330836						
ANR	331591	Symbol	pTpe -> data . field . options . bJSONr		330836						
ANR	331592	Symbol	pTpe -> eEntryType		330836						
ANR	331593	Symbol	conf		330836						
ANR	331594	Symbol	PROP_LOCAL_VAR		330836						
ANR	331595	Symbol	pTpe -> data . field . options . bJSON		330836						
ANR	331596	Symbol	pTpe -> data . field . options . bJSONf		330836						
ANR	331597	Symbol	conf -> templates . root		330836						
ANR	331598	Symbol	SQL_ESCAPE		330836						
ANR	331599	Symbol	pTpe -> data . field . field_delim		330836						
ANR	331600	Symbol	NULL		330836						
ANR	331601	Symbol	pTpe -> data . field . msgProp . id		330836						
ANR	331602	Symbol	pTpe -> data . field . has_fields		330836						
ANR	331603	Symbol	pTpe -> data . field . options . bEscapeCC		330836						
ANR	331604	Symbol	* pTpe		330836						
ANR	331605	Symbol	pTpe -> data		330836						
ANR	331606	Symbol	* pTpl		330836						
ANR	331607	Symbol	pTpe -> data . field . eDateFormat		330836						
ANR	331608	Symbol	pTpe -> data . field . options . bSPIffNo1stSP		330836						
ANR	331609	Symbol	PROP_CEE		330836						
ANR	331610	Symbol	JSON_ESCAPE		330836						
ANR	331611	Symbol	pTpl -> pEntryRoot		330836						
ANR	331612	Symbol	pTpe -> bComplexProcessing		330836						
ANR	331613	Symbol	pTpe -> data . field . options . bSecPathReplace		330836						
ANR	331614	Symbol	STDSQL_ESCAPE		330836						
ANR	331615	Symbol	* conf		330836						
ANR	331616	Symbol	pTpl -> pszName		330836						
ANR	331617	Symbol	pTpe -> data . field . options . bMandatory		330836						
ANR	331618	Symbol	pTpe -> pNext		330836						
ANR	331619	Symbol	pTpe -> data . constant		330836						
ANR	331620	Symbol	pTpl		330836						
ANR	331621	Symbol	pTpe -> data . field . eCaseConv		330836						
ANR	331622	Symbol	pTpe -> data . field . options . bSpaceCC		330836						
ANR	331623	Symbol	pTpl -> optCaseSensitive		330836						
ANR	331624	Symbol	pTpe -> data . constant . pConstant		330836						
ANR	331625	Symbol	pTpe -> data . field . msgProp		330836						
ANR	331626	Symbol	pTpe -> data . field . options . bJSONfr		330836						
ANR	331627	Symbol	pTpl -> pNext		330836						
ANR	331628	Symbol	pTpe -> data . field . options		330836						
ANR	331629	Symbol	conf -> templates		330836						
ANR	331630	Symbol	pTpl -> optFormatEscape		330836						
ANR	331631	Symbol	pTpe		330836						
ANR	331632	Symbol	pTpe -> data . field . options . bSecPathDrop		330836						
ANR	331633	Symbol	pTpe -> data . field . options . bDropCC		330836						
ANR	331634	Symbol	pTpe -> data . field . options . bDropLastLF		330836						
ANR	331635	Symbol	pTpe -> data . field . iToPos		330836						
ANR	331636	Symbol	pTpe -> data . field		330836						
ANR	331637	Symbol	pTpe -> data . field . msgProp . name		330836						
ANR	331638	Function	templateInit	2362:0:75610:75794							
ANR	331639	FunctionDef	templateInit ()		331638	0					
ANR	331640	CompoundStatement		2363:0:75638:75794	331638	0					
ANR	331641	ExpressionStatement	DEFiRet	2364:1:75641:75648	331638	0	True				
ANR	331642	Identifier	DEFiRet		331638	0					
ANR	331643	ExpressionStatement	CHKiRet ( objGetObjInterface ( & obj ) )	2365:1:75651:75684	331638	1	True				
ANR	331644	CallExpression	CHKiRet ( objGetObjInterface ( & obj ) )		331638	0					
ANR	331645	Callee	CHKiRet		331638	0					
ANR	331646	Identifier	CHKiRet		331638	0					
ANR	331647	ArgumentList	objGetObjInterface ( & obj )		331638	1					
ANR	331648	Argument	objGetObjInterface ( & obj )		331638	0					
ANR	331649	CallExpression	objGetObjInterface ( & obj )		331638	0					
ANR	331650	Callee	objGetObjInterface		331638	0					
ANR	331651	Identifier	objGetObjInterface		331638	0					
ANR	331652	ArgumentList	& obj		331638	1					
ANR	331653	Argument	& obj		331638	0					
ANR	331654	UnaryOperationExpression	& obj		331638	0					
ANR	331655	UnaryOperator	&		331638	0					
ANR	331656	Identifier	obj		331638	1					
ANR	331657	ExpressionStatement	"CHKiRet ( objUse ( errmsg , CORE_COMPONENT ) )"	2366:1:75687:75726	331638	2	True				
ANR	331658	CallExpression	"CHKiRet ( objUse ( errmsg , CORE_COMPONENT ) )"		331638	0					
ANR	331659	Callee	CHKiRet		331638	0					
ANR	331660	Identifier	CHKiRet		331638	0					
ANR	331661	ArgumentList	"objUse ( errmsg , CORE_COMPONENT )"		331638	1					
ANR	331662	Argument	"objUse ( errmsg , CORE_COMPONENT )"		331638	0					
ANR	331663	CallExpression	"objUse ( errmsg , CORE_COMPONENT )"		331638	0					
ANR	331664	Callee	objUse		331638	0					
ANR	331665	Identifier	objUse		331638	0					
ANR	331666	ArgumentList	errmsg		331638	1					
ANR	331667	Argument	errmsg		331638	0					
ANR	331668	Identifier	errmsg		331638	0					
ANR	331669	Argument	CORE_COMPONENT		331638	1					
ANR	331670	Identifier	CORE_COMPONENT		331638	0					
ANR	331671	ExpressionStatement	"CHKiRet ( objUse ( strgen , CORE_COMPONENT ) )"	2367:1:75729:75768	331638	3	True				
ANR	331672	CallExpression	"CHKiRet ( objUse ( strgen , CORE_COMPONENT ) )"		331638	0					
ANR	331673	Callee	CHKiRet		331638	0					
ANR	331674	Identifier	CHKiRet		331638	0					
ANR	331675	ArgumentList	"objUse ( strgen , CORE_COMPONENT )"		331638	1					
ANR	331676	Argument	"objUse ( strgen , CORE_COMPONENT )"		331638	0					
ANR	331677	CallExpression	"objUse ( strgen , CORE_COMPONENT )"		331638	0					
ANR	331678	Callee	objUse		331638	0					
ANR	331679	Identifier	objUse		331638	0					
ANR	331680	ArgumentList	strgen		331638	1					
ANR	331681	Argument	strgen		331638	0					
ANR	331682	Identifier	strgen		331638	0					
ANR	331683	Argument	CORE_COMPONENT		331638	1					
ANR	331684	Identifier	CORE_COMPONENT		331638	0					
ANR	331685	Label	finalize_it :	2369:0:75771:75782	331638	4	True				
ANR	331686	Identifier	finalize_it		331638	0					
ANR	331687	ExpressionStatement	RETiRet	2370:1:75785:75792	331638	5	True				
ANR	331688	Identifier	RETiRet		331638	0					
ANR	331689	ReturnType	rsRetVal		331638	1					
ANR	331690	Identifier	templateInit		331638	2					
ANR	331691	ParameterList			331638	3					
ANR	331692	CFGEntryNode	ENTRY		331638		True				
ANR	331693	CFGExitNode	EXIT		331638		True				
ANR	331694	Symbol	objUse		331638						
ANR	331695	Symbol	CORE_COMPONENT		331638						
ANR	331696	Symbol	objGetObjInterface		331638						
ANR	331697	Symbol	errmsg		331638						
ANR	331698	Symbol	& obj		331638						
ANR	331699	Symbol	strgen		331638						
