command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	345533	File	data/converged/CVE-2017-12588_rsyslog/tests_uxsockrcvr.c								
ANR	345534	DeclStmt									
ANR	345535	Decl							char	char *	sockName
ANR	345536	DeclStmt									
ANR	345537	Decl							int	int	sock
ANR	345538	DeclStmt									
ANR	345539	Decl							int	int	addNL
ANR	345540	Function	cleanup	50:0:1446:1507							
ANR	345541	FunctionDef	cleanup ()		345540	0					
ANR	345542	CompoundStatement		52:0:1465:1507	345540	0					
ANR	345543	ExpressionStatement	unlink ( sockName )	53:8:1475:1491	345540	0	True				
ANR	345544	CallExpression	unlink ( sockName )		345540	0					
ANR	345545	Callee	unlink		345540	0					
ANR	345546	Identifier	unlink		345540	0					
ANR	345547	ArgumentList	sockName		345540	1					
ANR	345548	Argument	sockName		345540	0					
ANR	345549	Identifier	sockName		345540	0					
ANR	345550	ExpressionStatement	close ( sock )	54:1:1494:1505	345540	1	True				
ANR	345551	CallExpression	close ( sock )		345540	0					
ANR	345552	Callee	close		345540	0					
ANR	345553	Identifier	close		345540	0					
ANR	345554	ArgumentList	sock		345540	1					
ANR	345555	Argument	sock		345540	0					
ANR	345556	Identifier	sock		345540	0					
ANR	345557	ReturnType	void		345540	1					
ANR	345558	Identifier	cleanup		345540	2					
ANR	345559	ParameterList			345540	3					
ANR	345560	CFGEntryNode	ENTRY		345540		True				
ANR	345561	CFGExitNode	EXIT		345540		True				
ANR	345562	Symbol	sock		345540						
ANR	345563	Symbol	sockName		345540						
ANR	345564	Function	usage	65:0:1575:1806							
ANR	345565	FunctionDef	usage ()		345564	0					
ANR	345566	CompoundStatement		67:0:1592:1806	345564	0					
ANR	345567	Statement	fprintf	68:1:1595:1601	345564	0	True				
ANR	345568	Statement	(	68:8:1602:1602	345564	1	True				
ANR	345569	Statement	stderr	68:9:1603:1608	345564	2	True				
ANR	345570	Statement	","	68:15:1609:1609	345564	3	True				
ANR	345571	Statement	"""usage: uxsockrcvr -s /socket/name -o /output/file -l\\n"""	68:17:1611:1666	345564	4	True				
ANR	345572	Statement	"""-l adds newline after each message received\\n"""	69:3:1671:1717	345564	5	True				
ANR	345573	Statement	"""-s MUST be specified\\n"""	70:3:1722:1745	345564	6	True				
ANR	345574	Statement	"""if -o ist not specified, stdout is used\\n"""	71:3:1750:1792	345564	7	True				
ANR	345575	Statement	)	71:46:1793:1793	345564	8	True				
ANR	345576	ExpressionStatement		71:47:1794:1794	345564	9	True				
ANR	345577	ExpressionStatement	exit ( 1 )	72:1:1797:1804	345564	10	True				
ANR	345578	CallExpression	exit ( 1 )		345564	0					
ANR	345579	Callee	exit		345564	0					
ANR	345580	Identifier	exit		345564	0					
ANR	345581	ArgumentList	1		345564	1					
ANR	345582	Argument	1		345564	0					
ANR	345583	PrimaryExpression	1		345564	0					
ANR	345584	ReturnType	void		345564	1					
ANR	345585	Identifier	usage		345564	2					
ANR	345586	ParameterList			345564	3					
ANR	345587	CFGEntryNode	ENTRY		345564		True				
ANR	345588	CFGExitNode	EXIT		345564		True				
ANR	345589	Function	main	76:0:1810:3765							
ANR	345590	FunctionDef	"main (int argc , char * argv [ ])"		345589	0					
ANR	345591	CompoundStatement		78:0:1843:3765	345589	0					
ANR	345592	IdentifierDeclStatement	int opt ;	79:1:1846:1853	345589	0	True				
ANR	345593	IdentifierDecl	opt		345589	0					
ANR	345594	IdentifierDeclType	int		345589	0					
ANR	345595	Identifier	opt		345589	1					
ANR	345596	IdentifierDeclStatement	int rlen ;	80:8:1863:1871	345589	1	True				
ANR	345597	IdentifierDecl	rlen		345589	0					
ANR	345598	IdentifierDeclType	int		345589	0					
ANR	345599	Identifier	rlen		345589	1					
ANR	345600	IdentifierDeclStatement	FILE * fp = stdout ;	81:1:1874:1891	345589	2	True				
ANR	345601	IdentifierDecl	* fp = stdout		345589	0					
ANR	345602	IdentifierDeclType	FILE *		345589	0					
ANR	345603	Identifier	fp		345589	1					
ANR	345604	AssignmentExpression	* fp = stdout		345589	2		=			
ANR	345605	Identifier	stdout		345589	0					
ANR	345606	Identifier	stdout		345589	1					
ANR	345607	IdentifierDeclStatement	unsigned char data [ 128 * 1024 ] ;	82:8:1901:1929	345589	3	True				
ANR	345608	IdentifierDecl	data [ 128 * 1024 ]		345589	0					
ANR	345609	IdentifierDeclType	unsigned char [ 128 * 1024 ]		345589	0					
ANR	345610	Identifier	data		345589	1					
ANR	345611	MultiplicativeExpression	128 * 1024		345589	2		*			
ANR	345612	PrimaryExpression	128		345589	0					
ANR	345613	PrimaryExpression	1024		345589	1					
ANR	345614	IdentifierDeclStatement	struct sockaddr_un addr ;	83:8:1939:1963	345589	4	True				
ANR	345615	IdentifierDecl	addr		345589	0					
ANR	345616	IdentifierDeclType	struct sockaddr_un		345589	0					
ANR	345617	Identifier	addr		345589	1					
ANR	345618	IdentifierDeclStatement	struct sockaddr from ;	84:8:1997:2018	345589	5	True				
ANR	345619	IdentifierDecl	from		345589	0					
ANR	345620	IdentifierDeclType	struct sockaddr		345589	0					
ANR	345621	Identifier	from		345589	1					
ANR	345622	IdentifierDeclStatement	socklen_t fromlen ;	85:8:2028:2045	345589	6	True				
ANR	345623	IdentifierDecl	fromlen		345589	0					
ANR	345624	IdentifierDeclType	socklen_t		345589	0					
ANR	345625	Identifier	fromlen		345589	1					
ANR	345626	IfStatement	if ( argc < 2 )		345589	7					
ANR	345627	Condition	argc < 2	87:4:2052:2059	345589	0	True				
ANR	345628	RelationalExpression	argc < 2		345589	0		<			
ANR	345629	Identifier	argc		345589	0					
ANR	345630	PrimaryExpression	2		345589	1					
ANR	345631	CompoundStatement		10:14:218:218	345589	1					
ANR	345632	ExpressionStatement	"fprintf ( stderr , ""error: too few arguments!\\n"" )"	88:2:2066:2112	345589	0	True				
ANR	345633	CallExpression	"fprintf ( stderr , ""error: too few arguments!\\n"" )"		345589	0					
ANR	345634	Callee	fprintf		345589	0					
ANR	345635	Identifier	fprintf		345589	0					
ANR	345636	ArgumentList	stderr		345589	1					
ANR	345637	Argument	stderr		345589	0					
ANR	345638	Identifier	stderr		345589	0					
ANR	345639	Argument	"""error: too few arguments!\\n"""		345589	1					
ANR	345640	PrimaryExpression	"""error: too few arguments!\\n"""		345589	0					
ANR	345641	ExpressionStatement	usage ( )	89:2:2116:2123	345589	1	True				
ANR	345642	CallExpression	usage ( )		345589	0					
ANR	345643	Callee	usage		345589	0					
ANR	345644	Identifier	usage		345589	0					
ANR	345645	ArgumentList			345589	1					
ANR	345646	WhileStatement	"while ( ( opt = getopt ( argc , argv , ""s:o:l"" ) ) != EOF )"		345589	8					
ANR	345647	Condition	"( opt = getopt ( argc , argv , ""s:o:l"" ) ) != EOF"	92:7:2136:2177	345589	0	True				
ANR	345648	EqualityExpression	"( opt = getopt ( argc , argv , ""s:o:l"" ) ) != EOF"		345589	0		!=			
ANR	345649	AssignmentExpression	"opt = getopt ( argc , argv , ""s:o:l"" )"		345589	0		=			
ANR	345650	Identifier	opt		345589	0					
ANR	345651	CallExpression	"getopt ( argc , argv , ""s:o:l"" )"		345589	1					
ANR	345652	Callee	getopt		345589	0					
ANR	345653	Identifier	getopt		345589	0					
ANR	345654	ArgumentList	argc		345589	1					
ANR	345655	Argument	argc		345589	0					
ANR	345656	Identifier	argc		345589	0					
ANR	345657	Argument	argv		345589	1					
ANR	345658	Identifier	argv		345589	0					
ANR	345659	Argument	"""s:o:l"""		345589	2					
ANR	345660	PrimaryExpression	"""s:o:l"""		345589	0					
ANR	345661	Identifier	EOF		345589	1					
ANR	345662	CompoundStatement		15:51:336:336	345589	1					
ANR	345663	SwitchStatement	switch ( ( char ) opt )		345589	0					
ANR	345664	Condition	( char ) opt	93:9:2191:2199	345589	0	True				
ANR	345665	CastExpression	( char ) opt		345589	0					
ANR	345666	CastTarget	char		345589	0					
ANR	345667	Identifier	opt		345589	1					
ANR	345668	CompoundStatement		16:20:358:358	345589	1					
ANR	345669	Label	case 'l' :	94:16:2220:2228	345589	0	True				
ANR	345670	ExpressionStatement	addNL = 1	95:3:2233:2242	345589	1	True				
ANR	345671	AssignmentExpression	addNL = 1		345589	0		=			
ANR	345672	Identifier	addNL		345589	0					
ANR	345673	PrimaryExpression	1		345589	1					
ANR	345674	BreakStatement	break ;	96:3:2247:2252	345589	2	True				
ANR	345675	Label	case 's' :	97:16:2270:2278	345589	3	True				
ANR	345676	ExpressionStatement	sockName = optarg	98:3:2283:2300	345589	4	True				
ANR	345677	AssignmentExpression	sockName = optarg		345589	0		=			
ANR	345678	Identifier	sockName		345589	0					
ANR	345679	Identifier	optarg		345589	1					
ANR	345680	BreakStatement	break ;	99:3:2305:2310	345589	5	True				
ANR	345681	Label	case 'o' :	100:16:2328:2336	345589	6	True				
ANR	345682	IfStatement	"if ( ( fp = fopen ( optarg , ""w"" ) ) == NULL )"		345589	7					
ANR	345683	Condition	"( fp = fopen ( optarg , ""w"" ) ) == NULL"	101:6:2344:2376	345589	0	True				
ANR	345684	EqualityExpression	"( fp = fopen ( optarg , ""w"" ) ) == NULL"		345589	0		==			
ANR	345685	AssignmentExpression	"fp = fopen ( optarg , ""w"" )"		345589	0		=			
ANR	345686	Identifier	fp		345589	0					
ANR	345687	CallExpression	"fopen ( optarg , ""w"" )"		345589	1					
ANR	345688	Callee	fopen		345589	0					
ANR	345689	Identifier	fopen		345589	0					
ANR	345690	ArgumentList	optarg		345589	1					
ANR	345691	Argument	optarg		345589	0					
ANR	345692	Identifier	optarg		345589	0					
ANR	345693	Argument	"""w"""		345589	1					
ANR	345694	PrimaryExpression	"""w"""		345589	0					
ANR	345695	Identifier	NULL		345589	1					
ANR	345696	CompoundStatement		24:41:535:535	345589	1					
ANR	345697	ExpressionStatement	perror ( optarg )	102:4:2385:2399	345589	0	True				
ANR	345698	CallExpression	perror ( optarg )		345589	0					
ANR	345699	Callee	perror		345589	0					
ANR	345700	Identifier	perror		345589	0					
ANR	345701	ArgumentList	optarg		345589	1					
ANR	345702	Argument	optarg		345589	0					
ANR	345703	Identifier	optarg		345589	0					
ANR	345704	ExpressionStatement	exit ( 1 )	103:4:2405:2412	345589	1	True				
ANR	345705	CallExpression	exit ( 1 )		345589	0					
ANR	345706	Callee	exit		345589	0					
ANR	345707	Identifier	exit		345589	0					
ANR	345708	ArgumentList	1		345589	1					
ANR	345709	Argument	1		345589	0					
ANR	345710	PrimaryExpression	1		345589	0					
ANR	345711	BreakStatement	break ;	105:3:2422:2427	345589	8	True				
ANR	345712	Label	default :	106:2:2431:2438	345589	9	True				
ANR	345713	Identifier	default		345589	0					
ANR	345714	ExpressionStatement	usage ( )	106:10:2439:2446	345589	10	True				
ANR	345715	CallExpression	usage ( )		345589	0					
ANR	345716	Callee	usage		345589	0					
ANR	345717	Identifier	usage		345589	0					
ANR	345718	ArgumentList			345589	1					
ANR	345719	IfStatement	if ( sockName == NULL )		345589	9					
ANR	345720	Condition	sockName == NULL	110:4:2460:2475	345589	0	True				
ANR	345721	EqualityExpression	sockName == NULL		345589	0		==			
ANR	345722	Identifier	sockName		345589	0					
ANR	345723	Identifier	NULL		345589	1					
ANR	345724	CompoundStatement		33:22:634:634	345589	1					
ANR	345725	ExpressionStatement	"fprintf ( stderr , ""error: -s /socket/name must be specified!\\n"" )"	111:2:2482:2544	345589	0	True				
ANR	345726	CallExpression	"fprintf ( stderr , ""error: -s /socket/name must be specified!\\n"" )"		345589	0					
ANR	345727	Callee	fprintf		345589	0					
ANR	345728	Identifier	fprintf		345589	0					
ANR	345729	ArgumentList	stderr		345589	1					
ANR	345730	Argument	stderr		345589	0					
ANR	345731	Identifier	stderr		345589	0					
ANR	345732	Argument	"""error: -s /socket/name must be specified!\\n"""		345589	1					
ANR	345733	PrimaryExpression	"""error: -s /socket/name must be specified!\\n"""		345589	0					
ANR	345734	ExpressionStatement	exit ( 1 )	112:2:2548:2555	345589	1	True				
ANR	345735	CallExpression	exit ( 1 )		345589	0					
ANR	345736	Callee	exit		345589	0					
ANR	345737	Identifier	exit		345589	0					
ANR	345738	ArgumentList	1		345589	1					
ANR	345739	Argument	1		345589	0					
ANR	345740	PrimaryExpression	1		345589	0					
ANR	345741	IfStatement	"if ( signal ( SIGTERM , doTerm ) == SIG_ERR )"		345589	10					
ANR	345742	Condition	"signal ( SIGTERM , doTerm ) == SIG_ERR"	115:11:2572:2605	345589	0	True				
ANR	345743	EqualityExpression	"signal ( SIGTERM , doTerm ) == SIG_ERR"		345589	0		==			
ANR	345744	CallExpression	"signal ( SIGTERM , doTerm )"		345589	0					
ANR	345745	Callee	signal		345589	0					
ANR	345746	Identifier	signal		345589	0					
ANR	345747	ArgumentList	SIGTERM		345589	1					
ANR	345748	Argument	SIGTERM		345589	0					
ANR	345749	Identifier	SIGTERM		345589	0					
ANR	345750	Argument	doTerm		345589	1					
ANR	345751	Identifier	doTerm		345589	0					
ANR	345752	Identifier	SIG_ERR		345589	1					
ANR	345753	CompoundStatement		38:47:764:764	345589	1					
ANR	345754	ExpressionStatement	"perror ( ""signal(SIGTERM, ...)"" )"	116:2:2612:2642	345589	0	True				
ANR	345755	CallExpression	"perror ( ""signal(SIGTERM, ...)"" )"		345589	0					
ANR	345756	Callee	perror		345589	0					
ANR	345757	Identifier	perror		345589	0					
ANR	345758	ArgumentList	"""signal(SIGTERM, ...)"""		345589	1					
ANR	345759	Argument	"""signal(SIGTERM, ...)"""		345589	0					
ANR	345760	PrimaryExpression	"""signal(SIGTERM, ...)"""		345589	0					
ANR	345761	ExpressionStatement	exit ( 1 )	117:2:2646:2653	345589	1	True				
ANR	345762	CallExpression	exit ( 1 )		345589	0					
ANR	345763	Callee	exit		345589	0					
ANR	345764	Identifier	exit		345589	0					
ANR	345765	ArgumentList	1		345589	1					
ANR	345766	Argument	1		345589	0					
ANR	345767	PrimaryExpression	1		345589	0					
ANR	345768	IfStatement	"if ( signal ( SIGINT , doTerm ) == SIG_ERR )"		345589	11					
ANR	345769	Condition	"signal ( SIGINT , doTerm ) == SIG_ERR"	119:11:2669:2701	345589	0	True				
ANR	345770	EqualityExpression	"signal ( SIGINT , doTerm ) == SIG_ERR"		345589	0		==			
ANR	345771	CallExpression	"signal ( SIGINT , doTerm )"		345589	0					
ANR	345772	Callee	signal		345589	0					
ANR	345773	Identifier	signal		345589	0					
ANR	345774	ArgumentList	SIGINT		345589	1					
ANR	345775	Argument	SIGINT		345589	0					
ANR	345776	Identifier	SIGINT		345589	0					
ANR	345777	Argument	doTerm		345589	1					
ANR	345778	Identifier	doTerm		345589	0					
ANR	345779	Identifier	SIG_ERR		345589	1					
ANR	345780	CompoundStatement		42:46:860:860	345589	1					
ANR	345781	ExpressionStatement	"perror ( ""signal(SIGINT, ...)"" )"	120:2:2708:2737	345589	0	True				
ANR	345782	CallExpression	"perror ( ""signal(SIGINT, ...)"" )"		345589	0					
ANR	345783	Callee	perror		345589	0					
ANR	345784	Identifier	perror		345589	0					
ANR	345785	ArgumentList	"""signal(SIGINT, ...)"""		345589	1					
ANR	345786	Argument	"""signal(SIGINT, ...)"""		345589	0					
ANR	345787	PrimaryExpression	"""signal(SIGINT, ...)"""		345589	0					
ANR	345788	ExpressionStatement	exit ( 1 )	121:2:2741:2748	345589	1	True				
ANR	345789	CallExpression	exit ( 1 )		345589	0					
ANR	345790	Callee	exit		345589	0					
ANR	345791	Identifier	exit		345589	0					
ANR	345792	ArgumentList	1		345589	1					
ANR	345793	Argument	1		345589	0					
ANR	345794	PrimaryExpression	1		345589	0					
ANR	345795	IfStatement	"if ( ( sock = socket ( AF_UNIX , SOCK_DGRAM , 0 ) ) < 0 )"		345589	12					
ANR	345796	Condition	"( sock = socket ( AF_UNIX , SOCK_DGRAM , 0 ) ) < 0"	125:12:2833:2875	345589	0	True				
ANR	345797	RelationalExpression	"( sock = socket ( AF_UNIX , SOCK_DGRAM , 0 ) ) < 0"		345589	0		<			
ANR	345798	AssignmentExpression	"sock = socket ( AF_UNIX , SOCK_DGRAM , 0 )"		345589	0		=			
ANR	345799	Identifier	sock		345589	0					
ANR	345800	CallExpression	"socket ( AF_UNIX , SOCK_DGRAM , 0 )"		345589	1					
ANR	345801	Callee	socket		345589	0					
ANR	345802	Identifier	socket		345589	0					
ANR	345803	ArgumentList	AF_UNIX		345589	1					
ANR	345804	Argument	AF_UNIX		345589	0					
ANR	345805	Identifier	AF_UNIX		345589	0					
ANR	345806	Argument	SOCK_DGRAM		345589	1					
ANR	345807	Identifier	SOCK_DGRAM		345589	0					
ANR	345808	Argument	0		345589	2					
ANR	345809	PrimaryExpression	0		345589	0					
ANR	345810	PrimaryExpression	0		345589	1					
ANR	345811	CompoundStatement		48:57:1034:1034	345589	1					
ANR	345812	ExpressionStatement	"perror ( ""server: socket"" )"	126:16:2896:2920	345589	0	True				
ANR	345813	CallExpression	"perror ( ""server: socket"" )"		345589	0					
ANR	345814	Callee	perror		345589	0					
ANR	345815	Identifier	perror		345589	0					
ANR	345816	ArgumentList	"""server: socket"""		345589	1					
ANR	345817	Argument	"""server: socket"""		345589	0					
ANR	345818	PrimaryExpression	"""server: socket"""		345589	0					
ANR	345819	ExpressionStatement	exit ( 1 )	127:16:2938:2945	345589	1	True				
ANR	345820	CallExpression	exit ( 1 )		345589	0					
ANR	345821	Callee	exit		345589	0					
ANR	345822	Identifier	exit		345589	0					
ANR	345823	ArgumentList	1		345589	1					
ANR	345824	Argument	1		345589	0					
ANR	345825	PrimaryExpression	1		345589	0					
ANR	345826	ExpressionStatement	atexit ( cleanup )	130:1:2959:2974	345589	13	True				
ANR	345827	CallExpression	atexit ( cleanup )		345589	0					
ANR	345828	Callee	atexit		345589	0					
ANR	345829	Identifier	atexit		345589	0					
ANR	345830	ArgumentList	cleanup		345589	1					
ANR	345831	Argument	cleanup		345589	0					
ANR	345832	Identifier	cleanup		345589	0					
ANR	345833	ExpressionStatement	"memset ( & addr , 0 , sizeof ( addr ) )"	133:8:3052:3082	345589	14	True				
ANR	345834	CallExpression	"memset ( & addr , 0 , sizeof ( addr ) )"		345589	0					
ANR	345835	Callee	memset		345589	0					
ANR	345836	Identifier	memset		345589	0					
ANR	345837	ArgumentList	& addr		345589	1					
ANR	345838	Argument	& addr		345589	0					
ANR	345839	UnaryOperationExpression	& addr		345589	0					
ANR	345840	UnaryOperator	&		345589	0					
ANR	345841	Identifier	addr		345589	1					
ANR	345842	Argument	0		345589	1					
ANR	345843	PrimaryExpression	0		345589	0					
ANR	345844	Argument	sizeof ( addr )		345589	2					
ANR	345845	SizeofExpression	sizeof ( addr )		345589	0					
ANR	345846	Sizeof	sizeof		345589	0					
ANR	345847	SizeofOperand	addr		345589	1					
ANR	345848	ExpressionStatement	addr . sun_family = AF_UNIX	134:8:3092:3117	345589	15	True				
ANR	345849	AssignmentExpression	addr . sun_family = AF_UNIX		345589	0		=			
ANR	345850	MemberAccess	addr . sun_family		345589	0					
ANR	345851	Identifier	addr		345589	0					
ANR	345852	Identifier	sun_family		345589	1					
ANR	345853	Identifier	AF_UNIX		345589	1					
ANR	345854	ExpressionStatement	"strcpy ( addr . sun_path , sockName )"	135:8:3127:3158	345589	16	True				
ANR	345855	CallExpression	"strcpy ( addr . sun_path , sockName )"		345589	0					
ANR	345856	Callee	strcpy		345589	0					
ANR	345857	Identifier	strcpy		345589	0					
ANR	345858	ArgumentList	addr . sun_path		345589	1					
ANR	345859	Argument	addr . sun_path		345589	0					
ANR	345860	MemberAccess	addr . sun_path		345589	0					
ANR	345861	Identifier	addr		345589	0					
ANR	345862	Identifier	sun_path		345589	1					
ANR	345863	Argument	sockName		345589	1					
ANR	345864	Identifier	sockName		345589	0					
ANR	345865	IfStatement	"if ( bind ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) < 0 )"		345589	17					
ANR	345866	Condition	"bind ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) < 0"	137:12:3181:3234	345589	0	True				
ANR	345867	RelationalExpression	"bind ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) < 0"		345589	0		<			
ANR	345868	CallExpression	"bind ( sock , ( struct sockaddr * ) & addr , sizeof ( addr ) )"		345589	0					
ANR	345869	Callee	bind		345589	0					
ANR	345870	Identifier	bind		345589	0					
ANR	345871	ArgumentList	sock		345589	1					
ANR	345872	Argument	sock		345589	0					
ANR	345873	Identifier	sock		345589	0					
ANR	345874	Argument	( struct sockaddr * ) & addr		345589	1					
ANR	345875	CastExpression	( struct sockaddr * ) & addr		345589	0					
ANR	345876	CastTarget	struct sockaddr *		345589	0					
ANR	345877	UnaryOperationExpression	& addr		345589	1					
ANR	345878	UnaryOperator	&		345589	0					
ANR	345879	Identifier	addr		345589	1					
ANR	345880	Argument	sizeof ( addr )		345589	2					
ANR	345881	SizeofExpression	sizeof ( addr )		345589	0					
ANR	345882	Sizeof	sizeof		345589	0					
ANR	345883	SizeofOperand	addr		345589	1					
ANR	345884	PrimaryExpression	0		345589	1					
ANR	345885	CompoundStatement		60:68:1393:1393	345589	1					
ANR	345886	ExpressionStatement	close ( sock )	138:16:3255:3266	345589	0	True				
ANR	345887	CallExpression	close ( sock )		345589	0					
ANR	345888	Callee	close		345589	0					
ANR	345889	Identifier	close		345589	0					
ANR	345890	ArgumentList	sock		345589	1					
ANR	345891	Argument	sock		345589	0					
ANR	345892	Identifier	sock		345589	0					
ANR	345893	ExpressionStatement	"perror ( ""server: bind"" )"	139:16:3284:3306	345589	1	True				
ANR	345894	CallExpression	"perror ( ""server: bind"" )"		345589	0					
ANR	345895	Callee	perror		345589	0					
ANR	345896	Identifier	perror		345589	0					
ANR	345897	ArgumentList	"""server: bind"""		345589	1					
ANR	345898	Argument	"""server: bind"""		345589	0					
ANR	345899	PrimaryExpression	"""server: bind"""		345589	0					
ANR	345900	ExpressionStatement	exit ( 1 )	140:16:3324:3331	345589	2	True				
ANR	345901	CallExpression	exit ( 1 )		345589	0					
ANR	345902	Callee	exit		345589	0					
ANR	345903	Identifier	exit		345589	0					
ANR	345904	ArgumentList	1		345589	1					
ANR	345905	Argument	1		345589	0					
ANR	345906	PrimaryExpression	1		345589	0					
ANR	345907	WhileStatement	while ( 1 )		345589	18					
ANR	345908	Condition	1	146:7:3487:3487	345589	0	True				
ANR	345909	PrimaryExpression	1		345589	0					
ANR	345910	CompoundStatement		69:10:1646:1646	345589	1					
ANR	345911	ExpressionStatement	fromlen = sizeof ( from )	147:2:3494:3516	345589	0	True				
ANR	345912	AssignmentExpression	fromlen = sizeof ( from )		345589	0		=			
ANR	345913	Identifier	fromlen		345589	0					
ANR	345914	SizeofExpression	sizeof ( from )		345589	1					
ANR	345915	Sizeof	sizeof		345589	0					
ANR	345916	SizeofOperand	from		345589	1					
ANR	345917	ExpressionStatement	"rlen = recvfrom ( sock , data , 2000 , 0 , & from , & fromlen )"	148:2:3520:3573	345589	1	True				
ANR	345918	AssignmentExpression	"rlen = recvfrom ( sock , data , 2000 , 0 , & from , & fromlen )"		345589	0		=			
ANR	345919	Identifier	rlen		345589	0					
ANR	345920	CallExpression	"recvfrom ( sock , data , 2000 , 0 , & from , & fromlen )"		345589	1					
ANR	345921	Callee	recvfrom		345589	0					
ANR	345922	Identifier	recvfrom		345589	0					
ANR	345923	ArgumentList	sock		345589	1					
ANR	345924	Argument	sock		345589	0					
ANR	345925	Identifier	sock		345589	0					
ANR	345926	Argument	data		345589	1					
ANR	345927	Identifier	data		345589	0					
ANR	345928	Argument	2000		345589	2					
ANR	345929	PrimaryExpression	2000		345589	0					
ANR	345930	Argument	0		345589	3					
ANR	345931	PrimaryExpression	0		345589	0					
ANR	345932	Argument	& from		345589	4					
ANR	345933	UnaryOperationExpression	& from		345589	0					
ANR	345934	UnaryOperator	&		345589	0					
ANR	345935	Identifier	from		345589	1					
ANR	345936	Argument	& fromlen		345589	5					
ANR	345937	UnaryOperationExpression	& fromlen		345589	0					
ANR	345938	UnaryOperator	&		345589	0					
ANR	345939	Identifier	fromlen		345589	1					
ANR	345940	IfStatement	if ( rlen == - 1 )		345589	2					
ANR	345941	Condition	rlen == - 1	149:5:3580:3589	345589	0	True				
ANR	345942	EqualityExpression	rlen == - 1		345589	0		==			
ANR	345943	Identifier	rlen		345589	0					
ANR	345944	UnaryOperationExpression	- 1		345589	1					
ANR	345945	UnaryOperator	-		345589	0					
ANR	345946	PrimaryExpression	1		345589	1					
ANR	345947	CompoundStatement		72:17:1748:1748	345589	1					
ANR	345948	ExpressionStatement	"perror ( ""uxsockrcvr : recv\\n"" )"	150:9:3603:3632	345589	0	True				
ANR	345949	CallExpression	"perror ( ""uxsockrcvr : recv\\n"" )"		345589	0					
ANR	345950	Callee	perror		345589	0					
ANR	345951	Identifier	perror		345589	0					
ANR	345952	ArgumentList	"""uxsockrcvr : recv\\n"""		345589	1					
ANR	345953	Argument	"""uxsockrcvr : recv\\n"""		345589	0					
ANR	345954	PrimaryExpression	"""uxsockrcvr : recv\\n"""		345589	0					
ANR	345955	ExpressionStatement	exit ( 1 )	151:9:3643:3650	345589	1	True				
ANR	345956	CallExpression	exit ( 1 )		345589	0					
ANR	345957	Callee	exit		345589	0					
ANR	345958	Identifier	exit		345589	0					
ANR	345959	ArgumentList	1		345589	1					
ANR	345960	Argument	1		345589	0					
ANR	345961	PrimaryExpression	1		345589	0					
ANR	345962	ElseStatement	else		345589	0					
ANR	345963	CompoundStatement		75:9:1817:1817	345589	0					
ANR	345964	ExpressionStatement	"fwrite ( data , 1 , rlen , fp )"	153:8:3671:3696	345589	0	True				
ANR	345965	CallExpression	"fwrite ( data , 1 , rlen , fp )"		345589	0					
ANR	345966	Callee	fwrite		345589	0					
ANR	345967	Identifier	fwrite		345589	0					
ANR	345968	ArgumentList	data		345589	1					
ANR	345969	Argument	data		345589	0					
ANR	345970	Identifier	data		345589	0					
ANR	345971	Argument	1		345589	1					
ANR	345972	PrimaryExpression	1		345589	0					
ANR	345973	Argument	rlen		345589	2					
ANR	345974	Identifier	rlen		345589	0					
ANR	345975	Argument	fp		345589	3					
ANR	345976	Identifier	fp		345589	0					
ANR	345977	IfStatement	if ( addNL )		345589	1					
ANR	345978	Condition	addNL	154:6:3704:3708	345589	0	True				
ANR	345979	Identifier	addNL		345589	0					
ANR	345980	ExpressionStatement	"fputc ( '\\n' , fp )"	155:4:3715:3730	345589	1	True				
ANR	345981	CallExpression	"fputc ( '\\n' , fp )"		345589	0					
ANR	345982	Callee	fputc		345589	0					
ANR	345983	Identifier	fputc		345589	0					
ANR	345984	ArgumentList	'\\n'		345589	1					
ANR	345985	Argument	'\\n'		345589	0					
ANR	345986	PrimaryExpression	'\\n'		345589	0					
ANR	345987	Argument	fp		345589	1					
ANR	345988	Identifier	fp		345589	0					
ANR	345989	ReturnStatement	return 0 ;	159:8:3755:3763	345589	19	True				
ANR	345990	PrimaryExpression	0		345589	0					
ANR	345991	ReturnType	int		345589	1					
ANR	345992	Identifier	main		345589	2					
ANR	345993	ParameterList	"int argc , char * argv [ ]"		345589	3					
ANR	345994	Parameter	int argc	77:5:1819:1826	345589	0	True				
ANR	345995	ParameterType	int		345589	0					
ANR	345996	Identifier	argc		345589	1					
ANR	345997	Parameter	char * argv [ ]	77:15:1829:1840	345589	1	True				
ANR	345998	ParameterType	char * [ ]		345589	0					
ANR	345999	Identifier	argv		345589	1					
ANR	346000	CFGEntryNode	ENTRY		345589		True				
ANR	346001	CFGExitNode	EXIT		345589		True				
ANR	346002	Symbol	stdout		345589						
ANR	346003	Symbol	data		345589						
ANR	346004	Symbol	optarg		345589						
ANR	346005	Symbol	fp		345589						
ANR	346006	Symbol	argv		345589						
ANR	346007	Symbol	& fromlen		345589						
ANR	346008	Symbol	addr . sun_path		345589						
ANR	346009	Symbol	bind		345589						
ANR	346010	Symbol	getopt		345589						
ANR	346011	Symbol	rlen		345589						
ANR	346012	Symbol	from		345589						
ANR	346013	Symbol	addNL		345589						
ANR	346014	Symbol	SIGTERM		345589						
ANR	346015	Symbol	addr		345589						
ANR	346016	Symbol	sockName		345589						
ANR	346017	Symbol	EOF		345589						
ANR	346018	Symbol	signal		345589						
ANR	346019	Symbol	argc		345589						
ANR	346020	Symbol	fopen		345589						
ANR	346021	Symbol	NULL		345589						
ANR	346022	Symbol	& addr		345589						
ANR	346023	Symbol	AF_UNIX		345589						
ANR	346024	Symbol	recvfrom		345589						
ANR	346025	Symbol	stderr		345589						
ANR	346026	Symbol	SOCK_DGRAM		345589						
ANR	346027	Symbol	& from		345589						
ANR	346028	Symbol	sock		345589						
ANR	346029	Symbol	opt		345589						
ANR	346030	Symbol	cleanup		345589						
ANR	346031	Symbol	SIGINT		345589						
ANR	346032	Symbol	fromlen		345589						
ANR	346033	Symbol	addr . sun_family		345589						
ANR	346034	Symbol	socket		345589						
ANR	346035	Symbol	SIG_ERR		345589						
ANR	346036	Symbol	doTerm		345589						
