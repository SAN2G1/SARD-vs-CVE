command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	41919	File	data/converged/CVE-2017-12588_rsyslog/outchannel.c								
ANR	41920	Function	ochConstruct	44:0:1436:1898							
ANR	41921	FunctionDef	ochConstruct ()		41920	0					
ANR	41922	CompoundStatement		45:0:1474:1898	41920	0					
ANR	41923	IdentifierDeclStatement	struct outchannel * pOch ;	46:1:1477:1500	41920	0	True				
ANR	41924	IdentifierDecl	* pOch		41920	0					
ANR	41925	IdentifierDeclType	struct outchannel *		41920	0					
ANR	41926	Identifier	pOch		41920	1					
ANR	41927	IfStatement	"if ( ( pOch = calloc ( 1 , sizeof ( struct outchannel ) ) ) == NULL )"		41920	1					
ANR	41928	Condition	"( pOch = calloc ( 1 , sizeof ( struct outchannel ) ) ) == NULL"	47:4:1506:1558	41920	0	True				
ANR	41929	EqualityExpression	"( pOch = calloc ( 1 , sizeof ( struct outchannel ) ) ) == NULL"		41920	0		==			
ANR	41930	AssignmentExpression	"pOch = calloc ( 1 , sizeof ( struct outchannel ) )"		41920	0		=			
ANR	41931	Identifier	pOch		41920	0					
ANR	41932	CallExpression	"calloc ( 1 , sizeof ( struct outchannel ) )"		41920	1					
ANR	41933	Callee	calloc		41920	0					
ANR	41934	Identifier	calloc		41920	0					
ANR	41935	ArgumentList	1		41920	1					
ANR	41936	Argument	1		41920	0					
ANR	41937	PrimaryExpression	1		41920	0					
ANR	41938	Argument	sizeof ( struct outchannel )		41920	1					
ANR	41939	SizeofExpression	sizeof ( struct outchannel )		41920	0					
ANR	41940	Sizeof	sizeof		41920	0					
ANR	41941	SizeofOperand	struct outchannel		41920	1					
ANR	41942	Identifier	NULL		41920	1					
ANR	41943	ReturnStatement	return NULL ;	48:2:1563:1574	41920	1	True				
ANR	41944	Identifier	NULL		41920	0					
ANR	41945	IfStatement	if ( loadConf -> och . ochLast == NULL )		41920	2					
ANR	41946	Condition	loadConf -> och . ochLast == NULL	53:4:1674:1702	41920	0	True				
ANR	41947	EqualityExpression	loadConf -> och . ochLast == NULL		41920	0		==			
ANR	41948	MemberAccess	loadConf -> och . ochLast		41920	0					
ANR	41949	PtrMemberAccess	loadConf -> och		41920	0					
ANR	41950	Identifier	loadConf		41920	0					
ANR	41951	Identifier	och		41920	1					
ANR	41952	Identifier	ochLast		41920	1					
ANR	41953	Identifier	NULL		41920	1					
ANR	41954	CompoundStatement		10:1:231:231	41920	1					
ANR	41955	ExpressionStatement	loadConf -> och . ochRoot = loadConf -> och . ochLast = pOch	55:2:1742:1794	41920	0	True				
ANR	41956	AssignmentExpression	loadConf -> och . ochRoot = loadConf -> och . ochLast = pOch		41920	0		=			
ANR	41957	MemberAccess	loadConf -> och . ochRoot		41920	0					
ANR	41958	PtrMemberAccess	loadConf -> och		41920	0					
ANR	41959	Identifier	loadConf		41920	0					
ANR	41960	Identifier	och		41920	1					
ANR	41961	Identifier	ochRoot		41920	1					
ANR	41962	AssignmentExpression	loadConf -> och . ochLast = pOch		41920	1		=			
ANR	41963	MemberAccess	loadConf -> och . ochLast		41920	0					
ANR	41964	PtrMemberAccess	loadConf -> och		41920	0					
ANR	41965	Identifier	loadConf		41920	0					
ANR	41966	Identifier	och		41920	1					
ANR	41967	Identifier	ochLast		41920	1					
ANR	41968	Identifier	pOch		41920	1					
ANR	41969	ElseStatement	else		41920	0					
ANR	41970	CompoundStatement		14:1:331:331	41920	0					
ANR	41971	ExpressionStatement	loadConf -> och . ochLast -> pNext = pOch	59:2:1810:1845	41920	0	True				
ANR	41972	AssignmentExpression	loadConf -> och . ochLast -> pNext = pOch		41920	0		=			
ANR	41973	PtrMemberAccess	loadConf -> och . ochLast -> pNext		41920	0					
ANR	41974	MemberAccess	loadConf -> och . ochLast		41920	0					
ANR	41975	PtrMemberAccess	loadConf -> och		41920	0					
ANR	41976	Identifier	loadConf		41920	0					
ANR	41977	Identifier	och		41920	1					
ANR	41978	Identifier	ochLast		41920	1					
ANR	41979	Identifier	pNext		41920	1					
ANR	41980	Identifier	pOch		41920	1					
ANR	41981	ExpressionStatement	loadConf -> och . ochLast = pOch	60:2:1849:1877	41920	1	True				
ANR	41982	AssignmentExpression	loadConf -> och . ochLast = pOch		41920	0		=			
ANR	41983	MemberAccess	loadConf -> och . ochLast		41920	0					
ANR	41984	PtrMemberAccess	loadConf -> och		41920	0					
ANR	41985	Identifier	loadConf		41920	0					
ANR	41986	Identifier	och		41920	1					
ANR	41987	Identifier	ochLast		41920	1					
ANR	41988	Identifier	pOch		41920	1					
ANR	41989	ReturnStatement	return ( pOch ) ;	63:1:1884:1896	41920	3	True				
ANR	41990	Identifier	pOch		41920	0					
ANR	41991	ReturnType	struct outchannel *		41920	1					
ANR	41992	Identifier	ochConstruct		41920	2					
ANR	41993	ParameterList			41920	3					
ANR	41994	CFGEntryNode	ENTRY		41920		True				
ANR	41995	CFGExitNode	EXIT		41920		True				
ANR	41996	Symbol	pOch		41920						
ANR	41997	Symbol	loadConf		41920						
ANR	41998	Symbol	* loadConf -> och . ochLast		41920						
ANR	41999	Symbol	NULL		41920						
ANR	42000	Symbol	loadConf -> och . ochLast -> pNext		41920						
ANR	42001	Symbol	* loadConf		41920						
ANR	42002	Symbol	loadConf -> och . ochRoot		41920						
ANR	42003	Symbol	loadConf -> och		41920						
ANR	42004	Symbol	* loadConf -> och		41920						
ANR	42005	Symbol	* * loadConf		41920						
ANR	42006	Symbol	calloc		41920						
ANR	42007	Symbol	loadConf -> och . ochLast		41920						
ANR	42008	Function	skip_Comma	70:0:1975:2181							
ANR	42009	FunctionDef	skip_Comma (char * * pp)		42008	0					
ANR	42010	CompoundStatement		71:0:2009:2181	42008	0					
ANR	42011	Statement	register	72:1:2012:2019	42008	0	True				
ANR	42012	IdentifierDeclStatement	char * p ;	72:10:2021:2028	42008	1	True				
ANR	42013	IdentifierDecl	* p		42008	0					
ANR	42014	IdentifierDeclType	char *		42008	0					
ANR	42015	Identifier	p		42008	1					
ANR	42016	ExpressionStatement	assert ( pp != NULL )	74:1:2032:2050	42008	2	True				
ANR	42017	CallExpression	assert ( pp != NULL )		42008	0					
ANR	42018	Callee	assert		42008	0					
ANR	42019	Identifier	assert		42008	0					
ANR	42020	ArgumentList	pp != NULL		42008	1					
ANR	42021	Argument	pp != NULL		42008	0					
ANR	42022	EqualityExpression	pp != NULL		42008	0		!=			
ANR	42023	Identifier	pp		42008	0					
ANR	42024	Identifier	NULL		42008	1					
ANR	42025	ExpressionStatement	assert ( * pp != NULL )	75:1:2053:2072	42008	3	True				
ANR	42026	CallExpression	assert ( * pp != NULL )		42008	0					
ANR	42027	Callee	assert		42008	0					
ANR	42028	Identifier	assert		42008	0					
ANR	42029	ArgumentList	* pp != NULL		42008	1					
ANR	42030	Argument	* pp != NULL		42008	0					
ANR	42031	EqualityExpression	* pp != NULL		42008	0		!=			
ANR	42032	UnaryOperationExpression	* pp		42008	0					
ANR	42033	UnaryOperator	*		42008	0					
ANR	42034	Identifier	pp		42008	1					
ANR	42035	Identifier	NULL		42008	1					
ANR	42036	ExpressionStatement	p = * pp	77:1:2076:2083	42008	4	True				
ANR	42037	AssignmentExpression	p = * pp		42008	0		=			
ANR	42038	Identifier	p		42008	0					
ANR	42039	UnaryOperationExpression	* pp		42008	1					
ANR	42040	UnaryOperator	*		42008	0					
ANR	42041	Identifier	pp		42008	1					
ANR	42042	WhileStatement	while ( isspace ( ( int ) * p ) )		42008	5					
ANR	42043	Condition	isspace ( ( int ) * p )	78:7:2092:2107	42008	0	True				
ANR	42044	CallExpression	isspace ( ( int ) * p )		42008	0					
ANR	42045	Callee	isspace		42008	0					
ANR	42046	Identifier	isspace		42008	0					
ANR	42047	ArgumentList	( int ) * p		42008	1					
ANR	42048	Argument	( int ) * p		42008	0					
ANR	42049	CastExpression	( int ) * p		42008	0					
ANR	42050	CastTarget	int		42008	0					
ANR	42051	UnaryOperationExpression	* p		42008	1					
ANR	42052	UnaryOperator	*		42008	0					
ANR	42053	Identifier	p		42008	1					
ANR	42054	ExpressionStatement	++ p	79:2:2112:2115	42008	1	True				
ANR	42055	UnaryExpression	++ p		42008	0					
ANR	42056	IncDec	++		42008	0					
ANR	42057	Identifier	p		42008	1					
ANR	42058	IfStatement	"if ( * p == ',' )"		42008	6					
ANR	42059	Condition	"* p == ','"	80:4:2121:2129	42008	0	True				
ANR	42060	EqualityExpression	"* p == ','"		42008	0		==			
ANR	42061	UnaryOperationExpression	* p		42008	0					
ANR	42062	UnaryOperator	*		42008	0					
ANR	42063	Identifier	p		42008	1					
ANR	42064	PrimaryExpression	"','"		42008	1					
ANR	42065	ExpressionStatement	++ p	81:2:2134:2137	42008	1	True				
ANR	42066	UnaryExpression	++ p		42008	0					
ANR	42067	IncDec	++		42008	0					
ANR	42068	Identifier	p		42008	1					
ANR	42069	WhileStatement	while ( isspace ( ( int ) * p ) )		42008	7					
ANR	42070	Condition	isspace ( ( int ) * p )	82:7:2146:2161	42008	0	True				
ANR	42071	CallExpression	isspace ( ( int ) * p )		42008	0					
ANR	42072	Callee	isspace		42008	0					
ANR	42073	Identifier	isspace		42008	0					
ANR	42074	ArgumentList	( int ) * p		42008	1					
ANR	42075	Argument	( int ) * p		42008	0					
ANR	42076	CastExpression	( int ) * p		42008	0					
ANR	42077	CastTarget	int		42008	0					
ANR	42078	UnaryOperationExpression	* p		42008	1					
ANR	42079	UnaryOperator	*		42008	0					
ANR	42080	Identifier	p		42008	1					
ANR	42081	ExpressionStatement	++ p	83:2:2166:2169	42008	1	True				
ANR	42082	UnaryExpression	++ p		42008	0					
ANR	42083	IncDec	++		42008	0					
ANR	42084	Identifier	p		42008	1					
ANR	42085	ExpressionStatement	* pp = p	84:1:2172:2179	42008	8	True				
ANR	42086	AssignmentExpression	* pp = p		42008	0		=			
ANR	42087	UnaryOperationExpression	* pp		42008	0					
ANR	42088	UnaryOperator	*		42008	0					
ANR	42089	Identifier	pp		42008	1					
ANR	42090	Identifier	p		42008	1					
ANR	42091	ReturnType	static void		42008	1					
ANR	42092	Identifier	skip_Comma		42008	2					
ANR	42093	ParameterList	char * * pp		42008	3					
ANR	42094	Parameter	char * * pp	70:23:1998:2006	42008	0	True				
ANR	42095	ParameterType	char * *		42008	0					
ANR	42096	Identifier	pp		42008	1					
ANR	42097	CFGEntryNode	ENTRY		42008		True				
ANR	42098	CFGExitNode	EXIT		42008		True				
ANR	42099	Symbol	pp		42008						
ANR	42100	Symbol	p		42008						
ANR	42101	Symbol	NULL		42008						
ANR	42102	Symbol	* pp		42008						
ANR	42103	Symbol	isspace		42008						
ANR	42104	Symbol	* p		42008						
ANR	42105	Function	get_Field	91:0:2366:2905							
ANR	42106	FunctionDef	"get_Field (uchar * * pp , uchar * * pField)"		42105	0					
ANR	42107	CompoundStatement		92:0:2420:2905	42105	0					
ANR	42108	ExpressionStatement	DEFiRet	93:1:2423:2430	42105	0	True				
ANR	42109	Identifier	DEFiRet		42105	0					
ANR	42110	Statement	register	94:1:2433:2440	42105	1	True				
ANR	42111	IdentifierDeclStatement	uchar * p ;	94:10:2442:2450	42105	2	True				
ANR	42112	IdentifierDecl	* p		42105	0					
ANR	42113	IdentifierDeclType	uchar *		42105	0					
ANR	42114	Identifier	p		42105	1					
ANR	42115	IdentifierDeclStatement	cstr_t * pStrB = NULL ;	95:1:2453:2473	42105	3	True				
ANR	42116	IdentifierDecl	* pStrB = NULL		42105	0					
ANR	42117	IdentifierDeclType	cstr_t *		42105	0					
ANR	42118	Identifier	pStrB		42105	1					
ANR	42119	AssignmentExpression	* pStrB = NULL		42105	2		=			
ANR	42120	Identifier	NULL		42105	0					
ANR	42121	Identifier	NULL		42105	1					
ANR	42122	ExpressionStatement	assert ( pp != NULL )	97:1:2477:2495	42105	4	True				
ANR	42123	CallExpression	assert ( pp != NULL )		42105	0					
ANR	42124	Callee	assert		42105	0					
ANR	42125	Identifier	assert		42105	0					
ANR	42126	ArgumentList	pp != NULL		42105	1					
ANR	42127	Argument	pp != NULL		42105	0					
ANR	42128	EqualityExpression	pp != NULL		42105	0		!=			
ANR	42129	Identifier	pp		42105	0					
ANR	42130	Identifier	NULL		42105	1					
ANR	42131	ExpressionStatement	assert ( * pp != NULL )	98:1:2498:2517	42105	5	True				
ANR	42132	CallExpression	assert ( * pp != NULL )		42105	0					
ANR	42133	Callee	assert		42105	0					
ANR	42134	Identifier	assert		42105	0					
ANR	42135	ArgumentList	* pp != NULL		42105	1					
ANR	42136	Argument	* pp != NULL		42105	0					
ANR	42137	EqualityExpression	* pp != NULL		42105	0		!=			
ANR	42138	UnaryOperationExpression	* pp		42105	0					
ANR	42139	UnaryOperator	*		42105	0					
ANR	42140	Identifier	pp		42105	1					
ANR	42141	Identifier	NULL		42105	1					
ANR	42142	ExpressionStatement	assert ( pField != NULL )	99:1:2520:2542	42105	6	True				
ANR	42143	CallExpression	assert ( pField != NULL )		42105	0					
ANR	42144	Callee	assert		42105	0					
ANR	42145	Identifier	assert		42105	0					
ANR	42146	ArgumentList	pField != NULL		42105	1					
ANR	42147	Argument	pField != NULL		42105	0					
ANR	42148	EqualityExpression	pField != NULL		42105	0		!=			
ANR	42149	Identifier	pField		42105	0					
ANR	42150	Identifier	NULL		42105	1					
ANR	42151	ExpressionStatement	skip_Comma ( ( char * * ) pp )	101:1:2546:2568	42105	7	True				
ANR	42152	CallExpression	skip_Comma ( ( char * * ) pp )		42105	0					
ANR	42153	Callee	skip_Comma		42105	0					
ANR	42154	Identifier	skip_Comma		42105	0					
ANR	42155	ArgumentList	( char * * ) pp		42105	1					
ANR	42156	Argument	( char * * ) pp		42105	0					
ANR	42157	CastExpression	( char * * ) pp		42105	0					
ANR	42158	CastTarget	char * *		42105	0					
ANR	42159	Identifier	pp		42105	1					
ANR	42160	ExpressionStatement	p = * pp	102:1:2571:2578	42105	8	True				
ANR	42161	AssignmentExpression	p = * pp		42105	0		=			
ANR	42162	Identifier	p		42105	0					
ANR	42163	UnaryOperationExpression	* pp		42105	1					
ANR	42164	UnaryOperator	*		42105	0					
ANR	42165	Identifier	pp		42105	1					
ANR	42166	ExpressionStatement	CHKiRet ( cstrConstruct ( & pStrB ) )	104:1:2582:2612	42105	9	True				
ANR	42167	CallExpression	CHKiRet ( cstrConstruct ( & pStrB ) )		42105	0					
ANR	42168	Callee	CHKiRet		42105	0					
ANR	42169	Identifier	CHKiRet		42105	0					
ANR	42170	ArgumentList	cstrConstruct ( & pStrB )		42105	1					
ANR	42171	Argument	cstrConstruct ( & pStrB )		42105	0					
ANR	42172	CallExpression	cstrConstruct ( & pStrB )		42105	0					
ANR	42173	Callee	cstrConstruct		42105	0					
ANR	42174	Identifier	cstrConstruct		42105	0					
ANR	42175	ArgumentList	& pStrB		42105	1					
ANR	42176	Argument	& pStrB		42105	0					
ANR	42177	UnaryOperationExpression	& pStrB		42105	0					
ANR	42178	UnaryOperator	&		42105	0					
ANR	42179	Identifier	pStrB		42105	1					
ANR	42180	WhileStatement	"while ( * p && * p != ' ' && * p != ',' )"		42105	10					
ANR	42181	Condition	"* p && * p != ' ' && * p != ','"	107:7:2644:2671	42105	0	True				
ANR	42182	AndExpression	"* p && * p != ' ' && * p != ','"		42105	0		&&			
ANR	42183	UnaryOperationExpression	* p		42105	0					
ANR	42184	UnaryOperator	*		42105	0					
ANR	42185	Identifier	p		42105	1					
ANR	42186	AndExpression	"* p != ' ' && * p != ','"		42105	1		&&			
ANR	42187	EqualityExpression	* p != ' '		42105	0		!=			
ANR	42188	UnaryOperationExpression	* p		42105	0					
ANR	42189	UnaryOperator	*		42105	0					
ANR	42190	Identifier	p		42105	1					
ANR	42191	PrimaryExpression	' '		42105	1					
ANR	42192	EqualityExpression	"* p != ','"		42105	1		!=			
ANR	42193	UnaryOperationExpression	* p		42105	0					
ANR	42194	UnaryOperator	*		42105	0					
ANR	42195	Identifier	p		42105	1					
ANR	42196	PrimaryExpression	"','"		42105	1					
ANR	42197	CompoundStatement		16:37:253:253	42105	1					
ANR	42198	ExpressionStatement	"CHKiRet ( cstrAppendChar ( pStrB , * p ++ ) )"	108:2:2678:2714	42105	0	True				
ANR	42199	CallExpression	"CHKiRet ( cstrAppendChar ( pStrB , * p ++ ) )"		42105	0					
ANR	42200	Callee	CHKiRet		42105	0					
ANR	42201	Identifier	CHKiRet		42105	0					
ANR	42202	ArgumentList	"cstrAppendChar ( pStrB , * p ++ )"		42105	1					
ANR	42203	Argument	"cstrAppendChar ( pStrB , * p ++ )"		42105	0					
ANR	42204	CallExpression	"cstrAppendChar ( pStrB , * p ++ )"		42105	0					
ANR	42205	Callee	cstrAppendChar		42105	0					
ANR	42206	Identifier	cstrAppendChar		42105	0					
ANR	42207	ArgumentList	pStrB		42105	1					
ANR	42208	Argument	pStrB		42105	0					
ANR	42209	Identifier	pStrB		42105	0					
ANR	42210	Argument	* p ++		42105	1					
ANR	42211	UnaryOperationExpression	* p ++		42105	0					
ANR	42212	UnaryOperator	*		42105	0					
ANR	42213	PostIncDecOperationExpression	p ++		42105	1					
ANR	42214	Identifier	p		42105	0					
ANR	42215	IncDec	++		42105	1					
ANR	42216	ExpressionStatement	* pp = p	111:1:2721:2728	42105	11	True				
ANR	42217	AssignmentExpression	* pp = p		42105	0		=			
ANR	42218	UnaryOperationExpression	* pp		42105	0					
ANR	42219	UnaryOperator	*		42105	0					
ANR	42220	Identifier	pp		42105	1					
ANR	42221	Identifier	p		42105	1					
ANR	42222	ExpressionStatement	cstrFinalize ( pStrB )	112:1:2731:2750	42105	12	True				
ANR	42223	CallExpression	cstrFinalize ( pStrB )		42105	0					
ANR	42224	Callee	cstrFinalize		42105	0					
ANR	42225	Identifier	cstrFinalize		42105	0					
ANR	42226	ArgumentList	pStrB		42105	1					
ANR	42227	Argument	pStrB		42105	0					
ANR	42228	Identifier	pStrB		42105	0					
ANR	42229	ExpressionStatement	"CHKiRet ( cstrConvSzStrAndDestruct ( & pStrB , pField , 0 ) )"	113:1:2753:2805	42105	13	True				
ANR	42230	CallExpression	"CHKiRet ( cstrConvSzStrAndDestruct ( & pStrB , pField , 0 ) )"		42105	0					
ANR	42231	Callee	CHKiRet		42105	0					
ANR	42232	Identifier	CHKiRet		42105	0					
ANR	42233	ArgumentList	"cstrConvSzStrAndDestruct ( & pStrB , pField , 0 )"		42105	1					
ANR	42234	Argument	"cstrConvSzStrAndDestruct ( & pStrB , pField , 0 )"		42105	0					
ANR	42235	CallExpression	"cstrConvSzStrAndDestruct ( & pStrB , pField , 0 )"		42105	0					
ANR	42236	Callee	cstrConvSzStrAndDestruct		42105	0					
ANR	42237	Identifier	cstrConvSzStrAndDestruct		42105	0					
ANR	42238	ArgumentList	& pStrB		42105	1					
ANR	42239	Argument	& pStrB		42105	0					
ANR	42240	UnaryOperationExpression	& pStrB		42105	0					
ANR	42241	UnaryOperator	&		42105	0					
ANR	42242	Identifier	pStrB		42105	1					
ANR	42243	Argument	pField		42105	1					
ANR	42244	Identifier	pField		42105	0					
ANR	42245	Argument	0		42105	2					
ANR	42246	PrimaryExpression	0		42105	0					
ANR	42247	Label	finalize_it :	115:0:2808:2819	42105	14	True				
ANR	42248	Identifier	finalize_it		42105	0					
ANR	42249	IfStatement	if ( iRet != RS_RET_OK )		42105	15					
ANR	42250	Condition	iRet != RS_RET_OK	116:4:2825:2841	42105	0	True				
ANR	42251	EqualityExpression	iRet != RS_RET_OK		42105	0		!=			
ANR	42252	Identifier	iRet		42105	0					
ANR	42253	Identifier	RS_RET_OK		42105	1					
ANR	42254	CompoundStatement		25:23:423:423	42105	1					
ANR	42255	IfStatement	if ( pStrB != NULL )		42105	0					
ANR	42256	Condition	pStrB != NULL	117:5:2851:2863	42105	0	True				
ANR	42257	EqualityExpression	pStrB != NULL		42105	0		!=			
ANR	42258	Identifier	pStrB		42105	0					
ANR	42259	Identifier	NULL		42105	1					
ANR	42260	ExpressionStatement	cstrDestruct ( & pStrB )	118:3:2869:2889	42105	1	True				
ANR	42261	CallExpression	cstrDestruct ( & pStrB )		42105	0					
ANR	42262	Callee	cstrDestruct		42105	0					
ANR	42263	Identifier	cstrDestruct		42105	0					
ANR	42264	ArgumentList	& pStrB		42105	1					
ANR	42265	Argument	& pStrB		42105	0					
ANR	42266	UnaryOperationExpression	& pStrB		42105	0					
ANR	42267	UnaryOperator	&		42105	0					
ANR	42268	Identifier	pStrB		42105	1					
ANR	42269	ExpressionStatement	RETiRet	121:1:2896:2903	42105	16	True				
ANR	42270	Identifier	RETiRet		42105	0					
ANR	42271	ReturnType	static rsRetVal		42105	1					
ANR	42272	Identifier	get_Field		42105	2					
ANR	42273	ParameterList	"uchar * * pp , uchar * * pField"		42105	3					
ANR	42274	Parameter	uchar * * pp	91:26:2392:2401	42105	0	True				
ANR	42275	ParameterType	uchar * *		42105	0					
ANR	42276	Identifier	pp		42105	1					
ANR	42277	Parameter	uchar * * pField	91:38:2404:2417	42105	1	True				
ANR	42278	ParameterType	uchar * *		42105	0					
ANR	42279	Identifier	pField		42105	1					
ANR	42280	CFGEntryNode	ENTRY		42105		True				
ANR	42281	CFGExitNode	EXIT		42105		True				
ANR	42282	Symbol	pp		42105						
ANR	42283	Symbol	pField		42105						
ANR	42284	Symbol	NULL		42105						
ANR	42285	Symbol	cstrAppendChar		42105						
ANR	42286	Symbol	* pp		42105						
ANR	42287	Symbol	cstrConvSzStrAndDestruct		42105						
ANR	42288	Symbol	RS_RET_OK		42105						
ANR	42289	Symbol	* p ++		42105						
ANR	42290	Symbol	iRet		42105						
ANR	42291	Symbol	p		42105						
ANR	42292	Symbol	pStrB		42105						
ANR	42293	Symbol	cstrConstruct		42105						
ANR	42294	Symbol	* p		42105						
ANR	42295	Symbol	& pStrB		42105						
ANR	42296	Function	get_off_t	129:0:3014:3325							
ANR	42297	FunctionDef	"get_off_t (uchar * * pp , off_t * pOff_t)"		42296	0					
ANR	42298	CompoundStatement		130:0:3062:3325	42296	0					
ANR	42299	Statement	register	131:1:3065:3072	42296	0	True				
ANR	42300	IdentifierDeclStatement	uchar * p ;	131:10:3074:3082	42296	1	True				
ANR	42301	IdentifierDecl	* p		42296	0					
ANR	42302	IdentifierDeclType	uchar *		42296	0					
ANR	42303	Identifier	p		42296	1					
ANR	42304	IdentifierDeclStatement	off_t val ;	132:1:3085:3094	42296	2	True				
ANR	42305	IdentifierDecl	val		42296	0					
ANR	42306	IdentifierDeclType	off_t		42296	0					
ANR	42307	Identifier	val		42296	1					
ANR	42308	ExpressionStatement	assert ( pp != NULL )	134:1:3098:3116	42296	3	True				
ANR	42309	CallExpression	assert ( pp != NULL )		42296	0					
ANR	42310	Callee	assert		42296	0					
ANR	42311	Identifier	assert		42296	0					
ANR	42312	ArgumentList	pp != NULL		42296	1					
ANR	42313	Argument	pp != NULL		42296	0					
ANR	42314	EqualityExpression	pp != NULL		42296	0		!=			
ANR	42315	Identifier	pp		42296	0					
ANR	42316	Identifier	NULL		42296	1					
ANR	42317	ExpressionStatement	assert ( * pp != NULL )	135:1:3119:3138	42296	4	True				
ANR	42318	CallExpression	assert ( * pp != NULL )		42296	0					
ANR	42319	Callee	assert		42296	0					
ANR	42320	Identifier	assert		42296	0					
ANR	42321	ArgumentList	* pp != NULL		42296	1					
ANR	42322	Argument	* pp != NULL		42296	0					
ANR	42323	EqualityExpression	* pp != NULL		42296	0		!=			
ANR	42324	UnaryOperationExpression	* pp		42296	0					
ANR	42325	UnaryOperator	*		42296	0					
ANR	42326	Identifier	pp		42296	1					
ANR	42327	Identifier	NULL		42296	1					
ANR	42328	ExpressionStatement	assert ( pOff_t != NULL )	136:1:3141:3163	42296	5	True				
ANR	42329	CallExpression	assert ( pOff_t != NULL )		42296	0					
ANR	42330	Callee	assert		42296	0					
ANR	42331	Identifier	assert		42296	0					
ANR	42332	ArgumentList	pOff_t != NULL		42296	1					
ANR	42333	Argument	pOff_t != NULL		42296	0					
ANR	42334	EqualityExpression	pOff_t != NULL		42296	0		!=			
ANR	42335	Identifier	pOff_t		42296	0					
ANR	42336	Identifier	NULL		42296	1					
ANR	42337	ExpressionStatement	skip_Comma ( ( char * * ) pp )	138:1:3167:3189	42296	6	True				
ANR	42338	CallExpression	skip_Comma ( ( char * * ) pp )		42296	0					
ANR	42339	Callee	skip_Comma		42296	0					
ANR	42340	Identifier	skip_Comma		42296	0					
ANR	42341	ArgumentList	( char * * ) pp		42296	1					
ANR	42342	Argument	( char * * ) pp		42296	0					
ANR	42343	CastExpression	( char * * ) pp		42296	0					
ANR	42344	CastTarget	char * *		42296	0					
ANR	42345	Identifier	pp		42296	1					
ANR	42346	ExpressionStatement	p = * pp	139:1:3192:3199	42296	7	True				
ANR	42347	AssignmentExpression	p = * pp		42296	0		=			
ANR	42348	Identifier	p		42296	0					
ANR	42349	UnaryOperationExpression	* pp		42296	1					
ANR	42350	UnaryOperator	*		42296	0					
ANR	42351	Identifier	pp		42296	1					
ANR	42352	ExpressionStatement	val = 0	141:1:3203:3210	42296	8	True				
ANR	42353	AssignmentExpression	val = 0		42296	0		=			
ANR	42354	Identifier	val		42296	0					
ANR	42355	PrimaryExpression	0		42296	1					
ANR	42356	WhileStatement	while ( * p && isdigit ( ( int ) * p ) )		42296	9					
ANR	42357	Condition	* p && isdigit ( ( int ) * p )	142:7:3219:3240	42296	0	True				
ANR	42358	AndExpression	* p && isdigit ( ( int ) * p )		42296	0		&&			
ANR	42359	UnaryOperationExpression	* p		42296	0					
ANR	42360	UnaryOperator	*		42296	0					
ANR	42361	Identifier	p		42296	1					
ANR	42362	CallExpression	isdigit ( ( int ) * p )		42296	1					
ANR	42363	Callee	isdigit		42296	0					
ANR	42364	Identifier	isdigit		42296	0					
ANR	42365	ArgumentList	( int ) * p		42296	1					
ANR	42366	Argument	( int ) * p		42296	0					
ANR	42367	CastExpression	( int ) * p		42296	0					
ANR	42368	CastTarget	int		42296	0					
ANR	42369	UnaryOperationExpression	* p		42296	1					
ANR	42370	UnaryOperator	*		42296	0					
ANR	42371	Identifier	p		42296	1					
ANR	42372	CompoundStatement		13:31:180:180	42296	1					
ANR	42373	ExpressionStatement	val = val * 10 + ( * p - '0' )	143:2:3247:3274	42296	0	True				
ANR	42374	AssignmentExpression	val = val * 10 + ( * p - '0' )		42296	0		=			
ANR	42375	Identifier	val		42296	0					
ANR	42376	AdditiveExpression	val * 10 + ( * p - '0' )		42296	1		+			
ANR	42377	MultiplicativeExpression	val * 10		42296	0		*			
ANR	42378	Identifier	val		42296	0					
ANR	42379	PrimaryExpression	10		42296	1					
ANR	42380	AdditiveExpression	* p - '0'		42296	1		-			
ANR	42381	UnaryOperationExpression	* p		42296	0					
ANR	42382	UnaryOperator	*		42296	0					
ANR	42383	Identifier	p		42296	1					
ANR	42384	PrimaryExpression	'0'		42296	1					
ANR	42385	ExpressionStatement	++ p	144:2:3278:3281	42296	1	True				
ANR	42386	UnaryExpression	++ p		42296	0					
ANR	42387	IncDec	++		42296	0					
ANR	42388	Identifier	p		42296	1					
ANR	42389	ExpressionStatement	* pp = p	147:1:3288:3295	42296	10	True				
ANR	42390	AssignmentExpression	* pp = p		42296	0		=			
ANR	42391	UnaryOperationExpression	* pp		42296	0					
ANR	42392	UnaryOperator	*		42296	0					
ANR	42393	Identifier	pp		42296	1					
ANR	42394	Identifier	p		42296	1					
ANR	42395	ExpressionStatement	* pOff_t = val	148:1:3298:3311	42296	11	True				
ANR	42396	AssignmentExpression	* pOff_t = val		42296	0		=			
ANR	42397	UnaryOperationExpression	* pOff_t		42296	0					
ANR	42398	UnaryOperator	*		42296	0					
ANR	42399	Identifier	pOff_t		42296	1					
ANR	42400	Identifier	val		42296	1					
ANR	42401	ReturnStatement	return 0 ;	150:1:3315:3323	42296	12	True				
ANR	42402	PrimaryExpression	0		42296	0					
ANR	42403	ReturnType	static int		42296	1					
ANR	42404	Identifier	get_off_t		42296	2					
ANR	42405	ParameterList	"uchar * * pp , off_t * pOff_t"		42296	3					
ANR	42406	Parameter	uchar * * pp	129:21:3035:3044	42296	0	True				
ANR	42407	ParameterType	uchar * *		42296	0					
ANR	42408	Identifier	pp		42296	1					
ANR	42409	Parameter	off_t * pOff_t	129:33:3047:3059	42296	1	True				
ANR	42410	ParameterType	off_t *		42296	0					
ANR	42411	Identifier	pOff_t		42296	1					
ANR	42412	CFGEntryNode	ENTRY		42296		True				
ANR	42413	CFGExitNode	EXIT		42296		True				
ANR	42414	Symbol	pp		42296						
ANR	42415	Symbol	p		42296						
ANR	42416	Symbol	val		42296						
ANR	42417	Symbol	pOff_t		42296						
ANR	42418	Symbol	NULL		42296						
ANR	42419	Symbol	* pp		42296						
ANR	42420	Symbol	* p		42296						
ANR	42421	Symbol	* pOff_t		42296						
ANR	42422	Symbol	isdigit		42296						
ANR	42423	Function	get_restOfLine	159:0:3510:4022							
ANR	42424	FunctionDef	"get_restOfLine (uchar * * pp , uchar * * pBuf)"		42423	0					
ANR	42425	CompoundStatement		160:0:3567:4022	42423	0					
ANR	42426	ExpressionStatement	DEFiRet	161:1:3570:3577	42423	0	True				
ANR	42427	Identifier	DEFiRet		42423	0					
ANR	42428	Statement	register	162:1:3580:3587	42423	1	True				
ANR	42429	IdentifierDeclStatement	uchar * p ;	162:10:3589:3597	42423	2	True				
ANR	42430	IdentifierDecl	* p		42423	0					
ANR	42431	IdentifierDeclType	uchar *		42423	0					
ANR	42432	Identifier	p		42423	1					
ANR	42433	IdentifierDeclStatement	cstr_t * pStrB = NULL ;	163:1:3600:3620	42423	3	True				
ANR	42434	IdentifierDecl	* pStrB = NULL		42423	0					
ANR	42435	IdentifierDeclType	cstr_t *		42423	0					
ANR	42436	Identifier	pStrB		42423	1					
ANR	42437	AssignmentExpression	* pStrB = NULL		42423	2		=			
ANR	42438	Identifier	NULL		42423	0					
ANR	42439	Identifier	NULL		42423	1					
ANR	42440	ExpressionStatement	assert ( pp != NULL )	165:1:3624:3642	42423	4	True				
ANR	42441	CallExpression	assert ( pp != NULL )		42423	0					
ANR	42442	Callee	assert		42423	0					
ANR	42443	Identifier	assert		42423	0					
ANR	42444	ArgumentList	pp != NULL		42423	1					
ANR	42445	Argument	pp != NULL		42423	0					
ANR	42446	EqualityExpression	pp != NULL		42423	0		!=			
ANR	42447	Identifier	pp		42423	0					
ANR	42448	Identifier	NULL		42423	1					
ANR	42449	ExpressionStatement	assert ( * pp != NULL )	166:1:3645:3664	42423	5	True				
ANR	42450	CallExpression	assert ( * pp != NULL )		42423	0					
ANR	42451	Callee	assert		42423	0					
ANR	42452	Identifier	assert		42423	0					
ANR	42453	ArgumentList	* pp != NULL		42423	1					
ANR	42454	Argument	* pp != NULL		42423	0					
ANR	42455	EqualityExpression	* pp != NULL		42423	0		!=			
ANR	42456	UnaryOperationExpression	* pp		42423	0					
ANR	42457	UnaryOperator	*		42423	0					
ANR	42458	Identifier	pp		42423	1					
ANR	42459	Identifier	NULL		42423	1					
ANR	42460	ExpressionStatement	assert ( pBuf != NULL )	167:1:3667:3687	42423	6	True				
ANR	42461	CallExpression	assert ( pBuf != NULL )		42423	0					
ANR	42462	Callee	assert		42423	0					
ANR	42463	Identifier	assert		42423	0					
ANR	42464	ArgumentList	pBuf != NULL		42423	1					
ANR	42465	Argument	pBuf != NULL		42423	0					
ANR	42466	EqualityExpression	pBuf != NULL		42423	0		!=			
ANR	42467	Identifier	pBuf		42423	0					
ANR	42468	Identifier	NULL		42423	1					
ANR	42469	ExpressionStatement	skip_Comma ( ( char * * ) pp )	169:1:3691:3713	42423	7	True				
ANR	42470	CallExpression	skip_Comma ( ( char * * ) pp )		42423	0					
ANR	42471	Callee	skip_Comma		42423	0					
ANR	42472	Identifier	skip_Comma		42423	0					
ANR	42473	ArgumentList	( char * * ) pp		42423	1					
ANR	42474	Argument	( char * * ) pp		42423	0					
ANR	42475	CastExpression	( char * * ) pp		42423	0					
ANR	42476	CastTarget	char * *		42423	0					
ANR	42477	Identifier	pp		42423	1					
ANR	42478	ExpressionStatement	p = * pp	170:1:3716:3723	42423	8	True				
ANR	42479	AssignmentExpression	p = * pp		42423	0		=			
ANR	42480	Identifier	p		42423	0					
ANR	42481	UnaryOperationExpression	* pp		42423	1					
ANR	42482	UnaryOperator	*		42423	0					
ANR	42483	Identifier	pp		42423	1					
ANR	42484	ExpressionStatement	CHKiRet ( cstrConstruct ( & pStrB ) )	172:1:3727:3757	42423	9	True				
ANR	42485	CallExpression	CHKiRet ( cstrConstruct ( & pStrB ) )		42423	0					
ANR	42486	Callee	CHKiRet		42423	0					
ANR	42487	Identifier	CHKiRet		42423	0					
ANR	42488	ArgumentList	cstrConstruct ( & pStrB )		42423	1					
ANR	42489	Argument	cstrConstruct ( & pStrB )		42423	0					
ANR	42490	CallExpression	cstrConstruct ( & pStrB )		42423	0					
ANR	42491	Callee	cstrConstruct		42423	0					
ANR	42492	Identifier	cstrConstruct		42423	0					
ANR	42493	ArgumentList	& pStrB		42423	1					
ANR	42494	Argument	& pStrB		42423	0					
ANR	42495	UnaryOperationExpression	& pStrB		42423	0					
ANR	42496	UnaryOperator	&		42423	0					
ANR	42497	Identifier	pStrB		42423	1					
ANR	42498	WhileStatement	while ( * p )		42423	10					
ANR	42499	Condition	* p	175:7:3789:3790	42423	0	True				
ANR	42500	UnaryOperationExpression	* p		42423	0					
ANR	42501	UnaryOperator	*		42423	0					
ANR	42502	Identifier	p		42423	1					
ANR	42503	CompoundStatement		16:11:225:225	42423	1					
ANR	42504	ExpressionStatement	"CHKiRet ( cstrAppendChar ( pStrB , * p ++ ) )"	176:2:3797:3833	42423	0	True				
ANR	42505	CallExpression	"CHKiRet ( cstrAppendChar ( pStrB , * p ++ ) )"		42423	0					
ANR	42506	Callee	CHKiRet		42423	0					
ANR	42507	Identifier	CHKiRet		42423	0					
ANR	42508	ArgumentList	"cstrAppendChar ( pStrB , * p ++ )"		42423	1					
ANR	42509	Argument	"cstrAppendChar ( pStrB , * p ++ )"		42423	0					
ANR	42510	CallExpression	"cstrAppendChar ( pStrB , * p ++ )"		42423	0					
ANR	42511	Callee	cstrAppendChar		42423	0					
ANR	42512	Identifier	cstrAppendChar		42423	0					
ANR	42513	ArgumentList	pStrB		42423	1					
ANR	42514	Argument	pStrB		42423	0					
ANR	42515	Identifier	pStrB		42423	0					
ANR	42516	Argument	* p ++		42423	1					
ANR	42517	UnaryOperationExpression	* p ++		42423	0					
ANR	42518	UnaryOperator	*		42423	0					
ANR	42519	PostIncDecOperationExpression	p ++		42423	1					
ANR	42520	Identifier	p		42423	0					
ANR	42521	IncDec	++		42423	1					
ANR	42522	ExpressionStatement	* pp = p	179:1:3840:3847	42423	11	True				
ANR	42523	AssignmentExpression	* pp = p		42423	0		=			
ANR	42524	UnaryOperationExpression	* pp		42423	0					
ANR	42525	UnaryOperator	*		42423	0					
ANR	42526	Identifier	pp		42423	1					
ANR	42527	Identifier	p		42423	1					
ANR	42528	ExpressionStatement	cstrFinalize ( pStrB )	180:1:3850:3869	42423	12	True				
ANR	42529	CallExpression	cstrFinalize ( pStrB )		42423	0					
ANR	42530	Callee	cstrFinalize		42423	0					
ANR	42531	Identifier	cstrFinalize		42423	0					
ANR	42532	ArgumentList	pStrB		42423	1					
ANR	42533	Argument	pStrB		42423	0					
ANR	42534	Identifier	pStrB		42423	0					
ANR	42535	ExpressionStatement	"CHKiRet ( cstrConvSzStrAndDestruct ( & pStrB , pBuf , 0 ) )"	181:1:3872:3922	42423	13	True				
ANR	42536	CallExpression	"CHKiRet ( cstrConvSzStrAndDestruct ( & pStrB , pBuf , 0 ) )"		42423	0					
ANR	42537	Callee	CHKiRet		42423	0					
ANR	42538	Identifier	CHKiRet		42423	0					
ANR	42539	ArgumentList	"cstrConvSzStrAndDestruct ( & pStrB , pBuf , 0 )"		42423	1					
ANR	42540	Argument	"cstrConvSzStrAndDestruct ( & pStrB , pBuf , 0 )"		42423	0					
ANR	42541	CallExpression	"cstrConvSzStrAndDestruct ( & pStrB , pBuf , 0 )"		42423	0					
ANR	42542	Callee	cstrConvSzStrAndDestruct		42423	0					
ANR	42543	Identifier	cstrConvSzStrAndDestruct		42423	0					
ANR	42544	ArgumentList	& pStrB		42423	1					
ANR	42545	Argument	& pStrB		42423	0					
ANR	42546	UnaryOperationExpression	& pStrB		42423	0					
ANR	42547	UnaryOperator	&		42423	0					
ANR	42548	Identifier	pStrB		42423	1					
ANR	42549	Argument	pBuf		42423	1					
ANR	42550	Identifier	pBuf		42423	0					
ANR	42551	Argument	0		42423	2					
ANR	42552	PrimaryExpression	0		42423	0					
ANR	42553	Label	finalize_it :	183:0:3925:3936	42423	14	True				
ANR	42554	Identifier	finalize_it		42423	0					
ANR	42555	IfStatement	if ( iRet != RS_RET_OK )		42423	15					
ANR	42556	Condition	iRet != RS_RET_OK	184:4:3942:3958	42423	0	True				
ANR	42557	EqualityExpression	iRet != RS_RET_OK		42423	0		!=			
ANR	42558	Identifier	iRet		42423	0					
ANR	42559	Identifier	RS_RET_OK		42423	1					
ANR	42560	CompoundStatement		25:23:393:393	42423	1					
ANR	42561	IfStatement	if ( pStrB != NULL )		42423	0					
ANR	42562	Condition	pStrB != NULL	185:5:3968:3980	42423	0	True				
ANR	42563	EqualityExpression	pStrB != NULL		42423	0		!=			
ANR	42564	Identifier	pStrB		42423	0					
ANR	42565	Identifier	NULL		42423	1					
ANR	42566	ExpressionStatement	cstrDestruct ( & pStrB )	186:3:3986:4006	42423	1	True				
ANR	42567	CallExpression	cstrDestruct ( & pStrB )		42423	0					
ANR	42568	Callee	cstrDestruct		42423	0					
ANR	42569	Identifier	cstrDestruct		42423	0					
ANR	42570	ArgumentList	& pStrB		42423	1					
ANR	42571	Argument	& pStrB		42423	0					
ANR	42572	UnaryOperationExpression	& pStrB		42423	0					
ANR	42573	UnaryOperator	&		42423	0					
ANR	42574	Identifier	pStrB		42423	1					
ANR	42575	ExpressionStatement	RETiRet	189:1:4013:4020	42423	16	True				
ANR	42576	Identifier	RETiRet		42423	0					
ANR	42577	ReturnType	static rsRetVal		42423	1					
ANR	42578	Identifier	get_restOfLine		42423	2					
ANR	42579	ParameterList	"uchar * * pp , uchar * * pBuf"		42423	3					
ANR	42580	Parameter	uchar * * pp	159:31:3541:3550	42423	0	True				
ANR	42581	ParameterType	uchar * *		42423	0					
ANR	42582	Identifier	pp		42423	1					
ANR	42583	Parameter	uchar * * pBuf	159:43:3553:3564	42423	1	True				
ANR	42584	ParameterType	uchar * *		42423	0					
ANR	42585	Identifier	pBuf		42423	1					
ANR	42586	CFGEntryNode	ENTRY		42423		True				
ANR	42587	CFGExitNode	EXIT		42423		True				
ANR	42588	Symbol	pp		42423						
ANR	42589	Symbol	NULL		42423						
ANR	42590	Symbol	cstrAppendChar		42423						
ANR	42591	Symbol	* pp		42423						
ANR	42592	Symbol	cstrConvSzStrAndDestruct		42423						
ANR	42593	Symbol	RS_RET_OK		42423						
ANR	42594	Symbol	* p ++		42423						
ANR	42595	Symbol	iRet		42423						
ANR	42596	Symbol	pBuf		42423						
ANR	42597	Symbol	p		42423						
ANR	42598	Symbol	pStrB		42423						
ANR	42599	Symbol	cstrConstruct		42423						
ANR	42600	Symbol	* p		42423						
ANR	42601	Symbol	& pStrB		42423						
ANR	42602	Function	ochAddLine	199:0:4305:5243							
ANR	42603	FunctionDef	"ochAddLine (char * pName , uchar * * ppRestOfConfLine)"		42602	0					
ANR	42604	CompoundStatement		200:0:4374:5243	42602	0					
ANR	42605	IdentifierDeclStatement	struct outchannel * pOch ;	201:1:4377:4400	42602	0	True				
ANR	42606	IdentifierDecl	* pOch		42602	0					
ANR	42607	IdentifierDeclType	struct outchannel *		42602	0					
ANR	42608	Identifier	pOch		42602	1					
ANR	42609	IdentifierDeclStatement	uchar * p ;	202:2:4404:4412	42602	1	True				
ANR	42610	IdentifierDecl	* p		42602	0					
ANR	42611	IdentifierDeclType	uchar *		42602	0					
ANR	42612	Identifier	p		42602	1					
ANR	42613	ExpressionStatement	assert ( pName != NULL )	204:1:4416:4437	42602	2	True				
ANR	42614	CallExpression	assert ( pName != NULL )		42602	0					
ANR	42615	Callee	assert		42602	0					
ANR	42616	Identifier	assert		42602	0					
ANR	42617	ArgumentList	pName != NULL		42602	1					
ANR	42618	Argument	pName != NULL		42602	0					
ANR	42619	EqualityExpression	pName != NULL		42602	0		!=			
ANR	42620	Identifier	pName		42602	0					
ANR	42621	Identifier	NULL		42602	1					
ANR	42622	ExpressionStatement	assert ( ppRestOfConfLine != NULL )	205:1:4440:4472	42602	3	True				
ANR	42623	CallExpression	assert ( ppRestOfConfLine != NULL )		42602	0					
ANR	42624	Callee	assert		42602	0					
ANR	42625	Identifier	assert		42602	0					
ANR	42626	ArgumentList	ppRestOfConfLine != NULL		42602	1					
ANR	42627	Argument	ppRestOfConfLine != NULL		42602	0					
ANR	42628	EqualityExpression	ppRestOfConfLine != NULL		42602	0		!=			
ANR	42629	Identifier	ppRestOfConfLine		42602	0					
ANR	42630	Identifier	NULL		42602	1					
ANR	42631	IfStatement	if ( ( pOch = ochConstruct ( ) ) == NULL )		42602	4					
ANR	42632	Condition	( pOch = ochConstruct ( ) ) == NULL	207:4:4479:4509	42602	0	True				
ANR	42633	EqualityExpression	( pOch = ochConstruct ( ) ) == NULL		42602	0		==			
ANR	42634	AssignmentExpression	pOch = ochConstruct ( )		42602	0		=			
ANR	42635	Identifier	pOch		42602	0					
ANR	42636	CallExpression	ochConstruct ( )		42602	1					
ANR	42637	Callee	ochConstruct		42602	0					
ANR	42638	Identifier	ochConstruct		42602	0					
ANR	42639	ArgumentList			42602	1					
ANR	42640	Identifier	NULL		42602	1					
ANR	42641	ReturnStatement	return NULL ;	208:2:4514:4525	42602	1	True				
ANR	42642	Identifier	NULL		42602	0					
ANR	42643	ExpressionStatement	pOch -> iLenName = strlen ( pName )	210:1:4530:4560	42602	5	True				
ANR	42644	AssignmentExpression	pOch -> iLenName = strlen ( pName )		42602	0		=			
ANR	42645	PtrMemberAccess	pOch -> iLenName		42602	0					
ANR	42646	Identifier	pOch		42602	0					
ANR	42647	Identifier	iLenName		42602	1					
ANR	42648	CallExpression	strlen ( pName )		42602	1					
ANR	42649	Callee	strlen		42602	0					
ANR	42650	Identifier	strlen		42602	0					
ANR	42651	ArgumentList	pName		42602	1					
ANR	42652	Argument	pName		42602	0					
ANR	42653	Identifier	pName		42602	0					
ANR	42654	ExpressionStatement	pOch -> pszName = ( char * ) MALLOC ( pOch -> iLenName + 1 )	211:1:4563:4613	42602	6	True				
ANR	42655	AssignmentExpression	pOch -> pszName = ( char * ) MALLOC ( pOch -> iLenName + 1 )		42602	0		=			
ANR	42656	PtrMemberAccess	pOch -> pszName		42602	0					
ANR	42657	Identifier	pOch		42602	0					
ANR	42658	Identifier	pszName		42602	1					
ANR	42659	CastExpression	( char * ) MALLOC ( pOch -> iLenName + 1 )		42602	1					
ANR	42660	CastTarget	char *		42602	0					
ANR	42661	CallExpression	MALLOC ( pOch -> iLenName + 1 )		42602	1					
ANR	42662	Callee	MALLOC		42602	0					
ANR	42663	Identifier	MALLOC		42602	0					
ANR	42664	ArgumentList	pOch -> iLenName + 1		42602	1					
ANR	42665	Argument	pOch -> iLenName + 1		42602	0					
ANR	42666	AdditiveExpression	pOch -> iLenName + 1		42602	0		+			
ANR	42667	PtrMemberAccess	pOch -> iLenName		42602	0					
ANR	42668	Identifier	pOch		42602	0					
ANR	42669	Identifier	iLenName		42602	1					
ANR	42670	PrimaryExpression	1		42602	1					
ANR	42671	IfStatement	if ( pOch -> pszName == NULL )		42602	7					
ANR	42672	Condition	pOch -> pszName == NULL	212:4:4619:4639	42602	0	True				
ANR	42673	EqualityExpression	pOch -> pszName == NULL		42602	0		==			
ANR	42674	PtrMemberAccess	pOch -> pszName		42602	0					
ANR	42675	Identifier	pOch		42602	0					
ANR	42676	Identifier	pszName		42602	1					
ANR	42677	Identifier	NULL		42602	1					
ANR	42678	CompoundStatement		13:27:267:267	42602	1					
ANR	42679	ExpressionStatement	"dbgprintf ( ""ochAddLine could not alloc memory for outchannel name!"" )"	213:2:4646:4713	42602	0	True				
ANR	42680	CallExpression	"dbgprintf ( ""ochAddLine could not alloc memory for outchannel name!"" )"		42602	0					
ANR	42681	Callee	dbgprintf		42602	0					
ANR	42682	Identifier	dbgprintf		42602	0					
ANR	42683	ArgumentList	"""ochAddLine could not alloc memory for outchannel name!"""		42602	1					
ANR	42684	Argument	"""ochAddLine could not alloc memory for outchannel name!"""		42602	0					
ANR	42685	PrimaryExpression	"""ochAddLine could not alloc memory for outchannel name!"""		42602	0					
ANR	42686	ExpressionStatement	pOch -> iLenName = 0	214:2:4717:4735	42602	1	True				
ANR	42687	AssignmentExpression	pOch -> iLenName = 0		42602	0		=			
ANR	42688	PtrMemberAccess	pOch -> iLenName		42602	0					
ANR	42689	Identifier	pOch		42602	0					
ANR	42690	Identifier	iLenName		42602	1					
ANR	42691	PrimaryExpression	0		42602	1					
ANR	42692	ReturnStatement	return NULL ;	215:2:4739:4750	42602	2	True				
ANR	42693	Identifier	NULL		42602	0					
ANR	42694	ExpressionStatement	"memcpy ( pOch -> pszName , pName , pOch -> iLenName + 1 )"	221:1:4921:4969	42602	8	True				
ANR	42695	CallExpression	"memcpy ( pOch -> pszName , pName , pOch -> iLenName + 1 )"		42602	0					
ANR	42696	Callee	memcpy		42602	0					
ANR	42697	Identifier	memcpy		42602	0					
ANR	42698	ArgumentList	pOch -> pszName		42602	1					
ANR	42699	Argument	pOch -> pszName		42602	0					
ANR	42700	PtrMemberAccess	pOch -> pszName		42602	0					
ANR	42701	Identifier	pOch		42602	0					
ANR	42702	Identifier	pszName		42602	1					
ANR	42703	Argument	pName		42602	1					
ANR	42704	Identifier	pName		42602	0					
ANR	42705	Argument	pOch -> iLenName + 1		42602	2					
ANR	42706	AdditiveExpression	pOch -> iLenName + 1		42602	0		+			
ANR	42707	PtrMemberAccess	pOch -> iLenName		42602	0					
ANR	42708	Identifier	pOch		42602	0					
ANR	42709	Identifier	iLenName		42602	1					
ANR	42710	PrimaryExpression	1		42602	1					
ANR	42711	ExpressionStatement	p = * ppRestOfConfLine	224:1:5008:5029	42602	9	True				
ANR	42712	AssignmentExpression	p = * ppRestOfConfLine		42602	0		=			
ANR	42713	Identifier	p		42602	0					
ANR	42714	UnaryOperationExpression	* ppRestOfConfLine		42602	1					
ANR	42715	UnaryOperator	*		42602	0					
ANR	42716	Identifier	ppRestOfConfLine		42602	1					
ANR	42717	ExpressionStatement	assert ( p != NULL )	225:1:5032:5049	42602	10	True				
ANR	42718	CallExpression	assert ( p != NULL )		42602	0					
ANR	42719	Callee	assert		42602	0					
ANR	42720	Identifier	assert		42602	0					
ANR	42721	ArgumentList	p != NULL		42602	1					
ANR	42722	Argument	p != NULL		42602	0					
ANR	42723	EqualityExpression	p != NULL		42602	0		!=			
ANR	42724	Identifier	p		42602	0					
ANR	42725	Identifier	NULL		42602	1					
ANR	42726	ExpressionStatement	"get_Field ( & p , & pOch -> pszFileTemplate )"	228:1:5071:5108	42602	11	True				
ANR	42727	CallExpression	"get_Field ( & p , & pOch -> pszFileTemplate )"		42602	0					
ANR	42728	Callee	get_Field		42602	0					
ANR	42729	Identifier	get_Field		42602	0					
ANR	42730	ArgumentList	& p		42602	1					
ANR	42731	Argument	& p		42602	0					
ANR	42732	UnaryOperationExpression	& p		42602	0					
ANR	42733	UnaryOperator	&		42602	0					
ANR	42734	Identifier	p		42602	1					
ANR	42735	Argument	& pOch -> pszFileTemplate		42602	1					
ANR	42736	UnaryOperationExpression	& pOch -> pszFileTemplate		42602	0					
ANR	42737	UnaryOperator	&		42602	0					
ANR	42738	PtrMemberAccess	pOch -> pszFileTemplate		42602	1					
ANR	42739	Identifier	pOch		42602	0					
ANR	42740	Identifier	pszFileTemplate		42602	1					
ANR	42741	IfStatement	if ( * p )		42602	12					
ANR	42742	Condition	* p	229:4:5114:5115	42602	0	True				
ANR	42743	UnaryOperationExpression	* p		42602	0					
ANR	42744	UnaryOperator	*		42602	0					
ANR	42745	Identifier	p		42602	1					
ANR	42746	ExpressionStatement	"get_off_t ( & p , & pOch -> uSizeLimit )"	229:8:5118:5150	42602	1	True				
ANR	42747	CallExpression	"get_off_t ( & p , & pOch -> uSizeLimit )"		42602	0					
ANR	42748	Callee	get_off_t		42602	0					
ANR	42749	Identifier	get_off_t		42602	0					
ANR	42750	ArgumentList	& p		42602	1					
ANR	42751	Argument	& p		42602	0					
ANR	42752	UnaryOperationExpression	& p		42602	0					
ANR	42753	UnaryOperator	&		42602	0					
ANR	42754	Identifier	p		42602	1					
ANR	42755	Argument	& pOch -> uSizeLimit		42602	1					
ANR	42756	UnaryOperationExpression	& pOch -> uSizeLimit		42602	0					
ANR	42757	UnaryOperator	&		42602	0					
ANR	42758	PtrMemberAccess	pOch -> uSizeLimit		42602	1					
ANR	42759	Identifier	pOch		42602	0					
ANR	42760	Identifier	uSizeLimit		42602	1					
ANR	42761	IfStatement	if ( * p )		42602	13					
ANR	42762	Condition	* p	230:4:5156:5157	42602	0	True				
ANR	42763	UnaryOperationExpression	* p		42602	0					
ANR	42764	UnaryOperator	*		42602	0					
ANR	42765	Identifier	p		42602	1					
ANR	42766	ExpressionStatement	"get_restOfLine ( & p , & pOch -> cmdOnSizeLimit )"	230:8:5160:5201	42602	1	True				
ANR	42767	CallExpression	"get_restOfLine ( & p , & pOch -> cmdOnSizeLimit )"		42602	0					
ANR	42768	Callee	get_restOfLine		42602	0					
ANR	42769	Identifier	get_restOfLine		42602	0					
ANR	42770	ArgumentList	& p		42602	1					
ANR	42771	Argument	& p		42602	0					
ANR	42772	UnaryOperationExpression	& p		42602	0					
ANR	42773	UnaryOperator	&		42602	0					
ANR	42774	Identifier	p		42602	1					
ANR	42775	Argument	& pOch -> cmdOnSizeLimit		42602	1					
ANR	42776	UnaryOperationExpression	& pOch -> cmdOnSizeLimit		42602	0					
ANR	42777	UnaryOperator	&		42602	0					
ANR	42778	PtrMemberAccess	pOch -> cmdOnSizeLimit		42602	1					
ANR	42779	Identifier	pOch		42602	0					
ANR	42780	Identifier	cmdOnSizeLimit		42602	1					
ANR	42781	ExpressionStatement	* ppRestOfConfLine = p	232:1:5205:5226	42602	14	True				
ANR	42782	AssignmentExpression	* ppRestOfConfLine = p		42602	0		=			
ANR	42783	UnaryOperationExpression	* ppRestOfConfLine		42602	0					
ANR	42784	UnaryOperator	*		42602	0					
ANR	42785	Identifier	ppRestOfConfLine		42602	1					
ANR	42786	Identifier	p		42602	1					
ANR	42787	ReturnStatement	return ( pOch ) ;	233:1:5229:5241	42602	15	True				
ANR	42788	Identifier	pOch		42602	0					
ANR	42789	ReturnType	struct outchannel *		42602	1					
ANR	42790	Identifier	ochAddLine		42602	2					
ANR	42791	ParameterList	"char * pName , uchar * * ppRestOfConfLine"		42602	3					
ANR	42792	Parameter	char * pName	199:30:4335:4345	42602	0	True				
ANR	42793	ParameterType	char *		42602	0					
ANR	42794	Identifier	pName		42602	1					
ANR	42795	Parameter	uchar * * ppRestOfConfLine	199:43:4348:4371	42602	1	True				
ANR	42796	ParameterType	uchar * *		42602	0					
ANR	42797	Identifier	ppRestOfConfLine		42602	1					
ANR	42798	CFGEntryNode	ENTRY		42602		True				
ANR	42799	CFGExitNode	EXIT		42602		True				
ANR	42800	Symbol	ppRestOfConfLine		42602						
ANR	42801	Symbol	NULL		42602						
ANR	42802	Symbol	pOch -> iLenName		42602						
ANR	42803	Symbol	& pOch -> pszFileTemplate		42602						
ANR	42804	Symbol	pOch		42602						
ANR	42805	Symbol	p		42602						
ANR	42806	Symbol	strlen		42602						
ANR	42807	Symbol	* ppRestOfConfLine		42602						
ANR	42808	Symbol	& pOch -> cmdOnSizeLimit		42602						
ANR	42809	Symbol	pName		42602						
ANR	42810	Symbol	MALLOC		42602						
ANR	42811	Symbol	& p		42602						
ANR	42812	Symbol	* pOch		42602						
ANR	42813	Symbol	* p		42602						
ANR	42814	Symbol	& pOch -> uSizeLimit		42602						
ANR	42815	Symbol	pOch -> pszName		42602						
ANR	42816	Symbol	ochConstruct		42602						
ANR	42817	Function	ochFind	243:0:5449:5747							
ANR	42818	FunctionDef	"ochFind (char * pName , int iLenName)"		42817	0					
ANR	42819	CompoundStatement		244:0:5503:5747	42817	0					
ANR	42820	IdentifierDeclStatement	struct outchannel * pOch ;	245:1:5506:5529	42817	0	True				
ANR	42821	IdentifierDecl	* pOch		42817	0					
ANR	42822	IdentifierDeclType	struct outchannel *		42817	0					
ANR	42823	Identifier	pOch		42817	1					
ANR	42824	ExpressionStatement	assert ( pName != NULL )	247:1:5533:5554	42817	1	True				
ANR	42825	CallExpression	assert ( pName != NULL )		42817	0					
ANR	42826	Callee	assert		42817	0					
ANR	42827	Identifier	assert		42817	0					
ANR	42828	ArgumentList	pName != NULL		42817	1					
ANR	42829	Argument	pName != NULL		42817	0					
ANR	42830	EqualityExpression	pName != NULL		42817	0		!=			
ANR	42831	Identifier	pName		42817	0					
ANR	42832	Identifier	NULL		42817	1					
ANR	42833	ExpressionStatement	pOch = loadConf -> och . ochRoot	249:1:5558:5586	42817	2	True				
ANR	42834	AssignmentExpression	pOch = loadConf -> och . ochRoot		42817	0		=			
ANR	42835	Identifier	pOch		42817	0					
ANR	42836	MemberAccess	loadConf -> och . ochRoot		42817	1					
ANR	42837	PtrMemberAccess	loadConf -> och		42817	0					
ANR	42838	Identifier	loadConf		42817	0					
ANR	42839	Identifier	och		42817	1					
ANR	42840	Identifier	ochRoot		42817	1					
ANR	42841	WhileStatement	"while ( pOch != NULL && ! ( pOch -> iLenName == iLenName && ! strcmp ( pOch -> pszName , pName ) ) )"		42817	3					
ANR	42842	Condition	"pOch != NULL && ! ( pOch -> iLenName == iLenName && ! strcmp ( pOch -> pszName , pName ) )"	250:7:5595:5698	42817	0	True				
ANR	42843	AndExpression	"pOch != NULL && ! ( pOch -> iLenName == iLenName && ! strcmp ( pOch -> pszName , pName ) )"		42817	0		&&			
ANR	42844	EqualityExpression	pOch != NULL		42817	0		!=			
ANR	42845	Identifier	pOch		42817	0					
ANR	42846	Identifier	NULL		42817	1					
ANR	42847	UnaryOperationExpression	"! ( pOch -> iLenName == iLenName && ! strcmp ( pOch -> pszName , pName ) )"		42817	1					
ANR	42848	UnaryOperator	!		42817	0					
ANR	42849	AndExpression	"pOch -> iLenName == iLenName && ! strcmp ( pOch -> pszName , pName )"		42817	1		&&			
ANR	42850	EqualityExpression	pOch -> iLenName == iLenName		42817	0		==			
ANR	42851	PtrMemberAccess	pOch -> iLenName		42817	0					
ANR	42852	Identifier	pOch		42817	0					
ANR	42853	Identifier	iLenName		42817	1					
ANR	42854	Identifier	iLenName		42817	1					
ANR	42855	UnaryOperationExpression	"! strcmp ( pOch -> pszName , pName )"		42817	1					
ANR	42856	UnaryOperator	!		42817	0					
ANR	42857	CallExpression	"strcmp ( pOch -> pszName , pName )"		42817	1					
ANR	42858	Callee	strcmp		42817	0					
ANR	42859	Identifier	strcmp		42817	0					
ANR	42860	ArgumentList	pOch -> pszName		42817	1					
ANR	42861	Argument	pOch -> pszName		42817	0					
ANR	42862	PtrMemberAccess	pOch -> pszName		42817	0					
ANR	42863	Identifier	pOch		42817	0					
ANR	42864	Identifier	pszName		42817	1					
ANR	42865	Argument	pName		42817	1					
ANR	42866	Identifier	pName		42817	0					
ANR	42867	CompoundStatement		11:2:199:199	42817	1					
ANR	42868	ExpressionStatement	pOch = pOch -> pNext	255:3:5708:5726	42817	0	True				
ANR	42869	AssignmentExpression	pOch = pOch -> pNext		42817	0		=			
ANR	42870	Identifier	pOch		42817	0					
ANR	42871	PtrMemberAccess	pOch -> pNext		42817	1					
ANR	42872	Identifier	pOch		42817	0					
ANR	42873	Identifier	pNext		42817	1					
ANR	42874	ReturnStatement	return ( pOch ) ;	257:1:5733:5745	42817	4	True				
ANR	42875	Identifier	pOch		42817	0					
ANR	42876	ReturnType	struct outchannel *		42817	1					
ANR	42877	Identifier	ochFind		42817	2					
ANR	42878	ParameterList	"char * pName , int iLenName"		42817	3					
ANR	42879	Parameter	char * pName	243:27:5476:5486	42817	0	True				
ANR	42880	ParameterType	char *		42817	0					
ANR	42881	Identifier	pName		42817	1					
ANR	42882	Parameter	int iLenName	243:40:5489:5500	42817	1	True				
ANR	42883	ParameterType	int		42817	0					
ANR	42884	Identifier	iLenName		42817	1					
ANR	42885	CFGEntryNode	ENTRY		42817		True				
ANR	42886	CFGExitNode	EXIT		42817		True				
ANR	42887	Symbol	strcmp		42817						
ANR	42888	Symbol	NULL		42817						
ANR	42889	Symbol	pOch -> pNext		42817						
ANR	42890	Symbol	pOch -> iLenName		42817						
ANR	42891	Symbol	pOch		42817						
ANR	42892	Symbol	loadConf		42817						
ANR	42893	Symbol	pName		42817						
ANR	42894	Symbol	* loadConf		42817						
ANR	42895	Symbol	loadConf -> och . ochRoot		42817						
ANR	42896	Symbol	iLenName		42817						
ANR	42897	Symbol	loadConf -> och		42817						
ANR	42898	Symbol	* pOch		42817						
ANR	42899	Symbol	pOch -> pszName		42817						
ANR	42900	Function	ochDeleteAll	264:0:5887:6217							
ANR	42901	FunctionDef	ochDeleteAll ()		42900	0					
ANR	42902	CompoundStatement		265:0:5911:6217	42900	0					
ANR	42903	IdentifierDeclStatement	"struct outchannel * pOch , * pOchDel ;"	266:1:5914:5947	42900	0	True				
ANR	42904	IdentifierDecl	* pOch		42900	0					
ANR	42905	IdentifierDeclType	struct outchannel *		42900	0					
ANR	42906	Identifier	pOch		42900	1					
ANR	42907	IdentifierDecl	* pOchDel		42900	1					
ANR	42908	IdentifierDeclType	struct outchannel *		42900	0					
ANR	42909	Identifier	pOchDel		42900	1					
ANR	42910	ExpressionStatement	pOch = loadConf -> och . ochRoot	268:1:5951:5979	42900	1	True				
ANR	42911	AssignmentExpression	pOch = loadConf -> och . ochRoot		42900	0		=			
ANR	42912	Identifier	pOch		42900	0					
ANR	42913	MemberAccess	loadConf -> och . ochRoot		42900	1					
ANR	42914	PtrMemberAccess	loadConf -> och		42900	0					
ANR	42915	Identifier	loadConf		42900	0					
ANR	42916	Identifier	och		42900	1					
ANR	42917	Identifier	ochRoot		42900	1					
ANR	42918	WhileStatement	while ( pOch != NULL )		42900	2					
ANR	42919	Condition	pOch != NULL	269:7:5988:5999	42900	0	True				
ANR	42920	EqualityExpression	pOch != NULL		42900	0		!=			
ANR	42921	Identifier	pOch		42900	0					
ANR	42922	Identifier	NULL		42900	1					
ANR	42923	CompoundStatement		5:21:90:90	42900	1					
ANR	42924	ExpressionStatement	"dbgprintf ( ""Delete Outchannel: Name='%s'\\n "" , pOch -> pszName == NULL ? ""NULL"" : pOch -> pszName )"	270:2:6006:6097	42900	0	True				
ANR	42925	CallExpression	"dbgprintf ( ""Delete Outchannel: Name='%s'\\n "" , pOch -> pszName == NULL ? ""NULL"" : pOch -> pszName )"		42900	0					
ANR	42926	Callee	dbgprintf		42900	0					
ANR	42927	Identifier	dbgprintf		42900	0					
ANR	42928	ArgumentList	"""Delete Outchannel: Name='%s'\\n """		42900	1					
ANR	42929	Argument	"""Delete Outchannel: Name='%s'\\n """		42900	0					
ANR	42930	PrimaryExpression	"""Delete Outchannel: Name='%s'\\n """		42900	0					
ANR	42931	Argument	"pOch -> pszName == NULL ? ""NULL"" : pOch -> pszName"		42900	1					
ANR	42932	ConditionalExpression	"pOch -> pszName == NULL ? ""NULL"" : pOch -> pszName"		42900	0					
ANR	42933	Condition	pOch -> pszName == NULL		42900	0					
ANR	42934	EqualityExpression	pOch -> pszName == NULL		42900	0		==			
ANR	42935	PtrMemberAccess	pOch -> pszName		42900	0					
ANR	42936	Identifier	pOch		42900	0					
ANR	42937	Identifier	pszName		42900	1					
ANR	42938	Identifier	NULL		42900	1					
ANR	42939	PrimaryExpression	"""NULL"""		42900	1					
ANR	42940	PtrMemberAccess	pOch -> pszName		42900	2					
ANR	42941	Identifier	pOch		42900	0					
ANR	42942	Identifier	pszName		42900	1					
ANR	42943	ExpressionStatement	pOchDel = pOch	271:2:6101:6115	42900	1	True				
ANR	42944	AssignmentExpression	pOchDel = pOch		42900	0		=			
ANR	42945	Identifier	pOchDel		42900	0					
ANR	42946	Identifier	pOch		42900	1					
ANR	42947	ExpressionStatement	pOch = pOch -> pNext	272:2:6119:6137	42900	2	True				
ANR	42948	AssignmentExpression	pOch = pOch -> pNext		42900	0		=			
ANR	42949	Identifier	pOch		42900	0					
ANR	42950	PtrMemberAccess	pOch -> pNext		42900	1					
ANR	42951	Identifier	pOch		42900	0					
ANR	42952	Identifier	pNext		42900	1					
ANR	42953	IfStatement	if ( pOchDel -> pszName != NULL )		42900	3					
ANR	42954	Condition	pOchDel -> pszName != NULL	273:5:6144:6167	42900	0	True				
ANR	42955	EqualityExpression	pOchDel -> pszName != NULL		42900	0		!=			
ANR	42956	PtrMemberAccess	pOchDel -> pszName		42900	0					
ANR	42957	Identifier	pOchDel		42900	0					
ANR	42958	Identifier	pszName		42900	1					
ANR	42959	Identifier	NULL		42900	1					
ANR	42960	ExpressionStatement	free ( pOchDel -> pszName )	274:3:6173:6195	42900	1	True				
ANR	42961	CallExpression	free ( pOchDel -> pszName )		42900	0					
ANR	42962	Callee	free		42900	0					
ANR	42963	Identifier	free		42900	0					
ANR	42964	ArgumentList	pOchDel -> pszName		42900	1					
ANR	42965	Argument	pOchDel -> pszName		42900	0					
ANR	42966	PtrMemberAccess	pOchDel -> pszName		42900	0					
ANR	42967	Identifier	pOchDel		42900	0					
ANR	42968	Identifier	pszName		42900	1					
ANR	42969	ExpressionStatement	free ( pOchDel )	275:2:6199:6212	42900	4	True				
ANR	42970	CallExpression	free ( pOchDel )		42900	0					
ANR	42971	Callee	free		42900	0					
ANR	42972	Identifier	free		42900	0					
ANR	42973	ArgumentList	pOchDel		42900	1					
ANR	42974	Argument	pOchDel		42900	0					
ANR	42975	Identifier	pOchDel		42900	0					
ANR	42976	ReturnType	void		42900	1					
ANR	42977	Identifier	ochDeleteAll		42900	2					
ANR	42978	ParameterList			42900	3					
ANR	42979	CFGEntryNode	ENTRY		42900		True				
ANR	42980	CFGExitNode	EXIT		42900		True				
ANR	42981	Symbol	pOch		42900						
ANR	42982	Symbol	loadConf		42900						
ANR	42983	Symbol	NULL		42900						
ANR	42984	Symbol	* loadConf		42900						
ANR	42985	Symbol	loadConf -> och . ochRoot		42900						
ANR	42986	Symbol	loadConf -> och		42900						
ANR	42987	Symbol	* pOch		42900						
ANR	42988	Symbol	pOchDel		42900						
ANR	42989	Symbol	pOch -> pNext		42900						
ANR	42990	Symbol	* pOchDel		42900						
ANR	42991	Symbol	pOch -> pszName		42900						
ANR	42992	Symbol	pOchDel -> pszName		42900						
ANR	42993	Function	ochPrintList	283:0:6342:6876							
ANR	42994	FunctionDef	ochPrintList ()		42993	0					
ANR	42995	CompoundStatement		284:0:6366:6876	42993	0					
ANR	42996	IdentifierDeclStatement	struct outchannel * pOch ;	285:1:6369:6392	42993	0	True				
ANR	42997	IdentifierDecl	* pOch		42993	0					
ANR	42998	IdentifierDeclType	struct outchannel *		42993	0					
ANR	42999	Identifier	pOch		42993	1					
ANR	43000	ExpressionStatement	pOch = loadConf -> och . ochRoot	287:1:6396:6424	42993	1	True				
ANR	43001	AssignmentExpression	pOch = loadConf -> och . ochRoot		42993	0		=			
ANR	43002	Identifier	pOch		42993	0					
ANR	43003	MemberAccess	loadConf -> och . ochRoot		42993	1					
ANR	43004	PtrMemberAccess	loadConf -> och		42993	0					
ANR	43005	Identifier	loadConf		42993	0					
ANR	43006	Identifier	och		42993	1					
ANR	43007	Identifier	ochRoot		42993	1					
ANR	43008	WhileStatement	while ( pOch != NULL )		42993	2					
ANR	43009	Condition	pOch != NULL	288:7:6433:6444	42993	0	True				
ANR	43010	EqualityExpression	pOch != NULL		42993	0		!=			
ANR	43011	Identifier	pOch		42993	0					
ANR	43012	Identifier	NULL		42993	1					
ANR	43013	CompoundStatement		5:21:80:80	42993	1					
ANR	43014	ExpressionStatement	"dbgprintf ( ""Outchannel: Name='%s'\\n"" , pOch -> pszName == NULL ? ""NULL"" : pOch -> pszName )"	289:2:6451:6534	42993	0	True				
ANR	43015	CallExpression	"dbgprintf ( ""Outchannel: Name='%s'\\n"" , pOch -> pszName == NULL ? ""NULL"" : pOch -> pszName )"		42993	0					
ANR	43016	Callee	dbgprintf		42993	0					
ANR	43017	Identifier	dbgprintf		42993	0					
ANR	43018	ArgumentList	"""Outchannel: Name='%s'\\n"""		42993	1					
ANR	43019	Argument	"""Outchannel: Name='%s'\\n"""		42993	0					
ANR	43020	PrimaryExpression	"""Outchannel: Name='%s'\\n"""		42993	0					
ANR	43021	Argument	"pOch -> pszName == NULL ? ""NULL"" : pOch -> pszName"		42993	1					
ANR	43022	ConditionalExpression	"pOch -> pszName == NULL ? ""NULL"" : pOch -> pszName"		42993	0					
ANR	43023	Condition	pOch -> pszName == NULL		42993	0					
ANR	43024	EqualityExpression	pOch -> pszName == NULL		42993	0		==			
ANR	43025	PtrMemberAccess	pOch -> pszName		42993	0					
ANR	43026	Identifier	pOch		42993	0					
ANR	43027	Identifier	pszName		42993	1					
ANR	43028	Identifier	NULL		42993	1					
ANR	43029	PrimaryExpression	"""NULL"""		42993	1					
ANR	43030	PtrMemberAccess	pOch -> pszName		42993	2					
ANR	43031	Identifier	pOch		42993	0					
ANR	43032	Identifier	pszName		42993	1					
ANR	43033	ExpressionStatement	"dbgprintf ( ""\\tFile Template: '%s'\\n"" , pOch -> pszFileTemplate == NULL ? ""NULL"" : ( char * ) pOch -> pszFileTemplate )"	290:2:6538:6646	42993	1	True				
ANR	43034	CallExpression	"dbgprintf ( ""\\tFile Template: '%s'\\n"" , pOch -> pszFileTemplate == NULL ? ""NULL"" : ( char * ) pOch -> pszFileTemplate )"		42993	0					
ANR	43035	Callee	dbgprintf		42993	0					
ANR	43036	Identifier	dbgprintf		42993	0					
ANR	43037	ArgumentList	"""\\tFile Template: '%s'\\n"""		42993	1					
ANR	43038	Argument	"""\\tFile Template: '%s'\\n"""		42993	0					
ANR	43039	PrimaryExpression	"""\\tFile Template: '%s'\\n"""		42993	0					
ANR	43040	Argument	"pOch -> pszFileTemplate == NULL ? ""NULL"" : ( char * ) pOch -> pszFileTemplate"		42993	1					
ANR	43041	ConditionalExpression	"pOch -> pszFileTemplate == NULL ? ""NULL"" : ( char * ) pOch -> pszFileTemplate"		42993	0					
ANR	43042	Condition	pOch -> pszFileTemplate == NULL		42993	0					
ANR	43043	EqualityExpression	pOch -> pszFileTemplate == NULL		42993	0		==			
ANR	43044	PtrMemberAccess	pOch -> pszFileTemplate		42993	0					
ANR	43045	Identifier	pOch		42993	0					
ANR	43046	Identifier	pszFileTemplate		42993	1					
ANR	43047	Identifier	NULL		42993	1					
ANR	43048	PrimaryExpression	"""NULL"""		42993	1					
ANR	43049	CastExpression	( char * ) pOch -> pszFileTemplate		42993	2					
ANR	43050	CastTarget	char *		42993	0					
ANR	43051	PtrMemberAccess	pOch -> pszFileTemplate		42993	1					
ANR	43052	Identifier	pOch		42993	0					
ANR	43053	Identifier	pszFileTemplate		42993	1					
ANR	43054	Statement	dbgprintf	291:2:6650:6658	42993	2	True				
ANR	43055	Statement	(	291:11:6659:6659	42993	3	True				
ANR	43056	Statement	"""\\tMax Size.....: %lu\\n"""	291:12:6660:6683	42993	4	True				
ANR	43057	Statement	","	291:36:6684:6684	42993	5	True				
ANR	43058	Statement	(	291:38:6686:6686	42993	6	True				
ANR	43059	Statement	long	291:39:6687:6690	42993	7	True				
ANR	43060	Statement	unsigned	291:44:6692:6699	42993	8	True				
ANR	43061	Statement	)	291:52:6700:6700	42993	9	True				
ANR	43062	Statement	pOch	291:54:6702:6705	42993	10	True				
ANR	43063	Statement	->	291:58:6706:6707	42993	11	True				
ANR	43064	Statement	uSizeLimit	291:60:6708:6717	42993	12	True				
ANR	43065	Statement	)	291:70:6718:6718	42993	13	True				
ANR	43066	ExpressionStatement		291:71:6719:6719	42993	14	True				
ANR	43067	ExpressionStatement	"dbgprintf ( ""\\tOnSizeLimtCmd: '%s'\\n"" , pOch -> cmdOnSizeLimit == NULL ? ""NULL"" : ( char * ) pOch -> cmdOnSizeLimit )"	292:2:6723:6829	42993	15	True				
ANR	43068	CallExpression	"dbgprintf ( ""\\tOnSizeLimtCmd: '%s'\\n"" , pOch -> cmdOnSizeLimit == NULL ? ""NULL"" : ( char * ) pOch -> cmdOnSizeLimit )"		42993	0					
ANR	43069	Callee	dbgprintf		42993	0					
ANR	43070	Identifier	dbgprintf		42993	0					
ANR	43071	ArgumentList	"""\\tOnSizeLimtCmd: '%s'\\n"""		42993	1					
ANR	43072	Argument	"""\\tOnSizeLimtCmd: '%s'\\n"""		42993	0					
ANR	43073	PrimaryExpression	"""\\tOnSizeLimtCmd: '%s'\\n"""		42993	0					
ANR	43074	Argument	"pOch -> cmdOnSizeLimit == NULL ? ""NULL"" : ( char * ) pOch -> cmdOnSizeLimit"		42993	1					
ANR	43075	ConditionalExpression	"pOch -> cmdOnSizeLimit == NULL ? ""NULL"" : ( char * ) pOch -> cmdOnSizeLimit"		42993	0					
ANR	43076	Condition	pOch -> cmdOnSizeLimit == NULL		42993	0					
ANR	43077	EqualityExpression	pOch -> cmdOnSizeLimit == NULL		42993	0		==			
ANR	43078	PtrMemberAccess	pOch -> cmdOnSizeLimit		42993	0					
ANR	43079	Identifier	pOch		42993	0					
ANR	43080	Identifier	cmdOnSizeLimit		42993	1					
ANR	43081	Identifier	NULL		42993	1					
ANR	43082	PrimaryExpression	"""NULL"""		42993	1					
ANR	43083	CastExpression	( char * ) pOch -> cmdOnSizeLimit		42993	2					
ANR	43084	CastTarget	char *		42993	0					
ANR	43085	PtrMemberAccess	pOch -> cmdOnSizeLimit		42993	1					
ANR	43086	Identifier	pOch		42993	0					
ANR	43087	Identifier	cmdOnSizeLimit		42993	1					
ANR	43088	ExpressionStatement	pOch = pOch -> pNext	293:2:6833:6851	42993	16	True				
ANR	43089	AssignmentExpression	pOch = pOch -> pNext		42993	0		=			
ANR	43090	Identifier	pOch		42993	0					
ANR	43091	PtrMemberAccess	pOch -> pNext		42993	1					
ANR	43092	Identifier	pOch		42993	0					
ANR	43093	Identifier	pNext		42993	1					
ANR	43094	ReturnType	void		42993	1					
ANR	43095	Identifier	ochPrintList		42993	2					
ANR	43096	ParameterList			42993	3					
ANR	43097	CFGEntryNode	ENTRY		42993		True				
ANR	43098	CFGExitNode	EXIT		42993		True				
ANR	43099	Symbol	pOch		42993						
ANR	43100	Symbol	loadConf		42993						
ANR	43101	Symbol	NULL		42993						
ANR	43102	Symbol	* loadConf		42993						
ANR	43103	Symbol	loadConf -> och . ochRoot		42993						
ANR	43104	Symbol	loadConf -> och		42993						
ANR	43105	Symbol	* pOch		42993						
ANR	43106	Symbol	pOch -> pszFileTemplate		42993						
ANR	43107	Symbol	pOch -> cmdOnSizeLimit		42993						
ANR	43108	Symbol	pOch -> pNext		42993						
ANR	43109	Symbol	pOch -> pszName		42993						
