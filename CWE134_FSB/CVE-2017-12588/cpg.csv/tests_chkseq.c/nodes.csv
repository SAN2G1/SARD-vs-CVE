command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	331793	File	data/converged/CVE-2017-12588_rsyslog/tests_chkseq.c								
ANR	331794	Function	main	44:0:1695:6180							
ANR	331795	FunctionDef	"main (int argc , char * argv [ ])"		331794	0					
ANR	331796	CompoundStatement		45:0:1728:6180	331794	0					
ANR	331797	IdentifierDeclStatement	FILE * fp ;	46:1:1731:1739	331794	0	True				
ANR	331798	IdentifierDecl	* fp		331794	0					
ANR	331799	IdentifierDeclType	FILE *		331794	0					
ANR	331800	Identifier	fp		331794	1					
ANR	331801	IdentifierDeclStatement	int val ;	47:1:1742:1749	331794	1	True				
ANR	331802	IdentifierDecl	val		331794	0					
ANR	331803	IdentifierDeclType	int		331794	0					
ANR	331804	Identifier	val		331794	1					
ANR	331805	IdentifierDeclStatement	int i ;	48:1:1752:1757	331794	2	True				
ANR	331806	IdentifierDecl	i		331794	0					
ANR	331807	IdentifierDeclType	int		331794	0					
ANR	331808	Identifier	i		331794	1					
ANR	331809	IdentifierDeclStatement	int ret = 0 ;	49:1:1760:1771	331794	3	True				
ANR	331810	IdentifierDecl	ret = 0		331794	0					
ANR	331811	IdentifierDeclType	int		331794	0					
ANR	331812	Identifier	ret		331794	1					
ANR	331813	AssignmentExpression	ret = 0		331794	2		=			
ANR	331814	Identifier	ret		331794	0					
ANR	331815	PrimaryExpression	0		331794	1					
ANR	331816	IdentifierDeclStatement	int scanfOK ;	50:1:1774:1785	331794	4	True				
ANR	331817	IdentifierDecl	scanfOK		331794	0					
ANR	331818	IdentifierDeclType	int		331794	0					
ANR	331819	Identifier	scanfOK		331794	1					
ANR	331820	IdentifierDeclStatement	int verbose = 0 ;	51:1:1788:1803	331794	5	True				
ANR	331821	IdentifierDecl	verbose = 0		331794	0					
ANR	331822	IdentifierDeclType	int		331794	0					
ANR	331823	Identifier	verbose		331794	1					
ANR	331824	AssignmentExpression	verbose = 0		331794	2		=			
ANR	331825	Identifier	verbose		331794	0					
ANR	331826	PrimaryExpression	0		331794	1					
ANR	331827	IdentifierDeclStatement	int bHaveExtraData = 0 ;	52:1:1806:1828	331794	6	True				
ANR	331828	IdentifierDecl	bHaveExtraData = 0		331794	0					
ANR	331829	IdentifierDeclType	int		331794	0					
ANR	331830	Identifier	bHaveExtraData		331794	1					
ANR	331831	AssignmentExpression	bHaveExtraData = 0		331794	2		=			
ANR	331832	Identifier	bHaveExtraData		331794	0					
ANR	331833	PrimaryExpression	0		331794	1					
ANR	331834	IdentifierDeclStatement	int bAnticipateTruncation = 0 ;	53:1:1831:1860	331794	7	True				
ANR	331835	IdentifierDecl	bAnticipateTruncation = 0		331794	0					
ANR	331836	IdentifierDeclType	int		331794	0					
ANR	331837	Identifier	bAnticipateTruncation		331794	1					
ANR	331838	AssignmentExpression	bAnticipateTruncation = 0		331794	2		=			
ANR	331839	Identifier	bAnticipateTruncation		331794	0					
ANR	331840	PrimaryExpression	0		331794	1					
ANR	331841	IdentifierDeclStatement	int dupsPermitted = 0 ;	54:1:1863:1884	331794	8	True				
ANR	331842	IdentifierDecl	dupsPermitted = 0		331794	0					
ANR	331843	IdentifierDeclType	int		331794	0					
ANR	331844	Identifier	dupsPermitted		331794	1					
ANR	331845	AssignmentExpression	dupsPermitted = 0		331794	2		=			
ANR	331846	Identifier	dupsPermitted		331794	0					
ANR	331847	PrimaryExpression	0		331794	1					
ANR	331848	IdentifierDeclStatement	"int start = 0 , end = 0 ;"	55:1:1887:1909	331794	9	True				
ANR	331849	IdentifierDecl	start = 0		331794	0					
ANR	331850	IdentifierDeclType	int		331794	0					
ANR	331851	Identifier	start		331794	1					
ANR	331852	AssignmentExpression	start = 0		331794	2		=			
ANR	331853	Identifier	start		331794	0					
ANR	331854	PrimaryExpression	0		331794	1					
ANR	331855	IdentifierDecl	end = 0		331794	1					
ANR	331856	IdentifierDeclType	int		331794	0					
ANR	331857	Identifier	end		331794	1					
ANR	331858	AssignmentExpression	end = 0		331794	2		=			
ANR	331859	Identifier	end		331794	0					
ANR	331860	PrimaryExpression	0		331794	1					
ANR	331861	IdentifierDeclStatement	int opt ;	56:1:1912:1919	331794	10	True				
ANR	331862	IdentifierDecl	opt		331794	0					
ANR	331863	IdentifierDeclType	int		331794	0					
ANR	331864	Identifier	opt		331794	1					
ANR	331865	IdentifierDeclStatement	int lostok = 0 ;	57:1:1922:1936	331794	11	True				
ANR	331866	IdentifierDecl	lostok = 0		331794	0					
ANR	331867	IdentifierDeclType	int		331794	0					
ANR	331868	Identifier	lostok		331794	1					
ANR	331869	AssignmentExpression	lostok = 0		331794	2		=			
ANR	331870	Identifier	lostok		331794	0					
ANR	331871	PrimaryExpression	0		331794	1					
ANR	331872	IdentifierDeclStatement	int nDups = 0 ;	58:1:1982:1995	331794	12	True				
ANR	331873	IdentifierDecl	nDups = 0		331794	0					
ANR	331874	IdentifierDeclType	int		331794	0					
ANR	331875	Identifier	nDups		331794	1					
ANR	331876	AssignmentExpression	nDups = 0		331794	2		=			
ANR	331877	Identifier	nDups		331794	0					
ANR	331878	PrimaryExpression	0		331794	1					
ANR	331879	IdentifierDeclStatement	int reachedEOF ;	59:1:1998:2012	331794	13	True				
ANR	331880	IdentifierDecl	reachedEOF		331794	0					
ANR	331881	IdentifierDeclType	int		331794	0					
ANR	331882	Identifier	reachedEOF		331794	1					
ANR	331883	IdentifierDeclStatement	int edLen ;	60:1:2015:2024	331794	14	True				
ANR	331884	IdentifierDecl	edLen		331794	0					
ANR	331885	IdentifierDeclType	int		331794	0					
ANR	331886	Identifier	edLen		331794	1					
ANR	331887	Statement	static	61:1:2054:2059	331794	15	True				
ANR	331888	IdentifierDeclStatement	char edBuf [ 500 * 1024 ] ;	61:8:2061:2081	331794	16	True				
ANR	331889	IdentifierDecl	edBuf [ 500 * 1024 ]		331794	0					
ANR	331890	IdentifierDeclType	char [ 500 * 1024 ]		331794	0					
ANR	331891	Identifier	edBuf		331794	1					
ANR	331892	MultiplicativeExpression	500 * 1024		331794	2		*			
ANR	331893	PrimaryExpression	500		331794	0					
ANR	331894	PrimaryExpression	1024		331794	1					
ANR	331895	Statement	static	62:1:2153:2158	331794	17	True				
ANR	331896	IdentifierDeclStatement	char ioBuf [ sizeof ( edBuf ) + 1024 ] ;	62:8:2160:2190	331794	18	True				
ANR	331897	IdentifierDecl	ioBuf [ sizeof ( edBuf ) + 1024 ]		331794	0					
ANR	331898	IdentifierDeclType	char [ sizeof ( edBuf ) + 1024 ]		331794	0					
ANR	331899	Identifier	ioBuf		331794	1					
ANR	331900	AdditiveExpression	sizeof ( edBuf ) + 1024		331794	2		+			
ANR	331901	SizeofExpression	sizeof ( edBuf )		331794	0					
ANR	331902	Sizeof	sizeof		331794	0					
ANR	331903	SizeofOperand	edBuf		331794	1					
ANR	331904	PrimaryExpression	1024		331794	1					
ANR	331905	IdentifierDeclStatement	char * file = NULL ;	63:1:2193:2210	331794	19	True				
ANR	331906	IdentifierDecl	* file = NULL		331794	0					
ANR	331907	IdentifierDeclType	char *		331794	0					
ANR	331908	Identifier	file		331794	1					
ANR	331909	AssignmentExpression	* file = NULL		331794	2		=			
ANR	331910	Identifier	NULL		331794	0					
ANR	331911	Identifier	NULL		331794	1					
ANR	331912	WhileStatement	"while ( ( opt = getopt ( argc , argv , ""e:f:ds:vm:ET"" ) ) != EOF )"		331794	20					
ANR	331913	Condition	"( opt = getopt ( argc , argv , ""e:f:ds:vm:ET"" ) ) != EOF"	65:7:2220:2268	331794	0	True				
ANR	331914	EqualityExpression	"( opt = getopt ( argc , argv , ""e:f:ds:vm:ET"" ) ) != EOF"		331794	0		!=			
ANR	331915	AssignmentExpression	"opt = getopt ( argc , argv , ""e:f:ds:vm:ET"" )"		331794	0		=			
ANR	331916	Identifier	opt		331794	0					
ANR	331917	CallExpression	"getopt ( argc , argv , ""e:f:ds:vm:ET"" )"		331794	1					
ANR	331918	Callee	getopt		331794	0					
ANR	331919	Identifier	getopt		331794	0					
ANR	331920	ArgumentList	argc		331794	1					
ANR	331921	Argument	argc		331794	0					
ANR	331922	Identifier	argc		331794	0					
ANR	331923	Argument	argv		331794	1					
ANR	331924	Identifier	argv		331794	0					
ANR	331925	Argument	"""e:f:ds:vm:ET"""		331794	2					
ANR	331926	PrimaryExpression	"""e:f:ds:vm:ET"""		331794	0					
ANR	331927	Identifier	EOF		331794	1					
ANR	331928	CompoundStatement		21:58:542:542	331794	1					
ANR	331929	SwitchStatement	switch ( ( char ) opt )		331794	0					
ANR	331930	Condition	( char ) opt	66:9:2282:2290	331794	0	True				
ANR	331931	CastExpression	( char ) opt		331794	0					
ANR	331932	CastTarget	char		331794	0					
ANR	331933	Identifier	opt		331794	1					
ANR	331934	CompoundStatement		22:20:564:564	331794	1					
ANR	331935	Label	case 'f' :	67:2:2297:2305	331794	0	True				
ANR	331936	ExpressionStatement	file = optarg	68:3:2310:2323	331794	1	True				
ANR	331937	AssignmentExpression	file = optarg		331794	0		=			
ANR	331938	Identifier	file		331794	0					
ANR	331939	Identifier	optarg		331794	1					
ANR	331940	BreakStatement	break ;	69:3:2328:2333	331794	2	True				
ANR	331941	Label	case 'd' :	70:2:2337:2345	331794	3	True				
ANR	331942	ExpressionStatement	dupsPermitted = 1	71:3:2350:2367	331794	4	True				
ANR	331943	AssignmentExpression	dupsPermitted = 1		331794	0		=			
ANR	331944	Identifier	dupsPermitted		331794	0					
ANR	331945	PrimaryExpression	1		331794	1					
ANR	331946	BreakStatement	break ;	72:3:2372:2377	331794	5	True				
ANR	331947	Label	case 'e' :	73:2:2381:2389	331794	6	True				
ANR	331948	ExpressionStatement	end = atoi ( optarg )	74:3:2394:2412	331794	7	True				
ANR	331949	AssignmentExpression	end = atoi ( optarg )		331794	0		=			
ANR	331950	Identifier	end		331794	0					
ANR	331951	CallExpression	atoi ( optarg )		331794	1					
ANR	331952	Callee	atoi		331794	0					
ANR	331953	Identifier	atoi		331794	0					
ANR	331954	ArgumentList	optarg		331794	1					
ANR	331955	Argument	optarg		331794	0					
ANR	331956	Identifier	optarg		331794	0					
ANR	331957	BreakStatement	break ;	75:3:2417:2422	331794	8	True				
ANR	331958	Label	case 's' :	76:2:2426:2434	331794	9	True				
ANR	331959	ExpressionStatement	start = atoi ( optarg )	77:3:2439:2459	331794	10	True				
ANR	331960	AssignmentExpression	start = atoi ( optarg )		331794	0		=			
ANR	331961	Identifier	start		331794	0					
ANR	331962	CallExpression	atoi ( optarg )		331794	1					
ANR	331963	Callee	atoi		331794	0					
ANR	331964	Identifier	atoi		331794	0					
ANR	331965	ArgumentList	optarg		331794	1					
ANR	331966	Argument	optarg		331794	0					
ANR	331967	Identifier	optarg		331794	0					
ANR	331968	BreakStatement	break ;	78:3:2464:2469	331794	11	True				
ANR	331969	Label	case 'v' :	79:2:2473:2481	331794	12	True				
ANR	331970	ExpressionStatement	++ verbose	80:3:2486:2495	331794	13	True				
ANR	331971	UnaryExpression	++ verbose		331794	0					
ANR	331972	IncDec	++		331794	0					
ANR	331973	Identifier	verbose		331794	1					
ANR	331974	BreakStatement	break ;	81:3:2500:2505	331794	14	True				
ANR	331975	Label	case 'm' :	82:2:2509:2517	331794	15	True				
ANR	331976	ExpressionStatement	lostok = atoi ( optarg )	83:3:2522:2543	331794	16	True				
ANR	331977	AssignmentExpression	lostok = atoi ( optarg )		331794	0		=			
ANR	331978	Identifier	lostok		331794	0					
ANR	331979	CallExpression	atoi ( optarg )		331794	1					
ANR	331980	Callee	atoi		331794	0					
ANR	331981	Identifier	atoi		331794	0					
ANR	331982	ArgumentList	optarg		331794	1					
ANR	331983	Argument	optarg		331794	0					
ANR	331984	Identifier	optarg		331794	0					
ANR	331985	BreakStatement	break ;	84:3:2548:2553	331794	17	True				
ANR	331986	Label	case 'E' :	85:2:2557:2565	331794	18	True				
ANR	331987	ExpressionStatement	bHaveExtraData = 1	86:3:2570:2588	331794	19	True				
ANR	331988	AssignmentExpression	bHaveExtraData = 1		331794	0		=			
ANR	331989	Identifier	bHaveExtraData		331794	0					
ANR	331990	PrimaryExpression	1		331794	1					
ANR	331991	BreakStatement	break ;	87:3:2593:2598	331794	20	True				
ANR	331992	Label	case 'T' :	88:2:2602:2610	331794	21	True				
ANR	331993	ExpressionStatement	bAnticipateTruncation = 1	89:3:2615:2640	331794	22	True				
ANR	331994	AssignmentExpression	bAnticipateTruncation = 1		331794	0		=			
ANR	331995	Identifier	bAnticipateTruncation		331794	0					
ANR	331996	PrimaryExpression	1		331794	1					
ANR	331997	BreakStatement	break ;	90:3:2645:2650	331794	23	True				
ANR	331998	Label	default :	91:2:2654:2661	331794	24	True				
ANR	331999	Identifier	default		331794	0					
ANR	332000	ExpressionStatement	"printf ( ""Invalid call of chkseq, optchar='%c'\\n"" , opt )"	91:10:2662:2715	331794	25	True				
ANR	332001	CallExpression	"printf ( ""Invalid call of chkseq, optchar='%c'\\n"" , opt )"		331794	0					
ANR	332002	Callee	printf		331794	0					
ANR	332003	Identifier	printf		331794	0					
ANR	332004	ArgumentList	"""Invalid call of chkseq, optchar='%c'\\n"""		331794	1					
ANR	332005	Argument	"""Invalid call of chkseq, optchar='%c'\\n"""		331794	0					
ANR	332006	PrimaryExpression	"""Invalid call of chkseq, optchar='%c'\\n"""		331794	0					
ANR	332007	Argument	opt		331794	1					
ANR	332008	Identifier	opt		331794	0					
ANR	332009	ExpressionStatement	"printf ( ""Usage: chkseq file -sstart -eend -d -E\\n"" )"	92:3:2720:2770	331794	26	True				
ANR	332010	CallExpression	"printf ( ""Usage: chkseq file -sstart -eend -d -E\\n"" )"		331794	0					
ANR	332011	Callee	printf		331794	0					
ANR	332012	Identifier	printf		331794	0					
ANR	332013	ArgumentList	"""Usage: chkseq file -sstart -eend -d -E\\n"""		331794	1					
ANR	332014	Argument	"""Usage: chkseq file -sstart -eend -d -E\\n"""		331794	0					
ANR	332015	PrimaryExpression	"""Usage: chkseq file -sstart -eend -d -E\\n"""		331794	0					
ANR	332016	ExpressionStatement	exit ( 1 )	93:3:2775:2782	331794	27	True				
ANR	332017	CallExpression	exit ( 1 )		331794	0					
ANR	332018	Callee	exit		331794	0					
ANR	332019	Identifier	exit		331794	0					
ANR	332020	ArgumentList	1		331794	1					
ANR	332021	Argument	1		331794	0					
ANR	332022	PrimaryExpression	1		331794	0					
ANR	332023	IfStatement	if ( file == NULL )		331794	21					
ANR	332024	Condition	file == NULL	97:4:2796:2807	331794	0	True				
ANR	332025	EqualityExpression	file == NULL		331794	0		==			
ANR	332026	Identifier	file		331794	0					
ANR	332027	Identifier	NULL		331794	1					
ANR	332028	CompoundStatement		53:18:1081:1081	331794	1					
ANR	332029	ExpressionStatement	"printf ( ""file must be given!\\n"" )"	98:2:2814:2845	331794	0	True				
ANR	332030	CallExpression	"printf ( ""file must be given!\\n"" )"		331794	0					
ANR	332031	Callee	printf		331794	0					
ANR	332032	Identifier	printf		331794	0					
ANR	332033	ArgumentList	"""file must be given!\\n"""		331794	1					
ANR	332034	Argument	"""file must be given!\\n"""		331794	0					
ANR	332035	PrimaryExpression	"""file must be given!\\n"""		331794	0					
ANR	332036	ExpressionStatement	exit ( 1 )	99:2:2849:2856	331794	1	True				
ANR	332037	CallExpression	exit ( 1 )		331794	0					
ANR	332038	Callee	exit		331794	0					
ANR	332039	Identifier	exit		331794	0					
ANR	332040	ArgumentList	1		331794	1					
ANR	332041	Argument	1		331794	0					
ANR	332042	PrimaryExpression	1		331794	0					
ANR	332043	IfStatement	if ( start > end )		331794	22					
ANR	332044	Condition	start > end	102:4:2866:2876	331794	0	True				
ANR	332045	RelationalExpression	start > end		331794	0		>			
ANR	332046	Identifier	start		331794	0					
ANR	332047	Identifier	end		331794	1					
ANR	332048	CompoundStatement		58:17:1150:1150	331794	1					
ANR	332049	ExpressionStatement	"printf ( ""start must be less than or equal end!\\n"" )"	103:2:2883:2932	331794	0	True				
ANR	332050	CallExpression	"printf ( ""start must be less than or equal end!\\n"" )"		331794	0					
ANR	332051	Callee	printf		331794	0					
ANR	332052	Identifier	printf		331794	0					
ANR	332053	ArgumentList	"""start must be less than or equal end!\\n"""		331794	1					
ANR	332054	Argument	"""start must be less than or equal end!\\n"""		331794	0					
ANR	332055	PrimaryExpression	"""start must be less than or equal end!\\n"""		331794	0					
ANR	332056	ExpressionStatement	exit ( 1 )	104:2:2936:2943	331794	1	True				
ANR	332057	CallExpression	exit ( 1 )		331794	0					
ANR	332058	Callee	exit		331794	0					
ANR	332059	Identifier	exit		331794	0					
ANR	332060	ArgumentList	1		331794	1					
ANR	332061	Argument	1		331794	0					
ANR	332062	PrimaryExpression	1		331794	0					
ANR	332063	IfStatement	if ( verbose )		331794	23					
ANR	332064	Condition	verbose	107:4:2953:2959	331794	0	True				
ANR	332065	Identifier	verbose		331794	0					
ANR	332066	CompoundStatement		63:13:1233:1233	331794	1					
ANR	332067	ExpressionStatement	"printf ( ""chkseq: start %d, end %d\\n"" , start , end )"	108:2:2966:3014	331794	0	True				
ANR	332068	CallExpression	"printf ( ""chkseq: start %d, end %d\\n"" , start , end )"		331794	0					
ANR	332069	Callee	printf		331794	0					
ANR	332070	Identifier	printf		331794	0					
ANR	332071	ArgumentList	"""chkseq: start %d, end %d\\n"""		331794	1					
ANR	332072	Argument	"""chkseq: start %d, end %d\\n"""		331794	0					
ANR	332073	PrimaryExpression	"""chkseq: start %d, end %d\\n"""		331794	0					
ANR	332074	Argument	start		331794	1					
ANR	332075	Identifier	start		331794	0					
ANR	332076	Argument	end		331794	2					
ANR	332077	Identifier	end		331794	0					
ANR	332078	ExpressionStatement	"fp = fopen ( file , ""r"" )"	112:1:3038:3059	331794	24	True				
ANR	332079	AssignmentExpression	"fp = fopen ( file , ""r"" )"		331794	0		=			
ANR	332080	Identifier	fp		331794	0					
ANR	332081	CallExpression	"fopen ( file , ""r"" )"		331794	1					
ANR	332082	Callee	fopen		331794	0					
ANR	332083	Identifier	fopen		331794	0					
ANR	332084	ArgumentList	file		331794	1					
ANR	332085	Argument	file		331794	0					
ANR	332086	Identifier	file		331794	0					
ANR	332087	Argument	"""r"""		331794	1					
ANR	332088	PrimaryExpression	"""r"""		331794	0					
ANR	332089	IfStatement	if ( fp == NULL )		331794	25					
ANR	332090	Condition	fp == NULL	113:4:3065:3074	331794	0	True				
ANR	332091	EqualityExpression	fp == NULL		331794	0		==			
ANR	332092	Identifier	fp		331794	0					
ANR	332093	Identifier	NULL		331794	1					
ANR	332094	CompoundStatement		69:16:1348:1348	331794	1					
ANR	332095	ExpressionStatement	"printf ( ""error opening file '%s'\\n"" , file )"	114:2:3081:3122	331794	0	True				
ANR	332096	CallExpression	"printf ( ""error opening file '%s'\\n"" , file )"		331794	0					
ANR	332097	Callee	printf		331794	0					
ANR	332098	Identifier	printf		331794	0					
ANR	332099	ArgumentList	"""error opening file '%s'\\n"""		331794	1					
ANR	332100	Argument	"""error opening file '%s'\\n"""		331794	0					
ANR	332101	PrimaryExpression	"""error opening file '%s'\\n"""		331794	0					
ANR	332102	Argument	file		331794	1					
ANR	332103	Identifier	file		331794	0					
ANR	332104	ExpressionStatement	perror ( file )	115:2:3126:3138	331794	1	True				
ANR	332105	CallExpression	perror ( file )		331794	0					
ANR	332106	Callee	perror		331794	0					
ANR	332107	Identifier	perror		331794	0					
ANR	332108	ArgumentList	file		331794	1					
ANR	332109	Argument	file		331794	0					
ANR	332110	Identifier	file		331794	0					
ANR	332111	ExpressionStatement	exit ( 1 )	116:2:3142:3149	331794	2	True				
ANR	332112	CallExpression	exit ( 1 )		331794	0					
ANR	332113	Callee	exit		331794	0					
ANR	332114	Identifier	exit		331794	0					
ANR	332115	ArgumentList	1		331794	1					
ANR	332116	Argument	1		331794	0					
ANR	332117	PrimaryExpression	1		331794	0					
ANR	332118	ForStatement	for ( i = start ; i < end + 1 ; ++ i )		331794	26					
ANR	332119	ForInit	i = start ;	119:5:3160:3170	331794	0	True				
ANR	332120	AssignmentExpression	i = start		331794	0		=			
ANR	332121	Identifier	i		331794	0					
ANR	332122	Identifier	start		331794	1					
ANR	332123	Condition	i < end + 1	119:17:3172:3180	331794	1	True				
ANR	332124	RelationalExpression	i < end + 1		331794	0		<			
ANR	332125	Identifier	i		331794	0					
ANR	332126	AdditiveExpression	end + 1		331794	1		+			
ANR	332127	Identifier	end		331794	0					
ANR	332128	PrimaryExpression	1		331794	1					
ANR	332129	UnaryExpression	++ i	119:29:3184:3186	331794	2	True				
ANR	332130	IncDec	++		331794	0					
ANR	332131	Identifier	i		331794	1					
ANR	332132	CompoundStatement		75:34:1460:1460	331794	3					
ANR	332133	IfStatement	if ( bHaveExtraData )		331794	0					
ANR	332134	Condition	bHaveExtraData	120:5:3196:3209	331794	0	True				
ANR	332135	Identifier	bHaveExtraData		331794	0					
ANR	332136	CompoundStatement		76:21:1483:1483	331794	1					
ANR	332137	IfStatement	"if ( fgets ( ioBuf , sizeof ( ioBuf ) , fp ) == NULL )"		331794	0					
ANR	332138	Condition	"fgets ( ioBuf , sizeof ( ioBuf ) , fp ) == NULL"	121:6:3220:3258	331794	0	True				
ANR	332139	EqualityExpression	"fgets ( ioBuf , sizeof ( ioBuf ) , fp ) == NULL"		331794	0		==			
ANR	332140	CallExpression	"fgets ( ioBuf , sizeof ( ioBuf ) , fp )"		331794	0					
ANR	332141	Callee	fgets		331794	0					
ANR	332142	Identifier	fgets		331794	0					
ANR	332143	ArgumentList	ioBuf		331794	1					
ANR	332144	Argument	ioBuf		331794	0					
ANR	332145	Identifier	ioBuf		331794	0					
ANR	332146	Argument	sizeof ( ioBuf )		331794	1					
ANR	332147	SizeofExpression	sizeof ( ioBuf )		331794	0					
ANR	332148	Sizeof	sizeof		331794	0					
ANR	332149	SizeofOperand	ioBuf		331794	1					
ANR	332150	Argument	fp		331794	2					
ANR	332151	Identifier	fp		331794	0					
ANR	332152	Identifier	NULL		331794	1					
ANR	332153	CompoundStatement		77:47:1532:1532	331794	1					
ANR	332154	ExpressionStatement	scanfOK = 0	122:4:3267:3278	331794	0	True				
ANR	332155	AssignmentExpression	scanfOK = 0		331794	0		=			
ANR	332156	Identifier	scanfOK		331794	0					
ANR	332157	PrimaryExpression	0		331794	1					
ANR	332158	ElseStatement	else		331794	0					
ANR	332159	CompoundStatement		79:10:1561:1561	331794	0					
ANR	332160	ExpressionStatement	"scanfOK = sscanf ( ioBuf , ""%d,%d,%s\\n"" , & val , & edLen , edBuf ) == 3 ? 1 : 0"	124:4:3296:3367	331794	0	True				
ANR	332161	AssignmentExpression	"scanfOK = sscanf ( ioBuf , ""%d,%d,%s\\n"" , & val , & edLen , edBuf ) == 3 ? 1 : 0"		331794	0		=			
ANR	332162	Identifier	scanfOK		331794	0					
ANR	332163	ConditionalExpression	"sscanf ( ioBuf , ""%d,%d,%s\\n"" , & val , & edLen , edBuf ) == 3 ? 1 : 0"		331794	1					
ANR	332164	Condition	"sscanf ( ioBuf , ""%d,%d,%s\\n"" , & val , & edLen , edBuf ) == 3"		331794	0					
ANR	332165	EqualityExpression	"sscanf ( ioBuf , ""%d,%d,%s\\n"" , & val , & edLen , edBuf ) == 3"		331794	0		==			
ANR	332166	CallExpression	"sscanf ( ioBuf , ""%d,%d,%s\\n"" , & val , & edLen , edBuf )"		331794	0					
ANR	332167	Callee	sscanf		331794	0					
ANR	332168	Identifier	sscanf		331794	0					
ANR	332169	ArgumentList	ioBuf		331794	1					
ANR	332170	Argument	ioBuf		331794	0					
ANR	332171	Identifier	ioBuf		331794	0					
ANR	332172	Argument	"""%d,%d,%s\\n"""		331794	1					
ANR	332173	PrimaryExpression	"""%d,%d,%s\\n"""		331794	0					
ANR	332174	Argument	& val		331794	2					
ANR	332175	UnaryOperationExpression	& val		331794	0					
ANR	332176	UnaryOperator	&		331794	0					
ANR	332177	Identifier	val		331794	1					
ANR	332178	Argument	& edLen		331794	3					
ANR	332179	UnaryOperationExpression	& edLen		331794	0					
ANR	332180	UnaryOperator	&		331794	0					
ANR	332181	Identifier	edLen		331794	1					
ANR	332182	Argument	edBuf		331794	4					
ANR	332183	Identifier	edBuf		331794	0					
ANR	332184	PrimaryExpression	3		331794	1					
ANR	332185	PrimaryExpression	1		331794	1					
ANR	332186	PrimaryExpression	0		331794	2					
ANR	332187	IfStatement	if ( edLen != ( int ) strlen ( edBuf ) )		331794	1					
ANR	332188	Condition	edLen != ( int ) strlen ( edBuf )	126:6:3380:3407	331794	0	True				
ANR	332189	EqualityExpression	edLen != ( int ) strlen ( edBuf )		331794	0		!=			
ANR	332190	Identifier	edLen		331794	0					
ANR	332191	CastExpression	( int ) strlen ( edBuf )		331794	1					
ANR	332192	CastTarget	int		331794	0					
ANR	332193	CallExpression	strlen ( edBuf )		331794	1					
ANR	332194	Callee	strlen		331794	0					
ANR	332195	Identifier	strlen		331794	0					
ANR	332196	ArgumentList	edBuf		331794	1					
ANR	332197	Argument	edBuf		331794	0					
ANR	332198	Identifier	edBuf		331794	0					
ANR	332199	CompoundStatement		82:36:1681:1681	331794	1					
ANR	332200	IfStatement	if ( bAnticipateTruncation == 1 )		331794	0					
ANR	332201	Condition	bAnticipateTruncation == 1	127:8:3420:3445	331794	0	True				
ANR	332202	EqualityExpression	bAnticipateTruncation == 1		331794	0		==			
ANR	332203	Identifier	bAnticipateTruncation		331794	0					
ANR	332204	PrimaryExpression	1		331794	1					
ANR	332205	CompoundStatement		83:36:1719:1719	331794	1					
ANR	332206	IfStatement	if ( edLen < ( int ) strlen ( edBuf ) )		331794	0					
ANR	332207	Condition	edLen < ( int ) strlen ( edBuf )	128:9:3459:3485	331794	0	True				
ANR	332208	RelationalExpression	edLen < ( int ) strlen ( edBuf )		331794	0		<			
ANR	332209	Identifier	edLen		331794	0					
ANR	332210	CastExpression	( int ) strlen ( edBuf )		331794	1					
ANR	332211	CastTarget	int		331794	0					
ANR	332212	CallExpression	strlen ( edBuf )		331794	1					
ANR	332213	Callee	strlen		331794	0					
ANR	332214	Identifier	strlen		331794	0					
ANR	332215	ArgumentList	edBuf		331794	1					
ANR	332216	Argument	edBuf		331794	0					
ANR	332217	Identifier	edBuf		331794	0					
ANR	332218	CompoundStatement		84:38:1759:1759	331794	1					
ANR	332219	Statement	printf	129:6:3496:3501	331794	0	True				
ANR	332220	Statement	(	129:12:3502:3502	331794	1	True				
ANR	332221	Statement	"""extra data length specified %d, but actually is %ld in record %d"""	129:13:3503:3568	331794	2	True				
ANR	332222	Statement	""" (truncation was anticipated, but payload should have been smaller than data-length, not larger)\\n"""	130:10:3580:3679	331794	3	True				
ANR	332223	Statement	","	130:110:3680:3680	331794	4	True				
ANR	332224	Statement	edLen	131:10:3692:3696	331794	5	True				
ANR	332225	Statement	","	131:15:3697:3697	331794	6	True				
ANR	332226	Statement	(	131:17:3699:3699	331794	7	True				
ANR	332227	Statement	long	131:18:3700:3703	331794	8	True				
ANR	332228	Statement	)	131:22:3704:3704	331794	9	True				
ANR	332229	Statement	strlen	131:24:3706:3711	331794	10	True				
ANR	332230	Statement	(	131:30:3712:3712	331794	11	True				
ANR	332231	Statement	edBuf	131:31:3713:3717	331794	12	True				
ANR	332232	Statement	)	131:36:3718:3718	331794	13	True				
ANR	332233	Statement	","	131:37:3719:3719	331794	14	True				
ANR	332234	Statement	i	131:39:3721:3721	331794	15	True				
ANR	332235	Statement	)	131:40:3722:3722	331794	16	True				
ANR	332236	ExpressionStatement		131:41:3723:3723	331794	17	True				
ANR	332237	ExpressionStatement	exit ( 1 )	132:6:3731:3738	331794	18	True				
ANR	332238	CallExpression	exit ( 1 )		331794	0					
ANR	332239	Callee	exit		331794	0					
ANR	332240	Identifier	exit		331794	0					
ANR	332241	ArgumentList	1		331794	1					
ANR	332242	Argument	1		331794	0					
ANR	332243	PrimaryExpression	1		331794	0					
ANR	332244	ElseStatement	else		331794	0					
ANR	332245	CompoundStatement		90:11:2029:2029	331794	0					
ANR	332246	ExpressionStatement	"printf ( ""extra data length specified %d, but actually is %ld in record %d\\n"" , edLen , ( long ) strlen ( edBuf ) , i )"	135:5:3765:3882	331794	0	True				
ANR	332247	CallExpression	"printf ( ""extra data length specified %d, but actually is %ld in record %d\\n"" , edLen , ( long ) strlen ( edBuf ) , i )"		331794	0					
ANR	332248	Callee	printf		331794	0					
ANR	332249	Identifier	printf		331794	0					
ANR	332250	ArgumentList	"""extra data length specified %d, but actually is %ld in record %d\\n"""		331794	1					
ANR	332251	Argument	"""extra data length specified %d, but actually is %ld in record %d\\n"""		331794	0					
ANR	332252	PrimaryExpression	"""extra data length specified %d, but actually is %ld in record %d\\n"""		331794	0					
ANR	332253	Argument	edLen		331794	1					
ANR	332254	Identifier	edLen		331794	0					
ANR	332255	Argument	( long ) strlen ( edBuf )		331794	2					
ANR	332256	CastExpression	( long ) strlen ( edBuf )		331794	0					
ANR	332257	CastTarget	long		331794	0					
ANR	332258	CallExpression	strlen ( edBuf )		331794	1					
ANR	332259	Callee	strlen		331794	0					
ANR	332260	Identifier	strlen		331794	0					
ANR	332261	ArgumentList	edBuf		331794	1					
ANR	332262	Argument	edBuf		331794	0					
ANR	332263	Identifier	edBuf		331794	0					
ANR	332264	Argument	i		331794	3					
ANR	332265	Identifier	i		331794	0					
ANR	332266	ExpressionStatement	exit ( 1 )	137:5:3889:3896	331794	1	True				
ANR	332267	CallExpression	exit ( 1 )		331794	0					
ANR	332268	Callee	exit		331794	0					
ANR	332269	Identifier	exit		331794	0					
ANR	332270	ArgumentList	1		331794	1					
ANR	332271	Argument	1		331794	0					
ANR	332272	PrimaryExpression	1		331794	0					
ANR	332273	ElseStatement	else		331794	0					
ANR	332274	CompoundStatement		96:9:2189:2189	331794	0					
ANR	332275	IfStatement	"if ( fgets ( ioBuf , sizeof ( ioBuf ) , fp ) == NULL )"		331794	0					
ANR	332276	Condition	"fgets ( ioBuf , sizeof ( ioBuf ) , fp ) == NULL"	141:6:3926:3964	331794	0	True				
ANR	332277	EqualityExpression	"fgets ( ioBuf , sizeof ( ioBuf ) , fp ) == NULL"		331794	0		==			
ANR	332278	CallExpression	"fgets ( ioBuf , sizeof ( ioBuf ) , fp )"		331794	0					
ANR	332279	Callee	fgets		331794	0					
ANR	332280	Identifier	fgets		331794	0					
ANR	332281	ArgumentList	ioBuf		331794	1					
ANR	332282	Argument	ioBuf		331794	0					
ANR	332283	Identifier	ioBuf		331794	0					
ANR	332284	Argument	sizeof ( ioBuf )		331794	1					
ANR	332285	SizeofExpression	sizeof ( ioBuf )		331794	0					
ANR	332286	Sizeof	sizeof		331794	0					
ANR	332287	SizeofOperand	ioBuf		331794	1					
ANR	332288	Argument	fp		331794	2					
ANR	332289	Identifier	fp		331794	0					
ANR	332290	Identifier	NULL		331794	1					
ANR	332291	CompoundStatement		97:47:2238:2238	331794	1					
ANR	332292	ExpressionStatement	scanfOK = 0	142:4:3973:3984	331794	0	True				
ANR	332293	AssignmentExpression	scanfOK = 0		331794	0		=			
ANR	332294	Identifier	scanfOK		331794	0					
ANR	332295	PrimaryExpression	0		331794	1					
ANR	332296	ElseStatement	else		331794	0					
ANR	332297	CompoundStatement		99:10:2267:2267	331794	0					
ANR	332298	ExpressionStatement	"scanfOK = sscanf ( ioBuf , ""%d\\n"" , & val ) == 1 ? 1 : 0"	144:4:4002:4052	331794	0	True				
ANR	332299	AssignmentExpression	"scanfOK = sscanf ( ioBuf , ""%d\\n"" , & val ) == 1 ? 1 : 0"		331794	0		=			
ANR	332300	Identifier	scanfOK		331794	0					
ANR	332301	ConditionalExpression	"sscanf ( ioBuf , ""%d\\n"" , & val ) == 1 ? 1 : 0"		331794	1					
ANR	332302	Condition	"sscanf ( ioBuf , ""%d\\n"" , & val ) == 1"		331794	0					
ANR	332303	EqualityExpression	"sscanf ( ioBuf , ""%d\\n"" , & val ) == 1"		331794	0		==			
ANR	332304	CallExpression	"sscanf ( ioBuf , ""%d\\n"" , & val )"		331794	0					
ANR	332305	Callee	sscanf		331794	0					
ANR	332306	Identifier	sscanf		331794	0					
ANR	332307	ArgumentList	ioBuf		331794	1					
ANR	332308	Argument	ioBuf		331794	0					
ANR	332309	Identifier	ioBuf		331794	0					
ANR	332310	Argument	"""%d\\n"""		331794	1					
ANR	332311	PrimaryExpression	"""%d\\n"""		331794	0					
ANR	332312	Argument	& val		331794	2					
ANR	332313	UnaryOperationExpression	& val		331794	0					
ANR	332314	UnaryOperator	&		331794	0					
ANR	332315	Identifier	val		331794	1					
ANR	332316	PrimaryExpression	1		331794	1					
ANR	332317	PrimaryExpression	1		331794	1					
ANR	332318	PrimaryExpression	0		331794	2					
ANR	332319	IfStatement	if ( ! scanfOK )		331794	1					
ANR	332320	Condition	! scanfOK	147:5:4068:4075	331794	0	True				
ANR	332321	UnaryOperationExpression	! scanfOK		331794	0					
ANR	332322	UnaryOperator	!		331794	0					
ANR	332323	Identifier	scanfOK		331794	1					
ANR	332324	CompoundStatement		103:15:2349:2349	331794	1					
ANR	332325	ExpressionStatement	"printf ( ""scanf error in index i=%d\\n"" , i )"	148:3:4083:4123	331794	0	True				
ANR	332326	CallExpression	"printf ( ""scanf error in index i=%d\\n"" , i )"		331794	0					
ANR	332327	Callee	printf		331794	0					
ANR	332328	Identifier	printf		331794	0					
ANR	332329	ArgumentList	"""scanf error in index i=%d\\n"""		331794	1					
ANR	332330	Argument	"""scanf error in index i=%d\\n"""		331794	0					
ANR	332331	PrimaryExpression	"""scanf error in index i=%d\\n"""		331794	0					
ANR	332332	Argument	i		331794	1					
ANR	332333	Identifier	i		331794	0					
ANR	332334	ExpressionStatement	exit ( 1 )	149:3:4128:4135	331794	1	True				
ANR	332335	CallExpression	exit ( 1 )		331794	0					
ANR	332336	Callee	exit		331794	0					
ANR	332337	Identifier	exit		331794	0					
ANR	332338	ArgumentList	1		331794	1					
ANR	332339	Argument	1		331794	0					
ANR	332340	PrimaryExpression	1		331794	0					
ANR	332341	WhileStatement	while ( val > i && lostok > 0 )		331794	2					
ANR	332342	Condition	val > i && lostok > 0	151:8:4149:4169	331794	0	True				
ANR	332343	AndExpression	val > i && lostok > 0		331794	0		&&			
ANR	332344	RelationalExpression	val > i		331794	0		>			
ANR	332345	Identifier	val		331794	0					
ANR	332346	Identifier	i		331794	1					
ANR	332347	RelationalExpression	lostok > 0		331794	1		>			
ANR	332348	Identifier	lostok		331794	0					
ANR	332349	PrimaryExpression	0		331794	1					
ANR	332350	CompoundStatement		107:31:2443:2443	331794	1					
ANR	332351	ExpressionStatement	-- lostok	152:3:4177:4185	331794	0	True				
ANR	332352	UnaryExpression	-- lostok		331794	0					
ANR	332353	IncDec	--		331794	0					
ANR	332354	Identifier	lostok		331794	1					
ANR	332355	ExpressionStatement	"printf ( ""message %d missing (ok due to -m [now %d])\\n"" , i , lostok )"	153:3:4190:4255	331794	1	True				
ANR	332356	CallExpression	"printf ( ""message %d missing (ok due to -m [now %d])\\n"" , i , lostok )"		331794	0					
ANR	332357	Callee	printf		331794	0					
ANR	332358	Identifier	printf		331794	0					
ANR	332359	ArgumentList	"""message %d missing (ok due to -m [now %d])\\n"""		331794	1					
ANR	332360	Argument	"""message %d missing (ok due to -m [now %d])\\n"""		331794	0					
ANR	332361	PrimaryExpression	"""message %d missing (ok due to -m [now %d])\\n"""		331794	0					
ANR	332362	Argument	i		331794	1					
ANR	332363	Identifier	i		331794	0					
ANR	332364	Argument	lostok		331794	2					
ANR	332365	Identifier	lostok		331794	0					
ANR	332366	ExpressionStatement	++ i	154:3:4260:4263	331794	2	True				
ANR	332367	UnaryExpression	++ i		331794	0					
ANR	332368	IncDec	++		331794	0					
ANR	332369	Identifier	i		331794	1					
ANR	332370	IfStatement	if ( val != i )		331794	3					
ANR	332371	Condition	val != i	156:5:4274:4281	331794	0	True				
ANR	332372	EqualityExpression	val != i		331794	0		!=			
ANR	332373	Identifier	val		331794	0					
ANR	332374	Identifier	i		331794	1					
ANR	332375	CompoundStatement		112:15:2555:2555	331794	1					
ANR	332376	IfStatement	if ( val == i - 1 && dupsPermitted )		331794	0					
ANR	332377	Condition	val == i - 1 && dupsPermitted	157:6:4292:4320	331794	0	True				
ANR	332378	AndExpression	val == i - 1 && dupsPermitted		331794	0		&&			
ANR	332379	EqualityExpression	val == i - 1		331794	0		==			
ANR	332380	Identifier	val		331794	0					
ANR	332381	AdditiveExpression	i - 1		331794	1		-			
ANR	332382	Identifier	i		331794	0					
ANR	332383	PrimaryExpression	1		331794	1					
ANR	332384	Identifier	dupsPermitted		331794	1					
ANR	332385	CompoundStatement		113:37:2594:2594	331794	1					
ANR	332386	ExpressionStatement	-- i	158:4:4329:4332	331794	0	True				
ANR	332387	UnaryExpression	-- i		331794	0					
ANR	332388	IncDec	--		331794	0					
ANR	332389	Identifier	i		331794	1					
ANR	332390	ExpressionStatement	++ nDups	159:4:4338:4345	331794	1	True				
ANR	332391	UnaryExpression	++ nDups		331794	0					
ANR	332392	IncDec	++		331794	0					
ANR	332393	Identifier	nDups		331794	1					
ANR	332394	ElseStatement	else		331794	0					
ANR	332395	CompoundStatement		116:10:2628:2628	331794	0					
ANR	332396	ExpressionStatement	"printf ( ""read value %d, but expected value %d\\n"" , val , i )"	161:4:4363:4419	331794	0	True				
ANR	332397	CallExpression	"printf ( ""read value %d, but expected value %d\\n"" , val , i )"		331794	0					
ANR	332398	Callee	printf		331794	0					
ANR	332399	Identifier	printf		331794	0					
ANR	332400	ArgumentList	"""read value %d, but expected value %d\\n"""		331794	1					
ANR	332401	Argument	"""read value %d, but expected value %d\\n"""		331794	0					
ANR	332402	PrimaryExpression	"""read value %d, but expected value %d\\n"""		331794	0					
ANR	332403	Argument	val		331794	1					
ANR	332404	Identifier	val		331794	0					
ANR	332405	Argument	i		331794	2					
ANR	332406	Identifier	i		331794	0					
ANR	332407	ExpressionStatement	exit ( 1 )	162:4:4425:4432	331794	1	True				
ANR	332408	CallExpression	exit ( 1 )		331794	0					
ANR	332409	Callee	exit		331794	0					
ANR	332410	Identifier	exit		331794	0					
ANR	332411	ArgumentList	1		331794	1					
ANR	332412	Argument	1		331794	0					
ANR	332413	PrimaryExpression	1		331794	0					
ANR	332414	IfStatement	if ( i - 1 != end )		331794	27					
ANR	332415	Condition	i - 1 != end	167:4:4451:4462	331794	0	True				
ANR	332416	EqualityExpression	i - 1 != end		331794	0		!=			
ANR	332417	AdditiveExpression	i - 1		331794	0		-			
ANR	332418	Identifier	i		331794	0					
ANR	332419	PrimaryExpression	1		331794	1					
ANR	332420	Identifier	end		331794	1					
ANR	332421	CompoundStatement		123:18:2736:2736	331794	1					
ANR	332422	ExpressionStatement	"printf ( ""only %d records in file, expected %d\\n"" , i - 1 , end )"	168:2:4469:4529	331794	0	True				
ANR	332423	CallExpression	"printf ( ""only %d records in file, expected %d\\n"" , i - 1 , end )"		331794	0					
ANR	332424	Callee	printf		331794	0					
ANR	332425	Identifier	printf		331794	0					
ANR	332426	ArgumentList	"""only %d records in file, expected %d\\n"""		331794	1					
ANR	332427	Argument	"""only %d records in file, expected %d\\n"""		331794	0					
ANR	332428	PrimaryExpression	"""only %d records in file, expected %d\\n"""		331794	0					
ANR	332429	Argument	i - 1		331794	1					
ANR	332430	AdditiveExpression	i - 1		331794	0		-			
ANR	332431	Identifier	i		331794	0					
ANR	332432	PrimaryExpression	1		331794	1					
ANR	332433	Argument	end		331794	2					
ANR	332434	Identifier	end		331794	0					
ANR	332435	ExpressionStatement	exit ( 1 )	169:2:4533:4540	331794	1	True				
ANR	332436	CallExpression	exit ( 1 )		331794	0					
ANR	332437	Callee	exit		331794	0					
ANR	332438	Identifier	exit		331794	0					
ANR	332439	ArgumentList	1		331794	1					
ANR	332440	Argument	1		331794	0					
ANR	332441	PrimaryExpression	1		331794	0					
ANR	332442	IdentifierDeclStatement	int c = getc ( fp ) ;	172:1:4547:4563	331794	28	True				
ANR	332443	IdentifierDecl	c = getc ( fp )		331794	0					
ANR	332444	IdentifierDeclType	int		331794	0					
ANR	332445	Identifier	c		331794	1					
ANR	332446	AssignmentExpression	c = getc ( fp )		331794	2		=			
ANR	332447	Identifier	c		331794	0					
ANR	332448	CallExpression	getc ( fp )		331794	1					
ANR	332449	Callee	getc		331794	0					
ANR	332450	Identifier	getc		331794	0					
ANR	332451	ArgumentList	fp		331794	1					
ANR	332452	Argument	fp		331794	0					
ANR	332453	Identifier	fp		331794	0					
ANR	332454	IfStatement	if ( c == EOF )		331794	29					
ANR	332455	Condition	c == EOF	173:4:4569:4576	331794	0	True				
ANR	332456	EqualityExpression	c == EOF		331794	0		==			
ANR	332457	Identifier	c		331794	0					
ANR	332458	Identifier	EOF		331794	1					
ANR	332459	CompoundStatement		129:14:2850:2850	331794	1					
ANR	332460	ExpressionStatement	reachedEOF = 1	174:2:4583:4597	331794	0	True				
ANR	332461	AssignmentExpression	reachedEOF = 1		331794	0		=			
ANR	332462	Identifier	reachedEOF		331794	0					
ANR	332463	PrimaryExpression	1		331794	1					
ANR	332464	ElseStatement	else		331794	0					
ANR	332465	CompoundStatement		131:8:2878:2878	331794	0					
ANR	332466	ExpressionStatement	"ungetc ( c , fp )"	176:2:4611:4624	331794	0	True				
ANR	332467	CallExpression	"ungetc ( c , fp )"		331794	0					
ANR	332468	Callee	ungetc		331794	0					
ANR	332469	Identifier	ungetc		331794	0					
ANR	332470	ArgumentList	c		331794	1					
ANR	332471	Argument	c		331794	0					
ANR	332472	Identifier	c		331794	0					
ANR	332473	Argument	fp		331794	1					
ANR	332474	Identifier	fp		331794	0					
ANR	332475	IfStatement	if ( dupsPermitted )		331794	1					
ANR	332476	Condition	dupsPermitted	180:5:4746:4758	331794	0	True				
ANR	332477	Identifier	dupsPermitted		331794	0					
ANR	332478	CompoundStatement		136:20:3032:3032	331794	1					
ANR	332479	ExpressionStatement	i = end	181:3:4766:4773	331794	0	True				
ANR	332480	AssignmentExpression	i = end		331794	0		=			
ANR	332481	Identifier	i		331794	0					
ANR	332482	Identifier	end		331794	1					
ANR	332483	WhileStatement	while ( ! feof ( fp ) )		331794	1					
ANR	332484	Condition	! feof ( fp )	182:9:4784:4792	331794	0	True				
ANR	332485	UnaryOperationExpression	! feof ( fp )		331794	0					
ANR	332486	UnaryOperator	!		331794	0					
ANR	332487	CallExpression	feof ( fp )		331794	1					
ANR	332488	Callee	feof		331794	0					
ANR	332489	Identifier	feof		331794	0					
ANR	332490	ArgumentList	fp		331794	1					
ANR	332491	Argument	fp		331794	0					
ANR	332492	Identifier	fp		331794	0					
ANR	332493	CompoundStatement		138:20:3066:3066	331794	1					
ANR	332494	IfStatement	if ( bHaveExtraData )		331794	0					
ANR	332495	Condition	bHaveExtraData	183:7:4804:4817	331794	0	True				
ANR	332496	Identifier	bHaveExtraData		331794	0					
ANR	332497	CompoundStatement		139:23:3091:3091	331794	1					
ANR	332498	IfStatement	"if ( fgets ( ioBuf , sizeof ( ioBuf ) , fp ) == NULL )"		331794	0					
ANR	332499	Condition	"fgets ( ioBuf , sizeof ( ioBuf ) , fp ) == NULL"	184:8:4830:4868	331794	0	True				
ANR	332500	EqualityExpression	"fgets ( ioBuf , sizeof ( ioBuf ) , fp ) == NULL"		331794	0		==			
ANR	332501	CallExpression	"fgets ( ioBuf , sizeof ( ioBuf ) , fp )"		331794	0					
ANR	332502	Callee	fgets		331794	0					
ANR	332503	Identifier	fgets		331794	0					
ANR	332504	ArgumentList	ioBuf		331794	1					
ANR	332505	Argument	ioBuf		331794	0					
ANR	332506	Identifier	ioBuf		331794	0					
ANR	332507	Argument	sizeof ( ioBuf )		331794	1					
ANR	332508	SizeofExpression	sizeof ( ioBuf )		331794	0					
ANR	332509	Sizeof	sizeof		331794	0					
ANR	332510	SizeofOperand	ioBuf		331794	1					
ANR	332511	Argument	fp		331794	2					
ANR	332512	Identifier	fp		331794	0					
ANR	332513	Identifier	NULL		331794	1					
ANR	332514	CompoundStatement		140:49:3142:3142	331794	1					
ANR	332515	ExpressionStatement	scanfOK = 0	185:6:4879:4890	331794	0	True				
ANR	332516	AssignmentExpression	scanfOK = 0		331794	0		=			
ANR	332517	Identifier	scanfOK		331794	0					
ANR	332518	PrimaryExpression	0		331794	1					
ANR	332519	ElseStatement	else		331794	0					
ANR	332520	CompoundStatement		142:12:3175:3175	331794	0					
ANR	332521	ExpressionStatement	"scanfOK = sscanf ( ioBuf , ""%d,%d,%s\\n"" , & val , & edLen , edBuf ) == 3 ? 1 : 0"	187:6:4912:4983	331794	0	True				
ANR	332522	AssignmentExpression	"scanfOK = sscanf ( ioBuf , ""%d,%d,%s\\n"" , & val , & edLen , edBuf ) == 3 ? 1 : 0"		331794	0		=			
ANR	332523	Identifier	scanfOK		331794	0					
ANR	332524	ConditionalExpression	"sscanf ( ioBuf , ""%d,%d,%s\\n"" , & val , & edLen , edBuf ) == 3 ? 1 : 0"		331794	1					
ANR	332525	Condition	"sscanf ( ioBuf , ""%d,%d,%s\\n"" , & val , & edLen , edBuf ) == 3"		331794	0					
ANR	332526	EqualityExpression	"sscanf ( ioBuf , ""%d,%d,%s\\n"" , & val , & edLen , edBuf ) == 3"		331794	0		==			
ANR	332527	CallExpression	"sscanf ( ioBuf , ""%d,%d,%s\\n"" , & val , & edLen , edBuf )"		331794	0					
ANR	332528	Callee	sscanf		331794	0					
ANR	332529	Identifier	sscanf		331794	0					
ANR	332530	ArgumentList	ioBuf		331794	1					
ANR	332531	Argument	ioBuf		331794	0					
ANR	332532	Identifier	ioBuf		331794	0					
ANR	332533	Argument	"""%d,%d,%s\\n"""		331794	1					
ANR	332534	PrimaryExpression	"""%d,%d,%s\\n"""		331794	0					
ANR	332535	Argument	& val		331794	2					
ANR	332536	UnaryOperationExpression	& val		331794	0					
ANR	332537	UnaryOperator	&		331794	0					
ANR	332538	Identifier	val		331794	1					
ANR	332539	Argument	& edLen		331794	3					
ANR	332540	UnaryOperationExpression	& edLen		331794	0					
ANR	332541	UnaryOperator	&		331794	0					
ANR	332542	Identifier	edLen		331794	1					
ANR	332543	Argument	edBuf		331794	4					
ANR	332544	Identifier	edBuf		331794	0					
ANR	332545	PrimaryExpression	3		331794	1					
ANR	332546	PrimaryExpression	1		331794	1					
ANR	332547	PrimaryExpression	0		331794	2					
ANR	332548	IfStatement	if ( edLen != ( int ) strlen ( edBuf ) )		331794	1					
ANR	332549	Condition	edLen != ( int ) strlen ( edBuf )	189:8:5000:5027	331794	0	True				
ANR	332550	EqualityExpression	edLen != ( int ) strlen ( edBuf )		331794	0		!=			
ANR	332551	Identifier	edLen		331794	0					
ANR	332552	CastExpression	( int ) strlen ( edBuf )		331794	1					
ANR	332553	CastTarget	int		331794	0					
ANR	332554	CallExpression	strlen ( edBuf )		331794	1					
ANR	332555	Callee	strlen		331794	0					
ANR	332556	Identifier	strlen		331794	0					
ANR	332557	ArgumentList	edBuf		331794	1					
ANR	332558	Argument	edBuf		331794	0					
ANR	332559	Identifier	edBuf		331794	0					
ANR	332560	CompoundStatement		145:38:3301:3301	331794	1					
ANR	332561	IfStatement	if ( bAnticipateTruncation == 1 )		331794	0					
ANR	332562	Condition	bAnticipateTruncation == 1	190:10:5042:5067	331794	0	True				
ANR	332563	EqualityExpression	bAnticipateTruncation == 1		331794	0		==			
ANR	332564	Identifier	bAnticipateTruncation		331794	0					
ANR	332565	PrimaryExpression	1		331794	1					
ANR	332566	CompoundStatement		146:38:3341:3341	331794	1					
ANR	332567	IfStatement	if ( edLen < ( int ) strlen ( edBuf ) )		331794	0					
ANR	332568	Condition	edLen < ( int ) strlen ( edBuf )	191:11:5083:5109	331794	0	True				
ANR	332569	RelationalExpression	edLen < ( int ) strlen ( edBuf )		331794	0		<			
ANR	332570	Identifier	edLen		331794	0					
ANR	332571	CastExpression	( int ) strlen ( edBuf )		331794	1					
ANR	332572	CastTarget	int		331794	0					
ANR	332573	CallExpression	strlen ( edBuf )		331794	1					
ANR	332574	Callee	strlen		331794	0					
ANR	332575	Identifier	strlen		331794	0					
ANR	332576	ArgumentList	edBuf		331794	1					
ANR	332577	Argument	edBuf		331794	0					
ANR	332578	Identifier	edBuf		331794	0					
ANR	332579	CompoundStatement		147:40:3383:3383	331794	1					
ANR	332580	Statement	printf	192:8:5122:5127	331794	0	True				
ANR	332581	Statement	(	192:14:5128:5128	331794	1	True				
ANR	332582	Statement	"""extra data length specified %d, but actually is %ld in record %d"""	192:15:5129:5194	331794	2	True				
ANR	332583	Statement	""" (truncation was anticipated, but payload should have been smaller than data-length, not larger)\\n"""	193:12:5208:5307	331794	3	True				
ANR	332584	Statement	","	193:112:5308:5308	331794	4	True				
ANR	332585	Statement	edLen	194:12:5322:5326	331794	5	True				
ANR	332586	Statement	","	194:17:5327:5327	331794	6	True				
ANR	332587	Statement	(	194:19:5329:5329	331794	7	True				
ANR	332588	Statement	long	194:20:5330:5333	331794	8	True				
ANR	332589	Statement	)	194:24:5334:5334	331794	9	True				
ANR	332590	Statement	strlen	194:26:5336:5341	331794	10	True				
ANR	332591	Statement	(	194:32:5342:5342	331794	11	True				
ANR	332592	Statement	edBuf	194:33:5343:5347	331794	12	True				
ANR	332593	Statement	)	194:38:5348:5348	331794	13	True				
ANR	332594	Statement	","	194:39:5349:5349	331794	14	True				
ANR	332595	Statement	i	194:41:5351:5351	331794	15	True				
ANR	332596	Statement	)	194:42:5352:5352	331794	16	True				
ANR	332597	ExpressionStatement		194:43:5353:5353	331794	17	True				
ANR	332598	ExpressionStatement	exit ( 1 )	195:8:5363:5370	331794	18	True				
ANR	332599	CallExpression	exit ( 1 )		331794	0					
ANR	332600	Callee	exit		331794	0					
ANR	332601	Identifier	exit		331794	0					
ANR	332602	ArgumentList	1		331794	1					
ANR	332603	Argument	1		331794	0					
ANR	332604	PrimaryExpression	1		331794	0					
ANR	332605	ElseStatement	else		331794	0					
ANR	332606	CompoundStatement		153:13:3665:3665	331794	0					
ANR	332607	ExpressionStatement	"printf ( ""extra data length specified %d, but actually is %ld in record %d\\n"" , edLen , ( long ) strlen ( edBuf ) , i )"	198:7:5403:5522	331794	0	True				
ANR	332608	CallExpression	"printf ( ""extra data length specified %d, but actually is %ld in record %d\\n"" , edLen , ( long ) strlen ( edBuf ) , i )"		331794	0					
ANR	332609	Callee	printf		331794	0					
ANR	332610	Identifier	printf		331794	0					
ANR	332611	ArgumentList	"""extra data length specified %d, but actually is %ld in record %d\\n"""		331794	1					
ANR	332612	Argument	"""extra data length specified %d, but actually is %ld in record %d\\n"""		331794	0					
ANR	332613	PrimaryExpression	"""extra data length specified %d, but actually is %ld in record %d\\n"""		331794	0					
ANR	332614	Argument	edLen		331794	1					
ANR	332615	Identifier	edLen		331794	0					
ANR	332616	Argument	( long ) strlen ( edBuf )		331794	2					
ANR	332617	CastExpression	( long ) strlen ( edBuf )		331794	0					
ANR	332618	CastTarget	long		331794	0					
ANR	332619	CallExpression	strlen ( edBuf )		331794	1					
ANR	332620	Callee	strlen		331794	0					
ANR	332621	Identifier	strlen		331794	0					
ANR	332622	ArgumentList	edBuf		331794	1					
ANR	332623	Argument	edBuf		331794	0					
ANR	332624	Identifier	edBuf		331794	0					
ANR	332625	Argument	i		331794	3					
ANR	332626	Identifier	i		331794	0					
ANR	332627	ExpressionStatement	exit ( 1 )	200:7:5531:5538	331794	1	True				
ANR	332628	CallExpression	exit ( 1 )		331794	0					
ANR	332629	Callee	exit		331794	0					
ANR	332630	Identifier	exit		331794	0					
ANR	332631	ArgumentList	1		331794	1					
ANR	332632	Argument	1		331794	0					
ANR	332633	PrimaryExpression	1		331794	0					
ANR	332634	ElseStatement	else		331794	0					
ANR	332635	CompoundStatement		159:11:3837:3837	331794	0					
ANR	332636	IfStatement	"if ( fgets ( ioBuf , sizeof ( ioBuf ) , fp ) == NULL )"		331794	0					
ANR	332637	Condition	"fgets ( ioBuf , sizeof ( ioBuf ) , fp ) == NULL"	204:8:5576:5614	331794	0	True				
ANR	332638	EqualityExpression	"fgets ( ioBuf , sizeof ( ioBuf ) , fp ) == NULL"		331794	0		==			
ANR	332639	CallExpression	"fgets ( ioBuf , sizeof ( ioBuf ) , fp )"		331794	0					
ANR	332640	Callee	fgets		331794	0					
ANR	332641	Identifier	fgets		331794	0					
ANR	332642	ArgumentList	ioBuf		331794	1					
ANR	332643	Argument	ioBuf		331794	0					
ANR	332644	Identifier	ioBuf		331794	0					
ANR	332645	Argument	sizeof ( ioBuf )		331794	1					
ANR	332646	SizeofExpression	sizeof ( ioBuf )		331794	0					
ANR	332647	Sizeof	sizeof		331794	0					
ANR	332648	SizeofOperand	ioBuf		331794	1					
ANR	332649	Argument	fp		331794	2					
ANR	332650	Identifier	fp		331794	0					
ANR	332651	Identifier	NULL		331794	1					
ANR	332652	CompoundStatement		160:49:3888:3888	331794	1					
ANR	332653	ExpressionStatement	scanfOK = 0	205:6:5625:5636	331794	0	True				
ANR	332654	AssignmentExpression	scanfOK = 0		331794	0		=			
ANR	332655	Identifier	scanfOK		331794	0					
ANR	332656	PrimaryExpression	0		331794	1					
ANR	332657	ElseStatement	else		331794	0					
ANR	332658	CompoundStatement		162:12:3921:3921	331794	0					
ANR	332659	ExpressionStatement	"scanfOK = sscanf ( ioBuf , ""%d\\n"" , & val ) == 1 ? 1 : 0"	207:6:5658:5708	331794	0	True				
ANR	332660	AssignmentExpression	"scanfOK = sscanf ( ioBuf , ""%d\\n"" , & val ) == 1 ? 1 : 0"		331794	0		=			
ANR	332661	Identifier	scanfOK		331794	0					
ANR	332662	ConditionalExpression	"sscanf ( ioBuf , ""%d\\n"" , & val ) == 1 ? 1 : 0"		331794	1					
ANR	332663	Condition	"sscanf ( ioBuf , ""%d\\n"" , & val ) == 1"		331794	0					
ANR	332664	EqualityExpression	"sscanf ( ioBuf , ""%d\\n"" , & val ) == 1"		331794	0		==			
ANR	332665	CallExpression	"sscanf ( ioBuf , ""%d\\n"" , & val )"		331794	0					
ANR	332666	Callee	sscanf		331794	0					
ANR	332667	Identifier	sscanf		331794	0					
ANR	332668	ArgumentList	ioBuf		331794	1					
ANR	332669	Argument	ioBuf		331794	0					
ANR	332670	Identifier	ioBuf		331794	0					
ANR	332671	Argument	"""%d\\n"""		331794	1					
ANR	332672	PrimaryExpression	"""%d\\n"""		331794	0					
ANR	332673	Argument	& val		331794	2					
ANR	332674	UnaryOperationExpression	& val		331794	0					
ANR	332675	UnaryOperator	&		331794	0					
ANR	332676	Identifier	val		331794	1					
ANR	332677	PrimaryExpression	1		331794	1					
ANR	332678	PrimaryExpression	1		331794	1					
ANR	332679	PrimaryExpression	0		331794	2					
ANR	332680	IfStatement	if ( val != i )		331794	1					
ANR	332681	Condition	val != i	211:7:5731:5738	331794	0	True				
ANR	332682	EqualityExpression	val != i		331794	0		!=			
ANR	332683	Identifier	val		331794	0					
ANR	332684	Identifier	i		331794	1					
ANR	332685	CompoundStatement		167:17:4012:4012	331794	1					
ANR	332686	ExpressionStatement	reachedEOF = 0	212:5:5748:5762	331794	0	True				
ANR	332687	AssignmentExpression	reachedEOF = 0		331794	0		=			
ANR	332688	Identifier	reachedEOF		331794	0					
ANR	332689	PrimaryExpression	0		331794	1					
ANR	332690	GotoStatement	goto breakIF ;	213:5:5769:5781	331794	1	True				
ANR	332691	Identifier	breakIF		331794	0					
ANR	332692	ExpressionStatement	reachedEOF = feof ( fp ) ? 1 : 0	216:3:5797:5826	331794	2	True				
ANR	332693	AssignmentExpression	reachedEOF = feof ( fp ) ? 1 : 0		331794	0		=			
ANR	332694	Identifier	reachedEOF		331794	0					
ANR	332695	ConditionalExpression	feof ( fp ) ? 1 : 0		331794	1					
ANR	332696	Condition	feof ( fp )		331794	0					
ANR	332697	CallExpression	feof ( fp )		331794	0					
ANR	332698	Callee	feof		331794	0					
ANR	332699	Identifier	feof		331794	0					
ANR	332700	ArgumentList	fp		331794	1					
ANR	332701	Argument	fp		331794	0					
ANR	332702	Identifier	fp		331794	0					
ANR	332703	PrimaryExpression	1		331794	1					
ANR	332704	PrimaryExpression	0		331794	2					
ANR	332705	ElseStatement	else		331794	0					
ANR	332706	CompoundStatement		173:9:4108:4108	331794	0					
ANR	332707	ExpressionStatement	reachedEOF = 0	218:3:5842:5856	331794	0	True				
ANR	332708	AssignmentExpression	reachedEOF = 0		331794	0		=			
ANR	332709	Identifier	reachedEOF		331794	0					
ANR	332710	PrimaryExpression	0		331794	1					
ANR	332711	Label	breakIF :	222:0:5866:5873	331794	30	True				
ANR	332712	Identifier	breakIF		331794	0					
ANR	332713	IfStatement	if ( nDups != 0 )		331794	31					
ANR	332714	Condition	nDups != 0	223:4:5879:5888	331794	0	True				
ANR	332715	EqualityExpression	nDups != 0		331794	0		!=			
ANR	332716	Identifier	nDups		331794	0					
ANR	332717	PrimaryExpression	0		331794	1					
ANR	332718	ExpressionStatement	"printf ( ""info: had %d duplicates (this is no error)\\n"" , nDups )"	224:2:5893:5954	331794	1	True				
ANR	332719	CallExpression	"printf ( ""info: had %d duplicates (this is no error)\\n"" , nDups )"		331794	0					
ANR	332720	Callee	printf		331794	0					
ANR	332721	Identifier	printf		331794	0					
ANR	332722	ArgumentList	"""info: had %d duplicates (this is no error)\\n"""		331794	1					
ANR	332723	Argument	"""info: had %d duplicates (this is no error)\\n"""		331794	0					
ANR	332724	PrimaryExpression	"""info: had %d duplicates (this is no error)\\n"""		331794	0					
ANR	332725	Argument	nDups		331794	1					
ANR	332726	Identifier	nDups		331794	0					
ANR	332727	IfStatement	if ( ! reachedEOF )		331794	32					
ANR	332728	Condition	! reachedEOF	226:4:5961:5971	331794	0	True				
ANR	332729	UnaryOperationExpression	! reachedEOF		331794	0					
ANR	332730	UnaryOperator	!		331794	0					
ANR	332731	Identifier	reachedEOF		331794	1					
ANR	332732	CompoundStatement		182:17:4245:4245	331794	1					
ANR	332733	ExpressionStatement	"printf ( ""end of processing, but NOT end of file! First line of extra data is:\\n"" )"	227:2:5978:6058	331794	0	True				
ANR	332734	CallExpression	"printf ( ""end of processing, but NOT end of file! First line of extra data is:\\n"" )"		331794	0					
ANR	332735	Callee	printf		331794	0					
ANR	332736	Identifier	printf		331794	0					
ANR	332737	ArgumentList	"""end of processing, but NOT end of file! First line of extra data is:\\n"""		331794	1					
ANR	332738	Argument	"""end of processing, but NOT end of file! First line of extra data is:\\n"""		331794	0					
ANR	332739	PrimaryExpression	"""end of processing, but NOT end of file! First line of extra data is:\\n"""		331794	0					
ANR	332740	ForStatement	for ( c = fgetc ( fp ) ; c != '\\n' && c != EOF ; c = fgetc ( fp ) )		331794	1					
ANR	332741	ForInit	c = fgetc ( fp ) ;	228:6:6066:6080	331794	0	True				
ANR	332742	AssignmentExpression	c = fgetc ( fp )		331794	0		=			
ANR	332743	Identifier	c		331794	0					
ANR	332744	CallExpression	fgetc ( fp )		331794	1					
ANR	332745	Callee	fgetc		331794	0					
ANR	332746	Identifier	fgetc		331794	0					
ANR	332747	ArgumentList	fp		331794	1					
ANR	332748	Argument	fp		331794	0					
ANR	332749	Identifier	fp		331794	0					
ANR	332750	Condition	c != '\\n' && c != EOF	228:22:6082:6102	331794	1	True				
ANR	332751	AndExpression	c != '\\n' && c != EOF		331794	0		&&			
ANR	332752	EqualityExpression	c != '\\n'		331794	0		!=			
ANR	332753	Identifier	c		331794	0					
ANR	332754	PrimaryExpression	'\\n'		331794	1					
ANR	332755	EqualityExpression	c != EOF		331794	1		!=			
ANR	332756	Identifier	c		331794	0					
ANR	332757	Identifier	EOF		331794	1					
ANR	332758	AssignmentExpression	c = fgetc ( fp )	228:46:6106:6118	331794	2	True	=			
ANR	332759	Identifier	c		331794	0					
ANR	332760	CallExpression	fgetc ( fp )		331794	1					
ANR	332761	Callee	fgetc		331794	0					
ANR	332762	Identifier	fgetc		331794	0					
ANR	332763	ArgumentList	fp		331794	1					
ANR	332764	Argument	fp		331794	0					
ANR	332765	Identifier	fp		331794	0					
ANR	332766	ExpressionStatement	putchar ( c )	229:3:6124:6134	331794	3	True				
ANR	332767	CallExpression	putchar ( c )		331794	0					
ANR	332768	Callee	putchar		331794	0					
ANR	332769	Identifier	putchar		331794	0					
ANR	332770	ArgumentList	c		331794	1					
ANR	332771	Argument	c		331794	0					
ANR	332772	Identifier	c		331794	0					
ANR	332773	ExpressionStatement	putchar ( '\\n' )	230:2:6138:6151	331794	2	True				
ANR	332774	CallExpression	putchar ( '\\n' )		331794	0					
ANR	332775	Callee	putchar		331794	0					
ANR	332776	Identifier	putchar		331794	0					
ANR	332777	ArgumentList	'\\n'		331794	1					
ANR	332778	Argument	'\\n'		331794	0					
ANR	332779	PrimaryExpression	'\\n'		331794	0					
ANR	332780	ExpressionStatement	exit ( 1 )	231:2:6155:6162	331794	3	True				
ANR	332781	CallExpression	exit ( 1 )		331794	0					
ANR	332782	Callee	exit		331794	0					
ANR	332783	Identifier	exit		331794	0					
ANR	332784	ArgumentList	1		331794	1					
ANR	332785	Argument	1		331794	0					
ANR	332786	PrimaryExpression	1		331794	0					
ANR	332787	ExpressionStatement	exit ( ret )	234:1:6169:6178	331794	33	True				
ANR	332788	CallExpression	exit ( ret )		331794	0					
ANR	332789	Callee	exit		331794	0					
ANR	332790	Identifier	exit		331794	0					
ANR	332791	ArgumentList	ret		331794	1					
ANR	332792	Argument	ret		331794	0					
ANR	332793	Identifier	ret		331794	0					
ANR	332794	ReturnType	int		331794	1					
ANR	332795	Identifier	main		331794	2					
ANR	332796	ParameterList	"int argc , char * argv [ ]"		331794	3					
ANR	332797	Parameter	int argc	44:9:1704:1711	331794	0	True				
ANR	332798	ParameterType	int		331794	0					
ANR	332799	Identifier	argc		331794	1					
ANR	332800	Parameter	char * argv [ ]	44:19:1714:1725	331794	1	True				
ANR	332801	ParameterType	char * [ ]		331794	0					
ANR	332802	Identifier	argv		331794	1					
ANR	332803	CFGEntryNode	ENTRY		331794		True				
ANR	332804	CFGExitNode	EXIT		331794		True				
ANR	332805	Symbol	& val		331794						
ANR	332806	Symbol	scanfOK		331794						
ANR	332807	Symbol	bAnticipateTruncation		331794						
ANR	332808	Symbol	optarg		331794						
ANR	332809	Symbol	fp		331794						
ANR	332810	Symbol	edLen		331794						
ANR	332811	Symbol	nDups		331794						
ANR	332812	Symbol	argv		331794						
ANR	332813	Symbol	dupsPermitted		331794						
ANR	332814	Symbol	reachedEOF		331794						
ANR	332815	Symbol	fgets		331794						
ANR	332816	Symbol	strlen		331794						
ANR	332817	Symbol	file		331794						
ANR	332818	Symbol	getopt		331794						
ANR	332819	Symbol	bHaveExtraData		331794						
ANR	332820	Symbol	ioBuf		331794						
ANR	332821	Symbol	end		331794						
ANR	332822	Symbol	lostok		331794						
ANR	332823	Symbol	EOF		331794						
ANR	332824	Symbol	argc		331794						
ANR	332825	Symbol	val		331794						
ANR	332826	Symbol	ret		331794						
ANR	332827	Symbol	atoi		331794						
ANR	332828	Symbol	fopen		331794						
ANR	332829	Symbol	NULL		331794						
ANR	332830	Symbol	c		331794						
ANR	332831	Symbol	start		331794						
ANR	332832	Symbol	i		331794						
ANR	332833	Symbol	edBuf		331794						
ANR	332834	Symbol	verbose		331794						
ANR	332835	Symbol	opt		331794						
ANR	332836	Symbol	sscanf		331794						
ANR	332837	Symbol	& edLen		331794						
ANR	332838	Symbol	feof		331794						
ANR	332839	Symbol	getc		331794						
ANR	332840	Symbol	fgetc		331794						
