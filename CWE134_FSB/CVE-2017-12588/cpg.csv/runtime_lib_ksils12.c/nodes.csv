command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	159159	File	data/converged/CVE-2017-12588_rsyslog/runtime_lib_ksils12.c								
ANR	159160	DeclStmt									
ANR	159161	Decl							unsigned char	unsigned char	uchar
ANR	159162	DeclStmt									
ANR	159163	Decl							const char	const char *	blockFileSuffix
ANR	159164	DeclStmt									
ANR	159165	Decl							const char	const char *	sigFileSuffix
ANR	159166	DeclStmt									
ANR	159167	Decl							const char	const char *	ls12FileSuffix
ANR	159168	DeclStmt									
ANR	159169	Decl							const char	const char *	blockCloseReason
ANR	159170	ClassDef	QITEM_type_en	79:8:2328:2442							
ANR	159171	DeclStmt									
ANR	159172	Decl							QITEM_type_en	QITEM_type_en	QITEM_type
ANR	159173	ClassDef	QueueItem_st	87:8:2481:2582							
ANR	159174	DeclStmt									
ANR	159175	Decl							QITEM_type	QITEM_type	type
ANR	159176	DeclStmt									
ANR	159177	Decl							void	void *	arg
ANR	159178	DeclStmt									
ANR	159179	Decl							uint64_t	uint64_t	intarg1
ANR	159180	DeclStmt									
ANR	159181	Decl							uint64_t	uint64_t	intarg2
ANR	159182	DeclStmt									
ANR	159183	Decl							QueueItem_st	QueueItem_st	QueueItem
ANR	159184	DeclStmt									
ANR	159185	Decl							bool	"bool ( rsksictx ctx , QITEM_type type , void * arg , uint64_t intarg1 , uint64_t intarg2 )"	add_queue_item
ANR	159186	DeclStmt									
ANR	159187	Decl							void	void * ( void * arg )	signer_thread
ANR	159188	Function	report	98:0:2767:3120							
ANR	159189	FunctionDef	"report (rsksictx ctx , const char * errmsg)"		159188	0					
ANR	159190	CompoundStatement		98:46:2813:3120	159188	0					
ANR	159191	IdentifierDeclStatement	char buf [ 1024 ] ;	99:1:2816:2830	159188	0	True				
ANR	159192	IdentifierDecl	buf [ 1024 ]		159188	0					
ANR	159193	IdentifierDeclType	char [ 1024 ]		159188	0					
ANR	159194	Identifier	buf		159188	1					
ANR	159195	PrimaryExpression	1024		159188	2					
ANR	159196	IdentifierDeclStatement	int r ;	100:1:2833:2838	159188	1	True				
ANR	159197	IdentifierDecl	r		159188	0					
ANR	159198	IdentifierDeclType	int		159188	0					
ANR	159199	Identifier	r		159188	1					
ANR	159200	IdentifierDeclStatement	va_list args ;	101:1:2841:2853	159188	2	True				
ANR	159201	IdentifierDecl	args		159188	0					
ANR	159202	IdentifierDeclType	va_list		159188	0					
ANR	159203	Identifier	args		159188	1					
ANR	159204	ExpressionStatement	"va_start ( args , errmsg )"	102:1:2856:2878	159188	3	True				
ANR	159205	CallExpression	"va_start ( args , errmsg )"		159188	0					
ANR	159206	Callee	va_start		159188	0					
ANR	159207	Identifier	va_start		159188	0					
ANR	159208	ArgumentList	args		159188	1					
ANR	159209	Argument	args		159188	0					
ANR	159210	Identifier	args		159188	0					
ANR	159211	Argument	errmsg		159188	1					
ANR	159212	Identifier	errmsg		159188	0					
ANR	159213	ExpressionStatement	"r = vsnprintf ( buf , sizeof ( buf ) , errmsg , args )"	104:1:2882:2928	159188	4	True				
ANR	159214	AssignmentExpression	"r = vsnprintf ( buf , sizeof ( buf ) , errmsg , args )"		159188	0		=			
ANR	159215	Identifier	r		159188	0					
ANR	159216	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , errmsg , args )"		159188	1					
ANR	159217	Callee	vsnprintf		159188	0					
ANR	159218	Identifier	vsnprintf		159188	0					
ANR	159219	ArgumentList	buf		159188	1					
ANR	159220	Argument	buf		159188	0					
ANR	159221	Identifier	buf		159188	0					
ANR	159222	Argument	sizeof ( buf )		159188	1					
ANR	159223	SizeofExpression	sizeof ( buf )		159188	0					
ANR	159224	Sizeof	sizeof		159188	0					
ANR	159225	SizeofOperand	buf		159188	1					
ANR	159226	Argument	errmsg		159188	2					
ANR	159227	Identifier	errmsg		159188	0					
ANR	159228	Argument	args		159188	3					
ANR	159229	Identifier	args		159188	0					
ANR	159230	ExpressionStatement	buf [ sizeof ( buf ) - 1 ] = '\\0'	105:1:2931:2956	159188	5	True				
ANR	159231	AssignmentExpression	buf [ sizeof ( buf ) - 1 ] = '\\0'		159188	0		=			
ANR	159232	ArrayIndexing	buf [ sizeof ( buf ) - 1 ]		159188	0					
ANR	159233	Identifier	buf		159188	0					
ANR	159234	AdditiveExpression	sizeof ( buf ) - 1		159188	1		-			
ANR	159235	SizeofExpression	sizeof ( buf )		159188	0					
ANR	159236	Sizeof	sizeof		159188	0					
ANR	159237	SizeofOperand	buf		159188	1					
ANR	159238	PrimaryExpression	1		159188	1					
ANR	159239	PrimaryExpression	'\\0'		159188	1					
ANR	159240	IfStatement	if ( ctx -> logFunc == NULL )		159188	6					
ANR	159241	Condition	ctx -> logFunc == NULL	107:4:2963:2982	159188	0	True				
ANR	159242	EqualityExpression	ctx -> logFunc == NULL		159188	0		==			
ANR	159243	PtrMemberAccess	ctx -> logFunc		159188	0					
ANR	159244	Identifier	ctx		159188	0					
ANR	159245	Identifier	logFunc		159188	1					
ANR	159246	Identifier	NULL		159188	1					
ANR	159247	ReturnStatement	return ;	108:2:2987:2993	159188	1	True				
ANR	159248	IfStatement	if ( r > 0 && r < ( int ) sizeof ( buf ) )		159188	7					
ANR	159249	Condition	r > 0 && r < ( int ) sizeof ( buf )	110:4:3000:3024	159188	0	True				
ANR	159250	AndExpression	r > 0 && r < ( int ) sizeof ( buf )		159188	0		&&			
ANR	159251	RelationalExpression	r > 0		159188	0		>			
ANR	159252	Identifier	r		159188	0					
ANR	159253	PrimaryExpression	0		159188	1					
ANR	159254	RelationalExpression	r < ( int ) sizeof ( buf )		159188	1		<			
ANR	159255	Identifier	r		159188	0					
ANR	159256	CastExpression	( int ) sizeof ( buf )		159188	1					
ANR	159257	CastTarget	int		159188	0					
ANR	159258	SizeofExpression	sizeof ( buf )		159188	1					
ANR	159259	Sizeof	sizeof		159188	0					
ANR	159260	SizeofOperand	buf		159188	1					
ANR	159261	ExpressionStatement	"ctx -> logFunc ( ctx -> usrptr , ( uchar * ) buf )"	111:2:3029:3067	159188	1	True				
ANR	159262	CallExpression	"ctx -> logFunc ( ctx -> usrptr , ( uchar * ) buf )"		159188	0					
ANR	159263	Callee	ctx -> logFunc		159188	0					
ANR	159264	PtrMemberAccess	ctx -> logFunc		159188	0					
ANR	159265	Identifier	ctx		159188	0					
ANR	159266	Identifier	logFunc		159188	1					
ANR	159267	ArgumentList	ctx -> usrptr		159188	1					
ANR	159268	Argument	ctx -> usrptr		159188	0					
ANR	159269	PtrMemberAccess	ctx -> usrptr		159188	0					
ANR	159270	Identifier	ctx		159188	0					
ANR	159271	Identifier	usrptr		159188	1					
ANR	159272	Argument	( uchar * ) buf		159188	1					
ANR	159273	CastExpression	( uchar * ) buf		159188	0					
ANR	159274	CastTarget	uchar *		159188	0					
ANR	159275	Identifier	buf		159188	1					
ANR	159276	ElseStatement	else		159188	0					
ANR	159277	ExpressionStatement	"ctx -> logFunc ( ctx -> usrptr , ( uchar * ) errmsg )"	113:2:3077:3118	159188	0	True				
ANR	159278	CallExpression	"ctx -> logFunc ( ctx -> usrptr , ( uchar * ) errmsg )"		159188	0					
ANR	159279	Callee	ctx -> logFunc		159188	0					
ANR	159280	PtrMemberAccess	ctx -> logFunc		159188	0					
ANR	159281	Identifier	ctx		159188	0					
ANR	159282	Identifier	logFunc		159188	1					
ANR	159283	ArgumentList	ctx -> usrptr		159188	1					
ANR	159284	Argument	ctx -> usrptr		159188	0					
ANR	159285	PtrMemberAccess	ctx -> usrptr		159188	0					
ANR	159286	Identifier	ctx		159188	0					
ANR	159287	Identifier	usrptr		159188	1					
ANR	159288	Argument	( uchar * ) errmsg		159188	1					
ANR	159289	CastExpression	( uchar * ) errmsg		159188	0					
ANR	159290	CastTarget	uchar *		159188	0					
ANR	159291	Identifier	errmsg		159188	1					
ANR	159292	Identifier	report		159188	1					
ANR	159293	ParameterList	"rsksictx ctx , const char * errmsg"		159188	2					
ANR	159294	Parameter	rsksictx ctx	98:7:2774:2785	159188	0	True				
ANR	159295	ParameterType	rsksictx		159188	0					
ANR	159296	Identifier	ctx		159188	1					
ANR	159297	Parameter	const char * errmsg	98:21:2788:2805	159188	1	True				
ANR	159298	ParameterType	const char *		159188	0					
ANR	159299	Identifier	errmsg		159188	1					
ANR	159300	CFGEntryNode	ENTRY		159188		True				
ANR	159301	CFGExitNode	EXIT		159188		True				
ANR	159302	Symbol	args		159188						
ANR	159303	Symbol	buf		159188						
ANR	159304	Symbol	r		159188						
ANR	159305	Symbol	* buf		159188						
ANR	159306	Symbol	NULL		159188						
ANR	159307	Symbol	ctx -> usrptr		159188						
ANR	159308	Symbol	ctx		159188						
ANR	159309	Symbol	errmsg		159188						
ANR	159310	Symbol	ctx -> logFunc		159188						
ANR	159311	Symbol	vsnprintf		159188						
ANR	159312	Symbol	* ctx		159188						
ANR	159313	Function	reportKSIAPIErr	125:0:3287:3597							
ANR	159314	FunctionDef	"reportKSIAPIErr (rsksictx ctx , ksifile ksi , const char * apiname , int ecode)"		159313	0					
ANR	159315	CompoundStatement		127:0:3367:3597	159313	0					
ANR	159316	IdentifierDeclStatement	char errbuf [ 4096 ] ;	128:1:3370:3387	159313	0	True				
ANR	159317	IdentifierDecl	errbuf [ 4096 ]		159313	0					
ANR	159318	IdentifierDeclType	char [ 4096 ]		159313	0					
ANR	159319	Identifier	errbuf		159313	1					
ANR	159320	PrimaryExpression	4096		159313	2					
ANR	159321	ExpressionStatement	"snprintf ( errbuf , sizeof ( errbuf ) , ""%s[%s:%d]: %s"" , ( ksi == NULL ) ? ( uchar * ) """" : ksi -> blockfilename , apiname , ecode , KSI_getErrorString ( ecode ) )"	129:1:3390:3536	159313	1	True				
ANR	159322	CallExpression	"snprintf ( errbuf , sizeof ( errbuf ) , ""%s[%s:%d]: %s"" , ( ksi == NULL ) ? ( uchar * ) """" : ksi -> blockfilename , apiname , ecode , KSI_getErrorString ( ecode ) )"		159313	0					
ANR	159323	Callee	snprintf		159313	0					
ANR	159324	Identifier	snprintf		159313	0					
ANR	159325	ArgumentList	errbuf		159313	1					
ANR	159326	Argument	errbuf		159313	0					
ANR	159327	Identifier	errbuf		159313	0					
ANR	159328	Argument	sizeof ( errbuf )		159313	1					
ANR	159329	SizeofExpression	sizeof ( errbuf )		159313	0					
ANR	159330	Sizeof	sizeof		159313	0					
ANR	159331	SizeofOperand	errbuf		159313	1					
ANR	159332	Argument	"""%s[%s:%d]: %s"""		159313	2					
ANR	159333	PrimaryExpression	"""%s[%s:%d]: %s"""		159313	0					
ANR	159334	Argument	"( ksi == NULL ) ? ( uchar * ) """" : ksi -> blockfilename"		159313	3					
ANR	159335	ConditionalExpression	"( ksi == NULL ) ? ( uchar * ) """" : ksi -> blockfilename"		159313	0					
ANR	159336	Condition	ksi == NULL		159313	0					
ANR	159337	EqualityExpression	ksi == NULL		159313	0		==			
ANR	159338	Identifier	ksi		159313	0					
ANR	159339	Identifier	NULL		159313	1					
ANR	159340	CastExpression	"( uchar * ) """""		159313	1					
ANR	159341	CastTarget	uchar *		159313	0					
ANR	159342	PrimaryExpression	""""""		159313	1					
ANR	159343	PtrMemberAccess	ksi -> blockfilename		159313	2					
ANR	159344	Identifier	ksi		159313	0					
ANR	159345	Identifier	blockfilename		159313	1					
ANR	159346	Argument	apiname		159313	4					
ANR	159347	Identifier	apiname		159313	0					
ANR	159348	Argument	ecode		159313	5					
ANR	159349	Identifier	ecode		159313	0					
ANR	159350	Argument	KSI_getErrorString ( ecode )		159313	6					
ANR	159351	CallExpression	KSI_getErrorString ( ecode )		159313	0					
ANR	159352	Callee	KSI_getErrorString		159313	0					
ANR	159353	Identifier	KSI_getErrorString		159313	0					
ANR	159354	ArgumentList	ecode		159313	1					
ANR	159355	Argument	ecode		159313	0					
ANR	159356	Identifier	ecode		159313	0					
ANR	159357	ExpressionStatement	errbuf [ sizeof ( errbuf ) - 1 ] = '\\0'	132:1:3539:3570	159313	2	True				
ANR	159358	AssignmentExpression	errbuf [ sizeof ( errbuf ) - 1 ] = '\\0'		159313	0		=			
ANR	159359	ArrayIndexing	errbuf [ sizeof ( errbuf ) - 1 ]		159313	0					
ANR	159360	Identifier	errbuf		159313	0					
ANR	159361	AdditiveExpression	sizeof ( errbuf ) - 1		159313	1		-			
ANR	159362	SizeofExpression	sizeof ( errbuf )		159313	0					
ANR	159363	Sizeof	sizeof		159313	0					
ANR	159364	SizeofOperand	errbuf		159313	1					
ANR	159365	PrimaryExpression	1		159313	1					
ANR	159366	PrimaryExpression	'\\0'		159313	1					
ANR	159367	ExpressionStatement	"reportErr ( ctx , errbuf )"	133:1:3573:3595	159313	3	True				
ANR	159368	CallExpression	"reportErr ( ctx , errbuf )"		159313	0					
ANR	159369	Callee	reportErr		159313	0					
ANR	159370	Identifier	reportErr		159313	0					
ANR	159371	ArgumentList	ctx		159313	1					
ANR	159372	Argument	ctx		159313	0					
ANR	159373	Identifier	ctx		159313	0					
ANR	159374	Argument	errbuf		159313	1					
ANR	159375	Identifier	errbuf		159313	0					
ANR	159376	ReturnType	void		159313	1					
ANR	159377	Identifier	reportKSIAPIErr		159313	2					
ANR	159378	ParameterList	"rsksictx ctx , ksifile ksi , const char * apiname , int ecode"		159313	3					
ANR	159379	Parameter	rsksictx ctx	126:16:3308:3319	159313	0	True				
ANR	159380	ParameterType	rsksictx		159313	0					
ANR	159381	Identifier	ctx		159313	1					
ANR	159382	Parameter	ksifile ksi	126:30:3322:3332	159313	1	True				
ANR	159383	ParameterType	ksifile		159313	0					
ANR	159384	Identifier	ksi		159313	1					
ANR	159385	Parameter	const char * apiname	126:43:3335:3353	159313	2	True				
ANR	159386	ParameterType	const char *		159313	0					
ANR	159387	Identifier	apiname		159313	1					
ANR	159388	Parameter	int ecode	126:64:3356:3364	159313	3	True				
ANR	159389	ParameterType	int		159313	0					
ANR	159390	Identifier	ecode		159313	1					
ANR	159391	CFGEntryNode	ENTRY		159313		True				
ANR	159392	CFGExitNode	EXIT		159313		True				
ANR	159393	Symbol	ksi		159313						
ANR	159394	Symbol	apiname		159313						
ANR	159395	Symbol	NULL		159313						
ANR	159396	Symbol	ctx		159313						
ANR	159397	Symbol	KSI_getErrorString		159313						
ANR	159398	Symbol	* errbuf		159313						
ANR	159399	Symbol	errbuf		159313						
ANR	159400	Symbol	* ksi		159313						
ANR	159401	Symbol	ksi -> blockfilename		159313						
ANR	159402	Symbol	ecode		159313						
ANR	159403	Function	rsksisetErrFunc	136:0:3600:3726							
ANR	159404	FunctionDef	"rsksisetErrFunc (rsksictx ctx , void ( * func ) ( void * , uchar * ) , void * usrptr)"		159403	0					
ANR	159405	CompoundStatement		138:0:3679:3726	159403	0					
ANR	159406	ExpressionStatement	ctx -> usrptr = usrptr	139:1:3682:3702	159403	0	True				
ANR	159407	AssignmentExpression	ctx -> usrptr = usrptr		159403	0		=			
ANR	159408	PtrMemberAccess	ctx -> usrptr		159403	0					
ANR	159409	Identifier	ctx		159403	0					
ANR	159410	Identifier	usrptr		159403	1					
ANR	159411	Identifier	usrptr		159403	1					
ANR	159412	ExpressionStatement	ctx -> errFunc = func	140:1:3705:3724	159403	1	True				
ANR	159413	AssignmentExpression	ctx -> errFunc = func		159403	0		=			
ANR	159414	PtrMemberAccess	ctx -> errFunc		159403	0					
ANR	159415	Identifier	ctx		159403	0					
ANR	159416	Identifier	errFunc		159403	1					
ANR	159417	Identifier	func		159403	1					
ANR	159418	ReturnType	void		159403	1					
ANR	159419	Identifier	rsksisetErrFunc		159403	2					
ANR	159420	ParameterList	"rsksictx ctx , void ( * func ) ( void * , uchar * ) , void * usrptr"		159403	3					
ANR	159421	Parameter	rsksictx ctx	137:16:3621:3632	159403	0	True				
ANR	159422	ParameterType	rsksictx		159403	0					
ANR	159423	Identifier	ctx		159403	1					
ANR	159424	Parameter	"void ( * func ) ( void * , uchar * )"	137:30:3635:3662	159403	1	True				
ANR	159425	ParameterType	"(( void * , uchar * ) void) *"		159403	0					
ANR	159426	Identifier	func		159403	1					
ANR	159427	Parameter	void * usrptr	137:60:3665:3676	159403	2	True				
ANR	159428	ParameterType	void *		159403	0					
ANR	159429	Identifier	usrptr		159403	1					
ANR	159430	CFGEntryNode	ENTRY		159403		True				
ANR	159431	CFGExitNode	EXIT		159403		True				
ANR	159432	Symbol	func		159403						
ANR	159433	Symbol	ctx -> errFunc		159403						
ANR	159434	Symbol	ctx -> usrptr		159403						
ANR	159435	Symbol	ctx		159403						
ANR	159436	Symbol	usrptr		159403						
ANR	159437	Symbol	* ctx		159403						
ANR	159438	Function	rsksisetLogFunc	143:0:3729:3855							
ANR	159439	FunctionDef	"rsksisetLogFunc (rsksictx ctx , void ( * func ) ( void * , uchar * ) , void * usrptr)"		159438	0					
ANR	159440	CompoundStatement		145:0:3808:3855	159438	0					
ANR	159441	ExpressionStatement	ctx -> usrptr = usrptr	146:1:3811:3831	159438	0	True				
ANR	159442	AssignmentExpression	ctx -> usrptr = usrptr		159438	0		=			
ANR	159443	PtrMemberAccess	ctx -> usrptr		159438	0					
ANR	159444	Identifier	ctx		159438	0					
ANR	159445	Identifier	usrptr		159438	1					
ANR	159446	Identifier	usrptr		159438	1					
ANR	159447	ExpressionStatement	ctx -> logFunc = func	147:1:3834:3853	159438	1	True				
ANR	159448	AssignmentExpression	ctx -> logFunc = func		159438	0		=			
ANR	159449	PtrMemberAccess	ctx -> logFunc		159438	0					
ANR	159450	Identifier	ctx		159438	0					
ANR	159451	Identifier	logFunc		159438	1					
ANR	159452	Identifier	func		159438	1					
ANR	159453	ReturnType	void		159438	1					
ANR	159454	Identifier	rsksisetLogFunc		159438	2					
ANR	159455	ParameterList	"rsksictx ctx , void ( * func ) ( void * , uchar * ) , void * usrptr"		159438	3					
ANR	159456	Parameter	rsksictx ctx	144:16:3750:3761	159438	0	True				
ANR	159457	ParameterType	rsksictx		159438	0					
ANR	159458	Identifier	ctx		159438	1					
ANR	159459	Parameter	"void ( * func ) ( void * , uchar * )"	144:30:3764:3791	159438	1	True				
ANR	159460	ParameterType	"(( void * , uchar * ) void) *"		159438	0					
ANR	159461	Identifier	func		159438	1					
ANR	159462	Parameter	void * usrptr	144:60:3794:3805	159438	2	True				
ANR	159463	ParameterType	void *		159438	0					
ANR	159464	Identifier	usrptr		159438	1					
ANR	159465	CFGEntryNode	ENTRY		159438		True				
ANR	159466	CFGExitNode	EXIT		159438		True				
ANR	159467	Symbol	func		159438						
ANR	159468	Symbol	ctx -> usrptr		159438						
ANR	159469	Symbol	ctx		159438						
ANR	159470	Symbol	usrptr		159438						
ANR	159471	Symbol	ctx -> logFunc		159438						
ANR	159472	Symbol	* ctx		159438						
ANR	159473	Function	rsksifileConstruct	150:0:3858:4298							
ANR	159474	FunctionDef	rsksifileConstruct (rsksictx ctx)		159473	0					
ANR	159475	CompoundStatement		151:33:3906:4298	159473	0					
ANR	159476	IdentifierDeclStatement	ksifile ksi = NULL ;	152:1:3909:3927	159473	0	True				
ANR	159477	IdentifierDecl	ksi = NULL		159473	0					
ANR	159478	IdentifierDeclType	ksifile		159473	0					
ANR	159479	Identifier	ksi		159473	1					
ANR	159480	AssignmentExpression	ksi = NULL		159473	2		=			
ANR	159481	Identifier	NULL		159473	0					
ANR	159482	Identifier	NULL		159473	1					
ANR	159483	IfStatement	"if ( ( ksi = calloc ( 1 , sizeof ( struct ksifile_s ) ) ) == NULL )"		159473	1					
ANR	159484	Condition	"( ksi = calloc ( 1 , sizeof ( struct ksifile_s ) ) ) == NULL"	153:5:3934:3985	159473	0	True				
ANR	159485	EqualityExpression	"( ksi = calloc ( 1 , sizeof ( struct ksifile_s ) ) ) == NULL"		159473	0		==			
ANR	159486	AssignmentExpression	"ksi = calloc ( 1 , sizeof ( struct ksifile_s ) )"		159473	0		=			
ANR	159487	Identifier	ksi		159473	0					
ANR	159488	CallExpression	"calloc ( 1 , sizeof ( struct ksifile_s ) )"		159473	1					
ANR	159489	Callee	calloc		159473	0					
ANR	159490	Identifier	calloc		159473	0					
ANR	159491	ArgumentList	1		159473	1					
ANR	159492	Argument	1		159473	0					
ANR	159493	PrimaryExpression	1		159473	0					
ANR	159494	Argument	sizeof ( struct ksifile_s )		159473	1					
ANR	159495	SizeofExpression	sizeof ( struct ksifile_s )		159473	0					
ANR	159496	Sizeof	sizeof		159473	0					
ANR	159497	SizeofOperand	struct ksifile_s		159473	1					
ANR	159498	Identifier	NULL		159473	1					
ANR	159499	GotoStatement	goto done ;	154:2:3990:3999	159473	1	True				
ANR	159500	Identifier	done		159473	0					
ANR	159501	ExpressionStatement	ksi -> ctx = ctx	155:1:4002:4016	159473	2	True				
ANR	159502	AssignmentExpression	ksi -> ctx = ctx		159473	0		=			
ANR	159503	PtrMemberAccess	ksi -> ctx		159473	0					
ANR	159504	Identifier	ksi		159473	0					
ANR	159505	Identifier	ctx		159473	1					
ANR	159506	Identifier	ctx		159473	1					
ANR	159507	ExpressionStatement	ksi -> hashAlg = ctx -> hashAlg	156:1:4019:4046	159473	3	True				
ANR	159508	AssignmentExpression	ksi -> hashAlg = ctx -> hashAlg		159473	0		=			
ANR	159509	PtrMemberAccess	ksi -> hashAlg		159473	0					
ANR	159510	Identifier	ksi		159473	0					
ANR	159511	Identifier	hashAlg		159473	1					
ANR	159512	PtrMemberAccess	ctx -> hashAlg		159473	1					
ANR	159513	Identifier	ctx		159473	0					
ANR	159514	Identifier	hashAlg		159473	1					
ANR	159515	ExpressionStatement	ksi -> blockTimeLimit = ctx -> blockTimeLimit	157:1:4049:4090	159473	4	True				
ANR	159516	AssignmentExpression	ksi -> blockTimeLimit = ctx -> blockTimeLimit		159473	0		=			
ANR	159517	PtrMemberAccess	ksi -> blockTimeLimit		159473	0					
ANR	159518	Identifier	ksi		159473	0					
ANR	159519	Identifier	blockTimeLimit		159473	1					
ANR	159520	PtrMemberAccess	ctx -> blockTimeLimit		159473	1					
ANR	159521	Identifier	ctx		159473	0					
ANR	159522	Identifier	blockTimeLimit		159473	1					
ANR	159523	ExpressionStatement	ksi -> blockSizeLimit = ( 1 << ctx -> blockLevelLimit ) - 1	158:1:4093:4146	159473	5	True				
ANR	159524	AssignmentExpression	ksi -> blockSizeLimit = ( 1 << ctx -> blockLevelLimit ) - 1		159473	0		=			
ANR	159525	PtrMemberAccess	ksi -> blockSizeLimit		159473	0					
ANR	159526	Identifier	ksi		159473	0					
ANR	159527	Identifier	blockSizeLimit		159473	1					
ANR	159528	AdditiveExpression	( 1 << ctx -> blockLevelLimit ) - 1		159473	1		-			
ANR	159529	ShiftExpression	1 << ctx -> blockLevelLimit		159473	0		<<			
ANR	159530	PrimaryExpression	1		159473	0					
ANR	159531	PtrMemberAccess	ctx -> blockLevelLimit		159473	1					
ANR	159532	Identifier	ctx		159473	0					
ANR	159533	Identifier	blockLevelLimit		159473	1					
ANR	159534	PrimaryExpression	1		159473	1					
ANR	159535	ExpressionStatement	ksi -> bKeepRecordHashes = ctx -> bKeepRecordHashes	159:1:4149:4196	159473	6	True				
ANR	159536	AssignmentExpression	ksi -> bKeepRecordHashes = ctx -> bKeepRecordHashes		159473	0		=			
ANR	159537	PtrMemberAccess	ksi -> bKeepRecordHashes		159473	0					
ANR	159538	Identifier	ksi		159473	0					
ANR	159539	Identifier	bKeepRecordHashes		159473	1					
ANR	159540	PtrMemberAccess	ctx -> bKeepRecordHashes		159473	1					
ANR	159541	Identifier	ctx		159473	0					
ANR	159542	Identifier	bKeepRecordHashes		159473	1					
ANR	159543	ExpressionStatement	ksi -> bKeepTreeHashes = ctx -> bKeepTreeHashes	160:1:4199:4242	159473	7	True				
ANR	159544	AssignmentExpression	ksi -> bKeepTreeHashes = ctx -> bKeepTreeHashes		159473	0		=			
ANR	159545	PtrMemberAccess	ksi -> bKeepTreeHashes		159473	0					
ANR	159546	Identifier	ksi		159473	0					
ANR	159547	Identifier	bKeepTreeHashes		159473	1					
ANR	159548	PtrMemberAccess	ctx -> bKeepTreeHashes		159473	1					
ANR	159549	Identifier	ctx		159473	0					
ANR	159550	Identifier	bKeepTreeHashes		159473	1					
ANR	159551	ExpressionStatement	ksi -> lastLeaf [ 0 ] = ctx -> hashAlg	161:1:4245:4276	159473	8	True				
ANR	159552	AssignmentExpression	ksi -> lastLeaf [ 0 ] = ctx -> hashAlg		159473	0		=			
ANR	159553	ArrayIndexing	ksi -> lastLeaf [ 0 ]		159473	0					
ANR	159554	PtrMemberAccess	ksi -> lastLeaf		159473	0					
ANR	159555	Identifier	ksi		159473	0					
ANR	159556	Identifier	lastLeaf		159473	1					
ANR	159557	PrimaryExpression	0		159473	1					
ANR	159558	PtrMemberAccess	ctx -> hashAlg		159473	1					
ANR	159559	Identifier	ctx		159473	0					
ANR	159560	Identifier	hashAlg		159473	1					
ANR	159561	Label	done :	163:0:4279:4283	159473	9	True				
ANR	159562	Identifier	done		159473	0					
ANR	159563	ReturnStatement	return ksi ;	164:1:4286:4296	159473	10	True				
ANR	159564	Identifier	ksi		159473	0					
ANR	159565	ReturnType	static ksifile		159473	1					
ANR	159566	Identifier	rsksifileConstruct		159473	2					
ANR	159567	ParameterList	rsksictx ctx		159473	3					
ANR	159568	Parameter	rsksictx ctx	151:19:3892:3903	159473	0	True				
ANR	159569	ParameterType	rsksictx		159473	0					
ANR	159570	Identifier	ctx		159473	1					
ANR	159571	CFGEntryNode	ENTRY		159473		True				
ANR	159572	CFGExitNode	EXIT		159473		True				
ANR	159573	Symbol	ksi		159473						
ANR	159574	Symbol	ksi -> ctx		159473						
ANR	159575	Symbol	ctx -> bKeepTreeHashes		159473						
ANR	159576	Symbol	NULL		159473						
ANR	159577	Symbol	* ksi -> lastLeaf		159473						
ANR	159578	Symbol	ctx		159473						
ANR	159579	Symbol	ksi -> hashAlg		159473						
ANR	159580	Symbol	calloc		159473						
ANR	159581	Symbol	* ksi		159473						
ANR	159582	Symbol	ctx -> blockTimeLimit		159473						
ANR	159583	Symbol	ctx -> hashAlg		159473						
ANR	159584	Symbol	* ctx		159473						
ANR	159585	Symbol	ksi -> blockSizeLimit		159473						
ANR	159586	Symbol	ctx -> bKeepRecordHashes		159473						
ANR	159587	Symbol	ksi -> bKeepTreeHashes		159473						
ANR	159588	Symbol	* * ksi		159473						
ANR	159589	Symbol	ksi -> blockTimeLimit		159473						
ANR	159590	Symbol	ksi -> bKeepRecordHashes		159473						
ANR	159591	Symbol	ksi -> lastLeaf		159473						
ANR	159592	Symbol	ctx -> blockLevelLimit		159473						
ANR	159593	Function	tlvGetIntSize	168:0:4370:4485							
ANR	159594	FunctionDef	tlvGetIntSize (uint64_t val)		159593	0					
ANR	159595	CompoundStatement		169:28:4413:4485	159593	0					
ANR	159596	IdentifierDeclStatement	uint8_t n = 0 ;	170:1:4416:4429	159593	0	True				
ANR	159597	IdentifierDecl	n = 0		159593	0					
ANR	159598	IdentifierDeclType	uint8_t		159593	0					
ANR	159599	Identifier	n		159593	1					
ANR	159600	AssignmentExpression	n = 0		159593	2		=			
ANR	159601	Identifier	n		159593	0					
ANR	159602	PrimaryExpression	0		159593	1					
ANR	159603	WhileStatement	while ( val != 0 )		159593	1					
ANR	159604	Condition	val != 0	171:8:4439:4446	159593	0	True				
ANR	159605	EqualityExpression	val != 0		159593	0		!=			
ANR	159606	Identifier	val		159593	0					
ANR	159607	PrimaryExpression	0		159593	1					
ANR	159608	CompoundStatement		3:18:35:35	159593	1					
ANR	159609	ExpressionStatement	val >>= 8	172:2:4453:4462	159593	0	True				
ANR	159610	AssignmentExpression	val >>= 8		159593	0		>>=			
ANR	159611	Identifier	val		159593	0					
ANR	159612	PrimaryExpression	8		159593	1					
ANR	159613	ExpressionStatement	n ++	173:2:4466:4469	159593	1	True				
ANR	159614	PostIncDecOperationExpression	n ++		159593	0					
ANR	159615	Identifier	n		159593	0					
ANR	159616	IncDec	++		159593	1					
ANR	159617	ReturnStatement	return n ;	175:1:4475:4483	159593	2	True				
ANR	159618	Identifier	n		159593	0					
ANR	159619	ReturnType	static uint8_t		159593	1					
ANR	159620	Identifier	tlvGetIntSize		159593	2					
ANR	159621	ParameterList	uint64_t val		159593	3					
ANR	159622	Parameter	uint64_t val	169:14:4399:4410	159593	0	True				
ANR	159623	ParameterType	uint64_t		159593	0					
ANR	159624	Identifier	val		159593	1					
ANR	159625	CFGEntryNode	ENTRY		159593		True				
ANR	159626	CFGExitNode	EXIT		159593		True				
ANR	159627	Symbol	val		159593						
ANR	159628	Symbol	n		159593						
ANR	159629	Function	tlvWriteOctetString	178:0:4488:4630							
ANR	159630	FunctionDef	"tlvWriteOctetString (FILE * f , const uint8_t * data , uint16_t len)"		159629	0					
ANR	159631	CompoundStatement		179:64:4563:4630	159629	0					
ANR	159632	IfStatement	"if ( fwrite ( data , len , 1 , f ) != 1 )"		159629	0					
ANR	159633	Condition	"fwrite ( data , len , 1 , f ) != 1"	180:5:4570:4597	159629	0	True				
ANR	159634	EqualityExpression	"fwrite ( data , len , 1 , f ) != 1"		159629	0		!=			
ANR	159635	CallExpression	"fwrite ( data , len , 1 , f )"		159629	0					
ANR	159636	Callee	fwrite		159629	0					
ANR	159637	Identifier	fwrite		159629	0					
ANR	159638	ArgumentList	data		159629	1					
ANR	159639	Argument	data		159629	0					
ANR	159640	Identifier	data		159629	0					
ANR	159641	Argument	len		159629	1					
ANR	159642	Identifier	len		159629	0					
ANR	159643	Argument	1		159629	2					
ANR	159644	PrimaryExpression	1		159629	0					
ANR	159645	Argument	f		159629	3					
ANR	159646	Identifier	f		159629	0					
ANR	159647	PrimaryExpression	1		159629	1					
ANR	159648	ReturnStatement	return RSGTE_IO ;	181:2:4602:4617	159629	1	True				
ANR	159649	Identifier	RSGTE_IO		159629	0					
ANR	159650	ReturnStatement	return 0 ;	182:1:4620:4628	159629	1	True				
ANR	159651	PrimaryExpression	0		159629	0					
ANR	159652	ReturnType	static int		159629	1					
ANR	159653	Identifier	tlvWriteOctetString		159629	2					
ANR	159654	ParameterList	"FILE * f , const uint8_t * data , uint16_t len"		159629	3					
ANR	159655	Parameter	FILE * f	179:20:4519:4525	159629	0	True				
ANR	159656	ParameterType	FILE *		159629	0					
ANR	159657	Identifier	f		159629	1					
ANR	159658	Parameter	const uint8_t * data	179:29:4528:4546	159629	1	True				
ANR	159659	ParameterType	const uint8_t *		159629	0					
ANR	159660	Identifier	data		159629	1					
ANR	159661	Parameter	uint16_t len	179:50:4549:4560	159629	2	True				
ANR	159662	ParameterType	uint16_t		159629	0					
ANR	159663	Identifier	len		159629	1					
ANR	159664	CFGEntryNode	ENTRY		159629		True				
ANR	159665	CFGExitNode	EXIT		159629		True				
ANR	159666	Symbol	RSGTE_IO		159629						
ANR	159667	Symbol	data		159629						
ANR	159668	Symbol	len		159629						
ANR	159669	Symbol	f		159629						
ANR	159670	Symbol	fwrite		159629						
ANR	159671	Function	tlvWriteHeader8	185:0:4633:4930							
ANR	159672	FunctionDef	"tlvWriteHeader8 (FILE * f , int flags , uint8_t tlvtype , int len)"		159671	0					
ANR	159673	CompoundStatement		186:62:4706:4930	159671	0					
ANR	159674	IdentifierDeclStatement	unsigned char buf [ 2 ] ;	187:1:4709:4729	159671	0	True				
ANR	159675	IdentifierDecl	buf [ 2 ]		159671	0					
ANR	159676	IdentifierDeclType	unsigned char [ 2 ]		159671	0					
ANR	159677	Identifier	buf		159671	1					
ANR	159678	PrimaryExpression	2		159671	2					
ANR	159679	ExpressionStatement	assert ( ( flags & RSGT_TYPE_MASK ) == 0 )	188:1:4732:4769	159671	1	True				
ANR	159680	CallExpression	assert ( ( flags & RSGT_TYPE_MASK ) == 0 )		159671	0					
ANR	159681	Callee	assert		159671	0					
ANR	159682	Identifier	assert		159671	0					
ANR	159683	ArgumentList	( flags & RSGT_TYPE_MASK ) == 0		159671	1					
ANR	159684	Argument	( flags & RSGT_TYPE_MASK ) == 0		159671	0					
ANR	159685	EqualityExpression	( flags & RSGT_TYPE_MASK ) == 0		159671	0		==			
ANR	159686	BitAndExpression	flags & RSGT_TYPE_MASK		159671	0		&			
ANR	159687	Identifier	flags		159671	0					
ANR	159688	Identifier	RSGT_TYPE_MASK		159671	1					
ANR	159689	PrimaryExpression	0		159671	1					
ANR	159690	ExpressionStatement	assert ( ( tlvtype & RSGT_TYPE_MASK ) == tlvtype )	189:1:4772:4817	159671	2	True				
ANR	159691	CallExpression	assert ( ( tlvtype & RSGT_TYPE_MASK ) == tlvtype )		159671	0					
ANR	159692	Callee	assert		159671	0					
ANR	159693	Identifier	assert		159671	0					
ANR	159694	ArgumentList	( tlvtype & RSGT_TYPE_MASK ) == tlvtype		159671	1					
ANR	159695	Argument	( tlvtype & RSGT_TYPE_MASK ) == tlvtype		159671	0					
ANR	159696	EqualityExpression	( tlvtype & RSGT_TYPE_MASK ) == tlvtype		159671	0		==			
ANR	159697	BitAndExpression	tlvtype & RSGT_TYPE_MASK		159671	0		&			
ANR	159698	Identifier	tlvtype		159671	0					
ANR	159699	Identifier	RSGT_TYPE_MASK		159671	1					
ANR	159700	Identifier	tlvtype		159671	1					
ANR	159701	ExpressionStatement	buf [ 0 ] = ( flags & ~RSGT_FLAG_TLV16 ) | tlvtype	190:1:4820:4865	159671	3	True				
ANR	159702	AssignmentExpression	buf [ 0 ] = ( flags & ~RSGT_FLAG_TLV16 ) | tlvtype		159671	0		=			
ANR	159703	ArrayIndexing	buf [ 0 ]		159671	0					
ANR	159704	Identifier	buf		159671	0					
ANR	159705	PrimaryExpression	0		159671	1					
ANR	159706	InclusiveOrExpression	( flags & ~RSGT_FLAG_TLV16 ) | tlvtype		159671	1		|			
ANR	159707	BitAndExpression	flags & ~RSGT_FLAG_TLV16		159671	0		&			
ANR	159708	Identifier	flags		159671	0					
ANR	159709	Identifier	~RSGT_FLAG_TLV16		159671	1					
ANR	159710	Identifier	tlvtype		159671	1					
ANR	159711	ExpressionStatement	buf [ 1 ] = len & 0xff	191:1:4868:4887	159671	4	True				
ANR	159712	AssignmentExpression	buf [ 1 ] = len & 0xff		159671	0		=			
ANR	159713	ArrayIndexing	buf [ 1 ]		159671	0					
ANR	159714	Identifier	buf		159671	0					
ANR	159715	PrimaryExpression	1		159671	1					
ANR	159716	BitAndExpression	len & 0xff		159671	1		&			
ANR	159717	Identifier	len		159671	0					
ANR	159718	PrimaryExpression	0xff		159671	1					
ANR	159719	ReturnStatement	"return tlvWriteOctetString ( f , buf , 2 ) ;"	193:1:4891:4928	159671	5	True				
ANR	159720	CallExpression	"tlvWriteOctetString ( f , buf , 2 )"		159671	0					
ANR	159721	Callee	tlvWriteOctetString		159671	0					
ANR	159722	Identifier	tlvWriteOctetString		159671	0					
ANR	159723	ArgumentList	f		159671	1					
ANR	159724	Argument	f		159671	0					
ANR	159725	Identifier	f		159671	0					
ANR	159726	Argument	buf		159671	1					
ANR	159727	Identifier	buf		159671	0					
ANR	159728	Argument	2		159671	2					
ANR	159729	PrimaryExpression	2		159671	0					
ANR	159730	ReturnType	static int		159671	1					
ANR	159731	Identifier	tlvWriteHeader8		159671	2					
ANR	159732	ParameterList	"FILE * f , int flags , uint8_t tlvtype , int len"		159671	3					
ANR	159733	Parameter	FILE * f	186:16:4660:4666	159671	0	True				
ANR	159734	ParameterType	FILE *		159671	0					
ANR	159735	Identifier	f		159671	1					
ANR	159736	Parameter	int flags	186:25:4669:4677	159671	1	True				
ANR	159737	ParameterType	int		159671	0					
ANR	159738	Identifier	flags		159671	1					
ANR	159739	Parameter	uint8_t tlvtype	186:36:4680:4694	159671	2	True				
ANR	159740	ParameterType	uint8_t		159671	0					
ANR	159741	Identifier	tlvtype		159671	1					
ANR	159742	Parameter	int len	186:53:4697:4703	159671	3	True				
ANR	159743	ParameterType	int		159671	0					
ANR	159744	Identifier	len		159671	1					
ANR	159745	CFGEntryNode	ENTRY		159671		True				
ANR	159746	CFGExitNode	EXIT		159671		True				
ANR	159747	Symbol	buf		159671						
ANR	159748	Symbol	RSGT_TYPE_MASK		159671						
ANR	159749	Symbol	* buf		159671						
ANR	159750	Symbol	len		159671						
ANR	159751	Symbol	~RSGT_FLAG_TLV16		159671						
ANR	159752	Symbol	f		159671						
ANR	159753	Symbol	flags		159671						
ANR	159754	Symbol	tlvtype		159671						
ANR	159755	Symbol	tlvWriteOctetString		159671						
ANR	159756	Function	tlvWriteHeader16	196:0:4934:5340							
ANR	159757	FunctionDef	"tlvWriteHeader16 (FILE * f , int flags , uint16_t tlvtype , uint16_t len)"		159756	0					
ANR	159758	CompoundStatement		198:0:5014:5340	159756	0					
ANR	159759	IdentifierDeclStatement	uint16_t typ ;	199:1:5017:5029	159756	0	True				
ANR	159760	IdentifierDecl	typ		159756	0					
ANR	159761	IdentifierDeclType	uint16_t		159756	0					
ANR	159762	Identifier	typ		159756	1					
ANR	159763	IdentifierDeclStatement	unsigned char buf [ 4 ] ;	200:1:5032:5052	159756	1	True				
ANR	159764	IdentifierDecl	buf [ 4 ]		159756	0					
ANR	159765	IdentifierDeclType	unsigned char [ 4 ]		159756	0					
ANR	159766	Identifier	buf		159756	1					
ANR	159767	PrimaryExpression	4		159756	2					
ANR	159768	ExpressionStatement	assert ( ( flags & RSGT_TYPE_MASK ) == 0 )	201:1:5055:5092	159756	2	True				
ANR	159769	CallExpression	assert ( ( flags & RSGT_TYPE_MASK ) == 0 )		159756	0					
ANR	159770	Callee	assert		159756	0					
ANR	159771	Identifier	assert		159756	0					
ANR	159772	ArgumentList	( flags & RSGT_TYPE_MASK ) == 0		159756	1					
ANR	159773	Argument	( flags & RSGT_TYPE_MASK ) == 0		159756	0					
ANR	159774	EqualityExpression	( flags & RSGT_TYPE_MASK ) == 0		159756	0		==			
ANR	159775	BitAndExpression	flags & RSGT_TYPE_MASK		159756	0		&			
ANR	159776	Identifier	flags		159756	0					
ANR	159777	Identifier	RSGT_TYPE_MASK		159756	1					
ANR	159778	PrimaryExpression	0		159756	1					
ANR	159779	ExpressionStatement	assert ( ( tlvtype >> 8 & RSGT_TYPE_MASK ) == ( tlvtype >> 8 ) )	202:1:5095:5152	159756	3	True				
ANR	159780	CallExpression	assert ( ( tlvtype >> 8 & RSGT_TYPE_MASK ) == ( tlvtype >> 8 ) )		159756	0					
ANR	159781	Callee	assert		159756	0					
ANR	159782	Identifier	assert		159756	0					
ANR	159783	ArgumentList	( tlvtype >> 8 & RSGT_TYPE_MASK ) == ( tlvtype >> 8 )		159756	1					
ANR	159784	Argument	( tlvtype >> 8 & RSGT_TYPE_MASK ) == ( tlvtype >> 8 )		159756	0					
ANR	159785	EqualityExpression	( tlvtype >> 8 & RSGT_TYPE_MASK ) == ( tlvtype >> 8 )		159756	0		==			
ANR	159786	BitAndExpression	tlvtype >> 8 & RSGT_TYPE_MASK		159756	0		&			
ANR	159787	ShiftExpression	tlvtype >> 8		159756	0		>>			
ANR	159788	Identifier	tlvtype		159756	0					
ANR	159789	PrimaryExpression	8		159756	1					
ANR	159790	Identifier	RSGT_TYPE_MASK		159756	1					
ANR	159791	ShiftExpression	tlvtype >> 8		159756	1		>>			
ANR	159792	Identifier	tlvtype		159756	0					
ANR	159793	PrimaryExpression	8		159756	1					
ANR	159794	ExpressionStatement	typ = ( ( flags | RSGT_FLAG_TLV16 ) << 8 ) | tlvtype	203:1:5155:5203	159756	4	True				
ANR	159795	AssignmentExpression	typ = ( ( flags | RSGT_FLAG_TLV16 ) << 8 ) | tlvtype		159756	0		=			
ANR	159796	Identifier	typ		159756	0					
ANR	159797	InclusiveOrExpression	( ( flags | RSGT_FLAG_TLV16 ) << 8 ) | tlvtype		159756	1		|			
ANR	159798	ShiftExpression	( flags | RSGT_FLAG_TLV16 ) << 8		159756	0		<<			
ANR	159799	InclusiveOrExpression	flags | RSGT_FLAG_TLV16		159756	0		|			
ANR	159800	Identifier	flags		159756	0					
ANR	159801	Identifier	RSGT_FLAG_TLV16		159756	1					
ANR	159802	PrimaryExpression	8		159756	1					
ANR	159803	Identifier	tlvtype		159756	1					
ANR	159804	ExpressionStatement	buf [ 0 ] = typ >> 8	205:1:5207:5224	159756	5	True				
ANR	159805	AssignmentExpression	buf [ 0 ] = typ >> 8		159756	0		=			
ANR	159806	ArrayIndexing	buf [ 0 ]		159756	0					
ANR	159807	Identifier	buf		159756	0					
ANR	159808	PrimaryExpression	0		159756	1					
ANR	159809	ShiftExpression	typ >> 8		159756	1		>>			
ANR	159810	Identifier	typ		159756	0					
ANR	159811	PrimaryExpression	8		159756	1					
ANR	159812	ExpressionStatement	buf [ 1 ] = typ & 0xff	206:1:5227:5246	159756	6	True				
ANR	159813	AssignmentExpression	buf [ 1 ] = typ & 0xff		159756	0		=			
ANR	159814	ArrayIndexing	buf [ 1 ]		159756	0					
ANR	159815	Identifier	buf		159756	0					
ANR	159816	PrimaryExpression	1		159756	1					
ANR	159817	BitAndExpression	typ & 0xff		159756	1		&			
ANR	159818	Identifier	typ		159756	0					
ANR	159819	PrimaryExpression	0xff		159756	1					
ANR	159820	ExpressionStatement	buf [ 2 ] = ( len >> 8 ) & 0xff	207:1:5249:5275	159756	7	True				
ANR	159821	AssignmentExpression	buf [ 2 ] = ( len >> 8 ) & 0xff		159756	0		=			
ANR	159822	ArrayIndexing	buf [ 2 ]		159756	0					
ANR	159823	Identifier	buf		159756	0					
ANR	159824	PrimaryExpression	2		159756	1					
ANR	159825	BitAndExpression	( len >> 8 ) & 0xff		159756	1		&			
ANR	159826	ShiftExpression	len >> 8		159756	0		>>			
ANR	159827	Identifier	len		159756	0					
ANR	159828	PrimaryExpression	8		159756	1					
ANR	159829	PrimaryExpression	0xff		159756	1					
ANR	159830	ExpressionStatement	buf [ 3 ] = len & 0xff	208:1:5278:5297	159756	8	True				
ANR	159831	AssignmentExpression	buf [ 3 ] = len & 0xff		159756	0		=			
ANR	159832	ArrayIndexing	buf [ 3 ]		159756	0					
ANR	159833	Identifier	buf		159756	0					
ANR	159834	PrimaryExpression	3		159756	1					
ANR	159835	BitAndExpression	len & 0xff		159756	1		&			
ANR	159836	Identifier	len		159756	0					
ANR	159837	PrimaryExpression	0xff		159756	1					
ANR	159838	ReturnStatement	"return tlvWriteOctetString ( f , buf , 4 ) ;"	210:1:5301:5338	159756	9	True				
ANR	159839	CallExpression	"tlvWriteOctetString ( f , buf , 4 )"		159756	0					
ANR	159840	Callee	tlvWriteOctetString		159756	0					
ANR	159841	Identifier	tlvWriteOctetString		159756	0					
ANR	159842	ArgumentList	f		159756	1					
ANR	159843	Argument	f		159756	0					
ANR	159844	Identifier	f		159756	0					
ANR	159845	Argument	buf		159756	1					
ANR	159846	Identifier	buf		159756	0					
ANR	159847	Argument	4		159756	2					
ANR	159848	PrimaryExpression	4		159756	0					
ANR	159849	ReturnType	static int		159756	1					
ANR	159850	Identifier	tlvWriteHeader16		159756	2					
ANR	159851	ParameterList	"FILE * f , int flags , uint16_t tlvtype , uint16_t len"		159756	3					
ANR	159852	Parameter	FILE * f	197:17:4962:4968	159756	0	True				
ANR	159853	ParameterType	FILE *		159756	0					
ANR	159854	Identifier	f		159756	1					
ANR	159855	Parameter	int flags	197:26:4971:4979	159756	1	True				
ANR	159856	ParameterType	int		159756	0					
ANR	159857	Identifier	flags		159756	1					
ANR	159858	Parameter	uint16_t tlvtype	197:37:4982:4997	159756	2	True				
ANR	159859	ParameterType	uint16_t		159756	0					
ANR	159860	Identifier	tlvtype		159756	1					
ANR	159861	Parameter	uint16_t len	197:55:5000:5011	159756	3	True				
ANR	159862	ParameterType	uint16_t		159756	0					
ANR	159863	Identifier	len		159756	1					
ANR	159864	CFGEntryNode	ENTRY		159756		True				
ANR	159865	CFGExitNode	EXIT		159756		True				
ANR	159866	Symbol	buf		159756						
ANR	159867	Symbol	RSGT_TYPE_MASK		159756						
ANR	159868	Symbol	* buf		159756						
ANR	159869	Symbol	len		159756						
ANR	159870	Symbol	f		159756						
ANR	159871	Symbol	flags		159756						
ANR	159872	Symbol	typ		159756						
ANR	159873	Symbol	tlvtype		159756						
ANR	159874	Symbol	RSGT_FLAG_TLV16		159756						
ANR	159875	Symbol	tlvWriteOctetString		159756						
ANR	159876	Function	tlvGetHeaderSize	213:0:5343:5532							
ANR	159877	FunctionDef	"tlvGetHeaderSize (uint16_t tag , size_t size)"		159876	0					
ANR	159878	CompoundStatement		214:44:5398:5532	159876	0					
ANR	159879	IfStatement	if ( tag <= RSGT_TYPE_MASK && size <= 0xff )		159876	0					
ANR	159880	Condition	tag <= RSGT_TYPE_MASK && size <= 0xff	215:5:5405:5441	159876	0	True				
ANR	159881	AndExpression	tag <= RSGT_TYPE_MASK && size <= 0xff		159876	0		&&			
ANR	159882	RelationalExpression	tag <= RSGT_TYPE_MASK		159876	0		<=			
ANR	159883	Identifier	tag		159876	0					
ANR	159884	Identifier	RSGT_TYPE_MASK		159876	1					
ANR	159885	RelationalExpression	size <= 0xff		159876	1		<=			
ANR	159886	Identifier	size		159876	0					
ANR	159887	PrimaryExpression	0xff		159876	1					
ANR	159888	ReturnStatement	return 2 ;	216:2:5446:5454	159876	1	True				
ANR	159889	PrimaryExpression	2		159876	0					
ANR	159890	IfStatement	if ( ( tag >> 8 ) <= RSGT_TYPE_MASK && size <= 0xffff )		159876	1					
ANR	159891	Condition	( tag >> 8 ) <= RSGT_TYPE_MASK && size <= 0xffff	217:5:5461:5506	159876	0	True				
ANR	159892	AndExpression	( tag >> 8 ) <= RSGT_TYPE_MASK && size <= 0xffff		159876	0		&&			
ANR	159893	RelationalExpression	( tag >> 8 ) <= RSGT_TYPE_MASK		159876	0		<=			
ANR	159894	ShiftExpression	tag >> 8		159876	0		>>			
ANR	159895	Identifier	tag		159876	0					
ANR	159896	PrimaryExpression	8		159876	1					
ANR	159897	Identifier	RSGT_TYPE_MASK		159876	1					
ANR	159898	RelationalExpression	size <= 0xffff		159876	1		<=			
ANR	159899	Identifier	size		159876	0					
ANR	159900	PrimaryExpression	0xffff		159876	1					
ANR	159901	ReturnStatement	return 4 ;	218:2:5511:5519	159876	1	True				
ANR	159902	PrimaryExpression	4		159876	0					
ANR	159903	ReturnStatement	return 0 ;	219:1:5522:5530	159876	2	True				
ANR	159904	PrimaryExpression	0		159876	0					
ANR	159905	ReturnType	static int		159876	1					
ANR	159906	Identifier	tlvGetHeaderSize		159876	2					
ANR	159907	ParameterList	"uint16_t tag , size_t size"		159876	3					
ANR	159908	Parameter	uint16_t tag	214:17:5371:5382	159876	0	True				
ANR	159909	ParameterType	uint16_t		159876	0					
ANR	159910	Identifier	tag		159876	1					
ANR	159911	Parameter	size_t size	214:31:5385:5395	159876	1	True				
ANR	159912	ParameterType	size_t		159876	0					
ANR	159913	Identifier	size		159876	1					
ANR	159914	CFGEntryNode	ENTRY		159876		True				
ANR	159915	CFGExitNode	EXIT		159876		True				
ANR	159916	Symbol	RSGT_TYPE_MASK		159876						
ANR	159917	Symbol	size		159876						
ANR	159918	Symbol	tag		159876						
ANR	159919	Function	tlvWriteHeader	222:0:5535:5835							
ANR	159920	FunctionDef	"tlvWriteHeader (FILE * f , int flags , uint16_t tlvtype , uint16_t len)"		159919	0					
ANR	159921	CompoundStatement		223:67:5613:5835	159919	0					
ANR	159922	IdentifierDeclStatement	"int headersize = tlvGetHeaderSize ( tlvtype , flags ) ;"	224:1:5616:5665	159919	0	True				
ANR	159923	IdentifierDecl	"headersize = tlvGetHeaderSize ( tlvtype , flags )"		159919	0					
ANR	159924	IdentifierDeclType	int		159919	0					
ANR	159925	Identifier	headersize		159919	1					
ANR	159926	AssignmentExpression	"headersize = tlvGetHeaderSize ( tlvtype , flags )"		159919	2		=			
ANR	159927	Identifier	headersize		159919	0					
ANR	159928	CallExpression	"tlvGetHeaderSize ( tlvtype , flags )"		159919	1					
ANR	159929	Callee	tlvGetHeaderSize		159919	0					
ANR	159930	Identifier	tlvGetHeaderSize		159919	0					
ANR	159931	ArgumentList	tlvtype		159919	1					
ANR	159932	Argument	tlvtype		159919	0					
ANR	159933	Identifier	tlvtype		159919	0					
ANR	159934	Argument	flags		159919	1					
ANR	159935	Identifier	flags		159919	0					
ANR	159936	IfStatement	if ( headersize == 2 )		159919	1					
ANR	159937	Condition	headersize == 2	225:5:5672:5686	159919	0	True				
ANR	159938	EqualityExpression	headersize == 2		159919	0		==			
ANR	159939	Identifier	headersize		159919	0					
ANR	159940	PrimaryExpression	2		159919	1					
ANR	159941	ReturnStatement	"return tlvWriteHeader8 ( f , flags , tlvtype , len ) ;"	226:2:5691:5737	159919	1	True				
ANR	159942	CallExpression	"tlvWriteHeader8 ( f , flags , tlvtype , len )"		159919	0					
ANR	159943	Callee	tlvWriteHeader8		159919	0					
ANR	159944	Identifier	tlvWriteHeader8		159919	0					
ANR	159945	ArgumentList	f		159919	1					
ANR	159946	Argument	f		159919	0					
ANR	159947	Identifier	f		159919	0					
ANR	159948	Argument	flags		159919	1					
ANR	159949	Identifier	flags		159919	0					
ANR	159950	Argument	tlvtype		159919	2					
ANR	159951	Identifier	tlvtype		159919	0					
ANR	159952	Argument	len		159919	3					
ANR	159953	Identifier	len		159919	0					
ANR	159954	ElseStatement	else		159919	0					
ANR	159955	IfStatement	if ( headersize == 4 )		159919	0					
ANR	159956	Condition	headersize == 4	227:10:5749:5763	159919	0	True				
ANR	159957	EqualityExpression	headersize == 4		159919	0		==			
ANR	159958	Identifier	headersize		159919	0					
ANR	159959	PrimaryExpression	4		159919	1					
ANR	159960	ReturnStatement	"return tlvWriteHeader16 ( f , flags , tlvtype , len ) ;"	228:2:5768:5815	159919	1	True				
ANR	159961	CallExpression	"tlvWriteHeader16 ( f , flags , tlvtype , len )"		159919	0					
ANR	159962	Callee	tlvWriteHeader16		159919	0					
ANR	159963	Identifier	tlvWriteHeader16		159919	0					
ANR	159964	ArgumentList	f		159919	1					
ANR	159965	Argument	f		159919	0					
ANR	159966	Identifier	f		159919	0					
ANR	159967	Argument	flags		159919	1					
ANR	159968	Identifier	flags		159919	0					
ANR	159969	Argument	tlvtype		159919	2					
ANR	159970	Identifier	tlvtype		159919	0					
ANR	159971	Argument	len		159919	3					
ANR	159972	Identifier	len		159919	0					
ANR	159973	ElseStatement	else		159919	0					
ANR	159974	ReturnStatement	return 0 ;	230:2:5825:5833	159919	0	True				
ANR	159975	PrimaryExpression	0		159919	0					
ANR	159976	ReturnType	static int		159919	1					
ANR	159977	Identifier	tlvWriteHeader		159919	2					
ANR	159978	ParameterList	"FILE * f , int flags , uint16_t tlvtype , uint16_t len"		159919	3					
ANR	159979	Parameter	FILE * f	223:15:5561:5567	159919	0	True				
ANR	159980	ParameterType	FILE *		159919	0					
ANR	159981	Identifier	f		159919	1					
ANR	159982	Parameter	int flags	223:24:5570:5578	159919	1	True				
ANR	159983	ParameterType	int		159919	0					
ANR	159984	Identifier	flags		159919	1					
ANR	159985	Parameter	uint16_t tlvtype	223:35:5581:5596	159919	2	True				
ANR	159986	ParameterType	uint16_t		159919	0					
ANR	159987	Identifier	tlvtype		159919	1					
ANR	159988	Parameter	uint16_t len	223:53:5599:5610	159919	3	True				
ANR	159989	ParameterType	uint16_t		159919	0					
ANR	159990	Identifier	len		159919	1					
ANR	159991	CFGEntryNode	ENTRY		159919		True				
ANR	159992	CFGExitNode	EXIT		159919		True				
ANR	159993	Symbol	headersize		159919						
ANR	159994	Symbol	len		159919						
ANR	159995	Symbol	tlvGetHeaderSize		159919						
ANR	159996	Symbol	f		159919						
ANR	159997	Symbol	flags		159919						
ANR	159998	Symbol	tlvtype		159919						
ANR	159999	Symbol	tlvWriteHeader8		159919						
ANR	160000	Symbol	tlvWriteHeader16		159919						
ANR	160001	Function	tlvWriteOctetStringTLV	233:0:5838:6083							
ANR	160002	FunctionDef	"tlvWriteOctetStringTLV (FILE * f , int flags , uint16_t tlvtype , const uint8_t * data , uint16_t len)"		160001	0					
ANR	160003	CompoundStatement		234:96:5945:6083	160001	0					
ANR	160004	IfStatement	"if ( tlvWriteHeader ( f , flags , tlvtype , len ) != 0 )"		160001	0					
ANR	160005	Condition	"tlvWriteHeader ( f , flags , tlvtype , len ) != 0"	235:5:5952:5994	160001	0	True				
ANR	160006	EqualityExpression	"tlvWriteHeader ( f , flags , tlvtype , len ) != 0"		160001	0		!=			
ANR	160007	CallExpression	"tlvWriteHeader ( f , flags , tlvtype , len )"		160001	0					
ANR	160008	Callee	tlvWriteHeader		160001	0					
ANR	160009	Identifier	tlvWriteHeader		160001	0					
ANR	160010	ArgumentList	f		160001	1					
ANR	160011	Argument	f		160001	0					
ANR	160012	Identifier	f		160001	0					
ANR	160013	Argument	flags		160001	1					
ANR	160014	Identifier	flags		160001	0					
ANR	160015	Argument	tlvtype		160001	2					
ANR	160016	Identifier	tlvtype		160001	0					
ANR	160017	Argument	len		160001	3					
ANR	160018	Identifier	len		160001	0					
ANR	160019	PrimaryExpression	0		160001	1					
ANR	160020	ReturnStatement	return RSGTE_IO ;	236:2:5999:6014	160001	1	True				
ANR	160021	Identifier	RSGTE_IO		160001	0					
ANR	160022	IfStatement	"if ( fwrite ( data , len , 1 , f ) != 1 )"		160001	1					
ANR	160023	Condition	"fwrite ( data , len , 1 , f ) != 1"	238:5:6022:6049	160001	0	True				
ANR	160024	EqualityExpression	"fwrite ( data , len , 1 , f ) != 1"		160001	0		!=			
ANR	160025	CallExpression	"fwrite ( data , len , 1 , f )"		160001	0					
ANR	160026	Callee	fwrite		160001	0					
ANR	160027	Identifier	fwrite		160001	0					
ANR	160028	ArgumentList	data		160001	1					
ANR	160029	Argument	data		160001	0					
ANR	160030	Identifier	data		160001	0					
ANR	160031	Argument	len		160001	1					
ANR	160032	Identifier	len		160001	0					
ANR	160033	Argument	1		160001	2					
ANR	160034	PrimaryExpression	1		160001	0					
ANR	160035	Argument	f		160001	3					
ANR	160036	Identifier	f		160001	0					
ANR	160037	PrimaryExpression	1		160001	1					
ANR	160038	ReturnStatement	return RSGTE_IO ;	239:2:6054:6069	160001	1	True				
ANR	160039	Identifier	RSGTE_IO		160001	0					
ANR	160040	ReturnStatement	return 0 ;	241:1:6073:6081	160001	2	True				
ANR	160041	PrimaryExpression	0		160001	0					
ANR	160042	ReturnType	static int		160001	1					
ANR	160043	Identifier	tlvWriteOctetStringTLV		160001	2					
ANR	160044	ParameterList	"FILE * f , int flags , uint16_t tlvtype , const uint8_t * data , uint16_t len"		160001	3					
ANR	160045	Parameter	FILE * f	234:23:5872:5878	160001	0	True				
ANR	160046	ParameterType	FILE *		160001	0					
ANR	160047	Identifier	f		160001	1					
ANR	160048	Parameter	int flags	234:32:5881:5889	160001	1	True				
ANR	160049	ParameterType	int		160001	0					
ANR	160050	Identifier	flags		160001	1					
ANR	160051	Parameter	uint16_t tlvtype	234:43:5892:5907	160001	2	True				
ANR	160052	ParameterType	uint16_t		160001	0					
ANR	160053	Identifier	tlvtype		160001	1					
ANR	160054	Parameter	const uint8_t * data	234:61:5910:5928	160001	3	True				
ANR	160055	ParameterType	const uint8_t *		160001	0					
ANR	160056	Identifier	data		160001	1					
ANR	160057	Parameter	uint16_t len	234:82:5931:5942	160001	4	True				
ANR	160058	ParameterType	uint16_t		160001	0					
ANR	160059	Identifier	len		160001	1					
ANR	160060	CFGEntryNode	ENTRY		160001		True				
ANR	160061	CFGExitNode	EXIT		160001		True				
ANR	160062	Symbol	tlvWriteHeader		160001						
ANR	160063	Symbol	RSGTE_IO		160001						
ANR	160064	Symbol	data		160001						
ANR	160065	Symbol	len		160001						
ANR	160066	Symbol	f		160001						
ANR	160067	Symbol	flags		160001						
ANR	160068	Symbol	fwrite		160001						
ANR	160069	Symbol	tlvtype		160001						
ANR	160070	Function	tlvWriteInt64TLV	244:0:6086:6485							
ANR	160071	FunctionDef	"tlvWriteInt64TLV (FILE * f , int flags , uint16_t tlvtype , uint64_t val)"		160070	0					
ANR	160072	CompoundStatement		245:69:6166:6485	160070	0					
ANR	160073	IdentifierDeclStatement	unsigned char buf [ 8 ] ;	246:1:6169:6189	160070	0	True				
ANR	160074	IdentifierDecl	buf [ 8 ]		160070	0					
ANR	160075	IdentifierDeclType	unsigned char [ 8 ]		160070	0					
ANR	160076	Identifier	buf		160070	1					
ANR	160077	PrimaryExpression	8		160070	2					
ANR	160078	IdentifierDeclStatement	uint8_t count = tlvGetIntSize ( val ) ;	247:1:6192:6226	160070	1	True				
ANR	160079	IdentifierDecl	count = tlvGetIntSize ( val )		160070	0					
ANR	160080	IdentifierDeclType	uint8_t		160070	0					
ANR	160081	Identifier	count		160070	1					
ANR	160082	AssignmentExpression	count = tlvGetIntSize ( val )		160070	2		=			
ANR	160083	Identifier	count		160070	0					
ANR	160084	CallExpression	tlvGetIntSize ( val )		160070	1					
ANR	160085	Callee	tlvGetIntSize		160070	0					
ANR	160086	Identifier	tlvGetIntSize		160070	0					
ANR	160087	ArgumentList	val		160070	1					
ANR	160088	Argument	val		160070	0					
ANR	160089	Identifier	val		160070	0					
ANR	160090	IdentifierDeclStatement	uint64_t nTmp ;	248:1:6229:6242	160070	2	True				
ANR	160091	IdentifierDecl	nTmp		160070	0					
ANR	160092	IdentifierDeclType	uint64_t		160070	0					
ANR	160093	Identifier	nTmp		160070	1					
ANR	160094	IfStatement	"if ( tlvWriteHeader ( f , flags , tlvtype , count ) != 0 )"		160070	3					
ANR	160095	Condition	"tlvWriteHeader ( f , flags , tlvtype , count ) != 0"	250:5:6250:6294	160070	0	True				
ANR	160096	EqualityExpression	"tlvWriteHeader ( f , flags , tlvtype , count ) != 0"		160070	0		!=			
ANR	160097	CallExpression	"tlvWriteHeader ( f , flags , tlvtype , count )"		160070	0					
ANR	160098	Callee	tlvWriteHeader		160070	0					
ANR	160099	Identifier	tlvWriteHeader		160070	0					
ANR	160100	ArgumentList	f		160070	1					
ANR	160101	Argument	f		160070	0					
ANR	160102	Identifier	f		160070	0					
ANR	160103	Argument	flags		160070	1					
ANR	160104	Identifier	flags		160070	0					
ANR	160105	Argument	tlvtype		160070	2					
ANR	160106	Identifier	tlvtype		160070	0					
ANR	160107	Argument	count		160070	3					
ANR	160108	Identifier	count		160070	0					
ANR	160109	PrimaryExpression	0		160070	1					
ANR	160110	ReturnStatement	return RSGTE_IO ;	251:2:6299:6314	160070	1	True				
ANR	160111	Identifier	RSGTE_IO		160070	0					
ANR	160112	ExpressionStatement	nTmp = val	253:1:6318:6328	160070	4	True				
ANR	160113	AssignmentExpression	nTmp = val		160070	0		=			
ANR	160114	Identifier	nTmp		160070	0					
ANR	160115	Identifier	val		160070	1					
ANR	160116	ForStatement	for ( int i = count - 1 ; i >= 0 ; i -- )		160070	5					
ANR	160117	ForInit	int i = count - 1 ;	254:6:6336:6353	160070	0	True				
ANR	160118	IdentifierDeclStatement	int i = count - 1 ;		160070	0					
ANR	160119	IdentifierDecl	i = count - 1		160070	0					
ANR	160120	IdentifierDeclType	int		160070	0					
ANR	160121	Identifier	i		160070	1					
ANR	160122	AssignmentExpression	i = count - 1		160070	2		=			
ANR	160123	Identifier	i		160070	0					
ANR	160124	AdditiveExpression	count - 1		160070	1		-			
ANR	160125	Identifier	count		160070	0					
ANR	160126	PrimaryExpression	1		160070	1					
ANR	160127	Condition	i >= 0	254:25:6355:6360	160070	1	True				
ANR	160128	RelationalExpression	i >= 0		160070	0		>=			
ANR	160129	Identifier	i		160070	0					
ANR	160130	PrimaryExpression	0		160070	1					
ANR	160131	PostIncDecOperationExpression	i --	254:33:6363:6365	160070	2	True				
ANR	160132	Identifier	i		160070	0					
ANR	160133	IncDec	--		160070	1					
ANR	160134	CompoundStatement		10:38:201:201	160070	3					
ANR	160135	ExpressionStatement	buf [ i ] = 0xFF & nTmp	255:2:6372:6392	160070	0	True				
ANR	160136	AssignmentExpression	buf [ i ] = 0xFF & nTmp		160070	0		=			
ANR	160137	ArrayIndexing	buf [ i ]		160070	0					
ANR	160138	Identifier	buf		160070	0					
ANR	160139	Identifier	i		160070	1					
ANR	160140	BitAndExpression	0xFF & nTmp		160070	1		&			
ANR	160141	PrimaryExpression	0xFF		160070	0					
ANR	160142	Identifier	nTmp		160070	1					
ANR	160143	ExpressionStatement	nTmp = nTmp >> 8	256:2:6396:6412	160070	1	True				
ANR	160144	AssignmentExpression	nTmp = nTmp >> 8		160070	0		=			
ANR	160145	Identifier	nTmp		160070	0					
ANR	160146	ShiftExpression	nTmp >> 8		160070	1		>>			
ANR	160147	Identifier	nTmp		160070	0					
ANR	160148	PrimaryExpression	8		160070	1					
ANR	160149	IfStatement	"if ( fwrite ( buf , count , 1 , f ) != 1 )"		160070	6					
ANR	160150	Condition	"fwrite ( buf , count , 1 , f ) != 1"	259:5:6423:6451	160070	0	True				
ANR	160151	EqualityExpression	"fwrite ( buf , count , 1 , f ) != 1"		160070	0		!=			
ANR	160152	CallExpression	"fwrite ( buf , count , 1 , f )"		160070	0					
ANR	160153	Callee	fwrite		160070	0					
ANR	160154	Identifier	fwrite		160070	0					
ANR	160155	ArgumentList	buf		160070	1					
ANR	160156	Argument	buf		160070	0					
ANR	160157	Identifier	buf		160070	0					
ANR	160158	Argument	count		160070	1					
ANR	160159	Identifier	count		160070	0					
ANR	160160	Argument	1		160070	2					
ANR	160161	PrimaryExpression	1		160070	0					
ANR	160162	Argument	f		160070	3					
ANR	160163	Identifier	f		160070	0					
ANR	160164	PrimaryExpression	1		160070	1					
ANR	160165	ReturnStatement	return RSGTE_IO ;	260:2:6456:6471	160070	1	True				
ANR	160166	Identifier	RSGTE_IO		160070	0					
ANR	160167	ReturnStatement	return 0 ;	262:1:6475:6483	160070	7	True				
ANR	160168	PrimaryExpression	0		160070	0					
ANR	160169	ReturnType	static int		160070	1					
ANR	160170	Identifier	tlvWriteInt64TLV		160070	2					
ANR	160171	ParameterList	"FILE * f , int flags , uint16_t tlvtype , uint64_t val"		160070	3					
ANR	160172	Parameter	FILE * f	245:17:6114:6120	160070	0	True				
ANR	160173	ParameterType	FILE *		160070	0					
ANR	160174	Identifier	f		160070	1					
ANR	160175	Parameter	int flags	245:26:6123:6131	160070	1	True				
ANR	160176	ParameterType	int		160070	0					
ANR	160177	Identifier	flags		160070	1					
ANR	160178	Parameter	uint16_t tlvtype	245:37:6134:6149	160070	2	True				
ANR	160179	ParameterType	uint16_t		160070	0					
ANR	160180	Identifier	tlvtype		160070	1					
ANR	160181	Parameter	uint64_t val	245:55:6152:6163	160070	3	True				
ANR	160182	ParameterType	uint64_t		160070	0					
ANR	160183	Identifier	val		160070	1					
ANR	160184	CFGEntryNode	ENTRY		160070		True				
ANR	160185	CFGExitNode	EXIT		160070		True				
ANR	160186	Symbol	val		160070						
ANR	160187	Symbol	RSGTE_IO		160070						
ANR	160188	Symbol	* buf		160070						
ANR	160189	Symbol	f		160070						
ANR	160190	Symbol	flags		160070						
ANR	160191	Symbol	count		160070						
ANR	160192	Symbol	i		160070						
ANR	160193	Symbol	fwrite		160070						
ANR	160194	Symbol	tlvtype		160070						
ANR	160195	Symbol	tlvWriteHeader		160070						
ANR	160196	Symbol	buf		160070						
ANR	160197	Symbol	* i		160070						
ANR	160198	Symbol	nTmp		160070						
ANR	160199	Symbol	tlvGetIntSize		160070						
ANR	160200	Function	tlvWriteHashKSI	265:0:6488:6868							
ANR	160201	FunctionDef	"tlvWriteHashKSI (ksifile ksi , uint16_t tlvtype , KSI_DataHash * rec)"		160200	0					
ANR	160202	CompoundStatement		266:66:6565:6868	160200	0					
ANR	160203	IdentifierDeclStatement	int r ;	267:1:6568:6573	160200	0	True				
ANR	160204	IdentifierDecl	r		160200	0					
ANR	160205	IdentifierDeclType	int		160200	0					
ANR	160206	Identifier	r		160200	1					
ANR	160207	IdentifierDeclStatement	const unsigned char * imprint ;	268:1:6576:6604	160200	1	True				
ANR	160208	IdentifierDecl	* imprint		160200	0					
ANR	160209	IdentifierDeclType	const unsigned char *		160200	0					
ANR	160210	Identifier	imprint		160200	1					
ANR	160211	IdentifierDeclStatement	size_t imprint_len ;	269:1:6607:6625	160200	2	True				
ANR	160212	IdentifierDecl	imprint_len		160200	0					
ANR	160213	IdentifierDeclType	size_t		160200	0					
ANR	160214	Identifier	imprint_len		160200	1					
ANR	160215	ExpressionStatement	"r = KSI_DataHash_getImprint ( rec , & imprint , & imprint_len )"	270:1:6628:6684	160200	3	True				
ANR	160216	AssignmentExpression	"r = KSI_DataHash_getImprint ( rec , & imprint , & imprint_len )"		160200	0		=			
ANR	160217	Identifier	r		160200	0					
ANR	160218	CallExpression	"KSI_DataHash_getImprint ( rec , & imprint , & imprint_len )"		160200	1					
ANR	160219	Callee	KSI_DataHash_getImprint		160200	0					
ANR	160220	Identifier	KSI_DataHash_getImprint		160200	0					
ANR	160221	ArgumentList	rec		160200	1					
ANR	160222	Argument	rec		160200	0					
ANR	160223	Identifier	rec		160200	0					
ANR	160224	Argument	& imprint		160200	1					
ANR	160225	UnaryOperationExpression	& imprint		160200	0					
ANR	160226	UnaryOperator	&		160200	0					
ANR	160227	Identifier	imprint		160200	1					
ANR	160228	Argument	& imprint_len		160200	2					
ANR	160229	UnaryOperationExpression	& imprint_len		160200	0					
ANR	160230	UnaryOperator	&		160200	0					
ANR	160231	Identifier	imprint_len		160200	1					
ANR	160232	IfStatement	if ( r != KSI_OK )		160200	4					
ANR	160233	Condition	r != KSI_OK	271:5:6691:6701	160200	0	True				
ANR	160234	EqualityExpression	r != KSI_OK		160200	0		!=			
ANR	160235	Identifier	r		160200	0					
ANR	160236	Identifier	KSI_OK		160200	1					
ANR	160237	CompoundStatement		6:18:138:138	160200	1					
ANR	160238	ExpressionStatement	"reportKSIAPIErr ( ksi -> ctx , ksi , ""KSI_DataHash_getImprint"" , r )"	272:2:6708:6768	160200	0	True				
ANR	160239	CallExpression	"reportKSIAPIErr ( ksi -> ctx , ksi , ""KSI_DataHash_getImprint"" , r )"		160200	0					
ANR	160240	Callee	reportKSIAPIErr		160200	0					
ANR	160241	Identifier	reportKSIAPIErr		160200	0					
ANR	160242	ArgumentList	ksi -> ctx		160200	1					
ANR	160243	Argument	ksi -> ctx		160200	0					
ANR	160244	PtrMemberAccess	ksi -> ctx		160200	0					
ANR	160245	Identifier	ksi		160200	0					
ANR	160246	Identifier	ctx		160200	1					
ANR	160247	Argument	ksi		160200	1					
ANR	160248	Identifier	ksi		160200	0					
ANR	160249	Argument	"""KSI_DataHash_getImprint"""		160200	2					
ANR	160250	PrimaryExpression	"""KSI_DataHash_getImprint"""		160200	0					
ANR	160251	Argument	r		160200	3					
ANR	160252	Identifier	r		160200	0					
ANR	160253	ReturnStatement	return r ;	273:2:6772:6780	160200	1	True				
ANR	160254	Identifier	r		160200	0					
ANR	160255	ReturnStatement	"return tlvWriteOctetStringTLV ( ksi -> blockFile , 0 , tlvtype , imprint , imprint_len ) ;"	276:1:6787:6866	160200	5	True				
ANR	160256	CallExpression	"tlvWriteOctetStringTLV ( ksi -> blockFile , 0 , tlvtype , imprint , imprint_len )"		160200	0					
ANR	160257	Callee	tlvWriteOctetStringTLV		160200	0					
ANR	160258	Identifier	tlvWriteOctetStringTLV		160200	0					
ANR	160259	ArgumentList	ksi -> blockFile		160200	1					
ANR	160260	Argument	ksi -> blockFile		160200	0					
ANR	160261	PtrMemberAccess	ksi -> blockFile		160200	0					
ANR	160262	Identifier	ksi		160200	0					
ANR	160263	Identifier	blockFile		160200	1					
ANR	160264	Argument	0		160200	1					
ANR	160265	PrimaryExpression	0		160200	0					
ANR	160266	Argument	tlvtype		160200	2					
ANR	160267	Identifier	tlvtype		160200	0					
ANR	160268	Argument	imprint		160200	3					
ANR	160269	Identifier	imprint		160200	0					
ANR	160270	Argument	imprint_len		160200	4					
ANR	160271	Identifier	imprint_len		160200	0					
ANR	160272	ReturnType	static int		160200	1					
ANR	160273	Identifier	tlvWriteHashKSI		160200	2					
ANR	160274	ParameterList	"ksifile ksi , uint16_t tlvtype , KSI_DataHash * rec"		160200	3					
ANR	160275	Parameter	ksifile ksi	266:16:6515:6525	160200	0	True				
ANR	160276	ParameterType	ksifile		160200	0					
ANR	160277	Identifier	ksi		160200	1					
ANR	160278	Parameter	uint16_t tlvtype	266:29:6528:6543	160200	1	True				
ANR	160279	ParameterType	uint16_t		160200	0					
ANR	160280	Identifier	tlvtype		160200	1					
ANR	160281	Parameter	KSI_DataHash * rec	266:47:6546:6562	160200	2	True				
ANR	160282	ParameterType	KSI_DataHash *		160200	0					
ANR	160283	Identifier	rec		160200	1					
ANR	160284	CFGEntryNode	ENTRY		160200		True				
ANR	160285	CFGExitNode	EXIT		160200		True				
ANR	160286	Symbol	ksi		160200						
ANR	160287	Symbol	ksi -> ctx		160200						
ANR	160288	Symbol	imprint_len		160200						
ANR	160289	Symbol	& imprint_len		160200						
ANR	160290	Symbol	imprint		160200						
ANR	160291	Symbol	KSI_DataHash_getImprint		160200						
ANR	160292	Symbol	tlvtype		160200						
ANR	160293	Symbol	* ksi		160200						
ANR	160294	Symbol	tlvWriteOctetStringTLV		160200						
ANR	160295	Symbol	rec		160200						
ANR	160296	Symbol	r		160200						
ANR	160297	Symbol	& imprint		160200						
ANR	160298	Symbol	KSI_OK		160200						
ANR	160299	Symbol	ksi -> blockFile		160200						
ANR	160300	Function	tlvWriteBlockHdrKSI	279:0:6871:7602							
ANR	160301	FunctionDef	tlvWriteBlockHdrKSI (ksifile ksi)		160300	0					
ANR	160302	CompoundStatement		280:33:6915:7602	160300	0					
ANR	160303	IdentifierDeclStatement	unsigned tlvlen ;	281:1:6918:6933	160300	0	True				
ANR	160304	IdentifierDecl	tlvlen		160300	0					
ANR	160305	IdentifierDeclType	unsigned		160300	0					
ANR	160306	Identifier	tlvlen		160300	1					
ANR	160307	IdentifierDeclStatement	uint8_t hash_algo = ksi -> hashAlg ;	282:1:6936:6968	160300	1	True				
ANR	160308	IdentifierDecl	hash_algo = ksi -> hashAlg		160300	0					
ANR	160309	IdentifierDeclType	uint8_t		160300	0					
ANR	160310	Identifier	hash_algo		160300	1					
ANR	160311	AssignmentExpression	hash_algo = ksi -> hashAlg		160300	2		=			
ANR	160312	Identifier	hash_algo		160300	0					
ANR	160313	PtrMemberAccess	ksi -> hashAlg		160300	1					
ANR	160314	Identifier	ksi		160300	0					
ANR	160315	Identifier	hashAlg		160300	1					
ANR	160316	IdentifierDeclStatement	int r ;	283:1:6971:6976	160300	2	True				
ANR	160317	IdentifierDecl	r		160300	0					
ANR	160318	IdentifierDeclType	int		160300	0					
ANR	160319	Identifier	r		160300	1					
ANR	160320	ExpressionStatement	tlvlen = 2 + 1 + 2 + KSI_getHashLength ( ksi -> hashAlg ) + 2 + KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1	285:1:6980:7112	160300	3	True				
ANR	160321	AssignmentExpression	tlvlen = 2 + 1 + 2 + KSI_getHashLength ( ksi -> hashAlg ) + 2 + KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1		160300	0		=			
ANR	160322	Identifier	tlvlen		160300	0					
ANR	160323	AdditiveExpression	2 + 1 + 2 + KSI_getHashLength ( ksi -> hashAlg ) + 2 + KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1		160300	1		+			
ANR	160324	PrimaryExpression	2		160300	0					
ANR	160325	AdditiveExpression	1 + 2 + KSI_getHashLength ( ksi -> hashAlg ) + 2 + KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1		160300	1		+			
ANR	160326	PrimaryExpression	1		160300	0					
ANR	160327	AdditiveExpression	2 + KSI_getHashLength ( ksi -> hashAlg ) + 2 + KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1		160300	1		+			
ANR	160328	PrimaryExpression	2		160300	0					
ANR	160329	AdditiveExpression	KSI_getHashLength ( ksi -> hashAlg ) + 2 + KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1		160300	1		+			
ANR	160330	CallExpression	KSI_getHashLength ( ksi -> hashAlg )		160300	0					
ANR	160331	Callee	KSI_getHashLength		160300	0					
ANR	160332	Identifier	KSI_getHashLength		160300	0					
ANR	160333	ArgumentList	ksi -> hashAlg		160300	1					
ANR	160334	Argument	ksi -> hashAlg		160300	0					
ANR	160335	PtrMemberAccess	ksi -> hashAlg		160300	0					
ANR	160336	Identifier	ksi		160300	0					
ANR	160337	Identifier	hashAlg		160300	1					
ANR	160338	AdditiveExpression	2 + KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1		160300	1		+			
ANR	160339	PrimaryExpression	2		160300	0					
ANR	160340	AdditiveExpression	KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1		160300	1		+			
ANR	160341	CallExpression	KSI_getHashLength ( ksi -> lastLeaf [ 0 ] )		160300	0					
ANR	160342	Callee	KSI_getHashLength		160300	0					
ANR	160343	Identifier	KSI_getHashLength		160300	0					
ANR	160344	ArgumentList	ksi -> lastLeaf [ 0 ]		160300	1					
ANR	160345	Argument	ksi -> lastLeaf [ 0 ]		160300	0					
ANR	160346	ArrayIndexing	ksi -> lastLeaf [ 0 ]		160300	0					
ANR	160347	PtrMemberAccess	ksi -> lastLeaf		160300	0					
ANR	160348	Identifier	ksi		160300	0					
ANR	160349	Identifier	lastLeaf		160300	1					
ANR	160350	PrimaryExpression	0		160300	1					
ANR	160351	PrimaryExpression	1		160300	1					
ANR	160352	ExpressionStatement		288:16:7130:7130	160300	4	True				
ANR	160353	ExpressionStatement	"CHKr ( tlvWriteHeader ( ksi -> blockFile , 0x00 , 0x0901 , tlvlen ) )"	291:1:7178:7236	160300	5	True				
ANR	160354	CallExpression	"CHKr ( tlvWriteHeader ( ksi -> blockFile , 0x00 , 0x0901 , tlvlen ) )"		160300	0					
ANR	160355	Callee	CHKr		160300	0					
ANR	160356	Identifier	CHKr		160300	0					
ANR	160357	ArgumentList	"tlvWriteHeader ( ksi -> blockFile , 0x00 , 0x0901 , tlvlen )"		160300	1					
ANR	160358	Argument	"tlvWriteHeader ( ksi -> blockFile , 0x00 , 0x0901 , tlvlen )"		160300	0					
ANR	160359	CallExpression	"tlvWriteHeader ( ksi -> blockFile , 0x00 , 0x0901 , tlvlen )"		160300	0					
ANR	160360	Callee	tlvWriteHeader		160300	0					
ANR	160361	Identifier	tlvWriteHeader		160300	0					
ANR	160362	ArgumentList	ksi -> blockFile		160300	1					
ANR	160363	Argument	ksi -> blockFile		160300	0					
ANR	160364	PtrMemberAccess	ksi -> blockFile		160300	0					
ANR	160365	Identifier	ksi		160300	0					
ANR	160366	Identifier	blockFile		160300	1					
ANR	160367	Argument	0x00		160300	1					
ANR	160368	PrimaryExpression	0x00		160300	0					
ANR	160369	Argument	0x0901		160300	2					
ANR	160370	PrimaryExpression	0x0901		160300	0					
ANR	160371	Argument	tlvlen		160300	3					
ANR	160372	Identifier	tlvlen		160300	0					
ANR	160373	ExpressionStatement	"CHKr ( tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x01 , & hash_algo , 1 ) )"	294:1:7257:7328	160300	6	True				
ANR	160374	CallExpression	"CHKr ( tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x01 , & hash_algo , 1 ) )"		160300	0					
ANR	160375	Callee	CHKr		160300	0					
ANR	160376	Identifier	CHKr		160300	0					
ANR	160377	ArgumentList	"tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x01 , & hash_algo , 1 )"		160300	1					
ANR	160378	Argument	"tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x01 , & hash_algo , 1 )"		160300	0					
ANR	160379	CallExpression	"tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x01 , & hash_algo , 1 )"		160300	0					
ANR	160380	Callee	tlvWriteOctetStringTLV		160300	0					
ANR	160381	Identifier	tlvWriteOctetStringTLV		160300	0					
ANR	160382	ArgumentList	ksi -> blockFile		160300	1					
ANR	160383	Argument	ksi -> blockFile		160300	0					
ANR	160384	PtrMemberAccess	ksi -> blockFile		160300	0					
ANR	160385	Identifier	ksi		160300	0					
ANR	160386	Identifier	blockFile		160300	1					
ANR	160387	Argument	0x00		160300	1					
ANR	160388	PrimaryExpression	0x00		160300	0					
ANR	160389	Argument	0x01		160300	2					
ANR	160390	PrimaryExpression	0x01		160300	0					
ANR	160391	Argument	& hash_algo		160300	3					
ANR	160392	UnaryOperationExpression	& hash_algo		160300	0					
ANR	160393	UnaryOperator	&		160300	0					
ANR	160394	Identifier	hash_algo		160300	1					
ANR	160395	Argument	1		160300	4					
ANR	160396	PrimaryExpression	1		160300	0					
ANR	160397	ExpressionStatement	"CHKr ( tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x02 , ksi -> IV , KSI_getHashLength ( ksi -> hashAlg ) ) )"	297:1:7348:7448	160300	7	True				
ANR	160398	CallExpression	"CHKr ( tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x02 , ksi -> IV , KSI_getHashLength ( ksi -> hashAlg ) ) )"		160300	0					
ANR	160399	Callee	CHKr		160300	0					
ANR	160400	Identifier	CHKr		160300	0					
ANR	160401	ArgumentList	"tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x02 , ksi -> IV , KSI_getHashLength ( ksi -> hashAlg ) )"		160300	1					
ANR	160402	Argument	"tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x02 , ksi -> IV , KSI_getHashLength ( ksi -> hashAlg ) )"		160300	0					
ANR	160403	CallExpression	"tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x02 , ksi -> IV , KSI_getHashLength ( ksi -> hashAlg ) )"		160300	0					
ANR	160404	Callee	tlvWriteOctetStringTLV		160300	0					
ANR	160405	Identifier	tlvWriteOctetStringTLV		160300	0					
ANR	160406	ArgumentList	ksi -> blockFile		160300	1					
ANR	160407	Argument	ksi -> blockFile		160300	0					
ANR	160408	PtrMemberAccess	ksi -> blockFile		160300	0					
ANR	160409	Identifier	ksi		160300	0					
ANR	160410	Identifier	blockFile		160300	1					
ANR	160411	Argument	0x00		160300	1					
ANR	160412	PrimaryExpression	0x00		160300	0					
ANR	160413	Argument	0x02		160300	2					
ANR	160414	PrimaryExpression	0x02		160300	0					
ANR	160415	Argument	ksi -> IV		160300	3					
ANR	160416	PtrMemberAccess	ksi -> IV		160300	0					
ANR	160417	Identifier	ksi		160300	0					
ANR	160418	Identifier	IV		160300	1					
ANR	160419	Argument	KSI_getHashLength ( ksi -> hashAlg )		160300	4					
ANR	160420	CallExpression	KSI_getHashLength ( ksi -> hashAlg )		160300	0					
ANR	160421	Callee	KSI_getHashLength		160300	0					
ANR	160422	Identifier	KSI_getHashLength		160300	0					
ANR	160423	ArgumentList	ksi -> hashAlg		160300	1					
ANR	160424	Argument	ksi -> hashAlg		160300	0					
ANR	160425	PtrMemberAccess	ksi -> hashAlg		160300	0					
ANR	160426	Identifier	ksi		160300	0					
ANR	160427	Identifier	hashAlg		160300	1					
ANR	160428	ExpressionStatement	"CHKr ( tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x03 , ksi -> lastLeaf , KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1 ) )"	301:1:7469:7583	160300	8	True				
ANR	160429	CallExpression	"CHKr ( tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x03 , ksi -> lastLeaf , KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1 ) )"		160300	0					
ANR	160430	Callee	CHKr		160300	0					
ANR	160431	Identifier	CHKr		160300	0					
ANR	160432	ArgumentList	"tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x03 , ksi -> lastLeaf , KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1 )"		160300	1					
ANR	160433	Argument	"tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x03 , ksi -> lastLeaf , KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1 )"		160300	0					
ANR	160434	CallExpression	"tlvWriteOctetStringTLV ( ksi -> blockFile , 0x00 , 0x03 , ksi -> lastLeaf , KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1 )"		160300	0					
ANR	160435	Callee	tlvWriteOctetStringTLV		160300	0					
ANR	160436	Identifier	tlvWriteOctetStringTLV		160300	0					
ANR	160437	ArgumentList	ksi -> blockFile		160300	1					
ANR	160438	Argument	ksi -> blockFile		160300	0					
ANR	160439	PtrMemberAccess	ksi -> blockFile		160300	0					
ANR	160440	Identifier	ksi		160300	0					
ANR	160441	Identifier	blockFile		160300	1					
ANR	160442	Argument	0x00		160300	1					
ANR	160443	PrimaryExpression	0x00		160300	0					
ANR	160444	Argument	0x03		160300	2					
ANR	160445	PrimaryExpression	0x03		160300	0					
ANR	160446	Argument	ksi -> lastLeaf		160300	3					
ANR	160447	PtrMemberAccess	ksi -> lastLeaf		160300	0					
ANR	160448	Identifier	ksi		160300	0					
ANR	160449	Identifier	lastLeaf		160300	1					
ANR	160450	Argument	KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1		160300	4					
ANR	160451	AdditiveExpression	KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1		160300	0		+			
ANR	160452	CallExpression	KSI_getHashLength ( ksi -> lastLeaf [ 0 ] )		160300	0					
ANR	160453	Callee	KSI_getHashLength		160300	0					
ANR	160454	Identifier	KSI_getHashLength		160300	0					
ANR	160455	ArgumentList	ksi -> lastLeaf [ 0 ]		160300	1					
ANR	160456	Argument	ksi -> lastLeaf [ 0 ]		160300	0					
ANR	160457	ArrayIndexing	ksi -> lastLeaf [ 0 ]		160300	0					
ANR	160458	PtrMemberAccess	ksi -> lastLeaf		160300	0					
ANR	160459	Identifier	ksi		160300	0					
ANR	160460	Identifier	lastLeaf		160300	1					
ANR	160461	PrimaryExpression	0		160300	1					
ANR	160462	PrimaryExpression	1		160300	1					
ANR	160463	Label	done :	303:0:7585:7589	160300	9	True				
ANR	160464	Identifier	done		160300	0					
ANR	160465	ReturnStatement	return r ;	304:1:7592:7600	160300	10	True				
ANR	160466	Identifier	r		160300	0					
ANR	160467	ReturnType	static int		160300	1					
ANR	160468	Identifier	tlvWriteBlockHdrKSI		160300	2					
ANR	160469	ParameterList	ksifile ksi		160300	3					
ANR	160470	Parameter	ksifile ksi	280:20:6902:6912	160300	0	True				
ANR	160471	ParameterType	ksifile		160300	0					
ANR	160472	Identifier	ksi		160300	1					
ANR	160473	CFGEntryNode	ENTRY		160300		True				
ANR	160474	CFGExitNode	EXIT		160300		True				
ANR	160475	Symbol	ksi		160300						
ANR	160476	Symbol	* ksi -> lastLeaf		160300						
ANR	160477	Symbol	& hash_algo		160300						
ANR	160478	Symbol	ksi -> hashAlg		160300						
ANR	160479	Symbol	hash_algo		160300						
ANR	160480	Symbol	* ksi		160300						
ANR	160481	Symbol	tlvlen		160300						
ANR	160482	Symbol	tlvWriteOctetStringTLV		160300						
ANR	160483	Symbol	tlvWriteHeader		160300						
ANR	160484	Symbol	r		160300						
ANR	160485	Symbol	* * ksi		160300						
ANR	160486	Symbol	ksi -> lastLeaf		160300						
ANR	160487	Symbol	KSI_getHashLength		160300						
ANR	160488	Symbol	ksi -> IV		160300						
ANR	160489	Symbol	ksi -> blockFile		160300						
ANR	160490	Function	tlvWriteKSISigLS12	307:0:7605:7979							
ANR	160491	FunctionDef	"tlvWriteKSISigLS12 (FILE * outfile , size_t record_count , uchar * der , uint16_t lenDer)"		160490	0					
ANR	160492	CompoundStatement		308:84:7700:7979	160490	0					
ANR	160493	IdentifierDeclStatement	int r = 0 ;	309:1:7703:7712	160490	0	True				
ANR	160494	IdentifierDecl	r = 0		160490	0					
ANR	160495	IdentifierDeclType	int		160490	0					
ANR	160496	Identifier	r		160490	1					
ANR	160497	AssignmentExpression	r = 0		160490	2		=			
ANR	160498	Identifier	r		160490	0					
ANR	160499	PrimaryExpression	0		160490	1					
ANR	160500	IdentifierDeclStatement	int totalSize = 2 + tlvGetIntSize ( record_count ) + 4 + lenDer ;	310:1:7715:7775	160490	1	True				
ANR	160501	IdentifierDecl	totalSize = 2 + tlvGetIntSize ( record_count ) + 4 + lenDer		160490	0					
ANR	160502	IdentifierDeclType	int		160490	0					
ANR	160503	Identifier	totalSize		160490	1					
ANR	160504	AssignmentExpression	totalSize = 2 + tlvGetIntSize ( record_count ) + 4 + lenDer		160490	2		=			
ANR	160505	Identifier	totalSize		160490	0					
ANR	160506	AdditiveExpression	2 + tlvGetIntSize ( record_count ) + 4 + lenDer		160490	1		+			
ANR	160507	PrimaryExpression	2		160490	0					
ANR	160508	AdditiveExpression	tlvGetIntSize ( record_count ) + 4 + lenDer		160490	1		+			
ANR	160509	CallExpression	tlvGetIntSize ( record_count )		160490	0					
ANR	160510	Callee	tlvGetIntSize		160490	0					
ANR	160511	Identifier	tlvGetIntSize		160490	0					
ANR	160512	ArgumentList	record_count		160490	1					
ANR	160513	Argument	record_count		160490	0					
ANR	160514	Identifier	record_count		160490	0					
ANR	160515	AdditiveExpression	4 + lenDer		160490	1		+			
ANR	160516	PrimaryExpression	4		160490	0					
ANR	160517	Identifier	lenDer		160490	1					
ANR	160518	ExpressionStatement	"CHKr ( tlvWriteHeader ( outfile , 0x00 , 0x0904 , totalSize ) )"	312:1:7779:7833	160490	2	True				
ANR	160519	CallExpression	"CHKr ( tlvWriteHeader ( outfile , 0x00 , 0x0904 , totalSize ) )"		160490	0					
ANR	160520	Callee	CHKr		160490	0					
ANR	160521	Identifier	CHKr		160490	0					
ANR	160522	ArgumentList	"tlvWriteHeader ( outfile , 0x00 , 0x0904 , totalSize )"		160490	1					
ANR	160523	Argument	"tlvWriteHeader ( outfile , 0x00 , 0x0904 , totalSize )"		160490	0					
ANR	160524	CallExpression	"tlvWriteHeader ( outfile , 0x00 , 0x0904 , totalSize )"		160490	0					
ANR	160525	Callee	tlvWriteHeader		160490	0					
ANR	160526	Identifier	tlvWriteHeader		160490	0					
ANR	160527	ArgumentList	outfile		160490	1					
ANR	160528	Argument	outfile		160490	0					
ANR	160529	Identifier	outfile		160490	0					
ANR	160530	Argument	0x00		160490	1					
ANR	160531	PrimaryExpression	0x00		160490	0					
ANR	160532	Argument	0x0904		160490	2					
ANR	160533	PrimaryExpression	0x0904		160490	0					
ANR	160534	Argument	totalSize		160490	3					
ANR	160535	Identifier	totalSize		160490	0					
ANR	160536	ExpressionStatement	"CHKr ( tlvWriteInt64TLV ( outfile , 0x00 , 0x01 , record_count ) )"	313:1:7836:7893	160490	3	True				
ANR	160537	CallExpression	"CHKr ( tlvWriteInt64TLV ( outfile , 0x00 , 0x01 , record_count ) )"		160490	0					
ANR	160538	Callee	CHKr		160490	0					
ANR	160539	Identifier	CHKr		160490	0					
ANR	160540	ArgumentList	"tlvWriteInt64TLV ( outfile , 0x00 , 0x01 , record_count )"		160490	1					
ANR	160541	Argument	"tlvWriteInt64TLV ( outfile , 0x00 , 0x01 , record_count )"		160490	0					
ANR	160542	CallExpression	"tlvWriteInt64TLV ( outfile , 0x00 , 0x01 , record_count )"		160490	0					
ANR	160543	Callee	tlvWriteInt64TLV		160490	0					
ANR	160544	Identifier	tlvWriteInt64TLV		160490	0					
ANR	160545	ArgumentList	outfile		160490	1					
ANR	160546	Argument	outfile		160490	0					
ANR	160547	Identifier	outfile		160490	0					
ANR	160548	Argument	0x00		160490	1					
ANR	160549	PrimaryExpression	0x00		160490	0					
ANR	160550	Argument	0x01		160490	2					
ANR	160551	PrimaryExpression	0x01		160490	0					
ANR	160552	Argument	record_count		160490	3					
ANR	160553	Identifier	record_count		160490	0					
ANR	160554	ExpressionStatement	"CHKr ( tlvWriteOctetStringTLV ( outfile , 0x00 , 0x0905 , der , lenDer ) )"	314:1:7896:7960	160490	4	True				
ANR	160555	CallExpression	"CHKr ( tlvWriteOctetStringTLV ( outfile , 0x00 , 0x0905 , der , lenDer ) )"		160490	0					
ANR	160556	Callee	CHKr		160490	0					
ANR	160557	Identifier	CHKr		160490	0					
ANR	160558	ArgumentList	"tlvWriteOctetStringTLV ( outfile , 0x00 , 0x0905 , der , lenDer )"		160490	1					
ANR	160559	Argument	"tlvWriteOctetStringTLV ( outfile , 0x00 , 0x0905 , der , lenDer )"		160490	0					
ANR	160560	CallExpression	"tlvWriteOctetStringTLV ( outfile , 0x00 , 0x0905 , der , lenDer )"		160490	0					
ANR	160561	Callee	tlvWriteOctetStringTLV		160490	0					
ANR	160562	Identifier	tlvWriteOctetStringTLV		160490	0					
ANR	160563	ArgumentList	outfile		160490	1					
ANR	160564	Argument	outfile		160490	0					
ANR	160565	Identifier	outfile		160490	0					
ANR	160566	Argument	0x00		160490	1					
ANR	160567	PrimaryExpression	0x00		160490	0					
ANR	160568	Argument	0x0905		160490	2					
ANR	160569	PrimaryExpression	0x0905		160490	0					
ANR	160570	Argument	der		160490	3					
ANR	160571	Identifier	der		160490	0					
ANR	160572	Argument	lenDer		160490	4					
ANR	160573	Identifier	lenDer		160490	0					
ANR	160574	Label	done :	315:0:7962:7966	160490	5	True				
ANR	160575	Identifier	done		160490	0					
ANR	160576	ReturnStatement	return r ;	316:1:7969:7977	160490	6	True				
ANR	160577	Identifier	r		160490	0					
ANR	160578	ReturnType	static int		160490	1					
ANR	160579	Identifier	tlvWriteKSISigLS12		160490	2					
ANR	160580	ParameterList	"FILE * outfile , size_t record_count , uchar * der , uint16_t lenDer"		160490	3					
ANR	160581	Parameter	FILE * outfile	308:19:7635:7647	160490	0	True				
ANR	160582	ParameterType	FILE *		160490	0					
ANR	160583	Identifier	outfile		160490	1					
ANR	160584	Parameter	size_t record_count	308:34:7650:7668	160490	1	True				
ANR	160585	ParameterType	size_t		160490	0					
ANR	160586	Identifier	record_count		160490	1					
ANR	160587	Parameter	uchar * der	308:55:7671:7680	160490	2	True				
ANR	160588	ParameterType	uchar *		160490	0					
ANR	160589	Identifier	der		160490	1					
ANR	160590	Parameter	uint16_t lenDer	308:67:7683:7697	160490	3	True				
ANR	160591	ParameterType	uint16_t		160490	0					
ANR	160592	Identifier	lenDer		160490	1					
ANR	160593	CFGEntryNode	ENTRY		160490		True				
ANR	160594	CFGExitNode	EXIT		160490		True				
ANR	160595	Symbol	record_count		160490						
ANR	160596	Symbol	der		160490						
ANR	160597	Symbol	tlvWriteHeader		160490						
ANR	160598	Symbol	tlvWriteInt64TLV		160490						
ANR	160599	Symbol	lenDer		160490						
ANR	160600	Symbol	r		160490						
ANR	160601	Symbol	totalSize		160490						
ANR	160602	Symbol	outfile		160490						
ANR	160603	Symbol	tlvWriteOctetStringTLV		160490						
ANR	160604	Symbol	tlvGetIntSize		160490						
ANR	160605	Function	tlvWriteNoSigLS12	319:0:7982:8785							
ANR	160606	FunctionDef	"tlvWriteNoSigLS12 (FILE * outfile , size_t record_count , const KSI_DataHash * hash , const char * errorText)"		160605	0					
ANR	160607	CompoundStatement		320:103:8096:8785	160605	0					
ANR	160608	IdentifierDeclStatement	int r = 0 ;	321:1:8099:8108	160605	0	True				
ANR	160609	IdentifierDecl	r = 0		160605	0					
ANR	160610	IdentifierDeclType	int		160605	0					
ANR	160611	Identifier	r		160605	1					
ANR	160612	AssignmentExpression	r = 0		160605	2		=			
ANR	160613	Identifier	r		160605	0					
ANR	160614	PrimaryExpression	0		160605	1					
ANR	160615	IdentifierDeclStatement	int totalSize = 0 ;	322:1:8111:8128	160605	1	True				
ANR	160616	IdentifierDecl	totalSize = 0		160605	0					
ANR	160617	IdentifierDeclType	int		160605	0					
ANR	160618	Identifier	totalSize		160605	1					
ANR	160619	AssignmentExpression	totalSize = 0		160605	2		=			
ANR	160620	Identifier	totalSize		160605	0					
ANR	160621	PrimaryExpression	0		160605	1					
ANR	160622	IdentifierDeclStatement	int noSigSize = 0 ;	323:1:8131:8148	160605	2	True				
ANR	160623	IdentifierDecl	noSigSize = 0		160605	0					
ANR	160624	IdentifierDeclType	int		160605	0					
ANR	160625	Identifier	noSigSize		160605	1					
ANR	160626	AssignmentExpression	noSigSize = 0		160605	2		=			
ANR	160627	Identifier	noSigSize		160605	0					
ANR	160628	PrimaryExpression	0		160605	1					
ANR	160629	IdentifierDeclStatement	const unsigned char * imprint = NULL ;	324:1:8151:8186	160605	3	True				
ANR	160630	IdentifierDecl	* imprint = NULL		160605	0					
ANR	160631	IdentifierDeclType	const unsigned char *		160605	0					
ANR	160632	Identifier	imprint		160605	1					
ANR	160633	AssignmentExpression	* imprint = NULL		160605	2		=			
ANR	160634	Identifier	NULL		160605	0					
ANR	160635	Identifier	NULL		160605	1					
ANR	160636	IdentifierDeclStatement	size_t imprintLen = 0 ;	325:1:8189:8210	160605	4	True				
ANR	160637	IdentifierDecl	imprintLen = 0		160605	0					
ANR	160638	IdentifierDeclType	size_t		160605	0					
ANR	160639	Identifier	imprintLen		160605	1					
ANR	160640	AssignmentExpression	imprintLen = 0		160605	2		=			
ANR	160641	Identifier	imprintLen		160605	0					
ANR	160642	PrimaryExpression	0		160605	1					
ANR	160643	ExpressionStatement	"KSI_DataHash_getImprint ( hash , & imprint , & imprintLen )"	327:1:8214:8266	160605	5	True				
ANR	160644	CallExpression	"KSI_DataHash_getImprint ( hash , & imprint , & imprintLen )"		160605	0					
ANR	160645	Callee	KSI_DataHash_getImprint		160605	0					
ANR	160646	Identifier	KSI_DataHash_getImprint		160605	0					
ANR	160647	ArgumentList	hash		160605	1					
ANR	160648	Argument	hash		160605	0					
ANR	160649	Identifier	hash		160605	0					
ANR	160650	Argument	& imprint		160605	1					
ANR	160651	UnaryOperationExpression	& imprint		160605	0					
ANR	160652	UnaryOperator	&		160605	0					
ANR	160653	Identifier	imprint		160605	1					
ANR	160654	Argument	& imprintLen		160605	2					
ANR	160655	UnaryOperationExpression	& imprintLen		160605	0					
ANR	160656	UnaryOperator	&		160605	0					
ANR	160657	Identifier	imprintLen		160605	1					
ANR	160658	ExpressionStatement	noSigSize = 2 + imprintLen + ( errorText ? ( 2 + strlen ( errorText ) + 1 ) : 0 )	329:1:8270:8344	160605	6	True				
ANR	160659	AssignmentExpression	noSigSize = 2 + imprintLen + ( errorText ? ( 2 + strlen ( errorText ) + 1 ) : 0 )		160605	0		=			
ANR	160660	Identifier	noSigSize		160605	0					
ANR	160661	AdditiveExpression	2 + imprintLen + ( errorText ? ( 2 + strlen ( errorText ) + 1 ) : 0 )		160605	1		+			
ANR	160662	PrimaryExpression	2		160605	0					
ANR	160663	AdditiveExpression	imprintLen + ( errorText ? ( 2 + strlen ( errorText ) + 1 ) : 0 )		160605	1		+			
ANR	160664	Identifier	imprintLen		160605	0					
ANR	160665	ConditionalExpression	errorText ? ( 2 + strlen ( errorText ) + 1 ) : 0		160605	1					
ANR	160666	Condition	errorText		160605	0					
ANR	160667	Identifier	errorText		160605	0					
ANR	160668	AdditiveExpression	2 + strlen ( errorText ) + 1		160605	1		+			
ANR	160669	PrimaryExpression	2		160605	0					
ANR	160670	AdditiveExpression	strlen ( errorText ) + 1		160605	1		+			
ANR	160671	CallExpression	strlen ( errorText )		160605	0					
ANR	160672	Callee	strlen		160605	0					
ANR	160673	Identifier	strlen		160605	0					
ANR	160674	ArgumentList	errorText		160605	1					
ANR	160675	Argument	errorText		160605	0					
ANR	160676	Identifier	errorText		160605	0					
ANR	160677	PrimaryExpression	1		160605	1					
ANR	160678	PrimaryExpression	0		160605	2					
ANR	160679	ExpressionStatement	totalSize = 2 + tlvGetIntSize ( record_count ) + 2 + noSigSize	330:1:8347:8406	160605	7	True				
ANR	160680	AssignmentExpression	totalSize = 2 + tlvGetIntSize ( record_count ) + 2 + noSigSize		160605	0		=			
ANR	160681	Identifier	totalSize		160605	0					
ANR	160682	AdditiveExpression	2 + tlvGetIntSize ( record_count ) + 2 + noSigSize		160605	1		+			
ANR	160683	PrimaryExpression	2		160605	0					
ANR	160684	AdditiveExpression	tlvGetIntSize ( record_count ) + 2 + noSigSize		160605	1		+			
ANR	160685	CallExpression	tlvGetIntSize ( record_count )		160605	0					
ANR	160686	Callee	tlvGetIntSize		160605	0					
ANR	160687	Identifier	tlvGetIntSize		160605	0					
ANR	160688	ArgumentList	record_count		160605	1					
ANR	160689	Argument	record_count		160605	0					
ANR	160690	Identifier	record_count		160605	0					
ANR	160691	AdditiveExpression	2 + noSigSize		160605	1		+			
ANR	160692	PrimaryExpression	2		160605	0					
ANR	160693	Identifier	noSigSize		160605	1					
ANR	160694	ExpressionStatement	"CHKr ( tlvWriteHeader ( outfile , 0x00 , 0x0904 , totalSize ) )"	332:1:8410:8464	160605	8	True				
ANR	160695	CallExpression	"CHKr ( tlvWriteHeader ( outfile , 0x00 , 0x0904 , totalSize ) )"		160605	0					
ANR	160696	Callee	CHKr		160605	0					
ANR	160697	Identifier	CHKr		160605	0					
ANR	160698	ArgumentList	"tlvWriteHeader ( outfile , 0x00 , 0x0904 , totalSize )"		160605	1					
ANR	160699	Argument	"tlvWriteHeader ( outfile , 0x00 , 0x0904 , totalSize )"		160605	0					
ANR	160700	CallExpression	"tlvWriteHeader ( outfile , 0x00 , 0x0904 , totalSize )"		160605	0					
ANR	160701	Callee	tlvWriteHeader		160605	0					
ANR	160702	Identifier	tlvWriteHeader		160605	0					
ANR	160703	ArgumentList	outfile		160605	1					
ANR	160704	Argument	outfile		160605	0					
ANR	160705	Identifier	outfile		160605	0					
ANR	160706	Argument	0x00		160605	1					
ANR	160707	PrimaryExpression	0x00		160605	0					
ANR	160708	Argument	0x0904		160605	2					
ANR	160709	PrimaryExpression	0x0904		160605	0					
ANR	160710	Argument	totalSize		160605	3					
ANR	160711	Identifier	totalSize		160605	0					
ANR	160712	ExpressionStatement	"CHKr ( tlvWriteInt64TLV ( outfile , 0x00 , 0x01 , record_count ) )"	333:1:8467:8524	160605	9	True				
ANR	160713	CallExpression	"CHKr ( tlvWriteInt64TLV ( outfile , 0x00 , 0x01 , record_count ) )"		160605	0					
ANR	160714	Callee	CHKr		160605	0					
ANR	160715	Identifier	CHKr		160605	0					
ANR	160716	ArgumentList	"tlvWriteInt64TLV ( outfile , 0x00 , 0x01 , record_count )"		160605	1					
ANR	160717	Argument	"tlvWriteInt64TLV ( outfile , 0x00 , 0x01 , record_count )"		160605	0					
ANR	160718	CallExpression	"tlvWriteInt64TLV ( outfile , 0x00 , 0x01 , record_count )"		160605	0					
ANR	160719	Callee	tlvWriteInt64TLV		160605	0					
ANR	160720	Identifier	tlvWriteInt64TLV		160605	0					
ANR	160721	ArgumentList	outfile		160605	1					
ANR	160722	Argument	outfile		160605	0					
ANR	160723	Identifier	outfile		160605	0					
ANR	160724	Argument	0x00		160605	1					
ANR	160725	PrimaryExpression	0x00		160605	0					
ANR	160726	Argument	0x01		160605	2					
ANR	160727	PrimaryExpression	0x01		160605	0					
ANR	160728	Argument	record_count		160605	3					
ANR	160729	Identifier	record_count		160605	0					
ANR	160730	ExpressionStatement	"CHKr ( tlvWriteHeader ( outfile , 0x00 , 0x02 , noSigSize ) )"	334:1:8527:8579	160605	10	True				
ANR	160731	CallExpression	"CHKr ( tlvWriteHeader ( outfile , 0x00 , 0x02 , noSigSize ) )"		160605	0					
ANR	160732	Callee	CHKr		160605	0					
ANR	160733	Identifier	CHKr		160605	0					
ANR	160734	ArgumentList	"tlvWriteHeader ( outfile , 0x00 , 0x02 , noSigSize )"		160605	1					
ANR	160735	Argument	"tlvWriteHeader ( outfile , 0x00 , 0x02 , noSigSize )"		160605	0					
ANR	160736	CallExpression	"tlvWriteHeader ( outfile , 0x00 , 0x02 , noSigSize )"		160605	0					
ANR	160737	Callee	tlvWriteHeader		160605	0					
ANR	160738	Identifier	tlvWriteHeader		160605	0					
ANR	160739	ArgumentList	outfile		160605	1					
ANR	160740	Argument	outfile		160605	0					
ANR	160741	Identifier	outfile		160605	0					
ANR	160742	Argument	0x00		160605	1					
ANR	160743	PrimaryExpression	0x00		160605	0					
ANR	160744	Argument	0x02		160605	2					
ANR	160745	PrimaryExpression	0x02		160605	0					
ANR	160746	Argument	noSigSize		160605	3					
ANR	160747	Identifier	noSigSize		160605	0					
ANR	160748	ExpressionStatement	"CHKr ( tlvWriteOctetStringTLV ( outfile , 0x00 , 0x01 , imprint , imprintLen ) )"	335:1:8582:8652	160605	11	True				
ANR	160749	CallExpression	"CHKr ( tlvWriteOctetStringTLV ( outfile , 0x00 , 0x01 , imprint , imprintLen ) )"		160605	0					
ANR	160750	Callee	CHKr		160605	0					
ANR	160751	Identifier	CHKr		160605	0					
ANR	160752	ArgumentList	"tlvWriteOctetStringTLV ( outfile , 0x00 , 0x01 , imprint , imprintLen )"		160605	1					
ANR	160753	Argument	"tlvWriteOctetStringTLV ( outfile , 0x00 , 0x01 , imprint , imprintLen )"		160605	0					
ANR	160754	CallExpression	"tlvWriteOctetStringTLV ( outfile , 0x00 , 0x01 , imprint , imprintLen )"		160605	0					
ANR	160755	Callee	tlvWriteOctetStringTLV		160605	0					
ANR	160756	Identifier	tlvWriteOctetStringTLV		160605	0					
ANR	160757	ArgumentList	outfile		160605	1					
ANR	160758	Argument	outfile		160605	0					
ANR	160759	Identifier	outfile		160605	0					
ANR	160760	Argument	0x00		160605	1					
ANR	160761	PrimaryExpression	0x00		160605	0					
ANR	160762	Argument	0x01		160605	2					
ANR	160763	PrimaryExpression	0x01		160605	0					
ANR	160764	Argument	imprint		160605	3					
ANR	160765	Identifier	imprint		160605	0					
ANR	160766	Argument	imprintLen		160605	4					
ANR	160767	Identifier	imprintLen		160605	0					
ANR	160768	IfStatement	if ( errorText )		160605	12					
ANR	160769	Condition	errorText	336:5:8659:8667	160605	0	True				
ANR	160770	Identifier	errorText		160605	0					
ANR	160771	ExpressionStatement	"CHKr ( tlvWriteOctetStringTLV ( outfile , 0x00 , 0x02 , ( uint8_t * ) errorText , strlen ( errorText ) + 1 ) )"	337:2:8672:8766	160605	1	True				
ANR	160772	CallExpression	"CHKr ( tlvWriteOctetStringTLV ( outfile , 0x00 , 0x02 , ( uint8_t * ) errorText , strlen ( errorText ) + 1 ) )"		160605	0					
ANR	160773	Callee	CHKr		160605	0					
ANR	160774	Identifier	CHKr		160605	0					
ANR	160775	ArgumentList	"tlvWriteOctetStringTLV ( outfile , 0x00 , 0x02 , ( uint8_t * ) errorText , strlen ( errorText ) + 1 )"		160605	1					
ANR	160776	Argument	"tlvWriteOctetStringTLV ( outfile , 0x00 , 0x02 , ( uint8_t * ) errorText , strlen ( errorText ) + 1 )"		160605	0					
ANR	160777	CallExpression	"tlvWriteOctetStringTLV ( outfile , 0x00 , 0x02 , ( uint8_t * ) errorText , strlen ( errorText ) + 1 )"		160605	0					
ANR	160778	Callee	tlvWriteOctetStringTLV		160605	0					
ANR	160779	Identifier	tlvWriteOctetStringTLV		160605	0					
ANR	160780	ArgumentList	outfile		160605	1					
ANR	160781	Argument	outfile		160605	0					
ANR	160782	Identifier	outfile		160605	0					
ANR	160783	Argument	0x00		160605	1					
ANR	160784	PrimaryExpression	0x00		160605	0					
ANR	160785	Argument	0x02		160605	2					
ANR	160786	PrimaryExpression	0x02		160605	0					
ANR	160787	Argument	( uint8_t * ) errorText		160605	3					
ANR	160788	CastExpression	( uint8_t * ) errorText		160605	0					
ANR	160789	CastTarget	uint8_t *		160605	0					
ANR	160790	Identifier	errorText		160605	1					
ANR	160791	Argument	strlen ( errorText ) + 1		160605	4					
ANR	160792	AdditiveExpression	strlen ( errorText ) + 1		160605	0		+			
ANR	160793	CallExpression	strlen ( errorText )		160605	0					
ANR	160794	Callee	strlen		160605	0					
ANR	160795	Identifier	strlen		160605	0					
ANR	160796	ArgumentList	errorText		160605	1					
ANR	160797	Argument	errorText		160605	0					
ANR	160798	Identifier	errorText		160605	0					
ANR	160799	PrimaryExpression	1		160605	1					
ANR	160800	Label	done :	338:0:8768:8772	160605	13	True				
ANR	160801	Identifier	done		160605	0					
ANR	160802	ReturnStatement	return r ;	339:1:8775:8783	160605	14	True				
ANR	160803	Identifier	r		160605	0					
ANR	160804	ReturnType	static int		160605	1					
ANR	160805	Identifier	tlvWriteNoSigLS12		160605	2					
ANR	160806	ParameterList	"FILE * outfile , size_t record_count , const KSI_DataHash * hash , const char * errorText"		160605	3					
ANR	160807	Parameter	FILE * outfile	320:18:8011:8023	160605	0	True				
ANR	160808	ParameterType	FILE *		160605	0					
ANR	160809	Identifier	outfile		160605	1					
ANR	160810	Parameter	size_t record_count	320:33:8026:8044	160605	1	True				
ANR	160811	ParameterType	size_t		160605	0					
ANR	160812	Identifier	record_count		160605	1					
ANR	160813	Parameter	const KSI_DataHash * hash	320:54:8047:8070	160605	2	True				
ANR	160814	ParameterType	const KSI_DataHash *		160605	0					
ANR	160815	Identifier	hash		160605	1					
ANR	160816	Parameter	const char * errorText	320:80:8073:8093	160605	3	True				
ANR	160817	ParameterType	const char *		160605	0					
ANR	160818	Identifier	errorText		160605	1					
ANR	160819	CFGEntryNode	ENTRY		160605		True				
ANR	160820	CFGExitNode	EXIT		160605		True				
ANR	160821	Symbol	record_count		160605						
ANR	160822	Symbol	NULL		160605						
ANR	160823	Symbol	outfile		160605						
ANR	160824	Symbol	imprint		160605						
ANR	160825	Symbol	tlvWriteOctetStringTLV		160605						
ANR	160826	Symbol	tlvWriteHeader		160605						
ANR	160827	Symbol	tlvWriteInt64TLV		160605						
ANR	160828	Symbol	errorText		160605						
ANR	160829	Symbol	imprintLen		160605						
ANR	160830	Symbol	strlen		160605						
ANR	160831	Symbol	r		160605						
ANR	160832	Symbol	totalSize		160605						
ANR	160833	Symbol	& imprint		160605						
ANR	160834	Symbol	& imprintLen		160605						
ANR	160835	Symbol	hash		160605						
ANR	160836	Symbol	noSigSize		160605						
ANR	160837	Symbol	tlvGetIntSize		160605						
ANR	160838	Function	tlvCreateMetadata	342:0:8788:10022							
ANR	160839	FunctionDef	"tlvCreateMetadata (ksifile ksi , uint64_t record_index , const char * key , const char * value , unsigned char * buffer , size_t * len)"		160838	0					
ANR	160840	CompoundStatement		344:57:8928:10022	160838	0					
ANR	160841	IdentifierDeclStatement	int r = 0 ;	345:1:8931:8940	160838	0	True				
ANR	160842	IdentifierDecl	r = 0		160838	0					
ANR	160843	IdentifierDeclType	int		160838	0					
ANR	160844	Identifier	r		160838	1					
ANR	160845	AssignmentExpression	r = 0		160838	2		=			
ANR	160846	Identifier	r		160838	0					
ANR	160847	PrimaryExpression	0		160838	1					
ANR	160848	IdentifierDeclStatement	"KSI_TlvElement * metadata = NULL , * attrib_tlv = NULL ;"	346:1:8943:8994	160838	1	True				
ANR	160849	IdentifierDecl	* metadata = NULL		160838	0					
ANR	160850	IdentifierDeclType	KSI_TlvElement *		160838	0					
ANR	160851	Identifier	metadata		160838	1					
ANR	160852	AssignmentExpression	* metadata = NULL		160838	2		=			
ANR	160853	Identifier	NULL		160838	0					
ANR	160854	Identifier	NULL		160838	1					
ANR	160855	IdentifierDecl	* attrib_tlv = NULL		160838	1					
ANR	160856	IdentifierDeclType	KSI_TlvElement *		160838	0					
ANR	160857	Identifier	attrib_tlv		160838	1					
ANR	160858	AssignmentExpression	* attrib_tlv = NULL		160838	2		=			
ANR	160859	Identifier	NULL		160838	0					
ANR	160860	Identifier	NULL		160838	1					
ANR	160861	IdentifierDeclStatement	"KSI_Utf8String * key_tlv = NULL , * value_tlv = NULL ;"	347:1:8997:9046	160838	2	True				
ANR	160862	IdentifierDecl	* key_tlv = NULL		160838	0					
ANR	160863	IdentifierDeclType	KSI_Utf8String *		160838	0					
ANR	160864	Identifier	key_tlv		160838	1					
ANR	160865	AssignmentExpression	* key_tlv = NULL		160838	2		=			
ANR	160866	Identifier	NULL		160838	0					
ANR	160867	Identifier	NULL		160838	1					
ANR	160868	IdentifierDecl	* value_tlv = NULL		160838	1					
ANR	160869	IdentifierDeclType	KSI_Utf8String *		160838	0					
ANR	160870	Identifier	value_tlv		160838	1					
ANR	160871	AssignmentExpression	* value_tlv = NULL		160838	2		=			
ANR	160872	Identifier	NULL		160838	0					
ANR	160873	Identifier	NULL		160838	1					
ANR	160874	IdentifierDeclStatement	KSI_Integer * index_tlv = NULL ;	348:1:9049:9078	160838	3	True				
ANR	160875	IdentifierDecl	* index_tlv = NULL		160838	0					
ANR	160876	IdentifierDeclType	KSI_Integer *		160838	0					
ANR	160877	Identifier	index_tlv		160838	1					
ANR	160878	AssignmentExpression	* index_tlv = NULL		160838	2		=			
ANR	160879	Identifier	NULL		160838	0					
ANR	160880	Identifier	NULL		160838	1					
ANR	160881	ExpressionStatement	CHKr ( KSI_TlvElement_new ( & metadata ) )	350:1:9082:9117	160838	4	True				
ANR	160882	CallExpression	CHKr ( KSI_TlvElement_new ( & metadata ) )		160838	0					
ANR	160883	Callee	CHKr		160838	0					
ANR	160884	Identifier	CHKr		160838	0					
ANR	160885	ArgumentList	KSI_TlvElement_new ( & metadata )		160838	1					
ANR	160886	Argument	KSI_TlvElement_new ( & metadata )		160838	0					
ANR	160887	CallExpression	KSI_TlvElement_new ( & metadata )		160838	0					
ANR	160888	Callee	KSI_TlvElement_new		160838	0					
ANR	160889	Identifier	KSI_TlvElement_new		160838	0					
ANR	160890	ArgumentList	& metadata		160838	1					
ANR	160891	Argument	& metadata		160838	0					
ANR	160892	UnaryOperationExpression	& metadata		160838	0					
ANR	160893	UnaryOperator	&		160838	0					
ANR	160894	Identifier	metadata		160838	1					
ANR	160895	ExpressionStatement	metadata -> ftlv . tag = 0x0911	351:1:9120:9147	160838	5	True				
ANR	160896	AssignmentExpression	metadata -> ftlv . tag = 0x0911		160838	0		=			
ANR	160897	MemberAccess	metadata -> ftlv . tag		160838	0					
ANR	160898	PtrMemberAccess	metadata -> ftlv		160838	0					
ANR	160899	Identifier	metadata		160838	0					
ANR	160900	Identifier	ftlv		160838	1					
ANR	160901	Identifier	tag		160838	1					
ANR	160902	PrimaryExpression	0x0911		160838	1					
ANR	160903	ExpressionStatement	"CHKr ( KSI_Integer_new ( ksi -> ctx -> ksi_ctx , record_index , & index_tlv ) )"	353:1:9151:9217	160838	6	True				
ANR	160904	CallExpression	"CHKr ( KSI_Integer_new ( ksi -> ctx -> ksi_ctx , record_index , & index_tlv ) )"		160838	0					
ANR	160905	Callee	CHKr		160838	0					
ANR	160906	Identifier	CHKr		160838	0					
ANR	160907	ArgumentList	"KSI_Integer_new ( ksi -> ctx -> ksi_ctx , record_index , & index_tlv )"		160838	1					
ANR	160908	Argument	"KSI_Integer_new ( ksi -> ctx -> ksi_ctx , record_index , & index_tlv )"		160838	0					
ANR	160909	CallExpression	"KSI_Integer_new ( ksi -> ctx -> ksi_ctx , record_index , & index_tlv )"		160838	0					
ANR	160910	Callee	KSI_Integer_new		160838	0					
ANR	160911	Identifier	KSI_Integer_new		160838	0					
ANR	160912	ArgumentList	ksi -> ctx -> ksi_ctx		160838	1					
ANR	160913	Argument	ksi -> ctx -> ksi_ctx		160838	0					
ANR	160914	PtrMemberAccess	ksi -> ctx -> ksi_ctx		160838	0					
ANR	160915	PtrMemberAccess	ksi -> ctx		160838	0					
ANR	160916	Identifier	ksi		160838	0					
ANR	160917	Identifier	ctx		160838	1					
ANR	160918	Identifier	ksi_ctx		160838	1					
ANR	160919	Argument	record_index		160838	1					
ANR	160920	Identifier	record_index		160838	0					
ANR	160921	Argument	& index_tlv		160838	2					
ANR	160922	UnaryOperationExpression	& index_tlv		160838	0					
ANR	160923	UnaryOperator	&		160838	0					
ANR	160924	Identifier	index_tlv		160838	1					
ANR	160925	ExpressionStatement	"CHKr ( KSI_TlvElement_setInteger ( metadata , 0x01 , index_tlv ) )"	354:1:9220:9278	160838	7	True				
ANR	160926	CallExpression	"CHKr ( KSI_TlvElement_setInteger ( metadata , 0x01 , index_tlv ) )"		160838	0					
ANR	160927	Callee	CHKr		160838	0					
ANR	160928	Identifier	CHKr		160838	0					
ANR	160929	ArgumentList	"KSI_TlvElement_setInteger ( metadata , 0x01 , index_tlv )"		160838	1					
ANR	160930	Argument	"KSI_TlvElement_setInteger ( metadata , 0x01 , index_tlv )"		160838	0					
ANR	160931	CallExpression	"KSI_TlvElement_setInteger ( metadata , 0x01 , index_tlv )"		160838	0					
ANR	160932	Callee	KSI_TlvElement_setInteger		160838	0					
ANR	160933	Identifier	KSI_TlvElement_setInteger		160838	0					
ANR	160934	ArgumentList	metadata		160838	1					
ANR	160935	Argument	metadata		160838	0					
ANR	160936	Identifier	metadata		160838	0					
ANR	160937	Argument	0x01		160838	1					
ANR	160938	PrimaryExpression	0x01		160838	0					
ANR	160939	Argument	index_tlv		160838	2					
ANR	160940	Identifier	index_tlv		160838	0					
ANR	160941	ExpressionStatement	CHKr ( KSI_TlvElement_new ( & attrib_tlv ) )	356:1:9282:9319	160838	8	True				
ANR	160942	CallExpression	CHKr ( KSI_TlvElement_new ( & attrib_tlv ) )		160838	0					
ANR	160943	Callee	CHKr		160838	0					
ANR	160944	Identifier	CHKr		160838	0					
ANR	160945	ArgumentList	KSI_TlvElement_new ( & attrib_tlv )		160838	1					
ANR	160946	Argument	KSI_TlvElement_new ( & attrib_tlv )		160838	0					
ANR	160947	CallExpression	KSI_TlvElement_new ( & attrib_tlv )		160838	0					
ANR	160948	Callee	KSI_TlvElement_new		160838	0					
ANR	160949	Identifier	KSI_TlvElement_new		160838	0					
ANR	160950	ArgumentList	& attrib_tlv		160838	1					
ANR	160951	Argument	& attrib_tlv		160838	0					
ANR	160952	UnaryOperationExpression	& attrib_tlv		160838	0					
ANR	160953	UnaryOperator	&		160838	0					
ANR	160954	Identifier	attrib_tlv		160838	1					
ANR	160955	ExpressionStatement	attrib_tlv -> ftlv . tag = 0x02	357:1:9322:9349	160838	9	True				
ANR	160956	AssignmentExpression	attrib_tlv -> ftlv . tag = 0x02		160838	0		=			
ANR	160957	MemberAccess	attrib_tlv -> ftlv . tag		160838	0					
ANR	160958	PtrMemberAccess	attrib_tlv -> ftlv		160838	0					
ANR	160959	Identifier	attrib_tlv		160838	0					
ANR	160960	Identifier	ftlv		160838	1					
ANR	160961	Identifier	tag		160838	1					
ANR	160962	PrimaryExpression	0x02		160838	1					
ANR	160963	ExpressionStatement	"CHKr ( KSI_Utf8String_new ( ksi -> ctx -> ksi_ctx , key , strlen ( key ) + 1 , & key_tlv ) )"	359:1:9353:9428	160838	10	True				
ANR	160964	CallExpression	"CHKr ( KSI_Utf8String_new ( ksi -> ctx -> ksi_ctx , key , strlen ( key ) + 1 , & key_tlv ) )"		160838	0					
ANR	160965	Callee	CHKr		160838	0					
ANR	160966	Identifier	CHKr		160838	0					
ANR	160967	ArgumentList	"KSI_Utf8String_new ( ksi -> ctx -> ksi_ctx , key , strlen ( key ) + 1 , & key_tlv )"		160838	1					
ANR	160968	Argument	"KSI_Utf8String_new ( ksi -> ctx -> ksi_ctx , key , strlen ( key ) + 1 , & key_tlv )"		160838	0					
ANR	160969	CallExpression	"KSI_Utf8String_new ( ksi -> ctx -> ksi_ctx , key , strlen ( key ) + 1 , & key_tlv )"		160838	0					
ANR	160970	Callee	KSI_Utf8String_new		160838	0					
ANR	160971	Identifier	KSI_Utf8String_new		160838	0					
ANR	160972	ArgumentList	ksi -> ctx -> ksi_ctx		160838	1					
ANR	160973	Argument	ksi -> ctx -> ksi_ctx		160838	0					
ANR	160974	PtrMemberAccess	ksi -> ctx -> ksi_ctx		160838	0					
ANR	160975	PtrMemberAccess	ksi -> ctx		160838	0					
ANR	160976	Identifier	ksi		160838	0					
ANR	160977	Identifier	ctx		160838	1					
ANR	160978	Identifier	ksi_ctx		160838	1					
ANR	160979	Argument	key		160838	1					
ANR	160980	Identifier	key		160838	0					
ANR	160981	Argument	strlen ( key ) + 1		160838	2					
ANR	160982	AdditiveExpression	strlen ( key ) + 1		160838	0		+			
ANR	160983	CallExpression	strlen ( key )		160838	0					
ANR	160984	Callee	strlen		160838	0					
ANR	160985	Identifier	strlen		160838	0					
ANR	160986	ArgumentList	key		160838	1					
ANR	160987	Argument	key		160838	0					
ANR	160988	Identifier	key		160838	0					
ANR	160989	PrimaryExpression	1		160838	1					
ANR	160990	Argument	& key_tlv		160838	3					
ANR	160991	UnaryOperationExpression	& key_tlv		160838	0					
ANR	160992	UnaryOperator	&		160838	0					
ANR	160993	Identifier	key_tlv		160838	1					
ANR	160994	ExpressionStatement	"CHKr ( KSI_TlvElement_setUtf8String ( attrib_tlv , 0x01 , key_tlv ) )"	360:1:9431:9492	160838	11	True				
ANR	160995	CallExpression	"CHKr ( KSI_TlvElement_setUtf8String ( attrib_tlv , 0x01 , key_tlv ) )"		160838	0					
ANR	160996	Callee	CHKr		160838	0					
ANR	160997	Identifier	CHKr		160838	0					
ANR	160998	ArgumentList	"KSI_TlvElement_setUtf8String ( attrib_tlv , 0x01 , key_tlv )"		160838	1					
ANR	160999	Argument	"KSI_TlvElement_setUtf8String ( attrib_tlv , 0x01 , key_tlv )"		160838	0					
ANR	161000	CallExpression	"KSI_TlvElement_setUtf8String ( attrib_tlv , 0x01 , key_tlv )"		160838	0					
ANR	161001	Callee	KSI_TlvElement_setUtf8String		160838	0					
ANR	161002	Identifier	KSI_TlvElement_setUtf8String		160838	0					
ANR	161003	ArgumentList	attrib_tlv		160838	1					
ANR	161004	Argument	attrib_tlv		160838	0					
ANR	161005	Identifier	attrib_tlv		160838	0					
ANR	161006	Argument	0x01		160838	1					
ANR	161007	PrimaryExpression	0x01		160838	0					
ANR	161008	Argument	key_tlv		160838	2					
ANR	161009	Identifier	key_tlv		160838	0					
ANR	161010	ExpressionStatement	"CHKr ( KSI_Utf8String_new ( ksi -> ctx -> ksi_ctx , value , strlen ( value ) + 1 , & value_tlv ) )"	362:1:9496:9577	160838	12	True				
ANR	161011	CallExpression	"CHKr ( KSI_Utf8String_new ( ksi -> ctx -> ksi_ctx , value , strlen ( value ) + 1 , & value_tlv ) )"		160838	0					
ANR	161012	Callee	CHKr		160838	0					
ANR	161013	Identifier	CHKr		160838	0					
ANR	161014	ArgumentList	"KSI_Utf8String_new ( ksi -> ctx -> ksi_ctx , value , strlen ( value ) + 1 , & value_tlv )"		160838	1					
ANR	161015	Argument	"KSI_Utf8String_new ( ksi -> ctx -> ksi_ctx , value , strlen ( value ) + 1 , & value_tlv )"		160838	0					
ANR	161016	CallExpression	"KSI_Utf8String_new ( ksi -> ctx -> ksi_ctx , value , strlen ( value ) + 1 , & value_tlv )"		160838	0					
ANR	161017	Callee	KSI_Utf8String_new		160838	0					
ANR	161018	Identifier	KSI_Utf8String_new		160838	0					
ANR	161019	ArgumentList	ksi -> ctx -> ksi_ctx		160838	1					
ANR	161020	Argument	ksi -> ctx -> ksi_ctx		160838	0					
ANR	161021	PtrMemberAccess	ksi -> ctx -> ksi_ctx		160838	0					
ANR	161022	PtrMemberAccess	ksi -> ctx		160838	0					
ANR	161023	Identifier	ksi		160838	0					
ANR	161024	Identifier	ctx		160838	1					
ANR	161025	Identifier	ksi_ctx		160838	1					
ANR	161026	Argument	value		160838	1					
ANR	161027	Identifier	value		160838	0					
ANR	161028	Argument	strlen ( value ) + 1		160838	2					
ANR	161029	AdditiveExpression	strlen ( value ) + 1		160838	0		+			
ANR	161030	CallExpression	strlen ( value )		160838	0					
ANR	161031	Callee	strlen		160838	0					
ANR	161032	Identifier	strlen		160838	0					
ANR	161033	ArgumentList	value		160838	1					
ANR	161034	Argument	value		160838	0					
ANR	161035	Identifier	value		160838	0					
ANR	161036	PrimaryExpression	1		160838	1					
ANR	161037	Argument	& value_tlv		160838	3					
ANR	161038	UnaryOperationExpression	& value_tlv		160838	0					
ANR	161039	UnaryOperator	&		160838	0					
ANR	161040	Identifier	value_tlv		160838	1					
ANR	161041	ExpressionStatement	"CHKr ( KSI_TlvElement_setUtf8String ( attrib_tlv , 0x02 , value_tlv ) )"	363:1:9580:9643	160838	13	True				
ANR	161042	CallExpression	"CHKr ( KSI_TlvElement_setUtf8String ( attrib_tlv , 0x02 , value_tlv ) )"		160838	0					
ANR	161043	Callee	CHKr		160838	0					
ANR	161044	Identifier	CHKr		160838	0					
ANR	161045	ArgumentList	"KSI_TlvElement_setUtf8String ( attrib_tlv , 0x02 , value_tlv )"		160838	1					
ANR	161046	Argument	"KSI_TlvElement_setUtf8String ( attrib_tlv , 0x02 , value_tlv )"		160838	0					
ANR	161047	CallExpression	"KSI_TlvElement_setUtf8String ( attrib_tlv , 0x02 , value_tlv )"		160838	0					
ANR	161048	Callee	KSI_TlvElement_setUtf8String		160838	0					
ANR	161049	Identifier	KSI_TlvElement_setUtf8String		160838	0					
ANR	161050	ArgumentList	attrib_tlv		160838	1					
ANR	161051	Argument	attrib_tlv		160838	0					
ANR	161052	Identifier	attrib_tlv		160838	0					
ANR	161053	Argument	0x02		160838	1					
ANR	161054	PrimaryExpression	0x02		160838	0					
ANR	161055	Argument	value_tlv		160838	2					
ANR	161056	Identifier	value_tlv		160838	0					
ANR	161057	ExpressionStatement	"CHKr ( KSI_TlvElement_setElement ( metadata , attrib_tlv ) )"	365:1:9647:9700	160838	14	True				
ANR	161058	CallExpression	"CHKr ( KSI_TlvElement_setElement ( metadata , attrib_tlv ) )"		160838	0					
ANR	161059	Callee	CHKr		160838	0					
ANR	161060	Identifier	CHKr		160838	0					
ANR	161061	ArgumentList	"KSI_TlvElement_setElement ( metadata , attrib_tlv )"		160838	1					
ANR	161062	Argument	"KSI_TlvElement_setElement ( metadata , attrib_tlv )"		160838	0					
ANR	161063	CallExpression	"KSI_TlvElement_setElement ( metadata , attrib_tlv )"		160838	0					
ANR	161064	Callee	KSI_TlvElement_setElement		160838	0					
ANR	161065	Identifier	KSI_TlvElement_setElement		160838	0					
ANR	161066	ArgumentList	metadata		160838	1					
ANR	161067	Argument	metadata		160838	0					
ANR	161068	Identifier	metadata		160838	0					
ANR	161069	Argument	attrib_tlv		160838	1					
ANR	161070	Identifier	attrib_tlv		160838	0					
ANR	161071	ExpressionStatement	"CHKr ( KSI_TlvElement_serialize ( metadata , buffer , 0xFFFF , len , 0 ) )"	367:1:9704:9768	160838	15	True				
ANR	161072	CallExpression	"CHKr ( KSI_TlvElement_serialize ( metadata , buffer , 0xFFFF , len , 0 ) )"		160838	0					
ANR	161073	Callee	CHKr		160838	0					
ANR	161074	Identifier	CHKr		160838	0					
ANR	161075	ArgumentList	"KSI_TlvElement_serialize ( metadata , buffer , 0xFFFF , len , 0 )"		160838	1					
ANR	161076	Argument	"KSI_TlvElement_serialize ( metadata , buffer , 0xFFFF , len , 0 )"		160838	0					
ANR	161077	CallExpression	"KSI_TlvElement_serialize ( metadata , buffer , 0xFFFF , len , 0 )"		160838	0					
ANR	161078	Callee	KSI_TlvElement_serialize		160838	0					
ANR	161079	Identifier	KSI_TlvElement_serialize		160838	0					
ANR	161080	ArgumentList	metadata		160838	1					
ANR	161081	Argument	metadata		160838	0					
ANR	161082	Identifier	metadata		160838	0					
ANR	161083	Argument	buffer		160838	1					
ANR	161084	Identifier	buffer		160838	0					
ANR	161085	Argument	0xFFFF		160838	2					
ANR	161086	PrimaryExpression	0xFFFF		160838	0					
ANR	161087	Argument	len		160838	3					
ANR	161088	Identifier	len		160838	0					
ANR	161089	Argument	0		160838	4					
ANR	161090	PrimaryExpression	0		160838	0					
ANR	161091	Label	done :	369:0:9771:9775	160838	16	True				
ANR	161092	Identifier	done		160838	0					
ANR	161093	IfStatement	if ( metadata )		160838	17					
ANR	161094	Condition	metadata	370:5:9782:9789	160838	0	True				
ANR	161095	Identifier	metadata		160838	0					
ANR	161096	ExpressionStatement	KSI_TlvElement_free ( metadata )	370:15:9792:9821	160838	1	True				
ANR	161097	CallExpression	KSI_TlvElement_free ( metadata )		160838	0					
ANR	161098	Callee	KSI_TlvElement_free		160838	0					
ANR	161099	Identifier	KSI_TlvElement_free		160838	0					
ANR	161100	ArgumentList	metadata		160838	1					
ANR	161101	Argument	metadata		160838	0					
ANR	161102	Identifier	metadata		160838	0					
ANR	161103	IfStatement	if ( attrib_tlv )		160838	18					
ANR	161104	Condition	attrib_tlv	371:5:9828:9837	160838	0	True				
ANR	161105	Identifier	attrib_tlv		160838	0					
ANR	161106	ExpressionStatement	KSI_TlvElement_free ( attrib_tlv )	371:17:9840:9871	160838	1	True				
ANR	161107	CallExpression	KSI_TlvElement_free ( attrib_tlv )		160838	0					
ANR	161108	Callee	KSI_TlvElement_free		160838	0					
ANR	161109	Identifier	KSI_TlvElement_free		160838	0					
ANR	161110	ArgumentList	attrib_tlv		160838	1					
ANR	161111	Argument	attrib_tlv		160838	0					
ANR	161112	Identifier	attrib_tlv		160838	0					
ANR	161113	IfStatement	if ( key_tlv )		160838	19					
ANR	161114	Condition	key_tlv	372:5:9878:9884	160838	0	True				
ANR	161115	Identifier	key_tlv		160838	0					
ANR	161116	ExpressionStatement	KSI_Utf8String_free ( key_tlv )	372:14:9887:9915	160838	1	True				
ANR	161117	CallExpression	KSI_Utf8String_free ( key_tlv )		160838	0					
ANR	161118	Callee	KSI_Utf8String_free		160838	0					
ANR	161119	Identifier	KSI_Utf8String_free		160838	0					
ANR	161120	ArgumentList	key_tlv		160838	1					
ANR	161121	Argument	key_tlv		160838	0					
ANR	161122	Identifier	key_tlv		160838	0					
ANR	161123	IfStatement	if ( value_tlv )		160838	20					
ANR	161124	Condition	value_tlv	373:5:9922:9930	160838	0	True				
ANR	161125	Identifier	value_tlv		160838	0					
ANR	161126	ExpressionStatement	KSI_Utf8String_free ( value_tlv )	373:16:9933:9963	160838	1	True				
ANR	161127	CallExpression	KSI_Utf8String_free ( value_tlv )		160838	0					
ANR	161128	Callee	KSI_Utf8String_free		160838	0					
ANR	161129	Identifier	KSI_Utf8String_free		160838	0					
ANR	161130	ArgumentList	value_tlv		160838	1					
ANR	161131	Argument	value_tlv		160838	0					
ANR	161132	Identifier	value_tlv		160838	0					
ANR	161133	IfStatement	if ( index_tlv )		160838	21					
ANR	161134	Condition	index_tlv	374:5:9970:9978	160838	0	True				
ANR	161135	Identifier	index_tlv		160838	0					
ANR	161136	ExpressionStatement	KSI_Integer_free ( index_tlv )	374:16:9981:10008	160838	1	True				
ANR	161137	CallExpression	KSI_Integer_free ( index_tlv )		160838	0					
ANR	161138	Callee	KSI_Integer_free		160838	0					
ANR	161139	Identifier	KSI_Integer_free		160838	0					
ANR	161140	ArgumentList	index_tlv		160838	1					
ANR	161141	Argument	index_tlv		160838	0					
ANR	161142	Identifier	index_tlv		160838	0					
ANR	161143	ReturnStatement	return r ;	376:1:10012:10020	160838	22	True				
ANR	161144	Identifier	r		160838	0					
ANR	161145	ReturnType	static int		160838	1					
ANR	161146	Identifier	tlvCreateMetadata		160838	2					
ANR	161147	ParameterList	"ksifile ksi , uint64_t record_index , const char * key , const char * value , unsigned char * buffer , size_t * len"		160838	3					
ANR	161148	Parameter	ksifile ksi	343:18:8817:8827	160838	0	True				
ANR	161149	ParameterType	ksifile		160838	0					
ANR	161150	Identifier	ksi		160838	1					
ANR	161151	Parameter	uint64_t record_index	343:31:8830:8850	160838	1	True				
ANR	161152	ParameterType	uint64_t		160838	0					
ANR	161153	Identifier	record_index		160838	1					
ANR	161154	Parameter	const char * key	343:54:8853:8867	160838	2	True				
ANR	161155	ParameterType	const char *		160838	0					
ANR	161156	Identifier	key		160838	1					
ANR	161157	Parameter	const char * value	344:2:8873:8889	160838	3	True				
ANR	161158	ParameterType	const char *		160838	0					
ANR	161159	Identifier	value		160838	1					
ANR	161160	Parameter	unsigned char * buffer	344:21:8892:8912	160838	4	True				
ANR	161161	ParameterType	unsigned char *		160838	0					
ANR	161162	Identifier	buffer		160838	1					
ANR	161163	Parameter	size_t * len	344:44:8915:8925	160838	5	True				
ANR	161164	ParameterType	size_t *		160838	0					
ANR	161165	Identifier	len		160838	1					
ANR	161166	CFGEntryNode	ENTRY		160838		True				
ANR	161167	CFGExitNode	EXIT		160838		True				
ANR	161168	Symbol	ksi		160838						
ANR	161169	Symbol	KSI_TlvElement_setInteger		160838						
ANR	161170	Symbol	metadata		160838						
ANR	161171	Symbol	attrib_tlv -> ftlv . tag		160838						
ANR	161172	Symbol	metadata -> ftlv		160838						
ANR	161173	Symbol	KSI_TlvElement_setUtf8String		160838						
ANR	161174	Symbol	metadata -> ftlv . tag		160838						
ANR	161175	Symbol	KSI_TlvElement_serialize		160838						
ANR	161176	Symbol	& metadata		160838						
ANR	161177	Symbol	attrib_tlv -> ftlv		160838						
ANR	161178	Symbol	KSI_TlvElement_setElement		160838						
ANR	161179	Symbol	record_index		160838						
ANR	161180	Symbol	value_tlv		160838						
ANR	161181	Symbol	strlen		160838						
ANR	161182	Symbol	& index_tlv		160838						
ANR	161183	Symbol	len		160838						
ANR	161184	Symbol	* * ksi		160838						
ANR	161185	Symbol	buffer		160838						
ANR	161186	Symbol	& attrib_tlv		160838						
ANR	161187	Symbol	& key_tlv		160838						
ANR	161188	Symbol	value		160838						
ANR	161189	Symbol	key		160838						
ANR	161190	Symbol	KSI_TlvElement_new		160838						
ANR	161191	Symbol	* attrib_tlv		160838						
ANR	161192	Symbol	ksi -> ctx		160838						
ANR	161193	Symbol	* metadata		160838						
ANR	161194	Symbol	NULL		160838						
ANR	161195	Symbol	KSI_Integer_new		160838						
ANR	161196	Symbol	ksi -> ctx -> ksi_ctx		160838						
ANR	161197	Symbol	attrib_tlv		160838						
ANR	161198	Symbol	* ksi		160838						
ANR	161199	Symbol	r		160838						
ANR	161200	Symbol	index_tlv		160838						
ANR	161201	Symbol	key_tlv		160838						
ANR	161202	Symbol	& value_tlv		160838						
ANR	161203	Symbol	KSI_Utf8String_new		160838						
ANR	161204	Symbol	* ksi -> ctx		160838						
ANR	161205	Function	ksiReadStateFile	388:0:10321:11031							
ANR	161206	FunctionDef	ksiReadStateFile (ksifile ksi)		161205	0					
ANR	161207	CompoundStatement		389:30:10363:11031	161205	0					
ANR	161208	IdentifierDeclStatement	int fd = - 1 ;	390:1:10366:10377	161205	0	True				
ANR	161209	IdentifierDecl	fd = - 1		161205	0					
ANR	161210	IdentifierDeclType	int		161205	0					
ANR	161211	Identifier	fd		161205	1					
ANR	161212	AssignmentExpression	fd = - 1		161205	2		=			
ANR	161213	Identifier	fd		161205	0					
ANR	161214	UnaryOperationExpression	- 1		161205	1					
ANR	161215	UnaryOperator	-		161205	0					
ANR	161216	PrimaryExpression	1		161205	1					
ANR	161217	IdentifierDeclStatement	struct rsksistatefile sf ;	391:1:10380:10404	161205	1	True				
ANR	161218	IdentifierDecl	sf		161205	0					
ANR	161219	IdentifierDeclType	struct rsksistatefile		161205	0					
ANR	161220	Identifier	sf		161205	1					
ANR	161221	IdentifierDeclStatement	bool ret = false ;	392:1:10407:10423	161205	2	True				
ANR	161222	IdentifierDecl	ret = false		161205	0					
ANR	161223	IdentifierDeclType	bool		161205	0					
ANR	161224	Identifier	ret		161205	1					
ANR	161225	AssignmentExpression	ret = false		161205	2		=			
ANR	161226	Identifier	false		161205	0					
ANR	161227	Identifier	false		161205	1					
ANR	161228	ExpressionStatement	"fd = open ( ( char * ) ksi -> statefilename , O_RDONLY | O_NOCTTY | O_CLOEXEC , 0600 )"	394:1:10427:10498	161205	3	True				
ANR	161229	AssignmentExpression	"fd = open ( ( char * ) ksi -> statefilename , O_RDONLY | O_NOCTTY | O_CLOEXEC , 0600 )"		161205	0		=			
ANR	161230	Identifier	fd		161205	0					
ANR	161231	CallExpression	"open ( ( char * ) ksi -> statefilename , O_RDONLY | O_NOCTTY | O_CLOEXEC , 0600 )"		161205	1					
ANR	161232	Callee	open		161205	0					
ANR	161233	Identifier	open		161205	0					
ANR	161234	ArgumentList	( char * ) ksi -> statefilename		161205	1					
ANR	161235	Argument	( char * ) ksi -> statefilename		161205	0					
ANR	161236	CastExpression	( char * ) ksi -> statefilename		161205	0					
ANR	161237	CastTarget	char *		161205	0					
ANR	161238	PtrMemberAccess	ksi -> statefilename		161205	1					
ANR	161239	Identifier	ksi		161205	0					
ANR	161240	Identifier	statefilename		161205	1					
ANR	161241	Argument	O_RDONLY | O_NOCTTY | O_CLOEXEC		161205	1					
ANR	161242	InclusiveOrExpression	O_RDONLY | O_NOCTTY | O_CLOEXEC		161205	0		|			
ANR	161243	Identifier	O_RDONLY		161205	0					
ANR	161244	InclusiveOrExpression	O_NOCTTY | O_CLOEXEC		161205	1		|			
ANR	161245	Identifier	O_NOCTTY		161205	0					
ANR	161246	Identifier	O_CLOEXEC		161205	1					
ANR	161247	Argument	0600		161205	2					
ANR	161248	PrimaryExpression	0600		161205	0					
ANR	161249	IfStatement	if ( fd == - 1 )		161205	4					
ANR	161250	Condition	fd == - 1	395:5:10505:10512	161205	0	True				
ANR	161251	EqualityExpression	fd == - 1		161205	0		==			
ANR	161252	Identifier	fd		161205	0					
ANR	161253	UnaryOperationExpression	- 1		161205	1					
ANR	161254	UnaryOperator	-		161205	0					
ANR	161255	PrimaryExpression	1		161205	1					
ANR	161256	GotoStatement	goto done ;	396:2:10517:10526	161205	1	True				
ANR	161257	Identifier	done		161205	0					
ANR	161258	IfStatement	"if ( read ( fd , & sf , sizeof ( sf ) ) != sizeof ( sf ) )"		161205	5					
ANR	161259	Condition	"read ( fd , & sf , sizeof ( sf ) ) != sizeof ( sf )"	398:5:10534:10574	161205	0	True				
ANR	161260	EqualityExpression	"read ( fd , & sf , sizeof ( sf ) ) != sizeof ( sf )"		161205	0		!=			
ANR	161261	CallExpression	"read ( fd , & sf , sizeof ( sf ) )"		161205	0					
ANR	161262	Callee	read		161205	0					
ANR	161263	Identifier	read		161205	0					
ANR	161264	ArgumentList	fd		161205	1					
ANR	161265	Argument	fd		161205	0					
ANR	161266	Identifier	fd		161205	0					
ANR	161267	Argument	& sf		161205	1					
ANR	161268	UnaryOperationExpression	& sf		161205	0					
ANR	161269	UnaryOperator	&		161205	0					
ANR	161270	Identifier	sf		161205	1					
ANR	161271	Argument	sizeof ( sf )		161205	2					
ANR	161272	SizeofExpression	sizeof ( sf )		161205	0					
ANR	161273	Sizeof	sizeof		161205	0					
ANR	161274	SizeofOperand	sf		161205	1					
ANR	161275	SizeofExpression	sizeof ( sf )		161205	1					
ANR	161276	Sizeof	sizeof		161205	0					
ANR	161277	SizeofOperand	sf		161205	1					
ANR	161278	GotoStatement	goto done ;	398:48:10577:10586	161205	1	True				
ANR	161279	Identifier	done		161205	0					
ANR	161280	IfStatement	"if ( strncmp ( sf . hdr , ""KSISTAT10"" , 9 ) )"		161205	6					
ANR	161281	Condition	"strncmp ( sf . hdr , ""KSISTAT10"" , 9 )"	399:5:10593:10623	161205	0	True				
ANR	161282	CallExpression	"strncmp ( sf . hdr , ""KSISTAT10"" , 9 )"		161205	0					
ANR	161283	Callee	strncmp		161205	0					
ANR	161284	Identifier	strncmp		161205	0					
ANR	161285	ArgumentList	sf . hdr		161205	1					
ANR	161286	Argument	sf . hdr		161205	0					
ANR	161287	MemberAccess	sf . hdr		161205	0					
ANR	161288	Identifier	sf		161205	0					
ANR	161289	Identifier	hdr		161205	1					
ANR	161290	Argument	"""KSISTAT10"""		161205	1					
ANR	161291	PrimaryExpression	"""KSISTAT10"""		161205	0					
ANR	161292	Argument	9		161205	2					
ANR	161293	PrimaryExpression	9		161205	0					
ANR	161294	GotoStatement	goto done ;	399:38:10626:10635	161205	1	True				
ANR	161295	Identifier	done		161205	0					
ANR	161296	IfStatement	if ( KSI_getHashLength ( sf . hashID ) != sf . lenHash || KSI_getHashLength ( sf . hashID ) > KSI_MAX_IMPRINT_LEN - 1 )		161205	7					
ANR	161297	Condition	KSI_getHashLength ( sf . hashID ) != sf . lenHash || KSI_getHashLength ( sf . hashID ) > KSI_MAX_IMPRINT_LEN - 1	401:5:10643:10744	161205	0	True				
ANR	161298	OrExpression	KSI_getHashLength ( sf . hashID ) != sf . lenHash || KSI_getHashLength ( sf . hashID ) > KSI_MAX_IMPRINT_LEN - 1		161205	0		||			
ANR	161299	EqualityExpression	KSI_getHashLength ( sf . hashID ) != sf . lenHash		161205	0		!=			
ANR	161300	CallExpression	KSI_getHashLength ( sf . hashID )		161205	0					
ANR	161301	Callee	KSI_getHashLength		161205	0					
ANR	161302	Identifier	KSI_getHashLength		161205	0					
ANR	161303	ArgumentList	sf . hashID		161205	1					
ANR	161304	Argument	sf . hashID		161205	0					
ANR	161305	MemberAccess	sf . hashID		161205	0					
ANR	161306	Identifier	sf		161205	0					
ANR	161307	Identifier	hashID		161205	1					
ANR	161308	MemberAccess	sf . lenHash		161205	1					
ANR	161309	Identifier	sf		161205	0					
ANR	161310	Identifier	lenHash		161205	1					
ANR	161311	RelationalExpression	KSI_getHashLength ( sf . hashID ) > KSI_MAX_IMPRINT_LEN - 1		161205	1		>			
ANR	161312	CallExpression	KSI_getHashLength ( sf . hashID )		161205	0					
ANR	161313	Callee	KSI_getHashLength		161205	0					
ANR	161314	Identifier	KSI_getHashLength		161205	0					
ANR	161315	ArgumentList	sf . hashID		161205	1					
ANR	161316	Argument	sf . hashID		161205	0					
ANR	161317	MemberAccess	sf . hashID		161205	0					
ANR	161318	Identifier	sf		161205	0					
ANR	161319	Identifier	hashID		161205	1					
ANR	161320	AdditiveExpression	KSI_MAX_IMPRINT_LEN - 1		161205	1		-			
ANR	161321	Identifier	KSI_MAX_IMPRINT_LEN		161205	0					
ANR	161322	PrimaryExpression	1		161205	1					
ANR	161323	GotoStatement	goto done ;	403:2:10749:10758	161205	1	True				
ANR	161324	Identifier	done		161205	0					
ANR	161325	IfStatement	"if ( read ( fd , ksi -> lastLeaf + 1 , sf . lenHash ) != sf . lenHash )"		161205	8					
ANR	161326	Condition	"read ( fd , ksi -> lastLeaf + 1 , sf . lenHash ) != sf . lenHash"	405:5:10766:10818	161205	0	True				
ANR	161327	EqualityExpression	"read ( fd , ksi -> lastLeaf + 1 , sf . lenHash ) != sf . lenHash"		161205	0		!=			
ANR	161328	CallExpression	"read ( fd , ksi -> lastLeaf + 1 , sf . lenHash )"		161205	0					
ANR	161329	Callee	read		161205	0					
ANR	161330	Identifier	read		161205	0					
ANR	161331	ArgumentList	fd		161205	1					
ANR	161332	Argument	fd		161205	0					
ANR	161333	Identifier	fd		161205	0					
ANR	161334	Argument	ksi -> lastLeaf + 1		161205	1					
ANR	161335	AdditiveExpression	ksi -> lastLeaf + 1		161205	0		+			
ANR	161336	PtrMemberAccess	ksi -> lastLeaf		161205	0					
ANR	161337	Identifier	ksi		161205	0					
ANR	161338	Identifier	lastLeaf		161205	1					
ANR	161339	PrimaryExpression	1		161205	1					
ANR	161340	Argument	sf . lenHash		161205	2					
ANR	161341	MemberAccess	sf . lenHash		161205	0					
ANR	161342	Identifier	sf		161205	0					
ANR	161343	Identifier	lenHash		161205	1					
ANR	161344	MemberAccess	sf . lenHash		161205	1					
ANR	161345	Identifier	sf		161205	0					
ANR	161346	Identifier	lenHash		161205	1					
ANR	161347	GotoStatement	goto done ;	406:2:10823:10832	161205	1	True				
ANR	161348	Identifier	done		161205	0					
ANR	161349	ExpressionStatement	ksi -> lastLeaf [ 0 ] = sf . hashID	408:1:10836:10864	161205	9	True				
ANR	161350	AssignmentExpression	ksi -> lastLeaf [ 0 ] = sf . hashID		161205	0		=			
ANR	161351	ArrayIndexing	ksi -> lastLeaf [ 0 ]		161205	0					
ANR	161352	PtrMemberAccess	ksi -> lastLeaf		161205	0					
ANR	161353	Identifier	ksi		161205	0					
ANR	161354	Identifier	lastLeaf		161205	1					
ANR	161355	PrimaryExpression	0		161205	1					
ANR	161356	MemberAccess	sf . hashID		161205	1					
ANR	161357	Identifier	sf		161205	0					
ANR	161358	Identifier	hashID		161205	1					
ANR	161359	ExpressionStatement	ret = true	409:1:10867:10877	161205	10	True				
ANR	161360	AssignmentExpression	ret = true		161205	0		=			
ANR	161361	Identifier	ret		161205	0					
ANR	161362	Identifier	true		161205	1					
ANR	161363	Label	done :	411:0:10880:10884	161205	11	True				
ANR	161364	Identifier	done		161205	0					
ANR	161365	IfStatement	if ( ! ret )		161205	12					
ANR	161366	Condition	! ret	412:5:10891:10894	161205	0	True				
ANR	161367	UnaryOperationExpression	! ret		161205	0					
ANR	161368	UnaryOperator	!		161205	0					
ANR	161369	Identifier	ret		161205	1					
ANR	161370	CompoundStatement		24:11:533:533	161205	1					
ANR	161371	ExpressionStatement	"memset ( ksi -> lastLeaf , 0 , sizeof ( ksi -> lastLeaf ) )"	413:2:10901:10949	161205	0	True				
ANR	161372	CallExpression	"memset ( ksi -> lastLeaf , 0 , sizeof ( ksi -> lastLeaf ) )"		161205	0					
ANR	161373	Callee	memset		161205	0					
ANR	161374	Identifier	memset		161205	0					
ANR	161375	ArgumentList	ksi -> lastLeaf		161205	1					
ANR	161376	Argument	ksi -> lastLeaf		161205	0					
ANR	161377	PtrMemberAccess	ksi -> lastLeaf		161205	0					
ANR	161378	Identifier	ksi		161205	0					
ANR	161379	Identifier	lastLeaf		161205	1					
ANR	161380	Argument	0		161205	1					
ANR	161381	PrimaryExpression	0		161205	0					
ANR	161382	Argument	sizeof ( ksi -> lastLeaf )		161205	2					
ANR	161383	SizeofExpression	sizeof ( ksi -> lastLeaf )		161205	0					
ANR	161384	Sizeof	sizeof		161205	0					
ANR	161385	PtrMemberAccess	ksi -> lastLeaf		161205	1					
ANR	161386	Identifier	ksi		161205	0					
ANR	161387	Identifier	lastLeaf		161205	1					
ANR	161388	ExpressionStatement	ksi -> lastLeaf [ 0 ] = ksi -> hashAlg	414:2:10953:10984	161205	1	True				
ANR	161389	AssignmentExpression	ksi -> lastLeaf [ 0 ] = ksi -> hashAlg		161205	0		=			
ANR	161390	ArrayIndexing	ksi -> lastLeaf [ 0 ]		161205	0					
ANR	161391	PtrMemberAccess	ksi -> lastLeaf		161205	0					
ANR	161392	Identifier	ksi		161205	0					
ANR	161393	Identifier	lastLeaf		161205	1					
ANR	161394	PrimaryExpression	0		161205	1					
ANR	161395	PtrMemberAccess	ksi -> hashAlg		161205	1					
ANR	161396	Identifier	ksi		161205	0					
ANR	161397	Identifier	hashAlg		161205	1					
ANR	161398	IfStatement	if ( fd != - 1 )		161205	13					
ANR	161399	Condition	fd != - 1	417:5:10995:11002	161205	0	True				
ANR	161400	EqualityExpression	fd != - 1		161205	0		!=			
ANR	161401	Identifier	fd		161205	0					
ANR	161402	UnaryOperationExpression	- 1		161205	1					
ANR	161403	UnaryOperator	-		161205	0					
ANR	161404	PrimaryExpression	1		161205	1					
ANR	161405	ExpressionStatement	close ( fd )	418:2:11007:11016	161205	1	True				
ANR	161406	CallExpression	close ( fd )		161205	0					
ANR	161407	Callee	close		161205	0					
ANR	161408	Identifier	close		161205	0					
ANR	161409	ArgumentList	fd		161205	1					
ANR	161410	Argument	fd		161205	0					
ANR	161411	Identifier	fd		161205	0					
ANR	161412	ReturnStatement	return ret ;	419:1:11019:11029	161205	14	True				
ANR	161413	Identifier	ret		161205	0					
ANR	161414	ReturnType	static bool		161205	1					
ANR	161415	Identifier	ksiReadStateFile		161205	2					
ANR	161416	ParameterList	ksifile ksi		161205	3					
ANR	161417	Parameter	ksifile ksi	389:17:10350:10360	161205	0	True				
ANR	161418	ParameterType	ksifile		161205	0					
ANR	161419	Identifier	ksi		161205	1					
ANR	161420	CFGEntryNode	ENTRY		161205		True				
ANR	161421	CFGExitNode	EXIT		161205		True				
ANR	161422	Symbol	ksi		161205						
ANR	161423	Symbol	ret		161205						
ANR	161424	Symbol	sf . hdr		161205						
ANR	161425	Symbol	read		161205						
ANR	161426	Symbol	* ksi -> lastLeaf		161205						
ANR	161427	Symbol	sf . hashID		161205						
ANR	161428	Symbol	false		161205						
ANR	161429	Symbol	ksi -> hashAlg		161205						
ANR	161430	Symbol	KSI_MAX_IMPRINT_LEN		161205						
ANR	161431	Symbol	* ksi		161205						
ANR	161432	Symbol	strncmp		161205						
ANR	161433	Symbol	sf . lenHash		161205						
ANR	161434	Symbol	sf		161205						
ANR	161435	Symbol	O_RDONLY		161205						
ANR	161436	Symbol	* * ksi		161205						
ANR	161437	Symbol	ksi -> statefilename		161205						
ANR	161438	Symbol	ksi -> lastLeaf		161205						
ANR	161439	Symbol	O_NOCTTY		161205						
ANR	161440	Symbol	true		161205						
ANR	161441	Symbol	KSI_getHashLength		161205						
ANR	161442	Symbol	& sf		161205						
ANR	161443	Symbol	fd		161205						
ANR	161444	Symbol	open		161205						
ANR	161445	Symbol	O_CLOEXEC		161205						
ANR	161446	Function	ksiWwriteStateFile	425:0:11128:11995							
ANR	161447	FunctionDef	ksiWwriteStateFile (ksifile ksi)		161446	0					
ANR	161448	CompoundStatement		427:0:11172:11995	161446	0					
ANR	161449	IdentifierDeclStatement	int fd ;	428:1:11175:11181	161446	0	True				
ANR	161450	IdentifierDecl	fd		161446	0					
ANR	161451	IdentifierDeclType	int		161446	0					
ANR	161452	Identifier	fd		161446	1					
ANR	161453	IdentifierDeclStatement	struct rsksistatefile sf ;	429:1:11184:11208	161446	1	True				
ANR	161454	IdentifierDecl	sf		161446	0					
ANR	161455	IdentifierDeclType	struct rsksistatefile		161446	0					
ANR	161456	Identifier	sf		161446	1					
ANR	161457	ExpressionStatement	"fd = open ( ( char * ) ksi -> statefilename , O_WRONLY | O_CREAT | O_TRUNC | O_NOCTTY | O_CLOEXEC , ksi -> ctx -> fCreateMode )"	431:1:11212:11325	161446	2	True				
ANR	161458	AssignmentExpression	"fd = open ( ( char * ) ksi -> statefilename , O_WRONLY | O_CREAT | O_TRUNC | O_NOCTTY | O_CLOEXEC , ksi -> ctx -> fCreateMode )"		161446	0		=			
ANR	161459	Identifier	fd		161446	0					
ANR	161460	CallExpression	"open ( ( char * ) ksi -> statefilename , O_WRONLY | O_CREAT | O_TRUNC | O_NOCTTY | O_CLOEXEC , ksi -> ctx -> fCreateMode )"		161446	1					
ANR	161461	Callee	open		161446	0					
ANR	161462	Identifier	open		161446	0					
ANR	161463	ArgumentList	( char * ) ksi -> statefilename		161446	1					
ANR	161464	Argument	( char * ) ksi -> statefilename		161446	0					
ANR	161465	CastExpression	( char * ) ksi -> statefilename		161446	0					
ANR	161466	CastTarget	char *		161446	0					
ANR	161467	PtrMemberAccess	ksi -> statefilename		161446	1					
ANR	161468	Identifier	ksi		161446	0					
ANR	161469	Identifier	statefilename		161446	1					
ANR	161470	Argument	O_WRONLY | O_CREAT | O_TRUNC | O_NOCTTY | O_CLOEXEC		161446	1					
ANR	161471	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC | O_NOCTTY | O_CLOEXEC		161446	0		|			
ANR	161472	Identifier	O_WRONLY		161446	0					
ANR	161473	InclusiveOrExpression	O_CREAT | O_TRUNC | O_NOCTTY | O_CLOEXEC		161446	1		|			
ANR	161474	Identifier	O_CREAT		161446	0					
ANR	161475	InclusiveOrExpression	O_TRUNC | O_NOCTTY | O_CLOEXEC		161446	1		|			
ANR	161476	Identifier	O_TRUNC		161446	0					
ANR	161477	InclusiveOrExpression	O_NOCTTY | O_CLOEXEC		161446	1		|			
ANR	161478	Identifier	O_NOCTTY		161446	0					
ANR	161479	Identifier	O_CLOEXEC		161446	1					
ANR	161480	Argument	ksi -> ctx -> fCreateMode		161446	2					
ANR	161481	PtrMemberAccess	ksi -> ctx -> fCreateMode		161446	0					
ANR	161482	PtrMemberAccess	ksi -> ctx		161446	0					
ANR	161483	Identifier	ksi		161446	0					
ANR	161484	Identifier	ctx		161446	1					
ANR	161485	Identifier	fCreateMode		161446	1					
ANR	161486	IfStatement	if ( fd == - 1 )		161446	3					
ANR	161487	Condition	fd == - 1	433:4:11331:11338	161446	0	True				
ANR	161488	EqualityExpression	fd == - 1		161446	0		==			
ANR	161489	Identifier	fd		161446	0					
ANR	161490	UnaryOperationExpression	- 1		161446	1					
ANR	161491	UnaryOperator	-		161446	0					
ANR	161492	PrimaryExpression	1		161446	1					
ANR	161493	GotoStatement	goto done ;	434:2:11343:11352	161446	1	True				
ANR	161494	Identifier	done		161446	0					
ANR	161495	IfStatement	if ( ksi -> ctx -> fileUID != ( uid_t ) - 1 || ksi -> ctx -> fileGID != ( gid_t ) - 1 )		161446	4					
ANR	161496	Condition	ksi -> ctx -> fileUID != ( uid_t ) - 1 || ksi -> ctx -> fileGID != ( gid_t ) - 1	435:5:11359:11426	161446	0	True				
ANR	161497	OrExpression	ksi -> ctx -> fileUID != ( uid_t ) - 1 || ksi -> ctx -> fileGID != ( gid_t ) - 1		161446	0		||			
ANR	161498	EqualityExpression	ksi -> ctx -> fileUID != ( uid_t ) - 1		161446	0		!=			
ANR	161499	PtrMemberAccess	ksi -> ctx -> fileUID		161446	0					
ANR	161500	PtrMemberAccess	ksi -> ctx		161446	0					
ANR	161501	Identifier	ksi		161446	0					
ANR	161502	Identifier	ctx		161446	1					
ANR	161503	Identifier	fileUID		161446	1					
ANR	161504	CastExpression	( uid_t ) - 1		161446	1					
ANR	161505	CastTarget	uid_t		161446	0					
ANR	161506	UnaryOperationExpression	- 1		161446	1					
ANR	161507	UnaryOperator	-		161446	0					
ANR	161508	PrimaryExpression	1		161446	1					
ANR	161509	EqualityExpression	ksi -> ctx -> fileGID != ( gid_t ) - 1		161446	1		!=			
ANR	161510	PtrMemberAccess	ksi -> ctx -> fileGID		161446	0					
ANR	161511	PtrMemberAccess	ksi -> ctx		161446	0					
ANR	161512	Identifier	ksi		161446	0					
ANR	161513	Identifier	ctx		161446	1					
ANR	161514	Identifier	fileGID		161446	1					
ANR	161515	CastExpression	( gid_t ) - 1		161446	1					
ANR	161516	CastTarget	gid_t		161446	0					
ANR	161517	UnaryOperationExpression	- 1		161446	1					
ANR	161518	UnaryOperator	-		161446	0					
ANR	161519	PrimaryExpression	1		161446	1					
ANR	161520	CompoundStatement		9:75:256:256	161446	1					
ANR	161521	IfStatement	"if ( fchown ( fd , ksi -> ctx -> fileUID , ksi -> ctx -> fileGID ) != 0 )"		161446	0					
ANR	161522	Condition	"fchown ( fd , ksi -> ctx -> fileUID , ksi -> ctx -> fileGID ) != 0"	437:6:11472:11524	161446	0	True				
ANR	161523	EqualityExpression	"fchown ( fd , ksi -> ctx -> fileUID , ksi -> ctx -> fileGID ) != 0"		161446	0		!=			
ANR	161524	CallExpression	"fchown ( fd , ksi -> ctx -> fileUID , ksi -> ctx -> fileGID )"		161446	0					
ANR	161525	Callee	fchown		161446	0					
ANR	161526	Identifier	fchown		161446	0					
ANR	161527	ArgumentList	fd		161446	1					
ANR	161528	Argument	fd		161446	0					
ANR	161529	Identifier	fd		161446	0					
ANR	161530	Argument	ksi -> ctx -> fileUID		161446	1					
ANR	161531	PtrMemberAccess	ksi -> ctx -> fileUID		161446	0					
ANR	161532	PtrMemberAccess	ksi -> ctx		161446	0					
ANR	161533	Identifier	ksi		161446	0					
ANR	161534	Identifier	ctx		161446	1					
ANR	161535	Identifier	fileUID		161446	1					
ANR	161536	Argument	ksi -> ctx -> fileGID		161446	2					
ANR	161537	PtrMemberAccess	ksi -> ctx -> fileGID		161446	0					
ANR	161538	PtrMemberAccess	ksi -> ctx		161446	0					
ANR	161539	Identifier	ksi		161446	0					
ANR	161540	Identifier	ctx		161446	1					
ANR	161541	Identifier	fileGID		161446	1					
ANR	161542	PrimaryExpression	0		161446	1					
ANR	161543	CompoundStatement		11:61:354:354	161446	1					
ANR	161544	ExpressionStatement	"report ( ksi -> ctx , ""lmsig_ksi: chown for file '%s' failed: %s"" , ksi -> statefilename , strerror ( errno ) )"	438:3:11532:11634	161446	0	True				
ANR	161545	CallExpression	"report ( ksi -> ctx , ""lmsig_ksi: chown for file '%s' failed: %s"" , ksi -> statefilename , strerror ( errno ) )"		161446	0					
ANR	161546	Callee	report		161446	0					
ANR	161547	Identifier	report		161446	0					
ANR	161548	ArgumentList	ksi -> ctx		161446	1					
ANR	161549	Argument	ksi -> ctx		161446	0					
ANR	161550	PtrMemberAccess	ksi -> ctx		161446	0					
ANR	161551	Identifier	ksi		161446	0					
ANR	161552	Identifier	ctx		161446	1					
ANR	161553	Argument	"""lmsig_ksi: chown for file '%s' failed: %s"""		161446	1					
ANR	161554	PrimaryExpression	"""lmsig_ksi: chown for file '%s' failed: %s"""		161446	0					
ANR	161555	Argument	ksi -> statefilename		161446	2					
ANR	161556	PtrMemberAccess	ksi -> statefilename		161446	0					
ANR	161557	Identifier	ksi		161446	0					
ANR	161558	Identifier	statefilename		161446	1					
ANR	161559	Argument	strerror ( errno )		161446	3					
ANR	161560	CallExpression	strerror ( errno )		161446	0					
ANR	161561	Callee	strerror		161446	0					
ANR	161562	Identifier	strerror		161446	0					
ANR	161563	ArgumentList	errno		161446	1					
ANR	161564	Argument	errno		161446	0					
ANR	161565	Identifier	errno		161446	0					
ANR	161566	ExpressionStatement	"memcpy ( sf . hdr , ""KSISTAT10"" , 9 )"	443:1:11645:11675	161446	5	True				
ANR	161567	CallExpression	"memcpy ( sf . hdr , ""KSISTAT10"" , 9 )"		161446	0					
ANR	161568	Callee	memcpy		161446	0					
ANR	161569	Identifier	memcpy		161446	0					
ANR	161570	ArgumentList	sf . hdr		161446	1					
ANR	161571	Argument	sf . hdr		161446	0					
ANR	161572	MemberAccess	sf . hdr		161446	0					
ANR	161573	Identifier	sf		161446	0					
ANR	161574	Identifier	hdr		161446	1					
ANR	161575	Argument	"""KSISTAT10"""		161446	1					
ANR	161576	PrimaryExpression	"""KSISTAT10"""		161446	0					
ANR	161577	Argument	9		161446	2					
ANR	161578	PrimaryExpression	9		161446	0					
ANR	161579	ExpressionStatement	sf . hashID = ksi -> hashAlg	444:1:11678:11702	161446	6	True				
ANR	161580	AssignmentExpression	sf . hashID = ksi -> hashAlg		161446	0		=			
ANR	161581	MemberAccess	sf . hashID		161446	0					
ANR	161582	Identifier	sf		161446	0					
ANR	161583	Identifier	hashID		161446	1					
ANR	161584	PtrMemberAccess	ksi -> hashAlg		161446	1					
ANR	161585	Identifier	ksi		161446	0					
ANR	161586	Identifier	hashAlg		161446	1					
ANR	161587	ExpressionStatement	sf . lenHash = KSI_getHashLength ( ksi -> lastLeaf [ 0 ] )	445:1:11705:11753	161446	7	True				
ANR	161588	AssignmentExpression	sf . lenHash = KSI_getHashLength ( ksi -> lastLeaf [ 0 ] )		161446	0		=			
ANR	161589	MemberAccess	sf . lenHash		161446	0					
ANR	161590	Identifier	sf		161446	0					
ANR	161591	Identifier	lenHash		161446	1					
ANR	161592	CallExpression	KSI_getHashLength ( ksi -> lastLeaf [ 0 ] )		161446	1					
ANR	161593	Callee	KSI_getHashLength		161446	0					
ANR	161594	Identifier	KSI_getHashLength		161446	0					
ANR	161595	ArgumentList	ksi -> lastLeaf [ 0 ]		161446	1					
ANR	161596	Argument	ksi -> lastLeaf [ 0 ]		161446	0					
ANR	161597	ArrayIndexing	ksi -> lastLeaf [ 0 ]		161446	0					
ANR	161598	PtrMemberAccess	ksi -> lastLeaf		161446	0					
ANR	161599	Identifier	ksi		161446	0					
ANR	161600	Identifier	lastLeaf		161446	1					
ANR	161601	PrimaryExpression	0		161446	1					
ANR	161602	IfStatement	"if ( write ( fd , & sf , sizeof ( sf ) ) )"		161446	8					
ANR	161603	Condition	"write ( fd , & sf , sizeof ( sf ) )"	449:4:11884:11909	161446	0	True				
ANR	161604	CallExpression	"write ( fd , & sf , sizeof ( sf ) )"		161446	0					
ANR	161605	Callee	write		161446	0					
ANR	161606	Identifier	write		161446	0					
ANR	161607	ArgumentList	fd		161446	1					
ANR	161608	Argument	fd		161446	0					
ANR	161609	Identifier	fd		161446	0					
ANR	161610	Argument	& sf		161446	1					
ANR	161611	UnaryOperationExpression	& sf		161446	0					
ANR	161612	UnaryOperator	&		161446	0					
ANR	161613	Identifier	sf		161446	1					
ANR	161614	Argument	sizeof ( sf )		161446	2					
ANR	161615	SizeofExpression	sizeof ( sf )		161446	0					
ANR	161616	Sizeof	sizeof		161446	0					
ANR	161617	SizeofOperand	sf		161446	1					
ANR	161618	CompoundStatement		23:31:738:738	161446	1					
ANR	161619	ExpressionStatement		449:33:11913:11913	161446	9	True				
ANR	161620	IfStatement	"if ( write ( fd , ksi -> lastLeaf + 1 , sf . lenHash ) )"		161446	10					
ANR	161621	Condition	"write ( fd , ksi -> lastLeaf + 1 , sf . lenHash )"	450:5:11920:11959	161446	0	True				
ANR	161622	CallExpression	"write ( fd , ksi -> lastLeaf + 1 , sf . lenHash )"		161446	0					
ANR	161623	Callee	write		161446	0					
ANR	161624	Identifier	write		161446	0					
ANR	161625	ArgumentList	fd		161446	1					
ANR	161626	Argument	fd		161446	0					
ANR	161627	Identifier	fd		161446	0					
ANR	161628	Argument	ksi -> lastLeaf + 1		161446	1					
ANR	161629	AdditiveExpression	ksi -> lastLeaf + 1		161446	0		+			
ANR	161630	PtrMemberAccess	ksi -> lastLeaf		161446	0					
ANR	161631	Identifier	ksi		161446	0					
ANR	161632	Identifier	lastLeaf		161446	1					
ANR	161633	PrimaryExpression	1		161446	1					
ANR	161634	Argument	sf . lenHash		161446	2					
ANR	161635	MemberAccess	sf . lenHash		161446	0					
ANR	161636	Identifier	sf		161446	0					
ANR	161637	Identifier	lenHash		161446	1					
ANR	161638	CompoundStatement		24:47:789:789	161446	1					
ANR	161639	ExpressionStatement		451:2:11966:11966	161446	11	True				
ANR	161640	ExpressionStatement	close ( fd )	452:1:11969:11978	161446	12	True				
ANR	161641	CallExpression	close ( fd )		161446	0					
ANR	161642	Callee	close		161446	0					
ANR	161643	Identifier	close		161446	0					
ANR	161644	ArgumentList	fd		161446	1					
ANR	161645	Argument	fd		161446	0					
ANR	161646	Identifier	fd		161446	0					
ANR	161647	Label	done :	453:0:11980:11984	161446	13	True				
ANR	161648	Identifier	done		161446	0					
ANR	161649	ReturnStatement	return ;	454:1:11987:11993	161446	14	True				
ANR	161650	ReturnType	static void		161446	1					
ANR	161651	Identifier	ksiWwriteStateFile		161446	2					
ANR	161652	ParameterList	ksifile ksi		161446	3					
ANR	161653	Parameter	ksifile ksi	426:19:11159:11169	161446	0	True				
ANR	161654	ParameterType	ksifile		161446	0					
ANR	161655	Identifier	ksi		161446	1					
ANR	161656	CFGEntryNode	ENTRY		161446		True				
ANR	161657	CFGExitNode	EXIT		161446		True				
ANR	161658	Symbol	ksi		161446						
ANR	161659	Symbol	O_CREAT		161446						
ANR	161660	Symbol	ksi -> ctx -> fileUID		161446						
ANR	161661	Symbol	ksi -> ctx -> fileGID		161446						
ANR	161662	Symbol	sf . hashID		161446						
ANR	161663	Symbol	ksi -> hashAlg		161446						
ANR	161664	Symbol	sf		161446						
ANR	161665	Symbol	* * ksi		161446						
ANR	161666	Symbol	ksi -> statefilename		161446						
ANR	161667	Symbol	ksi -> lastLeaf		161446						
ANR	161668	Symbol	O_NOCTTY		161446						
ANR	161669	Symbol	& sf		161446						
ANR	161670	Symbol	write		161446						
ANR	161671	Symbol	ksi -> ctx		161446						
ANR	161672	Symbol	sf . hdr		161446						
ANR	161673	Symbol	errno		161446						
ANR	161674	Symbol	* ksi -> lastLeaf		161446						
ANR	161675	Symbol	ksi -> ctx -> fCreateMode		161446						
ANR	161676	Symbol	fchown		161446						
ANR	161677	Symbol	* ksi		161446						
ANR	161678	Symbol	strerror		161446						
ANR	161679	Symbol	O_TRUNC		161446						
ANR	161680	Symbol	sf . lenHash		161446						
ANR	161681	Symbol	KSI_getHashLength		161446						
ANR	161682	Symbol	O_WRONLY		161446						
ANR	161683	Symbol	fd		161446						
ANR	161684	Symbol	O_CLOEXEC		161446						
ANR	161685	Symbol	open		161446						
ANR	161686	Symbol	* ksi -> ctx		161446						
ANR	161687	Function	ksiCloseSigFile	458:0:11999:12231							
ANR	161688	FunctionDef	ksiCloseSigFile (ksifile ksi)		161687	0					
ANR	161689	CompoundStatement		459:29:12039:12231	161687	0					
ANR	161690	ExpressionStatement	fclose ( ksi -> blockFile )	460:1:12042:12064	161687	0	True				
ANR	161691	CallExpression	fclose ( ksi -> blockFile )		161687	0					
ANR	161692	Callee	fclose		161687	0					
ANR	161693	Identifier	fclose		161687	0					
ANR	161694	ArgumentList	ksi -> blockFile		161687	1					
ANR	161695	Argument	ksi -> blockFile		161687	0					
ANR	161696	PtrMemberAccess	ksi -> blockFile		161687	0					
ANR	161697	Identifier	ksi		161687	0					
ANR	161698	Identifier	blockFile		161687	1					
ANR	161699	ExpressionStatement	ksi -> blockFile = NULL	461:1:12067:12088	161687	1	True				
ANR	161700	AssignmentExpression	ksi -> blockFile = NULL		161687	0		=			
ANR	161701	PtrMemberAccess	ksi -> blockFile		161687	0					
ANR	161702	Identifier	ksi		161687	0					
ANR	161703	Identifier	blockFile		161687	1					
ANR	161704	Identifier	NULL		161687	1					
ANR	161705	IfStatement	if ( ksi -> ctx -> syncMode == LOGSIG_ASYNCHRONOUS )		161687	2					
ANR	161706	Condition	ksi -> ctx -> syncMode == LOGSIG_ASYNCHRONOUS	462:5:12095:12135	161687	0	True				
ANR	161707	EqualityExpression	ksi -> ctx -> syncMode == LOGSIG_ASYNCHRONOUS		161687	0		==			
ANR	161708	PtrMemberAccess	ksi -> ctx -> syncMode		161687	0					
ANR	161709	PtrMemberAccess	ksi -> ctx		161687	0					
ANR	161710	Identifier	ksi		161687	0					
ANR	161711	Identifier	ctx		161687	1					
ANR	161712	Identifier	syncMode		161687	1					
ANR	161713	Identifier	LOGSIG_ASYNCHRONOUS		161687	1					
ANR	161714	ExpressionStatement	"add_queue_item ( ksi -> ctx , QITEM_CLOSE_FILE , 0 , 0 , 0 )"	463:2:12140:12191	161687	1	True				
ANR	161715	CallExpression	"add_queue_item ( ksi -> ctx , QITEM_CLOSE_FILE , 0 , 0 , 0 )"		161687	0					
ANR	161716	Callee	add_queue_item		161687	0					
ANR	161717	Identifier	add_queue_item		161687	0					
ANR	161718	ArgumentList	ksi -> ctx		161687	1					
ANR	161719	Argument	ksi -> ctx		161687	0					
ANR	161720	PtrMemberAccess	ksi -> ctx		161687	0					
ANR	161721	Identifier	ksi		161687	0					
ANR	161722	Identifier	ctx		161687	1					
ANR	161723	Argument	QITEM_CLOSE_FILE		161687	1					
ANR	161724	Identifier	QITEM_CLOSE_FILE		161687	0					
ANR	161725	Argument	0		161687	2					
ANR	161726	PrimaryExpression	0		161687	0					
ANR	161727	Argument	0		161687	3					
ANR	161728	PrimaryExpression	0		161687	0					
ANR	161729	Argument	0		161687	4					
ANR	161730	PrimaryExpression	0		161687	0					
ANR	161731	ExpressionStatement	ksiWwriteStateFile ( ksi )	465:1:12195:12218	161687	3	True				
ANR	161732	CallExpression	ksiWwriteStateFile ( ksi )		161687	0					
ANR	161733	Callee	ksiWwriteStateFile		161687	0					
ANR	161734	Identifier	ksiWwriteStateFile		161687	0					
ANR	161735	ArgumentList	ksi		161687	1					
ANR	161736	Argument	ksi		161687	0					
ANR	161737	Identifier	ksi		161687	0					
ANR	161738	ReturnStatement	return 0 ;	466:1:12221:12229	161687	4	True				
ANR	161739	PrimaryExpression	0		161687	0					
ANR	161740	ReturnType	static int		161687	1					
ANR	161741	Identifier	ksiCloseSigFile		161687	2					
ANR	161742	ParameterList	ksifile ksi		161687	3					
ANR	161743	Parameter	ksifile ksi	459:16:12026:12036	161687	0	True				
ANR	161744	ParameterType	ksifile		161687	0					
ANR	161745	Identifier	ksi		161687	1					
ANR	161746	CFGEntryNode	ENTRY		161687		True				
ANR	161747	CFGExitNode	EXIT		161687		True				
ANR	161748	Symbol	ksi		161687						
ANR	161749	Symbol	ksi -> ctx		161687						
ANR	161750	Symbol	ksi -> ctx -> syncMode		161687						
ANR	161751	Symbol	NULL		161687						
ANR	161752	Symbol	* * ksi		161687						
ANR	161753	Symbol	LOGSIG_ASYNCHRONOUS		161687						
ANR	161754	Symbol	* ksi		161687						
ANR	161755	Symbol	QITEM_CLOSE_FILE		161687						
ANR	161756	Symbol	ksi -> blockFile		161687						
ANR	161757	Symbol	* ksi -> ctx		161687						
ANR	161758	Function	mkpath	469:0:12234:12540							
ANR	161759	FunctionDef	"mkpath (char * path , mode_t mode , uid_t uid , gid_t gid)"		161758	0					
ANR	161760	CompoundStatement		469:65:12299:12540	161758	0					
ANR	161761	ForStatement	"for ( char * p = strchr ( path + 1 , '/' ) ; p ; p = strchr ( p + 1 , '/' ) )"		161758	0					
ANR	161762	ForInit	"char * p = strchr ( path + 1 , '/' ) ;"	471:6:12308:12339	161758	0	True				
ANR	161763	IdentifierDeclStatement	"char * p = strchr ( path + 1 , '/' ) ;"		161758	0					
ANR	161764	IdentifierDecl	"* p = strchr ( path + 1 , '/' )"		161758	0					
ANR	161765	IdentifierDeclType	char *		161758	0					
ANR	161766	Identifier	p		161758	1					
ANR	161767	AssignmentExpression	"* p = strchr ( path + 1 , '/' )"		161758	2		=			
ANR	161768	Identifier	p		161758	0					
ANR	161769	CallExpression	"strchr ( path + 1 , '/' )"		161758	1					
ANR	161770	Callee	strchr		161758	0					
ANR	161771	Identifier	strchr		161758	0					
ANR	161772	ArgumentList	path + 1		161758	1					
ANR	161773	Argument	path + 1		161758	0					
ANR	161774	AdditiveExpression	path + 1		161758	0		+			
ANR	161775	Identifier	path		161758	0					
ANR	161776	PrimaryExpression	1		161758	1					
ANR	161777	Argument	'/'		161758	1					
ANR	161778	PrimaryExpression	'/'		161758	0					
ANR	161779	Condition	p	471:39:12341:12341	161758	1	True				
ANR	161780	Identifier	p		161758	0					
ANR	161781	AssignmentExpression	"p = strchr ( p + 1 , '/' )"	471:42:12344:12365	161758	2	True	=			
ANR	161782	Identifier	p		161758	0					
ANR	161783	CallExpression	"strchr ( p + 1 , '/' )"		161758	1					
ANR	161784	Callee	strchr		161758	0					
ANR	161785	Identifier	strchr		161758	0					
ANR	161786	ArgumentList	p + 1		161758	1					
ANR	161787	Argument	p + 1		161758	0					
ANR	161788	AdditiveExpression	p + 1		161758	0		+			
ANR	161789	Identifier	p		161758	0					
ANR	161790	PrimaryExpression	1		161758	1					
ANR	161791	Argument	'/'		161758	1					
ANR	161792	PrimaryExpression	'/'		161758	0					
ANR	161793	CompoundStatement		3:66:68:68	161758	3					
ANR	161794	ExpressionStatement	* p = '\\0'	472:2:12372:12381	161758	0	True				
ANR	161795	AssignmentExpression	* p = '\\0'		161758	0		=			
ANR	161796	UnaryOperationExpression	* p		161758	0					
ANR	161797	UnaryOperator	*		161758	0					
ANR	161798	Identifier	p		161758	1					
ANR	161799	PrimaryExpression	'\\0'		161758	1					
ANR	161800	IfStatement	"if ( mkdir ( path , mode ) == - 1 )"		161758	1					
ANR	161801	Condition	"mkdir ( path , mode ) == - 1"	473:6:12389:12411	161758	0	True				
ANR	161802	EqualityExpression	"mkdir ( path , mode ) == - 1"		161758	0		==			
ANR	161803	CallExpression	"mkdir ( path , mode )"		161758	0					
ANR	161804	Callee	mkdir		161758	0					
ANR	161805	Identifier	mkdir		161758	0					
ANR	161806	ArgumentList	path		161758	1					
ANR	161807	Argument	path		161758	0					
ANR	161808	Identifier	path		161758	0					
ANR	161809	Argument	mode		161758	1					
ANR	161810	Identifier	mode		161758	0					
ANR	161811	UnaryOperationExpression	- 1		161758	1					
ANR	161812	UnaryOperator	-		161758	0					
ANR	161813	PrimaryExpression	1		161758	1					
ANR	161814	CompoundStatement		5:31:114:114	161758	1					
ANR	161815	IfStatement	if ( errno != EEXIST )		161758	0					
ANR	161816	Condition	errno != EEXIST	474:7:12423:12437	161758	0	True				
ANR	161817	EqualityExpression	errno != EEXIST		161758	0		!=			
ANR	161818	Identifier	errno		161758	0					
ANR	161819	Identifier	EEXIST		161758	1					
ANR	161820	CompoundStatement		6:24:140:140	161758	1					
ANR	161821	ExpressionStatement	* p = '/'	475:4:12446:12454	161758	0	True				
ANR	161822	AssignmentExpression	* p = '/'		161758	0		=			
ANR	161823	UnaryOperationExpression	* p		161758	0					
ANR	161824	UnaryOperator	*		161758	0					
ANR	161825	Identifier	p		161758	1					
ANR	161826	PrimaryExpression	'/'		161758	1					
ANR	161827	ReturnStatement	return - 1 ;	476:4:12460:12469	161758	1	True				
ANR	161828	UnaryOperationExpression	- 1		161758	0					
ANR	161829	UnaryOperator	-		161758	0					
ANR	161830	PrimaryExpression	1		161758	1					
ANR	161831	IfStatement	"if ( chown ( p , uid , gid ) )"		161758	1					
ANR	161832	Condition	"chown ( p , uid , gid )"	478:7:12483:12500	161758	0	True				
ANR	161833	CallExpression	"chown ( p , uid , gid )"		161758	0					
ANR	161834	Callee	chown		161758	0					
ANR	161835	Identifier	chown		161758	0					
ANR	161836	ArgumentList	p		161758	1					
ANR	161837	Argument	p		161758	0					
ANR	161838	Identifier	p		161758	0					
ANR	161839	Argument	uid		161758	1					
ANR	161840	Identifier	uid		161758	0					
ANR	161841	Argument	gid		161758	2					
ANR	161842	Identifier	gid		161758	0					
ANR	161843	CompoundStatement		10:27:203:203	161758	1					
ANR	161844	ExpressionStatement	* p = '/'	481:2:12516:12524	161758	2	True				
ANR	161845	AssignmentExpression	* p = '/'		161758	0		=			
ANR	161846	UnaryOperationExpression	* p		161758	0					
ANR	161847	UnaryOperator	*		161758	0					
ANR	161848	Identifier	p		161758	1					
ANR	161849	PrimaryExpression	'/'		161758	1					
ANR	161850	ReturnStatement	return 0 ;	483:1:12530:12538	161758	1	True				
ANR	161851	PrimaryExpression	0		161758	0					
ANR	161852	ReturnType	static int		161758	1					
ANR	161853	Identifier	mkpath		161758	2					
ANR	161854	ParameterList	"char * path , mode_t mode , uid_t uid , gid_t gid"		161758	3					
ANR	161855	Parameter	char * path	469:18:12252:12261	161758	0	True				
ANR	161856	ParameterType	char *		161758	0					
ANR	161857	Identifier	path		161758	1					
ANR	161858	Parameter	mode_t mode	469:30:12264:12274	161758	1	True				
ANR	161859	ParameterType	mode_t		161758	0					
ANR	161860	Identifier	mode		161758	1					
ANR	161861	Parameter	uid_t uid	469:43:12277:12285	161758	2	True				
ANR	161862	ParameterType	uid_t		161758	0					
ANR	161863	Identifier	uid		161758	1					
ANR	161864	Parameter	gid_t gid	469:54:12288:12296	161758	3	True				
ANR	161865	ParameterType	gid_t		161758	0					
ANR	161866	Identifier	gid		161758	1					
ANR	161867	CFGEntryNode	ENTRY		161758		True				
ANR	161868	CFGExitNode	EXIT		161758		True				
ANR	161869	Symbol	mode		161758						
ANR	161870	Symbol	p		161758						
ANR	161871	Symbol	path		161758						
ANR	161872	Symbol	uid		161758						
ANR	161873	Symbol	EEXIST		161758						
ANR	161874	Symbol	errno		161758						
ANR	161875	Symbol	gid		161758						
ANR	161876	Symbol	chown		161758						
ANR	161877	Symbol	strchr		161758						
ANR	161878	Symbol	* p		161758						
ANR	161879	Symbol	mkdir		161758						
ANR	161880	Function	ksiCreateFile	486:0:12543:13854							
ANR	161881	FunctionDef	"ksiCreateFile (rsksictx ctx , const char * path , uid_t uid , gid_t gid , int mode , bool lockit , const char * header)"		161880	0					
ANR	161882	CompoundStatement		487:111:12667:13854	161880	0					
ANR	161883	IdentifierDeclStatement	int fd = - 1 ;	488:1:12670:12681	161880	0	True				
ANR	161884	IdentifierDecl	fd = - 1		161880	0					
ANR	161885	IdentifierDeclType	int		161880	0					
ANR	161886	Identifier	fd		161880	1					
ANR	161887	AssignmentExpression	fd = - 1		161880	2		=			
ANR	161888	Identifier	fd		161880	0					
ANR	161889	UnaryOperationExpression	- 1		161880	1					
ANR	161890	UnaryOperator	-		161880	0					
ANR	161891	PrimaryExpression	1		161880	1					
ANR	161892	IdentifierDeclStatement	struct stat stat_st ;	489:1:12684:12703	161880	1	True				
ANR	161893	IdentifierDecl	stat_st		161880	0					
ANR	161894	IdentifierDeclType	struct stat		161880	0					
ANR	161895	Identifier	stat_st		161880	1					
ANR	161896	IdentifierDeclStatement	FILE * f = NULL ;	490:1:12706:12720	161880	2	True				
ANR	161897	IdentifierDecl	* f = NULL		161880	0					
ANR	161898	IdentifierDeclType	FILE *		161880	0					
ANR	161899	Identifier	f		161880	1					
ANR	161900	AssignmentExpression	* f = NULL		161880	2		=			
ANR	161901	Identifier	NULL		161880	0					
ANR	161902	Identifier	NULL		161880	1					
ANR	161903	IdentifierDeclStatement	"struct flock lock = { F_WRLCK , SEEK_SET , 0 , 0 , 0 } ;"	491:1:12723:12771	161880	3	True				
ANR	161904	IdentifierDecl	"lock = { F_WRLCK , SEEK_SET , 0 , 0 , 0 }"		161880	0					
ANR	161905	IdentifierDeclType	struct flock		161880	0					
ANR	161906	Identifier	lock		161880	1					
ANR	161907	AssignmentExpression	"lock = { F_WRLCK , SEEK_SET , 0 , 0 , 0 }"		161880	2		=			
ANR	161908	Identifier	lock		161880	0					
ANR	161909	InitializerList	F_WRLCK		161880	1					
ANR	161910	Identifier	F_WRLCK		161880	0					
ANR	161911	Identifier	SEEK_SET		161880	1					
ANR	161912	PrimaryExpression	0		161880	2					
ANR	161913	PrimaryExpression	0		161880	3					
ANR	161914	PrimaryExpression	0		161880	4					
ANR	161915	IfStatement	"if ( mkpath ( ( char * ) path , ctx -> fDirCreateMode , ctx -> dirUID , ctx -> dirGID ) != 0 )"		161880	4					
ANR	161916	Condition	"mkpath ( ( char * ) path , ctx -> fDirCreateMode , ctx -> dirUID , ctx -> dirGID ) != 0"	493:5:12779:12850	161880	0	True				
ANR	161917	EqualityExpression	"mkpath ( ( char * ) path , ctx -> fDirCreateMode , ctx -> dirUID , ctx -> dirGID ) != 0"		161880	0		!=			
ANR	161918	CallExpression	"mkpath ( ( char * ) path , ctx -> fDirCreateMode , ctx -> dirUID , ctx -> dirGID )"		161880	0					
ANR	161919	Callee	mkpath		161880	0					
ANR	161920	Identifier	mkpath		161880	0					
ANR	161921	ArgumentList	( char * ) path		161880	1					
ANR	161922	Argument	( char * ) path		161880	0					
ANR	161923	CastExpression	( char * ) path		161880	0					
ANR	161924	CastTarget	char *		161880	0					
ANR	161925	Identifier	path		161880	1					
ANR	161926	Argument	ctx -> fDirCreateMode		161880	1					
ANR	161927	PtrMemberAccess	ctx -> fDirCreateMode		161880	0					
ANR	161928	Identifier	ctx		161880	0					
ANR	161929	Identifier	fDirCreateMode		161880	1					
ANR	161930	Argument	ctx -> dirUID		161880	2					
ANR	161931	PtrMemberAccess	ctx -> dirUID		161880	0					
ANR	161932	Identifier	ctx		161880	0					
ANR	161933	Identifier	dirUID		161880	1					
ANR	161934	Argument	ctx -> dirGID		161880	3					
ANR	161935	PtrMemberAccess	ctx -> dirGID		161880	0					
ANR	161936	Identifier	ctx		161880	0					
ANR	161937	Identifier	dirGID		161880	1					
ANR	161938	PrimaryExpression	0		161880	1					
ANR	161939	CompoundStatement		7:79:185:185	161880	1					
ANR	161940	ExpressionStatement	"report ( ctx , ""ksiCreateFile: mkpath failed for %s"" , path )"	494:2:12857:12913	161880	0	True				
ANR	161941	CallExpression	"report ( ctx , ""ksiCreateFile: mkpath failed for %s"" , path )"		161880	0					
ANR	161942	Callee	report		161880	0					
ANR	161943	Identifier	report		161880	0					
ANR	161944	ArgumentList	ctx		161880	1					
ANR	161945	Argument	ctx		161880	0					
ANR	161946	Identifier	ctx		161880	0					
ANR	161947	Argument	"""ksiCreateFile: mkpath failed for %s"""		161880	1					
ANR	161948	PrimaryExpression	"""ksiCreateFile: mkpath failed for %s"""		161880	0					
ANR	161949	Argument	path		161880	2					
ANR	161950	Identifier	path		161880	0					
ANR	161951	GotoStatement	goto done ;	495:2:12917:12926	161880	1	True				
ANR	161952	Identifier	done		161880	0					
ANR	161953	ExpressionStatement	"fd = open ( path , O_RDWR | O_APPEND | O_NOCTTY | O_CLOEXEC , 0600 )"	498:1:12933:12996	161880	5	True				
ANR	161954	AssignmentExpression	"fd = open ( path , O_RDWR | O_APPEND | O_NOCTTY | O_CLOEXEC , 0600 )"		161880	0		=			
ANR	161955	Identifier	fd		161880	0					
ANR	161956	CallExpression	"open ( path , O_RDWR | O_APPEND | O_NOCTTY | O_CLOEXEC , 0600 )"		161880	1					
ANR	161957	Callee	open		161880	0					
ANR	161958	Identifier	open		161880	0					
ANR	161959	ArgumentList	path		161880	1					
ANR	161960	Argument	path		161880	0					
ANR	161961	Identifier	path		161880	0					
ANR	161962	Argument	O_RDWR | O_APPEND | O_NOCTTY | O_CLOEXEC		161880	1					
ANR	161963	InclusiveOrExpression	O_RDWR | O_APPEND | O_NOCTTY | O_CLOEXEC		161880	0		|			
ANR	161964	Identifier	O_RDWR		161880	0					
ANR	161965	InclusiveOrExpression	O_APPEND | O_NOCTTY | O_CLOEXEC		161880	1		|			
ANR	161966	Identifier	O_APPEND		161880	0					
ANR	161967	InclusiveOrExpression	O_NOCTTY | O_CLOEXEC		161880	1		|			
ANR	161968	Identifier	O_NOCTTY		161880	0					
ANR	161969	Identifier	O_CLOEXEC		161880	1					
ANR	161970	Argument	0600		161880	2					
ANR	161971	PrimaryExpression	0600		161880	0					
ANR	161972	IfStatement	if ( fd == - 1 )		161880	6					
ANR	161973	Condition	fd == - 1	499:5:13003:13010	161880	0	True				
ANR	161974	EqualityExpression	fd == - 1		161880	0		==			
ANR	161975	Identifier	fd		161880	0					
ANR	161976	UnaryOperationExpression	- 1		161880	1					
ANR	161977	UnaryOperator	-		161880	0					
ANR	161978	PrimaryExpression	1		161880	1					
ANR	161979	CompoundStatement		13:15:345:345	161880	1					
ANR	161980	ExpressionStatement	"fd = open ( path , O_RDWR | O_CREAT | O_NOCTTY | O_CLOEXEC , mode )"	500:2:13017:13079	161880	0	True				
ANR	161981	AssignmentExpression	"fd = open ( path , O_RDWR | O_CREAT | O_NOCTTY | O_CLOEXEC , mode )"		161880	0		=			
ANR	161982	Identifier	fd		161880	0					
ANR	161983	CallExpression	"open ( path , O_RDWR | O_CREAT | O_NOCTTY | O_CLOEXEC , mode )"		161880	1					
ANR	161984	Callee	open		161880	0					
ANR	161985	Identifier	open		161880	0					
ANR	161986	ArgumentList	path		161880	1					
ANR	161987	Argument	path		161880	0					
ANR	161988	Identifier	path		161880	0					
ANR	161989	Argument	O_RDWR | O_CREAT | O_NOCTTY | O_CLOEXEC		161880	1					
ANR	161990	InclusiveOrExpression	O_RDWR | O_CREAT | O_NOCTTY | O_CLOEXEC		161880	0		|			
ANR	161991	Identifier	O_RDWR		161880	0					
ANR	161992	InclusiveOrExpression	O_CREAT | O_NOCTTY | O_CLOEXEC		161880	1		|			
ANR	161993	Identifier	O_CREAT		161880	0					
ANR	161994	InclusiveOrExpression	O_NOCTTY | O_CLOEXEC		161880	1		|			
ANR	161995	Identifier	O_NOCTTY		161880	0					
ANR	161996	Identifier	O_CLOEXEC		161880	1					
ANR	161997	Argument	mode		161880	2					
ANR	161998	Identifier	mode		161880	0					
ANR	161999	IfStatement	if ( fd == - 1 )		161880	1					
ANR	162000	Condition	fd == - 1	501:6:13087:13094	161880	0	True				
ANR	162001	EqualityExpression	fd == - 1		161880	0		==			
ANR	162002	Identifier	fd		161880	0					
ANR	162003	UnaryOperationExpression	- 1		161880	1					
ANR	162004	UnaryOperator	-		161880	0					
ANR	162005	PrimaryExpression	1		161880	1					
ANR	162006	CompoundStatement		15:16:429:429	161880	1					
ANR	162007	ExpressionStatement	"report ( ctx , ""creating file '%s' failed: %s"" , path , strerror ( errno ) )"	502:3:13102:13169	161880	0	True				
ANR	162008	CallExpression	"report ( ctx , ""creating file '%s' failed: %s"" , path , strerror ( errno ) )"		161880	0					
ANR	162009	Callee	report		161880	0					
ANR	162010	Identifier	report		161880	0					
ANR	162011	ArgumentList	ctx		161880	1					
ANR	162012	Argument	ctx		161880	0					
ANR	162013	Identifier	ctx		161880	0					
ANR	162014	Argument	"""creating file '%s' failed: %s"""		161880	1					
ANR	162015	PrimaryExpression	"""creating file '%s' failed: %s"""		161880	0					
ANR	162016	Argument	path		161880	2					
ANR	162017	Identifier	path		161880	0					
ANR	162018	Argument	strerror ( errno )		161880	3					
ANR	162019	CallExpression	strerror ( errno )		161880	0					
ANR	162020	Callee	strerror		161880	0					
ANR	162021	Identifier	strerror		161880	0					
ANR	162022	ArgumentList	errno		161880	1					
ANR	162023	Argument	errno		161880	0					
ANR	162024	Identifier	errno		161880	0					
ANR	162025	GotoStatement	goto done ;	503:3:13174:13183	161880	1	True				
ANR	162026	Identifier	done		161880	0					
ANR	162027	IfStatement	if ( uid != ( uid_t ) - 1 || gid != ( gid_t ) - 1 )		161880	2					
ANR	162028	Condition	uid != ( uid_t ) - 1 || gid != ( gid_t ) - 1	506:6:13196:13235	161880	0	True				
ANR	162029	OrExpression	uid != ( uid_t ) - 1 || gid != ( gid_t ) - 1		161880	0		||			
ANR	162030	EqualityExpression	uid != ( uid_t ) - 1		161880	0		!=			
ANR	162031	Identifier	uid		161880	0					
ANR	162032	CastExpression	( uid_t ) - 1		161880	1					
ANR	162033	CastTarget	uid_t		161880	0					
ANR	162034	UnaryOperationExpression	- 1		161880	1					
ANR	162035	UnaryOperator	-		161880	0					
ANR	162036	PrimaryExpression	1		161880	1					
ANR	162037	EqualityExpression	gid != ( gid_t ) - 1		161880	1		!=			
ANR	162038	Identifier	gid		161880	0					
ANR	162039	CastExpression	( gid_t ) - 1		161880	1					
ANR	162040	CastTarget	gid_t		161880	0					
ANR	162041	UnaryOperationExpression	- 1		161880	1					
ANR	162042	UnaryOperator	-		161880	0					
ANR	162043	PrimaryExpression	1		161880	1					
ANR	162044	CompoundStatement		20:48:570:570	161880	1					
ANR	162045	IfStatement	"if ( fchown ( fd , uid , gid ) != 0 )"		161880	0					
ANR	162046	Condition	"fchown ( fd , uid , gid ) != 0"	507:7:13247:13271	161880	0	True				
ANR	162047	EqualityExpression	"fchown ( fd , uid , gid ) != 0"		161880	0		!=			
ANR	162048	CallExpression	"fchown ( fd , uid , gid )"		161880	0					
ANR	162049	Callee	fchown		161880	0					
ANR	162050	Identifier	fchown		161880	0					
ANR	162051	ArgumentList	fd		161880	1					
ANR	162052	Argument	fd		161880	0					
ANR	162053	Identifier	fd		161880	0					
ANR	162054	Argument	uid		161880	1					
ANR	162055	Identifier	uid		161880	0					
ANR	162056	Argument	gid		161880	2					
ANR	162057	Identifier	gid		161880	0					
ANR	162058	PrimaryExpression	0		161880	1					
ANR	162059	CompoundStatement		21:34:606:606	161880	1					
ANR	162060	ExpressionStatement	"report ( ctx , ""lmsig_ksi: chown for file '%s' failed: %s"" , path , strerror ( errno ) )"	508:4:13280:13364	161880	0	True				
ANR	162061	CallExpression	"report ( ctx , ""lmsig_ksi: chown for file '%s' failed: %s"" , path , strerror ( errno ) )"		161880	0					
ANR	162062	Callee	report		161880	0					
ANR	162063	Identifier	report		161880	0					
ANR	162064	ArgumentList	ctx		161880	1					
ANR	162065	Argument	ctx		161880	0					
ANR	162066	Identifier	ctx		161880	0					
ANR	162067	Argument	"""lmsig_ksi: chown for file '%s' failed: %s"""		161880	1					
ANR	162068	PrimaryExpression	"""lmsig_ksi: chown for file '%s' failed: %s"""		161880	0					
ANR	162069	Argument	path		161880	2					
ANR	162070	Identifier	path		161880	0					
ANR	162071	Argument	strerror ( errno )		161880	3					
ANR	162072	CallExpression	strerror ( errno )		161880	0					
ANR	162073	Callee	strerror		161880	0					
ANR	162074	Identifier	strerror		161880	0					
ANR	162075	ArgumentList	errno		161880	1					
ANR	162076	Argument	errno		161880	0					
ANR	162077	Identifier	errno		161880	0					
ANR	162078	IfStatement	"if ( lockit && fcntl ( fd , F_SETLK , & lock ) != 0 )"		161880	7					
ANR	162079	Condition	"lockit && fcntl ( fd , F_SETLK , & lock ) != 0"	514:5:13384:13423	161880	0	True				
ANR	162080	AndExpression	"lockit && fcntl ( fd , F_SETLK , & lock ) != 0"		161880	0		&&			
ANR	162081	Identifier	lockit		161880	0					
ANR	162082	EqualityExpression	"fcntl ( fd , F_SETLK , & lock ) != 0"		161880	1		!=			
ANR	162083	CallExpression	"fcntl ( fd , F_SETLK , & lock )"		161880	0					
ANR	162084	Callee	fcntl		161880	0					
ANR	162085	Identifier	fcntl		161880	0					
ANR	162086	ArgumentList	fd		161880	1					
ANR	162087	Argument	fd		161880	0					
ANR	162088	Identifier	fd		161880	0					
ANR	162089	Argument	F_SETLK		161880	1					
ANR	162090	Identifier	F_SETLK		161880	0					
ANR	162091	Argument	& lock		161880	2					
ANR	162092	UnaryOperationExpression	& lock		161880	0					
ANR	162093	UnaryOperator	&		161880	0					
ANR	162094	Identifier	lock		161880	1					
ANR	162095	PrimaryExpression	0		161880	1					
ANR	162096	ExpressionStatement	"report ( ctx , ""fcntl error: %s"" , strerror ( errno ) )"	515:2:13428:13475	161880	1	True				
ANR	162097	CallExpression	"report ( ctx , ""fcntl error: %s"" , strerror ( errno ) )"		161880	0					
ANR	162098	Callee	report		161880	0					
ANR	162099	Identifier	report		161880	0					
ANR	162100	ArgumentList	ctx		161880	1					
ANR	162101	Argument	ctx		161880	0					
ANR	162102	Identifier	ctx		161880	0					
ANR	162103	Argument	"""fcntl error: %s"""		161880	1					
ANR	162104	PrimaryExpression	"""fcntl error: %s"""		161880	0					
ANR	162105	Argument	strerror ( errno )		161880	2					
ANR	162106	CallExpression	strerror ( errno )		161880	0					
ANR	162107	Callee	strerror		161880	0					
ANR	162108	Identifier	strerror		161880	0					
ANR	162109	ArgumentList	errno		161880	1					
ANR	162110	Argument	errno		161880	0					
ANR	162111	Identifier	errno		161880	0					
ANR	162112	ExpressionStatement	"f = fdopen ( fd , ""a"" )"	517:1:13479:13498	161880	8	True				
ANR	162113	AssignmentExpression	"f = fdopen ( fd , ""a"" )"		161880	0		=			
ANR	162114	Identifier	f		161880	0					
ANR	162115	CallExpression	"fdopen ( fd , ""a"" )"		161880	1					
ANR	162116	Callee	fdopen		161880	0					
ANR	162117	Identifier	fdopen		161880	0					
ANR	162118	ArgumentList	fd		161880	1					
ANR	162119	Argument	fd		161880	0					
ANR	162120	Identifier	fd		161880	0					
ANR	162121	Argument	"""a"""		161880	1					
ANR	162122	PrimaryExpression	"""a"""		161880	0					
ANR	162123	IfStatement	if ( f == NULL )		161880	9					
ANR	162124	Condition	f == NULL	518:5:13505:13513	161880	0	True				
ANR	162125	EqualityExpression	f == NULL		161880	0		==			
ANR	162126	Identifier	f		161880	0					
ANR	162127	Identifier	NULL		161880	1					
ANR	162128	CompoundStatement		32:16:848:848	161880	1					
ANR	162129	ExpressionStatement	"report ( ctx , ""fdopen for '%s' failed: %s"" , path , strerror ( errno ) )"	519:2:13520:13584	161880	0	True				
ANR	162130	CallExpression	"report ( ctx , ""fdopen for '%s' failed: %s"" , path , strerror ( errno ) )"		161880	0					
ANR	162131	Callee	report		161880	0					
ANR	162132	Identifier	report		161880	0					
ANR	162133	ArgumentList	ctx		161880	1					
ANR	162134	Argument	ctx		161880	0					
ANR	162135	Identifier	ctx		161880	0					
ANR	162136	Argument	"""fdopen for '%s' failed: %s"""		161880	1					
ANR	162137	PrimaryExpression	"""fdopen for '%s' failed: %s"""		161880	0					
ANR	162138	Argument	path		161880	2					
ANR	162139	Identifier	path		161880	0					
ANR	162140	Argument	strerror ( errno )		161880	3					
ANR	162141	CallExpression	strerror ( errno )		161880	0					
ANR	162142	Callee	strerror		161880	0					
ANR	162143	Identifier	strerror		161880	0					
ANR	162144	ArgumentList	errno		161880	1					
ANR	162145	Argument	errno		161880	0					
ANR	162146	Identifier	errno		161880	0					
ANR	162147	GotoStatement	goto done ;	520:2:13588:13597	161880	1	True				
ANR	162148	Identifier	done		161880	0					
ANR	162149	ExpressionStatement	"setvbuf ( f , NULL , _IOFBF , KSI_BUF_SIZE )"	523:1:13604:13642	161880	10	True				
ANR	162150	CallExpression	"setvbuf ( f , NULL , _IOFBF , KSI_BUF_SIZE )"		161880	0					
ANR	162151	Callee	setvbuf		161880	0					
ANR	162152	Identifier	setvbuf		161880	0					
ANR	162153	ArgumentList	f		161880	1					
ANR	162154	Argument	f		161880	0					
ANR	162155	Identifier	f		161880	0					
ANR	162156	Argument	NULL		161880	1					
ANR	162157	Identifier	NULL		161880	0					
ANR	162158	Argument	_IOFBF		161880	2					
ANR	162159	Identifier	_IOFBF		161880	0					
ANR	162160	Argument	KSI_BUF_SIZE		161880	3					
ANR	162161	Identifier	KSI_BUF_SIZE		161880	0					
ANR	162162	IfStatement	"if ( fstat ( fd , & stat_st ) == - 1 )"		161880	11					
ANR	162163	Condition	"fstat ( fd , & stat_st ) == - 1"	525:5:13650:13674	161880	0	True				
ANR	162164	EqualityExpression	"fstat ( fd , & stat_st ) == - 1"		161880	0		==			
ANR	162165	CallExpression	"fstat ( fd , & stat_st )"		161880	0					
ANR	162166	Callee	fstat		161880	0					
ANR	162167	Identifier	fstat		161880	0					
ANR	162168	ArgumentList	fd		161880	1					
ANR	162169	Argument	fd		161880	0					
ANR	162170	Identifier	fd		161880	0					
ANR	162171	Argument	& stat_st		161880	1					
ANR	162172	UnaryOperationExpression	& stat_st		161880	0					
ANR	162173	UnaryOperator	&		161880	0					
ANR	162174	Identifier	stat_st		161880	1					
ANR	162175	UnaryOperationExpression	- 1		161880	1					
ANR	162176	UnaryOperator	-		161880	0					
ANR	162177	PrimaryExpression	1		161880	1					
ANR	162178	CompoundStatement		39:32:1009:1009	161880	1					
ANR	162179	ExpressionStatement	"reportErr ( ctx , ""ksiOpenSigFile: can not stat file"" )"	526:2:13681:13732	161880	0	True				
ANR	162180	CallExpression	"reportErr ( ctx , ""ksiOpenSigFile: can not stat file"" )"		161880	0					
ANR	162181	Callee	reportErr		161880	0					
ANR	162182	Identifier	reportErr		161880	0					
ANR	162183	ArgumentList	ctx		161880	1					
ANR	162184	Argument	ctx		161880	0					
ANR	162185	Identifier	ctx		161880	0					
ANR	162186	Argument	"""ksiOpenSigFile: can not stat file"""		161880	1					
ANR	162187	PrimaryExpression	"""ksiOpenSigFile: can not stat file"""		161880	0					
ANR	162188	GotoStatement	goto done ;	527:2:13736:13745	161880	1	True				
ANR	162189	Identifier	done		161880	0					
ANR	162190	IfStatement	if ( stat_st . st_size == 0 && header != NULL )		161880	12					
ANR	162191	Condition	stat_st . st_size == 0 && header != NULL	530:5:13756:13793	161880	0	True				
ANR	162192	AndExpression	stat_st . st_size == 0 && header != NULL		161880	0		&&			
ANR	162193	EqualityExpression	stat_st . st_size == 0		161880	0		==			
ANR	162194	MemberAccess	stat_st . st_size		161880	0					
ANR	162195	Identifier	stat_st		161880	0					
ANR	162196	Identifier	st_size		161880	1					
ANR	162197	PrimaryExpression	0		161880	1					
ANR	162198	EqualityExpression	header != NULL		161880	1		!=			
ANR	162199	Identifier	header		161880	0					
ANR	162200	Identifier	NULL		161880	1					
ANR	162201	ExpressionStatement	"fwrite ( header , strlen ( header ) , 1 , f )"	531:2:13798:13834	161880	1	True				
ANR	162202	CallExpression	"fwrite ( header , strlen ( header ) , 1 , f )"		161880	0					
ANR	162203	Callee	fwrite		161880	0					
ANR	162204	Identifier	fwrite		161880	0					
ANR	162205	ArgumentList	header		161880	1					
ANR	162206	Argument	header		161880	0					
ANR	162207	Identifier	header		161880	0					
ANR	162208	Argument	strlen ( header )		161880	1					
ANR	162209	CallExpression	strlen ( header )		161880	0					
ANR	162210	Callee	strlen		161880	0					
ANR	162211	Identifier	strlen		161880	0					
ANR	162212	ArgumentList	header		161880	1					
ANR	162213	Argument	header		161880	0					
ANR	162214	Identifier	header		161880	0					
ANR	162215	Argument	1		161880	2					
ANR	162216	PrimaryExpression	1		161880	0					
ANR	162217	Argument	f		161880	3					
ANR	162218	Identifier	f		161880	0					
ANR	162219	Label	done :	533:0:13837:13841	161880	13	True				
ANR	162220	Identifier	done		161880	0					
ANR	162221	ReturnStatement	return f ;	534:1:13844:13852	161880	14	True				
ANR	162222	Identifier	f		161880	0					
ANR	162223	ReturnType	static FILE *		161880	1					
ANR	162224	Identifier	ksiCreateFile		161880	2					
ANR	162225	ParameterList	"rsksictx ctx , const char * path , uid_t uid , gid_t gid , int mode , bool lockit , const char * header"		161880	3					
ANR	162226	Parameter	rsksictx ctx	487:14:12570:12581	161880	0	True				
ANR	162227	ParameterType	rsksictx		161880	0					
ANR	162228	Identifier	ctx		161880	1					
ANR	162229	Parameter	const char * path	487:28:12584:12599	161880	1	True				
ANR	162230	ParameterType	const char *		161880	0					
ANR	162231	Identifier	path		161880	1					
ANR	162232	Parameter	uid_t uid	487:46:12602:12610	161880	2	True				
ANR	162233	ParameterType	uid_t		161880	0					
ANR	162234	Identifier	uid		161880	1					
ANR	162235	Parameter	gid_t gid	487:57:12613:12621	161880	3	True				
ANR	162236	ParameterType	gid_t		161880	0					
ANR	162237	Identifier	gid		161880	1					
ANR	162238	Parameter	int mode	487:68:12624:12631	161880	4	True				
ANR	162239	ParameterType	int		161880	0					
ANR	162240	Identifier	mode		161880	1					
ANR	162241	Parameter	bool lockit	487:78:12634:12644	161880	5	True				
ANR	162242	ParameterType	bool		161880	0					
ANR	162243	Identifier	lockit		161880	1					
ANR	162244	Parameter	const char * header	487:91:12647:12664	161880	6	True				
ANR	162245	ParameterType	const char *		161880	0					
ANR	162246	Identifier	header		161880	1					
ANR	162247	CFGEntryNode	ENTRY		161880		True				
ANR	162248	CFGExitNode	EXIT		161880		True				
ANR	162249	Symbol	lockit		161880						
ANR	162250	Symbol	F_WRLCK		161880						
ANR	162251	Symbol	ctx -> fDirCreateMode		161880						
ANR	162252	Symbol	gid		161880						
ANR	162253	Symbol	fcntl		161880						
ANR	162254	Symbol	O_CREAT		161880						
ANR	162255	Symbol	stat_st		161880						
ANR	162256	Symbol	F_SETLK		161880						
ANR	162257	Symbol	fdopen		161880						
ANR	162258	Symbol	& stat_st		161880						
ANR	162259	Symbol	ctx -> dirGID		161880						
ANR	162260	Symbol	mode		161880						
ANR	162261	Symbol	KSI_BUF_SIZE		161880						
ANR	162262	Symbol	path		161880						
ANR	162263	Symbol	uid		161880						
ANR	162264	Symbol	strlen		161880						
ANR	162265	Symbol	O_RDWR		161880						
ANR	162266	Symbol	O_NOCTTY		161880						
ANR	162267	Symbol	lock		161880						
ANR	162268	Symbol	mkpath		161880						
ANR	162269	Symbol	ctx -> dirUID		161880						
ANR	162270	Symbol	SEEK_SET		161880						
ANR	162271	Symbol	errno		161880						
ANR	162272	Symbol	NULL		161880						
ANR	162273	Symbol	_IOFBF		161880						
ANR	162274	Symbol	ctx		161880						
ANR	162275	Symbol	f		161880						
ANR	162276	Symbol	& lock		161880						
ANR	162277	Symbol	fchown		161880						
ANR	162278	Symbol	fstat		161880						
ANR	162279	Symbol	* ctx		161880						
ANR	162280	Symbol	O_APPEND		161880						
ANR	162281	Symbol	strerror		161880						
ANR	162282	Symbol	header		161880						
ANR	162283	Symbol	fd		161880						
ANR	162284	Symbol	open		161880						
ANR	162285	Symbol	O_CLOEXEC		161880						
ANR	162286	Symbol	stat_st . st_size		161880						
ANR	162287	Function	ksiOpenSigFile	540:0:13940:15038							
ANR	162288	FunctionDef	ksiOpenSigFile (ksifile ksi)		162287	0					
ANR	162289	CompoundStatement		541:28:13979:15038	162287	0					
ANR	162290	IdentifierDeclStatement	int r = 0 ;	542:1:13982:13991	162287	0	True				
ANR	162291	IdentifierDecl	r = 0		162287	0					
ANR	162292	IdentifierDeclType	int		162287	0					
ANR	162293	Identifier	r		162287	1					
ANR	162294	AssignmentExpression	r = 0		162287	2		=			
ANR	162295	Identifier	r		162287	0					
ANR	162296	PrimaryExpression	0		162287	1					
ANR	162297	IdentifierDeclStatement	const char * header ;	543:1:13994:14012	162287	1	True				
ANR	162298	IdentifierDecl	* header		162287	0					
ANR	162299	IdentifierDeclType	const char *		162287	0					
ANR	162300	Identifier	header		162287	1					
ANR	162301	IdentifierDeclStatement	FILE * signatureFile = NULL ;	544:1:14015:14041	162287	2	True				
ANR	162302	IdentifierDecl	* signatureFile = NULL		162287	0					
ANR	162303	IdentifierDeclType	FILE *		162287	0					
ANR	162304	Identifier	signatureFile		162287	1					
ANR	162305	AssignmentExpression	* signatureFile = NULL		162287	2		=			
ANR	162306	Identifier	NULL		162287	0					
ANR	162307	Identifier	NULL		162287	1					
ANR	162308	IfStatement	if ( ksi -> ctx -> syncMode == LOGSIG_ASYNCHRONOUS )		162287	3					
ANR	162309	Condition	ksi -> ctx -> syncMode == LOGSIG_ASYNCHRONOUS	546:5:14049:14089	162287	0	True				
ANR	162310	EqualityExpression	ksi -> ctx -> syncMode == LOGSIG_ASYNCHRONOUS		162287	0		==			
ANR	162311	PtrMemberAccess	ksi -> ctx -> syncMode		162287	0					
ANR	162312	PtrMemberAccess	ksi -> ctx		162287	0					
ANR	162313	Identifier	ksi		162287	0					
ANR	162314	Identifier	ctx		162287	1					
ANR	162315	Identifier	syncMode		162287	1					
ANR	162316	Identifier	LOGSIG_ASYNCHRONOUS		162287	1					
ANR	162317	ExpressionStatement	header = LS12_BLOCKFILE_HEADER	547:2:14094:14124	162287	1	True				
ANR	162318	AssignmentExpression	header = LS12_BLOCKFILE_HEADER		162287	0		=			
ANR	162319	Identifier	header		162287	0					
ANR	162320	Identifier	LS12_BLOCKFILE_HEADER		162287	1					
ANR	162321	ElseStatement	else		162287	0					
ANR	162322	ExpressionStatement	header = LS12_FILE_HEADER	549:2:14134:14159	162287	0	True				
ANR	162323	AssignmentExpression	header = LS12_FILE_HEADER		162287	0		=			
ANR	162324	Identifier	header		162287	0					
ANR	162325	Identifier	LS12_FILE_HEADER		162287	1					
ANR	162326	ExpressionStatement	"ksi -> blockFile = ksiCreateFile ( ksi -> ctx , ( char * ) ksi -> blockfilename , ksi -> ctx -> fileUID , ksi -> ctx -> fileGID , ksi -> ctx -> fCreateMode , true , header )"	551:1:14163:14308	162287	4	True				
ANR	162327	AssignmentExpression	"ksi -> blockFile = ksiCreateFile ( ksi -> ctx , ( char * ) ksi -> blockfilename , ksi -> ctx -> fileUID , ksi -> ctx -> fileGID , ksi -> ctx -> fCreateMode , true , header )"		162287	0		=			
ANR	162328	PtrMemberAccess	ksi -> blockFile		162287	0					
ANR	162329	Identifier	ksi		162287	0					
ANR	162330	Identifier	blockFile		162287	1					
ANR	162331	CallExpression	"ksiCreateFile ( ksi -> ctx , ( char * ) ksi -> blockfilename , ksi -> ctx -> fileUID , ksi -> ctx -> fileGID , ksi -> ctx -> fCreateMode , true , header )"		162287	1					
ANR	162332	Callee	ksiCreateFile		162287	0					
ANR	162333	Identifier	ksiCreateFile		162287	0					
ANR	162334	ArgumentList	ksi -> ctx		162287	1					
ANR	162335	Argument	ksi -> ctx		162287	0					
ANR	162336	PtrMemberAccess	ksi -> ctx		162287	0					
ANR	162337	Identifier	ksi		162287	0					
ANR	162338	Identifier	ctx		162287	1					
ANR	162339	Argument	( char * ) ksi -> blockfilename		162287	1					
ANR	162340	CastExpression	( char * ) ksi -> blockfilename		162287	0					
ANR	162341	CastTarget	char *		162287	0					
ANR	162342	PtrMemberAccess	ksi -> blockfilename		162287	1					
ANR	162343	Identifier	ksi		162287	0					
ANR	162344	Identifier	blockfilename		162287	1					
ANR	162345	Argument	ksi -> ctx -> fileUID		162287	2					
ANR	162346	PtrMemberAccess	ksi -> ctx -> fileUID		162287	0					
ANR	162347	PtrMemberAccess	ksi -> ctx		162287	0					
ANR	162348	Identifier	ksi		162287	0					
ANR	162349	Identifier	ctx		162287	1					
ANR	162350	Identifier	fileUID		162287	1					
ANR	162351	Argument	ksi -> ctx -> fileGID		162287	3					
ANR	162352	PtrMemberAccess	ksi -> ctx -> fileGID		162287	0					
ANR	162353	PtrMemberAccess	ksi -> ctx		162287	0					
ANR	162354	Identifier	ksi		162287	0					
ANR	162355	Identifier	ctx		162287	1					
ANR	162356	Identifier	fileGID		162287	1					
ANR	162357	Argument	ksi -> ctx -> fCreateMode		162287	4					
ANR	162358	PtrMemberAccess	ksi -> ctx -> fCreateMode		162287	0					
ANR	162359	PtrMemberAccess	ksi -> ctx		162287	0					
ANR	162360	Identifier	ksi		162287	0					
ANR	162361	Identifier	ctx		162287	1					
ANR	162362	Identifier	fCreateMode		162287	1					
ANR	162363	Argument	true		162287	5					
ANR	162364	Identifier	true		162287	0					
ANR	162365	Argument	header		162287	6					
ANR	162366	Identifier	header		162287	0					
ANR	162367	IfStatement	if ( ksi -> blockFile == NULL )		162287	5					
ANR	162368	Condition	ksi -> blockFile == NULL	554:5:14316:14337	162287	0	True				
ANR	162369	EqualityExpression	ksi -> blockFile == NULL		162287	0		==			
ANR	162370	PtrMemberAccess	ksi -> blockFile		162287	0					
ANR	162371	Identifier	ksi		162287	0					
ANR	162372	Identifier	blockFile		162287	1					
ANR	162373	Identifier	NULL		162287	1					
ANR	162374	CompoundStatement		14:29:360:360	162287	1					
ANR	162375	ExpressionStatement	r = RSGTE_IO	555:2:14344:14356	162287	0	True				
ANR	162376	AssignmentExpression	r = RSGTE_IO		162287	0		=			
ANR	162377	Identifier	r		162287	0					
ANR	162378	Identifier	RSGTE_IO		162287	1					
ANR	162379	GotoStatement	goto done ;	556:2:14360:14369	162287	1	True				
ANR	162380	Identifier	done		162287	0					
ANR	162381	IfStatement	if ( ksi -> ctx -> syncMode == LOGSIG_ASYNCHRONOUS )		162287	6					
ANR	162382	Condition	ksi -> ctx -> syncMode == LOGSIG_ASYNCHRONOUS	560:5:14432:14472	162287	0	True				
ANR	162383	EqualityExpression	ksi -> ctx -> syncMode == LOGSIG_ASYNCHRONOUS		162287	0		==			
ANR	162384	PtrMemberAccess	ksi -> ctx -> syncMode		162287	0					
ANR	162385	PtrMemberAccess	ksi -> ctx		162287	0					
ANR	162386	Identifier	ksi		162287	0					
ANR	162387	Identifier	ctx		162287	1					
ANR	162388	Identifier	syncMode		162287	1					
ANR	162389	Identifier	LOGSIG_ASYNCHRONOUS		162287	1					
ANR	162390	CompoundStatement		20:48:495:495	162287	1					
ANR	162391	ExpressionStatement	"signatureFile = ksiCreateFile ( ksi -> ctx , ( char * ) ksi -> ksifilename , ksi -> ctx -> fileUID , ksi -> ctx -> fileGID , ksi -> ctx -> fCreateMode , true , LS12_SIGFILE_HEADER )"	561:2:14479:14635	162287	0	True				
ANR	162392	AssignmentExpression	"signatureFile = ksiCreateFile ( ksi -> ctx , ( char * ) ksi -> ksifilename , ksi -> ctx -> fileUID , ksi -> ctx -> fileGID , ksi -> ctx -> fCreateMode , true , LS12_SIGFILE_HEADER )"		162287	0		=			
ANR	162393	Identifier	signatureFile		162287	0					
ANR	162394	CallExpression	"ksiCreateFile ( ksi -> ctx , ( char * ) ksi -> ksifilename , ksi -> ctx -> fileUID , ksi -> ctx -> fileGID , ksi -> ctx -> fCreateMode , true , LS12_SIGFILE_HEADER )"		162287	1					
ANR	162395	Callee	ksiCreateFile		162287	0					
ANR	162396	Identifier	ksiCreateFile		162287	0					
ANR	162397	ArgumentList	ksi -> ctx		162287	1					
ANR	162398	Argument	ksi -> ctx		162287	0					
ANR	162399	PtrMemberAccess	ksi -> ctx		162287	0					
ANR	162400	Identifier	ksi		162287	0					
ANR	162401	Identifier	ctx		162287	1					
ANR	162402	Argument	( char * ) ksi -> ksifilename		162287	1					
ANR	162403	CastExpression	( char * ) ksi -> ksifilename		162287	0					
ANR	162404	CastTarget	char *		162287	0					
ANR	162405	PtrMemberAccess	ksi -> ksifilename		162287	1					
ANR	162406	Identifier	ksi		162287	0					
ANR	162407	Identifier	ksifilename		162287	1					
ANR	162408	Argument	ksi -> ctx -> fileUID		162287	2					
ANR	162409	PtrMemberAccess	ksi -> ctx -> fileUID		162287	0					
ANR	162410	PtrMemberAccess	ksi -> ctx		162287	0					
ANR	162411	Identifier	ksi		162287	0					
ANR	162412	Identifier	ctx		162287	1					
ANR	162413	Identifier	fileUID		162287	1					
ANR	162414	Argument	ksi -> ctx -> fileGID		162287	3					
ANR	162415	PtrMemberAccess	ksi -> ctx -> fileGID		162287	0					
ANR	162416	PtrMemberAccess	ksi -> ctx		162287	0					
ANR	162417	Identifier	ksi		162287	0					
ANR	162418	Identifier	ctx		162287	1					
ANR	162419	Identifier	fileGID		162287	1					
ANR	162420	Argument	ksi -> ctx -> fCreateMode		162287	4					
ANR	162421	PtrMemberAccess	ksi -> ctx -> fCreateMode		162287	0					
ANR	162422	PtrMemberAccess	ksi -> ctx		162287	0					
ANR	162423	Identifier	ksi		162287	0					
ANR	162424	Identifier	ctx		162287	1					
ANR	162425	Identifier	fCreateMode		162287	1					
ANR	162426	Argument	true		162287	5					
ANR	162427	Identifier	true		162287	0					
ANR	162428	Argument	LS12_SIGFILE_HEADER		162287	6					
ANR	162429	Identifier	LS12_SIGFILE_HEADER		162287	0					
ANR	162430	IfStatement	if ( signatureFile == NULL )		162287	1					
ANR	162431	Condition	signatureFile == NULL	564:6:14644:14664	162287	0	True				
ANR	162432	EqualityExpression	signatureFile == NULL		162287	0		==			
ANR	162433	Identifier	signatureFile		162287	0					
ANR	162434	Identifier	NULL		162287	1					
ANR	162435	CompoundStatement		24:29:687:687	162287	1					
ANR	162436	ExpressionStatement	r = RSGTE_IO	565:3:14672:14684	162287	0	True				
ANR	162437	AssignmentExpression	r = RSGTE_IO		162287	0		=			
ANR	162438	Identifier	r		162287	0					
ANR	162439	Identifier	RSGTE_IO		162287	1					
ANR	162440	GotoStatement	goto done ;	566:3:14689:14698	162287	1	True				
ANR	162441	Identifier	done		162287	0					
ANR	162442	ExpressionStatement	"add_queue_item ( ksi -> ctx , QITEM_NEW_FILE , signatureFile , time ( NULL ) + ksi -> blockTimeLimit , 0 )"	569:2:14707:14799	162287	2	True				
ANR	162443	CallExpression	"add_queue_item ( ksi -> ctx , QITEM_NEW_FILE , signatureFile , time ( NULL ) + ksi -> blockTimeLimit , 0 )"		162287	0					
ANR	162444	Callee	add_queue_item		162287	0					
ANR	162445	Identifier	add_queue_item		162287	0					
ANR	162446	ArgumentList	ksi -> ctx		162287	1					
ANR	162447	Argument	ksi -> ctx		162287	0					
ANR	162448	PtrMemberAccess	ksi -> ctx		162287	0					
ANR	162449	Identifier	ksi		162287	0					
ANR	162450	Identifier	ctx		162287	1					
ANR	162451	Argument	QITEM_NEW_FILE		162287	1					
ANR	162452	Identifier	QITEM_NEW_FILE		162287	0					
ANR	162453	Argument	signatureFile		162287	2					
ANR	162454	Identifier	signatureFile		162287	0					
ANR	162455	Argument	time ( NULL ) + ksi -> blockTimeLimit		162287	3					
ANR	162456	AdditiveExpression	time ( NULL ) + ksi -> blockTimeLimit		162287	0		+			
ANR	162457	CallExpression	time ( NULL )		162287	0					
ANR	162458	Callee	time		162287	0					
ANR	162459	Identifier	time		162287	0					
ANR	162460	ArgumentList	NULL		162287	1					
ANR	162461	Argument	NULL		162287	0					
ANR	162462	Identifier	NULL		162287	0					
ANR	162463	PtrMemberAccess	ksi -> blockTimeLimit		162287	1					
ANR	162464	Identifier	ksi		162287	0					
ANR	162465	Identifier	blockTimeLimit		162287	1					
ANR	162466	Argument	0		162287	4					
ANR	162467	PrimaryExpression	0		162287	0					
ANR	162468	ExpressionStatement	ksiReadStateFile ( ksi )	576:1:14999:15020	162287	7	True				
ANR	162469	CallExpression	ksiReadStateFile ( ksi )		162287	0					
ANR	162470	Callee	ksiReadStateFile		162287	0					
ANR	162471	Identifier	ksiReadStateFile		162287	0					
ANR	162472	ArgumentList	ksi		162287	1					
ANR	162473	Argument	ksi		162287	0					
ANR	162474	Identifier	ksi		162287	0					
ANR	162475	Label	done :	577:0:15022:15026	162287	8	True				
ANR	162476	Identifier	done		162287	0					
ANR	162477	ReturnStatement	return r ;	577:6:15028:15036	162287	9	True				
ANR	162478	Identifier	r		162287	0					
ANR	162479	ReturnType	static int		162287	1					
ANR	162480	Identifier	ksiOpenSigFile		162287	2					
ANR	162481	ParameterList	ksifile ksi		162287	3					
ANR	162482	Parameter	ksifile ksi	541:15:13966:13976	162287	0	True				
ANR	162483	ParameterType	ksifile		162287	0					
ANR	162484	Identifier	ksi		162287	1					
ANR	162485	CFGEntryNode	ENTRY		162287		True				
ANR	162486	CFGExitNode	EXIT		162287		True				
ANR	162487	Symbol	ksi		162287						
ANR	162488	Symbol	LS12_FILE_HEADER		162287						
ANR	162489	Symbol	ksi -> ctx -> fileUID		162287						
ANR	162490	Symbol	ksi -> ctx -> fileGID		162287						
ANR	162491	Symbol	LOGSIG_ASYNCHRONOUS		162287						
ANR	162492	Symbol	ksi -> ksifilename		162287						
ANR	162493	Symbol	ksi -> ctx -> syncMode		162287						
ANR	162494	Symbol	* * ksi		162287						
ANR	162495	Symbol	ksi -> blockTimeLimit		162287						
ANR	162496	Symbol	LS12_SIGFILE_HEADER		162287						
ANR	162497	Symbol	ksi -> blockfilename		162287						
ANR	162498	Symbol	ksi -> blockFile		162287						
ANR	162499	Symbol	RSGTE_IO		162287						
ANR	162500	Symbol	ksi -> ctx		162287						
ANR	162501	Symbol	NULL		162287						
ANR	162502	Symbol	ksi -> ctx -> fCreateMode		162287						
ANR	162503	Symbol	LS12_BLOCKFILE_HEADER		162287						
ANR	162504	Symbol	signatureFile		162287						
ANR	162505	Symbol	* ksi		162287						
ANR	162506	Symbol	r		162287						
ANR	162507	Symbol	true		162287						
ANR	162508	Symbol	header		162287						
ANR	162509	Symbol	QITEM_NEW_FILE		162287						
ANR	162510	Symbol	time		162287						
ANR	162511	Symbol	* ksi -> ctx		162287						
ANR	162512	Symbol	ksiCreateFile		162287						
ANR	162513	Function	seedIVKSI	587:0:15344:16107							
ANR	162514	FunctionDef	seedIVKSI (ksifile ksi)		162513	0					
ANR	162515	CompoundStatement		589:0:15379:16107	162513	0					
ANR	162516	IdentifierDeclStatement	int hashlen ;	590:1:15382:15393	162513	0	True				
ANR	162517	IdentifierDecl	hashlen		162513	0					
ANR	162518	IdentifierDeclType	int		162513	0					
ANR	162519	Identifier	hashlen		162513	1					
ANR	162520	IdentifierDeclStatement	int fd ;	591:1:15396:15402	162513	1	True				
ANR	162521	IdentifierDecl	fd		162513	0					
ANR	162522	IdentifierDeclType	int		162513	0					
ANR	162523	Identifier	fd		162513	1					
ANR	162524	IdentifierDeclStatement	"const char * rnd_device = ksi -> ctx -> random_source ? ksi -> ctx -> random_source : ""/dev/urandom"" ;"	592:1:15405:15496	162513	2	True				
ANR	162525	IdentifierDecl	"* rnd_device = ksi -> ctx -> random_source ? ksi -> ctx -> random_source : ""/dev/urandom"""		162513	0					
ANR	162526	IdentifierDeclType	const char *		162513	0					
ANR	162527	Identifier	rnd_device		162513	1					
ANR	162528	AssignmentExpression	"* rnd_device = ksi -> ctx -> random_source ? ksi -> ctx -> random_source : ""/dev/urandom"""		162513	2		=			
ANR	162529	Identifier	rnd_device		162513	0					
ANR	162530	ConditionalExpression	"ksi -> ctx -> random_source ? ksi -> ctx -> random_source : ""/dev/urandom"""		162513	1					
ANR	162531	Condition	ksi -> ctx -> random_source		162513	0					
ANR	162532	PtrMemberAccess	ksi -> ctx -> random_source		162513	0					
ANR	162533	PtrMemberAccess	ksi -> ctx		162513	0					
ANR	162534	Identifier	ksi		162513	0					
ANR	162535	Identifier	ctx		162513	1					
ANR	162536	Identifier	random_source		162513	1					
ANR	162537	PtrMemberAccess	ksi -> ctx -> random_source		162513	1					
ANR	162538	PtrMemberAccess	ksi -> ctx		162513	0					
ANR	162539	Identifier	ksi		162513	0					
ANR	162540	Identifier	ctx		162513	1					
ANR	162541	Identifier	random_source		162513	1					
ANR	162542	PrimaryExpression	"""/dev/urandom"""		162513	2					
ANR	162543	ExpressionStatement	hashlen = KSI_getHashLength ( ksi -> hashAlg )	594:1:15500:15541	162513	3	True				
ANR	162544	AssignmentExpression	hashlen = KSI_getHashLength ( ksi -> hashAlg )		162513	0		=			
ANR	162545	Identifier	hashlen		162513	0					
ANR	162546	CallExpression	KSI_getHashLength ( ksi -> hashAlg )		162513	1					
ANR	162547	Callee	KSI_getHashLength		162513	0					
ANR	162548	Identifier	KSI_getHashLength		162513	0					
ANR	162549	ArgumentList	ksi -> hashAlg		162513	1					
ANR	162550	Argument	ksi -> hashAlg		162513	0					
ANR	162551	PtrMemberAccess	ksi -> hashAlg		162513	0					
ANR	162552	Identifier	ksi		162513	0					
ANR	162553	Identifier	hashAlg		162513	1					
ANR	162554	ExpressionStatement	ksi -> IV = malloc ( hashlen )	595:1:15544:15569	162513	4	True				
ANR	162555	AssignmentExpression	ksi -> IV = malloc ( hashlen )		162513	0		=			
ANR	162556	PtrMemberAccess	ksi -> IV		162513	0					
ANR	162557	Identifier	ksi		162513	0					
ANR	162558	Identifier	IV		162513	1					
ANR	162559	CallExpression	malloc ( hashlen )		162513	1					
ANR	162560	Callee	malloc		162513	0					
ANR	162561	Identifier	malloc		162513	0					
ANR	162562	ArgumentList	hashlen		162513	1					
ANR	162563	Argument	hashlen		162513	0					
ANR	162564	Identifier	hashlen		162513	0					
ANR	162565	IfStatement	"if ( ( fd = open ( rnd_device , O_RDONLY ) ) > 0 )"		162513	5					
ANR	162566	Condition	"( fd = open ( rnd_device , O_RDONLY ) ) > 0"	603:5:15987:16023	162513	0	True				
ANR	162567	RelationalExpression	"( fd = open ( rnd_device , O_RDONLY ) ) > 0"		162513	0		>			
ANR	162568	AssignmentExpression	"fd = open ( rnd_device , O_RDONLY )"		162513	0		=			
ANR	162569	Identifier	fd		162513	0					
ANR	162570	CallExpression	"open ( rnd_device , O_RDONLY )"		162513	1					
ANR	162571	Callee	open		162513	0					
ANR	162572	Identifier	open		162513	0					
ANR	162573	ArgumentList	rnd_device		162513	1					
ANR	162574	Argument	rnd_device		162513	0					
ANR	162575	Identifier	rnd_device		162513	0					
ANR	162576	Argument	O_RDONLY		162513	1					
ANR	162577	Identifier	O_RDONLY		162513	0					
ANR	162578	PrimaryExpression	0		162513	1					
ANR	162579	CompoundStatement		15:44:646:646	162513	1					
ANR	162580	IfStatement	"if ( read ( fd , ksi -> IV , hashlen ) )"		162513	0					
ANR	162581	Condition	"read ( fd , ksi -> IV , hashlen )"	604:5:16033:16058	162513	0	True				
ANR	162582	CallExpression	"read ( fd , ksi -> IV , hashlen )"		162513	0					
ANR	162583	Callee	read		162513	0					
ANR	162584	Identifier	read		162513	0					
ANR	162585	ArgumentList	fd		162513	1					
ANR	162586	Argument	fd		162513	0					
ANR	162587	Identifier	fd		162513	0					
ANR	162588	Argument	ksi -> IV		162513	1					
ANR	162589	PtrMemberAccess	ksi -> IV		162513	0					
ANR	162590	Identifier	ksi		162513	0					
ANR	162591	Identifier	IV		162513	1					
ANR	162592	Argument	hashlen		162513	2					
ANR	162593	Identifier	hashlen		162513	0					
ANR	162594	CompoundStatement		16:33:681:681	162513	1					
ANR	162595	ExpressionStatement		604:35:16063:16063	162513	1	True				
ANR	162596	ExpressionStatement	close ( fd )	605:2:16093:16102	162513	2	True				
ANR	162597	CallExpression	close ( fd )		162513	0					
ANR	162598	Callee	close		162513	0					
ANR	162599	Identifier	close		162513	0					
ANR	162600	ArgumentList	fd		162513	1					
ANR	162601	Argument	fd		162513	0					
ANR	162602	Identifier	fd		162513	0					
ANR	162603	ReturnType	static void		162513	1					
ANR	162604	Identifier	seedIVKSI		162513	2					
ANR	162605	ParameterList	ksifile ksi		162513	3					
ANR	162606	Parameter	ksifile ksi	588:10:15366:15376	162513	0	True				
ANR	162607	ParameterType	ksifile		162513	0					
ANR	162608	Identifier	ksi		162513	1					
ANR	162609	CFGEntryNode	ENTRY		162513		True				
ANR	162610	CFGExitNode	EXIT		162513		True				
ANR	162611	Symbol	ksi		162513						
ANR	162612	Symbol	ksi -> ctx -> random_source		162513						
ANR	162613	Symbol	rnd_device		162513						
ANR	162614	Symbol	ksi -> ctx		162513						
ANR	162615	Symbol	malloc		162513						
ANR	162616	Symbol	read		162513						
ANR	162617	Symbol	ksi -> hashAlg		162513						
ANR	162618	Symbol	* ksi		162513						
ANR	162619	Symbol	O_RDONLY		162513						
ANR	162620	Symbol	hashlen		162513						
ANR	162621	Symbol	* * ksi		162513						
ANR	162622	Symbol	KSI_getHashLength		162513						
ANR	162623	Symbol	ksi -> IV		162513						
ANR	162624	Symbol	fd		162513						
ANR	162625	Symbol	open		162513						
ANR	162626	Symbol	* ksi -> ctx		162513						
ANR	162627	Function	create_signer_thread	609:0:16110:16502							
ANR	162628	FunctionDef	create_signer_thread (rsksictx ctx)		162627	0					
ANR	162629	CompoundStatement		609:47:16157:16502	162627	0					
ANR	162630	IfStatement	if ( ! ctx -> thread_started )		162627	0					
ANR	162631	Condition	! ctx -> thread_started	610:5:16164:16183	162627	0	True				
ANR	162632	UnaryOperationExpression	! ctx -> thread_started		162627	0					
ANR	162633	UnaryOperator	!		162627	0					
ANR	162634	PtrMemberAccess	ctx -> thread_started		162627	1					
ANR	162635	Identifier	ctx		162627	0					
ANR	162636	Identifier	thread_started		162627	1					
ANR	162637	CompoundStatement		2:27:28:28	162627	1					
ANR	162638	IfStatement	"if ( pthread_mutex_init ( & ctx -> module_lock , 0 ) )"		162627	0					
ANR	162639	Condition	"pthread_mutex_init ( & ctx -> module_lock , 0 )"	611:6:16194:16233	162627	0	True				
ANR	162640	CallExpression	"pthread_mutex_init ( & ctx -> module_lock , 0 )"		162627	0					
ANR	162641	Callee	pthread_mutex_init		162627	0					
ANR	162642	Identifier	pthread_mutex_init		162627	0					
ANR	162643	ArgumentList	& ctx -> module_lock		162627	1					
ANR	162644	Argument	& ctx -> module_lock		162627	0					
ANR	162645	UnaryOperationExpression	& ctx -> module_lock		162627	0					
ANR	162646	UnaryOperator	&		162627	0					
ANR	162647	PtrMemberAccess	ctx -> module_lock		162627	1					
ANR	162648	Identifier	ctx		162627	0					
ANR	162649	Identifier	module_lock		162627	1					
ANR	162650	Argument	0		162627	1					
ANR	162651	PrimaryExpression	0		162627	0					
ANR	162652	ExpressionStatement	"report ( ctx , ""pthread_mutex_init: %s"" , strerror ( errno ) )"	612:3:16239:16293	162627	1	True				
ANR	162653	CallExpression	"report ( ctx , ""pthread_mutex_init: %s"" , strerror ( errno ) )"		162627	0					
ANR	162654	Callee	report		162627	0					
ANR	162655	Identifier	report		162627	0					
ANR	162656	ArgumentList	ctx		162627	1					
ANR	162657	Argument	ctx		162627	0					
ANR	162658	Identifier	ctx		162627	0					
ANR	162659	Argument	"""pthread_mutex_init: %s"""		162627	1					
ANR	162660	PrimaryExpression	"""pthread_mutex_init: %s"""		162627	0					
ANR	162661	Argument	strerror ( errno )		162627	2					
ANR	162662	CallExpression	strerror ( errno )		162627	0					
ANR	162663	Callee	strerror		162627	0					
ANR	162664	Identifier	strerror		162627	0					
ANR	162665	ArgumentList	errno		162627	1					
ANR	162666	Argument	errno		162627	0					
ANR	162667	Identifier	errno		162627	0					
ANR	162668	ExpressionStatement	ctx -> signer_queue = ProtectedQueue_new ( 10 )	613:2:16297:16339	162627	1	True				
ANR	162669	AssignmentExpression	ctx -> signer_queue = ProtectedQueue_new ( 10 )		162627	0		=			
ANR	162670	PtrMemberAccess	ctx -> signer_queue		162627	0					
ANR	162671	Identifier	ctx		162627	0					
ANR	162672	Identifier	signer_queue		162627	1					
ANR	162673	CallExpression	ProtectedQueue_new ( 10 )		162627	1					
ANR	162674	Callee	ProtectedQueue_new		162627	0					
ANR	162675	Identifier	ProtectedQueue_new		162627	0					
ANR	162676	ArgumentList	10		162627	1					
ANR	162677	Argument	10		162627	0					
ANR	162678	PrimaryExpression	10		162627	0					
ANR	162679	IfStatement	"if ( pthread_create ( & ctx -> signer_thread , NULL , signer_thread , ctx ) )"		162627	2					
ANR	162680	Condition	"pthread_create ( & ctx -> signer_thread , NULL , signer_thread , ctx )"	614:6:16347:16407	162627	0	True				
ANR	162681	CallExpression	"pthread_create ( & ctx -> signer_thread , NULL , signer_thread , ctx )"		162627	0					
ANR	162682	Callee	pthread_create		162627	0					
ANR	162683	Identifier	pthread_create		162627	0					
ANR	162684	ArgumentList	& ctx -> signer_thread		162627	1					
ANR	162685	Argument	& ctx -> signer_thread		162627	0					
ANR	162686	UnaryOperationExpression	& ctx -> signer_thread		162627	0					
ANR	162687	UnaryOperator	&		162627	0					
ANR	162688	PtrMemberAccess	ctx -> signer_thread		162627	1					
ANR	162689	Identifier	ctx		162627	0					
ANR	162690	Identifier	signer_thread		162627	1					
ANR	162691	Argument	NULL		162627	1					
ANR	162692	Identifier	NULL		162627	0					
ANR	162693	Argument	signer_thread		162627	2					
ANR	162694	Identifier	signer_thread		162627	0					
ANR	162695	Argument	ctx		162627	3					
ANR	162696	Identifier	ctx		162627	0					
ANR	162697	ExpressionStatement	"report ( ctx , ""pthread_mutex_init: %s"" , strerror ( errno ) )"	615:3:16413:16467	162627	1	True				
ANR	162698	CallExpression	"report ( ctx , ""pthread_mutex_init: %s"" , strerror ( errno ) )"		162627	0					
ANR	162699	Callee	report		162627	0					
ANR	162700	Identifier	report		162627	0					
ANR	162701	ArgumentList	ctx		162627	1					
ANR	162702	Argument	ctx		162627	0					
ANR	162703	Identifier	ctx		162627	0					
ANR	162704	Argument	"""pthread_mutex_init: %s"""		162627	1					
ANR	162705	PrimaryExpression	"""pthread_mutex_init: %s"""		162627	0					
ANR	162706	Argument	strerror ( errno )		162627	2					
ANR	162707	CallExpression	strerror ( errno )		162627	0					
ANR	162708	Callee	strerror		162627	0					
ANR	162709	Identifier	strerror		162627	0					
ANR	162710	ArgumentList	errno		162627	1					
ANR	162711	Argument	errno		162627	0					
ANR	162712	Identifier	errno		162627	0					
ANR	162713	ExpressionStatement	ctx -> thread_started = true	616:2:16471:16497	162627	3	True				
ANR	162714	AssignmentExpression	ctx -> thread_started = true		162627	0		=			
ANR	162715	PtrMemberAccess	ctx -> thread_started		162627	0					
ANR	162716	Identifier	ctx		162627	0					
ANR	162717	Identifier	thread_started		162627	1					
ANR	162718	Identifier	true		162627	1					
ANR	162719	ReturnType	static void		162627	1					
ANR	162720	Identifier	create_signer_thread		162627	2					
ANR	162721	ParameterList	rsksictx ctx		162627	3					
ANR	162722	Parameter	rsksictx ctx	609:33:16143:16154	162627	0	True				
ANR	162723	ParameterType	rsksictx		162627	0					
ANR	162724	Identifier	ctx		162627	1					
ANR	162725	CFGEntryNode	ENTRY		162627		True				
ANR	162726	CFGExitNode	EXIT		162627		True				
ANR	162727	Symbol	& ctx -> signer_thread		162627						
ANR	162728	Symbol	ProtectedQueue_new		162627						
ANR	162729	Symbol	errno		162627						
ANR	162730	Symbol	NULL		162627						
ANR	162731	Symbol	ctx		162627						
ANR	162732	Symbol	ctx -> signer_queue		162627						
ANR	162733	Symbol	* ctx		162627						
ANR	162734	Symbol	ctx -> thread_started		162627						
ANR	162735	Symbol	strerror		162627						
ANR	162736	Symbol	pthread_mutex_init		162627						
ANR	162737	Symbol	& ctx -> module_lock		162627						
ANR	162738	Symbol	true		162627						
ANR	162739	Symbol	signer_thread		162627						
ANR	162740	Symbol	pthread_create		162627						
ANR	162741	Function	rsksiCtxNew	620:0:16505:17511							
ANR	162742	FunctionDef	rsksiCtxNew ()		162741	0					
ANR	162743	CompoundStatement		621:18:16532:17511	162741	0					
ANR	162744	IdentifierDeclStatement	rsksictx ctx ;	622:1:16535:16547	162741	0	True				
ANR	162745	IdentifierDecl	ctx		162741	0					
ANR	162746	IdentifierDeclType	rsksictx		162741	0					
ANR	162747	Identifier	ctx		162741	1					
ANR	162748	ExpressionStatement	"ctx = calloc ( 1 , sizeof ( struct rsksictx_s ) )"	623:1:16550:16593	162741	1	True				
ANR	162749	AssignmentExpression	"ctx = calloc ( 1 , sizeof ( struct rsksictx_s ) )"		162741	0		=			
ANR	162750	Identifier	ctx		162741	0					
ANR	162751	CallExpression	"calloc ( 1 , sizeof ( struct rsksictx_s ) )"		162741	1					
ANR	162752	Callee	calloc		162741	0					
ANR	162753	Identifier	calloc		162741	0					
ANR	162754	ArgumentList	1		162741	1					
ANR	162755	Argument	1		162741	0					
ANR	162756	PrimaryExpression	1		162741	0					
ANR	162757	Argument	sizeof ( struct rsksictx_s )		162741	1					
ANR	162758	SizeofExpression	sizeof ( struct rsksictx_s )		162741	0					
ANR	162759	Sizeof	sizeof		162741	0					
ANR	162760	SizeofOperand	struct rsksictx_s		162741	1					
ANR	162761	ExpressionStatement	KSI_CTX_new ( & ctx -> ksi_ctx )	624:1:16596:16622	162741	2	True				
ANR	162762	CallExpression	KSI_CTX_new ( & ctx -> ksi_ctx )		162741	0					
ANR	162763	Callee	KSI_CTX_new		162741	0					
ANR	162764	Identifier	KSI_CTX_new		162741	0					
ANR	162765	ArgumentList	& ctx -> ksi_ctx		162741	1					
ANR	162766	Argument	& ctx -> ksi_ctx		162741	0					
ANR	162767	UnaryOperationExpression	& ctx -> ksi_ctx		162741	0					
ANR	162768	UnaryOperator	&		162741	0					
ANR	162769	PtrMemberAccess	ctx -> ksi_ctx		162741	1					
ANR	162770	Identifier	ctx		162741	0					
ANR	162771	Identifier	ksi_ctx		162741	1					
ANR	162772	ExpressionStatement	ctx -> hasher = NULL	625:1:16678:16696	162741	3	True				
ANR	162773	AssignmentExpression	ctx -> hasher = NULL		162741	0		=			
ANR	162774	PtrMemberAccess	ctx -> hasher		162741	0					
ANR	162775	Identifier	ctx		162741	0					
ANR	162776	Identifier	hasher		162741	1					
ANR	162777	Identifier	NULL		162741	1					
ANR	162778	ExpressionStatement	ctx -> hashAlg = KSI_HASHALG_SHA2_256	626:1:16699:16734	162741	4	True				
ANR	162779	AssignmentExpression	ctx -> hashAlg = KSI_HASHALG_SHA2_256		162741	0		=			
ANR	162780	PtrMemberAccess	ctx -> hashAlg		162741	0					
ANR	162781	Identifier	ctx		162741	0					
ANR	162782	Identifier	hashAlg		162741	1					
ANR	162783	Identifier	KSI_HASHALG_SHA2_256		162741	1					
ANR	162784	ExpressionStatement	ctx -> blockTimeLimit = 0	627:1:16737:16760	162741	5	True				
ANR	162785	AssignmentExpression	ctx -> blockTimeLimit = 0		162741	0		=			
ANR	162786	PtrMemberAccess	ctx -> blockTimeLimit		162741	0					
ANR	162787	Identifier	ctx		162741	0					
ANR	162788	Identifier	blockTimeLimit		162741	1					
ANR	162789	PrimaryExpression	0		162741	1					
ANR	162790	ExpressionStatement	ctx -> bKeepTreeHashes = false	628:1:16763:16791	162741	6	True				
ANR	162791	AssignmentExpression	ctx -> bKeepTreeHashes = false		162741	0		=			
ANR	162792	PtrMemberAccess	ctx -> bKeepTreeHashes		162741	0					
ANR	162793	Identifier	ctx		162741	0					
ANR	162794	Identifier	bKeepTreeHashes		162741	1					
ANR	162795	Identifier	false		162741	1					
ANR	162796	ExpressionStatement	ctx -> bKeepRecordHashes = true	629:1:16794:16823	162741	7	True				
ANR	162797	AssignmentExpression	ctx -> bKeepRecordHashes = true		162741	0		=			
ANR	162798	PtrMemberAccess	ctx -> bKeepRecordHashes		162741	0					
ANR	162799	Identifier	ctx		162741	0					
ANR	162800	Identifier	bKeepRecordHashes		162741	1					
ANR	162801	Identifier	true		162741	1					
ANR	162802	ExpressionStatement	ctx -> errFunc = NULL	630:1:16826:16845	162741	8	True				
ANR	162803	AssignmentExpression	ctx -> errFunc = NULL		162741	0		=			
ANR	162804	PtrMemberAccess	ctx -> errFunc		162741	0					
ANR	162805	Identifier	ctx		162741	0					
ANR	162806	Identifier	errFunc		162741	1					
ANR	162807	Identifier	NULL		162741	1					
ANR	162808	ExpressionStatement	ctx -> usrptr = NULL	631:1:16848:16866	162741	9	True				
ANR	162809	AssignmentExpression	ctx -> usrptr = NULL		162741	0		=			
ANR	162810	PtrMemberAccess	ctx -> usrptr		162741	0					
ANR	162811	Identifier	ctx		162741	0					
ANR	162812	Identifier	usrptr		162741	1					
ANR	162813	Identifier	NULL		162741	1					
ANR	162814	ExpressionStatement	ctx -> fileUID = - 1	632:1:16869:16886	162741	10	True				
ANR	162815	AssignmentExpression	ctx -> fileUID = - 1		162741	0		=			
ANR	162816	PtrMemberAccess	ctx -> fileUID		162741	0					
ANR	162817	Identifier	ctx		162741	0					
ANR	162818	Identifier	fileUID		162741	1					
ANR	162819	UnaryOperationExpression	- 1		162741	1					
ANR	162820	UnaryOperator	-		162741	0					
ANR	162821	PrimaryExpression	1		162741	1					
ANR	162822	ExpressionStatement	ctx -> fileGID = - 1	633:1:16889:16906	162741	11	True				
ANR	162823	AssignmentExpression	ctx -> fileGID = - 1		162741	0		=			
ANR	162824	PtrMemberAccess	ctx -> fileGID		162741	0					
ANR	162825	Identifier	ctx		162741	0					
ANR	162826	Identifier	fileGID		162741	1					
ANR	162827	UnaryOperationExpression	- 1		162741	1					
ANR	162828	UnaryOperator	-		162741	0					
ANR	162829	PrimaryExpression	1		162741	1					
ANR	162830	ExpressionStatement	ctx -> dirUID = - 1	634:1:16909:16925	162741	12	True				
ANR	162831	AssignmentExpression	ctx -> dirUID = - 1		162741	0		=			
ANR	162832	PtrMemberAccess	ctx -> dirUID		162741	0					
ANR	162833	Identifier	ctx		162741	0					
ANR	162834	Identifier	dirUID		162741	1					
ANR	162835	UnaryOperationExpression	- 1		162741	1					
ANR	162836	UnaryOperator	-		162741	0					
ANR	162837	PrimaryExpression	1		162741	1					
ANR	162838	ExpressionStatement	ctx -> dirGID = - 1	635:1:16928:16944	162741	13	True				
ANR	162839	AssignmentExpression	ctx -> dirGID = - 1		162741	0		=			
ANR	162840	PtrMemberAccess	ctx -> dirGID		162741	0					
ANR	162841	Identifier	ctx		162741	0					
ANR	162842	Identifier	dirGID		162741	1					
ANR	162843	UnaryOperationExpression	- 1		162741	1					
ANR	162844	UnaryOperator	-		162741	0					
ANR	162845	PrimaryExpression	1		162741	1					
ANR	162846	ExpressionStatement	ctx -> fCreateMode = 0644	636:1:16947:16970	162741	14	True				
ANR	162847	AssignmentExpression	ctx -> fCreateMode = 0644		162741	0		=			
ANR	162848	PtrMemberAccess	ctx -> fCreateMode		162741	0					
ANR	162849	Identifier	ctx		162741	0					
ANR	162850	Identifier	fCreateMode		162741	1					
ANR	162851	PrimaryExpression	0644		162741	1					
ANR	162852	ExpressionStatement	ctx -> fDirCreateMode = 0700	637:1:16973:16999	162741	15	True				
ANR	162853	AssignmentExpression	ctx -> fDirCreateMode = 0700		162741	0		=			
ANR	162854	PtrMemberAccess	ctx -> fDirCreateMode		162741	0					
ANR	162855	Identifier	ctx		162741	0					
ANR	162856	Identifier	fDirCreateMode		162741	1					
ANR	162857	PrimaryExpression	0700		162741	1					
ANR	162858	ExpressionStatement	ctx -> syncMode = LOGSIG_SYNCHRONOUS	638:1:17002:17036	162741	16	True				
ANR	162859	AssignmentExpression	ctx -> syncMode = LOGSIG_SYNCHRONOUS		162741	0		=			
ANR	162860	PtrMemberAccess	ctx -> syncMode		162741	0					
ANR	162861	Identifier	ctx		162741	0					
ANR	162862	Identifier	syncMode		162741	1					
ANR	162863	Identifier	LOGSIG_SYNCHRONOUS		162741	1					
ANR	162864	ExpressionStatement	ctx -> thread_started = false	639:1:17039:17066	162741	17	True				
ANR	162865	AssignmentExpression	ctx -> thread_started = false		162741	0		=			
ANR	162866	PtrMemberAccess	ctx -> thread_started		162741	0					
ANR	162867	Identifier	ctx		162741	0					
ANR	162868	Identifier	thread_started		162741	1					
ANR	162869	Identifier	false		162741	1					
ANR	162870	ExpressionStatement	ctx -> disabled = false	640:1:17069:17090	162741	18	True				
ANR	162871	AssignmentExpression	ctx -> disabled = false		162741	0		=			
ANR	162872	PtrMemberAccess	ctx -> disabled		162741	0					
ANR	162873	Identifier	ctx		162741	0					
ANR	162874	Identifier	disabled		162741	1					
ANR	162875	Identifier	false		162741	1					
ANR	162876	ReturnStatement	return ctx ;	652:1:17499:17509	162741	19	True				
ANR	162877	Identifier	ctx		162741	0					
ANR	162878	ReturnType	rsksictx		162741	1					
ANR	162879	Identifier	rsksiCtxNew		162741	2					
ANR	162880	ParameterList			162741	3					
ANR	162881	CFGEntryNode	ENTRY		162741		True				
ANR	162882	CFGExitNode	EXIT		162741		True				
ANR	162883	Symbol	LOGSIG_SYNCHRONOUS		162741						
ANR	162884	Symbol	ctx -> fDirCreateMode		162741						
ANR	162885	Symbol	ctx -> fCreateMode		162741						
ANR	162886	Symbol	calloc		162741						
ANR	162887	Symbol	ctx -> dirGID		162741						
ANR	162888	Symbol	ctx -> errFunc		162741						
ANR	162889	Symbol	ctx -> dirUID		162741						
ANR	162890	Symbol	ctx -> bKeepTreeHashes		162741						
ANR	162891	Symbol	NULL		162741						
ANR	162892	Symbol	ctx -> usrptr		162741						
ANR	162893	Symbol	ctx		162741						
ANR	162894	Symbol	false		162741						
ANR	162895	Symbol	ctx -> blockTimeLimit		162741						
ANR	162896	Symbol	& ctx -> ksi_ctx		162741						
ANR	162897	Symbol	ctx -> hashAlg		162741						
ANR	162898	Symbol	* ctx		162741						
ANR	162899	Symbol	KSI_HASHALG_SHA2_256		162741						
ANR	162900	Symbol	ctx -> thread_started		162741						
ANR	162901	Symbol	ctx -> bKeepRecordHashes		162741						
ANR	162902	Symbol	ctx -> fileUID		162741						
ANR	162903	Symbol	true		162741						
ANR	162904	Symbol	ctx -> disabled		162741						
ANR	162905	Symbol	ctx -> hasher		162741						
ANR	162906	Symbol	ctx -> fileGID		162741						
ANR	162907	Symbol	ctx -> syncMode		162741						
ANR	162908	Function	rsksiCtxOpenFile	656:0:17582:18983							
ANR	162909	FunctionDef	"rsksiCtxOpenFile (rsksictx ctx , unsigned char * logfn)"		162908	0					
ANR	162910	CompoundStatement		658:0:17643:18983	162908	0					
ANR	162911	IdentifierDeclStatement	ksifile ksi ;	659:1:17646:17657	162908	0	True				
ANR	162912	IdentifierDecl	ksi		162908	0					
ANR	162913	IdentifierDeclType	ksifile		162908	0					
ANR	162914	Identifier	ksi		162908	1					
ANR	162915	IdentifierDeclStatement	char fn [ MAXFNAME + 1 ] ;	660:1:17660:17679	162908	1	True				
ANR	162916	IdentifierDecl	fn [ MAXFNAME + 1 ]		162908	0					
ANR	162917	IdentifierDeclType	char [ MAXFNAME + 1 ]		162908	0					
ANR	162918	Identifier	fn		162908	1					
ANR	162919	AdditiveExpression	MAXFNAME + 1		162908	2		+			
ANR	162920	Identifier	MAXFNAME		162908	0					
ANR	162921	PrimaryExpression	1		162908	1					
ANR	162922	IfStatement	if ( ctx -> disabled )		162908	2					
ANR	162923	Condition	ctx -> disabled	662:5:17687:17699	162908	0	True				
ANR	162924	PtrMemberAccess	ctx -> disabled		162908	0					
ANR	162925	Identifier	ctx		162908	0					
ANR	162926	Identifier	disabled		162908	1					
ANR	162927	ReturnStatement	return NULL ;	663:2:17704:17715	162908	1	True				
ANR	162928	Identifier	NULL		162908	0					
ANR	162929	ExpressionStatement	pthread_mutex_lock ( & ctx -> module_lock )	665:1:17719:17756	162908	3	True				
ANR	162930	CallExpression	pthread_mutex_lock ( & ctx -> module_lock )		162908	0					
ANR	162931	Callee	pthread_mutex_lock		162908	0					
ANR	162932	Identifier	pthread_mutex_lock		162908	0					
ANR	162933	ArgumentList	& ctx -> module_lock		162908	1					
ANR	162934	Argument	& ctx -> module_lock		162908	0					
ANR	162935	UnaryOperationExpression	& ctx -> module_lock		162908	0					
ANR	162936	UnaryOperator	&		162908	0					
ANR	162937	PtrMemberAccess	ctx -> module_lock		162908	1					
ANR	162938	Identifier	ctx		162908	0					
ANR	162939	Identifier	module_lock		162908	1					
ANR	162940	IfStatement	if ( ! ctx -> thread_started )		162908	4					
ANR	162941	Condition	! ctx -> thread_started	669:5:17905:17924	162908	0	True				
ANR	162942	UnaryOperationExpression	! ctx -> thread_started		162908	0					
ANR	162943	UnaryOperator	!		162908	0					
ANR	162944	PtrMemberAccess	ctx -> thread_started		162908	1					
ANR	162945	Identifier	ctx		162908	0					
ANR	162946	Identifier	thread_started		162908	1					
ANR	162947	ExpressionStatement	create_signer_thread ( ctx )	670:2:17929:17954	162908	1	True				
ANR	162948	CallExpression	create_signer_thread ( ctx )		162908	0					
ANR	162949	Callee	create_signer_thread		162908	0					
ANR	162950	Identifier	create_signer_thread		162908	0					
ANR	162951	ArgumentList	ctx		162908	1					
ANR	162952	Argument	ctx		162908	0					
ANR	162953	Identifier	ctx		162908	0					
ANR	162954	IfStatement	if ( ( ksi = rsksifileConstruct ( ctx ) ) == NULL )		162908	5					
ANR	162955	Condition	( ksi = rsksifileConstruct ( ctx ) ) == NULL	672:5:17962:18000	162908	0	True				
ANR	162956	EqualityExpression	( ksi = rsksifileConstruct ( ctx ) ) == NULL		162908	0		==			
ANR	162957	AssignmentExpression	ksi = rsksifileConstruct ( ctx )		162908	0		=			
ANR	162958	Identifier	ksi		162908	0					
ANR	162959	CallExpression	rsksifileConstruct ( ctx )		162908	1					
ANR	162960	Callee	rsksifileConstruct		162908	0					
ANR	162961	Identifier	rsksifileConstruct		162908	0					
ANR	162962	ArgumentList	ctx		162908	1					
ANR	162963	Argument	ctx		162908	0					
ANR	162964	Identifier	ctx		162908	0					
ANR	162965	Identifier	NULL		162908	1					
ANR	162966	GotoStatement	goto done ;	673:2:18005:18014	162908	1	True				
ANR	162967	Identifier	done		162908	0					
ANR	162968	ExpressionStatement	"snprintf ( fn , sizeof ( fn ) , ""%s.ksistate"" , logfn )"	675:1:18018:18065	162908	6	True				
ANR	162969	CallExpression	"snprintf ( fn , sizeof ( fn ) , ""%s.ksistate"" , logfn )"		162908	0					
ANR	162970	Callee	snprintf		162908	0					
ANR	162971	Identifier	snprintf		162908	0					
ANR	162972	ArgumentList	fn		162908	1					
ANR	162973	Argument	fn		162908	0					
ANR	162974	Identifier	fn		162908	0					
ANR	162975	Argument	sizeof ( fn )		162908	1					
ANR	162976	SizeofExpression	sizeof ( fn )		162908	0					
ANR	162977	Sizeof	sizeof		162908	0					
ANR	162978	SizeofOperand	fn		162908	1					
ANR	162979	Argument	"""%s.ksistate"""		162908	2					
ANR	162980	PrimaryExpression	"""%s.ksistate"""		162908	0					
ANR	162981	Argument	logfn		162908	3					
ANR	162982	Identifier	logfn		162908	0					
ANR	162983	ExpressionStatement	fn [ MAXFNAME ] = '\\0'	676:1:18068:18087	162908	7	True				
ANR	162984	AssignmentExpression	fn [ MAXFNAME ] = '\\0'		162908	0		=			
ANR	162985	ArrayIndexing	fn [ MAXFNAME ]		162908	0					
ANR	162986	Identifier	fn		162908	0					
ANR	162987	Identifier	MAXFNAME		162908	1					
ANR	162988	PrimaryExpression	'\\0'		162908	1					
ANR	162989	ExpressionStatement	ksi -> statefilename = ( uchar * ) strdup ( fn )	677:1:18112:18152	162908	8	True				
ANR	162990	AssignmentExpression	ksi -> statefilename = ( uchar * ) strdup ( fn )		162908	0		=			
ANR	162991	PtrMemberAccess	ksi -> statefilename		162908	0					
ANR	162992	Identifier	ksi		162908	0					
ANR	162993	Identifier	statefilename		162908	1					
ANR	162994	CastExpression	( uchar * ) strdup ( fn )		162908	1					
ANR	162995	CastTarget	uchar *		162908	0					
ANR	162996	CallExpression	strdup ( fn )		162908	1					
ANR	162997	Callee	strdup		162908	0					
ANR	162998	Identifier	strdup		162908	0					
ANR	162999	ArgumentList	fn		162908	1					
ANR	163000	Argument	fn		162908	0					
ANR	163001	Identifier	fn		162908	0					
ANR	163002	IfStatement	if ( ctx -> syncMode == LOGSIG_ASYNCHRONOUS )		162908	9					
ANR	163003	Condition	ctx -> syncMode == LOGSIG_ASYNCHRONOUS	679:5:18160:18195	162908	0	True				
ANR	163004	EqualityExpression	ctx -> syncMode == LOGSIG_ASYNCHRONOUS		162908	0		==			
ANR	163005	PtrMemberAccess	ctx -> syncMode		162908	0					
ANR	163006	Identifier	ctx		162908	0					
ANR	163007	Identifier	syncMode		162908	1					
ANR	163008	Identifier	LOGSIG_ASYNCHRONOUS		162908	1					
ANR	163009	CompoundStatement		22:43:554:554	162908	1					
ANR	163010	ExpressionStatement	"snprintf ( fn , sizeof ( fn ) , ""%s%s"" , logfn , blockFileSuffix )"	681:2:18239:18296	162908	0	True				
ANR	163011	CallExpression	"snprintf ( fn , sizeof ( fn ) , ""%s%s"" , logfn , blockFileSuffix )"		162908	0					
ANR	163012	Callee	snprintf		162908	0					
ANR	163013	Identifier	snprintf		162908	0					
ANR	163014	ArgumentList	fn		162908	1					
ANR	163015	Argument	fn		162908	0					
ANR	163016	Identifier	fn		162908	0					
ANR	163017	Argument	sizeof ( fn )		162908	1					
ANR	163018	SizeofExpression	sizeof ( fn )		162908	0					
ANR	163019	Sizeof	sizeof		162908	0					
ANR	163020	SizeofOperand	fn		162908	1					
ANR	163021	Argument	"""%s%s"""		162908	2					
ANR	163022	PrimaryExpression	"""%s%s"""		162908	0					
ANR	163023	Argument	logfn		162908	3					
ANR	163024	Identifier	logfn		162908	0					
ANR	163025	Argument	blockFileSuffix		162908	4					
ANR	163026	Identifier	blockFileSuffix		162908	0					
ANR	163027	ExpressionStatement	fn [ MAXFNAME ] = '\\0'	682:2:18300:18319	162908	1	True				
ANR	163028	AssignmentExpression	fn [ MAXFNAME ] = '\\0'		162908	0		=			
ANR	163029	ArrayIndexing	fn [ MAXFNAME ]		162908	0					
ANR	163030	Identifier	fn		162908	0					
ANR	163031	Identifier	MAXFNAME		162908	1					
ANR	163032	PrimaryExpression	'\\0'		162908	1					
ANR	163033	ExpressionStatement	ksi -> blockfilename = ( uchar * ) strdup ( fn )	683:2:18345:18385	162908	2	True				
ANR	163034	AssignmentExpression	ksi -> blockfilename = ( uchar * ) strdup ( fn )		162908	0		=			
ANR	163035	PtrMemberAccess	ksi -> blockfilename		162908	0					
ANR	163036	Identifier	ksi		162908	0					
ANR	163037	Identifier	blockfilename		162908	1					
ANR	163038	CastExpression	( uchar * ) strdup ( fn )		162908	1					
ANR	163039	CastTarget	uchar *		162908	0					
ANR	163040	CallExpression	strdup ( fn )		162908	1					
ANR	163041	Callee	strdup		162908	0					
ANR	163042	Identifier	strdup		162908	0					
ANR	163043	ArgumentList	fn		162908	1					
ANR	163044	Argument	fn		162908	0					
ANR	163045	Identifier	fn		162908	0					
ANR	163046	ExpressionStatement	"snprintf ( fn , sizeof ( fn ) , ""%s%s"" , logfn , sigFileSuffix )"	686:2:18425:18480	162908	3	True				
ANR	163047	CallExpression	"snprintf ( fn , sizeof ( fn ) , ""%s%s"" , logfn , sigFileSuffix )"		162908	0					
ANR	163048	Callee	snprintf		162908	0					
ANR	163049	Identifier	snprintf		162908	0					
ANR	163050	ArgumentList	fn		162908	1					
ANR	163051	Argument	fn		162908	0					
ANR	163052	Identifier	fn		162908	0					
ANR	163053	Argument	sizeof ( fn )		162908	1					
ANR	163054	SizeofExpression	sizeof ( fn )		162908	0					
ANR	163055	Sizeof	sizeof		162908	0					
ANR	163056	SizeofOperand	fn		162908	1					
ANR	163057	Argument	"""%s%s"""		162908	2					
ANR	163058	PrimaryExpression	"""%s%s"""		162908	0					
ANR	163059	Argument	logfn		162908	3					
ANR	163060	Identifier	logfn		162908	0					
ANR	163061	Argument	sigFileSuffix		162908	4					
ANR	163062	Identifier	sigFileSuffix		162908	0					
ANR	163063	ExpressionStatement	fn [ MAXFNAME ] = '\\0'	687:2:18484:18503	162908	4	True				
ANR	163064	AssignmentExpression	fn [ MAXFNAME ] = '\\0'		162908	0		=			
ANR	163065	ArrayIndexing	fn [ MAXFNAME ]		162908	0					
ANR	163066	Identifier	fn		162908	0					
ANR	163067	Identifier	MAXFNAME		162908	1					
ANR	163068	PrimaryExpression	'\\0'		162908	1					
ANR	163069	ExpressionStatement	ksi -> ksifilename = ( uchar * ) strdup ( fn )	688:2:18529:18567	162908	5	True				
ANR	163070	AssignmentExpression	ksi -> ksifilename = ( uchar * ) strdup ( fn )		162908	0		=			
ANR	163071	PtrMemberAccess	ksi -> ksifilename		162908	0					
ANR	163072	Identifier	ksi		162908	0					
ANR	163073	Identifier	ksifilename		162908	1					
ANR	163074	CastExpression	( uchar * ) strdup ( fn )		162908	1					
ANR	163075	CastTarget	uchar *		162908	0					
ANR	163076	CallExpression	strdup ( fn )		162908	1					
ANR	163077	Callee	strdup		162908	0					
ANR	163078	Identifier	strdup		162908	0					
ANR	163079	ArgumentList	fn		162908	1					
ANR	163080	Argument	fn		162908	0					
ANR	163081	Identifier	fn		162908	0					
ANR	163082	ElseStatement	else		162908	0					
ANR	163083	IfStatement	if ( ctx -> syncMode == LOGSIG_SYNCHRONOUS )		162908	0					
ANR	163084	Condition	ctx -> syncMode == LOGSIG_SYNCHRONOUS	689:12:18581:18615	162908	0	True				
ANR	163085	EqualityExpression	ctx -> syncMode == LOGSIG_SYNCHRONOUS		162908	0		==			
ANR	163086	PtrMemberAccess	ctx -> syncMode		162908	0					
ANR	163087	Identifier	ctx		162908	0					
ANR	163088	Identifier	syncMode		162908	1					
ANR	163089	Identifier	LOGSIG_SYNCHRONOUS		162908	1					
ANR	163090	CompoundStatement		32:49:974:974	162908	1					
ANR	163091	ExpressionStatement	"snprintf ( fn , sizeof ( fn ) , ""%s%s"" , logfn , ls12FileSuffix )"	690:2:18622:18678	162908	0	True				
ANR	163092	CallExpression	"snprintf ( fn , sizeof ( fn ) , ""%s%s"" , logfn , ls12FileSuffix )"		162908	0					
ANR	163093	Callee	snprintf		162908	0					
ANR	163094	Identifier	snprintf		162908	0					
ANR	163095	ArgumentList	fn		162908	1					
ANR	163096	Argument	fn		162908	0					
ANR	163097	Identifier	fn		162908	0					
ANR	163098	Argument	sizeof ( fn )		162908	1					
ANR	163099	SizeofExpression	sizeof ( fn )		162908	0					
ANR	163100	Sizeof	sizeof		162908	0					
ANR	163101	SizeofOperand	fn		162908	1					
ANR	163102	Argument	"""%s%s"""		162908	2					
ANR	163103	PrimaryExpression	"""%s%s"""		162908	0					
ANR	163104	Argument	logfn		162908	3					
ANR	163105	Identifier	logfn		162908	0					
ANR	163106	Argument	ls12FileSuffix		162908	4					
ANR	163107	Identifier	ls12FileSuffix		162908	0					
ANR	163108	ExpressionStatement	fn [ MAXFNAME ] = '\\0'	691:2:18682:18701	162908	1	True				
ANR	163109	AssignmentExpression	fn [ MAXFNAME ] = '\\0'		162908	0		=			
ANR	163110	ArrayIndexing	fn [ MAXFNAME ]		162908	0					
ANR	163111	Identifier	fn		162908	0					
ANR	163112	Identifier	MAXFNAME		162908	1					
ANR	163113	PrimaryExpression	'\\0'		162908	1					
ANR	163114	ExpressionStatement	ksi -> blockfilename = ( uchar * ) strdup ( fn )	692:2:18727:18767	162908	2	True				
ANR	163115	AssignmentExpression	ksi -> blockfilename = ( uchar * ) strdup ( fn )		162908	0		=			
ANR	163116	PtrMemberAccess	ksi -> blockfilename		162908	0					
ANR	163117	Identifier	ksi		162908	0					
ANR	163118	Identifier	blockfilename		162908	1					
ANR	163119	CastExpression	( uchar * ) strdup ( fn )		162908	1					
ANR	163120	CastTarget	uchar *		162908	0					
ANR	163121	CallExpression	strdup ( fn )		162908	1					
ANR	163122	Callee	strdup		162908	0					
ANR	163123	Identifier	strdup		162908	0					
ANR	163124	ArgumentList	fn		162908	1					
ANR	163125	Argument	fn		162908	0					
ANR	163126	Identifier	fn		162908	0					
ANR	163127	IfStatement	if ( ksiOpenSigFile ( ksi ) != 0 )		162908	10					
ANR	163128	Condition	ksiOpenSigFile ( ksi ) != 0	695:5:18778:18801	162908	0	True				
ANR	163129	EqualityExpression	ksiOpenSigFile ( ksi ) != 0		162908	0		!=			
ANR	163130	CallExpression	ksiOpenSigFile ( ksi )		162908	0					
ANR	163131	Callee	ksiOpenSigFile		162908	0					
ANR	163132	Identifier	ksiOpenSigFile		162908	0					
ANR	163133	ArgumentList	ksi		162908	1					
ANR	163134	Argument	ksi		162908	0					
ANR	163135	Identifier	ksi		162908	0					
ANR	163136	PrimaryExpression	0		162908	1					
ANR	163137	CompoundStatement		38:31:1160:1160	162908	1					
ANR	163138	ExpressionStatement	"reportErr ( ctx , ""signature file open failed"" )"	696:2:18808:18852	162908	0	True				
ANR	163139	CallExpression	"reportErr ( ctx , ""signature file open failed"" )"		162908	0					
ANR	163140	Callee	reportErr		162908	0					
ANR	163141	Identifier	reportErr		162908	0					
ANR	163142	ArgumentList	ctx		162908	1					
ANR	163143	Argument	ctx		162908	0					
ANR	163144	Identifier	ctx		162908	0					
ANR	163145	Argument	"""signature file open failed"""		162908	1					
ANR	163146	PrimaryExpression	"""signature file open failed"""		162908	0					
ANR	163147	ExpressionStatement	free ( ksi )	698:2:18876:18885	162908	1	True				
ANR	163148	CallExpression	free ( ksi )		162908	0					
ANR	163149	Callee	free		162908	0					
ANR	163150	Identifier	free		162908	0					
ANR	163151	ArgumentList	ksi		162908	1					
ANR	163152	Argument	ksi		162908	0					
ANR	163153	Identifier	ksi		162908	0					
ANR	163154	ExpressionStatement	ksi = NULL	699:2:18889:18899	162908	2	True				
ANR	163155	AssignmentExpression	ksi = NULL		162908	0		=			
ANR	163156	Identifier	ksi		162908	0					
ANR	163157	Identifier	NULL		162908	1					
ANR	163158	Label	done :	702:0:18905:18909	162908	11	True				
ANR	163159	Identifier	done		162908	0					
ANR	163160	ExpressionStatement	ctx -> ksi = ksi	703:1:18912:18926	162908	12	True				
ANR	163161	AssignmentExpression	ctx -> ksi = ksi		162908	0		=			
ANR	163162	PtrMemberAccess	ctx -> ksi		162908	0					
ANR	163163	Identifier	ctx		162908	0					
ANR	163164	Identifier	ksi		162908	1					
ANR	163165	Identifier	ksi		162908	1					
ANR	163166	ExpressionStatement	pthread_mutex_unlock ( & ctx -> module_lock )	704:1:18929:18968	162908	13	True				
ANR	163167	CallExpression	pthread_mutex_unlock ( & ctx -> module_lock )		162908	0					
ANR	163168	Callee	pthread_mutex_unlock		162908	0					
ANR	163169	Identifier	pthread_mutex_unlock		162908	0					
ANR	163170	ArgumentList	& ctx -> module_lock		162908	1					
ANR	163171	Argument	& ctx -> module_lock		162908	0					
ANR	163172	UnaryOperationExpression	& ctx -> module_lock		162908	0					
ANR	163173	UnaryOperator	&		162908	0					
ANR	163174	PtrMemberAccess	ctx -> module_lock		162908	1					
ANR	163175	Identifier	ctx		162908	0					
ANR	163176	Identifier	module_lock		162908	1					
ANR	163177	ReturnStatement	return ksi ;	705:1:18971:18981	162908	14	True				
ANR	163178	Identifier	ksi		162908	0					
ANR	163179	ReturnType	ksifile		162908	1					
ANR	163180	Identifier	rsksiCtxOpenFile		162908	2					
ANR	163181	ParameterList	"rsksictx ctx , unsigned char * logfn"		162908	3					
ANR	163182	Parameter	rsksictx ctx	657:17:17607:17618	162908	0	True				
ANR	163183	ParameterType	rsksictx		162908	0					
ANR	163184	Identifier	ctx		162908	1					
ANR	163185	Parameter	unsigned char * logfn	657:31:17621:17640	162908	1	True				
ANR	163186	ParameterType	unsigned char *		162908	0					
ANR	163187	Identifier	logfn		162908	1					
ANR	163188	CFGEntryNode	ENTRY		162908		True				
ANR	163189	CFGExitNode	EXIT		162908		True				
ANR	163190	Symbol	ksi		162908						
ANR	163191	Symbol	LOGSIG_SYNCHRONOUS		162908						
ANR	163192	Symbol	rsksifileConstruct		162908						
ANR	163193	Symbol	ksiOpenSigFile		162908						
ANR	163194	Symbol	fn		162908						
ANR	163195	Symbol	LOGSIG_ASYNCHRONOUS		162908						
ANR	163196	Symbol	ksi -> ksifilename		162908						
ANR	163197	Symbol	MAXFNAME		162908						
ANR	163198	Symbol	ksi -> statefilename		162908						
ANR	163199	Symbol	ksi -> blockfilename		162908						
ANR	163200	Symbol	NULL		162908						
ANR	163201	Symbol	ls12FileSuffix		162908						
ANR	163202	Symbol	sigFileSuffix		162908						
ANR	163203	Symbol	ctx		162908						
ANR	163204	Symbol	logfn		162908						
ANR	163205	Symbol	ctx -> ksi		162908						
ANR	163206	Symbol	* ksi		162908						
ANR	163207	Symbol	* fn		162908						
ANR	163208	Symbol	* ctx		162908						
ANR	163209	Symbol	ctx -> thread_started		162908						
ANR	163210	Symbol	* MAXFNAME		162908						
ANR	163211	Symbol	& ctx -> module_lock		162908						
ANR	163212	Symbol	ctx -> disabled		162908						
ANR	163213	Symbol	strdup		162908						
ANR	163214	Symbol	blockFileSuffix		162908						
ANR	163215	Symbol	ctx -> syncMode		162908						
ANR	163216	Function	rsksiSetHashFunction	712:0:19105:19570							
ANR	163217	FunctionDef	"rsksiSetHashFunction (rsksictx ctx , char * algName)"		163216	0					
ANR	163218	CompoundStatement		713:50:19159:19570	163216	0					
ANR	163219	IdentifierDeclStatement	"int r , id = KSI_getHashAlgorithmByName ( algName ) ;"	714:1:19162:19209	163216	0	True				
ANR	163220	IdentifierDecl	r		163216	0					
ANR	163221	IdentifierDeclType	int		163216	0					
ANR	163222	Identifier	r		163216	1					
ANR	163223	IdentifierDecl	id = KSI_getHashAlgorithmByName ( algName )		163216	1					
ANR	163224	IdentifierDeclType	int		163216	0					
ANR	163225	Identifier	id		163216	1					
ANR	163226	AssignmentExpression	id = KSI_getHashAlgorithmByName ( algName )		163216	2		=			
ANR	163227	Identifier	id		163216	0					
ANR	163228	CallExpression	KSI_getHashAlgorithmByName ( algName )		163216	1					
ANR	163229	Callee	KSI_getHashAlgorithmByName		163216	0					
ANR	163230	Identifier	KSI_getHashAlgorithmByName		163216	0					
ANR	163231	ArgumentList	algName		163216	1					
ANR	163232	Argument	algName		163216	0					
ANR	163233	Identifier	algName		163216	0					
ANR	163234	IfStatement	if ( id == KSI_HASHALG_INVALID )		163216	1					
ANR	163235	Condition	id == KSI_HASHALG_INVALID	715:5:19216:19240	163216	0	True				
ANR	163236	EqualityExpression	id == KSI_HASHALG_INVALID		163216	0		==			
ANR	163237	Identifier	id		163216	0					
ANR	163238	Identifier	KSI_HASHALG_INVALID		163216	1					
ANR	163239	CompoundStatement		3:32:83:83	163216	1					
ANR	163240	ExpressionStatement	"report ( ctx , ""Hash function '%s' unknown - using default"" , algName )"	716:2:19247:19313	163216	0	True				
ANR	163241	CallExpression	"report ( ctx , ""Hash function '%s' unknown - using default"" , algName )"		163216	0					
ANR	163242	Callee	report		163216	0					
ANR	163243	Identifier	report		163216	0					
ANR	163244	ArgumentList	ctx		163216	1					
ANR	163245	Argument	ctx		163216	0					
ANR	163246	Identifier	ctx		163216	0					
ANR	163247	Argument	"""Hash function '%s' unknown - using default"""		163216	1					
ANR	163248	PrimaryExpression	"""Hash function '%s' unknown - using default"""		163216	0					
ANR	163249	Argument	algName		163216	2					
ANR	163250	Identifier	algName		163216	0					
ANR	163251	ExpressionStatement	ctx -> hashAlg = KSI_HASHALG_SHA2_256	717:2:19317:19352	163216	1	True				
ANR	163252	AssignmentExpression	ctx -> hashAlg = KSI_HASHALG_SHA2_256		163216	0		=			
ANR	163253	PtrMemberAccess	ctx -> hashAlg		163216	0					
ANR	163254	Identifier	ctx		163216	0					
ANR	163255	Identifier	hashAlg		163216	1					
ANR	163256	Identifier	KSI_HASHALG_SHA2_256		163216	1					
ANR	163257	ElseStatement	else		163216	0					
ANR	163258	CompoundStatement		6:8:202:202	163216	0					
ANR	163259	ExpressionStatement	ctx -> hashAlg = id	719:2:19366:19383	163216	0	True				
ANR	163260	AssignmentExpression	ctx -> hashAlg = id		163216	0		=			
ANR	163261	PtrMemberAccess	ctx -> hashAlg		163216	0					
ANR	163262	Identifier	ctx		163216	0					
ANR	163263	Identifier	hashAlg		163216	1					
ANR	163264	Identifier	id		163216	1					
ANR	163265	IfStatement	"if ( ( r = KSI_DataHasher_open ( ctx -> ksi_ctx , ctx -> hashAlg , & ctx -> hasher ) ) != KSI_OK )"		163216	2					
ANR	163266	Condition	"( r = KSI_DataHasher_open ( ctx -> ksi_ctx , ctx -> hashAlg , & ctx -> hasher ) ) != KSI_OK"	722:5:19394:19470	163216	0	True				
ANR	163267	EqualityExpression	"( r = KSI_DataHasher_open ( ctx -> ksi_ctx , ctx -> hashAlg , & ctx -> hasher ) ) != KSI_OK"		163216	0		!=			
ANR	163268	AssignmentExpression	"r = KSI_DataHasher_open ( ctx -> ksi_ctx , ctx -> hashAlg , & ctx -> hasher )"		163216	0		=			
ANR	163269	Identifier	r		163216	0					
ANR	163270	CallExpression	"KSI_DataHasher_open ( ctx -> ksi_ctx , ctx -> hashAlg , & ctx -> hasher )"		163216	1					
ANR	163271	Callee	KSI_DataHasher_open		163216	0					
ANR	163272	Identifier	KSI_DataHasher_open		163216	0					
ANR	163273	ArgumentList	ctx -> ksi_ctx		163216	1					
ANR	163274	Argument	ctx -> ksi_ctx		163216	0					
ANR	163275	PtrMemberAccess	ctx -> ksi_ctx		163216	0					
ANR	163276	Identifier	ctx		163216	0					
ANR	163277	Identifier	ksi_ctx		163216	1					
ANR	163278	Argument	ctx -> hashAlg		163216	1					
ANR	163279	PtrMemberAccess	ctx -> hashAlg		163216	0					
ANR	163280	Identifier	ctx		163216	0					
ANR	163281	Identifier	hashAlg		163216	1					
ANR	163282	Argument	& ctx -> hasher		163216	2					
ANR	163283	UnaryOperationExpression	& ctx -> hasher		163216	0					
ANR	163284	UnaryOperator	&		163216	0					
ANR	163285	PtrMemberAccess	ctx -> hasher		163216	1					
ANR	163286	Identifier	ctx		163216	0					
ANR	163287	Identifier	hasher		163216	1					
ANR	163288	Identifier	KSI_OK		163216	1					
ANR	163289	CompoundStatement		10:84:313:313	163216	1					
ANR	163290	ExpressionStatement	"reportKSIAPIErr ( ctx , NULL , ""KSI_DataHasher_open"" , r )"	723:2:19477:19529	163216	0	True				
ANR	163291	CallExpression	"reportKSIAPIErr ( ctx , NULL , ""KSI_DataHasher_open"" , r )"		163216	0					
ANR	163292	Callee	reportKSIAPIErr		163216	0					
ANR	163293	Identifier	reportKSIAPIErr		163216	0					
ANR	163294	ArgumentList	ctx		163216	1					
ANR	163295	Argument	ctx		163216	0					
ANR	163296	Identifier	ctx		163216	0					
ANR	163297	Argument	NULL		163216	1					
ANR	163298	Identifier	NULL		163216	0					
ANR	163299	Argument	"""KSI_DataHasher_open"""		163216	2					
ANR	163300	PrimaryExpression	"""KSI_DataHasher_open"""		163216	0					
ANR	163301	Argument	r		163216	3					
ANR	163302	Identifier	r		163216	0					
ANR	163303	ExpressionStatement	ctx -> disabled = true	724:2:19533:19553	163216	1	True				
ANR	163304	AssignmentExpression	ctx -> disabled = true		163216	0		=			
ANR	163305	PtrMemberAccess	ctx -> disabled		163216	0					
ANR	163306	Identifier	ctx		163216	0					
ANR	163307	Identifier	disabled		163216	1					
ANR	163308	Identifier	true		163216	1					
ANR	163309	ReturnStatement	return 0 ;	727:1:19560:19568	163216	3	True				
ANR	163310	PrimaryExpression	0		163216	0					
ANR	163311	ReturnType	int		163216	1					
ANR	163312	Identifier	rsksiSetHashFunction		163216	2					
ANR	163313	ParameterList	"rsksictx ctx , char * algName"		163216	3					
ANR	163314	Parameter	rsksictx ctx	713:21:19130:19141	163216	0	True				
ANR	163315	ParameterType	rsksictx		163216	0					
ANR	163316	Identifier	ctx		163216	1					
ANR	163317	Parameter	char * algName	713:35:19144:19156	163216	1	True				
ANR	163318	ParameterType	char *		163216	0					
ANR	163319	Identifier	algName		163216	1					
ANR	163320	CFGEntryNode	ENTRY		163216		True				
ANR	163321	CFGExitNode	EXIT		163216		True				
ANR	163322	Symbol	NULL		163216						
ANR	163323	Symbol	& ctx -> hasher		163216						
ANR	163324	Symbol	ctx		163216						
ANR	163325	Symbol	ctx -> hashAlg		163216						
ANR	163326	Symbol	KSI_HASHALG_INVALID		163216						
ANR	163327	Symbol	* ctx		163216						
ANR	163328	Symbol	KSI_HASHALG_SHA2_256		163216						
ANR	163329	Symbol	KSI_getHashAlgorithmByName		163216						
ANR	163330	Symbol	r		163216						
ANR	163331	Symbol	KSI_OK		163216						
ANR	163332	Symbol	KSI_DataHasher_open		163216						
ANR	163333	Symbol	ctx -> disabled		163216						
ANR	163334	Symbol	true		163216						
ANR	163335	Symbol	id		163216						
ANR	163336	Symbol	ctx -> ksi_ctx		163216						
ANR	163337	Symbol	algName		163216						
ANR	163338	Function	rsksifileDestruct	730:0:19573:20129							
ANR	163339	FunctionDef	rsksifileDestruct (ksifile ksi)		163338	0					
ANR	163340	CompoundStatement		731:31:19608:20129	163338	0					
ANR	163341	IdentifierDeclStatement	int r = 0 ;	732:1:19611:19620	163338	0	True				
ANR	163342	IdentifierDecl	r = 0		163338	0					
ANR	163343	IdentifierDeclType	int		163338	0					
ANR	163344	Identifier	r		163338	1					
ANR	163345	AssignmentExpression	r = 0		163338	2		=			
ANR	163346	Identifier	r		163338	0					
ANR	163347	PrimaryExpression	0		163338	1					
ANR	163348	IdentifierDeclStatement	rsksictx ctx = NULL ;	733:1:19623:19642	163338	1	True				
ANR	163349	IdentifierDecl	ctx = NULL		163338	0					
ANR	163350	IdentifierDeclType	rsksictx		163338	0					
ANR	163351	Identifier	ctx		163338	1					
ANR	163352	AssignmentExpression	ctx = NULL		163338	2		=			
ANR	163353	Identifier	NULL		163338	0					
ANR	163354	Identifier	NULL		163338	1					
ANR	163355	IfStatement	if ( ksi == NULL )		163338	2					
ANR	163356	Condition	ksi == NULL	734:5:19649:19659	163338	0	True				
ANR	163357	EqualityExpression	ksi == NULL		163338	0		==			
ANR	163358	Identifier	ksi		163338	0					
ANR	163359	Identifier	NULL		163338	1					
ANR	163360	ReturnStatement	return RSGTE_INTERNAL ;	735:2:19664:19685	163338	1	True				
ANR	163361	Identifier	RSGTE_INTERNAL		163338	0					
ANR	163362	ExpressionStatement	pthread_mutex_lock ( & ksi -> ctx -> module_lock )	737:1:19689:19731	163338	3	True				
ANR	163363	CallExpression	pthread_mutex_lock ( & ksi -> ctx -> module_lock )		163338	0					
ANR	163364	Callee	pthread_mutex_lock		163338	0					
ANR	163365	Identifier	pthread_mutex_lock		163338	0					
ANR	163366	ArgumentList	& ksi -> ctx -> module_lock		163338	1					
ANR	163367	Argument	& ksi -> ctx -> module_lock		163338	0					
ANR	163368	UnaryOperationExpression	& ksi -> ctx -> module_lock		163338	0					
ANR	163369	UnaryOperator	&		163338	0					
ANR	163370	PtrMemberAccess	ksi -> ctx -> module_lock		163338	1					
ANR	163371	PtrMemberAccess	ksi -> ctx		163338	0					
ANR	163372	Identifier	ksi		163338	0					
ANR	163373	Identifier	ctx		163338	1					
ANR	163374	Identifier	module_lock		163338	1					
ANR	163375	ExpressionStatement	ctx = ksi -> ctx	739:1:19735:19749	163338	4	True				
ANR	163376	AssignmentExpression	ctx = ksi -> ctx		163338	0		=			
ANR	163377	Identifier	ctx		163338	0					
ANR	163378	PtrMemberAccess	ksi -> ctx		163338	1					
ANR	163379	Identifier	ksi		163338	0					
ANR	163380	Identifier	ctx		163338	1					
ANR	163381	IfStatement	if ( ! ksi -> disabled && ksi -> bInBlk )		163338	5					
ANR	163382	Condition	! ksi -> disabled && ksi -> bInBlk	741:5:19757:19785	163338	0	True				
ANR	163383	AndExpression	! ksi -> disabled && ksi -> bInBlk		163338	0		&&			
ANR	163384	UnaryOperationExpression	! ksi -> disabled		163338	0					
ANR	163385	UnaryOperator	!		163338	0					
ANR	163386	PtrMemberAccess	ksi -> disabled		163338	1					
ANR	163387	Identifier	ksi		163338	0					
ANR	163388	Identifier	disabled		163338	1					
ANR	163389	PtrMemberAccess	ksi -> bInBlk		163338	1					
ANR	163390	Identifier	ksi		163338	0					
ANR	163391	Identifier	bInBlk		163338	1					
ANR	163392	CompoundStatement		11:36:179:179	163338	1					
ANR	163393	ExpressionStatement	"sigblkAddMetadata ( ksi , blockCloseReason , ""Block closed due to file closure."" )"	742:2:19792:19869	163338	0	True				
ANR	163394	CallExpression	"sigblkAddMetadata ( ksi , blockCloseReason , ""Block closed due to file closure."" )"		163338	0					
ANR	163395	Callee	sigblkAddMetadata		163338	0					
ANR	163396	Identifier	sigblkAddMetadata		163338	0					
ANR	163397	ArgumentList	ksi		163338	1					
ANR	163398	Argument	ksi		163338	0					
ANR	163399	Identifier	ksi		163338	0					
ANR	163400	Argument	blockCloseReason		163338	1					
ANR	163401	Identifier	blockCloseReason		163338	0					
ANR	163402	Argument	"""Block closed due to file closure."""		163338	2					
ANR	163403	PrimaryExpression	"""Block closed due to file closure."""		163338	0					
ANR	163404	ExpressionStatement	r = sigblkFinishKSI ( ksi )	743:2:19873:19897	163338	1	True				
ANR	163405	AssignmentExpression	r = sigblkFinishKSI ( ksi )		163338	0		=			
ANR	163406	Identifier	r		163338	0					
ANR	163407	CallExpression	sigblkFinishKSI ( ksi )		163338	1					
ANR	163408	Callee	sigblkFinishKSI		163338	0					
ANR	163409	Identifier	sigblkFinishKSI		163338	0					
ANR	163410	ArgumentList	ksi		163338	1					
ANR	163411	Argument	ksi		163338	0					
ANR	163412	Identifier	ksi		163338	0					
ANR	163413	IfStatement	if ( ! ksi -> disabled )		163338	6					
ANR	163414	Condition	! ksi -> disabled	745:4:19906:19919	163338	0	True				
ANR	163415	UnaryOperationExpression	! ksi -> disabled		163338	0					
ANR	163416	UnaryOperator	!		163338	0					
ANR	163417	PtrMemberAccess	ksi -> disabled		163338	1					
ANR	163418	Identifier	ksi		163338	0					
ANR	163419	Identifier	disabled		163338	1					
ANR	163420	ExpressionStatement	r = ksiCloseSigFile ( ksi )	746:2:19924:19948	163338	1	True				
ANR	163421	AssignmentExpression	r = ksiCloseSigFile ( ksi )		163338	0		=			
ANR	163422	Identifier	r		163338	0					
ANR	163423	CallExpression	ksiCloseSigFile ( ksi )		163338	1					
ANR	163424	Callee	ksiCloseSigFile		163338	0					
ANR	163425	Identifier	ksiCloseSigFile		163338	0					
ANR	163426	ArgumentList	ksi		163338	1					
ANR	163427	Argument	ksi		163338	0					
ANR	163428	Identifier	ksi		163338	0					
ANR	163429	ExpressionStatement	free ( ksi -> blockfilename )	747:1:19951:19975	163338	7	True				
ANR	163430	CallExpression	free ( ksi -> blockfilename )		163338	0					
ANR	163431	Callee	free		163338	0					
ANR	163432	Identifier	free		163338	0					
ANR	163433	ArgumentList	ksi -> blockfilename		163338	1					
ANR	163434	Argument	ksi -> blockfilename		163338	0					
ANR	163435	PtrMemberAccess	ksi -> blockfilename		163338	0					
ANR	163436	Identifier	ksi		163338	0					
ANR	163437	Identifier	blockfilename		163338	1					
ANR	163438	ExpressionStatement	free ( ksi -> statefilename )	748:1:19978:20002	163338	8	True				
ANR	163439	CallExpression	free ( ksi -> statefilename )		163338	0					
ANR	163440	Callee	free		163338	0					
ANR	163441	Identifier	free		163338	0					
ANR	163442	ArgumentList	ksi -> statefilename		163338	1					
ANR	163443	Argument	ksi -> statefilename		163338	0					
ANR	163444	PtrMemberAccess	ksi -> statefilename		163338	0					
ANR	163445	Identifier	ksi		163338	0					
ANR	163446	Identifier	statefilename		163338	1					
ANR	163447	ExpressionStatement	free ( ksi -> ksifilename )	749:1:20005:20027	163338	9	True				
ANR	163448	CallExpression	free ( ksi -> ksifilename )		163338	0					
ANR	163449	Callee	free		163338	0					
ANR	163450	Identifier	free		163338	0					
ANR	163451	ArgumentList	ksi -> ksifilename		163338	1					
ANR	163452	Argument	ksi -> ksifilename		163338	0					
ANR	163453	PtrMemberAccess	ksi -> ksifilename		163338	0					
ANR	163454	Identifier	ksi		163338	0					
ANR	163455	Identifier	ksifilename		163338	1					
ANR	163456	ExpressionStatement	free ( ksi -> IV )	750:1:20030:20043	163338	10	True				
ANR	163457	CallExpression	free ( ksi -> IV )		163338	0					
ANR	163458	Callee	free		163338	0					
ANR	163459	Identifier	free		163338	0					
ANR	163460	ArgumentList	ksi -> IV		163338	1					
ANR	163461	Argument	ksi -> IV		163338	0					
ANR	163462	PtrMemberAccess	ksi -> IV		163338	0					
ANR	163463	Identifier	ksi		163338	0					
ANR	163464	Identifier	IV		163338	1					
ANR	163465	ExpressionStatement	ctx -> ksi = NULL	751:1:20046:20061	163338	11	True				
ANR	163466	AssignmentExpression	ctx -> ksi = NULL		163338	0		=			
ANR	163467	PtrMemberAccess	ctx -> ksi		163338	0					
ANR	163468	Identifier	ctx		163338	0					
ANR	163469	Identifier	ksi		163338	1					
ANR	163470	Identifier	NULL		163338	1					
ANR	163471	ExpressionStatement	free ( ksi )	752:1:20064:20073	163338	12	True				
ANR	163472	CallExpression	free ( ksi )		163338	0					
ANR	163473	Callee	free		163338	0					
ANR	163474	Identifier	free		163338	0					
ANR	163475	ArgumentList	ksi		163338	1					
ANR	163476	Argument	ksi		163338	0					
ANR	163477	Identifier	ksi		163338	0					
ANR	163478	ExpressionStatement	pthread_mutex_unlock ( & ctx -> module_lock )	754:1:20077:20116	163338	13	True				
ANR	163479	CallExpression	pthread_mutex_unlock ( & ctx -> module_lock )		163338	0					
ANR	163480	Callee	pthread_mutex_unlock		163338	0					
ANR	163481	Identifier	pthread_mutex_unlock		163338	0					
ANR	163482	ArgumentList	& ctx -> module_lock		163338	1					
ANR	163483	Argument	& ctx -> module_lock		163338	0					
ANR	163484	UnaryOperationExpression	& ctx -> module_lock		163338	0					
ANR	163485	UnaryOperator	&		163338	0					
ANR	163486	PtrMemberAccess	ctx -> module_lock		163338	1					
ANR	163487	Identifier	ctx		163338	0					
ANR	163488	Identifier	module_lock		163338	1					
ANR	163489	ReturnStatement	return r ;	755:1:20119:20127	163338	14	True				
ANR	163490	Identifier	r		163338	0					
ANR	163491	ReturnType	int		163338	1					
ANR	163492	Identifier	rsksifileDestruct		163338	2					
ANR	163493	ParameterList	ksifile ksi		163338	3					
ANR	163494	Parameter	ksifile ksi	731:18:19595:19605	163338	0	True				
ANR	163495	ParameterType	ksifile		163338	0					
ANR	163496	Identifier	ksi		163338	1					
ANR	163497	CFGEntryNode	ENTRY		163338		True				
ANR	163498	CFGExitNode	EXIT		163338		True				
ANR	163499	Symbol	ksi		163338						
ANR	163500	Symbol	ksi -> ctx		163338						
ANR	163501	Symbol	NULL		163338						
ANR	163502	Symbol	ctx		163338						
ANR	163503	Symbol	blockCloseReason		163338						
ANR	163504	Symbol	ksi -> ksifilename		163338						
ANR	163505	Symbol	ctx -> ksi		163338						
ANR	163506	Symbol	* ksi		163338						
ANR	163507	Symbol	RSGTE_INTERNAL		163338						
ANR	163508	Symbol	* ctx		163338						
ANR	163509	Symbol	ksiCloseSigFile		163338						
ANR	163510	Symbol	r		163338						
ANR	163511	Symbol	& ksi -> ctx -> module_lock		163338						
ANR	163512	Symbol	ksi -> disabled		163338						
ANR	163513	Symbol	ksi -> statefilename		163338						
ANR	163514	Symbol	& ctx -> module_lock		163338						
ANR	163515	Symbol	ksi -> bInBlk		163338						
ANR	163516	Symbol	ksi -> IV		163338						
ANR	163517	Symbol	sigblkFinishKSI		163338						
ANR	163518	Symbol	ksi -> blockfilename		163338						
ANR	163519	Function	rsksiCtxDel	758:0:20132:20612							
ANR	163520	FunctionDef	rsksiCtxDel (rsksictx ctx)		163519	0					
ANR	163521	CompoundStatement		759:26:20163:20612	163519	0					
ANR	163522	IfStatement	if ( ctx == NULL )		163519	0					
ANR	163523	Condition	ctx == NULL	760:5:20170:20180	163519	0	True				
ANR	163524	EqualityExpression	ctx == NULL		163519	0		==			
ANR	163525	Identifier	ctx		163519	0					
ANR	163526	Identifier	NULL		163519	1					
ANR	163527	ReturnStatement	return ;	761:2:20185:20191	163519	1	True				
ANR	163528	IfStatement	if ( ctx -> thread_started )		163519	1					
ANR	163529	Condition	ctx -> thread_started	763:5:20199:20217	163519	0	True				
ANR	163530	PtrMemberAccess	ctx -> thread_started		163519	0					
ANR	163531	Identifier	ctx		163519	0					
ANR	163532	Identifier	thread_started		163519	1					
ANR	163533	CompoundStatement		5:26:56:56	163519	1					
ANR	163534	ExpressionStatement	"add_queue_item ( ctx , QITEM_QUIT , NULL , 0 , 0 )"	764:2:20224:20267	163519	0	True				
ANR	163535	CallExpression	"add_queue_item ( ctx , QITEM_QUIT , NULL , 0 , 0 )"		163519	0					
ANR	163536	Callee	add_queue_item		163519	0					
ANR	163537	Identifier	add_queue_item		163519	0					
ANR	163538	ArgumentList	ctx		163519	1					
ANR	163539	Argument	ctx		163519	0					
ANR	163540	Identifier	ctx		163519	0					
ANR	163541	Argument	QITEM_QUIT		163519	1					
ANR	163542	Identifier	QITEM_QUIT		163519	0					
ANR	163543	Argument	NULL		163519	2					
ANR	163544	Identifier	NULL		163519	0					
ANR	163545	Argument	0		163519	3					
ANR	163546	PrimaryExpression	0		163519	0					
ANR	163547	Argument	0		163519	4					
ANR	163548	PrimaryExpression	0		163519	0					
ANR	163549	ExpressionStatement	"pthread_join ( ctx -> signer_thread , NULL )"	765:2:20271:20309	163519	1	True				
ANR	163550	CallExpression	"pthread_join ( ctx -> signer_thread , NULL )"		163519	0					
ANR	163551	Callee	pthread_join		163519	0					
ANR	163552	Identifier	pthread_join		163519	0					
ANR	163553	ArgumentList	ctx -> signer_thread		163519	1					
ANR	163554	Argument	ctx -> signer_thread		163519	0					
ANR	163555	PtrMemberAccess	ctx -> signer_thread		163519	0					
ANR	163556	Identifier	ctx		163519	0					
ANR	163557	Identifier	signer_thread		163519	1					
ANR	163558	Argument	NULL		163519	1					
ANR	163559	Identifier	NULL		163519	0					
ANR	163560	ExpressionStatement	ProtectedQueue_free ( ctx -> signer_queue )	766:2:20313:20351	163519	2	True				
ANR	163561	CallExpression	ProtectedQueue_free ( ctx -> signer_queue )		163519	0					
ANR	163562	Callee	ProtectedQueue_free		163519	0					
ANR	163563	Identifier	ProtectedQueue_free		163519	0					
ANR	163564	ArgumentList	ctx -> signer_queue		163519	1					
ANR	163565	Argument	ctx -> signer_queue		163519	0					
ANR	163566	PtrMemberAccess	ctx -> signer_queue		163519	0					
ANR	163567	Identifier	ctx		163519	0					
ANR	163568	Identifier	signer_queue		163519	1					
ANR	163569	ExpressionStatement	pthread_mutex_destroy ( & ctx -> module_lock )	767:2:20355:20395	163519	3	True				
ANR	163570	CallExpression	pthread_mutex_destroy ( & ctx -> module_lock )		163519	0					
ANR	163571	Callee	pthread_mutex_destroy		163519	0					
ANR	163572	Identifier	pthread_mutex_destroy		163519	0					
ANR	163573	ArgumentList	& ctx -> module_lock		163519	1					
ANR	163574	Argument	& ctx -> module_lock		163519	0					
ANR	163575	UnaryOperationExpression	& ctx -> module_lock		163519	0					
ANR	163576	UnaryOperator	&		163519	0					
ANR	163577	PtrMemberAccess	ctx -> module_lock		163519	1					
ANR	163578	Identifier	ctx		163519	0					
ANR	163579	Identifier	module_lock		163519	1					
ANR	163580	ExpressionStatement	free ( ctx -> aggregatorUri )	770:1:20402:20426	163519	2	True				
ANR	163581	CallExpression	free ( ctx -> aggregatorUri )		163519	0					
ANR	163582	Callee	free		163519	0					
ANR	163583	Identifier	free		163519	0					
ANR	163584	ArgumentList	ctx -> aggregatorUri		163519	1					
ANR	163585	Argument	ctx -> aggregatorUri		163519	0					
ANR	163586	PtrMemberAccess	ctx -> aggregatorUri		163519	0					
ANR	163587	Identifier	ctx		163519	0					
ANR	163588	Identifier	aggregatorUri		163519	1					
ANR	163589	ExpressionStatement	free ( ctx -> aggregatorId )	771:1:20429:20452	163519	3	True				
ANR	163590	CallExpression	free ( ctx -> aggregatorId )		163519	0					
ANR	163591	Callee	free		163519	0					
ANR	163592	Identifier	free		163519	0					
ANR	163593	ArgumentList	ctx -> aggregatorId		163519	1					
ANR	163594	Argument	ctx -> aggregatorId		163519	0					
ANR	163595	PtrMemberAccess	ctx -> aggregatorId		163519	0					
ANR	163596	Identifier	ctx		163519	0					
ANR	163597	Identifier	aggregatorId		163519	1					
ANR	163598	ExpressionStatement	free ( ctx -> aggregatorKey )	772:1:20455:20479	163519	4	True				
ANR	163599	CallExpression	free ( ctx -> aggregatorKey )		163519	0					
ANR	163600	Callee	free		163519	0					
ANR	163601	Identifier	free		163519	0					
ANR	163602	ArgumentList	ctx -> aggregatorKey		163519	1					
ANR	163603	Argument	ctx -> aggregatorKey		163519	0					
ANR	163604	PtrMemberAccess	ctx -> aggregatorKey		163519	0					
ANR	163605	Identifier	ctx		163519	0					
ANR	163606	Identifier	aggregatorKey		163519	1					
ANR	163607	IfStatement	if ( ctx -> random_source )		163519	5					
ANR	163608	Condition	ctx -> random_source	774:5:20487:20504	163519	0	True				
ANR	163609	PtrMemberAccess	ctx -> random_source		163519	0					
ANR	163610	Identifier	ctx		163519	0					
ANR	163611	Identifier	random_source		163519	1					
ANR	163612	ExpressionStatement	free ( ctx -> random_source )	775:2:20509:20533	163519	1	True				
ANR	163613	CallExpression	free ( ctx -> random_source )		163519	0					
ANR	163614	Callee	free		163519	0					
ANR	163615	Identifier	free		163519	0					
ANR	163616	ArgumentList	ctx -> random_source		163519	1					
ANR	163617	Argument	ctx -> random_source		163519	0					
ANR	163618	PtrMemberAccess	ctx -> random_source		163519	0					
ANR	163619	Identifier	ctx		163519	0					
ANR	163620	Identifier	random_source		163519	1					
ANR	163621	ExpressionStatement	KSI_DataHasher_free ( ctx -> hasher )	777:1:20537:20569	163519	6	True				
ANR	163622	CallExpression	KSI_DataHasher_free ( ctx -> hasher )		163519	0					
ANR	163623	Callee	KSI_DataHasher_free		163519	0					
ANR	163624	Identifier	KSI_DataHasher_free		163519	0					
ANR	163625	ArgumentList	ctx -> hasher		163519	1					
ANR	163626	Argument	ctx -> hasher		163519	0					
ANR	163627	PtrMemberAccess	ctx -> hasher		163519	0					
ANR	163628	Identifier	ctx		163519	0					
ANR	163629	Identifier	hasher		163519	1					
ANR	163630	ExpressionStatement	KSI_CTX_free ( ctx -> ksi_ctx )	778:1:20572:20598	163519	7	True				
ANR	163631	CallExpression	KSI_CTX_free ( ctx -> ksi_ctx )		163519	0					
ANR	163632	Callee	KSI_CTX_free		163519	0					
ANR	163633	Identifier	KSI_CTX_free		163519	0					
ANR	163634	ArgumentList	ctx -> ksi_ctx		163519	1					
ANR	163635	Argument	ctx -> ksi_ctx		163519	0					
ANR	163636	PtrMemberAccess	ctx -> ksi_ctx		163519	0					
ANR	163637	Identifier	ctx		163519	0					
ANR	163638	Identifier	ksi_ctx		163519	1					
ANR	163639	ExpressionStatement	free ( ctx )	779:1:20601:20610	163519	8	True				
ANR	163640	CallExpression	free ( ctx )		163519	0					
ANR	163641	Callee	free		163519	0					
ANR	163642	Identifier	free		163519	0					
ANR	163643	ArgumentList	ctx		163519	1					
ANR	163644	Argument	ctx		163519	0					
ANR	163645	Identifier	ctx		163519	0					
ANR	163646	ReturnType	void		163519	1					
ANR	163647	Identifier	rsksiCtxDel		163519	2					
ANR	163648	ParameterList	rsksictx ctx		163519	3					
ANR	163649	Parameter	rsksictx ctx	759:12:20149:20160	163519	0	True				
ANR	163650	ParameterType	rsksictx		163519	0					
ANR	163651	Identifier	ctx		163519	1					
ANR	163652	CFGEntryNode	ENTRY		163519		True				
ANR	163653	CFGExitNode	EXIT		163519		True				
ANR	163654	Symbol	NULL		163519						
ANR	163655	Symbol	ctx -> signer_thread		163519						
ANR	163656	Symbol	ctx		163519						
ANR	163657	Symbol	ctx -> signer_queue		163519						
ANR	163658	Symbol	ctx -> aggregatorId		163519						
ANR	163659	Symbol	* ctx		163519						
ANR	163660	Symbol	ctx -> thread_started		163519						
ANR	163661	Symbol	ctx -> random_source		163519						
ANR	163662	Symbol	ctx -> aggregatorUri		163519						
ANR	163663	Symbol	& ctx -> module_lock		163519						
ANR	163664	Symbol	ctx -> aggregatorKey		163519						
ANR	163665	Symbol	ctx -> hasher		163519						
ANR	163666	Symbol	QITEM_QUIT		163519						
ANR	163667	Symbol	ctx -> ksi_ctx		163519						
ANR	163668	Function	sigblkInitKSI	783:0:20674:20950							
ANR	163669	FunctionDef	sigblkInitKSI (ksifile ksi)		163668	0					
ANR	163670	CompoundStatement		785:0:20706:20950	163668	0					
ANR	163671	IfStatement	if ( ksi == NULL )		163668	0					
ANR	163672	Condition	ksi == NULL	786:4:20712:20722	163668	0	True				
ANR	163673	EqualityExpression	ksi == NULL		163668	0		==			
ANR	163674	Identifier	ksi		163668	0					
ANR	163675	Identifier	NULL		163668	1					
ANR	163676	GotoStatement	goto done ;	786:17:20725:20734	163668	1	True				
ANR	163677	Identifier	done		163668	0					
ANR	163678	ExpressionStatement	seedIVKSI ( ksi )	787:1:20737:20751	163668	1	True				
ANR	163679	CallExpression	seedIVKSI ( ksi )		163668	0					
ANR	163680	Callee	seedIVKSI		163668	0					
ANR	163681	Identifier	seedIVKSI		163668	0					
ANR	163682	ArgumentList	ksi		163668	1					
ANR	163683	Argument	ksi		163668	0					
ANR	163684	Identifier	ksi		163668	0					
ANR	163685	ExpressionStatement	"memset ( ksi -> roots , 0 , sizeof ( ksi -> roots ) )"	788:1:20754:20796	163668	2	True				
ANR	163686	CallExpression	"memset ( ksi -> roots , 0 , sizeof ( ksi -> roots ) )"		163668	0					
ANR	163687	Callee	memset		163668	0					
ANR	163688	Identifier	memset		163668	0					
ANR	163689	ArgumentList	ksi -> roots		163668	1					
ANR	163690	Argument	ksi -> roots		163668	0					
ANR	163691	PtrMemberAccess	ksi -> roots		163668	0					
ANR	163692	Identifier	ksi		163668	0					
ANR	163693	Identifier	roots		163668	1					
ANR	163694	Argument	0		163668	1					
ANR	163695	PrimaryExpression	0		163668	0					
ANR	163696	Argument	sizeof ( ksi -> roots )		163668	2					
ANR	163697	SizeofExpression	sizeof ( ksi -> roots )		163668	0					
ANR	163698	Sizeof	sizeof		163668	0					
ANR	163699	PtrMemberAccess	ksi -> roots		163668	1					
ANR	163700	Identifier	ksi		163668	0					
ANR	163701	Identifier	roots		163668	1					
ANR	163702	ExpressionStatement	ksi -> nRoots = 0	789:1:20799:20814	163668	3	True				
ANR	163703	AssignmentExpression	ksi -> nRoots = 0		163668	0		=			
ANR	163704	PtrMemberAccess	ksi -> nRoots		163668	0					
ANR	163705	Identifier	ksi		163668	0					
ANR	163706	Identifier	nRoots		163668	1					
ANR	163707	PrimaryExpression	0		163668	1					
ANR	163708	ExpressionStatement	ksi -> nRecords = 0	790:1:20817:20834	163668	4	True				
ANR	163709	AssignmentExpression	ksi -> nRecords = 0		163668	0		=			
ANR	163710	PtrMemberAccess	ksi -> nRecords		163668	0					
ANR	163711	Identifier	ksi		163668	0					
ANR	163712	Identifier	nRecords		163668	1					
ANR	163713	PrimaryExpression	0		163668	1					
ANR	163714	ExpressionStatement	ksi -> bInBlk = 1	791:1:20837:20852	163668	5	True				
ANR	163715	AssignmentExpression	ksi -> bInBlk = 1		163668	0		=			
ANR	163716	PtrMemberAccess	ksi -> bInBlk		163668	0					
ANR	163717	Identifier	ksi		163668	0					
ANR	163718	Identifier	bInBlk		163668	1					
ANR	163719	PrimaryExpression	1		163668	1					
ANR	163720	ExpressionStatement	ksi -> blockStarted = time ( NULL )	792:1:20855:20885	163668	6	True				
ANR	163721	AssignmentExpression	ksi -> blockStarted = time ( NULL )		163668	0		=			
ANR	163722	PtrMemberAccess	ksi -> blockStarted		163668	0					
ANR	163723	Identifier	ksi		163668	0					
ANR	163724	Identifier	blockStarted		163668	1					
ANR	163725	CallExpression	time ( NULL )		163668	1					
ANR	163726	Callee	time		163668	0					
ANR	163727	Identifier	time		163668	0					
ANR	163728	ArgumentList	NULL		163668	1					
ANR	163729	Argument	NULL		163668	0					
ANR	163730	Identifier	NULL		163668	0					
ANR	163731	Label	done :	794:0:20935:20939	163668	7	True				
ANR	163732	Identifier	done		163668	0					
ANR	163733	ReturnStatement	return ;	795:1:20942:20948	163668	8	True				
ANR	163734	ReturnType	void		163668	1					
ANR	163735	Identifier	sigblkInitKSI		163668	2					
ANR	163736	ParameterList	ksifile ksi		163668	3					
ANR	163737	Parameter	ksifile ksi	784:14:20693:20703	163668	0	True				
ANR	163738	ParameterType	ksifile		163668	0					
ANR	163739	Identifier	ksi		163668	1					
ANR	163740	CFGEntryNode	ENTRY		163668		True				
ANR	163741	CFGExitNode	EXIT		163668		True				
ANR	163742	Symbol	ksi		163668						
ANR	163743	Symbol	ksi -> nRecords		163668						
ANR	163744	Symbol	NULL		163668						
ANR	163745	Symbol	ksi -> nRoots		163668						
ANR	163746	Symbol	ksi -> roots		163668						
ANR	163747	Symbol	ksi -> blockStarted		163668						
ANR	163748	Symbol	* ksi		163668						
ANR	163749	Symbol	time		163668						
ANR	163750	Symbol	ksi -> bInBlk		163668						
ANR	163751	Function	sigblkCreateMask	798:0:20953:21426							
ANR	163752	FunctionDef	"sigblkCreateMask (ksifile ksi , KSI_DataHash * * m)"		163751	0					
ANR	163753	CompoundStatement		799:48:21005:21426	163751	0					
ANR	163754	IdentifierDeclStatement	int r = 0 ;	800:1:21008:21017	163751	0	True				
ANR	163755	IdentifierDecl	r = 0		163751	0					
ANR	163756	IdentifierDeclType	int		163751	0					
ANR	163757	Identifier	r		163751	1					
ANR	163758	AssignmentExpression	r = 0		163751	2		=			
ANR	163759	Identifier	r		163751	0					
ANR	163760	PrimaryExpression	0		163751	1					
ANR	163761	ExpressionStatement	CHKr ( KSI_DataHasher_reset ( ksi -> ctx -> hasher ) )	802:1:21021:21065	163751	1	True				
ANR	163762	CallExpression	CHKr ( KSI_DataHasher_reset ( ksi -> ctx -> hasher ) )		163751	0					
ANR	163763	Callee	CHKr		163751	0					
ANR	163764	Identifier	CHKr		163751	0					
ANR	163765	ArgumentList	KSI_DataHasher_reset ( ksi -> ctx -> hasher )		163751	1					
ANR	163766	Argument	KSI_DataHasher_reset ( ksi -> ctx -> hasher )		163751	0					
ANR	163767	CallExpression	KSI_DataHasher_reset ( ksi -> ctx -> hasher )		163751	0					
ANR	163768	Callee	KSI_DataHasher_reset		163751	0					
ANR	163769	Identifier	KSI_DataHasher_reset		163751	0					
ANR	163770	ArgumentList	ksi -> ctx -> hasher		163751	1					
ANR	163771	Argument	ksi -> ctx -> hasher		163751	0					
ANR	163772	PtrMemberAccess	ksi -> ctx -> hasher		163751	0					
ANR	163773	PtrMemberAccess	ksi -> ctx		163751	0					
ANR	163774	Identifier	ksi		163751	0					
ANR	163775	Identifier	ctx		163751	1					
ANR	163776	Identifier	hasher		163751	1					
ANR	163777	ExpressionStatement	"CHKr ( KSI_DataHasher_add ( ksi -> ctx -> hasher , ksi -> lastLeaf , KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1 ) )"	803:1:21068:21166	163751	2	True				
ANR	163778	CallExpression	"CHKr ( KSI_DataHasher_add ( ksi -> ctx -> hasher , ksi -> lastLeaf , KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1 ) )"		163751	0					
ANR	163779	Callee	CHKr		163751	0					
ANR	163780	Identifier	CHKr		163751	0					
ANR	163781	ArgumentList	"KSI_DataHasher_add ( ksi -> ctx -> hasher , ksi -> lastLeaf , KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1 )"		163751	1					
ANR	163782	Argument	"KSI_DataHasher_add ( ksi -> ctx -> hasher , ksi -> lastLeaf , KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1 )"		163751	0					
ANR	163783	CallExpression	"KSI_DataHasher_add ( ksi -> ctx -> hasher , ksi -> lastLeaf , KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1 )"		163751	0					
ANR	163784	Callee	KSI_DataHasher_add		163751	0					
ANR	163785	Identifier	KSI_DataHasher_add		163751	0					
ANR	163786	ArgumentList	ksi -> ctx -> hasher		163751	1					
ANR	163787	Argument	ksi -> ctx -> hasher		163751	0					
ANR	163788	PtrMemberAccess	ksi -> ctx -> hasher		163751	0					
ANR	163789	PtrMemberAccess	ksi -> ctx		163751	0					
ANR	163790	Identifier	ksi		163751	0					
ANR	163791	Identifier	ctx		163751	1					
ANR	163792	Identifier	hasher		163751	1					
ANR	163793	Argument	ksi -> lastLeaf		163751	1					
ANR	163794	PtrMemberAccess	ksi -> lastLeaf		163751	0					
ANR	163795	Identifier	ksi		163751	0					
ANR	163796	Identifier	lastLeaf		163751	1					
ANR	163797	Argument	KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1		163751	2					
ANR	163798	AdditiveExpression	KSI_getHashLength ( ksi -> lastLeaf [ 0 ] ) + 1		163751	0		+			
ANR	163799	CallExpression	KSI_getHashLength ( ksi -> lastLeaf [ 0 ] )		163751	0					
ANR	163800	Callee	KSI_getHashLength		163751	0					
ANR	163801	Identifier	KSI_getHashLength		163751	0					
ANR	163802	ArgumentList	ksi -> lastLeaf [ 0 ]		163751	1					
ANR	163803	Argument	ksi -> lastLeaf [ 0 ]		163751	0					
ANR	163804	ArrayIndexing	ksi -> lastLeaf [ 0 ]		163751	0					
ANR	163805	PtrMemberAccess	ksi -> lastLeaf		163751	0					
ANR	163806	Identifier	ksi		163751	0					
ANR	163807	Identifier	lastLeaf		163751	1					
ANR	163808	PrimaryExpression	0		163751	1					
ANR	163809	PrimaryExpression	1		163751	1					
ANR	163810	ExpressionStatement	"CHKr ( KSI_DataHasher_add ( ksi -> ctx -> hasher , ksi -> IV , KSI_getHashLength ( ksi -> hashAlg ) ) )"	804:1:21169:21253	163751	3	True				
ANR	163811	CallExpression	"CHKr ( KSI_DataHasher_add ( ksi -> ctx -> hasher , ksi -> IV , KSI_getHashLength ( ksi -> hashAlg ) ) )"		163751	0					
ANR	163812	Callee	CHKr		163751	0					
ANR	163813	Identifier	CHKr		163751	0					
ANR	163814	ArgumentList	"KSI_DataHasher_add ( ksi -> ctx -> hasher , ksi -> IV , KSI_getHashLength ( ksi -> hashAlg ) )"		163751	1					
ANR	163815	Argument	"KSI_DataHasher_add ( ksi -> ctx -> hasher , ksi -> IV , KSI_getHashLength ( ksi -> hashAlg ) )"		163751	0					
ANR	163816	CallExpression	"KSI_DataHasher_add ( ksi -> ctx -> hasher , ksi -> IV , KSI_getHashLength ( ksi -> hashAlg ) )"		163751	0					
ANR	163817	Callee	KSI_DataHasher_add		163751	0					
ANR	163818	Identifier	KSI_DataHasher_add		163751	0					
ANR	163819	ArgumentList	ksi -> ctx -> hasher		163751	1					
ANR	163820	Argument	ksi -> ctx -> hasher		163751	0					
ANR	163821	PtrMemberAccess	ksi -> ctx -> hasher		163751	0					
ANR	163822	PtrMemberAccess	ksi -> ctx		163751	0					
ANR	163823	Identifier	ksi		163751	0					
ANR	163824	Identifier	ctx		163751	1					
ANR	163825	Identifier	hasher		163751	1					
ANR	163826	Argument	ksi -> IV		163751	1					
ANR	163827	PtrMemberAccess	ksi -> IV		163751	0					
ANR	163828	Identifier	ksi		163751	0					
ANR	163829	Identifier	IV		163751	1					
ANR	163830	Argument	KSI_getHashLength ( ksi -> hashAlg )		163751	2					
ANR	163831	CallExpression	KSI_getHashLength ( ksi -> hashAlg )		163751	0					
ANR	163832	Callee	KSI_getHashLength		163751	0					
ANR	163833	Identifier	KSI_getHashLength		163751	0					
ANR	163834	ArgumentList	ksi -> hashAlg		163751	1					
ANR	163835	Argument	ksi -> hashAlg		163751	0					
ANR	163836	PtrMemberAccess	ksi -> hashAlg		163751	0					
ANR	163837	Identifier	ksi		163751	0					
ANR	163838	Identifier	hashAlg		163751	1					
ANR	163839	ExpressionStatement	"CHKr ( KSI_DataHasher_close ( ksi -> ctx -> hasher , m ) )"	805:1:21256:21303	163751	4	True				
ANR	163840	CallExpression	"CHKr ( KSI_DataHasher_close ( ksi -> ctx -> hasher , m ) )"		163751	0					
ANR	163841	Callee	CHKr		163751	0					
ANR	163842	Identifier	CHKr		163751	0					
ANR	163843	ArgumentList	"KSI_DataHasher_close ( ksi -> ctx -> hasher , m )"		163751	1					
ANR	163844	Argument	"KSI_DataHasher_close ( ksi -> ctx -> hasher , m )"		163751	0					
ANR	163845	CallExpression	"KSI_DataHasher_close ( ksi -> ctx -> hasher , m )"		163751	0					
ANR	163846	Callee	KSI_DataHasher_close		163751	0					
ANR	163847	Identifier	KSI_DataHasher_close		163751	0					
ANR	163848	ArgumentList	ksi -> ctx -> hasher		163751	1					
ANR	163849	Argument	ksi -> ctx -> hasher		163751	0					
ANR	163850	PtrMemberAccess	ksi -> ctx -> hasher		163751	0					
ANR	163851	PtrMemberAccess	ksi -> ctx		163751	0					
ANR	163852	Identifier	ksi		163751	0					
ANR	163853	Identifier	ctx		163751	1					
ANR	163854	Identifier	hasher		163751	1					
ANR	163855	Argument	m		163751	1					
ANR	163856	Identifier	m		163751	0					
ANR	163857	Label	done :	807:0:21306:21310	163751	5	True				
ANR	163858	Identifier	done		163751	0					
ANR	163859	IfStatement	if ( r != KSI_OK )		163751	6					
ANR	163860	Condition	r != KSI_OK	808:5:21317:21327	163751	0	True				
ANR	163861	EqualityExpression	r != KSI_OK		163751	0		!=			
ANR	163862	Identifier	r		163751	0					
ANR	163863	Identifier	KSI_OK		163751	1					
ANR	163864	CompoundStatement		10:18:324:324	163751	1					
ANR	163865	ExpressionStatement	"reportKSIAPIErr ( ksi -> ctx , ksi , ""KSI_DataHasher"" , r )"	809:2:21334:21385	163751	0	True				
ANR	163866	CallExpression	"reportKSIAPIErr ( ksi -> ctx , ksi , ""KSI_DataHasher"" , r )"		163751	0					
ANR	163867	Callee	reportKSIAPIErr		163751	0					
ANR	163868	Identifier	reportKSIAPIErr		163751	0					
ANR	163869	ArgumentList	ksi -> ctx		163751	1					
ANR	163870	Argument	ksi -> ctx		163751	0					
ANR	163871	PtrMemberAccess	ksi -> ctx		163751	0					
ANR	163872	Identifier	ksi		163751	0					
ANR	163873	Identifier	ctx		163751	1					
ANR	163874	Argument	ksi		163751	1					
ANR	163875	Identifier	ksi		163751	0					
ANR	163876	Argument	"""KSI_DataHasher"""		163751	2					
ANR	163877	PrimaryExpression	"""KSI_DataHasher"""		163751	0					
ANR	163878	Argument	r		163751	3					
ANR	163879	Identifier	r		163751	0					
ANR	163880	ExpressionStatement	r = RSGTE_HASH_CREATE	810:2:21389:21410	163751	1	True				
ANR	163881	AssignmentExpression	r = RSGTE_HASH_CREATE		163751	0		=			
ANR	163882	Identifier	r		163751	0					
ANR	163883	Identifier	RSGTE_HASH_CREATE		163751	1					
ANR	163884	ReturnStatement	return r ;	812:1:21416:21424	163751	7	True				
ANR	163885	Identifier	r		163751	0					
ANR	163886	ReturnType	int		163751	1					
ANR	163887	Identifier	sigblkCreateMask		163751	2					
ANR	163888	ParameterList	"ksifile ksi , KSI_DataHash * * m"		163751	3					
ANR	163889	Parameter	ksifile ksi	799:17:20974:20984	163751	0	True				
ANR	163890	ParameterType	ksifile		163751	0					
ANR	163891	Identifier	ksi		163751	1					
ANR	163892	Parameter	KSI_DataHash * * m	799:30:20987:21002	163751	1	True				
ANR	163893	ParameterType	KSI_DataHash * *		163751	0					
ANR	163894	Identifier	m		163751	1					
ANR	163895	CFGEntryNode	ENTRY		163751		True				
ANR	163896	CFGExitNode	EXIT		163751		True				
ANR	163897	Symbol	ksi		163751						
ANR	163898	Symbol	ksi -> ctx		163751						
ANR	163899	Symbol	* ksi -> lastLeaf		163751						
ANR	163900	Symbol	KSI_DataHasher_close		163751						
ANR	163901	Symbol	ksi -> ctx -> hasher		163751						
ANR	163902	Symbol	ksi -> hashAlg		163751						
ANR	163903	Symbol	* ksi		163751						
ANR	163904	Symbol	m		163751						
ANR	163905	Symbol	r		163751						
ANR	163906	Symbol	RSGTE_HASH_CREATE		163751						
ANR	163907	Symbol	* * ksi		163751						
ANR	163908	Symbol	KSI_OK		163751						
ANR	163909	Symbol	ksi -> lastLeaf		163751						
ANR	163910	Symbol	KSI_DataHasher_reset		163751						
ANR	163911	Symbol	KSI_getHashLength		163751						
ANR	163912	Symbol	KSI_DataHasher_add		163751						
ANR	163913	Symbol	ksi -> IV		163751						
ANR	163914	Symbol	* ksi -> ctx		163751						
ANR	163915	Function	sigblkCreateHash	814:0:21428:21809							
ANR	163916	FunctionDef	"sigblkCreateHash (ksifile ksi , KSI_DataHash * * out , const uchar * rec , const size_t len)"		163915	0					
ANR	163917	CompoundStatement		815:86:21518:21809	163915	0					
ANR	163918	IdentifierDeclStatement	int r = 0 ;	816:1:21521:21530	163915	0	True				
ANR	163919	IdentifierDecl	r = 0		163915	0					
ANR	163920	IdentifierDeclType	int		163915	0					
ANR	163921	Identifier	r		163915	1					
ANR	163922	AssignmentExpression	r = 0		163915	2		=			
ANR	163923	Identifier	r		163915	0					
ANR	163924	PrimaryExpression	0		163915	1					
ANR	163925	ExpressionStatement	CHKr ( KSI_DataHasher_reset ( ksi -> ctx -> hasher ) )	818:1:21534:21578	163915	1	True				
ANR	163926	CallExpression	CHKr ( KSI_DataHasher_reset ( ksi -> ctx -> hasher ) )		163915	0					
ANR	163927	Callee	CHKr		163915	0					
ANR	163928	Identifier	CHKr		163915	0					
ANR	163929	ArgumentList	KSI_DataHasher_reset ( ksi -> ctx -> hasher )		163915	1					
ANR	163930	Argument	KSI_DataHasher_reset ( ksi -> ctx -> hasher )		163915	0					
ANR	163931	CallExpression	KSI_DataHasher_reset ( ksi -> ctx -> hasher )		163915	0					
ANR	163932	Callee	KSI_DataHasher_reset		163915	0					
ANR	163933	Identifier	KSI_DataHasher_reset		163915	0					
ANR	163934	ArgumentList	ksi -> ctx -> hasher		163915	1					
ANR	163935	Argument	ksi -> ctx -> hasher		163915	0					
ANR	163936	PtrMemberAccess	ksi -> ctx -> hasher		163915	0					
ANR	163937	PtrMemberAccess	ksi -> ctx		163915	0					
ANR	163938	Identifier	ksi		163915	0					
ANR	163939	Identifier	ctx		163915	1					
ANR	163940	Identifier	hasher		163915	1					
ANR	163941	ExpressionStatement	"CHKr ( KSI_DataHasher_add ( ksi -> ctx -> hasher , rec , len ) )"	819:1:21581:21633	163915	2	True				
ANR	163942	CallExpression	"CHKr ( KSI_DataHasher_add ( ksi -> ctx -> hasher , rec , len ) )"		163915	0					
ANR	163943	Callee	CHKr		163915	0					
ANR	163944	Identifier	CHKr		163915	0					
ANR	163945	ArgumentList	"KSI_DataHasher_add ( ksi -> ctx -> hasher , rec , len )"		163915	1					
ANR	163946	Argument	"KSI_DataHasher_add ( ksi -> ctx -> hasher , rec , len )"		163915	0					
ANR	163947	CallExpression	"KSI_DataHasher_add ( ksi -> ctx -> hasher , rec , len )"		163915	0					
ANR	163948	Callee	KSI_DataHasher_add		163915	0					
ANR	163949	Identifier	KSI_DataHasher_add		163915	0					
ANR	163950	ArgumentList	ksi -> ctx -> hasher		163915	1					
ANR	163951	Argument	ksi -> ctx -> hasher		163915	0					
ANR	163952	PtrMemberAccess	ksi -> ctx -> hasher		163915	0					
ANR	163953	PtrMemberAccess	ksi -> ctx		163915	0					
ANR	163954	Identifier	ksi		163915	0					
ANR	163955	Identifier	ctx		163915	1					
ANR	163956	Identifier	hasher		163915	1					
ANR	163957	Argument	rec		163915	1					
ANR	163958	Identifier	rec		163915	0					
ANR	163959	Argument	len		163915	2					
ANR	163960	Identifier	len		163915	0					
ANR	163961	ExpressionStatement	"CHKr ( KSI_DataHasher_close ( ksi -> ctx -> hasher , out ) )"	820:1:21636:21685	163915	3	True				
ANR	163962	CallExpression	"CHKr ( KSI_DataHasher_close ( ksi -> ctx -> hasher , out ) )"		163915	0					
ANR	163963	Callee	CHKr		163915	0					
ANR	163964	Identifier	CHKr		163915	0					
ANR	163965	ArgumentList	"KSI_DataHasher_close ( ksi -> ctx -> hasher , out )"		163915	1					
ANR	163966	Argument	"KSI_DataHasher_close ( ksi -> ctx -> hasher , out )"		163915	0					
ANR	163967	CallExpression	"KSI_DataHasher_close ( ksi -> ctx -> hasher , out )"		163915	0					
ANR	163968	Callee	KSI_DataHasher_close		163915	0					
ANR	163969	Identifier	KSI_DataHasher_close		163915	0					
ANR	163970	ArgumentList	ksi -> ctx -> hasher		163915	1					
ANR	163971	Argument	ksi -> ctx -> hasher		163915	0					
ANR	163972	PtrMemberAccess	ksi -> ctx -> hasher		163915	0					
ANR	163973	PtrMemberAccess	ksi -> ctx		163915	0					
ANR	163974	Identifier	ksi		163915	0					
ANR	163975	Identifier	ctx		163915	1					
ANR	163976	Identifier	hasher		163915	1					
ANR	163977	Argument	out		163915	1					
ANR	163978	Identifier	out		163915	0					
ANR	163979	Label	done :	822:0:21688:21692	163915	4	True				
ANR	163980	Identifier	done		163915	0					
ANR	163981	IfStatement	if ( r != KSI_OK )		163915	5					
ANR	163982	Condition	r != KSI_OK	823:5:21699:21709	163915	0	True				
ANR	163983	EqualityExpression	r != KSI_OK		163915	0		!=			
ANR	163984	Identifier	r		163915	0					
ANR	163985	Identifier	KSI_OK		163915	1					
ANR	163986	CompoundStatement		9:18:193:193	163915	1					
ANR	163987	ExpressionStatement	"reportKSIAPIErr ( ksi -> ctx , ksi , ""KSI_DataHasher"" , r )"	824:2:21716:21767	163915	0	True				
ANR	163988	CallExpression	"reportKSIAPIErr ( ksi -> ctx , ksi , ""KSI_DataHasher"" , r )"		163915	0					
ANR	163989	Callee	reportKSIAPIErr		163915	0					
ANR	163990	Identifier	reportKSIAPIErr		163915	0					
ANR	163991	ArgumentList	ksi -> ctx		163915	1					
ANR	163992	Argument	ksi -> ctx		163915	0					
ANR	163993	PtrMemberAccess	ksi -> ctx		163915	0					
ANR	163994	Identifier	ksi		163915	0					
ANR	163995	Identifier	ctx		163915	1					
ANR	163996	Argument	ksi		163915	1					
ANR	163997	Identifier	ksi		163915	0					
ANR	163998	Argument	"""KSI_DataHasher"""		163915	2					
ANR	163999	PrimaryExpression	"""KSI_DataHasher"""		163915	0					
ANR	164000	Argument	r		163915	3					
ANR	164001	Identifier	r		163915	0					
ANR	164002	ExpressionStatement	r = RSGTE_HASH_CREATE	825:2:21771:21792	163915	1	True				
ANR	164003	AssignmentExpression	r = RSGTE_HASH_CREATE		163915	0		=			
ANR	164004	Identifier	r		163915	0					
ANR	164005	Identifier	RSGTE_HASH_CREATE		163915	1					
ANR	164006	ReturnStatement	return r ;	828:1:21799:21807	163915	6	True				
ANR	164007	Identifier	r		163915	0					
ANR	164008	ReturnType	int		163915	1					
ANR	164009	Identifier	sigblkCreateHash		163915	2					
ANR	164010	ParameterList	"ksifile ksi , KSI_DataHash * * out , const uchar * rec , const size_t len"		163915	3					
ANR	164011	Parameter	ksifile ksi	815:17:21449:21459	163915	0	True				
ANR	164012	ParameterType	ksifile		163915	0					
ANR	164013	Identifier	ksi		163915	1					
ANR	164014	Parameter	KSI_DataHash * * out	815:30:21462:21479	163915	1	True				
ANR	164015	ParameterType	KSI_DataHash * *		163915	0					
ANR	164016	Identifier	out		163915	1					
ANR	164017	Parameter	const uchar * rec	815:50:21482:21497	163915	2	True				
ANR	164018	ParameterType	const uchar *		163915	0					
ANR	164019	Identifier	rec		163915	1					
ANR	164020	Parameter	const size_t len	815:68:21500:21515	163915	3	True				
ANR	164021	ParameterType	const size_t		163915	0					
ANR	164022	Identifier	len		163915	1					
ANR	164023	CFGEntryNode	ENTRY		163915		True				
ANR	164024	CFGExitNode	EXIT		163915		True				
ANR	164025	Symbol	ksi		163915						
ANR	164026	Symbol	ksi -> ctx		163915						
ANR	164027	Symbol	KSI_DataHasher_close		163915						
ANR	164028	Symbol	ksi -> ctx -> hasher		163915						
ANR	164029	Symbol	* ksi		163915						
ANR	164030	Symbol	out		163915						
ANR	164031	Symbol	rec		163915						
ANR	164032	Symbol	r		163915						
ANR	164033	Symbol	RSGTE_HASH_CREATE		163915						
ANR	164034	Symbol	len		163915						
ANR	164035	Symbol	* * ksi		163915						
ANR	164036	Symbol	KSI_OK		163915						
ANR	164037	Symbol	KSI_DataHasher_reset		163915						
ANR	164038	Symbol	KSI_DataHasher_add		163915						
ANR	164039	Symbol	* ksi -> ctx		163915						
ANR	164040	Function	sigblkHashTwoNodes	832:0:21813:22349							
ANR	164041	FunctionDef	"sigblkHashTwoNodes (ksifile ksi , KSI_DataHash * * out , KSI_DataHash * left , KSI_DataHash * right , uint8_t level)"		164040	0					
ANR	164042	CompoundStatement		834:25:21935:22349	164040	0					
ANR	164043	IdentifierDeclStatement	int r = 0 ;	835:1:21938:21947	164040	0	True				
ANR	164044	IdentifierDecl	r = 0		164040	0					
ANR	164045	IdentifierDeclType	int		164040	0					
ANR	164046	Identifier	r		164040	1					
ANR	164047	AssignmentExpression	r = 0		164040	2		=			
ANR	164048	Identifier	r		164040	0					
ANR	164049	PrimaryExpression	0		164040	1					
ANR	164050	ExpressionStatement	CHKr ( KSI_DataHasher_reset ( ksi -> ctx -> hasher ) )	837:1:21951:21995	164040	1	True				
ANR	164051	CallExpression	CHKr ( KSI_DataHasher_reset ( ksi -> ctx -> hasher ) )		164040	0					
ANR	164052	Callee	CHKr		164040	0					
ANR	164053	Identifier	CHKr		164040	0					
ANR	164054	ArgumentList	KSI_DataHasher_reset ( ksi -> ctx -> hasher )		164040	1					
ANR	164055	Argument	KSI_DataHasher_reset ( ksi -> ctx -> hasher )		164040	0					
ANR	164056	CallExpression	KSI_DataHasher_reset ( ksi -> ctx -> hasher )		164040	0					
ANR	164057	Callee	KSI_DataHasher_reset		164040	0					
ANR	164058	Identifier	KSI_DataHasher_reset		164040	0					
ANR	164059	ArgumentList	ksi -> ctx -> hasher		164040	1					
ANR	164060	Argument	ksi -> ctx -> hasher		164040	0					
ANR	164061	PtrMemberAccess	ksi -> ctx -> hasher		164040	0					
ANR	164062	PtrMemberAccess	ksi -> ctx		164040	0					
ANR	164063	Identifier	ksi		164040	0					
ANR	164064	Identifier	ctx		164040	1					
ANR	164065	Identifier	hasher		164040	1					
ANR	164066	ExpressionStatement	"CHKr ( KSI_DataHasher_addImprint ( ksi -> ctx -> hasher , left ) )"	838:1:21998:22053	164040	2	True				
ANR	164067	CallExpression	"CHKr ( KSI_DataHasher_addImprint ( ksi -> ctx -> hasher , left ) )"		164040	0					
ANR	164068	Callee	CHKr		164040	0					
ANR	164069	Identifier	CHKr		164040	0					
ANR	164070	ArgumentList	"KSI_DataHasher_addImprint ( ksi -> ctx -> hasher , left )"		164040	1					
ANR	164071	Argument	"KSI_DataHasher_addImprint ( ksi -> ctx -> hasher , left )"		164040	0					
ANR	164072	CallExpression	"KSI_DataHasher_addImprint ( ksi -> ctx -> hasher , left )"		164040	0					
ANR	164073	Callee	KSI_DataHasher_addImprint		164040	0					
ANR	164074	Identifier	KSI_DataHasher_addImprint		164040	0					
ANR	164075	ArgumentList	ksi -> ctx -> hasher		164040	1					
ANR	164076	Argument	ksi -> ctx -> hasher		164040	0					
ANR	164077	PtrMemberAccess	ksi -> ctx -> hasher		164040	0					
ANR	164078	PtrMemberAccess	ksi -> ctx		164040	0					
ANR	164079	Identifier	ksi		164040	0					
ANR	164080	Identifier	ctx		164040	1					
ANR	164081	Identifier	hasher		164040	1					
ANR	164082	Argument	left		164040	1					
ANR	164083	Identifier	left		164040	0					
ANR	164084	ExpressionStatement	"CHKr ( KSI_DataHasher_addImprint ( ksi -> ctx -> hasher , right ) )"	839:1:22056:22112	164040	3	True				
ANR	164085	CallExpression	"CHKr ( KSI_DataHasher_addImprint ( ksi -> ctx -> hasher , right ) )"		164040	0					
ANR	164086	Callee	CHKr		164040	0					
ANR	164087	Identifier	CHKr		164040	0					
ANR	164088	ArgumentList	"KSI_DataHasher_addImprint ( ksi -> ctx -> hasher , right )"		164040	1					
ANR	164089	Argument	"KSI_DataHasher_addImprint ( ksi -> ctx -> hasher , right )"		164040	0					
ANR	164090	CallExpression	"KSI_DataHasher_addImprint ( ksi -> ctx -> hasher , right )"		164040	0					
ANR	164091	Callee	KSI_DataHasher_addImprint		164040	0					
ANR	164092	Identifier	KSI_DataHasher_addImprint		164040	0					
ANR	164093	ArgumentList	ksi -> ctx -> hasher		164040	1					
ANR	164094	Argument	ksi -> ctx -> hasher		164040	0					
ANR	164095	PtrMemberAccess	ksi -> ctx -> hasher		164040	0					
ANR	164096	PtrMemberAccess	ksi -> ctx		164040	0					
ANR	164097	Identifier	ksi		164040	0					
ANR	164098	Identifier	ctx		164040	1					
ANR	164099	Identifier	hasher		164040	1					
ANR	164100	Argument	right		164040	1					
ANR	164101	Identifier	right		164040	0					
ANR	164102	ExpressionStatement	"CHKr ( KSI_DataHasher_add ( ksi -> ctx -> hasher , & level , 1 ) )"	840:1:22115:22168	164040	4	True				
ANR	164103	CallExpression	"CHKr ( KSI_DataHasher_add ( ksi -> ctx -> hasher , & level , 1 ) )"		164040	0					
ANR	164104	Callee	CHKr		164040	0					
ANR	164105	Identifier	CHKr		164040	0					
ANR	164106	ArgumentList	"KSI_DataHasher_add ( ksi -> ctx -> hasher , & level , 1 )"		164040	1					
ANR	164107	Argument	"KSI_DataHasher_add ( ksi -> ctx -> hasher , & level , 1 )"		164040	0					
ANR	164108	CallExpression	"KSI_DataHasher_add ( ksi -> ctx -> hasher , & level , 1 )"		164040	0					
ANR	164109	Callee	KSI_DataHasher_add		164040	0					
ANR	164110	Identifier	KSI_DataHasher_add		164040	0					
ANR	164111	ArgumentList	ksi -> ctx -> hasher		164040	1					
ANR	164112	Argument	ksi -> ctx -> hasher		164040	0					
ANR	164113	PtrMemberAccess	ksi -> ctx -> hasher		164040	0					
ANR	164114	PtrMemberAccess	ksi -> ctx		164040	0					
ANR	164115	Identifier	ksi		164040	0					
ANR	164116	Identifier	ctx		164040	1					
ANR	164117	Identifier	hasher		164040	1					
ANR	164118	Argument	& level		164040	1					
ANR	164119	UnaryOperationExpression	& level		164040	0					
ANR	164120	UnaryOperator	&		164040	0					
ANR	164121	Identifier	level		164040	1					
ANR	164122	Argument	1		164040	2					
ANR	164123	PrimaryExpression	1		164040	0					
ANR	164124	ExpressionStatement	"CHKr ( KSI_DataHasher_close ( ksi -> ctx -> hasher , out ) )"	841:1:22171:22220	164040	5	True				
ANR	164125	CallExpression	"CHKr ( KSI_DataHasher_close ( ksi -> ctx -> hasher , out ) )"		164040	0					
ANR	164126	Callee	CHKr		164040	0					
ANR	164127	Identifier	CHKr		164040	0					
ANR	164128	ArgumentList	"KSI_DataHasher_close ( ksi -> ctx -> hasher , out )"		164040	1					
ANR	164129	Argument	"KSI_DataHasher_close ( ksi -> ctx -> hasher , out )"		164040	0					
ANR	164130	CallExpression	"KSI_DataHasher_close ( ksi -> ctx -> hasher , out )"		164040	0					
ANR	164131	Callee	KSI_DataHasher_close		164040	0					
ANR	164132	Identifier	KSI_DataHasher_close		164040	0					
ANR	164133	ArgumentList	ksi -> ctx -> hasher		164040	1					
ANR	164134	Argument	ksi -> ctx -> hasher		164040	0					
ANR	164135	PtrMemberAccess	ksi -> ctx -> hasher		164040	0					
ANR	164136	PtrMemberAccess	ksi -> ctx		164040	0					
ANR	164137	Identifier	ksi		164040	0					
ANR	164138	Identifier	ctx		164040	1					
ANR	164139	Identifier	hasher		164040	1					
ANR	164140	Argument	out		164040	1					
ANR	164141	Identifier	out		164040	0					
ANR	164142	Label	done :	843:0:22223:22227	164040	6	True				
ANR	164143	Identifier	done		164040	0					
ANR	164144	IfStatement	if ( r != KSI_OK )		164040	7					
ANR	164145	Condition	r != KSI_OK	844:5:22234:22244	164040	0	True				
ANR	164146	EqualityExpression	r != KSI_OK		164040	0		!=			
ANR	164147	Identifier	r		164040	0					
ANR	164148	Identifier	KSI_OK		164040	1					
ANR	164149	CompoundStatement		11:18:311:311	164040	1					
ANR	164150	ExpressionStatement	"reportKSIAPIErr ( ksi -> ctx , ksi , ""KSI_DataHash_create"" , r )"	845:2:22251:22307	164040	0	True				
ANR	164151	CallExpression	"reportKSIAPIErr ( ksi -> ctx , ksi , ""KSI_DataHash_create"" , r )"		164040	0					
ANR	164152	Callee	reportKSIAPIErr		164040	0					
ANR	164153	Identifier	reportKSIAPIErr		164040	0					
ANR	164154	ArgumentList	ksi -> ctx		164040	1					
ANR	164155	Argument	ksi -> ctx		164040	0					
ANR	164156	PtrMemberAccess	ksi -> ctx		164040	0					
ANR	164157	Identifier	ksi		164040	0					
ANR	164158	Identifier	ctx		164040	1					
ANR	164159	Argument	ksi		164040	1					
ANR	164160	Identifier	ksi		164040	0					
ANR	164161	Argument	"""KSI_DataHash_create"""		164040	2					
ANR	164162	PrimaryExpression	"""KSI_DataHash_create"""		164040	0					
ANR	164163	Argument	r		164040	3					
ANR	164164	Identifier	r		164040	0					
ANR	164165	ExpressionStatement	r = RSGTE_HASH_CREATE	846:2:22311:22332	164040	1	True				
ANR	164166	AssignmentExpression	r = RSGTE_HASH_CREATE		164040	0		=			
ANR	164167	Identifier	r		164040	0					
ANR	164168	Identifier	RSGTE_HASH_CREATE		164040	1					
ANR	164169	ReturnStatement	return r ;	849:1:22339:22347	164040	8	True				
ANR	164170	Identifier	r		164040	0					
ANR	164171	ReturnType	int		164040	1					
ANR	164172	Identifier	sigblkHashTwoNodes		164040	2					
ANR	164173	ParameterList	"ksifile ksi , KSI_DataHash * * out , KSI_DataHash * left , KSI_DataHash * right , uint8_t level"		164040	3					
ANR	164174	Parameter	ksifile ksi	833:19:21836:21846	164040	0	True				
ANR	164175	ParameterType	ksifile		164040	0					
ANR	164176	Identifier	ksi		164040	1					
ANR	164177	Parameter	KSI_DataHash * * out	833:32:21849:21866	164040	1	True				
ANR	164178	ParameterType	KSI_DataHash * *		164040	0					
ANR	164179	Identifier	out		164040	1					
ANR	164180	Parameter	KSI_DataHash * left	833:52:21869:21886	164040	2	True				
ANR	164181	ParameterType	KSI_DataHash *		164040	0					
ANR	164182	Identifier	left		164040	1					
ANR	164183	Parameter	KSI_DataHash * right	833:72:21889:21907	164040	3	True				
ANR	164184	ParameterType	KSI_DataHash *		164040	0					
ANR	164185	Identifier	right		164040	1					
ANR	164186	Parameter	uint8_t level	834:10:21920:21932	164040	4	True				
ANR	164187	ParameterType	uint8_t		164040	0					
ANR	164188	Identifier	level		164040	1					
ANR	164189	CFGEntryNode	ENTRY		164040		True				
ANR	164190	CFGExitNode	EXIT		164040		True				
ANR	164191	Symbol	ksi		164040						
ANR	164192	Symbol	ksi -> ctx		164040						
ANR	164193	Symbol	& level		164040						
ANR	164194	Symbol	level		164040						
ANR	164195	Symbol	KSI_DataHasher_close		164040						
ANR	164196	Symbol	ksi -> ctx -> hasher		164040						
ANR	164197	Symbol	right		164040						
ANR	164198	Symbol	* ksi		164040						
ANR	164199	Symbol	KSI_DataHasher_addImprint		164040						
ANR	164200	Symbol	out		164040						
ANR	164201	Symbol	r		164040						
ANR	164202	Symbol	RSGTE_HASH_CREATE		164040						
ANR	164203	Symbol	left		164040						
ANR	164204	Symbol	* * ksi		164040						
ANR	164205	Symbol	KSI_OK		164040						
ANR	164206	Symbol	KSI_DataHasher_reset		164040						
ANR	164207	Symbol	KSI_DataHasher_add		164040						
ANR	164208	Symbol	* ksi -> ctx		164040						
ANR	164209	Function	sigblkAddMetadata	851:0:22351:22634							
ANR	164210	FunctionDef	"sigblkAddMetadata (ksifile ksi , const char * key , const char * value)"		164209	0					
ANR	164211	CompoundStatement		852:67:22422:22634	164209	0					
ANR	164212	IdentifierDeclStatement	unsigned char buffer [ 0xFFFF ] ;	853:1:22425:22453	164209	0	True				
ANR	164213	IdentifierDecl	buffer [ 0xFFFF ]		164209	0					
ANR	164214	IdentifierDeclType	unsigned char [ 0xFFFF ]		164209	0					
ANR	164215	Identifier	buffer		164209	1					
ANR	164216	PrimaryExpression	0xFFFF		164209	2					
ANR	164217	IdentifierDeclStatement	size_t encoded_size = 0 ;	854:1:22456:22479	164209	1	True				
ANR	164218	IdentifierDecl	encoded_size = 0		164209	0					
ANR	164219	IdentifierDeclType	size_t		164209	0					
ANR	164220	Identifier	encoded_size		164209	1					
ANR	164221	AssignmentExpression	encoded_size = 0		164209	2		=			
ANR	164222	Identifier	encoded_size		164209	0					
ANR	164223	PrimaryExpression	0		164209	1					
ANR	164224	IdentifierDeclStatement	int ret = 0 ;	855:1:22482:22493	164209	2	True				
ANR	164225	IdentifierDecl	ret = 0		164209	0					
ANR	164226	IdentifierDeclType	int		164209	0					
ANR	164227	Identifier	ret		164209	1					
ANR	164228	AssignmentExpression	ret = 0		164209	2		=			
ANR	164229	Identifier	ret		164209	0					
ANR	164230	PrimaryExpression	0		164209	1					
ANR	164231	ExpressionStatement	"tlvCreateMetadata ( ksi , ksi -> nRecords , key , value , buffer , & encoded_size )"	857:1:22497:22569	164209	3	True				
ANR	164232	CallExpression	"tlvCreateMetadata ( ksi , ksi -> nRecords , key , value , buffer , & encoded_size )"		164209	0					
ANR	164233	Callee	tlvCreateMetadata		164209	0					
ANR	164234	Identifier	tlvCreateMetadata		164209	0					
ANR	164235	ArgumentList	ksi		164209	1					
ANR	164236	Argument	ksi		164209	0					
ANR	164237	Identifier	ksi		164209	0					
ANR	164238	Argument	ksi -> nRecords		164209	1					
ANR	164239	PtrMemberAccess	ksi -> nRecords		164209	0					
ANR	164240	Identifier	ksi		164209	0					
ANR	164241	Identifier	nRecords		164209	1					
ANR	164242	Argument	key		164209	2					
ANR	164243	Identifier	key		164209	0					
ANR	164244	Argument	value		164209	3					
ANR	164245	Identifier	value		164209	0					
ANR	164246	Argument	buffer		164209	4					
ANR	164247	Identifier	buffer		164209	0					
ANR	164248	Argument	& encoded_size		164209	5					
ANR	164249	UnaryOperationExpression	& encoded_size		164209	0					
ANR	164250	UnaryOperator	&		164209	0					
ANR	164251	Identifier	encoded_size		164209	1					
ANR	164252	ExpressionStatement	"sigblkAddLeaf ( ksi , buffer , encoded_size , true )"	858:1:22572:22618	164209	4	True				
ANR	164253	CallExpression	"sigblkAddLeaf ( ksi , buffer , encoded_size , true )"		164209	0					
ANR	164254	Callee	sigblkAddLeaf		164209	0					
ANR	164255	Identifier	sigblkAddLeaf		164209	0					
ANR	164256	ArgumentList	ksi		164209	1					
ANR	164257	Argument	ksi		164209	0					
ANR	164258	Identifier	ksi		164209	0					
ANR	164259	Argument	buffer		164209	1					
ANR	164260	Identifier	buffer		164209	0					
ANR	164261	Argument	encoded_size		164209	2					
ANR	164262	Identifier	encoded_size		164209	0					
ANR	164263	Argument	true		164209	3					
ANR	164264	Identifier	true		164209	0					
ANR	164265	ReturnStatement	return ret ;	860:1:22622:22632	164209	5	True				
ANR	164266	Identifier	ret		164209	0					
ANR	164267	ReturnType	int		164209	1					
ANR	164268	Identifier	sigblkAddMetadata		164209	2					
ANR	164269	ParameterList	"ksifile ksi , const char * key , const char * value"		164209	3					
ANR	164270	Parameter	ksifile ksi	852:18:22373:22383	164209	0	True				
ANR	164271	ParameterType	ksifile		164209	0					
ANR	164272	Identifier	ksi		164209	1					
ANR	164273	Parameter	const char * key	852:31:22386:22400	164209	1	True				
ANR	164274	ParameterType	const char *		164209	0					
ANR	164275	Identifier	key		164209	1					
ANR	164276	Parameter	const char * value	852:48:22403:22419	164209	2	True				
ANR	164277	ParameterType	const char *		164209	0					
ANR	164278	Identifier	value		164209	1					
ANR	164279	CFGEntryNode	ENTRY		164209		True				
ANR	164280	CFGExitNode	EXIT		164209		True				
ANR	164281	Symbol	ksi		164209						
ANR	164282	Symbol	ret		164209						
ANR	164283	Symbol	ksi -> nRecords		164209						
ANR	164284	Symbol	& encoded_size		164209						
ANR	164285	Symbol	true		164209						
ANR	164286	Symbol	buffer		164209						
ANR	164287	Symbol	* ksi		164209						
ANR	164288	Symbol	encoded_size		164209						
ANR	164289	Symbol	value		164209						
ANR	164290	Symbol	key		164209						
ANR	164291	Function	sigblkAddRecordKSI	863:0:22637:23049							
ANR	164292	FunctionDef	"sigblkAddRecordKSI (ksifile ksi , const uchar * rec , const size_t len)"		164291	0					
ANR	164293	CompoundStatement		864:68:22709:23049	164291	0					
ANR	164294	IdentifierDeclStatement	int ret = 0 ;	865:1:22712:22723	164291	0	True				
ANR	164295	IdentifierDecl	ret = 0		164291	0					
ANR	164296	IdentifierDeclType	int		164291	0					
ANR	164297	Identifier	ret		164291	1					
ANR	164298	AssignmentExpression	ret = 0		164291	2		=			
ANR	164299	Identifier	ret		164291	0					
ANR	164300	PrimaryExpression	0		164291	1					
ANR	164301	IfStatement	if ( ksi == NULL || ksi -> disabled )		164291	1					
ANR	164302	Condition	ksi == NULL || ksi -> disabled	866:5:22730:22757	164291	0	True				
ANR	164303	OrExpression	ksi == NULL || ksi -> disabled		164291	0		||			
ANR	164304	EqualityExpression	ksi == NULL		164291	0		==			
ANR	164305	Identifier	ksi		164291	0					
ANR	164306	Identifier	NULL		164291	1					
ANR	164307	PtrMemberAccess	ksi -> disabled		164291	1					
ANR	164308	Identifier	ksi		164291	0					
ANR	164309	Identifier	disabled		164291	1					
ANR	164310	ReturnStatement	return 0 ;	867:2:22762:22770	164291	1	True				
ANR	164311	PrimaryExpression	0		164291	0					
ANR	164312	ExpressionStatement	pthread_mutex_lock ( & ksi -> ctx -> module_lock )	869:1:22774:22816	164291	2	True				
ANR	164313	CallExpression	pthread_mutex_lock ( & ksi -> ctx -> module_lock )		164291	0					
ANR	164314	Callee	pthread_mutex_lock		164291	0					
ANR	164315	Identifier	pthread_mutex_lock		164291	0					
ANR	164316	ArgumentList	& ksi -> ctx -> module_lock		164291	1					
ANR	164317	Argument	& ksi -> ctx -> module_lock		164291	0					
ANR	164318	UnaryOperationExpression	& ksi -> ctx -> module_lock		164291	0					
ANR	164319	UnaryOperator	&		164291	0					
ANR	164320	PtrMemberAccess	ksi -> ctx -> module_lock		164291	1					
ANR	164321	PtrMemberAccess	ksi -> ctx		164291	0					
ANR	164322	Identifier	ksi		164291	0					
ANR	164323	Identifier	ctx		164291	1					
ANR	164324	Identifier	module_lock		164291	1					
ANR	164325	IfStatement	"if ( ( ret = sigblkAddLeaf ( ksi , rec , len , false ) ) != 0 )"		164291	3					
ANR	164326	Condition	"( ret = sigblkAddLeaf ( ksi , rec , len , false ) ) != 0"	871:5:22824:22871	164291	0	True				
ANR	164327	EqualityExpression	"( ret = sigblkAddLeaf ( ksi , rec , len , false ) ) != 0"		164291	0		!=			
ANR	164328	AssignmentExpression	"ret = sigblkAddLeaf ( ksi , rec , len , false )"		164291	0		=			
ANR	164329	Identifier	ret		164291	0					
ANR	164330	CallExpression	"sigblkAddLeaf ( ksi , rec , len , false )"		164291	1					
ANR	164331	Callee	sigblkAddLeaf		164291	0					
ANR	164332	Identifier	sigblkAddLeaf		164291	0					
ANR	164333	ArgumentList	ksi		164291	1					
ANR	164334	Argument	ksi		164291	0					
ANR	164335	Identifier	ksi		164291	0					
ANR	164336	Argument	rec		164291	1					
ANR	164337	Identifier	rec		164291	0					
ANR	164338	Argument	len		164291	2					
ANR	164339	Identifier	len		164291	0					
ANR	164340	Argument	false		164291	3					
ANR	164341	Identifier	false		164291	0					
ANR	164342	PrimaryExpression	0		164291	1					
ANR	164343	GotoStatement	goto done ;	872:2:22876:22885	164291	1	True				
ANR	164344	Identifier	done		164291	0					
ANR	164345	IfStatement	if ( ksi -> nRecords == ksi -> blockSizeLimit )		164291	4					
ANR	164346	Condition	ksi -> nRecords == ksi -> blockSizeLimit	874:5:22893:22928	164291	0	True				
ANR	164347	EqualityExpression	ksi -> nRecords == ksi -> blockSizeLimit		164291	0		==			
ANR	164348	PtrMemberAccess	ksi -> nRecords		164291	0					
ANR	164349	Identifier	ksi		164291	0					
ANR	164350	Identifier	nRecords		164291	1					
ANR	164351	PtrMemberAccess	ksi -> blockSizeLimit		164291	1					
ANR	164352	Identifier	ksi		164291	0					
ANR	164353	Identifier	blockSizeLimit		164291	1					
ANR	164354	CompoundStatement		11:43:221:221	164291	1					
ANR	164355	ExpressionStatement	sigblkFinishKSI ( ksi )	875:2:22935:22955	164291	0	True				
ANR	164356	CallExpression	sigblkFinishKSI ( ksi )		164291	0					
ANR	164357	Callee	sigblkFinishKSI		164291	0					
ANR	164358	Identifier	sigblkFinishKSI		164291	0					
ANR	164359	ArgumentList	ksi		164291	1					
ANR	164360	Argument	ksi		164291	0					
ANR	164361	Identifier	ksi		164291	0					
ANR	164362	ExpressionStatement	sigblkInitKSI ( ksi )	876:2:22959:22977	164291	1	True				
ANR	164363	CallExpression	sigblkInitKSI ( ksi )		164291	0					
ANR	164364	Callee	sigblkInitKSI		164291	0					
ANR	164365	Identifier	sigblkInitKSI		164291	0					
ANR	164366	ArgumentList	ksi		164291	1					
ANR	164367	Argument	ksi		164291	0					
ANR	164368	Identifier	ksi		164291	0					
ANR	164369	Label	done :	879:0:22983:22987	164291	5	True				
ANR	164370	Identifier	done		164291	0					
ANR	164371	ExpressionStatement	pthread_mutex_unlock ( & ksi -> ctx -> module_lock )	880:1:22990:23034	164291	6	True				
ANR	164372	CallExpression	pthread_mutex_unlock ( & ksi -> ctx -> module_lock )		164291	0					
ANR	164373	Callee	pthread_mutex_unlock		164291	0					
ANR	164374	Identifier	pthread_mutex_unlock		164291	0					
ANR	164375	ArgumentList	& ksi -> ctx -> module_lock		164291	1					
ANR	164376	Argument	& ksi -> ctx -> module_lock		164291	0					
ANR	164377	UnaryOperationExpression	& ksi -> ctx -> module_lock		164291	0					
ANR	164378	UnaryOperator	&		164291	0					
ANR	164379	PtrMemberAccess	ksi -> ctx -> module_lock		164291	1					
ANR	164380	PtrMemberAccess	ksi -> ctx		164291	0					
ANR	164381	Identifier	ksi		164291	0					
ANR	164382	Identifier	ctx		164291	1					
ANR	164383	Identifier	module_lock		164291	1					
ANR	164384	ReturnStatement	return ret ;	881:1:23037:23047	164291	7	True				
ANR	164385	Identifier	ret		164291	0					
ANR	164386	ReturnType	int		164291	1					
ANR	164387	Identifier	sigblkAddRecordKSI		164291	2					
ANR	164388	ParameterList	"ksifile ksi , const uchar * rec , const size_t len"		164291	3					
ANR	164389	Parameter	ksifile ksi	864:19:22660:22670	164291	0	True				
ANR	164390	ParameterType	ksifile		164291	0					
ANR	164391	Identifier	ksi		164291	1					
ANR	164392	Parameter	const uchar * rec	864:32:22673:22688	164291	1	True				
ANR	164393	ParameterType	const uchar *		164291	0					
ANR	164394	Identifier	rec		164291	1					
ANR	164395	Parameter	const size_t len	864:50:22691:22706	164291	2	True				
ANR	164396	ParameterType	const size_t		164291	0					
ANR	164397	Identifier	len		164291	1					
ANR	164398	CFGEntryNode	ENTRY		164291		True				
ANR	164399	CFGExitNode	EXIT		164291		True				
ANR	164400	Symbol	ksi		164291						
ANR	164401	Symbol	ret		164291						
ANR	164402	Symbol	ksi -> ctx		164291						
ANR	164403	Symbol	NULL		164291						
ANR	164404	Symbol	false		164291						
ANR	164405	Symbol	* ksi		164291						
ANR	164406	Symbol	ksi -> blockSizeLimit		164291						
ANR	164407	Symbol	rec		164291						
ANR	164408	Symbol	ksi -> nRecords		164291						
ANR	164409	Symbol	len		164291						
ANR	164410	Symbol	ksi -> disabled		164291						
ANR	164411	Symbol	& ksi -> ctx -> module_lock		164291						
ANR	164412	Symbol	sigblkAddLeaf		164291						
ANR	164413	Function	sigblkAddLeaf	885:0:23053:25007							
ANR	164414	FunctionDef	"sigblkAddLeaf (ksifile ksi , const uchar * leafData , const size_t leafLength , bool metadata)"		164413	0					
ANR	164415	CompoundStatement		886:90:23147:25007	164413	0					
ANR	164416	IdentifierDeclStatement	"KSI_DataHash * mask , * leafHash , * treeNode , * tmpTreeNode ;"	888:1:23151:23205	164413	0	True				
ANR	164417	IdentifierDecl	* mask		164413	0					
ANR	164418	IdentifierDeclType	KSI_DataHash *		164413	0					
ANR	164419	Identifier	mask		164413	1					
ANR	164420	IdentifierDecl	* leafHash		164413	1					
ANR	164421	IdentifierDeclType	KSI_DataHash *		164413	0					
ANR	164422	Identifier	leafHash		164413	1					
ANR	164423	IdentifierDecl	* treeNode		164413	2					
ANR	164424	IdentifierDeclType	KSI_DataHash *		164413	0					
ANR	164425	Identifier	treeNode		164413	1					
ANR	164426	IdentifierDecl	* tmpTreeNode		164413	3					
ANR	164427	IdentifierDeclType	KSI_DataHash *		164413	0					
ANR	164428	Identifier	tmpTreeNode		164413	1					
ANR	164429	IdentifierDeclStatement	uint8_t j ;	889:1:23208:23217	164413	1	True				
ANR	164430	IdentifierDecl	j		164413	0					
ANR	164431	IdentifierDeclType	uint8_t		164413	0					
ANR	164432	Identifier	j		164413	1					
ANR	164433	IdentifierDeclStatement	const unsigned char * pTmp ;	890:1:23220:23245	164413	2	True				
ANR	164434	IdentifierDecl	* pTmp		164413	0					
ANR	164435	IdentifierDeclType	const unsigned char *		164413	0					
ANR	164436	Identifier	pTmp		164413	1					
ANR	164437	IdentifierDeclStatement	size_t len ;	891:1:23248:23258	164413	3	True				
ANR	164438	IdentifierDecl	len		164413	0					
ANR	164439	IdentifierDeclType	size_t		164413	0					
ANR	164440	Identifier	len		164413	1					
ANR	164441	IdentifierDeclStatement	int r = 0 ;	893:1:23262:23271	164413	4	True				
ANR	164442	IdentifierDecl	r = 0		164413	0					
ANR	164443	IdentifierDeclType	int		164413	0					
ANR	164444	Identifier	r		164413	1					
ANR	164445	AssignmentExpression	r = 0		164413	2		=			
ANR	164446	Identifier	r		164413	0					
ANR	164447	PrimaryExpression	0		164413	1					
ANR	164448	IfStatement	if ( ksi == NULL || ksi -> disabled )		164413	5					
ANR	164449	Condition	ksi == NULL || ksi -> disabled	895:5:23279:23306	164413	0	True				
ANR	164450	OrExpression	ksi == NULL || ksi -> disabled		164413	0		||			
ANR	164451	EqualityExpression	ksi == NULL		164413	0		==			
ANR	164452	Identifier	ksi		164413	0					
ANR	164453	Identifier	NULL		164413	1					
ANR	164454	PtrMemberAccess	ksi -> disabled		164413	1					
ANR	164455	Identifier	ksi		164413	0					
ANR	164456	Identifier	disabled		164413	1					
ANR	164457	GotoStatement	goto done ;	895:35:23309:23318	164413	1	True				
ANR	164458	Identifier	done		164413	0					
ANR	164459	ExpressionStatement	"CHKr ( sigblkCreateMask ( ksi , & mask ) )"	896:1:23321:23355	164413	6	True				
ANR	164460	CallExpression	"CHKr ( sigblkCreateMask ( ksi , & mask ) )"		164413	0					
ANR	164461	Callee	CHKr		164413	0					
ANR	164462	Identifier	CHKr		164413	0					
ANR	164463	ArgumentList	"sigblkCreateMask ( ksi , & mask )"		164413	1					
ANR	164464	Argument	"sigblkCreateMask ( ksi , & mask )"		164413	0					
ANR	164465	CallExpression	"sigblkCreateMask ( ksi , & mask )"		164413	0					
ANR	164466	Callee	sigblkCreateMask		164413	0					
ANR	164467	Identifier	sigblkCreateMask		164413	0					
ANR	164468	ArgumentList	ksi		164413	1					
ANR	164469	Argument	ksi		164413	0					
ANR	164470	Identifier	ksi		164413	0					
ANR	164471	Argument	& mask		164413	1					
ANR	164472	UnaryOperationExpression	& mask		164413	0					
ANR	164473	UnaryOperator	&		164413	0					
ANR	164474	Identifier	mask		164413	1					
ANR	164475	ExpressionStatement	"CHKr ( sigblkCreateHash ( ksi , & leafHash , leafData , leafLength ) )"	897:1:23358:23418	164413	7	True				
ANR	164476	CallExpression	"CHKr ( sigblkCreateHash ( ksi , & leafHash , leafData , leafLength ) )"		164413	0					
ANR	164477	Callee	CHKr		164413	0					
ANR	164478	Identifier	CHKr		164413	0					
ANR	164479	ArgumentList	"sigblkCreateHash ( ksi , & leafHash , leafData , leafLength )"		164413	1					
ANR	164480	Argument	"sigblkCreateHash ( ksi , & leafHash , leafData , leafLength )"		164413	0					
ANR	164481	CallExpression	"sigblkCreateHash ( ksi , & leafHash , leafData , leafLength )"		164413	0					
ANR	164482	Callee	sigblkCreateHash		164413	0					
ANR	164483	Identifier	sigblkCreateHash		164413	0					
ANR	164484	ArgumentList	ksi		164413	1					
ANR	164485	Argument	ksi		164413	0					
ANR	164486	Identifier	ksi		164413	0					
ANR	164487	Argument	& leafHash		164413	1					
ANR	164488	UnaryOperationExpression	& leafHash		164413	0					
ANR	164489	UnaryOperator	&		164413	0					
ANR	164490	Identifier	leafHash		164413	1					
ANR	164491	Argument	leafData		164413	2					
ANR	164492	Identifier	leafData		164413	0					
ANR	164493	Argument	leafLength		164413	3					
ANR	164494	Identifier	leafLength		164413	0					
ANR	164495	IfStatement	if ( ksi -> nRecords == 0 )		164413	8					
ANR	164496	Condition	ksi -> nRecords == 0	899:4:23425:23442	164413	0	True				
ANR	164497	EqualityExpression	ksi -> nRecords == 0		164413	0		==			
ANR	164498	PtrMemberAccess	ksi -> nRecords		164413	0					
ANR	164499	Identifier	ksi		164413	0					
ANR	164500	Identifier	nRecords		164413	1					
ANR	164501	PrimaryExpression	0		164413	1					
ANR	164502	ExpressionStatement	tlvWriteBlockHdrKSI ( ksi )	900:2:23448:23472	164413	1	True				
ANR	164503	CallExpression	tlvWriteBlockHdrKSI ( ksi )		164413	0					
ANR	164504	Callee	tlvWriteBlockHdrKSI		164413	0					
ANR	164505	Identifier	tlvWriteBlockHdrKSI		164413	0					
ANR	164506	ArgumentList	ksi		164413	1					
ANR	164507	Argument	ksi		164413	0					
ANR	164508	Identifier	ksi		164413	0					
ANR	164509	IfStatement	if ( metadata )		164413	9					
ANR	164510	Condition	metadata	903:5:23544:23551	164413	0	True				
ANR	164511	Identifier	metadata		164413	0					
ANR	164512	ExpressionStatement	"tlvWriteOctetString ( ksi -> blockFile , leafData , leafLength )"	904:2:23556:23613	164413	1	True				
ANR	164513	CallExpression	"tlvWriteOctetString ( ksi -> blockFile , leafData , leafLength )"		164413	0					
ANR	164514	Callee	tlvWriteOctetString		164413	0					
ANR	164515	Identifier	tlvWriteOctetString		164413	0					
ANR	164516	ArgumentList	ksi -> blockFile		164413	1					
ANR	164517	Argument	ksi -> blockFile		164413	0					
ANR	164518	PtrMemberAccess	ksi -> blockFile		164413	0					
ANR	164519	Identifier	ksi		164413	0					
ANR	164520	Identifier	blockFile		164413	1					
ANR	164521	Argument	leafData		164413	1					
ANR	164522	Identifier	leafData		164413	0					
ANR	164523	Argument	leafLength		164413	2					
ANR	164524	Identifier	leafLength		164413	0					
ANR	164525	IfStatement	if ( ksi -> bKeepRecordHashes )		164413	10					
ANR	164526	Condition	ksi -> bKeepRecordHashes	906:5:23621:23642	164413	0	True				
ANR	164527	PtrMemberAccess	ksi -> bKeepRecordHashes		164413	0					
ANR	164528	Identifier	ksi		164413	0					
ANR	164529	Identifier	bKeepRecordHashes		164413	1					
ANR	164530	ExpressionStatement	"tlvWriteHashKSI ( ksi , 0x0902 , leafHash )"	907:2:23647:23685	164413	1	True				
ANR	164531	CallExpression	"tlvWriteHashKSI ( ksi , 0x0902 , leafHash )"		164413	0					
ANR	164532	Callee	tlvWriteHashKSI		164413	0					
ANR	164533	Identifier	tlvWriteHashKSI		164413	0					
ANR	164534	ArgumentList	ksi		164413	1					
ANR	164535	Argument	ksi		164413	0					
ANR	164536	Identifier	ksi		164413	0					
ANR	164537	Argument	0x0902		164413	1					
ANR	164538	PrimaryExpression	0x0902		164413	0					
ANR	164539	Argument	leafHash		164413	2					
ANR	164540	Identifier	leafHash		164413	0					
ANR	164541	IfStatement	if ( ! metadata )		164413	11					
ANR	164542	Condition	! metadata	910:5:23762:23770	164413	0	True				
ANR	164543	UnaryOperationExpression	! metadata		164413	0					
ANR	164544	UnaryOperator	!		164413	0					
ANR	164545	Identifier	metadata		164413	1					
ANR	164546	CompoundStatement		25:16:625:625	164413	1					
ANR	164547	IfStatement	"if ( ( r = sigblkHashTwoNodes ( ksi , & treeNode , mask , leafHash , 1 ) ) != 0 )"		164413	0					
ANR	164548	Condition	"( r = sigblkHashTwoNodes ( ksi , & treeNode , mask , leafHash , 1 ) ) != 0"	911:6:23797:23860	164413	0	True				
ANR	164549	EqualityExpression	"( r = sigblkHashTwoNodes ( ksi , & treeNode , mask , leafHash , 1 ) ) != 0"		164413	0		!=			
ANR	164550	AssignmentExpression	"r = sigblkHashTwoNodes ( ksi , & treeNode , mask , leafHash , 1 )"		164413	0		=			
ANR	164551	Identifier	r		164413	0					
ANR	164552	CallExpression	"sigblkHashTwoNodes ( ksi , & treeNode , mask , leafHash , 1 )"		164413	1					
ANR	164553	Callee	sigblkHashTwoNodes		164413	0					
ANR	164554	Identifier	sigblkHashTwoNodes		164413	0					
ANR	164555	ArgumentList	ksi		164413	1					
ANR	164556	Argument	ksi		164413	0					
ANR	164557	Identifier	ksi		164413	0					
ANR	164558	Argument	& treeNode		164413	1					
ANR	164559	UnaryOperationExpression	& treeNode		164413	0					
ANR	164560	UnaryOperator	&		164413	0					
ANR	164561	Identifier	treeNode		164413	1					
ANR	164562	Argument	mask		164413	2					
ANR	164563	Identifier	mask		164413	0					
ANR	164564	Argument	leafHash		164413	3					
ANR	164565	Identifier	leafHash		164413	0					
ANR	164566	Argument	1		164413	4					
ANR	164567	PrimaryExpression	1		164413	0					
ANR	164568	PrimaryExpression	0		164413	1					
ANR	164569	GotoStatement	goto done ;	911:72:23863:23872	164413	1	True				
ANR	164570	Identifier	done		164413	0					
ANR	164571	ElseStatement	else		164413	0					
ANR	164572	CompoundStatement		27:8:734:734	164413	0					
ANR	164573	IfStatement	"if ( ( r = sigblkHashTwoNodes ( ksi , & treeNode , leafHash , mask , 1 ) ) != 0 )"		164413	0					
ANR	164574	Condition	"( r = sigblkHashTwoNodes ( ksi , & treeNode , leafHash , mask , 1 ) ) != 0"	913:6:23890:23953	164413	0	True				
ANR	164575	EqualityExpression	"( r = sigblkHashTwoNodes ( ksi , & treeNode , leafHash , mask , 1 ) ) != 0"		164413	0		!=			
ANR	164576	AssignmentExpression	"r = sigblkHashTwoNodes ( ksi , & treeNode , leafHash , mask , 1 )"		164413	0		=			
ANR	164577	Identifier	r		164413	0					
ANR	164578	CallExpression	"sigblkHashTwoNodes ( ksi , & treeNode , leafHash , mask , 1 )"		164413	1					
ANR	164579	Callee	sigblkHashTwoNodes		164413	0					
ANR	164580	Identifier	sigblkHashTwoNodes		164413	0					
ANR	164581	ArgumentList	ksi		164413	1					
ANR	164582	Argument	ksi		164413	0					
ANR	164583	Identifier	ksi		164413	0					
ANR	164584	Argument	& treeNode		164413	1					
ANR	164585	UnaryOperationExpression	& treeNode		164413	0					
ANR	164586	UnaryOperator	&		164413	0					
ANR	164587	Identifier	treeNode		164413	1					
ANR	164588	Argument	leafHash		164413	2					
ANR	164589	Identifier	leafHash		164413	0					
ANR	164590	Argument	mask		164413	3					
ANR	164591	Identifier	mask		164413	0					
ANR	164592	Argument	1		164413	4					
ANR	164593	PrimaryExpression	1		164413	0					
ANR	164594	PrimaryExpression	0		164413	1					
ANR	164595	GotoStatement	goto done ;	913:72:23956:23965	164413	1	True				
ANR	164596	Identifier	done		164413	0					
ANR	164597	IfStatement	if ( ksi -> bKeepTreeHashes )		164413	12					
ANR	164598	Condition	ksi -> bKeepTreeHashes	917:4:24036:24055	164413	0	True				
ANR	164599	PtrMemberAccess	ksi -> bKeepTreeHashes		164413	0					
ANR	164600	Identifier	ksi		164413	0					
ANR	164601	Identifier	bKeepTreeHashes		164413	1					
ANR	164602	ExpressionStatement	"tlvWriteHashKSI ( ksi , 0x0903 , treeNode )"	918:2:24060:24098	164413	1	True				
ANR	164603	CallExpression	"tlvWriteHashKSI ( ksi , 0x0903 , treeNode )"		164413	0					
ANR	164604	Callee	tlvWriteHashKSI		164413	0					
ANR	164605	Identifier	tlvWriteHashKSI		164413	0					
ANR	164606	ArgumentList	ksi		164413	1					
ANR	164607	Argument	ksi		164413	0					
ANR	164608	Identifier	ksi		164413	0					
ANR	164609	Argument	0x0903		164413	1					
ANR	164610	PrimaryExpression	0x0903		164413	0					
ANR	164611	Argument	treeNode		164413	2					
ANR	164612	Identifier	treeNode		164413	0					
ANR	164613	ExpressionStatement	"KSI_DataHash_getImprint ( treeNode , & pTmp , & len )"	920:1:24102:24148	164413	13	True				
ANR	164614	CallExpression	"KSI_DataHash_getImprint ( treeNode , & pTmp , & len )"		164413	0					
ANR	164615	Callee	KSI_DataHash_getImprint		164413	0					
ANR	164616	Identifier	KSI_DataHash_getImprint		164413	0					
ANR	164617	ArgumentList	treeNode		164413	1					
ANR	164618	Argument	treeNode		164413	0					
ANR	164619	Identifier	treeNode		164413	0					
ANR	164620	Argument	& pTmp		164413	1					
ANR	164621	UnaryOperationExpression	& pTmp		164413	0					
ANR	164622	UnaryOperator	&		164413	0					
ANR	164623	Identifier	pTmp		164413	1					
ANR	164624	Argument	& len		164413	2					
ANR	164625	UnaryOperationExpression	& len		164413	0					
ANR	164626	UnaryOperator	&		164413	0					
ANR	164627	Identifier	len		164413	1					
ANR	164628	ExpressionStatement	"memcpy ( ksi -> lastLeaf , pTmp , len )"	921:1:24151:24183	164413	14	True				
ANR	164629	CallExpression	"memcpy ( ksi -> lastLeaf , pTmp , len )"		164413	0					
ANR	164630	Callee	memcpy		164413	0					
ANR	164631	Identifier	memcpy		164413	0					
ANR	164632	ArgumentList	ksi -> lastLeaf		164413	1					
ANR	164633	Argument	ksi -> lastLeaf		164413	0					
ANR	164634	PtrMemberAccess	ksi -> lastLeaf		164413	0					
ANR	164635	Identifier	ksi		164413	0					
ANR	164636	Identifier	lastLeaf		164413	1					
ANR	164637	Argument	pTmp		164413	1					
ANR	164638	Identifier	pTmp		164413	0					
ANR	164639	Argument	len		164413	2					
ANR	164640	Identifier	len		164413	0					
ANR	164641	ForStatement	for ( j = 0 ; j < ksi -> nRoots ; ++ j )		164413	15					
ANR	164642	ForInit	j = 0 ;	923:5:24191:24197	164413	0	True				
ANR	164643	AssignmentExpression	j = 0		164413	0		=			
ANR	164644	Identifier	j		164413	0					
ANR	164645	PrimaryExpression	0		164413	1					
ANR	164646	Condition	j < ksi -> nRoots	923:13:24199:24213	164413	1	True				
ANR	164647	RelationalExpression	j < ksi -> nRoots		164413	0		<			
ANR	164648	Identifier	j		164413	0					
ANR	164649	PtrMemberAccess	ksi -> nRoots		164413	1					
ANR	164650	Identifier	ksi		164413	0					
ANR	164651	Identifier	nRoots		164413	1					
ANR	164652	UnaryExpression	++ j	923:31:24217:24219	164413	2	True				
ANR	164653	IncDec	++		164413	0					
ANR	164654	Identifier	j		164413	1					
ANR	164655	CompoundStatement		38:36:1074:1074	164413	3					
ANR	164656	IfStatement	if ( ksi -> roots [ j ] == NULL )		164413	0					
ANR	164657	Condition	ksi -> roots [ j ] == NULL	924:6:24230:24250	164413	0	True				
ANR	164658	EqualityExpression	ksi -> roots [ j ] == NULL		164413	0		==			
ANR	164659	ArrayIndexing	ksi -> roots [ j ]		164413	0					
ANR	164660	PtrMemberAccess	ksi -> roots		164413	0					
ANR	164661	Identifier	ksi		164413	0					
ANR	164662	Identifier	roots		164413	1					
ANR	164663	Identifier	j		164413	1					
ANR	164664	Identifier	NULL		164413	1					
ANR	164665	CompoundStatement		39:29:1105:1105	164413	1					
ANR	164666	ExpressionStatement	ksi -> roots [ j ] = treeNode	925:3:24258:24282	164413	0	True				
ANR	164667	AssignmentExpression	ksi -> roots [ j ] = treeNode		164413	0		=			
ANR	164668	ArrayIndexing	ksi -> roots [ j ]		164413	0					
ANR	164669	PtrMemberAccess	ksi -> roots		164413	0					
ANR	164670	Identifier	ksi		164413	0					
ANR	164671	Identifier	roots		164413	1					
ANR	164672	Identifier	j		164413	1					
ANR	164673	Identifier	treeNode		164413	1					
ANR	164674	ExpressionStatement	treeNode = NULL	926:3:24287:24302	164413	1	True				
ANR	164675	AssignmentExpression	treeNode = NULL		164413	0		=			
ANR	164676	Identifier	treeNode		164413	0					
ANR	164677	Identifier	NULL		164413	1					
ANR	164678	BreakStatement	break ;	927:3:24307:24312	164413	2	True				
ANR	164679	ElseStatement	else		164413	0					
ANR	164680	IfStatement	if ( treeNode != NULL )		164413	0					
ANR	164681	Condition	treeNode != NULL	928:13:24327:24342	164413	0	True				
ANR	164682	EqualityExpression	treeNode != NULL		164413	0		!=			
ANR	164683	Identifier	treeNode		164413	0					
ANR	164684	Identifier	NULL		164413	1					
ANR	164685	CompoundStatement		43:31:1197:1197	164413	1					
ANR	164686	ExpressionStatement	tmpTreeNode = treeNode	930:3:24377:24399	164413	0	True				
ANR	164687	AssignmentExpression	tmpTreeNode = treeNode		164413	0		=			
ANR	164688	Identifier	tmpTreeNode		164413	0					
ANR	164689	Identifier	treeNode		164413	1					
ANR	164690	ExpressionStatement	"r = sigblkHashTwoNodes ( ksi , & treeNode , ksi -> roots [ j ] , tmpTreeNode , j + 2 )"	931:3:24404:24477	164413	1	True				
ANR	164691	AssignmentExpression	"r = sigblkHashTwoNodes ( ksi , & treeNode , ksi -> roots [ j ] , tmpTreeNode , j + 2 )"		164413	0		=			
ANR	164692	Identifier	r		164413	0					
ANR	164693	CallExpression	"sigblkHashTwoNodes ( ksi , & treeNode , ksi -> roots [ j ] , tmpTreeNode , j + 2 )"		164413	1					
ANR	164694	Callee	sigblkHashTwoNodes		164413	0					
ANR	164695	Identifier	sigblkHashTwoNodes		164413	0					
ANR	164696	ArgumentList	ksi		164413	1					
ANR	164697	Argument	ksi		164413	0					
ANR	164698	Identifier	ksi		164413	0					
ANR	164699	Argument	& treeNode		164413	1					
ANR	164700	UnaryOperationExpression	& treeNode		164413	0					
ANR	164701	UnaryOperator	&		164413	0					
ANR	164702	Identifier	treeNode		164413	1					
ANR	164703	Argument	ksi -> roots [ j ]		164413	2					
ANR	164704	ArrayIndexing	ksi -> roots [ j ]		164413	0					
ANR	164705	PtrMemberAccess	ksi -> roots		164413	0					
ANR	164706	Identifier	ksi		164413	0					
ANR	164707	Identifier	roots		164413	1					
ANR	164708	Identifier	j		164413	1					
ANR	164709	Argument	tmpTreeNode		164413	3					
ANR	164710	Identifier	tmpTreeNode		164413	0					
ANR	164711	Argument	j + 2		164413	4					
ANR	164712	AdditiveExpression	j + 2		164413	0		+			
ANR	164713	Identifier	j		164413	0					
ANR	164714	PrimaryExpression	2		164413	1					
ANR	164715	ExpressionStatement	KSI_DataHash_free ( ksi -> roots [ j ] )	932:3:24482:24514	164413	2	True				
ANR	164716	CallExpression	KSI_DataHash_free ( ksi -> roots [ j ] )		164413	0					
ANR	164717	Callee	KSI_DataHash_free		164413	0					
ANR	164718	Identifier	KSI_DataHash_free		164413	0					
ANR	164719	ArgumentList	ksi -> roots [ j ]		164413	1					
ANR	164720	Argument	ksi -> roots [ j ]		164413	0					
ANR	164721	ArrayIndexing	ksi -> roots [ j ]		164413	0					
ANR	164722	PtrMemberAccess	ksi -> roots		164413	0					
ANR	164723	Identifier	ksi		164413	0					
ANR	164724	Identifier	roots		164413	1					
ANR	164725	Identifier	j		164413	1					
ANR	164726	ExpressionStatement	ksi -> roots [ j ] = NULL	933:3:24519:24539	164413	3	True				
ANR	164727	AssignmentExpression	ksi -> roots [ j ] = NULL		164413	0		=			
ANR	164728	ArrayIndexing	ksi -> roots [ j ]		164413	0					
ANR	164729	PtrMemberAccess	ksi -> roots		164413	0					
ANR	164730	Identifier	ksi		164413	0					
ANR	164731	Identifier	roots		164413	1					
ANR	164732	Identifier	j		164413	1					
ANR	164733	Identifier	NULL		164413	1					
ANR	164734	ExpressionStatement	KSI_DataHash_free ( tmpTreeNode )	934:3:24544:24574	164413	4	True				
ANR	164735	CallExpression	KSI_DataHash_free ( tmpTreeNode )		164413	0					
ANR	164736	Callee	KSI_DataHash_free		164413	0					
ANR	164737	Identifier	KSI_DataHash_free		164413	0					
ANR	164738	ArgumentList	tmpTreeNode		164413	1					
ANR	164739	Argument	tmpTreeNode		164413	0					
ANR	164740	Identifier	tmpTreeNode		164413	0					
ANR	164741	IfStatement	if ( r != 0 )		164413	5					
ANR	164742	Condition	r != 0	935:7:24583:24588	164413	0	True				
ANR	164743	EqualityExpression	r != 0		164413	0		!=			
ANR	164744	Identifier	r		164413	0					
ANR	164745	PrimaryExpression	0		164413	1					
ANR	164746	GotoStatement	goto done ;	935:15:24591:24600	164413	1	True				
ANR	164747	Identifier	done		164413	0					
ANR	164748	IfStatement	if ( ksi -> bKeepTreeHashes )		164413	6					
ANR	164749	Condition	ksi -> bKeepTreeHashes	936:6:24608:24627	164413	0	True				
ANR	164750	PtrMemberAccess	ksi -> bKeepTreeHashes		164413	0					
ANR	164751	Identifier	ksi		164413	0					
ANR	164752	Identifier	bKeepTreeHashes		164413	1					
ANR	164753	ExpressionStatement	"tlvWriteHashKSI ( ksi , 0x0903 , treeNode )"	937:4:24634:24672	164413	1	True				
ANR	164754	CallExpression	"tlvWriteHashKSI ( ksi , 0x0903 , treeNode )"		164413	0					
ANR	164755	Callee	tlvWriteHashKSI		164413	0					
ANR	164756	Identifier	tlvWriteHashKSI		164413	0					
ANR	164757	ArgumentList	ksi		164413	1					
ANR	164758	Argument	ksi		164413	0					
ANR	164759	Identifier	ksi		164413	0					
ANR	164760	Argument	0x0903		164413	1					
ANR	164761	PrimaryExpression	0x0903		164413	0					
ANR	164762	Argument	treeNode		164413	2					
ANR	164763	Identifier	treeNode		164413	0					
ANR	164764	IfStatement	if ( treeNode != NULL )		164413	16					
ANR	164765	Condition	treeNode != NULL	940:5:24686:24701	164413	0	True				
ANR	164766	EqualityExpression	treeNode != NULL		164413	0		!=			
ANR	164767	Identifier	treeNode		164413	0					
ANR	164768	Identifier	NULL		164413	1					
ANR	164769	CompoundStatement		55:23:1556:1556	164413	1					
ANR	164770	ExpressionStatement	ksi -> roots [ ksi -> nRoots ] = treeNode	942:2:24747:24781	164413	0	True				
ANR	164771	AssignmentExpression	ksi -> roots [ ksi -> nRoots ] = treeNode		164413	0		=			
ANR	164772	ArrayIndexing	ksi -> roots [ ksi -> nRoots ]		164413	0					
ANR	164773	PtrMemberAccess	ksi -> roots		164413	0					
ANR	164774	Identifier	ksi		164413	0					
ANR	164775	Identifier	roots		164413	1					
ANR	164776	PtrMemberAccess	ksi -> nRoots		164413	1					
ANR	164777	Identifier	ksi		164413	0					
ANR	164778	Identifier	nRoots		164413	1					
ANR	164779	Identifier	treeNode		164413	1					
ANR	164780	ExpressionStatement	++ ksi -> nRoots	943:2:24785:24798	164413	1	True				
ANR	164781	UnaryExpression	++ ksi -> nRoots		164413	0					
ANR	164782	IncDec	++		164413	0					
ANR	164783	PtrMemberAccess	ksi -> nRoots		164413	1					
ANR	164784	Identifier	ksi		164413	0					
ANR	164785	Identifier	nRoots		164413	1					
ANR	164786	ExpressionStatement	assert ( ksi -> nRoots < MAX_ROOTS )	944:2:24802:24833	164413	2	True				
ANR	164787	CallExpression	assert ( ksi -> nRoots < MAX_ROOTS )		164413	0					
ANR	164788	Callee	assert		164413	0					
ANR	164789	Identifier	assert		164413	0					
ANR	164790	ArgumentList	ksi -> nRoots < MAX_ROOTS		164413	1					
ANR	164791	Argument	ksi -> nRoots < MAX_ROOTS		164413	0					
ANR	164792	RelationalExpression	ksi -> nRoots < MAX_ROOTS		164413	0		<			
ANR	164793	PtrMemberAccess	ksi -> nRoots		164413	0					
ANR	164794	Identifier	ksi		164413	0					
ANR	164795	Identifier	nRoots		164413	1					
ANR	164796	Identifier	MAX_ROOTS		164413	1					
ANR	164797	ExpressionStatement	treeNode = NULL	945:2:24837:24852	164413	3	True				
ANR	164798	AssignmentExpression	treeNode = NULL		164413	0		=			
ANR	164799	Identifier	treeNode		164413	0					
ANR	164800	Identifier	NULL		164413	1					
ANR	164801	ExpressionStatement	++ ksi -> nRecords	947:1:24858:24873	164413	17	True				
ANR	164802	UnaryExpression	++ ksi -> nRecords		164413	0					
ANR	164803	IncDec	++		164413	0					
ANR	164804	PtrMemberAccess	ksi -> nRecords		164413	1					
ANR	164805	Identifier	ksi		164413	0					
ANR	164806	Identifier	nRecords		164413	1					
ANR	164807	ExpressionStatement	KSI_DataHash_free ( mask )	950:1:24934:24957	164413	18	True				
ANR	164808	CallExpression	KSI_DataHash_free ( mask )		164413	0					
ANR	164809	Callee	KSI_DataHash_free		164413	0					
ANR	164810	Identifier	KSI_DataHash_free		164413	0					
ANR	164811	ArgumentList	mask		164413	1					
ANR	164812	Argument	mask		164413	0					
ANR	164813	Identifier	mask		164413	0					
ANR	164814	ExpressionStatement	KSI_DataHash_free ( leafHash )	951:1:24960:24987	164413	19	True				
ANR	164815	CallExpression	KSI_DataHash_free ( leafHash )		164413	0					
ANR	164816	Callee	KSI_DataHash_free		164413	0					
ANR	164817	Identifier	KSI_DataHash_free		164413	0					
ANR	164818	ArgumentList	leafHash		164413	1					
ANR	164819	Argument	leafHash		164413	0					
ANR	164820	Identifier	leafHash		164413	0					
ANR	164821	Label	done :	953:0:24990:24994	164413	20	True				
ANR	164822	Identifier	done		164413	0					
ANR	164823	ReturnStatement	return r ;	954:1:24997:25005	164413	21	True				
ANR	164824	Identifier	r		164413	0					
ANR	164825	ReturnType	int		164413	1					
ANR	164826	Identifier	sigblkAddLeaf		164413	2					
ANR	164827	ParameterList	"ksifile ksi , const uchar * leafData , const size_t leafLength , bool metadata"		164413	3					
ANR	164828	Parameter	ksifile ksi	886:14:23071:23081	164413	0	True				
ANR	164829	ParameterType	ksifile		164413	0					
ANR	164830	Identifier	ksi		164413	1					
ANR	164831	Parameter	const uchar * leafData	886:27:23084:23104	164413	1	True				
ANR	164832	ParameterType	const uchar *		164413	0					
ANR	164833	Identifier	leafData		164413	1					
ANR	164834	Parameter	const size_t leafLength	886:50:23107:23129	164413	2	True				
ANR	164835	ParameterType	const size_t		164413	0					
ANR	164836	Identifier	leafLength		164413	1					
ANR	164837	Parameter	bool metadata	886:75:23132:23144	164413	3	True				
ANR	164838	ParameterType	bool		164413	0					
ANR	164839	Identifier	metadata		164413	1					
ANR	164840	CFGEntryNode	ENTRY		164413		True				
ANR	164841	CFGExitNode	EXIT		164413		True				
ANR	164842	Symbol	ksi		164413						
ANR	164843	Symbol	metadata		164413						
ANR	164844	Symbol	sigblkCreateMask		164413						
ANR	164845	Symbol	& leafHash		164413						
ANR	164846	Symbol	* ksi -> roots		164413						
ANR	164847	Symbol	& pTmp		164413						
ANR	164848	Symbol	len		164413						
ANR	164849	Symbol	leafHash		164413						
ANR	164850	Symbol	* * ksi		164413						
ANR	164851	Symbol	ksi -> disabled		164413						
ANR	164852	Symbol	ksi -> lastLeaf		164413						
ANR	164853	Symbol	leafLength		164413						
ANR	164854	Symbol	treeNode		164413						
ANR	164855	Symbol	MAX_ROOTS		164413						
ANR	164856	Symbol	mask		164413						
ANR	164857	Symbol	ksi -> blockFile		164413						
ANR	164858	Symbol	sigblkCreateHash		164413						
ANR	164859	Symbol	NULL		164413						
ANR	164860	Symbol	ksi -> nRoots		164413						
ANR	164861	Symbol	& mask		164413						
ANR	164862	Symbol	j		164413						
ANR	164863	Symbol	* ksi		164413						
ANR	164864	Symbol	& treeNode		164413						
ANR	164865	Symbol	leafData		164413						
ANR	164866	Symbol	ksi -> nRecords		164413						
ANR	164867	Symbol	sigblkHashTwoNodes		164413						
ANR	164868	Symbol	r		164413						
ANR	164869	Symbol	ksi -> bKeepTreeHashes		164413						
ANR	164870	Symbol	pTmp		164413						
ANR	164871	Symbol	* j		164413						
ANR	164872	Symbol	* ksi -> nRoots		164413						
ANR	164873	Symbol	ksi -> bKeepRecordHashes		164413						
ANR	164874	Symbol	ksi -> roots		164413						
ANR	164875	Symbol	tmpTreeNode		164413						
ANR	164876	Symbol	& len		164413						
ANR	164877	Function	sigblkCheckTimeOut	957:0:25010:25600							
ANR	164878	FunctionDef	sigblkCheckTimeOut (rsksictx ctx)		164877	0					
ANR	164879	CompoundStatement		958:33:25054:25600	164877	0					
ANR	164880	IdentifierDeclStatement	int ret = 0 ;	959:1:25057:25068	164877	0	True				
ANR	164881	IdentifierDecl	ret = 0		164877	0					
ANR	164882	IdentifierDeclType	int		164877	0					
ANR	164883	Identifier	ret		164877	1					
ANR	164884	AssignmentExpression	ret = 0		164877	2		=			
ANR	164885	Identifier	ret		164877	0					
ANR	164886	PrimaryExpression	0		164877	1					
ANR	164887	IdentifierDeclStatement	time_t now ;	960:1:25071:25081	164877	1	True				
ANR	164888	IdentifierDecl	now		164877	0					
ANR	164889	IdentifierDeclType	time_t		164877	0					
ANR	164890	Identifier	now		164877	1					
ANR	164891	IdentifierDeclStatement	char buf [ KSI_BUF_SIZE ] ;	961:1:25084:25106	164877	2	True				
ANR	164892	IdentifierDecl	buf [ KSI_BUF_SIZE ]		164877	0					
ANR	164893	IdentifierDeclType	char [ KSI_BUF_SIZE ]		164877	0					
ANR	164894	Identifier	buf		164877	1					
ANR	164895	Identifier	KSI_BUF_SIZE		164877	2					
ANR	164896	ExpressionStatement	pthread_mutex_lock ( & ctx -> module_lock )	963:1:25110:25147	164877	3	True				
ANR	164897	CallExpression	pthread_mutex_lock ( & ctx -> module_lock )		164877	0					
ANR	164898	Callee	pthread_mutex_lock		164877	0					
ANR	164899	Identifier	pthread_mutex_lock		164877	0					
ANR	164900	ArgumentList	& ctx -> module_lock		164877	1					
ANR	164901	Argument	& ctx -> module_lock		164877	0					
ANR	164902	UnaryOperationExpression	& ctx -> module_lock		164877	0					
ANR	164903	UnaryOperator	&		164877	0					
ANR	164904	PtrMemberAccess	ctx -> module_lock		164877	1					
ANR	164905	Identifier	ctx		164877	0					
ANR	164906	Identifier	module_lock		164877	1					
ANR	164907	IfStatement	if ( ! ctx -> ksi || ctx -> disabled || ! ctx -> blockTimeLimit || ! ctx -> ksi -> bInBlk )		164877	4					
ANR	164908	Condition	! ctx -> ksi || ctx -> disabled || ! ctx -> blockTimeLimit || ! ctx -> ksi -> bInBlk	965:5:25155:25225	164877	0	True				
ANR	164909	OrExpression	! ctx -> ksi || ctx -> disabled || ! ctx -> blockTimeLimit || ! ctx -> ksi -> bInBlk		164877	0		||			
ANR	164910	UnaryOperationExpression	! ctx -> ksi		164877	0					
ANR	164911	UnaryOperator	!		164877	0					
ANR	164912	PtrMemberAccess	ctx -> ksi		164877	1					
ANR	164913	Identifier	ctx		164877	0					
ANR	164914	Identifier	ksi		164877	1					
ANR	164915	OrExpression	ctx -> disabled || ! ctx -> blockTimeLimit || ! ctx -> ksi -> bInBlk		164877	1		||			
ANR	164916	PtrMemberAccess	ctx -> disabled		164877	0					
ANR	164917	Identifier	ctx		164877	0					
ANR	164918	Identifier	disabled		164877	1					
ANR	164919	OrExpression	! ctx -> blockTimeLimit || ! ctx -> ksi -> bInBlk		164877	1		||			
ANR	164920	UnaryOperationExpression	! ctx -> blockTimeLimit		164877	0					
ANR	164921	UnaryOperator	!		164877	0					
ANR	164922	PtrMemberAccess	ctx -> blockTimeLimit		164877	1					
ANR	164923	Identifier	ctx		164877	0					
ANR	164924	Identifier	blockTimeLimit		164877	1					
ANR	164925	UnaryOperationExpression	! ctx -> ksi -> bInBlk		164877	1					
ANR	164926	UnaryOperator	!		164877	0					
ANR	164927	PtrMemberAccess	ctx -> ksi -> bInBlk		164877	1					
ANR	164928	PtrMemberAccess	ctx -> ksi		164877	0					
ANR	164929	Identifier	ctx		164877	0					
ANR	164930	Identifier	ksi		164877	1					
ANR	164931	Identifier	bInBlk		164877	1					
ANR	164932	GotoStatement	goto done ;	966:2:25230:25239	164877	1	True				
ANR	164933	Identifier	done		164877	0					
ANR	164934	ExpressionStatement	now = time ( NULL )	968:1:25243:25259	164877	5	True				
ANR	164935	AssignmentExpression	now = time ( NULL )		164877	0		=			
ANR	164936	Identifier	now		164877	0					
ANR	164937	CallExpression	time ( NULL )		164877	1					
ANR	164938	Callee	time		164877	0					
ANR	164939	Identifier	time		164877	0					
ANR	164940	ArgumentList	NULL		164877	1					
ANR	164941	Argument	NULL		164877	0					
ANR	164942	Identifier	NULL		164877	0					
ANR	164943	IfStatement	if ( ctx -> ksi -> blockStarted + ctx -> blockTimeLimit > now )		164877	6					
ANR	164944	Condition	ctx -> ksi -> blockStarted + ctx -> blockTimeLimit > now	970:5:25267:25316	164877	0	True				
ANR	164945	RelationalExpression	ctx -> ksi -> blockStarted + ctx -> blockTimeLimit > now		164877	0		>			
ANR	164946	AdditiveExpression	ctx -> ksi -> blockStarted + ctx -> blockTimeLimit		164877	0		+			
ANR	164947	PtrMemberAccess	ctx -> ksi -> blockStarted		164877	0					
ANR	164948	PtrMemberAccess	ctx -> ksi		164877	0					
ANR	164949	Identifier	ctx		164877	0					
ANR	164950	Identifier	ksi		164877	1					
ANR	164951	Identifier	blockStarted		164877	1					
ANR	164952	PtrMemberAccess	ctx -> blockTimeLimit		164877	1					
ANR	164953	Identifier	ctx		164877	0					
ANR	164954	Identifier	blockTimeLimit		164877	1					
ANR	164955	Identifier	now		164877	1					
ANR	164956	GotoStatement	goto done ;	971:2:25321:25330	164877	1	True				
ANR	164957	Identifier	done		164877	0					
ANR	164958	ExpressionStatement	"snprintf ( buf , KSI_BUF_SIZE , ""Block closed due to reaching time limit %d"" , ctx -> blockTimeLimit )"	973:1:25334:25428	164877	7	True				
ANR	164959	CallExpression	"snprintf ( buf , KSI_BUF_SIZE , ""Block closed due to reaching time limit %d"" , ctx -> blockTimeLimit )"		164877	0					
ANR	164960	Callee	snprintf		164877	0					
ANR	164961	Identifier	snprintf		164877	0					
ANR	164962	ArgumentList	buf		164877	1					
ANR	164963	Argument	buf		164877	0					
ANR	164964	Identifier	buf		164877	0					
ANR	164965	Argument	KSI_BUF_SIZE		164877	1					
ANR	164966	Identifier	KSI_BUF_SIZE		164877	0					
ANR	164967	Argument	"""Block closed due to reaching time limit %d"""		164877	2					
ANR	164968	PrimaryExpression	"""Block closed due to reaching time limit %d"""		164877	0					
ANR	164969	Argument	ctx -> blockTimeLimit		164877	3					
ANR	164970	PtrMemberAccess	ctx -> blockTimeLimit		164877	0					
ANR	164971	Identifier	ctx		164877	0					
ANR	164972	Identifier	blockTimeLimit		164877	1					
ANR	164973	ExpressionStatement	"sigblkAddMetadata ( ctx -> ksi , blockCloseReason , buf )"	975:1:25432:25482	164877	8	True				
ANR	164974	CallExpression	"sigblkAddMetadata ( ctx -> ksi , blockCloseReason , buf )"		164877	0					
ANR	164975	Callee	sigblkAddMetadata		164877	0					
ANR	164976	Identifier	sigblkAddMetadata		164877	0					
ANR	164977	ArgumentList	ctx -> ksi		164877	1					
ANR	164978	Argument	ctx -> ksi		164877	0					
ANR	164979	PtrMemberAccess	ctx -> ksi		164877	0					
ANR	164980	Identifier	ctx		164877	0					
ANR	164981	Identifier	ksi		164877	1					
ANR	164982	Argument	blockCloseReason		164877	1					
ANR	164983	Identifier	blockCloseReason		164877	0					
ANR	164984	Argument	buf		164877	2					
ANR	164985	Identifier	buf		164877	0					
ANR	164986	ExpressionStatement	sigblkFinishKSI ( ctx -> ksi )	976:1:25485:25510	164877	9	True				
ANR	164987	CallExpression	sigblkFinishKSI ( ctx -> ksi )		164877	0					
ANR	164988	Callee	sigblkFinishKSI		164877	0					
ANR	164989	Identifier	sigblkFinishKSI		164877	0					
ANR	164990	ArgumentList	ctx -> ksi		164877	1					
ANR	164991	Argument	ctx -> ksi		164877	0					
ANR	164992	PtrMemberAccess	ctx -> ksi		164877	0					
ANR	164993	Identifier	ctx		164877	0					
ANR	164994	Identifier	ksi		164877	1					
ANR	164995	ExpressionStatement	sigblkInitKSI ( ctx -> ksi )	977:1:25513:25536	164877	10	True				
ANR	164996	CallExpression	sigblkInitKSI ( ctx -> ksi )		164877	0					
ANR	164997	Callee	sigblkInitKSI		164877	0					
ANR	164998	Identifier	sigblkInitKSI		164877	0					
ANR	164999	ArgumentList	ctx -> ksi		164877	1					
ANR	165000	Argument	ctx -> ksi		164877	0					
ANR	165001	PtrMemberAccess	ctx -> ksi		164877	0					
ANR	165002	Identifier	ctx		164877	0					
ANR	165003	Identifier	ksi		164877	1					
ANR	165004	Label	done :	979:0:25539:25543	164877	11	True				
ANR	165005	Identifier	done		164877	0					
ANR	165006	ExpressionStatement	pthread_mutex_unlock ( & ctx -> module_lock )	980:1:25546:25585	164877	12	True				
ANR	165007	CallExpression	pthread_mutex_unlock ( & ctx -> module_lock )		164877	0					
ANR	165008	Callee	pthread_mutex_unlock		164877	0					
ANR	165009	Identifier	pthread_mutex_unlock		164877	0					
ANR	165010	ArgumentList	& ctx -> module_lock		164877	1					
ANR	165011	Argument	& ctx -> module_lock		164877	0					
ANR	165012	UnaryOperationExpression	& ctx -> module_lock		164877	0					
ANR	165013	UnaryOperator	&		164877	0					
ANR	165014	PtrMemberAccess	ctx -> module_lock		164877	1					
ANR	165015	Identifier	ctx		164877	0					
ANR	165016	Identifier	module_lock		164877	1					
ANR	165017	ReturnStatement	return ret ;	981:1:25588:25598	164877	13	True				
ANR	165018	Identifier	ret		164877	0					
ANR	165019	ReturnType	static int		164877	1					
ANR	165020	Identifier	sigblkCheckTimeOut		164877	2					
ANR	165021	ParameterList	rsksictx ctx		164877	3					
ANR	165022	Parameter	rsksictx ctx	958:19:25040:25051	164877	0	True				
ANR	165023	ParameterType	rsksictx		164877	0					
ANR	165024	Identifier	ctx		164877	1					
ANR	165025	CFGEntryNode	ENTRY		164877		True				
ANR	165026	CFGExitNode	EXIT		164877		True				
ANR	165027	Symbol	ret		164877						
ANR	165028	Symbol	NULL		164877						
ANR	165029	Symbol	ctx		164877						
ANR	165030	Symbol	blockCloseReason		164877						
ANR	165031	Symbol	ctx -> ksi		164877						
ANR	165032	Symbol	ctx -> blockTimeLimit		164877						
ANR	165033	Symbol	ctx -> ksi -> bInBlk		164877						
ANR	165034	Symbol	ctx -> ksi -> blockStarted		164877						
ANR	165035	Symbol	* ctx		164877						
ANR	165036	Symbol	KSI_BUF_SIZE		164877						
ANR	165037	Symbol	buf		164877						
ANR	165038	Symbol	& ctx -> module_lock		164877						
ANR	165039	Symbol	now		164877						
ANR	165040	Symbol	ctx -> disabled		164877						
ANR	165041	Symbol	* * ctx		164877						
ANR	165042	Symbol	time		164877						
ANR	165043	Symbol	* ctx -> ksi		164877						
ANR	165044	Function	sigblkSign	984:0:25603:26769							
ANR	165045	FunctionDef	"sigblkSign (ksifile ksi , KSI_DataHash * hash , int level)"		165044	0					
ANR	165046	CompoundStatement		986:0:25669:26769	165044	0					
ANR	165047	IdentifierDeclStatement	unsigned char * der = NULL ;	987:1:25672:25697	165044	0	True				
ANR	165048	IdentifierDecl	* der = NULL		165044	0					
ANR	165049	IdentifierDeclType	unsigned char *		165044	0					
ANR	165050	Identifier	der		165044	1					
ANR	165051	AssignmentExpression	* der = NULL		165044	2		=			
ANR	165052	Identifier	NULL		165044	0					
ANR	165053	Identifier	NULL		165044	1					
ANR	165054	IdentifierDeclStatement	size_t lenDer = 0 ;	988:1:25700:25717	165044	1	True				
ANR	165055	IdentifierDecl	lenDer = 0		165044	0					
ANR	165056	IdentifierDeclType	size_t		165044	0					
ANR	165057	Identifier	lenDer		165044	1					
ANR	165058	AssignmentExpression	lenDer = 0		165044	2		=			
ANR	165059	Identifier	lenDer		165044	0					
ANR	165060	PrimaryExpression	0		165044	1					
ANR	165061	IdentifierDeclStatement	int r = KSI_OK ;	989:1:25720:25734	165044	2	True				
ANR	165062	IdentifierDecl	r = KSI_OK		165044	0					
ANR	165063	IdentifierDeclType	int		165044	0					
ANR	165064	Identifier	r		165044	1					
ANR	165065	AssignmentExpression	r = KSI_OK		165044	2		=			
ANR	165066	Identifier	KSI_OK		165044	0					
ANR	165067	Identifier	KSI_OK		165044	1					
ANR	165068	IdentifierDeclStatement	int ret = 0 ;	990:1:25737:25748	165044	3	True				
ANR	165069	IdentifierDecl	ret = 0		165044	0					
ANR	165070	IdentifierDeclType	int		165044	0					
ANR	165071	Identifier	ret		165044	1					
ANR	165072	AssignmentExpression	ret = 0		165044	2		=			
ANR	165073	Identifier	ret		165044	0					
ANR	165074	PrimaryExpression	0		165044	1					
ANR	165075	IdentifierDeclStatement	KSI_Signature * sig = NULL ;	991:1:25751:25776	165044	4	True				
ANR	165076	IdentifierDecl	* sig = NULL		165044	0					
ANR	165077	IdentifierDeclType	KSI_Signature *		165044	0					
ANR	165078	Identifier	sig		165044	1					
ANR	165079	AssignmentExpression	* sig = NULL		165044	2		=			
ANR	165080	Identifier	NULL		165044	0					
ANR	165081	Identifier	NULL		165044	1					
ANR	165082	ExpressionStatement	"r = KSI_Signature_signAggregated ( ksi -> ctx -> ksi_ctx , hash , level , & sig )"	994:1:25807:25877	165044	5	True				
ANR	165083	AssignmentExpression	"r = KSI_Signature_signAggregated ( ksi -> ctx -> ksi_ctx , hash , level , & sig )"		165044	0		=			
ANR	165084	Identifier	r		165044	0					
ANR	165085	CallExpression	"KSI_Signature_signAggregated ( ksi -> ctx -> ksi_ctx , hash , level , & sig )"		165044	1					
ANR	165086	Callee	KSI_Signature_signAggregated		165044	0					
ANR	165087	Identifier	KSI_Signature_signAggregated		165044	0					
ANR	165088	ArgumentList	ksi -> ctx -> ksi_ctx		165044	1					
ANR	165089	Argument	ksi -> ctx -> ksi_ctx		165044	0					
ANR	165090	PtrMemberAccess	ksi -> ctx -> ksi_ctx		165044	0					
ANR	165091	PtrMemberAccess	ksi -> ctx		165044	0					
ANR	165092	Identifier	ksi		165044	0					
ANR	165093	Identifier	ctx		165044	1					
ANR	165094	Identifier	ksi_ctx		165044	1					
ANR	165095	Argument	hash		165044	1					
ANR	165096	Identifier	hash		165044	0					
ANR	165097	Argument	level		165044	2					
ANR	165098	Identifier	level		165044	0					
ANR	165099	Argument	& sig		165044	3					
ANR	165100	UnaryOperationExpression	& sig		165044	0					
ANR	165101	UnaryOperator	&		165044	0					
ANR	165102	Identifier	sig		165044	1					
ANR	165103	IfStatement	if ( r != KSI_OK )		165044	6					
ANR	165104	Condition	r != KSI_OK	995:5:25884:25894	165044	0	True				
ANR	165105	EqualityExpression	r != KSI_OK		165044	0		!=			
ANR	165106	Identifier	r		165044	0					
ANR	165107	Identifier	KSI_OK		165044	1					
ANR	165108	CompoundStatement		10:18:227:227	165044	1					
ANR	165109	ExpressionStatement	"reportKSIAPIErr ( ksi -> ctx , ksi , ""KSI_Signature_createAggregated"" , r )"	996:2:25901:25968	165044	0	True				
ANR	165110	CallExpression	"reportKSIAPIErr ( ksi -> ctx , ksi , ""KSI_Signature_createAggregated"" , r )"		165044	0					
ANR	165111	Callee	reportKSIAPIErr		165044	0					
ANR	165112	Identifier	reportKSIAPIErr		165044	0					
ANR	165113	ArgumentList	ksi -> ctx		165044	1					
ANR	165114	Argument	ksi -> ctx		165044	0					
ANR	165115	PtrMemberAccess	ksi -> ctx		165044	0					
ANR	165116	Identifier	ksi		165044	0					
ANR	165117	Identifier	ctx		165044	1					
ANR	165118	Argument	ksi		165044	1					
ANR	165119	Identifier	ksi		165044	0					
ANR	165120	Argument	"""KSI_Signature_createAggregated"""		165044	2					
ANR	165121	PrimaryExpression	"""KSI_Signature_createAggregated"""		165044	0					
ANR	165122	Argument	r		165044	3					
ANR	165123	Identifier	r		165044	0					
ANR	165124	ExpressionStatement	ret = 1	997:2:25972:25979	165044	1	True				
ANR	165125	AssignmentExpression	ret = 1		165044	0		=			
ANR	165126	Identifier	ret		165044	0					
ANR	165127	PrimaryExpression	1		165044	1					
ANR	165128	GotoStatement	goto signing_done ;	998:2:25983:26000	165044	2	True				
ANR	165129	Identifier	signing_done		165044	0					
ANR	165130	ExpressionStatement	"r = KSI_Signature_serialize ( sig , & der , & lenDer )"	1002:1:26035:26082	165044	7	True				
ANR	165131	AssignmentExpression	"r = KSI_Signature_serialize ( sig , & der , & lenDer )"		165044	0		=			
ANR	165132	Identifier	r		165044	0					
ANR	165133	CallExpression	"KSI_Signature_serialize ( sig , & der , & lenDer )"		165044	1					
ANR	165134	Callee	KSI_Signature_serialize		165044	0					
ANR	165135	Identifier	KSI_Signature_serialize		165044	0					
ANR	165136	ArgumentList	sig		165044	1					
ANR	165137	Argument	sig		165044	0					
ANR	165138	Identifier	sig		165044	0					
ANR	165139	Argument	& der		165044	1					
ANR	165140	UnaryOperationExpression	& der		165044	0					
ANR	165141	UnaryOperator	&		165044	0					
ANR	165142	Identifier	der		165044	1					
ANR	165143	Argument	& lenDer		165044	2					
ANR	165144	UnaryOperationExpression	& lenDer		165044	0					
ANR	165145	UnaryOperator	&		165044	0					
ANR	165146	Identifier	lenDer		165044	1					
ANR	165147	IfStatement	if ( r != KSI_OK )		165044	8					
ANR	165148	Condition	r != KSI_OK	1003:5:26089:26099	165044	0	True				
ANR	165149	EqualityExpression	r != KSI_OK		165044	0		!=			
ANR	165150	Identifier	r		165044	0					
ANR	165151	Identifier	KSI_OK		165044	1					
ANR	165152	CompoundStatement		18:18:432:432	165044	1					
ANR	165153	ExpressionStatement	"reportKSIAPIErr ( ksi -> ctx , ksi , ""KSI_Signature_serialize"" , r )"	1004:2:26106:26166	165044	0	True				
ANR	165154	CallExpression	"reportKSIAPIErr ( ksi -> ctx , ksi , ""KSI_Signature_serialize"" , r )"		165044	0					
ANR	165155	Callee	reportKSIAPIErr		165044	0					
ANR	165156	Identifier	reportKSIAPIErr		165044	0					
ANR	165157	ArgumentList	ksi -> ctx		165044	1					
ANR	165158	Argument	ksi -> ctx		165044	0					
ANR	165159	PtrMemberAccess	ksi -> ctx		165044	0					
ANR	165160	Identifier	ksi		165044	0					
ANR	165161	Identifier	ctx		165044	1					
ANR	165162	Argument	ksi		165044	1					
ANR	165163	Identifier	ksi		165044	0					
ANR	165164	Argument	"""KSI_Signature_serialize"""		165044	2					
ANR	165165	PrimaryExpression	"""KSI_Signature_serialize"""		165044	0					
ANR	165166	Argument	r		165044	3					
ANR	165167	Identifier	r		165044	0					
ANR	165168	ExpressionStatement	ret = 1	1005:2:26170:26177	165044	1	True				
ANR	165169	AssignmentExpression	ret = 1		165044	0		=			
ANR	165170	Identifier	ret		165044	0					
ANR	165171	PrimaryExpression	1		165044	1					
ANR	165172	GotoStatement	goto signing_done ;	1006:2:26181:26198	165044	2	True				
ANR	165173	Identifier	signing_done		165044	0					
ANR	165174	ExpressionStatement	lenDer = 0	1007:2:26202:26212	165044	3	True				
ANR	165175	AssignmentExpression	lenDer = 0		165044	0		=			
ANR	165176	Identifier	lenDer		165044	0					
ANR	165177	PrimaryExpression	0		165044	1					
ANR	165178	Label	signing_done :	1010:0:26218:26230	165044	9	True				
ANR	165179	Identifier	signing_done		165044	0					
ANR	165180	IfStatement	if ( r == KSI_OK )		165044	10					
ANR	165181	Condition	r == KSI_OK	1012:5:26305:26315	165044	0	True				
ANR	165182	EqualityExpression	r == KSI_OK		165044	0		==			
ANR	165183	Identifier	r		165044	0					
ANR	165184	Identifier	KSI_OK		165044	1					
ANR	165185	CompoundStatement		27:18:648:648	165044	1					
ANR	165186	ExpressionStatement	"r = tlvWriteKSISigLS12 ( ksi -> blockFile , ksi -> nRecords , der , lenDer )"	1013:2:26322:26388	165044	0	True				
ANR	165187	AssignmentExpression	"r = tlvWriteKSISigLS12 ( ksi -> blockFile , ksi -> nRecords , der , lenDer )"		165044	0		=			
ANR	165188	Identifier	r		165044	0					
ANR	165189	CallExpression	"tlvWriteKSISigLS12 ( ksi -> blockFile , ksi -> nRecords , der , lenDer )"		165044	1					
ANR	165190	Callee	tlvWriteKSISigLS12		165044	0					
ANR	165191	Identifier	tlvWriteKSISigLS12		165044	0					
ANR	165192	ArgumentList	ksi -> blockFile		165044	1					
ANR	165193	Argument	ksi -> blockFile		165044	0					
ANR	165194	PtrMemberAccess	ksi -> blockFile		165044	0					
ANR	165195	Identifier	ksi		165044	0					
ANR	165196	Identifier	blockFile		165044	1					
ANR	165197	Argument	ksi -> nRecords		165044	1					
ANR	165198	PtrMemberAccess	ksi -> nRecords		165044	0					
ANR	165199	Identifier	ksi		165044	0					
ANR	165200	Identifier	nRecords		165044	1					
ANR	165201	Argument	der		165044	2					
ANR	165202	Identifier	der		165044	0					
ANR	165203	Argument	lenDer		165044	3					
ANR	165204	Identifier	lenDer		165044	0					
ANR	165205	IfStatement	if ( r != KSI_OK )		165044	1					
ANR	165206	Condition	r != KSI_OK	1014:6:26396:26406	165044	0	True				
ANR	165207	EqualityExpression	r != KSI_OK		165044	0		!=			
ANR	165208	Identifier	r		165044	0					
ANR	165209	Identifier	KSI_OK		165044	1					
ANR	165210	CompoundStatement		29:19:739:739	165044	1					
ANR	165211	ExpressionStatement	"reportKSIAPIErr ( ksi -> ctx , ksi , ""tlvWriteKSISigLS12"" , r )"	1015:3:26414:26469	165044	0	True				
ANR	165212	CallExpression	"reportKSIAPIErr ( ksi -> ctx , ksi , ""tlvWriteKSISigLS12"" , r )"		165044	0					
ANR	165213	Callee	reportKSIAPIErr		165044	0					
ANR	165214	Identifier	reportKSIAPIErr		165044	0					
ANR	165215	ArgumentList	ksi -> ctx		165044	1					
ANR	165216	Argument	ksi -> ctx		165044	0					
ANR	165217	PtrMemberAccess	ksi -> ctx		165044	0					
ANR	165218	Identifier	ksi		165044	0					
ANR	165219	Identifier	ctx		165044	1					
ANR	165220	Argument	ksi		165044	1					
ANR	165221	Identifier	ksi		165044	0					
ANR	165222	Argument	"""tlvWriteKSISigLS12"""		165044	2					
ANR	165223	PrimaryExpression	"""tlvWriteKSISigLS12"""		165044	0					
ANR	165224	Argument	r		165044	3					
ANR	165225	Identifier	r		165044	0					
ANR	165226	ExpressionStatement	ret = 1	1016:3:26474:26481	165044	1	True				
ANR	165227	AssignmentExpression	ret = 1		165044	0		=			
ANR	165228	Identifier	ret		165044	0					
ANR	165229	PrimaryExpression	1		165044	1					
ANR	165230	ElseStatement	else		165044	0					
ANR	165231	ExpressionStatement	"r = tlvWriteNoSigLS12 ( ksi -> blockFile , ksi -> nRecords , hash , KSI_getErrorString ( r ) )"	1019:2:26497:26578	165044	0	True				
ANR	165232	AssignmentExpression	"r = tlvWriteNoSigLS12 ( ksi -> blockFile , ksi -> nRecords , hash , KSI_getErrorString ( r ) )"		165044	0		=			
ANR	165233	Identifier	r		165044	0					
ANR	165234	CallExpression	"tlvWriteNoSigLS12 ( ksi -> blockFile , ksi -> nRecords , hash , KSI_getErrorString ( r ) )"		165044	1					
ANR	165235	Callee	tlvWriteNoSigLS12		165044	0					
ANR	165236	Identifier	tlvWriteNoSigLS12		165044	0					
ANR	165237	ArgumentList	ksi -> blockFile		165044	1					
ANR	165238	Argument	ksi -> blockFile		165044	0					
ANR	165239	PtrMemberAccess	ksi -> blockFile		165044	0					
ANR	165240	Identifier	ksi		165044	0					
ANR	165241	Identifier	blockFile		165044	1					
ANR	165242	Argument	ksi -> nRecords		165044	1					
ANR	165243	PtrMemberAccess	ksi -> nRecords		165044	0					
ANR	165244	Identifier	ksi		165044	0					
ANR	165245	Identifier	nRecords		165044	1					
ANR	165246	Argument	hash		165044	2					
ANR	165247	Identifier	hash		165044	0					
ANR	165248	Argument	KSI_getErrorString ( r )		165044	3					
ANR	165249	CallExpression	KSI_getErrorString ( r )		165044	0					
ANR	165250	Callee	KSI_getErrorString		165044	0					
ANR	165251	Identifier	KSI_getErrorString		165044	0					
ANR	165252	ArgumentList	r		165044	1					
ANR	165253	Argument	r		165044	0					
ANR	165254	Identifier	r		165044	0					
ANR	165255	IfStatement	if ( r != KSI_OK )		165044	11					
ANR	165256	Condition	r != KSI_OK	1021:5:26586:26596	165044	0	True				
ANR	165257	EqualityExpression	r != KSI_OK		165044	0		!=			
ANR	165258	Identifier	r		165044	0					
ANR	165259	Identifier	KSI_OK		165044	1					
ANR	165260	CompoundStatement		36:18:929:929	165044	1					
ANR	165261	ExpressionStatement	"reportKSIAPIErr ( ksi -> ctx , ksi , ""tlvWriteBlockSigKSI"" , r )"	1022:2:26603:26659	165044	0	True				
ANR	165262	CallExpression	"reportKSIAPIErr ( ksi -> ctx , ksi , ""tlvWriteBlockSigKSI"" , r )"		165044	0					
ANR	165263	Callee	reportKSIAPIErr		165044	0					
ANR	165264	Identifier	reportKSIAPIErr		165044	0					
ANR	165265	ArgumentList	ksi -> ctx		165044	1					
ANR	165266	Argument	ksi -> ctx		165044	0					
ANR	165267	PtrMemberAccess	ksi -> ctx		165044	0					
ANR	165268	Identifier	ksi		165044	0					
ANR	165269	Identifier	ctx		165044	1					
ANR	165270	Argument	ksi		165044	1					
ANR	165271	Identifier	ksi		165044	0					
ANR	165272	Argument	"""tlvWriteBlockSigKSI"""		165044	2					
ANR	165273	PrimaryExpression	"""tlvWriteBlockSigKSI"""		165044	0					
ANR	165274	Argument	r		165044	3					
ANR	165275	Identifier	r		165044	0					
ANR	165276	ExpressionStatement	ret = 1	1023:2:26663:26670	165044	1	True				
ANR	165277	AssignmentExpression	ret = 1		165044	0		=			
ANR	165278	Identifier	ret		165044	0					
ANR	165279	PrimaryExpression	1		165044	1					
ANR	165280	IfStatement	if ( sig != NULL )		165044	12					
ANR	165281	Condition	sig != NULL	1026:5:26681:26691	165044	0	True				
ANR	165282	EqualityExpression	sig != NULL		165044	0		!=			
ANR	165283	Identifier	sig		165044	0					
ANR	165284	Identifier	NULL		165044	1					
ANR	165285	ExpressionStatement	KSI_Signature_free ( sig )	1027:2:26696:26719	165044	1	True				
ANR	165286	CallExpression	KSI_Signature_free ( sig )		165044	0					
ANR	165287	Callee	KSI_Signature_free		165044	0					
ANR	165288	Identifier	KSI_Signature_free		165044	0					
ANR	165289	ArgumentList	sig		165044	1					
ANR	165290	Argument	sig		165044	0					
ANR	165291	Identifier	sig		165044	0					
ANR	165292	IfStatement	if ( der != NULL )		165044	13					
ANR	165293	Condition	der != NULL	1028:5:26726:26736	165044	0	True				
ANR	165294	EqualityExpression	der != NULL		165044	0		!=			
ANR	165295	Identifier	der		165044	0					
ANR	165296	Identifier	NULL		165044	1					
ANR	165297	ExpressionStatement	KSI_free ( der )	1029:2:26741:26754	165044	1	True				
ANR	165298	CallExpression	KSI_free ( der )		165044	0					
ANR	165299	Callee	KSI_free		165044	0					
ANR	165300	Identifier	KSI_free		165044	0					
ANR	165301	ArgumentList	der		165044	1					
ANR	165302	Argument	der		165044	0					
ANR	165303	Identifier	der		165044	0					
ANR	165304	ReturnStatement	return ret ;	1030:1:26757:26767	165044	14	True				
ANR	165305	Identifier	ret		165044	0					
ANR	165306	ReturnType	static int		165044	1					
ANR	165307	Identifier	sigblkSign		165044	2					
ANR	165308	ParameterList	"ksifile ksi , KSI_DataHash * hash , int level"		165044	3					
ANR	165309	Parameter	ksifile ksi	985:11:25625:25635	165044	0	True				
ANR	165310	ParameterType	ksifile		165044	0					
ANR	165311	Identifier	ksi		165044	1					
ANR	165312	Parameter	KSI_DataHash * hash	985:24:25638:25655	165044	1	True				
ANR	165313	ParameterType	KSI_DataHash *		165044	0					
ANR	165314	Identifier	hash		165044	1					
ANR	165315	Parameter	int level	985:44:25658:25666	165044	2	True				
ANR	165316	ParameterType	int		165044	0					
ANR	165317	Identifier	level		165044	1					
ANR	165318	CFGEntryNode	ENTRY		165044		True				
ANR	165319	CFGExitNode	EXIT		165044		True				
ANR	165320	Symbol	ksi		165044						
ANR	165321	Symbol	tlvWriteNoSigLS12		165044						
ANR	165322	Symbol	KSI_Signature_serialize		165044						
ANR	165323	Symbol	tlvWriteKSISigLS12		165044						
ANR	165324	Symbol	der		165044						
ANR	165325	Symbol	sig		165044						
ANR	165326	Symbol	KSI_OK		165044						
ANR	165327	Symbol	* * ksi		165044						
ANR	165328	Symbol	KSI_getErrorString		165044						
ANR	165329	Symbol	ksi -> blockFile		165044						
ANR	165330	Symbol	ret		165044						
ANR	165331	Symbol	ksi -> ctx		165044						
ANR	165332	Symbol	NULL		165044						
ANR	165333	Symbol	level		165044						
ANR	165334	Symbol	ksi -> ctx -> ksi_ctx		165044						
ANR	165335	Symbol	* ksi		165044						
ANR	165336	Symbol	& sig		165044						
ANR	165337	Symbol	& der		165044						
ANR	165338	Symbol	lenDer		165044						
ANR	165339	Symbol	ksi -> nRecords		165044						
ANR	165340	Symbol	r		165044						
ANR	165341	Symbol	& lenDer		165044						
ANR	165342	Symbol	KSI_Signature_signAggregated		165044						
ANR	165343	Symbol	hash		165044						
ANR	165344	Symbol	* ksi -> ctx		165044						
ANR	165345	Function	sigblkFinishKSI	1033:0:26772:27848							
ANR	165346	FunctionDef	sigblkFinishKSI (ksifile ksi)		165345	0					
ANR	165347	CompoundStatement		1035:0:26805:27848	165345	0					
ANR	165348	IdentifierDeclStatement	"KSI_DataHash * root , * rootDel ;"	1036:1:26808:26836	165345	0	True				
ANR	165349	IdentifierDecl	* root		165345	0					
ANR	165350	IdentifierDeclType	KSI_DataHash *		165345	0					
ANR	165351	Identifier	root		165345	1					
ANR	165352	IdentifierDecl	* rootDel		165345	1					
ANR	165353	IdentifierDeclType	KSI_DataHash *		165345	0					
ANR	165354	Identifier	rootDel		165345	1					
ANR	165355	IdentifierDeclStatement	int8_t j ;	1037:1:26839:26847	165345	1	True				
ANR	165356	IdentifierDecl	j		165345	0					
ANR	165357	IdentifierDeclType	int8_t		165345	0					
ANR	165358	Identifier	j		165345	1					
ANR	165359	IdentifierDeclStatement	int ret = 0 ;	1038:1:26850:26861	165345	2	True				
ANR	165360	IdentifierDecl	ret = 0		165345	0					
ANR	165361	IdentifierDeclType	int		165345	0					
ANR	165362	Identifier	ret		165345	1					
ANR	165363	AssignmentExpression	ret = 0		165345	2		=			
ANR	165364	Identifier	ret		165345	0					
ANR	165365	PrimaryExpression	0		165345	1					
ANR	165366	IdentifierDeclStatement	int level = 0 ;	1039:1:26864:26877	165345	3	True				
ANR	165367	IdentifierDecl	level = 0		165345	0					
ANR	165368	IdentifierDeclType	int		165345	0					
ANR	165369	Identifier	level		165345	1					
ANR	165370	AssignmentExpression	level = 0		165345	2		=			
ANR	165371	Identifier	level		165345	0					
ANR	165372	PrimaryExpression	0		165345	1					
ANR	165373	IfStatement	if ( ksi -> nRecords == 0 )		165345	4					
ANR	165374	Condition	ksi -> nRecords == 0	1041:5:26885:26902	165345	0	True				
ANR	165375	EqualityExpression	ksi -> nRecords == 0		165345	0		==			
ANR	165376	PtrMemberAccess	ksi -> nRecords		165345	0					
ANR	165377	Identifier	ksi		165345	0					
ANR	165378	Identifier	nRecords		165345	1					
ANR	165379	PrimaryExpression	0		165345	1					
ANR	165380	GotoStatement	goto done ;	1042:2:26907:26916	165345	1	True				
ANR	165381	Identifier	done		165345	0					
ANR	165382	ExpressionStatement	root = NULL	1044:1:26920:26931	165345	5	True				
ANR	165383	AssignmentExpression	root = NULL		165345	0		=			
ANR	165384	Identifier	root		165345	0					
ANR	165385	Identifier	NULL		165345	1					
ANR	165386	ForStatement	for ( j = 0 ; j < ksi -> nRoots ; ++ j )		165345	6					
ANR	165387	ForInit	j = 0 ;	1045:5:26938:26944	165345	0	True				
ANR	165388	AssignmentExpression	j = 0		165345	0		=			
ANR	165389	Identifier	j		165345	0					
ANR	165390	PrimaryExpression	0		165345	1					
ANR	165391	Condition	j < ksi -> nRoots	1045:13:26946:26960	165345	1	True				
ANR	165392	RelationalExpression	j < ksi -> nRoots		165345	0		<			
ANR	165393	Identifier	j		165345	0					
ANR	165394	PtrMemberAccess	ksi -> nRoots		165345	1					
ANR	165395	Identifier	ksi		165345	0					
ANR	165396	Identifier	nRoots		165345	1					
ANR	165397	UnaryExpression	++ j	1045:31:26964:26966	165345	2	True				
ANR	165398	IncDec	++		165345	0					
ANR	165399	Identifier	j		165345	1					
ANR	165400	CompoundStatement		11:36:163:163	165345	3					
ANR	165401	IfStatement	if ( root == NULL )		165345	0					
ANR	165402	Condition	root == NULL	1046:5:26976:26987	165345	0	True				
ANR	165403	EqualityExpression	root == NULL		165345	0		==			
ANR	165404	Identifier	root		165345	0					
ANR	165405	Identifier	NULL		165345	1					
ANR	165406	CompoundStatement		12:19:184:184	165345	1					
ANR	165407	ExpressionStatement	root = ksi -> roots [ j ]	1047:3:26995:27015	165345	0	True				
ANR	165408	AssignmentExpression	root = ksi -> roots [ j ]		165345	0		=			
ANR	165409	Identifier	root		165345	0					
ANR	165410	ArrayIndexing	ksi -> roots [ j ]		165345	1					
ANR	165411	PtrMemberAccess	ksi -> roots		165345	0					
ANR	165412	Identifier	ksi		165345	0					
ANR	165413	Identifier	roots		165345	1					
ANR	165414	Identifier	j		165345	1					
ANR	165415	ExpressionStatement	ksi -> roots [ j ] = NULL	1048:3:27020:27040	165345	1	True				
ANR	165416	AssignmentExpression	ksi -> roots [ j ] = NULL		165345	0		=			
ANR	165417	ArrayIndexing	ksi -> roots [ j ]		165345	0					
ANR	165418	PtrMemberAccess	ksi -> roots		165345	0					
ANR	165419	Identifier	ksi		165345	0					
ANR	165420	Identifier	roots		165345	1					
ANR	165421	Identifier	j		165345	1					
ANR	165422	Identifier	NULL		165345	1					
ANR	165423	ElseStatement	else		165345	0					
ANR	165424	IfStatement	if ( ksi -> roots [ j ] != NULL )		165345	0					
ANR	165425	Condition	ksi -> roots [ j ] != NULL	1049:13:27055:27075	165345	0	True				
ANR	165426	EqualityExpression	ksi -> roots [ j ] != NULL		165345	0		!=			
ANR	165427	ArrayIndexing	ksi -> roots [ j ]		165345	0					
ANR	165428	PtrMemberAccess	ksi -> roots		165345	0					
ANR	165429	Identifier	ksi		165345	0					
ANR	165430	Identifier	roots		165345	1					
ANR	165431	Identifier	j		165345	1					
ANR	165432	Identifier	NULL		165345	1					
ANR	165433	CompoundStatement		15:36:272:272	165345	1					
ANR	165434	ExpressionStatement	rootDel = root	1050:3:27083:27097	165345	0	True				
ANR	165435	AssignmentExpression	rootDel = root		165345	0		=			
ANR	165436	Identifier	rootDel		165345	0					
ANR	165437	Identifier	root		165345	1					
ANR	165438	ExpressionStatement	"ret = sigblkHashTwoNodes ( ksi , & root , ksi -> roots [ j ] , rootDel , j + 2 )"	1051:3:27102:27169	165345	1	True				
ANR	165439	AssignmentExpression	"ret = sigblkHashTwoNodes ( ksi , & root , ksi -> roots [ j ] , rootDel , j + 2 )"		165345	0		=			
ANR	165440	Identifier	ret		165345	0					
ANR	165441	CallExpression	"sigblkHashTwoNodes ( ksi , & root , ksi -> roots [ j ] , rootDel , j + 2 )"		165345	1					
ANR	165442	Callee	sigblkHashTwoNodes		165345	0					
ANR	165443	Identifier	sigblkHashTwoNodes		165345	0					
ANR	165444	ArgumentList	ksi		165345	1					
ANR	165445	Argument	ksi		165345	0					
ANR	165446	Identifier	ksi		165345	0					
ANR	165447	Argument	& root		165345	1					
ANR	165448	UnaryOperationExpression	& root		165345	0					
ANR	165449	UnaryOperator	&		165345	0					
ANR	165450	Identifier	root		165345	1					
ANR	165451	Argument	ksi -> roots [ j ]		165345	2					
ANR	165452	ArrayIndexing	ksi -> roots [ j ]		165345	0					
ANR	165453	PtrMemberAccess	ksi -> roots		165345	0					
ANR	165454	Identifier	ksi		165345	0					
ANR	165455	Identifier	roots		165345	1					
ANR	165456	Identifier	j		165345	1					
ANR	165457	Argument	rootDel		165345	3					
ANR	165458	Identifier	rootDel		165345	0					
ANR	165459	Argument	j + 2		165345	4					
ANR	165460	AdditiveExpression	j + 2		165345	0		+			
ANR	165461	Identifier	j		165345	0					
ANR	165462	PrimaryExpression	2		165345	1					
ANR	165463	ExpressionStatement	KSI_DataHash_free ( ksi -> roots [ j ] )	1052:3:27174:27206	165345	2	True				
ANR	165464	CallExpression	KSI_DataHash_free ( ksi -> roots [ j ] )		165345	0					
ANR	165465	Callee	KSI_DataHash_free		165345	0					
ANR	165466	Identifier	KSI_DataHash_free		165345	0					
ANR	165467	ArgumentList	ksi -> roots [ j ]		165345	1					
ANR	165468	Argument	ksi -> roots [ j ]		165345	0					
ANR	165469	ArrayIndexing	ksi -> roots [ j ]		165345	0					
ANR	165470	PtrMemberAccess	ksi -> roots		165345	0					
ANR	165471	Identifier	ksi		165345	0					
ANR	165472	Identifier	roots		165345	1					
ANR	165473	Identifier	j		165345	1					
ANR	165474	ExpressionStatement	ksi -> roots [ j ] = NULL	1053:3:27211:27231	165345	3	True				
ANR	165475	AssignmentExpression	ksi -> roots [ j ] = NULL		165345	0		=			
ANR	165476	ArrayIndexing	ksi -> roots [ j ]		165345	0					
ANR	165477	PtrMemberAccess	ksi -> roots		165345	0					
ANR	165478	Identifier	ksi		165345	0					
ANR	165479	Identifier	roots		165345	1					
ANR	165480	Identifier	j		165345	1					
ANR	165481	Identifier	NULL		165345	1					
ANR	165482	ExpressionStatement	KSI_DataHash_free ( rootDel )	1054:3:27236:27262	165345	4	True				
ANR	165483	CallExpression	KSI_DataHash_free ( rootDel )		165345	0					
ANR	165484	Callee	KSI_DataHash_free		165345	0					
ANR	165485	Identifier	KSI_DataHash_free		165345	0					
ANR	165486	ArgumentList	rootDel		165345	1					
ANR	165487	Argument	rootDel		165345	0					
ANR	165488	Identifier	rootDel		165345	0					
ANR	165489	IfStatement	if ( ret != 0 )		165345	5					
ANR	165490	Condition	ret != 0	1055:6:27270:27277	165345	0	True				
ANR	165491	EqualityExpression	ret != 0		165345	0		!=			
ANR	165492	Identifier	ret		165345	0					
ANR	165493	PrimaryExpression	0		165345	1					
ANR	165494	GotoStatement	goto done ;	1055:16:27280:27289	165345	1	True				
ANR	165495	Identifier	done		165345	0					
ANR	165496	ExpressionStatement	level = j	1059:1:27337:27346	165345	7	True				
ANR	165497	AssignmentExpression	level = j		165345	0		=			
ANR	165498	Identifier	level		165345	0					
ANR	165499	Identifier	j		165345	1					
ANR	165500	IfStatement	if ( ksi -> ctx -> syncMode == LOGSIG_ASYNCHRONOUS )		165345	8					
ANR	165501	Condition	ksi -> ctx -> syncMode == LOGSIG_ASYNCHRONOUS	1062:5:27419:27459	165345	0	True				
ANR	165502	EqualityExpression	ksi -> ctx -> syncMode == LOGSIG_ASYNCHRONOUS		165345	0		==			
ANR	165503	PtrMemberAccess	ksi -> ctx -> syncMode		165345	0					
ANR	165504	PtrMemberAccess	ksi -> ctx		165345	0					
ANR	165505	Identifier	ksi		165345	0					
ANR	165506	Identifier	ctx		165345	1					
ANR	165507	Identifier	syncMode		165345	1					
ANR	165508	Identifier	LOGSIG_ASYNCHRONOUS		165345	1					
ANR	165509	CompoundStatement		28:48:656:656	165345	1					
ANR	165510	ExpressionStatement	"ret = tlvWriteNoSigLS12 ( ksi -> blockFile , ksi -> nRecords , root , NULL )"	1063:2:27466:27532	165345	0	True				
ANR	165511	AssignmentExpression	"ret = tlvWriteNoSigLS12 ( ksi -> blockFile , ksi -> nRecords , root , NULL )"		165345	0		=			
ANR	165512	Identifier	ret		165345	0					
ANR	165513	CallExpression	"tlvWriteNoSigLS12 ( ksi -> blockFile , ksi -> nRecords , root , NULL )"		165345	1					
ANR	165514	Callee	tlvWriteNoSigLS12		165345	0					
ANR	165515	Identifier	tlvWriteNoSigLS12		165345	0					
ANR	165516	ArgumentList	ksi -> blockFile		165345	1					
ANR	165517	Argument	ksi -> blockFile		165345	0					
ANR	165518	PtrMemberAccess	ksi -> blockFile		165345	0					
ANR	165519	Identifier	ksi		165345	0					
ANR	165520	Identifier	blockFile		165345	1					
ANR	165521	Argument	ksi -> nRecords		165345	1					
ANR	165522	PtrMemberAccess	ksi -> nRecords		165345	0					
ANR	165523	Identifier	ksi		165345	0					
ANR	165524	Identifier	nRecords		165345	1					
ANR	165525	Argument	root		165345	2					
ANR	165526	Identifier	root		165345	0					
ANR	165527	Argument	NULL		165345	3					
ANR	165528	Identifier	NULL		165345	0					
ANR	165529	IfStatement	if ( ret != KSI_OK )		165345	1					
ANR	165530	Condition	ret != KSI_OK	1064:6:27540:27552	165345	0	True				
ANR	165531	EqualityExpression	ret != KSI_OK		165345	0		!=			
ANR	165532	Identifier	ret		165345	0					
ANR	165533	Identifier	KSI_OK		165345	1					
ANR	165534	CompoundStatement		30:21:749:749	165345	1					
ANR	165535	ExpressionStatement	"reportKSIAPIErr ( ksi -> ctx , ksi , ""tlvWriteNoSigLS12"" , ret )"	1065:3:27560:27616	165345	0	True				
ANR	165536	CallExpression	"reportKSIAPIErr ( ksi -> ctx , ksi , ""tlvWriteNoSigLS12"" , ret )"		165345	0					
ANR	165537	Callee	reportKSIAPIErr		165345	0					
ANR	165538	Identifier	reportKSIAPIErr		165345	0					
ANR	165539	ArgumentList	ksi -> ctx		165345	1					
ANR	165540	Argument	ksi -> ctx		165345	0					
ANR	165541	PtrMemberAccess	ksi -> ctx		165345	0					
ANR	165542	Identifier	ksi		165345	0					
ANR	165543	Identifier	ctx		165345	1					
ANR	165544	Argument	ksi		165345	1					
ANR	165545	Identifier	ksi		165345	0					
ANR	165546	Argument	"""tlvWriteNoSigLS12"""		165345	2					
ANR	165547	PrimaryExpression	"""tlvWriteNoSigLS12"""		165345	0					
ANR	165548	Argument	ret		165345	3					
ANR	165549	Identifier	ret		165345	0					
ANR	165550	ExpressionStatement	ret = 1	1066:3:27621:27628	165345	1	True				
ANR	165551	AssignmentExpression	ret = 1		165345	0		=			
ANR	165552	Identifier	ret		165345	0					
ANR	165553	PrimaryExpression	1		165345	1					
ANR	165554	ExpressionStatement	"add_queue_item ( ksi -> ctx , QITEM_SIGNATURE_REQUEST , root , ksi -> nRecords , level )"	1069:2:27637:27714	165345	2	True				
ANR	165555	CallExpression	"add_queue_item ( ksi -> ctx , QITEM_SIGNATURE_REQUEST , root , ksi -> nRecords , level )"		165345	0					
ANR	165556	Callee	add_queue_item		165345	0					
ANR	165557	Identifier	add_queue_item		165345	0					
ANR	165558	ArgumentList	ksi -> ctx		165345	1					
ANR	165559	Argument	ksi -> ctx		165345	0					
ANR	165560	PtrMemberAccess	ksi -> ctx		165345	0					
ANR	165561	Identifier	ksi		165345	0					
ANR	165562	Identifier	ctx		165345	1					
ANR	165563	Argument	QITEM_SIGNATURE_REQUEST		165345	1					
ANR	165564	Identifier	QITEM_SIGNATURE_REQUEST		165345	0					
ANR	165565	Argument	root		165345	2					
ANR	165566	Identifier	root		165345	0					
ANR	165567	Argument	ksi -> nRecords		165345	3					
ANR	165568	PtrMemberAccess	ksi -> nRecords		165345	0					
ANR	165569	Identifier	ksi		165345	0					
ANR	165570	Identifier	nRecords		165345	1					
ANR	165571	Argument	level		165345	4					
ANR	165572	Identifier	level		165345	0					
ANR	165573	ElseStatement	else		165345	0					
ANR	165574	CompoundStatement		36:8:918:918	165345	0					
ANR	165575	ExpressionStatement	"sigblkSign ( ksi , root , level )"	1071:2:27728:27756	165345	0	True				
ANR	165576	CallExpression	"sigblkSign ( ksi , root , level )"		165345	0					
ANR	165577	Callee	sigblkSign		165345	0					
ANR	165578	Identifier	sigblkSign		165345	0					
ANR	165579	ArgumentList	ksi		165345	1					
ANR	165580	Argument	ksi		165345	0					
ANR	165581	Identifier	ksi		165345	0					
ANR	165582	Argument	root		165345	1					
ANR	165583	Identifier	root		165345	0					
ANR	165584	Argument	level		165345	2					
ANR	165585	Identifier	level		165345	0					
ANR	165586	ExpressionStatement	KSI_DataHash_free ( root )	1072:2:27760:27783	165345	1	True				
ANR	165587	CallExpression	KSI_DataHash_free ( root )		165345	0					
ANR	165588	Callee	KSI_DataHash_free		165345	0					
ANR	165589	Identifier	KSI_DataHash_free		165345	0					
ANR	165590	ArgumentList	root		165345	1					
ANR	165591	Argument	root		165345	0					
ANR	165592	Identifier	root		165345	0					
ANR	165593	Label	done :	1075:0:27811:27815	165345	9	True				
ANR	165594	Identifier	done		165345	0					
ANR	165595	ExpressionStatement	ksi -> bInBlk = 0	1076:1:27818:27833	165345	10	True				
ANR	165596	AssignmentExpression	ksi -> bInBlk = 0		165345	0		=			
ANR	165597	PtrMemberAccess	ksi -> bInBlk		165345	0					
ANR	165598	Identifier	ksi		165345	0					
ANR	165599	Identifier	bInBlk		165345	1					
ANR	165600	PrimaryExpression	0		165345	1					
ANR	165601	ReturnStatement	return ret ;	1077:1:27836:27846	165345	11	True				
ANR	165602	Identifier	ret		165345	0					
ANR	165603	ReturnType	int		165345	1					
ANR	165604	Identifier	sigblkFinishKSI		165345	2					
ANR	165605	ParameterList	ksifile ksi		165345	3					
ANR	165606	Parameter	ksifile ksi	1034:16:26792:26802	165345	0	True				
ANR	165607	ParameterType	ksifile		165345	0					
ANR	165608	Identifier	ksi		165345	1					
ANR	165609	CFGEntryNode	ENTRY		165345		True				
ANR	165610	CFGExitNode	EXIT		165345		True				
ANR	165611	Symbol	ksi		165345						
ANR	165612	Symbol	tlvWriteNoSigLS12		165345						
ANR	165613	Symbol	LOGSIG_ASYNCHRONOUS		165345						
ANR	165614	Symbol	rootDel		165345						
ANR	165615	Symbol	& root		165345						
ANR	165616	Symbol	* ksi -> roots		165345						
ANR	165617	Symbol	ksi -> ctx -> syncMode		165345						
ANR	165618	Symbol	QITEM_SIGNATURE_REQUEST		165345						
ANR	165619	Symbol	* * ksi		165345						
ANR	165620	Symbol	KSI_OK		165345						
ANR	165621	Symbol	root		165345						
ANR	165622	Symbol	ksi -> blockFile		165345						
ANR	165623	Symbol	ret		165345						
ANR	165624	Symbol	ksi -> ctx		165345						
ANR	165625	Symbol	NULL		165345						
ANR	165626	Symbol	ksi -> nRoots		165345						
ANR	165627	Symbol	level		165345						
ANR	165628	Symbol	j		165345						
ANR	165629	Symbol	* ksi		165345						
ANR	165630	Symbol	ksi -> nRecords		165345						
ANR	165631	Symbol	sigblkHashTwoNodes		165345						
ANR	165632	Symbol	* j		165345						
ANR	165633	Symbol	ksi -> roots		165345						
ANR	165634	Symbol	ksi -> bInBlk		165345						
ANR	165635	Symbol	* ksi -> ctx		165345						
ANR	165636	Function	rsksiSetAggregator	1080:0:27851:28346							
ANR	165637	FunctionDef	"rsksiSetAggregator (rsksictx ctx , char * uri , char * loginid , char * key)"		165636	0					
ANR	165638	CompoundStatement		1081:70:27925:28346	165636	0					
ANR	165639	IdentifierDeclStatement	int r ;	1082:1:27928:27933	165636	0	True				
ANR	165640	IdentifierDecl	r		165636	0					
ANR	165641	IdentifierDeclType	int		165636	0					
ANR	165642	Identifier	r		165636	1					
ANR	165643	IfStatement	if ( ! uri || ! loginid || ! key )		165636	1					
ANR	165644	Condition	! uri || ! loginid || ! key	1084:5:27941:27964	165636	0	True				
ANR	165645	OrExpression	! uri || ! loginid || ! key		165636	0		||			
ANR	165646	UnaryOperationExpression	! uri		165636	0					
ANR	165647	UnaryOperator	!		165636	0					
ANR	165648	Identifier	uri		165636	1					
ANR	165649	OrExpression	! loginid || ! key		165636	1		||			
ANR	165650	UnaryOperationExpression	! loginid		165636	0					
ANR	165651	UnaryOperator	!		165636	0					
ANR	165652	Identifier	loginid		165636	1					
ANR	165653	UnaryOperationExpression	! key		165636	1					
ANR	165654	UnaryOperator	!		165636	0					
ANR	165655	Identifier	key		165636	1					
ANR	165656	CompoundStatement		4:31:41:41	165636	1					
ANR	165657	ExpressionStatement	ctx -> disabled = true	1085:2:27971:27991	165636	0	True				
ANR	165658	AssignmentExpression	ctx -> disabled = true		165636	0		=			
ANR	165659	PtrMemberAccess	ctx -> disabled		165636	0					
ANR	165660	Identifier	ctx		165636	0					
ANR	165661	Identifier	disabled		165636	1					
ANR	165662	Identifier	true		165636	1					
ANR	165663	ReturnStatement	return KSI_INVALID_ARGUMENT ;	1086:2:27995:28022	165636	1	True				
ANR	165664	Identifier	KSI_INVALID_ARGUMENT		165636	0					
ANR	165665	ExpressionStatement	"r = KSI_CTX_setAggregator ( ctx -> ksi_ctx , uri , loginid , key )"	1090:1:28030:28088	165636	2	True				
ANR	165666	AssignmentExpression	"r = KSI_CTX_setAggregator ( ctx -> ksi_ctx , uri , loginid , key )"		165636	0		=			
ANR	165667	Identifier	r		165636	0					
ANR	165668	CallExpression	"KSI_CTX_setAggregator ( ctx -> ksi_ctx , uri , loginid , key )"		165636	1					
ANR	165669	Callee	KSI_CTX_setAggregator		165636	0					
ANR	165670	Identifier	KSI_CTX_setAggregator		165636	0					
ANR	165671	ArgumentList	ctx -> ksi_ctx		165636	1					
ANR	165672	Argument	ctx -> ksi_ctx		165636	0					
ANR	165673	PtrMemberAccess	ctx -> ksi_ctx		165636	0					
ANR	165674	Identifier	ctx		165636	0					
ANR	165675	Identifier	ksi_ctx		165636	1					
ANR	165676	Argument	uri		165636	1					
ANR	165677	Identifier	uri		165636	0					
ANR	165678	Argument	loginid		165636	2					
ANR	165679	Identifier	loginid		165636	0					
ANR	165680	Argument	key		165636	3					
ANR	165681	Identifier	key		165636	0					
ANR	165682	IfStatement	if ( r != KSI_OK )		165636	3					
ANR	165683	Condition	r != KSI_OK	1091:4:28094:28104	165636	0	True				
ANR	165684	EqualityExpression	r != KSI_OK		165636	0		!=			
ANR	165685	Identifier	r		165636	0					
ANR	165686	Identifier	KSI_OK		165636	1					
ANR	165687	CompoundStatement		11:17:181:181	165636	1					
ANR	165688	ExpressionStatement	ctx -> disabled = true	1092:2:28111:28131	165636	0	True				
ANR	165689	AssignmentExpression	ctx -> disabled = true		165636	0		=			
ANR	165690	PtrMemberAccess	ctx -> disabled		165636	0					
ANR	165691	Identifier	ctx		165636	0					
ANR	165692	Identifier	disabled		165636	1					
ANR	165693	Identifier	true		165636	1					
ANR	165694	ExpressionStatement	"reportKSIAPIErr ( ctx , NULL , ""KSI_CTX_setAggregator"" , r )"	1093:2:28135:28189	165636	1	True				
ANR	165695	CallExpression	"reportKSIAPIErr ( ctx , NULL , ""KSI_CTX_setAggregator"" , r )"		165636	0					
ANR	165696	Callee	reportKSIAPIErr		165636	0					
ANR	165697	Identifier	reportKSIAPIErr		165636	0					
ANR	165698	ArgumentList	ctx		165636	1					
ANR	165699	Argument	ctx		165636	0					
ANR	165700	Identifier	ctx		165636	0					
ANR	165701	Argument	NULL		165636	1					
ANR	165702	Identifier	NULL		165636	0					
ANR	165703	Argument	"""KSI_CTX_setAggregator"""		165636	2					
ANR	165704	PrimaryExpression	"""KSI_CTX_setAggregator"""		165636	0					
ANR	165705	Argument	r		165636	3					
ANR	165706	Identifier	r		165636	0					
ANR	165707	ReturnStatement	return KSI_INVALID_ARGUMENT ;	1094:2:28193:28220	165636	2	True				
ANR	165708	Identifier	KSI_INVALID_ARGUMENT		165636	0					
ANR	165709	ExpressionStatement	ctx -> aggregatorUri = strdup ( uri )	1097:1:28227:28259	165636	4	True				
ANR	165710	AssignmentExpression	ctx -> aggregatorUri = strdup ( uri )		165636	0		=			
ANR	165711	PtrMemberAccess	ctx -> aggregatorUri		165636	0					
ANR	165712	Identifier	ctx		165636	0					
ANR	165713	Identifier	aggregatorUri		165636	1					
ANR	165714	CallExpression	strdup ( uri )		165636	1					
ANR	165715	Callee	strdup		165636	0					
ANR	165716	Identifier	strdup		165636	0					
ANR	165717	ArgumentList	uri		165636	1					
ANR	165718	Argument	uri		165636	0					
ANR	165719	Identifier	uri		165636	0					
ANR	165720	ExpressionStatement	ctx -> aggregatorId = strdup ( loginid )	1098:1:28262:28297	165636	5	True				
ANR	165721	AssignmentExpression	ctx -> aggregatorId = strdup ( loginid )		165636	0		=			
ANR	165722	PtrMemberAccess	ctx -> aggregatorId		165636	0					
ANR	165723	Identifier	ctx		165636	0					
ANR	165724	Identifier	aggregatorId		165636	1					
ANR	165725	CallExpression	strdup ( loginid )		165636	1					
ANR	165726	Callee	strdup		165636	0					
ANR	165727	Identifier	strdup		165636	0					
ANR	165728	ArgumentList	loginid		165636	1					
ANR	165729	Argument	loginid		165636	0					
ANR	165730	Identifier	loginid		165636	0					
ANR	165731	ExpressionStatement	ctx -> aggregatorKey = strdup ( key )	1099:1:28300:28332	165636	6	True				
ANR	165732	AssignmentExpression	ctx -> aggregatorKey = strdup ( key )		165636	0		=			
ANR	165733	PtrMemberAccess	ctx -> aggregatorKey		165636	0					
ANR	165734	Identifier	ctx		165636	0					
ANR	165735	Identifier	aggregatorKey		165636	1					
ANR	165736	CallExpression	strdup ( key )		165636	1					
ANR	165737	Callee	strdup		165636	0					
ANR	165738	Identifier	strdup		165636	0					
ANR	165739	ArgumentList	key		165636	1					
ANR	165740	Argument	key		165636	0					
ANR	165741	Identifier	key		165636	0					
ANR	165742	ReturnStatement	return r ;	1101:1:28336:28344	165636	7	True				
ANR	165743	Identifier	r		165636	0					
ANR	165744	ReturnType	int		165636	1					
ANR	165745	Identifier	rsksiSetAggregator		165636	2					
ANR	165746	ParameterList	"rsksictx ctx , char * uri , char * loginid , char * key"		165636	3					
ANR	165747	Parameter	rsksictx ctx	1081:19:27874:27885	165636	0	True				
ANR	165748	ParameterType	rsksictx		165636	0					
ANR	165749	Identifier	ctx		165636	1					
ANR	165750	Parameter	char * uri	1081:33:27888:27896	165636	1	True				
ANR	165751	ParameterType	char *		165636	0					
ANR	165752	Identifier	uri		165636	1					
ANR	165753	Parameter	char * loginid	1081:44:27899:27911	165636	2	True				
ANR	165754	ParameterType	char *		165636	0					
ANR	165755	Identifier	loginid		165636	1					
ANR	165756	Parameter	char * key	1081:59:27914:27922	165636	3	True				
ANR	165757	ParameterType	char *		165636	0					
ANR	165758	Identifier	key		165636	1					
ANR	165759	CFGEntryNode	ENTRY		165636		True				
ANR	165760	CFGExitNode	EXIT		165636		True				
ANR	165761	Symbol	loginid		165636						
ANR	165762	Symbol	NULL		165636						
ANR	165763	Symbol	ctx		165636						
ANR	165764	Symbol	KSI_INVALID_ARGUMENT		165636						
ANR	165765	Symbol	ctx -> aggregatorId		165636						
ANR	165766	Symbol	uri		165636						
ANR	165767	Symbol	* ctx		165636						
ANR	165768	Symbol	r		165636						
ANR	165769	Symbol	KSI_CTX_setAggregator		165636						
ANR	165770	Symbol	KSI_OK		165636						
ANR	165771	Symbol	ctx -> aggregatorUri		165636						
ANR	165772	Symbol	ctx -> disabled		165636						
ANR	165773	Symbol	true		165636						
ANR	165774	Symbol	ctx -> aggregatorKey		165636						
ANR	165775	Symbol	strdup		165636						
ANR	165776	Symbol	key		165636						
ANR	165777	Symbol	ctx -> ksi_ctx		165636						
ANR	165778	Function	add_queue_item	1104:0:28349:28777							
ANR	165779	FunctionDef	"add_queue_item (rsksictx ctx , QITEM_type type , void * arg , uint64_t intarg1 , uint64_t intarg2)"		165778	0					
ANR	165780	CompoundStatement		1104:98:28447:28777	165778	0					
ANR	165781	IdentifierDeclStatement	QueueItem * qi = ( QueueItem * ) malloc ( sizeof ( QueueItem ) ) ;	1105:1:28450:28505	165778	0	True				
ANR	165782	IdentifierDecl	* qi = ( QueueItem * ) malloc ( sizeof ( QueueItem ) )		165778	0					
ANR	165783	IdentifierDeclType	QueueItem *		165778	0					
ANR	165784	Identifier	qi		165778	1					
ANR	165785	AssignmentExpression	* qi = ( QueueItem * ) malloc ( sizeof ( QueueItem ) )		165778	2		=			
ANR	165786	Identifier	qi		165778	0					
ANR	165787	CastExpression	( QueueItem * ) malloc ( sizeof ( QueueItem ) )		165778	1					
ANR	165788	CastTarget	QueueItem *		165778	0					
ANR	165789	CallExpression	malloc ( sizeof ( QueueItem ) )		165778	1					
ANR	165790	Callee	malloc		165778	0					
ANR	165791	Identifier	malloc		165778	0					
ANR	165792	ArgumentList	sizeof ( QueueItem )		165778	1					
ANR	165793	Argument	sizeof ( QueueItem )		165778	0					
ANR	165794	SizeofExpression	sizeof ( QueueItem )		165778	0					
ANR	165795	Sizeof	sizeof		165778	0					
ANR	165796	SizeofOperand	QueueItem		165778	1					
ANR	165797	IfStatement	if ( ! qi )		165778	1					
ANR	165798	Condition	! qi	1106:5:28512:28514	165778	0	True				
ANR	165799	UnaryOperationExpression	! qi		165778	0					
ANR	165800	UnaryOperator	!		165778	0					
ANR	165801	Identifier	qi		165778	1					
ANR	165802	CompoundStatement		3:10:69:69	165778	1					
ANR	165803	ExpressionStatement	ctx -> disabled = true	1107:2:28521:28541	165778	0	True				
ANR	165804	AssignmentExpression	ctx -> disabled = true		165778	0		=			
ANR	165805	PtrMemberAccess	ctx -> disabled		165778	0					
ANR	165806	Identifier	ctx		165778	0					
ANR	165807	Identifier	disabled		165778	1					
ANR	165808	Identifier	true		165778	1					
ANR	165809	ReturnStatement	return false ;	1108:2:28545:28557	165778	1	True				
ANR	165810	Identifier	false		165778	0					
ANR	165811	ExpressionStatement	qi -> arg = arg	1111:1:28564:28577	165778	2	True				
ANR	165812	AssignmentExpression	qi -> arg = arg		165778	0		=			
ANR	165813	PtrMemberAccess	qi -> arg		165778	0					
ANR	165814	Identifier	qi		165778	0					
ANR	165815	Identifier	arg		165778	1					
ANR	165816	Identifier	arg		165778	1					
ANR	165817	ExpressionStatement	qi -> type = type	1112:1:28580:28595	165778	3	True				
ANR	165818	AssignmentExpression	qi -> type = type		165778	0		=			
ANR	165819	PtrMemberAccess	qi -> type		165778	0					
ANR	165820	Identifier	qi		165778	0					
ANR	165821	Identifier	type		165778	1					
ANR	165822	Identifier	type		165778	1					
ANR	165823	ExpressionStatement	qi -> intarg1 = intarg1	1113:1:28598:28619	165778	4	True				
ANR	165824	AssignmentExpression	qi -> intarg1 = intarg1		165778	0		=			
ANR	165825	PtrMemberAccess	qi -> intarg1		165778	0					
ANR	165826	Identifier	qi		165778	0					
ANR	165827	Identifier	intarg1		165778	1					
ANR	165828	Identifier	intarg1		165778	1					
ANR	165829	ExpressionStatement	qi -> intarg2 = intarg2	1114:1:28622:28643	165778	5	True				
ANR	165830	AssignmentExpression	qi -> intarg2 = intarg2		165778	0		=			
ANR	165831	PtrMemberAccess	qi -> intarg2		165778	0					
ANR	165832	Identifier	qi		165778	0					
ANR	165833	Identifier	intarg2		165778	1					
ANR	165834	Identifier	intarg2		165778	1					
ANR	165835	IfStatement	"if ( ProtectedQueue_addItem ( ctx -> signer_queue , qi ) == false )"		165778	6					
ANR	165836	Condition	"ProtectedQueue_addItem ( ctx -> signer_queue , qi ) == false"	1115:5:28650:28703	165778	0	True				
ANR	165837	EqualityExpression	"ProtectedQueue_addItem ( ctx -> signer_queue , qi ) == false"		165778	0		==			
ANR	165838	CallExpression	"ProtectedQueue_addItem ( ctx -> signer_queue , qi )"		165778	0					
ANR	165839	Callee	ProtectedQueue_addItem		165778	0					
ANR	165840	Identifier	ProtectedQueue_addItem		165778	0					
ANR	165841	ArgumentList	ctx -> signer_queue		165778	1					
ANR	165842	Argument	ctx -> signer_queue		165778	0					
ANR	165843	PtrMemberAccess	ctx -> signer_queue		165778	0					
ANR	165844	Identifier	ctx		165778	0					
ANR	165845	Identifier	signer_queue		165778	1					
ANR	165846	Argument	qi		165778	1					
ANR	165847	Identifier	qi		165778	0					
ANR	165848	Identifier	false		165778	1					
ANR	165849	CompoundStatement		12:61:258:258	165778	1					
ANR	165850	ExpressionStatement	ctx -> disabled = true	1116:2:28710:28730	165778	0	True				
ANR	165851	AssignmentExpression	ctx -> disabled = true		165778	0		=			
ANR	165852	PtrMemberAccess	ctx -> disabled		165778	0					
ANR	165853	Identifier	ctx		165778	0					
ANR	165854	Identifier	disabled		165778	1					
ANR	165855	Identifier	true		165778	1					
ANR	165856	ExpressionStatement	free ( qi )	1117:2:28734:28742	165778	1	True				
ANR	165857	CallExpression	free ( qi )		165778	0					
ANR	165858	Callee	free		165778	0					
ANR	165859	Identifier	free		165778	0					
ANR	165860	ArgumentList	qi		165778	1					
ANR	165861	Argument	qi		165778	0					
ANR	165862	Identifier	qi		165778	0					
ANR	165863	ReturnStatement	return false ;	1118:2:28746:28758	165778	2	True				
ANR	165864	Identifier	false		165778	0					
ANR	165865	ReturnStatement	return true ;	1120:1:28764:28775	165778	7	True				
ANR	165866	Identifier	true		165778	0					
ANR	165867	ReturnType	bool		165778	1					
ANR	165868	Identifier	add_queue_item		165778	2					
ANR	165869	ParameterList	"rsksictx ctx , QITEM_type type , void * arg , uint64_t intarg1 , uint64_t intarg2"		165778	3					
ANR	165870	Parameter	rsksictx ctx	1104:20:28369:28380	165778	0	True				
ANR	165871	ParameterType	rsksictx		165778	0					
ANR	165872	Identifier	ctx		165778	1					
ANR	165873	Parameter	QITEM_type type	1104:34:28383:28397	165778	1	True				
ANR	165874	ParameterType	QITEM_type		165778	0					
ANR	165875	Identifier	type		165778	1					
ANR	165876	Parameter	void * arg	1104:51:28400:28408	165778	2	True				
ANR	165877	ParameterType	void *		165778	0					
ANR	165878	Identifier	arg		165778	1					
ANR	165879	Parameter	uint64_t intarg1	1104:62:28411:28426	165778	3	True				
ANR	165880	ParameterType	uint64_t		165778	0					
ANR	165881	Identifier	intarg1		165778	1					
ANR	165882	Parameter	uint64_t intarg2	1104:80:28429:28444	165778	4	True				
ANR	165883	ParameterType	uint64_t		165778	0					
ANR	165884	Identifier	intarg2		165778	1					
ANR	165885	CFGEntryNode	ENTRY		165778		True				
ANR	165886	CFGExitNode	EXIT		165778		True				
ANR	165887	Symbol	ProtectedQueue_addItem		165778						
ANR	165888	Symbol	malloc		165778						
ANR	165889	Symbol	qi -> type		165778						
ANR	165890	Symbol	ctx		165778						
ANR	165891	Symbol	false		165778						
ANR	165892	Symbol	ctx -> signer_queue		165778						
ANR	165893	Symbol	type		165778						
ANR	165894	Symbol	* ctx		165778						
ANR	165895	Symbol	qi -> arg		165778						
ANR	165896	Symbol	arg		165778						
ANR	165897	Symbol	intarg2		165778						
ANR	165898	Symbol	qi		165778						
ANR	165899	Symbol	true		165778						
ANR	165900	Symbol	ctx -> disabled		165778						
ANR	165901	Symbol	intarg1		165778						
ANR	165902	Symbol	qi -> intarg2		165778						
ANR	165903	Symbol	* qi		165778						
ANR	165904	Symbol	qi -> intarg1		165778						
ANR	165905	Function	process_requests	1125:0:28889:30516							
ANR	165906	FunctionDef	"process_requests (rsksictx ctx , KSI_CTX * ksi_ctx , FILE * outfile)"		165905	0					
ANR	165907	CompoundStatement		1125:76:28965:30516	165905	0					
ANR	165908	IdentifierDeclStatement	QueueItem * item = NULL ;	1126:1:28968:28990	165905	0	True				
ANR	165909	IdentifierDecl	* item = NULL		165905	0					
ANR	165910	IdentifierDeclType	QueueItem *		165905	0					
ANR	165911	Identifier	item		165905	1					
ANR	165912	AssignmentExpression	* item = NULL		165905	2		=			
ANR	165913	Identifier	NULL		165905	0					
ANR	165914	Identifier	NULL		165905	1					
ANR	165915	IdentifierDeclStatement	QueueItem * lastItem = NULL ;	1127:1:28993:29019	165905	1	True				
ANR	165916	IdentifierDecl	* lastItem = NULL		165905	0					
ANR	165917	IdentifierDeclType	QueueItem *		165905	0					
ANR	165918	Identifier	lastItem		165905	1					
ANR	165919	AssignmentExpression	* lastItem = NULL		165905	2		=			
ANR	165920	Identifier	NULL		165905	0					
ANR	165921	Identifier	NULL		165905	1					
ANR	165922	IdentifierDeclStatement	unsigned char * der = NULL ;	1128:1:29022:29047	165905	2	True				
ANR	165923	IdentifierDecl	* der = NULL		165905	0					
ANR	165924	IdentifierDeclType	unsigned char *		165905	0					
ANR	165925	Identifier	der		165905	1					
ANR	165926	AssignmentExpression	* der = NULL		165905	2		=			
ANR	165927	Identifier	NULL		165905	0					
ANR	165928	Identifier	NULL		165905	1					
ANR	165929	IdentifierDeclStatement	size_t lenDer = 0 ;	1129:1:29050:29067	165905	3	True				
ANR	165930	IdentifierDecl	lenDer = 0		165905	0					
ANR	165931	IdentifierDeclType	size_t		165905	0					
ANR	165932	Identifier	lenDer		165905	1					
ANR	165933	AssignmentExpression	lenDer = 0		165905	2		=			
ANR	165934	Identifier	lenDer		165905	0					
ANR	165935	PrimaryExpression	0		165905	1					
ANR	165936	IdentifierDeclStatement	int r = KSI_OK ;	1130:1:29070:29084	165905	4	True				
ANR	165937	IdentifierDecl	r = KSI_OK		165905	0					
ANR	165938	IdentifierDeclType	int		165905	0					
ANR	165939	Identifier	r		165905	1					
ANR	165940	AssignmentExpression	r = KSI_OK		165905	2		=			
ANR	165941	Identifier	KSI_OK		165905	0					
ANR	165942	Identifier	KSI_OK		165905	1					
ANR	165943	IdentifierDeclStatement	KSI_Signature * sig = NULL ;	1131:1:29087:29112	165905	5	True				
ANR	165944	IdentifierDecl	* sig = NULL		165905	0					
ANR	165945	IdentifierDeclType	KSI_Signature *		165905	0					
ANR	165946	Identifier	sig		165905	1					
ANR	165947	AssignmentExpression	* sig = NULL		165905	2		=			
ANR	165948	Identifier	NULL		165905	0					
ANR	165949	Identifier	NULL		165905	1					
ANR	165950	WhileStatement	"while ( ProtectedQueue_peekFront ( ctx -> signer_queue , ( void * * ) & item ) && item -> type == QITEM_SIGNATURE_REQUEST )"		165905	6					
ANR	165951	Condition	"ProtectedQueue_peekFront ( ctx -> signer_queue , ( void * * ) & item ) && item -> type == QITEM_SIGNATURE_REQUEST"	1133:8:29123:29222	165905	0	True				
ANR	165952	AndExpression	"ProtectedQueue_peekFront ( ctx -> signer_queue , ( void * * ) & item ) && item -> type == QITEM_SIGNATURE_REQUEST"		165905	0		&&			
ANR	165953	CallExpression	"ProtectedQueue_peekFront ( ctx -> signer_queue , ( void * * ) & item )"		165905	0					
ANR	165954	Callee	ProtectedQueue_peekFront		165905	0					
ANR	165955	Identifier	ProtectedQueue_peekFront		165905	0					
ANR	165956	ArgumentList	ctx -> signer_queue		165905	1					
ANR	165957	Argument	ctx -> signer_queue		165905	0					
ANR	165958	PtrMemberAccess	ctx -> signer_queue		165905	0					
ANR	165959	Identifier	ctx		165905	0					
ANR	165960	Identifier	signer_queue		165905	1					
ANR	165961	Argument	( void * * ) & item		165905	1					
ANR	165962	CastExpression	( void * * ) & item		165905	0					
ANR	165963	CastTarget	void * *		165905	0					
ANR	165964	UnaryOperationExpression	& item		165905	1					
ANR	165965	UnaryOperator	&		165905	0					
ANR	165966	Identifier	item		165905	1					
ANR	165967	EqualityExpression	item -> type == QITEM_SIGNATURE_REQUEST		165905	1		==			
ANR	165968	PtrMemberAccess	item -> type		165905	0					
ANR	165969	Identifier	item		165905	0					
ANR	165970	Identifier	type		165905	1					
ANR	165971	Identifier	QITEM_SIGNATURE_REQUEST		165905	1					
ANR	165972	CompoundStatement		9:110:259:259	165905	1					
ANR	165973	IfStatement	if ( lastItem != NULL )		165905	0					
ANR	165974	Condition	lastItem != NULL	1134:6:29233:29248	165905	0	True				
ANR	165975	EqualityExpression	lastItem != NULL		165905	0		!=			
ANR	165976	Identifier	lastItem		165905	0					
ANR	165977	Identifier	NULL		165905	1					
ANR	165978	CompoundStatement		10:24:285:285	165905	1					
ANR	165979	IfStatement	if ( outfile )		165905	0					
ANR	165980	Condition	outfile	1135:7:29260:29266	165905	0	True				
ANR	165981	Identifier	outfile		165905	0					
ANR	165982	ExpressionStatement	"tlvWriteNoSigLS12 ( outfile , lastItem -> intarg1 , lastItem -> arg , ""Signature request dropped for block, signer queue full"" )"	1136:4:29273:29398	165905	1	True				
ANR	165983	CallExpression	"tlvWriteNoSigLS12 ( outfile , lastItem -> intarg1 , lastItem -> arg , ""Signature request dropped for block, signer queue full"" )"		165905	0					
ANR	165984	Callee	tlvWriteNoSigLS12		165905	0					
ANR	165985	Identifier	tlvWriteNoSigLS12		165905	0					
ANR	165986	ArgumentList	outfile		165905	1					
ANR	165987	Argument	outfile		165905	0					
ANR	165988	Identifier	outfile		165905	0					
ANR	165989	Argument	lastItem -> intarg1		165905	1					
ANR	165990	PtrMemberAccess	lastItem -> intarg1		165905	0					
ANR	165991	Identifier	lastItem		165905	0					
ANR	165992	Identifier	intarg1		165905	1					
ANR	165993	Argument	lastItem -> arg		165905	2					
ANR	165994	PtrMemberAccess	lastItem -> arg		165905	0					
ANR	165995	Identifier	lastItem		165905	0					
ANR	165996	Identifier	arg		165905	1					
ANR	165997	Argument	"""Signature request dropped for block, signer queue full"""		165905	3					
ANR	165998	PrimaryExpression	"""Signature request dropped for block, signer queue full"""		165905	0					
ANR	165999	ExpressionStatement	"report ( ctx , ""Signature request dropped for block, signer queue full"" )"	1138:3:29403:29472	165905	1	True				
ANR	166000	CallExpression	"report ( ctx , ""Signature request dropped for block, signer queue full"" )"		165905	0					
ANR	166001	Callee	report		165905	0					
ANR	166002	Identifier	report		165905	0					
ANR	166003	ArgumentList	ctx		165905	1					
ANR	166004	Argument	ctx		165905	0					
ANR	166005	Identifier	ctx		165905	0					
ANR	166006	Argument	"""Signature request dropped for block, signer queue full"""		165905	1					
ANR	166007	PrimaryExpression	"""Signature request dropped for block, signer queue full"""		165905	0					
ANR	166008	ExpressionStatement	KSI_DataHash_free ( lastItem -> arg )	1139:3:29477:29509	165905	2	True				
ANR	166009	CallExpression	KSI_DataHash_free ( lastItem -> arg )		165905	0					
ANR	166010	Callee	KSI_DataHash_free		165905	0					
ANR	166011	Identifier	KSI_DataHash_free		165905	0					
ANR	166012	ArgumentList	lastItem -> arg		165905	1					
ANR	166013	Argument	lastItem -> arg		165905	0					
ANR	166014	PtrMemberAccess	lastItem -> arg		165905	0					
ANR	166015	Identifier	lastItem		165905	0					
ANR	166016	Identifier	arg		165905	1					
ANR	166017	ExpressionStatement	free ( lastItem )	1140:3:29514:29528	165905	3	True				
ANR	166018	CallExpression	free ( lastItem )		165905	0					
ANR	166019	Callee	free		165905	0					
ANR	166020	Identifier	free		165905	0					
ANR	166021	ArgumentList	lastItem		165905	1					
ANR	166022	Argument	lastItem		165905	0					
ANR	166023	Identifier	lastItem		165905	0					
ANR	166024	ExpressionStatement	"ProtectedQueue_popFront ( ctx -> signer_queue , ( void * * ) & item )"	1143:2:29537:29595	165905	1	True				
ANR	166025	CallExpression	"ProtectedQueue_popFront ( ctx -> signer_queue , ( void * * ) & item )"		165905	0					
ANR	166026	Callee	ProtectedQueue_popFront		165905	0					
ANR	166027	Identifier	ProtectedQueue_popFront		165905	0					
ANR	166028	ArgumentList	ctx -> signer_queue		165905	1					
ANR	166029	Argument	ctx -> signer_queue		165905	0					
ANR	166030	PtrMemberAccess	ctx -> signer_queue		165905	0					
ANR	166031	Identifier	ctx		165905	0					
ANR	166032	Identifier	signer_queue		165905	1					
ANR	166033	Argument	( void * * ) & item		165905	1					
ANR	166034	CastExpression	( void * * ) & item		165905	0					
ANR	166035	CastTarget	void * *		165905	0					
ANR	166036	UnaryOperationExpression	& item		165905	1					
ANR	166037	UnaryOperator	&		165905	0					
ANR	166038	Identifier	item		165905	1					
ANR	166039	ExpressionStatement	lastItem = item	1144:2:29599:29614	165905	2	True				
ANR	166040	AssignmentExpression	lastItem = item		165905	0		=			
ANR	166041	Identifier	lastItem		165905	0					
ANR	166042	Identifier	item		165905	1					
ANR	166043	IfStatement	if ( ! outfile )		165905	7					
ANR	166044	Condition	! outfile	1147:5:29625:29632	165905	0	True				
ANR	166045	UnaryOperationExpression	! outfile		165905	0					
ANR	166046	UnaryOperator	!		165905	0					
ANR	166047	Identifier	outfile		165905	1					
ANR	166048	GotoStatement	goto signing_failed ;	1148:2:29637:29656	165905	1	True				
ANR	166049	Identifier	signing_failed		165905	0					
ANR	166050	ExpressionStatement	"r = KSI_Signature_signAggregated ( ksi_ctx , lastItem -> arg , lastItem -> intarg2 , & sig )"	1150:1:29660:29741	165905	8	True				
ANR	166051	AssignmentExpression	"r = KSI_Signature_signAggregated ( ksi_ctx , lastItem -> arg , lastItem -> intarg2 , & sig )"		165905	0		=			
ANR	166052	Identifier	r		165905	0					
ANR	166053	CallExpression	"KSI_Signature_signAggregated ( ksi_ctx , lastItem -> arg , lastItem -> intarg2 , & sig )"		165905	1					
ANR	166054	Callee	KSI_Signature_signAggregated		165905	0					
ANR	166055	Identifier	KSI_Signature_signAggregated		165905	0					
ANR	166056	ArgumentList	ksi_ctx		165905	1					
ANR	166057	Argument	ksi_ctx		165905	0					
ANR	166058	Identifier	ksi_ctx		165905	0					
ANR	166059	Argument	lastItem -> arg		165905	1					
ANR	166060	PtrMemberAccess	lastItem -> arg		165905	0					
ANR	166061	Identifier	lastItem		165905	0					
ANR	166062	Identifier	arg		165905	1					
ANR	166063	Argument	lastItem -> intarg2		165905	2					
ANR	166064	PtrMemberAccess	lastItem -> intarg2		165905	0					
ANR	166065	Identifier	lastItem		165905	0					
ANR	166066	Identifier	intarg2		165905	1					
ANR	166067	Argument	& sig		165905	3					
ANR	166068	UnaryOperationExpression	& sig		165905	0					
ANR	166069	UnaryOperator	&		165905	0					
ANR	166070	Identifier	sig		165905	1					
ANR	166071	IfStatement	if ( r != KSI_OK )		165905	9					
ANR	166072	Condition	r != KSI_OK	1151:5:29748:29758	165905	0	True				
ANR	166073	EqualityExpression	r != KSI_OK		165905	0		!=			
ANR	166074	Identifier	r		165905	0					
ANR	166075	Identifier	KSI_OK		165905	1					
ANR	166076	CompoundStatement		27:18:795:795	165905	1					
ANR	166077	ExpressionStatement	"reportKSIAPIErr ( ctx , NULL , ""KSI_Signature_createAggregated"" , r )"	1152:2:29765:29828	165905	0	True				
ANR	166078	CallExpression	"reportKSIAPIErr ( ctx , NULL , ""KSI_Signature_createAggregated"" , r )"		165905	0					
ANR	166079	Callee	reportKSIAPIErr		165905	0					
ANR	166080	Identifier	reportKSIAPIErr		165905	0					
ANR	166081	ArgumentList	ctx		165905	1					
ANR	166082	Argument	ctx		165905	0					
ANR	166083	Identifier	ctx		165905	0					
ANR	166084	Argument	NULL		165905	1					
ANR	166085	Identifier	NULL		165905	0					
ANR	166086	Argument	"""KSI_Signature_createAggregated"""		165905	2					
ANR	166087	PrimaryExpression	"""KSI_Signature_createAggregated"""		165905	0					
ANR	166088	Argument	r		165905	3					
ANR	166089	Identifier	r		165905	0					
ANR	166090	GotoStatement	goto signing_failed ;	1153:2:29832:29851	165905	1	True				
ANR	166091	Identifier	signing_failed		165905	0					
ANR	166092	ExpressionStatement	"r = KSI_Signature_serialize ( sig , & der , & lenDer )"	1157:1:29886:29933	165905	10	True				
ANR	166093	AssignmentExpression	"r = KSI_Signature_serialize ( sig , & der , & lenDer )"		165905	0		=			
ANR	166094	Identifier	r		165905	0					
ANR	166095	CallExpression	"KSI_Signature_serialize ( sig , & der , & lenDer )"		165905	1					
ANR	166096	Callee	KSI_Signature_serialize		165905	0					
ANR	166097	Identifier	KSI_Signature_serialize		165905	0					
ANR	166098	ArgumentList	sig		165905	1					
ANR	166099	Argument	sig		165905	0					
ANR	166100	Identifier	sig		165905	0					
ANR	166101	Argument	& der		165905	1					
ANR	166102	UnaryOperationExpression	& der		165905	0					
ANR	166103	UnaryOperator	&		165905	0					
ANR	166104	Identifier	der		165905	1					
ANR	166105	Argument	& lenDer		165905	2					
ANR	166106	UnaryOperationExpression	& lenDer		165905	0					
ANR	166107	UnaryOperator	&		165905	0					
ANR	166108	Identifier	lenDer		165905	1					
ANR	166109	IfStatement	if ( r != KSI_OK )		165905	11					
ANR	166110	Condition	r != KSI_OK	1158:5:29940:29950	165905	0	True				
ANR	166111	EqualityExpression	r != KSI_OK		165905	0		!=			
ANR	166112	Identifier	r		165905	0					
ANR	166113	Identifier	KSI_OK		165905	1					
ANR	166114	CompoundStatement		34:18:987:987	165905	1					
ANR	166115	ExpressionStatement	"reportKSIAPIErr ( ctx , NULL , ""KSI_Signature_serialize"" , r )"	1159:2:29957:30013	165905	0	True				
ANR	166116	CallExpression	"reportKSIAPIErr ( ctx , NULL , ""KSI_Signature_serialize"" , r )"		165905	0					
ANR	166117	Callee	reportKSIAPIErr		165905	0					
ANR	166118	Identifier	reportKSIAPIErr		165905	0					
ANR	166119	ArgumentList	ctx		165905	1					
ANR	166120	Argument	ctx		165905	0					
ANR	166121	Identifier	ctx		165905	0					
ANR	166122	Argument	NULL		165905	1					
ANR	166123	Identifier	NULL		165905	0					
ANR	166124	Argument	"""KSI_Signature_serialize"""		165905	2					
ANR	166125	PrimaryExpression	"""KSI_Signature_serialize"""		165905	0					
ANR	166126	Argument	r		165905	3					
ANR	166127	Identifier	r		165905	0					
ANR	166128	GotoStatement	goto signing_failed ;	1160:2:30017:30036	165905	1	True				
ANR	166129	Identifier	signing_failed		165905	0					
ANR	166130	ExpressionStatement	lenDer = 0	1161:2:30040:30050	165905	2	True				
ANR	166131	AssignmentExpression	lenDer = 0		165905	0		=			
ANR	166132	Identifier	lenDer		165905	0					
ANR	166133	PrimaryExpression	0		165905	1					
ANR	166134	Label	signing_failed :	1164:0:30056:30070	165905	12	True				
ANR	166135	Identifier	signing_failed		165905	0					
ANR	166136	IfStatement	if ( outfile )		165905	13					
ANR	166137	Condition	outfile	1166:5:30078:30084	165905	0	True				
ANR	166138	Identifier	outfile		165905	0					
ANR	166139	CompoundStatement		42:14:1121:1121	165905	1					
ANR	166140	IfStatement	if ( r == KSI_OK )		165905	0					
ANR	166141	Condition	r == KSI_OK	1167:6:30095:30105	165905	0	True				
ANR	166142	EqualityExpression	r == KSI_OK		165905	0		==			
ANR	166143	Identifier	r		165905	0					
ANR	166144	Identifier	KSI_OK		165905	1					
ANR	166145	ExpressionStatement	"r = tlvWriteKSISigLS12 ( outfile , lastItem -> intarg1 , der , lenDer )"	1168:3:30111:30174	165905	1	True				
ANR	166146	AssignmentExpression	"r = tlvWriteKSISigLS12 ( outfile , lastItem -> intarg1 , der , lenDer )"		165905	0		=			
ANR	166147	Identifier	r		165905	0					
ANR	166148	CallExpression	"tlvWriteKSISigLS12 ( outfile , lastItem -> intarg1 , der , lenDer )"		165905	1					
ANR	166149	Callee	tlvWriteKSISigLS12		165905	0					
ANR	166150	Identifier	tlvWriteKSISigLS12		165905	0					
ANR	166151	ArgumentList	outfile		165905	1					
ANR	166152	Argument	outfile		165905	0					
ANR	166153	Identifier	outfile		165905	0					
ANR	166154	Argument	lastItem -> intarg1		165905	1					
ANR	166155	PtrMemberAccess	lastItem -> intarg1		165905	0					
ANR	166156	Identifier	lastItem		165905	0					
ANR	166157	Identifier	intarg1		165905	1					
ANR	166158	Argument	der		165905	2					
ANR	166159	Identifier	der		165905	0					
ANR	166160	Argument	lenDer		165905	3					
ANR	166161	Identifier	lenDer		165905	0					
ANR	166162	ElseStatement	else		165905	0					
ANR	166163	ExpressionStatement	"r = tlvWriteNoSigLS12 ( outfile , lastItem -> intarg1 , lastItem -> arg , KSI_getErrorString ( r ) )"	1170:3:30186:30273	165905	0	True				
ANR	166164	AssignmentExpression	"r = tlvWriteNoSigLS12 ( outfile , lastItem -> intarg1 , lastItem -> arg , KSI_getErrorString ( r ) )"		165905	0		=			
ANR	166165	Identifier	r		165905	0					
ANR	166166	CallExpression	"tlvWriteNoSigLS12 ( outfile , lastItem -> intarg1 , lastItem -> arg , KSI_getErrorString ( r ) )"		165905	1					
ANR	166167	Callee	tlvWriteNoSigLS12		165905	0					
ANR	166168	Identifier	tlvWriteNoSigLS12		165905	0					
ANR	166169	ArgumentList	outfile		165905	1					
ANR	166170	Argument	outfile		165905	0					
ANR	166171	Identifier	outfile		165905	0					
ANR	166172	Argument	lastItem -> intarg1		165905	1					
ANR	166173	PtrMemberAccess	lastItem -> intarg1		165905	0					
ANR	166174	Identifier	lastItem		165905	0					
ANR	166175	Identifier	intarg1		165905	1					
ANR	166176	Argument	lastItem -> arg		165905	2					
ANR	166177	PtrMemberAccess	lastItem -> arg		165905	0					
ANR	166178	Identifier	lastItem		165905	0					
ANR	166179	Identifier	arg		165905	1					
ANR	166180	Argument	KSI_getErrorString ( r )		165905	3					
ANR	166181	CallExpression	KSI_getErrorString ( r )		165905	0					
ANR	166182	Callee	KSI_getErrorString		165905	0					
ANR	166183	Identifier	KSI_getErrorString		165905	0					
ANR	166184	ArgumentList	r		165905	1					
ANR	166185	Argument	r		165905	0					
ANR	166186	Identifier	r		165905	0					
ANR	166187	IfStatement	if ( r != KSI_OK )		165905	14					
ANR	166188	Condition	r != KSI_OK	1173:5:30284:30294	165905	0	True				
ANR	166189	EqualityExpression	r != KSI_OK		165905	0		!=			
ANR	166190	Identifier	r		165905	0					
ANR	166191	Identifier	KSI_OK		165905	1					
ANR	166192	ExpressionStatement	"reportKSIAPIErr ( ctx , NULL , ""tlvWriteKSISigLS12"" , r )"	1174:2:30299:30350	165905	1	True				
ANR	166193	CallExpression	"reportKSIAPIErr ( ctx , NULL , ""tlvWriteKSISigLS12"" , r )"		165905	0					
ANR	166194	Callee	reportKSIAPIErr		165905	0					
ANR	166195	Identifier	reportKSIAPIErr		165905	0					
ANR	166196	ArgumentList	ctx		165905	1					
ANR	166197	Argument	ctx		165905	0					
ANR	166198	Identifier	ctx		165905	0					
ANR	166199	Argument	NULL		165905	1					
ANR	166200	Identifier	NULL		165905	0					
ANR	166201	Argument	"""tlvWriteKSISigLS12"""		165905	2					
ANR	166202	PrimaryExpression	"""tlvWriteKSISigLS12"""		165905	0					
ANR	166203	Argument	r		165905	3					
ANR	166204	Identifier	r		165905	0					
ANR	166205	IfStatement	if ( lastItem != NULL )		165905	15					
ANR	166206	Condition	lastItem != NULL	1176:5:30358:30373	165905	0	True				
ANR	166207	EqualityExpression	lastItem != NULL		165905	0		!=			
ANR	166208	Identifier	lastItem		165905	0					
ANR	166209	Identifier	NULL		165905	1					
ANR	166210	CompoundStatement		52:23:1410:1410	165905	1					
ANR	166211	ExpressionStatement	KSI_DataHash_free ( lastItem -> arg )	1177:2:30380:30412	165905	0	True				
ANR	166212	CallExpression	KSI_DataHash_free ( lastItem -> arg )		165905	0					
ANR	166213	Callee	KSI_DataHash_free		165905	0					
ANR	166214	Identifier	KSI_DataHash_free		165905	0					
ANR	166215	ArgumentList	lastItem -> arg		165905	1					
ANR	166216	Argument	lastItem -> arg		165905	0					
ANR	166217	PtrMemberAccess	lastItem -> arg		165905	0					
ANR	166218	Identifier	lastItem		165905	0					
ANR	166219	Identifier	arg		165905	1					
ANR	166220	ExpressionStatement	free ( lastItem )	1178:2:30416:30430	165905	1	True				
ANR	166221	CallExpression	free ( lastItem )		165905	0					
ANR	166222	Callee	free		165905	0					
ANR	166223	Identifier	free		165905	0					
ANR	166224	ArgumentList	lastItem		165905	1					
ANR	166225	Argument	lastItem		165905	0					
ANR	166226	Identifier	lastItem		165905	0					
ANR	166227	IfStatement	if ( sig != NULL )		165905	16					
ANR	166228	Condition	sig != NULL	1181:5:30441:30451	165905	0	True				
ANR	166229	EqualityExpression	sig != NULL		165905	0		!=			
ANR	166230	Identifier	sig		165905	0					
ANR	166231	Identifier	NULL		165905	1					
ANR	166232	ExpressionStatement	KSI_Signature_free ( sig )	1182:2:30456:30479	165905	1	True				
ANR	166233	CallExpression	KSI_Signature_free ( sig )		165905	0					
ANR	166234	Callee	KSI_Signature_free		165905	0					
ANR	166235	Identifier	KSI_Signature_free		165905	0					
ANR	166236	ArgumentList	sig		165905	1					
ANR	166237	Argument	sig		165905	0					
ANR	166238	Identifier	sig		165905	0					
ANR	166239	IfStatement	if ( der != NULL )		165905	17					
ANR	166240	Condition	der != NULL	1183:5:30486:30496	165905	0	True				
ANR	166241	EqualityExpression	der != NULL		165905	0		!=			
ANR	166242	Identifier	der		165905	0					
ANR	166243	Identifier	NULL		165905	1					
ANR	166244	ExpressionStatement	KSI_free ( der )	1184:2:30501:30514	165905	1	True				
ANR	166245	CallExpression	KSI_free ( der )		165905	0					
ANR	166246	Callee	KSI_free		165905	0					
ANR	166247	Identifier	KSI_free		165905	0					
ANR	166248	ArgumentList	der		165905	1					
ANR	166249	Argument	der		165905	0					
ANR	166250	Identifier	der		165905	0					
ANR	166251	ReturnType	static void		165905	1					
ANR	166252	Identifier	process_requests		165905	2					
ANR	166253	ParameterList	"rsksictx ctx , KSI_CTX * ksi_ctx , FILE * outfile"		165905	3					
ANR	166254	Parameter	rsksictx ctx	1125:29:28918:28929	165905	0	True				
ANR	166255	ParameterType	rsksictx		165905	0					
ANR	166256	Identifier	ctx		165905	1					
ANR	166257	Parameter	KSI_CTX * ksi_ctx	1125:43:28932:28947	165905	1	True				
ANR	166258	ParameterType	KSI_CTX *		165905	0					
ANR	166259	Identifier	ksi_ctx		165905	1					
ANR	166260	Parameter	FILE * outfile	1125:61:28950:28962	165905	2	True				
ANR	166261	ParameterType	FILE *		165905	0					
ANR	166262	Identifier	outfile		165905	1					
ANR	166263	CFGEntryNode	ENTRY		165905		True				
ANR	166264	CFGExitNode	EXIT		165905		True				
ANR	166265	Symbol	lastItem -> arg		165905						
ANR	166266	Symbol	& item		165905						
ANR	166267	Symbol	item -> type		165905						
ANR	166268	Symbol	ksi_ctx		165905						
ANR	166269	Symbol	tlvWriteNoSigLS12		165905						
ANR	166270	Symbol	outfile		165905						
ANR	166271	Symbol	KSI_Signature_serialize		165905						
ANR	166272	Symbol	tlvWriteKSISigLS12		165905						
ANR	166273	Symbol	der		165905						
ANR	166274	Symbol	sig		165905						
ANR	166275	Symbol	QITEM_SIGNATURE_REQUEST		165905						
ANR	166276	Symbol	KSI_OK		165905						
ANR	166277	Symbol	* item		165905						
ANR	166278	Symbol	KSI_getErrorString		165905						
ANR	166279	Symbol	item		165905						
ANR	166280	Symbol	NULL		165905						
ANR	166281	Symbol	ctx		165905						
ANR	166282	Symbol	* lastItem		165905						
ANR	166283	Symbol	ctx -> signer_queue		165905						
ANR	166284	Symbol	ProtectedQueue_peekFront		165905						
ANR	166285	Symbol	* ctx		165905						
ANR	166286	Symbol	& sig		165905						
ANR	166287	Symbol	& der		165905						
ANR	166288	Symbol	lenDer		165905						
ANR	166289	Symbol	r		165905						
ANR	166290	Symbol	lastItem -> intarg1		165905						
ANR	166291	Symbol	lastItem -> intarg2		165905						
ANR	166292	Symbol	lastItem		165905						
ANR	166293	Symbol	& lenDer		165905						
ANR	166294	Symbol	KSI_Signature_signAggregated		165905						
ANR	166295	Function	signer_thread	1187:0:30519:31894							
ANR	166296	FunctionDef	signer_thread (void * arg)		166295	0					
ANR	166297	CompoundStatement		1187:31:30550:31894	166295	0					
ANR	166298	IdentifierDeclStatement	rsksictx ctx = ( rsksictx ) arg ;	1189:1:30554:30583	166295	0	True				
ANR	166299	IdentifierDecl	ctx = ( rsksictx ) arg		166295	0					
ANR	166300	IdentifierDeclType	rsksictx		166295	0					
ANR	166301	Identifier	ctx		166295	1					
ANR	166302	AssignmentExpression	ctx = ( rsksictx ) arg		166295	2		=			
ANR	166303	Identifier	ctx		166295	0					
ANR	166304	CastExpression	( rsksictx ) arg		166295	1					
ANR	166305	CastTarget	rsksictx		166295	0					
ANR	166306	Identifier	arg		166295	1					
ANR	166307	IdentifierDeclStatement	QueueItem * item = NULL ;	1190:1:30586:30608	166295	1	True				
ANR	166308	IdentifierDecl	* item = NULL		166295	0					
ANR	166309	IdentifierDeclType	QueueItem *		166295	0					
ANR	166310	Identifier	item		166295	1					
ANR	166311	AssignmentExpression	* item = NULL		166295	2		=			
ANR	166312	Identifier	NULL		166295	0					
ANR	166313	Identifier	NULL		166295	1					
ANR	166314	IdentifierDeclStatement	FILE * ksiFile = NULL ;	1191:1:30611:30631	166295	2	True				
ANR	166315	IdentifierDecl	* ksiFile = NULL		166295	0					
ANR	166316	IdentifierDeclType	FILE *		166295	0					
ANR	166317	Identifier	ksiFile		166295	1					
ANR	166318	AssignmentExpression	* ksiFile = NULL		166295	2		=			
ANR	166319	Identifier	NULL		166295	0					
ANR	166320	Identifier	NULL		166295	1					
ANR	166321	IdentifierDeclStatement	time_t timeout ;	1192:1:30634:30648	166295	3	True				
ANR	166322	IdentifierDecl	timeout		166295	0					
ANR	166323	IdentifierDeclType	time_t		166295	0					
ANR	166324	Identifier	timeout		166295	1					
ANR	166325	IdentifierDeclStatement	KSI_CTX * ksi_ctx ;	1193:1:30651:30667	166295	4	True				
ANR	166326	IdentifierDecl	* ksi_ctx		166295	0					
ANR	166327	IdentifierDeclType	KSI_CTX *		166295	0					
ANR	166328	Identifier	ksi_ctx		166295	1					
ANR	166329	ExpressionStatement	ctx -> thread_started = true	1195:1:30671:30697	166295	5	True				
ANR	166330	AssignmentExpression	ctx -> thread_started = true		166295	0		=			
ANR	166331	PtrMemberAccess	ctx -> thread_started		166295	0					
ANR	166332	Identifier	ctx		166295	0					
ANR	166333	Identifier	thread_started		166295	1					
ANR	166334	Identifier	true		166295	1					
ANR	166335	ExpressionStatement	KSI_CTX_new ( & ksi_ctx )	1197:1:30701:30722	166295	6	True				
ANR	166336	CallExpression	KSI_CTX_new ( & ksi_ctx )		166295	0					
ANR	166337	Callee	KSI_CTX_new		166295	0					
ANR	166338	Identifier	KSI_CTX_new		166295	0					
ANR	166339	ArgumentList	& ksi_ctx		166295	1					
ANR	166340	Argument	& ksi_ctx		166295	0					
ANR	166341	UnaryOperationExpression	& ksi_ctx		166295	0					
ANR	166342	UnaryOperator	&		166295	0					
ANR	166343	Identifier	ksi_ctx		166295	1					
ANR	166344	ExpressionStatement	"KSI_CTX_setAggregator ( ksi_ctx , ctx -> aggregatorUri , ctx -> aggregatorId , ctx -> aggregatorKey )"	1198:1:30725:30814	166295	7	True				
ANR	166345	CallExpression	"KSI_CTX_setAggregator ( ksi_ctx , ctx -> aggregatorUri , ctx -> aggregatorId , ctx -> aggregatorKey )"		166295	0					
ANR	166346	Callee	KSI_CTX_setAggregator		166295	0					
ANR	166347	Identifier	KSI_CTX_setAggregator		166295	0					
ANR	166348	ArgumentList	ksi_ctx		166295	1					
ANR	166349	Argument	ksi_ctx		166295	0					
ANR	166350	Identifier	ksi_ctx		166295	0					
ANR	166351	Argument	ctx -> aggregatorUri		166295	1					
ANR	166352	PtrMemberAccess	ctx -> aggregatorUri		166295	0					
ANR	166353	Identifier	ctx		166295	0					
ANR	166354	Identifier	aggregatorUri		166295	1					
ANR	166355	Argument	ctx -> aggregatorId		166295	2					
ANR	166356	PtrMemberAccess	ctx -> aggregatorId		166295	0					
ANR	166357	Identifier	ctx		166295	0					
ANR	166358	Identifier	aggregatorId		166295	1					
ANR	166359	Argument	ctx -> aggregatorKey		166295	3					
ANR	166360	PtrMemberAccess	ctx -> aggregatorKey		166295	0					
ANR	166361	Identifier	ctx		166295	0					
ANR	166362	Identifier	aggregatorKey		166295	1					
ANR	166363	WhileStatement	while ( true )		166295	8					
ANR	166364	Condition	true	1200:8:30825:30828	166295	0	True				
ANR	166365	Identifier	true		166295	0					
ANR	166366	CompoundStatement		14:14:280:280	166295	1					
ANR	166367	ExpressionStatement	timeout = 1	1201:2:30835:30846	166295	0	True				
ANR	166368	AssignmentExpression	timeout = 1		166295	0		=			
ANR	166369	Identifier	timeout		166295	0					
ANR	166370	PrimaryExpression	1		166295	1					
ANR	166371	ExpressionStatement	"ProtectedQueue_waitForItem ( ctx -> signer_queue , NULL , timeout * 1000 )"	1204:2:30890:30957	166295	1	True				
ANR	166372	CallExpression	"ProtectedQueue_waitForItem ( ctx -> signer_queue , NULL , timeout * 1000 )"		166295	0					
ANR	166373	Callee	ProtectedQueue_waitForItem		166295	0					
ANR	166374	Identifier	ProtectedQueue_waitForItem		166295	0					
ANR	166375	ArgumentList	ctx -> signer_queue		166295	1					
ANR	166376	Argument	ctx -> signer_queue		166295	0					
ANR	166377	PtrMemberAccess	ctx -> signer_queue		166295	0					
ANR	166378	Identifier	ctx		166295	0					
ANR	166379	Identifier	signer_queue		166295	1					
ANR	166380	Argument	NULL		166295	1					
ANR	166381	Identifier	NULL		166295	0					
ANR	166382	Argument	timeout * 1000		166295	2					
ANR	166383	MultiplicativeExpression	timeout * 1000		166295	0		*			
ANR	166384	Identifier	timeout		166295	0					
ANR	166385	PrimaryExpression	1000		166295	1					
ANR	166386	ExpressionStatement	sigblkCheckTimeOut ( ctx )	1207:2:30996:31019	166295	2	True				
ANR	166387	CallExpression	sigblkCheckTimeOut ( ctx )		166295	0					
ANR	166388	Callee	sigblkCheckTimeOut		166295	0					
ANR	166389	Identifier	sigblkCheckTimeOut		166295	0					
ANR	166390	ArgumentList	ctx		166295	1					
ANR	166391	Argument	ctx		166295	0					
ANR	166392	Identifier	ctx		166295	0					
ANR	166393	IfStatement	if ( ProtectedQueue_count ( ctx -> signer_queue ) == 0 )		166295	3					
ANR	166394	Condition	ProtectedQueue_count ( ctx -> signer_queue ) == 0	1210:6:31072:31115	166295	0	True				
ANR	166395	EqualityExpression	ProtectedQueue_count ( ctx -> signer_queue ) == 0		166295	0		==			
ANR	166396	CallExpression	ProtectedQueue_count ( ctx -> signer_queue )		166295	0					
ANR	166397	Callee	ProtectedQueue_count		166295	0					
ANR	166398	Identifier	ProtectedQueue_count		166295	0					
ANR	166399	ArgumentList	ctx -> signer_queue		166295	1					
ANR	166400	Argument	ctx -> signer_queue		166295	0					
ANR	166401	PtrMemberAccess	ctx -> signer_queue		166295	0					
ANR	166402	Identifier	ctx		166295	0					
ANR	166403	Identifier	signer_queue		166295	1					
ANR	166404	PrimaryExpression	0		166295	1					
ANR	166405	ContinueStatement	continue ;	1211:3:31121:31129	166295	1	True				
ANR	166406	WhileStatement	"while ( ProtectedQueue_peekFront ( ctx -> signer_queue , ( void * * ) & item ) && item -> type == QITEM_SIGNATURE_REQUEST )"		166295	4					
ANR	166407	Condition	"ProtectedQueue_peekFront ( ctx -> signer_queue , ( void * * ) & item ) && item -> type == QITEM_SIGNATURE_REQUEST"	1215:9:31246:31348	166295	0	True				
ANR	166408	AndExpression	"ProtectedQueue_peekFront ( ctx -> signer_queue , ( void * * ) & item ) && item -> type == QITEM_SIGNATURE_REQUEST"		166295	0		&&			
ANR	166409	CallExpression	"ProtectedQueue_peekFront ( ctx -> signer_queue , ( void * * ) & item )"		166295	0					
ANR	166410	Callee	ProtectedQueue_peekFront		166295	0					
ANR	166411	Identifier	ProtectedQueue_peekFront		166295	0					
ANR	166412	ArgumentList	ctx -> signer_queue		166295	1					
ANR	166413	Argument	ctx -> signer_queue		166295	0					
ANR	166414	PtrMemberAccess	ctx -> signer_queue		166295	0					
ANR	166415	Identifier	ctx		166295	0					
ANR	166416	Identifier	signer_queue		166295	1					
ANR	166417	Argument	( void * * ) & item		166295	1					
ANR	166418	CastExpression	( void * * ) & item		166295	0					
ANR	166419	CastTarget	void * *		166295	0					
ANR	166420	UnaryOperationExpression	& item		166295	1					
ANR	166421	UnaryOperator	&		166295	0					
ANR	166422	Identifier	item		166295	1					
ANR	166423	EqualityExpression	item -> type == QITEM_SIGNATURE_REQUEST		166295	1		==			
ANR	166424	PtrMemberAccess	item -> type		166295	0					
ANR	166425	Identifier	item		166295	0					
ANR	166426	Identifier	type		166295	1					
ANR	166427	Identifier	QITEM_SIGNATURE_REQUEST		166295	1					
ANR	166428	CompoundStatement		30:45:800:800	166295	1					
ANR	166429	ExpressionStatement	"process_requests ( ctx , ksi_ctx , ksiFile )"	1217:3:31356:31395	166295	0	True				
ANR	166430	CallExpression	"process_requests ( ctx , ksi_ctx , ksiFile )"		166295	0					
ANR	166431	Callee	process_requests		166295	0					
ANR	166432	Identifier	process_requests		166295	0					
ANR	166433	ArgumentList	ctx		166295	1					
ANR	166434	Argument	ctx		166295	0					
ANR	166435	Identifier	ctx		166295	0					
ANR	166436	Argument	ksi_ctx		166295	1					
ANR	166437	Identifier	ksi_ctx		166295	0					
ANR	166438	Argument	ksiFile		166295	2					
ANR	166439	Identifier	ksiFile		166295	0					
ANR	166440	ContinueStatement	continue ;	1218:3:31400:31408	166295	1	True				
ANR	166441	IfStatement	"if ( ProtectedQueue_popFront ( ctx -> signer_queue , ( void * * ) & item ) != 0 )"		166295	5					
ANR	166442	Condition	"ProtectedQueue_popFront ( ctx -> signer_queue , ( void * * ) & item ) != 0"	1222:6:31462:31524	166295	0	True				
ANR	166443	EqualityExpression	"ProtectedQueue_popFront ( ctx -> signer_queue , ( void * * ) & item ) != 0"		166295	0		!=			
ANR	166444	CallExpression	"ProtectedQueue_popFront ( ctx -> signer_queue , ( void * * ) & item )"		166295	0					
ANR	166445	Callee	ProtectedQueue_popFront		166295	0					
ANR	166446	Identifier	ProtectedQueue_popFront		166295	0					
ANR	166447	ArgumentList	ctx -> signer_queue		166295	1					
ANR	166448	Argument	ctx -> signer_queue		166295	0					
ANR	166449	PtrMemberAccess	ctx -> signer_queue		166295	0					
ANR	166450	Identifier	ctx		166295	0					
ANR	166451	Identifier	signer_queue		166295	1					
ANR	166452	Argument	( void * * ) & item		166295	1					
ANR	166453	CastExpression	( void * * ) & item		166295	0					
ANR	166454	CastTarget	void * *		166295	0					
ANR	166455	UnaryOperationExpression	& item		166295	1					
ANR	166456	UnaryOperator	&		166295	0					
ANR	166457	Identifier	item		166295	1					
ANR	166458	PrimaryExpression	0		166295	1					
ANR	166459	CompoundStatement		36:71:976:976	166295	1					
ANR	166460	IfStatement	if ( item -> type == QITEM_CLOSE_FILE )		166295	0					
ANR	166461	Condition	item -> type == QITEM_CLOSE_FILE	1223:7:31536:31565	166295	0	True				
ANR	166462	EqualityExpression	item -> type == QITEM_CLOSE_FILE		166295	0		==			
ANR	166463	PtrMemberAccess	item -> type		166295	0					
ANR	166464	Identifier	item		166295	0					
ANR	166465	Identifier	type		166295	1					
ANR	166466	Identifier	QITEM_CLOSE_FILE		166295	1					
ANR	166467	CompoundStatement		37:39:1017:1017	166295	1					
ANR	166468	ExpressionStatement	fclose ( ksiFile )	1224:4:31574:31589	166295	0	True				
ANR	166469	CallExpression	fclose ( ksiFile )		166295	0					
ANR	166470	Callee	fclose		166295	0					
ANR	166471	Identifier	fclose		166295	0					
ANR	166472	ArgumentList	ksiFile		166295	1					
ANR	166473	Argument	ksiFile		166295	0					
ANR	166474	Identifier	ksiFile		166295	0					
ANR	166475	ExpressionStatement	ksiFile = NULL	1225:4:31595:31609	166295	1	True				
ANR	166476	AssignmentExpression	ksiFile = NULL		166295	0		=			
ANR	166477	Identifier	ksiFile		166295	0					
ANR	166478	Identifier	NULL		166295	1					
ANR	166479	ElseStatement	else		166295	0					
ANR	166480	IfStatement	if ( item -> type == QITEM_NEW_FILE )		166295	0					
ANR	166481	Condition	item -> type == QITEM_NEW_FILE	1226:14:31625:31652	166295	0	True				
ANR	166482	EqualityExpression	item -> type == QITEM_NEW_FILE		166295	0		==			
ANR	166483	PtrMemberAccess	item -> type		166295	0					
ANR	166484	Identifier	item		166295	0					
ANR	166485	Identifier	type		166295	1					
ANR	166486	Identifier	QITEM_NEW_FILE		166295	1					
ANR	166487	CompoundStatement		40:44:1104:1104	166295	1					
ANR	166488	ExpressionStatement	ksiFile = ( FILE * ) item -> arg	1227:4:31661:31688	166295	0	True				
ANR	166489	AssignmentExpression	ksiFile = ( FILE * ) item -> arg		166295	0		=			
ANR	166490	Identifier	ksiFile		166295	0					
ANR	166491	CastExpression	( FILE * ) item -> arg		166295	1					
ANR	166492	CastTarget	FILE *		166295	0					
ANR	166493	PtrMemberAccess	item -> arg		166295	1					
ANR	166494	Identifier	item		166295	0					
ANR	166495	Identifier	arg		166295	1					
ANR	166496	ElseStatement	else		166295	0					
ANR	166497	IfStatement	if ( item -> type == QITEM_QUIT )		166295	0					
ANR	166498	Condition	item -> type == QITEM_QUIT	1228:14:31704:31727	166295	0	True				
ANR	166499	EqualityExpression	item -> type == QITEM_QUIT		166295	0		==			
ANR	166500	PtrMemberAccess	item -> type		166295	0					
ANR	166501	Identifier	item		166295	0					
ANR	166502	Identifier	type		166295	1					
ANR	166503	Identifier	QITEM_QUIT		166295	1					
ANR	166504	CompoundStatement		42:40:1179:1179	166295	1					
ANR	166505	IfStatement	if ( ksiFile )		166295	0					
ANR	166506	Condition	ksiFile	1229:8:31740:31746	166295	0	True				
ANR	166507	Identifier	ksiFile		166295	0					
ANR	166508	ExpressionStatement	fclose ( ksiFile )	1230:5:31754:31769	166295	1	True				
ANR	166509	CallExpression	fclose ( ksiFile )		166295	0					
ANR	166510	Callee	fclose		166295	0					
ANR	166511	Identifier	fclose		166295	0					
ANR	166512	ArgumentList	ksiFile		166295	1					
ANR	166513	Argument	ksiFile		166295	0					
ANR	166514	Identifier	ksiFile		166295	0					
ANR	166515	ExpressionStatement	free ( item )	1231:4:31775:31785	166295	1	True				
ANR	166516	CallExpression	free ( item )		166295	0					
ANR	166517	Callee	free		166295	0					
ANR	166518	Identifier	free		166295	0					
ANR	166519	ArgumentList	item		166295	1					
ANR	166520	Argument	item		166295	0					
ANR	166521	Identifier	item		166295	0					
ANR	166522	BreakStatement	break ;	1232:4:31791:31796	166295	2	True				
ANR	166523	ExpressionStatement	free ( item )	1234:3:31806:31816	166295	1	True				
ANR	166524	CallExpression	free ( item )		166295	0					
ANR	166525	Callee	free		166295	0					
ANR	166526	Identifier	free		166295	0					
ANR	166527	ArgumentList	item		166295	1					
ANR	166528	Argument	item		166295	0					
ANR	166529	Identifier	item		166295	0					
ANR	166530	ExpressionStatement	KSI_CTX_free ( ksi_ctx )	1238:1:31827:31848	166295	9	True				
ANR	166531	CallExpression	KSI_CTX_free ( ksi_ctx )		166295	0					
ANR	166532	Callee	KSI_CTX_free		166295	0					
ANR	166533	Identifier	KSI_CTX_free		166295	0					
ANR	166534	ArgumentList	ksi_ctx		166295	1					
ANR	166535	Argument	ksi_ctx		166295	0					
ANR	166536	Identifier	ksi_ctx		166295	0					
ANR	166537	ExpressionStatement	ctx -> thread_started = false	1239:1:31851:31878	166295	10	True				
ANR	166538	AssignmentExpression	ctx -> thread_started = false		166295	0		=			
ANR	166539	PtrMemberAccess	ctx -> thread_started		166295	0					
ANR	166540	Identifier	ctx		166295	0					
ANR	166541	Identifier	thread_started		166295	1					
ANR	166542	Identifier	false		166295	1					
ANR	166543	ReturnStatement	return NULL ;	1240:1:31881:31892	166295	11	True				
ANR	166544	Identifier	NULL		166295	0					
ANR	166545	ReturnType	void *		166295	1					
ANR	166546	Identifier	signer_thread		166295	2					
ANR	166547	ParameterList	void * arg		166295	3					
ANR	166548	Parameter	void * arg	1187:20:30539:30547	166295	0	True				
ANR	166549	ParameterType	void *		166295	0					
ANR	166550	Identifier	arg		166295	1					
ANR	166551	CFGEntryNode	ENTRY		166295		True				
ANR	166552	CFGExitNode	EXIT		166295		True				
ANR	166553	Symbol	& item		166295						
ANR	166554	Symbol	item -> type		166295						
ANR	166555	Symbol	ksi_ctx		166295						
ANR	166556	Symbol	timeout		166295						
ANR	166557	Symbol	QITEM_SIGNATURE_REQUEST		166295						
ANR	166558	Symbol	& ksi_ctx		166295						
ANR	166559	Symbol	ctx -> aggregatorUri		166295						
ANR	166560	Symbol	ProtectedQueue_popFront		166295						
ANR	166561	Symbol	* item		166295						
ANR	166562	Symbol	arg		166295						
ANR	166563	Symbol	ctx -> aggregatorKey		166295						
ANR	166564	Symbol	QITEM_CLOSE_FILE		166295						
ANR	166565	Symbol	item		166295						
ANR	166566	Symbol	NULL		166295						
ANR	166567	Symbol	ProtectedQueue_count		166295						
ANR	166568	Symbol	ctx		166295						
ANR	166569	Symbol	ctx -> aggregatorId		166295						
ANR	166570	Symbol	ctx -> signer_queue		166295						
ANR	166571	Symbol	false		166295						
ANR	166572	Symbol	item -> arg		166295						
ANR	166573	Symbol	ProtectedQueue_peekFront		166295						
ANR	166574	Symbol	* ctx		166295						
ANR	166575	Symbol	ctx -> thread_started		166295						
ANR	166576	Symbol	true		166295						
ANR	166577	Symbol	QITEM_NEW_FILE		166295						
ANR	166578	Symbol	ksiFile		166295						
ANR	166579	Symbol	QITEM_QUIT		166295						
